fsubl sbb xor ficom fadd jbe mov jg jg fst rex.WRX mov or rex.W add jl mov (bad) (bad) jl (bad) rex.WR rex.WRXB fwait lods cmp mov outsl add cmp sub cmp (bad) pop (bad) sti mov loop stos pop flds cltd out fs addr32 pop iret in cld mov rclb cmp (bad) imul xchg bsr (bad) and lods sbb rex.WB (bad) (bad) rorl pop add test retq or sub lods lods test jb mov sbb rex.RX out jmp imul rex.XB pop maskmovq idivl mov rex.RXB mov fmuls pop mov retq rex.WXB and cmp orb (bad) mov and lods pop add pop jmp jmpq xchg jmpq jmpq je cmc sub test bt bt cmp jmpq push pop mov mov (bad) popfq (bad) and sahf push sub mov rex.WRXB xchg pop mov incb lods fildl rex.W callq enterq (bad) (bad) (bad) mov cmp (bad) mov (bad) test pop jge iret (bad) rex.RXB xchg push push pop (bad) cmc in out mov lock cmc or sbb (bad) cs sbb adc pushfq add jo out (bad) (bad) sti xchg ljmp push mov (bad) mov mov (bad) jmpq nop push xor (bad) pop or xchg rex.RB out mov sbb mov jmpq cli add shrb (bad) push std fidiv jmp (bad) lret scas loop (bad) xor adc mov xchg (bad) (bad) rex.WR bsf ror push setno dec mov neg movzbw sub lea bswap movsbw lea jmpq add not bsr mov stc cmp bt and bt cmc test add test jmpq bt add jmpq pop xchg adc loop jl cwtl (bad) (bad) cmp sub mov scas xchg push or push out (bad) (bad) lea fxrstor (bad) shr and xorl lea sbb and (bad) sub adc leaveq imul mov out adc add sahf mov popfq out rcll add sti imulb shr sub (bad) (bad) incb sbb ds pop (bad) (bad) (bad) and xchg rex.R shl mulb divb xchg lahf jae xchg shll icebp out mov mov (bad) xor mov (bad) xor in add add (bad) imul add movabs cwtl mov lods add mov push (bad) (bad) mov sub lods movsb lret (bad) rcll lahf int sti out sar xor mov rex (bad) lock imul adc mov ja bt add jmpq ja shr sub shrd add mov cmc mov jmpq (bad) outsb xchg jns icebp add and scas std pop fsub adc xchg cmp fs mov rcrl loop insb lea rex.R pushq loope fcomi icebp cmpsb or add and push push xchg (bad) rex.X jb icebp repz outsb rex.X sub (bad) mov and mov (bad) sti lea pop in (bad) (bad) (bad) (bad) sub jbe push pop mov (bad) (bad) (bad) ljmp movsb (bad) rex.WX (bad) test mov std or imul and pop rex insb cmp mov mov add jge xchg ja jbe or fadds lea sti adc jae and cmp cmp outsl xchg and in adc or add pushq sbb data16 pop sbb sbb (bad) jo jmp test ds push nop sub xchg add loope jbe clc jae jo imul or add mov (bad) pop adc sbb adc mov (bad) decb adc xchg jno (bad) (bad) sbb rex.WXB sbb decl lret rorb xchg andl (bad) cmpl lock and and or int3 fsubrs rex.WRXB sub rex.WX enterq add insb add or (bad) pop cltd rex.WX (bad) xor ss lret loop cmpsb imul (bad) out (bad) test incl out and hlt in mov nop pop xchg fwait mov push (bad) rex.X push rex.WR repnz jg stos std fbld retq cmpl jne lock leaveq mov jno,pt xchg (bad) mov mov push mov jno cmpsb fdivr (bad) (bad) std js data16 jo sbb adc es je mov pushq bnd mov pop fisubr pushfq sbb outsb push (bad) andb jo cmpsl ficoml xor add add or in jp push gs fdivr pushfq out fbld mov xchg adc pushq fidivrl or insb xor stos sti push out pop adc xor (bad) jmp outsb int js fwait pop testb sahf scas jle jno rex.B lock out mov lret sar bt add sets lea sub movsbw mov cmc bt stc clc cmpb jmpq je jmpq je movzbq xchg lea lea movsbw not movzwl jmpq jne xor bswap jmpq jmpq jmpq jmpq mov clc xchg push jp or mov or mov and xchg movabs test mov sbbl rex.X mov rex.WR (bad) rcrl icebp vpaddw (bad) loopne jle push (bad) std fidiv fidivr retq (bad) (bad) (bad) dec (bad) mov mov jns (bad) out pop rex.XB ss ss mov jp adc repnz xchg in push movsl (bad) jmp jne int (bad) cmp jnp cmpsb mov adc mov cmp xchg clc ss xchg fwait not movsl andl (bad) repnz adc jmpq jmpq mov pop mov mov andb movsl pushq mov fwait mov sub xchg xor (bad) (bad) mull rex movsb rex.WXB (bad) insl add push addr32 sub ja xchg repnz std fwait cmpsl sub lea subl push add jp (bad) leaveq mov jg jae push rex.RX sbb out cli rex.WRB loop fstps fimul rex.WX and pextrw push cmp (bad) (bad) cld (bad) ja add (bad) (bad) (bad) dec adc rex (bad) fwait rcll rex.WRXB mov add or std mov (bad) mov add mov (bad) movabs mov lock sbb pop (bad) loope xlat mov jg pop xor (bad) sbb mov fidivr add incl cmc test jmpq je cmc sub test stc test clc cmp jmpq jmpq add rex.RXB gs gs imul movabs adc adc and sub (bad) lret stc (bad) lret fdivr shr adc mov pop push fwait mov jns rex.R jl (bad) (bad) (bad) (bad) sub retq mov movabs fisttpl mov (bad) cli movabs or out (bad) movsl shlb (bad) pop fsubrl mov (bad) (bad) (bad) std (bad) xchg xchg rex.W add add cmp test (bad) xorb (bad) scas xchg adc mov (bad) sbb or int3 movsb mov out sub adc movsl out rex.RB imul (bad) test (bad) add sub test cmp repnz jmpq ja or cs test fmuls sbb loopne and mov jb push mov icebp movabs xor mov add (bad) sbb and lret movabs movabs data16 movsl cwtl (bad) lock cmpsl mov sti sub mov push movslq (bad) iret (bad) (bad) (bad) sti pop callq (bad) (bad) std out xchg data16 sub or insl cmc mov rex.RX or rex.WB std es add mov dec nop xor add incl pop rex.WX rolb lods shlb loopne add sbb rex.WX cli and int enterq xor data16 (bad) pop rex.WR mov xchg mov push cli jae test cmp bt stc sub jl callq jmpq (bad) ja or push rex.R ss (bad) pushfq loope int3 movslq pop rex (bad) nop and rex.WRX mov lret add fisttp mov test test add sbb mov rex.R cmp pop push cmp mov mov rex.WXB rex rex.WRXB and push movabs or add sub and or lods mov mov adc clc jae test add cwtl es xchg mov sti cld xor adc ja mov xchg push sbb pushfq sub std xchg mov rex.WRB pop sti sarb mov in imul lods pop add callq bswap neg movsbw add or movzbw jns dec mov test clc cmpb jmpq push xchg rex.X sarb data16 (bad) (bad) xor xor rex.XB lret adc loop push addr32 rex xor mov and movslq (bad) mov (bad) (bad) cmpsl mov pop cmp outsb pushq rex.B nop jne cli js (bad) (bad) (bad) sti rex.XB movabs jrcxz sbb (bad) (bad) (bad) loop (bad) std mov rex.R rex.WRX fldl rex.RB gs sub divb rex.W (bad) fmull shrl xchg sahf push (bad) pop movslq mov add stos rex.RX (bad) rol fildll cmpsl adc add mov jl rex.WRXB lock jae xchg ljmp xor fnstsw adc rex.RX push icebp rex.WRB xchg scas sbb xor and mov adc cmc or (bad) pop jbe sbb mov sub xchg (bad) add adc jb fmul (bad) cs xchg cmp and or sahf rex.X sub (bad) test xor mov xchg int3 xchg push push jp mov sub (bad) rex.WXB sub loopne (bad) (bad) jnp (bad) xorb cmp sbb rex.WRX xor lods lret lret (bad) add jne and add (bad) (bad) addr32 mov pop (bad) mov testb cmp (bad) (bad) (bad) (bad) (bad) je std es (bad) (bad) decb (bad) (bad) (bad) incl sbb hlt movabs push or pop in mov (bad) jne outsb mov repnz sarb (bad) fistpll pushq fcomi (bad) movabs add and (bad) leavew retq hlt xchg leaveq or int3 sbb xchg icebp jmpq cmpsl repz imul leaveq retq rex.WRB rex.B cmpsb cmc leaveq fstl movabs push xor leaveq xchg and movabs cld cmpsb (bad) hlt movabs rex.RB cmp in leaveq mov jno hlt (bad) int3 cmpsl cltd movsb xor xchg ss xchg xchg xchg and movabs leaveq test cltd int3 movabs mov std out jl test leaveq cmc xchg je hlt (bad) xchg push leaveq (bad) jrcxz rex.WRB (bad) xchg leaveq adc cmpsl xchg leaveq loope rex.WB fistl hlt leaveq cmc xchg mov repz je mov test cltd xchg leaveq pop xor leaveq cld jnp leaveq test and mov xchg outsb fstl jl in cld push hlt add rex.WRB (bad) fwait add rex.R hlt ror and (bad) hlt in sahf or in leaveq cmpsl jne or movabs int3 gs (bad) leaveq (bad) int3 jne cld rorl lahf hlt mov and lret (bad) jno repz stc hlt leaveq addl sti sbb movslq leaveq fidivrl pop xchg out jno test or xor (bad) test add nop mov test xor and jl clc leaveq ror jge hlt xchg mov hlt icebp mov in stc leaveq movsb xor movsl fmul mov test mov insb cmpsl push hlt xor mov add leaveq or leaveq leaveq cld (bad) int3 icebp (bad) cld sub cmpsb mov fabs sub xor leaveq (bad) cmp lods test leaveq sub int3 sbb mov leaveq insl cld icebp rex.WR sbb rex.WB jno jrcxz jmp rex.WRB rex.RB adcl xchg mov leaveq adcl add mov test (bad) leaveq stos xchg int3 xor (bad) leaveq rex.XB sbb fbld rex.WR cmpsb xchg adc leaveq cs rex.RB hlt leaveq leaveq movsl (bad) (bad) cld icebp xchg hlt push int3 sbb icebp test cltd loope (bad) hlt in int3 push stc (bad) leaveq sub int3 fucom jmp xchg mov leaveq sub or rex.WB push adc in (bad) adc xchg cltd push leaveq lods (bad) xchg xor mov push hlt rex.X in rex.B adc adc adc lea decl hlt adc lret imul icebp push rex.R leaveq push int3 test push int3 or in addr32 adc insb push (bad) sub cld clc hlt (bad) pop adc hlt repz je cmpl cmp cmpsl xchg hlt mov test mov xor pop int3 add addr32 leaveq adc gs out ds movsl jne and jmpq int3 sbb (bad) int3 (bad) movslq leaveq cmpsl or jno test callq xchg jl movabs mov rex.WR and cld and out pop out xchg xchg hlt mov rex.WB mov leaveq add (bad) leaveq mov in test clc leaveq (bad) rex.WB leaveq gs push hlt sbb je add loopne cmp xchg orl out cmp hlt outsl jne xchg jno leaveq ficoml int3 std stc hlt leaveq rex.B rex.X push movslq leaveq cmpsb ja flds sub xor leaveq xchg pushq or or rex.WB rex.XB rex.B rex.R jl sub pop jrcxz movabs clc hlt mov cmpsl movsb mov out sub movsb div rex.WRX rex.WRXB (bad) test lahf hlt xor (bad) js int icebp rex.WR idivb or hlt (bad) int3 jge xchg jb and leaveq ss push cld and retq mov notl movabs cld rex.B repz mov leaveq cld sbb in movslq leaveq xchg idivb stc test leaveq jmpq (bad) leaveq xchg xchg int3 fstps leaveq sahf jle icebp xchg stos xor jno mov int and adc hlt (bad) (bad) insl or adc int3 rex.B lock leaveq cmpsl add leaveq icebp (bad) adc mov xchg int3 mov (bad) leaveq xchg int3 cltd or movabs int3 jmpq cmpsl fs int rex.WR pop rex.WXB fucomp rcrl mov sub movslq xchg mov (bad) mov (bad) mov clc hlt movabs int3 mov int3 movsl mov add (bad) hlt movsb mov xchg pushq leaveq cmpb stc jrcxz sub jmpq in mov hlt jo add mov setne push stc xchg clc imul jne int xchg rex.WB icebp (bad) rex.WRX imulb rex.WB xchg xor rex.R mov jrcxz mov push subl loopne or adc (bad) leaveq addr32 test sbb (bad) xchg cmp outsl adc xor leaveq xchg pop int3 or adc sbb xchg int3 adc int3 (bad) xor leaveq (bad) enterq cld icebp jl push int3 std jmpq fwait adc lahf xchg xor out leaveq cmpsl lods int3 pop movabs leaveq (bad) int3 test xor test icebp stc (bad) xchg jge loope hlt loopne mov in sbb incb fisttp jno sti (bad) and cmc hlt lret cmp jo int3 fsts rolb loope movabs hlt pop (bad) scas (bad) xchg xchg rex.B addr32 sbb add hlt out pushfq or sub mov insb jno test int3 mov (bad) xchg sub (bad) xchg shll sub roll xchg loope mov (bad) cld xchg mov hlt pushq imul hlt movabs xor add int loope mov int push mov jge (bad) hlt (bad) cmp xchg sub (bad) hlt callq (bad) leaveq jg test sbb add leaveq in int3 cmp stc icebp hlt hlt ja,pt cmpsl loope test int3 (bad) adc int3 adc leaveq cld (bad) cmp leaveq cmpsl (bad) int3 rex.RB test imul ja jno out and sub leaveq cmp int3 and lea (bad) popfq xchg cmp hlt adc cmp (bad) sbb mov cld movabs hlt jmp sub sub sub movsb hlt jl adc (bad) rex.WR data16 leaveq xchg adc hlt stos (bad) je icebp push or lret sarl rex.RXB test or movslq leaveq cmpsl addr32 push stc rex.WR sub int3 lea leaveq repz mov (bad) cltd jns add lods nop fadd xchg repnz jmp xlat rex.RB or and icebp fnop xchg stc (bad) leaveq fs int3 sbb int3 insl xor leaveq xchg sbb add jae cmpsl gs hlt in mov add hlt lods (bad) cmc mov push (bad) hlt mov rex.RB xor popfq mov int3 leaveq xor push cmpsl lret leaveq sbb (bad) adc imul int3 jns (bad) leaveq jge or (bad) rex.WB int lods or mov jnp mov out cmc repnz leaveq xchg cld loope hlt fwait icebp leaveq test hlt fs jno xchg adc xchg or leaveq loope xchg xor rex.WRX int cmc leaveq sub mov movabs xchg gs leaveq add jns (bad) int3 xchg (bad) clc hlt rex.WRB frstor adc leaveq mov xchg add loope hlt pop std leaveq jmpq jle callq mov leaveq and sbb rex.WB or xor (bad) out xchg pop (bad) hlt (bad) in je add hlt js jmp cmpsl movsb (bad) hlt jmp out jno (bad) push int3 rex.RB leaveq pop cmpsl in leaveq push cld cmpsl icebp hlt cmp movsl movabs hlt add cld movabs rex cmp leaveq std mov xor loope in js icebp jo jno movabs rex.WB pushfq popfq jae fadd int or sub insb leaveq adc cmp out and movsl or roll mov leaveq repz lret leaveq pop cld icebp xchg hlt (bad) int3 and xchg or test rex.RX hlt enterq (bad) insb movabs hlt scas rex.W vpmuludq popfq roll hlt (bad) mov in mov xchg icebp fcomps cmc xor insl jne adc retq pop mov leaveq mov out in (bad) test leaveq iret sub xchg int loope cmp rex.WR mov out movsl int3 test lods int3 gs push icebp and (bad) hlt push mov insb (bad) jmp mov int shl or xor sbb int hlt fbstp rex.RB lret rex.WB icebp add fldcw hlt cmp jge and lods (bad) movabs icebp leaveq xchg mov pop test leaveq mov int3 test xchg int3 mov jnp xchg xor hlt pop int3 fs leaveq or leaveq or xor mov icebp hlt rex.B hlt pushfq mov xor hlt icebp lods rcl loope hlt test mov repz int3 (bad) stc add hlt sbb add lret movabs je cmp hlt xchg test add fsub mov stos (bad) rex.R push cld hlt adc hlt jmp scas rorl (bad) in movabs rolb cltd test push jno int mov pushq cld adc cmpsl pop adc pop pop mov hlt rex.WXB (bad) jns jno loope adc stc (bad) leaveq jg int3 cmc out leaveq cmpsb ss fucomp sub cmc stc out jg test add insl movsl cld xor mov in int3 jno rex.WB rex.WRB rex.RX fadd int jne lods xor leaveq xchg outsl int3 mov jg rex.WB cltd stc (bad) hlt pop rex.RXB sarb (bad) div int3 push mov hlt xchg rex.WRXB or icebp leaveq (bad) mov pushfq test leaveq or mov lea cmpsl mov fmul jp or je rorb hlt stc js sbb lods xchg int3 orl and or rex.WB jp jne outsb imul roll add sahf jl out hlt scas lods int3 subl add jl int3 insl movslq leaveq cmpsl adc jge rex.WR sbb cld add int retq pop jmpq leaveq lea leaveq xchg and popfq test leaveq int3 movsl jge callq int3 pop test leaveq leaveq mov test int3 andl xchg cld test rex.WR gs lods (bad) retq xchg pushq insl and nop mov int hlt mov int rex.WXB (bad) insb int jl (bad) jae (bad) rex.WR push imul cld xor (bad) jae leaveq (bad) repz out movsb xor rex.XB stc jno hlt int jbe (bad) cmpsb xchg hlt xchg sbb leaveq std cmp scas icebp xchg xchg loope sbb sub in sbb jl xchg hlt cmp sbb jno test cmp hlt psrad leaveq xchg jmp xchg callq leaveq cld movsl int3 cmp leaveq out add (bad) test leaveq mov leaveq movabs jne cld rex.B (bad) sbb add xchg mov mov decl jno notl cmp leaveq out xchg loope div pop or scas or push (bad) hlt (bad) in or int3 je (bad) lea hlt out or hlt (bad) adc icebp (bad) hlt retq cwtl in stc stc pushfq icebp (bad) xor out loope in pop mov rex.RB or insl cmp lea hlt jne cmp int3 xchg test leaveq rex.WXB cmp cld xor loope cld add xor jae (bad) leaveq out sub xchg xchg hlt xor xor out (bad) jle div (bad) and hlt movabs sub cld cmpsb xor nop sub leaveq insb add leaveq mov and cs xchg adc fnstcw int3 xchg cld repz cld (bad) hlt and hlt repz ror rex.WB test and leaveq fidivrl cmp int3 xchg shl leaveq ja xchg leaveq cmc cld (bad) xchg hlt ss in test xchg jno leaveq pushfq or rex.WR rex.WRXB testl rcr hlt leaveq cwtl (bad) test jl xor jns hlt fst jae cmp sti mov leaveq xchg or leaveq push int3 test int3 xlat and hlt sbb jmpq adcl sbb fcompl cld (bad) int3 movslq leaveq test int3 pop leaveq lods fildl lahf out leaveq out fsubrp jno or cld xchg rex.WR jge stc leaveq xchg movslq rex.WRB adc push fist rex.B pop andb leaveq or pop mov leaveq (bad) retq or retq (bad) mov stos (bad) hlt jp leaveq test test leaveq int or leaveq shrl iret fcompl hlt insb leaveq lea repnz jns hlt gs or cltd adc (bad) gs mov (bad) or xchg hlt xchg pop in in (bad) (bad) rex.B xchg leaveq test addr32 xchg leaveq (bad) out leaveq stc stc (bad) leaveq (bad) xchg int3 leaveq cld and leaveq pushq int leaveq mov or add leaveq cmpsl mov movabs out loope in leaveq mov cmp mov (bad) leaveq rex.WRB addr32 test sub leaveq and int3 and xchg sub leaveq add stc leaveq sti adc imul int3 rex.RB sbb xchg leaveq (bad) cmc stc icebp hlt out xchg jae jge int xchg icebp (bad) cmpsl xchg leaveq push mov test fs mov leaveq (bad) mov leaveq loopne (bad) leaveq lods xchg int3 in mov sahf xchg mov xchg cmpsl hlt sub movsl (bad) mov loop out callq cmpsb int3 fxch shll jp adc or rex.WB jbe stc loope jnp fcoml stc xchg xchg js fcompl jnp add test (bad) mov rex.WB leaveq xchg push int3 pop mov leaveq rex cld icebp jnp and mov adc mov repz int3 mov rex.WR xor cltd stc jrcxz pop nop adc jno leaveq rex.RX cmc stc (bad) leaveq jnp int3 (bad) hlt test mov cmpsl and and test cmpsl xorl stc leaveq jl int3 imul jne leaveq (bad) jnp push stc jrcxz int3 mov imul int3 cmp and mov jge cld (bad) lahf hlt sub xchg mov xor pop loope test int3 icebp stc xchg hlt ud1 cmp xchg xor mov push mov hlt mov movsl popfq loop ja mov hlt mov jns fdivl ror leaveq cld cmp test pushq adc push pop movabs cmp rex.WB cwtl movsl cmp stc jrcxz cltd test mov icebp leaveq xchg scas int3 (bad) fistpll hlt push cmpsl sarl out test rex.W int3 cmp rcll and (bad) lods xchg cwtl fdivl sub jnp cmp out cmp movsl or and add hlt pop scas cmp lods movsl (bad) leaveq (bad) jne xor rolb int3 jns stc test pushq sub add sbb pop out jno leaveq out test (bad) leaveq outsb int3 and cmpsb push leaveq leaveq sub pop hlt mov sbb cld movabs hlt or jno or shrl out test jno movsb xor push push jnp adc int3 test cwtl pop jno cltd hlt xchg clc push leaveq mov hlt sub cmpsl or loope stc test (bad) pop jns leaveq or or mov lods hlt pop rex.WRB jno leaveq insl nop int leaveq shrl (bad) lods (bad) (bad) mov pop movabs hlt mov movsl (bad) int3 in jbe sub hlt repnz rex.WRB hlt movabs leaveq jne stc cmpsl movsb add mov in sub jmpq stc movabs leaveq xor out xor in jmpq (bad) rex.WRB hlt adc mov icebp rex.RXB stc xchg hlt outsb int3 insl (bad) mov hlt xchg (bad) rex.WX lea cmc hlt (bad) rex.WB leaveq hlt notb std hlt pop add cld add rex.WRB (bad) adc jmpq (bad) jb jne xor hlt mov hlt xor leaveq sub hlt cli je jno hlt mov hlt mov popfq movabs stc hlt stos jne cmc jns lods hlt rex.WX leaveq cmp or adcb rex.R rex.WXB fs (bad) cld gs pushfq jl (bad) (bad) jne add xchg ror pop hlt sahf pushq popfq hlt mov mov and imul icebp addr32 icebp fcmovne mov callq int3 sahf adc mov mov leaveq jge stc hlt out pushfq adc add and leaveq (bad) mov cmpsb jge cli hlt xchg (bad) hlt rex.WRB (bad) jne in sbb or loop in movabs (bad) xchg pushq push sbb loope xchg mov outsb xchg int3 xchg cld insl jrcxz sbb cltd lea fnstsw hlt (bad) jle pop cld cmpsl and stc int3 movsl rex.B loope in rex.RB test add rex.WRB hlt pop pop jbe cld pop hlt sub imul leaveq lods add or or or sub popq rex.WB xchg mov pop (bad) (bad) or lea popfq movsb (bad) leaveq int enterq xchg int3 in cld (bad) rex.WB or cmp orl cld and cltd cltd adcl xchg adc rex.RB hlt rex.R jge movsb jne sbb mov xor xchg xchg push lahf hlt fnstenv mov popfq or jl mov rex.WRXB movabs hlt rex.X push xor rex.B pop adc loope xchg clc cmp adcl leaveq (bad) jp and cmc hlt (bad) rex.WRB (bad) fcompl cmpsl hlt ss cmpsl lods mov leaveq movsl lods sub or rex.WB movabs in and shrl test movsl jno ss int cmp xor test leaveq test hlt (bad) int (bad) icebp rex.RX hlt xor and jl fxch sbb leaveq out (bad) and cld mov scas (bad) int rex.WB cmp mov or (bad) mov mov int3 (bad) jmp lods jg push adc and hlt movsb adcl cld stos or cs sar fimull rcll (bad) in (bad) icebp leaveq clc xchg adc fsubrl (bad) xchg leaveq xor lods xchg cld (bad) hlt xchg fidivl hlt pop movd (bad) je flds jns jns fmul or or sahf (bad) or jl hlt xor popfq movabs hlt mov leaveq movabs pop cld cmpsb test rex.WRB rex.B xchg cli (bad) jnp repnz adc xchg jl (bad) jl cmp (bad) sar retq sub leaveq lret jmpq cmc movabs cmpsl test mov int3 mov icebp js in jns pop cmpsl loop int cmpsl pop hlt xor jp fprem hlt xchg loope rex.WRB hlt pop ss xchg jge in hlt add je jrcxz jl (bad) leaveq cmpsl jrcxz cltd jno leaveq xor sub mov stc hlt cmpsl lods int3 mov and hlt js int3 stc fdivrs adc xchg and jrcxz rex.B lock or int (bad) xchg cmp movsl imul add jmpq adc or mov hlt xchg mov mov sti (bad) jl push cld std (bad) hlt (bad) out add mov xchg test or (bad) and imul insl jl leaveq hlt rex.RXB xor mov and (bad) mov jae movabs hlt ror mov mov (bad) leaveq movabs imul and popfq mov leaveq (bad) mov hlt out movsb movsl (bad) popfq hlt cmpsl movabs movsl jns mov (bad) (bad) cld hlt lret movsl leaveq sbb cmc hlt shrb fxtract mov stos mov (bad) add xchg and movslq sti scas scas std or stos int test jmpq hlt pop fidivrl leaveq xchg mov cld scas cld xchg je jl insl int3 lea leaveq out push sbb hlt imul stc cmc hlt test jno in adc je icebp push push xchg jne (bad) div stos pop mov hlt (bad) pop adc cld (bad) shrl lret int jne rex.RXB rex.WB rex.WR adc jne hlt jge cld movslq in in lods pushfq sub (bad) xchg int pop (bad) pop movabs faddl mov hlt out stc stc jmpq adc rex.WRXB rex.R mov xchg pop add fild (bad) rex.RX cld int mov jne jbe or xor rex.W std xor out rex.RXB hlt pop jle,pn stc sub stc scas and loope rex.WRX mov hlt (bad) xchg stc rex.B push sbb cmp cmp cltd cmpsl int or cmpsl in or pop outsl cmp jbe pop lahf hlt jg popfq xchg (bad) hlt (bad) sub popfq (bad) cmc hlt push rex.WRX leaveq in (bad) int and out rex.WRB rex.WRB hlt push xor (bad) icebp jno hlt (bad) stc movsl add (bad) hlt movabs xchg xchg mov xchg test in xor cmp cmc cmp pop mov outsl or or imul cld stos insl hlt fimull xchg xchg hlt in xchg je loope pop movsl lods rex.R rex.WR je rex.WRB (bad) stc or sub sub int leaveq loop jbe add test (bad) or jne fldenv movabs (bad) hlt pop xor movabs (bad) (bad) jne rex.WRB hlt pop fsubrl jns mov rex.WRX leaveq jl roll in movabs hlt xor mov jg fldl (bad) pop or mov cmc hlt andl int3 mov leaveq cs rex.WB rex.X mov lea or add xor int3 pushq xor push test rex.B cmp jge hlt lret in hlt out (bad) (bad) gs hlt (bad) int push push subl addr32 int3 pop stc (bad) leaveq (bad) int3 lods or and insb fldl add xchg sahf imul test sbb (bad) leaveq movslq jrcxz outsb retq leaveq xlat leaveq leaveq cld jnp (bad) movslq and mov mov push hlt hlt jo int xchg hlt (bad) int3 mov mov pop rex.XB leaveq fmulp scas cltd cld lret fsubr adc push jbe cmc hlt pop adc rex.WRB rex.B movabs int3 test cmp and add in leaveq xchg loopne xor mov movabs fisubrl test mov ja xchg rex.WR rex.RXB sub jno cmp hlt mov mov hlt jle cmp in or (bad) sbb int xchg hlt scas int3 movabs stc rex.WR clc jl xchg cld loope pop xchg (bad) or stc hlt leaveq jrcxz callq cld xchg movslq leaveq test int3 push out hlt pop jbe rex.RB lea hlt add xchg mov movslq xchg (bad) gs mov cmp cld push out sbb addr32 and in mov push hlt add (bad) cmp hlt or push sub cmpsl ror mov add and int3 in test leaveq push adc std stc (bad) leaveq pushq add push mov pop fldenv scas add jne rex.RB add je push imul pop rex.WB pop (bad) sbb (bad) rex.WRX movsl or xor add (bad) jnp xor int3 test rex.WRX adc leaveq cmpsl ja (bad) cld test push orl hlt fs faddl hlt fcmove mov stc leaveq jmp or leaveq pop int3 std or rex.B rex.WXB adc jbe insl xchg rex.WR movslq jns jrcxz decb mov out int3 push test leaveq add int3 movabs loope hlt movabs (bad) mov pop rex.X or or and movabs leaveq cld rex.B leaveq icebp movslq leaveq cmpsl rex.RB (bad) movsb cmpsb jno mov and loop cmp movsl in cmpsl jno (bad) int3 test push cmp (bad) test leaveq rex.X hlt rex.RX hlt (bad) int3 test pop adc or sbb xchg hlt sub int3 loope jmp in and mov lahf hlt cmp lock or int3 (bad) hlt loope xchg retq test std nop and cmpsl cld loope pop test or sbb int3 add and movabs hlt loope mov int3 xor int3 adc mov leaveq rex.X test jg pop je (bad) jrcxz loope fldl (bad) sub fadd vpmulhw ja mov jnp sub int3 mov popfq rex.WR jae xchg fmull fldcw iret sarb jl jg movslq movsl adc int3 mov loope mov int3 imul mov hlt rex.WR sub leaveq loopne movslq mov (bad) cmpsl int3 xor outsb icebp test or jmpq jl stc cld and loop retq jne leaveq int3 mov int3 leaveq jl mov push hlt cwtl fstpl int imul mov adc (bad) leaveq retq ds sti xchg icebp out int3 icebp (bad) pushq add xchg (bad) leaveq or jrcxz retq rex.WB push xor (bad) leaveq ds movsl std cld and (bad) leaveq xchg nop retq leaveq test or rex.WR sbb (bad) leaveq gs leaveq xchg xchg jne cld mov movsb stc test (bad) leaveq push push int3 (bad) addr32 sbb test add cmp leaveq mov (bad) xor fsubp mov rex.R nop retq xchg stc (bad) leaveq mov movabs adc lods stc (bad) leaveq cli xchg int3 mov mov jno cwtl lret cmp test (bad) int3 adc leaveq outsb or rex.WB (bad) leaveq jg leaveq test outsb int3 cmp hlt (bad) xchg popfq mov test xchg int3 stc je and leaveq sbb xchg sub leaveq test ror test jrcxz mov cld xchg jrcxz (bad) add xchg int3 test in leaveq add xchg int3 adc or stc (bad) or jle int3 xlat stc rex.WR and int3 (bad) mov hlt out hlt jno (bad) mov leaveq cld pop int3 in je rex.B (bad) mul lods test hlt imul adc orl jle lahf int3 (bad) retq sub movabs leaveq push jnp sbb int3 test xchg std lock (bad) leaveq push sub stc rex.B jo callq sbb pushq cmp leaveq push loop std movslq leaveq cmpsl rex.W loope rex.WR movslq cld adc pop in adc jne add xchg hlt callq lods hlt (bad) nop out cmpsl pop icebp hlt sub hlt popfq cmpl xchg mov test or (bad) sub movsl and (bad) cli xorl hlt (bad) int3 add mov (bad) hlt xor div test pop hlt mov mov pop (bad) mov int (bad) xchg cmp mov xchg cltd mov movabs hlt add hlt xchg hlt js adc jns hlt in leaveq pop or or rex.WR hlt pop pop lea and (bad) scas (bad) xchg mov jae mov hlt test repz cld leaveq rex.WRB xorl mov hlt xchg out or mov sub gs jno ficom div rex.RXB mov xchg add popfq mov mov jns jno icebp enterq hlt out or and (bad) int rex.WB cltd hlt lods movabs test jns movsl hlt test hlt leaveq rex and in lods mov xchg adc movabs out xchg hlt gs insl xchg test addr32 lods lea movslq add add jrcxz push movabs push and hlt int3 mov cmpsl mov hlt out pop sbbl (bad) int3 jbe cmp leaveq int pop and pop pop jae fadd (bad) rex.B jmpq testb cmc rex.WR pop rex.WRXB xchg cld pop (bad) hlt jrcxz lods or pop jnp je stc rex.WRB (bad) jge (bad) or fcoml mov int push hlt jns int3 jge test hlt (bad) int leaveq in cmp (bad) leaveq mov int leaveq divl xchg addr32 leaveq xchg jnp enterq int leaveq data16 leaveq cmc sbb cmp (bad) leaveq mov int leaveq icebp mov int leaveq out addr32 leaveq xchg jl cmpsl repz fwait enterq int leaveq add movsl or fadds addr32 leaveq xchg (bad) int rex.WR movabs mov sub add int3 push jmp (bad) leaveq pop rex.WR gs test addr32 leaveq xor or int hlt cmpsb leavew cmp rex.WR pop (bad) je adc and mov and fcmovnbe jno loope rex.R rex.WR xor pop cmpsb pushq cld hlt (bad) (bad) jno xchg addr32 je push repz std iret leaveq pushq loope movabs stos push hlt rex.WXB cmp xchg cmp or out ljmp cld mov hlt push mov xchg (bad) hlt jrcxz jle xchg (bad) xchg hlt push int3 int cld subl hlt (bad) int3 test hlt cmp (bad) insl jrcxz cmpsl loope or leaveq movabs in xchg cmc rex.B xchg jrcxz mov icebp xorl (bad) cmp (bad) and push int3 mov xchg rex.WRB notb leaveq in mov (bad) int3 test mov lahf loope mov (bad) leaveq test (bad) xchg int adc push pushq hlt or movsl xor in hlt test je out rex.WB adc leaveq mov int push mov leaveq (bad) add leaveq mov addr32 cmp lahf (bad) mov test leaveq sub int3 xor sbb stos xchg hlt cmpsb (bad) adc push jne jbe or sbb or je or rex.WB (bad) or cmc lock leaveq xchg or pop adc insl stc (bad) leaveq rex.RB int3 jge (bad) leaveq rex.WR or (bad) sbb sub hlt jg mov (bad) mov retq sar (bad) jmpq bt jmpq jmpq add rex.R gs gs push gs imul xchg add not sub bsf shrd rol jmpq jmpq push test stc mov stc jmpq jmpq callq jmpq imul clc add jmpq fsts movabs addr32 adc mov cwtl cmpsl sbb (bad) rex.B orl scas jg fisttpl es lods and (bad) rex.WR gs insb add stos add sub rex.X js mov iret test jnp jnp jbe fldt out movsb repz fisttpll (bad) test xor movabs mov mov (bad) (bad) (bad) (bad) jp jmpq jnp mov (bad) insl xor out fbld in rex.WRX in (bad) lret outsb icebp cmp retq pushq sub push xchg (bad) ss (bad) out cmp test mov imul callq add test out cmc add stc cmp jmpq pushfq mov adc jmp js push and test sbb sub lock cli rolb push add or xchg test div jmpq push test movabs shlb mov rorl sub fisubrl ss mov retq rorb divl (bad) (bad) (bad) (bad) decl setbe or pop or cltd insb rex.RXB rex.XB (bad) fwait add insb repnz (bad) loopne push rex.WRXB jb and (bad) rex.WRB lock xor or cmpsl mov sub lret mov stos (bad) adc or and mov push clc in mov xchg imul (bad) xchg jne lret pop in rex.WR lods sarl test imul add rex.WR rex.RB pushq adc out jg sti ja ror add dec and setle add test add add xchg lea rcl bt stc mov cmc mov clc push stc shld adc mov jp sub jmpq callq bsf xor cmc bt add rol mov bt test test jmpq jmpq add jmpq clc cmp sub cmp test cmc stc repnz jmpq rex.RXB rex.R xor cs insb add or add clc cmp add jmpq add rex.XB insl insl (bad) outsb imul addr32 add loope adc jmpq jb test jmpq jmpq mov bt stc clc bt test jmpq ja in enterq rex.WB jle (bad) (bad) xchg mov jle stos adc stos rorl idiv sbb mov and rex.X rex.X (bad) imul (bad) sbb lock sti lahf sti rex.WRB movsl outsb mov xor sbb js adc cld fdivrl mov (bad) (bad) ljmp xchg xchg jrcxz (bad) mov pop pushq ss stos (bad) (bad) (bad) lret lods (bad) mov leaveq movsb movl sahf lret data16 rex.R test rex.RXB rex.RXB rex.WXB xchg cmp movabs movabs rex.RXB nop add nop (bad) ss rex.RXB cmp clc jrcxz cmp mov cmc shl fldt (bad) out rex cmp and jp and (bad) cs loopne mov sub cmc cmp xchg (bad) callq (bad) (bad) pop loop add movabs (bad) clc jbe fcoml rcll rclb push icebp stos scas mov pop enterq sbb out pop idivl adc (bad) mov (bad) (bad) jg test cmp pandn add add add mov movabs pop lock stc sub mov and mov push (bad) mov jmpq rex.X rorb fwait xchg in or (bad) xchg mov loop cwtl mov add (bad) jne mov loopne rex.XB cmpsw mov or or mov sbb mov mov mov (bad) rorl (bad) and retq mov clc stc clc clc cmpb ja jne sub rcr bts sub add rcr bswap neg mov sub add xor shr mov bt clc test jmpq (bad) and mov sub cmp leaveq push out xor rex.W (bad) push fwait int3 (bad) pop push test (bad) mov sarb (bad) rorl jmp jae rolb pop stos nop or (bad) or out mov or adc (bad) imul frstor rorb cmp retq xor jge scas sbb js mov scas mov ljmp test add (bad) or and stos sbb repnz (bad) cmp push xchg jmpq lock (bad) (bad) (bad) (bad) std ja fdivrs add mov and pop jle (bad) lock rex.B add sbb push or rex.WX fwait sbb (bad) adc mov sbb bswap mov jmpq (bad) movabs int3 mov add xor rolb mov jrcxz sub xor (bad) (bad) or loop mov cs xor mov (bad) rolb xor cmp pop mov roll and hlt hlt lret (bad) movabs int int movsb shr sbb fimull lcall mov push (bad) ja (bad) enterq or flds and sub fmuls (bad) mov rex.R cmp jg or (bad) (bad) (bad) decb (bad) subl xchg lock (bad) (bad) (bad) dec xor scas (bad) and sub movabs sar pop cmp fdivs pop (bad) scas rex xchg imul jle xlat or lret jno fld1 rex.WR (bad) mov sbb rex.WRXB xor and mov bt add sbb sbb sar stc mov cmc test jmpq cmp jmpq mov test cmc cmp test jmpq sub bt cmc clc xor cmc clc clc cmc rol cmp clc jmpq jno mov int pop (bad) jmpq loop cmp cmc (bad) lahf push sbb (bad) xorl cmp fs rex imul fisub (bad) xor lods retq cli retq notb retq (bad) icebp mul rex.WR idivl loop pop or insl popfq jnp (bad) jp pop jle lods xchg cmp or xchg mov (bad) (bad) (bad) (bad) incb rex.WXB out movslq jae cld pop rex.X mov pushfq xchg pushfq rex loope adcl add jl fidivr (bad) es in ds mov vmovlpd adc cmp outsb xchg add or and mov sti rex.WRXB push (bad) je sar cmp bts push sbb not mov jmpq jmpq jmpq jae cmc bt cmp cmp cmp jmpq jmpq jmpq retq mov pop mov roll fsubp (bad) jne add sub mov adc and or mov or pushq add rex.WXB and mov jmpq sub lock in xchg retq sbb out fistp rex.RX xchg (bad) pushfq rex.WX and (bad) mov (bad) rex.RB stos mov add and add adc sub xchg jae pop test (bad) (bad) sti fwait mov rex.WRX (bad) (bad) (bad) (bad) sub out pushq rex.XB lret and rex.WX mov (bad) (bad) ljmp rol negl movslq nop mov ss imul rex.WXB cs push (bad) jo std popfq and rex.B out ja xor sub mov (bad) and subl add btc add or movzbl mov movzbq mov bsf bts shl mov clc bt sub jmpq test bt sub cmc bt cmc cmc cmp jmpq jmpq pop pop test (bad) or and pop in mov (bad) rex.RX movabs lret sbb sub (bad) rex.W adc mov (bad) rcr (bad) movsl sahf mull movabs adc int3 (bad) fs std adc cmpsl xchg mov sbb (bad) mov repnz lahf xchg cmp (bad) (bad) (bad) sti jge pop push (bad) (bad) (bad) (bad) decb out pop int3 shrl (bad) mov enterq movabs lret repnz mov mov push or (bad) (bad) callq or rex.WXB lea (bad) jp adc xorl out imul mov jle (bad) (bad) jne sub sahf or jb (bad) rex.RXB sahf sarb adcl sbb rex.RB xor cs insb add rex.RB rex.WR xor cs insb add xchg and add movzbl mov mov retq clc cmp cmpb jmpq lock jb add rex.WB movsl rex.RX (bad) mov ss scas adc fisubl mov fwait rex.X push xchg or lahf add (bad) pop (bad) imul sbb rex.X mov js pop std popfq (bad) movslq sbb stos sahf mov jl pop cmp cmpsl sti cmp rex.WB (bad) sbb cmp sarl cmp xor add push sub cld movslq ds push movabs push jrcxz fdivrl or push cld pop (bad) (bad) jmpq loopne sbbb test (bad) mov (bad) rex.WXB sbb lods movabs (bad) pop movl out adc (bad) (bad) (bad) xor and xlat (bad) jmp data16 rex.RX test cmpsl rex.WRXB pushq mov xor test lods imul mov fwait outsl xchg jns clc outsl xchg sbb clc push jnp fsts mov retq pushq mov (bad) jbe push rex.B test rex.XB (bad) (bad) stc (bad) mov std jrcxz (bad) cmp xor mov mov pushq pop rorl (bad) (bad) cli mov (bad) cmp sub rex.W xchg js insl in (bad) imul xchg and (bad) (bad) (bad) cld or and pop (bad) (bad) (bad) (bad) std mov (bad) mov push pop int adc (bad) (bad) (bad) decl jnp repz retq in mov movabs mov jg pop in xor movsl rcr jb (bad) mull (bad) rex.WXB sti add ror mov (bad) negb fdivl negb nop lret mov mov xorb and mov mov add test add cmp jmpq test jmpq pushfq or xor sub sub (bad) sub push mov rex.XB cwtl lods ficomp pushq rex.RXB (bad) movsl jb,pn cmp btr add pushq movsb rex.XB cmp scas sbb xchg jae (bad) rcll rolb adc addb outsl imul rex.WRXB xor xchg cld cltd and addr32 (bad) (bad) ljmp mov cmpsb cli in push sbb rex.W and movslq adc (bad) add (bad) rorb jp pop (bad) add add cmp leaveq cwtl mov scas (bad) rex.WR fwait xchg add jmpq fild movsl or (bad) popfq fdivs outsb addr32 scas (bad) sarl notb jbe fisttp mov and mov jno mov (bad) lret jne sub repnz lahf int movsb ds xchg loope sbb nop fmull xorl jo jns negl xor mov orl jmpq scas rolb jnp loopne (bad) push (bad) (bad) (bad) (bad) (bad) mov imul icebp (bad) movabs sbb js push stc mov sbb xor xchg loope insl sti rol es loop (bad) test adc rclb and cld add std clc mov out fsubrl (bad) adc andb mov sub jbe mov (bad) test sbb int3 iret cli retq divb mov subb (bad) (bad) enterq push cmp scas movabs (bad) movabs add adc (bad) mov mov (bad) (bad) (bad) decl shrb addb or (bad) cmp rex.WR test xchg leaveq clc add add (bad) adc sbb xlat jle add or jmp rex.WRXB es lods fwait xchg cld push repnz cmp and pushq outsb cld xchg cmc or mov rep sti cwtl loopne adc rex.R lods adcb and (bad) movabs mov or and lods rex.X (bad) xlat (bad) (bad) pop push ds add (bad) (bad) (bad) scas jo xchg sbb fldl cltd add xchg (bad) cmp ja mov mov push pop int3 adc (bad) or stos (bad) xchg jb stos ficoml scas or mov jmpq je cmp pushq (bad) (bad) decb (bad) (bad) (bad) (bad) stos cmc fwait or cwtl mov (bad) mov sbb cmc sti push outsb adc xchg add jae int stc rex.WXB mov ss mov jge movb adc fdivrs in sarb add shll push and ds mov adc int out callq sub shld add sbb jmpq shr bsf (bad) repz sub movzbw jmpq jmpq jmpq pop xchg pop movsbw movzbw movsbl pop jmpq lea bswap lea pop jmpq push not jmpq jmpq jne jo callq jmpq jmpq jo jae not mov inc add setbe mov jmpq jne clc cmc bt test movb bt test test jmpq jmpq jae shrl std xchg xchg add cmc in (bad) stc repnz mov int3 out mov (bad) xchg pop add rcl mov js rcrb test shrb mov xchg (bad) (bad) or lods xchg outsb movslq (bad) iretq pushq lods fisubrl xchg movslq xor sti fcmovnbe out scas (bad) (bad) (bad) (bad) insb jne add add add mov and xchg retq retq stos fcmovbe jae adc test (bad) and cwtl jmp lahf std or sub repnz push cmp rex.RB xor (bad) jns and iret xchg (bad) cmpsb fwait test (bad) (bad) callq movsb (bad) sub (bad) ljmp mov rcrl movsb sbb (bad) mov pop cwtl sti out xor xchg notl fcmovnb and or callq insb add in mov (bad) pop rex.WX pop adc xor stos movabs ds (bad) (bad) (bad) fldcw idivb xchg cmp mov repnz (bad) sarb push xor add jle fistl out rcll test jae sarl adcl fstpl cli test retq adc (bad) cs rex.WRX data16 pop (bad) or sub or (bad) rex.WR cmp (bad) scas std (bad) sti stos fisubr (bad) rex.WRX pop jne rex.WRB cmp or loop std enterq rex.B hlt out int rex.R mov pop cmp (bad) and fbld cmpsb mov notl push xor jge out hlt movabs rex mov bswap sub add clc shr xor movsbw lea mov mov mov mov lea setne not setl lea lea movzbl mov mov movzbq lea lea jmpq lea cmpl cwtl adc (bad) lods push or add jbe out clc in (bad) out cwtl lcall mov pushq popfq and rex.B xchg in shlb lret mov outsl mov test je nop loop rex.WX add pop rolb or (bad) (bad) (bad) (bad) (bad) movslq xchg mov (bad) xor (bad) movabs jo cltd sub cmp pop push ds rex.WR hlt outsb mov (bad) (bad) stc mov fnstenv movslq sub xor repnz adc callq shl jmpq mov adc enterq (bad) (bad) test cmp (bad) rex.WRXB es (bad) rex.XB movslq adc pushq lret and cmp pop setno (bad) test sbbl hlt lret jrcxz or jrcxz mov mov movabs pop (bad) enterq mov jmpq lret xor xchg sti (bad) scas xor (bad) (bad) cld sbb pop mov test movsl mov mov pushq sbb mov movsb pop popq add add or rex.W lock add mov out xchg push add sbb lea iret scas int movabs (bad) sbbb lret jno sbb adc or or add add (bad) rex.RX je jmpq jne not mov lea rol data16 imulb fld (bad) or cli (bad) shld mov test stc sub stc cmp test test pushq cmc cmc bt cmp cmp jp ja sbb rcl or bt sub clc add mov rol bsf mov cmp rcl mov cmc repnz jmpq movb test test je je bsr sub bts push not mov ror rcl mov sub mov lea lea jmpq movb jmpq rcr mov stc and stc cmp add jmpq cmc stc rol js cmp jmpq jne bsf sub movzbw or sub clc mov shl clc setne setne add sar test xor mov test test jmpq mov xor jrcxz jmp sbb or int3 ja mov shrl (bad) add or rex or (bad) ds xchg es loopne sub cmpl (bad) movabs mov mov or pushq popfq adc sub rorl in mov (bad) pop adc (bad) xor rorl repnz callq pop adcl movl (bad) (bad) (bad) (bad) std hlt cld (bad) orl rex.WB xor sbb add mov (bad) (bad) (bad) callq fwait xchg push (bad) (bad) (bad) movabs sti (bad) rcll (bad) or jge jo pop test (bad) insb sbb movsb (bad) add jmpq cld push int3 movabs add movabs sbb loope add jne dec bswap xor ror add and neg mov xor mov jmpq cmp mov stc stc jmpq adc jns imul test sub hlt out (bad) (bad) movabs (bad) rex.WRX sub xchg imul cli rex.X (bad) lahf iret stos xor jle xchg iret lea outsb popfq (bad) test or pushq movabs (bad) (bad) adc jb push repnz (bad) (bad) sbb (bad) ja ds mov (bad) (bad) sti cwtl mov pop and (bad) (bad) (bad) cwtl mov sub std and setp add jl sbb or adc (bad) push cmp adc push fisttpll fnstcw jrcxz rex.RX mov mov mov xchg (bad) idiv outsb lret hlt mov (bad) cmp mov sub (bad) popfq sarl pushfq pop add (bad) push cld idivl add stc out fldpi orl mov sbb adc jno lahf and in fidivr and test and fldenv movslq xor jmpq nop (bad) push ja lods and scas add enterq (bad) push xor imul imul pop fwait test mov jrcxz mov sarl adc jp (bad) and icebp add jmpq lahf rex.WR (bad) (bad) sti mov (bad) (bad) decb test mov or callq xchg mov xchg rex.WB fsubrs xchg subl sti outsb lret in cmc sub rex.WB or shrb or xor xor mov sti add rex.B mov add (bad) insb rex.B insb outsl movslq (bad) (bad) iret or sub (bad) cmpsl stc pop push cwtl (bad) outsb pmuludq (bad) rex.RX rex.XB (bad) ficom out in (bad) xchg rex xchg mov adc (bad) int3 out fildl (bad) retq test mov gs adc (bad) sbb pop addr32 rex.WRB lret sbb xchg (bad) xor rex.WX out cld push jmp rex.WB cwtl mov (bad) imul (bad) sbb jae push sahf mov (bad) (bad) (bad) std or rclb (bad) (bad) std cmp in lods mov mov adc (bad) lods add add or rex.WRXB rex.W fldenv loop push and (bad) push rex.WB adc pushq and loope scas lea (bad) movabs push xor adc mov push rex.X hlt es mov add xchg jnp rex.WRB cs retq fdiv (bad) jmpq (bad) sub movsbl xor mov shld dec data16 (bad) or (bad) (bad) xlat rex.WX es data16 (bad) or out bt test stc sub bt cmc test pushq clc test jmpq jne xadd or and bt mov add shrd inc stc sub rcl bsr mov jmpq test cmp jmpq test jmpq cmp jnp jae stc shr mov btr lea xchg neg mov sete lea rcl adc mov cmc bt xor test test bt cmp repnz jmpq add hlt callq adc cs or cltd rex.WXB (bad) cmp xor ror clc mov jmpq jne fcmovnbe and jle (bad) rex.R repnz sbb add cs push pop rex ds and in mov fldz movabs clc (bad) jo (bad) mov (bad) iret xchg rex.XB push adc jp jmpq pop push mov jns (bad) xchg out xchg xor outsl ss push push jnp jp insl imul jbe insl outsl add mov (bad) (bad) decb rex.RB sahf jno add add jl xchg enterq cmp xor adc rex.B rex.WRXB cmp pop (bad) movabs xor int3 (bad) lea xchg (bad) in in mov xor rex.X in sub add test nop add cmc test bt cmc or jmpq js callq shr (bad) (bad) add adc bts cmc mov jmpq jmpq jae (bad) repz mov or add seta jmpq jmpq jmpq ja add cmp sub btr shr setno bt add lea mov not mov setge mov jmpq jne jmpq jmpq xor cmc jmpq jmpq jae xadd xor bsf clc mov movzbw neg adc jmpq jb cmp cmp cmc cmp jmpq jmpq and imul pop imul cmc orl int3 (bad) mov (bad) rcrl sub lods sbb adc (bad) (bad) cmpsb rex.WX addr32 test cwtl test mov test mov testb adc (bad) (bad) (bad) cld (bad) sahf jmp rex.R enterq push movabs (bad) (bad) xor movsl (bad) loopne int3 pop fmuls add or mov xor sbb enterq push cli int movsb lahf xchg callq (bad) (bad) (bad) (bad) (bad) xlat std cmp movsb and rex.RX (bad) (bad) stos xchg jmpq push movsb mov (bad) xchg mov mov int3 or movabs fmull jg lcall imul xor push (bad) jne jmpq cmp bnd (bad) pushq jb (bad) (bad) jp insb pop (bad) sub (bad) cmp rex.WX cmp insb mov add fdiv jrcxz pextrw pushq and mov rex.WX jne (bad) or std xor xchg cmp cmp sti leaveq jp scas (bad) lret rorb rex data16 cmp mov loope sarl cmp (bad) clc xchg xchg xchg add xor add jmpq cmp add rex.WXB retq mov mov mov (bad) (bad) (bad) std mov rex rex.R testb (bad) fs std jb adc jrcxz imul cmp xlat je out jge (bad) (bad) mov (bad) add or mov mov fs xchg or xor rclb mov and es xchg movsb mov hlt jbe mov xlat (bad) xchg jmp (bad) pop int3 scas (bad) mov jrcxz xchg test mov (bad) (bad) pushq cmpsl rex.WRXB lret sub cmp (bad) sbb mov fwait xor (bad) rex.RX jns xchg push cmp jp xor scas and hlt movabs loop jns loopne decl mov xor mov and callq (bad) mov jmpq adc callq xor mov test mov mov cltd in fcmovnbe add (bad) rex.R sub lods shrb jp mov int mov (bad) pop (bad) mov popfq lahf rex.WB popfq loop or jne (bad) (bad) xor rex.W out sub jmpq es lods (bad) cmp cltd jg jp (bad) xor imul or mov (bad) (bad) sti mov pop mov (bad) (bad) (bad) (bad) sbb add or out (bad) push (bad) retq (bad) lcall jne add cmc (bad) (bad) (bad) jno push std loope je (bad) and add cmp (bad) loopne rex push add xor cwtl mov adc lret stos cmc pop (bad) mov mov xor gs fsts rex.WR imul mov (bad) push pop outsl (bad) out rex.WRX out out mov cmp pop pop shlb cmp pop es je mov push rex.WXB sbb (bad) fidiv pop ficomp rex.RB push repnz (bad) (bad) (bad) cld mov rex.X (bad) (bad) lcall (bad) es push (bad) mov outsl in fmull ficoml movabs add sbb (bad) pop push xor add add rex.RX adc and (bad) pop xchg adc (bad) (bad) xchg lret mov sbb shlb sbb add add xorl jle roll (bad) (bad) mov ss lods (bad) jmpq mov mov setl lea jmpq jne cmp movb clc test bt test jmpq jmpq nop mov rex.R (bad) mov jne imul fldcw sub loope xor mov movslq out and mov in sahf fnstenv (bad) mov out sahf imul (bad) rex.B mov add mov (bad) (bad) (bad) (bad) mov mov stos mov scas (bad) mov iret cmpsb or mov jo sti std push int out jl (bad) (bad) pop cli pop sub adc cmc xor in es (bad) (bad) mov cmp xchg mov add clc cmpb jmpq ja bt cmc cmc imul bt stc cmp add jmpq jae jmpq jmpq jmpq jmpq in stc cmp adc rex.RB rex.RXB adc jge jl stos adc rorb cmp mov jmpq xchg incl add xor jnp mov xchg imul and rex.WRB add xchg int3 cld xlat (bad) lock pushq sub (bad) push in repnz sbb add shll addl or fsubrs (bad) xor fidivl test lret mov in pop lret mov (bad) je je jns mov std sbb (bad) (bad) (bad) ljmp cmc rorb fs jns sbb sub rex.WRX test mov sub sub cmp (bad) sub fldenv xor and loop addb cmpl mov mov adc repnz (bad) xor (bad) (bad) jmpq pop jmpq jmpq jge int jge fs push mov movabs pop push (bad) test rclb hlt xchg scas (bad) cld clc (bad) rorb ficom add adc mov retq test jg retq add cmp mov (bad) iret adc fdivrp (bad) (bad) cld imul (bad) (bad) stc retq (bad) sbb jae fxch xor and adc rex.W pushq xchg rex.WRB pushfq int3 (bad) out (bad) rdmsr movabs cltd sbb ss jae jmp add add fidivl movabs (bad) loope int3 sbb mov enterq mov (bad) jns fwait clc jrcxz xor add icebp movabs test (bad) or push push repz mov cmp pop addr32 jae movzbw xchg mov shld cmc neg btc mov dec sar or mov clc sub stc bt repnz jmpq cwtl movsb and rex.WRX popfq cmpsl jl (bad) xchg jmpq gs pop movabs mov imul or xchg sub (bad) stc (bad) test push rex.X cmc popfq (bad) (bad) (bad) incb (bad) mov out xor and (bad) lret pop repz sub rclb (bad) (bad) std lahf imul add add add rex.WRB pop retq adc (bad) sub add or and movabs jl in mov outsb ss (bad) jmp mov (bad) movsl xchg and callq add xor add add adc or jmpq je not bswap xchg movzbw lea xchg bswap movzbw movzwl not movsbl lea bswap lea movsbq not mov jmpq or in mov mov movabs xor adc (bad) cmp (bad) xor sti retq jb pop (bad) sahf out fdivr out adc mov mov mov and outsl int3 movsl mul repnz repz (bad) and loope lea nop imul test sbb sahf rex.WXB xor or jmpq cmp out in addr32 add rorb (bad) (bad) jns rex.WRX rex.B cltd (bad) lahf xchg pop cmp push push (bad) stos jae sbb xchg fdiv stos (bad) (bad) (bad) cld sub (bad) (bad) (bad) mov sbb add add and test push jge push outsb in lahf and js xor add sarb cmpsb rex.WRB add fld sub jge jbe icebp pushfq (bad) add lahf mov leaveq sarl xor jrcxz (bad) (bad) lods mov pop std xchg mov cmp jmpq jmpq jmpq jne xadd not cmc mov movsbw cmc btc sub sub jmpq jmpq movzbw mov movsbl sub mov setl mov lea jmpq jmpq xor rex.WRX xchg adc ficom js cmp gs pop lea nop adc sbbl addl test rex.X rex.WRB jae (bad) jle (bad) mov out (bad) (bad) cld loope add (bad) xor loop stc xchg movsl stos std cs push cmp nop loop ficompl cwtl (bad) (bad) (bad) (bad) sti lret sti rcr cmp (bad) (bad) (bad) pop xchg jp mov jae mov scas std sub push loopne (bad) rex jb lods xchg fsub xor repz mov mov fimul mov jnp mov rex.WRX pop je (bad) (bad) (bad) (bad) fisubr (bad) mov jo or scas (bad) (bad) rex.R mull or push sahf scas adc jmpq out mov sub in or mov adc adc sub xchg add movabs jmpq cmp jmpq incb pop mov callq cs nop rex.WB xorl retq int mov and fisttpll add callq sti outsb sbb (bad) and rcrl jl loop data16 movabs (bad) insb or and rclw xchg rex.RX xchg xchg cli jge (bad) (bad) sti enterq (bad) (bad) (bad) (bad) (bad) addr32 leaveq jmp rex.WB cli cmp pop (bad) movabs (bad) callq pop (bad) cltd cld retq (bad) movsb repnz lock jno cld mov fwait and (bad) sub movabs popfq rex.W jrcxz push jmp adc movabs (bad) jl adc cmp push outsl or xchg (bad) (bad) fimull addr32 cmp fwait rex.R (bad) pop mov loope sbbl je ja (bad) (bad) adc (bad) (bad) cmpsb clc cmp jmpq mov mov xchg (bad) xchg pop movabs loopne movabs (bad) rex.WXB lock (bad) (bad) (bad) xchg adc jne,pt callq lods out rcl jge add add adc push stos cmp sarl add xor jrcxz jb xchg xchg push testl rex.WXB notb and xchg mov in sub es rex ds sbb (bad) decl movsb jmp mov shld movsbw mov shrd sub mov clc bt cmp sub test bt test jmpq je ror ror mov shl clc neg add data16 repnz fisubl mov mov clc test jmpq mov cmc test cmc cmpb jmpq jmpq cmp cmp jmpq je lea bswap not mov movsbw mov bswap lea not setl mov mov movsbw setl mov lea jmpq je cmc cmp sub bt cmc jmpq jne stc dec movsbw mov jmpq sub bt cmc pushq cmc cmp jmpq (bad) sar rex.XB cmp cmc jrcxz (bad) mov movabs cmp (bad) ds scas cmpsb sbb (bad) clc or add or rcl (bad) adc test (bad) cs (bad) cmp jl vorps sti movabs (bad) sbb fistpll cs cld leaveq in (bad) rex.WB lcall hlt shll and fnstsw and rex.XB rex.RB loope rex.B repz and mov pop push (bad) pop mov outsb rex.X mov int sub sbb add add mov cmp (bad) iret xchg xchg pmaxub push (bad) xchg not pop fist pop cld mov sub rol (bad) lods andb mov rex.X retq clc jmpq je stc add test cmc cmp cmp jmpq push enterq outsb (bad) movabs sub loop mov ficomp rex.WRX sbb cmc (bad) rex.RXB fs fs cld fiaddl sbb rol (bad) pop sub and leaveq test insl fmull rex.B or push mov cmp clc sahf nop (bad) movsb pop in and sub pushq mul or xchg pushq add and clc mov add rex.WRX (bad) (bad) xor movabs imul movsb adc test (bad) (bad) cld sbb (bad) mov (bad) (bad) (bad) (bad) stos mov stos cmpl (bad) mov (bad) (bad) loop add add mov xor sbb push test insl (bad) xor sbb adc rex.X or rex.WB adc cmp rex.WRB (bad) cmp (bad) stc pop rex.WRXB sub mov rex.XB ror xor cmpsb fnstcw sub fndisi(8087 mov (bad) lahf rex.RX ss fmull (bad) out rex.R cmp lret mov xor (bad) jns xchg (bad) mov stos movabs rex.WRX (bad) rex.WXB adc fucomp xchg rorl sub jnp (bad) mov sbb (bad) push push je xchg enterq rorb mov (bad) (bad) sti lea jo (bad) (bad) (bad) (bad) sub sub xor cwtl rex.RXB shll (bad) (bad) ljmp cmpsb xor mov fistpl nop (bad) lock test imul rex.RB movabs or es xor rex.RX mov rex.XB out jmpq test repnz jmpq pushq jmpq rex.RXB cmc mov imul rex or movabs mov rex.XB xchg sti out xchg leaveq (bad) not stc jmpq je xchg (bad) sbb (bad) and pop stos jrcxz mov or push fmull lods cld shlb mov adc rex.B and jle test jle (bad) and (bad) out xor sub rex.WRX sti rex.RXB pop (bad) add js adc shl (bad) rex.B (bad) (bad) cli pushq nop or (bad) (bad) sti iret adc sbb mov (bad) (bad) (bad) (bad) std ljmp out xor movsl and mov mov rex.XB xor jae callq out xchg sub lock mov jbe xchg push jrcxz rex.WRX rex out retq idivl add cmc mov xor xchg xchg mov mov imul pop mov or push stos xor stc pop clc movsb sbbl mov cmpsb push subl mov insl cmp imul (bad) (bad) or je (bad) (bad) (bad) (bad) cmp ds xchg rex.WR push (bad) sbb (bad) or lret sbb movabs mov ja lret movsl je mov retq retq incb (bad) sbb pop out stos popfq (bad) clc jae movsl (bad) repz popfq test jne jns lret xchg stc sub (bad) in xor out (bad) mov (bad) lods or data16 xor or jl and rex.WXB and negb mov xor sub push xchg retq push rex.W push test sahf pushfq mov imul (bad) jae repnz xorb rex.WB jge jg sarb out test (bad) xchg hlt mov mov int3 mov xchg adc repz mov (bad) pop fdivrl (bad) (bad) (bad) movsb in rex.W repnz jno jns out imul pushq (bad) xor movabs mov test (bad) (bad) jmpq mov stos out sbb fsubl (bad) lock iret mov pop add jns fwait sbb lock jb shr pop in insb jae pushq jge and push std xchg (bad) (bad) mov pushq callq rex.X adc add jnp cmp or retq gs addr32 (bad) rex.W (bad) fsubs loope rex.WX rex.XB rex.WRB outsb (bad) (bad) xchg retq sub callq (bad) ss jnp cmp sti fs idiv (bad) (bad) std cmc (bad) jne gs cmpb movabs insb stc movsb (bad) (bad) (bad) (bad) fnsave and (bad) jrcxz enterq mov (bad) lahf add cmp out rclb mov sahf test add mov rex.WRXB xchg (bad) enterq sub retq adc ja mov add scas sub add test adc sar xor cmc mov mov ror sbb add and mov jmpq jmpq jp (bad) rolb or rex.RXB sub jmpq int3 jae clc xchg (bad) (bad) (bad) clc fild rex.R lock (bad) out sub (bad) imul lahf mov jle xchg movsl cltd (bad) shlb fnstcw pushq sbb xor add or adc push hlt mov gs int3 rex.WRX gs (bad) (bad) (bad) imul popfq out mov add pop enterq std or or (bad) (bad) (bad) std cmp (bad) idivl enterq adc sbb sahf imul or rex.WRX callq loope xor xor mov mov ja jnp stc fbld (bad) jo or (bad) push sarb rex.R mov mov xlat mov (bad) rex.RX sub fstl test adc scas int jne mov fldcw add ficom (bad) ja jmpq callq adc add (bad) repz rol mov cmp test test cmpb jmpq ja jmpq je bsr shrd push inc mov bts bsf sub movzbq lea mov lea jmpq je jmpq lea retq sub cwtl rex.WX (bad) mov add and iret out cs stc out test pushq xor test loopne xor rex.WB loope pop cmp fwait (bad) rclb test and add enterq int and or mov callq sbb mov std jae add cmp retq push pop punpcklwd and (bad) (bad) sti int enterq (bad) (bad) (bad) pop sub push xchg rex.WXB rcrb (bad) (bad) (bad) (bad) fisub jmpq mov (bad) push add subl test (bad) (bad) retq pushq jp rex.B lret mov jo movabs rex.WXB sahf rex.WXB pushfq outsl mov xchg mov (bad) incl pop add add clc mov cmp cmc test jmpq fs sub cmp adc rex.RB movabs or mov xlat rex.WX outsb and pushq adc rorl and jne pop lods (bad) sar rex.W jns xorl (bad) push movabs (bad) sti int3 rex.RXB mov pop in ror adc jnp js (bad) cs test (bad) cs or rex.XB lea scas add outsb mov rorb sbb rex.RX mov sar pop pop js pop add adc mov mov pop jle sub (bad) adc outsb pop or movsl (bad) (bad) (bad) pushq xor stos mov jle icebp (bad) cmp jbe rex.WRXB xchg mov mov (bad) jns xor popfq out stos leaveq shrl jbe (bad) stos mov rex.WX movabs lods (bad) add jmpq jmpq push jmpq adc fucomp fldt sbb (bad) cmp push push je rex.WRX (bad) adc xchg test xchg rcl mov push ss mov xor loope out (bad) or rex.RB lods repnz jbe fcmovnu or xchg in sti (bad) pop movabs sbb push rex.WRB rol jg mov (bad) xor mov (bad) sbb lock (bad) rex.XB (bad) (bad) (bad) sti mov (bad) (bad) decb scas repnz cmpsl outsb add mov add add jl jmp (bad) xor jne callq (bad) pop (bad) setg or sahf add mov pushq imul (bad) rex.RX cltd mov rex.WXB fidiv ss sub add jo add push js cmp or rex.XB rex.WB out mov pop xchg movabs cmp cmpsb (bad) (bad) adc lret sbb ja cmp es mul callq fldcw iret and stos test packssdw adc std fmuls (bad) (bad) (bad) cld fsub (bad) jp (bad) (bad) (bad) ljmp push imul loop xor ror sti rex.WXB (bad) cltd fcmovb mov rex.WRXB std movslq push push (bad) fisttp sbb (bad) xor cmp jne rex.WRX mov js sti (bad) sbb shrb retq sub or (bad) jp rex.WRB rex.B rex.X sub mov stos add mov (bad) (bad) test rex.WR mov rex.WRB enterq (bad) add add mov or add clc bt add jmpq jmpq jmpq xchg insb (bad) scas (bad) (bad) jae int3 in rex.RB movabs mov sub lret out faddp movabs add mov (bad) pop (bad) (bad) (bad) std jbe movsb test int3 repz push rex.WRXB lods int3 outsb cmc movabs insb or pop (bad) imul mov sub (bad) (bad) std jl (bad) (bad) incl iret imul xchg jne rex.R iret xor lock add and addr32 jnp (bad) (bad) cmpsb (bad) sbb cmp fbstp cs rex.XB and (bad) icebp stos jmpq pushq jmpq mov add fimul nop out mov insl loope (bad) gs mov cmp mov mov sti fist or popfq jnp imul mov sahf iret and sbb int3 sbb (bad) and (bad) (bad) cld sbb out or popfq in out rex.RXB (bad) (bad) (bad) (bad) (bad) adc sub or rex fwait mov (bad) adc scas add mov rex.X rex.X pop mov rex.WRXB loop and jae xlat rex.RXB mov mov mov std cmp outsl sbb (bad) idiv push fadds fisttp (bad) (bad) (bad) decl cmp xor (bad) and cmp pop pushfq xchg xchg loop rex.RB sbbb leaveq mov xor stos rcrl push or movabs push ja and je sub jg pop mov rex.WRX rex.X je test clc cmp retq jmpq (bad) push push insl push xor jrcxz sbbl fistpl (bad) fistpl out in lret jmp lods pop or cwtl rex.W scas mov bnd gs (bad) rex.RB adc stc (bad) in (bad) xor movabs rex.W cmp lods cmc (bad) prefetchnta adc pop xlat rex.WR mov sub rex.XB lods (bad) stc xchg cli ds rex.WRB (bad) (bad) cld xor (bad) (bad) (bad) sar sub fsubrl add push stc mov hlt mov ds movsb scas xor jmpq (bad) cmp mov pop cmp insl cmp mov mov repnz rex.W and in and out fisttp mov push (bad) mov pop add jmpq jne bt movzbl test mov clc jmpq jmpq rex.RXB movabs (bad) mov push out xchg (bad) jmpq in or cld jmp adc cmpsb pop mov fstl ds stc js sbb push callq hlt (bad) (bad) stos xorb mov clc test (bad) test (bad) sbb xor mov mov (bad) jne xor jge fs in hlt jmp (bad) fs scas mov cmpsl cmc (bad) (bad) (bad) cld rex.RXB lock ss (bad) (bad) (bad) fmuls out and add add fsubs movsl cwtl mov pushfq push mov rex.X cwtl add pop jmp xor lods xchg subb roll out shrb roll rex.X push (bad) rex.RX ja jmpq jmpq jmpq mov jmpq jmpq cmc test add jmpq rep mov movzbw movsbl bswap pop jmpq pop or fimull (bad) sbb rex.W int nop cmp rex.WRXB repnz xor rolq (bad) cmc (bad) (bad) xor (bad) shrb gs imul rex.X rex.B movabs add mov sbb hlt (bad) lock stos ds xchg (bad) rex.W rex.W leavew cmp cmp int3 stos std cmp cmp (bad) (bad) sti stos sti jrcxz adc (bad) (bad) (bad) cmp adc lods rolb sub (bad) add (bad) (bad) mov cmp cmp cmp (bad) jmpq or test lods rorb jle hlt (bad) (bad) fnsave pop jmp add sbb rex.RB shll movabs sbb add add add add stc mov bt cmp jmpq callq jmpq mov lods cmp clc jmpq xchg sbb not int sti in mov xchg ss xchg cmp in sbb cltd mov (bad) out in pushq pop rex.XB adc mov insb sbb (bad) or (bad) leaveq sub (bad) mov (bad) mov fdivrp in cld in (bad) rex.RX jne addr32 xor int (bad) mov in loop mov push mov xor (bad) repnz pop fdivrp (bad) (bad) cld pop test (bad) (bad) (bad) out rex.WB sbb xor outsl push jrcxz mov adc (bad) cli fildl sub (bad) jge adc (bad) sahf mov add and or repz rclb std movsb sub and scas (bad) adc cli xor adc jne bt setp mov inc bsr cmc neg sub rcr shl neg movzbl mov test test cmp clc sub clc test cmp cmp pushq test clc clc cmp jmpq bt imul stc stc jmpq test test test jle jne shl mov bt shld or shld mov cmp cmc sub jmpq jmpq jne sub shr xor mov bt cmp or jmpq adc jmpq jmpq jne not movzbq sete mov jmpq lea movzbl mov jmpq je cmp clc stc sub stc stc cmp jmpq or jmpq callq jo mov jmpq jae test stc cmp jmpq ja jmpq jmpq rex.R rex.WRX push rex.WB cs insb add cmpb sti out in push rex.RXB sbb lret (bad) movabs rclb rex.RX gs add (bad) pushfq mov and movsb mov (bad) stos pop jmp jl pushfq or (bad) insb sahf mov xor adc movabs (bad) or lods mov stos (bad) xchg jg push jno leaveq xchg xchg lret enterq adc xchg (bad) mov push and jrcxz sbb nop leaveq (bad) push xchg imul out mov or xor stos (bad) (bad) (bad) callq sub int insl pop sbb mov (bad) (bad) jmp xchg sub add sub cmpsl (bad) cmpsb sub pop (bad) lret (bad) (bad) (bad) in xchg xchg xor fiaddl xor sub jae (bad) jo (bad) (bad) (bad) out (bad) fldenv imul lea rex.WRB (bad) (bad) out xchg mov mov (bad) mov rex.WB cmpsb lret add push (bad) lret mov (bad) (bad) push xchg pushq scas test mov imul in rex.WX movabs hlt (bad) out cmp (bad) push (bad) (bad) push mov fldenv movsl jge and adc sbb repz (bad) push or leaveq in callq (bad) (bad) clc mov (bad) rex.WR xchg push jle lret jb lods sub (bad) (bad) (bad) cli or cmovb (bad) sti mov (bad) xlat stc outsb fimull mov jno or or lahf push std pushq mov mov xchg mov lock (bad) (bad) decb (bad) adc add add mov mov movabs push movsl push rorb rex.RXB movslq (bad) enterq mov jge lret mov nop cmpsl mov adc pushq fcmovnb sahf mov xchg lods add (bad) (bad) and movsb enterq insl mov sub outsb pop (bad) mov (bad) or mov (bad) nop sub pop (bad) movabs xchg adc (bad) or adc mov fidivrl or sbb (bad) jl (bad) jne callq movabs sub jmpq cwtl (bad) pushq sub or mov insb mov push test (bad) or add jmpq mov sub mov jmpq xor test repnz jmpq jmpq jmpq jne jmpq jmpq callq jmpq repnz jmpq je cmc xor adc movsbq push dec rol ror mov lea adc not sub lea lea lea jmpq jne rcl mov cmc sub add ror mov cmp cmp stc cmp sub cmp cmc pushq cmc cmp jmpq jb cmc clc test jmpq cmp cmp sub stc cmc pushq cmc clc cmp jmpq idivb sahf roll or adc (bad) mov sbb test repz (bad) jg pop cmpl (bad) imul mov xchg nop add xlat sub retq add in mov sbb out (bad) callq in sti stc sbb in rex.WRXB rex.WRXB jmp (bad) flds data16 xchg rex.WXB or or adc xor stos jmp (bad) add jns (bad) xchg or sbb (bad) mov and in sbb movabs xchg mov loopne scas rex.RX hlt xor lret pop sub jb repnz (bad) (bad) xor (bad) (bad) or and dec (bad) (bad) out jne in (bad) rex.WR movabs ror outsb mov pop pop mov outsl jmpq je jmpq rep jmpq jmpq ja stc imul stc cmp cmp jmpq jmpq pushq jmpq add push push rex.B rex.R insb imul movslq je add test jmpq je cmc bt sub stc cmp jmpq mov scas jg jb adc and add (bad) mov (bad) jrcxz (bad) jrcxz (bad) or movabs sbb or ffreep add mov movabs rcll je sub int3 (bad) jrcxz and add enterq fdivrl jg mov pop lea fsubrl enterq sub test xchg je (bad) (bad) movabs shlb pop mov cld or (bad) (bad) fsubrs stos add ja (bad) xchg xchg add add pop test xchg rex.WR add pop out and or and fld1 xchg fcmovnb sub scas sub test sarl mov rex.RB hlt push sub sub (bad) imul cmp xor add ja and rcl sub sar shr shl movsbw add setg shl dec lea mov neg sbb mov stc clc cmp repnz jmpq jmpq jmpq jb clc clc jmpq callq jmpq adc jmpq test cmp jmpq sub rex sarl (bad) cmp test (bad) cmp fild out cmp lea repz movsl (bad) xchg or (bad) xchg and sbb pushq mov mov or xchg loope (bad) mov adc fist (bad) push xchg repnz scas lods add (bad) sbb add jl push sub (bad) (bad) (bad) decb (bad) (bad) (bad) decl jne jmp addr32 (bad) clc rex.WRXB xchg sbb (bad) pop pop (bad) or lahf sbb xlat callq mov outsl or xor js mov fldenv test sub mov sbb test in fldl js cmpsb and pop (bad) pushfq xchg mov imul (bad) mov pushq mov (bad) and xor fstpt (bad) std xchg rex.WRB mov (bad) jg repz (bad) jns and sbb cmp xor jb stc pop scas xor sbb xor mov sbb sbb xchg scas or std push mov cwtl and (bad) (bad) std or loopne or rex.WX repz mov enterq imul xor rex.WX and retq add jbe rex.RX rex.WR (bad) (bad) (bad) decl mulb movabs sbb xchg jmpq in xchg add callq lahf xor or or mov lock and jle jmpq je test test jmpq sti push add rorb (bad) xor (bad) (bad) mov fcompp xor add mov jno xor addl mov jno (bad) xor mov cld jbe cmp push rex.RXB in in pop adc scas data16 rex.RB xchg rex.XB fwait rex.X (bad) sahf xchg ss mov out callq push adc or (bad) fwait stos jge mov out popfq test (bad) rex.R push rex.WX (bad) es fistl movabs movslq (bad) (bad) cld or or and popfq mov pop mov scas shll fs (bad) outsl lahf add add sbb movabs cmp stc imul (bad) push cmp and xor and add repnz xor xchg test mull add out rex.B fs jno adc sbb sahf mov adc jmpq jmpq mov stc bts mov mov jmpq jmpq mov jmpq jb stc stc cmp jmpq jmpq jmpq jmpq cmc mov jmpq out sub js (bad) (bad) fs jrcxz xor nop mov mov or sarb mov rex.RX loop,pn and or push adc movabs xchg jg add movsb (bad) (bad) movabs nop and repz test stos cltd pop clc pop sbb nop jno mov mov xchg rex.RXB (bad) (bad) (bad) cld and (bad) (bad) (bad) (bad) mov rex.WRX subl add xor pop jle (bad) xor adc mov sub mov rex.R xor xor leaveq stos cmp sub sub jle xor lret mov push mov pop std mov (bad) je rol or push rcr jmpq hlt or je outsb (bad) clc loop adc lock lahf xor (bad) xchg cmc jmpq pop loope repz cs retq lea out (bad) xchg imul mov rcll push cli sub (bad) adc pop xlat lea (bad) nop rex.WRB enterq jmpq (bad) (bad) mov jnp mov pushq rex.XB scas sbbb int3 and nop xchg (bad) rex.W loop rex.R fnsave xchg ja jb sar (bad) sti stc outsb or (bad) decb rex.RX (bad) rex.WB add or add nop rex.WR sbb xchg sub jno push movabs push notb rex.WRB retq cs mov (bad) or sahf rex.WXB adc (bad) movabs push cmc enterq loopne lret repnz jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq je bswap lea setns lea not xchg movzwl bswap bswap lea lea movzbl jmpq pushq test cmp jmpq jb bt test cmc cmp jmpq (bad) push push mov mov movsl mov jle mov (bad) xchg mov and mov pop movabs in pop callq pushq (bad) xor outsl jne adc mov or popq or sbb rex.WXB mov (bad) sbb add mov out sbb and mov sbb (bad) (bad) sti lret mov (bad) (bad) pop rex.RXB pop pop lret (bad) cs in (bad) rex.WRX or cmp (bad) sbb enterq iret subl jb rex.RX cmp jmpq sbb xchg push pushfq fs xchg rex.WRX andb cmp jmp adc shrb (bad) (bad) ja pop pop (bad) push idivb sub jl xor mov (bad) movabs xchg btr or add dec shld ror (bad) repz retq cmc cmpb jmpq jae je test bt add cmp cmp jmpq ja sub dec sub test inc add lea movsbw mov mov mov mov mov mov jmpq stc bt test test jmpq shr sub sete movsbw lea jmpq jmpq subl mov repnz cmc in adc xchg cmp rex.B xchg movsb mov push ss fldenv xchg push cmp (bad) sub imull movslq xchg pop sub pop mov (bad) mov (bad) (bad) std test adc add or je insb and out (bad) addr32 mov nop sti mov push mov push (bad) (bad) fidivl rex.X and es mov (bad) imul (bad) out push cmp or or outsb wbinvd rex.RB loopne shll push pop lret sarb xchg (bad) fdivrl hlt cs gs movsl xchg (bad) jne (bad) jo jg sub div lods mov sbb mov (bad) mov xor insb xchg add outsb imul (bad) fbld ja pushq fs out loope mov outsl pop (bad) shll std imul xchg rex.B rex.XB cmp pop (bad) icebp jmp lea mov and (bad) rex popfq xchg (bad) mov sti (bad) mov (bad) (bad) std rcrb lret jne sub movabs xchg push loop mov jae rex.B cmp xchg (bad) mov rex.WRXB loop xchg ficoml incl (bad) rex.WRXB and int3 sbb shlb lret (bad) mov (bad) (bad) (bad) push jo stc xchg out sub flds xacquire iret jno sbb lea out js repz jl mov push retq fnstcw add jb movabs adc (bad) xchg sub je imul popfq (bad) bt stc test movb clc je cmc test jmpq (bad) out (bad) jmpq sbb mov out and lock mov rex.WB push fiadd and and adc repz or mov sub rex.WX mov sbb push cmc mov (bad) rex.WXB stos mov jmpq jns xor icebp (bad) sub (bad) or adc je adc (bad) (bad) sti push callq (bad) (bad) (bad) push retq xchg nop cs adc lret movabs callq (bad) (bad) (bad) xchg or rex.B out (bad) loopne sbb xchg push xorl scas mov push movabs movsl or in loop cmp rex.WRXB mov gs mov bnd stc movb cmp cmp jmpq je cmc bt cmc clc sub bt jmpq pushq jmpq jmpq jmpq bt test clc cmp sub bt cmp jmpq jmpq callq movzbw sar btc shl add bts ror inc mov stc cmc cmpb jmpq jmpq cmc add neg bt mov jmpq mov pop shr out (bad) (bad) xchg pop push js in (bad) jbe stos rex.W xchg lret (bad) rex.WRX rex.WRB es in xlat rorb sbb mov outsb xor pop rex.RX getsec pop adc push (bad) (bad) (bad) (bad) pushq outsl (bad) (bad) std cwtl mov push (bad) sub lods rex.WRX insb mov scas iret repz (bad) adc xor and rex.WRX xchg (bad) push (bad) (bad) (bad) incb rex.B sbb ja paddusb movslq in (bad) jb movabs jbe out sbb jrcxz mov cmp mov (bad) (bad) adc fs (bad) mov xchg adc jb sbb mov jmpq cli rex.W adc jbe push pop out (bad) sub test add out or push mov xchg (bad) insl jrcxz or cltd rex.WXB cmp pop add add icebp out jmp (bad) (bad) cmpsb (bad) ja stos movsl jmpq add movabs mov and jmpq cld push pop or (bad) jrcxz movabs test movsb (bad) rex.X jns test push lret cli sbb jno pop adc mov push lock xor imul mov mov cmp adc rex.RXB add (bad) xchg (bad) or cwtl pushq negb (bad) scas orl rex.RX rex.RXB int3 icebp rex.WRXB sub jne fstp js sti cmp xor xchg mov fucom mov addr32 pop sbb lea sub add scas jmpq jmpq push push push push xor cs insb add jmpq mov mov pop xchg (bad) roll mov push adcl outsl (bad) addr32 mov (bad) idiv fidivl rcrl icebp xor mov mov xchg add sub mov jmp or stos xchg rex (bad) retq out xchg out rex.WX add and sbbl rex.WRX pop movabs sbb pushq callq sub rex.WRB cmpsb rex.W (bad) (bad) movslq xor lock (bad) (bad) (bad) std add cltd cmp adc rex.WXB in fisttp xchg retq sbb (bad) xchg rex.WXB (bad) icebp rex.WX fcoml sbb movabs mov sbb jmpq mov int3 rex.WRXB mov fwait xchg cmpsb xchg sbbl rex.RB (bad) ss (bad) pop xor (bad) outsb and je (bad) repnz xor divb in mov test rolb add adc ja rcl mov sub or shr movzbl ror add data16 testl or mov (bad) lock stc dec mov test clc cmp repnz jmpq jb test test cmp ja jae adc neg movzbw adc mov sbb lea bswap mov bsf adc mov clc xor bt cmp jmpq out stc mov fmuls jg (bad) std add mov and push adc rex.B mov imul pop (bad) leaveq flds pushq cmp xchg adc push shrl add push (bad) and cli jbe and (bad) sub add (bad) mov test (bad) xchg xchg (bad) add enterq clc cmp sar mov int (bad) fcomps jnp rex.W (bad) (bad) cld pop mov push sar (bad) (bad) jmp es movsb and (bad) cltd (bad) mov xor retq lods add add imul rex.X jns loope jae rex.WX add lock sbb movabs mov mov xchg iret insb adc cmp add cmp xchg and jne jmpq mov jmpq ja jmpq pushq jmpq xor clc rol cmc bt cmp lea setbe mov movzbw lea setb movzbw pop jmpq jne shl rol btr mov test ror bsr sbb sub bt dec mov cmp cmc cmp sub stc pushq clc cmc test cmp jmpq sub (bad) out sbb mov mov and rex.WXB fsubrl cli test (bad) leaveq cmc (bad) movsl rex.X fwait (bad) rex.B jno xchg (bad) jb adc leaveq rex.W lock imul cmpsl sub scas subl rex.B rex.RB (bad) callq out jmp mov xchg clc add sbb mov mov imul mov and jae stos cld xchg out jle xor (bad) (bad) (bad) cld (bad) or cmpsb insl (bad) (bad) (bad) (bad) cmpsl test push stc fs mov xchg retq sbb add movabs mov add jno movsb xchg rex.W or sub movabs addr32 faddp shrl mov data16 mov jae push mov imul cmpsl jne (bad) cmc (bad) ror bts bsr mov and sub rcl mov cmp sub bt jmpq bt test jmpq jmpq (bad) (bad) (bad) (bad) retq pushq rex idivb movabs rex.WX sub (bad) xchg jle test sub (bad) pop sbbl cmc xchg pushq adc andl rex.B icebp (bad) jmpq push scas push in lock (bad) (bad) cld and rex.WR (bad) (bad) mov (bad) xchg (bad) repnz (bad) or mov xor pushq sub stos test add nop mov out or pop (bad) or mov pop mov (bad) jns test lea cwtl adc push fimul push xor movabs adc xor imul xor mov fild mov std js adc gs (bad) (bad) cmp add add hlt (bad) ss push cmp pop mov jg pushq mov clc push add xlat rex.R faddp mov mov sbb mov outsb nopl shrl retq mov insl fldt stos jmpq (bad) out add (bad) jns rex sti div sahf cmpsl cmp rex.XB retq cmp fwait (bad) pop (bad) mul (bad) imul movabs xor pushq int pop cmpsl sub jmp jnp (bad) in sbb psrad mov addr32 pop js mov mov adc jl movabs jmpq (bad) (bad) cld xor repz (bad) (bad) pushq push fwait ds test (bad) ja lahf jnp adc push lret or pushfq rex.WB repnz jb movabs rex.W (bad) rolb add add jl cltd fs pop adc scas pop repnz jmp sbb cmp int loopne jrcxz xchg notb test mov hlt cltd and ss sarl test sbb pop rex.B add clc stc imul jle bt test add jmpq cmp jmpq cmc sub jp cmc bt cmc ror cmp jmpq jmpq sub jmpq test jb je jmpq jmpq sub clc pop sub xchg movabs and movsl adc jp mov outsl pop mov movsl sbb in (bad) (bad) adc fsub (bad) callq rex.WRB ss add cmpsl jp retq xlat mov xchg retq adc or (bad) mov (bad) xchg rex.WB rex.WB pop jge adc fimull jle pop rex.WRB and sub sbb cmpsl mov xlat (bad) stos imul cmp (bad) (bad) dec loope movsb shrl jb adc scas (bad) scas mov add add rex.WXB pushq jo outsl rex.X xchg xchg sub jge mov shll cmp rex.WRXB loop insl test cmp add mov pushq (bad) mov outsl jno or jmpq jmpq ja jmpq jmpq callq cmc or jmpq jmpq pushq jmpq jmpq cmp jmpq js loopne mov mov mov jmp flds bnd retq shrl adc test lret mov jo (bad) mov or fcmovnb shrl mov cmp (bad) mov lea add adc push movabs nop xchg and rex.WXB (bad) add cmp rex.W (bad) (bad) std jmpq in mov or (bad) cmpsl xchg jns movabs mov es (bad) cld movabs and (bad) pop lahf popfq addr32 xchg xor je loop xor (bad) movabs rex.WB pop rex (bad) (bad) decl movabs mov (bad) or mov fbld rex xchg adc rex.R shlb fdivrs in leaveq cmpsl out out stc pop cmp repnz jo xchg mov push (bad) jg enterq rex.R repz lock adc cltd mov sar bt jmpq push shl mov shr sbb clc sub seta not movsbw lea jmpq cmp stc stc add jmpq or add scas loopne icebp pop rex.WRXB loop (bad) sahf push jo mov jnp xor mov loopne xor icebp jrcxz add sar sahf cmp xlat add (bad) sbb mov lret cmc (bad) adc movabs sbbl stos movabs xor (bad) (bad) (bad) sti sub mov (bad) std mov callq pop out push or ja mov mov xchg (bad) stos push push adc rex.WRXB mov jo cmp movabs (bad) (bad) fldcw push movabs rex.RX mov push or test sbb movabs ffree std xchg loope test sbb (bad) xchg sub sub adc retq pushq mov mov add bt sar mov bt jmpq jmpq jne bsf movzbl ror cmc mov stc cmp test cmp add cmc test movzwl sar shl mov test cmp jmpq (bad) (bad) (bad) loopne and out icebp callq rcr sbb cmp int3 pop (bad) jno in shr ror add loopne repnz or (bad) ss mov (bad) shrl cltd add adc jle xchg outsl jmp in mov jrcxz adc (bad) (bad) (bad) std repz push iret fnstcw push movsl xlat sub std mov lock mov (bad) (bad) (bad) dec clc pop xchg movabs or lahf xchg mov xchg stc data16 fisttp out rex.WXB jmpq mov movabs fldcw adc and add test test stc cmp jmpq cmp jmpq pop pop xor sahf xor mov pop jnp fcmovne out clc loope movabs xchg pop jbe mov or test fldl imul stos sbb sub rex.WR push int3 movabs movsb rex.WX (bad) scas callq fist (bad) sbb (bad) (bad) cld test (bad) (bad) callq push (bad) sbb jrcxz add cmpsl adc mov xor sub add mov callq jo loope rex.XB lea pop mov jno xor push mov jb xor cmp out sarb in sahf out rex.RX icebp cmp add pop rex.X fnstsw rex.X adc jmp jo jmpq callq jmpq test rex.R rex.WRX in xchg lret cmpsl mov ficoml cmp out xchg add jae orl ja retq sub rex.WX xor insl adc (bad) xor pop mov rolb mov (bad) scas retq pushq loope xlat (bad) cltd subl out neg add mov insb sub por sbb lods movabs rex.XB js lods mov (bad) (bad) sti imulb mov xchg push xchg movslq jne push movsl testl or adc xor cmp ja (bad) adc retq pop test imul rex.R cld add std mov adc imul mov fisttpll and and rex.WX adcl or (bad) je bt or push shr movzbw bswap ror mov cmc test sub jmpq jne rcr sub btr sub bsf sar mov clc adc dec add bt cmp mov clc test cmc bt test jmpq not lea movsbw lea jmpq movsl xor sub sbb jnp retq pushq (bad) xchg cld (bad) mov mov (bad) rex.WRXB sbb push rex.WR sbb je and xor add sub cmp adc mov rorb insl shlb jbe mov sbb xor mov (bad) cli mov mov hlt sbb stc jne (bad) mov rex.WX push lahf cmpsb loopne add rex.WB (bad) (bad) (bad) sti mov movabs js (bad) (bad) cmp mov cld sub (bad) int outsb pop (bad) (bad) (bad) lcall outsl jno rex.W mov ficomp jp retq mov sub imul rex.X sub movabs pop xor mov cmp mov cltd pop cld cmc cmp jmpq ja clc clc imul jmpq pop push jge repz adc rex.W jp cmpsl callq rex.WRX xor insb or xor add sbb iret nop not mov and in rex pop leaveq out pop mov add leaveq mov pushq push rex.R (bad) sub rorb rex cwtl jrcxz (bad) rex.WXB test (bad) rex.R ror loop ds mov in rex.WRX andb mov (bad) (bad) (bad) (bad) std ja (bad) mov add add or insb cltd cli cmp cmp add cmpsb cld push loopne adc pop subl lret fsubrs adc and rex.WR jne bts neg xor and ror mov xor setge add test mov mov jmpq repnz in std xchg and retq mov or (bad) hlt cmp (bad) lods stos add xchg rex.WX movb cmc in cwtl push xor outsb add xchg jbe and (bad) pop xchg sbb pushfq add sarb rcl xor xor xchg (bad) (bad) sarl adc mov push mov jmpq in scas fadd in cltd mov rcrl (bad) pop repz add mov (bad) mov adcl push and iret sti in add add gs adc add pop rex.WR ds pop rex.WX sub mov push cmp and rex.WX xchg sti imul cli push xor scas sub and sti push sbb and (bad) (bad) pushq mov iret test xchg add or add sub movzbl shrd btr add and cmp bswap mov mov or mov test clc repnz jmpq jne btc mov test add test test movzwl and shld test mov bt add cmc stc cmp clc mov clc clc clc test test jns je bt stc stc add cmp stc cmp jmpq jmpq jmpq ja cmp inc sub setg add bswap bt mov cmc mov bt clc repnz jmpq add rex.WRB stos push (bad) add (bad) rex.WX popfq (bad) sbb scas sbb ffree divl adc sbb (bad) push cld (bad) or (bad) rcrb movabs mov callq leaveq sbb fldt (bad) idivl lret sub pop jle xlat sbb jae cmpsb jrcxz adc or (bad) stc retq push cld mov push xchg rex.WXB push test (bad) (bad) (bad) sti (bad) add cmpsl ds (bad) (bad) incb movslq mov (bad) xchg lret rcr rex.XB cli sahf adc adcl (bad) xor rex.X callq (bad) rclb gs jns scas (bad) jno in cmpsb xchg iret insl pop clc sbb je (bad) (bad) xor mov jp (bad) cmp or jmpq mov cmc cmc sub jmpq (bad) mov btr gs movsl pushfq rex.R sti fimul jge adc test (bad) lea int (bad) in (bad) (bad) sbb rol cmc cmp (bad) out (bad) xchg xchg (bad) xor lret retq rex.RXB ss mov jno (bad) (bad) fs xchg mov fsubs xchg test (bad) (bad) std jnp orl jle sbb (bad) (bad) std adc sub (bad) (bad) (bad) incl rex.WR cltd adc lahf mull movabs pop std test (bad) or fdivl (bad) sbb pop (bad) int3 mov nop mov std imul pop rex.RX cmp cmp sbb xor sub xadd mov cmp mov cmp bsr mov shr sbb bsr shrd mov test or jmpq je xor (bad) icebp add btr push lea or mov inc sub mov bswap setp lea jmpq jmpq cmc jmpq insb mov cwtl movsb mov movabs add jp ficompl and stos adc std lock xor insb or cltd xchg std in or pushq (bad) adc mov and jb (bad) std mov push rex.W (bad) je insl ja (bad) (bad) (bad) (bad) mov in notl cmc pushq test (bad) (bad) std imul add or movslq xor pop in jno rex.WX (bad) sub ds mov and adc es fimul lods jge add (bad) cmp (bad) jrcxz jmpq insb (bad) mov jl callq push sub and (bad) jmpq xor and and jne adc mov (bad) cmpsb enterq idiv in xor mov popfq rex.X pop cmpsb sub mov imul movabs sahf add (bad) (bad) jne insl test insb adc (bad) (bad) push (bad) data16 or push jg (bad) (bad) std test (bad) jns cmc lahf or (bad) (bad) std rex.B (bad) (bad) pushq sbb rex.WRB pop mov push std cli push sbb or cmpsl enterq jmp rex.R rex.X adc (bad) (bad) iret push shrl sbb mulb push popfq sahf mov add xor callq add callq rol mov test cmp test jmpq jne sbb lea mov test stc clc bt add bt clc bt movzwl cmp jmpq jmpq jmpq jmpq insb (bad) movabs lret pop and rex.XB adc popfq rex.W pushq sti loope add frstor mov nop push (bad) sub push mov (bad) data16 adc (bad) jnp push outsb hlt mov xlat movabs push rex.RB repz stos xor std mov cmp add (bad) std rex.WB negl (bad) (bad) (bad) (bad) mov stos mov or nop cld in rex (bad) cmp rex.X add cld (bad) or mov repz xchg ss rex.R sub adc (bad) push jo jmpq ja jmpq push push rex.RB rex.RB rex.WRX cs insb add adc cmp rex nop out lret lret mov test std jrcxz adc retq icebp repz vmaxps (bad) mov xchg xor mov nop mov icebp (bad) xor (bad) lahf gs rex.RB lods rex.WB popfq rex.R (bad) and (bad) sbb mov imul pop div test mov rex.WXB (bad) (bad) cld (bad) in lret rex.RX (bad) (bad) (bad) lahf (bad) (bad) movsl add adc std mov add add (bad) rex.WXB lock xor xchg or mov add and jmp in adc (bad) push push cmp cld repnz (bad) mov std cwtl sahf (bad) and mov roll cmpsb not pop add xlat mov jg cltd out xchg clc cmc clc cmc add jmpq or jmpq jmpq test mov adc cmp or nop add adc rex.WRXB fsubrl jne fimull jle fwait sbb std (bad) add std clc adc mov lahf and jmp pop mov rex.RXB xor lods loopne mov fnstsw test pushq (bad) (bad) sti (bad) push in adc (bad) (bad) (bad) std cwtl bts hlt scas lea (bad) lret popfq fnstcw (bad) or sub xor jae mov and sahf rorl (bad) mov scas mov (bad) (bad) (bad) decl sub add movsb add pop jg xchg movslq rex.WB in rex shr sub add add jrcxz push or stos add jb loop mov cmpl sbb movabs mov js cld pop cmp adc sub push xchg rex.WR adc jle es cmp or and and stos fxch sar push subl leaveq movabs sarl fildll mov cmp cmp jb retq adc and (bad) pushq (bad) add (bad) movslq jmp (bad) (bad) pushq frstor stos es adc jno in insl adc xor mov outsl push pop add add pop mov lods cmp out (bad) fsts lahf xor imul stc in mov rex.X rex.XB add jae cmp pushq outsl sarl cmp (bad) xor sti cltd (bad) sub mov test test bt or inc shld mov rcl add cmc sub sub dec bts rcl mov stc jmpq jg jne jmpq cmp test movb jmpq jmpq cmp jmpq jmpq cmp lods imul mov sbb mov (bad) int repz iret cld loope mov ja sbb negb (bad) hlt sbb scas adc in push imul imul leaveq pop (bad) out rex (bad) in sbb jnp mov rex.R or (bad) mov sti cld xor jl add rcrl out sub scas push or lahf pop mov cwtl rex.WB movsl mov scas (bad) (bad) iret (bad) ja (bad) (bad) (bad) movslq test (bad) outsb scas orl sub (bad) (bad) jmpq (bad) xor mov sbb pop imul cltd sub pop (bad) mov cmpl cs mov mov orl test bt jmpq jmpq jne mov or sub test and mov add and cmp jnp add adc mov clc jg clc test jge je bt sub jle cmp je ja cmc bt jmpq callq clc xor add movsbw sar sar mov jmpq adcl (bad) outsl mov add add imul (bad) shll out rex.W stc mov in jbe mov insb out repnz adc pop (bad) fxch movmskps push push (bad) movabs int xchg rex.B cmpsl mov jp rex.WX or movabs adc clc push lock outsb (bad) ss clc addr32 xchg pop cmp jg (bad) (bad) sti nop pop (bad) mov (bad) and xor in out out (bad) (bad) jmpq pop rex.B scas jno mov (bad) rex.WRXB (bad) adc sbb cmpps xor stc mov out (bad) (bad) out (bad) cmp mulb shlb int leaveq pop fimul adc add fildl add cmpl callq decl mov mov sub stc xor dec mov sar mov jmpq movb jmpq jmpq ja jmpq jne rol mov cmp rcl sub dec sbb cmc mov cmp cmp clc sub jmpq jmpq push mov loop (bad) add or lahf rex.WR push pop jle xchg mov (bad) sarl repnz fbstp mov out rex.WR fbstp vpsrlw sub (bad) hlt or push xchg test imul negl mov movabs (bad) sbb jg fiaddl fdivrs jno (bad) (bad) sti out jne sbb (bad) (bad) (bad) incb xchg stos (bad) push mov in imul cmp rcll jg stc mov adc icebp sahf pop xor mov (bad) (bad) (bad) mov xchg sti test es xchg pop (bad) lahf mov lret (bad) shrl retq int3 mov jnp mov ds (bad) mov mov stos push mov test xchg roll neg ror adc add cmp rcl add cmp jmpq ja stc jmpq pushq jmpq test hlt or in int jmpq add xor stos nop std insb mov sbb jg adc out fidivl retq xor rex.WRXB fldcw fadd (bad) sahf sub sbb outsl cli loop clc (bad) sbb mov xor xor (bad) (bad) cld mov in (bad) sub xchg not mov add (bad) icebp cmp pop adc rex.RXB retq (bad) jbe cmp sarl mov push (bad) mov (bad) out rex.WRX iret lock (bad) push mov xor push lock nop leaveq jmpq ja cmc stc jmpq jmpq jmpq not setp mov jmpq sub jmpq sar clc adc bswap mov cmp cmc cmc cmpb jmpq cmp jmpq callq bt or jmpq jmpq callq bt or add shl inc rcr mov cmp bt clc bt cmpb jmpq jmpq jne test cmp movb test test jmpq je shrd btc inc or push sar rol xor rol mov (bad) lock in and add fldcw and xchg (bad) lea jmpq div loope cmpsl mov je roll sahf jno lock rex.X jle add enterq add mov movsl add jge jp cmpsb clc rex.WRB movabs retq decb ss cli jge (bad) pop stos lea jne add (bad) (bad) cld push mov sahf (bad) (bad) (bad) callq jge mov test sbb sahf rex.WB sbb ja mov mov rex.WRXB movslq ss mov fcmovu or add add pop (bad) jmpq pushq rex retq loopne sbbl pop rex.RB out and add rex.WRXB rex.R sub fimul es loop adc adc (bad) stc sbb je bt test sub cmp cmp stc cmp cmp jmpq or js cwtl in sbb cmp cmpsl cmc movabs jae xor rex.R fcmovnbe add xchg (bad) mov data16 jge cwtl movsb rorb mov xchg (bad) rex.WRXB rex.R cli out addr32 rex.RXB or mov loope repnz (bad) vrsqrtps xchg out callq rolb cmpsl hlt pop pop pop rex divl movabs (bad) pushq xchg push std xchg pop or ja jle incb add add popfq rex.RXB ss sub xor xor (bad) jle es pop jne (bad) add cmpsl mov lret sti mov mov movsb std cwtl (bad) mov pop xchg imul cmc cmc adc jrcxz add or and (bad) jmp int push repz rolb rclb (bad) adc sub nop cld xor and movabs jae cmp sbb orl (bad) (bad) (bad) std pop pop rex adc cmp add add stc or fsubl cltd (bad) movabs movabs fcomps cmp movabs adc (bad) (bad) add jrcxz loope add (bad) xlat jbe retq leaveq jns,pt mov imul int icebp lahf scas movsb stc pushq (bad) pop mov mov ja (bad) sub retq sbb andl rol loope vfmsub213ss adc stos jns (bad) (bad) iret adc mov sbb pop cmp (bad) pushfq movabs sbb mov or movabs fwait jp (bad) or xchg jg (bad) (bad) jmpq jrcxz callq int3 cli jns mov (bad) mov test jp (bad) leaveq jbe out iret add jl (bad) mov xchg rex.WXB testl rolb fidivl enterq rex.B mov callq mov leaveq mov and (bad) mov insl add cli xchg mov or mov cs pop adcb jl xchg lret jne lret mov rex.WRXB push int3 mov (bad) xor (bad) jbe lret insl (bad) (bad) pop cmpsb jno (bad) ja lret mov mulb rex.WXB test mov jo jno,pt push sub xor adc (bad) lods mov scas push rex.XB rex.WR adc pop repnz rorb rex.X rex.WR je push subl sub adc mov decb (bad) mov scas js cmp test test cmp cmp je and imul cltd cmp test adc sub sbb test sub jrcxz fnstenv rex.WB cmp or push (bad) push (bad) fnsave imul lret (bad) (bad) icebp imul je ds lret jle (bad) jno shll add leaveq pop lret (bad) movabs and cmc rex.B xchg jae movslq pop int outsl rex.X mov push push jrcxz (bad) callq or (bad) js in clc imul adc retq push callq add jmpq jnp sub nop icebp cmpsl cltd adc jg in jg js stos mov xor (bad) (bad) cltd push xchg rex.WX xor push push movsb rex.WX fdivrs (bad) rex.WR fildll mov lret rex.WX xor xchg mov mov out adc (bad) fisttpl fmull in pop jrcxz (bad) test in (bad) shrb (bad) push or mov (bad) (bad) (bad) xchg jp xchg mov mov insl push add movsl and adcb scas movsb hlt jl add jmp (bad) sbb xchg sbb stos (bad) cmp adc jrcxz sbb xor jl adc jle xchg (bad) outsb and jmpq rex.RB lahf bnd (bad) (bad) imul add (bad) loopne test (bad) push and adc sub pushq and rex.R mov in (bad) imul (bad) xchg cli outsl mov add cltd ja cmp mov pushfq mov movsl and rol (bad) mov sbb mov retq (bad) iret (bad) and jne stc cld (bad) rex.WRX add jmpq lock imul scas mov mov cli fldt test add jmpq jmpq ja jmpq jmpq jmpq (bad) mov js add pushfq data16 sub rex.WRB sub or (bad) cmpsb mov xchg fnstsw rex.WRXB (bad) mov jae jp sbb mov sbb mov lods imulb loope push (bad) (bad) (bad) cld or (bad) (bad) (bad) (bad) sahf jl cmp sahf jne rex.WRB rex.WRXB xor (bad) scas adc imul or mov push std push cli lods fstl fdivs insl adc add add mov push or pushq (bad) or or cmp push (bad) jnp movabs push (bad) mov jne cmc jmpq test jbe pop int mov (bad) mov add rol rcl cmp mov sar or and ror mov test cmc repnz jmpq jae sar sub bt mov sbb sar mov bswap cmp cmp mov jmpq jmpq iret (bad) mov movabs (bad) or add fisttpl mov and (bad) rcl push cld sub out push or callq repnz js pushq xor mov gs (bad) and rex.X mov jmpq mov adc mov cmp cmp xchg rex.W data16 pop std pop xchg xchg push pushq mov gs (bad) (bad) (bad) sti mov (bad) (bad) sbb sbb xor cmc movabs clc (bad) (bad) (bad) lcall mov rex.B or je mov mov rex.B imul rex.W lock push fisttpll adc cmp sub jb (bad) cmp bnd xchg add adc rex.RX lahf mov stc test jmpq test cmp cmp repnz jmpq jb cmc test cmp bt cmp jmpq jmpq setl bsf shrd xor or btc btr btc mov xor stc neg or add and ror and mov bt test jmpq push mov loop adc (bad) icebp sub mov xor gs mov push stos fisttpll xchg mov (bad) iret pushfq es popfq cmp (bad) pop (bad) sbb in jle pop ss adc sbb cmp (bad) data16 xor xchg faddp rex.RX ja in sub and (bad) (bad) sti mov fildll (bad) (bad) (bad) incb or mov insb jne mov movabs rex.RX adc int ror (bad) (bad) (bad) dec bnd cmpsb cmp add cmp mov lret out add ss push loopne cltd int movsl sahf (bad) mov stos test adc rex.WB rex.B rex.RXB xchg adc mov sarl (bad) rex.R sub stos rex.WRX xlat retq sahf cld hlt xor cmc xchg or (bad) push or pop (bad) out xchg (bad) (bad) hlt movabs imul sbb scas push (bad) (bad) iret jnp or (bad) (bad) (bad) std movabs (bad) (bad) mov and (bad) (bad) (bad) std cmp (bad) (bad) ljmp (bad) mov cmc enterq popfq std adc rex.X jmp cmp rex.WR rex.RX sarb rex.W (bad) rex.WXB xor xchg cmpl repz mov xchg insb std jno xchg sahf rex.WX testb xor lret push outsl push adc adc adc adc (bad) add xchg adc popfq sar add mov int3 pop push sbb pop (bad) std scas fidivr sub (bad) (bad) retq stc stos (bad) pushq mov push pop fnstenv in (bad) sahf mov in cwtl cmp xor fwait rex.RB push xor sbb or adc push outsl add or (bad) fs fs (bad) (bad) sti xchg cmp fnstcw (bad) (bad) (bad) (bad) es test rex.B lock nop clc (bad) pop sub sti cli callq jmpq pop pop mov (bad) std or push or xchg (bad) mov jmpq cs callq pop (bad) hlt (bad) or mov cmp enterq xchg mov xchg rex.X adc pushq jmpq cmc bt sub bt test pushq clc jmpq repnz jmpq stc jmpq jmpq (bad) sbb movabs (bad) (bad) repz (bad) or rcl add and stos adc push jg (bad) outsl fwait and jo iret pushq sbb (bad) mov pop std lahf mov sub mov cld xchg nop and mov cltd xchg sarl cs mov jo andl jmpq movabs jg lea out (bad) xor (bad) rex.X mov lods (bad) ja nop enterq sub (bad) movabs (bad) (bad) in mov cmp rex.R mov scas iret jno mov and pop lods out sarl (bad) insb pop mov adc adc sarb andb or xchg or add insb or je mov mov jle (bad) (bad) (bad) decl loop cmc sub lret adc outsb (bad) mov mov (bad) repnz rex.WRXB and rex.X jl cmp cltd or or imul addr32 cmp mov add jle (bad) int3 scas sbb and adc rex.RX stc insl not bswap mov jmpq callq jmpq movabs (bad) pop jge loopne pop or xorl mov pop cmp pushfq mov (bad) rex.WRXB rex.X pop sbb or rex.WX (bad) xor sarb (bad) (bad) mov rex.WRB fildll xchg rex.WRXB and mov insl xchg mull pop mov ficompl add fnstenv or in mov rex.WB mov pop pop loopne stos enterq pop mov mov xor (bad) sti (bad) (bad) (bad) rex.X (bad) (bad) (bad) push (bad) rex.W add sbb (bad) test xor callq iret (bad) (bad) in nop rex.RX fdivrs xor callq (bad) fs rex.WX repz cmpsb xchg xor mov (bad) ficoml mov rorb mov xlat pop lret adc pop (bad) jae adc lock rex.WR pop imul rex.W rex.WXB retq js outsl cmp rorb xor (bad) jae and sub cmpsb pop push out pushfq mov rex.RXB add rex.WX xchg rex.W adc xor out repnz test (bad) fidivrl pop test rex.WXB rex.WR rex.WRXB andl lods sbb adc test push (bad) jb lods xchg rex.WRXB pop xchg (bad) pop mov lock add pop (bad) mov add jo shlb pop (bad) rclb (bad) (bad) cld sbb hlt cmp (bad) (bad) (bad) (bad) test in hlt and xlat add adcl sbb jp xchg (bad) (bad) (bad) loop xor popfq rol fdivs mov mov cmp xchg (bad) mov xor (bad) push sub sbb sbb xor fidiv sub and xor sub or sarl and adc movabs or add jmpq jmpq jmpq in in or (bad) clc rex.WRXB (bad) push (bad) lret or (bad) push cmp (bad) jb cltd negl mov iret cld loope jmp cmp jmpq pop sti rex.WRX (bad) push push rex.RXB rex.RX (bad) cwtl pop jbe or insb fsubrs (bad) (bad) (bad) std push add mov add add adc lea repz out rcll xchg (bad) cmp mov insb sbb (bad) mov sti scas add (bad) ja mov lock xor xchg (bad) xchg hlt jns mov (bad) jl jns stos int jns mov hlt jns mov pop mov hlt (bad) jns mov pop jl lods and jb mov add sub (bad) addr32 (bad) sbb stos (bad) in or je nop popfq cltd push xchg loope insl xchg cmpsb (bad) stc loop rex.R or push jae mov repnz push std jl mov (bad) or sub or adc jge mov rex.WXB xchg imul je mov add push rex.RX pop push decb mov stc imul mov lret rex.R rex.RXB mov stos sbb imul out jle mov cmp xor mov push sbb clc rex.RXB mov mov rex.WRXB (bad) fs fcmovne xor push (bad) cmp xorl xchg mov adc jrcxz pushfq lea frstor rex.WRB pop add sahf adc fsubrs rex.RX stos push xor mov (bad) pop mov nop imul (bad) mov test jg rex.RB movsb sbb jg addb (bad) cmp rex.WR test mov cmp mov mov xchg fildl push mov movabs (bad) rex.B and add sub mov rcl in fistp mov sub (bad) in cmp xchg in callq js rolb push cmp mov sbb jbe xchg test (bad) (bad) adc in pop rex.X movsl mov (bad) mov testb and mov leaveq xchg push scas iret (bad) pop andl rex.WR rex.RB fwait stc scas fbstp add mov ja cmp imul pop add rex.XB xor and loopne fisubrl mov jns mov int3 jnp fs (bad) js lea pop scas mov xchg int3 (bad) sbb (bad) (bad) or mov (bad) sti mov (bad) (bad) (bad) decb rolb hlt add xor (bad) (bad) dec leaveq sar mov rex.WB js cmp in push hlt xchg cmc add jae mov or adc (bad) pushq sub adc addl mov fwait (bad) push mov stc rex.WXB stos rex.R fs rcr or scas adc (bad) mov mov cmp sahf hlt loop sbb or mov (bad) mov ss (bad) sbb or repz rex.RXB or mov fldenv xchg sbb outsb in out rex.RXB imull rex.WRXB sub retq out (bad) rex.WR es (bad) (bad) cld xor (bad) (bad) inc roll iret lods shrb jb popfq xor sub mov out add add imul cld scas adc and rex.XB fnsave repnz sub (bad) fistpll sub movabs xchg mov movsl iret add mov fwait jge or fadds xorb stos or sbb and adc loopne jmpq xchg adc (bad) mov cmpl jbe mov xorl retq jnp mov insl or (bad) mov push rex.WX jno rex.W xor pop (bad) rex.RXB rex.B (bad) lahf rolb jnp xor rex.B xchg xlat mov cld insb pop xor (bad) (bad) (bad) (bad) cld in pop (bad) stos movsl adcl (bad) xchg out xchg mov xchg (bad) (bad) push std cld fwait add add or imul scas lret (bad) movabs fldt (bad) push cmp stos mov jno and out notl xor push (bad) jnp push callq xor (bad) mov push or movsb (bad) iret xchg mov and rex.WXB (bad) and (bad) jge (bad) mov lods rex.WXB rex.WRX pop pop mov test (bad) adc (bad) popq push xorb pushfq mov push mov (bad) mov mov fnstsw movslq faddl (bad) jge cmpsb add xor (bad) (bad) cld (bad) repz (bad) (bad) (bad) incl (bad) imul loope data16 stos xor leaveq sub rex.WR (bad) sahf movabs mov test add (bad) or movabs std fucom rex.WB lods in scas pop ss cmp fdivl pop adc addr32 repnz xchg mov (bad) retq cltd movabs or jae xchg lock jmp rex.WX popfq (bad) jns cld jmpq jmpq je jmpq jne shr sub xor movzbw mov shr add rcl clc mov jmpq jp pushq jae pushq jmpq rep bswap lea pop jmpq callq setns sar bswap not add sbb btc jmpq jmpq addr32 push data16 mov jb movabs cmp out callq cli divb sbb icebp icebp repz and mov xlat mov sbb mov and pop mov lret adc cwtl xor adc rex.WRB jrcxz out (bad) mov popq rex.WB hlt std outsb xchg (bad) rex.WRB mov test rex.R xchg cld rex.WRX and rex.WRX rex.XB ja cltd (bad) (bad) out (bad) (bad) (bad) std ja push in add add or callq (bad) (bad) xlat rex.WR pop (bad) (bad) or (bad) sarb cmp lock rex.WXB lret (bad) (bad) sbb lret mov lahf (bad) mov clc jmpq movb clc bt test test jmpq jmpq retq sub jge or insb pop sbbb (bad) fnsave mov cs (bad) movsb add jge scas push (bad) sahf (bad) xor rex.RX sbbl rex.RB mov xchg rex.WRB fcmovu sub jg and cmp pushq insl rex.WRXB jb mov (bad) (bad) (bad) cld cltd xor xchg cmp (bad) ljmp enterq scas test psrad outsb jmpq sub xchg rex.XB out subl sub sub js xchg add add rex sbb push rex lahf jge,pn pushq movslq or sbb mov andb (bad) out mov cmpsb mov (bad) adc (bad) xchg int or (bad) cmc jmpq bt ror test stc clc sub cmp bt xor clc jmpq adc push rex.WRXB pushfq mov rex.WR xchg fnop lret cmp (bad) (bad) pushfq repnz fisubrl lods rex.WR mov cmc mov int3 out add mov jae ss rex.WXB (bad) sbb sbb fsubl rex.RB fs movabs jl neg cmp fidiv xor sbb fstl pop loop add in std (bad) (bad) (bad) std or out push sti imul (bad) sbb or test test jrcxz adc xor add std xchg lock rcrl (bad) (bad) incl faddp pop (bad) jno rex.WXB (bad) (bad) decl movabs add testb mov andl mov xlat pop scas fnop lods adc mov jae rex.WX gs es add mov leaveq movsb lods mov (bad) mov movabs add test lea shld shld setp xor bsr mov dec add shl sar shr xor mov bt bt jmpq scas xchg ds rex.X sti cmpsb lock callq repz in xor pushq stos leaveq insl push movsl and mov data16 pop add (bad) pushq cmpsb rex.WX jmpq movabs cld lock stos (bad) (bad) imul add pushq sub or rolb fildll incl test (bad) xor adc scas (bad) (bad) (bad) sti sahf movabs cmp ja movabs (bad) xchg (bad) (bad) (bad) (bad) ljmp imul or fnstcw insl jle pop leaveq pushq cwtl cs mov mov addl (bad) pop rex.R jp repnz or mov movabs (bad) (bad) jmpq test mov cmc clc cmp jmpq jmpq jne shl mov test cmc add clc jmpq clc add stc test cmp jmpq jb clc jmpq jmpq jae jne not test rol sub bsf mov inc add clc mov clc test jmpq jmpq (bad) or test fwait (bad) jge sti (bad) hlt xchg movabs cmp (bad) repz sbb and xchg movabs movabs gs and adc (bad) adc notb xor pop mov rcrl and test jno push xor jae outsl sti out rex.RX movabs mov lahf test pop adcl rex.RB mov cmp xlat or in jl (bad) sbb add sarl rex.WRX stos (bad) pop sti nop cmpsl xor cld (bad) xor (bad) test (bad) mov pop nop ficompl (bad) mov adc scas mov stc test pushq cmp mov fwait mov imul movabs addb stos retq (bad) cmp rex.XB (bad) (bad) (bad) sti fist mov (bad) (bad) (bad) (bad) (bad) outsl lods adc lods subb push adc (bad) cmp sarl (bad) (bad) rcll rex.RB sti sub (bad) cmp cmc (bad) mov mov icebp sub cmp (bad) add sahf mov (bad) jrcxz and rcl sar (bad) in insl int rex.W mov movsb xchg sub mov jmpq jne xor sub clc xor lea shrd test mov inc (bad) lock ror mov jmpq add rex.RXB gs outsl fs gs outsb fs gs xchg jnp add callq rolb add test jg (bad) stc sub xor (bad) cmc mov shr rol sub cmp shrd mov jmpq jmpq cmp jmpq fsubrs enterq (bad) cltd (bad) notb iret or jle rex.R and (bad) stos (bad) mov (bad) jge add (bad) xor out push lahf (bad) push rex.WRXB out rex.WX stos mov movabs imul retq scas sbb jb cs and in (bad) out rclb je push mov cld stos adc test cltd and imul rex.WXB (bad) jnp sub pop lahf sarl (bad) rex.W out icebp rex.WXB (bad) (bad) cld adc (bad) (bad) (bad) (bad) movsl (bad) (bad) int3 xor sbb add add enterq out jrcxz cmp mov scas cmpsl mul test out movsb iret (bad) rex.RB std mov test movslq imul retq pop rex.XB stos jb rex.B mov pushq sbb jmpq not lea bswap not jmpq movzwl sbb mov cmc test add cmc bt bt cmp mov clc test jmpq lods cmc sub cmc stc ror bt jmpq jmpq add jmpq jne lea mov movzbw movsbw mov jmpq jne clc cmc test stc movb jmpq ja jmpq sbb jp stc (bad) mov cmp sbb xchg or (bad) sti (bad) rex.WRB retq scas mov test jmpq leaveq je (bad) xchg pop sbb add mov sub sub push sub test (bad) fsub fistpll sub (bad) movabs and xor retq jo (bad) out sub jno (bad) (bad) (bad) cld push adc push and (bad) (bad) callq rex.W xlat addl (bad) pushq add jnp pop sti (bad) and fdivrs jb stos xor jmp sub in mov jge clc lea pop (bad) jae shlb gs scas lods mov mov (bad) pushq cmpsb mov mov cmpsl loope sub jg je adc xchg clc out rex.WXB adc movslq lret out jmpq and and ja cli and xchg jne pop cmc movabs jbe mov (bad) movsb movsl and mov lods cmpl mov rex.WXB or insb fadd adc lock imul stos xor mov (bad) mov jmp adc outsb imul (bad) (bad) (bad) cld ss (bad) ds (bad) (bad) inc mov push ds and (bad) (bad) add add rex.RX (bad) out jp lods pop rex.WX xchg sbb sti mov pop fnstsw iret pop xor sub adc (bad) rex.RB cmp insb xor cmpsl (bad) push mov test (bad) imul test mov jmpq mov (bad) or add jmpq jne bswap mov jmpq cmp jmpq cmpsb fbstp out sub (bad) movabs adc and cwtl push jle sub or movabs fistpl lea pop or mov sub (bad) (bad) movsl xchg add push out mov fadds (bad) sti (bad) mov jmpq std mov outsl movslq mov rex.WB fbld mov (bad) (bad) cmpsb in (bad) cltd add (bad) and lea (bad) (bad) pushq je (bad) push and icebp jg fnop and lock (bad) jge add iret mov fs lahf lea (bad) ja fdivrs adc rorl mov loop rex.WRB stos (bad) rex.B test adc mov sub sub mov dec sub add clc mov jo stc test jmpq clc test add clc cmp jmpq js pop cmp push fwait ds div jrcxz mov callq sub (bad) callq out movsb (bad) sbb leaveq in and rex.WRB adc jge (bad) adc mov push fistpll ds cli in (bad) push subb jl push (bad) push (bad) and jnp push and cmp callq sub cld adc and jno test (bad) (bad) cld fnsave (bad) ljmp stos out out movslq cmpsb xchg xchg xchg (bad) leaveq js add add rex.X in fcompl mov jge jae stos push fwait xchg pop mov sub mov or in xchg (bad) clc shll mov imul pop push cmp fdivl adc sahf mov stos rex.WB or test ficoml add adc xchg cli (bad) decl clc sub rol add shr bt and (bad) lock mov setl adc mov cmp repnz jmpq jns rcll insl scas es rex retq push mov adc (bad) scas rcrb movabs mov cmc (bad) (bad) imul mov (bad) hlt movabs icebp rex.RXB jne movabs (bad) (bad) sti cmp (bad) test int nop std xor retq xchg (bad) or sub and mov sahf lret xchg int3 imul fwait movabs or movabs or push (bad) rex.WRX and in jge (bad) and sbb xor (bad) xchg (bad) (bad) imul jns pop cmp pop cmpsl lea pop rex.RXB stc xchg cli adc sub in bswap lea lea pop movsbq lea mov jmpq jae jmpq jmpq cmc clc add jmpq jmpq stc mov int out test add mov movabs mov cwtl mov and retq clc pushq rex.WRX fisubl out hlt (bad) xchg (bad) testb (bad) in retq (bad) cld fsts sbb jge int3 jmp icebp repnz pushfq movabs sub rex.W pop retq callq lock pop out rex.WX sti xchg or (bad) (bad) (bad) (bad) sti clc rex.RXB (bad) adc mov mov or add mov out cld out ja add add or clc rex.X cmpsl (bad) outsl int3 mov pushq mov je (bad) mov pop cmp add adc movabs push or adc xor js (bad) cs scas rex.RX push or pushq cmc and in out xchg pushq stos (bad) and adc (bad) mov pushq and pop (bad) pop push pop xor movabs pop out pop cmp (bad) jl (bad) jp (bad) jle (bad) push cmpsb push ficom mov insl push outsl test or and (bad) jge fildll sahf test imul (bad) std mov push test pop rex.X cmp enterq cmpl cmp sbb pop mov mov xor cs cwtl pushq pop fnstcw jbe mov (bad) (bad) push (bad) (bad) (bad) jmpq rex.WRB and movabs push mov cmpsb mov repnz pushq loop test jb jae mov sbbb out (bad) cmpsb xchg sbb jae xchg shll adc mov lret cmp andl stc movabs cmc (bad) rex.R jle and loop hlt mov (bad) lret cmc callq jns loope movsl testl adc test cltd cld push rex.WX stos rex.RX enterq rex.XB jb mov cmc stos or or fdivs pop cmc rex.WRX push notl rex.WXB push lods (bad) roll movabs mov rex.RX adc adc repnz cmp decb (bad) (bad) (bad) decl fidivl mov int3 pop stc mov xor push fbld orb andl sub pop jrcxz notl sbb sub pushq (bad) and jo sub negl xchg cs scas fldcw (bad) callq jmpq jmpq je clc cmc sub jmpq jmpq out rorl js xchg push add push and push rex.WRX push mov lahf cmp cwtl testl test jo sbb test pop cmp cmp (bad) jo cmp and and adc test xor adc push mov mov (bad) (bad) (bad) cld pop stos pop mov (bad) rex.WB fnop cmp mov (bad) pop idivl ss sahf (bad) shll jnp movabs test add add add loopne loope adc (bad) leaveq pushq movabs js iret (bad) xchg cli xlat mov test decb sarb movabs icebp jp rex.WRXB mov (bad) fidiv mov cld clc cmpb jmpq jne jmpq iret and or test mov mov push fwait push cmpsl idivb or int mov push mov rcr add fs push rex.WRB xchg (bad) jbe (bad) or (bad) (bad) fistpll pushq (bad) adc add and or pop xlat cmc rex.WRXB xchg decb lods loop or jne add movslq adc outsl and mov or cld mov mov sub mov loop rex.RX (bad) (bad) push clc sub (bad) int3 repz retq out faddl or test and xchg (bad) in or xor rex.WB out fnsave movabs mov and rex.WRX popfq mov fcmove movabs and jp jno jg mov lahf (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) fnop add or xor sbb rex.RX outsb ja jp push (bad) pop xor sti push rex.WXB push xchg jbe cltd negl sub xor rex.WXB (bad) rex.B popfq std rolb jg,pn out fnstcw loope (bad) rex.R rex.WRB mov jl (bad) jmpq jne sub shrd btc btc mov clc clc cmc cmp or jmpq lea mov movsbl mov mov not mov mov lea mov jmpq mov (bad) fiaddl ficom movabs and (bad) lods mov pop xchg ja mov rex rex.WX pcmpgtb mov or imul rex.W xor enterq pop (bad) rex.X (bad) rex.X imul adcl sub mov jae out or movabs (bad) mov jno (bad) xor addr32 push sub xor (bad) mull nop mov adc xchg pushfq jmpq or repz cmp (bad) sti sbb outsl pop test loope jg sbb icebp in frstor int fwait push (bad) fs xlat std imul (bad) leaveq fnstcw or mov add pushq pop rex.X outsl sbb std cmp cmc mov cli popfq add in xchg adc pop std loopne imul (bad) (bad) decb (bad) (bad) (bad) incl sub icebp mov (bad) repnz test retq xor imul sub mov add out (bad) or (bad) mov scas mov xor cmc sbb (bad) jnp cli movsb xchg rex.RXB jb pop adc sbb movslq pop pop rex.B int pop loope mov add sahf sahf mov test (bad) (bad) (bad) std movabs and lret or fistpll xchg mov mov fsub mov rex.W rex.X (bad) loop icebp cmc in rex.RXB pop mov lahf rex.WB shr xchg adc mov loopne adc xor movabs xor stos rex.RXB mov xchg incl sbb fnstcw mov or mov test (bad) push movsb imulb imul test mov (bad) test iret xchg (bad) stc push pop xor stos (bad) sub sti data16 cld push rex.WRX mov sbb rex.WR mov mov cmpsl adcb (bad) hlt je (bad) adc js mov mov hlt or punpckhdq mov (bad) mov jne push xor rex.X (bad) in (bad) push lea movabs movabs sub rex.B mov repnz ja insb movsl (bad) mov out roll rex.WRB loope cld test cltd rex.WB jb adcl outsb (bad) cmc xchg adc fidivl mov pushq (bad) add stos jmpq and (bad) mov or (bad) (bad) cld cmp (bad) (bad) (bad) dec out mov or mov mov add add rex.WRB pop (bad) rcrb outsl jl mov adc sbb add rex.W xor (bad) lea mov jle in (bad) ffreep (bad) jns (bad) imul adc shll ja mov mov push xchg mov add test movsl rex.WRB add stc xchg cmp jg mov (bad) pop rex or or shrb rex.WRB mov enterq jmpq mov mov pushfq and mov (bad) (bad) mov cmp mov and rex.B add pop sti mov (bad) (bad) cld (bad) rex.R (bad) callq cmp lods adc adc add or enterq in mov movabs mov (bad) outsb ss mov fisttp jo xor xchg (bad) stos loopne push cmp mov test rex.X push cmp mov mov adc lods add clc xor jmpq test xchg rex.W cmp imul mov or ss outsl mov mov ror adc fild cs xchg add rolb (bad) fldt jno callq cmp mov jmpq imul out movabs push (bad) js (bad) cmpsl lock (bad) adc (bad) (bad) std or (bad) (bad) std pop pop (bad) hlt jbe mov jne (bad) rex.R sbb repnz ss scas enterq add or (bad) repnz lahf sarl sbb pop loop and and (bad) addr32 adc jnp imul roll retq test (bad) sbb (bad) stc pop lret (bad) and out jle ja push loop movsb mov cli sub sub test or cmp clc stc cmp jmpq callq jmpq cmp (bad) (bad) push es jne mov xor (bad) stos fdivrs test (bad) out xor jb nop adc jrcxz int (bad) cmp mov cs ss shl (bad) icebp sbb jge (bad) pushfq (bad) rclb retq push mov (bad) (bad) (bad) mov mov (bad) nop insb or (bad) rex.WRX fnstcw and stos (bad) jp test sub and mov loopne test rex.WB mov pop es lock (bad) adc shr cmp cmp fdivr (bad) sbb lret fadds jrcxz jne in xchg pop add insb rex push and movabs cltd and adc loope (bad) loopne sti mov jrcxz mov jge (bad) int sub or jne xchg enterq xchg lret or fsub stos enterq mov loope push rex.WRB int3 outsb stos imul (bad) (bad) decb (bad) (bad) (bad) decl shr int3 outsl adc xchg lret stc in xchg push subb hlt in movabs fbld mov fisubrl push shrb sub add lahf mov repz lret lods mov out (bad) negl ss pop cmc or fidiv pop lock mov rex.WR in lret mov icebp (bad) sub sub (bad) push loope or mov sbb and std xlat loop lret and cmpsb (bad) cmc xchg add movabs lret add out (bad) (bad) mov pop stos movabs retq mov mov mov (bad) (bad) mov leaveq movabs rex.WRX add push movabs mov push (bad) popfq mov divl xchg sbb lret xorl jp test rex.WRB rex.WRB pop mov loopne sub outsb lret add movabs mov (bad) addl mov and xorl xor rex.WRB add lods pop sub movabs cmp or mov lret iret (bad) (bad) cmc mov add mov jbe add xchg xchg or jmpq cmc (bad) cmp xchg mov leaveq or sub push pop in callq (bad) ss clc outsl pop in cmp adc sbb mov stos mov test lahf mov mov xchg loope and icebp sbb cld xor fdiv (bad) mov rex.R mov mov sub test xor xchg xchg (bad) (bad) jbe rex.WXB sub sub xchg rex.WR scas enterq fsubl mov in jbe movabs cmc rex.R (bad) loope sub xchg clc icebp jg rex.RB movsl mov cwtl andl xor or mov add mov sub pop mov int clc mov jno add (bad) callq sub fdivrl rex.R rex.WB sub int add out adc mov xchg insl incb fisttpl mov mov mov xor jno or mov xchg push mov rex.WB xchg pop rex.W or xlat test out fwait movsb iret xor scas rex.WB movsl test rorb sub nop movabs ss cs pop or movabs lahf rex.WRX in jnp adc lret pop out rolb (bad) popfq mov icebp fcmovbe loopne sbb ror rex.WRX hlt stc mov loope xchg hlt (bad) or imul jge add jmpq movabs rcrb out je (bad) (bad) xchg xor int xchg add lret push sbb rex.RB popfq sub scas out mov mov mov int add movsl insl psllq adc (bad) sbb pop or jmpq xor in add or repz je pop (bad) mov adc test cmp lock (bad) jp jl jg lahf out push stc cld or xor outsb leaveq rex.WRB jns push add (bad) mov xor (bad) xchg and movsb cmpsb pop cmpsl rex.WX repnz leaveq addl rex.B xchg mov (bad) pop sub add xchg or (bad) imul movslq and fsubp retq mov cmp and rex.WRB add (bad) (bad) jrcxz repz icebp ss (bad) (bad) and repz es in sbb sub (bad) and push insl int3 shrl scas icebp movsb xchg mov fsub cmp xorl sub and jno stc nop and xlat test jrcxz in test fs cmc or rex.RX adc and imul rex.RB orl push (bad) idiv addr32 in nop and out scas or movsb xchg (bad) sub idiv callq adc pop loope pop mov mov testb clc push jmpq lret push fcomps add jmpq ds jnp rex.WR or mov mov stc mov pop icebp sbb divb cltd or or loope (bad) in test and xchg add gs mov pop icebp jl jmpq addr32 (bad) in rex.B adc movabs leaveq jno shlb (bad) add (bad) jl (bad) and (bad) xor cmpsb in repz leaveq (bad) shll retq sub mov stc cwtl pop gs mov jmpq jns ja subl je pop (bad) ss in cmpsb xchg rex.XB jp movabs or orl (bad) xchg sar pushfq mov xchg jmp iret clc xchg pop sub lods data16 cmp pop loopne mov rorl lods push rcl cmp imul in lods jrcxz jns lea (bad) out jle shrl (bad) leaveq push (bad) mov sti or mov mov cmova jmpq (bad) (bad) sbb rol adc test rex.R icebp and (bad) cmpsl (bad) jrcxz icebp or (bad) (bad) mov int3 test rex.WR xchg (bad) mov cmc sub scas jns cli jmpq movb sub cmpsl push pushq clc out (bad) lahf sbb mov (bad) cld stc (bad) xor (bad) xor adc (bad) insb mov std mov jnp in rex.WB (bad) sbb jae in (bad) hlt jmpq add cwtl cmpsl sti jae jns sub cld sub pop rex.RB and out loopne lret test loopne mov rex.XB repz mov and rorb shll in (bad) fwait jrcxz mov mov fildl jle cs pushfq data16 sub xor jmpq loope sti cmp (bad) rex.WX mov (bad) icebp cmp setns adc std ror loop test rex.WXB xchg popfq xchg xchg loope icebp (bad) mov icebp and lea cltd mov mov icebp in xchg cmp (bad) (bad) sbb rex.XB rex.B stc rex.WB mov (bad) cmc loopne and fs mov movabs outsb cmp scas stc ss in cmp cld (bad) sbb mov out icebp cmpsl fldenv xchg add mov sbb cld add (bad) (bad) jne (bad) std stos jns adc movabs (bad) movabs movslq in retq and (bad) mov out add pop leaveq or movsl (bad) jnp in (bad) and hlt enterq and add add mov fs std xchg push leaveq sub test mov pop in or mov jrcxz rex.WX rex.WXB (bad) add rex.WRXB rex.WXB rex.WRX sub hlt sub pushq mov and loopne in iret movabs mov xor mov icebp add lods push test sub pop mov sbb jbe jmp test jno cmpsb fdivrl (bad) test in or scas sub mov sbb pushq push mov hlt lea sub rorl loopne fdivp mov nop (bad) rex.WXB int and mov test fld sbb sub clc fiaddl icebp mov in (bad) rex.WB mov sbb lods enterq ss push repz xchg fmul sub xchg movabs xor sahf sub xchg jno push jmpq sub xchg hlt out cli out subl addr32 (bad) gs (bad) movabs (bad) icebp jge pop leaveq rex.R jo movabs xchg mov (bad) xchg retq xchg sbb pop mov xchg je in xchg cmpsl std mov mov test mov orl rex.R ds mov loope (bad) (bad) push sbb and fmulp and fs leaveq fmull shl outsb (bad) addr32 jrcxz repz rex.RX sub sub add mull gs mov jae stos (bad) add repnz sub add xlat (bad) clc jo int3 push mov sub (bad) scas rex.B rex.B xlat lea jno stc mov (bad) cli push fnstenv loope psubsw mov rex.B (bad) mov cmp mov (bad) rex.RB cld popfq test cld test rolb mov int3 (bad) movabs (bad) cmpsb or jge cmpw jge xchg rex.B loope cld rex.B cmc mov rex.WB std leaveq pop frstor cmp ror fnsave sub rex.RXB fist movsl xchg leaveq lock in lods (bad) fs int3 sbb mov jmpq js out xchg rex.WX sub mov clc sahf mov jge rex.WR stc rex.WX sbb fadds out hlt xlat (bad) out icebp xor sete jrcxz xor mov sahf loope lret sub in sub div scas rex.WRX (bad) test jb mov hlt (bad) (bad) xchg cmp leaveq callq nop movabs je add loope mov add loop (bad) cmp retq sub mov rex.WX sub scas test sub (bad) movabs and and cli leaveq sbb je rex.WB mov (bad) lock adc or retq jae xor add xchg (bad) xorps jmpq rorb sbb cmc xor idiv popfq jno fwait mov mov movabs (bad) pop jae jno xchg sbb xor and int icebp adc movabs (bad) movsb insl and repz out cmp mov rcr (bad) fadd in rex.RXB leaveq (bad) loopne rex.R rex.W (bad) (bad) mov xor in out (bad) stc jmp and (bad) gs mov movabs cli cs rcrb imul repnz gs rex.WRX icebp xchg movl mov mov loopne int xchg icebp (bad) mov push cmp retq scas (bad) stos mov xor sub rex.RX lock mov (bad) pop outsl out fidivl rex.RB repnz retq out mov (bad) jg (bad) xlat (bad) mulb jno or insb (bad) adc jge mov rex.WX rex.WRX movsl scas vpmaskmovd loope xchg (bad) rex.RXB or pushq and pop cmp xchg jle mov cltd cld callq test add sti pop rex.RB retq sub push (bad) rex.WXB insb cmpsl addl lods add rex.RXB rex.RB (bad) movabs shr or jbe xor test sbbb icebp icebp vmaxps sub pause cld add (bad) (bad) mov and jmp or jae adc test or rex.RX push (bad) icebp icebp (bad) rex.RXB rex.WXB adc push hlt mov loope sub movabs (bad) nop movabs (bad) (bad) hlt popfq jmpq popfq add jo or mov (bad) (bad) cs mov rex.B in and int3 (bad) or sub adc cmp je adcl hlt js stc shl sub shrl rex.WB sub and or mov jmp rex.B mov mov (bad) mov sahf add jmpq lea (bad) mov mov rex rex.WB push imul nop and mov testb mov test cmpsl hlt imul std test (bad) movsl mov loope jns or cmp in in add (bad) sahf (bad) bnd (bad) sub mov adc or pop lret fstp or (bad) jrcxz rex.RB icebp rex.RX sub (bad) outsl sub repz sbb sub icebp pop rex.WRX sub jmpq test push cs rex.WR cmp (bad) gs cs sub sub rex.WRX callq mov and js jmp sbb xchg mov xor movabs push xchg push xchg icebp fild or roll mov mov or jge enterq adc push (bad) mov test mov (bad) add and icebp insl hlt loope lock or add pop in mov test icebp rex.XB repz clc hlt mov or lea nop (bad) clc out mov pop mov xor or xchg fwait sub lock mov int (bad) mov rex.WXB cli rex.W notl (bad) int add mov (bad) in and adc movsl jge jnp repz jbe scas rex.RB jg in addr32 movabs (bad) movsl testl sub xlat jle fidiv jle lret rex.R (bad) (bad) mov xor shlb mov (bad) sbb adc ftst cmp jmp or add retq int3 repz fwait rex mov xlat (bad) add jnp xchg mov (bad) add (bad) icebp jo jne cmpsb cmp jno xlat hlt movabs rex.WB clc rex.WRX rex.W lock fbstp mov cwtl mov jne mov stc xchg sub int3 sub retq jno nop lret and insb movslq scas sti repnz xor (bad) sbb mov sti (bad) enterq pop rex.WXB rex.WRB pop and (bad) clc rex.WXB cmp (bad) xor add jrcxz cltd jrcxz (bad) cld mov jne mov (bad) rex.WB adc (bad) lret xchg or lret mov jmp (bad) xchg (bad) test out mov movsb stos jno mov push retq mov movabs enterq jg ja rex.R sub test rex.WRX loop cld (bad) or enterq rex.RB idiv xchg in shlb rex.RX fwait sub lods xchg pop mov jne enterq xchg rex.WB test sbb movsl rex.WXB sbb scas pop mov mov jbe jmp (bad) es (bad) sbb out stc js sub addr32 repnz push (bad) add (bad) ja xor int3 jo retq (bad) adc stc movabs flds (bad) or jbe lock out rex.RB rex.RB rex.WRB sub rex.WB mov int xchg ds xchg outsl int3 jmpq fs xchg leaveq out mov adc mov sub xor (bad) jo cs sti mov add iret out testl testl in decl hlt pop mov rex.WRX add mov movabs rcll and imul add jnp rex.WB mov out jg push (bad) or cs pop mov (bad) jrcxz rol pop lret subl xchg (bad) (bad) or (bad) mov lods or xor imull (bad) rex.XB or mov in rex.WR sbb push rcll rex.RXB sub xchg cmp stc jrcxz sbb (bad) jp adc rex.WR retq movsl mov rex.WXB rex.W gs cmpsl lods cld mov push mov or (bad) hlt jno add cmp repz and shrb (bad) sbb add (bad) xor xlat push decl push adc xchg jns jnp rex.RB addb and rex divl or clc mov (bad) movabs outsl movabs movabs xchg (bad) push stc pop (bad) insb jno and outsb jmpq xchg je rex.WXB je outsb rex.WRXB and add pushfq in rex.XB (bad) callq (bad) cmp push outsb sub xchg retq (bad) lret popfq xor hlt add xchg scas stc leaveq pop or (bad) ja or jae pop test rex.RX sub mov loope (bad) xchg rex.WB rex.RXB xchg orl callq (bad) icebp add enterq and (bad) lret nop rex.WRX (bad) repnz cmp xchg cmc sbb sub insl xchg int3 sub callq add cltd jge movsl movabs ja rex.WRB movabs mov loopne add fs rex.WR pop imul (bad) rex.RB lea rex.WX mov jne test (bad) adc imul adc lock or test add int3 mov pop out test jne movslq mov test fucomip pop stos test xlat nop movslq cmp outsl adc outsl sub ljmp rex.WXB push sar (bad) (bad) retq sub mov movsl loope mov fiadd test (bad) imul je (bad) in adc jge movabs int (bad) js xor rex outsl rex.WX sbb insl jge leaveq xchg jl jle outsl mov mov or push rex.RXB out xchg cwtl js (bad) jbe and push mov in adc (bad) ja xchg xchg (bad) loope push rex.R xchg loope rex.WRB mov (bad) cmp mov mov stc (bad) data16 pushq xchg sbb cmpsl or cmp add (bad) pop mov in jge out adc cltd lods rolb xchg mov mov mov rex.WR rcll rex.RB in lret test sub xor mov mov rex.WB pop jo insb movslq mov rex.WX xchg cmc cmpsb out (bad) leaveq cmpsl cwtl add (bad) cld loope jmpq mov stc insl sbbl pushfq cmp js sbb mov mov or (bad) (bad) sub mov adc rex.RB push push repz addr32 mov (bad) jge subl xchg jmp mov leaveq pop (bad) test movb pushq and jno (bad) xor (bad) int andl test icebp and out jmp (bad) adc mov int push sbb scas cs jl adc cmp (bad) rex.RX cs mov add (bad) mov mov scas jmp mov (bad) (bad) je sbb xchg test std sub (bad) fwait lahf mov cmp fidiv decb negb jae fstpl sub sub movabs shrl out (bad) in (bad) insl (bad) test (bad) push sub adc cld int3 adc (bad) sar (bad) jrcxz ja add add int sbb retq pushq fnstenv je mov jmpq mov or nop sbb fdivrs mov hlt cli sub cwtl pop cmpsl in and add lods mov movslq movabs sub pop adc mov sbb jbe rex.WRB or xchg rex.B mov hlt cmp leaveq mov movb js icebp mov pushfq xor add jno rex.WRX ss jae mull adc movsb jae (bad) sahf lock (bad) enterq (bad) scas xchg je loop (bad) (bad) rex.WRB in sti icebp mov andl stc loope rex.RXB (bad) (bad) loop hlt movsl (bad) cmc js movabs nop shr movsb in shrb clc ds xlat add cmc (bad) lock vcvtsd2si or adc jae mov rex.WRB (bad) mov int3 (bad) mov int3 sbb (bad) movsl pop stc rex.RXB and pop movabs (bad) jmpq jns enterq pop movabs (bad) orl xchg and imul jbe mov scas mov test mov (bad) mov leaveq mov and sbb in cmp adc pushq pop push and lock sti enterq sub mov mov adc mov lock (bad) sub icebp je pop pop (bad) jbe callq push add mov lea or or test push icebp pop (bad) repz hlt rol add or enterq out rex.WB je (bad) insb loope icebp and (bad) hlt or (bad) hlt sahf out (bad) icebp (bad) or leaveq sub lods out mov gs (bad) lret movslq popfq (bad) lock push stos shrl sahf sbb rex.R fwait (bad) retq mov or (bad) mov out cld addr32 adc sub sbb adc movabs mov rex.RB jbe or in xchg clc (bad) adc sub test cmp in xchg gs cmc test mov mov adc adc nop retq mov sbb iret (bad) rex.RB pop mov fstl xchg mov stc (bad) fisttp or xchg and jne enterq xor jmpq es (bad) (bad) jrcxz cmpsl jmp xor scas (bad) hlt test movsl push movsl pushfq test cmp enterq (bad) sti mov adc jle movslq (bad) sbb loope xchg insl jmpq jge rex pushq jge in mov loope push je rex.WRX cmp fistl gs ja mov iret es movsb insb divl hlt push mov xchg xchg jp cmp mov js rex.WRB cltd out in mov mov (bad) jrcxz xchg int3 int3 lahf sarl rex.R push mov xchg fild jo enterq insl rex.X xchg addl add lea xchg pop xlat popfq adcb je (bad) pop add shr sbb popfq pop mov and cmc (bad) insb jnp jns pop cltd sbb adc (bad) push vmovaps (bad) pop xchg rex.WR gs (bad) cmpsl stos movsl and movsb cwtl test jb add jge sub pop fwait sbb ror repz jle or jb int jmp test mov jnp xor jns int test subl pop (bad) rex.WRXB jrcxz andl lret and sub rex.WB mov pop clc sbb rex.XB sub jmpq (bad) mov lret sbb xor add jmp pop in (bad) (bad) (bad) popfq fsubrl pop adc adc sub push (bad) in push stc (bad) xchg xchg (bad) and leaveq push (bad) rex.WB rcll mov add je mov sbb xor mov and cmp loope (bad) (bad) lock (bad) mov callq (bad) mov sub rex.WXB ss cmp add (bad) xchg loope (bad) pop sub xchg retq std xor std in (bad) push leaveq movabs jmp (bad) xchg (bad) xchg popfq test movabs jns and mov data16 mov int std mov add jns in rex.RX cmpsb cs loope rex.WRX jrcxz jmpq cmp repz insb cld out cmp sub flds scas or (bad) icebp callq sub jmpq jmpq rex.WRB in (bad) addr32 (bad) shl leaveq callq enterq (bad) popq out xor sub in repz (bad) divl (bad) loopne add mov xchg xchg xchg test stos mov movabs (bad) xchg xchg gs mov jg je or rex.RX icebp mov out add pop movsl pop cli (bad) mov xchg (bad) xor mov movsb repz mov xor rex.RB rex.WRX xchg retq (bad) (bad) mov in (bad) sti jns out jmpq and insb rex.X je in (bad) sar (bad) stos out adc (bad) xchg jp pushq mov mov cmp sbb (bad) pop lods (bad) xor lret leaveq (bad) adc retq lahf callq cs cltd sub pushfq mov clc lret mov sbb xchg (bad) scas or popfq mov imul pushfq movabs retq xchg pop in cmc rex.WRX sub insl sbb and mov and mov mov (bad) pop rex.WB rex.W addr32 cmpsb fsub or jg (bad) (bad) lret (bad) (bad) or leaveq loope (bad) scas cwtl jp cmpsl int3 data16 idivb rex jrcxz xchg leaveq repz sub mov lret mov jle xchg subl ja andl movabs lahf ds sti lret and rex.WRXB mov xchg jl test in lahf imul out jb xchg sbb movabs (bad) (bad) (bad) push mov jrcxz scas cmp cmp cmp sub movsl in sub (bad) xor movabs rex.WRX ud1 (bad) add push movsb add mov mov cmp xchg xor iret push adc nop xchg mov out enterq repnz stc cmc test rex.XB (bad) std or cli push adc (bad) pushfq fildl test cmc cltd rex imul cli xchg in hlt and mov outsl mov lret out scas cld rex.WXB gs mov rol sbb shrb popfq mov in lret icebp jno pop adc xor orl ror or movsb enterq push mov rex.R rex.WRXB rex.W rex.WB rex.WX push xchg pushfq rex.RB hlt mov int3 mov xchg rex.WB add repnz adc sub mov cmc or test retq loop icebp sub in retq xchg lahf stc test and sub rex.RB movabs enterq in rex.WR lods (bad) cltd lahf rex.RXB rex.WRX mov loope (bad) mov mov rolb int pop mov xchg jb callq loope mov retq out repz adc jae rex.W mov cmpsb sti cld sub mov pushfq (bad) iret test push retq stc lock push gs callq rolb xor jne and xchg fcoml pop (bad) fnop xchg cmpsb adc xor pop cmp jrcxz cmp xor cli jmp lret jno mov gs mov or bnd movabs mov adc adc lods mov (bad) (bad) (bad) enterq and (bad) lock add adc cld jo shll mov sub (bad) jge divb mov sbb mov mov mov (bad) ds sbb lock cltd (bad) hlt out sub cwtl rex.WRX cs (bad) rex.X roll outsl int in sub rex.RB cmp lret lods (bad) (bad) sub and cli cwtl sub xchg rex.WRB cs mov mov or (bad) xor xchg xor (bad) fiadd sbb and movabs or sahf notl adcl (bad) or jmpq sbb cli cmp icebp sbb sbb xchg mov loope ja cmp fild mov xchg cltd mov cltd scas xor rex.WRXB push adc icebp push vpor in movabs cwtl scas es (bad) lret (bad) callq rex.WX callq iret (bad) rex.WRX rex.WRB leaveq or push rex.RXB notl jo cmc add (bad) clc xchg xchg out je sub faddl push fdiv mov rex.WRX (bad) (bad) (bad) jns rex.WRXB repz cwtl addr32 lock in push stos push popfq or mov rex.RB cwtl push mov movabs sub not add div (bad) mov xchg movabs (bad) fwait addr32 repz mov sbb cmp jae orb repz sbb and xlat or xchg stos pop stos add jl (bad) or jle icebp (bad) dec or pop jae mov test test sbb enterq pop sbb movsb add jb movsl lret xchg push jmpq movsb sub fildll cmp outsb sbb jo (bad) push rex.WB mov rex.WRB add iret rex.R xor lods adc icebp push rex.WB mov mov frstor mov jo rex.RXB xchg adc (bad) test callq mov mov jno mov in jno sub xchg or and (bad) mov movsb rex.RX repz sbb (bad) icebp rex.RB cmp add rex.WXB mov jb sbb out lret xlat adc mov xchg (bad) jae int3 testl mov rex.WRXB adc test lret stc outsb sbb sbbl add stc mov (bad) mov test jrcxz andl test (bad) cmpl (bad) (bad) push decl int cltd cmc (bad) xchg push repz mov (bad) mov (bad) pushq mov jge (bad) enterq add repz mov (bad) leaveq mov mov (bad) icebp xorb rex.WRXB movslq addl (bad) fcomps adc mov (bad) jmpq or mov xor repz jae mov jl callq jae retq jnp repz add test movsl mov xchg imul repz leaveq (bad) loopne jae or (bad) (bad) idivb and jbe hlt in push mov cltd sar (bad) mov out je callq cltd (bad) mov lods mov outsb jp movabs (bad) (bad) or hlt (bad) loope rex.W mov fistl rex.WR leaveq lret cmc rex.WRX rex.RB (bad) (bad) mov ficompl test adcb loopne lret cli mov (bad) (bad) lea scas test movl sahf lret sbb rolb (bad) mulb icebp pop nop xchg push icebp sub mov cmp clc rex.WRB fs rex.R stc retq mov pop repnz mov rex.RB (bad) jg enterq (bad) in scas rex.WXB test movabs adc std out sbb shlb shll (bad) outsl push mov outsb stos rex xchg andb (bad) imul jo lret mov je or sub mov movsl sbb or lock mov rex in pop int (bad) rex.R movsl xchg add (bad) ja imulb jrcxz,pn (bad) rex.XB xor adc add rex.WB retq test jg out and rex.RXB (bad) or fpatan (bad) (bad) jrcxz (bad) adc jo xor out movabs sub xor sub in sbb sub pop add notl mov add (bad) adc add test insl mov retq (bad) mov (bad) or push clc insb cmp pushq mov (bad) orl lret jl mov push xchg in jg (bad) add jns or retq imul and rex.XB push pop iret cmp lahf (bad) ficompl rorb in (bad) fmuls cltd repz callq push in rex.R pop (bad) insl cld (bad) sub jp mov rex.W (bad) (bad) xchg jmp lret mov (bad) rex.RX es mov jg mov jge mov sarb jmp hlt mov mov jmpq pop jno sub stos incl (bad) (bad) adc rolb insb and test (bad) push test ss ficompl in xchg xor pop rex.WRX pop std sub in mov std or (bad) fdivp ja (bad) (bad) pushq mov jge adc lock retq mov rex.RB rex.R xchg xchg push xchg out add or gs pop (bad) callq cmc cmpsb or gs in repnz sbb (bad) push xchg rex (bad) push mov test es mov jmpq rex.XB push mov push enterq pop mov mov loope add lock xchg push (bad) rex.RXB callq out je jmpq movabs (bad) (bad) not (bad) mov (bad) lock cmc add callq xchg jmp xor (bad) bnd hlt (bad) (bad) push movsl (bad) (bad) adcb mov jmpq cmc rex.WRB movabs lods xchg xor rex.RXB rex.B rex.X cmp leaveq (bad) stos (bad) mov jp fs mov sub xor movabs mov or xchg xchg rex.XB (bad) (bad) adcl cmc cmpsl add lea and sar and cmc add mov leaveq cltd rex.WR movabs (bad) xchg movsb enterq mov movslq (bad) cmp add fdivrl mov adc mov iret int je in rex.WRX xlat xchg out fnop xchg (bad) adc retq retq (bad) retq pop imulb add rex.RX int (bad) (bad) (bad) enterq loope divb pop xchg in sbb callq adc and int addr32 callq sbb popfq clc push loope popfq sub or mov pop rex.WB sar loop (bad) rex.WRX cltd or sbb mov (bad) lods sarl jne sti jmpq add (bad) test outsl jo iret out lods enterq xlat std imul add cmp (bad) mov push mov and cs movabs rex.WRX (bad) iret popfq xchg push (bad) pop (bad) cmpps (bad) es repz and rex.WRXB push int orl (bad) out rcpps xor fisttpll (bad) (bad) retq imul sub rex.XB sahf (bad) pop mov cmpsb jno movabs fsubs rex.XB xor cmp push (bad) (bad) stc sbb jb,pn rex.RX or sub jne nop cmp in rex.WRX sub fiadd hlt rex.WRX rex.XB add xchg jno rex.RXB adc mov movsb push js loop sub push rex.W (bad) loope cwtl mov addr32 jrcxz mov mov leaveq mov xchg mov mov xor xchg loopne (bad) jae orb loopne (bad) jae (bad) mov stc jrcxz cli jnp fadd es (bad) sub (bad) mov movsb leaveq int3 icebp hlt stc test in insb (bad) and mov movabs add js mov mov (bad) rex.WR out out rex.B cs rex.B rex.RB popfq pop movabs add pushq fs hlt pop and (bad) and retq mov and cmpl int or faddl cmc or lock lock adcl icebp and (bad) (bad) (bad) pop (bad) (bad) insb add (bad) rex.WRX adc rex.WRB and (bad) sbb mov mov xchg mov nop leaveq add add or callq faddp add mov pop int3 adc subl scas mov (bad) rex.R addr32 adc cmp jno and rex.RX rex.WXB rex.WR callq retq mov fdiv (bad) repnz add (bad) (bad) jno cmp test incl out sub out add (bad) mov int3 pop ljmp add (bad) test lret retq sahf and ja mov adc push callq or cmp xor rex.XB fs jb loop fucomp mov jrcxz xor lods (bad) stos or mov in pushq adc sub retq sub mov push stos xchg rex.B sub mov adc and test rex.WRXB xchg icebp loope sarl retq in mov in mov (bad) sbb adc sub loopne cwtl mov xor (bad) ja mov sti add repnz (bad) (bad) (bad) cmpsl mov movabs xchg or orl (bad) fcomip jbe add or movl rex.WB add push and std shrl xchg or mov and callq cmpb (bad) jbe clc xchg rex.R rex.WRB push mov add sbb or adc rex.WR mov push nop jmpq rex.RX mov mov rex.WR lahf jns repz or push orl and xor sbb (bad) scas rex.WR leaveq sbb mov (bad) mov cmc jae add cmpsl (bad) ja in movabs (bad) pop insl add int push jae mov in loope cmp rex.W (bad) cmp sti jne xchg add cli cmpsl jns pushq cmpsl (bad) (bad) cmp (bad) leaveq cltd (bad) jo rex.W (bad) jl jrcxz adc and or pop rex.R rex.R loope js rcll (bad) mov stc nop xchg repnz pushq pushq mov out mov and in pop or ds cli jl (bad) jmp and (bad) jnp pop mov jbe lea insb rex.RX cwtl iret pop add hlt retq movabs roll or repz retq sahf rol pop rex.WX leaveq sub cmp in (bad) (bad) sub rorl js xor cld mov pop movaps mov out stos mov (bad) int sub (bad) jno jbe decl int3 and mov add fldcw sbb mull lret (bad) je cmp push (bad) xchg jae subl jge std (bad) adc add mov adc fisttp cltd sub rex.R mov mov cmp or xchg add fcomi jmp jp test pop idiv (bad) retq lahf jmpq (bad) leaveq hlt rex.R rex.RX and loope rex.R xor sbb rex.WR pushq mov pushq mov cs rex.WR sub and sahf (bad) out int3 add jrcxz xor sbb sbbl sub retq xlat sub and push (bad) fmul retq cmp rex jns lods in xor rex.B rex.WB add loop mov (bad) and rex.WB cmc (bad) movsb mov leaveq lock xor mov jl repnz cli jl xor cmp and mov jp in movabs rex.R xchg mulb repz out loope (bad) repnz (bad) pop jrcxz add rex.RXB test jrcxz mov (bad) lock or test and rex jae (bad) or hlt pop (bad) xchg (bad) (bad) imulb pushq add cmp pop cmc rex.XB movb and fwait icebp movb mov sub sbb ds (bad) (bad) pop frstor loope movsl jns,pn enterq loope mov mov mov (bad) cwtl (bad) test out roll cmp sbb subb sub adc mov mov push pop (bad) std rolb mov movabs xor movabs mov jno mov rol (bad) rcrb sbb mov xchg (bad) and (bad) and (bad) and jae rex.WRX out jne cmc jle mov insl jns or loope stc xor lret nop and fsubr fisubl (bad) hlt lret fisubrl add mov popfq outsb rorl sub stc cmc lret icebp (bad) testl (bad) xor icebp push int pushq sahf add not cs push stc push (bad) icebp sub sbb lret lods rex.WR (bad) jge sub or sub xor hlt (bad) in rex.RX (bad) icebp mov (bad) xchg fs decl jns nop loop movabs mov insb movslq cmp and and gs subl jmp rex.X mov mov (bad) xor pop dec cmp (bad) (bad) sub push lods or (bad) mov xor cmc mov push rol sub (bad) lahf jno (bad) loope popfq (bad) xorl movb repnz hlt (bad) mov xor imul outsl xor (bad) sub mov movabs jnp repz pop int loop jb loope mov add iret jge sbb pop xchg pop xchg callq (bad) mov xchg and movb or pop fsubs rex.R jb mov jmpq (bad) cmp (bad) add mov std fidivl or add xor xchg mov sbb (bad) mov in jno cld (bad) add add xor lock jo negl (bad) (bad) add rex.RB push cld (bad) in ja mov push in xor ficoml rex.WX imul add adc xchg stc rex.WB (bad) add repnz repz (bad) fdivl xor mov sbb out rex.RB rex.WB (bad) mov rex.WRX jae (bad) in or add mov add rex.WX fwait (bad) int cmp cld sbb retq sub lock out (bad) sub or pop lock int cmc movabs rex.WX xor movabs pop xchg cltd or lea (bad) test pop mov mov jle add xlat xor fdivrp repnz rex.WR (bad) mov es callq xchg cmp jmpq (bad) test callq jl mov xlat in cmp repz rcrl xlat (bad) rex.WRXB lret retq push (bad) std add (bad) int3 nop out repz rex.WRX fcompl pushfq sub (bad) (bad) mov out int3 or out or loopne mov loope mov retq gs fldcw and jbe rcrl pushq xlat cld pushq xor jo shr test cmc jns loope push in and (bad) adc in mov (bad) (bad) mov adc add (bad) fadd jmpq nop (bad) jmp (bad) rcrb sbb shl sub add mov enterq lods rex.WR int sub test cmp fsubs test (bad) rex.B sub mull andb rex.WR movsl (bad) (bad) movabs xor repnz lret retq xchg retq (bad) mov pushq rex.WRXB rex.WRXB imul or (bad) fmulp xor xchg pushfq sub shrl cmp push push lahf adc add pop sub (bad) push jp or ja and callq mov pop (bad) lea (bad) int3 rex.RX rex.RX rex.B stos pop int3 push clc mov scas out (bad) rex.WRX (bad) xlat popfq pop loop (bad) mov sahf and sub adc rex.WR (bad) in cs addr32 or cmp (bad) rex.WRB pop add rex.W mov loop (bad) test movabs (bad) icebp jno mov popfq movabs mov mov xchg std loopne (bad) stc pop loope sbb pop ja (bad) mov adc out imulb adc int3 pop mov mov out (bad) mov es nop callq adcb sbb rex.B rex.WXB push lods sti lret (bad) xor sub sahf xor js lea or clc stos sbb cmc sub push mov fisttp xorb jno and sub out cmpl jnp leaveq sbb mov in mov push rex.WRXB ss rcl mov sub rex.WB (bad) movabs jmp sbb (bad) xchg (bad) sti mov mov jae lods (bad) jno xor fnop cmp scas jrcxz sti sub fisttpll xlat lods add xor add rex.X subb lret ds rex.WB mov pop rex.XB (bad) scas in pop insb mov callq pop retq leaveq popfq (bad) xor callq xor rex.XB mov sbb (bad) sub out xchg push cmp scas out je imulb (bad) xor rorl or push (bad) xchg addr32 sahf rex.WXB movsb jmpq (bad) xchg xor mov leaveq jbe icebp sub rolb or cmp mov leaveq (bad) (bad) rex.WR cmp fwait lea in (bad) (bad) stc and or icebp int3 cli mov push (bad) xchg cmp sbb (bad) xchg ss sahf cltd add xchg push clc cmp sahf xor repnz push lret (bad) xor mov rolb in add mov mov push xor (bad) jnp ja xor or cmp rex.R rex.B sahf in enterq xor mov mov mov (bad) xor mov enterq or or add mov loope clc retq and add xchg jp mov cwtl retq add jbe repnz xchg repz and sbb lea jl pushq int icebp mov rex.WXB movsb (bad) (bad) movsb mov out sub insl shr (bad) cmpb or xchg repnz xchg insb stos rcll in push mov movabs rex.XB movsl xorl iret stc leaveq loope jmpq xorl and (bad) rex.RXB rex.WR stos mov cmp (bad) rex.WRX pop rex.R int3 pushq and repz (bad) xchg in cltd movsl add movabs callq (bad) icebp push xor leaveq hlt rex (bad) loope movabs mov faddl mov add cld (bad) cmp push mov add sub jne js mov lret or lods leaveq (bad) in add pushfq js repnz sub cmc jmp movabs (bad) es xchg push (bad) rex.WB lret xlat add (bad) xchg cli fcoml sbb movabs int3 xchg mov enterq and mov enterq outsb xchg jge xor rex.RXB mov iret (bad) lods lea cmc testb sbb adc callq and (bad) mov jge icebp retq (bad) (bad) jns jo not (bad) pushq cli sbb mov sub int3 addl rex.XB in shrl cwtl jge rex.R nop scas mov and (bad) gs cld rex.RX retq (bad) sub xor cmpsl in sahf xchg mov (bad) jp loop xor (bad) xchg mov jno movabs pop icebp cld rcll adc add testb mov rex.RB jmp movabs mov mov ja repz (bad) add cmp cli sbb jns jmp in ja (bad) mov sbb and cmc pushfq jnp mov add incl test mov lods negl xor iret movabs rorb leaveq mov rex.RB xor mov (bad) mov xor repnz push adc in cmpsl rex.W popfq adc fnstcw addr32 icebp iret jae jne (bad) (bad) sub scas subb sbb cmp sahf add jmpq rex.WRX icebp pop lret (bad) cmpsb sahf and es or (bad) (bad) in mov repnz push mov jmp in lret sub sti (bad) out or jmpq movsl cmp (bad) pop icebp and sbb rex.R cmp je mov xchg fbstp (bad) pop sub add cltd out in movsl adc js int3 push test and xchg int cmp adc sub rex.WR or mov mov cld (bad) (bad) fnstcw notb rex.WR and (bad) or (bad) faddl pop (bad) mov push out test test push out rex.WXB rex.B test rex.RX insb sub lea sbb mov mov (bad) sbb add jne cmp cmpb or cld leaveq icebp sub mov rex bnd mov xlat (bad) adc (bad) rex.RXB mov cmpsb rex.X or fldenv pushq test insl jnp jnp (bad) lret hlt clc mov jge rex.R (bad) xchg out push bnd sbb sbb sub shl or push mov and icebp (bad) (bad) sub mull jbe callq mov cmp and stc sub mov (bad) scas sti insl mov jp cld rex.RXB adc cli out add rex.RB mov lret shr xor mov or imul callq adc nop xor rex.B mov or cmp and lock mov sub add jl repnz lea xor faddl mov std adc xchg xchg and add testb movabs or adc es add out sub (bad) mov jmpq mov add test (bad) cmp addb cmpsb or push or bnd cltd sub pop leaveq pop std mov mov and cmp movabs cmc rex.XB add or pushfq (bad) jmp xor mov jmpq addl shrl cmpsl (bad) lods sahf test pushq outsl rex.RB push or loope pop mov test sub adc pop mov xchg out xor xchg add adc add xchg rex.WX rex.WR and mov push movabs or xchg lret fstps imul and mov mov seto sub retq xor (bad) fidivl mov sbb push mov test xor sti lret jbe cmc int add xchg adc bnd jg,pn out (bad) (bad) or jbe jmp mov lea ds pop mov or sbbl (bad) xor jne loope (bad) cmp cmp push flds xchg (bad) stos jge (bad) or or sbb adcl jno ror jmpq sbb jmpq rex.XB and jmp pushfq mov or callq lods cli in sar and lahf sub int3 rex.W cmpsl ds nop cs mov shlb cld push pop and clc shlb or rex.XB sbb pushq (bad) rorw lea xor rex.XB push pop cs push mov test in rclb and lret sub rex.WB lret (bad) mov (bad) test orl (bad) (bad) pop sbb (bad) push pop (bad) xchg (bad) out leaveq (bad) jne repz (bad) mov fisubl add mov sahf add cmp jrcxz xchg in andl movsb xchg hlt xchg (bad) icebp or pop imul add out enterq sbb fcmovb enterq xlat enterq mov testl imul fisubr jmp rcll fimull leaveq pop flds sbb mov pushfq pop shl (bad) rex.WRX idivb fsubrl jnp iret fsubrs xchg int stc movabs insb cmpl (bad) (bad) (bad) rex.WRX movabs test xchg int3 je lea cmc in mov retq test cmpsb jmpq xor mov rex.R int retq rorb mov sub orb out movsb mov adc sbb insl cli loope std rex.R rorb (bad) pop cli fmull (bad) mov (bad) xor and mov rex.WRXB (bad) out int3 cmp add in (bad) decl movabs leaveq (bad) bnd push loope imul jb int push imul add insb imull (bad) rex.WR jne fwait mov test sbb imul (bad) or mov xchg leaveq xchg repnz mov or rex.WB rex.R rex.RX (bad) adc movsl add mov pop pushq out (bad) out je addl add callq push sbb cmp rex.WX stc cmpsb mov es xchg rex.WXB rex.RB fwait testb mov sub xor push (bad) jae addr32 xor add xlat leaveq jo add rex.WRX or retq pop mov movabs or loope mov fdivrl and jge test cmp stc rex.WRX (bad) mov (bad) rex.W rol mov (bad) xor xor cs sub clc xor cmp mov rex.RXB loope (bad) sbb push cmc test repz rclb (bad) cs rex.WB in mov mov jge cmp push loope or xchg add cwtl jrcxz and repnz repnz (bad) lret (bad) mov sub mov jle (bad) test es rex.B mov test leaveq subl mov movl xchg lret mov jmpq jrcxz xor test addl adc lock jmpq mov pop cmp fist mov iret cs rex.RX xchg xorl jae,pn (bad) ror rorl (bad) sub test xchg add pop mov cmp mov (bad) push mov adc test jg test rex.RXB (bad) rex.WR push test movabs (bad) jmpq lret test test test adc clc mov repnz xchg loope insl pop mov andl mov cld lret rex.RXB or push imul (bad) push stos nop fwait mov (bad) cld mov rex.XB stos (bad) fadd movl and fs push cmpl test hlt shr cs cld test iret loopne repnz (bad) je (bad) out mov movsl cmp movabs xor push xchg sti xor addl mov (bad) leaveq subl adc add cltd movabs mov rex.RB xor (bad) fs rex.WR add adc xor jns xor or rex.WB mov movsl mov rex.WB and leaveq lahf rex.WR (bad) sbb (bad) cmpl fisttp mov mov or test pop (bad) js and out push mov movabs in push int imul std sub lret xlat lret sub jno or sbb jmp ror cli ss in sub add (bad) jns xorl (bad) rex.WRB (bad) mov test in enterq mov popq cmc retq out hlt pop test jno xlat adc stc mov adc movabs (bad) fs cmp cld add or rex.WXB ffree int3 ss xor rex.XB repz test (bad) mov cld mov in int3 outsl fdivr add sbb int3 mov js outsl orb and xchg jae stc mov sub out jno test rex.WXB je rex.RX repnz movsb repnz (bad) xchg sbb jrcxz int mov repnz or jl and jns mov movabs rorb jg retq sub sbb movabs mov jmp (bad) jne rex.WX lret or movb (bad) cmc notb or rex.X stc int (bad) retq movsl xchg ljmp retq test pop mov xchg xchg int jne leaveq (bad) fcomps rex.W shrl negl jns int pop faddp mov (bad) adc sub in xchg (bad) sbb adcl add mov std cli mov rex.WRB xor movsl xor jp mov sub or cmpsb in mov sti in sub mov shr cmp cs jae jno in js scas mov icebp (bad) cmpsb pop mov cmp nop loope mov mov jae xor jae ja add mov and xor xor mov pop rex.B lock hlt out jmpq (bad) xchg int (bad) icebp fdiv or fwait or loopne mov and xchg in (bad) mov icebp retq sub cwtl rcll stos repz rex.X rorb pushq xchg (bad) rex.WRB sbb iret (bad) sub jno xchg cmp push decl mov (bad) shrb fcom sbb mov hlt decl andl fs cmp out stos rex.RXB rex.RXB fidivl stos leaveq rcl sub push loope rex.R sbb test sbb or (bad) mov or rex.RX mov sub clc jmp rex.RB adcl rex.WRB or hlt (bad) jrcxz subl jmpq out sbb je in mov mov and rex.WB (bad) and (bad) movabs repnz mov or mov (bad) xchg stc sarl add sub jns cmp rcrb xchg repz cmc mov rex.WRB jno mov retq leaveq rex.X hlt xor adc add stos mov sub sbb movabs (bad) leaveq or push movsb (bad) out mov sub repz cmpsl pushq iret sbb in lret (bad) mov pop add (bad) orl lods test shr mov xchg mov pop stc or rex.XB es (bad) lret repnz rolb (bad) jb rex.XB pop callq test fsubrs test movsl sub xchg push (bad) (bad) cli sub (bad) test sarb rex.X sub xchg cltd jno out add xchg jbe mov jne add (bad) movb xor cmp outsb int3 mov test cwtl fistp in es mov rex.WX jb jp rex.WRXB jp scas pop jrcxz test xchg cmpsl callq (bad) rex.RB (bad) retq rex.RX stc leaveq push rex.XB (bad) adcl jns sub xor movabs cltd sub pop (bad) jnp mov and xchg mov (bad) enterq in mov mov leaveq out test icebp sub je test (bad) sbb add rex.W movsl rex.WXB out add xchg jle (bad) rclb xchg add outsb imul loop or rcll callq mov jnp scas (bad) rcrb sub cmp and mov rex.RB icebp clc xchg jns sarb lods adc cli outsb (bad) retq sub test addl mov lret shlb pushq mov jne hlt xchg (bad) bnd jne adc push sarl add sbbl jno jrcxz imul push rclb (bad) (bad) xchg lods and icebp movsb xchg cmpsl cmc loop mov rex.W sbb sub in mov fdiv mov cltd and movabs lods in push xchg rorb addl rex.WX ss lret (bad) retq xchg movslq mov (bad) jae fld callq sub imul in mov rex.RB retq (bad) pop rex.X jge imul movabs subl loopne (bad) mov (bad) rex.WRX cs hlt pop icebp rep mov cmc mov pop cmp js mov rex.WRX adc sub scas or mov jmpq lock pushfq sbb addr32 repnz (bad) pop mov push shrb xchg jl mov pop push cmc xor xlat rex.RB jrcxz sub adc not mov enterq shr xor mov outsl push rex.B mov xor cmp icebp push add in out popfq rex.WRB sub (bad) sub (bad) (bad) int mov test (bad) jno xchg in cwtl mov fcoml sub (bad) mov mov sbb rex.XB or (bad) repz pushq (bad) ja mov sbb ja mov (bad) movabs sti in fcoms xor sub leaveq shll rex.B mov sub ja jno movslq movl popfq jmpq cs sbb in mov sub xor int push out movsb (bad) test (bad) sahf pushfq lret iret (bad) and vpslld fldenv je lock sbb (bad) lock jb or lods (bad) insb (bad) pop test mov rex.WR test (bad) pop push mov rex.XB ds lock lret repz leaveq jrcxz push stc js and pop (bad) adc lret sub (bad) mov lret mov incb adc xchg xchg loope shrb nop sbb test xchg sub (bad) (bad) cmp (bad) cltd (bad) hlt movabs jl pop xchg xchg test push leaveq in movabs pushfq sarb mov ja adc (bad) cld xchg lea leaveq rcrb jbe negb cld movabs orb in push lret sahf loope sub and out mov test and mov mov jrcxz jo sub outsb or (bad) movabs adc rcll loope rex rorl hlt pop (bad) es (bad) sbbl push xor jmpq (bad) pop mov cs lahf iret mov mov mov loop cld out sub orl xchg xchg (bad) pushfq iret bnd xchg sahf sub fcmovu stc rex.WB (bad) insl mov pushq rex.WRXB rex.W icebp addl in (bad) sub cld imul movl rolb xor xor sti rcrb jb rex pushfq pop sub and lock sarl repz ds jle pop lock xchg fidivr gs ficom (bad) rcll (bad) mov fucom add lock adc loope (bad) ja mov (bad) enterq stc sti cltd loope (bad) sbb leaveq lods xchg outsb mov sbb xchg mov lea push in (bad) addl jge popfq sahf in xor rex.XB lret vpinsrw retq je nop mov adc (bad) xor jbe xor mov rol sub out fisttp push mov test and mov jl pop add in or lret adc (bad) mov rex.RB (bad) mov xchg xchg movsl sbb rorb out jne in ror (bad) enterq out (bad) (bad) cmp add push add iret movsl stos sbb jo lods lods adc push mov jne out jns orl sub (bad) xchg rex.R (bad) rex.WX lret jne (bad) rex.B mov mov xchg sbb push sbb fldpi pop (bad) mov (bad) mov (bad) mov add movabs cmp mov fs rex.WXB push adc loope stc mov and je jmpq and je mov sub and fistp fcompl jo test push adc movabs adc lods mov cmc jrcxz movl testb sbb test xchg stos push sub paddusb rex.WRX pop (bad) mov and xchg add (bad) int3 (bad) and orl in xor movslq stc icebp icebp leaveq lret int3 sub stc repnz popfq mov adc xchg rep (bad) xor fwait push push fdivp (bad) adc sub (bad) icebp rex.WRX mov xchg or popq orl lret fnstenv rorb retq mov sbb imul sbb mov jb adc pop add rex.WRX lahf (bad) jno mov pop cld cmp pop lret rex.W pushq add test stc mov add outsb push hlt xor test (bad) (bad) xchg addr32 xchg lock and cmp sahf cmp rex.WRX or mov (bad) xchg jae sbb sub retq add adc out pop pop ficompl repnz push xchg jp mov sub rex.WB jle lahf jnp rex andl mov mov je fstpl pushq rcll retq xchg sbb data16 lock movabs mov sbbb (bad) (bad) stc rcr mov jge cmp insb addb callq (bad) and in mov icebp sub js ja (bad) out push in adc ss sub (bad) add jno movabs movabs cs rex.RB cltd int (bad) clc movabs pushq retq in (bad) mov and jl stc int mov sbb test or mov adc int3 repz xor rex.WRX test mov retq or lods test imul imul (bad) addl test stc rex.X (bad) retq ffree pop negl sub gs sbb (bad) adc cli rex.WXB gs push movsb fldt int3 (bad) sub sub adc idivb (bad) mov and callq mov (bad) mov icebp cmpsl (bad) retq rex.WR or test rex.RB enterq jne fcomi ficoml adc mov or or jp fild rex.RB cwtd xor leaveq sub testb in jbe xor frstor mov lea xchg sbb (bad) repz outsb cli retq sub rex.WRX adcl or push push cmc or and rcll (bad) rex.WRXB mov xor cmp (bad) (bad) cli mov cwtl mov mov setle rdrand lea (bad) rorb enterq and or imul fneni(8087 push pop std in xor (bad) out loopne (bad) lea add vpmulhw cltd cmpsl test adc (bad) pop jp movabs rex.WR mov mov xchg (bad) (bad) hlt pushfq (bad) pushq and cld sub sub pushq adc jae rex.RB popfq pop nop and (bad) std in (bad) (bad) cmpl mov cmc loope cmpl nop xor sbb jnp (bad) repnz (bad) (bad) out jno adc std xchg xchg xor int3 enterq and scas xor or (bad) test add rex.RX (bad) leaveq and movabs pushq movabs insl jo movsb and mov xor and in lock (bad) xor (bad) adc add or adc (bad) int3 shll fsts divl or mov sub jae mov (bad) cli test rex.WXB (bad) pop shrb lock cmp (bad) sub adc int scas mov lods jbe mov (bad) or test divl jae cmp mov pop movabs jle mov mov test push int sub push (bad) leaveq movsl out or mov (bad) sub (bad) jmpq lret rolb rex.RX pop fisttp pop rcrl jmpq jl ficom xchg int mov out retq sbb cmp or mov leaveq jmpq mov pop (bad) out xor repz jbe int3 lods int3 rol xor jae or rex.WRX divb or push xchg cmovb movsb sahf or out (bad) scas sub popq cmp pop hlt mov addl xchg push movsl hlt xchg add mov mov cli mov addr32 mov xchg (bad) jno pop out adc or lahf (bad) lock push lret jrcxz cs mov callq push mov loope sahf stc xor mov rex mov test jno (bad) (bad) mov mov xchg (bad) (bad) adc fcmovnb movsl (bad) push mov rex.WR fdivs retq cmc xchg (bad) cmp rex.WXB cmp movabs int int icebp xchg je jne subb sub (bad) push (bad) jmpq fbld sti std mov sub mov rex.RXB or jp sub adc pushq jbe mov in jbe sbb in xchg cmpsb (bad) je push mov lahf xor jnp sahf rex.WB loope (bad) pushfq test add or (bad) adcl jae xor ss adc out jo insb mov orl or xchg (bad) lret movabs pop movsl hlt jl (bad) icebp cmp (bad) push pushfq orl xchg rex.XB mov shl (bad) mov (bad) (bad) jnp inc pop callq xchg push jns (bad) iret imul adc addr32 (bad) hlt (bad) jo cmp ss std leaveq adc or repz pop lret and icebp test imul xor shlb in xor in add (bad) cmp rex.RXB rcrl pushfq mov push in fidivrl shlb stos int or fstpt xchg jne (bad) mov rex.WRB cmp insb mov test lahf add xor imul sbb xchg and jrcxz add mov rex.RX jrcxz imulb repz mov rclb sbb mov mov sti pop push mov (bad) leaveq (bad) xchg ja jmp (bad) xor loop xchg fbstp rolb (bad) or xor xchg mov cs rex.WB or xchg movsl icebp and imul xchg movsb out clc sub (bad) (bad) xor xor fnstenv test cld cld adc mov jmp xor repnz xor pop add (bad) out xlat mov (bad) xor xor movabs (bad) or pop testb jns adc je rex.WRX fwait (bad) icebp lret cmpsb mov mov retq xchg (bad) rex.WRX in out enterq sub rex.WR (bad) in sub fist repnz adc iret sbb je mov lods imul mov mov mov loope mov rex.WX rolb or movabs adc js mov pop jb sub push lret add push pop sub enterq sbb mov mov int3 (bad) cld movabs rex.WRXB test icebp (bad) xchg mov out jno sbb jno sbb movb mov (bad) (bad) adc add cmp add or sub rex.WR rex.W pushq test loope movabs fucomi cmp rex.WX push loope push rex.X movabs sub pushq jmp lock (bad) xor out pop lods stc hlt int3 pop or or mov movslq pushq jl sbbl or (bad) jbe sahf add mov std mov mov sahf or add pop sub retq mov es out xchg mov fwait (bad) test mov sbb pop (bad) cmpsl jp movabs adc rex.WB mov push (bad) retq clc test nop movslq lea gs int3 xchg cmc shll cmp (bad) adc enterq cmc (bad) loope sub sbb cli add cmc (bad) cs or sahf (bad) int in xchg js sbb repz jo sub sbb cmpsb pop pop cmp (bad) xor (bad) jns sbb cmp rex.X and adcl cld stc stos callq imul sub adc rex.W rex.W adc loop mov and out mov imull fwait mov test icebp rex.X or (bad) or (bad) or mov push (bad) mov adc mov add rex.RX pushq xor sub rex.WB test int3 mov (bad) jg add push icebp jl movslq rex.WR shlb cmp pop cmp retq pop imul jmpq xchg js or adcl rex.W sub xlat pushfq mov icebp add (bad) movsb xchg leaveq pop (bad) cmpsl retq cli mov pushq outsl js retq in push jmp rex.RX cmp movsl sub (bad) sub imul rex.WRX jne out jp (bad) (bad) cmpsb je shl mov stos int3 xchg cs mov cmpsl (bad) sub xchg lea std rex.RXB cs scas es retq retq rex.XB rex.X jp sub imulb (bad) rex.WXB orl addr32 repz rex.RXB mov and and mov mov (bad) jmp lret jmpq xor or paddq retq mov sub fs insb mov cs rex.WRXB enterq (bad) movsl fisubrl sbb repnz rex.WRXB movsl scas fbstp or xchg add cmp sbb rex.WRB fcomp fwait pop xchg mov mov xchg sbb cmpsb fnstcw (bad) rex.RXB js test jl xor (bad) xlat adc xchg mov jp icebp test jl jmp and sub (bad) fsubp imul retq xlat in hlt lods cmp sub adc (bad) callq rex.XB fstps cmc fist imul pop test es rex.RX (bad) shll mov (bad) hlt fs mov imull gs cmp xor jmpq adc or lock pop sbb rex.WRX mov jp nop push rex ficoml rex.RB mov and jno rex.RXB rex.W ds (bad) rex.WRX or or xchg pop test outsb jb adc (bad) push rex.X push cmc sub jrcxz out jp adc (bad) push stos int3 (bad) or in adc fstpl rex.WXB (bad) je std push sub pop mov sub roll fsubr add jl add pushw (bad) mov icebp rex.B cs sub jo sbb loop pop (bad) cmp sar cmp sub lea test push rex.WRXB fist enterq mov fldl sbb sbbl or movsb adc push test pushq pop scas jrcxz sti mov or cmp (bad) divl enterq (bad) sub in jo lock and (bad) (bad) hlt insl jne fstl mov (bad) js jle clc rex.RX stos rex.RB jg cmp or mull rex xlat adc xor in add mov rex.WXB mov jmpq mov rex.WXB rex.WX js jne movabs iret or icebp rcl adc xchg shlb cli cmp jmpq sub movabs mov pop add out (bad) orb and cld or leaveq out lods rex.WR movabs mov and subl out rex.RB mov leaveq xchg (bad) ss rex.WRX lods rex.R and pop pushq pop adcl cld leaveq mov mov (bad) in xlat xor (bad) test (bad) movsb fxch cmp test (bad) sahf retq mov movabs fsts outsl pushfq xor cli movabs jne (bad) jo ja mov pop sti (bad) (bad) sbb in je mov rcrl push retq (bad) cwtl movsl cld out in xor fstp jae stc mov cmp xor stos inc (bad) hlt retq add cmpsl or xchg (bad) add adc cli in shll and pop push loope or (bad) jmpq xchg mov xchg cmp sub (bad) lret imul loop rorl and fsubp sbb cmp adc pushq enterq sbb jrcxz rex.R and outsl add add xchg (bad) movl mov test (bad) rex.WRX repnz xor cmpsb iret callq jge callq sbbl add iret mov cld out rcrl cmpb rex.WB mov repz adc mov clc (bad) hlt sub or (bad) (bad) test iret out lock loop jns rorb push js sub lret pop jmp pushfq insb divb out add (bad) movsl retq repz cmpsb mull pushq int3 (bad) and mov mov movabs add mov shrb and out jmp fistpl cs xchg rex.RXB stos in sbb icebp cld rex rex.WXB test imul sbb out sbb mov adc fildll add mov fcos movslq fsubl rcll xor icebp add roll (bad) add rex.WXB add jb (bad) cmc pop out idiv sub jbe rex.WR fisttpll xchg movsl out out mov imul (bad) lea and out sbb in leaveq mov adc (bad) stc incl jnp test mov (bad) enterq push stc lods xchg negb (bad) adc xor in movsl and icebp sub rex.WB test out adc (bad) in sbb sub adc std mov xchg add pop rex.XB cmp rex.W (bad) loopne adc mov movsb std or mov (bad) hlt and leaveq rex.WR jne xor add rex.RB imul jmpq mov adc cmp adc (bad) push mov adc (bad) jrcxz,pn out iret jl fldl2t leaveq rol rex.WB cltd cs gs andl sub add cmpsl mov (bad) (bad) (bad) fstps cli cwtl (bad) mov mov test adc popfq pop lea mull pushq rex.WB (bad) pop cmp clc and add test adc (bad) test divl xchg push (bad) push xor out adc icebp out fsubrs xchg rcll push mov out mov (bad) mov pushq test vunpckhps (bad) loope xchg (bad) sbb sbb or clc sub xchg outsl (bad) rex.XB leaveq or hlt std callq stc (bad) rex.R hlt sub mov add jmp (bad) sarl (bad) outsl xor in loop int xchg and movabs pop cld xchg pop int3 rex.WRX imul mov cld jne (bad) pop adc callq out and jbe shrl mov (bad) (bad) push or stc retq push (bad) sub xor mov shll or movabs adc mov movsl add add (bad) (bad) push repz retq retq xor hlt (bad) adc jnp movabs cmp mov test xor (bad) push movsl jmpq hlt cltd rex.WRX mov jle in mov retq (bad) loope rolb pop stos mov xchg (bad) movabs fs push add (bad) mov xor or cmp addb lock fs xor retq in int pushfq mov pop jnp mov (bad) cmpsl stc rex.WRX sub adc loope lahf loopne sarb icebp cmpsl pop jge or jno nop push cwtl xchg retq rex.RX mov cmp xchg (bad) in pop scas rex.WR and outsb imul sub mov loopne mov adc push mov pushq (bad) xor lock rex.RB lock cltd sbb rex.WXB jne lods xlat lods rex.WB (bad) jne loop xor add movslq mov int3 push lea test jmp mov (bad) enterq ss mov (bad) jo or leaveq mov xchg loopne orl imul (bad) cmpsl xchg in fisttpl sarb cltd xor adc (bad) adc jl (bad) push xchg leaveq fsubrs rorb push movq or sbb jne (bad) (bad) (bad) cmp scas (bad) jmpq jrcxz jrcxz (bad) jp cmp in repnz loope xchg adc imul mov loope out jns test xchg and or idivl rex.WRB stc pop rex.WB sbb mov in add iret in or repz mov pop jle xchg mov jmpq xchg (bad) in mov add xor test (bad) cmc retq in movabs sub (bad) adc xor (bad) mov cmpsl and mov pop loopne lret orl mov cmp shrb not add fbld sub test retq cmc rcll test out push movabs or lea out leaveq pop andl lea sbb sbb push repnz gs adcl nop mov jl jmpq mov jne jno or push rex.X rex.RB je mov test fldl pop out sub rex.RXB and mov iret jrcxz int imul and mov mov test xchg nop xor jp (bad) rex.XB vaddsubps mov mov push xchg mov movabs (bad) (bad) (bad) (bad) or adc rex.B rex.WB movslq jbe mov mov std and outsl mov retq xchg ja movabs out imul (bad) hlt (bad) mov (bad) sub leaveq mov or fiadd or (bad) (bad) repnz push xor (bad) adc loop mov push hlt jne jmpq lret in clc jmpq cmp mov mov repz rex.XB retq push mov out jne (bad) ds (bad) (bad) out (bad) sbb outsb mov (bad) rex.WRX or pop rex.RX (bad) mov cmpsb sbb cmc cltd in stc mov jnp andl rex.RB rex.W (bad) mov repz add xchg and incb pop rex.WB or jns rex.X jmpq xchg mov add mov xchg mov insb leaveq pushq push jmpq int imulb (bad) jae (bad) (bad) lods test jns (bad) (bad) movabs (bad) fdivr xchg pop push movabs jno movslq cli je loope sbb rex.WR ja xchg (bad) push adc xchg push rex.XB rex.WXB adc (bad) push movabs sbb push scas and lahf movslq retq pushq pushq push mov rex.WB popfq add rcrl lret and xchg sbb mov out jmp xchg (bad) subl or sub jg (bad) cs out xor retq mov out sub jnp in xchg jrcxz or sbb sbb in adc sbbl cmp add callq rex.WR rex.RXB rex.RXB add test test jge and stc lret xor cmpl icebp rex.W rex mov sahf fldcw imul shrb sub mov (bad) sbb push sahf out sti mov (bad) hlt cmp or xchg xor insl sub push (bad) xchg (bad) pushq clc jno xor cmp movb jmpq mov jmpq (bad) sbb (bad) (bad) vucomisd out icebp rex.RB cmp (bad) cmpsb shrb adc test mov out mov add jmpq mov mov cmp lea rclb sub sarb out fs js lret or (bad) cmp or rex.W mov add pushfq xchg lods subl js jmp subb in mov loope movslq (bad) xchg or mov xchg sub movsb cmp rex.W rex.RB mov jnp pushfq adc enterq xchg pop mov add sarb pop adcl icebp (bad) cmp mov movsb iret sarb out icebp int hlt sub jnp movsl (bad) (bad) add popfq movabs xchg stc push gs ja cs and xchg pop fsubr rex.WRX out add fisubl jmpq adc (bad) adcl pushq fsubrs cltd movabs pushq fsubp xchg subl ds adc mov (bad) (bad) rex.RXB xor xor test (bad) popfq out push loope lock add mov cmp (bad) (bad) leaveq fild rex.B cmpsb sub mov or fldt test lret cltd rex.X pop cld data16 gs cmpsl imul movsb fildll popfq rex.R add ja (bad) rex.XB xor popfq sbb retq (bad) push add (bad) push std (bad) leaveq push lea cmp scas je sti adc sbb xor (bad) pop adc rex.RX rex.X xor outsl mov insl mov rex.WR int3 mov and out mov rex.WRX fist add push mov sbb jl xchg retq (bad) bswap mov (bad) (bad) movslq mov repnz sub sub movabs adc imull in cltd (bad) (bad) scas andl fsubs (bad) adc movabs jmp cs scas jne and sahf insl sub or mov mov jns (bad) mov add jge (bad) sbb adc adc sub jmpq (bad) js in pop add cmc movabs icebp jmpq stc outsb jle int3 test (bad) loopne rorl retq loopne (bad) rex.WR in cli fisttpl in outsl es imulb repz mov rex.WX lret and mov rcll mov add cli data16 jmpq xchg enterq mov nop adc (bad) scas xor pop outsl (bad) repz loope in (bad) jmpq add (bad) adc mov jnp fdivl lahf ss adc (bad) jp mov mov rex.RB ds test mov outsb sahf mov or scas lods sub sbb xchg xor or sti or rex.RX add (bad) fsubrl sub jno rex.WRX mov imul (bad) (bad) mov mov pushq stos push jg sbb repz repz imulb sahf add rex.WB mov leaveq (bad) xor (bad) movabs rorb out addl sti mov sbb hlt mov lods fimull mov (bad) and pop cld hlt xlat (bad) xchg scas out jns mov add sub jmp mov lea test in neg (bad) popfq push mov lahf outsl cwtl outsb (bad) push xor mov rex.WR test mov fist sub xchg mov cmc repz fs sub jbe xchg mov or mov sub rex.XB nop (bad) sarb push rcrb mov loope mov (bad) mov movsb jle enterq mov (bad) or jae sub xor pop or push (bad) adc jmpq pushfq fdivrl mov jl cltd xchg jo ja in nop sub fs pop jns movabs fs movsb icebp in or outsl mov adc rex.W rex.WXB callq cmpsl test stc int push retq mov push movsb out or outsb callq test mov mov repz (bad) repnz js add outsl sub retq movabs hlt movabs adc mov xchg (bad) retq nop hlt pop fucom movabs jno callq adc rex.XB push test xor sub (bad) or js adc jno rex.XB rex.RX icebp mov stos mov xor popfq xor je icebp xchg cmp or mov (bad) int xchg loope sub (bad) push retq jp pop lea lahf or fprem1 fildl stos (bad) rex.RB xchg test lock pop mov (bad) fdivs or xor (bad) sub (bad) push rex.WRXB pop in divb lret retq xor add jns sub mov or sbb test pop mov pop (bad) movabs icebp stc sbb (bad) mov insb adc int3 in (bad) xor rex.RXB mov or retq ja xlat callq in loopne mov lock fcmovnbe xchg pop sbb and repnz xchg test mov xchg mov jns pop (bad) out xor jns jl popfq movabs test sti popfq test pop jmp icebp xlat jg pop sub mul (bad) stos test fadd repz xlat sti add push sti test icebp (bad) rex.WR ss mov (bad) mov xchg xchg xchg xchg rex.WRB (bad) (bad) mov int3 xor pushq or push mov neg xor or (bad) jl rex.WRXB mov jg outsb sub rex.RB lods movsb movabs (bad) adc xor test rol cwtl (bad) xchg movl repnz js gs pop rex.X xchg fcmovbe xchg pop cli rex.WRX (bad) hlt retq sub out jns lods pop (bad) insl rex.RXB movslq movabs pushq leaveq std fnstenv sbb jg mov in rex.RX outsb es cmpsb sahf pop (bad) repz jp mov (bad) (bad) cs lock cmp (bad) jne lret pop out rex.RB rex.WRXB rex.WRX pushfq (bad) or add mov int3 xchg sub jb (bad) rex.RXB nop imul out mov or (bad) pushq loopne jmpq mov fadd and lods lea test out jl rex.WR (bad) lret movabs subl or (bad) mov lock jmpq (bad) rex.X std rex.WRX callq pushq (bad) cmpsl rex.WB (bad) movslq mov mov repz (bad) pop (bad) pushq ljmp jnp,pn mov xchg xchg movslq xchg (bad) jno (bad) gs mov adc hlt jo mov sub adc jmpq or adcl mov jno push jo rex.WB sbb and (bad) je mov leaveq or mov paddsw (bad) movslq mov movsb push lock loop xchg out jmp stc movabs hlt add insl rex.RXB cwtl xchg movl cltd (bad) push rex.W rex.WB mov jl in cmpsl orl jge add outsb add outsb xor sarl xchg out or imul out (bad) hlt (bad) (bad) out fcomip (bad) jmpq lock sub addr32 sbb jns sahf test pushfq xchg add xchg in imul subl imul (bad) es push push jo icebp jno add test (bad) pushfq iret xor cli and jo xchg mov adc rex.WRX xor out hlt scas and orl add lret movabs jo sbb jne and popfq in leaveq std movsl or xorl test jno lods rex.X loope in xlat subl lock in jrcxz push mov jnp xchg jnp rex.RB lods subl xchg jp mov pop (bad) jmp xchg callq (bad) sub jge insb ss xchg rex.WR icebp jrcxz loope adc movabs (bad) (bad) rex.WXB add xor rex.WB mov js (bad) rex.WRXB cltd xor mov and or sub mov jmpq out loope mov callq movabs stos jmp xchg xor movabs loopne push loope mov mov or pop xchg cmpsl xor loope jg or lods mov pop mov lret jmpq (bad) pushq add push jge lods jmpq xchg movsl movslq (bad) movsl jae xchg sti repz rcll push fs loopne mov ds rex.RXB add rex.WRX mov push pop int3 movsl repz movabs mov out cmpsb clc cmc rex.RX clc sbb xor lret pop sub loop divb adc lods and and xchg jge sub push sub jmpq mov rex.WRX repz testb push lea je cwtl cmpsl adc mov sbb rex.WRX sbb mov jb (bad) cli out lret sub stos jp in mov (bad) lock scas pop (bad) sbb lea rex.WX loop adc (bad) (bad) flds jo mov pop test lahf sub mov cmp or test jbe or imul (bad) (bad) add icebp data16 or add fidivr xchg in std rcrl sub in mul sbb pop in push iret testl rex.WRX xor push cmp repz (bad) xor mov adc pop ds (bad) flds (bad) rex.R mov test jl leaveq fwait or cld movabs std mov movsl popfq (bad) cmc (bad) xor test xor retq fbld lods iret loop add xchg rex.WRXB (bad) (bad) mull (bad) movslq mov jge pushq cmpsl sbb stc jmpq jns push jne mov or (bad) ja vfixupimmpd je test mov lret jl out retq lret rex.RB pop (bad) jo lret (bad) cs or pop adc xchg rex.R iret icebp jmpq andl fcmovnu sbb fucomip or icebp loope push in jmpq adc mov xchg jrcxz fmulp (bad) test addr32 retq outsl add rex.WR xor add icebp repnz fwait mov fs cld or movsl (bad) or xor or ss cmp xchg add adc and and pop enterq insl (bad) movabs lret rclb mov xor (bad) adc mov sbb push pop jmp rex.RXB rex.WRB cwtl mov jne and push add frstpm(287 pop rolb loope std adc lods insl movb push sti out xchg fsts or xchg test or (bad) int3 fdivs mov mov movslq adc lock icebp pushq test push or jle clc lret adc (bad) mov (bad) jmpq loopne ficomp mov (bad) sahf int (bad) (bad) cld mov cmc xchg je or test fisubr mov test ss mov jno movslq rex.XB leaveq mov leaveq jns lock sbb (bad) cwtl repnz shrb (bad) fbld movabs adc in rex.WRX rex.R xchg xor cmc add testl or cmp cmp cmp shrb ja rex.WX retq xor std cli or (bad) out icebp out ss shrb jns or mov or and and gs testb cs fs leaveq int rex.RXB stc sub jmpq (bad) hlt mov (bad) hlt mov rorb cmp (bad) fs push fisttp adc ffree jno jg js cmpb sbb mov lret (bad) add rex.RXB xchg callq outsb add in int3 or imul xchg cmp adc add jmp add insb cmp mov out out and add loope or test (bad) movabs xchg and (bad) (bad) and mov add sbb (bad) rex.RXB pushfq mov mov mov iret movslq mov cltd add adc mov mov in pop int loop or (bad) retq jbe movsb pop mov stos retq mov rex.RXB std pushfq (bad) mov adc nop add test addr32 fistpll (bad) mov mov sbb stos lret movabs xchg movslq jae jrcxz and lods pop (bad) (bad) adc bndstx lret xchg shrb sti mov sub or outsl rex.WB sub fimull xchg jnp imul out retq lret (bad) decb jne sub rcll cltd (bad) gs adc sahf xor jno lea lret test cmp out rex.RX movabs jmpq icebp and (bad) mov fcoml rex.RB xchg add or sub xchg popfq jl mov retq mov mov mov loope push and rex.WRX and xchg mov push push out (bad) mov hlt insl loope add cs movaps insl retq in retq lea (bad) fist popq (bad) or (bad) xchg (bad) and mov lods mov orb (bad) rex.WRB and (bad) cs (bad) (bad) mov xor outsl fisttpl jp sub push (bad) sti mov pop push cmpl callq or xor test pop rep movsb int3 add loopne sub (bad) xchg loope mov and (bad) repz jnp jp rex.XB cmp mov cmc in jg ror sbb push sub adc sbb clc retq mov mov lea in test (bad) or mov lret xchg (bad) jmpq cmp nop jno mulb pop mov mov and sub clc pcmpeqb test test jno rex.W repz lar js (bad) fisttp jnp rex.WB mov pop lea retq stos loopne enterq in int3 sbb xchg clc (bad) psraw pop outsl or movabs adc or mov addr32 rex.X push sub (bad) sbb jrcxz mov je cmpb leaveq add rex.WXB or enterq (bad) jl pop in iret jb leaveq retq lods pop add retq mov pop js cmp or movabs rex.WXB sbb xchg cld (bad) pushfq or xor movabs lods jmp cs imul rex.WRXB notb rex.WXB xor (bad) (bad) and pop jmpq jbe rex.WRB rex.RX fistp icebp cltd xor jg subl pop rex.XB or sub adc shrl sbb in test jb (bad) mov jno or cltd xor (bad) push and jae and (bad) fistpl insb fs icebp and (bad) movabs addl jrcxz test je mov pop (bad) ficom (bad) push adc sbb stos mul xchg cmpsb push stos mov sahf hlt push int xchg stc (bad) sbb mov cmpsb sarl ffree mov adc cmp mov mov xor xchg sbb mov adc push (bad) sub retq roll rex.WR (bad) sub xchg rex.WB hlt test clc (bad) jrcxz (bad) fmuls out fdivl cmp cwtl add cmp pop push adc sub sbb mov int rex.WRX sar lods clc movl mov cmp shlb and add hlt (bad) pop pushq pushfq movabs in rex.RXB gs sub push (bad) or (bad) sub movslq loope movabs jnp (bad) movsl out fst sar retq (bad) jo in cmp push (bad) shlb xor iret sub pop fcompl pop add idivb test out orl mov pop cld pop repnz mov icebp mov cmpsl rcll sub and cmpsl mov xchg fstpl cmpsl je xor cld popfq js repnz lock mov in push xchg out sbb adc mov jno sbb jo (bad) jo rex.XB (bad) xchg adc push adc cmp push (bad) repz pop paddd and rex.B movsb leaveq popfq pop addl in movabs cld (bad) flds (bad) mov mov ss add nop loope enterq push je rex.WB js (bad) icebp sahf add pop (bad) out (bad) (bad) xchg repnz ss jno movsl mov cs jmpq adcb jrcxz rex.RB clc sub cmpsb shrb (bad) movb rex.WR add and (bad) adc lret mov fwait sub gs icebp (bad) xchg outsl xor lock jg xchg jo xchg adc or and or pushfq (bad) adc cli cmp mov fndisi(8087 pop and mov push pop test pop sbb pop retq out add mov xor and icebp addb cmp movabs mov icebp xchg add (bad) repz stos orl jrcxz rex.XB xchg rex.WX mov rex.RB loopne outsb movabs jns in jrcxz mov in addr32 cli std xor sub mov adc int3 imul and fstps (bad) (bad) rex.R pop icebp lods xor cltd sbb nop push sbb mov mov mov int repz ja and pop jno,pt (bad) rex.B cld or cmp mov adc clc xor mov out pop and mov rex.WX sub insb (bad) mov rex.WRX movabs or mov icebp movabs (bad) imul jno lret rex.WB leaveq cmc test xchg icebp jrcxz test jno cmp mov mov gs lahf (bad) lods (bad) (bad) icebp and cs hlt je (bad) pushq rex.WRX rorl mov (bad) rex.WR add lahf leaveq (bad) addb rex.WRX (bad) rex.RX sbb xchg mov out or xchg movabs (bad) sub push cli out sub add retq test iret mov fmul rcrl in divl (bad) xchg pop add cmp add js std in insl repnz rex.WB cmpsl sbb repnz rex.RXB pop or (bad) (bad) in pop fstpt sbb rex.RX (bad) jno int3 shr (bad) icebp rex.X cmp jp rex.RXB jns loope movsl cmc (bad) enterq std std push int3 cmc rex.WRB scas clc mov rex.WB mov pop mull push and lea mov lock fwait es js neg in cmp movabs push and in cmc loop hlt xor cmp (bad) or retq pushq movabs callq sub (bad) sbb or rex.WRX (bad) cli popfq leaveq lods push orl mov out pop movsb fcmovnbe push sub xrelease int loope clc (bad) sbb adc mov jno repz mov sub out sub leaveq sbb cld sti and retq sahf imul (bad) iret es cs leaveq cwtl popfq repnz test sub xchg sbb stos rex.RX (bad) std jae icebp (bad) pushfq (bad) push movabs jae out rex.WR (bad) iret sar rex repnz jae retq (bad) and cwtl xchg rolb sub push test rex.WRX (bad) in leaveq rex.WX in rex.WB pushfq lea in rex.RXB stc stc and pop xchg and fwait mov (bad) push shr cmp out out xor rcll lret vrcpps (bad) pop fmulp out jl out push lret out jne adc push cli cs jl lods js jmpq or test int rex.W cld or pop lea rex.WRX nop sub xor sbb (bad) out jbe loope mov rex.RB fbld add rex.WR lea cmp adc adc rex.X rex.WB pop stc jnp cltd stos movl lahf test cwtl lods mov pop (bad) jo cmpsb mov cmp fisttpl mov sub (bad) sub mov xchg jle mov movabs repz retq retq test (bad) add xchg out (bad) out (bad) stos sbb add adc lretw jrcxz addr32 jl std (bad) out retq pushq test (bad) sbb xchg xchg jo mov cmp mov js jnp (bad) movslq cmp push mov and mov lods jbe mov mov (bad) std pop (bad) loopne push clc lods xchg pushfq je mov add loope (bad) setns sahf mov rex.X fidivr rex.RB mov jmpq (bad) push (bad) fdivs rex.WRX rex.RXB cmp mov (bad) lods xchg movabs (bad) (bad) add xchg fadds (bad) cmpsb adc or bnd or mov rex.WRX movabs int rex.R icebp push sub or mov icebp cs jns cmp sbb movslq mov clc sahf xchg mov rex.RX int3 cltd sub out or mov cwtl rol je fldt push (bad) jnp lret lret fs fist (bad) add or mov mov cmc xchg callq movabs add (bad) mov rcrb push rex.WRX push addr32 fmuls xchg xor (bad) (bad) cmc jmpq sub (bad) cmc lret push cmp mov xchg rex.XB sub sub adc xchg sbbl fdivr cmp rcr lret rex.WRX leaveq rex.RXB (bad) imul int jae fwait loop mov repnz jl ja int movsb hlt push jno movsb movsl lret lock fsub jbe (bad) xor in in (bad) je addl jns repnz pop lea (bad) rex.RX adc and fcom mov movabs out jno andb jmpq jrcxz in jmpq xchg movabs jge stc or rex.WRXB sahf mov rex.XB (bad) cmc clc sub ss (bad) movabs rolb clc sbb jl movabs loop pop cld sbb int3 pavgw test sub (bad) cmc (bad) adc jae (bad) mov rex.RB movslq fstpl fmuls or insb sub sbb es pop mov jne iret cmp pushfq pop or in pop push int3 stos (bad) ss (bad) sbb ds and (bad) or adc retq cli adc insb xchg sbb loope out movabs mov stc js lea (bad) shll lock stos callq std mov rex std (bad) div out add pop stos movsl xchg sub add lret mov mov callq cwtl xchg (bad) and rcl jne rex.RB sbb mov lret leaveq fstl in shll movabs and xchg adc in lock adc mov pop vxorps jrcxz jmpq (bad) int3 pop loope xchg push cs (bad) jno rex.WB jno jno jrcxz jno or subl test (bad) mov (bad) add (bad) rex.WX cli or loope sub cld pop mov mov test xor and or mov xor jns jnp icebp jnp iret or movabs test cltd test (bad) pushq nop cmc in xchg mov in movabs (bad) jno lahf psrlq (bad) (bad) sub mov (bad) sbb cmpsb push xchg imul int3 scas mov mov rex.WXB pop mov movabs hlt subb (bad) and ror pop popfq test add jmpq (bad) ss or xchg sbb movsl fnstcw (bad) cli (bad) cmp cltd xlat xor rex.WR xor (bad) (bad) (bad) cmc (bad) mov jmpq sbb jg insb incb (bad) scas mov imul adc sub jle js pop sahf adc lret in (bad) cmp cwtl xchg cmp xchg rex.WRB add jbe cmpsb (bad) push cmp mov insl rex.RXB add sbb mov mov mov cs mov retq lock sub lock vpavgw mov int3 sahf pushq sbb test add mov and and movabs xchg jo (bad) repz rex.WX rex.W sbb out xchg jns ja add (bad) mov movabs movabs rex.WX mov xchg movabs jbe add mov insb loope cltd out mov push retq xor es and loope leaveq and cmpsl add out insb mov cmp rex add hlt lods movabs retq mov pmullw mov rex.RB push sbb in imul jb push retq xchg push rex.XB bnd add retq repz cltd mov retq in movabs mov mov sbb add jno (bad) icebp or rex.WXB out lods clc push rex.WRX pushq jbe (bad) stc rex.RXB loop mov (bad) pushq and test ds mov pop loope test jrcxz out jge loope xchg cli sub pushfq rex.WXB or sub test (bad) or ds sub cmpl rorl xor int lret jbe rex.RXB out or (bad) iret mov mov out rex.RXB iret adc rex.WX rex.WR fild sub xchg rex.RXB jno fild mov out (bad) retq mov fistp hlt (bad) je stc hlt adc callq andl xchg jp outsl adc pop (bad) or xchg mov xchg jne rex.WXB xor movabs movsb (bad) mov jno stos movslq and cmpsb (bad) (bad) fstl test in movsb mov and jrcxz jbe fildl and xor rex.WRX js jmpq movabs movabs in lea jns mov xor retq movabs lods in negb mov loope testb xor std mov sbbl fst scas pop mov xchg pushfq retq mov loop mov rex.W xchg cwtl fxch callq test mul (bad) jb movabs jnp jo ss fwait movsb rex.WRB mov retq cltd sub xchg (bad) or xchg loope or mov (bad) cwtl jge mov rex.X mov cmp add fnop mov imulb movsl rcrl rex.WB mov (bad) (bad) lods adc (bad) (bad) addr32 sbb clc fistl rex.RB icebp pushq fld mov (bad) loope in xchg hlt (bad) add rorl xchg mul in mov xor xchg (bad) or retq jne movabs cli jle jns rex.WRX lret (bad) mov (bad) shr jmpq sbb hlt in push addl add enterq (bad) stc (bad) mov scas (bad) mov insl loopne mov addb add xchg (bad) hlt and hlt std rex.WXB hlt movabs (bad) enterq push push mov mov mov mov imul sbb sbb jbe sub movabs movsl adcl mov sbb movsl mov cmp movabs and add sub or sub (bad) (bad) repz stc rolb ss loope cmpsl rex.WR hlt jb add nop jbe sub shrb in cmp mov rex rex.WRX mov pop sbb movabs add xchg lock mov sub icebp int3 je rex.X (bad) xchg cmp cmp fistl out leaveq push in (bad) loopne rex.WRXB or (bad) sub (bad) xor jge push std lea pop xchg xor callq mov xchg (bad) es test jp cwtl out (bad) xor insb rcrl gs retq or push movabs rex.WR callq ja rex.WRXB or mov push lret loopne xchg loop lcall mov (bad) xchg jge loope jmpq xchg outsl (bad) pop movabs rex.RX xor (bad) ds rex.RB rex.RXB ss mov fsubrs jl (bad) stc push rorl rex.RX hlt cmc rex.XB adc scas rex.RB data16 enterq xchg lods repz (bad) movabs rex.XB rex.RX push xlat lret pop retq mov out xor test rex.WRX xchg xor rex.WR cmp sub xchg jp sahf cmc unpcklps out pop (bad) fwait or sub out mov mov jrcxz outsl rex.W mov sbb cmp outsb adc add fdiv push movabs sub rex.WXB rex.XB (bad) jo or mov add cmp (bad) (bad) adc lods out sub stos (bad) rex.W (bad) repz mov jbe xor push or or enterq mov (bad) out xchg retq div mov out rorl fsubrp rex.RB (bad) (bad) xchg lea push mov testl rex.R out int3 jns out in jg or mov rex.WRB lea std lock xor adc pop cli and add and jge jge jrcxz pushq or rex.WR (bad) lahf icebp jnp,pn mov loope idivl repnz jne rex.XB rclb test repnz lock rex.RB (bad) je loop fldcw rex.XB xor jmpq (bad) movabs cld cltd int3 out repz imul (bad) fcompl push sub (bad) (bad) (bad) retq add pushq (bad) rex.RB test sbb leaveq sub mov loope or jg std adc pop and ffree lret (bad) mov rex.RB xchg leaveq push in jl int3 cmc mov pop pop adc (bad) rex.WR cmp mov stos mov (bad) cmp callq jrcxz fs pop rex.WXB cwtl add repz cs test outsl pushq addr32 nop loope loopne (bad) jae add pop (bad) sbb add pop divl sub xchg add lods mov test mov adc rep rex.RB push jrcxz jrcxz out cmp mov mov sub pop (bad) rex.WRXB fcompl enterq test loope subl sub mov cs and lods jbe mov psadbw (bad) hlt cld retq in mov add sub rex.W cmp retq xor rorl (bad) and retq xor (bad) rex.WRXB test callq leaveq sub movabs shll imull (bad) fldz movabs cld mov (bad) hlt or (bad) int rex.WRB (bad) out add cld (bad) stc fbstp add cld and out or movsl add jne clc outsl and out icebp (bad) movslq xchg repnz cs mov and (bad) xchg mov pop jmpq loope fmul xchg rex.WR lret out test xchg mul cmp lea adc (bad) pop (bad) and fs mov (bad) repz pushq in icebp push mov sbb adc stos xor lret sub loope sbb sbb callq std mov test (bad) imul mov fldt jl xchg stc xlat mov retq mov in movabs xchg in mov mov es fcoms adc rex.WR and sub sti rex.WRX test (bad) (bad) scas push pop fistpll leaveq addr32 hlt pop adc add jmp mov movabs (bad) add jp callq sbb (bad) jae gs negb (bad) (bad) mov mov push cmp (bad) (bad) fcomp push (bad) mov or sbb clc vucomisd and outsb bsr (bad) xchg imul jae add ja shrb in ja mov (bad) icebp notl xor stos hlt (bad) jns test jb xor sub mov rex.WRXB hlt mov pop sbb popfq rex.WR movsl (bad) jp add (bad) mov mov vcvttsd2si subb or push rex.B fstl shrb pop movsl movslq repnz inc rex.WB (bad) jo (bad) movabs mov sahf mov mov hlt mov clc cld mov lods or cs xchg cs outsl jmp mov cmp lods sti jns jae mov mov icebp jno add es movabs push sbb scas movabs jmpq shrl std (bad) test (bad) scas jnp addr32 ds callq adc mov mov xlat (bad) jrcxz mov jl cmp sub mov int3 sti popfq leaveq in mov push loope jmp cmp scas and mov (bad) (bad) mov pushq or mov rex jge (bad) pop gs stos sbb notl test lret add xlat and mov push loopne rex.WRX rex.RB rex.B xchg loope pop lods lahf scas mov movsb pop mov jp stos data16 sub pop lahf or rex.RB sub mov enterq xor mov sub in (bad) lahf mov mov push int3 xor cs lahf in rex.X cwtl rex.WRX (bad) rex.XB (bad) pushq leaveq loopne adc (bad) leavew mov in xchg retq mov or rex.WB std mov pop and movsb loope pop sub sub add add lret jae fidivr mov adc sub cld (bad) (bad) (bad) xchg pushfq je mov jle jl xchg (bad) pop insb ja movsl xchg mov in mov cli pushq (bad) (bad) movabs mov lea xchg adc leaveq cmp mov mov cmpsl movabs sub test fiadd mov int3 hlt test rex.WB in mov or test (bad) stc (bad) jno add add jl (bad) xlat mov loope and rex.WXB movsl test outsb adc rex mov rex.B push faddl lods mov movabs movabs jrcxz sbb push test loope (bad) mov lcall mov repnz bnd insb leaveq pop rex push test cs out add xchg push (bad) shlb fdivrl gs rex adc movabs lods test (bad) inc (bad) cmp imul mov jrcxz (bad) (bad) lods push leaveq xor rex.WB lods rex.WX test push jno sub add fdiv cmp (bad) rex.X jno sub (bad) mov pop hlt shrq add mov jnp or (bad) adc mov or data16 pushq mov fstpt and fistl adc rex.R sahf sub rex.WRXB sub and rex.W ds movsl out in add (bad) sahf data16 pushq icebp adc push push jge sahf (bad) cltd leaveq rex.B xor (bad) jnp pop adc adc (bad) ffreep cld jmp in std stc (bad) xchg data16 jmp leaveq mov rex.WB mov xchg (bad) sbb pushq js nop loope movabs jmpq out rex.WB (bad) (bad) xchg mov xchg rex.RB andl rex.WR movsl xor rex.XB loop iret push movabs (bad) push rex.XB cmp cmpsb movsl (bad) test (bad) rcrl js insb lock pop cmc jno push out fwait (bad) lock or (bad) sub push mov or pushfq repnz pop pop mov ffree bnd (bad) rex.R retq popfq sti push push cld icebp add xchg and adc (bad) jl rex.WB repnz mov test adc jmp nop leaveq test xchg rex.RXB push (bad) rex.RB pop jrcxz xchg icebp mov adc jrcxz loope out mov (bad) movslq jo (bad) adc sub cmpsl stos push outsb add xchg (bad) sub test leaveq movslq movb rex.WX pop adc lock clc mov retq adc (bad) int ds leaveq js nop movsb rex.B in sbb loop cmp rex.WRXB xchg xchg or (bad) icebp movabs xor mov mov ss mov movslq rex.B pop add cmp sbb and popfq jnp pop adc pop fnop (bad) push or out sub push cmc (bad) jno repz jrcxz xchg mov rex.RB xchg mov (bad) (bad) mov mov js shr sbb (bad) push out popfq pop sarb jb xchg test push xchg test (bad) je mov sub (bad) sti adc mov loope push lret int3 test rex.B sub sarb andl leaveq fldl push cmc jns movabs sar (bad) push test scas push jmpq retq push mov sbb (bad) pop repz frndint cmp icebp (bad) xor (bad) sar jno (bad) jp cmc mov fmuls jo (bad) mov sti (bad) cli rex.WXB sti xchg lock jrcxz mov mov je xchg push addl xchg in (bad) adc repnz stc (bad) xlat (bad) ss (bad) sahf lret cmp rex.XB cmp push je adc addr32 addl (bad) cld push sub loopne mov and jl rex.WRX cld nop pushq mov jbe out cmc lret rex.R sub loop movabs es stos ds cwtl add (bad) sbb movsb xor xchg jno (bad) adc movabs in cmp and (bad) fild ss callq cmpsl xor js (bad) cmp int3 pop cmc mov push mov mov jmpq add sub pushq jmp clc movabs js rex.W (bad) jmpq xchg (bad) ja (bad) js and adc jrcxz add sahf mov jo lock xchg xlat rex.XB mov in or std adc xchg or xchg (bad) stc ds mulb rex.W rex.WB (bad) mov and gs sub rex.WB or (bad) retq pushfq push mov (bad) sbb sub or (bad) xor (bad) xor (bad) jae or push stc jnp movsl push icebp lock (bad) cli push mov decl std jle jle rex.RB repz mov add (bad) (bad) hlt test pop out cmpsl scas (bad) mov jmp sub pop neg enterq fbstp (bad) rex.X rex.R pop mov xlat (bad) sub mov xor movsl mov xchg sbb jle roll int3 mov sbb rex.WR or (bad) sub mov jmpq xchg rcr or cltd sbb faddp cmpsl jl mov stc mov ja jmpq jae sbb ljmp rex.B ss pushq movsl xchg (bad) (bad) (bad) push js out mov callq enterq rex.WRB push fisub movl movslq sub push jp or jg adcl or outsb ror imul mov lock lods scas (bad) jne (bad) hlt out andl mov loop pop jno push cltd rex.W mov test std rex.WB push jp rex.RX (bad) repz and pop fstp sub push mov jrcxz rex.B imul icebp test mov roll sub rex.RB es (bad) (bad) iret sahf and (bad) js scas jg rex.WX (bad) stc (bad) fcmovu push jge lock mov cmp (bad) xchg repz adc pop add mov xor (bad) add repnz add cld addl lods insb mov push pop icebp xchg mov (bad) (bad) (bad) movsl mov xor (bad) cmp fstenv fstpl fsubs fwait repz stos push rex.WB xchg or imul shl (bad) mov ja movslq cwtl xchg xor or movsl pop sbb add mov cmp sti and and pop nop pop loope ds (bad) sub mov (bad) (bad) jbe xchg adc cli sahf rex.WRB or mov (bad) icebp jmpq js,pn (bad) lods (bad) cmpsl rex.WR (bad) imull fdivrl pushq mov rex.WB movsl cmp xchg sbb in pushq loop je xchg rex.RB jrcxz (bad) mov jb rcrb lods cmc sub in (bad) retq jmpq or (bad) rex.WXB rex.WRB jno retq cld loop out scas sub jne in (bad) mov fcmovu icebp and sahf shrl sub mov cltd (bad) cmp leaveq outsl pop test fisubl pop rex.W enterq imul xchg mov sub mov cltd movabs rex.W lods je add or in cmp imul in rex.WRB movabs sub mov (bad) pushq stc roll adc data16 in outsl (bad) in mov movabs jrcxz and pop mov in rex.WB imul jmpq jg in cmc mov mov rcrb (bad) leaveq mov sarl and sti (bad) rex.RB rclb (bad) mov outsl mov xchg loope add clc add out out cli (bad) rex.W sbb jl popq popq adc jno insb jle sub insl xor lock lea callq jno cmc adc jrcxz mov je rex.WB add cli callq (bad) mov repnz xlat pop rclb cmc (bad) repz add notb out stc xchg pop test mov mov xor movabs cld (bad) test cmc and xchg and sub out cli xchg xchg movabs mov nop outsb test cmp imul (bad) movabs adc add (bad) movsl rex.WRB and icebp adc test movsb je retq and adc xor (bad) jge mov xor (bad) jmp push (bad) in (bad) jmpq in xlat adc fist cmpsl xchg or add mov insl (bad) or mov outsb movabs push adc sub push retq pushfq and cwtl mov xor loope xorl leaveq xlat (bad) xor xor pop (bad) nop fisttpl mov jp addb push callq push or out xor xor (bad) out xchg fs mulb and in (bad) fsts cmc (bad) cld test roll sub (bad) cli sar jp insl push (bad) (bad) sub jp shll cmpsl fstps fidivl retq jp pushq mov mov ficoml sbb sub icebp imul adc loope push add fcompl adc and icebp pop jmpq xchg idivb cld push sbb or (bad) fildll ss repz loope (bad) and mov shrb (bad) repz fimull movabs movabs add pop jb and in loope sub movabs xchg out and (bad) ds rex.WR (bad) mov rex.RX jns cmc icebp rex.WRB int3 add (bad) cltd lret int sbbl pop cld xchg retq mov sub test and or loopne callq mov mov xchg xor in imul sub jb rex.X (bad) (bad) cmp leaveq rcll rex.RB out jbe int3 (bad) mov callq jmp movabs retq scas fdiv jge rex.WRX lret mov fiaddl (bad) shll jge or push (bad) (bad) sub adcl leaveq mov icebp adc cmc andl adc retq xchg sbb jg scas xchg jne incb notb mov jns cli repnz adcl sub cli pop sahf or enterq xor jae hlt cmp xchg pushq retq jle add mov fidivl lea stc xchg int sti cltd (bad) mov or lea rex.WRXB rcrb test adc out cs jnp sub icebp movb retq rex.RX movabs (bad) rex.XB scas in cli rex.X rex sbb and xchg out add pop mov cltd mull xor rorl mov lahf repnz cmp xchg je cmpsb (bad) sbb repz jmp xor mov retq mov rex.WR (bad) or jle movabs add frstor pushfq gs or mov and in push pop mov mov pop mov xchg int3 mov stos xor or test cltd push int es (bad) rex.WRXB xchg jle xor fistl jmp cmp xchg repz out rex.WXB (bad) rolb sbb stos andl rcpps add callq xorl pop pop xchg xor lret or out jmpq rolb jae test cmc (bad) loope mov (bad) fistl int3 jmpq icebp (bad) rex.WRX rex.XB sub jrcxz jrcxz mov add (bad) scas or mov cmc lock rex.X cmp icebp add push rcrb sbb push sub (bad) sbb out movslq lock std xchg rex.WRX xchg add lret pop in test and (bad) xchg pop cmc in rex.XB idivb adc orb test cmpsl add out retq xchg stos jno imul rex.RXB in and (bad) (bad) jrcxz (bad) loope insl js out (bad) imul rex.XB rex.RX add xor mov (bad) leaveq in movabs testb std mov xor outsb cmpsb sbb (bad) fisub cld test rex.B out cmc jl movabs (bad) rex.WX cmpsl (bad) cld xchg cmp movslq (bad) mov loopne je add adc fldenv (bad) push (bad) shlb mov (bad) (bad) cltd pop jno and loope fcom jge (bad) callq or adc pop pop popfq mov (bad) xchg cmpsl stos mov retq (bad) sahf movabs and or (bad) lods callq (bad) icebp xor js je and jmp in leaveq (bad) callq pop fmuls xor repz sbb mov or jg in (bad) enterq or (bad) (bad) (bad) jns mov (bad) data16 sbb movslq icebp rex.R cmp mov movabs stos iret mov enterq and adc movslq movsl sbb jno jrcxz andl (bad) rex.W fisub fs loopne (bad) (bad) pop jp sbb stos push rex.WX cmp fisubrl movabs pop mov or retq retq in iret sub mov xchg pop leaveq rex.WB mov (bad) mov jrcxz fsub insl mov loope cmp loop (bad) test (bad) mov xchg loope xchg or (bad) (bad) rcrb mov push mov icebp hlt mov mov loope movsl lret test movsb lret mov int3 push icebp cmp repnz pop mov xlat jne rex.WRX mov rex.RX rex.WB (bad) (bad) enterq in (bad) (bad) scas push idivb add js jnp add mov pushq loopne rex.W xor adc (bad) stc and adcl mov xchg (bad) dec cmc fcmovnb pop int3 xchg clc jge out es movb xor mov xchg movabs pop rex.WR ja xor popfq pop cmc xor movsl xrelease outsl lock andl cmp nop adc ja pop ljmp add xchg xor or xchg jg test movabs (bad) sub xchg lea fnop repz lock and pop lahf es lret repnz (bad) lahf mov loope lret sub xor movsb adcl mov mov movabs js (bad) jo push cld repz pop (bad) lea (bad) jno stos (bad) test addl leaveq mov insb mov (bad) (bad) mov jl (bad) xchg mov xor out rex.XB shr cs js int imul stos sbb (bad) or sub shr sti add insl add movabs pop cmpsl or push movabs fldcw rex.WRXB int sub xchg enterq icebp xchg int3 cltd mov sahf (bad) in nop (bad) sbb icebp sahf cmp rex.WXB (bad) xor mov enterq rex.W and loope cld scas movabs sub leaveq mov and lea fs mov ds adc loopne scas (bad) roll (bad) and (bad) sub (bad) fisttpll xchg rex.RB cmp (bad) cs mov movabs jrcxz test xchg rex.WR orl stos movabs popfq mov (bad) fdiv xchg loopne (bad) sbb lea (bad) sahf jg rex.RX mov pop popfq cmpl and (bad) ror test lret rex.WRXB rex.RB xor out sub jo roll (bad) rex.RB ds and out clc callq xor (bad) adc push imul add stos xchg fs add mov rex.R lock xchg lea add sbb (bad) jg rex.WRXB repz neg and stc jmp cld jae adc test lahf jno rex.RX gs stos xchg divl and pop sub jle (bad) lods fisubr cld std mov cltd rex.B orl pop adc cs icebp and adc xchg and cmp cmp add rex.W nop xchg jmpq push mov mov test add adc add xor (bad) (bad) mov rex.WX adc nop mov add out iret sub leaveq (bad) add or stc pushfq and test pmulhw std and adc (bad) movsb addl (bad) mov jnp fisttpl and (bad) mov rcl and jmpq xor rex.RX rex.W cmc movabs sbb mov test int3 and lea stc rex.RB retq (bad) xorq jmpq mov xor jno std mov out mov mov rex.X jae sbb mov xor fs retq mov rex.W out jb (bad) cmp out or shrl (bad) mov add (bad) add mov (bad) iret sbb movabs (bad) sbb addr32 lea divb imul push (bad) and repz pushfq movsl (bad) (bad) adc (bad) jmpq rex.WRXB movabs push rex.XB (bad) (bad) rex.WR pop cmp mov sub stos clc movabs cmpsl test int3 icebp (bad) or mov in pushfq movabs mov xor xchg rex.WX jae cmpl adc (bad) sbb and add (bad) (bad) jmp (bad) out xchg (bad) rex.RX iret lea (bad) std rex.W ss sbb pop movabs (bad) or sub mov mov int3 and out leaveq sbb push (bad) movsb xlat (bad) (bad) rex.B rex.RB int3 mov hlt sbb jne icebp (bad) rolb nop (bad) add out sub and fisttpll (bad) in and out lods push push mov rex.WB movabs nop xor xlat (bad) lcall fsubr sub sbb xchg icebp std clc (bad) negb (bad) iret push flds push xchg jp and icebp outsb (bad) rex.WB or mov (bad) fnstsw (bad) fistp rex.RXB push add pop or scas retq (bad) hlt cld cltd iret pop rex.W retq sbb rex.X andl add clc xor insb cmpsb fdivrs mov xchg int sub push rex.R lret fsts sahf (bad) cltd hlt icebp mov mov pop movslq adc adc cmp xchg xor xlat adcl rex.X push push and loop pop mov (bad) fwait mov sbb or (bad) (bad) (bad) mov lods iret stc cmp pextrw and push callq movsb jns mov fldenv subl rex.WB sbb (bad) sbb hlt int3 rorl or adcl or rex mov xchg mov xor mov and (bad) pop and in and xor rex.RXB (bad) cltd cmp pop lret (bad) fnop int3 pop loope mov (bad) (bad) mov and xorl jnp and xorl leaveq (bad) fldt jrcxz imul iret ja (bad) sub (bad) test (bad) stc pop movsl gs push es sbb popfq loope rex.WRB (bad) (bad) sbb jmpq pushfq hlt cmc mov sbb jle sbb mov jnp pop add notb hlt sbb pop ficoml add retq pop enterq add sub fisubrl gs movslq cmp xor push and xlat orl jne (bad) (bad) (bad) sub jl fwait mov (bad) or movsl rex (bad) jrcxz cs in (bad) fwait imul lret cmpsl xchg enterq cmp or (bad) out loope (bad) js push div imul (bad) testb fcoms (bad) test (bad) and movabs (bad) retq (bad) rex.WRX fucomip ficomp sbb movabs test xchg mov adc jne (bad) cmpsl and rex.B fsubr xlat (bad) mov add jmpq enterq stc sarb xor xor pop mov push (bad) in jbe fnstenv push nop mov pushq (bad) lret cmc popq mov insl sub in (bad) mov jns loope mov lock xchg cmp movslq pop hlt lea jl stos (bad) lahf movslq or in movabs xchg int lahf lret adc adc mov sub movaps sbb (bad) push mov (bad) movsl sub hlt cmp and push (bad) test mov bnd xchg gs (bad) (bad) pop pop pop movsb lret sbb add cld hlt jnp (bad) add pop xchg or cltd rex.WRB rex.WXB sti fadds add xorl cli repz push (bad) (bad) xchg cmc fs add lahf outsl rex.WRXB sub cmp lret add pop enterq jae push ror rex.XB rex.WRX sbb add jmpq mov and add and mov gs (bad) cmpsb adc shrb (bad) sub or andl sub orl iret movl xor lock or rex jmpq imul or pop iret mov (bad) in rex.WXB (bad) push clc jrcxz (bad) or int push mov (bad) movsl std rex.WRXB rex.WRB rex.WXB lahf (bad) test sub mov xchg test mov sub jbe (bad) sub (bad) (bad) int jmp pop shrl sub mov pop fst (bad) out mov jrcxz (bad) mov movabs fisubl adc adc imul or test and push or jb (bad) fdivp mov rex.WRB mov test (bad) repnz hlt cld icebp cs mov loope fild cmc (bad) mov in mov and mov repnz cmp xor (bad) int rex.RB lea mov xchg scas jle jae shl test fistl movsb in fwait movslq pop int3 rex.WB sti mov test xchg shl (bad) mov xchg pop lret loope outsb callq mov rex.XB fsubr int3 callq add mov stc lods sbb movabs (bad) or adc imul xchg hlt movslq (bad) (bad) outsb mov (bad) test lret pop sti (bad) test push mov xchg jno rex.XB adc shrl repz sub pop sub jo loope lea jl repnz in pop sub jl sub fwait cltd (bad) (bad) movabs pop and cs movsb repz test (bad) (bad) adc xchg xchg ficom jne movabs movabs pop hlt in (bad) pop rex gs sub div mov out rex.W jmpq enterq cmpsb (bad) (bad) sub (bad) je and cmp movabs in cmc out std fwait adc hlt data16 cli adc mov pop push mov mov test push cltd mov jrcxz fnstsw rolb push movslq mov push (bad) xor mov movabs rex.WXB push push jge loopne (bad) pop (bad) mov sub stc orl sub cmpsl lock jg test add adc rex.XB xchg add js rex.W (bad) rex.WX push (bad) jge pop addr32 mov or rex.XB or icebp stos cltd sbb jl pushq repnz (bad) mov iret fild push jns rex.RXB rex.WRB cli fcmovne icebp pop rex.WB xchg retq xor lock retq mov sub jae rex.X shll xchg (bad) jno bnd pop movabs (bad) insb movslq push movabs (bad) mov and loopne mov movabs icebp hlt rex.WXB xor imul (bad) je push jb mov negb (bad) pop add jle leaveq insb (bad) (bad) mov rorl and int3 mov jns xchg scas callq (bad) cli push push mov rex.RB mov cmpsb pop out fucomi xchg jrcxz or fwait adc mull adc std adc jrcxz movabs loopne mov addr32 rclb outsb (bad) rex.WRB jmpq adcl push (bad) adc xor jne rex.B (bad) es iret xor repnz (bad) rcrb cmc movsl rex.WRB ss repz jbe lret loope lods sbb rex.RB pushq rex.WXB cmc cmpsl xor pushq test sbb scas adc and movabs fsubp lahf push (bad) (bad) mov mov jmpq rex.R gs push sub rex.WR ja (bad) xchg nop rex.WR add sbb push sbb (bad) movabs push or sub shrl jrcxz mov movslq mov loope insl retq leaveq retq add callq cmp xchg cmpsl imulb cmp (bad) outsb rex.XB js int3 hlt xchg (bad) out callq gs xor jae mov rex.WRX jle sbb (bad) rex.RB cmc rex.XB fldt xchg (bad) xor loop hlt push movabs fdivrp std and mov adc rex.WRB adc sub iret movaps and jb scas rex.RB insb xchg rex.RB push stc shrl add pop cmc sub out rex.X xchg mov int cmp sahf rex.WB mov sti in int3 test xor inc (bad) xchg mov cmp fisubl (bad) mov xchg (bad) retq fwait movslq imulb mov sub rex.WRB jns rex.WRB push js or callw mov icebp outsb xchg test repz (bad) or jae fistp adc rcrl movabs (bad) (bad) xor (bad) rex.WB lret add (bad) out std jne movabs (bad) mov xor (bad) (bad) xchg cmp test test callq mov and repnz std std and and jl cli rex.WB cs lods and pop out popfq rex.WR ss mov lahf (bad) cmpsl xchg lret mov out pop xchg stos test movabs xchg std rex.XB rex.WXB (bad) pop pop mov in adc stc push (bad) movsb lea rex.WB cs rex.WXB jrcxz callq test lret retq loop xor mov popfq outsl mov je in mov sub cmp cwtl retq (bad) rex.RXB or je (bad) cld mulb xor mov std or (bad) sti rex.W hlt adc subl js or add jns movsl mov jmp sbb mov or xchg imul iret in add mov xor (bad) pop mov (bad) in callq lods retq bswap or adc fsubrs test mov fcmove and clc mov sub movabs mov or sbb out sbb lods mov xlat sbb enterq xchg jmp std mov cli movslq clc cli outsb in rex.RB jrcxz,pn outsl test xchg pop jb mov mov xchg rex.WB xchg fwait mov popfq pause loope mov sub xchg (bad) out xor sub add jo sbb notb cmp (bad) or movabs push xor cmp add or xor cmc adc lods addl icebp test add jmpq js sahf rolb jbe jl in retq sub lods enterq callq adc icebp (bad) in sbb lret in sbb stos or cs ja add pop out pushfq movsb mov jl retq mov and insl cmc rex.WB jae mov out cmp (bad) roll mul or push mov shr (bad) iret push stos mov pop (bad) rep rex.WRX add mov xor pop orl jb mov jge rex.B (bad) mov adc (bad) movabs clc mov jp rex.RXB xor sbb (bad) lea (bad) mov rclb xorb rex.WXB (bad) outsl pushfq or repz (bad) sarb mov leaveq gs enterq sub xchg push test rex.RX loope (bad) mov adc shrl (bad) pop decl cmp (bad) retq retq nop mov jns cmpsb add (bad) enterq insb (bad) push (bad) (bad) hlt clc (bad) sub gs jnp xchg (bad) ds hlt out sbb mov enterq cltd lahf jno divb adc leaveq mov repz cmc sbb lea (bad) fnstcw and jae add xchg cmp (bad) and rorl sahf rex.WB (bad) adc out (bad) cltd and rex.X xchg rcl insb mov ljmp cwtl leaveq mov pop loope scas add (bad) shll add jns icebp mov cmp (bad) mov xchg pop mov loop scas pop and imul icebp insb (bad) cmc sbb test lahf in mul je or cmp add sub loop cmp andb mov fs xchg xchg jrcxz sub lea pop shrl xchg (bad) sbb jl es std add adc mov (bad) mov sub rex.B ss movabs or and mov adc in xchg mov test in (bad) gs sub leaveq mov (bad) xchg and or mov sub ss cmp (bad) (bad) mov movswl movabs sbb out out shrb repz jmpq xchg and cld clc push sub jrcxz js add jno movabs je adc in mov mov sbb mov lods rex.XB cld (bad) adc test mov push adc mov fld cmp hlt insb (bad) cmp (bad) mov push (bad) rex.WRX fcomip lods (bad) sti test mov jb mov clc cwtl pop rex.WRXB rex.WB decl jno jb cld xchg xchg rex.X sub jl sbb (bad) jns sub retq imul retq lahf int3 out rex.WR cs addr32 (bad) pushq adc int rex.RB (bad) cmc jmp cmp mov add pop or jne repnz jns mov adc (bad) jrcxz int3 rex.WX sub (bad) xchg or pop cs cmc mov cmp movsb scas add push jno rex.WRB movsl int3 xorb mov outsl xchg cli (bad) mov repz (bad) retq loope lock imul rex.WRB js (bad) clc adc rex.WB repnz and jb loope (bad) repnz xor or cmp or stc mov sbb (bad) cmp fldenv icebp movb hlt push jp js jnp test (bad) cmp shlb retq jge and je movsl repnz test mov icebp lods or divb rex.XB clc or jp (bad) rcll rex.WRXB clc (bad) callq or push mov repz add stos loope addr32 add pop add sub outsl jns mov mov jrcxz out xor and cwtl or movabs stos in sub shll rclb rex xor add stc insl fimull js sbb sbb mov sbb pop xchg mov fcomi fdivr mov and lcall test pop lock movabs mov test sub out rex.WRX jo movb stc (bad) sub xchg mov in jmpq xchg cltd or movabs mov fcmove or mov mov (bad) pop movabs jle addl mov mov repz (bad) xchg int3 insl movabs in callq push add jmp cld jne mov (bad) cmp or and movsb sub sub stos (bad) insl jo mov jno and sub mull jno int in (bad) cmp fdivp movabs cld lock rex.XB xor movsb cmp je xchg test (bad) andl xor xchg addl or pop jno mov in mov mov (bad) mov xchg retq sbb rex.WR rolb cmpsb shlb pushfq divl loopne (bad) sub rex.X ss pop (bad) test js rex.W rex.WRX clc (bad) adc idiv test imul (bad) test rex.B or hlt (bad) push sbb pushfq jmp add sub or addr32 jle add (bad) fdivl movabs lret movabs add sub cmpsl cs rex.W jmpq mov ja or cmp xchg loope mov (bad) or insl ss mov xchg repz adc js rex.WRXB ja add rex.WR cmp xor rex.WXB repz in xchg rex.RXB rex.W out loopne xor rex.WR imul sahf subl retq pop sti or mov cmpsb test mov jno sub adc cltd pop adc xchg imul icebp (bad) outsl jrcxz xor xor data16 lret (bad) (bad) push mov sbb lock enterq or sbb leaveq and rex.WRX cmp mov (bad) fstps (bad) hlt add pop (bad) (bad) pop test insb (bad) pop rex.W fwait pop rex.WXB (bad) (bad) (bad) loope lods mov fisubr rex.XB jns movsl pushq mov rex.X rorl cmp mov mov test rex.WX rex rex.W ds and xchg rex.X test ds imul (bad) sbb addl adc test adc rex.WB jmpq adc xor fldcw roll cmpsb fmull sti callq pop test movb xchg xor shrl or pop and mov rex.XB and (bad) icebp mov icebp pop xor or ficomp (bad) fwait (bad) adc nop (bad) leaveq cli cs pop sub test rcll shrl sahf or sub outsb adc push leaveq jmpq (bad) std fwait imul cmp or popfq fimull rex.WXB xor xchg sub mov in sarb jge nop (bad) sti add shl retq jo (bad) cld add push lods push test rex.WB pop cmp or lret shll in stos (bad) sub pushq je clc in xchg insb pushq ss lret cltd add rex.B (bad) outsl mov sub mov add rex.X icebp sub xchg fs test retq xchg cmp clc mov cld (bad) rex.W lret rex.X cld sub and lock xchg rcrl (bad) icebp jb int out xor adc retq sahf pushq add enterq (bad) cs imul (bad) jmp cld mov pop cs mov subl (bad) mov lahf rorl cmp xor sbb (bad) repz ss mov fimul sub scas sarl int3 sub sbbl mov js adc mov xor rex.WRB rex lock js pop lret lret (bad) pop movabs (bad) mov xor fstl or insl repnz scas popfq mov mov sti rex.WRX nop add rex.WX rex.WRB rex.WX add (bad) mov xchg mov pop xchg in test cmc cmpsb sub int mov movsl lea lods sub (bad) leaveq add mov sti divb jrcxz (bad) fs jle mov repnz sub jge movsl lret mov popfq xor (bad) hlt retq retq cltd sbb out xchg (bad) lret cmp pop cmp adc (bad) neg cld jnp clc insb and xchg rex.B loopne pop je lea fcomip sbb rcr incb rex.RX sbb mov iret movsb and mov std in mov (bad) xchg popfq (bad) fadd xor xchg mov mov movsl loop (bad) push imulb mov test icebp loope js jp rex.WR pop ds pushq gs rex fwait sbb (bad) rex.WR rcrb jp xchg int3 rex.W jrcxz rex.R sti fwait test testl rex.RXB callq add add xor outsb rex.RX cs jno mov rex.WRX (bad) xor loopne push movabs sub test (bad) (bad) xchg sub insb fistp mov adc repz (bad) js ss cli movsl and push in jbe cmc icebp outsl sahf mov jno mov std rcll adc in outsb enterq sub rex.RX xor jg cmpsb and in cmp test callq (bad) (bad) gs rex.WRX sub in xchg pushq xchg cld xchg lret xor lea adc movl mov fs jmp callq fmuls push ja (bad) (bad) int3 sub or pop (bad) sub mov test xchg cmp cmp div movsl mov sub repz jns sub mov (bad) test mov (bad) test test mov lret mov iret cmc leaveq jg gs (bad) (bad) mov fsubl or xchg mov sarb cmp scas insl enterq (bad) (bad) callq cmp jnp mov mov shrb mov scas (bad) add addl rex.WB ljmp test rex.WRB pop icebp cmp repz idivl rex.XB fs pop mov stc retq leaveq sahf push rex.WRX push (bad) xchg movsl rex.B sbb rex.W rex.WR or jge mov push jle or in sti lea jge std addr32 mov data16 repz mov xchg outsb cmp xor and sarb sbb and cli jrcxz loop (bad) cmpsl cmpsl xchg hlt fcmove (bad) retq (bad) icebp adc xchg (bad) nop or jae movabs mov pop out fcoms pop ja enterq mov sub cltd jns (bad) (bad) rol rcrl out rex.RX sbb cs jp test sub nop cmp lahf push mov rex.RX rorb adc mov push lret enterq jg (bad) rex.WX sbb in add or (bad) (bad) xbeginq mov rex.W (bad) jbe (bad) (bad) and repz movsb lods std (bad) adc cs notl out jmp (bad) adc rex.RXB loope movsl imul and insl rex.WB rex.R sub rorb or xor in loope and and ja rol ds movabs sbb gs pushq (bad) adc adc iret loopne iret int3 pop cmp andl xchg xor ds sbbb icebp xchg mov notb xlat mov rex.RB lock repz push mov xchg fmuls shrb jge in jp bnd testb or test mov (bad) sub cmpsl jae int pop leaveq mov (bad) xchg rex.W cmp mov push int3 jns mov rex.RX xlat cmp and ss (bad) hlt test retq (bad) (bad) mov sbb clc rex.RB adc fistp mov add in mov cmp and xor add push rex.R (bad) adc movabs pop repnz mov (bad) (bad) sbb in rex.WR je jrcxz int3 jmp (bad) out jrcxz xlat (bad) mov mov cmpsb fstpt (bad) and (bad) mov je pop (bad) xor or sti mov movsl xchg jmp pop frstor cwtl stos in out sbb hlt xor push rol cld int3 jo cmp imul jge retq push in vpsllq iret (bad) repz xchg jp mov mov js and jae in mov callq (bad) mov fwait packssdw lahf or sbb rex.RB shrl mov icebp icebp (bad) movq (bad) in xchg cmp cs pop test xchg in in movabs rex.R mov stos push fsubrs sub pop leaveq lea pushq stc or nop rex.B (bad) mov pushfq movabs (bad) push negb (bad) movsl mov test or sub push mov rex retq rex.B outsl (bad) mov add mov xchg rex.WB and out mov sub ds loop sub or (bad) fstpt sub jmpq scas mov in (bad) rolb (bad) add (bad) repnz (bad) lret mov (bad) int iret fsubl int (bad) rex.WRX lods rex.WRXB rex.R (bad) pushq lock cmc mov mov xor icebp mov mov adc addr32 iret loope mov je out or (bad) cld pop mov leaveq repnz or sti enterq or mov mov push push rex.WXB cmp rex.WRB mov jb xchg xchg hlt jbe cld fwait (bad) movabs push movabs (bad) vpsraw cmp pop imul mov jle outsb rex mov and rcr cmpsb leaveq pop imul jbe rorl ficompl jmp add (bad) jrcxz test xorps mov rex.WRB repz (bad) rcl (bad) (bad) rex.WB mov (bad) xor lea fwait outsb notl outsl push xchg in sbb jl adcb and pop rcll movsl mov (bad) lock push mov movsl cltd add int mov xchg test jbe (bad) mov cld stos adc cli hlt adc clc add repnz adc (bad) pop mov imul hlt (bad) rex.XB (bad) loope cmp rex.WR rex.RX pop in (bad) not mov add (bad) repz xchg movabs ss or cmp cli (bad) jp cmpsb clc (bad) mov add xchg mov std rex.W (bad) mov xchg (bad) (bad) (bad) out jno lahf or and flds or clc xchg jmpq mov sbb adc outsb push cmp adcl add xor test (bad) rex.W cld lret xchg (bad) pop rex.WXB icebp test lock push std hlt jns xor rex.RX rex.WR pop cld imulb (bad) jrcxz leaveq movabs mov adc pop in leaveq xchg rex.WB sbb pushq mov cltd lahf outsb (bad) rex.WXB xor mov in mov leaveq sbb xchg adc jmpq xchg fstp (bad) sub or (bad) jmpq push xchg push adc pop stc vcvttss2si test outsb cmp cld (bad) movabs callq in jmpq (bad) jrcxz pop push jle mov xor push (bad) jbe sub mov addl mov mov push (bad) sbb repz rex.WB xchg (bad) (bad) cmpsl loope js sbb (bad) cmp xchg xchg loop sbb add cmp popfq rex.X outsl pop jrcxz fwait add sti (bad) sub rex.RX add (bad) insl scas (bad) movabs test push negl xchg and and push movsb and pop (bad) pop mov cmp push retq adc (bad) jl fxch push stc (bad) test in jge in add mov mov addr32 lret out cli sub adc int scas xor lret add (bad) retq or mov mov mov mov loope (bad) (bad) pushq push xor sbb rex.WXB rex.WRB (bad) retq stos retq int3 (bad) mov repz mov stc mov adc int3 adc testl fs jne and jo,pt retq movabs sub and fidiv xor adc cmpsl pushfq push mov faddl (bad) or stc out xchg push addl adc sub roll sti cs (bad) xor lret callq icebp imul stc sub push cmc rex.XB jnp rorl cmp sbb (bad) int3 int sti pop iret leaveq xchg xlat pushfq movsl pop lock mov add xor cmp mov mov test add xor sahf xchg pop cmp sbbb rex.RX fbstp xchg loopne adc imul vmovaps and jb pop (bad) retq xor jnp div (bad) add mov pop movsl imull jg in rex.WXB fild (bad) rex.WRXB mov addr32 mov (bad) cmp cmp jb sbb rex.XB int enterw imul jrcxz in int3 xchg cld pop out fwait mov (bad) jb sub rex.RB fwait mov repz int3 pop pop pop and sahf cmpsb or mov sbb icebp nop lods cmp mov insl callq (bad) push jnp (bad) jmpq sub movabs sub push stc je loope jbe cmp rex.RX repnz push or (bad) xchg stc xchg cmpsb sub rex.WRX fadd pop xchg pop sti and sbb cltd retq and int3 (bad) xor (bad) or rex.R xor mov fiadd cmp fstpt cwtd jo mov std int3 rex.B (bad) icebp test rex.WB ss adc rex.XB xchg rex.WR loopne (bad) fucomi fstl cmpsb sbb xchg sbb jmp stos fnstsw (bad) pop imul pop hlt push rcrl sbb rcl push scas fwait leaveq test cmpsb enterq fildll (bad) or test in rex.X retq mov pop xlat std xor jmp cld add pop mov (bad) cmp int3 movabs rex.RX rex.XB rex.XB movabs rex.WB add leaveq sbb jmpq or or adc add lret rex.WRX (bad) pop movabs mov cs loope jae cmpl loop nop (bad) movabs cmp push and hlt jp xchg out rex.WB mov (bad) int3 mov fidiv xchg loop stc adc xchg int xor mov sub and add adcl outsl xchg and mov mov gs leaveq adc lods xor icebp rex.WRB mov pop int3 cmpl lret pop mov enterq cmpsl rex.WRX rex.WX movabs jp imul test (bad) callq cmpsl lahf sub movabs icebp leaveq sbb mov mov mov rex.WB push fs (bad) repz icebp xchg xchg or adc js sti out jle int3 (bad) jno mov adc jae mov out (bad) data16 loope repnz sbb or (bad) mov pushfq xchg leaveq xchg mov or rex.WRB rex.WB clc rex.B movsl xchg pop mov add (bad) xchg mov mov jno add cmpsb repz sti out jns movsb lahf rex.RB sub out repnz jne add pop sub stos mov mov test movsb mov loop mov rex (bad) rex.WRX shll out sub and sti xor or fimull xchg rex.WRXB adc sbb ja in (bad) (bad) sbb test movslq mov andl negb lret rex.XB rex.RB (bad) sbb rex.R divb mov mov mov mov fmuls mov xor and popq jl callq mov (bad) mov movabs (bad) imul sub (bad) (bad) rorb jbe enterq rex.WRB out (bad) mov scas lret xchg mov callq cmp es jnp xor (bad) mov xchg rex.B (bad) (bad) mov flds sbb sahf xor mov out fdivrl rex.W pop (bad) in test jne imul add test ja xchg mov rex.RB sahf and rex.RXB jmp addr32 mov (bad) cmpsl sub jb imul movsb cmc pop repz stos iret (bad) xor sbbl push rex.WRXB jrcxz rex movabs stos adc xchg rex.X movabs rex.WB out mov mov xchg jb stc (bad) rex.WRX or mov sbb or loope rex.RX add adc (bad) pushq jbe push nop adc out cld rex.WB mov movabs lods pop sub out popq callq mov pop jae clc rex.B rol movabs and rex.RXB addr32 test ja movslq cltd xchg (bad) mov jge stc (bad) push or pop sbb (bad) rex.X (bad) jno fs shl and leaveq xor mov repz add mov popfq lock rex.WR shl enterq pop scas and xor rex.WR mov and (bad) imul jns (bad) movabs enterq mov jne mov cli or fsts icebp and add xchg pop movslq andl (bad) fcoms lahf in setl push fnstenv decb callq push xor rex.B (bad) shl leaveq pushq push shrb out mov jae or mov or mov repz xchg retq mov int3 repz test callq retq test in rex.XB out xchg (bad) cld fs shrl mov push retq cmpsl jp (bad) outsl jg xchg (bad) test lock movabs scas sahf (bad) std lods or outsl rex.B pop fs adc cmp out in push sahf (bad) addr32 xor jle nop xchg rcll mov sbb int3 mov xor (bad) or fs test int and jle (bad) imul nop mov (bad) (bad) mov jnp jno sub xor fcmovnu test lods mov lock (bad) xor and lret (bad) xor xor loopne adc leaveq adc pop mov adcl or push (bad) mov rol xor mov pop roll in callq and jle sbb push int fisubrl cmpsl add mov insl divb sbb (bad) out rex.WB rex.R cmp hlt or and xor mov mov (bad) iret or cmp js fnstenv (bad) ficoml outsb andl cld (bad) callq (bad) (bad) adc scas (bad) mov (bad) mov (bad) jno or rex.WR add xchg lret bnd adc pushq (bad) int iret cmpsl test (bad) (bad) fistpl fxch mov (bad) leaveq mov add mov pop mov ds add incb add int3 mov xor mov add jmpq stos retq push popfq mov (bad) cld out sub stos or popfq icebp rex.XB rex.WR (bad) (bad) mov fstpt scas xlat sub push rolb mov (bad) mov mov mov retq rcl add add test loopne out fldl loopne rex.RXB enterq xchg pushfq mov sbb out loope test adc sti mov jmp mov add (bad) add lret movabs xor cli pop nop (bad) mov retq add je lahf (bad) mov lods cmp mov add (bad) fnstenv cmc xor es (bad) int push or push or movabs sub jno enterq or inc loope (bad) in retq rex.WRB enterq out retq xchg enterq mov (bad) imul (bad) and pop or mov mov adc (bad) rex.X stos jrcxz stc pop mov jne repz jp movsl pop jrcxz pop jp (bad) pushq (bad) mov (bad) retq stos rex.B nop (bad) enterq orl xor enterq leaveq idivb sti retq movabs cmp (bad) mov cmpsl xor add loop sbb cmp xchg (bad) ds or int3 lock rex.W rex.WR xchg fiaddl in out mov rex.R rex.WRX repz sahf (bad) and cs movabs mov adc test (bad) cmc add cmc xchg movabs xchg rex.WB rex.WXB in (bad) lret outsb out adc pop push shll int scas (bad) cld (bad) mull callq je loope retq xor (bad) (bad) xchg (bad) stc enterq push pop cli adc popfq je rex.R repnz add fdiv pop mov adc pop rex.RB xchg rex.WX jno push retq jrcxz jbe fildl jl ja (bad) rex.WXB fldt lret cmc mov leaveq outsl rex.WR rex.X (bad) movslq (bad) sub xchg jno or in rex.WXB repz movsl xchg leaveq lahf movsl clc leaveq andl test loope mov or repz mov cmp addl and and mov movsb std (bad) pop enterq clc cld callq (bad) insb enterq lods ds (bad) jne mov (bad) stc or std adc out and jno jmpq jrcxz test mov mov cmp (bad) add rex.WR mov cmp mov sub xchg movabs lods or (bad) test js push jrcxz fnstenv mov jl (bad) out (bad) mov cmpl or addr32 sbb test xor test mov rex.R stc jmpq leaveq xor push int3 rex.RB icebp sub mov popq xchg xor adc jnp sub jnp (bad) int (bad) sbb lock rex.XB rex.WR lret (bad) pop mov (bad) xor fisub rex.B (bad) retq mov int hlt out callq ja (bad) mov rex.RX mov in mov and (bad) mov test rex.XB rex.B pop (bad) rex.W rex.RXB rex.B (bad) sub shrb pop (bad) (bad) mov jo (bad) (bad) sbb xchg cld (bad) divb nop imul cmc mov insl xchg (bad) repz (bad) repz and or rcr in jnp out sbb (bad) jmpq xor mov mov imul test (bad) sbb lahf stc xchg leaveq stc std std rex.WRXB vpslld add rex.XB rex.X rex.WB xor retq retq mov stc pop js mov rex jmpq sub rex.RX test push pop (bad) sahf mov pop (bad) sbb cmp idivl (bad) mov movsl movabs mov and and (bad) (bad) push mov retq mov rex.WR cmc jrcxz and (bad) icebp retq sub in lret popfq mov cmc ss lret (bad) enterq jl icebp loopne retq and leaveq rdtsc (bad) pause and (bad) mov cli test outsb pop movabs out xor je jnp jmp movabs fisubl test adc sub (bad) imul rclb in (bad) xchg push test mov int xchg mov movb pushq int3 xor fwait rex.B sbb (bad) mov xor cmc std rex.R rex.X retq in xor sbb sbb imul (bad) int3 popfq rex.XB rex.R loope std or sub add int3 bnd xchg out sub orl xchg jnp rex.RB jge push mov (bad) pop and mov jmp jmp (bad) push in insl jns push rex.RB test jbe jmpq hlt (bad) (bad) fs retq cmc mov or repz imul jno in movabs cltd notb movabs pop xor loope adc rex.WR mov mov callq mov stc mov xchg movslq push mov fdivrl loope xor mov loope and pushq mov (bad) (bad) pop std (bad) stos lods cmpsb sbb rcrl lret cmp and loop lahf mov adc sbb sub sti pushfq subl push (bad) test (bad) mov stc pop sbb cmp rex.RXB ds (bad) cmc push xlat callq retq jrcxz,pn fistpl fisttpl (bad) int test or push mov (bad) mov xor lock or sahf sbb jl cmp rex.RX rcrb retq rex loope mov mov sbb rex.WRX push adc add out jnp rorl cmc retq ss push mov rex.RXB addr32 push adc cmp out xor (bad) rex.WX retq xor sub mov fildll imul mov test out nop icebp in out lea icebp outsl rcl lea movslq adc subl iret movabs insl adc sub pop push pop rex.WR and insb add fxch pop mov es sbb push or lret rex.XB in movabs (bad) and sub lahf fcoms movabs (bad) (bad) iret (bad) fmulp int3 jmp sub (bad) (bad) mov mov cld cmpsb idiv rex.RX cld cmovne fisubl data16 (bad) fisub xor retq pop shr pop sub std (bad) ficom movabs outsl mov (bad) js icebp in mov rex.WRX int3 xchg lret (bad) pop mov rex.WRXB add vaddpd fisttp adc rex.WXB fsub ja subl out pop mov rex.RXB mov leaveq rex.WRXB mov xchg adc (bad) lret (bad) or mov gs (bad) and sub retq or ss pushq mov test fcoml sub movabs pop xchg xchg lea rex.WXB ja test rex.RX and imul clc vpmullw fwait cmpsl icebp adc clc roll adc xlat (bad) mov (bad) lock mov mov sub xor jrcxz sub mov (bad) ss movsl jne and sbb cmpl mov rex.WR rex.RX rcrb sub or rex.R push mov fwait cmpl push mov add cmpsb (bad) pop mov rorl ja mov jno andl mov pop (bad) shrb jmp retq jl ja jrcxz sub repnz enterq xchg add jmp mov iret popfq jl insl lret rex.WRX (bad) mov (bad) clc int3 andl xor jns gs rex.WB stos repz cmp ss cltd int push (bad) in mov push mov testb sahf cmpsb or or cli (bad) out mov movabs (bad) movsl and (bad) fnsave repz insl in pushfq (bad) rorb gs (bad) je loopne (bad) push jmp retq (bad) xor cmp cmpsl jno xchg lret imul mov add and xor outsb out pushq data16 adc or xlat rex.WRB (bad) add sbb rex.WR (bad) and std cmp test cmp xor movabs mov enterq adc fcompl adc mov xchg jo mov rex.WRX rex.B pushq out iret jl jnp mov callq retq rex.R pop mov cli adc sahf and sub out fcompl rex.WRX pop (bad) and add fldt xchg (bad) insb jrcxz rex.RX int3 (bad) add movabs lock rex.RXB fiadd and lahf jne jmpq retq mov xchg (bad) mov loope (bad) (bad) pop (bad) sahf shll or lea rex.RXB sahf add orl cli mov out mov or loope rcrb loope (bad) bswap xchg fcmovu ror fistl repnz test fildl and (bad) rex.WB je sub out add fistpll cmp fdivr lods iret or hlt or rex.WB movabs rex.WRB fcoms or xor cmc cli lock sbb nop movabs mov fistpl mov rex.XB pop or and mov fnsave (bad) iret jl jnp lock cmp in test push outsb out mov stos stos sub rex.WR in lret lods pop sub js out pop repz jnp mov or jmp (bad) (bad) callq xor sbb fstps (bad) rex.WR sub and negl jns sub xlat callq movabs xchg or nop rex.RB es cld mov xchg cmpsb xor xchg mov rex.WXB repnz push enterq mov rex.WRXB scas sub pushfq xchg (bad) cmp lahf mov sbb rex.WRX rex.WX fs repz nop or movabs loopne (bad) mov loopne mov repnz cmp jne int fsubs iret pushfq (bad) test pop (bad) pushfq loopne (bad) or add cmc adc rex.WRX mul int jbe callq out lret leaveq fsubrp gs sbb test std rex.R retq lods adc fucomi test idiv fisttpll jge xor rex.RX in (bad) rex.WR mov rex.WR cmp cmp rex.X retq and lods lret add lret mov xchg (bad) rex.WRB mov in out xor xchg xchg stc fsubp retq pushq fldl mov lods out (bad) fwait pop movsb sbb rex.WB add test callq rex.WRX addr32 test fcmovu jns (bad) jbe repnz clc cmp je mov rex.WRB cltd in rex.WRX ja (bad) or pop lock rex.WXB mov jmpq movsb cld loopne rex.WB rex.RB test (bad) cmpl mov jmp jb mov fnstcw adc mov mov (bad) retq leaveq (bad) cmp scas (bad) mov adc (bad) sub push mov xor fidivrl xchg scas test js jg pop cmp out add (bad) cwtl lods stos and jg out out retq in (bad) cmpsb (bad) fcmovnu jl mov xor mov insb popfq lea (bad) push rex.WXB sub test push jge xor and ftst rex.XB sbb cmc movabs push rcll icebp (bad) jbe jae and jge femms icebp xchg enterq pushq mov in idivl rorb mov imul (bad) sti cwtl loope pop and xchg push cltd movsl imul scas xor push pop (bad) sub rex.RB xor xchg sbb add mov add ffree pushfq pop std mov pop rex.WRX repnz movsl test sub sbb mov addr32 stc leaveq (bad) insb cli test or or push rex.WRB rex.X sub (bad) es and cmpsl rex.RXB push mov (bad) (bad) (bad) cwtl callq xor or xor movl icebp sub and test or (bad) (bad) sahf fstps cli cld (bad) std (bad) enterq (bad) jl loope (bad) fs in in adc (bad) in leaveq in rex.X fs or callq stos cmp fiadd push outsl jne js adc rex.WRX xor cmp xlat add or sub retq pop jge je mov subl (bad) cmp cs rex.R lret add cmpsl rex.WXB mov and loopne cmc cmp adc shrb loope repz int3 pop push rex.X fwait movabs and movsl sub enterq (bad) out jnp orb pop retq xchg test cli (bad) jae pop fs rex.W mov xor or decb testb xchg stc sbb je loope hlt retq insl cmp mov and pop cmp xchg int3 jmp (bad) in (bad) ds test and xor cli negl cmp movabs xchg xlat rex.WRX sbb callq mov adc xchg rclb sbb retq jrcxz mov jne pushfq cld jbe loop sbb enterq (bad) vpaddw rex.WB sub jl sbbb rex.WRXB callq add (bad) cmp scas mov sbb lods pop hlt out lods lretw pop (bad) jno jmp test mov popfq test or cmp (bad) rcrb (bad) sbbl fistl jge imul pushq jp add jo (bad) out movabs jp movabs (bad) or mov lods mov loopne stc mov in mov pop sti rex.WRX in (bad) adc rex.B fstl fisttpll or (bad) fisubl (bad) repnz or jl push scas es sub (bad) and mov adc movabs cmpsl sub mov mov rex.WRB (bad) push (bad) fist test xor int3 rex.WRX rex.WR (bad) xchg jle cmpsb (bad) movabs xlat imul std xchg stos hlt ds rex.WRB iret or adc rolb rex.R rex.W pop sti test cwtl xchg jno add (bad) (bad) mov rex.WR pushq nop sahf (bad) pop mov rex.WR movabs imul in mov in push gs cmc mov add or insl retq stos sahf loope sub test addb (bad) movabs jbe (bad) test insl ja test fnstcw stc rol faddl (bad) (bad) (bad) fisubl cmc push int notb scas (bad) movl shrb imul leaveq pop stos cmpsb fwait adc in ljmp callq pop stos sbbb andl (bad) (bad) sub cmc (bad) lea fild mov xchg in sti retq testl test leaveq or cmpl mov rex.WR (bad) xchg (bad) test movabs rex.WB cmpl test out rorb sbb sti add (bad) push cmc and rex.X (bad) callq (bad) cwtl xor loope push mov ss fs in adc and (bad) addl loopne test (bad) sub nop xor mov adc mov and leaveq (bad) fistp movslq test in cs xor in mov insb (bad) sub cmp mov pop (bad) callq mov cltd mov movabs and (bad) scas rex.B lock stc and (bad) push cltd leaveq xor xchg mov (bad) loope mov sarb (bad) lret js sub (bad) mov cli rex.RB rex.RXB movsl std mov mov or test stos mov and mov imul (bad) cmp rcrl pop cmp int mov rex.WX rex.RB jp add xchg xchg sbb jrcxz int3 movsl cmpsl xchg movslq mov lret mov rex.WRXB repnz (bad) jrcxz (bad) mov jns rex.RX push xchg push rclb (bad) mov jno imul cltd pop leaveq jo movabs adc test jo jmp (bad) jae mov cmp sub cltd in shr andl (bad) cmc callq mov add hlt repz rex.X movsl out add xor icebp orl int fucomi pushq jnp (bad) xor cli or push test jne repnz xor xchg mov rex.WR mov xchg fiaddl in retq loope je or xchg pushq out (bad) cmp mov and add sbb cmp (bad) adc rex.WX notb mov cmp add rex.RB cmc mov test jns add shrb nop (bad) or mov adc movabs adcl mov jp xchg jle rex.B movabs add addl pop xchg callq movslq mov scas icebp cltd movabs es enterq cmp out stos movabs scas mov (bad) leaveq int3 es xchg pushfq jle (bad) xchg or or jno jno cmpb jns mov in xorb pop js lahf and sub icebp pop jg sub adc psllw add xchg push int push rex.WRX jl cmp pop mov cmc and xchg fldl push icebp nop je pushfq xchg loope xchg nop stos leaveq int3 sub es adc add xor rex.RB adc or or push cmc xor sub mov nop sbb rex.XB cmovge loope testb and cli push fwait sub push in mov rex.X mov callq mov movslq retq and cmp hlt movb ss jmpq jo sbb cs mov pushq xchg sub xchg int3 iret rolb repz scas cmp pop es xchg mov int3 in rex.RXB xorl mov movabs pop test sub cmp fcomps sub (bad) std retq retq rex.RX leaveq retq outsl mov ror scas fisubl sub sti xchg pop imul mul fst rex.WRB nop mov sub lret test rex.RB rex.X (bad) add fnop push pushq popfq shr (bad) stos loope jmp (bad) outsl jno callq mov sahf sbb jmp icebp andl cmpl rex rclb iret add notb pop jns jnp int jle enterq rex.WR js sbb (bad) rex.WRB (bad) sub xchg out out rex.WB negb leaveq sub sub pop xchg icebp (bad) int test xor movabs in xchg rex.RB rex.WRX push in adc xchg retq or add cld in sub cmp mov jg (bad) test enterq (bad) adc xchg hlt cs (bad) sub jrcxz pop sbbb in std iret rex.WXB inc xor (bad) es mov mov sub adc retq rex.WB rex.RB cmp rex.WRX rol (bad) sbb stos stc xor test cld movslq rex.WX rex.RXB movsl rex.X gs (bad) lahf rex.RX xchg (bad) ja mov movabs (bad) pop jb (bad) out adc in (bad) repnz ja repz sbb xchg adc xchg sbb mov retq sub jne mov movabs mov cs or movslq jrcxz cmpl (bad) jmpq data16 pcmpeqw xchg pop jrcxz test int sbb mov hlt (bad) jrcxz jns clc jmpq pop and cmp (bad) (bad) lods xor mov std pop imul cmpsl movabs rcrb in jmp sub ja (bad) cmc pushq xor (bad) fstl stc mov sub rex.RB fwait xor cmp int3 (bad) inc jae int3 jrcxz xor fstps xchg sub or xchg mov rcll xchg sub js mov (bad) fistl nop in imul (bad) std es js repz cmp cmp jno mov (bad) xchg cmpb enterq jmpq pop xor sbb rex.WR rcrl push xchg pushq rcrb mov fisttp rex.XB rex.WB (bad) rex.RXB (bad) retq add lret in loop jno jb or mov and rex.WRXB rex.WB add out fxtract gs pop mov sub clc (bad) callq and fildll add (bad) loopne (bad) popfq (bad) cmc xchg lret xor mov sbb pop stos or jmpq fsubp add mov sbb rex.WXB lret ror movabs repz rex.WX cmpsl jno xor xor sub mov fisubr in (bad) sub rex.XB (bad) (bad) int3 fnstsw xchg rex.RX test jp stc movsl jmp sarl xchg out cmp movabs movabs enterq cmp in mov movslq or imul movabs jne push mov es push std xlat xchg sub and test mov retq scas cmp scas push iret xchg jns (bad) (bad) (bad) popfq cmc cmp fldt ss ds sti or cwtl (bad) (bad) mov jno sahf (bad) in mov sub jl (bad) icebp scas (bad) rex.WR xchg (bad) fisubl fs addr32 idivb jno xchg test fwait add (bad) cs je loopne xchg mov xchg (bad) outsl clc jrcxz jmpq gs (bad) dec xor out xor lret sub (bad) int3 (bad) sub xor iret rex.WR rex.RXB repz lock int pop mov loop fld cs (bad) pop sti cmp cltd movabs adc xchg in je (bad) xor hlt popfq push mov sub (bad) cld (bad) je push mov rex.WRX sub pushq hlt movabs test fildl push int3 sub pop jno mov cs pop leaveq cmp mov pop xchg icebp js lret sub (bad) pushq (bad) rex.W (bad) xor (bad) adc sub test rex.WRX pushfq mov or imul push lock fisubrl pushq lret jno std movabs mov sub mov stos or callq fnsave sti js rex.RX (bad) rex.RXB std (bad) imul (bad) rex.W ds fwait xor (bad) mov cmp out lock (bad) notl cli xlat cld (bad) cwtl pop sub jo pop stos and pop xlat mov rex.RB sbb xchg icebp jo shr add in jae mov (bad) rex.WX cs mov je mov (bad) xchg mov mov mov je and mov (bad) mov xchg std vaddsubps movabs mov (bad) mov cltd (bad) je (bad) mov rex.WRXB cmp (bad) sbb sub in test (bad) mov (bad) imul pop imull cmp retq rex.R jnp icebp sahf insl and movsl movabs rex.RB (bad) rex.WB xchg xor rex.WX in vcomiss or xchg and in and rex.WX rex.WX rex.WRX add test add xor add movabs (bad) js mov fwait mov iret mov retq (bad) (bad) lods ja sub jno (bad) clc xchg rex.WXB rex fs out mov rex.WRX mov cmp jl mov mov repz ja std jmpq add lods mov iret hlt fs cli (bad) cmpsb add push push jns callq fnstsw add pushq pop sbb push xor fsubrp lea cmpsl insl movabs fs repnz outsb clc jrcxz pushfq adc (bad) sbb retq xchg rex.X rex.B sbb adc sub (bad) adc xlat cld jmpq fs mov xchg popfq mov rex.RX push push mov movabs pop (bad) mov sbb icebp cld cmc es rex.RB mov rex.RX adc or jrcxz or (bad) sbb (bad) lret (bad) test adc movabs jb (bad) in push or repz fs or insb xchg pop lea callq imul adc (bad) movabs adc out mov ja loope xchg mov jrcxz (bad) (bad) in (bad) out rex.XB test clc callq xchg outsb (bad) test sub repz pushq and lods (bad) xchg push cmp icebp test mov movabs xchg rex.WRXB (bad) not jp or sahf cs mov mov push push negb and int3 jns pop (bad) adc sub loopne adc xor cmc pop cmpsl (bad) (bad) lods jnp data16 loope xor mov (bad) (bad) and leaveq rex.X fistpl adc cli sub push jne xchg rex.X (bad) adc jns rex.WRXB icebp loope,pt or test rex.XB repz popq callq icebp mov xchg xchg (bad) or rex.X mov cltd rex.RXB rex.WRX sub cltd (bad) jrcxz sub cmp (bad) (bad) in mov movabs js mov je xchg pop sbb clc xchg rex.B jge jl mov flds (bad) push (bad) mov and mov or rex.WRXB rex.WR xor rolb fcmovnb push or jns mov sahf xor lea rex.WR cmp loopne popfq stos outsl movsb out or sbb popfq repnz mov (bad) xchg enterq add je pop orl out test rex.R ja mov mov xchg (bad) iret and sti and mov std mov fs xchg scas mov mov jno in imul push rex.WB shll add sub movb sub cmpsb xorl xchg lock sub sti pop movsl rex.WX (bad) push or (bad) cmp adcb push sbb (bad) loop jo nop scas sahf mov ror rex.WR sub sbb insl movabs (bad) sbb or nop je xchg xchg rex.XB shrl push sbb jo xchg jl int3 test in mov repz cmp mov xchg rex.RXB rex.X (bad) jrcxz mov add push sub pop mov (bad) sbb (bad) mov rex.RXB leaveq (bad) rex.RB loopne jge rex.X js in and sub dec (bad) xchg enterq sarl int rex.B es std (bad) fldl stos out mov or out (bad) (bad) hlt cmp callq iret add mov adc callq int je in mov sub stos cwtl loopne in mov pushq sbb lock retq jo xor xchg pushq rex.WB retq cmc callq fsubrs rorl (bad) rex int rex.RXB pushq nop adc sub mov add xor pushq and mov rex.WX (bad) jrcxz cmpsl scas pop pop xchg repz rclb jg mov movabs gs push sub xchg mov or sbb repz add adc out rex.WRB rex.WXB or or pop loope fistpll stos test movabs js mov out lock sub mulb movabs sbb push cmp xor out (bad) (bad) retq stos js mov add xchg cmp or loopne rex.W (bad) es cmp cmp pop nop and fidivrl xchg and callq and rorl fwait and cmp (bad) adc xor callq test sub sub in pop retq (bad) push add in pop jl jne (bad) jo imul xchg (bad) ja jno mulb int3 jge or in lods popfq cmp outsb jp (bad) incb add cmp and subl repz clc pop clc mov add rex.WRX movabs retq (bad) decb (bad) data16 jg mov lock xor sti insl mov pop mov repz (bad) rex.W (bad) shl scas xlat (bad) and mov cs shr retq mov leaveq (bad) movabs (bad) mov test jne (bad) (bad) jno or lret nop cltd (bad) jns stos (bad) pmaddwd movabs cmp jmpq sbb jne rex.W (bad) cmp fisub lahf out xor rex.W loop sub rex.B hlt pushq sbbl sbb mov movabs xor rex.WB and rex.WB rex.W mov sbb rex.W stc enterq cmp and loope or icebp bnd jmpq lods or cmpsb sbb xor pushq icebp (bad) rex.W jg retq and icebp mov leaveq loope iret sub cmp (bad) (bad) pop lret jae jmpq xchg rex.W sub mov movabs add icebp scas mov push cltd cmpsb movabs enterq idivb xchg xchg movabs flds sbb and rex.RXB xchg and add sub loope cmc lret add (bad) mov (bad) push (bad) lods mov repz mov rex.WR rex.WRX rorl test insl loop xchg (bad) cwtl sbb sbb fcomps (bad) test out sub sarb pop mov (bad) (bad) adc pop movsl (bad) popfq xchg rex.RB rex.W sti rex.RX int3 pop test (bad) rex.WRXB rex.B cs rex.W jnp fdivrs shld xor (bad) imul sub (bad) int (bad) (bad) shrl ja fs (bad) (bad) xor shl (bad) (bad) add and popq int mov cmp pop rcl retq icebp rex.WB retq int add cli rex pop retq add out rex.WXB repnz out adc addr32 out (bad) mul rex.WRX (bad) mov (bad) retq outsb mov movabs stc loop sub jbe jbe imul mov pop xor js in (bad) cmpsb imul retq pushfq mov scas rcrb in enterq jno and add push cmc and and insl callq or or lret in jle pushq mov (bad) rex.RB icebp jae test int3 repz sub or (bad) mov cmp and (bad) (bad) movsl rex.WRB mov loopne add push (bad) or mov push push xchg rex.XB nop (bad) rex.WR rex.WRX ror xchg retq cs movslq rcl mov (bad) adc fildll add addl rex.WB mov outsb callq and or cli sub jrcxz and hlt xchg jo test fwait in fbstp (bad) stc xchg nop rex.R rex.RB xchg jrcxz movabs imul (bad) enterq iret sbb adc subl rex.RB mov cli fisttpl push mov (bad) subl testl icebp xor mov addl icebp xchg rol rex.RB (bad) cld mov rex.RX sub int xchg je js repnz jmpq out repnz pop cltd mov jbe adc jmp (bad) outsb (bad) jns mov nop add cli repnz rex.RB mov (bad) cs sarb (bad) sbb mov (bad) or jle mov xchg cmp rcl repz cwtl lea lock jbe rol (bad) rex.WRB xchg (bad) fimul xchg outsb (bad) (bad) out mov scas cld movb sbbl xor or push jno in jrcxz retq sahf cmp mov clc (bad) je sub (bad) sub jne mov (bad) or out hlt pop rex.WRB rex.W add retq rex cmp adc jle sub lods ss push add in fildl stc cmp jl popfq movabs jno jmpq cltd hlt mov sbb movsl loope xchg add sub leaveq rex.R stc icebp pop sub (bad) icebp mov push jp mov pop mov mov cmp in stos pop je rex.WB (bad) push adc cmpsl adc push callq xor scas scas pop movabs jmpq pop mov leaveq sub adc pop (bad) add (bad) stos movsl js push adc je mov (bad) (bad) retq xor ja mov (bad) and retq mov icebp movabs idivb addr32 jae fisttpl sub jge xor adcl leaveq cmc mov mov rex.W mov test rex.R or in mov imul jmpq (bad) mov mov mov rex.X fwait rex cwtl sub movabs (bad) rex mov (bad) enterq sub pushq xlat test fdecstp (bad) jo (bad) movsb pop and test xchg (bad) mov enterq jmp loopne ja adc lret add ja mov ss mov jl mov rex.WXB rex.RB cwtl or (bad) iret (bad) rex.WRX popfq xchg loope pop xchg repz rex rex.WR cmp fwait adc mov pushfq xor xor cmp and ja (bad) xor mov fstp cltd jg jrcxz (bad) or or xchg icebp push (bad) xor push (bad) imul cli xor mov or (bad) add (bad) (bad) or rex.B repz stos pop rex.WRX cltd es xchg scas jno scas mov sbbl jmpq (bad) mov mov rex.RXB addr32 out pop movabs cltd adc rex.WR xchg add es (bad) jg leaveq movabs mov sub leaveq or scas rex.WRX decl stc pop leaveq pop movabs rex.R insl fistpll (bad) lret insb movsl or xchg (bad) icebp (bad) movsb iret (bad) push mov callq mov mov adc xchg mov mov (bad) hlt outsl (bad) rex.WB ss and sbb jns int3 cmpsl xor movsb rex.WRXB (bad) mov in (bad) (bad) sbb jg pop (bad) iret rex.B mov addr32 and pushfq out int3 and xchg sbb pushq (bad) sub callq rex.W loop lock sub cmp fs (bad) cmc out rex jl cmp fdiv shl test hlt mov lea sub fwait mov shrb sub movsl insb rcll rex.RB pop add jp enterq es push fs std xor imul rex.RXB pushq movsl (bad) pushfq (bad) (bad) jb (bad) add test and jp push retq jne xchg mov cmp imul rex.RB imul ja pushq fdivr xchg in pop jrcxz movabs mov mov pop outsl scas jmpq (bad) mov movd nop orl enterq sbb rex.WRXB scas xchg stc enterq rex.W (bad) icebp sbb mov loopne sub xchg lea je int3 in (bad) enterq xchg sub lahf (bad) rex.W rex.WX stc mov add psrlq divb or jmpq and mov mov or rex.X shrl sub mov js (bad) in cmpsl push jne jno mov ja or rex.WR leaveq adc mov jrcxz rex out xchg xchg rex.XB cs vpmuldq lods sahf jrcxz push lods out pop out adc rcrb repz imul add js lahf xorb or callq callq (bad) xchg (bad) loopne mov mov sbb rorl test xor pop pop jb out rex.WRB cmp lret cmp rex.XB xor (bad) test popfq sbbl or (bad) xchg rex.WB push (bad) iret in add icebp fldenv fdivr xchg rex.WB in add xor (bad) xlat (bad) pop test in xor nop add add rcrb push rex.B fisubl rex.WX or push iret sti gs (bad) xor (bad) add icebp test or (bad) rex.X mov mov mov fisttpl (bad) or pop iret push test rex.WXB rex.WXB loope (bad) jns xchg xor iret lods (bad) rex movabs xchg sbb cltd jnp stc mov (bad) out or fwait stc rex.WR xchg enterq cs (bad) (bad) bnd rex.WB repnz jmpq pushq callq enterq outsl push cmp in jmpq test lods repnz rex.RB mov lret clc xchg add retq loop (bad) rex.WRX repz lods (bad) mov imul ficompl (bad) insl jrcxz cmp mov jnp cmp push sahf in icebp mov push (bad) int lock rex.X rex.WXB clc std push or sub mov jnp rorb sbb mov imul push nop clc rex.WX idiv movabs rex.WRB jne pushq enterq sbb xchg sub sbb out mov jmp sbb cs movabs jmpq (bad) rolb xchg rex.RXB rex.RXB fsubp cld std sbb or in sub int (bad) jo repnz pop jmpq in sub lret (bad) sbb mov std leaveq rex.XB in add (bad) mov sti sub not mov push movabs lods retq jle (bad) cmpsb (bad) xor int3 hlt (bad) fldcw movsb outsb andl scas out movabs rex.WR rex.RX (bad) lock (bad) imull out sub (bad) cmp in (bad) jne (bad) (bad) (bad) lock test jge or push (bad) fs repnz int jnp ja (bad) (bad) lock fwait (bad) mov mov popfq movabs sahf outsl jo in enterq stos and jo cmp rex.RB mov mov pop std in (bad) stc imul fstps hlt (bad) es enterq test rex.WR add jo jno mov iret retq je je jmp (bad) cmpsl pushfq jns loope leaveq rex.W cmc stc loope nop iret enterq cmc movabs (bad) jmp xchg (bad) or stos movsl loopne pop popfq adc scas cld sbb (bad) test sub xor or sbb pop mov jrcxz movl test (bad) cmpsb mov sbb icebp or jnp out (bad) or push rex.X int (bad) lret mov xor rex.RXB rex.WB retq (bad) jmpq mov mov mov (bad) jmpq lea push (bad) repz rex.XB imul cwtl push pop in (bad) sub je loop leaveq mov xchg icebp jl adc lret push cmpsl mov xchg mov fisubrl rex.WRX in (bad) fld push enterq mov mov sbb rex.RB pop jrcxz addr32 mov addl add enterq (bad) jle mov imul cmpsb or (bad) lods pushfq jmpq test cmc adc ja (bad) pushfq out rex.WRB and adc cmp (bad) xor movabs stos add push mov rex.R mov pop scas mov sarl jns mov addr32 xchg callq out (bad) (bad) sahf xchg rolb sbb cmp add push js jp lock sbb add gs push sub jbe cmpsb callq adc repnz fstpt vpslld (bad) faddl (bad) test pop lret repnz movsl add pop jno cwtl test push movb push or pushfq sahf (bad) cmp (bad) jnp mov cmpsb add adc or rex.RB movsl adc or and (bad) and (bad) je adc addl jp or pop ss mov rex.RX out retq je out je out je out je out je out je (bad) leaveq sbb icebp movabs adcl mov int3 rex.XB jrcxz jns xchg pop sti test jns incl (bad) jmp xchg and xor (bad) out stc mov adc sbb mov int jle int3 sbb jmpq rex.XB rex.RB repz xchg (bad) add gs and cmp add (bad) xchg fs sbb mov xchg adc jrcxz std out cmp pop (bad) xor sti jnp repz rex.WRX je rex.RX sbb (bad) fistp lock out and jge loope cmc pushfq sub retq xrelease or jno rex.WRB rex.RX pop mov addl retq lret push (bad) in add (bad) cmpsl pop rex.WR pop (bad) scas mov pop mov cli adc (bad) sub and subl in rex.WRB test sub sub leaveq (bad) int mov sbb mov xor out movabs pop in (bad) and mov callq ficoml repnz idivb (bad) pushfq incl pushq int3 sahf adc in push jmp xchg movsl mov out (bad) (bad) rex.WR cs outsb movabs xor rex.R pop icebp rex.W and enterq push add cmp lods and fnop push pop mov outsl add rex.RB es cltd jmpq mov (bad) rex.B repnz xor jne mov pop divl cmc callq mov sahf mov popfq rex.WX retq movl lods int3 imul out or popfq or (bad) cltq xor cmpsl rex.W scas cmp movabs (bad) rex.WXB rex.WR in or sahf testb sbbl stos cmpl in add imul cmp in (bad) jbe (bad) icebp movabs lret mov and (bad) movabs out and insl pop pushfq insb xchg (bad) shr (bad) and (bad) jae je mov data16 (bad) movsl or (bad) jbe (bad) movabs pop jge (bad) xorl rex xorl emms and retq sub jno push lahf xor add repnz sub mov test add xchg cltd jns vucomiss (bad) rorl xor (bad) lods retq xor jne jne jae (bad) movsl pop adc leaveq movabs sub and sbb xchg cs out pushfq xor xchg clc and imul test fcomi add mov push sub cmc (bad) in test pop movabs push fisttpll (bad) rex.WR rex.RXB or out mov out loope retq mov movslq (bad) test mov out cmc movabs lods retq insl jmp rex.WRX repz (bad) rex.B rex.RXB cmpsb mov lret test jl out fbld out fist je and sub jmp (bad) movabs leaveq movl pop retq (bad) cld test rex.RX (bad) rex.WRB icebp cmpsb (bad) sub add xchg imul (bad) or rex.WB mov fistpl jb xor push mov movq rolb mov xchg out xchg mov fmul rex.W mov clc jnp mov lret stc adc out icebp add repz jle mov jbe mov jg mov cmp std jp in jae iret jl (bad) adc mov pop mov rex.W (bad) or lea out push iret ficompl xchg sahf sub (bad) adc mov jne xor out (bad) (bad) and out test int test (bad) or rex.WR scas (bad) mov fwait adc ror mov repz sub kxorw out pushq enterq rex.WR and loope xlat pop test movabs cmpsl mov movsq retq and (bad) fstl mov mov jb mov gs in sahf jb adcl out adc incl gs rcll mov out movabs movabs xchg jns xchg mov (bad) lods rex.X test mov (bad) (bad) mov out add test mov push movsb (bad) in pop and out or push je outsb (bad) mov sahf add rex.X lret push scas xchg sbb jno je mov movslq (bad) (bad) pop add add addr32 cwtl (bad) sub outsb in add cmp ss cmc retq pop jg movabs rex.R cmpsb shll or mov clc lock jle loopne sahf sbb movabs cmc std (bad) out retq push xchg xor rex.B addl rex.WXB xchg out rex.WB push push push stos retq leaveq mov rex.XB es push (bad) (bad) rex.W adc insl rex.WXB adc (bad) icebp cmc clc (bad) rex.WR in imulb or push cwtl push mov xchg imul or loope rex.WB mov cwtl xor jmpq andl (bad) mov xchg cld mov rol (bad) sub xor jmp lret jmp in test (bad) repz (bad) (bad) jae mov (bad) ss rex.RX mov icebp mov leaveq mov mov mov shlb (bad) hlt mov movabs retq jmp pop (bad) repz adc fcomp rex.WXB or cmp addl xchg cmp movslq jno test jp scas callq cltd neg xchg or jns movabs icebp movslq loope out mov (bad) movslq xchg or cli or cld and mov and xlat xor mov pop adc cmp (bad) mov jmpq xchg (bad) in sub mov cmp cmc sbb or test xor retq (bad) xchg mov outsl cmpsb test add repnz shrl xchg mov jbe jns rex.WRXB rex.WRB pop sti xchg cli mov or push out test rex.B cmovbe jg iret adc loopne rex.RXB test add and xor rex.R or xor or xchg out idivb (bad) pop lret mov int3 (bad) roll mov loopne test in imul in mov std loope mull sbb (bad) mov shrb movabs cmpsb jbe cmp je cltd (bad) callq pushq rex.R icebp sub (bad) imul and sub (bad) (bad) (bad) lret push callq (bad) lret loope rex.B fisubl enterq enterq rex.R rex.WRX pushq push int (bad) mov mov (bad) out sub je andl mov test pop xchg cld xrelease (bad) or out iret je mov out sahf add int3 retq lret cmp mov pushfq push mov push adc bswap nop (bad) rex.R in pop pushfq (bad) in dec (bad) sti add cs mov cld ss or push leaveq or mov push sti imull stos adc rex.WR rex.RB mov (bad) leaveq add sahf loopne mov cmp sbb cmp (bad) in mov sub (bad) (bad) xchg out cmp fstpt fwait rex.RX cmpsl repz repnz popfq or and nop jmp mov loopne xchg out cli rex.RXB pop in imul mov movsl (bad) xchg mov imul mov xchg test (bad) addr32 (bad) sbb jae xor add enterq (bad) iret cmpsb fnstsw (bad) scas in retq (bad) callq or xor fs or loope (bad) jno adc movsl and (bad) jne retq imul sarb addr32 rex.WRB int sarl (bad) cmc cmpsb sub lret (bad) fsts (bad) pushfq (bad) int push movabs (bad) movabs test xorb cmc rex.WR rex.WB rex.WX jmpq fisubr rex.R rex.W push (bad) jnp std sub popfq (bad) loope out and icebp loop mov loope retq (bad) xor mov insb mov (bad) (bad) rex.RB cs adc adc push rex.RB fs loop xor mov rex.B rex.XB jno fld push lea jno add out imul fs in add (bad) cs push jmpq add lea std in (bad) fsts fmulp test xor and (bad) cmp repz (bad) mov fs xchg cmc sti (bad) cltd icebp xorb add stos xlat fldenv jns cmp (bad) adc sub fldl insl fs rex.XB leaveq mov xchg or sti out mov leaveq movslq mov in ja rex.WRX pop lret fisub mov push mov rex.WB add cs int (bad) add add sti shrl rex.WB and (bad) (bad) fstpl cs rex.WRB hlt hlt sub scas sbb pop lea (bad) loope or fnstenv sub sbb movabs sbb int3 gs test (bad) jp or jbe out mov movabs mov out mov pop loope lea out loopne sti mov cmp (bad) fsubrp xchg out fist xchg xchg enterq inc push add callq adc jmpq (bad) mov test rex.R rex.XB jge jns mov push test push mov movabs rex.WR lock lcall imul rex.R xor movabs (bad) loopne cltd xchg cmp xchg pop hlt jmpq rex.WR rex.WRB sti insl jmp xlat adc icebp repz pushq rex.WR cmpsb pop and retq mov lcall xchg xchg sub jae xchg sahf or lret iret orl xchg rex.WRB (bad) (bad) loope rex.WB rex.WRB rex.XB or adc sub cmpsl insl sbb adc adc sbb imul ja jne sub addr32 mov mov cmp mov movsl sub rex.W in lods sub out lret outsb retq (bad) jmpw mov movslq sub fsubrl jb (bad) rex.WB in mov repz (bad) mov ud1 cwtl sub nop test xor notb in jl out (bad) (bad) in (bad) in sub movabs push jmpq mov (bad) addr32 mov (bad) jb cmc xchg jo (bad) xchg sbbl leaveq jle mov xor gs xor rex.WR xchg rex.WR jmp hlt xor (bad) mov jrcxz mov add repnz add mov sub fs cld lcall xchg leaveq (bad) (bad) es int3 (bad) jno icebp rex.RX rex.W hlt jrcxz push loope testb cmp rex.WB cld rex.XB xchg or (bad) rex.XB sbbl (bad) mov (bad) (bad) push pxor pshufw mov scas sub mov es fnstenv retq adcl movsl loope add sbb xor add icebp (bad) mov xchg jmp fistp nop push sub lods xchg sti in pop adc testb rex.WR lods cmc sbbl rex.WRXB pushq jmp push mov add (bad) es add in (bad) xchg mov data16 cld rex.RX repz movsl js (bad) mov (bad) out stc jmpq rex.WX rex.XB or sbb loope (bad) sub push leaveq sbb test int pop out sub addl pop rcll scas (bad) ja iret xor xchg adcl and jbe test lea rex.WRX mov enterq and adc rex.XB rex.B (bad) leaveq (bad) mov mov lods movabs add lret retq (bad) sub lods or rex.X rex.RXB xor xchg (bad) lret retq and cmp (bad) rex.WRX xor (bad) leaveq sub insb lock repnz rex.RB idiv xor cmc movslq add mov faddp repz jae orl leaveq test rex.X (bad) adc cmp icebp out imul (bad) int3 cld out fistpl pop mov leaveq sub mov cld movabs retq cmpsl insb leaveq lret pop xchg repnz (bad) in retq (bad) xchg rex.WXB jp in mov lea push sahf in push imull sbb flds (bad) and fstps movsl pushq cmp or jmp int jae movl out sti enterq add add sub add out xchg and (bad) sbb mov shlb repz xor jne shlb test (bad) mov rex.WB jp cmpsb mov andl and pushfq mov mov out addr32 sub pushq icebp (bad) jge in callq xor cli outsb pop and (bad) (bad) (bad) (bad) xchg sti mov out (bad) callq insl xchg adc jnp retq pushq stos mov test icebp rex.W xchg fisttp add cs pop rex.WB mov lahf (bad) sub rex.RX lret scas fsts add xor xor pushfq outsb mov push jmp jns mov out iret fs xchg and cmp xchg pushfq rolb (bad) icebp int3 jnp jrcxz loope incl vpmulhuw add (bad) add fstpl xor adc cmp es (bad) mov scas pop test loop iret rclb xlat nop sahf add loope (bad) jmpq shll adc int rex.WX jp xor mov (bad) cmc push out movslq (bad) (bad) sub add add (bad) roll lods cmp out (bad) (bad) test (bad) add pop (bad) int mov cmc lea cwtl callq (bad) or or addl icebp xchg pop pushfq lret (bad) rorb push xor rex.WB sbb xor sbb push adc (bad) and movsb in test cltd xor (bad) jns rex.WB push mov sbb adc lods mov sub pop mov in cmp int3 push push rex.RB int3 addr32 test (bad) (bad) test sbb (bad) lods adc rex imul sahf (bad) push cmovbe repnz cmp (bad) push (bad) sub sbb (bad) (bad) cmp or cmp rex.WXB jnp rex.WRXB rex.RB jmpq idivl sbb push fwait mov jb adc sub test imul (bad) pop (bad) cs adc (bad) cwtl test jno xchg or rex.X lock or retq and push (bad) test add xlat repz mov pushfq test sahf (bad) push movslq mov add fdiv callq xchg in test (bad) out or lock adc loop mov pop test jne mov xchg mov rex.R (bad) cmc xchg add jne rex.WR jle addr32 jns add xchg pushq (bad) jge (bad) (bad) rex.WX (bad) and int (bad) (bad) xchg xchg xlat fidivrl add std sbb loop loope clc (bad) xor mov (bad) stos mov pop xchg push in mov adc out (bad) fdivl add cltd lahf adcb push xchg fucomip (bad) fimul stc adc cltd loopne sub (bad) (bad) jl,pn pushq cmp mov or adc pop int3 pop mulb retq cmpsb pushfq sub or (bad) push leaveq (bad) jnp (bad) (bad) callq loop out sub jo ror (bad) jmpq repz stc in (bad) int int repnz cltd adc sbb imul jno (bad) test in pop clc sub sbb (bad) pop cmp xchg mov icebp test rex.X jno (bad) lock rex.WR frstor or test jrcxz xchg xorl jp jbe (bad) in jmpq fidivr ds repnz sbbq callq iret lock shlb (bad) rex.RXB retq pextrw (bad) pop out pop jns (bad) or (bad) mov sbb mov pop mov (bad) rcr stc leaveq push int3 sub movsl sbb (bad) stc lahf mov scas retq outsl repz add cmp icebp mov and clc add (bad) (bad) icebp fimull add sub sbb fistp retq mov xlat add xor mov movabs stc js insb movabs mov icebp lea mov push scas movabs sbb test div or rex.WRX in ds pop int (bad) pop (bad) sbb push leaveq ss fcmovbe rex.WXB sbb rex.RXB add stc std xchg jo loopne cmp int3 rex.WXB stos push test lods je mov ror xchg xchg outsb sbb pop pushfq (bad) or pop loope out iret lock jl jmpq rex.RXB xor sub xchg cld or mov std (bad) in (bad) mov pop mov pop (bad) movslq sbb cmc xchg or xor in and jge rex.RB rex.RXB rex.RX cmc mov pop (bad) rex.WRB rex.WR jmp movntps (bad) loope fild int3 cs lret int fisubl cmc cs mov mov rex.WX ss or movabs jmpq test out (bad) (bad) icebp xchg int xchg (bad) int3 push in (bad) std xchg subl mov in jmp (bad) enterq fsubrs stc xchg and (bad) je xlat mov popq push cmp mov fmuls stc (bad) cmc and or fbld retq jns pop and int3 sub fldenv leaveq in mov (bad) mov insl (bad) push test rex.RX rcrl shlb rclb fwait mov sub (bad) idivl xchg sbb pop jmpq adc cmpsb rcll xchg ds fdiv push rcrl sbb (bad) mov jle xchg (bad) loope sub add sahf rorl xor (bad) jae xchg fsubrs rex.W notl pop cld mov movsb add push (bad) rex.WRX ss push and loope loope lret jge movsl iret pushq add in (bad) rex.WRX mov loopl cld xor push mov cmpsl imul (bad) enterq push jns cmc in jge sti (bad) (bad) fsub repz fmuls sbb cmc rex.WX cmp test ss and (bad) cmp or fs (bad) add fidivrl mov std mov rex.WRB sahf rcrb and or mov out pop mov (bad) push (bad) in adc xchg iret xor (bad) xor rex.WRXB and lea (bad) retq mov (bad) xchg or cmp fstl mov xor retq (bad) and xor (bad) rolb (bad) or add push xlat add lret pop roll rex.WRB xor lret push sub pushq jno and fstpt (bad) repnz outsl rex.WRB nop jo add neg movabs rex.WB fstps mov vshufps rex.WR clc jbe callq mov cs (bad) hlt mov (bad) jno rex.RB and mov fsubs xchg and rex.WX test (bad) rex.WB (bad) mov scas mov sub rex.R rex.RB push lret (bad) out stc cmpsb popfq sbb push mov mov clc addl or xchg loop rex.WRX rex.X jrcxz in retq pop cltd jb adc (bad) mov mov mov push scas jrcxz jae retq stc xor je mov xor rex.WB jmpq nop retq mov push lret push int sti cmp cmc cmpsb mov stos ss sahf xor push loop sbbl add movabs xor cmp mov or rex.WRXB mov movabs (bad) or movsl cmc and fildl addr32 insb adc add adc test cmp or pop cld mov xchg sbb and sub cld and xchg fdivrl add cli (bad) adc adc shl (bad) sbb mov mov test adc xchg cmp fcmove mov repz enterq lahf sbb jae (bad) adc push adc (bad) sbb or xchg add test xor jae add stos (bad) hlt and in faddl push (bad) push (bad) movl cwtl fs or fild std out (bad) adc push (bad) mov sbb mov sub mov (bad) (bad) lea cs pop add mov jnp fdivrs sub stc adc cmpsl (bad) rolb mov movabs ja (bad) adc cmp jns rex.RB retq outsl adcb rex.W push adc cltd (bad) js movabs imul clc stc movabs add cmpsl xchg repz sbb test sub mov rex.WRB rex.B sbb (bad) jno xchg and adc lahf fs adc jmpq test lods iret loope xchg rex.WXB fild mov rex.RX adc out (bad) fcmovbe add jne sub nop cmpsb pop repz fisttpl or (bad) rex.WX repz jmp sbb mull fidivr icebp rex.RB gs (bad) cmc (bad) cmpsl and (bad) clc pop notl rex.RB (bad) jge jp rex.W enterq rex.XB cmpsb (bad) mov or mov mov and rex.WR rex.WRXB movsl pop (bad) add jne (bad) addr32 in sub mov sti sbb cmpsb mov xchg xchg loope,pt fs out push sbb and jge xchg jl cmc popfq cs repz xor (bad) xorb retq test (bad) outsb xor rex.B xor rex.WRB scas repz test mov retq mov retq cmpsb rex.R rex.RB (bad) out sub jb or test rex mov loope loopne rex.XB jo (bad) sub int rex.RX test enterq add fsubrl rex.X and in rex.RB icebp jnp out fcoml xor popfq (bad) sbb xchg int3 pop xchg jae (bad) pop in idivb add hlt fucomp mov (bad) movsb vmaxps gs mov rex.WB loopne (bad) stos std pushq test rclb add mov sbb repz (bad) xchg and loop (bad) xchg (bad) sbb rex.XB out leaveq mov add mov or in jne cld rcll push sbb push xchg mov fucom xor jnp enterq rex.X or and sti jae imul or (bad) (bad) rex.WB cmpsl mov jg jmpq callq stc add xchg insl add enterq adc loope xor cld retq sbb xor (bad) ss rex.RX add fnsave (bad) movsb outsl xor xchg (bad) fisttp movabs rex.RB (bad) (bad) pop ja subl test xor (bad) or insb sub (bad) rex.WR jae nop mov add xor (bad) cwtl mov subl leaveq xchg scas icebp (bad) rex.WR movabs fcoml in fdivr jns test or sub (bad) cmc pop fwait adc pushfq cmc rex.WRXB jrcxz rex.WX rex.WB lret rex.W pushfq rex.WB gs int3 mov retq (bad) nop testb and add fwait imul (bad) mov fiaddl retq sti adc movb mov rex.WR rex.WRB loope jno rex.RXB cltd rex.RB data16 retq in rex.XB rex.R in rex.WX jge mov stos leaveq rex.WRX sbbl and pop in mov outsl sub (bad) rex.RB (bad) (bad) cs (bad) (bad) or or sbb fadds je jp rex.RXB stc ds rex.WR gs xor cwtl movabs xchg int3 inc (bad) (bad) iret int or rex.RXB in xchg cmp xchg rex.WRXB (bad) movslq imul fwait movabs fistpll sbb rex.WB rex.RB ja rex.WX jg lret pushq push mov mov rex.WXB (bad) repnz jae rex.WB out lock mov andl cmc mov lea repz (bad) mov adc lods ja lods test rex.WR and (bad) retq pop retq rex.RX (bad) imul fildl mov out ror sbb test lahf xor callq sti rex.WB loopne fimul add jnp add sti cmp sahf shl xor ds scas pop or js retq and and cs cli rex.WX sahf ss retq repz rex.X rex.X loop hlt lret and mov in (bad) cs adc (bad) jns mov retq lret out rex.WRX or pop in xchg mov and rex.RB xor jo rol rex xlat pop stos stos (bad) xchg (bad) adc lock fidivrl rex.B cmpsb (bad) loopne stos movsb ror rcll out leaveq addr32 rex.RB sbb jge jg or iret rex.WR mul sbb fldz movl pushfq hlt rex.RB movabs orb rex.X rex.WR and leaveq rex.RXB rex.WB fucomi gs out (bad) (bad) rex.RX sbb (bad) callq sbb stc shr or sub mov stos lock (bad) stos test (bad) lods int3 rex.WR imul sbb xchg (bad) iret lea pushq je test (bad) adc cmpsb xchg push rex.WRX rex.RX fxch pop cmpsb rex.WRX rex.W loopne rex.WX jno rorl sub retq push movabs mov bnd (bad) rex.WRB pop and and insl and rcrb inc scas rex.X push lret (bad) cli hlt and hlt int3 pop movabs cmc lret cld lret (bad) int3 je mov test jne icebp lret fs add jp scas leaveq mov roll jne icebp or mov pop pushq in jmpq movabs js lea rex.RB cmc rex.R sub cld test roll std rex.XB adc retq cmpsl rex.RX pop pop (bad) (bad) sub (bad) sub xchg mov (bad) xor push and mov cmp rex.RX pop rolb retq cmpsb mov (bad) hlt add int3 rex.RX scas and rex.RB adc mov mov rex.XB movslq sbb push cmc cmpsl out mov enterq (bad) mov mov (bad) xor (bad) sub pop retq pop in mov fstpl jno sbb insl pop add or jo cld rex.WB pause cli cmp cltd rex.WRX addr32 add mulb je in in mov jmp jne adc or sbb jae scas xor jbe movabs test imul rex.XB fisubl sbb in or mov in sbb movsl mov rex.XB add leaveq rex.XB xchg xor sub cmp repnz and mov hlt sbb (bad) in and adc sbb hlt jo out (bad) in xor int fs (bad) mov pop xchg retq pop enterq (bad) jb jbe (bad) out notl adc mov repnz imul jle addb add (bad) xor or leaveq cs mov rex.WXB popfq (bad) shll cld testl rex.WRXB rex.WRX (bad) or iret rex.WB rex.WB jp test bswap insl icebp xor (bad) (bad) rex.WRB mov clc loope or sub pop rex.WB jne sbb test jb lret add sub (bad) ficomp pushq xor mov pushq leaveq pop pushq or subl pop add clc mov mov jnp (bad) mov adcl test movabs push (bad) icebp pushfq insb frstpm(287 xchg add (bad) icebp jne rex.WR cmp stc sbb retq (bad) mov roll jg addl xchg int fucomip and or (bad) std (bad) jns rorb fldl jmpq ss test out add sub rex.WX and rex.WX repz retq adc xchg jp cmpsl mov retq pop or movabs xchg rex.WRX movslq out (bad) jle movabs (bad) jp ja (bad) add mov pushq mov push (bad) movabs add add mov mov in cmp jae es (bad) imul (bad) sbb xlat push (bad) mov (bad) cmc pop xor stc js mov rex.WRXB rex.RB retq jrcxz xchg cmc testb add sti rex.WRB xlat xorb lret in out mov rex.WXB fs imul pushq mov mov mov mov outsb xchg movl jb mov mov sbb clc sbb xchg (bad) rex.W xchg adc test sti test mov lods add or test xchg cld rorb sahf gs test mov test test mov xchg (bad) cmp add rolb cmc lret rex.WRX test rorb test popfq mov adc je xor pop cld leaveq (bad) xor fnstenv or pop sub jbe in cli addr32 repnz mov popfq pop subb add cltd jno or (bad) movabs cmp ja rex.WB lock (bad) rex.R lods mov repz add add mov rex.R int3 out icebp xchg lret int (bad) (bad) fbstp mov xchg repnz (bad) jo (bad) and mov test mov repz retq test xlat xor clc in lret fidivl xchg mov mov jrcxz add mov push (bad) imul int (bad) or pop movabs imulb mov sbb adc adc in (bad) (bad) or rex.XB rex.WRB push rol or (bad) jmpq mov lret pushq rex.WB jbe outsl (bad) xchg jrcxz xor je (bad) data16 xchg adc mov andl rex.WRXB icebp rcrl jge (bad) stc (bad) push int3 cmc decb (bad) ja (bad) iret xor not popfq mov mov sub (bad) mov (bad) movaps movabs and rorb shlb rcrb in jrcxz pushq mov ffree insb cmpps fcmovnb rex.X popfq rex.WRXB rclb retq adc cmpsb fildll (bad) test movabs mov cmc pushfq (bad) cmc sahf xchg repnz enterq mov cwtl mov popq lret and int mov rex.WB js cmp jns repnz (bad) add fs in push or scas rex.WB cmp jne add jb (bad) mov callq rex.WRXB and loopne loope lods push repz popfq decb cmp rex.RX rcrb sub int and repz cltd mov out lock pop push xchg mov sbb hlt push rex.WRXB fwait mov pop (bad) add mov lahf sub (bad) jmpq vmulsd jmpq jrcxz sbb push rex.RX xchg jmp imul cmp imul xor js cltd mov sub rex and js (bad) add clc adc loope lods lea pop add sbb and mov rex.W cmp xor rex.RX jrcxz rex.WXB or movsl xchg add mov or ja (bad) sub xlat push mov cltd jnp test ja xchg mov ds mov fsubrp shl (bad) js lods pop cmp cmc addl retq pushq rex.WRX push adc add in in xor xchg push mov loop sub rex.WRX cld test repz scas adcl mov (bad) jb std pushfq push enterq xchg gs (bad) int3 mov sbb pop repz jmp mov (bad) notl rex.WR and xchg xorb cmpsl rex.WR mov cmp mov int movabs out movabs sub xor repz retq (bad) sahf rcrl cmp (bad) leaveq sub xchg lods add pop out gs ja mov cwtl cmp xchg xor cmc rex.XB mov mov mov icebp sti in test callq mov fcmovnb andps cmpsl add sub jae add lea or xchg cld hlt sahf popfq movsl (bad) (bad) movsl cmpsl negb rex.WRB cmp mov (bad) loopne lea fdivl cmp mov or and rex.XB rex.WR (bad) (bad) in pop adc fisub (bad) sti std xchg and pop mov movsb in loope mov mov adc rex.XB sub jmpq pushq adc leaveq sub cmc andl sub and roll pop xchg (bad) jno mov rex.WR (bad) jnp mov mov (bad) xor lods icebp test xchg (bad) shrl (bad) pop adc sti clc js outsb (bad) jmpq adc test jrcxz icebp mov nop loop xchg mov int in push mov push xor jne repz mov test pop xlat in (bad) movabs int push ror pop lods int3 or retq adc (bad) jmp loope sub mov cwtl mov outsl jl mov mov mov push lock imul rex.R pop pop mov xchg movabs mov xchg jno retq fidiv (bad) mov int mov jmpq (bad) sbb movabs rex.RB adc rex.W test add jge rex.WXB xchg xchg add mov insl fisttp in adc mov add xchg loope (bad) push cltd test mov rex rex.WRB pop in outsb and cmp cmp fmulp stc mov rex.WB jb xchg cmpl repz xor movslq xor add mov (bad) sbb lret rex.X xor mov push rex.WX rcr jle stc cmpsl xorb iret out cmovl std (bad) mov rclb movabs xchg rex lock cmp data16 loop int3 and int3 stc (bad) fidivr fcom (bad) outsl gs mov movabs iret sub cmc hlt int3 fdiv out out (bad) popfq pushq jno mov in xor jge lret (bad) enterq add and imull (bad) callq (bad) pop adc xor mov test (bad) sbb lock test xchg test sbb data16 adc pop mov iret xchg xchg and imul sbb enterq rex.RXB ss hlt rex.R (bad) mov mov cmp mov mov jne sub orl in sti rclb sub out rex.WRXB cmp callq rex cmp and push jbe (bad) pop xchg cmp rex.B scas fmuls sub push movsl movsb mov jno or je (bad) jo rcl shrl or rex.WRXB jmp rex.WRXB lahf mov jle lea mov ds test test cltd jmp (bad) rex.WR (bad) lret cmp jne (bad) cmp cs jrcxz pop loopne pop sahf lcall sahf rex repnz push (bad) (bad) in jne (bad) cmc mov mov rex.B repnz test xor push mov (bad) sbb (bad) pushq fsubrl (bad) rex pop mov add push in in callq cmp shrb (bad) sbb fisttp pop stos rex.B pop (bad) (bad) or adc fnstcw jae xchg ds cmp mov (bad) repnz out in mov add lock es pop and rex.RX iret mov rex.RX ds and push testl int out int movabs sub (bad) pop adc rex.RXB (bad) xor std xchg adc out insl sub sti mov rex.R xchg xchg mov lea rex.RXB retq lock (bad) mov fwait (bad) sti iret mov (bad) or pop (bad) test std ss jbe jle imul lret (bad) movabs movslq (bad) mov add (bad) cmpsb hlt sub mov fidivrl leaveq xchg fwait (bad) in clc xchg test lret jg test rex.WR mov repnz or movsl (bad) outsb jb js out cmp cmpsb (bad) jo lret gs int3 and cmp xlat xchg pop scas out xchg (bad) xor push out (bad) mov cmp adc sbbl add push (bad) mov cmp mov (bad) mov mov and cltd pop (bad) sub pop imul cli jo rex.WX (bad) test retq push or icebp callq push imul out xor fimul movsl (bad) lock lods test xor fstps adc sbb mov xor leaveq mov in cmc loope jl (bad) cmc (bad) xor int mov push (bad) rex.WR mov cmp add loop (bad) push xchg loop pop divl je retq (bad) mov popfq xchg sub fdivs pop sub clc sub rex.WR (bad) mov movabs jno fs sbb in (bad) jne rex.WRX sub test mov lret std xchg jrcxz callq mov push icebp pushfq sub mov adc mov mov pushq mov (bad) scas icebp push (bad) mov cmp xchg rex.RX enterq rex.RB cli (bad) xchg pop loop mov (bad) sahf and (bad) cmp (bad) imul imul hlt mov (bad) insb pop push cmp cltd mov popfq mov test mov xchg lock add nop mov and rex.WRB add sub mov xor xchg fidivr rex.WRX shr (bad) mov mov fstps int3 test rex.WR repz in nop jmpq (bad) xchg rex.WB je movabs add cmp sbb lock movslq in clc xchg jno mov (bad) (bad) notb pop int test (bad) shl popfq cld fst add xor nop popfq (bad) (bad) mov out loopne cwtl xchg sub nop (bad) fisubrl add (bad) xchg rex.WRX sbbl cmpsl mov adc roll push mov mov and in or mov (bad) (bad) mov add (bad) jno and mov adc int3 movsl clc ficoml in sub shlb (bad) or outsb and popfq jmp in icebp cmc cmc leaveq fwait xor mov cld movabs pop mov repz mov in leaveq pushq ss add hlt int rex.R jnp roll mov cs rex.WRB fimul clc xlat fdivs sbb retq sub out jg vpandn (bad) addr32 mov sub pop mov and xchg int mov or int mov nop jrcxz rex.WB rex.WX (bad) (bad) lea xor rex.WRX fwait movsl movabs cmp cmp movabs mov hlt (bad) jae rex.X cmc in rex.B (bad) imul rex.RX sbb int3 jbe (bad) (bad) fsubp movb scas repz (bad) jo (bad) pop fnstenv mov jmp cltd roll mov fistp lea movabs jge or rol sbb popfq (bad) (bad) or nop test pop (bad) rcrl fnsave lea fwait mov (bad) sbb mov lock lret roll testb mov sub repnz mov imul movabs mov xchg rex.RB jge (bad) and nop rex.WRX fisttpl xchg (bad) retq in (bad) push mov orl (bad) sahf sub loope repnz pop (bad) test and jo cwtl mov (bad) sbb in xchg add ds out jno mov adc pop pushq sahf movslq or test (bad) loope out and push (bad) hlt xchg out outsb cltd (bad) movabs int (bad) xor xorl leaveq jae mov (bad) xchg add fldpi jbe (bad) xor or out push (bad) jmp fcoml sub (bad) cmpsl xor xchg cmp (bad) sub adc (bad) ja jno (bad) or fs xor repz rex.XB test fstpt (bad) (bad) imul in xor add cmp enterq fdivrs cmp rex.WRB gs test pop stc shr cmc sub rex.XB repz mov or mov movabs adc mov add jmp jmpq scas cmp mov mov sahf pop xchg leaveq in std sbb xchg pop xor (bad) (bad) movsl int test rex.WR mov rex.WRX or cs repz xchg jnp pop retq test (bad) push lret push rcrl rex.X in fldenv xchg and movabs movsb and (bad) mov push std sub enterq jne push ss scas mulb xchg pop or xchg xor lahf (bad) mov jle adc rex.WR (bad) fnsave rex.WRX sub push sbb push std sbbl out out (bad) repnz in cli adc cmp popfq iret subl int out test jp jle or and (bad) ss int xor or add (bad) push or mov fwait repz pushq rex.WR rex.WR lret xchg mov movl cmp cld in add or cltd test rex.WXB rex.R rolq sbb (bad) fadd int3 retq rex.B (bad) popfq cs pcmpgtd pop test cmp test (bad) jle sub add or xor rex.WX rex.WB rex.XB jmpq leaveq or movabs add pushfq sahf je rex.B xchg xor add cmc lods and pop pop xor sbbb sarb xchg push mov mov pop outsl callq xor test pop mov rex.RB sub mov sub mov and callq addr32 push vmovups enterq imul std (bad) xlat add push or fiaddl test stos insb data16 mov (bad) fisub (bad) and cmp mov test int std (bad) in mov (bad) leaveq cli lods add pop leaveq movsb xchg (bad) int rex.XB and fcmovnu scas test push lods mov mull outsb andb xor sti lea cmpsl int iret cmp test cli jrcxz in xchg (bad) pop test sahf pop int jae cmp rorb xor cmpsb xor loop mov adc (bad) (bad) sub (bad) pushq sub insl lretq stc sbb outsb xchg (bad) cmp sub rcll repz movsb hlt testl rex.XB xchg sub pushfq cwtl enterq and repz icebp bnd std lea xor pop mov scas and sub pushq stc jae xorl mov cli mov sub (bad) (bad) xor mov pop jrcxz cmc enterq cmp (bad) addr32 adc addr32 callq jp jg mov retq push mov jbe movl enterq sahf imul notl int ja or sti retq add mov xchg rex.RB sub mov movsb imul mov (bad) jno mov int3 and (bad) lea (bad) sbb in jae (bad) sbbl sub add (bad) in rex.WRB insl enterq (bad) out pop and and mov or (bad) adcl mov cmp retq rex.WRX sbb loope sub cwtl (bad) sub pop and mov rcrq push pop ljmp negl cli andl xchg xor add icebp fwait cmpsl fidivrl (bad) pop cmp sub stos fdivrs out fmull or or xor xchg (bad) in xor (bad) fildll rex.WXB clc mov scas fdivr cmp sub mov xchg ds (bad) outsb movslq imul sub sbbl (bad) int3 sub jmpq lret mov enterq and or rex.RXB orb rorl test sbb jne (bad) mov mov cmp (bad) popfq retq pop (bad) movsl (bad) leaveq js rex.B rex.WRX out lock icebp movabs mov cmp (bad) cmpsl xor add stc add testl lret fsub sbb xchg sub pop cltd cmpsb leaveq mov rex.WRB or jp (bad) mov xchg cmc mov enterq fidivrl loopne jae adc (bad) xlat in retq insb fidivr test xor xor (bad) sub lods jno mov test rol loope add out sbb lea fisubr mov and test xlat andl mov push or test jno (bad) pop repz out out (bad) retq incb repz divl mov add sub jae xor loopne clc clc jp cld cmc and (bad) cmc rex.W rex.WR pop rex.WB pop jo mov (bad) cmpl fbld push jo test lret add xchg or jge mov lods (bad) gs jg rex.WB sub jge mov or mov (bad) cmp movslq repnz js pop jo rex.WXB adc stos notb mov jno xor mov mov sahf jmp cmc and pop cmp pushq and mov pushq repz test popfq cmc xorl mov (bad) (bad) xor pushfq and mov (bad) jne callq mov movsl callq lret (bad) mulps sub sbb cltd cs fs int movabs cltd rex.WR rex.RB shrb rex.X callq mov xor sbb (bad) loop push push mov rex.B ss jbe cmc (bad) mov (bad) sbb rex.WX mov insl imul add sub and loopne cmp and mov icebp popfq (bad) sarl sub fs adc scas movabs push (bad) callq (bad) (bad) enterq mov sarl xor or test (bad) cs jrcxz mov adc lahf cltd rex.X sti loope mov mov xchg and or int add cltd rex.B neg in add out (bad) popfq test mov test or clc je in nop imul xchg jmpq pushfq xor jbe (bad) retq mov and jge rex.X icebp cltd faddl rex.RX mov xchg add adc and sub nop int3 pop (bad) xchg (bad) (bad) rex.XB xor xchg (bad) fwait jne fldt (bad) mov imul (bad) (bad) mov negb or rex.R lret sub cmpsb cmp (bad) andb movabs out adcl add sub xlat (bad) out cwtl retq add (bad) xchg jp and mov xchg jne leaveq test or in callq sub xchg lock movabs or lahf int xchg movsb xor cmp sub movsl (bad) (bad) ja cmpsb shlb int3 xor test pushq sti mov mov outsl jrcxz je mov loope adc rex.WXB mov ja cltd imul negl data16 (bad) cltd mov mov adcl mov pop rex.WB sahf clc out shlb (bad) push (bad) rex.WRX or rex.W std pop leaveq sub mov (bad) xlat (bad) lret movabs rcl leaveq jae lret mov mov insb add jb outsb in (bad) rex.R (bad) cs insb (bad) sub pop push (bad) (bad) or je mov lods rex.B pushfq mov (bad) test (bad) jge movsl mov sbbl mov movsl loopne scas test loope (bad) pushfq pop leaveq pop loop sbb mov idivl or (bad) mov xlat test add movsl (bad) retq rex.WXB addr32 (bad) repz leaveq pop xchg xlat xor sahf sarl and pop loope icebp je callq (bad) sahf (bad) fwait and and cltd lea sbb push movslq mov cmc fcmovnbe rex.WB xlat mov xchg int movsb cmc jnp out movsl and cmp rol fsubl xchg jl hlt xlat mov movsb xchg cmp xor and jbe mov pop repz and (bad) jns andl fnstsw (bad) pop jo repnz rex.W (bad) jrcxz movabs mov (bad) hlt jg out loope mov (bad) lods (bad) loopne adc and ss shll and in or mov repnz add stos cld rex.WR (bad) (bad) repnz (bad) lret mov (bad) (bad) pop clc and lret int push (bad) xchg xchg in hlt or icebp (bad) out icebp (bad) rex.WB xor stos lea callq or rex.B fwait cmp mov push in and mov add psubd jmpq leaveq rex.B movb orl sub vucomiss rex.WXB insl sub mov out pop xchg cs xchg scas (bad) pushfq fcomip pop xor mov lods callq xor pushfq rex.WRB ds repnz pop xor sub (bad) jne pop in idiv (bad) (bad) mov (bad) int push lea in je clc push scas movabs rex.XB jge push mov (bad) out or xchg mov lea jnp ja cmp (bad) cmc in mov or movsl cmpsl mov je in cmc imull (bad) cmc adc iret je xchg mov rex.WXB push mov xchg rex.WB (bad) int imul rex.WR stc out in push subl lods int ficoml xchg in jrcxz push scas callq loope (bad) fxch and fistpl adc scas movslq rex fwait rex.WX (bad) ds out cld test pushq cmp ds xchg in xor leaveq retq outsb notl mov add ficom (bad) and pushq (bad) and rex.WRX bnd (bad) mov pop add xor jl mov repz sbb push add rex.RX outsb (bad) insl sbb sub rclb add (bad) mov cmc (bad) movabs popfq hlt int mov clc mov clc in enterq xor (bad) (bad) fwait mov xor and or hlt repnz add enterq mov es mov lret pop (bad) fild test mov fwait (bad) icebp sarl retq ficompl sahf push out sbb ffreep rex.RX (bad) (bad) or and rex.WRX rex.R fistl or add movabs sub mov repnz and (bad) out insb movabs cltd orl callq mulb fadds pushfq (bad) or notl div push mov add (bad) movabs cld test std (bad) xor push data16 cld push mov leaveq push int3 data16 out movslq xchg push lret jmpq or adc mov rex.B leaveq sahf lret stc push out retq xor sub test (bad) sbb rex.R fistp clc roll test xchg pop repnz (bad) rex.WB sub retq lods (bad) jno lret (bad) (bad) icebp (bad) hlt rex.R repnz cs or lods fimull in or xchg movslq xchg outsl leaveq clc adc cwtl test stc callq (bad) (bad) mov retq andb mov mov sub rex.RB add push xor push jp repnz repz (bad) jrcxz stos mov (bad) stc imul movabs jmp rex rex.WR rex.WX cli rex.X jae hlt stc add mov jle sub shr (bad) lea (bad) pop loopne jmpq fdivrl mov push mov pushfq add xor rex.R clc imul stc mov cltd (bad) push orl movabs loope xor loope,pt ja xlat xor (bad) icebp xchg test (bad) (bad) sahf xchg (bad) mov sub jp mov rex shlb mov adc in sbb loopne mov test (bad) push mov sarb push (bad) test sbb cmp xchg add insl pop (bad) and repnz movsb rex.WRX adc fisttpl sub movsb repnz int cld loopne (bad) sti gs fadd lea cmp mov (bad) mov and pop rex.RX int pop icebp rex.WR push outsl in jne add push xor cmp (bad) mov jg jg xchg pushq pop mov outsb or leaveq pushq jo int sub rex.B rex.X sbbl loope callq xchg jae xor rex.R pop cmc rex.R repz rex.WR push test rex.WXB sub mov cmp sbb mov (bad) callq subb sub push (bad) rex.R jns rex.RX (bad) ss xor cmp mov jmpq addr32 adc cmp rex.WXB insb xchg rex.WB repnz rex.WRX jrcxz sub (bad) idivb add rex.WX enterq int3 (bad) mov js xchg leaveq mov and push cmp add rorl ss pop sarl jno mov xor push addl leaveq pushq (bad) cmc test and loopne pushq (bad) (bad) pop out rex.WRX xor (bad) (bad) fs flds jo push sbb data16 repnz (bad) (bad) leaveq pop movsl sub rex.WX jp out insl int popfq rex.WRB repnz int3 int3 mov repz mov idiv rex.WR jb mov loope jmpq icebp and mov lret mov imul sub repnz in pop fildll jp cwtl int3 vshufps fs mov gs stos fldt ljmp fs gs mov lahf leaveq xor pushfq test rex.WRXB fs rex.WRB cmpsb mov loopne (bad) fnstenv insb sbb in icebp leaveq in cmc stos incb je je js (bad) shl jmp (bad) or rex.B pushq (bad) add sbb push mov pop rex.RB int3 sub xor mov hlt icebp int3 sarb fs in jg sbb (bad) (bad) mov nop scas sbbl sub popfq cli jnp (bad) out cs mov rex.WRX xchg insl jne cld add (bad) outsb mov movsl out lahf (bad) (bad) mov movsb and in and xchg (bad) (bad) fisttpll push (bad) cltd mov (bad) cmpsb xchg repz repz fisub stc pop sbbl jbe cli pushq loope test out rcr sbb lahf cmpsl rex.RX test sarb (bad) loope lret fdecstp xor add fmuls sahf xchg sub cmp xchg sbb loopne jmpq cmp rex.RB stc xchg enterq xchg or in (bad) out mov cmpb jo cli jg in sub test movabs sarb cmp xor or insb adc (bad) fsubrl xor mov in lahf fadds idivb rex.WRX sub mov sahf jne (bad) lret or cltd hlt mov cmp lret mov jns cli mov ffree repnz rex.WB notb pushq leaveq (bad) fcmovb sahf leaveq sub mov jb cs (bad) (bad) mov push add lods (bad) callq or xor leaveq fs (bad) xor (bad) out add jnp jns shrl rex.WXB and mov mov ds in (bad) test jrcxz (bad) cltd add mov xchg stos and or rex rex.WR jne mov (bad) js cmpsl movabs mov cld pop rex.RB (bad) push push sbb adc (bad) add xorl mov int3 lret sub push adc adcl cmp fsubr xor cmp mov rcll sbb and cmc enterq out push mov repz mov nop leaveq movabs push mov stos jo rex.X lods or (bad) add nop or (bad) cmp js je (bad) ja sarl jne mulb add adc fild out mov mov int cmp and pushq hlt adc sub retq mov lods rex.WB test add jne fwait jrcxz push (bad) jno mov leaveq pop cmc js in pop xor xchg sub mov rex.RXB movslq rcr int3 or test cmp pop (bad) movsl test rcrb rex.WR xchg jne loopne (bad) push (bad) jns mov imul jle stc rex.R mov outsb lea (bad) imul xchg cs adc fistp xlat insb lods dec mov xor xor adc push add mov int iret rex.R retq hlt in leaveq out or (bad) clc jno and (bad) cli (bad) rex.WRX in movsl rex.WRB rex.B (bad) pop out sbb xchg pushq jno in roll hlt mov xchg mov adc insl sbb sub or hlt sub add lret repz shr (bad) (bad) addl mov and xchg orb repnz cmp enterq (bad) xchg rex.RB retq data16 pop enterq mov insl mov (bad) mov in icebp push jo test rex.WRB popq movabs pop sbb mov test fs pop loope or (bad) cmc shlb lret repz mov movsl in mov xchg (bad) test leaveq movabs (bad) test sub shrb outsb sub icebp int sub xor sbb rex.WRX push rex rex.R xor mov rex fs or pushfq mov test leaveq retq add int3 mov loop cltd std sbb icebp sbb rorb or rex.R (bad) and cltd test pushq mov adc in (bad) cs (bad) in xchg jnp (bad) movsl fld outsb (bad) pop loopne and (bad) (bad) mov or (bad) cmp jno ja and imulb and in xchg mov adc mov (bad) mov imul sub ss test pop or push cmp stos or jbe rex.B pushfq iret pop fwait rex.WXB test rex.RB (bad) (bad) hlt (bad) shrb shlb sub mov test cmp sub in xor callq (bad) mov pop mov xorl (bad) jbe sub cmp mov rex.WXB repz movabs cmp rex.XB pop sub add mov xor cli in repnz jns jo push (bad) rex.WXB cmp rex.X enterq lret jge add (bad) sbb movabs adc repz and jne movabs cmc fs rex.WB adc movabs mov mov jrcxz lods and in mov insb pop pop fadd jg mov hlt xchg lret mov fnstcw mov lea jrcxz adc or mov (bad) push (bad) sar test sub jo push out or add sub sub rex.XB jmpq mov cs divb movabs mov out pop xchg lahf mov jmpq fisubrl (bad) or addr32 (bad) test sub movsb (bad) insb stos insl add jrcxz ja lock cs mov xor lock lret sub xchg insl (bad) imulb add push out (bad) rex.RXB lahf rex.WX rex.RX mov pop xor and mov jge fsubl mov jae mov repnz sub popfq nop rex.WR repz ss push rorb andl repnz or xchg sub ja pushq or or sub rex.RXB jo rcrl rex.WB sub mov rex.B movabs adc movsl std enterq xor xorl rcrl movsl xorl mov adc mov or movabs cmp stos (bad) in pushq std lods or xchg rex.B rex.R xchg jg xchg shrl mul sbb je (bad) rcl (bad) jp (bad) test sahf add pushfq out jno mov shl mov or (bad) cs je add (bad) test outsl sti jo rex.WR mov pop rex.WRX mov or in stos and lret (bad) cld mov pop xchg rcrb movabs cmp mov xchg fstpt movslq push pushfq enterq mov adc push callq out rex.RXB jmpq divb (bad) cwtl sub mov sbb movabs sahf testb and mov (bad) (bad) xadd mov movslq or movabs jno stc mov cmp mov pop and enterq and lret fcmovnu xor (bad) mov or lock movslq cmp add xor pop add movabs fcmovne pop (bad) jbe and data16 icebp jrcxz decb (bad) (bad) loope repz mov (bad) mov pop (bad) sub add enterq icebp mov (bad) mov (bad) sub std xor (bad) notl xchg jbe jle jne (bad) stc jno cld or fs pop (bad) lcall adc mov int3 jp rcll (bad) mov mov stc retq stos sub jge push cmpsb out movabs lock rcrb xchg (bad) or xchg loope clc sbbb mov imul (bad) sbb mov clc pop testb retq push scas sub rex.R ss pop mov rex.WRXB sbb mov stos outsb roll (bad) mov jrcxz xor iret pushfq int3 int3 cmp rex.XB pop (bad) mov sub leaveq (bad) fs xchg out sub adc (bad) mov (bad) paddq rex.WRX pop lret (bad) jae and jmp xor xor xchg jmp xchg (bad) imul lods xchg xchg (bad) fildll or mov jb clc out (bad) callq fdiv clc in jbe std (bad) pushq movslq retq cwtl mov std rex.WR data16 rex.WRX sti add cwtl lods idivb hlt sti cld jl ss loop mov cmp cmp movabs lock std mov clc icebp (bad) rex.W pop adc xor xchg mov xchg jp sbb pop mov lret jle (bad) test repz (bad) jo cmp (bad) movabs push sub icebp add mov add retq js jae rex.XB imul cli movslq mov sbb rolb xchg jno loope (bad) rex.R lods pushq sub jrcxz rex.RB rex.R lea nop repnz cld mov leaveq rex.WRXB push or retq iret rex.RB je sbbb jl add push repz cmp rex.WB (bad) shrb push (bad) jl push and loope rex.WX rex.R rex.WXB lret neg shr xchg retq jae cltd (bad) iret out fdivrp (bad) mov rex.WR (bad) and push loope (bad) lahf iret addb push sub jg fistpll jge or sub mov testb out sub js cmpsl pushq xchg (bad) sbb push shrb lret rex.RXB movabs test icebp icebp rex.WX mov push cmp and xchg rex.RXB or pop int3 xchg sub std sti test sti pop iret mov iret jrcxz adc jp scas rorb xchg sbb cmpsb jo cmp xchg push (bad) rex.WRX sub pop mov or add lret pop cld test or mov mov imull mov push out ds mov (bad) pop clc jns rex.WR xor orb lret loope fadds xlat test and cli movsb out mov in mov lock rcrb (bad) rex.WXB loope and pop (bad) lods mov clc pop js fsubrl mov lock mov rex.WRX cwtl push jg repnz sbbl out movabs mov (bad) cmc test hlt cs add (bad) test jp ss fxch (bad) rex.WR pop repz jmp hlt loope adc sub rex.X loop movb pop imul and (bad) xor rex.RB (bad) cmp add in cmp mov rcll rex.WX xor movsl int sub mov int3 lea xor pop addr32 add mov sub xor sub and rex.RX cltd test hlt jno in sbb (bad) movabs cmpsl and rex.RB pushq adc mov iret jmpq lea test cmp push and (bad) lret scas add cmp ja rcll or add in sbbl pop add and pushq push pop jne xchg pop retq mov fldenv in (bad) (bad) test rex.WRB (bad) lret xor push (bad) mov or loope pop (bad) jae mov enterq roll mov movabs test xor jns mov rolb repz stc (bad) add out (bad) xor int add or (bad) add add or js rex.WR retq pop leaveq rex.WRB hlt and rex.WB (bad) int test test ja push xchg jbe fisubl cltd sub mov repz out orl mov adc js iret xchg cmpsb rep lret push sub (bad) rex.WRX xchg adc mov out add sbb int3 (bad) push repz xor fsubrl jp mov (bad) mov mov xchg (bad) mov test jmp xchg and (bad) xor sbb repz out icebp loopne movsl mov mov (bad) int3 (bad) or cld movsb test mov sub lret mov cmc fwait jmpq sbb jp mov loopne (bad) sub or jno mov adc rex.RXB rex.WB cltd gs pop addl cmp jns rex.WR mov sub xchg mov repnz movb pop xor lods sbbl xchg scas rcll insb int3 push retq jp push push cmpsl cmpsb lret push std mov movabs test rex.WXB (bad) jne mov or cli xor flds push movl rex.WXB repz (bad) ja lret nop lods rorl pop je add mulb sbb fstpl cmc orl (bad) jrcxz lea rex.WB repz cltd leaveq addb jae lahf loope sub sbb pushq addr32 or pop xchg rorb retq leaveq mov xor in lret cmc adc add pop lret vorpd nop cmp xor sbb cs ja repnz cmc (bad) xchg nop cmpsb cld (bad) xor icebp in (bad) ja pop leaveq pop push xor xorl xchg (bad) rex.WRXB lret or (bad) rex.RX fimull xor or cmp cmp pushfq or retq (bad) rex.X loop scas pop push xchg (bad) xchg rcll adcl movb jp fnstcw (bad) testq mov mov xchg callq (bad) rex.B xchg sbb sahf enterq sub fdivs stos sub (bad) js jle mov rex.R pop pop out or fwait (bad) cmpsb xor adc mov jrcxz lret in cs test in lahf cltd and int frstor sub mov shrl (bad) and je jmpq (bad) (bad) or loopne sub push (bad) stc xchg add retq sub lret in adc and lea pop rex.W loope icebp mov fldcw (bad) vaddps push rex.WRB fwait mov fdivr loope gs gs sbb retq lea mov xchg xchg mov lret lock pushq (bad) jmpq out sbb hlt int cs lock mov out fldt test movsl es in pop movabs repz xor add movabs out fwait out fsts movsb leaveq push stc js (bad) xchg sub in mov movsb mov stos test pop cmpsb (bad) (bad) sub cmp or imul pop in xlat rex.R (bad) retq pop xchg rex.WRX add cltd pop rex.WRX xchg sahf mov jmpq xorl insb (bad) xlat add rex.RX xlat pop mov adc mov mov rex.R rex.WRX lods rex.WRXB lock xchg jge lods mov xor out push addr32 rolb repz (bad) rex.W andb and loope xchg mov jmpq (bad) (bad) or hlt xor and cltd (bad) test stc rcrb mov rex.R jns,pn sti cltd lods int3 movslq cs sti icebp sub pop mulb fisttpl jp popfq xchg pop clc mov sahf (bad) xchg pushq cmc rex.WRB xchg xchg movsl fmul (bad) mov leaveq lods leaveq xchg test (bad) test loop pop jne leaveq leaveq mov out (bad) lea mov (bad) xchg xlat jp movslq retq movabs lahf test rex.WR mov cmp sti out jrcxz outsl rex.RB sub fbstp sbb sbb rex adc sub add push int push data16 pop jmp xor mov in gs sti movabs jne sahf frstor rex.W (bad) rex.W fadd jno rex.B and loop in in loope cmp pop out test lock rex.WXB lret popfq leaveq sub loopne popfq insb fmul inc mov js movabs xorl enterq mov sub ja cmpsl adc rex.WXB sub xlat (bad) stc sar je (bad) (bad) sub jp and int orl and negl (bad) test xor sub pop jrcxz hlt mov movslq xor repz (bad) cmpsl mov lods mov test rex.R add pop sbb test callq pop (bad) pcmpgtd insl movabs rex.WRXB or pop cs adc iret std imul push callq mov (bad) sbb add (bad) pop divps add pushq cmp push iret int mov (bad) and loopne push add int3 retq mov rex.WRX xchg es jmpq leaveq cmpsb sbb lea push or cmp out rcrl mov fldenv and mov movsl xchg int (bad) rclb xor cmpsl rex.WR je in and loope movabs test subl or test loope sbb mov pop add enterq rex.WR rex.WRX (bad) mov sbb nop (bad) cs adc xchg adcl and lret (bad) out add syscall (bad) mov and (bad) shrl cmc (bad) pop pushfq rorb rex.RB push hlt (bad) mov jp orb hlt mov rex.WR out mov std mov (bad) adc cmpl repnz int3 shr fstps repz movsl mov (bad) mov test notb hlt mov enterq push xor lods mov adc xor (bad) sbb mov or (bad) rex.WXB icebp loope mov mov and sub cmp (bad) push cli sub (bad) adc loop cwtl cmp in pop iret pop (bad) rex.WXB js rcll cmp push fidiv es stc (bad) in fst movabs sub scas retq xor repnz sbb (bad) xor push rex.B in pushq pop push in movb xor fidivrl xlat test out leaveq pop (bad) jno (bad) mov mov iret imul (bad) rex (bad) sbb leaveq rex.B (bad) cmc add (bad) jae pop (bad) adc push cli jrcxz test pushfq in mov leaveq repnz push xchg lret or nop hlt (bad) mov xlat sti test xchg add xchg rorl sbb cmp nop rex.RX gs (bad) rex.B rex.B rex test jno int3 rex.RX cli cmp rorl movsb cmp lods xor movsl movabs outsl test andnps pop mov fcmovne fld pop (bad) (bad) cmp pop mov test hlt pop adc in lods movslq out sub in je cmpsl pop rclb movsl rex.WRX mov jl sbb xchg fist imul je in icebp orl cmpsl mov scas rex.WR or mov sahf insl mov leaveq or hlt jrcxz fldl adc enterq (bad) lea idivl mov rex.WR mov shlb cmp int3 sbbl mov cli xor sub add pop movsl xchg je rex.B pop push sbb jp jge (bad) lret xor mov xchg xor lea enterq ja test rex.RB movabs (bad) ss sbb add addl leaveq pop (bad) scas mov (bad) rex out sub jp rex.WXB xor imul repz mov (bad) or retq sub stos lret (bad) cmp sub cmp testb rex.WB in push imulb xchg push (bad) mov add (bad) push mov test (bad) rex.WR or leaveq rex.WB (bad) add popfq lret (bad) idivq jb pop test sub (bad) (bad) loop mov loop bswap in or xchg mov outsl ss sub fidivrl jne xchg (bad) xor or clc add mov mov jno adc cmpsb jne cmc imul repz rex.XB icebp in leaveq cmp mov movslq cs cmp rex.RX xlat andl cmp roll (bad) (bad) repnz leaveq (bad) push add movsb (bad) std iret add leaveq nop xchg and (bad) (bad) and hlt xchg jmpq cltd lods paddusw xchg (bad) int scas (bad) insl (bad) mov (bad) repnz rex.R push (bad) (bad) xor rex.WRB rex.XB movabs imul fs or int3 xor enterq out jle (bad) push rcr and btc shr xchg xor jae out stos callq in leaveq add sub loopne pushfq (bad) and test cs sub es xor and fst ja leaveq sub fcomip hlt (bad) mov mov jne pop push test mov mov adc (bad) mov rex.WR stc sub or or jg cs mov negb psraw iret ror xchg or (bad) scas fnstsw cs stc add rex.W rex.R in cmpsl fwait callq mov rex.WR rex.RXB sti scas mov cmpsb mov pop std leaveq test sub movabs loope stc pushq (bad) jne rex.WB cld xchg (bad) popfq adc lock xor push mov movabs and leaveq mov xor sub (bad) rex.W or push sahf movabs movsl rorb cwtl movabs mov (bad) repnz (bad) (bad) stc leaveq rex.RX sbb enterq xor divq xchg jmp push hlt je cld xor out (bad) or cmpsl repnz and (bad) pop mov pop (bad) (bad) rex.W in sbb mov and sti sarl sub cs (bad) xchg test fcompl stc rex.WXB mov icebp cmc sub or repnz hlt fninit shrb fimull (bad) rex.RB rex.R (bad) jrcxz jrcxz rex.XB notl adc (bad) or (bad) pop (bad) lret mov (bad) sbb (bad) add test sbb ficom rex.X pushq and idivb push cld add fmuls (bad) xor pop rex.RXB stc loope loope mov xor and leaveq leaveq xchg push or jle (bad) cltd cld out (bad) and sbb fldt rex.RX mov mov adc (bad) repnz rex.R jbe adc mov xchg lea cmp stc (bad) rex.RX imul sbb pop divb iret jns pop or xor mov add cmpsb push mov and sti retq rex.RX rex.WR sub iret pop cmp imul rex.XB push mov (bad) lret movslq mov fbstp nop jl jmpq (bad) cmp in adc (bad) std enterq (bad) xchg and (bad) icebp or sbb mov cld fild (bad) lret repnz push sahf add push mov je test add rex.RXB repnz push int xlat jns rex.RXB push sar sub mov mov or ss cmc movabs (bad) or int es jno test push mov and lahf (bad) lret imul loop fnsave (bad) (bad) cld js scas pop push xchg push adc test mov nop xchg (bad) push mov addl mov and (bad) xor xor or leaveq callq int movabs roll sbb je pushq enterq (bad) (bad) shll sub rex.WB andb sub mov sub fnop in or rex.B sbb rcr xchg jns (bad) repz in (bad) or ds xchg sbbl cwtl (bad) adc pop xor (bad) movabs sub (bad) insb leaveq cltd out ficompl setae scas mov cltd mov js (bad) push mov rex.R sub loopne xchg sbb scas in enterq (bad) mov lret cs pop shl add sarl and jno cli sub popq pop (bad) mov jmpq retq rex.R lock pop lods jae add push (bad) lods pop sbb (bad) out out test jmpq xor movabs jno test sahf sbbl rex.RXB repz int push lods cli and cmp cs jae mov push (bad) (bad) (bad) sarb fidivr (bad) sbb rex.RX shl adc movabs (bad) hlt sub sbb cwtl test outsl je cwtl out mov int and lock cmp scas insb jne rolb mov push jno cltd (bad) cmc mov cltd sbb retq jno testb lea mov mov sub data16 stc (bad) movsb mov int3 in mov icebp rex.WRXB rex.WR add push hlt xor in retq clc (bad) adc rex.WR add lods xchg retq (bad) xchg enterq (bad) scas sbb sub int3 clc (bad) mov js (bad) mov add mov gs (bad) imul xchg rcr sbb out (bad) lret or (bad) sbb rex.RB repz mov rex.WRB sbb cld mov push sub addr32 gs adc out (bad) lods ja sbb hlt mov sub jae jmpq cmp xor outsb imul rex.WX fisubrl rex.XB (bad) mov (bad) push (bad) hlt icebp cmp movabs push mov mov (bad) out adc enterq xor sub rex.RX add lea jrcxz cwtl in add or lods test or fisubrl je fstl rex.RXB in fild rclb push add xchg (bad) sahf mov jg xchg nop iret xchg fbld add or lods mov rorb cmpsl mov sub sub cli pop (bad) mov enterq js out hlt pop cmpsb push imul in nop fld (bad) popfq (bad) jrcxz sbb icebp js jrcxz pop div fucom out stc rex.RXB xchg (bad) pop in (bad) insl scas jl in (bad) leaveq cs (bad) pop (bad) iret leaveq notb cmp retq push hlt and (bad) (bad) jbe xchg outsb or (bad) cmp pop movsb fiaddl pop sub enterq (bad) (bad) (bad) rex.R stc outsb (bad) sahf iret rex.RX sbb cmp mov lock (bad) xor stc xor ds loope int3 pop (bad) pop repz movabs pop or mov movabs stos add xor (bad) retq add fld test movabs cmp rex.RB mov sbb imul push mov outsl out repz (bad) jmpq lahf repz ja lret pop lret movabs xor andl movslq in jl (bad) jno rex.WX xor sub mov and pop add sub (bad) sub xchg (bad) mov xchg cs pop movabs push nop lret iret outsb fwait jmpq idivl or pop xchg (bad) xor lods (bad) lods rex.RXB rex.WRX cmpsb xor iret shr rex.RB std mov xchg jmpq jl int sub xchg lea fdivs pop in retq lretq xor and repz in mov repz int3 test (bad) pop jae orl jp xchg rex.WB (bad) (bad) out addr32 push movabs enterq in rex.WX lret push enterq cs icebp mov hlt rex.WB and hlt cs (bad) rex.RXB in adc clc adc lret icebp rex.RXB neg in shll (bad) or (bad) pop movabs lahf sub mov movabs rex.RX jbe icebp or add xchg sub push jg push (bad) (bad) fstps (bad) mov (bad) sub (bad) (bad) or rex.RB repnz std lret repnz sub adc callq popfq roll and fidivrl sub pop mov add add mov js rcll (bad) mov outsl pop jge cmp jne (bad) (bad) clc xor rol jnp movabs test (bad) xor (bad) rex.WX cs pop movabs sub (bad) mov insb movslq rex.WRX sub add dec rolb scas int sub leaveq rex.RX fdivrp fwait test movsb jrcxz (bad) (bad) xor mov rex.RB std mov sbb push add scas fisttpll sub mov mov retq (bad) xlat rex.WX xor cmpb add movl sub add sbbl icebp mov or enterq xlat cld in mov andl lock jno or loope pop push iret rex.R es mov lock or lods sub cmp mov push jns popfq mov sti (bad) fnop mull sahf xor push mov xchg int3 leaveq mov fsubl mov jge movsl xabort repnz sub xrelease mov out pop repz sarb xchg jmp outsl (bad) lock mov cltd loope xchg leaveq hlt push test sub (bad) adc rex.WX add jo callq mov scas jmp rex.WB iret rex.WR rex.RB test and out mov adc movabs or jo movsl or loop rex.RX fnsave int3 pop rex.WB movl (bad) (bad) repz pop add in (bad) fxch pop fucomip movsb test mov rex.WXB loop enterq xchg cmpsb shrb out movsb cmp rex.RX (bad) (bad) in outsb callq stos test fs nop icebp rex.WB rolb jrcxz (bad) lods movslq int repnz mov test jp cld jb orl rex.WR lea leaveq xchg rex.RB xchg movabs sbb (bad) rex.WRX rcr fldz (bad) repnz sub fdiv (bad) (bad) mov xchg push push nop jrcxz (bad) js (bad) cltd loope xchg icebp xchg jae in and retq pop lret subl rex.WB mov or retq sub or int loopne xchg mov (bad) and (bad) mov ficomp adc cmp cs cmp sbb adc out fstp movslq rorl jp jp xchg flds movslq cmpl in rex.WX rex.X rex.X xor and stos loope in mov jae (bad) sub or sbb int cmp iret xor sub xchg movabs cmp rex.WR mov rcll repnz test loope xor (bad) or jo cmp add rex.WRX jmpq (bad) retq mov insl xchg roll jle gs movsl retq mov (bad) cmp mov pushq jp (bad) popfq add mov (bad) jno fiaddl insb je or repnz pop xlat (bad) sub rex.WRX rex.WRXB (bad) int3 stc push (bad) push movabs and sub gs lret sahf fdivl (bad) sub loopne ja add jbe (bad) jmpq jle stos add idiv movslq movsl xchg test in sub pop rex.B popq mov (bad) nop sub add cld leaveq rcrl retq divb retq movabs faddp stc sub (bad) sub jmpq (bad) test sahf add mov rclb add mov sub (bad) add int cltd out (bad) (bad) rex.RXB cs cltd rex.WRXB bnd callq mov es cmp fwait sbb in push test (bad) leaveq adc lock and fiadd xlat lods push icebp jae leaveq sub jmpq mov outsb (bad) subl jns jmpq sub mov stc mov sbb js jle cs (bad) jae enterq and sbb mov push (bad) and test sbb sbb outsl jrcxz sub add cmp lock outsl repnz in sub mov rex.WB cs fwait (bad) sbb fidivl or mov (bad) pushfq sarb movabs sub mov (bad) shlb xor add (bad) jmpq and sub in pushfq movb xor xor (bad) or xor add (bad) mov subl int3 sub (bad) movsl f2xm1 (bad) test push mov xlat rex.WX icebp test (bad) test int rex.WRXB rex.WRX outsb out sti movabs loop mov (bad) out testl (bad) xchg pushfq rex.WB jle sbb sub adc mov (bad) shl leaveq xor push mul (bad) (bad) cltd pop sbb mov jbe add (bad) pop cmp rex.RB es fmull out int3 push fcomp mov mov icebp push insb and cmc cs repnz mov add pop retq pop testl jmp int3 pushfq adc test enterq rex.B rex.WRX jrcxz rex.WR xchg jrcxz (bad) stos cmp insb xor adc sub (bad) mov fnstsw or jrcxz adc movabs xchg jp lret xor rex.WXB (bad) jmp pop cld (bad) cmc orb rex.XB test movb int3 sub xchg rex.RB retq fild rex.WB rex.R lret cs adc adc rex.R (bad) pop or (bad) in enterq (bad) mov jb adc int xchg iret test std and push pop retq and rex.WRB je rex.WB jno (bad) pop pop and mov mov movsb add ja sbb push notb cmc mov imulb lods sbb insb ffree cmp (bad) sbb in loope (bad) cmpsb test stos andl (bad) adc pop (bad) movsl lahf or in sub (bad) test rex.WX popfq in in imul stos es andl rex.B movabs pop (bad) or cmp in xor rex.WB rex.RX pop jbe or pop (bad) sbb rex.XB sub cmp (bad) divb mov pop repz jge icebp decb mov xor cmc add pop sub mov jp mov mov sub cmp rex.RB fs out rex.XB mov mov (bad) rcl loope sub ffree sub loope,pn lock sbb mov test (bad) jae pushfq cltd adc jmp std sub sub enterq rex.R rex.X (bad) mov mov sub int3 rex.XB mov loope and (bad) cmp rcr js jge mov adc sub add pop (bad) mov adc rex.RXB rex.WRB or mov std rex.WB mov out xor insb (bad) add rex.WX (bad) out jae fsubs cltd stc movsb (bad) rex.RX xchg sbb std rex.RX rex.B push cltd add rex.R out repz lahf fwait (bad) pop lret pop rorb pop (bad) sahf sti sbb repz std leaveq (bad) enterq rex.WR cs cmp cmpsl leaveq or jnp retq test sub sbb (bad) sbb pushfq add movsb enterq sbb jns cmp sbb movsl fsub mov mov rorl cmc mov lock xchg jne adc push xchg cmc mov hlt ffreep xor movsl and (bad) rex rex.WXB and notl push sub (bad) pop xor rex.WX ds rex.R push or sti cli lret enterq movabs pop adc mov push test push mov pop jmp sbb sbb sub jl rex.RB xor push mov outsb (bad) adc sub imul imul and add pop (bad) lock rex.W ds xchg push pop iret lods (bad) add xlat rex.RB mov ss sub pop int3 cmp movabs out xor addr32 sahf loope ss enterq add xchg rex.WRXB repz and (bad) outsl sti out enterq xchg (bad) mov add fwait (bad) xlat rex.RXB fcomi fcmovne mov imul icebp lods sub jno data16 divb xchg int int3 out pop (bad) jmpq sub (bad) pop sarb push (bad) test rex.RB jnp and jl int (bad) mov test std orl and in mov mov testl jmpq pop rex.WRX and enterq ss rex.RB rcrb rex.WRXB clc add sbb rex.B cs sbb mov leaveq cmc loop in lock sbb mov (bad) int3 jno mov cmp jo and movsl push adc pop rex.RB sub movsb fisttp mov movabs icebp adc sub fndisi(8087 adc xchg xor movabs push pushfq mov lahf cmp adc ja mov or rex.WXB divb lret or out movabs cmpb mov test int3 pushq jl in mov xchg out and hlt fist or sub clc lret (bad) rex.WB mov cmc xchg (bad) or movabs (bad) add cmp pop pop leaveq (bad) xchg xor rex.RX movabs movabs (bad) test (bad) lock mov mov stc mov and rex.RXB mov or mov jmpq (bad) icebp rex.R rorb xchg mov out add test rex.XB cmc mov leaveq repnz or hlt mov adc sbb lret cli sbb mov lock pop add in adc mov repz or cmc add pop (bad) fldenv mov mov in rex.WRX lods pop (bad) out (bad) insl xchg imul orl pop outsb (bad) mov cmpsb nop sahf loop jrcxz jo mov or xor fcomip rex.WRX adc jb mov or (bad) or stc add sub loope div (bad) outsb sbb repnz fbld add clc mov retq sbb mov movabs xchg icebp scas (bad) (bad) (bad) pop mov cltd cltd or int js mov rex.WRX pop sbb lret lret rorb (bad) incl pop pop (bad) retq rex.RXB rex.WR rex.R sub rex.RX (bad) test je sahf or divb xchg (bad) (bad) ss loope xchg imul fwait jne (bad) xor mov xchg or cmc loop rex.WR sub rex.WRX movabs vandnpd and pushq jno and xchg or mov (bad) outsl rex.W fnstenv (bad) jle lret rex.X xor cmp (bad) jle movabs mov std gs (bad) fbstp shl (bad) xor and and or jmp insl cs adc enterq add outsb sub push jno vmovapd jle rex.WB ss rex.RB cltd cwtl jrcxz mov hlt mov je xchg mov test add iret rcr add loopne ja movabs xchg add jge movabs lea pop std push xchg movabs sub push jno mov (bad) (bad) push test sbb sahf movabs outsl hlt sahf fsts jmpq lret mov out add adc loopne pushq imul movabs lret add (bad) rcl (bad) lock callq mov jmpq sbb sub int3 add and movabs hlt (bad) mov mov sbb rex.WR push xchg or mov (bad) (bad) fdivrs popfq (bad) pop xlat ja repz mov cmp addr32 (bad) rex.WRX shrl cmp jp xchg adc or retq mov rex.XB rex.X scas fisttpl icebp rex.B cld sub insb jp shll lods and rex.B rex.RX pop cmp (bad) mov (bad) jg and in push movabs stc jp outsb rex jmpq out cs addl adcl test out shrl rex.WRX mov enterq retq xchg (bad) cli out and (bad) movabs in jb xchg pop jmpq stc and es fistpl lret mov out icebp int3 int3 and adc rex.RB mov (bad) cmp (bad) mov mov push stos rex.RB mov insl mov rex.WRXB rex.RX push int3 jrcxz (bad) or (bad) cli and push out scas mov imul or sahf adc testl push jrcxz (bad) push std rex and movsb cmpl mov loope movabs (bad) push jbe sbb rex.RXB pop callq push (bad) movabs pushq pop int3 lea in adc sub in lock push xor iret sbb in fdivrl (bad) sub (bad) fstl rex.RXB fistpll orb mov cltd mov je (bad) pushfq xchg sbb mov cmpsb pushfq enterq (bad) xchg mov insb push (bad) fiaddl mov (bad) fs lods loopne jl xchg adc stc jbe insb push gs mov leaveq and (bad) jg test andl addr32 and cmc imul rcrb rex.RXB jno pop or mov movsl insl xchg rex.WB xchg out addl mov std je sub (bad) mov je,pn hlt adc adc rex.WB rex.RXB icebp mov cmc (bad) ja mov push jle jno orb cmp mov (bad) xchg and jnp mov or sti mov push jmpq jns sub add leaveq nop mov callq repz loope orl push and jno (bad) xor movabs rex.RX incl mov (bad) movabs fist sub gs add or rex.RX push cld jge fist sub es fdivrl (bad) ficompl mov outsl ds mov (bad) xor mov sub jge adc insl sub test movb (bad) cmc outsb add jno in test (bad) (bad) (bad) sub add stc add test sbb cmpsl stos xorb add outsb sub mov movabs (bad) rex.WXB rex.WRX push pop rolb sub (bad) jnp ficoml testb ja cmp sbb and rcl movabs in jl xor (bad) not or push rex.X fsubr fabs rex.WRX xlat lret (bad) out cmpl int fldenv add fidivrl push add fildl (bad) leaveq repz jno hlt pop loope mov loopne (bad) fisttpll loopne rex.XB rex.WRX cwtl repz mov (bad) loopne (bad) in or rcl test cmpb sahf sbb fisubr cmpsb repnz or (bad) out loopne and cmp fcoms fidivr (bad) fwait adc rex.WR scas pop shr push jrcxz and mov rex.R rex.WRB add jno push out add (bad) rex.RB rex.RB jae in test (bad) cwtl (bad) loope mov rex.XB rex.RB rex.RXB rex int3 (bad) in std or fistpll sbb sub sub movabs mov push fsubrl cltd sub xchg mov (bad) pop cmp or cs nop ss insl add sub (bad) icebp and mov nop (bad) jmpq mov xchg adc cmpsl mov fdivrl repz pop negl jrcxz cld lods and enterq mov ficompl sbb jbe mov iret cwtl enterq imul xchg int sbb ja rcr fcmovu outsb jns mov fwait or (bad) mov (bad) hlt push sub imul push lock mov (bad) je retq mov movsb leaveq xchg push xor (bad) in xchg in (bad) rorl rex.RB cli jne imul xor cli sub xor leaveq movabs dec (bad) mov sub mov (bad) in (bad) xchg (bad) hlt repnz sub in pop mov icebp cli imul add cs out movabs xchg vandnpd or jmp mov (bad) test mov xor insl js (bad) rex and cwtl jp int3 test out jno or rex.RB or jmp rol sahf test loop adc xor add push icebp callq lods ror mov jmpq sti lea shrl fstps mov mov js sti (bad) and leaveq sbb push push icebp sub roll pushfq lret cs rex.RXB movabs jo (bad) or rex.WR and hlt cwtl icebp or cwtl in adc retq addr32 lea lret addr32 sbb jmpq outsl push rex.WRXB rex.WRB jnp orb sbb (bad) out test cwtl hlt gs cld bnd cmp clc cld xchg cmp (bad) ss (bad) rex.R rex.RB lret cwtl jp and test scas mov cmpsl jp or cld mov (bad) adc sub mov lea (bad) out and jae rex.X repz retq cwtl sub jge cmpb outsl in push es or lret mov or nop sbb iret sbb out or adc rex.R insb lret jmpq icebp (bad) movabs in and or add sti (bad) (bad) or and xor out js hlt int fsts and mov cmp pushfq rex.WR (bad) int rex.WR mov lret pop sbb rex.R (bad) (bad) (bad) loopne fldl fsubp (bad) xor jbe test outsl or fwait sbb adc jp jp (bad) mov in (bad) (bad) add mov (bad) mov xchg mov rex.RB cmp rex.X jmpq sar rex.R repnz xchg callq (bad) mov js retq testb int3 in cmp sub jae shlb (bad) (bad) repnz cmpsl xlat (bad) (bad) int movabs rex.WR nop icebp mov nop jns sbb add sub add cltd mov cs jrcxz lods rex.RX cs in xchg mov and test frstor mov retq or rex.RX sahf pushfq sti push (bad) pop lock mov (bad) in jge xchg rex xchg jrcxz mov test and (bad) iret int3 push enterq nop jae rolb (bad) sbb popfq sbb mov js sbb fucomi movabs sub movabs rex.XB (bad) (bad) movabs in rcrl mov pop imul xchg or (bad) (bad) (bad) sub (bad) (bad) jns int3 lret jo (bad) (bad) hlt movabs js out adc mov (bad) or xor cmp int sub movabs cld stc out (bad) test retq (bad) mov icebp cmpsl cmc (bad) rex.WRXB repnz (bad) mov sub stc rex.WB rex.RXB cs rex.R stos in movabs mov (bad) neg iret sub adc iret xchg pop flds add mov repnz mov (bad) mov jmp mov xchg sbb lods sahf fisttp pop (bad) mov mov jl xchg jns (bad) clc sub mov sbb retq pop movsb icebp icebp push mov (bad) push in pop mov mov lret sub rex.RXB loop in or adc lret or sub leaveq mov cs fnstcw xor and fs adc movabs adc jge xchg (bad) pop jge sub jrcxz rex.RX xchg in adc repz sbb (bad) mov pop fcompl pop mov enterq pop sub xlat (bad) callq sub test pop (bad) adc test insb shll test lods sub sbb mov and mov lock cmp iret pop adc and leaveq imul jmpq xchg mov push cmp sub stos nop sbbl sub add jmp stc mov sub je mov add nop sahf cs pop je mov test adc div sar repnz (bad) sub sub in pushq (bad) cmpsl fistp movb sub (bad) popfq rex.X int3 mov xchg pop mov adcl mov std (bad) jmp (bad) std (bad) xchg mov repz (bad) push iret push add popfq sbb and insb in (bad) mov mov adc cmp sbbb fsubrl movabs in test (bad) int3 jl lock int mov sub xor (bad) cltd (bad) (bad) mov std rex.WRB jp nop rex.X rex.WRXB (bad) xchg popq mov mov fldl out jae leaveq movabs lea movabs (bad) sbb (bad) (bad) fisttpl (bad) push jmpq sub retq gs idivb sub or fild (bad) imulb (bad) fldt mov callq mov rorl (bad) imul and vxorps rex.WR push leaveq loope loope out push jae rex.R rex.WRB decl jmpq nop (bad) mov js rex.RB sub adc xchg (bad) hlt (bad) movabs jne imul mov xchg in or enterq cs rex.WXB add shrl rcrb out in rex.RX ds add pushq movslq in sub icebp movabs and int3 sahf retq mov callq push out js push or (bad) js (bad) mov loopne pushfq cmc pop in jbe push rex.WRB jae mov nop jmpq icebp (bad) xchg cmpsb (bad) xor cmpsb adc mov in sahf int3 sub cld ror callq adc sub cmp fcmovu enterq mov pop rex mov pop movb xor (bad) add mov adc rex.X sbb add rex.X mov pop movslq stos cmc nop xor (bad) orl (bad) movabs (bad) jmp mov orl nop jbe iret imul mov (bad) rex.B rex.WRXB retq (bad) rex.RB pop jnp pushfq jrcxz orl in jnp leaveq lock jns fcmovne enterq loop test sti mov rex.RXB adc (bad) and rex.W add mov movabs jno test (bad) xlat mov mov (bad) or (bad) mov sbb push cmpsl in jp mov xchg mov sar mov cmpsb push sbb (bad) insb sub mov xor rex.WR rex.WRXB rex.B ss rex.RX addr32 rex.WR vpminub pop lock and pop lret (bad) repz (bad) pop (bad) repz int3 and cmc mov cs leaveq cmp test ja stc mov mov repz sbb cld lret rorb push push pushfq lea push rol lret lock (bad) cmc sub push (bad) mov mov int xor ja (bad) iret sahf mov retq movabs ds pop sbb mov (bad) push xor movabs fsubl loope cmp lret sub sub gs insl in lahf int jrcxz xchg pop xlat popfq push cmpsl scas nop (bad) movabs insb lret pop cmp je xchg rex.RB movabs mov rex.WXB (bad) mov jl je,pn pop cmpsl rex.WRB repz mov (bad) mov lods rex.WR (bad) cmp gs (bad) iret mov xor rorl divb enterq rex.RX (bad) out pop push fwait and rex.WB es scas mov push add jp mov (bad) fnop in rex.X test or outsb (bad) cld movsb pop or in xor std cs xchg fidiv lods push movabs pop xlat (bad) cmp jge and in adc test (bad) repz add and xor out jmpq outsb adcl jrcxz push scas or xchg movabs gs xor test lock mov mov rex.X cld jnp push (bad) rex.B rex.WX (bad) (bad) stc enterq outsb sbb sub enterq rex.X mov callq cmpsl nop repnz cwtl cmc (bad) xchg sarl retq rex.WXB xchg ja push mov std xor sub cs push pushq xchg jae rex.WRX push mov or movabs jno loope rex.B cs loop retq in xchg xchg (bad) loope push sub (bad) xlat push loope in clc (bad) xchg mov fcmovnu jrcxz movslq jrcxz imul in cmp (bad) cmp frstor sbb mov (bad) rex.WR (bad) clc data16 pop mov xchg pop (bad) (bad) rex mov imul and sub xor (bad) jne jae mov lock (bad) sub rex.WRB in test int3 jae xchg (bad) and (bad) rex.RX or rex.RB sub fisttpl (bad) rex.WR (bad) mov repz pushq lret add callq int3 push add movsl sub loope sbb jrcxz (bad) rex.WRB or (bad) rex.RX stos (bad) cmp test (bad) mov or cs add divl cmp sub test mov movl rex.RB xchg jno insl scas mov jmpq jo lods clc cmc rex.B out leaveq iret jae test int sti hlt fs leaveq (bad) add sub (bad) lret jno push out sub (bad) fisubr scas cmp stos xlat rex.WB rex.WRX sub mov (bad) std add (bad) push mov nop cmpsb mov adc loopne loopne (bad) and out mov (bad) scas xor out insl rex.XB (bad) movabs (bad) add mov mov xchg or push pop jno sub test movsb xchg xor rex.WR xchg xchg movabs mov int3 push sub repz and xor test test rex.WB rex.XB xchg test pop mov xor jae xlat xor cltd sub mov and (bad) fcoml or rex.WRX test sub lock xor test icebp addl rex.WRB cs stc sub sub (bad) hlt test fcmovu mov test mov jo jmp loope movslq addl (bad) (bad) sbb lahf rex.RXB int in add leaveq (bad) (bad) mov pop stc jno mov mov stc movabs (bad) shl xor (bad) in cmpl rex.WRB rex.WR fadd (bad) test pop mov or mov callq xchg (bad) adc and jmp sbb retq cltd rex.WRB test fcoms or enterq pop retq rex.RXB callq mov std movabs gs inc add or rex.RX mov xor cwtl lock fs rol mov repnz pop mov and retq push mov fisttpl imul jmp notb insl mov (bad) jmp rex.RX sub xorb xchg enterq test popfq (bad) sub ja mov push lret (bad) std rex mov rex.RB rex.WB rolb mov jg add jrcxz xchg lea mov mov mov cmp (bad) cmpsb sarl cmp rex.RB (bad) fsts (bad) sbb push or int lock (bad) lret rex.WR test cmp push hlt (bad) (bad) xchg sub test stos fcompl mov mov fmul (bad) jrcxz xor add hlt ds (bad) in or jrcxz rex.WR sbb push iret (bad) mov icebp add mov in rex.WR lock jae scas jge testl (bad) push insb jae pushfq cmpb mov (bad) or rclb ja and xor adc sbb rex.R push int3 pop enterq jae mov hlt mov movabs lea jae,pn movabs (bad) rex.RXB jns push rex.WRX (bad) (bad) rex.R rex.RXB (bad) addb sbb jge ficomp mov push addl fisttp and (bad) mov or (bad) xchg adc sub rex.RB mov mov in movabs in imul pop movsl nop pushfq leaveq sub mov xor mov (bad) push rex.XB or cmp sub (bad) nop push ds rex.WR jrcxz,pn scas test sub es cmp movsb sbb cmp retq retq pop mov adc (bad) movabs add je andb jrcxz mov rolb callq jge mov (bad) jbe pop out (bad) icebp mov (bad) or sahf jl cmpsl leaveq rex.WB adc popfq sub jne lock jo pop rex.WB repnz adc cli sub movslq or (bad) leaveq (bad) enterq imul add stc stos movslq vucomiss rex.WRX cmpsl rex.RB sti icebp clc sbb orl insl imull lods sahf rex.WRX lods test in imul int3 (bad) rex.WB add (bad) mov xchg je cs (bad) (bad) jae scas mov rex.WB mov mov fdivrs pop xor mov cmp mul xchg pop mov add sbb in pop mov test rex.WB jge rex.RXB cwtl add adc cltd add ja cmc mov rex.RB cli adc lods mov (bad) movslq rex.WB push cltd xchg rolb jmp movabs xchg movsb rex.WXB imul rex pop in gs push (bad) xchg or jp cs scas jmp push ficoml or and (bad) (bad) sub int3 (bad) es fwait lret test cmc lods fmulp (bad) lret pop push (bad) sub loop and movabs jno cmpsb jrcxz cli test and (bad) pop xchg pop cmc mov sub rex.WXB movsl (bad) mov lea rex.WXB test insb mov fwait lock lods cld rex.WRX sbb imul adc testl pushfq xchg ds sub jne sti jb jmpq clc add (bad) cmp push loop loop loop loop clc adc adc mov imul retq or cli sub in (bad) mov add (bad) cmp shll xchg push leaveq lret xchg sub movb xchg add psraw int scas push lods shlb in lea out (bad) shr sub hlt xchg hlt leaveq push mov sti out mov movabs adc movsb cld pushq or jbe jmp rex.WR (bad) and repz adc movabs mov icebp cmpsb cmpb scas cmp (bad) stos pop xchg std mov sbb lock xchg callq pop rex addr32 jb sub jb test sbb mov lock in subl (bad) sti or (bad) movabs enterq pop in (bad) mov sbb (bad) rcrb (bad) (bad) icebp xlat sub clc cs out test sbb sbb sub lea cltd mov adc movabs mov or rex.WB adc or int3 rcrl pop cbtw pop movsl repnz ss and fwait mov enterq mov jns (bad) jle rex.XB je mov jae xchg insb icebp movslq jae (bad) nop jns out sbb jae (bad) sbb or cmp cmc push xchg and cmp stos (bad) data16 xchg cwtl rex.WB repnz test int3 lret mov push sub outsl jns pop pushq (bad) test xlat cmp fs add fyl2x push mov xor rex.RX fcompl test (bad) movabs add pushq hlt mov rex.WR test (bad) rex.W int3 xchg rex.WRB divl pushfq mov out xchg cmp xchg callq adc in rex.R rex.RX jmpq xchg and ds rex.X repz hlt push adc (bad) mov jle mov pop xor jne sbb xchg sahf (bad) sub leaveq and nop pop leaveq jge movabs cmp jp cmp and pop (bad) cmp mov mov ds xchg pop add mov (bad) repnz cmp rex.RX jnp imull out cmp push mov cmc sub outsb or (bad) mov xchg outsb imull sub int (bad) (bad) adc or faddp movb (bad) mov adc sar push cmc jns stc pop rex.XB rex.X xor test and cmp jl imul (bad) or sub xor imul fdivs and and pop idivl notb andl xchg insl fcomps sbb nop mov (bad) mov loope je loop popfq movsb pop mov sbb push test rex.B shll sub enterq or (bad) mov icebp ficoml in (bad) or cmp adc rex.RX cmp (bad) mov xor add enterq push mov mov xlat cmp shl xor add sub jle xchg popfq rcrb fwait (bad) rex.R jmpq (bad) sub cmpsb pop mov mull rex.WXB scas push or hlt (bad) xchg jrcxz xchg test subl movabs pop cmp push sub (bad) adc outsl nop test icebp push test cmp sbb (bad) (bad) rex.WB pop jno add (bad) rcll rdpmc mov clc (bad) jl mov outsb adc sub movabs ja mov mov (bad) rex.WB or mov xchg add rex.XB sub mov movsb cli sub cli add sub push rex.RXB mov rex.WR cmc mov (bad) mov lret xor (bad) retq (bad) xchg jnp (bad) (bad) xor je pop mov test out jae (bad) (bad) es cs cwtl js lea pop repz rex.WXB rorb xchg mov stos movabs test sbb stc (bad) mov adc (bad) sub int3 jle or rex.XB push test rclb test int3 pop mov mov icebp out loope movsl out xchg pop rex.XB xor sahf popq mull lret lea lret addr32 loop lret data16 repz es (bad) adc mov mov out (bad) pushq lods jg hlt rex.WB retq in and rex.B rex.WB jl (bad) (bad) adc jns imul loope lea sub push add jnp in rorb movsb (bad) pop adc movsl mov sbb js bnd cltd mov movb jge mov jne ds sti sub mov xchg in mov fs pop push xorb jnp movabs cmp push (bad) repz callq lahf pop retq sub int3 mov rex.WX icebp adc (bad) sbb or mulb push cltd cs pushq (bad) out in cs jl (bad) fistpl xchg rex.RX fdivrl lea sub (bad) (bad) adc xor rex.RX xchg (bad) (bad) (bad) xlat mov (bad) adcl and jno cmp xchg (bad) and sub stos mov ficom out lret fistpll push mov movslq mov (bad) (bad) rcll jge lahf mov mov addr32 out sub xor in mov lods xchg jl shl xchg sahf movabs (bad) mov mov stos sar xchg ja out cmp jmp xor push sub fcoml add jnp loop xor mov xchg loope and cmpl mov and xor imul (bad) callq pushq push lahf xor adc mov fldl xchg (bad) mov or xchg pop mov fcmovb mov mov ja (bad) cmp (bad) mov jo fst lods push push (bad) nop (bad) push xor xor jrcxz cs jne rex.RX (bad) rex.WXB (bad) shr cmpsl lret lods (bad) test adc add or mov cltd loop (bad) cld leaveq (bad) (bad) out popfq clc test shr adc mov mov adc scas (bad) cwtl pushq jmp or loopne (bad) cli (bad) (bad) callq xchg mov jae sbb add imul jmpq sub jl rex.WR mov rex.RB in rex.R (bad) cmp cld jno cmpsb rex.WB pushq rex.WRX rolb (bad) scas fldl push push mov xchg out rcll loope xor fisttpll push iret sahf and pushfq icebp rex.RB push (bad) div (bad) jns (bad) cwtl xchg leaveq cmp rorb adc rex.RXB (bad) xor movsl xlat and and je push pop sub cmpsb pop test xor mov retq rolb lret (bad) (bad) je mov jg (bad) xchg sbb (bad) xchg test rex.W movsl ja mov callq pushfq jne (bad) std cmc lock in (bad) sbb sub or cmp hlt in pop je sub je pop mov fdivp (bad) push xchg and (bad) mov mov in pushq popfq push mov xchg rex.WB (bad) or fsubl out pop repnz rex (bad) (bad) cmc sub rex.RB adc (bad) movslq roll (bad) sti adc enterq fnsave fcoml mov mov clc in jnp testb pop mov add cmp jrcxz mov sarb roll cmpsl pushfq retq xchg push hlt retq jno (bad) retq repz mov sbb and data16 xchg or test xor (bad) add add out sub fstpl or (bad) xor sub nop mov mov sub in mov repnz nop movabs cltq (bad) cli lods sbbl cmpsl jns movabs cmpsb add sbb out ja faddp es fwait insb xchg callq loopne mov rcl movsl (bad) jmpq xchg (bad) push sbb (bad) repnz fmuls pop cli clc cmc add insl fidivr lahf addr32 iret rex.B leaveq xchg (bad) and jmp mov addr32 push in sub stos retq rex.WRX imul subl subl (bad) jl (bad) adc pop jb lret testb mov rex.WXB fisubl cmp icebp pushq out rex.RB retq outsl or add xlat mov rex.XB mov xchg (bad) rex.WRX xchg push popfq shl sbb fbstp hlt retq (bad) cwtl out callq fmulp jmp ja fcoml test (bad) rex.R (bad) mull movsl pop rex.WXB lret rolb lret retq pushq incb movsb icebp divb mov or scas xor retq (bad) (bad) out rorl lahf rex.WR cs retq movsb rex.WX pop mov mov or movslq cmp movabs xor shrl (bad) lcall retq sub or pop sbb enterq roll js movsl gs (bad) fisubrl (bad) sub sub out mov lret xlat mov leaveq imul xor rex.X push (bad) pop scas movsb gs mov shrb (bad) pop mull and (bad) mov push xor rex.WXB xchg cltd jp adc mov xor (bad) adc (bad) mov add lods sbb icebp es rex.WRB movabs fwait mov (bad) sbb ucomiss (bad) fucomi mov gs leaveq subl test (bad) icebp add jle push pop rex.RX jne fucomp push cmp xchg sbb add rex.RB test rex.XB rex.WXB (bad) int3 int3 test in (bad) out rex.WB xchg sub rex.X (bad) cmp (bad) (bad) or jmp (bad) rex.WB mov pop enterq push cltd test stos (bad) test pushq add and retq xchg fwait mov test mov xor loope vpsubb pop lods pop cld mov push cli stos repz (bad) test and fxam jrcxz rex.B cwtl sahf rex.WR rex.WRXB xor loope adc rex.WR lahf lret rex cli lahf vucomisd xor mov (bad) (bad) mov (bad) mov sbb movabs cmp (bad) or pop jbe sub in movabs (bad) enterq jo fnstsw or rex.X fnstcw (bad) mov icebp cmp in movsl mov loope cltd pop leaveq xchg mov clc cmp adc xchg mov rex.B sahf mov clc out jno lahf mov push or loope jns fwait (bad) (bad) jbe out mov stos andb (bad) add jo rex.WRX repnz ds cli jl (bad) or mov repnz lret (bad) push in xchg or repz in cwtl retq es (bad) jnp movabs fstl (bad) movb je adc insb pop rex.WR cs mov (bad) imul mov cltd sbb xchg push (bad) (bad) cmp test div sub scas outsl jns rex.RX mov xor sbb rcrb (bad) cmp vminsd rex.WXB rex.WXB stos lock jns in (bad) pop rex.W leaveq mov repz cmpsb divl sub or (bad) xor fdivl pop cmp rex.R push icebp and clc mov (bad) scas mov data16 or sahf (bad) rex.WRX repz mov bnd or (bad) xchg mov mov mov mov test cld test (bad) mov rex.RXB out cmp rex.B xchg js rex.XB push (bad) je int3 sub mov cmpsl movabs retq rex.R pop int3 rex.W (bad) fabs jb int3 rex hlt cmp nop js cmp (bad) lret mov sub cmc div rex.WRX ja,pn xchg hlt xor pushq sub addr32 xchg pushfq (bad) adc cmp pushfq mov int3 lea sub (bad) cmp jp repz mov rex.RB (bad) xchg loope sub mov cmc in cwtl (bad) in jae movabs mov xchg ds add lret repz retq (bad) mov or cs pushfq rex.WXB (bad) stos rex.XB mov (bad) test sub test cmpsb fnstenv lods out loope js sub cmp and (bad) xorl rex.XB pushq mov retq pop ja ja add adcb ds or std (bad) jrcxz ds addb je or mov xchg testb pushq (bad) loope adc jmpq rex.R ja sub (bad) or ja sub sahf mov loope mov cli or jae stos neg mov or mov cmc out (bad) fs scas (bad) out outsl rcll scas jl pop int3 fldl mov sahf or imull cmp sarb mov outsl adcl retq out pop stc negl sbb push mov (bad) xor mov sub lock movabs xchg (bad) andb adc or mov cs (bad) (bad) sbb pop sub jge fisttp rex.XB sbb mov callq sub (bad) imul (bad) xor (bad) or movsb loopne stos gs pop sub sbb imul rex.WR rex.WR mov sbb andb sahf outsb (bad) fs or (bad) movabs jbe adc int3 push push lea cmp movslq or mov add shrb outsb jmpq lods push rex.RX sub jrcxz enterq (bad) (bad) adc (bad) jrcxz mov (bad) rex.WR stos movabs sbb rex.XB movsl and es mov rex.WB sub add sbb jrcxz hlt and (bad) pop and push shll mov mov orl repnz xchg idiv enterq sub (bad) movabs (bad) (bad) loope hlt (bad) int3 (bad) fs push (bad) mov fcmovnb int3 xchg xchg xlat in (bad) rex.X enterq mov stc (bad) rex.WXB sub mov (bad) movsl or cs roll mov xchg fwait or add loopne jae popfq xchg (bad) test loop,pn sub hlt retq movl int3 (bad) pop rex.RX loop push mov (bad) jmpq mov mov jmpq fadds iret (bad) rex.WXB cmp (bad) cs mov movabs pop imul mov xor scas sbb adc stc add mov (bad) rex.WRX enterq test adc jg xchg fs fs rorl (bad) and mov mov (bad) mov adc (bad) ja test test (bad) jae pop (bad) cmp push mov or xor xor mov (bad) add (bad) cltd or shr mov (bad) stos loopne pop test test sbb test (bad) add cld (bad) out pushq cmc fisubr rex.WRB lock rex.XB rex.WB rex rex.WR js insb rex.WRB sbb lock movsb clc out xlat (bad) (bad) sub insb test movabs rorl jmpq div sub fisttpl mov retq and add and adc imul rorb lods scas cmp iret sub or ds out add push (bad) cs fisubr sbb (bad) shlb rex.X or movabs cltd pop add mov adc xlat adc (bad) je movabs adc push rex.XB sbb cmpsb stc push (bad) adc or test mov xchg enterq leaveq mov rolb push sbb sahf mov test rex.WR rex.B (bad) bnd clc sbb pop add push rex.RXB retq (bad) cmc rex.R pop sub pushfq fs (bad) (bad) movabs adc ds cli xor rex.WB rex.WRXB je int rex.RB cs jno jbe rex.W cmpsl retq push incl jb rex.RXB leaveq jmp sbb rex.WX push div adc rex.WB repnz add rex.WRX insb gs xchg or lret jrcxz mov rex.WR callq sub fs sbb (bad) data16 mov (bad) pop or loope cs cmp rex.WX jl rex.WB or add xor (bad) xor lret sub and add mov cmp rex.WRX add rex.RXB fchs lods xchg in rex.WRX mov adc or xchg push push (bad) testl movsb mov je mov cmp movabs xor callq (bad) xchg testb mov (bad) sti mov mov or adc test imul adc mov mov (bad) push (bad) xor mov mov sar in jae push (bad) (bad) fadd retq scas xchg icebp xor (bad) sub push jno adc xlat sub shrb (bad) cli cmpsl adc cs (bad) fwait outsl jae repz adc rex.R adcl adc cmp xchg rex.X sbb cmp rolb mov jns cs inc (bad) (bad) jno sbb rex.WRX movabs xor cmp mov mov out sahf hlt rcrb (bad) lock imul add cmp movabs repz sub rex.W sbb int3 leaveq mov (bad) (bad) xor cltd callq push (bad) push xor or leaveq mov xor lret or (bad) sti hlt int3 jns cld cmp xor cs (bad) movabs cs mov fistp movabs ficom xchg retq test jmpq jno rex.RB movsl rex.XB (bad) xchg mov lock jmp or cwtl adc push lods add fisubl repz add jp xchg sbb mov (bad) cli stos jae rex.WRX and pop in sub test movabs jbe rex.RB stc sub in (bad) (bad) hlt or outsl cmpsl pushfq popq rex.RXB in test jmpq pop pop mov pushq (bad) xchg lock rex.WR add es imul mov xchg xor xchg or cs jne repnz adc (bad) (bad) fs fstpl rex.RX rex.WB mov add lahf stc jnp mov jbe mov rcrb sub repnz cmp fs out xor mov mov pop fistp repnz xor cmpsb pop mov jmpq retq adc (bad) xchg vmaxps mov outsb adcl rex.WXB mov xchg repz (bad) in rex.W mov int3 rex.X xor mov outsl (bad) push mov and mov jno loop rex.X je rex.RXB rex ds push (bad) (bad) jrcxz mov (bad) dec adc je fstpl mov rex.X (bad) sub in in jmpq test rex.WXB jg (bad) mov mov int3 rex.WB movabs outsl mov add xchg popfq rex.RB loope rex jae retq fxch (bad) add scas insb (bad) callq rex.WRB rex.RXB stc in (bad) leaveq je (bad) mov add test loope mov imul rex.WR movabs pop hlt or sbb push je and (bad) icebp callq mov add or scas mov out fnsave (bad) iret test imul iret push adc xchg sbb rex.WB xchg add cmp (bad) adc leaveq js test ja sub or cmp js test out sub (bad) xor and out sub test or fisubl cs push mov xlat (bad) icebp xorl (bad) test test adc hlt repz cmp fdivrl pop lret in rex.RX lret or pop mov xor out (bad) jno rex.WR jmpq int pop cmp rex.RX icebp or test rex.WXB out xor (bad) xchg xor rex.XB rex.RX div sub sub movsl fmul out test mov jmpq (bad) std fbld iret or (bad) cs (bad) sub mov (bad) mov rex.R and add push in pop mov lret or cltd (bad) movabs ds in test pop xchg mov sub outsl pop sub xlat callq movsl adc mull int sub (bad) shlb lret and cs pop test sahf mov push cmp in subl jns xchg ficoml fwait xlat pushq insb test rex.WR (bad) shll js (bad) in retq es pop retq (bad) movslq mov add cmpsb cmc pop out in rex.XB fnstsw out sub adc sub sbb fmul lea rex.WR movsb in pop xchg cmp stos mov add repnz (bad) or int3 push jo pop stos lret repz mov rex.R xlat push jmp rex.WRX rex.RB rex.W xchg mov add lea xchg mov cmp mov pop xor fs divb out and mov iret lods mov lret sub sbb int3 lods cs cmp xor cli cmc insl push rex.R nop xchg rorl xor repnz test std callq fsts mull rcll push jle lret jno mov negl sbb mov rex.WRX add retq lret movabs rex.RX fisttp jno popfq lret sahf movsb movabs (bad) in loope (bad) frndint andb fmul pop enterq (bad) sub push jmpq std fild imull test xchg jmpq rex.RX pushfq retq pop add outsb repz cmp scas in fiadd jrcxz cmpl loopne or (bad) retq retq rex.WRX (bad) repnz pop movabs pop int retq (bad) mov movabs lret clc sub mov out rex.WXB cs (bad) jno hlt gs in test adc repz std (bad) sbb out cli (bad) sahf lret and sub xchg sbb fisub mov and xchg (bad) pop xchg movb int pop sub int3 callq jno icebp sti jge popfq mov push cltd cli iret mov (bad) add rex.RX add int add cld icebp sub xor add fmull jmp imul (bad) outsl cmp je rorl and or (bad) (bad) sub retq jl mov or repz push in (bad) xchg enterq (bad) jae divb scas retq stc (bad) sub jo callq and mov xor rex.RX xor lea rcll (bad) rex.RB cmp and test cmp rex.RX xchg xlat xchg pop rolb in popfq insl (bad) mov addr32 in mov fcoml test test cs xchg add pop movsl mov (bad) mov test (bad) cmc mov add psubsb jae mov sbb mov insb sbb out sbb cs (bad) sub (bad) and sbb test and cli loope adc out mov xor or (bad) sub outsb movabs sarl mov rex.WR push (bad) ja xor (bad) mov movabs push sti (bad) mov ss xchg retq iret int3 lret rex.RX (bad) testb cs cmpsb xor mov lock cmp loopne and fbld (bad) lock adc movabs xchg mov loopne loope add nop mov push (bad) fistl push cmpsb mov rex.R mov out pop lret int (bad) retq dec mov mov sti (bad) scas sub xor callq xor fsubs insb rex.RX xor rex.WRX cs sub movb xor pop sbb jmpq and mov ss retq loopne or xor sahf sub jrcxz out add pushq xrelease xchg and orl cmp sub push (bad) sub (bad) sbb xor (bad) test rex fucom enterq fstl mov int test mov out movabs fdivp cmp jno lods jnp in xchg or mov clc cmc (bad) sub xchg mov add (bad) repnz jb,pn (bad) add sbb fisttp (bad) imul movabs pop pop sbb loopne jp cmp leaveq sub addr32 (bad) rex.WR cmp int3 jp rorl leaveq icebp flds addr32 test nop rex.WXB nop cmp cwtl mov jl jmpq (bad) (bad) lret icebp fiaddl movl es lret loopne (bad) pop sbb add out xor mov int3 cltd sub rex.RX (bad) jg jo iret rex.WB rex.XB mov sub add cs scas sbb icebp xor sub movabs rex.RX sub push lock cld mov in sbbl cmp add pop pop xor int cmp and xor rex.WR sbb rorl out js jge push xchg sahf negl or (bad) jno jrcxz sub (bad) callq add sub div test mov leaveq hlt jg sbb adc xor enterq loop and push in test or and sub (bad) pop (bad) (bad) icebp rex.RX test stc (bad) jns (bad) int push movl lret xor cmp xchg sub callq lahf in and clc sbb xor cli rex.WRX movsb jns std rex.WRX xor xor (bad) cmp fwait rex.XB sub mov and lret fisttpll mov jmpq xchg (bad) ja cmp cmc xlat loop and xor cs in enterq sbb xchg (bad) xchg test mov and ffreep rex.RXB repnz imul (bad) adc mov and add (bad) or mov repz (bad) ds insb rex.X (bad) (bad) mov int3 jge,pn fimul pop adcl retq vpsubd mov jmp (bad) scas leaveq stos outsl cmpl sbb jnp cmpsb retq pushq (bad) ja sub rex.RX rex.WXB sbb mov movabs fcoms (bad) xchg mov gs out cld imul jb cltd je push lea rex.RXB repz mov rex.RB and testl rex.RX or adc movabs jmpq movabs shl xor in add (bad) (bad) (bad) iret out rcll movabs jrcxz add dec xlat repnz in (bad) adc pop add enterq cs leaveq (bad) (bad) in (bad) lret out mov sbb out or movabs add cmc (bad) hlt (bad) lea lods ds lods pushq cmp je pop mov (bad) jmpq sub movabs popfq rol (bad) nop mov jmpq mov (bad) fistp lods fstpt in enterq mov mov outsb jrcxz jae movabs hlt sar pop jae out (bad) out movsb rex.R rex.R (bad) add in sbb cmp push or pop sti callq cli out in fimull fisubr pop loop pop cmpl (bad) movabs jle gs jmp movabs repz mov cmp sarb (bad) out xchg lahf pushfq and cmp pop lahf sub loopne (bad) mov test mov pop js push enterq cmp rex.WR loopne (bad) and cmp jae (bad) sbb (bad) (bad) rex.WXB mov rex.X stos test ficompl (bad) rex.WRXB pop xchg cltd roll icebp add lret test cmp xor sti adc (bad) lea jno jne xchg js add jnp jns (bad) (bad) add rex.WRX testl rex.WRX rorl rex.WXB loop out rex.WRB cwtl xlat xor test add and int nop in jne,pt adc stc mov or out lock add fmull (bad) (bad) fs orb fistpl xlat pop rex.WRX mov or pushq jns rex.W ds movabs sub repnz (bad) cmpsb push cmp stos push pop jp cmp add mov bnd sti add jae (bad) movsl jae (bad) lret je cmp xchg (bad) out cmp xchg in shl or (bad) (bad) movabs (bad) int3 add mov lock or enterq mov pushq sbb xchg test or movabs pushfq rex.WRB sbb jmpq pop mov (bad) cltd mov (bad) cmp cmc cwtl (bad) sbb fisubrl (bad) movsb sub (bad) xchg (bad) pushfq movsb leaveq pop (bad) mov mov (bad) (bad) rex.WX mov rex.WRB sahf rex.WX addl push cmp (bad) xor lret cmc add rex.XB cli jmp and leaveq add rex.RXB repz sub shll sub xchg leaveq pop push movabs repnz repz (bad) rol rex.RX cs cld notl sar push pop (bad) callq jge xlat div fisttpl jne int3 fisubr add pop add add loopne mov cmpsl (bad) add and (bad) test add push (bad) (bad) pop rex.R (bad) cld (bad) callq callq in icebp lret in rex jmpq rex.W xor jnp push xchg xchg imulb (bad) sbb retq (bad) sbb jo and imul pop jae jmpq pushq imul and rex.B rex.WB xchg push hlt mov or (bad) jns repz add sbb (bad) test leaveq xchg test in or insb mov mov lods sar ds jno lods or or jbe imul std (bad) test cmpsl add nop xor rex.XB and xchg rex.B (bad) (bad) (bad) stos xor insb xor pop push adcl mov pushq xchg add push rolb pop jmpq movabs (bad) hlt (bad) imul icebp negb imul rex.X mov jmpq jbe and hlt push adc movslq je in repnz (bad) xchg mov imul sub pop movabs xchg clc int andb xchg iret loope push (bad) mov (bad) retq sub repz (bad) data16 nop mull rex.WR and test and xorl leaveq xchg (bad) jnp pop fmull sub (bad) (bad) int3 push and mov sbb (bad) test loope cmpl add pop icebp or (bad) rex.WRX test out xchg movabs mov icebp cmp mov icebp adcl rex.W repnz (bad) (bad) (bad) incl decl int loope mov xchg or xor stc cwtl rex.W movslq xchg mov sub or mov movabs clc out decl mov out (bad) idivl hlt enterq js jmpq add out outsl mov incl hlt outsb rex.WB (bad) out test cltd mov fstpl movabs in jno je (bad) movsb movsl jns cs cltd rex.WX rex.WX lret jmp mov add or or xorl rex.WB lea sbb je roll or mov or add in (bad) jno adc lahf xchg in movsl sub rex.WXB sarl sahf rex.W sbbl in movabs or faddl stc (bad) rex.W (bad) (bad) int rex.W sarl xchg test out and mov or in xchg jb pop rex.WB mov rex movabs xchg and push xchg test mov popq icebp jl mov out sar movslq cmc xchg xor adc xor in insl mov pushq in test pushq in or jrcxz xchg (bad) mov cmpsb icebp xchg adc sub xchg rex.W (bad) retq sub sbb rex.W jnp imul (bad) out and mov or out in add mov loop pushfq icebp lock lahf xchg in movsl (bad) pop ficoml fnstenv cli jne cmp rclb enterq lods std mov sub jg push jo rex.WR cli mov clc ftst adc mov xchg xor adc lahf xchg in movsl icebp pop rorb jo je rex.WB lea jmpq rex.W shrl in (bad) sub ds cmpl in rex.WRB ds mov sbbl popfq rex.W roll movabs mov addl in sub jl sub in and and cmc jp pushfq test in (bad) icebp (bad) adc xchg mov xchg jl (bad) in mov lods out rex.WB (bad) and adc pop (bad) pop fwait rex.WRX sbb loopne sbb pop gs pop stc xchg movslq mov int rcll xchg mov mov xchg lea movabs jmpq enterq fstl cmc ror rex.WB test stc jns xchg imul xchg add jno or pop stc cmp lods in hlt movabs rex.WB mov xchg icebp leaveq stc rex.WRB int and rex.WRB (bad) xchg adc (bad) gs cltd out icebp orl add push leaveq insl rex.WRB icebp rex.B rex.WB rex.WB mov xchg jns push rex.WRB mov xchg sbb orl or add (bad) leaveq icebp rex.WRB (bad) rex.RB movabs push test or leaveq out icebp icebp adc loope jns sub rex.WRB and icebp cltd rex.WB add fucom mov xchg mov movabs jrcxz xchg pop leaveq cmc rex.WRB icebp rex.WB rex.RB stc jns xchg imul adcl sbbb pop xor mov push lock add push mov mov sbb lahf rex.RXB pop add (bad) cli lea (bad) pop flds movsl mov (bad) xchg rorl cmp rex.RX movslq mov test (bad) out ficompl sub int3 rex.W ror add ja sub out or fdivrp xchg and stc mov sbb repz push in scas sub sub rorl xor lret stc jo int cs (bad) jae lods push es rex.W adcb orl pop je stc leaveq loope sub (bad) xchg loope jmpq icebp out icebp jmp add (bad) xchg xor rex.RB and js jg or mov icebp xchg movsl mov sbb lahf sahf ja lahf adc (bad) test pop jl test (bad) loope mov add add in repnz in xchg std sbb sub mov mov (bad) outsb movsl insl mov retq insl stc jrcxz rex.W (bad) adc std gs cmp adc in lock jnp neg rex.RB cli rex.B cs rex.WXB retq popfq xchg pop rex add mov xor cs popfq sahf adc cmp add movsl rex.WXB shrl es pop (bad) xchg (bad) retq jrcxz (bad) or leaveq je rex.WB rex.WB callq out out (bad) test rex.RXB add pop rex.WRXB imul (bad) add int3 pop stc xchg hlt sub je lahf mov rex.RX mov in cwtd jmp (bad) xchg xor sti mov popfq cmp sbb movsb ja sbb (bad) mov loope test xchg mov callq jmpq xchg pop rex.WR test jrcxz xchg out pushfq add jrcxz xchg out hlt push out hlt rex.WR rex.WB je rex.WB lods movsl add movabs xchg in lock jle jo adc rex.WRX pop cmc movabs fdivrl fwait retq adc adc rex.R xorl sub in movsb lea in mov pushq jae movsl test (bad) movabs leaveq callq cs scas fadd and mov movabs cmc cmp sti nop push test cmc xor cmp xor (bad) or push sbb popfq cs cli (bad) jae int3 stos je sub jmp jrcxz stc nop sbbb cltd rex.RXB sub or mov jp movabs lock outsl jrcxz mov adc sti outsl out mov mov loope cld in mov jno adc outsb fs mov movabs mov mov scas outsl movabs mov jno shr testl adc or cmc jrcxz push mov mov nop pop xchg adc leaveq jrcxz outsl imul in je adc adc jrcxz cmp pop jne insl xchg (bad) callq cmp scas fidivr movslq rex.RB jbe (bad) frstor sub add jae cwtl lret movabs in retq rex.RXB (bad) xor enterq pop iret and rex.RB icebp icebp rex.RB cs in fwait (bad) rex.WB imul pop (bad) adc leaveq and adc jno (bad) iret mov add push xchg sub cmp jrcxz leaveq push in pop cltd movsl (bad) loope int3 fcoms insb or (bad) in fwait roll cs (bad) movabs mov (bad) cli lret movabs sbb movabs test leaveq insl sti mov rex.WX pop movabs add mov cs jno cltd loope callq mov rex.WRXB test rex sbb rex.WRX rex xchg xchg add shlb fnstenv rex xchg out fst mov loopne jbe cmp (bad) and rcl sti out shlb iret in enterq loope xchg rex.WB (bad) cmp enterq xchg sub jae add mov mov data16 rex.WRXB and rex.RXB sahf shll leaveq pop (bad) mov sub mov in adc movsb rex.WXB pop clc rex.WXB jle cmp leaveq push jmp or cs clc jrcxz js sti vaddss cld movsl (bad) mov xchg rex.WR fsubrl push movl rex.B or fdivrs mov (bad) iret sbb ja rex.XB movabs (bad) pop andl jae test rex.WR es subl push rcr push mov fild sub pop movabs jne ljmp xchg insb imul imull rex.R rex.WB ja cs mov mov mov xchg repnz rex.XB xor push icebp sbb fld pop mov movsl test (bad) mov cs std jmp out (bad) int pop lahf (bad) (bad) sti rex.WRXB pop rorb rex.RB retq mov mov (bad) mov rex.WX rex.WB pop leaveq flds (bad) movabs outsl lahf hlt jns and lret fbstp sbb push cli sub push xchg in cmp fnsave cs fwait jrcxz int sbb and sub movslq add xchg xor rex.WR jmpq in mov cmpsl (bad) repz rex.WR add fst rex.R data16 rex.XB rex.RX rex.WB movslq or push (bad) rex.RX rex.RB or movabs jle xor sub xlat pushq repz mov enterq mov (bad) mov imull js rex.W imul push (bad) and sar repnz add (bad) hlt cs je (bad) rex.WB je mov add (bad) lea in mov mov add stos and adc add lods fildll mov cmc push enterq xchg or movsb (bad) leaveq nop rex.WRX in loope rex nop jae imul xchg (bad) loopne (bad) fnstsw loopne push (bad) lock sub rex.R jns cltd mov fcmovu hlt or mov cmpsl (bad) lret rex.WXB (bad) imul rex.RX addr32 mov rex.WRX adc (bad) mov (bad) and add pushfq rex.WRB stos pop fcmovnu enterq (bad) or cmpsb mov adc rex.RX or adc mov rcrb out ss icebp scas movabs mov add mov add lods (bad) xor retq cmp (bad) repnz in push iret (bad) hlt int3 (bad) frstpm(287 (bad) icebp insb adc xchg rex test jns sub adc jae imul xor fiaddl (bad) leaveq (bad) iret cmp cmp xor and imul fdivs adc xchg xor (bad) mov sahf sub cmp cmp (bad) ja fstpl and pop or in add jg adc mov add imul mov cmp out jae sbb stc mov push loop (bad) cmpsb fdivs insb fwait or rex.RX xchg outsb mov fdivrl push adc lret retq callq sub jae sub scas (bad) jrcxz pop icebp adc mov jae sbb test (bad) sbbl rex.WRXB notb iret repz mov fildl ja fs sub rex.WX rex.WRB jrcxz and pop xorl jbe fwait out in notl cmp movabs js xchg cs rex.XB rex.WB sub (bad) push (bad) and push rorl cmpsb adc movabs adc xor std jae jrcxz lea xchg xor push (bad) imul fnstsw rorb xchg cmpsl mov (bad) fild adc and rex.WRX or enterq xchg cmp mov rex.RB addb add rcll mov enterq xchg lret add (bad) out mov sub test icebp jae (bad) out leaveq mov insb scas xchg fdivl (bad) mov (bad) (bad) int je sbb xchg push push lods push vorps pushfq rol out in test (bad) stos cmpsl ds negb pop cmp fcompl push enterq nop (bad) sbb xchg std or cs fsub xor rex.WR mov iret xor sub and loope sub lods push pop loopne out retq adc mov xchg retq loope test data16 rex.WB sub rex.WRX movabs mov fstpt mov callq mov out (bad) cli adcb mov (bad) pop in cltd repz push (bad) mov rex.WRXB retq jns movb (bad) addl (bad) (bad) xor sub pop cmp movsl and xchg rex.WXB mov jmp mov sarl (bad) add scas or jg add and adc rex.X rex.XB (bad) nop outsl sbb jo fldlg2 (bad) hlt pop imul jae in sbb in mov (bad) cmpl rex.X mov (bad) imul mov movsl (bad) movsl xchg jmpq fwait sbb jrcxz hlt cmpsl mov mov jp clc in xchg add mov cld jmp add leaveq rex.X adc out sti xor rex.XB fidiv icebp test out sub leaveq jb adc rex.B hlt add pop mov rex.WR push rex.WX loopnel rex.W jno addl cltd clc mov or or int cs rex cmp mov (bad) and hlt sub mov (bad) (bad) cs adc xchg (bad) (bad) loope orb push xchg jg sbb mov loope loop adc cmc mov in mov cli hlt sub cmp jg xor mov pop in cli push leaveq cs leaveq movsl scas xlat pop xchg jne sbb jns enterq addb mov test leaveq cmp xor stc adc (bad) leaveq cmc sub shll cmpsb out loope xchg test cmp adc jns mov jle jrcxz xor clc icebp icebp rex.B sub out (bad) repz movslq es mov out cmp (bad) sub fcomp jp or fmuls rex.WXB hlt (bad) jrcxz (bad) xchg lret sarb test xor fistpl lret cli movabs (bad) rex.WB testb pop in cmpl sub fisttpl add pop (bad) xchg rex.WRX mov int sub and adc (bad) mov test fnclex je es pop enterq add pop (bad) rex.WR pushq push sub bnd (bad) sbb movsl hlt imul cs (bad) push andl std popfq enterq add movb in or repnz mov xor mov mov add vunpckhps cmp jns or cmp jb popfq rex.WR imul pop idiv xor ss lahf icebp add icebp lret repnz (bad) cld in rex.WR fmuls nop in (bad) pop sbb repz sti xchg (bad) out rex.WRB rex.B sahf int3 xchg push inc out add jns lret push pop rcrl rex.RX movsl movsl repnz mov adc mov mov (bad) (bad) fist cmpsl and mov sbb leaveq fcmovnu mov test and jb rcll or rex.RB lret pushq enterq nop add xor (bad) sahf icebp rex.XB in fnstcw sbb sub lret pop (bad) pop (bad) in pop movsb movabs sub fwait (bad) mov adc (bad) mov prefetch pop (bad) movsl adc (bad) hlt clc fbld xchg incl cmp xor rex.WR adc sub clc pushq add xlat and movabs adc adc cld (bad) icebp mov (bad) mov movsl imul mov pop clc rex.R mov xor movabs retq pop rex.X adc lea lock je in nop clc mov movsl jo sbb pop fwait gs or pop jmpq rol rex.WXB cld push mov leaveq fildl adc sbb jg rex.WR rex.RB out (bad) add rex.WRX (bad) fnstenv mov cmpsb subl in leaveq cmp sbb out lea movabs (bad) sub mov mov leaveq push movabs in pop mov adc (bad) int add test retq cmpsb jge and xor jbe hlt in jne cld outsl test (bad) test xor ficom cmp test movabs divb pushq in cltd or and test add xchg fdivr pushfq out pop mov mov mov cld (bad) cltd mov push lea (bad) sahf sbb jrcxz mov jbe movabs (bad) mov mov out sub jbe insl incb xchg xor xchg fld rol (bad) rex.WR sub in xchg or add cmpsb loope rex.WRB stc cmp popfq rex.WR xchg mov sbb insb popq retq lret ficompl push repnz retq test xlat (bad) lret retq xchg shufps rex.WXB lret rex.WX xchg icebp adc mov sub fisubr sub (bad) movabs sbb (bad) add pop (bad) (bad) xor rex.WR xchg nop cmp rex.XB sub rorb jo fdivr int mov idiv sub shl cld xchg lods repz sub clc rolb (bad) jne rex.RB sbb sti (bad) (bad) rex.RX nop lods rex.RB add lret repz mov lret inc movabs rex.WRX and sarb ficoml icebp xchg movabs stc xchg rex.B test or or and jp int3 mov mov cs or lea sub mov leaveq cmc xchg and loope in jne jp (bad) mov cmc incb out push mov and (bad) ror cmc fmull retq rex.WRXB cmc pop callq mov sbb movlps mov ds ss movabs xchg xchg movabs loope sub sbb (bad) xchg mov mov add rex.WRX shrl rex.X (bad) (bad) rex.RB cmp stc pop in sbb popq out movsb rex.XB icebp mov (bad) pop pop test push cmc (bad) mov xor callq movabs pushfq popfq pop mov movslq mov (bad) mov mov xchg retq add xor rclb rex.WX int mov (bad) nop sbbq (bad) mov xchg scas (bad) repz (bad) (bad) stos jrcxz mov (bad) sub sti mov xchg (bad) sbb mov (bad) jno,pn jrcxz add lret (bad) jno (bad) fwait vaddsd sbb (bad) pop (bad) (bad) bnd int and lock fstps cmp push (bad) mov mov test cmp (bad) in icebp fiadd in rex.X mov and insl cmpl cs rex.WRX int or or mov pop xchg cmp mov fildl xor std cmpl out in rcll cmp mov push mov lcall and test mov repz and fwait cmp cmp fisttp fild mov sbb xchg movabs push jl es xchg mov mov addr32 fstp stc rex.RX sub add ja movabs fwait and pop or mov cmp (bad) fiadd lret rex.B sub out addl rex.B xchg es xlat rex.W rex.RB cmpsb movslq jrcxz leaveq mov popfq (bad) rex.WXB (bad) shll or sbb fdiv movabs cmp adc retq and (bad) int3 mov ja cmpsb cmp faddp push add mov jp (bad) fnstsw push cs rex.XB (bad) gs (bad) xchg clc (bad) imul or movabs movabs push xor stc (bad) movsb movabs xrelease pop movsl iret callq adc out leaveq retq and mov mov rcrb mov cli rex.WX jg,pn rex.WB stc push shrb repz push sub mov rex.WB in retq and sub add xor pushfq add push fmull jns xor sub (bad) push repz lret clc lods addr32 xor jge int in xchg callq in push jns xor mov addr32 (bad) fs jp add repz testl repz fstpl loope sti sub sub std jno (bad) notb outsl je enterq movsl insl jrcxz movabs std test iret stc (bad) mov sarl fs iret repz rex.XB mov (bad) push xlat mov xchg jmp pop movabs mov test and bnd retq (bad) jmp loopne int (bad) rex.WR push jae fcoms retq mov xlat mov sbb pop pop rex.WRXB jge,pn nop imul adc mov retq xlat or imulb jmpq clc cli leaveq rex.R mov je enterq in movabs mov (bad) andb xchg ja mov pop sub sub jrcxz pop andl rex.RB in pushfq sahf shrl or stc (bad) xor adc imulb cmpsl sahf (bad) mov or icebp callq push (bad) repz callq or push std clc sub mov notb rex.RXB repz js cmc xchg testb sub jmpq rex.XB cmpsl test out in (bad) pushq push (bad) xchg jb cmc movsb (bad) xlat mov jno je rex.RX ss jp leaveq mov shll xlat rex.X and lea imul jmp rex.RB fistp mov movslq in fprem1 jns pop loope (bad) retq pop movsb ror (bad) pop notl movsl in mov rex.WR (bad) mov sub xchg push std pushq cmpsl sub (bad) movabs jmpq retq (bad) cmp out addl insb mov pushq mov (bad) cld push int fistpll (bad) sub jns (bad) fcmove (bad) jb movabs mov pop rex.WX mov mov retq ss shl jbe lock movabs rex.WRXB jp fstpl add mov xor (bad) mov fisub fstp and lods jl cli rex.WRX test (bad) cs lea mull out mov mov repnz or jmpq rex.WXB pop (bad) rex.RXB testb lcall rorb xor stc xor mov repnz cmp mov mov cmp andb jrcxz mov add neg (bad) cmp cmp out or callq lods jg pmulhuw (bad) push leaveq jns rex.XB xchg mov fiaddl mov cltd lea js (bad) (bad) jbe movsl mov or orl (bad) cltd (bad) imul (bad) loop xor xor (bad) adc rex.B push add loope jno (bad) pop mov (bad) jnp sub add (bad) cs stc or retq cs (bad) add loope int3 lret rex.X (bad) fbstp (bad) enterq add outsl rcll imul push sub sub pand jmpq rex.WRB mov mov sub xor fstps (bad) idivl adc xchg cld add ja pushfq lret mov sahf lret or loopne jno mov movsb mov add mov shll es rex.WXB retq subl (bad) pushq hlt cli pop or jge in or in retq mov imul xor (bad) (bad) in imul movsl mov add sub rex.R or test cmp pop sub (bad) cmp fdivs (bad) (bad) (bad) retq jno retq lret mov cmp lea cmp sub mov int jo mov mov mov int (bad) jmpq sub sub and sub test cmp sub enterq cli retq push cmc imul gs fwait movabs (bad) xchg (bad) and ffreep adc testb or cmpsl xor jg (bad) (bad) add fnop cmp out (bad) cmp test (bad) retq add js adc jns rol movabs push rex.RXB (bad) mov and int3 mov sub jae jmp rex.RB outsb in xorl mov mov sub and xlat sbb mov (bad) or xchg cs in or mov (bad) or (bad) mov callq fbld repnz sub pop mov sub imul adc js pop scas pop outsl push or test cld jmpq pushq (bad) mov push or cltd sub shrl retq sahf add (bad) retq lea cmp xor sbb negb rex.WRX and rex.RXB add imul sbb retq cmp add mov sub adc sbb pop movabs rorb sbb movabs and mov in loope (bad) rex.RX push xor lret xchg test jp jns cmpb sub cwtl iret pop fnstcw xchg fadds sbb (bad) jp push rex.WXB (bad) (bad) leaveq movsl int int3 retq or retq push shlb pop iret iret adc jrcxz lock sub mov mov fmuls (bad) jmpq fsubr push mov xchg or sahf add and xor cmp (bad) rex.WR (bad) sbb loope int imul sub int3 lahf mov fcmovu leaveq (bad) in (bad) mov mov (bad) mov enterq xor mul pop clc sbb (bad) out stc push xchg cvtpi2ps mov rex.X orl je sahf mov (bad) sub pushq repnz adc or cmpsl gs fdivrl (bad) or and jb leaveq enterq sbb pop lahf jno sbbb cld (bad) pop (bad) lock sbb mov movabs repz int3 (bad) movabs in lock mov (bad) movabs sbbb push je rex.RX gs test sbb stos cmp js fwait jle xchg jnp or push sbb sbb push jns sbb lods sahf rex.X je add insl sbb movabs out pushfq (bad) addr32 push (bad) shrb cmp retq rex.WRB mov (bad) sbb retq mov (bad) xor icebp int3 movabs mov sbb (bad) lods sub (bad) cmp fildll adc lock pop sbb (bad) or movsb add cmp lret pop mov pop in repnz or adc fildl in mov orl cmp jrcxz jmpq sbb cs sub mov fdivl rex.WRXB rex.X jp mov repnz cmp xchg retq xor (bad) push lea (bad) ss cld sub icebp and retq cld test cltd pminub and mov shrb cmp cmc fdiv mov (bad) enterq int mov ss (bad) sub jbe mov hlt (bad) (bad) mov jnp jb (bad) xor or stos addb (bad) or jmp jrcxz rcl (bad) callq movabs movabs jno shr (bad) push fs outsl data16 pushfq cmp gs test fisttp retq (bad) clc movsb mov xchg test (bad) jns cld movsb movabs xchg std pop rex.RB fisubr mov push xor (bad) cmp fs out mov icebp negl jge callq add lret (bad) rcl enterq roll movabs outsb (bad) push (bad) enterq (bad) (bad) in jl add cmp xor js cli leaveq push xor movsl push rex.WRB jl rex.WRX stc xor pushq add pushq (bad) jno mov mov push mov mov xlat rex.RB fdivs leaveq movabs (bad) fs pop (bad) movabs mov push sub sub jnp mov or mov (bad) add or push xchg jbe fistp fild out (bad) xchg rex.B lock mov insl pop fnop out fidivl lea int jae lods xchg sub fcomip test (bad) (bad) jmp movabs jl pop out jbe js add xchg add mov xor jp in sbb ss (bad) ja pop rex.R data16 notl adc mov (bad) movabs jl mov rex.WRX mov leaveq hlt (bad) mov lods rex.RB movb pop div rex jl sahf or rex.WRX fbld fcomp sub cwtl movabs sub mov add sub flds mov stc leaveq cli loope fldl cs stc test (bad) clc xchg mov sub pushq gs stc or xchg (bad) cltd mov movabs (bad) mov jbe subl mov rex.RX (bad) sti rex.RB jno retq adc (bad) mov fisubr cmp retq (bad) retq xchg out (bad) movabs sub or retq shrb psrlw rex.RXB retq xchg rorb mov (bad) xorl outsl mov jb rex.WR (bad) fcmovnb (bad) cli fsubl mov (bad) (bad) lock jmp mov outsb rex.WRB fsub xchg (bad) sub outsb rex.WXB mov jne enterq lods leaveq (bad) insb dec int lock lock leaveq (bad) data16 lret out cmp mov (bad) rex.RX pop cmc rex.XB repnz test push icebp xchg enterq out adc cltd fs xchg loopne add sub ss mov add (bad) jnp xor push mov hlt pop cld lahf and and int rex.R xchg movabs (bad) mov and pushq xor in or rex.WB clc (bad) movabs loopne and gs cmp mov sbb or test cld fwait and sub repz rex.R add push add enterq lahf sub add mov fbstp (bad) mov callq out sbb nop xchg rex.WR (bad) mov (bad) mov rex.R sub shrl jne adc xlat push mov mov insb push mov flds add repnz cs iret jrcxz (bad) rex.W add (bad) cltd and (bad) mov (bad) lahf push mov jo xchg add in rclb mov fs pushq es mov scas push cmp in xor je stc fwait xchg test addr32 pushfq and insb sub xor pushfq mov pop cmp (bad) repz (bad) (bad) scas cltd hlt mov insl stc iret test not sub imul popfq in test rex.WB cs xor sub add (bad) lret or outsl mov cmp and rex.WB mov insb rex.WRB sti addr32 rex or cmp xchg outsb push sbb or adc and or add (bad) push leaveq mov pushq rex.WRX (bad) xchg rex.WXB (bad) ja rex.WRXB xor or and imul loope lock jnp insl mov (bad) cmp sub lret icebp pop pushfq repnz (bad) cmc mov mov shrl (bad) mov sarl xchg adc scas sti gs adc xor (bad) sti jge (bad) jae cmp out adc cmpb callq fmull pushq adcl (bad) movslq rclb mov test fldcw cmc pop mov mov in mov add sbbl (bad) test cmp mull cmc (bad) xor sub fnstenv add int3 rex.B iret mov stc ror nop callq rex.WXB add enterq sub out rex.W stos shr (bad) callq xchg (bad) (bad) mov (bad) jno adc pop cltd xchg (bad) xchg jb out icebp rcr (bad) (bad) pop frstor sub in int cld lret (bad) cli or mov hlt rex.WRB rex.WR retq lods iret pop enterq pop stc pop pop mulb decb xchg (bad) pop fisub sahf sub repnz push (bad) loope rex.W add sbb rex.X gs insl cmp rex.WRX sbb rex.W (bad) (bad) adc rex.RX fisubrl fcmovne jno adc mul (bad) xor jb (bad) pushfq js negl rex.W pushq xchg scas adc stc (bad) and cmp mov fild or mov (bad) in (bad) mov int3 (bad) mov sbb (bad) (bad) (bad) repz enterq fbld callq fild out in test lahf xor xor fcoml test rex.WB xlat stos lret faddl (bad) movsl idiv sahf or repz clc movb rex.RX xchg (bad) xlat mov (bad) cmp loope retq jbe xor (bad) jg rex fwait out es mov jnp rex.X rex.XB rolb mul mov or retq (bad) leaveq (bad) ss adcl (bad) and sub (bad) sbb retq push xchg mov in test (bad) cmp fldl loopne add xchg xor movabs pop leaveq retq pop repz xor xor iret lea (bad) hlt sub lcall xchg (bad) rex.RX (bad) negb shrl (bad) sub push je stc pop rolb pushq xor jbe gs repnz cmp lret xor test adc loopne add xchg imul (bad) (bad) xchg loopne mov (bad) loope xlat repnz lret pop mov icebp cmc jl std int3 xchg lock add scas mov cmp imul sbb out sbb lods and xchg (bad) (bad) (bad) notl sbb xor cmp or in lods mov adc cltd adc jrcxz mov lea add add cmpsl cmp lock movabs hlt retq (bad) in retq iret xchg iret push movabs (bad) cmp jb cmc xor out (bad) (bad) jno imul mov jmp xchg js jmp jmpq (bad) xchg rex xor xor rex.W sub push or rex.R enterq pop callq jmp mov (bad) fwait lea ja and fisubl add mov xor mov (bad) rex.R insl add sbb in imul adc sahf insl pop xor (bad) rex.WRXB leaveq test xchg addb sbb sbb pop (bad) (bad) retq iret xchg movsb fstpl int rex.B (bad) cltd mov loopne and mov fst add sub or hlt cmp enterq pop shll add int3 jle cmp (bad) loope je rex xchg (bad) fidiv (bad) outsb cmp jnp movsl sti hlt sub mov rex.R clc sahf mov (bad) add scas loopne pop mov sbb mov subl (bad) (bad) jbe outsl xor sbb (bad) cmpsl jno std (bad) xchg loope mov icebp enterq je sub imul repnz add jbe clc cmpsl or clc repnz jl xor int jnp iret test jmpq (bad) int sti cli adc idivb cmp (bad) add xchg xor in leaveq and lahf push loop mul int or int3 rex.WR xchg add fnstenv (bad) pmulhuw xchg out (bad) rex.WR (bad) mov sti movaps cmp scas cmp fadd jns jmpq in mov pop xchg outsl mov lret imul mov test (bad) or int3 xorl lock cld pushq and cwtl jp fidivl lock rex.WRXB rex.RX push sbb jp add (bad) (bad) rex.WB mov leaveq jge rex.WRX fstps (bad) nop (bad) jno rex.WRB cmp stc cld test (bad) lret cmpsl in jg stos jbe pushfq jge cmc int3 (bad) rex.WR cmp cs or mov in insb jg addb adc mov rolb cld and adc movb jmp push rex.XB push add movslq leaveq cmp and and insl (bad) or mov sbb rex.W data16 (bad) (bad) movabs push test lret out (bad) cmp rex.R mov popfq std pushq rex.X xchg lods jae movabs lret pushq loopne or sub popq xor (bad) callw mov movsl rex rex.WR test mov test lock in subl jns rex.WXB icebp rex.RX rex.RB (bad) (bad) (bad) (bad) lret mov mov push je loop imul pop (bad) movabs cmpsl rex.WR push sti std (bad) out push xchg xor mov mov lahf (bad) (bad) jmpq push mov mov mov out mov xor fs (bad) sahf (bad) mov retq (bad) and rex.RX mov mov add gs leaveq stc clc je pop sub or (bad) lods sbb cld xor (bad) roll pop stos mov sbb mov (bad) pushfq fistp cmc rcrb in mov nop cmpsb fldl2t js rcrb out sahf rex.WB rex.B mov or out (bad) repz stc mov retq shll test cmpsb gs repnz sti cmc or pop iret andl jg add (bad) callq leaveq lcall (bad) (bad) mov movsb add xchg jbe or sbbb je jrcxz mov rclb cld fcmovne loopne ds pop (bad) jmp push in push (bad) hlt sub adc xor rex.WR out rex.XB (bad) mov (bad) sub mov in or mov rex.WR or mov sub mov pushq icebp jmp add stc rex.WB movabs cmpsl fmuls ss adc rex.WR lock pop loope fyl2xp1 or testl xchg insb push pop mov sub cmp test pop movslq sub mov nop (bad) in movabs in xchg rex.RB repz cmpsb hlt add xchg movabs imul push leaveq mov fsubl sar or sahf push mov imul outsb in sbb adc insl cmp cmp mov (bad) mov movabs fcmovbe ror pushfq pop icebp jae sbb sub movabs sbb stos xchg stos movslq xor movabs (bad) sbb or js mov mov rolb cmc sub mov jno xor rex.B push repz retq (bad) movsb rex.XB vpsubsw out mov test std data16 (bad) callq cmpsl (bad) or lods movsb rex.WR imul leaveq int rex.WRB rex.WR movabs pop (bad) repz sub rex.XB rex.RX rex.WR sub int3 rex.RXB movsb push add (bad) leaveq xchg xchg and in xchg outsb out int3 rex.WR ss rclb pushfq movabs (bad) push mov rex.W outsb es xchg push mov loope mov rep movsb sbb (bad) cmp sub mov mov rex.WR sub stc jrcxz mov movabs or xor gs fcmovbe out faddl rex.WRX xor int3 pushfq test cmc jmpq retq xchg repnz rex movabs mov (bad) add mov add mov test mov rex adc mov xchg fisttp rex.B out cs loopne rcpps sub pop retq scas xor (bad) sub and icebp sbb sahf xor or mov or popfq jo clc jb (bad) cmp std test jg fisttpl cmp lea (bad) fldl test (bad) psrlw cmc out cmpps sub pop loopne (bad) in xchg (bad) mov subl push mov rex.WRB je (bad) (bad) xor lret addr32 vpaddb fmuls (bad) rex.R (bad) (bad) mov (bad) rex.WR cmp rex.R fmulp sbb insb fisubr sbb lods leaveq out (bad) test ljmp rex.WB rex.X (bad) test repnz mov adc insl xchg sub std fcmove sub lods push hlt imul loope movsl cmp out cmpsl jno pushfq jrcxz notb int push add retq sahf cld push icebp leaveq int3 popfq (bad) stc mov mov or rex.WB shll test stos xor pushfq xor notl xchg (bad) adc rorb jl subl and pop lret addr32 out fidivl in adc fistp xorb push and pop movsb sbb mov xchg test jge roll enterq loope,pn xor (bad) pop push mov or xchg add sub scas out jmpq push rex.R pop out mov fisttp scas stc rex (bad) callq (bad) pop je fstl mov test in test rex.RB sub or (bad) add sub pushfq mov jno (bad) ja rex.R stos int (bad) std jp icebp (bad) rex.WR xor in adc adc xchg rex.WX sahf (bad) movabs int out add roll test in xchg lret mov rex.WX rex add fcompl rex.RB push enterq cs (bad) lret xchg xchg add movabs or xchg loopne jne add mov and (bad) sub rex.XB jns (bad) add push ror insb xchg movabs sub (bad) lahf sahf push out enterq icebp ja and xor mov enterq push rex.WX and (bad) push mov sbb cmp add callq xor lret (bad) movabs adc jno,pn sbb mov add push icebp fucomp add lods cld (bad) andl scas fwait adc cld rorb mov lret mov movsl xchg (bad) (bad) (bad) rex.WB rex.WRX mov pushfq out or rex.W sub loopne rex.X imul pop jmpq mov mov sti enterq insb (bad) out testb add or nop in pop cmp or fmuls loopne icebp sahf (bad) or imul add movabs test rex.RB rex.WRB (bad) or xchg xor (bad) retq pop ja (bad) pop cld lahf outsl mov test movabs or mov or add adcl xchg (bad) jo xchg nop mov and mov push sub mov (bad) xchg (bad) adc imul mov (bad) cli (bad) sub rex.WXB jmp jno mov fcoms cmp (bad) pop cmp (bad) mov add sub gs mov mov mov mov xor add (bad) pop xor mov int3 rex.WXB (bad) leaveq pushq rex.WX leaveq sbb mov xor inc push leaveq sub ffree sbb mov je sub mov (bad) adc jae rex.W (bad) repz xchg cwtl (bad) scas lea negb imul rcrl cmpsb rex.WR cli movabs stc mov (bad) jrcxz in fidivl sub or addl mov jo iret lahf (bad) cmp int3 test rex.WR retq sbb (bad) or rex.WRX jae mov test vmovd push jbe faddl and clc test (bad) xchg std (bad) xchg pop sub add test rex.RXB iret popfq mov lret rex.WRXB rex.WXB lods ljmp imul rex.WB rex.B mov pop js sbb icebp (bad) jrcxz jns and icebp push retq fnstenv rex sahf (bad) add in sub int cli pushq jnp in xchg xchg mov (bad) or xor push (bad) xor xchg sbb or (bad) jno xchg callq (bad) movabs stc xchg (bad) ds sarb sub repz pushfq mov (bad) cmp movslq retq sbbl div rex.W sbb ds (bad) mov mov imull stos mov (bad) xor movabs and (bad) (bad) (bad) adc (bad) cwtl or mov cmp and cwtl movsl mov fdiv add loop sbb fstps mov xlat pop movabs addl sbb ficompl icebp mov (bad) mov cmp adc icebp cs movslq lret mov pop xchg pushq adc add jae insb clc rex.W rex.X movsl movl lahf mov jg mov movabs or pop xor xchg (bad) test add imulb adc pop rex.WRB loope cmc out div mov pop (bad) (bad) (bad) fcomip pop mov cld loop xlat mov mov out rex.RXB jmp (bad) callq jne ss fsubrs rcrl jp xor lock jae (bad) push pushq (bad) mov test mov leaveq fs icebp rex.R xchg orb rex.X or xchg sbbl mov cmp test pushfq movsb mov (bad) in icebp (bad) or pop mov push lea out or out add cmp (bad) jnp int clc mov icebp jle mov mov or xor adc pushfq js in rex.WRX pushfq (bad) int3 orl (bad) (bad) repz sub (bad) repz movabs pop push cmpb movabs nop (bad) test rex.R rex.RB add adc xchg stc push add rex.WRB push xchg add cmp pop add pushq mov xor (bad) or js test insl adc repz rex.WX rex.WRB jrcxz std jno xchg out xchg js and callq sub fldt and and out jne shl mov (bad) (bad) test jge xchg (bad) jae clc insl lret jbe (bad) cld mov repnz test sbb je rex.WB sarb or (bad) out fistp add sub rolb push (bad) hlt push std cmp mov or xchg push jrcxz js stc mov iret clc movabs (bad) push in ror jnp fwait xchg adc subb in movsl movsb mov and pop (bad) add or push pop icebp rex.WB mov (bad) pop push mov movabs out xor negb cmp repz xchg cmc int3 push rex.WRB or hlt mov jmpq jbe addr32 pop mov retq fcomps jge xorb xor fdiv adc retq sub (bad) (bad) (bad) in movsl mov mov rex.WRX sti xchg (bad) sti decb movabs (bad) (bad) pop fld adcl sub xchg jrcxz movabs xchg mov leaveq int push stc lret repnz scas or add or enterq out jb rex.WRX jp add (bad) insb clc rex.B adcl rex.X jo (bad) addl adc cmp rex.RX (bad) in mov (bad) jae jno cmp rex.RX std stc rex.WB hlt or (bad) sbb je or cmp rex.WRX and lret hlt mov js sub mov ds and cmp rcl mov (bad) mov sub cwtl mov mov movabs (bad) fimul adc test or mov cwtl vminpd sbbl sahf rex.WXB push sarb cli sub shrb hlt idivb jno seto xchg imul sbb fwait adc add cmp movsl fldl jle (bad) leaveq icebp out loopne jmpq sub adc adcl fild stc or sub xchg jmpq (bad) (bad) cmp and movsb je cltd xor sti in (bad) fisttp mov lock repz cwtl fwait mov and (bad) xchg fisubr or scas rcrl xchg in xchg xchg rorb popfq retq cmpsl jl insl cs xchg pushfq clc (bad) (bad) movsl rex.RB retq movabs xchg idivl add out push sub sub add mov or fnop (bad) pop subl sahf jno add fcmovu jmpq hlt push mov cmc fucomp or sarl sbb leaveq popfq add fisttpl add movsb ja and out in jno sub and rex.WRX rex.X (bad) callq cmpsl jae sbb jmpq jae (bad) scas mov fs imul jae sub pop rex.B rex.W pop cmc rex.RX repz leaveq push test scas sbb cltd leaveq mov pushq adc cwtl (bad) rex.WR test leaveq jns pop cmp imul (bad) callq (bad) fidivrl rex.WB xor and xchg mul lret push jp int icebp pop (bad) iret pop movabs (bad) rex.WB movsl sbb add movabs pop repz (bad) orl mov (bad) sub sbb rex.WRB test fistl xchg mov jnp jl cmpb imul cmp push adc movsl pop cmpsb cmp insb test jae xor jae push lahf xchg std notl test sahf mov ror lret sub add (bad) jp and cs icebp lock out (bad) rex.WRX stos loope lods xor fcompl icebp pop pop iret jno clc or repz (bad) movabs mov popfq push rcrb int cmc mov in rex.X jae subl mov jmp mov mov icebp cmpsb je insb lret xor jno popfq or cmp jne je (bad) fsubl sahf xchg repnz retq data16 rex.RB cmc (bad) cltd xchg int repnz repz or jb icebp repnz (bad) (bad) (bad) (bad) cltd movsb lock sar movabs adc (bad) mov rex.XB xchg or movabs cltd push stc icebp rex.WRX test add enterq (bad) mov xchg cmpsb xor (bad) (bad) and movsl xor rex.RX mov (bad) xchg (bad) xchg mov fs loopne rex.B rex.RX cmpsl rex.WR data16 mov sub (bad) lea movabs (bad) mov js add int3 xor pop push retq xchg mov rex.WRX rex.XB (bad) mov pushq icebp mov (bad) adc xor jnp push push add (bad) cmp sub mov lea data16 retq (bad) sub jmp clc jnp (bad) rex.WRB sahf mov sub add pop push xchg mov sti rex.WRB callq mov loope xchg add movabs pop int3 adc pop xchg rex.RB rex.WXB (bad) pushfq sub icebp adc xor rex.R gs xchg movabs cs xchg sarl (bad) or insb fwait rex.WR push xlat and (bad) mov push test (bad) js mov mov or pushq in leaveq add ror fidiv xchg loope cmp pop push add xchg sub adcl in jno (bad) int3 imul (bad) fwait xor cmpb mov mov xchg int jge lods loopne xchg test rex.R repnz push std divl xor ds cmp sbb rex.WRX pop vpmaxsw sbb and add orb movabs lock movabs sbbl (bad) xor sbbl cmp loopne sub (bad) mov add sub add pop sub push notl (bad) xor xchg in push insl rex.WRB scas rex.WR andl jno mov stos (bad) cmpsb data16 xchg rex.XB stos rex.WRX in rex.R add jge mov jne outsl in addr32 (bad) pushfq imul movsl decl push rex.WRX mov in xor rex.WR rex.RX pushq je xor mov sub loope (bad) rex.WRX xchg adc in imul js insb stos mov mov mov retq rex.WRB rex.B and push mov xlat push lahf icebp nop repz xor pushq or mov lret mov test (bad) mov lea rex.WR shr imul pushfq lahf push and jmpq ror mov lods or cmp or xchg pop (bad) outsb cmpsb push std mov adc mov xor mov xor mov (bad) xor mov sub adc out ja rcll movabs lods (bad) je adc push (bad) rex.W ja clc jmpq out xchg xor xchg pop sahf jbe or fdivrl lock lods js int3 cmp loope mov and shrl test jmpq test or adc stos repnz rex.W fs outsl retq fmull jae lretq fist stos int lods mov sub fdivrs repz retq je (bad) lret stos leaveq pop pop fnstcw stos loopne rex.XB stc mov xor (bad) cmpsl leaveq and jmpq sbb (bad) mov and retq repz enterq imul cmp rcrb fisttp cmc pop jge insb mov (bad) movabs xchg je movsl sahf test (bad) out rex.RB insl out rex.WRXB xor insl imul (bad) sbb mov pop nop mov xor xchg mull adc sbb sbb (bad) rex.WB and icebp sub fldenv (bad) xor test jp and (bad) mov xor pop sbbb jns pop push xor jb (bad) jrcxz enterq js fwait rex.WXB jmp push (bad) (bad) mov scas lock cld rex.RX lret sub (bad) (bad) jns enterq add rex.RB ds jg and (bad) mov (bad) test jne mov insb movabs mov addr32 popfq in lea cmc jnp movabs adc jp add mov loope rex.RB retq in mov or xor sahf (bad) pop push adc imul (bad) test rclb (bad) out xchg xchg mov test mov notl push mov fstpl jmpq cmp cltd mov je (bad) and rex.RXB (bad) xlat callq rex.B xor mov movslq and mov jne fcompl fldl2e (bad) cmp jne (bad) mov push jo mov nop lret add (bad) mov int3 in (bad) imull (bad) (bad) (bad) adc xchg rol jnp sbb xchg movsl out outsl xchg jo mov adc rcl (bad) out fldl (bad) or and pop mov mov lods out xchg rex.WXB cli mov popfq flds cwtl (bad) andl (bad) retq or rex.RX cld nop cmpsb xlat or sbb movsl xchg xchg repnz cmp in movabs and subl movabs scas (bad) cmp lret popfq push cs pop jp ja pushq repnz rex.XB loope (bad) (bad) mov repz rex jno sub cmp sbb loope enterq pop sbb int3 test xlat pop pop pop mov (bad) rex.RB mov (bad) es repz rex rex.X (bad) mov jmpq xchg ja andl (bad) add add xorb out cmpsl mov mov nop sahf (bad) pop addr32 sbb jle (bad) repz mov push test (bad) mov lret retq xor rex xor notb loopne gs sbb jae cmp jns mov leaveq pop xchg jle xor ja (bad) fildll mov (bad) sbb jmpq or (bad) push icebp loope leaveq (bad) pop mov rex.WRX add shr out or rex.WB retq int3 mov pop int lea sub test cltd xchg iret add rex.RX pushfq add and (bad) adc jne cmc adc sub icebp push popq or mov in orb sti icebp (bad) mov stos leaveq movsb repnz fcmovnu fucomp fnstenv int movabs pop nop rex.WRX jmp xorl fcmovnb sbb pop xchg sub mov (bad) (bad) mov in cld mov repz (bad) fcoms lea movslq pop adc jp adc or rex.WXB lea push and rorb retq jno cmc movl cwtl sub fadd (bad) repnz xchg test stc mov rex.W xor add mov mov mov cmp movslq sub adc fidiv xor roll jrcxz and lret callq test sub mov in or mov jmpq lods cmc jg or mov std (bad) jno rex.WXB hlt test imul vmovaps rex.WRB jge cmc stc adc test outsl test jrcxz vpacksswb retq jae js sub cmp mov sbb pop sarb leaveq stos retq fldl cmp jns xchg sbb xchg or xor (bad) mov std (bad) cmc test mov mov pop mov push mov (bad) sbb stc jno and loopne add xchg std mov iret cld cltd add jrcxz (bad) retq loope rcl xchg repnz loopne xorl negb ss mov xchg sub xchg pop (bad) movabs xlat movabs enterq jrcxz stos movabs cmpsb in cmp gs xchg mov cmpsb test cmc push xchg rex.WX mov cltd retq mov int3 gs add (bad) leaveq (bad) (bad) xor pop sahf mov jmpq xchg leaveq hlt andl leaveq std jno jrcxz test jmpq in mov iret push out movsb add or mov xchg rex.WRB in orl push and test pop retq jrcxz pop add clc cmp lret or loope mov rex.WB ficompl jl iret jmpq in mov sbb push sub mov js (bad) int stos (bad) rex.RX testb xor jp pop notb iret push xchg xchg packuswb imul or retq retq fadd sub mov sar (bad) sti push sub rex.XB mov movabs ror add mov mov pushq cltd lods cs movslq (bad) test (bad) (bad) push push mov mov xor or and rex.WR rex fsts cmp (bad) sbb rex.WXB rex.WXB cld pop faddl push jae pushq jb std outsb pushfq jmpq fiadd pop lods rex.XB outsb (bad) rex.R icebp (bad) mov addl fcoml pop cltd std scas xchg pop add (bad) (bad) xor xchg icebp mov movb int jmpq xchg jns pop pop je cli mov cmpsl push mov mov add and rex.WR or adc lods push lahf rex.RB rex.RB jns or mulps mov (bad) or lods icebp adc sahf movslq (bad) mov rex.WRX shr (bad) std ja mov fchs test fcoml callq cli rcrl push add outsl mov imul (bad) mov rex.WB and lahf test (bad) in and xor retq movsb and leaveq icebp rex.RXB xchg or cmp sub rorl fpatan pop sbb or int3 nop movsb (bad) loope pushq test add cwtl rex.RX rcrl callq cld adc (bad) rex.R xor push std mov or lock jno or (bad) mov sbb push test xor sub fdivs add add retq fcmovne cmp movslq rex.WB orl lret jge (bad) pop (bad) (bad) (bad) xchg cmp mov xor (bad) (bad) repz and jne cmc cld sub jecxz mov xchg jne mov or js (bad) fucomi push (bad) rex.WXB add or rex.B cmpsb (bad) pop push test out (bad) sub movabs (bad) cmpsb loop outsb jns and (bad) xchg xor fild or (bad) cmp mov std push test or add adc push (bad) (bad) test mov mov add in fmuls pop or or rex.WXB cmp or in jo pop retq rex.WRB or and or mov sbb xchg icebp xchg fwait or test icebp movabs pop leaveq lea divb in (bad) mov pop (bad) jge xor fisttpll (bad) (bad) xor push leaveq lret rex.RXB or shlb test (bad) in sbb rex.R mov pop stos sub insb adc ja ror cmc retq sub stc rex.XB lock icebp frstor jmp idivb cld test pop jmp mov (bad) ffree (bad) test sbb mov es push fisttpll mov mov mov int out hlt rex.B es or rex.WXB ja (bad) sub scas jrcxz adc cli loope loopne sub rex.WRX jns test cmpsl pushq lret cmp xor rex.B cs jmpq fld xchg or (bad) pop in and push cmpsb lock (bad) adc rolb cmp rex.WR out jp mov push sbb rex.RB sub (bad) fidivl rcll xchg add test pop fisttpl fiaddl enterq push rex.WRB repz or pop (bad) rex.WR movabs push rex.RB pushfq hlt lahf cmc cs push mov sar rex.B mov cmp data16 cwtl cmp repz rex.R test fcmovnu in loop pushq movabs (bad) mov lret mov or jle cmpl out in imul mull sub mov or imul adc mov fcompl xchg icebp or xor (bad) lret js adc stos sub scas and mov movsb mov add pop xor (bad) test sub rex.WRX adc pop xchg movl addl outsl sub (bad) (bad) (bad) fidivrl mov add jrcxz ror movslq orl lock (bad) rex.B repnz rex.R (bad) push jb (bad) fnop add idivl adc (bad) or cmp cli mov xor fsubl xchg or mov pop stc cmp sub or jno adc je (bad) loop cmp stc add mov or jmp rex.RB (bad) rcl (bad) mov retq jns jne cld stc pop cli xchg shlb ss or (bad) sahf lods jmp mov (bad) (bad) jnp mov and (bad) mov iret pop cli in test adc mov sbb lods in imull std jne int iret in mov mov (bad) or mov out test xchg retq addr32 mov (bad) xchg fimul lahf rex.WB rex.WRXB rex.WXB sbb pop cwtl mov cld mov xchg rex.WB or xchg je pop sahf out fdivrs cmp fwait add rex.WR jmp ja rex.WRX kandb pop sub mov repnz adc jb add or repnz mov jrcxz sub mov pop mov push hlt flds test test sahf or icebp repnz (bad) sub add in xchg leaveq pop mov (bad) in fisttp cmpsb (bad) roll pushq sahf icebp (bad) repz fcmovnu add andl mov enterq (bad) in or out scas shll sarb jbe mov rex.WR rex.WB fstpl sbb mov adc rex.WRB fist sbb lock sub push lock fnstenv sti mov cmp mov rex.X mov jae lods (bad) cltd stos hlt mov adc rex.X cmp out test lods push rex.WXB and cmpsb adc mov lahf xor sbb fs cmpb test or (bad) jae movabs mov sub (bad) bnd sbb (bad) mov mov mov jno cmp xchg rex.B pop int ds (bad) (bad) (bad) jmp enterq mov sub lret push leaveq push leaveq mov movabs retq rex.WRX negb stos (bad) jae mov mov xlat (bad) mull loope addps sbbb loope xorb cmc (bad) repz xchg and (bad) out repnz out sub popfq (bad) or and enterq xchg sahf cmp (bad) callq rex.W xor ja ss (bad) mov jne (bad) adc fwait test repz jae (bad) mov cld callq rex.RB push mov lock mov mov or pushq sbb rcl incl (bad) xchg push fisub sbb (bad) rex.WRX sbb icebp cmpsl adc xor sub (bad) callq xchg pop ss sbb callq cli fcoml test sahf add mov rex.R test xchg or vpunpcklqdq sbb out rex.WR je (bad) xchg xlat (bad) movl in test hlt nop rex.WRX ss (bad) jl rex.B popfq cmp jp test in mov repz cmc mov mov rex.WB rex.RB repnz or push or (bad) sbb mov mov pop xor pop pushq (bad) mov sahf (bad) cmpsl in or rex.RXB adc test std popfq add and faddl or (bad) jrcxz add test push es and imul (bad) mulb (bad) (bad) pop and rex.B (bad) sbb cs jle xor push lock mov (bad) adc jb cmpsl sbbl push mov sub loopne hlt test sahf (bad) leaveq mov rex.W rex.RX movslq (bad) (bad) sbb mov or add int3 repz push adc xchg lahf orb cmpsl mov in jge pop addl mov test mov mov clc cmpsb (bad) (bad) mov pop loop sub ficom xor callq xchg fbstp xchg cmp jg pushfq xor adc mov (bad) movabs or mov pushfq rex.RX (bad) (bad) movabs es (bad) jbe fdivl mov mov cs (bad) lret retq loop fdivl mov imul rex.W stos ficoml sbb xor imul notl mov or xchg (bad) or movslq lods xor fild int3 sarl rex.WRX rex.WB mov rex.W xchg (bad) add fsubrl rex.WR rex.WRB xor add mov cmpsb pushfq (bad) push shr test mov adc rex.WB in pop clc pop push sub mov (bad) mov enterq mov rex.X (bad) (bad) adc sub je movabs andl rex.WXB repz lods pop jns rex.WRX jno movabs push movabs mov (bad) xor cmpsb xlat icebp rex.RB jno idivl mov jno jrcxz sbb cli pop (bad) sbb test (bad) push shrb scas and jg mov push xlat rex.RB cmp out test xlat add lods jmpq mov sti out icebp or pop (bad) xor adc rex.WR mov adc sub xchg (bad) add pop fimul popfq adc mov mov cmp sbb (bad) movsb (bad) int3 add and mov mov (bad) xchg out (bad) adc mov xchg repnz jmp sarl retq in (bad) add mov mov (bad) pop leaveq sub xchg (bad) mov pushq neg fstl sbb fcmovnb repz fwait xchg cld test lret test cmpl add push mov mov jg fsubr callq mov mov enterq addl add stos subl or mov bswap mov add hlt cmpl xchg push in (bad) (bad) adc rcl movsb xchg callq rex.WB mov (bad) shll hlt iret cld (bad) clc sbb shll mov hlt adc rex.WB mov icebp fldcw mov xchg adc hlt (bad) stc fisttpl mov enterq xor fnop int cmc xchg (bad) jmpq xor push mov lods incl (bad) leaveq mov retq (bad) test mov mov (bad) hlt sub add jae (bad) retq sub repnz (bad) test repnz (bad) sti adc outsb sti test lea sti (bad) mov (bad) sahf enterq cs (bad) (bad) notb xor int ja retq add (bad) lret lea loopne,pn mov fldl fildl (bad) (bad) int3 lock xor sahf (bad) jmpq insb or rex.WRB lret callq and add (bad) add icebp (bad) rex.WRB stc (bad) pop add adc xchg loope mov adc adc lcall lods or mov (bad) invd movabs rex.B fwait adc lret mov retq (bad) repz add (bad) xchg leaveq in xchg int (bad) in xchg cmc in xchg stc in xchg std out fldenv in in movsl in in xchg rex.W adc adc test mov mov jno adc push rex.WX mov loope mov movsl sub sub (bad) (bad) mov mov sub push cltd push jp mov in roll rex.RX jge jrcxz or rex.XB cli pop out sbb pop lret rex movabs repnz mov clc lock movabs or add pop adc (bad) cmp cmp xchg xor loope adc mov mov stos mov add and rex.WRB js (bad) or (bad) loope rex.RXB lret jge in sub and sbb mov cmpsl rex.WR mov rex.WR fnstsw retq in xchg sub (bad) adc and lahf add js (bad) mov gs add repz sub xor jnp jl imul mov rex.WRX rex.XB cmp jrcxz ds fsub jbe cmc and jae pushq cmc mov jno and jae xor cmc retq (bad) test leaveq jnp cld add subl pop (bad) (bad) or mov mov movsl cli jno sbb xchg in pop pop loop stc test lahf mov mov mov pushq insl mov jne movslq mov fs lret mov mov (bad) and icebp imul out in push sbb in and add push or xorl or and sub in push (bad) in and add push int rex.WB mov repz out cmp mov je sbb popfq (bad) jno (bad) (bad) icebp rex.RB fldcw jo mov mov mov add iret frstor rex.WR pop mov in lahf (bad) rex.WB mov leaveq and int roll sub (bad) mov leaveq sub xlat sarq and (bad) jno mov xchg (bad) negb iret jno (bad) xor mov push mov lods mov cmp sbb rex.WXB (bad) callq rex.RB callq jge jns mov imulb rex.WXB jrcxz mov pushq (bad) add push (bad) (bad) or callq (bad) xchg movsb neg jo jns cltd xchg and out (bad) cs out rex.WRX rex.WB callq cmc fs (bad) mov icebp (bad) hlt jp je and in mov xor xor sbb data16 mov (bad) repnz addr32 cmp loope sub in and (bad) movb mov mov mov mov sub (bad) ja and (bad) cmp repz and fild sub sahf rex or push xorb adc (bad) jno mov nop mov xor cs insb adc add mov repnz sub cmpsb and fstl scas cmp push xor icebp pop nop or xchg xor jrcxz cltd mov jmpq mov rcrl or leaveq pop enterq sub rex.WX mov xchg xchg movabs movabs movabs pop out rex.RB icebp andb or jb movabs sub mov pop lea movsl rex.W xchg rcrb movabs cs jg add rcl mov orb pop (bad) (bad) rex.W loop jge test js cltd leaveq lock mov nop mov cmc movabs rex.B mov pop loopne and sbb mov imul push or stc push pop xor mov ss scas xor jbe cmpl enterq test adc mov imulb fnstcw mov rex.WB sbb in test xor (bad) (bad) enterq (bad) and ficompl jno lock mov sbb xchg or adc (bad) movslq jrcxz mov (bad) cmpsb nop xor mov adc subl stos mov mov iret rolb (bad) jl fwait (bad) sbb rex.RX ror int mov xorb xor xchg jmpq sahf sub ds out rex.WXB add insl pushq sbb (bad) mov cmp fwait in int3 movabs add rex.WRB in and xchg (bad) clc push icebp or lods leaveq xchg scas fstpl rorb or mov rex.WR movsl mov scas xchg pop jl jnp test mov leaveq lret pop xchg pushfq push (bad) pop mov (bad) popfq scas sub add nop or xorb rex.WRB jne rex.WB repz sub rex.RB mov movabs mov mov cmpsb jl pop rex.WRX lea (bad) adc jmpq add xchg and (bad) hlt nop sbb rex.RB rex.RXB test (bad) loopne pushfq rex.R int jbe jle xor mov and jmp xchg movsl jne sarb jae push sbb or jb mov mov fsts mov mov (bad) cltq js fs sbbl mov loopne xor (bad) mov push mov or mov xchg (bad) enterq cmp or fidivrl and repz imul xchg (bad) lahf int3 (bad) mov movslq retq (bad) (bad) andl cld sbb (bad) mov leaveq push shll int rex.WRB rcrl fiaddl rex.RB clc mov rex.WRX repz imul fcoml xchg rex.WRX pop mov rex.WRX leaveq (bad) jae xor in mov mov mov mov test cmc insl mov test adc imul jl mov jo (bad) loope sub xor xchg (bad) jge mov rex.W and xor repz or fcmove xor xor (bad) lock jno rex.RXB cmp pop jmp cmp adc movslq xlat push movsb and jmp movabs movabs add pop jp cmp add lea cli or mov sahf cld shl sub (bad) xchg jno jns fisttpl imul push xor retq stc or (bad) ror in std xor pop mov movabs jno jle sub push sub rex.X pushfq xchg cmc je jg and or push xchg in add rex.WR ficompl movslq jne retq jl xchg xor lret int (bad) imul lret out add and sub out sub lods (bad) (bad) sbb hlt clc mov rex.WX rex.XB or mov test pop divb divl loopne mov push (bad) add pushfq (bad) jmp testl adc fbstp sub std js (bad) rex.X cmp jnp iret pop movslq adcl pushq xchg lods cli mov jp sub xor movabs fcmovnbe fcmovu stc (bad) fisttpll test scas mov mov pop rex (bad) pop jnp xchg cmp leaveq rex.W (bad) movsl or mov xchg out jrcxz sahf pop xor rex.WRB add mov and and push stos ja sarl js push mov pop mov xor sbb repz mov leaveq mov jp fsts or (bad) pop mov mov out fnstenv (bad) push sub or add movabs rorb mov (bad) (bad) (bad) jmp mulb fmuls rex.WB callq in rex.WR (bad) cmp movslq xor mov pop (bad) and fildll movabs adc pop sti push in add fsubl hlt (bad) mov ficom jb faddl xorl jl cli mov xor rex.WX out pushq addl rolb (bad) and xor ljmp xor (bad) fucomp xorl jne jne cmp rex.X (bad) cli and orl cmp and fldenv jno movsl and cmp rex.RXB rex.RXB adc mov fmull (bad) (bad) fldt add ja movsl jge (bad) sub mov retq int rex.WXB retq mov xchg js fist add (bad) jae (bad) jmpq leaveq and retq or cli jnp fstpl jne sub frstor mov out loop jl fwait pop rorl stc scas in es mov and fdivr mov (bad) pushq xor nop (bad) ss fmuls xor mov mov pushq lods mov incb adc movl add xchg rex.WR (bad) xchg (bad) (bad) cmp fs loopne lret (bad) out lret (bad) int fcomip or xor lret loopne cmc mov (bad) (bad) out nop retq movl mov jp out insl in in insl jmp stos test (bad) (bad) (bad) test clc ror mov imull or jmpq jbe mov imul cmp (bad) (bad) (bad) (bad) jns adc (bad) out sahf test lods fbld mov cltd jrcxz sub mov rex stos adc xor push stos gs movsl outsl jrcxz sub movsb subl (bad) out jle cmpsb fnstenv jmpq movl stos jnp cwtl repnz rex.WR lods mov pop mov or (bad) rex.WRX (bad) int3 (bad) idivl cli testb repz pop sbb test pop repz xchg (bad) imul sub mov xor mov cmp data16 pushq out xor jge xor or xor mov repz (bad) add lret sbb mov xchg jno rex.XB rex.R imul in push retq nop (bad) jmp jle rex.WRB enterq pushq mov fstpt sub pop or movabs sbb xchg sub rex.RX mov jl xor sub test (bad) rex.XB repz cmp fmulp rex.WXB lods fdivrs callq xchg test out (bad) cmp lock cmp imul cwtl loope loopne iret shrb icebp clc in fmulp add add xchg (bad) fsts rex.XB add (bad) mov add (bad) int sbb ja outsb (bad) add mov cmc retq adc pushfq sbb add repnz or out rex.RX cli mov lahf xor lret mov frstor std xchg bnd (bad) xlat (bad) jle cmp and (bad) fyl2xp1 mov rex.RXB (bad) cmp pop movabs fadd push rex.WB callq int3 sti pop loope clc outsl cltd cmpsb sbb scas movsl adc sbbb retq mov loope data16 add rex.X rex.B mov repz out add (bad) or movabs jrcxz movsl test fucom jno (bad) mov cltd fucompp addr32 adc cmc movl rex.WRX icebp iret xchg sub movsl mov or loopne sub xor lods pushq je push pop jno (bad) sub add or jno ja or mov test sub and cmp lea imul cmp (bad) lret popfq or mov movabs (bad) push (bad) retq ftst (bad) add mov pop mov fdivs lahf (bad) mov insl xlat xchg fmul fisub movabs fisttp push iret rex.WRX movabs adc movabs lahf jmpq (bad) icebp pushfq xor xchg in (bad) (bad) xor (bad) loop out jrcxz rex.R repnz out test xchg movabs sar (bad) xor test (bad) mov sbb xor iret cmp or out and loope mulb sahf cs (bad) sarl (bad) add rex.WRX outsl (bad) (bad) (bad) pop add mov or icebp and retq and pop imul jae nop lods (bad) ja sarb ja push push xchg sbb test push mov jp and mov or add push in leaveq add xor test in mov es or jg mov (bad) xor cmp sti push xchg (bad) fsubs jno lods or xchg shr add adc addl jno rex.RX sbb movabs jmpq bnd enterq int3 (bad) lea retq or adc xchg xchg rex.WR popfq add jne jl sub mov out test jmpq (bad) std xchg cmc add cwtl rex.WRB sub mov callq xorl frstor rex.WB rex.W addr32 mov loope (bad) fidiv jg cmpsb lods cltd imul rex.WR stc mov shl push mov int3 xor xchg push mov notb sub sti fisttpll out sub sub adc or pop mov cltd test (bad) scas jno mov stos mov mov es rex.WRXB repnz mov or int3 rclb icebp cli rex.WRX (bad) (bad) int (bad) rex.WB cmp mov fistpll mov xor mov or jae (bad) or add cmp (bad) rex.WX mov test test flds or (bad) retq rex.WRX xchg (bad) push loope pop (bad) iret (bad) outsb (bad) repnz enterq pop cltd (bad) (bad) (bad) and loop (bad) sti jne leaveq callq int3 lret mov loop or sahf fsts leaveq out jge out jns push cwtl sahf mov xchg pop leaveq cmp mov rex.WRX (bad) sbb ja add lret rex.W fs mov pop fdivr lret (bad) mov enterq movabs (bad) movsb fneni(8087 iret rex.WXB jp xchg popfq and xchg loope push imul movabs xchg sub scas jbe xchg jmp jns rex.W sbb xchg pop negl adc (bad) push retq adc push stos repz iret adc int int (bad) int and adc loope mov sbb cmp rex.W cmp clc rex.WRX fnop retq in loopne add rex.X rex.RX cmc mov mov callq int idiv mov fs rex.X je enterq xor fs sahf add xor test mov (bad) (bad) movabs rex.RX scas xchg callq mov rex.WR lret and lret cmc jbe vmovsldup xchg mov rex.WX pop (bad) pushq xchg xchg in icebp fwait or sub mov xchg icebp out (bad) mov retq sub (bad) jrcxz scas enterq stos nop xorl int3 push (bad) scas enterq (bad) (bad) push sti int3 mov and pop lret js (bad) rex.WRX mov movabs data16 lahf out lret sti jns (bad) mov cmc pop out rex.RX stc (bad) and addl test mov shrl (bad) rex.RX data16 rex.WRX rex.WX xor out adc (bad) and rex.WB (bad) outsb (bad) xor jg lods jbe repnz retq movabs imul mov xor movabs fild lea icebp push sbb je cld mov test (bad) rex.WRXB rex.W retq test in add (bad) sub (bad) jae lret (bad) (bad) jae nop rex.WRB lret rex.X rex.RB rex.RX mov mul retq hlt loope fild mov (bad) idivl test mov lret mov out fistpl mov frstor add cmp mov mov sbb sbb add cmp andl scas xor int3 movsb pop jno sahf cmp (bad) movabs cmp (bad) rcrl test retq and (bad) mov in out cli pop add in mov movslq repz cmp repnz jb cli and pop add fsts loopne or (bad) jmp movabs mov pop mov mov repz (bad) gs repz repz test in xchg adc (bad) pushfq in ds ja add and add int3 fdivl xor and test jmpq (bad) and js lahf jbe pop add jno (bad) test pop pop push sub xor out add addl (bad) icebp and movslq (bad) rex.R pop push adc (bad) (bad) hlt cmpsb mov add int push lret (bad) callq mov pushfq cmc pushq (bad) in je cltd (bad) mov mov add scas int xor lahf enterq mov xchg jae test push ds rex.WXB leaveq jno std leaveq jne loope jns (bad) and in (bad) callq int3 jb (bad) jmpq xchg pushq mov imul (bad) add iret adcb outsl mov and jbe orl cmpsb jrcxz rex.WB lea cltd fldcw jne imulb fistl cltd mov or mov mov iret movabs hlt cltd rex.RXB xor mov repz test repnz test mov mov movabs or popfq repnz or ja in or push mov mov xchg xchg xlat sti mov pushfq mov outsb cli cmp or adc mov jo vmovmskpd adc mov xchg pop leaveq sbb popfq addr32 mov lret cltd repnz loopne sti loope jmp popfq fadds add (bad) decl bnd (bad) es or cmpsl sbb mov xchg rex.RX adc repnz rex.X out (bad) rorl adc lahf sbb (bad) xchg cltd and cli mov pop jmp sahf or lea lret sub movabs (bad) mov jo xchg and pop (bad) ja lea jge mov sub (bad) mov adc xor and faddl mov or imul xchg lea jae imul sbb cmp rex.X iret rex.RX rex.X (bad) imul leaveq rclb (bad) js mov rex.X pop rex.WR jp rex.WXB or rex.XB mov outsb push outsl js and xchg test adc gs mov cmc rex.RXB sbb testl repnz jmpq rex.XB repnz je imul jne rex.WB subb mov in retq imul cld outsl jrcxz hlt (bad) sub test rex.W js loope mov (bad) cmp jmp sbb or and jl repz sti xor or jg pop mov in in (bad) rex.WRXB rclb pushfq rex.W addl (bad) jno rex.WXB pop retq ja outsb push xchg xchg int3 xor loopne gs (bad) fbstp xlat jb (bad) sub mov gs flds fmul cs (bad) cmc mov ja in pop je retq pop jno js rex.W div rex.RX repnz idivb decb stos adc mov in mov cmp xchg flds (bad) rcll rex.WR stc (bad) sub out push movsb push jbe push movabs lret xchg mov lret std fimul cmc cmc (bad) out sar (bad) icebp mov lcall mov repnz adc in rex.X or (bad) iret xor std push leaveq cltd mov add retq (bad) loop mov pop stc cmp iret or fdivl rex.WR cmp retq std jmpq add jo cltd jno lret adcb or lods (bad) xchg add (bad) pop in mov xchg es retq and fs rex.WRXB (bad) in mov adc (bad) xlat (bad) xchg rolb or int cmc xor subb add (bad) cmp lret (bad) rex.RB scas xchg sub movabs repz and psadbw cmp je or jno rcrb lcall mov and movsl movslq lea nop (bad) xrelease popfq mov retq lea sbb pop xor mov retq sahf mov stos fldl (bad) nop pop movsb movabs cmp movabs xchg xchg rex.RB adcb mov or cmc (bad) and jl cltd fwait movslq jg or pop icebp lea xchg xor mov repz (bad) cld hlt cmp icebp adc mov (bad) (bad) or pushq pop jno push sbb movsb leaveq push add popfq rol lock popfq jrcxz out add leaveq push cwtl pop (bad) inc (bad) scas jns rol xor hlt pop sahf mov rex.XB test mov xchg idivl (bad) (bad) frstor jge loope mov es stc (bad) mov pushfq cmp std xchg rex.WB (bad) lret and cli cmp xchg (bad) xlat mov andl in repnz loop test leaveq cltd pushq icebp mov (bad) std xchg jbe mov mov (bad) sub sti or sub movabs rex.B sbb rex.RB rex.WR jmpq add nop sbb cmp mov jno sub xchg jo outsb out jae jne int3 (bad) and callq repnz jge test icebp insl nop rex.WB xchg rex.W or int jbe push add add cmp jo mov add test icebp movabs sub cmc rex.B rex.W gs test add or rex.RB testl (bad) jmpq (bad) jl rex.RB (bad) rolb sub andl (bad) out icebp in or out fnstsw (bad) mov fmuls xchg add mov repz mov in cmp jns cmp sbb movb push jmpq mov mov or mov int (bad) test int std loope fs cmc add mov (bad) mov cwtl in mov xchg push int pop cmp pop rex.WRB ds sbbl (bad) sbbl int3 stc jmpq cmp repz int3 and and xchg mov lods cmpsl out (bad) fnstsw (bad) movabs (bad) rcrb xchg pop cmc in insl mov lock callq enterq xchg clc clc or mov push cmpsl sub mov xor sub xchg outsl jmpq int3 (bad) hlt mov push xor jmpq in mov jne in loopne movslq mov divb lret enterq insl test cmp xor (bad) fstps jns lods stc or in or fnstenv cmp int movabs popfq mov shr (bad) test push in cwtl lods (bad) mov test insl js mov or mov loope jne add mov mov out (bad) outsb int3 (bad) jae out rex.WRB and pushfq xchg in insb callq enterq mov imul test andb subl sbb in in cld addl sub lods mov hlt insb mov (bad) cmc addr32 xchg jmpq repz int (bad) mov roll xor jne rex.WB sub (bad) test cmp adc fist mov fcomip lods rex.W rex.WR (bad) icebp lea movabs (bad) jl pop xchg clc mov and (bad) loop nop fcom xchg imulb lret iret push fistpll clc test cmc (bad) movabs sub or rex.RB xchg (bad) sbb add nop retq repnz and adc rex.R xor sub (bad) sub and add hlt jne rex.WRB cmp rcl repz mov mov sub out or int3 enterq push sub sub xor and (bad) (bad) rex.WXB je and xchg pushfq jrcxz gs rex.WXB mov shrb leaveq callq mov sub adc (bad) insb cld cmp jrcxz rex.WB push jg pushq (bad) add xchg push sahf xchg mov (bad) imul jmp adc rex.W add jl sub int3 cmpl adc mov lret mov or jl xor pushfq jae jrcxz fwait mov or mov leaveq enterq repz (bad) cmc or nop subl pop mov cmp (bad) mov cmp xor test cmp test lock callq xor adc insl add sub jae pushfq pushfq xchg add movsb cmp xor pop sub je outsl insl xor int3 insb cmp and in movsl and add cmp hlt fptan in not push mov or icebp shll fsqrt in fisttpll xchg rorb xchg mov (bad) jrcxz jne test xchg (bad) xor sub mov lods push addr32 rex.RX mov insb fnstcw rex.WB movabs int rex.RB rex.XB rex.W cmp scas int3 icebp sbb je insb mov popfq cmp (bad) adc fucomip repz icebp movsb (bad) push adc in andl (bad) (bad) movsl xchg push vcvtps2pd int3 (bad) xor adc movsl add and enterq jmp pop (bad) mov push xor xchg (bad) (bad) mov sub pop jmpq xchg movsb (bad) test jnp mov jno xchg fistp sub adcl ss sbb xchg (bad) je or rolb rex.R insl fldl2e pop movabs lock repz jbe in cli add jbe fdivrl rex.WB push movsl sub mov movabs in xchg outsb mov mov adc mov cmp or mov mov and repz jl mov rex.WR out jmpq rex.WX (bad) mov test rex.WXB int3 cmp push (bad) and jbe add je js jl rex.WB sub out gs mov pop mov (bad) mov in in xchg jne mov (bad) mov in (bad) adc stos pushq mov lock add mov out test xchg rex.WR test in out icebp test leaveq sub or rex.WRB mov shr je (bad) rex.WRB mov pop pop (bad) cmpsl and jg rcrl pop xchg movabs or or mov (bad) out push push or and mov nop in sub (bad) mov orl out sub or mov ja pop rex.R icebp (bad) (bad) (bad) xor cmp (bad) xor or decb xor mov adc push jnp movsl imul rcll lock xchg rex.WRB (bad) jl (bad) int sub rex.WR xorl adc cmc xchg out movsl jne mov movslq sub jne cltd rex.W jmpq xchg rex.WRX mov mov jrcxz movabs (bad) push mov cmp rorl rex.R out jbe rex.W mov sbb add adc or pop sbb sub (bad) ja fcoml pop mov mov cmc and movslq std (bad) (bad) cltd mov fsts cmp jge insl mov out jbe or mov xchg mov cmpsl (bad) push or jmpq mov js (bad) lock cmc push xor orl cmpsl xor sti jmpq mov xchg mov (bad) or fwait mov mov sahf xchg mov fiadd add push or pushq sbbl (bad) es mov and repnz add callq (bad) mov pushq push fcmovb (bad) mov add xor outsb xchg or test (bad) stc or stc movabs rcrl sbb push pop (bad) rex.RX cmpsb pop int (bad) mov push callq jg or mov cmpsb sbb rex.RXB int leaveq xchg cmp scas movslq out test (bad) mov (bad) pop lahf (bad) shlb xchg iret (bad) mov jno sub mov movsb xchg icebp jl mov (bad) pop sbb pop imul cli mov retq retq cmp sbb (bad) cmc js xchg jmpq lret std (bad) and xor xchg jge,pn lret rex.WR lea and in (bad) (bad) or rcr (bad) test outsb (bad) fmull repz jb movabs (bad) mov xchg rex.WX jne mov add mov (bad) rex.WRXB gs xchg pushfq stos sub movslq mov in mov movsl xchg (bad) out std fcompp sahf incb pop cmpsb (bad) int and (bad) jns std rex.RXB mov mov (bad) ss mov xchg enterq jae loope,pn cmp jo rorb lret lea cmp movl mov fnsave int andl sbb (bad) mov sub mov mov repz icebp rcll loope jae retq xchg rex mov cmp shrb shlb or fdivr rex.RB rex.WRXB shlb test rcrb rex.WX xchg stos cltd neg loop pop jle mov fidiv and (bad) push fidivr jge mov mov (bad) mov xchg fbstp rex.XB pop outsl imul (bad) lods jne rex.RB fwait push xchg fs (bad) (bad) jmpq loopne add mov (bad) mov pop iret mov (bad) fsubs imul cld adc jb cmp out sub outsb movabs (bad) mov push cmp in mov xchg xor icebp cld gs ja ljmp (bad) rex retq add adc sti (bad) ss stc cld lahf push jmp mov addr32 movabs pop and notb sahf int xor sub in int3 pop sub push add or mov scas in jno add je rex.WRB test xchg loope lea lret stc fiaddl repnz int (bad) pop callq (bad) rex.X pop stc lret lods xor repz rex.WRX sbb repnz rorl imul mov cmc sahf retq ss sbb pushfq stc (bad) sbb lods (bad) hlt jnp lret xchg loope push nop jrcxz mov (bad) (bad) nop jno (bad) out hlt sub je sahf jns fcompl iret jmpq rex.RB retq adc cmp imulb mov cld (bad) movabs or sti scas xor mov movabs repz (bad) jle lret sub rex.WXB icebp sbb movabs mov hlt mov callq push jmp add mov es mov fwait in rex.WRXB icebp rex.XB retq cltd (bad) vpmuludq xchg xor cltd lret (bad) fcoml cmp clc (bad) int3 jmpq mov sub pushfq sub jmpq test and jmp adc movsb test mov lahf xchg fdivrs imul pop rex.RB sbb sahf negl pop xor mov jbe cmc sub pushq jb (bad) insl callq sbb test je movsl xchg jbe out sub adc ss outsl jae (bad) cmp (bad) rex.WB rex.RXB (bad) sti sub jae movabs pop rex.X pop int3 sub popfq pop lret (bad) rex.WRX repnz xor movslq movabs jge,pn hlt scas (bad) mov mov sbb rex.WR sub stos (bad) in ss jle rex.WRXB sub imul icebp pushq stos in cli rex.WRX (bad) sarb fdivrl pushq cmpsb mov rol scas std (bad) jmpq popfq outsl sarl out xchg popfq pop (bad) lahf loop test fmul loope shl je ja (bad) mov (bad) (bad) fiadd out jmp mov (bad) iret mov movabs cmc push (bad) icebp lea repz pop out push fdivs popfq adc out mov rex.WX lret (bad) test (bad) data16 lret dec loopne (bad) lret repnz pop mov repz jb xchg (bad) stos rex.WRX pop jp jo jo (bad) rex.R mov xchg and icebp nop mov sti (bad) in retq pop out sub rex.RX rex.RB rex.RX rex.W lret or pushq repz and (bad) (bad) push add rex.WB sub test jnp mov jmpq (bad) movabs lret je (bad) flds int3 scas and loopne rex.WRXB pop jl pop xchg imul cli mov sub fstpl xor rex.WRX (bad) sbb adc (bad) add in (bad) sub icebp push repz pop repz (bad) (bad) (bad) fs rex.W movaps mov cwtl clc jno and jrcxz cmp lods outsb rex.WX in ss mov fcmovbe mov add loope sbb sub retq incb cmpsb mov sub mov rex.R sub test (bad) (bad) pand push movabs jno rex.R je imul test (bad) xor cld or or mov inc xor iret mov retq (bad) sub (bad) xor add add push mov xchg mov (bad) int and jle nop xchg and mov icebp or add adc sub xor stos (bad) (bad) sub sub rex.WB or lret fwait pop pop shll fadds xchg (bad) xchg std cmpsb jbe fmulp xchg (bad) enterq clc test in mov (bad) stc or fs rex.B fstps rex.WXB adc adc out or faddp je int adc mov rex.X rex.WRX lahf pop rex.WB fistpll test add xor pushq test and in mov sti mov enterq adc mov mov cmc test push xor pop rcrl movsb sub mov mov (bad) test roll xchg leaveq stos or rex.RX mov mov xor rex.WB test rex.WRX mov mov (bad) push jo test hlt roll push mov rex.RB addr32 test mov callq retq xor leaveq xor sub mov add in outsb movabs add add jle je rex.X loope mov andl mov (bad) stc rex.R mov rex.RB (bad) rolb loope sbb vunpckhpd (bad) add jae mov pop fdivs sub out fmuls sbbl lahf cmp pop (bad) sub push repz test jrcxz fmuls sbb cmp cmp lret rex.XB stos jge mov jp xchg mov cmp mov (bad) mov mov mov movsl mov cs ds (bad) or (bad) xor enterq loope (bad) rex.R xchg sub ja add rex.WRB mov fcmovbe sbb rex.WRX (bad) sub jmpq and sbb xlat add push (bad) jae callq pop fldenv cmc or cli (bad) (bad) movabs or pop (bad) rex.WRX xor mov or sub leaveq mov std ss callq jmpq out xchg clc (bad) pop xor cwtl mov mov sahf jb jnp mov mov retq repz sub iret enterq jrcxz gs scas rex.WXB test outsl jrcxz xor add pop mov pop jmp test push orl xchg or push mov xor sub rex.WXB in imul rex.WRX sbb mov nop clc jmpq rex.WX imull pop mov (bad) test in push popfq fmulp fldt lret add (bad) fwait sub test sahf (bad) clc sub leaveq pop movsb (bad) pushfq xor repnz mov repz xchg (bad) cmc pop fldt (bad) cs (bad) xor xchg icebp int sbb cmpsb push xchg rorl or callq in in sbb sbb fbld insl sub sbb (bad) jae and ds xchg jle (bad) fnstcw mov leaveq (bad) movabs vpcmpeqw mov in mov rex.WXB rex.WRB cld jne (bad) lea xor jb rex.RXB (bad) repnz xchg add pushq push xor rex.X ficom rex.WXB (bad) test (bad) pushfq (bad) ja xor (bad) push rex.WX loope (bad) cmc sub pop jns mov jmp outsb or mov in and (bad) or pushfq rex.RX testl jmp iretq adc jge pavgb mov mov (bad) adc or pop sub jne imul or mov out xchg pop sub mov movsl xor mov jne lea repnz (bad) rex.WR xor sub (bad) mov retq callq (bad) jb lret (bad) test mov rex.WR mov (bad) rex.RX icebp sbb push out in mov icebp mov adc mov mov cwtl icebp cld and icebp (bad) shll (bad) xlat test lret pop mov mov lea (bad) movsl pop movabs rex.X int3 cmpsb or mov jno (bad) in add decl jbe int3 fwait loopne incl pushq rex.WRX rex.XB addl mov fnstsw rex.XB test rex.WRX mov rex.B (bad) mov rex.WB mov add mov frstor (bad) rex.WR and imulb in adc add fdivrl sahf rcrl mov test pop pushq cs fs out cmpsb adc sub pop int rex.R insb and mov (bad) in stc vpmaddwd rex.R or lods lahf push rex.WXB repnz xor mov stos icebp sub pop jnp mov and hlt rex.RB (bad) in icebp rex.WRX jns cmc mov je (bad) test sub and rex.XB jmpq or (bad) mov mov rex.WXB mov rex.RXB rex.WB repz add sbb rex.XB mov movsb jno rex.RX xchg jmpq (bad) sub rex.RX callq mov pushq mov pop mov xlat imulb (bad) cs sub (bad) emms mov cmc (bad) or xor jae pop xchg add jbe fisttp divb cmc int imul mov mov scas (bad) add mov mov repnz cs leaveq stc cli movsb clc jns test decb or pushq xchg retq jmpq leaveq in cli pop (bad) decb fidivrl sbb sub mov or jp add movsb iret mov hlt nop or mov repnz icebp outsb mov (bad) mov lea (bad) idivl sub mov rex.WX lret xlat repnz hlt rex.WX icebp (bad) mov sub pop and (bad) sbb cli (bad) imul int3 fs int3 jb xor sub js (bad) mov sti and (bad) in cli scas add leaveq addr32 cs mov push adc mov mov roll xor ds rex.RB mov mov mov mov and cs xchg test hlt (bad) fimull adc movb sbb rex.WRXB rex.WRX (bad) callq test push loope stos cmc mov leaveq rex.X (bad) insl and sub lock loope jbe xor retq (bad) (bad) xchg pop negl mov mov in rex.WXB or movabs repz stos fwait or subl gs psrlq cmp (bad) icebp rex.R movsb jb leaveq retq push (bad) rex.B push add in in rex.X imul pushq test mov outsl or in decb mov movslq xchg insl scas add rex mov mov sub in or pop or sbb add jb rex.WRB cmc rex.B (bad) gs int3 pop cltd rex.R jno push xchg loop pushfq (bad) mov (bad) add bnd cmp or xlat retq rex.WRX repnz rex.R test in insb rex.B rex.WB movabs push hlt scas (bad) out pushq outsl scas in shlb int3 rex.WX fwait nop movabs mov fldenv mov mov in (bad) sbb jo mov sub outsb xchg pop loope jle xchg (bad) cltd jne movsl pop out movabs xor mov sub nop jbe adc out rex.WRX cmpsl mov mov push iret sub xchg add (bad) mov callq jge enterq loopne (bad) es push mov pop leaveq add sub (bad) mov leaveq movsl rclb cmp (bad) rex.XB fwait repnz mov repz insl (bad) and (bad) xchg std (bad) jp fwait (bad) push cli mov ss cmpsl jmpq out add out push orl cltd test sbb rex.X addl (bad) rex.WRB div repnz sbb or imul jle and rex.RXB gs in bnd rex.WXB std test movsb mov push or sbb rex.WR rorl sub movabs push mov (bad) push mov shlb out fldenv je mov mov js xchg mov add mov (bad) add (bad) and xchg sub xor stc callq out repnz movsb (bad) sub sub leaveq cs outsb jnp and mov pop test pushq pop cmc rex.W add imul mov xor popfq cmp jnp and sbb sub mov rex.WR ss lods mov pushq negl rclb add loopne pop sti movabs (bad) outsb xchg callq nop pop (bad) and mov or xor retq lret fst mov xor pop or push movabs (bad) (bad) add jns retq sub lods outsb popq nop mov and outsb cmp (bad) pop mov (bad) jnp sub pop jmpq test pop test adc add cmp (bad) and rex.W mov std pop jne sahf pop rex.WX mov adc cwtl adc test insl mov shr mov hlt fdivs movabs int3 rex.X loopne sbb (bad) rex.B sub rex.WRXB xor repnz (bad) xor rex.WRB out in movabs xchg cmc rex (bad) (bad) and jne icebp retq or out (bad) loope cwtl cld hlt test cmp cld pop xlat and (bad) or loope rex.WXB outsl xorb sub (bad) scas (bad) (bad) and (bad) xor cli test push cltd js xlat (bad) jp jb addl test (bad) and divb (bad) icebp rex.WXB test xchg pushfq pop rcll jmpq rcrb mov shrb rorl rex.B sahf xchg push flds cltd (bad) pop adc movl fidivrl retq insl cmp (bad) rex.R xchg enterq push (bad) movslq sbb (bad) je cmp xor cmc movsb or repz rex.R subl test fdivs (bad) pop lods push sbb mov rex.WXB (bad) loopne xchg or pop icebp push mov shrl leaveq fcompl sbb mov jno sub cmc and sar rcll rex.WR stc movabs mov loope jmpq pop shrb mov loopne cmc out push imul int movsl ja mov jmpq adc lret rex.RX (bad) sbb pop cli sub jns pop rex.WB rex.B negl push xchg xchg xor lock cmc rex.RXB pop pop test sti mov sub rex.X pop jge rex.RXB add loop test in pop lret icebp push xchg mov rex.WXB andl adcb lret in rex.RXB enterq jmp rex.WRB or xor (bad) test fimul pushfq movabs fistpll roll retq mov rex.X jmpq rex.B add (bad) or fidivrl (bad) loop (bad) lock enterq adc ja sub rex.WXB scas xor xor cmpsl xor in retq scas jno xlat sub xchg ror in rex.W jg (bad) pushfq xchg pop sub mov (bad) (bad) xchg movabs loop (bad) std adc sti cmp rex.WRB (bad) xchg enterq mov (bad) int3 sub add cltd and movabs xchg test cltd pop mul sbb sahf rex.WR rex.WRX sub in and cwtl pop test mov rex.WR xor (bad) mov (bad) lret test test push xchg (bad) leaveq jp jmp mov adc int imul xchg xchg push jle jp adc (bad) and xor cmc jmpq (bad) fnstsw je push leaveq pop test rex.R jge jo mov (bad) jae movslq movslq mov nop and and retq sahf test and sub icebp imul gs repz enterq mov add (bad) (bad) mov sub mov cld movabs xor xchg rex idivl xor (bad) mov pop (bad) int mov fwait inc out (bad) sbb lret loop xchg callq int3 rex.W (bad) rex.WB rex.XB faddp gs sub movsb imul xor jmpq fildll push add push roll pop lods rex.WX pop rex.X pop (bad) loope retq xchg (bad) mov xchg pop push fldl orl and add pop rex.WB sbb enterq (bad) (bad) ror lret icebp fidivrl (bad) movsb push rex.WB rex.WXB mov stc stos xor insl mov (bad) push jns and xchg fidivr fmuls add push loop hlt rex.WRB xor lahf rex.R xor rex.RX xchg sub jbe loop movabs retq (bad) (bad) mov fild leaveq lret (bad) mov xchg std jmpq push (bad) mov (bad) add cs (bad) push cmp repnz rex.RXB jb movsb pop xchg (bad) test add ja loopne gs pushfq push fildll (bad) mov and or pop fdivrs sub mov cwtl xchg movabs lahf cltd lea movabs or (bad) mov and pushfq es cs test mov add push in sub (bad) xchg in mov xor (bad) cltd sar out retq cmp add and mov jne (bad) iret clc (bad) rex.R loop int3 nop xchg pop lret lret rex.WB rex.RXB cs clc xor (bad) or mov retq hlt fsubrl mov xchg subl loope cltd sub fcmovne jbe add rex.WB imull movslq fstps pop faddl out push (bad) (bad) cmp movabs (bad) (bad) test lcall sub (bad) leaveq push retq adc retq (bad) jns in fldcw adc mov pushq in mov rex.X mov mov mov or int3 (bad) cmp cltd xchg sub rorb in xlat sub (bad) and fwait sub (bad) sbb mov push mov movabs sahf cmc rex negl mov repz (bad) js rex.XB jrcxz jl nop sti jge kandnw mov mov (bad) push and mov out adc cmpsb pushq test flds out mov iret notb repnz mov or mov test (bad) (bad) pop addl int3 xor push mov mov punpckhbw or int divl jge lods in stos cli jl test push (bad) and enterq xor jmpq rex.B enterq push icebp movabs movabs cs lock push rex.W icebp or xchg push cmp rex.WXB (bad) add cmp mov movsl callq in mov test fisttpll movabs (bad) (bad) sbb xchg sub sub icebp sub imul cmpsb mov xor repz ds (bad) add (bad) push sub mov scas callq (bad) lods mov fistl rex.WR vpackssdw and pop enterq (bad) pop jae adc (bad) (bad) bnd rex.RX rex.WRXB (bad) or mov rex.WB xchg jrcxz rcr ja mov xor test fadds out mov in test stos rclb test mov push and pavgb retq std movsb cmpsb mov pushq cld jmpq pop fcomip fwait (bad) dec lret fnstenv (bad) mov add pop xor test pop cs cmp (bad) jnp fidivl jge mov (bad) cwtl add stos jno sub mov pop cli cltd rol add (bad) retq callq leaveq cmp lods jae cmpl push xchg enterq rex.RX rex.RB rex.RXB cmp (bad) (bad) jns sub mov mov sbb lods (bad) cltd and cmp pushq xchg pop sub jno mov shrb cmp icebp push stc cld pop loope cmpsb pop fdivr sarb (bad) jae js std (bad) imul movabs adc sub clc mov idivl jl cltd sub cmpsb fxch cwtl je xchg jo jno fwait mov fistpll xor pushfq mov movb and (bad) xor pop mov negl (bad) pop xor mov in (bad) add xor lret cvtps2pd xchg fcoms lret andb in (bad) enterq push and cli mov (bad) pushfq xchg retq and rcl (bad) shlb icebp rex.WB in mov mul movsl (bad) fldcw jns pop pop vpunpckldq loopne (bad) rorb and pop mov mov sub adc imul jae mov xor cmp (bad) and clc add cmp rorb retq in cwtl test mov out xlat (bad) scas es retq push (bad) mov xor add cwtl insb sti (bad) nop fyl2x xor (bad) mov jmp repz scas cld jo movsl (bad) stos in cmp hlt pop fimull (bad) jp frstor int3 int (bad) retq stc sub (bad) fsubl icebp jno (bad) mov test lea cld (bad) repnz gs add rex.W (bad) cs sti push int3 (bad) (bad) add sbb jb leaveq cwtl rex.RXB push rex.WX rex.X movb pop clc sub cwtl lret movb lods (bad) xchg rex.RX pushfq push fcomp rex.WX sahf xchg pop (bad) (bad) pop imull cld ja mov sub (bad) (bad) mov (bad) int test cmc es loopne adc (bad) fcmovb mov (bad) testl sbb add test xor and or (bad) sbb pushq stc rex.RXB lret cltd (bad) sbb cli cs (bad) sub and in rolb in test icebp (bad) in fiadd xor cmpsb (bad) (bad) sub retq (bad) (bad) cmpsl and xchg mov hlt sbb repz add lods loop cwtl xor add add sub (bad) mov (bad) xchg leaveq repz add ja push xor out adc nop sub rex.R rcr sbb or mov fcoml or ror nop lret mov nop xchg sub stos std jns lahf (bad) int3 xchg (bad) pop rex.WR add movsl ss xchg mov jno mov adc xchg loop pop icebp lahf rex.WB (bad) (bad) movabs (bad) mov (bad) jb push xor pop mov repz xchg or jmpq cwtl pushq adc sub mov ror test in xchg add sbb negb (bad) or fs mov out add (bad) sbb pop in loope xorl rorl cs sahf fsubr (bad) xor repnz (bad) pop fadds mov flds xchg push vandnpd cmp sub sahf fistp (bad) xor enterq cmc je (bad) mov lret mov loop pop icebp xchg paddb sub out rex.WXB (bad) rex.B rex.RX icebp retq push int cltd (bad) negl xor test rcrl fistl gs xchg adc cs andl jbe int mov rex.WRX repnz push rex.RXB jns xorb jo jnp rex.W xor mov and movsb movabs mov (bad) movabs (bad) and or out (bad) ss outsb xor sub (bad) xchg mov (bad) or movabs and (bad) mov rex.RB mov es je mov (bad) push mov add gs jne movups std jb leaveq icebp rex.WX rex.RB (bad) and and xor in je xchg lock test stc pop loope xchg (bad) (bad) pop or neg cwtl pushq rex.RXB in mov jnp add lods sub (bad) adc decl vpsubd fsqrt jno (bad) mov lret xchg and (bad) repnz sub iret rex.R cmpsb pushq fcoms shl and mov mov loope loopne sbb std movabs mov in ja cli mov (bad) rex.WRX add mov jno rex.WRB push movsl pushq add pop mov movabs movslq sbbl mov jbe adc add rex.X rex.RB push jge push gs xlat icebp cmp movabs or movabs mov cld sbb sub (bad) jrcxz pushq and fs xchg add cltd test cmp mov add xor add out (bad) jae or nop (bad) (bad) jno cs add sub fcomps add jmpq sub test out push (bad) sti repz pushfq jns imul imull sti insl icebp fisubrl fstps repnz rex.WX sbb cltd (bad) (bad) lock in js rex.RB in xlat pop in shrb xchg mov jo test and enterq and mov jae (bad) (bad) jmpq pop mov jrcxz pop hlt and gs add mov faddl fild out (bad) movabs mov (bad) test test mov xor (bad) xchg push pop or stos rex.WX (bad) add (bad) fimull xchg rex.WB rex.WRB jp cmpsb rex.XB rex.RB cmpsb fnop jne jle (bad) lret xorl cmpsl cltd lods pop (bad) mov jp retq fidiv and (bad) add jmpq (bad) fdivr (bad) rex.WRX imul pop cs imul push sbb out cs rex.RB addr32 pop mov sahf or rex.WRB rex.RXB mov mov movsl hlt cmp js mov or xor stos or lods xchg adc rex.WR cld icebp popfq pop cmpsl mov xlat push movabs mov hlt mov xor jg mov mov xor adc rex.WB outsl out mov imul (bad) (bad) hlt and (bad) mov xor retq adc add (bad) rex.WX loopne fsubr or or jmp or sub pushq (bad) push icebp insl (bad) mov addr32 xchg out (bad) repnz test cmpb add cs or cmp (bad) out mov (bad) test sub pop retq pop rolb (bad) push push (bad) add and ficoml rex.R add and or loope roll sahf add mov mov movabs out mov push int jae xor cs gs xor rex.RX cmp jmp adc icebp or xor stos pop (bad) cmp push or or in rex.WR roll movabs test stc mov (bad) (bad) mov int3 lea rex.W sbb mov fxch xlat (bad) rorl cmp test and (bad) mov push (bad) (bad) sub orl (bad) (bad) pop (bad) cmp jrcxz js addr32 add mov (bad) out mov cmp or test shrl sti out pop retq rex.RXB lea rex.WRX rex.WR (bad) out in notb iret rex.WRX push (bad) fstpl pop hlt sahf fxam (bad) cmc lahf sub outsb test rex.WRB fcomi jb rex.RXB mov mov cmp cmp faddp xlat rex.RXB jl fxch mov sub mov rex.WB or test cmpl rex.X mov std (bad) xchg (bad) xor (bad) jp mov iret pushfq or divl and jo pop rex.RXB repz pop retq loop push imul in or pop clc (bad) fidiv and rex.WXB mov outsb xor xor (bad) adcl pop cmp (bad) loop outsb pop sarl pop mov cmp repz je cmp push cmp add imul ds jrcxz jmp xor cmp cmc leaveq sbb xor retq insb movabs loope cmp insb mov movsl cmp mov (bad) icebp jmpq notl retq cwtl push (bad) imul enterq repz loopne (bad) rex.WRB rex.WRB jae (bad) xchg ja (bad) pop cmp divl (bad) (bad) mov (bad) pushq mov lret mov rex.XB movabs imul repnz sbb pushq pop mov (bad) in pushfq insl sub mov or rex.WR int3 mov leaveq jo mov mov adc loop jo rex.XB lock rex.RB and fistp pop enterq jg mov sub addr32 fnstcw pop js cmp popfq lahf or jge or ss mov nop rex.XB mov jge (bad) in test leaveq add mov or or rex.WXB mov add (bad) jne fisttp add mov (bad) outsb xchg mov push flds xor pop retq cs loope loope (bad) sti cmp shl ror or vmovss out lret cwtl or and clc pop rex.WB in (bad) enterq push pop leaveq xor loopne test rex.RB (bad) (bad) add rex.W rex xlat out or addr32 mov int (bad) (bad) add ror mov retq stos popfq enterq xor mov mov (bad) enterq sbb and repnz in jp fwait repz ficomp sub (bad) jle rex.WX sbb rex.X adc cli sub callq loope loop iret stos mov cwtl mov popfq loope int int3 xor and and rcl pop movabs hlt (bad) rex.RX cmp sbb rex.WRB movabs imul sbb js jo jns rex.WX (bad) xchg adc (bad) adc fistl add pushfq rex.X cld push repnz xchg std test fmull xor rex.B (bad) cmp in add mov movl int movsl movsl test (bad) out (bad) cmp sub xorl mov rcrb xchg imul shr xor addr32 fwait xor (bad) fwait enterq sbb notb (bad) xor (bad) and cmpsb cmp mov enterq adc mov cmc fcmovu in loope or sub mov callq (bad) lea mov (bad) out pop imul pop lock rex.RXB test sub sub repnz cmp rex.WRB mov cwtl leaveq test mov in rex.RB fs (bad) (bad) test int3 or xchg hlt mov mov mov jae int3 iret push cmp in leaveq fstp in jb rex.RX (bad) imul enterq iret adc xchg jle clc pushfq rcrb nop push mov push jrcxz or sub int3 rex.RXB xchg add vucomiss (bad) (bad) cmc push fmuls icebp repz and rex.WB rex.WR idivl lret hlt in push mov mov mov in ficomp mov xor push kandb movabs mov fs add int repnz add rex.R sarb roll (bad) negl repnz movsb in test int3 mov adc push mov loop (bad) retq jbe retq enterq retq add xor add fisttpl repnz (bad) movl rcll xchg mov add mov (bad) sub mov movsb jg (bad) retq fidivrl movabs stos in icebp pop out mov adc rex.W adc cmpsl (bad) rex.WRB movsb cld rex.XB lock loopne insl addr32 xor pop push shr imul rex.RB nop (bad) add mov (bad) xlat retq mov test xor mov add (bad) outsl rex.R pop jb mov rex.WB retq retq mov add sahf mov or lret or xor add jno mov xchg out or or leaveq stc or rclb rex.B cmpsl test push add stc push xchg or cli or rex.WX (bad) out sub pop movsl xor add push sbb movabs rex.X icebp add pop int (bad) movslq sub rex.WR xor loope movb pushfq mov sub add int3 insb sub (bad) add mull rex.WB (bad) loope adc jo es adc lret (bad) in idivl xor add fisttpll add (bad) add movl test adc movabs (bad) imul push mov rex.WR loop ds sub (bad) lods rex.WXB sbb ror leaveq shrb mov (bad) sahf rex.X stc mov cs je,pt sub xlat push (bad) xchg mov sbb add in jl (bad) add pop (bad) test (bad) rex.WRXB xor xor cmpsl loop or movabs (bad) (bad) add rex.RXB rex.WR rex.WRB imul jne pushfq clc rex.X jmpq movsl (bad) fcoml icebp xor rex.RX je add xor (bad) mov loop repz cmp cmp sub or movslq sbb vaddpd add (bad) push repz (bad) or cs cmc mov nop (bad) js repnz jp push in jle fsubr (bad) iret pop mov (bad) adc (bad) jbe jmpq loope xchg (bad) adc jrcxz (bad) sbb sub jnp pop (bad) je shrb icebp jrcxz int jo,pn repz sbb xchg or nop int jmpq movabs rex.WRX cmp loop xchg test outsl cld add (bad) sbb add (bad) cs (bad) or mov rex.RXB rex.B cltd lock (bad) pop mov nop mov lret cs (bad) cmc (bad) mov (bad) lods callq scas add scas mov add (bad) movabs sbbl leaveq pop mov leaveq movabs xchg add fstl xor (bad) rex.RB cli xlat pop fsts hlt rex.RXB mov jo (bad) (bad) mov jg cs rex.RXB mov int3 and ja loopne (bad) sbb (bad) popfq iret fimul retq loope nop int3 jl push xchg leaveq in adc push movl (bad) (bad) mov sbb xor out repz add addl (bad) xchg in stos jle mov sub int3 jnp pop xor lret jrcxz movsl (bad) incb addps (bad) (bad) push pushfq scas int3 sbb push (bad) rex.WRB mov mov lahf (bad) jno sbb sub or adc clc leaveq jns jl xchg retq (bad) (bad) xchg pop jl scas mov add (bad) mov imull add and cli mov cmc in mov and enterq (bad) cs sbb (bad) jrcxz rex.WRB mov cltd cld int cmpsl (bad) push sti sub push leaveq (bad) push (bad) cmc rex.WXB or xor cld stc cmc add mov out rolb repz test outsl add icebp nop rcll sbb mov jno in (bad) lahf rex.WRX rex.WRX fs scas xor retq int sbb sbb retq icebp sti sbb xor movabs data16 pop hlt icebp (bad) mov test cltd (bad) clc fcmovne retq sarb out add and ss rex.RB iret jrcxz jns vsqrtps mov xor pushq adc cmp push xchg iret je repnz (bad) out jrcxz xor (bad) mov adc jle cmp push xor lret rol rcll cwtl and leaveq (bad) and add cld loope xorl mov (bad) and pop mul subb xchg rex.WB mov fninit out (bad) sbb (bad) cld (bad) add cmp adc clc hlt (bad) test xor out jmpq fdiv js (bad) (bad) movabs (bad) xabort sub out out rex.XB data16 (bad) (bad) xor (bad) mov mov xor stc (bad) add repz (bad) mov imul out rex.X jmpq test xlat and (bad) (bad) (bad) out jb (bad) and cmp test (bad) (bad) leaveq or popfq enterq (bad) je callq add xor cmc subl idivb rex.RB shrl rex.X jmpq stos repz hlt jbe jbe push and sarb add (bad) mov (bad) cld sub adc loop rclb cli (bad) mov (bad) neg divb lret pop ds callq jne test mov jne add imull cmpsl out adc mov icebp and cmp (bad) add lret in in mov cli in cmpsl and rex mov (bad) je callq xor lret jns in and jae movsl xor (bad) push sub push sarb or adc nop jp xor ds (bad) loopne enterq jrcxz xchg test mov cs cmp sarb add sub adc lock rolb (bad) or lea movsl movabs rex.RB repnz cmp sbb push mov test mov (bad) mov notl test cld cli mov rcrb (bad) or nop jmpq rolb out or mov sub lahf vpaddw int nop out cmpl mov xlat (bad) (bad) neg push sbb fbstp sbb sub jmpq (bad) pop retq rex.R xchg frstor (bad) mov retq mulb or (bad) int rex.RB jae test insl lods outsb xchg jmpq callq out cmpxchg imul (bad) mov xchg jns or test push xor add or mov loope pop movabs rex.WRXB mov roll (bad) nop outsb ror cld fild iret in pop and fildl mov pushfq push jrcxz mov add lock fild or (bad) (bad) fisubl mov mov repz cltd sbb lea xor xor push shl fild lods clc shl add xchg jo jae movb or test cmpsl pushfq nop jl push cmp mov push test enterq int3 nop rcrb clc jnp mov jnp rex.RB mov rex.RX mov test (bad) and sub int3 add xlat icebp sbb loop lods xchg (bad) sub test loope pop mov pushq adc sbbb jbe adcl js jbe mov loop rex.X enterq (bad) int3 (bad) pop fadd sarb outsb or sti stc mov rex.X jnp xor lods mov lret rorb xor adc or jns or or fstpt fsts test pop xchg or sbb and mov rex.WRX fwait mov xor mov jmpq lahf lret sub clc int3 xchg jns add mov (bad) or int3 (bad) es int (bad) or cmp jbe (bad) rex.WB push test retq nop (bad) ss rex.WR leaveq jrcxz sub push add add popfq cwtl pop stos cs rcl mov retq xchg (bad) lea enterq pop decb loop sub mov jg mov leaveq lods stc (bad) or cli rex.RB ss leaveq (bad) rex.W rex.R add in repz xchg mov js outsl repz (bad) leaveq cmp imul addl ds xchg xlat (bad) es leaveq (bad) int sbbl add pushfq (bad) push leaveq pop add and loopne xor fdivp sub xchg callq int3 add mov mov sarl in lret (bad) sub and (bad) or push xchg rcrb (bad) adc mov int fidivl clc jne testl repz movabs (bad) cs movabs fdiv rcrb popq sahf jrcxz xchg movabs loop pop jbe leaveq jrcxz sub mov rex.RB (bad) callq add add adc xor add in lret mov (bad) xor int3 mov sahf sub sub ja xchg mov (bad) ja je retq or mov mov xchg mov lret add push mov (bad) loope sbb or mov mov or out iret adc lock mov adc mov shlb int sbb lret jns leaveq mov sub fwait jbe repnz xor mov jge (bad) mov fwait (bad) (bad) pop or xor cmp push and cmpsb (bad) icebp je int3 or shrl rex.W or popfq test jmp add (bad) add mov or nop rex.WB (bad) fs push retq sbb lock push push or add mov icebp add mov mov fxtract jp (bad) (bad) (bad) xor sub mov and shll retq add fsub loope mov callq xchg adc out (bad) test jnp sbb jne push jno jae outsl jno int jbe mov out lahf enterq (bad) (bad) mov jnp (bad) jl (bad) jno out jo hlt notb repz cmpsl insb xor roll rex.X mov jnp rex.X hlt xchg repnz clc pushfq pop orb sar ja mov in sbb enterq in out mov stos stc out sti imull insb sbb jne test stc lahf pop in sub sti cmp sub shlb repnz repnz xchg xchg mov ror cmc sub pushq push (bad) jne cld xor test rcrb sub incl sbb fild jno rex.WB lret xchg mov divb sub rcr (bad) or push (bad) (bad) es outsb negb jno movabs mov js mov mov (bad) out sti push mov leaveq fisttpl pop (bad) int3 stos rex.R sub (bad) loop push enterq rex.WXB repz (bad) in jrcxz rex.WR repz push retq cmp rex.WRB adc xchg leaveq lea or mov rcrl pop mov int xor fcompl fmuls jmpq jmpq (bad) or (bad) cld rex.WRX and jno xorb rex.WB imul push rex.B or subl rex.WXB test mov xor xchg add lock rex.RXB rex.WR test mov leaveq jb jmpq xlat pop (bad) pop (bad) cmc nop int rex.RX retq xchg and shlb jrcxz pop std retq mov shrb testl in movsl mov rex.WXB loope loopne lret movabs rex.RXB or xchg xchg rex add movabs jnp or (bad) in loope pop pop add (bad) test pushfq rex.R ficom cmc (bad) stc stc add movslq in mov roll lock xor xchg adc idivb xchg fldpi rex.WRB xor leaveq enterq loopne jmpq mov cltd sub mov rex.RX retq cltd retq (bad) jno andl loopne lods addr32 callq in mov pushq xchg icebp or or cld test ffree test xor fcmovnb xor stc sub icebp pop movsb scas icebp mov test add xchg icebp mov loopne xchg sub mov icebp rex.R sub leaveq cmc leaveq adc cld shll out std cli rex.B hlt jp push (bad) (bad) or (bad) mov in (bad) xchg sahf rex.B xchg rex.B mov icebp iret in (bad) mov out pop jno xchg (bad) jae or mov icebp adc shlb mov int3 imul add jl sub movabs pop mov int3 mov mov rex.RB pushq (bad) (bad) std cltd jrcxz xor hlt add jp in out repnz leaveq outsl jo add push cmpsl retq vxorpd (bad) fdivs lods rex.X fisubrl adc rex.XB sbb int3 out sti push mulb icebp fs rex.R push or xorl cmc mov icebp xor push (bad) icebp pop adcl clc loope add jg jl in js xchg movabs gs test out out rex.WR retq rex.R xchg loope jno (bad) movabs movabs movabs icebp sub cld fistp loope pop mov addr32 clc xor rex.XB (bad) ficom adc mov icebp jno add mov lret andl mov mov jbe or out movabs rcl (bad) mov pop cmp int3 retq (bad) adc (bad) fnsave mov pop movabs or cmpsl (bad) mov pop stc icebp push leaveq (bad) int3 (bad) sub (bad) movslq (bad) mov pop cltd (bad) (bad) mov or loopne (bad) jno movabs movslq fsts fisttpll and outsl cmp pushq xorl push leaveq xchg mov loope or test rex.RB mov test rex.WXB in (bad) add sarl mov rex.WB in enterq std jb or sub add lret add xor xor xchg add fcomp xchg repz jmpq cmc push or adc lock adc fildll in roll fs cs rorl mov loopne and test clc shll out movabs xchg rex.WXB sahf and movabs shrb repz (bad) push movabs and rex.RB or rex.WRB mov and sarl stos rex.W pop insl icebp rex.R sub (bad) mov movabs icebp (bad) lock sarl push (bad) lahf mov sub sti (bad) mov rex.XB fisttpll inc jne mov (bad) loope sub cmpsl jb test nop rex.B (bad) jge cmp (bad) roll test loope vpaddusw mov pushfq leaveq nop not or jle hlt in and (bad) icebp mov and (bad) in leaveq and orb test fist or and gs shll xor movabs andb xchg repz pop and (bad) clc jb cli rex.WR jle ror mov callq lret cld add gs movabs in idivl movabs jbe in (bad) movsl cwtl pop cmp add adc mov add xchg (bad) in in push test lahf shl (bad) hlt retq loope rex.XB (bad) (bad) xorl fidiv xchg je xchg rex.WRX out mov xor (bad) push andb push push hlt sub fs icebp cmc and retq hlt rex.RB jrcxz or and xchg sub sbb mov xchg test cltd jge (bad) movabs outsb jge rex.WXB cmc icebp rex.RXB and imul mov xor jne in shl rex.RB stc (bad) loopne ror std mov jmpq sub fcmovu popfq pop icebp sub fisub in mov movabs icebp cltd sub ja and je add mov rolb mov fs sahf gs (bad) lret xor shr clc mov rolb retq and rex.WRB sub sarl (bad) pushq lahf mov lahf lods rex.WXB (bad) movabs fmuls jl (bad) loope (bad) hlt and je int3 movabs mov xchg xchg add stos insl adc outsl out iret mov cmc in je jno lret sub push insb popfq sub cmc xor push enterq mov or stos retq icebp sub test movabs stos or pop mov imul std lahf hlt jrcxz mov mov sbb test hlt mov movabs xchg or mov xor shrl cmp (bad) addr32 mov loope shr movsl add or enterq fdivrl cmpb jp outsl add (bad) adc rex.WRB retq (bad) js enterq rex.WR movabs cmc (bad) clc sahf movabs (bad) push cld and or std cmp retq fisubrl rex.XB xchg out sub sbbb cmpsl in add sti or iret test (bad) rex.WXB add ja (bad) mov enterq rex es adc and (bad) fmuls (bad) sub xchg mov mov (bad) (bad) movabs rex.B xor js rex pushq cmp int (bad) jno jb (bad) push iret int jbe loope mov hlt test scas push cmp je,pt sbb (bad) in movsl insb movabs xchg retq out rcr mov or xchg and xlat orl pushfq pop test (bad) cmc (bad) icebp out and mov push insl out cs out sub jno fldenv (bad) mov loope sub loope cmp int rex.RB loopne add add cmp xchg (bad) in fdivrs in and (bad) cmp icebp test or jne mov jrcxz,pn and (bad) xchg add fs rclb rex.XB testb jge xor clc add faddp rorl rex.B add clc stc test movb test cmc jmpq mov fdivl (bad) loop or rex.WR (bad) and xchg push adc (bad) (bad) add mov fdivr xchg rex.XB out callq xlat (bad) rex.WRXB or add int push sbb out (bad) fisttpll (bad) (bad) adc adc retq mov callq mov mov jge imul callq sarb xchg mov lods in movabs (bad) sub movslq mov xor sbb xchg imul (bad) cld rex.X gs sub shrl mov xchg rex.WRXB mov add add icebp add mov fdivrl cmp add mov pop neg mov xchg in adc hlt (bad) rex.R rex.WRXB movabs repnz lahf sti sub cmp repnz push jp mov pushq rex.X adc push mov cs fidivr xlat (bad) xrelease sub je movslq callq (bad) stos pop rcl xor ja cmp adc (bad) mov int xchg roll xor xchg insb add pushq andb icebp rex.XB (bad) insb in rex.WX and scas fnsave mov (bad) (bad) cld pop add xchg in movabs rex.R jo rex.WR stos fcomi lock add insl movabs js (bad) int cwtl (bad) gs adc adc rex.WRB std outsb and or sbb (bad) fwait shrl fistpll fmul lods xchg sti out jnp mov (bad) negb (bad) xor sub stc clc pushq bt cmp cmc bt cmp jmpq jp or hlt out sbb mov cli int3 (bad) sti jrcxz cmp jl loopne lahf push or movabs lahf jmpq pop xchg (bad) and and xchg adc lahf test and rex.RX or or xchg (bad) mov sbb out jmpq imul popfq add ja cmc and push push loope stos (bad) push pushq jmp insl int rex.WX mov (bad) (bad) sti (bad) and sbb (bad) and or leaveq xor mov (bad) (bad) lcall movabs mov mov (bad) (bad) sub lea or xchg repz (bad) push pop sti xchg cld or sub (bad) lock test std mov xor sbbl add mov adc dec btr mov ror or bswap mov cmp clc cmc cmp xor bt cmc jmpq jmpq fnstenv rex.WX and xchg test fsub (bad) repz cmp int rex.XB rex.WX (bad) (bad) (bad) mov out in mov test mov mov push (bad) jbe mov cmp sahf cmpsb in add cwtl mov ds (bad) xor test jl push sarl fistpll scas std out mov mulb out sub cld stos lret addl cmp lret adc or sub rex.WR (bad) jle callq es (bad) (bad) decb (bad) (bad) (bad) decl mov adc mov mov ds (bad) or jnp imul (bad) sbb (bad) ja addr32 ds add jnp rex.WRX (bad) lahf gs fistl std movsb pop movabs mov lock sub pop icebp adc xor es sbb cmp jb pop xor testb mov rclb sbb test mov frstor repz rex.WRXB ds xchg jp movsb fmull push fwait (bad) pop in xchg sub rex.WXB in cmpsl jne mov add lret adc xor mov imul mov cmpsl popfq mov rex rex.B (bad) rcl and callq addr32 mov (bad) fsts jp (bad) mov es mov mov (bad) (bad) retq int (bad) xor xchg jnp jmpq push jbe and pushq ftst mov (bad) (bad) stos movsb xlat repz roll insb add mov sahf push (bad) mov cmp rex.WXB cmp cmc pop fimul (bad) jg imul repnz rex.RXB pop mov sub xor repnz sub sbb cltd movabs pushw (bad) (bad) (bad) (bad) cmp leaveq pop (bad) jl push sub es (bad) (bad) orps (bad) (bad) (bad) mov cwtl rex.W ss (bad) movabs insb (bad) callq clc xor add out (bad) mov adcl (bad) jno (bad) (bad) rex.WRB rex.WR js icebp retq push (bad) mov xor cmp xchg shr jno inc jg rex.XB pushq xor jbe (bad) cmpsb retq (bad) in je cltd movsl rex mov test (bad) jrcxz (bad) std cld push sub mov fcompp and negl xchg rex.WX (bad) int adc lret std imull rex.WXB ss jb ds notb jge mov cli jb jno (bad) pop cmp enterq fiaddl in (bad) pop rex.WX test (bad) (bad) (bad) sti mov (bad) (bad) (bad) sbb lods rex.WR rex.XB jne stos sti xchg scas std jns adc (bad) (bad) (bad) lcall (bad) je lods (bad) mov mov (bad) (bad) rex.WB push cmp callq rclb rclb fwait neg rex.RXB cwtl (bad) adc pushq sbb jns mov xor jne jmpq jl jb bt cmp jmpq ror stc shl sub movzbw mov lea jmpq jb test bt bt jmpq clc or jmpq test loopne fcoms push and (bad) mov mov (bad) lods scas sbb and push push and ds fdivr adc sub xchg rex.XB rex.WX iret stos (bad) rclb rex.X test or loope test sub (bad) std mov cmp push sbb fwait mov xor cs xchg (bad) ds and rex.XB push in (bad) (bad) (bad) decb (bad) (bad) (bad) decl add xchg test sbb loopne stos mov stc mov out (bad) sbb jle,pt (bad) sub fdivr lods (bad) jne out mov pushq or jae sbb cmp (bad) (bad) jrcxz mov movabs (bad) xchg or sub int fwait xor xchg callq mov test mov (bad) notl clc icebp movabs scas decl stos xor xor in (bad) mov or mov clc jnp stos (bad) sbb (bad) (bad) mov retq (bad) sub mov sub ficom cmp add callq add repz pushq (bad) (bad) cld in rcl cmp (bad) (bad) pushq je loope fdivrl and rex.RXB lea iret idivl and mov nop lret pop (bad) mov jle xor rex.WXB (bad) jb (bad) jg xchg int add add insb (bad) push mov lods lret js clc outsl adc sub push shl rex.WRXB mov mov sbb outsl and jns (bad) sti lods xchg sti xor fnsave add mov (bad) in cmp rex.B imul add pushfq (bad) mov sti in lret mov (bad) shrb xorl rex.WRB popfq sahf sbb xchg outsl mov (bad) rex.RXB addr32 or sub fcmovnb xor sub push sbb outsl pop (bad) imul in (bad) mov mov adc rex.X and lock movslq lock jle imul insb rex.XB loop xor xchg xchg (bad) in fcmovnbe (bad) ds movabs fdivr (bad) (bad) (bad) cli rcl cmpsb sar (bad) (bad) std sarb (bad) rcrl je clc (bad) (bad) (bad) callq sub add add loopne cmp out jmpq movabs stos xchg lret pop (bad) je fmul lods fwait mov test or sarl out mov lock lret mov cmp (bad) (bad) cltd jmpq jmpq (bad) (bad) movabs rex.WRXB mov add fiadd mov jle in xor xchg leaveq mov add (bad) test pop mov (bad) pop nop js mov mov (bad) (bad) or scas addb (bad) rex.X or nop (bad) je scas sbb in xor mov jg adcl mov xor jg frstor (bad) stos int3 movabs (bad) (bad) cld or (bad) flds (bad) (bad) (bad) fwait (bad) mov push (bad) idiv cmpb xorl out xor mov insb mov add iret sbb (bad) xchg lods xchg xchg add cmp stc (bad) lea outsl sub retq leaveq movsb (bad) cmc push fimul jne jle fdiv mov mov rex.WR push add fnsave mov cmp in (bad) mov (bad) retq cmp (bad) add rex.WR (bad) lret sub or sahf pop jge adc rcrl xchg pushq lods imul (bad) xchg movabs (bad) sbb adc and push mov hlt outsb or rex.W cld stc sahf (bad) lods iret (bad) (bad) mov and mov xchg (bad) mov xor (bad) in (bad) mov stos lea (bad) (bad) sti sahf out retq repz (bad) (bad) (bad) (bad) stos cmovl rex divl (bad) or mov xor xchg rex.WB (bad) (bad) ljmp (bad) in xchg mov lret sahf movabs movsb leaveq sarl imul and clc rol sbb mov popfq mov adc xchg mov pop pop lret (bad) mov cmp adc stos paddw imul test stc add jmpq jne lea xor xor not mov sbb not add (bad) lock mov cmc clc test jmpq jne cmc jmpq jmpq adc leaveq adc movabs add jae rex.WRX or jl fs loope (bad) cmp outsl int3 outsb and pushfq cld je adc add (bad) pushfq loope xchg fisub jrcxz loopne sbb rex.WX cs pop pop lret (bad) rex.W jp (bad) xchg (bad) (bad) imul popfq rex.WX push pop and lea jg pop sub xchg cmp movabs movaps jle jbe lods (bad) fcomps (bad) (bad) stc mov (bad) (bad) (bad) cld rex.WRX lock mov cld sub adc rex movabs (bad) mov push (bad) fwait xor (bad) (bad) std lahf (bad) rex.R or jmpq movups outsb (bad) cltd xchg rex.WX out mov mov and or rex.WR scas flds rorb ficom enterq gs xor movabs nop mov subb in push xchg xor (bad) xlat xchg pop and cmc sub ss out movsl enterq (bad) and push ror mov (bad) lock rcrl pop or std sar (bad) (bad) (bad) in fmul mov xor xlat mov jge in nop (bad) mov pop xor (bad) movsb rcrb mov ficomp and jl cli adc cmc add movabs mov sbb lods rcrb cmp pop or jb cmp scas mov (bad) mov callq rex.B (bad) (bad) out outsb (bad) adc fs (bad) mulb cmp fisttpll sbb imul retq (bad) cmpsb cld (bad) jmpq cmc pushq cmc cmp cmc cmp jmpq cmp push or je rcrl (bad) sub repz (bad) and and adc mov (bad) mov (bad) and xchg cmc out sbb cmpl sbb loop pop cmc cltd test popfq and popq mov movsl rol fdivrs fcoms int movsb data16 (bad) (bad) (bad) (bad) std (bad) mov push mov pushfq xchg mov (bad) loopne test cltd and rep fimull add add or push mov mov rex.X or mov rex.WX fisub repnz cmp cli rcll (bad) rolb sub cmp (bad) pop cmp movsb push divl and xchg rex.WR rex.B xchg mov adc test add je jmpq stc jmpq jmpq cmp sub stc stc cmc bt ror cmp test clc jmpq rep not not bswap pop jmpq xchg jnp lret test decl sub push (bad) cmc sbb (bad) xor cltd pushq (bad) mov jmp rex.WX lret movsb rex.XB and (bad) or mov rex.R mov movsl cltd mov int sub or pushq std jmpq icebp rex.B out cmp sub fcompl leaveq (bad) rex.WRX mov adc (bad) add sti movabs insl rex.XB pop (bad) (bad) (bad) std or push sar (bad) (bad) std cmp cld loopne jp rex.XB add add ja pop addr32 (bad) push pop mov rex.WRX (bad) cwtl clc adc or adc (bad) fbld psubusb (bad) push push retq xor or sbb rex.WRXB jmp js mov push (bad) xchg lcall movabs mov (bad) sbb mov (bad) (bad) xchg and je bt bt cmp jmpq test movabs rex.WRXB adc fadds ror (bad) in in (bad) retq rolb sub in (bad) callq pop xor rex pop data16 stos mov adc scas jmpq movsl (bad) cmp mov cmc and pop xchg movsb jp insl push mov out fadd add (bad) (bad) mov lods pop xchg int3 mov sub pushq movabs pop sti sub cwtl and and sbb sti xchg (bad) sbbb cmpsl lods in add jnp mov (bad) callq sub or xchg rex.WRXB lea test xchg (bad) add cmc jrcxz cmp rex.R adc adc rex.W nop std and or (bad) or or pop mov (bad) rex data16 es jbe shld stc bsf shrd sub rcl xchg movsbw mov movzbl add not and mov or add sub shr neg adc mov bsf jmpq test je and bt jmpq jmpq ja clc jge stc bt imul jbe stc stc test add jmpq adc jmpq jb cmp clc stc cmc cmp jmpq cmp add stc clc jmpq jne bt jmpq jmpq jmpq add jmpq lea jmpq jmpq std rcll mov rex.RX mov pop ds movsl pop sub sub test rcl in mov xchg pop adc loop jmpq je imul loope insb jo ja hlt jnp es xor iret movabs leaveq rex.RB (bad) rcrl scas addr32 mov rex.W adc mov add (bad) push movabs loopne sbb cs (bad) xlat pop stos (bad) (bad) (bad) (bad) sti cld mov (bad) (bad) decb xchg imul adc (bad) fcomi add add or pop andb scas or scas xor in rex.W rex.WRB mulb notl mov outsb adc rex.WX enterq (bad) add mov or mov rex.X orl fldcw (bad) (bad) ror lea mov sbb btc add rcr mov stc shl mov clc cmc bt sub cmp repnz jmpq jg xchg cmp retq popfq mov ja or rex.W sbb fwait pop push outsl pop pop pop adcl out fisttpl jbe outsl jp add pop testl mov xor add add xchg ja rex.R shrb movabs in jl nop adc mov push cmpsl adc mov xchg mov (bad) rex.WB ss lods leaveq in xchg rex.RXB cmp push cmp (bad) jle fnstenv mov adc incl jmpq jne sar bts xor mov bt jae add jmpq sbb pushq xor mov mov fwait rex.RX mov xor pushq and (bad) mov retq rex.X mov js (bad) sbb lock orl cmp retq int3 clc jrcxz sahf rex.WX (bad) movabs comiss (bad) mov (bad) xchg pushq and test or jbe lods (bad) (bad) (bad) sti xor int3 and std rol xchg xchg mov jl (bad) adc xchg mov xchg mov mulb (bad) lcall rex.RX cmpsl adc rex.XB lods add and xor test rex.WRX shll ficomp xchg or or ljmp rex.RB movb bt stc test jmpq jmpq jmpq jne seta pushfw bt rcr inc inc mov cmc bt neg bt bt stc jmpq jmpq je not mov xchg mov lea movzbl xchg lea lea mov bswap mov mov lea mov xchg xchg jmpq cmp sub jmpq jmpq rcrl pop adc rex.WX sbb cmpsl stos adc test stos leaveq mov cwtl or addr32 cwtl (bad) callq sbb mov callq and rex.WXB xchg movabs (bad) mov test mov and movabs (bad) cld push (bad) hlt push (bad) (bad) (bad) (bad) (bad) loope mov mov jge out in movabs sbb rex.WRX out rorl scas xchg (bad) jnp mov sahf sbb mov xor loopne pushq adc (bad) clc jge fsubl rol outsl xchg add add rex.WXB callq rex.RXB (bad) rcll pop push jb mov sub and test cmp push xor push (bad) (bad) addr32 cmc or fwait mov jns ds rex.RB sbb xor xor fs insb add cwtl movabs xor sub rcr bts add and mov setns jmpq (bad) mov repnz sub hlt xchg rex.RX rex.WRX add (bad) loopne movslq cmp and movabs pop mov rex.WXB xchg cmpsl (bad) jmp loope gs retq fwait movabs (bad) (bad) cmp shld xor rex.WR adc outsl (bad) cmc mov rex.W (bad) cld and sub loop (bad) (bad) (bad) mov setnp fs movslq and cltd mov (bad) sub lea callq lahf repnz mov xorl rol (bad) jmpq add je and addr32 rex.WB in lret xchg in add (bad) outsb pop cmp or or xchg pushfq cli es rex.WX add (bad) movsl sub (bad) (bad) jrcxz jmpq hlt cmp jbe cmpsb and cmp rex.RXB pushq jmpq jmpq test jmpq jmpq jae shl mov or and xadd inc mov cmp mov bt cmc xor clc cmp jmpq je clc test clc add clc cmp jmpq jmpq rex.WB or rex.B cmc (bad) test mov pop push test lods scas std cmpsl push sbbl (bad) (bad) leaveq test stc rex.WR (bad) mov je jrcxz mov out jne std or pop notl jl icebp (bad) cmc hlt rex.WR pause (bad) in cwtl (bad) icebp test xchg mov jne stc or movabs loope push in mov sub xchg xchg rex.B rex.R leaveq rex.XB loopel rex.RX mov in mov icebp out fs gs or sbb (bad) loope std stc jae mov xchg shr jns (bad) push mov jns jno movabs addr32 fdivr (bad) xchg (bad) movslq lock icebp (bad) adc loope cmpsl xor jle (bad) stc out shr int (bad) and loope xchg fild fdiv andl in mov pushq movsl loopne (bad) je adc out rex.WRXB rex.B icebp fcmovnbe icebp cwtl sbb stos sub movsl test stos test lods mov push push push rcll pop push pop pop pop push pop rex.RXB mov mov mov (bad) mov mov mov mov jmp imul add retq (bad) icebp and rex.XB pop mov loope addr32 rex.RB fs sbb sbbl add cmp xor or je or rex.WX (bad) sti lret sub scas xorl or cmp stos rcll (bad) and fwait pop jne cmc xchg adc xor or mov mov lea mov xorl icebp sahf (bad) push (bad) stc (bad) rex.WRXB out je or pushfq cmp xor or and jge movabs push push pushfq movabs cltd or and (bad) mov cmc leaveq stc cmp adc and cmp or sbb jno pop push test rex.WRXB or and icebp std leaveq rex.WRXB flds and or xchg movabs out je or pushfq int flds sbb cmp cltd and xor push subl or rex.XB je add (bad) leaveq xchg mov (bad) sti adc cmp (bad) or fadd add cltd sbb (bad) leaveq jo (bad) notb sub shr je sub (bad) movabs push stos lods cmpsb movabs push movsl pop pushq add test push add movabs jmpq cmpsb movsb push (bad) stos out icebp pop pop imul outsb sti pushfq xor xchg movsb mov pushfq test pop mov xchg sub ficom mov mov loope rcl js sub mov subl or (bad) add push push pop loope stos (bad) test in fs pushfq add and std mov mov lret lods movsb pop jno (bad) push in pop jno fs push sub xchg test (bad) scas pop mov mov jge mov mov mov out (bad) push movabs push lods out push scas (bad) push pop jns cs callq cld leaveq leaveq std flds add (bad) and mov stc push rex.WRXB add cmp or jns rex.WB rex.WRXB test and mov in je or jno cmp mov sub xchg leaveq sub stc xor sbb mov mov leaveq stc cwtl je jrcxz ffree rex.XB xchg stc je jrcxz mov (bad) retq mov enterq (bad) pop in int mov repnz leaveq in repz ja jns and retq (bad) decb icebp xor popq sarl push (bad) out imul shl callq cld rex.RX cmp iret enterq adc faddl (bad) test rex.R repz jb rex.XB rcrl loop and push (bad) and rorl jbe test (bad) pushfq push ficoml lahf pop add rex.WRXB faddl imul or rex.R (bad) jmpq outsl imul lret xor mov (bad) xor iret addr32 outsl (bad) cld es (bad) cli int pop rex.R rex.RXB mov pushq pushfq sahf cwtl sbb lahf xor movabs sub shll pushq xor rex.WRX stos imul (bad) add rex.B lea jp loope retq mov add xchg fiadd push fs movsl rcrl repz fadd (bad) ss test and (bad) (bad) xor out mov and (bad) roll lret (bad) rex.RXB add pop sub jne (bad) sub add and (bad) movsb rex.RB pop or (bad) sarl js pop or jae mov pop test cmc (bad) jnp sarl stos rcrl pushfq mov adc rcl in loop and rex.WRX (bad) (bad) mov adc pop repz movabs jae clc ficom mov pushq sub imul and xchg rex rorl je push movabs xchg roll popfq in xor rex.XB mov shl sahf cmp (bad) adc es addr32 flds roll lret pop (bad) sarl fwait xchg push std xor rcll mov lret cmp movslq xchg and test (bad) test mov mov outsl clflush jb vpcmpgtw (bad) add sub sar sub mov mov jrcxz (bad) mov jb (bad) jne hlt mov or (bad) rex addr32 sbb rex.WRB (bad) callq insb mov xchg xchg cwtl xchg (bad) cltd pushfq in out xchg push mov orl jmp stc or mov leaveq out je and jno stc xchg xchg int3 bnd mov mov int3 bnd rorb pop ffree addr32 rex.R loop (bad) (bad) icebp mov xor push xchg pop and (bad) mov out mov addr32 leaveq mov mov icebp rex.WR push out test leaveq jno jl add test std movabs leaveq out jne loope and pushfq stc std jno mov test push xor mov hlt and adc rex.WB mov mov je or jl hlt es push out je or and imul mov loope sub leaveq or jns mov mov pop push popfq pushfq cmp (bad) out je or sub xchg icebp int leaveq rex.WRB lea mov je or pushfq shll rex.WRXB xchg je or and gs retq rex.WRXB xorl je or and pop std fwait rex.WRXB or and rex.WXB mov (bad) out je or jbe push sbb push or (bad) repnz or and sub std decl jge cmpsb je or pushfq scas std out rex.WRXB or out jbe push roll je or mov out je or push and je rcrl std xor lods or and rex.WR mov clc jrcxz out (bad) add or out je or enterq mov sub rorb and mov push lock sbb rorb push out je (bad) movabs push pushfq xchg std (bad) jb cmpsb or and rex.RX xchg and ja out je or fsubrl (bad) out je or rex.WRXB rcrl (bad) std (bad) je or and rex.WX mov (bad) or lahf mov (bad) je rcll xchg std (bad) rex.WRXB out je or rol (bad) add or and je je fstl and fisttp je fnstsw and fisttp je fnstsw and fnop loop adc jb addb fsubl loop loopne je frstor and fdivl loop (bad) fisttp and fdivrl or fisttp and fsubrl loop jp mov rcrl (bad) je retq fcoml loop rcr mov and rex.WB (bad) (bad) (bad) mov mov mov mov mov in jrcxz (bad) test rex.WXB je in icebp loope mov int3 mov cli movabs sbb rex.R cld rex.W stc rex.WB stc movsb rex.W jne movslq xchg xchg lret out icebp shlb xchg add cltd loop stc rex.RB or rex.WRXB clc (bad) fnop jmp imul and (bad) icebp cmp fsub cmp or push push sub cmp and (bad) push movsb movabs movsl or and in test rex.WXB push in test in mov and rex sub icebp cmc sub sub mov in nop push (bad) (bad) add sbb rex.WX scas pop push out mov loope mov add and test cltd mov rex.WB cmp in rex.WXB xchg and xchg callq (bad) mov (bad) and jne movabs cltd subl (bad) cmc lods lods mov sbb and (bad) pop test scas stos rex.RB (bad) mov jrcxz (bad) test xchg jo pushfq test mov rex.WRXB repnz stos push cwtl pop in pop mov xchg mov in clc orl pop stos test retq enterq ja xchg adc xchg testl cmpsb test mov callq jns jae adc push int fmull test pushq push xchg cmp lret test add lret in lea sbb hlt stos in and pushq cs jge fildll hlt mov rex.WR fwait lods imul test pop rex.RXB (bad) mov iret rex.WX leaveq in mov mov rex.WXB int mov js lret int3 icebp in xchg in movsl loopne int3 cmc pushq pop mov (bad) lods in int3 stc in enterq loope in decl iret test xor loope in mov out in lods rex.RB in xorl push in jrcxz adc callq rex.WRXB cmpsl and mov in mov push sbb mov (bad) sbb or ja cmc nop test (bad) mov in push movsl or sbb repnz (bad) retq fbld lret cmc ja mov (bad) js lret lret stc in mov xor in lret std in test jns push pop xchg movabs mov movb jo jno in lods jne movabs fistpl rex.RB rex.WXB in in test mov mov sub jno rex jrcxz (bad) mov cld stos jne movabs mov lret and repz or lret test push js lret lret mov mov (bad) (bad) lods add cmpsb insl jae loope mov or insl (bad) xor (bad) (bad) (bad) mov in (bad) out scas add mov in movabs loop adc fxch cmc pushq mov adc lea mov pop scas jge (bad) test mov (bad) in icebp rex.RB rep ds rex.W leaveq pushfq in cmp hlt je es sub in and lock mov gs shrl testb pop push jg jl leaveq (bad) mov pushq cmc je (bad) cmp stos nop cmp xlat scas sbb (bad) rex.WXB leaveq in ds outsl sti out push scas callq mov mov jmp in (bad) jnp jge test lock leaveq mov stc out je jl xchg scas ficoml cld in push push jo scas int mov push callq int pop movabs int in xchg cmp movsb (bad) cmp lods push push in pushfq in sbb add je mov test pop lods clc add in jno add je movabs jnp sbb jge push xor mov cmp out mov mov mov mov sub rex.WXB gs push (bad) std rex.WB lea (bad) in jmpq push mov jmp mov sbb mulb imul push in cltd jnp test cmp pop rolb in enterq or pop push test rex.WRXB jge out jrcxz hlt lods sarb adc retq xor xor mov cmp lret pushq (bad) rex.WX sar fildll shll mov sarl loopne sbb sub lret sbb jno movabs xchg out rcll (bad) push and jg pop shrl or imulb jb rorl (bad) mov (bad) in stos outsl pop (bad) jo and rcrb (bad) mov retq mov test in and (bad) mov push (bad) (bad) test movabs pop pop shll cmp out xchg test or movslq movabs repnz (bad) in cli lock (bad) (bad) adc cmp ds iret std in jne rex.XB pop scas mov (bad) sbb rex.WR cmpsb (bad) rex.R rex.WRX callq (bad) cltd add leaveq jg sub jne sarl xor rex.WB (bad) (bad) pop mov (bad) xchg shrl scas mov or int mov adc ss jmpq add shl test movabs rcl mov cs xor jb out ud2 rex.B jne sarl sub xor lock int3 outsb jmpq mov jnp icebp int ror test sbb mov (bad) xchg rex.RXB mov cltd (bad) rorl nop test retq out stos shl lea imul mov callq and lret fs sarl movsb xor test out sbb stc mov ss fwait adc xchg cltd popfq push rex.WRXB rex.WR pop add fwait pop (bad) rex.RX (bad) cli fnstenv sbb adc mov xchg vshufps (bad) sbb (bad) or cmc js rex.WXB cmpsb rex.WR rex.XB testb (bad) jae sti jb (bad) and (bad) mov cmp jle jmp xor (bad) rcr outsw xchg and scas sarl xchg shlb in (bad) jbe xor xor hlt pushq retq xlat lret out notl push rex.R mov lret out in push or in (bad) lret adc adc mov jl callq movabs rex.RX mov rex.RXB stc mov sbb stos xor sarl gs (bad) (bad) rcrl xor rorl sbb repnz rex.WXB lahf mov mov sahf sub popfq pop enterq (bad) pop (bad) xor xlat divl (bad) sbb rex.B mov mov rol idiv in jb shl (bad) out mov (bad) rex.XB adc shll in loop or or decl cmc out cltd pop int3 popfq jmpq add ss rex.XB xor cli (bad) lahf mov jbe movslq pushq mov (bad) xchg insb rcll test iret movabs (bad) push rex.WRXB or mov lahf xchg sarl (bad) jno decb cmp iret mov out rex.WXB rex.WXB xchg rex.RXB rcll sub insb fld iret loopne fwait mov xor rorl rex.WRXB ror sti sar xor rol xor pushq in adc (bad) fs movsl mov xor (bad) mov push (bad) add popfq and mov mov (bad) (bad) out in jmp pop fadd rex.WRB cs stos xor add adc int cs cmp rex.WRB movsb rcrl (bad) rex.RXB sub rex.RB rex.RX (bad) fist rcrb mov test jmpq (bad) adc pop popfq mov add rex.WXB sbb sub xor push mov (bad) int3 rex.X mov cmp imul (bad) nop pop (bad) ja js leaveq cmpsl jbe lgs mov fistp or mov add mov (bad) loop mov xchg cmp xchg xor push adcl jp or stc (bad) (bad) jo loopne push data16 and rex.WB fxch cmpsl and in fisubl lret out and mov adc rex.W mov imul rex.XB rolb jnp add or and (bad) xor (bad) mov mov sbb fwait insl xchg std (bad) jno outsb mov xchg repz (bad) fidiv ffreep and or pushq lret js push test movabs pop pop lods (bad) xor icebp (bad) lea jnp mov iret fisttpll mov or callq jnp rex.WRX out adc push adc rcll (bad) loope fsubrs movabs int3 rex.WXB rex.R or cld rcll stos out fwait inc rex.WR leaveq sbb jnp pushq xor rex.RXB xchg rorl mov rex.RB cld subl (bad) in add rex.RX (bad) (bad) sbb sahf adc (bad) or xchg lock sbb movsb movabs cld (bad) (bad) in out pop sarl pop mov js pushq rcrl shrl cltd cmpsb push mov and mov sbb rorb pushfq js and mov test addr32 sbb and test ror add shrl push adc (bad) roll (bad) sarl rex.W rex.WRXB xor sti std lock rcr sahf xchg (bad) movsl (bad) movsb repnz pushq jns jrcxz adc fisubr (bad) add movabs es mov rex.WXB fscale iret mov outsb sub mov mov cmp lahf jle xchg hlt imul jno cmp (bad) sar faddl out callq clc rex.WR cmp movabs rex.RXB xchg pop jns and lret lock and and (bad) fldt jl (bad) xchg or xchg jbe rex.WR fcomip mov add xor cs xor pop jnp rex.WRXB fnstenv and rex.R or push retq rex.WRXB xor (bad) jo sar cmp mov pop sbb fnstenv enterq rex.RXB jnp pushfq fptan rol cmp cmc jmpq sbb (bad) add outsb fcomp fnsave lea shr sub (bad) sub fnop pop pop xor (bad) mov cmp (bad) js sti lret lahf (bad) mov movabs mov imul and scas add sar fsubrl imul movabs push jle sub in incl sub roll cmp shll fcom (bad) jno (bad) repnz (bad) cmp rcll popfq jle pop (bad) mov (bad) rex.WB repz rex.WRB shrl add out jns ror stos ds jl add jae pop add (bad) mov and test mov leaveq (bad) cmp jns xlat out sub rex.WB mov rex.WRXB lods sub mov sti (bad) (bad) or (bad) mov lock rex.R fs fwait mov hlt or (bad) (bad) (bad) jae (bad) xor rcll xlat (bad) (bad) fisubrl xor mov test retq add push and mov iret loop fnop movabs push cmp movabs in (bad) (bad) mov xchg push cmp xchg scas sbb (bad) fwait and movabs loopne add mov (bad) adc push pop sub jg cmp push rcll cmp xchg shr pop jno pop retq test imul repnz int3 xor stos push es (bad) xor addr32 roll mov repnz std out out xchg pop adc pushq xor rex.WX jmpq and sub sub sti retq (bad) jno (bad) data16 mov cmp movabs pop mov in rol xchg or shll add push jrcxz in xchg pop push adc and shll sar jmp rex or xchg jp enterq es adc rex.B sahf jrcxz cld shrl (bad) lret sub (bad) loope repz test rex (bad) xorl (bad) mov and mov add out int3 rol adc jmpq inc pop fisubrl mov sub xchg out and or sarb (bad) fildl (bad) insl mov stos (bad) rex.WR movsw add cwtl sti sbb (bad) (bad) int (bad) (bad) out add icebp cmpsb loop rex.WR es pop jg fisubrl push scas rcll fild lret mov (bad) mov in adc rcrl pop rex.W mov mov rcl (bad) lods push addr32 rol repz cmp pop pushfq in cltd roll jmp lret sub sub pop (bad) jge (bad) pop rorl (bad) or mov outsb adc rex.WXB test mov ss jp (bad) shrl in sbb cmc mov and addr32 roll idivl sub vpmulhuw cmpsl rex.WR shll mov or fldcw shrl rex.W rex.RX rcrb adc roll stc movsb cmp movabs xchg iret xor mulb xchg sarl (bad) paddq xchg rex.WX xchg callq and mov repnz retq (bad) xacquire in or (bad) xor fsubr sbb sar test mov pop ror fcomip push xchg sub or jno jae mov adc lret (bad) sbb cmp (bad) callq sarl jge pop sarl (bad) mov lret lahf (bad) cld movabs xlat cmpsb shld test insl lret loopne sbb mov shrl stos sbb shl movabs loopne xchg lock (bad) repz mov test mov (bad) add jp or cs rex.RXB imul (bad) add lods mov (bad) fisubrl and rex.R bnd callq movsl mov adc (bad) ss cmpsb cmc sbb lret rex.WX movabs std sub jae fwait iret cmp rex.R rex.WRX pop movabs mov retq xchg out rcll test (bad) mov jne jno add idivl cltd xor cmp cmp (bad) callq adc jb cld test mov add push jo mov jl js (bad) lock jg enterq shrl rex.WRXB movsb jno shrl movabs imul push outsl jno adc callq xlat (bad) jge sub movsl (bad) addr32 int3 (bad) stos and (bad) ja pop mov pop rorl repz fnsave cmpsl rolb push mov cmpsb jge jae sarl adc jrcxz rolb imul bnd imul (bad) pushq add jg ficomp mov mov xor lret rex.X sti rex.RX xor jl movabs jbe mov (bad) shll adc rcrl test lock rex.XB sub pop iret repz jmp mov roll rex.WRB ds add (bad) pop cmp rcll (bad) jns cmp push rex.X rex.RX leaveq xor adc add mov fistpll repz sbb push test (bad) sarl xchg callq push je jmpq (bad) xor sub gs mov xor out cwtl (bad) enterq shll in repnz rex.WRX sub push xchg (bad) mov pmaddwd and jg outsb (bad) in (bad) rex.WRXB cmp xchg rcrl enterq mov rex.XB stos add rex.B (bad) je (bad) data16 jmp shll sar mov (bad) roll xchg mov jl (bad) (bad) (bad) (bad) idivb mov (bad) jbe outsl insl sbb (bad) sbb xchg rex.X (bad) xor sub (bad) test push pop sub (bad) mov jns xor (bad) iret shl xlat es ljmp test (bad) int3 ss rex or rcll mov movabs (bad) jge movabs cmp pop or nop jb xor (bad) rex.RX jns (bad) pop mov jae fstp ss shrl rex.X shrb mov mov rex.WRX mov lret scas jg xchg icebp cltd fldl or and and rcll pushfq push cmp sarl fs pop (bad) js rcl adc rex.WXB icebp (bad) adc test xchg (bad) jae shr (bad) mov pushq rex.WX rex.RX je add mov incb std loope sub jp mov loopne (bad) roll jne lret and fisttp and rorl cld fadds push mov and (bad) stc add rorl (bad) cs fidivr imul data16 popfq cmpl (bad) jno jne rex.RX rol movsl mov repz (bad) rcl nop or (bad) je iret adc mov pop pinsrw pushq or mov retq sbb (bad) mov adc cmp or adc sar sub clc sub divl stos rcl sbb sub sbb sarl xlat retq push movsb adc ds xchg int3 shrl rex.WRB (bad) data16 xchg xchg mov outsl (bad) sub (bad) in add out rex.WXB rex.WX mov rex.RXB (bad) imul (bad) (bad) es rex.WB and rol jl lret jrcxz in int retq (bad) fdivrs rcll mov xchg rex.WRXB push (bad) mulb out push push scas add ds lahf in rorl xchg push out rex.B jns rol in mov cmp insb shll push add xor ror loope sub mov outsl rorl fwait xor (bad) movabs sub rex.B mov sub jo (bad) (bad) lods mov xchg out (bad) push adc adc xor mov pop rol mov lods stc fildll cmp add enterq rex.WXB sarl roll fwait movslq adc lock (bad) pop xor or callq movsl adc loopne (bad) retq ds mov loope mov rex.WRXB in movb mov mov xchg nop cmp cli xchg in mov out retq xchg rorl rcr push mov fcmovnb xchg std (bad) sub mov jo and and (bad) (bad) sahf int imul test (bad) repz movsl (bad) xchg xchg xchg movb mov icebp je add cwtl cltd xchg jge xchg pop roll xchg std in cltd xchg cmp (bad) clc cmp fwait loop xor mov jl hlt (bad) js lahf mov adc (bad) fidivr mov icebp jmpq pop mov sub movabs (bad) lods (bad) mov rex.X js push and xor xchg mov fiaddl push mov (bad) or rex.XB rex.XB cmpsb mov lods jmpq movabs movsb cmpsb test mov leaveq and mov in callq push adc xchg (bad) mov movabs sbb nop mov icebp sub sub mov scas mov movslq xorl orl notb (bad) push lods mov out addr32 lahf mov lods lods pop push jg mov xchg jae push (bad) push rex.W push rep push cmp push movslq stc or jg mov (bad) insb rorl mov adc bts jmpq add notl rex.WXB icebp loope imul mov scas fisttp outsl pop and sub loop (bad) add cmpsb (bad) (bad) (bad) mov or movabs xchg xor mov xor (bad) jne (bad) (bad) (bad) sti in pop jne cmpl mov mov nop lret sbb (bad) lods pop mov xor xchg rex.RX nop (bad) enterq test (bad) jo (bad) (bad) (bad) cmp jo (bad) jbe rex.WB cmp xchg test or (bad) (bad) (bad) mov mov mov mov xor incb repnz adc xchg mov pop sub jae ss (bad) jbe or sub cwtl test test cmp rex.RB (bad) push add lea std jmpq mov incl stc clc cmc test test jmpq je movzbw sar cmc push bsf movzbl jmpq jb test stc test bt cmpb jmpq jae stc cmp jmpq rorb xor loope in cmc (bad) and popfq cmp and push add mov (bad) mov push rex.RXB rex push rex.WB rex.RXB sbb fdivrl sub add sbb push cmp lret outsb mov jns std rex.WRXB sar sbb rorl icebp sub jae (bad) mov (bad) push or lret rorl (bad) (bad) callq lahf callq repz add retw (bad) (bad) (bad) std or popfq movsl (bad) (bad) (bad) std cmp (bad) int (bad) rex.RB pushq sbb add add ja sub rex.WRXB movsl testb sbb adc es sub (bad) (bad) rex.X gs adc jl (bad) (bad) insl cli cmc pop jmp jmp push (bad) or add sahf add (bad) (bad) out addr32 jb mov insl mov cmp jmpq (bad) (bad) movsl push pop outsl retq jo outsb xor rex.WRX jb out mov (bad) fbstp (bad) mov jo adc rex.WR int cltd stos mov (bad) rex.WRB (bad) jo repz lock mov fimul or cs repnz (bad) mov je adc and clc (bad) and pushq add rol test sub jno (bad) (bad) sti leaveq mov (bad) (bad) (bad) imul rep sarb mov mov (bad) (bad) jmpq je xchg (bad) je lods and loop sub mov xchg cli movabs (bad) cmp xchg cld jae shrb js orb sbb cmp (bad) jns mov outsb (bad) hlt rclb sahf cwtl rex.X sbb xor jp insb cmpl (bad) retq (bad) push mov (bad) movabs xchg lods imul cmp (bad) stos ja scas add orl and rex.R test (bad) (bad) sti sbb jg clc jo add cmp insl (bad) sbb or (bad) (bad) std stos adc sbb std pop (bad) adc jl sti sbb mov xor (bad) cmp and rex.W sub (bad) add leaveq xchg (bad) (bad) incl push mov insb (bad) mov cmp add rex.WR sbb rex.WB sub mov cmp test movabs sub cltd add cmc and (bad) sub xchg notl (bad) jo cmpsb loopne jmpq (bad) roll outsl mov cmp or lret imul shrb lret js outsb (bad) (bad) mov rex.WX lret jl and rex.WX ror imul jne scas (bad) cmc push int3 pop rex.WRXB hlt push in movabs rclb fcomps jge subl jne sbb and or pop pop xor jns mov jno rex.RB sub callq sbb xchg mov (bad) (bad) lret stc cmp std scas and addr32 and movabs lahf rex mov cmp movabs outsb (bad) rcr or jne jge shll (bad) pop rex.B sub callq cqto pushfq add movabs mov sub repnz sti xchg movsb cltd movabs cld (bad) pop test (bad) (bad) lock pushq sarl movabs add add jno int3 jbe (bad) cmp (bad) test out mov lock (bad) ja loop retq movabs add pushq xchg rex shrl jb (bad) jno sbb rex.RXB and mov sub stc pushq xchg jbe mov and lahf jp rex.X sub in (bad) test fstps ja cmpb rex.WRXB (bad) cmp mov sbb jb movabs pop jmp sub imul mov xchg xchg mov cmp (bad) js xor out adc fwait jp (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb pop rex.WRB hlt xor fdivrl callq dec lret hlt rex.WB clc out mov (bad) je iretw pop add or pop jg mov retq (bad) or jb rex.WX jp cmp add mov jle sub mov jb and clc jmpq jmpq lods xor (bad) jo xor in push mov repz jo mov insb or fdivrp (bad) mov sub mov mov (bad) sbb add in rex.WXB es in rex.W (bad) movabs (bad) mov xchg mov test icebp sbb (bad) xor je (bad) lods rex.WRXB push push mov jbe (bad) sarl pop pop ss mov push loopne ja (bad) sbb (bad) jbe mov loop pushq ss jns cwtl sbb (bad) (bad) cld add (bad) (bad) (bad) xchg enterq pop sbb adc mov lahf fwait lock pop rex.WRB adc (bad) rex.WRXB callq xchg push mulb outsl and mov sbb mov rorl jp cltd mov sbb xchg (bad) popfq mov (bad) addl iretw lahf test xchg mov lea mov bswap bswap pop retq pop retq (bad) lods sarb or jge sbb adc (bad) pushfq fwait rex.WX mov mov mov xchg idivb rex.WRB jb sbb fiadd mov mov sub ja push xchg hlt loope push mov lret rex.R xchg sub test push xor and xchg jae sbb enterq adc fstl jmp test loop (bad) pop jl (bad) (bad) (bad) sti sti jae (bad) sti (bad) (bad) (bad) decb adc retq mov jne add add or fbld xchg or mov insl insb xchg out (bad) orl shr shlb push or scas xchg cmp (bad) cmpsb (bad) adc rex.XB mov std sub rex.XB je and pop pop push xchg (bad) mov (bad) or mov xchg pushq cmp cmp test or addr32 (bad) fidivrl movabs imul jae mov div xchg xchg mov je rex.WRB (bad) leaveq mov movsb enterq imul sbb je lea (bad) adc push mov (bad) (bad) (bad) in lahf jae xchg xchg mov and sbb add gs clc mov fs (bad) jle jbe mov sarl (bad) (bad) lret movabs out mov pop (bad) and fdivrs sbb mov add rex.WRB mov (bad) decl test movups jmpq jmpq jne clc stc stc clc add bt cmp add jmpq jmpq push xlat or scas negl test pop (bad) div (bad) ss (bad) cmp add mul adc js hlt mov mov mov (bad) (bad) mov (bad) lods sub stos and cmp or (bad) sbb cli xchg mov outsl (bad) rex.WRB rex.WRX nop lahf rex.X in gs or imul xchg xchg add cli pop movabs mov outsb mov mov adc fdivr (bad) (bad) sti jns add (bad) (bad) (bad) decb jge push pop xchg (bad) jne stos and test loop (bad) (bad) (bad) decl addr32 sub stc cld (bad) (bad) in (bad) rcl retq pop cmc cmp xchg stc add mov and jmpq retq mov xchg (bad) fnsave and push xchg fisubr adcl mov not mov btr bsr neg test mov clc test sub test cmp jmpq pushq jmpq stos rorb (bad) pushfq movsb mov (bad) mov sbb data16 test add mov (bad) cmp outsb or sub out sub fildl adc adc in sbb jno neg loope rex.WRB cmp mov (bad) (bad) (bad) cld sarb jo (bad) (bad) (bad) callq push or xchg stos (bad) add imul fisttpl jle loop stc xchg mov cmc and sbb add add jle,pt cmp rex.W sub mov ds jg add adc jmpq sbb mov rclb mov rex.WB rex.RX rex.RX sbb adc mov ja pop mov cmp jmpq jne jmpq jae ror neg rol mov (bad) lock inc neg add mov mov jmpq jmpq xchg shl movabs (bad) ffreep (bad) scas mov (bad) movabs rcll (bad) (bad) (bad) lods xor lock rex.R fs test (bad) push lods mov pop lret mov add retq adc stc xchg sbb fcmovnu hlt jne repz insb rex.R ja or movabs (bad) (bad) (bad) sub pop jg rex.WXB mov out repnz xchg ds (bad) imul and and or lea ja movabs out and jg popfq ss test (bad) jb push jle retq mov out or pop cmp sahf sbb (bad) leaveq sarl int3 cmpsl out (bad) negl (bad) je (bad) loope out hlt (bad) shl sub sub addr32 mov fidivr ss cmc add sub mov xchg icebp mov (bad) cmp pop or xor stc roll xchg mov (bad) xlat push (bad) callq sub and mov cs sub mov (bad) cld iret out rclb jae rclb sbb pushfq shrl lret pushq (bad) (bad) adc push xchg fistpll mov rex.RXB fldl outsl xor (bad) sbb xlat gs outsb sti (bad) adc xchg adc stos xchg (bad) int3 add leaveq out cmp jns test sub frstor callq pop out test test loope movb jmp ds rol jb (bad) hlt jbe jne insl rcrl rol (bad) (bad) sub mov test movabs je jno loope pushfq (bad) pop pushq (bad) and sarb shll or (bad) and sbb pushq pop cmc cmpsb add stos mov shll outsl mov sbb (bad) xchg cmp add jl mov addr32 mov mov sub ja and (bad) or out movslq shll jns vprotw (bad) (bad) add (bad) shr mov out nop rex.WRX mov rcll out pop add rex.WB (bad) jno jmp (bad) mov and (bad) push rcll jmpq mov sub rex.RXB jrcxz rex.RB rol (bad) xchg movabs cmpsl fsubs adc jnp (bad) je (bad) mov (bad) mov or cmp xchg retq adc add in movsb movabs pushfq stc xlat rex.XB leaveq mov js pop lods mov xchg retq (bad) cmpsl add and mov cmp test (bad) mov movabs (bad) fwait lods add mov test jrcxz icebp sti xlat mov rex.WXB stos push xchg iret adc rcll xor jno (bad) mov xorb xlat rex.WRXB jb sbb (bad) hlt fdivl mov cmpsb and (bad) iret shlb sarl loop je ds cmp or adc movabs mov outsb mov (bad) icebp cltd mov int3 lahf loopne sarl rex.B xor mov push pushfq out roll je or outsb ja rex.WRXB rex.WRB lock int pop sub jno rcll mov sbb rex xchg rex.RB rex.RB add xlat imul sarl mov sarl out scas ror repnz movslq rex.W push add or sbb xchg push mov cmova add shll std rex.WB xor fnstcw lock jmp (bad) add sbb (bad) cmp rcrl mov adc movsb (bad) mov xor (bad) test imul xor add loopne push (bad) movabs (bad) and callq stos or xchg (bad) test sti int callq (bad) rex.WB out mov retq lret jrcxz jle in jg sarl (bad) adc or push xorl adc movabs stos jno jns cwtl inc icebp (bad) push scas (bad) lret outsb rex.X pushq ja or movabs add addr32 xchg shl insb (bad) (bad) pop mov pop movabs rex rex.WX add outsl cmpl xchg mov movabs xor adc sahf iret rcl out sub (bad) and rcll rol not sarl (bad) sar (bad) js pop mov out (bad) adc cwtl (bad) rex.WX addl (bad) mov mov repz (bad) cmp (bad) stos (bad) loopne add adc icebp enterq rcll je add and ficom mov (bad) stos xor mov retq movabs cmpsb rcrl adc cmp lahf xor hlt cltd orb mov pop (bad) pop rex.RB sbb jb or cmc rex.R mov repz jmp rex.WB rex.B rex.R xchg xor mov test sti pop callq push sbbl jmp imul mov xchg jl jno lahf neg sarl rex.RXB sbb icebp sub lret mov (bad) outsb (bad) rex.WX add (bad) adc add in mov jmpq rex.WRX test shll xlat je or (bad) insl cmp jrcxz rorl xor sbb addl add fsqrt (bad) out gs sarb jge jp mov jmpq rcrl cmpsb (bad) xlat rex.WX cmp gs sub pop (bad) repnz fadds xchg rex.W clc (bad) test ja insl or rolb mov sub rex.RX fwait rex.WB jb loop test jle jge loope int3 sahf sbb adc (bad) (bad) lock scas imulb push pushfq (bad) and and mov lahf rex.WX rex.W rex.WRXB xor retq push iret sarl xchg or xchg shrl pop movsl test lret insl retq rex.WRB adc mov (bad) (bad) test rorl stos sub sbb (bad) lret adc sar sti mov and rex.RXB (bad) cltq cmp sarl rol (bad) int mov rex.WB testl (bad) lret (bad) push (bad) mov fwait push mov rex.XB (bad) (bad) jno xchg loop or rex.X retq mov fstpt (bad) ds xchg out rex.B mov sub (bad) in add movsl rex.WR cmpsl and lods repnz movabs (bad) (bad) jbe (bad) rcrl xchg rcrl push (bad) roll adc shll paddw lods rorl js jl sbb (bad) mov lods adc (bad) mov roll pop clc add (bad) hlt imul out je outsl pop rex.RXB stc enterq je cs test (bad) imull retq rex.R sub (bad) mov xadd add shll xchg sbb sarl ja cmp mov cmpsb push (bad) (bad) xor shlb test loop scas rex.B sub insb std sub or movabs jrcxz or cmp rex.WRXB fwait (bad) lret shll jne or test movsl rorl sub out pop add in pop imul jb xchg outsl loop jo roll je roll pop clc mov cmp add and mov mov gs outsl or fnstcw test add rex add hlt shrl add mov (bad) xor js cld (bad) xor pop test jg (bad) sbb pop stos (bad) in imul xor cwtl mov xacquire pushq rex.RX lret movabs in jrcxz lret add rex.WXB pop adc mov repnz mov scas (bad) loope insl stc ror xlat jl add in (bad) sbb leaveq and rex.W (bad) stc adc hlt cltd or and (bad) rex.WRXB adc mov cmpsb je or adc pushfq loope xorl xor and pop retq imul out (bad) enterq xchg xchg cmc (bad) rex.W sbb jmpq (bad) (bad) xor jns add (bad) insl fsubr out cmp jns push cltd (bad) xor mov jno movabs cmpsb in std fwait imul rex.X lret scas out pop imul mull repz or icebp or jl int jmpq cld lods enterq jmpq cli mov (bad) icebp fcmovnb (bad) (bad) retq enterq in hlt in loope and (bad) xchg sbb loop or movabs (bad) cmp (bad) repnz enterq (bad) jmp add cltd jnp ror xchg lea (bad) mov mov fwait and mov adc shr nop retq and sbb nop repz mov (bad) jne xchg xor popq add (bad) or push rex.W hlt push in xor xchg push rex.RXB sub std scas icebp test test cmc push movslq icebp xchg callq mov scas notl lret adc in jno adcq rex.WB xchg test pop jge movsl movabs mov sbb mov xor addr32 addl rcrl icebp rex.WXB rex.WB fwait pop xchg push xchg movabs mov mov addr32 mov movsl rex.RB in loope shrb (bad) loope rex.RX mov xchg test lret movabs (bad) mov push mov repnz jg cld std test js jo mov scas test test jrcxz lods popfq nop movsb in sub xor and lods icebp movabs pop test xchg insl mov stos mov stc jl out push ror xchg test icebp push hlt adc pop mov nop sbb addr32 xor test in loope retq and xchg leaveq loope jbe cld push (bad) roll push push mov in mov jnp fsubr add out and lea nop mov leaveq (bad) mov adcl mov in mov mov mov add negl (bad) xchg callq icebp (bad) stc (bad) popfq (bad) (bad) pop rex.WX stc (bad) xor movsl mov xchg mov es add enterq leaveq int3 lret (bad) int iret (bad) repnz hlt repz clc test (bad) std add shl in out callq in jmp in lock rcll cwtl xchg rcrl movabs mov mov mov mov mov mov mov mov movabs stos scas lods mov notb push repz pushfq push pop pop pop pop lret (bad) pop rex.X movslq rex.WB sahf int3 movabs in push pop jae mov jle jne imul mov pushq mov mov (bad) movsl decl jns sbb mov sbb pop nop clc test and mov xchg rex.RX rex.RX test repz mov mov test jmpq xchg rex.XB bnd xchg mov pushq mov jge (bad) lods mov cli push test add pop lods test in int fbstp xor sti lods movsb push int addr32 mov (bad) int pushq nop rex (bad) shl in xor push push rex.XB int vmovdqa cwtl pavgw rex.RXB mov clc icebp sub xor xchg push stos sbb rex.WRX mov imul xchg mov lods rorb lock sub lahf pop in test jne mov movsb out adc mov (bad) rex.W fwait cmc test rex.RB rex.RXB jns mov movsl xchg lock push ud2 test insb lahf (bad) test pop cmpsb (bad) and (bad) (bad) out (bad) insb imul scas jo icebp rex.WRB nop xchg movabs xchg (bad) push outsl sti insl stos xor imul cltd fwait xorl pushq rex.WR loop imul and fdivs lahf mov (bad) xor in pop sub pop fisttp sysenter adc rex (bad) adc movsb sub xchg rex.WR pushq add movabs mov jne add ds mov insb loope mul sub je mov xor mov jrcxz jae jmpq (bad) jae jns lods adc js mov scas mov xor jae xorl (bad) (bad) cld movabs jne mov cltd sti iret shrl scas adc cmp clc mov icebp push adc (bad) cmp out movabs movabs scas rex.WXB push test push xchg pushfq rex.WRXB xchg movsl je mov mov imul pop leaveq sub icebp icebp std mov mov hlt sarl rex.WB repz cmp (bad) hlt cld and and stc std rex.WRXB or and xor and pop std (bad) rex.WRXB rex.WRXB out je or callq cmpsl jrcxz mov cltd xchg mov mov xor fs cltd ror je sub mov push mov stos gs xlat push lods rex.W scas xchg retq xchg pop rcrb (bad) mov (bad) in movabs in (bad) jne icebp adc in popfq ja je in and je (bad) je mov jbe adc rol scas xor int3 movl movsb (bad) icebp (bad) rex.XB push enterq rex.W rex.WR or mov or jmpq mov pop (bad) rex.WB push loope xchg sub mov rex.WX retq leaveq and cltd pop push adc imul push lods test (bad) or (bad) rex (bad) loope lods ficoml add lods test out mov pop mov (bad) (bad) fstl out loope lahf test callq pop push (bad) stc adcl loope mov push leaveq nop cmp adc sbb loope push mov (bad) and test pop stos sbb movabs test mov cld push pop (bad) scas (bad) movabs add movabs movsb cli mov rex.WB jmpw add retq jmp cmpsl int3 fs jmpq xor sub pushq (bad) and xchg cli mov mov (bad) xorb callq callq xchg mov int3 push pop shlb loope callq test data16 mov (bad) xchg stos mov xchg jb push pop repz add movabs rex.WX mov stc mov xchg sub movabs (bad) pushq cmp mov test add sbbb sbb nop icebp stos and push mov out mov andl jno and xchg xor loope lods sbb (bad) push movabs mov loopne mov cmpsl icebp and test popfq es lahf push leaveq callq lock mov jge pop mov movsb jns pop int3 jmpq hlt movabs int3 xchg rex.WB lock push jmp movabs stc xor clc mov or mov add stc or flds or sub stos jge movsl in icebp repz jrcxz lods iret cmc icebp or xchg hlt test and (bad) jge loope (bad) movabs icebp xchg popfq movsl jg test in ss adc rex.WB es jno or movabs jmpq cmp enterq mov shll out xor sub or cmp rex.WRXB out je or out pop adc insl leaveq je or (bad) push jge jns jne mov rex.WRB or adc pop push pop pushfq push std push rex.WRXB or pushfq mov mov cltd leaveq out je or and and and add (bad) (bad) rex.WRXB add pushfq adc rex.WB rex.WRXB or sahf (bad) push fldenv stc sub or imul xchg cmp add movabs rex cmp (bad) (bad) rex.WRXB rex.W mov jmpq mov icebp jb rex.RB xchg rex.WXB rex.R mov addl xchg push mov mov movabs fisttpl imul retq je xchg (bad) in (bad) sahf (bad) xor and (bad) mov push rex.X xor roll rex.W rex.RXB rex.WX rex.WB rex.WR push rex.WRXB je jae jne ja jns sarl cmpb shll pushq shrl jo adc adc adc adc sbb sbb sbb add add add or or or xor xor xor cmp cmp cmp and and and sub sub sub (bad) rcl (bad) fcom fcmovu fadd fcmovnu fucom ffreep fldl movsb mov sarl (bad) fist mov cmp out retq cmp shr xor fnstcw pop (bad) pop fcoms sbb (bad) cltd (bad) push xchg test and sbb cmpsl mov mov loope loope lods push pop push movabs lock leaveq mov test mov loope scas or pop lock xchg sbb insb (bad) rex.WX rex.RXB or lods std jns (bad) push loope movabs stc lods cmpsb pop mov jrcxz rex.W xchg jle push mov leaveq jrcxz xlat pop mov idiv (bad) and push (bad) int scas push adc movsl jmpq out rex.WX pop push icebp movabs icebp pop (bad) push or test data16 jne or cmpsb jmp jmpq movsl gs sbb pop mov xchg movsl jb (bad) movabs cmp loope in rep lret rclb xor icebp mov add callq movabs in fbstp push movabs mov (bad) movabs stos xchg repz cltd in push data16 jne rex.WX pop movsl pop mov xchg sbb pop cld push callq or stc jno xor int and fisttp rex.RXB push mov mov pop pop (bad) (bad) adc stc or int push pop push (bad) leaveq pop ss jge roll test in xor (bad) mov stc mov adc fwait movslq retq icebp jge add or loope or jmpq data16 imul outsl loopne,pt movabs xor in xchg ss sbb push jnp lea xor clc push lret (bad) xor data16 pushfq sub movsb movabs movsb (bad) (bad) movsl mov movabs in je (bad) lret rex.WXB test mov mov loope mov (bad) and mov adc test cmp mov int mov icebp or mov sub jo lret xor loope sbb addl or jno pop (bad) adc leaveq test icebp lea mov rex.WXB icebp sub rex.B outsl icebp xchg add add outsl icebp adc jno adc icebp mov xchg adc icebp sub or sbbl cmp jge icebp fs mov icebp pop mov loope xor mov xchg sbb icebp andl je or adc mov mov outsl icebp rex.RB mov (bad) rex.WXB icebp and xor rorl xchg cmp outsl jno icebp xchg xchg rex.WB xor jno adc jno adc mov stc (bad) rex.W mov sub (bad) stc xor cmp (bad) movabs or outsb adc icebp add rclb mov or movsb icebp mov xchg js icebp adc movabs mov (bad) insl and fdivl rex.RB mov mov jmpq int rex.WRXB mov leaveq loope fldcw jb and (bad) in mov movabs add icebp int sti (bad) lret xchg (bad) lock (bad) int and fs mov test loope (bad) in test mov lods popfq scas movsl (bad) pop mov push jl xchg mov xchg adc cld jne cltd movslq fwait lods push xlat mov push push pop outsb stc fs in cltd cwtl nop sbb pop fwait in in jmpq cmp out mov jno cmpsl jmpq andl cmp xor (bad) stc add stc and push out cmp mov leaveq rex.WXB stc test xchg leaveq leaveq fwait pop (bad) ja adc ds out fs int3 divb mov (bad) (bad) rex.WB pop stc test mov adc rex.WB fcmovnbe mov (bad) and cltd push rex.WRB (bad) xor leaveq (bad) (bad) (bad) mov loope jnp mov (bad) mov (bad) lahf rex.WRB cmp jrcxz (bad) mov int stc test xchg rex.WR sti mov stc js popfq adc movsl hlt mov jne mov jrcxz mov std in callq mov stos nop addr32 out jrcxz test callq jnp vsubpd mov je jrcxz test rex.WRXB xor and sub std jno and jl orl jae enterq push pop sub test mov adc (bad) (bad) (bad) push (bad) sub out movabs lret negl (bad) loope hlt ror in test divb cmc xchg rex.R fs out adc clc mov xor in movabs cmp pushq xchg push out sub addr32 jns sub rex.WXB (bad) pushq push hlt test rcll repz jrcxz leaveq cmc xor adc int3 out mov clc retq xor outsl in and mov (bad) xchg adcl jo cmp adc adc mov and or push cmpsl outsl sbb xor jp pop (bad) xor js movabs mov mov cld mov push movabs out mov mov mov xchg (bad) xchg mov and std cmpsb (bad) push scas (bad) push std xchg pop callq add jg push cmpsl xor callq test ror pop xchg mov cli test lods mov add xchg jge mov mov mov (bad) push (bad) pop mov and rex.WB movsb movabs xchg fsubr rex.WRX hlt (bad) stos mov movsl push sub pop mov xor pop and rcl cmpsl sbb mov and insb sub or pop cmpsb je adc mov (bad) jmpq (bad) jnp sahf push gs rex.WB lods cmp cmp mov sub in mov movabs test xchg pop rolb mov sub rex.WX mov movb pop adc jne mov test or enterq int3 jp callq std xchg (bad) out stos test pop cmp cwtl cltd in xchg mov jmp gs pop mov in lock movabs jrcxz push insb rcll rex.WXB xchg rex.RX mov adc sbb (bad) jmp movabs rex.WRB xchg cmpsb (bad) data16 callq (bad) xchg mov rex.B jae pushq adc enterq out mov leaveq test push data16 xchg sbb pop lret ss jnp pop push pop test scas fdivl test rex.WRX push cld mov and mov (bad) cmp rex.XB out or (bad) sbb jrcxz (bad) movsb mov sar stos cmp enterq movabs repz rex.RXB lods xchg xor (bad) shrb lea adc rex.WXB mov push lock mov movabs gs (bad) callq out gs out or sub fisttpl xchg mov pop and or sbb stc xor sbb (bad) clc pop mov mov test je std test jne pop pop lea cmc rex.WRB lods out mov (bad) xchg loopne (bad) mov xchg and mov movabs rex.WR rex.X fs mov loope mov rex.WR int3 insl xchg fisubl or out pushq fs test insl xchg mov pushq rex.WXB jmpq in or jg gs xor movabs xchg mov callq pop movsb xchg cmpl mov mov adc push fsub cld (bad) cmc sub push jp pop mov xchg movabs iret xchg pushfq lock (bad) sahf rex.WX jae repnz scas in jne stos (bad) mov push pushfq scas (bad) mov (bad) lea or mov repz jnp (bad) adc mov xlat sti cmpsl push movabs data16 mov loopne mov sbb push fidiv pop sub (bad) and jmp jae push and pop mov push pushfq insl rclb ss leaveq cmp pop lods lret xor (bad) (bad) lock retq in pop movslq movabs xor mov fdiv icebp sti loope xchg mov mov pushq (bad) fcomps lock repz xchg testl mov xchg ficom xchg mov (bad) push mov jns movsl jno sbb xchg rex.WXB mov jo jrcxz repnz data16 or sar nop callq icebp mov rex.WRXB imul in sub pushfq bswap add (bad) enterq mov jo out fsubrp (bad) cmp jne or mov rex.B push mov ja sub mov addl rex.WR jg ja cmp push add cmpsl add fnop lahf mov insb in insb sbb add (bad) pop jl lods mov mov imul cmp cmpsb push andl movabs insb (bad) sub jns rex.RXB and adc (bad) rcrb lods push imul and retq in clc pop jmpq push in pop mov rcrl add nop movsb pop rex.WX mov callq (bad) jl sub fdiv xor xchg nop nop (bad) cmp mov in adc movabs out jg sahf out pop jmpq (bad) adc xchg push jmpq jmpq test adc rex.WB xchg cs jae (bad) adc shrb pop xor (bad) adc int3 jmpq sub xorl movabs mov mov push and mov (bad) mov pushfq push and mov jmpq jge nop xchg int xchg mov mov xchg xchg (bad) adcb rex (bad) cmp and or outsl cli jg add out xchg movabs mov push (bad) out cmp imul sbb pushq out jl hlt jmp shlb movsl rex.WXB xor mov cmpsl (bad) (bad) (bad) push adc mov mull (bad) imul std in loope push or adc nop or cmpsl cmp add in xchg retq jns rex.RXB rex.WX mov cltd rcr sbb adc adc clc mov (bad) push movsl loopne pushfq pop mov (bad) or stos pop sub retq ja mul mov sbb and sbb leaveq and (bad) jb mov fstps jl iret cld cmp mov jmpq jno test test cltd jae scas lods out rex.XB rex.W adc pop callq stc sub scas test out rex.WB movabs and test push xchg mov std pop test mov rorl movabs pop in in rex.R out mov cmp imul out (bad) mov out or leaveq leaveq movabs std movabs sub xor cmp hlt hlt imul sbbl pop or and repnz xor sbb (bad) out je or cltd cmp rex.WRB out je or sar sbb jno test (bad) hlt add sahf sub add cltd cmp rex.WRB (bad) rex.WRXB lret add pop std mov ror xor test std stc rex.WRXB leaveq hlt jno movabs sbb jns fdivrp test xchg rex.WB add movabs out je or movabs out je or test std leaveq rex.WRXB (bad) lahf or mov fld movabs lahf flds out je and sub leaveq or add push lret mov add jge cmp addr32 cmpsb xchg xchg xor pop movslq fstl (bad) jge lret (bad) jno stc test cld and (bad) rex.X in push jrcxz test jrcxz (bad) repz fnsave (bad) mov (bad) rex.RB clc xchg std or cltd cltd add in divq cli movabs repz in mov je jrcxz test out rex.WR rex.X (bad) sub xor (bad) mov mov mov (bad) std in fstl test (bad) xchg pop stc cmp mov icebp (bad) add cli (bad) mov std xchg pop mov clc jmpq int push mov cltd icebp rex.XB (bad) (bad) xchg and jmpq movabs imul lea rcl shlb xlat (bad) or je sub and lret movabs add lods in rcrl or mov and shrb mov lea pop movabs rolb lahf (bad) (bad) std outsb or push mov sbb mov push (bad) push rex.WRXB cltd leaveq mov pop fwait js shrl adc add and mov (bad) in xor stc and fldcw decl int3 mov push pop popfq mov hlt (bad) pop jae rolb pop cmpsb xor lock jno or sbb mov sub sbb mov out popfq sbb sbb push mov mov rcll loop sub mov xchg test lods scas imul xchg sub xchg rex.B pushq fidivrl add mov pushq sbb (bad) cmpsl push imul rolb sti rex.RXB push (bad) push (bad) adc lods sarl xchg mov push xorl mov push pushq (bad) movabs pop mov mov xchg push jmpq pop xlat test mov jae and mov mov or jo (bad) ss insb (bad) or lods push stos sbb callq (bad) imulb movabs test mov mov movsl (bad) fwait stc pop pushfq sub adc mov mov (bad) loope imull leaveq xchg cs (bad) je mov stc fsubl (bad) lods mov rex.WR mov or pop repz mov pushq mov rclb loope,pt in movsb test push or xchg (bad) hlt lret mov test mov xchg mov stc xchg rcrl jle repnz xchg sahf int repz (bad) mov (bad) out xchg sub enterq fwait cmpsb ror ds gs int3 movabs lods ficom movabs in jmp mov pushfq push ja xor cmc rex.WXB enterq mov pop mov mulb jmp std rex.R mov or push fsubrs (bad) mov retq mov mov mov mov movslq rex.WX jns imul (bad) cltd cwtl out cmp and test pop rex.R lock test out xchg nop mov or callq adc nop (bad) xchg std jno adc (bad) mov (bad) lea in xchg mov mov ja loope jmpq insl xchg test rex.WXB pushq fistl mov test movsb test mov leaveq sub rex.RXB mov push fcompl pushq (bad) xchg jg lods xchg sahf cmc mov or mov xchg test mov test mov pop mov cmpsl mov callq (bad) xchg int3 loope xchg adc mov pop or (bad) rex.W fwait jmpq mov rex.WRXB push (bad) (bad) push mov movsb mov sti (bad) repnz movsl in (bad) mov jl adc rex.WR movabs loope mov mov mov rex.WRB callw movsb push rex.XB push push pop imul mov lret test push retq jnp sarb or adc mov push rex.RB rex.W sub cld pop rex.WR or gs or loope mov mov shlb pop rex.RB fwait xor mov push rex.WR cwtl movsl push jae (bad) rex.RB mov adcb cwtl or xor adc jge iret loope mov push callq jge jg lods sub sub leaveq pop in pushq mov rex.WB fwait shr int3 xor (bad) sbb xchg mov (bad) xor (bad) jp imul or xchg mov add clc adcb jl cmc in in push (bad) fldt rex.WXB mov sub loopne in jo jne push jrcxz push jno add addl mov popfq jmpq mov mov movabs sub test cltd sbb repz add rex.WXB sbbl rex.RX (bad) enterq jne (bad) adc andl out iret and mov xchg adc push or cmp (bad) xchg mov and or cmp sub pop mov in andb and mov push jmpq enterq pop push (bad) sahf cmpsl in pop int3 notb or popfq (bad) mov sbb pop mov cmpsl out cmc push cmc or mov (bad) or pop rex.WRXB fwait sahf mov sub stc mov cmp stc pushq leaveq test popfq (bad) pop mov jns addl sarl push (bad) lahf jmp pop push jge in stos mov pop lock mov popfq push cmp mov mov (bad) jb mov insl (bad) cmpsb mov in xchg cmp jmpq push xchg imul setno xchg (bad) cwtl cmp mov (bad) (bad) stos and in retq movabs sub iret (bad) retq cmpsl pop push lods mov lahf (bad) add int3 push in push imull mov adc mov loope repz sub pushq lea fldpi loope (bad) sbb mov stc mov iret or movsl jae sahf (bad) (bad) lods stos pop add push mov icebp lods mov adc stos bnd push out (bad) or adc mov (bad) mov mov js mov callq rex adc or icebp or or mov sub lods loope mov jns outsb gs in xchg (bad) leaveq hlt orl jo cmc movabs movslq sub test shll xchg in xchg mov scas lret insl jno out gs xchg pushq add leaveq xchg imul jns add rex.WB and and loope push addr32 icebp jne leaveq add pushfq jno xlat cltd xchg pop rex.WRB icebp xchg cltd and and xor lret out lret icebp add movsl and pushfq sbb sbb sbb loope rex.XB jbe je jb hlt xor or sub xchg jmpq movabs cltd nop retq mov icebp adc repz mov rex.WX movsb mov icebp lea hlt mov out (bad) int3 retq rex.XB (bad) hlt sbb jbe xor push data16 rex.X gs pop in popfq push rex.WXB cltd cmc test std cmp cld test in cmp andl xor jge pop cld jge jne rex.RB xor jno mov (bad) vpsllq (bad) icebp (bad) (bad) stc shlb leaveq jmpq scas cld xor and data16 cmc loope rex.RB sub in mov idiv pushq mov out mov mov jmpq test andb mov sub pushfq xor sbb movsl rex.W sbb in mov mov adc enterq cmc sub or test stc out mov rex.RB xor cltd jmpq mov jmpq in mov in stos cltd rex.WXB pop mov jno gs add repz sbb mov cmc jne and xchg jae ss sub cmc mov jrcxz cmp mov repnz jbe rex.RXB xchg cmpl int leaveq adc jne addr32 rex.WRB loopne cld rex.RB fs jne js jno jnp xchg pop std xor xor testl mov rex.RB mov mov (bad) in in (bad) in mov test popfq xchg mov in mov mov push cmp push sbb push rorl jge add adc xchg movabs fiadd int (bad) (bad) leaveq mov and int scas leaveq xchg retq sub xchg std mov in shl lret fdivs imul gs rex.WRXB scas cmc movabs jge in jo jno loope data16 mov leaveq jle rolb enterq test cmc (bad) cmpsl rex.RXB outsb mov rex.WRX mov mov (bad) popfq or test stos mov movsl jge std adc jno cltd and jne cmp push xchg pop rex.W xchg pop lock xchg and add stc mov in xchg stc mov cmp adc popfq cmc mov int3 popfq fs (bad) rex.XB rex.WRB adc jns cltd test adc imul test jo imul popfq (bad) and lea int insl (bad) in rex.WRX gs sub or (bad) sbb rex.WXB jmp hlt or (bad) sbb xor int3 in cli rex.WB lea fiaddl fs xor in push rex.WRX mov rex.X rex.WRX and icebp cmpsl sub fdivp icebp outsl loop popfq stc ds pop test movabs sub adc hlt jrcxz test sbb rex.WRX push in (bad) mov int3 pop add or out jbe add fsub sub (bad) mov (bad) push enterq scas push je rex jrcxz test sbb rex.WRX jrcxz leaveq push rex.RB cmp lret sti and (bad) rex.XB loop pop in sbb add int3 mov adcl movslq add rex.R or in mov outsb xchg sbb jrcxz leaveq mov and rex.WRX mov xor movabs je rex.WRX leaveq jge cs hlt add sub (bad) decl (bad) hlt sub adc pop and push stos lret (bad) mov hlt sub (bad) clc push test pop rex.WRX out or push mov push jle movabs (bad) (bad) sub adc xor (bad) hlt mov scas (bad) je rex jrcxz sbb mov push hlt rex.WRX (bad) sub adc xor cli in (bad) push out (bad) je sbb popfq xchg (bad) pop hlt rex.WRX stos mov (bad) pushfq pop hlt rex.WRX addr32 faddl push (bad) mov hlt addr32 fdivr nop hlt (bad) lock pop addr32 push mov sbb (bad) cmp mov rex.B xchg (bad) hlt fdiv loope pop (bad) (bad) fdivrl fist movabs je rex.WXB mov jne rex sub hlt pop and (bad) push hlt rex.WR je scas int3 mov (bad) insl leaveq rcll fistp int3 xchg (bad) dec (bad) pop (bad) sbb int3 fistp lock popfq rex.RB icebp (bad) je push (bad) rex.WRXB fdivr or or xchg adc rex.WRX cmp mov xchg je rex.WRX or or xchg adc rex.WRX loope retq int3 push cld add jb dec (bad) cld cmp (bad) popfq add (bad) or or mov xchg je rex.WRX outsb retq int3 loope hlt nop push push jmpq sub retq int3 xchg cld loope xchg nop (bad) (bad) lock (bad) mov xchg je rex.WRX or mov rex.RX scas in mov test lret popfq mov in xchg hlt pop rex.WXB add (bad) mov xchg je rex.WXB add cld (bad) sbb in sbb outsb out mov sub in (bad) cli or outsl (bad) js,pt scas jmpq and push and (bad) jrcxz mov add (bad) and jrcxz in (bad) cli or push push xchg lods fstpt sbb jnp cmp add lahf sub movsb (bad) (bad) cmpsl mov rex.WXB mov mov and pmulhuw out adc and lock sub test lahf pushq (bad) mov out mov js cmp mov adc mov pop mov in mul mov insl adc idivl push sub fs (bad) sbb mov jo in loope add sub pushq rex.RB rex.R subb and not mov movabs jmp mov cmp mov movslq sbb outsl xor xchg out xchg pop js mov icebp (bad) insl jrcxz rex.RX mov rolb mov cli rex.XB leaveq sti int cmpsl mov sbb push int cmc adc je movslq cmp pop mov js push jnp pop cmpsl (bad) test fnstenv mov test adc fstpt retq fiaddl cwtl xchg in cld jmp xchg int sub xorl hlt push mov cwtl xchg in in cmpsl mov rex.RX callq xchg push in (bad) cltd mov andl (bad) retq (bad) xchg mov xchg fisub fstpl jmp ss mov popfq outsl rorl adc movabs fsubs sub cmpsl int3 mov leaveq lret lahf repz (bad) mov mov scas lods (bad) callq adc rex.X rex.WRX fdivrl (bad) (bad) movabs stos in sub movabs cwtl sahf in movsb stos jrcxz sub sbb out or (bad) repnz movsb repz mov xchg add xchg movabs jne lret test jae leaveq (bad) movslq pop adc in xchg mov xchg adc lahf pop cmp pushq test int3 mov rcll mov (bad) xchg rex.RXB callq int3 int lret (bad) (bad) xor lods xor sub and xor jo jge cmp insl or cmp leaveq scas (bad) in lea mov repnz or jmp sub (bad) movsl mov (bad) push cli cmpsb lock sbb rclb xchg hlt and sbb jrcxz or mov jge pushq imul in sub pop jae int3 adc shrl loope test pushq clc out sbb adc outsl in push repz fs jp and loope cmp xchg rex.XB bnd movabs lret cmpsl mov ss imul icebp (bad) lock pop mov callq xchg adc nop lods jnp cmp icebp jo loope rex.WX rex.RXB lea in movsl push or cmp xchg callq (bad) lods out movabs cmpsl in sti js lock iret mov and out (bad) mov rex.WRXB xchg rex.X insl mov (bad) xor repnz test push out rex.B xchg (bad) (bad) mov fidivrl (bad) fisub (bad) jno int jbe outsb jae or rex.RB movsb jrcxz pop out pop sarl mov loop xchg jge jne xor lea adc (bad) xchg sbb movabs lods mov (bad) xchg clc or retq push cmpsb rex.X scas fs leaveq push insl push rex.WRX pushq xchg xchg (bad) xor (bad) push jmpq insb rex.WXB out movabs fildl add mov mov decl movsl mov xchg rex.WXB fwait sbb lcall adcq lea adc movsl fwait gs xchg xchg jae cli mov data16 mov gs sbb in mov push imul mov lock sbb retq pop scas movabs pop or pop rex.WX sbb xchg (bad) (bad) rex.WB sub xchg lahf xor mov jp push test scas cmpsl gs jbe and xchg pop (bad) xchg adc mov rorb cmp iret outsb lods cmpsb sub xchg jg (bad) or sti cwtl jmpq xor xchg and (bad) xchg addr32 xor (bad) lods stos push hlt mov mov cwtl mov rex.RB mov mov sahf cltd test (bad) xor push mov out je sar loope pushfq xchg mov mov xor (bad) leaveq jb (bad) xor repz push movslq mov rex.XB mov cmc rex.X jo jrcxz je xchg movsl rex.RB jge mov sahf or rcll or lods rex.WX mov lret (bad) mov pop mov (bad) lods sub push leaveq out cmc lock fs jrcxz mov jbe xchg mov nop push xchg xor jno rcrb (bad) xorl pushq repnz xlat jle mov cmc out ja push mov (bad) test outsl testl sahf repz cmp sbb mov rex.RB jb,pn out scas jbe jno cltd test xchg xchg scas in xchg jbe mov and cwtl insl jbe popfq cltd jle out and jp (bad) xchg ja icebp movabs add mov in pop adc icebp addr32 jne mov sub mov callq xor pop movabs int std pushq push pop pop rex.WRXB in xchg mov sub unpcklps sbb lret callq jbe sbb pop jne nop xchg jrcxz sub and mov test std lock bndldx shll and xor scas mov fldt callq imul rex.WB push pop lods retq (bad) jbe xchg sbb mov in xchg xor callq stos test cmpsb or movsl add pop sahf cmp repnz push lods movsl lock int3 jmpq fwait cmp std lahf mov pop cli out scas outsb xor cmp clc mov test xor jmpq and mov xchg callq pushq pop int3 stos or cmp repz nop (bad) xor int3 fisubrl (bad) xchg movsb mov xchg pop xchg stos mov stc imul adc (bad) movabs xor jmpq or in movabs mov xchg in (bad) cmpsb outsl (bad) (bad) cmp (bad) (bad) mov icebp ss (bad) pushq lahf cwtl mov cmpsl cmp lods loop mov addr32 rex.WXB (bad) mov push mov push sbb (bad) (bad) cmc movsl xchg sahf andb pop lods jp pop jb movslq jae xor movsb loopne out fisubrl xchg jnp push fnsave retq (bad) mov mov pop stos adc (bad) test push (bad) xchg divb pop fsubrs pop (bad) repz sub idivb out xchg mov (bad) cwtl lret sbb jle sbb sahf jmp jrcxz iret clc mov jae lahf jne adc callq mov scas je pop pop (bad) jns sahf enterq bnd fsubr lods movabs shll (bad) xor mov cmpsb int3 sub js xor in js imul scas add lret mull nop idivl sbb push shll pushq xchg (bad) cld movb push test sbb sbb sti lods cmpsl pop fstl xchg jp mov fldcw fs addr32 mov popfq (bad) nop mov jae je push mov in mov cmpsl add fidivr icebp in pop mov sub or cwtl (bad) (bad) xchg scas loopne gs lock (bad) (bad) hlt rex.WX movsl xor rex.RB es sbb cmp shl xrelease mov mov jo,pn insl pushq or ja mov hlt mov icebp sub rex pop cltd retq xchg xchg sub cwtl test xchg (bad) (bad) lret rex.X (bad) retq mov xchg jg xchg ja add hlt rex.WRX cmpsb movabs xchg mov lea fld jp cmpl test xchg imul push movabs (bad) out cmpsb lret mov mov in xchg movsl (bad) jbe (bad) jmpq (bad) rex.WR mov cmp std push sbb and in mov (bad) xchg xchg pushq ja push add jl mov in vcvtdq2pd (bad) sub stc outsb xchg (bad) jae test and lock mov xchg (bad) mov cwtl int rcpps out mov xchg xchg mov mov test gs xor icebp rcrl xchg test jns rcll ja rex.W xlat rex.WRX (bad) loope push stc enterq movabs movabs ror mul add leaveq lret in loope pop jl divb jmpq in enterq rex.W (bad) pop xsaveopt rex.RB push icebp cwtl (bad) (bad) div mov mov jbe mov in je rex.R mov sti loope cmp (bad) div sbb jmpq (bad) repnz mov clc sbb (bad) pop add (bad) rex.WR enterq xchg (bad) rex.XB int nop mov iret mov (bad) ss mov adc (bad) xor ss rex pushfq pop (bad) rcll fnstenv jns xchg icebp (bad) rex.XB rex.WRXB test movsl and in (bad) leaveq mov scas movabs scas ja rolb mov rex.X mov sahf lea push stc push xchg mov (bad) rex.WR jne add mov jp bnd fadd jne xchg cmc push shlb pop mov cmp stc incl hlt cli xchg and xchg mov scas cmp and sbb std cmpsl (bad) jae push movabs sub and jp in ja xchg gs (bad) out (bad) (bad) pop (bad) jb (bad) lahf rex.RB push retq cmp leaveq ror (bad) lret enterq retq (bad) rol iret (bad) repnz push or sub (bad) je or and rolb lret (bad) fmul mov or int movsl rex.WRB lea insl test jge mov jrcxz test andb xorl test and repz mov test push rex.WR repz in mov test sub sti in mov test pop rex.WR (bad) in mov test rex.WR repz ja mov (bad) jrcxz test push rex.WR repz in mov test rex.WR repz jg mov test pop rex.WR (bad) in mov movsb rex.WR hlt in mov adc rex.WR repz in mov insb lods rex.WR cld in mov sbb rex.WR enterq mov callq sub clc in mov test pop rex.WR shl push mov test rex.WR add orb test (bad) rex.WR imulb rex.WRB leaveq jbe div mov jrcxz xchg xor (bad) shl push xor (bad) shl (bad) xor rex.WRX mov in shl out xor outsb shl scas xor cs (bad) xor jle jrcxz mov jrcxz sahf xor (bad) shl pop xor faddp jrcxz lret rex.WX mov in shl (bad) xor pushq jrcxz stos xor sub jrcxz cli xor jp jrcxz mov jrcxz (bad) xor sbb jrcxz pop xor fcmovb jrcxz repnz jb jrcxz mov in shl xchg xor adc jrcxz push xor rol jrcxz loop in shl movabs in shl rex.X retq adc cld or icebp mov test mov test je jrcxz test test movsl in mov cmpsl (bad) rex.W rex.RX test in mov pushq sahf sbb repz rex.X ja je int std test repz repz in mov je jrcxz test hlt rex.WR repz jmpq (bad) repz (bad) mov je jrcxz test cli jne push cmp (bad) or lret or and je fst jb iret rex.X retq enterq mulb mull mov or fisttp and in addl je mov hlt rex.WRXB out je sar lahf mov or fdivr loop cld fist rex.B add (bad) (bad) adc (bad) lret cmp sbb stc mov test int3 cltd add movabs callq test mov push lock mov mov int rex.B addr32 movabs imul mov push xor xchg lock out push and mov xor xchg in int3 adc repnz mov je jrcxz test out out repz in mov test rex.WR data16 callq sahf (bad) (bad) psllw in mov (bad) shr (bad) je jrcxz mov movsb mov mov lahf adcl rex.X rex.WRX jrcxz leaveq mov mov (bad) cmp movabs and lret mov in movl jne mov movsl test orq jmp push mov rcrl leaveq movslq enterq push (bad) int3 icebp enterq insl (bad) xor (bad) (bad) xor js xchg mov jbe cmpl pop rex.WX push fcmove test in (bad) xchg std in lret add pop in movsb iret (bad) sbb mov jl add stos rcll cmpsb sub js sarl ds sbb cmp add jp lea ror pop adc lret shrl add jno icebp sbb stos mov (bad) roll cs mov sbb or roll lods testb scas shll or rorl (bad) cmc cmp (bad) push cmpsb shll push or loope sahf mov roll xor mov mov rol xor imul (bad) ds (bad) cmp mov (bad) (bad) cmp outsb insl xchg cmp fwait rex.B mov and movsb xor sbb adc (bad) mov js (bad) xor pushq retq jmpq movabs adc pop push xchg hlt rorl add (bad) lock (bad) jno cmp ds sbb (bad) icebp cmp rex.WR rex.W loop (bad) rol and sbb sub lret fcoml int3 ja jns and rcl rex.X lock mov mov (bad) cmp sub xor pushq leaveq roll repnz cmp shrl sbb rorl sbb and rex movabs test lea nop psllw fwait push rcrl test pushq cmp add (bad) (bad) shrl scas xchg roll movabs (bad) xchg shll rolb popfq push enterq retq (bad) xorl int callq (bad) rex.W rex.B xor shll or cmp jrcxz xor adc cli movabs shll jo sbb loope rcrl (bad) (bad) add and adc pushfq mov sub pop roll (bad) cmp cmpsb es movsl jne lahf stos mov imul retq (bad) outsl add (bad) test (bad) xor rex.WX (bad) lods rol movabs lods cld sub scas scas push inc xor rex.WR push and (bad) rex.WRXB movabs fs mov and (bad) mov (bad) sbb mov out sarb (bad) dec lret adc mov and (bad) sar and rex.WRXB xchg pop (bad) shrl rex.RX xchg and test or (bad) sbb retq jrcxz out enterq sbb jmpq jae adc mov add jg in add mov jle shll stos pop lret jbe retq insb (bad) pop int3 roll lret idivb add pop rcrl outsl out adc cltd inc (bad) int rex.WRXB (bad) sarl sbb cmp ds xor and (bad) fsts roll rex.RX adc rcrl mov pop pushfq adc mov stc (bad) mov (bad) bnd (bad) cmpsl mov rex.B jb outsl movabs lods negl lret (bad) shrl sarb mov (bad) add (bad) pushfq movsb out pushq (bad) movabs scas lahf mov mov and (bad) mov sbb (bad) (bad) rex.X mov lret std shll icebp rex.WXB or jbe (bad) mov adc xchg (bad) xor mov (bad) mov stos sarl pop cmpsl (bad) sbb (bad) test push jmp (bad) (bad) adc (bad) and mov shl es pop sbb adc decb (bad) icebp mov shll sbb adc imul out loop rcll std loop negb (bad) (bad) and jns jno rol rorb rorl or (bad) jae jrcxz adc xchg sar retq out enterq lahf (bad) or ds stos fistp rex.R (bad) sub (bad) rex.RX mov mov (bad) leaveq add rex.WB sub adc lea (bad) jb fisttpl cmc cmp jge jnp loop test leaveq movabs loop stos popfq std rol and fisttpl adc pop mov mov addl cmp insl push cwtl mov and pop cmpl sti sar add (bad) pop mov jl add jno test mov xchg xor loope (bad) mov int3 (bad) shll jno jns (bad) (bad) jb in adc rex.WXB and add cmp cltd mov sar jrcxz in jns fwait jno rex.WB push or rex.X pop rex.WRX jp jbe (bad) test mov sahf fwait push mov xchg adc data16 rex.WRX fnstenv (bad) or rcrl repnz add shrl test (bad) xchg loop shll and (bad) incl (bad) xchg and (bad) xor imul adc pop out repnz (bad) icebp repnz movb or out xor push and loop shll jbe shrb fidiv and lret out xchg fldcw mov add jp outsb and popfq popfq cmp xor fldcw hlt add vpgatherqd rex.X rex.WRXB (bad) in pushfq (bad) mov in (bad) jno roll shl cmc rex.WRXB rex.X imul retq or pushfq (bad) test rex.X in (bad) mov popfq sbbl movabs insl je and add xchg (bad) rex.WR mov hlt movabs rex.RX rex.B test rorb pushq push (bad) fcoml out rex.W rorl stc in in shll movabs (bad) mov or out cmp or push xor lret je pushfq fnstenv shll mov sbb xchg retq (bad) stos negb jns (bad) loope cs (bad) test add insb retq jle vshufps fdivrp test shrl xor je loope rex (bad) sbb jne shr jo sti rorl mov pop pop orl cld (bad) loope rol movsl callq gs cli (bad) (bad) sub xor jne and and (bad) xor push loopne lret ss rol (bad) mov cmp (bad) add lock imul loop add pop in sub (bad) (bad) sbb cltd (bad) (bad) insl sbb or (bad) fadd or lods addl add es xor int3 mov sarl xor out js fadd lret rex.RB icebp lahf mov cmc xchg icebp and push pop repz movabs loope cmpsl (bad) out (bad) test mov xchg (bad) (bad) fidiv sarb negb adc sbb or popfq cmp rex.WRX xchg lods jbe (bad) pushq fsubs outsb (bad) loope xchg sarl sub mov sub jbe cltd cs rex.WRX lock movabs push out rex.RB (bad) iret test rex.WRB int test (bad) sub jns cli retq int3 sbb rex.R (bad) leaveq flds movslq (bad) xor mov fcmovu lea setge (bad) xchg in rex.XB fildl (bad) (bad) rex.WRXB jg addr32 add lock sub jrcxz or rex.WB leaveq adc push rex.WRXB (bad) mov xchg jrcxz mov adc ja rol mov mov rcr lea (bad) fisubr pop add sti test jns retq mov xor insb push add jle (bad) test jmpq and mov rex.WR (bad) (bad) add and mov or mov and leaveq fs test repz lahf rol sar and loope inc mov and (bad) sbb pop (bad) shrl fidivrl int test stos jb shll (bad) rex.RXB rex.R rex.W ds rex.RB mov adc (bad) cli cmpsb push (bad) push adc sub in mov shrl add xor je xchg incb xor and lods xor mov jne (bad) mov add and loope (bad) rorl retq lret pop xchg xchg js push shll sti out and push xor mov mov xchg leaveq rex.WRB add add sar cmc popfq lret mov mov pushq rorl loope ss and and push sub jbe cmp lods repnz rex.WR es pushq pop push movabs sub repz rorl pushq cmp fnstcw jns rex.RB (bad) add movabs and or push pop lret or (bad) movabs imul rcrb push push movabs loope int (bad) mov add jns clc cmpsl sub sbb in (bad) rex.WRB cmp mov rex.WX xchg or stos and sub sahf pop fld adc scas clc in push mov rorl rex.RB imul rex.WB fmul adc scas mov ds addl imul cmp in (bad) mov rcll xor (bad) sarl (bad) imulb iret jbe test ss repz jns rcll loope cmc (bad) cli (bad) rcrb pop adc pop mov iret js retq or loop add cli rex.WRB xchg inc add mov mov sub pushq orl sub stos push cmp add pop vpmulhw insb jbe jns decb mov loope repz icebp or cmc icebp jno,pt mov adc pop mov shll js rex.WRX data16 cwtl (bad) jne iret shll jle fldenv (bad) cli movabs mov rclb fldcw pop jno pop (bad) rex.WR mov or jnp (bad) xor jp cmp repnz subb cmc js in (bad) rex.R add (bad) jle and int3 mov flds push test fstpt mov xor (bad) xchg sarl push clc mov (bad) fwait xor mulb rcrl mov loope rex (bad) cs movabs pop sub pop cs cli (bad) mov pop adc sbb add test jns sahf (bad) jns (bad) push rex.WRX mov push jmpq xor or ss xor push (bad) (bad) imul repnz repz (bad) rex.R sysenter fdivs push rol and (bad) push add loope in movabs adc gs movabs rex push cltd ror retq xchg pushq stc (bad) fs xor push stos (bad) mov cmc pop jmpq mov mov shll int vminss cmp std (bad) outsb xorl mov mov rorl mov shrl mov rcll (bad) sar imul outsl sbbl movabs mov imul repnz mov (bad) cmc add (bad) xchg sbb cmp (bad) push imul icebp pop and ror fwait sub pop mov std rol (bad) mov sub roll in jne xor or shrb shl sbb xchg nop sub retq imulb sahf fmull test sub sbb adcl jle rcll fimul pushq shll adc imul gs ficom and (bad) neg rol movslq push mov (bad) fstps std fisubr addl sbb jge (bad) mov shr mov lret sbb rex.RB fs shr mul xchg (bad) (bad) push jge rex.B repnz lock rorl pop (bad) pop cmpsb fsts jo xor sbbl push xor add sub (bad) adc cmp rex enterq movslq movabs sbb movabs xor rcrl iret adc retq jg outsb (bad) sub pop shll leaveq (bad) movabs mov (bad) push adc jmpq cmp lock movabs (bad) sbb test add loope movabs mov std roll imul rex.RX retq es rcll scas mov enterq rcrl rex.RX test stc jmpq xchg and rex.RB and fidivrl xchg (bad) test movslq rol adcl (bad) (bad) cmp vdivsd sarl cltd std rorl or xor rex.WB ljmp mov jo adc lahf movabs sarl stos (bad) add push or xchg lea (bad) fwait std rex.WRX (bad) (bad) mov rex.RXB push pcmpeqw sarl xchg mov jnp (bad) sbb cld outsb rcrl jno mul fdivr add fldenv (bad) pop (bad) (bad) cmp mov jmp ds (bad) fnstenv rcrl or lret mov (bad) icebp fstps cmp loope loope out mov xor movslq lods sar sub rol sub (bad) rex.WRX lock jge jnp int mov jbe or out mov (bad) xor cmpl jle popfq es pop (bad) push lret jl jb movabs std mov add rcrl mov sarl rex.WX (bad) adc rex.XB sarl xchg mov adc movsl (bad) rol (bad) fmulp add push rex.W mov (bad) xor jp jo jge (bad) outsb (bad) fs (bad) sub shrl movsb rex.RXB (bad) data16 xor rcl callq out lock rol jns push pop jne jmpq movabs (bad) (bad) xor pop rex.RB rex lock (bad) (bad) je shrb roll cli xchg sbb iret xor jb jrcxz test mov sarl repz loopne lret (bad) rorl sbb in movabs xchg repz cmp rcr xchg fisttpll loop notb (bad) (bad) outsb cmp rol pop (bad) lahf cs sarl (bad) xor mov mov xchg (bad) rex.R jl add mov movabs pop jp insl pop retq pushq ror rcll mov rex.WRX sbb enterq sbb and movabs adc fwait sbb enterq sub rolw jle (bad) test insb out adc (bad) mov xchg rex.WR fstpl jb sarl add jno out (bad) and rcll pop iret pop (bad) jg jbe fildl cltd rol rex.WB xchg movabs loopne ss add cmpsb movabs mov mov loopne roll rol push test repnz fisubl jp addr32 js roll (bad) lods pushfq xor std retq sbb (bad) imul movabs popfq or cmpsb rol mov push mov rex.B xchg pushq sarl hlt jns cltd (bad) adc subps (bad) cmc rex.WB rex.W jbe adc add retq incl (bad) stc mov or rol rex.WRB sub and out loope (bad) rex.X cmp jb shll repnz test loop cmpsb sahf vpaddb dec cli mov sbb xchg (bad) rorl ffree push and (bad) insl out icebp and rorl ds fwait pushq (bad) jmp loope mov sahf cli (bad) or andl cmpsb rex.WRX rex.XB pop je rcll rex.WB pop (bad) pushq xchg or (bad) jmp xchg out retq rcrl (bad) adc divb adc cmc mov pop rcrl push rex.WRB mov mov fmul mov adcb pop sub movabs and sub fstps lret scas xor jmp cltd sbb pushfq cmp (bad) (bad) sbb fldcw outsb xor mov (bad) sbb (bad) icebp rex.X mov scas cmp sub or jbe shrl mov jmpq mov and (bad) nop fld mov pop icebp sub fildll jb jmpq nop add retq addr32 shl jle xchg cltd xor (bad) sub rex.WX sahf or adc mov push fisubl jae sub mov and rcrl loope shll push adc outsb repz and rcrl es add scas outsl mov xchg mov mov out test cmp mov xchg scas (bad) or sbb push int add in es (bad) xor push and imul rcll repnz roll sub outsl loopne cltd shrw or (bad) cmp rex.W insl roll (bad) shlb push (bad) (bad) xor adc xchg jmpq rex.WRX data16 stos (bad) xchg sbbl add or (bad) imul rorl (bad) (bad) mov xchg test int3 (bad) lret loope outsl nop pushq lahf sahf push (bad) es mov outsb xchg cmp retq (bad) sbb stc rex.WRX fpatan sbb ds rol movabs in hlt roll jbe xor notb test shrl mov add adc add rex.W loop pop scas cs rex.WR repz rcll push jno xchg jp rorl pushq retq fidiv movabs test fs mov cmp repz (bad) adc xor jrcxz rol in push roll iret roll ficom int3 pushq (bad) pop rex.WX rol pushq xor lock movabs rol (bad) mov rclb neg cmpsb in loope mov pop (bad) rol orl cmp jl rcrl shrb icebp mov push (bad) fild adc rcrl mov shrl out (bad) leaveq (bad) (bad) (bad) cmp int3 not push rcl push xor cs jo xchg loope cltd pop mov sub rcl loope out fsubl fwait icebp repnz (bad) mov leaveq sarl rex.WRX mov rcr fidivr (bad) (bad) mov add xor lock icebp cwtl rex.R roll rex.WXB jle adc rcr mov sar xor sbb mov push sub vmaxpd pushq rcll or pop loope pop (bad) sbb cmp rex.X jge and add (bad) (bad) (bad) xor (bad) out (bad) xor stc or cs addr32 rcll xor (bad) jae (bad) push fcoms std rol xor rex.WX (bad) sarl adc (bad) adc sbb movabs mov adc mov movsl in push (bad) rol and lret cs add (bad) mov rex.B or (bad) (bad) xor and adc add scas push shrl mov sbb sub (bad) mov xchg cli pop adc andl rex.WX xor stos int3 pop imull xor push popq cmp (bad) mov jrcxz sahf pop out rep rol sub shrl shrb adc fldl xchg and cmp stc jle rex.B ds movabs push sahf mov vpextrw vcvtsd2ss rol es sbb xchg shl stc rorl mov push sub fadds cmp sti in (bad) pop or rex.X in rcr mov std cs lea cltd in sbb rex.RX mov sbb sub jmp rex.WRX fisubr orl (bad) pop jne mov neg xorb pop xor test mov push (bad) mov cmp repnz movabs leaveq pop sahf or rex.WB jge in js stc (bad) jno cwtl rex.RB (bad) cld add pushq movabs mov rorl sbb jbe push xor mov imul es and gs (bad) jl jrcxz mov (bad) (bad) xchg pop stos pop mov fdivl rcrl (bad) (bad) insl pop sub cmp (bad) xchg pop movsb cli out out iret rcrl adc xchg or out add xchg add rex.X push loope jle jbe cmpsl pop xor stos (bad) jno rex.X or pop mov (bad) jb (bad) mov in shrl jne xchg mov (bad) out pop mov xorl int add (bad) mov rorl (bad) or add pop (bad) mov rcrl (bad) xchg callq in add in rorl loope movslq int3 push loopne sub (bad) ja pop callq adc jne rex.RB (bad) lods shll xchg (bad) imul cmp cmp mov sbbl and push jne addl adc out movslq mov mov es movslq pop cmp adc int3 jmp scas rex rex.RB test (bad) ss stos (bad) (bad) rex.WXB std rorl fs ja ds mov shl data16 adc callq (bad) mov xor (bad) cli mov push xor or (bad) (bad) lahf rol out sub rex.B pop clc adc (bad) mov imul movabs es sub and shll push sbb jno jne mov rex.XB pushfq and sub shrl jl rcll mov mov xor rex.WRB (bad) jg ja outsl fdivrs rex.X rex.WRXB sbb scas test fldz retq (bad) mov xlat mov (bad) and rex.WXB xor and repz andl (bad) leaveq cltd and rex.X add (bad) mov rex.WRXB (bad) adc retq sbb imulb faddl scas orl xchg cmp jp fnstcw add stos ds out jge (bad) rex.B rex.R rex.WB xor sbb pushq mov movabs adc shlb cmpsb andl xchg add add shl movsb pop sub stos add xlat scas (bad) xor sbb adcl xor add icebp rex.RX lods hlt (bad) loope sbb ljmp callq scas rolq xchg movabs (bad) mov sarl push scas lret loope in and rex.WB jb (bad) pop jp leaveq out sgdt xchg and rcrb rex.R (bad) adc stos sbb fsts sbbl std and mov fisttp shll (bad) rex and callq nop loope mov (bad) cld jg (bad) leaveq xchg jno adc cmp pop mov xlat test addl in movsl pop (bad) cld loope scas (bad) or push pop fdivrl add jl rex.WX retq xor fmull mov outsl rex loope jmpq mov push (bad) (bad) xchg sbb icebp sarl rex.X ror xchg fisubrl xor sub movabs rex.X jne rex.B rex.RB add popfq icebp rcrl jno jbe sti sub test shr and jle push pushq xchg sub leaveq scas (bad) (bad) negb pop retq mov mov rex.WXB roll mov rcrl cmp out mov xchg roll jmp push stc rex.WB (bad) pop mov and loope rex.WRB (bad) mov imul adc adc or (bad) pop scas xchg testb rcll jno loop xor sub jne shrl xor fdivrl fadd (bad) rex.WR loope roll std stos fcoms (bad) lret push outsl pop push (bad) (bad) cld add loop pushfq cmp cmp mov out movabs stc movabs repnz fcmovnb out hlt (bad) jle mov shll push pop cmp mov (bad) (bad) rex.B and faddp clc rcll push rorb (bad) fadd pop (bad) outsl nop or cmp sbb xchg jbe add and mov rex.B insb xchg sbb sbb repnz or cmp sahf fs fbld sbb (bad) cs and cmp movsl int3 mov sarl adc sbb and add (bad) idiv cmp jb pop sub flds mov movabs std (bad) pop rorl cmc or xor rcrl sahf es pmaxub stc movabs (bad) cmp pop (bad) popfq add movabs add mulb ljmp sub (bad) mov ds add xchg out (bad) ror insb mov repnz (bad) rex.WB scas es rex.WR rex.RXB shll cmp or movsl and mov (bad) jbe mov test (bad) xor sahf sbbb mov sar rex.R mov (bad) jb jbe stos lahf popfq or mov movabs sub or test mov lea jns jrcxz sti pop ss movsl (bad) mov shll sub pop sbb mov mov rcrl rol mov pop rex.WB xorl negl lahf push xor rex.XB rcl es add jbe stos lret xor xor (bad) icebp rcr xlat add (bad) adc or sub fcmovne or (bad) stc xchg (bad) loope cltd mov rex.WXB std rex.RX sub (bad) cltd cmp out mov xor imul mov shr or (bad) loope xchg cmp and xchg (bad) sarl or imul mov loop rcrl mov addb fidivr test rcll cmp (bad) xor or (bad) xchg test (bad) (bad) sbb cmc rol (bad) rex.B enterq (bad) imul push repnz add lock rex.B jno sarq popfq mov pop fist in rex.WRB cmpl rcrl and (bad) fisubr fldl cmp adc sbb shll mov (bad) add leaveq jno rol xchg loope cltd cmpsb xchg lea pop (bad) rex.WRXB push add in out rex.WR sub push (bad) movsl xorl pop imul pop or (bad) icebp pop leaveq cmpsl add and xchg and push sarl sub sub lahf fnstcw movabs jns sub test loope xchg cmc shl (bad) rex.WR (bad) vpsrlq jno or sbb roll jno sarl add cmp popfq (bad) shl mov fwait xorl (bad) rcll mov leaveq jno (bad) (bad) jno std pop sub rex.B mov jo and rcr repnz cmpsl xchg pop jb roll pop jno add pop xor or sub icebp movabs pop movabs sbb adc rex.WX add (bad) leaveq test xchg push jmp rcrl out popfq jmp cmp (bad) icebp (bad) stc xor es cltd sub (bad) jb je xor (bad) jo pushq xor (bad) cmp add or rclq (bad) gs add pop xor fldenv and test add push out (bad) jae imul cltd stos sbb pop (bad) vpsubsw adc rcl (bad) roll roll (bad) repnz adc sbb push retq imul mov popfq fcmovnb rex.WRXB rorl rol repz mov pop es in stc (bad) add and stos xchg movabs fcmovnbe fbld (bad) sub jp adc addl fldenv xchg and and (bad) roll (bad) cmp (bad) xor or jno rex.X roll or jno jns nopl adc fldpi fwait (bad) xchg popfq mov hlt pop push mov jmpq jno push and movabs add movabs mov cmp sarl push loope (bad) fwait movabs ds sub (bad) mov rcl (bad) mov sub int3 icebp xchg stc loope rcrl scas pop push (bad) icebp xor retq cltd loop xchg xchg lret out mov add cmp push xor rex.X vpminub xchg stc mov add mov std and fnstenv repz cmp cmp (bad) fisttp and jbe stc (bad) rex.B jnp (bad) (bad) mov mov outsl (bad) (bad) repnz rex.XB (bad) popfq mov mov imul adc rol mov fsts or je shl rol cmc rol leaveq add loope mov int3 add retq and (bad) sub xchg popfq mov rex.WX rex.R rex.B repz jno test adc sbb lahf adc mov mov cmp pop mov lock rex.WRXB pushq shr rex.B rex.WR testb push imul fbstp and addb sub in jbe rcrl sbb in callq mov test (bad) jo sarl scas pop (bad) jmp xchg jnp movsb sarl (bad) jo (bad) xor loope popfq (bad) lahf std in (bad) add mov jb (bad) rorl add cmp fimul add clc fistl and in xchg (bad) lret rex.WRB jnp out or mov out pop leaveq cmp add mov out jmpq leaveq jb sarl pop jae cs cmp roll rex.WRB shll adc (bad) jo rex.R hlt cmp (bad) (bad) fld rex.WRXB imul cltd push cmp cld and rorl add adc mov in (bad) or rcll repnz lret dec and and sbb adc shrl movabs rex.RXB cmpsb (bad) jnp or (bad) movabs mov rcrl rex.WR jl (bad) je outsl xor rcll int mov pop sub es and stos (bad) mov incb fimul std rcrl and mov in jmp leaveq jnp rcrl jge rex.B lcall movabs sbb (bad) fwait insl push (bad) jbe xor xchg rcll (bad) (bad) adc sub movsb sbb or shll mov jbe (bad) mov insl movabs rcrb (bad) add cmp sub insl mov mov (bad) jmp out shll test stos cmpsl sahf imulb (bad) outsb (bad) addb mov sub fildll adc cmp xor and nop roll subl pop callq mov leaveq movabs or (bad) test rolb mov addl cmpsl leaveq sbb pop or roll (bad) lods rol add jns push (bad) in sbb sahf (bad) shl sub rorl rorb (bad) or pop fadd rex.RX jle (bad) vcvtss2si jge (bad) (bad) (bad) (bad) (bad) iret hlt xor cld out andl pop retq (bad) (bad) insb (bad) cmpsb xor mulb add (bad) (bad) mov mov repz cltd jmpq shlb jp movslq rex.XB push rex.WR xchg jp retq rex.WX fwait retq add retq xor xchg retq and leaveq rex.WR xchg leaveq test out jns rex stos (bad) mov cmp sarl imul (bad) jno shll enterq cmpsb rex.WRX std ffree repnz cmp adc cmp cmp and xor adc mov (bad) mov cmpsl mov adc loope scas sbb xchg adc es lahf rcr jle cltd ss in mov movabs xchg add adc mov jo mov out int3 leaveq (bad) pop add insb xchg callq insb leaveq pushq xchg rex.W rex.WRB leaveq xchg sub push fldt leaveq xor add xchg cmp leaveq fcomp or rcr rex.WRB dec adc add jle shrl or mov pop sar loope repz scas movabs roll cmp popfq mov insb loope add (bad) mov clc (bad) add mov mov push sbb (bad) sbb pushq shrl fisttpll rex.B rex.WR (bad) sbb (bad) xchg rex.RB bswap or (bad) rex.XB and popfq (bad) (bad) roll fs (bad) adc sub ss or shl xchg cmp push (bad) rex.WXB loopne and or add (bad) or test callq pushfq pop nop rcrl movabs mov mov lea retq cltd add xchg fistpl (bad) jl sbb mov sar (bad) leaveq or and push cmp rex.WX xor in cmp xchg and scas (bad) lret pop icebp mov mov shll sarb test mov mov mov cmpsl mov jle movslq rex.X movabs gs sbb repz (bad) xor and sbb nop mov sbb out or (bad) loopne jmpq ds cmp mov and movabs (bad) pushq shll retq rex.RXB ja push shrl sub fstpt add adc xorl jmpq pop sarl mov (bad) loopne shll sub rcrl pop mov push xor xor shl movabs loop vpsubq (bad) cmp shll fldcw pushq or adc and jo test mov rcr in rex.X lret sbbl rcrl (bad) lods or fninit jno sbbl mov mov hlt push and mov cmpl add pop rex.WX rex or fmull fist adc mull adc add mov icebp in stc popfq jne andl icebp sub push addr32 rex.WRXB cltd pop xchg pop xchg sbb cmc (bad) cli rex.B lock adc sarl (bad) xlat or and shll (bad) cmp push shl (bad) xchg je out rcrl (bad) pop jno test rex.WRX and movl movabs stos shrl shll adc jns jbe (bad) rcrl (bad) jns mov xchg (bad) lods leaveq mov insl (bad) mov cmpl pop rex.WRX mov pushfq pop loop push jg cmp rex.RXB rep orl xor sub subl sbb mov and leaveq cmp (bad) stc (bad) sti cltd pop movslq int3 ss roll mov mov test sar clc rcll shlb icebp xchg leaveq add mov and (bad) (bad) sub xor mov jrcxz push xchg pop sub idivb cmp addl cltd mov cmp xor incl rex.WB shll lcall int3 rex.WXB sub (bad) lret lock orl mov mov pop shr pop (bad) repnz movabs rorl adc (bad) push pop int in or repnz rol icebp pushq movslq rex.XB rex.WXB jnp ja ror mov jg and loope cltd movabs and push xor or mov (bad) repnz movsl retq xor pop test mov (bad) leaveq jmp inc or add std and repnz rcr jb shll adc cmp jmp rcrl xor jns jno test jae xchg add rol jns (bad) mov rex.RX rex.WR repz lret jmpq mov mov mov (bad) push leaveq cwtl sar fsts int3 (bad) mov rol sbbl hlt mull roll sub ljmp push movabs stc notb icebp addr32 jg (bad) fsubs mov sub (bad) leaveq (bad) icebp (bad) out add cld cltd movsl xchg ror jmpq add loop xchg in (bad) (bad) rorl out rex.WRX sub mov (bad) rex.W sbb sub lret iret subb (bad) idivl mov outsl add icebp adc mov rex (bad) adc xlat retq (bad) mov mov mov (bad) sar loopne xor jg (bad) int3 rex.WR roll scas fldenv jge js loope lods pop shrl pop fwait sub shrl test pop sbb sarl fldt jp add (bad) adc jno lods (bad) jnp sub pop mov pop stos std adc cmpsb mov jbe xchg rcr sbb stc (bad) leaveq pushfq sahf xchg add add xchg out fwait xchg out test shr scas sarb (bad) fs and cld callq rorl xor rex xor (bad) sbb ficom add movsb sub movabs mov shll (bad) xor sbb (bad) rcl movslq xchg or cvttps2pi insb or add mov (bad) cmp (bad) rex.WX and adc sbb sub rorl (bad) mov test movsb and sub loopne jle xchg jne movabs (bad) int3 repz (bad) callq idivb repnz lods std bnd (bad) jmpq cmp (bad) rex.WRXB rex.WR rex.WB gs add (bad) lret fild pop sub xchg clc sar push ja jnp outsb (bad) (bad) add sub mov mov (bad) popfq rcll int sbb (bad) (bad) xchg xchg pop mov jo fs sbb je pushfq js cmp (bad) xor jp,pt and rorb xchg loop xchg subl (bad) fcoml rex.B mov mov rex.WRB je jle xor jo (bad) nop xor mov mov outsb or repnz xlat in sbb std and cmp (bad) lret mov jb (bad) add add sub mov push rex roll out ds adc outsb (bad) cmpsl (bad) retq rex.RB push in int3 andl rex.XB movl (bad) jmp test rorl rex.XB (bad) insl mov rcpps (bad) xor xchg sbb (bad) push sub cld rcll movabs add rorl movabs (bad) mov jae rcll scas push jo retq xor (bad) fdivl (bad) pop or add mov movabs cmc mov cltd pop (bad) xchg insl pop fldcw cmp mov out jo cmp push lret (bad) (bad) insb jno stos xchg mov fdivrl cmp rcll (bad) (bad) test lods adc gs movsl (bad) and loopne rex.WX rol mov push jnp rcrl (bad) xchg mov dec out rex.B xchg add jrcxz add je jg fimull cltd hlt roll icebp div mov sar (bad) sub add jne movabs push (bad) jp test mov adc jb (bad) push (bad) or rex.WRB rex.B stc je (bad) (bad) js faddp popfq (bad) fwait adc or mov mov mov nop add (bad) push mov (bad) jns rorl scas pop test (bad) std loopne shrl (bad) pop cld push leaveq retq cmpsl out add femms rcl movabs jg or movabs add mov imul rcl fmuls cltd test cltd outsb rorl cmp cmp rorl je retq adcb pushfq (bad) addl cmp pop pop (bad) cwtl mov (bad) sub retq shll (bad) (bad) callq jl mov (bad) mov add jb ror xchg rex.XB (bad) push (bad) sub int3 mov roll out std enterq jae pop cmc in fcmovbe (bad) sarl callq cmp icebp and xchg sarl xchg ror cmp sbbq xchg roll out push rex.B jmpq rorl add outsb ds shll iret or out xchg jmpq lret incl std addb cmp (bad) (bad) jl,pn fisubl addr32 sbb xor rex.WX (bad) jno jnp rex.RB jp in jb enterq rex.B push sub mov mov jle rex.RB pushq (bad) loopne (bad) add or and jns rorl retq or cmpl (bad) testb mov bnd std (bad) lock jrcxz xchg add sarl mov roll mov test scas jl (bad) shll cwtl add mov lret icebp xchg sti or (bad) cli rorl jmpq jp sbb sarl xor (bad) in or rcll scas scas subl imul push pop pop stc add in std out rex.B repz xchg mov rex.B lret fwait roll movsb callq iret leaveq shll push test gs xchg lahf cltd rol sub pop sub mov sbb std ss in or jns (bad) cmpsl (bad) pop cmp adc gs fimull sub (bad) sti pop popfq pop pop pop fld and je retq out (bad) sar stos test rex.WRXB cs sahf pop mov xchg (bad) (bad) jb jae lret sbb sahf mov loop shll rex.W movb je es addr32 test rorl cli mov (bad) mov sbb (bad) repz lret out (bad) mov retq (bad) scas sbb pushq (bad) jrcxz imul rex.WRXB cmp cltd mov test shl and add mov js movsb mov shrb rex.WRB rex.R mov rex.WXB scas hlt jns sar (bad) jno (bad) push xchg rcll (bad) sbb movabs push xor roll (bad) sbb (bad) (bad) xor cmp lock iret mov (bad) add sbb rcrl push je mov xchg pushq sbb outsl cmp test loop sarl stos (bad) pop fs and int decl jno jns xor cmp pushq sbb or cmp or xchg repz test movsl push (bad) pop addl lea mov xchg xchg cmpsb lock rol mov fbld cs shll add (bad) mov (bad) repnz xchg std rorl rex.R cmp fldenv or pushfq js or insb mov rex.WXB insl cltd jnp movabs push xchg popfq bnd (bad) push (bad) jo push pop cmp jrcxz lock mov mov mov outsb rex.WXB (bad) cs xchg mov callq cmc out cltd xlat movsl mov xchg and sub (bad) pop jo jb cmp rex.WR rex.XB shrl sbb repnz mov ffree pushq fcompl adc fisubrl adc (bad) lret fnstcw sub (bad) (bad) add (bad) mov sub mov shl movsb test sub ficoml (bad) mov stos lahf add mov shr xchg outsb lods int3 and cmpsb test pop add in add jo cmp movabs movsb icebp cmp (bad) (bad) (bad) mov scas lret xor xor rex.WRB push shrl loop (bad) or (bad) roll in (bad) sbb rcll movabs movslq rex.RX loope jae pop rex.WRX shrl sub mov or push lea sbb lods out sub andl push rex.WX add lret xor lret popq (bad) cmpsl stos pop push (bad) pop (bad) add addr32 add mov jmpq movsb mov (bad) rex.W sahf jl jrcxz insl data16 (bad) test and (bad) ss insl sbb shll out (bad) ror ja mov (bad) (bad) jl jns repnz (bad) int3 (bad) push (bad) xchg rex.WX in icebp jle rorb xor pushfq lret (bad) (bad) jne cli sbb adc mov (bad) push pushq xchg push (bad) cmpsb xchg pop (bad) sbb sub push xor adc (bad) (bad) jge (bad) pushq sbb (bad) or scas cltd rex.WRX stos (bad) mov mov roll std imul shr (bad) mov mov and pushq idivb pop adc adc push std lock (bad) cmpsb popfq (bad) test adc jbe sbb rex.WR cmp sbb (bad) and (bad) jbe (bad) mov shll sbb movslq push adc imul push fsts repz outsl bnd subb rcrl (bad) sbb sbb fs movsl imul int roll jle xlat rex.RB rex.RX and loope jno jmpq jrcxz xchg clc sahf movabs rex.X xchg sub iret xchg rex.RB ds pop (bad) mov mov xchg sahf sbb xor (bad) mov hlt (bad) sahf rolb out jle outsl loopne sub movabs sbb in (bad) mov addl shrl xor lret cmp cld fs (bad) fcmovbe rex.WRX rol out (bad) dec add shll retq mov sub add leaveq mov adc rex.WX sarl int shrl rex.XB cli sub mov loopne jb sahf shll add lods gs and sub jle xor outsb mov scas push rol mov xchg or stos cmp jmpq jrcxz rex.R sbb (bad) mov mov shll shll out sbb fwait mov out lods push add (bad) out loopne (bad) push and subb icebp lea mov sbb jp shl rcrl and cwtl hlt fdivs cmp (bad) imul and mov test (bad) fcoms cs mov cmp rex.W callq push clc jge jmpq mov and sub fisubrl jno test rorl pop fcomip lods cld rcll sbb mov rex.WXB pop movslq mov enterq jo (bad) roll jmp xor and xchg outsl icebp cmp xchg mov (bad) jle rex.WR repz adc retq enterq (bad) jbe jns jb rorl addr32 (bad) mov loop jg (bad) sti fsubs roll fistp and lock (bad) mov adc (bad) pushq cmp xor (bad) (bad) and mov push bnd (bad) pop (bad) push rex.RXB adc sbb sarl rex.RX fs rex.B jmpq push mov clc rex.RX retq js rex.XB fidiv sbb fwait mov push jp rol mov mov test rex.WX and sbb xor outsl (bad) cs or stc fs fstpt rcrl pop xchg loope inc (bad) imul and (bad) lret sbb lods cmp cli jne pushfq rol mov lea mov callq (bad) in sahf rex.WRX rex.B pop sahf mov jns roll (bad) sbb movabs xchg popfq rcll fdivs shrl fxch add (bad) mov xchg enterq (bad) add and and shll cmpsb rex xchg insb loop je rex.B mov outsl cmp sarl (bad) (bad) rex.R or enterq lods out rex.XB adc movsb rclb (bad) mov (bad) (bad) rcrl psubb int jmpq rex.WXB rex.R mov test or (bad) (bad) (bad) int insl lret sub xor ss fs std outsl loope retq std add or sbb neg or (bad) mov rex.RXB cmc cmp sub rex.B ja fidiv pop movabs push lret cmpsb (bad) rex.RB cmp sub mov (bad) push sbb in loope fcom or rorl lock rex.X mov jns enterq jbe (bad) xor icebp sub shrl lods or rcrl (bad) lret jl vpunpckldq (bad) (bad) (bad) movsl es (bad) fwait sarl xchg incl lods rcll cltd mov (bad) adc push int3 roll add shl fsubrl add movslq js mov (bad) sub sarl repnz (bad) rex.WR pop jns rex iret mov out shl (bad) add rorl (bad) in adc mov out movabs scas rex.W fistpl bnd retq out lret xorl faddl add sub iret sbb jle fisttpl xchg rex.WXB add iret (bad) or (bad) mov cltd lret sahf iret in jmpq gs jb loope mov callq cmpsb lret mov mov push sbb push rcl imul movabs (bad) movslq rex.WRX rex.WX hlt cmp jge (bad) and pop cmp adc lret jrcxz xchg mov cmovae je cmp (bad) (bad) (bad) movabs jp flds jns shrb rex.WB sahf xchg xor pop rex movslq shlb jnp rex.WRXB rex.WR clc jns (bad) mov jrcxz in xor mov (bad) in (bad) shrl mov lret pop xor loope jmp repz idiv sub sub (bad) (bad) push pushfq cmp rol cmpsb xchg lock add (bad) (bad) push or pop outsl cmp insb push (bad) rcll cwtl cmp lahf fdivp and cmp std cltd add jmp lahf xchg roll xchg rex.WRB add cmp movslq in xchg cld xchg ffree rex xchg rex.WRX push icebp pop mulb out cmp mov rex.B xchg pop rcrl fistpll (bad) cld jp (bad) pop push sarl roll mov sub jno out xchg and adc rcll cli jge jne xchg (bad) sub jmpq setle rex.W fwait xchg ds stos scas (bad) rorl jg out or adc repz mov lods pop pop sub adc shll cmc rcr stc cmp frstor lret and rex.RXB adc in pop bnd rolb cmpsl icebp popfq cltd add cwtl and sti xchg sub fs (bad) or rex.WXB or loopne sub (bad) jb pop movabs imul (bad) hlt (bad) je add (bad) rex sarl pop sahf adc mov add pop shr es test (bad) repnz int rex.B rcr lret adc movsb add jbe add std or xor mov pop rex.WXB sub roll jrcxz shr (bad) xor fimull imul retq pushfq rex.WRX cs insb push rex.B rorl jbe add fnstenv rex.RX rclb inc hlt sarb ja adc (bad) (bad) outsb rex rex.WRX ss mov (bad) out cmpsb adc adcl movabs (bad) sti loopne loope rex.WRXB pop fstl xchg stos jns cltd stc push std cld repz fisubl mov insl test movabs push xor gs shrl and xor sub roll and mov pop int3 retq mov sahf clc add movabs jl mov rex.WXB (bad) out mov mov rex.RXB mov iret (bad) cltd (bad) jmpq cmp mov rex.WXB xor and loopne sub in roll (bad) (bad) lea sbb (bad) jo (bad) fldt movslq imul retq mov rol (bad) pushq sbb or (bad) rcr fidivr out adcl rex.WRXB rex.B xor retq rex.WRB (bad) fisttpll lret adc pop sub lcall mov cld out xchg push int out int3 pop (bad) (bad) fucom sarl movsl sbb xchg test cmp mov data16 mov xorl loope pushq mov pop cltd rcr xchg push sbb mov sbb add pushfq adc cmp rcrl cmpsb mov mov imul cmp rorl clc add add (bad) or data16 (bad) rex.WXB out (bad) sbb lret shrl xchg mov sar leaveq jmpq cltd sub rex.WX and scas addl (bad) (bad) mov mov push (bad) shl jbe je push sub pop int3 ffreep cmp jnp (bad) loop imul mov (bad) cli and movsl jnp and (bad) sub xchg (bad) and rorb sub mov cwtl xchg and rcrl fldl (bad) mov sub (bad) (bad) insb jmp jo xor ror push out in int mov rex.WRX fwait push sub out (bad) jo sbb ja (bad) outsb cmp (bad) mov mov xor roll and cmp popfq in movsl rol mov femms rex.RXB stos add test pop shrl sub rex.WXB (bad) (bad) in and mov mov and jns add rex pop int rcll mov scas pushfq movb (bad) psubsw xor sub enterq adc jo imul stos xor rcrl rcl sub sar (bad) out test rex.RX or imul (bad) outsb and xlat shrl adc push shll sbb jae jnp jns pop jo sbb adc rex.XB jns (bad) mov jl rex.RX rex.WR jmpq rolb (bad) pushq rex.W rorl clc mov jmp xchg mul sub movb movabs cmpsl cld (bad) rclb mov sahf pop shrl adc rex data16 addb sarl in roll jle mov (bad) mov or (bad) (bad) pop lahf retq rex.RX jle fwait mov test mov and mov push xor or (bad) movabs mov pushq lret sbb lea rorl fildl sbb adc mov fistpl add add sub shrl jb jle imul (bad) (bad) rex.RXB enterq addr32 rcll lret add sbb sub sub sarl pushq jae pop (bad) xchg out fdivs or rol cli cs or in (bad) lock lods fstps leaveq mov movabs fisttpl add rex.WX (bad) shr cmp hlt sub rorl (bad) (bad) (bad) mov lret adc mov xor incl jns (bad) jrcxz jne (bad) sarl mov sbb movabs pop cmp push xor retq shrl shlb movabs rcll cld insl rcr ja sahf jne subl and rcl (bad) popfq jle and cli rex.WR (bad) shr retq xlat fadd sub insl lret scas shll adc lods adc rcrl std lahf es sahf sbb rex.B data16 repz or mov int jbe mov roll cmp lahf (bad) xchg loope add jne test imul rex.RX sbb (bad) (bad) xsha256 cmpsb push in jns jge (bad) out movabs push pop popfq (bad) rcll jmpq lret sub mov test ja rex.X rex.WRXB shl push sbb jno lahf fldcw jge rex.WB rex.RX (bad) (bad) adc repnz imul orl fidivr rcll out movabs mov (bad) (bad) rorl popfq fsubs mov int3 rex.B rex.WB scas (bad) mov adc pop sarl outsl andl push lret (bad) mov (bad) push outsb push lret movslq (bad) jae jge (bad) jbe (bad) sbb roll sbb bnd push xchg (bad) pushfq sbb xor imul leaveq push rcll jg loopel (bad) mov insb retq xchg ds lret (bad) push mov (bad) rex.WX repz sbb lret rex.WRXB not loopne (bad) movslq and fwait nop repnz ror mov (bad) (bad) clc movb (bad) rex.WRB std sub mov xchg rcll fstp (bad) sub pop stos (bad) cmp xor iret add adc je sub (bad) jmpq sbb outsb movabs and iret (bad) insl nop sub jbe sub cmp test shr fs roll push (bad) leaveq (bad) mov in push (bad) rex.WRX jbe add scas cmpsq add imul or push jge popfq add cld adc cmp (bad) jbe int3 repnz clc rex.RB (bad) mov or adc adc shrb pushq jl (bad) and xor movslq mov out cmp cmpsb rex.RXB mov test stos jl data16 rorl retq adc xchg (bad) js (bad) out leaveq xor fidivrl or cwtl rex.XB fwait cmc ja cmpsl jns clc sbb push test adc jb mov lods sub sbb (bad) adc adc fcmovbe enterq (bad) in movb push cmpsb jp ja and push (bad) rcl pop xchg (bad) std xchg mov callq xor int3 push sub rex.WXB xor jbe and pop nop iret sbb test (bad) push in rcll (bad) jle (bad) inc int3 cmpsl mov jae sbb (bad) (bad) xchg (bad) cld roll (bad) pushq sub pop test rol data16 test adc mov cmpsl fsts fnsave (bad) (bad) jno in rex.WXB xchg (bad) cld ds callq rex.WRB mov out movabs fadd rex.RB ss jne sarl mov jns movabs sarl fldt rex.WXB (bad) (bad) mov insl in sahf and rcrl pop mov rex.XB mov insb in (bad) repz iret roll (bad) int testb and jge fistpl repnz mov rolb addl lods imul (bad) push retq fisttpll xor (bad) cmp jns shrl stos rex.WRXB adc sub fstps sti cltd (bad) stc mov mov sbb shll xchg (bad) (bad) repz (bad) lock pushfq mov (bad) sahf cmp cmp leaveq push rcll rex.WRXB mov movsb jo pushfq hlt (bad) jnp rolb (bad) cmpsl rol fsubrs repnz ja retq movslq (bad) rol stc fistpl mov rex.WX rex.RB rex.XB sbb movsl js (bad) (bad) rcll shrl retq insb mov scas je or sbb lret iret jns sarl push jl adc sar cltd (bad) push xor (bad) sarl push movabs push test popfq jrcxz (bad) jns add rex.WB add (bad) int3 mov xor (bad) sbb shll jno sbb lret (bad) rex.WRX xor mov push xor fstps adc rolb add xor ja jo pop test pushq mov pop leaveq pop sar fist rex.RB xor int3 xor insl rcrl push pop xchg mov data16 nop rcl (bad) out jl rex.RX icebp icebp (bad) scas cmp add repz mov rex.RX cmp (bad) and lret shrl push rcll lods in retq roll enterq scas sahf cmpsl fild pop jle gs repnz push and mov pop clc cmpsl (bad) repz faddp retw (bad) icebp ficoml rex.WR adc incl sub cmp push negl test roll push loope (bad) or lea shll shrl xchg sub add movabs jae sub mov test pop fwait rcll lahf scas cmpsb jle pop insb pop (bad) (bad) rex.WR nop sub adc fucom (bad) xchg and popfq (bad) cmpsb add pop (bad) test mov mov iret sub outsl cmc cmp (bad) mov loope xchg loopne (bad) repnz scas mov movabs pushq out cltd notl xor lret pushq popfq or jnp ss and rcl (bad) add add cmp lock repnz rex.R jle or sbb sub lea icebp (bad) (bad) adc int3 rex.B repnz rex.B jp jo (bad) rex.WRXB rex.R sbb std xor rex.B rex.B rex.RXB addr32 fld or (bad) fs sti xor xor notl imul mov or in (bad) sarl push test rex.X repnz (bad) lahf and std test (bad) xor sub shll popq adc cmp or out div cmp std rcrl movabs rex.XB stos cltd sbb (bad) mov pop lret mov mov jbe iret cmp or rex.W loope mov push add rex.WRX rex.WX fistp rex.RB xchg retq sub (bad) mov (bad) std (bad) int add mov and jo movabs popfq cmpsl test (bad) jp sub sub lods rol and (bad) sbb ror ljmp jle rcrb rol rex.XB ror pop rex.WB jo,pn test push lea cmp mov sub jns and rcr xor ss adc adc scas mov out jbe outsl jmpq add add callq iret jge push and xchg mov rex.WRXB sbb (bad) cld mov push lods rex.RXB (bad) push adc popfq scas fldcw out (bad) pop and lahf jge pop (bad) (bad) mov (bad) (bad) add cmp test scas mov fbld and rclb cmp rcrl mov fs mov mov cmp (bad) movabs (bad) lea sub je lock (bad) mov jbe test sbb xchg rex.WRXB lock and mov (bad) sub push popq cmp sbb cmp (bad) pop pop cwtl movslq cmp pop pushq movabs movabs or icebp movsb sbb pushq jmp lret scas pop iret mov jmp cmpsl and jae xchg adc mov movsb fistl lret jmp xchg xchg adc pushfq (bad) repz movsl addr32 xchg std test test xor fcmovnb movabs leaveq jmpq xor (bad) push (bad) mov xchg lahf cli xorb mov lods xchg xchg rex.WX sbb (bad) test int3 xchg movabs xchg outsb (bad) mov sti lahf loopne out fdivs cmpsl rex.W out jbe sub ror mov pop (bad) adc rex.WR mov lods pop (bad) xchg lods adcb xchg movb rex mov imul add xchg rex.W pop sub pop sub adc fwait pop flds scas jmpq rex.WB test (bad) mov insl and (bad) repnz mov (bad) outsl (bad) sub pop push movabs pushfq test (bad) lock mov in mov (bad) mov mov loope jo data16 out out out out add test fidivrl outsl mov movsl leaveq in frstor jmpq xchg pushq repnz cmc testb sahf (bad) xchg fcmove fcomps adc sub cmp icebp mov cmp cmpsb insl push jae loop ja adc pop mov shr negb jne xchg mov lods sub cli pushq (bad) cmp xchg fisttp stc mov cmpsl in rex.RXB pop mov rorb scas mov test jb adc cli xchg out stos (bad) or mov adc cmc xchg in adc cld loope rcl scas insb mov jl jrcxz pop xorb push movabs cld jae test jne ja sti scas xchg jno retq rex.WRB fmul xchg out retq push jge rex.WRX movabs in or xor add repnz mov movabs lret jns xchg movsl subl loopne xchg jp cwtl movabs ja lock rex.X pushq pushfq test adcl sub out loope scas cmp cs pushq mov retq fistl fnstenv add jmpq (bad) (bad) or enterq mov add rex.R sub adc xchg icebp cmc repnz pop movabs loope leaveq stc cld fnstenv adcl out popfq hlt rcll rex.RB repz pop loope cmp in in xchg movabs push push xchg pop repnz movabs add jno cmp add xchg (bad) xchg sub add xchg xchg in xchg add and jb jmpq rex.WRB adc jl addl mov cld lods in (bad) rcl lods in add (bad) out jrcxz cmc out int3 std out icebp lret rex.RB (bad) rex.WRB xchg sahf xor and (bad) mov and and sbbl jno and jg clc (bad) in jno retq jmp ja or jns mov cmc test pop (bad) rex.R not jrcxz leaveq out test movabs (bad) in and in xchg mov (bad) test (bad) icebp (bad) out xchg sbbl pop (bad) cmc popfq xchg xchg movslq out in xchg xchg adc xchg mov pop mov adc insl in jrcxz sbb (bad) inc repnz fstps pushq rex.B (bad) retq addl or or adc loope in cwtl rcll jno xchg out pop retq jmp cwtl xor int3 in xchg (bad) rex.B jge (bad) insl js test (bad) jno xor (bad) callq push and lret idivb or add xchg sub and (bad) mov jle add add int3 fstps sahf xor pop rex.WR rex.WB add leaveq sbb add mov or adc jb test push in rex.WXB rex.B or repz add xchg mov movabs adc loop int (bad) xor gs cmpsb add hlt int or orl mov movabs (bad) decb rex.WRX in (bad) nop add xorl adc lea mov jns sub cmp mov add lock test and cmp std mov xchg repnz mov and and mov movabs mov leaveq rex.WB std xchg jns rex.WR cmp (bad) and out pop in adc in retq jrcxz xor mov movsb (bad) jno rex.WRB xor push and (bad) mov mov jrcxz cmp movabs mov imul rex.RX push mov add shlq xor out cmp fpatan shl or (bad) in cmp jmpq xchg mov out gs rex.WB loope xchg pop adc pushq and rex.RB cmp mov leaveq ds cmp rex.WX jmpq pop jo decb sbb and loope imul jns leaveq clc pop rex.B xor jmpq fstp push and mov (bad) rcl (bad) fmul stos (bad) mov sub rex.W mov rex xchg rex.WXB shll mov jns faddl (bad) jge rex.RXB test jns adc rex.B incb jl add stc push (bad) sub lahf leaveq mov push pushq jge mov (bad) decb lods xor test xor sub in xor or xor fs test rex.B fnstenv or xor sub icebp and jns push and jo sub xchg stc (bad) (bad) movabs loope rex.WRB imul sub test rex.WB and cld loope pop xor rex.WB cmp insl movabs (bad) mov (bad) (bad) lods push or and adc add or add vshufps and rex.WXB push andl rex.WB xor add test pop enterq loope es and mov data16 push enterq jns add push xchg add sub stc and loope rex.WB leaveq sub cwtl jns stc icebp mov cmpsl jno cmp rorl push jae and lods out (bad) icebp (bad) (bad) jns xor sbb retq or xor sbb lods jmp push sbb stc (bad) (bad) rex.WB (bad) mov pushq movabs mov scas cmp sub movabs xor sbb mov mov jb jns rorl sbb (bad) loope (bad) stos adc (bad) xor or adc (bad) in xor fsts jb nop movabs movslq in or push rex.XB fwait in (bad) pushfq sbb lret iret cmpsl push int loope (bad) movabs hlt add xchg (bad) scas int push rex.WRX push adcb je sahf out push hlt repnz or xchg (bad) push test int3 (bad) insl in iret mov cmp cmc fwait hlt clc in mov cmp push mov movsl decl pushq stc fdivs in cmpsl std cld mov icebp (bad) hlt std enterq stc add push clc movabs leaveq idivl insl icebp adc sbb rex.WX cld rex.WB jae push hlt xchg icebp pop mov repnz add movslq push shlb mov loope pop xchg or xchg loope and xor pop add push int xchg jle jmpq mov leaveq int3 in and mov or loope mov jge (bad) cmc rex.WX cmp push (bad) lret cltd (bad) adc imul icebp (bad) rex.WB movsl testl (bad) icebp and add push imul xchg mov fs jae (bad) rex.WRB sti xchg dec rol icebp ror and xor add push (bad) lret mov rol jmp (bad) hlt sbb adc add test int3 xchg int3 xchg mov sub fs scas js lods jns hlt (bad) int leaveq fldt add hlt outsb rex.WB out loope movsl add lret lret add rex.WB jno xchg rex.W xchg (bad) fld1 xchg push (bad) ss pushq loope incb and xor add (bad) lret mov jne xor vmovsldup rex.WXB and cmp mov xchg jmpq or data16 jns loope sbb icebp leaveq loope iret rcll sti and xor in cmc mov (bad) lret xchg js cmc out xor in icebp sbb scas push mov pop (bad) add int3 std fucom enterq jns scas mov sarl cmp movsl movabs and add jg cmp fldt movabs stc leaveq mov (bad) xchg test jae int sbb add adc fsubs icebp jne fnstsw addl mov movsl repnz divb repz insl cld xchg (bad) sbb push sbb leaveq movsl adc (bad) adc mov (bad) lret rex.B rex.WR repz idivl loope (bad) movabs mov in pop rex.R (bad) sbb cmc push in add or or rex.WRB lea (bad) add int3 out insl loope jno (bad) cmp test int3 xchg mov (bad) lret (bad) js repnz add jno fdivp cld xchg xor and leaveq movsl icebp clc xchg rex.X (bad) mull jl adcl je iret rex.W in in movsl (bad) mov icebp push mov sbb or pop test cmpsb sub std lret je movabs and rex.R xchg repz loope rolb cltd movabs push rex.WB rex.WX data16 or jg mov xor mov adc mov xchg addr32 icebp push (bad) xchg movsl hlt mov jge add rex.WB je test mov jge push out mov add rcl (bad) and xor lret push vshufpd or (bad) (bad) fs nop (bad) (bad) icebp (bad) std sub and test (bad) adc sbb xchg (bad) pop stc or or cmpsl pop pushfq movsl sbb movsl add xor (bad) stc cld lock sub testb leaveq and xor add rorb cmp hlt jno loope rex.WRB push push cmpsl sbb adc mov mov retq xchg mov (bad) mov sti leaveq in rex.WXB rex.RB rclb rex.RB movsl cmp cli mov xlat in sarl jmp sub int xchg jrcxz mov jbe mov movabs xchg (bad) pop (bad) and xor jle jrcxz pushq mov (bad) push mov test cmp pop mov rex.WRB jno clc (bad) mov push in (bad) stc pop jle icebp int3 mov mov test mov cmpsb rex.WRB add icebp movsl rorb (bad) (bad) outsl repz mov repz in mov add jnp lods (bad) int3 leaveq in jns jne test rorb sub in cld sbb mov xchg or cwtl leaveq sahf xchg icebp int3 rex.RB adc or int3 movabs cltd scas rex.XB ja mov rex.WB sar sar and ja cmc add movabs cld insb lahf push or mov add leaveq movsl (bad) (bad) movsb add movsl or jrcxz fwait notb adcl rex.RX sbb rex.RB movabs icebp in push mov (bad) adc loop push clc mov xchg add fcomip movabs rex.R leaveq pop loope rex.WR add leaveq hlt cli test test rcll movsb xchg hlt cmpsb (bad) (bad) in (bad) mov cld in adc (bad) imul xor clc cld xchg (bad) icebp movsl (bad) clc mov imul in clc mov lret movsl mov icebp std (bad) (bad) mull int3 and lret test rex.WR (bad) jrcxz idiv loop (bad) mov pop xchg xlat leaveq lods int (bad) int3 mov mov loope cmc rorl mov pop mov in out cmc mov rex.WRX rex.XB flds (bad) hlt test mov rol movabs xchg je sub push jge push (bad) int add or xor sub cmc lret mov sbbl icebp in mov callq (bad) or lea rex.WB icebp addl jns jp add fsts jno cmc sbb pop popfq gs (bad) (bad) int3 sub movslq stc jrcxz cmpsb in xor andl loope andl mov and movslq enterq fsubs add (bad) lret (bad) cmpb mov sti in mov xrelease push sbbl jne cmc (bad) rex.RXB sub xchg not gs jmpq adc xlat popfq or fildl icebp push int3 cld movsl leaveq test repz hlt add out int3 mov cmc pop lea test int3 rex.R std (bad) cmp (bad) pop rex.WRX (bad) mov adc movabs (bad) mov xor cltd movabs sbb (bad) (bad) sti int3 stc (bad) movabs movsb int3 popfq std (bad) (bad) leaveq leaveq push nop xchg and callq test (bad) scas jmpq cli jns int3 pop iret std icebp (bad) int adc (bad) xchg ja stos cltd movsl sbb pop int3 (bad) push popfq loope int cmc int3 ficompl jmpq jne mov callq (bad) loope lods add shrb rex.WR pop test add shll (bad) int int3 mov int test leaveq test stc je jne popfq (bad) (bad) (bad) sbb or pop in lret adc (bad) sub mov mov and stc inc (bad) rex.WB pop (bad) xchg lods push test addr32 add jne int int3 mov pop test cmc jno xchg (bad) hlt rex.B repnz xor add push int3 leaveq movabs (bad) (bad) jno in and div add leaveq xor add xchg sbb or fcmove mov adc mov and rex.XB repz xor sbb fmuls enterq (bad) mov adc int3 insl fsubl int3 jns fmul movslq lret stc xor add rol mov int3 xor test (bad) std adc imul repz rex rex.RB movabs sbb ja rex.B pushfq cmp in jg jrcxz and rcrl cmp leaveq in fcmovnbe sti test sbb mov xchg jbe cmc adc subl jae xor int3 repz (bad) jno cmp or rex.WB (bad) retq xchg leaveq stc push stc cmp jmpq xchg push (bad) iret movsl clc rex.WB xchg cmc movabs cmpl add xchg (bad) (bad) int3 xchg (bad) mov xor jno (bad) sub xchg loope push adc repnz pop xor or or (bad) push retq sahf xor and jle shlb fcomps js adc cmc adc loope (bad) xchg (bad) int3 xor int int3 adc out (bad) (bad) test jo cmc in adc loope mov xchg int sbb lea and cld shr rex.WXB cltd frstor sub icebp mov pop leaveq rex.WXB xor sbb and jae rex.W jns or pushq movslq adc in (bad) stos stos in xor sub jg rex.WB je hlt movsl int (bad) std es int leaveq mov movsl or rex.R push mov int3 popfq int gs std je rex.R int3 ror and and (bad) (bad) int3 leaveq loopne (bad) rex.WRB adc cmc (bad) rex.B and test in sub movabs outsb jmpq negb xor or jmpq scas leaveq push mov or int and jne mov test push xchg and loope out and xchg push in (bad) xchg lock (bad) repz icebp sub and jl test int int3 add leaveq jg (bad) (bad) sti loope out sub mov pop cltd loope movabs callq mov push adc mov cmp push (bad) movslq hlt push movsl mov fild retq and add mov std loope add adc jl and mov xchg (bad) loope (bad) pushq imul (bad) jns and sbb push leaveq sti test push sub sub (bad) xchg movsb (bad) mov jns movsb int3 stc retq loope scas push int3 int3 retq test mov fmul cmpsb (bad) xchg mov int3 mov (bad) adc (bad) icebp andb leaveq xchg push cld or adc int3 rex.B or cmc pop (bad) add jns int3 pop rex.WRXB sbb lret int3 or leaveq pushq gs (bad) repz lret imul xor jmpq (bad) cltd icebp (bad) lret rex.WX rol imul adc in callq (bad) rex.RB or popfq out add cmc ja test (bad) xchg insl int mov push imul sbb (bad) mov popfq std testl rex.WB mov (bad) leaveq imul (bad) rex.WXB xchg jmpq rex.WB (bad) (bad) int3 xor pushq addr32 movabs rex.WXB stc (bad) cmp cmc rex.RXB mov (bad) xchg jmpq int jbe out mov (bad) mov add cmp jne divb push mov xchg jrcxz movb imul repz mov add (bad) mov and int3 adc (bad) lods add xchg xchg cmc and int rex.WB jle fistpll leaveq xor (bad) iret pop rex.R je (bad) (bad) lods (bad) mov enterq (bad) mov jne rex.B in movsl rex.B (bad) jnp sub movsl push pushfq popfq movabs (bad) std fisttp imul fyl2x mov addb cmp cmc movsb sbb xchg in cmpsl jns rex.WB xchg cli pop xor test add jrcxz (bad) xchg rex.WX test leaveq rex.RB jge test (bad) movslq or xchg stc push fstps sbb out cli test int3 lock int3 mov lock xor jbe idivb (bad) movslq int3 jrcxz xor pop add callq std and sbbb adc push mov leaveq icebp and lods imul int3 sbb lret xchg andl cld or xchg rex.RXB mov movb fs jno in cmc movslq xor fs rex.WRXB mov int push hlt int3 fimul jmpq out mov jrcxz jp add jae cltd adc jb callq (bad) test (bad) gs test int push cmc andl (bad) mov sbb mov clc sub jae and rex.WR retq jae inc add in mov insl in je (bad) xchg cltd adc mov stc jns (bad) int3 and add mov (bad) pushfq jp hlt addr32 gs adc rex.WRXB push mov ror jl jne mov (bad) out jno sar lret cwtl notl sub icebp lahf (bad) movabs pop mov movabs clc gs add stc pushq frstors sbb in stc add adc rex.WB je jrcxz add xadd (bad) movabs out cmc mov gs cmc (bad) in shl int jae int3 (bad) cmc jmpq mov sbb rex.B (bad) jrcxz cld add rex.WB fs mov divb xor jp in repz out movabs mov xor xchg stc cmpsl mov rex.RXB icebp (bad) push sub pushq repnz xchg (bad) incl cltd loope jns loop (bad) mov js sbb movabs movabs xchg cmc jge mov test repnz mov jae and add mov mov int3 add (bad) int3 imul popfq iret popfw int3 (bad) rex.RXB retq loope je and mov sub js jge fwait xchg cmpsb int3 lods fldcw mov std pop (bad) xor xchg xchg enterq cld clc (bad) xchg std loopne xor or (bad) int int3 lods mov cmp mov pop cmp sbb test sbb jae jrcxz je movslq lret movsl std mov jns (bad) out leaveq xor xchg and out addl cld and and pop pop leaveq push stc mov insl pop sbb (bad) leaveq xchg test cld jne test and mov cmp test adc sar and xor (bad) adcl movsl lret (bad) lret mov (bad) sbb sbb in sub xchg stc movabs cmc fcomps mov push (bad) rex.WRX rex.RX mov cmp (bad) imul int3 in (bad) in add push push sub (bad) (bad) jns out mov (bad) (bad) repz int3 rex.B popfq loope push leaveq jns xor push std stc js movabs (bad) mov mov xor fs jmp mov int jle lahf (bad) rex.X rex.B rex.WR xor or xchg rex.B data16 jno cltd jno (bad) hlt (bad) jo addr32 outsb hlt jge jnp icebp out cmp rex.WR (bad) (bad) loope mov movabs sarl popfq enterq insl shr movabs int fwait gs jno xchg in int3 jno or movsl (bad) cld std sub sbb pushq jrcxz xorl and pushfq imul test sub (bad) mov mov in stc rorb test mov xchg xchg xor cmp int3 cld in int3 add xchg (bad) mov (bad) xchg xchg pushq push adc or xchg mov jp jge out or mov pushq icebp add rex.WR mov add iret int3 lods (bad) mov loope int3 cmp pushfq jmpq vpsrlq (bad) or (bad) adc add imul mov (bad) cltd js rex.WB lock adc adc in push (bad) stc (bad) sub mov or rcll popfq xchg xchg jl je (bad) jrcxz int push fnstsw ds jl pop push and mov icebp adc cld popfq (bad) cltd out push pushfq rex.R movsl movabs cmp lret xchg push (bad) mov mov (bad) callq shr loop sar out stos icebp add (bad) xchg leaveq out movsl sbb jrcxz sbb add adc test flds movsb int stc out (bad) stc mov mov push mov in stos test mov rex.WRX jbe stc (bad) (bad) pop test cld (bad) fdivrl jns icebp (bad) mov int mov or clc loope (bad) mov leaveq add (bad) je cmp fsubs pop mov push mov sbb loope jne gs (bad) icebp sahf rex.WB add lret out in icebp repnz push mov pushq in mov rorl and xchg xchg xchg mov xchg rex.WX in icebp lret scas or mov stos outsl in rex.XB xchg andl movabs out mov (bad) scas (bad) fdivl jnp icebp out rex.W rex.WR jp lea cmc (bad) xchg ss xor callq (bad) int int3 mov icebp or icebp in pushq lods stc xchg cltd out (bad) popfq mov lret add (bad) xor iret (bad) and lret sub cld lahf rol lret jmpq leaveq xchg adc (bad) imul movsl and data16 mov (bad) stc cld cli stc leaveq push adc jne movsl icebp leaveq xor lahf leaveq lret (bad) (bad) or int in int3 adc sbbl repz rex.WRXB xchg jbe movabs callq rex.B jne (bad) movsl (bad) cld jmp fs jb adc (bad) and jo loope cltd (bad) jmpq ja or addr32 repz cmp addr32 pop and rcll and notb and scas loop mov int3 addr32 rex.WRB cmc sbb jno enterq (bad) cmp mov cmp jp loope (bad) xchg or jmpq cmc xchg imul in repnz cld xchg mov fildll popfq mul (bad) mov cmpsb stc cwtl cmp cmc rex pop leaveq rex.WRX and (bad) (bad) std idiv in (bad) rex.WB callq test xchg xchg (bad) sbb lret xchg jp stc cmpl (bad) in movslq clc push popfq (bad) js pop (bad) mov xor xchg adc mov mov (bad) (bad) repz in (bad) mov jrcxz nop add test mov js cmp fwait xchg xor cld pushfq rex.B in clc mov or push cmc mov add mov fildl sub lock in movb popfq push rex.WRXB rex.WX icebp test rex.WR sbb test lods or stc rex.WRXB (bad) xchg mov movabs (bad) je (bad) iret (bad) pop add mov xor movabs movsb xchg (bad) enterq gs cli add (bad) mov cmpsb sub cmpsb (bad) add cmp push lock mov mov rex.WRB rex.X gs mov icebp out je or and xchg int3 leaveq and out xor cmpl cli jae cltd in iret push out xor mov std test in loop,pt mov lret mov adc loop mov popfq and subb lods loope fwait in int int3 lock imull jb rex.WXB lret loope rex.R rex.WRB and in mov cld sub loope jne rolb loope cld shlb xor pop xor xchg scas pop leaveq pop mov (bad) push rorl mov mov rex.B rex.WR cltd mov jge loope stos rex.R add movabs mov cmpsl (bad) leaveq rcrl cmc sub mov jrcxz rex.WRXB fwait mulb fnstenv and (bad) (bad) stos int mov leaveq xor flds xchg in test loopne rex.B rex.B imul rex.RXB jno (bad) adcl movabs movl xchg xchg (bad) rex.R sbb jg test (bad) movabs cmp hlt leaveq xchg jb cmc icebp rex.WB and lret cmc jb or test xchg stc (bad) xchg stc or stc (bad) addr32 mov repz lcall jbe movsl icebp movslq in lock pop mov mov icebp out je add or add roll (bad) jmpq rex.WXB icebp movsl and mov add xchg (bad) sti rex.WRB scas rex.WRB icebp out add lret ja cld cld add fs cld enterq jae rex.B xchg rex.WRX (bad) push loope mov mov out and cltd xchg repz xchg rcl ja movsl ror (bad) push add (bad) and lea leaveq rex.X push mov ficompl jno mov mov int int3 retq push lret vandnpd in fstps mov int fstps cld pushfq movsl rex mov movabs in xor callq (bad) xchg push or jge xchg jle (bad) ja or mov (bad) xor fmulp xchg addr32 movslq mov leaveq in leaveq imul (bad) mov xor and add rex.RX hlt je (bad) (bad) (bad) (bad) lea rex.WRXB rex.X out cli jns in out movsl xchg (bad) movabs jno int3 rex.WR lock (bad) cmc (bad) loope (bad) jmp sub sub jb cmc stc rex.W jrcxz push (bad) int pop jbe (bad) mov adc jno je jo rex.RB fs sbb or and lahf adc test mov xchg hlt xchg popfq sbb leaveq test movabs cmp cmp int rex.WR std ljmp gs fwait in mov repz (bad) mov xchg pop xchg movabs mov mov cltd cld or add sbb jno sub insl insb xchg xchg sbb fs mov std xor jno jae insl mov ss andnps lret (bad) pop rex.B movabs rex.WRB xor sub rex.WR adc (bad) es and leaveq cmpsl (bad) icebp rex.WR xor rex.RB (bad) add mov cli cld imul or cmp fnsave imul jrcxz out push ljmp cmp rex.B jno icebp icebp test in movsl (bad) ror in int3 and pop mov xor stc mov fwait cld xor mov adc xchg jns loop xchg in xchg (bad) leaveq (bad) movabs mov mov adc jbe jbe xor mov leaveq mov fwait xchg add pop mov scas in sbb cli mov mov int3 fldcw rex.R jne and cmc (bad) clc rcll adc jns sbb (bad) rex.WRXB mov (bad) xor xchg repz lock (bad) pop sub test hlt add (bad) mov and rex.B lahf jbe callq cmc rex.RXB or pop sub sahf and adc (bad) int int3 (bad) or (bad) jp stc cmp gs (bad) add jae push add cmp jl xor pop jno adc (bad) pop cmp (bad) je in movabs mov jrcxz or pop jrcxz rex.WXB (bad) (bad) fldl (bad) xor callq fild pop sub xor out and xor pop mov mov icebp out rex.WRB cwtl jae xchg xchg mov rex.RB adc stc xchg jnp out out (bad) jnp cmc jo or sub push movabs movsl and out movabs cmc rex.WRX out movabs in icebp rex.WR test rex.WRB mov movslq mov jno cmc callq ja jp mov and lock rex.XB (bad) movabs movabs rex.WR repnz jmpq in sub int3 cmc add xchg jp icebp jmp sbb ror mov and rcrl rex.RXB int3 or adc gs cmp (bad) in (bad) movsl rcrw repz sar and (bad) xor add pop (bad) jl lock xor imul jmpq jbe push (bad) rex.WX movabs jge leaveq rex.WRB popfq int xchg int3 pop fs out jge xor out rex.R rex.XB leaveq shll icebp shll add jb int3 adc xchg jae (bad) sti (bad) mov rex.WRB rex.RX add leaveq movsl std icebp xchg (bad) mov shll test rex.X rex.R int3 cmc out or stc ss fucomp jne sub push push cmc leaveq mov popfq (bad) cld stos sbb jae mov cmc mov xchg jne (bad) mov mov sbb fcomip callq jmpq push jno int mov or lret adc callq (bad) jnp push test sahf (bad) (bad) int3 in cmc (bad) push loope in popfq (bad) (bad) insb loope int push idiv xor mov repz notl mov mov xchg xchg mov adc scas jmpq mov test adc icebp icebp bswap jno (bad) cmpsb int add cmc xor rex.W cs sub orl decl scas sub cmc stc cmp icebp out clc (bad) (bad) callq setno hlt rex.WRB repz or mov xor callq (bad) stc cmp mov hlt retq icebp jae push jrcxz test and icebp andl in (bad) xor cmpsl (bad) adc out leaveq (bad) pushq adc and adc (bad) mov xchg imul hlt (bad) je jrcxz test popfq or or iret sub icebp icebp (bad) cltd or rex.WRX xchg movabs icebp xorl push cmpsb (bad) or rex.WRB cltd subl (bad) add clc xor sub or xchg icebp fldl2t pop leaveq (bad) sub cli rex.WXB (bad) add fdivr std repnz push rex.WX icebp (bad) loope xchg in movabs loope insl in add cltd leaveq (bad) sub and add mov lods mov popfq and jae jmpq sbbl stos adc mov lods pop (bad) and xchg icebp cltd cmc (bad) rex.WR hlt push and stc cltd mov icebp test push sbb rex.WB mov adc xlat (bad) popfq and rex.RB lea rex.WRB iret add cmc rex.RX cmpsb lret rex.WX pushq test sti mov rex rex.WRB rex.WRB add (bad) cmpsb and movsb rex.WR (bad) push sbb lods push mov test push push gs xchg pushq test mov jno test or lret (bad) mov pushfq (bad) sbb cmpl leaveq and rex.WRX std push rex movsl (bad) retq xchg xchg lret stc stc add jmpq xor adc cmc loope (bad) adc rex.B lock add or leaveq pushq pushq or jrcxz fwait negl rex.XB (bad) (bad) movsl add and sti xor cmc rex.WRX test movsl (bad) jnp leaveq jl (bad) insl xchg mov xor movslq or xchg push rex.WB pop test cld mov jno add loope (bad) push jno in mov (bad) sbb xchg repz in cmp cs sar int3 jns jbe (bad) push jae add icebp js push or callq add out push jno adc pushq push lods mov in push rex.WR repz popfq scas xchg xchg push insl mov add popfq (bad) (bad) (bad) jmpq in test movslq movabs xor insb rex.B xlat ja stos sahf rex.WR gs icebp mov idivb xchg (bad) sbb (bad) xor rex.WR mov push sarl rex.WR leaveq xchg adc cmc leaveq sub xchg movsl int3 cmp js lret mov cltd xor mov (bad) xor mulb mov cmc mov mov xor rex.WRXB push int3 test mov cmc out loope mov xchg callq rex.WB push out movsl movabs mov mov push xor icebp mov rex.RXB pop (bad) int addr32 mov lret xchg and repnz rorb adc addr32 movsb (bad) callq push addr32 mov (bad) add out fldl fmuls sub mov mov jl rex.B adc (bad) mov (bad) addr32 mov hlt movabs (bad) ds (bad) and lret pop xlat or movslq xchg fld int ficompl in int cmc mov repnz mov lret add cmp repz rcll leaveq rex.WB xchg add sub icebp mov xor sbb xchg (bad) cmc shl movabs mov (bad) icebp sti (bad) ss lea cmp in sub in test sbb add in and or std adc jns jmpq mov rex.WRB icebp rorb jno fwait jnp pop sbb mov push xor mov out vpsubq jmpq jge flds add popfq in imul rex.WRB pop jae retq xorl (bad) rex.WR loopne cltd (bad) enterq cmc (bad) stc lahf (bad) stc cld mov rex.WXB jne imul xchg out test cmp leaveq mov int xchg int3 pop xor or fnstenv scas xchg add loope sub pop callq ja xchg and rex.WRB or cld ror and cltd push rex.WR (bad) mov pop std cmc (bad) hlt divb xchg sub data16 xchg movsl xor movabs sub and scas leaveq xor rex.B push rex.XB cld mov xchg mov cmc xor callq loop mov stc int3 or stos in jge in lods or or movabs movabs fstpl jne cmpsb rex.WRB lods (bad) in pop rex.WB or or rex.WB xchg xchg sub rex.RB pushfq (bad) int3 push cltd add (bad) add sahf jge push rex.WRB xor or xchg mov leaveq stos fisttpll orl icebp (bad) std and cmp cmp and or mov lock in andl jne rex.WR sbb lcall leaveq xchg add in pushq adc cld test pushfq rex.B jmpq mov leaveq pop fstps mov (bad) (bad) xchg push push sahf std out movsl fwait xchg mov rex.XB and subl xchg movabs in jae jg in stc cmc rex.XB or sahf rex.XB rex.RXB pop orb out je add int pop (bad) test jns add rex.X or (bad) insl fnstcw stc ja add cltd addr32 add pop cmpsb sub mov adc sbb xchg rorl mov lods rex.W gs (bad) in pop jmpq sbb (bad) out xchg cld je or and and ss scas in icebp loope sbb insl cmpsl mov xor xor icebp jnp out lock mov pop rex pop mov add cltd xchg mov mov pop je cmp rex.B ss movabs popfq mov fwait mov icebp cmp imul add movsl push mov out test test mov setne leaveq je cmc push lea test sarl (bad) (bad) jp rex.WRB (bad) gs mov push add leaveq push mov movsl mov (bad) mov (bad) jae mov and icebp and xchg es test fwait movabs out xor loope jmpq (bad) (bad) cld sahf xchg loope (bad) (bad) xchg gs icebp lahf jmp fs add cmp jl jrcxz rex.WRXB icebp je sbb add (bad) out popfq pop mov or xor (bad) psllw mul hlt mov mov pushfq add xchg add imul pop (bad) rex.WRB xchg xchg mov mov (bad) scas stos movabs icebp adc gs push (bad) xor mov rex.WR push and xchg mov jns repz rex.WRB xor out sahf callq xor cmp cmp popq xor mov icebp in sbb leaveq cmp jo pop push (bad) add jno loope in movslq cltd in rex.WXB repz xchg gs cli xchg (bad) or push fst rex.RB adc xchg rex.WRX repz rex.WXB rcrl loope in adc lret (bad) adc rex.WRXB rex.WR in cmpsb sub adc stos orl leaveq pop jno insl jno cmp jne (bad) retq jno xchg (bad) mov rex.WXB jno pop outsl (bad) int icebp (bad) and mov in xchg add jg popfq xchg mov popfq test je jrcxz mov out in (bad) mov rex.WXB icebp movsl push push pop fwait cmp mov or xchg clc sbb vaddsubps (bad) xor sub lock push lods adcl mov (bad) sub (bad) and and out jge mov movabs adcb push in sbb adc cmp jne icebp add add cmp jne xor adc pop and std push xchg movsl hlt mov push movslq imul cltd xchg fdivr adc movabs rex.WRX pop popfq xchg jmpq movabs rolb mov jl cld rcll (bad) xor adc fsubrs sarl xchg loope jl mov (bad) in mov rex.X rex.B rex.WRB mov out adc add je add cmp stc in jrcxz rex.WRB lock rex.RB jrcxz xchg mov out xchg jno cmpl or rex.WB rex.WR xchg mov icebp stc cld loope leaveq xor mov hlt rex.WXB cmp rex.XB pop push insl cmp je (bad) xor lock or mov lods mov rex.WRB rex.W mov rex.RB or icebp cld (bad) test in push lahf leaveq movabs push mov mov stos push or (bad) mov lock test push loope rex.WXB mov icebp and push rex.RXB sbb int jbe (bad) mov loope fs xchg jb negb rex.WRX and (bad) adc cmp xchg xchg xor jbe stc fs mov adc xor sub xchg int3 xchg xchg mov pushq addr32 mov xchg mov add je mov push in jns test sbb jge cs jge sub hlt movabs jne leaveq or in rex.WRXB callq in and (bad) out popfq or icebp movabs mov out cmp jrcxz (bad) jle movslq and mov mov (bad) out retq clc adc or sub xchg leaveq and jrcxz (bad) shrb or rex.WB and mov lret (bad) rex.WXB jg in loope xchg (bad) (bad) sub or push stc loope je (bad) repz and clc lret xchg cmc stc pop cmp rex.WB rex.WB mulb cmpsl or lea jns retq sub ja add std std xorb rex.B lods jp test std loope int rex.WRX in mov cmpl popfq pop (bad) sub icebp xor std xchg jnp jg cltd xchg idivl sub movabs cmc sar jrcxz adc loopne xchg lods gs (bad) mov xor (bad) int3 and (bad) flds mov mov lret cld mov repnz push add (bad) movsl xchg xchg xchg pop orl and loope out in leaveq icebp adc push stos int pushq and jge notl lea int3 pop mov pushq rex.WB mul lret xlat lods rex.RXB (bad) or mov int int3 (bad) add sub cltd fsts rex.R xor rex.R rex.WXB leaveq mov jno (bad) test sub stc icebp rex.WB and (bad) cmc (bad) push test sti rex.WB test test xor je fucom addl cli rex.RB js je cmc mov movsl sub icebp mov rex.WXB leaveq add mov (bad) add push pushq (bad) xchg ds repz sbb mov movabs jmpq and jmp icebp stc (bad) sbb jb (bad) xor jb repz and pop in addl add (bad) jae push insl loope mov xchg xor pop (bad) mov movslq push lods rex.WRXB sbb xchg insl push scas shr adc es repnz (bad) movabs fsubs adc roll or sarl cwtl and (bad) test mov (bad) fisubl xchg rex.XB out repz mov push mov add xchg sarl jne lret cli mov shlb jb mov movabs callq pop sbb repnz sarl jmpq or (bad) pop pop (bad) rex.R jge (bad) mov movabs ja je insl fldl lret xchg imul je jno cli in (bad) mov (bad) shll mov int3 mov mov xor pop (bad) addr32 (bad) loop rcrl xchg push sbb vmovntps cs movabs mov nop sarq adc pop jno and jrcxz and out (bad) mov mov enterq cvttps2pi rcll sbb rex.WXB je out cmpl cmpsb jge xchg xchg add pushfq (bad) cmpsl xchg or and shll sbb and mov xchg rex.WRXB pop rex.WRXB adc pushfq lods std mov pushq fldenv std add imul stos and out cmc rex.WRXB movabs jge movsl mov leaveq or test cmpsl mov push jne stos xchg xchg push jl test (bad) out je or (bad) xor sub or adc movslq ja rex.RXB rex.WXB mov (bad) and mov mov hlt repz push rex.RXB stc pop rex.WRXB or and xlat lods xchg (bad) std or xor pop icebp or mov mul leaveq rex.WB pushfq or rex.WRXB rex.WRXB or pushfq sbb leaveq mov rex.XB or pushfq out (bad) rex.WRXB (bad) xchg or sub xchg icebp adc ja mov movabs pushfq leaveq std flds xor sbb pushfq rex.RB push rex.WRXB mov leaveq xchg pushfq out cmc rex.WRXB sub or add jne pop rex.WRXB out je or and stc (bad) rex.WRXB out je or push push lea in out je add pushfq add outsl rex.WRXB jae pop or pushfq (bad) std retq rex.WRXB cmpsl hlt and or jge mov je or and stc jns stos rol clc stos repz icebp rex.WXB movsl rex.RB push pushfq mov adc rex.XB or leaveq imul cmp loope mov je or roll (bad) mov insb xchg mov sti leaveq or and sbb adc out shlb leaveq movsl xchg push loope (bad) mov (bad) je or int xchg cmpsl jl pop std jne mov jmpq or and leaveq (bad) mov out je or cmpsl jl sub cmp push rorl lock xchg outsl in jmpq leaveq cltd (bad) test out icebp xchg cwtl mov icebp movabs or jns faddl (bad) mov adc (bad) mov lret jp rex.WRXB push xchg leaveq negl (bad) je or and push std int mov out je or and pushfq std iret rex.WRXB out decl jne icebp and stc cmpsb (bad) stc in hlt leaveq mov sub and rcll xor out xor adc sub lea push cmp cmp rorl fisubl movabs sarl sarb (bad) test add rorl mov int add rex.WRX repz (bad) idivb retq xchg adc leaveq or sub rclq scas or test sub (bad) std or or lret ljmp add shrl lods jg rex.WXB (bad) xor adc test je sarl mov xor mov (bad) repnz (bad) (bad) lret add mov add pop fwait icebp (bad) and push push decl gs insb sbb push mov push es rex mov iret rex.WX (bad) test add ss jg lods jrcxz bswap outsb jle (bad) (bad) add (bad) cmp push and hlt lods and lea sbb cmp jo cmc rcrb rcrl movabs jle (bad) rorl outsl in fwait int3 stc iret shl and shll gs xchg add test in retq popfq (bad) int3 pushfq enterq sti xchg movabs mov xor jo rcrl push rcll sbb and rorl rex.RB iret stos or pop sub int (bad) jge sub jns gs rex.WX clc test frstor nop and sbb loop jg rex.WRX fidivl lret in ss ja lret rcrb add sub mov and scas std stos cli mov pop in fild pop shrl loop js out pop mov rex.WRB ja mov xchg rorl sbb or (bad) negb cmp (bad) (bad) (bad) jb push movabs int nop (bad) sbb rex.WRXB movabs mov icebp repz jb outsl adcl (bad) (bad) movsl or in rex.WRXB rex.B rex.WRX pop (bad) xor mov mov jno (bad) pop loop or retq add xchg lahf lea push enterq rex.RX ja lret sbb rex.X es lret jle pop roll or sbb loop push jge stos mov push rex.WXB jae or or rcrl rex.XB rex.B rex std pushq sarl (bad) jae ds (bad) hlt sub int (bad) iret xlat mov pop loope movsb xor push mov adcl rcr out (bad) and pop ss shlb rol movabs std jmp (bad) insb and (bad) sub (bad) jmp adc mov popfq (bad) sbb clc repnz in std shll sbb shrl sub push shll add movabs (bad) mov pop roll add mov sti int3 sub (bad) push mov mov rex.WR or sarl xor sbb out (bad) (bad) xlat leaveq (bad) (bad) or scas fldenv or int pop adc adc mov (bad) insb rcl fldcw (bad) xor stos movabs rex.W jo mov and (bad) jb pop test movsl rex in xchg (bad) mov fisttpll add stc xchg jae cli scas adc jmp cld mov (bad) xchg mov (bad) test (bad) add adc pop sub retq lret mov frstor add sub xchg mov rex.B gs rex.RB addr32 jo (bad) adcb (bad) add sub js movabs rex.RXB movabs (bad) jp add rcrl loop test sub push leaveq cwtl movabs retq add or and mov movsl pop and cmc lea jb adc scas repnz mov (bad) out sbb jmpq hlt (bad) rex.WX divb rex.R mov out (bad) or rex.WX insl roll and rol in rex.WRX rex.RB shrl jno rex.R xor xchg jp pop (bad) or (bad) fildl shrl add xor or sbb mov sbb fidivrl (bad) rex.WRB (bad) movabs test fnstsw addr32 adc sub push ss xor cmp rol sbb pop lods (bad) idiv jl lahf or xchg rex.WRX rex.B rex.B jbe and or jns xchg rorl and or cmpsb (bad) mov scas jg idivl (bad) xor jne and (bad) (bad) rex and adc push cmp sub callq addl mov roll rex.WXB or mov cmp add rol movsl enterq adc ror decb jbe adc rorl xor xchg rex.WB or fcmovnb jle rex.XB mov out stos add (bad) lret (bad) hlt lret rcll rorl loop cmp (bad) shll (bad) (bad) xchg std test pop rorl movsb popfq xchg pop lret in int3 in rex.RX mov (bad) jb clc add pushfq rex.W repz lea add stos iret pop mov out adc xchg (bad) xchg sub mov jbe shrl xor (bad) mull loope out rol xchg jrcxz test fcmovnb mov lret rex.WRXB (bad) out retq stos rex.WRB push xchg shll outsb test push lret std pop mov cmp jne,pt (bad) lea xchg push (bad) cmpsb or (bad) add pushfq xchg rcrl push xor mov jle jbe in sbb retq add rcrl jrcxz imul push cmpsb xor ror and pop sbb mov cmc (bad) lods or (bad) iret fild fiaddl add stc icebp jle push jmpq gs sahf cmp or std (bad) movslq rex.WXB or push (bad) int3 scas out mov imul test (bad) mov cmp pushq mov jge (bad) xor out movabs mov iret ds rcr test (bad) iret push sbb js adc test out (bad) fstpt idiv (bad) jne xor repz mov mov mov stos stc (bad) adc sarb sub push int3 rex and and pop mov jnp (bad) jo roll rex.WRXB icebp sub cmp push (bad) cli xor icebp or add xor test mov std jge rcr out add rcrl adc retq rex.B sub pop mov mov shr jl cmp addr32 js pushfq shrl rex.W pop enterq int3 rorl xor sub (bad) jge rex.RB repnz shrl fwait decb pop int3 (bad) mov (bad) add popq jno movabs (bad) adc push scas (bad) rex.WX push addl pushq xchg mov sbb lret jrcxz jmpq fwait pushq (bad) rcl stc push push cmp (bad) negb lret out movabs stos gs std mov cltd pushq adc (bad) insl rex.W adc rol (bad) cmc (bad) xor bnd pop (bad) rex.RX rex.W sub (bad) nop repnz mov rex.X (bad) (bad) shrb (bad) push rex.X (bad) mov xor lret or xchg callq pushq mov rex.RB sub loop push cmp (bad) in (bad) popfq (bad) rex.RXB or (bad) shrl in movabs sbb mov movabs pushq test and loop mov iret sahf incb cmp repz fwait shll shl imul (bad) ja rex.B (bad) cli jb scas shll mov lahf in xor mov lahf mov out mov enterq movabs jmpq lret repnz (bad) sub movabs cmp push sbb retq iret mov lock jno mov rol rol push lret fidivl xor or jno rorl mov (bad) jne scas je incb int3 leaveq sub adc (bad) and fld xor jle or sub movabs (bad) xor rorb push mov loop ss (bad) jle (bad) out insb mov test fxch ds xchg pushq fildll sub pop (bad) (bad) (bad) insb rcrl sbb sar shll retq mov out (bad) jno rcr test (bad) mov adc mull repz xlat adc cmpb mov and push (bad) sbb adc or push mov fucom lret (bad) out roll push rcll (bad) sarb (bad) push (bad) frstor fnstcw (bad) imul in rex.R (bad) (bad) xor (bad) notb int jo (bad) cmp sarl mov (bad) push fwait (bad) movabs retq xor repnz testl (bad) mov add roll popfq jp int3 lods jl shll pop int3 (bad) cmp rex.WR adc (bad) add mov push rex cs cmp xor xor lret fcmovne fnstsw adc rolb rex.RXB and ss retq fmul fwait cli xor (bad) (bad) cmp lock rex.RX adc push mov shlb pop mov jnp pop (bad) movabs imul rex.WR push jg sub rol stos mov sti in ficompl rex.R lret adc jae fnstsw lods test sub (bad) js stos lret xlat lret mov or pop lret insb xor movl push and jae rorl lock loope and and add mov or rcrl hlt mov cmp mov movabs hlt scas mov fstpt (bad) (bad) out enterq in jrcxz (bad) rex mov jno xor (bad) fimull or rex.B cmp out push fwait jmpq repz xor (bad) sbb add (bad) movabs cmp enterq xchg jnp out int (bad) xor rcll (bad) add push adc mov subl xchg (bad) jne rex.RXB jg shrl jg (bad) mov movabs (bad) iret (bad) mov xchg (bad) fild sub int3 xchg rcrb push (bad) pushfq hlt mov xchg xor insb adc shrb jne or push jb push add (bad) cli and xor mov sub lods mov (bad) sbb icebp pop pop (bad) cmp es scas rol clc push popfq in adc xchg (bad) mov add mov ficomp ljmp pop rex.W rex.B push ss (bad) ja fs mov jrcxz pop andb xor lock in rex.RX and (bad) jle rex.WXB ja pop rorl (bad) std xor stc mov stos ja and imul and (bad) iret icebp jmp mov out rex.B rex.WXB and jle jl cmp jo movabs loope stos push (bad) shll (bad) mov pmuludq lret dec lret rex.WRX lea frstor adc cmp fwait jge test cltd rex.XB test fdivrs (bad) in pop (bad) lods rex.RX sbb and mov rex.X or cmp mov pop pop (bad) sub cmp subl jmpq rex.B outsl or loope imul mov (bad) rex.WX (bad) fdivrs popfq cmpb (bad) je (bad) (bad) loopne addb rex.WRX data16 nop addr32 repnz stc pop (bad) add in and cltd cmp sar jo sbb movb divl adc push jnp roll adc shll retq xor orb jle rex.B kxnorb mull and in sub loop jo and jne fildl out fistp push js rex.WRXB rex.WX jns jp rcll hlt cmp loopne stos insl adc cmp rex.R mov mov rorl (bad) cmp add (bad) mov mov movslq rex.R xor xchg and add mov std repz test addr32 enterq (bad) movsl rex.RX adc jmp (bad) in sarl adc rex.B retq sub and int3 mov mov sti xchg xchg adc rol cmpsl mov insb fldenv rcll pop sbb iret and out push (bad) movabs shrl (bad) mov sbb sarl shl sub pop andl sahf (bad) inc jg mov pop pop rcll rex.X mov shrl add jne push rcl movsl pushq (bad) fcomps adc shll (bad) movslq sbb xor or jle lahf cwtl rex.B sub mov movabs lods sarl sub (bad) (bad) xchg add sbb pop (bad) (bad) loope sbb sar in cmp neg (bad) fld rex.WXB movslq pushq rex.R icebp mov cmpsb lahf xor jnp mov mov and rex.X in mov xchg insl pop add sbb iret out data16 shl cli test jb ja stc int xchg lret jmpq (bad) mov jg out vhaddpd mov out imul and test pop rex.R cld pop rcr xchg and movabs stos mov cmpsl out imul rex.WRXB data16 pop jg mov sub (bad) or rcl mov rcrl fstp int3 sbb rol int mov cmp mov sahf mov (bad) xor sbb (bad) repnz insl fadd rex.R rex.WR negb adc add rol (bad) xchg (bad) std mov mov adc adc sahf jno (bad) loopne out (bad) rex movabs cld rol fcmovnb outsb mov jb (bad) hlt mov mov jnp sub lahf mov mov pop rex.WRX or out pop mov jg shrl movsb sub (bad) push stos (bad) roll rex.XB cmp pushq and xor or clc loop and xor scas mov movslq (bad) sbb rex.WB rex.WX push movabs leaveq rorl jno movabs loopne rorl subb sub stos rcrl lahf jp and xchg xchg mov adc out shrl fcmove and (bad) mov out sub imul in roll adc outsb (bad) or in lock sbb in retq jrcxz ja in xor push xor mov mov movsb rol (bad) mov popfq mov xchg rex.WB clc vpsubusb roll scas movslq je push cs movabs cmp outsl loop int fsts (bad) rcrb int (bad) test jb pop sub lods fidivr mov jrcxz cmpsb rol ds mov and (bad) or (bad) rex.WXB xor rex.WRX add xchg lea rex.W cmpsb (bad) fisub test rex.RX lock and add mov retq jmp add lret mov fcmovnb out (bad) cwtl mov (bad) loope sub adc adc mov or mov repnz mov (bad) xor enterq lahf add xor addr32 and jbe or rol rex.W and (bad) cs push retq insl add div add fadds jbe gs shr add es or lods std int ja and (bad) nop (bad) shrw push popfq pop mov rex.XB (bad) jne cmp xchg mov fildl pushfq lods nop cmc xchg and (bad) icebp pop xchg fsts rex.WXB rex.WRX rex.WRB pop jmpq sbb (bad) mov (bad) jle or xor lock int3 loop sahf movabs sar addl enterq xor sbb (bad) test xchg leaveq cmpsl retq vunpcklps pop or (bad) xorl (bad) pop test (bad) xchg rorl sub add (bad) test pop fadd rex.RX repz movslq xor xchg mov out sahf rex.WRB rex.X or std xlat test rex.B and mov add (bad) fs cli mov rcrl cltd (bad) rex.B rex.WRXB mov in push rex.WXB or (bad) mov test and mov callq retq jo mov int fsts (bad) jne mov rex.WR sbb fimull push add sub cltd adc jl cltd pop mov leaveq outsl add cmpsl (bad) (bad) jb rex.RX (bad) (bad) gs xor movsl rorl lods pushq movabs enterq pop test mov (bad) in push es xchg rclb cli shll movabs leaveq sbb test pushq (bad) jo shll out (bad) rclb in push std sarl jle,pt mov ss xor (bad) imul movsb xchg adc out lahf pop in stos std (bad) mull lods jno movabs (bad) push (bad) scas (bad) (bad) sub mov (bad) or clc sbbl mov fidivr shll shlb roll mov pop in clc xchg or rorl out rex.X xor jno or mov lods lret lock movabs (bad) rcrb xor (bad) movslq int roll mov lret jg adc fsubrl and sub (bad) push (bad) mov cmp (bad) cmp andl fwait rex.XB (bad) lock sti lea xor fwait (bad) (bad) (bad) repnz jmpq stc cmp jmpq movsbw movzwl jmpq sete add test ror mov clc test jmpq xchg pop adc es jmpq imul jb pop data16 (bad) sar shlb mov adc mov mov adc (bad) stos or lods leaveq callq cmpsb shlb and lret cld retq xchg (bad) or jbe cmp mov scas test fidivrl push rex.WXB (bad) pushq or rex rex.B xorl (bad) (bad) sti mov (bad) (bad) decb mov lahf jb add add js rex.RX (bad) hlt lock mov rex.XB jns sub mov addr32 jg rex.WRXB movsb rcll add cltd mov es (bad) cwtl sbb mov insb (bad) mov mov pop ds adc jmpq ja jmpq jmpq jmpq jmpq jmpq bt rol cmc stc cmp not mov lea not pop jmpq xchg outsl out (bad) add adc cmc xchg rex.WXB rex.R mov jge jb pushfq rex.RXB movabs int mov out mov bswap push rex.WR enterq jl sbb xchg lahf je or fmul mov movabs rex.R jle lods add test rex stc cmc mov mov xor lret rex.RXB movslq jns fidivl pop adc (bad) std xchg rorl (bad) (bad) (bad) std ja pop (bad) rex.WR add or callq ficom mov push hlt cli rex.WRXB mov imul mov cmc icebp stos mov pop repz test (bad) inc sti (bad) stc cmp jmpq not bswap not lea pop mov not pop mov bswap pop lea movsbw bswap lea pop retq je movzbw mov jmpq jmpq cmp test jmpq xchg (bad) (bad) xchg (bad) mov std sbb sbb movabs fidivr mov rex.WRX retq cmp test xchg push (bad) mov mov pop rex.X adc and pop icebp jne jmpq cs stos jge sti jp fwait outsb mov (bad) lret pop mov and lods add popfq clc mov test cmp int3 testl and fisubrl cmpsl int (bad) (bad) sti movabs xor xlat cmp int scas sub cmp and (bad) (bad) pushq mov (bad) (bad) and psrad pop lret pop callq cmp xchg clc ja cmpsb mov fnsave nop inc pushfq negb rorl add sbb mov fmull add xchg rex.XB (bad) jmpq cltd jmpq repnz movslq add mul (bad) mov jle mov cwtl cli push (bad) xchg lods sbb nop rex.R rex.R in lock pushq add in or test pop rex.WB cs (bad) out push sbb cmp outsb (bad) pop (bad) (bad) mov (bad) cmp sarb scas adc (bad) subl shrb rcll (bad) add push adc (bad) outsl jle mov push and (bad) xor push test xchg (bad) retq mov pushq xor or xchg xor (bad) (bad) (bad) jns mov sbb rex.RX cwtl scas enterq movsb test mov ffree push mov jnp (bad) rolb rex.WRX (bad) retq cmp callq (bad) (bad) decb (bad) lret lahf iret xor and nop out icebp movslq xchg xchg add sub imul scas adc push rex pushq or pop (bad) or add (bad) pop cmp mov es mov jrcxz rex.WB mov outsb shll sbb loop rex.WRX not sub movzbw mov (bad) lock retq fmuls movl cmp cmc cmc test jmpq ja shr neg cmp shr sub neg adc stc add not or mov sub mov test repnz jmpq jmpq jmpq jg fnsave jge lods rcll pushq int3 (bad) mov pop pop (bad) andb out sub lods lock (bad) sbb je loopne rex.WRX cmp push or mov leaveq jmpq outsl push lods (bad) pushfq test adc xchg cmc jns rorb outsb addr32 adc (bad) rex.WXB nopl and cmp lret iret lods or (bad) sbb mov (bad) icebp push repz add (bad) (bad) (bad) cld sbb (bad) (bad) (bad) stos sbb std (bad) roll sub pushq sbb (bad) in or add add sub retq out (bad) xor jno rex.RB rex.RX add movabs adc sbb sbb (bad) and es idivb outsl push mov callq fucomip mov movslq mull xor push rex.XB jl subl out fisubl ja mov rex.WXB sub repz repnz fwait loopne fs xor int3 xchg add mov add lock jg xor and outsb mov mov (bad) jb sbb (bad) (bad) sti clc stc jbe movabs push shrq mov xchg cltd pop (bad) movsl push data16 loop mov (bad) int3 jp or pop adc (bad) add (bad) (bad) movslq mov testb fildl xchg or pop lcall leaveq callq adc mov cmp jb cld lock or cmc pop in retq jmpq sub fsts je and jg fidivr insb cli cmpsb test adc cmpsb rex.R cmpsb rex.R incb mov mov add mov push or adc movabs jb outsl push movabs (bad) rex.B mov (bad) and leaveq cli rex.WRB jrcxz stos pop pop retq cmpsl mov rex.WX or in (bad) push (bad) lock push sbb cmpsl icebp sbb sub cmpl (bad) adc xchg (bad) (bad) (bad) sti movabs xor loop test rex.W movsb mov mov rex.R pop (bad) (bad) (bad) pushq insl ja rex.WRB cmc fildll (bad) lret movsb lods shlb xor retq test leaveq (bad) jnp mov sbb push push imulb mov in mov lea push cld je test cmp sub clc clc bt stc cmp jmpq jne jmpq xlat (bad) rex.B rex test (bad) or mov scas cmovnp (bad) ss xchg jl cmp mov cmp je add out and add xchg jrcxz test (bad) xor je add mov fwait enterq xchg retq cmpsb (bad) adc xchg add or pushq xchg or add xor add retq retq and (bad) cmp out fs movabs js (bad) (bad) (bad) out jmp clc xor in mov add add mov add add outsb in insb movsl pop (bad) mov idiv cs loope mov rex.B ds jrcxz cli insl je mov jnp xchg (bad) jle cmpsl mull cmp gs orl adc rex.WB mov data16 xor (bad) repnz and (bad) mov nop cmc in mov xchg cmp mov fisub lods jp xchg rex.WRB movslq divl (bad) pop cmp xchg scas movabs jl push mov xchg fsubrs pop xor sub jrcxz xchg or sbb add fs or xor (bad) (bad) sti mov (bad) (bad) decb push xchg add add add js sbb sbb (bad) adc add mov cmpsl and sbb (bad) add gs jrcxz mov fnstsw or ds sahf scas (bad) (bad) insl mov test movabs bt cmc jmpq stc add jmpq jmpq cmp iret mov (bad) pop gs cmc subl jne std jrcxz sbb popfq out out rorl (bad) in adc shrb mov repnz cwtl adc or callq and push cmp jrcxz rex.X movsl jmpq sub mov imulb pop (bad) mov (bad) and out es (bad) (bad) sti sbb orb (bad) std lods cmc cmc mov (bad) xchg adc xchg movabs jp xor out fisubl in retq (bad) xor movabs rex.R xor (bad) stos mov retq jl sbb retq (bad) (bad) (bad) inc pushq outsl scas or addr32 out rex.WRX movsl mov jno (bad) xor icebp sub movsb lret rex.WRXB mov retq stos fbstp sub xor cmp negl out ffree mov sbb cld stc mov ds ja movabs cmpsb rex.RXB push (bad) lret mov cmp cli clc rex.WX lret mov (bad) or rex.WXB rex.WB (bad) mov xor (bad) gs lcall jb enterq add sub rex.WB shll popfq (bad) xchg mov sub rex.WRX (bad) (bad) sti fwait (bad) test xlat (bad) (bad) (bad) (bad) sub (bad) (bad) xor (bad) adc or (bad) (bad) (bad) ljmp push sbb roll in ds iret pop sub stos rex.R subb or jo test cwtl std fisttpl cs mov imul verw lods (bad) (bad) decl test sbb add rex.WRX add push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add and xor lret leaveq icebp cmpsb sbb pop (bad) movabs rex.B ror cmp movabs push sbb mov movb test pop mov gs cmp mov out lock xchg sbb mov test sbb sbb (bad) out lods mov pop (bad) (bad) (bad) (bad) cld xor loopne (bad) (bad) (bad) inc negb jmp adcb (bad) xchg (bad) or movabs add add sbb cmp rex cmp cld add jg loopne cmpsb scas (bad) or (bad) or push xlat rex.X mov fmull (bad) (bad) mov lea cltd sub movzwl lea mov clc clc clc add stc bt cmp cmc mov test cmc bt test jmpq jmpq jne mov xor sub test mov and add clc sbb mov bt bt test jmpq jmpq rol stc cmp movzbw movzbl movzbw lea lea mov bswap pop jmpq cmp (bad) (bad) adc jmpq nop cmc cwtl cmp add adc jae xchg (bad) roll (bad) lods cltd rex.WX pop sbb mov fwait pop sbb movhps pop clc in add rex.WRB or cld movabs shrl rex.WB (bad) xor push mov mov jo and (bad) shrb sahf cmp out or (bad) sti cltd (bad) mov (bad) sub (bad) mov cmc xchg kmovb (bad) cmp cmp lods mov stos pop and (bad) pushq (bad) enterq push scas (bad) (bad) cld cwtl mov cli pushfq (bad) adc (bad) vpsubb adc pop fnstcw out (bad) sub ss lods enterq rex.WRXB xor mov insb callq nop jle (bad) testl in (bad) (bad) out rcl sbb loop cmp mov xchg out sub stos and (bad) xor (bad) cmp movabs mov rex.RB out cltd outsl retq jno mov pop (bad) insl pop rex.RXB jne mov rex.RXB rcrl enterq lods cmpsl rex.X (bad) stc adc out (bad) pop jae xor mov ss hlt (bad) (bad) (bad) cld and xchg jp (bad) (bad) (bad) mov lods (bad) push (bad) or test adc add add xor mov jrcxz or pop pop mull in adc push mov push cmp xchg mov out jrcxz repnz ss out xchg mov (bad) movsb lahf int repz (bad) rex.RXB mov or (bad) pop movsbw jmpq cmc leaveq in (bad) enterq sub sar rex.RB in cmp xchg retq and out (bad) stc cmp out ss std popfq rex.X jno movabs cmp cli jne clc scas test cmp push mov jo xchg (bad) jae sti rex (bad) retq ja sbb bnd sub (bad) cmp pop cld mov jbe sar (bad) (bad) sti lods lahf subl (bad) (bad) (bad) cmp jle push mull (bad) mov rolb shr mov adc rex.RX (bad) (bad) (bad) (bad) lcall out stos decb rcll xor mov je sbb (bad) cltd sbb imul rex.WB (bad) rex.WB sbb repnz int mov push fisttp or fwait (bad) (bad) mov outsl (bad) cmpsl xchg jmpq jne xchg shr mov dec bt lea sub not (bad) (bad) or mov mov clc bt cmc sub clc jmpq shlb pop adc and jmpq rorb lahf test xchg or movslq rex.RXB (bad) jnp sub (bad) stos rolb cmp ds addr32 or and xchg (bad) stos and mov and test insl xor test mov fsubl jne (bad) jns popfq gs and (bad) xchg sub retq push xlat (bad) (bad) (bad) cld js adc or in movsb adc (bad) cld mov clc scas lea add loope or in ja (bad) rex.B rex.RX in cmpsl adc adc lea mov xchg (bad) (bad) cmp hlt loope add add imul addr32 mov je adc scas retq cmpsb mov popfq and andl cmc cmp mov mov add stc shlb jl jg (bad) pushq sbb cmpsb test jmpq cmc add test jno bt cmc or jmpq ja cmc imul clc cmp bt jmpq mov fs (bad) push std stos xchg (bad) (bad) rex sub fdivr jo loopne adc scas retq scas add lods push rex.X or or test fcomp movsb retq pushq xchg lods (bad) jl je mov pop mov xor repnz adc test jp mov rex mov adc pop repnz in mov std int3 stos (bad) sbb (bad) jmp (bad) stc (bad) (bad) (bad) decb (bad) (bad) (bad) decl adc gs (bad) mov mov out movsl and cwtl (bad) jb faddp add cmp or jbe fadds push xchg fstl repnz xor pop sbbb rex.XB in rex.WX rex jns scas loop fbstp fbld (bad) movabs mov jle movsl mov addl out rex.WR mov (bad) pop rex.R int3 insb idivl jno (bad) (bad) cwtl movzbw mov jmpq jne not bswap mov cmp cmp bt bt cmp jmpq bt pushq clc stc jmpq mov adc scas (bad) push add mov xlat and in rcr mov loopne retq callq movslq sub (bad) movabs scas mov adc push clc lret sbb pop cld push sbb (bad) test sbb lock (bad) lret repz add and add ja jmpq and cltd jmp and (bad) lods (bad) (bad) (bad) sti retq fidiv (bad) (bad) (bad) (bad) push out nop jge (bad) bswap (bad) bswap cltd pop cwtl (bad) jbe (bad) (bad) (bad) callq rclb (bad) sar cmpxchg movabs (bad) mov lea mov mov xchg jmp rex.WRXB rex.WRX xor adc push (bad) xor xlat mov add mov add jmpq pop jmpq jbe jb clc cmc stc cmp jmpq loopne cs (bad) jrcxz sahf movsb movslq push cli (bad) icebp (bad) mov popfq imul mov mov jb mov in icebp out outsb imul shrl lods lock cmp and cmpl (bad) mov jnp rex.WXB or clc (bad) rex.WRB pop add (bad) stos mov mov (bad) fidivrl fwait std mov js mov lods mov cmc (bad) mov cli cmp retq loopne (bad) cmp cmp and jo (bad) decb (bad) (bad) (bad) lcall fstpl xor sti cltd xchg retq pushq rex.WXB jmp imul clc test addr32 scas sbb (bad) fidivl xlat (bad) push cld cltd jns jno (bad) mov jno xlat out ja push mov (bad) outsb icebp (bad) jnp sub sub sbb sbb sti push imul cmp cmp add jmpq bt jmpq jmpq jmpq mov cmp clc push clc neg stc and mov test cmc sub jmpq pushq jmpq jns (bad) icebp out push and repz in sub pushfq push jno mov and and adc fadds (bad) psubusw push adc mov xor mov mov (bad) xchg cmp sti (bad) rex.RX mov push test rex.WR popfq rex.WX in fsubs rex.X fbld in (bad) (bad) ss mov hlt scas pop mov (bad) (bad) (bad) sti jl (bad) cli sbb (bad) (bad) decb sahf int3 (bad) and retq clc cmpsb lods or (bad) (bad) decl jmpq sarl mov (bad) and (bad) pop or rex.XB cmpsl mov in in mov rex.R mov int3 mov (bad) or fsubrs push mov cmp add shr shl xor shr mov cmc test jmpq int xchg cltd imull lret xlat or add mov and scas pop sub lea cmpsb test ds jo adc push jp xor rex.WX (bad) movslq push movabs (bad) jns mov adcl movslq xchg sti clc and cmp (bad) ljmp mov leaveq pushq (bad) (bad) (bad) add je repnz push or (bad) or adc cmp mov pop test (bad) (bad) (bad) cld jae mov (bad) incl (bad) mov movabs test test jnp in jbe movabs jmp xor (bad) insl enterq outsb (bad) (bad) in rex.X callq pop or xor movabs enterq add add lea mov mov adc push mov jbe int3 (bad) pushq clc sti (bad) jmpq jne rcl movsbq mov shl inc sub sub inc shld jmpq mov add int3 jno add add add add add add add sbb and add sbb shrb add nop movabs add mov add nop movabs add add add add add add add add sbb rex.W sbb fs jno sbb jp sbb xchg add sbb rex.WB jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add xchg cwtl mov cwtl roll stos push xor loope xchg in cwtl movslq fmulp retq jne pushfq out retq xor pcmpeqd pop pop rclb mov std mov rex.B int3 rex.WB ja outsb movabs add rex.WRXB rex.WRXB jge rex.WRXB rex.RX lods push insl (bad) pop ffreep lret push adcl stos (bad) divb loope addl rorb cwtl or sub pop cwtl or in pop sbb sub mov shrl cmpsb rex.WX callq cmp xorl (bad) (bad) fistpll jne mov (bad) add (bad) sahf xor (bad) sub movabs testl and cmp mov xorl cld jns movslq addl shll js (bad) mov rex.XB add pop mov enterq movabs retq (bad) movabs movsl sti pop ja (bad) and sub fmul decq (bad) rdpmc ds cld rex.WXB in jbe addr32 xor loopne cmc out or sbb pop (bad) ja or ss rex.XB push loopne mov in test (bad) cltd cmp lods sub (bad) scas rex.WR jne popfq rcrl rex.RX rex outsl rclb adc cmpsb bnd mov fsts cmp xorl lods stos movabs xlat (bad) jle add cwtl rex.R out xor pop fbld mov rex.WB outsl movsl mov sbb xchg xor add cli (bad) push pop movabs notl mov int jmpq push wbinvd mov loop leaveq in lock insb imul popfq sub rex.WX rex.R rex.RXB repnz (bad) xchg push mov sub (bad) lea pop cli mov movsl lea ss sbb repnz jne sbb xchg jnp out (bad) mov jb mov (bad) or rex.X insl rex.RX ja outsl (bad) icebp lret repnz rorb jge lods (bad) lea addr32 incb addr32 repz (bad) rex.W sbb or cmp push sub adc jno or es adc push sub movabs (bad) cmpb movslq fnop sbb rex.W repz repz std (bad) data16 or sti fnstsw pop (bad) sub stos jmp mov ss mov mov leaveq and mov cmp (bad) sbb xor (bad) nop adc sahf mov (bad) pop icebp rex.WRX cmp xchg sub jl popfq std rcrl (bad) mov (bad) iret jmpq lret adc rex.W pop movabs lods std (bad) sbb ss adc mov gs movsb (bad) movslq mov (bad) push js and (bad) scas jb mov fildl jae sub xchg (bad) movabs (bad) cmpb add mov mov mov movabs or (bad) (bad) sbb push mov mov pop cmp mov nop or cmc xchg xchg rex.WXB imul mov insl rex.XB mov rex fidivrl movsb jg stc lock (bad) outsb fs mov rorb (bad) imul jns in mov fstpl adc movabs xchg push movabs callq movsl (bad) jle adc xor fwait sub movabs jno mov in es mov xchg push sub (bad) adc or cwtl loop mov mov shrb (bad) stc callq mov jbe mov insl out jnp retq cltd adc push lret and scas lret (bad) (bad) and cld ja adc cmp sub cmpsb in or jg xchg mov push out xchg add jg mov fsubl xchg mov jmpq (bad) mov jle imul gs and loope xchg movsb sbb in jnp push iret andl (bad) div jbe sub test adc je mov rex.WX (bad) sarb leaveq sti jle xor mov (bad) int3 in xorb mov pushq add jle seta movabs (bad) test lock repz ss mov hlt push mov (bad) sub jmp insl sub push and add sbb xchg (bad) add outsl rex.WRB rex.W xor jmpq cmp mov sub callq scas mov or (bad) mov jg (bad) jl out scas and (bad) cld (bad) rex.RX (bad) (bad) rorb sbb rex.XB (bad) or mov or jnp mov add push loopne out rex.RXB fildl lret sahf xchg or movsl (bad) sub mov lods mov and jge mov cmpl and sbb out fdivrl pop sti sbb pushfq xlat test retq movsb adc and mov lods add mov push rolb in in pop xchg (bad) fidivr rolb (bad) pop rex.RB rex.WB int3 cli ds pop out xlat (bad) rex cmp jle mov movabs pushq jp xchg mov scas pop xchg xor js,pt fs and movslq sbb fadd adc cmp add out test sbb mov and rex.RXB mov (bad) jb fwait lret mov and mov stos mov sbb mov rex.WB add rex.WR jns pop and (bad) xchg (bad) fstpt fild movsl rex.WR mov cmp mov sbb push rex.WRX add lock jb pushq cwtl pushq int3 movsq jo in xor pop in cmpsb out leaveq sbb and imul data16 shlb rex.WX ficomp (bad) je hlt ja xchg fcmovnbe rex.WRXB (bad) pop xor pop xchg rex.WR in add push xor and sbb add mov std lret mov (bad) shr pushfq callq frstor add retq loopne and sbb xor leaveq (bad) (bad) cmp jge repnz (bad) rex.WRX sbb and push xor xor rex push shll jbe cmp sub mov loopne jae sub cmp (bad) or mov jno je (bad) movsl jle idivl adc enterq adc or rex.WX rex.RB sub (bad) and mov pop xor push scas rex.WR mov (bad) cmp rex.WR sbb mov mov add lret pop jmp add jle out push rex.R mov out (bad) cwtl pop mov in jns stc pop imul mov rex.WRX mov rex.R pop rex.RXB add xor jrcxz sbb movabs lods push (bad) movsl es pop xchg adc repz in sbb cmc cmp cs fcoms mov adc cqto cmp rolb mov push test mov or int3 adc hlt jp cmp mov mov repnz fmul cmp lret sub cmp (bad) mov sbb mov (bad) xchg xchg jno xor mov outsl add (bad) rex.X jmpq and xor movslq mov jg or xor lods pushq push sub lret (bad) in sub mov test lock addb jl movabs sub (bad) stos adc adc add rcll (bad) (bad) sbb xchg stos pushq js cmp and retq (bad) jl (bad) rex.WB hlt icebp (bad) std pop fwait cwtl (bad) xchg pop mov in mov roll (bad) xchg (bad) (bad) cmc mov test mov add push (bad) (bad) jmp sbb popfq (bad) xor sarl outsl adc loop lods xor add in cld or imul sbb (bad) mov xlat movsb fwait lret (bad) xor sbb leaveq mov loopne lods xor add xchg rex.WX xchg cs cltd rex.B repz mov jne btc (bad) leaveq test movabs in cmp gs fs sub rclb lea sarb pop xchg sahf imul in (bad) pop cmp cmp mov in jl repnz fmul pushfq shll test xor sbb push xchg imul jp (bad) gs nop iret xor addr32 (bad) out pop out or imul sbb pop pop (bad) rex.WRB mov icebp adc push imul (bad) (bad) adc rorb jp movabs out (bad) cmpsl pop and popq out es rex.RX and test test outsl int3 mov xchg loope mov sub add xor mov rorl idiv or rex cmp scas (bad) rex.RXB cli xlat movl fstl (bad) jno sbb rex.R rex.X rex.WRB rex rex.WR mov and fs gs fimull xor sub clc mov bswap xor adc gs shrb test cwtl add or lods in (bad) cmp (bad) xor and mov cmp adc cmpsb cmpsb mov pop rex.XB jg sti shll xchg rex.WXB jmpq sub (bad) outsb test es adc sbb sub mov sbb rex leaveq retq sbb rex.WX sub fnstenv (bad) rex.WRX (bad) sbb push or jb (bad) rolb jo retq (bad) pop fiadd outsb imul cs insb add add jbe push sahf es xor mov jp or loope cmp cld out jno sub rclb cmp sbb rex.WRX data16 rex.WRX nop pop xchg (bad) mov jg (bad) jp cmp rex.WRB mov jmpq rex.R add mov push (bad) pop hlt xchg js retq scas jp test rex.R pushfq movabs addl int ss mov callq pop iret rex.WX leaveq enterq xchg (bad) (bad) jbe rorb add data16 xor lods jo callq lahf cltd mov adc push (bad) (bad) (bad) std ja jbe sub add add mov js or lea movslq repnz (bad) push insb int ss jle cmp mov cld lods xchg mov out (bad) xchg mov mov test (bad) adc xor or mov mov (bad) sub movsb (bad) sbb and mov (bad) mov imul repz js jb and jae xchg sbbl xor jne sbb test notl mov jge lods sub adc mov int xchg out rex.X sub (bad) (bad) (bad) shrb lret insb roll or retq mov (bad) adc (bad) mov fldt (bad) sbb (bad) jnp je (bad) (bad) sti mov (bad) (bad) decb xchg ja pop add add or sub adc movabs xchg gs mov out mov mov ljmp (bad) (bad) adc sbb and jb lret sbb add imul jae rclb add add sub (bad) addb add xor (bad) addb add clc jae addb add xchg test add add test adc lcall pop rex.WR jmpq or cs (bad) rex.RX fldl fidivrl cli lret insl jl pop adc and jns cmp rcrb xchg rex.R cmpl repz rex.R movabs push jle scas xchg (bad) (bad) (bad) cld rex.RXB imul fadds (bad) jns add (bad) out mov movabs rcr sbb jmp push sbb lret imul (bad) xchg xchg gs lahf gs rolb jrcxz mov sub adc (bad) add add jbe stos test add loopne popfq cli sub xchg pop sti (bad) mov out rex.RXB (bad) pop xor iret movabs mov mov mov jo sbb faddl movsb mov (bad) pop sub or mov push rex.WRXB fdivs sub mov cmp sbb mov movabs movabs fwait adc out rex.WR (bad) cmc rolb retq mov leaveq callq (bad) (bad) sub cs imul (bad) mov movabs js pushfq (bad) (bad) (bad) (bad) push or (bad) xchg add cmp stc fnstenv rcrb xorl mov out mov xor and out and imul (bad) retq mov pop pushq pop rex.WXB repnz push or (bad) movabs xor sbb jmpq testl and movabs push scas push (bad) jne mov jae sbb (bad) mov ja cltd (bad) movabs enterq retq lock cltd fbld push xor clc (bad) cmpsl div push (bad) jp insl jg xorl sub xlat sbb sbb test int3 mov iret std xchg lea (bad) scas sbb jae xchg and fwait mov xchg xchg movsb je jmpq stc stc bt add cmc clc cmp js jb stc stc cmc clc cmp jmpq adc insb test jnp rex.WXB sbb sub cmpl cmp mov je mov test push mov je jo,pt cmp (bad) adc (bad) jne lahf mov test (bad) adc rcll retq adc sub pop xchg (bad) mov mov (bad) pop out hlt jo xchg fidivrl jrcxz cmpsb callq jge mov jmpq fmuls (bad) (bad) (bad) (bad) std or cmpsl or (bad) (bad) std rex.WRB (bad) and jns lahf sub add add or out fcmovnu shlb rex.WR mov add mov retq (bad) test pop repz movabs (bad) or xor jne leaveq rex.WXB mov sbb or (bad) pop sbb movabs mov in clc or jmpq stc stc repnz jmpq rex.R jno cmp or (bad) scas addb (bad) std loop sub mov adc fs nop ja (bad) xlat callq scas push cmp cmp out retq (bad) push in jrcxz movabs mov pop js lea (bad) (bad) std loope ror rex.WB gs cmp adc adc js or jne lea rex.WXB js cmp xchg jo loope cwtl push test fcomip cmp rex.R rex.WRX add add mov mov pop rex.WRX jae movabs rex.W rex.WXB sbb xlat mov jrcxz rex.WB mov ss mov mov xor push jmpq pushq bt clc jmpq callq jmpq test fbstp rex.WR stos adc sub scas sbb lods rex.W gs push and ss sub jrcxz cltd sbb jge movabs cmp fadd mov retq loopne pushq shld sarb std jle test mov (bad) (bad) (bad) std (bad) xor (bad) decl ffree (bad) rex.WRXB push jge sbb jle or jl jne mov sub cwtl mov (bad) in mov (bad) mov rex.XB fwait mov mov rex cmp jmpq jge (bad) lret sub cld (bad) lret (bad) retq jmpq out mov jp push cmp jg js (bad) mov insb adc leaveq lahf xchg out xchg and shl flds (bad) lahf xor sti in ficompl rex.WX xor jne jp repnz cmc pop (bad) (bad) cmc and in and loope and (bad) (bad) sti repnz xchg sbb (bad) (bad) (bad) incb jno (bad) sbb leaveq pop and (bad) mov add add ja adc outsl (bad) mov rex.RB lods xchg rorl (bad) leaveq rex.WR cmpsb mov cmp rex.WRB sarl sub xchg rex.X test fwait add and mov mov or mov jns add clc movb test stc bt test test jmpq cmc bt test add test movzwl inc not btc mov test test add clc stc mov jmpq rex.RB test hlt (bad) movabs (bad) xor (bad) add nop rex.XB rex.RXB out (bad) and jle add jp out mov test cld rex.WR retq repnz pop sub out xor pushq and (bad) jno rex.R jge jo (bad) out adc jl imul cld and and (bad) (bad) (bad) (bad) mov (bad) out sub add callq (bad) and jnp (bad) sub jmpq or hlt clc jge pop sbb pop fistpl jo in iret add (bad) xchg or nop mov rex.WB fwait retq push sahf notb shll cmp mov add add xchg fwait mov pushq or (bad) push jns rolb (bad) shl nop (bad) mov (bad) lahf mov and push and and jmp pushfq cmp (bad) pop adc or movabs jle rex.RXB jmpq jmpq cmc xor bt cmc rol cmc stc cmc cmp bswap movsbl not lea mov movzbw lea mov pop jmpq jmpq jmpq lea lea bswap movzbw movzbq not pop jmpq pushfq add cli (bad) rex.X fmull js rex.RX imul lock insb rex.WRXB rex.XB push lods xor push cmc test and mov rclb adc mov shrb add mov adc mov in repz (bad) (bad) (bad) (bad) sti int xchg (bad) (bad) (bad) (bad) (bad) pop shrb out adc sbb add pop (bad) and adc push (bad) sahf and (bad) (bad) jmpq repnz pop xor xchg mov xlat insb add add rex.WX pop enterq or (bad) rex.WRB pop out insb cld (bad) ja fcmovu jge ficom (bad) scas and fwait mov and (bad) sti mov sub xchg sti decl mov (bad) mov bsf (bad) repz sub mov btc cmc dec bsr add or add xor rex.W icebp xor rex.RB add add btr sub mov test cmc clc jmpq mov (bad) push and scas add xor sub loop cld pushq enterq fistpll jrcxz in cmpb mov jge sbb add in ds xchg cmpsl pop xor mov (bad) fmuls frstor je add decl hlt xor lret (bad) stos (bad) push mov fnsave loope sbb add movslq stc rex.RB (bad) (bad) add sbb push (bad) cmp sahf mov xchg loope mull xchg mov nop pop movsb fldenv add cmc (bad) cld incl rex.X int fisub sbb xor (bad) (bad) cwtl push outsl push ds outsb xchg loope (bad) xorl sub out clc in cs and push mov add ja gs pop pop xor sbb cmp push lods lret sbb out (bad) (bad) (bad) sti int3 sub fnsave cmpsl or adc mov pop and and xchg lock and adc (bad) jmp xchg (bad) sbb lods and sti in jl (bad) (bad) (bad) (bad) mov rex.R vcvtps2dq xchg xchg rcl xchg add add cmp pushfq and xor lods fs imull xchg sbb sbb jo mov jae (bad) xor sub (bad) movabs (bad) scas sub and fnsave cmp xchg jmpq jb bt cmpb jmpq je cmp cmc clc sub clc test jmpq cmp test cmp jmpq clc rol stc cmp bswap movsbl jmpq jmpq cmc clc imul bt stc add jmpq jmpq mov xadd rol stc mov movsbw shl sbb shl mov sbb rcr and jb push shld xadd and jmpq jne jmpq (bad) jno movslq sbb test loope and mov fsts jmpq (bad) rex.W add pop (bad) sub jne xor push pop sarl outsl xchg movsb imul mov and sbb mov adc cld fisttp mov pop (bad) mov mov jg (bad) pop (bad) out rex.XB rex rex.RXB mov movabs sub (bad) decb xchg sub mov rex.R (bad) stos mov imul (bad) stc int3 add add (bad) clc insl jbe lret test lret out and rex.WRX stos cli jmp iret (bad) outsl rex.RB rex.WRXB adc rex.RB lret movabs fsubrs push or xor lret sub repnz stos adcb imul lahf je jmpq je clc bt cmp jmpq ja cmc clc imul cmc stc cmp add jmpq jne jmpq jmpq jmpq je cmp cmp clc stc sub stc jmpq callq xor cmc shr add cmc bsf cmc mov clc cmpb jmpq jmpq jne bsr cmp shrd data16 lock sbb ror bswap btr mov sbb neg add rcr neg ror mov cmp stc test test jmpq rex.RB clc (bad) cli lahf rex.WR rex.W cs add mov rex.RX or lea sub (bad) rex.RXB (bad) pop (bad) imul cmp adc cmpsl movl loopne rcrl rcrb test mov imul and (bad) fiadd jnp pushq add repnz sub add imul movsb sbbl xchg mov mov xchg movabs or incl out leaveq (bad) cmpq mov pop xchg leaveq (bad) or pop mov test (bad) rex.WR cld icebp cmc pop cld xchg cs fiaddl cmp imul (bad) sub retq (bad) idivl pushq retq (bad) stos fisubl xchg (bad) (bad) sti out jle rex.WR (bad) (bad) (bad) (bad) jg pop rex.WXB mov (bad) fdivrp out push test (bad) cmp (bad) mov pushq (bad) mov ffreep sbb ja cld rex.WR jg rex.WRB repnz adc outsb push (bad) stos std ljmp sub jae (bad) scas (bad) scas xchg (bad) movabs nop mov mov xchg (bad) and (bad) jne xadd mov inc sub movsbw shl mov cmp clc clc bt sub test bt clc pushq stc bt stc cmp jmpq jmpq clc stc cmp cmc cmp jmpq mov sahf jp adc insl jbe xchg iret test push mov (bad) lret sub mov std popfq push lea pop mov xchg rex.RX rex.WRX cmpsb xchg stos rex.W (bad) (bad) (bad) pop movabs adc xchg push rex.WRXB or decl loopne adc (bad) sbb js jmp sub (bad) test pop lret (bad) (bad) (bad) std repnz add add cwtl sarl (bad) mov xchg adc pop repz add test (bad) cmp mov loope xor stos (bad) jp push mov fs rex.WRXB cmp jle (bad) jmp std rex.WR rex.RXB (bad) in sub (bad) (bad) sub xchg add clc stc sbb mov sub adc neg mov bt stc cmp jmpq jmpq jmpq rex.RXB stos popfq xchg test jae rex.RB mov std (bad) gs fmull enterq add (bad) cmp jrcxz xor loopne push (bad) rex.WR out sub test push rex.WR sarl mov fist jb cmp retq test cmp rex.WR cmp shlb jg in movabs push in movabs scas out sbb fimul and (bad) fimul xchg adc xchg rex.WB fs rex sbb or outsb mov (bad) (bad) mov scas push xchg jb cmp shll in (bad) mov (bad) cmp rex.WB insl and (bad) add pop or out test movslq movabs adc mov jge negb ljmp in fdivrs sbb data16 testl (bad) adc mov test cmp test cmp test jmpq test notl rcl imul (bad) jmp sbb rorb fcoms rex.WR add adc rex.W (bad) xchg (bad) (bad) shlb pop lods imul fwait retq sub jo (bad) stos fcomip push leaveq mov mulb xor pop adc and jbe mov kxnorw mov or pop cmp in enterq sti rcl mov (bad) (bad) (bad) (bad) (bad) xchg icebp mov mov mov test rex.RX pushq jb fisttpll cmp sar (bad) (bad) fdivrs or int3 jns mov mov rex.RXB rex.WR lods (bad) rex.RB lods adc mov (bad) pop out leaveq mov or stc (bad) (bad) pushfq mov int mov sbb rex.RXB jp add cltd mov movsl xchg xchg movsl imulb xchg mov lock (bad) rex.RX or mov jo pop mov xchg pop mov cmpps test rex.RXB clc push add mov popfq mov popfq (bad) pop pushq jns adc adc pop pushfq xchg rex.RXB rex.WR insl roll mov cmp cli cwtl fbstp xchg mov callq mov (bad) push mov adc mull jge mov mov pop or adc mov cwtl rex.WX int loop (bad) push movsl pop jbe add decb (bad) (bad) (bad) decl stc (bad) in sbb pop rcrb rex.WB pushq (bad) push rex.WR (bad) mov leaveq cmp mov insl pop nop sbb (bad) lcall fistpll lret popfq mov cmp add fdivrs mov cwtl jo mov sbb push rex.WXB fild push test and xchg sbb lock or push rex.WRX jbe stc cwtl cmp cld fmuls (bad) mov pop (bad) sbb clc xchg mov sub out (bad) sbb stos (bad) xlat mov xorl lahf (bad) (bad) and adc mov fcoms loope sub (bad) (bad) cld pop mov ja (bad) (bad) (bad) lcall (bad) sub push cmp and and and notb lret sarb mov mov (bad) callq add add or int3 rex.WB shr iret cltd mov xchg mov cmp movslq fdivrp mov jb jp adc (bad) (bad) cli push add (bad) retq mulb push push cli (bad) mov (bad) rex.RX pop ss jmpq add rex.RXB gs imul outsl outsb rex.WB outsw add add jmpq jmpq test jmpq jbe dec add btr add sub mov inc shld shl mov bts sub mov rcr add test bsr shr ror jmpq jmpq jmpq cmovno push push rex.XB rex.WRB (bad) (bad) (bad) cmp mov ja jge mov sbb sub jle fistpll lea rex.X es cmc and movslq mov es (bad) stc sub movabs push add (bad) stos xchg xor pop insl sbb int (bad) or mov fsubrs cld sbb rex.RXB stos (bad) adc rcrl adc mov rex.WRX retq imul in rex.RX jp add (bad) (bad) loopne (bad) (bad) loope test retq test xor mov addr32 mov jno push jg (bad) repnz xor fdivrl mov (bad) push ffreep (bad) sub or mov fwait cmovb lods je stc add cmc bt bt cmp jmpq mov jle push (bad) mov or (bad) jns lret or jnp or ftst add andb and (bad) rex.B stc push (bad) (bad) cmpsb js stos enterq cltd enterq clc xchg pop mov push stc ds loop out xchg jmpq loop rex.WR mov jg (bad) (bad) (bad) cld ds (bad) (bad) (bad) dec pop je xchg add rex.WX (bad) mov pushq and add add clc (bad) (bad) mov loopne adc fwait mov mov (bad) adc sahf mov (bad) fnsave pushq jne xor (bad) ja test adc fidiv or mov fwait lods (bad) repz jmpq fwait jb sbb xchg stc add or stc (bad) insb cmpsw rex.WRX test mov test mov sahf mov pushq sti add mov cmpsb outsb xor testb push scas shlb mov mov and (bad) mulb shrb out mov loope test int push icebp callq sub fstl mov xor mov (bad) (bad) (bad) (bad) cld rex.WB (bad) (bad) (bad) (bad) decl xorl xchg shl je add add or jo xor (bad) outsb mov (bad) mov (bad) (bad) or sub adc pop in pop (bad) nop in imul setg fs jl mov pushfq (bad) fwait rex.WRB jmpq clc clc cmpb jmpq callq cmp clc cmc sub jmpq mov fldt (bad) icebp popfq int rex.X cmp sub pushfq sbb (bad) int rex.RB stc (bad) add cmpl xor rex.X xchg (bad) test pop fmull leaveq (bad) outsl and mulb repz and pushq lea loopne xlat movslq lret sahf and clc rex.RX jl add lahf mov pop rex.WR xor adc lret rex.RB rex.WRB movsb jo xor and (bad) mov ja rolb add mov xchg pushq and in adc out xchg subl insl mov mov jmpq xchg mov popfq lods outsb ficom add test push bsf sar shr mov bt clc stc bt sub jmpq cmc cmp jmpq mov xor test adc (bad) ja mov faddl loop stos jo std jrcxz (bad) mov (bad) (bad) retq out (bad) test rex.WX xlat adc test mov rex.XB push insl (bad) fs mov jno insl jl mov or and rex.WB ficom mov (bad) pop repnz and push imulb jle,pt (bad) movabs push mov (bad) (bad) (bad) dec cli (bad) (bad) adc ss sbb rex.WX adcl jg cmpsl jb rolb loope movsl push mov (bad) push rex.XB or notb sub stc pushq ficomp or and popfq sub xchg push lock sahf lretw xchg ja pop push (bad) movabs cmp push (bad) lods test jnp lods mov sahf stos fistl add leaveq jnp in retq xchg (bad) (bad) (bad) insb es cs scas mov adc sbb test loope rex.X cmp add test cmpxchg cld pop adc or clc cmp or (bad) test leaveq jp sbb push or andl lods rolb rex.W lahf outsl mov (bad) (bad) decb add clc add (bad) jl psubsb or iret scas ds (bad) sti (bad) retq rex.R int3 push mov jle mov and adc xor jb adc hlt (bad) pop stos mov mov sbb jle subb int mov lahf mov movabs sahf rcrb es (bad) or js in loope addr32 sahf rex.X mov sbb xchg mov (bad) sti sub ficomp rorl xchg sub (bad) jno xchg test shll sti (bad) cmpsl lahf rex.WRB (bad) (bad) decb sarl rex.XB pop repz pop rex.X adc mov and cltd (bad) test clc gs cmpl fidivl jne mov (bad) sub cli insl cs rex.WXB (bad) fidivr (bad) or sub mov movabs not movzbw lea jmpq jmpq (bad) rex.WR cmp sub sub (bad) fnstsw sub jne fwait cmp (bad) mov rex.W or (bad) xchg (bad) mul rex.W loope mov pop xchg (bad) xor gs outsb xchg xchg imul or jo mov or sbb addr32 jl and movabs and fisubrl mov push or jno test imul sti fild (bad) adc (bad) (bad) (bad) (bad) outsl movabs cld lock mov and mov (bad) (bad) (bad) (bad) out lahf int3 test mov xor add rex.XB rex.WXB mov cmpsl rcrl or jne mov sbb jo fsubrs cmp mov push std stos mov movabs bt pushq clc cmp jnp ja neg sub shld add dec add mov and and mov bt cmc bt stc repnz jmpq bt add test jmpq lea jmpq bt test repnz jmpq jae clc cmp jmpq jae sub rol test cmp mov rcr cmp cmp mov mov sar shl mov cmp cmc xor cmc cmp cmp test repnz jmpq callq sbb add rcl rcr mov cmc jmpq callq and shld bsf movzbl add bsf jmpq stc cmc mov cmp test jmpq jne cmp movb cmp cmc stc bt test jmpq jmpq or xor mov xlat movabs insb (bad) (bad) fildl iret xor retq xor mov (bad) mov sbb xchg adc int (bad) mov xchg insl adc mov out movsb sahf mov data16 xor push addr32 int rex.XB rex.X mov sahf or mov (bad) (bad) cld pop or (bad) (bad) (bad) out test sti xchg addb or push and xchg out jle movabs adc xchg outsl out nop repnz (bad) adc or (bad) xchg sub pop and ja pop rex.WX pushq push xchg add add rex.RX iret rex.WB ja rex pop xchg mov loopne mov jge (bad) data16 jbe notl imul (bad) jnp insb nop mov pushq jns (bad) mov pop out mov (bad) add js mov fimul mov mov in sbb mov lea mov jle jne add sar lock and cmp imul repnz subl push fsubrs push mov (bad) (bad) std pop int3 lret rex.RXB push rex.XB rep test rex.RB rex.WRXB push add jnp movslq insl sub hlt sbb jne jp (bad) (bad) add (bad) (bad) callq cmp int test cltd add (bad) xor adc jb std add add add adc push sub pop std mov mov pop rex.WRXB (bad) push mov (bad) pushq (bad) sub js in mov test (bad) jge and rex.WXB rex.W mov (bad) add pop stc cmpsb mov movsb push loop adc rorl fucomip lret decl es (bad) rex.XB lea callq mov xor (bad) sbb lock mov (bad) rex.WRXB scas sbb retq (bad) (bad) pop rex.X (bad) pushq jae add pop xchg xchg jp push (bad) jo in insl add js lock ja sbb pop cmovg sub (bad) clc (bad) (bad) pop rex.W or (bad) pop mov jp or (bad) (bad) psubsb and movabs repnz push outsl mov jmpq out mov (bad) decb (bad) (bad) (bad) decl shrb mov je movabs mov fwait out push (bad) cwtl sub jnp (bad) je push xlat test pop fidiv sarb sub and mov jp cmp test pop cmp mov movsl addr32 test sti callq leaveq jmpq sbb loopne rex.R xor mull retq sahf rex.WR (bad) push rex.WRB mov fisttpll or je test push mov pop pop add and jle mov rex.XB (bad) (bad) fs rex.WR addr32 (bad) clc enterq sbb xor (bad) pushq test (bad) cld mov jae outsb (bad) (bad) (bad) incl xor jge add movabs push jmp pop (bad) rex.B sti cs push rex.RXB (bad) imul pushq (bad) add add fmul hlt cli (bad) jrcxz std push jbe outsb adc test insl mov out jle or cmp mov lea adc and orl and pop mov cmpsb jno fistpll (bad) jmpq (bad) (bad) (bad) add stc sbb jge fsubl mov lods shlb mov or test (bad) (bad) (bad) (bad) mov rcl fwait rex.WXB xor (bad) mov shlb xchg cmp sbb out loopne sbb or movabs fwait (bad) sarb cs addr32 lock mov (bad) mov push or int3 scas add rex.X rex.WRXB cmp adcl leaveq xor jge push sbb cltd or outsl cli sub out rex.WRXB xchg pop mov movabs je pushq popq mov (bad) or (bad) add fstpt outsl add lods callq shld add setno lea mov cmc test cmpb jmpq xchg jae mov add mov (bad) (bad) imulb xchg (bad) add pushfq addr32 ss (bad) rex.W cs fidivrl movsl nop push (bad) jge insb sahf int3 mov pushq cltd xchg movabs jl lahf in mov xorps callq in (bad) mov imul insl and rex.WXB fst cmpsb out jmp (bad) notl push test loop (bad) (bad) (bad) sti xchg (bad) movsl and (bad) (bad) (bad) xchg add psrad (bad) jg add add adc test mov (bad) ffreep repz push xchg adc lods nop mov out mov mov jg (bad) andl rex.WRXB mov add rex.RXB es (bad) add in and test sbb bt test jmpq cmc clc cmpb jmpq mov ds (bad) (bad) callq jne movsb adc movabs outsl pop movabs shll jns cmpsb mov and (bad) or mov (bad) mov hlt dec stos movsb callq xlat mov rex.R cld jnp hlt (bad) movabs push mov or jno cwtl rex.WXB (bad) (bad) cld push loopne (bad) loop (bad) (bad) (bad) callq (bad) or mov rex.WRXB rex.X mov (bad) xor add pushq cmp (bad) mov test cltd push fsub sub stos rolb andl (bad) ljmp xor rex.WRX cmp xchg out pop mov gs std movsb scas mov test jae jmpq mov movsbw movzbw mov mov not mov lea jmpq jmpq jmpq cmc add jmpq jmpq jne movzbw jmpq jne test movb jmpq jmpq push movsl rex.XB (bad) sub imul nop repz (bad) xchg mov test gs mov sbb push stos fimul mov out jl and cmp or in pop cmp (bad) mov not (bad) jb lea jmp push and movabs xchg (bad) lret adc loopne or lods jrcxz out fwait rex.WRX fistl lock cs and lahf xchg stc rex.WXB (bad) jrcxz pop rex.XB (bad) (bad) sti mov (bad) (bad) decb cmp adc pushfq add add or mov and rex.WRB and xchg rex.WX sarl sub incl hlt cwtl jmpq jmpq (bad) xor mov stos jle fsubrl test (bad) add mov mov neg xor not xor and dec mov jmpq jmpq stc repnz jmpq lea lea lea lea not mov jmpq je cmc test stc sub stc jmpq jne cmp clc bt cmp add stc add jmpq jmpq mov cmp jg sub test mov repnz (bad) (bad) rcll jmp rex.WX xor xchg nop rex.WB cs lcall andl mov rex.R and jle or rex fcoml (bad) pop adc rcr mov (bad) std movabs (bad) std cmp jo data16 (bad) (bad) ljmp pop out xchg mov fnstenv xor leaveq mov mov jns fnstenv out insb adc je rex.RB cmp (bad) ja (bad) push or scas mov (bad) jnp mov (bad) fwait mov add icebp enterq adc or add xchg jl xor retq add rex.X add outsl jns mov rex.WR repz push cmpsb rex adc cmp sub (bad) imul std movabs rex.RX (bad) (bad) cld mov (bad) (bad) (bad) (bad) rex outsl lods lret divl adc cmc pushq scas jle pop cmp pushfq movl mov jb fisttpl adc fwait out mov pop cmp hlt rex.WXB insb clc sub (bad) mov sbb loopne or adc loope cltd scas ja push ds je cmp lods out mov xor xchg out (bad) jmpq jmpq callq jmpq bt xor stc cmc cmp repnz jmpq stc cmp jmpq (bad) in (bad) mov sbb (bad) addl (bad) jo or mov (bad) mov pushq mov sar (bad) je and movabs movsb movabs rex.RX (bad) cmc movsl sub lret stc mov (bad) pop or in ljmp jge addr32 insl (bad) ja xchg leaveq sub rex.WR (bad) (bad) (bad) sti (bad) movslq mov (bad) push (bad) mull sarl mov sbb mov mov (bad) mov rex.WR mov movslq (bad) (bad) dec mov movsb cs or rex.WRX and sbb test pop int mov hlt in pop and rex.RB scas (bad) (bad) jle leaveq out imul xor repnz js rex pop (bad) stos mov scas push insl ss addr32 (bad) (bad) adc (bad) ss and stos add (bad) out or xchg rex.WR and (bad) or mov (bad) div (bad) push and pop iret cmc fdivrl sbb adc lahf mov leaveq mov insl mov addr32 xchg mov (bad) outsb pop lret (bad) movabs jp rex.WRB rex.WX or sbb rex.WR rex.X mov pop (bad) (bad) es and cltd and (bad) sti fsts je cld (bad) (bad) (bad) (bad) imul iret sarl (bad) fisub (bad) (bad) (bad) jmpq adc stos add js (bad) xor fwait in ja push (bad) fild sub out jo rex.WRX sbb icebp movabs mov insl mov scas test pop mov add or mov retq mov pushq jmpq bswap movsbw pop jmpq cli push (bad) out callq (bad) frstor retq rolb jnp rex.WRXB sub imul mov jbe xchg sbb mov sbb clc movslq lock push data16 (bad) adc push rex.XB xchg rorl pushq rex.WRX rex.RXB cmp adc (bad) vphaddubw xor cmp sar (bad) sti sub xchg adc (bad) (bad) (bad) std mov pop int (bad) jg push and xchg enterq popfq fdiv insb push mov xchg clc (bad) (bad) (bad) (bad) callq cs mov mov and sub jns jnp add mov mov cs sub push (bad) stos mov jp sbb sbb pushq add jmpq jmpq pop test rcrb or add int3 out adc mov jg adc mov jb cmp mov or pushfq rex.W js rex.X or jno sbb push or std push rex.WX cwtl push xchg hlt test xor loopl lea (bad) (bad) (bad) (bad) sti jo icebp xchg rex.WX (bad) (bad) decb xlat (bad) fsubrs movabs push or xchg shr in pop movslq (bad) stos (bad) (bad) xchg jns mov mov (bad) ljmp (bad) sahf mov and in xchg or mov loop mov (bad) and push rex.X enterq (bad) fnsave adc stos rcrl push testl mov mov add jl repz xlat loope or stos push cmp xor sahf rex.R movabs (bad) jne push mov cmp (bad) (bad) (bad) (bad) mov stos lret shll xlat adc test mov sbb mov (bad) sub adc int (bad) std jmp (bad) fnstcw xor sbbl cs cs int3 pop nop sbb test xchg lock jmp (bad) lahf (bad) xlat mov adc jno (bad) (bad) fwait test movabs and (bad) (bad) (bad) decb (bad) (bad) (bad) decl sahf push push in jrcxz pop lret outsl (bad) (bad) or outsb loopne fbld (bad) insb hlt ds push (bad) movsb jmp out lret lods sub jns insl sti pushq xor cmpsb rcrl push jbe push sub icebp jae mov jle sahf jno sbb (bad) adc adc xchg sbb outsb pushq sub mov (bad) fstpt jne jno retq xor (bad) fwait (bad) (bad) gs movabs shr retq imul cmp imul rex.RB mov mov lret loope movabs xchg (bad) (bad) (bad) (bad) cld rex.X callq (bad) (bad) sarl pop sub sarl (bad) std mov fcoml ss xor iret (bad) ja fwait rex.WR (bad) (bad) cmp (bad) (bad) (bad) mov (bad) adc mov (bad) sub mov mov test sbb jnp xchg subb movabs jne (bad) stos cmp cltd insb mov mov fwait subb and loope xchg (bad) cld jmp out (bad) xchg mov (bad) xlat or pop pop movabs rex.WX fcmovnu adc xchg rolb sti rex.WX movslq in cld xor mov (bad) (bad) loopne movabs movabs mov loope xchg movslq mov sub lods imul rex.B pushq cli rex.RX (bad) add movabs adc jne (bad) (bad) decb fisubrl sub or insl pop add add or callq cmpsb (bad) rex.WR xor (bad) add pop jbe fwait int jne out and xchg lret pop std mov cmp and fisttpll sahf mov sbb test sti (bad) stc stc jmpq je adc bswap shr rcr push neg shl adc xadd mov setl sbb sub lea movsbw not lea jmpq bt add cmc cmc cmc clc mov cmp test jmpq ja rol rol test sub and sub clc add and sbb mov not neg sbb bt mov cmc bt stc cmc repnz jmpq jmpq clc cmp cmp bt add cmp bt movzwl dec movabs mov cmc jmpq movb jmpq cmp jmpq jmpq jmpq je jmpq stc cmp jmpq rcrb sub (bad) push je movabs (bad) xchg mov pop outsl (bad) cmpsb (bad) jb lahf sbb (bad) stos push (bad) lods int3 jp pop jge repz or push pop repz imul movabs sub out (bad) pop cmp pop loope or add add or mov outsb add jno sub lea subps nop sti sub rcrb movabs or add xor push cmp insl cmpsb jrcxz mulb movsl hlt popfq jmp cmpsb xchg test cltd (bad) mov jns cmpsl mov (bad) icebp adc add loopne push stc adc movabs jmp test movabs xor ja fimull outsl xchg stos xchg mov test (bad) mov sub push test rolb andb and xchg or test push jrcxz repz jle retq cwtl (bad) nop stos (bad) insl (bad) sbb std or js out rex.XB (bad) (bad) jns cmpsl (bad) cmpsl mov sub in rex.XB (bad) mov callq xor pop or rex.RXB rex.X icebp sar pop xor mov and sbb (bad) gs insb push adc (bad) bnd icebp int3 repz cmp jno cltd mov xchg rex.WB callq jne jbe movsl popfq lods mov xchg fidivr mov pop push jle (bad) enterq add stos jg jrcxz cmp add rex.WRB jo int cmc jle outsb int3 mov (bad) (bad) (bad) std ja test add or in (bad) iret pushq xor nop add push (bad) test mov (bad) pop rex.XB loopne int3 pop sbb or sub (bad) mov mov push loop je push rex.RB sbb and movabs adc lods rex.RX and cmp out int (bad) rex.WXB movsb (bad) adc in xchg mov adc lods and icebp test insl (bad) fs ds rol pop sti xchg fsts mov pop jo enterq mov cmp (bad) mov (bad) pushq imul movabs sub sub cmp push adc (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq add cltd enterq fwait pop adc mov cmp xchg cmp or rex.RX fnstenv lret movsb mov pushq retq sbb push (bad) (bad) (bad) xchg mov jrcxz and xchg rex.WRX rex.XB mov cmp rex.X je xchg push imul pop test retq mov test (bad) mov mov and mull jbe pushq sti cmp rex.XB jnp cmp rex.W hlt je jmp sarl jns (bad) out jg int3 stc and mov add (bad) mov rex rex.RB icebp out sub (bad) sub (bad) (bad) (bad) decb int shll rex.WRB (bad) negl (bad) xchg clc (bad) xchg mov rex.XB scas pop bnd cmp rex.B push cmp rex (bad) mov cmp iret (bad) mov hlt je pop and pushfq sbb divb mov mov jmpq xor loop mov cwtl std jmpq nop sub adc (bad) xchg lret mov gs mov fdivrl jo jns sbb xor clc in mov vcomiss out and jo jg imul imul ja lahf ds (bad) (bad) (bad) cld rex.RB or es (bad) (bad) (bad) (bad) rex.XB mull jne repz punpcklbw (bad) jmpq sub fnstenv cmp mov pushq shrb adc sarl mov jne xchg add add (bad) mov cmp callq test movsl fidivrl adc pop (bad) out add mov mov movslq jl mov sbb adcl cmp mov mov jnp pushq jmpq adc test add fmul lret cmp fwait out scas stc cwtl mov sub sbb rorl fsts (bad) fs sbb sbb sbb jge xor rex.WB cmp adc sbb test es (bad) (bad) (bad) sti stos rex.RX (bad) mov cmp fdiv xchg or push movabs rex.WRXB cmp or (bad) xor rorl (bad) (bad) (bad) push (bad) out in xchg rex.WX rex.WX jnp xor fisttpll leaveq ja repnz push (bad) pushfq int sub sub (bad) xchg mov scas (bad) (bad) out (bad) imul xchg rex.WRX mov sbb (bad) and cli stos adc lret sti adc ficom or pushq fmull lods (bad) rex.RX rex.R add pop mov jmpq rex.WRXB rol fldl callq cli iret or scas jno xchg mov mov test (bad) push imul fimul cmp (bad) sub test cld jrcxz jrcxz in loope outsl (bad) sub fdivr (bad) (bad) sti mov (bad) (bad) (bad) decb mov mov or rex.WB sbb (bad) (bad) (bad) dec lock jmpq rex.RB push sub xchg jl pop adc rorl (bad) nop mov movsl test in rex.WXB mulb mov cmc jmpq mov loop cli loope mov imul rex.RB jns scas and out callq mov lret stos pop cmp xchg scas sbb push imul push cmp jb and icebp rex sbb (bad) sub mov pop stos (bad) sbb pushfq and mov fcmovu shrb (bad) (bad) movsb fwait sarb add xor int3 out and out scas (bad) jmpq (bad) sti push (bad) rex.RXB (bad) (bad) (bad) push mov (bad) xor cmp mov bnd (bad) (bad) (bad) callq mov xchg xor xchg rex.RXB pop mov ljmp cltd or cmp hlt popfq cltd add rex.WRXB sbb xchg push or xchg int3 adc retq mov sbb xchg mov sbb lods sahf xor or xlat outsb xchg and cmp in (bad) push xlat sbb in out xor mov mov imul movabs mov (bad) lods add and and and retq outsb cmp loop fs roll sub nopl pop test push rex xchg andl (bad) (bad) cld (bad) lret mov (bad) (bad) (bad) mov cs mov pop sub xlat jne divl scas pop jp add add jno add cs rex.X jl adc imul loop rex.X int mov sbbl and (bad) mov rex.WB scas lret mov mov sbb ja sar sete sub setno not shld mov add bsr mov cmc sub adc mov cmp clc clc repnz jmpq je bts push bswap mov stc and shl shr sub setp movzbw mov jmpq jae clc clc sub jmpq adc push rex.X repnz fucom (bad) notb cmc icebp or cmp and out iret test mov pop pop and and divb add jge (bad) fucomi xchg pushfq pop cmp rex.XB or sbb push ja rex.WR (bad) test sub pop push (bad) shrb pushq callq adc cltd (bad) (bad) (bad) cld mov (bad) (bad) (bad) decl (bad) pop movb adc repz and lods stos adc adc loopne insb int3 mov or repz movabs adc or movq add pop movsb fmul lahf cmpsb mov and xchg data16 jno xchg (bad) rex.X fsubl jg push sti retq cli push repnz ja (bad) mov mov push idivb mov bt test clc clc or jmpq cmc stc xor clc jmpq adc cmp (bad) nop rcl retq (bad) je add js add mov xlat pushfq jo or and pop xchg add cmp pop out movabs rex.RB cld movabs xchg mov rex.WR (bad) jnp and sahf movsl neg adc std sub xor sbb outsb rolb and (bad) enterq or (bad) adc rex.WRXB rex.WXB (bad) (bad) cld lods adc (bad) (bad) (bad) cmp stos rclb (bad) (bad) add jl adc jrcxz jmp mov mov add add fs repz jge movabs scas mov retq mov insl negb cmp out rex.X rex.WR xor sti add and mov ss shr jg jmpq mov add mov mov and mov loop adc insb xchg outsb xchg test shl int3 mov imul cli clc xor add add pop clc jmpq jbe clc pushq cmp retq movabs stos (bad) (bad) repnz adc and or cwtl adc xchg push neg jge outsb adc (bad) scas xchg jmp (bad) (bad) sti (bad) mov (bad) (bad) (bad) push pop xchg rex.R rex.WXB jge fwait (bad) sbb fidivrl (bad) pop xchg gs fisubrl (bad) sarb movsl (bad) cmpsb (bad) or xor xlat (bad) add pop mov retq xchg test mov mov pop int3 pushq mov mov rcll shlb retq roll scas jmpq jmpq je jmpq ja movsbw jmpq cmp jmpq je cmp cmc cmp sub jmpq jb callq bt cmp or jmpq jne bsr neg mov stc jmpq mov cmc cmpb jmpq jmpq je jmpq add rex.R jae insb jne pushq insb jbe jb (bad) movslq add adc fwait jne push (bad) adc cmpsb (bad) or movabs jle jne xchg (bad) or push mov sub pushq sahf mov jg jno movabs movabs jns outsb and (bad) push add test xor cmp (bad) push xor ficoml jne enterq (bad) fmull xchg sbb movabs and repnz cwtl hlt test (bad) (bad) (bad) sti cmpsb sar mov (bad) (bad) (bad) (bad) jge xchg test int3 bnd adc pushq sub es test xchg jb pop mov (bad) (bad) (bad) callq clc scas xchg (bad) pop push cmp data16 or xchg leaveq mov mov cli addr32 rex.WR es cld sahf mov loop push shll insb rex imul (bad) jno js sub outsl push jne enterq in mov xor std rcr ljmp rcr mov add xor mov cmpsb (bad) (bad) sub rex.WXB out sub (bad) lods mov rex.RX push ja pop cmp (bad) (bad) (bad) (bad) mov and cli movabs add (bad) es fistp sbb or loop (bad) test xlat test mov sbb mov (bad) movzbw movzwl mov lea mov movzbl mov jmpq adc sub rex.RX lock outsl cmp (bad) lret sub jb pushfq cli int stos shll lahf or loope movsq and (bad) movsl sti cmc icebp lahf add push pop movsb sub mov cltd ss cli (bad) mov movsb cltd test xchg retq sub in (bad) (bad) (bad) sti movslq test (bad) (bad) (bad) std hlt pushq rcll loopne or lock xchg iret cmpsl pop mov leaveq jp callq cli (bad) mov fisttpll pop (bad) test (bad) (bad) (bad) inc mov jo mov ficoml sbb mov imul jrcxz fdivrl add adc movsb shrl rolb (bad) fidiv push mov jne or test bt mov mov stc cmp stc jmpq outsb je stos incb fs jmp test adc (bad) or cs mov (bad) in clc pop (bad) rex sub repz stc test xchg xchg or out and out clc or loope or mov fidivl std (bad) fimull (bad) jl outsl mov xor xlat sub rex.RX rex.B rex.B rex.WRXB cmp add sub (bad) and (bad) adc sbb mul cmp (bad) (bad) decb mov cmpsl cmp fadds add add ja and lret insb addr32 (bad) (bad) sbb callq rex.WXB subb rex.WB rex.B cmp rex push xor in mov jo cltd int (bad) roll int3 (bad) mov movsb sub sub scas adc sbb ds rex.WB in (bad) add lods iret test pop cmp cld negl repnz rex.RX bswap test imul in (bad) cmp mov rcl je retq (bad) pop notl rex.WR (bad) (bad) mov rorb in addr32 lret mov icebp fdivrp sub mov callq mul (bad) imul jge xor movsl rex.RXB jmp mov (bad) jp (bad) sbb ja mov hlt add add or sbb in (bad) in out mov test (bad) sub sbb pop push mul rex.WB mov adc gs pop adc lahf loopne out (bad) mov (bad) lret scas jmpq jmpq rex.RB jbe (bad) pop int3 callq movsb shr fwait lahf (bad) adc mov mov or jbe test in ficomp xor mov fstpt adc push notb fnstenv lods xorb mov roll movabs test iret jb jns and sub fidiv or rex.X scas in (bad) cmc jo pop lahf xchg mov jno imul in rex.RB leaveq (bad) or jge out xchg fs stos stc push add jbe add or xchg insb (bad) (bad) (bad) sti jno jae rex.XB (bad) (bad) incb xor rex.XB pushq in in lock mov (bad) (bad) (bad) incl cmp rex.X rex.WR (bad) (bad) iret cmpsl (bad) movsl xchg sti (bad) jns (bad) (bad) int add or xor movslq pushfq andl iret mov xchg and sub test add jmpq jb je neg ror push shld mov bt shld and sub lea setae jmpq jmpq xlat sbb cmc enterq rex.WRXB imul sbb adc add push mov rex.RB movslq jo rex jp cmp hlt jno pop xor repnz pushq fistl movslq xchg cmp or mov in rex.X imul adc (bad) cld (bad) push mov sbb (bad) (bad) (bad) mov push add test (bad) adcl imul or lock rex.WRX or jbe adc or add add rex.WXB ss cmpsl es fldt (bad) rex.R lahf test cs sub test punpcklbw rex.RX or out add rex.X (bad) leaveq jo pop (bad) sub hlt and cmpsl cmpsb pop mov rex.WR (bad) rex.WR cs sti fimul push mov cmp mov add shr (bad) xchg rorb adc sub mov add xchg lahf in mov icebp cmpsl jrcxz fistp push rex.WRB sub rex.X fistp mov mov (bad) (bad) (bad) cld and (bad) sbb (bad) (bad) (bad) mov rex.RXB mov rex.RXB fdivs mov sbb and jne add roll or insb push add add sbb (bad) (bad) fisttpll (bad) repnz sub imul out jno mov jnp stc jge rex.R mov mov pop in in stc mov nop mov pushq mov cmp mov lret lcall (bad) scas mov rex.W mov adc rex.WX rex.XB push nop adc out adc fadd sbb rex.WRB jns or outsl mov pushq rorl sbb mov test rex.WB movsl rex.RB std clc test ss pop mov (bad) andps (bad) jno mov jb mov movslq cmp (bad) (bad) sti jne mov (bad) incb rex.RXB cmp push cmp xchg out jmpq fistl rex.RXB movslq retq sbb xor push mov and (bad) or movslq pop outsb leaveq jp push rex rex.B or (bad) movabs xchg cli rex.XB lret mov mov lret jne mov jmpq jbe outsb xchg cmp rex.X lods (bad) mov cmp (bad) or and (bad) (bad) loopne lods cmc (bad) mov mov mov loop cmp rex.W mov ss rex.R rex.WR in rex.WX lods imull adc rex.X jo loope frstor cs (bad) rex.XB and cs (bad) (bad) sti jrcxz cltd pop mov (bad) (bad) (bad) je push lret movabs xor retq (bad) mov lret cmp (bad) pop cmpsb popfq rex.WRXB and jmpq push pop jo (bad) (bad) (bad) push retq cmp enterq stos (bad) insb or mov push (bad) pop rex.WXB sahf sti and loope movsb xor in (bad) mov repnz cmp pop (bad) sub mov int3 enterq jmpq jmpq lea jmpq xchg pushfq push addr32 pop cs jnp gs add loope cmp (bad) cmp mov jle add movsb jp pushq jbe je rex.X pop outsb or insb rex.RX jnp in pop gs mov fcompl xor (bad) (bad) je insl sbb pushq (bad) (bad) std jne adc (bad) or (bad) std (bad) pop lock push (bad) (bad) (bad) incl stos enterq cs fwait pushfq scas leaveq icebp rex.WXB (bad) and or mov (bad) mov popfq scas lea rex.WRX mulb gs jno int3 (bad) mov int test mov add seto bswap bswap movsbw lea jmpq add rex.WR (bad) imul add cmpsb hlt in out mov xor (bad) push orl (bad) jle sbb or adc (bad) lods pop jns rex.RXB es icebp fldl rex.X int3 out adc jl cmpb fnstenv mov std (bad) xor jnp pop lahf mov or (bad) (bad) (bad) std insb lret pushq (bad) jmpq scas cmp pop enterq fildll jb cwtl or (bad) jns rorl xchg mov scas add sbb shrb rex.WRXB add movsb (bad) nop cmc and (bad) push hlt jb stc clc test cmp jmpq je movzbw cmp btc mov push not mov inc shrd btr sub movzbw lea jmpq cmp repnz jmpq sar jrcxz mov adc movabs rex stos (bad) (bad) rcr iret movabs mov mov addr32 insl (bad) or xchg movabs mov cmp sti sub imul jle addr32 test (bad) xor sti lahf icebp (bad) add fldt add sbb rex.WRXB xor jge xor sbb (bad) (bad) decb test (bad) rex.WXB cltd fbstp or add and lret (bad) decl addr32 test retq xchg loopne cmp jle sbb adc mov (bad) movabs rex.XB (bad) (bad) add clc ss cmpsb mov xor rclb sub cmp int sti callq imul and jl cld loop add jp fisttp or test (bad) insb push jg scas ds jl enterq and cmc movabs sub lods insl push movq mov cmpsl movabs (bad) (bad) int test pop xchg (bad) mov test nop scas adc (bad) jae lret (bad) (bad) (bad) gs imul (bad) fs mov fwait cld jg fistpll (bad) (bad) (bad) sti mov adc incb or hlt sub xchg (bad) jmpq (bad) (bad) (bad) inc fs movl rex.B shl (bad) mov adc cmp (bad) rex.X shrb jae in imulb (bad) pushq rex.WX pop repz cld rex.RB mov iret iret add (bad) jmpq jne pushq jmpq mov hlt lret std xchg nop add jnp mov (bad) xchg pushq xor rex.WXB repz shrb jo lret push or jb jns or rex.XB and xor fsubrp adc xlat flds popfq imul hlt jmp or (bad) hlt (bad) loope mov mov add mov lods sub pop (bad) ror in jae out (bad) sti (bad) cmp sar (bad) cld sbb jl (bad) (bad) (bad) (bad) stos (bad) icebp pushq jne scas adcl lret add add adc clc repnz out (bad) sub pop xor mov cmp pop fimul xchg std mov mov je adc icebp push or or (bad) stos mov imul mov mov ja adc cmc rcr mov add cmc shr rcr ror add jo or or xchg not or mov or shr rol mov clc cmp push not shld mov cmc cmp stc sub jmpq (bad) or (bad) xlat or xor rcr or xchg repnz movabs lret test scas (bad) or mov in movsl sbb lret sti outsb pop mov cltd int3 push (bad) push hlt adc mov (bad) cli xchg push jl rex.WRB lret add fmul decb or xchg cmp xchg imul mov xlat lock in popfq xchg jg mov (bad) (bad) sti pop (bad) jge mov (bad) (bad) std (bad) movsl popfq (bad) out jl (bad) (bad) rex.RXB add push (bad) mov test scas movabs in (bad) xchg rex.RB (bad) lock or and stos (bad) xor xchg (bad) xchg mov out (bad) adc mov cmc cmp notl pop movabs mov (bad) mov cmpsl lea leaveq jmpq test cmp stc add jmpq cmp jmpq jmpq xor scas ja in fdivrs loope adc pushq or in std loop and cli cmc out sbb (bad) xchg enterq jno mov fwait scas movsb shlb cmp mov rex.WB fwait and sbb (bad) mov (bad) (bad) sti (bad) (bad) sub outsb rex.B ss int3 test rex.WRXB xchg test xor sti sub or out and sbb mov insl popfq in cmp (bad) jg cs xor add add sbb cmp clc negl add adc or movabs add ja sub add sub loopne (bad) addr32 rex.XB adc ja (bad) lock rcl sub btr add lea add sbb inc stc cmc mov seto shl mov test repnz jmpq cmp sub jmpq lea (bad) imul stc push sub int3 stc cmpsl retq scas push pop (bad) jp cmpsl adc mov movsl mov out (bad) jrcxz adc jge rex.WRXB mov xchg (bad) mov push jno mov xor fdivs outsl pop or movabs rcl cmp (bad) jo (bad) and movabs movsl fidivr data16 imul add nop add in xor (bad) cld adc pop (bad) repnz (bad) (bad) callq cmp adc nop adc cmpsl rorl rex.WRXB (bad) pushq cmp add or outsb xorl test out mov fidivl retq insb (bad) rex.RB rex.WRXB xchg xchg xor and xacquire mov push adc int add (bad) mov (bad) out mov enterq sti (bad) callq xor bswap cmp not add inc clc xor mov bt clc bt clc cmpb jmpq bt bt rol jmpq jne rol neg mov cmp jl bt add cmp stc cmp movzwl rol btc dec cmc mov clc bt add stc test bt jmpq fiadd (bad) and out jp lahf sarl out xlat cmpl sbb cmp fstpt or xor mov ds callq mov pushq or bsf mov pushq jrcxz movabs sti (bad) (bad) (bad) (bad) cmpsl cli sub movsb mov (bad) imul (bad) and sub lret xchg (bad) outsb mov xlat data16 nop add ja sti scas movabs mov retq mov cmpsl or adc popfq cli add mov mov push or fnstcw jge xchg jg repnz mov cmp xchg mov (bad) scas (bad) mov jmpq jmpq jmpq jmpq (bad) (bad) mov (bad) (bad) add (bad) rex rcl add push push popfq (bad) (bad) pop mov sahf xchg rex.WX pushq rex.X stos (bad) (bad) int3 ss pushq pushq mov and fidivr loope (bad) (bad) (bad) (bad) and mov cs mov jae xchg mov xor jo (bad) (bad) (bad) decb (bad) (bad) (bad) decl jns (bad) imul mov xchg (bad) andb add icebp adc shll mov js xchg fdivr rex.WX cmp add xchg mov add rex.R lods rex.WXB fwait mov (bad) or stos rex.WRXB (bad) loop (bad) movabs (bad) (bad) or retq push clc mov sub add mov xchg cli clc shl jmpq mov mov not lods cmc test cmp test neg stc xor clc cmp test neg stc test bt cmc add stc shr jmpq mov (bad) mov lock js (bad) popfq out xorb (bad) stos push and fiaddl movabs lods (bad) std clc (bad) mov rex.WXB sbb rex.WRB cs imul std fcmove fcomps rex.WRX sub test mov pop rex.X (bad) jae mov (bad) jmpq rex.RB out xchg movabs pop loop (bad) hlt sbb enterq cs rex.RXB jb sub xchg jne rex.WR push rex.R rex.RB pop (bad) xlat mov mov insb mov fadds push add mov (bad) push rex.RB (bad) andb gs and mov (bad) add rex.WR and std imul stos fldcw rex.WXB xchg and add (bad) in sarl movabs shrb pop sub (bad) rex.RX fs lea repnz jo xchg xor mov pop test jrcxz,pn mov clc (bad) movabs (bad) (bad) (bad) jbe rex.RX (bad) (bad) sti loop xor (bad) (bad) jb test outsl sbb or cs (bad) leaveq and jrcxz (bad) (bad) push popfq rex.WRXB rex.RXB (bad) and jg and adc adc test jmpq sub sub jo fcomps (bad) push (bad) lret (bad) jae fisttp test movzbl movsbw mov xchg setg movzbw jb mov not lea xchg mov movsbw movzbw jmpq ja clc cmc stc imul bt stc add jmpq bswap lea jmpq jne clc bsr movsbw add xor shl shld cmp mov bt rol sub mov add ror not setp not mov stc cmp test jmpq xchg jns (bad) punpcklbw retq adcl mov mov pushq ja je push ds add mov test xor (bad) xor imul callq callq adc add add rex.WRX in decb xor loopne (bad) fs (bad) jge rex.WRB rex.WRXB (bad) (bad) (bad) sti xchg (bad) (bad) (bad) sbb mov (bad) mov movabs (bad) (bad) lcall leaveq in (bad) add xorl mov pop notl mulb test lods add push ds (bad) rex.WRXB jns out mov sbb out mov (bad) retq sbb je stc jmpq shr int (bad) in (bad) and data16 adc mov (bad) mov (bad) faddl repz nop lret xchg fisttpl jns je sub jne push (bad) mov push (bad) fwait jl xchg in xor es mov rex.RX rex.RX mov movabs shr adc movabs test test lret sub (bad) (bad) sti (bad) mov fidiv (bad) (bad) (bad) (bad) fs rex.WB cs mov popfq mov cmp repz out (bad) (bad) (bad) jmpq rex.WRXB repnz retq fistpll rex.WXB rex.WB mov in fwait (bad) adc jle pop test adc imul hlt xor mov clc (bad) mov (bad) (bad) (bad) out rex.WX ds sarb fidivl (bad) outsl jmpq xor clc cmp repnz jmpq pushq jmpq jmpq push cwtl and fidivr (bad) adc pop out xchg (bad) push cmp movsl rex.XB (bad) pushq (bad) rex.B lret adc or fnop or adcb shll iret cmp fldcw movslq mov (bad) sub push (bad) retq movsl js rex.WR shll fnstsw (bad) fist jae jbe jno (bad) int3 xor xorb mov mov fcoml xor in (bad) (bad) lock mov retq imul rex.WXB (bad) (bad) (bad) sti mul jmpq (bad) decb jns mov add add ja adc (bad) jle repnz mov mov rex.WR lea test callq test cmp xchg add jbe mov (bad) ja (bad) mov mov frstor repnz sbb rex.WRB rorb test add je and (bad) jl sti hlt movabs jp (bad) (bad) cwtl rex.B push xor sub stos adcb sub popfq jns callq out int rolb lret cmp insl notb in or push loope (bad) (bad) (bad) cld mov test (bad) lcall jbe sub (bad) xor (bad) jo orl in pushq xor mov (bad) int3 cmp sub add add (bad) rex.W lea ja movabs ja xor jnp in es or jo xor jle iret hlt push jne in push or (bad) scas (bad) cwtl mov adc and leaveq mov fldl add mov sbb jmpq xor (bad) movslq pop (bad) cltd rex.R rex.XB cs cmp out clc add push and add jno stc xchg rex.XB jge iret mov movabs pop cli (bad) cmpsb fwait negb stc xchg jle movsl imull test (bad) (bad) cli repnz (bad) (bad) (bad) std (bad) iret mov mov insb clc lea sarl mov sbb mov std (bad) stc sarb cmc cwtl jmpq lret (bad) stc pushq (bad) (bad) pushq test lods and sub xchg mov imul xchg add negb mov (bad) test roll jnp (bad) movabs movsbl mov jmpq jmpq and (bad) cmp and data16 jle add add adc in shlb cmpsb (bad) cltd setae xchg out insb adc (bad) rex in add lahf stc rex.RB lea sub push rex.WRXB rex.XB (bad) (bad) jns (bad) adc std repnz fwait jne jg push xchg data16 jge add pushq xor (bad) (bad) test rex.B sbb pop pop movsb jno pop mov loopne adc rex.RX (bad) (bad) (bad) jno iret and jne (bad) sub (bad) sti out jp and icebp and (bad) out add stos (bad) rex.WX mov jmpq movsl (bad) (bad) jbe add (bad) xor rex.W or sbb callq rex.WXB btr inc and mov test and bt cmp stc add jmpq sub clc test cmp xor bt jmpq jae bsf mov adc mov sar bswap btc mov stc jmpq jmpq jmpq jmpq jmp mov jp rex.WR adc (bad) and outsb pop jle es stos lahf iret mov cmp lea (bad) add sarl xchg cmp jbe cbtw mov mov sti movabs jge (bad) (bad) (bad) sti xor jns pop push and rex.RX popfq rex.RX sbb push xorl push mov in retq popfq rex.WXB (bad) (bad) (bad) std cld rex.WXB cmpsq cltd or mov pop fsubrl or hlt enterq sub (bad) callq cs mov pushfq (bad) mov sti jbe repz mov hlt rex.WRXB cli int jbe jb (bad) (bad) ljmp (bad) xor (bad) testl sub mov sub jb pushfq mov (bad) lret mov lods cmp pop adc push pushfq iret fnstenv pushq (bad) and xchg (bad) sti push test shr clc sub sub rol mov bts add test adc sbb mov adc bt adc sub mov stc clc cmp repnz jmpq jne dec bsf (bad) hlt xor bsr clc or bt mov add add ror sar mov bt clc cmc test jmpq jmpq cmp lret insl (bad) movabs (bad) pop test in mov rex.WRX ds jg xor cs (bad) adc in (bad) shrb mov mov rex.B cmp or add insb imul and sbb movsl xor popfq push (bad) pop (bad) (bad) (bad) cld retq js (bad) (bad) (bad) callq sahf jno jo pop repz sbb movabs cmp mov sarb mov add push or xor xor test xor (bad) (bad) and xchg out rclb stc (bad) (bad) mov scas cmp mov lret add xlat jle mov mov leaveq push (bad) jno sbb sbb rex.RX mov cmp cmp xchg pushq mov jp and addr32 ja sahf roll (bad) (bad) xlat mov insl or sub movslq adc jle retq mov pop mov pushq (bad) cwtl mov cs lea rex.WX jmpq and xor in pause movabs jg retq mov jne rex.X fdivr icebp int movabs repnz (bad) (bad) sti testb (bad) incb incl jno in (bad) (bad) adc (bad) or add add cs (bad) cmc add add jmpq push mov movabs xor (bad) mull ss std pop rex.XB cmp cmpsl (bad) mov pop clc lods mov rex.WRXB mov jrcxz mov retq xchg loope add test cmp jmpq cmp test or jmpq jne jmpq jmpq not mov jmpq jmpq sbb cmp sbb xchg out lods mov mov mov je sbb mul ficoml (bad) jb imul retq (bad) (bad) enterq mov cmp or lods rex.R pop jp nop test adc idivb rex.B rex.W sbb in (bad) rex.W rex.X adc sub (bad) rex.WRXB sbb mov (bad) (bad) (bad) decl popfq push cli jbe and jmp (bad) mov (bad) add retq jl add add push xor rex.RX and sbb jo mov fdivl add fdecstp cmpsl xchg jns rex.WRB lret or outsb adc xor cld push out sbb popfq xor rex.WB (bad) mov sub mov (bad) mov in (bad) (bad) jmpq (bad) cmp (bad) ja xchg rex.WX rex.XB enterq (bad) (bad) rex.RXB addr32 push ss mov (bad) cwtl retq xor popfq add and push add adc out (bad) out mov ss push outsl (bad) jge mov (bad) rex.WB rex.WR (bad) (bad) cld mov xchg or (bad) (bad) incl pop in cmp retq xchg jno or outsb insb int3 lahf xchg rex.R test (bad) mov rex.RXB cmp xchg mov out mov adc xor (bad) add sub add add or mov mov adc js rex.WRX movsb or sub cltd (bad) (bad) jb adcl push loop repz xor lods enterq iret cmpsl mov add scas or addl ror or adc rol mov bsf shl setns mov not mov stc clc jmpq mov adc mov xor nop push add (bad) cwtl jnp mov loopne adc cs adc outsl rex.WRX cmp xchg push jne rorl mov and mov scas add in mov movabs cli repz mul or (bad) (bad) (bad) std pushq add add (bad) pop in (bad) xchg rex jb push sar and pop (bad) or xchg (bad) lods sahf andl cmp enterq outsb add rex nop repnz jb sub xchg (bad) je lar cmp in mov mull adc sbb rex.RX int loopne stos mov out repnz enterq add jmpq je jmpq lahf in adc and addb out jg insb push rex.WXB (bad) lret lret in out xchg adc cmp (bad) retq or repnz xchg add xchg sbb sbb int3 (bad) cmp rex.WRX fdiv sbb test (bad) sti xchg xor (bad) (bad) (bad) (bad) (bad) hlt repnz iret sub ror test add fwait cmp mov std stc rex.WXB mov and outsl rex.XB scas test sub push scas (bad) or (bad) pop (bad) (bad) adc cmp xchg jnp (bad) (bad) (bad) (bad) (bad) loopne rcll mov (bad) sbb mov in jnp mov jg mov loop cltd pushq (bad) sub (bad) xor xchg mov insb fdivrs mov mov callq lea jmpq or out adc xchg rex.RB rex.WXB repz sub xchg rex.R test int3 push pop pop xorl cmpsb xlat add pushq test add add or rolb adc pop push jns outsb int3 rex.WR shll (bad) push std repnz xchg gs (bad) sub je pop jg (bad) (bad) (bad) sti push mov (bad) (bad) std out mov (bad) jp adc fisub imul cmp xchg stc callq jmpq (bad) clc popfq cli mov pop nop add test in (bad) adc rex.RXB mov xchg rex.R xor (bad) (bad) incl enterq rex.X nop (bad) (bad) mov cmp (bad) jge (bad) scas fsubrl (bad) fwait idivb (bad) sarl add movabs or mov add (bad) xchg jg add jle icebp xchg (bad) mov xchg fnop imul popfq mov add (bad) xadd sub push sbb mov add scas pop sbb xchg loopne mov (bad) rex.WXB cltd or adc fcomps iret clc icebp (bad) icebp movabs adc fmuls push sub mov fcom pushq clc pop (bad) (bad) jae insl sbb punpckhwd sbb (bad) (bad) sti int adcl loopne adc fnstcw xor sbb (bad) (bad) (bad) (bad) ffree rex.RX sub jno and jbe xor adc fbstp mov scas int jne mov movabs je xchg add stos (bad) jp pop je cmp sbb (bad) xor sti (bad) jmpq jmpq (bad) lods adc (bad) (bad) or ja sbb stos lret adc lods cmc fiadd sub pop sbb clc out jle sbb jge push xor test mov rex.WR insb pop mov sub jmp rex.B lea add clc cltd jmp adc cmp sub (bad) adc cmp and (bad) (bad) (bad) sti movabs xor enterq add (bad) (bad) (bad) pushq sub push or fstps pop cmp push loop cwtl rex.WB rex.WRB test sub (bad) add pop (bad) gs xlat jb xor and pop (bad) jg mov (bad) lods iret sbbl (bad) in mov mov adc mov loopne repz xlat lea loopne js cmp callq (bad) nop pop pushfq sub pushfq push outsb xor mov cmp cmpsl jbe (bad) mov jno in fsub mov pop sub in pushq fdivrl jne push rex.RXB mov adc (bad) mov jns outsb decb sbb or mov (bad) idivl ds rex.WRXB lods xchg rex.WX pop (bad) pop (bad) (bad) in jle jge add push test pop cs fsubrp xor mov js sub jnp (bad) mov or (bad) (bad) (bad) decb (bad) jmpq or lret add sahf mov (bad) retq add fbstp sahf mov movslq or test lods add adc mov add pop insb cli cmp or rex.WXB rex.WB fwait lahf jmpq mov jns (bad) mov (bad) adc fistpl fisubrl cli pop movslq (bad) (bad) (bad) or sub push retq and mov in and (bad) test xchg movsl scas rex.XB (bad) jns xor jne int3 lock rolb xor (bad) (bad) mov fs lods mov imul add out add mov test mov andl pop sahf rol sub (bad) cld in (bad) jo push xor rex.WX rex.WRXB xor xor add xchg enterq lods rex.WRB rex.B and cmp (bad) cmc mov mov (bad) (bad) addb mov push (bad) mov (bad) mov rex.WRB lock (bad) (bad) (bad) push (bad) adc (bad) push push xrelease scas mov (bad) cli fdivrp (bad) (bad) callq sub in (bad) icebp xchg add mov push or jbe cmpsb mov imul rex.WR rex.X or mov push sti imul rex.WRX test movslq push or repz decl add jmpq mov mov jmpq leaveq cli xchg mov (bad) (bad) add (bad) je movsl cli repnz xor scas (bad) retq (bad) xor int3 scas movslq sub add xor callq (bad) rex.WR add ss loope pop mov and sti push out sub sbb mov push adc out pushq pushfq push enterq rex.WRB xchg (bad) xchg xchg or xlat hlt add int3 mov (bad) (bad) decb (bad) (bad) (bad) decl mov xor pop cmp pop enterq out mov shrb xor jno (bad) sub leaveq outsb movslq jmpq negb rex.WRB rex.X es orb mov sbb pop je in rex.WRB or cltd cli callq out or out jmpq jne jmpq clc add cmp cmp bt clc movzwl and cmp mov clc add clc stc mov bt cmc clc test test jmpq jrcxz callq hlt (bad) pushq sub rex.WRX add movabs pop or movabs subb fcmovnu (bad) mov insb lret mov jle (bad) mov es movabs in pushq lock lods leaveq mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) jge xchg je fdivl nop movslq mov (bad) js xor xchg adc xchg imul fsubrs add (bad) push or mov movsl std push add adc sub pop int (bad) pop fsubrs xchg and jle mov fnstenv retq mov rex.WRXB jg cld mov rex.XB sbb rex.WR rex.WRX (bad) pushfq mov rcrl mov ficoml fsubrs pop not mov mov not jmpq jmpq adc retq rex.WRXB and (bad) callq in out adc es (bad) andl mov xchg int3 adc cs pushq adc mov push sti jp (bad) js xor pop push (bad) mov (bad) test outsl mov pushq in mov adc mov mov int lods fnstsw push test scas test retq (bad) (bad) cld or jmpq (bad) (bad) fwait jb cli loope jb,pt (bad) push add add sbb rex.WRB rex.WRB (bad) xorb test xchg fsubrs rorb cld push sbb rex.RB repz lock (bad) add addr32 cwtl sbb sub cmp xor cwtl mov lock xchg clc jmpq clc rex.RX xchg xchg outsw (bad) mov imul insb push or add test pop mov xor subl cmp sbbl adc stc ds mov xchg (bad) (bad) (bad) sti mov out notb pushq (bad) (bad) std or movsb rex.XB fldt add rex.WB scas sbbl (bad) (bad) decb jb rex.WRXB add or fsubp push adc push xor popfq xor push icebp lock (bad) rex.WRXB or rex.RX int3 pushfq add mov int (bad) mov rex.X es sbb imul bswap bswap movzbl jmpq imul test add jmpq xchg rex.WRB (bad) xchg int adc neg hlt hlt (bad) in cltd rex.W gs adc add xchg mov lods jg retq lahf sbb rex.RB loop mov (bad) ss cmpsl imul movabs jno movabs (bad) cli lahf imul mov jb cwtl cmp pop jrcxz mov out lea (bad) rex.W test fdivp imul (bad) (bad) (bad) cld pushq (bad) (bad) (bad) (bad) stc rex.WXB mov mov jbe add jg and jmp mov jp (bad) hlt gs stos sub fwait (bad) (bad) (bad) jnp rex.B cmc movsl (bad) cmc hlt pop push cmp pop (bad) mov in js repz xchg mov sbb xchg xchg sub iret lahf mov (bad) mov repnz addl lock jmpq stc cmp and test bt add jmpq je jmpq and cmp sarl pop xor jno fsubrl enterq (bad) imul sti add (bad) pop ja mov decb int3 in mov add (bad) (bad) lock movabs mov mov (bad) (bad) (bad) stc out mov mov (bad) jnp (bad) rex.R adc xor cs push repz cmc adc cmc xchg xchg add fnop sbb movabs adc fistl leaveq (bad) (bad) (bad) cld or adc scas std mov fwait mov xchg ds addl or rex.B out or xor (bad) outsb ja add (bad) or cmp fcomps pushfq (bad) jno add je fsubrp outsl cmp insb mov jnp (bad) (bad) (bad) std mov lahf fsts rclb insb subl out (bad) fcmovb test add and jmpq sysret (bad) jne jbe (bad) test push callq mov and pop adc shrl (bad) cmpsb out rex.RX xchg cli or sbb sbb test xor xchg repz add bt clc jmpq test xchg clc mov sbb or cli jrcxz pop cmc rclb (bad) (bad) (bad) fsts (bad) rex.WRB rex.RB (bad) sub push btsl mov adc xchg push adc es in in cmp mov mov mov cmpb mov (bad) (bad) (bad) sti cmc (bad) callq (bad) incb cltd xor popfq rex.WR movabs rex lods jg mov loopne clc add add rex.WRB rex.WRXB andl pushfq and mov clc fdivl test mov pop repz movsb cmp fldt enterq adc jmp rex.B rex.WXB insb rex.XB sbb movslq gs repnz jmpq jmpq hlt movslq adc mov sahf shlb pop adc mov add repz std (bad) mov (bad) xor xchg in es rex.RXB sbb subb jg (bad) ficoml fwait stos jle out (bad) movabs xchg adc push int3 imull rex.WRXB fdivrl or test (bad) imul decl pop mov lahf data16 xchg pop stc loop mov (bad) fnstenv lea rex.WRB jrcxz pop sbb loop callq (bad) (bad) jae pop (bad) xchg (bad) lret cli jp pop fistpl sti movabs (bad) (bad) (bad) (bad) lcall rex.WR out sub mov pop xchg test rex.RB mov sbb push sti scas xchg scas xchg out js or insb pop int3 (bad) lea loopne sbb pop and cmc pop out sbb or rclb sbb loopne (bad) push rolb cld fstps rex.XB jae rex.B jge callq imul out jge movslq cmp retq mov cli push (bad) cmp mov rorl jno adc sbb xchg cmpsl jno xchg (bad) rex.WXB rex.RXB pop rex.RX jae lods xchg insl (bad) jrcxz (bad) (bad) sti popfq or pop mov sub xchg es fnstcw cmp jl xchg (bad) (bad) (bad) ljmp sbb add rex.W callq sbb retq adc and nop mov and sbb add outsb sbb or nop mov sbb insl popfq mov divb jb sbb add add or (bad) add add add add add add add push (bad) add add add add add rex.WRXB sub fildl add sbbb add add mov add pop sub jne sub (bad) xor add mov add sbb repz add fcoms add idivl add ficomp add add add sub add add mov sub add add mov add add gs movsl sub and xor rex.WRB lret cltd adc (bad) xor rex.RXB xlat pop scas test or (bad) pop in and (bad) js mov add xchg xchg mov js mov jns sub xchg and (bad) out xor fistpl or jmpq (bad) and stos or jmpq mov pop jg xchg and out cmp mov xchg sbb sbb or imul insl movslq pop xchg rex.RX mov xor cs mov out movabs test pop rex.RB rex.R cmp repnz jle out add adc mov out movslq mov xchg rex.X hlt movsb jrcxz adc jns jns ja jl (bad) movsb (bad) (bad) sbb orl jne jno mov mov fs (bad) mov movabs xor in (bad) (bad) loopne in cvttps2pi push scas push callq rex.R fchs adc lods lea (bad) xchg rex.RX rex.WRXB mov ficoml xor pop xor cmp push movsb rex loop loopne mov leaveq cmp stos cmp imul jge mov sub pushq jle insb sbb iret mov add (bad) movsl push rex.X xchg jmp addr32 callq (bad) (bad) (bad) mov push lea fwait mov (bad) jnp in xchg in scas (bad) rorb add push xor sbb pushq xor (bad) jae leaveq popfq adc stos cmp push repnz (bad) (bad) shlb sbb movabs (bad) roll fcompl (bad) xor (bad) xchg fs rex.R rex.WX sbb je insb sbb movabs and pop cs jne (bad) rex.WR xchg adc xchg pop cmp sbb adc (bad) and je test mov and (bad) movsb add rex.WRX pop jmp pushq sarl (bad) (bad) movabs (bad) mov xchg (bad) rex.R jno (bad) rex.RX cmp push xchg fs scas sub (bad) lret (bad) rex.X test xchg test fwait mov sarl stos rex.WR in fldcw jb loopne nop out mov pushq outsb retq xchg cmpsb mov rcll jne (bad) clc mov mov int rcll cmp jo adc movabs mov fsts (bad) mov enterq (bad) out xor and sub test adc (bad) cmc and xchg mov cmpsl (bad) stos callq (bad) (bad) xor rep adc jbe cmp shll sub sbb fiaddl or es hlt stos adc ficom in mov cltd retq lret sub movsl sti rex.WX movabs (bad) rcl fildl callq gs (bad) adc adc mov clc mov sub fwait adcb sub lret fwait cs push add rex.R cmp test lahf lods pop sbb rex.WR or rex.WX (bad) xchg sbb cmp fadds push mov mull ds lock jle fistl (bad) clflush lret or imul lods cwtl cli pop rex (bad) pushfq mov (bad) mov icebp or (bad) push rex.R shll mov mov cmp cltd test sub (bad) shrb es imul and add stos and rex.RXB pop rorb adc cmp mov in movabs mov fs xchg (bad) mov pop ror pushq cltd (bad) mov cltd rex.RXB jbe add jl pop enterq addr32 sti mov and push je jmpq jmpq in adc shrb mov (bad) sub es add jbe adc enterq push cmp rex.WRX es jrcxz out cmc roll jae movsl jae jns (bad) mov test lret movabs out movabs xchg jrcxz rex.RXB out push fsubr rex.WR int3 add rex.WB jmpq gs cmpsb jae mov rol adc mov rex.W pop cmpsb js (bad) (bad) or xchg mov rex.RX xor (bad) cltd (bad) fbstp test cmp rex.RX sbbl pop vmread mov mov jns lret rex.RXB pop jno,pt mov rex.XB orb sarl sub jmp push push test add mov retq xchg imul or adc std mov scas (bad) pushq lock idivb movabs pop mov xor in fimull xor sbb imul xchg std xchg callq adc (bad) outsl mov cmp (bad) mov (bad) cmp sub fstpl xor jrcxz add fcompl jb xchg out sub movabs push (bad) sti cmp (bad) mov in jge lret add (bad) iret fstl fimul xchg mov rex.WRX pushfq out lret jo (bad) in clc leaveq (bad) or gs in test sahf rex.R jle xor (bad) pop (bad) (bad) test cmp in (bad) push (bad) (bad) hlt xchg outsl sbb data16 leaveq cltd pop imul repz pushfq add outsb push mov cmp sahf mov cli movabs xchg (bad) and addr32 xchg cmp pushq lods jp faddp and data16 insb rex.X mov shll (bad) cld fs rex (bad) xchg (bad) xor (bad) mov outsl jl pop or add lret jmpq int3 fcoms movsb add pop jne sahf jle scas pop in popfq scas xchg (bad) (bad) xchg lret or adc xor adc mov jnp (bad) imul (bad) hlt stos xchg sub (bad) stos imul jae cmpsl xor test (bad) xchg sub mov test (bad) mov and jae scas gs jo xchg faddl fcoms outsl add rex.W rex.WB xor (bad) sub fs test rex.R enterq fist (bad) fsubrs lret imul add add xchg and retq (bad) pop push xchg xor movsl outsb fs (bad) loopne clc mov es rex.WXB mov xchg cmpsl jns sbb mov icebp rolb sub add add (bad) in push add mov rex.WR pop mov jno fstpl pushq xchg setbe jnp repz and std sub and data16 movabs rex.R sahf loope addr32 loop mov in xchg (bad) and and hlt mov int xor (bad) je sub sahf sub sbb add sti movslq mov (bad) xchg pop (bad) or in push cmc bsf adc and jl ja sbb push rex.WRB cs rolb xchg fwait movabs (bad) cmp (bad) mov movabs pop (bad) (bad) sbb enterq scas (bad) sub cli lock (bad) xlat cmp rex.X (bad) (bad) stc mov lock stc movabs rex.X adc jmp and icebp int movl or mov pop pop out out jne movabs lret jl (bad) mov scas jg fldl add fldt add (bad) (bad) leaveq movabs mov mov outsb (bad) sahf sub retq test push cld and or jbe imul pop xchg repz jne loopne (bad) decl jno mov sbb rex.R ja fs (bad) (bad) movabs (bad) adc (bad) jnp scas jnp cs sti xor sbb push loop mov stc (bad) and cmp sbb lods scas jbe callq push rex.RB (bad) stc cmpsb negb jnp int xor rex.WXB outsb rex.WX mov rex.WR loop lock pop push sti jle test movabs xchg and add rex.R movsb int3 (bad) adc out sbb out clc sahf jmpq pop data16 mov loope rex.WRB decb pop or xchg sahf or pushq sub fbld sahf or mov out rorb mov (bad) mov sub in or ffreep fsqrt or mov push add callq (bad) (bad) rex sub xor or ss rex.RB fisttpll and ljmp (bad) rex out (bad) fidivl cwtl lahf (bad) sbb adcb sti mov rcrl jnp (bad) rcrb rex.WRB data16 (bad) cmp movslq pop and rex.WXB loop pop mov push shlb sub mov cltd iret (bad) fs loope movslq (bad) add mov adc push xchg outsb (bad) xchg mov mov cmp leaveq rex.X xor mov pushfq mov mov xchg jae xor clc mov rex.WXB lods mov (bad) jo out sti mov adc pop and pushfq cmc jo cli test sub movabs sub movsb lock mov cwtl jae rex.RX xchg rex push out imul loop xchg add (bad) flds out push mov (bad) adc (bad) (bad) fisttp movabs cmp sar adc ss test xlat (bad) (bad) in rex.X movsl rex.RX (bad) in cld (bad) movabs repz int fcmovu popq xchg and mov pop (bad) (bad) out iret scas insb imul jg (bad) pop rex.B fmuls (bad) add pop mov and mov int movabs sbb je sub fwait rex.RXB sub cmp hlt pop jge pushfq (bad) mov sbb in mov mov push (bad) pushfq (bad) lea jge sahf (bad) add push addr32 mov fldl cmpsl cs sbb sub rex.RXB (bad) out mov cmpsb jae xchg out xor mov test (bad) push enterq xchg (bad) rex.R xchg pop cmpsb and jae sub retq fbld gs (bad) xchg std rex.WB std pop mov int3 sub (bad) xlat (bad) mov mov xor pop scas sbb rex addr32 jns rex.WRB and (bad) retq (bad) out (bad) cmp and cld cli (bad) movslq jno ss (bad) repnz (bad) retq rex.WX mov (bad) rex.XB ja stos (bad) mov in clc or rex.R rex.WR stos (bad) and (bad) mov ds movabs rex.W add mov xchg (bad) test jnp (bad) mov pop mov rex.WXB mul sbb xchg movabs push mov sbb rex.RXB stos mov sahf sarl pushq (bad) xchg in stc sbb rolb js cmp (bad) andnps adc push jb setae push add cs adc sub mov fldenv (bad) mov jo pop sbb cmpsl sbb mov and xchg mov and lret mov lods in pop jmp (bad) (bad) stc cmp jg fdiv xchg (bad) test pop test movabs imul or pop (bad) sbb (bad) hlt sub lods pop mov rex.RXB pop push out xor je outsb sbb or rex.XB fwait pop (bad) test jb cmpsb (bad) or (bad) cld jl cld fwait lods mov or xor rex.R pushfq shr mov outsl clc rex.X adc mov shl jb pop insb or sub addr32 adc xor xchg subl sbb sbb sub xchg adc lret and in xor mov jg in insb rcrb add add sub pop add (bad) sbb sbb xchg add stc add jmpq je lea mov not mov movzbw lea jmpq add rex.WB imul rex.XB je movslq push movslq outsb rex.B fs jo outsb rex.XB jne je lret xchg retq jae (bad) addr32 jmp sbb popfq push jnp xchg cltd mov loope movabs rex.X mov add jmp xchg clc std popfq (bad) xchg fs cli sub cmpsb or fldenv (bad) out imul xor push out mov mov rex.WRXB ds js (bad) movabs adc fldpi popfq xlat xor leaveq icebp cmpsb xchg fwait xchg cmc es outsb (bad) gs or repz leaveq xchg rex.W add stos test mov (bad) cltd jl sar (bad) (bad) cld movslq loopne cmp (bad) (bad) (bad) hlt cmpsl hlt (bad) sti (bad) add add je imul stos add mov cmp push cmp fdivl fisttpll rex.X (bad) jb movabs rex.WRB lcall jne push rex.B push ds jno and push cltd mov ja test (bad) push out adc rol hlt (bad) push and sbb pop test xchg (bad) lahf (bad) (bad) int3 movabs movabs jno cmpsl rex.X rex.WXB sub cmp sbb andl (bad) (bad) (bad) jae mov rex.XB rex.W rex.X rex.WR jl (bad) xchg cmp (bad) rcll sub or ror or rex.X retq (bad) (bad) (bad) (bad) fsub jb imul insl mov rex.R test hlt loopne cmp or fadd push mov lock sub stc lahf sti jno (bad) rex.WRXB mov out rex.RB rex.WRXB rex.RXB add ja cmp (bad) bnd jge mov jae out callq add mov stos add rex.RX test mov loope sarl and in retq push sub add or (bad) in sub bt push btr mov sbb sub lea setns lea jmpq rcl mov add sbb shld mov cmp sub jmpq fwait mov lock (bad) sub mov cmp sub (bad) jp pop jge popfq sbb mov add scas rex.RXB rex jnp ss scas adc pop (bad) in out (bad) (bad) (bad) pop jns (bad) sub and (bad) fwait xchg push enterq cmp (bad) (bad) rex.W jbe (bad) retq (bad) scas mov callq rex.WR rex.XB int jo test rex.WR rex.WXB rex.X push or je (bad) (bad) (bad) sti popfq (bad) xchg xchg sub pop outsl (bad) add cs jmp pop sbb (bad) ljmp movsb sbb movabs repnz pushq push cmp out rex.X fs fcmovb sbb (bad) hlt movabs mov rex.WX jl js sbb and hlt mov (bad) es mov xchg cmp jnp (bad) (bad) mov (bad) pop jl mov decl xlat fwait rex.WXB movabs xchg mul (bad) rex.WRXB in rex.WXB rex.WRXB jp xorl rex.WR test stos mov cwtl rex.W cmp js (bad) pop lods lea (bad) pop sbb (bad) (bad) pop pop xchg push (bad) adc (bad) lock rex.WX (bad) rex.WXB (bad) adc (bad) (bad) (bad) sti popfq jle retq (bad) (bad) (bad) adc (bad) jne mov insb jbe scas cmpsl mov insl (bad) (bad) (bad) ljmp cld movabs rex.X stos xchg mov retq scas xchg mov or rex.RXB sub jae (bad) lock xchg cmc pop std xor mov sbb pop lock pop imul test loope rex (bad) sub movb sbb (bad) mov (bad) or in (bad) cltd sub or ja scas sbb out add stc cmp lods repnz sub (bad) fadds add retq (bad) mov rex.W ja stos callq cmpsb jb mov add (bad) (bad) decb (bad) (bad) (bad) decl mov adc (bad) mov loop xchg rex.WR rex.X frstor xor xchg rex.W sub xchg nop xchg enterq lahf mov int3 add (bad) mov pop js loope andps fbld in leaveq push mov mov punpckhbw cmc cmp and jbe cmpsb add fcmovb int3 fs imul rex.X int (bad) jo fnstcw jnp adc adc data16 mov sbb rex.XB (bad) sbb rolb or (bad) push mov callq rex.WX data16 pop mov pushfq and scas movsb sbb retq std xchg lret stc (bad) mov mov lret movabs (bad) rex cs mov rex.RX rcr repnz rex.WR es and movsl roll fdecstp scas sti push rex.WR xchg xor xchg fldt mov adcl jne incl test jbe pop jmp (bad) (bad) (bad) cld and sbb (bad) mov cli ljmp sbb clc (bad) rex.B lock fild mov push decl mov iret and lret nop (bad) adc mov (bad) push pop mov add rex push cmp outsl pop (bad) mov xor mov out (bad) push std mov rcll jne nop or cmp and movsl sub fnstenv insb std jno (bad) (bad) maxps or cmp jl xor jle lods gs cmp rex loop (bad) rex.W (bad) sub push mov jae pushq pop push xchg mov loopne rolb xor jb jo mov push sub jp cmp rex.RXB add push jbe (bad) (bad) sti insl (bad) cmp (bad) std (bad) outsl pop cmp sub jle add pop xchg pop fsubrl mov push or in stos rcr jle (bad) (bad) (bad) inc mov cmpsb std movabs pop mov pop repz or jne adc test or data16 pushq (bad) (bad) (bad) cwtl fbstp sbb mov (bad) pop jmpq jl popq test loope (bad) rex.WXB xchg cli sahf scas imul mov enterq mov cmp cmpsl jne xchg adc jrcxz and add ss rol (bad) imul (bad) retq stc sub in push cmp jnp cmp rex.W rex.WRXB and sbb lods pop mov (bad) (bad) cld xchg fstpl jmpq jge cli mov pop rex rex.WX repz jle pushfq (bad) rex.WRXB pop pop add mov adc mov shrl nop rorb mov cwtl (bad) jbe xor add add rex.WRX adc (bad) xor xchg xor xor in jne (bad) mov and test (bad) rex.W data16 or test in (bad) mov repz mov (bad) mov repz jmpq jmpq cmc sub stc cmp jmpq (bad) sar lahf subb (bad) cwtl mov pop mov repnz sti mov icebp (bad) lea test rex.WXB pop gs jne rex.RX pushq or retq repnz outsb rex.W mov sahf in jl xchg (bad) es (bad) push lahf add rex.WX xchg ds nop rex.B (bad) je insl xor test cmp sbb jle subl (bad) cld sub pushq mov shll mov lods xchg (bad) (bad) (bad) cld (bad) xchg rex.W outsl (bad) (bad) (bad) dec sub (bad) adc enterq adc add add rex.W rex.WRX retq int3 lods or cmp ss loopne clc pop sbb xchg xchg mov fmull mov rex.RX stc (bad) add movabs stc add bt bt test bt mov cmp jmpq jae adc xadd mov btr sbb bsf xadd mov movzbw mov clc jmpq jmpq je not mov jmpq pushq jmpq jmpq test jmpq out xor movabs out xchg rex.WR rex.WRX pop and (bad) or ficom data16 rex.WX test (bad) mov repnz mov jo outsl popfq cmc out lods cmpl (bad) outsb loopne cmp jg (bad) mov addr32 (bad) push sub mov cmp pushfq divl int xchg imulb cmpsl ja (bad) (bad) decb xchg xchg out push hlt (bad) mov out sub ficoml add rcll int3 pop xchg icebp push (bad) rex.WB mov or fsubrs add (bad) (bad) rex.R mov callq enterq movabs in cmp (bad) (bad) (bad) (bad) decl fdivs adc lahf mov test ficompl mov mov out jnp mov (bad) fildl xor fdivs rex scas jns fcomp jae mov rex mov xor shlb (bad) rex.XB xor out pop (bad) (bad) lret (bad) mov paddw add ja,pn in iret ja sbb cs mov pop and rex.RB or sbb jns (bad) add in mov (bad) cwtl (bad) (bad) sysenter and jle rex xchg pop mov hlt sub popfq callq cltd pop cs rex.WX repnz int xchg mov (bad) lret imul cmp (bad) loopne rex.XB rex.X mov (bad) scas mov insb xor loope cmc movabs jo sub xchg pushq (bad) hlt (bad) xchg sub lock rex.X lret pop add xchg push or (bad) (bad) (bad) decb xor stos in enterq fiadd pop lods rex.WRX push retq cmpsb fidivl xchg in xor sub rex.W rex.RXB in mov mov test stos mov xor (bad) push pop (bad) and or (bad) rex.RB sbb test out pop (bad) pop stos test sbb movsl and rex.WX adcl leaveq mov add sbb jp imul rex.B lahf sbb xor shl outsb (bad) clc movabs sub (bad) (bad) or push ss add (bad) rex.RX es mov mov (bad) sbb (bad) mov (bad) xor jg (bad) icebp hlt fs cmp jp lret outsl sub pop cmp cli pop cli xlat movabs cwtl sbb ss add mov rol in mov push (bad) jmpq (bad) xor rex.RB insb hlt ss (bad) (bad) decb mov ffreep int adc test mov sbb rex.RB popfq movabs (bad) (bad) leaveq mov (bad) cmp decl addr32 rex.X movsl clc ss jp xchg test js or shlb test cmc (bad) imul cld jno jne adcl adc mov fsubr rex.RXB rex.WR loopne mov rex.RXB and xchg je sbb enterq lods shrb lods out fdiv (bad) (bad) jb (bad) rolb leaveq sahf and lock push popfq mov mov hlt jb in or (bad) callq (bad) mov (bad) (bad) orl mov mov (bad) (bad) decb insb or jge jl (bad) pushfq scas ss push callq cwtl std fistl jmpq fcompl cmpsl rex rex.X xchg (bad) lret mov pop sbb callq (bad) rex.WR jo sbb sub add jmpq jmpq jmpq jmpq cs push and fucom mov or mov and (bad) sbb clc xor scas cmp test jmp sbb cmc in (bad) mov mov rex.RX pop es stos mov and cmc xchg movabs rex.WRX pushfq mov lock xchg rex.B pop cmpb jg fld icebp jne test in pop (bad) hlt lock fcompl iret (bad) rex.RB (bad) (bad) cld add mull (bad) (bad) (bad) (bad) xchg (bad) jne (bad) mov ss adc add add adc jl or std lahf decb xabort out (bad) cmp sbb sbb (bad) cld xchg test lods mov and push (bad) (bad) jne lods std rex.WRXB imul mov mov and ja dec dec add cmc add rol adc cmp not add rcr not xchg xor mov jmpq (bad) out add jno jae out shr fildll sbb and xchg rex.B adc push pop test int sub cmp movabs callq (bad) (bad) mov sub rcrl fwait rex.X (bad) test movabs (bad) stc jmp (bad) sbb stos push neg es cmp (bad) (bad) adc xchg adcl scas or xchg jl fstps sti jg xchg out (bad) (bad) (bad) decb (bad) (bad) stc int3 rex.R rex.WB jns stos fdivrl (bad) (bad) (bad) in movabs pop or xchg (bad) and xchg jl or (bad) adcb fisub pop cmp or out xor rcrb xlat retq (bad) imull xor mov (bad) jo (bad) or push jbe mov sbb push push pop cmp pop add (bad) cmc (bad) mov insb (bad) loopne cmp loop mov sub cmp jnp bnd jns sub cmpsb out fsubr mov stos scas (bad) std push or test sub xchg rex.WR movabs (bad) retq insl sub rex.WB cs (bad) (bad) sti fisubr cmpsb cmp (bad) (bad) (bad) jge sahf and (bad) mov xchg push rcrl jg,pn (bad) cmp movabs outsb cli push rex.XB push and sar (bad) xchg sar (bad) jl pushfq adc fwait add sahf scas mov insb mov push sub add retq in (bad) xchg jno jmpq xor out mov callq adc dec add bswap sete btc rol mov stc cmpb jmpq pushfq mov pushq (bad) imulb xor mov xchg rex.WRB jbe stos rex.W cmp xchg out jl jne mov rex.WRXB (bad) and xor rex.XB fnsave jg jg mov push fidivl stc jrcxz pop adcl jnp (bad) adc repnz in (bad) fistl xchg sbbl add cmc stc movabs mov xor retq pop rex.WB sub test sub rex.RXB (bad) je movsb rex.R ss cmc outsb (bad) pushq push (bad) add adc pushq jge je cmp (bad) rex.RXB (bad) jp and nop fnstcw in (bad) lods mov jnp rex.WRXB rex.W jne add (bad) cld (bad) (bad) mov loop (bad) (bad) (bad) test in or scas or test ja add add fidivl mov jle pushfq mov xchg (bad) (bad) rex.W jae je (bad) retq cmc mov gs add add sub jmp mov cli sahf out (bad) (bad) or out sahf add mov xor div pop jns in rex.W outsl ficom fcmovnb add xchg sti and (bad) pushfq xchg jl (bad) mov mov sub adc xor decl out rex.XB cld sti movabs mov mov movsl mov sahf rex.RB cwtl es sti movabs rex.WB and test xchg mov sarb (bad) lret (bad) (bad) (bad) (bad) sub mov (bad) pop adcb sub adc (bad) pushq jb xcrypt-ecb cmpsl lret movsl lahf sub imul (bad) std (bad) lock fcmovnbe add add xor sbb jle jno leaveq loop andl (bad) (bad) (bad) cli (bad) pushfq add push retq push (bad) (bad) jno rex.WR cmpsb rorb cmp imul scas iret (bad) rex.RB std or lahf mov adc sti (bad) jmpq fistpl sbb cmp sbb sti sbb out (bad) add lock or sbb rolb add sbb or add sbb sub sbb repnz sbb cmp sbb fistl sbb sbb cld xor add sbb pop sbb movsb xchg sub xor add sbb fiadd add sbb push jp add sbb sahf rex.W mov sbb fwait sbb lea add lock stos sbb shrl (bad) lock mov add add add add pop sbb loopne sbb lret sbb cmp sbb fistpl sbb cmp sbb add add sbb add add or (bad) add add add add add add add push (bad) add add add add add rex.WRXB sub fildl add sbbb add add mov add pop sub jne sub (bad) xor add mov add sbb repz add fcoms add idivl add ficomp add add add sub add add mov sub add add mov add add sbb (bad) add (bad) fistl jns adc cmp mov pushfq rex.R xor movabs movabs popfq xchg adc adc jnp mov sti sub sahf cmpsl flds movabs add (bad) mov mov (bad) cld push lahf lahf mov (bad) (bad) (bad) callq push or adc push test xchg stc int3 mov imul or add (bad) insb sbb (bad) movabs pop out (bad) rex.WRX add es pushq add add or fldt (bad) cwtl imul ja sbb rex.RB data16 mov pop (bad) stos rol scas mov out mov or pop jns adc cli outsb (bad) pop add fnstenv sbb jmpq cmp bt cmp jmpq ja or sub movzbl bswap add cmp mov jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add fidivrl callq (bad) add push rex.RX stos imul cmp loopne shrl rex.WR rex.WRB out add int3 stos mov fucomp fdivl (bad) jns dec cmp (bad) pop jne (bad) stc pop roll jle js rex.W movabs int3 lods movabs mov mov test add (bad) xchg mov in sahf add lret (bad) mov cmp (bad) (bad) (bad) std lahf jne cld (bad) add add xor mov pushq rex.XB je fisub rex.B data16 std jmp (bad) mov stos jle xor (bad) in (bad) xchg (bad) int movslq leaveq pop rex.RXB repnz or (bad) or cmpsl (bad) cmpsl stos add (bad) mov sbb mov or movsb (bad) mov (bad) in add jmpw sti inc rex.RXB clc cmp cmc cmp test jmpq jmpq jmpq add add jae add repnz xchg mov int3 movabs insl pushq fwait add fisttpll stc cli cli in sub rex.WB (bad) imul xchg xchg cli icebp lret (bad) in mov push and hlt pop nop add rolb pushq (bad) dec pop pushq fadd nop/reserved sbb cli cmp and adc ds rex.RX mov mov rex.RX and xor sti pop and push adc out out clc mov jno rex.X rex.WX popfq jo sbb mov mov jne test imul rex.XB lock jns cwtl or sbb or nop sbb lret add (bad) test mov movslq cwtl (bad) test jmpq rex.WXB jg movabs movabs addl xchg stos (bad) stc sti jrcxz rex.RB (bad) xchg rcr in rol cmc sbb cs and (bad) and xor sub jo mov cld pushq jnp sub rex.WRXB rex.WB xchg cwtl (bad) (bad) (bad) sti mov (bad) decb sbb (bad) (bad) hlt xor mov cld xchg jns add add or divb rex.XB (bad) sbb leaveq sub xlat out rex.WX fidivl fs rex.XB rcrl (bad) (bad) (bad) je sbb (bad) mov (bad) jns push (bad) (bad) push (bad) test xor mov fistpl and lods ficomp out rclb gs imul pop xor test xchg jbe (bad) addr32 rex.RX sbb (bad) xor pushfq in (bad) pop movabs retq retq (bad) mov pushfq or mov out add (bad) (bad) (bad) sti pop adc xchg (bad) mov mov adc jp ss rex.WR pushfq mov sbb repnz rex.WB lods mov mov adc xor movslq retq outsb xchg cmp mov mov cld adc (bad) (bad) (bad) (bad) jmpq hlt in mov and push rex.WX lock fistpll jnp rex faddp cmpsl (bad) insl jo pushq bswap popfq mov push outsl adc sbb pop jmp cmp adc clc jmpq sarb rex.WRXB jo mov jrcxz push nop out xchg hlt rex.RXB enterq roll jmpq scas jl jge cli push rex.RB mov or fidivrl or xchg in and mov out cli jge mov pop in mov and push add sub in mov nop add pop xor or (bad) xor cmp popfq mov std sub pop (bad) (bad) rex.W repnz adc iret mov (bad) (bad) sti retq push rex.WX (bad) push repz cmc sub rex.XB or std pop (bad) (bad) (bad) callq clc scas xor fcoms sbb (bad) pop cmp sbb retq push rolb out jmpq sbb (bad) pop (bad) jne pop adc or mov xor xchg jmp loopne in fs outsl push fiaddl (bad) cwtl xor (bad) (bad) fdivl jrcxz or xchg xlat mov sbb lret or adc mov add sti xchg cmpl xlat mov cmp xor (bad) xchg int3 movabs lods out lret jmp and (bad) std std jno and add (bad) out movq test cli sbb movsb sti std mov jno jp mov popfq iret out test movabs mov jge mov orl cmc movsl rex.X js (bad) and retq (bad) xor cmp (bad) std mov sub insl push cmpps rcll leaveq in sarl push rorl pop mov mov cld cwtl (bad) lea js test movabs xchg xor sbb std xchg add movslq es test adc xor jge mov sti rcr mov push outsb ss add add xor pop pop sti (bad) int3 repz addr32 (bad) (bad) callq jno or xor mov loope cmp lahf (bad) and add sub negl sbb sbb popfq out rex.RB js jno iret mov in sub xor or rex.WRX sbb (bad) in rex mov add sbb mov pushq jns lods pop or pop xor (bad) (bad) lock rex.WR push xor xor mov cltd rex.RXB mov jge out or (bad) (bad) incb cmc jmpq rex.R xlat sbb mov (bad) (bad) std stos push xchg mov add add (bad) xor and and loopne pop mov jl and (bad) (bad) sahf mov xor sub outsb lret or in lock ss jl iret (bad) test rex.W mov xor jne inc add mov cmc test stc cmc or jmpq xor (bad) xor mov (bad) adc jmpq jp mov lret out rex.WX clc popfq add pop clc movsl mov mov mov ficomp sub xlat xchg adc jns (bad) mov jne scas jnp test (bad) push (bad) jae (bad) adc add ss xor callq mov js (bad) (bad) std mov ja (bad) add add sub (bad) out lret (bad) pushfq retq repnz jmp and adc push retq pop notl icebp pop adc insl or mov adc push cmp jb cs adcb xchg mov rex.RXB jmpq (bad) rex.RB xor test jle (bad) jmpq sbb retq or (bad) out imul callq clc cld jp lahf and pop rex.XB cmp repz rex.RX or fstpt cltd jmp pop adc orl push xchg add (bad) (bad) (bad) (bad) sti sbb (bad) (bad) (bad) std lods (bad) mov in sub xor push rex.R rex.RX and (bad) lahf xor imul cmpsl cmpsl mov mov jg xchg insl (bad) rex.X sub mov rex.WXB nop fucom movabs and mov push scas test (bad) (bad) (bad) push (bad) fcmovne xor rex imul sti mov gs test pop ja push or and mov cmp push push cld movabs (bad) xorl (bad) rex.WRXB (bad) andl addl rex.WB fist add rex.WRXB mov lret xchg rex.WXB pop in iret cmc (bad) mov fbstp imul movabs pop rex.WRXB sbb in ror jle movsb mov hlt sbb movabs cmp jno mov adc jl add mov jle outsl pop jp pushq mov sbb jb (bad) (bad) std ja out (bad) mov add add mov push callq cwtl sbb cs add mov sbb stos (bad) mov rex.WXB movslq test or retq sti cltd leaveq mov cmp adc imul out fwait (bad) (bad) stc gs repz cmpsl retq pushq lods rex.RB xor rex.WRXB xchg rex.WR xchg mov (bad) xchg cli (bad) mov (bad) cmp mov (bad) repnz lahf test sub and add (bad) push cmpl in (bad) and cmpsb pop (bad) (bad) mov in callq jle sbb rex.WB sbb repnz (bad) (bad) std fiaddl or in jns popfq mulb faddl imul leaveq sti (bad) pop int or js xor mov add loopne rex.R (bad) cmp adc pop or lcall (bad) (bad) (bad) dec sbb (bad) ja push or and xchg jnp jne rex.RX cmpsb cmc add rex.RX fnop (bad) (bad) jne outsb in xchg stc movabs mov mov mov cmp insl (bad) je clc jmpq je stc ror sub push bts bt mov cmp or cmp movsbw sub jmpq jl or in sbb (bad) mov in xchg fs pop (bad) lret pop mov jle jae (bad) pushq jno adc add insl push insb or add movsb (bad) repnz jmp pushq xchg cli xchg cs pop std jno cld retq (bad) fist insl xlat movsl ss (bad) rcrb clc cwtl jbe int3 or out scas add adc (bad) (bad) push mov (bad) (bad) sti mov and jns callq (bad) or xor (bad) (bad) (bad) (bad) sti (bad) lret mov insl movslq push mov sar (bad) (bad) decb xor or push je (bad) mov lahf mov mov cmpl sarb popfq (bad) ficomp (bad) addr32 ja int cmp push mov xchg and rex notl sti jb rex.WB in adc repz movsl cmp xor sbb or stos scas mov mov cmp xor jae cmp clc cmp jg ja dec add not add dec xor mov test xchg mov sub rcr mov sbb sub mov cmp jmpq jmpq mov lea movzbq bswap mov not mov mov movzbl lea jno callq cmp bt cmp cmc or jmpq pushq jmpq mov stc cmp jmpq jmpq jmpq jmpq add (bad) xchg mov (bad) jbe test addr32 mov (bad) pop xor or test es xorb lods nop push xor add xchg mov mov (bad) sbb sub mov jbe sub pushq jge (bad) sti jmpq (bad) (bad) std push cmp push ja repz data16 retq ja test rex.WRXB mov mov sub or (bad) ficoml and mov out rex.WRB sbb sub jmpq jrcxz sub or nop mov jl sub jp sbb nop rex.RX adc mov cld test add mov rex.WRX (bad) xchg or fmull push cmpsl lret (bad) rex.RX and nop loop mov (bad) jg jno xchg imul rdmsr rex.WRX jrcxz (bad) loop adc and add movb notl test sti test pop shlb cmp rex.XB mov vorps (bad) (bad) cs sub cmpsl xor icebp and cmp (bad) and loop push rex.WB lret test cmp outsl cmc retq insl mulb (bad) push repz sub push loope xchg loop sbb xchg (bad) cmc fisubl sub mov sbb repnz adc (bad) test leaveq mov add rex.WR stos jae fisttpl je mov in out sbb xchg mov or ucomiss xchg xchg repz fmull jrcxz add and push xlat mov insl (bad) cltd mov cmp not lods stc clc clc sub clc bt cmc ror bt clc sub stc jmpq ja jmpq fsubr out mov mov test repnz cld (bad) xchg rex.WX xchg push movabs mov cltd jns cmpsl clc out xlat add rex.XB sarl retq rex.X jb retq hlt fs outsl pushfq mov xor scas retq xchg xor or callq fdivr (bad) (bad) sti repz adc incb movabs je rex.WXB clc push sub push xchg nop rex.WX rex.WX mov add pop repz popfq rex.WX clc lods mov out xor cmp xlat (bad) jb (bad) or stos or ds (bad) (bad) sbb mov sbb (bad) retq test add add mov enterq test sbb mov bsr movsbw test sub bswap bswap lea lea jmpq pushq jmpq pushq jb,pn and mov incl cmp mov mov (bad) xchg leaveq or jnp jp pop pushfq sbb adc or in fiadd jle mov movabs push movsb xlat cli out rcl mov adc or jnp jmp adc repnz push xor int3 (bad) (bad) (bad) cld rex.B (bad) adc (bad) (bad) (bad) rclb repnz pop loopne (bad) fstps pushq mull mov and mov movsl (bad) (bad) cld in and out sahf rex.W rex.WRB jbe adc (bad) movsl sbb add add ds pop jp js and xchg rex.RX sbb movsl orl (bad) cs fstps mov rex.X rex.XB shlb (bad) scas rorb (bad) mov lret push jne mov push sti sarb mov lods mov (bad) clc mov (bad) stc jmpq imul bt stc add jmpq movabs movslq (bad) jno jge or rex.WRB lret ds sbb loope xchg fimul (bad) (bad) cmp roll pop test rex.WRXB retq repz ljmp jb repnz rex.RXB xor ss iret push iret and push stos xlat sub je (bad) (bad) (bad) sti jne sbb (bad) incb push sub or adc movsl mov ffreep sbb (bad) and or addr32 xchg sub (bad) rex.WB push fmuls mov int push (bad) mov pop add je fsubrl sub adc (bad) mov jnp add lret mov std negb jp (bad) (bad) (bad) stc cltd sbb scas xchg adc mov jnp xchg (bad) movabs sub push jg pop int3 (bad) outsl (bad) mov xchg adc movslq push shrl mov rex or adc stc xchg rex.XB scas pop or (bad) adc rex.RB xor rex.X addr32 stos and mov or cmp xchg loopne jrcxz sub fstpt mov mov jp mov and mov (bad) mov (bad) (bad) decl rex.X sub imul or lret sub je rex.RB rcrb sub (bad) sub xor rex.RX movabs push gs (bad) jp stos add sub lods cmp cmp add lods and jmpq nop test mov shr lea (bad) cli push in rex.WB rex pop add adc xor (bad) adc sub enterq data16 rex.WX (bad) (bad) (bad) std mov and cmp rolb clc movabs mov pop pop cs cmpsb cmpsb xorl adc (bad) (bad) (bad) in rex.WXB (bad) (bad) (bad) std and (bad) and (bad) (bad) (bad) callq outsb lret (bad) jbe and adc pop clc andb (bad) fmuls sbb (bad) mov xor (bad) lods andl je mov jg adc sbb loop gs jmpq leaveq stc push mov cmc out or movabs loopne (bad) sbb pop xchg jb cli (bad) scas movabs sbb pushfq imul stc fistp rex.RX ja fisubrl rex.WRB (bad) (bad) xor shll mov std (bad) (bad) (bad) sti jmp movabs lahf callq mov lret sub xor fcoml jbe mov rex.WXB roll scas adc jnp pop rex.WRXB jne mov and and (bad) fldl adc insl pop in or (bad) (bad) callq (bad) (bad) stos iret ror mov retq cltd testl scas mov repz ss (bad) cmp sub pop cwtl sti sub out cmp sub repnz insl sti pushq push pushq add xchg sbb decl test add add fld loope (bad) cmc neg push cmp shld mov rcr sub movzbw lea jg callq movsbq rcr bt inc add btc clc mov jmpq je jmpq rex.RXB adc sbb (bad) shrb iret movsb jge stc loopne xor or je movsl lret sti int3 callq lahf sahf (bad) mov sbb sbb sbb cmp fadds (bad) push jg rex.WB imul push pop jge mov (bad) fs sbb sbb pop jg (bad) repnz lahf add (bad) (bad) (bad) sti stos repz (bad) (bad) (bad) (bad) cmp movslq leaveq adcl rex.B rex.WRXB (bad) (bad) (bad) mov xchg or cmpsb rolb insl (bad) jne mov cwtl push or sub fwait sub adc movsl rex.WXB rex.B (bad) jrcxz imul pop fidivr pop lret sbb cmpsl adc jmpq pushq jmpq jnp lods imul rolb (bad) rex.RB in lret cli (bad) xchg loopne xor (bad) mov adc in div add cmp jrcxz es cmpsb mov (bad) xor movslq (bad) and rex.WRXB rex.WRX jns xor or xor pushq (bad) (bad) push mov pop rex.X rex.X fidivr mov rcr lods faddl pop mov (bad) (bad) (bad) sti (bad) (bad) stc jnp (bad) (bad) (bad) (bad) inc fldt scas add add jle addb sub (bad) mov cs repz and (bad) sbb and adc mov cmpsl jbe (bad) (bad) je xor sub rex.WRXB rex.RB rex.XB orl rcl mov sbb mov rex.RXB (bad) (bad) mov outsl lahf rex.WRX data16 clc jae ja xchg adc mov out add xchg rex.WXB cmp in adc jle,pn fstp callq (bad) pop jbe pushq mov pushq addr32 (bad) (bad) std jl lods jp mov sbb (bad) cmpsl lret rex.WRXB imul (bad) jp cld rex.WRX callq (bad) (bad) rclb lret rex.WX (bad) (bad) std adc (bad) (bad) (bad) decl movsb rorl or xchg add jle (bad) ss xchg pushfq rcrl or insw pextrw rex.WRXB lahf decb notl and push imul push xchg ds add mov xor btc adc sar mov ror jmpq jmpq stos jmpq bt bt cmp sub stc cmp jmpq test test jmpq push mov (bad) or jg mov jmp pop mov loope mov nop/reserved jle (bad) xor jb mov (bad) in mov retq imul mov xor ja,pt and stos and or add out pop push mov pop mov xor (bad) (bad) cld sub (bad) (bad) (bad) mov in mov cmpsb rex.X xor mov mov in idivl lods std sub sarb mov nop xor mov push jge (bad) (bad) mov jne sub pushfq mov enterq jbe mov iret lods sub xchg (bad) mov test (bad) popfq mov rex.RXB movsb mov rex.W rorb rex.WR test inc mov jmpq jne xchg dec bswap sub mov clc cmc shld sar sub btc bsf xor dec mov cmc sub cmp cmp pushq stc cmp jmpq (bad) cmp mov lahf data16 sbb rex.XB mov jae mov int3 icebp sub (bad) or (bad) and add mov (bad) sub stos pop sti xchg outsb (bad) (bad) pop push (bad) mov sub and rex.WR outsb popfq bnd (bad) mov (bad) in sahf sbb or (bad) jp adc xchg lea jrcxz cmc negb jae xchg mov int3 stc rcrl ud2 sub enterq cmp (bad) decb (bad) (bad) (bad) callq outsl callq (bad) enterq rorl js mov sarl cmpsl in jnp imul andl subb out mov xlat lret xor xchg rex.WRXB (bad) mov jg xor mov rex.WB enterq (bad) adc rex.X in (bad) int cmpsb hlt shrl movsb lcall adc iret ds addl (bad) rex.X add enterq mov xchg xchg xchg mov negl (bad) decb rorl std (bad) leaveq cmpsl sbb pushfq cmpsl (bad) or out sub outsl adc mov lods int3 jae ds in (bad) movabs xor mov (bad) adc pushq std movabs rolb cmc (bad) push or pop mov or jp adc mov sbb jb xlat (bad) mull lret movsbw add shld add dec and bt sar mov jmpq stc neg stc stc add cmc popfw jmpq mov stos jg es mov (bad) insl (bad) cltd cmp cltd sbb or jnp xchg (bad) rex.RXB rex.WRXB cmp enterq jrcxz and lods adc pop lods andl jb xchg fbld in sub std out lods negb stos lea or rex.WR add fsts xor rorb or jb outsb and test vpsubusb xchg rex.W pop adc sti sub movsl mov sbb (bad) (bad) sti mov (bad) (bad) (bad) (bad) and rcll xchg mov (bad) (bad) lcall sbb mov jae insl lock insl rex fsubrp lret loopne jg fidivl or (bad) callq addr32 adc test rex.R rex.RX (bad) lea jrcxz adc jae sbb scas sbb (bad) (bad) out clc loopne jae adc push push ds repz out sbb mov (bad) (bad) (bad) and addl (bad) mov xchg and ja pop notb clc leaveq mov and xchg xor and jmpq sub sbb jmpq imul add movabs (bad) (bad) (bad) decb push (bad) rex.B sarl lea es xchg vpmulhuw imul xor jbe (bad) movabs fdivrs xchg (bad) xlat fs sbb adc fwait (bad) add stos (bad) out (bad) rex.RXB retq adc lods (bad) sbb (bad) pushq or callq cmp loopne fisttp outsb addr32 jb callq mov lods add cmpsb cltd mov xchg mov cmpsb out (bad) stos pushfq mov rex.WXB pushq sbb ljmp in mov jmpq setl lods jmpq jl adc retq lea lea movzbw movzwl lea mov bswap not lea not mov movzbl lea mov jmpq jmpq jae shld dec mov cmc stc bsf mov bsr clc add shrd mov cmp cmc xor cmp bt jmpq pushq jmpq stos sbb xor jge (bad) cmc (bad) pop clc sbb and (bad) in fisttp mov mov mov cs fcoml fidivrl loop (bad) sub mov movsb jle (bad) pop adc fldcw sbb (bad) add jno out retq cmp sub mov in rcll rcll add mov mov push jg hlt and (bad) (bad) std out mov sbb ja iret push (bad) rex.WRX xor jae jbe push xchg pushq or (bad) (bad) fwait sbb jmp cltd in xor or pop (bad) jno sbb pop fisttpll orl js rex.WB rex.W stos mov movslq movabs rex.WXB xor repz adc pop gs and xchg jbe pop mov (bad) add (bad) pop xor rex.WRXB xor in xchg in callq xchg lret (bad) or imul je jb out loope or pop sti insl mov mov rex.X rex.XB jnp (bad) repnz (bad) (bad) (bad) sti std add (bad) (bad) (bad) cld jmpq and cmpsl enterq sub adc sub nop (bad) pushfq mov int and (bad) xchg add add ja sar test mov push (bad) cmp or rex.WRX mov jne pushq int (bad) or movabs or je lods sub js scas lahf rex.WRB rex xor test rex.W fsub fmull mov shlb sbb in fcomps mov rex.RX test cmp add mov rex.WXB cmp shl popfq mov callq cltd sbb add or pop adc insb (bad) mov rex.WRXB xor jg out add je mov xlat rex.X retq out addr32 (bad) (bad) (bad) sti sub (bad) (bad) (bad) std mov sbb imul adc in or cmpsb mov jae or (bad) clc cwtl enterq test fstl (bad) add jne fwait movsb leaveq (bad) push rex.X addr32 rex.X subl rex.WX rex.X cmp popfq rol movabs or pop and mov or subb insb lea (bad) mov in (bad) pop xchg movslq sbb mov movabs xchg sbbb push rex.W ss pop rex.RXB add vcmpsd xlat mov (bad) (bad) cld cwtl (bad) int mov sub jmp retq jnp or xchg ss (bad) fbld mov in (bad) pushq cwtl enterq movb and clc out int jnp jne jb push jp sub ds (bad) or mov jl (bad) or scas mov stos mov adc sbb mov push mov shll stc bt xor bt cmp bt neg test test cmp add jmpq andl xchg mov rex.WRXB std push jg (bad) (bad) js int or imul addr32 rex or retq loope mov sub stos movsl xor sub mov xchg cmpl (bad) sub ficom movsl ds mov mov mov out mov sbb (bad) out (bad) (bad) (bad) (bad) scas icebp loopne pop (bad) (bad) (bad) pushq mov (bad) lahf mov sub test mov lock xchg test rex adc xor mov (bad) rex.WRB (bad) pop movabs lret movabs pushq pop xchg (bad) lock repnz retq movabs movabs push push test xchg mov imul pushq sbb (bad) or rex.RXB ja xchg cmp rex.RXB ds retq jne sbb xor shll push in pushfq mov sub push es rex.X in in enterq mov sbb es adc retq ja loopne (bad) adcb (bad) sbb or cmp sahf hlt loop lock pop jb sbb (bad) (bad) or sub xor decb pop rex.XB or xchg imulb xor jge out (bad) sbb shl mov jge add adc imul (bad) (bad) rex.RX int js rex.WRX and jg inc push fisubr fs jnp rclb pop (bad) mov sbb (bad) insl or xchg jle (bad) dec add inc add inc shr bt cmc xchg xchg mov sbb not shl rol mov stc push stc or mov cmc clc cmc sub jmpq jmpq je clc cmc cmc sub cmc cmp bt jmpq in movsl rex.WX mov cmc sub (bad) xchg mov (bad) sub rex.B movabs adc (bad) test or pop (bad) gs rex.R rex.RB loope push movabs sub insl (bad) test and lret scas sbb movabs (bad) xchg stc adc movabs (bad) outsb cmpsl and (bad) (bad) sti movabs xor rex.RXB mov loop (bad) (bad) (bad) pushq xor cmp (bad) and rex.W rol cmp xlat jo and sbb xchg xchg test rolb xor fisttp (bad) adc movslq sbb sbb adc mov push pop in sub add je gs imul jl (bad) (bad) movsb mov push outsl xor rex.WR repnz (bad) sbb faddp jge test push sbb (bad) rclb sahf jnp lods adc and (bad) hlt div pop sub rex.XB mov test mov xor (bad) (bad) std pushq mov ja xor lock sbb (bad) mov lret sar (bad) (bad) (bad) std divps sbb (bad) (bad) incl mov jge xor mov xor and jb scas enterq movsb punpckldq loope mov sbb rex.WRB (bad) mov push mov xlat in std pushq loope adc and mov rex.R fisttpll gs xchg xchg push movsb rep nop (bad) cs push pop sbb je xchg jg xor test xchg xchg addr32 fs mov lret jp add lods adc sti (bad) (bad) push (bad) (bad) scas and xor (bad) and sti lahf xchg cmp (bad) (bad) sti (bad) cltd jp (bad) (bad) (bad) push sub mov ds sti mov (bad) and and pop roll (bad) fiadd rex.WRXB xchg or and and fs xchg jp imul sbb adc (bad) (bad) (bad) pushq es test (bad) insl popfq mov retq (bad) mov mov add (bad) pop (bad) repz xchg (bad) stos repnz rcrb push adc pop sub and (bad) (bad) repnz cmp mov and adc add rol neg add (bad) repz xchg shld mov clc neg cmp dec mov stc test stc push dec dec mov cmp cmc test stc sub jmpq jne jmpq jmpq clc dec rcr not xchg clc mov jmpq add clc imul lods rex.WX rex.WB (bad) (bad) (bad) lock add (bad) mov (bad) (bad) ss sub fidivrl xchg jae sub paddusw int std callq in rclb cli mov rex.XB negl (bad) mov in xor (bad) sub jo rex.WRB out icebp out outsb mov rex.WX repnz jb mov cmp xor sub (bad) (bad) sti jnp jnp sub (bad) (bad) decb callq sub mov or (bad) (bad) (bad) decl adc stc xchg xchg add loop jno adc or mov jb xor jmp lods or ffree sub sbb add lea je hlt test push fbld sub cli (bad) clc clc clc cmp jmpq cmpsl ss (bad) (bad) fldcw mov xor movslq cwtl rex.WX (bad) add pop adc incb std stos mov pushq mov and rex.RXB out lcall jp pop insb sbb int3 push stos cmpsl (bad) sbb jb pop pop mov (bad) jp (bad) sub lods jg rex.RX outsl lret xlat jrcxz cmp cmc (bad) lock adc (bad) mov outsb or (bad) fsub and adc mov jge push and or mov rex.WRXB (bad) sbb (bad) xor mov push (bad) movabs sahf mov xorl enterq xchg movabs rex.WR mov adc movd (bad) cmpsb or (bad) std (bad) rex.XB out and movabs ds (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp imul test (bad) xchg rex fwait sub rex.WRX (bad) pushfq int sub gs cmc push rcrb shrb sub sbb jne jmpq fwait idivb mov fild (bad) mov jbe (bad) (bad) fucom jne (bad) cmc cltd (bad) adc lret rex.WX int push jle rex.RB mov or mov cmp mov jl and jmpq mov sub jge adc (bad) lret sub retq pushq scas cmp jae pushq pop rolb fxch insb (bad) movsb fdivrl mov mov rex.RXB cltd divl mov and cmp (bad) retq add (bad) (bad) decb (bad) (bad) (bad) decl (bad) cltd (bad) cli mov and cmp pop (bad) test mov jmp rex.RX (bad) xchg pop sbb out repz adc (bad) test movabs xchg mov sbb (bad) rex.WB and (bad) sub popfq (bad) (bad) (bad) cli callq enterq xchg sub pop (bad) dec callq movl rex.R loope push stc fwait movsl movsb iret rex.W test add mov enterq rex.RXB out (bad) sbb popfq movabs mov (bad) rex.WR add (bad) (bad) (bad) sti and (bad) std mov add retq xor (bad) sbb add or loop rex.WRX sbb mov (bad) and incb pop out sbb sub repnz (bad) and jge (bad) jg add rolb xchg rex.R cs (bad) push or fcos (bad) (bad) lcall out mov movabs jmp push shrl jb loope fildl lret sti pushq cmpsb mov (bad) mov (bad) shrb cs xchg mov pop add test cmp jmpq stc cmc stc repnz jmpq btr rol sub lea mov adc bswap shr shl mov sar clc add stc shr inc bsr lea add mov sar stc shl stc add jmpq adc mov cmp sub bt pushq stc cmp jmpq gs (bad) repnz or push (bad) cltd (bad) test (bad) ss xchg rex.RXB test pop mov (bad) lods add add cmpsl mov (bad) bt (bad) scas (bad) rex.RB mov rex repz fadd out mov mov int3 (bad) not mov vcvtss2si xlat sub rex.WRX gs lods rex.WRXB or insb hlt loope push idiv (bad) (bad) sti ja imul incb sahf sbb rex.WRX (bad) (bad) incl sahf add rex.XB rex.X sbb xchg rex.X fwait sbb cmp repnz cmp jp sub adcb add fnstsw iret movslq push (bad) xor xchg push outsb mov pop xchg pop rex.B cmc cmc cmp clc movb stc test jmpq add stc jmpq xor sahf repz and add (bad) in cmp js or jnp cltd fisttp fldt mov or gs (bad) rex.R cli sbb repz loop rex cmp jae pushfq jrcxz rex.WRXB movsl (bad) sbb add scas sbb (bad) (bad) xor jmp std loop or flds rex.B xchg in (bad) or mov es test jae sahf (bad) repz lret shlb lock test mov lods imul (bad) cld (bad) sti repnz xchg (bad) (bad) (bad) repz ds pushq lea mov out rex.WB add add jne repz (bad) sti outsb xor (bad) fstpl jnp jnp (bad) retq imul pop pop adc in sbb push add pop xor sub mov pop fldcw fsubr movsb cli cli decl xchg int decl mov or add stc cmc cmc jmpq je cmc bt cmp test sub stc clc stc cmp jmpq push rex.WRX cmp jrcxz (bad) jne (bad) in int3 add (bad) stos stc movabs xchg (bad) int (bad) mov nop jb cmp mov rex.R rex.WX nop or es xchg mov rex.WXB mov or faddp pushq cmp out retq int fnstsw shll (bad) rex.RXB xor out stos or (bad) (bad) mov (bad) push pop repnz add adc sub adc nop push vcmpneq_oqps test jno sbb jb mov push rex.X mov add mov imul sbb sbb fisttpll rex.WRX sbb mov fsubr decb (bad) jmpq je sbb push bswap (bad) icebp xadd mov shl or bswap movzbw sub setb mov lea jmpq pop jle cmp je (bad) (bad) movsb and rex.WB rex.WRB rex.B callq jrcxz adc (bad) leaveq cmp mov rex.B sar jrcxz mov cwtl (bad) and rex.WRB and (bad) (bad) fnstcw rex.WRB repz iret subb iret stos pop cmp or fimull mov ja test stc add rol sbb shrb sbb xor mov cld rex.W or (bad) (bad) (bad) (bad) fnstenv imul fisubr xor and cltd add add pop (bad) cmp test cs int3 cld imul (bad) ficom cmpsb xorl add mov pop mov cltd mov (bad) lahf xchg cmc jle mov xlat and test pop retq lods sahf mov pop push insb ds jmpq test repnz jmpq jg lods sub mov xor mov mov adc xor jae and sahf and rex.RB xor xchg movabs (bad) fsubp hlt callq fidiv rex.W lods mov fs jmp adc pushq sbb xchg shr sbb lahf cmp pushq push sahf (bad) push callq rex.B fwait out fnstcw insb and hlt cmpsb (bad) je mov rex.XB or adc pop (bad) (bad) (bad) cld pop insl xor ss (bad) (bad) (bad) (bad) add in es or in add movl (bad) jrcxz push xchg rex.WR ss int3 (bad) jrcxz (bad) sbb rex.W cld mov rcrl cmpsl test rex.WRX (bad) ss retq cmpsl jrcxz xchg mov movaps add cmpsl xorl xchg stc pop icebp mov pop test add je jmpq jrcxz fwait rex.WRXB mov es in test and jp movb rex.R cs xor xchg (bad) sub sub rex.B pop retq add and pop sahf clc rex.RX (bad) pop jo clc adc add in scas ja (bad) rex.WB ja (bad) test out (bad) cld and pop adc jb jnp insl int rex.WXB (bad) scas ror outsb rex.WR mov jae add test mov jp stc adc (bad) (bad) (bad) decb cltd jrcxz pushw or mov mov sbb leaveq movabs (bad) push fsubl xchg mov shll in (bad) mov mov repnz mov test cmp mov and add adc test (bad) and in pushq sub sub xor sarb es (bad) rex.W loop rorl sbb cmc in mov cmc (bad) xor xchg (bad) or push sbb loop orl mov mov cwtl leaveq icebp mov fnstcw sbb (bad) (bad) sti add mov add (bad) (bad) std xchg movabs icebp push and out lock rex.WRB (bad) sbb mov mov or cmp (bad) (bad) dec push pop lods mov mov and rex.WRB sti outsb pop rex.WRX es imulb xchg jbe sub fsubrs rex.X (bad) popfq (bad) cwtl nop leaveq xor cmc sbb jae sub mov xchg data16 mov (bad) test (bad) (bad) or js add jnp mov jo pop jg jne rex.WXB xor mov jg mov add (bad) repnz int cli ds push mov in (bad) pop test mov jmp mov xchg sbb fcmovu xchg movabs rex.RXB (bad) cld or (bad) (bad) (bad) (bad) sahf or (bad) rex.RX rex.B jp stos shlb fnstcw jae mov popfq fsts adc xlat and or sbb adc add cmp callq sarb add rex.WB loope gs add add sbb mov movsl lods push xchg lret imul (bad) cmp adc rex.X xor jnp fcomi pushfq sarb mov js outsl (bad) sahf idivl push mov xchg sbb (bad) xor rep jle pop jmpq jne jmpq faddp cmpsb movslq callq cmp jmp fcompl cmp std pop fcoms add cli adc mov mov cmp cmp sub (bad) js pop mov xor sbb cmc lods and out xchg and add je jle ss frstor jne mov mov push pop adc and popfq mov test fistpll cmpsl iret (bad) (bad) iret pop lahf fnstcw (bad) (bad) (bad) cld rex (bad) shll rex.WRX xor add add push sbb cmpsl imul sbb je (bad) xchg sbb (bad) mull and es jl and (bad) mov xor ja fsubs rex.WRX rcll insb retq adc (bad) sbb mov movslq push movabs incl clc clc test jmpq ja neg cmc rcr shr sub sbb btr inc add btr clc data16 (bad) mov adc not mov rcr mov bt cmc bt repnz jmpq jmpq push popfq cmp jbe lret test or movslq mov xlat (bad) jmp sbb (bad) xor xchg fistl push mov lods adc enterq lcall pop popfq (bad) adc out shll sub test movslq sarl in or xor or mov cmc in ss fdivl rex.WRB or (bad) (bad) cld xchg jne (bad) push (bad) (bad) (bad) jmpq adc jo movabs cli add mov (bad) or fcom movl mov xor push push add rex.WXB add mov (bad) rex.RXB and add (bad) vmaxps xchg (bad) movsl sbb cli (bad) mov cmp (bad) (bad) and lcall adc rex.W imul (bad) sub jmpq loopne add sbb mov gs mov rorb (bad) and leaveq (bad) (bad) (bad) test xchg rex.WXB nop rex.WX jle xor add enterq fisttpl pop sub mov mov pop pop loope mov or push popfq es xor xlat es cmp adc cmpsl pop adc (bad) sub sti fwait movabs insb cmp (bad) cmp cld fcoms adc rex.B data16 out xchg incb add add sbb scas pop lret and out clc (bad) mov mov and repnz repnz imul pop out std push ss rex.WXB mov int (bad) divb (bad) xor or rorl rex.W mov jbe fstpl movabs cmp mov retq loope retq test ror nop rex.B cmpsl stos leaveq rex.WB or outsl adc pushq (bad) or pop loope rex.WB test lret jb fist push (bad) (bad) jg movslq push or (bad) mov (bad) in outsb testl and (bad) (bad) (bad) decb (bad) (bad) (bad) decl adc movsl cli push (bad) jae (bad) xchg mov std (bad) (bad) cld mov xor (bad) push repz cmp mov push (bad) cltd std push rex.RX (bad) mov push xchg lret test rex.WB pop jno lods xorl (bad) scas leaveq lods iret fnstenv icebp pop loop fimull cmp outsb pop (bad) mov mov and in add (bad) (bad) and in fistl or out mov add mov (bad) lahf mov pop sub xchg callq (bad) xor sbb outsb fnsave mov (bad) rex.WRX mov pop (bad) (bad) (bad) sti xchg (bad) (bad) (bad) (bad) (bad) (bad) and jmp movsb ja rex mov outsl (bad) out fisubl pushfq movsl (bad) in (bad) imul or and and movabs jg (bad) (bad) (bad) inc (bad) add pop (bad) mov fstpl in mov add popfq xor (bad) adc enterq pop fnstsw sbb lret movslq mov (bad) xchg cmp rcr shr inc sub neg btr not ror add cmc sbb cmp mov rcl adc mov clc cmc jmpq rex.X (bad) cld movabs (bad) xor adc outsl pop pop jge sti adc scas movslq rex.W jno xor leaveq (bad) xchg stos sbb in roll or (bad) mov mov rex.X rex.WR fsubrs cmpsl sub push addr32 mov gs in out mov loop sti jb (bad) (bad) cmc (bad) js sub mov test retq gs jns (bad) (bad) cld and popfq jbe (bad) (bad) (bad) mov rex.WB sbb jg rep (bad) in add lret sahf lock fisttpl push add (bad) (bad) add pop cltd jnp mov xlat mov sub nop scas mov pop retq (bad) std add add pop movabs test cmp (bad) or pop enterq mov jrcxz xor (bad) mov cmpsb rex.W adc rex.RXB push loopne movabs or (bad) clc mov sar xor xchg lods dec clc stc neg clc cmp bt xor not neg neg add jmpq jmpq bt cmp stc clc add bt test stc mov stc clc test jmpq jne jmpq jmpq stc cmpb jmpq rex.RB lret mov cld outsb add repz sub add sti cli (bad) fmul cli nop jo,pt push xchg movslq lea cli out mov xor mov xchg cmpsb sbb jge xchg xchg mov xchg rex.RX adc iretw pop jp (bad) loop in jmpq jmpq rcll (bad) jg xor (bad) (bad) (bad) (bad) std or sbb or mov pop loopne sub (bad) lods (bad) (bad) (bad) std cmp (bad) (bad) cmp (bad) imul (bad) scas add add or je out (bad) pushfq (bad) sub (bad) sub addr32 xor jne movsl (bad) cmpsb mov cmp mov (bad) sar addr32 add xchg hlt mov pop pop cld (bad) add xchg mov pop leaveq pop jg sbb sub cmp in lock mov sbb icebp repnz jmpq ja xor xor (bad) lock fmuls sti sar sar not add sub bt rcr bsr mov shr mov xor mov bt bt repnz jmpq jne clc setp shr mov xor sub lea bsf not mov bt stc sub test pushq test cmp jmpq jae shrd mov mov shr shr neg mov movzbw dec lea clc mov test xor bt repnz je jne btc stc not xor mov shr sub ror shrd xor mov mov jmpq jmpq clc clc xor stc clc cmc cmp repnz jmpq fst mov sub mov movsb push lahf jb jg cltd (bad) (bad) adc callq cwtl cmpsl sbb je or jo scas rex.WX (bad) movabs loope in lret pop xchg movabs hlt movabs addr32 addr32 (bad) push lods mov or (bad) (bad) in jmpq cltd sbb mov stos pushq sbb lret mov pop icebp (bad) (bad) (bad) lcall adc loopne rex in or iret lods mov jbe add leaveq rex.RXB movabs xor rex.R mov and jge,pn mov and xchg test pop cmc pushq mov out mov out sbb lock (bad) mov pushq fnsave mov out mov outsb xchg icebp sahf or jge adc loop xchg js (bad) shrb mov cwtl xor in add mov shlb push sti xor rex.R ror mov adc push or add cmc out div fildl or cmpsb divl mov stos imul cmp push rex.W jge loop (bad) (bad) (bad) cld sbb cmp (bad) (bad) (bad) (bad) stos loope ja rex.XB fwait lahf and insb rex.X js (bad) add add sub adcl clc jmpq mov in mov and cmp pop ud2 mov add mov sub sbb pop sub stc fstpt movslq (bad) movabs pushq sbb mov push rex.WB lret retq add pushq rorb cmpsl jg xchg push rex.W fildl pop or and (bad) (bad) (bad) std cwtl rex.WX (bad) (bad) mov adc jmp andps xchg movabs iret cmp sub (bad) rex.X mov (bad) (bad) (bad) std xor mov (bad) (bad) (bad) jmpq and cmp mov stos std fistl mov sub movslq xchg fs xchg scas adc ss or mov movabs sbb out or jne bt mov test add clc movzwl xor mov stc je cmp cmp add cmp bt bt cmc mov jae test jmpq jmpq push lock std std (bad) xlat xchg outsb pop mov retq je sub leaveq pop lods sub pushfq mov (bad) ss xlat movabs push mov rcl push pop int3 add in shlb adc test outsb popfq xchg movabs data16 shr xchg (bad) (bad) stos in notl xchg mov or fstl jmp adc and decl addl rex.R mov (bad) cmc add shld cmc mov sar cmc btc mov clc test sub jmpq sbb fistpll iret adc mov (bad) jg rex.WRX (bad) jl test std scas movzbl insl (bad) adc (bad) outsl sub push xchg push or jp fcmovb sbb sbb jae fldt adc sub movsl mov imul rex.X rex.X (bad) test jb sbb push fdivs (bad) mov xchg movabs (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) lock rex.WB push or cltd leaveq add (bad) jae (bad) jle ds mov sbb (bad) fs popfq rex in nop (bad) mov jnp rex.WB push (bad) (bad) mov (bad) mov rex.WR addr32 fbld imull (bad) movslq cmpsb sahf xor pushfq loopne pop (bad) or (bad) pushq sub rep sub cmp pop repz notl andl and pop mov push push (bad) gs adc sub mov jge outsl xchg (bad) sahf and xchg (bad) fmuls movabs cmc mov (bad) ss rex.W or cmp push jno mov sub xchg mov mov fcomi jnp mov repnz outsb cs cmp movsl pop leaveq cmpsb rclb and adc adc rex.B mov rex.WB sub xchg mov imul (bad) decb (bad) (bad) (bad) (bad) lock sbb stos cmp int3 out jrcxz fsubl adc (bad) jl pop sti lock rex.RX lods cld add cs pop (bad) add sti and (bad) pop rex.WRX fnstsw add movabs (bad) jno outsl insb rex.XB cmp or jne in (bad) rex.WRXB ficomp rex.WRX int (bad) push cmp ror movabs xor adc xlat (bad) popfq icebp mov rex.B ss sub icebp (bad) jrcxz out shll and (bad) decb xor cvtpi2ps int3 insl (bad) or cltd sbb xor movabs out pop mov jmpq mov js mov retq push mov push xchg or jnp xchg sbb cmc rex.R push (bad) sbb jrcxz notb xchg mov xor (bad) rex.R fstpl rex.WRB (bad) and pushfq (bad) cld cmp insl add sbb and test (bad) mov out push cmp pop push or in adc xor mov xchg cmp and (bad) pop fbld (bad) (bad) cld scas mov (bad) (bad) incl (bad) xor outsl push or sub or leaveq mov scas (bad) mulb movsl fimul and jno test repz (bad) ja add add rex.R cmp push rex.B insb or sbb rolb (bad) ja adc (bad) xlat (bad) repnz sti push xlat mov int lods push lods add mov jae ds jmpq jb test cmp clc cmpb jmpq jae stc add dec mov jmpq clc repnz jmpq jnp jae cmp cmp jmpq rep movzbq pop jmpq stc clc xor bt test clc add jmpq cmp cmc xchg clc stc cmp sub stc stc clc shl seta lods cmc clc jbe cmc neg clc xor test neg cmc test add jg callq jmpq jb jmpq jne jmpq jne and sub btr mov bt sbb and or add adc test mov bt test jmpq shr movsbw mov jmpq int sbb (bad) stos pop sub xchg icebp xchg in not xchg hlt pop adc rex.X pop or repz jae fimul je add addr32 cwtl rex.B add rex.WRB rex.RXB (bad) cld push jo sub divl stos and popfq stos sbb (bad) enterq frstor push out and mov jl sub xor rex.XB repnz out movabs rex.RX sti lods (bad) in xchg and cmpl push (bad) sahf test shll scas test (bad) sti fdivr push cmp (bad) (bad) (bad) (bad) imul (bad) cmp (bad) mov divl mov jmpq cmp sbb xchg adc and leaveq rex.WR mov (bad) adc cwtl nop leaveq in xchg imul and pushfq mov sbb mov push jbe jne not setne pushfw and test mov bt cmp stc cmc neg bt stc stc jmpq jmpq mov test lods int mov decb cmpsb imulb callq adc mov rex.RX (bad) rex.WXB data16 xchg or pop xchg (bad) movsl (bad) out out cli rex.WR movabs sahf rex.R gs data16 (bad) (bad) sti mov (bad) (bad) (bad) decb cmpsl movslq add adc mov and (bad) and sbb push cld sbb or (bad) (bad) incl rex.WX mov xor clc jp cs (bad) movabs icebp loop in cltd mov stc rex.RXB mov lock push (bad) push fisttp lock sub (bad) addr32 mul mov fnstsw and jns rex.WX push lods cld mov stos push push jno sahf int3 cmp and cmp lahf stc cmpsb mov jnp loope rex (bad) sub sub stos std adc sub xchg cmp imul (bad) cld pushfq (bad) (bad) stos pop clc push add cmpsl sub mov (bad) ljmp mov lret xchg retq mov sub mov add add jbe mov pop mov (bad) movabs mov cmc jrcxz adc jg ja adc outsb mov xchg sbb mov rex.XB movsl cld jp scas mov ja fidivr (bad) cld lret xlat (bad) (bad) movslq rex.RXB xchg outsb xchg fild cld fnstenv mov pop mov (bad) mov jbe xchg add mov (bad) cmp sbb cmpsb popfq xchg (bad) clc mov rcll add test adc (bad) stos lods mov lods in popfq rex.WXB rex.WR fstpt cltd enterq ss (bad) jge test sbb jg lods (bad) mov in sahf cmp ja sub (bad) (bad) (bad) decb (bad) (bad) (bad) pushq sub jmpq (bad) pop rex.RXB sbb hlt rex.XB repnz pop int cli push outsb lret pop (bad) xlat jno jmp fnsave (bad) mov rex.WRXB (bad) rex.WRX lods lock outsl (bad) in mov in mov jns xchg mov add add lea outsl pop add out jbe xor fadd add mov or ja (bad) insl xchg xor in rex.W out (bad) rex.WRXB loope xor jns test xchg add repz or push rex.WXB mov (bad) leaveq pop ds sbb rorl sub rex.WRX pop (bad) (bad) (bad) sti mov cld add (bad) (bad) cld addr32 (bad) mov adc decb int adc (bad) jae fimul gs test and mov popfq add add or rex.WX mov (bad) pushq retq test xchg int push icebp rex.WB xor mov js xchg std decl test decl fisttpl retq notb scas sahf (bad) xor sahf rex.RXB stos adc jrcxz div mov jb mov cmp js (bad) rsm mov (bad) fcoms je rex.WR lock movabs sub mov mov jbe rex.RB rex.RB (bad) add mov outsl jl loopne fidivr loop cmpsb int add (bad) rex.WB movabs mov add mov cmp loopne cltd mov outsb or jb push pop clc enterq cwtl add xchg (bad) and test pop cli nop sti retq jle rex.WRXB mov jp sbb xlat rcr bts add not rcr and jmpq jmpq add rex.RXB gs outsl fs imul add or sbb movabs sub xlat xchg rex.R pushfq leaveq mov xor enterq leaveq lock out rcll add cld out mov jg xorl (bad) cmp (bad) (bad) jne (bad) adc (bad) (bad) cld movabs xor mov adc loopne jmp add xchg xor mov idivl imul iret cmpsl jg (bad) lahf movabs and and mov addr32 std mov jns sarl repnz scas mov xchg mov mov (bad) icebp movabs hlt rex.WRXB (bad) (bad) cmp add (bad) mov jp sub shr or (bad) or out stc sub bt cmc jmpq loop adc (bad) pushfq mulb cmpsl mov mov (bad) (bad) (bad) cmp xchg add (bad) ss fbstp xor cmpsb movabs pop sub pop push sbbb add icebp out adc (bad) mov cwtl (bad) or rex.RB std divl cs rcr rex.WR and in pcmpgtb (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb (bad) cmc rorb repz mov dec (bad) mov jrcxz std pushq cmpsb xor and rex.W rex.W xchg test xlat rex.XB roll retq jmpq (bad) sbb xor xor ja lret fdivrl fmull (bad) mov cmp or adc bt shld mov test add bt mov cmc stc test jmpq clc cmpb jmpq ja stc stc jmpq cmp sar and mov rex.WRB es test (bad) (bad) popfq sbb outsb mov rex.WRB (bad) xor mov add mov pop lret scas xor cmp mov xchg (bad) cmpsb mov insl mov or jp (bad) mov and lret (bad) rex.XB movsb popfq sub outsb mov mov je je xor test cmp (bad) (bad) add ja ja (bad) or lea rex.WX rcrb sbb cld fs jge (bad) (bad) (bad) (bad) cmc jae pop mov sub mov test add add hlt int3 not mov rex.WXB (bad) jnp sti lret cwtl rex.WB jg rex.RXB loopne jrcxz xchg sub xor fsubl jnp push (bad) mov (bad) mov stos (bad) pop cmp addr32 xor (bad) negb mov lea sub mov (bad) std imul cmpb cmp (bad) (bad) (bad) fistpl (bad) or xabort (bad) cli sbb sbb xchg push rex.RXB repz rex.WRX xchg sub jae jno xchg fs sub mov (bad) jge jae (bad) (bad) (bad) sti ja in jle (bad) (bad) incb rol adc jg cwtl rex.RB movslq xchg icebp xor (bad) movabs (bad) outsl fiadd sbb jp jrcxz xor (bad) (bad) lock mov (bad) (bad) (bad) jmpq out mov fdivl xor sbb pop icebp cwtl mov push cmp rorb sbb jge push jp imul (bad) stos (bad) movabs pushfq lea jle or clc jmpq jmpq callq jmpq bt add cmp jmpq callq imul outsl jo xchg adc rex.WRX xor rex.WRXB movabs mov mov (bad) std out movabs sbb or add add mov sbb add xor cmp in rex.WXB add cmpsb test xlat test cmp or pop rex.RB add fdivrl pop jg add movsl push xor cmp loope cmp cmp sbb sbb rex jmpq jmpq rcrl xlat stos callq ds rex.WR adc (bad) (bad) sar jle mov (bad) jo test pop pop rex.W and mov or rex.WRX rex es jne (bad) xchg jnp sbb and movabs jne mov fisttp (bad) loope sub add and test imull and (bad) xchg fs movsl sub (bad) (bad) sti iret mov (bad) (bad) (bad) (bad) (bad) (bad) and pop sub add sbb lret stc mov cmp lea scas mov (bad) (bad) decl loopne cmp sub pushq sti sahf test pop jbe lea mov xor push mov cld cwtl test in pop icebp pop int cmp xchg ja cs jg pushq scas add mov cmc mov adc sub mov jmpq jmpq stos jmpq bswap movsbw lea jmpq jmpq jmpq sbb gs ds imul (bad) xchg push mov sbb pop ss fbstp movslq add cli adc sbb rex.WRXB fcmovb mov sbb mov and es xor jmpq int mov sub fs rex.B (bad) (bad) cld sbb out sub (bad) (bad) (bad) stos (bad) sbb (bad) jns movslq stos or or xchg cmpsl jl mov push rex.RXB and push (bad) xchg sub rex.RXB (bad) fucomip (bad) (bad) cmpsb sbb or mov rex.WRX rex.WXB outsb sbb lahf add add rex.B add callq jns cmp sub rex.WXB fld lahf add add or in iret pop (bad) xchg pop (bad) adc sub adc sub mov addl outsl sbb (bad) mov stos clc in mov (bad) (bad) test mov and jg (bad) push or mov int3 add (bad) fcmovne mov mov jmpq subl lods fcompp ja cmp xchg add sahf rclb es pop (bad) mull sti adc pushq cmc jrcxz mov sbb mov cld stc lret pop rex.B (bad) (bad) sti iret lods rex (bad) (bad) (bad) (bad) (bad) (bad) rex.WB fimul (bad) xchg add pop adc test rex.RB (bad) (bad) jmpq rex.WR (bad) add sbb sub ss mov rex.RB fcoms xor xor jge sub (bad) mov jp mov enterq rex.WR jae push clc lret mov (bad) jrcxz in rex.WX jmpq in and mov imul and or mov mov and xchg int pushq jp ror rex.WRXB or mov movabs cmp movsl cmpsb (bad) addr32 ja adc (bad) in callq (bad) nop mov insl imul test rex.R xor pushq and push jne fsubrl rex.XB sub movabs (bad) (bad) sti movsb insb push pushfq jne (bad) (bad) (bad) xor scas scas iret callq (bad) (bad) (bad) (bad) pushq rex.WX xchg mov retq retq mov je push movabs jp ja sbb fidivl cli (bad) push (bad) imul pop pop sti test sbb ja jmpq jmpq mov mov rex.WX add movsl mov mov (bad) hlt repz addl jb retq movabs retq pop sahf mov mov (bad) xchg addr32 jae sub nop out fcmove hlt out test in roll add mov (bad) mov (bad) jge lret (bad) rex.WR jl mov cli and rex.W (bad) mov (bad) (bad) sti or (bad) (bad) std pushfq rex.WR (bad) (bad) cmp cmp cmc hlt sbb mov sub push pop out rex.WRXB cmc hlt sub xchg js rex.B rex.RXB rex.WB rex.RXB data16 (bad) (bad) lcall popfq pop leaveq jae xchg jg shll imul or rex.B jb add push cmp rcrb sbb rex.WRX mov push cmp outsl (bad) mov test test fmuls cmp bt cmp jmpq rex.RXB mov (bad) mov mov fisttp adc sub rex.WXB xchg addl jl pop (bad) mov or movabs (bad) xor jo push or sub cld loope sbb jnp (bad) movabs (bad) fldt (bad) (bad) and cli sub adc lock pop fsubrp xchg adc cltd test (bad) (bad) ljmp xchg (bad) sub sbb out rex.WB pop add add adc retq movabs lret add out (bad) xchg push cmp fs cmp cmp fimull fstl sbb and jns (bad) addr32 test outsb or jo pop nop fnstcw stc insb loop xor xchg mul leaveq stc out addl sbb and cmc in retq sub stos scas retq mov incb rex.B (bad) jle (bad) mov adc ja (bad) add add and (bad) jo cwtl mov jp fs pop out push lret outsl (bad) mov pop sbb cmp (bad) cld adc sub (bad) movsl (bad) (bad) je pop xlat xchg rex.WX rex.WRX loopne sti or or mov (bad) push rex xchg lahf add loope add add (bad) jmp and xchg sbb mov insb and push outsl idivl jo out icebp lods hlt movabs fldt (bad) (bad) mov test jno rex.RX and sub xor jl (bad) add cli mov and jmpq mov add movsbl jmpq leaveq (bad) retq adc cmp andl movslq movabs sahf imul jg mov (bad) repnz fstl sbb and movabs or and pop sti loop push sub out rcrl xorl pushq scas popfq mov loop cmc in clc and movabs (bad) int3 mov mov sti hlt rex.WR rex.WXB jp (bad) (bad) incb cvtpi2ps mov rex.RXB rex.WB rex.RX add add rex.RB (bad) adc vrcpss fcompl xor (bad) (bad) mov sahf (bad) (bad) callq cwtl or (bad) (bad) rex.R add or push mov cs mov iret pop cltd test int mov cmp ficom rex.R and cltd push (bad) mov jmp xor jg add sbb (bad) mov bnd std jmp repz mov cltd pop mov (bad) mov push cmp sti jmp in std rex.W pop (bad) sahf movabs lahf mov fwait enterq fwait cmc and in (bad) (bad) (bad) sti pop adc cmp (bad) (bad) (bad) std in mov jge enterq (bad) rex.WRXB fwait iret sub (bad) (bad) (bad) (bad) (bad) (bad) mov fs sub rex.RB mov jge add adc movslq rex.XB cs movabs cltd (bad) fwait scas and xorl add test xor callq sbb adc sar (bad) test sbb sub xor leaveq clc stos (bad) sbb adc rex.WB rex.W sbb test (bad) adc pop mov sbb xor movsl (bad) mov rex.WX test and cmp retq rcr movsb push push rex.WXB js add and jb fstpl (bad) imul add fstpt rex.WB out adc (bad) js sub (bad) or jl cmpsl mov jno jne jle adc (bad) (bad) (bad) (bad) clc cltd xchg std mov jmp (bad) jbe mov cmp int3 out fstpt sub jp test and (bad) addr32 mov fstpt push out (bad) cmpsb int jge nop adc adc mov mov lea (bad) decl adc callq shr fcmovnu cli (bad) clc cmp jmpq bt test cmp jmpq movabs ds (bad) add and movb xchg adc add push xchg insl test xor std in cmpsl xchg add es xor cmpsb jns mov stos mov movsl rex.WRX fdivp mov data16 rex.WR rex.RB (bad) add ds callq rex.XB ds insb negl stc cmp jne cmp (bad) (bad) (bad) incl pushfq jle push rex.WR ss lock add xchg (bad) add rex.B mov xor cmc enterq test pop xchg std movabs push (bad) negl push cli cmc pop (bad) xchg mov cmp lea (bad) cmp rex.RX pop (bad) (bad) mov mov rol je clc add test bt cmp jmpq cmp bt stc repnz jmpq data16 pop mov stc push in pushq gs cld pushfq mov addr32 outsb sbb movabs (bad) (bad) (bad) mov (bad) out rex.WRB rex.WRX rex.B rex.RXB lods fnstcw cmpsl (bad) fs sub (bad) sbb (bad) jo es rex.W (bad) jne (bad) fdivrp shr mov movabs cmp push rex.B rex.B cs or sbb outsl repnz (bad) (bad) sti cmpsl and cltd cmp (bad) (bad) (bad) ficomp mov retq cmp xor (bad) (bad) (bad) (bad) pushq (bad) lea rex.RXB mov mov pop adc (bad) mov add cmp or sub js cwtl add mov mov mov mov insb sbb loope (bad) decl xchg or (bad) jmpq push movslq xor cs insb add movabs nop nop mov int3 (bad) sub data16 add xchg jb enterq in rex.XB or or push test rex.WX sbb add push rex.RB add mov pop callq fdivr mov xor imul fidivr jp mov sahf (bad) (bad) cld sbb sub cmp ja (bad) push (bad) (bad) (bad) sti in xor (bad) (bad) (bad) jl xor jg jns test cld (bad) test movabs or lods add (bad) hlt adc adc xor add lods leaveq negl xor outsb (bad) scas cmp out insb rex.XB sbb test sub jmpq je clc add stc test stc cmp jmpq pop cmp and jl pushq (bad) xor add loope rex.WXB (bad) retq sub cmpsl sbb retq sub add and sbb xchg sub or rcrb (bad) enterq jl in out or fdivs int3 lods cmpsb callq jne int3 lods add int3 jnp test fsubrl adc add or cld test cli jmp (bad) (bad) (bad) (bad) cmp jns imul rex.WRX rex.RX cmp rex.WXB add add gs rex adc rex.WXB sbb movabs rex.WRX repnz mov (bad) push (bad) adc (bad) (bad) lods add (bad) mov jge mov (bad) out rex.WX movslq fisttpll rex.X sbb shrl scas (bad) push cmp cld adc pop or cmp movsb pushq repnz pop cmpsl ficoml (bad) imul pop (bad) enterq movsb rex.WX adc xor outsl fs cmp jg jl adc lock rex.WRX and repz test add repz pop and btc mov jns (bad) je (bad) (bad) (bad) cld fdivl (bad) (bad) ljmp or xchg (bad) jg push add xor clc push or (bad) add (bad) (bad) lea add add loop icebp repnz cmp out (bad) xlat cmp icebp xlat cmpsb mov and jne popfq (bad) cwtl pop cmp gs cmc (bad) scas (bad) xchg movabs pop movsb mov rex.WRB mov mov mov cmpsb repz fidivrl push test add pushfq (bad) cmpsl jmp sbb loopne in std xchg cld (bad) jge push mov pop xchg adc jmp (bad) cmp pop lret xchg add sbb movabs (bad) popfq popfq repz popq rex.RXB repnz (bad) jg in push mov sti xchg lahf mov scas sub imul mov fs test rex.WRX push mov (bad) mov mov jge mov (bad) xchg in inc jmpq (bad) mov mov fist cli popfq sub xchg push rex.B adc cli loope shrb mov pop xchg out ficompl (bad) mov hlt or cmp and rex.R fstps callw mov mov int3 and jmp xor rep lret addr32 mov xchg pushq and pushq scas retq mov (bad) fs cmp lods (bad) callq std or movabs pop out rex.RB push repnz add add mov je rolb out out rex.WX out (bad) cmpsb int or (bad) ss (bad) add rol in xchg loopne shlb mov mov (bad) sti mov cwtl ja and clc not sub jmpq jmpq icebp (bad) movabs adc nop stc scas adc and push test out rex.WR rex.WRX es push movsb and mov jge outsl mov std (bad) rex.X ljmp pop stos add fisub insb (bad) fimull fldcw sbbl lahf int pop mov movabs cmp jo (bad) je adc (bad) (bad) sti cmp cwtl sub (bad) (bad) (bad) std int3 push add fmul rex.W mov xcrypt-ecb cmpsl add mov addr32 xor or fcompl iret rex.B callq jge stos pop rex.RX push scas mov out js or mov pop ds int3 add adc xor (bad) rex.WX outsb rcr rex.X mov nop jl push sti je movsbw mov not lea setnp lea setno not jmpq jmpq clc stc cmp jmpq callq clc clc test stc or jmpq lea jmpq rex.WRB xor loop mov movabs je cmp data16 movsb lret (bad) movsl sbb xchg rcr sbb pop (bad) (bad) pop mov test pushq (bad) rex.RX rex.WRXB (bad) jge mov mov pop rex.WRXB add je in leaveq jmpq add fs movabs (bad) (bad) (bad) cld sbb mov lods or add xor data16 movsb lods xchg mov add cmc jrcxz (bad) rex.WB rex.WRX int test xchg mov sbbb (bad) (bad) cwtl clc push ss int3 adc insl xchg mov nop xorl cwtl mov sti mov ja push loop jmp mov xchg movabs (bad) (bad) incl add je push je imul add clc bt imul cmc test stc test add jmpq jae movsbw mov inc shr xchg mov mov movsbw add lea mov jmpq je test jmpq add shld mov movzbw shl sar and mov stc clc bt cmc sub clc repnz jmpq fs mov sub (bad) (bad) sub sub (bad) (bad) (bad) push data16 jbe outsb icebp sbbb push mov (bad) test mov rorb cwtl addl mov xchg fbld (bad) (bad) mov rex.WRX pushq adc sbb nop cmc loop pushfq fiaddl (bad) mov test movabs lods (bad) pop xor retq jb adc data16 mov mov repnz pushfq add mov (bad) (bad) cld pop (bad) test (bad) (bad) (bad) (bad) (bad) out sar xchg mov mov (bad) mov sbb add in mov add (bad) test pop rex.XB icebp jrcxz and mov (bad) rex.RB rex rex.WRXB cld push (bad) retq fistpll xchg enterq stc loopne enterq (bad) lock stc sti imul mov ja (bad) mov mov (bad) bnd hlt xchg xchg push repz out retq (bad) (bad) cmp (bad) push callq movabs xchg out shlb lret add push test xor movabs xchg leaveq movabs add sbb (bad) sub es sbb push repnz jmp jns scas (bad) pop (bad) (bad) (bad) sti sarl (bad) (bad) push jns adc test cwtl int3 movabs adc (bad) jb sbb rex.WR rex (bad) movsb adc (bad) (bad) jmpq (bad) sub callq xchg stc cmc push or (bad) imul movabs imul out jnp ficomp loope push cmp xchg jnp cwtl mov add (bad) stc cmp jmpq (bad) or rex.WR xorl jrcxz insl push pop push (bad) sbb stos rex.WB in shlb pop pop xchg mov stos (bad) cmp pop sbb imul iret stos rol mov cld add orb mov xchg mov cmp (bad) (bad) sti and (bad) (bad) std mov shrl lahf (bad) scas add add cmp and rex.XB stos fisttpl test cli fidiv sub rex.W scas lea (bad) movabs cld cld (bad) fs movabs push pop in repz stos or mov xchg cmp adc (bad) idivl movsb sbb jns test jl cld mov mov and fstpl xor pushq push out pop add (bad) stos scas mov xlat mov xchg mov insl (bad) mov (bad) ljmp movabs rex.B rex.WRX jmpq ja jmpq jbe sub mov jnp sub sbb rol bsf mov sbb mov xor add rcl cmc shr xor bsr mov xor btc test add not mov jmpq cmc cmpb jmpq cmpb jmpq add add pop add add jo js subb test mov mov test loopne callq test and rex.W push stos subb stos movabs stos lock clc stos or add add pop add add movabs (bad) movabs mov movabs stos cmp pushq stos cwtl stos test mov stos callq stos sbb stos pop stos pushq add loopne add add add movabs fsubs lock sbb movsb cmp movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs add add movsb mov shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test loopne callq stos add sbb xor stos push stos pop stos (bad) stos jo js subb stos movabs stos fsubrs clc stos add lods and lods mov add add (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor mov mov add and add test callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add lods and add add pop test mov mov test add add test (bad) add movabs mov movabs clc movabs and push movabs add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add sbb xor scas push scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add add add add sbb xor rex.W jo js andb movabs sub mov add sbb xor pop movabs andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add (bad) add add add movabs xor movsl jo cwtl movsl shlb cmpsb pushq add addb or add pop stos jae add add (bad) scas add add add movsb add and add add add movabs add movsb and stos add add or int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb inc push xor push shl xor movsbw sar push (bad) negb lods (bad) or btr mov add or or mov jmpq jmpq jmpq mov cwtl out out pop rex.WR (bad) lret mov and mov out pop xor cwtl pop xor in in clc jrcxz (bad) fimul btc rex (bad) mov xlat roll xor enterq mov ja fsubrl enterq (bad) (bad) cld or sub rex.WR stc imul popfq lahf scas pop repnz (bad) xor outsl (bad) sbb rex.X fmuls jrcxz out rex.RXB mov sbb xorl or rex.WRB sub sub or pop cmp pop rex.RX xor cmp cmc (bad) (bad) (bad) (bad) in (bad) mov (bad) lods fstl rex.RB pushq mov rex.X je fdivrs (bad) pop cwtl sti (bad) or and rex.RB je cld lahf cmp test sub movabs enterq adc btr movzbq mov stc test stc cmp shl jmpq setg mov jmpq jae test stc clc test add jmpq or loope push enterq (bad) xlat rex.WRX cmp rex.WR icebp stc (bad) popfq add or in or mov mov and mov lea leaveq (bad) rex.RXB in sbb pop rex.RX xchg add pop stos popfq rex.WRB xchg add xchg shrl jmp rex.RB rex.RX fidivl test or lea stos jge mov stc (bad) test rex.W movabs mov rex.RX hlt sub (bad) int3 loope movabs (bad) and mov jne nop jmpq (bad) cmp push add test movabs xchg cmpl jge xchg cmpsl andl sub jp movabs leaveq cmc xchg cwtl push pop mov and xor (bad) xor sub sti cs gs test cmc clc cmp sbbl xor imull (bad) icebp cmc fcmovnbe jno enterq outsl xchg jae,pt cmc cltd lret add add std mov jo movabs ffree mov in test mov rex.WXB fldz fwait push xchg sbb mov int3 test rex.WB cs test icebp callq xchg (bad) retq shrl mov icebp in (bad) iret lods xorl add scas add cld pop (bad) insb je bnd sti jne loop sbb sahf add jae xchg test movabs mov cmc icebp rex.WXB jns rex.RB leaveq rex.WB sahf (bad) rex.RB cli or xchg mov icebp sub (bad) int rex.B sub rex.X loopne es mov (bad) xchg mov xchg shll mov addr32 in sbb mov adc hlt lea mov iret cmp je int or fdivrl jno scas sub pushq test (bad) cmp cmp (bad) jl add popfq mov loope incl retq out std stos add (bad) sbb mov add (bad) rex.RXB cli incl mov (bad) xorl popfq adc cmp mov or test (bad) xchg xchg fcomip cmp add xchg nop fild add xchg movsl icebp fwait (bad) int xchg sar and (bad) lock sbb jrcxz or or (bad) cltd test bswap gs push mov (bad) cmpl lret iret iret xchg or orl (bad) retq rex.WXB lods leaveq rex.RB in (bad) ficompl test and fildl in retq out xchg or jmpq in shlb (bad) cmpsl loop push sub enterq fxtract cs loope add pop repz icebp sbb xor int3 ss cmp mov push xor xchg cmp mov sub (bad) or rex.RB repnz sub pop rex.WRB rex.RB gs movsl jbe rex.WR jno (bad) pop jns fwait retq fdivp mov movsl sti retq test (bad) sub loope sti enterq fmuls mov add xor hlt icebp (bad) add orl xlat push sti mov push ror lahf (bad) or loope scas (bad) (bad) cs (bad) adc rex.XB loope (bad) out cmc and and jmp vandnps push addl std icebp movslq jns mov mov movabs mov test xchg sbb out xchg test adcl je mov jno mov xchg repz iret mov in (bad) rex.W (bad) in cmc gs sub add rex.XB jmp or enterq jge push mov mov lea orl sbb int add rex.W retq jo lock leaveq xchg hlt sub movabs mov add xchg ss jrcxz leaveq cltd (bad) in int (bad) (bad) stc xchg pop fsubr pop rex.R rex.RXB clc loopne and fldz push int3 mov sub rex.WX rex.WRX shlb or fldcw retq rex.RXB movsl xchg movabs sahf rcll or jge int3 std sbb sub andl (bad) push (bad) repnz insl addl jl movabs je jp mov notl mov adc (bad) mov callq rex.WB (bad) cli (bad) fisubr mov xor clc movabs test (bad) repz movsl lea js mov int (bad) mov nop rex.W or (bad) rex.WRX xchg (bad) outsb int3 shr sub (bad) cmpsl iret test xchg xlat adc out mov repz or pop xor (bad) jg push xlat rex.WX leaveq jge in fmull adc jnp int3 ficom (bad) add (bad) add and or adc insb rex.WRB xchg rex.WRX add int3 (bad) (bad) jno vpsubb (bad) sbb lods jno mull xlat loope leaveq sbb cmp cmpsb mov test lea push movabs mov sub hlt sub stc test xor mov adc out (bad) in leaveq sti imul push rex.B rex.WR notl (bad) mov movabs andl mov leaveq rcll leaveq adc lret cli sub rex.WXB sahf fsubrl (bad) mov adc xor movsl sub cmpsb adc loop outsb in mov enterq lfs pop mov cmp adc cltd rex.WR std std iret sub rol sbb push movabs sub repnz sbb (bad) mov out sti xor cltd sub rex.X fucomp addb pop mov sub rex.XB cmp jnp pop rex.WX mov sub sub fmull (bad) enterq rex.RB push rex.XB fs lods rex.XB je hlt (bad) push xchg adc sub rex.RB xchg (bad) xchg xor sar and icebp cltd or movsl xlat lret xor movsl adcl add sub icebp push int movabs sbb loope jne imul xchg negl rex.WX iret lods pop lock retq jns and mov clc out sbb imul adc push mov (bad) (bad) rex.WR add mov adc negl rex.XB gs xlat rex.RX mov jno repnz mov (bad) or cltd rex.X xchg in out (bad) test jne sbb packsswb outsb in out retq movabs test xchg imul (bad) sub add jrcxz jmpq out shl (bad) cltd mov sbb in insb add mov movabs or add (bad) jne xorl lods sbb movslq repnz rex.W test (bad) rex.W mov cmpsl xchg mov mov es mov sub mov loopne (bad) test loope iret cmp rex.W (bad) (bad) (bad) pop mov sbb rex.WB sub leaveq repnz sbb clc rex.WRX ss mov test (bad) mov cmp inc pop cli outsb jbe sub cmp enterq repz push lret sbb xor iret cmc (bad) testl cs (bad) rolb in push (bad) int3 adc mov jo stc jns xchg push iret pop lea mov icebp or rex.WRB (bad) out push rex.WRXB cmp jg rex.WX sbb rorb xor xchg movabs (bad) addr32 pop clc lock fwait (bad) jrcxz (bad) jne or out test enterq adc lret out enterq (bad) imul je push xchg (bad) cmp testl (bad) fwait mov cwtl jb (bad) mov adc test faddl mov lret mov rex.RX std shll mov movabs fbld mov xor fcompl mov pop rex.WRX test push adc (bad) scas cmpsb (bad) pop sbbb adc sub mov add leaveq jle (bad) negl retq out (bad) jge adc jmpq fdivp callq movslq (bad) jb xchg out mov (bad) cmc (bad) hlt (bad) cwtl movsb in je (bad) repnz (bad) fist in in rex.RB (bad) fs int3 bnd fisub pushfq movabs addl cmp jmp mov mov add repnz add leaveq lret mov rex.WRXB rex.WRB cmp add movabs add sbb (bad) fdivs (bad) incb test sub jrcxz (bad) lock cmc repnz stc mov jae add adc idivl or rex.XB clc lret rex.R mov in add jno jo notb psrad in jae cli rex.RX je cmc test loop (bad) (bad) rex.XB xor jrcxz mov adc in outsl hlt flds sub in (bad) jmpq mov pushfq (bad) rex.B add fsubl (bad) test fnop mov (bad) fwait std add (bad) cmp add (bad) (bad) jbe (bad) or pop (bad) loopne scas gs xor mov subb outsb in movslq cltd lea in out iret mov movb lret outsl cmp or and jae xor data16 test xor rex.WXB and add (bad) (bad) xchg retq repnz cld je vmovaps jp mov xchg enterq or loope sti nop push orl movsl sub movl xchg pushfq or (bad) xor xlat or imul xchg cltd (bad) mov or and hlt fnop rex.WB and add adc retq add cmc cli mov sub jl rex.WB retq lret retq jbe mov leaveq xchg lret jns xchg rex.RX (bad) int in mov mov std sub adc (bad) cmp movl enterq repz (bad) pop movabs in rex.R (bad) xchg cmp addr32 cwtl fildl repnz andl mov rex.WRXB cmc xor subb icebp cmp movabs rex.WXB adc int3 imul (bad) cmc (bad) or rex.R add xchg xor jns mov cmc add callq fisttpll loop mov mov adc in mov adc iret rex.RX test hlt out repz xchg jl (bad) mov callq (bad) (bad) mov faddl movabs hlt sub cmpsb xchg add out (bad) mov sub add scas mov or (bad) int3 andl fiadd mov (bad) stc mov lods stc repnz movabs (bad) pushq and jle jl cmc sub loop cmp cwtl (bad) mov xchg (bad) in (bad) rex.WRB rex.RB mov mov add mov rex.WXB add xor ss nop out add rex.WR sub enterq or lret andl sbb (bad) test xlat (bad) add cltd fisubr (bad) stc repnz xor cmc je xchg push jbe (bad) rex.WB int3 fisttp je (bad) mov retq xchg (bad) rex.RB lods leaveq retq sub (bad) enterq or rex.WX rex.WRX stos rex.WB cmpsl jl jne push xor (bad) vpmaxsw insl sbb clc jmp (bad) (bad) repnz lock jmpq icebp rolb rex.WRX xchg icebp pop gs (bad) (bad) or rex.B xlat rex (bad) out jb imul shl movabs fcmovne adcl in data16 add loop enterq retq lea (bad) mov enterq in stc add data16 movslq movsb mov enterq clc mov or (bad) mov es callq callq xchg jl leaveq mov in out lret (bad) outsl xor insl mov fimull (bad) popfq in retq scas (bad) fadds (bad) mov iret insb jp rex.RX rex.R add int3 repnz cltd (bad) mov int3 add add cli mov mov (bad) int jl rex.WR jne rex.WB xchg jns pushfq fidivrl ja (bad) jns sti loop fdivl mov in cmp or fmuls jno test push (bad) mov enterq (bad) ds rex.RXB jmpq rex.RXB push callq test sub shll mov (bad) (bad) int add int3 orb mov (bad) repnz shrb (bad) out xchg popfq movabs rex.RB mov cmp mov icebp out jae (bad) data16 (bad) and add (bad) xchg in lret jbe cmp push incb lret rex.RXB int3 leavew repz pcmpgtd ss and and sbb (bad) add in xchg or (bad) rex.XB repnz rex.RXB cmp or pop int ror mov je mov cs test in (bad) in sub adc rex.RB loope rex.B rex.WX in clc fadd mov (bad) mov xchg retq xor rex.XB repnz (bad) (bad) movabs rex.WX xlat scas jbe mov jno sub negl and shrl adc xlat (bad) (bad) imul in cmp stos lock fidivl (bad) loopne adc scas movabs cltd int xlat or xchg xchg jns in mov je push out icebp rex.WR std jle int3 mov sub je xchg data16 adc rex.RB adc pop leaveq iret fiaddl mov rex.RB rex.RX (bad) cltd sub cmc cmp xor (bad) cmpsb rex.WB fstpl adc and cld (bad) outsb mulb jmpq mov in (bad) (bad) and xchg push mov jrcxz lret mov mov mov xlat icebp jp (bad) ljmp (bad) (bad) gs leaveq (bad) in gs jns movabs rex.WRXB mov js jmpq sub in (bad) jmpq jbe jp es out jns pushq jne int3 rol mov addr32 jae cmpsb adc rex.WR adc or push jo shrb or jno out (bad) xchg in or adc add out add insb out imul test frstor int3 in jno jae jg movabs retq xchg jns movabs movabs loop lods rolb add jb int3 icebp (bad) xlat cmp jns (bad) mov movabs add rex.B repnz xchg rex.X push loop rex.WR mov out rex.WB rex.XB sbb movsb fisub and mov pop (bad) lcall pop mov xchg sahf rex.WR rex.XB ds (bad) jns loop hlt outsb cmc mov nop fisubl hlt loopne add jrcxz (bad) out mov cmp (bad) or js and out ror test out stos callq jl jb jns (bad) cld rex.R ds push add (bad) jbe in cld jnp and jns cmp pushq fldl2e retq jmpq rex.WB jrcxz js rex.WB mov je (bad) and popfq mov rol rex.W fcmovb or xor add sbb and pop (bad) (bad) jmpq pushfq xor jge (bad) clc pop rex.WX adc bswap cltd jge (bad) sub sub xor or test callq or mov sbb dec xlat xor jl roll jrcxz addb in cmp xchg retq or push rex.XB cmp cs and mov (bad) lock loopne rex.W push rex.R mov xchg in jno mov adc int3 push add mov mov or not rex mov xchg rex.W lret mov cmc (bad) push sub (bad) add pop ds and lret jnp (bad) jnp movb popfq or and and adc adc clc fs jo test fbld xchg cmp rex.B jbe cwtl cmpsb shl adc in subl sub (bad) fnstenv rex.WX test cld adc xchg xor rorl idivl movabs movsb rex.RB rex.WR sub rex.B mov nop retq mov rex.WRX jns cwtl fcmovbe mov adc in and imul mov (bad) (bad) jae jae lods and (bad) rex.WR (bad) fdivr push imul pushq (bad) and sbb push int3 lea ja jl cmc adc hlt (bad) (bad) pop jl int lret mov push sub cmp (bad) mov or mov xchg retq imul pushq cli jmpq sub (bad) rcl push rorb add insl movsl leaveq in repnz xor leaveq adc (bad) out jmpq callq enterq lret mov mov (bad) rex.WRX mov mov add in rex.WXB rex.WRX in (bad) scas or cltd push retq movabs or shrb rex.WRX xlat xor mov loopne mov jge test jno (bad) xor rex.XB add int in (bad) pushfq (bad) (bad) test fidiv cltd roll xlat mov iret cltd and fimul (bad) mov scas int rcr mov fs mov mov (bad) jnp adc int3 (bad) sub out (bad) (bad) add cmp scas stc insl and or xlat adc add mov mov or sbb jne mov (bad) sub stc fdivrp retq (bad) test cltd or mov rex.WB rex.R loopne and xlat add cmp jns sbb rex movsb out rcr in vorps psubd retq xchg jae loope frstor jno and jo sbb movslq adc (bad) mov rex movabs (bad) fisttp cli stc mov mul out in popfq push rex.XB (bad) int (bad) mov (bad) cmp rex.WR jmpq mov (bad) jae add xor add int (bad) mov movabs out movb je (bad) jmp (bad) jbe xlat xor out xchg mov shrl ds xlat and insl iret enterq shll xorl retq movabs add fstps imulb icebp fcom (bad) (bad) or and int3 (bad) pop rex.WR mov mov fnstsw mov pop rex.RB leaveq loope loopne stc hlt cmp (bad) push neg int jno add repz gs cmp sbb xor and retq cmp sub movsb mov loope std sub movabs mov (bad) pushfq mov fdivs fldt add xchg cmpsb mov adc rex.XB loope (bad) int3 add lret jae cmp jo rex.R divb in mov sub movsb std add int3 mov and pop callq loop jne jmp jp mov rex.W jb (bad) or (bad) loopne sahf pop notb add sbb (bad) out mov stc (bad) (bad) nop add mov mov stos rorl (bad) lea (bad) int (bad) (bad) stc (bad) (bad) gs (bad) (bad) cmpsl rex.WX movabs in lret lret and loope (bad) rex.R cmc movabs xlat or add ror testl rex.WXB je (bad) xor scas outsl jne jbe test jrcxz xchg cmp mov (bad) test (bad) std cmp rcrl add lret (bad) xlat or movsl hlt (bad) or (bad) testb (bad) (bad) rex.WRX idivb push sbb mov push add adc xchg mov divb pop sub jnp je xor mov leaveq (bad) fldcw rex.WRXB cltd stc rex.RB rex.WX mov adc xchg push ss jrcxz movabs sub (bad) repz xchg (bad) in xchg loope retq sub jmp pushq or mov hlt (bad) sub jmpq ja rex.WRB repz jle mov int std adc xchg ficomp xlat cmp or lahf (bad) icebp mov icebp rex rex.XB xor outsl retq in lahf rex.WR mov cmp in and cmp (bad) mov sar and jrcxz repz icebp jns in and xor mov jne bnd cmc jmp (bad) iret xor test (bad) sub cltd fildll jno callq add xchg lods (bad) cmp (bad) rex.WB and push sbb lods sarl xor (bad) cld xchg fstp mov sub je popfq add rex.W (bad) mov and gs mov (bad) add (bad) ss sub (bad) xlat (bad) rex.RB cs rex.RB incl (bad) iret cmpsb xor (bad) fwait (bad) retq adc pop incb shr jrcxz icebp imul js mov fimull movabs cltd rex.WR rex.RB repz sub mov lock adc cmp rex.WB gs clc retq js xchg mov js ss cmp or shrb sub out int3 (bad) (bad) repz int3 vmovhps (bad) fcoml jno stos add sub sarl pushfq pushq int3 or rex.WR (bad) movabs (bad) adc negb jrcxz cli sub movabs stc mov pop sti out js xchg or rex.WRX jp movabs iret int test (bad) ficoml cmpsb xor mov je movabs pmullw leaveq jp mov cs stc mov js insl xchg fdiv stc xor scas out mov test jrcxz loop repz loopne mov rex.WB or (bad) stc cwtl push (bad) rex.WXB lret jmp out mov sub movabs vmovsldup mov insb (bad) notb fmulp jne data16 hlt jl lock xchg negl repz outsb and (bad) or (bad) leaveq xchg divb adc (bad) outsb xor cltd rex.X add jo mov sbb lret retq mov ficompl int imul and sub rex.WXB fs (bad) shl mov or rex.WB adc sbb rex.RXB rex.XB mov in mov push rex.WXB rex.WRB and leaveq stos clc repz mov jl gs fisubr pop rolb xlat lea and (bad) pushfq in leaveq pushq callq adc ftst out cli repz xchg fsubrs fdiv insl (bad) xchg fstps iret fsubs jmp and (bad) nop repnz in sub ss lock jrcxz movsb test add loop (bad) out pushfq mov cmp mov test fmul mov or lea jb jne rex.WR fdivr rex.WRX push add jb cld mov repz rcrl push pushq jb (bad) jb sub movslq movabs retq rex.WXB lea js mov jrcxz jmp (bad) and (bad) rex.WRX int3 (bad) retq add (bad) xor mov rol xor or out push cmp add pop or repz mov pop int3 sbb hlt imul negb push xchg js or xor (bad) enterq in (bad) sub jmp sbb pop xchg test cmpsl loope fiaddl add rex.WXB xchg add adc pop xor fildl rex.WRX rex.RB int3 jrcxz scas rex.R frstor ja mov xchg ds xlat (bad) callq sub movabs xor (bad) xchg jrcxz xchg cmp hlt stos callq xor imul pop cmp (bad) xchg rcrb adcl push (bad) pop pushfq add sbb mov or and fild add xor pop mov ss rcll mov fdivrs mov xor fs or mov je lret test fnstenv lret mov adc rex.WRX add fcomp add cmp retq rex.WXB (bad) std jo add nop jrcxz (bad) lock jrcxz mov outsl out popfq int3 cmp and ss and xor in loope sarl add movl or mov test mov or clc jle jnp (bad) mov (bad) icebp out sub out stc (bad) loope (bad) repz je lods adc (bad) xor and hlt cmpsb (bad) sub je leaveq in gs sub mov mov cltd xor repnz cmp jbe sub rex.B (bad) mov rcr (bad) callq and clc movabs jmp jbe or movslq hlt sub hlt sbb imulb jae rex.X rex.WRX rcrl fmull in pop rex.WRX (bad) insb jg (bad) mov movabs jbe jno sbb (bad) cmpsl test rex.WXB (bad) sub cmp bts imul (bad) xor out sub and add movsb xchg jg ss out sub int3 hlt ffreep mov jmpq mov loopne retq add int3 jo outsl add sahf in int3 (bad) or cld (bad) rex.RX sbb rclb loopne (bad) fdivrl test rex.XB lock pop mov lea cmp (bad) pushfq fcom scas add mov sahf (bad) (bad) mov fdivl lods (bad) fwait (bad) fsubl mov (bad) mov (bad) add movsl sbb fldenv push fidivrl rex.WB rex.RB mov addl xchg push mov retq movabs pop (bad) cmp pop push test lahf cmp sbb shufps jp (bad) mov out jl or mov loope sub scas (bad) sub rex.RB mov repnz rex.RB rex.R out callq or push andl cmpsl mov movabs mov mov stos rex.WX rex.RB repz fsubrs (bad) (bad) int3 rex.WRB sub cmp rex.RXB rex.RX rex.R jrcxz imul or out ja (bad) mov jb or adc test in and pushq xor (bad) (bad) stc notb (bad) xor add movabs out and and push or icebp and (bad) or in lods cmc int3 (bad) cltd and stos negl subl xor mov xchg iret ja jae xor jp pushq rex.XB push test (bad) sbb out (bad) fsts (bad) insl sub xor nop repz sub and test jle (bad) mov roll in xorl stc lret (bad) mov add roll push data16 mov jmpq popfq fsubp fs or stos (bad) (bad) in lret je sub cltd lock pop add adcb testb adc mov repnz in rex.X (bad) rex.WRB iret mov rex.RB rex.RB add jnp fist fcmovu cld mov test callq sti jle rex.WRXB repz mov jns (bad) iret in sub xlat retq sti leaveq rex.XB fsubrp jge out and icebp (bad) cltd push (bad) fimul addl push repnz xor jne mov (bad) rex.WR jbe pop test xchg rex.WB and clc scas out or push cmp jl fidivl icebp rex.WX iret cmp and sub incb test lea (bad) push ja or repz in not add push (bad) fistpll (bad) xor rex.RB fsts sub fsubrp (bad) callq jo mov cmp outsb sub rex.WX sbb xchg callq jbe xor xor fiaddl cmp test xchg in shll xchg rex.WXB ja jrcxz insb test mov test cmp xlat and or cli rol mov out (bad) (bad) out sbb (bad) (bad) gs sub (bad) sbb mov adc sbb sub fadd jge fwait lock sahf sbb pop sbbl jno cmp mov mov data16 rex.WRB ss add (bad) rcr mov add out mov fild hlt enterq (bad) leaveq out and or xor out mov xchg sub or xor movsl (bad) add push (bad) (bad) test adc sub cli gs mov fcom pushq leaveq rex.WR (bad) loope div movabs fstps (bad) add (bad) (bad) mov jno mov mov fild (bad) rex.RB add shll int3 mov insb out idiv mov (bad) in (bad) fisttp add rex.WB loop mov in add mov retq fcom insl test (bad) jmpq sub cmp mov and (bad) (bad) mov pop je (bad) (bad) xlat xchg jmp and callq mov (bad) fnstcw (bad) hlt rex.RX jno xor mov (bad) cld test mov and scas mov test rex.WRX push lock movsb mov add movsb repnz xorl clc rex.RXB (bad) (bad) mov or jns mov mov fcoms sub sbb nop (bad) fcmovnb jrcxz or jae fs int jb in rex.X mov xorl rex cwtl (bad) jbe jne stos repz rorl jae loope xchg in shrb idivb (bad) or test adcl (bad) add (bad) enterq testb mov (bad) int3 mov cmp fmuls add jo fs rex.WRXB mov in xchg iret out and add (bad) loop add mov (bad) std pop (bad) pop or mov (bad) mov pop sbb sub pop jl (bad) or push repnz fsubs (bad) mov (bad) push sub (bad) adc (bad) (bad) rex.W and sub cmp mov gs (bad) xchg rex.RB addl rorl outsb loope int3 sbb sbb repz pop clc pop sub stc notb mov (bad) int3 rex.RX xchg push and mov (bad) retq repnz (bad) (bad) mov and lock in punpcklwd jno sub cmp movsb jge in rex.WRX gs xchg (bad) mov rex.B movabs mov and sub icebp test xchg jg sbb push xchg or enterq (bad) sbb (bad) fdivrl rex.WB data16 (bad) jl (bad) mov (bad) mov retq lret icebp lret lret (bad) (bad) int cmp and in rcrb (bad) fnstsw rex.WXB repnz lods rex.B (bad) hlt out repz sahf (bad) test mov xchg std cmc mov clc or int mov icebp fildll out (bad) xor (bad) pushq shlb mov mov loope sub cli rclb pop cs fbstp cmc sub movabs sub in cltd (bad) (bad) (bad) add and mov (bad) int3 (bad) fild addl jne fs sbb lock rex.B fnstsw cmp jmp (bad) (bad) mov adc int mov lock jrcxz leaveq fdivl movabs jne ja je pop shlb or (bad) hlt jns test fnstenv and cmp mov (bad) xchg fadds and subb (bad) sbb pushfq xchg rex.R rex.RXB cmp jp and add rex.WB and fdivrl rex.RXB sub sbb (bad) sbb xlat int xchg in cmp retq add repz cmp xchg std fidivrl movabs cmpsb sub adc pop movsb jl movsb repz jmpq sub jae movabs shlb retq xchg gs or (bad) jrcxz enterq xchg or int (bad) repnz add and xchg (bad) xchg cmc sbb sbb cmp push orl (bad) xchg push push cmp fstp mov mov int mov test clc sub movsl mov jbe and adc (bad) movabs cmp mov xor pop (bad) mov outsb fs fprem mov icebp sub xor cmc (bad) sbb (bad) insl (bad) sbb push and xor and shll xchg test lahf jne sub adc pop mov add rex.WR (bad) retq mov xor int xchg xor test (bad) fbstp sub xchg fs adc mov movsb retq jg add test jrcxz xchg push rcrb rex.WR rex.WX imulb adc sti (bad) pop stos imul in mov jns add mov mov (bad) repnz (bad) (bad) xchg rex.WX ds sub pop (bad) rex.XB rex int cmp test (bad) test leaveq scas xor repnz and add jno sbb je lret xchg orl enterq fcomp xchg add xlat (bad) pop stc repz cmp notl fisttpl (bad) (bad) adc rex.WB cwtl add or mov sub cmpsb or test movsl rorl ss cs (bad) int mov sbb fmuls xchg rex.RB xor and rex (bad) (bad) sbb mov (bad) and cli mov (bad) mov lea rex.WXB rex.B test xor cli xor movsb lea (bad) in cmp lahf test mov mov jl,pt (bad) cmp bnd sub mov xor jmp stos (bad) fistpl (bad) rex.WB xor pop adc retq and icebp cmp xor xor rex.RB sbb icebp (bad) adc pushq movabs lock (bad) xor fcmovnb add fnsave add lock xor (bad) or add (bad) (bad) sub mov and add mov mov pushq movsl and rex.WRB mov loope xchg fs (bad) (bad) xchg movsb (bad) sub repnz rex.B rex.WR cmc rex.WB movslq (bad) shlb out add jnp add jno insl rex.RB jmpq fldl repz movabs xchg rex.RB rex.RB loop (bad) jge jb fild push (bad) lock mov in movabs push (bad) rex.WX sub and movabs leaveq pop (bad) ss repnz lods pmulhuw (bad) rex.R repnz and jp (bad) movabs pushfq jp add hlt (bad) and test (bad) sbb addr32 in cld jno mov sub in and jns negl and ror rex.WXB and pushfq or out (bad) cld xor mull cmp jl (bad) scas pushfq rex.B scas imull sub add movslq mov and cltd push in push mov subl ja and rex or fcoml iret insl (bad) enterq out jbe leaveq jno test rex.WB mov sbb or (bad) stos loop test data16 (bad) in mov lods rex and mov lock pop mov lret repnz cli mov or mov cmpsl xor adc leaveq mov (bad) test sub (bad) data16 sub movabs leaveq mov pushq negb add xchg and (bad) jne jg jb lock rex.WXB rex.WRX int3 cmp sbb (bad) out idivb repnz rex.WX sub sbb (bad) movsl fwait sbb sub fdivr (bad) rex.R mov add pop in xor jo lret gs test hlt test lods mov rclb mull lea fldenv mov mov in add rex.WRB jmp test cli insl xchg sti mov test xor jae sarl (bad) imul movabs (bad) fstps movslq cmp mov (bad) and xchg jmp xchg mov add rclb movslq jno mov sbb lods (bad) ss movabs and and or cmc xchg mov (bad) (bad) stos jae (bad) xchg pushfq rex.WR int3 je jrcxz int3 (bad) scas rcrl rex.B gs and js rex.B rorb rex.RB fwait mov lahf lea std scas lret enterq add xor sub mov decl (bad) or sub (bad) or scas mov in sub int xor (bad) xorb cmpsb xlat or cmp stc jae (bad) rex.WB movslq fs out (bad) cwtl in pop loope fwait js xchg cmp nopq and add fstp cltd rcrl mov (bad) rorb mov (bad) int3 or in leaveq jns sbb mov cmp fisttp fsub and in stos test (bad) xor clc push mov sbb out clc (bad) fldcw adc pushq adc test lret (bad) movslq add ror rex.B callq je (bad) mov rex.RXB cmp ss fucom mov retq sbb roll nop and lret scas lret xor xor jge mov (bad) jne push rex.WRB mov push mov in mov rex.RX gs outsl rorl callq loop fwait mov fisttpl sub push roll sub mov cmp jae xor outsb and loopne leaveq sub mov (bad) hlt in (bad) mov (bad) (bad) cld or callq (bad) (bad) fistl sbb stos rex.RX pop (bad) jrcxz lahf ss rex.RB jp or and pop cld iret std (bad) rex.WB rex.WX js in xchg sbb lret mov adc mov (bad) jae xor orl pop rex.X movsl sti mov retq (bad) and rolb adc sti enterq and retq shll fnstenv leaveq and pushq jl mov fbld (bad) or popfq mov in fidiv hlt rex.X push cmp fsubl lock jne test iret (bad) cmpsb gs adc (bad) rex.XB fsub rex.WRX ss rex.WRX data16 cltd (bad) xor rex.RB rex.WB rex.XB mov or (bad) mov test xchg (bad) (bad) lret xchg lods stos jb push testb cmp xlat mov mov xchg and jno mov xlat repz add insl adc (bad) xor fcoml hlt or or imul jnp jnp div jae shll scas sub rcr (bad) test adc rex.WR (bad) adc movabs (bad) int3 sub pop (bad) sub in add add movabs sub add addr32 xchg mov sbb gs fcomip add or xlat (bad) cmp retq cmp imul ss add je repnz in add adc cmp xchg roll lods rorl jno hlt movabs (bad) adc pop push adc std push outsl rex.XB rex.WR mov (bad) (bad) (bad) rex.R xchg sub adc jp pop lea rex.RXB mov and cmc mov jmp movabs xor and sbb jns cmpsl mov addl mov enterq (bad) in xor (bad) out movabs cmpsl xor jo clc rex.RX gs adc lods (bad) (bad) cmc repz imul (bad) mov mulb and mov rex.B repz (bad) and (bad) icebp xchg or (bad) xchg (bad) ja sub in rex.RB ss and jge (bad) cmp (bad) xor lods and or loopne push out sub xor faddl out xchg rex.W adc (bad) in retq add cltd and xchg xor (bad) stc test rex.W jp loope jo (bad) addr32 mov cwtl rex.RB xor sub or callq sbb xchg insb or jbe rex.WB ja and repz in (bad) (bad) testl mov insl stos repnz notb rex.RX vandnps je gs iret loope xlat xor jne retq loop add (bad) pushq rex.XB (bad) jmpq pushq fsub or xchg scas enterq mov (bad) or mov leaveq (bad) xor adc insb repnz mov out mov (bad) push (bad) hlt (bad) (bad) rex.B or (bad) test and mov mov rex.R addl sub fdivrs mov adc add (bad) loope (bad) adc (bad) rcrl imul pushfq shrl cltd and cmovne rex.B xor xlat cmpsl in sub pushq mov cmp (bad) push jrcxz mov or cli (bad) rex.R rorl cmp rclb int3 sub (bad) fisubr cmp jno jne jb int3 xchg (bad) adc xchg and xchg mov pop mov addl (bad) gs icebp mov or jmpq cmc (bad) cs orl repz xchg loopne xchg adc fs mov jl punpcklwd xchg leaveq and mov repz xor or xchg fldenv and test add mov jbe (bad) andb (bad) gs lea jp and retq callq (bad) cmc rex.WX mov pop retq add (bad) je cmp cmpsl pop loope sub imul mov xchg (bad) (bad) iret fs rex.X pop or mov adc addb mov (bad) add mov sti out jo addl enterq cld jnp mov rex.WX rcrb jo jl mov pushq ja (bad) rex.WR adc xchg (bad) (bad) jbe ds mov cmpsb sub movabs mov (bad) mov or xor (bad) (bad) (bad) movsl xor jp,pt lods fistp (bad) mov xchg rex.W loopne lret js add adc xchg fwait push mov ss int rcl fmul movabs xchg mov (bad) clc test rex.W and push icebp movsb insl push jns mov rex.WXB and (bad) adc addl adc jrcxz push ficompl cmp fmull roll add enterq rex mov sub and loopne (bad) sbb test (bad) pushq sub jbe mov (bad) cmp sbb lods stc in jnp iret adc xor loope rex.RXB test rclb insb retq (bad) addr32 adc push nop adc (bad) cld mov (bad) shlb outsb xor ds cmpsl cmp cltd (bad) adc add cmc outsb jns test or jne hlt hlt stc (bad) icebp (bad) fprem clc xchg xor push int3 rex.XB push sbb mov stos imul sub push adc lods test movslq (bad) and test cmp fcomip mov or test movsb sub rex.WXB lock add rcr retq jrcxz int xor out leaveq int3 retq pushq (bad) xchg and push mov (bad) rex ja jae xor iret sub lret (bad) jno mov hlt rex.WXB outsl mov xchg sub or out stc pop xor movabs cmp stc pushfq cmp cmpsl std xor insl adc cmp rolb (bad) xor cmp movslq push or (bad) idivb xchg rcll pop fcoms push movabs imul lea fcomi out in fdivl lea push jmp sub xor xor fmull es xor rex.WB mov callq mov repz (bad) lahf gs callq (bad) rex.WXB test jl mov (bad) cld (bad) imul insb xor cwtl callq loope rex.WRXB out test int3 rex.RB sar adc es movabs rex.RB repnz repz (bad) mov iret je mov xchg hlt shrl je adc push in mov jle lods (bad) mov jl je popfq or mov (bad) pop fadds and sub rex.WRXB cs and nop or lret callq push in mov rex.RXB mov in sbb insb fsts mov retq cmp retq hlt or test callq iret cqto adc test rex.RX (bad) scas movabs jno roll cli mov xor xchg add push repz fcoms int3 (bad) out rex.WR push shlb (bad) add pop rex.WX push (bad) subl jle lahf lret popfq or in (bad) test add loop fldl sub and lret popfq mov push (bad) (bad) test cmc rex.XB rex.XB rex.B incb push stc sti cltd push mov add xchg and push rex.RXB jne hlt (bad) rex.WRX xchg (bad) in adc (bad) clc (bad) pop gs adc pushq sahf data16 cs cmpl and or xchg sub or jo cld shlb rex.WRX xor mov cmp out rex.RX cmpsb rex.WXB rex.WR scas pop jnp jne and (bad) imul jmpq int push xchg rex.XB or rex.XB adc jle cli int3 sbb test (bad) loope enterq (bad) rex.WB (bad) jb xchg test repnz repz rex.WB rex.XB rex.WRXB int3 int rex.RX cmc rclb (bad) mov lret mov cmp retq rex.WRX movsb fidiv stos rclb in rex.RB and vaddps cmpsl mov rex.WR add sbbb enterq outsl (bad) rex.RB out push jo jrcxz push jrcxz psllw loopne lods fcoml rex.WRB fnstenv or mov imul lock rex.WX (bad) jnp in icebp pop sub xchg rcrb mov (bad) add (bad) rex.RX sti cmp xor jmpq rex.RX rex.RX sbbl hlt rex.RB fidivl leaveq rex.WRXB (bad) sbb movsb (bad) jno popfq in add mov movl push add rex.B pop rex.WRX rex.B sub int3 in in (bad) int je sub xchg mov xchg lret mov (bad) jmpq flds mov retq xchg int3 mov (bad) scas cmp pop rex.WR (bad) rex.R adc insl xlat loop (bad) mov sbb idivl push pop xchg mov xchg (bad) jmpq adc pop iret jp rex.WX cmpsb xchg (bad) vandnpd test mov cmc and pop int3 outsl (bad) enterq mov not or mov or pop (bad) jmpq adc mov jno and and (bad) rex.WB sub cwtl movslq cmc add rolb mull add lea rclb xchg neg adc (bad) or cmpsl lock jae in scas sti test rex.WR mov pop pop (bad) rex.WB add mov rex.RXB xorl (bad) enterq rex.X ds rex.WB add nop jrcxz cld cs rex.RX ss out (bad) stc (bad) divl cld jae jno hlt mov (bad) insl rex.WR add retq movsb scas andl js icebp (bad) jle sub sbb lret rex.WXB sbb sub and (bad) rex.WXB mov rcll icebp pop pmaxub jne in rolb rex.WB popfq jno (bad) (bad) (bad) xchg rcll flds sub rex.WXB iret (bad) (bad) xor pushq (bad) mov lret (bad) scas jle scas imul jrcxz sbb lahf pop jp (bad) in test push fs sbb (bad) jno add cmp (bad) lahf mov int3 (bad) rex.WR in (bad) adc repz add (bad) rex.WXB mov (bad) xor jp jbe fs (bad) repnz sub movabs negb mov in (bad) jle rex.WRX cmp jns movsb (bad) test lret out rex.X rex sub sahf imulb mov fs (bad) (bad) int3 data16 imul lret rex.WX rex.WB mov je xchg iret rex.WB cmp xchg mov ds jmp jle jmp leaveq sbb mov (bad) pop mov lock gs loope icebp in mov (bad) enterq in (bad) ud1 add mov scas mov xchg fadds mov imul rcll mov nop pushfq mov subl pushq lret xchg (bad) xchg mov (bad) mov mov (bad) (bad) (bad) clc sub jl clc (bad) and repz xor rex jns cmpsl in pushfq (bad) enterq pushfq mov sub in jmpq sarb jrcxz enterq je fcmovne (bad) mov rex.XB fs (bad) rex.B (bad) rex.WRX push in int3 fadds loopne and rex.W (bad) or repnz or adc rex.WRX rex.WR mov movabs rex (bad) lods (bad) rex.WRX movabs sub jrcxz (bad) data16 cs (bad) cltq rex.WRB lock clc movsb loope rclb movabs lahf rex.XB repnz rolb sub sbb out push callq retq mov cmp fnop fnstcw rex.XB adc js movsl xor mov pop (bad) loope enterq push test loope add fmuls mov andb (bad) sbb push notb xchg rex.WB and add or push cltd sbb rorq imul sub (bad) rex.WRB test or ss adcb (bad) add fldlg2 or test (bad) (bad) push repnz jl cli jmpq int3 rex.WRX vunpcklpd in (bad) rex.WRX push or and test rex.WR mov (bad) jns mov ja stc (bad) rex.WR iret jp icebp (bad) repz int3 clc mov jrcxz mov adc pushfq mov lods rex.WB sub stc out (bad) mov add cmpsl sbb (bad) mov mov rex.RXB movslq pushfq shll lret jno (bad) mov jmpq mov retq test rex.XB movabs sbb lret enterq (bad) lret xchg ss cmpsb gs rex.RB jrcxz movsl mov rex.RB push fnop mov movslq pop rorl sti rex.R xchg mov out div in (bad) movabs rex.R (bad) pushq out je adc mov or cmpsl mov (bad) xor rcrl add lret cmpsl enterq ja rex.R rex.RX ss sahf pushq lret in (bad) cmp je rex.RX mov and movabs movabs and rex.WXB shrb (bad) scas cmc xor pushq (bad) movsl loopne adc int3 in in clc add (bad) xor and rex.WRXB rex.WB (bad) cli test outsb jrcxz push mov xchg mov outsl loopne rex.WR ja icebp (bad) xchg (bad) (bad) pop mov (bad) movabs mov mov cmp jne cmp (bad) in or jmpq leaveq or retq mov loop mov cmpl movabs (bad) mov cmp out sbb in out int andb outsl je stos imul (bad) rcrb and (bad) push sub adc nop xor and cld sub mov cmc mov (bad) lret (bad) out fmulp test gs add ffree add fidivl xlat cmp out sbb jne cmpsb xor js mov mov (bad) jo (bad) or int (bad) xchg rex.RB mov and adc mov jns push movabs rex.B iret retq pop in (bad) repz lahf add xchg and lods xor sub (bad) (bad) iret cwtl adc fmulp iret sub (bad) xlat rex.WXB cmpsl repnz stos lret (bad) sti (bad) out addr32 jp jno hlt xchg mov std adc repz xchg rex.WR rex.W repz xchg insb jnp xlat fldenv mov mov pop sbb imulb out (bad) out mov mov cld out movabs mov fsubrs (bad) xor outsb and rex.WRX (bad) stos mov jg rex.W loope jmpq (bad) pushfq movabs adc (bad) xchg stos in xchg xor jnp icebp xor stc movsb scas fildl or stc jno mov test mov (bad) xchg jae out mov xor pop movslq jo loope repz rex.XB (bad) jl push movabs enterq addl push mov jne mov movabs clc movabs movslq push sarl fistpl cmp mov test icebp (bad) (bad) (bad) rcl (bad) mov adc (bad) jrcxz (bad) repz (bad) (bad) mov rex.B movslq push roll movsl test retq stos mov mov (bad) and (bad) div (bad) out pushq push icebp (bad) jle hlt out pop (bad) insb pcmpgtd (bad) pop sub (bad) (bad) orl xor hlt insb xor ja adc outsb cmp test (bad) mov or mov cmp xor sub add (bad) or lods enterq repz cmpsb (bad) fyl2x cmp rcll xchg cmp addl push (bad) nop callq movabs fnsave retq int stos pop add shll or (bad) adc (bad) (bad) cmc pushq cmp test vmovupd sub add push jbe rex.WX xchg rex.WRXB es (bad) repz int cmp in push test shll callq mov cltd and (bad) xor and mov lea (bad) (bad) roll (bad) mov mov sub mov add (bad) cmp (bad) adc push test jl (bad) jno pushq cmp movabs repz mov leaveq (bad) clc (bad) movabs jne repnz pushfq cmp xchg (bad) pushfq icebp rex.RB cmpsl (bad) test (bad) jno push icebp mov bnd (bad) xchg sub rex.B gs (bad) enterq (bad) (bad) repnz rex.WRX add mov (bad) cmpsl xor or loopne divb xor pop and in mov mov adc cmpl sbb movabs rex.WXB (bad) and clc add hlt or sarb in push mov rex.RX xor lock (bad) in divl repz rex.R (bad) fidivrl lahf (bad) ffreep mov mov jae rex fadd loopne mov pop rex.RB test adc add in (bad) rex.WR xchg push (bad) fbstp sub leaveq mov sti rex.RXB xor loopne retq xor int neg iret (bad) jbe mov rex.WRB fucomp (bad) (bad) (bad) pushq sub sub and xorl movabs neg int3 push mul cmp mov or (bad) cmpsb in push (bad) test clc mov xorl retq xor fiadd shl pop rex.RXB mov rex.RX pop xchg fist xchg movabs sub mov (bad) repz (bad) xchg mov (bad) jae retq fildll cmp mov lods fldenv (bad) and (bad) pop es fiadd rex xchg fcmovnb sbb repz sbb cli add js add std es mov rex.RB add push enterq jne icebp popfq sub in cmc (bad) repz rex.W (bad) add test adc loope movsb add or add test add mov push movslq cltd lock mov callq lret js sti repz mov xor movsl add sbb movabs mov jae insb (bad) sub cli iret insb lods jg imulb cmc imul mov (bad) icebp retq jbe (bad) lret ficompl negl sti xor jmpq cmp test jae rex rex.WR or int3 or add xor int3 pushfq jne fild rex.WXB rex.WR test sbb mov (bad) loope (bad) mul rex.RX int3 lahf cmp (bad) mov movabs add (bad) pop fwait (bad) rex.XB or pop (bad) enterq rex.XB jmpq lods jg test int3 (bad) ja pushfq loop sbb mov jrcxz (bad) callq in outsl out mov insb rex.RB (bad) rex.WRX lods ror rex gs lock (bad) cmp xchg jl (bad) jno rex.WR ds cs jne adc jb mov (bad) mov loope (bad) std mov jg roll lret repnz rex.XB lea rcl int jb (bad) push mov rex.XB jl scas lret add lods mov (bad) jne movslq mov rex.XB rex.WX leaveq pop (bad) idivb addb rex.R out (bad) mov cwtl (bad) imul (bad) scas xchg lock push repz jns (bad) rex.WRXB movsb cmpsb cmpw jl or rorl sub fisub xor push sarb jge (bad) (bad) pop (bad) rex.WR movabs (bad) (bad) pop jbe rex.WR jns (bad) (bad) rorl sti cli (bad) add cmp movabs rcrb cmpsl (bad) nop imul add addr32 jbe faddl lret movabs pop jg movabs jmpq cmp loopne cmc in (bad) rorb xchg (bad) fwait mov movsl xchg loope fcomi adc negb rcll jns xchg mov in jbe scas xor fdivl enterq repnz rex.WB std xchg jmpq xchg fdivp (bad) rex.WR (bad) leaveq out rex.WRX xor test (bad) iret (bad) clc jbe movabs and xchg addr32 mov clc rex.XB imul imul (bad) int movabs rex.B fnstenv add movslq rcr add jrcxz xor decl sbb loop sub insb (bad) int or int3 icebp rol stc jrcxz rex.RXB xchg (bad) fisubl or pop rex.WRXB leaveq movabs add (bad) rorl push xchg rex outsl mov jns rex.WX fwait imul sbb or mov (bad) rex.WXB sub and rex.WB es (bad) push add addb subl sahf mov clc xlat rex.WR jl jp adc out rex.WRXB sbb es callq rex.B sti pop sbb in test ror lods es in insl fdiv jne mov xchg push adc rex.RXB cmpb mov stos test (bad) mov sbb mov mov mov lock rex.B jle sub mov mov jo (bad) (bad) (bad) push mov out add rex.WR stos sub lods (bad) addr32 rex.WXB rex.XB rex.WRXB rex.WXB jge repz xchg test movsl cmpsb (bad) in or (bad) sbb test push rex.B rex.R xchg xchg (bad) xchg xor mov add fildll repnz movabs out (bad) in rex.WXB andl xchg cmc add icebp rex.XB movsl lret and icebp pop rex.R (bad) mov push out test icebp mov orl loope (bad) (bad) or jge (bad) sbb fiadd (bad) jl popfq (bad) loope addr32 nop rorl mov (bad) icebp adc sub pushq movabs pop (bad) mov cmc rex.B cltd rex.XB jrcxz sbb lret loope xlat icebp pop add mov mov mov (bad) repz xchg (bad) mov (bad) (bad) movabs enterq int3 movabs rex.WXB sbb and jle or (bad) imul and or (bad) movabs rex.XB fdivrs je test sbb cmpl and rex.WXB add movsb xchg icebp jge sbb (bad) sbb leaveq (bad) sbb mov test sub roll movabs fmul (bad) (bad) rolb nop rex.B mov and repz pop jno jbe add rex.WRB rex.XB nop jno xor fs adcl nop lea in sub movabs mov pop cmc loope xor roll sbb jg mov hlt leaveq adc sub loope jmp cltd sub data16 in xchg cmpl imul mov mov sbb xlat (bad) fstps push jmpq sbb test cmp mov jmpq scas in movabs rorl jns add out out in (bad) mov (bad) jns adc (bad) lods in loope xchg imul jnp rex.WX callq rex.WB cmp pop (bad) or popfq shrl rex.WXB (bad) stc xor mov vmovd mov cmc jno loope test jbe jns sbb stc in push adc xlat xchg xorl mov rex.WX add rex.WB xchg or jle sti sub mov sbb hlt xor (bad) movsb nop jno rex.B add roll cli mov (bad) in (bad) out lock cmp mov rex.X lahf push add imul mov sarl (bad) (bad) pop mov shrl repz sub andl jrcxz fisubr std roll fs data16 jbe rex.XB and cli rex.RXB sbb roll jo pop adc stos cwtl movabs fs rex.WRXB mov rorl sub cmpsb add callq int xchg hlt add lods (bad) cmpsb rol push ds or movabs outsl rex.W movsl mov jae add jmpq mov cmpsb sbb rorl loop (bad) mov adc add sub fdivrs lock jl sub imul sbb fidivrl mov stos sahf stos mov cltd fdivrp cld js add rex.WRB sub fldl sbb test lret in outsb iret mov clc cwtl (bad) sbb fwait scas cld pop sub cwtl stos and push jb xchg or rex sub addr32 (bad) push xchg lahf jp movabs or lods pop fadd (bad) fnstcw (bad) and mov push add rcr shl (bad) (bad) scas imul in push roll sub ror xchg cwtl xchg mov xlat jl loope sub (bad) stc mov movabs cli (bad) xor movb (bad) in mov pop lahf shl (bad) in fstps retq roll cmova cmpl rex.W jg in sbb rcrl stos rex.RX jp and mov movsl je add fldl fsubr roll xchg scas mov add lret xchg (bad) rcll jl shrl fist roll jno mov in insl shlb jmp pop js jg rex.R fwait je jrcxz pop xchg in stc cltd out cwtl (bad) xchg rcll and (bad) mov and ja and (bad) roll cltd icebp pushq jle xor (bad) (bad) adc sub rcrl push shll add jge outsb jmp xor (bad) xor in cmp jne lret push (bad) mov (bad) pause rex.WXB rex.RXB test (bad) mov lods add movslq push jo add shll (bad) or cmp (bad) test (bad) movabs pop je jb rex.XB retq lahf mov (bad) in rex.WRX loopne rcrb or insl rcll movabs mov shrl cwtl int iret test clc pop scas sub add roll lret cmp (bad) jbe mov shrl (bad) shr ja pop jrcxz cwtl rcl cmp sub pop sbb rex.WXB (bad) repz jno retq mov rex.RXB fisubr xor sub xor jo (bad) rex.WX movabs pop pop cld (bad) and rcrl bnd (bad) (bad) test (bad) icebp out pop rol and push sbb mov (bad) sar ffreep ficom pushq (bad) rex.RB jae xor (bad) jrcxz cmp pop pop clc mov pop sub mov xor std mov (bad) sub movabs add imul or cmpsl je jmp push ja mov (bad) iret cmpl (bad) loope mov xchg xchg rex.WXB (bad) jo in jns cmp test loope mov cld insb nop (bad) sub sbb push out push (bad) pop out mov (bad) in lea (bad) negb mov xchg ror pushq jo,pn (bad) sarl mov jne cmp jb and sar pushfq int or mov (bad) rex.RX repz loop adc shl incl shrl sahf cmc rex.RXB (bad) std sub sbb cmp mov imul rex.WR gs (bad) mov mov rex.WRXB (bad) ja xchg cld sub scas lret movslq (bad) mov adc paddsw jne fisttpl and rex.WRB jmpq pop decl fs (bad) rex.X movslq jns fwait movb cmp ffree and movabs rex.WRXB sarl subb mov outsl retq jg fsubs sbbl rex.R mov je (bad) adc push ficoml (bad) repnz (bad) jns sahf mov sarl std push (bad) jp roll scas rex sbb rcr mov (bad) sbb lea sbb jns adc retq xchg out mov mov xchg scas rex.WX addr32 sub movabs insl in cmp cmp iret (bad) fsubp adc int3 rcrl fsubrl (bad) xchg or and popfq and in movabs pushfq (bad) (bad) retq nop jmp pop (bad) addr32 iret or rcrb (bad) stc leaveq ds shrl (bad) rex.WXB clc add shrl ds shrl jno iret xor xor out pop xor sarl jg add mov rex.X mov mov retq sarl cmpsl mov xchg mov test incl movabs rcll (bad) mov sub (bad) lret gs test adc repnz fstpt jnp rex.RB push imul movabs decb add sbb outsl (bad) hlt xchg stos insb or xchg cmpsl (bad) adc sub fisubl and and loop mov flds adc sub loopne adc rcll mov rcll vzeroall mov pop rol lock cli imul add and (bad) js (bad) ffreep fisubl sub (bad) rcl fsts or cmp addr32 out rorl cmp fstpl push push cmp or xchg adc sub fwait sub rex.XB xor test incb add retq cld add mov xchg (bad) mov mov rex.WXB (bad) jmpq loope xlat cmc or and rex.WX xchg mov addr32 pushq insl mov retq (bad) pop frstor (bad) out mov lock rol loopne jno mov sbb rex.WB fdivrl rex.W rcll in rex.WRB movabs popfq (bad) xor (bad) mov mov jge pushq (bad) xlat pop rex.WR insl xchg scas shll orl mov (bad) xor xor stos movabs xor jbe cmpsb addr32 (bad) jo (bad) callq push pop mov int3 lods push pushfq mov (bad) (bad) movabs mov xchg add mov jp (bad) add loopne (bad) (bad) in roll mov imul sub adc out sbb loop fxch adc rex rex.WRB cs roll mov data16 sti sahf clc imul push movabs (bad) rex.WRX rex.WRXB cmp jae rol fisubl scas iret sbb lret pop xor enterq cmpsl and xor adc mov je fisttpll lcall xor rex.X push (bad) add in adc (bad) lock jno cmp and sub sub retq (bad) (bad) sub insl leaveq (bad) sub data16 repnz (bad) (bad) jno cmpsl hlt int3 xor mov int3 xor (bad) sti (bad) jne xor fwait add jrcxz pushq idivl ficom pushq sub or add add out icebp sub jge cmpsl ss (bad) rex.WX fcomps (bad) push lea fcmovb mov pop mov movabs (bad) add iret mov ss repnz add mov (bad) sub iret fsubrl jo insb and xchg cmp xor gs (bad) fidivrl adc imul test mov cmc retq test rex.RXB and add push adc movabs add push (bad) (bad) int3 fnop fs jp sub (bad) test xor pop (bad) movabs in lahf pop adc or (bad) rex.X lret mov cmpsl movsl repnz rex.WRXB rex.WRB sbb mov cmove sub movabs xchg js rex out cmpsb bnd (bad) loope (bad) lret pushq neg (bad) (bad) adc jno repnz pop scas js rex.XB fadds sbb rex.WRX cmpb rex.WR ja or mov out push enterq and adc mov retq xchg shrl pop pop sbb mov sarl pop movabs push cltd imul (bad) add js movabs fidivr je (bad) cli sbb std jl outsb mov xor mov sub (bad) jbe divl mov xchg leaveq out mov addl pushq (bad) retq adc rex.WXB rex.WX rex.B fsubl fld rex.WRXB rex.WRX scas sbb rcrl and cwtl mov popfq pop and (bad) mov fsubr (bad) lock shrl jnp in or jbe stc nop test mov rex.RB (bad) icebp cmp jae (bad) jo or repnz rex.WX outsb push mov loop pop (bad) rex.WB jrcxz or mov fwait fs or push (bad) test stc (bad) loop cwtl mov add rolb xlat jns and sarb xchg adcl pop adc clc (bad) and stos outsb cmp (bad) mov (bad) xchg add movabs and add rex.B fcoms iret cwtl movsb out iret xchg mov push adc iret retq fcmovnb push movslq addr32 in shrl fstpl nop loope cmpsl ror pushq sbb (bad) rol (bad) pop mov pushfq (bad) add push imul (bad) fadds fnstsw loopne imul xchg xchg mov jg xchg enterq jrcxz xchg xor jl rex.WRX xchg nop (bad) sub xor mov (bad) and pop shl (bad) loopne gs lahf shrl adc seta outsl movabs rex.WXB sahf loope rex.B mov shll js sub sub movabs pop test (bad) in rex.RX (bad) movsb sub or and lret jmpq (bad) (bad) cmpsl (bad) pushfq mov mov data16 sub jp rex.RX adc and xchg push mul (bad) fiadd pushfq fcoml mov sbb hlt retq mov shll shll rcrl out xor xchg xlat fldcw loope xchg cmpsb rex shrl and push div rex.RX sub js or jg fstpl negb sub rorl (bad) repnz pop data16 (bad) andl (bad) in lret rex.X mov fldt rcrl (bad) (bad) callq test adc out jno movabs cmp imul lea (bad) loopne movabs enterq and adc xor rcll lret sub ds or add cld fucom pop jbe cmp lods add fidivrl adc lret (bad) push outsl adcl or test sub (bad) fnstcw rorl pop lahf xchg rex.RXB sub fmulp jmpq mov retq push (bad) jnp js imul (bad) sbb (bad) pop fsubr xchg cmpsl (bad) out sub push sub mov movabs rex.B cmp (bad) out cmp (bad) insb xor movabs add out cmc retq xchg retq mov es fdivrl stc xchg mov loope int3 imulb vpaddb jno cmpsb push out loop movabs clc repz push stc jne (bad) (bad) add imul mov fcmovne std cmp mov sahf (bad) xchg scas out xor out jb (bad) fsubrl rex.B xor xor or retq outsl imul lock (bad) jle lea pushq movslq lods popfq push movabs (bad) jg sbb loope (bad) movabs rcrl (bad) shrl (bad) leaveq mov xor lea lret rex.X rex.WX and and iret rex.W cs xchg (bad) movabs enterq iret ror es test (bad) xor xchg cli rcll sub movabs and mov imul mov cli (bad) (bad) addr32 xor repnz mov jge rex.X enterq (bad) jl and (bad) adc xchg sbbb sub rorl mov and loop sub xlat loop shrl divl sar mov (bad) cmp jmp rex.WRX fisubl roll xor movsbl cmp jmpq add mov stos mov rorl in nop (bad) (bad) enterq fsub rcrl scas or (bad) cmp fistpll push pushfq in (bad) (bad) push and repnz xchg pushfq ffree jmp add fadds xchg add pop (bad) js test mov xchg loopne cmp rcll rolb (bad) pop (bad) rex.R (bad) loop mov rex.WRB (bad) pop loope (bad) (bad) jb mov cmp jmpq rex.B ja or mov (bad) mulb cmp (bad) rol sbb or xchg sbb xchg (bad) cmpsl jnp rex.B rex.RB and (bad) leaveq rex.R pop sub xchg or sbb rcrl (bad) mov push pushfq callq xlat addr32 cmc fldenv sub movabs sarl outsb out xchg (bad) movabs in xchg out shrl std pop roll int fcoms cwtl cwtl fmul jb push sbb ror insl push callq sbb stc and sahf fdivp rorl test adc (bad) fwait and divb (bad) and stc loop fnsave jne add lret shl (bad) out or cmp and (bad) fistp retq (bad) lret loope sbb cmp push test or rorl mov jnp push int sbb jb or ficoml (bad) or movabs mov rex.WB sbb jno or (bad) and lret lods pop adc (bad) jnp movslq mov shll mov push (bad) (bad) push loop cmpsl (bad) or (bad) shrl xchg sarl adc enterq out (bad) movb adc callq in std or push (bad) fbld (bad) and fldcw add sbbq insl (bad) stos (bad) rex.B (bad) (bad) movabs movabs or mov pop nop loop loopne outsb roll sub in (bad) (bad) repnz mov stos out jp push rcll push (bad) repnz cmpsl rex.W mov or movabs adc push fsubrs lahf pop mov push rex.WXB imul rex.RXB sub fwait movb repnz mov (bad) vmulps mov rex.WR in lcall mov (bad) sbb hlt (bad) cld (bad) mov jb cmp enterq movabs mov xchg repz (bad) push sub sti rex fbld xor pop cmp cmp pop imul movabs mov mov (bad) lock repnz js es movabs shrb or rex.WX cs jl loop movslq test test and (bad) imull std xor scas callq insb cs (bad) rex rex.RX (bad) pop fsubl test push mov push xor stc fwait loop (bad) (bad) or movslq out rolb in mov lods and jae lret shrl retq js repz es add (bad) (bad) fcoml enterq rol stos pushq stc and (bad) xchg (bad) mov (bad) sub xchg sub shrb sbb repnz mov xchg rclb imul scas data16 (bad) ror jg pop pop xor and subl idivl sub mov (bad) cltd jnp stc (bad) push lret out cmpsl loop pushq (bad) stc test stc int3 vfnmsub213ss (bad) jno (bad) retq jl test jge add rex.RX rex.WR rex.WRX (bad) (bad) mov push iret jp and (bad) cld movabs lret cmp and jge xchg mov fsubr mov (bad) sbb cld xor (bad) loop ficoml mov mov outsl cmp mov popfq sbb lret imul cmpsb cmpsb loopne add lret mov xor (bad) enterq xchg int in pushq out push incb scas fld mov mov sbbl (bad) sub jle adc ror adc (bad) clc push in (bad) sub mov rol shrl mov (bad) fwait push loope loopne mov rex.WX lock lret (bad) rex.XB cmc xchg pop rex.WRB rcrl fcmovnbe or push fwait rorl clc xor xor loopne cmpsl mov cwtl mov test pop stos mov lea popfq and adc leaveq movsl rcrl insl pop jae popfq rcr pop jmpq shll rex.RB stos bsf out (bad) lock lods add pop callq sarb out add (bad) (bad) loopne add xchg (bad) loop (bad) movabs roll adc insl (bad) mov rex.B loopne xor mov enterq retq addr32 or lret mov xchg movsb add mov adc xchg movslq repz jge pushfq rex.RXB xor outsb (bad) repnz (bad) fildl jnp pushfq cmp or rcrl pop cltd mov loopne and (bad) rex.RX lret icebp test sbb adc mov rorl xor lods mov mov (bad) jbe xchg fs incb mov jmpq lea cli lret scas and xorl add jo and mov sub retq xor hlt pop mov pop xor sarl xchg sbb push mov add pop cmp (bad) cmp cmc outsl sbb (bad) mov addl pop add lock jp rex.RXB fcomps loop mov pop movabs xor (bad) or rex.W jg add sub cmp (bad) movb and rol (bad) cld popfq mov (bad) cmc (bad) leaveq (bad) out cmp add mov (bad) rex.R mov or ss addr32 xchg jmp out outsb shl or repnz sub popfq xor je jbe jns scas and (bad) or movabs cs in out repz add jl mov movsb xor negl adc movsl testb pushq in rorl (bad) rex.RXB cli shll movslq xor push and or mov repnz rex.RB lahf add adc loope push (bad) test outsb mov or pop loop xchg test adc movsl jmpq scas repz pop pop mov pop movabs (bad) sub movabs popfq rex.RX jmp sbb add mov adc (bad) jg pop sub (bad) rex.RB bnd (bad) mov (bad) adc adc imul or xchg add xchg rex.B rex.RXB mov adc (bad) (bad) and rex.WRX mov jb rex.X fcmovu (bad) add (bad) pushq imul rex.X stos sub mov test insl stos fs popfq js movabs repnz test popfq (bad) adc faddl pop in (bad) mov rex.RX scas xor rex.RXB je (bad) out sub jle mov cltd jmpq add out (bad) xor sbb fsincos rex.RB sbb pop jmpq shlb subl xchg xchg rex.WX test in retq rolb sub sbb rex.WR xchg push jle rex.XB xchg rex.XB xchg fist (bad) add sar mov retq xchg sar sub rex.WRXB dec jge jo movsl adc add xor int or jg (bad) xchg sub movabs add data16 ss mov rex.WXB iret (bad) fsubr roll mov mov adcl jg pop (bad) mov jno xor movslq mov rex.WXB sarl (bad) shrl xor sahf add sub (bad) cmc out sub pop mov stc lahf pop (bad) jne push int retq mov rorl lea fisub sarl add (bad) push mov sahf test (bad) pop jns sbb (bad) rex.RXB jno movabs sub mov rol pop stos xchg popfq rorl and add pop out addr32 jle rex.WXB shll jmp sub scas ffreep sbb rex.WX cwtl or rex.WRXB xor (bad) (bad) mov outsl xchg xchg jno enterq enterq and out repz ds pop lret sahf je movabs xchg adc xlat (bad) jnp lret test movsl cmc je test int3 retq (bad) shrl std sbb (bad) cmp add adc out lret cli retq xor (bad) jl lods and (bad) lods test cmp rex.WRX mov js out ffreep (bad) mov xchg cmc xchg cltd mov shrl movabs xor and xchg sbb in (bad) movabs sbbl (bad) (bad) mov int sbb test (bad) jns push push mov rorl add (bad) cld or (bad) and and fstl adc cmp rcr fcoml out mov roll or (bad) lock xchg in adc (bad) clc (bad) jno fcos stos rorl push andb cwtl clc sub or iret xchg or and add xchg outsb pop test (bad) mov scas int3 pushfq jno mov roll addq test cli (bad) (bad) jae rex.XB shr cmp cmp or cltd leaveq scas (bad) and or (bad) icebp lea test cs add nopl mov out mov sub add loop or pop cmc jle rcl (bad) leaveq or clc fstps xor fbld xchg out (bad) pushq xor subl rex.RB rex.XB jg rcll xchg sbb shl jbe stos jae lret rex.X add (bad) imul lods idivb jo xor mov rex.WRB insl mov jnp mov gs ja xor cwtl outsb mov mov roll sar (bad) (bad) paddusw mov rcrl mov pushfq repz lret push movabs xchg movabs ror (bad) hlt or or push xor jrcxz rex.WB addr32 loop sarl gs (bad) mov sbb fwait adc sbb rex.R rex.RB sbb xchg mov mov mov retq push fistp jrcxz xchg sub mov jns xor retq adc in (bad) cmp mov lret add shl in mov sbb adcb xchg mov fdivrp mov lret add sbb mov fildl mov xor insl sarl sar sub and bnd lahf rex.B add (bad) test repnz xchg (bad) mov jmp or rex.X (bad) pop lret xchg jmpq lods imul int3 out movabs (bad) adc ror add enterq test rex.WRX xchg sub js rclb fcompl (bad) cmp mov lret pushq cmpl subl (bad) (bad) add xor fbld add movabs (bad) pop pop fild pushq adc ss test rex.XB enterq movsb xchg rex.X clc or jmpq or mov repnz mov rex.WR sub rex.WX mov loope (bad) pop icebp xchg fld adc rex.WXB in mov sub push cwtl mov mov data16 mov (bad) clc ds and pop lea test repz sub insb int (bad) mov cmp in sbb rex.RX xchg jmp fstp lock pushq lahf cmp jns mov sti fmulp rcrb (bad) mov (bad) mov rex.XB ja orl mov cltd push rex.WRX mov pop rex.WB mov cmpsb jl insl sub sbb (bad) rorb mov lods cmpsl test (bad) cmp cli jmp rolb int jno jnp insl repnz rex.RX test mov cld rex.WR rex.WXB leaveq (bad) jge jb scas mov xchg (bad) out stc or vaddsubpd rex.X add (bad) xchg (bad) cmc sarl xchg mov int3 imul (bad) mov cmpsl idiv add mov imul sbb xlat lahf and add cmpl sbb (bad) repz (bad) movabs rclb or retq rex.WXB lock jnp mov cltd iret repnz rex.WX callq fild rex cmp adc mov adc lods (bad) xchg iret cmp and outsl int3 (bad) xor out add (bad) je xchg retq push mov (bad) stc or popfq jle or jl lock (bad) push mov xchg sbb (bad) (bad) je movsl repz sbb xchg jnp rex.X rex.WRX int icebp mov pushq jne ljmp rex.WRXB int3 jne (bad) and push (bad) in jnp icebp jrcxz fcmovne loopne (bad) mov sub adc mov rex.WXB jnp imul jo cmp rol (bad) mov leaveq icebp fcom lahf and leaveq pop jo in lret jae cmp fadds xchg icebp xchg rol imul mov or adcl int3 sbb xchg and (bad) mov in test pop loope jle jrcxz (bad) mov mov (bad) (bad) cmp lock retq scas (bad) popfq popfq push or jnp testl or fcomip fcom pop out fmull xchg (bad) clc mov and mov (bad) or sub cs repz loop adc (bad) xchg andl (bad) pushq sub fwait fs enterq (bad) (bad) cmpsb pop rex.RX mov sbb sub pop rex.WR jnp int (bad) push xor (bad) movabs pushq jae mov rex.WRX lea adc retq (bad) loope pop push lret mov fcmove jle insb (bad) add test jne push jg rcll (bad) icebp imul and addr32 in mov (bad) testb and shrl clc stc movb (bad) shr push sahf mov repz enterq test (bad) cmp adc mov pop rex.XB rex.WXB (bad) sbb lock cmc xor sbb in je (bad) (bad) push movslq jne movsl mov loope (bad) ficomp (bad) movsb xor lods xchg rex.R sbb jo icebp jae fmull and (bad) lods lret orl out test xorl adcb clc push mov rex.RXB repnz ja lods sub push or sbb outsl callq cli (bad) addb add movsl and add int3 (bad) lret lods iret retq imul sbb (bad) xchg leaveq or (bad) callq add pop (bad) xchg (bad) std stos (bad) loop xchg fildl and mov rex.WRX sbb xchg loopne mov adc out jno enterq pop (bad) (bad) shl imul push mov addl adc lea jrcxz int3 enterq add fmull cmp mov lods (bad) mov and cmc nop push cltd repz mov jo push cwtl sub rex.RXB flds pushfq sbb mov cld rex.WR sub fistpl and rex.WRXB rex.X rol (bad) test rex.WR rex.WX mov and icebp int3 mov jnp out adc fdivrl leaveq jb in xorl scas sub ljmp test pushq test outsb rex.RB cmp repz imul (bad) rex lods add insl lret sub sbb adc rex.B movsl mov int mov sbb cmpsb loope jl and (bad) outsb lods enterq loope lret jmpq mov stc (bad) or stos sbb pop rex.RB rex.WX cmp add xor or and adc mov mov fldenv mov int3 cmp repz or in mov callq jmpq fimul mov outsl ror mov mov mov sbb and xchg jle (bad) xchg cmc sbb jrcxz (bad) cmp mov or rex.B (bad) adc lock cmp ds scas pop (bad) movsl repz retq outsb pop (bad) jmpq outsb fildl cmp rex.RB in cld scas (bad) testb jbe mov (bad) mov pop pushfq add jno add cmpsl movabs adc cwtl icebp or fcmovne clc xor add rex.WRXB js (bad) rex.XB (bad) pushq fidivl callq mov (bad) xchg imul cmpsb jae rex.WR repz (bad) in je in xchg movabs mov test or jp and mov test mov (bad) fdivrs mov fsubr mov xchg push cmpsb push (bad) in (bad) iret xor in outsb (bad) hlt leaveq data16 int3 push push (bad) xchg cmp (bad) pop pop (bad) jmp or rex.WRX repz (bad) add rex.RB push xor rex.RX rex.RXB shrb leaveq (bad) bswap jle (bad) je add mov int and rex.WRX rex.WRX movabs fildl adc rex.WR (bad) movabs test rcrl add imul push ror xchg jae scas rcrb rex.RB (bad) jne repz fisttpl sub in callq sarl sub iret hlt mov push add jae jne add sbb mull xchg movsl mov sub int3 (bad) callq xchg callq callq sbbl sub adc sbb add test jmp mov lock loopne addr32 pop (bad) lock rex.B lret imul (bad) in push sbb idivb pop (bad) mov (bad) fisubl sbb lret rorl pushq cld xor fistpll enterq lahf (bad) jle pop and (bad) and enterq (bad) lret add xor (bad) mov (bad) mov jae lretw xchg cld jno icebp xor notb cltd (bad) lods (bad) xor jne out pop repz cmp mov retq cmp rex.RB sub cmp lret lahf pop xchg sbb mov pop (bad) rex.RXB pushq and rorl rex.RB jmp jle sub sbb (bad) push out cmc (bad) adcl jne sub adc xchg std repnz mov fmulp jp cmpsb push repz xchg shrb (bad) (bad) pop stos rex.WRXB (bad) (bad) sarb jrcxz (bad) mov (bad) repnz nop test (bad) scas add (bad) stos cmp add push sti cmpsl add jge jmpq pop push xchg loope (bad) (bad) rex.WXB mov (bad) (bad) in mov movabs loopne repz mov pop icebp (bad) in clc lret fdivrl int (bad) push mov cmpsb pop or (bad) jl cmp lods rex.RXB jbe mov push rex.WRX or mov ja rex.WR mov mov stc in jge ss movabs (bad) movabs rex.WRB adc (bad) mov jle rex.B (bad) (bad) xor mov pop movabs or xchg cmp loope sbb mov sbb jno xor pmuludq movsb (bad) cs add (bad) adc andl push (bad) (bad) (bad) cmp (bad) rex.WRX add je adc add callq or or sub repz lahf lea add fwait cld loopne (bad) cld jo xchg xchg pop jmpq rex.WR add out lret retq (bad) adc mov rex.X cmpsl fwait retq iret (bad) hlt adc movabs xor movl sbb add (bad) popfq and loop sub loope rex.WB mov sbb movb test cmp imul add cmpl mov lret sub movsl jo mov jns pop test insb xchg in (bad) sbbl out sbb (bad) adc (bad) and loope push jae in cmpsl sub movabs cmpsb mov leaveq mov xchg int rex.X (bad) (bad) (bad) adc mov push mov rex.WXB enterq xchg xchg mov mov outsb clc fisubrl rex.W movslq sub add retq rex.RB out lock fbstp shrl rex.RX testl jb std mov sbb push movabs test (bad) mov (bad) cmp (bad) lahf callq sub repz xchg jmp repnz lahf ss jle rex.RXB cmpsb mov out (bad) xor mov (bad) and jae sbb add sub movb fidiv cli rex.WB sub (bad) ja popfq callq mov (bad) sub mov loope fst (bad) outsb sub or lret movabs mov popfq in cmp xchg test int3 (bad) or (bad) rex.WX movabs adc rex.B es cs adc cltd mov mov jmpq jmp iret repnz rex.R mov add fcmovne mov sti rex.XB int3 adc pop rex.RXB addr32 (bad) scas sahf mov movabs jp cmp xchg iret ss rex.B rex.WRB (bad) (bad) (bad) lret (bad) push jne cmp popfq (bad) (bad) fs (bad) and rex.RX push mov adc or xchg (bad) jae lods mov and movsl rex.WB testl rex.XB hlt lea (bad) add out in fdivs add imul rex.WRX mov mov add (bad) out (bad) (bad) testl or stc nop pop and insl jg test and rcrl (bad) mov (bad) xchg icebp pop fildl test (bad) addr32 and in pop lods and or in out rcl rex.WRX loope (bad) mov mov pop jmp add xorl add fadds (bad) adc (bad) pushq xorl (bad) xlat movslq pop shr lahf sahf cli or (bad) sub pop test cmp rex.WRX repnz cmp int3 jp iret lret (bad) jmpq push mov (bad) shr stos rex.B (bad) cs sub add xchg rclb (bad) callq in test adc gs mov repnz cltd stc addr32 in loope cmp mov mov lods in (bad) pop cmpsl cld sub (bad) rex.WR setl fisttp icebp sub (bad) vcvttss2si xor add mov jl rex.WB sahf (bad) insb add (bad) add loope fimul xor add decl xchg jbe cmp cmpsb mov rex.RX mov in sub bnd add sbb bswap (bad) xor jrcxz sub adc cmpsl movabs sub lock push retq repnz es pop push pushfq mov xlat es mov pop xlat jle pushq (bad) leaveq int (bad) nop leaveq add imul (bad) insl leaveq insl rex.WRB imul fldcw push fxch pushq pushq pop (bad) rex.WRXB adc lret rex.WB fxch fstpt (bad) mov rex.WRB sbb jno cs data16 out std (bad) mov out add (bad) (bad) leaveq push sub xor xor fcomip (bad) lret xchg enterq insb scas jp out adcb or test (bad) fisubrl sub int3 jno jns and imul shl loope cmc callq pop (bad) fnstcw (bad) cs pop fisub pop repnz xchg pop pushq in std mov mov pushq xchg lods retq jge mov lahf add mov and test (bad) addr32 jmp add mov nop cmp test or (bad) (bad) rex.WB rex.WR (bad) adc (bad) loop adc mov sti mov mov adc push popfq js sub je outsl cs sub add in or mov jp jg rex.RXB (bad) rex.WXB mov mov cmp add int3 sub or out add (bad) mov rex.R mov xor (bad) (bad) int jb mov (bad) or in sbb lret jge (bad) (bad) test fidiv adc (bad) fwait xor (bad) mov rcr mov xor add lret mov shr xor mov in movabs (bad) out movslq mov out lea (bad) pop sub adc xor mov xor data16 fcomip pop rex.WXB rex.WR xor (bad) pop movabs or xchg (bad) push jae or andl push rclb movabs xor and fs lea retq add jo cmp fbld jae push pop fstp fs and andl outsl sbb sahf xor push xchg outsb jno mov in cs cld callq mov pop jno rex.RB xchg xor fcmovne cmp sahf rex.WXB movabs xchg movabs xor sahf add test jmpq movabs push out loope sub add shl rorl out push andl rex.B inc jmpq lods jmpq clc pop jno lods xchg pop or mov push (bad) mov xchg rex.RXB rex.WRX leaveq test sub mov out ror sub int rex.RX lods loop enterq loop mov cmp test or mov enterq imul (bad) roll push adc mov mov cmp rorl test jmp mov fwait pushq enterq je add popfq data16 and (bad) ffree cwtl sbb pushq (bad) jno movabs rex rex.WR push andl pushq repnz (bad) negl (bad) ffree rex.R andl movslq (bad) sub (bad) fnsave push or ss jo sbb (bad) enterq jmpq jge js movabs lahf callq mov movsl or mov icebp cld rex.WXB int3 (bad) callq fdivs rex.RXB scas xor test xlat sbb xlat rorb lods test rex.XB jge,pn push rex.R lret xor cmp data16 xchg sahf out sti imul xlat retq pop mov adc stc hlt ss cwtl cmp mov in push pushq mov add add (bad) sbb sub clc popfq xchg or rex.WX xlat (bad) jne and (bad) pushq iret sub pushq pop jmpq xchg test or jne rex.XB jno (bad) (bad) xlat mov pop or ror lret pop cmpsl add or shlb (bad) and jl xor sbb subl in jo mov lock testl mov (bad) clc leaveq lretq (bad) pop sbb ja and ror xchg jle sub xor mov cmpsb (bad) xor (bad) mov mov cmp and rex.B mov push rol or rex.RXB sub (bad) ja jns jp rol jnp fadd sarb mov in sbb leaveq (bad) cmp jbe (bad) xor movabs xlat (bad) (bad) mov (bad) stos cmpsl fsubr cs bnd (bad) ja sbbl popfq enterq xlat mov jge add xor enterq lret and mov cmovae lock (bad) xor shr sarl jo mov ds mov sub add cmp (bad) xorb je xchg mov retq (bad) lock mov adc rex.WXB rex.XB rex.WRB (bad) jp mov loope mov mov rex.WR jl and jl ds xchg cmp stc (bad) in xor out mov xchg (bad) add and or lods mov push out (bad) jp (bad) xor and fdivrs shll movsb cmc (bad) mov jnp movabs (bad) xchg sub rex.WXB jg in movabs and rclb roll mov loop add rex.WX (bad) (bad) adc rorl pop (bad) sarl retq cmc (bad) lret rex.X outsb fistp roll jne (bad) jbe rex.WXB es je lock (bad) ffreep andl rol cmpsb sbb cli cwtl shrl xor (bad) (bad) (bad) adc scas lahf xchg jns movsl (bad) cltd cmp scas pushq push mov test (bad) fcompl in popfq sahf repnz rorl in jmp loop add push (bad) (bad) xor iret fisttp cltd movabs jae (bad) adc rcll rorb callq repz movabs mov rex.W (bad) jns sbb mov sbb and in icebp or and xor hlt (bad) fistpl mov sub rex.WRB mov cltd (bad) xchg shll ds push (bad) rorl rex.R (bad) jae and scas jp add andb cs xchg mov (bad) adc rex.X mov lods outsl sub xor rex.WRXB rex.R cmp loope mov (bad) popfq insb pop lret jae ds (bad) test jg xchg icebp mov pop rex.WX jns add sbb or rex.X rex.XB add testl (bad) (bad) sarl test cmp clc mov (bad) xchg fs sub add adc add cmp shll add xor mov mov jno mov (bad) jae movabs rex.RB outsl rcr sbb cwtl (bad) xor pop vpavgw xor or jnp in xlat add jmp int3 rex.X cld (bad) test loopne xchg (bad) mov add testl bnd int stc out rex.RX (bad) jg or mov lock add xor pop adc nop fbstp loope mov es xor xlat rex.RXB jmpq divq rex.B not or sub fsubrs add std std (bad) xchg cmpsb fcoml loop (bad) test pop (bad) (bad) (bad) adc sar data16 lahf fsubp (bad) mov rex.WXB jrcxz cmp jmp iret mov pushq (bad) lods gs add rex.RXB mov xor (bad) movabs sub cmpsl cmp mov (bad) ss clc (bad) lods mov decb mov mov add clc mov mov jmpq jno mov (bad) js (bad) (bad) (bad) mov fildll retq (bad) push vmovdqa scas xchg lret sub gs stos jnp or adc rex.RX jae movslq (bad) xchg xor out in (bad) lock mov (bad) andb xchg (bad) xchg outsb (bad) in adc movabs cmpsb push loopne jge movabs roll (bad) ss (bad) adc mov xchg fdivrl cwtl test shrb sub andb jno xchg (bad) int push cmp int3 pop out test in pop cld mov movabs lock mov rex.XB fiadd fcmovb sub int3 jne leaveq (bad) push rex.RB mov (bad) add sub add lret fwait rex.RX cli sbb icebp test mov cs (bad) xchg (bad) neg or pushfq (bad) mov ja retq leaveq add cmc xor rex.WRX and loop xor (bad) xor ja rex.B fildll rex.WR pushfq add loop rex.R sbb out pushq rex.B xor fild cmp add gs (bad) mov or (bad) bnd (bad) jae test or retq fldt ror (bad) xor outsb sbb repz cmpsb add sub jp (bad) lret adc enterq pop scas ja mov rex.RX rex.B rex.WB (bad) out rex.WRB rex.WRB (bad) jbe rex.B fbstp sub (bad) (bad) rex.WRX rex.WR jp cmpsl mov add mov lock cld jmp adc repnz and jnp icebp rex.WR cltd rex.RB fadd jae test ja out lret sub rex.W rex.RB (bad) cmp loope loope jae push int and mov repnz or add (bad) adc sbb xchg repz jmpq xchg adc rex.XB int sub rex.X cs pop icebp (bad) retq fisttpl mov sbb icebp movabs and adc repnz (bad) movabs movabs js lock pop (bad) lock mov (bad) js int3 lahf ja popfq test jge jno test shlb lret mov cmpsl insl sbb roll pop xlat xor mov in add (bad) adc (bad) (bad) rorl rex.WRB mov (bad) nop and adc (bad) shl push ds mov rex.RB rex.WXB or or rcrb stos and shlb clc xor (bad) rex.RB mov (bad) sub int xchg (bad) xchg lods mov xor subl jle test pop addb scas rex.RXB es and leaveq fistpl (bad) jp mov xorl movsb icebp pushq test rolb mov fcoms loop leaveq repnz outsb sub test int jbe xchg sbb (bad) jp outsl fwait and repnz ficomp mov rex.RXB mov adc pushq mov pop (bad) rex.WRB rex.WRX movabs fwait add orl mov xorl (bad) push or fmuls xor icebp rex.WXB fidivl subl int3 stc cmpsb push and xor (bad) mov sti (bad) xchg cltd xor (bad) popq mov lahf rex.W fimul ds mov and test sbb repz sarl cmpsl or (bad) (bad) kmovb (bad) xor (bad) (bad) rorl insl (bad) std xor (bad) mov rex.XB movslq (bad) and cmp (bad) sub insl xor sub out adc retq (bad) iret scas test rcll add xlat out mov push sub fist mov rcll lret mov jae jl leaveq rex.B rex.B rcll pushq (bad) pushq cmc pop or enterq xchg (bad) rex.B sbb iret jrcxz rex.B mov fdivrs add int3 (bad) (bad) mov retq add scas (bad) (bad) fildll (bad) xchg or mov pop imul (bad) jnp shrb pop xchg xor std (bad) rex.WRB stc (bad) fsub xor push rep fwait and add movabs xchg rex.WRB (bad) push cmp leaveq ds mov lret pop andl (bad) stc jle sub faddp movsb (bad) xchg (bad) shrl xchg test cmpsl pop cmp adc cmp sbb (bad) (bad) hlt pushfq sti or (bad) rex.W flds xchg xor rex.WRXB rex.WX movabs test outsb stos jo movsl sub (bad) (bad) in lret sbb rex.R xchg outsl cmpsl (bad) (bad) lret ffreep fwait push push loope xchg rorl adc mov jo (bad) push jmpq fnsave rex.WR fdivp rex.R callq lret test fisubrl push adc sub (bad) divb cltd push insb xchg or xchg (bad) or in sbb adc outsb pop pushq imull adc sbb add (bad) (bad) (bad) out pop (bad) or mov lret cs lods loop adc mov negb (bad) movabs rcrl jns mov retq (bad) jbe movabs pandn std cwtl mov (bad) cli cmpsb (bad) (bad) repnz jne test iret fs movsb (bad) rex.B rcrb nop in shll (bad) clc (bad) (bad) cmp lea movabs push sub rex.X loop rex.R scas (bad) mov jns ror js (bad) in out add xor stos sub xchg decb xchg jb rol movsl adc xor (bad) add lahf fucom rex.B clc (bad) mov (bad) sarl iret callq (bad) mov and or clc add pop cmp sbb mov cltd roll rex.RX rcl jo lods imul add (bad) bnd (bad) sbbl pop or jge lods xchg (bad) xchg sti mov rex.RX pop shl sti (bad) test (bad) sahf or ss (bad) (bad) (bad) gs push jno mov or test xchg mov sarl int3 rolb lods sarl lret insb mov pop and push mov pop gs shrl sub (bad) rex insl xchg movabs rex.RXB xchg rex.WB mov rolb pushq ffree lods hlt add jl test lret adc sbb cmp movabs add cwtl repnz add jns cmp je (bad) mov adc movsl rorb fistp outsl jrcxz jg rcll cmp rex.X mov mov (bad) jmpq and test stc fisubl shrl xor cmp callq sub push xchg mov rcll push xor movabs jnp jmpq lahf and (bad) (bad) and and cmp rolb rex.WXB pop enterq retq out cmpsb fldl and rex.B data16 mov pop jo xchg lods roll (bad) push sarl insl adc sbb add mov jbe movslq retq cmp shll push sbb in fldt rex mov mov orl shlb xchg stos hlt (bad) cmp rex.X and rcll movabs (bad) rex.WXB mov sahf ror (bad) or (bad) loope or and cwtl test xor or jno leaveq cmpsb xchg rex.XB jne,pt add (bad) mov xchg cmp hlt addl sub ds lock jmpq jno movsb (bad) push rcl xor sub jnp rex.RX (bad) sub shr (bad) addr32 cmp (bad) sbb xlat pushq js shll rex.XB jno mov or loopne rorl mov pop add movabs (bad) lods rol (bad) jl mov testb mov rex.WB rex.RB (bad) (bad) mulb mov (bad) xor lret mov rorl or mov rex.WXB enterq push pop sbb (bad) and rex.W cmp lret xor cmp rex.RXB pop in lret or retq rcrl push (bad) repnz pop shl xor retq je rclb subl ds test roll mov rex.WXB jb divl (bad) stc retq imul cwtl and (bad) rex.XB add loope add jp (bad) (bad) ja cmp xchg stc (bad) rex.WRXB cltd retq (bad) sbb xchg sbb icebp (bad) shrl rcrl sbb xorb and mov lods or pop pushq jmpq imul cld mov mov or movsl (bad) rcll sub fimul icebp std xchg loop mov divl sub lea cltd or mov cmpb or sub cmp shr pop out movslq xor pop jb mov cli cltd (bad) leaveq mov rex movslq loop (bad) outsb movslq pop orb cmc sub js mov pop leaveq icebp mov jb mov (bad) (bad) or ffreep lea ss sub cmp test or (bad) rex.WRX add xchg lret xchg callq sbb data16 jmp bnd lret push or mov push mov (bad) int movabs loope (bad) jge sbb sbb int3 icebp enterq cmp cmp cltd insb repnz cmp push stos sbb movabs leaveq stc out sbb (bad) xchg loop rex.R leaveq ds insl (bad) fs jmp ficompl pop pop jp (bad) push rcrb cmp insl (bad) (bad) icebp clc out mov sbb sub fdivrs icebp add and xchg movslq xchg icebp or leaveq hlt sbb faddl jb retq negl (bad) int3 (bad) fldl movabs loop rex.RXB rex.WXB rex.WR jo retq and or loope hlt out mov (bad) ja sbb (bad) cmp jbe outsb rex.X mov (bad) cmp clc in add rex.W enterq mov mov or or xor cltd cwtl retq rex.B lods (bad) xorb adc (bad) xor cwtl je cs sub mov (bad) jo mov and pushq (bad) rex.WR fmulp lret sbb pop sti mov mov mov mov loopne pop sub outsl mov mov mov repz (bad) lret vpcmpeqb (bad) rex.B test rex.WR mov cmp lret je (bad) (bad) addb sub adc xchg adc rex.XB and outsl pushq rorl and outsb or (bad) pushq sbb cmp mov mov cmpl (bad) rex.RX mov pop data16 es rcrl pushfq divb push xchg or callq imulb sti xchg mov jrcxz outsl ss and mov sub mov push lahf cs mov rex.W (bad) js pop and cmp push adc rex.R addr32 pop movabs and or ja out scas leaveq xorl add sbb enterq jge pop mov xchg push adc mov sarl sbb int3 jl mov (bad) or adc (bad) and xchg rex.WRXB or rex.WRX xchg push movabs imul shrb repnz rex.B xor (bad) addr32 (bad) xchg add rex.B cmp test and (bad) repnz (bad) mov or xchg in push push mov sbb rex.WXB ss loopne pushfq jmpq mov callq pop pop (bad) out jmp lret faddl jbe (bad) fadds scas add mov jrcxz ja test incb iret rex.WX ljmp retq (bad) cmp mov test rex.WRX (bad) out xchg sarl sub imul sbb movabs fdiv rex.XB add loopne ss adc rex.WB test lret mov js mov movslq data16 rex.WB mov pushq rex rex.RB repz pushfq sub (bad) outsl or or jbe push test mov lods enterq (bad) (bad) jrcxz fnop mov fildll sub cmp test cltd leaveq (bad) jo rex.W xchg jl hlt push (bad) rolb push (bad) adc rex.RX (bad) movb mov rep cltd int3 (bad) pop fnstcw cmp lods leaveq mov sbb rex.WXB rex.X mov jl (bad) cltd shr and (bad) rex.WXB je sbb mov add cmp xor add jmpq mov cmc std rex.WR xchg out mov mov std (bad) cmc divb test mov pop leaveq (bad) stos hlt leaveq mov xor add leaveq shr rex.WXB js push icebp cmp jge imul rex.WR frstor or xor or mov xor jmpq jg mov int3 pop add js mov mov (bad) and out movslq mov and jrcxz stos or (bad) xor sub mov (bad) rex.RX outsb rex.WR repz jo leaveq clc js enterq (bad) jge sbb xchg callq mov (bad) (bad) flds cltd loop pushq pop fnstenv cmpsl xchg xor xchg sbb retq cmp xor out or and jp fcomi stos jmpq xchg out fsubs cwtl movsl test jbe jge (bad) rex.RXB (bad) cs jp xchg xchg ja xchg retq rex.RX sbb (bad) mov push rex.WRB rex.WX (bad) xor rorb push rex.WRB out or sbb in test in rex.WRB pop (bad) xor int pushq repnz or xchg xor xor leaveq jns loope retq imull xor rex.WB cltd (bad) lret inc (bad) mov xchg mov leaveq push lret outsl adc xor (bad) (bad) (bad) std jle mov icebp mov push outsb jmpq push negl jrcxz jae mov and pop add xchg loop (bad) leaveq (bad) cmp add es (bad) shrl (bad) movl xor mov jle (bad) fldcw mov (bad) cmp add loope fldln2 (bad) push fwait movabs test js (bad) (bad) repz jne xchg (bad) imull sub mov repz retq jae or rex.RX scas je rcll scas rex.B xor pop in push mov rcll (bad) mov or lea xchg (bad) imul icebp cld add loopne fldenv rorl xchg pop std and rex.X rex.B insb pushq mov xor lea xor enterq in mov (bad) or jle sub (bad) mov xor cmpsb (bad) push sub scas test mov add movsb sbb rorl pushq lret (bad) (bad) mov rex.WRXB (bad) outsl pop lods xchg rex.XB rex.R es jrcxz (bad) xchg add xchg lock mov (bad) imul cmp mov movabs cli (bad) (bad) lods outsb stos lret (bad) movabs rorl jmp push jbe shr sahf sbb shl pop sbb loop rex.WXB jbe adc scas (bad) pop sub xchg xchg lods mov (bad) lcall shrl sbb rcl cmp ja jnp shrl fmull test rex add sub cli rorl js rex.X jae adcb rex.R lret adcl int mov mov repz lahf hlt add fsubrl test xchg data16 in frstor mov cmpsb lea test sahf (bad) and (bad) rex.RXB (bad) sbb adcl (bad) lods rex.W roll shll shlb mov sub fidivrl je sub out (bad) repnz push hlt fiaddl cmc (bad) (bad) ja and jae xor imul movabs xor jb cmp test (bad) movsb and xadd repnz pop (bad) rcll xchg add pop shr adc roll (bad) data16 sub (bad) loop xchg or (bad) incl xorb in rex.XB xor fdivl leaveq sbb cmp imul (bad) rex.WXB (bad) out rcll in (bad) mov cmp pop rex.W out lret in mov (bad) repnz (bad) or cltd or xchg cwtl std pop jrcxz lret (bad) movslq loope stc jnp (bad) cmp xor int lock rex.WB outsb rcll lret add push (bad) divl cmp movsb xchg jo (bad) xor scas iret imul sbb addr32 movabs iret mov (bad) jne js loope jrcxz rex.WX loop roll or mov rex pop jrcxz fnstsw repnz hlt add pop test pop imul es enterq test add setb add pop rex.RXB rex.WB es rex.WXB rex.RX (bad) sahf loopel push mov shrl btcl xchg push loopne adc rcll sahf rex.WR ds movabs movslq and or add in mov jmp xor push out mov fnstenv mov icebp negl int3 and and adc (bad) rex.WRB cmp or repnz mov xor push movslq adc std iret and pushfq leaveq (bad) mov pop jp rex.W rex.WB rex.RXB or xor scas pop (bad) cltd adcb jno rex.WRX movabs movabs mov mov xchg cmp ss rex.B mov stc add out std loop out mov jecxz xchg pop rex.RX rex.R fidivrl repnz rorl hlt insb and out fistpll stos fisubrl rcr or callq or sbbl jmpq xchg pop (bad) int (bad) mov mov iret sahf repz int3 add fildl or push mov xor rcll subl mov xor sub enterq jo (bad) pop xchg xor (bad) shll xorb rcr or jnp xor (bad) pop pop xchg push push (bad) scas fs (bad) (bad) int3 xor iret movabs xchg mov rex.XB in test vlddqu mov mov push subl cmpsb (bad) pop mov pop (bad) mov rex.B gs jno pop mov cmp fnsave rex.WXB stc adc repnz pop cmp hlt mov cmpsb fs outsl rcr sbbb testb sub pop (bad) xchg shll jae (bad) xor out cmp xchg movabs fwait (bad) (bad) out pop add rex.WXB jno and (bad) cmpsb mov xchg adc push xor pop rclb movabs pop rex.WXB rol subb enterq xchg sahf rex.RXB (bad) int sbb cmc decl insl out rex.WX or rex.WRB sahf sbb push xchg adc jns (bad) add add loop int out (bad) sub in rex.B rex.WRX (bad) scas lahf pop push mov and (bad) (bad) jg jns rex.WXB rex.WR stc sbb cmpsb (bad) jbe pop and out (bad) jge push in mov mov addr32 retq sub shll jb sbb push out and (bad) incl (bad) pushq lahf shll (bad) clc fadd pop jnp pushq movabs rcl outsb xor shlb sarl fwait retq sbb (bad) push and movslq fcompl mov fsubs xchg pop movabs (bad) mov cmp retq rex and and (bad) repnz cli jmpq xchg rex.WRX adc cld add rcrl out pop jmpq jae (bad) mov rclb (bad) adc fiadd out xor fnstenv add in pushfq std add jns rex.WX (bad) xchg movsb sbb mov sarl add movabs mov jp je (bad) add cmp test ja fidivr mov cmp (bad) add jo xchg subb xor rex.WX rex.X or rex.WX jno (bad) icebp mov mov rex.XB xor es mov jne mov shl mov sahf lock outsb fisttp loope out roll sub cmp mov and cmp rcll mov jns pushfq (bad) jge test cs rorl adc stc lods (bad) xchg sbb mov testb (bad) fs (bad) je xlat xor jbe cmp xchg retq mov fstpl movabs (bad) cmp (bad) (bad) loop cs imul and xlat test cltd xchg add cmc xchg cmp xor mov iret int fnsave sub and sbb lea mov retq (bad) (bad) std cmpsb or sbb xor mov mov movabs (bad) or hlt xor push push rex.RB rex.RXB lock vpmacswd enterq leaveq sbb cmpl mov (bad) xchg (bad) (bad) sub adc (bad) iret and int movslq outsl loope add xor add add mov (bad) sub mov fcoml mov mov rorb push adc (bad) jle fstpl mov rex.WXB test fdivrl mov mov sti jns cmc movabs (bad) rex.WB fcmovnb cmp cs push std nop add rclb sarl je,pt mov mov out or movslq movslq rex.XB repnz rcr repnz adc mov (bad) (bad) leaveq (bad) hlt (bad) lret loop push cmpb (bad) or mov sub enterq loopne (bad) insb xor (bad) fstps sub mov xchg fdivr xchg push fcoml loope jno mov mov enterq int add or xlat loope add test mov (bad) (bad) sbb mov fcompl (bad) enterq or jae and fsubrl testb insl lret mov xchg retq insl add adc ror (bad) insb (bad) lcall shll sub ja test scas (bad) shlb mov (bad) or (bad) enterq cltd jg flds jmp adc fs iret (bad) rolb fldl pushq test and ds shl push cli mov in pushfq (bad) and or out sarl push pop fwait stos mov jae xchg adc cmp (bad) in stc lret cmp mov rex.WRB rcll add (bad) cmp lret idiv mov shl xchg outsb adc (bad) sbb and mov xor (bad) rex.WRX mov (bad) hlt ss lahf xchg test and adcl mov enterq fdivr mov (bad) mov rorl out cmp movsb (bad) push mov movslq jnp pop ffreep in push (bad) retq pushq (bad) out mov pop xchg add pop mov divl add jge adcl (bad) jns (bad) sbb mov jbe test movabs rex.WRXB int sbb data16 retq xchg movabs mov mov in (bad) int3 and pop cmc add stc mov loopne xchg std (bad) or push adc es mov fmull sbb pop (bad) lods enterq ss shl rex and (bad) mov sti rex.RX je (bad) ja rcll push jl mov sub cmc rex.X push mov jo rex.WRXB sarl cmpsb xchg loope out add in test lret mov cmp shll (bad) (bad) sub lea mov pop push std cs rex.B (bad) ja loop push imul retq js mov or sub (bad) std (bad) mov roll rcr (bad) mov fiaddl jno movabs jne lock rex.B (bad) repz int (bad) hlt clc test xchg fmul push cld movabs rol mov (bad) imul mov mov (bad) adc enterq (bad) (bad) push pop add sahf pushq mov push neg mov (bad) cmp (bad) and sahf xor fnsetpm(287 cltd mov (bad) fldenv movabs add (bad) jb orl rex push fistp vsubpd lcall mov mov lock lods jo cld ffreep in fdivrl movabs (bad) add repnz push cmp sub xor test jmpq rex.W iret mov xchg (bad) movsb xchg jl ss stc mov xlat shll test rcrl movsl jp movslq test sub rex.WRXB sbb cld outsb pushq rorl rex.B rex.X add jns notb rcrl loopne imul stos in cli push push movabs popfq scas (bad) fcmovnb xchg adc pop rcll (bad) jmp mov mov xchg cltd (bad) sub out (bad) xor and roll icebp jo test mov rcrl (bad) popfq xchg mov shrl and (bad) push (bad) and pushq jmpq mov sbb mov rex.RX (bad) fldenv jae adc rclb cmpsb sbb (bad) jno or int mov movabs mov sbbb adc add jrcxz imul (bad) pop imul add (bad) loopne xchg lock sarl sbb pop add shlb sub stc mov rorl int3 (bad) (bad) rcrl mov hlt popfq stos rcl out mov insl outsl jno and adc ficompl int3 out sub andl mov adc sbb int3 mov gs (bad) mov add jne popfq outsl lea sub stc jmpq adc fistl movslq (bad) (bad) jns sbb (bad) mov mov or loopne jge and pop repz and sbb addr32 cmc fsubrl sub xor leaveq pop sub frstor (bad) push rex.R test int3 add fucom callq or shll sbb mov cld (bad) xchg nop sub and (bad) shll clc pop adc push or lret xchg popfq (bad) rol mov or mov cmp pushfq xchg clc rcrl xchg xchg out fstpl shll lret rex.B cs movsb es test push fdivrs retq mov xor mov xor lahf adc xor (bad) sbb pop test mov pop cmp callq (bad) xchg jno sub fidiv notl cltd in insb (bad) cmp pop xchg out fcmovb xor sahf int sti cld or mov add sub mov leaveq rex.WB movabs and (bad) xor mov sub cmp lret cmp (bad) out out or rex.RXB jbe fwait mov add rex.WRX outsb sub shll sub adc add mov cli push test rex.B lret xchg shr pushq (bad) icebp mov push and repnz sarl int repz (bad) rcrl push imul sbb mov (bad) int addr32 cwtl test lret push (bad) fsub or cmp or nop sbb xor add sarl test lea mov mov rorl pushq es jno subb sub xchg xor outsl push cmp rcrl out jmpq cwtl movabs vcvtuqq2ps (bad) (bad) push sar pop xorl mov add callq sarl rex.RX cmp xchg jno jmpq sbb (bad) push rorb xchg xchg callq mov es in lret in (bad) (bad) mov (bad) pop xor cli add (bad) sub (bad) xchg movabs sbb iret adc cmpsb jbe outsb and js rex.X mov push add (bad) add add gs rex.WR (bad) (bad) mov mov out mov sahf mov (bad) jle add mov pushq rorl mov or cmp sbb jns (bad) mov imul fs js outsl (bad) lock pop incb xchg mov lret in rcl rex.WXB mulb lods xchg add fbld rcl and pop out cs xor in xor fdivl xorb jg (bad) cmpl mov (bad) mov (bad) (bad) jne (bad) data16 fisttpll int out jmpq cmp test xlat shl movsl movabs add rex.XB sbb in xchg repz xchg (bad) rex.RX shrl (bad) leaveq add (bad) rol add push mov jge (bad) or rolb mov inc pop jmpq mov rex.WRB rex.X clc movabs sbb pushfq mov pop stos lahf jle cltd cmp adc jbe hlt pushq cld cltd (bad) or sahf scas sub loopne jmp rex.X xchg rex.B fstpl outsl or sarl adc sub cmc movabs mov lock insl cld jmpq mov sarl rolb imul xchg popfq push pushq xlat clc xchg insb xor hlt (bad) mov mov sbb movabs sti rex.WXB xchg (bad) and xchg movslq rorl sbbb cmpsb enterq idivb push mov jbe mov push shr or test stos sbb rex.WX mov imul rcrl mov rex.WR pop rex.XB rex.B sbb (bad) mul and pushq and (bad) andl push xchg stos sbb lret (bad) rex.B add lret lret fucomi add int3 cwtl rcl mov mov mov lahf (bad) cmp mov flds xchg sbbl lret (bad) (bad) jp fmull rex.X (bad) callq rex.R sub in pop jge rex.X lret xchg (bad) ror rex.R (bad) cmp (bad) or callq cmpsb sbb out leaveq rex.WXB jmp lret iret fnstsw movabs test (bad) and and (bad) movabs rex.WR imul adc adc jmp mov sbb mov rex.WRB jnp retq mov sbb mov sahf rex.WB js,pn rex.RB fwait and repnz (bad) ja (bad) movb lods jae shll lods xor retq rex.X sub (bad) ficoml (bad) pushq loope rex.W cs (bad) xor (bad) lret test jne mov xchg test cmp (bad) sahf movslq int out lret rcl sbb mov retq retq jmp (bad) mov mov jae jrcxz repnz (bad) push rex.B addb jnp cmp xchg hlt repnz fwait sbb lret xlat mov push ficoml movsb int add rex.X cmovb lea mov sti icebp outsb sbb (bad) xchg jp cld add fld std cld rex.B mov rolb (bad) int3 rex.R std fcmovne rcrl int3 in cli shll mov and add test sarl movabs rorl rex.RXB fdivl outsb (bad) rex.B clc and movabs sub test cli mov rcrl cmp callq cmp add (bad) xor jg (bad) and rol jbe lret xchg mov and movabs adc popfq fs callq lods (bad) rex.W insl xor sti cwtl jmp (bad) jp movsl (bad) xadd retq (bad) out add (bad) rex.WX rex.RX (bad) cmpsb and (bad) (bad) mulb retq rex.WXB push fiaddl (bad) mov xchg scas add adc xlat out add popfq (bad) (bad) lahf or enterq mov add lods sarl imul (bad) adc imul cmpsb add shll (bad) (bad) add (bad) sbb jae fistl int3 addr32 pop sub cmp pushq popfq (bad) cmpl movabs fiaddl xchg test (bad) (bad) loopne (bad) mov sbb movabs (bad) mov sbb or lods je sbb xchg movabs fnsave (bad) icebp rex.R sub insb xchg xchg and int sbb push pop in shr scas ds loope mov jle adc test pop cmp mov rcrl shl pop sub pmullw (bad) sub rcl xchg (bad) mov xchg add iret repnz xor mov mov jl pop (bad) (bad) (bad) mov sub mov loop (bad) jmp jle sub (bad) mov rex.R in movslq jmp cmpsl add gs add stc lret push (bad) shl rex.RXB (bad) gs mov loop jmp adc rex.WX xor xor jno pushfq pushq (bad) sar or js rex.WX (bad) ds jne (bad) lock stos imulb jge (bad) mov std mov add jmp sbb int3 add rex.RB (bad) mov or xor and pop mov sarl mov incl mov add pop sub cld jae andl mov sbb test jp shl (bad) out lahf repnz shll cmp addr32 shrl jo (bad) (bad) cmpsb mov pop popfq insl (bad) and movabs rex.WRXB loop or icebp (bad) (bad) rex.WR sub or rol test rex.RX jno xchg cmp mov mov mov jne and js (bad) fldcw (bad) xor jle loope out add lea movslq repnz or mov cltd add stos pushfq mov xor pop cmp outsb mov mov sub rex.W jns rex.XB test xchg or movabs out in (bad) test mov and hlt shll pushq shll rex.WRX mov orl es rex.WXB in jge add jno or jmpq mov add scas int3 add in int roll cli xchg and rcr punpcklwd movsl pop roll sahf mov rcrb xchg icebp fisubl shll mov pop ss fnop pavgb jo push xchg push push rex.WB push pushq faddp jrcxz (bad) jmpq (bad) pop xchg sbb movabs mov xchg ficom test xchg adc sarl rex.W mov push addl xlat movabs rex.W rcr jmpq (bad) add xchg (bad) push cli retq pop (bad) sub (bad) out std out iret (bad) add or rclb push mov sub rorl sbb push push rol cmc xchg sub shll adc push and xor fcoml and mov cmp es xor mov out mov or repnz loope out int3 (bad) mov (bad) pushq pushq mov mov (bad) (bad) xor jg sbb fcmovnb sub and hlt sarl js (bad) stos jnp sub popq rcll fimul fnstcw rol pushq and je xchg and or addr32 pushfq pop jbe jne sarl imul retq (bad) (bad) rex.X mov sbb shl shrb pop xchg es mov (bad) push mov insb (bad) ss mov cs xchg fbld mov sarl sbb jle rcl insl xor jge sub pop and pushfq loope sahf iret mov push fnop jle (bad) shll stc or lret pushfq sbb adc or (bad) fwait cld sub xchg push xchg adc es mov sub xchg (bad) pushfq stos loop (bad) xor (bad) xchg rcl test leaveq sarl sbb iret shrd std mov fs mov jp (bad) in in leaveq adcb or sarl fnstsw neg mov and rcr jbe or sbb sarl rex.WX jnp stos mov roll xchg data16 stos ror out pop movabs test stos jbe cwtl mov jge jo sbb rex.WR (bad) or xchg add iret (bad) scas sbb subl (bad) out stos nop xchg or sub hlt rex.WR psadbw pop roll push sub stc (bad) or push add push rex.WRB icebp or leaveq or mov ja callq pop movabs js sar (bad) or adc stos (bad) (bad) cmpsl pop vhaddpd rex.WXB in jp rex.X notb pop cmpsb outsl movabs ds (bad) jge imul xchg loope pop xorl or rex.X lret and xor cmp cmp cmp (bad) mov (bad) (bad) ffreep shl repnz (bad) repz rex.WX xchg outsl rorl callq jb rex.B mov int out in loope (bad) test lret add cmp or xchg adc lret (bad) rex.RXB lahf xchg gs sub lahf fsubr and out lock cmpsl int3 sub mov xor rcrl (bad) xor in cmp jmp sar jne js mov xor rex.WR sub pop (bad) ss rol add add sarb rex.RX in movabs shrl (bad) (bad) (bad) in (bad) rex.W scas xor stc scas clc xchg xor adc or sub and rex.B movabs (bad) mov in and mov and sub mov sub (bad) rex.WX or cld es sub fwait jns cmpsl lock cltd sbb mov movabs rex.WX pop callq repnz xorl jp in xchg es push rex.WB rex.WRXB (bad) push (bad) bswap shrl (bad) jg cmpsl (bad) cmc movabs adc sbb adc clc stos rex.WRB rex.B and mov rex.X loope hlt clc mov jns retq and sbb sbb int3 sbb sbb rex.WXB lret xchg (bad) int3 vpavgb loop int xor sbb leaveq ror sbb repnz div cmp iret push test movabs xchg pop (bad) mov xchg (bad) and out sbb rex (bad) (bad) cmpsl (bad) (bad) repnz lret mov lret outsb ficoml (bad) imul icebp cltd fnsave cmp scas mov and sub sbb mov cmpsl data16 add and and rex.WRX rex.RX rex.W jle vmulss clc rex.WR adc (bad) cwtl frstor adc and rex.RXB int3 jb outsb (bad) rex.X icebp int (bad) xor cmc mov (bad) adc (bad) (bad) fs cmpb sub (bad) rex.WRX mov movsb push repz movsl in data16 xlat add sbb int3 faddl and mov rex (bad) mov pop rex.WR repnz jbe jmp outsb retq js fimull (bad) neg sub jno push mov ja (bad) jmp mov notl (bad) (bad) movabs sbb int3 je rex.WX cmp jne ffreep (bad) (bad) sbb and es lea loope rex.WR xchg adc push xor adc stos clc clc add fwait rex.WRB icebp xlat add add adc pop iret scas (bad) jbe in sar pushfq (bad) lea icebp movsl test lret jle (bad) hlt mov imul in add movabs pushfq sub negl sbb push pop pop sbb scas adc gs fstpt fs movsb pop fnstenv pop lahf mov imul iret rex.W mov (bad) loopne bswap or rex.WR movabs adc in mov std mov push retq movsl movabs cwtl mov rcr xchg xor enterq int3 push loop rex.WR mov pop es (bad) imul (bad) in or mov lock and jl cld (bad) adc rcrl add push sarl xchg movabs jo (bad) ss fcompl mov scas test xchg cmp (bad) mov (bad) push push (bad) imul mov (bad) xor push push shll rcll cli (bad) retq (bad) (bad) rcrb js fmul cmp sub (bad) xchg loope cmp rex rex (bad) outsl rex.RB rorl iret jb rex.W jl xchg pop cmpsl (bad) mov cmp lahf retq push loope sti adc pop pushfq push rcrl (bad) out stc in mov xor lock or lods adc cmp mov push jo adc (bad) repz addr32 rex.WRX subl rex.WXB rex.RXB (bad) mov loop sahf mov push shll and rex.WRX rex.X ss and xor cmp js jns mov retq sbb in mull rcrl rcr iret and jg fildll movabs cmpsb and mov and scas mov mov stc imul (bad) xchg cltd and sar sbb in lahf fucomi mov lods add ja je (bad) mov imul int jnp xchg sub popfq movabs rolb pop (bad) roll sub loopne callq movabs mov add xchg mov pushfq mov gs mov shll mov pop rex.WB xor in push add cmc ds je xchg movsb jne adc rex.WRB out test lods add mov jne sbb add (bad) lret ss sub sub pop loop (bad) mull shlb and (bad) cwtl sbb cmp (bad) (bad) (bad) (bad) sub lret mov jbe adc (bad) rex.WRX nop in or pushq mov (bad) xorb xorl sub pop stos pop mov mov std imul rorl cld xchg (bad) xchg lret jle mov rex.RX (bad) enterq (bad) mov jmp adc xor (bad) pop ja callq icebp push mov stc jg lret sbb or push jns (bad) lock in jrcxz imul mov fwait movslq cmp std mov fnstenv sub mov rex.WRXB (bad) in mov rex jno fimull movsb add and fisub retq pop push rcrl out mov loope mov imul rcll add scas mov fst imul add jno rex.WRB int3 rorl lcall jle subl add mov mov adc mov sahf mov pushq sbb sbb stc shl sub addb mov hlt add (bad) outsl xchg mulb rex.WXB cmp sti push (bad) rex rex.B out adc mov lods or jns xor ja int3 rex.RX xor std cmovne jg (bad) cmp (bad) ja (bad) sbb (bad) test sahf dec rcl or (bad) jg push cwtl sarl sub (bad) fstpt mov (bad) adc stc add loop sub rex.WX adc add (bad) (bad) cli add (bad) sbb (bad) ds int3 jrcxz js xchg mov lahf cmpsl mov (bad) mov mov mov xor sbb cmp addr32 sahf pop add fnstenv hlt fwait rolb pop and rex rorl (bad) movabs (bad) sbb outsl movabs pop (bad) movabs jmpq imul and (bad) push mov (bad) movsb and sub pop sub mov xor jp sub xchg lret jge mov out mov insl cmp rolb jns test jl outsb rcll sbb add sbb jl (bad) jnp (bad) push mov fsubrp push xchg shrl rex.WR rorl imul sbb (bad) (bad) push shr outsb test (bad) lea xlat and cwtl xorb test rex.WRX rex.WRB (bad) rorw mov jb xor (bad) mov add repz mov rorl rorl sbb ss bnd movslq movabs movabs or rex.WXB and rex.RX push (bad) (bad) lret sqrtps cmpsb fadd sub rex.WX cmp xor jb leaveq imul cmp cmp lret callq mov movabs mov (bad) jb jno (bad) mov mov test rex.B rcrl shl lea rol jns out (bad) movabs xor adc loopne jmpq cltd xchg in (bad) and (bad) pushq (bad) rex.WRX mov mov movabs jns cmpsb iret enterq jge rex.B (bad) (bad) pop lock (bad) add (bad) fist stc fidiv jmpq adc movsb sub lock fist jrcxz ror add scas mov rex.B loope lret lock (bad) mov (bad) add sti cmp mov movabs pop sarl sbb callq in xchg rex.B leaveq cs test sub add flds sbb mov insl pop (bad) test nop lret (bad) jl adc jmp sbb icebp loopne iret stc andb and stos sub int3 mov out adc loop (bad) xchg cmc sub in loopne adc xchg shll in rex.WXB rex.WR xchg rex.WB rex.WRX rex.WRX jnp leaveq mov fmul (bad) mov (bad) (bad) iret rex.WRB rex.WRX mov sub sbb sub movabs sbb stos jno shrb outsl mov pop fisubrl stos xchg or fistpl jmp gs loope xchg rex.WR movabs xor lods fstps (bad) divb or pop idivb sub stc movabs mov adcl xchg cmpsb and hlt sub mov sbb (bad) insb rolb out testl lods int xor fmull rclb or (bad) in retq stc ficompl pop callq sub xorb fcmovne pop (bad) scas lock xor xor fadds jp and movabs test mov sbb stc (bad) or test add xchg lods in fstpl cli mov rex.WR lahf adc outsl pushq rex.B (bad) mov fs (bad) out xor xchg jg mov (bad) sbb outsl rolb cmp (bad) je,pn and pop hlt (bad) jae xor sub add fsubl shlb (bad) jae callq rex.WRB movsb negl and test add mov (bad) (bad) or icebp (bad) xor rep jmp repnz xchg andl rex.WRX rex stc fiaddl fcoms fdivrl add fsubl (bad) mov cmp mov xor mov cmpsl xchg int3 mov (bad) cwtl in enterq xor out sbb rex.WB rex.WRX (bad) (bad) sub lock push sbb psllq sbb (bad) (bad) ror push pop cmpsb addr32 xor callq (bad) idivl (bad) (bad) jmpq rolb (bad) test push mov xor fadd (bad) stos (bad) (bad) roll jle jl push pop stos sar outsb lock ss add jnp (bad) rex.RB enterq fidivrl jmp (bad) mov imul and mov (bad) int jmpq or cmp out pop rex.RB rex.RB push vhsubps cmpsl (bad) lods (bad) jae xor test (bad) mov in or (bad) test add lret (bad) cmp push jb (bad) mov jmp loop add frstor mov rex.XB int3 and out callq sbb (bad) fisttpl (bad) div cwtl loopne or mov negb rex.WXB jmp movabs mov out or mov sbb rex.W (bad) (bad) xor mov fs movslq cmp pop cs mov idivb out cmpsb sbb rex.RXB rex.W rex.WB rcr cmp rex.WX (bad) mov mov addr32 sub sub mov (bad) (bad) test cs enterq mov jrcxz insb outsb negb and (bad) rol sbb push (bad) jo mov jle sbb rex.WB cmp stos scas mov jns lret mov push mov enterq (bad) movabs push mov mov jrcxz adc push xor test xchg insl movslq test cld fiadd retq fwait insl mov repz jnp mov mov cmp test sub scas adcl lods (bad) sub xchg sbb mov lret movabs cltd cmp stos out add fisubrl jrcxz (bad) sub mov clc (bad) rex.RB rex.XB psubusb or leaveq int data16 mov std rex.X jae add pushq mov rcr fidivr xor add rex.W or out imul clc xchg sarl push scas testl stos movsl sub std fidivl (bad) jno cld (bad) rex.XB rorl gs cs push iret jge (bad) mov and outsl jg add mov xor test rcrl movsl (bad) rcr rex.WRX (bad) lahf pop int3 test (bad) (bad) mov lods gs sbb push rex.B mov push in movl xchg shrl and add (bad) shrl rex.RX xchg in or adc jno pop loop roll sub or push (bad) jle cmp rex.WRXB adc movabs loope (bad) xchg pop or push callq push push addr32 (bad) movslq (bad) sub movabs retq fs jo sbb xchg or (bad) fnstenv fmulp out sarl test js (bad) (bad) pop push lret adc loope (bad) (bad) sbb pop mov and retq callq rex loope (bad) icebp sub enterq clc loop cli sub leaveq pop popfq (bad) (bad) mov push mov in ja cmc ror retq add rcrl jbe subl xchg (bad) sbb jnp imulb jo cld (bad) (bad) mov out jno nop loop int3 roll push (bad) (bad) mov xchg loope or rclb mov (bad) enterq cmp fistl or rex.B int sub (bad) hlt or gs repz imul xchg mov mov jno jbe movabs (bad) xchg sbb mov fistp or sub push xor mov movabs icebp rex.WRX rex.W outsb (bad) pop fildll xchg (bad) insl or andl movabs imul sub in add in xor movabs rex.B jne add repnz push mov movsb rex.W mov adc (bad) or out mov (bad) rex.WRB pushfq rex.WR leaveq pushfq int3 fldenv fisubr lahf ficoml cmp (bad) vpackssdw leaveq and jrcxz clc movslq lahf push or shrl (bad) sub (bad) (bad) out (bad) icebp imul neg movslq fstps scas movsb repz movabs test adc in rex.B loope icebp xrelease push jmp movl adc sub mov sahf jo rex.RXB in rex.XB js loope and fildl jmpq jne mov add in pushq out lret retq retq (bad) int3 cmp ss js (bad) mov (bad) (bad) enterq int shll cmp mov adc xchg retq rex.WB (bad) fnstcw idivl and shll xchg jno test (bad) sbb (bad) xor (bad) jbe orb rex.W rex.WX xchg js test push out mov fsts and or rex.R cltd mov std push in (bad) (bad) out movslq cmpsb sub (bad) pushfq popfq or fnsave xchg outsb lock xchg pop out adc retq adc scas (bad) xchg (bad) adc pop test jae outsb shr pop (bad) adc adc (bad) divb xchg adc and and loop adc lea rcll (bad) cli rex.X cmp imul cwtl movabs cwtl (bad) xor stos movsb rol xor je mov sahf mov (bad) cwtl jb (bad) test movabs imul fwait insl cmp mov movabs or cmp or mov roll scas cmp ja rex.RX (bad) add ds int sub (bad) mov push xchg jo add (bad) (bad) jrcxz roll mov jmp fs xorl rex.B gs xlat cld pushq mov pop jmpq jnp cmpl rol mov shrl (bad) repz rcll rcrl jne cmpsb adc rex.RX out pop xor outsl rol (bad) popfq sbb pushq pop sub cmc mov mov in cltd sahf jg mov pushfq add or and sub out mov test movabs shrl fnstcw rex.RXB icebp lock jg adc ficomp rcll fldcw int3 push jo leaveq pop rex.B movabs or (bad) ss mov xchg roll xchg rex.B add lret or pop mov fimull xchg shll add rex.XB mov incl sub fild rex.RX rex.WRXB fs xor (bad) xor or jns cs test std addl rcrb repz (bad) xchg popfq rolb mov adc (bad) add rex.WX mov or in jbe icebp (bad) jbe lahf retq mov rex (bad) (bad) test mov imul pushq adc xchg (bad) fimull xchg outsl shrl adc sarl cmpsl leaveq and mov scas rex.WX add sub rex.WRB (bad) (bad) repz shl clc cltd cwtl fbstp loop xchg rex.WXB and xchg movsb (bad) pushq fadds cwtl movabs xchg add lret jae adc jrcxz (bad) (bad) (bad) fisttpl pop rex.RB shl (bad) callq cmp pushq add xlat adcb cs mulb loope (bad) cmp mov and rorb push xchg sbb retq sarb ficomp out mov lock je (bad) (bad) test jmpq (bad) jg lret jg rex add rcl push pushq (bad) (bad) add movsl mov mov rorl (bad) rex rex.WRXB adc stos (bad) xor int3 (bad) add flds (bad) adc mov leaveq push mov test repnz push adcl retq push rex.WB rex.WR cmp jb or jo or pop shr mov and mov lock rex.W jae fucom testb imul js mov pop lods pop clc mov (bad) fwait std mov cmpsb in repnz loope sub testl movl xchg sbb callq vpsubw pop scas rex.X rex.WB xchg je jmp (bad) (bad) dec sbb mov pand adcl pop jns add (bad) shl mov (bad) pop (bad) (bad) sub rex.WR flds adc gs mov rex.WRXB movl mov retq xorb xor mov rex.WR callq mov mov jae sub mov or cmp jo lret push or rex.RXB rex.XB repnz and notb (bad) repz stc add jge int push rex.RX lods sbb pop fcompl (bad) movslq lahf (bad) cmpsb xchg rorl sahf jp and sbb ss adc adc jge int add sub fisttp xor sbb in or xchg (bad) retq out xchg lock (bad) fcmovu mov rex.RXB notb jno in xchg shrb pop enterq movabs add icebp out in icebp sti pushfq lods fidivl jmp rex.RB shll enterq (bad) or fnstcw movsl rex.WR stos outsb fcoml xchg pop lret retq xchg cmp movsb mov repz sbb (bad) fmull out loope rex.WRB rex.WRXB mov fstpt mov (bad) insb loopne fimul (bad) rex.WX cmp pop add cmp sub cld lahf (bad) loopne (bad) (bad) (bad) mov mov sbb and fs sub fdivs addl fwait test jnp and mov addr32 rex.W rex.XB fidivr fwait out nop xor mov xchg adc push callq int3 rex.R (bad) sbb mov sub lret test popfq add and xor (bad) sbb pop xor andl out gs (bad) int movslq iret cmpsl add notl adc lods pop pop xor movabs xlat movsb sub jo lea int3 jp cmp repnz xor xor sub xor (bad) shl and lods rex.WR rex.WR jge (bad) leaveq mov mov callq movslq test mov fadds pop rex.R decl roll xor or fsubr fwait test pop and lret mov cmp jl movabs (bad) out push jne rolb lret or loopne mov fs or movabs stos ror mov (bad) add popfq callq mov movabs xor cmp push mull jrcxz sub xchg mov (bad) rex.X rex.WRB rex.RB outsl rex loopne (bad) fdivs fs or out out in cmpsl insl adc out pushfq test in (bad) mov xchg lock (bad) (bad) push and repnz xor lret pop outsb movabs rorl lret (bad) jne xchg shrl je std xchg fs mov rex.XB icebp xlat (bad) (bad) rex.B mov insl (bad) mov movabs rex.XB sub jge lret rex.WRXB and (bad) xchg movsb rcll (bad) mov cmpsl lret loopne test fisubl movabs iret cli int pushq jle pop add cltd shlb out mov xchg (bad) cmp jae loopne pop mov (bad) cmpsb add rorl (bad) movabs (bad) js and shrl stos out lea push rex.WXB jne mov movabs adc pop loop movabs insb add movabs mov movsl rcl xchg stos mov cmp or jne push insb (bad) mov xchg or mov movsl (bad) mov cmp (bad) shll cli jne lods loope (bad) repnz data16 jg cld sub ror (bad) fnstsw outsl sbb rcrl (bad) push sub clc add (bad) add rcll loopne push sti repnz (bad) mov pushq rcr or and rex.WB movabs jno xor js (bad) and pop scas loope sub mov adc test mov (bad) je adc retq rex.RX rex.RB push out and test pop mov push in rorl mov jl int (bad) retq out push add pop fwait leaveq in rex.WX repz sbb sbb jp sub cli repnz push sbb (bad) cmp push (bad) rex.B pushfq data16 roll (bad) mov (bad) enterq iret rorl sbb mov sbb or (bad) and push push shrl cmp (bad) (bad) rex.WRB cmp rclb jo pop rcll ffree jge sub movabs int mov fidivl (bad) loope fcmovnb movslq xchg pop div lahf rcl (bad) (bad) repz xchg (bad) lret jne add rex.WRXB rex.RX (bad) mov std stos xchg push stos (bad) in (bad) sbb rex.WXB and (bad) repz sbb retq (bad) cmp xchg scas sbb retq pop jrcxz int cmc rex.RXB (bad) mov push in jno lock pop push hlt jne sti and xchg (bad) sub adc add (bad) cld adc sahf or push sub adc (bad) mov pushq movabs xchg mov cmc xor add mov (bad) xchg (bad) int3 cli or or imul sub pop (bad) sarl rex.R pop mov sbb mov (bad) xchg pop mov faddl xor (bad) sahf pop adc sub add cmpl icebp jmpq adc adc mov rex.WRX stos (bad) xchg js scas add int push lret or rex.WRX adc in sub rex.RX jle or mov fidiv movabs mov sbb cld mulb mov data16 sbb add rex.RX rex.WRB int3 jne fwait rex.XB xchg jle fdivr mov stc cmp (bad) rex.X (bad) (bad) push insl add (bad) jp movslq jne rex.WR add jl xchg and test outsl rex.WRB (bad) pushq mov jnp mov push add clc int3 jg pop jo repz mov sbb mov (bad) mov (bad) or (bad) xor (bad) xchg stc scas sub rex.B rex.XB mov xchg mov rex.RXB gs and (bad) (bad) cmpsl rex.WR or test rex.RB stos (bad) insb mov push fnstenv rex.RB leaveq retq leaveq adc icebp repz sub lock test movsl (bad) adc insl jp test test and jns stos roll mov fcmovnb mov jns js (bad) xor push and push data16 add mov add int (bad) xchg movabs push lahf cs lock addr32 movslq lods retq jge xchg mov cmp rex.B std mov or cmp movslq loope rex.RXB in (bad) (bad) (bad) cmp int3 xchg mov (bad) sbb sbb cmc repnz mov lahf jmpq jno mov leaveq (bad) push retq (bad) pop jae fisttpl xor sbb or mov (bad) jns mov scas (bad) movsl packuswb and leaveq rex.RXB fcmovne xchg lret or out imul (bad) mov sbb int rex.RB icebp es fsubp xchg js (bad) adc rex.RXB sub mov add fadd mov lods fidivr (bad) mov jae iret (bad) (bad) mov (bad) (bad) pop (bad) rex.W or loope je popfq loopne sub (bad) jno (bad) int retq movabs (bad) sbb imul (bad) mov xchg bnd push xor cmp mov add sub addr32 (bad) (bad) (bad) push movabs sub xchg jle jno mov xchg insl int mov rex.WB imul rex.WRXB mov add cli fld xor jmpq mov int3 out xchg pop xchg (bad) out jmpq enterq mov insb xchg nop leaveq addl fisttpl enterq adc xchg movabs mov mov cmpps add movabs cli rcr mov add faddl adc cltd (bad) callq (bad) jo cli out or xchg jbe mov rex push sub and nop movabs movabs pushq shlb pop jo in gs loope fldcw sbb (bad) rex.B movslq or (bad) leaveq addr32 push (bad) or push cs sub psllq fsubrp pop rex.R out lret xchg jl (bad) (bad) fstpl or leaveq push test scas xchg (bad) (bad) sub mov rex.R repz and cs callq rex.WB imul adc xchg retq rorl (bad) rex.RB rex.WR lock mov xor in ja or std sub lahf in rex.R fxch (bad) mov rex.XB (bad) ficompl imul add movabs (bad) sti xchg mov scas (bad) pop (bad) push icebp mov (bad) xchg test rex.XB rex.W (bad) jnp rex.RXB jrcxz xchg xchg xchg cltd jno mov testb leaveq rex.XB mov (bad) push idivl movsb or rex.W pop leaveq sub pushq test insw sbbl (bad) rolb rex.RXB mov or pop clc rex.RX stc (bad) cs out (bad) repnz xchg leaveq rex.X es gs mov cmpsb fsubl stc mov rex.R pop rex.WRB movabs (bad) lock stc push mov rex.WRX xchg mov cs iret xchg rex.XB pop rex.RX pushfq rex.XB (bad) in cltd lea push test rex.XB and loopne (bad) add rolb loopne sbbl stos (bad) and icebp sbb xchg mov retq rex.WX loope,pn rex.RXB stc rex.RXB or icebp rex.R out or rex.RB add (bad) add rex.WR lods cltd sub mov jmpq mov (bad) testl rex.RB cmp fld rex.WB mov vpcmpeqb lret leaveq (bad) mov mov mov je mov push mov xchg pop sub test ja pop pop (bad) scas add push (bad) mov xor mov push retq jmpq cmpsl test add sub sub callq (bad) rex.WRB in enterq sub mov (bad) mov (bad) loop iret rex.WR sub callq lea pushq retq stos int add cld push (bad) xchg sub pop xor enterq sub mov push sbb or push fs pop mov rorb repnz jne mov rex.R add rex.WRB jae rex.WRX (bad) sub test sbb xor idiv sub callq mov retq retq sbb mov mov fbld xchg and sub rex.RXB ljmp (bad) jl cmp jne enterq or and test loope callq or jl iret mov out lea xchg add cmc adc pop xchg jl rolb (bad) rex.R mov sbb (bad) sub xchg jl jne int je (bad) rex.WRB (bad) hlt test (bad) jg sbb add clc (bad) mov not movsb test rex.WR mov out repz (bad) div (bad) xchg rex.RXB cmp and rex.WXB hlt (bad) (bad) in int movabs rex.WRX (bad) sub in lahf add push repz cmpsl rex.WR cs sub or mov xchg mov xchg gs mov out icebp mov cmp jrcxz test movl pop add cmc (bad) retq xchg (bad) cmp loope add movslq repz lock sub jmp mov cmpsl int xchg movabs repz rex.B mov test pop sub mov andb scas (bad) sub mov in sbbl xor callq pop cmpsl push pushfq xchg push lret testl jbe (bad) mov (bad) jmp add add rolb int3 jmpq (bad) sub in lret test js jp (bad) rex.R mov sub rcll jmpq pop (bad) lret imul or adc sub lock sub rex.RXB pop ss xor pop xchg enterq rex.R iret (bad) push lret jns cltd clc rex.X cs leaveq xchg test prefetchw jns popfq mov movabs jmpq (bad) pop mov pushq divl stc lret callq imull fisttp adc push callq vucomisd adc loop (bad) jns mov or pop (bad) addb xchg cld mov movabs fiadd je jmpq addq ja js int3 sahf or jmp adc loope xchg callq movsl (bad) scas (bad) xor shrl rex.RB rex.WB mov mov add rex.WXB mov mov sub cltd sub and fwait rex.WXB test icebp or sahf cmovbe cltd hlt es enterq test or in xchg scas sbb rex.W enterq cmpsl (bad) add push cli sub (bad) add test rex.WB scas out xorb callq stos idiv test lea rex.WRB rex.WB int jne imul xchg test cs stc addr32 (bad) mov lret (bad) rex.RB movabs add jmpq mov xor out cmp sub cld jne (bad) std lods or xchg rex.B rex.R mov cwtl rex.WR or add fcomps mov mov retq adc or out mov mov xchg std sub sub (bad) jno sub psllq (bad) (bad) in sbb (bad) out sub imul jg movsl adcl lods sahf sub xchg test retq pop movsb sbb movsl sbb push mov movabs jg jg cmp lahf movaps sub sub cmpsl rex.RX iret insb fs cs jg out cs xchg (bad) rex.RB xchg push xchg or mov lret jb jle (bad) pop (bad) iret jmpq test mov pop in cwtl popfq cld fdiv mov (bad) mulb leaveq cld adc test jno test (bad) mov ror xchg shlb rex.XB out sbb mov lret push xchg sub out nop int3 adc loope (bad) or (bad) add rex.RX int3 retq (bad) add stos push callq xor out rex.WRX xlat or pop sti (bad) repnz rex.R cs ffree fldcw and rex.B jbe rorb loope fwait pop rex.WRX rex.RX ds rex.R pop (bad) xchg (bad) (bad) (bad) sahf fist sub jmpq xor xor in fistpll pop (bad) rcr and fisttp cmpl in rex.RB ss pop mov jge or lahf mov movabs xchg movabs sub rex.X (bad) fcomi xor pushq hlt push xchg adc jrcxz nop retq pushq rex.WR add mov (bad) ljmp jrcxz mov rex.WRX pop loope (bad) mov lahf in or and lret jmpq xlat imul nop (bad) (bad) or sub icebp cli and (bad) or out lea jb cmp sti jl jo outsb sbb xchg repz rcll std sar orl (bad) cs xchg (bad) nop jnp rex.B cmc hlt shrd cmc xor rex.WB (bad) sub lret mov movslq adc jmpq in (bad) cltd jnp pop rclb and rex.WRB stc out adc rex.RB mov (bad) jne (bad) cmc jno jbe (bad) (bad) je mov add (bad) (bad) sub (bad) sti popfq xlat (bad) mov mov clc popfq or sub incl or xchg (bad) fdivl (bad) pop (bad) push std std xchg add sti or cmc icebp cld and je movabs loopne xchg rex.WB push cmp (bad) sbb (bad) push adc mov repz jmpq cltd leaveq es movabs (bad) (bad) jne jno pushfq enterq (bad) pushfq add pushfq mov nop lods rex.RB lret movabs popfq divl cmc pop sub in enterq adc lret in out movsl (bad) outsb rex.WRX rex.B out xor rex.XB jg mov (bad) xlat add push xchg lret (bad) pushfq (bad) rex.WXB retq pop stos loope out sti rex.WRX sub sbb lret xlat (bad) divb loope xlat (bad) and mov int3 (bad) (bad) push cmc mov or pop sarl lods std rex.WRXB or adc in cmpsl (bad) in (bad) cli jno lret faddl ds push xorl pushq pop test fisubl xor add rex.W rex.R sbb out or jns xor push retq mov std mov (bad) rex.RXB sbb and mov (bad) leaveq jl sub rex.WX sub sbb push mov (bad) cmpsl int3 int3 mov loopne (bad) icebp rex.RB mov mov pop rex.RB jmpq and sub lahf addl xchg mov pushq in mov xor test (bad) or fs rorb (bad) in adc rex.WB fwait lahf leaveq mov mov jge cmpsb stos (bad) movabs jrcxz stc in jrcxz enterq test jns mov (bad) or (bad) (bad) jae pop test mov xchg pushq (bad) xchg movabs fmul sub cmp xor jl stc leaveq icebp rex.RB rex.RXB fs hlt mov test mov (bad) mov cmp rex.X or (bad) xchg movb icebp popfq ja test test in enterq xchg addb movabs (bad) rex.WR icebp pop and movsl (bad) mov int enterq sub outsb xchg (bad) sub add xchg or sbb in clc (bad) (bad) cmp movabs cld xor imul pop lea or mov rex jrcxz jmp shr fcmovbe repz xor xchg (bad) (bad) xchg push rex.WX and ror mov loop xor leaveq retq (bad) notl callq mov rorb adc test mov (bad) mov and mov repnz (bad) push mov cwtl adc mov icebp (bad) jae movsb rcrb nop push int3 lret xor mov push hlt out push (bad) movsb ss clc loope js add cld add fsin repz sbb rex.XB std fpatan leaveq shlb loop icebp add adc ss rex.RXB (bad) push mov loopne fidivrl (bad) loop out mov std (bad) (bad) rex.WRXB add xor mov movabs rex.WRB mov shr mov jp mov loope (bad) in loopne in mov test callq jl (bad) mov lret and data16 rex.XB and cli movslq clc xchg (bad) add add cmp cmp mov sub push (bad) fs (bad) out (bad) sub mov (bad) icebp test mov cmpl (bad) icebp int (bad) movsb outsb xchg movabs loop callq (bad) xor push (bad) add rex.RXB or lods pop mov pushq rex.B (bad) repnz add repz rex.WRX mov retq mov ds cmc movabs push rex.WB jp lea fmuls (bad) leaveq push mov pop (bad) cmc cs repnz mov add sahf add test xor (bad) mov vpor push (bad) adc sub (bad) or retq rex.WXB xchg ss lods repz cltd mov jge jrcxz mov ja jmpq (bad) rex.WXB movabs movabs lea rex.XB or in popfq (bad) (bad) xchg rex.WB mov push jno int (bad) rex.WRX in jge adc popq loope test int int3 icebp rex.WXB rex.RB push cs rex.RB loope pop rex.WB rex.R stc lret leaveq rex.RB rex.WR adc sahf mov jne push (bad) rex.WXB (bad) mov (bad) leaveq fs ds jl and mov rex.WB movabs jmpq mov mov sub mov sub rex.RX (bad) rex.WX gs leaveq jns cs sbb (bad) repnz mov negb add cs pop cs ror rex.RX xor (bad) xor add xor rex.W cs rex.WX add pop (bad) jne movsl leaveq add xchg in es mov es rex.WRX (bad) nop (bad) cli xchg sub mov pop rex.RXB mov addr32 enterq (bad) (bad) loope push mov rex.WRXB repz rex.R pop (bad) movl push loope cltd vmovdqu test sub (bad) (bad) (bad) sub mov jl (bad) xchg dec adc (bad) out mov adc xchg and rclb sub retq icebp jg rex.R sub (bad) in mov jnp or (bad) movabs add clc rex.R movsl xchg (bad) fstl mov xor (bad) cmp movsl sbb (bad) rex.RXB jmp scas rex.WX rex.RB (bad) xchg (bad) std xchg (bad) sbb loop (bad) (bad) leaveq rex.WR (bad) int test push jrcxz outsl out mov mov (bad) lret mov fcompl xchg out xor mov rex.B (bad) xor fsubrs retq cltd pop stc movabs rex.B std cltd add (bad) gs cli mov repz cld stc lret shrb pop rex.WB in cs push sbb xchg mov (bad) repz std leaveq (bad) enterq rex.WR cs jne jle or pop icebp xor sbb insl sbb rex.WRB hlt pushfq clc add (bad) repz (bad) cmp lods mov gs gs (bad) xor (bad) mov or test push xchg xor andl (bad) and xor mov xchg (bad) lret rex.WXB and xor cmc nop movabs pop xor stos leaveq out xchg out xor rex.R imul in jmpq and int movabs pop rex.RXB rex.RB repnz xor lret cmpsl rex.WR add test pop fcomi jno (bad) in adc rep jne sbb out repz jrcxz mov loope rex.R popfq rex.WRX adc cmc leaveq lret shr icebp pop movabs fxch and jb retq sbb test hlt jmp xchg lea std ja or jp jo sahf mul test leaveq lock mov mov ja (bad) shrb cmp fmul rex.RB cld insl (bad) mov lret outsl jg add mul jrcxz int3 fcmovne loope sub jnp fucomp or jmpq rex.WR repz repnz or icebp rex.RB rex.WRX retq and test (bad) fnstsw cmpsb or mov lahf rex.RB retq in cs int3 rex.R (bad) cli add addl callq add mov xor rex.RB jmpq out or rex.WXB (bad) add in movabs sub andb and loope xchg cs lods xor mov lock sub shrb mov in mov or adc lea adc movsb cld rex.RB sbb (bad) rex.RB mov cld (bad) lods int3 movabs jmpq out pop add repnz addr32 pop add mov rex.RX (bad) test cltd insl mov add hlt sub sbbl mov jrcxz (bad) xlat cltd rorb mov mov int mov mov mov sbbl xchg adc lret sub (bad) out (bad) scas retq (bad) sub cmc mov leaveq repnz hlt mov xor sbb movabs in nop rex.RX lock pop and cmc (bad) sbbl lret callq movabs pushq or movslq lahf cld in fsub lret pushq mov (bad) rex.R icebp je rcll mov clc mov int icebp lret xor icebp retq push mov rolb push cmc add scas out or mov rex.B int (bad) cmp addr32 jns js retw roll or leaveq pushq cmp xchg pushq (bad) and mov in cli pushq xchg (bad) jne xchg in mov sahf out xchg xor push jp movslq xchg nop sahf loop (bad) (bad) callq callq insl rex.RXB adc fcmovnu jne lock rex.RB mov push (bad) xlat es notl adc repnz pop fdiv push rex.WRX in jmpq cmp imulb (bad) cli cmc jmpq (bad) mov cmp lret movslq cmp repz push test add push callq mov in sub repnz clc (bad) (bad) rex.X rex.WRX (bad) ds in fisttpl mov int rex.WB (bad) rex.RB or cmp adc fimull callq xchg cmpl adc add (bad) imulb rex.WR fidivrl fisttpll and lret xchg hlt sub push rex.R xchg cltd and mov jnp xchg fldenv sub (bad) rex.RX mov lahf outsb lret rex.WRX mov rolb es xchg cmc mov es (bad) xor (bad) mov mov mov std rex.RXB in (bad) push mov loop es jae rex.WX rex.RXB fldcw mov push leaveq (bad) icebp sub or (bad) add cltd gs vphaddubq retq movabs (bad) hlt push cmp loopne cmp hlt sbb shlb (bad) rex.RXB je fs repz (bad) incb push mov mov cmp scas int sub mov or icebp push out mov shlb push and sti add sahf flds (bad) add (bad) jrcxz fdivl lret movabs sbb and in int3 in fs (bad) je xchg and mov lret jmp xchg jno add jge mov repz sbb jg mov rex.WR and movabs stc push xchg or and jmpq out adc (bad) cmp pushfq (bad) mov jmpq lock fisttpll mov lods js movabs jrcxz fcomp rex.RB xchg or mov test retq (bad) mov fs cmp rex.WR loope rorl push scas retq out mov jnp pop (bad) mov mov pop in and pop sbb js repnz fwait cmp and insb jns rex.RXB std jle je clc ss rcrl repnz (bad) fmull icebp lea rex nop push adc loop cwtl test out adc lret or mov stc ss add sub out fstps mull test cs push or and mov repz mov rex.W or fiaddl xchg sub rex.RXB jrcxz movabs rex.WXB rex.RX leaveq test cmp sbb lea jrcxz popfq decl fild cltd and vmaxps cltd mov or lea rcrl out test pop rol adc and sub scas jg out test in and rex.WB (bad) lret or sub stos jmpq cmp or callq (bad) icebp sbb test sub mov rex.RXB xchg mov mov retq lea adc xor push or not repnz jne test cmpsb rorl popfq mov outsb mov mov sbb and push sahf mov callq and mov out push xchg rcrl mov (bad) xor rex.RX fnstcw lret mov cwtl rex.RB jl xor xlat rex.RXB mov xchg int movabs push loop (bad) xchg retq xchg test int3 movslq (bad) insb xchg retq addl jno cs mov clc jne scas xor mov rex.WR es sub outsl adc push (bad) mov retq pop movzwl (bad) mov cltd pop (bad) rex.WRX cmc cs (bad) gs adc insl popfq stc jmpq testl mov iret fsubrs jge cmpsl fisubrl sub push xor mov mov leaveq and jmpq ss vpunpckhwd xor (bad) (bad) pop pop or pop push jle pop repz (bad) pop callq xchg adc xlat cmp ja rex.WRX stc or fisubrl cmpsl add data16 lods jae and loopne (bad) (bad) (bad) rex.WRX rex.WRX jle pop movabs mov mov outsb xor jb ror jl or out sub shr fsub jl jae callq out jns rex.WR add retq add push cli mov (bad) clc rol cmp gs sbb mov rex.W rex.RX cs out mov jbe adc rex.WX or (bad) mov xor lock and repz cs (bad) fnstenv jmpq jnp jae sti lods lret lahf out popfq int3 mov (bad) (bad) enterq fmuls rex.WRX stos test es cmpsb out callq stc fadds es icebp jrcxz icebp push test js adc (bad) pushfq or push mov stc cmp fldcw xchg rex.WRB fistpl jl jge add (bad) testb jmp data16 cld imul fsubs cltd or (bad) jnp (bad) sbb mov push pop scas movsl push mov sub int3 jmpq repz xor add push out retq xor div push ror (bad) xor hlt negb sbb (bad) rex.R test pop js rex.WB jns add test (bad) sub movabs out callq loope repnz test xchg and mov rex.WB mov rex.B clc pop mov out icebp xchg ja xor rex.WR pushfq in gs (bad) sub jo mov gs outsb (bad) callq rex.WXB (bad) rex.WRX mov jl mov fisubr or fs rex.WRX rex.WRB (bad) pop movabs clc andl pop sub movsl push and addl rex.WRX outsb (bad) jae mov adc rex.WB rex.WR mov cs pushfq (bad) in rex.WXB rex.WRX cmpl lock movsl xchg (bad) (bad) sbb xchg insl cli xchg pushq xchg subl je xor xor sti data16 mov (bad) movabs rex.WXB sub enterq push xchg sub push lods (bad) jne jrcxz out int3 sti imul mov js mov cmc (bad) lret movabs (bad) jmpq cmpsl adc sahf (bad) cmp incb mov mov sarb (bad) loope rep jp jle,pn rolb imul imul fidiv (bad) sti add roll enterq sarb jg (bad) mov pop in xor (bad) rex.WRXB in mov movslq lret sub fldl fistpl xchg fstl movsl loopne mov sti add jnp movsb sub sarb sub pop movabs mov movabs jae mov retq callq sub sahf je mov lock icebp lods rex.WR pop or imul xlat sub movabs nop addr32 push or (bad) mov (bad) leaveq and vandnps (bad) rex.WB and cmp lock mov out push xchg xor stos pop mov imul (bad) (bad) xchg enterq insl (bad) movslq out (bad) xchg movsl add xchg cmp xor (bad) add or repnz (bad) (bad) outsl rex.WR rex cmp jrcxz xchg movsb test and sahf rex.WRX sahf leaveq xchg push (bad) stos icebp (bad) outsl jns cli push stos (bad) (bad) repnz xor imul (bad) xor pop mulb rolb fsubrl pop jbe rex.RB jno rex.R jbe jnp sbb lods cmc movsb cmp pop rcll (bad) and xchg (bad) or sub sub es movslq jmpq (bad) push cwtl mov movabs rol mov push fimul sahf data16 xchg sarb and mov push rex.B push movsl xchg (bad) jrcxz negb hlt (bad) pop pop rcrl pushq mov mov rex.RB rex.WXB xor rex.RXB rex.WB lea movb mov enterq movabs pop leaveq icebp or (bad) notb sbb lahf test pop (bad) add sub xchg xchg pushq in cmpsb ds mov xchg out mov cmc mov add xchg leaveq (bad) xor cwtl lods cltd mov insl (bad) in movabs xor add int (bad) enterq cli gs xor ss sbb add push sub cmp iret (bad) xchg insl movabs mov sub jae cs callq fwait test orl add imul jg lock push rex fisttpl stos cmpsb or mov fistl callq (bad) (bad) mov gs std rex.WXB int3 push (bad) divl mov pop (bad) jno (bad) jmp xchg jb mov xchg lret fcmovnu insb pop roll pushfq (bad) mov out sahf scas add mov retq rex.RX (bad) (bad) xor fst je movabs shll cmp rorl xor (bad) out add icebp jrcxz decb (bad) (bad) loope xchg pop rex.WRX movabs (bad) retq rex.RX icebp cmp cli pop mov loope xchg mov xor mov (bad) mov xchg xchg sti cmc (bad) fxch mov mov rex.RX mov repz mov or in andps (bad) mov mov repz in (bad) movslq rcll pop cwtl gs in or and lret (bad) mov lods je sbb (bad) mov lock pop in in jo push subl pop jno push mov stc sub negb (bad) cmp sub test jno test push xchg cs (bad) test lods mov lods and clc xchg ja xchg (bad) rex.RX rex.WRXB jmp and stc jrcxz out and rex.XB (bad) out ffree nop push sub ss rex.RB leaveq rex.WR or sbb sub in or jb mov (bad) (bad) imulb imul (bad) pop sti cs mov push loope sti (bad) push xchg rex.RX cmc xchg retq std (bad) rex.WXB (bad) and pavgb mov movabs (bad) mov sub mov adc ja (bad) rolb cmpsb push leaveq in or jno push sahf pushfq xor pop add cmp (bad) (bad) rex.X jmp sub jmpq jg sbb test (bad) xchg ror mov movabs push rex.X setl (bad) sub out cwtl or nop test outsb cmp sub or (bad) retq mov cs rex.RB imul pshufw es test mov xchg icebp out or jg push (bad) and xor (bad) lret nop retq cmc and cmp pushq in rex.WB jmpq test cmp push data16 (bad) test shlb cmp adc out (bad) callq lret rex.R cs cmp jp gs push (bad) mov (bad) loop cltd (bad) jl scas adc subl jo xor test fsubrp stc icebp rex.WR mul and mov jno (bad) cmp (bad) xor cmpsb roll add cli jns test cmp out in movabs addl jrcxz and cld rex.WR leaveq jp icebp ljmp fs cwtl mov scas push stc pop pushfq fsubl shlb retq (bad) stc insb int push push out pop push add xchg lock rex.WB (bad) jnp xchg sub movslq rex.W ficompl cmp (bad) push repz pushfq iret mov imul (bad) add rcl repz cld int or movabs loope xchg sub mov push out scas insb lcall test je rex.WRB (bad) pushq xabort enterq loope (bad) cli int orl add stos or cmc sub xor and lock rex.WXB (bad) mull jae xor mov sbbl adc xchg fsubrl retq (bad) xchg adc add cmp rex.XB test adc out add movabs xor (bad) xchg adc loope repnz pop lods repz fcomip (bad) out xchg int3 rex.X pop sub xorl sub sub pop lea clc hlt cs rex.RXB cltd add mov push scas or cmp rex.RB jmp or jmpq test mov addl pop retq jp fmul add xchg jo pushfq adc push rorb nop test iret test mov lret xchg (bad) int3 movsl xchg add rex.WXB (bad) (bad) xor ja shrl outsb (bad) and mov lock jge (bad) (bad) pop mov ja jno lretq add sahf fistl test (bad) mov xchg movl mov rex.XB mov lret js cltd test rex.RX add mov xchg push pop (bad) test loope repnz mov cmpsl in (bad) fsubrs insb orl mov (bad) leaveq and outsb push cs cmp xchg int mov (bad) enterq mov test movabs fnstenv add test cli rex.RX xchg rex.W add rex.WXB int3 add lret rex.W mov rex.WB sbb outsb mov or testl (bad) int3 loope xchg loope xchg loope push sbb mov mov or fiadd fs push lock jns push (bad) sbb enterq sub cld rex.RX clc cmpsl jmpq sub (bad) rex.XB (bad) or jno out push mov mov js (bad) mov push neg movabs or add rex.WX jns,pn out scas (bad) int loope mov rex.WXB fidivrl (bad) cmpsb scas (bad) xchg gs jl mov jne add sub cs test sbb pop (bad) rex.RB cs rorb js and (bad) (bad) rex.WRXB mov rex.RB mov fs xchg or (bad) xchg jae test andb (bad) (bad) pop xor icebp stos pop fdivs (bad) or stos sti decb fcoms rex.WB mov pushq mov test cmpsb (bad) int fisttpll mov jmp add sub mov andl test rex.RB sahf xchg cld retq add test adc jns rep sub xchg and out stos repnz rex.WRXB (bad) lock (bad) repz in sbb divl (bad) push push movabs stos cmp leaveq jmpq mov test jno imul rex.XB (bad) fisttp cmpsl movsb loope lods hlt testl rclb rex.WX or xor add icebp xchg xor cli ficompl (bad) cmp push pop loope xor scas movsl cmpsl push mov xchg mov cs lea int3 pop int3 cs (bad) rex.WB sub xchg xchg pushq mov enterq retq jp or rex.WB addl scas rex.RXB int3 nop jle int cltd loop out (bad) xchg and xor sub lret rex.WRXB lock xor rex.RXB nop cmpsb cld mov jno int mov nop jae or cmp push int3 mov movabs jbe add test mov lret sbb (bad) add out mov sub (bad) sahf (bad) rex.X (bad) jno mov movsl or (bad) js cmp adcl sarl (bad) mov (bad) cs xor jrcxz mov retq in rex.WB addr32 adc jrcxz pop sahf sbbl fisttp sub clc add lret lret xchg popfq testl or iret jno sahf sahf and mov js xor or lret and andl cwtl int3 sub cmp je mov scas fisubrl (bad) xor xchg (bad) mov jge in rex.WRB rex.RXB repnz fstl xlat xchg adc and addr32 xor fwait loopne in ss repz retq jo sub jmpq decb sbb xchg jle or mov rolb push add movsl cld mov in sbb (bad) rex.WR lret insl (bad) lock (bad) in scas hlt and outsl xchg jb test fs out pop loop mov retq push negb and push pop and xchg sti cs rex.WRX lock rex.XB add mov (bad) sbb pop mov mov repz mov test clc repz sub insb mov vaddsd loope sbb jno or and (bad) xlat rcrl jl fsubrp xlat push pushq pushfq jle notl cmp movaps cmpsb and test (bad) pushq (bad) out in sub xlat cltd or roll sbb imul movabs icebp cwtl (bad) fisubrl (bad) jbe test adc test xchg push data16 test loope (bad) rex.XB (bad) fisttpll mov rex.X (bad) xor rclb and sub retq lea sbb add lret test (bad) (bad) jp retq mov fucomip mov sub mulb pop sarb adc movsb in and pushq add xor xchg rolb gs (bad) sub adc loope test jge adc pop or cmc adcl test mov mov mov rex.W mov mov repz test xor callq rex.XB fadds cmp and out in xchg pop mov lods insb (bad) jns repnz (bad) fnstenv xchg mov mov pop test callq (bad) sub sti add mov movabs pushq (bad) testl jl (bad) movsb rex.W int icebp mov lret cs xchg test rex.WX out out sbb jnp add lock mov (bad) mov jnp cs lret (bad) jae mov lret xlat adc je lods enterq mov movabs mov jmp (bad) in movabs lods (bad) rex.RB rex.W movabs cltd jne rex.WRX stc rex.RXB (bad) hlt add sbb jl loope mov pop xor test sub (bad) (bad) (bad) jne mov xchg jns xchg rex.WB sahf int3 or rex.XB rex.RX fcompl roll (bad) sbb mov sti hlt rex.RX jmpq add stc or sbb adc mov add sbb xchg push imul push insb cmc dec in test pushfq (bad) cmc push (bad) cltq stc outsl fs je movsl cmp sti mov xchg or mov in and iret movslq rcr insl out out push stos cmc icebp (bad) or in xor hlt adc testl rex.WXB rex.X jbe rex.RX sbb mov sbb (bad) fs rex.WR iret rex es jge mov push rorl out pushfq (bad) out cs fucom mov jo (bad) (bad) sub cmc scas or pop push adc or sbb pop stc add int3 cmp pushq add mov pop in cli (bad) add (bad) (bad) out mov mov rex.WXB and rex.XB sub int3 jmpq in stos add test lret rex.WR rex.RXB add rex.B fdivp lahf mov push callq (bad) adc xchg push shll sub out or adc sub jmp xlat out jrcxz push inc incl fnsave sub hlt cwtl rex.XB gs xchg adc fldt (bad) mov (bad) xchg xchg cmp rex.WB rex.RXB (bad) stc and push xor (bad) rex.WR lret (bad) (bad) pushq leaveq push or movabs add push adcl je movabs xchg in clc jp hlt (bad) imul jg pushq lods sbb repz es add adc fwait stc lret stc int cmp mov int3 push lock movsb mov (bad) jp or and imul mov sahf mov lock scas and xor sub (bad) sbb movabs xchg jb sub leaveq mov clc pop test (bad) cwtl pop in mov xchg hlt sub mov in (bad) jbe fadds roll fidivl leaveq cs add (bad) adcl sub rex gs gs mov clc repz sub mov stc sar iret orl mov loope mull mov cmc or imul rex.WB lods (bad) cli roll test jno rex.WR sarb je rol xchg sbb add test xchg fpatan xor jae xchg lock rex.WRX rex.RX loopne adcl jle (bad) pushfq lret cs xchg mov jbe jg cmc rex.X loop lret adc leaveq pop rex.RXB cmp (bad) loope sahf (bad) pop lods enterq sub (bad) je xchg rclb mov icebp sub cli sbb sub icebp cmp jae outsl mov xchg cld or js add vmovdqa movabs rex.WRX mov mov pop push movabs mov (bad) sub cmp cmp pop jb (bad) mov loope je addl mov outsl sub movslq movabs mov stc cmc rex.WRXB imul out (bad) lea jb callq rex.WR xorb movabs test sbb sbb or cmc repz cmp retq lods push cmp movslq lahf enterq popfq or rex.W rex.WRB cmp mov push loop gs incl xor lret adc out xor pushfq sbb fwait xor out xchg (bad) mov movabs sbb in jne jle fcoml lea (bad) cmpsb xchg mov fcomps fcmove pushfq stc repnz and sahf (bad) jge push jno cwtl cmp and rex.WXB add cld rex.WR jo (bad) test add mov push rex.WRX enterq out sbb std rex.B cltd sub (bad) test or int3 mov or insb pop and add jo xor lods rex.WRX lea rcr sub mov add mov insb or cmpsb jmp test mov sbb push and loop scas sub add rolb mov icebp negb (bad) repnz cwtl adc cs rex.RXB stos cmp loope pop mov sahf fsubrp pop rex.XB jl ds enterq sub (bad) rex.RX retq jns sub leaveq or rex.X testb fndisi(8087 adc sbb mov test xchg sub xchg mov test rex.WB jne rex.WR jge int3 mov rex.X notq retq pop (bad) popq (bad) adc (bad) sbb xchg rex.WRB enterq jrcxz sub (bad) in mov xchg (bad) fistpll int3 add lock rcl sub icebp fbld popfq leaveq and (bad) movsb test (bad) mov sbb callq jnp rclb (bad) push add rex.WX rex.R sahf pushfq loope data16 jrcxz (bad) add int rex.RXB pushq or mov or (bad) push (bad) in sub add loopne hlt rex.W mov adc lods push rclb movabs mov sti xchg repz repz jrcxz or popfq movabs loope mov rex.WXB add or in pop add mov repnz movslq add rex.B add test jrcxz add movabs rex.WR std jmpq lret push (bad) in cmp retq mov sub (bad) stc gs int cmp pop movabs (bad) (bad) callq (bad) in callq pop rolb xchg not xchg mov sub pushfq out hlt sub callq pushq xchg rex.WRXB test push jl movabs xchg and lret add (bad) jrcxz hlt fstpl adcl out retq adc pushfq rolb lea rex.WB gs xchg sti int3 movaps cmp rcrl loopne (bad) jno jo rex.B (bad) lret xchg ror and sub mov stos (bad) je xchg xlat callq outsb rex.RXB repz lret rex (bad) mov (bad) in adc xchg ja in popfq in xchg or cs and rex.WR rex.B xchg rex.RB or rex jb repz out in rex.WXB hlt in retq retq movl (bad) mov rorl mov (bad) leaveq mov rex.RX int3 jno imul (bad) jmpq mov and cmp test out xchg rex.XB jle repz mov test cmc in leaveq (bad) enterq or mov out repz jno jrcxz loope push es rex.RX lods (bad) flds stc enterq sub mov rex.WB rex.WR out (bad) pushq out rex.RXB movslq fisttpl movsl and jg lods (bad) mul (bad) jbe push mov cwtl rex.X mov push cmc (bad) jmpq test movabs (bad) gs mov stos sbb scas orl add (bad) pop (bad) cmp orb sbb (bad) and test imul sub (bad) int3 mov add cs xchg (bad) (bad) int lods mov mov test rex.WR sbb cmpl add notb (bad) ficom mov movsb fcomip (bad) pop fcmove imull lea leaveq cltd movslq add fisub xor retq test (bad) (bad) rex.XB jmpq sub int lods (bad) rex.RX sub or rorl loope (bad) (bad) add lods callq (bad) insl test rex.WB (bad) pop (bad) sbb lret outsl loope push sahf movups (bad) (bad) jns test cmp movsl add xchg fwait (bad) sub popfq adc hlt pop fscale rcll jae mov (bad) push jrcxz ja insl rex.RXB mov sub pop (bad) jnp add hlt cld mov cwtl insb (bad) pop add stos (bad) or in stc and push cmc rex.RX in and pop (bad) imul rex.WRB out mov (bad) out or push test xchg push (bad) enterq xor test sbb mov or retq (bad) repz jne xchg repnz push mov lock sub leaveq rex.RX loop callq jno stc repz mov (bad) flds or in gs cltd cmp sub cld test cmpsl std (bad) jae sub mov (bad) cmp (bad) or xorl rex.RXB (bad) shll int xchg sbb stc (bad) rex.RX pop (bad) mov out rex.W lret cmpsb (bad) cmp repnz rex.RB rex.R pop push test cmpsb cmp rex.XB cli mov icebp hlt in or test rex.B retq lret mov test (bad) mov add (bad) mov rex.RB ds leaveq (bad) cmp cmp adc rex.RX mov lret push stos sub ja shrb cmpsl movabs out push mov cmp or (bad) (bad) enterq movsb and loope (bad) int lret (bad) lock (bad) xchg rex.RX movabs cli (bad) adc imul in test jnp stc add xor mov out push adc mov rex.WRX movabs mov roll vmaxsd (bad) negb rex.WRB mov mov adc retq xor fwait push not jle rex.RX in and rcrb xor repnz (bad) nop fadd ss rex.WRXB xchg int3 and hlt xchg mov in enterq sub fucomp sub negb movslq imul (bad) out mov rex.WXB leaveq in sub clc adc xchg rorb test or (bad) test sahf xor jmp add (bad) fldlg2 rex.RX repz movabs mov rex.WRX sub mov fwait rex.WRXB add cmp or leaveq sbb cs or and xchg test leaveq fwait rex.R repnz icebp out jb rex.RXB (bad) lret xchg rex.WXB rex.WRX lret sbb lea xor lret cmp pop sti int3 mov callq jns sbb jbe mov sbb mov jp stos jno (bad) (bad) enterq xchg xchg xchg ror xchg movslq lock (bad) in mov enterq lret or fwait jl clc push pop mov nop test mov cmpsb movsb popfq loope xchg addr32 add out cltd loope mov (bad) (bad) rex.WX fdivrl jbe push loope sbb cmp xchg push xor shr fst cmc cmp int3 add outsl out fidivl jrcxz xor mov xor mov rex.WRX je mov outsb enterq (bad) (bad) adc adc in adcl and push (bad) lea pushq mov rex.RX pop pushfq jrcxz lret push hlt sahf cmp callq callq nop movslq hlt movabs cltd cmp xchg mov xchg int3 icebp push adcl int3 test fxch pop cmp jne jno pop jp adc int3 test lret xchg mov test hlt sub shl push mov sub add (bad) lret mov fdiv cmp movabs divl mov cmpsb mov xchg ffreep retq mov mov (bad) (bad) (bad) jle rex.X mov and callq jmp iret fcoms (bad) xchg or sub paddusb mov rex.WR fstpt push mov adc pop fsubs xchg mov jrcxz jo or in (bad) icebp mov push pop (bad) push xor xor xchg pushq lret add cmp leaveq rex.WR cmpl cmp jb fcoms out (bad) (bad) or add movsl rex.WRX pop test int notl notl scas xchg (bad) xor sarl insl rex.WRB (bad) cli jmpq jp es or movabs pop mov (bad) mov (bad) out cs jle std pop add xchg push rex.WRX sbb and rex.W (bad) mov add rex.WRX testl lret (bad) (bad) jl fldenv testb lea test andb mov pushq movabs pop in test movslq in leaveq cld (bad) loope mov jmpq xor rclb mov mov (bad) cmc mov mov jo mov cmp loope mov rex.WR std and (bad) sub or push mov add rex.RXB icebp xor rex.RB cmpl and xor cltd scas or rex.RB xchg scas push and (bad) cltd addr32 out movabs rex.WB sahf sar imul outsb iret addl (bad) xlat retq xchg (bad) (bad) sti or sub callq roll callq xlat sahf rorl rex.RX leaveq repz pop callq jne cli nop adc jb enterq jg or sub lret in jle xchg fisubr rex.XB or push loope test (bad) movsb sbbl xchg xchg pushfq (bad) and fstl insb lods cmc lock js hlt incb test jl (bad) orl retq (bad) sub retq rex.RB loopne xor xchg add mov popfq in icebp mov movsb fwait rex es jb rex.W or or imul mov mov int3 rex.WRX hlt pop cli test xor (bad) or rex.XB sbb movb sar pop loopne (bad) xor sbb test mov pop jmpq mov and xchg adc cltd pop xchg out mov outsl jrcxz cli rex.RX (bad) pop lods mov sahf rex.WRX enterq (bad) movabs xchg (bad) retq fs sbb sar rex.XB rex shrl cmp jrcxz,pt popfq and sbb (bad) movabs add test jrcxz (bad) test jo test imul sub data16 sub jb jb jmpq (bad) xchg rex.XB sub cmpsb int3 jmpq popfq mov rex.X cltd mov jb jmpq in imul stc mov rex.WB xchg in cltd xchg jns (bad) adc cmc or xlat je imul out icebp sbb add or insl rex.WRB (bad) icebp cmp add add leaveq push rex.WRB movsl cltd jrcxz xchg rex.WB test stc loope xchg pop xchg in hlt icebp rex.WB test movabs jb jae in insb (bad) and mov test push rex.WB rex.WR callq xchg cld mov callq test pop rex.WRB (bad) stc mov mov mov hlt loope mov mov orl add in movabs pmulhw movabs (bad) rex.WRXB (bad) insb lret flds callq rex leaveq movabs movsb sbb xor add leaveq (bad) (bad) or xor xchg push sub mov (bad) mov int in gs or rex.WR (bad) (bad) loopne xchg in jno or stos (bad) pop mov adc mov fwait vaddsd (bad) test xlat (bad) pop mov loope int rex.WX rex.WRX cs (bad) xor sub jno retq insl out rex.WRX cld fwait mov test adc (bad) cli xor xlat movabs movsb xor (bad) adc imul (bad) cmpsb (bad) (bad) lret hlt repnz test jne (bad) (bad) or sub nop rorl cwtl cwtl pushfq rex.RB sub rex.WXB enterq adc fucom lock test loopne and mov jge push sub sub jo mov or out (bad) (bad) (bad) pop popfq pop jnp push cmp sub rex.WB insl movabs (bad) sbb test (bad) ja out (bad) clc sbb rex.RX lret sbb or pop jne sbb adc (bad) cmp mov fmull retq lea (bad) or or sub in rolb (bad) cwtl fimull mov test leaveq sahf or test lahf mov fldenv cli data16 or or rex.RX stc rcrl js std addb mov mov loop rex.WRXB pop pop adc inc push movabs xchg cmpsb xor or rex.WX in int3 test hlt lods imul sbb and sbb imul adc popfq loope in js (bad) rex.WRX and (bad) sub or or rex es (bad) (bad) sub (bad) lock or out xchg (bad) mov data16 pushfq (bad) (bad) test mov and push js mov sbb repz (bad) sub outsb rclq fisttpl jge cltd je mov xlat xchg sub hlt test sahf sbbl popfq rex.WX (bad) enterq (bad) fadds cmpsb cmp xchg gs addl cs or neg cmc cmp (bad) fs repz and rex.R callq mov mov int fsub push rex.X mov cmpb callq (bad) test rclb add (bad) cmp sub sbb push fdivrl rex.WRX movsb (bad) sbb xor sub test movslq or jno movb xchg push nop lret (bad) imul or movabs in not sub (bad) cs add xchg jae (bad) mov jmpq mov out std lods rex.WRXB rex.WRB adc fldenv cs sub mov popq int3 movsb add enterq jo gs sub or mov cmc push enterq xchg or movsb pop sbb in in loop rcrb push (bad) sub pop rex.RX sbb cld xlat jmpq lret test cmp (bad) test popfq or lods and (bad) fdiv or mov movsl add cltd test out xchg idiv (bad) imul rex.WRXB movabs rex.RXB fs rex.WRB rex.WXB cs mov jno or adc fidivr pop clc gs or rex.RXB addr32 movsl or cmp sbb enterq jl and cmp hlt (bad) leaveq rex.WR (bad) xor cmp in in push lret sbb pushq outsl add fisubr rex.B mov mov pop rex.WRB jrcxz (bad) out imull lea imul jge (bad) pushfq add xor (bad) rolb retq iret mov ficoml (bad) jp and push xchg xchg (bad) mov push div callq (bad) (bad) in sub in sub sbb jno enterq jl roll lret sub add lahf je subb sbb sub loop mov enterq test mov jl fwait or mov cs pop (bad) cmp (bad) rex.WRXB add es lahf cmpsb mov mov adc mov test (bad) repnz fwait (bad) (bad) jae imul rex.WRB adc (bad) test push cwtl mov jb imul cltd imul cs jo outsl mov (bad) cs sub adc stc jmpq (bad) incl jb xor popfq pushq test or insl fistpl (bad) ss jno callq jo mov sahf pop loope fadd pop ror cmc (bad) pop test movsl icebp sbb (bad) out or retq stos or xchg rex scas jg mov vrcpps callq sub mov and stc (bad) mov enterq enterq cs in jno mov movabs lcall insb lret mov test fisttp rex.RB fwait (bad) mov xor jge (bad) cmp mov xchg and pop xor lea and jrcxz (bad) fs cwtl mov cltd rex.WX not jno (bad) add callq add mov (bad) (bad) cmp mov pushq movabs xchg (bad) sub mov callq pop and jno add lahf xor callq imul rex.WRB (bad) adc in jl rex.WRX rex.XB enterq add scas xlat mov enterq xchg leaveq repz shrl sub fs pop ja xor sbb mov sub int3 addr32 (bad) jnp add rex.WRXB rex.WR mov mov (bad) test cs push je mov or lock rex.WR (bad) jbe jge rex.WRXB sbb jrcxz mov jp or hlt loope in out mov (bad) and xlat cmp mov xor sub scas lret cwtl in cld sbb mov insb rex.WRXB cmpsl rex.WR (bad) (bad) test adc mov test test rex.RX mov shll scas retq rex.WXB repnz cltd add adc mov scas (bad) int3 pop lret xor (bad) jno (bad) xor in rex.WR mov enterw adc shll out cmp adc push mov cs enterq pushfq mov cltd leaveq bnd sub leaveq nop gs fmul adc sar jp mov cwtl mov test lea mov icebp movsl xor es subl jg rex.WXB or retq addr32 add cmc cmp test mov fcompl cli mov cmp and (bad) sbb push pop or rex.WXB mov out or (bad) sub pop iret (bad) (bad) rex.WX rex.RX repnz nop or imull (bad) shlb xorl scas std loopne or jmp sub sbb push callq (bad) push ss (bad) gs or mov loope rex.W add mov or add dec add cmp add mov lret sub adc xchg subl (bad) sub (bad) movsb rex.X clc cwtl pushfq leaveq (bad) xlat std adc mov orl jmpq mov movsl rex.WRXB (bad) pop rex.RX retq retq out rex.XB test movabs outsl mov fild lret cmc rex.WR es movabs in xor or jbe clc or jnp (bad) adc xchg push lods (bad) cwtl cmc xchg pop pop (bad) imulb enterq (bad) jne ss lea mov jl iret (bad) movsl sbb fsubp repz insl hlt jbe enterq sub adc stos jge rex.W sub rcll mov jb pushq mov cmc movabs cs rex cmp ja icebp fs or lea (bad) rex.WB repnz in pop in sub mov fldl mov test mov adc mov xchg int3 push out push sub (bad) popfq lret pop (bad) negq cwtl stos movslq push ffree (bad) (bad) rex.R mov push xor es (bad) vmwrite test add test outsl mov mov (bad) xor mov sbb (bad) movsb repnz test sbb jne fs (bad) sub addr32 rex.X rex.RXB (bad) (bad) xor in test mov xchg out rex and imul (bad) mov sub fcomip or jo and pushq jl clc mov xchg adc loopne or xor sbb push movabs bswap xor clc add in cmpsl repnz rex.R pushq lea rex.R out or mov sbb test add (bad) (bad) jne adc shl fwait retq (bad) jne xor andb fdivl cmpsb (bad) roll rex.W bswap rex.X mov repz sti iret jl (bad) shr sahf xlat rex.X and leaveq sub andl loop jb cmp sbb test jne loop in icebp (bad) push adc test xor mov jb sub mov mov xchg sti imul (bad) rex.WRB (bad) (bad) (bad) cmc push subl out movabs shrb mov out imul rex.WRB (bad) cmc sbb mov icebp rex.R (bad) jge pop rex.XB sub pushfq (bad) (bad) cmc ja jbe or fs (bad) test icebp jmpq sub imul mov test xor clc jae adc pop (bad) rex.RB movabs hlt jbe (bad) cwtl cli roll imul enterq sub cmp in sub xchg mov shlb and rex.RX cs mov fst pop stos loope retq (bad) loopne ss insb ficomp mov nop pushq pop shrb mov jnp cs cmp (bad) sahf sarb sbb or callq pop (bad) mov leaveq and mov int3 int3 stc (bad) fcoms cltd gs cltd pushq rex.WRX nop movabs mov lea insl rex.WR or insb mov retq pop in mov or rex.WR add (bad) hlt (bad) sti add pop xchg jno jp rex.WB rex.WR adc lock sbb rex.RX mov imul rex.WRXB out add (bad) sub (bad) movabs fcmovnb rex.RXB rclb lock (bad) or sub rex.WRXB rex.WXB sbb insb jno outsb movabs xchg cwtl mov or loopne add pop (bad) push popfq scas jrcxz sub movslq mov lods js int pop mov xorl imul imul add (bad) out or iret sub sub icebp sub sbb sub clc and xor int cmc movabs pushq icebp mov out out int cmp sbb clc jne rex.WRX push (bad) jrcxz jne or out lods push icebp rex.RX or fisubrl push std movabs movl rex.WXB icebp rex.WB mov rex.RX and (bad) xor fidiv callq rex.WRX adc test mov stc (bad) rex.WB sbb rex.RXB mov xchg out (bad) cs fcomi sbb jnp xor loope stc sub or pop adc (bad) xor jae jo push cmp leaveq shrb cmp fiadd mov out or outsb leaveq mov rex.RB cmp roll retq js pop rex.XB mov sub cmc sub fldl ds in loop cmpsb icebp in add (bad) adc sub (bad) xor cmp push pop mov push sbb repnz mov outsl icebp xor js vdivss (bad) pushfq jge (bad) pop (bad) push enterq mov retq jrcxz and rex.WB xor lret leaveq fimul (bad) js sbb fisttpl and sahf rex.RB rex.X (bad) cmpsl imul out rex.X pop add rex.WR xchg mov rex.WRX outsl jae retq out (bad) rex.W sub sub mov mov gs (bad) xlat lods add lret rex.WRB (bad) repz ficom cli rol imulb mov xchg pop pushfq mov or movabs (bad) mov and rex.WRX in or sbbl callq imul (bad) movabs movsl retq xor jg fidivrl sub movsb scas rex (bad) in neg (bad) xchg rex.WRXB push xor shlb scas outsl xorl and icebp rex.W sti decb rex.XB gs (bad) pop out and jo js (bad) callq pushq (bad) lret mov jns mov movabs clc push jrcxz hlt xchg xchg cmp jb stc sub out iret sbb cmpsl pushq adc rex.XB rex.R rex.WRB rex.RXB rex.WX add mov sti cltd test xor sbb cs xor rex.RB rex.RX jle in movsl loope mov xor out ss mov mov mov mov fbstp ja (bad) callq xchg xor fnsave (bad) or sub insb push stos movslq icebp mov mov jmp adc (bad) callq add and stc mov push mov rex.XB lock lock cltd adc and std adc movb xchg loopne pop callq mov outsl hlt cli lret in outsl test stos and jae mov jrcxz mov cmp (bad) sub adcl rex.XB push clc pushfq enterq push mov xchg fs jle rex.WRB rex.RXB and repz sub mov jns sub pop mov int3 mov and cmp pop cmp rex.R rex.RB adc js shll imul jbe sbb movabs sbb mov pushq leaveq retq lea leaveq add repnz loop cmc sub imul sahf (bad) decl int jns push lret jmp mov add xor push mov sbb jmpq and or (bad) push icebp add (bad) mov out adc sub addr32 nop out add xor cmc (bad) mov fild loop xor (bad) lahf jnp movsb sub jg sub mov (bad) cs sbb xchg mov mov jp leaveq sbbb jl lods rolb sub rex.W xchg mov int3 add icebp mov movabs add int3 jbe ds mov or jbe ror xor and mov test pop movb sbb cmp cmc loope (bad) cmp and mov mov movslq repz outsb rex.WRB lea cltd mov adc cmp leaveq sbb icebp jge (bad) (bad) ds add sub repnz cmp rex rex.W add test retq enterq test (bad) or in add mov jrcxz (bad) (bad) shrl jmpq repnz rex.RXB mov (bad) rex.WRX iret mov in mov jo jl sbbb lahf sub sub pushq xchg fcmovbe mov or (bad) and sub rex.WRX add cltd rex.WRX and ja hlt lock rclb mov sub rex.W cmp (bad) in hlt out in cmc (bad) iret sbb movabs jo nop jns shrl outsl repz movabs popfq in (bad) sbb pop jmpq xor pop jge mov xor (bad) pop in pushq cmp in popfq pop mov imul jrcxz sbb (bad) movabs int rolb (bad) xor add std lret cmpb adc cmp in (bad) or mov jno hlt jne loope test jns icebp add and xor (bad) sbb sub or (bad) sbbb rex.WRX (bad) add insl lret leaveq lock add add sub sub mov sub cmp (bad) xor cld mov mov xor fcmovnbe test cltd imul jno rex.RX xor or pop in (bad) fstpl loopne cmp or ja sub push icebp (bad) int3 sub rex.X (bad) in push rex.R sbb adcl outsl mov adcl rex.WXB int xchg clc lret (bad) mov lahf iret (bad) sbb jbe xchg stc test and jmpq fwait and xchg movabs sub leaveq ffreep jne (bad) mov movabs (bad) mov add fldt (bad) (bad) js and pop rex.WXB rex.W xchg (bad) rex.WR and (bad) (bad) jp mov (bad) cmpsl movslq or rex.WRB (bad) (bad) (bad) cld (bad) mov (bad) hlt lods (bad) mov test and xchg xlat retq push pop sub mov sahf loope add (bad) jp (bad) lods lea cmpl imulb fs xlat test (bad) (bad) adc (bad) mov mov jp cmp cmc pop movsl xchg mov adc xchg mov (bad) (bad) clc test add xor rex.RX (bad) roll rex.XB jb,pn xor fidivl (bad) lret sbb mov (bad) idivb gs ffreep (bad) popfq retq pop (bad) (bad) movabs pop icebp (bad) mov sub pop or pushfq rex.R (bad) (bad) pushq repnz pop and and rex.WR rex.WR cs int3 nopl stos add mov mov callq jno push retq sbb push (bad) sbb jns sub add pushfq mov add adc (bad) stc rex.WRX adc (bad) rex.WXB movabs orl scas jl sub stos lret xlat sub (bad) repz lods (bad) push test out cwtl cwtl sbb test pushfq mov and callq fsubrp cs insl mov retq in sti gs repnz pop and cmc sub mov scas clc insl pushq mov frstor in (bad) cltd xchg push push lods je movabs cmp stc js mov sbb pop sub adc pop outsl test (bad) cld sub jg mov (bad) sub jl popfq (bad) rclb jg and rex.WXB and imulb adc cwtl (bad) retq lahf cmp (bad) rex.W rol xchg retq pop adc mov retq or mov popfq fnstcw xchg push pop lret or push cmp xor add and sbbb outsb fidivrl out mul (bad) icebp int (bad) fcompl jrcxz jp int mov (bad) (bad) and cmpsl sbb add loop or push mov jae retq mov rex.WRX and rex.RX retq (bad) rex.XB rex.X in in add addr32 pop (bad) rex.WRX cs (bad) pop jne stos cmp push (bad) orb or data16 jb repz out push lea xor push repz sub pop jle fisttpll sbb (bad) lock cmc cmp jl repz add rex.WB rex.WXB (bad) jrcxz push loope (bad) rex.WXB rex.WX mov mov sub add push rex.WR in sub push sub out jmpq lret (bad) out setb or shrl retq je iret rex.RB cli in negl leaveq cmpsb push cli jae repnz (bad) lods mov int pop xchg fiaddl int hlt pushq mov in stos pushq and jmpq imul mov jnp incb push xorl rex.RB xchg shrb xchg scas sbb lock add rex.W sbb adc mov movabs jnp jno divl pushfq fistpl mov movabs mov add and xchg retq rex.WR fwait enterq sub (bad) (bad) mov movabs add (bad) cs xor jrcxz rex.RB leaveq stc mov sbb mov (bad) (bad) fstpl adc mov sub jnp xor and jmp jl rex.WRX add movl sub ja add jrcxz rex.WRX (bad) in enterq jp sahf (bad) sahf cmpsb fdiv retq cmp (bad) jl or cmp rex.WRB rex.WB hlt sahf movabs add jo or callq mov rex.WRXB cmp callq clc and fsub jae add cmp retq jno sahf cmpsl out out (bad) xchg (bad) lock enterq loope loope retq add add test clc loopne gs sahf insb (bad) adc (bad) insl push xchg mov cmc xor fucom imul shr sbb add in push mov xlat xchg movslq int3 cmp mov sbb xchg sahf (bad) add mov adc (bad) cmp ja cmp (bad) popfq popq jo in pop in (bad) retq xchg add movsb (bad) outsl (bad) or (bad) insb stc retq mov lret push clc repnz lret test leaveq lret fadds xor (bad) (bad) leaveq (bad) mov adc sbb addr32 cmp icebp or ja rex.WR rex.RB jge mov test xchg mov pushq stos pop xor movsb jmp sub imul or iret shll jle mov mov cmpsb xchg adc push mov (bad) (bad) test push jrcxz leaveq cmp rex.R mov sub rex.B rex.R sbb sub test leaveq addr32 (bad) movslq mov sbb xchg pop test loop int test lret clts rex.WRX es cld stc rex.R addr32 es jae mov jb jle jnp pop jnp cmc in mov (bad) pop ficomp repnz add mov sahf push mull pop rcll movabs pop mov mov xchg lods sub sub sbb or (bad) pop std cs cld movslq (bad) rex.WXB adcb xor adc cli jno rex.WXB mov sub and addl (bad) xchg addr32 push shlb test lahf mov jrcxz frstor push (bad) test mov cltd in xchg std scas (bad) jne sub mov cltd mov movb jne (bad) enterq (bad) fs test sub imul test mov pop mov repnz rex.WRXB cmc or jle jbe xor decb and cmc sub (bad) fldenv loope mov pushq popfq movabs adc cmp add rex.WRB xor movsb rex.R je mov mov callq hlt fs popfq test (bad) jp and add icebp pop notb add out add lods add (bad) mov gs retq (bad) mov or ror hlt xchg test adc rcll sbbl pop icebp retq mov jne leaveq rex.WB (bad) mov fdivrs leaveq sub test jle icebp shrl mov adc imul xlat ds fisttp leaveq out rex.B sbb addr32 mov xor push rex.WRB sarl jnp mov xor mov std cmp enterq js xchg loope jl add xor (bad) sbb sbb pushq rex.W shr add xor retq lret xchg repz (bad) mov fisubrl xchg (bad) mov leaveq pop rex.WRXB fdivrs (bad) add retq movabs (bad) leaveq (bad) rex.WRXB rex.WRB out je or pushfq gs rol sub fldl mov jae and rex.WB jmp push sbb or (bad) jl fisttp out rex.WRXB add push sbb popfq mov adc test cmpsb sarl and rol mov jl add xchg jo push out and imul (bad) jrcxz push add add shll jrcxz pop (bad) mov clc rex.R pop in cmpsl out pop pop sub rcrl cmc andl push in lods push out (bad) (bad) hlt mov rex.R push (bad) (bad) jg sbb clc cmp rcll cmpsl xlat rex.WRB jge loope add rcl sub (bad) roll pop outsl rorl fisttp sub (bad) movabs out imul lahf pop lcall add pop (bad) mov (bad) jo adc and and push iret notb xorl es jle rex.RX fisub jmpq or sbbl mov faddp fldenv pop pushq iret pop bnd imul (bad) rex.WRB movsb (bad) shrl mov sub or (bad) adc xor rcrl (bad) int push rol lock fbstp es enterq int3 incl icebp or xor insl fwait push imul (bad) movabs movaps cmp pushfq (bad) scas (bad) (bad) rclw pop fwait sar lock pop mov js cmp pop fs in sub incb cmp xor lea rcrl leaveq and adc mov pop cltd retq clc pushq mov test cli int3 fwait loopne sti mov hlt test and jg mov xchg sbb mov or loopne (bad) rcrl gs sbb or rcll xchg pop int3 lret mov xchg iret repnz hlt repz sar cli stc cld sti (bad) std roll loop in out shr (bad) jmpq (bad) lock xchg xchg xchg xchg xchg xchg rcrl sahf popfq (bad) (bad) addl mov mov mov mov (bad) cld sarl sarl movsl test cmpsl stos test mov scas push push push push push movabs pop (bad) pop rex.X pop scas push lods mov loope sub push sub stc mov lea neg mov (bad) imul xchg xchg test lods lods cmpsb ds insl push stc test rex xchg push (bad) push rcrb push (bad) lods jg or loopne rex.B cmpsl movabs movslq test push lods shr lret pop mov (bad) rex.XB in mov (bad) (bad) push sbb cwtl mov sub (bad) rex.WR cli imul out xor jge cmc lock rex.WX es jmpq lea data16 or insl sub and pop push cmpb and test out loope sti movsb rex.RX pop or mov xchg jmpq and movabs insl xor fmuls (bad) xor sbb (bad) retq push cmpsl sbb and jne leaveq rep cmc shr jmpq in (bad) mov and movsb js pop gs mov add jns out jns xchg jae xchg xchg pushq lret int3 (bad) test (bad) sbb xchg push rex.WR xchg fcomi fisttpll jl movslq sbb imul test xor xchg cltd rex.RB rex.XB leaveq outsb rex.WX imul (bad) stos pop sub sti xor mov pop retq notb decl test jmpq movabs lret repz movabs (bad) shll in rex.WRX rex.WXB xchg xchg cltd cmp iret rex.RXB sti pushq (bad) (bad) mov rex.RX movsb jl cmc scas xchg and rcrb (bad) xor (bad) adc ja shlb (bad) sub sub out rex.R xor movsl lret cmc fs (bad) (bad) mov imul xor sub (bad) fcomps lock test out cmpsl sub in (bad) ja adc (bad) (bad) mov xchg nop push add xchg cmpsl movabs stc mov jmpq push retq xchg popfq push mov scas jle xchg mov movslq lahf xchg xchg in (bad) xchg mov fwait loope add hlt (bad) mov pop int3 ss repz sti xchg pop stos pop mov pop vmaxps (bad) icebp roll ss cltd loope push lret mov retq or test pop xorl (bad) jb push in and je (bad) je mov jbe (bad) (bad) fnstsw mov leaveq icebp xlat addl jrcxz pushq xchg retq (bad) (bad) movabs movslq jne rex.W rcll rex.WB movabs retq fdiv cmc pushfq iret sar mov (bad) and xchg in retq retq xlat xor repz mov roll rex.RX rex.RB rolq rex.WR rex.WXB rex.WRX rex.WRB rorl je jbe js ja jns jnp jge sarl movslq pushq insb imul shrl adc (bad) adc sbb (bad) sbb add (bad) add or (bad) or xor ss cmp ds and es sub cs rcl rcl (bad) fadd xlat fcmovu (bad) (bad) scas rex.W roll out test imul jo rex.X loope jmp sub mov push movabs cs pop mov stc jno xchg push shlb or test repz push mov push icebp and repnz ja cld lret stos (bad) push sub outsb mov icebp scas test test lods lods xchg movsb shll xchg popfq xchg mov (bad) scas mov (bad) rex.XB leaveq movabs pop movslq xchg and movsl xor lret cmp mov or push iret sub movslq hlt in mov iret enterq mov mov xchg leaveq (bad) rex.XB adcl mov sbb or mov (bad) and stc in push (bad) enterq rcll test rex.W cltd lea add mov adc sbb repz divb stos (bad) cmpl jno mov xchg xchg out test xchg pop lods cmp pop mov (bad) and loope cmp lods rex.WRB movabs out loope (bad) pushq callq pop push jb in mov (bad) shr jno mov test nop movsl (bad) movabs mov and jrcxz movabs sbb subb callq add movabs movsb cli mov jae data16 xor outsb jmp jo fs jmpq jrcxz movabs pushw pop fimull iret mov (bad) callq scas cs xchg push jp iret jno loope callq test movslq mov stos in rex.WRXB pushfq in mov pop pause rorl std out test (bad) jmpq mov mov rex.WXB mov movabs int3 xor mov mov mov mov xchg nopl sbb out sbb and imul mov retq jmp rex.W loope movsb lahf clc (bad) sahf insb iret xchg test jl cmp jmpq cltd cmp rcr stc cmpsl outsl icebp loope movabs lahf or jrcxz lock jmp pop or hlt xchg movsl int3 pop test in shr hlt (bad) stos leaveq hlt mov test mov rex.WB (bad) (bad) (bad) mov cmpsl out mov (bad) in movabs loope rorl invd faddl stos cltd jmpq xchg test std xchg xchg ss (bad) decl in lret jnp pop ss or jno scas in adc hlt (bad) imul sahf fwait xchg orl imul pop or movabs xchg hlt loope leaveq and cwtl xchg or mov mov leaveq in adc xchg leaveq movsl xchg push in pushfq jmpq stc out je or and rex.RB fstpl (bad) out je or and cmp xor or and sbb adc or gs (bad) pushfq jge jno fdivrp pop rex.WRXB or and stc or imul andl adc (bad) je or adc mov pushfq xchg std icebp rex.WRXB (bad) hlt or (bad) and jmpq xchg rex.WRB pop je xor imul int retq xor std (bad) (bad) data16 cltd mov (bad) (bad) icebp cmp push (bad) retq enterq lret mov jb cltd (bad) mov xchg sbb rorl pushq test push sbb loopne (bad) pop popfq (bad) (bad) repnz (bad) stc movabs (bad) icebp ss cmc cmpsl adc callq jbe cld shr or pop (bad) rex.WB push loope xchg sub mov xor xor pop (bad) jb rex.WR sbb leaveq xor jp (bad) jg pushq lock sbb rex.WRX in xchg int int (bad) lods sbb movabs fimull xchg fnstenv addr32 cmp mov mov mov stos gs idiv out push test loop mov lods pop imul jle sbbl xchg addl (bad) mov add addr32 hlt adc rcrl lret sarl std popfq xchg mov (bad) (bad) std rolb lret rep mov rex.X rex.R imul pop (bad) movsl hlt rex.B push cmp fnstcw gs adc outsb enterq test insb pop mov test rex.RX jne movsb cmc movabs (bad) jo (bad) or fimull push push sar fwait rex.WRX cmp jle push rex.RXB shr pushfq adc mov rex.WB int3 add je mov std sbb cmp (bad) mov xchg xchg insl mov jnp push and xchg rcrl jrcxz cwtl xorl (bad) pushfq callq in (bad) fisttpl rex.RX xchg imull mov xor test fimull mov push mov xor cld mov mov cltd add rex.RB pushq adc leaveq leaveq add mov xchg movsb (bad) push scas test and and (bad) xchg sti mov lahf fcompl and out mov (bad) push pop (bad) ja loopne cs xchg push xchg adc mov and cmpsl adc cld mov cmp push movabs repnz (bad) enterq jns rex.WRX sub clc cmpsl in sarb push xchg loope shlb mov xchg test loope movabs mov imul mov shr icebp mov shl cmc or add jo rex.B sub rcrl xchg or jns mov popfq (bad) movabs movabs rex.WX xchg (bad) jne outsl xchg shrl (bad) enterq addr32 shrl xchg mov in cwtl xor callq rcrl int3 int std jmp (bad) mov pop shl jle popfq rex.RX rcrl jno (bad) push outsl movsl (bad) repnz (bad) fadd leaveq loope (bad) push (bad) xor sub pop sub sbb (bad) mov mov movabs callq xchg sbbl test xchg (bad) mov mov and push test movabs rex.WB insb sub push mov pop or and lock xchg std xchg sti mov loope rorl rorl leaveq or xchg cmp rex.WXB sub leaveq push nop stc add stc pop insl xchg xchg hlt push sbb xchg leaveq (bad) cltd (bad) hlt (bad) icebp (bad) pop rex.WXB xor rcll out (bad) fild lock (bad) jae and jo fs popfq add (bad) xchg xlat outsl fxch fstps xor rex.RX fisttpll repnz xorl scas mov mov sub retq mov lret idivl or clc pushq add (bad) lea mov fstps mov out adc out and xorl mov rex lods shll (bad) xchg repz lret movabs fs and rdtsc cmc loope add movsl push xchg fdivl movabs (bad) sti jno or xchg fstpt xchg lret movsb and and xchg xchg in xchg adcl cmp int rcrl imul mov (bad) imul movslq or jnp xor std imul xchg (bad) (bad) ss pop mov jp push lods sti lods mul mov in cmp and int3 adc mov cmpsl xchg lods and mov loope icebp sub stc cltd jne insb retq (bad) (bad) jp je sarl imul add rex.WB rex.WX popfq mov fwait adc loope leaveq sub rex.B fstps cmp add gs rex.WXB loope popfq pop xor adc sub xor imul cld sub mov js cmc sub loopne add push orl hlt jmpq lods (bad) test movabs subl rex.B leaveq (bad) in cs mov push or mov (bad) rex.B loope sbb rex.WR negb and popfq pop mov pop frstor pop scas leaveq xchg leaveq stc sub xchg pushq cmp (bad) hlt xchg jrcxz push test mov xchg add icebp xor rcll add mov xor sub and lret (bad) mov (bad) leaveq xor push sub xchg and fimul xchg repz clc (bad) mulb hlt xor repnz push int (bad) mov (bad) add push xor xor retq cld and xor add xchg repnz scas leaveq loop push rex.B movsl (bad) leaveq movabs (bad) xor xchg int cwtl leaveq add cld in rex.B rep adc loop adc (bad) push in (bad) add enterq leaveq xchg lret xchg mov loop add xchg add push int lret add push lret (bad) mov cltd cltd mov add sbb or mov xorl shlb hlt outsl add loope test loope jno testl (bad) out (bad) icebp cld enterq icebp push hlt imulb xchg repnz xchg movabs cmp lock mov push cmc retq (bad) movsl (bad) rex.WXB rex.RB roll and (bad) xor add mov loope mov pushfq jnp hlt leaveq adc movsl xor jns push rex.WXB lock in mov cltd int3 (bad) push sub lret fistp xor gs and mov mov int3 mov and mov clc and divb and mov push movabs movabs xchg imul test adc jmp fist in (bad) test cmp std (bad) insl rcr rex.WB retq movslq rex.WRB rex.WRX rex.X rex.WR rex.WXB jne jno mov (bad) cld fnsave pushq push hlt std movabs push stc (bad) mull (bad) repz (bad) movsl icebp imulb push add loope iret cmpsl add stc loope cli loope idivl and cmc scas (bad) loope in sbb jno scas movsl cmp mov movabs (bad) je jrcxz or or rex.WXB cmp repz (bad) mov leaveq sbb mov loope insb jno (bad) mov (bad) add sar and repz add out or lret repz movabs jmpq scas adc iret in or sbb (bad) loope sub rex.WRX sub jne iret icebp (bad) loop stc cld notb test cld add (bad) mov xchg adc and xor add vpextrw vshufpd (bad) retq hlt cli lret lods in icebp (bad) adc not xchg movslq xor in (bad) imul (bad) mull or and xor int (bad) nop movabs dec push mov int3 leaveq mov rcll repnz (bad) (bad) int3 pmaddwd xchg adc xchg push (bad) (bad) rex out push loope (bad) jb xor jnp hlt jle in mov outsb insl gs lea jrcxz test int jae int3 test lea (bad) cmp int3 rcll leaveq je and in mov pop insl loope movabs sbb mov push in rex.WX lahf imul mov mov jl lods div loope imul xchg jrcxz (bad) hlt icebp movabs int xchg rex in int3 lea jrcxz or mov rex.WB test insl cld pop int3 test xchg fistl js or movabs (bad) in (bad) adc (bad) rcl int xchg test leaveq retq mov hlt adc cltd test or outsl jge rex.WRXB callq rex.WRXB lret movabs insl jmpq push mov loope adc lock std adc pushq in mov xchg movsl (bad) jg fcomps push mov mov int (bad) leaveq push gs movabs rex.WRB mov push jne (bad) xchg std shrl movsl je jrcxz (bad) leaveq movabs xchg or or sub repnz mov mov leaveq int test leaveq or (bad) cmc push int pmulhw mov (bad) cmp movabs fcmovnbe movslq cmc xor sbb adc enterq adc or xchg scas in popq rex.RB mov fld cmpsb sbb (bad) push mov movsl movabs jns addr32 test (bad) pushq sbb adcl int3 andl cmc jns xchg mov fdivrl stc rex.WB mov rex.WX adc and (bad) push mov fstl mov mov stc jrcxz rex.WB nop cld cmp test repnz mov cmp rex adc mov jno mov lea adc icebp sar movsl mov nop leaveq jmpq jnp sbb and mov movsb int3 cwtl in je std test (bad) nop rex.WRB adc retq xchg popfq icebp movabs movabs std loope sub clc mov add rolb gs mulb xor xor jbe fs or in jae pop stc loope lret cmp enterq fs and loope adc and fmuls retq rex.WXB movsl jle rex.W (bad) (bad) in int3 nop push stc xor xchg push int3 mov rolb lods cmc xchg std repz adcl mov addl rex.WRB (bad) jne fs rex.B push pop pushq mov sbb xchg (bad) cld push out (bad) sub jmpq outsl icebp push mov test rcrb push xchg jge rex.X bnd pop shl and movabs (bad) (bad) fsubl mov in repz rex.WB rex.WX rex.WR rex.RB rex.WRXB adc fwait and icebp xchg repnz mov fadds (bad) int in int3 shll xorl pop rex.WR repz enterq jae (bad) rorl (bad) pop (bad) incb jmpq cmp cmc (bad) stc cmp leaveq movsl (bad) (bad) xchg cli enterq sub adc (bad) out lods jae mov (bad) sti rex.WX sub xchg (bad) movabs enterq xchg int stos (bad) insl sar and (bad) repz movabs xchg mov add out icebp rex.WB (bad) jne ficoml pop mov (bad) in int3 in loope in rex.WXB cmc pop jae rex.WRXB gs jae mov jge movabs fnsave (bad) int int3 mov lods clc xor cltd enterq rolb (bad) movabs bt mov loopne movabs cmc (bad) loop adc or (bad) sbbl or lret and add callq in lret rex.RB ror int3 lea jg jl sub ror push pop mov pop callq push mov cmc adc cmpl add jg rex.RB (bad) (bad) mov lret pop xchg rex.RB xor jmpq (bad) rex.WRB or rex.B int3 mov vunpckhps xchg push jmp push (bad) loope mov leaveq cmc gs mov cmc push sbb movabs mov adc movsb mov leaveq mov mov popfq insl jno mov xchg repz (bad) mov mov popfq mov ss test mov sbb adc movsb popfq int3 (bad) mov rex.WB xchg in sbb mov add rex.B xor push add push hlt movabs ror push mov sbb int3 movsl retq xchg or rex.WB jae (bad) or lcall mov insl jmpq (bad) mov hlt shr int test sub lock and int3 cmp rex.WRXB movabs int3 popfq mov lahf int3 cmc rex.XB ds cmc mov gs leaveq adcb mov stc jg add xchg enterq (bad) rex.WB gs callq sub int cmpsb (bad) leaveq movabs rorb roll jmpq fstp (bad) jnp int3 xor test ficoml movabs xchg int js mov movsl stc fmul jrcxz rex.XB rex.RB rex.RX rex.WRX xchg jae imul mov cltd int3 roll repz adc add mov in mov xor (bad) cwtl int3 xor mov sub add (bad) adc jmpq test fwait movabs push (bad) mov adc leaveq mov movabs jns leaveq pop or fnstcw cmc cmp jne leaveq fwait push sti cwtl sbb mov leaveq add cmc in mov cmc (bad) (bad) popfq rex.B movsl rex.B mov xchg in hlt mov test pushfq or test lret add and xor or rex.WB cmp jge icebp adc (bad) push mov int rol push imul mov testb shrl fldl icebp jg pop (bad) push ja lods out rex.WR push or (bad) push xor lods push je push mov mov or (bad) jmpq int repnz mov or and int3 mov loope shr mov (bad) pop loope adc mov pop movabs jae rex.WRXB out test negl out int lods push enterq or cld mov (bad) outsl cmp lahf cmc movslq lcall movsl movsl in cld leaveq mov or (bad) (bad) jmpq sub rex.WRX mov icebp jae mov movb mov in xor mov mov icebp je loope test leaveq cmc int (bad) repz enterq movsl (bad) int int3 add addr32 in mov stc sub insl fwait outsl ja jmpq cli xor sar rex.R int3 ffree jne mov cmc (bad) pushq rclb sub int3 add shll popfq notb repz jbe lods mov movsl jno xchg jle mov repnz loope (bad) xchg mov cltd xor cmp pop jbe hlt int3 (bad) leaveq (bad) (bad) jne mov pop rex.WR repz (bad) sub rcrb movsl clc in cmc xor jae iret mov jge js sub jge jno push jmpq clc mov je xchg cmp xchg add (bad) lock popfq subl add stc xor (bad) icebp push int3 mov or or and (bad) cmpsb xor add sbb mov add push mov push ror jne addl (bad) ror in jmpq (bad) movabs jo lock movsl jge (bad) fnstsw sub cmp push mov fldl rex.RB int3 push xchg in push jno xor stc or jo loope in movsl testl sbb ja and (bad) jne xor cld or in adc jmp ljmp mov stc test sbb push std (bad) push pop push ds mov mov rex.WR and clc int3 cmpsb (bad) test rex.WR stc bnd add jmpq ss cmc mov test (bad) jmpq jns int3 rex.WR repz leaveq xchg mov shll test and rex.B jle jge roll cli rex.RX divb leaveq mov (bad) leaveq add (bad) hlt (bad) repnz xor and pushq rex.B int3 mov or out or (bad) std rex.WB add mov (bad) add fpatan (bad) icebp cli and xor jns cmpl mov add movsl xchg mov xchg gs repz (bad) mov je out sub sbb sarl movabs std sub mov shl std cmc (bad) decl push jae sbb movabs retq movabs (bad) lret jne mov cmc pushq (bad) rex.RB lock xchg xchg lret mov rol xchg (bad) in (bad) rex.XB fst or and jae (bad) xchg callq ss stc ror cmp rolb push rorl jl (bad) fnsave rex.WB pop (bad) (bad) hlt xchg push sub and in sub jge pop int3 pop nop test lods es loop (bad) stc jno mov fldenv jg (bad) (bad) (bad) or vpsubsb adc loope leaveq stos notb (bad) jbe rex.WXB cmc pop (bad) lea jrcxz mov adc mov rex.WB rex.WRX nop leaveq fsts popq rex.WRX pop jno cltd leaveq pop (bad) stos (bad) je icebp add jmpq shrl (bad) add lea orl movabs xlat out (bad) rorl sar (bad) mov mov (bad) insl cltd mov push in mov je or mov leaveq out je or sub loop jne leaveq xor pop adc out pushq cmp out rex.WB add cmp adc jg leaveq adc and leaveq or and movabs mov scas out je or insl push sbb and rorl clc add mov lods rex.WRXB rex.WRB or and and (bad) movslq std fwait rex.WRXB or imul (bad) std rorl cli rex.WRB out je or pushfq rex.WXB jnp mov add (bad) and and rorb rex.X adc leaveq fild es popq leaveq sub sbb clc jno jbe mov (bad) enterq push add ss rorl js stos push or iretw jae adc icebp xor rex.WRXB sbb and jge or add (bad) or pushq xchg in or sarl push faddp fs jl add jno add mov jo popfq mov cli insb (bad) pop shrl mov subl cld retq rex.RX shlb movsb jmpq mov (bad) jbe and adc mov sub rex.RX (bad) movabs sahf outsb rorl mov sbb iret shr mov rorl push icebp (bad) lods mov mov lods xchg (bad) (bad) lret or adc adc and (bad) imul add fadds roll xchg int cmpsb push (bad) (bad) rex.R push jns lret imul (bad) movsl cs add sbb xchg pop rcll push sub pop mov pop sub rex.WX outsb sarl negq jp mov push pop adc repz data16 push cmp hlt sbb cltd in cmpsb pushq (bad) add mov shl lock fsts pushfq data16 roll push pushq jp and out sbb lret int3 adc cli rcll (bad) rex.RX repnz es addl lret push xchg repnz callq fisttp mov mov sub jmpq cs jnp fldcw adc sarl retq mov sarl rcrl rolb push (bad) test jle (bad) sarl mov shl frstor (bad) jno add or rex.X (bad) jo (bad) sahf rcll cli mov stos jp cmp (bad) (bad) lret (bad) sbb cmp lret hlt or push (bad) lods rex.WXB loopne mov pushfq rcrl nop mov (bad) cmp and pushq shrl stos loop notl (bad) rex.RB rex.B pop imul xchg mov xchg sbb out roll adc (bad) add std cltd sub sbb imul jb push cli iret (bad) xlat fisttpll andl stos mov (bad) cmpl (bad) adc iret rcl jbe pop xchg sarl mov adc enterq out sarl insl (bad) mov mov ss (bad) adc sub fmuls stc movabs jl mov (bad) push (bad) idiv rex rex.WB mov or in enterq movabs popfq rex.W cs lcall mov xlat js fs xchg shl pop sbb (bad) jns loop insb xor fisttpll rex.RXB jns rorl sbb (bad) pop jae es xor test repnz test test clc movabs movslq fsubr or mov out (bad) lods retq rex mov lret adc (bad) mov (bad) xor cmpsl adc (bad) leaveq (bad) in shrb rex.WXB mov lcall lock adc sti ja xor mov test rex.WR retq outsb rex.WRX xor jl mov push xor lret cld shl rcrl outsb jg sbb xor (bad) lret popfq or pop iret callq mov movsl (bad) cli lods roll mov sub loopne lods in cmp shl jl (bad) jg (bad) (bad) popfq data16 lods fbld mulb rex (bad) mov test lret jnp fwait xchg mov (bad) imulb fstpt (bad) in add (bad) fcom stos (bad) je adc sbb or shll add rex.RX rex.XB jrcxz lods insb std mov ja adc jae mov push pop sarl mov sbb cmpsb or mov add (bad) and bsr sbb rorl add rex.WR xchg shll ja iret (bad) xchg add jmpq sbb (bad) stos loope or jle jb leaveq nop xchg cld enterq iret andb ss mov scas push jge ja repz (bad) mov cltd callq mov lret lods ja icebp xor rex.RXB (bad) mov insb (bad) retq and rex.RXB rex.B outsl adc retq lahf ds and mov mov ror (bad) mov sbb sarl sub push loope push (bad) xor add imul pop (bad) int adc sbb mov pushq rex.WXB xchg insb (bad) loope out xlat add sub (bad) test movabs adc roll (bad) mov fwait jb sbb icebp (bad) rex.XB jmp rcrl push xchg mov scas (bad) mov add cs out (bad) mov (bad) out adc jp fneni(8087 add shrl adc rcr push std jp fs lret scas stos cmp add movslq xchg sub rex.XB (bad) mov cs ror or cltd rol sub or outsb jbe clc pop (bad) stos xor xchg scas nop (bad) xlat sub out push add addr32 jns add (bad) adc fwait lods mov cmp xor jns xchg and rcrl xchg hlt xchg mov out (bad) pop loop cmpl sub (bad) callq cmp (bad) mov pop shll push movslq cltd rcll jrcxz rcr lock pop add sbb xchg mov movabs (bad) jno (bad) callq out movabs add rex.WR lret push mov jmp mov push rcrb rex.WRXB (bad) jbe ja jae (bad) fdivrs xchg repnz pop cld retq mov shll push (bad) fmulp fwait sti mov (bad) jnp mov mov in sbb rex.WRXB je cmp and andl out faddl (bad) (bad) rex.RXB js or shll test clc in cmp cltd ss scas and sbb pushfq (bad) leaveq (bad) sub int3 movsb rorl or (bad) (bad) sbb xor add sarl rex.RXB and (bad) insb sbb and and rex.WRXB jmpq mov outsb nop add roll mov fisttpll lret or imul lahf (bad) (bad) xchg sar idivb rex.WX mov pop andl sbb rex.RB sub roll cmp movabs mov xchg push lret sbb incb adcl and (bad) jmpq (bad) cmp (bad) (bad) pop jne out or pop out mov mov loope cmp shrl (bad) jge test iret rcl (bad) jno mov xchg jp xchg (bad) jno xor push (bad) jo pushfq rcrl lret and and jnp fdivrp adc fsts test jne add je faddp xchg movsb rex.X fld add rex.X xchg test fisubl insl (bad) ss and mov xor roll lock int3 mov pop rex.RX sarl pop (bad) mov xor nop repnz rex.B lock (bad) adc (bad) (bad) jg or or xchg movabs lea mov sub sbb roll rex.RX rex.WR movabs enterq xchg ss scas bnd adc xchg shrb icebp data16 adc adc (bad) rex.W rol mov xchg cmp mov movabs pop icebp out retq loop xor vpcmpgtw mov andl cltd fldt test rcrl stos fwait shll push jnp jae (bad) (bad) in sub fstps and mov (bad) int3 jno andl or stc mov fisttpll shll and rorb mov (bad) scas rex.X movsb mov movabs lret push xchg sbb shll pop push cltd (bad) imul jne cli js,pt (bad) push outsb sarl xor rex.RX push cmpsb out and jg notl adc rcll adc lods cli (bad) fstps or add sub mov and retq mov lock sarb add out movslq nop movsl jae (bad) out (bad) (bad) rcll mov int3 cmp mov lea rcrl jmp sub or adc scas scas cli or lods jno retq and shrl loop rcr fiaddl sar out xchg push jmpq fildl rcr out mov mov mov clc adc pop stos or in xor negl (bad) sti rex.WX popfq cmpsl cmp shrl push mov mov stc mov rex.WR rex.WRX mov jno rex.RXB sub cwtl pop imul cltd shrl (bad) rex.WXB ss shlb iret retq adc ds rol iret sti loopne (bad) (bad) repnz movabs or mov (bad) jne and cmp rcll (bad) adc insl insb xchg sahf push xchg shrl add (bad) fmul sub push xor fimul xchg mov leaveq add (bad) add fbstp (bad) rex.RX ficomp (bad) (bad) fstps mov callq iret (bad) mov nop fs js shrl scas rex.R (bad) std (bad) jp xor xchg (bad) cmc pushq cmp adc adc ja test pop pop cmp push rex.WR test mov adc (bad) and (bad) shrb (bad) and idiv sahf imul mov (bad) (bad) sahf mov pop xchg (bad) (bad) adc mov jrcxz or fs fildl in sub int3 test out cmp mov push scas (bad) add push stos cmpsb cli stc rcll sarl and (bad) mov (bad) push xchg (bad) movabs pushq sub pop jg xchg and (bad) (bad) sar rex.RX lahf pop mov (bad) lret xor (bad) shll (bad) push rcll in movsl fldl stc iret cs rex.WRB pop rex repnz repz (bad) rcl stc test (bad) jmpq cmp (bad) callq jbe cs rex.WXB out (bad) sbb insl sub (bad) fisttp (bad) and loope scas hlt outsb sbb scas add fist (bad) out add (bad) stos mov int3 pop sbb iret movabs jno fs and test (bad) movsb add cmp rex rex.RB rex.R mov icebp xor and sub mov fs stc mov int3 cmp jg icebp xchg sbb leaveq cmp and lret xchg pop fwait andl movabs or rex.W loope adc mov and rex.WRXB push xchg jno rcll leaveq xor popfq or or jns imul retq addr32 vpsubw rex.WR repz in mov je out je or std movsl (bad) popfq mull rex.R repnz hlt repz in cwtl addr32 mov or leaveq mov pop lods addr32 test std callq jl mov mov loope rex.RX mov je in in jg js jno gs movsl pushq sbb jge stc clc in xchg pop (bad) (bad) xor sub (bad) leaveq jmp add icebp cmp imul out cmp add repz pushfq idiv mov mov pop rex.WRXB hlt shr rex.WB and sub std decl cltd out xor add in (bad) xchg out sbb in pop push and fucom or sbb test adc adc lock (bad) cmp leaveq movabs or sub mov xor fadd loop xchg add fild and jne and out xchg sbbl or pushfq loope stc rex.WRXB push rex.WRXB xchg hlt and push xor add or and insl std imul or cmp std lods rex.WRXB or pushfq in stc rex.WRXB roll rex.RB jno adc in xchg jg (bad) cmc rex.X add (bad) out push out (bad) pushq pushq (bad) push jb test jb (bad) addl leaveq (bad) out lahf hlt and mov movsb cmp (bad) popfq lods add movabs cmp icebp rex.WB and mov sbb jrcxz cmpsl hlt jbe int3 test jno or test rex.WR ss icebp mov ja cmp cld leaveq lahf xchg cltd add mov fwait adc mov movabs sbbl movsl test xchg sub mov push pop outsb add movsl xchg (bad) mov retq mov rex.WX sub push (bad) in add push movsb mov stos movslq lret mov mov icebp test pop adc std mov scas test stc (bad) rex.W test stos mov xor movsb cmpl mov (bad) movsl pop leaveq test in push mov (bad) add icebp (bad) out int3 fsubrl loop push fucomi leaveq xchg lret testb leaveq rex.R clc leaveq insl stc rex.WB and or (bad) hlt add leaveq xchg cmp movabs or (bad) int3 popfq rcll lcall jnp or xchg hlt leaveq mul jnp std stc callq lret leaveq jl test add jrcxz jno loope cmpsl outsb int3 rex.WRB test mov rex.WRB pushq rex.WB xchg callq (bad) icebp jl jmp or (bad) adc loope hlt (bad) in stc stc and or or or stos in out push cmc hlt std jmp rex.WRB add pmuludq cltd leaveq sub jae (bad) hlt movslq leaveq mov cmc mov leaveq adc fstpl imul sub jno clc rclb repz insl je loope mov rex.RB in cmp pop xchg add hlt test jge (bad) (bad) ja stc rex.WR mov cld mov or jo rex.WRB retq leaveq mov movabs enterq hlt out popfq vcvtss2sd rex.WRB rex.R sarb add jrcxz shlb (bad) movabs imul stc sbb mov cld rex movslq leaveq xchg lret pop mov (bad) xor leaveq imul cmp int3 xchg stc (bad) leaveq ror loope stc leaveq cld sti or leaveq xor leaveq ror lahf fstp mov fistl int3 sub scas es xor xchg (bad) int3 xchg test leaveq loopne std test leaveq (bad) je ss (bad) xchg or stc (bad) leaveq fcoms leaveq jmpq cld xchg hlt scas mov (bad) adc jnp pop stc jrcxz push mov leaveq mov leaveq cld dec xchg jo xlat or lea stc (bad) leaveq int int3 and xor leaveq mov or stc (bad) leaveq lods xchg int3 insl stc mov jge scas rex.X adc movsl stc (bad) leaveq or jrcxz mov fchs (bad) mov jns leaveq cld jno and leaveq cmpsl (bad) int3 xor rex.WR sbb add mov cmp int adc gs cmpl stc out mov movsl stc cld mov in mov gs xchg or gs mov xchg push hlt (bad) mov mov mov xor leaveq sahf (bad) int3 adc rex.WB leaveq mov adc xchg int3 jno (bad) leaveq movabs leaveq rex int3 rex.WRB (bad) leaveq es pop cmp imul movslq out (bad) int3 lahf rcl mov leaveq in mov leaveq (bad) int3 mov sahf rolb leaveq cld (bad) int3 cltd movslq leaveq cmpsl (bad) jmpq xchg xor sub cld and cmp leaveq in movabs and idiv movabs fst fbstp loope leaveq mov int3 (bad) stc (bad) leaveq addr32 int3 popfq stc mov nop movabs imul rex.B (bad) test and ja lods sub repz out pop int3 test jae jno pop mov xor stos gs leaveq out adc (bad) int3 test leaveq xchg and xchg mov fsubl or stc (bad) leaveq insb xchg int3 jmpq int3 stc (bad) stc outsl lods mov leaveq repz mov test js xchg fcmove sub scas push scas stc mov int mov mov cmp int3 push test leaveq outsb adc movabs (bad) leaveq xor cltd (bad) stc (bad) lods imul jns rex.R jno int3 in stc out insb int3 test outsb int3 (bad) adc out cmp (bad) hlt jge roll (bad) hlt out push mov lock gs scas movabs adc jrcxz out pop movsl (bad) and callq rex.X (bad) fistpll pop gs lret icebp leaveq xchg js xor cmpsl rex.WXB jns rex.WR push jnp sbb rex.WRB mov (bad) leaveq in jno adc int3 add leaveq cld out jae jne stc push jmpq int3 scas stc stc rclb jnp pop enterq jnp xor out sbb leaveq imul jl cmc imul or loope rex.B outsb jg mov (bad) add sbb cmp jo xchg pop (bad) leaveq in xchg leaveq rex.WB (bad) leaveq ss movabs stc sbb gs leaveq movsb addr32 test rex.RB (bad) leaveq cmpsb jl (bad) leaveq sub movabs leaveq in imul stc (bad) leaveq out int3 or xchg je jrcxz rex.RX jrcxz loope insl mov fstl or rex.RX stc jno hlt jmpq cmpsl (bad) int3 mov xor jl hlt xchg (bad) je andl and sbb rex.WXB adc (bad) in leaveq xor rex.B pop adc hlt jmp jle lahf hlt jl scas mov rex.WRXB or lahf xlat mov nop or xchg sbb and cmp leaveq cld and movslq leaveq in out xor cld xchg xchg hlt and stc mov (bad) hlt (bad) (bad) xchg or or or sbb add xchg cmp jo movsl pop mov leaveq out lahf (bad) sbb mov int3 xchg stc (bad) leaveq jb in stc (bad) lods jns leaveq add leaveq jmp cmpsl jbe mov rex.WR xor cld xor mov lods cmpsb movabs movabs or sub cld rex.XB stc movslq leaveq cmpsl jle (bad) leaveq data16 (bad) imul cmp int3 test cmp imul rex.WRB rex.WR jnp,pn pop stc and mov rcr (bad) rex.XB cmc (bad) stc fisubr cwtl xor leaveq leaveq cld scas int3 xor add rorb adc fmul jb,pn mov leaveq (bad) int3 cmp leaveq xchg or or int3 sbb pop (bad) cmp movabs xchg (bad) xor test loope mov outsl jle xchg mov jp lods jne (bad) (bad) int3 xchg (bad) stc fildll test ror leaveq cld (bad) int3 movabs test jge xor adc test add jne xor cmp or pop rex.XB leaveq mov cwtl leaveq in stc (bad) jnp or pop rex.XB leaveq mov xlat (bad) pop (bad) jne leaveq repz mov push int3 scas xor rex sub pushfq (bad) outsb (bad) test leaveq adcl leaveq test insb cmp xchg hlt stos fsubl enterq xor leaveq callq icebp leaveq xchg sahf int3 sub cld sub fmuls cmc psubsw ficoml leaveq insl cld adc icebp clc (bad) push (bad) loope hlt cmp jl stc and rex.WRXB cmp sub cld cs push movslq leaveq xchg cmpsb lret test mov rex.B rex.WB leaveq rex.XB mov cld fxch xchg movslq leaveq (bad) outsb mov ror (bad) int3 cmc pushq leaveq loope retq stc sub leaveq test xchg mov adc loop out sub pop ror cmp adc push xor iret loop out lret and (bad) jno (bad) hlt rex.R jns add sahf notb cld fdivs test clc cltd (bad) (bad) jg rex.B rex.WRX leaveq sub (bad) leaveq jle int3 cmp (bad) jrcxz cld vpcmpeqd pop hlt mov in add xchg mov int xor sub leaveq stos scas int3 in or xchg retq retq rex.R xor sub add cmp pop loopne mov leaveq (bad) (bad) decl pop or int3 insl cld test and xor icebp mov rex.WRB rex.WRX or adc in (bad) mov pop mov test icebp pop int3 movsl adc int xor fwait jne jb je jle cld rex.WB add int rex.WR int sub rex.R hlt scas test push hlt (bad) (bad) gs int xchg jmpq xchg hlt sbb stc mov sti bswap mov jns hlt adc insl rex.RB hlt mov leaveq lods mov leaveq lahf rex.RX xchg rex.RB enterq leaveq (bad) hlt rex.WXB in or fmull int xchg rex.B xchg insl adc imul adcl mov or out xchg or xor lods pushfq (bad) shll ffree leaveq push popfq vcomisd push rex.WB lahf loop out jne or subl imul jl xor test insl add (bad) jae rex.B repnz add icebp faddl cmc hlt fwait mov rex.WRB hlt and test loopne mov cmp ja icebp addr32 lods rex.R loope int leaveq cmpsl sub popfq test and jl fsqrt and int xchg mov cltd jl xchg hlt sbb int3 rcrl test cmpsl (bad) cld gs pop sub movabs scas mov jae loope leaveq (bad) jbe insl mov (bad) xchg hlt pop push insl jge pop hlt (bad) mov rex.WB stos rex.B jp xchg xchg in (bad) mov rex.WXB je rex.WRB rex.WB add rex.WB jo cmc add shrl mov xor add vpsllw mov (bad) stos (bad) outsl test adc in std lods in leaveq cmpsl (bad) int3 stc xchg movabs hlt mov hlt je int imul rex.WR xchg jrcxz fldz xchg scas rcll hlt es and mov rex.WRB pop (bad) gs movabs hlt mov gs movabs hlt mov test rex.WB xchg and mov fistl (bad) cld (bad) in xchg pop pop adc lods jnp (bad) leaveq sbb in leaveq (bad) leaveq loop in (bad) cmp push pop jae or mov rex.WRB mov mov push or out or in int (bad) leaveq jb hlt adc in in adc sti rex.B je jl pushq and stos rex.R stos lods hlt rorb movabs (bad) leaveq lret xchg rex.RX rex.W or fsubl addr32 (bad) (bad) jl adc rex.WRX add fcoms cld cmpsb fxtract sub leaveq (bad) popfq jno test cltd jl adc fisttpll adc jne hlt (bad) jae jns or pop jns in hlt sarb jl movabs out je in rex.WR iret orb cmpsb loope in hlt jp je in or je idiv jg adc jrcxz mov mov (bad) hlt stos (bad) xchg (bad) (bad) test sbb in andl jp int3 mov mov mov cmpsl mov int3 frstor xchg std movsb leaveq lahf hlt in pop xchg xchg hlt lods xchg int3 popfq xchg lods in mov xchg (bad) xchg in cld mov sub leaveq pop imul hlt mov rex.RB repnz jno rex.WB xor out jmpq sub movabs push adc rex.WRB rex.RB lods cmpsl jno (bad) int3 movsl mov or lods stos hlt je fldl jne loope adc loope (bad) cmpsl rex.WB loope pop cmp loope adc out sbb push hlt (bad) rex.WR sub movabs leaveq fcoms (bad) mov retq leaveq (bad) jl out repz int leaveq push int leaveq cmc ja xor in adc (bad) leaveq movabs int rex.WB sbb rex.R xchg nop int leaveq lea enterq int leaveq rex.WRX js outsl sub loop in mov leaveq mov int (bad) mov pop jno loope and (bad) (bad) icebp add add rex.WB (bad) movslq add pop jrcxz (bad) jrcxz out hlt lret jnp leaveq rex.R pop xlat retq push cwtl pop cmp rex.WXB (bad) insl lock hlt lret rex.RX leaveq rex.XB rex.B (bad) push loop rcrl rex.B rex.R mov rorb loope insb idiv roll sub and outsb icebp cmp out xchg roll (bad) rex.RXB cs imul fadd mov or (bad) xor and xchg cltd (bad) xchg sbb popfq (bad) jno cmp jbe (bad) fcmovb jo xor out cmpsl andl push rcll push loop push stc mov xchg fs pop (bad) rex (bad) out cwtl mov sbb (bad) clc pop sti mov adc leaveq jbe rol outsb pushfq movsb push movsl sbb mov mov nop pop xor cmp (bad) rex.WX std mov add push xchg je jle (bad) ror or (bad) xor push cmp xchg pop lods stc pop mov pop shrl mov iret mov rex.X and es rorl imul and lret xchg cli rex.WXB cwtl pushfq rex.XB lret push mov rolb fistl mov rcll (bad) repnz jae add mov sarl or add sahf stos movabs (bad) rex.WR and pop cld out movabs mov (bad) cmp clc (bad) lret test rex.XB rex.WRB (bad) jb fistpl xor (bad) in je cld or sub ffreep (bad) (bad) jg xchg jmpq xchg cltd shrl addr32 (bad) xor icebp movsb or mov shll sub push fucomi rcrl cs cmp mov cld test insl mov iret push rex.XB mov movabs cmpsb scas (bad) rolq add rex.RB addr32 xor jl movslq lods fsts iret (bad) sti insl imul xchg enterq fldcw jl sub xor addl mov xor push (bad) add pop sarl rex.X in (bad) icebp rex.XB repz movsl mov fs mov (bad) and movslq fstps xor mov rex cli fwait out mov cmp (bad) movsb iret rorl mov int sarl and mov mov test shr cmp in rorl clc rol jno icebp xchg loopne jb (bad) and repnz fdivrs or and rcrl add inc pushfq outsb outsl (bad) data16 cld (bad) jae test jl jno rorl pandn xchg rex.X insb rex.WRXB lahf std shll out pop cmpsb (bad) jno addr32 (bad) sbb ds and std out jns adc loopne in sarl (bad) stos (bad) movsb adc rex sub cwtl adc cmc rcrl repz xchg in cs ds out icebp rex.RXB test (bad) mov jo adc jbe sbb hlt rcrl fnstenv (bad) rex.WX outsl jmpq sti sahf sbb hlt (bad) pop mov push (bad) jmpq adc test shr mulb mov mov lret int3 cmpsb cwtl mov (bad) rex.WB (bad) shlb divb add out cmp xchg shrl mov mov test rex.WB cmp movabs rex.WRXB (bad) ja (bad) fstpt imul xor in cmp cld stc pop cmp (bad) and (bad) rex rex.WXB test pop shrl mov xor (bad) or rclb out addl (bad) rcl imul xor sub jae (bad) pushq and je addr32 (bad) or (bad) xor add lock xor in clc out add movslq or test sub or ds mov ja xor jge cmp xor cmp xchg xchg (bad) (bad) (bad) (bad) jno rex.WXB shll (bad) jp movabs movsl (bad) jne or (bad) (bad) ja (bad) test repnz sahf (bad) jae push sbb shrl ja pushq rex.WXB fwait cwtl jl sub in repnz rex.WX and fistpll (bad) sbb push ss (bad) push fldl add in (bad) sahf mov rcll and lods add mov lock roll rex.B (bad) rex.WB leaveq xlat mov and sub lret rex xchg (bad) in mov push je fwait imul imul xor xchg lcall push lahf pushq (bad) ss xchg enterq enterq fsts (bad) xor add sbb enterq rorl retq in int mov sub or hlt scas sar and test rex.RXB out rex.X lods mov int3 je xchg xchg addb mov or movabs int3 or es cltd sbb mov fmull rex.B mov rex.WXB mov enterq add fwait lea int3 xchg cltd movabs rex.WR rex.RX imul jbe mov adc (bad) mov add jns (bad) mov xlat adc (bad) (bad) gs mov out and addr32 (bad) cmp and add mov int (bad) (bad) fwait add and (bad) ficomp rex.RB or cs add repnz xor sbb shll rex.WXB sub (bad) push movslq push lret cmpb (bad) sar fdivl (bad) cwtl lods rol (bad) rex.WXB pop stc xchg sarl cmp (bad) mov repz lret pushq xor mov (bad) mov pop cld xchg hlt stos pop (bad) add jmp or xchg loope sti mov test rex.X push lret pushq add (bad) push (bad) jl mov pop pop and leaveq movabs or out (bad) lret in mov mov retq cmp icebp repz (bad) repz (bad) in enterq pop nop adcb cmpsb hlt decb inc cld rex.WRX and (bad) jns movabs mov test shrl cmp sub (bad) cmc adc pop enterq fwait movsb stos xchg jno test xchg mov cmp pop adc jbe jl leaveq jo clc (bad) lahf pop es rex.R rex.WRX fwait (bad) sub fiadd rex.WX repnz rex.RX loope imul sbb mov scas vphaddbw fwait xor repnz (bad) and add out ja loopne cs cmp adc mov (bad) mov adc sbb xlat stos push xchg inc mov (bad) shrl retq (bad) roll out fs int3 rcrl movabs xchg rcl add (bad) sti es je mov rex.WRB rex.RXB cmc jp fimul add xchg (bad) stc outsl xchg jg rolb xor jnp rex.RX cmp xor pcmpeqw movb lock jo (bad) xchg rcl fnstenv roll (bad) loop pop sti mov pop callq mov jnp (bad) stos mov (bad) rex.WRX int push popfq jle es jb (bad) sbb xlat lahf rex.WRB push rcll callq xlat jrcxz and rex.WXB or imul or (bad) outsb (bad) sbb mov vmovhps mov xor rorl cmpsb int outsl or and cmp (bad) adcb std xchg cmp mov stc xlat test (bad) fisttpll xlat loop stos or add cmc or out xor rcrl sub mov (bad) mov mov rex.B loopne repz and enterq cs insb sar xor test shll addr32 xchg mov fadd xchg stos sub lret scas lret cmp or add (bad) lock add and jmpq fiadd out sbb (bad) rex.WX jo adc adc ja out scas push add fdivr push fisubr add add rcr pushfq rcrl mov movsb (bad) cmc adc pop sar rex rex.B rex.WRX out (bad) ss cmpsb xor lahf movslq and (bad) add rcrb pop lock push roll lods mov enterq icebp push push cmp rcrl jl (bad) mov jno cmp sarl rol stos mov out sbb retq rex.RXB xchg data16 and push rcrl (bad) mov push retq in and mov (bad) jb ss loopne in (bad) sbb rex.WX jno pop mov xor mov cld retq jmpq push retq lret test or sbb clc push (bad) pop and mov cmc jle add cmp movabs and rolb ror (bad) pushq insl mov (bad) xchg mov (bad) mov (bad) (bad) rcll rex.WRX mov lret add mov xor es movabs rcr cmpsl add neg pop sar or jge ds mov pop out iret push int3 xchg insl rex.X pop movsl iret lods adc xchg jle fsubl jge (bad) pushq mov xadd retq jmp test fidivrl ss rolb imul hlt rex.RB (bad) stos mov leaveq movsb (bad) std add jne (bad) and mov or outsl rex.WRXB sbb pop int3 rex.XB cmp rex.B testl (bad) cld (bad) xchg pop fldl (bad) scas sbb mov (bad) repz iret imul jrcxz xchg sti shr mov add icebp (bad) pop jno or int rex.WRXB test faddl lret add cmp outsl xor xchg push add mov scas fsubrs icebp outsl je mov mov (bad) rex.WRX jl imull jmpq lret fldenv pop rol fidivr adc lods rex shl and mov xor roll sbb add shll nop sbb sbb lret callq (bad) out cmp (bad) cld leaveq push (bad) xor xchg divb lret add or outsb add jo and in mov xor mov in mov (bad) jae stos iret (bad) or lods sarl mov xchg movabs and adcl xchg mov mov pop add and rex.WR pop add jns push (bad) mov xadd adc and rorb in mov popfq jae vunpcklpd add fbstp push jmpq adc (bad) xadd and push sarb rcll icebp jae sbb (bad) cmc sub pop fisubl negb (bad) mov repnz add lods (bad) add test and cltd rorl sbb in and xor sahf pushq stos jrcxz jb jmp rol (bad) push cmp hlt push movslq (bad) (bad) (bad) xor outsb rorl (bad) (bad) fcomi pop xor stos (bad) xchg add int3 (bad) js xlat insb (bad) pushq cmp rex.R rex.XB mov shr jmp and (bad) ja rex.RXB mov push shll int3 fwait rcr xchg adc (bad) popfq xchg movabs addr32 push sub mov (bad) xor ss or lret loope rex.WRB loop xor rcll mov lea out sub adc mov push rex icebp rcrl add lock (bad) movsl retq lret cmc rex.X addl xchg and (bad) jns cmp cmp and mov negl mov mov mov sti stos add loopne cmp jnp mov loopne (bad) jb (bad) scas fsubl mov cmp jnp mov add shrl ror jmpq pushq (bad) roll cmp rex.WB in outsl (bad) scas add mov xor movabs mov jo (bad) cmc xchg or and (bad) movabs (bad) xor (bad) mov push push (bad) jno in (bad) shl push fs push mov mov xchg fstl add cmp adc xor push rcll fmul push shrl cld pop imul jrcxz mov loope mov lcall sub xor (bad) jbe cs cltd sbb shll pop adc (bad) mov jl rex.XB mov rcl outsb and sub (bad) mov mov cli rex.WR (bad) rcr (bad) in pushq movabs sti xor int notl xchg push movabs incl (bad) shll (bad) push push callq std sti mov push mov sub iret rex.XB jo loope ja adc push or push xor idiv mov add loopne retq rex.WXB (bad) (bad) nop and fs xchg out pushq (bad) loopne adc roll jo outsl movabs cmp push (bad) (bad) (bad) jle icebp sbb leaveq xor rex rex.R (bad) jno movslq cmp in xchg fstpt push loope ror shrl or push mov (bad) mov imulb sbb cmp sub loop fmul add (bad) loop cmp sub xor cld in and (bad) jl rex.WRX rex.B lret (bad) loope jle (bad) int hlt add retq rex.RXB and cmp mov rcrl push cmp mov int3 mov (bad) std in rol mov (bad) push (bad) jno out retq (bad) jp shll pop ffree (bad) cmp pushq rol jge xchg (bad) stos icebp incl mov adc (bad) mov cmp (bad) add or (bad) adc repnz rex.WR movabs pushq fmuls out adc xor shl (bad) mov movabs mov (bad) xor data16 lock (bad) add xchg rorl test stos xchg enterq cmp mov rex.RB jno repnz retq (bad) xor mov mov outsl (bad) (bad) mov xchg (bad) lret (bad) mov or mov jno std in pop push rex.B adc and add adc sub xor cmp (bad) clc test or (bad) (bad) out test mov rcll fldenv stos add rex.RXB (bad) xor imul add cmp nop sub lret (bad) lret sbb (bad) mov outsl and rex.WRXB retq sbb push cmp negb (bad) mov fs outsb or mov movsl andl (bad) jmpq rex.RB or sub (bad) cmp mov rex.RX fdivs mov rcrl pop fidiv jnp pushq rcll data16 push cmp add add mov rex and vorpd cltd rex.WRB (bad) jo mov test sub cli jge rcll and movslq movabs mov (bad) add mov hlt (bad) rex.RX or (bad) jno,pt mov rcll repz (bad) outsb sub (bad) sbb int3 fidivr sub mov pop pop jmp (bad) adc xchg mov cmp test mov (bad) rex.B stc je push (bad) testb (bad) (bad) movabs rcrl (bad) test hlt push add cmc pop shrb mov rex.XB test fistpll pop outsb jbe movabs mov test mov or sub cmp scas loop out hlt rex.WX xor rex.B xchg sti (bad) repnz (bad) mov popq divb (bad) rex.RXB in and mov callq int (bad) movslq std ss hlt pop (bad) stc test mov fcom sar icebp adc pop loope iret loopne fstps xchg (bad) (bad) xor mov loope outsl or (bad) (bad) enterq (bad) loopne adc cltd add rcrb xchg push int repnz xchg (bad) mov cli pop mov cmpsl cmp pop shll cwtl add test mov shrl out loope rol in sub adc fucomp adc (bad) (bad) adc sub test fistpll icebp loopne clc rorl shll mov fisttpll (bad) rex.WR cs out sbb sbb (bad) rex.RX adc (bad) hlt mov lret or jbe cmp mov sar and (bad) je rex.WRB mov movabs sahf cmc ss (bad) imul lock sub iret lret (bad) shlb cmp sbb rex.WB retq sub icebp (bad) cmp rorl (bad) fsubrs fwait pop rcrl rorb cs enterq lods addl fldl sub sub jbe (bad) push or xor sbb fisub (bad) rex.RB mov int movslq test or (bad) sbb loop and (bad) cmp and (bad) stc rcl push movabs pop enterq cmpsb adc in xchg sar cli fwait rolb jo fimull test mov shll jl icebp or sar push in retq mov (bad) fstpt pop jb (bad) mov in mov jns mov rex.WX rex.XB loopne shlb (bad) outsl out push repz rex.WX rex.RXB and mov cmp popfq (bad) in sarl movslq mov pop (bad) mov (bad) (bad) callq shll and scas or cs (bad) xchg movabs sbb and pop outsb add imul (bad) sbb mov cmpsb (bad) cmp jns rex.B fcomps lret or and cmp iret rex.W fildl (bad) xchg mov (bad) rcll cltd lret sbbl adc or (bad) test shrl rolb adc imul or test (bad) jg (bad) jb cli fxch rex.B rex.RXB sbb clc cmp push scas push mov rex.WXB (bad) sbb xadd push test push sub or push adc movl (bad) shr (bad) imul mov pop stos xor rex (bad) and jg (bad) fwait xor movabs or enterq rex.B sbb cmp clc rex.RB fwait and sbb cli xchg adc roll or rcll mov (bad) mov xchg lret push out mov pop fidivr jnp cmpb stc stos rcll mov mov fisttp shll pushq vpmulhuw cmp sub addr32 pushfq mov xchg sarl jg adc rex.RB enterq lret fimul xor rex.WX andb xlat (bad) cwtl fdivrs js (bad) pop (bad) rcl fdivp or stos or cmpsl jo rex.RXB (bad) iret int3 xchg incb cmp movabs jrcxz pop adc rex.WX xchg rclb rcrl int3 retq mov or jp add (bad) lods shrl sahf sbb fwait and ffree (bad) jnp jle jno rol xchg lock (bad) (bad) shll pop cld shl (bad) mov repnz fisttpl and shrl rcll xchg (bad) rex.WR adc movabs mov fwait lahf cmp mov sub ss mov movsl rorl (bad) pushq mov test out pop adc jae cmc loopne pop test xor int3 xchg mov callq pop (bad) lahf loope (bad) shrl push xchg test psadbw xor xchg movabs jg (bad) sbb mov pushq insl xchg cmp es rex.WRX lcall and roll mov test (bad) hlt pop mov or rex.R rex.B and mov (bad) scas or movslq (bad) dec andb add int3 out xchg jno push push shrl test mov cld (bad) mulb movabs mov pop push rcrl xor gs xchg jg loope fisubl lods rex.X loop mov or mov push adc cmp mov xchg int xchg or outsb stos mov rcrl pop mull and adc or sbb xor add xchg outsl or and add xchg int (bad) mov adc (bad) mov cmp in jp insl and outsl popfq mov (bad) cmpb hlt movabs stos lahf mov imulb rolb setnp and mov xchg (bad) sub jrcxz decb cwtl int rcll xchg in rcrl xor repz add jmp pop xchg (bad) mov sahf or xchg std (bad) mov sbb movabs (bad) mov (bad) sbb (bad) callq clc imul rex.X adc in mov xadd mov popfq pop (bad) push not std mov and pop fwait jge rex.B sahf pop (bad) mov mov fwait adc hlt shll (bad) movabs xor adc (bad) clc lods fistpll jle scas xchg xchg fidivl movabs outsb (bad) (bad) (bad) test sbb push (bad) test and and stos in mov test mull push rex.WRB lods xor cltd mov fimul shll jmp (bad) sub outsb int3 sbb mov xor (bad) rex.WRXB xor sub hlt retq rex.W movabs xchg (bad) (bad) sar (bad) cmc dec sub loope mov shrb mov add (bad) sahf mov rcrb (bad) mov adcb int (bad) lock push rcrl (bad) movslq mov mov (bad) lea (bad) jno jb cmp sub std shrl repz nop push push rorl and xchg fwait adc std jns scas jno (bad) xlat (bad) (bad) (bad) cmp xchg push stc jns add (bad) mov sub cmp mov cmc or retq cltd jae push out adc fldl rex.WB rolb add clc hlt roll (bad) rex.WRXB (bad) sub adc pop imul xchg pop loop mov and (bad) xor test pop pop cmp adc cli add add lahf jp xlat mov sbb out stc movb lock adcl rex.WRB lret mov xchg rex.WB rex.WRX repz (bad) rcll cld imul rorl sub rcrl loope in jp rol popfq es (bad) pushfq (bad) in repnz jl rcr sbbl lea and xor xchg sbb (bad) ficom (bad) pushq jae roll rex.R rex.WRX rex.X jrcxz pushq cmp ror lea rex.XB iret repnz and rex.RX mov rcll cmpsl push xchg (bad) rol jp or movsl (bad) (bad) out cwtl pop outsl fwait sub push and ja ss lods push movabs in outsb add push test add rcl repnz shll stos cli (bad) cld jp cs cmp and mov add (bad) xor and imul and sub (bad) sub lea imul cmp addl push sbb out rex.WB (bad) pop cs add jb test xchg rex.X sbb rcl fnsave in mov enterq out jns jp (bad) xchg pop movsb decb (bad) rex.R sti xchg pop scas (bad) mov push jnp rcll shll fisttp cmc mov (bad) and vpackssdw leaveq lods (bad) mov sbbb shrl je xchg xchg (bad) (bad) rex.WRXB rex.R (bad) movabs or mov cmp (bad) rcll cmp repnz (bad) loope (bad) (bad) (bad) jns stos popfq loopne rcr (bad) movsb xor in xchg ror clc pushfq xchg cltd gs iret rex.W fcompl xchg cmp mov shl cltd rex.WRB movabs loopne nop add add (bad) rex.B movslq mov push cmp (bad) jbe shrl loope (bad) jmpq jmp mov push or rex.RXB repnz test (bad) add shlb stc pop and insb shll adc rorl mov out rex.B (bad) jo jne movslq shr enterq movsb outsb movabs (bad) mov mov xor fnsave rex.WR mov xchg jg mov add rex.WR (bad) rex.WB xorb adc sti cmp test jrcxz repz int3 (bad) jl sbb add repnz sbb sbb add scas leaveq xchg (bad) rex.WRXB rex.B lret out xchg adc cmp fwait cmpsb add xlat mov addr32 adc and iret (bad) loopne jns pushq xchg mov test jmpq and mov rcll (bad) pop in jne mov int ficoml sahf pop (bad) ja mov lret adc sbb je std out xor (bad) pushq jmpq push cmp adc data16 (bad) in xchg shrl cmpsb rex.WR int roll sbb add pop mov rex.WXB rorl push je lret or (bad) (bad) add mov push push cli sbb shll fld jne mov jp pop rcrl (bad) cli lods and cmc (bad) and rex.WXB xchg jbe in and jno xchg xchg xor repz mov movb rcr cmc mov rorl mov iret or retq callq rex repnz add adc test roll fucomp in (bad) fcompl sbb rex.XB (bad) (bad) mov jno xor fadds add movabs out notb shrl sti sbb (bad) xchg jae (bad) pavgw jl xor js rex.RX fwait pop insb roll mov mov mov stos outsl (bad) sub adc (bad) push add mov push int3 (bad) hlt mov (bad) movabs xor or mov sub (bad) movabs imul push clc mov rcrl imul movslq cwtl pushq movabs movabs in shrl jg (bad) negl fldenv sahf (bad) (bad) repnz rex.XB and adc mov mov add sbb pop add xchg pop mov fadd sahf lock fnsave (bad) jg test rex.WXB and mov addr32 sbb (bad) xor pop mov jno rex.WRB xchg sub cwtl cmpsb rcrl movb pop (bad) mov jbe (bad) add loope jle data16 and rcr mov or mov stos int jrcxz sarl mov icebp rcrl mov cmp xchg (bad) pushq repnz cmp addb sti add rorl mov (bad) pushq pop xchg imul mov roll add (bad) xor push xchg push (bad) jno retq cs enterq and sub (bad) mov fnstenv sti xor xchg out fwait (bad) push cmpsb or rclb movl leaveq (bad) mov adc fistpll retq adc stos movabs int mov pushfq (bad) mov pop in and sar insb (bad) scas stos in push mov movabs add (bad) rex.WRXB sub outsb (bad) add (bad) pop leaveq mov rex.RXB cmp iret push mov ds xchg rex enterq xor (bad) orl mul (bad) rol idivb vmulsd lea fprem (bad) (bad) add out sub shll fnstsw leaveq insl xadd push pop or (bad) (bad) pop rex.RX std fnop in rex.WX pushfq rex.WRXB insb rcrl shrb mov ds (bad) rex.WR sar jb pushfq loopne (bad) sarl add lods fisttpl (bad) (bad) testl pop or adc ror test setno push mov fnstsw xchg lahf imul mov adc pop jmpq jl add jno push add ja xlat roll (bad) mov (bad) (bad) cmp (bad) jle xchg rex.W (bad) int mov roll enterq adc gs (bad) sub rcll rex in xchg pop (bad) adc mov (bad) je lret iret xchg pushfq jrcxz (bad) push int scas rol sahf loope rex.X pop shll test xchg shll rex.WXB xor cmp loop push add (bad) adc pop mov sbb shll sbb (bad) push add gs mov shll callq rex cmp addr32 jmpq fcmovb mov (bad) rol and jo jae repz pushfq frstor (bad) sub rex.RB add mov mov hlt rex.X pop rol (bad) (bad) and test (bad) lret int mov rol xor xchg rex.RB sub pop fst lods rorl xchg movabs xor loope in lea mov (bad) cmpsl sbb rcr mov pop xchg and xor enterq mov pushq pop cmp imul pop xor cmc sub imul shll and rol retq jnp icebp loopne retq std jle adc (bad) (bad) shrl mov add mov rcl lahf cmp rcrl jo sub test lahf (bad) rex.X jno jne cmp sti xor add icebp out rol rcll cmp fs iret lahf pop pop jae shll xchg rex.RX push rex.WRX cmp rex.WR (bad) lock out mov jp roll loope sarl rex.WRX (bad) mov (bad) rol lods and xor rex mov xchg std or sub (bad) shrl clc hlt sar (bad) adc stc (bad) (bad) test xchg pushq (bad) (bad) or shrl iret rorl adc negb rex.WX (bad) lret out sahf push pop rex.B movabs cmp rex.WB ficomp out push ror stc or movb and cmp pushq mov (bad) pop movabs outsb adc mov repnz pop rorl movabs sub xchg retq (bad) (bad) stos mov icebp cmp lret fs lods (bad) pop roll cld (bad) (bad) rex.RXB (bad) add out push xorl adc fucom sarl int3 pop jnp inc push xor ror pop iret jo shrl mov adc je jno xor imul rex.RXB fistpll pop jp rcrb ror vdivss xor outsl mov rcl and (bad) movslq push sub sbb pop (bad) or outsb int fnop cmp outsl mov pop rex.XB out cltd mov cwtl insb repz pop lods shll lock gs xchg (bad) cmp mov lahf (bad) loopne (bad) xlat (bad) add pop xchg or nop rex.B fcompl xchg cmpsl int sarl in xor or sub xchg lret insl (bad) rorl sub and push xchg outsl fistp mov roll ds fwait push movabs roll rex.RXB (bad) or (bad) rex.RB add and (bad) cmp xor rex.RB xchg sub stc in lods adc fdivrs push out mov jg imul push sarl rex.WRB rex.RXB sub add jge (bad) (bad) clc mov outsl enterq xchg es xor pop iret testl (bad) rex.X xor movslq and test rex.WR notl push lret movabs mov mov lods jrcxz shr retq cld jo lahf add push roll cmp xchg shll movabs gs retq pop xchg add or rorl lods xlat (bad) je lret mov iret clc mov loope popfq loop cmp lret xor jl or (bad) testl push mov push sti adc fnstcw (bad) pop xor jbe out je xor cmp (bad) outsl lret pop mov mov rex.XB callq rex.WXB rorl sub repnz mov xor (bad) leaveq push (bad) fwait or rex.R (bad) shl sbb (bad) mov insl fwait (bad) pushq shrl in callq push loop mov imul cwtl test pop mov fwait sarl (bad) push mov (bad) popfq icebp jle movabs cmp rex.X adc idivb sub shll out enterq ja (bad) movabs sbb mov shrl and xchg ds sti ror mov pop lret std icebp or (bad) (bad) sahf sub data16 rex.WB xchg xchg rex.WRXB rex.XB or pushq fsubl (bad) mov push xor rex.RX (bad) xchg subb or sbb (bad) cltd decl ror sar (bad) rex.RXB (bad) ja adc mov cltd rcll lea rex.WRB insl lret out out hlt jrcxz stc (bad) mov jns out fwait xchg and pop rorl sub rex.WXB stos hlt (bad) jnp mov fnop mov out mov rex.WXB push xor pushfq shrl cltd cmc mov orl mov (bad) rex.WXB es rex.WR add adc fisub (bad) shrb mov (bad) ja in retq loop movslq fwait and mov jmp movabs pop movsb xchg (bad) (bad) xlat inc fstps jnp cmp test and jl sti adc (bad) (bad) rcll andl test pop lret bnd (bad) sbb or movabs jb mov adc sbb pop (bad) (bad) enterq (bad) fnstenv (bad) in mov cli (bad) addb sbb iret fnsave icebp jmpq rcll sahf adc mov jo rorl (bad) rol test rcrl pop (bad) push (bad) jo adc shll xchg (bad) jnp movabs sub movabs rex.RB (bad) mov je mov fidivrl and jmp cmp (bad) cmc movabs cmp sub push xchg pop loope shr gs ffree add cmpsb cld (bad) js lahf xor nop in jp mov rex.R cmpsl pop (bad) add lret rex.WRX rex.RX data16 sub xor mov insl sbb or jne mov (bad) pop cmp shrl out ss rex.B (bad) (bad) rex.R (bad) ror lods or jne mov popfq int3 pushq rcll adc mov gs vpcmpgtb test clc test (bad) mov (bad) enterq addr32 mov mov loop vmovd imul decl pop rcll jbe rex.RX data16 rex.WR (bad) rcl rolb (bad) lret mov mov iret rex.XB int pop loope xchg mov and pop movabs rcr (bad) or stos rex.WR (bad) xchg (bad) mov mov (bad) rex.X mov push rex cmpl mov pop movabs (bad) rex.WR rex.WRB rex.WRXB rex.B xchg nop (bad) fmulp add mov mov (bad) sub sbb add or or jle fist rex imul cmp jmpq rex.WB rex.WRX sbb pushq pop jmp add repnz add adc push mov (bad) push movslq roll (bad) insb xor movabs (bad) bnd rex.WRXB movabs sbb (bad) mov mov (bad) jae test rorl rex.B je push rex.WXB pop xor pop (bad) sub mov test cltd (bad) jo cwtl int3 shrb (bad) rex.R popfq js fistpll mov xlat add pop test retq add cs and outsl xor rex.RXB mov rex cltd (bad) mov lret int3 pop int (bad) rcrl sarl cmp rex.WRB gs loopne ja jae insl pop rorl movsl and rorl lods sub rex.RB sarb pop rcrl adc xchg xor sbb jo (bad) cmp stos fs rex.WB repz scas movabs mov jb mov in lret jns out rol out stos rorb (bad) roll (bad) hlt subb lods add sti (bad) sub mov push xor fadd stos (bad) fadd movsl mov (bad) (bad) (bad) shlb movsb scas (bad) rcrl (bad) lods fsubs test jbe rcrl mov rex.R std retq cmp adc add (bad) (bad) push xor cmp pop shll out scas sub add lret (bad) mov mov jl add rex cmp or sub mov (bad) rcrl out je add (bad) (bad) jno ja mov rex.RX and outsl imul rcr jb mov sub std jg sbb scas test repnz movabs jle mov (bad) ja stos enterq fnstsw jl nop pop (bad) iret jae roll in stc mov loop add sti or xchg rorl push adc adc push movabs out sub add or add (bad) retq cld mov sub rex.WR rcrl xrelease nop in (bad) push fnop lret xchg (bad) mov outsl rex mov xor add pop shll jns lret (bad) (bad) mov jge (bad) or (bad) mov xorl test iret xchg jnp popfq rex.B jo add sbb push sbb (bad) mov retq lods iret push mov mov rol or int3 jo (bad) loopne sub cmp in xchg xor movslq xor jo add xchg fdivr add fdivl inc rex.RXB add mov sub stc mov adc pop cmp mov jmpq (bad) mov cmc roll xor (bad) fidivr shrl cwtl sbb xor or jne rcrl lahf cmp rex.WB push out int3 scas pushfq mov xchg enterq xchg (bad) sbb (bad) notl callq adc rex.WX and push (bad) ja hlt jnp out jrcxz mov movabs push mov mov sub rex.RX jmp enterq xchg stos mov pop sbb and iret pop int add movsb rex.R outsb repz (bad) pop mov and sbb (bad) xchg stc pop mov and and sub je (bad) cmp (bad) adc jns movabs xor mov and (bad) mov cli addl nop cli jle shll idivl scas xchg popq sbb (bad) int and rcll fsubrs sahf jb (bad) mov sarb mov rex.RX in xchg insl xchg loopne and movsb cmc mov sbb movabs nop or jnp (bad) mov iret (bad) out ds push (bad) movslq mov rclb rcl fidivr cmpsb or xor xchg sub pop shll jge rolb (bad) roll jnp (bad) (bad) cmp gs pop rex.B xor rorl xchg int rex.RB popfq xchg rol movabs movabs or add xor (bad) cwtl rex.XB shrl jbe (bad) rex.WXB (bad) jrcxz push rex.X mov (bad) (bad) sbb popfq (bad) outsb roll (bad) (bad) pop push sbb adc or mov (bad) pop insl fst je (bad) (bad) xor popfq cld (bad) adc enterq sbb pop xchg add cmp jle cmp repnz rcll imul shr xchg sbb adc testl (bad) ds add (bad) xlat lret enterq xor (bad) rorl push cmp lods iret lahf xchg ficoml rcll outsb rex.WXB cltd rex.WR xchg (bad) xchg adc xchg fsubrl iret (bad) sbb add insl lret sbb ficompl loope fisub jle iret cmp add cltd push push cli xchg or retq loope add (bad) xchg cltd iret test sbb std lea rclb int pop roll push retq movl jnp imulb sub mov mov (bad) outsl icebp stos mov (bad) rol mov mov fisubr add (bad) jmpq xor lods xchg sbb xor out add movsb rex.B (bad) xor cmp shll rex.WX or popfq adc xchg rcrl xor rex.WB movslq orl rex.WX (bad) (bad) jg repz and test cmp loop rex.RXB (bad) ja sub int push push lods divl rex.XB adc repnz add int (bad) shrl es pop rcll out js lea cmp in test xchg mov mov rex.W movabs enterq pop int3 add dec or repz in and loop loopne std sub rex.WX mov je and rex.WXB cli (bad) test decl (bad) pushq (bad) (bad) ss in jle xchg fs lret (bad) js mov xchg retq clc mov (bad) or xchg mov repz xchg loope xchg idivl (bad) roll jo and xor retq mov (bad) in xchg int pushfq stc shr cmp (bad) mov xchg in ficomp (bad) jae add nop sub sbb fwait fwait lret sbb adc mov mov test jnp pop inc mov movabs jb lods jo test mov (bad) mov mov fxtract lods (bad) xor (bad) insl jns mov (bad) mov (bad) jle cmp xor movabs mov (bad) icebp push ss cmp movabs stos and mov (bad) jmp mov xchg rex.WX in and (bad) retq movl rex.R rex.RB cwtl rex.B rex.WRX cmp jrcxz pop (bad) mov sub pop push cmpsb rex.WRXB mov mov sarl adc insb fnstcw retq jle rex.WRB fwait jrcxz shll addr32 xchg sbb push cmp mov in hlt es (bad) xor rex.X repz rex.WXB roll add ds shll test std scas rex.XB push in sahf rex.WB sub shll mov mov stos mov and sbb sar xchg callq pushq xchg adc (bad) mull jb rex (bad) sarl mov rex.WXB rex.WX retq cmp cmp (bad) or rcll fldl xchg (bad) push movabs jo xor xor outsb shl out (bad) jmpq movabs sti xor add ja jbe pop rcrl or (bad) mov roll test callq lea cltd (bad) rcll js jrcxz rex.RB enterq mov (bad) pop xor add mov callq add lret insb mov fimull cwtl bnd jg adc xchg cmp sbb callq fwait mov shll pop lods (bad) fcomi xchg shrl lret leaveq add (bad) pop (bad) jmpq add jmp retq repnz (bad) mov mov mov (bad) ljmp cltd in xor (bad) (bad) or mov rex.WRXB (bad) lret mov sub in rcr and sbb movslq (bad) xor movsl mov (bad) insb fwait (bad) sub repnz fcmovnbe rcl retq (bad) movsl jge and push mov xchg fs (bad) rcl rex.RX rex.WR sarl cmp rcrl lods sub mov (bad) rex.WRX repnz loope cwtl shll (bad) (bad) shl jge jg adc shl callq mov lret fstpl xchg data16 add rcrl vcvttsd2si rex.RX callq rex.X enterq mov and rex.WRX xor sub repnz jo jno rex.RX add (bad) mov (bad) push xchg movsb movabs addr32 stc cwtl (bad) cmc scas (bad) repz je jmpq lret sbb mov rex out (bad) mov mov push rcl mov push mov or cmc jne rex.WRX shll es negb mov (bad) rorl leaveq sti add fisttpll adc cmpsl mov mov popfq lods mov add (bad) (bad) loopne sbb (bad) mov xchg shrl icebp sub and mov cmp (bad) popfq or or (bad) je loopne rex.WXB roll callq icebp xchg jb cld mov pop (bad) mov (bad) retq cmc test repnz xlat ror rorb (bad) sbb xchg or (bad) cmp fs (bad) mov add in insb add or mov roll mov (bad) mov sub xor imul cmpsb stc jno mov xor cmp mov (bad) (bad) sbb cmp hlt shrl xchg movabs sub jbe rcl pop (bad) shl rex.WRB in imul rep ss (bad) shrl fcoml out pushq int3 ds rex.RX rex.WRB rex.RB jmp jns fstps and fscale lahf xchg or movabs add push or sbb cli jno nop mov lods jae in and roll push or push pop pop push (bad) rcll mov je test movabs (bad) in rolb leaveq or roll out shrl (bad) rex.X xor cmc lahf xchg scas rex.WRXB xor xchg (bad) (bad) push sub sbb mov mov adc pop out (bad) mov sub jbe mov mov mov sbb fcmove lahf xor push movabs mov adcl (bad) sbb stc (bad) add (bad) xor jbe lret rcll mov rcr insl movsl sbb rex.WRX rex.WRB lock rex.W cwtl test std retq xchg and adc (bad) fld (bad) fildll sbb outsl iret cltd sbb mov movabs ror std (bad) push add rex.WR add roll jmp add (bad) in mov fadd jbe (bad) pop xchg pop lret or add and pop cmp retq fcmovb sub leaveq cs pop (bad) in (bad) xor mov repnz fnstsw rex.WX (bad) movabs shr test push roll sub rcr xchg outsl or in (bad) stc adc cld shll pop (bad) std sbb xor callq stc out lahf hlt test (bad) lret pop sub shl rex.WX xchg mov rex.B movslq sarl (bad) jg addr32 cmp fldl2t rol or roll (bad) addr32 outsb enterq fstl mov sub mov cmpsb addl rex.WX xor lahf cmp cwtl rex.R push movabs sbb cltd lods (bad) out rex.B rex.WB gs and negb lret mov (bad) cmp movabs adc sbb (bad) jnp pop pop mov test push (bad) pop pop loopne xchg ffree ja mov retq cld cmp cwtl rex.RXB xchg sub repnz (bad) cmp cmpsb (bad) cmpsb (bad) or xchg rex.XB rex.WX rcll (bad) jmp fiaddl sarl rep jns fcmovnb mov (bad) lock xor jmp loopne rex.WB rex.WXB pop (bad) pop ja cli add and pop cld mov fcoml pop sub rex.WXB (bad) jg test mov jg rcll xchg (bad) mov (bad) rex.WB pushfq retq rex.WRX (bad) cltd out pop rex.B (bad) mov rex.WRB cmp cli rex.B push lahf fucomi sar jmp js sub jns cld xchg scas repnz (bad) hlt test sbb xor cmpsl xor fnsave sarl sbb retq adc add scas shll int movabs jns sbb (bad) pop std cmp clc rex.X cmp (bad) test je std sarl in out hlt rex.R (bad) cmp xchg pop push in (bad) clc mov mov cmp jmp ds bnd mov (bad) rex.X xchg in movabs movabs (bad) leaveq push movabs rex.RB add xchg (bad) rorl stos js push (bad) (bad) movslq add jno in mov sub hlt rorl (bad) jg push jmpq mov stc pop cmpsl nop pushfq in loop (bad) mov cmpsb and sti xchg mov jno push adc lea sub (bad) jns xchg jb fstpt add movabs ror dec stos mov pop mov lahf pushq rcrb (bad) jb jg cltd sbbl lea xchg (bad) loop sarl sti shrl rep rex.X cli (bad) lock mov (bad) scas out jg mov jp movslq (bad) or mov movsl (bad) rex.W rex.RXB repnz and rex.B or (bad) stc (bad) mov nop and data16 movabs (bad) jp faddp insl mov and leaveq adc and nop ss push or mov (bad) jmp and sbb lods add sub rcr jl lret xchg int pop sub (bad) movabs or (bad) jae retq int3 in sti (bad) mov jnp cwtl movsb (bad) push loop (bad) test pop (bad) mov adc out cmp rcl stc (bad) xchg int3 pushq sub movsl movl mov mov mov jl fistpll stc jns pop sbb lock sub sbb (bad) and pushfq sbb es fisubr xchg (bad) mov lods movabs pop cmp repz mov jns fninit out sarl in lret and in mov jo jmp std je mov jle retq (bad) mov scas rex.WRB leaveq pop (bad) (bad) je sbb rex.WRX (bad) rex.RXB (bad) clc mov rex.WB jbe xor lea rcl movslq (bad) lock roll pop imul push xor (bad) gs test rcr mov push (bad) insb callq add test xchg rcr jbe xchg callq push (bad) cmpsl std rex.WXB movabs mov rex.XB lret mov loop jae cmp rex.WB roll xchg rcll test shll lods sub cld addr32 repnz int3 mov fld rol or pop push rcrl pushq and mov imul rex.WRB mov xchg (bad) and mov mov push mov fidivl (bad) fld (bad) jg adc jl xor iret rol sbb out rex.X lret scas fnstsw cmp sbb sub int3 (bad) hlt repnz (bad) cltd add sub rol xchg outsl lret pop shlb int3 jno mov mov adc out scas mov rolb sysexit (bad) (bad) out mov loope rcr jmp rex.RX lret (bad) cmpl push adcl fstl or and lock je rex.WRXB in add (bad) clc pop (bad) movsb and (bad) (bad) retq rex neg out outsb int cld (bad) shr mov xor (bad) fldt xchg js popfq fmull (bad) rex.XB lea lods shlb mov or mov iretq or (bad) movabs rex.R data16 mov movabs jnp cmp jmp callq sub retq pop cmp es pop (bad) add enterq sbb sarl in rex push retq loop (bad) movabs stc pop add out push rex.B inc jno pop mov shr cmp push mov (bad) jno xchg and jno iret push loopne adc jge movabs add sub fiaddl retq adc mov cs mov pop shrb mov mov in xchg (bad) sub adc jb mov shlb (bad) shl xchg movsb insl add add jno bnd mov cmp and shll jrcxz (bad) (bad) pop jno jp cmpsb mov add movslq scas pop rcrl movabs sub mov (bad) mov mov scas loop (bad) rex.R cmp movabs (bad) mov stos clc (bad) add add (bad) test out cmpsb or popfq jnp xor roll sub add (bad) sti iret sarl ja or cmc (bad) imul rex.WX rex.RB mov rex.X xchg add insb rex.WRB rex.WR icebp imul (bad) sbb or out sarb pop cmp shll (bad) in ss retq retq cmp mov (bad) rex.WRXB or rex.XB push rex.RXB shrl xchg sub (bad) and or pushq fadd and imul fidivl fstl lahf (bad) rcll (bad) shll and rex.WRB outsl shrl mov jne cmp push insl sar repnz mov (bad) enterq loop pop rorb test (bad) retq mov nop cmp (bad) or rex.B pop rex.RB add cmp ja shll push mov rex.R xor dec mov (bad) jno jg enterq movabs sbb rex.X enterq (bad) js sar jrcxz jno roll scas imul je rex.WRB cwtd movabs movabs adc out imul shlb pop (bad) sti sahf in (bad) insb jns push (bad) enterq roll mov cmpsb xchg cmpsl sarl xor xor popfq push iret test jne pushq or fidiv gs insl sub add (bad) movsl mov shrl loop lret movsb push mov popfq roll and js (bad) out push push shrl mov add mov rorl pop rex.RB stc rclb shrl ror movsb int (bad) (bad) sbb sbb in in rex.WXB (bad) rcll lret push mov rcll rcll test cmpsb clc cmpsl retq or (bad) addl insl jmpq and jmpq stc (bad) fildll push gs out (bad) (bad) loop jns shll retq out or rorl shlb shll (bad) je xlat (bad) (bad) (bad) pop xor jbe jl movsb (bad) (bad) (bad) orl sub fwait or xchg out fsts rcll fcoml mov imul roll add or pop loop mov out in mov (bad) (bad) ror (bad) jno rex.R (bad) loop pop ffree retq add push (bad) test imul add (bad) mov jbe add loopne stc (bad) rex.B ds or jrcxz (bad) stos repnz vcvttss2si movabs pop sti (bad) (bad) jb scas (bad) stc pop insl jge rex.WXB fwait in movabs repnz (bad) xchg cwtl mov lods fadd sub rex outsb rex.WRX cmp (bad) mov movabs mov int (bad) (bad) retq (bad) jmpq jno (bad) idivb retq (bad) outsb fwait mov (bad) pop mov sbb adc lahf lret adc in pop push cmpsb (bad) js test out std loop cld (bad) push lods lahf mov pop xchg (bad) fistp add neg xchg rorl pop loope stos (bad) bnd mov retq in sub stc retq add push in or fstpl lret lock or jmpq pushfq push cmp cmp or int (bad) fdivrs lea fnstsw (bad) in jae add and rcrl (bad) xor sarl iret lahf out mov rcrl pop sub sub adc lods sbb jrcxz (bad) outsb fstpt xchg and sub lret jl (bad) xchg fs ds fadds in lods mov push (bad) xchg data16 sbb fadd rex.WXB xor jns lret loope lahf vmovdqa (bad) sub outsb (bad) or (bad) out (bad) rex.RX jl,pt je fimull xchg in (bad) (bad) cmpsl mov cwtl or or lods movabs mov je jbe outsb adcl or mov jge cli pop roll adcl fldl movabs (bad) sti int iret (bad) lock loop mov adc adc (bad) jns roll add sbb adc pop xchg xor push and jl int3 (bad) enterq (bad) gs test icebp pushq xor leaveq cmp shll jge fldl cli pop jrcxz pop ror mov xor movabs cmp jno jne (bad) jrcxz int callq and lret rex.XB rex.WB cmp rex.RX jge sahf (bad) sbb imul sbb push cmc mov and movabs in cmp and lret (bad) lock movsl cmp int mov adc stc loope adc and repz clc mov in push lret xchg imul mov and add outsb pop (bad) sbb stos mov icebp cmc sbb rex.B jne push (bad) test mov mov rex.WB rex.WRXB rolb sar ror add xchg stos cli rex.RX cwtl bnd mov sub xlat (bad) fisubr (bad) and loop xchg imul shrl sub jle adc sub fsubs add jae leaveq loop (bad) xchg rex.B rex.WRB lahf je,pn enterq sti rex.WRX pop add rcrl mov pushfq roll mov popfq rcl jmp movsl (bad) mov js cli lahf rcl mov adc lods jle lea roll mov or lock movslq rex.X mov rex.R push xchg (bad) pop int (bad) (bad) loope stc sbbb movabs sub xlat nop movb and jae sahf adc xchg iret callq flds (bad) jrcxz rcrl fadd out lea jo rex.XB add idiv fdivrs xor inc pop pushq xchg cmpsb and rex.RXB mov rex.WR add sbb cwtl sub lods in rex.WRB (bad) adc rcll (bad) out rorl mov ss popfq adc sbb enterq mov rex.B rex.X jns sarl cmp mov rex.RB popfq shrb retq xlat in (bad) insb xor mov loopne retq xchg imul addr32 pop mov cmp cli xchg rex.W sbb cmpsb cli rorb (bad) (bad) in (bad) fidiv (bad) retq jno pop rol (bad) mov movabs (bad) js pop mov (bad) (bad) int3 mov push mov lret jmpq xchg leaveq addr32 rex.WR xchg mov jbe lea mov sbb nop vpmaxsb (bad) js xchg mov xchg pushq adc movabs mov rex.RX shll repnz (bad) iret mov (bad) sbb rol movabs cmc add (bad) mov push or adc pop xchg mov rcrl scas (bad) lea rorl (bad) scas rex.WRB (bad) shll mov (bad) mov adc jnp rex stos rex.WXB int3 adc sub loop out mov in js mov enterq or mov pushfq sub cmp rcrl (bad) or pop pop mov insb or (bad) rex.WXB xor (bad) (bad) mov adc xor cmp hlt xchg in (bad) rorb imul std lods (bad) rorl jmp rorl outsb sbb shrb int3 out mov cltd rex.RX sub mov (bad) xor rcr fmul in cltd jg xlat mov push ss sbb int3 divb xor roll lea je mov ja dec fsubs (bad) pop (bad) imul (bad) rex.XB movabs pop leaveq (bad) xor (bad) cwtl ficoml pushq (bad) decb imul xchg stos rex.WRXB sbb repz cmp (bad) (bad) (bad) mov (bad) loop xchg rex jmpq js (bad) pop mov ja xchg movsb scas callq shll mov rex.WRX (bad) cli out (bad) jge rex.RB xor adcl mov movsl push lret jnp enterq movabs insb mov sahf mov (bad) mov fnstsw shrl (bad) sarb test mov in xor mov out (bad) pushq and js rcrl cmp or insl test mov (bad) cmpsb repz jno (bad) push and out xchg sarl loopne (bad) (bad) jne cltd cmpsb rex.WR shrl xor or lret xor sbbl and mov xchg mov xor out shll jae cmp pop leaveq (bad) rol and jmp fisubl add std shrl not push test xchg movsl pop xchg (bad) jg lods shll callq jge movabs xchg rcl sbb outsl or adcb int sbb repz pop fs divl pop clc (bad) loop mov (bad) mov adc add vcmpsd popfq add mov rex.B rex.B cs push or test cltd cmp (bad) lret repz ss sti imul jg out ffree pop cmp loop rcl xchg add div xchg (bad) fwait rex.WRXB movabs (bad) scas lret (bad) mov movabs (bad) cli or xor sti rorb push je (bad) popfq (bad) (bad) (bad) mov mov (bad) xorl fld mov int3 fisubl push or (bad) hlt sub pop pop mov adc jle jns add rex.R rex.WR lock sahf iret enterq xacquire int3 jp lret jnp pushfq js mov (bad) jecxz (bad) (bad) notl not (bad) mov cmpsl (bad) je cmc cmpl insb enterq push int popfq xchg retq sbb mov cmpsl fidivrl out cmc push add add xor (bad) sub mov lock (bad) cmp hlt (bad) sti jnp rex.W (bad) sbb gs push ficompl xchg adc iret jo cmpsb (bad) (bad) jno out movabs mov xlat add je pushfq xor adc rex.WXB rex.WRX sub insb sub (bad) lahf loop sbb movabs test sub ds loopne addl (bad) jae fwait enterq add repnz rex.WX rex.X or jrcxz fwait repnz and mov out in pop outsl out lock shl insl (bad) add cmp (bad) push retq add pop or cmp sbb movsl int3 add or int3 push out repnz subl mov add xlat cmp cmp mov sub (bad) lret (bad) (bad) fidivrl fsubrl xchg pop lods xchg xchg shll (bad) jae retq ds roll push xor jne jg lea rex.W sbb enterq mov (bad) je,pn icebp fwait lret jnp ja lret rex.WRB cmpl cmc push and mov (bad) jo (bad) pop movslq test rex.R in outsb leaveq rex.B xor int (bad) out movabs fsts shl sbb repnz imul (bad) cmp roll fisubrl fisub (bad) or shlw or std sbb sbb ss mov push push int or and stos cli rorl loop xor cmp jl xlat int imul xchg insl sarl sub xor (bad) adc lahf movsl add push in mov insl push cmp add sbb pop xchg (bad) jno and rex.XB xchg jge lea rex.X cwtl repnz movabs pop fwait fwait stos movabs popfq in out int adcl es loop push cmp rex.WRX scas (bad) mov cltd outsb sar je xchg and retq movabs mov (bad) rcll pushq nop and sub imull (bad) movabs cwtl xchg (bad) rolb mov jbe insb lret jae adc mov out xchg rex.X mov lods (bad) sbb rorl enterq pop movabs bnd movabs cmp sub cmp sub (bad) movabs mov mov rex.B cwtl leaveq movsb std (bad) rex.WX (bad) xchg rex rcll cwtl mov jp (bad) xor or lods xchg shl jo jle je mov (bad) (bad) in (bad) rcll (bad) (bad) sub rex.WRXB rorl out stos pop rcl lea test pushfq xchg sub ds (bad) (bad) icebp xlat sarb jl cmp sbb adc fdiv (bad) insl test mov int3 cmpsl mov fldl sarl test rol lahf xor sub xlat push pop (bad) fstl lret cmp mov rex.WRXB jp outsl int or xchg xchg adc sub cmp xchg (bad) mov cmpl negb (bad) mov lret lock adc mov cwtl xchg xchg sti ja mov movslq xor cmp sbb add xchg hlt or movabs (bad) in loopne and xchg mov movabs (bad) lret add jae in rcll es pop (bad) push jo or mov push rex.RXB nop scas addb adc sub (bad) rex.RX xlat push loop or xchg fcoml rol movabs sub iret mov adc and push out xchg sbb negl jb fsubs rex.XB (bad) xor jle rex.WXB movabs sub jnp ss rex.WRX (bad) pop (bad) popfq data16 rex.B adcl xchg push shll sbb adc rex.WRB sbb pop cmc xchg movabs mov rcll sub (bad) test test fnsave (bad) mov (bad) push adc or rex.RX rex.W (bad) js imul sbb lret mov add cmp mov rorb mov adc sbb test pop loop lahf (bad) (bad) mov xchg mov mov retq rcll std lahf cltd lret leaveq test in rex.WB ss mov pop (bad) in jl jno loop shr mov rex.WRB (bad) xor mov cmp jmpq and fdivr rex cs subl fbstp xor outsb loope add clc or xor sub scas pop addr32 adc repnz jae outsb movabs outsb and (bad) sbb xchg (bad) xor pushq (bad) xchg (bad) outsl addr32 and add pop fcoml push mov rex.RX cmpsb sarl loopne sarl adc es lret pop test pop rex.W xchg std mov adc fsubrp popfq lret mov pop je sarl mov rorl stos cwtl mov jmp data16 xchg fildl fildll rcl clc rcrl jge push std rex.WR (bad) callq jmp fstpl lods (bad) mov jmpq rex.B xchg insl push ror shrl (bad) mov cmp nop movb in popfq xor adc jge xor adc test cli cld xchg xchg nop scas rex.RXB rex.W sar cmp loop mov iret cltd and xchg adc (bad) cli (bad) mov or fsts rcll mov (bad) mulb roll sub fnsetpm(287 retq shrl adc ror fisubr adc in rcrl pop ds push or rex.W cmp shll (bad) jbe mov in callq jl fadds movabs or jge mov test add mov lea repz (bad) cli or nop cltd fsqrt push or retq add cmp stc (bad) movabs push rex.RX jrcxz vunpckhpd jnp test xor lret jge (bad) (bad) jo scas sbb (bad) sbb rex.B rex.XB xchg xlat xor mov (bad) inc rex.WXB sbb fisub pop push push shrl cwtl add enterq and leaveq pop callq repnz mov shll (bad) jmp mov repnz insb cmp (bad) mov adc sahf cmp loopne adc out xor lods cwtl pop loope or pop cmp xor mov mov std (bad) xor cltd loope rex.B lret fimull movabs rex.RB rex.RX shrl pushq imul mov pushfq mov rex iret and pop push xchg rcrl cmp (bad) or sbb lods movabs ds lret jmpq scas js,pt test jns repz jae jno mov rex.WR add add add rcl or fnstsw sub pushfq sti rex.B mov gs sbb xchg fwait (bad) pushfq (bad) (bad) loope mov (bad) add pop mov (bad) (bad) fcoms push xor xor adc rex.RB imul (bad) test movabs pop roll outsl (bad) cs mov jle rex.B xchg addr32 ror (bad) test retq (bad) pushq (bad) fidivrl ds rcrl jb roll cmpsl mov test cmpsb movsb rol xor (bad) jbe xor push cs (bad) (bad) xchg (bad) mov jrcxz mov jne cmp rex.WRX ss movabs cmp loopne (bad) mov rex.W (bad) ja rex.R xor adcb movslq adc lret mov stc in mov mov xchg (bad) xor popfq pop adc add xchg in (bad) (bad) insl rcrl addr32 adc cltd xor adc sbb insb pushfq xchg scas test test mov xchg or rcrl insb loopne (bad) jb jo stos cmp rcll and (bad) (bad) (bad) imul movabs in (bad) (bad) mov add outsb adc hlt rex.RX adc vshufpd or mov (bad) xor and repz (bad) js jl rex (bad) callq movabs jo,pn ss mov jbe lea add (bad) sub sbb fnstenv loope jnp (bad) mov (bad) jge outsl (bad) in (bad) sbb and cmp negl imul rex.RX lods psrlq movabs fimul rex.XB callq addr32 xchg xorl repnz (bad) (bad) and xchg (bad) (bad) fwait (bad) rex fiaddl (bad) cmpsb (bad) xor mov and shll jge push pop sub rorl jl imul enterq adc sbb repnz insl fpatan test mov xor (bad) sahf mov rex.XB and loopne rex.WR (bad) push (bad) sar and scas pop pop enterq pop mov loop (bad) sub (bad) (bad) add pop lret movsl retq xchg xchg int xor retq cltd (bad) lahf fildl or fwait xor repnz (bad) sarl adc sub or (bad) (bad) (bad) mov stos std divl pop callq fiadd add int3 xchg rex.WX (bad) rex.R scas jmpq mov fnstcw xchg (bad) int3 faddl fildll xchg mov mov rex.WR mov je xchg push (bad) (bad) (bad) (bad) rex.WR (bad) (bad) sub sub (bad) imul sbb (bad) rex.WB lret or addr32 (bad) cli or (bad) ficompl add cmp (bad) ja rex.W (bad) (bad) xchg jno fildl outsl xchg add xchg (bad) (bad) rcll sarl je xor cld pushq (bad) rcl or mov jne cmpsb (bad) xor rcl mov push shl fbld xor retq retq push rex.RXB jb sahf iret movabs xor outsb stos imul lret xlat sub pop push xchg sub iret clc sub jmpq sub fiadd mov lret mov ror imul xchg mov adc mov jnp mov jmpq (bad) jno sbb roll popfq rol callq and int3 outsl mov loopne rclb sub rcll xchg or pop test hlt loope (bad) cmp cmp (bad) movsb (bad) stc sahf cmpsl movsl pop sti xor and pop (bad) (bad) (bad) sarl fucomip iret adc pop mov add (bad) movb sahf movsb mov jrcxz (bad) mov movsl pcmpgtb sub sbbl idiv pop movabs sarl (bad) pushq mov add test shld sarl mov sub sbb in mov loop pop repz (bad) icebp roll (bad) (bad) or js fsts sbb imul cltd cmp and sbb enterq rex.RB pop cli add out cwtl and push jrcxz rcl retq lret push (bad) shr lea adc xchg mov add mov or push ja mov (bad) mov mov scas (bad) (bad) out test data16 adc rex.XB outsb (bad) leaveq repnz shrl ffreep (bad) adc maxps add test mov push jle (bad) sub lret ficom cmp (bad) mov fwait stc cs xchg stc insl (bad) sub lret pushfq rex.WRXB data16 sahf (bad) pushfq mov mov movabs adc mov sar add pushq lret mov rex jne callq jg retq xchg mov xlat cltd and xchg or iret out rex.RX mov roll rex.RB (bad) (bad) jl push xchg loope pop clc loop cmpb (bad) cltd pop xchg xor shr jb rol sbb (bad) (bad) and xor insl rcl rex.WXB (bad) pop cld shrl cmc mov shr lea (bad) (bad) sar sahf mov and rorl rex.W es in retq sarl cltd fsubs lret mov xor xchg (bad) stc (bad) std (bad) xchg int mov stos movabs add cmp mov ss fldenv (bad) cld movabs int sbb and jnp or xchg test enterq movabs (bad) (bad) iret mov leaveq sub movl sbb rcll and rex.X mov out mov mov push mov sub rex repnz sbb fnstsw roll ror sbb sbb mov or mov test rcrl (bad) (bad) int rcrl rex.WRX (bad) mov roll jmp (bad) push out movabs mov outsl lea retq rex.RX mov ja mov (bad) shll cmp (bad) xor movabs (bad) mov test mov sbb rcll add pop movsl pushq insl jg repnz rex.R ds cmp or test mov mov (bad) add out in push xor (bad) sarl jne rex.WXB movsl mov cmp fs (bad) (bad) pushfq push sub rex imul rex.WXB loope xchg mov jmpq rex.WX int3 (bad) clc retq sbb test mov ficomp shll and leaveq (bad) (bad) pop rcll sub rcll clc hlt cmpsl (bad) scas jp cmp rcrl lea (bad) incl xchg rex.B sbb push lret and in add push mov mov lret hlt pop or xchg add (bad) mov xchg sbb lock outsl shrl (bad) push (bad) clc mov rcr rorb shrl or and rex.WRXB enterq xchg ror mov adc and mov (bad) add jle callq rorl (bad) cmp (bad) (bad) mov sar int cmp mov stc rex.W outsl sbb (bad) and fild and stos rex (bad) (bad) xchg cmp lea data16 (bad) addb fdivrl rex.B rex.WRX cmpsb fidiv or shrl sub xchg (bad) jl shr mov lret mov cmp rcll mov (bad) outsb nop cmp lahf rex.WXB and rex.XB orl jne add rex.WX lret (bad) lret add mov roll sahf mov retq xchg jae out shrl lahf roll xchg rex.RXB cmp cld cwtl pop rex.B rex.WR jns test cmp mov shll movabs stos mov lods lret imul cwtl repz movsb mov loop shrl cmp fsubr in loop rex.X rex.XB lock (bad) (bad) pop sarl xchg mov jnp fstpl sarl outsb scas rex.XB rex.WR mov rorl (bad) pop or test pushq repz ja shrl and scas nop int (bad) mov test or jle push (bad) movsb or fnstenv pop mov iretw mov sub sub (bad) rol cmp (bad) in add xchg int3 xlat retq rorl mov (bad) (bad) adc (bad) (bad) push pop test (bad) sub xchg adc sti outsl (bad) add sbbb (bad) icebp retq pop fwait push je xchg ds rorl pop sub ror mov rex.WRXB add mov (bad) rex.WX sarl cltd gs sbb loop (bad) js and xchg rex.RX movabs pushq rol (bad) outsl xor mov adc movabs repz cli int movslq out jne insl rorl mov (bad) rex.WRX rex.X fcomi pushq lret rex.WRXB sarl rex.WB mov int3 xor fdivrl mov in (bad) push (bad) xchg mov cltd clc mov (bad) int or je jmpq retq sub (bad) and retq push cmp flds lahf xchg xor retq test sbb rolb loop retq fmuls (bad) cmc scas pop (bad) sub xchg cmpsl imul (bad) xor rex.W bnd lret or (bad) push jnp mov or iret xchg pushq mov addr32 sbb cmp movabs retq rex.WB pop int3 pop mov fisubr rorb pop out mov (bad) (bad) or pushq push (bad) xchg add lret repz (bad) negq stc rex.B ds or leaveq lret lret callq sbb iret loope popfq shrl stos jrcxz mov cmp rex.WRX jle mov pop push vorps jb in jbe or rex.B (bad) mov mov or test outsb scas rolb (bad) (bad) popfq out out mov rex.RB xchg rorl in stc insl movabs rex.WRX repnz pushfq (bad) jae repz cli push imul jns enterq adc jno sahf add rex.WXB mov push shl (bad) andl fsubrp mov movslq gs clc jnp sbb sub fstps jmp enterq lea rex.B mov adc movabs movsl sti add (bad) xchg ds int xor (bad) fcmovb cmpsb sbb mov (bad) mov and shll imul pop rex.WR (bad) imul mov scas sarl movsl cmc jg rex.B (bad) stc shll icebp mov push rex.XB stos xlat xchg outsl and callq (bad) mov xor or and pop xor jg xchg add mov mov pop stos fwait stos sub cmp mov rorl push stc movsl lods (bad) mov (bad) shr (bad) fldcw (bad) fwait movabs shl sti pop movsl (bad) push imul cmp stc adc sub add jb in out xor fcomps xor iret mov (bad) mov mov (bad) (bad) in rorl outsb fucom and sarl movabs sub cmp movsl mov in xor pushfq mov vminpd clc jmp jmpq fdivl ljmp movsb xchg lahf lahf push movabs int3 outsl add jrcxz rcll pushq adc (bad) mov ror (bad) nop outsl ffree or (bad) rex.WRX or cmp and rcrl movhps (bad) fstpt lret add rex.RX mov mov mov enterq and rex.B jae or sbb (bad) add shr imul out fadd (bad) out xchg frstor sarl pop repz pushfq sti pop rex.WB sbb xchg mov movabs xor fldcw sub jp mov popfq shll (bad) sarl fiadd test roll jnp gs movsl sarl shrl nop mov sub out xchg icebp (bad) ds xlat cmp pushq rcll rex.RX pushq int add lock xchg rex.B (bad) (bad) (bad) movabs add (bad) jp jbe (bad) out and jge mov icebp xchg adc xor movabs mov xchg rex.W out push test jo pushfq pop rex.WX fwait xlat callq movsl cmp mov movslq (bad) insb nop in in movabs insl test repnz jnp (bad) test cmp movabs decl js fwait (bad) and mov mov mov (bad) ds (bad) xor rex.R jge mov rex.RXB cmp scas incl fsubrl pushfq decl jmpq adc in pushfq shrl mov jle ja jae push jrcxz cltd rex.WRXB sti mov xlat rex.WX (bad) (bad) fcmovb gs adc loope (bad) and divl es and cmp pop callq (bad) test repnz movsb rex.WRX rex.XB rex.RXB (bad) mov (bad) (bad) addr32 cmp (bad) vpaddb (bad) rex.R rex push mov sbb push push rol enterq jo mov pushfq rex.X jg lods cmc add adc in icebp jge gs mov sub es xchg xchg sub out rex.RX push add xor je jne mov rex.WRXB retq (bad) add mov leaveq push add (bad) and lret repnz rex.R data16 push loope jrcxz sbb jmpq out callq adc (bad) add jo cwtl movb rex.W lock add es xlat mov test or std mov notl rclb lea push or or pop loope xlat jmpq iret int lret pop rex.RB xchg rex.XB mov rex.B cmp or out mov icebp cwtl adcl outsb lret mov xor jns xlat mov out pop callq add fbld xchg fsts (bad) jbe pop jmp movslq rorl (bad) jb fnop mov xor repz icebp fcomi jne rcll (bad) ror adc mov vminpd js rex.WX push mov xor or iret (bad) (bad) (bad) adc imul rex.W pop and clc (bad) mov imul mov movsl repnz mov sahf shr scas sub (bad) insl movabs (bad) in mov jp push pushq (bad) nop and movsb (bad) rex.RB push jb (bad) movabs or (bad) iret fidivr push rcrl in cmpsl nopl mov push pop out retq sbbl shr pop movabs mov and sti fsts enterq cld pushq out test pushfq mov jle loopne rex.RXB pushq xor (bad) mov lret movabs rex.WRXB insb (bad) (bad) mov sti negl push xor pushq (bad) (bad) movsb (bad) fldcw gs xor adc ds mov movabs iret (bad) sbb xchg mov iret rex.RX sub shll sub rol rex.WB rex.RB xchg or add out mov test (bad) (bad) pop xchg lods (bad) (bad) iret je (bad) jl xor repnz (bad) loopne xchg pushq pop jmp rex.WR rex.RXB jmpq sbb shrl jbe rcll imul (bad) lea pop mov insl mov (bad) lods shrl cmp mov pop andb cmc int3 roll jle fcomps (bad) test (bad) adc xor or adc in (bad) xchg mov ror fs imul shll mov mov rex.RXB fwait cmpsb xor movabs rex.X cmp jnp pop or int3 cmp cltd pushq fstl fdivrs mov (bad) fsubrp (bad) rcll (bad) pop rex.WRB (bad) (bad) int outsb (bad) xchg (bad) (bad) lret push or (bad) (bad) xlat (bad) cmp (bad) jns shl hlt fsubr mov add sarl testb (bad) or (bad) cwtl je pop ds jg or iret mov rex.RX sbb jp movabs rex.B cli loopne fwait sub int pop mov repnz mov cmpsl xor xor int (bad) or movabs enterq sbb sub push ror (bad) xchg mov shl (bad) jne or push xor xor sbb xchg jmpq push lahf cs (bad) xor add leaveq rcrl repz cmp shll xor xor rcrl sti pop sbb pop cltd lret xchg fsubs rex.W in push mov (bad) or fwait mov test xor rol xchg (bad) shrl loop movabs rex.WRB rcll and shll rex.WX negb and sbb rex.WX push push test movslq mov jns fisttpll imul xchg in sbb mov sarb sti sbb (bad) callq pushfq (bad) rorb mov cwtl adc lret add in jae lahf insb and mov enterq in sbb rex.X movabs cmp (bad) xor leaveq test fldenv or cmc jno test callq pop stc hlt int xchg (bad) lret lods xor stc (bad) test rex.W pop rex.RB xchg (bad) std roll (bad) mov push movsb (bad) (bad) retq (bad) fimul (bad) (bad) jmpq std movslq rex.WR test pop (bad) push fistpll (bad) out sub sbb and imul test add pushq fadd jl cmpsb lea int out loope cmp movsl (bad) cmp (bad) iret xor mov jl adc outsb or or cmpsl rex.RX stc rol xchg add sbb add rex.RB cmp mov rex.XB shl mov test push push pushq rorl pushfq sub lret mov mov nop xchg out in xchg sbb fistpll sbb scas xchg and (bad) mov loope rex.WR xor shll (bad) fnstsw xchg pop mov addr32 xor sbb rex.WB cs retq test mov pushfq retq add add shrl rex.RX pushq (bad) lret adc lahf mov or rex.B je retq (bad) pop ficompl mov mov rex.WRX clc and rcr or mov jae fidivl sahf callq cmp repz lahf out (bad) (bad) sarl iret testl adc mov lahf rcll (bad) je movsb add cmp jmpq (bad) mov imul adc xor sub (bad) jmp or ficoml retq shll out cld lahf rex.R cs xchg mov xchg out mov (bad) mov sub (bad) callq xlat incl mov je (bad) mov lods push or cwtl jg jmp (bad) adc fisubrl rex.WX repz in mov xchg or xchg mov (bad) jno lea pop test (bad) (bad) rex.X enterq repz (bad) jo enterq mov and xor cmc rex.W rex.X movslq icebp js jns data16 iret clc fmull loope jo mov or add xchg jp iret (bad) cmc and cmc push (bad) xchg scas (bad) jbe loopne lea xchg sub sti push or cmp lahf divb adc scas and (bad) xor and (bad) in (bad) adc sbb xlat movabs lret (bad) (bad) leaveq jg xchg and fsubrl rex.RX rex.WRXB icebp rex.B int3 xchg pushq icebp cld xor xor xor (bad) add stos sarl adc retq out rex.WXB lea test (bad) mov (bad) dec rclb fildll push rex.X jo rex.RXB loop decl jno int3 (bad) test es rex.WRB jns (bad) cld lret rorb icebp mov int3 sbb jrcxz (bad) insb adc repnz mov je rex.RB lret mov lret icebp shrl rex.WR out xor pushq xor xor or rclb cmp mov retq cmpsb rex.WX pushfq or jp mov sbb out mov sbb rex.B retq pop sti (bad) fs rorl sub sbb ja fldcw movabs data16 rex.X rex.WXB or test (bad) scas mov sbbb (bad) out rex.RB std lea or (bad) (bad) xor pop pushq ror mov (bad) (bad) xchg jp jo andb fistl fildl xor insl xor shrl (bad) and in rol lods push jge adc fwait loop cmpl es sahf mov cwtl stc and out in sub movabs xchg rex.RB (bad) std subl shrl adc std lock je int and cmc int cwtl mov shrb iret iret (bad) test cmc xchg loopne xchg sub mov add xor (bad) sahf addr32 push sti rol or jmpq mov fstp int fsubrp (bad) mov add data16 (bad) outsl and (bad) rorl (bad) pushq test mov cmp cmp fs jno clc mov push jl jge rorl (bad) out push ds xchg mov pushfq mov jae out lcall sbb shll xor scas mov mov (bad) roll (bad) mov leaveq add js lahf fsts sbb fist or cs (bad) int (bad) in rex.WX lret jrcxz add shr iret push frstor shr (bad) (bad) (bad) imul movabs cld mov popq adc rex.WRX mov fwait cmp (bad) popfq (bad) fstps jl mov (bad) (bad) add xchg jrcxz xor test scas (bad) (bad) (bad) adc ffree clc (bad) je fnop (bad) mov jb jnp (bad) mov or xchg fstl nop xlat mov lock (bad) fcom jb xor out repnz stos mov movslq fmul jns pop movsb sbb pop mov xchg rorl cmc enterq (bad) rorl xchg lret push es (bad) rex.WRX xchg rol mov xlat add jno shll push (bad) xchg in sbb iret and cltd cmpsl cli mov sti xchg xor faddp adc sub retq cltd repz and movabs movabs imul mov (bad) std mov add (bad) lret mov (bad) shll movabs jbe mov shll mov scas rex.X (bad) (bad) lret cltd mov rex.RXB (bad) rcrl scas jl movabs cli insb shr insl jmp gs add or mov rorl xchg loop (bad) out fld jl lods rex.WXB sahf es xor add push shrl incl out (bad) jrcxz shll rex.WRB imul xchg rcrl jnp fimull push retq insl rex.X punpcklwd lock adc add xchg mov xchg loopne fadds out clc imul retq insb rex.RX xchg loopne pop xchg rex.WB or bnd fstpt repnz jb std rex.RB sarl jl xchg jne (bad) sub rolb mov sarl lret leaveq (bad) rolb rex.WRX hlt popfq mov pushq and xchg cmpb mov (bad) rex.B addr32 enterq xor cld cmp fisub insl (bad) in (bad) push mov adc icebp and sbb cmp rex.RB pop xor sub add test or mov imul (bad) xlat (bad) fidivl sub (bad) and (bad) fadd stc cli sarb xor jge scas movsb repz (bad) mov shll (bad) pop add rex.W pop sbb and sub and cli lock cmpsb and or loopne mov mov mov retq repnz (bad) rex.R pushfq iret shll mov mov (bad) cmp add adc jle jns icebp lret push lret and cmpsl rex.RX jle mov movabs movl test adc sti rex.WR in cmpsl mov movslq mov mov jo sti icebp push movabs (bad) sbb (bad) add lock icebp (bad) cld shrb add xor pop pop jmp rex.W add (bad) jp int3 (bad) out mov (bad) add jo (bad) (bad) imul callq xor mov xor repz cmp xor rex.W (bad) movsb (bad) pop andl lock cmp (bad) adc or adc xchg xchg rex.XB jbe (bad) mov add pushq out sahf (bad) (bad) retq add add rorl (bad) sbb or fiadd xor jmp (bad) insb xchg cs lret mov push mov xor (bad) rex.WRB rex.WRB jo leaveq jno enterq pop mov jbe shrb cli icebp rex.WRX es repnz mov adc lret fimull fstl (bad) int mov lret mov lret mov xor insb push rex.R sar (bad) mov mov xlat sbb imul mov xchg sbbb (bad) rex.WRXB pushq xchg xbeginq cmpsb cwtl xchg mov pushq mov notl in sub out rex.WRX loope sbb (bad) (bad) xchg callq xor repnz cmpl lods or (bad) in jb sbb (bad) fcompl (bad) fadd hlt nop adc lock bnd fnstsw pop movslq jno test int3 sub cmp adc repnz mov cmpsl imul rex.RXB sbb mov rex.RB in pushq addl push xchg (bad) rex.WRB cs (bad) popfq add sar add mov (bad) jrcxz xor push rex.X jno xor je vcvttsd2si jmpq out repz fcomps lods jae xchg adc add (bad) jl test xor mov or stos cld cltd (bad) cli int3 lock es mov iret cmp (bad) fdivrp sarl ficompl jae (bad) jae push push add shrl movabs push cli incb xchg (bad) rex.WXB rex.RX fsub fsubrp imul add retq add cmpsl (bad) pcmpeqb jge push lret sbb add int3 cmc callq mov lods jbe adc push test (bad) rex.WRB cli xchg pop cmp jno sbb and sbb or js add sbb jbe pushq sub cli (bad) jp je stos and or add (bad) fdivs (bad) xor out sub rcrb jno test push push adc rcl out or cld loopne (bad) repnz fsubrs roll and movabs sbb jnp data16 (bad) je adc pushfq hlt and rex pop lea pushq xchg sarl fmull (bad) cmp sbb sub outsb rcrl mov out rex.WRB fwait shll mov adc push sbb pushq xchg leaveq jnp pop rorl movabs outsb (bad) rex.WX push pop roll lret mov lods rol int cwtl and sub loope xchg mov rcrl popfq jmp rex.WR rex rex.WRXB cmc rex.RB pop (bad) retq (bad) xor jmpq es loope cmp pushq xchg shll sbb sti jl add rorb (bad) lods (bad) roll (bad) mov push pop pop roll ss sub adc push movabs (bad) xchg movabs sti mov pushq ror mul mov mov xchg sbb push roll fcomp or int ds (bad) sbb addr32 adc (bad) sahf cmp xor xor leaveq rol pop repnz lret adc jmpq rolb adc add shrl (bad) divl rex.B pop (bad) retq orb xchg and iret jge or jno adcl mov in popfq mov xchg adc (bad) (bad) mov retq xchg clc add insl (bad) cmc repz xor add stos (bad) push movslq (bad) lock rcll rex.WRX gs sarb mov adc and (bad) addr32 (bad) rex.WRB movabs cld sbb mov sti xchg (bad) std sub scas xchg xchg stc outsb outsl (bad) jae (bad) (bad) int3 and adc ja lret rex.X (bad) je jne mov sbb sarl (bad) sub mov test (bad) outsb xor (bad) movsl xchg cwtl stos test mov insb fcompl lret or adc xchg out add rorl adc jno (bad) rcrl mov jno repnz mov rex.WB rex.RX rex lret rorl jbe repz rex.RX (bad) xor movabs cmp cmpsb sbb jns lret (bad) push mov (bad) mov xchg rex.RX or adc xor and rex.WB outsb mov fs fstpl shrl jrcxz roll (bad) gs xor sbb xchg add movslq rex.XB scas int3 addr32 add fldenv std cmp test mov shll pop or xorb stos ja (bad) sarl or (bad) imul xchg jno out rex.WRXB (bad) mov xchg stc push rcl fcompl mov (bad) rorl jno or outsl pushq (bad) div jno (bad) xchg in ss movabs (bad) (bad) iret (bad) rcrl ja (bad) pop loop repnz adc (bad) hlt repz mov (bad) (bad) fisubr or lret je test icebp push jne rex.RB add (bad) jl enterq (bad) movabs (bad) fxch idivb or testb adc mov pop (bad) lahf leaveq pop repz (bad) andl push out jl cmp test (bad) (bad) pop jp jo fistl andb fnstcw neg add cmpl (bad) js imul cltd fsubs mov outsl retq (bad) xor jo pop xor adc rol rex.WB or test movabs adc sub xchg test add rex.WR (bad) cmp rcrq mov js repz imul pop (bad) xchg insb add in (bad) mov leaveq in loopne pop movsl rex.XB scas (bad) insb xchg add add (bad) ror imul ja mov (bad) in fsubl adc out negb rcll add and retq gs sub sub jae rex.WX rex.B (bad) int (bad) jno stc pop add jae repnz fildl jrcxz pop pushfq push xchg xrelease xchg mov (bad) (bad) fdivp cmp adc mov (bad) or movsl enterq adc sbb (bad) jne mov sbb (bad) rex.WRXB dec mov rex.WR sub add js cmp outsl addr32 rorl cmp jno sub in or sbbb icebp rex.X mov shlb (bad) sbb (bad) (bad) mov jl add pop movabs shrl movabs lret push lods add xchg imul add std add popq add out adc (bad) out mov mov sub cli pushq js (bad) movsl pop xchg rcr push add jmpq fnstenv push in andl jge rex.WB fiadd jns stos fbstp xor rex.WB sub cmp pop jb callq mov push cmp (bad) mov xor cmp sarl (bad) and fcoms rex.WRX mov pushfq sub mov push leaveq (bad) jo in retq cld sub (bad) test sbbl sahf rol rex.WX xchg mov repnz shll push (bad) cmp gs fsubrs or (bad) cli mov stos jno (bad) ss pop mov push rex.RXB fs mull rex.WB std orl ds mov fdivrp mov cmp hlt (bad) or jg mov mov sub icebp or cmc mov shll cmp (bad) ficom rcll jmpq push stc mov mov rex.B rex.RXB fstpl retw xor mov std stc movabs jae (bad) add mov cmpsl mov rex.R cmp hlt scas and scas mov sub add lret std or lret (bad) movabs or pushq rep cmc movsl data16 jmpq (bad) stc roll imul (bad) fcompl lret mov and nop stos movsb add xor (bad) cmp push out cltd je rorl sbb push add jge callq inc jp (bad) retq sub rcll xor imul nop callq mov mov in or mov imul jmp (bad) lret pop rex.X rex.B in cmp fsts imul sub cmp popfq test sub es xchg lods add jrcxz movslq mov mov sbbb test cmp rclb mov mov cmp rorl insb lods jns subl out xchg enterq rcll xor shlb std rcll xor and xor rex.RXB rex.WR clc (bad) cli (bad) scas repz (bad) xchg in hlt rex.WX (bad) jl push pop mov jmpq sbb sbb rex.W sub pop push scas (bad) mulb jae (bad) xlat and push xchg loop adc xchg or std stc pop (bad) (bad) fnsave rex.WXB jl sub xchg push (bad) (bad) push rex.RX and pushfq pop out loopne movslq xchg sbb movsl mov rex.WX bnd movsl and icebp xchg pop std jmpq (bad) (bad) add cmp sbb movslq lock and shrl mov (bad) testb mov mov mov (bad) xchg xchg xor sbb sub fdivr (bad) xchg sub or shll mov xchg pushfq shll pop add roll sub push cmpsl push rex.X push push rex.W leaveq rcrl sub (bad) sbbb enterq cmp sbb add clc sub ds mov (bad) movabs (bad) test (bad) rex.WRXB popfq push cmp (bad) push rex.B lea fimull (bad) movsb gs mov (bad) ja adc add push sub in rex.WRB fnsave sbb mov cmpsl iret jns pop xchg fldcw leaveq mov int (bad) rex.B jmp xchg mov std jp rex.RB movabs (bad) (bad) (bad) sbb jnp (bad) rex.RXB lea rol and rex.W loopne shll adc rorb (bad) jne rex.WRXB cld fisubrl adc es rolb xchg iret jmpq rex.RB sub add rex.WX rex.R mov jne cmp push mov (bad) out (bad) (bad) mov loopne cmpsl cmp movabs (bad) imul add mov stos movabs lret rex.XB in rex.WRXB xchg addl mov retq sub xor cmp mov jnp (bad) xchg leaveq ja insb xchg cwtl mov enterq insl cmp int data16 mov jnp stc cmp cwtl xor (bad) (bad) adc (bad) (bad) pop sub rex.R cmp rcll jae jg loop je cmp adc rex.WRB cmpl repnz movabs rex.R rex.W (bad) pop jnp mov (bad) sarl or mov rex.WRX push insl (bad) mov mov add rcl cltd mov rcrl pop js (bad) pop hlt pop sahf (bad) jnp in mov test xchg in gs (bad) iret (bad) jo adc clc adc jl mov (bad) push pop test (bad) rcll shrl mov stc movsl add cwtl mov rorl jo std add and and cmovge mov xchg int3 push jmp (bad) loope insl xor test xchg mov cwtl movabs es in shll jmp fucomip push (bad) fistl xchg (bad) rex.WRX xor insb sbb fildl repnz int3 mov rorb (bad) js mov pushfq and rex (bad) scas movslq sarl iret rex.RX pop fdivrl mov add std sub ficomp pop fndisi(8087 (bad) test and int3 adc rolb sub xchg fnstsw data16 lods popfq fnstcw mov (bad) rcrl cld mov lret xor leaveq movabs int3 cmp jns mov movabs rex.B movsl icebp out xchg ja push callq push (bad) cmc clc popfq pop cmp mov jno xchg lret (bad) (bad) cld or sub stos cltd rex.WXB sarl add sub or add xchg std (bad) scas movsb xor je data16 adc mov xorl repz (bad) xlat rex.WRB mov or adc fs jo and lret sub out enterq (bad) cld (bad) mov loope mov repz (bad) mov (bad) rex.B addr32 rex.RXB in loop sub and data16 int adc leaveq outsl fnop jp jle and fwait lea mov xchg (bad) (bad) rex.WRB cmp vpand (bad) retq pushq jg callq out add (bad) mov (bad) (bad) cld (bad) fstl cs (bad) xchg add (bad) movslq push xor (bad) jns pushq iret mov sbbl stos callq jmp ja int3 rex.WRX lea jnp lret xor lret mov mov jbe jp sbb cmp callq stos cmpsb rex.RX xchg test mov leaveq (bad) and pushq enterq (bad) jae (bad) mov xchg and pushq and mov rex.WRX icebp cmp imul test bnd (bad) jns mov xchg cmpsb mov rex.RXB in jp fwait mov mov retq rex.WRX adc rex.RB je hlt add int imul rex.XB retq enterq in jo xchg and leaveq int ja lods (bad) fsubrs (bad) repnz mov sub popfq test (bad) fxch jo mov outsb add mov push jge int3 pushfq push (bad) loope repnz movsb int3 jae sahf (bad) stc push add mov rol mov icebp testb or loope (bad) sub mov add rex.WRX lods or lret rex.B rex.WXB cmp xchg xchg fldenv es rex.WX data16 mov add add adc (bad) sahf xor cwtl jbe mov cmp mov test xor jmp xchg or iret movabs movabs (bad) rex.WXB jmpq jge xchg or fisttpl adc (bad) jp enterq cmpl (bad) xor fcomp mov rcl out (bad) je cmp (bad) xchg lret stos in adc (bad) cmp xor xor pop (bad) vmaxsd lret in fmull rex.WRXB jbe rex.B (bad) or (bad) mov jae fcomip cmpl insl sub rex jbe cmp leaveq jmp mov test (bad) add gs hlt rex.R rex.X stc adc lret xor rex.RX and mov test repnz adc lods out mov test (bad) push lock rex.RXB mov lahf jae xchg fstpl sbbl repz cmpsl rex.WB (bad) cmpsb and rex.R mov or (bad) lock test mov xor add sbb leaveq retq rex.B or hlt push rex.WB lock mov in mov (bad) enterq fstp int3 clc cli sbb cmp (bad) int sub (bad) or scas in (bad) es hlt shll add retq test fsubrs loop shrb cld mov int mov scas scas sarl rcrl stos jmpq retq xchg orw popfq adc popfq lods sbb (bad) cmpsl in negl rcll rorl sbb pop stc shll cs insl (bad) jmpq (bad) test (bad) test or popfq adc incl mulb (bad) or xchg rex.RX stos xorb sub loop movl movabs int hlt rcrl (bad) lea movabs std in xchg lea and stos or (bad) mov (bad) loopne roll or sub shr (bad) stc and fdivp mov xchg pushfq rcr cwtl jno repnz add cmp cmc movabs mov cltd (bad) rcrl cmc shr and add (bad) (bad) xlat repz retq repz adcb movabs rex.B gs push xchg add cli push stos (bad) mov shrb rex.WX int mov ds mov pushq sbbl ja rex.WX std or push vpsubd pop rex.X (bad) ror test sbb (bad) mov (bad) mov (bad) enterq movslq (bad) rex.WX int rex.WR push sub rex.WRB ds sbb (bad) sahf icebp nop (bad) mov lock mov (bad) or rolb std push sbb push jge out cmpsb mov (bad) jae or gs cmp sarl sub shrl (bad) push std cmp (bad) cli loopne adc mov and (bad) jno rex enterq xchg (bad) push lock add pushfq loop shl add xor (bad) jmp shl and jp sub fcomi ss cmp jmpq sbb rcl sbb push stc enterq (bad) (bad) mov sbb push mov rex.XB xchg pop cmpsb xchg fnsave (bad) (bad) movabs mov or (bad) fwait adc ja xchg (bad) add (bad) sahf xor fstl rorl cmpb in push jno sub sub and add cmp xchg (bad) (bad) push lret sarb mov add push rcrl pop icebp roll cmp sbb pushfq rex.WRX andl fadd cltd mov data16 (bad) icebp ss lret fistpll std retq jmp (bad) mov insl fadds mov stos sti nop out shll outsl (bad) sahf (bad) scas (bad) xor (bad) jo mov rex.WRB movabs adc lret mov jp xor add pop xor rcll jg jbe (bad) out mov rol ja rex.WRX (bad) sbb fldl and (bad) shrl (bad) data16 repnz cs negb add cmp rcrl (bad) jne push mov mov (bad) hlt idivb sahf or rex.WRXB jmp sbb rorl jle (bad) mov iret out rex.X sub adc add icebp xor callq mov sub lret (bad) jbe int3 rex.R push leaveq push lret sahf mov (bad) sub cmp jb rex retq (bad) xchg adc fld lret (bad) adc out push pop (bad) (bad) repnz adc fstl in fndisi(8087 jge or mov roll pop adc xor roll or sbb and add repnz adc std mov xor data16 clc (bad) lock xchg sub fs pop sub loope cmp fdivrp cmpsb icebp cmp std xchg adc xor rcrl jno movb rex.XB rex.W pop (bad) clc (bad) mov rex.WRX clc idivl jmpq rcl rcl sbb (bad) sbb repz fistl rex.WRB (bad) sub cltd shl cs sbb lahf (bad) out data16 xor (bad) (bad) mov popfq and rcl leaveq movsb fmull sbb mov out (bad) cmpsl js sub mov fmull or xchg addr32 pop repz shl mov lret xor int3 (bad) cmpsl int rcrl insl xor sub sub mov (bad) fnop cmpsl loope cmp mov mov lret or clc movsl fsubl rcll add (bad) outsl shl enterq (bad) rol rex.WRB je (bad) out mov or cld rcll mov std and enterq retq mov or and mov out cmp callq movslq (bad) pushfq (bad) rcll scas rex.X xor mov adc in ss and repz rex.R idivb (bad) mov (bad) jge cmp gs mov cli leaveq mov mov movsl movsb jb cmp xorl (bad) add pop fisubl (bad) jrcxz shlb scas int3 fmull xchg rex.RX adc or rex.WRXB xor cs xchg adc shll nop in jg iret jno testl rorq cmp movabs xchg (bad) (bad) fisub (bad) xchg jo (bad) loop imul rex.B roll (bad) (bad) (bad) mov sarl lret jne test sub (bad) cmp cli or cwtl cmc test (bad) sti int fld or (bad) xor (bad) mov xor cmp rcrl cmp mov jbe jmpq sub movslq pop add loope mov or mov jl sbb (bad) sbb std lret adc (bad) testb fistl and out mov sarl and fdiv out mov and fnsave mov mov xchg leaveq push (bad) jg lods cmp (bad) jo lcall retq fcoms test and pop lods jnp sbb stc movslq lret (bad) in (bad) or movabs (bad) jae mov pushq shll in xchg jb mov es xchg mov fimul (bad) adc (bad) mov rex.WR outsl and lret ficom mov (bad) lea (bad) rex.WRB xor mov mov repz scas (bad) lods loopne jo (bad) rex.WRX or xchg mov and jnp movabs test adc jb mov pop cwtl rcl or icebp and iret xchg rcr add sarl (bad) jge test jno (bad) push ror rex.RX out cmp and push movsl pop push xchg rorl sbb rex.WB fld fs xor imul shl lods test imul in push (bad) sbb std fild add or xor sbb mov (bad) sbb movslq or pop adc lods lock cmc out sub (bad) rex.XB repnz fadds jno pop xchg mull enterq rex.WB cmpsb rex.WRB xchg jge decl repnz loop adc and xchg negl rex.WX (bad) mov (bad) cld leaveq jle mov xchg (bad) and clc (bad) jns jmpq pop mov rorb lock mov test rex or fldenv rex.WX add js cmpl jae xor jp push loope cld xlat cmp std add int3 out and xchg and lret mov cmc sub adc std mov lret fbld mov lods (bad) jmp and mov mov stc jbe movabs mov hlt std mov repnz leaveq (bad) push rorb andb enterq sbb sub rex.R iret loope vpshuflw (bad) add pushfq sbb loope (bad) in or rex.WR icebp rex.R loop (bad) xchg int3 and mov (bad) (bad) (bad) adc es (bad) xor push cmpsb rex.RB pop mov jrcxz fnstcw in divb rex.WRX (bad) xor (bad) mov repz cs push test jp rex.WRB (bad) sub xchg xchg fwait or (bad) rcll pushq retq rorl imul xor (bad) andl cmpsl (bad) (bad) (bad) in shrb xchg jns,pt iret xchg (bad) ss enterq xor movabs rex.B cmp hlt mov rorl cwtl add xchg imul push add mov (bad) iret (bad) and rex.WXB gs movsb fstl bt sahf mov (bad) sbb (bad) (bad) ss or data16 sub insl roll cmpsl (bad) push (bad) xchg cli shrb jno enterq int ficoml bnd sub sahf pop scas leaveq mov lea jns loope sahf ds out (bad) mov xlat ss (bad) repz insl jns movabs (bad) lahf sbb jge scas outsb in sub add rex.RXB fistpll (bad) (bad) adc out ss jb (bad) nop (bad) lahf jl and rcll rex.W push (bad) (bad) mov pop stc add imul test jbe enterq push sbb adc pop repz stos adc jmpq cwtl loopne xlat retq sbb rex.WR out pop xor cmp mov mov xlat data16 divb fistpl (bad) push test in sub mov retq int pushq and movabs xor xchg adc mov rcrb jl or vsqrtpd movslq (bad) push adcl rex.WRXB movabs rex.W in rex.RB int3 clc movl rex.RX mov lock xor rex.X (bad) push enterq (bad) scas mov (bad) movsb int3 sub rex.RB (bad) push rex.WRXB addr32 insl mov cltd push rex.XB sbbl add mov sub mov (bad) and add sub or ror imul add movabs (bad) (bad) pushq (bad) roll sub adc rex.X shl nop (bad) cwtl movsb mull repnz add rol shrb sahf jne (bad) lret mov stc sub rcl lods sbb xor xchg push in (bad) rex.RB gs imul out rcrl xor rorl ds (bad) rex.WR (bad) jno jge js (bad) mov rcrl (bad) in fstps movabs sub sbb (bad) adc (bad) lret or pushq lret jne jb imul pushfq sbb (bad) cltd pop movabs jae fisubl cwtl xor cs rcrl xor (bad) mov int lret jne (bad) rclb sbb callq (bad) lret outsb xchg xchg xor (bad) fidivr ficoml int xchg and xchg cmc pushfq jb or in cmp push jle pop pop sub movabs pop insb pushfq xor (bad) jbe (bad) mov sbb callq pushfq xchg vcvtsd2ss cmp mov (bad) cmc test rex.WX sbb movabs xchg cmp ss add movabs xchg shll jmpq (bad) icebp pushfq jnp lahf mov rex.XB lods std sbb fild lock mov rcll or (bad) jno (bad) outsl rex.B loope mov adc xchg fldenv stos (bad) (bad) std insl mov divl pop sti pop (bad) pop push stos mov lods xor shrl sahf pop pushfq and repz shl enterq pop cli rcll sub (bad) sub adc xchg (bad) (bad) test pop push shl mov mov fidivr gs (bad) rcrl outsb sub test pop pushq addr32 imul pop xor (bad) jo fldl roll test lahf out cwtl (bad) fiadd fimul rorl (bad) mov callq push rcll mov imul rcrl (bad) pop shrb rex.WRXB jno adc sbb mulb (bad) pop sbb cmp sbb (bad) outsl add mov outsl shrb notl jae add adc xchg rcll jp test sub sahf lods adc int3 mov mov mov rcrl imul scas cmp (bad) fwait xor shlb mov fcomi stos mov mov rex.RX callq cld rcrl (bad) mov xchg cwtl lods sarl mov sbbb add mov mov or movabs (bad) hlt enterq mov pop jp pop jrcxz mov sbb cvtps2pi movabs push rex.RXB rex.X jl rol fbld xacquire rcr test or shll stos add rex.WX xor (bad) push pop xor (bad) sbb (bad) test (bad) rex.RX rex.WRXB jne mov fldcw sbb (bad) sub pop jmpq fsubl cs lret xor rol popfq repz mov sar jnp sub rex.WB rex.WR sbbl test outsb or stos cli push movsb icebp sti mov pop ror push mov ror jne iret jl sub stos cmp xor sahf loop rex.B jrcxz or (bad) repnz icebp mov mov cmpsb sub lret and or adc rex.X retq rcll cltd (bad) rcll add rcrl xor rorl xor std pushfq fmuls mov jmpq adc xor jnp subl push cmp (bad) (bad) sbb fistl clc test mov rex.W jmpq pushfq (bad) (bad) and rep out lret cmp (bad) (bad) retq xchg in cmp cmc mov mov sbb test pop (bad) rolb sbb movabs add jnp add sub rex.WRXB mov jno jnp (bad) mov jae xor insl sbb adc mov movslq stc sub fsubrl xor jns xchg int (bad) mov movsb mov (bad) push loope mov cmpsb or lock jo mov xchg (bad) pop pop fsubl sub add xchg imulb pop vpmacsdql enterq sub mov lods (bad) add rex.RX scas and movabs sub jbe or (bad) shlb mov (bad) (bad) push cltd int cmpsb xor (bad) insb and cmp (bad) test icebp add push fldenv xchg xchg (bad) scas imull mov movabs movsb leaveq rex.X mov sbb (bad) fimul (bad) sbb push mov sarl adc rex.WRX or rex.WRXB (bad) or js sub xchg mov or icebp stc xor (bad) ss (bad) pushfq push shrb test mov (bad) scas mov add movabs shll (bad) (bad) mov ja mov xor (bad) (bad) cmp repnz push nop add mov int3 and cltd retq rex.W test (bad) (bad) je insb mov rol rex.WR and rex.R rex.WR rex.WRX xchg rcrl (bad) popfq jmp in push shl repnz movabs rex.RX rex.WRX rex.WR fdiv insb (bad) (bad) cmp lahf loopne ss rex.WR (bad) lock jmp fwait cmp test insl xor nop sbb fisubl (bad) xor xor mov sub xor lahf movsb sub popq sub rex.WXB rex.RXB (bad) in cmp cmp leaveq (bad) jle cmc xchg push movsl pop roll stos (bad) sub test (bad) jl jmp push lahf push mov pop hlt jae lret cmp bnd mov (bad) jno push clc in (bad) fstl mov sahf xor callq (bad) je cmpsb es sbb rex.RB mov movabs stos icebp sarb cmpsl jp (bad) test leaveq (bad) stos pop xchg cmp cwtl std mov sub sbb (bad) (bad) mov or jo xchg cltd test addr32 cwtl mov movabs (bad) (bad) jne movsl nop jae clc (bad) rex.WX clc adcl rex mov jle jmp sbb xor (bad) nop mov (bad) subl test sub jns movabs rex.WRXB loopne repz jg enterq lret or jno xchg add jbe,pn addr32 sbb mov (bad) fwait mov add in mov and repz (bad) ror cmpsl and jno mov (bad) stc cltd sub or hlt pop leaveq mov sub (bad) rex.WR in jmpq rex.WRXB movabs mov jge rex.WXB rex.WXB rorl (bad) mov movabs sbb rex pushq insb xlat rolb xchg test sbb lahf rex or (bad) jno xor (bad) xchg movslq rex.WB sub cmc add rex.R rex.RX rex.WR sbbl push rex.WR or mov push lods (bad) (bad) loope insl (bad) out fwait je movsb cmpsl (bad) (bad) push scas (bad) subl movsq scas test mov cmp rcll add retq hlt pushq retq cmpsl add jrcxz mov jno add icebp (bad) mov jb pop (bad) pop and jno or fistp mov rex.RX pushq movabs fwait cmp lahf adc sahf add mov roll orl lods sub cwtl or xchg and gs cmc rex.X repz addl sbb rex.R testl (bad) (bad) lahf mov rcll mov lea or xchg leaveq mov mov mov adc rex.WRX jno sub mov in test repnz or (bad) adc lret stc sub xchg (bad) bnd mov rex.RX loope clc outsb lret adc retq shrb cwtl frstor jb rorl sub fucomip add mov xchg adc shl lock and data16 rex.WRB pop repnz mov pop xchg rex.WRXB scas sbb jg mov mov mov mov and or rcll (bad) je in fsts cmp sbb (bad) fstl clc add ror and sub nop retq (bad) (bad) repnz mov xchg jns retq adc xchg cmpsq xchg mov int (bad) nop hlt or xor cmp imul and movslq movabs jnp sub jno cmp movabs lods (bad) mov in leaveq jle fdecstp shl divb ja imul (bad) movsb adc ror movsl xlat rex.WRB add in push std rex.WRB mov icebp lret in xor imul xchg mov or faddp movabs mov xchg enterq insl rex.RXB or mov loopne repnz xchg insl fdivl (bad) int3 (bad) repz fcmovb rex.W jns xlat pop ffreep adc loope leaveq (bad) or (bad) jns rex.W (bad) in add or out stos and fadd adc out mov or cs xlat sbb add add pushq test jbe pop mov rex.RXB xchg add movabs js jnp cmp rex.WXB (bad) fisubl sub (bad) sahf movslq or lret rex.WRX ror fmull movabs or mov (bad) adcl or outsl (bad) jp adc cmp orb or (bad) xorl mov xor fsubr cmp int and pop test jl mov rorl rex.RXB add imul jp invd (bad) (bad) fnstsw loope and fs lret push lods (bad) pop fidivrl leaveq pushq movl xchg (bad) (bad) shrl adc or xor and sub jbe and rex.XB xlat (bad) out or jrcxz adc (bad) test xchg mov callq mov je cmp push (bad) xor xor addl add mov cmp es roll and jbe rcl scas lret mov adc fcmovne push or pushfq incl sub push roll imul loopne fwait int push (bad) out (bad) ja sub mov jrcxz adc or mov sbb sub cmp mov sbb xchg add or stc iret and int sub shrl (bad) jns mov rex.RX xorl add retq mov test rorl rex.WRXB rex.X mov movabs ds std rcrl rex.WRB rex.W callq leaveq test jbe fcompl pushq ror sbb rex.WRB loop xchg cs sub or (bad) ror data16 jbe add sub mov mov cwtl (bad) pop xor loope cs mov sbb pop shll (bad) icebp addb sub and imul (bad) (bad) mov insl stos mov xchg movabs (bad) out or in jp rex.WRB sti rorl pop (bad) sarl fimul shll cwtl ffree outsl xor in enterq rex.WRXB (bad) repz lret loopne push xor add cmpl mov movabs mov xchg negb xchg sbb cmp (bad) rex rex.XB fs movsl mov stos (bad) out push sub add and jle leaveq movabs adc lock rex.RX rex.B fs retq push rcll popfq fwait sbb clc (bad) pop add adc loop jnp andl or icebp jg movsb popfq jno (bad) mov rex.R xchg (bad) repnz xor (bad) cmp enterq mov add cmc test incb fistpll adc jne or sarb (bad) cli lods (bad) lea pop sbbl punpckldq push callq repnz je sarl rex.RXB test sub ja (bad) cwtl jae xchg loope rex.W fcomip rorb add lret insl add mov lret mov jge sub sahf jle adc test adcl jle ss (bad) fwait or icebp fwait rex (bad) xor adc pushq (bad) stos shrb mov rex.RB jmpq mov sub jrcxz (bad) mov or in movb (bad) rex.XB fmul mul pushfq pop cmc enterq rorb (bad) and imul and pop int3 and fidivl sub out icebp add adc lock (bad) cltd or add je movabs jp (bad) push movabs mov sbb movl movabs and pop mov pushfq sahf mov rex.B rclb lock imulb stos js (bad) ja (bad) rcll mov outsb data16 out (bad) imul or (bad) (bad) mov (bad) rex.WRB in shrl shlb add cmp add rex.B jle (bad) movabs xchg push sarl sahf subl rex.RXB pop test rex.XB rex.RX stc ror adc mov and (bad) jae (bad) (bad) repz roll mov jnp mov adc mov retq xchg jge xor rex.WRB rex.WX xchg rex.RX (bad) lock ja jrcxz clc (bad) rex.WXB adc jmpq rex.RXB callq jb rex.WRXB xchg std cwtl rex.WB jo sub mov (bad) fwait (bad) or cwtl or rcrl in sbb test xchg lea add rex.B rex.WXB rex.R repz add sahf subb jne int3 xchg jg jrcxz rclb and rcrl out sub push rcrb sahf scas add jl add in loop ja mov rex.WRXB out xchg adc rcll sub mov pop int3 mov movabs pushfq jno (bad) add jnp enterq es push outsl rex.R ds lock push (bad) jae (bad) (bad) adc rex.RB rorb jg insb movabs in lods shrl rex.WXB loop and jne or js lcall cmp retq jle gs (bad) mov lock mov rex.RX rex.WRX mov jns xchg shrl leaveq cmc xchg rcrl sub in int3 rex faddl mov loop add cmp cld int callq iret xchg or sub pushq rcr ror movsb mov xchg cmp test loop stc push xor xchg pop (bad) icebp mov cwtl xchg sub rex.WX mov jrcxz stos pop insl or movabs hlt (bad) cltd (bad) mov (bad) icebp or js mov test (bad) int (bad) jae xchg pushfq (bad) ss shr pushq icebp add (bad) js (bad) insl movsl mov ja divl adc rorl push stc xchg rex.RX test movsb fnstcw test xchg sub (bad) jns (bad) stos cli mov sub (bad) sub imul mov jge add (bad) rcll mov cli mov (bad) jns push pop add out fistpl stc jnp fbld xor xlat rcrl lret movsl (bad) callq xchg xor rex.RXB (bad) movabs cs shl rex.WRX retq jmp pop (bad) lods xchg test or add jbe (bad) repz sbb (bad) out jne outsl rex.WX (bad) xchg enterq mov (bad) xor out adc pop jle test loope shl pop rcll adc out movabs (bad) (bad) mov mov xchg testl and (bad) lock fldenv rex.WX push rex rolb (bad) mov mov imul (bad) lock imul sbbl rex.WRX push movabs fcmovnb adc jbe mov and jge xchg int3 movabs xlat (bad) mov repz jno (bad) rex.WRB scas (bad) sub (bad) push pushq (bad) sub xchg pop add xor or mov mov vmwrite or adc movabs hlt retq testl test sbb jno int3 movsb add jno mov and cmc mov int3 insl (bad) or xchg add cld (bad) sbb xchg movabs js sahf push clc xor (bad) sbb pop rex.R sti movsl mov ja rex.WRB imul push je shll (bad) (bad) rol rex.RXB rcrl (bad) (bad) (bad) retq repz or callq rex.RX cmpsl or (bad) mov mov add add iret rex.WRX pop rex.WB test out jge or mov enterq pushq out (bad) xor lods rex.RB lock cli and mov jno test (bad) callq andb sbb test insl mov rcl (bad) xor pop or fsts pop add sub push add lahf fidivrl jne je adc (bad) out rcl push (bad) loopne mov sbb movabs (bad) mov add cmpxchg sbb jnp outsb pushfq xor lock pavgw rcll in repz fisubl out movabs push (bad) (bad) pop adc jo rex.X jle jp (bad) icebp sbb loopne (bad) rcr cmp rex.RXB nop cld mov (bad) pop cs sub callq sbb enterq repnz cmp sahf leaveq in adc int3 jmp pop xchg retq xacquire (bad) fwait sub xchg fimull mov lret jg cwtl jns or jo cli (bad) sub (bad) rex.WRXB retq sub xor rex.WR push jle xchg adc push mov insl (bad) movsl std sbb add rex.R (bad) rex.WRX lock xor cmc fnstsw (bad) and pushq mov push scas js (bad) and (bad) test movabs mov sub xchg cmpsb cwtl hlt int mov mov movabs (bad) (bad) sti sub cmovae jns (bad) jne shll lahf cwtl jns pop mov (bad) xor lret fsub (bad) icebp pop insb rex.RX (bad) test pushq mov fstpl pop addr32 and cmp movabs xor stc lcall fucom or cmp (bad) outsl cmp retq (bad) jbe jbe (bad) mov lret jmpq cmp or test jle rcl frstor (bad) out imul jno cmp pop repz cmp sti (bad) mov sub pop movabs in cmpsl test movabs mov mov lea (bad) fdivs (bad) sbb jbe fcomi repz adc jae adcl add pushq mov sbb mov xchg movabs (bad) xchg mov mov insb imul jns xor outsl adc pop insl add jnp xchg in ja sahf (bad) push rex.WXB out or cwtl cmp test repnz (bad) (bad) xchg cltd rex.WRX sbb ja loopne loopne rex.XB or rex.RB (bad) push add rex.WRX sbb in icebp mov mov pop sbb xor shrb std jmpq (bad) or sub cltd cld push jle rcrl hlt movabs (bad) mov cmp insl bnd jl (bad) xlat ss fs and sub mov jo jb mov sub pop cmc jmp (bad) rex.XB pop stc mov decl insb (bad) sub lods (bad) pop push movabs add rex.R rex.X rex callq xor retq (bad) xlat lret rex.WR lods stos repnz enterq ja mov fdivp cmp shlb (bad) mov or mov (bad) js sub stc loop jne and cmp leaveq and xchg mov or add add fisub cld test jnp xlat fnstsw pop fs rex.WRX cmpsl cmp push movswl int3 rex.WR and shrl (bad) rex.X jae and sub (bad) jl rex.WRX movabs imul jae loope (bad) sahf xchg sarb cmpsb (bad) mov jns pushfq movsb rex.XB cwtl loop (bad) data16 data16 (bad) (bad) movsb push rex.W jrcxz insb cmpsb mov mov sbb mov in mov jo sub es rex.X rex.W sub (bad) xchg fidivrl (bad) cmp cli stos retq mov (bad) retq jne xor mov (bad) (bad) mov and fildll or fildll test insb rex.WX add ror stos rex.WRX (bad) nop int3 (bad) pop insb gs (bad) loop std (bad) sti scas int3 movb int sub adcb (bad) (bad) or movslq enterq sub rex.XB outsb test sbb stc and scas sub jmpq rex.WRX retq sub add sub (bad) push sub sbbl xchg ficomp fildl outsl (bad) mov add add rex.RB cmp adc std or rex.RX mov cmp (bad) jo retq and sbb movsl jge (bad) adc xchg rcr data16 lods sti (bad) rcrl or test movabs lea rex.RB and (bad) or (bad) fwait xlat rex.WRX out mov pop add and push (bad) xor loopne lret lret inc push mov popfq sub pop sqrtps sbb cmp fild sub sub add xor mov fcomps or stos jae xchg sbb movsb unpcklps xor sbb ffree add pop sub pushq fcmovne (bad) pop rorl not out xchg (bad) retq xchg (bad) (bad) fistl sub jno push (bad) adc cmp roll add jno out adc mov fsubs lock sub rex.WRB fwait adc out rex.B jp mov mov and in jle loop mov lret stos callq (bad) lahf andl (bad) movslq jne cmp rcl rex.W pop rex.WB popfq test rex.RX es sbb adc roll (bad) mov rcrb ss js test (bad) ja sub jle in (bad) fwait imul shll mov roll es jnp pop (bad) lret fs (bad) xor sysexit jne sbb push (bad) xor in and rcl and and int cmpsb xchg lods pushq rol je mov (bad) (bad) jae xor incl rex.B data16 lret push test shl rex.WXB mov shr popfq hlt addr32 (bad) mov xchg int3 rex (bad) push xor push sti and fiadd ror pushq test xchg (bad) adc test xchg clc cltd (bad) callq (bad) mov (bad) add push (bad) xor rex.W cs rex.WRX xchg cmp xor sbb lock sbb int cltd andl lods imulb and push sbb movslq fbstp in scas xchg mov jo lock mov cld cmp ja (bad) xchg (bad) xchg fcoms popfq mov add cwtl leaveq loope fs jae (bad) or xor xchg in movb sarl pop mov sar in rex.WRXB xchg (bad) mov sbb negb stc rcl xchg mov xchg sub lahf clc add out sbb es xchg (bad) (bad) cmc popfq cmpsb (bad) ss sbb xchg (bad) shufps rorl (bad) rorl int3 jrcxz cmp rex.B enterq xchg mov push jae xchg leaveq out sub iret rorl rex.RXB rorl (bad) fxch scas adc mov rcrl cmp fild adc shll xchg mov leaveq rcr and sbb mov jbe int xchg mov pop mov ficomp cld (bad) fbstp (bad) and xor clc (bad) mov fldcw adc mov or push sub out cli or sahf rex.WB retq test leaveq push in in (bad) xchg sbb and fisttpll sarl or outsb fdivs adc adc adc xchg (bad) jno rex.WR in lea xchg push leaveq fistl rol mov enterq mov push enterq jg mov loope pop fnstsw adc cmpl test movslq lods fbstp jmpq leaveq xchg sub cli mov mov stos add (bad) cmp roll cmp (bad) repz sahf movabs ds lods outsb notl cmp stos pop rex.XB retq sub movabs shr fisubr nop push push rcr pushq and add cmp int rex.WR (bad) std adc and mov pushq add out and sbb js outsb jp gs rex.WXB mov lcall and sbb stc rclb decl rex.WRB push movslq or adc add or sub shl xchg (bad) jb (bad) retq fucomip (bad) mov repz and pop and mov xchg sub mov xlat add lods out fcmovnb sub imul rex.WXB jrcxz rex.WX in (bad) jno retq pop movabs test mov shr insl push rex.XB rorl rex.X (bad) rex.WRX (bad) mov fdivl out add sahf mov cmp xchg jno ficom insb shll callq (bad) clc push addr32 sub rex.WXB rep mov roll sub jmpq cli movsl rcll stc rex.X (bad) xchg lret fldl ja rex.WRB jae mov (bad) cmp mov push jbe mov (bad) jmp int rex.X mov rex.RXB (bad) jge movsl int shrb flds xor sub (bad) add std int rcrl jns scas outsl rex.WR loop out pushfq mov xor sub rcr jg cwtl (bad) and fdivrs nop jae fistp gs mov mov rcll (bad) out lahf shr pop movl (bad) xor and rcrl gs mov fidivl mov (bad) (bad) pushq pushfq shrl decl push add mov out movl test sti add lods jp jle pop enterq add retq movsb xsha256 cmpsb xchg movabs xchg retq jnp lahf addr32 fimul mov mov fisttpl movsb sar addl jge mov mov and sub cs mov shr (bad) adc cmc movslq loop mov push (bad) (bad) rcrl adc shr (bad) cli (bad) push mov enterq (bad) gs xlat (bad) push lods mov add (bad) jne rex.XB xlat sti rex.X lock (bad) (bad) in lods stc (bad) stc mov cmpsl mov test or (bad) pop xor xchg and jmpq fldenv out lods (bad) pushq xchg clc pop (bad) xor mov xchg jns mov sbb repnz callq adc cmp rex.W push leaveq (bad) enterq mov add pop (bad) enterq pop or cli push and sarl shrl imul (bad) mov rex addr32 out jmp insb add (bad) rex.WRX rorl fs int3 xchg andb xor push or rex.WRXB or lods mov int imul repnz pop (bad) sub push mov movabs add sbb outsl lret in stc pop repnz movb faddp push mov loope xor rex.WR (bad) sub add test (bad) and vmptrst ja repz rex.RB movabs sub mov sub mov (bad) and retq xchg mov fidivl sbb enterq (bad) xchg add pop (bad) cmc cs bnd shrl jne add jge sub sub (bad) addr32 rex.XB rex.WR xor sbb xor jp or add pop lods push add (bad) fwait or xor cmp mov (bad) (bad) adc js test rex.WB pop leaveq jo or or pop out push fbld (bad) pop or adc sub retq sub ja pop lret pop mov scas (bad) (bad) cmp xchg and add stc sub repnz rex.B in lret sub and rex.W rex.WB (bad) shrl sbb xchg retq pushq (bad) pop push lods popfq xchg int insb mov lock xchg push mov rex.WRX rex.WRX xchg rex.WRB (bad) fsubrl fadd outsb sub (bad) insl jne add (bad) (bad) sbb imul jo or movslq add xor sub rolb sub mov mov imul jnp iret retq insb add loope movsl int3 icebp mov xor cmp loope jge (bad) pop movsb cli xchg (bad) (bad) sub callq or (bad) int cld repz rex.R rex.WRX adc insl rex.XB retq or movabs lock xchg sub repnz and sar repz fcomip jnp rolb jbe faddl iret sbb sbb rcrl jge movabs ja adc cmp out shrb cltd xchg (bad) sbb cmc xchg sub push rex.WR repnz retq and rcll xchg loope shlb fwait testb (bad) rex.R leaveq cmp fadd sub movslq mov rorl add (bad) and xchg or icebp cwtl sub xchg (bad) mov (bad) (bad) rex sbbb rex.RB addl fmul jo loopne in (bad) add js (bad) adc or rex.WRXB fwait rex.WB andl xchg sbb loopne cld jae push (bad) cmpsl lods rex.XB addr32 lret (bad) xor or rex.XB mov jp rex.WR cli int sub rex.RXB es rex imul mov xor lods mov fist rex.RX out mov repnz test jae (bad) insl rex.WRX sti mov mov (bad) xchg pop adc push mov sub (bad) jp stc mov push jo jo (bad) mov int3 xchg pushq rex.WRX fisubl (bad) callq mov add jmpq xchg add out cmpsb mov (bad) cld sbb cs xorl adc and scas pushq push and cmp (bad) cld retq (bad) rex.W mov ja sub (bad) ffree sarb mov fmuls clc (bad) xchg mov lret insb insb jns rcrl mov xor xlat xor pushq sub (bad) or (bad) out mov enterq and sub movsl in mov sbb or add xchg cmp rcl rolb xor xchg rex.WRX push movslq (bad) imul mov pop mov mov outsb repnz test callq cld mov mov (bad) rex.X (bad) xchg jmpq sbb loop push jl adc lods rex.WR xor sbbl push jmp sub push pushfq mov mov stos and bnd (bad) sub shl jne ficomp rcrl (bad) movl (bad) shll jno cmp movsl lods rcl iret outsl jle shr test in pop (bad) adc (bad) movslq rex.XB or shr jne push (bad) xor xchg imul mov fcmovnb xor adc rorl ss std pushfq jmpq insl sub (bad) rex.WB rex.WB rcrl fcomip jge mov addr32 rex.XB sub sbb mov mov rex.WX cmp mov xor adc mov (bad) orl rex.WXB pop add cmc (bad) mov addr32 xor movslq mov rcrl sahf xchg roll rex.WB jg and (bad) xchg rex.WRXB sti rex.B rex.WX cld mov (bad) (bad) pop cs sarl out movslq mov scas or jb cmp lea ffreep push (bad) in sti (bad) adc sub or int3 repz movabs (bad) mov outsb cmpsl (bad) jrcxz xor scas ss mov jae hlt (bad) fwait loope push std (bad) rex.RX loopne addr32 mov int push ds xchg jne int3 retq mov callq (bad) rex.X shl jae outsb rex.XB (bad) (bad) xor shr sub push (bad) cld (bad) rex.RB sub callq adc rcll jge push xchg sub rcll mov sub shl mov and mov (bad) stc jb popfq pop mov adc movsb js (bad) retq mov test repnz fs scas cld mov add pop (bad) roll (bad) pop (bad) or jrcxz (bad) mov rex.B xchg jle xchg mov rex.X push lods rex.B int3 fmulp (bad) pushq cmp (bad) rex.WX rex.R faddp loope cmp movabs (bad) rex.WRX or xchg movabs push rcr imul lock retq mov sbb (bad) (bad) int3 cwtl fxch ja lret jns (bad) leaveq sarl rex.WR mov (bad) xchg repnz adc fistpll (bad) and jg rex.WB hlt out movsl (bad) inc add and test mov xor movabs (bad) jbe std rex.R pop fstpl rex.WB movabs jp fstpt cli rex.WRXB or retq sub movabs sti sub sbb rex.RXB and shr push (bad) sbb adc xchg add test add fisttpl mov fs hlt mov push or shrl xor shll loope or pushfq sbb insb xchg and mov mov lret rex.WRB rex.WB fdivs cmp mov stc rcll xlat jne out int insb lcall sti pop or in out retq push add sahf jbe rcl or (bad) pushfq test rcl rex.WRX pop xor mov xlat (bad) and in int3 add ja (bad) push movabs lret xlat xchg movabs movabs ftst add cmpsb int3 (bad) lahf retq sbbl adc cli cmp rex.WB repnz mov cmpsl sbb rex.RB rex.WR sbbl and pop icebp (bad) cltd test ss (bad) jns or rorl jge mov push (bad) xor (bad) and nop stc movabs rcrl ss test movsl (bad) rcll (bad) mov mov scas add and add rex.R hlt cmp cmpl (bad) repz js sbb sub loopne rolb fadd jp out (bad) xchg loop (bad) fstps push rex.RXB xlat cli data16 xor rex.RX (bad) mov pop repnz movabs xchg in sub cltd add mov int pop jrcxz jmpq mov rol rcll mov xor (bad) repnz ss fisubrl repnz cmp fnstcw mov sbb cmpsb add roll adc jmp mov or roll jbe sub mov and rex.R sub test and add add mov stos repz sti or mov je sbb (bad) rex.WR js jns mov sub add rex.WR mov add add pushq lods pushq adc mov cmpsl sbb adc adcl fadd rex.WXB mov movabs and add sbb sbb fnstsw and lret movabs mov pop sub cs cmp lock int3 lret (bad) movsb mov xchg pop mov popfq pop rcll lods sbb cli lahf mov cltd outsl sarl cmp roll sar rex.X lret (bad) out jb pushq fwait mov (bad) mov jmpq and dec and lock sbb (bad) pop clc rex.WX hlt outsb add sbbl incb cmp enterq fs mov mov mov movsb fistpll fs stc mov xchg imul mov pop pop shll sub (bad) xor mov cltd rcrl pushq or xchg rex.WB mov jne movb rol es xchg xchg cmp add loope adc shrl jb pop jmpq jbe rclb (bad) mov (bad) sub iret test xchg cmpsb ja (bad) (bad) xor cmp pop mov leaveq sarl pop cmp adc rex.RX (bad) sub sar jnp jmp jle pop rex.R rcrb popfq push rsm cmc subl pop test (bad) xchg pop push rep (bad) enterq rex.WRB test jmpq mov mov xchg sbb add pop (bad) (bad) int pop xor scas (bad) (bad) sbb cmp bnd imul jl cmpsl (bad) rex.WR movslq and test (bad) mov loop in retq cmc pop adc sub pop mov stos flds adc cld rex.WRX fwait loope loope (bad) or mov pop xchg (bad) rcr (bad) or or clc rex.RXB test add rcll and idivl rex.XB jmpq rex.RXB (bad) jle (bad) rcrl pop repnz fsubp mov cmp (bad) icebp fcom enterq mov xchg sbb (bad) frstor retq shr mov sbb rex.WRX rex.R cmp in xor xchg stos mov add incb or or pop addr32 mov xchg jb loopne mov lea lods stc loope leaveq (bad) rex.WRX lea adc jno movslq movabs (bad) jmpq cmpsl jnp cli fcmovnbe or loop rex.R sbb movb xor jg rex.WB push out addr32 (bad) int xor iret sub out incl (bad) xor callq cmc lea mov mov or fldz sbb negl in jp pop pushq (bad) rex.R push cs rcrl push xor mov (bad) mov rex.WR in iret repnz lods sbb push lret (bad) pushq in sti rex.RB cmp adc and roll jrcxz iret jge fsubs jb push xchg cwtl mov int js iret rol cmc xor (bad) cld (bad) jge cmp rex.X mov rex.WR xchg (bad) (bad) sub pushq (bad) in mov pop rex.B hlt jrcxz stc cmp sub mov (bad) (bad) sub ja pop je (bad) outsb retq jge in (bad) out (bad) repz rex.RXB (bad) mov or movabs int3 cs or and sub sbb sahf mov add callq mov loop xchg rorl pop sbb (bad) add cmp movabs mov (bad) int3 or movabs (bad) loopne ss outsb adc mov gs (bad) (bad) mov (bad) jg xlat or shrl mulb pop add shr mov (bad) nop mov mov cmp mov xor or xor mov (bad) (bad) (bad) mov cmp mov repnz js cli pop lods cwtl pushq mov (bad) fnop lret sub mov int imul sar rex.WB xchg and (bad) sub lret retq int rex.WRXB stc cmp imull movabs jno jge adc (bad) (bad) je es fisttpl stc sbb movabs hlt fidivl rcll and stc mov mov sbb je rex.WRX movabs in roll sbb int (bad) (bad) or outsb (bad) cmp jmp rol xabort fsubrl push adc jmpq xor (bad) xchg jnp lods cmp fwait cmp pop in xchg cs and roll push in mov incl rex.WRX rex mov fstpt mov mov incl sbb rcl jge (bad) lret shr cltd sbb rorb adc adc retq in fwait rex.WB (bad) xlat repnz sub stc mov xor rcrl (bad) sti add (bad) sarl cmp lret push mov cwtl sub (bad) or and (bad) or loopne rcl sbb shll mov stos (bad) mov cmp roll retq cli mov jbe (bad) mov add sbb pop add movabs sub movabs retq rcrb retq mull out or loop sbb add pushq fwait add leaveq int (bad) add jp shr insl and (bad) or (bad) push negl repz sub int3 cli sub xchg rex.WRX rex.WXB movl out test out rex.WRB sbb pop and sub lret test lret (bad) (bad) mov add xchg (bad) cmpsl adc sub sahf outsl and push fwait loop rex.R (bad) (bad) fidivl xlat (bad) xchg rex.RXB (bad) mov sbb jnp mov cmc insl jmp (bad) push callq sbb (bad) push cmp (bad) callq movslq mov std rex.W (bad) mov incw xor (bad) adc fimull movabs sub adc sub (bad) icebp (bad) in enterq sbb (bad) xlat cmp rcrl callq sub imul or sub std mov pop loop add or movsl add rex.RB addr32 popfq xchg sub retq and push loope jp or retq push fildll (bad) sbb icebp add rex.R repnz xor rex.WRX in push in (bad) xor adc (bad) and jl add (bad) xor cmp outsb callq (bad) jbe add xor fcomps icebp sub xor add cmp repz cmp (bad) cld (bad) cmp bswap mov sbb mov popfq test loope xlat pushfq push or cmpsl mov mov cwtl cmp mov cld mov xchg (bad) xchg sbb cs (bad) rex.WX icebp divl jmpq mov xchg mov iret cmp rex.R mov outsl out and movabs sti push cs mov sub leaveq push lret mov pushfq fxch movabs push (bad) in shl xor jp (bad) sbb rex.XB int cmpb out fnsave js retq sub rex.RX and cmp (bad) rex.WRX adc retq (bad) (bad) lret pop addr32 mov mov loope testl sub psrad (bad) sub xchg push push rex.RB fisubl std lret repz ficom sub movl in and rex.RB cltd and out cmovae push jb jnp xchg test stos mov lods pop mov pop faddp (bad) test sbb (bad) cmp xchg std add out rex.RXB rex.WRB (bad) or in rex.RX rex.WRB out lret add jl xchg cmp fpatan cmpb rex.WRXB jmp test (bad) pushfq movslq rex.WRB fmuls jo (bad) xchg test (bad) movabs (bad) loopne sub lea mov or xchg sbb mov sbb mov nop jmpq repnz mov (bad) je sbb rex.B lock int3 fnsave add xchg hlt (bad) rex.WB clc xchg icebp and cmp rex.WB lea outsl (bad) mov rex.RB loop je push mov and mov (bad) cmp repz adc stos pop mov jb lahf push cltd (bad) xchg in cld pop lods mov or stc pop (bad) jrcxz rex.RB add mov mov jl sub sub mov jae loope in jns loope lods enterq cmp (bad) mov (bad) rex.RB fldcw xlat sub rex.WRB jmp jrcxz mov lret rex.WX (bad) movabs xchg adc add mov int cmp (bad) (bad) repnz sahf fldenv adc iret cwtl movslq push callq rex.WR fcoml rex.WR cmp rex.B fcoms (bad) xor test xor (bad) insl addr32 adc xor pop xchg (bad) mov rex.RB xor pop movabs xchg and mov jno repz movb (bad) sbb xor (bad) sti int3 out out (bad) (bad) (bad) or test divl ds fnop repz (bad) out movabs loope add lahf rex.WRX repz push xchg cmp shrb out push shl lea jno add cmp mov (bad) (bad) mov mov adc fldcw fisttpll or fs cmp imul jmpq sti jns add mov sbb shrb (bad) pop repnz adc lret out mov movabs je cmpsl jl (bad) adc lea xlat (bad) mov rex.RXB jmp pop adc (bad) (bad) fcompl (bad) jrcxz xlat pop stc rex.RXB faddp rex.R rex.R rex.WR jg rex.XB (bad) in leaveq jns (bad) xchg jb in pop fisttpl rex.B rex.WRXB retq xor mov callq negl (bad) in (bad) (bad) mov loopne nop push push pushq jmpq bnd cmpsb scas and rex.RX ror or imul scas mov icebp imul loope adc out mov sub fldcw lods fild sub (bad) int3 lea lods in idivl cmc movsl ds and mov adc stc rex enterq mov fnstcw (bad) (bad) and fsubrl cli add fiadd insb nop data16 divb loop rex.WX rdmsr out jg xchg mov movabs (bad) rex.RB loop nop rex.WX addl movabs mov rorl (bad) std push cmp xor (bad) addr32 in (bad) jno jbe xchg (bad) or add cltd punpcklbw (bad) fstpt pushq in (bad) add rex.R in repnz pop add (bad) test movabs (bad) jmp rex.X jne rcrl or (bad) roll retq lret sti loopne iret jnp jo xor cmpsb cmp (bad) repnz xor (bad) cmp imul sbb sub iret mov ds sti pop (bad) jge xchg (bad) (bad) mov push lock and xchg add popfw mov gs imul cli sub add mov out rex.RB or xlat mov xchg jno mov jmp mov sbb rex.WR mov rex.B cmp sbb loope shrl lods (bad) cltd jp rex.B rex.WXB in mov (bad) movabs hlt or ss adc sarl (bad) and in callq negb loope xchg and stos push fcom rorl mov jno shr mov and (bad) rorl cmpb (bad) ffreep jrcxz fisub sar jo,pt xchg movsb test cwtl fwait sbb fbld in rex.WRXB jae repz inc (bad) jns rex.WRX cmpl (bad) fstpl mov retq sub loop mull and push sbb vorpd fisttpl sbb cmp cmp xchg vpunpckhbw and jbe rex.X rex.WX jl pop test sub ja pop jo in imul loop rex.XB (bad) stc pop shrl retq rorb shrl or shr (bad) mov lret adc (bad) mov cmp jge (bad) lods out lret rex.WXB add je mov push adc (bad) lret scas rex.RXB rorl (bad) add (bad) mov out stos rex.WRX shll movsl mov mov (bad) sbb pop and sbb mov int cmp pop (bad) rorl cmp cli rcrl movabs (bad) xchg callq shrl imul xchg or xchg (bad) shr mov shll sarl adc rcl xchg js cmp pop lret jle xor outsb (bad) enterq stc cli in int push rex.B xor in cld rex.RXB cmc loope fild test sbb sub jns pop push fildl cmp (bad) int3 enterq icebp mov rex.B mov iret stc and lods jl fildll or loop xchg pushq iret jbe pop rex.WRXB (bad) rex.WRB hlt xor lret xchg add rorl (bad) adc shll rex.WR repnz in sarl mov (bad) cmpsl xchg jae outsb (bad) (bad) (bad) add (bad) fwait cmp mov adc (bad) imul rcll icebp stc cld pop rex.XB jno push (bad) rcrl popfq test cld xchg ss in xor std retq gs rex.X cmp (bad) test add mov xchg rclb lea test rol jmp int (bad) xor mov (bad) (bad) fdivl cmp (bad) fwait (bad) (bad) retq sub (bad) movsl icebp mov xchg mov fs ficomp lock loope sub (bad) repnz repz outsb jae sarl sub insl ja (bad) ds push int rex.W ja xchg (bad) rcrl jg rcrl out sub stc xor jmp mov jae insl fs clc je out jno retq jmpq xchg (bad) mov push and shrl pushq mov rex.WXB shr lret mov test or (bad) scas int3 (bad) in push lods (bad) imul pushq je (bad) or rorl add mov rorl push movabs add mov adc pop fdivl xor (bad) xchg repnz test shlb insb xchg or xor rorl xchg (bad) and rex.W pop nop scas push stos pop rcrl testl retq mov cmpsb (bad) std (bad) (bad) pop sahf cmp rex.B mov (bad) fcoms xchg mov xor rorb cltd adc cmp mov hlt or jg (bad) sub (bad) cmp mov rex.WXB mov (bad) xchg jp sahf (bad) xor (bad) nop (bad) and std mov out pop loopne cmp jmp (bad) vmovapd jo stc sub mov movabs rex.WRXB push shrl rex.W shl cmpsb int xor (bad) jo in mov imul mov pop callq xlat je mov roll rex.X adc add movabs std (bad) test out add jge mov movabs addr32 (bad) xchg jle push cmp (bad) fdiv mov pop jo roll xlat test test stc add ficoml callq sub (bad) int3 push je xor mov mov rex.WR or js fstps lods hlt or push adc shrl mov in fwait (bad) out retq rorl ja iret cmp rex.B pop sub (bad) addr32 lea iret sti enterq fidiv (bad) (bad) je sbb xor (bad) loopne mov add cmpsb rex.RB (bad) mov pop insb jmpq lods mov movsb mov or mov rolb rex.WRX rex.B (bad) cltd xchg int data16 cld rex.WR pushfq cli hlt repz fwait (bad) or (bad) rex.WR (bad) cld (bad) pop push in (bad) (bad) (bad) enterq (bad) rex.B retq (bad) lret sbb jg sbb or jae movsl not sub sbb rorl jmpq (bad) rex.WXB rex.WRB in (bad) sbb movabs out movsb retq lret (bad) jl rcrl int (bad) or (bad) (bad) xor (bad) xchg cmp cltd movabs test cmp in rex.B cmpsb (bad) pop add ficom adc (bad) gs movsb add gs retq test cmp mov add jg pop rex.B in sbb sarl mov rorl rcrb (bad) fstl int movabs ja (bad) and orl (bad) mov cmp data16 shrl test xor enterq in insb add push hlt add cmpsb or jge roll lea rex.B movabs mov xlat mov rclb adc jrcxz ffreep insb cld xchg scas (bad) jns sub xchg (bad) cmp xchg (bad) cs or pop enterq (bad) popfq rex.RX mov sbb push rex.RXB or out push mov pop sbb iret push lods and fbld outsl adc subb in pushq cmp rex.RX insl jae mov int3 (bad) jrcxz test rex.X stos xchg xor stc in (bad) pop (bad) (bad) (bad) add lock mov sarl jl rcl push mov sub mov (bad) mov fcmovnb mov lretw rex.WRB cmpsl mov mov lods and (bad) rex.WRB js mov rex.B lock test cmp xchg mov movsb or mov add push enterq mov jle idivb rex.WXB subl add (bad) lock (bad) mov rex.WR fwait adc stos or mov cmovge sbb repz mov out (bad) ds rex.WR cmp rcr (bad) mov mov cmc jmpq lods sub push shll (bad) (bad) rcl xchg and insl jrcxz rcrl lahf mov jns mov sub cmp frstor out cwtl stos movsb fs xchg rcll or jo and lahf (bad) jp std xchg xchg (bad) jl (bad) add mov mov icebp (bad) jae outsl and (bad) mov es (bad) jo clc sbb mov push (bad) icebp pop add (bad) test movsl shll mov es and (bad) je imul orl or test add rcll callq mov cmc push shr jno retq int3 add rcr (bad) stos (bad) ja (bad) (bad) pushq mov out sub mov movabs outsb movslq adc lahf rex.WRX (bad) jo test callq scas (bad) sub retq push (bad) in sbb callq cwtl jge add imul sahf int ja callq and (bad) fwait or add int sub sbb shr movslq movabs addl fwait pop xor sub lods (bad) sub add movabs movabs add pushq rex.WB mov rex.WRX push lea outsl sbb xchg cld lret jg mov jb mov mov test div enterq fnstenv movb ljmp scas rex.WB rex rex.RXB xor out rex.WXB xlat imul jbe mov lret (bad) vsqrtps test cmp rex.WR xor cmc mov pop lock (bad) xor sbb rcr sbb mov or add movsb rol jp and push push (bad) xor jmp loopne (bad) mov rex.B roll jbe in mov cld repz rcrl mov stc adc cmp push shrl push mov adc jo jb add imul add xchg and (bad) push loopne (bad) xor jge shrl xchg add leaveq pop lea push addr32 mov push jbe rol (bad) sbb movslq jns vpaddd movabs enterq rorl mov xchg xchg pushfq add nop (bad) xor rex.RX roll (bad) int fs cwtl add adc lods rex.B cli push bswap enterq fwait icebp add sbb ss pushfq rorb cmp (bad) add cmpsl or clc ficomp mov lahf movsb push lret out rorl je movabs (bad) or rex.WXB mov lret fld or adc sbb rex.WX iret popfq jnp add (bad) test and xchg (bad) loop and (bad) xchg jrcxz pushfq (bad) add jp xlat mov cmp shl stos fldenv rorl outsl out cmp (bad) rcll popfq cmc rex.XB pop (bad) (bad) jmpq mov in and (bad) (bad) hlt loope xchg or rex.RB int3 out push or fsts outsb cmpsl jno (bad) push (bad) loope popfq sarl mov int xor movabs (bad) shll xor repz xor (bad) xchg push test (bad) xchg or data16 cmpsl sub rex.WB jo int mov stc je movabs (bad) mov shrl repnz stc xchg jns pop pushq xchg adc rcrl shl iret xchg add cmp (bad) cmc rol cwtl xchg and mov (bad) divb adc pushq mov scas add leaveq ss addr32 cwtl movabs push or mov rex.WR mov mov sub (bad) (bad) xor jo in rcll cmp data16 rex.W sarl fnstcw jae pop push movsb (bad) neg mov int (bad) xor (bad) lret add (bad) mov rex.WRB out stc pop notl sarl cmp add leaveq sarl and rcll jmp add rex.WRB sbb add (bad) mov rex.RB mov (bad) jg movabs in rex.B popfq shr (bad) xor callq data16 std and sub imul cwtl cld (bad) sahf jns mov mov mov xor fidiv adc push (bad) rex.WB repnz loope scas movslq repz rex.RX loopne (bad) mov (bad) ja retq mov (bad) retq shrb jbe and rcll rcll iret (bad) jo or movabs (bad) mov jbe testl rex.WRB xchg int3 stos rex.RXB pushq jg stc sbb callq add sar push adc loop (bad) in mov lret int jl jle clc push sar mov cltd pop test mov sarl xchg sbb (bad) icebp cmp pop push movslq (bad) callq test loop (bad) cld imul (bad) lods addb rex.X es (bad) mov leaveq push pop repnz out or shl sbbl and (bad) lock (bad) sarl int shrl gs sbb (bad) and lret loope pushq jnp mov (bad) movabs repz int sarl (bad) out jg (bad) in jno cmp add rex.XB jb lahf fistpl (bad) insb addr32 xlat xor out sub push mov scas in fdivr (bad) pushq outsb (bad) movabs test mov pushfq adc in rex.W int3 test add jne es push cs add mov out push loop lods jb roll mov cld negb rex.B or sbb stc or cmpsl insb shll xor cs rex.WRXB (bad) shl cmpsb xlat or lock in loop fdivl cmpsb and outsl xchg rol scas (bad) pop mov cmpsl push jnp callq (bad) adc ja cmp (bad) (bad) sbb cmp xacquire adc pop out data16 xor movabs xchg addr32 adc enterq xchg or (bad) cmpsl (bad) cld test cmp (bad) lock fildll loop xor lret or cltd rcll adcl adc xchg popfq (bad) roll cmp fwait jbe adc lret rex.RB rex.W mov rex.WB (bad) sbb rex.WX adc sub lea stos movabs xlat (bad) insb jle rex cmc xor lret in xchg stos mov pushfq jns xchg repz int xchg cmpsl movabs sarb push (bad) and jp jg loop rex.RXB rex.WR repnz rex.RB data16 rcll lea mov repnz mov es rex.WX (bad) shll (bad) or xchg cmp xchg (bad) mov (bad) rex.RB cmc shr test movslq movabs (bad) xor xor rol rex.RX cmp int3 pushfq sbb add movabs rex.RX rex.WRX neg add movabs rex.WRXB rcll lods jge cld mov in shl jmp jle rcll xchg jne sbb (bad) cs leaveq retq rex.WB stos cmp cltd movabs jp mov or (bad) add xchg ja (bad) outsl sti push repnz lret mov xchg shrl adc pushfq rex.WX rcrl ror or int3 jg scas add pop in in (bad) movabs rex.WXB std rolb (bad) movabs orl adc rex.B rex.WXB cs (bad) mov (bad) cmp push pop clc (bad) mov hlt test mov scas testl and retq std in hlt retq rex.R rcrb jns fbld loop xor sahf jne (bad) test iret jo icebp sahf rex.WRX lret lods and pop and (bad) mov rex (bad) xchg mov (bad) xchg sbb cmc mov loop je,pn cmpsl sbb add test sub (bad) xor jno jb std cmp pushfq fsubrs movabs adc in shrl xchg sub movabs xorb iret cmp pop and fiaddl rolb or and and jb xchg xor (bad) fcmovnb shrl and mov in xor int3 cltd rex.WRB adc lock in out rex.X mov xchg xor repnz mov add cmp jrcxz movslq cld and retq sbb jmp (bad) and rex.WR cmp int3 mov xchg add or or clc rex.R sbb and push rorl rex.WXB fwait test pushfq lret adc shrb cmp xlat test jns add (bad) enterq rex.R shrl or pushfq adc out popfq iret pop loope sub mov retq (bad) (bad) jnp pop insl add in rorl pop push shll stos mov fdivl push icebp movabs js xor popfq pop rcrb adc and mov sti (bad) jmpq (bad) xchg cltd loopne rex.B xor jb and imul int3 jnp and (bad) in jno fdivrs (bad) jno clc (bad) cwtl mov (bad) rorl int3 xchg movsl jne roll stos pushfq jbe mov (bad) incb es cmp or mov cmpsl cltd mov jns (bad) jne pop clc test or iret out mov mov loop shrl insl es jge (bad) fnsave rorl icebp (bad) push add (bad) (bad) mov mov or xchg js rex.B mov test or cmp rex.WX addr32 hlt (bad) rex.WXB jbe xchg and loop rex.W rex.WRX rex.WR test jp rex.WB (bad) xchg xor add (bad) add fldl scas jno repz fimul rex.WR mov cmp out xor (bad) push lock push fdivl jmp subl (bad) repz (bad) xor shll (bad) fcomp jl idivl (bad) or xchg addr32 lret rex.WXB mov rex.WRX (bad) repnz rex.RXB or int pop pop icebp and xlat mov jno rex.WRX enterq int sbb push jae mov xor fldenv add (bad) jle xchg movabs add cltd xchg rex.WR neg xchg jmp xor mov (bad) rex.B (bad) sub adc (bad) rex.WXB std rcrb mov lret cmp or (bad) pop lock sahf adc cmpsb or (bad) sahf (bad) mov pop xlat adc (bad) xchg stos icebp and rex.WX ja cmc test push cli shl jne lret (bad) cmp cmpsl sbb adc lock int jb pop mov (bad) xchg (bad) jbe sub (bad) xchg mov (bad) pop lret jb rex.RXB rex.WRX push loopne es (bad) repz rex.WB mov mov sbbb jmpq (bad) push add sti rex.RB push (bad) mov mov and xor retq incl adcl (bad) add mov sbb (bad) cmp rcll sub (bad) fdivs rex.B es gs rex.X pop push int loope lods rex.RX add mov rex.RB jrcxz outsl out push add rex.WX lret xor mov sarl push xor mov rex.RB mov loope cld (bad) sahf xchg lods (bad) or xchg or rex.WRXB movsb (bad) (bad) jp lods (bad) (bad) test sahf rcll xchg jo cltd repz rex.RX add pop cmpl pop in sbb mov outsb xor rex.RX es jno rorb out pop int (bad) popfq sub addl or fadd (bad) mov mov sub icebp out (bad) push (bad) vpackssdw (bad) xchg scas in scas fwait in jrcxz and rex.X (bad) rex.R sbb xchg pop mov (bad) addr32 mov divl push imul push movsb mov add add fsubp rex.WXB scas rex.WB out cs (bad) mov fneni(8087 test in mov lock rex.WRB jle (bad) rex add cmp lods sbb rex.WB jns jmp out xchg je sbb add and icebp add mov rex.WR es jg roll push vmovdqa rex.WXB leaveq cmpb xchg rex.WR movslq xor mov insb cmp mov cmp (bad) mov fisubr (bad) cmp rex.R fimull je xchg (bad) xor in add (bad) hlt rex.R xorl xchg push stc jbe rex.X mov (bad) (bad) idiv (bad) rex.RXB add or rorb idivb lods sub (bad) push rex.RXB (bad) sbb pop test divl jmp sub jbe mov loopne cmp xor mov xchg xlat mulb (bad) icebp (bad) xchg fdivrl fistp (bad) push xor icebp (bad) and fisttpll in xor pushq lahf movsl insb sub rex.X lea mov rex.B mov (bad) iret es (bad) rcll jmp lret mov xor movsl rcrl in mov mov ds sub mov (bad) xor mov out scas rcll cmp scas or clc and pop mov testl xchg or cmp test add mov imul xchg sarl xlat fcompp and sub scas sbb mov jp add add in int mov mov (bad) sbbb mov and rex (bad) imul sub mov xchg (bad) xor out enterq movabs jle test jmpq rex.WR mov cwtl outsl insb leaveq mov rex.WRX jb roll (bad) rex.X xchg lret repz adc retq rcrl test adc test sarl stc adc mov add and xor cwtl rorl pushq rex.WRXB (bad) jno (bad) sub or loope outsl movabs outsb and adc mov pop lea or rex.RB adc enterq retq stos rcr (bad) xor pop sub sbb cltd repz fdiv es shlb loope and movabs incl (bad) sbbl jb sub mov retq roll mov jge pop xchg shrl or pop (bad) scas (bad) fldenv loopne xchg and cmp movabs jnp (bad) callq shll rex.WR xor mov or rcll pop sbb sbb movsb je fldt mov xchg rex.WXB sar (bad) (bad) push (bad) lret mov in stos stos mov lods (bad) (bad) repz sar pop rorl jo cmp (bad) lret push adc stos movabs (bad) fs rorl or rex.XB or out lret (bad) mov add mov gs hlt jg add movslq cmp xchg pop or gs rex.WX jno stc rex.WR push in (bad) lock cmpsb (bad) cmc mov (bad) (bad) (bad) std xor decl hlt xadd (bad) test sar repnz (bad) xchg mov fmulp loop xor sub mov adc in or rcl rex.RX es enterq lods mov adc xchg and std (bad) mov fwait test popfq (bad) cs xchg (bad) icebp mov (bad) es jmpq (bad) stos cwtl or loop rcrl int3 clc out (bad) rcr xor (bad) (bad) outsb rorl (bad) or gs shll shrb xlat rex.B pop mov imul lret add mov ja enterq rorl mov rcl or repnz (bad) sub mov sbb testl sarl sub mov je lea add rex.RX sbb pop movslq (bad) sbb xor jns (bad) popfq (bad) repnz pushq test cmpsb roll callq add div add pop bt (bad) (bad) push xor cmpsl add xor sub rol mov jmp fistpll adc mov mulb adc movsb scas and std iret je (bad) scas mov callq add pop mov adc mov rex.RXB or sbb hlt std test sub enterq (bad) (bad) vmovdqa repnz repnz stos loop loopne xor xchg movabs sbb pushq sbb retq push stc addr32 retq hlt xchg or rex.W leaveq and jg or pop xor (bad) rorl xchg pop cmp movabs sub xorb (bad) movsl nop adc pop (bad) callq rex.B jb jrcxz sahf cld lret cmpsb mov or lret cs stc jge cs vmovdqa mov (bad) (bad) and sub (bad) loope rex.WXB mov sbb xor (bad) cld push (bad) jmpq (bad) mov and rex.WXB es adc xchg data16 rcrl cltd sar (bad) jge fwait popfq imul cmpsl jle retq rcr xor fs leaveq (bad) sub mov (bad) (bad) fnsave cltd mov (bad) cmp cmc push jne (bad) int lods rex.RXB push xor add add jo xchg (bad) out xchg retq xchg lods push xchg in mov stc or nop (bad) mov rex.WRB dec add sbb or jmp int3 lahf push jle (bad) roll mov xchg fwait cmpsb add lret rcll pop (bad) sbb xchg repnz mov sbb rex.X push ficom xor xchg rorl (bad) (bad) cmp movabs lock or jb shrl fldenv jo pop xchg js (bad) ja rex.W mov push callq rex.WRB pop loop cld jl rcrl adc push lock pop out sbb mov jbe js rex.RX stc add mov lods (bad) rex.RXB rex.WXB mov repnz clc (bad) popfq lods movabs cmp (bad) out sub jb add retq pushfq rex.R cltd or mov jns sti nop mov xlat js retq mov movabs (bad) push (bad) testl repnz es and and fs in subl shl rex.RXB movabs hlt in shr shll and rex.RX rex.XB or scas mov sbb test xchg (bad) mov mov rcll mov shr cmp rorl ss (bad) or imul (bad) out or fsubl add in pop out pop sub rorl addr32 cwtl (bad) mulb push (bad) add mov or rcll out stc fadd xchg lock test (bad) mov xchg rex.WRXB (bad) lcall rol jg clc in lea pop add insb and out (bad) outsl push (bad) rcrb xchg imul (bad) jb test mov subl btc xchg retq (bad) movabs rcrl cld sub xchg int3 std lahf cmp rex.B out (bad) clc lret cmpsl stc push (bad) xor and xchg movabs sbbl (bad) pop out jnp adc rorl icebp rorl (bad) sahf shrl test rex.RX xchg xchg (bad) cmp out add push movsb (bad) test cmp shrl sbb jmpq pop xchg movsl jle in mov or movabs adc ja rorl mov sub sar pop (bad) imul rcll insl add fistl mov (bad) shll sti (bad) lret cltd imul xchg (bad) shrb pop sbb push jmp data16 (bad) (bad) (bad) out (bad) cwtl (bad) xchg (bad) test (bad) xor test cmp and movsb or mov (bad) sub xor (bad) lods cmpsb xchg xor push xchg cmp adc (bad) jne fstl lods rex.RXB pop mov cmp rorl (bad) mov movabs out pop retq sub xchg (bad) xchg or xchg rorl rex.XB repnz shl cld xchg mov pop sub int in roll pop rex.RX fwait subl jnp (bad) xor lahf imul add retq test insb loope fadds rcll sub and xchg lret rex.B sbb jb fs rcll (bad) add fdivrs stc and or sti (bad) pop and xchg incl adc test (bad) jbe jle rex.RXB loop pushq or and std (bad) sub sarl pop (bad) jns fisubrl jp jno and xchg push cmp movslq jne lret movabs rex.WRX fsubs (bad) mov orl cmc cmc push sub fidiv (bad) cmc sub xchg (bad) cltd cmpsl retq loop adc (bad) xlat mov cmp adc sub xchg push enterq test loopne out add lahf je leaveq jle retq int adc mov out insb sub int (bad) leaveq lret std mov and fcomi and in movsb out xchg repz add (bad) (bad) (bad) subl retq cli (bad) cmp loopne sub imul retq rex.W rex.WRX in retq push rex.WB cmpl rex.R repz fwait nop imul rcrb xchg fldenv pushfq sbb int test add incb jg and mov movsb clc ja add (bad) mov cwtl (bad) (bad) xor or rex.WXB cmpsl in jns adc (bad) rex.W loopne rex.WRXB repnz pushq push retq js (bad) enterq rex.WRB vxorpd stc add repnz lea mov or rcrb pop int fcomp retq sub (bad) (bad) jbe add rex.B (bad) rorb cmp je (bad) roll bnd sub pushfq ja sbb fidivl std int3 (bad) js xchg xor cmp stc rex.R (bad) roll retq rex.XB xor rorl and repz pushfq fistl rex.WX cmp mov lret jno or cmpsb rex.WRX rex.WRB pop test add (bad) add and in xor hlt add add xchg or lea rex.W subl jg push and (bad) rex.WR rex.WRX roll (bad) xor shr mov (bad) ja std shll rorb (bad) lock roll rex.W mov insl fnsave imul rex.WRB rex.R scas jnp lock in sbb in xor cltd rex rorb jae mov (bad) (bad) fmull cmp sahf out iret mov cmc test xlat retq sbb mov pushfq scas orl xor push rcrl mov fs iret jg xchg sbb (bad) ljmp pcmpgtw (bad) rolb xchg or loopel mov push mov retq and nop movabs cltd jmp imul xlat mov xor cwtl jo nop mov leaveq sbb cmp (bad) imul rcr xchg movabs sbb sub stos adcl xchg sub fadd add in sbb lods shr in jrcxz popfq (bad) xchg (bad) not push cmpsb leaveq sbb xor callq mov pushq shl cmp jns jno sbb cs movsb sar (bad) movabs jle rcl repnz jns rex.XB callq lret (bad) xchg xchg (bad) (bad) roll rex.WX and stos rcr (bad) rex.WRB in callq leaveq (bad) jg sahf (bad) mov mov pop nop (bad) cld jge and pop adc xor cmp mov (bad) out (bad) jl (bad) scas push lret cmpsl (bad) mov fiaddl rex.X cld (bad) icebp mov mov rex.R (bad) divb rorl sub mov rex.XB (bad) push rex.WXB callq sub rex.B rex.X out rex.WB jp and rex.RXB (bad) rcrl jne sarb (bad) cmp decl (bad) sarl sbb std retq push cmpsb add out rorl repnz (bad) sarl rex fimull (bad) sub or jl sub jrcxz lods (bad) xor jno cmp negl fistpl push cmp mov mov fist (bad) cmp pushq mov (bad) outsb mov lret imul xor out push mov in rex.WRXB jns roll (bad) push mov shll loop (bad) movabs push add push jo cli pop (bad) rex.WB pushq and mov movabs xchg xchg (bad) sub out rol cmp xchg rex.X imul (bad) idivb imul (bad) repnz in and scas lahf (bad) mov rcll mov (bad) pop rex.RX jg mov icebp sbb (bad) cmp clc fcmovnbe and xchg adc shl xor push mov mov cli pop (bad) shr xchg imul push shr mov ss sub mov xor sbb cli fs push ja movswl pop (bad) (bad) mov mov (bad) retq stos xchg sbb and cmovns or rex.WRX shr (bad) add hlt sbb (bad) push cmp push sbb jns sub shr scas and jno lret enterq (bad) enterq orl notl (bad) cld mov push jbe fsts (bad) scas (bad) mov rex.WX ja insl adc outsb fldt fdivl mov sub mov in movabs fwait data16 in (bad) and rex.X int std in add mov rex.WRB xchg out insl lret pushq mov faddp ja fs jbe mov mov sbb cmc movabs jnp movsb je std jp rex.RXB movslq retq callq (bad) and mov pop add push and hlt xor pop nop and rex.B adc mov jge lahf (bad) mov or cmpsl lahf movabs or outsl repz pop rorl (bad) addl lret (bad) sbb movabs add lock pop (bad) jbe rex.WXB iret movabs push or push pushq or loopne adc nop (bad) shrl pop rex.XB iret jo xchg xchg loop js roll pop jno imul xchg rex.WRXB cli and loope es rex.WB retq pop jo shrl int3 loop jrcxz add mov roll sbb (bad) (bad) lret iret (bad) cmp push sub (bad) jg and xchg jp rex.RXB and movslq adc clc (bad) sbb js adc jns ja lret (bad) popq and rex.WX mov (bad) icebp rex.RX callq insl callq (bad) lret xor out xlat mov pop retq (bad) (bad) xchg lret push rex.WXB icebp es (bad) movabs pmuludq incb jbe add movabs leaveq lcall test (bad) rex.RXB sti (bad) lock nop mov pushfq (bad) fistl mov mov test rcrw and loopne add mov (bad) lods int3 stc adc (bad) rex.XB lret insb js insl movabs xchg pop scas enterq in out (bad) mov pop adc xchg xchg pop enterq movsl (bad) mov andl rex.WRX mov and (bad) fsubr jno rex.RB lods mov (bad) div mov cmp rex mov retq pushfq nop mov shrb (bad) movslq add sub (bad) (bad) js mov (bad) jae leaveq mov xor (bad) pushq retq retq scas (bad) insb fs retq adc jae (bad) sbb mov jge xlat (bad) cmp rex.WRB ffree icebp add flds xchg (bad) lahf sbb or rex.WRB (bad) pop (bad) rex.WB or xchg push (bad) in and xchg (bad) jno cmp (bad) or (bad) ss fbld xchg scas jg repnz (bad) add (bad) and int3 (bad) mov lahf repz jae add and (bad) int lods cmp sbb add shrl sbb mov mov sbb jbe xor mov mov jrcxz rex.RX rex.WR push cmp in jmp pushq (bad) sbb jbe rex.WR ds ficom incb (bad) (bad) lret xor adc sub cmp xor icebp add gs mov scas movslq cwtl rol push xchg jg (bad) jmp lret adc jns push jrcxz rcrl gs sbb adc mov (bad) out lret mov repz and rcrl test jmpq push fwait adc fnstcw (bad) in fisubl cld (bad) rorl jae leaveq data16 rcrl test sbb sbb mov (bad) rcll sbb ja scas out je loop or mov mov popfq iret (bad) xor xlat sahf mov xchg mov (bad) (bad) mov rex.WRB clc add jns (bad) (bad) movabs rex.WXB mov fimull rex.WRXB insl (bad) jo jge cmp pushfq mov retq cmpsl add roll pop rex.W jbe pop callq add or (bad) (bad) out sbb sub rolb cmp (bad) xchg sti movd addr32 sbb insl stc int3 fisubl repnz (bad) (bad) testb in sub rex.X fwait rex.WX movsb pushq sbb mov jnp negl push push add add test mov or pop mov pop stos mov adc sub retq mov cs rex.X rcll sub rex.WRB out rcr rex.RX pop cli test xchg fsubp test push fidivl (bad) xchg rex.RB (bad) xor shr lock mov sub int rex.WRB cs mov frstor (bad) sub (bad) and jbe jb xor xchg cmp jnp and iret rex.WX loop xor or (bad) rol pushfq mov in mov retq push or imul callq shr (bad) repnz test rex.B outsb shrl rex.RX jae fnstcw (bad) mov outsl jmp stos or int3 jge rex.X shr cmp (bad) rorl lret roll movsl jl xchg (bad) mov out pop mov rex.R fwait sub rex.RXB (bad) (bad) (bad) test rex.W fucom retq mov sarl fisubl rex.R (bad) test push (bad) lret es push cli jb jrcxz ja fdivs retq loop shrl pushq (bad) mov cltd push rex.WRB rex (bad) rcll xadd push out rcrl mov in movabs cld rex.RX push callq rex.WRB fldt incb sbb std rex.R sbb sbb lods adc (bad) testb lods inc mov add lret nop adcl insl or test std or sub pop jae fwait rcl (bad) rex.X repnz push and rex.RB sbb (bad) rcll xchg rolb mov rex.RXB mov scas lahf pushq (bad) retq (bad) mov insl pushfq (bad) xor shrb adc fbstp and sbb xchg cmp cli hlt (bad) rex.B jl (bad) movslq imul or sbb js incb pop or add enterq (bad) (bad) rex.WR rex.WRB pop and gs rex.B mov sub (bad) mov push fildl xor and sbb enterq (bad) js fldenv (bad) int3 sbb sub (bad) xchg (bad) add (bad) sub pushfq rex and (bad) rex.B adc adc push mov bnd pop retq or enterq and jmpq and jg loopne pop test jo fstl sbbl and mov (bad) iret (bad) jnp stos cmc cltd adc xor out stc jrcxz imul jle jae rex.WRB sbb or (bad) adc add pop add orb (bad) or pop mov push (bad) (bad) mov ss cs fcmovne (bad) lahf rex.XB rcrl xchg hlt rcr in outsb and and (bad) jo rex.RX cwtl sbb mov fucomp pop and adc cwtl ja xor (bad) rex.RX sahf (bad) cli movb (bad) and and adc out jl icebp popfq or cmp movabs and pushfq add callq iret add pop rex.RXB mov sub cwtl lods rcrl sbb movsl fs cmp (bad) jmpq scas fcmovnb movsb popfq or mulb rex.WRX pushq test movabs repz (bad) out rex.W rex.RX jae (bad) repnz or xchg iret sbb or fisub xor (bad) je xor (bad) push shl mov mov pop (bad) sub jl lahf (bad) rex.XB (bad) push pop mov cmp movabs (bad) rex.B rex.RXB std jg test rorl jrcxz lret xchg rcrl lods mov (bad) shrl addr32 mov rex.WX repnz xor stos and movabs cmp insl (bad) adc enterq rcll (bad) pop test in or test stos mov cwtl shll fistl shll xor lods pop (bad) fldl test xchg icebp pushq int jnp adc in xor movslq adc jbe cmpl rex.RXB pop mov scas test (bad) rex.XB add xchg fwait je (bad) jnp mov in rex.WB xor data16 pop rex scas mov cmpsb callq push (bad) shrl leaveq fildl cwtl push jle out rcrl jbe xchg shll pushq retq mov add lret incb sub fcmovb add adc int3 rex.WXB pop sbb or jle jp popfq xor retq fldl or std fiaddl push rex.B roll sub frstor je add push fdivrs mov enterq (bad) movabs icebp scas mov mov jno push mov rorl sbb out retq and movslq (bad) pop hlt xor (bad) enterq stc (bad) add adc hlt push pop imul and movabs je xchg (bad) std (bad) sub fwait push movsl rcll fnstsw lahf xchg pop (bad) imul je mov sub push or add cmc loope roll pushfq sbb ds bnd int fdivrs (bad) ffree fisubrl jmp mov (bad) adc rex.XB fildl sub (bad) adcl pop (bad) (bad) add cmp xlat (bad) cmp mov es (bad) rex.WRX lret fwait (bad) test cltd stc add jns push mov (bad) retq (bad) (bad) leaveq jo xor (bad) (bad) lea jmp jrcxz mov rex.RB fld rex.R repnz mov sub movabs sub xor mov sti movslq mov jbe add cmpsl rex.XB sbb test test sbb (bad) xchg and jno (bad) xchg add xlat and out sbb lret outsl rcll jo or test sbb add rorb sub jns xor and (bad) popfq sbb mov add push adc loopne (bad) or rex (bad) icebp jbe fmul pop cld enterq rex.B repz (bad) xor (bad) push andl (bad) (bad) ficoml xchg xchg outsl je add lret ja fistpl rex.RX mov cmp rex.WRB mov out movslq callq xorb in cld (bad) or sub mov mov mov sbb loopne in sahf (bad) and rorb pop add fidivl mov rex.WB int3 xchg cs mov stc adc movabs sub fcomps imul popfq jge std jne sub rex.RX sarl rcrl iret mov rolb (bad) imul pushq sti mov movsl mov xchg xor cmpsb lret jns jl (bad) add out xchg test retq pop pop rorl add data16 loop adc and fbstp (bad) shrl pop scas fimull xchg rorl and pop push adc cs jns rorl (bad) jg rol (bad) mov movabs hlt adc adc out shll cmp mov (bad) je rex shll (bad) loop rex.WXB jrcxz rorl xor outsb sbb leaveq retq sbb adc sub (bad) rex.WRX (bad) repnz lea xchg loopne or movabs sbb imul rex sub sbb (bad) jl xchg xabort rex (bad) cli xor shll pushq shr (bad) sarl scas pop hlt (bad) jo callq rcrl (bad) cmpsb out adc rorl movabs lods fsts shrl xchg add lret (bad) stos (bad) cmpsb (bad) push rex.B mov mov sarl outsl (bad) pop clc pop shrl adc mov xor lret sub addr32 jno out cltd orb sahf mov sbb (bad) pushfq sub shll (bad) (bad) lahf push adc rex.RB movabs fwait or and rex.R sub clc xchg cmp movsb shrl xor mov sub (bad) mov mov int movabs cmp fistp decl sub cmp test imul sub push fidivr clc shll (bad) sbb add xchg xchg xor mov fmuls rcll cmp (bad) scas outsb notb (bad) xor xor jle decl add stos (bad) mov rex.WX (bad) popfq (bad) jge out sahf add and fldcw add rcrl (bad) inc lahf rex.WRX cmp out (bad) mov movabs rex.WX or pop mov sahf callq (bad) add (bad) xacquire mov (bad) xchg out rex.XB rex.B lock idivl rex.WXB xchg test adc jg (bad) cwtl movabs pop lea roll xor push outsl movabs hlt movabs rex.XB and test lret (bad) mov jrcxz and xchg rex.WB lock jg mov lock sub xlat (bad) xchg xor fcmovb movabs add or and or xchg enterq cwtl rex.WX scas jae (bad) jp (bad) xor mov icebp jno movabs (bad) add (bad) (bad) negb jle add jne lea cwtl rex.WXB rex.RX add and cmp (bad) mov sbb jb pop rcl rex.X (bad) addr32 hlt lahf xchg push repz push (bad) cwtl sbb enterq imul rol rex.WR int (bad) pop mov retq rex.RXB xchg xchg pop and (bad) jae jmp js scas rex.WB mov xor (bad) xchg loop and xor jp or lahf js adc jge lock adc mov movsb rcll (bad) push repnz mov pushfq (bad) icebp repnz movabs cli fisttpl mov (bad) sbb add sub xor shll rex.X in shr (bad) cmc xor or shr fdivrl (bad) out insl movabs rex.WRX mov push movabs cwtl rex.B lret (bad) cmp test fbld ss (bad) jne add (bad) (bad) cmp (bad) faddl mull mov adc push shll out cmp (bad) fwait jp,pt xor clc pop mov fidivl rol hlt enterq rex.RB rex.RXB roll add rex.WXB xor leaveq sti callq mov (bad) rex.WRX rex.X mov add movsl and pop (bad) push (bad) xor (bad) shrl xor and adc xor and xchg iret loope (bad) mov fcoml (bad) (bad) (bad) fsubp shrb imul xor outsl adc ja (bad) xor fisubl mov pmulhw adc shrl rex.RX xchg sbb sbb push decb push out (bad) pop fwait (bad) shll (bad) pop movsb lret mov jp xchg stos xchg (bad) (bad) shrl (bad) insb cmp imul pop add and imul (bad) rex.WXB retq pop jo sbb (bad) and adcl pop sub rex.WRX insb push out xchg or sub rorl roll movsl sub rex.R insb ss sub std int3 int ds sar add in mov adcl (bad) pushq pop imul mov fdivs retq cmpl and adc idivl ss jl (bad) in (bad) data16 imul push lretw pop lods rex.R andl (bad) jp mov and mov cmpsl (bad) rex.R rex.WB vdivsd and add js adc loope jp (bad) shr jne loope jns shll xchg mov (bad) push (bad) inc movsb repz rcrw jl (bad) je (bad) or rex.B sbb repz xchg or rex.WX rex.WRXB (bad) mov ja (bad) (bad) mov gs sub (bad) xlat stos int3 imulb lods retq rex rex.RB or jmpq push (bad) js and add push shl sarb mov (bad) cmp (bad) adc (bad) stos cpuid push jge jns pop xchg rcr loop cmp scas jns (bad) cmpsb in cld rcrl out rcll (bad) cmp rorl lret sahf jns shrl jns movabs add (bad) mov retq and mov sbb test mov cmp addr32 cmpsb (bad) adc scas push loope add rex.XB test pop jno mov enterq hlt add sbb (bad) enterq and paddusw (bad) ffreep xchg xor (bad) (bad) xchg retq test lret gs (bad) xchg jne enterq movslq cwtl xor iret rex.RX rex.WRXB jne jns imul movabs (bad) cmp and in repnz (bad) clc enterq outsb lret mov addr32 mov addb (bad) sbb jrcxz xor cmc fsubrs xor sahf mov rol vminpd (bad) rcll rorb movabs jl in (bad) rex.RX xlat (bad) or xor (bad) (bad) icebp repnz fucomip rex.R rex.B mov cmp fwait lret cmc (bad) bnd outsl int3 lods test (bad) lods (bad) out lret adc loopne adc repnz lahf pop in fld imul rex.R ds pushq mov insl lahf and fildl mov stc pause shrl int je outsl jle pop mov mov or (bad) cltd sbb fidivr or xor mov xlat repz cli lret (bad) int3 imul sbb idivb push and rex.RX sbb jrcxz cmpsl adc outsb rex.B lea sahf fdivr mov mov fwait pushq rex.W bnd retq rcr rex.WR jmpq loop jmp (bad) push adc rex.WRX cli adcl faddl (bad) fwait adcb js (bad) mov (bad) (bad) int3 pop shr jns push icebp (bad) stc sbb cmpl (bad) movabs int3 repnz (bad) jns ja lret insb xchg movabs jrcxz lea jbe add stos rex.X fs lods adc mov out xchg in mov sub or (bad) (bad) cmp fs sub rex.W adc fnstenv rex.WRXB jge rex.B movabs enterq callq adc rex.RX mov mov adc fistl ror mov pushq sar add cmp lods rorl rcl cmp jmp (bad) push or fildll pushq cmp jge xchg loop (bad) shlb (bad) rcll pushq push (bad) lret mov adc fwait lret rex.WRB rex.WR (bad) xchg push (bad) loope push add adc decl jmpq jnp gs xor (bad) in test adc movabs jns mov or (bad) or roll lock mov cmp rex.WRX (bad) (bad) or rol mov add pop rex.RXB rex.WX and (bad) rex.WRX fwait sti rex.WB rex.B jno or rex.RXB test mov iret (bad) imul and cmp (bad) mov fmuls and out test push mov pop movabs add (bad) mov xchg rcll rex.R movabs add rex.WRB (bad) loope ss rex.B ja (bad) test jp shrw cmp and test pop icebp (bad) vandps pushq sub retq scas imul and push scas shl push (bad) (bad) movabs lret shr cmp cmpl rcl (bad) xlat cli roll xor rolb lock sbb mov mov rcll loop sub stos mov pop ja insl mov lret add jno (bad) mov rorb rex fcoml adc out in jle and retq rorl (bad) push (bad) or std rcrb mov ja xchg or (bad) xchg push sbb mov mov cmp adc outsb cmc mov jmpq and (bad) cmc pop jbe adc lods addr32 int xchg rex.WRXB rex.B fs movabs rolb sub int clc shrl (bad) sbb (bad) stc sub pushq movslq cmp leaveq in sarl jno (bad) lods hlt mov movslq (bad) fnstsw add rorb movabs cmc movabs push adc xchg inc rex.W fimull push mov xchg mov jge cmp test (bad) rex.XB sub jnp fwait push iret jrcxz rex.R lahf lret mov mov lret and add jg jle lahf add cld jno jrcxz in lods mov sahf fldl rex.RXB and jno in or retq rex.XB cs mov outsl adc sbb icebp add stos in rex.RB mov or shll sub jrcxz push mov jge cmp test (bad) scas rex rex.RXB adc sbb out mov in (bad) rex.W insl callq sbb clc xchg pop adc hlt rex.B outsl lahf test insb add movabs es jrcxz mov movabs stos (bad) nop test jae adc cmpb stos xor (bad) mov sub callq movabs add adc (bad) cmp mov rex.R add scas add sbb rep sbb gs movabs (bad) jmpq xchg shll adc pop test sar rex.WX js pop pop je loope cmp xor shrl subb sbb fmull xchg (bad) push pop outsb stc sbb scas rorl xor add adc in (bad) jle (bad) mov mov popfq pushfq movabs int hlt callq (bad) lahf rcrb iret jno cmc sbb retq mov mov mov adc mov xchg (bad) (bad) xchg mov rorb (bad) loopne mov (bad) loope rex.WRXB sbb add (bad) mov sar test mov mov rcll xchg mov (bad) lods jns add movabs fimull add ja or mov loopne adcb (bad) fwait shrb adc cwtl mov shlb xor movsb scas or push js mov adcl jmpq add (bad) notb (bad) mov add mov mov add mov xor xchg push cmp rcrb jo and sbb and (bad) (bad) sub lods sarl in mov movabs callq mov or (bad) roll mov mov push test insb repnz xchg repnz outsb repnz cltd ss fdivrs fadd cs xor mov add shrl fildll sbb enterq (bad) cmp int3 (bad) in (bad) xor rolb movabs push mov sahf lock add movsb je mov ror (bad) adc in mov jnp imul pop mov cmpsb leaveq fwait xor gs lret out movsl sbb test xchg movsb sarl cwtl fisttpll sar (bad) test jmpq xor jae xor (bad) jmp test sbb cmp ja add mov push in (bad) scas add fimul shlq mov and jmpq rol rex.RB fdivrl ror jnp (bad) sbb (bad) fwait sub lret shlb or leaveq (bad) movabs nop stos rex.WB stos sbb sbb mov sub xchg cmp cmp lret movabs sbb loop sarb stc movslq (bad) add js sti push iret jmpq test repnz shl xor cmp rex fsubr mov pushfq stos movabs add xor fcomps xor jp add and sub (bad) imul sti out movabs movabs push (bad) mov addr32 enterq movsb hlt punpckldq es rex.WRX mov mov jmp rex movabs scas int3 mov (bad) (bad) out outsl xchg fdivrs sub mov fldl pop leaveq adc and jrcxz cmc icebp cmp fcoms xor sbb loop lret mov out and (bad) add or loopne mov cwtl mov mov (bad) jbe rex.R add in sub lea jmpq and and push loope adc rex add in mov add add rex.WB (bad) add je adc pop (bad) (bad) fistpl rex.RB ds push repnz movsb xchg rex.RB popfq adc icebp xchg cmpsb lret clc movabs sbb callq (bad) outsl push push jnp mov outsl in pushq rex.XB sub rex.B lret loope rcl lret or sbb jnp loope (bad) rex.WR notl push sahf lea rcl movabs rex mov std (bad) paddusb (bad) int test loopne enterq sarl push push sahf je pop loope fs rex.RX (bad) rex.R adcl int jb movabs pop rex.B jae sub rcl adc push mov cmp mov or rcr je shl (bad) push movslq sarl sub cmp cli rolb movabs rex.RB rex.X movabs adc cmp (bad) sbb imul rol in and xor sbb and scas neg lahf push cltd pop (bad) add (bad) out rex.WRXB or rcrl mov cmp addr32 subb shr (bad) xor and iret icebp add loopne cwtl orl ss in (bad) lea (bad) cmp mov and vpminub shl xlat jne movabs pop (bad) adc sahf rex.R addr32 rex.WB leaveq rol test rex.R mov sbb (bad) xor fstpl fs pop data16 fisubr fldl2e mov and (bad) popfq mov mov xchg (bad) decb adc out cli in sub (bad) jae rex.R rex.RB fwait xor sub rorb sub (bad) fldenv cs (bad) mov ja jae cmp fldt pop (bad) and add sahf sub pop rex.WRXB lods adc lods cwtl (bad) (bad) push sbb push (bad) scas (bad) (bad) push sub push pushq (bad) cmove (bad) movslq add imul sub mov movsl jge out mov rol cmp vmovaps rex.WRB mov (bad) (bad) ror jg js in lret loop repnz movsl (bad) repz ffree sub clc ds roll xchg fs fnstenv rcl (bad) lods rex.WRX fnsave xchg mov fistpll cmp jge shrl (bad) mov notb lret pushq (bad) cmp jg loop (bad) out jge add adc xor mov lods enterq xchg retq (bad) adc loop push (bad) icebp cmp (bad) (bad) lret callq movsb jle sti popfq negl fcmovnb repnz jnp movsl (bad) bnd rex.WRXB rex.WRXB sarl jge (bad) cmpsb fdivrl scas pop sub in insb xor mov cltd mov rorl push testl rclb push ror ficoml rolb fcmovnb in pop add (bad) mov movslq sahf pushq jbe (bad) cmc sub nop adc cltd push pop (bad) sub rex.RX movsl xlat or xchg (bad) cld mov jge rex.RB and rex.WRXB rex.RXB out movslq (bad) rex.WX adc mov lea cmpsl pop rex.R push push cmp scas xchg pop mov xor repnz (bad) jo and fnsave shrl ss jbe retq bswap callq push mov movslq (bad) scas or popfq xchg rex.B loope rcr mov js std jge pushfq rex.X adc pushq cld mov cltd movsb cmc (bad) shl fdivrs lock rex.XB nop mov xor xchg xor (bad) loop imul pop jp leaveq push icebp enterq test sub (bad) rex.RB rex.B lret movslq and add xlat xor leaveq mov movabs xlat cmp (bad) or rolb insb and pop leaveq sti leaveq repnz mov movslq and (bad) movabs adc rex.X sbb (bad) cmp mov cmp push add ficomp jne mov and es int xchg ffree mov fld imul ja jae in icebp lret lret mov sub sbb (bad) (bad) jl add fs pop (bad) addr32 movslq cmp shrl stos clc enterq push (bad) in sbb sbb hlt mov iret xor add test push (bad) mov jne or fsubp cmpsl addr32 (bad) and cwtl ja or mov fwait (bad) (bad) mov gs adc (bad) xchg enterq jle retq retq js test rex.RXB jl outsl sub (bad) test lahf pushfq imul xlat (bad) mov xchg sbb or add and mov fsub add rex.W xor sbb (bad) (bad) or data16 jg pop sarl or mov mov andl rex.WR (bad) add ja std pop push leaveq add sub (bad) out rcrl int lahf (bad) (bad) (bad) jb add pop cmp imul mov cmp sarl (bad) sbb sub js (bad) neg clc (bad) cltd adc rcr repnz sarl retq cmp (bad) hlt (bad) clc ja pop data16 dec loop add imul rorl mov fnstenv fisttpl shll push sub add roll (bad) sahf push pop shrl addl (bad) sbb lods (bad) insb imul cli push adc mov rex.WXB mov lret test jp fildl imul xchg scas sahf jg callq int3 movabs mov cmpsl adc imul lea out popfq jne roll fs or push rex.WB (bad) ss hlt divl out rex.X retq or and retq or cmp xor sbb mov adc (bad) adc or cmp rcll or (bad) fwait rex.WRB add (bad) movsl cwtl and test cmp cmc mov rex.WXB and sub mov lea and xor lret mov (bad) mov leaveq movabs in popfq std (bad) jmp mov movabs retq xchg jl retq (bad) mov pop sub xchg cmp pushq jl pushq mov outsb and sub cmp xor fmull out (bad) pushq jns add add int3 cmp out mov jae out (bad) test (bad) jo mov xchg retq sbb cld rex.WRB (bad) nop pop add popfq sbb or xchg (bad) enterq rex.X lret or rex.RX movabs or rex.RB or pop movabs jrcxz adc adc fwait xlat xor add andl loope repnz (bad) (bad) movsb push test xor movabs add shr lret fcomp int3 roll stc shrl lock shll test lahf lret sbb mov lret or xchg movabs repnz add jbe (bad) imul or movabs rcrl shr shlb sub pushq and test stc add int3 movsb cmp xchg xor xor lock pushq (bad) rex.WXB add cld jnp (bad) cltd fdivrs xor (bad) rex.XB gs xchg in cwtl mov iret cwtl in (bad) repnz retq fsubl callq rex.WB (bad) incb pop (bad) sahf (bad) mov fwait loopne and pop ror lods rclb callq jle mov (bad) imull sbb insl lret rex rex.WX shll cmpsl or mov mov xlat pop (bad) rex.WRX rex.B mov bnd adc je out or mov (bad) xchg pop scas rex.WRXB mov add int3 fcompl adc or rex.RX mov (bad) mov jno mov callq lods and out (bad) lea xor repz sbb int push mov retq int3 lock fldenv adc rcl xchg mov cmp vaddsubps cmp rex.RXB lret jle jg repz pushfq (bad) lret pop (bad) rex.XB rex.B jno movsl push or rex.WR lock and (bad) push int3 push (bad) lods fdivrl addl movabs fscale test mov jbe nop roll xlat jg test mov ror pushfq xor fcoms (bad) mov rcrl ds xchg fstpt (bad) ss add stc cli (bad) (bad) mov rex.WX rex.WX jle retq pop jbe (bad) rex.WXB mov fwait push movabs jp push xchg mov push and rorl (bad) sub rcrl cmp (bad) lea pop out mov mov (bad) cmpsb (bad) xchg shll shrl int3 rex.WRXB (bad) insl xor sarb jns add mov lret and sbb xchg imul mov ds (bad) (bad) leaveq stos sahf rex.WB mov int loop sbbl mov (bad) rex.W adc (bad) xchg (bad) (bad) mov sub callq test adc shrl orl (bad) push mov movsb sub retq callq sub popfq lock xchg movabs pop pop and loope sub (bad) cmc or mov repnz (bad) add out lret sub imul sbb scas loope imul test jle rol cmpsb mov shrl lret std mov jge mov add cmpsb jbe cmpl test push scas rcl pop sarb xor mov fisttp sbb jne,pt xchg mov shl imul or cmpsb sarl adc mov sub rorl subl pop jrcxz (bad) adc (bad) and (bad) lret fsubs rorl cmp jmp mov xchg sbb jp push xchg xor adc pop (bad) shll (bad) mov add or rex (bad) repz (bad) rex.WR cld icebp scas (bad) (bad) rex.B fistpl (bad) lods rol mov sahf sub adc mov (bad) or sbb or xorl (bad) (bad) rex.WRXB xchg (bad) xor cmpsb jnp rcll xlat jns ss cmpsl iret push pop icebp rex.RX in and rex.R shll sub jo scas lods fimul insb rex.RB pop xor cmp (bad) xchg (bad) pushq and and test in movslq loop lret sub pop movabs test lods lret mov sti add int3 push mov pop imul stos adc in leaveq pop (bad) mov xchg (bad) jge,pn jo cmp lods sub adc fdiv mov (bad) (bad) adc (bad) (bad) stc xchg xor xchg lods movslq int mov cmpsl rex.R (bad) jmpq (bad) movabs pop sahf rex.WRX repz or jmpq pop test sub sbbb adc pop sarl mov mov rex.XB rex.R mov rex.WR push and (bad) (bad) insl pop xchg rex.WB (bad) loope clc callq idivb data16 (bad) (bad) movslq stc icebp int3 (bad) loopne divps int3 leaveq and (bad) adc fidiv outsl or repz xchg or sub xchg movsb sbb sub movsb out xorl je mov xlat (bad) mov mov movslq (bad) sbb clc xchg addr32 jl retq mov movslq jl je mov sbb sbb movslq xlat xor vpslld sbb icebp mov (bad) xor xchg xor mov xor xor mov cmp fistpll rex.RX xor loope (bad) fsubrl and popfq (bad) mov test sub mov jp and bnd xchg mov add adc (bad) jmpq xchg xchg insl in add jmp rex.XB movsb int3 es pop in xlat testb loope int3 (bad) (bad) rex.WRXB cmpsb xor popq (bad) jno push loopne adc sub ja (bad) imulb insl stos and (bad) sbb rex.WR fwait insb add movabs fdivr pop jb xchg cmp jp adc stc mov scas rorb xchg pop (bad) jle jne push mov (bad) mov ja push mov xor adc rcll pop clc and sub (bad) (bad) cmpsl xchg adc sti (bad) jnp xchg (bad) insb pop retq movabs out rorl adcb movsl fwait mov pushfq rorl push or lret shrl rex.RXB mov jnp xor out rex.RX rex.RB (bad) repz fdivrs cwtl (bad) fisubl xchg sub mov fistl int or mov rex.B retq rex.RX (bad) std adc xchg (bad) leaveq jae cltd mov adc push (bad) iret loope rex.WB popfq scas rex.B (bad) add sbb test ja push movabs insl insb mov cmp and add imul lock mov adc fwait pop movabs sub movslq jne movsb enterq pushq clc repz movslq (bad) mov adc and (bad) xchg rex.RXB fwait mul fwait or adc xor andb fwait pop (bad) pop loope int3 push or (bad) (bad) pop mov jo movabs lods xchg rex.WB mov stos add pop jno lret movsb cltd movsb (bad) (bad) (bad) mov mov andl jae rex.WRB fwait lret rex.RXB je notl and (bad) out or push adc sbb (bad) fisttpll (bad) mov rex.RXB pop icebp outsb in (bad) mov mov (bad) movsb pop (bad) loope (bad) imul mov adc cmp pop in out loopne (bad) mov movsb sub or out (bad) lea xchg js push movabs or pop sub jns and jmp roll fsubrl fldl sahf sbb xchg mov addr32 rclb rex.RX out iret sub mov rorl add in fwait cli sarl js (bad) (bad) xlat movabs retq sbb push fcmove mov int (bad) push rex.XB (bad) shr fcompl ja rorl fs (bad) movsl test (bad) repz rex.R sar movabs pop lock jmp adc icebp popfq (bad) xchg sarl test int sub (bad) rorl pop loope repz or xor addr32 jae jmpq mov (bad) stos push retq jle adc fnop sub (bad) or enterq (bad) (bad) (bad) push (bad) (bad) mov rex.WR push mov rex.WR in add jmp jle sti jrcxz xchg xor jrcxz rex.WX pop js pop rex.WX xchg sarl mov cltd sub rex.WRXB jb sub add loop popfq (bad) xor rex.WRB lret enterq jmp packuswb (bad) jo sarb (bad) (bad) lock fnstenv (bad) rex.WR mov movslq add mov fcmove xchg (bad) push in roll in mov add xchg test loope (bad) negb addb loope mov (bad) or pushq sar clc stos test rcr int3 (bad) mov and rcrl rcll icebp xchg (bad) rorl xchg movsb jge cli and rex.RB (bad) sbb fnstcw pop mov jns out movsb (bad) (bad) fsubrs rex.WRB and rorl mov add sbb rex.X adc in mov iret sub out imul js add jmpq bndstx (bad) addr32 imul sti sahf outsb pushq mov mov movabs imul jae or fidiv (bad) or cwtl mov callq rol push rex.WRB mov lret push test mov add xor mov (bad) popfq mul pop movabs fs and test xorb xchg roll or xchg cmpsb fwait (bad) jb and sbb mov lea cmp stos iret cmp test rex.XB sub add (bad) jo mov movsb int or test jmpq outsb cmpl and rex.WRXB shl sub ss shrl mov mov sbb rex.B rex.W test data16 rclb outsb rcrl (bad) loope mull jnp mov jle rex.R rol data16 cs mov mulb mov stos pop negl sub (bad) fwait retq (bad) add sbb (bad) stos in jo repnz stc rex.WRB sub loopne rcl test fsubrs roll es rex.B sbb xchg sahf xchg adc sub sub lret hlt xchg pop mov std cmp fwait pop sub shll push fildl hlt cltd mov (bad) and rol pop in jne ja xor sbb adc retq jmp repnz (bad) mov faddl out pushfq lret jno icebp int insl rex.RX repnz data16 sbb or add (bad) fisttpll rclb test pushq jp (bad) adc imul rex xor sbb xchg loop clc fsubrs rex.B int lret rex.W push sub xchg add adc pop sub idivb cmpsb jrcxz rex.RX mov mov shrb (bad) in js (bad) (bad) adc jg test jmpq xchg mov (bad) stc add in rex.RX rcrl outsb adc pop sar je (bad) cli push mov rex.WXB loopne (bad) lret mov sub sahf (bad) mov fiaddl sarl je xchg push (bad) add movabs (bad) cmp jle clts add rcll rex.XB rex.RB cmp xchg cmp sbb jns jp xchg xor jrcxz retq mov jne cs (bad) add imul push jp (bad) rex.WRB jne pushq mov movabs sub callq lahf rex.WRXB mov movabs or add sub jnp adc mov xchg mov pop pop (bad) (bad) (bad) mov add shll (bad) sarb rex.WRX (bad) jp mov data16 jl mov roll leaveq push rorl fidivrl add lock stc xchg sub out fstp cli (bad) lret jrcxz (bad) fidivl (bad) (bad) (bad) fistpl xor mov add test lret sti cmp add mov rex.RB test loopne (bad) xor adc push adc loop lock mov ror rorl cwtl addr32 mov mov stc sub enterq (bad) sub lock (bad) addr32 insb sub movsl (bad) xor mov std pushq rolb js rex.XB in xchg push fdiv jno lret rex.W (bad) jbe rex.XB rex.RB cmpsl rex.WX gs cwtl icebp jmp lock es jge add cmp xchg lret insb xchg and rcrb callq add xchg rex.WX (bad) notl out xor pop shlb (bad) or callq movsl cmp nop fwait xchg and sub jno shrb rex.X test mov leaveq leaveq mov int3 push mov or movb pop adc and (bad) out (bad) pop repz xchg add xor movabs add sarl mov (bad) jnp adc (bad) lret rorl dec adc jl rex.WR rex.RX rex.WX cmpsl push retq retq popfq subl adc lock rex.WXB mov (bad) jmpq jae rex.RXB gs mov rex.B mov or add in (bad) pop ror retq fucom rex.RB add xor fld (bad) xchg cmpsl int3 test mov push mov mov jae xchg in mov (bad) stos mov mov lods (bad) push jp (bad) repz rcll repnz outsb mov je mov lods add cmp cmp mov or (bad) (bad) (bad) jnp mov or sbb movsb mov (bad) or pushfq (bad) add jg loop and movabs mov movabs mulb stc add (bad) cld (bad) adc cmp (bad) jae rex.X fistl out mov loopne stos in test (bad) cmp lahf addl stos (bad) shrb rex.WRB repz mov ror enterq loope (bad) lret xchg js sbb mov rex.WR and cmp add in (bad) (bad) flds jg (bad) xchg repnz lock movabs (bad) callq mov or adc jl or adc xor (bad) movabs jno (bad) push adcl sub (bad) jae rex.RB fwait mov sub mov (bad) lods fmul (bad) or loopne (bad) rex.RB rex.WRB cmp rex.X pushq mov push in rex.WXB fstpt rex.WR cmp xor push xor insl mulb stos (bad) mov rex.XB movsl movabs rex.WRX push fadds jl pushq movsl rex.RX pushq loopne rex.XB rex.WRXB cmp mov add int3 add outsb pop (bad) push (bad) fidivl hlt or cwtl rex.X insb (bad) scas enterq mov xchg cmp insl (bad) rex (bad) lret sbb xchg rex.XB nop pushfq imul xchg test xor pop out (bad) stc cmp or ficoml iret repz (bad) rex.WR ds negl jns mov cmpsl enterq (bad) xor stc (bad) jne lock movslq es retq (bad) (bad) (bad) push jno mov rep movslq xor movslq rex.W xchg pop xchg push jo add jns repnz (bad) sbb movsl pop xor imul jp (bad) or rex.WRXB repnz callq rex.X xor leaveq add cld rex (bad) jb adcl int3 lock cs repz sub mov add (bad) imul std cld rex.R sub xor rex.RX jae sbb divl sub mov rdpmc sbb test mov cmp clc retq rex.WXB in adc data16 sub lret enterq jb sbb adc sti fcmovu jge adc rex.X js fadds adc js hlt mov in mov sub or mov adc xor add rcrl stos (bad) mov pop movabs mov add xlat (bad) lret fldcw and sub mov mov (bad) mov xlat and xchg adc sub out repz subb add mov stos pop callq fucomip sub rex.WB (bad) clc sti loope fdiv movslq insb popfq pop js jno movsl cmp or pushfq mov (bad) xor sub retq loope (bad) icebp test xor (bad) (bad) lahf int3 jge xor repz scas pop js jns in adc or jge cmp clc repnz (bad) mov rex.B callq pop pushq adc int jbe (bad) mov lock test (bad) jb or xchg mov sbb pushq xchg int3 (bad) jrcxz (bad) pop (bad) cltd outsb (bad) lahf movabs add rex.W (bad) fadd (bad) rex.RB rex.WB add (bad) sub addl mov xchg rolb cmpsb or or retq xchg xchg shrl lock mov lahf testb movsb or (bad) roll loop pop (bad) mov mov rcl shll xor (bad) sbb and jg xchg push lods shrl pop (bad) mov hlt je mov lods pop in rcll mov or or jbe cltd (bad) rex.WX pop xchg (bad) (bad) std int3 shll movabs (bad) pop xor ficom es rex.B rex.RB xor shll mov rorl (bad) cli adc cs xchg cmp sahf add sbb pop incb rcl jo xchg (bad) xchg (bad) scas fs sbb mov int (bad) movabs test loopne (bad) in popfq stc cs sarl addr32 movabs pop rex retq (bad) imul and rcll jns fucomp (bad) nop sarl test jle divl lahf mov (bad) and lret lret cmc mov fsubrp lahf push movabs movabs xchg decb xlat imul vdivpd jl push rex.RX rex.W callq icebp rex.WRB rex.WR stos rex.RXB rex.B fs mov xchg (bad) sahf push mov and xor fcmovb adc outsl (bad) jmpq outsb in pminsw adc mov addr32 notl out ds int3 iret enterq jnp test cmpsb icebp jne repnz test xchg and (bad) rex.W adc mov shrl pop mov and (bad) out ja jae (bad) (bad) jbe sbb lods ja (bad) xchg xchg rex.WRXB ss xor lods pushq rol rex.WX cmc jns rex.RXB and int lea cmpsb rex.RB xchg and sbb (bad) jbe adc movabs test mov rex jl adc retq sub add (bad) mov pop xor fnsave jrcxz sbb (bad) leaveq loopne cmpsl jge (bad) xchg (bad) push iret test rex.WRXB jl rex.RB xadd ja repnz mov lea xchg and jb rex.WB rex.WR cmp mov sbb pushq cmp ds and rolw rex jge andl lods rorl jae imul ds fwait (bad) imull mov pop add rorl rex.RXB mov (bad) and mov in (bad) or shll cmp rex.X rex.WR xchg cmpsb sub fnsave retq pushfq movabs (bad) jns jbe in fsincos sti cmp rex.WR repz retq lock (bad) (bad) or cmc and sub in rcll mov repnz ja ror in mov scas movabs rex.WXB lcall sti jns (bad) xor xor (bad) iret scas sub (bad) jns in push int3 or cs (bad) mov cmp (bad) movsl sbb add (bad) sbb and xchg mov ror cs rex.WXB sub in (bad) (bad) sub sti mov movabs push cmp rex.WX mov iret test movabs push sarl pop push rcr and mov mov movabs mov adc rcll retq pushq cmp (bad) icebp es fsubrl cmp jmpq rcrl js pop (bad) mov (bad) rex.XB ss and rex.WR pop push push mov rcll mov leaveq rorl lock push sbb jns and fistpll mov retq repnz cmp xchg rex.R adc cmp (bad) jmp shrl test rcl fbld cmpsl or or (bad) adc sar (bad) clc (bad) or mov rex.WRXB sarl push int (bad) add (bad) sbb imul movsl (bad) ror mov jno (bad) out rcll add and insl rorl pushfq jns rex.W (bad) (bad) int3 imul sahf test cs (bad) (bad) rex.WX xchg cmpl test ror (bad) mov movabs je rex.WR push jrcxz ss lock rclb (bad) jnp jns enterq or fildll (bad) (bad) xchg rcr jbe add rex.B sub or idivb mov in fcmovb xchg stos rex.WX sub or push (bad) fmuls add shll push xor sbb fnop jb (bad) adc xchg add lret data16 (bad) ss rex iret (bad) test movabs (bad) rex.R add (bad) ss sub or mov push rex.X pop pop (bad) (bad) sahf push rex.B rex.RB rex.WRX rex.B rex.R jrcxz callq xor mov shlq push cmp repnz mov in (bad) stos stos int3 shrl lret hlt cmp movabs movabs jle pop add push sbb rex (bad) jno or sarl rex.XB in (bad) pop or insb cmpl jb mov (bad) movsl out push mov and loope add jle pushq fistpll push movabs cltd lods mov movabs pop rex.R (bad) callq ss test leaveq (bad) xor in xor cmp imul retq add stos adc jns jo (bad) rex.WRX out cwtl rex.WX pop rex.R lret icebp jo mov pushfq jp rorb stc insb insb rex.XB mov shrl mov (bad) movabs es jle in jo mov (bad) shrb or rex.WRX sub clc in rcl fucomi mov sbb (bad) jns pop rol rex.WXB rex.RXB and or sahf rcll je (bad) push rex.B (bad) or adc int3 test add xchg adc rcll fsubs mov repz imul sbb shll cmc fcmovnb cmpsl sbb sub mov (bad) xchg cwtl adc rex.WR cmp rorl leaveq imul cmp sarb rex.WR movl or ss cmp rex.W shlb rex.WRB xor cli pushfq rcll push (bad) or rex.B ror subl ss pop push sbb pushfq adc fldcw rcrl jnp lret mov or adc cwtl sbb testl jmpq (bad) push (bad) xchg cmpsb loopne lahf push lret and (bad) int3 mov push notl and push mov mov cmp (bad) mov mov sbb imul (bad) int3 sbb shll adc loope mov mov adc lods jge fs jmp jl mov sbb cmp pop xadd es adc push add add hlt (bad) xchg and sarl (bad) cmp push retq mov jae pop rex.B (bad) lea (bad) jnp and (bad) incb cltd outsb mov pop mov popfq xchg pop or enterq push (bad) shrl pop movabs (bad) sbb jns jno (bad) lahf repnz add cli xchg clc jbe outsl movabs mov popfq sbb fcmovnbe loop add rex.WRXB mov rex.WRB rex.X roll jns retq rex.XB sti fistp movabs cmp enterq (bad) ficompl and cs movslq movsb scas rex.B adc (bad) retq jge in jns rcrq or rex.WB adc cwtl adc (bad) (bad) repnz movabs std lahf outsl xchg cmp sbb sbb movslq (bad) pop mov and pop (bad) rex.W repnz psllq lock mov jg iret rcrl imul js shlb pop mov movabs int3 movabs fidivr in (bad) push lock lods sub pop rex.WRXB rex.WRXB and xchg jne push (bad) jns pop es (bad) jp cmp xchg push jle movabs outsb jl callq push cmpsl cltd mov movabs rcr rex sbb and xchg lock xor rol imul xchg repnz sub outsb pop movabs xor ffree xchg std lret roll or adc and in and iret jmp mov (bad) ss xor mov in shll push xor movsb jmp mulb lods mov and cmp (bad) lahf mov sub (bad) sub ds (bad) int3 (bad) imul repz mov adc iret enterq retq (bad) (bad) add loope adc rex.B insb add je retq pop mov leaveq sbb (bad) pop out movabs sub (bad) (bad) xchg data16 pushq faddl cmpsb xor cld or (bad) push pop insb cmc add lods xor sahf retq cmp scas sbb sbb xchg mov sbb subl jle je (bad) (bad) cmp callq lahf jns mov (bad) jns mov idivb enterq mov gs insb pop cmp rex.WB rex.RB (bad) (bad) pushfq movsb pop cmp cs (bad) pop sub fisubrl js leaveq jbe insl rcrl add stos xor fnstcw xor sahf (bad) insl clc xchg jge (bad) jae int3 jne (bad) rex.RX (bad) iret imull (bad) sub (bad) jrcxz mov imul (bad) lods movabs sahf mov je rex.RXB mov or jl pop ror mov rex.W rex.RXB fnop rex.WRXB rex.R testl rcrq xchg out sbb sbb shrl and in rex.RX enterq jne rorl test (bad) cltd sarl lret add xor push jnp (bad) pushq ficom mov sbb (bad) shll pop sub rex.WRXB rorl jne push test xor and add repz js movslq sbb cmp mov xor jno rex.WRX and (bad) xor test mov retq mov and in (bad) rcll rex.RXB repz js or sub mov int3 mov xchg mov cmpsb icebp adc leaveq fild shr xlat cmp fidivrl cmpsb rex.WXB andw add cltd rcrl cmp repnz rex.WRX (bad) jge sub pop mov jnp or jo pop add sub repz int3 sub outsl stc rex.WRB cmp jno sub (bad) (bad) lea pop fisttpll in mov sbb xchg push xchg jp (bad) cmp (bad) or int3 (bad) mov lret es or jno jnp cmpsb (bad) jae jb movsl cmpsl or mov jrcxz (bad) cmp callq xor xchg idiv cmpsl sbb xor repz outsl xlat xchg leaveq data16 int3 gs add movabs lret retq lea (bad) lock lock cmp rex.WRX mov mov jnp mov xchg sub add adc and std data16 xchg cli (bad) mov fldcw (bad) pop cmpsl or jnp int3 mov mov ds mov sub icebp pop mov in sti (bad) hlt (bad) xchg jae mov mov mov cld movsl callq rex.WB rex.WR sub leaveq lahf sahf fnop jno jp fnsave rex.RX rex.WX gs rex.WRB adc orl pop mov loopne in jo or popfq lret fbld ds outsb push (bad) movabs sahf xchg fadds rex.RXB je and push rex.WR add rex.WB or test out imul sti je xor add xor cld mov xor jp mov mov xchg (bad) (bad) mov movabs jge cmp add or cmpsl jmpq or (bad) (bad) (bad) ds sti jno jmpq movabs js mov or (bad) mov shl jmpq (bad) pop retq push mov push rex.X (bad) outsb push xor (bad) (bad) cmpsb lods (bad) icebp cmc pushq (bad) lea rclb rex.WRXB (bad) enterq (bad) mov sbb sub add lahf loopne rex.WX add jno mov add orb imul (bad) push sarl hlt movslq add and (bad) lock jno lock xchg fsubl (bad) (bad) (bad) pop xchg shrl clc es (bad) shrl sub push jmp or (bad) jge xchg adc add popfq movslq int3 scas shll repnz roll or add xor lods pop push clc rex.WRX or mov fldcw (bad) and pop xor lahf (bad) lods cli adc adc fildl repz and sub sbb mov push (bad) rorl jno movabs repnz fldenv mov shr adc rex.RX rcl cmp jnp rol movabs cli fistl rex.B fsubr and add sarl out (bad) push (bad) movabs mov rex.RXB movsl push (bad) xor (bad) mov (bad) faddl and sub gs push shll stc movabs and test mov jmpq sbb movabs jno lret sbb pop (bad) cmp jno int adc sbb rex.RXB mov not in popfq lea int3 sbb sbb mov movb imul enterq rorl movslq jb or (bad) jmpq stc (bad) jno rorl rex.B adc rol (bad) cmpsl push hlt or lret xchg (bad) faddl shr movslq adc mov enterq rol cwtl adc (bad) and push addr32 (bad) gs in rex.WRX rex.B shll js mov xchg push push outsb stos (bad) lret mov leaveq rex.WRXB movabs fbstp in push rex.WX pushfq push mov mov rep (bad) rorl rex.X retq fmul stos lret lods mov loop loopne shrl outsb lret pop add mov rcll adcl pushq (bad) (bad) test (bad) fnstsw push mov rorl mov or and adc fnsave xchg mul rex.W andl cltd leaveq scas stos cmp push rex.B and incb negb (bad) sahf lods cmpsb xchg (bad) jp cmp or lcall enterq mov or (bad) retq fnstenv fnstsw sub mov flds movsl rex shll scas fsubrs adc movabs xor jns fptan movabs in push xchg jbe xchg addr32 movslq (bad) add (bad) (bad) rex.WRB cmp mov pop pushq adc out xchg retq cmc jrcxz add in mov lods fnop jg pop and mov xchg movsl xor int sbb rcr sbb lods mov ror or or roll cmp jbe dec mov mov int enterq fsubr shrl mov shlb pop add fadd out sub fs movsb (bad) movabs jno jnp mov out outsb push cmp ja sub jae adc (bad) (bad) sub test push lret mov xchg rex and or mov xchg add callq or mov xor enterq rex.B (bad) cmpsb xor mov xchg out cmpsl in xchg or and insb int3 (bad) rex (bad) rex.WXB mov cltd xor vpavgw (bad) lret jae fildl adc (bad) push (bad) cmc (bad) callq mov mov or mov and fild dec jno stos mov rclb scas add (bad) mov mov or (bad) add retq outsl cmpsb xchg mov leaveq cli int3 lcall add mov int3 leaveq mov fsubs (bad) (bad) rex rex.X hlt loope mov je callq (bad) jo mov mov jmpq cmc cmp mov out mov pop jrcxz (bad) cmpsl (bad) jmp (bad) jb jmp mov sbb clc packuswb std cs sbb mov mov mov rex.RX rex.R data16 cwtl mov data16 in (bad) jl pop cmp lret je hlt (bad) scas cmp adc jge push sub loope rex.XB jp (bad) sbbl (bad) cmpsl sbb ficomp and push je rol js lock pushq mov rex.WRB flds mov enterq add sub callq (bad) xchg push (bad) int3 mov fcomip cwtl (bad) and pop xchg cwtl and mov mov pop mov in or sub or and pop out rex.B fnop sub insb sub lock rex.WR add rorb (bad) jrcxz test mov (bad) adc (bad) xchg leaveq jle movabs mov and adc outsb rorb int3 loop (bad) cmp (bad) lret mov sbb fldl cmp out mov rex.WRXB sub cmp popfq jp mov sbb adc testb cmp (bad) add rex.WXB movabs or movabs ss add (bad) adc insb mov rex.RB xlat retq pop inc mov sub fcomps rex.WRXB rex.WR es sub sub fwait (bad) pop adc in rcl jbe mov mov add stos mov test repnz rcll int shll test or (bad) xchg iret adc movsb (bad) rex.B sbb (bad) fwait and and pushfq rorl xor rol and cltd lods (bad) lahf shl xchg flds add sti and xlat gs or insl xor rex.R jbe sahf mov stos lea (bad) rex.RB rex.WRXB sub imul test cmp roll mov pop lea sbb (bad) mov rex.RX rex.WRXB fs rcll xchg cli fwait xor add rcrl jmpq (bad) rcr movsl xor or rex.WB rclb adc add rclb push mov rex.RXB retq pop rex.WRXB xchg (bad) and sarl adc out repz cli and push xlat movabs (bad) xor sub (bad) rex.B cmp cltd pop ja mov cmp add (bad) in mov jo (bad) and faddp adc insl andl sbb movslq rex.WRX jp mov (bad) ficompl pop and (bad) sbb out sarl (bad) or jnp sbb jmpq out mov rex xor jmp mov mov leaveq mov rex.R sub cmp ja jae pop cmp fidivrl retq jbe (bad) fucomi retq rex.X (bad) enterq fisttpl push jo movabs rex.WR xchg fidivrl in retq cltd leaveq outsb jge fwait callq xor jb xchg js imul sub or rcrb mov icebp (bad) fisttpll xchg xchg fmull scas leaveq xchg mov (bad) insb (bad) jrcxz push jmp adc mov or loop (bad) (bad) push (bad) js and xor or mov movslq pop mov (bad) icebp rex.B cld (bad) or jae callq (bad) in iret push clc retq rex.WB sub xchg movsl shufps (bad) cmp pop mov cltd int3 xchg orb cmpsl leaveq (bad) sub rex.WB adc es int mov mov cmc movabs and mov test jmp mov add rol mov (bad) repz cli retq mov or or out xchg mov cltd or (bad) lock sub jnp mov in rex.R data16 cmp test sbb popfq sbb ffreep out jge (bad) and mov test sub and and sub rcll loopne jne iret stc cld (bad) mov (bad) in (bad) pushfq rolb sbb xchg pop movslq jmpq stc adc (bad) xchg (bad) (bad) (bad) cmp and and pop cmp mov repnz or pop push shrl mov shll xor rex.RB rex.RXB cwtl adc sub sbb mov (bad) pushfq jl (bad) (bad) and mov (bad) cmp (bad) xor push (bad) sahf scas hlt rcll in mov pop rcr out mov int jge pop test popfq movsl push cmp data16 mov xor pushfq ss pop movabs lods mov gs (bad) pop repz xchg pop (bad) mov out test push cltd sbb rol jge callq rex.WR pop (bad) adc sbb icebp pop (bad) xchg (bad) mov mov sbb (bad) shrl rex.W xor rex.WR push xchg iret sbb fimul mov movabs xlat rol jnp add out lret jne iret (bad) lahf pushq je (bad) sub push mov rex.B mov cmp xchg decb push shl adc notb leaveq mov rex lahf (bad) imul in add cmp (bad) cmp ffreep mov ds (bad) mov decb add jg out or pushq clc cltd sbb enterq xor add sub jno xchg movsl (bad) fbld rcrl ror xchg fs sahf xor lret or andl fcomps jb mov sbb fidivrl xchg repz movabs xchg or retq (bad) mov int xor ljmp popfq rex.WX cmp rolb (bad) adc xchg ror cli (bad) std mov (bad) lods (bad) out in add rcll mov cmp sub add or jg add cmc xor (bad) fbstp pop iret out nop shll or movsb xor (bad) xchg imul pop movabs sbb ficom jb add lret test push in push movsb (bad) (bad) rex.WRB or fcmovnu sub sbb test (bad) (bad) negl (bad) pushq and lea adc (bad) add jg (bad) (bad) pinsrw outsb cmp (bad) and movabs lret (bad) (bad) rex.RX ds (bad) rex.WX imul and rex.WRXB xchg jbe incb stc mov xorl lods (bad) push adc mov test xchg cmovs mov adc add insl and pop mov mov movabs sub rcll rex.RB sahf (bad) rex.WRB lret loope mov imul (bad) sti clc xchg fidivr sbb rex.WX movabs ja (bad) jo negl fprem1 (bad) xor pushfq test enterq clc jmpq (bad) (bad) (bad) mov (bad) push movabs in (bad) cmpl xlat rex.RX add and xchg (bad) mov callq mov mov rex.RB sbb andl (bad) or adc int3 stos (bad) xor xchg lret and in sahf pushq (bad) addr32 (bad) add movslq (bad) fwait adc int3 (bad) rex.WB rex.X callq std rex.W rex.RXB rex.WR ss xor xchg repnz (bad) or mov lret imull (bad) (bad) stc (bad) add and fcmove rex.WRX pop int3 mov ja rclb sti pop cwtl and push iret (bad) mov (bad) xor sarb enterq jbe test int3 push jmp xchg or rex.XB retq cmc in mov loopne (bad) rex.WRX or pop add loopne movabs (bad) rolb xchg (bad) loopne rex.WRX std nop rex.XB lock icebp rex.WRX rex.WRB (bad) out (bad) xchg leaveq mov jrcxz add lret in movabs jb ds cmpl rex jl (bad) cmp (bad) add rex.WRXB xor icebp (bad) cmc adc mov (bad) xor testl (bad) out jae mov rex.WRX rorb lret pop testb movsl or sbb int3 (bad) xchg leaveq adc (bad) movsl (bad) out iret mov test adc (bad) retq xchg outsl fxch (bad) mov enterq rex.W sub add loopne xor cmpsl sub stos data16 (bad) rex.WR icebp xchg loope (bad) or test xor lock test rex.R rex.RX add imul icebp fcmovnu (bad) or jmp (bad) outsb pextrw ds push fistp jg (bad) shlb and jrcxz sub push mov pop mov fbld lods leaveq lret int3 in mov imul (bad) pop mov fdivp ss xor rcll pop imul add repnz cld pop mov retq test or sbb push lods scas pushfq movabs jl test in xchg hlt mov mov roll retq repnz pop jmpq jb (bad) cmp xchg sbb jp mov cmpsb (bad) scas sete (bad) rorl xor fidivl adc fdivs scas (bad) test xor lea sub movabs push push mov push (bad) (bad) rex.XB pop stos std push rex.WR rex.B sub mov adc mov lahf in rex.WRXB (bad) movabs (bad) mov (bad) xchg add rcll cmp rex.RXB xlat jle outsl xchg mov roll or cmp sar rex.WXB and (bad) iret movabs shl jae rcll or rcll mov and shrl xor shrl pushq (bad) gs test and (bad) xor loopne (bad) jl (bad) andl xchg ja clc jmp mov int mov mov pushfq mov cmp rorb mov adc leaveq xchg roll sti (bad) sarl rcrl jb mov sub pop (bad) rorl roll stos imul sub xor cmp (bad) mov repnz adc rex.R lock (bad) xor orl sub outsb mov enterq (bad) push shll sbb in test retq rex.WX shrl (bad) cs adc lods ffree imul sbb imul shrl sti (bad) adc mov fsubrl cmp movslq (bad) mov (bad) xlat push repnz and (bad) pop lret mov movabs sub shl je scas add outsl (bad) vunpckhps sbb notl mov xchg addr32 add fisubr mov (bad) sub push scas jno sti pop lret and rex.WXB xchg vmovntps rcrl xor xchg gs jp rex.R lods lods js (bad) repnz je sbb (bad) in mov pop or or rex.WRB rex.X pushfq stc mov cmp int3 imul lahf hlt and (bad) xchg rcll rcl lock shrl xor sti xchg sarl test (bad) mov callq sbb lret cli add test (bad) (bad) pushq mov or clc sar callq mov and rex.RB stos rex.WRB jmpq outsb and loope jmpq (bad) pop mov mov jno lret movslq and mov enterq mov pop (bad) cmpsb cs (bad) callq (bad) jo adc rcll and retq bswap jo xchg stos stc mov in pop rex.B lea adc ja xor mov adc sahf pushq cwtl cmp rcrb or (bad) (bad) (bad) mov popq xchg add pop shrl jle (bad) pop sub (bad) sti insl adc xchg cmp mov rex mov xor (bad) add movsl rex.R sub pop (bad) rex.WB mov lods push jo (bad) clc mov rcll (bad) xor stc rorl cltd in jae cmp enterq add lahf (bad) callq roll popfq out sbb (bad) (bad) shll fwait rex.X (bad) adc mov push mov mov xchg shlb out fwait (bad) (bad) mov (bad) (bad) pop (bad) shll mov sbb (bad) lret pushfq pop (bad) mov out add mov jle out repnz cli sbb push add test (bad) adc movabs (bad) out (bad) outsl rex.W fld movsl roll sbb shr inc sub cld cmp fildll out retq (bad) (bad) icebp (bad) outsb cmpb shrl out imull and (bad) (bad) jle mov movsl push (bad) jns loop roll push gs popfq stc repnz mov mov and outsl rcrl push add ds mov cli lods sti rorl cmpl rex.WB fwait mov stc or cli rex.WXB and cmp cs xor enterq shll movabs fcompl push movsl in xchg cwtl or and sbb (bad) fsubs int xchg or mov mov (bad) lret (bad) jno testl mov insl (bad) sbb cmp (bad) add or add or lret and sarl xchg sbb pop rcll adcl or cmp pop mov (bad) rex.RXB xchg or movabs pushfq iret ficoml sub add int3 ds mov out movsb (bad) rex.WR jg rcrl imul push pushq insb rex.WRX rex.WRB xor and jg pushq and cli push loope (bad) hlt mov sti rcrb shrq sub roll mov (bad) pop mov rex.RB cs cmp imul mov sbb retq mov add xchg push sbb fwait or icebp rex.B (bad) jbe leaveq iret jle mov (bad) lea pop or enterq scas incb cmpsb (bad) rcrl loop jae lea (bad) sub cltd lock add sub (bad) repz loop shrl int3 loope (bad) negl divps cs fnop rcll (bad) xor movsl repz push movabs callq fs ds cmpsb (bad) rex.WRXB lock pop (bad) idiv xchg scas fldl (bad) lret test movslq ror lock (bad) jmp xor xchg vmresume pushq and scas jne xchg sarb push rex.WRB xor loope mov rex.WR rex.X sbb mov fistl (bad) sub clc sarl adc stc lahf (bad) mov sub rcll (bad) add mov and sarl (bad) insb lret std mov addr32 mov adc push jg push cltd add stos shrl rex.WRX and xorb or cmpsl (bad) (bad) push mov negl (bad) rex.RX test and sbb in rex.WR rol shlb adcl pop xor pushq stc mov (bad) rex.WR (bad) movabs sub sarl and iret (bad) mov (bad) mov stos rex.X rex.WB rol and repz xchg mov mov (bad) cmpsb mov rol pushfq iret xor stc sbb rcrl idivl lock flds rex.WRX (bad) push add sub cmp mov (bad) cmp and mov mov (bad) loop mov add pop int jne mov fld jo (bad) cmp (bad) pop shrl jge stc rex.WRXB fcmovne lret and or add test int pop or xchg faddp mov gs xor cmp rcrl mov imul or or (bad) xor jmp lret insl cmp (bad) sarl (bad) (bad) and shll xchg scas push imul (bad) xchg jns hlt rex.XB lret xchg leaveq imul sub (bad) mov cltd frstor sub in roll mov mov rex.WRXB cs shl and pushfq xchg jmp pop jnp scas lret (bad) or in mov or retq leaveq movsb rex.B fistpl icebp cld xchg fpatan lods jmpq gs loope enterq (bad) data16 rex.WRB xlat cli sbb lret (bad) repnz imul test or (bad) push data16 pop xchg push insl rex.RXB or (bad) icebp add retq mov in repnz (bad) xor push clc sub rex loop and sbb adc mov (bad) loopne push rolb (bad) imul or movslq jl mov jne stos rex.WRB sub loope mov (bad) (bad) xor (bad) lret or pop popfq xchg mov xchg lea cmpsl sbb loop mov pop jp jmp cs (bad) cmc movabs push xor rex flds adc test rex.X mov (bad) rex.WRX rorl out (bad) fcoml (bad) sar add (bad) xchg push jne loop rex.RX movabs movabs mov nop imul cmp lea jbe fnstsw movabs loopne js mov xor (bad) (bad) fadd or lods mov rex.B rex.WXB (bad) shld retq test (bad) in movsb (bad) outsl xchg shrl rex.RB rorl int sarl repnz push or (bad) cld and (bad) shll cmpsl ja sbb iret mov adc cmp adc add pushq xchg movabs (bad) push (bad) xor sbb test adcb loop (bad) pushq test addr32 nop sub jne (bad) stos adc xchg movabs addr32 xlat (bad) (bad) js testb (bad) cmpsb (bad) scas rex.XB add (bad) cmp rex.X leaveq icebp std lret lret (bad) mov iret (bad) fstps addr32 jmpq std popfq outsl adc fnstenv cmc and push movabs and clc loope add (bad) mov cmc jb push out rex.RXB xchg movabs bnd (bad) ja fidivl pop stc jbe (bad) xchg (bad) ds (bad) fstps sti (bad) jb (bad) (bad) fdivr (bad) in rex.WRB insl hlt and (bad) retq pop (bad) jb movl sbb or mulb scas test (bad) rol sti xlat xor jbe lret add rex.WX or test (bad) loopne jp vmovd rex.WR jae pop (bad) (bad) icebp rex.WRXB rex.RB repz xorl retq xchg (bad) cmp xchg mov shlb gs rex.B fsubrs rex.WX (bad) movsb or pop xor cmpsb fwait xor pop loope repz cmc insb div jno fist mov add sbb std cltd movabs pop in in fistpll push out and and (bad) pop pushq (bad) adc cmpb push mov add test jo imul rex.W xchg sub popfq cmp int3 int3 sarl (bad) (bad) out fwait fwait (bad) adc adc mov xor sbb add pop (bad) or (bad) jne callq sbb jb mov test fcmovnbe or rex.WR fwait rex.WB int rex.WRX sti lret cmp fs rex.WXB rex.X (bad) jae jnp xchg cs jbe cmp cmp xchg mov jmpq mov (bad) jle xlat rex.WRX movabs loope ja ss insl movsl sub movslq push push (bad) mov mov (bad) mov out movabs sub (bad) bnd lock mov addl mov (bad) cs es mov xor mov push movslq add (bad) xor mov or sbb or mov ds movabs sbb sbb xchg test and retq enterq std or add shrb (bad) iret lret ss icebp loope rclb rex.WRXB out lahf rex.R (bad) sbb fdivrs push retq sbb add add rex.WRB adc enterq cmp pop jle mov adc rex.W movabs imul add mov (bad) lret mov divl jno cmp pop rcrl test rex.WR and push xchg icebp rex.RXB (bad) jae (bad) pop and xchg out roll in lret ds (bad) (bad) push cmpsl shrl rex.XB subl rex.WRB rorl mov xchg ror imul cld sbb repnz stos roll mov (bad) movabs imul or (bad) rex.W rex.RXB cmp rcl test rcrl popfq movsb je testl rex.B (bad) xlat movsb repz jp int pop mov std or out (bad) (bad) (bad) int3 (bad) outsl mov fsts movabs jg (bad) repz std xchg push loopne movslq in mov (bad) test fmuls (bad) and test lock jo out pop mov xchg cmp and loope xor rex.RX pop pushfq mov jge rex.XB add lret sti stos shll movabs loop mov xchg (bad) pop sarl mov jle pushq xchg mov jns rcrl (bad) movsl cmp mov cli pop xchg jno insl sub in rorl add frstor fdivrl sti movslq pushfq lods (bad) fimull cmpsb out lret cmp (bad) retq rcl (bad) dec data16 cli rorl addr32 int sbb mov scas pushq add or iret outsl jb (bad) fdivr pop insl or pushq out popfq clc cli int lods fidivl mov (bad) sub adc enterq push (bad) rorl pushfq add (bad) test (bad) cltd rex.WRX jge cli (bad) xor loop xchg push (bad) and adc lahf ss xchg imul xchg sub rcrl adc sub in sbb movabs xor add sub (bad) addr32 xlat rcr sbbl shrl (bad) cmp movsl js or sub rcll cmpsl es repz addl cld (bad) (bad) or cltd jmp ds (bad) add outsb rex.WRXB mov mov negl add (bad) mov (bad) jne (bad) jg rex.WRX imull test mov shr mov fcmovbe insb roll lret stos repz and out or (bad) shr add (bad) rex.WRX cltd mov push xchg or adc scas loopne mov test shrl outsb pop rcll or rex.RB lret and adc in retq jb (bad) fdivp mulb mov rex.WB add popfq pushq cmp rol add cli gs xor in mov jb xor rorl pop stos pop cld mov adc test mov (bad) movabs or shrl rex.RX push in roll (bad) (bad) in callq sbb mov out push lret clc push sarl sbb flds jo movabs stos jl (bad) xor add fadds shll jbe xor xabort pushfq (bad) adc adc cli (bad) rorl mov xchg fbstp and xchg (bad) (bad) rex.WR xchg or rex.X fs imul stos (bad) or gs mov (bad) pop fldl movslq push add rcrl mov rcrb jno addr32 lret sbb xor stc mov scas test (bad) pop cltd mov (bad) lea jg rcl pop pop pop insl data16 nop callq xchg cld cmp pop (bad) jmpq rcll imulb (bad) jge repz (bad) lods xor sub scas and add rex.RB cmpsl mov cmp mov (bad) loope int3 (bad) push test or gs roll decl test retq add fldcw or fild pop rex.WXB std adc ds pop mov xchg (bad) or cmp (bad) (bad) cmp retq mov sub movabs xchg cmpl stc add jle (bad) loopne xor fdivs cmp cmp mov (bad) (bad) mov add or int3 jae mov sbb movabs mov xchg xchg popfq mov push mov gs scas mov shr add (bad) idivb mov mov xor (bad) and add (bad) repz loope outsl fistl jp or rcrl insb pop rcl jl or loopne rex.WRX mov fldcw sarl cmp adc stos rcr shrl std loopne lret mov xor rex.W std jae fimul test jns out sti stos xor rex.WX outsl lret jge fiaddl stc es (bad) add cli pop pushq imul movabs lret mov adc lret jnp repz (bad) adc and stos movabs test std mov add fwait xchg imul hlt outsl shrl sbb mov add rex.WR rex.WRXB rex.RXB jb add rex.WRB rex.WB repz rex.XB outsb rcl and retq mov xchg or mov js rorl rex.XB pop (bad) (bad) sbb (bad) xchg (bad) stos rex.RX sub pop (bad) xchg movsb (bad) fistpll (bad) cmp (bad) lock mov (bad) xchg jl repz mov pop retq cld test xchg shll fadd or (bad) mov lret mov rex.RB orb sub (bad) rex.WX movabs sub cmp xchg stc lea retq mov pop rcll sbb imul cmc movabs jb,pt fcompl sarl icebp push divl rex.XB roll scas mov (bad) cmpsb sub rex.B frstor cmpsl insl sub cltd movabs mov mov xchg or cmp sub pushfq add fmul (bad) enterq add cmp and movabs push retq mov lcall lret mov in (bad) fstp (bad) rex lea (bad) lret mov xrelease adc mov lret mov or enterq (bad) rex.RX jb and data16 xor imul stc push in (bad) rex.W mov sbb cmp rex cwtl cmpsl or cltd (bad) rex.WR or nop scas repz rcrl (bad) in rex.WB sub vpaddusb adc fsts (bad) imul pop or cmp jns negb rex.B fsubs xchg add repnz adc jg cmp xchg leaveq rex.XB pushfq rex.RX (bad) out nop jae fidivl sahf insl lods leaveq and jno in sbb sub pop iret mov lret shr test (bad) std (bad) movabs (bad) std (bad) rex cmp data16 (bad) xor (bad) xchg fildll rex.WRXB (bad) movabs mov out stc lret fs loope shr jmpq or test movsl (bad) jno mov ss movsl (bad) leaveq js pushq jrcxz lret rex.RX ds and and addl (bad) ds (bad) mov cs jmpq xor xor (bad) adc (bad) (bad) and movabs out insb cmp clc rex.XB add mov (bad) repz (bad) paddusw rex.WR fcoml mov sub loopne jl pushq (bad) and stc pop movb cmc repnz mov (bad) mov add stos xor xorl stos mov sbb adc (bad) xor in sub adc mov xchg and callq jo push mov jnp movabs (bad) leaveq cli pop xchg rex.WB rex.RXB pop (bad) repnz pop cmp imul pop clc pop xchg cs (bad) jo rex.WRX sub movabs xor pop fdivs loope jbe (bad) cmc (bad) lea mov xor rex.RXB rex.B xchg adc pop cmp andl (bad) andl sbb idivb imul jb rolb (bad) movsl enterq cmc mov mov test enterq rex.WXB js rex.RXB mov outsb pop cmpsb stc (bad) iret add imul xchg (bad) (bad) mov rcrl jrcxz xchg rex.WXB hlt leaveq or hlt vpmovmskb (bad) mov jo mov adc cs pop je (bad) (bad) cmc testl enterq jle imulb pop xchg (bad) mov sarl lods mov in jg test and jae pop jns callq xor xor pop sbb add mov rex.WRXB data16 roll jae fstl push pushfq (bad) jb out xchg retq (bad) repnz pushq sbb push (bad) leaveq adc rex.WB pop rcrb stc and movabs push jmp rcr rcrl (bad) rex.WRB mov mov fdivrl and movl sarl packssdw int3 jmp rorl fcmovnb out rex.WB sub outsl data16 movabs movsb mov jg xchg rcrl fiadd loope in rex.B rex sbb (bad) rorl popfq nop es add movabs jge lea roll rorb xchg push outsl sbb sahf (bad) rex.WRB fs cwtl and cmpsl mov sub sbb repnz push mov fnstcw stos pushq sbb pop movabs xlat pushq jnp xor sarl (bad) mov jne movabs xchg or iret loop adc jbe jno sub sbb rex.WRX cmp ss jbe rol int mov rcll jmp in rex.WR movabs rex.XB (bad) jns cmp jno (bad) jle adc sub fs negb add mov xchg xchg adc sub insb rcll sbbl insl in rex.R test movb lret and (bad) test callq adc repz xor in (bad) jne (bad) add mov pop (bad) imul hlt (bad) cmp test rex.WR outsl lock (bad) rorl (bad) fild cmc scas bsf jo xchg push add add xchg lahf lret rex.RXB ja int rex.WXB xchg push retq nop push sub add roll add sbb repz movabs cmp and (bad) ss cli push xor stc repnz jno roll rex.RX sub fadd mov movabs repz sti mov int (bad) mov mov rex.WX add movslq iret cmpsl add loope cmp (bad) fcmovne mov loopne mov pushfq push and nop outsb movabs es imul rcll scas (bad) sub sahf pop stos (bad) mov hlt shrl sbb or cmc xchg adc out xchg (bad) retq loop add sbb mov xor mov (bad) adc jns fild shll rex.X out int mov sbb fisttpl cmp (bad) popfq rex.X mov sahf insb outsl mov scas cmp fisubl mov pop sbb mov sub or shr add out callq cltd movsb roll pop pop out stc xchg (bad) mov adc sub in rex.WRXB popfq std mov clc adc mov pushq (bad) ja out fidivl sbb rcll cwtl add pop xor sarl (bad) jp mov retq shr cmp icebp retq jge int3 mov push pop shrl in (bad) (bad) rex.X rcr fs xor jno ss push (bad) mov imul shrq (bad) xor sbb fstl pushq jno fdivrl (bad) mov add xor (bad) and (bad) mov add fcomps loope (bad) (bad) mov movabs and stos add movsb (bad) jp xor movabs popfq xchg add fldl and pushfq jp movabs and adc fidivr jo push movabs xlat xor jmpq push lock icebp sub int3 and es rcr nop rex push stc jns shrl and and (bad) (bad) xor popfq push cmp shl rcrl pop movsb rcl jns pop repz sarl (bad) lahf loope fs mov (bad) movabs in sbb mov cmc rex.RB cmp mov jo mov jns and roll sub ffreep (bad) fsubr cmp add repnz data16 sub mov rex mov xchg retq nop stos je pop movabs jno fstpl (bad) (bad) (bad) stos (bad) xor rex.X lock fildll mov cmp movabs pop movsl mov rex.RX rex.WX outsl mov pop iret (bad) enterq jno xorb imul and shrb rex.WRX xchg (bad) cs (bad) push rcrl movabs out cmp jns (bad) (bad) pop add jg adc rex.WRX movslq xchg fisub pop cmp (bad) sahf (bad) lahf retq (bad) mov sar pushfq jge xchg or cmc shll test lret fwait mov pop xor pop add scas sub cmp rex.WR imul push adc and fwait in adc loope std rcrl fmuls (bad) sbb ss (bad) xor mov mov sub and mov mov or adc fldlg2 popfq repnz add mov rcll (bad) push (bad) rex.WX iret jmpq jb fnstcw and (bad) (bad) cmp rex.XB push push repnz lods or and mov gs shll mov (bad) rex.RX adc lods or pop sbb and pushq ror xor rcll cmpsl fisub jbe fldl2t cmc and repz (bad) cltd rex.B push mov ror pop movsb jae xchg insb sar int mov rex.WRB fdivrl outsb or shrb pop repz (bad) sbb jb mov rex.WX add rex sbb push rol adc sarl lods cmpsl or xchg rol test sbb rol cmp js movslq cmc out (bad) rex.WR and fstps cmp or fstpt ficoml (bad) push mov imul xor fld xor (bad) enterq fs rex.RX pushfq rcl negw and pop fiadd jrcxz enterq jmpq jmpq icebp (bad) (bad) enterq fsts (bad) add jb test sbb (bad) (bad) lock out or or in mov xor pop retq rcll movabs callq mov (bad) jp and jmp repnz (bad) mov xor movabs xor loop jrcxz outsb repnz and add xchg hlt xchg and std roll xchg fadds cmp or (bad) callq popfq cmp jno movsl xchg nop rcl jp cmp sarb adc shl scas xor out add adc (bad) imul loope mov (bad) data16 mov rorl mov (bad) (bad) cmp cld mov (bad) icebp mov (bad) inc cmp loope jg rex.RX rex.WRX adc es enterq callq outsl rex.RXB (bad) mov hlt push jne stos int3 and add cmpsl adc adc cltd adc add sub fistp xchg sub add gs mov sub jns out (bad) repnz rex.W int mov std enterq xchg sbb xchg xchg push test or (bad) cmc in setbe scas push js xor lods sarl leaveq jae rex.RX repnz xchg icebp (bad) int3 rex.B (bad) sbb sub fcoml and fnstcw xchg ror jno cmpsl add cli (bad) (bad) fucomip callq cmp or (bad) std outsb mov xor test or add test or outsb xor out leaveq (bad) popfq lret xor rex.RB adc cli movsb jmpq addr32 cltd add insl xchg sub stc and adc and xchg mov add sahf add idiv fmulp sub stc (bad) std adc sbb pushq sub movabs loop out in pushq hlt mov adc cmp or icebp repnz xor (bad) mov psraw rclb rex.WX imul sub mov (bad) leaveq xor and cmp add clc mov loope imul rex.R xor pop mov sbb sbb jb rex.WRX cmp icebp movabs fadds jne movabs out adcl ss sub stos cld rex.WXB and test jg std lret xor rex.RXB push mov bnd (bad) loopne rex.W add (bad) mov mov int cmpsl (bad) sti iret rex.WX push fistpll (bad) sub lock retq xchg and mov rex.W ja push push js pushq (bad) rex.X repnz lea fiadd in stc and mov and rex.XB repnz loopne shr adc add insl xor or in pushfq shl or mulb xor clc (bad) add adc fs xor sub or jle shrl mov shr pop or stos or (bad) (bad) mov (bad) cltd xor mov adc and ja in cmp xor repz addl jmpq sbb push loop add xor mov (bad) outsl rex.R push ror xchg or xchg (bad) push cwtl (bad) adc popfq pushfq out cmp mov addl fidivr out ja sahf (bad) repz sbb jb shll mov ror int out jne add (bad) mov cmp push mov (bad) (bad) faddl (bad) pop jae loopne mov sub hlt add clc jmpq pop (bad) xchg mov and cwtl (bad) fisttpll xor sbb es (bad) rex.B movabs inc (bad) xlat out movslq mov jg adc movabs outsl stc (bad) lret lods movabs xchg add xchg mov in cmpsb (bad) gs cmp roll addr32 mov push rex.WRB rex.WB add push push lock std adc add lods gs push sub in (bad) mov xor out cltd push (bad) jmpq movabs (bad) cs lods repz rorl (bad) jo iret loopne fnop cli xchg (bad) and popfq ja xor sub (bad) mov adc cmc mov (bad) test js push test mov loopne rex.WRXB mov adc (bad) scas fmull in mov cltd cmp repnz pop xchg (bad) sub kmovq clc test rex.WB add loop (bad) js xor jge lahf jb (bad) mov or (bad) callq jl hlt add clc lea retq xchg mov push rex.WXB movabs shll movabs jnp imulb movabs (bad) jne nop lret mul sahf cmpsb movslq pushq rex.X movabs lods push mov rex.WXB (bad) (bad) mov adc rex.WX lock (bad) mov add decl lea int3 (bad) fcmovnb (bad) mov imul (bad) lret (bad) xchg mov pop xchg sbb int3 add fs sub (bad) mov xchg fstps mov rex.WX mov loop,pn test (bad) jne ficompl mov (bad) movabs test leaveq adc cltd popfq (bad) cmc fnsave cld shrl fwait jge icebp rcll movabs scas push add sub sarb loope push rex.RX cmp (bad) xor (bad) mov test xchg retq (bad) (bad) pop roll in adc push stos (bad) xor in sarl (bad) (bad) incb test rorl movabs outsb jnp and (bad) cmc add sar (bad) (bad) cmp jae iret fwait mov mov (bad) iret shll enterq es add fdiv fisubl jmp or movabs data16 shr jb ss and xor int notb roll rex.WB enterq int fist cmpsb rex.WX xchg jp sub mov rex.WRX mov enterq test and or (bad) (bad) popfq rex.WR lret xlat mov (bad) jle add adc lret jb fistp scas lahf pop and iret mov shrb push (bad) sbb out lret jb (bad) (bad) fnstsw sbb (bad) test stc rcrb push rorb gs retq or mov rex.WRXB jmpq add cmc pop pop ss (bad) xlat (bad) pushfq jnp xchg lock test jno mov sub (bad) push repnz jl xchg cmp (bad) shll icebp jo loop jp movabs pop mov out or lret jp pop (bad) testb rex.RX jno (bad) lret sti adc (bad) (bad) cmp lahf xor pushq shrl xor mov outsl pushq (bad) lea movslq cli enterq mov mov (bad) push push insl or in (bad) outsl and jb (bad) (bad) jbe shrl (bad) rex.W or (bad) jnp (bad) movsb add mov cwtl ror in xchg jbe jmpq imul mov shlb (bad) out movabs rex.XB leaveq sub shll in (bad) jns int and insb test ror adc rcl xchg mov int xchg cmc sub rorb (bad) ja lret (bad) jrcxz retq jnp movabs pushfq rclb add fwait jp movsl xchg (bad) int repz lret push gs and mov rcrl sbb lret lods test (bad) pop je (bad) insb sbb rorb hlt (bad) jns mov sub cs in out sahf sub mov sub movabs mov and (bad) outsb sarl int rex.R nop sub hlt in mov rex.RB pushq xchg (bad) push loop pushfq roll in mov push xchg cmpsb movabs incb sar (bad) sub pop cli (bad) stos jnp ja xor (bad) sub mov adc (bad) fstpt lret sbb fs outsb rcll sti sub stos sarl mov callq rex.RXB ror (bad) pop mov mov mov (bad) (bad) imull test bnd fiaddl (bad) adc push push xlat movl cwtl shrl xor loopne xor int (bad) sbb in (bad) movslq (bad) jg sahf insb shlb rex and rex.W out (bad) rex.WB shrl adc sbb rcll xchg sub nopl out mov xchg mov ja (bad) stos adc clc incl rex.RB jbe jo pushfq sub sub sti in rex.XB mov adc outsl push icebp adc cmpsl push (bad) retq sarb movabs mov fistl roll out ror flds insl rex.W push imul (bad) xchg pop (bad) je (bad) mov mov int (bad) lret mov addr32 sbb xchg mov (bad) loopne (bad) (bad) shll adcl test mov sahf (bad) mov movabs retq (bad) in xchg iret rex.RX pop pop callq iret stc push frstor (bad) and enterq jo pop (bad) (bad) mov adc rorl outsb fs add pop jrcxz mov mov rex.WRB xor (bad) mov add sarl jrcxz clc sbb (bad) (bad) or rorl xchg add xchg mov sbb rex.WX movsb mov or mov add mov test cmp fstl (bad) (bad) rex.WXB add ja add leaveq and add sahf cwtl jo pop divb cli and lahf in lock pushq pop fwait xor (bad) mov shll (bad) pushfq cmp scas rcrl (bad) add (bad) rex.WR push sbbl mov jmpq (bad) rcrl adc shrl sbb sarl (bad) xchg in xor mov outsl jnp cli lret repnz jl push xchg addr32 (bad) ja cwtl clc lret mov roll stos pushq loopne mov lods loope mov and adc in mov (bad) rex.WRXB callq jns shrl (bad) and (bad) scas roll jg xor (bad) std lret and shrl mov lock xor movabs jo (bad) pop mov push loopne and loop push rex.XB fidivrl pop or rcll add mov out cmp or sub cltd push stos repnz ja (bad) adc rorl lods push rcll andb rcrl int3 test loop pop mov test in push sub ffreep lods cmpsb fildl sarl pushfq rorl xor int hlt popfq jl callq cmp adc shll out xchg rex.RXB push scas scas mov jl cmp movabs or retw out movabs add sub scas xchg icebp fwait add leaveq out jmpq xchg (bad) (bad) add sbb test (bad) scas in add out jle ds rex.R pop xor jge add (bad) sbb (bad) rcll loop rolb jne mov addr32 sarl cwtl lods out insb in pushfq cmc pop ror (bad) mov rex.WX sbb sub (bad) stos mov mov (bad) (bad) fisubl and stc (bad) xor add mov (bad) loop fsts cmp cmp rcl outsb retq in shll add int3 (bad) or push cmp repz loope jmpq sbb (bad) es (bad) scas sar fidivrl xor xchg cmp addr32 mov add and and cmp rex.B fs sti test mov jl jbe rex.WRXB adc pop rcll pushq iret scas hlt lea mov jns loope xchg (bad) add (bad) out rex.RX rcll jnp (bad) out (bad) scas shll pop loopne (bad) rex.WR (bad) sahf (bad) jrcxz leaveq shl mov (bad) (bad) (bad) (bad) xchg lret jp sarl data16 imull pushq fild jne sub (bad) popfq orb rex.R mov adc xchg std retq retq push out movb or xor rcll add andl fmull pop sub (bad) stc lret sahf jp roll fcmovb sarl (bad) lahf mov insb mov imul out rex.WRXB sub cmp cli or icebp cltd mov cmp (bad) or nop adc repz fldl and mov rex.WXB (bad) rcl callq (bad) pop psubd fisubl adc (bad) cmp mov rex.B jae add movsb fwait or (bad) xchg gs std mov xchg jle fild (bad) add rcrl push in lea vpmacsww mov int3 retq (bad) ja leaveq rorl xchg lret rex.B icebp adc in (bad) retq movabs or pushfq in in pushq movabs out enterq add pushq (bad) imul (bad) pop loope jg js pushq (bad) sub sub rex addr32 (bad) rcll icebp xchg jl (bad) (bad) mov rclb mov rcr jae xchg loop add rex.B or invd rex.WRX stos inc scas and sub sbb sarl fcomps mov rex.XB test or mov (bad) and rex.RB push (bad) add test mov (bad) xor insb (bad) xor repz mov movsb addl xor jb,pt push or loopne lea (bad) fdivr frstor repnz sub cltd (bad) sbb rex.XB xchg push (bad) rex.X adc roll lret (bad) jns bt (bad) movabs xor andl repnz (bad) sub cmp test cli (bad) std rcll (bad) retq adc insl xor (bad) rex.RX xlat cmpsl fidivr pop hlt lret rex mov fwait cs rex.WRXB jge sar dec (bad) and (bad) (bad) xlat ror addr32 rex ss jnp rex.W mov test fisubr xchg push fistpll int3 pop imul (bad) mov pop rex.X out xchg (bad) incb xor mov negl (bad) sbb (bad) in movabs test add lods ss or (bad) fistpl cmp cmp ja rex.RXB repz jns mov outsb sahf xchg pop and xchg xchg or adc (bad) gs jno cmc rex.RX jbe rex.W clc jo jg shll (bad) sbb (bad) (bad) jno sbb (bad) xchg (bad) lods orl movabs (bad) xor stos leaveq (bad) rcll (bad) (bad) js rex sbb rex.RXB jle,pn callq test jbe out rcrl mov loope pop mov loope fiadd retq push hlt sub nop mov mov mov jb je mov rex mov (bad) retq push roll add (bad) adc int3 loopne scas add gs mov rcrl jne lret (bad) push int3 and xor (bad) jp ficom push in jle mov lret stc or add and (bad) rcrl fmuls xlat rex.RX ds xchg and rex.R and adc (bad) jae (bad) enterq sbb imull or add sub in mov cmp rex.B rex.WRXB rorl xchg rex.R jb xchg cmp mov imul pop (bad) cltd sbb (bad) xchg jnp mov fsts or repz (bad) clc and mov rex.WRXB nop shrl imul shrl mov mov fdivr rex.RX roll (bad) sarl jae xchg loope enterq int3 xor rex.B sbb (bad) pushq jmp repnz sbb cmp movabs push sub fcmovu rex.WXB (bad) cmp mov rcr fwait nop int3 xchg cmpsl rex.WRB repz fcmovne xchg lret (bad) movabs xchg (bad) jnp add rex mov (bad) ds enterq rex.WRB cli mov js in mov std xchg cld sarl loope fwait mov sbb iret cwtl jg cld add rorl and (bad) out (bad) or lret (bad) push sub and and jno sar mov mov addr32 stc (bad) mov roll rex (bad) lods jo jne or shrl rex.WR (bad) rex.WRXB jle fcmovb xchg and mov sbb xor out shll ja or cli cltd lock and rex.RXB rex.WXB repnz pop (bad) xchg movsl scas add (bad) mov (bad) rex.XB mov sti stos xor (bad) pushfq (bad) push xor in cmp (bad) sub divb jnp flds (bad) mov in mov push scas sarl imul rex.RX data16 xor pushq mov test ds rex.WRB push add (bad) xlat or rex.X jnp rex.WRX scas insl rex.WRXB sar mov and jbe fistpll or xchg pcmpgtb xchg add cs ds jg sahf rcll shll mov rex.WR cli sarl movsb (bad) push mov mov or out cmpsb rorl adc sarl or (bad) jae jrcxz push add iret imul mov rex.XB sbb add (bad) (bad) repnz mov (bad) jle movabs lahf (bad) out (bad) jae enterq xchg movsl (bad) scas cmpsl insb add fnstsw int3 js mov mov (bad) xchg sbb retq test xor sub add mov std sbb retq and rorl in mov lea shlb and push (bad) mov mov loope mov adc xor sahf rex.WRB gs push or movslq sub (bad) cmp add xlat or mov mov lret int in rex.RX test add xchg push xchg rex.WX loopne sarl jg sbb fld or push jrcxz rex.RB push lret rex.WRB repnz loope rex.WRX rex.WX addr32 (bad) test shrl (bad) fwait rex.X sarl (bad) sbb cld lea rex.B imul out rol lahf jo (bad) fnstcw xchg movabs cmp adc xchg (bad) movsb pop (bad) sti xchg sbb lret fisttp mov stc xor mov mov cmp push adc mov popfq sbb sub sarl sub add jae out mov repnz lods mov ja adcl rcll cmc pop (bad) mov movsb movabs push (bad) (bad) pop cmc rex.XB lret or add rcrl mov sarl imul outsl shr mov mov movabs leaveq movabs clc mov mov cmpl rex.RXB ds xor (bad) jle test sub cmp (bad) pop mov (bad) in repnz rcr movabs fs jmp leaveq xlat (bad) repnz lahf mov fiaddl lahf jg (bad) repnz rol rex.WXB mov mov cmpsb mov icebp nop mov stos (bad) (bad) (bad) mov repz cmp sti lret shrl and imul in nop (bad) jns rcrl jo rex.RX add or xor lock (bad) sbb retq out jle in (bad) xchg imul pushq mov rex sub pop mov jg or jle adc (bad) mov jrcxz es cmpsb test shrb jne add (bad) pop sarl jle xchg add sbb ror or push (bad) movabs loopne (bad) rex.R jge rex.RB cmpsl addl (bad) retq rex.WRX (bad) jg mov and ficomp cmp rex.X (bad) mul fistpll fwait push movabs (bad) (bad) pop and movabs mov xchg out ja sub fsubrs cld push rex.WX sbb mov rcrq sbb out divb mov adc rex.RX lock xor movsl std loop jle pushfq roll (bad) adc test leaveq add rex.WX rcll insl sub (bad) rex.R rex.WRXB mov xlat fldt pop imul fsts lret (bad) (bad) push add (bad) inc add sub sarl push (bad) orl cmp (bad) sbb add add test (bad) (bad) adc rex.WRB rex.X mov push std iret xchg (bad) mov insb test cmp or pop rex.R rcrl repnz enterq movabs rcll ja or out sarl cmp pop (bad) (bad) jne fldt cmp (bad) lahf movabs out add xor xchg and xchg mov or movabs fldenv or push mov and rcrb and (bad) sbb callq rex.WRXB mov mov rex.R gs cmp jmpq and (bad) rex.WRX jno pop pop enterq (bad) add push movsb fnstcw fstpt xor jno jmp or mulb mov jbe add or (bad) retq add cmpsb leaveq enterq loope (bad) int mov sbb lea (bad) callq (bad) mov scas movsb rex and rex.XB push cmpsl pop mull mov pushq jmp xor rex.WX xor and rex.XB push rcrl sub (bad) add (bad) test (bad) jb in sbb roll in jp cmpsb mov vpmaxsw rcll mov imul sub xchg cld std popfq mov add mov imul cmpsl shrl and (bad) movabs xor rex.B rex.WR rex.WRXB (bad) xor mov mov repnz lret xchg add xor rex.WR mov jns mov (bad) lods mov cmpsl leaveq ds xchg add rex.WRX enterq icebp test (bad) or xchg adc std (bad) jl cld movabs movabs adc jae loop xlat movslq loopne ffree rex add mov and leaveq rex.RB (bad) mov mov (bad) lods fwait stos mov rex.WX xchg jle out adc pop fstps (bad) cmc cmp imul and sub rex.B in repnz (bad) sub mov out sbb (bad) test ss (bad) fsubp orl int sub xor js and (bad) mov (bad) enterq cmpsb rex.R pushq sub (bad) mov add (bad) ss add retq ss mov (bad) pop (bad) xor movl push fcom rcrb mov pushq (bad) jnp retq fmull lret divb repz mov (bad) push mov adc pop out loope jo xor testb pop out ja pop cmp negl mull icebp lock adc add mov fisttp rex.WR (bad) rex.X and jl int xor and test rex.RXB xchg xchg movabs sub rex movabs imul push mov sub sbb cmp mov adcl cmpb rex.R rex.WB bnd ja xor movabs nop xor and rex.WR fidivl repz jo (bad) je (bad) leaveq enterq and stc repz je push out je lods out jrcxz cld xchg cmp cmp pop (bad) outsb mov shl mov in rcll mov pop shr push pop add mov rex.XB sbb loope (bad) (bad) (bad) mov fldt shrl rex.WRX rex.RX (bad) push cli addr32 repnz rex.B mov test rcr pop jmp xor xchg ja mov mov std shrl mov (bad) xchg xor shl shll repz add shrl (bad) sti jl roll (bad) retq xor ffreep pop (bad) lea sarb rex.WX (bad) pop (bad) adc rex.XB xor sbbl xchg mov mov (bad) repz mov sbb movabs test (bad) gs stos mov sub fstpt in rex.B rex.WB lods mov rex.WRXB lock lahf xchg add cld jmpq and mov lcall sub gs (bad) lret in (bad) std xlat mov icebp loope mov and pushq rolb push (bad) jmp movabs test scas fidiv pop (bad) je mov mov add (bad) (bad) insb ds sbb add pop rex.W add repz rcll adc (bad) movsb (bad) (bad) and push sbb (bad) or (bad) scas jg mov rcrl lret mov jrcxz repz scas stos (bad) roll (bad) jg (bad) (bad) lahf mov int iret shll xor retq jbe (bad) xor in cmp test cld shrl sarl lahf fsubrp (bad) adc (bad) pop mov pushq enterq in pop jp stos push loope lods ror adc sarl imul rex.WRXB idiv sub repnz adc ficompl cmpxchg mov rol push imul xor (bad) mov cmp mov out rcrb sub add rcll movabs and lock ror fiadd (bad) js in in rol add cwtl and push int movslq (bad) mov xor movabs rex.WXB cmp mov sbb (bad) enterq sbb pushq mov or pushq (bad) mov shl jb lea adc sahf push movslq rex.WX mov mull (bad) rorl in (bad) jmp fsubrs mov (bad) cwtl lret mov rex.XB rex.X jno adc out shlb shll jp xlat sub pop clc rcll jbe adc (bad) sahf sbb pop in (bad) repnz rorl jmpq sbb sbb movsb (bad) cmc callq (bad) rex.XB mov sub (bad) (bad) stc pop outsb xor loop xchg (bad) popfq mov rex.WRXB rex.RB repz xor rex.WR adc roll sti rol mov repz or int cmp js xchg or fdivrl movabs xchg (bad) push clc pushq rex.WB rex.X xchg mov adc data16 and mov shrl add rex.B es jnp sub enterq andl in (bad) xor pop rorq addl int mov repnz mov movabs movabs scas (bad) outsb pushfq xor (bad) cltd (bad) clc (bad) adc loope lock add ja xor fdivrl fnstenv fucomi retq or roll in pop jg add stc js sub mov (bad) std xchg ja shll xchg rex.RXB lods in rcl test push (bad) cltd ja jnp int fstl mov xchg (bad) mov xlat clc js fadd sbb jne gs mov (bad) mov mov mov pop mov or adc mov lock push shll mov (bad) xor stos xorb push sub in or xchg (bad) cmp fist (bad) jge sahf mov out xor ds rex.B jge xor rcll (bad) add add (bad) out (bad) mov (bad) cli mov rex.WB (bad) out xchg cmp in cmp pop push (bad) or pushq idivb rex.X mov rcl or rex.XB push sar neg push mov jne xchg cld iret in lods jo movabs shr cmpsl repnz scas cli cltd rorl icebp xchg pop stos out shrl (bad) jge test movabs adc movabs mov rex.RXB imul cltd push pop in push rcrl xchg in mov stc jnp in (bad) (bad) mov (bad) sbb loop hlt (bad) rex.W jb retq cltd retq testl or xlat sbb and sub (bad) adc jns xor fwait stc in iret adc add rex.WRXB lret cmc jbe add or fstpt rex.R sahf pop popfq pop pop add mov test pop rex.WXB sbb movabs (bad) outsl xchg push subb cmpsl adc cmpsb add test (bad) (bad) popfq xor loopne (bad) cmp movabs in shrl and movabs leaveq loop stos push (bad) imul xchg adc (bad) xor xchg cmpsb pushq retq sub (bad) (bad) out rex.R movsb nop fstl sbb lods xchg lret push rorl movabs jg fwait out (bad) movabs rex.XB in mov lahf xor (bad) movzbl (bad) (bad) loopne (bad) fistpl (bad) push add mov clc jge jg mov enterq xchg in cmp and jge scas rex.WRB mov or (bad) jmpq in push icebp stc mov or (bad) jns jbe rorl fist clc enterq insb fcoms add rcl xchg sbb cltd mov add cmp in mov and cmc add (bad) (bad) jg rex.X cld stos add (bad) rex.W or cmp test xchg xor add fcoml or cmp sbb mov and outsl test rex.R lret xchg add rex.RX (bad) notl fucomi rex.WXB rex.WB (bad) fdivl mov jno pop stos rex.WX loope,pt lret movabs xchg mov incl lret es (bad) xlat in mov (bad) add movabs out (bad) mov (bad) sti and rex.WB ja rex.RX jp (bad) pushq roll mov addr32 mov mov cmp outsl retq sbb cmc rex.XB retq and neg (bad) enterq test cmp pop sub push lret adc or mov data16 rorl mov sarb movabs cmpsb ficomp loope cmp je lea jp fwait pushq sub fs outsb cmpsl rex.X adc xchg mov scas rol (bad) iret data16 frstor incl jg fdivl stos jnp xlat pushq xchg jno or sbb add shr xchg and and (bad) or jmp fsubrl (bad) (bad) jmpq fildl callq leaveq add loop add imul rex.RXB cmp sbb insb lret in (bad) ficoml pushfq push mov pop rex.RB mov (bad) repz and rex.WRX addr32 (bad) test push (bad) fsubrs jl rex xchg cmpsb add or jg shll cmp jmpq (bad) notl xchg jl xchg out rex (bad) enterq (bad) movabs sarl cmpsb enterq mov (bad) xchg movabs retq data16 cmp mov xlat jbe fildl frstor movntq out lret (bad) or cmpl sbb sbb lods (bad) out mov rex.RB cld leaveq (bad) (bad) rex.WR rex.R or add jno push cmp mov enterq je retq cmc xchg (bad) test mulb imul fisub rex.RB pop repnz stos lods lret iret mov popfq sbb stc inc pop scas fst addl (bad) ffreep and (bad) cmp jno (bad) rol out je mov leaveq (bad) or repnz add movabs sbb adc movslq movsbl fs loop (bad) data16 xor ss add fxch adc pop add scas mov js or imull nop callq hlt (bad) and xor jge movabs je rcl rex scas xor mov mov mov (bad) cld xchg lret fbstp mov rcrl sbb sub jo scas cli xor mov cmpsb punpcklwd (bad) jne (bad) mov sub (bad) rex.RB (bad) pop jle pop ds jb stos (bad) add fnstsw imul pushfq mov (bad) lret adc push xor sbb or shll add rex.WRXB cmc addl push sbb movabs hlt (bad) (bad) and retq push jmp sbbl pop int3 xor and adc adc subl jle sub (bad) (bad) cs adc pop xlat movabs (bad) jle (bad) rex.RX in in jrcxz fcomps (bad) cmp (bad) (bad) xchg stc cmp (bad) loope ds adc imulb (bad) (bad) mov jo xchg es (bad) in mov pop rex.B comiss movl xlat add test subl repnz repnz loope mov enterq adc fstp (bad) (bad) xor (bad) xor gs pop sarl movabs (bad) sbb or xchg (bad) adc repnz movsb sahf jb movslq (bad) sub shrb sub out lret shlb repz cli pop imul rcll (bad) repnz sti rcrl lock mov sub imul sub (bad) cwtl movabs xor shrl push loop pop rex.RB cmp pop shrl (bad) icebp and sub fsubl xchg insl rex.WB mov rex.WRX (bad) (bad) idiv cmc rorl or cwtl sbb mov and rex.R iret mov xchg push push xchg push (bad) mov ss nop pop out mov sbb fdivrs fst cmp rex.WRXB fst in (bad) sub frstor (bad) adc cwtl mov and (bad) mov cmp ss sbb lret cmp push shll in rcll fimul sub fucom pushq test cmpsl repnz callq (bad) in (bad) (bad) (bad) cmp rex.WRXB rex.WR rcrl xchg mov mov adc (bad) (bad) in (bad) mov callq test pop pop imul test (bad) retq icebp loop (bad) hlt add movsb (bad) mov (bad) loop rcl stos rcr (bad) jrcxz jns sub mov mov movsl (bad) loop shrl rolb cmc insl rorl jrcxz sbb (bad) imulb pop div mov sub out test (bad) ss movslq rex.WB and int3 adc jmpq (bad) icebp (bad) mov movslq cmp int3 (bad) cld cwtl or insb pop rex.RX shrl outsb cwtl movslq (bad) mov cmp adc jge add jno mov sarl lock cmpsb movabs (bad) jmpq (bad) mov (bad) fcmovnb mov imul shrl loope shll xor rex.WR rex.R fsubp out and fcom outsb jno (bad) (bad) mov shrb mov cmp xor icebp (bad) sti cltd push xor add mov out sarl sub mov jge pushq jo xchg xchg imul (bad) sbb xchg cmpl movabs nop sub shr lahf (bad) jbe mov (bad) std rex.WB add stc push cmp pushq push xchg stos (bad) add rex.RX fsubrl mov xchg (bad) add sub jbe jp test (bad) xchg jl insl cmp or out movabs mov adc (bad) and sarb cmp popfq lods mov or sbb fsubr rcrl and jg enterq nop repnz cli int3 ja shll mov mov adc insl rex.W shll rex.X adc sbbl movslq imul fcoml jns clc mov cmp rcrl pushfq in enterq jno rcr cmp fwait add (bad) (bad) pop jle (bad) add sbb callq jge adc lods cli push add rex.WRX rex.B jno xchg (bad) or sub (bad) stos adc jge add icebp sbb (bad) scas (bad) cmpsb cmp out sbb and xchg loopne rex.WB jo jl fidivrl cli adc ficoml lret movabs rex.WRXB (bad) fistp rex.B repnz clc fisttpl cld notb jle push fs jae (bad) int mov movabs cli enterq or rex.RX rex.WR in (bad) jmpq mov xchg (bad) sbb fild (bad) jle rex.WX mov adc and rorb jmp cmp (bad) (bad) push (bad) add int3 loope sub pop adc negb cwtl andl retq sbb mov jns or (bad) subl xchg or cmpsl push mov (bad) rcll fldcw (bad) incb (bad) sub xchg rex.XB ja sbb (bad) sbb jp xchg jl and fs mov retq hlt xchg fwait mov xor movabs and sub insb xor jae outsb outsl and retq (bad) ss enterq (bad) test cmp jbe sar lret rex.WRX (bad) sub mov roll test (bad) jo or (bad) add pop and outsb and jb insl xor (bad) cmp xor sahf xor imul sub (bad) rex.WXB (bad) cli sub je movabs rex.WXB (bad) and jrcxz jb pop rex.WRXB pushq pop xchg mov mov outsb cli scas and repz sbb cmp sub repnz rex.RB (bad) sbb addl movnti mov (bad) rex.WRX retq cltd callq insb (bad) fnstcw push enterq in lret fcomps jnp in test rex.WRXB rex.WX loope (bad) xchg rcll mov rex.RX rex.WR leaveq (bad) (bad) (bad) lret xchg (bad) rex.WR jrcxz (bad) int bnd rex.X jns (bad) lods xor rex.WR cs push xor insb sub add push xchg or add (bad) shl mov loope rex.RB int testl mov andl add fidivl loope loopne jae repz add ljmp sub out add addl js sbb sbbl ficomp mov movabs sbb fbstp adc loope (bad) (bad) stc mov xor addr32 xchg repz (bad) rex.WRXB mov mov jbe rex.WRXB rex.WRX adc out out out rex.WRB in jns rex.RXB adc sbb repnz std movabs in or add rcrl rex.WXB callq jns shll or roll xor retq rex.RXB push pop adcl movabs xorl jns sahf rorl mov stc out rex.X (bad) int3 fs lods (bad) mov jnp int retq push mov sbbl sbb loope or cmp rex.WX push pop rcl sbb test push roll pushq mov jno rex.RX cmp and push sub mov cmp add rex.WB jp mov ss roll test cli lret sahf fiaddl add leaveq repz iret or mov lea mov rex.B mov mov mov jge mov movsl adc sahf mov stos outsl (bad) xor jo add push cmp retq add ja mov cmp jbe sbb xor pop enterq leaveq movabs xchg and repnz jp add movsb xchg cwtl xchg and cli out cltd fdivl std (bad) (bad) rex.WX or adc rcr adc sbb adc and sub jge je rex.B lock rex rex.WXB pushq add sub and (bad) (bad) js shrl xchg shrb scas jle adc mov mov (bad) data16 mov sahf imul adc outsb pop cmp cli rex.X js add rex.B lock adc nop mov xchg sub xor (bad) decb cmp sub mov adc (bad) add shrl (bad) vpsrad (bad) (bad) xchg outsb xchg add shll or shrl test cli mov (bad) push sbb mov (bad) icebp rex.XB retq lods cmp (bad) cmp add in int fisubl adc mov ror xor mov shl sbb gs testb fisubl adcl sbb jnp lock mov sbb int imul mov movabs xchg xor (bad) or (bad) mov (bad) (bad) idiv rcr movsl fcoms insl and in mov rex.WX xor mov and xchg sti push lods mov pop pop shll push mov jrcxz adc (bad) and in rex.X fstps rcl mov int fwait jae mov je (bad) cwtl pop sarl rex.WRB (bad) rex.RXB (bad) xor imul add sarl rex.WRB fcmovu xlat shll in mov jrcxz rcrl adc test (bad) jno (bad) data16 (bad) cmc pop mov (bad) adc (bad) (bad) icebp xchg in cmp repnz out sub sbb jns shrl adc rcrl test rcll cmp rex.RB rex.RX rex.WB enterq and lret sub test roll pop cli notl (bad) in lahf hlt sbb leaveq adc sbb pop sub mov jle ffreep xchg (bad) (bad) leaveq rcrl lret fnstsw callq mov std rex.XB shrb lock mov pop (bad) push fldl2e xor pop add cmp rex.R rex.WR icebp mov int3 (bad) mov cmc (bad) (bad) nop rex.RB rolb (bad) fistpl jnp rorl add xchg jo mov cmpsb xor sbb and pop out (bad) and retq sti mov fisttp mov (bad) out int adc rorl push mov push movabs rex.XB stc int3 roll movabs mov xchg lret pop cmp pop lret rorl fs xchg (bad) idivb test (bad) add mov stc cmc ror cmp (bad) xchg retq xchg xlat rex.W and rcrl jno mov movabs fsubrl movsb mov (bad) (bad) (bad) lock xchg out (bad) jp (bad) add ja sahf rex.W sub enterq add adc movabs ds mov in (bad) out rex.B lret jns fmuls rex.WX jl or adc cmp imul sbb retq jle pushq (bad) adc pushfq rcrl stc mov and (bad) cmp jbe adc cs shlb add fcmovnb setg or sub rex.B rex.X stos add adc jmpq rol out sub rex.WX js popfq rex.WRB sub lods cltd jge (bad) lock (bad) sbb sub sbb loopne test movslq pushfq fist xchg lods fiadd scas sub push movslq cmc xchg rex.X cltd adc xor push rcll sbb pushq ja (bad) push cmp add (bad) mov mov imul jp add (bad) rcrl mov mov js repz mov xchg push (bad) icebp imul fbstp decb (bad) rex.X adc push in mov pop rcr (bad) ja lea (bad) mov imul pop (bad) cmpsl (bad) fnsave (bad) inc (bad) pop add rcrl xchg (bad) push ss retq jle jno (bad) cmc sub test movabs not ds xchg lea (bad) xchg rorl (bad) enterq push cmp (bad) pushfq in out adc rex.WRXB enterq cs (bad) orl (bad) js scas rex add lods dec sar movlps (bad) xchg (bad) xor xor pop cmp jns sarl (bad) (bad) (bad) testl sbb subb insl test mov (bad) lock sar (bad) rex rex.WR rcll jp rorl (bad) mov push ror sbb movsl int3 (bad) xor rex.R jle test cli movabs cmp roll and stc movsl (bad) sbb jrcxz (bad) pushfq ds rex.WX mov sbb (bad) push mov scas add sub lret mov sbb ja mov loopne (bad) je shll cmp movabs repz ror mov sub sbb loope (bad) notl mov xchg jle rcll rolb jbe jne cli rex.RX cwtl fldenv rorl jmp push jo sbb add (bad) jne cmp (bad) scas decb addl cli clc rcrb (bad) std cltd cwtl xchg sbb pop (bad) movabs mov or loopne rclb data16 leaveq adc movsl mov mov or sub (bad) cmc cmp cld cmp lods mov iret and mov push movb add (bad) or or pop jmpq fwait add fcomps ror sub sub sbb add mov cmc cltd (bad) rex.B hlt (bad) imul rcll cmpsl cmp (bad) shrb jge mov cmp rex.WRX rex.R imul cmp sbb rex.WB cmp jae jle (bad) or rex.B insl rex.B jae movsb add cld scas test (bad) shl lea rex.WXB (bad) outsl (bad) lret gs xor movslq retq lea rcrb fdivrs lret and and xchg (bad) (bad) xchg jne cld in rcrl or or adc mov fbld rcll cmp insl mov (bad) add mov (bad) lret fiaddl imul in (bad) sub mov cwtl stc (bad) (bad) in (bad) test addr32 add (bad) xchg sbbl mov fisttp and lcall shll loopne sub rex lock mov insl xor popfq jae (bad) sbb sahf lret (bad) jne adc mov rex.RX sti jrcxz (bad) xlat sarl loop mov sbb adc or xor xchg int mov int3 rcll pop and shrl rcrb jmpq (bad) rcl (bad) xlat shrl enterq push add fwait sub repz repz rcll (bad) rcll movabs sti loop add adc xor in icebp jmp rcrl test sarl adc movabs sbb mov rorl cmp fisub sarl sub movabs and xchg (bad) test push lods lret ja jl scas mov jns pushfq xchg lods enterq xchg in rex.B in shrl out decb int3 or add rex.B add enterq pushq fldcw fbstp movsl mov (bad) fdivrl repz add xchg movabs test rex es ds jbe negb jrcxz pop (bad) fadd sbb rorl jge lea cmp mov jne rex.RXB mov mov and xlat mov testb mov (bad) (bad) xchg test rex.WX callq movabs add pushq (bad) notl pushq push std imul cmc push pop cmp and out mov jg (bad) adc xor movsb (bad) mov (bad) jne (bad) stos icebp notl ror sbb add xor callq rex.XB addr32 mov (bad) xchg add std (bad) add rex.W mov push fxch popfq iret leaveq int mov rex.WB fs sub sbb (bad) cmp (bad) shr cmpsb (bad) shll sub loope lret repz (bad) fidivl (bad) mov xor jl fidivrl (bad) (bad) add pop mov (bad) test sbb lret (bad) cmp iret shrb or lret sub (bad) and (bad) xor data16 std (bad) mov loope cmpsb (bad) fbld pop loop pop jp movabs sbb push cltd enterq movsb (bad) cmp mov cmp fsubl (bad) repnz lret enterq rex (bad) retq rex.WRX mov mov stc pop or test out and leaveq or add jne outsb adc mov add lea sub and div cmp and or clc rcll jae mov sub popfq adc jbe rol rex.RXB push push mov pushq rcll mov xchg (bad) insb idivb push (bad) sub push jbe xchg add lret pop negl sub rolb or push movb movabs ss test shrl test or add (bad) rol and cmp popfq loop jns negb (bad) repz jae add mov (bad) adc add add gs mov rex.RX mov (bad) (bad) mov xchg retq (bad) stos rol cmp mov fiaddl xchg out add (bad) add lods rex.WR (bad) inc shll jp roll jae cmc mov jbe lret xor add xchg idiv rex.WR sub enterq shrl adc and repnz repnz pushfq subl in lret jrcxz callq rcrl sbb inc jge xor iret add or mov cld xlat test retq faddl ds (bad) pop insl jrcxz add jb test repz enterq lods lock cmp test ss xlat jg add (bad) adc jno rex.WRXB xor sub mov mov out sub fidiv mov jmp je (bad) (bad) mov rex.RX (bad) and (bad) jne loopne xchg loope fiadd insl (bad) (bad) xlat vpmaxub add mov sahf repnz push sub ss mov jp fcomi push pop xchg movslq mov pop (bad) rolb xor mov cli (bad) test lret retq mov rex.WX jbe fs xor xchg jg jo callq int push (bad) out cmpsl and push sub ror rex.XB stc iret retq pushq rex.R (bad) sbb (bad) outsl retq sub retq mov adc mov std cltd add (bad) (bad) icebp movslq ds jo lret jg enterq push shrl stos (bad) lock fstpl (bad) xor hlt rex.XB adc cmp adcl rcl xor lea cmc and xchg jmp rex.WB roll (bad) and lea rex.RX xor rcrl lret jns (bad) repnz jnp insl vpsubsw subl (bad) jmp in adc shrl movabs orl mov jno cmpsl push out cwtl fldenv (bad) ds orb mov lahf xor add retq push cli or movsl jp jrcxz rex.RB xchg mov addl insb (bad) sbb scas lods (bad) (bad) fiadd pushq (bad) pop mov shll cmp mov or xchg (bad) and pop movsl (bad) sbbb xor (bad) mov xor xchg sub bnd pop fisubl mov rcrl rex.B out rcl (bad) (bad) cltd pop rex.RX rex.B fwait mov mov cltd xchg rex.WRXB (bad) xchg adc test rex.WRX jp in xor pop mov scas (bad) xor in (bad) mov imul out test xor (bad) (bad) mov (bad) (bad) and mov push sub add jb pop leaveq (bad) xor out xor jno rcrl sar rex.WRXB ds rorl xor cmp adc (bad) jo mov movsl and mov lods fsubs lods jae fnstenv mov and adc fmul lret (bad) jrcxz cmpl (bad) (bad) xor imul jnp icebp data16 (bad) mov test jae pushq idiv cwtl (bad) loop in leaveq sahf jae cmp (bad) cmc sbb out test sahf faddl and or or cmpsb sub lock pushq jmpq and stos lahf idivl (bad) (bad) cmp and xor (bad) sbbb xor xchg xor rex.RX lret retq xchg rex.XB test or mov int3 rex.RXB jno sbb rorl jge rex.WB flds testl cmp xor iret bnd cmp loope movabs rclb rex.RB int3 add and cli retq xchg fiadd adc (bad) cmc insl in rex.WX test outsl test pop (bad) in (bad) mov repnz (bad) out pop loopne callq popfq rex.WB (bad) pop ja loope rex.WRX xor in fimul loopne (bad) loop adc mov repz fbstp push jo int sbb (bad) es (bad) movabs fst and stos (bad) retq xchg lock sub loope pushq xor retq cmp scas sub stos scas (bad) jle (bad) imul out jb int or fwait rex.B add jbe lret sub (bad) xor (bad) leaveq mov (bad) xchg (bad) sub (bad) loopne (bad) int dec rex.R cltd rolb add rex.WB mov rex.RB jle xchg cmp (bad) (bad) xor mov test or pop out repnz test movsb mov scas cwtl jbe lock mov fistpl rex.WXB add int3 rcl push (bad) fstl (bad) divb movabs xchg sbb and fcompl fsts xchg jrcxz rex.WXB jns cltd add (bad) or mov rex rex.WR cld rex.WRX sti stos (bad) mov outsb add jbe jp repnz adc and lret push add (bad) scas jno callq cmp cmp scas loopne (bad) loopne or lods and outsl adc std xlat out mov sub xchg (bad) (bad) movabs pop outsl cmc rex.XB or test in or in insb subl cmc mov loopne add adc int3 adc rex.W std mov or mov scas (bad) fadd in mov fucomip movabs and out lods jmpq xchg retq jl sbb (bad) mov sub cmp out clc add (bad) sbb pop mov sub cmp jae pushq movabs popfq (bad) rex.WRXB fiaddl in int push shl je jae loope (bad) sti lret insb ja out (bad) jmpq js cltd xor mov (bad) mov (bad) stos adc (bad) mov (bad) cmp test mov jge or jg xchg (bad) cmp fdivl cld enterq cld (bad) ja or adc mov retq rex out in lea rex.RXB (bad) xchg push add sub rex.RB jae,pt sub (bad) nop outsb roll (bad) divl outsl mov jl ror cwtl sub shrl pushq shr pushq (bad) pushfq loopne ffree mov (bad) shl sbb repnz sub (bad) sbb fistp cmp lods insl lods adc rex.RXB mov or (bad) (bad) mov (bad) mov cli sub (bad) pop (bad) xchg movb jno (bad) sahf not shll pop notb mov (bad) mov ds pop lods fld insb add (bad) push pop mov shll movabs mov stos (bad) sbb and lahf ss xchg pop push (bad) test imul mov rcrl push mov or callq sub lock (bad) idivl and rex.WX (bad) pushfq (bad) movsl movabs rcll or (bad) (bad) (bad) mov sub (bad) hlt rex.WXB (bad) cmp jmp sub mov (bad) xchg rex.WR sahf (bad) mov lock test addr32 (bad) (bad) sbb rex.R rex.WRX push shll loopne (bad) xlat rclb pushq xor mov rex.WRX jo insl (bad) rex.WRXB add adc push sbb fcmovu mov rcl xchg xor adc xchg (bad) ja (bad) pop xlat mov fwait (bad) lock rorl (bad) fdivp mov sbb (bad) cwtl (bad) lods or mov callq sub xchg mov and lret jb fmul mov jae test jno (bad) (bad) idiv adc outsl in lods adc test (bad) fsubrl idivb mov fbld (bad) rex.X rex.WB sub rex.XB sbb shll icebp mov add sti jnp cmp repnz cltd jle xchg xor insl or add cmp shll xlat or test jmpq and pushfq sub stc pop callq in cld mov mov movb xor mov shrl xor test stos retq mov fwait subl mov push add ror rex.RX add (bad) (bad) out mov rex.B lret mov bnd fstpt in lret cmp mov mov sbb adc repnz push sbb (bad) pop in (bad) rolb sub (bad) (bad) adc sub rex.RXB mov pop cmp sar sbb adc (bad) jne loop (bad) mov (bad) movabs pop loope add add mov (bad) fiaddl (bad) fnstcw retq xchg cli cmp rcll orb mov rex.WRB movsb and sbb push (bad) cmp retq (bad) (bad) sbb adcl ds shrl sbb ljmp adcl (bad) adcb (bad) pop rex.RB pop rex.RXB sbb mov add rex.WX (bad) (bad) jmpq loop clc add insb jb add pop mov (bad) pop xor lock mov cwtl mov sbb lahf cs xchg movabs lret (bad) xor mov jne rorb xchg sub push repz fsts shl sahf retq push xchg pop (bad) cmc mov (bad) xor rex.B xchg scas int3 pushfq lods mov loop xchg jbe push mov mov out mov fcoms movslq test mov test leaveq add or rex.RX (bad) xor pop or cwtl jo mov xchg fcoms xor and sub scas shrl push and jb callq jno iret adc rcll jbe add sub shl push in lods cmpsb pushfq pop rorl (bad) sbb pushq xor std out or scas push or fwait outsb shll xlat sub mov rorl retq jp adc jo sub fistpll push xor lahf (bad) xorb xchg out roll fs (bad) mov sub and movslq clc rex.X rex.WR movabs imul push (bad) movslq outsl mov test mov (bad) stos movabs pop callq adc jp xchg fildl fldl or clc test outsb retq add jge movsb (bad) sbb repnz movabs test (bad) (bad) push loope cmpsb (bad) repz (bad) xor add rcll mov shrl push jmp xchg rex.RXB rex.X ss rex.WR lock fnstenv mov rex.WRB sbb add repz jne ss and rorl adc rex.RB lahf add movabs in (bad) out mov xchg mov mov ss (bad) repz scas xor repnz sub rex.X shrb add cmp (bad) lret (bad) jne mov in rdpmc mov push in (bad) vdivpd rex.RXB sahf rcl imul cmp (bad) jb cmp rex.WRXB adc rcll shrb add test cmp mov (bad) je sbb pushq and (bad) push jrcxz mov bswap mov rex.WXB test xchg loope out jnp movsl xor andb rcll fld rorl in xchg pop mov add repz mov cmp (bad) jae mov sarl adcl (bad) cs mov repz mov shll mov sar rex.WX repz jno adc ds pop (bad) xor sub pop callq xchg stc mov (bad) cmp rex.RXB out imul test fldcw cmp in add scas (bad) ja es callq sbb lret in mov xor imul and jb mov loop mov rex.WR f2xm1 scas icebp fisttp sahf hlt adc shrl sbb pop jb shr sbb mov (bad) outsb loopne ss (bad) pop iret mov (bad) jb push (bad) (bad) mov lret rex.WR movabs (bad) xor sbbq mov rex.RX lret (bad) xor fs cmpsl int movabs movabs roll or leaveq mov add insl mov rex.WRXB movabs std mov mov adc sbb jge movabs in and pushq (bad) push fcoms add pop or insl xor (bad) push mov loop add lret sub cmpsb movabs data16 movabs pushfq sarl cld jmp retq pushq in push fcmovnbe cmp loope cmc add (bad) mov mov fisubr lret mov in leaveq sahf popfq fld pop xchg mov movabs xchg (bad) (bad) roll (bad) (bad) rex.B fisubr rcll fbstp lret rcrb pop sbb fadd pop movsb push (bad) or rex.WX jle movslq jbe std xchg (bad) out sbb mov jno (bad) mov mov add mov iret rex.RX adc (bad) addr32 out sbb iret add rex.RX jnp jae shll mov xor flds rex.XB stos fcoms stc add int sub loopne mov or fwait rcl pop and movabs sub sarl mov rorl std jle pop out stc rex.WRX movabs cmp cmp sbb jae rorl fs xchg fildll test jp (bad) rex.WRX icebp and cs push xchg (bad) shlb faddl shrb (bad) cmc sub mov cmpsl (bad) js and callq in rex.B rex.WR cmp rcrl adc cwtl (bad) sarl (bad) sub (bad) mov leaveq (bad) fnsave sub mov (bad) rex.WRXB push int3 or (bad) xchg push rex.RXB and mov repnz imul shlb sub xor repnz and or (bad) outsb rex.WR rex.WX iret xchg jae out (bad) lods xor (bad) movsl jo push sub negb jb or rclb sub cmp in adc jmp adc pop rcrb (bad) adc jge sub stc rex.W xor xchg int insb fcomp sub mov jl jae (bad) repz (bad) add rclb leaveq jrcxz jle (bad) (bad) (bad) fcoms cwtl xor sti imul orl (bad) mov or add mov addl or rex.W test movsb movslq cmp movl (bad) or push xlat rex.B rex.RX (bad) jbe pop (bad) jae je mov in (bad) movabs and (bad) or mov (bad) (bad) pop insb xor cmp add and pushq out (bad) pop mov shrb test cmp adc stc out in (bad) pop xchg cmp test (bad) sbb outsb rex.WX rex repz (bad) (bad) fldcw xchg xchg ds lret rcrb jae (bad) or leaveq int (bad) enterq (bad) out or jnp add test (bad) (bad) mov (bad) jno pop pop rex.RX sbb retq rex.RB stc xchg add js (bad) (bad) mov cmp clc rex.X cmp out adc imul pop jo psubusw sbb in (bad) fidivrl icebp sbb mov jl or repnz mov mov fsubrp int3 (bad) scas repnz movslq (bad) (bad) pushq (bad) sbb mov mov rex.WXB enterq or ljmp retq test and mov loope stos or idiv mov xor sub pop movabs and ss xor sarl rcrl retq jp rex.B rex.WR fs xor lods mov rclb jrcxz jo mov jnp enterq repz mov rex.WRB adc jmpq mov or add retq imul stc jbe sub xor push andl fcoml sub test pushq sub jns pop adc lock push rex.R cs and and (bad) sub xor jo pop roll (bad) int3 (bad) shrl sbb vandnps fidivrl mov (bad) (bad) in loope mov xor test (bad) cmpsb xchg mov lods cmp lret xchg retq (bad) jmpq mov test (bad) sarb addl (bad) sub rex.W out sbb cwtl pushq and sahf fiadd or mov xchg adc rex.RB add rex.WRXB (bad) jge out mov loope int adc clc ficompl enterq movsl mov push orb (bad) subb cmc pushfq callq test push loop loope mov cmp rex.XB sbb xchg cwtl (bad) movslq insl es and movabs movsl mov (bad) insb add mov or xor clc rorl jae xlat add rex.W or mov lods fistl (bad) adc movsl pushfq rex.R ja sarl add (bad) lahf rex.X iret mov rex.W repnz lret jge push clc loop mov and imul and loopne mov jnp out push (bad) (bad) (bad) jbe rcrl stc cs movabs sti push xor cmpb mov xchg shll sub (bad) pop movabs lret idivb jmp (bad) out fistl and stos mov fadd rex.X movabs test xor sub mov movabs fs push leaveq stc xchg mov xchg in xchg rcll mov (bad) (bad) std scas fmulp (bad) sub ja (bad) sarl rcrl push rol sub (bad) int3 fwait shll rex.XB rex.WX push loopne jmpq (bad) push callq (bad) cmp fsubl data16 lret roll pop (bad) cli rex.WB stos iret movabs fwait xchg mov movsl jns mov rex.X cld xor rcrl jg rorl mov and fucomip movsb test rcrl (bad) jne in sar pushq rorl or xchg (bad) (bad) pop pushq mov lret rex.B rex.WRX imul xor jrcxz sub adc add popfq adc rorl jae pop (bad) mov pop rex.B repz xorb sbb adc jns (bad) cmp xchg pop lods in jnp sarl sub shl mov push loope popfq movabs int3 cli sub js cmpsb shll je lret nop jae or cmpsl mov subb sarl jo adc movl bnd add scas jrcxz rex.XB add mov add sbb (bad) mov movabs mov retq mov scas xlat rex.W movabs xor (bad) fnstcw roll scas ja push cmp std jge lock (bad) data16 rcl rex.WB sbb cltd cmp int3 jmpq (bad) jmp rex.WRB (bad) mov testb nop gs jp (bad) jbe (bad) pop pop outsl rex fsts imull subl or mov add gs jle out add sub movsb rcr sbb and shll mov lret jnp fstps scas (bad) (bad) lahf rex.XB pop xchg xchg (bad) test jp in cwtl gs jnp push lods lret cmp icebp (bad) lret xor mov xor sarl mov jne cmp pop mov add rex.WX shll scas cmp in (bad) movabs lea int xchg rcrl addr32 iret enterq mov sbb pop push xor and fnstenv rcl adc and or cmc (bad) (bad) or or sub cld ror xchg add xchg retq (bad) adc stos mov (bad) test cmp (bad) rcl leaveq outsb (bad) enterq rex.WR enterq or (bad) xor (bad) cmpsl or movabs mov adc cmpsl add (bad) push stos js,pn mov mov adc xchg mov loopne rex lea and rex.W (bad) sahf pushfq xor add (bad) mov (bad) xchg mov data16 rex.RB mov int3 mov movabs std rex rex.WR adc rorb sbb add or xor cmpsb adc callq (bad) cwtl stc push adc (bad) pop sbb stc insl cld movsl and pop add rolb (bad) jrcxz adc push fstl (bad) rcll out imul rex.X mov rex.W or insl adc rex jrcxz jns cmp fnop (bad) sub pushfq fstpl outsb xor push movabs scas callq sub test cmpsb mov (bad) (bad) scas and addr32 cld leaveq add xchg and fldt add push enterq test adc pop loope fxam mov rex.WXB (bad) (bad) mov clc (bad) cltd xchg xor sub in mov cmp sbb lret cmovge fsubl or rex.WR xchg lods scas mov data16 int3 (bad) rex.B (bad) rex.WR clc adc jo mov nop retq jae sub pop push rex.W (bad) (bad) movabs lret sbb scas loope rex.WR (bad) jns repz (bad) fldenv jp leaveq (bad) sub int fbstp sub cwtl rex rex.WR int fsts add in add addl loopne rex.WRXB add jge test ds int3 add (bad) mul and outsl cmp loop (bad) (bad) movsl adc jrcxz sub (bad) rex.RB lock jnp rex.XB pop pop push (bad) jnp (bad) push fwait or adc jb (bad) xor add ds (bad) in fcompl (bad) lock rex.RXB fwait imul (bad) mov movslq push jns imul ja icebp divl rex.WX fisub and cmp (bad) jle (bad) cs and loop std lock lods int (bad) mov sbb movsb (bad) clc movl (bad) insb icebp movabs mov movabs std cmp add cltd xchg lret shr mov lahf retq (bad) out xlat add movabs pop (bad) movzwl fistpll in insb fidivrl retq add (bad) rcrl (bad) stos iret lahf pop sarl cwtl mov rex.RXB pushq cltd shrl sahf fldcw stc (bad) imul movabs movabs ss cmp pushfq add outsl (bad) scas lea mov pop fldl mov sbb shrl mov sahf rorl mov sbb rex.WRB sbb (bad) movabs fnstsw pushfq movabs lods mov repz repnz js jne or jl rex.XB stos test rcr and mov cwtl sbb rex.R ffree (bad) jnp cmp cs shrl (bad) xor pushfq push roll callq pop (bad) loop addr32 stos cmc test cmp (bad) shll add (bad) (bad) mov or stos (bad) push lret scas xor insb adc packuswb mov loopne (bad) (bad) (bad) (bad) out test rex.RX and rex.XB test adc (bad) rex.WXB rol xor fwait add sbb shrl push (bad) mov iret jp retq icebp xchg pop pop (bad) cli in loop rorl adc mov adc out or and out adc cmpl popfq lret push pop add movsb std (bad) (bad) out rex.WB jbe jo and mov shll enterq sub cmpsl rcl (bad) icebp clc loopne (bad) push (bad) sub or (bad) outsl retq test repnz (bad) (bad) rex.B rex.WRB and loop mov xchg rex.RXB test and rex.B sahf cmp mov cli xchg (bad) lock xchg and shr jrcxz rex.R mov rcl fwait lock repnz test xchg insl xchg sar ja in js rcrl movabs lahf add leaveq (bad) rcl sub mov scas xor out retq jae test rex.WRB pop loope (bad) add or in sbb imul test jb or sub rorl std lret shll pushq lret movabs pop cpuid (bad) add rex.WRB sbb (bad) test pop xchg rex.WRB outsb popfq mov pushfq (bad) (bad) cmpsl jge sub out fldt insl repz (bad) (bad) rex.B loope rolb jge xor (bad) cmp cmp cmp sub rcrb loop nop add cmp int3 callq cmpsl or movabs faddp lock jge (bad) adc imul xchg lea rex.XB (bad) movsb enterq rex.X sar pop mov leaveq and sub mov jmp lahf push fstpl pop (bad) and jo cmpsl jmpq xchg sub imul jmp addr32 lea add cmp push movabs push lahf lahf mov imul mov push rex.B repnz (bad) jmpq lret (bad) (bad) inc scas (bad) movsb cli imull xor xchg pushfq jl xor loope sbb decb enterq rex.B fwait (bad) xchg fwait adcl sbb cmp mov hlt xchg xchg in sub loope push decb rex.XB gs (bad) pushq jge loopne fnop and (bad) add sbb es xchg test jns (bad) mov jnp enterq push or jo cld std out fs shlb icebp xor ja (bad) pop stos mov mov cmpsb and outsl rcrl and roll jae rex.RXB jmp rcrl mov push (bad) rcll pcmpgtw popfq (bad) xor (bad) movabs cltd xchg sub js retq popfq sub jbe cli mov rorl xchg repnz jg (bad) cmc je adc movsl (bad) xlat mov (bad) add (bad) and cmp push sahf shlb pushq fstpt jno (bad) insl (bad) retq rex.XB and pushfq or xchg (bad) pop rcr test callq gs test (bad) (bad) imul gs sbb popfq jmp rex.RXB push jle test test push add stc bnd test rex.WR rex.X divb imul imul rex.RXB jae callq mov loopne repnz sbb mov movsl xchg cmp rex.WRXB rex.WX repz add pop mov test xchg cmc sub rex.WR sub scas adc out test rex.WX int3 roll and ja rex.RXB rex.WXB rex.WB or add xor stc rcll pop outsl (bad) mov cmp lock xor mov sti loop repz jmp (bad) repz mov xchg leaveq sub icebp enterq stc hlt sahf push jmpq adc mov lea out sub jae adc repz cmc or lock retq loop jb or rex.B jmp sar sbb mov sub stc sahf test mov lahf lret movabs fcmovb ss rex.XB movabs clc loope jmp (bad) jl mov (bad) fild fsubl jrcxz (bad) sub (bad) mov pop cs test add imul lahf out and sbb add lret (bad) mov fxch adc mov sub (bad) cmp cmp xor rex.R popfq rex.X popfq mov (bad) add es stc rex.RX in cli mov sub (bad) ficomp sbb enterq and fisttpl es test cmp add in enterq xchg mov lock rex loop mov sbbl or cmp (bad) cmpsb mov stos retq sub rex.WR xchg cwtl xchg mov mov icebp pop mov test cltd add adc sub xchg mov sarl (bad) movabs int (bad) pushq mov callq mov fsubs (bad) loop adc sub or (bad) cmp lret rex.W iret mov xor rolb fwait (bad) in jnp (bad) xchg cli test pop push rex.RXB (bad) cmc rex.WR xchg sbb (bad) mov rex.RB jbe and mov pop xchg (bad) xor rcll lahf mov lret (bad) pop rex.RX rex.WXB rex.WR mov xchg loope fdiv int3 or rex.WRXB fwait in sub jns sbb rex.WB lock cmp lods rex.WRXB insl sbb movslq rex.WX in test fcmovb push adcl jns xor outsb (bad) mov mov loope sbb leaveq stc retq adc xor or cmpsl xor rex.WR lods shlb sarl fadds iret fs mov jmp enterq scas leaveq sub sti (bad) jne insb cmpsl or jrcxz testb ficoml lea adc sub jg pop stc sbb rex.WR jno mov adc xchg rex.WX (bad) (bad) add stc (bad) rclb rex.B xchg pop retq pushq loopne rex rolb sub (bad) rex.R push vmovlpd js movsl fist xlat lea mov rex.WR rex.X rex.R sub mov int rex.WX rex.WR cld fwait movabs mov rex.W (bad) imul test jnp cmpb or neg and int test mov cmp loop xchg mov outsb jge mov xchg (bad) sub add out mov (bad) or or mov adc jrcxz or (bad) pop xor shrl cmpl rex.R rex xchg fnstsw mov int callq add xor jge movabs rex.R (bad) sbb ficoml lret (bad) add (bad) movsb nop ficompl sahf popfq rex.RXB add (bad) ss fiaddl in adc (bad) pushfq sub mov scas loopne fnstenv in mov and in adc rex.WR sub sub and xchg (bad) (bad) cmc (bad) xchg pop pop add fcomp rex.RX adc xor loopne (bad) push and fldl jrcxz sub (bad) ltr cmp sub nop (bad) mov data16 movabs fstpl pushq mov or or fsts lret (bad) enterq je mov or cmp mov sub callq xchg cmp cmpsl cld test leaveq push (bad) test xor mov jbe fcoml xor outsb cli stos sub callq adc (bad) pop pop xchg fild sbb (bad) jp divb retq lret pop lea push mov sti jp cltd rex.RB je xchg mov sub cmp adc and jno in cmp int mov jmpq mov sahf shl je pop out adc (bad) movabs in pop pop xchg rex.WX or pop (bad) cmc pop and mov add inc or add enterq (bad) add rex.XB (bad) sub data16 test lock mov pop imul cwtl rex.B movabs movslq xor sbb pop add or cltd push test pushq shr in enterq mov mov xor (bad) retq add in rex.RB add insb adc fcompl xchg pop retq out rex.R mov rex.WRX jrcxz in lock fcomps pop out jns cld rolb (bad) jne movabs scas mov adc cmc out or rex.RXB (bad) retq mov (bad) jb scas int3 (bad) ja jmp xor (bad) rex.WRX and decb loope jge xlat xor xor loope xchg push rex.WRXB rex.WRX bswap rex.WRX cwtl xor icebp jnp sahf mov sbb pop rex.WB mov retq mov int3 (bad) push pop mov xchg iret xchg in mov leaveq ja xchg outsb rsqrtps jp fisubrl shl mov clc xchg sub jae (bad) movabs (bad) fucomi movabs movabs repz imul enterq or retq rex.RB fsts pop mov (bad) pop enterq rex.WX movslq movabs rex.R mov (bad) (bad) sub and push imul or movabs rex.WR (bad) mov insb cmp test loope mov (bad) (bad) xor or cwtl movabs push or (bad) add shlb vmovupd sti sbb add cmp movabs rex.RX rex.WX lahf mov push mov pushq lret addr32 rex.WRX jrcxz xchg mov movsb sbb (bad) or addr32 int3 jne rex (bad) xor rex.WRXB (bad) sbb lods rex.B rex.B cli mov test movabs pushq jrcxz jl fisubr mov xchg fcomp (bad) rex.XB retq xchg adc scas add (bad) sarl sub test (bad) or ficompl and fimull out lret mov leaveq fstp push jle (bad) add (bad) jnp loope movabs (bad) push int xchg mov sbb (bad) or xor movslq getsec enterq xor jns rex.XB adc in out vmovss hlt enterq sbb (bad) cmp xor movabs xchg retq mov mov cmp (bad) rex.R (bad) iret pushq mov xorl mov push clc (bad) iret (bad) repz subl cs cmpsb cmc (bad) and scas lock enterq pushq test sub xor (bad) add (bad) js jrcxz jp movslq js outsb xor sbb rex.WR (bad) xchg (bad) movsl add (bad) iret sar jno movabs add adc retq lock (bad) or rcrl movsl rex.WR jae and rex.WRB fs shlw cmp lock mov sbb (bad) icebp (bad) mov jns and mov jae sub cmp icebp lock sbb mov or leaveq data16 (bad) movabs mov xchg shrl sbb (bad) ja add or (bad) (bad) clc ss cmc (bad) xchg insb mov jns imul xor sbb mov rex.R cmc (bad) shll nop loop rex.WB (bad) (bad) es add ds add xchg je fisubrl rex.WR mov mov (bad) mov pop and fs shrl (bad) movsl and imul outsb cld (bad) jp add rep inc xor mov lods gs cld cmp leaveq add or pushfq (bad) xchg int test xchg rex.RX rex.RB jg (bad) mov gs sub jge roll mov (bad) rex.WX mov nop ja,pn (bad) movsl (bad) roll rex rex.WR stos add (bad) addr32 sbb shlb sub xor rorl rex.RB (bad) fildll jnp lea jb rol push cs rex (bad) adc cmp gs movabs sub shll mov jge shll cwtl rex.WX sub repz insl cmp scas xchg xor ror mov lar lret adc lahf mov add (bad) in gs and jbe movl lcall test retq (bad) xor pop xor fldt pop pop push push sbb shll test (bad) scas in (bad) or (bad) std add test mov mov popfq (bad) mov cmp (bad) test xor clc cwtl leaveq and loope int3 retq test rex.WR js cmp sarl push (bad) (bad) jbe cmpb cwtl add add shrl or rex jno pushq mov rex rex.B rcrl cmp retq enterq sub (bad) xchg (bad) pop rorl adc movabs fiaddl xchg (bad) pushfq testl sbb xor addl (bad) hlt add pop movslq mov outsl adc rex.X sbbl xor sub imul adc idivl jl test cmp add rex.WRX xor (bad) mov mov pushq shld mov test cmp xchg (bad) out (bad) jl (bad) and xchg fsts rex.WRB shrl std int xor movabs xchg mov lods (bad) jbe jp sub sbb testb mov rex.R iret imul icebp add push (bad) sub loope sbb jo mov (bad) subl in (bad) mov rolb jg (bad) jl sbb push or add jp sub rorl pop adcl lret loope push iret mov pop sar (bad) mov out rex.R imul imull (bad) (bad) rol lahf movsb es xchg lret (bad) int3 loop jne cmp rex.RB in push callq callq icebp jl lret std adc push outsl (bad) mov outsb adc loope sbb lock sbb leaveq mov xchg pushq stc fdivrp (bad) imul hlt and mov shl fisttp (bad) cltd testl jns movabs ds xchg add rex.W (bad) pushq in sar (bad) stc test and imul xchg xor jns pop (bad) adc fld fwait jrcxz cmp popfq movabs stos adc jno jmp sub mov and rol popfq pop xor (bad) sti (bad) pushfq mov test fs scas (bad) movb retq imul sub fmuls push cmp xchg sbb add sahf and gs xor mov xor loope hlt rcl or rorb lods mov (bad) jne rex.WRX mov loop movsl mov rex.X mov movslq jle adc in (bad) (bad) fsub rex or xchg pand rex.RXB pop scas mov (bad) ss mov clc adc jno shll test push (bad) div sbb lea and push pop rcrl int (bad) mov (bad) icebp (bad) pop stc ror out (bad) and push out adc (bad) movabs mov int test ror fstl lock fdivp or xchg jbe adcl (bad) repnz popfq add rex.WRB pushfq jrcxz sbb lret mov mov fisttpll cmpsl add (bad) jne std sbb (bad) pop (bad) (bad) lahf (bad) push (bad) (bad) jb roll mov xchg (bad) rex pushfq and fist (bad) jmpq mov jle mov or je sahf rolb loop sarl cmp sarl xchg std add rex.RXB lods popfq loop lods (bad) (bad) adc or xchg lahf mov rex.W outsb mov mov mov icebp test (bad) push insl (bad) xor js stos pop cmpsl cld out rex.WRB outsl rorl rcrl fiadd stos movabs mov out lret test add (bad) rex.WXB rclq stc mov (bad) movabs in ror mov pushfq sub ds hlt (bad) or jmpq (bad) jbe or lahf mov imul sub jg mov (bad) rex.W fwait adc rcr rex.RX (bad) movslq sti rex cmp jno movsl popfq (bad) mov xor movabs loope rex.RXB add (bad) mov imul push lret sub add rex.WRXB sub in cmpsl rcrl insl rex.RB pop cmp jle frstor rorq adc movabs fsubl or jb mov and ss xchg xor mov (bad) out popfq mov jmp xchg add movabs rex.B (bad) and jg pop (bad) pop push loope fdivs mov add out rorl pop or jmp iret mov and add (bad) rcrl loopne sub fbstp mov push lods ds imull adc or shrl xchg shrl scas push rex.X xchg sarl rex.W pop shll rex.WRXB jmpq rex rex.XB rex.RX nop/reserved mov movabs sti mov (bad) (bad) in movabs or cwtl rex.RB xchg xor sbb cwtl add pushfq out push jbe sub jp adc mov es rex.R (bad) shll cld cmp add iret xchg cmp roll movabs pop jne cmp (bad) callq ds rcll (bad) shll mov jb shl (bad) mov rex.WRXB rcrl add jmpq rex.RXB fsubrl (bad) sahf pop (bad) mov out or add mov rex mov sub shll movabs rex.WX adc (bad) (bad) iret mov sub js add pop push or nop (bad) repnz jnp rex.WR imul and movl je popfq imul ja mov jmpq fs lock cwtl jno jmpq rex.W callq or movabs loop int3 (bad) jbe mov outsb mov out ss jge xchg mov adc rol sub xor add sub xchg (bad) pop shlb xor shrl sar rex.WR and jp rex.RX out rex.RX data16 ror gs mov (bad) sub (bad) (bad) rcll sbb repz and sbb rex.WR test or xchg rex.W xchg rex.WX xor movabs add fs (bad) pop movabs xchg jrcxz cmp xchg pushfq pop jge sbb out fmuls (bad) jl add xchg jge xlat (bad) sub testl (bad) sub rex.X sub pop and rex.WXB movabs xchg clc imul (bad) add subl jo vprotw lret mov test mov rex.RXB (bad) fcompl (bad) (bad) (bad) push ficoml lock mov in xchg (bad) scas add xor add adc (bad) std mov outsl xchg stos mov int3 movabs add in retq (bad) sti out push add cmp test jp retq xchg pop rex.WRXB jg ror rex.RXB (bad) shr jnp loop mov divl int loopne sahf std xchg mov je lock out movsb mov (bad) repnz mov sub (bad) (bad) js ss mov cli sub and mov xlat shrl enterq jns add (bad) (bad) jrcxz (bad) loope push shll sub sar stc movslq (bad) popfq roll (bad) sbb callq push shl gs inc xorb pop (bad) shrl in roll sub (bad) rex.XB add shrb jns iret fs mov (bad) add cmp negl sub shll test adc sub in (bad) jbe jnp movabs rex.X pop push add (bad) add sub jl rex.R fstpl rex.B (bad) (bad) xchg pushfq shr imul (bad) roll mov sbb xchg nop (bad) or ficompl xchg rex.R (bad) movabs clc add repz push jns rol and adc jne lret enterq (bad) insl ror rolb cmp (bad) (bad) addr32 movsl clc fimul adc (bad) xor shrl add adc (bad) sub sbbb (bad) jne mov xchg xor movslq (bad) fist xor (bad) sub mov rcrb pop xor (bad) rex.RB (bad) jmp movsb fld1 fild hlt (bad) rex.R or repz fbld or add sbb fld add add (bad) gs sbb ss (bad) push fcoms (bad) (bad) ja pop (bad) repnz pushfq or mulb rex.WRXB orb cmp xorl (bad) retq data16 add sub (bad) out xchg or or addr32 jmpq cmp ja loopne sbb rex.WRB mov adc repnz cmp add cs movabs insl movsl jne (bad) jle scas in fisttpll mov movabs sahf in mov out loopne (bad) sub cltd stos mov (bad) mov xor (bad) mov (bad) nop sub or jne test jnp push pop mov loop rcr lods roll mov icebp hlt cmpsb xchg out cmp or rex.WRXB rex.B and test jmpq int3 (bad) sbb mov adc ja roll xchg sarl pop pop divl jno mov adc mov (bad) jbe xchg rcrl sub scas test lods (bad) lods sar fs imulb rorl retq jmpq loopne addl imul add outsb sarl (bad) fldt stos (bad) lock js nop sar bnd imul rex.WXB nop ds jg add (bad) rcrl xor mov jge rex.XB rex.RX (bad) and cwtl cld shll leaveq add andl rcl test loope rex.WRXB and (bad) inc adc cmp pushq cmp (bad) xchg lret jp test sti mov int rex.WRX cmp rex.RX jrcxz add pop xchg or mov int xorl imul cwtl rex.WX out and mov and fwait pop js and mov push ds push jp (bad) leaveq rex.RXB jae and nop xchg rcl in mov int3 xor lahf mov movabs lods repnz jrcxz mov rex.WRXB stos movabs mov cbtw out test cmc cltd cmp sub lahf movabs or sub repnz fild mov movslq rcr and mov or (bad) push adc xchg mov iret stc lret in icebp xor cmp cmp jle rex.R mov (bad) (bad) add pop pushq data16 divl stc cmp (bad) sub add mov rex.W rex.RB adc pop (bad) callq ror in sub add mov gs lret sti cwtl push hlt cmp callq xor je rex.WXB ss pop mov adc xchg rex.XB out (bad) rex.WR rcll lods lret (bad) fs icebp int cmp (bad) pop xchg rex.X mov sahf xor (bad) retq (bad) rex.WB xchg cmp in fist cmp cwtl (bad) popfq enterq rex.RB and cli rex.WXB (bad) jno push rcll jo jns mov movabs sti push (bad) scas addr32 mov rex.B rex.WR xchg repnz rcll mov cmp roll adc shll pushq lret int3 rex.WB jbe imul sub fiaddl jmp push mov out add jp (bad) and push mov cwtl cmpsb leaveq cltd rcrl imul stos or mov ficom lahf scas pop pop rex.WX rex.WXB xchg movabs movabs iret sbb cmp rex.WX mov lret add (bad) lods jl pop (bad) or imul jrcxz retq imul add sbb push rex.WX rex.WB adc iret std xchg or add sti (bad) xchg jp rex in xlat mov imul xor (bad) loopne lock jnp add (bad) lret (bad) xchg insl mov iret shll (bad) rex.WR rex.RX push add jo xor scas (bad) loope cmp outsl movslq (bad) push adc and (bad) pop fadds pop pushq adc scas nop rex.W jno cli jl mov pushq faddl (bad) adc jge (bad) xchg adc rex.B (bad) mov xchg rex.RX lret gs adc loope (bad) cmc or out mov js pop out push cli (bad) int3 (bad) scas fs enterq inc (bad) (bad) mov (bad) rorl add push rex.WB out cmpsl mov rex.B rex.RB subb (bad) mov mov pop xchg xchg pop add and shl (bad) callq xlat cmpsl (bad) jbe pushq retq popfq or ja rex.X retq (bad) icebp sahf xchg fisubrl (bad) cmp rex.WRB (bad) lods (bad) pop clc fsubrs mov mov pop out cli sub xor rex.WRX add movabs push mov (bad) fnstsw add orb sub mov (bad) mov rex.W fistl int3 add jp sbb xchg mov mov jns add lods out pop pushq lret add or jo rex.W fisubl loope mov (bad) xchg add rex.RX sbb pop (bad) pushfq and test (bad) add rex.WRX push lahf (bad) (bad) fstps mov rex.R (bad) rex.WRX cmp and fist retq shrl lret iret add fbld mov mov or mov (bad) and repnz movsb rcr xlat (bad) jge (bad) (bad) int mov out fnstcw cmpsb xchg mov mov or xor cmp rorb bswap pop push lea adc adcl (bad) jbe pushq rex.R adc pop mov (bad) cmp (bad) pop mov sub pop rex.WRX mov sub fbld (bad) je sub sbb (bad) and imul pop iret and je (bad) (bad) cmp rcl out fs fidivl mov rex.WR movslq sub negl jne xchg cmp sarb pushfq callq retq rex.WR rex.WRX sub push jp adc (bad) (bad) (bad) cmp (bad) es (bad) (bad) (bad) cmpsl rex.WRB pop in (bad) adcb leaveq cmp sbb adc rex.WXB push rex.XB sub clc cmc mov retq push and rex.XB adc lea sbb push or sbb rex.XB pop xchg or rex.WX sub pop pop (bad) enterq adc rol roll and test jp push test rex.WRX js int3 in enterq sub and cld (bad) rcll jrcxz xor cmp xor data16 imul retq and jae nop mov (bad) icebp cmp jb (bad) fdivr movabs in sar outsb mov lods scas rolb adc (bad) lret jl sti repz fwait add sbbb push add (bad) push (bad) rcll push and jne shll and mov loope cmp mov add cmp rex.WRB (bad) (bad) jno rex.WX rolb jge rex.R xlat ficompl xchg movabs movabs scas and add rex.WR cmpsl mov out cmp mov jae repz (bad) movabs icebp popq (bad) jb rorb lcall (bad) fdivl pushq xor movabs rex.WRX mov imul lods mov jrcxz xchg or push (bad) fsubrs out imul (bad) xor (bad) sub add (bad) lret or jo add add (bad) sub xchg xor add repnz (bad) and roll rex.X lods rex.RXB pop loop rex.RX pop jbe jno,pn adc adc lock sarl adc (bad) cmpsb mov js rex.WRXB xor adc jmpq movabs fcmovb push and addr32 popfq xor rcll (bad) mov (bad) repz xchg jrcxz out repnz js sbbl movslq jno retq pop and push (bad) push push roll out push rcrl std xchg movabs fisub idivl jp jno (bad) popfq rorl (bad) (bad) out mov loope xchg scas callq (bad) fistpll shr push lock sub cmp or xor insl fild movsl shrl push in rex.WR scas test test icebp pushq int (bad) insl inc mov mov movabs fs push jg stos loop testb out (bad) add cmp subl movsb lea add xchg cmp sbb testb cmp mov rcrl in or std (bad) or sbb pop rex.X sub rex.XB jmp jb pop std gs andl roll rex.B roll shl rex.XB lret jns (bad) mov add notl retq out (bad) jl lret rex.WX shr add pushq pop mov pop xchg hlt shll (bad) (bad) out (bad) cltd mov add data16 lret xchg mov mov push adc add mov (bad) xacquire jp loope adc out adc rex.WXB sbb or (bad) fs sub add push sar (bad) mov or push jge repnz xchg sbb jp xor (bad) flds add rex.WXB (bad) xlat fs out xchg enterq (bad) icebp rex.X movabs sbb (bad) std cltd and (bad) movabs mov pop lret mov rcrl (bad) mov scas mov lea rex.X mov lcall add (bad) shrl cmpsl iret sbb push loop test retq sbb sub xchg out divb imul iret mov or mov sub imul jl (bad) std int shrl lock (bad) mov mov faddl mov (bad) in movabs jge cli pushq or (bad) out rex.RB rex.W jb shll (bad) xor (bad) outsb or cmpsb out sub sbbl xchg test add ja stos mov rcrl mov add loop sub ror mov test mov idivb jrcxz mov sub (bad) (bad) (bad) push retq sbb (bad) xchg sbbb (bad) mov (bad) in loope jmpq retq fmul roll movb js or mov in xlat (bad) js (bad) loope cmp xchg (bad) pop movabs fwait pop es add leaveq sbb dec mov fst pushq and rex pushfq rex.W and add out and push int mov repnz rex.WR pop add (bad) hlt rex.WRB mov and insb (bad) push jge xor sub fwait xchg js (bad) stc jb adc cltd cmp jno in lret (bad) mov gs movslq shlb js add or mov jns add rex.WX (bad) movsl sbb sbb add xor or shl sub (bad) pushq (bad) xor callq mov jbe mov xorl (bad) shrb repnz and (bad) xchg icebp insb rex.RX fldt (bad) (bad) (bad) outsl adc (bad) (bad) jbe mov and or xchg lea rex.W xchg or pushq and (bad) (bad) retq cmp push add (bad) imul cmp sub adc jl cmp add movabs or mov mov in sti loope retq jno gs (bad) jo mov scas (bad) jmpq imul jns icebp jp leaveq jae movabs and rex.B cs mov cmp rex.X leaveq int3 enterq movslq in hlt dec (bad) lret lahf rex.X and rex.WXB (bad) rex.RXB mov jge fbstp int3 pop rol (bad) (bad) fisubr rex.WX jnp (bad) fdivl mov jmpq jbe push (bad) sub xchg callq imul mov test mov cmc rex.RXB rex.W mov (bad) add xor mov ffreep rex.WXB (bad) jl (bad) out and in addr32 icebp xor mov mov ficom rex.RXB cld rex.X sbb mov movzwl xchg xchg jge push rex.B pop and (bad) sub cmp movabs sub insl sub lods jno retq popq lock icebp (bad) push cwtl sub sub movsl lret retq xor jl movabs xchg cmpsb (bad) sub movslq (bad) mov loop xchg shrl sub insb (bad) cmp jo (bad) pop (bad) repnz or pop cmp ja rex.WR or or pushfq sbb push cmp jbe fdivs lret and or movabs adcl (bad) test jo (bad) xor xor push clc movabs cltd loop xchg stos shll sub push xchg repnz rex.WXB add outsl leaveq rex.RXB (bad) sub loopne sti jns sub callq test and mov xor or sub shrl mov roll mov (bad) push jb and pop rorb lods in lods pop xor xor adc rex.B rex.X xchg callq out shrl rex.WXB jge sbb adc rclq movabs and pop pop (bad) jl xchg jrcxz rorl jmpq rex.WX mov (bad) mov sar es (bad) cmpsb fwait (bad) stos add xor je sar sbb add cltd test idivb jnp insl and shrl cmp imul popfq fs loope add adc xchg (bad) cmp (bad) imul jno callq movslq mov stos loope fwait sarl cs cwtl and mov xchg stc (bad) mov add repnz xor insb xor (bad) mov mov rol loop (bad) jge adc lret push rex.B test repnz sbb roll ss (bad) add (bad) stos outsl cmp cmp (bad) sub sbb (bad) jge add or test and scas fidivr retq mov rex.WX fdivl mov data16 mov sbb xchg movabs and imul mov pop fwait (bad) (bad) rcrl pop sub popq sbb mov rex.XB xchg stos push lret jg divl pop cld mulb movabs add sub mov movsl cwtl add mov (bad) cmc cmpsl jmp cld jmpq std (bad) cmp cmp pop pop rex.R (bad) jle (bad) movabs xchg gs jge jg out rex.RXB jns (bad) movslq adc enterq rex.B sub (bad) mov fsts repz and push rex.WRX sub (bad) (bad) jb popfq sub cwtl repnz scas rex.WX movabs mov sbb xor imul test sbb repnz gs mov movabs out xor clc jrcxz ds vfrczpd and hlt cmp rex.WRX rex.WR ror rorb fadds icebp enterq rex.WRB adc notb ss cltd nop cli lods add pushfq out js (bad) cli (bad) sub movabs sub sbb xchg (bad) js cmpsl psrld rex.W stc adc pop cmpsb js cltd cmp negl add outsl adc andb in push or rex.WR gs pop add adc int int3 cld sti rex.WR cs sub cli rorl rex rcrl fidivr clc stos rcll cmc xchg adc cmp (bad) out roll lret adc movsb push and push test rex.RB xor ffree sarl adc loopne mov push (bad) lods (bad) jmp mov fwait add (bad) movabs rex.X in cmp jg xor (bad) xor (bad) xchg callq (bad) cli popq mov nop lock movsl iret lahf mov (bad) pop sub pushq xchg rex.R mov cmp rex.B pop stos add jo rcr rex.WXB mov (bad) outsl (bad) xor sti or fsts sub (bad) movabs and repnz out es jns push popfq sar jbe and rcrb (bad) xor push mov (bad) sbb xchg hlt (bad) outsb or mov cmpl or (bad) or outsb (bad) (bad) pop push stc mov jne or rcrl push test pop (bad) pushfq callq repz pushfq rex.B imul (bad) ja stos (bad) retq mov (bad) js xchg clc scas or (bad) pushfq mov jns imul movsl (bad) mov stc (bad) jle loope lock rex.B repnz sbb jae push rol paddsw iret xchg xor leaveq jne fidivrl movabs mull lods (bad) adc xchg movsl push xor sub shll repz mov xor shlb fildll nop xchg or mov (bad) imul mov sub pop sbb repnz mov lea popfq gs rcl (bad) jns mov lock sub shll pop int3 retq push cmpsl sub mov (bad) (bad) jns mov loopne repnz pushq rolb retq loop fxch rex.XB movabs mov lcall (bad) jno retq fucomip mov (bad) push cltd (bad) sub sbb ds js jne or cld iret adc pop and imul (bad) push test xor push rcr mov pop psllw add mov roll out cmpsl rex.WRB push and jp shll movabs rol fnstenv push in rex.RXB jb mov or sbb jrcxz pop negb ds adc and andb rex.WRB (bad) rex.X fs bnd fwait and lcall movabs subl popfq movabs mov fld1 pushq push (bad) pop rex.R shr or (bad) insb je icebp or in mov jle pop loope (bad) (bad) add jge rex.XB pushfq fyl2x loopne cmp or mov adc shl in int test shrl sub mov fild movsb ds (bad) cld rcll cmc rol xchg add out sub repnz xchg jno and pop pop jmp add pop (bad) fnstcw test imul movslq cmpsb (bad) rcr (bad) pop and jbe loop add in lock mov mov xor mov mov retq in shrl movabs test stos mov (bad) pop (bad) xor cld data16 mov push fdivp and cltd sar notl rex.XB (bad) sar int pop out lods xchg leaveq (bad) (bad) adc fisubr add (bad) out cltd addr32 rex.WR loope (bad) int3 popfq loope mov stos xor rex.R fdivrs iret and pop jmpq addl xchg sub int rex.B rex.WR sarb sub xchg movslq xchg xchg mov pop rex.X adc rcr or adc (bad) xor rex.RXB cltd (bad) mov add retq decl jb sbb (bad) imul fld cmc mov sub out sahf iret cmp sbb subl fldcw in add loopne jmpq (bad) jb rcrb (bad) (bad) (bad) push mov xor rex.B cmp jmpq xchg rex.WX or sub enterq add sbb mov rex.WRB sub xor (bad) cmc movabs insl test scas jno (bad) xor (bad) jb (bad) and test rcrb movsb je (bad) sub lods xchg pushq movabs xor pop (bad) rex.WRX mov mov retq rex.WR shl cli or pop adc xlat add or fildll rex pushfq out sbb rcrl (bad) cltd imulb (bad) xor callq (bad) rex imul retq popfq rex.WXB lret sub mov fcomi movabs and (bad) lock or imul cmpsb std sub out add sub mov and enterq retq mov (bad) notb sub mov lock rcl vpsubq (bad) fisubr add sub test rex.WXB rex.WR movsl (bad) gs retq test enterq ror push clc andb xor (bad) fdivrl pop cmp hlt pop xchg (bad) (bad) pop rex.WX xor mov repnz leaveq cmpsl (bad) add es retq mov push xor repnz int movabs icebp add rex.WXB mov fist callq mov mov addr32 cmp sub (bad) je movsb int retq (bad) int3 pushq rex.WR add xchg mov xor sbb xchg (bad) xlat out shrb icebp (bad) jmpq movslq movabs (bad) sub and mov pop insb rol cmp rcll lods ffreep jrcxz popq jne decl add mov mov xor out and mov mov jmp pop cli (bad) sbb (bad) mov (bad) adc pushq (bad) movabs cmpsb xchg sbb ss push push rcll rex.XB pop pop fnsave (bad) out mov sbb pop mov jrcxz xchg iret rex.WRX and roll (bad) mov shl idiv rex.WRB fwait pop movabs out adc push pushfq sbb movabs js movsl or test xchg and in mov mov jnp fdivrs in xor jnp xchg and jno xchg rex.B mov cmpl ss hlt out (bad) cwtl (bad) (bad) testl or imul std iret (bad) cmp push repz outsb adc test pop rcrl bnd rcrl outsb in adc loopne cmp rex.WRXB out leaveq test subps shll add js (bad) test out movabs add or rorl test or (bad) imul or jle adc xor sub in jo icebp rex.RXB lret div rex.WB jae popfq ficoml test sub loope repnz add mov (bad) cmp (bad) movsb movabs (bad) sbb js mov adc adc (bad) rcl rex.WB or push leaveq xchg loopel repz mov stc imul rex.WX mov (bad) jnp in ror callq add and scas sbb jae and xchg stos (bad) (bad) (bad) xor mov (bad) cmp push lret and mov mov (bad) xchg pop (bad) (bad) movsb enterq sub callq xchg pop movabs in std popq stos cmp (bad) testl nop int hlt adc mov rcll fiadd cmpsb sahf mov jae rex.X vprotw xchg loope test push subl pop test add (bad) mov orl cmp roll (bad) (bad) add rex.WRXB in rex.WXB (bad) jl sarl rcl mov jae mov jbe rex.WR rex.R out fiadd rcl mov movabs mov movabs (bad) (bad) rcr stos adc test mov sub mov mov adc stos mov outsb sbb push fmulp cwtl xorb ss xor leaveq xor rcll mov nop iret (bad) fcomi xor pop fldenv cs cmp (bad) adc fstl lret insl (bad) mov sub sub push adc mov mov retq outsl push push in (bad) int (bad) iret xchg lret (bad) pop pop (bad) roll cmp xorl rol pop andl callq cmc sarl fcoms shll leaveq (bad) scas cmp fildl not sahf jns retq xor rex.WRX iret cvtps2pd cmp sub rex.WXB (bad) sbb js scas pop push jmpq mov lahf (bad) rex rex.R cmp and rex.W mov fcoml andl shr fist movabs rex.R imul (bad) xchg outsb test rex.B push movsb rcrb mov (bad) pop (bad) mov (bad) (bad) cli std addl cmp cmpsb adc decb jbe adcl rex.XB fmull test gs xor cmc xchg mov movslq test (bad) hlt pop mov (bad) ficom repz movsb sbb movabs scas mov lret sti std add add lea fimul out data16 or jrcxz enterq (bad) xor pushq (bad) clc retq xor (bad) and fstps int3 (bad) data16 jo sub sub push sbb mov pop and in movsl jnp mov pop iret cmp (bad) gs cmp xchg movabs sub pop xchg (bad) mov mov outsb sub sti mov leaveq (bad) cltd repz (bad) clc or sbb mov (bad) adc out xor addl repz ja sub scas rex.WR lea (bad) sbb rex.WR mov movzwl leaveq cmp vcmppd sub nop and xchg pop test add ffreep and sub cmpsl (bad) or xor lods fxch repnz jo jge and sub mov ja xchg (bad) xchg stos test rcll pushq push sbb cltd sub js push icebp in icebp cmc stc fidivl lret mov sub add jp pop adc fisttp add stos (bad) rex.R rep es rex.RXB repz mov rex.R iret movabs or push icebp xor repz rex.WXB movabs rex.RB sbb jo mov and (bad) outsl repnz int3 add jo icebp mov stc loope test add (bad) mulb je (bad) sbb xchg sub rex.WB jno mov cmc sub pushq movsb je clc push out (bad) jo jnp xchg jp cmp (bad) iret (bad) push (bad) jo test fildl fisub adcl and and fisttpl iret sti (bad) (bad) loopne rex.WR fcomps mov movsl xor and movl fwait or xchg mov sbb sub (bad) popq sub cli sbbl test cltd push or js movslq jne xrelease xorl adc xor enterq mov lahf mov negl mov scas xor (bad) rex.X (bad) in add (bad) rex.WXB movabs fldl icebp xchg push mov shll rex.RX mov iret adc sar fsubrl cmp (bad) int ffreep test push retq (bad) xor ds rex.X cmp push scas jb negb xor fisttpl mov rorl mov xchg cmc rex.XB rex.WXB std rex.RX cs in or imul sbb xor (bad) fldt or cmpsl and (bad) rex.RB repz jle xor (bad) out jbe rex.RX fsubp lret rex.WR and (bad) fcoms out cmp pushq (bad) stc xchg stc in xor xchg sub or lahf push add sarb rorl sbb rex.X (bad) add idivl nop xor out push or cli add movabs js psubw rex add scas (bad) xchg rcll push movsl lret test sub shl (bad) negl adc stc sbb mov (bad) mov mov and cmp mov xchg push out incb (bad) shll and mov xchg rcll lret ss add cmc rex.WRXB gs movabs (bad) sbb hlt rex.WXB (bad) push shr jl (bad) repnz xchg movabs (bad) ffreep xor rex.B sarl mov cltd (bad) adc lods (bad) cmpsl push xchg pushq popfq xlat push rcrb adcl stos imul cltd (bad) shl or or rex.RX in andl sub mov cmp rex.W rex.WRX rex mov (bad) adc rex.WRXB sub mov imul movabs sahf add push or rcrl nop (bad) rcrl js loop cmpsb xchg lea cmp mov rol jmpq xchg sbb int3 loope (bad) pop cld sbb cmp rex.R or add cli rex.X xchg (bad) xchg (bad) cmpsb jns rex.B mov (bad) jmp idivl fdivrs (bad) lahf (bad) (bad) leaveq (bad) mov jle rex.RX shll ror add in xchg std enterq pop fisub mov out lahf cs in test sbb shrl mov or orl ffreep out cmpsl popfq xor pop xchg test jae (bad) xor add mov push insb rex.WB adc (bad) xchg loop fldt jg test test or mov sbb mov rorl mov push icebp rex.RXB (bad) (bad) (bad) int (bad) movabs mov ficom (bad) movabs ds sbb fildl mov xor xchg adc push addl mov fldcw clc movabs lret (bad) (bad) test push sbb (bad) (bad) fcmovnbe (bad) in (bad) fs push (bad) ss rex.W xorb out sub movsl add sarb sbbl int3 rcrb jns rex.WRX fstl rcl (bad) pop (bad) movabs jl mov int3 xor out (bad) (bad) hlt mov pushq xchg loopne lret rex.WRXB sbb cmp rex.WR mov xchg xor mov pop (bad) rcrl cwtl or lret (bad) ror in (bad) in leaveq rex.WRX (bad) shrl and jbe lret add (bad) hlt jno icebp insl (bad) sub rorw fwait add callq pop xor (bad) in jle xchg pop xchg sub loopne movsl jne stc cmpsl es and fnsave (bad) loop rorb rex.R pop rorl mov (bad) xor xlat ja and lret movsb xchg repnz add jo outsl mov in add test insl int mov rolb sbb mov jne movslq addr32 adc (bad) mov lock xchg callq shrl sbb pushq iret shll sub cs std sahf fsub (bad) jbe mov (bad) cmp rex.RB cmpsl shlb rex.WX int3 sbb pop out (bad) or lock rex.WB mov (bad) jo xor shrl add int sti mov jp xchg jno (bad) lock (bad) adc or repnz and cmpsb and imul jmpq fcoml sahf push cmpsb and iret (bad) mov not movabs cmp sbb (bad) add (bad) psubw jp gs or fidivrl decb xchg adc fist rex.RX mov mov loope jg and rex.R mov in (bad) xchg in or pushfq fwait lock movabs (bad) mov adc or lret cmp mov loope ficompl rex.WXB nop (bad) xor out add lock (bad) std outsb adc sbb flds rex.WRX sahf sbb insl lret outsb xchg fs (bad) ficomp xchg jae movslq lock cmp or xor jne outsl (bad) mov lcall adc (bad) cmp rex.W loopne or cmp and fwait mov scas rex.RX mov cmc jno add (bad) jmp fcoml mov test cs movabs adc divb clc pushfq and rex.R repz subl fildll (bad) mov (bad) movabs out (bad) (bad) leaveq xchg adc (bad) fisttpll (bad) xor sarl popfq in leaveq movsb roll adc (bad) xor push cwtl mov (bad) add movsl rex.WXB mov movsb movabs shrl xchg scas movb push rex.WR xor jmpq and add (bad) scas shrl (bad) jbe xchg vpaddsb mov outsb rorl (bad) (bad) push loope jnp xor pop (bad) in rex.WRX test or icebp pushq xor mov jbe rex.X lret (bad) rex.WR and (bad) int3 xor jg rcrl xchg stos (bad) sub mov lahf xor (bad) push rcll out jp (bad) push and rex.WRB rcrl hlt jb xor int3 rorl loop lock sbb sbb adc sub out (bad) jo mov and movabs (bad) mov mov add jrcxz popfq and cmp rol jmp (bad) incl stos add in rex.WXB lock (bad) xor mov mov and (bad) mov out (bad) rcll stc (bad) sub cli sub pop lock (bad) fldt pop (bad) adc pop int3 scas cmc rcll and roll cmp sbb rol jnp (bad) jp or cmp jns shr mov int or (bad) jnp movabs js popfq movabs sbb retq jmp js push rex.WXB mov push sub (bad) movsl (bad) sarl outsb cmp sar shll lret fistpll ja rex.WR fs or (bad) sarl shr cs mov sbb scas pop and enterq mov lahf rex.RB (bad) fcmovnbe mov rex.WRX adc jl (bad) rex.WR rex.W add in mov outsb rex.WRX leaveq cmp repnz test xchg adc fdivl rex.W movsw leaveq push mov (bad) sub jno fmul or lods jrcxz pop push lea adc mov (bad) cltd and (bad) imul adc xchg push je outsb mov lods gs sahf pushfq scas add (bad) enterq (bad) and jle movsl add xchg mov out (bad) cmpsb data16 or add lret mul sbb mov iret xchg movabs or (bad) fcomps movabs mov icebp sbb (bad) jmp xchg sbb mov (bad) (bad) retq adc retq pushq pop jno (bad) sbbl add popfq rex add xor (bad) or jno xor mov jg xlat xor (bad) mov lahf (bad) mov (bad) or scas cmc and (bad) (bad) sub mov mov fs mov and sub jnp repz lea rex.RXB add movsb jbe sub outsb mov (bad) mov callq movabs mov add fstpt rex.RB outsl (bad) std stc in (bad) lret add repnz cmpsl xchg cmpb or or cmp (bad) cmp subl (bad) fsubr add add (bad) je mov fiadd rex.RXB sarb int3 and in lea shlb mov nop icebp mov (bad) addr32 rorb outsb mov (bad) ds jnp sbb (bad) mov out andl mov int3 fmul mov xchg jne js mov jmp jl fsubs (bad) (bad) stos movabs rex.WX rex.B and out jge (bad) (bad) sub ds mov jno xchg xorl repnz rex.WR jmp rcrl data16 int3 (bad) pushfq in repz test add imul loopne pushq in rex.WRB imul mov (bad) sub rex.B popq sub add lret or xlat sub cmc cmp jmp loope (bad) cli add ds mov movabs mov or fs xchg outsl or (bad) int push lret (bad) and mov fld or cltd jmp js movabs mov xorb (bad) (bad) es jae outsb lods repnz mov add (bad) movslq (bad) lret js rorl xchg rex.WRX adc cld test movabs mov pop cmc es pushfq (bad) (bad) stos cli retq outsl hlt stc outsl mov xchg retq iret xlat rex.WRB fsubrp pop cltd xor movabs sbb cli stc repz hlt fnstenv (bad) stc rex.WR negl lret jnp rorb jo mov xchg (bad) jne int3 sub fwait enterq in lret sbb add adc rex.WR lret icebp (bad) pushq (bad) (bad) xlat xor outsb and cmp sub mov jmp jno cli xor pushfq sbb or outsl es pop and mov orl and rex.R rex.RX test xchg sbb and xchg retq idiv movsl and mov rex.RB iret pushfq movabs rex.WXB rex.RX (bad) cltd mov or push test insb rex.WX cmpsb sahf in scas rex.WRB int movabs rex.RX mov enterq or int3 gs mov roll or xor cmc mov jns (bad) mov (bad) jne in sub or repnz mov sbb mov adc xchg shll and or adc (bad) cwtl cld sarl gs in sbb test repnz xor adc (bad) add movabs fsubl ss xchg push push cli repnz sub movabs int (bad) (bad) scas pop or sbb sarl movabs (bad) rex.RXB mov jge,pn jb in (bad) (bad) repz roll sbb add in imul pop xchg xor fisubl (bad) fcom fwait movabs rex.WR jnp xchg jb mov (bad) test movabs sbb xor pop (bad) movabs movabs jp add (bad) mov in mov rcll (bad) ror sub jmpq out sbb (bad) enterq add cwtl mov addl (bad) retq rex.RB gs pop callq rex.X sbb cs xor push adc rex.WX (bad) pop int rex.WRB (bad) loope int3 mov (bad) lock movabs or movabs (bad) stos (bad) (bad) pop jbe (bad) mov rex.XB push rex.R and and mov sbb (bad) imul mov (bad) jns push add push rex.WX pushq jg (bad) xor (bad) cwtl fdivl in jmpq cmp icebp stos jl clc rex.WRB or in or nop add clc jmpq push (bad) mov or lods mov (bad) test xchg mov (bad) xor jmp jmp xchg movsb lret mov movabs ds enterq or ficom add rex.B mov xchg repz add sarl je rex.WR cs or jrcxz pop in and sarl cld scas (bad) jb add (bad) enterq movslq cmp inc jae (bad) ja lret rcrl outsl xor mov rex.WR sub xor mov test iretq sub test add in movsb (bad) rcrl js xchg adc rex.WRXB pushq movabs push sub fsubs (bad) mov jmp lret mov push sbb out leaveq and or cmc movabs rex.RB rex.XB mov loope test sbb movslq push jo pop lea add xchg rex.R rex.RX roll xchg lret (bad) out stc out or (bad) retq movsl add in cld mov enterq insb shr pushq movabs rex.WR jns std test (bad) rex.B addr32 add rcl sbb push (bad) or jmpq in sub (bad) xor clc or sbb cltd shrl push rex.XB mov test (bad) or lods xorl mov adc rex.WB in rex.WRX repnz (bad) jp adc movabs (bad) (bad) jmp movabs sbb in pushq es (bad) or mov js mov jns (bad) (bad) clc jmpq (bad) cmp mov retq adc sbb mov (bad) nop add pop (bad) jle cltd jbe cmp adc push (bad) leaveq flds shll mov sarl in jmpq pop adc jbe shrl push and clc and loop or (bad) mov and loop int3 sti add test cld test movabs xor (bad) push adc jmpq mov mov cmc outsl popfq (bad) (bad) je rex.WXB mov in xchg (bad) fnstcw movb outsb (bad) cwtl rcll jg xor sbb jae rcr outsb xchg add repz (bad) mov rex.WRB rex.W sub scas (bad) jb xchg lret adc pushfq adc retq mov xor stc pop int3 cli in and push rorl xor test je sbb fucomp xchg pop lods out rex.WRX rorl cmp vmovntps xchg fsubr cltd xlat inc push sbb rcll mov and jne add sub js retq mov (bad) (bad) imulb xchg (bad) cmp lret fnstcw popfq fild rcrl test lret (bad) imul lea movabs jns shrb cmp lods push cmp xchg (bad) scas (bad) out adc rex.W in int or push gs (bad) jbe lods mov add jbe mov mov fimull (bad) (bad) jge mov rex.XB repnz movabs fidiv jo in nop lods in cld pop sbb jae pop shl jmpq movabs lret jo (bad) rex.RXB and adc sbb lods (bad) std sbbl je mov roll pop pop rcrb addl (bad) add xor stos nop xchg (bad) sub sarl fbstp sbb shrl rex.XB and enterq mov add jae lods add mov pop cmp lods pushfq xlat test loopne mov xchg mov sahf imulb fildll cmp (bad) shr (bad) xor cmc rex fs (bad) mov movsl addr32 pop or fwait sbb cli pop jrcxz rcll jno fistpl lods rorl mov ffreep outsb ds or test in sub and retq cmc shr sub lret pop jp loope jge fld (bad) mov xor es xor retq leaveq popfq rex.RX jbe and sub (bad) ss and movabs jae scas (bad) sub mov (bad) stc mov movabs xchg pushfq or push sub mov fstpt cs (bad) je jae in popfq (bad) idivb lods (bad) or insb cmp sub out rex.WR sub test and add mov movabs rex.WX in rclb (bad) pop loope mov rorl lock int3 fstps (bad) iret repnz rex.WR pop xor lods movabs (bad) movb add cmc mov rex.RX (bad) lret jo adc icebp repz out add cmp xlat sbbb (bad) jrcxz std movabs leaveq jae (bad) lret lret pushq ja add je or xchg jb add pushq rex.RB mov std mov xchg (bad) test (bad) xchg shrl jae mov int3 (bad) rex.WRX sub retq adc mov sub callq movslq pop or rex.WRX or jae roll cwtl retq roll int mov es jno and (bad) sbb or xchg (bad) rex.WRB (bad) and icebp fstpl enterq rolb mov mov (bad) mov or sub rex sub jle pop xchg pushq mov insb leaveq cmpsb rcrl (bad) sbb addr32 callq push sarl mov cmp (bad) adc movabs or pop ds mov hlt iret push cmp (bad) sub (bad) pop sub fstpt jae iret (bad) (bad) rex.X js (bad) adc nop mov in push cmp pop cmp cmp xchg (bad) ja xor push add rex.WR rol push mov adcl imul adc shll (bad) jae je (bad) mov (bad) fwait clc outsb rex.B popfq std cwtl sti (bad) fsub xchg sbb pop (bad) movabs rex.W cmpsl rex.XB fs cmp jp mov rex.XB cmc xchg cli lea xchg rex.WRX test or movsl (bad) mov fadd out jp mov movb nop lret callq push add loope (bad) rcrl xor sub scas rex.W cmpsl add sti mov jrcxz (bad) callq in loope enterq mov add xor sbb (bad) clc cmpb xchg pop in or sbb add rcr test loopne adc nop negl shll rex.WRX cld rex.B push and jle lea fadds std sub pop jae (bad) vpavgw retq psubsb (bad) (bad) pushq rex.R cwtl cld xor icebp mov test sub out std lock fcoms (bad) rol cmp (bad) xchg jno (bad) rex.WRX frstor fimul lock fnstenv add clc gs rex.RB movabs (bad) xchg push rex.WRXB repz (bad) (bad) outsl adc shl (bad) out sbb rex.R mov (bad) xor xor (bad) lret test jbe sbb rex.RXB and (bad) rex.WB movsl rex.WRX or (bad) cmp (bad) int3 (bad) (bad) push test fisub leaveq pop (bad) lret enterq pushq jmpq rolb lret push sub (bad) repz enterq fsubl rex.RB mov pop pop (bad) xchg mov retq xor rex.WR scas (bad) (bad) lock rex.WRX add vpcmpgtw lret xor and and mov rolb rorl outsb jl xchg (bad) mov and cltd mov std xor add pop rex.WRX mov push mov mov scas repnz movsb in repnz shr (bad) or and lret movsb out (bad) or jne fscale repz rex.RB icebp jle leaveq xor adcb jb iret sbb jl popfq jle loope (bad) mov jnp movsb fwait mov fadds or js cmp mov sbb jp sub and mov sub addr32 test mov mov mov add movabs push test sub mov insb vmulpd enterq mov xor jbe insl and scas mov fildll rex.WXB or rex.WX xor mov nop mov rex.WRB (bad) in mov lahf add jl (bad) rolb xchg (bad) mov rex.RX stc test divl sbb sbb add jrcxz adc cmp cmp xor rex.W lods push mov cmovns xchg cmp es push (bad) push imul adc add rex.WX imul (bad) lret xlat (bad) mov cmc mov jb stos movabs outsb xor (bad) pop fs and lea pop (bad) pushq sub negb rcl add sub lret shll (bad) inc out (bad) (bad) (bad) mov sub (bad) xchg mov imul xor in rcrl adc enterq imul rorl add stc (bad) in (bad) stos sarl (bad) dec cli (bad) pop rex.XB fs xor mov push ja mov callq rol fisttpl (bad) cli sub in je or iret mov jno addl in movb (bad) jnp (bad) repnz rcll rex.WX (bad) callq mov (bad) rex.B fs movabs faddp (bad) push in in movsl fiaddl out int adc test xchg repnz mov xchg xchg push rex adc xor jo mov add add rcll add roll loope mov or stc or (bad) pop (bad) (bad) icebp popfq sub roll rex.RB adc addb movsl gs insl mov push mov cmp push jae (bad) sub out mov rcll jns mov hlt adc mov shr fisub push ds movabs rex.W (bad) pop fsubl sbb rorl pop jrcxz adc rcll cs (bad) (bad) cmp (bad) and (bad) adc jns rol (bad) sbb xchg popfq (bad) mov (bad) (bad) jrcxz movabs and pushq add rcll mov xlat rex.WRX clc add rcll lea movabs loopne js retq (bad) out mov loopne repz fs mov xchg (bad) sbb (bad) cmpl in (bad) cmpb xor and xchg cwtl cmp xchg out mov mov fldcw hlt fucom (bad) loope fidivr rex.RB movabs mov fiadd rex.B (bad) icebp rex.RXB adc and rex.WX mov lret mov (bad) gs cld ss loope mov push cmp fwait mov mov pop cli clc scas push test cmp (bad) mov xchg (bad) fcmovb add stos mov cmpsb sbb callq jmpq (bad) push (bad) adc (bad) (bad) fistp rex.WRB int3 jrcxz rcrq retq (bad) (bad) mov movhps sti in negl int jno iret rcl jns stos mov (bad) pop shl (bad) loop out xor pushfq shll mov enterq sahf pushq sub push ror xchg rex.W rex addr32 rex.WR ja rex.XB (bad) int3 ficomp or adc callq mov lea clc jg adc retq lret adc adc leaveq or sub test or push mov and cld rcll out (bad) pop push (bad) ss bnd je (bad) ja movabs test movabs jo (bad) jg xchg fldl sbb push push lock (bad) xor or mov test mov (bad) jne mov movabs (bad) push cmp adc fsubrs xor sub sbb rorl (bad) out outsb sahf pop fisubrl repz sarl std fwait lock (bad) xchg mov test cmc cmp xchg mov rcrl adc shr push insl (bad) out test enterq (bad) test sub std in lahf add add rex.WR adc (bad) xchg insb pushfq jno mov jp mov add (bad) jrcxz (bad) mov rex.R pop icebp rex.WX cli (bad) rex.RX movabs divb movabs data16 xchg movabs popfq jmpq add outsl retq (bad) pushq rex.WX sti sbb sarl js add lods in hlt pop stc ja std pop pop add adc mov in xchg or jne scas add xchg push callq cmpl xchg fucomi in cmpsl jno rorl jmp test adc (bad) int insl push push movabs ljmp movabs stc xor cwtl loope shrl jo and xchg callq outsl (bad) xchg jrcxz stos add out push movabs jle stc imul adc pushfq add xchg mov adc jnp (bad) adc cmp xchg or cwtl jp mov (bad) mov cmp xchg lods push out rorl addl push sub cmp xchg rex.W cld mov imul loope pushq test scas ja jmpq xchg sbb or int3 popfq scas fcompl add out (bad) roll sub adc rex.R sar push popfq sbb stc test add jo test xchg or push movsb rcll ficompl pushq mov in rex.B out (bad) xor push sarl pushq jge,pn movslq rcrl mov andb (bad) (bad) rex.RXB repz mov rcrl xlat (bad) lret test sbb callq mov hlt (bad) ss mov (bad) sar shr rex.X (bad) jo jnp (bad) jmp adc mov mov push loope mov fadd or repnz mov bswap lahf outsl (bad) rex.R rex.B sub cmp rex.WB fwait gs shl fsubs mov (bad) mov (bad) pushq movsb (bad) popfq sarl ficompl scas xchg test in jae icebp iret (bad) push xchg es sbb rex.R mov rex.WX ffree xor cmp out push cli out sbb loope mov jne movabs lock callq jne rex.WB movsb mov lcall sbb cmp add lret out outsl roll rcrb rcll add rex.RXB jle lret cmpsb xchg jb out adc sub icebp lret pop rex.RB and test (bad) in rex.WRXB adc gs rcll xor movabs sbb rex.X (bad) adc sarl imul stos or adc adc mov (bad) ror mov movabs loop xchg xchg (bad) div scas rex.RX rex.XB add pop sub sub sahf mov lods out shll pushfq push pushq loope and lahf movsl roll or lock test add ffreep (bad) push mov out adc add mov (bad) pushq movabs (bad) mov negb mov in fidivr (bad) (bad) insl rex.WXB add out adc sbb mov retq or shrl adc rorl mov xor or fcmovnbe jo lret out or xor callq rorl ss test (bad) insl (bad) sub repz sar (bad) leaveq callq fildll in movsb mov movabs rorb pop fwait hlt lahf (bad) int cld cltd nop int3 lret test es movabs pop fs test lock jb rex.WX (bad) mov and jns nop pop enterq rex.WR sbb shll cmp push and rcr pop stos mov jno,pn pop scas jnp iret (bad) xchg xchg outsl rex.WRXB and add enterq (bad) test movabs adc xor or mov pop (bad) or (bad) in jo xor repnz fnstcw movsb mov fwait repnz addb incb adc sbb or rex.W (bad) rex.WXB sub xchg movsb mov (bad) jp repnz xchg enterq test nop sbb insl mov (bad) mov in (bad) mov mov int int3 jp test jle ss mov rorl and mov (bad) movslq xor rex.WRB data16 xor xchg (bad) (bad) jl xchg jg movabs cmp or rcl mov jg int3 fwait xchg cmc insb mov test sbb jg (bad) jno pushfq and roll test (bad) jne xchg rex.WRXB rex.RX rcl sbb xlat pop std (bad) (bad) sahf (bad) rex.X test or and sbb add in rolw mov pop out mov xchg mov mov sahf sbb jno retq mov sbb retq (bad) sbb xlat sarb xor repz or fildl and push fstpl (bad) jae imul pushq loop rex.X popfq xchg scas jp sub and and nop sub rex.XB fucomp lahf fsubr int cmp sarl rex.WB add adc push lock out (bad) (bad) mov int sahf rex.WX sub fist add xchg imul stos cmpl xchg xor movabs enterq and jp lahf fwait repnz out (bad) mov sbb callq adc xlat (bad) rex.WRB enterq mov vandps (bad) (bad) cmp stc sub iret test imul mov sbbb mov jmp or fcmovne in (bad) cmp imul movabs icebp clc (bad) (bad) jge xor and mov (bad) mov fild imulb rex.WB mov cs push int out movabs sub sahf sbb pop xor mov sbb xchg fistpl add fsts xchg repnz lret add divl rorl or outsb bnd add rex.WR or (bad) in xor ror mov movsb xor rex.WRX imul (bad) int adc and add rex.WX xchg rex.XB rex.RB addr32 in cmp retq sarb lahf fadds rex gs cmp mov fmuls test and pop mov test xchg push movabs iret or repz leaveq rex.RB data16 outsl in icebp add mov sub (bad) (bad) (bad) sbb rex.XB sti or repz outsl mov pushfq push mov loope leaveq callq add pop in xchg lret xchg enterq je push sub leaveq pop in sarb (bad) fld lea xchg (bad) decl movabs mov fstl cmp cmp stc rolb sti rex xor mov and mov ds pushq mov mov push movsl sub or add sbb xor jle jrcxz (bad) in (bad) enterq rex.WRB pushfq mov fisttp enterq sub int pushq test adc lea icebp pop test cmp (bad) cmp mov or add std rex.WXB jmpq sahf outsb add (bad) rex.WB (bad) js mov int3 int rclb cmp pop pop fisub or cli out lret xchg or movslq mov divl xchg jns ja cli cmpsl fwait xor mov xor (bad) fxch stc mov and int or hlt cmp mov (bad) callq rex.WRB (bad) push out ffreep mov mov lret mov (bad) mov and stos xor and clc rex.B in dec xchg rex.WB add cli rex.X (bad) ja (bad) xor retq (bad) fwait mov jl or in in test (bad) and (bad) andl xchg jns movabs imulb out iret push stc mov out ss adc add (bad) jb rex.WB xchg imul xor mov or sbb jbe (bad) int sub mov rex.WX sub (bad) lret add xlat test in (bad) iret cmp js mov ss loope repz sbb (bad) adc or mov xchg rex.RB repnz xchg pushfq cmpsl rex.WRXB pushq adc rex.RB cmp rex.WR int icebp rex rex.RX mov insl mov (bad) mov and pop pop (bad) ficompl (bad) retq xor mov repnz rol (bad) in sbb repz cmpsl xchg xor out xor add loopne rex.RB repnz sub test imul cmp or xor rex.RB rex.WRB movsl ds sbb iret leaveq (bad) (bad) leaveq fwait out (bad) lods mov pushq test movslq rorb (bad) (bad) jrcxz add retq and sub jmpq (bad) in xor (bad) lods push xchg or lret repz callq mov shrl sbb mov mov loopne movsl cmpsl pushq jns lret adcl (bad) ss movsb add or punpckhwd add jo retq loope mov (bad) mov lea rcrl mov or adc jrcxz rorb jo repz lret pop cmp mov negl xor stc sbb mov mov pop jg scas fildll out (bad) mov rex.RXB mov cmpsb pop push leaveq mov (bad) jp hlt pushfq (bad) push movabs out or pop (bad) add (bad) push jae out movabs (bad) cmp jns test gs out add rex.WX sub push jp push (bad) cmp je mov pushq ror rorl retq loopne shr or cltd (bad) insb rex.R rex.WR sub mov fsubs fsts add rex.WRB rex.X xor orl incl pushfq lss add (bad) sbb xor (bad) je mov lahf cmc roll cmp scas or sbb (bad) (bad) or mov (bad) or rex orb pop xchg repz (bad) (bad) xchg rcl fwait repnz lea movabs cli pushfq leaveq mov ja or std and repz xchg (bad) imul sbb retq (bad) pinsrw repz int3 enterq mov mov rex.W (bad) out adc repz rex.WR stc push int3 out xchg jns and lahf (bad) rex.X xlat xchg xchg mov (bad) push mov add in pslld sub cmp mov mov out int xor pop jno xchg mov lods mov enterq leaveq xor cmp fbstp mov (bad) jge sbb test imul mov and mov movabs shrl and (bad) (bad) lret roll mov sbb jb xchg (bad) ds lea enterq rex.WB rex.B mov fiaddl xchg xor outsb shll movsb sub fnsave roll out jle test push xor scas leaveq ja ds fbld and cmp xor rcrl pop mov (bad) (bad) loopne (bad) xor mov adc mov jge movsl xor and sub outsl jrcxz shrq ja repz (bad) mov je add xchg xchg lret shlb cmpsb pushq ffreep sub or rcrl cqto mov retq jrcxz adcb iret sbb in ja (bad) and repz rclb jge rex.X cld ror rex movabs retq mov (bad) mov out movabs (bad) sub (bad) (bad) add adc (bad) rex.RXB lock push mov ror mov mov js jb (bad) sbb outsl rex rex.WRXB fxch rex.W cmpsb or sub pop cmp rex.WB rex.WRX sbb sub (bad) sarl (bad) (bad) ja rex.WR enterq stos movsl sbb sub or xchg or or fs xor pop out (bad) (bad) sub (bad) loope pop xchg (bad) or push (bad) cmc (bad) or sub sub jno lock pop in rex.WRX (bad) sub push movabs mov rex.R rex.WRX mov icebp rex.WR (bad) rclb (bad) xor sub stos cmpw mov mov xor push stc (bad) cmp cmp rex.WRXB rex.RX jl sarl push int3 and rex.XB add sub cmp mov mov data16 jb add pushq lods leaveq (bad) mov xchg sub rcr cmp mov (bad) callq jbe pop jo push in jge sbb xlat (bad) add jrcxz (bad) or int3 sub jmp push rex.RB fdiv rex.RB add loope or cmc rex.B adc nop sub xor xor jle jae clc (bad) cli rex adc movabs adc cmp pop imull rex.RXB insl rex rex.B lock fmull test rex.WXB lea (bad) mov mov sbb (bad) jo stos mov test add xchg sbb mov sub insb mov pop test rex.RXB fs xchg (bad) fisub (bad) hlt lahf data16 rex.WR movabs add (bad) pop clc loop rex cs add in out or retq lret and sbb add out and clc (bad) loop pop add cmpsl jge mov rex.R rorl movslq popfq out rex.B pop add mov (bad) divb sbb rcrl in or or int3 xchg mov cmc test sarl adc pop xor add rcr (bad) push mov ss in rorl imul add mov and (bad) xor nop (bad) cli fildl mov mov movslq jmp loope xchg (bad) outsl rol adc pop rex.RB movsl retq (bad) (bad) scas test cli cld rex.WX ja (bad) pushfq frstor cmp rex.XB (bad) (bad) cwtl (bad) int3 (bad) push (bad) jp pop xor mov rex.RB (bad) mov leaveq movabs in icebp test (bad) (bad) push int3 add jrcxz cld xor retq xcrypt-cfb cmpsl out xchg mov xchg (bad) (bad) pop xchg in mov sbb pop pop je (bad) mov push (bad) jb sub sbb stc mov sbb cmp incl mov add enterq (bad) scas mov add fisubr (bad) xlat adc stos and cld fisttpll (bad) cmp push (bad) movl fs xchg lret rex.R cmp fwait lods sarl rolb icebp cmp (bad) xrelease mov (bad) mov test icebp movabs push in rex rex.WR in add movabs jno lods sahf data16 rex.RXB iret sub pop xor cmpsb (bad) mov cltd jp (bad) mov rex.R js movabs jae std sbb int (bad) roll sbb (bad) or cwtl gs (bad) xchg insb pop or imul push mov int add (bad) lret sbb negl lods push outsb (bad) in mov retq (bad) (bad) add lock and retq add rex.B rex.XB fild xchg insb sarl push and rex.X out retq shrl jbe imul pop add repz jp rex.R pop lods jbe pop add addl callq (bad) rex.XB rorl movabs rex.WR (bad) outsl xchg sbb jns rex rclq (bad) sub (bad) clc (bad) roll mov mov andb shll pushq mov (bad) sti cmp lods adc rex.RB add je (bad) (bad) shrl sarl add xchg roll jge out enterq test fiadd mov jrcxz xor sub fildl rcrl jnp movabs stc movsb lret sub add pop cmp add test push (bad) shrl rex.WB rex.B (bad) jo imul gs popfq pop (bad) movabs imul add mov rex.WRX cltd push mov loopne rcll jae cli sbb cld rorl jg rcr in jnp insl (bad) shl mov cld incl jb xor xor (bad) xchg gs (bad) mov stos rex.B pop lret imul lock scas inc test cmpsb (bad) xchg xchg or sarl mov int jl clc lock and in in cld js mov enterq (bad) push loope fstps sbb or out sub je xor (bad) lret mov shl mov adc mov or xchg adc pop pushq xor pushfq movabs rex.W pop in cld imul add and insb jbe (bad) loop adc rclb sub rex.WRB (bad) cmp add in xchg int mov rex.WRX pushq pop mov test fsubrs (bad) outsl or push or mov cmp (bad) mov jno add fadd push movsl and push rex.WXB rex.X fildll adc test rex.WB rex.WB sub retq rex.WR mov add xchg cli rex.X lock add lods scas gs rex.WRB rex xor sbb lahf xchg retq sar movb (bad) (bad) jbe jmp add (bad) int3 mov fmull or (bad) fild adc or hlt test pop addr32 vucomisd mov rex.R (bad) int (bad) mov xor test rex.WRX pop vmwrite mov fistpll vcvttsd2si ss jl out rex.WRB jge or cmp out sub roll add or js cli lret imul int3 pop fmuls sub sub fwait and xchg out fild pop and lea enterq (bad) in rex.WR mov jmp xchg insl cs add jne clc cmp (bad) je and rex.WX push jo lret mov cs rex.W lahf jp callq adc jbe std (bad) sub imul sub hlt fwait and jle add int3 outsl js add jg rex.RB rex.RX fwait push lea xchg pop xor jl scas and rcrb add xchg scas jae test cwtl xchg cmpsb mov retq neg pop shll rorb (bad) fadds mov sub lock mov sbb (bad) shrl xor xor jge add sar jo (bad) jne add in (bad) scas push (bad) int enterq sbb lret (bad) imul mov push andl lock jne fwait imul (bad) js mov rcl push mov sarl insl addr32 and (bad) (bad) (bad) fnstcw adc jrcxz movabs stos xor xchg pop lock sub jp rex.B push icebp adc shlq jle cmovl pushq lods nop rex.RB rex.B fs stc jrcxz add std rex add icebp sub ds add mov mov xor fdivs and sahf push cmp mov (bad) mov lahf xchg mov callq (bad) and sarl jne adc test sub add and fadds pushq (bad) (bad) in (bad) and fstps xchg mov lret (bad) mov movsl mov pushq pop (bad) (bad) shrl imul std or movabs mov out (bad) shr sub cmp rex.RXB (bad) mov xor fs ja rex.WRB pop pop out mov (bad) mov (bad) or (bad) pop sbb (bad) loope mov xlat fistpl pop rcll push add shll retq sar cmpsl insb popq xchg (bad) rcrl rex.X cmp sbbl add (bad) divb (bad) xchg rex.B xor rcrl and xchg or pop hlt mov (bad) roll out mov shll negb jbe xor push movsl stc xchg adc (bad) or rex.XB adc scas jo lret clc (bad) (bad) and xchg kmovb test xchg mov mov rex.B subl add jo fisubl cmp jg lock sub repz icebp shlb sbb jbe mov movabs pop insb pop movb jae jns shrl add mov xor jg rcll roll enterq xor xchg ficompl sub scas or sarl repnz lahf rex.WXB callq jns movsb rex.WX push and (bad) mov jno lea mov xor mov stc cmpl mov (bad) repz sub jp stos jno,pn jrcxz mov jrcxz adc adc pop (bad) popfq rex.WRB sti pushfq in sbb movslq pop cmp outsl (bad) cmp and rex.X sub rex.XB mov rex.X rex.WB loope leaveq xchg andb movabs stc lret or mov loop push xor retq lret lret movslq xchg test in push (bad) cs xor out rcrb pop cmp rex.RXB (bad) or mov lahf orl lret cmp movabs rcrl (bad) hlt fisubr cltd out (bad) pushfq out clc xchg pop jmpq (bad) xchg adc (bad) xchg js xor pushq rex.WXB cmpsb sarb (bad) cmc movabs addr32 cltd and jmpq fdivs adc (bad) rex.WR xor loopne enterq callq cmp mov (bad) push fadd nop mov mov xor mov repnz in data16 jbe rcrl (bad) jmpq js or test rex.XB clc fadds loope lret jbe lret fdivr xor (bad) (bad) enterq (bad) cmp mov lret lods (bad) (bad) jl or (bad) ja rex.B mov mov movabs xchg stc rex.WRX rex.WRB test divb xor rex.WR lock shr cmp test rex.WR rex.R jno shlb cmp ds push out cmpsb sub or (bad) cmp movabs and rex.RXB subb iret movsl add add mov (bad) cwtl rex.R (bad) mov adc jae stc sub add add cwtl lret clc rex.WRXB sbb sub jne lahf sarb push push movsl adc (bad) lock jae or or in cli and or (bad) or pop rex.RB (bad) rex.WB rex.XB add fcomps (bad) pop or sbb lods mov retq xlat or gs lock out sbb xor fnstenv pop lock sbb rex.RX int3 pop rex.B cmc out xlat movsl idivb ja movabs (bad) add jg imul rex.WRXB hlt (bad) cmp lret sti je sbb or fstps out jmpq adc push iret fnsave roll pop int3 mov adc fiadd repnz stc insb (bad) add rex.RB or cltd (bad) (bad) (bad) jmp jg xchg movslq lret (bad) (bad) (bad) idiv push xor add fsubrs add and stc js movabs mov rex.WX or rex.WRB sbb xor rex.X movsb jmpq adc fsubrs cmp roll cli pushfq (bad) lock loopne xor (bad) jno mov repnz push test pop mov add movsb stos shll jrcxz add and rex.WX (bad) jne (bad) lret jae xchg rex.B sahf stc (bad) imul add rol cmpsb (bad) (bad) rex.WRB sub rcr sub or or mov rex.R ss (bad) jl xor xor shrl add add stos gs js (bad) (bad) rex.R callq lahf xchg sub callq mov xchg adc (bad) pushfq movabs jp add movb nop xchg rex.RXB (bad) in out fld (bad) adc hlt cld es rex.RB roll outsb ds push lea xlat js pushq push in test pop rex.WRB xchg xchg add pop pop loope hlt jne mov mov cmpsl testb ror (bad) (bad) stos int std (bad) lret add mov shl int3 ja (bad) mov subl jmp (bad) mov int3 cmp pop pushq push loope (bad) hlt std clc int3 (bad) jae adc neg push cmp cmc cltd xchg jno xchg es mov in mov xchg shll (bad) std enterq lret jo xor iret (bad) rex.X sub sub or lods (bad) movabs (bad) lea rex.RB rex.WRXB and shll mov scas xlat or mov cmp pop in lods (bad) mov loop movsb cwtl (bad) xchg js mov sub cmp xlat imull cmp std cmpsb pop insl xor jae std (bad) sarl test mov addr32 (bad) mov fmuls xchg stos movabs rol (bad) jl sub lea push leaveq jrcxz mov (bad) (bad) int (bad) sbb push retq (bad) (bad) mov mov mov movsb rex.X rex.WX retq repnz mov clc or movabs andl movabs (bad) scas cmpsl jb add stos or sbb movabs (bad) scas repz rex.R and in jb rex.R fadd rex.XB add loope retq and (bad) repnz cmp or add movabs cmp and out jrcxz sub repz or or xchg add data16 (bad) sbb (bad) xor movabs add add pop sahf notl loop sub (bad) jno clc pop mov (bad) insl or (bad) (bad) or cmpsb push rex.W mov sti (bad) rex.WR sbb xchg int3 icebp sbb pop xchg outsb pop jb xchg incl sarl rex.WRX in or pushq (bad) int sti gs mov movabs test (bad) imul pop (bad) rex.WRB xlat push roll rex.WB movslq repnz outsl rex or lahf sarl loop lods mov (bad) std ror push (bad) mov lods add rex.XB mov fstpt cmp rex.RB jb out add (bad) cmc adc push or jno sub sti mov xchg add or sbb stc (bad) jo mov (bad) sub (bad) cmc jnp pushfq in popfq jmp (bad) xor or mov pushfq (bad) cld rex.WRX jle adc lods rex.RXB jg (bad) ucomiss add int3 retq callq leaveq int3 sub ffreep lea testl int3 jl (bad) and rex.WB rex.B test mov or jl test or push callq or (bad) cmp nop scas roll gs sti xchg stos shr pushq (bad) rcll xor mov rcr mov ja mov pop cmp rcll outsb push cmp movb cmpl js pop add test shrl in rorl cmp outsl xor sbb and pop mov sub pop mov shrl mov rol sub push leaveq pop (bad) lret repnz lods xchg movabs scas (bad) mov (bad) mov flds js loopne shll jno cmpsb rex rorl sarl lock cmp lea int push jge mov rex.WB je fisubl cmp test mov stos sub jbe pop (bad) (bad) mov test retq and mov shl jmpq (bad) shll (bad) jmp (bad) fwait rorl in scas repnz (bad) add sub imul or rorl movabs std push incl jbe rcr setle cmp cs and stc iret fwait sbb sub jle jmp rex.W mov (bad) jae (bad) retq jp and notl push fnstenv popfq (bad) cmpb (bad) (bad) ja lea retq pushfq (bad) repnz jg or pop out lret sub sub pushq add rex.WXB lock (bad) jae div pop lods (bad) cwtl add xor pushfq xchg add int3 mov adc or sar sbb shll (bad) testb lret rex mov clc jg rex.B (bad) jnp pop rex.W xchg sti (bad) or add pop fidivl xchg shrl cmp (bad) add shrl cltd sbb insb movsb (bad) add rcr mov adc add add scas rclb (bad) sub xor xor or (bad) push movsb (bad) mov xor outsl test (bad) jo mov adcb xchg mov jmpq movabs fcmovb or add (bad) loope cwtl (bad) mov fcmovnb xchg sub add cmp (bad) pop push (bad) cmc sub rex.WB cmp sbb data16 sbb add pop mov lahf scas vshufps adc lock mov and jno jae loop stos or sbb mov (bad) mov jmp ds mov jae and test movslq (bad) repnz rex.WB rex.WRB stc movslq sbb (bad) repnz xchg jmp (bad) jno movl rex.WRX clc pop (bad) rex.WRXB fisttpll sub callq push cld negl adc and push scas outsl movslq add mov xchg (bad) lret insb (bad) icebp (bad) pushq mov xor mov (bad) (bad) movabs mov jo (bad) mov callq (bad) (bad) nop (bad) cmp std vcmpss and adc lock mov mov cltd xchg sub mov or enterq push mov (bad) jns movslq rex.RXB cs sub retq repnz pushq xor or xor gs cmp movabs sub nop push stos in and rex.RX pushfq rex.RB xchg enterq mov (bad) mov fadds jmpq bswap add jo in (bad) fxch sbb int3 mov mov adc out (bad) push lahf sub or sub xlat test xor rex.WRX cmp push lret jno xor push enterq (bad) or int3 movsl scas out sub jno mov (bad) popfq adc add test push jrcxz idiv scas jae (bad) cmp js rex.B and pushq int3 callq orl lahf retq or mov cmp rcll shll sahf fs rex.WX imul movsl movslq and rex.WB (bad) roll push jrcxz jl rcr test xor gs sub movabs in rex.R push movabs sbb jne retq cli and lock lahf sub (bad) and cmp popfq or or cmp xorl mov outsl callq insb movabs jno retq mov callq rex.WXB mov fnstenv xchg push movabs xchg movabs movabs test hlt roll je xor loope movsb (bad) cmp jns xchg cmp adc rcll rex.WRB loop add mov andl lret fwait push jno (bad) (bad) in (bad) add or (bad) fisttp outsb cmp and gs sarl loop (bad) jno xchg add xlat test push lret sub xor (bad) rcrl enterq outsb rex.WXB movabs out (bad) movsb xor adcl adc and or out leaveq xorl push je (bad) loope fsts mov jbe and rolb jle fs (bad) jb test (bad) stos lret movsl adc stos nop xchg rex.RB mov out roll mov in rex.RX (bad) (bad) jno insb xchg stc rorl xchg cwtl scas pop shrl rex.WRXB sbb push pop (bad) jno mov scas (bad) mov addl imul push or ja in (bad) rex.WRB push int pushq mov mov insb mov mov pop (bad) jp (bad) pop pop lea cltd test scas push ds retq mov jrcxz rex.R add rex.B mov (bad) pushfq (bad) in (bad) enterq mov (bad) mov callq xlat (bad) and mov addl (bad) icebp mov push jmp movabs sub sbb loopne jg mov icebp callq lret iret jmpq rex.WR gs (bad) jb (bad) pop fs rcrl (bad) xor and lret mov mov iret (bad) mov sahf or (bad) rex.WRX cmp sahf rex.WR loope lret lahf (bad) jno mov push pushq (bad) xlat cmp (bad) or rex.WXB fs in xchg (bad) test (bad) xchg (bad) data16 jg jo sbb (bad) scas test stos pop stc insb lods jns xlat rex.WXB sahf (bad) add (bad) and adc mov fmuls incl jl mov mov test fidivl (bad) sbb sub mov hlt (bad) mov mov movabs pop leaveq jp sbb (bad) movabs rclb sub rex.X (bad) cmc callq rex.RB (bad) outsb repnz rex.R lock (bad) lret sbb lret imul clc (bad) add cmp mov jmpq adc insb in (bad) (bad) mov sbb cmp xor rex.WRB lahf xor rex.WXB fwait ds loope fldcw stc (bad) mov cmpsb jne jne int3 mov xor mov lods int3 (bad) xchg xor jno mov imul (bad) adc retq out jmpq cmpsb pop js pop jrcxz cmp fnsave xchg and int add rex.R cmpsl je sarb jno push mov or push data16 lods xchg cmp (bad) (bad) rex.WR andb loopne mov and rex.RX and sbb leaveq cli sub out jbe sub rex.RXB xor shrl or rex.WRB cmpsb push callq movabs sub mov repz mov add repz out idiv xor in (bad) in in rex.W scas xchg xchg mov add out sbb es iret mov loope and and sar cmp shrl loop and pand (bad) sarl (bad) sbb stos mov (bad) lret (bad) or push lret sti repnz loope icebp or lea (bad) ja mov mull xor out mov (bad) jg cmpsl loop xchg (bad) (bad) mov xchg cmpsb adc (bad) mov popfq fdivs adc andl iret (bad) mov mov sbb and (bad) mov rex.B addr32 (bad) cld lret push lea (bad) rcll insl mov pop sbb leaveq jnp movl (bad) rol cmp js rex.R mov in mov jge mov jno cmp sub cmp push movsl sbb adc sar in mov jmp pushfq hlt mov add jp jns test adc leaveq in (bad) or (bad) shll adc shll adc lods (bad) (bad) sarl adc pop jl std test outsl rcll rex.WRX lea push mov pop sub es push (bad) test shrl xchg (bad) rex.WXB gs sar xlat sti imul rex.WRXB add sub xchg adc (bad) cld icebp jne mov pop ror (bad) cmp cwtl in decb (bad) (bad) and rcrb mov shr sub and (bad) push cltd mov (bad) mov rex.X repnz test rex.WRB mov fdecstp sar rex.WB in lahf test (bad) cs mov jge sub shrl and mov shll enterq (bad) setb (bad) mov adc out shll mov nop sub pop out ja fadd sarl push and sub data16 orb adc rex.RXB mov rorl adc rex.WRX movslq (bad) stc pop or mov (bad) rex.WXB ror push and rex.WRXB adc movabs sarl cmp (bad) int3 rex fimul sub (bad) ds fwait lret mov pushfq rex.WRXB (bad) (bad) mov jno fnstenv iret stc in nop movabs icebp rex.XB lret mov hlt rorl (bad) mov (bad) rex.XB jno mov movabs cmp add cmp pushfq sub (bad) movabs and rex.RB ds cmp sub (bad) callq rex.WXB adc pushfq insb scas mov (bad) iret test lret rex rex.RB shrl jp add pop jg jmpq rex.B (bad) clc pop shl in retq mov cmp (bad) rorl push mov (bad) (bad) outsb (bad) mov iret je rex.XB sarl cs push sbb xchg mov test pushq (bad) mov (bad) sub xor rorl jrcxz imul out test mov sub fcom xchg kxnorb xchg add jno shrl es rcll push movslq (bad) add pop movabs fs rex.WB and mov shrb notb mov add roll rex jb rex.WRXB mov shrl (bad) pop rcll test jp pop rol test idiv (bad) jge jp mov jmpq rex.WRX and (bad) (bad) addl pop retq xor cmp sti sbb repz insl (bad) iret in jle jrcxz sub cmp lret iret test adc imul adc cmp rex.RX xlat retq shl xchg icebp (bad) sbb mov xor loop iret push ss rex.RX (bad) and mov rex.B addr32 insl rex.WRB shrl pushfq mov rex.RB mov movaps jl in sti (bad) fimul cmp stos fcmovb rex.WRXB ja sbb pop pop mov test fldt jrcxz (bad) pop mov add sub xor pop or callq sti adc popfq sbb stos insb xchg xchg jg fcoms mov xor cmp jb cmc jbe rex.B (bad) (bad) fild sub mov pop rex.WRB rex.WRX loopne repz xchg test mov je int3 rex.WB insl fsubs add addb fcmovb adc outsl mov fs sbb hlt or cwtl xor rex.X jne movsb movabs rex.WRX or mov movsb retq lret (bad) movabs (bad) stos callq sbb sbb fildl mov add xchg sbb jmp lahf rex.WX lea xor rex.WB lret xor repz and jnp mov sbb movabs test rex.WB lret and loopne fcoml loop or lea (bad) data16 mov stc jmpq outsb jno js (bad) sub retq sbb retq icebp rex rex.WR loopne add rex.X outsb xor retq and add adc js out rex.B mov (bad) mov pop mov rex.RXB retq in nop jp jge test (bad) outsb (bad) addl lret repnz icebp movsl sbb test sub sbb pop pop rex.WR (bad) (bad) movabs rex.WRX loope icebp jrcxz rex.R sbb pop mov lret xor add rex.WB cmpsl orb callq in pushq jmp (bad) (bad) cmpsb mov add scas ja lea add test adc or (bad) retq clc mov (bad) movabs in xor std xor kunpckbw movabs (bad) (bad) fdivrs lods fwait callq fadd (bad) mov mov fucom xor xchg repz cmpsl (bad) loopne cld rex.WR rex.WB jmpq (bad) cmpsb adc movabs je sub rorl xchg (bad) xor movabs pop pop (bad) xchg enterq movabs outsb jnp rex (bad) mov iret cmpsl sbb mov cltd enterq adc xlat sub (bad) repnz add lea rex.WXB loop (bad) outsl roll (bad) cs movsb imul push jns jmp (bad) testb mov lret mov addl rex.B xor jmpq shll lea mov (bad) (bad) adc xchg loope mov shrl rex.WR xor loop mov movabs fistpll out rex.WR (bad) outsl (bad) push adc movabs lock (bad) jge xor stc loope lock adc rex.RB je rex.XB popfq rex.WRB add (bad) repnz mov or push jp xor pop fisub cs (bad) enterq add (bad) fsubl (bad) rex.WRB pop (bad) pushq ror sbb rex.RB mov sub outsl mov jo movsb repz movabs retq mov jno sbb imul xchg fidiv cltd movslq mov jge psadbw outsb (bad) (bad) repz addb xor or (bad) xor movsl mov movsb scas mov jmp in fwait push xor jbe xlat pop ss (bad) (bad) (bad) callq adc js adcl cmpsl xchg pop mov rex.B movabs and pop jrcxz shlb pop (bad) sbbl (bad) repz push int3 add fstpt add out rex.WRXB popfq rex rex.WB jmp mov xor gs cli in movabs out xchg repz pop or ss adc movslq cmp stc rex.XB and test fs or cltd rex.WB (bad) in (bad) int3 out or push repnz pushq cmp xor rex.WRB cmpsb jge enterq clc jle pop loop mov rex.WXB cmp jmp mov xchg add (bad) sbb rcr pushq fdivrl mov retq jo xchg imul rex.WRB jb leaveq rex.XB and cs mov out mov jl adc loope xchg retq rex.B retq (bad) pop adc imul sub je and xchg or lret test int faddp mov std lret scas jg es xor or sahf out (bad) xor test out (bad) sub pop roll pop sahf or (bad) xchg rex.WRX xchg add mov popfq pop (bad) mov icebp cmp pushq (bad) mov (bad) (bad) mov sahf pushq rex.WX jo (bad) rcr test mov cmpsl (bad) (bad) rex.RB divq xor jo sbb add (bad) mov lock (bad) (bad) cmp (bad) es push cli sar std retq (bad) fldl fs lock xor out imul icebp (bad) gs test xor movabs jg rex.RXB xchg fdiv (bad) mov loope,pt scas mov movslq xchg rex.WX mov (bad) (bad) popfq rol mov mov sarl fistl lock jnp push push pop add ja mov rex.B jnp retq (bad) sbb and mov sbb (bad) cmpsl mov rorl gs rorl cmpsl (bad) (bad) rex.RX sub movabs movabs adc (bad) jo xchg icebp mov xchg fwait movsl jne movsb movb loope add insl out test add imul (bad) repz fsubrl je and mov cld fildll jbe pushq movsl push insl roll (bad) (bad) mov rex.W mov xchg xor add mov sarl test sarl cmp and mov jno (bad) lahf jno test icebp and es iret (bad) (bad) push std scas roll (bad) sarl lea mov in cmp rorl lods fnstenv (bad) lret lret (bad) mov (bad) ffree fdivs pop (bad) push int3 lock movabs adcl jnp (bad) (bad) rex.WRXB fcmovb (bad) iret jmpq rorb movsl adc adc push pop movabs xchg (bad) movslq repnz mov cltd mov mov sbb movabs test je retq (bad) fcmovnb bnd jae lods and shlb movsl decb pop pushfq out fs add popfq (bad) fdivs cmc lret lcall mov stos (bad) fiaddl (bad) data16 rex repnz lock (bad) cltd repz lret outsl data16 pushq add add and push add mov (bad) mov rex.XB imul cmp icebp popfq mov movb lods (bad) xorb (bad) rorl rex rol push stos in mov and (bad) mull hlt (bad) rcrl add mov or sti (bad) out clc mov movabs sbb and movabs xchg test push mov adc sbb (bad) add rex.X push (bad) pop lods retq hlt push mov fmuls mov cltd fcomp cli (bad) push cmp callq adc punpckhbw int3 imul sbb jmpq (bad) mov test rex.RX rex.RX sbbl (bad) add stos fimull cmpsb (bad) in movabs mov sub mov rcr stos add mov (bad) retq movslq test (bad) cmp rex.WRX adc mov pop lret (bad) (bad) add hlt jno std jnp (bad) mov (bad) insb movabs add xor cmp sub jmpq shrl push push mov pop fiaddl xchg lret retq repz cltd clc (bad) lahf jns lods int test stos mov (bad) ss jle (bad) rorl rorb andl (bad) (bad) add jp mov add xor iret repz (bad) icebp roll lods push or rorl pushfq shl push gs (bad) callq push out fs or jmp rex.RB rex.B adc and mov mov sub (bad) adc (bad) pushfq fst out (bad) ror jrcxz enterq shrl sbb (bad) rex.R rex.X nop in mov (bad) sbb fldenv lret xchg add insb sar xchg pushfq insb jne (bad) sahf (bad) (bad) and rex.WX loopne gs icebp or sbb rex.WRXB (bad) push out or cmp pop (bad) mov rcrl gs movabs (bad) shll imul test and lea retq and (bad) movabs retq flds sarl lea movslq add add rex.W rex.WXB mov stc (bad) xchg roll mov push jae lea movabs retq adc repnz shrl add rex.WRX rex.X lret scas adc (bad) fs outsl jmpq mov rol fldl mov jge fidiv mov (bad) jno stos iret and ror (bad) (bad) (bad) xor cmp sub ror push xor lea jmp movabs xchg cs fwait scas movabs fidivrl xlat xchg jns icebp rex.WRX movslq cmp scas sbb and nop jae mov rex.WRXB (bad) xchg in roll adc push xorl sub sub add dec lret movabs sub (bad) cmpb lods (bad) fwait rclb jge add int js loop std sub mov stos push loopne lret rex.WRXB ss movabs faddl sbb (bad) fisubl loop fs cli fld add lods mov cmpsl mov (bad) jae (bad) push push movabs mov jae xchg pop xchg sbb fimul rcr rex.RB in jg icebp xchg cmp lret fs (bad) sahf mov rex.R rex.WRX fld (bad) xor enterq enterq mov (bad) push jmp xor adc or js mov (bad) shll add callw subl xor loope pop ja in add jg lret or out rex.WR mov rex.R out rex.WRX and pop test ja loopne fldt (bad) jbe cmc jo xlat sbb mov xor pop push rex.RB jb (bad) fldenv stos pop (bad) shrl (bad) rclb rorq cmpsb add cmc std pop mull adc (bad) test cmp mov shll repz add cmp or xorb sub shrl mov (bad) jrcxz (bad) cld rex.RXB rex.WRB sarl in (bad) cmpsl and xor jns sbbl movabs cmp lods (bad) movabs rcll xchg shrb fistl rex.RX sub mov (bad) stos lods loop movabs in (bad) cmp adc and setp (bad) ss test mull sti push pop rex.W adc loope xor xchg lods rex.RXB xchg or movabs test mov jmpq scas mov lods sbb fnstenv push lret (bad) jmp adc cmc pop mov jns imul (bad) pushq sbb in add push rex.WRB or push or sbb int rcl outsl (bad) mov mov fidivrl (bad) (bad) push out callq jrcxz rorl mov in jnp (bad) mov xor lahf mov rcl (bad) push test out enterq cmp int adc sbb (bad) (bad) (bad) (bad) or rex.X retq int3 rex.RX xor rex jle stos xchg test data16 xor lahf hlt loopne cmpsl or stc (bad) xchg cmpsb xchg sbb fdivp movsl repz insb es or rex.XB lods mov xchg retq out fldl rorl (bad) cwtl shrl outsb rolb cwtl add imul and adc add (bad) adc mov (bad) sbb rex.R xchg add (bad) mov push (bad) mov (bad) (bad) fmull roll xlat mov add (bad) xchg (bad) xchg stc int xor mov pop rex.X push rcrl cs cmp rex.WB cmp cmp lods mov popfq rex.B (bad) out add pop imul xlat xchg callq ja rex.WX in jno pop (bad) rorb mov xor and cmpsb std mov repnz mov xor mov mov jl jns popfq (bad) jg (bad) out mov cltd (bad) pushq rex.W gs imul rex.WX add sahf jrcxz shr (bad) pop push lock stc je sbb test pushfq mov flds hlt mov (bad) sarl (bad) fcmovnb mov fwait lret push cmpl roll es pushfq (bad) rex.B lods int3 mov out loope movabs xchg clc rex.R enterq in add in mov pop jg rex.R sub xor scas movsb add lock add cmpsl rex.WR jne mov adc movabs movabs (bad) pop sahf cltd icebp sub (bad) push pop xchg sbb or hlt repnz mov (bad) lock outsb adc int (bad) xchg (bad) sub movabs rex.WRB rex.RB rex and cli (bad) sbbl (bad) pop xor icebp lret add js add sub sbb and add data16 incb faddl lods mov sub (bad) (bad) adc rex.XB retq add push adc jp repz (bad) jl cld clc imul in fisttp mov lock rex.XB (bad) retq icebp test pushq repz cs (bad) mov loope (bad) jbe retq cmpsl add enterq mov (bad) in add or cmp adc iret (bad) rep jns rex.WB mov xlat (bad) int3 movslq lret jrcxz cmp fildl enterq out (bad) xchg test cmp fwait rex.R out movb lret es pop (bad) outsb movabs mov (bad) cmp add or push (bad) xchg rorl cmp shrl (bad) ja test sarl mov rex.B xchg pop pop rcrl push rex.RXB subl sbb jg iret rolb loope orl jge lret mov push and rex shll cmp cltd adcb jmpq rex.RB shl cli cwtl (bad) fdivrs pop mov or sbb (bad) cli (bad) test adc movsl rorl (bad) mov repz shll adc sarl sahf (bad) fiaddl movabs lret xchg rex.RX adc (bad) mov (bad) (bad) mov mov sub or (bad) cmp fidivr movabs mov out mov xor jle push rol cmp cwtl icebp rex.RX mov out mov iret enterq movsl hlt rex.B sbb outsl clc (bad) sub mov (bad) or mov sar mov mov out cld (bad) pushq adc mov lret pop stc sbb rorl jne push movabs add std retq test mov and (bad) cmpl rolb or (bad) xchg rorl fcomps cmpsl rex.X sti jnp and ds (bad) movabs or add mov (bad) and imul rex repz imul mov out movabs or (bad) pop cmp sub pushq cmp (bad) (bad) mov stc add outsl test cltd xchg push in movsb test retq movslq add js and cld push (bad) push callq push rex.B or add rex.RB or (bad) callq retq cmc rex.B jp (bad) (bad) xor add rex.RB out adc xlat (bad) push jp faddl in icebp rex.W xor xor xchg rex.RX jo and xor sbb (bad) and sub (bad) outsl int xorl sahf jrcxz cld (bad) and out (bad) xchg pop std mull or (bad) mov divl and sbb add clc movabs jo loop jnp (bad) mov rex.RXB cwtd lret or cmp mov sub movabs push out test out rex.RXB rex.XB rex.WB cmp test js,pn pop rex.R push rolb insb (bad) (bad) sbb (bad) (bad) push rex.WRX add in cmp adc (bad) rex.WRB (bad) lret (bad) nop rex.RX rex.WB rex.XB and add xor in jne xchg or add cs stos (bad) lock xor clc clc add repz jrcxz jo jno (bad) rex.WRXB push and adc lock fucomp add xlat mov xchg sbb jg bnd xlat ss push adc clc cmp leaveq outsb (bad) hlt leaveq out out int cmp push mov sbb add mov add mov pop add jrcxz fs add add xor xor leaveq (bad) sbb sbb add retq outsl mov (bad) xchg js roll (bad) pop scas fidivrl (bad) callq rex.WRXB js xchg (bad) (bad) push lock mov jae (bad) and fcoml cmp (bad) mov bnd sbb push es jmpq in rex.W int (bad) xchg or clc and out insb sbb retq (bad) xchg xor iret mov ffree jge (bad) rex.WB cmp pop sbb lock test lret cmpl ds ficompl loopne (bad) shl fwait mov pushq push mov (bad) nop push out loopne pop xor shll (bad) and out fucomip movabs movabs js in lock pop mov push fnstsw mov je jmpq f2xm1 sbb xor test int3 xchg cld add mov int adc adc es sub imul add movabs and cmpsl sbb outsb jb iret out lahf retq (bad) mull rex.RXB icebp int3 xor adcl (bad) mov pushq mov (bad) stc pushfq mov xor xchg insb or cmp rex.XB ds cmp (bad) mov nop xchg mov ss adc js popfq sti mov and rex.WRX outsl addl rex.WX lock (bad) fucomi ror jbe rex.WRX xor rex.X push loope lret roll lock cmpsl cmpsb sti or and xchg or add sbb (bad) mov out xchg rcrl rex.WRB xor loope pop and mov imul rorw cmp cli sub std (bad) ds sbb lret lahf jnp shrl ss (bad) xor repz and rex.WXB int3 inc push rcll gs push or rex.X stos (bad) sub mov pop imul cmpsl (bad) (bad) jg int3 cltd sub (bad) sub (bad) decl and (bad) in int3 sti pushq imul sub and push jl xor jns,pn (bad) imul xor xchg mov lods ffree and outsl es mov (bad) andb retq push push and or movsb xadd push (bad) sub or popfq rex.W push (bad) add cltd lods xchg (bad) mov roll or sysret jmpq sbb cmp sarl in data16 push jl (bad) mov lret test (bad) out xchg (bad) mov and mov sarl outsl and jno add add in shrl ss sbb loopne and adc not shrl movabs mov jno or rorl mov sbb rex.RX callq rex.WRXB (bad) hlt stos (bad) or xchg (bad) rex.W mov in movabs mov std loop jno addb nop lods sarl xchg or fstps fwait mov rex rex.WR xchg mov jg imul repz (bad) fld (bad) nop mov test int adc loop imul cmp xor ja movslq pop and cmp mov lret (bad) xchg cmp add fldenv enterq push mov shrl insl icebp (bad) ja adc xlat (bad) rol fiadd xor subl mov push shll mov sarl lods enterq cmpsl sete test test mov in rex.R or mov xchg mov js (bad) fbld pop outsb push lret add jae incl pop insl mov shrl (bad) pop ror cltd mov cmc rex.WR rex.WXB loopne jns fstpt (bad) cli push xchg jo add (bad) sarl or (bad) push in shll shrl cmpsb (bad) (bad) leaveq (bad) (bad) mov rex.B fsubr repnz rex.RB lret sub lock mov rol repnz sub xchg (bad) iret rex.RX and xor (bad) sbb (bad) mov mov test xchg (bad) rcll and (bad) rcrl je pushq (bad) imull mov mov retq sahf (bad) movslq xchg sarb mov adcl in (bad) stos imul add rcrb rcl (bad) (bad) jnp gs std mov jge lret js pop xor jbe cltd mov scas out (bad) test xor cs scas int3 (bad) rex.WRX fildll mov xchg pop rex.B rex.XB stos add shrl (bad) icebp lock pop jno sub (bad) shll fnsave in (bad) shlb ror pushfq ds lahf (bad) xor nop xchg and loopne xlat lret ja mov (bad) fmull repz rol push test xor lret (bad) jmp (bad) mov rex.WRXB (bad) loop jmpq push xchg add jb outsl rex.B rex.RB rex.RX popfq xor nop rex.B lea (bad) in xchg iret and sub (bad) roll and (bad) andl callq icebp add in cld iret fisubr adc repnz repnz pushfq or jno popfq in sarl movsb xchg (bad) and nop pushq push and add lret scas lret (bad) test xchg push pop int3 setno rol cwtl lods jp xchg or rcl sbb adc (bad) ss pop xchg mov movabs (bad) rex.R lret rex.WR mov stc push sti (bad) shll out mov notl lea (bad) cli insb or rex.B (bad) jb (bad) jge lret rex.B sbb xlat xor lods repz movsl (bad) shl pushq rex.WB jg mov mov (bad) add mov xchg jg xor loope (bad) movabs stos fisttp (bad) cld xchg movsb int repnz mov lock (bad) mov data16 mov repz jne (bad) cltd rol (bad) (bad) rex.R pushq jl fldcw lock and scas addr32 or add rex.RX and (bad) (bad) xor xor pop (bad) adc xchg mov push (bad) push or test outsb and (bad) mov xchg rcr (bad) jl (bad) (bad) jmpq je divb imul mov mov test shll jmpq xchg mov or or and fnstsw pop outsb (bad) repnz rex.RB data16 pop jno lock test xchg insl fldenv pop shl lret mov and mov (bad) rex.X rex.WRB vmovd in cmc (bad) (bad) sbb test scas sar cwtl xchg mov shll add roll movabs pop retq jl lods fiaddl jnp xlat (bad) notl fildl mov (bad) mov or pop sub test jge adc sbb int3 (bad) or jp rex.WXB cli clc xor hlt rex.WRXB cmp test sub mov rcll out jg rol mov adc jae shrl (bad) (bad) xchg adc test fldenv or rcr lret sarb mov addr32 loopne push fld1 cli rex.R push cmp adc and mov movabs outsb pop (bad) jo jmpq mov lret fmull cmpl movsl jne and sarl jmpq rex.X mov fwait rol pop or or cmp (bad) add pop xor (bad) movabs (bad) lret (bad) popfq insl and (bad) or (bad) and mull adc (bad) rex.WXB ja loop rex.WB (bad) lea data16 sub cld repnz rex.R sbb jns (bad) xor (bad) and shrl jne (bad) (bad) push cmp mov add movslq push fadds rorl mov xchg ljmp hlt retq rex.RB and add xlat xchg (bad) jns lea data16 mov xchg sbb pop shrl add clc sub in rcrl rex.WXB xchg add (bad) insb out xchg mov cmp jrcxz lock add rorb retq xlat push xor (bad) and imul out cmpsb (bad) xadd jno (bad) in (bad) stc mov adc jnp in rcll xor fmuls cltd sbbl add rorb (bad) std test (bad) xorl (bad) mov sar adc mov lret push push hlt int3 rex.B push (bad) (bad) or mov rcll ja retq adc xor (bad) jle fistpl (bad) sbbb mov cmpl movabs icebp movsl mov adc cmp xchg (bad) iret scas addl (bad) in pop push add lret sub fdivrp callq (bad) insl add int3 pop rex.X rex.WR nop push loope lock sub jl mov movabs ds (bad) mov add rclb (bad) add scas pop and pop rex.WRB mov push lods callq mov and imul mov pop xor jnp (bad) out lret (bad) lret test cwtl sti int3 add rol jns (bad) rex rcrl fidivr stos movabs (bad) mov pop (bad) rcr mov fisubrl int3 (bad) push fcoml imul mov shlb adc setns jo cmp xchg jg rcll mov shll loop (bad) sbb shrl cwtl adc movsl rex.RB sub (bad) rol out lahf sub mov cmpsb lock rcll jno (bad) repnz add and (bad) pushq incb or or loop adc or stos enterq add rcr mov jbe lea imul pop shr fs add rorl fidivl movabs xchg (bad) mov (bad) xchg lods mov ffreep xor popfq xchg retq push xchg add shll (bad) sub (bad) int3 sbb iret je lods sti and and mov jb retq lods xor rex.RB in (bad) jmp mov adc cmp and mov and xchg scas test fbstp jne retq out push outsl sbb rcl imul mov push incb and (bad) ds jge xchg movabs test cmp mov sti xchg mov mov xor (bad) lcall loope in fdivrl (bad) movabs std push pop movsl push sbb out movabs xchg sti rcll pop nop retq pop cmp (bad) sbb xor add shr jrcxz insb sbb xor mov stos push xor and mov rex.WRXB out sub lods int3 mov lret enterq adc push xor sbb (bad) rex.RXB rex.B ds in pop enterq jg movabs lahf test std pop adc roll fwait cwtl (bad) int3 jl add sub add (bad) (bad) (bad) insb push add mov loop lods (bad) jb xor jo test cmp xchg rex.WR rex.XB sub lret leaveq cmpsl jp or and rcrl (bad) int3 (bad) fild (bad) pushq push (bad) out ficomp (bad) hlt mov and (bad) rex.WRX addb xchg cmp rolb lods sub retq int (bad) scas cwtl std std movsl mov push mov jnp movabs mov jge iret rex.R add sub rex.RB (bad) cli mov xor stc sbb mov and out or jne movnti (bad) fucomp and mov rex.R test fucom xlat movsb fisttpl repnz jne and lock mov (bad) rex.WRX jmp rex.WR and cmpsl (bad) mov retq int jmpq rex.WB xchg jle int3 pushq (bad) xchg insl (bad) sub (bad) jrcxz (bad) xchg in (bad) in test int3 push (bad) add pop jne callq insl (bad) stc icebp iret mov xor cmp add popfq insb scas repz (bad) test mov (bad) add mov rex.R xchg test sbb or std cmc add rex.XB lock adc mov xchg test (bad) (bad) xor addr32 (bad) clc pop mov push rex.X xchg lock pushq rcl and pushq out xchg jmp and sbb (bad) (bad) rex.WRX mov (bad) pminsw imul (bad) pushq movabs jle rol fdivs out (bad) and mov movabs (bad) mov rorl outsl shr rex.WX rex.WB enterq movabs rex.WR pop rol rclb ror sbb lret cmc (bad) scas and jo pop idiv rex.XB rex.WRB leaveq jp insl push loop pop test xor outsb jl jp xlat pop lea mov (bad) (bad) (bad) rorl insb mov jmpq xchg xchg mov (bad) imul cmpsl test addr32 xchg retq rcll sub lret jge sar callq cmpsb (bad) (bad) and adc and mov popfq and or adc xor loope stc xchg rex.R repnz xchg pop lret (bad) mov (bad) lods (bad) lahf cmp shl jo loope (bad) shll (bad) idivb fbstp data16 mov rex.R jle lock jl sbb sahf scas lea jmp adc or cmp notl jne rex.WRB jno bnd mov or adc mov fistp (bad) adc and xchg xor (bad) (bad) and rex.RB (bad) xchg jno ror rex.B (bad) mov mov sbb mov push cmpsl pushq push lret rex.WRB pop jmp test mov pushq clc sub imul push in addb mov in mov fildll sbb mov (bad) insl (bad) push cmpsb xorl enterq je xlat pop rex.WR fwait mov iret incl in loope sbb adc (bad) rex.WRB rex.WX mov add frstor fimull push imul jp outsb test jo rex.W sbb movslq pop xlat (bad) mov vcmpps (bad) stos adc (bad) bnd (bad) enterq movabs leaveq pushq in div adc test push outsl mov test add je enterq (bad) sbb icebp (bad) cmc sub push and icebp mov (bad) enterq rex.WB xchg push or rex.WX mov insl cmp stc or cld adc or movsb jo (bad) lcall (bad) test in outsb jp add and mov sub sub (bad) (bad) enterq mov roll pop sahf testl divl and lock push (bad) mov jae movabs push or or xchg jle ds adc cmp scas sub rex.RB jp cltd idivl and (bad) pop imul xor cmp movslq movslq rex.WXB cmp or jnp rol insb pop add lock xchg test roll repnz pop or xchg mov addr32 sub lret retq or movabs cmpl rex.RXB neg imul repnz rex.RXB mov vpsubsw mov xchg movabs jb mov sbbl jnp decb sbb (bad) pop test rex.WRB or jmp xor pop test rcrl mov (bad) (bad) mov sbb xchg cld pop lods rex.WR xor ror movabs iret (bad) loope stos mov cmp mov mov pushq mov insl rex.WXB scas (bad) jp retq lret rex orb jrcxz cli xor push jl mov pop leaveq fidivl retq push movabs retq (bad) mov mov or iret xor retq jb addr32 jmp (bad) (bad) in cld mull in mov test (bad) cmpsl rex.WB insl ja mov sbb rex.WX mov (bad) cmp or fs cmp xor hlt stos adc outsl sbb add xchg (bad) lods in mov (bad) int3 xchg jrcxz xor jne (bad) xlat mov rclb (bad) jl mov shrl jle adc shl notl rorl jnp fwait (bad) mov rex.WRB loopne xchg cli outsl stos rcrq retq rex.WRX (bad) not rcll pop xchg sub mov adc retq add mov sbb mov shll add pushq xchg enterq mov lods adc mov test rcr and push xor (bad) xor out mov jle and (bad) xchg add fldt mov cwtl rex.W cmp mov cmp cld rcll xchg mov push rex.B ds or (bad) retq pop loop nop jmpq ss (bad) and jb fild rcrl in movsb je mov mov mov mov cmpsb add rex.R stc xchg mov roll adc (bad) jno sbb loope outsl mov movsl rcrl stos imull mov iret mov jo test and xor mov add jae mov lret retq int imul icebp pushfq jmp (bad) (bad) mov iret cmpsl je shlb repnz or rex.WRB lock (bad) cld (bad) (bad) std jb jmpq icebp f2xm1 xchg mov add shll sbb (bad) push iret stc pop xor movabs (bad) rex.WRX out rex.WRB lock sbb imul sub imul xchg cmp fiaddl mov mov (bad) es jp (bad) clc stos (bad) idivl insl and jrcxz lret rex.B outsb push lret xchg lret adc rex.WRB jns mov push movabs push loopne (bad) jno cmpsl mov clc mull ds shlb mov mov push (bad) pop pop rex.RB jnp enterq mov adc cli add rex.WX (bad) or icebp jbe add sbb int3 rex.X rex.WRB rolb lods (bad) xlat enterq loope lods adc and mov movabs rcrl cwtl pop loop rex.WRB in rex.WX fmulp sarl push mov scas push rex.RX xchg rorl adc mov (bad) xchg test cmpsb jbe add shr repz imul sbb jo push and xchg repnz mov sbb pop stc xchg repnz (bad) lret in rex.RXB sub cmp jp int3 movabs ja iret add xor jb pop and push loope xchg (bad) mov sti add hlt pop retq fadds rex.WXB rex.RX rex.RXB in xchg jl shrl cwtl std fisttpl shll adc fsubr pop (bad) out or (bad) and test add or jmpq cmp xchg xchg pop mov stc jle mov rex.B mov add sub pushfq cwtl rex.RX jne pop xchg test xchg cmp push sub out sahf (bad) adc test xchg add add or repz movsb retq out mov mov sahf ds (bad) pushfq movabs in mov adc (bad) stc xchg add mov jne (bad) sahf adc rex.B and jle mov adc (bad) popfq cld cltd push sbb or xchg popfq (bad) mov xchg movsb rolb int rex push push sub add adcb mov xchg jmp rex.WRX lret out loope jg fsubrl or (bad) sarl (bad) shll or sub rex.B insb and roll jns add (bad) xchg mov jnp outsl rex.WR rex.X push movb and cs push jle (bad) loop scas mov nop or xchg (bad) hlt rex.W (bad) push stc pop ss cwtl cmp and mov out (bad) jne movabs retq (bad) out mov add rcrl rex.W (bad) (bad) xchg cmp sbb xchg movsl xchg decb (bad) xchg push stos repz retq gs sub lods xchg and sub ds fs push (bad) push mov rex.XB adc xor pop xor scas (bad) push std loope ss xchg pop (bad) (bad) out sahf sub decb push mov jmpq jnp shr (bad) fldcw cmp sub data16 cmp jl or cltd push test push pop jg repz (bad) test scas in jnp ja incb (bad) add rex.WXB rex.WX enterq fimul ror es sbb lahf ja jae cwtl test addl sub adc (bad) rcrl movslq int repnz jne cli and roll insl rex.WRB enterq pop jmp lret out movabs ror lock rex cli push pop lret sub gs (bad) push push mov (bad) movabs enterq (bad) mov movabs push retq gs (bad) sub and jo imulb cld fist sarl add leaveq loopne (bad) jo icebp callq cmp ror movabs icebp loope mov pop lret adc cmp xorl (bad) sar cli push mov and mov rex.RX rex.X jae push out je fidiv notl push (bad) rex.WRX popfq add mov xorb or rex.WRX clc xchg fcmovnbe movabs enterq sbb (bad) icebp pushq add fldl2e mov imul cmp sbb (bad) rex.WXB or (bad) ds sub rex.XB cmp (bad) rex.WXB or fimull cmpsl push (bad) iret sub fcompl xor cmp sub mov xchg clc shlb or jns rex.WB cltd scas shr (bad) retq cld add mov (bad) movabs hlt add fldenv fs adc movb and pop shrl jp sarl outsl (bad) out adc (bad) cmp pushq sbb lods (bad) push fbld xor movslq push decl adc sahf shl (bad) (bad) and mov (bad) sbb rcll adc lret imul xor fcmovb repnz out pop xor rex.W fiaddl cld outsl rex.RX movabs and test ds js sar movsl (bad) out mov shrb adcl push jp mov adc jne cmp sbb or jae,pt xchg pushq test mov cwtl mov jmp rcll cmp loopne fs xor jge xchg shrl cwtl (bad) lret lret mov xchg (bad) xchg cmpsl (bad) insb (bad) pushq sarl add (bad) icebp mov mov ficomp int pop (bad) stos pop or (bad) cmpsl adc loop sbb rcl adc push out (bad) cmp xchg rex.WRXB loop lods std rex.B gs in in cmp andl (bad) rcrl js (bad) xor callq fdivl (bad) cmp xchg jmpq lret pop (bad) (bad) (bad) pop lods (bad) adc cmc or shrb je in (bad) fisttp xor jno (bad) in (bad) fdivs roll (bad) lods rex.RX sbb push lods adcl (bad) dec (bad) in iret and add (bad) and (bad) repz test adc fs nop (bad) jmpq orb (bad) (bad) hlt add retq stos mov pop sbb sbbl xor rex.WRX insb (bad) icebp es test stc mov or enterq outsl test cmp lret stc rex cld (bad) rcll jo xchg push fstpl rol pushq out movabs pop in sahf (bad) mov std mov repz (bad) push lahf rex.B mov (bad) push (bad) rex.WXB test movabs or fdivrl xchg mov rex.RXB (bad) (bad) fildl sar or (bad) cmpsl es adc cmpsb (bad) lahf je rorl in lahf add and hlt mov sahf loop cmp push rcrl xor shll mov adc rex.WB (bad) (bad) jno pop mov shll cmp push sti push shrl fiadd rex.B jae movsb and ss scas fmulp (bad) (bad) cmc lahf and (bad) (bad) mov loopne cwtl jl (bad) xor stos lret data16 (bad) mov std int3 rcrl decb fisttpll rex.B pushfq fwait movb cmp (bad) movsl test rcll sub pop mov stc pop push jrcxz pushq scas mov (bad) adc mov stos and shrl and and (bad) mov sub and (bad) (bad) std pop lret idivb (bad) jl std stc mov movsb mov movsl lret insl cmp rol imul jle rex.XB repnz (bad) cmp (bad) stc cld mov retq movabs jb imul (bad) adc adc test data16 push stos rorl mov std rex.WB mov (bad) cmp pop sar (bad) cmpsl mov ficom cwtl in pop imul int3 adc rex.RX add callq cwtl xorb pushq shrd or jle xor and rex.XB rex.R fcmovnu pushq mov rex.XB repnz test or add enterq movslq (bad) push adc out xorl sbb jo and push jg out rorb rex.WXB xorl repz shrb out sbb (bad) stc movabs (bad) mov movabs xor (bad) ficomp mov stc shll cmp jo (bad) rcrl (bad) (bad) (bad) xchg jge mov je inc (bad) sbb pop adc cltd and add sahf jnp mov cmp push rol (bad) xchg or rex.B imul sub xchg out adc (bad) icebp mov add xchg imul (bad) div (bad) cld in movabs mov movabs shll jrcxz (bad) notl mov xor xchg int3 retq add movslq sub mov (bad) hlt jmpw rex.RXB shrl jmpq mul (bad) mov (bad) lret adc xor add (bad) fldl mov adc and (bad) stc (bad) in (bad) jnp retq (bad) movsb cmpsb rorl (bad) xor (bad) in jle (bad) (bad) insb (bad) mov adc rex.RX or js rex.WX xor adcl sar shr push icebp sbbl jmpq pop ja iret (bad) (bad) fdivrl jrcxz push insb sar push (bad) fwait cmpsb sbb pop and movabs test rex.B fwait cmp shrl (bad) push lea sarl fisub repz notb or roll fld out pop sbb (bad) fidivrl mulb mov (bad) scas or pop xchg negl xchg mov lret cmp and jbe mov jl jae enterq (bad) stos std mov movsl (bad) jrcxz nop scas insb negl mov popfq sub or add repz rex.WXB clc adc ficom loope mov jae sub in icebp mov icebp idiv sbb rex.RX mov and repz jmpq cmpsb lahf retq je adc pop cld movsl (bad) rcrb callq gs repnz loopne sub (bad) leaveq push movabs loope repz push (bad) (bad) movabs test nop xor gs add rex.WRB lock jb fs ja jae popfq imul jrcxz jp mov xchg mov sub jne lods xchg gs sbbl stos mov out rorl mov (bad) fild nop fwait mov imull outsl (bad) icebp push incb sar or sub repnz xor pop xchg movabs repnz hlt rcr or fdivrp test popfq sti ja movsb adc mov std shr repnz sub xchg clc add mov out movabs scas (bad) sbb pushq and xchg loop (bad) xor pushfq hlt xchg (bad) pushq sbb lret mov cmp (bad) stos adc cmc rex.B (bad) xchg (bad) (bad) ss callq sahf out push xchg clc sub or addr32 pop insl jns lret cmpsl xchg mov in mov pushfq cli sti pop out pop enterq stc cmp clc pop or cmc outsl test fcmovb rex.WRXB pop rex.WRXB (bad) stc jnp negb fistpl push test fwait test (bad) add sti xchg sbb xchg sbb adc (bad) lahf pop int3 cmp (bad) (bad) add test popfq test add rolb enterq (bad) add jbe retq fbstp adcl push jae (bad) (bad) adc in rcll sti (bad) enterq loope fcmovnb ja movabs scas mov lods add hlt mov xchg adc push mov add outsb mov cltd mov (bad) xchg ja cmp lret cmp cltd cli movabs (bad) mov scas adc (bad) (bad) (bad) cmp gs (bad) insl frstor in stos cs lahf sarl stos pop rcll nop sahf shrb lea movabs scas rex.WXB cmp div fsubr iret lret mov (bad) cwtl mov jo out (bad) fldl (bad) negb jb test out test sahf lahf push lock or nop cmp add (bad) mov lret rex.WX push jo adc cmp (bad) lret or mov xor lods rex.B pop add sub pop sub (bad) mov xchg fwait hlt push movabs sub lods (bad) push jo imul (bad) or cmpsl lret cli mov shr mov cwtl iret mov pushq or xchg pop test jb or push inc (bad) jnp shlb adc (bad) rorl mov sarl xchg and mov push jle leaveq kmovw out rex.WX rex.B rex.X jne rol rex.X repz or (bad) xor adc outsl ffreep jl retq mov insl mov movsl outsl (bad) stos xor rex.B mov add mov pop lods rcr pop (bad) stos ja test (bad) mov rex.WR movabs (bad) jns test cltd rex.RX lock jno (bad) sbb adcl xchg push push pop popfq xor mov push add sub not out lret (bad) mov (bad) xor jo xchg retq rex.WR rex retq adc (bad) sub enterq cmp fsub xor sbb (bad) and loope sub fisttp enterq xor outsl (bad) rcl (bad) mov (bad) stc data16 (bad) jmp (bad) out (bad) mov or sbb xchg clc retq rex.WRB rex.WRB (bad) icebp loop movabs jo cmpsl lock imul push jnp mov sub (bad) (bad) callq adc mov xor or adc leaveq jle and rex.WX rex.WR addr32 imul retq cmp rex.WRX test in xlat add rex.RXB add repnz pushq or jge cmp cmp and rex.XB gs cli scas (bad) xchg rex.WR loope rex.RB outsl sbb mov insb stc rex.WRB cmp test jp movslq xchg rex.X js cmp sub fs out lret push rex.R (bad) jrcxz std movabs out (bad) test xlat fcmovu (bad) (bad) add test rex.WRB movabs stc int3 pop fbstp jo mov xchg jb add in imul pushq sub (bad) callq jle rex.WB rex.WRB rex.WB rex.WR push ds xor and retq and in std (bad) mov mov popfq mov xchg rcll add add sbb rex.WRB enterq mov test xchg loope sbb (bad) (bad) sbb insb mov pop lret or (bad) rex.RB test fnop sbb and leaveq mov and sti test in movabs cmpsb lret sub rex.WRB movabs data16 jnp callq rex ss sub callq add add movabs ja rex.XB rol add and add imul rex.WX ffreep rex.WRX fwait imul int rex.WR xchg outsl iret cli xor (bad) rol lret jne scas pop fwait (bad) js jae sub push pop rex.RXB stc (bad) mov xor lock cmc xchg js xor jno rex.WB (bad) mov pinsrw pushfq (bad) jp jg repz or cmp add outsl out cmp xor rorl faddl iret test xor cmc lret adc sbb sub retq xor (bad) adc lods (bad) xor mov pop (bad) (bad) or mov repnz int3 cmp (bad) pop xorl jns jmpq nop mov rex.RB or add rex.WRB cmp (bad) xchg scas jp rex (bad) rex.WX addr32 iret add (bad) mov mov jb mov popfq mov sti shlb (bad) rex.RX jns mov jo test sahf pop jg add adc pop insl (bad) sbb mov sub sbb or (bad) test (bad) mov cmc rex.W lock rex.RB stc xchg (bad) adc leaveq jrcxz int movsb jo sbb or adc in (bad) (bad) rex.WXB rorb cmpsl imull jge cmp enterq movsl jno (bad) mov out test add mov div (bad) (bad) je adc cmp xlat pop outsb rex.WRX stc iret std out insb (bad) mov repz or rex.WB fadds js stos out stc fadds rex.B loope insl (bad) rcll cmp pushq xor (bad) divb retq movsl push (bad) std stc (bad) out sti mov rol or fadd push fsubrl clc (bad) mov rep (bad) jno jo sbb xor (bad) js rcrb outsl adc shlb cld (bad) rcrl mov add addb mov jae add xor in jge jnp rex.WXB ud2 fdivl adc sbbl retq std rex.XB cltd in je icebp enterq mov std adc and and and stc repz push movabs rex.WRB rex.B iret add fldcw ror rex.RB push stc sub ds jrcxz idivl fisttpll shll push cltd imul (bad) shlb xorl test cwtl xchg repnz and js movabs test stc fimull notl sti jns lret hlt pop imul xchg insb outsb jbe cmc mov nop adc (bad) add out push imul (bad) sbb (bad) pop jle addr32 rcrb jge add adc (bad) and (bad) jp cmovle sub movabs jl jle int cs xchg callq mov (bad) (bad) fisttpll jno xchg (bad) movsb cmp pushfq pop push xchg cmpsl lahf or (bad) pop loopne jae mov or (bad) leaveq in lahf adc (bad) rorl push rcll rex.RB lods (bad) jne sar xlat jge cwtl pop xor or mov mov popfq xchg roll in (bad) out (bad) (bad) mov roll xchg int xor rcll (bad) and out (bad) in jle and add shll and (bad) shrl rex.WX jrcxz cmp adc mov fsubr sub xor and movabs rcrl xor rex.XB (bad) pushq cltd mov hlt and clc jle or rcrl pop lea and js out sar movslq test leaveq int3 in pop mov add (bad) or imul mov clc outsb lret loope out cmp scas or add outsl xor rex.RXB jl mov push sbb in add adc pop shll (bad) lahf stc stos int callq (bad) mov lods mov (bad) mov loope cmp shrl mov movabs loop,pt outsb add rol lods (bad) push xchg retq mov or cltd (bad) fdiv xchg xor (bad) mov rex.X and xchg pop out add lret push pop jne (bad) add fmulp lods rex js (bad) pop scas pushfq rex.RB cltd cmp pop loop lock rex rex.WRXB leaveq jns scas addr32 mov mov adc jns repnz hlt xor cmp adc js fwait (bad) loope xchg push clc sub sbb sar (bad) lret (bad) or xorl rex.RX (bad) (bad) hlt rex.RXB (bad) mov lock (bad) xchg sbbl (bad) retq js andb mov cmpsl jbe sub or mov rex.B pop adc cmp mov sbb fmull push jbe or mov loop add xchg cwtl jns or jnp fisubr jbe je lret popfq movabs mov (bad) outsb adc cmc sub stos add or rex.W rcll outsl sbb (bad) mov stos mov mov jns divl jp (bad) decl (bad) jae int3 test fs (bad) xchg (bad) xor (bad) rex.W cmp sbb xchg mov add cwtl sarl rex xchg mov (bad) iret je cmp cmpsl sbb lret in (bad) mov fildll or movsl add jmp xchg rol pop and cmpsb (bad) mov jrcxz mov out movabs (bad) add repnz movb xor rex.WR rex.WX outsl shll movsb (bad) cmc sbb retq jb pop xchg out cmp and rcrb jrcxz fdiv jge (bad) jb sbb mov (bad) iret push (bad) hlt or (bad) mov fcmovbe out mov and and neg rex.WRB bnd out sbbl mov add jno hlt (bad) loopne (bad) rex.RB mov shrl (bad) fisubrl add (bad) xlat fadd rex.RXB jge add add sub cli mov int3 (bad) rex.WRXB add sub test fist data16 (bad) imul loope (bad) (bad) andl jg loopne movabs xor jns and rex.WRB retq lret sub add movsb cmp and jp mov vminpd cmp enterq rex.XB test movabs rcl adc ja (bad) add mov (bad) jb int scas sbb sub orl mov movabs (bad) sbb add and scas mov adc (bad) mov push xor mov movabs push (bad) or sub mov shr rex.X ja add test push mov add xchg sbb add movabs rex.WR (bad) jne sub rex.WX in (bad) rex.R ja fstl push fisubl sbbl and mov fwait (bad) (bad) adc (bad) mov (bad) add xchg popfq pushfw jp (bad) pushfq (bad) cmpsl std push sbb (bad) divl fiaddl add push ss imul xchg fidivr je ja lock int roll (bad) retq lret test jo ror rex.W mov mov fs rex.WX add mov out (bad) jge or adc jge xorb rex.WR rex.WRXB movabs in outsl (bad) (bad) negl xchg sahf (bad) int3 iret jl jae add (bad) in sbb (bad) sbb mov jnp in mov xor adc and jae,pn mov scas (bad) sub or jmp popfq mov rcr rex.XB sub sub or (bad) es or repnz fdivr addr32 jl adc movabs stc sub retq adc mov rcrl add fsubrs mov leaveq stos repz (bad) mov and rex.WXB movsb mov nop (bad) push sbb test or sub rcll movabs mov jg pop mov cmp testl mov rex.WRXB cmp xchg shr icebp sbb fldcw pop or movabs jns cli or pop cmpsl std mov cld (bad) push int test xor mov rex.WRB jle shl mov out mov lret (bad) xor cltd sbb add cmp push sarl (bad) adc sbb add sti es xor jne,pn movsl add sub out rex.X mov jnp (bad) icebp jmp (bad) push lret imul mov sub mov lret (bad) jb hlt rex.XB rex.WRX cli mov sub or stos lret mov out repz pop (bad) xor movsb rex.WRB callq lock je sub shrb (bad) retq jbe sbb jb out push xchg lret imul lahf movabs repnz pushfq or rex.XB mov fs rex.WRXB rex.XB (bad) cmp rex.B xlat xor rex.WB sbb pushq mov repz mov cmp mov pop (bad) rex.WRX xor jl cli jae add in add fmul xchg sub lret (bad) fcmovne sbb and (bad) cwtl test rex.WRB rex.WX std xchg cltd jrcxz es or movslq mov sbb repnz mov (bad) enterq cmpsb mov lods loope div movabs add rex.R rex.RXB imul adc rex.WB sub repnz xor fstpl add xchg enterq pop test cmp (bad) in ss (bad) adc (bad) xchg fwait mov loope push in sarl xchg and mov movabs and repz lock jo lret rex.WXB jmp push shrl fcoml in fwait adc lahf mov sar xchg xchg mov cmp shl (bad) cmp push scas (bad) insb jb or and jmpq push fmul push shrb or in xchg or shl pop xchg xor add int3 js push rex.XB (bad) icebp mov rex.RXB (bad) fdivl xchg (bad) mov rex.WXB xchg rex.WB and xchg lea jno movabs movabs sbb (bad) notl rex.WXB rcl sub rcll adc fmull imul xor xor xchg movabs int3 jmp cs scas stc lahf cmpsb stos xchg rcrl xchg xor (bad) (bad) jae sbb ds mov pushfq xor cld movsl mov sbb jns shr (bad) out test sahf xchg std or and test push pushq mov insl (bad) mov jp iret (bad) cmp rex.WRB (bad) mull cld mov mov adcl test rex.RX mov jb cmpsl out callq jle (bad) rex.WRXB and mov in cltd push pop xchg pop rex.WRB gs mov in rex.WR imul cmp jmpq (bad) popfq jo sub push or (bad) or sbb push rex.WXB retq or pop adc std cmp rex.W pushq pop (bad) repnz xchg sub cmp iret mov test adc mov pop and rex.WR xchg (bad) js insl rex.RB and fst fidiv (bad) int xlat gs cmc mov (bad) mov rorl repz jrcxz fnsave fs xchg (bad) xor sub jrcxz cltd ss fwait not or xor fidiv pushq and fsts mov adc lock fnstcw callq orl (bad) (bad) sbb (bad) cmp mov pop rex.W outsl lret scas push test pushq add (bad) mov stos (bad) fist pop lea lret rex.WXB addb lahf mov xor lret rex.WXB fcmovbe test (bad) movabs (bad) and xchg (bad) cmp cwtl andl lret or cmp jp retq rex.RXB cli sbb add cmp mov ja (bad) xor fildll jg rcrl jge fidivl jo jl test mov fldt or (bad) mov xchg sarl rex movabs mov mov enterq (bad) (bad) shll adc (bad) int3 inc cs movsb nop xchg test lock in (bad) lods cld sbb int3 adc jno jrcxz mov enterq data16 jl (bad) shrl movabs iret fwait jp lods repnz test adc insl int jrcxz pop mov paddb mov mov rex.R lods stos loopne rex.RXB and jle xchg jmpq push std mov add cltd xor rex.W xchg jae (bad) push adc retq and jb mov xor insl scas fs lods mov (bad) adc vhsubps scas adc scas in movabs mov enterq and lock sbb jp xorl sub adc sub mov cmp int popfq imul icebp mov sub fdivrs cmp movsb pop rex.WRX mov (bad) or xchg cmpb (bad) add js js movslq xchg (bad) movsb mov (bad) jne xchg cld stc jbe pop subl (bad) xor movabs and and fsubr or cmc sub sbb fwait addl mov ud2 rex.RX push and (bad) add pushq ffreep cmc xchg or mov int3 fstl (bad) cmp rex.WRXB outsb pop rcrl pop (bad) test (bad) retq mov rex.RX insb adc iret add loopne rex.X jp xchg std mov mov (bad) fndisi(8087 jno,pt mov loop jmpq jmpq sbbb lods (bad) jns mov (bad) xlat fcoml ja and loope add lahf mov stc jne out imul nop flds por (bad) (bad) pushfq xchg xchg cli push and int3 mov rex.RXB or stc push int sub jl rex.RB icebp (bad) lret cmpsl rex.WRX (bad) sahf out imul rex.WRB in jno xor loope rex.WRX in sbb or (bad) loope add (bad) in jno (bad) gs xchg mov cmp nop xor pushq andl jns mov outsb insb xchg sub leaveq je movabs xlat (bad) movsb sbb fsubrs xor (bad) test icebp adc (bad) icebp (bad) imulb roll test sti movsb (bad) xor int3 rex.WR stc adc jmpq rex.B xchg repz adc mov pop (bad) enterq sti jae callq mov xlat adc mov outsb push rex.RX rex.B mov rex.WR loopne clc xchg in and mov push cmpsb leaveq or pop test xor insl outsb (bad) cmp stc xchg (bad) rex.R adc std rex.WRX cltd (bad) sub push mov lods (bad) out (bad) mov sbb out (bad) fcmovb pop leaveq rex.X sub sub cmp xchg mov ror lods pop movabs data16 insb xor (bad) xor scas rex.W (bad) (bad) dec and rex.B mov adc xchg test movabs int rex.RX repz mov or cltd (bad) xor (bad) ja (bad) xchg mov cmp (bad) jmpq sar xchg and push or callq rcrl mov int3 xor je movabs insb (bad) popq out ss (bad) rex.RXB (bad) sub stc pop ffree (bad) jg nop cmp pushq (bad) sbb mov shrl adc js shll add pushfq sbb (bad) data16 mov stc cmp test repz jp lret movabs ror rex.R jns fldl movabs enterq imul jmp xchg (bad) repnz add fadd adc cmp test xchg push rolb pop pop cmpsb mov xor mov (bad) subb rex.XB pushq movabs and rex.R xor sub jae xchg xchg out rex.WB pop (bad) pushfq or jno shrl mov (bad) popq data16 rex.B or mov (bad) pop adc fsts rcrb xor shll fisttpl pushq sar xchg stos (bad) lods stos xchg loop in rex.RXB popfq add out xor outsl roll testl sub add (bad) mov and lret (bad) (bad) jno ss (bad) rcll lods incl rex sar xchg movabs adc mov (bad) xchg rex.RXB (bad) int in rex.WRB fwait mov sub cs and and loop mov cmp mov shll cli add fdivrs (bad) mov (bad) cmc adc push mov insl rex.WR cmp (bad) cmp cmp xor movabs xchg mov or pop mov mov stos roll jmpq add mov (bad) test in cmp rol out (bad) mov lret pushfq (bad) js mov jbe movabs ds (bad) int iret sub and (bad) fwait jmp cmpsl imul imul rex.RXB sarl or add callq (bad) fldenv jmp rol or or pop lock pop rex.R shr (bad) rex.WRB sub xchg pop scas mov std shr mov cmp stos cmpsb (bad) stos mov mov rex.RX push pop clc rex.X movabs or xchg lret sbb popfq (bad) pandn rex.WRX rex.XB fld lcall (bad) movabs mov cld lret mov sahf loope fnstsw movsb hlt sub iret sub cli movabs rex mov decl pop rex.RXB jbe rex.X add push ffree nop xor scas enterq rex.WRXB int3 cmp andb out mov push rcl fisub jmpq xchg rex.W xchg (bad) movabs rex.RB (bad) lret (bad) xchg cmp (bad) mov cs add es push clc fisubr pop push in rex.R pop (bad) jo rex.WRX sar add fs pop rex.X rex.R jnp or (bad) lret fs mov add rcrb push and and xchg notl shrl mov in es xor sbb lret sarl lret fstpt (bad) fnsave movabs (bad) rex.RXB rex.WRB push xlat sub roll ja rex.XB mov sarl flds push sti mov xchg mov rex.W sahf hlt or cli push mov mov in fisttpll ror xchg or jns movsb ljmp (bad) jl mov push mov out loopne sbb pop rex.WRX test (bad) ja or rcrl subl push retq cmp sub rorl sahf inc (bad) pushq mov ror mov add (bad) jge lret mov push mov jae loope int adc and pop insl jp sub (bad) rex.RB mov xchg rex.WRX fstps scas outsb xchg pushq out rcrl (bad) stc in xor sbb movb jb fisttpll test (bad) (bad) cmpsl movabs xor fidivl cmpsl ja ja sub retq jns cmp rex.WRB mov movslq addb pushq rex.WX mov (bad) cmc rcrb jno (bad) pop rex.X (bad) sub mov es mov nop stc pop cltd cmp sub pop mov rclb (bad) jmpq (bad) or xchg mov sbb icebp stos stc (bad) fist insb shlb cltd cmp adc (bad) xor push mov (bad) std add repz mov imul movabs xlat jnp adcl rex.WRX icebp enterq adc jno rex.B add cmpsb jle cmp (bad) fcmovne jns (bad) push (bad) andl mov hlt (bad) push jmp mov sub (bad) scas mov adc rcrl jae rex.WX pop or mov retq cmpl fstps retq retq imul or add sub out pop xchg mov ds gs pop pop retq adc (bad) repnz pop test (bad) xor test (bad) cmp rex.WRX rex.WR in ss fcom add lock mov movslq xlat movslq andl xchg (bad) (bad) test fdivl push or fnstcw push sbb add (bad) xchg lret lea loope hlt push rex.WR fiaddl cs pop std rex.WRB lods js rex.RXB mov (bad) fisttpl fcmovnbe sub fimul mov or test jmp in lock jmpq cmp pop or insb jmpq add in rex int3 sub xchg push fs or roll scas xchg insb mov pop shll xchg shr rex.WR in mov roll leaveq push rex.WX (bad) fbstp loop (bad) pop (bad) jne cmp lahf mov (bad) rex.B fs sarl adc add (bad) rex.WX sbb clc shl mov xor jnp loop xchg cld fiaddl cmpsl fstl mov jrcxz add lock (bad) jne xchg and (bad) jg rcrl imulb fiadd rorl mov hlt cmp loop add (bad) adc xchg pushq data16 hlt rcrl cmc gs jg stc rex.WXB iret pushfq sub fild adc (bad) icebp sar insl xchg mov in out pushfq sub rex.WB pushq (bad) fdivrl loope (bad) cmc mov xor fwait out fdivrl sub pop sub sbb lret rorb movsb (bad) movsb ja sub in jmp pop out add ficom sub (bad) rex.WR xchg mov movabs mov jne mov mulb (bad) (bad) int push cwtl xor (bad) fstl sbb (bad) std rol (bad) rex.WRXB ss rcll rex.RXB movabs (bad) rex.W push roll jno,pn xchg lods cmc rex.WRX pushq cmovs mov rorl or clc rex.R shr jnp jl jge rcll (bad) loop and xchg (bad) (bad) adc mov xchg (bad) in jmpq (bad) pushfq sbb loop out int3 out fisttpll jl (bad) in push retq test mov cmp imul insb (bad) push xchg cld sub movabs (bad) mov scas cmp rol (bad) cmp (bad) lret test mov xchg add (bad) pop or rex.RXB jl and sub rcl rex.B jl add outsb stc (bad) (bad) rex.RX lahf (bad) sub test rorb (bad) retq int3 (bad) shll rorl (bad) gs lods mov fadds (bad) (bad) (bad) xor (bad) jp add std adc (bad) rex.RXB or movabs sbb push jmpq rex.WXB rex.WRX add sub push mov mov (bad) movabs mov (bad) callq sub (bad) cmc incb xchg cmp push sarl add (bad) movabs outsb xlat or retq scas (bad) stc clc movslq test out xor loope shrl in cld in int3 cmp icebp rcrl je and (bad) (bad) mov out (bad) jo jle lret jge and mov iret shr mov xor lods enterq shll fucomip rex.X outsl rcll jnp testl (bad) or pop (bad) add (bad) inc gs (bad) fiadd movabs in xor icebp sbb loop pop in outsb data16 cmpsl and and mov sbb mov je adc xor jnp and cli add jne mov jno or sbb icebp xor (bad) jno rex.B sbb retq callq movabs (bad) cmp int rex.WXB test mov rex.RB push add (bad) vmovddup mov or mov add addl test out cwtl jns rex.RB rex.RXB sub jge cld int test (bad) cmp (bad) sbb cld iret add (bad) clc movabs push jne sbb adc in sub jae in rex.WXB and add loopne hlt decb pushfq rex.XB cmp movabs nop xchg rex.WXB sub add enterq rex.WRXB cmc ss push add cltd out and repnz xchg movsl stc mov (bad) loopne imul repz sbb (bad) mov (bad) mov mov pushq mov rex.RX (bad) cmp retq repz cmp test cmc movabs int3 rex.WRX movabs rex.W es xchg sub cmpsl sbb cltd fisubrl pop rex.WX repnz lock in sbb jno (bad) mov js fmul rex.WRB leaveq mov repz jae rex.WR adc out sub (bad) add rex.WXB roll cmp int mov stos mov add jmp mov int enterq cld mov mov iret xchg mov rorl (bad) xchg add test add (bad) or (bad) xor sar lahf movslq cmp cmp and (bad) sub adc sub jg xor rex.RX callq push clc cli fwait insb out pop or fnop kmovb iret jmp ffreep mov rex.W callq addr32 (bad) (bad) pop adc fstl rex.WRB imul xchg sbb sub (bad) clc out rex.RB mov (bad) push xchg rex.WB mov xchg sub cmpsb sbb int3 (bad) push rex.RXB stos js lods outsl jnp add jno or add movl orl (bad) mov lahf mov testb lods cltd out (bad) mov rcl push insl xchg cmp roll cmp xor (bad) nop (bad) lods mov sbb rex.X rol movsb jno callq jns lret cmpb and fstps rorl andl rex.WX adc pop movsb or shrl xor (bad) mov int3 or movabs fs in (bad) (bad) mov fdivr popfq pop (bad) pop rex.WX and rex.WXB cmp movslq (bad) and adc scas int3 xchg fnstsw lock cmp (bad) jl sub mov rex.WX movd rex.RX and sbb rcl pop (bad) sbb adc and and rex.R cmp in rex.RX (bad) hlt fmull xchg add rex.RB (bad) inc iret jrcxz mov std pushq rex.WRXB mov xchg ss sbb xchg test or xchg add cwtl xor rex.R fs and mov cmp adc sahf rex.RX int3 (bad) and (bad) out mov sub add loop icebp (bad) pop retq rex.RXB pop imul adc (bad) add lods pushfq rex.WX (bad) repz repz sub cmp jbe movabs xor pop rex.B lods (bad) roll (bad) cmp and push (bad) imull xchg add rex.X (bad) outsl add (bad) loop in or (bad) or rclb pop cli jl lods sub hlt pop adc jbe or out rcll je rex.WRX xor sbb (bad) mov pushfq test rex.WXB and movabs or jg cmp addr32 xchg (bad) fisttpll sbb js (bad) (bad) rex.WX lock mov cmp (bad) shll xor pop add jno fwait or jmp sub mov decl jp add sti popfq (bad) push xor mov lock sub (bad) mov addb adc jb icebp (bad) mov loope and mov shlq sbb loop in push addl xchg jmp xchg rex.WXB and movslq sbb imul movabs pop enterq dec stc sbb rex.WRX rorl stos (bad) add stc jo and test (bad) int3 jle fmuls in mov push shl and add sub sbb xor (bad) lret loopne out mov leaveq mov (bad) fwait cltd sbb mov or adcl push adc popfq fs retq pop adc test (bad) adcl mov (bad) mov int mov loopne retq jmpq rcr stc or rcll cmp rex.RX pushfq int push stos insb test movabs mov rex.R lahf mov lea out test (bad) fwait sub rex.RB pushq jno mov lret cmpsb (bad) sahf pop xor mov int3 (bad) (bad) rex.R push and rorl retq (bad) test test rcl mov push out push lret repnz (bad) xchg push xor push sub adc or pop (bad) sarl sbb sub je rex.XB sbb fimul in (bad) (bad) enterq (bad) jge mov sub retq (bad) mov rex.WR (bad) (bad) repnz nop mov lock xchg add (bad) mov test mov mov rex.WRX push add sub (bad) cli xchg rcrl cltd shl jne (bad) iret add jg je jo (bad) mov fidivr scas movsl (bad) rex.WR movabs (bad) mov sti (bad) shrl cs jno ror rex.RB or fnsave adc xchg icebp rex.WX mov rex.RB jo movslq pushq pop cs mov jnp pop mov xchg add mov and mov repnz (bad) cmp mov pop shll (bad) xor adc (bad) mov or sub jae xchg fdivs insl es (bad) mov mov mov (bad) sub js (bad) icebp mov in in mov rcrl (bad) std add sar stos leaveq shll sahf movslq rex.WRB adc push (bad) movb cmp and xchg mov imul leaveq (bad) movabs rex.X rcll and rcrl movsb cs cmp cmc in decl xchg icebp lods out xchg xor imul shr rex.WRB rex.WB xchg (bad) jb movsb (bad) xchg pop jmpq mov mov add push xchg cmpsb test xchg (bad) (bad) sti (bad) (bad) nop loope xchg sub out (bad) (bad) (bad) int adc test jg and mov or kxnorb xor (bad) mov pop lret loope popfq pop cwtl repz (bad) fidivl add rex.WR add jmpq pop or push movabs leaveq adc out mov add lret callq jp rex.WXB scas fildll xor pop or sahf (bad) loopne shl sbb mov adc rex.WR sbb (bad) test sarl or mov mov or (bad) mov (bad) jb ss jge rorb sub and add (bad) (bad) jae rcll xchg addr32 and (bad) (bad) sbb xchg std (bad) sti (bad) mov xor (bad) push mov cwtl iret retq (bad) pushq fwait retq int3 (bad) (bad) ss xchg movsb push (bad) rex.XB js adc sarl adc jp andb xor shrl leaveq bnd cmpsb xlat mov add jle xor pop pop jrcxz callq mov in out jno insl inc jae lret pop add (bad) jo nop cmp test movabs sar or jrcxz out in xchg xor and test sbb pop imul mov xor (bad) (bad) test rex.WRXB test shrl test (bad) and out (bad) ja rol push jg (bad) movabs test push mov orl jb stos orl (bad) shrb mov (bad) or lret hlt xor adc adc mov jg pop retq xor jmpq sar xchg lods insb ja adc rex.WX mov jno in in rcrl in sub icebp out shll ja pop push cmc cmpsl lret (bad) sbb pushq (bad) rex.WRB push rex.RX (bad) (bad) rex.WRXB and cmp mov loopne sarl push or outsb adc (bad) sub loopne sti gs movabs decl cs test ja cltd leaveq push shrl rex.B sub movsb add test mov rex.RX (bad) (bad) rex.WRXB test loop push rex.XB xchg lock test (bad) sub in and data16 sti adc (bad) out ja jmpq movl sahf shrl mov imul xor (bad) in iret adc pop lcall loope pop xchg add rex.WXB xor push (bad) xchg or movabs sub (bad) mov stc popfq mov cli (bad) addr32 xor ja int icebp push push repz fidivr (bad) xchg add sbb pop cli mov sbb sub sbb jno sti xor cmpl adc out cltd (bad) mov push out sbbb rorb or push callq cs fisubr cld adc xor cmpl (bad) jbe cmp mov add (bad) fwait roll loope int3 (bad) mov (bad) mov notb sub jns (bad) xor xrelease shrl rex.B push jg jmpq lret jl je enterq add es out movabs jae in fyl2xp1 loope mov xlat jle (bad) rex.X xchg data16 jno (bad) pushq pop stc (bad) xchg (bad) rex.WXB rex.RXB jp cmp sub adc repnz lods rex.B fisttpl mov sub or jp jl mov rcll rol cmp pop xchg sar mov movabs test sarl cmp adc pop jbe lret push sarb rex.WRXB cs sub (bad) fild rorl (bad) cmp lock and rol jb (bad) or xchg jmpq shll lods in pop rex.WRXB rorl jge and pop std xor xchg enterq pop xor push out lret xor (bad) ja (bad) retq jo sbb mov out and sub cmp jg repnz xlat and (bad) adc stc scas push in rex mov push loop out rex.WRB (bad) out mov and add fadds (bad) sub iret (bad) rex.R repnz mov cmp (bad) fcmovnb adc (bad) jns lea lods (bad) outsl push ffreep test mov and pushfq pop in imul retq cmc int3 xchg mov shlb mov adc fwait nop (bad) and sahf rex.B es rex.WRXB sub and push or xchg repnz sbb andb fldl add or xor mov enterq loopne rex.WX outsb movslq rex.X (bad) js pop test (bad) cmp fimul jns roll movslq xlat out (bad) mov rex.WR rex ja out hlt cmp or js and orl add (bad) mov imul lret and test vmulps sub jns lret lods jp rcll rex.WB push pop sub xor cmp mov sbb (bad) loopne mov or or sbb retq rclb shl test pop mov stos jno (bad) adc cs sub adc (bad) add adc repnz mov xor rolb adc cmp outsb and cmp rex.RXB rex.RB fsubrs sub shrb mov jb (bad) imul retq notb sbb stc jge jo jle ljmp (bad) (bad) xor repnz (bad) lret (bad) pand (bad) divb gs sbb (bad) movabs sbb rex.R mov (bad) enterq mov jmp out add loopne divl fnsave rex.XB icebp lret sbb add (bad) xor cmp (bad) mov sarl loope (bad) cmp rex.B cli mov jrcxz test repnz xchg int3 (bad) (bad) jle rex.XB jmpq movsb xor mov add xor jae,pt jb,pt ds sbb stos movslq out xor int jb and mov fnstenv mov pop rex.WRX pop xor stos movabs rcll mov movslq adc cltd movsl jg je (bad) and add fs or addl xchg (bad) pop leaveq add es sahf (bad) jbe popfq jns jge lret and je mov (bad) sarb incb sbb pushfq fs jae pop adc push xor callq callq rolb cmp (bad) rex.WRX ja pop mov mov sbb jle mov mov imul mov (bad) rex.B cmpsb ss xor clc add in sbb cmp mov shl (bad) int outsl jae (bad) mov jo adc out cmc movabs pushq movsb loop add roll pushq jg lock mov (bad) pop mov pop xor adc add repz lret (bad) int3 pop pop icebp jb (bad) sarb lods imul and pop test push cmp jle pop (bad) es pushq lret int3 stc out adc jbe mov (bad) (bad) rex rcll add vpacksswb cwtl insl outsb push add addr32 insl rex.X pop mov movsb jmp popfq or scas (bad) add (bad) mov in (bad) insb xor pop xchg sub (bad) orw add adc (bad) mov divb jge and jbe adc retq adc mov (bad) frstor push adcl rex.X pop cs sbb (bad) sub sub cmc movabs mov out sub (bad) jge (bad) mov sub push out test (bad) adc leaveq xor shr mov sahf and pushq movabs sar sub mov not jle outsl imul push out ja push js icebp or fisubl scas callq add mov cmp out mov movsl ror mov (bad) int stc xchg adc mov rex.RB jb push add test pop test rorl mov movsl (bad) (bad) rex.WX shl in cmpsb data16 shrl xor rol insl (bad) fsubl (bad) push (bad) xor mov loope callq rcll add (bad) pop test pop xor cmp xor int or outsb sbb repz icebp adc xor loope mov cmp (bad) pushq hlt or or cmpsb stos ficomp jle int3 xchg stos sarl push xor scas xor cmp or sub (bad) sbbl push loop push in add jmp pop lea mov rcll int3 jnp and (bad) je data16 lock mov in test jns not (bad) fdivrs pop xorl fwait push xor xchg (bad) roll xchg (bad) clc pop insl (bad) repz je sbb out jns jrcxz stc cs jno mov lods rcrl sub (bad) or leaveq and cwtl mov cmp jne (bad) mov cmpl (bad) xor and lret fnstsw lret jmpq push mov (bad) xor adc fwait repz xor out (bad) adc xor pop pop shrl (bad) cltd mov movabs mov (bad) subb mov out repnz push sbbb insl sbb cwtl lahf xadd or mov pushq xlat adc push test jge pop test rcrl (bad) push movslq fimull and sub mov jle pushfq (bad) jo push pop adc pop xor sub clc rex.X jo pop jrcxz cmpsl nop mov cwtl movsb pop push jb pushfq movabs js insl fdivs mov pop xor ds shrl rex.W xor jge adc add (bad) pushq cmp rex.R xor rorl (bad) mov out (bad) iret add and xor sub sub fbld lret (bad) or lret cmp rex.RB sar std cmp mov jl rex.X cmove and jb shrl rex.WRX pushq or movabs push push addr32 (bad) je repz insb jmpq orb icebp (bad) retq sub sbb rcl mov (bad) push rcl rex.R test mov addl jo clc sahf (bad) mov (bad) xlat jg cmp cmpsl mov xchg (bad) jo scas push in (bad) jb xlat sbb rex.WB (bad) jno in in hlt rex.WX mov pop movabs sbb or int3 iret (bad) adc int rex.RXB retw (bad) leaveq lods outsb jo lods or xchg cwtl scas rex.RX pop loop lahf shlb jb (bad) addr32 (bad) je pushq enterq out rolb scas mov rex pop in rcrl sti or (bad) mov fdivrs mov sbb (bad) repz ja rex.RB cmp (bad) jbe sub (bad) addr32 fcmovnb in (bad) addb mov sub test adc (bad) adc int pop mov pop icebp (bad) out lahf sbb mov rex.WB ds and rorb vrsqrtps ficom (bad) push callq loopne push mov rex.W bnd and xor mov cs (bad) ja repz repz rex.RX and add (bad) or int cmp callq push (bad) loopne jl (bad) (bad) clc adc (bad) rex.B data16 and fsubl fadds cltd fistpl (bad) in (bad) jmp rex.WRB (bad) fwait add cmp fadd lret and movsl pop cmp rex.X lret shrl retq jmp ror mov std mov sub push mov jo shr mov repnz add rex.B pop (bad) (bad) and insb pop cmc jmpq test mov push rcll sub jmpq xor jb ds (bad) sarl pushq out mov lock jo cld outsl sub mov (bad) out mov push shll rex.WXB rex.WRB lret shrl stos retq (bad) adc (bad) mov ficom and xchg movsb scas cs (bad) cmc mov adc (bad) or cmp mov and or mov jl mov (bad) rex.WXB mov inc pop jrcxz rex.WX lret imul jns sub mov rex.X jp rex.X sahf pushq (bad) hlt lahf or sarl push sarb pop xor (bad) push test xchg rcll test lret rex.WRB repz sarb lods stc mov jns pop add rex.W rex.X (bad) cmp mov (bad) rex.XB popfq scas retq (bad) callq adc push (bad) sbb loopne xorl lret jg (bad) (bad) xorl xchg lret sub rex.WRX xchg cmc leaveq sub mov push std retq pop xchg mov (bad) hlt sub ss cmp pop (bad) cld sub jno data16 (bad) xor push clc sbb retq mov adc (bad) bnd sbb (bad) scas cmc mov jrcxz adc adc fistpl rex.RXB movabs or (bad) mulb rex loope (bad) (bad) (bad) lods xorl (bad) sbb stos sbb lea rcll xchg xor cmp fnstsw add jle mov sbb ss pop retq fldt sbb cmp movslq xor iret rex.WB lock (bad) ds callq leaveq loopne (bad) mov pop xchg adc int addl movabs lock cmpsb sub push addl in (bad) sbb mov rol repnz cmp vmovq repz sbb sub mov imul and pop cmp cmp jrcxz (bad) pop mov jnp outsb (bad) xchg jno mov mov sbb fcomi mov leaveq (bad) lods loope lret loop xchg repz (bad) rolb divl fdivs xchg mov sub rex.WRXB fstps cmp out xchg rcll std sti popfq (bad) (bad) or shlb jno add fdivs sbb mov push adc and je loop jp mov sbb (bad) xor push add int3 and xor or movsb test xor sbb lret rex.R cmp int3 cvtsd2ss fimull ss repnz mov xchg sub mov iret xor loop loope sub rex.WXB jp rex.RX and (bad) (bad) (bad) loope mov rex.WXB mov lretq mov pushq rex.R rex.B popfq xchg or xor orb sarl int3 mov rolb repnz jno cmp pushfq (bad) or (bad) or (bad) mov (bad) rex.W xchg (bad) (bad) or cmp out mov (bad) add mov rex.WR cmpsl enterq cmc lahf mov rep mov icebp xchg xchg jbe or enterq xor fadds add pushq (bad) loopne test (bad) mov mov gs lock nop test cmpsb cwtl xchg pop fisttp mov sbb rex.R insb xor cmp mov jle in ja cmpsb adc hlt test push jmpq (bad) sbb int int and or xchg loope (bad) in mov (bad) loopne loop out or mov mov fisttp mov imul push jae callq insb rex.WRB pop (bad) mov rex.R fdivp (bad) imul in mov fidiv rex.WR adc jns jne and rex ds push (bad) stos insl cmp fisub (bad) sub and out and adc mov addr32 mov mov rex add sarb (bad) and and js (bad) hlt (bad) stos cwtl pop clc push callq (bad) nop outsb push ss sbb mov xor mov cmp sub out repz mov or (bad) movsl mov xchg or mov add rex.RB sbb (bad) std mov cld nop or rolb (bad) test and roll popfq rex.WX mov in ror mov sti (bad) (bad) fadd fdivl sahf sub cmc jmpq (bad) mov lea repnz (bad) mov add push (bad) fistpll shl rex.WB fwait loopne test (bad) icebp sub rex.X cs shlb fisub push rex.RB cld iret sarl (bad) (bad) (bad) and sar xchg add rex.R jp push mov lahf outsl sarl xlat shrl movsl mov adc repz movabs out test rex.WRXB sbb (bad) mov mov fcomip pushq and cmpl (bad) mov mov mov cltd rex.XB movabs es fadds xchg lock retq mov cmp xchg rex.B icebp lea fsubrl rex.RX jae repnz rorl out push push (bad) mov (bad) test std and pop xorl cli fsubs sbb jp and ja (bad) xor cmp xchg sar mov mov vcvtpd2dqy retq leaveq xorl cmp jns rcl (bad) fwait xorl mov jae xchg xor rex.WRX rex icebp sbb fisttp retq mov incl test iret sub fcoml jrcxz mov mov jp jl fs push fcomip rex.RB outsb je in cmp (bad) notl or (bad) neg pushfq out add (bad) jae pushq jno push rex.X js clc imul (bad) xchg adc (bad) or xchg adc pushq (bad) out sub mov cmc push retq add rex.WR out (bad) icebp and add and rex.W cmp movslq test fisttp jg mov hlt test in (bad) pop fwait lahf lods (bad) cmpl movslq jl rolb data16 mov rex.WRB rex.XB mov add pushq rex.WX sbb xchg sbb mov loopne lahf std (bad) mov pop out adc add jb fld stos and rex.WX sub add xlat lret (bad) test pushq or movabs repnz stos mov rex.RXB cmc mull rex.XB rep movsl testb rex.RXB (bad) mov xor jp and icebp imul rex.WRB mov movabs rex.W rex.WR rex.WRB movslq imul pushq movabs mov jmpq sbb (bad) imul or int test test gs xor rex.XB pushfq in (bad) jge rex.RXB mov push ja test push rex.RX push sbb repz loope xchg vhsubpd iret sbb or xchg repz icebp out (bad) rex.WX rex.WR movabs gs lret (bad) add sub push add rex.RX jp in pop incb and rex.WB sub push xlat jl dec and movb (bad) (bad) rorb fsubrs mov rex.B rex.WB sbb mov pop (bad) or adc mov rclb cmp (bad) movsb icebp add jb cwtl pop adc in rex.WRX out xorl and sbb insl rex.WXB movabs rex.XB fidivr rex.RX rex.WRXB imul (bad) movabs movabs mov mov rex.WR (bad) (bad) jno enterq cmp mov (bad) (bad) push jne (bad) mov mov mov xor rex.RB (bad) pop int3 mov test sbb adc jl sub jb push and cmp in mov loopne cmpsl shlb stc in stos callq pushq movabs cmpsl mov sbb pop (bad) adc add gs imul rex.W out stc in int cld (bad) mov je mov loope loopne rex.WR fcoml add ja xchg mov mov jrcxz jmp stos rex.B (bad) scas rex.WRX adc out rcrl in leaveq jbe,pt sbb (bad) mov (bad) gs rex.WXB fs pop lock movslq (bad) (bad) rcrl jmp pop lods mov xor adcb mov rex.WRX int (bad) ja rex.WRXB fs or xor lods jns shr mov movabs (bad) addr32 cltd roll in imul movb jae movsl sub or cmp shl rex.B cs sbb xor pop stos imul jns (bad) jmp sahf mov (bad) popfq add rex.WRX (bad) mov xor outsl (bad) inc loop rolb pushfq push vsubps add shr callq fcmovb mov (bad) enterq rex sub pop add (bad) (bad) add mov (bad) int leaveq xor add rex.W (bad) rex.WRX movabs adc test xchg (bad) es cwtl cmpsb stc (bad) xor add (bad) sbb push adc xchg scas (bad) push sub mov pushfq movsl retq rex push out cmpsl add retq jmpq (bad) out enterq std imul rex.W rex.WRB sti idiv jg mov jnp lods (bad) imul sbb stc lods (bad) mov movabs (bad) fs fadds test rex.W (bad) rcll repz stos jp repnz sub popfq lods lahf or (bad) sbb movabs jo rorl cmp fcmovne lret pop cmp xchg je push mov lret xchg mov repnz (bad) nop and (bad) sbb or cmp and int stc jrcxz xchg cltd sbb lahf movsb shrl (bad) sbb pop lods imul rex.RXB mov (bad) pop addl xchg xchg rorl ja (bad) (bad) jnp add sbb lods pop stos push jo sbb rex.R rex.WB iret pop sarl adc jae movabs push js rex std cwtl sbb out mov shlb cwtl mov andl lahf testb mov (bad) mov repz or (bad) lods movabs stc (bad) sbb cwtl and cmc xchg (bad) test mov jmpq cli (bad) and clc or or (bad) (bad) jno (bad) scas sub add cltd retq xchg sti xor and orl adc push (bad) xlat outsb jle rorl rcrl add icebp rolb jp scas or addr32 jns (bad) add mov jnp int3 (bad) js testb (bad) in retq (bad) in pop icebp movabs (bad) mov int3 or mov test sbb popfq (bad) jle sarl (bad) test jg or mov fs rorl jmpq lock cs (bad) (bad) rex.WXB rex.B movabs xchg mov (bad) jbe or push and iret (bad) sub (bad) in adc push roll shrb test js or test sbb mov pop rclb xchg (bad) ds movsl fcmovne and data16 mov and in rex.WR (bad) sbb (bad) (bad) mov cmp (bad) jbe hlt fwait rcr je rcrl pushq out rex.WRXB rcr jae adc rex.RB xchg rolb out (bad) cmpsl rex.R adc iret jo mov adc hlt rex.R sub xchg xchg pop ror (bad) xchg or (bad) rex.WB rex.B movsb (bad) shll cmp cmp sarl or icebp jmpq (bad) sub or imul mov and ror movabs stc jmpq lret (bad) movsl iret shrl mov fwait adc (bad) (bad) add mov cmp cmpsb cmpsl loope (bad) (bad) adc jmp cmp loope and cmp and push (bad) insb (bad) mov int retq iret outsl jbe sarl ss sarb lret jb retq mov sar rcl std (bad) cli (bad) jrcxz std mov jg loope mov icebp xchg rex jb in std (bad) mov lret notb insb mov (bad) or (bad) outsl (bad) ficomp cltd out or int3 sbb pop in (bad) xor or xchg rorl lret or jbe jne or mov (bad) jno (bad) (bad) loope rex.XB shl shll jbe fistp fnstenv (bad) or cmp cmp (bad) mov sar rex.XB (bad) mov imul (bad) je (bad) cmpl sarb jp (bad) or sarl rex fwait sbb add out es jns std sbb and rex.WXB push add xchg cmc sub (bad) iret push (bad) jrcxz add jb fisttpl movslq adc (bad) ds je and lahf mov jb xor or pop rcl callq add sbb int3 roll mov outsb (bad) addl jns push (bad) add xchg iret leaveq mov cmp (bad) testl xchg fdivs shrl je shl js jl and xor sub lods rorl sub divl (bad) xchg and (bad) imul sbb fs mov sahf push leaveq cltd repnz retq pop pushq cmp rex.R mov xchg (bad) shrb mov rorl mov add jbe xchg movabs (bad) mov sar movabs clc retq jne rcr (bad) pop lea cmp test push je pop rcr or mov cmp xchg loop cmp mov ror rex.WRX mov iret loope sahf pushq sbb rex.WXB sub outsb xor cmpsl jle loope ja (bad) (bad) pop jl (bad) cmp push rol fcoms jae and xlat (bad) mov pop ds rcrl jp lret shll pop xor and vpshufhw icebp mov mov std mov jno (bad) (bad) xchg rclb rex.WXB lods mov (bad) rex.WRX mov jrcxz push cs (bad) mov retq push jl (bad) lock cmp lret mov rcll xchg stos (bad) repz add in ficompl (bad) xchg or pop lods pop cltd sti int3 xor repz cmp fiaddl rex.WRB xchg sbb loope (bad) retq (bad) mov in (bad) xchg (bad) hlt sub jns xor cmp xlat sub movabs rex test mov icebp or pop or mov mov rex.B imul cmp rex.WR (bad) insb jrcxz xchg jp jns push mov and rex.WXB rex.RB rex.WRX es fidiv sub movabs (bad) jp movabs rex test (bad) mov add test rex.WB repnz movabs rex.RB pop loopne insl icebp enterq in (bad) loopne (bad) mov rex.W lea loop imul (bad) (bad) push flds (bad) loope and rex.RXB retq or fistpl sub xlat cmp sahf popfq rex.WRX loopne push rex.WR repz test pop rex.WXB lock pushfq (bad) mov add mov je (bad) (bad) leaveq fs imul mov mov rclb (bad) or rex.B iret xor (bad) xlat imul nop jne cld and cltd jno sbb retq retq retq imul sub and sbb mov cmp ja in shl or (bad) (bad) rex.WX mov fs pop (bad) in jae sti mov xchg jmpq (bad) int3 outsl pop jl sub (bad) xor rex.WXB rex.RB mov in (bad) out jns pushq shrl insb je outsb xchg or mov fsubrs jb loope test (bad) add xchg mov in enterq mov or (bad) cmpsl sbb (bad) out pop adc mov jno sbb mov retq mov shll xlat cmp lock jp sbb andb in scas xchg loop and icebp movslq (bad) (bad) outsl and jbe jnp sbb sub outsl (bad) jbe mov retq loopne mov lret (bad) sub (bad) addl retq enterq cmp push cmp fiadd mov cmp lods stos (bad) stos (bad) int3 imul xchg push mov std rex.WB or lahf rcr sbb xchg and and jmp mov pop fstp and xchg xchg xor jae movabs shr adc idiv sbb xchg rex.WR test or repz sub xchg movabs and (bad) jrcxz popfq fisub rex.R test mov iret (bad) cwtl in xchg fsubrs ss fidivr rex.WXB (bad) mov fwait enterq clc xchg (bad) sti jmp sbb lock jno pop jbe mov retq and imul pop (bad) cmc (bad) fisttpl (bad) fmuls add stc sarb stos imul mov jmpq fsubr flds add insb xor loopne hlt scas (bad) (bad) out outsl mov (bad) sbb (bad) rex.WRB pop repnz rex.R cmp rex (bad) loop mov rex.WR icebp xchg push hlt sbb leaveq mov repz test jmpq icebp jge mov rex imul jno cltd or rex.WRXB (bad) insl (bad) idiv pushq mov adc rcl sub xchg stos xchg fsts or (bad) mov (bad) int3 or and repz sbb lret (bad) mov pop add (bad) movabs rex.WXB rex xchg rex.WXB add fisttpl jb callq in sbb (bad) fildl jrcxz repz stos fs stc ja out rclb icebp fstpl bnd out lret mov jb (bad) jmpq int3 lods xorl mov movabs add xor (bad) cltd (bad) addr32 sbb test popq je rex.B loop (bad) (bad) mov xchg ss insl rex.X rex.RB rex.RX sbb cmp (bad) jbe sub pop xchg cwtl push sub xlat rex.RB add scas rex.WB loopne fsubrl add (bad) mov cli movabs loope jle int3 sub movsb retq (bad) setp push (bad) or rex.WRB rex.XB fs rex.WRXB and jnp pop (bad) (bad) fldln2 rex.RXB loopne stc cmp pushfq cmc (bad) mov add lret (bad) mov jb movabs sub roll (bad) sub xchg sbb (bad) (bad) int fdivrl outsl (bad) data16 or es push cmp callq movabs pop jnp rol jne add and stc jrcxz and and push lret xchg movsl pop push xchg (bad) xor leaveq (bad) rex.XB (bad) add sbb and mov (bad) outsb fs fldt rex.WRXB xchg mov (bad) xor lahf out insl loopne movabs rcll add (bad) in sarl sub (bad) hlt es addr32 adc nop repnz mov sbb in (bad) jne push (bad) movabs sub (bad) xor and (bad) roll pop out clc pushq (bad) lcall xorl iret sar jbe movabs fcmovnb jge retq std jo (bad) pop mov imul jbe (bad) xor cmc rex.W loop (bad) sub rex.WB jmpq inc callq (bad) rcl rcr pop push jg jae int3 add jmp sar jnp (bad) testl xor sub (bad) (bad) mov and add lock add rex.B xor jle fcompl movabs jne rcll jbe jl hlt pop and pop mulb jb (bad) sub cld fwait xchg mov std movabs sbb lret cmc cmp pop xchg fistl out xor or xlat mov movabs rex.WB mov add push rex.WR add test sbb rex.WRB push out rex.X rex.RB lods add fisub or movabs enterq rorl push cltd pop mov movb sub adc int3 movabs pop icebp rex.XB jnp movabs fwait (bad) push hlt (bad) and loope movabs cltd pop mov shlb iret xchg in (bad) rex.WXB rex.X fwait pop cwtl rex.B sbbl push rorl sub jnp (bad) rcll (bad) jo xchg shll outsb pushq (bad) loope (bad) dec je repnz add out pop or mul mov rolb rorl sbb mov jle callq add fist in rex.RX mov and jg jp (bad) cmp mov rcll or push in jno sar loopne rex.WB lock (bad) rex insb jle pop movabs rex.WB sub lahf fisubl mov cs fmulp xchg pushq jb xchg jg test fsubs push (bad) mov pop (bad) rex.WR ja xchg fnstenv loopne push (bad) jg xchg jb loope (bad) scas xchg inc add gs imul shr rex.X or (bad) add add loopne test jrcxz outsb out pop shll out rcrl (bad) lods (bad) pop xor test fs js sub sbb out popfq mov rex.RXB xor clc movabs out add movabs (bad) ficompl outsl jrcxz imul (bad) (bad) (bad) roll (bad) and rex.WRXB jmpq test cmc (bad) lods adcb xor rex.R sbb pop cli mov rcll imul (bad) lahf mov sub es ror (bad) (bad) xor int3 rex enterq fdivrs je (bad) cmp (bad) mov and shrl popfq mov mov lret mov fstpl (bad) rex.WXB and retq cli fcomi xor push retq fimul clc adc fiaddl cmp movslq lret mov or jae sbb fisubl int3 icebp (bad) sub nop (bad) push ffreep xor jle ror xor (bad) out out shr js std xor shll adc rcrl (bad) fdivrl jb repz pop ffreep (bad) fcomps rex.WRB (bad) rex.W rex.RX icebp enterq rorl shrl rex.X add xor mov jg repnz push and outsb (bad) movabs imul sub adc rex.XB or (bad) or cmp cltd (bad) xchg loop add add lret mov pushfq push cmpsb rex.WRXB shl and rorl pop cli mov sub (bad) je xchg rex.RX fidivr loopne rex in cli pop xchg (bad) jo push (bad) stos rex.WX lods (bad) mov test sysexit (bad) mov rex.RX imul xor (bad) mov (bad) adc int3 movabs rex.RX rex.B rex.WB and sub xchg adc cmp add lahf (bad) loopne xchg sar callq out (bad) outsb ja sbb callq xlat rol cmp movabs jnp xchg mov and test (bad) loopl and ficom clc mov fwait add movabs movsl pop mov xlat push (bad) lea (bad) lret (bad) iret shrl sub rcrl xchg imul jae sub cmp (bad) iret stc xchg add (bad) repnz movabs rex.WX rex.B movabs adc cmp rex.XB jo cs in (bad) mov adc pushq repz rex.WR cmp movabs sub rorl or and pushq xor mov shll divb (bad) jmpq mov rorl clc (bad) repnz out xchg and cmpsb xchg in sub test rex.B leaveq pop push (bad) pop rcrl or fnstsw rcll repz repnz jmp jl sahf xor rex.R out (bad) fdiv fs rcl jrcxz add mov mov retq mov (bad) cli (bad) test and outsl sbb xchg rorl movabs retq xor jmpq add xacquire (bad) rex.WRX rex.R jnp xchg xor pop mov (bad) out sub insb fucomi mov add pushq mov rex.R loopne lock xlat std and (bad) jp mov pop movabs and (bad) adc stos adc rex.WR test shl rex.B mov mov push pop xor leaveq mov rex.WRXB repnz add mov (bad) xor movabs cli mov repz stc (bad) ss loop (bad) imul pop int push vucomiss xlat cld out sub xor and add fnstsw adc cmp or (bad) jmp jmpq add rex.WB rex.XB sahf cmp pop cmp xor add (bad) test mov stc mov mov mov push rex.XB bnd test clc xor xor out cmpsl rex.WRXB jmp pop jrcxz,pn test sbbb (bad) shll mov rclb (bad) xor (bad) pop (bad) jp (bad) imul rclb (bad) mov rex.WR rex.RX int cltd add mov test leaveq stos movabs rex.RB stc fadds (bad) sbb repz in out imul (bad) rex.RB or je xchg mov sbb cmpsl rex.WR mov (bad) mov jno (bad) hlt add adc xchg rex.WR repz xchg adc (bad) (bad) adc (bad) scas movsb dec loopne (bad) xchg rex.B xchg icebp roll and stos test sub jmp rex.X (bad) (bad) xchg jle rex.WRX rex.XB and jae or fbstp or mov sub mov (bad) jae jle (bad) or jns mov (bad) (bad) cmc jp ss sar outsb test xorb and pop lret popfq (bad) jae mov mov cltd lret (bad) insl jo retq jb lods rex.B mov mov push add push rex.B int3 rex.X callq add pushfq adc sub push pop stc mov (bad) clc (bad) xchg cmc (bad) cwtl (bad) sbb in push invlpg (bad) (bad) (bad) (bad) sub add sbb add in pop movsl rex.WRXB int3 jp (bad) sbb movabs jbe add gs adc std rex.WRB sahf push callq jp icebp out retq movabs (bad) loop lret jno and pop decl imul jae fbstp cmc (bad) cld mov or je roll sbb (bad) rex.WXB pushq cmp repnz addr32 (bad) lock test retq jrcxz or rex.WX sub adc add xor push (bad) out mov bnd xchg rex.WB rex.W (bad) (bad) ror cld lahf push jge movabs (bad) rex.R cmp rex.WRX sub lahf push mov cltd add loopne rex.X jae mov (bad) (bad) idivb mov pop lock xchg cmp icebp mov rex.WXB (bad) retq add xchg cmpsb and xchg xorl xlat add fcmovnu mov adc loope (bad) fadd mov lret clc xor (bad) cmc repz add decl movslq fwait std and pop rex.RB push add mov (bad) rex.WRX rex.XB gs insb scas (bad) callq and test sub lock pop addl and pop (bad) stc cwtl insl stos jnp and (bad) jbe push std or retq (bad) movabs out (bad) js rcl xchg movabs sbb rcll std (bad) hlt push mov mov cmp insl fisttp sarl jne pop fs popfq push add rcll or movabs imul sub jrcxz stos (bad) (bad) cltd out rex.RB incl cld out xor mov and out rcll or (bad) jmpq (bad) (bad) rex.WRXB es jl pushfq add rex.R (bad) ja bnd clc push add cs addl loope roll (bad) fildll stos (bad) and xor ljmp movabs adc (bad) xor xor add xor pop insl rex.X rorl movabs mov int3 rex.RX mov xorl pop mov add pushq mov cmp xor movsb (bad) push movabs mulb or rex.WXB xlat or fadds fwait repz sub cmpsl (bad) (bad) mov (bad) cs push or nop xchg pop mov sub cmp ror fnstenv scas pop jno (bad) scas rex.WB ss cmp (bad) or cmp repnz lret mov xchg (bad) xchg fdivp cmc jnp js add mov pushfq mov test (bad) fucom cmp fsubp enterq mov rex.W (bad) jbe (bad) movabs mov rex.WR xor stos imul (bad) std jle mov sbbl add add movabs pop (bad) xchg pop out sub retq and adc (bad) lock (bad) outsb lahf imul stos cmp mov mov jl (bad) push repz cli jae mov adc int3 pop and retq rex.WRXB movabs scas pop rex.R rex.WB gs loopne jmpq and pushfq (bad) idiv shrl test rex.R loope mov icebp rex.RX mov iret stc loope rex.WX mov xor lods int3 pop flds pop or addr32 out movsl loope rol repnz (bad) outsb jo cmovo mov push mov push xor and cmpsl push adc or sub cld (bad) fwait ss movabs pop xor in notb push roll fnstenv sub fdivr loopne fsts mov lock rex.WRX jmp pop mov rex.RXB rex.XB retq mov stos push (bad) fnsave (bad) xchg sub rex.WB rex.B lock xchg incb (bad) rol lods sahf rex.RB mov subb mov hlt enterq rcll fnsave fist int3 cmp mov xor movabs mull (bad) or push mov jmpq rex.RXB push ja (bad) or jno xchg sti (bad) fcmovu sub enterq repnz outsb loop and retq lea add mov (bad) loop adc cwtl loopne movabs xchg stos lret js imul sub push sahf (bad) (bad) nop mov pop lret or rex.X stc xchg mov rex.XB jle subb movsl lock cli (bad) adc fidiv adc jmpq rex.RB mov roll or (bad) test andl and sub cmp pop clc clc push pop jnp hlt (bad) fdecstp push xor out movabs pop jns imul scas callq add mov sub jp sub loope and rcrb out add stos imul cmpsl cld lahf fcompl and mov and mov jno (bad) test fs test mov cld stc sub js in (bad) imul cli frstor loopne cmp in jl (bad) ss push sbb out repz pop (bad) rorl ja pop rex.WB push and sub lahf scas pushq (bad) enterq pop add retq jg out repnz (bad) rex.RX (bad) out sbb lret fstp scas and (bad) mov push out pop sahf rorl sub or xor sbb adc (bad) ja divl std shll sbb (bad) cmpsb ror pop xlat jne loop adc rorl jg (bad) stos sahf rcl mov xor pushfq rcr icebp sub (bad) out (bad) and (bad) add sbb jb repnz adc adc leaveq jrcxz rex.WB (bad) rol (bad) stc pushq (bad) cmpsb xchg divl sbb pushfq movsl (bad) cli sub mov mov pop insl outsb add or (bad) rcll rex sbb rex.RB out pop jo icebp (bad) test jb loope rcr mov mov adc jno in (bad) (bad) xchg (bad) callq cli scas hlt (bad) (bad) stos mov mov (bad) mov sahf add (bad) xor test ja fadd push callq mov lret cwtl sbb pop in repz xchg sub test out mov shrl mov push scas roll adc add pop loopne jno xchg sbb mov (bad) rex.W cmpsl hlt xchg rcl mov push or in jne cs jae pop xchg jrcxz outsl movsl sbb pop mov mov cmc add and and test jnp out push loop shrl (bad) fimul jo jb sarl push and lret imul jne adc popfq icebp sub cmpl xchg (bad) outsb movsb rex push jrcxz ja rex.RB (bad) scas rol xchg repnz out mov movsb mov fxch icebp or add (bad) adc push pop in or (bad) movabs sub loop std out out xchg popfq mov push add jb pop rorl mov jno cmp rex.RXB (bad) fcmovnb rex.R (bad) (bad) repz adc cmp out int3 data16 xor mov lret mov or adc and cmp xor (bad) (bad) xor push xchg cmc pop stos in loopne shll loope cmp clc out rex.WR gs lret mov (bad) mov lock cs shr xchg jnp xlat roll nop loop rex.R (bad) mov int3 clc (bad) jle push (bad) in retq cmp and cmp xor scas xchg ficom add sarl mov xchg mov ficom pop xchg (bad) scas movabs add cwtl rex.XB (bad) sbb lret xchg lret outsb mov movslq and sarl movabs cli mov (bad) iret push pop callq gs ltr (bad) mov (bad) outsl lret rex.WRX (bad) jae (bad) (bad) ss loope rex.B addl iret add movabs xor lods mov cwtl mov pop fnstcw rex.WRB fwait xchg (bad) sub shll cmc xchg fcomps cmpsb xor jo jge fwait test (bad) sar je gs mov movabs add (bad) rex.WRX add (bad) fsubs shrl or test movsl and cmp adc and xor mov repz (bad) xchg xor rex.WRB addr32 rorl (bad) movabs movabs pushfq xor (bad) shl or add lret mul (bad) (bad) movabs push gs rorl hlt pop movsl mov cmc xchg cmp pop rex.RX ss sbb cmp movabs movabs rol out (bad) cld pop test jbe or enterq fidivrl lret add fldenv fcmovnb jg addr32 int3 cltd (bad) cld mov retq ja push jne (bad) mov loop (bad) rcll test (bad) adc pop shll stos iret scas sub test outsl subb cmpsl (bad) repz pop (bad) callq (bad) repz (bad) mov scas or mov retq rex.RX imul (bad) pop movabs and mov jb (bad) ss rcrl adc sti cmp enterq or movabs hlt jns,pn push jg int (bad) mov pop and insb sti rcrl enterq (bad) (bad) jmp nop rex.RXB and xchg movabs sub (bad) mov add jo xor xlat rex.WB vminpd rex.XB jle movabs (bad) outsl or push (bad) rorl push (bad) movabs xchg xlat jrcxz loop jo push nop mov (bad) adc mov stc movslq mov pop shr hlt ud1 pop pushfq and (bad) rex.B and insb mov xor in neg sar rex.XB rex.WB sub cmpsl int3 pushfq rex.WRXB (bad) or or insb iret add or rex.B vpunpckhwd fistl or (bad) rex.R mov fst loope pop or sbb mov (bad) repz (bad) rex.WX xchg fildll (bad) movabs xchg sub sub fcmovb scas repnz (bad) je jmp lret cmp add (bad) xor or (bad) movabs rcll pop sbbb in mov clc adc sbb imul callq rcll mov lock push xchg insl or xchg mov adc (bad) fsub and js retq outsl rex.B lock xchg addr32 (bad) std int3 test and test add (bad) xorl jb fcmovnb add push push mov mov lret (bad) mov loopne sbb mov (bad) outsb and movsl sahf scas xchg (bad) sub sub ror cltd xchg mov rex.WXB jae mov xchg fnstenv push mov mov push cwtl sub rolb retq (bad) lods ds lahf jp lret jl push movsb gs mov and xor (bad) movabs xor int rex rex.XB scas ss lret rex.R sub rcrl movl rcr push mov sbb int3 sbb es out sub jg xchg xchg rex.W gs pushq rex.XB lods imul rex.WX scas lahf je add xchg rcl jge push loop (bad) jrcxz pop cmp (bad) insl push adc xchg or movabs movabs mov add fstps or jbe out cmp sub movslq mov loope icebp outsl int3 pop xchg (bad) fxch bnd (bad) jbe scas loopne mov movabs fdivrs repnz shll cmc stos (bad) pminsw adc push sbb hlt rex.X test (bad) scas fs (bad) sbb cs and push iret punpcklbw (bad) jo adc xor cli (bad) sbb test pop cmpsb jns xchg (bad) sarb mov fdivrl fwait (bad) imul xor stc push add jrcxz sbb pop in pushq mov roll pop jae mov scas (bad) hlt adc fwait mov (bad) mov pop cmp gs lahf mov rex.WRXB in xchg (bad) rcll enterq jg loop pop mov adc out adc pushq sbb mov or sub xor xor (bad) rcll jns sbb lret rsm fstl cmpsb mov retq jp (bad) xchg jl push (bad) push (bad) jns xchg add rex.WRX pop mov movabs cmp xchg rcr sub imul out repnz pop pop and pop pushq sbbl rcll in sahf jno (bad) sbb popfq (bad) insb repz add ss icebp rex.B adc fistl (bad) xchg rex.WB and fildll and add and loopne (bad) or adc in rex.R rex.WR pop notb loopne and leaveq sub cmp push sbb jmpq test (bad) retq push fwait andl rorl cmp movslq mov jno and (bad) cmpb lret jmp leaveq push popq jp rcrl jrcxz,pn mov stc mov mov jo jbe (bad) mov push roll jae mov (bad) pop ja je sahf out add nop fwait rex.WX andl pop std jrcxz xchg shll rex.WR sbb mov rcrl mov movsb mov sbb js test fmul rex.WXB xchg (bad) adc sti (bad) xchg outsb stos repnz out int3 je and imul enterq fsubl push retq rex.R data16 (bad) stc (bad) ror cmp (bad) fsubl or xchg and (bad) xor mov push push std loop clc and mov (bad) and addl cli retq sbb xchg (bad) and xchg jmpq movabs rex.WR (bad) (bad) mov (bad) roll (bad) shll movabs fsubs push (bad) (bad) outsb rex.X xchg mov pop push rorl (bad) test pop cmp (bad) lahf je mov movabs cmp rex.B loop fdivs (bad) xor and mov pushq punpckhbw ss and (bad) retq movslq sarl or push pop xchg rex.WB (bad) enterq add rex.B movabs out lea ss jne callq mov int3 sub lods rex.WX data16 outsb xor (bad) repnz std js adc rex.WRB int3 rex.RX (bad) mov imul loopne pushq outsb cld mov rex jrcxz xor scas push mov (bad) or xor (bad) sbb retq rex.RX mov shr outsb adc ja add rex.RXB xchg jno rex.R rex.X push jae rex.XB mov rex.WRX ds xchg rex.WB (bad) push add out jae rex.WRX retq lahf jbe rcr rex.WRB mov (bad) cmp mov xchg (bad) sub (bad) pop mov repnz jnp adc repnz jp or rex.B xor sub adc out xchg (bad) sti es popfq or xor mov (bad) (bad) lahf xchg add mov mov mov adc sbb rex (bad) cmc sub push rex.W pop mov cmp jrcxz movabs sbb fisttpl jl adc (bad) add adc pop int mov jnp add add cmpsl sub xor xchg repz test rcrl (bad) repz lods shr rex.RXB (bad) js (bad) fs jne outsb add push pushq mov (bad) js loopne push (bad) cmpsb stos rex.WB (bad) adc icebp rex.WR rex.B repnz retq adc xchg add rex.WRB push rex.RB jo rex.WX adc or mov movabs scas outsb loopne test push roll jnp (bad) mov rex.B or rcl js cltd movslq jae sub sbb mov (bad) push cmp mov lock fldt std sbb mov imul (bad) mov push jle add cwtl lret enterq iret add (bad) bsr shl mov or and rclb rcrl fdivs cmp xchg jmpq in lahf sbb loop jl sub cmp rex.WRB xchg js repnz (bad) push cltd (bad) cld cmpsb (bad) xor lret mov add gs (bad) je leaveq int3 loop callq mov js rex.WX rex.B jno cmp jo jg (bad) cli shll mov sarl rex.WR sbb pushfq std movb or and (bad) xchg jns,pn or or mov sbb retq cmp iret (bad) mov add (bad) subl stos (bad) ffree insb and mov lea push mov or add shll cltd fucom test shll addr32 retq or add jne callq rol sub cmp mov push orl sub xchg sar jne jrcxz rex.B test pop cmp (bad) mov (bad) popfq pushq out pop in fstl jl sbb and cmp jno rex.RX shrl rex.WX xchg rex.B or callq shrl mov mov clc pop movsb adc push xor rex.XB cmpsb adc ss in movsl push (bad) jbe and retq movsb movslq (bad) rex.RXB push jmp jbe ror cli rex.B or (bad) (bad) mov mov jmp xchg add fsubrp xchg es sub retq pop cmc mov mov lahf rex.B es sub jbe retq pop mov retq (bad) add movabs rclb jl out pop sbb and rex.RXB rex.XB (bad) sbb adc sahf iret lods stos out ror and pushq jmp mov or sub movabs (bad) rex.WRX lods je (bad) sarl (bad) (bad) (bad) mov pushfq loopne rex.WRB movabs jo clc (bad) push data16 (bad) cwtl (bad) add leaveq rex.RXB add rcrl cmpsl rcrl loope movabs cmp (bad) mov movabs xor not gs rex.WRB cmp jmpq movabs add sbb rex.R shrw rex.X cmp adc shll es sub adc je jl mov (bad) jp insb sub (bad) shrl ds movabs iret fincstp xor (bad) adc rex lock mov gs repnz rcrl xor iret mov (bad) scas rex.WRB or pop shrl rex.WRX mov xchg pop cmp out leaveq jl retq rex.R outsl out (bad) mov add fist fdivrs pushfq xor xor rcl retq jg mov sub rcll subl xchg shll lock rorl add pushq outsb rorl rex jrcxz push sbb cmp mov mov rex.WRX xchg (bad) rex.RX mov rex.W lock rex.RB movabs cmp gs push sub rex.WRXB (bad) or (bad) adc mov (bad) movabs fcmovu (bad) pushq (bad) je loop (bad) jno push scas adc jge xchg rex.WX insb xchg mov repnz rex.B pop lret (bad) or test xor (bad) mov jns jecxz cmpsb cmp adc icebp je mov out (bad) pop test mov cli (bad) xor repz callq rex.RB cwtl add (bad) je pop scas xchg mov cmpsl fiadd je and shll in pop push (bad) callq sub jg mov jrcxz xchg rex.RX xchg hlt xchg test fild (bad) sub xorl repnz jns (bad) xor jne lods es (bad) push enterq movabs (bad) fisttpll mov push rex.WRX cmc mov jrcxz adc mov sbb cltd (bad) retq rex.WXB nop outsb imul shlb cmp xchg repz cmp xchg imul mov xchg xor or enterq add or mov pop pop insl pop (bad) rex.WX rex rcrb repnz data16 insb rex.WX fistpll fimul xor (bad) xlat add rex.XB int cmp retq movabs fimul sub mov clc cltd lea sub (bad) fimul nop enterq (bad) add cmc add rex.WR movb lret ficompl (bad) cmp adc sub cmpsb loopne jg es add xor adc adc or mov fisttpll rex.WRB jb out sbb cmp and cmc callq push fsubl xor icebp int (bad) jmpq in loope (bad) and sarl (bad) or movabs mov (bad) pop (bad) and xchg shr test (bad) sarl rcl jo xchg movsb pop or (bad) dec insb cwtl cmp rex.WRB jnp (bad) cmp repz (bad) sub icebp addr32 rex.WB (bad) ss xchg insl and fs std mov cmpsb add shll jmpq xor shll xchg (bad) pushq movslq pop rcll (bad) (bad) clc xor enterq rex.WX xchg jo sbb jle cmp (bad) lock (bad) fbstp shlb mov ds (bad) mov (bad) (bad) movabs and scas sbb je xor movsl add insb sub rex.WRXB (bad) movabs rcll callq sarl out pop and (bad) push lret push sbb jl sub push loop shll xlat mov mov add (bad) iret cmp (bad) mov (bad) movslq push (bad) add rcll xor (bad) movabs cs sti ficom insb jns mov out ja pop sbb sbb (bad) xchg push cmp (bad) (bad) rolb add add (bad) lret rcll movabs pop xchg or add (bad) fwait add rcrl adc add rcr gs rcrb test mov lock int mull sbb callq ds popfq (bad) vpsubw (bad) (bad) fs adc or lret add clts sbb xor test fxch lret sub (bad) sub jbe out cmp repnz stos (bad) cmc (bad) cltd jrcxz sarl scas add (bad) xor sub shr cmc lods push pushfq adc sub and loope mov in adc xchg test push std pop loopne je movsl int or rex.WXB ds rorb (bad) iret movsb shrl add jns (bad) in movsl adc lods popfq rex.B cmp pop cltd or push sbb rex fs cltd sub rex.R cs rex.RXB fstpt insl push shll out fldcw pushfq nop jle imul jns,pn pop xchg mov lods fiaddl adc roll callq test out iret imul rex.RX (bad) out retq fs (bad) pop pushq push jrcxz mov mov mov test (bad) xor adc jmp shld (bad) jb cli shrl retq xor rex.X clc mov xchg enterq mov cmpsb fisubl mov pop jo rep add movsl (bad) rolb rex.B fldenv pop jnp sbb xchg lret (bad) jno movsb xchg scas insb (bad) xor add rex.WB sub (bad) jmp xchg or mov sbb pop leaveq f2xm1 jns (bad) ss or decb (bad) (bad) pushq rex.WRXB mov shl pop mov imul jle (bad) and fsubrl push (bad) inc lods jl insl ror retq or sar pop jns imull sub movabs xor sub shl mov (bad) neg add ss movslq sbb pop movabs jle roll add out jno adc mov (bad) mov loope sti sub out rex.RXB (bad) jge (bad) and subb push and push rcll cmp sbb (bad) lods (bad) jge nop orl cltd outsl xchg (bad) cmp cwtl sahf rex.WX and xor mov xor mov fiaddl add shrl shrl (bad) adc (bad) pop shrl push xchg enterq (bad) adc fildl push movsl rex.R sbb incb icebp cmp repz mov sbb scas add movabs (bad) jae rcrl (bad) sarl (bad) pop mov mov movabs adc (bad) adc popfq mov imul (bad) repz rex.WB cli movsl test mov sar add and sarl movabs sub (bad) mov callq (bad) sbb insb (bad) xor rex.XB jnp enterq lahf sbb (bad) repz ffree loope leaveq icebp movabs jp add movabs fstpt jo add std stc int3 mov (bad) loope or push leaveq jmpq lods sub mov imul cmp rex.W test jb ja xor rex.RX fucomp clc and insb popfq (bad) push xor rex.RXB and xchg pop lea vmovups test (bad) movslq xor pop fnstsw mov cmc movabs int3 xlat mov cmp jle (bad) je hlt mov jmpq jl sbb scas and rcl jns and or (bad) sub (bad) loope (bad) scas mov add data16 (bad) (bad) cmp outsb movabs mov test sti shrb add xchg rex.RXB test (bad) iret (bad) jo (bad) adc lret rclb hlt cltd (bad) or or js sti sahf sub push fs fdivrl adc and (bad) callq scas incl cltd (bad) repnz mov fwait sarl addr32 stos cmp cmpsl or push xchg cwtl mov (bad) (bad) and nop rex.RXB rcll and out (bad) (bad) int3 (bad) test rex.WX pop insl mov jg in divl ffree rorb pop xor lock adc int3 push sub (bad) xor je mov int (bad) leaveq adcb in cmpsb and xlat (bad) cmp (bad) jns mov fidivr out sti rcrl (bad) loope bnd rex.WRXB retq icebp scas in fcmovb xlat out (bad) (bad) mov mov (bad) rex.W int3 (bad) cmc rex.B xchg addr32 movabs fnsave mov retq test lods push pop sub iret (bad) add or sarl xchg icebp jge mov test adc popq jno fist loope jbe cmp repnz jne mov (bad) mov or fs lret movsb cli sbb imul out jo or imul rcll loop rcr sbb mov and (bad) jne and mov stc xchg add or jbe ds (bad) sarl jns and movb int3 test cli fwait push adc sub insb repz pushfq rcrl fiadd rex rex.WR out sti (bad) xor int xor push pop imul (bad) rex.WRB (bad) in pop xchg rex.XB shll mov rex.R (bad) (bad) rex.XB (bad) rex.RX mov movsl xor movsb rcl rex.WRX mov movabs or add (bad) mov movabs xor movslq rcl in cmpsb jg (bad) jne (bad) mov cmp shll sbb and (bad) jbe loop adc rex.WB outsl (bad) sarl push in jp movabs rex.WB repnz mov xorl frndint rolb fisubr rorl mov ljmp scas idivb mov test popfq add rex.W rex.R frstor sarl pop fdivrs (bad) xchg pop (bad) test sub cld (bad) mov xor out retq mov (bad) cld pop stos pop (bad) xor jl sub callq (bad) int3 mull mov mov sbb and (bad) cli fstpt cmp rex.XB fmulp retq cmp jae enterq add (bad) movabs sbb mov jge or fsub shlb int3 rex.R cmp add (bad) lock jle (bad) iret sbb pop pushq lods roll adc xor push mov jmpq jg push lods cmp (bad) mov stc xchg insl pop push lock jns jmpq shrb pop movabs add outsl orl jl sbb mov jge ror rex.WX pop lahf (bad) (bad) int3 clc lret mov cmc (bad) xor popfq xlat sub xor cmp retq add mov insl jmp sbb insb (bad) roll sarl push mov xor jns shrl (bad) jp or xor or jae mov xchg lret fistpll mov shll adc fisubrl stos clc fdivs movabs and test test stos (bad) rex mov scas mov fstps adc or jge (bad) mov (bad) ja or sti mov sbbl sti enterq (bad) jno sub stos rex.XB lret mov mov lret rex.WRX (bad) mov push rex.RXB or movsb loop ss iret (bad) jbe xchg out sahf fistl loop (bad) movabs insb mov and mov pushq xor cli cmpl pop xlat lods mov pop add adc xor movslq leaveq rex.WB repz retq (bad) or imul insl paddsw xor (bad) cltd js cli sub int3 retq push int xor iret fadds outsb xor ss xor cwtl retq (bad) and (bad) pop cmp leaveq rol xchg loope int3 sbb fldl rex.XB sbb pop in rol ss outsl jg fcomi rex.B scas shl stos add sbb xrelease cmp pop sar or rorl (bad) (bad) jbe lock sub mov sbbl mov pop rex.R sub icebp rex.X (bad) int3 (bad) xlat std roll loop rol movabs (bad) rex.RX lret xor mov shr loop xor mov (bad) data16 rcrl out xor rclb rex.RX (bad) (bad) sub rorl xchg mov jge fwait rcrl sbb (bad) pushq push pop outsl ror (bad) movsl rex.WB lahf cmpsb mov (bad) and rol push fiaddl mov adc roll fldenv cmp insb rex.X retq subl rex.RX out ucomiss retq mov mov mov jbe sbb pushq rorl sub icebp (bad) movsb mov lret sub rex.RXB mov (bad) loope xchg jmp cmpsb setge rex.R mov xchg icebp or sub add imul sub pop xchg mov int pop mov mov shr cmp hlt std sti or (bad) (bad) add xor (bad) js scas xchg sbb xor (bad) jge push (bad) add cmp (bad) (bad) sbb cs hlt and movslq (bad) jmp iret mov mov loope fcmovb pop push rcrl test (bad) push clc or (bad) cmp je xchg stc pop rex.R mov add (bad) roll mov mov fadd hlt stc out xchg clc scas fwait mov (bad) rex (bad) insb rcll add lods xchg mov jnp xchg enterq pushq and sub in (bad) (bad) rex.RB rorl xor push push out fs lcall fidivl in movabs cmp mov loope (bad) sub mov sbb adc (bad) loop movabs pop ffree rcl lret clc (bad) ffree jmp rex.X mov sarl (bad) (bad) xor sahf mov rex.B mov fildll outsl jl xchg jrcxz pop movsb or (bad) sbb ds jmpq (bad) rex.RB lea xchg bnd rex xor outsl hlt (bad) rcrl rcrb lret shll xor outsb sbb fs jnp xchg adc insl (bad) xor or (bad) flds test cmpsb jns test rorl sub (bad) or xor scas jae faddp sahf in xor std (bad) pop sub xchg xchg sbbl (bad) out sbb (bad) fwait rex.XB (bad) loope leaveq pop (bad) xor xchg icebp sub mov lret insl rorl mov cmp fs xlat rol (bad) mov movsb lock rex.WRB mov lret and movslq fsts insl (bad) rcrl pop lods mov (bad) sbb xor rex.WB shrl (bad) pop (bad) xchg mov int (bad) jp sub rex.B roll push sbb enterq add lods leaveq mov sbb shrl fisubl lret sar pop rex.WXB add repz pushq rcrl mov (bad) shll mov pop pop roll sub shr stos mov or in sar rcl loope cmp sbb xor mov adc shll adc out or (bad) leaveq cmc test rex.WXB repz pushq xchg cltd (bad) and outsb or xchg (bad) xor adc shr (bad) outsb xor rol sbb fild int mov mov add (bad) sbb cld data16 (bad) mov (bad) add (bad) or stos outsl mov movabs (bad) hlt (bad) xor imul shll fdivs out sti mov jb jmp and pop xor mov (bad) (bad) sbbb cltd rol rex.W sbb addr32 es xchg scas (bad) pop rex.RX ja (bad) (bad) rex.R stc rex sub jrcxz sarb sbb repnz test in add jge and test iret loop ja rol cld sarb (bad) adc in shrl xorb (bad) xlat push jp sub push fwait sti hlt retq mov (bad) rolb jbe stc stc rex.XB lret rex.WXB out in dec xchg lret loop xchg rcr sbb (bad) xor rex.RB rex.WR pop scas (bad) es and (bad) rcll or jg or movabs cmp mov adc (bad) retq jmpq mov pop test rcl movsl popfq mov add jno iret xlat sbb and insb adc movsb jne mov xorl jae and and mov and out imul pop rcll sbb rex.B (bad) mov rcl rorb loopne iret mov mov cwtl out int3 rcl int3 (bad) cmpl lods or jrcxz in xlat jbe mov jg cmp cltd movabs or sub sbb out rex.B lock fidivl adc add cmp mov jo pop and pop jrcxz retq lock adc (bad) xchg sub roll jae imul dec movsb fimul rclb xchg rorl movabs (bad) cmp xor xchg jb cltd stc sub movabs cmp shr sub (bad) negb xchg xchg movsb xchg ffreep scas mov sub mov jb rex.WXB rorl in fdiv popfq fcomip sarl jmpq iret imul pop (bad) loope rex.WR sti (bad) rolb sub nopl outsl test rex.WRX cltd ftst xchg xchg jmp rex.XB sarl add pop enterq jge mov leaveq int3 (bad) adc and std (bad) rol (bad) test fstpl clc (bad) rex.X (bad) out sarb add rex.WRB push sub retq jg pushq xchg mov repz leaveq js sahf sbbl int3 jbe (bad) es jnp subl mov fwait adc and xchg divb sub movabs mov (bad) test test fwait retq in adc pop push roll callq outsl rorl xchg test shrl lods rex.WXB xchg loope (bad) fidivl (bad) ja pushq bnd or and sbb sub repnz (bad) (bad) movabs loope pushfq xchg repnz mov or sbb and adc rex.RXB fs pop std outsl (bad) mov mov push jbe add sbbl mov movslq loopne rol ds and mov adc sub mov push (bad) and insl (bad) cmpsl pushfq (bad) movabs (bad) and loope in push outsb test mov pop roll mov shr or or pop lret push cmpsl rex.XB rex.WX and movabs sub outsl xor mov sub xchg (bad) sahf pop jp fdivs pop sarb stc (bad) cwtl test (bad) (bad) leaveq in rex.RB movsl (bad) lcall shrl lea (bad) pop add ffreep movabs xor fcomps pushq rex.W sbb movabs (bad) (bad) cld xor (bad) push ss mov lods ffreep fcoms es int3 pop sub jmp (bad) test jno mov sbb jo cmp (bad) scas enterq push (bad) rex.WX rex.RXB add push cwtl rcll inc movabs repz test or movl mov rex.WX (bad) sbb jnp stos cli push push sbb mov repnz (bad) sbb xchg movabs cli (bad) mov movabs and sbb jo jmp fstpt mov pop cmp test jns flds int3 negb mov jg jrcxz mull (bad) pushq nop movslq (bad) rcrl cmp loopne in rex.W xor cwtl (bad) cmp cltd jmp lock mov shll (bad) push out (bad) sub imul jge out (bad) xor jno push mov fistpl rex.B xchg out xchg shlb retq mov shrl mov (bad) scas cmc rex.WB sub jmpq rex.XB js jb mov xor cmc cwtl lods or (bad) iret sbb and lret xchg cmc jae (bad) mov pushq mov mov (bad) (bad) in sarl stc rol fnstsw rex.WXB std rex.XB rex.WRB jge push adc xchg sub fnstcw push hlt xchg (bad) (bad) sub add movabs (bad) mov rex.R pushq (bad) rorl negb jno enterq pushq mov pop fild loope mov mov mov shr movabs out (bad) rex.WX sar cli adc lret mov out nop add xor sbbl int mov xchg xchg push push js rol add jg (bad) push ss in jb and icebp retq rorl in fbstp fistl jmp rex.WRB jb and jne sub rex insl adc mov retq pop pushq sbb cmpsb fildll rex.X roll rex.RX in ss adc shrl sub ror repnz imul shrl mov stc (bad) (bad) jae js mov cmc (bad) je and scas or (bad) sub rcrl mov xchg shlb rex.RXB stc repnz insl shrl lret rep (bad) sub (bad) imul (bad) int3 mov shrl push fadd outsb (bad) mov callq xlat mov mov sub (bad) or lret adc jne fnsave or cltd mov cwtl mov (bad) jno bnd int3 jmpq xor popfq push enterq pop rorb je in popfq bnd sbb sub fdivr fidivl stc pop sbb sbb lock push popfq mov rex.WRB rex.RB rex.XB scas repz (bad) xchg push es push mov sbb pushq shl add lahf sbb cld xchg insb mov rorl loopne xor jge out (bad) xchg xchg mov rex.X add enterq fimul mov pop sbb sbb sbb outsb mov mov (bad) sbb scas jle rorl push fisttp stos ja rorb (bad) or push xchg jp hlt cmpsb adc (bad) fnstenv in mov sbb mov rorl (bad) movsl (bad) lods rex.WXB addr32 jmp xor (bad) (bad) repnz cmpsb (bad) and fs cld xchg fstps imul add add pop stos (bad) rex.WRXB loope (bad) (bad) jne (bad) xor retq ror decl (bad) (bad) (bad) (bad) rex.RXB fs mov (bad) mov cmc cltd rex.WX rcll and hlt je mov sar adc mov sub add or or pushq pop cmp cmp (bad) (bad) (bad) jb cwtl xor xor xchg movabs in or (bad) outsb pushfq xchg lods mov (bad) xchg fsubl (bad) (bad) clc push cltd stos jbe hlt xchg fstpl cli add sub xchg mov rcrb jp lock xor pop xchg std loopne and lock loope jmpq jb pop (bad) fidivr rcll jmpq ja cmp ltr stos add mov rcl jae sbb and push fnstenv (bad) sbb (bad) outsl rcrl jmp cmpsl (bad) xchg rex.WB mov roll sub lret enterq add (bad) out lcall fidivr add jg cmp xchg add (bad) sahf xor or (bad) leaveq (bad) out cmp xchg incb or int3 lret fldt movabs sbb and es fwait (bad) or xchg lret pop mov icebp cmc sbb orb sarl add fstl and movabs std repz lret js sahf push adc in movsb rex.X rex.B jp (bad) ss (bad) movsb mov icebp jg int pushfq rex.X lock (bad) roll xchg cmp imul (bad) cld jne (bad) pop pushfq rcll out rex.WB rolb test (bad) int (bad) mov push out negb repz push lock xor imul push pushq outsb mov je repz rex.R adcb je (bad) mov in test (bad) xchg (bad) cwtl imul callq push movabs clc (bad) sub sar xchg mov sub xchg (bad) (bad) pushq (bad) callq (bad) (bad) scas jg imul fs adc addb mov mov mov shll push sahf mov mov movsb repnz out mov rex.W add mov push negb cmp rcr cmpl mov push (bad) andb lret iret lahf pop mov sbb rcll add (bad) mov push (bad) or shr stos xchg icebp rolb (bad) cmc (bad) xchg movabs mov movabs (bad) cltd lret jns push or jne jae add push test mov add lret pop (bad) xor ror sub (bad) incl movsl retq fwait stc rex.B cmp mov sub and push sti out sub (bad) rex.WX (bad) pop cs rex.X rex.WB rex.WB repnz rex.RXB sbb pop mov and cld test xlat hlt hlt push push (bad) xchg mov or cli movsb sbb rex.X or mov sub rex.WXB jge outsl mov mov adc xor mov (bad) movsl add xlat mov stos fild (bad) (bad) int mov int3 stc cmpsl rex.WR rex.WRX (bad) fcoms rex.WR jo sbb mov mov retq (bad) or cld mov cmp lods sub clc (bad) rcl (bad) sub lods movabs jp xchg sahf outsb movsl js sbb add rex.RB test jno shll loopne movsb lea mov mov xor sbb rex.RX jmpq and xorb rex.RX shr rex.W repz retq mov add rex.W loopne or int rex.B mov mov callq jno cwtl xorl iret fwait add (bad) xor out sub mov cmpxchg cmp jo in adc test outsb movsb mov clc lock (bad) (bad) pop movsb (bad) (bad) insb ss movsl leaveq retq push cmp retq (bad) imul push and movabs mov repnz (bad) rex.R pop jmpq sahf test mov notl imul (bad) movabs mov loop rex.RB outsb in out (bad) lock outsb mov jg cli movabs leaveq icebp jae pop or loope lods callq callq rex.WRB rex.B sub gs stos mov int rex.B int3 xchg shl sub roll setge add orb data16 jne sbb (bad) (bad) movabs repz movabs rex.WB in and add lods test mov enterq xchg lea in ds pop mov in (bad) movabs or lret (bad) fisubrl (bad) int ja gs js jne sbb pushq mov (bad) and (bad) add (bad) ds xor rex.B fsub adcb pop jns js mov mov fnsave int3 rex.B rex.W xorl sub movsl mov rex.RX jae pushfq rex.WRX mov rex.WRXB mov js (bad) movsl push or cmp leaveq rex.RB (bad) jae xchg mov lock lock adc rex.WRXB mov rex.XB adc out jbe test hlt (bad) in in jp js add rex.B mov lods adc xchg vandnps rex.WR outsb add int3 test mov xor rex.XB ffree out rex.X (bad) in sahf rex.X rex.WRX mov (bad) (bad) pop jmp (bad) cmc push mov fmul jg (bad) lock loope leaveq loope rclb sbb test rex.WXB movsl sub (bad) rex.WB jge idivl mov rex.W callq (bad) js (bad) rex.WRXB in (bad) and (bad) mov data16 add pushq add out decb sbb add movslq movabs pop data16 or mov fstl mov imul (bad) in rex.WX movslq sbb pushq test movabs in in leaveq movabs cwtl mov add and fcoms (bad) sub jmp push notl (bad) ss loopne (bad) (bad) jmpq cltd movabs (bad) test adc fiadd rorb or fwait pop sub lahf movabs (bad) xor jo (bad) sti fist in sbb rex.WRB bnd movabs imul xorl rex.WB mov (bad) (bad) mov sbb (bad) lret push out add int3 add lahf xchg hlt test movabs fldenv pop push shll std js stos loop rex.XB cmp mov jl sti movabs (bad) rcrl cli xchg (bad) jae lock lret (bad) cmc cwtl and mov mov shll and sarl push (bad) roll enterq shl xor test mov jmpq icebp jle (bad) fistl sarl mov (bad) iret lods mov adc jne scas rcr lea push cmp imul roll rcrl (bad) pop jrcxz rex.WR mov rex.WX mov mov and (bad) retq retq insb std (bad) xchg orl mov lret (bad) lock lcall rex.B rex.WX sahf loopne xchg (bad) data16 (bad) scas fisttpll rcrl lret sti sbb jp or lods add cmpsb loopne jp cmp jp jrcxz pop sub int3 andl movabs mov test (bad) mov out rex.WRXB jns movabs xchg cmpsl leaveq xor cmpsb xchg enterq in rex.RB jns stos sbb adc cs cmp xchg sub int3 stc push (bad) rex.WRX clc jne (bad) int3 (bad) mov push (bad) rex.WR cs movslq ror sub xchg repnz movabs add retq cmpsl rex.W rex.RXB or stos mov pop sbb pop out add cmp push movabs rex.R rex.WRB rex.XB mov (bad) fisubr rep or movabs pop mov sub push mov ja xchg sbb sub and mov mov cmp jbe mov (bad) fbld fnsave rex adc and push mov scas (bad) insl test pushfq repnz gs mov xchg jle (bad) jae stc imul movabs cltd xor (bad) xlat xor rex.B (bad) outsb testb rex.WR lock mov sub int3 xorb add (bad) cmc test jmpq faddl mov fdivl pop mov (bad) leaveq rex.WR rex.B ds cmp sub mov mov sbb int fsubs fs pop loopne and mov sti rex.RX addr32 mov fnstsw (bad) xlat or push imul mov jo jmpq stos mov rex.RX stos (bad) sbb test and rex.WRX mov and scas andl test or shrb (bad) out ds mov push gs or xor jno iret enterq mulb push rex.R repz rex cltd (bad) or stc jae cmp (bad) pushfq jns pop mov (bad) in fldcw mov scas outsb push rex.W out cvtdq2ps ror enterq jp pop add jmpq mov xchg int ss jrcxz mov insl sbb fcoml cs int3 outsb data16 movabs mov lret xchg movsl adc retq (bad) hlt sti repnz stc shrb in cmc fwait lea rex.WX xchg rex.WRB mov roll outsl pop rex.RB ja loop loope mov fs mov (bad) rolb lahf xlat sub xchg addb jge or shrl adc ds pushfq mov (bad) iret rex.X xchg jg movabs sub mov and (bad) jno fldl2t mov jae ds (bad) mul stc int3 lods shrl rex.RXB es loop or sbb or callq lods roll rex.RX rex.WRX (bad) (bad) xchg mov cmpl cwtl xchg (bad) ss mov sahf add xchg (bad) pop cmp and decb xchg mov cmp adc fs shll mov (bad) mov cld (bad) and xchg (bad) sub movabs cltd xor add (bad) stos add rcrl (bad) adc lret test cmp jo sub (bad) (bad) xor (bad) pop add (bad) cli shll xor cmp mov (bad) sbb sbb out (bad) cltd mov incl push adcl test jns adc (bad) jmpq nop shll rex.B rol (bad) add imul repnz sbb sbb adc int3 mov xchg test rex.WRX stos (bad) xor int popfq jge xor add (bad) shrl or add rex.B lret mov stc mul sub cmp push xor int lret push (bad) int3 jne and rcrl mov cmpsb lret outsl (bad) lock roll rex.R rex.WRX or rex.WB pop pop jp adcb jmp sub xor sub rex.XB (bad) mov movabs shll rex ds fstpl movabs add and rex.B xchg and retq or sbb rex.RB mov scas popfq xchg add mov or movslq (bad) xor retq add sbb gs (bad) rex.WRB movabs callq or rex.B (bad) (bad) test in addr32 sub lret or add stos and shrl (bad) (bad) sub (bad) add stc lea (bad) popfq mov lock shlb jnp (bad) movabs loop jno pushq mov sub (bad) push out rex.WX or rorl (bad) bnd (bad) sub movabs mov (bad) rex.WRXB sub cmp std add or sbb (bad) hlt rex.X rex.WXB scas xchg adc pushfq (bad) jge (bad) jbe cmpsb sub cs movl movabs cmp and adc adcl mov mov or ja and (bad) mov rex loop jae shl repnz jnp rex.WRXB xchg rcrb pop jrcxz rex.RX sbb test and mov rex.RXB (bad) (bad) rex.B cli lret fnop (bad) in pushq jge mov rex.XB mov (bad) or push cmp pushfq rex.WRX (bad) shl adc ja movslq xchg xchg rcll xchg imul test rex.XB repz rex.RX movabs movabs fisubr xchg jo rex.RX scas (bad) stc mov fbstp cmp rex.WR sahf movabs (bad) (bad) (bad) icebp cmp xchg (bad) and or test add xchg pop rcr fsubr mov repnz sbb pop jae sbb gs mov (bad) (bad) jmp in pushq int3 lret sub cmp rol sub xchg add repz cli lahf (bad) jns rex.WR imul mov shlb jne (bad) mov and adc cmp pop gs popfq (bad) jle rex.XB (bad) int3 (bad) scas sbb rex.X (bad) mov mov add out rex.R data16 repnz movslq movabs jmp (bad) (bad) xchg (bad) sbb sbb jl rcrl rex xchg pushq (bad) xchg incl rcrl sub std retq movb hlt xor xchg and rex.WRX cs (bad) jg shrl lea jnp or (bad) xchg (bad) jne xchg rex.W adc rex.B sub rorl push int3 repz rex.W (bad) in jae (bad) pop pop popfq shrl or sbb add stc enterq retq push mov (bad) push mov xchg jmpq (bad) and cld rcll out test lahf cmp movabs loope adc (bad) sar mov repnz push cmp (bad) (bad) lods scas cmp cmpb cmp (bad) cmp (bad) cwtl out movabs outsb push mov sub push (bad) (bad) in add (bad) (bad) ja jle mov roll adc (bad) icebp pop adc (bad) add cwtl rex.RX cs stos pushq jg jg outsl lods fcoml (bad) in test (bad) test (bad) sub xchg sub gs out and adc lret sbb xor xchg (bad) (bad) sahf xlat (bad) shr je pop cmpsl pop mov mov mov int3 rcrl push sbb jmp retq sub stc mov rcl mov adc add test xorl insb roll rex.WRXB mov add rorl fcmovne jmp shll jrcxz lret push xchg int3 adc sub (bad) idiv mov rol outsb ds (bad) mov sbb loop jb mov xor cmp movslq leaveq lret sub js push and sub rex.X rex.WB sarw pushfq ss movsb and es leaveq outsb rex.W xchg xadd (bad) nop stos je cmp and loop lret cld fwait xor movabs jae (bad) rcrb xor pop xchg rex.RB pop stos sbb and faddl mov (bad) mov mov rex.XB rex.WR rorl icebp clc (bad) mov shll sub xor or xor jno callq out fcoms addr32 (bad) movabs add rcrl ja xlat out roll xchg cltd shrl cmp int cmpb rex.WXB rex.WRXB mov fimull sbb pop insl sbb (bad) rex.WXB iret mov jge out (bad) push es sbb pop rorb imul cs int movabs pop rex.B mov (bad) retq add cmp pushfq xchg (bad) (bad) enterq xchg sbb loop mov rcll xor push cmp movslq xor jnp mov sarl test fmull (bad) lahf fimull loop jrcxz (bad) (bad) test xor or pop in test cmp sarl and rex sti mov mov rol mov jmpq (bad) (bad) (bad) mov pushfq loopne add rcll rex.X rcr imul lret rcrl lods lret xor cmpsb leaveq mov cmc fstps (bad) test rex.WRB mov sub shr (bad) cmp xchg movabs cmp jo jae fs movabs jae stc or rex sbb js add shll imul or adc and mov sub rex.WXB adc (bad) mov lock (bad) xorl (bad) xor cmp sbb (bad) (bad) shrl push sub mov shlb movsb sbb adc and out adc jp or shl or xchg push lret or (bad) sarl stos cmc (bad) pop push movsb fcoml std (bad) lods rex.WXB shll xchg xor sbb jb lret (bad) fcmove jl (bad) mov sub sub or sbb ds (bad) (bad) and or and push xchg repnz sub lret loop adc add repnz rex.WRXB mov mov jg sbb jns rex.WXB jle jbe cmp shll add retq rcll out movabs cli (bad) mov rorl sbb (bad) lock and rcrl xchg shl lret int adc rcrl stc cmc jge,pt lret fistl (bad) sbb callq and (bad) lods or mov lock jb (bad) pushq outsl xchg out xadd (bad) push cmpsl movabs or (bad) mov rex.WR (bad) hlt icebp jle imul iret mov fsts (bad) mov sarl retq (bad) or movabs repnz push (bad) xchg out rcrl (bad) pop (bad) rorl movabs cmp jmpq fldcw pop out fisubrl (bad) in xchg cli rcrl hlt mov jo popfq shrl (bad) xchg mov rex.RB in enterq (bad) iret clc retq out sbb xlat je movabs xor xchg mov mov and rex.XB out pop mov cmpsb and movabs movslq shll movabs imul rcrl movabs pop and out fs and mov sub jg rcll (bad) (bad) (bad) lret sub ja (bad) mov movabs fwait lods cld shl adc push and sub adc rorl mov rex.WRXB xacquire jmp cmpsb fstpl repz pushq cmp movabs test and adc (bad) retq jo out and (bad) fsubrl shll xchg or repnz jmp cmpsb cmp rex.XB repnz rorl xor out (bad) sbb jge add ror (bad) imul sbb shlq mov mov xchg fwait mov imul rex.B imul and sbb mov cld fwait adc (bad) rex.WX (bad) xor rol cwtl (bad) lock orb cmpl rcl sub mov sbb lods rex.WRB xor jne adc insb add cmc test retq (bad) je mov notl (bad) rcl (bad) jg std mov add or insb punpcklwd jle retq mov sbb push lret movabs pop inc add jmp mov addr32 or sbb stos (bad) rolb pop ss pop cmp test (bad) int in cmp mov jmp jo or xchg sar movslq rex and je (bad) (bad) sub jns test push mov and (bad) (bad) xchg movsl mov sub adc rcr or rex.R insl fsubrp retq adc jbe pop cmp (bad) test or cmp gs movsb rorb rex.WX add (bad) lea and cmp push add (bad) (bad) shl clc jno jle sbb movabs pushq (bad) sub sahf insl insb cmp jmp and cltd rex.WRXB jne (bad) mov rex.RB adc pop or cmc movabs rex.R int lahf data16 mov sub (bad) (bad) jno ja mov xor and stos mov add repnz pushfq out sub push rex.R xor xchg (bad) mov (bad) rex.WR enterq stc movabs rex.WXB (bad) jae mov gs jnp loope hlt xchg rex.RB xlat repz adc push callq (bad) fs and clc or or fcmovbe int lock lods faddl jrcxz bnd add jae jae xlat mov fwait xchg movabs lahf xor sub (bad) pop cmpsl int retq add sbb jrcxz movsb imul stc icebp rex.WR cltd mov xchg jmpq rex.RXB rex.WRX outsb sub adc jb jne sbbl xor movabs enterq cmp (bad) rex.B shlb rex.W lock loopne lahf or (bad) sbb (bad) lock fstpt jb add (bad) mov lret pop (bad) xor sbb pushq int3 mov js loope outsb pop loopne cmp pushq fmulp mov and mov fsubs add xchg (bad) mov jns js cltd mov jp add mov (bad) (bad) movsb rex.RX repnz loopne movslq mov stos xchg cmp nop rex gs leaveq add (bad) add out (bad) lret mov adc jrcxz mov (bad) xorl stos add rex.RB (bad) add lods sbb repz or push insb movslq (bad) in rex.XB xor imul rex.WRXB test (bad) mov mov (bad) (bad) loope shlb and pop (bad) iret cwtl xchg mov retq (bad) loope movabs es enterq xchg lea ficompl and (bad) jge sbb (bad) out rol xchg jns sub adc fmull jmpq mov es ss sarl adc xlat push test xchg iret cmp cltd movabs jmp movb outsb addr32 mov xor roll sbb lret sbb or shl movabs retq cmp mov es in (bad) mov sbb movsl mov sbb lahf comiss movsl imul in (bad) clc xchg (bad) test mov mov cltd sub mov mov rorb xor adc or test sbb rex.WRXB rex.RXB (bad) rex.WXB rex.RXB rex.RB sub xchg rex.WB cmpsl (bad) loopne adc sbb scas mov adc jbe (bad) int3 shrb cmp push lahf mov and jmp pop or lock cltd xchg mov (bad) repz fisttpll repnz xchg mov (bad) scas in imul rex.RX and mov push (bad) sub xlat test sub (bad) loopne adc stos test and loopne jb nop sbb rex.WRXB sbb (bad) (bad) cmpsl (bad) (bad) jle (bad) enterq jo pop xor rex.XB out cmpb nop mov (bad) sub add rex.RB mov cmp sbb sbb in rex.WRXB mov add pop (bad) jrcxz enterq push mov cmp movabs or push rex push (bad) scas (bad) rex.XB rex.X (bad) mulb mov mov xlat sarl rex.R ss fild xchg cmc rex.WRX in int cmp sub mov ss jbe jb loopne orl cmp or xchg pop in retq add (bad) rex fdivrs clc sti xchg sbb xor cmpsb rolb cs (bad) mov push jp (bad) xor cs mov sub (bad) xrelease sahf cltd clc leaveq sbb movabs rex.B rex.WB rex.X rex.WR movsl iret shlb mov and in mov or sbb (bad) imul push mov and adc rex.WX sbb outsl (bad) pushq rex.RB rex.W icebp and (bad) js jnp mov jno subb int3 (bad) jne lea (bad) jmpw rex.WRXB stc rex.WRX sarl push (bad) mov addr32 xchg pushq (bad) imul adc cltd xor mov cmp std cmpsl sbb mov in (bad) (bad) mov cmp cmp or test add xchg callq pop or mov stc and mov add loope dec rolb rex.WRB (bad) lea jl mov movabs in xor mov hlt push (bad) add movabs rolb rex.WRXB cmp fst cmp icebp neg rol (bad) es jbe repz or (bad) xlat add loopne out in rex.WR lahf stc lahf or jb pop rorb stc (bad) rex.RXB adc (bad) js or addr32 (bad) rex.RX and out and rex.WR (bad) or jle jrcxz rex.WRB mov push adc and mov movabs mov xor orl flds imul mov (bad) je mov movsl (bad) mov (bad) movabs cmp in gs rex.WR out add (bad) mov jae rex.XB push xlat push or (bad) callq hlt repz (bad) jno jle mov add pop xchg add xchg add xlat rex.WR sbbl test cmp fdiv pushq push cld or stc mov movslq std enterq mov lret add rex.WRX rex.RXB mov jmpq mov data16 (bad) rcrb add retq mov jo adc (bad) mov adc (bad) in (bad) pop (bad) xorl loop sarb (bad) out sbb sarb or retq repnz sbb fs mov sbb addr32 insl (bad) push pop cmp negl cmp fnstenv adcl loop enterq add sub rex.W or test rex.B test rex (bad) (bad) fimull jne mov xchg xchg rex.RB rex.XB xchg fwait scas (bad) and or xlat (bad) rex.WRXB sarl mov (bad) fwait ss (bad) mov sbb (bad) rex.WR retq (bad) jmp fadd int (bad) orl (bad) flds repnz adcb iret or std out pop test cli mov push add mov jae callq jbe ss imul xor mov retq xchg (bad) callq xchg imull rex.RX mov repz xor rex.WXB leaveq jae fucompp adc add xchg (bad) mov movabs rcll leaveq pushq and movabs cmpsb xchg jp (bad) xor ss cli push (bad) imul js add xchg retq cmp xor jg push sbb jge and cmpsb cmp add xor and fdivl cmpsl in mov (bad) push lea andl mov bnd shrl (bad) retq gs or pushq sarl ror lock (bad) rex.WR rex.WRX jge in jne push (bad) add rex.WXB retq (bad) sbb jle sub or (bad) iret mov push notl out pop test sbb fistpll rol mov jae ds (bad) mov fchs add iret adc sahf rcl rex.R xlat loop (bad) xchg sahf jnp adc pop mov test movsl mov int3 pushq iret xor push cmpsl mov (bad) rcrl pop rex.RXB mov lahf mov and add sub roll div and sar (bad) mov movabs (bad) fdivs rex.XB rex.X or loop repz sub sahf add movabs adcl add xor (bad) iret jrcxz and (bad) cwtl outsl xchg popfq scas stos adc sub callq retq cltd sbb xchg lock rex.RX rex.B and sbb shrl lods (bad) enterq sbb loope adc roll lods mov mov sbb cmp (bad) mov pop cmp adc movslq mov xchg fwait leaveq imul mov rcrl (bad) rex.R cmp rex.RX fidivr jbe roll cmp fldenv sbb (bad) int mov xchg mov rex.WRX in xchg rol (bad) fsubrs data16 mov (bad) rcrl neg fwait movabs sub and rex.B mov ffree scas fbld (bad) sbb rex.WX cli adc movabs shl sahf fcoml mov je mov xchg cmpsl rex.X cmc adc (bad) and ja or xchg adc cltd mov movabs jp addl movslq rex.W (bad) mov repnz fwait or fwait in stos jmpq cli mov (bad) rex.WB rex.WRX leaveq mov pushq lret lret scas movabs sub or pop or mov sti mov (bad) mov xor (bad) mov rex.WRB rorl xchg fs (bad) sahf out (bad) rex.B and notb nop and sub cmp lret xchg frstor cld out fpatan hlt fiaddl jnp jmpq pushfq push jl jrcxz push cmp adc xor or lahf stc notb cmpsl lahf or (bad) jle (bad) rex.RXB pop jg xchg jbe mov lahf add cmp callq icebp or test pop mov (bad) cmp xor rol ss adc (bad) cmp sbb xor movsb cld (bad) rex.X gs mov clc sub cmp lock test (bad) sbb xor fildl xchg fisub outsb hlt or jne notb cmp or mov mov (bad) cltd xchg (bad) xchg movabs mov xchg rex.WRB fs movslq mov pushq mov and jrcxz mov lods jp jmp repz xor hlt cltd fwait sub mov imull xchg (bad) (bad) movsb enterq iret (bad) in and rex.WRB (bad) (bad) (bad) jnp imul (bad) pop enterq rex.WB sbb subl rex.B xlat add add repnz cmp mov or lea fmuls movslq rex.RB rex.R fadd mov rex.WXB rex.WXB jo clc (bad) rex.WRB pushq outsb pop leaveq sahf (bad) rex.WR sarl data16 mov jno,pt rex.WRB test mov (bad) out mov icebp movsb or repz pushq shl (bad) sahf cmp add xorl imul hlt rex.WB clc push rex.RX xor pop movabs or loope or (bad) js (bad) cmp stos icebp (bad) xchg cli cmp retq cmpsl (bad) jge mov int mov (bad) sbb enterq stos rex.X rex.XB mov push test sub rex.WR jmp xchg jle (bad) (bad) rex.WXB test ja shr (bad) retq mov (bad) frstor lret lea loopne xor adc insl (bad) (bad) out mov (bad) mov mov fisubr (bad) (bad) fsubrp leaveq (bad) lock fldt lea and leaveq xchg push icebp imull mov cmpsl movsb (bad) (bad) xchg outsb sbb in adc imul or insb jle adc add scas jae push cmp xor mov lret je jnp sub (bad) sarb js and fisub cmp jge and rex.RXB jns repz int3 jae sub mov out xchg lret je adc rex.XB lock loope mov callq fs rex.RB test (bad) outsl sub (bad) jae shl ja and xchg movslq (bad) adc adc movabs (bad) sbb fmuls mov jl cmp jae add sub rex.RB rex.WB loope lret push sbb int and mov (bad) xchg pushq (bad) mov fstps adc (bad) outsl int3 (bad) out rex.WX jnp (bad) xchg mov jrcxz loopne add fadds sbb xlat jg add rex.W shrl out pop xor jns sbb mov syscall fld (bad) sbb (bad) rcll cltd push ds and jp jmp ficompl jno fs (bad) vmovaps pop rex.WR lret xor scas stc lahf in sbb and fidivl sub mov loope test sbb scas cwtl add movslq mov pop (bad) out sbb push (bad) (bad) jo (bad) add xchg movabs xchg xchg push (bad) out (bad) cs mov loope xchg xchg imul mov push xor subl push jo outsb and xchg movslq rex.XB rex.WR push adc fisttpll cmpsb movabs sahf lods jne pop test (bad) and rex.WR movabs xlat fcomi (bad) or movslq bnd pop sbb (bad) stos mov xchg rex stos jne cs add jbe (bad) sub rex.RXB sar pop (bad) negb add sahf rcrl jno pop mov sub rorl (bad) mov xchg stc out outsb test (bad) mov mov std jns mov in subl cltd movabs xchg (bad) rex.RX rex.WXB or mov pop pop xchg fwait mov movabs fdivp (bad) sub (bad) xor or adc fwait rex.RXB push add jmpq and sub mov (bad) add cld or jne xor nop xchg lahf mov addr32 out (bad) pop sub rcrl jns cmp lods push push (bad) (bad) lret shr and movabs fdivs adc sub jns mov jne (bad) mov shll (bad) adc rex.B jb add lods lret jrcxz fnstenv mov decb jle mov gs in cmp jge rex.W (bad) (bad) xchg subl fwait sbb retq clc or xor pop xchg test rex.WX mov and cmp rex.XB lea out pushfq and cmp cmc adc movabs clc jb adc or (bad) sarb cmp (bad) (bad) insb rex.RXB sub mov mov add (bad) or (bad) js (bad) test imul roll jns pushq lret (bad) rcll dec stos rcrl mov mov nop pop roll movabs jno roll in cs fwait adc push pop jp cmp mov rex.WRXB cmp lret nop cmpsb lret adc int3 or movslq mov jmpq mov data16 loope ficompl push cli jbe rex je mov in shr fildl retq cmc (bad) or add cmc and outsl sbb xchg loope (bad) out (bad) fidivr rex.B (bad) cmc xlat pop add (bad) (bad) pushq or rex.RB jno add sub leaveq push repnz adc cmp mov movabs adc jrcxz pushq shll cld (bad) jle movabs (bad) mov pcmpgtb or and popfq rex.WR sar int insb push (bad) mov in jmp sub xchg in lock xchg leaveq rcrl rex.RB repnz cwtl mov cmp cmpsb lret push lods (bad) adc cli push ja (bad) je or sub orl rex.XB (bad) mov or pop sahf ror mov mov or lret sbb pop mov mov out retq cmp push (bad) in lea shrl stc pop (bad) lret (bad) sbb mov lret rex.WB stos fidivr test sub or rex.RXB (bad) iret fnstenv stc (bad) cmp (bad) sbb and jle (bad) (bad) mov and hlt and mov shrl jo rex lock rex.R rex.WX (bad) pop pop loope je (bad) cli mov sbb std rcr shrl sti fsts (bad) addr32 callq xchg std sbb lea sbb cltd jmpq in (bad) out adc shl lret (bad) or adc fwait insl rol cmp out iret (bad) pop (bad) mov rolb sub add push push iret lods gs std shlb in bnd lods mov mov (bad) mov xchg sub bnd (bad) xor mov push mov fmuls in adc (bad) callq icebp fwait push (bad) cltd mov retq adc lods or xor sbb (bad) sub add or and or sahf outsb test popfq outsl (bad) (bad) (bad) mov lret (bad) lret stos mov jmpq loope fsubl ss xchg imulb (bad) in cwtl or add (bad) callq cmp pushq add rex.RXB cmp and rex.WRX mov sbb adc retq (bad) jae push rcr (bad) ja sub pushq mov mov (bad) xchg leaveq add mov sbb out rex.RX cmpsl rex.WR mov xchg pushq fdivs not (bad) flds in (bad) callq lock mov fcmovbe hlt rex.WXB test rex.WXB rex.WR rex.X sub jp out test and (bad) subb xchg (bad) iret mov jns jbe stc mov adc jb (bad) je retq jae (bad) (bad) iret lods sbb repz xchg xchg mov add or pop fstpt mov (bad) xlat pop movslq push fs (bad) (bad) (bad) scas (bad) rex.WR add and test cmc jmp sub rex.WRXB movslq sub sub (bad) xchg cmp cltd popfq xchg lock mov xor sbb std iret jo jrcxz mov test fdivs not movslq (bad) xchg mov add (bad) sub cmp movsl (bad) imulb (bad) xchg test jrcxz or movabs shrb cmp sub sub xor pop push lret ss fcmovne orl mov (bad) movslq rex.RXB xor (bad) sub jrcxz jrcxz loop rex.RX (bad) repnz retq (bad) fnop es scas cmc lods lret retq cmpb mov rex.X (bad) test sbb rcrl (bad) imul pop mov xchg rcrl xchg pushq fcomps fildll mov test movabs movsl lods pop data16 icebp jle adc (bad) sbb fbstp jae,pt roll (bad) sti rex.WRXB cmpsb (bad) cmp (bad) lahf imul mov pop enterq rex.WB and mov int test (bad) js rex.X jne movslq rol sahf cmc rex.WRXB lods fimul (bad) (bad) (bad) and fwait mov (bad) nop fisubl addr32 (bad) jo push out rol jmp xor (bad) jmpq cmpsl flds insb movabs (bad) repz cmpsb (bad) pop xor leaveq shrl xlat movsl lret jnp sbb (bad) lock pop adc rcll (bad) scas add (bad) (bad) or lods movsb (bad) cld and (bad) or (bad) pop pop decb retq ja (bad) sub callq pushq pop pushfq retq xor pushq rex.W rex.XB (bad) sub mov xchg retq stos callq (bad) jl fwait rex.WRB loope sti push jrcxz sub xlat (bad) push and rex jb mov cltd data16 enterq int3 (bad) or xchg (bad) movsb scas (bad) sub cwtl mov push test (bad) testl xchg lahf or adc (bad) xor mov shll fisub pushq rex.WRXB fstp jnp and repz pushq (bad) rol rex.R sub lret lods cmp pop cmc xor movabs mov fwait (bad) je jb fs cltd (bad) lahf movabs movabs (bad) mov retq mov lret rcrl scas or mov (bad) scas cs rex.XB lea adc cld (bad) repnz rex.XB push shrl std cmpsl (bad) lock pop and insl jrcxz rex.WX rex retq mov je (bad) push and (bad) cmp (bad) push sahf cli and stos popfq adc ss mov pop insl ror stc (bad) std mov (bad) (bad) out cmpsl iret xor int3 sbb mov subl (bad) stos (bad) sbb es leaveq (bad) xchg rex.WXB roll pop fstpt (bad) pop sarl and iret test rorl add shll sub cmpl lret rex.RX mov pop imul shrd xor rorl (bad) sarl cmp add (bad) xor fs cmpsl lret shlb hlt and lea lret sbb rex.RB pushq jno xor sub cmp add add mov sarl roll jo out ja cmp and add add or loop imul insb sbb lea in adc out sar push (bad) (bad) xchg jl mov shrb xchg je mov push xor scas rol (bad) xchg cld adc and (bad) jno fstl leaveq rol xchg stc rex.RXB sbb pop rex.B jmpq sahf out xor notb iret (bad) out or pop xchg pop (bad) cmc fnstcw fadd jb test sbb cmp gs (bad) (bad) fnstenv leaveq adc xchg jnp push rex.XB lock adc out mov out xlat rex.WRX xor cli (bad) pushq stc rex.XB test (bad) cmpsl outsb (bad) rex test sbbb push mov int movabs (bad) and jmp xor mov adc mov add bsr retq fiaddl in ss xor (bad) jnp (bad) sar add (bad) adc jno retq (bad) pop or movslq callq jb pop cmp cs repnz add retq rex.WXB cmp pop retq jmpq sbb rex.WRXB rex.B lret int movabs rex rex.WRX mov jo paddsb rex.B fisttp mov add jae mov or mov out movabs in (bad) repz loope imulb loop nop xchg int3 movslq jnp cmp mov out jl and fisttpll xlat (bad) mov lret or outsb rex.X fild sbb rex.WRB insl fisubl jmp rex.WR pop mov rex.RB fisubrl insb (bad) add sub repz jne rex.WB adc fstp gs sbb rex.W (bad) bnd mov sbb (bad) sub movabs sub int fcomi pop mov loopne je or (bad) int3 imul icebp xchg (bad) repnz insb (bad) or int sbb rex jle (bad) (bad) jbe nop mov adc (bad) rex.WX (bad) shrl rcrl add shll rex.XB adc pushq rex.R inc adc (bad) jae test mov (bad) movabs xchg or std jo jnp cmp ds out ffreep jp gs insb sub cmp outsb fwait adc (bad) fldenv cmpsb rol ja adc (bad) rcrl cmp out sbb notb pushq stc pop rex.X (bad) lock pop in sti and lret (bad) cltd push and xchg shll leaveq ds mov imul sarl pop mov ss rex.RB mov loopne mov (bad) xchg and loop movsl xor or mov rex.B retq rorl (bad) sbb lods movsb sub roll imul rex.B rcr add int adc shll sub mov rex.XB mov andl (bad) rex.WB sub (bad) (bad) and sub mov jle (bad) sub push mov xchg es stc or sarl movabs xlat (bad) (bad) cmp sbb pop sahf (bad) jb rex.RXB mov (bad) lea in (bad) (bad) icebp rex.RXB push sarl outsl mov imul lret cmp fdiv rex.X and sbb jno pop (bad) rex.WX (bad) loopne xor (bad) mov (bad) xchg jbe cmp rex.WRXB retq or shrl mov (bad) (bad) rex or (bad) nop mov sti icebp movabs sbb (bad) cmc fisttpl js fiadd retq jrcxz (bad) sub movabs xlat (bad) pushq add (bad) lret xchg sar sub repnz rex.WB jno jo movslq (bad) js rcl (bad) and rex.R movabs and insl (bad) mov cmp mov cmp movsl loope or fiadd (bad) icebp rex.WXB rex.WR imull hlt enterq movsl (bad) retq rex.WRX pushq mov mov add add rorl push outsl (bad) (bad) sarb and jl stos jns or rex.WX rex.WRX gs cmp xor (bad) cmpsb (bad) movsl (bad) imul push xor pop mov xchg stc gs stos pushfq (bad) and pop es xor pop (bad) enterq adc cs imul jmpq pushq pop hlt add cmpsb xor (bad) pushq scas xor fnstcw loope xchg sbb xor shrl mov roll and mov (bad) mov imul jg data16 std and push pop cli ficom xor (bad) sbb (bad) xchg shrl negb and rex.WRXB data16 adc mov rol roll sbb shll jp (bad) jbe rex.WRX data16 cld sub rex.B (bad) (bad) int3 clc lahf rolb pop loope icebp (bad) xor stos (bad) (bad) lods repnz (bad) pop lods xchg add (bad) (bad) mov movabs and mov sahf cmp notl fs lods (bad) insb imul hlt stos xor (bad) test cmp movabs int sbb cmpsb movsb adc orl scas sbb jne sbb rorl jp rorl xor ja roll sbb mov xchg and mov pop rex.WX add cmp fcompl lods rcr or cmc (bad) mov mov (bad) pushq sbb adc lahf xchg mov (bad) subl rex.RXB mov retq rex.XB loopne (bad) or add cmc out or loope (bad) sub and adc cwtl in popfq xor callq movabs (bad) (bad) jno mov cmpl fnstcw (bad) cltd movsb push (bad) mov sbb jge bnd int adc xor xor (bad) cmpl (bad) lock out lret stc push push sub cmpsb xor repz cmpl xor mov rex.WRB lock rex.RX sub jae out jle es imul lret or jmpq push ss stc sub (bad) sub and (bad) in or icebp repnz ror movslq ss sbb sarl mov repnz mov int add clc in jmpq sub clc (bad) je movabs jp add out fwait retq (bad) js retq fs enterq rex.B rex.RB cmp sti fcmove rex.R and jne (bad) cmp int fbstp in pop leaveq push push (bad) ja (bad) shl movsl setg int3 add mov pop (bad) addr32 cmc jmp hlt movabs rex.WRB rex.W lock or (bad) cmc adc imul jmp or sub adc and jl std xorl icebp jp subl add (bad) xlat fistpl mov rex.XB rex.XB fs movslq adc out mov test cmpsb cmpsb jg rex.WRX pop (bad) rcr and (bad) je or jns movabs rex.XB xchg fnstsw (bad) in sub loope pop retq (bad) adc rex.WR test ja in in lods rex.R (bad) rex.WRB jecxz test loope fwait repnz push scas test fadd pop in rorl vsqrtss rex.XB sbb push pop stos int rex.WRB lea nop pop mov loopne int (bad) in rex.B push cmpsb imul jp je rcll rcl jno leaveq test faddp test mov out lods (bad) (bad) add cmp cmpsl ror addr32 mov rex.WRB movslq pushq xor (bad) std sub int cs outsl rcll jmpq enterq mov rorb rex.WX sbb mov adcl (bad) iret jrcxz mov mov ja rex.RXB add lret pop pushq mov pop mov (bad) xlat shll enterq or (bad) ss add (bad) mov stc cmp pop mov rcrl rex.WX jmp pop fs (bad) pop sub push push rorl cld jp xchg fstpt imul outsl imulb xchg jb or sahf mov shr (bad) hlt rex.B roll sbb shll (bad) gs rcr rcll mov mov or rcll sbbb (bad) (bad) (bad) jb or jnp cmp rcrl cmpsl rex.X cmp unpckhps es (bad) rex.WRX cs pop jge or cmpsl negb (bad) sub int3 out xchg pop fmul scas div js sbb mov shrb mov (bad) (bad) pop movabs retq leaveq rcrl (bad) icebp movabs orl lret fstps (bad) mov int3 movslq cmpsl jo lahf fwait mov add loopne xor int cmpsb cli mov (bad) leaveq adc icebp notb or cmp mov xor (bad) push jno or add sub lret sub rex.WRX sbb rex.WR (bad) and div (bad) sbb movslq movslq leaveq mov adc fdivs (bad) mov (bad) fmul mov es mov (bad) imull loope cmc cli mov (bad) (bad) movabs jb sub clc cli bsr imul mov movsb cmp movsl sub pop ss sub add add (bad) ja gs (bad) sbb rex.RB (bad) leaveq lret (bad) cltd (bad) jp imul rex.WR fst jrcxz in imul mov (bad) loopne add add icebp pop insb adc fnstsw mov (bad) (bad) rex.WRB and fucomi sbb fcmovb xchg (bad) (bad) (bad) (bad) rex.WX rex xlat (bad) rorl (bad) cmp (bad) movabs lea cld lock in repnz rex.WB sub mov iret incl sbb (bad) adcl jmp rex.RX rex.WR jg rol cmpsb pop mov mov decl (bad) imul cld mov jmpq lock frstor fs cmp adc cli shl mov ror sub popfq jle (bad) (bad) outsl mov stc sub in shlb cmp lret cmc add (bad) jae xchg rex.WRXB dec roll shlb lods icebp sti callq add add adc rex.WRB jp ffree repnz sahf add pop icebp ss leaveq shll movabs cmc mov (bad) (bad) xchg xor (bad) mov rex.RX sub (bad) (bad) adc rcrl cmp xchg xchg mov xchg add adc xor push hlt movabs pop (bad) push repz sti push (bad) insb rex.WXB add mov (bad) jmp int (bad) clc js (bad) sbb (bad) cmc (bad) (bad) mov xchg mov (bad) insl xchg out roll insb (bad) xchg std rex.WRXB cmc (bad) ja fwait sbbl lret insb jl mov xor js jmpq (bad) jl cmp mov loopne rex.B mov and shr je hlt retq shrl fdivr fwait (bad) cwtl adc shl loop stos clc shll mov (bad) mov sahf outsb or xor (bad) and cmc xorb movabs mov sub movsl adc pop rex.RXB loope callq rex.WRXB push (bad) mov (bad) js jbe add lret or xor push scas test outsb pop cli iret sub mov jle cmp loop adc rex.WRX (bad) lods jge out std fist xchg xchg sub pop test andb pop iret rex.W xor je sub sahf jns mov repnz jno (bad) nop rex.WRB std sarl rex.R inc lret sub popq cltd shrl test push sub rcr lret movabs jp mov xor cmp pop xor add xor loop shrl and rex.WRX jns (bad) shrd jno sub or (bad) mov (bad) sarl and rex.X ss shll rex.WR fstpt movabs lea out shr lret (bad) movsl (bad) mov jb or add add popfq or icebp or and outsb (bad) xor xchg int xor sub (bad) cmc xor cmp push clc mov push sahf test out (bad) repnz adc rex movabs push jmpq pop xor (bad) (bad) cmp js (bad) pushq xchg (bad) (bad) xlat (bad) push leaveq mov adcl (bad) (bad) mov movabs ror and shl lods or rcl loope adc sbb mov rcr and add (bad) xchg mov fstpl jrcxz (bad) cwtl rex.WR fmulp jnp add sub imul retq jne xchg (bad) clc xor js mov fwait (bad) xor rex.B sub lock (bad) stc cmpsl rex.W gs retq jp or nop movsb in jle (bad) fistp rex.WRXB (bad) test repz cmpsl rex.W fistpll (bad) cmpsl add int3 jmp lahf sub (bad) push lret rex.WR xor out add mov (bad) jns enterq (bad) clc rcll out xor add fnstenv rex.RX rex.WR mov and sahf sbb lods mov (bad) or flds rex.XB xor vmovupd and (bad) movsb rex.WRB jb nop loop jno in lret lret or (bad) rex.WRX rex.X push lods jnp (bad) or outsb popfq fdivrs repz push in (bad) mov loopne rex.WRB add lahf jno xchg shrl fidiv fs shrl adc enterq sub add jge repz movabs jne xchg lods jl add push fcmovbe fnstenv shrl jge,pt scas jae rex.B add rex.WB clc popfq sarl (bad) xor (bad) rcl cltd mov sti mov insb sbb add sarl (bad) or mov and insb xor jo gs jg jno (bad) (bad) rcll lea jnp movabs adc ror fwait jl adc mov rex.XB loope sub scas rex.WXB cmp or shll and xchg cmpsl jne (bad) xchg cwtl or add cltd outsl sti fisttpl add xchg repz or rex.X leaveq sub out rex.RX (bad) xchg add adc jne lahf sti shrl enterq jmpq xor outsl (bad) loop movsb adc xor (bad) ss or retq sbb xchg pushfq pushq icebp push jrcxz movabs xor shll mov xor add mov pop out sub (bad) movabs nop (bad) lea stos hlt mov mov test sarl cli xchg shrl push (bad) or mov sub and (bad) or (bad) (bad) rex.W nop (bad) push jp or sbb shl xlat (bad) movabs (bad) nop (bad) jrcxz cli xor enterq sub adc mov movsb repz (bad) (bad) pushfq add cmovp rcrl rex.R lret (bad) push rex.X movslq mov xchg cmp popfq rex.WX icebp enterq or jb jl cmpsb (bad) pushq out (bad) ds (bad) mov push rex.R mov movsb loopne fistpl cmp fcom int rex.X rorl and jno (bad) sbb movslq (bad) sahf out pop adc cs (bad) (bad) pop scas shrl rex.RX mov and cwtl cmp adc imul (bad) shlb test xchg movabs jns (bad) ja and sub mov mov (bad) jge int movabs lea rex.B rex.RX insl (bad) shll jb ffree cmpb jmp scas loopne (bad) repz insl fwait in sbb xor (bad) sbb mov rclb in shl xor shrl rex.RB rex.RXB (bad) cmpsl cmp (bad) rclb (bad) xor movabs fstpt cmp mov (bad) divl rol addr32 jl mov sti or test and (bad) sub imul rex.RX add shrl rcll rex.X lahf pushq xchg pop in cmp out (bad) adc pop stc enterq movabs test and mov in lret sbb movabs xlat rex.WXB (bad) loopne out sub rex.B and mov fsubrl in sbb push icebp add mov out sarl cltd jmp sbb sub jl fs int (bad) xor cwtl sub rex.B clc mov (bad) je mov sbb xchg test or sbb stos rcr ja and popfq repnz adc sarb sub shll adc mov callq movabs movabs and pop icebp cmpsb icebp mov movlps xlat and (bad) enterq sbb add (bad) rex.WRB rcl rcr out retq cmp repz js mov (bad) movsl xchg jp movq2dq (bad) lods roll (bad) adc clc or roll iret (bad) fs loop xor (bad) rex.X or std or mov add (bad) mov pushfq add (bad) and shr xchg sbb loop sub (bad) rex.WRX push sub cwtl add fildl rcrl adcb (bad) inc mov enterq (bad) rol push sub (bad) andl shrl rex.B sub test fwait pushfq pop or adc pushq xchg sub movb cwtl (bad) fstpl xchg rorl rcr xchg xor mov pushfq or movabs fwait jno,pn rex.WXB out rex.R cld xchg (bad) mov (bad) push xchg sahf or inc (bad) retq cmp (bad) jmp xor rex.X jnp lret rex.WRXB rex.XB movabs movabs jmpq popfq (bad) sarq pushq rex.WRXB push shrl frstor jp scas roll test mov addps (bad) ja cmp pop test (bad) roll out cmpsl lret mov jge (bad) or sbb sbb jae retq xor mov in roll (bad) adc mov (bad) mov prefetchwt1 (bad) sub mov add jmpq pop add jbe sub enterq (bad) mov retq add enterq movabs mov pop (bad) adcb std (bad) adc jae xor loop movabs testl (bad) pushq jo movabs mov rex.WRB retq sub rex.XB pop sbb mov movabs test rex.B (bad) pop rcrl shrb (bad) adcl lea test movabs rex.RX cmp mov cwtl xchg cmp cmp or clc rcl xchg (bad) popfq stc roll or rex.WB adc movabs scas in (bad) sub pop (bad) sub int jnp rex.R gs mov lods or xchg cmp std ja jrcxz mov xchg xchg (bad) pop (bad) (bad) xchg outsb or jnp cmp adc add sub in xchg mov or outsl icebp shrl jge mov mov vmovddup (bad) (bad) popfq movsl xor cwtl stc rcll in or rol std js mov out in rcrl rex.R rex.WXB and sahf repnz sub cmp and rorl pop or (bad) testl or (bad) in mov pop sbb jg jmp (bad) fild jbe mov mov mov pushq scas rex.B sbb cld lahf mov rex.B cmp ja xchg shl movabs (bad) sub roll (bad) pop in hlt (bad) in test rex.WRXB imul (bad) notl mov jbe pop je (bad) adc (bad) add sbb push insb (bad) sub mov and sub and push repnz and rex.B xchg jae leaveq cli (bad) (bad) adc pop sbb jrcxz push ja jbe stos ror (bad) scas mov push and lods jl mov movabs add jg fnstsw cmp sub (bad) pop push stos adc roll gs cwtl jl retq (bad) fisttpl popfq sub rex.WR lock (bad) ja cmp (bad) xor and (bad) xchg sub add or rex.WX sub mov jg movl pop imul cmpl adc je mov or (bad) iret lea ds fsubrp pop and or loop int3 cltd loope rorl pushfq or je (bad) pushq stc add (bad) jne fsubrs add sub sti (bad) (bad) pushfq or rcll movabs mov (bad) ja jns or cwtl or mov xchg (bad) add shrl xor jge adc roll xor (bad) sbb fsts lret xchg out (bad) xor or loop (bad) jp repnz movabs (bad) pop xor rcrl addr32 sarl ficompl mov xchg mov (bad) adc xchg lock in fs insb (bad) xchg movabs fcompl lods push stc (bad) movabs in (bad) ficomp repnz jrcxz loope adc mov outsl (bad) (bad) iret push data16 loope rex.WXB jae jge frstor scas rol cmpsb add sbb mov pushfq or imul sarl rex.X rex.RX clc (bad) repz rex.WB rex.B (bad) or retq mov fiadd rcrl leaveq jrcxz (bad) and jmpq xchg jle fwait movabs (bad) sbb fidivrl jl movabs mov shrl sar stos hlt (bad) and stc sahf movabs xchg loope mov lret lret out retq adc fcoml (bad) repz and jl add lahf rex.B out mov (bad) test pop (bad) jne rex.WRXB (bad) rcl data16 mov clc fstl rex.RX (bad) icebp cwtl shrb mov shl xchg mov cmc rex.WR pushq cmp rex.RB stc roll jns pop mov xor fs fistl mov outsb in sbbb jo xchg and shrl (bad) int or ffree xchg mov cwtl (bad) popfq mov jae push roll callq test cltd pushfq loopne adc sbb jrcxz mov (bad) rex.WRB js mov (bad) stc (bad) cltd push pop rcrl push test adc push cld roll orb xor and outsb and je fstps mov fsubr jrcxz and or movabs in (bad) jp xchg repnz loopne sub rex.R adc (bad) je fadd jmp (bad) rex.WR ds mov rex.R rex.RX rex.WRX rex.B movabs jg (bad) pushq sbb insl and (bad) (bad) push test (bad) mov rex.WB mov rclb and incl rex.B addr32 jae rex.X push shrl es mov in gs add test sbb lods movabs sub (bad) rcll lahf ljmpw pop and or leaveq test movabs xchg callq push enterq fbld fdiv rex.RX fwait xchg je cltd pop insl adc sarl sub (bad) loope rol sti add jb rex.W or jne fwait (bad) mov adc rex.WRX xor fnsave clc xchg (bad) fisubr rorb jle sahf shl div out adc jp scas sahf push fsubl cld (bad) ja rex.RX ds (bad) stc push cmp callq mov std cmpsl in roll mov rex.WRX ds cltd jne pushfq (bad) push or test or cmp add jbe mov adc (bad) jmpq jle fld add cmp adc movabs and xchg add (bad) in pop sbb int3 mov out rex.RXB adc add (bad) rex.WRB add pop rclb fmul push mov cmp stos and rex.R add movsb mov loop adc jo (bad) cld gs jmpq in jg (bad) lock fistp (bad) hlt shr sub mov rex.WX pushfq lods shrl je cmp out shll loope jns xchg add lock (bad) lea (bad) and mov movabs gs and out (bad) rorl mov (bad) jrcxz iret mov sub fisubr repnz shr decl and xchg in rex.WR (bad) xor mov sbb sbb rex.RXB repz je (bad) push rorl cli stos xor or cmp mov fmull (bad) mov adc test pop movabs movsb mov xchg xchg rex.WRXB mov mov jge movsb sarl insb rex.WR (bad) fs fcmovnb sahf jb icebp pop inc ss (bad) imul test or or cwtl je cli cwtl repz fistl pop adcl out (bad) mov movabs in es jnp in in stos mov fild (bad) lahf scas pushq jne mov or sahf jle shrl rol (bad) (bad) pushfq idivb retq shr leaveq movsl (bad) xchg (bad) ss xlat jp pop cltd ror (bad) int mov lahf movabs test adc iret out cs xchg mov pop retq loop push (bad) push mov rex.XB movslq add out (bad) mov (bad) push fdivrl pushq jns rex.WRXB rex.RXB (bad) (bad) cmc hlt mov (bad) sub std mov insl shrl cmp jb (bad) lret sbb xchg retq lods or es xor cmp lret rex.WXB mov jnp (bad) jno add std xchg and sub (bad) mov xchg (bad) ss and add mov outsb rorl loopne sbb faddl in movabs (bad) sub int3 jge popfq (bad) rex.B mov (bad) scas pop callq retq movabs leaveq movsb rorl and rex.X rex.WRX loop rex.WR adc callq xor imul or not rex.WX (bad) hlt addr32 iret mov rclb rcr rex.RX out cmp jg in insl adc (bad) js movsl jmp repnz sub insl xchg iret xchg (bad) mov (bad) mov stos retq sbbb xor jnp sbb sub (bad) iret and sbb rcll cmp add out push sar and sarl (bad) out (bad) xor push movabs callq cmp jo or movsb lahf roll push in xchg rex.RB jp fildl cwtl rol out loope (bad) stos stos jae cmp lret sub incl pop xchg xchg out rex.RB cmc sbb movabs pop fidivrl roll mov (bad) (bad) out out pop (bad) sbb (bad) loope or repnz push rex.W xor cli adc shll jbe rex.B sbb movslq cmpsl xchg or loop rex.XB pop rex.X mov adcl loope adc (bad) pinsrw sbb cmp pushq shr movups xor roll stos (bad) (bad) mov xchg add rex.WXB shll (bad) loopne lock rorl retq pop sarl (bad) leaveq mov rclb shll mov cld pop pushq movsl jne jno sbb retq lods test clc rex.B scas cmpsl (bad) rcll xchg lahf sbb (bad) xor loop push (bad) (bad) movsl scas sti xchg jmpq and pushfq shl fldl cltd repz rex.WB in rcll xor (bad) out rcrl (bad) xor leaveq je cmp icebp movabs jl addl mov notl lea repz fwait andl lret xchg cmp iret retq push (bad) adc stos movabs sub (bad) (bad) icebp cmp movabs rex.R retq or mov sti (bad) cmpsb jrcxz (bad) jb repnz movl sarb mov rex.RB adc lock add pop jae test push rex.W xor popfq mov xchg sti (bad) enterq rex.WRX (bad) mov std jl lods sbb iret (bad) fldl (bad) rcl cmp xchg rex.WRB lods fcmovnu sub jmp mov pop push jb (bad) test (bad) (bad) fwait jns in (bad) rclb sbb jp out jmp bnd fimul xor jg jo (bad) fld1 lret and int3 mov and (bad) retq rex.XB (bad) jae and jnp (bad) rex rex.B sbb stc lret mov mov jmp cmpsl (bad) or addl and (bad) mov (bad) mov fstpt jle outsl test (bad) int3 lock pop rex.WRB bnd adc cmp jg sub mov int iret ja lret or sbb bnd xchg imul and adc mov mov xor out (bad) test sub sub sub test rex.WR lock (bad) sub and rex.WXB lret jle imul mov fildl (bad) clc xchg add jne in xchg adc outsl sub mov lods (bad) (bad) rex.WXB iret rex.WR movabs (bad) mov andb add rolb adc sahf retq pop (bad) or xchg rex.WXB test xor jrcxz mov pop hlt clc scas add shl xor push int3 rex.WXB (bad) fdivs movabs mov pop loopne fisub rex.B ds rex.R mov rex.XB bnd jno stc cmpsl rex.WB (bad) mov (bad) iret rcr out and sub movsb jmp loop (bad) jae (bad) (bad) and cmpsb test (bad) rex.WR pop mov (bad) stc (bad) rex.WRXB sub addr32 (bad) (bad) add mov imul rex.XB and loope mov rex.XB mov jno push xor cmp popfq adc rorl rex.XB lock adc fsubrs shll pushq (bad) lret and js (bad) (bad) fsts push jg retq fld (bad) (bad) movsb (bad) repnz rex.W iret xlat insb cmp shl jg adc cli xor (bad) std push cmp pop rex.RX mov rorl js (bad) test outsb rex.WRXB mov in add lahf (bad) in popfq cmp jo rex.WX insb jae jmp or and leaveq rcll (bad) nop outsb sahf ss pop jno mov pushq popfq shll cli inc or and pop int3 (bad) in retq (bad) rex.W out and mov xlat callq lret rex.B sbb shll rex.RB rex.RXB in outsb enterq or jne nop icebp je neg imul movsl (bad) mov (bad) xchg jbe test ror add test xor lahf rcl roll test push pop and rclb push lea js cmpsb rolb mov stos xchg mov (bad) inc scas rex.RXB divb je dec rex.XB cmp and callq pop sarl xchg add and sti mov (bad) jl enterq mov out (bad) cmp mov (bad) or lret xchg lods mov (bad) lret adc (bad) insb (bad) divb retq rcr cmp (bad) mov sbb fcoml pop mov fidivrl (bad) or xchg stos adc (bad) xor (bad) xchg pushfq enterq fiaddl rex.R (bad) add (bad) mov (bad) mov xchg addr32 (bad) or add cwtl sbb pop sub gs and fildll (bad) xchg jge sub mov js rex.X rex.W (bad) imul xchg (bad) mov xchg hlt (bad) pop mov xchg add (bad) idivb push jg negl push rex.WRB (bad) pop sti adc rex.XB push mov jl (bad) cmpsl (bad) push cmp xchg ja test mov outsl or lods sbb add int3 rex.WRX push movsb mov out fsubrs test xor mov push (bad) push (bad) fsubl cmpl vpaddb sub test rex.WXB push and repnz (bad) cmc (bad) je mov clc scas rex.WX pushfq lret (bad) jae add (bad) mov js (bad) repnz (bad) xorl mov stos xchg rex.B cld pushq addr32 jmp (bad) sahf mov rex.RB pop pop pop xor xor mov callq cwtl sbb nop (bad) add lret xor ja (bad) fmull rex.W rex.WRXB cmpsb loope rex.RB rex.W (bad) xchg and (bad) or mov rex.WR fldl fadds (bad) jl (bad) sbb fldenv and xchg in clc cltd gs (bad) movsb (bad) jno mov sbb and cmp fldt stc rex.B rex.WRXB add xorl (bad) cs mov and (bad) mov rex.WB lea fcmovnu cwtl imul testl out rex mov sub xchg cmp sub (bad) xchg repz js rex.WX fs callq rex.RB notl rol in (bad) sub repnz notb jns cwtl rex.WRB and fisub add test clc sub enterq lretw stos adc repz and jge repnz loop add stc shrb or std outsb (bad) and scas test (bad) xor rex.WR (bad) xor (bad) rex rex.RXB jmpq sub repnz (bad) pop (bad) std leaveq lret (bad) mov sub jae xor fldenv popfq fisttpl stos (bad) movsb rex.B bnd xchg leaveq stos rex test rex cmp cvtps2pi add cltd negb sub lea (bad) xchg out rex.WRX rex.WX (bad) mov mov xchg test in imulb shrl (bad) repnz cwtl int3 sub rex fwait rcl divl xchg int3 test out addl (bad) pushq movslq stc rex.WR (bad) xor cmp ds repnz xchg rex.WX mov movabs test (bad) jbe (bad) add imul cmpsl imul adc (bad) jne rex.RB mov int push imull add rex.X lahf rex.WRXB lea movabs movsl (bad) rex.RX callq insl scas rex.RB mov nop or (bad) cmp sub retq enterq out rex.WRB mov (bad) push cltd in (bad) movabs fstl (bad) in test repz cmp comiss jrcxz neg test retq mov fnstsw icebp (bad) ja (bad) jno xchg sub adc retq adc movabs enterq xor out orl push fwait jmp rcrl (bad) shl mov xor xchg and rex.R (bad) fs sbb imul (bad) (bad) xor or ffree and movsb (bad) rex.WX and movslq sarl sarl sti sbb (bad) (bad) sub (bad) push mov fadd lahf xlat movsl fisubr jns movabs sbb (bad) stos mov mov fcos rcll push leaveq or test and rol movsb int3 pushfq lods rex.WX (bad) mov or cwtl push push repz mov push out xlat (bad) insb (bad) (bad) movabs pop mov loope (bad) adc out movb rorl rcrq mov push fist pop ds stos mov iret pop mov or movslq (bad) icebp cli adc rex.R divb jbe mov stos in (bad) jo and loopne rex.B rex.RX pop out shrl (bad) icebp enterq rex.RB sbb jo rcrl jns (bad) mov or lret stc rex.WRX js addl cmp retq hlt (bad) ds mov and add rcll (bad) shlb xor in adc pop callq lea pop (bad) (bad) mov (bad) callq (bad) test test sahf movabs out (bad) (bad) roll rex.WR rex jg xor (bad) sub icebp push pminsw std ss cmpsl (bad) imul retq or xor push and repnz jns ja (bad) (bad) and (bad) (bad) xrelease notb xadd pushq jg pop adc (bad) testl out cmc (bad) es push cmp push mov cmpsb or imul shl rcll and out adc (bad) out cmp mov (bad) xor pop lods (bad) push adc rex.WX push std insb xchg lret jno (bad) icebp jl jp std fs cld rex.B mov add repz or rex.WX rex.B ror shrl fldenv movabs (bad) xor add sub (bad) ja roll (bad) (bad) or imul retq pop shlb js shl jno adc (bad) mov lods or xor adc cli push mov mov mov jne popfq movabs (bad) push and mov int adc (bad) rcll sahf sub (bad) (bad) and mov or mov icebp xchg clc mov mov fisubr sbb (bad) ds sub test ror ror popfq (bad) ss imul jmp sar nop (bad) mov clc enterq shll shrq sbb xchg retq (bad) jg test push jmp cmp (bad) mov lea (bad) xchg shr and shr sbb jmp mov mov (bad) mov cwtl test (bad) xor repz push rcll sub (bad) rcrl out lret jo shll mov scas sarl (bad) test popfq xchg jg loope mov fldenv (bad) jge xor shr or frstor or pop std rcrl rex.WRB mov rex.W mov (bad) rex.XB sar (bad) in (bad) sub imul add shll cmp shlb (bad) pop pop rcrl loopne movb rex.WB jae fmull jrcxz cs fdivs imul lock stc push in shr fsts mov (bad) cmpsb stos fidiv sbb sbb fwait popfq lret out add xchg fidivrl rolb (bad) xor cltd and mov cmpl in pushq adcl (bad) repz (bad) adc cs cmpsl (bad) pop outsb pxor xchg xor and xchg in xchg or (bad) out mov push test add sbb divps and xor jle fs movabs mov in outsb add or stos xorl (bad) mov rex.WR addr32 mov rex.B rex.B stos js shrl rex.WXB (bad) rcrb xor data16 rex.WX fdiv movabs cmp rex.WRB jnp adc out (bad) cli pushq sub mov adc mov xchg jb jnp (bad) mov add cmpsl rex jp sub (bad) icebp jnp and (bad) mov fidiv add (bad) (bad) shll loopne rorl rorb xchg and (bad) shl out rex.X clc jae out mov neg stc jl xor shll xor rex.WR xchg mov mov pop ds xchg sub xchg rex.B fld sbb xor iret jge (bad) xchg cmp (bad) jo xor push cmp lret cmp repnz add adc test mov rorl mov adc cmp xchg xchg (bad) (bad) in and repnz (bad) lret rcrb rol rex.WR out sbb xchg add rex.WRXB (bad) adc loopne ds lahf adc shll mov test mulb cmpsl pushfq retq fsubrs cmpsb rex.WX outsb and add (bad) jns (bad) in icebp rex.RX adc fsubl add sbb insb or mov sahf cli xchg movabs out rorl (bad) mov divb (bad) ss rex.WB stos (bad) sbb mov sub pop or (bad) test imul (bad) loopne repnz rex.B (bad) retq (bad) cli iret sub (bad) cs pushq push xchg sahf leaveq and loop rex.WRB or xor out nop add callq test rex.WB lods fnstsw jbe xchg (bad) mov (bad) sbb in (bad) cmp cmp cli jg pop movslq mov shll fnstenv jl ror mov lahf decb sub jp (bad) icebp es (bad) (bad) ficomp (bad) sbb sti imul (bad) pop and cli fwait data16 pop lcall fldt or fmull rex.WB jl rex.WRXB adc rex.RB enterq (bad) (bad) movabs mov cmc cli xchg ja push retq xor mov or sub (bad) callq mov (bad) (bad) test retq cmpb lea iret add test scas adc mull mov (bad) xchg mov fsin mov out mov sbb in subl jb ja mov xor lods rex.WXB hlt scas xor clc je rex.B pushq and mov push lret and imul rep xor sbb iret (bad) (bad) jnp loope jrcxz rex.RB (bad) (bad) sub pop stos fwait int3 movabs fldenv (bad) or gs fnstsw sub mov mov (bad) mov rex.X cmp rcll xor (bad) std lea (bad) add shll jg movb out adc adc (bad) test mov rex.RXB ror jo xor sahf pop fldenv or sbb mov lock test rex.WR repnz rclb (bad) scas (bad) lret cmc or jp sub xor iret (bad) cmp mov movsb or insl out insb cmp pop rcrl cmp push adc xor pop fdivrl jb iret stc or push mov out enterq rex.WRX cmp xor fwait pop (bad) lret or test and push pop jae (bad) iret (bad) sbb jp in jge shl mov cwtl mov fstps andb (bad) leaveq decl pop cmc shl push rex.WRXB shrl repz mov sub cmc retq ror (bad) (bad) jne (bad) mov (bad) sbb (bad) pop or and stc pop adc sahf mov negl xchg rex.W int shll (bad) movsb roll imul xchg test jle insb sahf (bad) out repnz xchg test addb and sbb movabs mov rex.XB rex.R (bad) (bad) and outsl int3 (bad) push scas xor rex.WR repz pop out movabs sub mov pop or (bad) (bad) mov pop (bad) stos push sub mov (bad) cltd test lock jge jne fistp jl add retq in jnp rex.RXB mov and jns cmp bnd imul cmp mov out xchg adc rex.RXB outsl stos mov add fisubrl or mov mov test add rex.WRXB rex.X xorb std rex.R out (bad) sub shl push popfq (bad) scas (bad) out shr jb (bad) lea out in (bad) mov xor ja mov mov cmp lods (bad) or stos jle mov (bad) hlt shr jmpq cltd sub mov movsb pop fcoml mov lods (bad) and vmovaps rex.B out (bad) outsl (bad) js push and (bad) (bad) movabs rex.RX std xchg sahf (bad) rex.WX adc int3 sub cld shr or jnp div shl out iret movabs test movslq mov xlat cs add mov rep mov or sarl iret sub pushq jrcxz jbe (bad) (bad) rex.W in rex.WRX (bad) xchg in jle push test (bad) (bad) (bad) and pushq add add js pop stos mov std (bad) fsubs adc jns sti (bad) roll int3 data16 xchg jl mov xchg pushfq out (bad) (bad) adc sbb add cmpsb int (bad) rcll repz jl rex.R cltd push rex.W sub shrl pop add lret mov sbb jp fwait jge fmulp (bad) in (bad) mulb cmp jb divl (bad) (bad) movabs rex.WRB notl outsl popfq adc lods cld in cmp cwtl mov push (bad) adc (bad) rol mov scas outsb (bad) and adc sbb sub push fsubp xor pop and push retq pavgw adc rcrl insb (bad) retq mov ss (bad) sub retq shlb mov jp fwait mov sbb (bad) (bad) (bad) (bad) ja adc not xor movsl js push mov cmp add or (bad) movabs decl xor mov pop xor pop mov movabs jmp int je rcl jg xchg jbe movsl iret and test repnz outsl mov (bad) (bad) stc push (bad) fs test popfq repz rex.RX int add stc stos rcr mov rcl divl (bad) mov fwait (bad) test rex rex.RB add in movabs (bad) adc sarl xchg imull (bad) movsl (bad) pop decl fistpll test (bad) test popfq jno sub stos or shrl stc in lahf mov (bad) xchg (bad) (bad) repnz jrcxz and (bad) icebp xchg or sbb (bad) (bad) outsb mov xchg enterq mov (bad) pushq sub shrl mov push stc xchg rex.B shl push callq (bad) icebp lcall outsl movabs rex.RX (bad) std pop rex.XB mov loop jae xchg loope int stc iret xchg scas sarl outsl rex.WR loop rorl jmpq adc rex.WX rex.XB add rex.XB (bad) jrcxz imul lret cmp pop xchg icebp sbb mov adc out fstl mov jb pop in test and orb sub mov shrl shll jno push jbe xchg sbb test pushq cld add rex.WX stc xchg rolb mov push stos xor lock movslq imull pop mov movabs movabs int3 rcll mov movabs push (bad) mov retq xor xchg shlb rex.XB or (bad) and mov jae mov pop mov insl rorl sub cmp add cltd rcrl jbe lea adc add cmpsb push sbb cli int3 rex.B mov jg stc rorl or (bad) sahf (bad) sub retq or (bad) jns jmpq sbb rex.WRXB rex.WRX sub cli stos (bad) fsts rex.R jno (bad) xchg lcall shrl jmpq sbb test (bad) out rex.WX rex.X xchg jp data16 rex.RB sub enterq mov fmull xchg fidivrl xlat sub mov addl mov (bad) repnz lock jae cmc or pop pushq or rex.WX rex.W loope movsb push xlat rex.B rex.RB rex fisub rex.WXB repnz and rex.B enterq fcoms or rex.W lret (bad) sub leaveq mov loopne rex.X lret mulb lods (bad) mov cmp pop imul lods mov (bad) push cwtl or add mov sub push popfq lods push cmp movabs (bad) out rex.WXB ficompl rex.RB rex.WXB rex.WRB stc lahf mov add rex.WX mov adc sbb mov add lods sbb rex.RXB adc hlt (bad) sub xlat cmp pminsw std shll (bad) or mov jmpq pop mov jle push cmpsb outsl out lret imul cmp roll rex.RX rex.WXB jmp movslq test popfq jmpq (bad) iret or (bad) rex.RB fcmovnb retq clc pop jnp loopne add shll xor mov out jns or (bad) retq fisttp jno mov adc fwait (bad) jrcxz sub test cmpl jge andl and retq push data16 rex.WXB push sub in mov xor rex.B ss jno rol pushq mov movslq lret es (bad) sbb lret je push xchg cmp mov (bad) int3 rex.RX rex.R jmpq (bad) stos jbe fiadd pushq or mov faddl mov shrl jne xlat jns lret retq (bad) (bad) (bad) rex.XB mov sub push (bad) ss mov rorl rex.B ds fisubrl rex.WXB cmc jge (bad) xchg sbb mov rex.B sbb pushq (bad) sub movabs sbb (bad) cmp mov rcrl rclb cmp (bad) int push (bad) add rorl rex.WRXB outsl fs sub xor push clc cmp lret rex.WRB or (bad) (bad) xchg int3 incl adc and cmp (bad) setp idivb add sub hlt (bad) xchg rex.RB lock cmp (bad) not sbb sar sahf push (bad) jnp and movabs adc (bad) mov (bad) clc in (bad) rex.XB xor fistpll lret mov rex.WB jrcxz (bad) fdivs insl rex.WR mov mov adc (bad) mov test xor (bad) jo xor push rorb or retq xchg testb (bad) (bad) cmpl pushq mov add and insl roll outsl sti in cmpsl cmp mov (bad) rol (bad) rcrl jl pop pop adc rorl sti xchg repnz add cmc ds push (bad) jo cltd vpsraw iret (bad) in movabs jbe or iret sarl mov rorl xor jb test pushfq shrl cmp (bad) cltd (bad) pop sbb (bad) or mov movslq int3 jle rex.RXB enterq stc xlat (bad) jnp subl xchg and lret add mov jrcxz rex.RB (bad) rex.R rex.WRX rex.B cmc jp and fisttpl callq rex.R and pushq xlat rex.WXB repz sub cmp sub (bad) fisttp addl pop cmp mov loope js (bad) rex.WRX cwtl mov (bad) pushq or lret jmp and sbb rcrb sbb push incl pop loope in js repz outsl push movsb add rex.RXB (bad) pushq or push sbb cwtl cmpl rex.X xor mov int3 jae imul (bad) je rex rex.R mov out fs mov rex.RXB fildl fldl and rex.X (bad) imul and fcoms push pop lea (bad) jmpq repz cltd (bad) add (bad) retq mov (bad) jge ja xchg rex.RX push adc nop pop jl xchg xlat rcrl pushfq pushq cmp orl rcll xrelease xchg je rex.RXB es jbe sbb xor movslq add and icebp and mov test (bad) cmp add lret movabs ja lret (bad) mov rex.X sbb add rorl cmpsb (bad) sub (bad) leaveq testb enterq rcrl sbb fnstenv lret mull rcll (bad) pop shl xor out out test test std cltd pop xchg in adc int3 rex.W movabs (bad) lock (bad) imul lea rex (bad) shrl sti mov iret push (bad) insb rex jbe push mov test pushq lods xchg fnsave xchg cltd cli push roll cmpsb loope cwtl jmpq ds leaveq outsl xchg xor mov loopne xchg add pushfq je xchg cmp rcll adc and fistl mov cmp movabs rex.B and sbb jp xchg popfq and jne cwtl sar fidivl negb jo retq repnz test leaveq jns lahf mov (bad) pushq test rorl fs lret loop fidivr jp mov cmp mov lock rex.X mov sbb in cmp jp in lods pushfq mov mov cmp lret outsb and rex.WXB adc push (bad) cmp add (bad) xor pop mov fldcw and (bad) out ss jl jo sbb lods pop jbe lods adc jns (bad) xor outsl mov popfq int3 movsb jp xchg (bad) mov xchg subl lahf out pandn test movabs (bad) cld cmc gs nop jl rex.WB (bad) xchg adc mov xchg mov test rcrl jne (bad) mov xor (bad) push (bad) int3 ds mov jb callq or (bad) addr32 jmp cwtl rcll lock mov jmpq and and rex.WRX in xchg sub and loopne xlat add sbb movabs pop xchg (bad) (bad) shll test jg (bad) seto loope adc (bad) xchg and callq stos mov xlat mov rex.RX push in out ljmp add int3 (bad) lods jns rex.RXB (bad) rex.WX jnp fnsave fcmovnb xchg int3 mov rorl rex.B push (bad) push enterq test rex.B scas adc mov (bad) popfq xchg fnstcw movsl mov rex.RXB (bad) shrb or rorl (bad) stc movabs imul mov lods mov rorl pop cmp rex.WX mov xchg retq fwait (bad) movabs push loop (bad) (bad) sbb out insb fwait rex.W and add int xor sub push mov xchg jl test (bad) (bad) push (bad) loop rcrl (bad) movabs cmpsl sbb subl (bad) (bad) (bad) ja push rex.RXB rex.RX retq cmc (bad) add enterq loopne test add in xor cwtl (bad) (bad) faddp cltd sub retq lods movabs test and xlat scas add add mov fchs (bad) rex.WRB rex.WXB adc test mov mov sahf mov mov test xchg sbb (bad) mov rex.RB jbe (bad) (bad) (bad) mov sahf js (bad) (bad) std xchg rex.WRB test rex.RB fisttpll pushfq rorl push (bad) (bad) or ds sub (bad) fisttp test leaveq (bad) sub or cmpl mov add mov rex.WB rex (bad) fstp jbe cmp stos (bad) movsl or xchg cmp (bad) rorl imul rcrl js (bad) out lret (bad) jo push pushfq insb mov adc sub outsl out pop pop movsl sarl cwtl add xadd xchg rclb lock scas (bad) cmc (bad) xchg cld (bad) clc and rorl jmpq retq jbe rorb (bad) ss addr32 add mov sbb (bad) add and (bad) in cmp pushq loop insb sar jno xchg add test scas (bad) callq popfq std pop imull and leaveq mov mov push in adc (bad) fistpl sahf mov shl icebp outsb scas out mov callq and ror rolb sub mov and cmp or cmpsl push jb sub (bad) (bad) in (bad) pop (bad) lret sub cmp movb pop pushfq xor sub out and (bad) hlt cwtl in mov sub and lea push (bad) (bad) lods rcll jg loop callq rcr (bad) cmc (bad) (bad) xor (bad) movabs mov out (bad) iret jnp jae loope add jmp (bad) pop in rcrl not imulb (bad) xor roll loopne shll jns sbb lock push (bad) (bad) mov or imul gs rex.WXB adc faddl fwait jno shll and ds pop sub (bad) sub (bad) movabs in (bad) mov test repz (bad) leaveq push xor xorl (bad) xor mov cld int3 jge movslq and rex.WRX rex.WR leaveq mov sbb cltd std rex.WR xlat movabs mov (bad) xchg and fwait xlat (bad) (bad) rex.W rex.B movslq cmp mov clc (bad) outsb rex.R (bad) add enterq jg rolb out (bad) es jo clc sbb imulb test adc adc ds movsl insl (bad) sub std adc (bad) (bad) add mov loopne clc (bad) rol mov rex.RX outsb mov test mov add rex.RX fs push imul mov outsl fldl jno rex.WXB pop (bad) (bad) (bad) mov (bad) insb cmpsl mov cmpb xchg lret or enterq insl loope loopne rex.WRX or sbb std add cmpsl (bad) in shll or js push and mov in (bad) sub rex.X mov and repnz (bad) repz movabs (bad) (bad) sarl ja rorl adc jmpq insb mov add mov adc rex.X rex.RXB or cltd loop out (bad) and xor std or (bad) mov (bad) rorl sbb in retq sub rcll jns xor fstpt mov shll (bad) add cltd rcrl negl lea in jb mov xchg jrcxz rex.WR or sbb rex.WB test cli sbb in sub or cmc and adc mov jmp mov mov sbb (bad) xchg mov shr (bad) (bad) test fidiv (bad) stos sbb cmp sbb or adc push add std sub rex.WXB je sti movabs rorb (bad) cpuid (bad) rorl rex.WR iret xchg mov add imul pushfq (bad) pop pop out and ljmp sub roll gs rex.WRX imul hlt fwait or shll pop lret jle xor (bad) mov jb test rex.B rex.RB movslq add pop (bad) fdivl or (bad) in jo or mov out pop movabs lods fildl adc repnz and xchg callq ror (bad) rcll mov fwait and in movsl rex.R sti orb fiaddl sub std in rex.WXB lret (bad) or sub add (bad) mov (bad) (bad) (bad) sbb xchg pushq retq subl sahf outsb push mov xchg fs repnz or (bad) pop and cmpb in (bad) cmpsl rex.R add add scas callq mov xchg movabs pop cmp ficompl adc lock cmp je cmp push (bad) rex.WB adc iret fs repz test (bad) mov sbb or mov int adc enterq rex.WRXB leaveq adc and rex.X rex.WR es leaveq test int3 int cld lock insl test pop repz push not jb (bad) rex.WXB mov and icebp mov int (bad) mov (bad) (bad) xchg imul mov mov or xchg mov jle sub rcll sbb push rex.WRXB (bad) movsl fstpl fwait std mov or (bad) outsl idiv adc jo retq movabs push callq lret pop mov mov jno sbb retq std rex.WRX in rex.WR rex.WXB outsb cs in std (bad) xchg loopne xor add cwtl or (bad) mov out pushfq test ja mov fiaddl mov (bad) jne add (bad) (bad) cmp rolb adc xor cmp or mov fs and (bad) movabs lods cli jnp pop adc (bad) jns test movslq cmp (bad) in rex.X fistp mov (bad) retq jmp lret lahf insl scas adc (bad) jmpq shlb fst mov insb cmp mov movslq rex.B roll xchg icebp (bad) cmp rex.W out sahf add notq int xchg xlat (bad) rex repz int3 cmp imulb adc fiaddl sbb or cmp fwait sbb jno cwtl fwait lret leaveq add ja std sarl (bad) repz (bad) pop in jne xchg and jno push lahf push rex.RX mov push test test xlat rex.WX sub xor mov add adc jae mov rcll add mov adc rex.WB andl cmpsb add roll sbb and rcrl push add mov cmp add mov repz rcrl (bad) rcrl int movabs cs rex.B and loope pushq jbe int fstpl xor movsl insl sahf cmpsb shll imull xchg push sbb movabs stos movabs cmc (bad) (bad) in pop (bad) add mov mov add rorl ljmp lock adc cmp cs insl jrcxz rex cmp (bad) and scas add xchg rex.W rex.WRX (bad) nop xchg sahf (bad) jo (bad) sbb outsl sbb (bad) sub test sbbb rclb lods jmpq xor cmp callq mov mov fiaddl (bad) xor push add retq (bad) insl rex.WRX and sbb cmp (bad) xor xchg rex.X (bad) push subl rcrl cmpsl iret add push rex.B out pop (bad) rorl lea addr32 sahf sub or mov cltd xchg (bad) shll sub (bad) or (bad) (bad) mov xchg faddl rorl fistp push mov fwait rcll fwait mov add push sahf jmpq push jrcxz mov add movabs rex.WXB rex.R rex.WRX sbb sub (bad) mov adc roll (bad) shll or jp loop pop movabs (bad) nop rex mov mov xor xchg loop movabs mov adc add (bad) add (bad) adc jae lea mov retq enterq test icebp or hlt jg and rcll cmp adc fdivrs xchg ss fs ror jns fistp rex.X and mov loopne out pop push xchg mov (bad) je scas sub (bad) rcrl adc sbb push in shrl mov (bad) cmp je ss cmp lahf lret sbbb (bad) (bad) sbb add mov stos iret popfq rex.B lock (bad) and (bad) fnop cs rex.RB pop adc xor mov test push mov rorl loop scas xchg (bad) rex.XB mov push (bad) sbb (bad) retq rex.WB pop or movabs adcl jmpq rcr sub (bad) jle push add sub cmp jae repz iret jl fs (bad) lods out mov push sub lock (bad) rex.B add callq push pushfq mov std sub (bad) and mov rol in jbe mov xchg cmpsb cmp add pop retq lea cltd lods pushfq roll rex.RXB movsl rcl insb pop rex.WRX cmp xchg stc xchg retq scas (bad) mov (bad) cwtl loope xor xchg fdivrp sbb rol sub in rex.B or xchg fadd jle js mov addr32 loop rex.WR rex.WRB (bad) cmp fwait andl repz mov or mov leaveq push repz (bad) stc rcll xchg pop adc jmp xchg and rex.X in in and sub pop and mov jmpq xchg jno jo sub loope mov sbb (bad) xchg movabs (bad) jns push loopne jnp jo mov mov test (bad) mov fnsave (bad) mov (bad) out out rcl adc roll fwait or sarl mov rex.R sub jmpq sub rcll data16 add shll pushq sub stc mov test (bad) rex rex.RX shrl jns,pt sbb rcl mov int sbb cmpb out mov je (bad) movsb and movabs (bad) (bad) rex.R rex.WRXB lock rex.X (bad) (bad) clc (bad) sub sub pushq xchg shrl (bad) xor cli movabs sub jno shl lock jb rex.R (bad) int sub nop xor movsb movabs pop outsb (bad) rol adc shrl mov and rcll or (bad) divb add fadd ja (bad) mov (bad) xor add callq jno div mov sbb iret retq (bad) push retq (bad) jns enterq andl adc int mov lahf leaveq sub stos push fcompl sub scas (bad) (bad) (bad) fisttp fadd cli ds rex.RXB adc mov rex.X rex.RB sbb mov outsb ja leaveq sbb movabs lahf jge sub (bad) sbb shlb (bad) push (bad) add (bad) retq pushq scas icebp push adc jae loopne rex.WR iret movabs bnd stos insl sub imulb jo icebp jb rex.WR (bad) or movabs out sahf sbb inc shrl xor (bad) test adc ja movabs xchg xchg add rex.B mov pop cltd adc mov loop push lea fmuls jle cmp lcall iret imul mov push mov adc ror jns or fwait movabs mov mov outsb ds xor (bad) sbb imul cmp rex.WRB roll mov lods roll jb shl rex.WRXB ror stos rex.W popfq jne rcll repnz movabs add movsl (bad) add pop sub rex.WRB jp movabs xchg jrcxz mov (bad) sbb insb jae (bad) (bad) push pop jmpq (bad) mov jb add lea (bad) xor rex add cmp in adc xchg retq outsl and mul pop jg cmp test (bad) ds cs (bad) mov test or loop or test bnd shl push movsl (bad) rex.XB rex.WXB (bad) xor pushfq jmpq fiaddl jle jg push adc movabs sbb jbe js adc jbe add rol add pop (bad) test jo (bad) xor mov ja jb mov mov rex.RB fimull jae pushq mov insb xchg or movabs mov jne (bad) and loope pop js xchg push sbb test pushfq fstpt (bad) std add (bad) push sub repnz sbb rex.WX (bad) (bad) or (bad) sub xchg outsb pushq jno sbb rex.WRXB icebp retq cmpsl xor jns pushq mov sub push and loope (bad) in jp sbb rex.WX retq loop (bad) adc fidivl fstl mov or out add enterq fldl2e xorb lock (bad) (bad) fisttpll test sbb sahf sub jge rex.X sbb (bad) xchg and in add stos mov cmp jo xor in or movsb rex.X (bad) ja push xchg mov lret cli jno (bad) bnd mov adc movsl jle fcompl test push jp lret xchg pop pop out (bad) rex.WR add decl mov pop int3 lock xchg icebp fdivs leaveq fwait (bad) lret (bad) in xorl push adcl mov adc retq pop in insl mov repz xor (bad) pop jrcxz jmpq adc jrcxz out xor xchg cmp iret movabs jne icebp xlat (bad) (bad) rex.WXB lret mov sbb mov loope (bad) lock mov callq sahf (bad) rex.WB fmul cmpsb rex.X mov (bad) rex.WR sub mov clc mov int sarl (bad) xchg (bad) sbb rex.WX in mov test in (bad) loop fdivs (bad) xor movsb gs xchg sarl in (bad) mov test mov sbb cmp (bad) cmp jg sub sarl add gs pop mov loopne out nop push cltd (bad) rex.WRXB popq mov add and jns and (bad) je jp fdivrl (bad) jrcxz (bad) jnp outsb fs rex.WXB or (bad) xchg je sub lret jne fsubrs sub push pop adc (bad) (bad) push or rorl add sub pop leaveq in cmp (bad) shrl test rcrl test sub fidivrl lods add mov (bad) repz retq (bad) pushq rex.X in (bad) adc mov rcrl or leaveq lret add add shrl addl cltd xchg test leaveq pop adc roll add imul hlt and movb sarl je movslq (bad) xchg ror add cli rex.XB hlt rcll movslq clc xchg or jno ss jnp adc mov fildll mov sbb jb sbb rex.WXB mov lea cmp and pushq xor shrl xchg xchg sbb out data16 (bad) rex.WR push push and (bad) (bad) rex ror lret shr leaveq mov cltd (bad) je int3 iret push movabs (bad) roll incl stos movslq cmp rolb cmp cltd jl mov retq cmpsb (bad) (bad) movslq sbbl and in (bad) mov (bad) rex.WB shlb sbb (bad) cli xchg insb xor and outsb mov pushfq (bad) iret leaveq mov xor xor roll jmp and movslq rex.RX push testb (bad) stos outsb rex.R jb and adc ja enterq shll add xor (bad) adc loopne cwtl pop rex.WB loope (bad) divb lock js mov (bad) leaveq sarl fwait jns and and mov rex.R mov (bad) xlat lock sbbb insl out retq addb callq (bad) fdiv (bad) (bad) xor out (bad) in cmpsb repz add jge sbb pop out mov movsb orl rex.B icebp mov repnz fdivrp (bad) sbb cmpps loope cwtl add rex.WR add mov out cs rolb jb adc sub loopne sbb pushfq xor or adc cmpsl (bad) mov mov mov or (bad) test mov or clc sti fstl jmpq movabs fildll jb mov fadd mov jno jo loop cmp (bad) loop (bad) cmpsl and cmp popfq int3 sbb jae rex.RX and in lret pushq jnp (bad) push jrcxz movabs lahf cmp cmp (bad) stos push fucomip or xchg (bad) pop jbe xchg imul and cmpsb (bad) jo cwtl cli xchg mov (bad) xchg adc outsl sar insb movabs notw outsl or cmpsb (bad) sub xchg es add or jp sub cmp lods mov jne mov xchg xor frstor cmovne lods (bad) icebp (bad) xor sbb fistpl xchg cmc (bad) push pop (bad) jne pushq (bad) test iret movabs rex.WRXB adc jno data16 (bad) lret sahf movsl iret es push popfq xchg roll push out sub rcr cmp mov jns (bad) vmaxpd or es or sbb push pop movsb and jp add (bad) sbb rex.RX gs xchg shr pop rex.W pop enterq jmpq loope movb mov mov (bad) xor jne lock (bad) xor (bad) int3 fcmovb adc popfq adc pushfq (bad) faddp xchg pushfq or jge pushq push and rcll (bad) pop or fwait adc rcl lods nop jmp xchg and insl int3 adc sbb xor (bad) sub rex.XB rex.WX addr32 (bad) and rex.RB jno mov enterq test (bad) repz fsubrl mov mov pushq push add jb retq shl rex.RB sub cli movabs rex.B int3 ficom int3 retq cld imul xor cmp clc jbe cmp sarl in jno (bad) pop xchg and sub loopne rex.WRXB mov pop mov mov xor and movabs mov rol cmp add rex.WRX gs pop cmc xor lock repnz (bad) mov adc (bad) test outsl sbb (bad) add add clc pop adc cltd fs loope lret (bad) cld (bad) lock sar and retq lret mov jno or mov mov movslq roll rex.W pop (bad) sbb sbb int3 movsb xchg mov rex.WRXB std bnd add callq sbbb test rex.B cmpl xchg sub fbstp movabs rex.RB outsl mov or lahf xlat jle jnp loope scas rorl add mov rcrl fwait push movsl int3 lods int3 mov or (bad) shrl (bad) mov js (bad) addb sub imul mov int3 (bad) xor rex.R xor and add lret adc std xchg rclb loopne xor push cltd (bad) mov (bad) stos (bad) std xor stc (bad) int mov rol xlat mov je cmpsb xchg and push outsl negl negb mov fwait (bad) lret out stos in rex.RX mov cmp add add nop (bad) rex.XB mov rcl insb shlb mov test mov test sub movabs add stc lods sbbb jne or push icebp adc pushfq stos add cmpl mov cli rol jmp cmp mov in push lret rex.R jae sti (bad) sbb rex.W rex.R sbb insb lret test add (bad) (bad) (bad) stos test rcll andl adc mov int fisub xchg add fs movabs xor rex.WB es adc sub int ja divq or popfq loope mov std (bad) xchg mov pushq in pop jle push mov jns (bad) movabs (bad) lock (bad) mov (bad) int3 (bad) rcl xchg sbb (bad) ja shr push cmpsl in ds callq clc xor pop jle rex.WR iret popfq xor pop (bad) (bad) jl mov lret mov xchg xchg movabs push iret addl (bad) rex.WB xor (bad) sbb add rex.R adc sar jnp xchg add out (bad) jo movsb mov pop rex.RXB (bad) repz ss enterq sbb std in mov sbb mov xorb repz mov (bad) stc lock rex add fildl xchg loop pop (bad) lret rex.B xor in cltd mov cs xchg rex.RX cmp pop xorl movsl sbb rcrl or popfq scas mov (bad) (bad) (bad) rex.RX and loop out shrl and int3 push (bad) mov or xor jg (bad) fstps xor push lea (bad) repnz cmp or (bad) cmp imulb loop pop shrl (bad) (bad) cmpsl mov jns mov push movabs xor xchg add (bad) (bad) loop mov push mov and stos xor cli add xchg movsl (bad) movsb cltd jbe rex.X insb rex.WRXB insb and cmp clc (bad) lea mov pop rex.RXB stos mov mov fild cltd push popfq ja shrl mov cmpl repz mov (bad) mov and rcl (bad) fs lods movabs sbb retq movsb test push mov add mov shll rorl jae pop xchg movabs mov shrl retq in push mov out xchg popfq popfq add pop outsb (bad) loopne lea and sub (bad) (bad) mov xor fadd cmpsl fimul adc rex.WRX jrcxz pop lret pushq pop rex.B xchg mov push jmp rex.B mov inc xor fwait shlb and xchg es rcll adc mov sahf sbb shll sub outsb cmp (bad) jo adc lret rcll add rex.RXB push shrb jbe rex.R repnz clc rol scas rex.RX xchg movabs out popfq out insl (bad) xor sbb fdivr add mov loopne push roll jg xchg cmp (bad) xchg jrcxz sbb mov sub retq sarl mov mov add (bad) loope add (bad) shrb addr32 or nop pop sbb adc out rcr xchg cmpsb (bad) mov rex.WRX sti rex.B jrcxz fimull (bad) xor add xchg jns push imul rex.XB add iret movabs jns rcll sub lea ja (bad) xor mov test mov loopne xchg fnstsw rcll and jo mov or cmc adc (bad) movabs mov sub scas in (bad) (bad) rex.X test fstpl ja (bad) jl cwtl mov movabs movsb (bad) (bad) mov insl nop (bad) mov test mov je mov rex.RB pop pop stos test pushq sti sbb xor jmpq push rex.WR loopne (bad) add mov push cmp (bad) out and add cmpl int3 lret (bad) popfq xor (bad) sub retq callq movabs int fwait (bad) movsb (bad) test or mov in (bad) imul jo retq mov jp and (bad) outsl push test adc mov pop mov mov movabs shlb jg mov sub imul ds ffree je test ror sbb imul fwait (bad) fidivl lea ss test push pop mov (bad) jle jg mov retq or cmp fs jbe loop sbb jae sarl ja xchg add sbb out push (bad) movsl cmp add andl xchg push mov repnz mov in and mov loop ror push adc in xchg (bad) fcmovbe mov popfq outsb xor loop push ror rex.WRB scas lahf (bad) cmp (bad) lret mov lret rcll divb add insb (bad) add mov cwtl jp jne (bad) rorl jge scas jns rcll mov rex.XB rex.WRB int add fidiv sbb and fs mov ss jmpq pop js mov dec sti (bad) jge rcrl rex.X xor (bad) je insb mov nop add rcr mov sti cmp rorl jne jp sub leaveq and ds sbb cmp pop enterq shll sarl mov shrl scas adc rex.WRXB sarb (bad) xor movabs (bad) frstor js leaveq roll cld (bad) jg xlat retq rex.WB mov sub xchg (bad) pop movsl (bad) mov pop push cmp outsb xchg shrl pop repnz (bad) jge xchg mov or mov jge loopne (bad) test pop ss inc xor jmpq pop jb xor lret pop retq outsl sar mov sarl and xchg rorl jp sub jbe pop push mov retq (bad) xchg (bad) (bad) mov retq loope incb loop pop sarl es leaveq cli mov scas fldcw cs (bad) or sub push pop (bad) int movabs cmp repz (bad) jno sarl pushfq (bad) rorl pop leaveq or int3 callq mov movabs rcrl xchg rcll out mov stc loope mov xor (bad) mov (bad) mov xchg xor mov xlat retq pop add (bad) adc cmpsb (bad) add (bad) outsl xchg (bad) sub retq scas leaveq int3 add movsb shll (bad) repz shrb vpsrld test leaveq addr32 mov add cmp in (bad) mov and xchg rex.WB scas mov rex.RB xchg cld shll out rcll movabs mov (bad) jo and xor cwtl divl adc nop lret jl iret icebp sbb mov (bad) js mov (bad) movabs retq xchg fnsave lea rex.WRX and rex.WX mov rex.WB cmp jp int (bad) scas insb rex.RXB mov mov sahf mov push pop imul mov out vshufps retq jbe (bad) mov adc retq rex.WX rex.WB rex.XB ds jbe scas rex.W js fpatan shrl add (bad) add rex.RX pop clc data16 jno rex.B sti (bad) shll loopne (bad) mov cmp rex.WRB cwtl orb cltd sbb test cmpsb cli mov (bad) push imul (bad) jno scas jae and cmc insb rex.WRX test jle sbb (bad) imul pop add fmul mov lods rcll xor add rex.R movsl int3 sbb (bad) lock roll movabs mov adc jns rex.RB (bad) stos or mov in sbb cmp negl rex.B lock xchg xor shrl retq cltd cmp (bad) or mov (bad) repnz rex.WX rol mov (bad) cmp shll pop pushq mov int push and rex.XB fbld (bad) test (bad) lahf scas (bad) shl lods jo icebp imul stos fwait outsl pop insb rex.B lock jo loopne (bad) (bad) and lret sbb cli pop (bad) test lods xchg mov int (bad) sub mov stos pushfq lods xor mov rex.XB cmp mov push push cmp mov fidiv mov mov xor (bad) fldenv (bad) iret out rolb rex.WRX loop add lods ja repnz retq push clc pop js mov rcll mov shll or fs es sarl add (bad) xchg rex.WRXB stos (bad) jnp nop hlt (bad) (bad) (bad) and pop movsl (bad) or shll jl push add mov add xor mov test push in fistl subl adc pop or movabs add lock pop pop pop rol cmpsb mov scas pop movsb rcrl subb xchg retq (bad) lods (bad) jae sbb cmp push mov in cmpl (bad) mov lock rcrl jo retq xchg pop int imul movabs sub retq sub push cwtl adc (bad) mov xor cmp addr32 stos rex.RXB mov repnz imulb (bad) cmp addr32 ds int3 sbb bnd and movsb add je test lock roll mov xor jp or int (bad) jmp sub movl cs int push movsb test adc xor std lret fwait push testb movabs (bad) pop pop mov fimull stos mov or mov and (bad) popfq jp xchg xchg rex.R cmp add cmp (bad) lods and insl movsl hlt stc jmpq mov sahf div rex.WRB (bad) mov shrl adc retq ss rex.RX jns sbb rex.XB xor fcmovnb push rex.RX ficompl test xor xchg xor (bad) or cmc scas mov or xor mov movsb mov pop es rex.RXB cmp adc mov fsubrp fs out vdivsd rex.WXB add rex.R rex.X notl (bad) xor icebp rex.RX rex.WB lods clc pop push pushq mov rex.XB retq pop push rex.RX movabs (bad) (bad) and rolb rex.RXB jge push lea rex.WRX rex.XB rex.XB mov (bad) pop or cld rex.WB cs scas rex.RB sbb cmpsb xor outsl movabs and test (bad) xchg (bad) adc movsl cmp rex.RX fsts rex.WB pop and rex.WRX rex.WX rcr sub (bad) callq or pop cli in mov (bad) movsl mov mov (bad) (bad) out sbb (bad) ljmp stos pop lret out retq or sub and mov sbbl rex.RXB rex.WR fadds add fnstsw jns clc (bad) cmc lret data16 fstl (bad) or xchg shll xor or lret sub repz and retq rex.WX (bad) mov xchg cli retq mov lea cmpsb in pop push rex.WB callq cmp jno or imulb pop lret (bad) retq jmp sub sti gs fld test or jp add push repz (bad) or cld lods test rex.XB (bad) rcll rex.W movabs loope jo sub lret sub adc jl and xor rex.WXB (bad) or lret (bad) or int3 fdivrl mov (bad) add dec icebp scas (bad) (bad) mov mulb cltd retq push mov movsb leaveq xor out mov rex.R mov (bad) outsl sub mov mov (bad) pushq out shlb add (bad) (bad) (bad) cltd (bad) (bad) divl mov jnp pop lods pushq xchg lret loopne in xor addr32 cmp jg xchg movabs cmp rcll mov (bad) jge and fmulp push sarl mov shl (bad) jno out out sarl es mov add movslq rex.XB flds pop (bad) rcll adc pop sbb mov cmp (bad) jbe sub xor cmp icebp iret (bad) adc loope rex.WXB rex.XB rex.WB xor adc rcll out (bad) adc rex.R rex in movsl ror add movl shll or add cmp (bad) xor int (bad) adc rex.B imul rex.B pop out repz test in mov roll (bad) rex.WRB lret jmpq cmpsl (bad) and pop je roll sbb mov (bad) pop push out roll stos add fnstcw rex.RXB in mov mov (bad) imul fwait (bad) cmpsb mov jl loope rex.B jnp enterq movabs scas movabs (bad) callq cmpb movsb pushq (bad) adc jno mov adc adc je,pn sub jo jne cld (bad) lods jno push repnz retq (bad) clc push push (bad) retq (bad) (bad) mov fcompl retq rex.R add rex.W fdivrs sub lods retq xlat rex.WRXB or jnp test pop add rcr jae (bad) adc clc mov cmp lahf rex.B (bad) xchg mov sbb mov lret fucom ds nop and loopne jge and cmp loopne or jne (bad) movb cli faddl rex.WR out or jrcxz test pop js xchg retq enterq callq in repz repz and xchg (bad) pushq mov sub rex.WX rex.WB imul rex.X add insl xchg (bad) test pop (bad) clc pop xor lock sbb fbld and (bad) retq xchg fstpl (bad) lretw jb sbb mov jne push int pushq cmpsl rex.WR or int3 retq imul adc mov (bad) (bad) xchg (bad) sub rex.WX lahf mov (bad) adc add sbb (bad) rex.WRXB sbb mov rex.WB xor imul adc mov sub cmp mov (bad) xor popfq sbb mov sub jge popfq push cmc iret and cmpl sub (bad) mov xor es cmp enterq add test (bad) rcrl xchg movsl push gs rcll mov rcrl imul mov sarl shrb (bad) rcrl ja jle insl or jns (bad) fidivr sub lods jns sarl ds (bad) callq stos add xchg int3 movabs xchg in fiadd outsl mov repz lret jle je (bad) (bad) data16 shll jae (bad) int cmp mov rex.B ss adc cmp idivb add imul cmp mov lahf (bad) movabs pop jmpq sarl mov fadd and add mov lret and js nop cmc sbb sbb rex.WRB rex.RX jno ds mov cmp xor cld (bad) test sbb (bad) clc xchg shrl (bad) in out or sarl (bad) (bad) ss roll cmp pop sarl xor (bad) ficomp fs mov jrcxz lahf (bad) ja cs sbb test sbb or stos pushfq shl movabs rex movabs fild popfq ds (bad) (bad) rorl cmp loope repnz (bad) mov mov test jg cmp rex.WB adc outsl cmp pop mov jge mov pop test insb ja xchg mov outsl fldl rex.WRX loopne lock test fisttp rex.X rex.WXB mov movabs adc bnd mov fldl subb out mov idivl pop movabs retq (bad) cmp push mov enterq jnp es push cmpsl sbb stos lock jb movabs sbb push sarb rex.RX data16 test (bad) rex.WB cmpsb xor rex.R repnz stc jp mov (bad) sub sub mov rex.XB xor push push stc rex shll cli add jl push jne xor out push (bad) (bad) callq (bad) adc sarl imul in (bad) rex.R sbb fs jb cltd out jnp xchg (bad) mov and mov ss (bad) cli insl leaveq scas (bad) movabs (bad) vshufpd add sti mov pop lods out ja jmpq in fcmovne outsl push (bad) movabs cmp cmpsl pop sub or mov rex.WB nop cmpsb sahf rex rcr pop sti (bad) movsl mov pop (bad) vpaddd stc add rex.RXB fldlg2 push xchg pop rorl test jge repnz ffreep adc jrcxz shll rorl push (bad) lea rcrl xor pop mov (bad) pushq std in movl lahf (bad) sub cmpsb (bad) jl or push (bad) push lret lods mov mov mov repnz lods loop movabs adc rcll jb rorl repz push out (bad) sbb pop rex.B rex.R xorl (bad) (bad) callq icebp pop (bad) negl lea cmp sub xchg fwait movl rcrl xor xor rcr shrb (bad) imul sbb xchg (bad) in (bad) nop out pop xor rex.B jmpq repnz push (bad) cmp fsubs shlb cld xor test shr rex.WR enterq adc mov add push adc rcll in lea (bad) shrl insb sub jle rex.RX movabs pop sbb xchg mov not fisubl (bad) scas pushq rex.WX push jrcxz rex.R mov jmpq (bad) jne sbb sbb (bad) lret loop mov (bad) xor sub mov hlt xchg pop std cmp (bad) rex.B rex movsb mov mov add cmp adc lods repnz mov add or ss stc rex.RX add jb or fcmovnbe mov or xor add (bad) xchg mov push jb rcrl jne sarl jle fadd imul in je outsb (bad) rcrl sbb mov (bad) rex.WR mov adc push sar test cwtl fwait sub (bad) xchg (bad) (bad) sub xor (bad) xchg fcmovb mov lret leaveq in cmovne cltd and sbb mov loop push cmp fisttp retq (bad) jne mov rex.WRB fs (bad) push outsb sbb test test lods roll mov mov fisubl jbe js sub out pop (bad) lret rex.R insb enterq outsb lret mov rclb pop rcrl mov sbb div (bad) in mov mov adc push push jns cmp addb mov jae rcll adc and (bad) rorl mov stc test and mov (bad) sbb add push xchg ss (bad) movslq lret rcrl cmp mov mov lret mov cli add (bad) mov subl fildl mov xchg rex.WR lahf mov fs add (bad) xor adc roll rex.WX shl sbb insl movsl stc pushq (bad) sbb adc cmp icebp fcomi cmp (bad) stos pop sarb xchg imul rcrl pop sbb add mov xor movabs sbb movabs xor rolb cmp push adc loop mov (bad) lea andl rex.WXB lock scas (bad) pushq fcmovnb pop out in or xchg lods (bad) hlt imul gs (bad) movabs lods enterq sahf rex.W gs (bad) mov and sbbb movabs in mov out rorb sub in callq roll movabs mov movslq rex.WB fcmovne rex.WR (bad) cmp add jbe rcrl outsl add cltd jmp pop lret shll rex.RX jns lods mov push sarl pushq sarl testb (bad) mov sub loope movsl (bad) xchg ror out insb adc (bad) hlt jmpq sub add roll pop lods int3 jle movabs xor cmc xor add cmp notb adc shll mov adc (bad) imul rex.B mov rex.WRX pushfq (bad) lock out (bad) sbb clc sub iret jmp ja xor fwait insl or movabs xor shll cmpsb pushfq scas add sub rex.WXB adc or add xchg roll movslq (bad) rex.XB fwait rex.WXB ror mov (bad) mov test (bad) in rcrl (bad) mov cmpl nop xor and xchg add sbb je movsb in xchg xor rex.WRXB mov (bad) (bad) mov cli (bad) xor (bad) or xchg sub jle enterq and enterq rex.B rex.RX movabs (bad) retq jp mov pop jnp sbb jo leaveq xchg sbb mov add out cmp sbb cmp in cwtl and imul and cmp outsb rcll add repnz or adc adc jg pop mov (bad) mov lods idivb je sub xor (bad) movsb or xchg cld clc in in add add sbb repz ror (bad) cli sub fsub clc sbb mov xchg or cmp fcomps sbb (bad) mov repnz retq xlat xor jnp add and lea jle (bad) retq or (bad) cmpsb fs xor int3 fiaddl rex.WRXB retq incb xchg mov movsl cmc mov fbstp push (bad) outsl jae ss jno gs sbb jae jge in (bad) adc and mov rex.WR add insb jmpq (bad) int jno lret cld adc or lods sbb pop (bad) retq fisttp clc imul rex.WX stc rex.RB lret mov movl xor sbb jo fldt cs and sahf mov sbb mov sbb rex.X add (bad) rcll (bad) and pop pop or rex.WRXB movabs (bad) ss fwait (bad) (bad) sub and rcr (bad) cwtl (bad) outsb movsb rex.X cmc repnz rex.WXB and (bad) pop push pushq leaveq rex.WB hlt (bad) movabs cmp rcll test sub mov or mov jbe or (bad) shrl fmulp (bad) push or rex.WRB gs add loopne rorl rex.RXB rol andl (bad) rorl cmc or movabs out fldcw rcrl pushq shll cmp xchg pop cmpb mov and cmp mov add pushfq push lods shl (bad) out lret jp add test iret shll sub icebp ffreep mov mov orl jns test rol movl xor mov adc movabs rex pop stc push (bad) stos out cld adc sub jae lret fnstenv or cltd (bad) rcl mov push int3 lea (bad) loope cmp jns movabs rex.RB movslq rex.WRX popfq out movabs test rex.R add loope rclb movsl (bad) cltd mov and xchg jbe pop or fyl2xp1 xlat xor (bad) rex.WR shll fist cld (bad) fisubl (bad) je movabs push and imul mov mov mov pop xchg rex.WXB mov lahf rclb lock add stos or insl push (bad) lahf jb (bad) push rex.B (bad) je (bad) jno shrl sbb add enterq xor rcl repz cwtl shrl pop cmp (bad) (bad) outsl xor addr32 sub (bad) cmp pop cmp mov sbb rolq clc or in callq add rex.WRXB lret (bad) repnz cmc push rol xchg movslq mov and jmpq and xor cwtl sub sbb int cltd sarb rex.XB (bad) stos rcll stos jle cltd adc pmaxub data16 hlt (bad) (bad) jns rex.WRXB (bad) jbe pop and xchg rcrl cmp sbb retq sub lea jae and (bad) movsl iret mov jnp lock cmp and ror add loop xor lods jrcxz roll sub lret and cmp and callq roll int roll pop imul (bad) rcrb jnp add sahf sbb or mov sub scas repz cmp sahf shll test stc sarb (bad) adc (bad) jne (bad) adc in mov sbb (bad) (bad) nop jrcxz adc mov (bad) test cmp in cmp pushfq push scas sub mov (bad) callq rex.B cltd (bad) xor rcll xchg pushfq jmp sub out adc rex.B ja push sub adc jmp data16 sub xor in rex.WRX test popfq mov repnz (bad) jmpq cmpsb (bad) rex.RX movabs xchg (bad) jmpq mov movsb sbb mov insl cs (bad) andb leaveq cli in rex.RB rex.WRXB (bad) inc mov adc (bad) (bad) imul (bad) lret (bad) sub pushfq rex.X popfq in push cmc (bad) cmc mov add rcrl movabs jb jns (bad) rex.X add movabs mov data16 rcrb cli xor (bad) sub (bad) in loopne sar (bad) jrcxz fld sub rcll imul cmc xor sbb leaveq rcrl jbe ja xchg fildll retq add std add (bad) movabs fist testb lahf rcrl mov push push mov (bad) mov test loope jae pop mov pop sahf mov xor (bad) jno movabs cmp (bad) insw rex.WRX loop add out ja test (bad) pushfq clc rex.B sub popfq (bad) std rex.RX int3 (bad) sub or jge xchg xchg lahf pop push movsl (bad) imul add sub cwtl loopne mov xchg rex.WR retq pop adc fldl mov rex.RXB in rex.W (bad) popfq rex.RB out jno insb jl mov adc fwait ror mov sbb jne incb rex.W pop rcr xchg jns sbb adc (bad) rex.WR push push (bad) rolb and lret (bad) adc repz cwtl imul int3 jle xlat rcrl cmpsb xchg add jne sahf adc ja test (bad) rol in or cmp add xchg (bad) data16 ss movabs clc rex.R mov retq mov (bad) rex.B jno mov mov imul (bad) pushq xchg nop push (bad) popfq (bad) rcrl push insb movabs neg movsb loopne sub decb scas roll (bad) jae cs lods rcll rol jne test xchg jg and xor pushq push roll divps xchg movabs sarl out imul cmp adc pushfq add je fld cltd sar fistpl imul xor jge or xchg (bad) ror lahf (bad) jb mov (bad) rex.RB (bad) xor cmp cmc (bad) shrl xor loop rorb rex.B push (bad) xchg sub cld rex.WR mov (bad) cmpsl rex.WB (bad) cmpsb push lret xor rex.WB (bad) sbb rex movsb (bad) (bad) out (bad) ffreep (bad) lret xchg icebp sbb fdivs add movslq roll mov (bad) cmc lret clc scas mov jno (bad) cli xchg (bad) rex.B cltd out add mov and out (bad) out rex.WRXB mov test (bad) shrl movsl pushq push add adc rex.WRXB enterq add test int3 cmpsl ds (bad) or xchg jb in sub (bad) pop test mov adc movabs enterq cmp mov adc stc and in xchg rex.W callq out add cld mov test xchg cmp fistp shrd (bad) pushfq icebp xchg fdivrs rol rex.X shrb out rcl mov rex.WR (bad) cmc add sub jle push sar popfq movsb enterq insb jle and cmp in (bad) rcrl (bad) pop scas sarl movabs movsl xchg loope iret (bad) mov pop push out jge (bad) (bad) icebp xchg fisub mov fsubs (bad) movsl cmp xor push movabs mov lret sarl pop sarl shll je cmp jae rex.RB rex.RX rcll (bad) mov (bad) lret rex.WRB adc sar retq es (bad) cld sub add xchg enterq nop cmp icebp movsb mov jno mov (bad) rex.RX fcmovnb add cmpsb add fsubrp mov iret rorl sub fsts shll pop xchg fsub retq and sub stc mov cmpsl (bad) cmp cmpsl fld mov int3 sub pop (bad) outsb pushq lock je jrcxz push mov rex.WX rex.WR (bad) stos add movabs lods shlw (bad) rex.XB imul negb lretw pushq (bad) loope xlat fwait mov (bad) lahf xchg xor imul imul adc rex.RXB shlb lea icebp fist loope (bad) (bad) push fwait scas mov add sbb outsb xor int3 outsl (bad) (bad) cmp sub out sbbl cs push (bad) mov (bad) rex.B shll and (bad) sub movslq in and (bad) cmp lret push add fisttpl (bad) (bad) imul pop pop jl incb xchg (bad) cmp fcoml lahf xor add in or rex.WXB add xchg pushq enterq sbb data16 lret xchg (bad) loop cmpsl mov cmp shr jle repz (bad) mov (bad) mov (bad) rcl and push mov and repz mov test (bad) pop xchg movabs and (bad) rex.R add (bad) mov movsb out movabs (bad) hlt pop add mov cwtl sbb jle roll shlb xchg pop in mov sarl fiaddl (bad) xchg xchg stos mov lret mov in sub vaddsubpd adc (bad) decl mov mov mov mov rorl sbb mov and mov xlat rex.RXB andw sahf (bad) repz sub push mov push cmp mov out jle sti js scas mov leaveq pop decl fwait (bad) retq loope rex.WX lret add sbb out add xor test mov jmp js (bad) in cmpsb (bad) xchg roll sahf rex.WX mov mov and mov sub (bad) and adc jmpq jp popfq rex.X cwtl (bad) jb pop movabs xchg movsl and roll (bad) and adc (bad) shrb rcrl (bad) cmp jbe insl lock repnz xchg lcall add rex.RXB sub js jle rex.WRB stos outsl cmc (bad) inc retq and and rex.WXB (bad) mov in fisubl sub stos sti or (bad) cmp (bad) add xchg mov xchg xor loopne fcmovnu mov (bad) and jg rex.WRXB sahf add iret fcomi jns test faddl add xor rex.WXB lret mov adc push push ds (bad) lods nop test rorb ror add (bad) rex.W (bad) frstor jmp and (bad) rex.WXB mov cmp popfq rorl repz xlat movslq (bad) gs jne insl loope sbb test mov push xor and (bad) movabs rcrl mov in xor pop add movb ds cld cwtl and rcll stos rcl (bad) gs mov xchg jne sbb (bad) fs xchg (bad) repz fistpl rcrb and shrl sbb nop (bad) cmp popfq lods test mov add adc xor fcoml and xchg (bad) repz rcr rorl icebp lods rex.WRX (bad) and sub (bad) xlat (bad) (bad) movabs mov lock cmp jb int loope jg xchg (bad) (bad) jbe push push out rex.B jo out (bad) mov shl jrcxz pop rex.R rcll (bad) mov sub mov cltd stos shrl popfq jl pop (bad) lret retq outsl sub movabs pcmpeqw js xlat mov outsl jae adc or xor (bad) rcl rex.WRXB (bad) xor movsl rex.WRX addl lock mov in add cld movabs fucom test fldcw sbb lock jne fsubrs sbb insl (bad) roll mov mov (bad) js jo jo shll mov sarl stc jns and sub cli sub mov ja (bad) cmp (bad) out mov lret clc (bad) jns leaveq (bad) imul mov push cld jge xor rorl lock sub lret outsl movsb add and jne and pushq sub (bad) clc xchg rex sbb jb pushq out pop mov and callq je jle scas outsb pushfq out cmp (bad) (bad) fldt rcll (bad) jge (bad) lock (bad) lods (bad) pushq xchg or mov mov mov cmpl or jno addr32 jo xor rex.RXB test rex jno (bad) (bad) pop clc shll sub add rorb xchg mov lcall rex and and rcl (bad) ja mov or icebp lret rex.WR pop negb rex.R xor mov (bad) (bad) jge lret push (bad) (bad) shrl push xchg std or rex.R mov fwait xchg (bad) (bad) add adc lods adc xor adc movabs (bad) sarl push in in stos add retq (bad) cmpsb orl (bad) sub movslq add (bad) rex.XB (bad) sarl rex.X sub data16 std (bad) (bad) stos fwait mov (bad) mov sarl testb (bad) xor rcll and (bad) test (bad) xchg mov cmc test nop (bad) rcl frstor pop rex.R pop out mov scas scas iret movabs insb rex.WRB (bad) (bad) cld add loope pushq lcall cmpl (bad) rcr out mov (bad) xor mov popfq xlat mov sbb jo xchg fadd pop (bad) movabs (bad) insb and jmp repz or xchg rex.XB (bad) (bad) add cld fldenv or or sbb ja jno add lret addr32 rex.WR sub test rex.WRX xor out in fcmovne (bad) movsb xor stos out push (bad) enterq rex.WX jl sbb xchg out (bad) xchg (bad) rcr outsb rorl adc jae mov retq pop (bad) roll push in sbb sub (bad) cmpsl (bad) rex.R out rcrl mov cmp rex.WR repz or lret out in stos (bad) adc shrb rex.RXB negl xor leaveq cli sbb in (bad) rolb jl scas (bad) int mov out fmul (bad) or gs nop (bad) (bad) adc mov (bad) rcr and rcrl mov movabs fs orb rol lea (bad) imul jp rcll rex.WXB mov and icebp cmpsl (bad) add mov xor sub rex.WXB rex.RX jl rex.WR pushq outsb (bad) (bad) mov popfq add shll mov fwait sub (bad) (bad) rcll ficompl rex.WX movsb xor rex.B xchg add adc sbb add (bad) rex.WXB test mov fcmovb (bad) (bad) jmp retq mov test (bad) or stos notb iret lmsw test int sub pop lock es jno (bad) nop stos vcomisd and push pop jae,pn fsubrs (bad) sub roll sub mov jl sar insb lods fcmovnb callq push xor sbb mov stos (bad) rex.WXB cld pop cmpsb (bad) fsubr xchg leaveq movsb fldenv (bad) pop movabs decl mov or fidivrl movabs jae sbb pop and movb add rex.RXB cmp lret (bad) repnz sub sub scas pushq (bad) leaveq lret or int xchg test xlat sub (bad) (bad) (bad) and imul sbb jmpq rex.R ds fwait cmp (bad) jno movabs imul fidiv (bad) rex.RB mov pop xchg and in sub pop sarb (bad) sub fwait adc rex.WR rex.WRXB fisubrl (bad) lods sbb xchg lahf fbld push rex.B mov (bad) cmp cmp js sbb jge mov repnz (bad) (bad) jle mov add enterq jno or add insl retq sbb adc cmp pop cmc cmc xchg cmpsl lea enterq (bad) shrl cmc add loope jp add sbb push (bad) adc and (bad) repnz loopne mov (bad) lret jmp (bad) fmulp xchg fsubl sub outsl xchg rorb cltd xchg and out (bad) or rex.RXB rex.WRB add sub jae cmp (bad) lea rex.WRXB sub movabs fistpll stos fstl jns mov xor xchg (bad) (bad) mov mov add fnsave cmc jb sbb iret icebp pop (bad) cmp push (bad) test clc sbb xor (bad) (bad) (bad) (bad) nop xchg xchg cmpsl rorb xchg pop (bad) cmp movsb or insb sar gs mov rorl cli int imul and mov (bad) fisttp rcll (bad) and cmp (bad) popfq mov pushq (bad) and shl cltd adc stos xchg jg sbb lock outsl (bad) sub adc movslq rex.RXB rcl (bad) divl push (bad) ror test rex.RX lock loopne mov test gs out and (bad) repz fcmovbe movabs xor (bad) shr jmpq mov add push push shll add sti insb jbe loop cmpsl mov mov or adc xor imul lcall (bad) roll jns stc (bad) (bad) loop cmp rex.RB mov out (bad) jmpq in xchg (bad) (bad) jo sub pushq ror jnp or pop (bad) add adcb fistpll push rex.RXB sahf xchg int mov rcrl insl movabs loop loopnel xchg out mov shrl rex.R rex.WRB cmp mov sbb (bad) clc mov jb (bad) insb mov xor je roll cld pop in adc push push scas rex.WRX rorl push push in sbb (bad) rex.W (bad) shrl adcb (bad) loopne,pn jnp repz movabs (bad) (bad) xor test sarl insb (bad) mov negb (bad) cmp pop pop mov (bad) jp or lret movsl mov (bad) add add jbe fdiv and (bad) rex.WB fwait push xchg (bad) jl mov mov rex.X sbb int3 retq cld pushfq cmove test pop clc rcrl jg (bad) pushfq movabs psubusw retq loopne retq rex.WRXB jbe in insl sti sbb add xlat (bad) (bad) out sbbl cmp sahf (bad) cmp (bad) in lret iret mov loope (bad) xchg lret add and int (bad) xor (bad) cwtl std cmp mov or mov and jrcxz or cmp rcrl mov movabs or sbb rcl mov nop push xlat (bad) (bad) mov (bad) (bad) iret test insb rex.WRXB sub cltd xchg mov pop jae push jg adc (bad) pushfq sbb in jp out and inc xlat or stc xchg (bad) rol mov jno mov cmp cmc jns shl rex.RB pushq (bad) jmpq lock adc xchg (bad) repz mov rex.X sbb push xlat add xor cmp add popfq mov adc mov lret movabs hlt jnp (bad) xchg test pop retq (bad) (bad) bswap retq xor ficoml shll in mov push (bad) sub push sar fdiv in rcll movslq xchg cli push movsl mov fistpll jb (bad) (bad) push jbe sub loope scas int shll (bad) adc push mov sarl loopne (bad) in mov cmp or add cmp hlt mov jnp or (bad) pushq sahf retq jmpq pop push or add cmp (bad) rorl cli push (bad) adc rcl pop rex.B xlat xchg (bad) sarl test jl fildll jo je sbb xchg iret ss fbstp sbbl and cmp fisubr cmp cmpl movabs test rex.WRXB adc rex.RB rorl loopne lea mov jg (bad) and mov jns add (bad) (bad) rex.WX (bad) (bad) movsl iret cmc (bad) sub ffreep (bad) mov mov (bad) or jae lea xchg rex.WRX (bad) mov push (bad) mov shrb in roll pop lods outsl stos or lods addr32 mov sarb movabs fsubl retq add xchg nop scas mov cltd (bad) cmp push enterq fs rex.WXB (bad) iret shll scas (bad) (bad) sbb addl sbb divl not loope push pop loop shll loope mov mov jmp jb test mov sbb flds ds push rex.WRB xchg out adc (bad) negl sti (bad) (bad) stc pop hlt pop or loopne xchg roll movsb (bad) rex.X andl sub adc fsubs xor xchg or (bad) loopne fmull xchg mov shrl pushq rex.WXB and cli rex divb sarl adc mov adc xchg movabs shr sahf rex lods (bad) rex.X cmp rex.WRXB or sbb xchg (bad) in push ffree sub movsb ss pop adc rex.WRXB insl (bad) cmp rol xchg mov rex.WRX add jae cmp leaveq push cmp or mov sbbb jrcxz hlt shrl pushq in in (bad) sar adc (bad) test callq xor pop insb outsl (bad) (bad) (bad) (bad) mov int3 scas add push cmp xlat je mov movabs sub rex.WXB xchg adc setbe repz adc movabs (bad) xor ror repnz lock (bad) out retq (bad) test outsb rex.XB addr32 xor (bad) (bad) pop cmc ds rex.B or sahf mov scas mov addb fsub loop rcll (bad) add stos pop insb int lods callq adcl nop lock movsb pop jmp and adc (bad) xlat xchg or mov (bad) (bad) cmc sub xchg stc rcll mov lahf (bad) pop int3 adc (bad) gs icebp (bad) ud2 jb jl repnz enterq out (bad) sti rex.WRX imul xchg (bad) mov mov retq nop or pop vmulsd sti fwait cmp (bad) movabs pushq stc pop sarl fsts sbb or xor rex.WRX rex.XB addr32 insb or and test (bad) pushq sarb (bad) and sub push sbb test (bad) pop pushq pop push (bad) cmc rex.RX cmp cmp add mov mov adc jrcxz cmp pop add enterq cmc pop xchg cli retq or sbb loopne (bad) xor bnd add add adc (bad) mov (bad) cli fnop mov mov movabs rex.WRX rex.WRXB retq movsl rex.RB sbb sahf outsl mov rex.WRB cli (bad) mov (bad) fdiv (bad) enterq jne (bad) cli sub out and mov add (bad) cld pop jnp (bad) jp out fisttp roll jrcxz lea xchg jo mov movsl cmp adc imul and jp xchg sub jne (bad) icebp cs ss fcomp movslq cmpsl fwait and movb or cld in fisubl add rcll add rcrb repnz or jp push xchg jp pushq jge cmp movabs sub mov sbb icebp (bad) neg int3 (bad) add fdiv pop lret mov add stc hlt enterq mov adc (bad) pop and callq fsubrs or in add movabs cmc in rex.WR jae sub (bad) and add sub (bad) (bad) mov (bad) sub cmp test mov (bad) cld (bad) jmpq test add fabs sub sub in outsb xchg sub or mov rex.W rex.WX fnsave mov test imul shrb fild xor or mov rex.WR push retq (bad) cmpsl (bad) rex.WRXB add rex.B rex.B mov fwait jle js xchg or mov add cmc nop cld mov enterq and cwtl stc pop rex.B repnz jl test adc rex.RX jo push (bad) lahf je mov (bad) mov fwait jge outsb icebp movabs test vsqrtss lretq (bad) rex.RXB xor pop mov xchg sub rex.RX jno ffreep pop cmp mov and pop (bad) scas movabs (bad) icebp add stos loop jno xchg out stc rcrb (bad) (bad) mov xor cmp clc (bad) push fs pop pushfq or test (bad) adc xchg and mov fs in and stc (bad) sarl (bad) pop rorl addr32 xor movabs and (bad) loopne repz mov loope cmp hlt sarl xor xchg stos loopne std (bad) rolb imull (bad) test ja out or repnz xchg jns stc popfq (bad) popfq rclb mov xchg adc movabs or (bad) (bad) xchg cli mov mov xor rex.B fs movsl adc (bad) cmpsl fisubr xor shll in (bad) xor mov ja rex.R (bad) stos pop enterq push rex.X repz (bad) rex.WRX fwait in ds pushfq fldcw rex.XB shrl xchg sar sarl retq (bad) popfq fnstsw gs push mov ror out test and add mov fimul mov retq pushq lods fisubl loopne push out shrl test (bad) (bad) callq rex.XB rex.XB shll pushq pushfq push cmpsl rex.W test add in cmp rex.X repnz imul data16 jo rex.W lret fwait shr sbb es stos outsl repnz add frstor cmp test add hlt popfq repnz (bad) xor jp in pop mov lods fcmovb adc (bad) and rex.RB out hlt test clc ror (bad) mov (bad) int (bad) mov adc xchg mov pop (bad) add mov or outsl sti test roll xor data16 rol cmp movabs jge cmp (bad) pop or (bad) jle clc pop ja loopne fimull (bad) jl jne movsl (bad) insl rorl mov movabs cmpsl fwait icebp mov adc (bad) or jmpq rcll int popfq mov xchg stos sub sub push sbb jge std (bad) and jmpq or and sub lahf fcom (bad) int3 movabs (bad) roll (bad) and mov push stos jb hlt cmp sbb cmp sub pop adc fildll push add out fadd sarl pop or xchg (bad) repnz mov jno (bad) or nop (bad) ror add fs mov sahf cmpsl ffreep rex.W (bad) xchg lock xor cs cmovle lods adc cltd fsubr (bad) stos loope jnp sub rex.XB rcrl sbb sarl adc mov rcll (bad) (bad) and jo fimul (bad) stos pop cmc (bad) pop (bad) lock fwait in jmp fld1 xchg sar mov (bad) and cmc fisubl push mov xacquire jno sbbl (bad) outsl movslq and sbb (bad) pop xor xchg mov sub rex.W fsubrs xor mov movsb iret shrl mov cli popfq (bad) xchg (bad) adc cmpsl pushfq lods and push mov sarl adc cli stos (bad) mov sbb or mov movabs xchg rex.RB fisttpl and shll or push test (bad) jb jrcxz scas adc mov rorl rol jrcxz rcr in movslq xchg jmpq xchg push test pop xchg jb (bad) test (bad) jae sub pop rex.X repz or retq and (bad) xor cmpsl pop test rex.R rex.WB repnz xor (bad) roll movabs jl movabs cmp fdivl (bad) rex.WRXB out leaveq fisttpll rex.X fwait shr mov push int adc jge and data16 or movabs je std (bad) adc (bad) faddp (bad) pop (bad) test mov add xor jne hlt jnp or add in repz xor lret sbb divb scas (bad) xchg mov (bad) push imul fadd or sbb pop orl adc test lods (bad) add or sub (bad) movabs mov jbe xchg fisub movabs popfq jmp mov push cmp lods gs cmp mov pop loope test fnop frstpm(287 and (bad) jno lret outsl rorl movabs rex.WB lods imul add push popfq (bad) mov rex.WB popfq sub (bad) imul xchg scas jle (bad) xor jns je repnz loope loop and jno rorb rex.WXB (bad) lahf mov shr movslq rcrl in out (bad) es test mov insl cmp movabs int3 adc rex.X sub (bad) ss mov fwait mov movabs sti rex.XB movabs rol sarb mov (bad) or testl xchg jnp jmp xchg (bad) leaveq divl rcll imul cmp jbe mov (bad) cwtl cmp (bad) rcl jmp jne mov mov enterq rex.RXB cmpsl jg (bad) (bad) nop int repz (bad) mov xchg roll test jb lret out xlat (bad) fwait (bad) sarl leaveq adc rex.X shll (bad) (bad) notl fiaddl add pop (bad) (bad) popq gs dec mov push (bad) repz je rex.B xchg clc mov rex.WRB rex.X rex.R rex.WRX gs sub pop adc or lret adc cwtl out (bad) pop loope shld loopne xchg rex.WXB ffreep ja imul (bad) (bad) xchg adc movsl (bad) shr sbb (bad) cmpsl mov add (bad) loope cld mov rol lret rsm (bad) (bad) pop and sti (bad) sahf fimull sbb push lahf cs (bad) and mov (bad) (bad) shll xchg lods (bad) jl (bad) vunpcklps push add decb rex sbb sti sub cmp test jnp sub and sbb xchg rex.RX bnd notl out (bad) mov fndisi(8087 insl mov mov sarl hlt int3 popfq sub push loopne pop xor insl or lods rex.RX fwait sbb int add (bad) movabs imul or (bad) lret sarb (bad) movabs movsb movsl mov sbb pushq cltd in sbb cmpb mov addl fs mov (bad) add rex jbe push neg jp gs enterq sbb cmp sub divb mov mov lret repz pop ucomiss (bad) lret movabs callq fidivl xlat xor shrl fimull jmpq bnd (bad) and addr32 xchg push (bad) loope pop out movabs std mov push xor mov (bad) rex.RB repz out xor repnz outsb mov mov lods mov xlat add cmp (bad) and (bad) insl xorb retq fsubl mov and data16 fldt test mov leaveq retq addl xchg icebp pop mov add fsubr or pop xor jno or sbb idiv jb mov xchg jo (bad) ds (bad) jmp pushq mov pop adc rex.X (bad) cmc xchg out jg sub (bad) mov jb enterq in rex.WRB adc mov rex.XB and mov rex.WB faddl shl xlat (bad) loope loopne (bad) or (bad) sbb mov fwait push push rol mov cmp push sar xchg movabs iret adc (bad) jg (bad) (bad) cmp xchg hlt repnz push andl (bad) sbb (bad) decl add mov popfq ror sub out and (bad) lock pushq movabs mov or cmp (bad) movsl ds int xchg pop jnp and rex.WB push fidiv stos lret scas nop sub in (bad) rol fild adc cld cltd xchg sub cmp mov xchg nop roll data16 mov int xlat rex.WRX stos shrl cmc cmpsl jb in rex.WXB insl (bad) std jae js adc cmp sub test xor sbb adc fldenv jae (bad) rcll sub sbb jns and rex.WXB push jmp fwait cwtl push and roll movsl mov (bad) rex.WRX je xchg icebp push ss mov (bad) push int pop insb rcrl mov pushfq xchg cmpsl rorl jne stc std push rex.X push test shrl mov xlat jl jle (bad) hlt or insb xor xor stc (bad) jmpq jl movabs (bad) xor fldenv loop sbb iret (bad) fsub rex.WRB rex.WRX or addr32 and jbe push xor shll xchg or lret sbb in (bad) sarl cmc xchg xor test (bad) rex.RX stc movsb mov fnstcw retq mov iret mov and mov mov mov loope insb xor (bad) jnp push sti adc shr or roll movsb mov hlt leaveq (bad) (bad) xor rex.WRXB rex.WX mov (bad) and fadd test not pop retq addr32 push fild rex.WX loope mov loop rcrl cmp or lret (bad) add cs fcomip stc pushq div retq cmpsl (bad) gs rex.XB jne fwait add fildll cwtl (bad) (bad) adc rex.WB in sub (bad) scas and rex.WXB pushfq and repnz imul sarl stc mov sbb fildl negb rex.RX roll cmp pop (bad) mov mov lods jns je rex.WRX out rcr cmp pop rclb pop callq stos rorl sub lret (bad) imul pop test fsubr test mov roll rex.XB rcrl scas test lea cltd jb xor iret sub adc mov xor jne sub pushq repnz mov add test addr32 movabs jno (bad) rorl loop sbb push shr lods (bad) imul rorl add cs rex.WX lea ds shll pop (bad) repz andl iret (bad) pop (bad) fild rcll (bad) pushq enterq add (bad) movsb iret in psubusb (bad) adc rex.WRX pop mov cmp (bad) and push and retq sub sub rcll std push jmpq sbb movsb retq sub sarl pop and xor clc fisubr push (bad) jae rex.B rex.XB scas icebp mov (bad) test mov vcvttss2si and jp pop (bad) mov (bad) and ficom sub cs scas jrcxz xchg scas sub rex.RB sbb imul out loop or xchg cmp or xor jrcxz pop cmp (bad) mov (bad) mov cmp or jl int cmp add sbb rex.X jae (bad) and add iret jl and add pop sub cmp fwait insb (bad) jl sarl ror fstps cmp (bad) imul enterq (bad) lods movl cli mov (bad) (bad) jo cmp (bad) rex.X rex.WR cld jne adc xchg rex.R sbb rex.X sbb xchg mov xchg icebp imul mov std lret push xor (bad) callq xor in sti idivb push jns (bad) ror mov or movabs xchg adc movabs shll es xchg rcl leaveq pop std push cmp cltd data16 testb (bad) sbb (bad) pushq fs cmp movsb rex.WB test sarl std sub (bad) lret and mov sub faddp (bad) adc data16 mov iret (bad) enterq test push xor mov outsb int3 cmp rex.X sbb je mov lock xor sbb movabs add (bad) mov insb (bad) mov mov push sbb rex icebp repz ds jno add (bad) in sbbl cs lret jle enterq cmp (bad) jge (bad) xor sbb ja outsb in retq xor stc add hlt pushfq push pushfq xchg movb xchg scas adc sbb mov callq adc rex.X mov rex.XB mov xor cli sbb imul add xchg (bad) rex.WX sub (bad) add cmc leaveq sub jmpq mov movabs rex.WRXB sbb fwait test (bad) mov js add outsb test int mov pushq (bad) lock pop xor (bad) (bad) and xchg mov fwait cmp sub (bad) rex.WRX (bad) js movabs movabs pushfq (bad) jbe pushq mov (bad) (bad) cmp jmpq rex.RX xlat or mov rex.W rex.XB iret (bad) rep loope (bad) test andb (bad) mov js mov out push repnz rex.WRX rex.B rex.RX mov stos jne mov rex.WR rex.B int and sub clc test std mov fcomi jne sbb sbb rex data16 jo outsl sub pop movsb (bad) dec test out hlt je pushq (bad) ja and and rex.WXB rex.WRX int3 cwtl xor mov and add mov or xchg rorb rolb movslq add cwtl adc enterq test movsb je in sahf jbe xor pushq cld jns outsl test (bad) movslq movabs imul int3 imul cld adc xchg mov not (bad) (bad) add outsb or rex.RX loop nop mov sti cmp jne pop (bad) pushq sub fwait clc lods movabs jae loope (bad) in repz rex.WR movslq in xor out mov outsl mov xor sbb rex.XB push fs sub insl enterq rex.RXB rex.WRB repnz retq callq mov push rex.WXB fisubr js xchg mov (bad) rex.B and add (bad) shrl cmp lods callq rolb repnz pushq cmp shrb mov xor xchg scas xor adc (bad) (bad) data16 repz rex.RB repnz fs in mov (bad) es imul mov mov mov rex.WXB enterq rorb rex.R rex.R xchg subb in test std (bad) xchg movsl xor rex.WX movabs outsl cmc callq (bad) addr32 imul sub stos and jg (bad) (bad) stc mov xchg imul or mov mov test jae sub mov jne push (bad) lahf cmpsl lods lret lea xlat test and xchg xchg or jnp (bad) push adc rex.WB addb push rcrl sub outsb (bad) xchg movsl mov sbb (bad) mov lahf jg mov lods pop lock (bad) enterq cs ja (bad) pushq mov rex.WR movslq mov (bad) movslq cltd movsl sbbb lock ds sti xchg cmp mov rex.X stc mov xchg mov repnz orl or rex.X es out out mov insl addr32 and pop cltd (bad) push int pop sub in (bad) add xchg fwait push in vmulss (bad) out test stc sub xchg fild pushfq frstor xor and pushq lea icebp lahf and or rex.B mov (bad) jle mov movsb pushfq rex.RB rex.R and bnd stc or test push add rex.B repz movsb mov add mov rex.RX (bad) sbb mov pop rorl rex.RB rex.RXB repnz cmp (bad) rex.WXB push insl (bad) cmc rex.RB (bad) or ds rex.RXB int add jne (bad) lods pop fadds and out jrcxz rex.WB test (bad) cmp int retq mov movabs es shll movabs imul fcom cmc jbe sub movsb xor push in in adc mov movsb cmc jle (bad) (bad) repnz (bad) mov (bad) (bad) adc and pop movslq cmp mov add sub or out jno rex.WX ja cmp mov jbe orl sub (bad) ja test test frstpm(287 jns addw sub insl xchg rex.XB leaveq loopne movslq jae or (bad) ror (bad) rex data16 icebp pop loopne callq (bad) (bad) (bad) int mov rclb xchg rex.WB lods pushfq retq stos (bad) int3 enterq jne xchg retq icebp sti test adc or cli sub xchg scas imul sub in lret jle out (bad) rex.WB or fbstp adc add rex.XB pop mov retq out mov (bad) (bad) jnp add movsl pop (bad) leaveq pop sub test rex.R rex.RB out sub cs jg retq imul fdiv (bad) (bad) lret mov test (bad) movslq icebp rex.XB ss cmp (bad) rcr cmc popfq cld add (bad) fcoms (bad) je jrcxz adc (bad) pop (bad) repnz (bad) jle mov adc stc mov imul loopne xchg sub mov leaveq add retq je (bad) or add (bad) ss stc jle pop imul rex.RB test (bad) push (bad) jmpq mov rex.RXB lea movsb sbb shll lock xor lahf fsubp mov sti outsb test imul (bad) sub xchg addr32 retq jg mov xchg imul add mov cmp movslq pop fxch push rolb push (bad) neg xchg fs or mov rex.X jnp cltd push mov lock mov push je int3 or pop (bad) xorb repnz or rex.RXB push pop rex.RX stc pop sub mov add int xchg in cmp rorl cmp (bad) rcll scas rex.W pop mov sar cmpsl clc or int3 sahf adc lret adc scas and sbb sar and mov imul gs or (bad) or pop fsubrs outsb jns add (bad) jno (bad) cld pushfq mov cwtl push jrcxz js add adc ffree pop fisubr add lret xchg mov xchg mov repnz test sahf pop rex.WRB icebp rcrl lret out sbb cld rex.RB ljmp pushfq int std in mov jbe mov push rex (bad) (bad) (bad) add xchg mov movabs adc in outsl push rex.WX cld callq (bad) fisubr add sarb (bad) test xchg (bad) or (bad) (bad) test (bad) cltd in rex.WR imul pop sti dec pop movabs hlt xchg and add xchg (bad) stos xchg xchg pop mov sbb test sbb roll mov sbb shrl cltd add mov out (bad) cmp loop in repnz ficom jp push (bad) pop movsb movabs adc pushq (bad) adc rex.B cwtl cmp pop bswap jl pushq (bad) rex.B and std xchg movabs lret leaveq test fildl cmp (bad) xchg xor mov or loope (bad) cmp fisttpl mov in add mov int3 add movabs mov (bad) stc jbe jmp test movabs cmp xchg data16 push jne or rex.W lret or and sub repnz jp rorb sub rex rex.W scas and (bad) clc lock and lods fcmovb (bad) out mov ss add (bad) jmpq shrl xchg in xchg add shrl fldcw fimull shll mov and jrcxz sahf (bad) lret shrl loopne mov mov out sahf std (bad) mov lret lahf pushq pushfq jns es sub add sbb rex.X push test jge (bad) mov (bad) cmp sbb sub sbb repz jp imul mov (bad) pop sti or fmul xchg movslq (bad) mov and sub pop jbe pushq (bad) cli (bad) xchg enterq out (bad) (bad) jb sub adc repnz rex.RB subl retq (bad) xchg movabs add rex.WX mov jb rcrl stc roll add int push (bad) push test jp pop rcrl movabs sub jnp push cmp roll in mov retq shll xor pushfq rex.WRB rclw xchg movslq jmpq scas add lret in icebp add mov (bad) jae movslq sarl jb and cmp addr32 mov loop and vpunpcklwd std imul lret (bad) movsb imul scas and movslq lods insb loop add xchg xchg jle push fstpl xor push in (bad) andb jae,pn cltd loope shll test mov fisub (bad) jle fstps rex.RXB (bad) test xor (bad) pop (bad) and movabs movsb sarl mov pop rex.WRX push rol (bad) (bad) decb rex.WRXB xor (bad) sub shrl push cld rcll out xchg (bad) nop (bad) push push sub rcl (bad) movsb (bad) jl mov sti (bad) mov (bad) lods (bad) faddp add (bad) or push addl cmpsb push shr (bad) pushfq rcrb in or lret movabs rol test pop cli pop push shr out (bad) pop (bad) xchg (bad) sbb mov mov mov sti loope repnz scas push and stc add loop mov negl xor imul (bad) and retq adc (bad) rex.X push cli sub or clc cld (bad) pop (bad) movabs rex.WX mov xor nop fimul sub rex.WXB lret repnz rex.WRX rex.WRX movabs icebp (bad) lea sbb jns add jb out cmpl fucomi mov movsb (bad) test jae movslq push (bad) mov (bad) loopne xchg lea cmc repnz rex.WB rex.WB (bad) mov fist (bad) enterq (bad) push jns (bad) mov jp cmpsl cmp fadd xor mov js mov mov and mov pop rex.WB mov rex.RX stos cmp pop icebp add add and repz stos xchg (bad) adc mov cmp mov xchg jl loop rex.R sub add and in movabs sbb mov pop testl (bad) xor addl ficom test movb (bad) repnz mov insb hlt xchg test callq outsl rex.XB repnz mul leaveq (bad) and in cmp mov rex.WXB rex.WRX test jp (bad) xchg in rex.RB or cmpsl push (bad) fsubl pop callq add pop pop sahf (bad) rex.X (bad) sbb rex.WB xchg (bad) out jb mov cmpsl jmpq cmc rex.X (bad) (bad) enterq or mov (bad) xchg rorl add (bad) (bad) push (bad) jbe imul xor (bad) (bad) addr32 retq (bad) push jnp adc out jge fisubl pop retq (bad) jmpq rex.WX rex.WXB xor sbb push je jb xchg in sahf (bad) testb rex.R (bad) push es sbb mov (bad) add sub shr fisubrl push adc fcompl retq xchg fistp rex.XB rclb imulb mov (bad) jb addb mov rex.RXB movl sub and sbb (bad) jrcxz jnp iret test (bad) movabs (bad) xor cmpsl callq ftst (bad) (bad) gs and js cmc pop fdivs push (bad) mov add sub lock (bad) pop adc (bad) (bad) and fsubs (bad) (bad) (bad) (bad) mov mov cmpsb push (bad) sbb rex.W movabs callq sbb pop cmp add pop (bad) loopne lret (bad) or adc out jle mov xchg pop rex.WR cld adcl mov xor rex.WRXB rex cwtl repz rex.WR js clc cmp xor sbb test rclb nop push mov lods rex.B repnz rex.WRB jno fcompl cmpsl (bad) movabs vhsubpd sbb jbe movabs out (bad) mov rex.RB and loopne test xor pop mov insb (bad) div fldcw stc rex.W sbb jb mov cmp or jge cmpb add or (bad) (bad) loope (bad) (bad) push cwtl (bad) xchg and movabs nop rex.WR xchg pop rex.WRB mov (bad) fucomp xor mov xlat enterq stc mov (bad) scas cli and (bad) sbb fisttp mov sbb mov lret sbb pop mov jge jae (bad) cli mov fimull xchg (bad) (bad) (bad) (bad) out lea nop mov mov add psrlw (bad) xor xchg cmpsb (bad) (bad) movabs mov xchg jns xor (bad) sub and (bad) shr cli hlt (bad) scas movabs mov (bad) add pushq jns rex.WRX rex.WXB (bad) (bad) lock (bad) idivl pop repnz outsl and add xlat shr fucomp mov stc xchg rex.XB and cmp repnz mov cmpsl loop pop std rex.R mov imul (bad) xor xor add rex.WRB rorl shll xchg mov (bad) xor popfq jmp rol outsl nop in shrb jp and push mov lock int3 std jrcxz sbb rcl adc shll rex.W shl jo andl stos imul (bad) loope or sub je addr32 jle cmp push insl rcll (bad) xchg (bad) xor in mov in cmpsl stc sti pop lods loop mov ss (bad) cmp test lods cmp scas sbb rorl mov xchg pop stos sar adc (bad) xchg or jns push jno (bad) mov xor sbb rep mov sbb or pushfq rex.B pushq rorl mov rex.WR stos roll mov adc rcrw jb sarl movabs rex.R mov imull cmpl outsb mov loope (bad) pop fsubl sub mov adc notl rex.RXB vminps scas loope mov fbld (bad) cld or pushfq or sbb rcr jl add xor vpackuswb vpinsrw enterq rex.WRX rex.RX push jp loope fldt mul shll (bad) icebp xchg mov out mov rex xor xchg cmp mov rex rex.WB (bad) sarl xchg rcl in pop (bad) mov jns (bad) adc xchg xor out iret rex.WRX imul mov shr mov cmp jne mov cmpsb loop xchg pushq cmp (bad) mov enterq mov or sbb stc ja lods movabs push jmp pop scas jp lahf test cmpsl sbb setnp (bad) fcomps jb out add (bad) std fstpl ss (bad) (bad) fldenv adc push pop add and out pop mov adc jge in cwtl mov (bad) mov (bad) rex.WXB outsl (bad) jmp sahf insb adc (bad) lea fstpl xor rex.WRXB callq (bad) icebp rex.W clc int3 mov (bad) nop in in xor repz addr32 and shll (bad) in outsl (bad) lret mov xor jno and push and movslq and mov (bad) out imul mov adc adc je scas cmp (bad) rex.WR lret jp int3 (bad) sub test js movabs rex.R addr32 xchg out pop xor cmpsb repnz int3 jg jno test rex.WRX lock int movabs loope sbb add pop jns test loopne mov icebp insb cmp jg jmp (bad) fucomp stos cmp repnz nop mov (bad) jb test jnp xchg and xchg movsl rex.WR enterq jp es jmpq (bad) cmp sarl out mov add adc cmp roll mov mov iret int3 stos (bad) push and sub sub pmaxsw (bad) xor cld retq jl sub shrl fdivrl mov push add adc loop mov in out int lret mov (bad) shll cmp (bad) ja sub rorl in cld sarl add faddp xor (bad) (bad) (bad) lahf sbb xor popfq xlat pushq (bad) notb push rol loop (bad) bnd adcl data16 add mov movslq rorl and xlat gs fs cmp (bad) and sbb pushq cmp add lea push rcll test lahf and movslq (bad) add fdivrs (bad) shrl fstps sbb pop data16 shl push icebp sub scas add (bad) roll adc pop scas mov adc mov (bad) (bad) fldt xchg and add rolb pushfq pushfq shll jbe gs cmp cmpsl lret fwait mov jno and hlt cmp pushfq mov (bad) fisttpll fs shr push imul (bad) pushq jrcxz rex.X (bad) rcr in movabs lock repnz add jo fildll (bad) enterq roll jbe sbbl cs lahf stos ja rclw (bad) or (bad) sub fldl2t (bad) in cmp xchg frstor ror (bad) mov shll (bad) mov in or insl or testb (bad) mov popfq leaveq add fst pop shll (bad) cmp scas mulps (bad) pushq movabs std movabs fs div loop insb fstpt lea shll outsb (bad) out xchg gs pop lock outsb cs fwait shr add movslq rcrl adcl xchg rorl jo (bad) push (bad) out (bad) sti test (bad) or (bad) sub xor sub rex or xchg shll imul data16 fldcw (bad) sub in subl rorl test sub adc (bad) rex.B and callq jno mov stc (bad) mov sbb mov movsl mov retq rex.WXB or js xor cmp fcmovbe adc outsb pop out add fbstp adc rcr lock mov sbb sbb add enterq pop stos movsl mov jno push ds loop xlat cmp (bad) leaveq sbb test (bad) (bad) pop mov pushq rex.B lock and (bad) jl fdivs test push (bad) cmpsl mov je sub cmp rex.WX shrl insb int adc jne rex.R adc rcrl adc (bad) (bad) out adc mov pop adc in mov push rcr cmp xchg mov test loope rex.RB int3 test jns int mov retq rex.WB (bad) mov xor (bad) fmulp sbb loopne jmpq cmc movabs cmp jrcxz fst fnstcw or shrl je sub movabs mov xchg or xchg imul scas cld or pcmpgtw (bad) callq int movabs icebp shll jrcxz (bad) mov movabs fistpll cmpsl rex.X fwait (bad) insb rcl rex.WXB lret pop sbb pop pop sub (bad) icebp mov pushfq std cltd fidivrl (bad) rex.RB roll retq (bad) imul insb push jle retq add or push shll cmp rex.WRB enterq xchg and mov and data16 movsl xor shrl mov mov (bad) rcrl data16 scas (bad) mov rex.RB addr32 or (bad) mov shll mov rorl in shrl out (bad) sar mov cmovae sarl xor stc ja movabs (bad) sbb add (bad) loop (bad) push rcll fstl or mov sbb out in jne (bad) notb mov rorl (bad) lret (bad) gs outsb cmc mov roll movabs addr32 mov xor (bad) add pop cli (bad) mov sub retq and rcrl (bad) loopne mov ror cmp push movb rex.B sub sbb in repz pushq and sarl jg movabs sbb lret rcl rex.WR cmp sub push out jno lock retq cmpsl add lods in (bad) repz sbb xor jge fdivs (bad) jno sahf sbb es xor or (bad) cmp sub outsl (bad) rex.WRX gs roll rex.WXB jge test jns sbb (bad) (bad) scas mov pop imul xor or mov imul addr32 xor rex roll xor idivl loopne xor xchg adc cli add js sbb jbe rex.RX xor fisttpll pop push xchg ja sub (bad) fist rex.WRX cmp cs xor lea (bad) and (bad) jle mov rex.RX (bad) imul in (bad) mov jbe cmpl xlat repz (bad) rolb rex.W test jg imull pop cmp (bad) sarl add std lea (bad) in mov (bad) lret fsubs rex.W data16 enterq sub (bad) jb jmpq (bad) rorb mov xor out sub sub test jmpq push subb sahf (bad) adc fbld mov (bad) loope xlat mov cli (bad) out xchg ja cmp retq popfq mov xor outsb icebp je add shll out addr32 and cmp (bad) (bad) mov (bad) mov sub lea repnz fdivs (bad) xor enterq (bad) rorl test xchg jns,pn mov test (bad) int3 mov lock rex.B repz or sub mov cmpps jae movabs cmp lret rex.X mov jmpq movslq lahf ror mov rex.R cmp shll pop jl xchg icebp rex.WXB sub rex.RX jno add sub rex.R jrcxz ja add std int3 insb scas fadd xchg rex.RX mov stc xor (bad) loopne cmp jg mov rcrl in and lods jle jne or leaveq movb xor pushq adc and sbbl std (bad) push mov int3 push mov stc movb test subb (bad) push sub (bad) jno mov rclb scas test test push pop xchg xchg rorl (bad) mov (bad) ds icebp (bad) sbb cs rex.RX fmuls (bad) out xchg adc stos sbb lock jb jbe add (bad) and add lods sbb (bad) push movsl (bad) rex.WX faddl or shrl loope cmpsb adc sarl test add (bad) rol and popfq shrl (bad) mov loope lods (bad) shll xor rorl and jno (bad) mov and rex.RB popfq jne push (bad) roll and lea sarl imul rex.RB mov popfq movabs neg stos nop sbbb fstps rolb xchg (bad) rex.WXB retq (bad) xor loop push fildll rex.R mov or rex.WRX rex.W jne and (bad) xor sub repnz test clc in rol std (bad) fstpt lret movabs movabs add sbb rorl fdivl fnop out xchg lret (bad) movsl xor jns adc (bad) rex.RXB rex.R fisubrl (bad) sub jo int rorl stos mov cmp in movsb mov popfq inc shll fs (bad) lods pushfq mov mov xchg jrcxz shll icebp and lret xor in rcll adc cmp jp (bad) rex.W insl movabs jns (bad) lea fs mov fadd pop jp pop fcmovb paddd push stos pushq shrl test pushq sub push stc movsb (bad) orb cmp cmc in rol pop movsb rclb lock or jae jne int rex.X xchg cmp mov (bad) mov retq (bad) adc (bad) mov fdivs outsb ds (bad) (bad) cld (bad) and sbb add (bad) movabs roll xchg (bad) rcll nop mov lods movsb sbb (bad) (bad) jns jge sbb fldcw rcll mov mov xchg (bad) imul in cmpsb mov int rex.W fildl xchg xchg mov (bad) fnstenv std shl callq mov (bad) pop or mov out mov mov sbb and mov mov ss lock (bad) fwait push xchg scas fmull test mov orl rex.W xor xchg sbb lods popfq push add rex.WX cmp or sti mov lret cli mov movabs loop add ss add (bad) sub cmc xchg fbld jns jb mov out cs lcall xchg rex.B sbb (bad) cmpsb (bad) sti (bad) (bad) cld push (bad) int xor sub (bad) insl rex.WX clc fidivl pcmpgtb jb (bad) addr32 sbb mov fs out int loop sub (bad) sbb loope mov mov and test cmc insl movabs loope (bad) xchg and (bad) test rex.R rex ficomp (bad) pop loope hlt mov rol lret loopne callq (bad) addr32 cwtl addr32 sarb sbb xor (bad) in (bad) idivl rex.X cs std xor mov ffreep imul rcll jbe (bad) jo shrl push mov leaveq stos shl rex.WRXB sub mov jl push shl data16 sub popfq mov xchg (bad) mov sub int3 add jmpq mov cmp and add mov test rex.B data16 (bad) and mov adc (bad) rex.W cs (bad) and in vandps iret adc in jne (bad) test jmp shl popfq mov sub adc (bad) int3 out iret hlt xchg rex.WRXB (bad) xor (bad) adc mov rex.RX adc or xor cmp (bad) jno es shrl je hlt push cmpsb jl pop fs rol (bad) stos sub rep rorl and movsl int and cs cmp sbb jrcxz repnz in xchg movabs ja retq mov and cmp fcoml retq mov and add (bad) cmp (bad) xchg repz (bad) icebp push jb sti fisubl xor (bad) rex.RB rex.WR scas rcr sbb adc shll pop retq cwtl fadd rex.B (bad) mov lock (bad) cmpsb pushfq adc popfq (bad) repnz (bad) mov adc sbb cmc or adc jl add jnp (bad) (bad) xchg pushq pop push or in int3 rex.RX es hlt mov int3 shll sti jle xchg out xchg jae xchg callq addr32 sub (bad) pop add insb out jbe (bad) cld fnop push subb cs cmp rcl movslq outsb rex.WX shrl testl iret rex.W sarl and in (bad) out (bad) outsl (bad) rex.RX sub xchg out rex.WRXB (bad) (bad) and rex.RXB sar popfq jno cld or decb adc add imul movabs mov rex.R add loope test loope outsb rorb mov (bad) or callq mov add stos rex.WXB cli mov retq movabs xchg in or rex.RXB push (bad) mov rcl in movabs (bad) (bad) jb mov lods xor xchg rex.RXB (bad) (bad) mov add rcl sub movsb and (bad) add push xor mov retq rex.WRXB mov mov cmpb jbe cltd movabs push xchg adc fstl rex.WX movabs rex.WRB jne add cmp jbe sbb popfq rclb pop ja hlt fwait rcl fdivrl sarl loope es movabs (bad) add push pushq adc xor push xor mov (bad) cmp jrcxz jo jrcxz jge popfq (bad) out rclb mov mov sbb (bad) jns cltd clc (bad) (bad) xchg adc pop scas push loopne jae loope lret rol divl mov cwtl outsl mov mov imul pushq rcll cli (bad) jne add adc xor ficoml jno je enterq add in mov fwait mov pushq insb cmc pop adc and andl fimull stc xchg stos push (bad) (bad) mov (bad) xor (bad) pop in movslq fldt xlat cmp xchg (bad) fsubs add adc (bad) (bad) repnz rclb mov mov lods ja rorl rex.RX imul mov xchg movabs (bad) jb and (bad) (bad) jno out cmp mov jns rorb adc stc xlat leaveq rex.RX (bad) faddl (bad) lahf sbb fs outsl pop shlb movabs movabs jp std cld (bad) xor rex.WX or in rex.WR imul xchg sub rex.WRXB push pop add jp sub rorb pop and negb add hlt mov pushq in (bad) repnz rex.RB rex.RXB enterq xchg mov in sub loope mov (bad) add rex.RB test jl loope mov fist jle xchg fucom xor in mov xlat mov xchg hlt movabs cmp (bad) (bad) add add movabs pushfq (bad) sbb (bad) iret (bad) leaveq adc (bad) cmp cltd out sarb vmovups jne imul sub (bad) (bad) in movabs int lahf mulb adc (bad) xchg lods mov (bad) mull ds jbe ja cmc push mov jnp outsl scas add jno xchg jbe fwait cmp sbb cmp pop jne loop sbb (bad) pop rex.WRX rex.WXB cwtl shll (bad) scas (bad) in jg adc rex.WR (bad) mov or movsl movabs (bad) sbb (bad) pop hlt xchg subl std cmp (bad) out mov (bad) sub test je rorl jae (bad) xchg lahf xorl rex.WR sub popfq sbb cmpsl (bad) (bad) or movsb (bad) loopne insl rex.WRX jrcxz rex.RB (bad) sti movabs sbb xchg sub cmpxchg mov lret (bad) je ficompl shlb sub nop (bad) cmpsl mov in or rcrl cmp (bad) mov push cwtl loope jg pop outsb cmp and mov lock rex.WXB mov (bad) xor adc vpunpckhbw mulb shrl (bad) jg jrcxz (bad) rcrl adc rex.RXB mov lock cmp (bad) rol push adc xor or test (bad) pushq push int3 jp pop cmpsl add rorb sbb adc (bad) mov es movabs flds roll or or xchg shl (bad) mov out (bad) imul clc sub (bad) shr (bad) mov adc movsb callq out in retq mov (bad) out push cltd pop rex.WR xchg loop incb fidivr test loope rol in push es or add xchg add rex.WRB (bad) xchg fimull js jbe repz xchg repnz in mov fwait mov push add je movabs in repnz add jp mov pop (bad) jae fcmovnb movabs rcrb xchg mov push lods sarl faddl (bad) mov loope xlat repz rcl imul xlat (bad) decl out retq shll add (bad) (bad) cld jae rex.WRXB loopne cmp test fisubr cltd jns sub sub sbb hlt mov shrl (bad) std test pop mov mov loope xchg shrl adc callq rex.W movabs push es mov mov cli jnp xchg lret (bad) shrl mov and insl mov lahf lret push jle out xchg (bad) add push rex.R rex.R jb ds in cmp and (bad) (bad) mov (bad) mov add jp xchg rorl sbb std test stos (bad) in mov lret lret and (bad) stc addr32 repz ja out rcll stos int mov lock int3 test (bad) (bad) jae jnp ds xor fist rcl fisubr loop mov add lret push sarl popfq jmpq int3 in xor movabs jo cmp roll imul lret movsl mov fdivl (bad) mov (bad) rex.RXB std leaveq mov lret stc movabs divl in (bad) sbb cmpsb and rex.RXB pop jl pop mov or pushfq (bad) (bad) xor mov sbb pop mov pop pop loop rol shll shll in in lahf pushfq insl shll out rcr xor push cmp std (bad) movswl adc xchg lods fcomps and fistpll test retq (bad) jge movsl rorl xlat data16 in fmul rcrl rcll (bad) jrcxz xor rex.WRB adc rcll xchg rex.R and movslq jp mov xlat (bad) jno lahf icebp es sar (bad) idivb mov stos rex.RX nop sbb xor out rcr stos outsb movabs repnz xor (bad) orl xor jg cmp sub loope push pop (bad) jle lods (bad) (bad) rex.R rex.RX loop (bad) push rex.B or (bad) lods pop fimull rex.RX mov retq stos cmpsl xchg rex.XB xchg leaveq sbb (bad) pushq xchg fucomi (bad) pop rol imul rex.WRB cmc movabs add rex.WR pushfq (bad) add mov add (bad) mov lret cli int3 rolb je pop rex.RB (bad) sub cmp (bad) insb rcll mov lret lea xlat rol retq jno and pop cld sbb fadd pop sub ja rex.WR push (bad) rex.WRX pop test cmp fbstp rorb in sub loope or add or pop jb imul rex.WRX fisttpl and (bad) movsb iret movsl fldl insb cmc cmpsb add jp cmc mov nop rcr jmp mov jl popq xor es (bad) fidivrl movsb xor pop cmc icebp lahf mov pushq jnp rex.B int3 mov add xchg mov lock outsl movabs (bad) mov (bad) cltd pop pop (bad) faddp je jg pop and add adc in fs push add js out shll jge xchg sub fwait rex.WRXB int3 adc rex.WB mov fidiv mov mov (bad) xchg sbb int3 mov mov addb ljmp rex.WRB rex.RB shr out add icebp rex.XB pop outsl lret mov rex.XB cld in movsl mov add add mov rex.WX (bad) sub movb cmp push cld int3 add (bad) pop rcll pop loop (bad) icebp (bad) adc (bad) loopne (bad) add pop mov jle sbb mov rex.WRB xchg push pushq adcl stos movslq adc sub xor mov loop outsb or and insb add sarb xor pop rorl (bad) mov mov jae jmpq or (bad) sarb out (bad) xchg retq icebp stos cmp adc add mov fstpt cmpsb (bad) rolb xor faddp loope fbld stos (bad) mov (bad) pushq rex.WX mov iret scas (bad) in movabs mov cmp and add mov movsl sub movabs lock pop mov push add or mov test lahf and sti test sub orb leaveq lock retq rclb addl jrcxz out add cmpsl sbb add pop in adc jrcxz and and sub mov rex.WXB stos xchg jge cmc popfq sub lods sub rex.WB sbb (bad) jb imul int3 int mov mov rex.XB ds lods and sub loope add jmp (bad) push and sbbl sub add (bad) or cmp rex.WB rex.B loope (bad) cwtl out (bad) adc rex.WRB rex.RXB rcl mov mov or rex.WRX rex.XB mov (bad) mov jrcxz sub fildll rex.WR adc push jl jno xchg (bad) mov insl repnz adc sub rorb fwait jl add (bad) cmp cltd jnp jno lock fnsave jge sbb loop lret sub leaveq fdivrs stos divb mov leaveq (bad) fadd int cmp add popfq icebp loope or data16 ja rex.WRXB repz es lock mov rol fisub out mov fnstcw outsb jmpq (bad) movb imul adc out (bad) mov jae jmp sub callq (bad) sbb pop cmpsl jle movabs mov movabs mov scas xchg lods (bad) scas test (bad) cmp cwtl (bad) pop sbb stos lret push rex.WR rol roll pop imul xor ss iret add cmp sbb (bad) rorl rolb mov shl add (bad) and pop shll in xchg lods insl iret rcrl cmpsb sbb and sarl push test (bad) fstpl (bad) sbb xor xlat outsl (bad) or and cli ss mov cmc ds movsl movb int3 retq cmp sarl loope lea rex.R scas pop (bad) xchg clc fnstcw mov jge adc pop mov cltd nop lock in (bad) in (bad) mov loop retq add (bad) fidiv hlt xchg and imul out nop rex addr32 (bad) rorl icebp callq cmpl (bad) sar out lods movabs cmp (bad) mov and pushq xchg loop (bad) (bad) jne (bad) mov sbb lret and add cmpsb int3 movsl lods mov add rex.WRXB rcll sahf add mov test push callq pop rorl rex.WXB stc rex.WX rcll jmpq pushfq shll fsubrl and notl fistpll loop callq (bad) int (bad) (bad) int3 (bad) negl rcrl jns and xor sub (bad) test sbb addr32 in (bad) push pushfq test out retq push mov xor rorl jle add cwtl rex.WRXB lret rcrl fstpt (bad) cmp mov or vpsadbw jns jrcxz rcrl or rex.RX rcll out mov mov cmovge retq out mov (bad) cmpsb (bad) repnz movsb xlat or mov incb mov shll jmp lret add (bad) roll and jnp lahf shll mov (bad) jbe jl mov jrcxz rex.RB rcr push movabs enterq shll and mov rex.B movabs add (bad) shrl sub (bad) rcr mov (bad) and xor add repz mov (bad) decl (bad) sbb or (bad) sub xor jmpq rex.XB (bad) repz rex.WR test adc sbb (bad) and (bad) (bad) pop scas andl test (bad) xor jmp std jge test add stos and sti icebp mov xor xlat outsb pop retq jrcxz lret cmpsb add sbb sbb shrl ds push sbb enterq (bad) rcrl or (bad) insb sarl rex.WXB xchg mov sbb imul cmp rex.B fisubl push pop cli (bad) shr pop fs pop leaveq pop in mov (bad) cwtl iret (bad) mov add (bad) mov and lahf popfq ds adc (bad) (bad) sbb (bad) fldcw pop xor (bad) rex.RX cmp retq loope imulb adc rol xchg imul add xchg adc add sbb outsl pop test (bad) cmp jne mov mov mov mov jp fdivl xor pushq cmp rex.B in fsubr cs retq js xchg rex.WXB push fs adc hlt iret movabs mov clc cld (bad) pop fcmovnb rex.R out shrl rex.RXB sub movabs frstor push cmp cmp cmpsb mov repz es and (bad) pushq lret sub mov xchg sbb movabs imulb (bad) sub cli jae imul sbb (bad) sub jb and (bad) rex.RX and cmp sub pushfq cmp cmp movabs (bad) sbb mov sbb ja cmp shrl sub shl xchg (bad) mov (bad) clc and js (bad) int3 (bad) cld (bad) (bad) jmpq xor es rex.RB pop mov in int3 jno movabs scas in mov jns test (bad) pop mov rex.WR jge iret enterq jo (bad) sbbl mov cmp rcrl jmpq sub lret cmp sti faddp add rex.WRB sbbl pop out xchg rex push adc xor xor bnd cs faddl sub enterq sti mov (bad) fstpl in (bad) jg jge sbb imul jmp cmpsb adc push loope (bad) or enterq sub js test rex.WR int3 in cmpsb push (bad) or lock sbb cmp movabs orb jne in fcoms mov lock mov imul (bad) xchg cmp (bad) sub and xor (bad) adc (bad) rex.RXB lahf jrcxz pop es (bad) xchg (bad) mov jns mov pop rex.B or stc scas sbb (bad) mov mov mov in or pop sbb (bad) push outsl sarl hlt mov mov adc rex.WXB out popfq mov add cmp in lret (bad) xchg imul mov rex.B out pop in jae sub (bad) mov (bad) cld scas fdivrl jmpq callq in out (bad) mov jae (bad) cltd bswap pop or jp repnz rex.RXB fs adc push (bad) icebp (bad) shrb (bad) lock shrl rex.B lret cmpsl out mov data16 rcll std pop test imul imul cld out xor popq rex.WRXB rex.WXB jle lret sbb rex.B loope (bad) (bad) push shll (bad) (bad) mov (bad) (bad) (bad) push push (bad) sarl xchg out cmpl fldt mov rcr movabs outsb xor cmp (bad) adc js lods pop and loopne mov test (bad) xchg push jnp and lahf rex.RB pop in mov shrl in xchg adc loopne xor imul cwtl popfq jnp jno xchg repz insb pushq lret ja xor std (bad) movabs push addr32 xlat (bad) adc push and rcrl mov in xchg test xchg fsubrl sub std lods (bad) mov rex.R pop xor rex.X stc lret rex.WRXB cmp sbb rex.WB retq (bad) cs movsl repnz fucomip (bad) mov or push test sti mov adc pop imul cmp jo pop int3 scas (bad) out movl (bad) (bad) push shr and (bad) mov fldenv mov pop jl outsl rex.B or (bad) imul loope out xchg cmp add jo icebp or lock xchg sarl (bad) jl adc (bad) sbbl fsubr (bad) cmp enterq xor (bad) cli rex.WXB repz mov xchg shll push jmpq cmp push mov adc jae test or in rorl rex.WB add xor adc movsb in or push test add or fcmovnu mov std pop add mov mov mov hlt sar mov rex.R push (bad) data16 (bad) mov adc mov flds pop test movabs pushfq (bad) cmpsb (bad) fwait rex.WRXB jrcxz rcrl xchg repz (bad) enterq rex.B repnz loope lret icebp movabs or jo movabs and sbb and sub rex.WRX pop loope mov xor jp roll movabs sbb es je rex.W cltd mov roll (bad) xchg jns push test es mov xchg shl (bad) test lret jmpq scas out mov mov adc cmp (bad) stc and clc (bad) repz adc inc (bad) mov pop sti repnz int mov mov add rex.WRB (bad) repnz (bad) (bad) rorb rex.W jb cltd out pop xchg rex.WXB or rolb xchg and scas mov adc fdivrl iret sub xor and and shl (bad) adc lret sub out retq outsl rex.WRB cld lahf adc cltd (bad) mov ss loopne xchg (bad) sub pop cmpsb (bad) and fwait int push ja add out sub (bad) shrl add mov movabs cmp rex.WRXB sub (bad) jb retq cltd (bad) ror push xchg push roll sbb mov mov hlt xchg rol jp cwtl or rorl int sahf pop (bad) sbb in loop sbb rcr (bad) mov xchg jg movabs int mov push xchg mov jo cmp (bad) xor ds push imul shl (bad) movabs je loop xlat icebp (bad) sub std or xor repz movabs loop (bad) jle in add retq scas out mov and retq xorl stc rcr mov incb callq repz cmp cwtl movabs (bad) mov (bad) adc add repz rcrb in sbb pop jle fld sub cmp mov jnp stc in fistp cli rcll or add rex.XB out movabs (bad) xor lret rex.RB mov movabs fist or movabs js rcr sahf fldt fmul stos movabs movabs mov lret xorb mov ss sahf cmpsl (bad) gs fwait rex.WRB test cmpl mov jbe rex.W rex.W mov in imul clc iret sbbl sub test (bad) sub xchg add xlat xor (bad) lock fnstcw (bad) cmpsb pop divb loop xor cmp lahf (bad) rex repz add mov sub (bad) adcl (bad) jmpq ss cmpsl pushfq xor std lods fstps add lret rex.WR xlat sub addl sahf (bad) callq (bad) lret shll add movabs pushq xorl mov cmp sahf xlat cmp jmpq add xor (bad) lods push in jbe rex.R rex.WXB rex.W xchg (bad) mov xchg sbb rorb leaveq xchg outsb movsl orb rex.WR popfq (bad) lods mov test cwtl rex.WXB pop (bad) movsb (bad) push mov sub mov jnp outsb fnop add (bad) (bad) jae mov (bad) sbb not adc loope movabs sbb shlb rex.WXB loop (bad) (bad) xchg es (bad) mov push sub jg cltd loop jmpq jbe cld xor rex.XB jl retq movabs pushq imul jno (bad) push imul enterq (bad) (bad) mov (bad) xor push cmp pop jp xchg rex cmp repz adc lret rcll xchg leaveq int3 adc fucomi xlat cmp int3 (bad) xor clc mov (bad) push jmpq orl mov shl subl rex.RX cmp mov lahf or sub cmp add lods sar (bad) out fistp repz callq rcl jg and sub rcrl push mov mov sbbb shll out (bad) shll add sbb rex.W xchg int (bad) xchg int sub (bad) sub icebp jp out (bad) enterq pop xor je (bad) movabs iret rol data16 sub xchg push rcll roll (bad) movabs je (bad) icebp lahf rex.RB (bad) push mov sbb movsl leaveq (bad) movslq (bad) hlt (bad) rex.WRB fwait cli (bad) mov test stos (bad) mov mov (bad) xchg std or negb shl jg mov out add in fcmovnb test ss icebp rex.RXB fisub xchg sbb movabs cld movabs and neg stos cmp movslq enterq jp (bad) (bad) movabs (bad) in (bad) sti (bad) pop je outsb ss out retq jp jns (bad) pop push (bad) cld sbb movsl rex.X movabs xchg pop icebp xchg add (bad) sahf or and jnp push (bad) cmpsb imul push in std movabs cmovp out adcl or xchg sti adc cmpsb mov imul (bad) jbe test mov shr sarb add rol xchg adc (bad) add in mov repz hlt lcall int jns imul punpcklwd fldcw movabs (bad) mov mov int adc xchg clc es int xchg xchg cmpsb fistl sub (bad) movabs sti xchg movl (bad) retq cli cmpsb out rex.WRX or (bad) rex.WRB xor mov out js cmp rex.B rex.WR stc shll (bad) and jbe (bad) jae push lret int rcll ss adc xor movabs jle pop es or outsb orb xchg (bad) data16 xchg test (bad) repz pop stc mov push addl jnp insb pop (bad) stos adc stc pop in ja (bad) sar movabs outsl mov rol mov push hlt pop add shrb rex rex.WX addr32 rex.WXB xchg stos cwtl test rcll iret imul out scas mov retq insl mov test or cmpsb mov (bad) out or mov adc scas (bad) jbe pop xor mov rex.X stc cltd testb callq rex.WXB roll and fldenv add mov sbb mov sub add jp js test sbb rex.WRX sbb cli rex.WXB (bad) add (bad) jo sbb or xor jg (bad) in cmp cmp (bad) mov pop ljmp mov rcrb push add lcall mov movabs js (bad) rex.RX js adc rex.X (bad) int3 sti push shlb xlat sti (bad) jno neg (bad) cmp or rex.RXB loopne movslq sub imul outsb push xchg jmp int cmpsb (bad) xchg insb push out lock jo rex.W cmp adc lahf test stc stos mov mov insb outsl adc add (bad) cmp rex.B bnd sbb nop pop rex.WX adc gs rex.RX rex.WRX cwtl rex.WXB gs orl add cs icebp add (bad) cltd sub lock mov (bad) xor (bad) mov pop xchg jl imul (bad) int3 movsb vandnps and insl ffree add xor subl mov xor mov sbb sbb or int3 fimull negl pushq imul lods jae jge xlat movabs test (bad) add xor mov rex.X lret shr (bad) rex.RX add lock and mov hlt vmovdqu movb push lock rex.W repnz sahf callq outsl pushfq adc addr32 sub loope or (bad) (bad) xor (bad) std mov sub sbb rex.WR sahf test sbb jbe (bad) and (bad) or mov xchg (bad) sub rex.W mov movabs test out (bad) mov movabs or sub (bad) rorl (bad) mov loope (bad) enterq jbe lea or (bad) retq jbe rex.B in clc rex.XB (bad) jae (bad) pop repnz (bad) mov repnz js sarb (bad) xchg xchg (bad) mov mov mov push stc cli and xor adc ss (bad) (bad) mov cmp (bad) movabs jge jno callq sbb jmp movabs (bad) lret xlat cmp mov decl push sbb pop lock pop (bad) bnd pop sbb repnz xor lret sub retq cli mov rex.X rex.WRB lahf (bad) in test (bad) jnp mov (bad) jnp jmp fiaddl cmp rex.R rex.WR in fucomp (bad) sub std or (bad) cmp or mov mov and rex.WR fnstcw callq xor mov rex.WX pop or pop (bad) pop mov mov (bad) je sarl clc loope sub add jnp ss and adc andl rol jge retq xchg cmpsl and xor (bad) rex.X rex.RX mov pop sahf mov insb jl sbb adc retq cmp movslq xorb not jg mov clc gs idivl cld loope jle mul sbb jrcxz leaveq movb rolb adc imul int3 outsl shll (bad) xor and and pushfq or jae in (bad) (bad) movsb (bad) push push jae (bad) mov (bad) ffree jle add cltd mov push rex.RXB out hlt movabs scas rex.R (bad) cmc (bad) (bad) (bad) jns lods pop in jo movabs mov jg notl (bad) mov push loopne sub jae test insl ds and es xor leaveq cmp xor mov cs movabs rex.WR mov cmp sbb push sarb jp pop int sub add fs pop rex.R add rex.RX out pushq test leaveq enterq adc fstpt adc xchg push in rex.XB (bad) cltd mov rex.RXB std movsl cmc (bad) rex.X sarb (bad) insb shll xchg comiss rex.R and retq mov (bad) xor mov and cmp jmp mov adc (bad) stos add test movabs xchg out jbe fcoms and jge rex pushfq (bad) (bad) leaveq push push jle rex.WRX (bad) jmpq mov add (bad) sub adc lret movabs and (bad) cwtl xchg push (bad) fs roll andl test xchg (bad) pushfq (bad) mov (bad) adc jrcxz shrl rex scas jp movabs (bad) (bad) rex.XB xchg scas rex.B xchg sar fwait mov jmpq xlat sbb (bad) add mov mov cwtl (bad) sub xchg jne jmpq rorl rex.WX ud1 lock (bad) mov (bad) and mov test fsub rex.RXB test gs in pop cmp fimul rex.WX stc nop fnstcw xchg (bad) (bad) sub or cmpsl xchg (bad) stc addr32 xchg in movabs jp (bad) decb rex.RB vcmppd loopne pop mov in xor iret adc shrl testb clc sahf rol rex.W mov out stc or add and mov add sub rex.WRB int xchg stos mov rex ds pushq shr stos retq xor nop xchg and xchg (bad) jnp (bad) jg rex.WB insl (bad) mov mov (bad) imul (bad) es add cmp (bad) push test out rex.B lock rex.RXB cmp movsb mov mov xchg or xor scas int (bad) (bad) mov iret sbb push cmc fs fwait retq fistpll (bad) rex.WRXB mov xchg jno mov rcrl fnstsw push sub (bad) out sbb rex.RX outsb rex.X jp shll fild rex.RXB xchg shrl repz jp insl (bad) sti pop rcrl rorl fsubrs sub roll (bad) bnd jg movsb (bad) mov rex.X mov sub jnp push in jmp stc (bad) cmp add lret (bad) adc xchg add mov movsb (bad) jne rex.R pop pop add jg pushfq pop es fmull (bad) xchg rcrl mov sti xchg mov mov (bad) sarb mov enterq mov movabs popfq pop fisubl jle shrl imul mov fwait lea (bad) jnp mov xchg add xor rcrl js xchg push lret sub pushfq rex.B cmc xor and fdiv mov and push rcr push std jg (bad) icebp sub mov in sbb pop int fs add leaveq sar insb (bad) rex lods insl imulb sub movabs pushfq push insb rex.B or notl rcrl sbb rex.XB rex.WXB mov fdivs pop in iret jno sar icebp pop cli push rcrl in loopne and rorl xchg add stos add shlb (bad) jge cli retq scas xchg sub mov idivb xor loope cmp repnz shr cmp (bad) xchg lahf test loope callq rex.RX rex.WRX jns add pop out xlat stos rcll gs add and mov lea or xor xor xchg push loope test (bad) pop clc mov (bad) mov xchg rolb in sbbl (bad) negb (bad) and add sbb ja jns sarb adc cmpsb fadds je stc (bad) and or (bad) rex.WX retw (bad) add cld rex.WXB or mov movsl add rex.WRX xlat rex.WRX and pop rex.WR enterq push pushq mov mov lods (bad) pop (bad) cs cmp xchg pop rex.B repnz lock sbb repz imul xchg (bad) or mov adcb fsubrl mov test push sub rex.WRX pop and (bad) clc repnz (bad) rex.XB decb rex.RX xor lock dec out xor push sbb ja out pop sub (bad) addl sbb jo loope int sbb fxch pop (bad) rex.WB rex sub xchg ja jl xlat sub rex.RXB push js rex.WRX mov stos mov add scas jbe add xor int3 hlt out stc cld clc cmp rcrl (bad) rex.WB roll mov sarl lret (bad) jne (bad) add iret adc and push rcll mov retq lret jrcxz cmpsb (bad) mov jmp mov xchg and pop shr xchg (bad) jrcxz rcrl loop in push fimul (bad) and xchg clc imul or mov push xchg hlt rdmsr add (bad) sti (bad) add cwtl stos push je adc mov rcll add xor adc std out iret rol jnp sbb fs jle movups cwtl in (bad) icebp and mov (bad) xor out push xchg (bad) retq test shrl stc (bad) callq (bad) mov jmp mov ss es pushq sub nop xchg add rorl cld test xor imul rcrl lods xchg pop rex.WRXB rorl xor lahf hlt testl mov xchg mov xlat or rex.RX cwtl cltd lock adc test (bad) roll stos pushfq sub (bad) fbstp in pop (bad) adc rex.XB add icebp xchg adc (bad) (bad) xor int3 leaveq mov adc (bad) push pop jp cmp enterq pushq fist (bad) ds lahf pop cld addl (bad) mov pop add hlt (bad) enterq std sub cmp (bad) leaveq push jo addr32 repz and shll (bad) int jb lret cmc int3 jl sub shl mov or ds xchg shrl (bad) mov sub cmpsb scas minps xor test rol je cltd js sbb jmpq rex.X fistl (bad) movabs pop lahf jns lret rex.WX int3 pop lea lea (bad) xchg pushq out movsb roll rex.RB mov int3 (bad) pop and pop jae fdivl mov lea (bad) sbb adc (bad) outsb in lods vpunpckhwd int3 rex.XB sarl pop nop xor (bad) mov mov add push rex.RB mov xlat or mov rorb notl jl loope icebp (bad) retq imul and movsb sbb (bad) jae jmpq jmp sarl sbb xchg movslq sbbl imul ss mov mov cmp sub loop sbb (bad) jns shlb (bad) movslq shr or shl stos adc shrq (bad) mov (bad) fistpl (bad) mov sub cmpsl add push ffreep sbb fldt rex.X rex.WR (bad) pushfq mov (bad) mov xchg callq imul cltd out jg rex.WRB mov lahf es lods and movabs lock insl push test fildll xchg sbb repnz pop test jge (bad) jo js fistpll jne loop rex.XB and loope test addl mov rex.WXB (bad) lock movabs divb add sbb mov (bad) jle jae rex.WRXB and mov movsb adc cmp rex.RB js retq incb (bad) rcl icebp outsb sbb pop sarl sbb (bad) (bad) sub (bad) jg loopne pop lahf pop fs pop sub sub push out or gs vpminub rex.WR xor mov (bad) popfq andl rex.WR add cmpsl (bad) idiv leaveq sub jmp pop jns mov movabs loop repnz mov outsl (bad) (bad) rex.W pop (bad) retq fbld rex.WB jae insb (bad) repz or rex.RB rex.B mov mov mov in sbb loop cmpsl callq movabs pop or loopne jl fisubl fdivp (bad) push (bad) loope add movabs jnp mov std jo (bad) je cmp or nop retq sub callq jge mov out sub fidivr cmpsb mov std cmc adc (bad) mov (bad) xchg (bad) mov adc cmp shlb and mov add test mov stc movabs add jle repnz icebp rol cmp (bad) (bad) movabs (bad) mov leaveq loope push rex.R mov ds (bad) mov rex.WB in pop clc (bad) stc mov xchg test push mov rex.XB (bad) mov jo rex.WR mov fadd pushfq rex.WXB out ficomp (bad) hlt stc adc (bad) movsl pop cmp cwtl (bad) ficompl retq (bad) jns xor pushfq adc rex.B rex fxch shrl sahf (bad) xchg sarl (bad) push ds ja xlat and test std pushq rex.WR rex.RX rorl out add rol in rex.W rex.RXB xor callq add (bad) (bad) (bad) rep jp (bad) sub jnp rcll (bad) cwtl (bad) ss xchg (bad) stc cmp jg shl rex.WR stos cs sbb mov and rex.WB sbb mov test or xchg cmp rorl mov xchg repnz add xchg out jl push (bad) (bad) rex.WRB push in callq cs (bad) je pushfq int3 xlat lret loope rcll (bad) test mov and adc adc sarl and or pushfq hlt pushq (bad) fldcw pop (bad) mov xor rcrl add sub test jae (bad) and add sarb ja retq xchg add (bad) rex.WXB (bad) add or jge addr32 fs rcll cmc (bad) neg je rol xchg stos push jmp rol movsb (bad) xlat sub xchg int iret loope test enterq mov rorl jnp jne in sub jl iret mov add pop mov cmp xchg (bad) mov enterq and outsb push (bad) callq pop adc cmp mov cmpsl shll add shr jp (bad) (bad) rex.WR (bad) lret (bad) (bad) in sub xor adc (bad) sbb repz mov mov jrcxz sbb mov ja (bad) rcl pop fs lahf cmp rorl retq (bad) jge rex.RX out fist and (bad) mov mov jp rex.RX outsb ficoml (bad) sub (bad) xor scas cmp push (bad) pop cmp rex.RXB jl jbe mov xlat (bad) mov popfq rcrl (bad) jle jnp retq add add cmp and jmpq xchg movabs out (bad) cmpsl mov es shl scas or (bad) push xadd mov or (bad) rex.WX mov shrl sbb sbb cmp movabs jns sbb (bad) cmp ds add sarb xor (bad) mov cli or xchg (bad) movsl enterq ffree fadds (bad) scas (bad) rex.WR (bad) sub jns or mov fadds sarl jo rex.X and sub lret cli add test pop mov pop rcl jb or xchg sarl cltd add rol stc mov or and repnz retq pop (bad) icebp rex.R mov sbb sub mov sbb loop scas xor (bad) addr32 (bad) (bad) je push (bad) mov jg popfq roll xor cmc insb (bad) rex.WX rex.WX rex.WX rex.WRX (bad) test xor retq (bad) in int rex.WX fimul sub ja cs fnop shll jbe adc fistpll movabs int jg jbe imul pop jg sub retq and xchg (bad) (bad) ss hlt fdivrl mov mov mov adc repz sub shrl (bad) sub adc mov outsl jge incl (bad) in jrcxz rex.WRB test roll not callq iret iret and mov rex.B and (bad) push rex.R test sub jne mov test pushq cmp sbb retq pop mov sbb pop add (bad) outsb lods adc rex xchg and mov or adc mov rorb push fdivr in retq vpunpckhbw vmulps rex.WXB rex.WRB mov jrcxz jmpq add add fimull insb lods (bad) jmpq (bad) sahf test adc pushq lods jne adc out mov add adc pop mov rex.RXB movabs pop sbb xchg rex.WRB retq lock movb lret icebp pushq rolb mov xchg shl outsb sarl xchg cld sub lret ljmp cmp sbb div movabs mov xchg insl (bad) je sbb test rex.WRB (bad) mov rex.X push jl movb cmp xchg sar vcvttpd2dqx retq sub (bad) xor mov (bad) mov je adc sbb (bad) xchg (bad) mov sub (bad) imul popfq push or out cmp pop out adcl frstor popfq sarl sub pushq (bad) mov retq mov jle push cmpsb sub mov (bad) rex.WRB cs xrelease fisub mov and scas rex.B lods or ss cmp and loopne rclb rex.W mov fdiv mov add adc adc add jg jnp stc movabs lret lret rex.WB test push add pop sub xor xor pushq push (bad) (bad) mov and mov (bad) (bad) imul (bad) (bad) add add jno fnstsw movabs cmp (bad) mov (bad) insb sub (bad) loope (bad) jb sbb lret (bad) mov fbld push cmc fstpt adc shrb xlat ja test cmpsl leaveq jae jrcxz vxorps (bad) hlt cmp movabs (bad) test movsb or (bad) fistl jle js xor adc rex.WXB rex.R (bad) ss imul mov or fsub xor fldln2 orb test fstpl rex.RXB jg sbb adc (bad) adc xchg adc pop fimull and or mov push stos lahf xchg repz shll xchg mov loope iret adc sahf shlb rex.WB in js sbb retq loop or pop xlat movabs mov popfq repnz rex.WRB rex.WX pop and (bad) xor xchg jnp rex shll enterq mov push movsl int3 pop scas roll lea cmc pushfq retq (bad) cs rex jp sub rex.W (bad) rcll adc iret rex.RXB cltd and sarl insb movabs (bad) sub adcb jmp mov (bad) (bad) adcl xchg lret or mov push cmp (bad) adc or sahf sbb xor (bad) or outsl sbb hlt stos (bad) scas add rex.WX rex.B mov mov rex.WR ds add cmp push movabs in (bad) rex.WR repnz xchg (bad) sub sti (bad) xchg and cmp gs lock xchg sbb or adc xchg cmp out pop shrl (bad) sbb and add sarl enterq sbb roll jae xchg outsl adc insl (bad) xor pop movslq mov lret int or add mov adc repnz mov fldt (bad) cmp add sub repnz outsb imul mov scas rol and shrl xor repnz movabs repnz push (bad) cli loope sahf mov pop sub addr32 ss test (bad) rcl fstp rex.WR fs shrl (bad) loop in cmp jp sbbb rcrl stc fwait (bad) and loop mov (bad) or in mov cld mov movabs movabs jp jns movabs rcrb (bad) and mov (bad) (bad) sbb rex.B mov movslq in pop jnp jp add and lock (bad) ror mov jmpq xor adc rcll icebp jbe or out fadd sub enterq ss rcr xor out add cmp xchg in lret pop rex.W rcll pop mov sub lea jp fnsave nop shrb rex.RB pop cmc add add mov iret lret mov mov and rex.XB (bad) test rcrl add sub (bad) rex.RB pushq imul callq enterq idivb out pop imul adcl or mov fxtract xor sbbb (bad) cmovl (bad) movslq pushq fpatan push rorl addr32 (bad) cld sub js mov add movabs and jo push leaveq or loope push nop stos fisttpl (bad) shr jae rex.WRB xor imul movslq xor (bad) rep mov pushq pushq push cli in nop mov xor mov xchg or in rex.WXB fdivl cmc iret lahf jmpq test push imul (bad) faddp js mov and rex.X (bad) pop movabs pop cmp test (bad) jns scas pop sub insb loope sub adc (bad) mov xor rex.WB (bad) mov enterq sbb jle (bad) jno rex.RX rex.XB rcrl sbb pop fwait insl addb pop mov fildll mov addr32 (bad) sti sub iret cli jno pop pop pop rorb adc xor (bad) rex.WB (bad) cli ds roll repnz cwtl push fsubrl sub (bad) sahf sbb and callq fstpt (bad) adc in repz (bad) add mov (bad) xor xlat mov in jl mov jnp retq (bad) rex.RXB sahf (bad) shr pop pushfq rex.WR (bad) cmp pop iret xchg scas push add scas sbb rex.WRXB repnz rex.WRB (bad) mov pushq mov mov push adc orb es mov add mov xorb cmp loopne push clc lret repz and movl cmpsl fcomps cmc or cmp jno lret adc rex.WX rex.RB sbb rex.W int3 outsl mul or (bad) mov fstl int sti (bad) lret mov adc lret xchg xchg jmpq or bnd mov fisubl (bad) jbe and sbb mov jrcxz (bad) push jbe mov add mov movb mov mov (bad) xchg mov scas pop sub int3 data16 (bad) nop test or sub test in lea retq add lock imul fist icebp retq xchg scas mov add fcoml lret sub (bad) and lahf xor fsub rex.RB loopne (bad) sub roll and stos gs adc rex.WB icebp (bad) jge cmp lahf adc mov (bad) xchg sub pop add rex.WR out adc out (bad) movabs pop and leaveq and movsb mov (bad) xchg mov or notb iret (bad) iret fcoms xor movsl fwait test (bad) cmp rcl movsl fcos (bad) (bad) and sub or (bad) mov and movabs (bad) int mov repnz (bad) push (bad) xchg cmpsb in scas rex.WRB mov jmpq std sub jno (bad) jge add adc (bad) jnp rex.WX mov (bad) and shl fwait mov (bad) sub mov jg rorl sub pop stc rep jrcxz add mov or mov (bad) mov sbb jne (bad) mull xchg (bad) sbb (bad) xor pop xor sbb mov gs (bad) mov js cs rex.WX mov rcrl jb cmp (bad) (bad) rex.W cmp cltd lret jo jge and popfq rclb cmpsl outsl (bad) xor rol out out mov mov vcvtsd2ss mov (bad) int rex.W and mov insb notb push lods (bad) mov shll jg push (bad) pushfq jp and in add rex.XB push (bad) (bad) ljmp mov movsl xchg xor (bad) cltd clc rex.RXB loop retq sbb outsl stc out (bad) nop movb rex.RXB xor rex.WRX (bad) (bad) push (bad) pushq test xor fidivrl add rex.B rex.WRX ds fisttp adcb push xchg test es xchg rorl outsb scas out xchg adc rol xor (bad) add movabs mov mov in (bad) mov rex.WRB repnz (bad) clc push sub add insb mov mov out pushfq add shll jne push pop xchg movabs mov pop sbb (bad) add addr32 int3 xchg pop mov out lret xchg mov rex.WR fwait nop mov fcmovb out pop (bad) pop push in (bad) int3 mov rex.WR adc sarl mov adc pop rex xchg or jp push mov in (bad) shrl rex.XB cmp clc cld stos xchg pop loopne push (bad) sbb cmpsb cmp sub shrl loop lret fadds (bad) rex.RXB (bad) je rcll cmp pop sub mov lea movabs sbb (bad) pushfq add jrcxz (bad) fsubs jno (bad) rex shr (bad) fcompl shr movslq (bad) lahf cli int test rcll shll adc push test sub (bad) mov retq scas lahf (bad) push outsl sar sbb adc js sarl rex.R ja andl or rex.RX repnz jno,pn cld rex.XB cmp mov std scas jo add lods cmp rex.WB push movabs out roll or fdiv sub (bad) data16 adc lods or mov sbb (bad) (bad) lods (bad) add jle js add mov movabs pushq mov jmp add (bad) and mov sub loop (bad) mov lret sub fxch (bad) add (bad) scas icebp xor xlat rcrl in (bad) (bad) test sub out stos or (bad) mov (bad) outsb xor mov nop in mov rex.XB (bad) lea (bad) cltd nop stos vxorps add fdivrs mov cmp xor or (bad) push (bad) stc leaveq jns test testb movslq xchg adc jle sub sbb orb jmp (bad) xchg popq mov outsl xchg cli cmpsb js and sub lock (bad) in cmp pop callq and xor jno or insl rex.WXB add repnz mov jge repz ds (bad) (bad) testb and (bad) insb ja pushfq addr32 xchg jae add out callq test cwtl (bad) (bad) mov rex.XB in rex.XB movabs sbb mov (bad) jns mov (bad) (bad) jae (bad) xor (bad) cmpsb and pop cmc pop cld sub (bad) (bad) mov sbb rex.RB rex.W sbb (bad) (bad) scas loopne xchg pop pushq (bad) cmc (bad) fisttpl stc jmp sbb (bad) rex.RB (bad) mov iret int3 je cmp xchg rex.B mov (bad) jne mov ror fadds (bad) (bad) int3 fcmovne rcll (bad) xor (bad) out sbb ror nop push mov movabs jp (bad) (bad) data16 (bad) js pop lods (bad) int3 lock mov jae cmp and jmpq xor rol lea adc xchg (bad) loope out lret shrl (bad) shrl leaveq scas shrl push xor xchg rorl jge (bad) je adc movsl repnz fmull iret mov rex.WRB or lahf sarb mov (bad) push fdivrs shr sbb push add cmp sub je,pn (bad) je add pop (bad) and cmp (bad) (bad) (bad) fdivrs adc rex.WRX rex.WB pop out (bad) xor and mov sbb rex.B xchg jae icebp fucomip (bad) leaveq insb and out lock iret repz test loope push rex.WXB pop push (bad) out (bad) sbb or and movabs vxorpd enterq adc data16 sub out and mov sbb scas insb xchg pop pop repnz xor fwait imul (bad) add cmp adc sbb xchg insb rex.X rex.W rex add fisttp pop rex.WX add sub xor xor out (bad) out jrcxz and rex.RB sbb (bad) outsb sbb es out lock icebp cltd mov stos out rex.WR rex.WR or fnstsw (bad) int3 enterq pop nop outsb mov test clc mov mov mov (bad) xor jl lods setge sbb nop rex.RX mov movsl cwtl or (bad) (bad) mov iret movabs (bad) iret out loope mov add in (bad) cltd jmpq scas xchg loope (bad) or icebp sbb xbeginq rex loope rex.WR or stc rex.RX rex.WRB pop sbb sbb (bad) add leaveq push xlat mov add stc shll push rex.X (bad) or movsl lock ja addr32 (bad) callq roll jg sbb lods lret sbb movabs jl and out popfq repnz sbbb (bad) leaveq push sbb add test and enterq cmp lret fs lea rex.WRXB (bad) repnz sarl jno (bad) enterq xor adc jle retq stc mov pop loop cld rex.X jno sub or out adc (bad) add repnz fistpll (bad) rol add xchg push cli mov xor jrcxz adc xor rcrl or xchg xchg movabs sti cli pop pop ficompl xchg xorb adc (bad) pushfq out rex.XB shrl movabs mov (bad) test add repnz jle (bad) rex.B rex.RX cmpsl (bad) icebp movsl cli push pop (bad) sbb add mov retq cmp lret xchg add sarl int3 fwait (bad) out dec std (bad) in popfq push pop int sub pushfq jmp mov mov sub jo or (bad) cwtl out (bad) out cltd and cs or imul movl adc and push cltd jge or mov shll mov sbb rex.RX mov movsl adc sbb (bad) rex.WR stos push rex.B pop roll pushfq fld (bad) (bad) repnz or rex.R add mov jg in add (bad) mov (bad) (bad) (bad) callq mov mov cli es stc adc addl movabs rex.WRX shlb add mov movsb cmpsb push cmp pop sarl movabs mov cwtl rex.R cmp rex.X (bad) mov add adc sbb jmp (bad) pop rorb xor sti xchg fwait rcrb mov (bad) out jno mov shll push xor xchg pop pop int xchg add pushfq sarl jb cmp pop add xor jb addr32 gs sarl negl in movl mov (bad) mov and loopne rcrb cmp (bad) xor (bad) roll push sbb xor fst (bad) shll sbb mov and (bad) gs (bad) fidiv (bad) iret mov movabs mov movb pop (bad) pop cmp neg sub (bad) gs test test notb rex.X ss (bad) hlt and (bad) repz (bad) (bad) jns rex.B rex.WXB loopne pop addr32 loop (bad) xchg (bad) in rex.RX add fs jge rex.WX int (bad) xor add ss lods cmp cmp addl sub and or imul cmp add rex.XB pop adc fisttpll jl and fcmovne xchg mov cli sahf mov mov (bad) xchg (bad) jns fcmovb cmp rcr lret mov and fcompl mov fcmovnbe movslq fnstenv mov pop (bad) mov test retq (bad) mov rex.WR cmp popfq xchg mov jo movslq pushq gs repnz jno and rex.WXB shll outsl sbb cwtl movsb movabs jbe xchg shlb in ror rex cmp sub pop cli and sbb mov cld insl insl jb fcmovnu cli icebp rex.WRB jmpq (bad) mov jle ffree mov lret xor in repnz pushq or imul fsubrs enterq cmp insl rex.R lret mov mov jl (bad) lret xchg push pop cmpsl cmp pop movabs (bad) scas sub imul test (bad) std (bad) (bad) int mov movsb sahf adc rcrl test movslq fistpll cltd roll int pop mov xchg out je push xor (bad) cwtl mov mov (bad) rex.WRXB rorl sub add movsl jle mov lock xchg enterq cli xchg sbb jge insb (bad) push scas rorl mov mov push or xchg mov lahf pop (bad) out (bad) es (bad) stc testb pushq out or rcr cmpsb (bad) pushfq movsb lret (bad) out test rex.WX push jmpq mov repnz fidivrl sti jmp rol data16 adcb rex.WB mov loope addl fstp rex.B sbb sbb lea imul xchg sahf or pop loopne sti pushfq adc movslq rex.WXB cmp sub int push (bad) jmpq pop push (bad) jrcxz rex.WX cmp mov (bad) lret cltd sbb add (bad) sbb cmp (bad) adc (bad) pop shrl scas (bad) sarl push pushq int movsl iret lahf movabs fbld js xor pop (bad) imul fs rcll push sub (bad) retq xor xor jg xchg movabs (bad) rex.R rcll subl test int repnz sub loope cmp adc fcmovnu addr32 rex.B jle jmpq retq sbb iret icebp movabs lret sbb and xchg sti xchg (bad) (bad) cmp mov (bad) sub xor test (bad) pushfq (bad) out test pop sub mov rex.WXB jge rex.WR fisttpll stos lahf sbb (bad) movabs pop jb push pushfq (bad) xor fxam rex.RXB jnp sub sarl stc mov out mov (bad) cmpsb hlt callq movsb shrl cmp imull jbe rcll mov mov (bad) mov or imul rcll adc insl loopne bnd rex.B rex.WRX mov sub pushfq sbb jge push add and xor movabs fistl (bad) and (bad) rex.XB add pop int3 orb movabs (bad) out loopne movsb xlat xor jrcxz ss nop add (bad) (bad) rex.R insl lods movsb add adc rcrl sub cmp pushq fstps out pop adc add pop lret push adc jne or rex.XB lea rex.WR rex.R fmul jno andl ss mov shll int3 scas vrcpps or movabs sti nop rex.B rex.XB (bad) mov rcrl sbbb cltd cmpsl (bad) xor (bad) sarl popfq shrl mov cld shr pop or fiaddl rex.WX lock rol loop fs (bad) mull ffreep jrcxz mov mov rorl mov mov rcrl jb cmp fnsave and jnp callq gs adc rex.WRB (bad) and rex.WRXB mov imul (bad) repz clc push out rex.RB enterq rol leaveq rex.WR sar and rex.WX (bad) leaveq insb data16 (bad) lock rex.WRB push adc stos outsb cmp mov ficompl sti or rex.RB rex.R scas (bad) push xchg sarb out add and addr32 or (bad) rex.WRB (bad) cmc mov pushq in rex.WR gs fdiv movabs (bad) movabs xchg loope sub xchg xor jns rcl xor sub or jge std jp cmp (bad) out es (bad) (bad) (bad) (bad) icebp xor ss or sbb sbb sub xchg mov add mov mov push loopne sahf gs jne shll repnz (bad) cmp mov cltd imul sub and mov rex.WX rex.RB loop rex.WRB repnz or out loope mov stos roll pushq cmp xchg rex.W idivl jl cmp (bad) adc jmpq (bad) (bad) lock and popq popfq cmp (bad) mov (bad) (bad) (bad) sarl fstl xchg movslq cli mov rex.B sarl jge rcll sub xor adc xchg movabs mov repz rex mov lods xchg adc in add leaveq mov rorl sub and test sub jge push add (bad) rex.WRX mov xor rex.RX (bad) adc mov popfq shll (bad) lret jo sbb fcomi xor (bad) or icebp lods movabs (bad) mov popfq jg sbb repnz add (bad) mov jno (bad) movabs sarl rex.X jl cmc (bad) and or or cli cmp jmpq and (bad) shlb roll (bad) mov xor lret rex.W fwait sti sbb rex.WRB cmp (bad) sbb (bad) rex.R rex.R mov push (bad) loop movabs loope (bad) and rcll sarl xchg push xor sbb mov gs repz repnz std cmp xor (bad) rex.WRXB push and lahf out (bad) in out sahf mov pop xor cmp (bad) jns shll cmp push (bad) out (bad) pop testb add (bad) and (bad) add nop rex.WRXB xor sbb movabs sub rolb rex.RX scas movslq rex.XB pushfq iret retq add or jb bswap out jp lret cmp out clc (bad) rex stos (bad) xchg add rex.RX pushq callq lret push cmpsb rcl cmpsl pushfq and test (bad) repz ss add adc pushq mov (bad) push test jbe sbbb sub rcr mov and cmp and pop (bad) shrl movslq pand (bad) outsb loopne adc roll sbb ror xchg (bad) movabs and sbb sarl mov (bad) mov cmpxchg sbb (bad) push jnp mov movslq nop mov pop icebp fs rex.WB out loopne xor rol add ja xor cli outsl loop (bad) (bad) or callq in mov rorl fdivrl rol lret (bad) mov and cmpl callq fidivl mov rex.RXB popfq sahf pop adc rcll lock rex.WX add fnop (bad) (bad) jb (bad) fldl addr32 jrcxz add negl (bad) in cmp fwait cmp rex.RXB rex.X cmp test sub push fsubrp jp add mov mov xchg lahf push sbb sub xchg lret lods test scas leaveq out ds push sbb shrl rex.WB sarl scas (bad) jo sahf cld (bad) jne jp (bad) jrcxz repnz jbe jns jo fcmovb scas sub add or movabs xchg orb movsl sbb (bad) add mov xor rex.X add jb int3 (bad) cmp leaveq movsl add sahf rorb mov std (bad) adc out lock xchg divl (bad) rcrl rex.W cmp in cli je int3 (bad) sbb push mov cltd std nop rex.RXB shrl jns shll movabs and jnp out mov iret (bad) pop loop in (bad) pop movabs stos roll fcom std callq push loope iret adc repz (bad) insb repnz sub add sbb jmp (bad) jae jl and sub pop popfq movabs (bad) push add rol jp jb sarl mov negb loope jne add (bad) inc adc data16 (bad) lock or xchg rex.WRXB pushq and mov or adc out (bad) sar ds mov mov shrl out out (bad) (bad) int3 stos retq rol (bad) xchg push movabs or and sub fisubr iret (bad) int3 mov rex.RB adc rcll gs andl idiv (bad) (bad) rex.WXB pop push jl jo repnz xor pushfq (bad) (bad) cmp repz scas stos roll test cwtl insb sub ds rex.XB lock cmp sbb pop test (bad) xchg adc mov movabs rex.WRXB shrl xchg xor (bad) jl jns (bad) lods (bad) or imul rcl lret rcrl rcrl sub roll stos (bad) imul mov (bad) (bad) mov loope fmuls sbb faddl xchg and outsl rorl (bad) (bad) rex.WR rex (bad) mov (bad) repz movabs and sar fisttpll push gs roll iret cli mov and andl add push mov out sbb (bad) (bad) retq push int3 mov sub jg (bad) icebp lea shrl cmpsl in mov rcrl sbb lea cmp rex.W shl cwtl xchg mov movabs (bad) addr32 pushfq xor stos fdivrl add sbb adc pushq rex (bad) and sub mov testl mov (bad) imul fsubrl insl shrl (bad) lret (bad) push cli roll push stos (bad) jne mov jl add test cltd sub loopne scas and (bad) loop ffree cld jle (bad) int3 (bad) or shrb (bad) adc adc retq xor movabs add (bad) push mov movabs push add movsl movabs stos mov retq rex.WRX lods retq (bad) jae movabs cmpsb jg (bad) jp and jmp sbb (bad) mov jo sub imulb (bad) rex.XB mov fs orl iret enterq mov mov cmp loopne je enterq rex.WRX movabs stc rex.RB bnd (bad) movsl or sti pop rex.W out rex.RXB pop pop (bad) (bad) cmp rex.RX punpckhbw jno test cs fcmovnu sub cmc add faddp pop icebp (bad) stc ffreep xlat retq sub pop (bad) pop test jl (bad) ss sbb (bad) lret xchg (bad) lret mov gs xchg sub retq mov sub popfq xor nop scas mov loope rorl stos jae fimull leaveq int or rex.WB sub mov js (bad) rex.WX in push idivb (bad) lret int3 mov jne mov callq out mov rcl and rex.WR shrb cmp cmp (bad) (bad) or pop (bad) cmpsl cmp xchg sbb (bad) imul sub movsb icebp rex.WX repz add leaveq jb (bad) repnz jno shrb data16 (bad) hlt jrcxz stc xor add add sub (bad) xchg (bad) fidivl retq rex.WRX outsb fadd test sbbl and nop out (bad) pavgb loope xlat xor or lods (bad) pushw rex.RX rex.B gs (bad) sbb out jnp rex.XB pop push lret rcll imul stos ja shr fnstcw mov and movsb std adc pop xlat mov int icebp mov repz (bad) mov loope adc xchg mov (bad) (bad) data16 and sub lea out rclb fwait or rex.W js pop push (bad) ljmp jmp mov rex.RB repz push cmpsl sbbl mov (bad) ja and sahf mov sub and jrcxz pushfq (bad) pop std ror (bad) popfq (bad) add (bad) js xchg add pushfq insb roll push (bad) test add rex.WXB pushq (bad) popq movabs jg loope sub (bad) (bad) pop (bad) test sbb xchg lahf pop rcrb or add jl sbb retq mulb ja pushfq (bad) adc xor stos fisttpl fidivrl nop xor jge divl outsb sahf test or sarl mov rol mov sub stc xchg loope addl lea xchg test rcrl xchg movsb cltd repz stc (bad) fwait rcrb (bad) rolq (bad) (bad) scas (bad) xchg lahf add mov (bad) mov (bad) adc mov int mov cmp (bad) fdivrs add stc (bad) add movabs xlat cmp mov sbb add fucom lret cmp sub rex.X mov pop ror fdivs pop clc xchg cmp leaveq xlat (bad) callw pushfq xor movabs movabs (bad) int3 mov ja cmc movabs scas movsl (bad) (bad) rex.WR loope cmp cmp stos icebp movsb jns (bad) stc out sahf movl rcrl (bad) xor mov (bad) mov movabs mov rex.XB push adc rex.R xor int3 testb pop movabs mov movsb in mov adc cwtl lahf rex.WR movabs mov rex.RX xchg loope lahf jmpq or leaveq shrl sbbb stos add sbb rex.X callq (bad) gs int ss loope test (bad) push pushq xchg hlt or xlat xchg (bad) cmp stos retq int rex.WXB rex.XB movb cs iret jmp (bad) ja mov fwait scas (bad) mov rsm sbb (bad) add shl rex.WRXB and shrl xchg std (bad) rcrl divl test lret rex.R shl rex.RXB clc loop or in mov out and jge add sahf lods xor lret pop movsb shll (bad) in adc sar rex.WRB xor mov xor sti pushfq pop (bad) neg push (bad) (bad) retq shll add adc insb rcrl js sahf movsb lea pushfq (bad) retq rex.R jne callq pop mov pop pop repnz loope (bad) rcrl (bad) rex.XB imul fsqrt lahf xor rex.R ficom pushfq (bad) mov movslq cltd pop xchg stc (bad) stc test flds add cmc sbbl push mov xor push (bad) rex.WX ss xchg xchg fisttp cmp adcl or xorb ss rex.RX sub outsb sub loopne adc loopne out nop xor mov imull fcoml sub mov rex.RX mov mov adc (bad) js sbb sbb (bad) jne mov push sti push (bad) int3 (bad) rex.WRX fwait cli mov callq mov pushq pushq mov (bad) repnz sarl mov sarb mov iret icebp popfq stc add push sti (bad) mov (bad) (bad) cmp pop leaveq (bad) ror fs out (bad) xor ror (bad) cmp (bad) rcl cmp adc movsb (bad) mov fistp movabs cmp (bad) in jge vpor cmp (bad) insb add pushfq (bad) pop add movsl popfq rex.WRX xchg (bad) mov movabs out sahf fs shrl loopne ss (bad) sahf movabs fcmovnb xchg orb rcrb data16 push xlat lret out vphsubdq movabs lahf movabs (bad) mov mov adc add repnz roll push or mov imul (bad) add cmp push (bad) popfq adc cmp xor sar mov movsb movabs jb adc movabs jnp test jmp loopne ffreep outsb callq ja pop test repz sub xchg shrl (bad) ss xchg mov fnstsw loop callq jmpq mov jrcxz movsb pop cmp (bad) mov callq add (bad) jne shll jmp mov movabs adc xchg adc fistpll callq sub add stos pushq rcrl adc (bad) loop rex.WXB lods add jo insl mov mov sarl xor (bad) lock shrl je movabs sbb add pop (bad) dec movslq sub rorl addr32 pop int add adc rcrl sbb scas (bad) (bad) cmp movsl and or (bad) push cli fs (bad) rex.B mov ficoml jbe sti movabs cmp xchg mov mov rex lret out negb out cmp fmuls add push int3 add movabs or cld mov jmpq (bad) cmp retq xchg shl mov rex.XB rex.WR shrl xchg (bad) jno jle rex.RXB (bad) push (bad) rcrl pop adc cmp (bad) (bad) (bad) ja rex.WB movb (bad) sti lret xor movabs pushfq cmc and mov and int3 add push xchg icebp xchg push ja movsb (bad) push lea xchg jge lods push int3 rorl fisubr mov (bad) repz pop ds (bad) rex.WX movabs movslq imul rex.RB xor mov movsl (bad) (bad) sbb test rex.RB lea xchg rcl lret cli pushfq adc fadd pop icebp cmp incl (bad) sub jmp repz rex.RB cli mov mov xorl repz test xor or (bad) and fcoms rcrl and add mov mov insl jrcxz retq lea jno sub rorb mov push mov int3 (bad) mov xchg mov cmpb cmp push xchg cli (bad) add movslq cmc movabs xchg test imul (bad) (bad) movsl pop (bad) mov in js retq notl lods rorb fs and loopne jge adc rex.WR (bad) cmp jnp add (bad) add test pop test xor sub cli jae repz or cmp (bad) ficom (bad) out (bad) mov jo xchg cmp (bad) loope iret xchg lock mov or imul rex.RB stc int3 rorb (bad) leaveq (bad) pop callq (bad) (bad) outsb fcmovu idivl subl fucomi or mov fs repnz (bad) sahf xor out stos movslq ja sbb rex.XB jns retq (bad) xchg mov retq mov lea mov scas (bad) xchg (bad) loopne iret pushq adc sub je rcrb and (bad) rex.RXB xor out or or mov (bad) loopne in xlat sbb sbb adc jge loope popfq (bad) repnz out sbb iret and push xor int add xor pop sbb adc xor scas enterq rol xlat mov add cwtl repz add adc or (bad) jne rorb (bad) push loope movabs xchg rex.X in shlb orl adc xchg cld xlat mov sub mov xor mov out jno cld jrcxz jno insb sub or mov retq callq in movabs jp icebp rcr mov cmp pop sbb sbb mov (bad) loopne stc (bad) pushq pushfq in lea shrl rcll negb cmpb cwtl cmpsb hlt jbe cmc shr (bad) and (bad) cmp rex.RXB mov movabs sbb cmpsb lret mov loop jrcxz movabs mov (bad) out xchg and rcll shll sarl pop mov enterq sbb shll jo lret mov or push js jmp (bad) ss xchg rorl xor enterq or (bad) (bad) test or xchg xchg sti adc fucomp rorl xchg (bad) movabs fnstcw rcrl adc and (bad) stc (bad) fsubrl js add add sahf mov jae rorl xor rcr cmp cld (bad) jo sbb push add mov movsl mov rcll sbb xor pop cmp movabs or (bad) es mov mov callq test enterq lret out addr32 imul pop cltd int xchg icebp test jo rex.X (bad) mov cmc fsts jnp and fcomps rex.WR rex.WRB rex.RB and lret rex.RXB insl loope clc movabs loope (bad) fmul ffreep out (bad) push negl pushq and pushfq rex.RXB add enterq (bad) (bad) es jge xchg cmpsl (bad) and (bad) (bad) cmp adc sub (bad) loope rolb jns shl sub fcmovb (bad) repnz int adc pop cld (bad) push mov int3 fsub test movabs scas outsb movabs stc xchg add mov subl xchg shll hlt fmuls (bad) (bad) sub roll mov xlat mov mov shr cmp and fsubp jge add jb cmp int3 std xadd js repnz mov sarl push scas ror movabs jp popfq lods repz frndint or mov (bad) (bad) cmp (bad) movb mov test loope jmp cmp or fwait clc js lods or (bad) enterq rex.W (bad) test je jns or mov clc rex.RB rex.WRB movabs pushq sahf callq xor loope adc (bad) cmp rex.B sbb mov int3 and loop fwait and sbb sbb lret fdiv rex.WRX sub add rex.WRXB imul sbb mov (bad) rex.B in (bad) sub ja (bad) sar rex.WR jrcxz sbb mov (bad) xchg mov fs (bad) (bad) or in cli enterq mov (bad) sbb pop fistp cmpsb lahf xchg or fadds (bad) or test (bad) (bad) mov sbb movsb push pop jae pop rex.RX mov in (bad) lods (bad) or pushq push rex.WR insb or (bad) xor rex.RXB shrl movsl xchg outsb fimul jne (bad) cmc ja or int cmp mov insl xchg mov rex.WRX fidivr (bad) cltd jmpq out rex.WR cs adc sbb (bad) (bad) (bad) ficoml jne jbe fstpl icebp add mov rex.X jg icebp clc cwtl loopne mov cmc (bad) retq xor (bad) xchg test sbb sub (bad) cmovae rex.RB sbb mov (bad) rorb or xor rex.RX (bad) pop sbb outsb adc mov (bad) clc jmpq add jo add leaveq es cmp and maxps pop or rex.XB movsl mov bnd faddl (bad) rex.RB pushq lock (bad) (bad) sub sbb xchg fistpll xchg cltd or xor mov xchg xor mov or cmp mov (bad) movb fldenv jno adc repnz test sbb (bad) pop (bad) cld jle (bad) mov loop sbb add callq insb pop rex jo (bad) jg retq mov lret es and mov xchg sub mov jbe movsb pop sti mov or mov mov shll cwtl add or gs push mov push jnp mov sub rcll lock imul andl (bad) outsl sldt (bad) rex.RXB iret rcll insl cmc mov stos loope cmpsb xchg retq (bad) cmp movsb pushfq push jle (bad) jmpq (bad) (bad) out rex.WRX cltd movabs cmp cmp sar ror pop or loope push or sbb jns (bad) jae sbbl (bad) jo rex.RXB sub stos shrl enterq ss rex.B fcmovbe addr32 xchg sbb (bad) fnstsw insb and lret mov rex.WRX sbb jnp or pop int sarl test (bad) rcrl sti ja in lods ss push cmpsl pushq xchg rex.RX push cmp fildll xchg fwait testb jo movabs cmpsl and or jnp (bad) rex.B jp sbb pushq ds (bad) mov (bad) fisubr xchg shrb rex.B rex rex.RX jrcxz fidivl (bad) cmpsb leaveq (bad) (bad) push rex.R or gs cmp roll mov mov test jae imul sub or and adc clc rex.WR test or mov sub nop fcmovnbe cmpb sbb bnd sub out cmp mov mov (bad) push mov xchg clc sbb rex.W dec pushq enterq (bad) adc sub retq int3 fdivrs rolb mov (bad) shlb (bad) js stc cmpsl and mov (bad) mov or cs (bad) add test lods faddl movslq movabs jrcxz addr32 sahf xchg fsubrs js callq retq jge sub pop add data16 sbb jae lret (bad) mov xchg iret xor je (bad) sbb sbbl lret out sbb add and rex.B rex.WR mov addr32 fiaddl rex.WB out add and rex.W xor lods mov xlat xor cltd rex.RX es (bad) mov pop (bad) loop (bad) enterq (bad) cmp mov sbb rex.RX xchg je and jae rex.WB callq jns and popq fsubrs xlat and loop adc cli and mov in rex.WXB add pushfq mov mov (bad) shlb fstpl fimul repz pushq mov adc (bad) (bad) push cmpsb sub cli enterq nop cmovne or in add cltd or lea shl (bad) fldcw and mov mov lods rex.WXB adc sbb rex.WRB insb rex.WRB lock mov mov xor sub retq (bad) sbb rex.R (bad) movabs sub push movslq pop out add add lea mov retq sub mov pop pushq xchg jrcxz adc lods rex.W rex.RX je jl mov sub sbb jno rex.X (bad) adc fstl and fistpll jl lret xchg sbb enterq or imul adc cmc push (bad) shrq iret pop insb iret fsubs enterq movabs pushq adc es loop rex.X paddd (bad) cmpl rol adc (bad) rex.XB shll cmpl (bad) xchg pushfq int3 out add mov (bad) enterq sbb adc xor callq add outsb (bad) in (bad) iret cmp lock movabs rcll (bad) jno rcr pop mov int xchg (bad) cmp cwtl jmpq callq stc pop loope lret test (bad) adc sahf insb rex.B loop or rol xor movabs outsl movabs cmp xchg sarl lahf scas leaveq jne movl cwtl mov add insl stos cwtl movabs rex.WRX (bad) adc cwtl out jrcxz lret rex.XB pop pop loop (bad) jmpq (bad) cmp iret mov xchg andl mov rex.X (bad) pushq pushfq rcll xor rcr (bad) push or pushfq adc retq imul jg mov sarl shlb nop rcr gs imul sahf xchg callq retq mov leaveq repz hlt (bad) add mov push and retq cwtl (bad) pop jl (bad) add add out rex.B lock pop rex.R rol scas adc (bad) sbb cs pushq jnp (bad) jmpq imul negl xor rex and mov rex.RB int fnop cmp jg jb cmp (bad) int adc push (bad) callq rex.WR repnz add shll lret jl movsl notl roll popfq cltd cld mov mov push test jae push repnz rex.RX rex.X and xchg mov out repz scas cld sbb lret fldcw movsb add xchg nop incl sbb cvtdq2ps rex.RB std (bad) js cmp lock fsubl cmc movslq cld rex.XB cwtl jp rex.WB add or mov pop mov cs rex.WR stos fsub stc negb jno rex.RX adc jp and flds (bad) roll (bad) push stc mov (bad) adc push ror (bad) jo adcl callq or adc lods xorb lret cmp pop loope mov cmp cltd adc mov int cmp lret pushfq xchg cmp jg jl rcll cmp and lods rcll out movabs (bad) xlat rcrl xchg rex.RX ds rex.W hlt sub (bad) repnz jmp lock lods jmpq andl sbb push movsl scas in test repz (bad) pop sub (bad) mov out mov (bad) ffree rex.WB cmc rex.XB jrcxz faddp or negl mov shrl gs insb (bad) jno sub outsl rex.RXB lret rex.RB ds sbb nop int retq repnz jrcxz add out (bad) add pop scas rex.WRB sahf insb jb loope fidivr in roll sbb jge sbb mov cmpsb es jbe sub cli fmul mov sbb push jmpq jg mov divl retq lods cmp (bad) (bad) rex.W sahf cld sbb (bad) xchg lret rex.WR sub add rex.WX lret xchg lock pop xchg adc test (bad) sbb and cmc out and rolb pushfq mov movabs sahf or retq fwait (bad) pavgb divb mov movslq rex.WR sbb stc cmp rex.WX pushfq jle in xchg jmp add rex.WXB (bad) add test enterq (bad) movabs add lret xor (bad) (bad) adc (bad) (bad) xor and cltd (bad) out cmpsl sbb pop imul sub lret fistl (bad) popfq clc callq (bad) iret rex.WB outsl mov sbb xor mov test add test rolb roll xlat (bad) cmp (bad) leaveq mov push mov in int sub (bad) icebp lock (bad) (bad) adc sub cmpsl rex.WRX mov sti sar cs ror js pushq fwait add out loop (bad) jbe or (bad) outsl xor roll cli (bad) fdivl cmp jge or xchg and or jb and rex.XB mov popq shrl xor (bad) and insb cmpsl mov mov cltd loope mov flds sub movsb rex.RX iret (bad) (bad) xor faddl (bad) scas cwtl add add rex.W xchg scas add sbb ss psrlq lods (bad) mov adc rex.RX nop movsb mov sti xor cmp shr or mov mov and (bad) add out scas fsubs jbe (bad) jns fwait movabs mov xchg pop pop push jge jle int shll mov sbbb ss rex.WRB in rolb xchg sbb stc cmp sbb pop lods jp or adc xchg jno rex.RB repnz rex.RX jne sub xchg decl nop rex.WRXB jl xor pop stc jnp ja jb sarl (bad) add cld jp rcr mov xor mov sbb add (bad) jnp (bad) fwait sub lcall jne and sub (bad) fwait mov and lock sub ficompl (bad) sahf je movabs sbb shll in (bad) stos ffree imul movsb (bad) addr32 (bad) int movslq rex.RX add (bad) adcl shrl or iret callq test mov (bad) push in (bad) in (bad) mov mov rex rcrl mov out int3 int movabs out (bad) pop or int3 xor movabs jne fistl (bad) test roll shr sahf sbb xchg fs sarb mov lret and ficom (bad) rex.R out shrl lods push std sub sub icebp rex.B jb adc iret out rex.B rex.RB push mov mov rcl (bad) xchg sub ror pop cli rex.W incb rol data16 addr32 ja or add jg (bad) icebp andb jne repnz lods ss pop (bad) sub mov (bad) push push (bad) je scas mov add jae push mov mov shr jmpq add decb add xorl hlt xchg clc cltd (bad) jl or enterq sbb shlb push stos test fisubrl (bad) outsb (bad) movsl (bad) (bad) adc (bad) jmpq add cmp int (bad) sti in and jle adc frstor ds rcr sub clc imul (bad) movabs (bad) xor mov sbb jmp (bad) outsl push sub fsubrp outsb push sub fidivr loopne insb sbb (bad) cmp mov rex.X (bad) pop xchg mov xchg enterq add shl rex.WR sbb mov jo mov lods sub xchg pop retq out sub jle repz cmp repnz test xor stos and fxch lods (bad) or rex.B mov sarl (bad) fdivs sub mov outsb or test lahf sub mov lcall retq push mov cmp rex.XB mov sub repnz enterq push (bad) sbb sbb push cmp enterq js cwtl (bad) movabs lea push fadds add imul fld rex.WRB (bad) rex.WRX add mov jrcxz adc rex.WRX and and (bad) movslq xchg fdivrs and out sti insb enterq mov lret push sub mov adc xlat cmp subl (bad) (bad) leaveq imul or sbb xchg mov adc out pop xchg add sarl sbb cmpsl (bad) movabs stos rcll (bad) fimul pushfq add movabs add sub mov (bad) mov cmp rex.B cmp in mov sti cmp mov jno lret pushq sbb mov (bad) xor (bad) (bad) mov repz jg rcrb (bad) out pop jge xchg xchg push out test fisttp mov addr32 fadds std retq pushq rcrl xor push cmc in sahf xor push shr sub or mov shlb sbbb (bad) loope cmp fwait jmp rex.WRX loop rcl nop std xchg repnz mov and rex.RX (bad) (bad) shrl (bad) cmpsb xchg xchg enterq sbb (bad) jno test xor gs sub or ror (bad) movabs in push or or and stc (bad) pop (bad) cmc leaveq movb lret jmpq or sti pop adc in mov jb lods movabs lret (bad) sarl scas mov (bad) push xor ds (bad) scas test sub or (bad) sub loop,pn xor sbb ficom mov outsl ds xchg rorl mov cltd rcrb adc (bad) fucom imul xchg clc adc stc (bad) xor rorl pop xchg in repnz decb (bad) xchg movabs fildll retq loope cld push mov enterq rex.RB (bad) add jno lods rex.W test lret mov pop data16 xchg in fsub addq cli (bad) bswap pushfq ja,pt or (bad) push add xor or jmp pop jle sbb rex.WRB fwait and xor xor xchg (bad) outsb out enterq or pop leaveq test lret insb lret movsb pushq (bad) rol or (bad) cmp jmpq (bad) or sbb (bad) xor (bad) xchg xchg sahf sbb rex.B sbb movnti test (bad) (bad) shrl test and xchg mov bsr data16 mov and rex.W sarl jne add add in cmp test (bad) fiaddl add fldl xchg (bad) std sar imul int3 push sarb pop stc and loop xchg stc shll push lods cmp (bad) lods pushfq mov and cmp mov (bad) nop push sarl cmp orl xor ffree and or sub rex.RXB sub sub loopne adc (bad) jg out cli fdivrs andl ja retq movsb mov data16 fild rex.WXB stc scas (bad) lret mov jae repz xchg rex.WB ds enterq roll out cmp xor sub xor lods lods and (bad) adc vpunpcklbw movabs fmul mov rex.RB rex (bad) callq test pop rex.WRB movabs pushq mov sub lahf imul test ja add jg sub rex.WR repz and out mov pop or (bad) ja add lret lahf movabs imul xor pop push ror mov (bad) xlat (bad) fildl cmpsb data16 mov (bad) mov scas rex.RXB addr32 test xchg mov sub sahf xchg hlt pop xadd nop test iret push in xchg jbe or rex rcll (bad) cmc (bad) jo cmp cld xor out push orb pop mov push mov and jae insb rex.RXB adc gs fnsave retq push (bad) rex fs add idivb xchg adc outsl sbb rol movabs (bad) rex.WRX and mov mov jno mov (bad) add (bad) mov add and je or pop pushq in movabs (bad) mov xor mov adc add rex.X repz pushfq rex.WB xor (bad) addr32 repnz loop and ficompl xchg lret stos lret add or xchg outsl (bad) xchg retq in mov jp lods imul mov int3 jmpq xor rex.WRX imul rex.XB jns (bad) js movabs mov fsubrl or rex.RXB add and add sbb rex.WRB jno xor sub (bad) test cmc clc push (bad) rex.WR repnz rex.RXB sti add add out mov test (bad) cmp xchg xor and lret pop (bad) fidiv addl movabs add loope fistpll mov sbb jmpq movabs mov cmpsb (bad) fcoml jp outsl mov (bad) orl leaveq pushq xchg sahf int movsl sbbb (bad) decl and and sub sti jle je loopne rcrw add mov lock rcl ja lahf clc (bad) xor insl rex.RX or mov lods (bad) (bad) roll je sub sbbl rex.RB ror data16 shr js push jne rcll add loope lret cmpsl and sbb jbe jb rex.RX adc lea jbe sbb jge in (bad) mov xchg cmp jle callq (bad) stos imul roll shr rex.RX rol rclb jnp movabs add mov add test pop fldcw rex.B sub rex.RX (bad) xorb mov and stc jrcxz std and jmp (bad) addr32 fidivrl (bad) jp jae out orl pop addr32 jo rex.WRX (bad) (bad) rcll rex.WR repnz add retq (bad) jne add rex addr32 push sarl jrcxz sarl push sarl add jmp sbb sub add retq or mov or sub nop mov adc xchg mov (bad) enterq (bad) sti cli rolb (bad) cmc (bad) push add mov (bad) out push enterq insb hlt int imul xchg (bad) (bad) push (bad) repz xchg mov xchg cmp stos lret pop lock and and jle add jmp fstl (bad) ja (bad) cmpsb (bad) sbb lods orl shrl rcrb sarl rorl xlat loope mov (bad) mov cwtl mov (bad) (bad) rolb mov sub mov push retq (bad) and repz subl or push mov (bad) (bad) rcrl rorl cmp repnz lret and scas jmpq sar shll or jnp add push je add in repnz flds (bad) mov ja test loope xchg loop pop mov rcll xchg out sti (bad) mov jno jmpq iret shll xchg mov jo sub cmc jbe pop sub jmpq cmp (bad) push and jmp (bad) (bad) sub test scas xchg push mov pop and pop loope and (bad) test callq adc (bad) adc jmpq jnp or rex.B (bad) cmc movabs xor sub scas lret (bad) out xor (bad) push insl repz movabs jnp add movabs add icebp (bad) movsl sub es adc (bad) push mov movsl test int3 sub movsl jp fnstenv rex.XB in sbb mov jp sub in (bad) add add cmp (bad) push jnp fsts enterq ja (bad) sub jmp movsb andb test rex.X out ficoml sbb jge movslq sbb xchg (bad) (bad) roll std (bad) fwait push rex.B (bad) jnp fildll rcll mov outsl testl fld (bad) iret imul nop out jmpq shll and popfq rol jp (bad) mov mov jo loop xor sarl fs adc (bad) retq mov test (bad) (bad) jbe cld push shrl fistl sbb xchg xchg in sbbl enterq gs retq (bad) xchg movsb scas xchg test repz cltd lods rcrl loopne leaveq jrcxz push mov mov je lods rex.RX xchg and xlat mov rex.XB movabs test rclb or hlt or xchg cld cmp mov sbb sub fidivl retq pushq adc rex.WR lods sub or movsl rex.R pop cmp xor push or (bad) xor (bad) (bad) insb or jae jno mov and xchg add (bad) je sbb std retq and adc (bad) sbb and neg xlat (bad) jmpq push movabs (bad) cmpsl fisubrl enterq mov pop loope fsub rex.WX add loope int3 lock (bad) in lea or (bad) add pop rex.WX cld mov (bad) mov (bad) (bad) test cmc pop mov or xchg mull mov ja jg adc and xchg add push add pop ja jb (bad) rex addr32 (bad) sbb pop (bad) imul sbb pushfq scas mov and cmp rex.WX or push adc int3 xchg pushq mov scas ror (bad) lahf sbb icebp shr xchg (bad) ja (bad) (bad) stos cwtl repnz sbb movabs jge movslq mov xor lret cmpb movslq rex divb insb pop sarl (bad) stc rex.RB jmp add rex.RX (bad) (bad) (bad) ficompl movsl add xchg xchg je rorl (bad) stc (bad) lods sbb ja imul and outsb rex.WXB enterq jle cmp mov rol sub rex.WXB jns (bad) mov add retq insl fistl movslq rex.WX fwait mov outsb jmpq stc jae fmul (bad) mov mov rex.W rex.WX cltd (bad) (bad) push callq xor lret (bad) int3 mov (bad) cli mov lahf scas mov rorl nop rcrl adc movslq stc jno sub sub (bad) cwtl (bad) xchg or pop push xor movslq sub adc rex.XB lea fs iret pop sti xchg test test roll adc popfq insl test shll add rex.W rex.XB xchg sbb add mov jmp rorl movsl (bad) hlt (bad) fadd jp jb repz (bad) sub rorl (bad) outsb cmp rex.R roll rorb mov hlt shrl (bad) scas popq sahf cwtl insl rcll push insb rcll rdtsc xchg (bad) lock rex.WR rex.B int int3 cltd rcll (bad) xor shrb sahf in (bad) xchg test test repz (bad) (bad) pop shrl or cli mov rex.W icebp pop rex.X retq (bad) xor adc sti int jne popfq retq loope (bad) push jle rex.B (bad) scas sbb (bad) addr32 pop clc loop add pop sahf (bad) test pushq jl (bad) mov rex.WRXB adc push icebp roll nop (bad) popfq scas cli rcrl pop xor (bad) jbe cmp std push mov and fxch (bad) std mov jle mov cli (bad) adc jno rex.WRX jno shll pop mov js (bad) (bad) (bad) jrcxz push xchg jp outsb sti movabs (bad) hlt cld (bad) xchg int adc scas add (bad) (bad) push enterq out cwtl add lret sub jmpq adc loope jb (bad) repz (bad) negb rex.WRXB (bad) and and stos repnz ss cmp outsl or jno scas stc xchg xchg xchg xchg out (bad) mov mov loope mov retq xor and push add rol (bad) adc (bad) or test mov clc test shrl imul ja adc gs xchg test and adc stos (bad) lret movsb (bad) fstpt add jo imul rex.X ds rorl or cltd mov mov test retq and fs shrb push retq cmpsl (bad) and cmp rex.R lcall shrl adc cmp es rex.WB cltd insb in cs xchg repz lea (bad) xor rol cwtl mov (bad) clc callq jnp movabs cltd movsl testb add scas rcr (bad) and (bad) mov mov movsb rex.B cltd jmp (bad) fwait xor (bad) jbe jnp or loope add (bad) xor rcll sub movabs and push sub xor and adc or andq cltd fnop sarl and rcr push data16 ja vpor and out xor (bad) mov lret sahf (bad) and ds and pop (bad) (bad) retq add pop lods int3 xor (bad) adc fld mov jge push adc movslq movsb cmc test (bad) enterq pop in jl rex.X test test (bad) rex.WRB retq stos xchg (bad) fcomip scas cmp (bad) sub hlt adc sbb (bad) rex.WXB cmpsb pop add cmpsb cli mov (bad) sub ds or mov addb and jnp (bad) (bad) (bad) (bad) lret sub callq dec pop fisub cmpb jnp stc std xor mov (bad) lahf mov xor (bad) test jp rex.R stos add push sti lret (bad) cmc sbb stos pop mov shll or and scas (bad) mov rex.WXB xchg or (bad) stos push or jle pop shll fmuls adc mov rex.WR loop (bad) mov in cmp out movabs rex.WRX repz xor cmp adc cmpl vmovaps mov lods sahf sarl (bad) add mov cmp rex.X rol fnstcw fsubs (bad) and loope and (bad) pushfq (bad) or rol adc or fcomip fiaddl xor out rex.B mov rex.WRXB xchg add adc (bad) movabs push jns leaveq adc jg add and negb push scas cmp rcl rex.WB retq (bad) pushq xchg loop cwtl fdivs xor adc jl cmp shrl retq mov add enterq sarl movabs test roll mov shlb rcll add jrcxz movslq mov int and and jb (bad) insb out (bad) sub pushfq (bad) loop mov cld scas fnstenv (bad) xchg lods fldt rex.WB lret fs gs fistl mov orl loopne shll (bad) cmp jrcxz popfq (bad) (bad) rcrl retq (bad) cmpsb fwait (bad) adc jmpq loop outsl cmc jmpq in mov callq xchg enterq jp bnd sub add add sbb (bad) (bad) xchg cmpsl repz adc fistpl stc adc pop rex.R out (bad) sbb cmp (bad) (bad) fcmovnbe jmpq xchg rex.WB lock xlat add (bad) rex.RXB sarl rex.W jb pop subl cltd insl (bad) scas and imul mov push movabs jrcxz callq loopne shl push (bad) (bad) movabs (bad) ss mull (bad) sbb fmul mov jbe rex.X xchg jmpq test mov xorb mov xchg sbb xlat jg (bad) rex.R adc push or fs sub (bad) addr32 mov fcos jo mov sbb pushfq mov rorl movsl divl push adc adc (bad) rex.RXB sbb rex.WB sarl or (bad) out sub rcrl (bad) rex.WR jmpq push test sub std cmp cli add (bad) mov xchg xor add pushfq jno add roll sbb (bad) cld in jl xchg (bad) out pop (bad) cmc jnp sbb lock pop shlb rex.WB out (bad) mov cwtl loop rex.WRX mov mov mov lock pop shrl (bad) pop mov mov push sub cmpsl and enterq lods add cs testb lahf mov mov xchg sbb test cmp sbb rex.XB and in insb rorl adc lock loope (bad) movslq (bad) js repnz es jl rcrl add imul fcomip jmp rex.R push int test (bad) rex.B or jmp leaveq jno (bad) sarb loope test mov jl repz jb mov rex.B rex.X mov or popfq mov (bad) sbb mov movabs mov repnz (bad) cs fbstp pop (bad) ror nop pop jae xor jg cmpsb (bad) push (bad) jno (bad) cmp or shrl sub or movabs hlt add cld mov rcrl sbb in (bad) (bad) cmp (bad) push add sub rex.R sar loop fsubs pushq rcrb movsl rorl cmpb sbb roll retq (bad) (bad) (bad) (bad) lahf in rex.R rex.WX jmp push add add jbe mov sarl xlat sysexit jnp std ror cwtl sbb cmc mov add rex.WRXB mov and rorl ss sbb (bad) rorl data16 movabs xchg addr32 stos sbb add incb xchg add push movsb or cmp adc cwtl rcrl xchg push sbbl cmpl xchg out repz cmc loope lock cmp sbb add cmp nop sub sub (bad) jae jnp icebp mov test sbb loope cwtl movabs sti sub rcrl rex.RX cs (bad) je add rorl mov fdivrp out cli add rcll rex.WR retq stos xchg or loopne and (bad) lret pop rex.B mov test (bad) out andb (bad) push push ds sar movabs fistpl xchg push in in cld and adc mov (bad) mov shrl in rex.XB fucom repz test (bad) jmp cmpsb xchg shrl cmp or sahf jl outsl loopne rex.R loopne test rex rex.RXB retq data16 adc (bad) in push add add (bad) scas or rex.XB int rex.WRX jle nop rex.WXB rex.B push lea test (bad) (bad) and movabs jp pop sub add pop sub and jne mov pop push (bad) and rex.R addr32 (bad) pop test (bad) retq mov adc out (bad) or adc (bad) jp int xchg pushfq pop cltd add jae cli (bad) adc cmp shll in lahf movsl int ja mov sahf jp xchg xorb pushfq nop and adc (bad) hlt rex.RB rex.W mov xor push test insl fisub jg xchg gs mov iret cmp pop cld (bad) movabs adc xchg movabs rex.WX repz bnd loope in scas (bad) xchg stc sbb loopne gs cmp es or fistl sub gs out adc cmc rorl fcoms mov in rcll shrl mov out cmp (bad) (bad) (bad) sbb pop xor rex.XB testl (bad) rcrl push movsb or pop (bad) movabs adc adc (bad) adc xor (bad) cwtl or loopne fsts push jbe xor rex.X mov mov in subl rex.WRX (bad) rcl jl sbb jp (bad) mov iret fsubs shrl and imul mov sub (bad) int xchg xchg std andb or popfq (bad) add add loopne rorl pop jrcxz movslq rorl push (bad) jae pop (bad) (bad) (bad) icebp or adc ja gs popfq jb adc mov mov (bad) movabs pop sarl cwtl in xchg iret and sbb rex.X retq cs insl pop mov xor push (bad) icebp loope fiadd lea mov fdivrs pop movabs jmpq mov rex.XB leaveq retq sbb rorl jo clc (bad) xchg pushq test (bad) loopne (bad) cmp (bad) add sbb (bad) fldenv rex.RXB test (bad) rex.WRXB test cmp sar test adc (bad) mov nop pop mov outsl lret xor repnz (bad) and (bad) adc lret rex.RXB add movabs pop lret negl mov rex.WX cmp shll jo and in pop pop push xchg mov mov jo rex.WB popfq (bad) scas shrb xchg or add mov sahf mov pushq (bad) enterq xchg movabs cmp fcoms in retq cmc shll (bad) imul add mov mov insb rcrl jno (bad) mov (bad) mov scas mov cmp add mov and push jmpq mov rcrl rex.RX gs mov rcll add jo xchg rolb (bad) fdivrl pop lret lcall jns cmp fs int test (bad) mov jmpq and movabs lods rex.WRXB rex.B pop fiaddl xchg idiv adc add idiv and add sahf (bad) push rorl movsb mov (bad) (bad) mov (bad) mov (bad) lock jb lock sbbb or je (bad) imul cltd cmp rex.B testb push (bad) sahf sarl sub movabs movabs (bad) vpaddsb xchg jl cwtl sub je mov (bad) xchg idivl imul add rorb movabs jmp (bad) shrb add add lret push pop jno test (bad) mov retq repz (bad) outsb repnz xor movsb mov rex.WRX idiv push ficom jrcxz faddl push gs (bad) mov cmp enterq loope (bad) (bad) icebp rex.RX push (bad) int3 iret add mov jmp hlt adc divb sub push rex.WRX repnz push and repnz js retq mov enterq add in xor lret adc sbb add outsl sbb lods pop shl lock cltd (bad) push jb rex.XB or xchg cmpsl mov out fwait sbb jne (bad) jb rex.WX mov rex.B stos (bad) pushq repnz rcrl jbe movsl rclb rex.WXB sub mov shl sbb repnz out (bad) lods popfq push xchg rcr cs lock cmp fdivr std lahf cmp xor sar test (bad) (bad) adc sub loope movlps push in (bad) jno rex.WX (bad) (bad) and lret callq rex.X (bad) mov jbe fstl out fidivr jrcxz rex.RX sub fsubrs rex.WXB mov cmpsb push jg xchg std mov jmpq movabs mov (bad) (bad) sbb lret xor rex.B (bad) in add mov fildll sbb ficoml jo bnd ja sub jb and add push fmul shr rolb movabs (bad) push stos in push lahf adc roll mov iret pop (bad) cmp movabs mov scas mov ja adc movabs movslq insb pop jge shll and imul iret sbb jns or (bad) rex.B addr32 rex.XB rex.WR fwait add (bad) sbb (bad) iret data16 fmuls (bad) fisub (bad) (bad) cwtl loopne add (bad) and (bad) fldt loop rex.X loop int fildl ds (bad) sbb rex.RX rex.W es fdivrs (bad) in shr cmp rcl sbb fwait mov movabs (bad) retq (bad) rcrl fldcw rex.WRB lret sub hlt add cld mov cmp shrl cwtl jmpq (bad) addr32 xchg sub mov sub and rex.RXB retq std leaveq pop mov (bad) adc sub mov jge and rex.XB icebp (bad) sub rcll jmpq sbb mov sbb cli jmpq mov (bad) fiaddl and (bad) mov add movabs loop add movsb iret cmp adc (bad) scas add and enterq push (bad) hlt xchg cld pushq rcrl adcb xchg icebp mov fildl push rex.WX cmp mov movabs test adc mov ds or fldcw lret int icebp rex.WRX sbb jno (bad) sar lret lods (bad) xchg (bad) push ror pushq callq xor stos push and cmp add xor add movslq sahf push jo (bad) and repnz fnstcw (bad) (bad) rex.R rex.RX push mov rcrl cli rex.X orb (bad) xor jp rex.WB or push (bad) add stos rex.XB mov (bad) popfq push pop callq rcll (bad) xor rol out movabs jl enterq rex.RXB xchg push test negl sub lret xchg mov and stc jg mov movabs push in stc xchg push (bad) pushq jle rex.WRX (bad) jge (bad) (bad) (bad) xor push callq xchg out (bad) rolb sbb rex.WR sub (bad) lods (bad) (bad) shlb loope stos sbb mov adc test iret cwtl cli adc add sbb (bad) rex movabs fnstcw sub cmp xor mov jmpq xor push sbb (bad) rex.WRX sub xlat iret imul insb xor jp mov pop push pushq push gs fmul je mov stc mov rex.WRXB test jne xchg pop add sbb fldl jne loope in lret jb adc sarl scas (bad) or pop jne adc popfq or ja (bad) mov jge iret int3 sub pop cmp mov pushq add lahf leaveq fcmovnb mov mov xchg push cltd (bad) sbb mov out rex.RB out (bad) add cmpsb (bad) es mov mov rex.WX lret rex (bad) rex.WR (bad) mov orl fistp mov sbb sahf jae xchg cs lock or out lods sbb int3 jne std (bad) lock jg (bad) jge stc enterq loope lret xchg std nop add int3 sub testb cmp test lahf add movslq pop mov mov fidivl mov xchg (bad) jnp jmp mov retq cmp enterq and ss rex.WR icebp push clc cld rex.WRB jrcxz mov jb repz fisttp adc lea callq jnp callq rex.WRX rex xor icebp scas outsl mov cmp rex.X (bad) mov rex.WR loopne sub int sarb or mulb movsl (bad) add jae imul sbb int3 mov loopne sbb movslq fadds insl mov sbb jne mov fldl scas sbb fstp (bad) (bad) movabs rex.WRXB xor stc xor (bad) icebp (bad) pop jns xchg (bad) mov out push fsubl rex rex.WRB test sub and xlat repz jrcxz pop sbb rex.W rex.WXB movabs (bad) popfq movabs xor (bad) adc rex.RX (bad) repz xor sar xor fs (bad) push xor test sub pop push mov rex.WX add add ss adc cli rolb out push mov cli sbb jmp loope xor pop insb out movsl sbb roll adc lea rex add movabs sbb mov mov ror mov loopne xchg sub jg cmp or rcll js shrl add (bad) pop sbb idivl movsl fs pop rol mov ja int3 stos jrcxz (bad) (bad) (bad) std rex.X lock pop jb in gs (bad) lods pextrw mov add lret (bad) adc leaveq loopne ds fstpt mov movabs rex.WRB rex.WX cs repnz cltd mov idivb mov mov adc sahf shll in (bad) (bad) cmc icebp test loope shr jl (bad) mov andl mov sbb repnz xorl icebp loope repnz (bad) shr sub nop mov addl retq cmc adc push addl gs sub repnz imul sbb addl jno push sbb xchg js repnz int3 fcompp fdivs movabs rex.X es rex.W sbb out rolb xchg mov (bad) retq icebp and divb add rex.WB imul lcall (bad) callq imul retq stc pop mov adc and rex.XB push iret mov fnstcw rex.W rex.WXB vandps (bad) in adc xchg and xchg mov or std rex.WRB movsb jnp rex.WR adc fnop test outsb cmp clc movb sub test cld rex.B stos icebp rex.WR lret not outsb sub sub sub icebp (bad) rex.RXB mov (bad) pushfq movabs rex.B rex.WR adc ljmp rex.RX fdiv push loope in enterq xor pop fmull jbe (bad) out or pushq rex.RB (bad) decl mov (bad) rex.WXB es rex.WXB lock or push and callq sub mov test retq ds int3 cmp imul push cmc pop and faddl ss rol jge (bad) insb adc shl movabs out xchg jb mov sarl loope rex.XB loop push scas add rcll (bad) rex.WB (bad) push cmp pop cmpsl rorl adc jnp mov xchg sub push loopne sub (bad) pop (bad) sub (bad) fwait loop (bad) jae retq pop sarl repnz scas pop popfq mov fistpll sub fwait es imul (bad) pop xchg xchg cmpsl rex.B mov lret decb pop shrl in mov push sbb retq int3 loop iret cmp sbb js xor int mov mov jns adc (bad) (bad) push adc pop fadd mov xor movabs retq stos mov mov xor shll fistl xchg sub and or outsb xor test icebp jno sbb (bad) out mov rorl loopne cmpsb rolb fimull mov (bad) (bad) or xchg lahf adc repnz jp (bad) callq or sub (bad) rex.RXB mov pop adc mov adc int3 push rex.X ja mov (bad) hlt jp std leaveq and sbb adc xchg movabs popfq mov rex.RXB rcrl adc (bad) fdivrl mov pop jo push fstl mov push rex.W add mov rex.WB popfq movabs sbb sub rcrl ss notl (bad) sbb cmp mov and rcr mov shll faddl add out ja mov iret rcll (bad) push (bad) mulb adc rcrl (bad) mov mov adc rcr sbb in movsb adc rex.W and sbb lea (bad) out je rex.WR js sub outsl in outsl (bad) mov (bad) in sub rex.WXB fwait clc (bad) (bad) fcmovnb rex.XB rex.WR movabs sahf add sti rex.WRB out idivl push xor add xorb rex.WRX rex.B rex.WXB sti (bad) lahf out fwait mov popfq ds rex.WRX rex fidivrl mov sub (bad) cmc xchg cli add xor jae loope int mov jns outsb pushq ffree fcmovu xor je or shrl pop push scas leaveq jbe mov shr mov rex.XB shrl lods (bad) hlt test xchg mov and (bad) (bad) clc sub jns add f2xm1 pushfq (bad) (bad) mov int3 shll idivl xchg (bad) (bad) mov (bad) insb sar xorl (bad) push data16 rex.WX cltd sar out or xor sub push insb push fsubr int3 icebp xchg lods movl mov rex.WRX js or loope mov ficoml int (bad) mov movslq enterq rorl cmp xchg add mov roll rex.R adc add rex.WB rex.WRXB (bad) movsl shrl (bad) test cmpsb loopne or jp (bad) movabs adc rex.RB add mov (bad) stos adcb cwtl pavgw cmp shr rex.WXB (bad) cli pop pushfq mulb (bad) iret out out rcr (bad) adc (bad) iret in add retq in jno rex.X sbb (bad) jns and pop adc cwtl test jne xchg shrl ds loopne mov lahf mov xchg xchg adc xor lahf fwait shll fadds cwtl xor stos scas jns rcrl movabs xchg lret xor (bad) jnp sahf xor pop repz (bad) scas (bad) cmp (bad) mov lods lods fisubl rorl fucomip or ja repz callq push shr cmp outsb (bad) stos and add sahf lock outsb mov repz (bad) xor rolb pop in outsl addr32 cmpsl in cmp (bad) lret add icebp rex.RX rex.RX rex.RXB rex.WRB mov sbb movabs (bad) sbb shll (bad) (bad) out add xor (bad) mov ja (bad) pop outsb (bad) cmc add movabs sarl (bad) add (bad) movsb add cltd (bad) fld xchg cwtl (bad) pop mov (bad) je (bad) repz lret movabs mov test sahf (bad) xchg sarl out movslq callq sub cltd (bad) rol (bad) sub js cmp cmp out (bad) pop shll cld pop (bad) or (bad) fwait xchg (bad) repnz mov sbb jl je icebp pop mov and in xchg mov iret sbb mov std pushfq xchg ss cmp in sbb rex.WRB (bad) test adc cmp fwait addr32 test roll sbbl outsl (bad) mov mov (bad) xor rex.RX pop xchg popfq adc or pushfq shr xchg (bad) xchg sahf sub pushq outsb jp rex.RXB mov mov rorl pop sbb pop mov push (bad) sub xor jrcxz fcmovnb jns movabs push xchg movslq icebp (bad) cmp pop test rex.WRX ror cwtl push push nop (bad) xor rex.RB mov and (bad) xchg rcrl xchg int3 sub mov rex.B or ss cmc pop jb pop cmp (bad) (bad) cli adc movabs push fmul sub xor lret and sbb ss test pushfq sbb fild rex.W loope loopne scas sub shrb mov pop fisttp push addr32 jmpq push int pop fs int inc cmpl repz jbe add (bad) loopne adc std movsl mov rex.B lods or cmp sub push loop negl rex.WB rex.RB movabs repz pop test rex.XB add shll lret rex.WXB callq cmp rex.RB in sub sarl fmulp retq repnz adc xchg (bad) (bad) jne test xor pop sarb std nop adc (bad) mov cmp adc push movslq out shr sub int adc repnz test loopne movslq int or (bad) add pop xchg add fmuls pop loope jae lret sahf or pushq mov (bad) shr push mov mul (bad) roll and test cmpb mov (bad) mov jno std shrl leaveq movsb hlt je mov xchg mov push or xchg test stos test (bad) pushq notl (bad) ja loop mov xor mov (bad) push (bad) int3 push mov cld repnz lahf je and push rcl cmp mov imul rex.R outsb retq cwtl shr xor rcrl hlt in (bad) jle (bad) je push xchg rcrl fcom add icebp (bad) outsb xorb (bad) and push test cltd rcrb rex.XB (bad) fcom rex.WX out testl repz mov xchg shl mov dec rex.RX cs ja rex.WB xchg and iret mov jge (bad) add lahf sbb (bad) mov roll loope push push (bad) fwait cltd (bad) (bad) sbb xchg pop rex.X rcll or out sub cmp xchg sarl rex.B es cmp lock sub in adcl pop adc rex rex.WX push movabs test xchg cmp sarl push mov cmp rex loopne fildll (bad) jae xchg (bad) xchg rolb add mov (bad) xchg rex.WXB sub int rcrw xchg jb mov shll int3 cltd movabs movabs fxch add (bad) sbb test pop (bad) push (bad) cmp xchg int jp mov (bad) push sub push (bad) rex.WR (bad) (bad) shll adc rcrl rex.X imul (bad) add adc lahf sbb or (bad) xchg cli sub adc test imul push scas mov lret fadds pop movabs in (bad) (bad) rex.XB ds sub paddb sub test fbstp enterq rol outsb xchg (bad) pop (bad) out sbb ffreep (bad) (bad) cmp mov rex int3 (bad) add adc rex.X xchg (bad) outsb xor (bad) (bad) rex.WRX imul fs and (bad) pop rex.X in jne mov (bad) jb lods xor enterq rorb (bad) rex.WRX test loope jno (bad) in pop jl or fwait retq ror rex.R stos rcrl hlt add es mov (bad) sar jnp mov fwait retq pop enterq adc jno pop rorl or mull out scas ss (bad) jg rcll push sub popfq pushfq adc xchg shrl mov rorl jmp jns xchg push push mov iret (bad) lret or lods rex.RB adc jp sbb pop add int3 or rol xchg sahf (bad) cmp jne push rex.WXB jmp scas adc fcmovnb roll retq fs xchg sub ss movabs sbb out (bad) rex.WR xchg mov mov out imul sub rex.B mov cmp mov repnz addr32 xchg (bad) rcll (bad) rex.WX roll hlt xlat iret roll test and sbb std jae mov xchg push cmp rex.WX rorl fucomp lock add retq outsb xchg (bad) (bad) rcll cli int3 (bad) sbb push jno std ja rorl movabs and xchg adc cli pop outsl pushq in and rcr (bad) cmp sarl lret movabs addl (bad) sub popfq mov repnz cs adc stos rex.WX or rex.RB test lea roll lods xlat scas pop (bad) (bad) (bad) pop out (bad) leaveq rol imul mov out mov add int incl or or js (bad) callq in repz sar retq xchg nop (bad) loopne pop sub (bad) movabs (bad) mov (bad) jp icebp mov insb (bad) fmul (bad) cli fstpl addr32 popfq retq jno rex.WR sbb cmp (bad) (bad) (bad) xor rex.RXB rex.WRX sub and (bad) jmpq xor int3 cmpsb and mov (bad) addl pushq mov rol test addl xchg test xor pop rcll (bad) (bad) rex.RB sub rex.WRXB (bad) movabs jmpq sub es sub or jae mov scas movslq rex.RB xchg (bad) loope,pn fsubl mov and sbb rex.W in repnz rex.RX xchg in (bad) mov xor mov push add hlt clc lea add (bad) xchg in cmp push (bad) (bad) xor sti add (bad) jge pop cmp jl fiadd (bad) in cmp retq lret test rex.WRX sub jns sbb push adc iret enterq mov mov sub push fistp cmp xor add pop mov pop imul leaveq movsl jns add (bad) pop pop or movsl nop xchg ss (bad) rex.RX mov jrcxz and cmp mov xchg (bad) sti xor rex.WRXB leaveq icebp repz callq sbb movabs push notl movabs adc xor lahf rex.WB iret jno out mov rex.WRB (bad) mov mov jo rex.RXB (bad) cmpsl pop (bad) (bad) jmpq imul mov rex.WB (bad) mov xchg orl js int3 out (bad) (bad) idiv insl adc movsb jo (bad) int (bad) jno sbb rex.WRX (bad) (bad) xchg add rex.WX lods hlt push (bad) imul sti jge popfq or sbb retq sub adc xor (bad) or cmp test std enterq rcll repnz add mov jmpq mov cmpsb pop push pop mov add lret jbe sbb fstpt (bad) sub xor int (bad) sub clc rex.WRB sub (bad) pop cmp rex.W rex.X jp (bad) xchg outsl xor scas (bad) shrl rex.RX lods mov stos mov (bad) scas adcl jb loope push ja mov sub fnstsw outsb xchg retq pop (bad) and cli shlq xchg adcl icebp (bad) imul (bad) pop adc iret and movabs stc (bad) outsl mov mov clc sbb (bad) cmpsb xchg cmpsl and pushq or cs lret data16 cmc gs mov stos push mov sarb cwtl data16 cmp rcll insl rex.WRB sub (bad) (bad) xchg rex.X mov push rolb shll jg or mov xchg adc (bad) hlt jb add in (bad) mov js lret sbbl pop retq rex.B xor pop insl and (bad) (bad) movabs rex.WB repnz rex.RXB stc mov fs callq roll lret jo fdivl (bad) adc xchg movabs push cmp insl sbb stos adc gs (bad) mov (bad) movabs popfq (bad) jno (bad) sbb shrb adc rex.WR rex.RXB xlat (bad) rex.X pop (bad) lret sbb push xchg retq jo cmp mov test (bad) cmpsl rex.RB lods (bad) (bad) mov rex.WRB rex.XB callq sbb xchg pop (bad) std rex.WRB movabs sbb icebp and pop xchg rex.WRX rex.X pop jp mov mov (bad) sti (bad) enterq (bad) jmpq (bad) shrl sbb rex.RB sbb mov lock shll xor fcom enterq rex.RB rex.WRXB add (bad) (bad) add sub movsl enterq sbb jnp push vprotb pop (bad) stos lret fndisi(8087 cmp sub (bad) fnop jne and mov callq (bad) mov sub add sub push in pushq jnp add hlt jbe ja mov jns and clc xlat (bad) jp int3 rolb xor sub movabs xor mov adc and je fs or imul movsl or out lock xor fnsave (bad) sbb add clc mov mov (bad) fdivrl sbb cltd jbe xor int3 adc mov xchg push xor add pop enterq fcmovnb cmpl (bad) lock shl rex.WR rex.WR xchg pop mov sub jle stos icebp (bad) jrcxz sub (bad) (bad) add (bad) fldl rex.WR pushq (bad) sti hlt retq xor rex.R (bad) enterq fnstenv (bad) stos sub push movsb rex.RB lock je mov sbb shrb jp sbb mov add (bad) jp xchg clc push mov and and mov (bad) iret (bad) repz divb (bad) pushq mov add mov fsubrs rex.WR xor (bad) jo mov leaveq imul pop jno xchg shlb movabs sub gs adc (bad) sbb cmpsb ss xor xchg mov xchg (bad) movsb cmp sbb in (bad) xchg adc movabs test fs shrl mov in mov (bad) leaveq (bad) rex.WR pop fs (bad) or xor movsb fildll rex negb lahf fldcw (bad) pushq (bad) adc rex.WXB mov std lock shll pop adc pushq outsl and in fistpll mov fldenv test (bad) cmc (bad) fnstenv rex.WR rex.WR fcom loope (bad) idivb or test xor lret addl movsl xchg movsl xchg clc add (bad) (bad) jl ja (bad) rex.WR data16 adc rex.WRX mov jp rex.WX rex.WXB cld mov stc out pop rex.WX cmp rex.R fwait cwtl jp fs rex.X fldcw mov cmp (bad) rex.WX and je adc out lock sbb fs in mov (bad) push mov rclb notl rex.WR pop in rol (bad) movabs and mov rex.WRX (bad) mov cmp (bad) adc std out vmovhps (bad) jne test mov sub fldt rex.RB fnop cmp jae mov mov (bad) xchg movslq je or xchg or ss (bad) insl int3 (bad) cmc retq icebp sbb jno xorl test (bad) (bad) or pop mov rdmsr pop jo es add (bad) mov jrcxz xlat (bad) mov mov (bad) mov loope adcb in hlt adc mov rex.WR add (bad) mov (bad) cmp shrl sbb sar setb pop (bad) callq sarb mov imul fcoml popq sub rex.XB rex.RX (bad) insl cs mov loop rclb (bad) xchg cli or rex.W rex.RXB (bad) jl or roll in cmc addr32 (bad) (bad) cltd xchg outsl fs in movabs (bad) add jbe imul callq shll lahf add jle out (bad) lret cmp es (bad) rorl movslq insb add mov (bad) xchg stos cmc test (bad) mov add es adc jno xchg cld push sub add (bad) xor (bad) ss (bad) cmp or mov or loope rcrl pop sbb (bad) sub in or jg mov add rex cwtl mov int mov (bad) rex.WRB mov mov loopne xchg negl adc jmpq xor rex.RX (bad) rex.WB std jns jbe push cmp rex.B int retq shrd (bad) (bad) mov stos mov adc sub and in popfq pop and nop cwtl xor leaveq push js popfq add xchg in retq mov out pop mov adc lods pushfq xor push stos (bad) movslq rex.WRX cmp rex.XB cmp in insl sub jge (bad) mov (bad) xor movabs sbb mov (bad) test mov (bad) xchg mov retq clc push sub flds and cli rex.WRXB cltd imul (bad) push jg xchg fs shrl in es pop lods or mov fldcw sahf add shlb (bad) and rex.WR rex.RX rex.RXB add shrb sub (bad) sarl out int3 mov pop (bad) imul or push (bad) jae mov movsb or (bad) shrl fdivrl sarb stc adc xchg icebp int mov or (bad) sbb jle (bad) faddp xchg cmp lods mov (bad) (bad) adc movabs rex add xchg (bad) rex.X xor cmc (bad) and mov rex.WRB push and fnstenv mov (bad) lret (bad) pop (bad) xor (bad) repz shr leaveq sbb rcll clc pop xor push imul (bad) retq jo int3 mov cmpsl rex.B (bad) push (bad) cwtl fimul sub rex.WB shr (bad) push (bad) loop rex rex.B cltd shll xor lods (bad) xor int mov or jrcxz jmpq insb pop fxch pop addr32 rex.WR (bad) fwait push or xchg (bad) sbb add fimul movabs movabs sbb idiv and fmull rcl rex.W fwait (bad) mov stc add sti sbb sbb cmp enterq out sbb mov rex.WXB sub sub rex.B callq sahf xchg pop repnz pop in sub sub shll (bad) mov movabs jmp (bad) cmp sarl jg lea jmpq stos imul rex.WX pop sti lods data16 rcll sub (bad) lret js rex.RB rex.B rex.WRXB test pop or (bad) (bad) xor insb pushq xchg sbb shl pop cmp mov (bad) cmp retq movabs fiaddl rex.B sbb (bad) rorl rex.RXB rex.WB mov and cmp (bad) xor and jns xchg cmpsb xchg rorl andb (bad) add icebp insl jb ja lahf shrl jae rex.RX sbb rex.RX out push rorl jbe sar std jnp pushfq xchg rcll rex.WB cmp rol xchg (bad) repz iret pop cld push add or add pushfq (bad) std pop xor fimul jle or js (bad) cmp (bad) rex.WXB xchg mov loopne roll mov outsl or pushq stos xor mov je lock leaveq lret push adc fstpt add ffree mov int stos fld xchg movsl sub add sub mov add xor jg (bad) shl jno (bad) sub xchg mov int3 push sub sub add rex.RX lret pop xchg movabs pop push adc or enterq pop add in xchg mov add (bad) rex.RX rex.WXB mov es mull scas (bad) xor mov (bad) push mov movabs and je xorl sbb repz retq add push fistl cmpsl callq in addr32 int3 (bad) ss test data16 and enterq rex.W adc adc movabs rex.WXB out movslq (bad) cli (bad) (bad) (bad) mov mov repz mov rcrb (bad) std nop (bad) enterq jle mov out test hlt mov rex.XB jle jp jo sub cmp rex.WRX mov (bad) lret mov sbb mov ror faddp mov int cld cmp rex.WB (bad) sarb ja int outsb and flds (bad) rcll sbb out pop rcrl lret (bad) callq movhlps cmc push (bad) mov shrl adc mov jns enterq shrl adc cmpsb movslq rcrl ficom icebp out sub add pushq (bad) xchg jo or jbe imul popq retq sbb (bad) loop (bad) sub mov mov shll rex.RXB mov shll and rcrl callq cmpsb rex.B (bad) retq dec rcll movabs roll sbb cld xchg out jg xchg pop cmp dec test and (bad) xchg add (bad) shl mov mov add cmpsl lret movsb cld shlb andl roll sbb fnop (bad) enterq (bad) sbb (bad) movabs rcrl mov lods nop cmp outsl xchg (bad) idivb mov jne lods stos addl movabs mov (bad) sbb retq cltd out mov std or jns xchg and mov rex.WRXB sbb fildll cmp cmpsl xchg test push sub ror clc rex.WB rex.WRB fs fldt cmp stos cmc in fiaddl or sbb cmpsb lret out int3 cmp (bad) fwait mov subl and popfq sub pop (bad) xchg roll movsb iret lahf xchg add sti jl sub stos (bad) test movabs shrl hlt stc test xchg es rex.X or test jb lret pop repz (bad) scas rex.WXB rex.B push pushq test insl fwait loope adc callq add pop shufps sbb out jle push mov (bad) xor test sbb movsl sbb shrl decl (bad) int pop cwtl pop mov enterq (bad) imul (bad) mov enterq (bad) in adc sahf rcrl adc rex.WX jge jp (bad) out lea cltd (bad) rex.B pop pop xor (bad) scas pop cmp pop in (bad) rorb cli lret xchg mov cmp iret stc xchg fstpt cs lret adc add (bad) and shrl movabs lock loopne (bad) xchg roll cmp push mov pop cmp xchg (bad) sbb (bad) popfq hlt jne shrl rex.WXB sbb mov loop fsubrl sar adc xchg sbb (bad) test (bad) jae mov cmp (bad) (bad) adc sahf lock repz (bad) mov (bad) sarl jrcxz (bad) lret nop je movsb pushq xchg scas rex.B std pop rex.RX cmp lret mov (bad) out sarl jno cmpsl test rcl (bad) movabs mov rorl adc shrl (bad) and std (bad) orl cmp xor sub out pop xchg rex.WX jne lret (bad) mov xor (bad) (bad) lods xor int in ficoml pop (bad) loope (bad) callq jns rex.RB int3 fcomps mov (bad) jle mov rex loopne rex.XB loopne (bad) rex.WB out bts cmp jbe sbb decb adc xlat (bad) pop nop callq lock (bad) out lods sub rex.RX int pop lea stc popfq sti xchg cmpsl cs mov and movabs (bad) rex.W cs pop faddp rex.WRX rex.B xchg sar cli add loopne push imul mov xor jne add (bad) imul adc (bad) add xchg out (bad) retq cmp movabs icebp cmpb mov push push jle adcl (bad) rex.RB repz mov pushfq movabs mov repnz in cs ss loop callq retq adc test retq rex.RX rex.B sbb out sbb xor repnz cmp movabs int int pop out icebp shl pop movabs jge (bad) loopne jmpq sub ds (bad) cmpsl add or xchg movsl data16 loopne rex.W or rex.WXB fwait pushq jg (bad) shlb js (bad) (bad) outsl mov cmpsl jle jrcxz mov movslq mov cmp movsl rex.WB scas movabs and jo callq vcvtps2pd rex.X rex.WB pop jno mov mov (bad) xchg pop fidivr (bad) lock or xchg add lods xor jb rex movsl (bad) mov fnop (bad) (bad) (bad) div xor popfq cmp fs sbb add and jnp jmpq rex.XB or (bad) sub test icebp cmp movabs xchg (bad) cmc or imul in add mov shrb int3 pushq cmc (bad) enterq sbb and imul (bad) fstpl fwait (bad) sub mov stos (bad) push (bad) cmc rex.WR xchg cmp sahf (bad) out repz or cwtl out add loopne repz xor rex.RB cwtl mov mov add pop iret and movabs adc mov sub sbbb xchg leaveq div sub imul pop out add adc test roll nop fsubrl retq loopne clc sub loopne mov imul cmpsl movabs rex.XB mov mov rex.R add xor and xchg iret mov (bad) fldt fsin jnp adc xchg iret (bad) insb decl loope jg mov mov (bad) cmp out gs (bad) repz mov nop sbbl (bad) (bad) add iret pop stos mov test (bad) (bad) repnz mov cmp rorl push sub data16 jae (bad) rex retq test cwtl iret sar (bad) mov jrcxz repnz stos mov adc rex.W push mov (bad) iret rex.X or pop stos in adc shll sarl callq xchg or (bad) push movabs test fnstcw (bad) scas or xlat push rex.WRX jbe sbb rcll (bad) clc iret std cmp out cld rex.RB loopne rex.R mov movabs in mov frstor cli rex.R rex.WB cmp adc in rex.WX movl add sub xor and (bad) xor sbbl jb rex.RB sti (bad) (bad) iret rex.RX add cld (bad) sbb retq movabs sti or rex.RX or sbb addr32 mov pop push push loopne mov cmp ss (bad) jne adc mov (bad) repz rex.WRX out loop add (bad) push adc (bad) ja (bad) (bad) pop scas cmp jle xchg lret ljmp mov mov lret (bad) (bad) push movabs mov xchg (bad) fiadd sub (bad) in xor mov push mov jb movabs xchg fwait sbb imul fdivr (bad) (bad) and cmp addr32 (bad) rex.RB sbb jle jae rex.R jo xor mov (bad) jae (bad) repz jp or cmp xchg movabs lahf (bad) sub cmp cltd (bad) mov jnp clc mov (bad) pop (bad) out jno rcr push (bad) cmp fimull shl sub lret test movabs repnz cwtl rex.X push adc scas movb sub xor jle rorl vshufpd add mov add rex.W push sub push add rex add (bad) fisubl lret repnz adc gs add jno (bad) push push jb xchg jnp add fisubrl xor retq pop pushq shrl xor repnz in incb sub (bad) rcrl add jnp xor jle cli add mov cwtl or and leaveq mov sbb adc fstpt mov rex.RB mov enterq callq (bad) rex.RB cmpsb int3 pushfq mov pop retq jne shll testb rcrl cmp add jno imul movabs (bad) mov sahf lods (bad) sarl or xlat shlb (bad) roll (bad) es (bad) rcrl insb push cmp pop shrl je int3 (bad) adc mov enterq outsb and (bad) repnz and add enterq mov movsb scas retq fwait js cmc cwtl mov push rol mov lahf rclb retq mov pop mov nop movabs (bad) sub cmp push vpmulhw sub xchg sbb movl pop jl movsb sahf xchg jrcxz lahf cmc retq (bad) movabs push popfq sub xchg shll mov adc and movabs (bad) (bad) rcll mov cltd jle sarl mov mov add and fildll repnz jl or lahf fwait add movabs rcrl outsb movabs and rex.WRB xor loop shrb (bad) subl pushfq mov pop pop (bad) xor jae (bad) icebp jo lret movslq xor xor testb push fstps xchg adc (bad) rorl jnp int3 rex.WB rex.WX lods rex.WRXB orb and rclb ror rclb and rex.WRXB mov cmpsb mov jns movabs sub push cs lret (bad) gs xor or pushq retq insb xchg roll int3 rex.WX cwtl popfq rcrl rex.RX xor mov repz and sub movsl loop int3 xor and pop movsb ror (bad) fs xchg fmulp mov je mov roll or push mov pop (bad) jl pop loope xchg cmp ss jg stc ficomp adc mov (bad) sub cmp cmp push jp movabs mov or mov lret repz out icebp mov jl (bad) out mov (bad) (bad) outsb std xchg (bad) movslq rcr test out jne sbb rolb movabs add pop movabs xor loope shrb push (bad) rex.RB sarq (bad) or mov and and add mov mov push std adc loope movabs adc icebp xchg rol test (bad) (bad) (bad) pop fwait jle mov idivl movabs or (bad) xchg mov push sbb cmp (bad) pop loop cmovno (bad) mov cwtl (bad) jl test gs int3 rorl jge sub scas sbb pop and xchg movabs lret in sub push xor pop and mov rcll mov add adc fistpl movsb cmc fstps (bad) xor jle push (bad) stc xchg adc (bad) in addq jne cwtl fstpl and sub enterq outsb hlt int lahf jle (bad) repnz lret or roll pop mov xlat mov fidiv movsl sbb rex.B (bad) and pop pop mov negb lahf sbb (bad) out (bad) add mov cld gs stos test and outsb sbb pop sub (bad) clc cltd (bad) xchg jb lret sbb sbb lahf movabs (bad) mov (bad) sbb cli add add cmp test or in mov sbb jns xor shll loop rex.WR pushfq sbb (bad) add mov (bad) jae xor (bad) sahf pop lods mov rex movabs out imul rcll fstp xchg xchg sub jb push sub imul sahf sub pop pop cmpsb cmpl mov repz rcll iret test imul mov roll mov jno (bad) imul (bad) xchg (bad) divl rex.X int sub je std sarl (bad) stc out jae (bad) pushfq or rex.XB (bad) fldenv sub jrcxz xchg sahf jmpq iret lret imul (bad) stos xchg test (bad) xchg es jns (bad) rex.WRXB mov loope leaveq push test stos rex.RX mov and cmpsl ja xchg in icebp and outsl xchg roll (bad) cmpsl cmp rcrl fcoml xchg (bad) lahf pushfq out data16 (bad) xor movsb js ja jge xor rclb push fnstcw (bad) insb scas iret ss shlb (bad) xor sbb mov int xchg movabs ss mov (bad) sbb addr32 cwtl jmpq jae xor rcrl pop fwait mov lret out xlat lock (bad) (bad) in (bad) gs or imul cld (bad) mov fsubl and adc pop sub out xchg (bad) (bad) rex.WXB (bad) loop adc (bad) or callq jae mov rol movsl (bad) or fcmovb push cmpsl (bad) imul movabs xor sub push cmpsb iret jge and retq rorl mov movabs callq cmp movabs (bad) sub mov rex.WR xor pop loop cli pushfq add pop movabs mov in pop and xchg je (bad) (bad) add rol rex.WXB rex.XB (bad) mov sub cld pop (bad) (bad) push fnstsw (bad) xor (bad) xor repnz mov add cwtl mov cwtl ss pop rcl rorl scas in pop (bad) fsubrl add (bad) jle out fwait (bad) out mov xor (bad) std in jrcxz xchg rol mov sub rex.WRXB xor jbe jrcxz or (bad) rol outsl jns mov shr je,pt xchg sub lret pushq pop add shlb (bad) (bad) movabs ffree sub js pop ss rcll bnd loopne (bad) faddl (bad) add orb (bad) cmp mov (bad) lahf add mov movabs mov std jge mov sub jle (bad) mov xorl in negb (bad) cmp (bad) mov rex.R fnstsw xlat mov jo cli pop xor push push and subl jo rex.WRX mov popq push out mull jl or sahf lock andl pop (bad) mov sub add repz xor mov (bad) mov lahf mov movl fldl2e popq and rex.B test outsb lock es xor mov int3 rex.WR loopne,pt cld (bad) or (bad) imul cli movabs (bad) in (bad) and mov (bad) add fldcw jns ja (bad) rcll je ds nop lock adc scas movslq (bad) (bad) (bad) and fldenv mov callq mov add jae and subb sub add ss xor repz pop rol scas (bad) int add clc fcomps icebp enterq rex rcr lods adc rex.WRB js test mov xchg jl push rex.WR rex.WRB jp mov repz jo adc stc movsl rex.RX rex.WR xchg (bad) mov (bad) mov push (bad) scas sbb clc fbstp int3 shld test pushq rcrl and pop rex.WRB rex.RXB (bad) mov or (bad) lock or sbb rex.WX mov cmp in insl jl stos insl xchg mov movabs test pop mov shrb mov sub mov int push mov sbb (bad) rex.WRB repnz rex.W jo fsubrl fidivrl in xor pop xchg mov fmuls test add jae cwtl (bad) (bad) std sahf stc loop add sbb jne cmp rex.X rex.WRB andl add (bad) fnstcw loopne (bad) jbe roll jo rex.WR cmp loope sub stos jo rex.RX rex.X rex.WB adc pushq (bad) fisub (bad) rex xchg repnz jne callq sub (bad) (bad) ds or movsl callq mov mov lock scas jbe (bad) cmp mov out mov fst xor add mov rex.B (bad) mov cwtl (bad) pop sbb fimull mov rcrb popfq repnz sarl and rcll (bad) (bad) lret fmull cmp mov mov rex.WRX rex.RX jp lret (bad) minps (bad) int outsl repz jns (bad) fldenv stc fwait mov mov movslq add (bad) (bad) (bad) jmp nop jmpq mov and push mov rcll testb std mov rex.B scas xchg pop sbbl rcll hlt clc xor push cwtl mov xor (bad) movsb mov cmp push stos shll sbb (bad) sub lret jnp adc pushq sbb stos callq (bad) jo rex.WXB es mov outsb rex.WRXB data16 add movabs fstps jp out rex.WX jbe pop retq mov (bad) retq and rex.WRXB adc cmp pop rex.WX jg mov sub mov lods pop sbb iret and (bad) (bad) fsub cwtl or jge rex.WX and nop hlt adc (bad) (bad) adcb rex.WX jae rol cwtl imul rex.RX sarl xchg (bad) shll (bad) nop rol jg xchg (bad) es enterq lret add pushfq xchg mov rex.XB adc imul mov lret add jge sarl retq (bad) push rorl std cli sarl jp iret mov (bad) xchg xorl mov roll sbb rex.WRB pop data16 jne rex.RB push sar lock sub ror xchg (bad) xor fdivrl rex.XB (bad) movabs subb cmc push xor mov out sub (bad) lock pop rcrl pushq cmp movsb mov jge (bad) cltd push pop movabs jns mov rex.R mov adc loopne lret (bad) jle or mov (bad) mov xor xor ror push jle (bad) std js movslq adcb (bad) pop mov cmp rex.WRXB repz xor nop loop cmp and adc faddp adc or xchg jrcxz enterq and mov xchg or fnsave (bad) cmp retq fwait mov mov addr32 (bad) fcomps mov jno scas (bad) loope jnp push mov pushq lret stos cmp push jo mov or movsb (bad) movb sbb int out and cli rcr or sbb fcoms in je movabs loop out add fcmovnb or stos test cmp lea mov add rex.XB lock bnd in and pushq adc (bad) (bad) (bad) pop mov stc rcll rex.WRX lea add mov (bad) movabs jae adc cmc sti div pop add (bad) iret rex.R rex.WXB movsb mov xchg and (bad) lret nop and jge sar sbb jg rcrl jmpq and movabs mov (bad) movb xchg fcmovne (bad) (bad) pop loope add sti push loop cmp pushq jae test movslq (bad) rol (bad) outsl mov loop stos nop sub (bad) (bad) mov (bad) lock jl add gs xchg (bad) (bad) movabs movabs shl (bad) jno shr (bad) (bad) stos xchg and (bad) int mov fstl (bad) jo sub push cmpsb addr32 rex.RXB lea movabs cmp icebp sbb or (bad) sbb retq out addr32 fidivrl rorl imul imulb in and or lret mov rcll push data16 (bad) and rex.WRX push add jl lea (bad) scas iret (bad) std and or test (bad) push sahf pop cltd repz or sbb in jnp std mov imul rex.RX retq mov xlat rex.WRXB xchg mov test cli rcrl cld notb (bad) push sub lret (bad) xor movsl cs test rex.XB or push roll (bad) rex.RB and cwtl xlat std mov mov js pushfq sbb mov iret std sbb jno scas addl jb leaveq pushfq push add shll int sbb loop cmovp push adc jnp divb rex.WR adc jge outsb (bad) (bad) push pop adc test shrl in (bad) pop stos orl jle adc shr rex sub outsl push (bad) push loope sti (bad) xor rex.B sar (bad) fldenv (bad) and rcr push out mov enterq mov (bad) mov movabs sahf clc rex.WR sbb add or sub cmp test cmpsl divps nop xchg (bad) mov cltd rol in xchg mov ss sahf push (bad) (bad) (bad) or or shr stc iret (bad) fildll roll add mov lret sahf rex.WRB rex.WRB fs rex.W and sub shrl mov and adc rcll scas rex.WB and mov rex.R mov sub inc in ja mov jno (bad) jl cs (bad) fcmovbe xchg cmp (bad) ss rex.WX and (bad) (bad) callq sbb sbb sub xor rex.WB lock (bad) xor out push adc mov loop repnz jo lock mov cltd sbb cmp mov (bad) add mov jrcxz (bad) (bad) sub cld pop (bad) cmp insl or mov adc shll ja sahf rex.RX mov jle pop movabs fmuls in (bad) ffree flds (bad) jnp push rorb movabs retq (bad) jno or xor rex.X lret sbb and push (bad) sbb clc jno sub out mov mov shl icebp ja (bad) (bad) movsl rcl movabs mov movabs jbe pop movslq jg mov addr32 cmp sarl cmp cmp int3 (bad) mov movabs mov in loope (bad) clc loop (bad) movsb (bad) outsl outsb imul (bad) mov cmp scas adc pop stos mull sub jnp loopne callq movabs sarb jae or xor repnz data16 rcrl push rorl nop sbb mov add add mov mov adc js movabs sar pop or (bad) fisttp movsl mov (bad) out pop pop shlb or imul or xor sub icebp (bad) cwtl pop rex.RB rex.WRXB (bad) cmp mov jns inc es mov cmpsl mov rorl test pop sub cs rex.WB mov (bad) (bad) icebp mov rex.B jmp sahf jbe fimull leaveq movabs rex.WRB (bad) retq test (bad) xor fldcw pop ffree cmp sub (bad) iret mov cmp rcll xor and pop and mov xorl mov (bad) sahf or push add mov mov xchg in (bad) movabs push fwait cmp add mov in mov notl out (bad) mov (bad) loope adc mov jne xchg mulb (bad) sub or clc rex.WXB cld (bad) push rex.RXB rex.WRB rex.R adc mov (bad) or vpgatherdq rex.WB faddl cmp leaveq pop rex.X movsl xor and mov mov (bad) int3 jle,pt (bad) adc out jb mov gs incl (bad) and lock (bad) cmp enterq jno jb shll loope or shlb jp jne push and test sbb (bad) (bad) lea push mov movslq (bad) fsts jrcxz (bad) xor mov movabs xchg lahf mov roll xlat jo (bad) shrl sub nop loope adc xor pop rorl cld sahf push xlat bnd adc mov or movabs retq sub jae in rcl push xor fstpl or fs stos mov (bad) rorb out cmp (bad) mov xor (bad) add jrcxz xchg movabs jmpq mov (bad) or rex.XB and and pop rex.XB rex.B ds add jbe fucomi test (bad) (bad) je out (bad) ds (bad) stc jmpq lret mov (bad) (bad) fldt fwait (bad) rorb rex.B popfq hlt stc rex.XB (bad) rex.WXB mov data16 imul rcl add mov (bad) xchg and xor movslq xor rol fdivrs int3 sub mov add out xchg (bad) (bad) and xchg iret lock fimul insb cmp lahf andl mov std rex.B movabs sti and nop xchg and pushfq sub (bad) in (bad) rex xchg (bad) rcrl cwtl leaveq push mov stc jno mov in mov sub push cmp lret loop (bad) (bad) pushfq xor mov cwtl push out xor fnstenv sarl (bad) pushq loopne pop pop add sar sahf push idiv retq jb rex mov pop imul (bad) out rex.X (bad) push cmp or (bad) roll clc (bad) lret test mov jnp adc repnz mov push shrl adcl cmp add scas or rex.RB cmp rex.B rex.WR rex outsb pushq or jge jmpq lahf mov ror mov xor stos cwtl (bad) jno iret scas ss mov in test mov and (bad) (bad) xor xchg xchg xchg push (bad) (bad) (bad) lods or (bad) rcrl jle shrl mov in pushq and (bad) sahf jmpq (bad) stos rex.WX movabs (bad) pushq xchg fxtract repnz push insl jge mov stc out (bad) mov mov popfq xchg fld adc and jne insl and (bad) mov add (bad) mov (bad) (bad) rex.WX sbb fadds (bad) push lods out xchg roll jle pushfq xchg pushq in adc and fs xor callq test (bad) std rex.X ja adc mov (bad) (bad) jne (bad) out lock lods add jnp imul cld (bad) xor rex.WRX rex xchg add loopne repz or adc sub (bad) ficom retq (bad) outsb fsubs insb sbb and fldenv (bad) jp add mov movabs sbb and loope cwtl xchg rolb in pop ss retq (bad) xchg int3 rex.XB and retq (bad) rex.RXB in adc (bad) fidivl mov pop (bad) (bad) sub fstps xchg cmp push mov (bad) clc xor ds loopne mov imul cs outsb test cmpsb test stos fucom or pop pop rorl jg mov sbb rex.RB lock push rex.RX rol fnop pop rex.B lret out fidiv jle push rex.RXB rex.XB lock or loop (bad) pushfq cmp mov outsl rex.WRX int adc sbb mov rex.RX xor add push sbb mov pop imul cmp (bad) (bad) mov rex.RXB rex.WXB fdivl data16 (bad) mov out loop (bad) cmpsl (bad) pop clc addr32 repnz xlat add fsub movb insl rex.RB jge jno stc (bad) mov (bad) jae lock js jmpq xchg cmpsb mov setl (bad) adc ficomp mov mov mov cmc sub sbb and jno stc sub xchg rex.R (bad) jp (bad) sbb mov jmpq (bad) pushq popq sub rex.WRB test insb sbb mov movabs sub fs outsl or (bad) rex.RB je sbb (bad) rex.W je je (bad) in lock scas xor xchg jo loope leaveq lahf clc and pop (bad) jns mov outsl xor outsb xchg (bad) xchg mov movabs sbb pop (bad) rex.B imul and sbb and jg sub leaveq mov adc (bad) or jl pop (bad) rex.WR push cwtl sub pop sub data16 cmpsl rex.R or popfq cltd gs in (bad) mov fstpt (bad) jbe fidivr sub lahf loopne out outsl movabs enterq (bad) repnz mov or test (bad) rex.W cltd (bad) (bad) mov cwtl vmovss mov mov lods mov mov scas je jmpq mov xchg int3 jp (bad) clc cli (bad) jns (bad) cmc rcrb je (bad) sub imull xchg (bad) imul cmpsl rex.WB data16 neg pushfq repz xchg loopne mov rex.WR rex.WX (bad) mov test jne je xchg jrcxz xor ja fmulp add ss cltd retq (bad) xchg xor or pop out lods pop mov not (bad) enterq (bad) (bad) (bad) lods movsl rex.R and test jl xchg add in (bad) (bad) rex.B rex.X mov mov xchg movsb lock movabs jb mov (bad) sahf jrcxz stc xlat xor add loope icebp jrcxz pop out leaveq rorb pop (bad) mov mov scas or xor sub rex.WRXB mov stos cwtl mov loopne cld stc sbb xchg ja cltd sub mov (bad) jb (bad) add sbb ficom (bad) xchg or mov rex.WR add sbb outsl repnz insl movsl xchg jne pushq clc out adc sub fxch (bad) add movsl iret jmp sbb jo mov subl mov mov adc sbb sbb mov (bad) cmp ja adc test xchg fwait mov out add (bad) (bad) enterq xor (bad) mov loopne cmp xor movsb cmpl xchg (bad) pop pop cmpsb shrl test cwtl fstps test cld or rex.WXB jo js fiaddl out sbb loope hlt xchg movabs gs repz outsb insl pushfq fs mov (bad) sbb (bad) cltd jnp rcll pop shl hlt cltd or gs in cmp push int3 ljmp popfq movabs xchg mov mov rex.WB retq js movslq mov test nop or push rex.RX insl jno jne sub callq push int fwait out (bad) cmp (bad) (bad) fcoml and stc xor sub fldenv rex.R lret (bad) in adc mov testb test xchg (bad) rex.WRXB push movabs sahf lock mov xchg rex.WXB push rex.RX rorb jge jp xchg jmpq and mov adc (bad) sbb (bad) mulb xlat add jp pop sti or push (bad) cmp movabs or int icebp rex.WX rex.XB in je (bad) lret add cmpsb loopne cmc mov ja xlat cmc push rolb js (bad) (bad) orl lock push js jb rcrb test or rorl cmpsl pushq (bad) xchg pop out idivb add mov mov (bad) cmp int3 push (bad) sbb movsb (bad) roll repnz cmpsb roll (bad) cmp mov imull rorl (bad) stos pushq push sar outsl xor (bad) sar (bad) mov sub idivl shl add jmpq leaveq mov mov (bad) push lret sub scas jo rex or cld xchg movabs cwtl rorl push rcr rex.RB (bad) stos mov and mov int rolb insb jb cmc fsubs rcrl (bad) mov icebp jrcxz xor xchg mov rex.WRXB (bad) lahf jg or (bad) cli (bad) mov std sub (bad) sbb push lcall (bad) (bad) cmc callq negb rcrb pushfq mov sahf push xor (bad) (bad) cmp push (bad) mov (bad) stc adc (bad) xchg mov (bad) mov fdivl roll mov (bad) (bad) jg and xchg sahf sbb movabs ss and push and std (bad) jl xchg mov jg out (bad) jge imul rolb int xchg push lcall rex.R (bad) repz mov int3 std mov pop fprem1 or mov out imul jp fadds (bad) icebp pushq outsl push xchg in jge mov test (bad) ror push movslq cmp rex.WXB pop sbb adc fwait add mov or adc ss xor in (bad) mov adc pushq jae ss ja jbe fcoms xchg in rex.WRXB adc jp movabs (bad) test xchg (bad) adc mov ror (bad) sub rex.WX rex fwait shrl add (bad) mov pop in or shrb scas add rcll (bad) mov (bad) mov sahf sbb rex.RX movabs jo push lahf nop (bad) (bad) rex.RX imul xlat popfq outsb (bad) cltd (bad) adc mov sbb iret cmp cmp movabs roll jg cld pop jne es incl int3 testb jns push (bad) jmpq or mov rorb imul sbbl fadds rex.WX data16 xchg mov mov xor add rex.R add (bad) shrb shrl adc xchg jrcxz mov adc (bad) rcll lret xchg mov sub mov rex.WXB mov jmpq xor or rolb shrl (bad) rclb cs cmp (bad) or retq (bad) test pop sarb out pop mov stos fsubp xchg sub xor (bad) (bad) adc jge repnz (bad) (bad) je mov (bad) scas rex.WXB data16 mov add and sbbl pop sbb outsb and enterq neg sarl movabs mov xchg pushfq lock rcr rex rex.W (bad) (bad) rol mov sub rex.WRB retq sbb push cli cwtl outsl add sarl movabs or xchg jrcxz lret ror adc insb fdivrp and or xor addr32 xchg test movabs xor jmp xor testb jae (bad) lods push mov mov jns cmpsb ss stc sarl clc popfq (bad) sbb sbb add xor test retq lea movabs rex.R rex.RX rcrl add jge push out mov adc push out sarl insl jns test js or retq test mov stc rex.XB mov jrcxz mov fisubrl sub retq lods fild lods movabs push (bad) (bad) in jmp and or fisttp ja rex.WX repnz mov xchg fadds movabs hlt push movabs callq (bad) mov pushq shrl pushq sbb mov scas (bad) or (bad) (bad) hlt sub jb sarl fsubrs sub (bad) test (bad) cmpsb lret test and (bad) pop (bad) rex.WX rex.RX add mov mov (bad) in cwtl sarl push cmp jmpq negl or mov subl insl rex.X shrl out rex.RXB leaveq (bad) sbb push fldcw stos rcrl and test adc repnz (bad) and mov addl sbb and and fstpl popfq xchg xchg enterq and (bad) jae (bad) mov rex.RB rex.WB callq cmpl jl clc lods sahf and mov or rex.X add pop pop test ss loope xchg mov pop scas pop xor jg pop jle (bad) fdivs sbb fnstsw push faddl imul test retq stos cmp fldt jno push (bad) retq int xor add (bad) (bad) or jrcxz push add (bad) (bad) xor (bad) sub sub int3 (bad) in fcomip sahf cmp movabs jb push movabs cli (bad) push (bad) (bad) roll test (bad) lods push popfq rol (bad) pop fstp pushq sarl sahf rex.WXB push add (bad) (bad) rex.RXB rorl cmp adc fld push xor out (bad) sbb (bad) cwtl (bad) xchg mov stos int3 lock (bad) mov xchg sarl sbb mov rcll movabs rorl (bad) (bad) pop in adc mov push repnz sub pop fwait mov (bad) out lods lret in sarl cmp mov sub mov mov jle xchg adc roll pop (bad) cltd pushq shrl shlq sub gs sahf and shll shll and cli (bad) jae fs mov jmp rcll push stos movsl test mov outsb jb xchg cld (bad) roll rex.WR roll sub shrl out push insl (bad) sbb fcmovb es (bad) rex.RB gs xor sarl (bad) rex.WRX rorl xchg rcrl rex.WX mov (bad) in repnz adc in mov push pop add hlt (bad) loop (bad) rex.RX (bad) jmpq roll imul test out xlat rorl add (bad) mov pushfq adc rcl rex faddp rcll js rcll xor mov xchg mov (bad) sub sub repnz (bad) (bad) jp int rex.B cmp jo movsl roll adc in movabs test popfq (bad) add rcr rex.WB cwtl jae (bad) (bad) pop cmp loop jl (bad) jo stc cli add rex.RB rex.B sub or fwait shrl ror movabs incl callq movabs mov es out loopne ja addr32 lret pop xor (bad) or mov out cs loopne nop rcll jl ja movabs fwait loop or (bad) int3 in loopne push shl sbb (bad) rcrl and rex.RXB gs (bad) mov jp (bad) movsb ja test nop sarl and add (bad) out cmp cmp xlat bswap rex.R retq insb mov pop sbb out iret rorl sub lret pop subl (bad) repnz ja push cmpsl scas outsb loope sub adc lods insb movabs rcrb cmp fs and (bad) es cmc rex.RX mov shrl mov jne rex.XB movabs movabs lahf loope adc mov movb mov add push sarl loope mov nop jae hlt rcll jle (bad) repnz movabs repnz notl lods push pop shl fmull jbe rol rex.XB rex.WRX rex.W lret shll rex.WXB out loop add (bad) rex.WRB cmp jnp iret fs sub pushfq and sarl jg clc fcmovu popfq out hlt xchg (bad) mov rex.RB retq fbstp (bad) and add xchg adc hlt xchg push (bad) rex.WXB (bad) addr32 loopne push (bad) (bad) xchg (bad) mov add and rorl repnz mov or shrl sbb rorl (bad) cltd cmp repnz movslq sbb movabs jp push int3 addl out rcll push movabs mov adc cltd roll jl (bad) mov push add mov add add adc stos sbb (bad) mov mov callq rcrl xchg push roll jg xchg mov outsl je (bad) and int sub xchg or sbb add rcll addr32 jle mov int rex.WB movabs shrl in mov and rex.WRB (bad) xor in (bad) std movabs push repnz sub loopne mov in and in xchg pop xchg jl (bad) fnstsw (bad) adc jns rcrb retq (bad) and movabs rex.B rex.WRX (bad) decl xor xchg (bad) test loop or and xchg jge in test insb jmp jb imul sub adcl shll fistpl pop in sub (bad) mov cmp (bad) outsl sub rex.WRB loope xchg mov jrcxz rclb imul sub mov cmp clc lea rex.WR ror stos int3 mov mov loope mov pop mov xchg sub jnp (bad) xor jno push rex.RXB mov adc movslq hlt xchg (bad) push cwtl data16 fnstcw movabs (bad) (bad) sbb test out mov rex.W (bad) cmp (bad) and rolb retq movabs retq callq add jg movabs pop xor cli (bad) lock movabs adc (bad) adc scas leaveq ja xchg cmp (bad) push (bad) (bad) rep and scas rex.WX xchg test xor (bad) jne cli int3 movslq (bad) mov or movabs outsb rex.B cmp test push loopne cmpsl cmp lret jg rex sub add lret add xor jns mov (bad) lret cmp sub fwait jle cld rex.WRB rex.WR jno (bad) pop fisubr push mov jmp (bad) and xor and int3 icebp loope je int3 test mov cmp rorl mov rex.RB scas (bad) imul fbstp push cli (bad) mov or (bad) pop (bad) (bad) push rcrb xor cs xchg jg (bad) mov sub (bad) jns rex.WR rex.B fcmovb (bad) data16 loopne (bad) sarl jns rcr jge adc mov mov movabs pushq rex.WRX sbbl (bad) sub (bad) and repz loope int jno sbb rex.XB xor cmp add out pop fdivs insl (bad) fsts js out repnz rex.WX cmp and ss add rex.R movabs int3 push iret (bad) je add adc adc cmp rex.XB int3 addb callq fisttpl (bad) repnz mov rex.RXB frstor mull rex.WR jg lock vminss addb rex.B int3 mov rcrb cmpsl rex mov xchg rex.W outsl xchg in pop pop (bad) retq or movslq test rclb (bad) sarb mov (bad) or jp adc and rex.RX repnz rex.W jmp pushfq loope callq rorb (bad) jno or and (bad) test mov (bad) cmp sti mov push rex.RB and imul cmp rex.B and shrb cmp repz mov rex.R icebp add icebp int3 push mov movabs fcmovb jbe pcmpgtw adc (bad) lret test push andl stos adc out xor jae mov (bad) sbb mov cmp sub mov xor sbb vunpckhpd pushq or jrcxz rex.R repnz lret rex.W rex.B or pop mov (bad) sbb int3 xchg push mov rex add rex.XB sub jns fdivrl sub sbb mov imul in adc push (bad) xchg sti es mov sbb xor push divl sbb in (bad) movabs lods clc test sti xchg fsubrl rex.X rex.B fisttpll push xor fs jrcxz enterq (bad) je rcrl rex.XB (bad) jne data16 mov repnz add mov sahf test cmp outsb retq cld test mov lret xor jbe rcr xadd retq int (bad) ffreep xlat cmc sbb (bad) (bad) ja mov adc incl fiaddl orb cmpsb cmp mov outsb ds pop rex.W rex.B jle lret outsl push xchg add cmpsb ss (bad) fsubs fstpl lret rex.WRB movabs mov addr32 js sub or (bad) mov (bad) mov rex.WRX rex.R and xor (bad) jae or rex.RX shrl cmp movabs or adc (bad) cwtl (bad) push (bad) rex.X rclb cmp fdivs or (bad) mov xchg cs movsb (bad) js int3 cmp xor adc mov adc sbb push (bad) (bad) test (bad) sbb (bad) sbbl test xor in cs mov xlat sub rex.WRX jne adc xchg clc sub rex.RXB rex.WRB (bad) xlat (bad) div nop test cmpsl (bad) xor and (bad) sahf gs out rcl frstor repnz (bad) xor orl (bad) mov and rex.B (bad) adc repnz sub rex.WRX mov xchg push in (bad) outsb xadd out rex.RX cmp rorl (bad) (bad) sbb fadd repz leaveq adcb movabs pushfq add adc jbe shll add push (bad) add pushq int mov lods add in sub ds rex.B mov leaveq fnstsw (bad) mov movslq ja fwait retq adc mov cmp stos int (bad) rex.RX mov imul movabs pop jno lock adc mov sbb repz mov rex.RX (bad) insb je add rcll and jno adc add movslq cmp pushq pop cmp insl (bad) movabs mov and (bad) shrw (bad) (bad) xlat rex.RXB (bad) cld and insb (bad) mov mov and or (bad) jo pop movabs push mov movabs mov xchg or test xchg fcoms xor xor sti (bad) adc out repz roll rex.RX addr32 rcll mov sub or (bad) cmp xchg fstl push movabs lods fs rorl fisubl mov push rcrl fldenv scas adc jns and fnstcw fs fwait jmpq ror mov rcr rex.RXB in push test xchg loope sub pop shll push shrl mov cmpsl push (bad) sbb sarl (bad) mov push rolb je fcoml pop (bad) cmp push loop jnp callq push cmpsl jne (bad) sbbl decb fs push xor jmpq divb nop fstpt xor int3 sub xchg lret (bad) (bad) (bad) loope (bad) (bad) lahf scas orl and adc shl push jmpq outsb in add adc imul jno cmpsl adc stc stos sti testb out insb rex shll xor outsl push (bad) ds sub int stos rcrl (bad) xor rex.X (bad) jae loopne add cmovs shl rex.WRB lods (bad) shll (bad) test cli loopne jmpq sarl cld mov (bad) retq (bad) ds fsts push fildll xchg xor sub (bad) hlt (bad) rcrl (bad) add sbb popfq shrl hlt pop (bad) cmc pop sub and je shrl sbb sti pop jae push add jno mov push push cwtl and movabs jns xchg rcrl (bad) insl xchg mov (bad) mov push rorl (bad) (bad) mov adc fisubl lret xchg cmpsb cli mov rex.W sbb mov mov jrcxz jmpq fstl jbe pop xor add ss scas (bad) add (bad) lock and lret (bad) gs fdivs rex.WRB rcll movsb lahf (bad) mov jg or imul mov rex.B sub xor (bad) (bad) nop (bad) repnz cmp rex.WXB imul or rex.WX jrcxz movabs fmull and std xchg cltd sbb cmp rex.WRXB out (bad) in add mov movabs xchg fldenv lahf (bad) fsubl rex.B or mov (bad) jo outsl adc (bad) xchg iret sahf iret loopne and clc xchg xchg adc mov jb rex.RXB mov enterq pushfq roll insb mov xchg fadd lods je sub in xchg mov jg movl and test add (bad) movsl (bad) movabs push jmp repz xchg (bad) add rex.XB push cmc ss rex.WXB mov jp jae rcrb shrl jnp push sbb ss imul testb push cwtl lret sahf hlt pushq (bad) pop ss cmpsl sar lods movabs sbb insb (bad) repnz cld retq add jae outsl test lret pop mov lea jrcxz sbb (bad) jge (bad) (bad) lret mov rorl (bad) jge cmp jno xlat shrl add in shr repz clc sahf in loop js (bad) (bad) pop pop rex.W and movslq and fiadd mov std adc movsb jae pop lret sarl jp shl sahf outsb adcl (bad) or rex.RX adc (bad) scas pushq (bad) mov movabs movabs clc stos movb roll sbb lahf (bad) clc jae rcr (bad) (bad) incl cltd in (bad) or sbb scas (bad) rex.WRX sahf adc rex.W (bad) mov fmul test xchg xlat (bad) shrl je shll rex.RXB sarl movabs add lahf jbe pop xchg movslq adc (bad) jl rex.X shl cmc xor rcr add mov push mov fistpl rex.WRXB mov int3 pop adc sub insb xchg fcompl cs mov rex.RB mov adc adc jmp cmp xor test rex.W lock rex.WR mov xor mov (bad) cltd (bad) clc movabs sub cltd dec xchg (bad) rol fwait (bad) rcl (bad) andl add ffree movslq rex.X repnz rex.WRX imul xchg shlb sbbl xor in push negb mov nop or add clc (bad) xor mov pop idiv (bad) repz addr32 (bad) rex.RXB loopne clc fdivl rcll mov test push sbb mov cmp loopne and lahf push (bad) push sbb sub (bad) mov enterq adc rcr add mov movabs outsl fnstenv or rcll jno cwtl and rex.R and xchg shrb (bad) lock fs rex.RXB sub leaveq sbb movabs test rex.WR in add pushq (bad) sub mov loop rex.RX cmpsl add xchg sbb rex.RX retq and stos (bad) in cmc fwait push mov pop fisttpl loop rex.WXB (bad) lret (bad) (bad) scas stos vpackssdw mov add mov movabs (bad) data16 cmovb push data16 rex.X (bad) retq or icebp vaddsubpd loope hlt xchg loope pushq rex.WRB (bad) out fnsave (bad) add xor adc sbb and xlat xor xchg test jae shrl rex.WRB flds xor rcrl imul push or adc (bad) rcrl in mov shl fwait jl jae int rex.RXB out add sub ds cmpsl cmc rcrl add rex.RB lret add retq push callq and lock sbb out fnstcw loop xor insb sub sbb xlat rex.RB push (bad) jns rex.B movabs add (bad) fsubrl (bad) add rex.X rex.WRX rex.WRB icebp pop adc roll jbe stos adc sar ss movabs adc xor adc in xor pop lea stos xor iret in (bad) sbb xchg or jae js shrq pushfq push test movl push jbe adc rex.RX rcrl add (bad) cmpsl loop sub repnz sarl hlt rex.X (bad) cmc (bad) leaveq mov pushfq sbb mov pushq mov (bad) pop sbb xor xchg cmp cwtl test rex.WRB mov jge movslq rex.RXB sbb fdivs (bad) xchg movabs cmc fwait stc callq rorl int lret retq jp movabs push lock retq cld xchg incl lock mov sub retq roll mov scas or pop xor (bad) (bad) jl mov add callq shll (bad) test (bad) movsl (bad) rorb loop notb rex.RX mov push retq cmp clc xchg rex.X rcrl shrl rorl imul hlt stos add notl rex.W sbb ja (bad) out cmp xchg (bad) xchg sar rex.WRB int3 or (bad) roll (bad) xchg pandn jb mov or pop and (bad) loope (bad) push add pushfq adc fistpll retq jnp test cld mov fld1 nop movabs and movabs cltd sbb or jb (bad) fadd insl ss or xor callq (bad) mov add stos movabs sub mov roll and xor jrcxz imul rex.RB xor adc mov cwtl rex rex.RX outsb test rex.RXB xor movabs fdiv (bad) jge and xchg (bad) std pop sbb cmp xor test ror rex.RX rex.XB mov (bad) pop cld lret imul add jb repnz movabs rcr jle (bad) sub lods rorl adc rex.WRXB fwait cld cmc rex.WRB imul movabs lret jrcxz fcomps int rolb xchg and rex.B lock push (bad) jp lods lods retq xor add iret jp jmpq divb (bad) mov jrcxz (bad) pop push mov rex.W loopne movabs repnz cmpsb std addb sub out fwait (bad) in int cs movslq je flds fmul xchg cmp adc cmpsl stos icebp mov (bad) repz (bad) rex.WRB lock pushq (bad) (bad) mov or test adc in xor sub fbstp xlat movabs sbb fcmovb pop movabs xchg rex.X jnp mov negb vcomiss (bad) cs adc jmpq jae cli pop test mov mov rex.WX (bad) or test in cmpsb sahf rcl leaveq je mov test scas fsubrs xor fmull push stc sbb mov xor or add fmul sbb clc (bad) ja test (bad) rex.WRB repz fwait shrl (bad) sub (bad) enterq outsl and adc movslq (bad) mov rex.B jo callq sbb xrelease enterq test (bad) repz xchg mov xchg cmp mov cmc add ffree out rex.WRB imul mov fimul pop jrcxz xor or jmp (bad) (bad) in out cmpl xchg mov rex.X and jl icebp adc sahf (bad) xor xchg outsb jno test push rex.WX mov xor mov (bad) cli pushq xchg pushq (bad) jno (bad) fs mov iret add mov gs repnz fsubs cwtl or loop xor movabs (bad) (bad) xchg je add mov cmpl movslq xchg and xor mov movabs or push pop hlt xchg (bad) (bad) jmpq or rcll movabs or repz rex.B add stc mov jrcxz rorb jae jne push popq rex.W sub mov pushfq idivb imull sarl (bad) popfq push (bad) xor rex.RXB mov (bad) ds (bad) mov scas (bad) scas hlt (bad) (bad) push mov cmpsb xchg jl sub loop (bad) stc add (bad) in sub lods fcoml lods (bad) callq (bad) rcll sti or pop mov xorl orl lret jrcxz mov (bad) std rcll jg scas cltd mov jns pop stos (bad) xor (bad) push pop rex.WX sub lods in rol sbb imul jae xor lahf retq jns enterq movsl and sbb rex.WRXB or repnz mov lahf sbb mov mov mov rcrl cli or (bad) sub or icebp roll xchg fistpll xor mov mov nop and sti xor repnz rex.B addr32 mov shr (bad) (bad) lret push (bad) jp jrcxz push jmp test sti roll sbb sar jns fwait movabs xchg rex retq lods add movabs sar xlat cli (bad) mov jmp adc xchg cmpsl and and cmc jbe adc xchg mov enterq rex rex.B sub clc pop movabs rex.W rex.WXB scas mov (bad) jae mov sti (bad) (bad) jb pop rorl iret xchg int3 mov cmp (bad) js outsb jo sub sbb cmp es shrl jno pop xchg rcl xor out iret cmpsb lret rol mov mov mov add mov out (bad) fldcw xchg pop fisttpll cs xor and rcrl jmpw mull sub lea lret xor rex.WRB cmpsb add callq or (bad) rex.B retq add (bad) adc fadds nop roll iret add push jmp (bad) clc add ds rex.B lock (bad) and mov movabs pushfq pushfq sub mov pushq sub pop (bad) push (bad) (bad) cmp outsb mov sub fidivl fiadd rcrl fild roll movabs xor xor (bad) icebp (bad) pop stos repnz movabs insl sub shl sarl shrl cs (bad) and (bad) pop ja push out (bad) cmp repz (bad) imul sarl cmp callq int (bad) mov movslq pushq int sti (bad) and clc rex.X out mov loopne test movslq sahf sahf jo shrl imul (bad) movsb je lahf add (bad) (bad) movabs iret roll fbstp push rex.RXB clc cmc sahf iret (bad) mov enterq sbb (bad) (bad) xchg cwtl (bad) (bad) add add cmpsb mov push bswap rex.RX and jp enterq sarl mov insl test rex jp ja fldcw jno rex.WXB and or sbb or (bad) shrl mov es cmpsb sub (bad) pop data16 lock pop imul or push (bad) rex.WR rex.WXB (bad) jmp and fildll sarl (bad) pop mov or sarl add (bad) mov (bad) movabs callq std gs in incb jp and rex.WRB (bad) xor fldt push add and outsb push mov (bad) sbb mov sbb enterq adc xor mov popfq sub rcll mull rorl jne cmc sti (bad) fdivrs lock loopne addl jl adc imull sbb mov movabs pop movabs rex.WX (bad) loope or nop rex.WB (bad) lret jae fwait jb movslq or (bad) cmpsl test xchg orb mov cmp mov repz es mov xor (bad) adc jns or mov fnop lret movabs (bad) xor decb int jne rcl xchg vhaddpd mov adc (bad) (bad) jp shrl jo pop js xchg hlt sahf (bad) mov (bad) xchg adc fidivl icebp mov jno add pushq lret and iret xchg (bad) imul jo lret mov push lods shll push (bad) (bad) rex.WB sarl mov int3 rex.WRXB rex.WR andl in rex.RX push insb jno (bad) rex.WRXB add int3 add out rolb scas lea and (bad) cs cmp (bad) sar mov jbe (bad) xchg sarl (bad) ja fnstenv cmp mov xor vucomisd jmp mov (bad) cld notl mov mov cmp rex.WRX push adc rcll and loope sbb test jnp loop jp jmp adc roll lock and lret in mov mov or mov push or sbb mov push retq xor out nop test xchg mov pushq int3 pop rclb jrcxz (bad) mov (bad) or fwait addr32 (bad) fmuls pop lea or mov xor xchg xchg xabort sbb mov sub pushq adc xor fs movsl rolb cmpsl (bad) repz lret mov mov sarl mov xchg movabs ss sbb test mov data16 (bad) rorl xor (bad) (bad) in mov callq (bad) lret (bad) sbb leaveq mov ss cltd xor push (bad) cmc in xor lret imul sub add fdivrs (bad) out mov cld jo (bad) scas fisttpll pushq (bad) pushfq sub rex.WR jne and push sarl rex.WRX rex.X lret mov fs insl cmc sbb retq orl push out xlat pushfq (bad) xor rex.W push pop int3 (bad) ficompl rex xchg icebp pushq sub fwait lea negb and imul stc mov xor in sbb mov or (bad) lret loopne sub (bad) (bad) mov (bad) lret rex.WRXB mov sbb or rex.RX movsb mov mov outsl or roll xor addr32 outsb (bad) push (bad) insl xor cmpsl add rex (bad) movabs mov (bad) mov sar push jmp rex.WRB xlat fcoms shr in xchg in push movslq iret and int3 mov test fldenv stos paddsw loope (bad) outsl sahf rex.B cmp push xchg (bad) jae out (bad) test ror sbb pop (bad) xstore-rng cmpsl shr loopne pop ss stc mov rex.R fiadd (bad) jnp in push mov (bad) jl mov loopne (bad) hlt ficom test (bad) fnstcw add movsl push scas add rex.WRXB sarl push adc mov (bad) xor xchg data16 movabs outsl rex.B iret jp add sbb shll or scas (bad) in or xchg sbb rex.RB rex sub jl js jns adc jnp (bad) pushfq fcmovnbe (bad) iret (bad) jne jbe xchg fcmovb cld jle movsb sbb rolb jbe xchg sub push andl sarl movabs lcall lret in cli jno rex.XB sarl loope lret (bad) jrcxz sarl and push ror (bad) movslq retq push cmpsb shrl rex.W test xlat pop divl outsl fnstenv sub xor ficompl add (bad) fildl sti add jge scas jg mov addl (bad) cwtl jrcxz lods rex.B and fldl lods rex.XB rex.WR push (bad) fadd add test rex.WRB xor add rex.XB fwait (bad) sarl pop mov mov je rex.R jg shr lea or and cs push push rex.RB mov (bad) movabs or xorl sub (bad) xor data16 xor and sbb add push cmpsb or rex.W retq mov movabs cmp mov ja rex.B es rex.B rorl pushfq pop fistpl loop mov add lods movslq shr (bad) jle (bad) sbb (bad) outsl rorl cmpsb adc roll cmp (bad) ss adc jns fbld shl test xlat push jbe sbb sub (bad) jge rex.XB stos gs add mov cmp pop out fdivrs rex.WRXB rex.B adc sub add xor ror rcr addb cs jmp lahf int3 jp push (bad) idivb stos push sub add (bad) fidiv mov std push repnz (bad) and rex.B xchg or iret sub sub pop ffreep shll rex.RB rex.WRXB pop sar ja mov add mov pop test shrl and mov ds incl xchg mov sub addr32 and stc add push out add sub (bad) sbb imull fwait sub movabs pushfq xor mov pop rex.WRXB xlat sbb rex.WX jle adc (bad) add jmpq xchg cld rex.R mov mov pop imul sbb mov add jg (bad) movslq callq cmp out out sbb mov mov pop movabs rex.WXB lods (bad) leaveq jp shrl mov fwait std sbb imul cli not (bad) shll adc mov lret (bad) loop roll (bad) (bad) enterq jl movabs (bad) pop jmp add (bad) or roll (bad) movsb cmc pop rol jrcxz pop fwait stc sub (bad) data16 rex.B rex.WB ss mov shl cmpsl cmc fstl mov (bad) sub or rcrb (bad) mov fstl icebp mov (bad) icebp (bad) fcomip iret lock (bad) iret xchg imul mov pushfq mov adc ss mov in push or xlat leaveq imul repnz outsb cmp in sub (bad) xor (bad) decb adc (bad) cli cwtl (bad) (bad) (bad) pop sbb mov rex.WX (bad) int insb (bad) lea pop rex.B jmpq sub lods roll sub sti outsb jbe adcl lret fnstcw add shll pushq pop popq pushfq adc ss lret rex.WXB icebp xchg adc mov jb xor cltd jae rex.B jp cli test (bad) data16 outsb movabs jge pop (bad) pmullw rex.W rex.XB rex.R add sub retq movabs lret shl in (bad) or mov sub cld sub test and mov sarl mov lods mov shrl shrl adc sub pushq nop stos or jrcxz and lock jb pop cwtl push mul push movl mov mov (bad) ss mov retq (bad) cli std xchg imul rol jl test mov adc fcmovbe mov js push jl jle cmp or cmp rorl mov or cmp sbb rex.WRX (bad) lret mov (bad) (bad) lret adc retq fldl enterq fs sbb rex.W mov add sub rex.WRX rex.RX xchg mov repz shrb lods (bad) cmc push (bad) sub and mov rex.RXB (bad) leaveq repz rex.WR rolb clc jle mov adc icebp test jo (bad) movsl mov in (bad) add fsubp jnp cmp lret hlt jbe rex.WRB fucomip jb sbb cmp jp rex.WX cmc pushq xlat mov fwait (bad) movabs (bad) or jno jae (bad) leaveq rex.B and mov loope fyl2x (bad) std enterq (bad) or callq xchg fimul testl mov cmp sarl lret callq sub jmpq test rex.WX roll sbb iret add fwait or xor int3 mov cli divl retq rex.WRB repnz cmp popfq sub ror sbb jo gs cmp lahf sarl pushfq sahf mov push lea js fisttpl pop (bad) (bad) add rex.WXB int test rex.WRXB sub (bad) movabs mov xor jb push add (bad) cmpsb leaveq cltd (bad) xor rorl movsl sub and retq iret out xchg jno loop insb pop (bad) rcll imul lods vpminub sub add cli repz lock cltd pop (bad) orl roll (bad) outsb rex mov callq out xor xchg std in mov movslq push int or adc push (bad) push add cwtl mov sub test imull add pop jrcxz mov rcr loope sbb jrcxz and (bad) jbe jle add rex.WRX rex.X movsl sarl add rcrb mov jno rex.WXB jrcxz shrl jbe (bad) add sarl and pushq pop pop ja rex.B gs mov icebp xchg and leaveq notb (bad) sbb pop lret sbb xor pop (bad) or rex.RX mov retq rex.WRXB (bad) xchg sub cmpsl mov enterq xchg and adc xor int (bad) out (bad) fsubp retq xchg pop (bad) jge xchg cmp (bad) (bad) out subl mov sarb (bad) mov (bad) icebp adc and movabs push mov out movabs add lea pop adc add mov roll jrcxz jbe lret out (bad) outsb xchg cwtl rex.R rorl (bad) (bad) pop sub cli stc push jbe jmpq and fsts int outsl xchg in (bad) pop and out cmc iret out rex.B mov repnz add jnp cmp in xor mov push (bad) stc pop orl mov (bad) leaveq (bad) je lock (bad) out mov es rex.WX (bad) or rex.WB ficomp clc movabs jrcxz leaveq mov fbld outsl icebp fcmove mov (bad) pop and movslq lock cmp js stos pushfq movabs (bad) enterq sbb (bad) icebp add mov rex.WX (bad) mov shll std and pop and sbb lret mov mov popfq rcr movabs cmp test vpsrlq xor pop xor and movabs sub or rex.RXB movsb add cmpsb mov push jb rcr sub (bad) fwait (bad) (bad) (bad) mov sahf mov cwtl (bad) jnp stc mov mov (bad) jb loope mov js enterq xorl pop cli mov jb imul (bad) jmp adc mov (bad) rex gs je rcll repnz fstl ja jno push sub (bad) sarl movabs out (bad) mov mov jns fsubrs outsl int3 popfq jmp clc rex.B mov push int3 rorl cli roll jl (bad) jae sti xor (bad) rex.RXB roll (bad) pushfq adc cs int xor add insb rex.RB movabs sar xchg jb test sar fstpt int3 out loope mov roll mov retq lahf rex.B test (bad) cli rcll sub scas mov rex.B movabs and out or adc fisttpl cmc (bad) push sub add pcmpeqd pop imul sbb xor push movabs mov and mov adc sub loope cmp mov repnz (bad) out (bad) (bad) roll (bad) stos shrl mov mov cmp movabs add and (bad) xor sbb mov (bad) adc outsl shr fsubs int3 dec rex.WRXB and adc (bad) neg gs jne rex.RXB pop cmp cltd jb cmp adc rex.RXB push hlt (bad) (bad) mov rex.B add ja popfq loopne cwtl sbbl pushq rex.RXB stos (bad) sub out test ja movabs je sub loope lock cli ja loop sarb movabs rex.R testb ja lods pop (bad) and es mov jno loop or std jne (bad) cltd (bad) (bad) rex.WXB loop and adc rex.RB adc fsubs push jmp xchg (bad) scas mov jno lret (bad) xchg (bad) icebp sti (bad) insl sub (bad) retq fs sbbl sub rorl lods jmp jnp movabs out insb enterq mov (bad) rex.RB stc lods movsb (bad) (bad) (bad) xor nop (bad) rex.R jb test add fsubl cmp xchg sub (bad) rex.WRX xchg lods insl cltd out fildll notb add mov sahf add test and data16 jb scas cmp fs mov cmpsb (bad) xor (bad) and in (bad) push add ds cli insl (bad) repz gs ror pushq rex.RB pushq adc movabs sahf push cmpsl and rex.WRB pop xchg pop xchg xchg (bad) in (bad) mov addr32 add sbb (bad) lret rex.WXB xchg data16 jno mov lret cli movabs lods rex.XB sbb xor pop (bad) in (bad) xor imul (bad) pop (bad) in mov std push add push shrl iret test pop xchg stc rex.R negl cltd jmpq sarl insl in rex.B rex adc fdivs jge rex.WR pop negl nop pop cmp xor rex.WR add test fadd jb mov rex.XB push mov cli in (bad) clc or sahf outsl xchg pop out fcoms repnz cltd ds (bad) mov sub (bad) adc (bad) (bad) rex.B stos (bad) repnz ss in fs xor sub (bad) sub retq adc adc (bad) test push or mov sbb mov movabs fisub (bad) rcl xchg adcl pop jmp xchg test xor cwtl xor (bad) rex.X mov fnstcw jo xchg lret adc pop rex.RB or rex.WRB rex.WXB out adcl fs xor rclb shld (bad) rcrb mov movabs test push rex.WX mov test lea pop (bad) (bad) mov cltd rclb (bad) push retq retq (bad) enterq data16 sbb rex.WB (bad) mov rorb and mov clc rex.R rex.W gs adc fiadd mov sub insb pop vpsllw and in movsb rex rex.WR and (bad) mov ja stos fstps pop push shll (bad) cmp sub pop jae xchg (bad) and xor nop or xchg out int3 icebp jp mov adc cmp (bad) rex.W imul stc mov adc insl mov jns frstor loope fsubrs mov cli (bad) repnz movslq lods (bad) lods cld lock rex.W orl lea rex.WB in cmp mov int3 rex.WXB (bad) fbstp or adc (bad) repz (bad) shl rex.WX ja test mov xor mov insl cmp add mov sbb loopne (bad) lods fisttpll cli fisttpl pop es out fdivrl mov jne (bad) ja pop jp fbstp je mov out loope or lret fistp push (bad) shr rex.WRXB xchg lods fist mov lock mov cltd sub fadds xchg rex.B rex.WR rex.W cmpsb rex.WRXB repz rex.WRX jnp rex.RB int3 mov loop (bad) repz orl mov lods xor rex.RXB sbb retq (bad) int3 hlt outsl out mov int (bad) cmc fwait jbe movabs xchg jle fsubs jge iret and pop test loop rex.RB mov outsb jo add (bad) (bad) in adc jmpq lret push mov outsb sub and stos adcl fbstp pop sub xor jns ss (bad) (bad) push test xchg push stos movabs or rex.WX retq sub cmp jnp jmp roll mov adc cld enterq (bad) int3 rex.X (bad) cmp jle loope (bad) xchg jno test mov sub popfq cmpl (bad) lea sub outsl test xchg jl mov mov (bad) addr32 (bad) jmp (bad) pop (bad) sahf cwtl rorl out popfq add stos hlt mov sarl rex.RB repnz callq xor (bad) jbe sahf (bad) movslq jnp fidivl mov iret push xor rcr jne cmp sbb (bad) stos xchg xchg lock out cmpsl push push retq repnz mov add mov insb sbb rex.WXB pushfq xorl mov push shll int3 div callq rex.W jge xor sbb cmp icebp push retq rorl mov shll (bad) insb stos (bad) (bad) add (bad) mov sbb push jmpq (bad) cmp (bad) divb xor adc loope pushq xchg rorl (bad) pop loope and xchg xor shlb sahf jb lock or cmp xchg (bad) int mov (bad) rex.WRB sbb movabs cmp mov add rex.WX sbbl (bad) jp sub int3 fmulp rcll pop cld jrcxz ja rex.X lahf xchg mov adc jrcxz and in cmc rex.WX jmp jmp jmp xchg movabs or adc sarl jno (bad) rex.XB clc stc loop outsb (bad) cmp sar pop sbbb repz ror loope ds xchg sub sahf (bad) jnp rorl add sub cmpl enterq addr32 repnz in adc rex.B cmc cmp sub (bad) mov hlt and or xchg jrcxz pop pop jp or ja pushfq ficom mov lret pop xor movabs (bad) (bad) (bad) idivl roll retq fimul or icebp test xorb (bad) in test xchg movsl scas mov jno repz cmpsb add and xor in rex.WB xor mov mov jmpq loope rex cmp (bad) jmpq xor rex.WB jmp add jmpq movabs fwait (bad) movabs jnp jnp fistpll stos rorb icebp testb rex.WRXB adc int3 bnd jno mov mov (bad) rex.RX lock stc in (bad) mov pop add sbbl pop repz or rol movsl pushfq (bad) sub retq fstl roll adc xchg insb xadd nop out int sub rex.WB xor xchg out adc (bad) (bad) cmp xchg pushfq mov rcll push (bad) jnp retq test sbb fstpt hlt (bad) cwtl leaveq (bad) lret jmp mov push or rex.WRXB movsb ds (bad) (bad) hlt (bad) cmp retq sbb loope scas rex.WX xchg sbb mov retq pushfq std test push xor (bad) in (bad) (bad) jne mov pop cmpsl lock (bad) mov retq xor loopne movabs (bad) (bad) rex.WRX rex.RX mov (bad) sti mov jmp (bad) repnz (bad) rex.RB lret callq or jge mov enterq mov rex.B rex.W rex.W (bad) push jns rcll pop movabs mov mov jo xchg cmp rcrl (bad) insl (bad) or push mov pop cmp cmp adc stos mov pop mov (bad) lret (bad) xor mov (bad) movabs rex.RX mov sahf lret jnp out icebp rcrl xlat mov adc adc and popfq push scas push jnp pop rclb mov and adc flds repnz rex.XB scas hlt test iret or out loope adcl rex.B data16 rex es adc scas or push fcompl (bad) cmpsl mov mov iret rex.RX cmp leaveq movabs lods (bad) xchg rol loope mov pushq (bad) icebp and jno (bad) movsl outsb mov rex.WX and sbb fcmovnu shrl in pop or sbb (bad) gs in push cmp rol int adc js callq (bad) roll (bad) xchg (bad) mov testb cli in (bad) rcr mov js lret (bad) cmc add cmpsb subl (bad) loop push gs cmpsl push movabs rex.WB es jb gs (bad) xor jmpq (bad) ja add jns jp loopne add (bad) fdivrs shll cld std jb sbb sub (bad) rex.WX fisubl xlat (bad) mov mov (bad) mov sbb test and add (bad) shll paddb add imul xchg lret in jmpq jae add sub cmp and adc roll (bad) mov and lods (bad) (bad) movslq fwait shll rex.WRB jrcxz (bad) xor jo icebp movabs jmpq (bad) scas sarl loop (bad) (bad) add jae test xchg roll sarb cmp insl jle stc adc xchg roll rol outsb cmp (bad) mov std jle mov add (bad) enterq rex.WRXB cmp rex.WXB enterq cmp and mov add mov sar or mov pushq loop rex.RXB in push stos jo mov andl mov pushq movslq shr pop sub adc (bad) sbb hlt callq rcr stc push pushq sbb jrcxz stos test sub cmc test cmp mov testb test and jnp movabs stos add pushfq mov rex.R insb pop mov jmpq fisub or mov repz pop push lret jmpq sbb rcrb push push insb popfq xchg pop rex.B sbb xchg lods mov in xchg in sarl sbb (bad) push (bad) (bad) test rex.B cmp adc add rex.R mov (bad) in lret xor xadd jg mov rex.WX add movslq or fsubrl loope test retq jmp lods rex.RB je rex.RB jl rex.R (bad) movabs (bad) jbe lahf jmp sahf cmp mov (bad) (bad) sub sbb adcl lret test and (bad) ficompl cmp sub jno add cmpsb (bad) adc add rex.RX mov movabs idivb rcl lods jp je add mov (bad) movslq rex.RXB cmpsb callq loopne mov and mov movabs or sub (bad) (bad) iret icebp sub xchg jne mov xchg cmp or outsb adc jp roll out loope lret and cld hlt sbb subl roll mov imul xchg rcll hlt (bad) je cmp cli ss repnz rex.RX (bad) rex.X fs lea pop push jmp add (bad) mov rex.WRB lahf xor mov or outsb test mov insb fcompl repz rcll movabs rex.WRXB xor sbbl xor and sub jle mov mov ss pushq jne iret pop scas rex.RXB add xchg (bad) pop sbb out pop mov pop xchg movabs int cmpsl (bad) (bad) cwtl lcall rex.RX (bad) iret rex.WRX rex.XB jo js cld jmpq adc int add (bad) loop jnp movsl iret enterq rex.B cmp cld std sbb mov addl pushq imul (bad) mov (bad) add sub rcll add rex.RX int rcrl mov int (bad) jg jnp outsl repz stos mov xchg xor push in rex.WX rex.WRB gs lret adc (bad) sub sar sub jno scas movabs mov xadd or ja std rcr jo jle pop xor (bad) rex.WX mov pop xchg jne shr xor pop lods or mov popfq gs test shrl mov in (bad) (bad) repnz xor shll sub shrl jmp rol sub add jl mov fnsave scas xor add (bad) je add rex.WRXB and or (bad) cmpsl roll out (bad) adc repz repnz jrcxz sbbl mov (bad) rex.WRB jns int3 (bad) jge int3 movabs pop or mov sbb push lock roll jnp in outsl sub jg fsubs int3 (bad) cs sarl sahf sub imul ja movabs jmpq and in xchg std xchg mov test fdiv cmpq or movabs test and mov faddl (bad) mov push cs int repz (bad) xor rex.WB adc std cmpsl lret xlat std xchg or (bad) (bad) or iret insb cli rcl cmp retq add jge (bad) jnp pop lea xchg out (bad) movsb mov fwait or rex.WR add (bad) (bad) pop pushq push fimul (bad) pushfq movslq insb (bad) outsb rex.WXB es jae (bad) cmp rcrb imul push xorl (bad) jno lret adc mov push xchg sub outsl rol sub js popfq pop (bad) xor jno stc (bad) repnz rex.RB lods movsb rex.W xor cwtl clc lret sub adc (bad) cmp jrcxz mov jnp iret insb jne (bad) and rcrl rex.RX (bad) hlt iret pop lods push lret fidivr rcrl addr32 shrl test (bad) cmpsb (bad) rex.WRXB gs imul enterq rorl mov (bad) fs rolb sbb fsubrs (bad) fwait (bad) adc sub retq cmp and jp sub roll movaps imul out andb pop hlt loop stc fcompl cmp rcll sub (bad) int3 jrcxz (bad) callq adc rex (bad) (bad) xor mov mov pop jp add pushfq push and lods sbb add add (bad) gs mov (bad) lret sbb (bad) jns repnz (bad) add and je sub repz mov (bad) rex.WXB sbb jns xchg mov rex.WX cmp rex.RB jg mov addb rclb scas (bad) (bad) bnd push pop (bad) fdivs and sub (bad) int xor cmp lret fsub rex.W ss xchg xor xlat adc repnz (bad) (bad) rex.WRXB pop or lock (bad) addr32 sbb neg cltd cmp jp (bad) (bad) hlt rex.WRB mov fstpl js (bad) sub sbb loop rclb cmc rex.RB imul fstpl loopne sub (bad) xchg test jg sarl enterq fsts jb pop movabs icebp (bad) mov sarl or repnz addl ror add pop movabs xorl (bad) test jbe jmp ljmp sub fwait cmp jg xor rcrl xchg or shrw push pop es adc lret es (bad) mov jbe mov sub roll add xor mov rex.R test mov or mov push pop rol gs movabs jle roll stc add (bad) fwait imul jo shlb std jns cli adc movabs (bad) adc scas xchg repz push cltd add in xor (bad) sbb (bad) jne test sahf rorl (bad) pop (bad) pop add xchg sbbl mov sbb scas addb mov mov xor xchg adc hlt (bad) stos sarl (bad) ja (bad) out testb rcrl loop cwtl leaveq xchg (bad) mov sbb lahf lret pushq mov notl out mov cmp adc push xor xchg and push push sbbl lret mov (bad) and icebp lahf adc (bad) out add sbb pop out addl ror retq rex.B rex.RX sub icebp in rex.B leaveq push cld sub (bad) xorl icebp lret (bad) rex.WRXB loope pop mov sarl jno xchg sbb retq mov callq rex.XB mov rorl add or jmpq test clc push xor (bad) ja (bad) retq in sbb rorl fadd stos jb cmp mov std mov data16 xor (bad) addl mov push rcll loope xor cltd (bad) or sti sub rex.WR cmp lret callq loop fnop (bad) (bad) mov out (bad) ss loope mov sti xor sub (bad) (bad) cmc or adc add rex.X jb (bad) lods rex.RB cmp (bad) shll mov std rex.B xchg jnp pop push roll scas rex.WB repz cmp (bad) (bad) xlat cmp repz decl (bad) lods (bad) sbbl cmp xlat imul or in sbb sbb loop mov xchg mov push (bad) (bad) in imul mov (bad) pop or movslq sub cmp sub or shll clc rex.B (bad) lret xor mov adc xor push roll jg xchg (bad) (bad) sahf xor cld loop push rolb and fdiv mov mov addb (bad) jp mov stos fcomps rcr scas cs xor jrcxz (bad) xor rorl frstpm(287 (bad) mov rex.RX rex.WX xchg (bad) test psrad adc push mull or stos fistl sub insl rex.B repnz fld test (bad) lret cmp xchg int cmpsl mov fadds test (bad) icebp sub lret rex rex.B shrl rorb stos rex.RXB lret adc or cmpsb roll jb rex.WB (bad) cmpsl shll xchg push cmc and imul shll sbb or test pop (bad) out outsb rex.WX out jge jae (bad) mov (bad) stc fisubl mov (bad) lret xor add stos (bad) add fidivr fild divl push mov or or adc xchg movabs out fild sti sbb rorl lret (bad) sbb add rorl or pop stos push add adc jbe sub adc ds or std (bad) (bad) lret jns xchg mov std sarl gs popfq mov pop (bad) mov jns mov decl jmp lret cmpsl pushfq movslq repnz hlt movabs mov fldenv xchg out rcrl shlb mov sbb stos or out mov stos (bad) (bad) enterq lods (bad) sbb sub rex.B rex.WB adc xchg jno incb adc insl in sub shr movabs rex.RXB shll rex.X lret mov ss rex.WR jb outsb in shl rcl (bad) rex.WB (bad) roll cmp lock mov or fwait rex.WRX mov mov (bad) out movabs ja rex.WX sub rclb xor rex.WXB mov rcl fsub xor sbb (bad) jae outsb sbb jnp xor (bad) out mov mov popfq mov xor ss jmp xchg jne (bad) fisubr push (bad) adc cmp cmp cli out negl out cmpsb int3 pop sbb stc xor push sahf in movabs or sahf adc in rex.RX insb shll and rcll incb (bad) adc push pop (bad) (bad) and (bad) cmp es or mov (bad) fisttpll movabs out rcl pushq mov mov pop cmp (bad) scas repnz xor int insl enterq adc xchg retq and add rex.XB xor adc lea push (bad) xor fld iret adc xor xchg or jle mov shll xchg lods rorl push mov and rex.B jno retq or push (bad) xchg cmp xorl sub adc enterq loope or jns shr rex.B cld or cmp hlt (bad) or sub loopne in insb (bad) ficompl gs jmp es mov jrcxz pop rex.XB ja movabs cs mov (bad) (bad) and fsubs pushfq push pushfq (bad) (bad) jno pushq in (bad) mov jae (bad) xchg push jmpq (bad) mov xlat roll sbb shll and mov pop xchg sarl (bad) ja (bad) je pop xor (bad) movsb rcrl mov or enterq lea shl jrcxz lock pop loope insb sahf jle (bad) clc pop loop add rcll adc in add jo push rorl es (bad) xor imul callq clc pop cmp (bad) push shll (bad) mov adc rex.X pop callq adc jae movslq adc add jp retq push rex.R xchg pushq lret cltd movslq (bad) testb outsl stc lods xchg (bad) callq gs insb bnd (bad) cmp adc (bad) rorb rex.W (bad) std movslq shll push (bad) mov in mov or (bad) callq mov rex.RB cmp retq jno (bad) sub jb rex.RXB ds mov lods adc (bad) push and shll add jmpq sbb lods jrcxz test mov movabs mov repz sbb rex.XB mov lods div test xor lret sahf (bad) adc sbb sti xchg int rex.WX data16 xchg (bad) (bad) leaveq movabs loop pushq cmp mov push xor sbb sahf and mov rex.RX int icebp xor shrl cmc lods (bad) mov push (bad) (bad) pop mov jne add rex.WRX ss std and iret rolb pushq stos mov mov iret (bad) xor (bad) lock (bad) (bad) (bad) lea sub add mov (bad) leaveq jns sub out pushfq sbb movabs movabs jno js retq mov pop pushq rex.XB (bad) (bad) mov test pop test (bad) jmp repz add popfq add add adc xlat rex.WRX jno rex mov (bad) rcrl jb mov (bad) lahf rcrl shll or (bad) (bad) enterq ja repnz rex.RX xchg test in jle rex.B movsl rcrl mov xor add push roll xor (bad) and xor ds or (bad) rcl sbb rol out xor lret out ds enterq mov rex.WRXB sub (bad) sbb sub (bad) rcr retq fcompl lods xchg jae (bad) rex.W mov (bad) orl frstor rolb pop sub es sbb rorl adc (bad) xlat adc out imul mov insb sbb mov enterq pop (bad) mov push leaveq cmpl ficompl (bad) adc sbb jmp xor sahf (bad) ds jle mov outsb nop jbe retq mov and rcrl mov out add movabs faddp rcll adc enterq rcr (bad) fdivs mov rcr (bad) jge cli int lret cmp stos (bad) loop xor pushfq js rcll push (bad) rex.WB pop out sub push (bad) rex.R roll jo out cmp rcll (bad) jns push (bad) rcr (bad) nop rcll sub orl pop shrl pop xor sub (bad) rdmsr pop rex.B js sub in push (bad) rex.WX add (bad) mov xchg and sub (bad) fnstsw cmp iret rex.RX pop cmp mov (bad) adc rex.X xorl (bad) and and leaveq sbb movabs push pushfq rex.WRXB rcrq (bad) sarb sub out mov (bad) add (bad) sub jbe popfq rex.RX rex.XB rex.RX insl jno xchg in rex.WRX pop cmp pushq gs addr32 xor fidivr out sahf fyl2x (bad) fs (bad) xor in (bad) jbe sar cmpsb sarl and sub xchg repnz stos (bad) xor pop pop jnp fdivrs orl jbe jo add in and fs pushq scas rex.WX rex.R (bad) imul (bad) mov adc movabs and nop lods rex.WRX (bad) int or jg je sbb testb (bad) mov rex.B (bad) jmp add and mov shll rclb cmpsb (bad) jo mov fs sbb loope xor sub (bad) rex.RXB jg lea and xchg rex.WRXB pop push (bad) sahf push rex.B cmp fsubrl cmp rcrl rcll xorl xchg lods (bad) mov lods xchg xchg test lea shll stc or retq (bad) mov mov pop lahf movabs fstpt sarl (bad) in (bad) (bad) lahf (bad) retq shll sbb rcrl lret adc sub ss addr32 sahf xor mov mov and rex.WRXB lock cmc mul (bad) outsl (bad) pop or fs iret callq int3 mov pop rex.X mov test and (bad) lahf enterq add jno sub xor jne pop mov packssdw cmp loope movsl vunpcklpd shr sub cwtl callq adc or (bad) scas and rex.B fxch lods movb xchg icebp stc pop idiv xor mov rex.WR test (bad) mov (bad) mov rex.XB (bad) movslq jo (bad) adc repnz ror roll xor add jge mov loopne xor or (bad) xchg jmp fldl mov stos gs push jns xchg in jns xchg mov in push (bad) or mov rex.B mov or or push jmpq (bad) (bad) jo fsubrs mov lods (bad) stos push (bad) (bad) (bad) mov rex.R add push mov adc (bad) out movsb leaveq cmp and (bad) movslq (bad) sub in sbb stos mov mov (bad) callq mov rex.WR shll enterq icebp jnp fs hlt int3 xchg xor rex.RXB mov add pop popfq (bad) test hlt cmpb movabs mov rex.WR subl (bad) idivl (bad) fsubs sti testb xor sbb cli (bad) add fadd push test xchg imul sub insl and cmpsl lock jmpq (bad) mov or rex.RX sub (bad) enterq jp sbb stos jo sub movsb fsubrs sub adc (bad) enterq fistl ss cmpsl rex.R in push negb addl popfq sahf clc jmpq (bad) test (bad) movsb (bad) mov rex.WR xor fbstp (bad) (bad) imul (bad) mov imul xor test rex.RX outsl rex.WRB (bad) in mov (bad) (bad) imul cmc (bad) rorl fmuls retq fsubr xor cmp cli push faddp rex.WRX xor retq or jne movabs movl cmp movsl rex.RXB rex mov xchg rex.XB pushq lods (bad) movslq out mov and mov rex.RXB rex.WRXB pop pop sub mov rex.WB cmpsb adc in stc loop rex.X out (bad) leaveq adc nop and leaveq xor insl (bad) rex.R rcll fldt ss sub fwait or mov lahf add lret (bad) addr32 notl cli cmovl or mov add jrcxz xchg shr adc rcl mov add rex rex.XB cwtl lods cmpsb mov add (bad) js cmp jns in rex.RB (bad) addr32 mov loope rex.WRX or cs adc xchg jp cmp (bad) enterq (bad) in push sub addr32 rorl pop pop stos mov and or ss gs (bad) (bad) mov rcl cmp lret mov jp movabs stc push callq (bad) jbe push enterq xadd fnstsw callq fs mov and (bad) jnp mov ds rcrb stos cltd rex.WRXB jrcxz out rorl lock insb (bad) (bad) sbb rex.WRX add pop (bad) mov sub fcmovnb and movslq data16 (bad) xor movabs add rex.WRXB add movslq ror sarb ror lahf (bad) (bad) out mov shl int insl rex.WX (bad) lret movabs mov pop adc cmp and add int3 mov hlt (bad) (bad) (bad) rol and mov cmpsl (bad) (bad) mov sbb add fdivl jb std mov xchg testl loop sub (bad) pop rcll sub cwtl (bad) stos mov (bad) decl push sub cmp sub mov (bad) add xchg movsb shll (bad) in pop fstl cltd sbb andl mov rex.WRX xor mov mov and cs shrl add (bad) (bad) (bad) loopne or sti mov mov retq ss (bad) scas add fdivrl rcrl cmc jl rex.RB (bad) rol sbb (bad) mov lahf mov (bad) lock rex.RB rex cmp (bad) adc (bad) test push jl jg int or add retq movsb add xchg xor idiv movl rex.WR mov popfq (bad) push callq retq rex.RX (bad) scas (bad) frstor pop outsl mov cld pushfq in out je mov adc (bad) adc rex.RXB insb lods pushfq js pop xchg sbb sub sub (bad) jne cli (bad) rex movsl out sbb cmp rex.WB js rex.WRXB (bad) loope ja rex.WX movsl push sarb mov (bad) (bad) adc es (bad) ss clc pop pop mov repz jno scas rex.WR pushq (bad) mov retq rex.WRX (bad) add (bad) push pop outsb outsb jle mov rex.WB rex.WR callq lret xchg in sub pop in rex.WR sub xor cmp sti sub pop sahf insl loop shufps fwait cwtl lret repnz callq mov rex.RXB (bad) test adc stc (bad) cmp cli adc mov pop adc sbb and (bad) repz cmpsb and fdivs pushfq rorb cmp (bad) (bad) gs pop test push cmc movabs adc rex mov int movsb cs mov (bad) adc mov (bad) pop loop xchg xchg (bad) js xor lret xchg xor outsl and rex.XB loope or adc jp and popfq jle,pt std ss test adc push or (bad) xchg (bad) mov loopne cmc clc popfq xchg (bad) movabs rorq pop (bad) shrl (bad) fucomi mov je (bad) in rex.R mov movsb (bad) (bad) rcll leaveq int3 loop or rex.RX lret cltd xchg enterq cmp add loope cli pop rex.R or lock cltd sub ror je mov or btc pop (bad) popq cmp rcll movabs imul fdivl or rex.X rex.XB lret shlb shl in and rex.WB sarl add fistp sub mov jmp shl (bad) xchg rex.WRX xchg cs scas and and roll (bad) popq lods outsb push iret rcrl loopne repnz int div loop shll out rex.X roll imul xchg ror adcb movabs in mov movabs fs int3 (bad) xchg cld (bad) (bad) outsl out shll xor jnp cmpsb jmp xchg rol movabs xor (bad) or or loope movabs add (bad) rex.WX add sbb mov jg xor sub sub add cmp test imul (bad) (bad) ss push (bad) xor rex.WB xor out (bad) jno rex.RB rex.RB fsubrp loop and jg (bad) add sahf jae icebp out cmp cwtl jmpq (bad) cld jnp icebp cltd sti fpatan (bad) in xor rex.RX pop xchg and cmp push enterq int3 orb mov movabs adc (bad) (bad) jp xorb idiv subl xchg jne movabs scas (bad) adc rex.WB jo (bad) (bad) jge (bad) in imul lahf repz jne movslq retq or or mov test test sub idivb rex.WRX or xor xor cld enterq fdivs jp test adc add jns mov imul (bad) loope fldl enterq cmovge push adc (bad) mov or loop and cmp (bad) jp mov xlat rex.WR movabs sbb rex.RB loope enterq sub insb int rex.RB loop,pt (bad) mov jae leaveq movb outsb pop pop (bad) jo lret rol xor push push (bad) fwait sbb lock rex and (bad) (bad) rol (bad) or (bad) add sub repnz jno (bad) rex.B mov xchg fs and rcl or movslq stos rol lods mov push data16 movsl mov int3 cmp js (bad) sbbb out and adc rolb cmpsb mov out jb add lods mov std push rex.W jb and movabs (bad) and (bad) faddp jmp rex.B gs loopne (bad) xor enterq or pop sbb add mov push cwtl out or movabs retq sub push cmpsl pop out mov cwtl lods shll ja xchg (bad) repnz adc (bad) movabs cmpsl movabs jns push in addr32 int add movd movslq cmpsl pop sahf fs stos mov (bad) mov outsl loope cmp fbstp push addr32 mov cmp xchg movsl fildl pop xchg adc pop add sti faddl sbb (bad) movabs rex.WX movsb (bad) ja sbb (bad) (bad) jae xlat loope mov nop rex.XB movsl pushq xchg es out rex.WRX cs (bad) cmp sbb lods push sub flds (bad) shll test lock repnz cwtl mov push iret cmp (bad) (bad) mov rcll (bad) movabs jp sbb shrl (bad) lock sub ja (bad) (bad) je imul add (bad) mov xchg (bad) icebp es (bad) cmp rcr xor mov rex.WRX cmp shr enterq rex.RB rorb jle (bad) xchg sbb jno rcrl lret out rol fcmovnb movabs scas push lods xor sbb pop movabs xchg add loop mov rclw rex.XB (bad) je (bad) mov (bad) pop loop movsb mov sbb xor rolb xchg pop ror repnz js cmp rex.WX mov (bad) leaveq lods pop mov testb retq jp adc pop retq movsb or scas decb insb mov (bad) cli jmpq fidivl callw shll mov mov rex.W nop push mov scas sbbl scas rorl (bad) movabs nop xor rex.WR push sbb or pop add sbb lret lock (bad) xchg xchg rcll push pop (bad) xor pop lea (bad) jno pushq adc rex.WX xchg test add shl fs mov (bad) or scas push iret callq movslq movabs (bad) lahf push iret xor in add movabs or fwait loop setae or and pop mov cli add lock add (bad) ds mov or out add and lahf js imul mov ja movabs int3 cltd stc push outsb lea cmp xor (bad) shll mov fisubrl shrw lea iret xchg xchg movb shlb pushq rcll mov add (bad) in (bad) stos rcrl cmp lret sbb sar xchg cld rorl movabs xchg cmp movabs adc and adc pop (bad) callq (bad) jne xchg lret lret add rex.WX shll enterq int addr32 cltd mov loopne scas rex.WX je sbb rex.WB out xchg rcll testb movabs lods jg rcr lea rex.R or movslq cld (bad) imul (bad) mov popfq lods data16 fwait out (bad) xchg adc in sarb shrl int hlt xor mov cwtl mov xchg cmp (bad) movabs mov (bad) jae (bad) (bad) shl out stc mov shll push or fsubs test pop or rex.RX and out js (bad) mov scas rex.WR mov imul scas rex.WB lret fwait xchg retq adc (bad) frstor sarb retq add rex.WRX test mov rex.X je lret (bad) mov shll shll insb enterq sub pop sub mov (bad) cmp adc (bad) and (bad) insb xor jae (bad) shr rex.WXB (bad) xor sbb mov js pop mov cmp jge jno test rex.B (bad) mov rcrl (bad) (bad) sub rex.XB sub push lods xchg jbe out pop rex.RX mov iret stc pop push mov xor or out test rex.B (bad) test pop cmpsl jno cmp mov ds fldenv cmpsb mov (bad) insb (bad) lahf xor mov gs sub (bad) insl or fmuls std adc rex.RX (bad) mov callq shll sbb or leaveq push pop shll outsb (bad) rcr stc xchg xchg in (bad) (bad) sub xor (bad) adc cli fnsave addr32 jmp ja adc shll (bad) (bad) mov je pop out xorl or mov test (bad) enterq rex.RX (bad) and mov rclb scas rex.RX rcll test pop test repz jge movabs out rcll lret mov mov retq fdivl fidivr in shrl mov pop mov push movslq xchg mov rex.WX or in rex.RB rol fidivrl rex.WX ds jne and fdivr jbe sti orl cmp sbb mov (bad) mov (bad) and (bad) imul ficompl and sahf mov mov adc retq (bad) lret (bad) ds sahf xchg or xor sub scas rol jae xlat nop movslq (bad) rex or xor xchg sbb fwait mov addr32 mov callq test adc rex.W xchg outsl push out add scas sub adc pop rex.RXB loope sbb mov adc jrcxz cltd xor and (bad) (bad) movabs sbb insb cmpsl rex.WR (bad) cmp xorb rol rex.WB loopne ss (bad) fisttp mov fstps rex.R mov (bad) icebp (bad) (bad) add sbb iret xor callq (bad) fcmove jp xchg movabs add fadd fidivrl push loop rex.RXB ffreep rolb ds rex cmp lock pop mov (bad) cmc xchg push pushq mov cli add js or jmpq (bad) mov movabs push rex.RB (bad) divb (bad) mov push mov andl cwtl jmp divb rex.RXB movsb stc mov or orb cmpsl (bad) stc xchg mov pop mov add hlt movabs lock cmp test (bad) fdivl test xchg mov and pop jg jg rcrl jmp xlat imul adc adc push scas loop cmpl mov (bad) rex out test repz add roll lods cmp mov mov xchg in push repz lock fisttpl pop imul push (bad) or stos jno stos xor jl mov xor movsl pushq xchg mov roll push jmpq (bad) mov roll clc (bad) in (bad) adc shll mov rex.R out outsl mov rcll (bad) mov or jge (bad) xor rex.W xor callq fisttpl (bad) sbb sub std mov add (bad) xchg xchg jrcxz movabs stos cmpl movsl fs (bad) pushq push lods add (bad) ja lahf pop jae mov mov rex.RXB gs adc ror test mov xor rex.WB mov rex.RB sub (bad) add sbbl push (bad) jae xchg (bad) sbb jb sbb xchg fcmovbe movabs rex.WB pop iret (bad) movsl mov mov and and lret fsubp xor (bad) adc fucomp lret (bad) mov divb mov mov add rex.WXB pop (bad) xorps imul (bad) fildll std cld rex.X (bad) rex.WRX xchg sub cwtl rcll rex.XB loope rex.W rex.RXB xchg mov xor mov lods clc adc jnp cmp jns,pt mov fisubr (bad) cmp movabs in mov xchg (bad) and shll loope xor (bad) (bad) (bad) lret xlat (bad) pushq jle and sub (bad) (bad) (bad) in lahf or mov out (bad) cmp loop xchg mov callq outsb sub rex.X fisubl cs int and xchg add outsb (bad) jae out fidivrl movabs sub add mov add movabs ds mov rex.RXB int sti pushq (bad) mov rex.XB add in pop pop movabs and (bad) clc mov jae rol adc (bad) stos lods test pushfq rol mov fs shrl rex.RB mov jmp and sbb rex.WRX rex.RXB sub xor lret stc adc popfq and jns sbb shll or stc or retq sahf sub out adc pop xchg pop test jno (bad) jbe (bad) test clc and loop std xor repz mov xor (bad) add ds andl ja mov cli mov iret sbb std (bad) pop xor pop sub rex.RX mov sarl sub pop rcrl shll xor insl fwait (bad) test out (bad) repz mov push scas and mov xchg pushfq mov cwtl push xchg pop add inc sub push xor add xchg shll stc (bad) shll mov enterq fistp sbb rcr sub push stos fnstenv and in rex.X fadds sarl (bad) icebp (bad) cmp fsubs shrl (bad) push roll (bad) cld shrl stos js pop cmp (bad) cs fisttp rex.W rex.WRXB xor addl push push stos rcrl xchg mov jmpq cmp and jrcxz and (bad) (bad) loopne mov (bad) rex.WRX rex rex.RXB data16 test xchg and mov div (bad) cld fucompp loopne callq pop sbb jns (bad) retq mov sbb adc fsubrs mov lea sub outsb rex.RB mov add jge mov mov jp mov loopne jmpq cmp pop rorl pushfq data16 xor (bad) insb (bad) movslq leaveq or mov (bad) (bad) sub rex.RXB roll loopne icebp out int (bad) test adc cltd jne sbb jns rex.RB or sahf rex.RXB xchg cmp push pop xor (bad) push add shll jg (bad) (bad) movslq hlt mov jrcxz rcr adc sbb stos cltd pop movsb lods or sar (bad) mov (bad) cld (bad) in out gs (bad) rex.WB pop and and mov cmp rex.W repnz lods jo outsb in and roll cs std rex.WXB rex.B (bad) add (bad) mov rex.WRX adc (bad) rex.WR insl clc adc in in fisubr jo (bad) loope (bad) xor lock xchg push insl mov sarl enterq jbe movabs retq pop rex.B or jo lret fldcw sub callq pushq retq (bad) pop js jb lret iretq rcr insb sbb or (bad) mov data16 rolb (bad) lods rex.WRB movabs (bad) rex.WRB mov mov or insb (bad) outsl movsb xchg cmp mov (bad) stos and in xor pushfq stos (bad) xchg sub jbe sub mov cmp mov mov test pushq (bad) (bad) or pop mov out es (bad) retq jbe ffree fcomps jmp (bad) rcrl es outsb fnop ffreep rex mov xchg test fmull (bad) rex.RXB (bad) xor mov nop xchg pop js cmp or mov sub add xor rex.RB out sub int3 rex.WRX mov rex.B bnd gs adc rex.RX fdivrs mov add fmull (bad) xor push xchg (bad) jbe loop (bad) rex.W jle retq mov mov (bad) cmp mov and and jl mov pop jl retq sub rex.B fwait sbb xlat sbb cmp adc popfq movabs push xchg mov out and jnp xor js shlb test lret (bad) and jo (bad) in sbb out push (bad) stc xchg pop (bad) gs xor push popfq jg (bad) shr retq and (bad) push lea cmpsl roll (bad) and adc lahf rex.WX xlat sbb mov roll pushq rcrl pop mov push lret adc xchg (bad) adc mov (bad) mov movabs (bad) rex.R mov shll imul cli movsb jb lret (bad) insb rex.WX imul xor sub (bad) rex.RB rex.X rex.RXB (bad) fiadd pop rorl movsl (bad) mov fsts or (bad) enterq (bad) stos rex.B rex.X retq shrl (bad) push je addr32 insb addl (bad) movabs (bad) (bad) cmpsl mov (bad) (bad) cmpsl xor mov fisttp clc pop adc js iret (bad) push sbb (bad) sbb add (bad) leaveq nop retq out (bad) movsb lret loop mov jl sub (bad) test xchg imul shl fs nop (bad) adc out sbb mov cmp (bad) xor test popfq roll lock sbb (bad) cli xchg mov adc ss in pushfq shrl movabs rex.WRXB sub jmp (bad) jl cli rex.XB test xchg mov repnz jrcxz lahf sub sbb jns (bad) (bad) cmp xor jb push in lock movabs xchg imul rex.RB (bad) mov cmp pop fwait out ficom rex.WR (bad) (bad) stc pop addl cmp fdivs and je testl (bad) movslq (bad) or rcll add mov in js fcomps imul ja popfq mov stmxcsr (bad) (bad) (bad) mov rex.XB rolb addr32 loope xchg imul movabs cmp rcll (bad) pop in sbb rex.WXB xchg rex.B clc insl push rorl fwait xor (bad) fidivrl xchg add out rcll sbb jl movsl xlat pushq (bad) lea pushfq cmpsb (bad) xlat pop xlat mov pop (bad) sarb (bad) out (bad) movabs jns loopne loope (bad) lock lods (bad) cwtl fsub insl mov retq test shll nop rex.W ja mov (bad) lcall cmp test lods xchg sbb mov cmp rex.WRX movslq xchg lods xchg shrl or (bad) inc in sbb add (bad) icebp xchg scas fstl cmpsb faddl pop sub nop xchg cmp divl retq and shrl lods pop sarl incb (bad) cmc adc fistpl jbe cltd stc pop cmp mov jmpq in and and and repnz enterq (bad) stc adc or cli add cmp in int (bad) movsb enterq mov iret push sub retq outsb xor in jns test (bad) mov sub int xchg in sub sahf rolb mov iret (bad) and fmuls mov jmpq rcll retq (bad) rex.B scas mov (bad) (bad) push movabs sti xor rex.B lock pop sub clc je adc (bad) in (bad) fs jno mov or mov (bad) jno and imul pop out rex.X imul add (bad) cwtl cmc std leaveq movabs stos mov retq retq mov (bad) insl rep (bad) movb jge imul pop sub (bad) xor mov cmp add (bad) mov xchg pushfq cli std pop (bad) xor in jl scas adc (bad) or xchg iret (bad) xchg sub loope in rex.RXB out mov jge adc sar xor add and adc out xchg sbb mov mov xor push sub mov std (bad) in imul jmp cwtl shll pop xor (bad) jbe jle sbb lods add mov pushq rex.B push (bad) repz fsubs pop lret mov or scas vmovlps repnz fs out mov xor sub stos xchg jg movabs insl rex.WRX (bad) mov jp mov rcrl icebp rcr add and sub fldenv adc in mov add (bad) sub loope fsub mov rex.R xor sarl and enterq adc sbb jle push (bad) iret pop (bad) (bad) push sarl jbe nop rcrb rex.WRB rex.B cs retq cmp push out roll ficom (bad) add (bad) jbe (bad) (bad) addb in and add (bad) mov mov pop js cmc cwtl xchg ds fstps frstor faddp js push xchg mov in rorl (bad) outsl orl in pop stc sub fldcw push add jge adc rex.WB mov xor or xchg fs sarl or lret rex repz fistp xor mov cs sbb sub adc and mov pmullw add movslq mov lock stc (bad) mov pop rex.WRX or sbb (bad) (bad) (bad) rex.RB rex.WXB rex.RXB fistl jge push sbb stc xor loope (bad) loope (bad) repnz rex.WX mov xchg int3 sbb mov sub scas mov xchg mov xor rex.WRB xchg rcrb cmpsb (bad) cwtl in pop notl mov or sbb rex.WRX (bad) jrcxz test and stc mov adc jne push (bad) (bad) int3 jb pop movabs test jno packsswb leaveq sbb scas (bad) sbb xor (bad) push pop test iret test (bad) sbb sbb in xchg stos mov stos rcll xchg shr rex.WRX iret (bad) int push stos shrl ja jle hlt (bad) jne outsl sbb rex.B fcmovb rex.WRB (bad) adc lret sti data16 sbb (bad) movabs rol fcomp cld jp mov movabs out test xchg imul fisttp mov nop sbb sub (bad) out jnp movabs (bad) mov jp rex.WRXB repz (bad) jmpq pshufw test shrl (bad) mov test enterq (bad) (bad) add xor xchg jge jo shrl lcall pop sbb movabs test jg adc cwtl roll adc cmp (bad) fnstcw int3 movabs rex.WX cs lahf (bad) lret sarl orb movabs fs mov push movsb std (bad) jb iret lods (bad) scas or stc and pop in mov xor ss jnp gs fistl loop retq mov mov mov push jle iret jns mov (bad) scas movb (bad) rex.WRXB rcll push jg jle or sub jne and and pop cwtl rex.RX cli rex.WRXB rex.XB jns,pn push loope mov rex.WRX data16 mov movabs jb pop or lret xor add lahf (bad) (bad) movsb mov (bad) (bad) mov shl loop (bad) xchg fistpll rex.WX lret rex.W jb pushq xor cs hlt cmp xchg mov fcoml jns (bad) pop mov pushq scas enterq shll lret (bad) push or shl movabs movabs mov mov jmpq sarl push clc roll (bad) nop mov lea cwtl sahf jg insb out shrl xor xchg push mov fcoml sbb movsl push rex.WX imul lret movabs mov (bad) fimul icebp (bad) subl stos (bad) mov sub or (bad) movabs adc loope xchg ds (bad) (bad) xchg retq push repz (bad) enterq vmovshdup sbb xchg xchg mov out cmp or insb (bad) jnp ds shrl (bad) fnstenv rex.WR (bad) add xchg sub cmpsl (bad) (bad) cwtl push (bad) (bad) (bad) add cmp in (bad) (bad) push (bad) movabs mov movslq add addb movabs cmpsb mov or fwait lods mov mov xchg enterq pop adc or sub adc mov or movabs sbb shrl test shll mov lahf push cli rorl enterq pop scas fstp js cmpb or mov push (bad) xchg cld ror (bad) sbb (bad) loopne add (bad) jnp xchg adc fs repnz xchg cltd pop rcl int add adc xchg xchg rex.XB (bad) movabs fisubrl rex.RB fstpt push repz and lods add icebp (bad) adc shrl or callq rex.WXB rex.B data16 (bad) (bad) (bad) rcrl pop lods pop cmpsb rex.WX ss pop movabs out (bad) movabs (bad) (bad) test andl out jb addr32 and mov rex.RB rex.WRX jmp cmc (bad) clc retq adc addl pop test cmpl cmc imul lret lea sbb xor sbbl jrcxz adc (bad) leaveq push mov nop pop incb callq cmp mov or repnz push adc movslq rcll cltd lret test addr32 test jb push xor fidivrl mov shl lahf mov (bad) xchg fstl cmc (bad) (bad) nop and mov movabs (bad) pop xchg (bad) adc movsb idivl and mov mov sub (bad) (bad) (bad) xlat add fisttpll out rex.WRXB lods hlt add rex.WRXB mulb rex.B repz fimul push leaveq xlat cs (bad) jbe rorb and adc (bad) cltd mov cli add sub callq mov scas mov nop sti loop repz (bad) loope (bad) (bad) jp insb sbb mov gs int3 adc jns mov mov xor incl shrl or movabs js rex.WX out int (bad) (bad) fstpt rex.RX hlt or cmp movslq pushfq mov sub lret jbe or sub scas nop (bad) rolb ss callq (bad) push (bad) pop pop add or rcrl add sbb in rex.WRB (bad) (bad) xchg rex.WXB jrcxz and rex.R mov fs rex.X (bad) in movabs sahf pop je repz sub fnstsw and xchg (bad) xchg sarl push cmp rex.WB shl mov ss rex.WRX test int3 xorb rcrl iret (bad) sbb js mov stos cmpsl and jg adc shrb fsubrs adc test imul retq repz (bad) xor callq (bad) rex.XB fcmovb mov sbb test cmpsl fwait and imul ror xor mov (bad) rcrl lahf cwtl es and mov (bad) sub scas ja int mov rex.R movsb callq rex.RXB outsb sbb sub push cmp mov rex.RB (bad) callq or sti add mov cld or mov mov xlat (bad) (bad) sbb imul sar movabs movabs sub ror rex.RX (bad) imul xor repnz (bad) push xchg gs mov mov fsubrp jno mov shrb sub rex.WX lea xlat or mov jle (bad) addl push rex.WB rcll je retq xchg rex.B add movabs test sub in mov rex.R pop ror inc negb adc or xor mov lahf cmc repnz mov jo ss roll cli (bad) mov jnp movabs rex (bad) lea std (bad) mov out stos hlt cmp rolb cmp rex.WRXB (bad) xor pop rex.RB roll xor sahf mov addr32 (bad) ficoml xchg (bad) outsb mov rex.RX rex.XB ss (bad) cmpsl in lret mov insl or pop (bad) xchg test add or lret fbld jp out xchg retq movsl mov (bad) rex.XB bnd (bad) adc jmp callq push cmpb mov pop jae jae (bad) ds rex.RXB outsb andl decl (bad) addr32 jns jmpq xor and rcr cmp loopne shrl pushq pushfq test cld cmc pushfq or shll test movsb ror rex.B adc sbb scas add cmp xchg xchg (bad) mov iret ficom icebp xor xchg out rex.XB std pop sub mov sarl fsts addr32 loop (bad) js pushq movsl xlat xor int3 mov mov jrcxz fld pop xor nop lret rex.WXB rex.WR subl xor sti (bad) iret cvtps2pd sbb inc adc (bad) xchg mov rex.XB loope and (bad) or enterq repz fsubrp test xchg sti retq lea xor gs int3 xlat xor sbb pop adc xor (bad) rcrl orb xor lahf sub test loop imul (bad) (bad) fstl jo pop test (bad) cmc (bad) sub int3 std ja rcrl pushq xchg adc (bad) js pop movabs mov add lret mov callq xor mov add out flds xchg mov in rcll (bad) and in fmull add je std xchg loopne rex.RXB loopne (bad) repnz repz rex.RB fsincos (bad) xor jrcxz pushq lods roll (bad) (bad) (bad) rex.WB gs jae outsl in sbb mov (bad) xchg rex.WRX sub retq out (bad) (bad) add pop sbb test mov out cmp add fisttpl fbld (bad) (bad) mov fidivrl movabs es sbb mov stc out rex.RXB rex.X stos cmp mov xchg int3 sub add rex.WRXB xor repnz fidiv stos xor (bad) mov xchg rex.WRXB repnz mov (bad) add sub rex.RXB rex.WRB nop fs (bad) rex.RXB xchg (bad) xor adc xchg loop cmp jrcxz rex.RXB xchg outsl fdivp pop fs (bad) or lock divb add push cmc stc sub subl in add sbb lahf rorq add or mov add loop (bad) movsl rcrl rex.WRB mov hlt pop mov cmp pop movsl movslq (bad) ss shrl or and rex.RXB icebp rex.B (bad) shrl fwait cmp (bad) shl pop xchg cwtl and outsl (bad) lods rex.B repz (bad) mov leaveq cltd (bad) lods add stc (bad) pop and sbb loop stos retq (bad) push (bad) cmc sahf mov cmp lret xor jg roll (bad) pop (bad) (bad) lods in (bad) fyl2xp1 cmp mov sub je xchg decb xchg out out fwait adc shr imul int3 ds rcl add pushq (bad) hlt sarl (bad) rex.WRB adc adc or roll pushq rex.X (bad) movabs jb (bad) cmp outsb sbbl cmp hlt movabs mov jl iret xor rex.B rex.WRB jmp adc cmp (bad) outsb mov int3 movabs insb or pushq repz pop (bad) and stos sub cmp rex (bad) (bad) out (bad) (bad) int3 pop or jle rex.W or rcrl rex.XB and mov fisttpll test out movslq je (bad) mov hlt jmp cmc mov push jae pop outsb xchg sub sti clc cmp repnz stc stos movsb in callq jge sub in rex.R (bad) xchg cltd callq (bad) rex.WRXB movabs sub shll (bad) sbb rex.R mov loopne scas lahf outsb outsb (bad) out or sub retq xchg jae (bad) test fucom mov xlat mov (bad) fld in and int3 (bad) jns rex.X out fucomip or std sbb (bad) lock and cmp push mov rex.WB adc test push or (bad) out sub mov rex.WRB add (bad) test (bad) adc jbe rex.XB rex.WXB pushq xor adc mov and or scas adc (bad) and mov sub pop rex.WRX sbb fiaddl (bad) (bad) ficompl js adc stos shr (bad) mov (bad) pushq xchg (bad) (bad) int loopne cmpsb mov mov out mov (bad) rex.WRB (bad) in mov repz fistp add pop rex.XB in jno mov cmp shll (bad) lahf rex.WRB sub or mulb jmpq pop push (bad) mov pushq sbb clc (bad) rex.WX (bad) int3 or fucom js rex.XB shll sbb (bad) adc icebp (bad) fadds add adc (bad) pop sbb in xor int3 (bad) icebp sub (bad) rex.RB mov mov imul xor sub test (bad) sbb imul lret adc pop cmc mov adc xchg xor jl jae xchg rex.WB lahf jle add mov mov psrlq xor or pop cli out pop jmp add rorl sbb mov rex.WX sbb and pushq test clc sti jmpq rex.RB xor repz (bad) ja and pop xor jo (bad) loop rex.WRX fs out rex.WXB cmp rcrl loopne mov jp packuswb (bad) (bad) movsl adc (bad) sti rorl (bad) sbb cwtl leaveq mov fxrstor jae js (bad) rex.WR rex.W cmpsl rcll adc imul lret loopne mov cmp (bad) callq outsb fs rex.R (bad) xlat mov push push js (bad) cmp and (bad) popfq jg xor jns mov xchg jrcxz rex.RXB (bad) cmp or xlat (bad) fstp sbb sub imul shlb xchg cwtl mov fcomps cmpl xor rolb sbb roll mov movabs xchg xor retq std rex.RX es mov xor mov rcll pop rclb pop in repz rex.B add rex.RXB out ror push and in rcrl jrcxz fistp cwtl (bad) fsubr mov add test jg lret ja add and xor cs (bad) (bad) (bad) mov ror sub jle pushfq (bad) mov lret (bad) dec (bad) pop (bad) lods int3 (bad) xchg mov sbb rex.WRXB sub rcrl rex jmp sarl imull or in xchg movabs rex.RXB (bad) jno fmul sbb mulb xchg (bad) je movabs or jne int (bad) mov sub sub out in mov stc rex.WR mov rcrl push (bad) out (bad) rex.WR rex.B (bad) in (bad) jne push clc callq adc mov mov pop int3 rcr xchg mov mov rcr push (bad) cmp pop (bad) in gs xor xor jle std int (bad) xor add mov stc cmc rex.R rex.WRX (bad) rcll pop int (bad) int3 adcb add mov xlat xchg add callq fcmovnb jb idiv cmp mov iret or loop sahf rol mov rex.WXB (bad) jle sub lods add (bad) int mov fildl sub sarb (bad) shrl pushq in push fmul mov mov mov mov xchg rex.WR stos push mov (bad) mov and and xor or out (bad) mov rex.RXB jnp imul rcll fistpll xchg rorl jb js and rcr scas repnz xlat rcrl mov mov rolb or lret gs rex.B outsb vcmppd rex.WRB xor fcom rex.WRXB rex.XB adc jns loop stos sbb xchg add loope stos cmp mov mov and push sub movsl mov (bad) loop (bad) or xchg cmp push pop or (bad) (bad) cltd mov and rcrl sbb rcrl test (bad) sub imul push repz (bad) rex.XB (bad) idivb sbb rcrl jns retq cmp xchg pop scas rex.R adc sub cmp cmp xchg push (bad) (bad) repnz mov in callq rcrl mov sbb cmp pushfq rcrl xor sub test stos cmp sarl je fs mov test (bad) sub jl lret adc ja and push mov push movslq and xchg (bad) mov icebp and outsb jo jne xor rex.WX add sbb mov push sarl fcmovbe rex.WR mov mov (bad) and pushq mov fnsave (bad) (bad) or or jo movabs stos or and sub (bad) (bad) sahf jrcxz ja pushfq mov rex.R xchg cmp fistpl rex.RX sahf fiadd (bad) mov (bad) xor (bad) cmpsb (bad) hlt adc add (bad) jge icebp mov (bad) or sub and pop movabs push movsl (bad) mov movabs and pop fadd mov (bad) scas repz xlat andl or lock rol xchg fdivrl ffreep or fwait (bad) lock out scas or test sahf mov popfq jnp and add clc (bad) pop loop mov adc in movsb push and out shll subb mov outsl movslq (bad) fisttp rcrl pushq add shll movabs mov xchg fidivrl rol mov cmp fstp sbb retq pop pop jbe (bad) cwtl (bad) (bad) loope rex.RX icebp movsl xchg shll jnp sub mov rex.WX rex.WRXB (bad) (bad) cmc iret (bad) jno cmp mov (bad) add cli mov hlt mov xchg jb lret ss or rclb and sarl outsl add jl sti (bad) xor movslq rcll (bad) imul jbe shr push hlt (bad) rex.RX mov int lahf sahf lods shlb loopne sbb or cmp mov scas repnz (bad) (bad) je jmp inc xchg xorb (bad) out rcrl vminpd outsb mov rex.B lock jmp xchg ss (bad) (bad) add mov sub jb (bad) (bad) rex.WRX cmp and icebp jp adc mov mov mov sub (bad) sbb mov shrl add xlat loope cmp (bad) cltd xchg sbb pop xor (bad) pushq sub leaveq (bad) xchg fwait mov scas and cltd xchg sarl retq pushq adc sub sarl or rcrl xor movabs out lea test xor and movsb repz rex.WRX movb or and ja loopne add adc mov mov pop repz mov (bad) rex.RXB lret xchg sbb and mov int or pop add and xchg jns or repz repnz in push scas enterq nop rex.X fisttpll cwtl (bad) sbb rex.WRB in mov (bad) add push pop pop (bad) (bad) stos mov sbbl out or cld repnz ja sarl jo movabs cmp mov mov jns cmpsb ror cmpsl push sub sahf (bad) (bad) adc repnz rex.XB pop sti xchg xchg shrl test (bad) shll cmpsl lret gs cmp (bad) xchg fiaddl pushfq mov movslq (bad) ror in (bad) out incb jrcxz out flds (bad) rex.WX jge (bad) movsl ror nop adc xchg mov xchg fildl and adc or scas outsl retq std xor mov (bad) subl xor (bad) test (bad) mov (bad) xchg in push xor test addl enterq (bad) or cli shl jrcxz test lea sub mov (bad) pop rex.W orl leaveq jge (bad) fcmovne enterq rex.B jne mov fist add jg fstpl test cmp (bad) iret (bad) cmp (bad) test rcl adc mov lret xchg mov loopne sti rex.XB loopne rol add jne (bad) (bad) jae mov cmp (bad) mov mov or jmpq or pop rex.RX rex.WRX and push mov mov (bad) or push xchg mov pop add lea in (bad) int3 faddl rex.X stc (bad) icebp (bad) sbb (bad) repz and mov (bad) lock sub iret push neg pushq mov lock callq iret loopne test (bad) ja rex.X std fld (bad) xchg fwait push jl (bad) stc rcrl jno cmp (bad) cwtl jae cmp cmc mov jae mov xchg or clc cwtl or mov sbb lea and test enterq stc ja (bad) jmpq test rex.WR mov and (bad) js (bad) in fwait jmpq jbe and retq pop xor out int3 and mov mov sub rex.WRXB callq test adc rex.WRB lcall xchg rex.WRX rex.B xchg (bad) repnz (bad) pushfq cmp clc lock (bad) test imul adc (bad) rcl retq mov rorl repnz (bad) sub data16 mov jle cmp cmc fcom (bad) cmc mov out mov xchg jno cmc rex.WRX mov (bad) xlat pop mov lret sub xchg (bad) xchg xor mov scas and rex.W (bad) xchg lret sub iret cmp fsub outsb addr32 fstl fcoml cmp js jo sbb insl push xchg add mov jo in (bad) cld fiaddl rex.B (bad) retq (bad) pushq (bad) movabs mov pop rex.WRB xor xchg stos rex.R sub movslq mov (bad) jp add push or push test sub roll add scas (bad) (bad) jl movsl mov xchg stc in fiadd sbb sbb (bad) testl addb mov and pop sbb rex.XB cmp add loopne jg or (bad) jp sub sub xchg insl int (bad) sub repz in adc nop and int3 gs movabs rex.WB divb mov movabs stc and rex.WX rex.RX pushq movsl mov loop (bad) pushq enterq loope jne retq ss xlat cmp insl (bad) mov fldl or xor cwtl rex.B rex.R pop cld and mov mov and cmpsl (bad) mov or cmp ficomp jp xor jmpq sarl movabs mov push rex.WR mov push (bad) and adc mov lahf or loope (bad) (bad) iret push popfq jae fimul mov lods test or jns fwait sbb rex.RXB jo sub movabs (bad) push test stc add lret pushq xor rex.WRX rex.B nop mov sbb movabs sar adc xchg js roll mov (bad) or jmp xor int3 movabs rex.XB repnz push fwait (bad) int push cmp (bad) cmc repnz gs rex.RX sbb (bad) movabs shrb imull or jp jno rcr jl stc divl out rex.XB clc mov xor sarb mov jno enterq and pop add cmp stc mov test scas imul (bad) sbb cmc iret fwait out (bad) iret push imul test retq jl rex.RB xor retq int3 xchg fidivr or adc jne rex.W loope shl mov je repz (bad) sbb add mov test xchg adc (bad) js ficom (bad) bnd (bad) (bad) sbb and test movabs mov xchg mov addr32 rex.WXB int3 (bad) sub (bad) push imul mov rex.WRXB loopne outsb push decl fnsetpm(287 ffree mov sub js cmp imul add lods mov lret (bad) (bad) test (bad) rorb fwait movabs mov enterq or jae cmp fstpl callq mov mov (bad) test mov rcr pushq and (bad) retq xorb mov mov (bad) rex.WR add fisttpll mov (bad) or rex.WRB lock rex.X fildl jae pushq ss push sub pushq sub rex.WX and mov rcrl rex.WB shrb movabs int3 or jb (bad) sub (bad) jnp sar push pop test js sti rcrl mov mov out shrl rex.RXB loope mov je sarl rex.WX movabs or lock (bad) ss movslq rex.R test mov (bad) rcll cmp xor rex.RXB imul add test loope xchg es movabs fdivs cwtl pushq sbb cmc sub pop pop xor (bad) mov add xlat mov popfq (bad) add xchg stc iret sbb lahf andl int cli jns roll rex.WB rex.RB (bad) mov push push xlat or test (bad) mov retq pop cli xchg add (bad) sub mov fimul pop test rex.RX cmp adc sarb (bad) jo mov rex.X or (bad) jne callq enterq cmpsb repz rex.WB iret add sbb adc and sub (bad) fmuls sub mov test mov (bad) add in xchg in jbe rolb jno faddl sub sbb repnz or mov xchg in jo or lods rex.W pop movabs (bad) fist es (bad) mov (bad) push enterq cld xor xchg movabs (bad) sub rex.WR (bad) rex.WRXB add sub rex.WRX lods lret (bad) fcomp stc sub insl (bad) jrcxz ja rex.XB rex.WR sub add add push icebp lock pop lock bswap jmp imull (bad) loope adc movsl jge mov test jae int je (bad) in sbb and fcomps movsb popfq lea fild jb loopne test fisubl add shll lret add pushq sub adc sbb shll xor pop push test and add (bad) jo out sbb fistpll mov (bad) outsb popfq (bad) sbb (bad) sbb cmp lret cmp push jrcxz retq cmp test jb xchg or xor rcrl xchg xchg rorl push cmp test (bad) pop (bad) (bad) (bad) insl cli rex.XB rex.WRB mov jno rcrl lea insb mov add in rorl jmp leaveq shll add push xorb (bad) (bad) jrcxz popfq (bad) fild shrb (bad) xlat mov (bad) (bad) (bad) rex pop shll insl int3 pop in mov or rcrl sbb xorb jnp (bad) xlat rcll (bad) xor fnstcw (bad) pop fst shll (bad) sbb out adc (bad) rex icebp and adc add (bad) (bad) cmp and js and out rex push push xlat jbe (bad) rclb shll add sub cmp rex.RB ror mov retq rex.WRX jl or repnz fsubrp scas leaveq fwait rolb and insl retq add and add scas out add loop std rex.WRX add pushq cmp (bad) shrl cltd adc (bad) std enterq movabs sahf int rex.R (bad) (bad) and in (bad) cmp (bad) stc xchg lahf cmpsl out rex.WRB (bad) callq mov or add andl pop andb not and lret test rex.WRXB repnz (bad) xchg in mov lock mov adc push shll xorb in (bad) cmp test jge sti pop addr32 add jo cmp mov popfq mov rcll leaveq test or sbb xor mov jno add mov mov and (bad) jnp stos add lret (bad) sub cli sub mov (bad) xor repz cmpsl cmp and rex.X lahf enterq outsl sbb repz loope (bad) and (bad) leaveq gs jns xor out rex.WR in mov lods (bad) pop iret rex.WB sbb repnz sub (bad) (bad) add rex.WR xchg js xor add rex.WB jle mov pop rex.RXB add or callq mov sbb movslq mov (bad) scas mov mov movsb rex.R cs faddp (bad) xor loop rex.WR push cmp adc push (bad) test movabs push xchg movsl movslq negb sub movslq enterq in rex xchg out lahf cmpsl rex.W rex.X mov cmp (bad) imulb (bad) rex.RX mov cltd (bad) mov rex.WX fnstsw mov andb (bad) rex.WRX in mov out (bad) (bad) in pop mov test jb jne pop iret repnz rex.WRX adc rex.WB movsb loopne sub test and iret enterq andl jmp jno sub add movsb mov in (bad) cli (bad) (bad) add popfq jo (bad) (bad) add adc (bad) (bad) jp ja (bad) adc mov rorb rex.W data16 rolq (bad) rolb add xor imul cmp (bad) lret pushq jbe cwtl rclw xchg fsubrs add mov test stc sbb repnz push mov (bad) jp lahf pop or adcl sarl outsl (bad) mov test lea (bad) (bad) xchg cmp (bad) rcr scas mov jle rolb je cltd jmp cmpsl rex.X test rex.RX xor (bad) push push fwait es rex.WB clc rex.RXB movslq cmp rex.WB add pop push rcll lea repz rex.X addr32 (bad) (bad) rex.WRB rex.WRXB xchg (bad) (bad) pushfq cmc out mov in (bad) movb pop xchg or mov shlb movsb movabs sti rcr cmp add and adc int (bad) callq cli cmpsb cmc cwtl js (bad) mov cs mov (bad) out jae lea stc jmpq sar fdivrs rcll mov scas add sar and es stos cs sbb sub sbb pop adc rex.B (bad) xlat (bad) pop pushfq fs lock fbld (bad) (bad) sbb (bad) add fyl2xp1 (bad) lret add rex.RXB rex.RX enterq sbb clc notb lea sub (bad) insb (bad) repnz repz callq push sbb xor in rex.R xlat jb pop rorl stc movabs (bad) fdivrl rex.WR clc rex.WRXB lock (bad) pop mov (bad) mov push add and andb xor sahf jrcxz jbe gs mov xchg rcrl mov out push (bad) repz mov jae jmp movabs movabs es push push rex.WRB callq and xchg jb insl enterq and xor xchg push and movabs sub out cltd (bad) (bad) push sbb and imul rex.WX movsb cmc rex.RB mov sub shr jb rex.RXB roll xor adc (bad) xchg loop rex.B in cmp jg or stos rex.B push (bad) rex.WX and movslq stos or push js (bad) rcrb mov mov mov (bad) outsb (bad) pushq loopne shll (bad) in out sahf sub fimul mov mov testl out or rcrl mov fwait sub or movabs clc push scas rex.WRB jno jmpq adc xchg sarl mov (bad) clc rex.X mov rex.WRB fisubr (bad) movabs pop repz pop (bad) xor jle push movslq (bad) (bad) cmp test fdivs insl rex.WRX (bad) outsl xchg or xor jo push insb int3 hlt and add or out rorl xor lahf insl std rcr lods cmc outsl popfq roll xor (bad) fmuls int3 out pop (bad) sarl push retq fwait xchg (bad) mov jl push add (bad) (bad) cmc push insl pushq or xor xchg movslq mov xor hlt scas lock movabs (bad) cltd (bad) repz and xchg rex.R rex.RX mov mov adc (bad) ds rex.B jbe rcrl jle mov pop xor mov add ficompl lock rex.X repnz mov adc jb mov push (bad) sbb (bad) rex.WXB lods add pushq (bad) sub (bad) xchg int3 mov mov push push and scas (bad) insb iret pushfq (bad) rcl and test (bad) loop jo or and (bad) jne cli int retq xchg (bad) fldl mov mov enterq int3 movabs cwtl cli jns test (bad) movslq jg adc icebp mov mov mov cmpsb lock insl adcl mov sub movabs mov movsl lret add jmp xor cmp rcr pop test mov cltd (bad) (bad) cmpsl mov je lret push movabs iret rcll (bad) jb jg scas retq mov (bad) rex.B jno (bad) push (bad) jb (bad) int sbb cmc mov cli loop fidivrl rex.B rex ss lret icebp xchg rcl pop int or or rex.RB mov jnp (bad) (bad) shlb rex.RXB and retq jmpq lods push sub (bad) rol (bad) rex.WB push cmpsb test movabs sub lock push out (bad) xor xchg xchg (bad) pushq shrl rex.WB ds add js sbb pop add in mov retq fxch int (bad) adc ss and cmc test mov out scas jle pop or lret mov (bad) push rcr movabs jle xor adc push or adc lods or loope jl jo fisubr test fstpt or pushfq rolb (bad) iret rex.WR cmpsb ja (bad) or and xchg movsl xchg rolb icebp cmp mov cmpsb rsm (bad) rcl (bad) xor rex.WRX xor gs icebp pop sub xorl (bad) sub jp xor and (bad) (bad) xchg gs repz lahf fabs ja out stos insl insl mov mov cmp (bad) int ds xlat (bad) cmpsb lahf and test rorl pushq (bad) pop stc (bad) imul in sbb cltd sarl sub xchg cmp rol in cmp loope rcrl adc mov cmp (bad) test std pushq movabs loope and sbb test cli add in mov (bad) (bad) mov lahf loope,pt test jg rcll cmp in sub (bad) sub pop shl (bad) mov iret nop js cli rorl rex.W shrl rep fwait callq cmp sub (bad) ffreep fisttpll rolb int xchg (bad) xor movslq mov stos xchg mov xchg ss sahf add fadd (bad) jno pop rex.WB and jne pushfq cmp rex.B roll or movslq fldcw movabs mov (bad) shrl ja (bad) jno jae (bad) jo movabs and movslq sub rcrl (bad) (bad) (bad) leaveq push xor and pop rex.RXB cli int pushfq in lret cmp add sbb mov and jo movabs xchg sbb add jno cwtl jle cmp (bad) (bad) jne or lret mov shll sbb (bad) movabs (bad) (bad) clc adc xchg ror xor mov add mov pop fsubrl imul scas ss (bad) adc mov mov rex jle rex.WRXB rorl mov (bad) mov xchg cmp setp movabs sbb retq sti mov js adc (bad) pushfq orl push rorl fstpt or orl out mov xchg push add (bad) mov movsl fs insb lret sub xchg mov sbb retq pop push sbb hlt (bad) out add data16 pop imul (bad) (bad) sub in xchg and (bad) rcll adc movslq push es sub clc leaveq xchg in add mov (bad) insl mov sub scas pop xchg (bad) mov ds in jl fdiv clc pop sub rex.RXB loop shll mov mov and fiadd mov rex.B rex.WXB in sub mov in data16 push jmpq pop xchg mov cmp (bad) (bad) and rcr mov fwait imul sti (bad) repz mov mov fisubr push out add cmpl add (bad) comiss (bad) (bad) retq jge cmp push (bad) ss and rex.WRXB in cmpsb insb stc (bad) iret (bad) xor push movabs enterq rcrb lret imul scas subl (bad) or push and add adc mov sahf adc mov add ja sbb shr cmc pop (bad) rex.WX pop repz (bad) std (bad) mov movabs or jmpq imul enterq jbe rex.WR sbb mov jno cli cmpsb sub and or rex.WR fmuls jne mov in and mov fs iret out rex.B rex.XB pushfq rex.XB retq pop or xor (bad) movsb and mov mov mov xchg add adc sub xchg mov ds in lock xchg xchg sarl movsb ja (bad) loop out or xor roll (bad) leaveq jnp push (bad) jns scas rcl ja imul outsl rcll movabs xor sbb rex.R xchg movabs in shlb and push mov (bad) mov fild pushq movsb or xchg pop jrcxz lret pushfq sbb (bad) sbb pop retq xor rex jp sar push xor rex.WX stc rex.WRX in xor sbb roll rex.B jb mov pushfq lods jge and sub lods sbb imul (bad) rorl out push addl add sub and sub and xor fisubr jle mov (bad) fistpl jge add jns nop movabs or (bad) and xchg fstl iret stos adc (bad) shrl int3 loope movabs fdivrl retq enterq xchg mov push (bad) stc and mov or pop rex.WX rex.WR cmpsl (bad) mov (bad) imul add fstpl fdivrl rcr (bad) (bad) rex.WRB (bad) (bad) rex.R xor enterq hlt iret add adc push psubb sar add rex.XB fs in loop or cmp mov (bad) pop decl jmpq test (bad) sbb mov rex.WB rex.RXB lock outsb (bad) sarb repnz fisttpll jae (bad) xor (bad) rcll or xchg mov sub shr cld mov (bad) jne add mov cmpsl mov pop (bad) xchg js rorl rex.WXB (bad) and rex.X mov jmpq insb cmp lret sbb mov jb shl xor je pop fs (bad) fbstp movabs mov shll add mov add and rex.X fs rex.RXB int3 mov (bad) xor mov sub push lret es pop rex.W repz (bad) xor movsb mov enterq mov fldcw outsl and add mov ror and retq jno jns push (bad) (bad) jge rex.B and mov andl movabs pop int out xchg data16 out fild mov xor (bad) xor mov push push and rcrl lock outsb rcrb in rex.XB test (bad) jp lret add fcmovnb (bad) retq sti sub (bad) push movslq shrl jg fstps and pop jae pop sarl (bad) movsb lret mov roll (bad) loope cmpsb and (bad) push mov mov cmc rex.WRB sub and rcr test loop push (bad) (bad) (bad) xchg (bad) scas (bad) add lret rex.WRB sbb rex.XB mov jb push (bad) cs (bad) jnp mov (bad) mov shll addl and (bad) sub insb sti push movsl repz (bad) mov rcll mov enterq fmuls imul rex.RX and sbb rorl push mov ss mov mov rol (bad) neg insb jle rex.X cmp jb fstp mov xchg int (bad) mov adc add add repnz popfq (bad) rex.B push mov test jae jno push lret push (bad) test pushfq shll outsl adc lret add lahf pop callq fmulp xchg (bad) (bad) (bad) movslq xor movabs repz in fild lea movabs and repnz gs cmpsb xchg pushq fwait push rcl rex.WRX mov (bad) int sbb xchg addr32 cmp int3 mov xchg (bad) (bad) icebp stc sbb scas imul add and sarl outsl mov rcrl cmp or repnz xor add cltd and sub (bad) scas rex.X (bad) iretq or loope int adc fcoms imul add (bad) or js xor (bad) jmp je int xchg (bad) and insl (bad) rex.WX xor shll cmp rorl (bad) adc or jmpq clc lret rex.WRX sbb cmpl ja roll pushq (bad) (bad) mov jo mov cmpsb stos (bad) repnz cmp imul cmc sbb rcl fildll (bad) add (bad) test xchg or rex cmp (bad) (bad) (bad) mov out movabs mov (bad) shr xchg mov (bad) mov cmpsb js test shl pop insb add out jne repnz rex.B lahf rex.B (bad) fnstsw stos xchg callq rclw rex.R imul xchg mov mov mov scas jle sahf out data16 (bad) retq rorl push test add mov pop cld add roll rex.RX (bad) jg lret rcl and (bad) push mov fstl loop sbb in jno addr32 (bad) fld roll or jnp rex.RXB mov and add icebp add rex.XB mov sub jns jne ror fstpt xchg adc (bad) (bad) cli mov add retq rex.WRB leaveq (bad) mov nop adc fs (bad) jae rcll cmp rex.WX push pop lret pushq fwait (bad) xchg (bad) fsubrl cmp pop rex.WXB movabs flds lret movsb stc cwtl mov pop ss (bad) movabs iret and sarl movsb sbb (bad) mov and (bad) push add pushfq test pushq nop out xchg iret (bad) (bad) mov pop mov shll jns sarl (bad) sbb or rcrl rorl (bad) repnz int3 out lret push lock pop adc sar rex.R cmp int3 ss mov xchg pop add stos or (bad) pop vmaxss xchg divb xor fisubrl rex cs rex shl (bad) xlat sub pop iret (bad) lret cli push sbb rex.WR cs (bad) cmp add sub mov imul rex.WRXB mov (bad) add rex.WRXB std out xchg ds je fcmovnbe (bad) repnz adc mov enterq xchg scas pop sbb jge adc std (bad) (bad) test mov pop clc test rol stc jle adcb imul pop sbb negb rex.WR (bad) push cmpw adc repnz cwtl or loope (bad) add movslq add push jb sub repnz addl lock (bad) jmpq int3 (bad) sub vpaddb sbb and jb in xor (bad) jns (bad) xchg cmp mov mov sub imul sbb push clc sub add insb mov jns xchg mov sbb xchg test cltd (bad) push pop addr32 xor rex.RX repnz sub sbbl rex.W pushq mov rex.XB mov xchg adc data16 rclb ja scas rex.WR add mov rcr and pushq shrl pushq pop loope (bad) movabs rex.WXB pop sti repnz repz mov addr32 (bad) and fwait in add mov xor retq (bad) fstp adc (bad) (bad) orb fwait iret cmpsb (bad) (bad) movsb subl (bad) (bad) rclb scas jno cmpsb sahf rorl sub or rorl (bad) adc shrl jrcxz mov mov fstl xchg lret xchg (bad) mov (bad) pop push ss push push lods iret pushq hlt jo jg,pn adc repnz rcrl ss (bad) fadd lods movaps pushfq xor movabs xor loopne shll xchg add std jno ja movabs movabs stos pushq sbb jnp (bad) mov adc and movabs rex.R rex.WRXB (bad) std movabs pushfq push jge (bad) cmp (bad) andl pushfq callq sti imul (bad) rex.B push mov xchg outsb nop roll mov fstpt iret add rcrl adcl movabs fsubrl xchg xlat lods cmp repnz mov pushq sub sti or fucomip in and sbb xor cmc push scas (bad) cmc (bad) push test rorl sbb rcr xor adc sub sub cmp rex.WX and sahf cltd adc shll pop sub rcrl test push in fadd lods or sbb fnstsw (bad) xor mov movl (bad) xchg insl pushq sarl fwait jrcxz shrl addr32 push xchg lret mov adc cmp pop out add iret movabs imul pop lcall lahf rex.WB sarl (bad) (bad) test adc scas mov adc jns add cltd (bad) xor rcr xchg es xchg std mov movslq add lahf rex.B int3 mov rolb (bad) rorl out loope cwtl idivb lahf shrb mov sarl pushq movsl mov retq jge or mov sahf mov rorl rex rex.WRXB fiaddl lods xchg and add rex.RB push hlt popfq or sarl jle fdivrs (bad) rcll jne fwait repnz movsl int (bad) rex.XB stc or std int3 enterq enterq cmp and (bad) mov rex.WB pushq cmp jns movabs jrcxz xor ror movsl sbb test cmpsb or rex.WRXB sahf jno roll jg rcrl jmpq repz ds mov push (bad) (bad) in fldl out sbb pop rorl mov lret scas sbb nop pushq and jae fcmovnbe xor shrl (bad) and jp jns std add stos cmc or iret notb mov xchg repnz pushfq sub mov int iret scas (bad) xor pushq out popfq ds stos (bad) retq pushq (bad) jns mov jge cltd movabs js sbb test shl jns sbb pop (bad) and xor psrlq (bad) lret movq repz out lret sbb xchg pushq clc (bad) cmp mov sbbl mov or (bad) fwait incl sub test (bad) jg sub add pop add xchg mov inc jp mov cmp test sub add push leaveq mov xlat (bad) jb jg (bad) mov sbb testl andl push (bad) loop sub scas rex.WRB push rol adc rex.W es add mov int3 (bad) stc (bad) int push pushfq sbb rex.WRB or rorl fwait (bad) sub xor pushfq mov enterq outsl sar (bad) (bad) ja pushq add rex.WB fxch iret flds lock scas or cmpsl push rcl movsb xor pushfq rex.WX adc pop cmp adc xchg xor (bad) jb popfq mov rol jge pop clc stos jbe jns shll in fistpl std rex loope jmp addr32 bnd sbb rcrb scas leaveq fldt retq sbb movabs jbe cmc sub rex.RX repnz loopne insl movabs icebp fs rex.RB rex.W enterq movl push in mov push (bad) or cs sub xchg mov jns push int3 gs cltd cmp fsts cli (bad) callq pop std rorl jns (bad) adc movsl iret mov sbb es mov jrcxz (bad) rex.RB cmp (bad) add mov icebp repnz cmc iret andl shll je insl test enterq add and or mov adc hlt xor popfq insl (bad) shlb push push loope xchg (bad) (bad) xor or clc insl rorl lcall js mov (bad) cmpsl (bad) cld popfq (bad) xorl jnp and mov lret or (bad) std int3 lret std push or lahf (bad) xor rolb rex.WRX mov (bad) cmpsl mov (bad) jnp int3 (bad) in sub cmp shll (bad) (bad) mov xor fcmove or (bad) mov adc xchg add scas movabs retq movsl shll fsubp ror mov movabs (bad) movabs pushq push (bad) jne mov sub callq rex.XB rex.B leaveq loop callq push mov xchg mov movl sbb xor in sar jo fidivl shrl (bad) pop (bad) movsb out popfq xchg rex.W mov scas leaveq retq jmpq (bad) jno or rex.WRXB stc add ja cmp mov ds cmc adc rex.W and loop ja mov xchg stos xchg sarb outsb loop mov mov cmp loop lods insb pushfq (bad) lahf pop adc imull loopne shll data16 cmpl rcl mov jle xor sti movslq in (bad) sbb fstp xchg pop mov jle (bad) data16 mov movabs je rex.WRXB sub (bad) or rorl pop sahf (bad) xchg mov xor (bad) rol (bad) nop add sbb sbb xor (bad) movsb push or push lret mov sarl rex.WRXB adc mov push cmpsl (bad) mov (bad) mov ss sub (bad) push shll (bad) rex.WRXB retq rex.RX rex.X cs (bad) rex.B rex.WXB or shr pop and (bad) mov (bad) rex.RXB sub xchg adc rex.WRXB cs in cmp stc mov jrcxz scas (bad) xor inc movabs callq (bad) pop cmp (bad) rcr mov popfq pushq mov rex.XB pop shll (bad) (bad) rol jnp jns mov (bad) rolb and (bad) mov or sbb adc jg jge retq rex.WRX pushq (bad) jg push loope rex.WB addr32 sahf int3 imul (bad) mov rex.WX rex.WRX adc add sahf mov cmp out iret push (bad) (bad) pop sbb rex.WRXB jno (bad) mov mov orl sahf repz cs (bad) mov mov icebp cmc (bad) decl (bad) xorl (bad) sahf adc (bad) and push fldcw push loopne test movabs pop mov or cmc testb rcrb (bad) fisttp (bad) out xchg fldl or (bad) fcomp and adc test or ss sahf xor push clc movabs sub or xor jne fs adc or and push mov sbb leaveq jbe (bad) enterq lock jae adc jo cli int mov or add xchg fnstsw leaveq retq jp clc leaveq xchg mov movabs adc mov sbb insl repnz jne mov jns jrcxz add xchg cmc (bad) retq negl jae xor flds mov (bad) repnz sub sbb enterq mov ds fcom loopne loop adc (bad) xor fnstenv stc jo sarl (bad) cmp int3 rex.RXB repz jbe fistl xor rex.RX cmp (bad) pop mov (bad) rex.WX sub rclq rex.RXB rex leaveq mov add xlat loopne nop (bad) sbb fcmovb insb (bad) mov adc mov rol fmuls (bad) cmp xlat and rex.WX mov cld rex.B pop insl mov outsb lahf sbb pushfq int (bad) rex mov xor rol and (bad) mov fsub jns lock movl (bad) icebp mov push sub addr32 xor insb retq out (bad) add jle push (bad) bnd pop mov int3 mov mov incl rex.WRB negl (bad) outsb rex.X jno,pt xchg loopne (bad) loope pushfq scas or mov xor xor pop insb (bad) out pop enterq add cmp (bad) pop rcrb or retq lret cmp out sub (bad) out and lret (bad) rex.WX in rcr rcrl jb pop movabs add cmp or (bad) mov cmp in faddl movabs (bad) icebp rex.WB mov or rex.RB repz mov test rcrl movabs rex.B (bad) xchg mov div (bad) lret (bad) push movsb xor pop in xchg pushq (bad) (bad) (bad) cmpsb nop inc outsb or (bad) cmp (bad) sbb mov mov in mov fadd and fildll cmc mov add rcl add fisubl pop rcr jg add adc rex.RX pop xor outsl mov jge not gs rorl jmpq or sub (bad) fucom in jp jg or mov mov cmp mov (bad) sbb xchg mov rex.R scas cld test or mov (bad) adc outsb std loope sti int pushq rorl cli lret rorl out or xorl mov jrcxz movslq (bad) fs mov roll in jae and shll mov push int3 in insl rolb mov cwtl sarl jmpq movabs xchg test (bad) cmp sahf lret or rex.R jb loope or (bad) mov xchg xchg stos cmp cltd test xchg mov insl pop imul adc shll lret pop sub xor push sti fstps (bad) mov movl mov shrl add rex.RX mov shll (bad) (bad) out xchg (bad) (bad) pushfq jbe rex.WX cltd scas je sar adc sbb rcl (bad) leaveq outsb jns callq fwait sub and pop adc (bad) xor xor mov rex.R sarl sarb retq pop repnz js mov nop sar pushw (bad) rcl sbb jns jmpq (bad) pushfq pop nop (bad) xchg (bad) rcl movabs adc pop rex.R ffree or (bad) (bad) sti rex.RB push xchg fsub retq (bad) jge negb sar sahf lret imul callq ffreep add rex.WR xchg (bad) mov xchg lods jb mov scas jno mov (bad) push stos (bad) movabs cmp (bad) movsl rex.WRX movabs mov lods and fldenv mov xor jns mov xor repz cmp rcll movabs lret mov xor movb push xchg jnp (bad) xchg cmpsl or lods loope addb rorl mov push mov sarl xor push negl sbb ss (bad) ffree xor add gs mov out andl in test xor mov cmp push (bad) sbb (bad) (bad) movabs leaveq rcr insl decb (bad) in lret js xchg (bad) roll std and add lret movabs jbe push shll mov (bad) sbb push rcll loope ja out and rex.RB (bad) js sub insl iret push in rex.XB in iret lahf cs movabs jle jmpq rcrl (bad) (bad) rex.X mov add rex.RB rex.RXB and shr data16 movabs xchg pop and rex.XB rex.B push or pushfq out retq (bad) stos (bad) mov or (bad) in rcll mov add xchg (bad) outsl (bad) rorl in (bad) callq mov jns rex.R (bad) and lahf mov es outsl mov adc iret loope cmc add mov adc jmpq jae pop rcrl fwait in or push flds repz push (bad) (bad) negb scas lahf cmpsb mov rex.X in xchg cmp cmp push loope (bad) mov vpaddusw out outsb push or (bad) insb sahf out roll movsl fwait xor (bad) xchg mov test retq xor (bad) je (bad) (bad) mov sub xchg push out (bad) rex.XB rcll hlt in sub pushq fsubl mov mov xchg roll xor loopne (bad) (bad) (bad) rex.R (bad) xor sub test in sub xchg loopne (bad) mov pushq repz mov fsubrl jmpq test or (bad) sahf cltd jae mov mov push orl push lods add addr32 cmp test mov (bad) cmp xchg in imul lock or (bad) jne in jbe sbb xchg sub lahf movabs xchg (bad) pushq popfq (bad) out popfq lods std shrl (bad) std mov and shrl cmp pop lret test mov in rorl xchg and jge imul push fwait movabs shll loop mov insb movsb data16 (bad) mov mov xchg or rex.R sahf pushfq mov mov rex.WRX rex.B rex fsubrl stos fwait (bad) rcll mov test (bad) pop rorl rex.WRXB loopne scas retq pushfq movsb mov (bad) jbe (bad) movabs or lahf (bad) jle rcll (bad) cs movabs pop xchg imul rex.RB shl out callq or rex.WR rex.WRXB mov vorps scas add xchg fs movslq pop lock xchg adc mov lods xor lret icebp adc addb (bad) cmp fdivs retq and movsb movabs in (bad) mov in add out outsb mov and pop xchg stc rex.XB rex.WRB (bad) (bad) cmpsl popfq mov mov mov rcrl fwait enterq push lret in je mov shrl test xchg movabs or shr (bad) mov mov (bad) out (bad) notb je (bad) jne outsl (bad) mov sub (bad) movabs xor pop cli cmp shl fidivl bnd lods testb (bad) cmc sub (bad) out lret insl add icebp jge negb (bad) add (bad) cmp sub xor add add (bad) (bad) adc jmp or leaveq xchg stc xor roll jns add (bad) (bad) xor xchg sbb sub rex.WRX mov lock rex.R lock enterq xchg fnstcw mov (bad) rorb adc out mov (bad) and addr32 adc and (bad) xor loopne out sar (bad) nop mov rex.R negb (bad) cmp movabs mov in stos sbb test mov leaveq in (bad) test (bad) data16 leaveq gs int3 adc fisub (bad) cmpsl rex.WR (bad) fsubrs cmc movabs jno movabs pop (bad) out movabs (bad) jo vminps stc and enterq mov jg mov xchg int3 jno fistpl shll rex.WB xor push fisttp mov mov (bad) int add pop fiadd push jns push loop xlat add sub fldcw sub rex callq movabs cmp callq movabs mov (bad) js rcrb mov add pop jns test (bad) xchg jno movabs (bad) (bad) imulb es scas ficoml cmc mov ficomp adc mov and out sbb cmpsb gs and movabs (bad) sub rex.R mov cmpsl or add jb sub adc callq rex.WRX and (bad) jp and ja lret mov test (bad) push lret shl movabs sub (bad) notb rex.RXB (bad) int (bad) jne xor gs jmpq out shr fstpt movb sbb or mov push mov int3 xchg movsl cmp and jp jnp loop mov cwtl mov movabs (bad) jrcxz xor in sbb movsb (bad) dec ja rex.RXB (bad) (bad) xchg mov cli xchg rex.RB sti or (bad) test fildl sub test rorl sub repz sub cmp rcrl or xchg cs rex.RX std xchg mov fdivs addr32 rcll test (bad) (bad) lods ss out je xchg loopne jmpq xor jmp xor push data16 jmpq movabs lret insl (bad) je cmpsb repnz and movabs movsb fwait testl pop movabs jrcxz movabs lods rorl repnz rolb (bad) mov (bad) addb (bad) idivl xchg xchg lock lret add xchg (bad) imul enterq int3 add cmp cs retq mov cmp and add loope setbe in mov (bad) sbb sub in adc pushfq shll test stc (bad) mov xchg sub pop or scas (bad) test rex.WX xor and vphaddbw shlb movabs (bad) xor or in (bad) pop add js retq xchg cmp (bad) adc push jns in fdivr cmp repz xchg add add shll sahf je adc movsl cmp pop rcl jrcxz retq movabs cmp sub cmp rex.WXB mov cmp sub mov push clc rex fisubrl nop sbb and xlat pop shl push pop rcrl (bad) pushfq xchg outsb jns cmpsb (bad) in shrl insb and rex.X adc repz out int shll stos or jo and movsl mov (bad) jae cs pop cltd movabs jns scas movslq pop outsb pushfq lret movabs and (bad) sarl ja shll fwait rex.X rcrb adc rorl cld roll push shll (bad) cmp fistpl stc adc cmp subps xor test in (bad) mov and ja std rex.WX stc or adc enterq pop fldenv test rex.RB jle xor popfq jl cmp adc sbb jmp add negl sub or (bad) or xor lods mov cmp jne rex.X (bad) jrcxz out stos or ja (bad) pop (bad) (bad) xchg jo push (bad) es jno retq fnstsw lret xchg pushq fdivr repz rex.XB roll popfq lock cltd (bad) clc mov mov cs xor std mov (bad) xchg movabs (bad) rcll (bad) fsubrs xchg mov and jbe in notl pop xor rcl movsb sub sbb mov push add in pop sub sbb (bad) mov mov hlt (bad) cmpsb (bad) loop cltd movabs mov cs mov rex.WB nop and xor cli rclb orl sub rex pushq popfq adc (bad) or shr sbb pushfq out (bad) shl rex rex.RX sarl (bad) shll mov rcrl mull fsub rex.WRXB jne rex.WRXB jmp sbb xlat or (bad) roll mov (bad) je lahf sub (bad) gs mov movabs in rcl fstpl iret fcompl mov iret sbb rex jmpq retq mov out retq lods push pop lock jb (bad) scas je roll callq roll xchg add pushfq scas mov rorl mov rcr sub stos jae xchg (bad) mov cmpsl rcrl cmp in scas shll rex (bad) or outsl subl subl (bad) outsl xor (bad) mov (bad) cmp cmp std in cmp movsb pop (bad) rcll cli imul sub cmp shl sbb (bad) (bad) add movabs mov cmp rorl movabs mov pop (bad) xor fs (bad) mov (bad) rcrl movabs roll mov mov (bad) shr add test rex.XB lock (bad) out cmp xchg js movsb movups pushfq movabs cwtl test jne xlat sub mov loope mov hlt xchg push pop movsl fwait jg (bad) mov (bad) std popfq sub retq jne rex.XB add (bad) iret js (bad) push mov and shrb retq stos cmc cmpsb negb adc je sub clc (bad) adc (bad) fild push (bad) scas cld xor mov jmpq ficom rex.WRX adcb (bad) pushfq cmp rex.RB in add repnz es hlt push stc scas and xor faddl imul test cmpsl xlat mov fldl sub xlat rex.WX cmp mov sbb cmp pop or addr32 jb,pn jmpq mov adc stc xor mov (bad) lock lret (bad) imulb rex.WR fisttp in rex.WB (bad) lea (bad) mov (bad) lea or clc out movabs retq outsb addl sub sbb mov (bad) xchg jo push insb push xchg rex.WR (bad) orl or sub lret scas push (bad) (bad) rol cmp js fisubr lret andl movslq rolb cmc jbe callq shr ss int add lahf jmpq mov xchg outsl jnp pop pushq and rcll xor (bad) (bad) add cmp lods jo retq sbb fldcw pop mov movabs test sti ds push jle cmpsl rcll fsubs mov js cmp test shrl xor (bad) mov mov xchg mov sub orl movabs retq insl ja sub loope repz loopne (bad) xchg add or cmp negl rex.RXB fisttpll rcrl sbb fwait and jg jae callq cmpsl cwtl jns mov lahf (bad) jbe or shll pextrw sbb push rex.WX icebp rex.W (bad) in movabs sub and mov ficomp (bad) jno (bad) mov mov subb sar (bad) js fwait rep push ja sbbl xchg mov mov sub (bad) test jmp add mov jns adc jnp mov and fbld xlat mov push shll lea sbb in adc xchg rcll xchg cmp fildll cmc lahf out rex.WXB fsubs sub adc out sbb add jrcxz and xchg rex.WX adc sub mov (bad) roll imull mov rex.RB (bad) mov test insb rex.WX mov mov out mov sbb push in test (bad) (bad) (bad) adc mov fild cmpsl (bad) int3 gs (bad) addb jg mov jae and add cmp test (bad) jmpq movabs (bad) sbbl ss shlb xlat (bad) or cmp int jrcxz out sub popfq adc movabs mov repnz mov jae fcomps out xor add rex.RX jg add movl clc cmpsl rex.W cmc in pushfq add and (bad) (bad) add hlt xor enterq mov sti stos mov push xor movsb movabs rcrq sbb sbb insb jae in repnz stc ljmp fwait int3 int mov sub sbb in movabs out icebp xor repnz (bad) in test imul retq or xchg xchg push (bad) mov mov imul (bad) (bad) idivl mov fldl xor pop pushq adc popfq movabs movsb jne data16 lock mov rex.B gs xor xor xchg rcl clc (bad) addr32 popfq lock (bad) rex.RB (bad) movabs sar fs rex.X sti rex.XB or (bad) icebp hlt iret stos add adc loop pop retq decl jno cmc or adc add rex.WR retq push stos jae xchg push sbb sub sub add (bad) (bad) pop rex.X imul (bad) mov mov mov sahf pop adc (bad) mov add rex.RB sbb (bad) ficoml (bad) addr32 mov and adc jo jge mov sbb (bad) fmulp ja leaveq rex.RB pop stos adc mov rolb mov adcl movsl pop movabs (bad) int callq lods stc xor jns push jl jg (bad) and jge xchg adc hlt (bad) (bad) rex.WRX std (bad) negl shl sarl jne pop sub pushq rex.RXB (bad) jo sub (bad) or callq jae loope hlt callq mov in xchg in je std jae retq (bad) xchg repz xor popfq rex.WRB mov jg repnz ss mov stos lahf imul cmpsl mov sub mov rex.WRB jo adc sub rex cmovl int jge xchg movabs cmp rex.WR in or out sub rex.RXB mov xchg mov (bad) ffreep shl (bad) mov decb or lret mulb mov rex.WB int3 bnd callq rex.WR and cmp mov movsb jge vpsrld loop movsb movsl scas or rex.XB fsincos mov loopne jae or jb cs mov gs and cs cmp roll movslq mov loop (bad) movsb (bad) add (bad) repnz sub jecxz add mov rex.XB ss int je mov test outsb jns (bad) mov mull or ja mov lret (bad) sti std push stos pushq (bad) in in repnz outsl adc jl (bad) out outsb in fidiv mov icebp rex.WR imul data16 in (bad) fisttp repz stc (bad) movsl mov jmpq mov lock in (bad) clc mov (bad) rex xorw (bad) sub sub sbb loope xchg (bad) and mov (bad) imul xor lret mov (bad) jae mov test pushfq shlb and jno in sarl sbb jbe jl shll pop lret xlat imul pop movabs fnsave movsl xchg (bad) pop rex.W xor adc movsb rex.WR xchg cmc ror outsl imul jno pop cld negb out mov fist pushq or pop jge rcrl cmpsl (bad) insb and (bad) mov push cmp jnp pop rorl and test cltd sub ficompl shrl rex.B shll repz movabs pop sub add or fisubl jmpq xor and scas jne test adc rex.RB (bad) (bad) sbb (bad) cmp fistl js rex.X rex.WRX jno (bad) sbb adc vcmpps add jb rex.R add hlt lods push sbb cwtl movabs (bad) int es fmulp cld jo adc in sbbb mov mov push (bad) movsb rex.X adc (bad) (bad) scas mov andl push fistl adc push out jmp icebp (bad) adc iret hlt rex.X mov setb and and jmp add cli rex.RXB mov or (bad) push jnp xchg rex.WRXB (bad) rex.WX sub test (bad) rex.WRX rex.RXB sub data16 push (bad) imul cs rex.XB fcmovnb lret movabs fucomp in addl mov mov cmpsl sbb sahf ss xchg push lods shlb sahf jnp mov rex.XB repnz and cmp imul hlt jmpq (bad) xchg (bad) in divl test mov retq mov or movsb sbb clc (bad) mov subb shrl (bad) adc test stc (bad) pushq sub rex.WR add jge test jg rex.WXB jg mov (bad) cmc pop xchg xor (bad) pushq repz pushq rcr (bad) popfq rorb cmp enterq lea out movsl pop xchg rex.RXB (bad) cmp sub cmp rex.R scas mov test es rcrl cmp inc pop test dec sbb lods (bad) xchg pop insl addr32 rcr xor mov movsl (bad) jp (bad) xor (bad) popfq add out (bad) mov or xor loopne mov adc jbe add and xor add ja popfq shll cmpsb rolb mov rex.B rex.WB (bad) xchg xchg mov jge mov cmp test movabs sub outsl push in xchg sbb xchg push add mov adc cmp jno (bad) pop rex.XB vpcmpgtd rcrl fadd ficoml retq pushq rex.XB (bad) movsl xlat gs rex.RX mov xchg test test out (bad) push cmp push sub rex.RX adcb push jl and (bad) cmp xchg xchg sahf mov rex.B jb pop (bad) dec rex.RX (bad) callq mov sbbl pushq sarb mov in mov roll rcll mov sahf cmp cmpsl (bad) fprem movabs adc sti mov mov sub pop rex.WB push add sahf icebp (bad) fchs mov (bad) sbb fdiv mov (bad) ljmp (bad) scas rex.RX rex.WRB in stos jno pop fstps or jmp outsb rex.R lea push xchg (bad) movabs (bad) repz (bad) (bad) insb mov push test fs mov sahf scas sbb or rex.WRX xchg (bad) jp fwait jnp rex.WRXB rex.WX rex.W rex.WB sbb subb gs and jb mov sbb rex.RXB sbb xlat mov and add and (bad) jno rcrl mov rex.X rex.WRXB jns adc roll mov rex.WXB pop rex lret out mov or jnp (bad) cmp rex.X adc mov xor stc outsl xor sahf rex.WXB addr32 sub rcll and mov pop lea lods cwtl (bad) rex.WRB (bad) fisubr jl insb (bad) add lahf mov rex.WXB (bad) cmp mov mov insl xchg xchg (bad) (bad) jae mov (bad) (bad) leaveq xchg xor notl cmp cmp (bad) xchg (bad) sbb retq stos fwait cmpsb xor jnp xor rex.WB (bad) mov fcomps shll or leaveq sbbb iret mov cmpsb loopne enterq jbe mov (bad) (bad) mov rex.WRXB cmp sbb fdivrs test shr out jno rex.WB fwait movsl stos and rex.B add or sbb pop push sbb mov shll lret adc xor sahf (bad) jne cmp and rcll js xchg movabs fcmovbe mov (bad) jae (bad) in rex.WXB sbb jns out mov sbb xchg mov movabs sub adc hlt or int3 or fsubrs retq pop sbb loope mov jno ja movabs push (bad) jb leaveq jno loopne rex.B sti stos popfq stc rex.XB cmp rex.WR and mov imul repnz negl pop xor and (bad) adc push pop callq (bad) (bad) clc xchg mov rex.WR jae pushfq sbbl mov (bad) and movsb gs out (bad) cli add adc or rex out shl jb (bad) (bad) jle (bad) adc or adc imul test sub retq mov faddl sbb out cmp cmpl int mov iret (bad) mov xor push (bad) leaveq sub or sub rex.WB (bad) out rclb enterq xor icebp fnstcw retq adc and mov (bad) retq movabs mov xor cmp lea and jmpq (bad) mov rex.XB out xchg sbbl or (bad) (bad) and (bad) push (bad) (bad) loope jno fimul jbe and enterq ss ja ror mov in rex.R movslq or push callq (bad) shrb clc int mov outsb push sar add std mov pop xchg cmpsb (bad) pop rex.WRX add icebp jmp xchg mov callq mov jo mov roll rex.RB insb push movabs xchg (bad) pop adc stos and leaveq rex.RX cld add out push jp sub rolb mov (bad) adc jge cmp fist (bad) adc rex.RB fstps rex.WRB pop adc (bad) cmp test lock sarl xchg (bad) xchg out nop xchg movabs push add (bad) sub xor push rex.B in (bad) rex.WRB xor roll (bad) xor ja lea pop std add or shll sub pop cmp rex.WB rcrb cmp jmp or movsb iret sbb cli lret xor (bad) jmp enterq clc lea push xor mov ror leaveq (bad) in loop insl shll sbb jb mov std add (bad) add (bad) movsb add xchg pop (bad) sub shrl pop jnp test add jrcxz (bad) jno fwait xchg mov xchg pushfq fimull retq push iret and (bad) (bad) scas int (bad) jnp pushfq or rex.X mov mov adc jns cwtl adc (bad) loope rex.WRXB push sarl adc sbb adc and or sub sbb mul mov xchg movsb lock rex.RB repnz xor add or (bad) pop rcrl divb lods leaveq mov js cltd test sub fidivl pop and jns jae lret rex.WB and movabs rex.B repz mov rex.W adc cmp callq adc add pop and ja callq add js (bad) push fiadd xlat rex.X mov ss negb (bad) mov or stos xlat and mov (bad) rex.X js orl mov sub lret test add in test cltd and (bad) insl ror push scas pop jnp sbb imul rex.WRXB mov add jmp (bad) mov repz movabs roll mov (bad) (bad) (bad) push sarl mov push or adc add (bad) xor data16 (bad) pushq or fdivrs xchg jae cwtl mov jnp xchg rex.WB sarw (bad) and (bad) sub movabs jne add (bad) rex.WB jl sarl loope push test (bad) adc pushfq jle rcr iret cmp outsb (bad) movsb or rex.RX add jne rorl in rorl (bad) sbb sub sar enterq shrb ror xchg (bad) in or adc (bad) hlt retq enterq and test jne (bad) or mov cmc or loopne movl (bad) add mov movabs rex.WRB (bad) adc (bad) out movslq mov ss roll retq adc mov int3 mov jge xchg and xchg fild insb (bad) or or adc (bad) sarl rex.XB rex.WX adc jae enterq sarl (bad) ror loopne retq push shll add adc rorl mov jp mov std xchg mov cwtl cmpsb mov imul jmp roll (bad) cs mov mov cmpsb lret loop sbb or sti xor adc retq clc xchg sbb lret jnp stos and (bad) (bad) movabs (bad) push mov xchg adc (bad) rcrl mov test sub add cld icebp pop and repnz (bad) rex.WRX movabs cmpsb ror out movslq jmp cmp adcl jno cmpl lock mov or jmpq (bad) pushq and in add or (bad) and (bad) (bad) (bad) (bad) (bad) pop mov adc rol out mov add add lret rex.WRX in mov (bad) neg (bad) fstpl and js (bad) jne pop rcl mov push cs and rex.RX ss sbb icebp rcl pop sbb icebp xlat lret flds in out iret sarb es mov mov fiadd jne xor rex.WRX sub (bad) add in retq (bad) fs ficoml cmc shll (bad) mov (bad) cli rex.XB pushq sbb fsubl xchg xlat mov add or in (bad) mov (bad) push pop sbb xchg in ja cmp add xchg data16 (bad) stc imul jrcxz lret lods retq jno (bad) mov or mov (bad) mov sub int3 mov mov ss (bad) loop scas rex.WB cmp jmpq jrcxz mov popfq or xchg (bad) cmp adc pop sbb rex.WX mov in sub iret cs enterq and jno shll cmpl (bad) xor xor mov outsl mov add sbb and or jno sarl jge shrl mov imul gs (bad) sbb ss push mov test xlat add test repnz (bad) out mov cmc fisubr enterq jg outsl adc std iret xor xor in repnz movabs cmp movabs pop rex.RXB (bad) cmc (bad) (bad) adc sub sub mov sarl sbb loopne pushfq mov xchg rex.WRX (bad) mov push test (bad) jne sub lahf sub int3 sarl mov andl movsl rcrl jg pop lret mov inc rolb rex.X jmp and adc mov fisubr movslq xchg popfq in jmpq mulb je mov jae icebp rex repnz stc cli xor sti (bad) loope mov (bad) mov jnp leaveq push (bad) shl mov shrl (bad) jno retq rex.B es lret (bad) xchg jbe mov (bad) sti popq rex.WRX adc xor sti rex.RX stos mov (bad) shlb shld jbe push loope addr32 pop movabs rol mov sahf adc adc sbb and rex.W rex.WRB rex.WB lock and jnp rex.WR scas (bad) jns int (bad) xchg xor xor fisubrl xchg rex.WX lock mov faddp callq repnz xor add int push movabs jne fdivl xchg pushq or insb retq pop push rex.RXB rex.WXB jo,pt shll cld sub mov jmpq xor fidivr or jno (bad) scas xchg pushq sbbl adc cmp add shrl cli (bad) mov xorb adcl add xchg nop scas fld xor (bad) pop imul shr add in mov jmp (bad) shll (bad) jno loop js and sub in pop sar add vpmovsqd int jo movabs fs lods xchg mov (bad) vaddpd ss cmpsb loope loop jno rcr hlt pop imul lret stc (bad) loope movsl (bad) (bad) movabs add in cmc (bad) rorl add xchg push movb rex.WRX iret test int pop pop jns roll sub mov pop jae adc lret loope std (bad) or mov sub (bad) rex callq retq (bad) pop and roll sbb movabs cmp int (bad) rex.RXB test nop rex.WXB mov mov mov (bad) loope jnp lods (bad) and retq rcrl std (bad) cmp movabs xchg jrcxz movabs sbb rex.WXB (bad) jb rcrl lock mov (bad) ja rex push xchg push mov rorl jmp ds insb lret (bad) push (bad) rcrl cmp pop rex.WR cs mov mov jmpq mov in cmp clc and std lret loop and or test sub shr sbbb cmp (bad) adc (bad) js xlat loop push jns add xchg mov jge in add cltd rex.R cld mov rex.WRX rex.RXB rex.WR jb test out shrl sarl (bad) sub mov (bad) add adc pushq push (bad) rolb adc ds rex.W addr32 incb rex.WB lret (bad) jrcxz xlat in sub sbb fwait je je lret (bad) movl jb rex.RX rex.RB repz rex.X nop xor in add (bad) fwait movslq test and mov enterq and cwtl jmpq jmpq xchg pushq or out jmp mov rorl (bad) scas ja retq jnp stc clc cmc mov (bad) addr32 add fcomip movsb jg (bad) sub out sub icebp mov rex.X rex.WRX rex.WXB xchg and lods rex.RB insb mov lret rex.WX sbb jne add xor sub fisubr ficompl (bad) lea rex.W rex.XB (bad) callq add push je sub mov or stc adc fyl2xp1 adc (bad) sub (bad) xor cmp add rex.WRXB jp pop add frstor movabs mov or or add sub cli movsl (bad) adcl (bad) mov imul pop pop rex.WXB pop rex.RB sbb mov xor rex.WXB lock fnstsw std retq fild sub jae jo bnd int mov mov fwait mov mov sbb (bad) sbb mov and in int jnp stc add pop rex.WRB (bad) (bad) cmpsb cmc push insl ja add add xchg (bad) and stos rcrb add test rcl mov pop (bad) cld and (bad) push mov loop popfq (bad) leaveq mov rex.WRB and lock movsl xchg in jbe jl lret test loopne (bad) mov push push int3 and jno xlat cmp movabs cld leaveq adc movl fidivr mov add rolb sbbl add and (bad) callq imul add or mov mov lea rex.RB ds sub cld pop (bad) repnz iret (bad) test in xor xchg retq imul sti mov (bad) insl loopne jns add mov icebp mov vmovq int lret in sbb cmp fisttpl xchg ja retq (bad) jmpq sub subl rol and xchg xor jae loope mov rex.WRX (bad) and mov cmc in fcmovbe out (bad) rex.B int pop jmp out xor adc rex.B xchg adc cmp pop mov mov mov loopne mov sahf xor (bad) (bad) rcll lret mov push out rcl clc adc jno loop fstpl cmpl outsl (bad) je xchg xor cmpxchg xor rex.RB movsl add out lods (bad) jb push mov sarl and cmpsl (bad) repz mov (bad) (bad) jae xchg test mov lods rcr cwtl pushfq (bad) (bad) loop iret fisubr sbb cmc mov std movslq nop cmp and lock loop cli mov imul sub pushfq cmpsw sub (bad) sahf sbb sbb cmp rorb movslq add (bad) ds rex (bad) and stos in jne jp outsl cli std pop rex.RXB lret cmp fnsave cltd jno mov rol jp,pt add xchg pushq mov jg lock fcoml or fwait lahf or insb (bad) xchg sub add (bad) rex.WX pop cmc (bad) rcll stos int jl xchg out test lock rex.WRB movslq xchg xchg (bad) xchg mull ss mov movabs sub mov repnz rex.WXB jno mov fidivrl int3 cli rex.WRXB add push insb popq stc rcrl (bad) out repz sarl push inc pushq push movabs lret adc sub int jne push lock mov rex.WB loopne out or adc je rolb xor iret movabs cltd xchg and bnd cmc xor add rcll or mov outsb sbb add in xchg (bad) fist pushfq sub pop sub callq (bad) repnz in movabs (bad) sub add xchg (bad) movsb cmp adc push mov in mov jmpq sbb fiadd icebp mov shll (bad) hlt (bad) cmp mov xlat out outsl push fwait rcll (bad) rcrl pop lods idivl mov ss push (bad) mov xchg pop pop cmp cmpsb rex.X int3 lahf or pop pushq retq gs pop xchg rex.RX cltd (bad) out scas mov rex.RXB lods (bad) mov sarl orl (bad) popfq js sbb adc movabs sub rclb push (bad) mov or lret lret xchg loop andl or (bad) cltd rex fstps or mov test adc add xor (bad) cmp (bad) fwait movabs jae rex.WX addr32 ja mov jns (bad) mov repnz cltd xchg adc pop mov sbb cmp shrq xor rorl cmc xchg enterq jb add add fcmovnu (bad) lock lret (bad) xlat rol cmp int sti nop xchg mov shr jne repz outsb rex.RXB repz (bad) (bad) mov and (bad) sub pop (bad) sub (bad) mov outsb rex.R add pop sub mov movabs sbb add mull rex.WRX jrcxz mov mov mov icebp imul in int3 mov rex.B push sbb cmp rcrb mov gs adc sbb in jbe rex.WR (bad) cmpsb mov and test mov outsb or xchg add pop (bad) (bad) sbb (bad) idivb imul imul rex.WRXB scas mov rol loope jge xchg jb jo rex.XB incb pop mov mov in sqrtps addr32 (bad) mov (bad) rex.WXB cs repz (bad) (bad) negl rex.WX cmp mov clc mov add rex.XB shl repz insl imul fldenv (bad) xchg clc sub in outsl pop xchg or cmpsb pop and insb sarl xor lret or roll test shll scas movabs ja xchg sahf cwtl in ror pop insb add orl rex.B lret imul out (bad) in fiadd in andq (bad) mov (bad) test push insl fwait stc (bad) mov jmpq enterq jae lret (bad) cmp (bad) cmp rex.WB (bad) and sub outsb test in add lahf mov rex.WRX lret movabs movabs cmc xchg adc (bad) xchg jmpq xlat xchg js (bad) in outsb and mov sub pushq rcll (bad) rex.WXB fidivrl stos push in roll (bad) movabs scas jb and in or push scas lods and jbe js rex.X loopne or (bad) mov (bad) add adc cs jmp sub sub addl lret (bad) xchg enterq (bad) (bad) (bad) lods xchg out rex.B orl (bad) xchg mov lock rol mov pushq lods es cltd xchg shlb xlat imul push stc pop cmp fildll loope (bad) jg movabs ds enterq rex.WX jg (bad) rex.RB clc cmp or and xchg sbb sbb retq (bad) adc pop xchg (bad) mov cmc mov in (bad) rex.WR cmp sbb iret pop rex.WB ds rex.WR jp mov and loopne rex.WXB push rex.W test jae adc addl (bad) mov sahf scas pop pop mov (bad) cwtl in adc lcall adc faddl pop (bad) pop rcl je loopne (bad) cltd roll (bad) push jmpq push xor sbb test cmp push xor (bad) (bad) xor vpxor rex.RB retq stc orl (bad) cmp (bad) push rcr jle xchg xchg sbb jo jg sarl rex rex.R xor push repnz (bad) movabs shr (bad) (bad) sahf cmp xlat rcll rolb cld ficomp or jb callq (bad) roll sub out lods (bad) and int3 (bad) insb rolb in sub (bad) push cmp jge mov rex.W test lods imul push rcr in div out (bad) xchg shr cmp pop repnz jmp fdivrl xor or cld pop pushq dec nop adc mov pop or stos (bad) xor mov movabs sub or jle,pt xor incl jnp push insb (bad) mov imul cwtl mov pop sub (bad) xor push sub pop lods jg movaps add retq in icebp (bad) (bad) ffreep add rolb sub sub pop push add sarl sbb and (bad) rex.WRXB rex.WB idivb xor (bad) jns insb (bad) sbb jns repnz pop (bad) pop callq jae movslq out pop cmp shr xchg (bad) jmpq rex adc (bad) xchg js (bad) sbb loopne fptan (bad) add test xor or pop or rorb movslq clc xchg xchg sbb pop fidiv add (bad) xchg (bad) mov rex.XB (bad) (bad) xor sbb (bad) cmpsl jns (bad) sti rex.X jne jle insl xadd rex.XB hlt or sub mov shrl imul and cwtl outsb cmp xlat shll push xchg rclb icebp xchg xchg out push xor (bad) (bad) shll jnp jmpq and (bad) xchg adc mov cmp (bad) outsb sti (bad) add sub std jns (bad) rex jmp rex.R loope in add fadds stos sub (bad) adc pop mov icebp rolb rex.WX sub rorl test (bad) jns shrl pushq loopne outsb sub in mov (bad) (bad) leaveq or rex.WRX mov movslq shll rex.WB (bad) in cmpb sub (bad) sbb (bad) or sbb mov out leaveq movsb (bad) mov adc (bad) rcr push jmp mov (bad) roll rcl mov fisub cltd xrelease pop rex.WRXB out lret sbb and pop ss xchg enterq pop mov pop sub loope (bad) std cmpsb adc mov mov rcll cmc popfq jl flds mov (bad) lahf sub pop loope mov add int3 push lret mov je and lock sarl roll sub add cmp scas add cltd or jl add mov or jo rorl roll add pop mov jmpq and iret and enterq (bad) sub rex.RXB mov stos out (bad) (bad) rex.W (bad) rex.WXB repnz rex.WX faddl cmp xchg fcmovnb jge push and out stc (bad) (bad) mov adc int (bad) jne psrlw lods push xor loop cwtl jb push lret repnz roll retq mov sbb jg lret jae (bad) jns nop andl jno loop cmp or rex.WRB and (bad) ffree add adc icebp clc in test fbstp (bad) adcl xor repnz mov std xchg in (bad) (bad) enterq (bad) (bad) rex.RX adc movsb xchg (bad) (bad) rex.WRB insb imul cli lods lods fldt pop jne rex.RB mov (bad) sbb cltd imulb cmp and (bad) sub pop movabs (bad) outsl xchg out (bad) xchg adc mov xor (bad) lret roll (bad) mov data16 (bad) and jl add repnz mov int mov rcrl or mov sub callq js (bad) fiadd rcrl fcom sub (bad) mov pop push nop mov adc mov insb (bad) or test (bad) xchg rcrl mov lret scas mov sbb mov lret jo in push outsl and (bad) out xor jb cli je pushq mov rex.WRX rex.RXB rex.WRB and pop repnz jns rorb (bad) js jno sub pop (bad) stos (bad) rcl test sbb rex.B or lods insb sar test jl (bad) xchg pop (bad) iret imul and push pop xchg movabs cmp (bad) loope xor xchg enterq jae (bad) (bad) fldt pushfq (bad) (bad) fnstcw in and pop add insb rex.WX orq jp cmpsb fcomps or (bad) callq loopne mov fcoml (bad) or (bad) pushfq pcmpgtw fcmovnbe (bad) mov sbb lods (bad) and cltd (bad) shrl int3 shlb sub outsl (bad) xchg adc push cmpsb js,pn ftst xchg (bad) setl (bad) and rorl repz fldcw mov fistp and add push shrl jno or xor mov rex.B jle rex cmp (bad) repz (bad) sub cltd cmp sarl xor sbb push out xor decl add xchg xlat fcmovnu sub lock ror movsl fcompl movsb jge (bad) insl sbb iret (bad) (bad) (bad) mov scas leaveq cltd xchg xchg addb scas and xchg jno jmpq or pushq rol (bad) add mov (bad) push rex.RX rcrl rex.XB stos push movsb movabs shrb (bad) movabs add lret rol (bad) repz fsubrs rcrw sarl xor jb pop movsl movabs adc (bad) push cmp imul adcl sarl insl or test (bad) and or (bad) fadd and push out (bad) mov (bad) cwtl insl (bad) callq cwtl pushfq movabs cmp (bad) push loope fidivl lret cmpsl xchg stc xor rex.B xchg lods movsl pop loope jnp add mov pop xor lret movabs rcrl fwait insb retq cltd cmpsb negl xchg sbb repz xchg pushfq imul and ja rex.WX mov pop (bad) mov mov mov (bad) cmp stc imul (bad) mov cld (bad) adc (bad) loope mov rex.WXB je sub sahf and jo retq xchg fstpt shll (bad) pop sbb vshufps int3 mov push std in retq mov cmp lret add sub (bad) jmp push incl iret rex.R clc mov adc data16 sbb xchg stos add adc je jae pop inc shlb fsubrl (bad) es scas sarl jno shl idiv lret (bad) pop lods dec (bad) mov (bad) sbb or jns (bad) xor cmp roll push fist mov (bad) cmp pop xor and mov mov cmp (bad) rex.WB or iret not outsb insb and pop loope (bad) incl rex.WX (bad) (bad) enterq cmp cs xor cmp (bad) fs jge and rex.WB roll sub enterq repnz jb mov cmp test std rex.R clc mov pushq mov xlat cs add ljmp (bad) rex.XB repnz (bad) fwait xchg rex.WB or add mov rex.X pop rex.WB icebp movsl jb jle xchg (bad) bnd lahf loope jo retq cmpb rex.W in jg mov mov (bad) rex.WX lock rex je (bad) lock cmp xchg mov neg leaveq shrb rex.WR sbb (bad) sbbl (bad) imul out imul add (bad) callq mov in retq rex es sbb xchg xchg movsq fldenv mov or cmp mov sub outsb mov xchg iret pop (bad) stos (bad) push xor adc movabs roll iret movslq mov loop rex.W sar (bad) rex.RB movsl fistp xor loopne rex.XB sub mov rex.RB (bad) fdivrl add sti icebp lea xchg movabs in loopne (bad) movabs movabs decb lea jo (bad) lret (bad) leaveq (bad) and or in fcomps jbe rex.B xor leaveq jmpq (bad) jmpq (bad) or jge sbb insl retq mov lret xchg fcmovnu xchg (bad) jno mov movabs pop ficoml mov and sub fwait xchg fldenv jne (bad) mov pop mov rex.WR icebp sub xchg fucom in (bad) loop outsl pushq push retq movsl mov mov add jmpq shrl loop lods out (bad) and adc add jrcxz faddl mov jnp jae movabs push loope xor and mov mov jno mov addr32 inc sub pop roll (bad) fwait sub rol add test fisttp stc rex.X xchg and cmp xor loope and movabs push xlat (bad) (bad) (bad) sbb (bad) std (bad) int add mov jmp shrl jno enterq (bad) cmp add sarl shl imul repz (bad) rex.WRX jnp xchg test sarl jl xchg loop cli sarl mov mov (bad) ss jrcxz (bad) adcl shr idivb fistp data16 cmp movsl pop lcall rex.WB sub rex.X and js xor push adc hlt outsb pushfq jl je insb sarl xor jge lret faddp jno mov rex.RXB movsl or retq (bad) insl sub mov roll mov xchg jbe js fld cmpsl roll add sbb int (bad) mov movabs iret cmpsb shrl rolb cmp ss (bad) add cwtl outsl repnz rorl and add test (bad) imul stc mov sub (bad) addl out lret movabs jo test iret sarl or mov xor and loopne adc callq xlat mulb outsb mov add mov rex mov jnp ja xor iret loope (bad) xor jmp stc pop rex.WX sbb push adc rorl and std rex.WR lock add movsl adc fstpt sbb callq adc in mov (bad) cmp lods rex.X jno (bad) jrcxz mov stc cmp lea lock rex.WB cmp rorl pop callq ds in mov xchg jbe mov sub cmp push testb rolb jp (bad) (bad) stos ficompl (bad) rex.WR and not (bad) mov int3 scas or rex.B test (bad) xchg and add fbld pavgb rcl add (bad) icebp in xchg cmp rcll sahf pushfq movsb cmp mov cli mov jbe outsl cmp (bad) fyl2x lret negb adcl xchg (bad) (bad) loop incb pop int adc mov rex.RB push xor add sbb js xchg sub (bad) jno mov add sub jrcxz jb repnz and cmpl mov (bad) rorl jge push repnz rex.RB sub jae and jno or mov (bad) add xor add add rcll (bad) xor cs mov and movabs (bad) add add ds xchg xor (bad) addr32 (bad) xor adc and (bad) jns ja rex.WXB pushq popfq outsb adc shll mov sar (bad) push cmp imul and cmp xor rex rex.WRX or in sub rex.B jns imul mov sbb scas rcr cmpsl (bad) rcrl in ror stos xor (bad) mov mov sub fwait rcl mov xchg test ds std out hlt (bad) xacquire popfq movsb je rcl insb fwait mov or and (bad) pop data16 (bad) jbe xor (bad) nop retq xor xlat mov push insl leaveq rex.XB int3 (bad) pushq (bad) rex.WB jae callq popfq xor pop imul int mov pop in enterq mov xchg mov rex.WB rex.WR movabs xchg imul or sub sahf test rex.B push (bad) clc stc fdivl retq scas cmpsl xor pushfq and (bad) xor xchg mov sub outsb stc negl sub movabs rex.WRXB cmp movabs test and lret repnz sub jns (bad) fcoms sub enterq movsb (bad) loope rex.B sub stos (bad) data16 mov insl rex.WRB lret mov cmp or or adc callq mov or rex.WR ficompl xor callq icebp int3 cmp (bad) push test xor rex.R adc rcr (bad) and sbbl and rex.RB rex.XB imul xchg int3 rex.R movabs xor xor xchg leaveq jmpq mov lods int3 sub push fidivl es je (bad) (bad) jno enterq (bad) push mov sub or (bad) cltd iret pushfq pop or pop fnsave lret fwait xchg rex.RB cmc (bad) rolb mull rcrl xchg rcrl rex.R movabs rex.RX jno and rcl loope xlat sub adc lods je nop fdivrs shrl test xchg jmpq (bad) mov (bad) fiaddl outsb or xorl shl (bad) (bad) ja rex.X rex.W xchg xchg sub test movsb mov imul mov fdivrl (bad) (bad) lods (bad) push jrcxz pop cmp in shll cmp (bad) cmpsl mov (bad) push pushfq or xchg mov (bad) pop hlt sub rcrl pop data16 cmp rcrl mov jmpq repnz sbb (bad) mov loop sbb stos rex.WRB rex.R push xor (bad) cs (bad) fild fwait in out rex.WRB push mov imul rex.WRX rcll (bad) jmpq addr32 xchg insl rex.WRX in pop jrcxz rex.B rex insb xor mov jmpq pop mov jg je std repnz xchg xor nop roll or mov adc (bad) jae cltd lahf rex.WRXB cld stos add cmp sbb fsubs (bad) and es (bad) hlt cs (bad) cmp and jnp and jg jge hlt or add rex.X orl es or in mov (bad) jbe mov sub and test movsl (bad) lock xor sarl xchg loope cltd sub fild xchg rex.WR add (bad) ss jg push xchg callq scas mov adc (bad) mov and nop roll (bad) rex.XB (bad) (bad) mov pushfq mov rex.WR out loope clc pop rex.X jl (bad) (bad) leaveq enterq xor rex.X rex.RX add retq lods leaveq (bad) jno not ds stc test rex.WRXB rex.X shl mov (bad) sbb add mov xchg push and (bad) movd (bad) (bad) xchg test lret jmp sub rex.WX pop pushfq leaveq popfq (bad) (bad) fadds cs sub mov scas rex.WR fimul cmp sbb movabs (bad) push add jbe shrb mov movabs in icebp (bad) stos scas fdivrp leaveq jae xor rclb mov and jno imull cmp retq fild or mov movabs pop cld loop mov mov mov (bad) jno movsl mov adc imul rex.WRX and sbb hlt int3 add insb xchg sarb or test in retq rex.RB xor (bad) out and (bad) cmp sub imul mov xlat (bad) sub pop add rorl (bad) xchg loope cltd (bad) fildl movabs push add mov icebp cmc (bad) mov adc jae sbb mov mov fldcw or rex.WRX rex.WXB fiadd (bad) icebp vmovdqa mov (bad) cs sbb and (bad) xchg jl retq rex.WB js sbb jo cld movabs stos sub movslq (bad) mov callq rex.WX movslq or movabs push rex.X rex.WRB add int3 (bad) sub (bad) (bad) and rex.WB rex cmp (bad) rex.WR fdivl add test fidivrl sub jne add xchg insb sub idivb mov fmulp (bad) (bad) rex.WR movabs mov and mov rex.B movsb imul (bad) jmp adc loopne fistl ja movsb jnp js sbb xor testl out movabs adcl add movslq push xchg (bad) movabs add insb out jge jrcxz fidivl pop (bad) rcrl iret xchg retq sbb rex.WB mov (bad) mov movabs hlt jbe iret imul icebp int3 stc leaveq cltd lock and xor adc iret add mov int3 rex.WXB mov rex.R (bad) retq lods rex.RX (bad) mov adc (bad) mov (bad) retq fldcw push and outsb or cmp rex.WR (bad) std (bad) bnd or lahf adc (bad) push loop mov xchg movslq int3 repz adc pop jne (bad) xchg (bad) and rol sbb lret jns fcmovb pushfq pop (bad) (bad) or xchg pop sub rex.WX cmc mov repnz loope mov rol or mov add rex xor (bad) pop or push add mov pop rex.X or xchg (bad) addr32 out lahf movslq retq test jl loope xchg cld jne enterq rex.B cmp (bad) icebp pop adc pushfq (bad) (bad) fildl xor or outsl movabs pop push mov rcr testb (bad) sub rcrl imul jno scas js (bad) xchg lods cmpsl outsl rex.WRXB in rorl roll and std mov jrcxz jl jno cmpsb rex.X xchg rex.WB fwait add lock mov adc add fsubrl cmp sbb add rex.W data16 xorl pop lahf mov rex rex.WRX fwait sub jo shll cmp mov (bad) mov rex.WX rex.WRX iret mov lods (bad) pop loope shll rex.XB repz xor and sub push sub xchg (bad) out roll xor mov out pop incl (bad) add insl rex.RXB mov rex.WXB fpatan shll sahf mov push xchg retq sub (bad) jl (bad) stc imul push andl rex.WR and shr test mov or xchg test cmp (bad) (bad) cmp add push push (bad) rcrl cwtl (bad) xchg push mov movslq xchg in stos pop adcb jae sarl rex.WXB sti and in (bad) and (bad) pop sarl insl fs (bad) xchg sahf rex.WR loop (bad) rex.WRX push std cli lods je mov adc push and mov rcrl xor (bad) push sarl xchg push loop loopne cltd mov push (bad) jno or rclb push add callq (bad) rex.WRB rex.WR mov adc lahf rex.WRB (bad) repz int sarl cmp imul movabs retq mov xchg mov pop (bad) (bad) imul xor and push loope fwait div test sbb sti xchg jrcxz (bad) leaveq jo xor (bad) sbb mov xchg imul stc movabs mov or pop sbb jbe jg and push xor movabs rex.WXB hlt sbb fistpl mov test rex.WX iret (bad) add mov fisubr adc sub xchg add cltd sub xlat movsb rex.WRX push imul mov jae shll (bad) retq int or sbb enterq (bad) pop xchg mov xchg or repz rex.R lahf movabs (bad) (bad) lahf mov mov jl leaveq mov rex.WRB js out (bad) stos (bad) push movabs cmp sbb clc xchg add rex.X loopne adc out fdivl lret leaveq fdivr hlt xor mov push cmp lret lea and xor push stos jnp mov imul cs lret (bad) cmpsl fldcw neg xor and add jne mov (bad) jmpq push in cmc int cmp rex.XB rex.WRXB movabs int xchg push out adc jbe enterq and add jrcxz (bad) (bad) sbb lock ss popfq shlb cmpsl (bad) fsts fs movabs loop mov xor lea and loope (bad) (bad) rex.WX fwait xor (bad) mov clc or or rcrb negb mov cmp pop mov xlat pop cmpsl shll (bad) iret lods (bad) jmp add add cwtl in fidivl mov sub add movabs (bad) rex.WRB (bad) scas movsb adc or out sub hlt in xchg sub sub (bad) retq mov repnz pop rex.WRB and ss (bad) imul (bad) xor mov rol test rex.WR sub (bad) scas adc int sub push shr neg cmc jne (bad) push fsubrp (bad) hlt fistpl icebp add test jle adc rex.WXB movabs adc push sbb jno (bad) add je rex.XB (bad) pop pop shll jg mov mov std adc (bad) jne (bad) add int3 mov (bad) pop jge jp xlat cmp and (bad) jle (bad) adc mov fisttpll loopne adc (bad) xchg pushfq rolb or subl xor add ffreep cmpb jmp jb jrcxz test lahf rol mull ja rclb and mov sbbl rex.WRX faddp (bad) fs (bad) loope shrl pop cmp mov push sub iret imul repnz roll (bad) loop insb (bad) jl cltd imul push stos fdivl mov std sarb add faddp mov pop sbb mov (bad) sub insl xor mov subl shl sahf in test pop cld add jmpq test mov cmpsb test mov rex.RX es mov rcr rex.WX xchg movabs in (bad) adc rex.WRX shr lea fstpt mov (bad) (bad) mov jae rorb xchg (bad) faddp jp loop pop rex.RB ds in fld outsl test xor or pop pop fwait adc movabs (bad) adc xor nop mov add and and rcrb (bad) enterq (bad) or fstpl mov rex.WXB (bad) mov (bad) adc or out sub callq iret cmpsl rex.R and and rex.WRX sbb jmp add cmp popfq cwtl jae or ss fadds push mov cli or scas (bad) lcall callq sub loope pop cmp (bad) (bad) frstor and sub pop add cld (bad) loop movabs xlat mov iret cmp (bad) ja adc outsb jg or lret add rex.WRB (bad) or (bad) mov rex.WR xchg movabs (bad) mov shll (bad) in clc pop insl or mov loope xchg fwait popfq mov iret pop lock (bad) scas mov push adc out ss repz rex.RX (bad) roll xor rcr or test mov imul jno xchg (bad) sti rex (bad) or (bad) mov and (bad) rcr (bad) cmp (bad) jmpq (bad) xor rcrl mov roll push shr (bad) jno and cmc (bad) rex.WX rex.R push jno lods faddp fnop push out jno jbe sarl out enterq (bad) lock lret xchg (bad) ja shl fs test mov insb rex.WRB movabs hlt retq xor cs pop loope sbb or add xor bnd ss add mov ja rex.XB nop and movabs (bad) ss sbb push leaveq rex.R stos movslq push outsl (bad) jnp stc faddp xchg xchg sbb add (bad) (bad) sub pop and loopne mov push push in rex.R jp pop adc pop cld pushq rex.WRB rcr pushfq or stos push xchg movabs shrl subl and cltd or mov and hlt mov add addr32 mov (bad) pop sub (bad) jg xchg adc insl test es (bad) (bad) scas sarl mov push stc cmc or mov loope rex.RX addr32 sarl xchg rex.WRXB (bad) shll (bad) lock (bad) repnz out shr fildl mov mov (bad) (bad) jbe (bad) adc add rex.WRX sahf sarl enterq (bad) retq ja movslq outsl (bad) insb jg or mov cmp sbb (bad) mov outsb mov std rex.WRB cmovno xchg test (bad) (bad) loopne lret sti sub mov jae (bad) iret gs adc stos add loop enterq shr movabs int xchg mov (bad) xchg sub retq cltd and sbb jns lahf jle add mov jae (bad) icebp leaveq xor iret pushfq addr32 or xor outsl or cs cltd pop rolb mov (bad) (bad) repz cli pop clc rex cmp rex.RXB mov test or (bad) (bad) mov popfq loop jg in jmp roll mov (bad) (bad) lods (bad) std or cli in add cmpsl pushfq jae in fwait lret int3 (bad) (bad) push sub callq (bad) lods (bad) rcrl cmc sub (bad) test pop js (bad) sbb outsb pushq push divq sbb jmpq outsb (bad) (bad) ror cltd (bad) in add add add rorb pop cli loop cmpsl stos sarl test rcrl icebp inc push rex.WX (bad) mov and add (bad) (bad) and cltd mov cli rex.XB pushq (bad) pop rol (bad) lahf push movabs rex.W pop movsb in popfq ffree jmpq imul jno (bad) shl xchg mov mov imul mov rex.X (bad) roll push rcrl mov mov xchg shrl outsl shlb js mov lret push rex.B xor pop xor enterq (bad) repz add imull lock (bad) cld cmpsb repnz pushq rcr and out in rol rex.X rcrl cmp mov mov shrl mov out movabs (bad) xor (bad) scas or jmpq (bad) mov add outsb adc callq loop mov (bad) (bad) xor movabs rex.XB (bad) rex.RX iret adc xchg rex.RX (bad) rcl push cmp int fimull adc test out fldcw retq ss rex.B movabs (bad) rex.XB sbb pushfq and sahf cs sysexit mov movslq test es lahf add out or test jo mov (bad) iret rex.RB hlt repnz movabs lret and add xchg lods sahf movsb (bad) shll stc mov or xchg stos js and xor (bad) clc std cmpsb xor and cmp or scas (bad) outsl rcll mov xchg cld rex.WRB mov mov sbb repz push rex.RXB pop or mov pushq out (bad) rcrb adc rex.RB and xor and (bad) rex.WR add xor sbb sub adc jmpq sub push movsl shrl sbb (bad) rex.WB sub and (bad) fwait pushq jle int int3 sbb leaveq adc int3 rex.WX enterq rex.WRX sbb test sbb insb callq out xor lret fisubl (bad) fldl xlat sub push clc shll fisttp sub jae stos sti mov jrcxz mov iret or test (bad) cmc cmp jmpq or push sub rex addr32 or mov xchg cmp rex.RX pop rex.X fstp mov (bad) loop rex.B fwait pop xchg rex.RB and lret sbb mov cmp (bad) (bad) mov icebp rex.R mov js (bad) and rcrl and rex.X mov data16 rcr retq and std mov repz jmp int3 icebp sub pop rex lahf in adcl xor rex mov and repnz or and test xor pushq sbb (bad) adc sbb push stos (bad) or adc fadds cmc outsb callq addl out mov xor jns or jbe cmpsl sbb imul imul stos cmp sahf add testb xchg mov cmpsb sbb push and jp rex.RX repz (bad) (bad) repz rclb ds adc (bad) adc (bad) fs ds repnz rex.X push (bad) sub cmp (bad) lods (bad) gs and (bad) loop lock xlat mov fisttpl (bad) and add and mov or bnd mov shrl rex.RX and (bad) sbb insl test enterq in add mov mov jae xchg or jmp cli rex.RB xchg sti push rex.R fiaddl rex.WR ds mov xchg (bad) sbb cltd xchg push mov rex.B add ljmp xchg test std cmc adc out or add cmp mov (bad) in (bad) int3 push jg mov movsb pop pushq pop xchg (bad) mov sbb jrcxz shl movslq gs rex.XB test mov gs cmp xchg mov cmc sub xchg bnd (bad) in test (bad) rcrl adc ds xor iret jns sub push sbb jp (bad) outsb (bad) hlt push mov flds mov std xchg mov jp dec mov cmp sbb stc or pandn gs xor push (bad) (bad) mov push mov rex.WXB mov and jnp (bad) adc (bad) lock jmpq xor cmp hlt addr32 xlat callq enterq rcll pop rex.RXB sub hlt jbe rex.WR insl stc rcrl rex.WXB jg sarl outsb cmp (bad) enterq push mov (bad) mov roll test shrl sahf jb retq loop xor leaveq popfq insl sbb stos rorb push sbb int3 adc cli xchg rol jg push lods (bad) or (bad) sbb shlb or inc jns mov loop cmp xchg rorl movabs rorl loop out enterq and movabs and lea rolb (bad) nop ds insl test adc jmpq rex.RX cmp xchg rex.WXB fisubl mov and xor lahf (bad) (bad) jg jno and rex.WX mov rcll stos mov rex.R rex.WRB test mov cwtl fs (bad) (bad) rorl xchg retq mov mov insl (bad) xor lods data16 rex.XB sbbl fs or int (bad) cltd sbb cmpsb fisubrl shll out (bad) adc cld add jnp (bad) rex.WX cwtl rex.WXB lahf clc (bad) mov pushq out callq icebp add lret pop rex.WXB fcoml pushq scas int testb sbb lret (bad) rex.WRX sbbb js ljmp (bad) ds mov (bad) out stc cltd (bad) and rorl (bad) mov outsl (bad) in (bad) xchg push sbb movsl jrcxz ja jns add sub mov and jbe mov or mov subb in mov or xchg out cmpl xchg mov iret pushfq sub lret rex.W jnp fstpl add testb (bad) or fwait cli cmp sti addr32 callq mov xchg shr mov lock iret push (bad) (bad) scas movabs (bad) jb jne sbb in xchg or xchg add pop cs (bad) cmp std retq in mov in (bad) mov xor rex.R jae hlt (bad) outsb shr movabs xchg retq sarl mov (bad) mov sbb sbb rorl clc movabs cmp rcrl (bad) rex.WRX and pushq test (bad) push mov mov (bad) sbb rex.XB adc roll xor (bad) fnstsw pop movabs rex.RX (bad) hlt fiaddl rorl out sahf sbb rex.B jae add movsl js cld jg adc scas (bad) stos sbb (bad) jb (bad) xchg or sbb imul je cld (bad) (bad) adcl std push jae lret imul jg popfq rex.RXB leaveq cld push push fwait (bad) rex out movabs (bad) pop mov pop div lahf and add mov (bad) lret lods fisub sbb rex.RX pop sub rex.RX gs (bad) xchg mov sbb int3 add sbb jle (bad) pop cmp mov enterq xor pop stos pop push (bad) cmp rolb (bad) rex.RX pop pop movabs retq iret shl (bad) mov sbb (bad) test movabs (bad) scas mov pop jbe fnstenv xchg rcrb and movabs xchg pop out mov jne callq xor (bad) push cmp bnd sub rex.WX cmp jp sbb leaveq popfq insb ror or cs jle rex.WRXB and (bad) sub xlat iret rol lock int retq int movabs lahf js mov jnp sbb or cmp (bad) loopne repnz mov adc gs enterq shrl pop xchg mov movslq pop int cld sbb rcrl insl pop mov cld test stos rex.WB push push add mov fcmove insb jb xchg mov sbb rex.WR out std xchg imull in (bad) shrl and (bad) mov shll outsl repnz frstor iret stos add (bad) rex.B xchg mov icebp and jmp imul mov in rorb mov jns enterq es or shrl popfq gs xchg add rex.WRXB jo (bad) xchg outsb push (bad) push repnz mov mov movabs rcrl movslq (bad) (bad) (bad) (bad) (bad) (bad) and sbbl lods rex.B and addr32 add xlat sub out (bad) or scas frndint (bad) imul push movabs push (bad) in adc lea jmp jp mov je add shll rolb mov scas push (bad) cltd jle mov (bad) roll fwait hlt rcrl repz jle rex.RXB (bad) cmc mov jmp pushfq jne or (bad) mov (bad) repnz (bad) rex.WB fwait adc (bad) sub lret push js xor adc in movabs mov int pop in (bad) jp push movabs movsl mov repz in mov rex.WXB ja push roll in movabs retq add outsb in (bad) insl cmp pop outsl movabs xorl mov rex.RXB mov mov movabs push xchg sbb shll (bad) mov rex.WRB pop test rorb jb sarb push (bad) rex.WRXB (bad) jl (bad) movabs shrl rex.WRXB rex.R cwtl rex.RX cld pop cmc mov (bad) pop imul test loop int sbb (bad) test movabs sub cmpsl (bad) push jae push rex.WRB es outsl pop mov cwtl loopne (bad) out fwait mov scas (bad) fsubl rex.WRXB pop adc stc and shrl cmpb pushfq sub repz mov or jne (bad) out cmp sbb (bad) rcrb fwait sub (bad) jrcxz jbe (bad) jbe movabs scas in mov xchg xor cmp stos rcrl cli (bad) repnz adc lods and rex.RX add retq fs shrl in shl loopne pushq (bad) fld rex.R xor cmp rex.WRX mov pop mov negb cli and cmpsl push rex.XB leaveq and (bad) iret rex.B incb mov stos cli shll scas cmp test xchg stos rol insl outsl xor rex.B ds (bad) sub push (bad) rex.W ss and int3 roll hlt rex.B rex.WB or xchg clc (bad) out add (bad) sub (bad) sub rex.WRX fcmove scas (bad) mov jg lahf mov lret cld rex.X rex.B rex.B sti pop mov and int rex.WB jp fwait jp stc pushq and movabs mov sub repz sub add mov lods scas out (bad) rex.WB xlat (bad) div jne (bad) jbe (bad) jno (bad) mov jmp xor fucomip sub outsl push (bad) jns push lock loope (bad) add lods ja (bad) mov mov (bad) (bad) out movslq sub test (bad) pushq insb rex.WXB ss mov nop jg mull cmpsl and test test test (bad) (bad) cmp lret (bad) cmove mov sbbl mov add (bad) (bad) mov roll (bad) (bad) shrl xor hlt fidivrl cltd enterq mov push rex.RX xor mov movslq mov sbb and push adc sub movabs xor in cwtl scas xorl cmp jb fistp out xor loope (bad) xchg mov (bad) mov jo rex.RX pop sbb pop iret repnz repz jb orl enterq je mov (bad) rcr test cwtl loope (bad) data16 push add (bad) pushfq or lret mov pop rex.W pushq out (bad) xor movsl rex.XB loope mov cmp in mov jb rex.WXB lret xchg outsl (bad) shll pushfq rex.WRX push (bad) (bad) cmp mov jl sti xor (bad) lea adc (bad) enterq push stos (bad) add cmc push pop rcrl (bad) adc rex.WX pop sub movabs xchg sbb (bad) cmp cs sub (bad) sti mov xor sub vpunpcklbw out int3 sub (bad) insb and fsubs rex rex.WRX adc movabs mov lods enterq (bad) (bad) sub rex.WX (bad) rorb retq (bad) mov rex.WX mov jp mov jmpq jo sbb (bad) rcrl mov jg movabs adc out (bad) roll and popfq movabs sub cmp add (bad) es sub shl (bad) cli in test xchg clc jp fcoms (bad) jle (bad) xor cwtl adc (bad) sbb (bad) jb loope (bad) xchg shll movabs cmp lret adc roll rex.WXB rex.RX callq and add jno adc and (bad) mov lret (bad) push adc loop mov leaveq (bad) mov (bad) adc rorl fs adc push mov cli rex.WRB jmpq out icebp jo adc fcomi jne xchg jmpq leaveq (bad) (bad) and fld sbb rcrl (bad) sbb ss xlat cs shll movsb add cmp jbe ja rex.RX imull (bad) and cmpl (bad) rex.W shrl jmp (bad) shrl sar mov (bad) mov cmp cs or sbb (bad) test movabs addr32 shll pop faddl std cmpsl out push mov shrl insl je test jl outsb jne hlt cmp jge sbb sbb sub rex.XB (bad) idivb push pushfq repz fidivr ljmp mov or rorl jrcxz mov out pushq cmp push and imul int jno nop fiadd lods ror push out or mov mov mov xor rex.WR lret cltd (bad) rex.B jle movslq int3 stos rex.WX outsl loope pushq movabs jb (bad) sub mov cli sub xor ja and sarl jne (bad) mov roll push mov mov rex.B scas sbb movslq adc cmp addl popfq mov lret shll pop movabs (bad) rcll or rol (bad) adc xchg (bad) (bad) cltd adc mov (bad) (bad) xor (bad) imul adcb mov push adc mov sar fistl sub sarl fldenv (bad) out or push retq out xchg cmp push jno jmpq shl int3 (bad) movsl hlt (bad) rcr fdivl (bad) (bad) push ror insb or mov jmpq and adc jns sub int3 jg imull out rex.WRXB and jl sahf cs rex.WB fs clc rol fimul rex.B jne (bad) (bad) sbb sahf fsubl in fistl stc adc movabs int3 add and movabs and xchg jno adc out movabs icebp retq clc xchg test lock mov rex.WRB adc rcr mov (bad) mov rex.R fisubr (bad) mov insb bnd (bad) movabs push jnp testb outsb cmpsl ja sub push ja xor int rex.WR fnstsw movabs retq add flds and fsubr (bad) testl rex.X rex.WXB cmp (bad) pushq fdivp sub (bad) rex.WR lahf ss fidivl rex.W imul jno cmpsl cmpb xchg repz ficoml (bad) (bad) add (bad) cltd in pushq and jae add push add rex.WRX cmp enterq (bad) (bad) adc pop nop rex.WRXB fdivrp pushq (bad) sbb push fadds ja xchg flds mov jne retq js jmpq lret jae or icebp movabs push test pop add fidivr mov enterq imul (bad) or and rex.WB repnz fcmovnu sbb in outsb rex.WB orl rex.WR movslq (bad) and enterq pop cmp sub mov sahf xor and fsub vpsadbw lods sub add in vunpcklpd sub in (bad) (bad) add pushq xlat callq rcrl mov mov pushq rex.WRB add loop pushfq adc add popfq xchg sub shll pop push rorl rex.WX (bad) xor test rex.WRB stc or (bad) (bad) int imul sar xor cwtl insb mov rex.RXB or shrl sbb jg divl (bad) sub sar rex.RXB repz (bad) pushfq movsb fwait or rex.B (bad) jle jmp sub (bad) pushq sub int3 push test and xchg movabs rex.RB or jge rex.WRB fwait cltd (bad) jb cmp add (bad) (bad) lret (bad) jno jrcxz paddusb pop mov sub shll callq sbb fmul add xchg enterq icebp mov (bad) mov out iret xchg adcl in rorl cmpsl mov rex.WXB pop sub jb mov rcll (bad) (bad) xchg or pushfq ds outsb cltd and std mov fwait cmp mov pop out in movsb shll pop xchg movabs adc sub (bad) push shrl mov sub xchg or add add push mov callq lret jle shll add lods roll data16 pushfq rcl sarl add rcrl testb (bad) iret jb or test (bad) adc rex.RB adc jp rex.WRB or sub rcrl ja test adc sbb ds stos nop sub iret (bad) insb fstpt adc cmp movsb jmpq mov movabs (bad) jno jbe cmp in movabs rol movabs adc (bad) int or out loop add addl shr adc sub sub cmp jns sbb fwait lahf flds cmp cmp sub (bad) pushq (bad) je shll xor xchg cld (bad) rex.WRB mov push rcrb rcll and jne or rex.WRB jno rex.WXB mov adc roll push imul (bad) rex.B jmp stos xor xchg retq xchg cltd test or (bad) mov in nop jmp mov rex.WRXB (bad) movabs xchg jge out rex.WX sub and adc roll (bad) mov pushfq test push add and shll and ja roll rex.WXB pushq xor cmpsl retq js movabs mov rex.WB addr32 int3 insl scas sub movabs shrl (bad) fwait out cmp xchg mov std ss (bad) (bad) rcrl scas sbbb xor mov imul mov cwtl loope movabs in and insb callq mov popfq mov and (bad) lock jo (bad) (bad) fsubl mov in cs repz fsubs rex xchg shr enterq hlt jmpq repz rorl sbbl callq mov ror jrcxz cmpsb lret test repnz popfq repnz sub int pop xchg callq xchg in add pop repz fwait add rex.RB rex.WX test cwtl jle sub add rex.WRX lock sub sahf pushq (bad) and pop pop pop mov sbb rex.W (bad) in (bad) out mov movabs subb xor pushq rcll fnop lret (bad) sub add cltd (bad) xchg pushfq clc int sahf adc cwtl sbb popq mov int adc (bad) jnp adc xchg xchg (bad) sbb jno repnz xor (bad) mov jle xor push ds cmpsb (bad) pop retq add mov cwtl or out sar fs jmpq (bad) (bad) sti pop rcrl adc (bad) jrcxz jg jmp callq sbb addl in es jae xor rorl mov cmp mov movsl xchg fdivs subb (bad) je jno rorl mov jae,pt jge rcl leaveq sahf shr mov frstor in cmp rex.WRX movabs imul (bad) mov or sarl adc shll xor std jge rex.RXB and int xor shll jb iret push add mov rex.WX int stos lods icebp push movabs movabs (bad) rcll gs or js mov sbb rorl and jl ja xor pop loopne jmpq add rex insb mov outsl out rcll (bad) in rex.WR add jl and adc orl (bad) (bad) lret fistl in sub or (bad) (bad) rex.RX add rex.WX (bad) ja (bad) loope jns cmpsb roll jno mov jp (bad) xor mov sahf (bad) fs es test jmpq (bad) rcrl add mov fdivs pushfq mov xchg lret (bad) (bad) mov (bad) pop mov xor (bad) rcrl lret (bad) add (bad) mov std pop in add (bad) repnz cld lret rorl xlat insb fsubrp (bad) fld rex.RX or jge jno pop xchg or movabs std rorl shlb test rex.B fdivrl stos pop popfq xor (bad) adc je lret test fisubl retq and (bad) (bad) ja int pop test icebp (bad) rex.RX rex.X divl retq int3 lret mov fnop lldt jle (bad) jnp (bad) add scas loopne (bad) jp jb ffree nop xchg (bad) js cmpsl rex.WR addb stos rex.XB rex.X jno fs pop sub lock rex.RXB push (bad) mov (bad) addr32 (bad) mov rex.WRX rex.W rex.RX sub (bad) out jge rex.WRB adc (bad) in (bad) movabs sub insb sbb xor leaveq std pop (bad) rex.XB (bad) popfq pushq imul in push xor add shlb xchg fidivl lret sub rex.WR adc fadds rex.WRX movsb mov rex.WR rex.WB mov mov orl test and repnz addr32 scas (bad) int3 repnz cmp sub rex.WXB frstor cmp xlat xorb (bad) (bad) mov jnp (bad) (bad) fldcw jns movsb movabs xchg pop loopne cmc js jmpq icebp (bad) and test rex.WXB bnd add rex.W cmc jg lock pop cs lea cmpsb adc andb xor jp jo sar movabs loopne (bad) xchg and (bad) mov push sub (bad) fcoml movabs hlt xlat stc ffreep jae rex.WR test pop repnz (bad) (bad) mov rex.WR push and xchg cmc fidivl push (bad) (bad) add loope adc rex.B jp cmp pop mov (bad) mov rex.X ss stc sub (bad) mov mov push jae pop sbb lret mov callq packssdw (bad) push add (bad) (bad) pop sbb xchg repnz (bad) sub stos and nop in icebp leaveq fdivrl hlt imul jb and mov (bad) add int push rex.XB rex.WRB rex.WB rex.RB loopne jp rex.B and mov pushq (bad) jmpq je insl movsl rex.XB mov jp in imul and cmp mov repz movslq test add sub push pop imul repnz (bad) insl (bad) sti jmpq fldl stc repnz xchg push mov xor leaveq xor clc icebp rex.RXB test imul hlt fidivl sahf rex.WRB rorb (bad) jae loope test loopne loope pop rclb ja or mulb cwtl rol nop pop xchg jo lret mov scas repnz rex.WRXB rorl (bad) (bad) push enterq rex.WX pop cli xor pushq repz xlat (bad) scas or push mov rcrl jo or (bad) shll (bad) xchg mov (bad) xor push mov mov xor xchg cmp (bad) loop (bad) (bad) lret rex.RX je adc and jne (bad) (bad) xor mov clc rorl movabs pop sbb jae stc fcomps add push xor mov (bad) sub fnsave fisub cmp xlat repz adc imul jle mov jp (bad) out lock (bad) int shll js mov (bad) outsl or movabs jge movsl rorl (bad) out add mov adc xchg cwtl (bad) sarl and mov cmp cmpsl retq pushfq ss fwait mov (bad) cmp rorl push roll addr32 rex.WXB mov nop rex.B loopne repz cmp xorl xchg rcrl popfq sub rex xchg pushfq outsb xor ds lea rolb cmp (bad) (bad) rex.WRB shll shll int3 mov (bad) lret sub (bad) icebp cmp cwtl hlt and lret (bad) pop rex.WX cmp jbe fnstcw push movsb cmp mov (bad) xor mov add int lods notl sub sahf mov mov cld jne (bad) add in shll rex.WR rcll out xor (bad) enterq ss (bad) mov rex.W (bad) fwait data16 in insb in mov rcll rex.WRXB cs sub mov mov in sub lret rex.WX xor repnz rex.WB mov pop (bad) loope sub adc (bad) roll pushq and sahf push leaveq cmpsb mov shlb jbe insb shrl cmp xchg jp cwtl push rex.WB shll cmp cli mov sub cmp leaveq movsl adc xor cld jne test sarl xchg or sbb (bad) rex.RXB std rcrl (bad) rex.WRX (bad) cltd jle and (bad) jp loopne cmp xchg fadd adcl faddp (bad) pushq stc movsb repnz add (bad) mov roll (bad) pushfq leaveq divl xchg (bad) rex.WRX data16 rex.WRXB pop rex.XB test and mov adc xchg mov loope jle rcll (bad) fs js stos out cwtl adc or (bad) xchg out mov jns in rcll ja lea jb xor popfq lret imul and or mov pop (bad) mov (bad) shll sbb stos (bad) sbb repnz std pop (bad) and xor sub rex.WRX cs (bad) jo rex sbb pop (bad) (bad) mov data16 lods fstpt (bad) (bad) or pushfq rcl fisubr shrl sub xchg mov rex.W imul mov jge (bad) mov xor cmp (bad) callq cmpl sbb (bad) roll pminub rex.B fwait cmc mov and push xchg sub test sub and xor xchg cltd push out loop mov xchg stos mov mov cli pop movsb and fnstenv std rex.WRXB rorb xchg test jle lock (bad) jae ficoml pop rex.XB fidivrl insl enterq mov or jmpq xor and and pushq xchg popfq add stos stos mov out loopne (bad) rex.RB push fstpl or in xchg (bad) ror xor test mov fist sbb fildll add movslq cmp roll rex.RX pop fwait loopne add xchg xlat push movsb mov hlt add loopne mov retq mov jns mov xlat jl jge and gs push fs cmp cld jp lock sub lods test std and cmpsb (bad) xor jb (bad) (bad) rex.RB repnz movslq mov jae movabs repnz loop rex.WRX out push lods scas leaveq mov pop push rex.RX in sub rol sub movabs sqrtps rorl (bad) xchg rex.R and test scas lahf cmpsb idiv jg xor cs iret and (bad) (bad) cmp shl add (bad) xchg rex.XB (bad) jmpq out lret sub add (bad) out push jae xlat lret mov mov sahf adc retq cmc rcll xchg sub incl outsl (bad) pop rex.WRXB retq or movabs (bad) adc movslq adc shl adc fcoml xchg sub ja rex.W or xchg sub rex.WRB add std (bad) test push xor fisttpl and jno push test mov clc lret movslq add sub rex.RXB ja or ficom ja repnz xchg add or mov or push mov push enterq mov rex.W and outsl out cmpsl sbb enterq mov outsl rex.X scas loope (bad) xchg stc stos icebp cmpsl movabs (bad) cwtl (bad) (bad) test mov mov div callq lods mov mov (bad) rol xor out mov pop js cmp loope pop sbb push add mov pop rex.WR je add (bad) icebp xchg outsb sub enterq xchg jbe adc (bad) jnp xchg movsb fist (bad) push (bad) lret cmpsl and rex.WB loope (bad) (bad) push pushq rex.W or mov push sub test rex.WB and int (bad) (bad) in movabs fs repnz test xor sbb repnz rex.WRB cs repnz rex.RB sbb rex.XB (bad) fstpl mov scas in mov int3 fldt loopne movabs mov rex.WXB and loop (bad) xor (bad) iret lret clc lret pop jmpq lods rex.WR popfq mov (bad) sbb test and leaveq push fs mov pop movslq rex.R fsubrs lea jne mov mov mov rex.XB rex.X (bad) shrb (bad) sbb int3 loope pushfq sub sbb fadds add fidivrl or or adc rex.X cld cmp fdivr rex.WRB fistl jge rol rex.WR cmp (bad) jmpq jno adc enterq sub rorb (bad) add adc fdivrs int3 (bad) imul cmc (bad) or mov sbb add pushfq lea loop sti (bad) rex.XB pushq cltd (bad) je rex mov retq out rex.B sbb icebp or (bad) pushq mov imul orb (bad) movsl sub or mov cld out roll scas add stc jle movabs sub clc sbb jp mov movabs xor jge in icebp mov adc test add push enterq and mov callq out fistpll out icebp xor in mov (bad) (bad) cmp xor sbb push and (bad) jae out int3 sub jb pop add fs repz rex.RXB lock xchg stc lods sbb cmp pushq push push xchg rex.WRX sub (bad) jmpq jnp (bad) sbb enterq in mov out jno pushq (bad) sbb rex.X rex.W stc cs (bad) jno sbb sar (bad) (bad) (bad) (bad) jnp pop (bad) mov rex.WRB rex.WX sbb add je sub rex.RXB pushq leaveq sub mov add scas movabs (bad) leaveq int fisttpll sub rcrl (bad) std xor scas lahf cwtl jns rex.RXB sub (bad) imul test sub subb shl cs rex.WB adc add shr hlt (bad) (bad) (bad) cmpsl jmpq and lea rex.R rex sub push jrcxz rex.WB rex push rex.WX rex.B cs rex.RXB repnz mov cmp (bad) or flds mov add (bad) adc addl rex.XB (bad) add repnz jns xchg mov icebp and and movabs and shl jno sbb fwait jo rex.W sub add add fbstp (bad) (bad) rex.WR add (bad) insl int int pop repz and cmp sarb movsl (bad) movabs insl movabs movslq xor movabs retq jno retq (bad) retq push xor (bad) fdivp jrcxz enterq (bad) rex.WXB jns sarl (bad) movsb mov rcl jno test (bad) sub (bad) and pop (bad) xorb sub enterq test mov push (bad) (bad) (bad) shrl sarl mov and push add pop (bad) mov loopne rex.WXB movabs imulb fimul lock xchg roll rex.RX shr rex.WRXB imul add es rol outsb (bad) xchg testb pandn add cmp rex.RXB xor stos je add pop (bad) mov repnz adc iret enterq (bad) fnstenv cmp pushq and xor jg or fcmovnb push retq pop movabs xor (bad) popq mov movsl sub sti (bad) sbb stos packsswb xchg rolb loop cmp add rcrq jge movabs mov in xor xchg (bad) mov cmp mov sbb xchg movabs mov in cmc subl lock (bad) sub rcrl pushq (bad) push lods nop fstl (bad) mov mov (bad) rex.WX je (bad) or fdivl jns imul xchg xlat out and shll xchg fs rcrl xchg push xchg int3 mul insl (bad) (bad) mov (bad) leaveq (bad) out xor shrb (bad) mov lock out (bad) jno leaveq test orl cmpsl mov (bad) callq xchg sbb cli iretw xor push (bad) hlt shll lods in movb xchg (bad) icebp cmpsb sub xor and pushfq rex.WRB or mov push imul hlt (bad) ja rex.XB jne rorl std (bad) mov jb scas test vaddps gs repnz xor pop lock ror cmp or pop in insb retq (bad) mov insl or roll mov xchg sub adc xchg mov xchg (bad) mov (bad) jae (bad) sub or add rex.X add pop (bad) sub and stc (bad) out xlat fwait xchg (bad) xor cmp test pushq adc adc retq pop in int3 rolb (bad) rex.WB mov stos rex.RX (bad) mov add in out sarl outsb mov hlt pop vpackuswb sarl adcb int (bad) scas movsl jmpq fnsave retq xor add loope mov mov cmp and (bad) test gs pushq repz lahf xor and xchg out (bad) movabs mov (bad) push add xchg notb sahf sbb xor callq outsl (bad) stos mov mov mov (bad) pushq movsb je pop pushfq sbb (bad) mov push and in fwait (bad) rcrl rorb lret callq cmpsb xorl xchg out xchg fwait mov incb push xor jge lahf cli xor xorb test (bad) xlat mov divl or jae cmp sbb jo add and fwait jp (bad) mov mov add or leaveq push (bad) (bad) mov lea (bad) jae add test xchg pushq clc retq pop movslq vcmpps rex.WXB retq xlat rex.RXB pop (bad) movslq mov rex.B and adc inc jge xchg jnp (bad) rex insl ds (bad) test pop adc (bad) loope and or stos repz fidivrl (bad) (bad) or (bad) mov jl rex.WXB cmpsl mov ds (bad) cmp lret rex.X rex.WR pushq pop movabs fiadd and or clc clc adc roll xchg sub or cmc rex.WRX repnz (bad) jg (bad) xor fcompl adc (bad) add rex.B popfq mov in out (bad) and sbb (bad) lods (bad) (bad) lret pop xchg mov rex.WB mov and (bad) movabs imul rex.WR ds shrl (bad) (bad) xlat (bad) lret movabs add movslq int3 mov and (bad) rolq mov and pop mov cli cmovl xor rex.RB (bad) rex.R fwait pushq (bad) cmp (bad) insb and jrcxz movabs outsl mov test lret pop loop sarb add enterq (bad) pop rex.WXB insl test scas and test sub xchg sbb out fisubrl jmp xor pushq rex.WRXB jae ficoml loopne and mov lret xchg insb rex.WRXB data16 mov scas rex.X rex fwait sub jrcxz movslq je sub out and fsubl pop and add mov cmp retq movsb xor or pushq idivb sub cmp (bad) rorb mov scas (bad) es (bad) js (bad) (bad) in rex.RB add or add or add and jmpq rex.WRXB rex.RX (bad) add js movsb rex.W xlat and add jp test jns in test repz movabs sbb (bad) or cmp mov cmp pop xchg sbb sub sbb (bad) (bad) sbb sbb cmc rex.RB nop clc sbb cmp rex.RXB push cmpsl add mov je rex.RX outsl pop (bad) in int3 (bad) xchg retq jne out rex.X (bad) rex.WB (bad) imulb enterq rex.XB rex.RXB rex.B cmc (bad) (bad) jrcxz enterq cltd negb js sub (bad) js rex.W xor enterq rex scas lods cltd pop add xor int cmp adc lret or (bad) rex.WRB fwait xor movsb jae (bad) imul (bad) mull or xor push cmp push int3 loopne out cmp jge jg cmp cmc (bad) jg rex.R jrcxz (bad) pushq mov (bad) pushfq enterq rex.R repz (bad) rex.WB test movabs nop mov add rol (bad) fmuls add sbb repnz (bad) int3 (bad) jmp es popfq mov (bad) rex.WRB (bad) cld es mov push iret cmp vmread (bad) imul or jle rex.W xor push (bad) movsl mov sti mov lods and imul cmp adc movabs sbb fisub xchg cmp jno sub jae lock rex (bad) sar mov or rorl stos mov nop (bad) lret insb test push loope sahf lret movabs push cli repnz in rex.R sbb (bad) lahf shrl push xor jbe jmp mov mov mul xchg and std (bad) sbb or rcr gs jnp (bad) xor (bad) mov sub rorl jbe fiadd cmpsb (bad) sbb rex jrcxz sti and cmp and or mov (bad) addr32 fwait sarl xchg (bad) mov repz rex.RXB sbb push or push mov xor repnz (bad) loop rcrl loop movslq rcll (bad) pop (bad) pushfq movabs and xchg mov test cmp rex.RXB nop es callq shrl js movabs mov rex.WX out rex.RXB xchg jmpq mov push mov int add xor (bad) (bad) rex.XB insb or (bad) cltd movabs rex.RX rex.WR (bad) add mov icebp xor loope or lods scas or stos and jrcxz callq stos rex.RB push rcrl mov pushq retq mov xor mov sbb (bad) (bad) sub and xor shrl pop movabs (bad) movsb xchg rex.RX outsl or shrl pop (bad) int xlat iret rex.WRB mov (bad) rex.WRXB clc cmc jb (bad) (bad) (bad) sbb shrb xchg mov jrcxz or pop add jne addl jns (bad) fs mov repnz mov xor ja rex.WR shr decl sti sub (bad) mov es vfnmadd213ss repnz out (bad) jo loope iret cmp and mov mov pop rclb scas or rex.WRXB (bad) (bad) hlt xor pushfq movabs out lret lock rclb iret sub (bad) (bad) imul (bad) jne mov or stc lret rex.WRXB cmp add xor sbb movabs (bad) (bad) out rcr mov sahf lahf (bad) cli rcr (bad) rex (bad) sub (bad) mov movabs (bad) jb jp mov xlat jnp lods jl push lahf fadds fucom push mov mulb mov retq xor sarl mov push idiv xchg mov (bad) pop (bad) sbb roll idiv jne or rex.WR in in rcll and jo (bad) sti in push (bad) cmpsb and ja (bad) loope out es pop rex.B and jg (bad) rex.WX repnz rex.X cmp movsb sarl mov callq sub add sti (bad) jb pop in mov callq pop rex.WRB sub pop cmp mov (bad) icebp cmp test (bad) xchg rex.WX cs rex.X repnz (bad) sbb (bad) cmp and mov sub and sbb and (bad) (bad) sbb lahf (bad) xlat repz or mov cmc adc in or jnp stos shlb icebp push pop ror (bad) jrcxz mov (bad) fiadd stos add (bad) jg cmp jrcxz sub jl lahf (bad) pop (bad) cld fsub (bad) movsb jle subl (bad) int3 bnd ds mov rcrb (bad) xor movabs icebp repz (bad) rex.X (bad) in push subl sub (bad) sub rex.WXB (bad) push jo test xor idivl mov xor cmp sbb pop clc mov xchg data16 icebp jle pop (bad) imul rex.RB iret retq loope fmul rex.B rex.WRB cmp cs movabs retq mov mov (bad) subb and callq outsb test adc add rex.WB addr32 push mov (bad) rex.XB and ss pop fsubl rclb pushq (bad) rolb enterq sbb sbb pop fimul and outsl mov sub or (bad) repz sbb int3 push xchg clc in hlt shlb (bad) sti jnp add or mov cmp fldl fs mov orb jge jbe leaveq sbb int stos enterq adc rex.WRX (bad) loope (bad) and mov cmp in pushq lods hlt xor in (bad) fwait jmpq frstor lret jno (bad) adc sub out (bad) jbe stc jrcxz rcr (bad) cs ror cmc (bad) int or or lret or add xchg rorl and jnp or cmp add popfq rex.X adc mov sahf jbe rex.RXB rcll xor sti retq movabs jp rex.X (bad) dec (bad) xchg xchg pop or mov mov xor sub (bad) rcr pop or jmp (bad) cmp pop xchg movabs fildl fstpl mov (bad) (bad) ja movabs xchg xchg mov repz cld add fucomip addr32 je sub xchg lahf adc or vunpcklps and jle add ror xchg sbb ja xchg push loopne rorl sub loop stos pop mov or stos mov gs sub sarl push (bad) adc cmp mov or cld cmp rex.WR ds mov movsl sbb xor and pushfq add (bad) decl repnz lahf pop fisttpll pop or rcll sbb or (bad) mov (bad) (bad) insl push out lret outsl sub shr (bad) sbb repnz gs xchg (bad) cmp xlat or push mov adc outsb or (bad) sub orl sub and lock push or pushq sbb stc pop mov in xor pop int3 fisttpl sbb mov mov xadd out pushq sar subl rex.B (bad) movabs sahf pushq shl cmpsb imul push repnz xor jle sahf rcrl (bad) jb rorl jno stc add (bad) imul in mov loop push ds sahf int3 mov mov rorl sti mov sbb mov movabs rex.RX jno mov push jg cli mov and cmp (bad) or jrcxz mov mov out sti sbb test sub (bad) icebp rex.B imul retq add hlt faddl ds shrl adcl (bad) mov or pop rex.RXB rcll (bad) (bad) mov mov mov rex.WRX add (bad) in rex.RX scas push mov rex.WX rex.WRB push xchg mov mov rex.B fwait cmp in adc (bad) stos sbbl pop shll xchg cmp pop mov mov jns hlt (bad) mov scas vmovlhps adc or cwtl (bad) jbe xor and mov cmp adc or out jb cwtl xchg test rorl (bad) mov xchg push (bad) addr32 add add cmc mov cmp rex.WRXB sbb jo jl add jge nop rex.WRXB test cmpsl xchg xor (bad) add or add movabs fldenv int3 cltd (bad) lahf mov and sbb xor stos mov movabs push (bad) lret (bad) xor leaveq fstps mov xor (bad) rex.RB repnz rex.R jo fwait and scas (bad) jge or mov outsb xor rex.RX xchg jne,pn insb sub mov in mov (bad) push (bad) pop outsb rex.R jb outsb test xor jmpq loopne (bad) jle callq xorl sarb jbe imul sahf push add std mov (bad) rex.WRX addl and fnstenv rex.W (bad) imul rex.RXB rex.WRX rex.XB rol rorl (bad) xchg or (bad) mov push stos push mov popfq sub or loop cmp cwtl rex.RXB (bad) pop lret rex.WRX movabs xor shrb fild fnstsw xchg rex.WX imul fisub rex.X mov (bad) sub sbb incl adc sarl add rex.WXB scas (bad) jmpq mov roll mov je (bad) lret (bad) mov sarl js cwtl sub rcll (bad) pop imulb sub pop mulb mov mov jb std xor (bad) mov mov jb divl cmp ss sub mov or pushq sub and xchg fidivl in (bad) cmpsl push lret jmpq je sbb fwait rex.RXB out test or nop (bad) sub cmc jmp cmpsl or outsl sbb cmc cmp rex.XB rex.B rclb (bad) lock pop (bad) mov int test (bad) movabs jns (bad) insb cmp lret repz mov xchg (bad) in pop xchg (bad) xchg push pop rex.XB pop sub js or rcll roll cmp sar sbb in pop mov mov (bad) (bad) sbb (bad) xchg lahf push xor mov fnstenv mov cmp (bad) fcom movslq xchg shl (bad) imul stos rorl (bad) jae add movsl stc mov xor popfq fcomps nop test mov pop (bad) rex.X rex.WRX (bad) sbbl xchg jnp sbb sarb movabs rex.RXB mov xchg pop xchg (bad) adc in fisub adc (bad) cmp in or callq cmp jg loopne rex.WRB push movups rorl xor pushq rcll fdiv (bad) out int rex.WR sarl xchg shlb rorl ss movabs jmp pushfq jb enterq (bad) in retq repnz and retq push lods rex.WB test movabs enterq enterq ror (bad) push cmp sbb adc js retq je std pop or (bad) mov xor rex.RB jae cmp popfq pop (bad) cvtdq2ps (bad) push ror xchg mov loop mov lret repnz imul adc jge push and (bad) movsl leaveq fist jmpq repz adc jae ffree cmc mov lock rex.RXB and cmpsl or xorb jno sub (bad) mov leaveq mov add lods (bad) lock and loop xlat add rex.WRXB (bad) rex (bad) pushq pop cmpsl cmp or shrl jne mulps mov mov pop scas lahf int3 rex.WR sub jle loope hlt xchg test addr32 jne xor sbb xor rex.W rex.RXB loopne rex out xchg (bad) mov xchg rex.WX stc vpmaddwd rex.XB sbb in mov xchg cmp repz retq cld std scas fldcw orl cs (bad) and sbb rex.WRB scas sti lock loopne xchg outsb in out jno (bad) or rex.WRXB (bad) add sbb xchg jnp sbb or fbld (bad) jl add rcll xchg mov (bad) xor movabs cmpsl (bad) rex.WRXB ds sub leaveq jrcxz shl (bad) lock cld repz mov or mov rcl movabs mov imul pop stc sarl push push shll (bad) fisttp adc lock (bad) sub xchg and (bad) outsl fucomip jg (bad) xchg popfq rex.B enterq xchg movabs (bad) repnz sbb sbb iret scas add sbb (bad) pop xor test test sbb sbb (bad) add data16 cmp retq rex.RX cs push movabs mov in xchg movabs pop in fnstenv (bad) and and movsb and lret test (bad) cmc mov fs adc rex.RX rex.WX out (bad) shrl mov (bad) rex.B cmpsb fidivr movabs xor rcrl or test out es (bad) sbb movabs push out (bad) movabs (bad) in int movabs rcll movabs xor nop xchg cld sbb (bad) sti vpxor shrl imul (bad) add test add or lcall jl add rorl xchg cmc and flds sub rex.RXB imul in fwait (bad) jbe (bad) sbb cmpsl int scas pop sub jrcxz xor push lret clc add rorl pushfq retq stos mov lret in rex.B sbb jge rol mov fldl sub (bad) movb fnstenv (bad) mov outsb (bad) add sar rex.WB mov loop (bad) mov cmc lea (bad) xor mov rex.RXB outsb sub andb out movabs rex.WXB pushq (bad) mov callq (bad) jns (bad) enterq mov jno (bad) mov mov test (bad) (bad) (bad) mov mov pop sbb xchg or add stc sbb (bad) lret (bad) pop fsts rex.XB add push (bad) cltd imulb int3 (bad) (bad) mov rex.WB pop push insb cmpsb int cmp cli rex.R outsl or push (bad) mov cli push rex.B mov cmp sbb (bad) xlat mov (bad) or (bad) adc (bad) rep lods sub pop roll mov (bad) add (bad) sarb movabs sub add or mov ds rol leaveq add (bad) loopne adc pop and (bad) int loopne (bad) mov movabs rex.XB mov mov xchg or scas shll sub cmp rorl rex.B and (bad) add adc test or mov xchg (bad) sub or pop lock push lret loope and pushq sete (bad) sarl cld jo in rex.B movabs sbb adc and rex.RX jl sar mov mov lahf sqrtps icebp xor rcll jge stos stc roll hlt cwtl push stc mov push movabs mov data16 jno leaveq add int jbe push or nop shrb (bad) (bad) fldcw scas pop sub jg cmp repz (bad) jb lods movsl fsubs pop cld shll ds movsb pop adc repz mov or movabs loop insb cld icebp pop rex.RX int test int jae cwtl pop sub mov pop rorl jae jmp loop jo cmp (bad) sub callq (bad) rcrl pop (bad) cmp fisub sub jae (bad) in (bad) mov movsb rolb movabs adc mov pushq xchg (bad) xchg xor push mov push or ljmp (bad) (bad) cli (bad) cmp and xchg pop int loop adc scas mov pop mov xchg cmp fstps stos xchg sub mov pop adc mull mov sub callq cli insl cmpsl es sarl or scas mov jnp loop mov pop cmc and leaveq and test and sub jrcxz push (bad) (bad) (bad) lods and (bad) lock nop ds rex.B movabs cmp movabs (bad) repnz mov jg (bad) test testb adc jge jae xchg xchg sbbl rorl rex.XB (bad) in lock (bad) movabs testl rex.X mov cmp loop mov jno cwtl rex rex.B sub frstor jae and xor shr retq (bad) mov sub movabs and scas jo out iret test test rex.XB pop test ffree (bad) out out std xchg mov (bad) adc addl rol callq cmp (bad) (bad) xchg lret sub enterq mov rex.B cwtl xor popfq out outsb shll sar push pop xor xchg xchg rex.WRB lret (bad) icebp sub rex.WRX mov push loope fldl push std or sarb stc out sahf leaveq jp movsl adc imul push mov adc retq jbe lock rex.RXB sbb shr cli retq sub (bad) in shll jg push sub rex xchg mov push stos rol rex.B xor and sbb icebp mov jnp xchg fwait sbb rcr loop jmp clc je outsl jnp lahf std rex.WB mov roll imul scas fildll (bad) jg xchg fwait mov push stos nop lar movslq adc sub pop (bad) outsb xor and retq lods mov (bad) push fcoms adc movabs (bad) (bad) sub mov cmp (bad) or rcrl pop (bad) gs (bad) imul and enterq pushfq pop cmpl pop out shr int3 ficomp movsb sar and int lods cwtl xlat lret xor mov sti rol and or fs or (bad) (bad) (bad) (bad) pop outsb pushq add cmp cmp push sti (bad) adc xchg (bad) mov adc fwait or rcll rex.RB rex.WR jrcxz stc repnz sar lahf rex.RX fnstcw (bad) leaveq shr xor (bad) rex rex.WRX (bad) (bad) mov imul (bad) scas test rcrl out rcr sbb rorl rex.WRX sub push push movabs adc jg fucomip frstor pop or and movabs xor lea push fnstcw stc rex loope rex.WR rol int3 xchg (bad) in pushfq xor lea mov cmpsb outsb jmp mov push lret shll fcmovnb jg popfq jle (bad) adcl jno pop sbb fildl rex.B (bad) xchg (bad) retq rorl or (bad) movabs movsb adc movsl hlt cmp sarl (bad) movb rcrl leaveq retq retq pushfq or movabs (bad) retq cli push lret (bad) (bad) fs (bad) (bad) sub insb out roll xchg rex.X fwait pop jmp fmulp lods (bad) cld hlt lods xlat cltd sbb mov addl subl pushq decl (bad) adc and fnstcw jo rex.RB movsl mov fwait xor or add setne add callq add nop sarl (bad) xchg rex.WRX rex.R rex.X lods lret jmpq jmpq subl mov test fisubrl rcrb xchg rcrl jbe adc mov lods loopne sti sbb loope pop ss int lret fidivr pop (bad) sub mov test or sarl sub mov ror adc mov jae iret rex.WRB add jg stos fadd cmp (bad) (bad) rex.RX and jae rorb add pop rex.WRB mov push cmpsl jae mov push (bad) rex.WRX shl jle insl (bad) lock jne (bad) sub jne adc stos jl fidiv clc fcmovne or iret pop callq sub xlat push cmp cmp movsl jns xchg cmpsl retq out cld cs bnd add xchg jne (bad) (bad) callq mov (bad) and retq fdivl and pushq (bad) sub xchg xor (bad) movl loope out (bad) hlt and icebp add je (bad) mov pop retq mov (bad) or loope xchg cmp and sbb shll sub mov in cmp jmp and push pop xor insb (bad) sbb add pop xor push test adc stc int (bad) push (bad) std idivb xor push and outsb add mov movsl lret sub and je sbb loope callq roll jbe (bad) adc rex.RB cs (bad) fisubrl mov lret xorb jg adc cmpsl (bad) mul rex.WR xchg rex.WB js cmc fcoms rex.B out fldl mov movabs fadd rex.WRX sbb int (bad) out mov lret pushq lock rex.B leaveq cld addr32 jp xor (bad) rex.WRX mov xor (bad) (bad) insl je mov xor lret mov and push xchg sbb (bad) mov out lret (bad) frstor pushq rex.WRXB imul mov add (bad) add xchg (bad) or cli rex.WX rex.B and xor ja test outsl xchg or push fisttpl sub data16 adc sahf (bad) cmp pop in js pushq shlb mov in shrl or jrcxz or mov xchg sub sbb js movabs shrl xchg je mov (bad) cwtl cmp adc lods and loop shll jno mov mov mov cmp in and (bad) push cmp shll rex.WR add (bad) pushq xor jne xlat or mov (bad) sbb adc fwait lret add and adc rcrl shrl test add mov push loop push push (bad) mov mov js add xorl add (bad) (bad) (bad) shrl test pop cmpsl iret (bad) in std fiaddl mov in and movsb push mov sbb (bad) hlt fwait add shrl std iret sahf mov pushq sub (bad) xchg es cmp out fistpl fdivrl xchg add (bad) in (bad) xor or mov rex lock std (bad) je pop jb (bad) mov (bad) popfq movabs shll push repz xchg repnz lret mov shll negl out stc iret popfq in shll rex.X leaveq mov push (bad) pop xchg rcrb or and rcrl (bad) mov xor jp lret mov sub (bad) movabs repz mov xor push add pop xor movabs xor mov push (bad) repz cmp adc (bad) (bad) (bad) xor rex.X rex.RXB mov or popq mov cmp lahf mov fucomip mov ds sub rex.RXB add rex.WRB (bad) mov imulb xchg xchg (bad) jrcxz test fsubs add int3 xorl jmp sahf and (bad) shlb (bad) (bad) subl and or sub add rex.RXB orl (bad) (bad) xchg jo stc xlat cmp or push and xor out pop adc (bad) sub dec pop cmc (bad) lea lock push jl xchg loope rex.WRX rex.WRX movsl mov (bad) xchg add loopne jge out cmp add xchg pushq mov push xchg jp (bad) cli pop cs hlt iret lods and mov std pop xchg xchg je jno jae retq leaveq sub insl mov (bad) pop fdivl stc cmpsl adc test repnz sbb and ror (bad) and and and (bad) frstor (bad) push stc mov stos loope sub rex.RB jbe xor leaveq (bad) out or or fs rcrl xlat jrcxz (bad) (bad) jp pushfq adc lock rex.WB (bad) test shll lret rcll mov fs test movabs sbb and iret and mov test or rex.WRB adc mov in or shr push jmp out push in sbb jb mov test cmp mov xor loop out testb (bad) repnz mov mov xchg iret and rcrl xchg jrcxz fadds lret add xchg add jns sub bnd ds test adc (bad) jne rex.B pop and (bad) mov or (bad) movsl sbb (bad) sar mov (bad) xchg rcl mov int3 xchg stos pushq rcrl lods rex.WXB shll sub cmp adc mov sub callq mov (bad) mov rorl mov rorl mov (bad) rex.WRX sarl lock fdivrs mov (bad) lea or jmpq mov scas sub out rex.WX rex.RXB callq pop in pop retq movslq test mov out xchg (bad) rorl int3 xor (bad) fadd rex.RXB pop outsl or and movabs xchg rex.B or cld popfq pop sti cmp roll retq mov shll (bad) adc sahf (bad) mov pop push jne sbb jbe (bad) std push xchg sahf addr32 sbb (bad) movabs mov test xchg mov sbb rcll (bad) movabs (bad) pop rorl test movabs mov fwait shl cmp pop xor movabs imul mov outsb bnd (bad) adc frstor gs int (bad) mov mov test fildl in stc jp sti adc push lret (bad) rcll addr32 idivl push mov pop test and pop sbb movsl or rex.RXB pop rcll adc (bad) rex.WRX and mov xor mov fwait popfw (bad) cltd rorl (bad) movsb add int lock rex.WRX movabs mov test ja gs pop xor stos sub xchg (bad) out int xor cmp cmc push (bad) mov rcrl (bad) xor bts in mov popfq out rcrl push out loop int3 iret rex.B lock cs loopne (bad) (bad) fnop lods rex.RXB mov pop in hlt (bad) push test out jl mov cmp andl mov mul pushfq adc sub and stos std out (bad) sahf add je adc adc rcrl jns loope rcll xlat movsb mov xchg rex.XB mov and (bad) pushfq (bad) addr32 jle add sub fdiv out cmp movabs popfq mov mov sub mov (bad) (bad) (bad) in add cmp rex.RX (bad) scas in (bad) retq rex.WRB cs adc (bad) rex.WRX adc sub mov roll jno jg test jbe roll stos iret pop push (bad) xchg add jnp add adc (bad) cmp pmovmskb sar rex.WR (bad) sbb (bad) mov ja or test jns cmp lock adc adcl push cld xlat rex.R outsb xchg sarl push insl rex.XB pop (bad) repz xchg fcmovne and sub xorb adc adc stc sti or retq jne,pt mov nop leaveq fsubrs (bad) shr (bad) icebp jae rex.RXB rex.R cmp popq (bad) enterq rex.X test rex mov pushq loope sbb ror rex.WX out mov pushq sahf mov retq (bad) sbb pop int shll mov pop cmp mov (bad) (bad) xor std mov (bad) xchg je roll (bad) rex.RXB (bad) xor test jae movabs ds push rep test sarl rorl (bad) mov iret imul add (bad) and lahf mov pop loope mov mov (bad) jo callq jp push scas (bad) iret in and stc mov xlat pop int insb xchg push xchg (bad) (bad) mov and (bad) xor or int xchg rex xor stos flds mov (bad) xchg mov mov push or rex.WRX pop movabs cmc xlat ds enterq mov sub xchg cmp popfq callq shrb adc cmp xchg retq (bad) xchg jno mov cmp je add rcrl (bad) iret shr cmp pop or (bad) jg lods movabs rex.B imul mov retq pushq (bad) jb sub outsb mov and or cwtl add (bad) shrl mov jmpq rcrl rorl mov out adc test cld jrcxz rcl (bad) or lret pop sub addr32 cmp xor mov rex.WRB movsb xchg jl jp push xchg mov sbb sbb mov movabs loopne cld clc (bad) scas (bad) mov js mov xchg movabs jno test and (bad) sbb xchg (bad) add xchg jp and clc mov (bad) cmp and fldt (bad) xchg xchg sarl fnstenv sahf stos rorb pop mov rex add pop or mov (bad) (bad) repnz rex.RX (bad) (bad) and and fistl push cmpsl pop xor (bad) mov cmp (bad) rolb push rorl clc pushq cmc jrcxz sub jno mov int3 cs rcr sbb cmp and shl add movabs es rex.WRXB out fisttpll ss sbb rex.WRX popq jnp loopne rcll (bad) mov retq cltd loope xchg (bad) leaveq rex.B cmp push add cmp sahf rex.W (bad) mov (bad) fimull outsb (bad) cmc (bad) push lret jno cmpsl (bad) cli fbstp ja xchg (bad) mov cmc and push and push scas movb add fistp pop (bad) add div rcrb sbb rex.RX rcrb cmp sbb (bad) or cmp jl (bad) addr32 and add sbb lea fbld jg enterq movabs pop sub push int jno pop cli test (bad) jns repnz rex.WR add mov scas sub push rex.WB cmpsb fimul int fcmovu cmp sbb enterq push mov xchg sbb rex.XB ffree ficoml fidivl loop (bad) movsl sbb repnz sub sub pop clc pop cmc rex.R pop adc lret (bad) notl (bad) iret mov and or mov sub lret xor push push fcmovnb rex.XB jbe cmpsl add cmp rex.RXB insl movslq and lret in (bad) imul loopne lock rex.RB rex.RX retq xchg xor loope cltd lock lock addr32 or mov or scas rex.XB sub movsb xchg sbb jae lret sti add andb es mov push rex.WXB xor mov pop test es jge mov enterq mov xchg imul imull xchg jae (bad) mov (bad) (bad) adcl rex.WX xor rol lret retq sbb cmp int3 rex.WRX rex.WB fstpt xchg pushq cmpsl rex.WR (bad) (bad) lcall cltd shl (bad) fisub stc lods xor or add (bad) rex rex.RB ficompl cmp jb mov insb movabs xor xchg xor in test (bad) rex.WB add and retq (bad) mull cltd xor (bad) (bad) adc (bad) sub mov scas (bad) movabs int3 scas cmp cmp (bad) rex.XB std xor fildl jmp rex.WR je retq icebp mov mov fwait mov mov je movabs and movabs rex movabs cmp sub imul and mov test rex.WRB and rex.WXB out lea mull outsl sarl lock push xor movsb (bad) xor (bad) or ffree lea pushq sbb pop and rex.W pop rol rex.WR mov out hlt rcrl (bad) xchg shll loope cld and pop iret pop (bad) jns rex.WB in cmpl sbb sub rorl scas fwait in push pushfq rex.RXB sub fdivrs xor (bad) (bad) mov (bad) ss sbb mov sub pop roll sti xchg imul adc mov sub test adc pushq cwtl rcll xchg mov rcrl sbb (bad) movabs xchg jbe imul mov scas repz and add pushfq rcll insl (bad) xlat or ror callq (bad) (bad) mov xchg clc rcrl mov rex.WX shrl lea or sti pop mov pop xor rcll and or (bad) adc xchg xchg movsb or hlt shll xor push mov (bad) xor cmpsl test test cwtl movabs mov xor scas rorl int mov add out (bad) fidivr movabs mov fstl out lret xchg stos fadd (bad) movsl mov mov popfq outsb push out xchg or cmp insb movslq (bad) add in (bad) mov (bad) shll or test pop movabs sar xchg (bad) sub sub stc push rex.X loope sub lret xchg ja add rex.WXB in negl retq jle add mov out movabs int sahf fcmovbe lahf scas shll negb rex.WRX jrcxz adc pushfq rex.WB ja movabs mov repnz jnp roll jbe in xchg movabs xor je retq imul clc (bad) sahf push movsb shll adc sarl mov jge (bad) ja xchg out jbe xchg scas sbb (bad) faddl rex.WRX push outsl enterq rex.B test or sahf xchg cmpsl and shrq add in ja (bad) (bad) mov subl negb movabs lock mov js lret test (bad) pminub sarb mov (bad) ja test cltd xchg cmpb sbb shll repz (bad) pushq xchg scas lods pushq leaveq jno rex test sbb pop nop xchg jmp out xchg sub movb and push fs (bad) shrl insl icebp mov jno cltd add fwait (bad) int mull (bad) (bad) rex (bad) mov adc (bad) callq movsb enterq fimull jns cltd fidivl adcb xchg (bad) rcrb adc retq (bad) leaveq sbb mov adc nop sub imul sti (bad) xor and sarl or roll (bad) (bad) rex roll xor out mov sub (bad) jno je or int (bad) xchg hlt and sbb movslq in rorl sub lea shl enterq mov sbb roll xlat xor jb,pn rcl rol sbbl sub or add jno cwtl (bad) insl cli retq movabs (bad) adc lods mov rex.WX loopne movsl (bad) fistpll rex or mov roll jg out (bad) addr32 rex.WR (bad) (bad) rex.RXB (bad) pushq (bad) cmpsb (bad) xchg mov gs rex.WR fwait (bad) jb rex.WB sub jg std rex.RX rex.RXB rol orl cmp jnp (bad) out mov rex.WB rex.WX mov mov movabs or adc xchg xchg repz jbe (bad) cmc movabs xorl xchg out movabs and or jnp jno (bad) (bad) xlat int3 out movabs (bad) jno xchg movslq rex.RB (bad) shll add jp rex.RXB shrl test insl out (bad) xor sbb (bad) jno es jrcxz or lahf adc rclb repnz retq sub (bad) xchg pop iret mov in rcr jmp mov (bad) jnp rex.WRX jle rex.B or ja rex cli xor pop and pop lods enterq lret pop rex.W xchg loop andl outsb cmpsl rex.WRX lea icebp flds sar pop lods adc ja xchg (bad) lret lret push cmpsb cwtl pop xchg stc mov test jae sbb and sbb mov rex.WXB scas movabs xchg xor mov ss xchg leaveq lock push sub add iret xchg xchg in sbb movslq decl cld sbb xchg sbb rex.XB popfq adc mov test (bad) add (bad) (bad) adc or jbe sti fcmovnbe cwtl pushfq xchg (bad) test (bad) (bad) mov shr push pop adc xchg jb rcll cmp (bad) gs pushq cmp rcll mov add pop movabs js in sar pushfq jbe and rcll stos repnz adc jle and retq xchg (bad) decl cpuid add sub mov (bad) (bad) adc js pop push (bad) lods adc (bad) push in movabs fimul (bad) and js rclb or cmp fcompl push pushq data16 adc je rex.B rex.RB es xlat retq pop cmpsl flds callq test (bad) shll scas cmp sub (bad) test cmpsb mov mov pushq fadd jp sbb callq jg mov pushfq out cmc (bad) outsl imul jge adc and rex.WRXB int or (bad) notl callq in xlat ror cmp jle scas (bad) ds andl and rcrl xchg icebp shrl rex.WRXB scas enterq test push or outsl movb movabs fdivl mov (bad) mov push in negb lahf clc out rcl cmp (bad) jo std mov rcr rex.WRB mov cmp rex.WR (bad) cmpsb mov sub and cmp int movabs movsb pop sbb repnz and sbb and enterq fiaddl jmpq mov jl in movsb nop pushfq and jo icebp sbb mov jns xchg cld (bad) mov mov (bad) movabs in cmp cmpsl mov add insb in popfq (bad) clc loopne xlat (bad) fmul pushfq sub mov xchg adc fstps pushfq addw adcb iret stc jns callq mov and jne cmp (bad) pushfq repz jns jnp add (bad) sar and (bad) notl mov mov rorl xchg lret rcl loopne,pn clc xchg leaveq (bad) in (bad) push lahf cmp lea (bad) ds xor rcrl (bad) rex.WX imul xor add scas lahf in int (bad) (bad) shl jae mov add mov sbb cmpsb (bad) sub (bad) orb shrl or and lahf repz pop insl in fadd (bad) rex.WRX and rol imul loope pop push rcll sbb adc movabs movsl mov (bad) rex.W (bad) push push xlat (bad) sub addr32 (bad) enterq rex.X mov (bad) push fadd mov cmp add adc rex.WRX cmp mov (bad) cmp add (bad) rex.RXB sub repz xor rex.WB lret out xor rex.WX stos or sbb mov rex.R sub (bad) fldenv rex.WX mov (bad) callq cwtl movabs jp imul rex.XB je sbb rex.WRB (bad) mov mov and out mov repnz fnclex (bad) cs lret and (bad) hlt lahf jne rcll mov or rcrl (bad) (bad) pop roll sub add or cmp fs pushq mov or fistpl rex.RXB repz mov rcll (bad) mov cmp out (bad) jge and roll rcll (bad) (bad) iret outsl rex.R movb mov mov (bad) (bad) mov pop rex lock sbb add sbb xchg lret lret orl sub rex.RB and mov sar int jo (bad) add icebp enterq imul (bad) movabs lret shll ss push fadd jmp cmp mov int mov out popfq (bad) fimul sub add cli push outsl cltd (bad) adc and faddp add and cltd jg sbb enterq sbb out pop sub fwait loop sbb adc repz add rex.RB rex.XB rex.WRX sbb push mov (bad) retq fbstp clc frstor negl mov and add (bad) cs lahf enterq lock js jo mov pop (bad) retq retq pop sub rex.WRX pop fs cli fucomp adc xchg movabs jnp fcmovnb (bad) data16 (bad) outsb pushq leaveq (bad) jo pop push lods rex.R sarl hlt mov pop rex.X rex.WR jo jrcxz and addr32 add and out movsb jmpq xchg add xadd addr32 sbb pop cmp xchg cmp rorl in (bad) or popfq in loope mov stc adc jp mov (bad) adc jbe or insb cmp add add sub sub rex.WX es push (bad) cmpsb xchg mov cwtl add and rcr xchg js mov sbb shrb int3 in (bad) lods ficoml pop sahf mov jns push rex.RX pop mov (bad) callq fcmovnb in lock test cmpsb cli pushfq or sub movsl (bad) mov in stos mov mov out iret mov retq mov (bad) lret xchg xor push shrl jbe (bad) mov xchg movabs jrcxz jo cmpsb rcl jbe xchg adc pop mov jno xchg jne xchg shrl in (bad) cmpsb retq xor js movabs rex.RXB pushfq or icebp out (bad) repnz movsb hlt rex.R rorl jns rex.WRX loope,pn (bad) in (bad) js sbb pop xchg rcrl xchg xchg xor rex.WRB sbb pop movabs push xchg jge pushfq cmp movabs hlt xchg test (bad) out insl ror mov in (bad) (bad) mov mov add jg cmp mov (bad) scas stos shlb (bad) (bad) jmpq callq jmp add mov rex.RXB (bad) jp jnp cmp fcmovnbe in (bad) mov add (bad) (bad) jo pop je cmc mov bnd incl sbb xlat scas movabs adc fadds push movsl cmp insb ror rcr (bad) outsl jrcxz and cwtl xchg (bad) ja lcall mov jne and mov js jno in sbb rcll xchg pop mov jg shll bnd pop mov or rex.WB adc xchg xchg (bad) pushq in loop (bad) cmc rex.RX sbb (bad) cld (bad) nop test rex.WRX callq xchg add cli (bad) pop enterq rex.RX cmp jp rex.X and std test mov xchg leaveq fisubrl pop push callq sbb (bad) flds pushq jno jb xor jp (bad) hlt (bad) pop rex.WB mov test jg or jmpq jo rcl stos in outsb (bad) sbb jg fcmovu fxch dec mov js jns jp loop cmp retq mov movabs pop cmp jmpq lock pop jns xor mov (bad) out xchg cmpb xchg pop stos mov push lods vmovdqa add ja cli lret rcll pop xchg xchg callq (bad) ficoml cld sarl rex.WRX push and xor pop (bad) pushfq (bad) and (bad) ss xor sbb or pop jno,pn jg cmpxchg add (bad) movb push or icebp imul sbb mov shlb rex.WX push gs retq test mov rex.WRXB gs (bad) (bad) (bad) rol (bad) icebp mov (bad) out rorl (bad) test rol fadds xorl movabs andl or (bad) mov add retq scas test in cmp rex.XB and mov rex.B (bad) sbb fbstp rcll xchg and or (bad) (bad) (bad) movsl lahf mov testl pop pop scas pushq addr32 cmp movabs cmp xor push (bad) hlt xchg adc cs (bad) ficomp movabs std adc movabs xor (bad) rex.B rex.WRX rex.X rex.RB push fisub sub lret (bad) test (bad) cmc roll (bad) rex.WR (bad) shrl gs and ficom out sub shll (bad) jnp rex.XB stos (bad) xchg mov cltd cmpsb rex.WR movabs jbe ffreep fdivl or rex.WB imul lods outsb or or (bad) movsl rex.WRB rol cltd rex.WRX or pop (bad) (bad) pop xlat fbld pop clc std fwait sub (bad) jae icebp xchg jne push jrcxz test rex sbb (bad) mov test rex.RB pop movabs cmp (bad) mov decl rex.WX in out or fnstsw pushq shll (bad) add cmp jge cmpsl icebp or lret rcll enterq iret push xchg fiadd mov outsb (bad) (bad) mov (bad) xor test rex.WR fmuls (bad) gs rex.B gs xor rex.RX movabs outsl ds or retq adcb movsl rorb je (bad) in mov out (bad) and add xchg cmpsl pop repnz add clc pop add rex.WRX xor sbb (bad) mov sub sub gs (bad) fldl (bad) jno xlat sbb mov (bad) (bad) fldenv adcl imul imul (bad) sbb lret ds mov jge int3 ror mov mov sahf cmp (bad) or xchg rex.WB sbb (bad) fidiv insl rex.RB adc (bad) sbb ja mov std rex.R shll push mov nop rex.WRB rcrl fwait outsb rex.WXB or (bad) repnz push xor mov add nop rex es sbb pop xor cltd lods repz rorl sarl push gs rcl or stc std xor fwait mov insl testb (bad) outsb (bad) adc xlat loop mov rex.B rex.WXB je fsubrl rolb jo add pop std (bad) (bad) in xlat out test (bad) cmpsb rex.B loopne sbb insb or (bad) cmpsl (bad) jno (bad) lock xchg bsr rcrb xchg pop rcr rex.B shlb rex.WR or (bad) (bad) jno xlat (bad) int mov cltd jae (bad) (bad) lock es add (bad) sahf (bad) sbb shll push sti add jae xchg xchg jmp outsb pop fnstenv sub (bad) (bad) pop (bad) and adc rex.RX movsb orb rex pushq ja xchg sahf enterq rcrl mov (bad) and cmp (bad) mov movabs rex.R xor (bad) push int3 js (bad) int pushfq leaveq mov cld enterq out rorl in pop sub pushfq push (bad) (bad) sub cmp callq (bad) frstor cmc rorl sbb (bad) add cmp mov xchg out ss mov mov decb in (bad) xor (bad) sarl out jle fdivrl fwait scas jg fs sub rcrl ror fwait out jle rex.WR stc cwtl pop add out rex.X fldenv add lret mov rcrl and movslq (bad) insb cmp jnp add xchg mov callq (bad) add jbe rcll out adcl sbb shrb repnz jns xchg sub and sub cltd cmc add xchg repnz (bad) movsl push lea xor adc xchg pop sub cmp pop jmp rex.WXB decl movabs and rex.XB push (bad) fcmove (bad) jle adc in rex.RX repz adc xor rex.WXB rex.W sub rolb subl xchg insl sbb xor addl pop xchg shrb xchg (bad) push (bad) or repz pop cmpsb rcll (bad) cwtl mov mov sbb mov sbb pop outsb shl rex.WRB leaveq movabs fistl movslq rcll out jle mov nop callq es leaveq ds imul (bad) shll rex.RXB loopne sub out cmp rex.R xchg cmp rcr jmpq cmpsl (bad) adc add retq rex shrl sbb fwait and lock mov mov repnz fdivs cmpsl pop xchg mov test loop sbb or test rcrb or (bad) mov (bad) add pushq (bad) es lret pushfq or loope and (bad) add add sbb fiaddl mov retq (bad) mul scas shl ss rcl adc or insb mov mov (bad) (bad) test pushq (bad) and (bad) stos neg sbb cli (bad) (bad) rex.WRX cmp sbb pushw andl je jns out (bad) mov sub movabs cmp psrld mov adc (bad) (bad) and std xchg cs xor mov (bad) sub add repnz and fsubl pop ffree rclb movabs mov xchg nop in loopne cli (bad) xlat movslq sbb cmpsb lahf int cmc mov lret cmpsl or mov xor int3 xchg mov rol rex.WRX imul sbb repz sbb loope (bad) (bad) imul cwtl int3 not push sbb ror xlat cmc add xlat xchg fsubl sub sub mov in sub jmpq pmaxub repz sub mov movb (bad) lret jno rsqrtps rol (bad) fldenv out stos jo nop pop (bad) rex.WRX push hlt mov (bad) (bad) fstpl cmovne fisubr rex.R mov sbb adc (bad) rex.WR (bad) xor mov jnp test int mov callq cltd outsb mov insb in xchg movabs rex.X (bad) rex rex.XB sbb or (bad) sbb sbb xchg cmp repnz jb cmp push mov mov (bad) adc (bad) fild test stos rex.B rex.WB repnz mov movabs ss jbe mov test fist fs repz imul sahf rex.WB jo stc or sub sub (bad) (bad) lret and mov lret cmp jns (bad) fdivrs in sub rex.WRB fnsave or xor rex movabs (bad) hlt leaveq add (bad) int3 (bad) pushq rex.WB vpsubusw rex.WB mov movslq cmp xchg (bad) xchg pop imul (bad) (bad) imul rex.WRXB imul pop loope rex.WR push cmp in sub ja rex.RXB lods (bad) (bad) xchg mov nop roll jle sub push lock sub mov leaveq or sarl and shl cmp clc ss rcrl cwtl roll ja shl sbb sarl int (bad) jno (bad) cmp shll mov rorl mov fcmovne rex xchg (bad) pushq retq andb (bad) nop push insl shlb rex.WXB xchg cwtl outsb (bad) cld sub xchg (bad) lret (bad) outsb xor add fdivs rex.WX mov fiadd cld sarl movabs or sti mov clc xor rex.WRXB rex.R repz jne mov mov sbb adc (bad) adc leaveq jmpq shll popfq rex.X retq xchg xor mov test pushfq int3 movabs (bad) rex rex.WR es or fiadd jae or cmp jno movabs push out or (bad) pop and sub rex lret (bad) fwait popfq sbb js (bad) push mov pushq hlt outsb fbld movabs movsl out (bad) repnz (bad) add or lea (bad) push stc movabs lods sbb (bad) mov (bad) adc sbb fldenv jnp pop out stos sbb xchg add (bad) shll (bad) in (bad) movl rex.RB pop or lock retq mov push add pushq popfq and adc iret (bad) push out pop xorl add orb or or rex imulb (bad) xchg sahf scas push rcll mov (bad) xchg cmp (bad) mov (bad) mov push sti rex.RX mov (bad) rex.WXB wbinvd mov sub lret fnsave (bad) (bad) stc xor lock (bad) (bad) xor add sbb scas iret or cmp test pushfq rex.RX jno shll jne shll movslq lock (bad) movabs pushq sbb out mov (bad) cmc add movslq (bad) push ja mov sub (bad) xor lock adc test mov pop mull push sbb or (bad) enterq xor mov int jle fildl sub push std jp cli rex.B (bad) (bad) stos pop xor mov sbb (bad) loope fimul sub pop (bad) or retq fwait (bad) sub insb xlat sbb (bad) (bad) sub (bad) (bad) (bad) jno insb mov lret shl fs rorl fsubp adc add (bad) cwtl rex.B rex.WXB (bad) repnz or movabs sub sub cs jg mov (bad) in retq loope fwait repz rcr sub pop cmp sbb fcompl retq and movabs jb fsts (bad) in mov rol pop repnz es sub or pop sub pushfq xor jrcxz rex.WRB cltd (bad) sub pop mov jae or test and pushq add iret movabs (bad) (bad) xor (bad) rcl loopne mov cltd (bad) pop leaveq jrcxz int xor mov cli fdivs push rcrl mov js fdivrl lahf cld sub movslq mov movabs test adc fbstp hlt xchg (bad) add and cmp (bad) (bad) int loop addr32 shrb cli xor add xor (bad) ror (bad) roll (bad) fisttpll push mov test pop (bad) negb cltd mov movabs (bad) sar rex.WRXB int adc (bad) mov sub fdivl (bad) sub callq and stos (bad) rex.WRX int3 pop enterq out (bad) pushq lret or add icebp sub js xchg sub rex.RB (bad) retq mov mov cmp rex.WB ss retq mov mov fstpl in fisttp pop imul (bad) rex.WRXB mov sbb int (bad) fildl stos or and add lahf or (bad) push cmp sahf mov pop fistpl (bad) push movslq mov mov icebp stc loope in sub mov cltd rolb test fs add push ror mov rex.B sub (bad) cmpsb jne xchg (bad) jne repz rex.WRB stos out mov fsubs mov fisubl push mov repz jle cmp (bad) repnz ffree fwait xchg movabs retq cmp mov cmpl sub (bad) jg mov or rex or xchg add cmc push mov rex mov push cmp adc or jge test mov fisubrl add cwtl mov adc addr32 decl pop leaveq mov or xchg movabs (bad) rex.WXB imul roll cmp rex.WX cmp mov (bad) addb (bad) rcrl mov rcrl adc push mov repnz mov in rex.WRXB (bad) movabs jno,pn roll jmpq rcrb jo rex.RB out stos jmp enterq (bad) mov mov jrcxz int3 jo movabs jp push and jge jns sub lods jo roll cmpsl jb (bad) xor pop je mov rcr (bad) cld out test lods sarl (bad) sbb sub jrcxz rex cli movabs pop (bad) in (bad) push mov jnp int3 mov jb in (bad) test (bad) ss add pop rcll cs fwait push jnp add int3 movabs (bad) jne cld int cmp rex.WB mov leaveq fldl2t pop jb out rcrl insb mov pop pushq movsb rcrb (bad) or rex.WXB (bad) ja lea movabs shlb mov sub shl or pop adc roll jge mov lods xchg (bad) retq rex.WB xor jno retq cmp xchg mov (bad) roll (bad) rcll jb lret mov jbe jbe xchg leaveq rex.WXB rcrl or lods sub xchg cmpsb (bad) jle (bad) push jg push lahf mov (bad) lock fdivl rex.WX rex.RX jg rex.R ss and (bad) mov mov rex.RB mov pushq (bad) retq push stos fstps rex.WR xchg push jle mov xor retq shl (bad) jae adc jmpq add sbb rex.WRB xchg or mov xchg rex.W sarl mov stc rex.RB (bad) loope bswap rorl negb pop (bad) insl addr32 mov jle fcmovnb adc (bad) (bad) lret rolb in cmp xchg ds and cmp jmp shll sahf jno push xchg rex.RX stos rex.WRX repnz js rex.WB cs pop mov pushfq rex.R rex.WRX out (bad) rcrl xchg (bad) (bad) mov test and add (bad) or jl add push mov mov xor repnz imul pop jmp int3 sbb std vminps xor mov (bad) rcll jrcxz fmulp add pop iret jle rex.WR ds test pop adc mov jrcxz adc subl sbb enterq rex.WRX (bad) mov (bad) loope or (bad) push in push (bad) (bad) jno pop repz (bad) mov roll movabs rex.WRX movslq mov rex.XB stos adc std rex.B rex.B lock iret rex.B lret add cli cmp test adc (bad) retq sub or push jmp bnd sbb adc (bad) jg clc add rex.WRXB rcll rex.WRX out je shll add jmpq xchg (bad) sbb test psubusw rex.WRB xor (bad) mov cmpsb roll sub jns pop (bad) (bad) adc notl rex.R mov xchg (bad) (bad) pushq iret shl (bad) xchg imul insb (bad) rcll rex.WRXB ss shll (bad) in cltd and and mov sub or (bad) movabs rex.RX pop cs and sbb imul (bad) or jg out (bad) ficomp adc loopne fcompl loope fidivl jle roll mov std cli mov sbbl shr movabs (bad) addr32 nop xor ds mov insl xchg mov xchg (bad) (bad) cwtl fistpl (bad) outsl (bad) repz jge jne mov pop or cmp fstl stc jmp test icebp xchg pushq adc xchg cmp shrl mov test xchg loop (bad) pop loop test sbb rex.XB hlt cmpsl rorl pop movabs je mov callq sbb rex.XB rex and (bad) pop (bad) stos (bad) xchg (bad) out imul pop cmp (bad) lods out (bad) pushq add nop and rol or (bad) mov rcr add rex sub shr rex.WR mov fcomps enterq rcl in rex.WRXB mov callq jno and mov movabs (bad) outsw (bad) movabs sbb roll or sti push fistpl stc and mov int3 fwait ja cli xchg (bad) in fcompp lret int xor stos pop pushfq add rex.RX shrl and jl add rcl xchg adc jg mov sub xchg fbld xchg (bad) sbb mov (bad) ja jo xor jle fwait jp stos mov push (bad) movsb incl lods xor sarl movabs std mov leaveq ds sbb pushfq (bad) and (bad) jo xor rex (bad) jno cs fstps mov push (bad) or je push (bad) (bad) data16 (bad) movsb in (bad) cld mov or sbb (bad) ja out rex.RB orb xor mov (bad) nop not je rex.RX movsl lahf rex.WRX repnz hlt rex.W callq (bad) jne mov or (bad) rorl orb pop ds adc xchg jb xchg (bad) sub imul (bad) test (bad) (bad) mov rcl rex.B xchg retq fdivrs mov sbb xchg sbb sarl rex.WRXB jmp sub imul mov or sbb sahf mov (bad) out lods pop jrcxz cs and (bad) iret xchg jnp outsl shll rex.B movslq scas sbb (bad) fcmovb jnp retq adc iret (bad) mov jae pushq cmp xlat andb and cmpsl mov test fsubrs or and std pushq je shll xor jbe push cmpsl pop not sub (bad) fdivrp jb cld cmp (bad) (bad) (bad) hlt rex.R test jmpq cltd cmp test fmulp incl sahf cld iret mov rex.WR xchg adc pop gs insl jne rorl imul jl int3 cli mov (bad) mov xchg ljmp pop out sarl lret jns or lods mov sbb mov movl rex.WRB lret loope (bad) cwtl test in rex.XB rex.R mov scas and (bad) mov faddl rex.RB loopne (bad) mull xor xor movabs rex (bad) hlt or jb rex.WRXB sub sub ss pop cld add add cmp xchg testb ficompl xchg rex.WX add cli sub in test and cs and stos rex.WRB (bad) adc xchg lret repnz (bad) jl (bad) jo rex.WRXB rex.RXB (bad) cmp shlb cwtl loopne lock xchg (bad) imull roll movabs pop je add rex.RXB jg lcall xlat retq repz hlt xor je cmc xor fstpt xchg pop rex.WXB jmpq fistpll pushfq retq out (bad) fnsave mov jmpq cmp (bad) sbb sub stos rex.WR xchg sub rex.WRX loopne rex.WXB shr cmp jns mov jg jno (bad) pop movsb and lret mov or mov vpunpckhbw cmpsl mov pop pop mov fmull nop push add cmp rcr imul (bad) bswap pushfq sbb add repnz scas fisubr cmpsl icebp retq cmp in jo lea sarl add (bad) lahf leaveq test jno gs sbb sti retq in and (bad) mov xchg insl fwait cs (bad) jl fsubr divl cmp and lcall fimull and add test lret lods pop rolb jnp add imul mov rcrl jrcxz fwait loop sets (bad) sub (bad) sahf movabs rex.WX jbe stc cmpsl xlat or icebp xor retq xchg rex.B (bad) xor xchg lock leaveq roll outsl xchg in push (bad) int pushq repz (bad) adc sbbb cmpsl fsubs rclb jmpq sub xchg mov outsl rex.B xchg movabs mov clc jns (bad) testl test xchg retq sub sbb (bad) sbb (bad) rex.WRB sbb add out test mov test (bad) (bad) xor xor jrcxz mov push push xchg testb out data16 sub (bad) jl sbb jnp rex.RXB fcmovnu add js push mov adc stos adc (bad) push (bad) and out stos jmp iret jle add mov jbe xor nop or (bad) gs callq mov rex.RX addr32 jge sub mov mov roll mov (bad) movabs add mov pop add push mov lock movslq xabort and push rex.WRXB mov test jae repz cmc cmp int (bad) pop lock pop xlat nop repnz mov addr32 lock (bad) incl xorl or adc cli xor addl rol imul xchg out imul and pop (bad) add (bad) cld xchg (bad) pop sbb rcll add shl xchg (bad) notb sahf sar (bad) xchg mov and mov add (bad) or rex.RXB loopne lock sarl xchg or mov xchg stc scas shrb out adc xchg sub adc adc pop xchg pop (bad) and cltd jmp rex.WRB add rorl (bad) out adc or add jle rcrb int3 cmp shll stos pop mov (bad) in retq cmp jae sbb or and and xor xchg sbb roll adc sub (bad) cli out pop icebp xor (bad) and pop insb xchg imulb in rorb (bad) out xor and pop mov rex.RXB hlt rex.XB in and rcl movabs (bad) cmp orl fcoml stos or xor insb je (bad) add mov add jb fcom imul fisttpl addr32 xchg ffreep lret mov outsb sbb jge mov adc mov or rex.WRB pop xor mov rex.X (bad) sti sbb enterq punpckhbw outsb xor (bad) jle outsl test cmp pop rex.R rex.WR and push xor or leaveq lret loope rex.WB (bad) movsl xor xchg sub (bad) cmc stc repnz push fwait int3 (bad) loop shll scas (bad) and xchg stc sub movabs rex.WR lods mov ss pushq (bad) (bad) and add xchg rex.WR xor std (bad) jae pop (bad) int3 cwtl jb mov rex.WRX rex.B stos (bad) or retq xlat and xor (bad) (bad) sub cmp jbe out lea pop outsb jbe (bad) xor (bad) jne rex.R mov jae rex.RXB leaveq int movabs mov mov pop cltd lret (bad) adc or (bad) (bad) mov jmpq pop adc rex.RB rex.R rex.RX rex.WXB rex.XB rex.XB fldl jb imul stc sub mov (bad) leaveq sbb js (bad) push rex.RB adc vunpckhps (bad) sbb rcll pushw shrb mov rcll jno push and cmc iret (bad) rex.RX mov push xor pop or cmc test lret repnz rex.WR mov adcl imul movslq repz in sarl pop jo cmpsl and (bad) lock fldenv js jne xorb rex.RB jns add insb sbb rorb repnz movabs addl mov cmp scas loope lock rex.B rex or mov mov jmp mov or repz lock jle rex.B addr32 xchg mov data16 retq callq (bad) sub rex.WRXB test add faddl rolb rex.RXB cmpsl clc add (bad) add test rex.WRX js (bad) sbb movslq mov lods rex.R mov jb rex jae movabs (bad) adc sub rorl push pop movsb mov loop enterq jl (bad) jno xor repnz or push jnp rex.B lea and movsb movabs in (bad) jo popfq cmc sub xchg movabs gs xlat in retq lret sub nop mov mov add lret sub loop and mov add (bad) pop jbe rex.B rex.W mov test roll push pop fstpt data16 pushq movabs mov sub jno rex.WX mov (bad) ficoml xchg jbe cmp rex.R addr32 fwait andl pop xor add movsl pop xchg jge xor loop sbb add shr xchg add pop xor (bad) mov fistpll loopne (bad) jno (bad) add pushq jno xor xchg (bad) sbb mov adc sub pushq mov mov and fidivrl lods add (bad) add or jmpq (bad) in incb fwait int sub out popfq mov (bad) sbb movabs cmp loope retq jrcxz mov sarb popfq mov fsubrp imul mov neg mov push loop movsl pop (bad) jge (bad) sub rex.B jg add sbb test movsl rex.XB movsb lret mov and callq pop subl faddp rex.WRB rex.WRX repz frstor mov lods lock out cwtl lea stc sub shrb movabs data16 shll iret cltd icebp pushq xorb sub push sub popfq mov cmp icebp cmpsl movabs mov add lods (bad) rcr and movslq (bad) (bad) jmp mov scas jb xchg xlat (bad) stos shll and rorl test (bad) rex.XB lret sub pushq pop (bad) jb leaveq stc push inc movabs test jge push (bad) xor cmp mov retq in rex.XB iret shr lret or (bad) fwait cwtl clc (bad) rex.RX cs roll jno sarl add sbb xchg sub (bad) icebp rcll (bad) movabs pop rex pop retq test sub rex.WRB out pop callq cltd movsl pop outsb add and push mov movabs rex.R rep (bad) enterq test mov or cmpsb andb icebp xchg jb mov clc sti int enterq xor rex lock xlat sbb add jae sti xchg notl pushfq lea rex.R (bad) (bad) or pop jle rex.W mov xchg shr add (bad) mov (bad) shll (bad) ja movabs sub movabs push mov pushq (bad) cwtl (bad) fnop mov xchg mov andl sbb jle (bad) or (bad) rex.B mov jrcxz lea cmpb lddqu (bad) (bad) xchg movabs mov sub test (bad) fldcw cmc retq xchg imul popfq in mov pushq (bad) add fstps shr xchg mov cld movsl retq (bad) test sarl mov repnz (bad) stc gs adc cmp lock ss and pop (bad) (bad) jo and (bad) jp cli mul rex.WX jle roll adc sarl mov shll cmp xor (bad) sbb (bad) pushq stc xchg rcl rex.RXB cs push and idivl int out (bad) mov movabs add lret movabs ror jg (bad) pushq (bad) (bad) (bad) (bad) icebp (bad) lret std xor movabs pop rex.W mov rex.B or test lret xor mov rex.WRX rex.WRB cmp pop rex.RX xchg outsl sbb rex.RXB std mov loope sbb mov lcall int and rex.RXB rcll lea (bad) pop or (bad) jo mov rep callq loop out cwtl sarl xchg movb rex.WRX rcrl push and (bad) pop jb cs adc (bad) sahf pop out jg (bad) jne add cld (bad) stos (bad) add repz rol loope outsb cmp (bad) movabs mov (bad) mov jbe movabs cwtl rex.R cmp ss cmp jrcxz movabs andb loop,pn (bad) hlt rex.RX xchg movabs nop fstpl xchg js (bad) roll mov rcl out roll lahf (bad) cmp sub or cli cmpsb jae rex.W (bad) push mov sbb mov enterq rex.X sub rcr ja xchg or sub rex rcrl pop add xor loopne imulw rex.WX fistl loop pop int mov rorl cltd (bad) shl jb fimul add rex.X in lock add and xlat movsl hlt iret rex.R push mov jbe jns rex.WXB (bad) push outsl sub add (bad) mov (bad) (bad) rex.WXB rex.W rex.B rex.W xchg rcr in (bad) mov fdiv int adc jne pop cli push enterq rcr fwait mov sarl and retq push clc (bad) adc pushq jb and shrb jno or sar push in or int (bad) repnz stc rex.WR and orl add mov sub jno movabs cmpsl rex.R pop repnz sub (bad) imul mov sbb fwait sub adc insl rorl jp in lods sarl jns orl movslq xchg out roll sub (bad) rorb xor mov jmp repz pushfq movsb je pushq mov (bad) rclb leaveq pushfq push xor enterq rex.RX (bad) rol rex.X cmp cs sti loop rex.R (bad) in or add mov cli rcrl sbb hlt incb mov or sub shrl (bad) (bad) (bad) xchg cmc loope rex.R stos movabs rcrl adc shll adc addr32 jge fsubrp cli pop stos jnp xchg stc or (bad) jl jge xchg rex.WRXB add fstps xchg rex.WRX (bad) rex pushfq pop sahf mov test stos mov (bad) and (bad) xor cmpsl in mov std (bad) rex lret mov fistpl and sbb mov rcl pop pushfq rcll mov or mov pop (bad) push (bad) mov and (bad) jns xor (bad) shr test adc repz (bad) (bad) mov (bad) rex.WB addr32 xchg cltd rex.XB ds (bad) push jl lock sub sbb test xchg retq adc mov xchg (bad) (bad) (bad) mov rex add mov decb (bad) (bad) rex jno jno sbb xchg add clc imul rex.WR pop add pushq sub outsl sbb add loope jp fs lock (bad) stc (bad) add (bad) movabs int3 rex.WRX or mov mov sahf lret gs (bad) fstps mov pop (bad) rex.W repnz xor xchg je (bad) iretq adc in lret imul insb (bad) (bad) sub cmpsl pop (bad) fwait rol cs rex.RX xor jp nop (bad) leaveq add gs push mov sbb mov or retq cltd add mov mov outsl (bad) test fdivrl add add (bad) ss movsb xor retq fptan and rex.R sbb div (bad) add pop sub jo mov (bad) add in (bad) cmp xor and cli jo rex.R add cmp (bad) cli outsl fstp pop imul rex.RB add int3 enterq loope icebp xchg cs adc (bad) add clc test add or cltd loope lock (bad) and rex.RX cmp fiadd rex.R test fwait cmc mov rex.WR (bad) cwtl sub jno and xchg and loop rex.XB xor cmpsb (bad) rol vshufps xor rex.B test jns mov rex.WX cmpsl (bad) push sub cmp jl rex.R (bad) cwtl jae xor jns fisttpl fstpl sar mov jbe mov (bad) sub (bad) or sbb popfq (bad) add rcrl pop inc adc mov rcr int3 add rex.R pop shrl movsl (bad) xor xchg mov sar in (bad) (bad) cmc mov enterq movb xor rcll rex.WX imul fisub jo add orl mov mov or ds lahf icebp in nop in cmp mov testl (bad) pop ds loope jge pop rex.WXB or enterq cmp fiadd sarl (bad) rcr stc (bad) jnp cltd mov lret xchg xchg rex.WR rex.RB fld jo jno and sub (bad) and shll loope rorl data16 lahf es xchg mov (bad) fwait stos rex.R mov push xchg (bad) lock sub rcll cmp notb push repnz or out xlat out sar mov (bad) mov int3 pushq sub rex.WX and shr xchg rex.RXB es enterq push xchg xor pushfq adc test (bad) mov jmp pop andl retq mov ja adc test or sbb pop cltd lods rcrl shl retq stos movsl popfq outsl sbb xor movabs pushq in jmpq (bad) (bad) add adc rol (bad) pop lock or fistl sahf shll (bad) movabs cmp sub pop jge repnz (bad) mov fisubl shll sarl (bad) add cltd adc mov (bad) paddq rex.RXB (bad) rex.WB rex.WX pop (bad) (bad) cwtl rex.X push in adc (bad) repnz lahf mov push and (bad) add shrl iret imul adc (bad) in stos sub and pop xor out mov lahf cmpsb add insb (bad) or mov (bad) repz (bad) push cmp movabs mov jb loop outsl (bad) ror movabs cmpsb mov fbstp pop (bad) pop adc sar in cmp (bad) (bad) fucomi loope andl outsl loop push jnp jge or add xor or add jb rex.R cmp cld xor or jns rorl sub xor sbb enterq jge fnsave movabs sahf xor and movsb movsb and pop fucom fdivrl out inc sti mov adc or (bad) test repz sarl data16 pop (bad) cltd push add movabs fucomp (bad) rorl mov hlt fwait pop (bad) sub movsl repnz popfq movabs pop mov int3 fsubr lods popfq add stc mov xchg sub xchg (bad) movsl std mov cmpsl movabs movabs sbb movabs movsl (bad) jae cmp mov xor cmp rorb es vminsd (bad) addb rex.R enterq mov add cmp cmpsl sbb xor (bad) (bad) sub cli mov xchg jp cmpsl scas loope rex.XB adcl mov rex.RB (bad) (bad) mov rex.XB rol (bad) rex.WB icebp (bad) xor cmc and mov movsb pop hlt js or out jno rex.WRXB jp lods add movb (bad) movabs sbb imul mov sub in stos out je mov pushq sarl ja iret enterq (bad) icebp add in mov callq add int stc in (bad) outsb repz rex.B add movslq lods and stc rolb (bad) loope adc adc rex.WXB rex.WRX fildl rex.RX ds xchg rex.WX mov and mov fs loopne iret (bad) rex.R enterq repz (bad) (bad) lock sbb jmp or test fnstsw sub int enterq cmp pushq pop mov repnz sub data16 rcrl sbb lahf rex.WR cld cmpsl and xchg lock sub rex.WR and rex.RX loope rex.RX xchg sarb (bad) and cli sbb (bad) stos adc xchg pop sahf movabs (bad) (bad) rex.R outsb popfq loop (bad) xchg in add sub test callq cli fstp rorb xchg adc jne icebp cmp add leaveq pop jrcxz mov rex.WX es repz mov jp xor (bad) imul xor jb data16 lea or xchg lret add rex.WR shrb in (bad) (bad) mov and fwait icebp je sbb (bad) imul pushq adc add movslq loopne or jmpq xchg movabs rex.WRB cltd (bad) rex.RXB rex.WRXB cmc movabs xchg xor mov jo loop adc andl (bad) mov mov in add lock and adc out mov out fwait mov mov ds pushq push shrl in inc stos xchg scas mov add xchg loop mov notl (bad) adc incl adc pushq mov lea jmp fwait xchg out (bad) sbb (bad) rex.B sub mov (bad) or roll movabs int3 add add (bad) adc rex.RB fs pop sbb rex.RB adc sub jp cmp (bad) add mov rex.WRX rcl test cld (bad) mov fs (bad) mov popfq int sub rex.WR lock (bad) mov rex.WB cmp ja rex.WRB mov roll test push (bad) or adc cmpsb mov rcl adc rex.RB and std push jle or (bad) jb enterq mov sahf xchg jrcxz push imul andl (bad) mov or cmpsb pop loop adc (bad) mov ss fbld (bad) sbb or movsb (bad) movabs mov roll (bad) js (bad) mov jno pushfq iret loope imul leaveq rorl fadds shl (bad) idivb xchg (bad) lahf (bad) rex.RB sub out movabs rex.B mov xchg pop test xor lock incl outsl xchg rex.XB (bad) notb icebp pop add repz and loop cmp movslq (bad) repnz jbe movsb push adc (bad) or std and sbb (bad) push rex.WB (bad) rcl xor push (bad) and (bad) and sub sti stc and rcll clc gs (bad) retq rex.XB or sahf pop (bad) xchg test jns rorl cmp sbb (bad) mov enterq cli movabs sub movsb lods fimull xor rex.W pop (bad) (bad) (bad) leaveq mov rex.XB rex.X fisttpll retq gs (bad) jrcxz cltd stc movslq (bad) psadbw rex.WRB rex.R and jrcxz cmpsb iret pushq fdivrp movslq mov (bad) rex.R vandps add retq jo (bad) lret sbb scas adc fcmove fldenv and mov cmp loop andb rex.WR (bad) mov mov (bad) pop test test incl test idiv outsb and xlat fwait ja adc lahf or jno jle mov (bad) sub sahf rcr iret fbstp mov cmpsl rex.X sub mov jbe (bad) mov pushq sahf rex.WRX rex.B lock jrcxz mov xchg mov fsub data16 rcr adc (bad) xor loopne mov loopne mov (bad) fldcw rex.X addb and cmp xor mov add xchg jp fisub (bad) mov (bad) rol add xchg cmc xorb enterq xlat sbb and (bad) cmp cmp stc fs ss jle test mov mov (bad) movabs and nop test std pop pop stos mov fnsave adc cmovge sti callq and sub mov xor in imul lahf sbbl mov mov callq sbb (bad) sbb (bad) incl adc rcr cmc push rex.WRXB (bad) cmp (bad) (bad) xchg or repnz cs cli (bad) mov pop imul jg push jb test xchg pop callq subb mov popq rex.RXB push xor retq lret mov iret jle movsl out (bad) xchg rol mov jo (bad) and jnp or rex.X mov retq xor rex.WX enterq (bad) mov rex.WRX (bad) fadd mov adc mov push (bad) test movsl ja xchg (bad) jb repnz and out (bad) rex.WR sub (bad) repz fcmovnb faddp test test stos add sbb movabs leaveq rex.RXB addr32 sbb stc jrcxz mov movabs sub imul jb test (bad) jns (bad) iret pop movabs (bad) pushfq (bad) adc negb rcrb push lret or fldl movabs outsb callq jo rorl in sbb add (bad) in push sahf sar and xchg jge xor popfq shr xor (bad) sbb (bad) retq mov stos adc cwtl xor (bad) mov mov ficom insl movslq add (bad) (bad) fstpt (bad) movabs sub insl jle loope stos cmp push rorl iret (bad) mov (bad) jae fcmovbe xchg rex.R add xor or xchg out popfq sbb add (bad) (bad) loope fnstsw enterq mov (bad) push loope,pn push rex.XB icebp pop rex.RXB rex.W jns rcrb rex.R cltd int3 or adc rex.WB (bad) mov sub (bad) (bad) xlat rex.X sar sahf loopne mov movsb (bad) icebp movsl mov mov outsb (bad) cwtl add sahf jbe add xor lahf push lock movsb sbb mov cmp movslq pop clc jle test sarl (bad) mov roll rcr pop (bad) mov data16 mov retq rex.WB jl (bad) cmc xchg loopne rep (bad) stc es imul fiaddl (bad) (bad) xlat roll iret std rex.WB mov mov rex.WRX sub cwtl test jge (bad) adc rex.B negl xchg mov (bad) xchg fidivr jnp sbb cs gs rex.WR jo push and out rex.WB movsb pushfq movabs rex.X xchg sbb jno xchg fcmovne cltd add in movsb callq movabs rex.WRB pop add mov int3 lock or push idivb rex.WRXB rex.RB cmp (bad) fucomp cmp (bad) (bad) mov rcl (bad) clc (bad) rcr or loop scas sub push xor (bad) fistp rex.WR mov pushq pop xchg xchg (bad) xchg mov (bad) addl sbb pop lods (bad) jg xlat mov or fxch cmp xlat cmp or xchg je jp xor cli rex.WRX rex.WX loopne (bad) xchg hlt xlat rolb push test fwait in push rex.RXB fsubl int jg (bad) or (bad) sbb test sahf adc cmp (bad) adc (bad) add lods rex.RXB sar push cmpsl (bad) (bad) enterq or jmpq es pop imulb cmp fdivrl mov adc scas mov fmuls xchg xor (bad) rol imul cmp push mov outsb (bad) orl xor pushq movabs add rex.RXB cmp sbbl xchg (bad) shrl sbb mov xorb leaveq and lret int3 outsb adc pop pushq repz (bad) scas rcl rex.WRXB ficom rex.RXB mov enterq (bad) sbb or std (bad) testb sarb je jp mov jnp (bad) (bad) mov fimull lea xchg stos test xchg cld mov divl mov push jo xchg rcr rex (bad) mov (bad) (bad) xor mov fwait lods mov shll iret retq xlat rol pop pop cld mov cmpsl ja movabs xchg int jle sbb cld (bad) jmpq and fadd (bad) ss imul (bad) cmp movabs xchg retq movabs test fsubr vphaddbw (bad) (bad) pushq xchg xadd (bad) fadds (bad) lods rex.RX sarl js retq mov (bad) outsb mov rex.RXB xor jo sbb rex.W gs test (bad) (bad) rex.WB (bad) xchg mov lods jmpq adc push enterq jg sub and in lock or std leaveq push shll rex.WRB rex.R cwtl or out push and (bad) sub adc cmp rex add pop outsl xchg or (bad) rcrb stc es mov fistp and mov shlb cmp pop (bad) push mov out gs (bad) movsl cmp adc sbb add sub (bad) ror adc inc pop lods pushfq sbb out add int3 rex.X mov pushq xchg xor (bad) adc outsb or mov and mov mov insl repnz push loope or jl (bad) adc xor out movabs adc jmpq cmp cli js add test sarl pop xor (bad) fsubs xchg ror stos sti insl out in int cmp mov adc and setle adc xor inc rep or fs jmp xchg gs js (bad) (bad) cmp xchg xor (bad) adc orl je rex.RX retq (bad) scas movb rcrl in enterq (bad) sub jbe fld insb jno or icebp mov test or lods (bad) popfq ds movslq retq mov cmp (bad) rex rex.X cwtl cmp sarl in out jl pop roll xorl (bad) xor sarl movabs rorl pop movabs jge (bad) fdivrl (bad) (bad) pop in rex.WB cs ss rorl fld jge std stos xchg jmp movslq rex.WRB xor scas loop rex.W fisttp ds repnz jb jns adc (bad) int3 mov movabs (bad) jno in jmp adc movabs outsl (bad) stc jo rex.R rex.WRX adc cmp jle or mov (bad) pop jge (bad) scas pop int sub cli sahf adc movabs (bad) std mov jp xchg movsl jg xchg (bad) int3 andl out rex.B (bad) or shlb add mov cwtl scas fadds (bad) out movabs in movslq adc ss adc mov ud1 in lods rex.XB rex.WRXB callq lcall jne callq mov and pushq adc cmp pop in out ja rex.RXB shrl ds jrcxz (bad) or lods or icebp lret mov cmpsb adc sbb xchg xchg lret rex.RB (bad) add divl cmpsb (bad) mov out std sub leaveq add rex (bad) lods add lret imul pop loop cli repz rorl sbb std fstpt imul stos xor sarl fsts xchg rcll popfq mov (bad) jmp movabs out (bad) jp rex.WR icebp int je (bad) lret (bad) mov (bad) push and jnp fbld stos movsb (bad) mov rorl sti mov add jrcxz fimull mov cltd sbb mov mov xchg leaveq jp (bad) sub in sbb adc or gs xor sub rex.WR int rex.RB (bad) cmpsb mov (bad) mov (bad) (bad) scas out sub xor mov mov jo sbb jmpq xor (bad) subl shlb hlt xchg rex.X push mov mov cmp callq movabs rex.WRX or (bad) lock fidivr add (bad) rex.RB repnz sbb fiaddl stos jb rex.WB push vaddss (bad) cmp sub in bnd or rex.RX stc imul iret sub add rex.XB (bad) fidivrl cmova iret (bad) outsb or je push mov and scas xor pop rex.B pushq retq repnz sub (bad) xchg mov xor rex.WB rex.X retq lock rex.WR shl mov in rex.XB pop jnp in push rcrl jle mov idiv imul sahf xlat sbb mov jle stos add xor out movabs loopne jmp or nop cltd stos adc add sbb jmp movabs jno or sbb jae adc or push adc jge rex.WR scas cmp mov lock (bad) movslq mov pushfq jp (bad) sub jno sbb enterq jrcxz ja (bad) xor fs sbb sub cmp jo (bad) xchg or mov movsl mov cmp sub xchg mov cmp and rex.WRX add or cli xchg movb pop insl jmp push and pop xor (bad) fild rolb xor loopne hlt pushq sub test mov (bad) cmp sub sarl sbb rex.RXB (bad) xchg (bad) or out fcmovnb rex.RX and movabs (bad) lret pushq rex.WR and insl rex.WR sbb out pop es addl hlt add mov rex.WRX cmpl (bad) pop add in ja rex.XB rex.WR enterq jb rex.WX incl add cmp xorl mov jns repz jge in (bad) jno xchg (bad) std sbb sahf movabs loop adc cs sbb rcll mov mov rex.XB rex.RB mov add movb enterq add and (bad) sub rex.XB xor xlat and rex.XB (bad) (bad) callq pop rorl jle (bad) xchg test (bad) or scas xor sbb sahf sbb rex.B frstor push std (bad) (bad) callq (bad) loope scas shrl pop rex.WX push lret or pop jg pop sti int mov movabs push rex.XB mov popfq jne,pn int mov addr32 in sub rex.RXB cli movsl or lret jle frstor and fs test pushfq xchg rorl sti cmpsl (bad) jno add mov mov sbb imul idiv lock rex.B (bad) mov mov cmpl in rcll mov xchg fildll or add retq jne add (bad) in mov (bad) (bad) xor push (bad) rex.RXB mov shll (bad) js push (bad) mov lahf jo movabs push (bad) nop rex.WRXB xchg sarb loope rex.WRB callq hlt int push in xchg xchg pop adc (bad) stc outsl or (bad) lock (bad) mov testl jle sub in retq xchg cmp rcll (bad) clc push icebp pop (bad) xor rcll rex popfq (bad) fs or pop cmpsb add jge xchg jo xchg fstl rex.WRXB xor (bad) mov lret mov push sbb jle rcrl shlb cs shr and stc and jo rex.R (bad) cmp mov (bad) mov or enterq adc retq (bad) pushq xchg rex.WX mov stos xchg out testl mov sub movsl cwtl sarl mov retq xor adc shr icebp retq rex.RX rex.WRB in movabs pushfq out rex jge mov and in out rorl movabs iret xchg cld (bad) (bad) hlt loopel (bad) mov rol pop out movabs xchg mov (bad) (bad) cwtl in lods fsub int or (bad) (bad) xchg (bad) mov push and mov loope rex.B rex.W in enterq sub rex.WXB rex.WB and rex.X pop xchg adc (bad) lock mov and int jno push movabs sub jle orl rex.RB outsb add lock int xor imul int3 mov push jrcxz lret shl xchg pushfq movabs cmpsl imulb jmpq rex.WR sti cwtl jmp cmp mov rorl lods (bad) jbe iret xchg add std xchg in and rcll lods cmpsl (bad) stos sbb rcll out (bad) jnp movsb ss sub clc jno or cmp jb rex.R (bad) (bad) and adc or callq cmp shll es iret mov mov cli sub sub movabs stc test (bad) xlat xor (bad) stos xor rorb add out cmpsb sbb jl pushfq in pushq mov repz and outsb jmpq push rex.RXB and pop jb movabs add jle xor (bad) rex.WRB in (bad) push fidivl lret jns mov sbb loope stc test lods pop js (bad) movabs lret add fstpl (bad) (bad) jno xor add mov retq (bad) (bad) cmp jl out jo (bad) sub add loopne enterq (bad) xor retq rcl mov jle jb push rex.B push and rex.X and pop (bad) (bad) rex.WRX sti push mov ss in sub mov xor stc adc movabs lods fcmovbe enterq (bad) cli jrcxz rex.W jnp (bad) lahf data16 mov push imul mov add imul mov pushq (bad) cmc cmpsb rex.RB or movabs fnstcw fdivrl mov cli int3 popfq (bad) ds mov jp mov (bad) insb sub roll jbe push pop push cmp xor pop cmp roll xlat add jmp rcr in mov rex.RX ficom mov scas sarb (bad) int3 (bad) (bad) mov in lods sub jne fmuls icebp (bad) (bad) pushfq movabs (bad) cmc (bad) push cmp push adc rex fwait jnp (bad) vpslld test out cmpsb iret jno xchg (bad) enterq add stos out imul shll sahf es sbb (bad) fcomps jns (bad) movsl roll mov or js cld (bad) repz cqto mov add add mov jle movabs mov and pop xchg movabs loopne add or (bad) adcb add (bad) scas adc mov push sub push fstl rex.RX rcrb rcrl jge shrq shll xchg rol andl (bad) (bad) add (bad) nop push out xor (bad) (bad) stos loop mov sbb rorl fdivl mov out mov roll mov mov add (bad) pushq adc repz (bad) movabs cmp add (bad) jg rex.WXB rex.WRX rex.WXB mov jb and fidiv lret retq add movslq rex.X pop (bad) sbb loope mov in cltd scas fwait pushq (bad) sarb mov sbb push add fcmovbe out sub (bad) xor adcb hlt xchg sub retq repnz pop fdivl clc sub sub rex.RXB xor push scas jle rex.RX add icebp xchg clc (bad) pushfq xchg pushq (bad) (bad) retq rcrl (bad) mov sub repz adc rex.RX rex.WRB (bad) pushq int3 or (bad) xchg movslq insl xchg stos cmp mov xor add lods (bad) jmpq add cmp movsb enterq sarl and roll adc sarl pushq movsb cltd cltd mov xchg (bad) xor (bad) (bad) shl out adc imul out jge fidivr jae (bad) jbe repnz cmp pop and adc jae adc lock sahf (bad) mov adc shll (bad) pop fs movsl adc fmull cmc callq cli rolb rex.WB rex.R fbld test mov rcrl (bad) xorl sarl mov rcrl pushfq (bad) shrl cltd cmp pop (bad) sbb mov xlat sbb lret (bad) (bad) jl (bad) (bad) pop movsb (bad) ror out pop in pushfq callq rex.WRB cmp adc enterq movsl fstpl add rex.WR icebp (bad) (bad) xchg movabs adcl fmuls and mov repz addr32 and std jge enterq movsl rex.B rorb (bad) imul (bad) or jrcxz xchg adc fldt or enterq xor jl (bad) adc (bad) mov test mov (bad) cmc add rex.WRXB mov mov sarl sbb adc (bad) fld (bad) loope data16 mov rex.B xadd movl and rcr rolb mov shll retq (bad) jnp mov xor test sbb mov enterq adc repnz rcrb xchg adc lods cmp (bad) (bad) push jmpq (bad) (bad) xor jge sbb test movabs fisubr add xor (bad) xor cltd (bad) push lods out (bad) xor (bad) (bad) rex.B scas mov shrl jmp rcl in xchg cmc insb movabs (bad) shll add and rcr mov (bad) scas (bad) cs xchg xchg mov adc cmp (bad) sub push sbb gs ds (bad) rcr fild loop fwait (bad) cmc stos xor or in cld mov add fadd shr and or scas std rcll cs (bad) mov and mov std rex.WXB rex.XB jle ror gs jmp xor sarl pushq pop loope push add stc outsb xor sbb leaveq sti repnz movabs (bad) (bad) lea ficoml mov sarl adc cmp outsb ds data16 xlat add movabs repz cmp (bad) rex.B testb (bad) add jns movabs loope (bad) lret sub add (bad) leaveq xchg vpaddw cli out fidivr test pop jmpq fmul je mov mov (bad) popfq (bad) and loope xor ja (bad) and rex.W jns adc lods lret cmp (bad) lods cmp rex.W (bad) rol clc add test shrb sub scas or sub pushq jns add lahf mov mov cwtl mov mov (bad) xchg xchg movabs mov xor jmpq mov jne retq sbbl or hlt bnd add pop inc clc xchg movabs (bad) callq (bad) jne cld xor sarb shrl and (bad) rex.RB int3 jb (bad) test jmp jnp jmp rcl fild pop adc adc rcrl push mov cmp insl mov int3 movabs (bad) and mov and xchg movabs in sbb icebp cltd rex.X rcrl (bad) mov jl adc (bad) sub jne add jmp fldcw retq and xlat in (bad) fucomp scas rclb mov jns in pop (bad) rex.B repz rex.XB (bad) and (bad) jp jrcxz xchg xor cmp adc xchg mov out mov (bad) movabs test (bad) cmp out retq jmpq mov rex.WR addr32 xor mov push add mov push lods add mov xor (bad) or outsb xchg rex mov push mov add sbbl gs xor (bad) rex.WR or pop cmp pop jae xchg mov (bad) push (bad) push mov loopne iret movabs (bad) adc sbb iret rex.B sbb loope mov movabs pop fcomp cmp ficom callq or fldl rex.WXB cmp mov mov (bad) movzbl jb mov movslq rex.WR pop out test lret and imul fiaddl cltd add clc pushq push mov (bad) add rex.RX roll movabs mov shlb jge pop test mov (bad) loopne rex.WXB in lahf and (bad) sahf mov cmp leaveq (bad) lret (bad) (bad) lods and shll rorb jne in movabs lods xlat fadd add stc lods add lods cmp pop movsl in (bad) cmpsl rex.XB rex.RB retq fildl mov stc rex.W cmpsb mov and fcom orl or movsl pop adc cmp addl jl sub (bad) add push cmp mov add rex.RXB pop mov add stos test enterq add add imul xchg int fcoml and add mov loopne pop (bad) sbb (bad) jo int adc (bad) and sub (bad) jae fisttp loope out rolb fwait or mov mov cwtl xor fldl push cli callq add es cmpsl insb xchg cmp mov pop retq sub xchg imul repnz xchg pop jg mov sbb jno xchg andl pop rcrl jl or subb rex.W xor (bad) repz repnz rex.WRXB in rcrl test jl (bad) popfq iret repz imul (bad) adc insl in repnz popfq mov mov jg iret orl js xchg lea shrl jb push cmp (bad) (bad) es or xor (bad) out rex.W jg movsl enterq jl mov (bad) mov lock cmp (bad) mov fcmovb sub sti add cwtl cld rex.WRB (bad) lock (bad) jmpq push pushfq or lret cmp movsb (bad) add movabs stc shll in jge xchg (bad) repnz cmp outsl (bad) movsl in je cltd xor pop sar rex.RXB mov sbb adc push outsb ja jg and (bad) (bad) ds mov movl fldl2t sarl es (bad) rex.WX jg mov rorl adc roll enterq sbb (bad) lock jno jne sbb (bad) ja callq xchg mov scas sub adc nop idivb adc rex.X pop add (bad) sub sbb sbb lret (bad) test or int (bad) fidivr mov sbb ds add (bad) testl cmp adc bt nop sbb decb out jno (bad) (bad) add data16 sbb (bad) movabs fucomip leaveq jge xor xchg pushfq mov test mov xor pop outsb cmovno (bad) rex.RX rex.XB sub fisttpll outsl xchg loope,pn fcompl movabs pop rex.WRB rex.R pop mov gs rex.X stc test xchg pop push stos (bad) rex.WXB (bad) cmp sub callq xchg (bad) xlat (bad) add xchg sub cmc je addl jb push cmp (bad) ss loop roll jp sub xor (bad) (bad) out (bad) stc rex.WRB rex.B add mov rex.WRXB in addr32 roll nop pop mov cmp lret insb jae icebp insl clc scas pushq loop shrl mov jle xor or rex.W rex.WR mov mov adc fs test (bad) adc rex.RX rex.W int shl (bad) jl test rex.B rex.X adc xlat shll mov hlt cwtl pop mov sbb (bad) add rex.RX (bad) rcrl repnz and movsl (bad) gs data16 jg jno in pop xor out xchg mov mov (bad) xchg rcrl lock (bad) add (bad) std movb in enterq test xor (bad) idivl rex.RX mov cmp retq leaveq (bad) retq fisubrl sbb rex.WXB or scas add fimull (bad) pop (bad) (bad) push insb or out mov cmp rclb (bad) ja roll rcl sub or ds push rcrb ja test clc (bad) rex.RX rcll add or cs fadd pop (bad) fcmovne cmp jg rex.XB mov fs int pushfq sub rex.WRXB (bad) and pop and orb in or mov cltd movabs rex.WRXB (bad) lods (bad) xor add stos xchg mov out pushq rcl shrb int3 adc sbb push callq rcrl pushq fistpl push jb fiadd sub fdivr stos (bad) testl (bad) movabs (bad) (bad) mov (bad) or rolb leaveq (bad) fabs and adc jmp (bad) mov add (bad) addr32 sbb jo mov test adcl ror cwtl test shrl and andl mull sub sbb (bad) and pop xchg (bad) lods or callq std (bad) push rex.WRB loop fisubl js sub movabs (bad) frstor and (bad) rcll mov loope jno adc loop sbb sbb pushfq rcll rex add (bad) clc and mov jns (bad) cld fxch xchg mov cmp or and test fdivs and pop jnp jno fld mov lret pop xor test adc rorb add (bad) xor adc lods rex.X shll cmp (bad) in pop pushq adc push push sbbl jb rex.WR stos rorl mov out movabs ror add shrl mov jl inc in mov jmpq cmp rex.RB shll rex.WRX repz (bad) push cmp pop loop adc jae ja fmuls rex.WB roll (bad) adc pavgb push cmp enterq test (bad) shlb mov jnp cmp rex.RXB rex pop mov mov sarb (bad) push mov push pop movsl outsb fisttpll (bad) out or add data16 insb nop shr and shll pushfq and je mov imul adc leaveq xor pushq fwait sub out (bad) (bad) mov mov (bad) (bad) imul sub in lahf add (bad) loop stos rex.B es mov xchg cmpsb rcrl push mov mov sub retq repz movslq loopne popfq pop (bad) (bad) out out push mov adc lods movsl ror movabs add pop cs jne mov and or test push clc iret (bad) (bad) sub ss fisubr sub (bad) (bad) rex.WR mov iret imul fisubr rex.RB fistpl jno rex.RB (bad) jp mov add or stos pop sub rex.W mov push enterq or retq (bad) lods fistp (bad) or sub fs xor insb rex.RX cmp rex.W gs fbstp fsincos (bad) pushfq or jns xor cmp cmp in jnp int sub icebp mov jge cmp jne mov (bad) cmpsl xlat retq data16 adcl jp out mov sbbl mov fs popq xor negl lret push addr32 test xchg movabs (bad) pop frstor (bad) xlat mov and hlt rcr jo adc movabs adc pop movabs ror mov imul scas ffreep and mov xchg jg retq (bad) pushq sub pop fstl sbb xchg rcrl pop lahf mov (bad) (bad) rolb mov imul rex.W shrb lret jno or outsb add (bad) mov sbb outsl stos xchg rcrl (bad) (bad) cs int jp jns sub mov xchg movabs retq (bad) push lret sbb test int fstpl outsb (bad) rex.RX adc out push (bad) jge fisttpll rcrl out rex.R rex.WRX mov (bad) pop fiadd or push cmpsb shl cwtl (bad) lea fnstcw jp test lods lret imul push xor iret rex.X movabs callq (bad) mov jge adc (bad) ja int or sahf or (bad) std (bad) xor rcll push (bad) mov loopne lahf pop sbb jmpq jbe lret (bad) cmpsl add xor rex.WR shr cmp mov vpaddsw and movabs cmpsl push xchg sarl xchg sub fstps rex.X js mov in or rcrl push xchg push scas ficoml enterq movabs (bad) rcll or test (bad) mov movabs jnp xor push xchg push sar (bad) pushq rol lret add cmp mov movabs rex.RX rex.B and loope scas sahf movabs out xorps rorl (bad) rorb (bad) push cwtl movsb sarl adc cmpl iret rex.WRXB (bad) movabs pop adc adc cmpsl (bad) cld out (bad) ja lahf xchg popfq or movslq (bad) mov mov mov or roll scas iret jne rex.X rcrl (bad) push mov imul cltd (bad) (bad) lret add movl add xor sbb fwait mov out mov (bad) add std repz xchg repz xchg outsl cmc (bad) xchg idivl mov ds rex.W (bad) ja rcrl (bad) fbstp (bad) adc scas (bad) repnz addr32 movabs jge sub fdecstp add xor leaveq fdivrs fldenv add test rex.RB int3 rex.X (bad) cli shl jp out fidiv rex.RB mov out icebp mov sar cmp fcmovb pushq xor mov cmc (bad) and cld cmpsb or xorl xchg xor (bad) sub andb (bad) or (bad) iret jrcxz hlt xchg (bad) mov repnz fnstsw out loope xchg out enterq pandn movabs retq (bad) rclb (bad) sub sahf insl ds push and mov xlat ss adc jg callq sbb movsl jmpq int3 leaveq or (bad) jno jb and (bad) lods cmp (bad) outsb movsl (bad) idiv rcr movslq jb out and movabs cmp loopne add js fstp fstpt movabs (bad) (bad) jg f2xm1 rex.R add cmp push rex.R ja or or xchg lea rex.WB repnz (bad) (bad) jbe or sbb fnstenv pop (bad) outsl mov (bad) cmpl jg pop jg jo xchg cwtl jb jl xchg xor sub pop cltd (bad) xlat imul movslq pop rex.R repz adc rex.R leaveq vcvtpd2ps mov xor pop mov in enterq sbb pushq pop sub xor fnsave add int3 mov repz mov and (bad) sti (bad) stc xor rex rex.RXB lahf rex.RB pop xor fmul pop cli adc jne loope push rex.R leaveq movabs repnz add (bad) int3 sbb fiadd jo jrcxz jle movabs xchg (bad) sub fisubrl or hlt callq mov add sbb sbb rcrl mov push mov pushq pop (bad) rex.WB rcr mov adcl bnd mov ss and jmp rex.WRB movabs cmp out nop rex.B retq jrcxz jrcxz jo cmp xchg rex.WRB mov rex.WRB cmp fistp es in mov lret (bad) mov (bad) sahf lods xor or jl int imul cmc negl jle (bad) jl movabs movsb icebp fidivl rcl orl jl int (bad) scas or loope and rcll (bad) fdivp enterq shll xor jp scas sbb movsb mov (bad) repz cmpsl sbb sbb lahf fcmovb mov scas (bad) or rex.WRB mov push or (bad) mov nop lods xor movabs jae rex.RXB rex.XB loopne lret mov rex.R sbb (bad) movabs outsl out add push decb roll rex.RXB sub test or jp rex.WR rex.WX and in pop sbb stos (bad) icebp and pop roll callq shrl sti sbbb retq jl mov sub rex.WX jne mov (bad) popq pushq mov and rorl rex.W in jno movsb adc enterq cld orl sbb add je (bad) (bad) rex.WX cltd jne (bad) roll pop (bad) xor lods rex.WR rex.X push test movabs sbb pop cwtl jno xor mov rol enterq (bad) movsb (bad) jb scas (bad) lret ficom (bad) mov jle sahf icebp lahf ffreep adc movsl or sub rorb addb jrcxz rex.RXB (bad) in sbb fstpt mov jmpq rex.W fisttpl jg pop rex.RX cmpsb (bad) lret (bad) xor add setge rcl push xchg mov push mov (bad) xchg (bad) rex (bad) jnp add repnz jg repz rex.WB sbb mov and or lret not out (bad) adc outsb adc (bad) insb enterq fwait mov insl movslq movabs pushq cmp mov movabs rclb jo imul shrl insb fcos rcrl repz cwtl (bad) movb cmp jmp cwtl jae rcll or std scas cmp mov movslq test sub jb sahf jne shl lods xchg xchg rcll fwait movsb and and sub lods and mov mov ja cld rol or callq pop hlt sbb int fsubrl sbb fnstcw or cld mov in fstp int3 push lcall (bad) mov rcrl pushfq cwtl retq (bad) rex.RXB icebp rex.W and mov jl sbb jne xchg sahf roll lock testl (bad) rex.WB outsb xor xchg insb pop movabs pop rex.RX jns sbb pushq jg cmpsl jo mov pop push mov (bad) bnd stc jrcxz insl (bad) stc rex.WRXB (bad) (bad) (bad) lret cmp idivb retq lea rex.B addb jnp (bad) inc insb fs imul mulb rex.X rex.RX cmp (bad) mov subl movabs fnstenv jmp cmp (bad) cld sub gs jns adc movslq jo adc sub jns rorl jnp andl movsb (bad) (bad) xchg jns jmpq and rex.B sub (bad) pop lock add out shll mul test movabs rex lret mov sarl add (bad) cld add xchg lods (bad) xchg rex.RX test mov in add sub test sahf movabs (bad) loop out add cmp sub (bad) xchg mov lea movb cwtl mov leaveq shlb jmp stc out sub and and (bad) rex.WRX mov xchg loopne pushq movsl sarl sti xor sub (bad) (bad) loopne mov mov iret xor sarl sbb outsl insb rcll test xor rorl rex.RXB lret int3 mov sbb iret sbb (bad) (bad) (bad) shrl (bad) push enterq (bad) pop and xchg fmul cs rcrb outsb (bad) xor add movsb mov nop rex.RB rex.WRB (bad) scas (bad) mov in rcr jp clc mov std sbbl imul mov jp rex.WRXB mov rex and repnz lahf xchg fnstsw (bad) adc add rex.WRX (bad) cmpl mov stos int3 (bad) (bad) (bad) ja sbb movabs fisubrl or or fidivr jmpq cmp cmc cld sti repz add sarl push rol rex.WB (bad) in cmp rcrl sbb rcrb out sub and fwait mov je pop adc xchg (bad) mov popfq cmp vpor sbb jp pushfq sub adc hlt adc mov pop and test lret and sub mov and shl jge cmc and scas sarl or rcrl rex.WRXB addr32 push pop sbb scas test xor fisubr rex.RX sbb add (bad) int cmc stc mov mov and movsb jle sbbl and mov and lcall rex.WX (bad) sbb (bad) pop (bad) mov xchg mov xor pop callq jnp xlat xchg retq sub rex.X add cmp subl push (bad) (bad) (bad) rcll rex push lret fcmovnb xchg imul adc jp mov xor (bad) shll pushq xchg cli test fidivrl movsb leaveq mov es and (bad) jge cmp rolb pushfq sub cmpsb pushq pushfq rex.WR loope test (bad) sqrtps push add mov mov adc movabs push in push jrcxz fs faddl pushq rcrl sub rex.WB (bad) int3 lahf rex.X rex.RB rex.WRX lret loop movabs xchg repnz std xchg pop addr32 xlat leavew sbb callq xchg xor or rex.WX and mov (bad) (bad) or fadd mov out jg (bad) ds or (bad) cmc add movabs movsb xchg sub scas rcll rex repnz fwait add rex.WR rex.RXB jno sub rex.WR or test rorb fld rex.WRB sub add retq cmpsb xchg (bad) jmpq add add mov cmp cmp (bad) fyl2xp1 add mov sbb leaveq mov std out add pushfq xor push (bad) (bad) jae notl fcompl cmp mov in retq enterq mov (bad) mov xlat fisub jle add sti mov mov sub sub rex.WR notb sbb mov rex.WRB test jmp vunpcklps ds out xlat or sub jp fcomps add repnz xchg jbe movabs (bad) lods sbb push lods scas push (bad) jp jne jrcxz pushfq xchg sbb (bad) sbb fstl movabs lret rex.WR fsubl and sub (bad) xor gs iret rex.W repz sub and mov iret inc subl xchg mov (bad) cmpsl mov repz rex.RB mov sti (bad) mov (bad) icebp jg out insl (bad) repnz sub rex.B jo pop push movabs adc stc cwtl imul movabs adc (bad) lock mov repz (bad) cmp out sarl (bad) rcll mov fistpl jrcxz repz clc (bad) (bad) insl rex.WB jne rcr cmp rcll jb out cld rcll push movslq push je movsb rorl mov (bad) rex.X (bad) mov mov jmp mov loopne lock add shrl cmp shrl jb scas fdivrs int or nop movabs rex.B xor lret movabs rex.WRX rex.B (bad) cmc sub rex.R mov callq jb xor mov jp (bad) and cwtl add cmp pop rex.WB mov (bad) mov (bad) roll push add stc fwait lret add add adc jl icebp push adc rorl imul (bad) (bad) shll cmpsl in cld insb cmp fistl jge stc sbb repz add jmp fidivl and add cli out adc fdivrl and in sti rex.RX and repnz ss insl cmc cld in int in rex.RB xchg fiadd jae mov loop (bad) icebp cli rex.RX rex.WXB mov xchg xor jp fstps pop lret sbb shll and pop fwait movabs xor xor movslq scas ss (bad) mov mov in sbb mov dec (bad) sbb mov callw (bad) outsl push xorl test sbb in push movabs out (bad) (bad) jl adc fs xchg sbb (bad) (bad) or xchg movslq or loope adc sub roll adc xchg xchg in sub outsl cmpsb (bad) (bad) sub (bad) movsbl pop and rex.R movabs out mov in (bad) sarb (bad) rex.WRX cmpsb ror xchg jmpq push cltd outsb jmp roll push loopne out add xor (bad) (bad) cmc xchg cli or std rex.WX gs repnz shrl xlat xchg loop cli (bad) (bad) mov in stos fld rex.RX movabs mov push repz shl (bad) iret (bad) sbb cwtl shrl enterq movabs xor (bad) mov lret sub adc pop xchg (bad) (bad) hlt mov adc adc (bad) movabs add (bad) addr32 adc pop xor fwait sar mov pop pop mov iret callq nop and and int3 cmp (bad) clc adc (bad) testl pop mov rorl and xor (bad) out mov jge mov (bad) xor add loop int3 (bad) xchg vunpckhps ja adc rex.RB sbb cmc outsl popfq insl test xchg (bad) and rex.WXB (bad) mov (bad) jrcxz mov pushq in fldcw roll add roll jp (bad) mov xchg rex.R adc leaveq cs shrl rex.W mov jo iret (bad) stos (bad) mov scas xlat xor sbb xlat mov rcl mov push rex.XB add sbb xchg mov lods mov (bad) repz icebp (bad) leaveq cli (bad) push andl jle push enterq cmpsb and icebp scas rcl (bad) jp add rcl rorl or cmp or insl cld test xchg addr32 xchg pushfq test lods leaveq push out sar rex.WX add (bad) in lea cmpsb sbb loop sbb lret rex.RXB add jrcxz mov jp pop xchg cltd mov xlat fsts iret sarl rex.WXB push cmp cmp scas out retq rex.WRX repnz cmp cli xchg mov sarb loopne add sub sbb fstp pushfq test pop add adc add (bad) mov or (bad) loop cmp and (bad) movsb insb clc xor push adc (bad) mov mov iret (bad) xor enterq cmp (bad) ss rex.WX jo adcl xchg mov (bad) mov enterq cld shl iret (bad) insl mov (bad) rex.W lock add push int mov jno mov sub test rex.WR repnz outsl push push adcq adc (bad) in loop xchg xchg adc int retq sub lea ficom pop add fcmovu jl retq lahf sbb sbb cltd mov pop push hlt jne stc add lret push or lahf outsb loope (bad) movsl movabs mov (bad) rcr in jns iret sbb roll jl push xor ss (bad) mov jge (bad) (bad) xlat movabs repnz mov sbb lret adc and rex.WX (bad) leaveq cs add (bad) rex.WB (bad) (bad) sbb lods xor cs and push retq xchg push ror adc pop (bad) rol pop mov sbb add out rex.WRB movsb xchg shlb xchg push gs add and movsl mov pop (bad) sub fcmovb gs rex int3 test loopne mov int mov sub mov mov fdivl and test retq nop rex retq mov lret jl jle int (bad) sarb (bad) in movslq icebp out pushfq pop sub sti xchg insb lods jmpq (bad) rex.WRB adcb xor rcrb push mov cld add callq (bad) and jg rex.WRX test rex.W repnz movabs or adc sahf loopne leaveq mov rol fstps xlat (bad) movsb rex.W repnz add stc retq fidivl sub sub fadds addr32 fcomi imul rex.WR int jb mov xchg push xchg mov xchg xchg pop fwait (bad) xlat ds rex.WRXB gs repz data16 rex.WXB lods (bad) xchg jmpq (bad) adc movabs iret sbb roll adc rex.RXB rex.W rex.WRX cmp xchg adc stc mov fisttp jle nop unpckhps stc xor rcrb or loopne pop jae rex sti lock xor rcrl rex.B pop shlb xor mov mov xor loop jno xchg sub fmuls fldenv (bad) divl mov shr scas mov sbb (bad) roll or xchg mov retq xchg xor movabs test mov (bad) jb sub lock adc pop mov rex xchg sub pop xor repnz sahf fmuls (bad) cmp push rex.WRXB rex.WRB sub sbb push and or (bad) xor pushq xor add and int (bad) (bad) fstps mov mov fsubr shll movabs cltd mov (bad) rex.X pop mov movsl or and add sub mov mov ss js (bad) in jle lret roll jp add fstpt mov pop retq add icebp int3 es push mov dec std jge add rex.XB mov (bad) rex.WR jl test adc (bad) ss jmp mov rex.RX add (bad) (bad) (bad) adc (bad) adc jnp sub rcr add add or (bad) out and mov rex.WB fwait sarl xchg sbb sub sarl retq sub sub sbb scas in add fst xchg sub movsb jge jl xchg rex.WX and lret movsl (bad) xchg add pushfq stos ror cwtl shll adc xchg rex.RX cmp xlat jrcxz roll add pop rcll pop roll (bad) and rex.WXB add shl sbb jbe sarl iret movabs test sbb (bad) test xor rclb cli cld push addl mov js,pn imul or frstor (bad) repz or ficompl scas rex.WRX xor pop (bad) xor jmpq icebp in push icebp neg mov xor fildl (bad) rex.XB loope adc add out xor xchg and adc rex.XB mov push loope je outsl sti loopne pop jmpq pop loop imul add repnz int (bad) loope mov fstps (bad) (bad) push movsb add loope mov sub pop roll (bad) xchg (bad) movabs sub or rex.W adc mov adc (bad) add fucomip xorb lcall add and loop add rex.WX jp roll or (bad) and jge leaveq shrl pop xchg pushq (bad) cmp andl shrb xor (bad) mov cli rorl rex.WXB in sub cmp adc jns (bad) fildll adc jrcxz rcll (bad) imul rex.WRXB jl jo gs or mov mov rorl lods xor xchg in xor (bad) movabs jb cmpsl push add mov cmpsb sbb pop push rorl movabs mov or stos fcmovnbe xor mov mov push test add mov out leaveq and add add imul (bad) mov xor movabs test in push rcl (bad) jbe pop std pop shrl fidivr (bad) (bad) (bad) pop loopne (bad) sub add sbb in push and lods or sub xor (bad) icebp xchg jp shlb (bad) mov sbb mov lods (bad) mov hlt mov ffreep shrl mov (bad) enterq mov repz roll rex.RXB add rex.RX xor jns mov rex.WRXB flds js fs xchg rex.B jno jge push retq js (bad) xchg lea fdivrl pushfq and clc in lea pushq rex.WX jg loope add push loopne cmp addl and fnstenv rorl hlt sub (bad) lock fsubrl movabs rex.WR rex.WX rex.X xor (bad) jg rex.WRX and jno icebp sub or jrcxz cmp movabs sub stos fnstcw loope pushq test jmpq add mov (bad) or stc sub (bad) pop sbb push adc in jne rex.W int3 or xor rex.WX rex mov (bad) repnz addw xchg xor fiaddl movsb or mov sub cs (bad) jmp (bad) rex.B pop adc sbbb adc enterq lock retq fisttpl repnz scas stc (bad) add cmpsl push faddl add mov enterq add ja sub rex.B jno rex.RX and (bad) sub rex.RX fnsave and popfq push fs mov mov add repz cli cmpsb cmp mov or cmpsl movabs mov rex cmp (bad) add mov lock fwait test sub callq (bad) pushfq (bad) loope iret (bad) mov add sub pop faddp (bad) xchg mov (bad) mov sbb test retq or fwait jns jno cmp not or mov sub nop rex.WRB pop sub add adc cs or rex (bad) (bad) cwtl or sub adc mov xor in (bad) rex.X adcb rex.WR sarq (bad) pushq notl repz jl jae ficompl and adc (bad) xor fwait jno jb (bad) insl (bad) fdivrl (bad) insb sub nop (bad) in icebp pop movsb mov jp movabs adc int pop stos xor lock sbb (bad) pop retq addr32 adc popfq nop insl ds div movabs nop idivl xor icebp pop cld (bad) (bad) nop (bad) int ja adc (bad) (bad) xlat push mov rcll xchg xchg jae sub xlat rex.RXB nop out pop stos or loop sub cltd cmp gs sbbl xchg xchg jns xor mov test mov (bad) mov stc test mov nop sarb rex.RX (bad) adcl (bad) rol notb rex.WR xchg jbe pop sbbl sbb fsubr xchg jrcxz repnz fbld add xor in cmc adc fldl fst rex.B js icebp mov in and rex.WRXB data16 mov (bad) sbb rcll fisubl jmp pop rex.B pop fdiv (bad) mov test test stc xchg xor (bad) mov mov rex.X movabs movabs push and lahf mov sti sarb rex.WR rex.RB xchg retq fcmovu cmp iret neg and push cmpsb (bad) mov cmp mov shll mov xchg push mul and rorl cmp ss (bad) sub (bad) gs shll pushq jmpq rex.WRB cmc or sarl shll shll lods jae popfq hlt jo (bad) fsubrs fnsave mov test rex.WRB (bad) jg or cmp (bad) xor or (bad) clc mov pushq jge ror and (bad) rorl mov or sub sbb (bad) repz mov fwait rex.RX leaveq mov mov pop sbb (bad) mov and add xor ja cs idivb jnp jrcxz sahf rex.WRXB jbe lods (bad) ds test sbb cmp pop pop loop js ss pop cmc jno lret push std lea push and (bad) popfq (bad) lret rex.B test xchg jge sbb (bad) (bad) mov push (bad) rex.RX sti loop (bad) addl and fnsave xchg (bad) mov and lods (bad) sbb outsl movabs out (bad) xor fsts shrl flds int3 pushfq xchg (bad) or sbb rorl scas lods xchg shrl push sub stc pop in movabs fild notl lods xor sarl fsubl movabs sarl adc idivb lods (bad) stc fsubrp cld fwait shll sub add pop cli xchg add int3 sub cmp (bad) mov sbb jp rorl adc (bad) repnz mov cmpsb or loope rorl xchg sbb or push movabs movabs rex rex.R movabs enterq sbb mov shll or mov push lock mov (bad) idivb pop adc rex.RXB rorl push rex.WB add callq jge pop insb movabs (bad) cli sbb pushq mov xchg scas popfq xchg mov rex.WB jo adc roll sub inc scas ja cmp cmpsb adc xadd mov sub repz cwtl sti rex.RXB rex.WRB sub (bad) in clc int jrcxz (bad) (bad) mov clc adc cld rex.WXB rorl (bad) lret mov setge (bad) adc lret out xchg rcl sbb pushq (bad) xchg (bad) and jmpq jge jbe jne scas jg cmp test push (bad) pop js (bad) rex.WB roll and int sbb cwtl int3 rcl fbstp sbb xor sarb adc lret in out rex.WRX repnz test jne jl fdivrp push sarl in pushq push fcmovnb and (bad) mov (bad) mov sbb rex.W rex.RX add rcr (bad) jno,pn retq rcrl movabs rex.WXB addl (bad) jae cwtl sub (bad) mov and sbb adc iret enterq mov fadd (bad) mov (bad) (bad) out movsb adc (bad) xchg rex.RXB rex.W rex.R and fwait icebp mov out push adc pushq (bad) rex.WB outsb rex.WB (bad) (bad) lock push movsb movabs rolb jno clc out (bad) fcoms adc jp lock fisub pushfq or int3 pop add mov retq sub push fcompl pushfq (bad) cmpsl push movaps xlat and shrl mov sbb (bad) jl jg cmp imul (bad) mov data16 neg xor xchg rex.WR cmpsb rex.RB xor xor add (bad) movsb pop ds jg jae (bad) stc push pop xchg callq imul cld fisubr (bad) kandnw int xor add or push (bad) add fdivrs adc es xlat mov lret stos (bad) push nop hlt retq ds retq sarl sbb rex.RB rex movabs rex.WR rex.X in shrb (bad) fistpl lods cltd sub sbb adc mov sbb sbb movsb mov add fisttpl or pop (bad) sahf stos (bad) mov rex.RXB xchg in icebp fist sbb mov mov (bad) movabs stc jb mov sub pop icebp fnsave shrl pop adc xor sub iret rex.W fimull jno,pn jp or and clc cmp push movabs gs imul sarl fwait or movslq jo pop sub in sbb mov lea jg cli rorl out in (bad) divb xor fldln2 fsts push (bad) (bad) cmp xchg sbb test sub rex.RB sub sbb jle xchg jrcxz (bad) sahf rex.WXB test gs adc adc jno (bad) movabs cwtl addr32 je (bad) out xor (bad) (bad) ffreep sub mov add rex.X ja repz fsub (bad) or pop cs rex.XB or pop push push (bad) cmp in push outsb (bad) (bad) xlat ds sbb movslq (bad) mov in in (bad) mov adc rol jl fbstp loope retq adc fld push andl (bad) xor xor movsl loope (bad) jmp add fwait vfmsubaddpd fsts minps mov fisttpl or int3 adc rex.RX cmp (bad) mov adc add fmull mov mov jae fisttpll sbb jbe rex.WRB xor push loopne outsb rorl mov push rex.B cld imul lock insb (bad) stos rex.W movabs (bad) rex.B movabs mov jno fldt je jp sub pop mov mov hlt callq movsl or push iret (bad) sbb repz rex.B (bad) movsb (bad) lret or push add and sub cmp add clc retq adc out cld (bad) pushfq jno rex.XB pop pop jmp movslq mov rex.WR (bad) sub and loope (bad) jns mov jbe mov push jns sbb push repz and (bad) and leaveq jnp fstl stos xor roll int3 scas adc lock add lods pop (bad) add (bad) (bad) scas push jl int imull add add push (bad) rex.WXB pop in push leaveq test add mov leaveq int cmp stos mov pushq rex.WRB jl xor mov cltd mov mov movabs mov movslq fmul ffree in movsl rex.X rex.WB sub add xchg mov icebp (bad) fild add sarl or sub rex.B gs imul rcll retq lock fnstenv jbe adcq fwait out push je movslq sub mov sub mov mov add fmulp or sahf sbb sbb (bad) and test add push sti roll popfq (bad) xchg mov pushfq mov or (bad) mov rcl jmpq sub jnp movabs add es lret xchg in sbb cmp sub iret outsb rex.WRX (bad) mov and movb repnz leaveq ficoml rex.B (bad) es sti xlat jl repz (bad) icebp jne rex.RXB lret (bad) pop (bad) movntq xchg (bad) jle add andb int rex.RXB jno imul push insb rex.WB jns rex.RXB (bad) pushfq rcl and mov mov rex.WR xlat cli std pop cmc movslq (bad) sub (bad) xor rol ss in push in sarl pop insl (bad) movabs adc (bad) and rex.WRB mov pushfq hlt add rcrl and enterq rex.RX ds sbb rex.B jno iret (bad) outsb rex.WR shll in mov stos movsb sarl cli mov and or movabs rcr jrcxz cmp xorl movabs (bad) rex.RX pop mov xchg (bad) movsl movabs cltd pop icebp rex.B rex.B or (bad) cmpsb outsl mov shl sbb xchg hlt or cmp mov faddl fdivl xchg and in mov sbbl clc sbb loopne test push ror (bad) stos xlat push repz jne rex.WX vmovd orl rex.X xor in retq sbb xchg add jge scas rclb sbb lahf shr int3 out stc pushfq repnz in add jb add cmpsb (bad) imul xchg (bad) jl xor xchg rolb mov fsubrl lret nop rex.WX shl and imul retq lods incl push cmp jbe xchg and mov pop (bad) rcl push pushq pop frstor lret mov (bad) jno rex.WR (bad) shrl jrcxz (bad) mov cld xchg or decb rex.WR negb xchg pop xchg cmp lret add (bad) rex.B repz xchg add cmp (bad) xadd retq cmp and imul movabs stos insl repnz enterq xor je (bad) int (bad) fsubr lret lock sbb roll rex.WX in pushq stos rex.WB and and rcrl mov (bad) fsts (bad) xor mov fcomps je mov fimull sub addr32 out rex.X rex.B stc sbb (bad) xchg mov icebp xchg add mov or rorl (bad) insl xor imul cmp mov sub je pop jg jmp or cmpsl fild movslq ds xlat lock cmp pop (bad) mov movsb repz rex.W mov stos fidivr rclb sarl sbb pop pop iret push lret push sahf addl fistl stc cwtl (bad) lods pop ja xor ss cli cmp xor (bad) cmp push rorl xchg test add push (bad) gs decl (bad) fldenv fistp xchg mov (bad) pop (bad) hlt callq (bad) xor rex.R (bad) out movabs test jae enterq pushq outsl rcrl (bad) repnz pushfq pushq enterq fwait adc sbb divb or loope cwtl pushq (bad) sarl cwtl rex.B pinsrw lea enterq rex.WRX imul jns rorl fsubs rcr cmove (bad) xchg repnz imul iret lods or hlt movsl repz jb icebp pop divl push jo clc mov xor outsb and (bad) sarl fcoml in xchg jo (bad) mov adc outsb xabort (bad) (bad) jb sbb jno (bad) jbe iret push lret jns int mov (bad) xchg xlat rcrl outsb xchg pushfq (bad) rol pop in int3 and cmpl insb movabs jle retq sub cltd jae rex.RX add (bad) movabs lea jrcxz pop rol jle xchg lods push pop rolb movabs (bad) stc nop (bad) test rcrl add movb (bad) add rex.W rex.WXB add mov or int out pop in sbb (bad) repz rex.RB pop sar (bad) pushq movabs xor (bad) mov add roll mov ja in mov retq scas jle (bad) jae retq mov rol sbb (bad) test (bad) insl cmp xchg xlat fidivr jmp (bad) jg lret (bad) (bad) test add fcmove (bad) pop pop sub mov mov loope pop fwait cmp sarl push bnd int sbb jb or (bad) adc cltd push pop fistpl xor loopne enterq (bad) add ja or mov xchg cmc or sub push retq test jno xor (bad) stc cmp in lret rex.WRB fldenv (bad) (bad) mov (bad) lock (bad) leaveq loope or (bad) hlt (bad) add shrl fisubl je push jmp (bad) (bad) out fsubs test (bad) nop int3 shll in fdivrl (bad) je jnp rex.WRX packsswb and and (bad) (bad) ja fidivl mov jmpq mov out or (bad) xor mov shrl add push (bad) or test jmp adcb jb or gs rex.XB pop mov or movslq xlat (bad) rex.X jmpq cltd add sbb add mov (bad) xlat sub xor stos js rex.X fldl cwtl callq out (bad) jp movabs (bad) jne and rex.W test sarl shrl (bad) push loop movabs or jmp sahf (bad) ja (bad) rex.X notb shr lods movsl adc movabs lahf in repz enterq je (bad) mov or popfq (bad) mov insl fs in sar and iret rex.WXB iret movabs xor insb rex.WRB rex.WB lods jge or push fxch rex.RXB (bad) callq pushfq mov imul lea shlb sub and ror test fbstp add int loopne cltd clc xchg push test xchg repz and or (bad) cmc rex.XB pop callq movslq rex.W push jmpq rex.RXB cvtpi2ps (bad) xchg lods rorl add gs xchg rex.RXB (bad) (bad) (bad) rcr out (bad) imul (bad) (bad) (bad) lea repz pop int mov add (bad) adc adc or lock repz out sti lahf pushq sarl cwtl jae stc rcrl xor (bad) (bad) xor (bad) rcrl mov vpsubq pushfq pop pop jae ficom scas add rorl rex.X lret cwtl (bad) mov pushq sar jae ja imul xchg (bad) xor stc cmp cmp retq sub pop (bad) lock rex.RB loopne in jae movabs adc sbb js push movb mov in in sar sahf out push cmp outsb rex.WRX cmp xor repnz add insl dec mov xchg in shll movsl shlb lods and xor sub pushfq fsubl jrcxz enterq std negb xchg jo sbb rex.XB xchg (bad) test outsl sbb pop pop rolb adc (bad) (bad) sub cmp mov movabs (bad) mov out int3 out mov push add rex.WB (bad) (bad) push rcr lret imul mov push (bad) mov imul in retq sbb lock icebp xchg push fnstsw pop (bad) sbb jne cld xchg fidivl xor or rex.W vcvtsi2sdl (bad) xor rex.XB add or jno adc js mov xor (bad) loope test (bad) shll hlt inc jle fstpt movabs jp (bad) jns movabs xor sbb in (bad) std (bad) (bad) jmpq es rorl int3 stos (bad) or jle imul and cmp shrl fstpt sbb fldcw outsl (bad) roll rex.W (bad) jle retq xor fs push mov mov testl sti push cmp sub lods rex.R stos adc or sbb adc ja cltd (bad) jge mov loopne xchg shll sbb push push fs movabs (bad) rex.WR cmp pushq clc roll popfq (bad) (bad) jb out xchg idivl jp outsb or pop rex.WR lods mov rex.B mov movabs xor rolb addr32 leaveq push rex (bad) mov jae or int3 sbb (bad) ja and or rex.RX cs adcl xchg fstp rex.RX and xchg jg cmp (bad) (bad) add xor (bad) js adc retq jmpq (bad) and (bad) cmc fldt rex.WRX out out xchg fsubrs jmpq sbb (bad) jno push jnp test sar (bad) in mov sbb shll mov pop xor mov (bad) cmp mov xchg lret in roll repnz data16 sub gs fisttp mov push roll std jmpq outsl adc lret fmull xchg cmpsb data16 mov sbb imul stc idivl add pop fidivl xchg ds std addb mov repnz leaveq (bad) sbbl cmpsb icebp rex.WR xor rex.RB shl (bad) adc rex.WRXB sarl cmp (bad) pushq sahf sbb test sbb rorl data16 cld repnz add out (bad) shrl scas pop cmp mov fs add xchg cwtl rex.XB (bad) sti popfq xchg (bad) enterq movabs rcll (bad) rorb jno mov out retq sbb mov jno (bad) (bad) jns fsubp test icebp es sub std retq stc add add ja jno (bad) stos cpuid test rex.WRX mov loope push pop repnz mov retq jae pop nop or cmc rex.X rol movslq addr32 (bad) std loopne fs rex.WRXB cmp sub stc addr32 (bad) sbb iret jmpq clc cltd rex.XB repnz and xchg cmp test scas xchg insb mov shll pop cli (bad) imul rex.RX rcl add mov adc cmp sub adc xlat in shl fidivrl lods (bad) fisttp xor retq (bad) adc popfq pushfq push imulb movabs cmc lahf push ljmp pop incl and (bad) xor sti shll (bad) sahf iret movsb retw cli out pushfq add roll fmul roll push sub add (bad) or mov stos cmp roll jmpq ficom pop mov popfq imul out leaveq push lods xor (bad) (bad) jns jp rex.WRB cmp pop movabs mov out xchg fdivrs xchg push and pop rex.X rex.WXB repnz shlb add (bad) xchg push (bad) pushfq cld pushfq rex.B stos mov xor xor jl mov (bad) cwtl fistpll xchg jnp repz mov hlt cs nop ja sub (bad) pushfq (bad) mov jae and loopne,pt (bad) (bad) popfq rcrl add (bad) movslq lods xchg test cmpsb (bad) (bad) (bad) (bad) (bad) enterq mov sbb sub mov sbb rcrl cld adc and jl scas jle xchg movabs and rex.RXB add rex.WR rol (bad) mov imul (bad) gs stc or mov cmpsb repnz jg cmp (bad) mov (bad) int movsl (bad) pushfq out (bad) movabs iret rol mov xor movabs je push sub adc in movsb mov push or retq rex.B outsl (bad) adc rex.WXB lret loop xor rex.B cmpl fsubrp in cltd rol push in int repz gs sti out (bad) rex.WX xor adc (bad) mov movabs rol push test (bad) rex.WRX stc loopne and jrcxz (bad) sub rex.B in jns (bad) sub pop rex.WRX push jle and pop vandnps (bad) mov out rcll rex.RXB (bad) lock loope icebp jns in (bad) sbb shll sbb rcll rcrb pop sub rex.WR cwtd (bad) (bad) cmc xchg stc and (bad) rorl gs lock add rex retq cmp out push movsl rol rex.WR add mov (bad) pushq ror es idiv rcl scas outsb shlb mov sbb stos rorl pop rex.RXB jnp loop lods rex enterq mov loope test mov lret out retq rex.WRXB jge movsl xchg cmp xor movabs (bad) cli mov leaveq retq stos (bad) orb fs rex.WX mov (bad) mov mov movsl movabs or mov callq mov sbb lret mov nop cmc rex.X shrl cli (bad) cmp add xor (bad) xchg mov out jg jrcxz rorl jmp shrl (bad) sbb es iret in fidiv rex.R repz mov push xor in std sub jp retq int out xchg shlb fsubrl jo jnp push retq (bad) adc xchg rex.WRB sbb pop imul mov scas sarl add jnp stos (bad) ja add fnstsw popfq mulb or loope mov (bad) xchg mov test adc push movabs push (bad) xchg mov rcll lock (bad) int3 xchg cmp pop xchg mov jne (bad) js roll cmp rex.WB mov pop fwait sbb insl rex.WR rex.XB (bad) lea sahf test and rorl add cld rex mov rcrl push cmp loopne push pushq mov roll lret (bad) clc roll je,pt cli xchg repnz sub fcomps iret or loop sub stos and xlat sub xor and cmp jp (bad) imul add pop rcrb imul (bad) (bad) int and retq sbb stc add faddl loop movsb rex.WB or cltd cmp rex.RX (bad) mov pushfq (bad) xor rex.WRX rex.WR pushfq test xchg push push jo cli lods pop rex.WR stos scas (bad) xchg mov mov movabs (bad) (bad) add cmpb rex.RX rex.B shr (bad) and hlt lret adc fsubl xchg sbb rex.X xor sar and xor js mov or cmp push loopne shll sub ror (bad) jmpq in cmpsl sarl cli stos pop lret rcrl js es addr32 add lret adc rol (bad) ss cmp cmp rex.X retq rex.R xor shlb rex.RX std jne es rcll adc cltd repnz (bad) sbb (bad) add retw icebp es mov ficomp rcll roll pop adc out es push pop (bad) rcll (bad) mov or roll lods sub xor (bad) outsl (bad) jrcxz test hlt pop sbb mov shlb sub fcomip rex.RX mov loope mov sbb (bad) pop rorl cmp xchg pushfq cmp rex rorl and cs (bad) mov cmp mov test mov fwait sbb in iret mov movsb xor (bad) test insb fstpt idivb sbbb fst je lret push xlat rclw mov addr32 jle mulb mulb pushq (bad) sub mov in push adc std out (bad) mov rex.RXB mov and xorl mov lods orl cmp fbld test fstl mov scas adc mov cmp movslq cmp pushq enterq fstpl in cmp jae or jmp (bad) pop fs rex.X rex.WX and rcll xchg adc cli or insb mov xchg cli pushq xor mov shrl mov lret jns sti jno add in (bad) fstpt cmp mov cwtl rcr xchg cmpsl (bad) in fmull xchg xlat pop scas lret iret rex.WXB jge jmp rorl rex.WXB (bad) ja (bad) rcr idivb lahf repz jns cmp cmpsl lret (bad) xchg push adcb cmp pushq xchg cmp js (bad) rcrl jns mov mov rex.B sub (bad) rex.WR es mov rex.RXB add rcrb pushfq jle cltd pop xor mov add test rex.WRXB add iret hlt xchg loope xchg vphaddwd imul jno push add out fildl fstps std rolb movabs xchg rex.WRB rex.RB rex.B rex.W test jns sub lret movabs mov add (bad) cmp movabs (bad) xor and jne and jns mov jg rex.RXB jrcxz (bad) int push push movsl (bad) rcrl add (bad) adc adc lret fnstsw jne pop (bad) (bad) jae push adc movslq add movabs mov (bad) mov repnz pushq fwait sbb movsb pushfq pop (bad) (bad) ja movslq ffreep cwtl out (bad) pop and (bad) xchg (bad) cmp rex.B cmp enterq movabs in rex.B sub rex.R or popfq pop lret jnp decb sub jmpq jb gs pop jle outsb mov retq mov stos (bad) xlat sub add lret (bad) (bad) (bad) ja pop insl or mov mov cwtl (bad) xchg loop sbb jle jae cmp jbe xchg or push push callq (bad) js or cmc cwtl (bad) cmp shll or fadds (bad) mov test (bad) test cmpsl or cmpsb stc movabs pop mov mov cltd (bad) sub and jnp add xchg sub fimull cmp push mov fwait loop pop movsb stos scas sarl (bad) xor xchg cmp xchg xchg (bad) push cmpsl js jge rcrl mov cltd add adc repnz repnz xor xadd (bad) cwtl int3 rex.WR rex loope popfq pushq (bad) ss mov rorl ds and decb roll gs out test mov (bad) rcll in frstor sbb jrcxz xlat movslq int3 cld in test xor in rcr rex pop shr adc push roll cwtl mov add adc and adc rorl mov out ja repz hlt or xchg shll cmpsb add (bad) xchg (bad) sub mov ficompl rol sub cld adc rex.R addr32 (bad) (bad) ja roll orl movabs jno roll scas rex.B repnz (bad) cmp pop lcall (bad) xchg add adc out jbe jle jge je xor insl mov or fsts js mov cvttps2pi rex.WRXB testb rex.B (bad) sti mov pop jmpq movslq add sub int3 and or sub loope int sbb stc imul jae int3 cli subl sbb xor push and xlat jnp rcll xor jns sbb fwait es pop mov stos rcrb (bad) xchg push xor (bad) push mov sub cmp orl shl cmp roll mov (bad) jbe int rex.WXB sbb jle mov insb adc roll adc (bad) rorb imul sarl rex.WXB rex.WRX lea sahf fucomip stos sub int3 rex.WB loope repz jg stc mov xchg mov add mov (bad) or (bad) repnz or faddl jb sub lea mov (bad) adc or sub fadd jno pop data16 (bad) pop push mov pushfq sbb fld (bad) xor (bad) xchg xor fnstcw test sub sub rex.WR and rex.WB sbb jp callq and movabs cmp jge xchg mov or xor fwait (bad) (bad) pop (bad) lock scas jb rex.W lea pop loop adc push mov vcvtpd2ps lret (bad) (bad) (bad) leaveq imul setns mov (bad) hlt sbb rex.WXB rex.X rex.WRB push xchg lock jge xchg lret xchg (bad) shrl retq and xlat sub cld (bad) rex.RXB es lods fsub xorb repz (bad) mov cmpsl rex.R add gs rex.WRXB rex.WRB pushq sub rex.RX mov int3 clc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) jne outsl xchg xor movabs movabs (bad) or (bad) (bad) (bad) rorl test loopne iret push out jl rex.B in jp cmp out cltd xchg sbb sbb or fisubrl rex.WR jbe rex.XB movabs shr test idivb sti repnz (bad) rol cmp pushq cmp rol xor lahf movabs add loopne cmp retq ds mov add lods hlt or xchg mov rex.WB push in add push xor movabs stc (bad) (bad) movabs jb mov mov (bad) sub imul xor jns rex.WXB push scas jge (bad) (bad) xchg test (bad) lahf (bad) in jae test ss (bad) cmp test orb (bad) (bad) adc outsb sbbb xor xchg out fld fdivl vmulpd retq mov fcmovnb fstpl adc rcrb jns mov in retq add rex.WRB rex.X fadds lock xor and cmp jp mov jo test adcl cmp in ja fsubp pop jl loopne mov in lahf jnp jmpq xor sbb callq rex.WX (bad) nop js push add cmp mov retq jge rex.WXB (bad) lods fstps xchg pushq pushq rex.RXB (bad) xor cmp cmp sub lock push sbb mov cmp (bad) jbe xchg and sbb sarl rex.R jp int3 (bad) movabs lock mov cmpsl test cmp or cltd (bad) and rex.WB rex.R rex.WR ficomp fimul jl (bad) out (bad) xorl jnp (bad) jmp adc pushq push (bad) movb mov mov rex.WXB fs (bad) mov outsl add pushq sbb addl add rex.WR cld rex.WXB loope loop rex.B (bad) outsb test rex.WRB int jmp jne xchg insb adc roll lods je ror rex.WX jno fbld rex.WXB incl jle (bad) insb in in rex.XB or adc rex.RB (bad) mov movslq mulb test rorb sbb rex.WRB loopne jo loope iret (bad) jno movslq mov adc in mov jmp mov (bad) xchg stos xchg insb (bad) lahf xchg (bad) (bad) outsb fimull data16 cmp sarl add adc callq jb in push rol (bad) adc retq mov (bad) icebp stos mov or rex.RXB fwait mov sub cmpb rex.WX stos shl lock sbb (bad) xchg xchg int3 or mov rex.RB ds xor jbe movsb sarl pop in mov sub pop add xor (bad) jge sub stos jmp add mov rcll mov cltd push roll mov enterq shll (bad) mov and jne xor lahf (bad) xor rex.R lock in pop sbb mov (bad) xor adc sahf (bad) test mov test fidivl (bad) pop push (bad) (bad) mov retq xchg xchg rcrl mov rex.WB (bad) retq mov (bad) movabs test xchg (bad) mov jge or add cmp rex.WRX xlat (bad) jae or out sub test xor adc xlat xor and rex.X xorb je xchg (bad) scas jbe fistl pop icebp rex.R loop pop lock rolb outsl cwtl icebp imul divl out mov ja rex.WR rex.WX movsb xor scas xchg (bad) movsl mov sub cmc cmpsb lock mov jg loop insl fistp rex.RXB jns out mov out fwait sbb testl adc xchg (bad) scas lods mov add sub ror out (bad) fdivl cmpsb jb xor mov and (bad) addr32 loope fistpll pop adc jns jmpq repz jno cs (bad) (bad) sti test shrl sbb movslq repnz jmp (bad) xor gs out jg rcl mov lock pushq pop test sarl fs xor lret and sarl shrb mov shll ja int (bad) roll fcoms loop test stos sub add jbe rcll rex.WB rex.WR push mov fwait scas leaveq adc rcll scas (bad) movabs jbe iret gs sbb loop sbbl pushfq imul test xor movabs (bad) (bad) fmul rex.RX mov insl sti push sbb movsl or rex.RX sbb imul (bad) mov movabs mov incl and fdivrs add push xchg cmp and sbb and add add movabs movabs pop rex (bad) adc xchg add nop (bad) imull xchg mov mov (bad) std pop movabs (bad) pop adc movsb and fimul cmp (bad) pop (bad) (bad) rcl rcrl push pop rex.WR fwait rex.WX shl imul jg mov (bad) (bad) (bad) rex.XB movabs test in callq cs (bad) jne add or rex.RX (bad) (bad) loope jl clc rcrl jbe rorl sarb jno rcrl in retq add add ljmp loop hlt push jl (bad) vmovntps pop sbb ja fcompl out or data16 mov (bad) cwtl add cs lock rorl loop clc es ffreep scas add rex.RXB lret fisttpl push out test enterq roll adc retq rex.RX add in sti rex.WX rex.WRX pushq xor (bad) jl rex.RX mov fisubr sahf cld enterq in mov add rex.XB (bad) mov rex sti rcrq rcr (bad) push (bad) shll mov (bad) jge (bad) xchg rex.WXB icebp (bad) xor mov movabs mov (bad) stos lret imul incl mov sbb nop (bad) mov imul ffreep in enterq sub insl rcrb cli xor (bad) mov rex.B gs (bad) mov (bad) in jl pop out gs data16 (bad) push mov (bad) movabs flds jbe iret (bad) xchg sub (bad) jb out push sub shll loope and (bad) add movabs callq rcr push rex.WXB jp shl push lods mov lea movabs push retq rex.WRX xor sbb xchg or push in jmpq xchg xchg pop jno (bad) jg enterq std js add pop mov (bad) cmpsl jae rex.WRXB push rex.X jp (bad) sub push jnp xchg (bad) (bad) jno loop repnz (bad) jbe mov mov jo cmp (bad) scas retq xchg lock movsl xchg (bad) jb ja (bad) scas movabs (bad) (bad) rex.WRXB rcll mov jo rex.X (bad) lret push (bad) cmp mov xorb rex.RB rex.WRXB test sbb hlt stos xor fsubrl and repz out test loope faddp adc loope lods mov jb fsubs (bad) mov sub mov shll in (bad) (bad) (bad) cmpsl outsb xor lret push outsl stc mov loopne sbb jrcxz jno push xchg cmp iret cmp stos sbb rex.XB sbb xor rex.WRX adc (bad) rcll sub (bad) clc test cld xor mov lock add mov repnz sbb lods jle add xchg rex.WRXB mov negl jl sub adc iret jp stos rcr (bad) xor mov push shll sub add jns mov jo je mov rex.XB (bad) mov jns loop nop pop xchg jg pop push mov cmpsl lret (bad) jbe loope xchg out int pushq out adc xor (bad) insl and movslq fisttpl lock (bad) (bad) rex.WRX pop (bad) rex.RX movabs push push cmp shll lock or jrcxz jo sar shr xchg sbb (bad) xchg (bad) mov jnp repz mov pop fnstcw mov cmp xor rex mov (bad) fcmovnbe ror sub lret rex.X movabs jns push add sahf sbb rex.XB and jl mov sub pushq icebp add addl jne pushq and ffreep fstps stc jl repnz (bad) xchg xor add jg push and adc imul adc lods sbb cwtl jl mov sub xor fstp ja rex.B rex.WRXB rex.WB repnz rex.WR and jp je xchg fdivrl push cmpsl movabs callq js sub icebp movabs fstpt pop jp push js mov push mov movsb cmp (bad) in sub mov movl rex.XB lock xchg rex.WR loope insl pushfq (bad) xorb addb retq and pop mov imul lock lods rex.W xchg enterq (bad) movabs mov test pop push movslq sub sub std lret incl jno cmp (bad) repz sbb cmp movabs (bad) jmp jno rex.B fildll imul rex (bad) test lcall mov jne (bad) cmp push pushfq sub and lret pop loop rex.WR rcr fdivl sbb fldl jge (bad) pop (bad) mov add (bad) xor test adc mov (bad) jne mov (bad) mov cmp (bad) sub mov jb mov adc cmp xor rex.W fcoms xlat idivl rcrl lret rex.R fwait movabs mov push pop outsl add movabs sbb pop stos fstpt add mov mov rcrl xchg popfq rcrl sub or (bad) sub rex.R mov (bad) xchg jg sar (bad) push pushfq mov mov add rcr sbb pushq insb (bad) testb retq push retq ja xor xlat jo rex.WRXB (bad) std jbe imul gs rol jrcxz xchg ja pop pop shll push test push jmp mov rcr (bad) xor rex.RXB enterq cli sub loope adc repnz retq loope sbb movsl or ja push lret or shrl sub notl jp or add add hlt out cmp jno out cli mov or movabs cmp (bad) jb (bad) mov and xchg jrcxz pushfq nop (bad) cmc and stos xor (bad) jno fsubl jle retq rcll mov test rcl out rex.R sbb stos (bad) and js scas cmp (bad) jge and ja retq mov xor sub cmp (bad) and sub decb stos ror mov notl sub int test mov je shlb (bad) sbb roll mov movabs mov cmpsl xchg rex.XB jge xchg add jl push out gs addl rol pop je mov hlt (bad) (bad) (bad) push rcl (bad) mov js (bad) out pop lods fwait pop sub retq add repz mov or (bad) mov movabs cli (bad) mov fnstcw rex.WX imul rex.WXB neg out mov rex.RX xor cmp sbb (bad) pushq jp mov xor out ss rex.WB test jge (bad) fldt sub (bad) callq mov cmpsb and add push and sbb and jb addr32 add movabs rex.WR or (bad) push rex.WXB xchg mov xlat xor mov sub mov adc xchg mov and or pop retq add int3 or sbb mov jl rex.RX mov (bad) rex.WXB jrcxz mov cmp loop notb retq mov mov (bad) fidiv jle in scas cmpsb fwait stos (bad) (bad) insl xor (bad) mov xchg add (bad) jmp scas sbb int jl clc or mov jns shll pop nop push lret sbb sub mov rorl in mov xor iret insl rex.WRX (bad) je jnp xchg sar rex.WX mov clc sub imul in (bad) xor cmpsb fildl shrl rol ja xor addr32 mov (bad) mov push out retq mov mov pop xchg mov (bad) jae pop mov jno jmpq rex.RX rex.X rex.R rex.B mov (bad) retq sub adc (bad) orl mov jrcxz mov (bad) or sarl out jge sar fiaddl and xchg test retq sbb test mov (bad) mov (bad) (bad) (bad) xchg sub mov (bad) (bad) lods (bad) xchg je test xor sub loope sub test icebp xchg rex.RXB (bad) pushfq retq mov or (bad) insb jmp rex.B shrb (bad) mul outsl test flds retq clc push (bad) cmp rex.B mov rex.X in jrcxz xor rex.WB cmp cmp add and push add test (bad) je mov push sub and stc (bad) adc jg movabs cs sub (bad) stc xchg xchg or xchg rex.WX sub js mov cmc (bad) mov lret rcrl cmp sub rex.WXB mov rex.WRX out retq and and cmp (bad) movabs xchg mov fdivp mov jp add and std stos sarl and mov jno rcll (bad) xchg or addr32 test movabs add movabs jno or movsl test add jrcxz fstpl repnz sub clc enterq test movabs fidivl (bad) out pop fwait std jmp stc rex.WRB mov (bad) je cwtl ja pop xchg imul sbb jo ja rex.B rex.XB sbb lret rex.W add jns adc push cmc mov jmp outsl repz shl rex.R shrl adc scas loopne lcall out pushfq test rex.B (bad) cmc fisttpll in xchg movabs test enterq punpckhbw (bad) loopne cld xor mov fdivs out cmpsb rcl (bad) nop mov mov stos rex.WRB lea lods mov rcll lret rex.WR (bad) or mov loope pushfq sub (bad) (bad) (bad) jbe and (bad) xor shll push (bad) mov cmp jrcxz ror insb xchg rex.W hlt sub rex.WXB sarl leaveq callq rcrl mov in lret jmp movabs rex.WR (bad) mov fild icebp cwtl and (bad) cltd jns (bad) or enterq rorl xor gs (bad) rcrl test iret movslq (bad) fdivrl rex.WX rex.R rex.WX (bad) xlat cmp cltd retq pushq scas xchg out (bad) fsubr rex.WRX fs fs fldt mov add movsb enterq pop rex.WRXB out movabs repz out lret cmp (bad) xor fsts mov xchg js ja (bad) int rex.WR jle lods faddl sbb loope hlt xchg cmp clc (bad) mov adc addr32 lods pushq (bad) testl mov add in (bad) rex.WR ss jb test cmp movslq mov fnstsw retq pop jp fs adc (bad) mov movabs (bad) paddusb lock mov repnz pop pop sti imul fbstp (bad) in push adc fistl lea int (bad) rex.X pop cmp addl es xchg out rex.RX rex.WB rex.WXB gs movabs movsl popfq mov rcr jns iret mov lret retq leaveq rclb xchg outsl mov mov rex.WX and cltd subb mov loope loope rex.RXB outsb or jg fwait rex.WX xor (bad) in jbe pushfq scas mov lods sub mov notl callq mov mov iret rex.WX addb mov rex.WRX rex.RB push cmp retq sahf push or cmc test rex.WR (bad) add shrl sbb mov roll xor nop sahf test sarl xchg rex.XB shll insl xor or rcll test sbb loope rex.RX (bad) xorb (bad) mov cmp jns xor (bad) cmc (bad) (bad) mov pushfq and sbb js xchg nop xchg jle repz stos (bad) rex.X jo retq pop (bad) enterq rex.B ss push sar out cmp mov xchg adc in jge pop sbb mov shll adc fsubp js movsb iret jnp jl stos xchg add push (bad) xor retq mov sbb (bad) roll push imul sarl fisttpl fwait movabs mov xchg mulb jmp mov (bad) rex.WRB sahf callq (bad) rex.WR xlat sbb jno (bad) cmp mov push xchg lods frstor sub xchg mov push lret lahf or cs and cmpsl mov rex out leaveq cmpsb imul pop vorps push inc subl lret hlt adc outsb xor data16 (bad) and mov icebp pop jo leaveq and int3 je sub jae loop or (bad) loopne (bad) rex.WB pop adc rex.WX cmp fnstcw (bad) sar popfq mov shrl (bad) sbb jo xor xor or lods in jb mov callq xor xchg lock repnz cltd cmpsl jno (bad) xor mov js push xlat je and rex.WRX rcrl (bad) out sar adc (bad) pop jne sbb (bad) outsb cmp loop add ror sahf sbb push sub rex.RB repz pushq data16 mov and adc in mov mov or mov push imul cwtl repnz test pop sub sti retq lret xchg scas (bad) mov or sahf movabs mov jo lahf movsl xchg mov movslq popfq clc imul movabs int3 pushq (bad) sahf xorl int adcl mov sub sub fcmove in cmpsl leaveq (bad) sarl rex.WX and loope repnz and pushfq rex rex.RX lock xchg pop pushq mov push pop xchg rex.WR es rol and mov xchg mov scas add (bad) xor (bad) sbb rex.WX xor popfq (bad) lahf repnz (bad) movabs pushfq test cmp fildl adc xchg xor and movabs popfq jb lret imul mov mov loopne and sti movabs fucomi (bad) xor jbe stos sub pop out (bad) je iret and jmpq repz mov add mov jae rex.RXB mov movabs rex.XB (bad) jg (bad) jmpq mov (bad) movabs out mov (bad) shr sub sub jle xchg std xchg imull mov or rcl rex.RXB xchg scas sub (bad) pop (bad) add xchg or (bad) fidivr je jbe sbb int3 mov (bad) mov int std mov (bad) or cmc pushfq out push in push mov mov fcomi rex.WRXB (bad) cmp (bad) mov sarb clc xchg callq sahf push mov xchg xor rex.WX jrcxz and addr32 or rex.WB rex.XB rex.R cmp xchg (bad) sub mov xor or sub pop jrcxz mov fcompl add add cmp mov in mov cmp pop imul scas lock and rex.WRB cmp mov ja rex.WR rex.B rex.W jl pop or pushq rex.WRB (bad) icebp mov test rol xchg out cmp shrl mov iret hlt out test rex.WB loope mov (bad) mul sarl mov add shll stc data16 add xadd cmpsl sub loope lret jle rex.B jge (bad) mov out pop in pushfq test and cld ds stos (bad) in retq sbbl (bad) mov xor icebp movabs int adc (bad) rol fsts mov and outsl js mov je pop cltd int3 lahf push (bad) retq (bad) pushfq and or int stos decl push mov sti fsubp add sbb cmp mov (bad) retq out (bad) callq (bad) cmpsl lods sub sbb ja and repnz pop (bad) cli cmpsb shlb jae push (bad) (bad) or xlat stos and sbb rex.RXB repnz (bad) (bad) outsl (bad) jns mov frstor push out mov sti add std fwait scas add rex.RXB rorl leaveq lret (bad) adcb mov (bad) mov (bad) (bad) repnz (bad) mov mov and fwait outsb sbb (bad) xor sub outsl (bad) rex.R int3 xchg rcrl enterq lahf rcrb sub outsl or pop (bad) fmulp and out and sub xchg (bad) fwait popfq cmp (bad) rorl lea push adc shl and add mov pop mov sbb lea sarl (bad) (bad) jrcxz add add popfq xlat (bad) xorl add (bad) fstl sbb pop (bad) (bad) push loope movabs mov mov sub shrb imul jne in in sahf pop xchg pushfq fdivrl (bad) pushq sbb rex repnz push xor (bad) rcrl xchg ficomp lret retq andb (bad) rex.R sbb rorb fnsave retq xor (bad) (bad) pop cmc roll cmp sar sub xchg (bad) loop fistp (bad) mov mov jbe xor stc (bad) xchg xadd cld andl xor jbe mov xchg addr32 (bad) mov fdivr mov scas xchg mov jns (bad) jmp mov in rol icebp out pop ss xchg fdivrs jne rol mov add pop test shll (bad) pop add jmpq pushq pushq rex.WRXB or scas fnsave fisub xor mov mov roll (bad) out (bad) (bad) lret add fcomps in sbb fdivrl xchg sbb sub (bad) xchg mov rex.WB mov movabs mov jg add mov pop xchg fwait data16 (bad) sub xor xchg jnp cmpl mov sub out stos shll rex.B rex rex.WR sarl (bad) cwtl rex.WR and faddp pop adc iret rcll sub mov mov mov mov jmpq sbb lahf push xchg (bad) pushfq cmp jno rex.WRXB xor fldenv int sbb ficomp cmp repz pop rex.B test shll rex.WRX repz (bad) jo push cmc movsl jns stos mov push imul loop ror cmp rex.X nop (bad) add mov fsubrs cmpl sub outsl callq (bad) out rex.XB js rol (bad) imul add test pop mov (bad) mov (bad) cmp test leaveq scas hlt callq jnp rcrl fwait and out retq int3 shrl rex.WXB loop rex.RXB movsb (bad) jnp loope rcrl fisubr sbb (bad) rcrl jne xor add cwtl rex.RB insb fldl cmp test (bad) or lahf jno rex.RX or mov mov push or rcrl mov xor (bad) and sub push stc mov mov cmpl xor (bad) out iret rex.RB addr32 movabs fdivrs repz mov xor rcrl int mov callq (bad) or callq push fidivl (bad) (bad) pushq subl adc and loopne (bad) mov repnz jb mov sub or data16 xchg sbbl sub push popfq mov cs movabs in decl int3 (bad) sbb mov fmuls xlat (bad) cld (bad) mov sub outsl iret rcrl mov sub xor stos cmp je loope outsb lock out (bad) pop popfq test mov retq scas movslq rex.X push xor int3 xor rex.WX rex.WR movsl jne retq (bad) lock stc xchg xchg rex.X rex.WXB or mov push mov xor test fldl nop (bad) adc js ja (bad) adc sub (bad) rex.WRX rex.WR (bad) movabs add shl fstpt xor cld movsb rex.WB jmp loopne (bad) jle rex.WX rex.RB retq sbb xor cmp (bad) loopne xor and loope (bad) (bad) add or (bad) add xchg mov xchg rex.R retq rex.XB (bad) cmp sahf int3 lahf mov (bad) or add rex.WRX movabs pop rex.WXB (bad) adcl iret mov int (bad) push cmp jbe xchg cmc rex.X push cmpl (bad) (bad) jns add rex.B mov xlat movabs rex.RX ss pushq mov rex.WRX cmpl fwait in (bad) (bad) or mov pop and push or sub (bad) stos rex.R (bad) mov and rex.WB push (bad) test (bad) (bad) retq outsl push stos divl jnp jne (bad) (bad) pushfq add outsb jg mov mov rex.RXB repnz (bad) mov fnstenv xchg adc sarb lock ds rex.WB sub and fwait mov rex.WRB mov (bad) mov (bad) icebp sub insb (bad) mov add pop test test (bad) leaveq (bad) (bad) sub pop iret or add in mov sbb (bad) es insb fdivrl push pop clc sbb fild pop (bad) (bad) (bad) data16 rex.WX roll shl and cmpsl add retq add mov (bad) and mov rex.X (bad) mov xor (bad) lods shl popfq (bad) (bad) push or fimull pop push outsl rex.RXB mov cwtl lea (bad) adc cmp rcr sub jrcxz pop out sub js (bad) (bad) int enterq pop rcrl (bad) icebp (bad) xor cmpsb or rex.RXB shlq stos in adc push jmpq shll loopne (bad) jbe mov sub jne jmp mov in movabs sub lret mov pop sub rex.B (bad) movsl (bad) outsb retq rex.RX push add lret (bad) jmpq xlat rex.B xchg (bad) mov pop (bad) lock roll ds (bad) cmp cmp repz xchg sarb shrl in movb mov xchg add int movsl cs cmp mov rex.B repnz jrcxz fistp std (bad) lock add sbb jo xlat clc rcll (bad) jae test (bad) adc in movabs repnz ss adc je out rex jge shrl enterq xchg (bad) mov (bad) (bad) mov (bad) insb cmp adc sub (bad) add mov (bad) imul rex.WB sbb and repz in stos repnz jg std add sub (bad) xchg mov mov (bad) cmp and enterq subl out callq adc icebp sahf push incl cld fisubl xchg sub lret rex leaveq insl out int loopne add loopne push (bad) or sbb xchg js sbb mov pop add (bad) pop rol or xor jns xchg jge and jno nop sbb lea in xor fstpl sub rol (bad) jl or lret jns xor mov rex.WX mov gs cld xchg (bad) (bad) mov xor lret in (bad) test and subb (bad) (bad) (bad) (bad) jmpq (bad) push mov xor outsb sahf (bad) jno xchg shll insl mov jl add (bad) pop out add (bad) xchg (bad) fs mov xlat and int3 outsb rex.WXB lock jb in push push xchg data16 je push lods shll rex.WRB leaveq movabs rex.X rex.R (bad) shrl jo leaveq mov (bad) rex.WRB xchg pop out xchg callq (bad) callq (bad) test mov fwait ja fisubl hlt add lret add pop add shll mov mov icebp or in mov (bad) (bad) jns lahf push mov loope jrcxz xchg rcrb or retq in pushfq (bad) push (bad) jo cmc (bad) xchg (bad) and iret xchg rsm movabs iret or mov add (bad) sub fnstcw (bad) neg rcll add sti cmp in push cmp cwtl mul jo nop rex.WX repnz and or pop roll mov (bad) loopne mov xor xchg in or in lea cmp mov (bad) lea add iret or sar notl cmp in xchg movslq retq rex.WRX test int3 int3 push push mov add out cmp icebp movabs jno icebp (bad) lret mov jbe push out or shrb sbb and cs rex stos jmpq or jle cmpsb jns xlat cmp (bad) loopne adc ja (bad) xlat sub movslq enterq adc push data16 retq orl (bad) xchg or shrb (bad) xchg (bad) (bad) out mov loope xor fcmovne (bad) loope leaveq jmp callq (bad) mov sbb (bad) mov jp cmp imul int mov int xor insl (bad) (bad) (bad) leaveq pop rex.R ja xor jno movabs ja (bad) lahf (bad) (bad) jne mov jge,pn jo and imul repnz in (bad) sti rex.XB rex.WRX push mov decb push (bad) retq jae (bad) mov xchg rorl jle rex.RB nop rex.WB rex.WR rex.WRXB hlt int3 rex.WX rex.R movabs xchg fstl sub push xor adc fwait xorl jg mov xor add xchg (bad) cltd xchg jg mov jb cs test addr32 pop mov add out repnz adc and je pop lret out xchg rex.XB push sahf mov pushq ss (bad) jo rex rex.B jbe (bad) jmp add xor fist scas xchg lret repz add xchg movabs mov cmp jrcxz push test jp and std shrl (bad) callq callq push subl cwtl lcall rex.RXB cmp rorl mov rcrl retq pop pop sbb enterq imul rcll popfq negl fwait push and imul rex.WR rex.WRB sbb imul xchg adc lret mov (bad) orl xchg clc out (bad) jb (bad) testl outsb clc jno rex.WRX pop (bad) movabs retq iret (bad) rex.WX add rex.RXB (bad) (bad) adc shll insb mov xchg adc retq xor cli (bad) mov (bad) jnp jrcxz mov and rex.WRB lcall mov lret shrl cs pop adc rex.WX ss cmc (bad) push add sub xchg movslq fst jno in or popfq sbb cmp addr32 (bad) mov rex.R test shll insb sbb inc lods cmpsb movabs lock pop (bad) (bad) shrl mov roll (bad) movslq fdivl ss jnp fnstcw shrl imul test xchg rcr popq rol cmpsl popfq out andl (bad) shll retq push movabs loop lods shrl lret orb xchg jne decl shrl xchg not pop jl loop (bad) xor popfq fisttp xlat (bad) xor mov adc jbe mov rex.WR repnz (bad) and fiadd push mov rex gs xor xchg rex.WB repnz movabs mov add mov push mov sbb shr or dec rex.R out mov (bad) fsubr add (bad) sub (bad) mov sbb (bad) imul fstps fnstcw mov int movslq repnz retq push pop (bad) jno fisttp mov (bad) (bad) roll lods int3 xlat mov test scas (bad) adc mov jmp movslq mov pop fwait pop pushq pop push or jg sbb in test jne xorl xlat out (bad) test fstpt lcall scas imul lea jns stos sub cwtl cmp mov push sbbl hlt or fist shl outsb cmpsl mov (bad) int leaveq imul and mov je insb adc push mov and add movabs (bad) mov xor xor jne jb and cmp std xor add in scas or (bad) jno sbb js outsb sarl movq fwait sbb (bad) or imul (bad) mov cltd (bad) lock je push adc roll add int jrcxz mov (bad) jge or jns sarl shrb mov mov sar fidivl (bad) fs rcl adc roll xchg fwait js rex.B scas jns hlt jae xor (bad) fwait mov pop shr or movsb cltd or loopne cld rorl or jmp lret shll mov sub jge (bad) andb add or subl pop rex.WB mov (bad) rex.B je movsb and xor pop add cmc jno ficom clc cmp mov repnz sar icebp and mov rex.XB or (bad) lock and (bad) mov push xor push lret mov test pop std repz push xchg rorl insl (bad) fbld cltd jge rcrl xor rex.W xlat repz rex.WRX sbb bnd push and loope pushfq out leaveq (bad) jbe jle scas enterq rex.RB add jp rcll popfq xchg sar imul (bad) xchg adc fidiv sti sbb mov rex.WB lret loope xor push cmpsb repz xor cmp rcrl (bad) lods jne loop stos mov gs (bad) rex.WB addr32 std rex.WXB xchg adcl insl movslq (bad) (bad) mov (bad) mov scas cmpsb icebp cmpsb rex.X jmp sarl xor (bad) push mov (bad) jmpq add mov test rex.WRB stc repnz pop gs popfq shrl (bad) sbb cmpsl add mov cmp fbstp rex.WR jns (bad) insl movb mov add jbe ror sub fistp mov imul popfq mov rex.WXB xorb (bad) or xchg sbb (bad) addr32 xchg xchg rex test adc (bad) mov and (bad) jnp sub mov mov imul pop add (bad) jmpq (bad) insl push mov loop xor cwtl cmp iret (bad) test sub int in rex.WXB rex.WB in rex.X (bad) enterq fild cmp rex.WRX rex.WR cwtl movabs rex.W popfq pop mov nop rex.RX xchg mov adc jle fcmovnu retq fistl (bad) out or lret rex.RX and jb rex.X cmp std loopne and movntq (bad) cmp mul lods rolb fwait loop xlat fcomp jg,pn pushq sub es enterq (bad) (bad) xchg rcll mov (bad) (bad) (bad) push callq (bad) sbb mov cmp add repnz lea (bad) xor rex.WRXB rex.RXB stc xor add sub bnd rolb adc add rex.WR rex.R addr32 (bad) rex.R sub cli jnp jmp popfq (bad) testl fdivl loop add (bad) sub sub jp sbb sbb psubd (bad) mov (bad) push sbbl xchg add addr32 mov pop add lret out popfq insl cld retq jne mov addr32 jmp mov (bad) sub (bad) mov mov mov in mov test sub jl rex.RXB cld cli shl push cmpsl rorl loop (bad) lahf sbb pushq (bad) out sbb movabs cwtl adc (bad) movabs rcll jne lock xchg rorl jo cs sub int3 fs rcll std addr32 (bad) js (bad) cmp mov in jg rex.WRXB pushq jno je jns stos lret mov out fld (bad) pushq insb pop cli rex.WRB enterq (bad) movsb rex.X sahf cmp lods loop xor data16 clc loopne pop mov movabs jns or xchg mov mov jmpq nop and lock rex.WB rex jae jo rorl push xchg clc (bad) mov push jnp fs pop mov sarl (bad) or pop cmp rex.XB sbb (bad) jbe mov (bad) lods cmp rcll push jmpq roll (bad) pop icebp (bad) xor or imul push stos std mov jmpq and adc (bad) (bad) ja test rex.RXB rcll (bad) std cmpsb cmpsl xchg or rcll cs (bad) je mov xor fisubrl sarl loop lret addl fnsave and pop pushq (bad) push (bad) or rex.WXB rex.B frstor add decl rol nop movabs and iret adc cmpsb loopne sbb rex.WB test fdivs add xlat sub or push xor xchg hlt movabs xor xchg mov add lret stos (bad) (bad) xchg sub sbb rcrb (bad) movabs xor sbb rcll rex.XB rex.R jle imul jno rex fwait rcrl fiaddl jrcxz callq add shrl movabs jnp push test mov xchg cmp (bad) and mov fdivrp clc or callq ficoml lret or mov adc out mov roll int enterq fsubs or rex.RX (bad) (bad) or xchg xlat gs or lret scas loope (bad) stos pop add (bad) jmp adc xchg fxam sub mov or movsb iret je adc std mov sbb mov imul js ficompl xchg push clc (bad) rex.WRXB rex.XB lods pop sub xor rex.WRX callq jrcxz lret fs callq fidiv sarl cmp negl rex.R jns xchg mov mov outsl pop (bad) rex.X mov rex.WB rex.B cs out rex.XB (bad) (bad) add sub mov stc (bad) mov rcrl xchg push jle sti pushq sub fwait (bad) mov std mov rex.RB cmc xchg jrcxz stos lahf rcrb xor in mov sbb fwait mov (bad) xchg xchg sbb iret add fdivs (bad) sub and shrl and and enterq jrcxz movabs out (bad) jno mov add and sbb and rex.WRX (bad) mov sbb (bad) mov push in cmc repnz mov rex.R sar stos mov sarl out adc mov rcrl loopne (bad) jp adc (bad) sbb mov (bad) (bad) rol loopne popfq loope es push (bad) (bad) insb cmpl xor lret sysret jb repnz (bad) push korb adc lea insl jnp std ud1 xor scas lahf nop (bad) pop jrcxz (bad) out mov cltd push movabs jp jnp scas mov fstpl or xchg cmp int3 ss jne sti (bad) sub jns mov rorl cmp cwtl cmp adc jae add xchg (bad) xor popfq sub cmp int3 fstp stc in insb mov lahf xchg xchg push fwait pop mov pushq movsb push and stos rex.RB mov cpuid es xchg push cmpsb pop xchg pushfq jns imul sbb (bad) adc rex.WR rex.WX stc js (bad) movabs adc rex.WX mov mov xchg imull adc rcrl sbb rex.B and leaveq pop cs sarl push adc test cwtl enterq rex.WR loopne out outsl mov rex.B ds (bad) sbb mov (bad) fstl and movsb fbld cwtl sub rex.WB mov xchg and rcll (bad) push fiadd (bad) (bad) (bad) (bad) std icebp stc mov insl mov rex.WRB bnd and add jrcxz loope lea sub mov (bad) lret pop movslq callq pushfq sbb sub addr32 rex.WRB wrmsr testl adc fidivr movslq xchg add movabs in retq fsubrs sub add callq sub movabs rex.WR jo fiaddl in stos jae (bad) jg jae (bad) test js vpsubusw sbb jnp (bad) retq cmp sti add rex.WX outsl rorl loope stc rex (bad) lock mov test cmp sbb std shlb cmp xor (bad) rex.WRXB cli outsl xchg int3 insb mov roll movabs xchg mov pushfq jno xchg retq mov shl rol frstpm(287 lods (bad) jo movabs cltd movabs pop hlt xchg (bad) xchg sub repnz (bad) pop idivl lea push (bad) mov xchg rex.RX mov rol mov (bad) jl xchg xchg out iret jne out rex.RB rex.X (bad) cmp xchg (bad) int3 push (bad) movabs cmc sarl stc ja scas mov (bad) sub jae push xchg and gs (bad) adc cltd cwtl push (bad) loope push rol (bad) mov cmc icebp movabs rex.RB rex.WRX rex.WX js repz mov (bad) mov stos sarl rex.WRXB rex.XB mov and sbb repnz outsl rex.WRB adc jrcxz xor loop rcrl lods or (bad) push (bad) out add sbb rex.XB fistl shll fisttpll jo rex.WRB xor xchg (bad) frndint scas mov adc loope or mov adc mov orl cmpl (bad) clc out divb mov and nop stos push movabs out mov and shll sub rex.WRX (bad) or test mov retq (bad) sbb (bad) fldl (bad) xlat movabs fs enterq jrcxz adc (bad) fsubl adc (bad) rex.WRXB insb sarl movabs mov hlt pop (bad) (bad) xchg add pop jle decb jle push mov rex.WXB push mov mov mov xor (bad) cmp lock mov lock jge sbb (bad) (bad) test rclb jno icebp and int3 clc rex.RXB fnstenv xchg xchg add iret lret retq sub ficomp rex.WR sub (bad) (bad) (bad) (bad) (bad) jp jb add cmp push movsl outsb xchg repnz out rex.WX jne callq (bad) mov stos mov mov ror (bad) movabs subl jmp add rex.RB rex movabs xchg (bad) pushfq jl fbld adc mov movabs pushq pop retq ss mov jp sbb add (bad) int (bad) sbb movabs insb repz mov add rcll (bad) pushfq addr32 movabs pop cmp (bad) jne loopne lret mov cmp negb out in cmc or rcrl fisubl and test add test rcrl push lret jg xor mov fs insb pop sub out imul test std mov movsl lret gs int rex.WR cwtl insl (bad) xor in orl pop pushq loop clc fwait and rex.R mov cmp outsl xor cwtl (bad) sub rex.RX (bad) pushfq movabs movabs add int fisttpl out xchg rex.WRX cwtl adc retq jmp pushfq vmovhps mov or lea rex.WRB xchg (bad) insb pop out mov jbe rex.X add xlat cmp shll fwait mov fcmovne pushq jbe lahf fs rorb repz movabs retq or push (bad) test jne pop xor lock rcr neg xchg imul xor or insb rorl jle scas movabs imul adc or xchg (bad) data16 rex.X imul or sti shll fldcw pop loope mov test fnsave retq push iret sar (bad) retq mov lret rex.RXB es jge (bad) (bad) (bad) rex.RX sbb lods or rex.W shll xor sahf clc xchg pushq jl and adc mov adc xchg cmc sub rcll roll push pop shlb mov int3 pop cld sar (bad) (bad) movsl adc movsb cmpsb xchg xchg xchg cmp adc imul lret iret movabs (bad) sub pop xchg cld adc sbb pop (bad) cmp mov and (bad) jnp sbb (bad) and or hlt (bad) jo stos movslq icebp clc push gs xlat jno xlat (bad) jne movabs mov sti test (bad) mov lea out scas mov (bad) jl jo loope testb addr32 test test imul rcll insl (bad) (bad) jns rex.B andb and enterq sub movabs shll mov (bad) cmpsl (bad) mov (bad) mov nop mov out push rex.WXB push movabs rorb pop jbe std test cmp fsubs xor ror (bad) cmpsb and sarl xlat jl jge sub out xor pop rcrl lods (bad) lret gs mov rex jrcxz add add cmp outsl (bad) cli stos shrb fldln2 cmp jp mov movslq lcall jne (bad) mov or (bad) out mov pop sahf adc (bad) idivl (bad) pushq shll lock outsb xchg jmpq sbb add jrcxz lret jo loop rex.RB (bad) lea add cltd add (bad) out mov rex.WXB push mov sarl rex.RXB test cmp (bad) ss rex.WX (bad) and (bad) scas and (bad) xor nop (bad) cwtl repnz (bad) add sub mov xchg xor pushq jmp sahf std enterq in enterq lods lea add scas test (bad) (bad) mov jle jge pushq test repnz add imul sbb mov pop insl int sub (bad) movabs imul insl xchg rex.B push rex.B (bad) rcl movsl divl out mov xor jns movabs (bad) jp adc sahf iret adcl cmpsb test pop (bad) sub mov jge movabs or mov xor retq imul rex.WR add out out sarl ds push add jnp test jbe rclb xchg xor add jg sbbb fdivrs sub test mov jbe rex.RXB mov lods mov cmp movabs cmp sar outsb mov sbb jb in (bad) scas mov scas ja mov cmpsl mov cmp icebp movabs and adc jg cmp mov xchg addr32 push rcrb cs movabs fsub sbb mov sahf jo test xchg roll xchg insl add stos (bad) sub (bad) in rol mov xchg imul hlt shrl add (bad) jb and (bad) rex.RX movsl jno movabs pushfq fst adc jmp mov mov rex.B jb movslq jle std xchg (bad) rex.B ficoml mov jae sbb (bad) (bad) rol push pop xchg movsb roll and (bad) (bad) (bad) or shrl std xchg fbld (bad) jae add sub cmp out mov (bad) pushfq cmpl sahf xchg insb (bad) sbb add out mov (bad) cmpsl pop cli adc popfq repnz cs mov (bad) push movabs test leaveq mov mov mov out fiaddl sub loope mov mov rcrl push sub je jno sar leaveq (bad) stc adc loopne xor (bad) ja (bad) retq push sbb add (bad) test sub es cmpsb shrl pop (bad) (bad) out pop out (bad) hlt jle sub (bad) push cmp rex.W rex.WR sbb mov ds or mov sbb movabs shrl (bad) jns rex.WXB repnz stc push in (bad) pop pushq je rcrl add rex.XB rex.B cmc lods xchg shrl je cmp sub adc adc rex.RB cmp (bad) (bad) (bad) lret cli (bad) in rex.XB retq test stos shl pop pushfq outsw push scas callq (bad) imul rex.WRXB mov shll sbb sbb rex.WXB rex.W rex.WB mov sarl shll mov xlat repnz jge mov leaveq (bad) cmp mov mov (bad) (bad) roll xchg (bad) mov sub rex.XB out cli sbb (bad) xchg xor and jb,pn mov sti repnz cwtl icebp stos stos mov rorl (bad) (bad) mov retq rex.RX push (bad) mov nop loope rex.WRX mov (bad) cltd sub test (bad) mov xor xor stos fiadd (bad) xor and jp pop fsts (bad) adc scas xor ror movsl movabs sarl jg rex.WRX roll movabs xlat mov (bad) (bad) rorl pushq lahf add imul pushfq and cmc movabs (bad) cmp rex.WRB rex.X rex.RB sub outsb (bad) mov nop cmp fstl (bad) lret (bad) jle mov mov jp cmpsb xlat add fcompl xchg fdivs sbb adc test mov rex.WRX (bad) add (bad) push pop cmp mov push (bad) outsb (bad) cmp add add adc mov scas js (bad) int scas mov mov jmp sbb add (bad) and rex.R nop (bad) test js callq roll es test sti (bad) xor cmc mov out (bad) lods adc xchg sub retq mov fwait jmpq rcll adc mov sarl lock jmp js addr32 xlat movsl shll fdivr (bad) sbb mov (bad) roll stos (bad) lret cmpsl addb (bad) lods mov lret sub movabs pop jmpq movabs cli cmp or jae ss rex.WXB je sbb adc retq mov retq jne fmuls rorl xchg movslq and jl push in (bad) loop repnz mov adc rex.RXB mov or test or add (bad) adc jrcxz rex.XB jle lret mov cltd xor shrl rex (bad) cmc sub xchg mov (bad) jge xchg or jrcxz jno cmp fwait movabs test ja ror popfq xor lods rcll sbb cmp (bad) and and (bad) movsl add std xchg adc push (bad) ss add jmpq loop (bad) xchg (bad) out (bad) outsb rex.WB rex.WR addr32 mov add cwtl or xorl mov pop xorb (bad) data16 add rex out (bad) cmp test gs add es pop stc mov add sbb sbb rex testb fidivrl fcmovnu or lea cmp out add xchg or (bad) mov sti enterq frstor rex.R mov (bad) xchg (bad) (bad) mov lock std push movabs mov lods jae int (bad) add push adc sbbl pop fimul xor mov xchg fiadd mov enterq cmp cmpb add cli mov adc (bad) mov mov gs adc enterq shll add repnz jp hlt rex.W sbb (bad) in mov sbb insl in or insl adc jo int hlt mov pop andl jmpq or movsb bsf movslq fcomps (bad) mov or rex movslq enterq push sbb nop rex.RX fstpl lods or jmp (bad) repnz lock fimull (bad) pop std in xor mov mov enterq cli rex.WB rex.WRX xchg rex.WRB scas movslq loopne xor rex.R add lods fadd movabs stc mov rex.B repnz cmpl (bad) rex.R rex.WB and jno lret lock xchg rex.WR rex.WRB sub stc adc jno scas sub add jge (bad) (bad) sub sbb int inc lret imul push (bad) loope loopne push jp sub adc retq fnstcw (bad) lea sbb test jle mov rex.W movabs (bad) sbb (bad) add fbld lahf xchg (bad) add jb sub (bad) mov pop in lret jno test sarl xchg movsb rcr pop in loop rex.RXB rolb pop nop sarl scas (bad) add pop jae push xchg cmpsl (bad) shr roll jb ja movabs (bad) iret xlat faddl add movsl in (bad) cmp movabs xor rex.R rex.RX rex.WRXB jno mov sahf sbb and sbb popfq pop pushq pop pop pop (bad) loopne mov (bad) xor js or out or test movabs rorl lods movl clc repnz stos icebp and scas fist movabs mov (bad) rex.WRX fs data16 fmull mov rex.WRB repz xor retq rex.WX xor fs cld ffree (bad) rex.RX popq pop (bad) push icebp imul rex.RX rex.XB add pop xchg clc out and pushq leaveq rex.X push sub rex.WRX sub rex.W pop and (bad) or rex.WB add sub (bad) mov pxor or test cmp rex.W rex.RB fcmovnu cli rex.RX rorl div outsw adc faddl cmp (bad) jmp jno,pt scas cmc (bad) cmc (bad) push (bad) lock je sub retq test jo and xor enterq rex.RXB movabs xor out movsl add insl xlat (bad) repz (bad) jno icebp hlt rex.W (bad) (bad) sub mov std mov rex.WXB (bad) adc or sbb rex.WRB mov std jo pop jrcxz sbb xchg xchg xlat callq rex.XB stos (bad) test fs cmp (bad) (bad) (bad) rcr jo shlq retq int stos xor rex.B jno nop (bad) imul (bad) adc and pop (bad) jmpq cmp movabs js in insl cmp fdivs pop lret je xorl (bad) pop mov repnz mov loopne jmp retq cli lods (bad) jg mov sbb mov rex.WX lret cmp rex.WRXB pop pop mov sti retq faddl rex.WX rex.X callq test ds ss xor mov push mov (bad) orb and scas mov sti push or (bad) rex.X hlt jae (bad) or addr32 sbb sub insl (bad) in pop sbb cld pop movslq and in mov gs (bad) test jmp movslq in movslq rex.WRX xchg mov (bad) sbb push out shlb (bad) jnp out xlat mov or sbb cmp pop std rex.WXB lods mov push cmp rex add add rcl sbb mov and lret imul (bad) xor cmpsb (bad) fisttpll int add and (bad) cltd rcrl stos int3 add sub jl lahf mov xchg (bad) sbbl mov rex.XB ljmp add xor rcrl push insl mov shrl mov rorl int (bad) cmp sar lea int3 (bad) and roll fdivs in sbb rex.WRB (bad) (bad) in lods xchg push jae scas shll (bad) movabs out gs cmp retq mov rex.XB js ljmp rcrl addb movsb mov (bad) jbe out lret and jge rex.WRXB add shr repz jb rex fwait push (bad) jp push adc rex.WRX adc scas adc sub pop (bad) lods rex.W cs (bad) in in mov mov pop jmp mov (bad) (bad) pop in retq or xor in sub out mov pushq mov sub jrcxz (bad) rex.WR jb sub lret xor fcmovne rex.B imul jmp rex.X movabs iret mov je (bad) jnp (bad) adc jae jrcxz mov and movsb pop (bad) (bad) (bad) rex.WRX in rex.RXB repnz ds popfq rex.WX pop and insb mov test ficompl pop (bad) mov add sub rex.B dec rdpmc xor lret icebp out insl and cmp pop mov test xchg add leaveq cmpsl xlat xor (bad) pop mov cmp add mov rex.B rex.W cli fisubrl iret (bad) mov loop int es out cmc add jae cmp (bad) fidivrl (bad) loop test popfq mov movsb push add sbbl int (bad) cmc (bad) fimul loop xor mov mov in sbb scas (bad) movsb sub mov adc (bad) outsb cs rcr (bad) imul sub pop mov mov andl int3 mov cmp mov (bad) push fiadd popfq mov jb cmp (bad) jno jne movsl jae adc push (bad) addb mov lock loop add clc jrcxz or loopne nop mov sub mov rex.B rex.WR test sub (bad) pop movsb in in sahf xor pop movslq (bad) xchg cld jrcxz in (bad) jne mov jge enterq mov cmpsb mov xor jbe fdivrl fadds xchg mov insl rex.XB movsb mov pop mov (bad) callq jns sbb mov out rex.RX xorl repnz add cmp movabs pop scas or and fdivrl xlat or (bad) add outsb adcb xor rex.WB loope (bad) lock or (bad) std xchg stc movabs rcll and out add mov sti pextrw movabs and xor rcll (bad) jb addr32 (bad) test std fisubl cmp pushq or shll adc xchg (bad) int3 (bad) (bad) lret mov scas (bad) mov sti mov mov roll rex.WRX loop rex.W lock lods loopne (bad) stos sarl sbb (bad) push cli test rex.WRB cwtl (bad) sub and or subb xchg rol add je stos movabs negb outsb push mov (bad) in enterq fwait mov xchg pop xor rex.RXB rex.W addr32 movabs leaveq add (bad) movabs (bad) (bad) pop fistl loopne and mov jge (bad) jo pop shll (bad) jge sbb or sbb repz mov (bad) (bad) (bad) shll xor rex.WX xchg shr mov adc roll sbb lods rex.WR add jp pop lock sar in push addr32 rex.W (bad) loope hlt pop jle loope xor popfq lret callq or retq adc movabs (bad) jbe (bad) mov push mov (bad) lahf xchg (bad) stos rex.WRXB fdivrs cli insl cmp insl icebp pop movabs jle,pt scas rex.WXB shll adc jp gs xchg jo nop out (bad) xchg movsl (bad) cwtl (bad) cmp push gs mov (bad) lods (bad) callq shll pop movabs and mov fmulp loop or add sbb push sarw (bad) add out ja scas (bad) sub pushq rex.WXB sub rcll adc fcomp in jnp mov xchg jne rcll out (bad) (bad) add sub mov rex.X movsb push cmp rex.B ja lahf xchg outsb rex.WRB rex.RX and fcomi or in or test movsl sub and rex.X loope leaveq mov push push rcll add (bad) jbe mov movslq sarl cwtl jnp mov xchg fwait xchg and push or movabs mov cmp xchg mov mov jg out rorl insl lods movsb (bad) mov push sbb in rex.B andb pop push lahf sbb mov pushq imul jne pushfq jg pop xchg test cld movsl jbe mov xor rex.WRX jge (bad) rcrl xchg (bad) sbb (bad) xchg in js lock (bad) xchg outsb out cmpsb shl (bad) xchg fnstenv (bad) push cli movabs (bad) rex.B lods shrl sbbb stc add adc in (bad) xchg clc (bad) shrl and sub mov rex.XB or jmpq cltd (bad) imul mov data16 (bad) callq rex xchg (bad) sub mov (bad) add jge mov rex.WX sbb sahf or outsb in (bad) push (bad) movabs stc jae,pn push push and in add jg jbe (bad) cmp test (bad) loope rex.B rex.WRB fsqrt mov movabs xchg sarl pop fcmovnb addr32 test (bad) push (bad) rex.WR rex.X sub (bad) (bad) (bad) rex.B xchg cmp pop add mov movabs sbb mov (bad) sbb xor repz ja cmp movabs (bad) iret rex.RX and cmp retq mov push add push or rex.RB xor lret xor xor mov mov (bad) or cmp rex.WX sar repnz mov js iret xchg (bad) addr32 or movntq or in jg (bad) loop xor outsb (bad) jae int3 loope add test mov js lret shrl pop test iret mov sarl pop (bad) jl movabs pushq rex.WR dec or pop xor addr32 (bad) in sub cmp cmp (bad) lods sub fsubrs int3 pushfq (bad) or (bad) (bad) in fnstcw rex.WRB fcomps repz clc jo vandnpd fnstcw or (bad) cltd add rorl enterq shr (bad) mov test jrcxz out mov (bad) loope push xor add jns or std retq (bad) xchg rclb rex.RXB rex.WX retq sub addr32 mov lahf sub rex.WRB fs fmull rex.RB fwait or stos rex.B (bad) test in xchg fcomps or (bad) lods push (bad) (bad) jb retq (bad) (bad) push mov (bad) xchg xchg add enterq mov repnz shrb nop (bad) jno fnstcw mov xchg mov imul and loope cwtl int3 xchg sahf in pushfq enterq or cmp fcmovnb (bad) xchg enterw rex.R jo leaveq xorl xchg repz jo and (bad) mov mov hlt fild sub or negb jns (bad) lock jne jrcxz mov mov icebp (bad) add xor rex.WR rex.B out (bad) outsb stc shll xchg insl and (bad) and sahf or xchg mov mov (bad) sbb (bad) sahf iret lods rcll push mov rex.X lret nop (bad) mov clc (bad) mov movabs mov (bad) jae popq fstl jnp hlt stos repz shll add lret sbb movabs mov lret add lret or jno hlt ds xchg cmp jno rorl fs or loop (bad) leaveq pop retq in movsb rex.WRX sub (bad) (bad) rex.X out sarl add rcrl xor pop (bad) xchg iret test sbb sarl cmpsl add (bad) in mov sbb shll rorl mov int movsb popfq xchg mov and cltd (bad) js (bad) pushq lock (bad) jae cmpsb (bad) stc xor rex.R testb pushq (bad) xor (bad) xchg mov addr32 mov or loopne xchg mov (bad) push mov lahf xlat mov rex.RX lret sub orl cmpxchg test callq rorl insl xchg test (bad) out adc (bad) mov idiv mov rex.WRX xor add in rex.WRXB (bad) roll xchg (bad) or (bad) xor jb leaveq rcrl clc mov sahf xor roll sbb (bad) je cmc shll and cmp cld movslq sub (bad) cwtl stos add (bad) rex.XB add jge roll movabs movabs lock repnz (bad) jmpq stos addb pop (bad) (bad) (bad) mov (bad) pop jo cmpsl not test xchg cmp movslq (bad) in add stc sub stc lock (bad) (bad) pop faddl mov mov xchg gs mov sbb add fsubrs cld andl (bad) sub or adc rex.W data16 lods adc sti jb xchg repz loope jge (bad) orl and (bad) jbe pop jg jns rex.WX lods (bad) adc sub xchg sbbl xchg pushfq andl movl jle jmpq iret pop mov push xchg icebp mov sbb xor sub cmpsl (bad) pushq retq xchg jrcxz pop push stos retq mov rex.WB rex.X rcrl rorb and xor popfq push retq pop jp sbb jmpq iret roll xor (bad) je cs lahf hlt mov jg test outsl roll or mov in rcr mov mov rex.WX je pop stos int3 testb addr32 pop rorl push xchg (bad) sbb (bad) adc rcll (bad) push roll pop rex.X lret ja jnp loop fimul movq (bad) jbe out rex.RX std pop in out enterq cmp (bad) shrl (bad) shrl (bad) cmp scas inc lret (bad) jo sub rorl cmpl (bad) xchg insb jns pushfq shll mov sub push xchg out (bad) mov mov pop repz movsl shl mov scas rcr scas (bad) xchg rcrl jge add or or (bad) (bad) sub fnstenv sarl xor loop retq mov lods push ds rex.WB leaveq and movabs push xchg loop enterq pop adc iret mov jno push (bad) pop rcrl rol lcall loop bnd gs test rex.WX retq cwtl (bad) add movabs insb push or int3 movslq scas out push xchg adc rex pop cld rex.RX or (bad) mov out outsl push cmp rcrl cwtl push retq imul lea rex.RXB mulb outsl jmpq fldl xchg std scas rex.WRX int3 movnti retq pop fiadd (bad) movsb pop test in (bad) jnp (bad) jrcxz (bad) mov sbb rorl ffree roll icebp sub ds jp cmp pop cmpsb data16 shl sbb push movabs mov hlt mov pop shrl (bad) jns or pop mov lret push cmp std pop pop adc and mov retq (bad) movslq or jnp push rex.WRX adc outsl mov iret add movabs test (bad) mov sahf rex.B mov pop sar repnz and push addr32 or push lret mov xor jae subl iret sub (bad) test (bad) (bad) test sub add nop xchg test in mov adcl cmpsl mov (bad) jnp cmpsb iret mov cmp pop test or outsb mov test mov ljmp pop scas ror rex js push rorl cmp xchg (bad) ja mov xor bswap movabs pop sar jne rex.WRXB xchg (bad) rcrl rex.WX lods pop inc pop imul (bad) movslq xor jrcxz rex.RX mov mov lods xchg (bad) (bad) sbbl or adc lods and rex.XB jbe (bad) test lock test fwait or adc (bad) int3 pop popq movabs (bad) xor je stos lods and std pop adc shlb and lods pop xor (bad) in rcll orb and mov jg rex.WRX push jmpq sbb adc imul jb mov and out jbe adc rorl ds cs cmpsl lret add hlt cmp lods (bad) loope rex.W jmp mov add adc sbb mov roll movslq rcrb adc movabs sbb cmp out test mov rex.B rex.XB js (bad) pushq (bad) and add (bad) (bad) insb rcr and pop xchg jnp loop outsb pushq ficom scas mov xor lods mov roll (bad) adc cli (bad) xor sbb push xor and rex.WR negl pcmpgtb in fnstcw rorl mov mov (bad) andl (bad) jl lret (bad) stos rcll adc jmpq jmp outsb and (bad) (bad) or jb sahf rex.RX int3 (bad) mull rex.RXB test (bad) (bad) sub cmp cmp rcll lea ja fadd jg mov movslq shrl in (bad) cmp ja cmp shll pop scas scas rorl rcrl mov rex.W inc sahf lret mov pushfq movsl repz rex.WRX mov sti jl jns lock pushq mov rex.WRXB fdiv retq and out cmp (bad) add mov (bad) mov xchg mov add insl push rex.RB rex.B (bad) outsb (bad) rex retq (bad) out ficomp cmp pop rex.WRX mov or (bad) rex.R test pop (bad) mov (bad) fstpl clc lods fisubrl repz pop (bad) divb sub outsb xor stc xchg enterq xchg xchg cmp xchg jno int movabs (bad) (bad) jno faddl rex.WXB fisubrl fisubr add leaveq sbb rex.RX nop (bad) (bad) sbb loopne mov lods sub sahf pop loopne jns shlb cmp lods movabs pop gs mov adcl sbb lock popfq xchg rex.X rex.WXB rex.X and rex.WRB insb lods mov or add movabs outsl stos (bad) (bad) ds mov pop mov rex.WB gs int3 rex.B (bad) rex.R jle (bad) movb xor sbb stos frstor sti repnz add sub sub pop rex.WX xor xor std loopne lret mov xchg je enterq sbb scas pop movabs adc movabs fs cmpsb shrb jae pop add rex.WRB rex.WX lahf (bad) rex.WRX repnz sbb add in lods mov out rex.XB rex.RX push rorb sub callq icebp js (bad) pushfq jne (bad) add out jae (bad) (bad) cmc mov xchg (bad) xor (bad) or pop push fsubrs shrl mov (bad) xor rcr rol adc xchg (bad) mov add push sti xor out jmpq (bad) int3 repnz (bad) xor (bad) out sub (bad) mov loop fwait xchg icebp pop fildll push sbb adc xchg rex.WXB pop (bad) jb ds push lods mov retq mov rex rex.R icebp mov mov rex.WR es callq fadd mov jl jbe (bad) loopne outsb std jns pushfq xor (bad) es scas rol movabs mov rex.R std jg push adc fstpl je (bad) adc shrl rex.WRXB gs test repz int pushq nop popfq enterq or roll sahf lods roll xchg lahf (bad) je movabs shrl rol fidivl movslq sbb jge stos std lea fildl (bad) rex.B rex.XB cs pushfq add shll lret (bad) lret pop xor xchg jae mov sarl cmp mov sbb pop rex.RX cmp (bad) imull repz mov sbb adc jae fcoms jbe push cmp int rex.X addr32 adcl fxsave xor rex.WX lods iret adc (bad) sub (bad) or and out add loope xorl rex.B mov xlat (bad) addr32 sbb mov in shrl out sarl sub (bad) push cmp (bad) rex.WRX rex.WRB rex.WR (bad) jo stc jmpq and pop mov lock sbb rex.XB fs repnz hlt cmpsl ja sahf scas movabs fistpll lahf (bad) (bad) (bad) (bad) sub push mov or adc sarl lods sarl mov rex.R (bad) (bad) test leaveq and mov mov test js rex.WRXB sub shll rol outsb fisubr repnz jno rex.R sarl sti (bad) shrl (bad) or (bad) mov cmp rex.WX sarl movsl mov rorl jbe shr in mov xchg rex.X cld jge cmp adc pop mov iret jmpq push xor cltd mov pop pop ds mov imul and (bad) stos jo mov pushq notl (bad) (bad) pushq xlat test retq mov xchg iret out adc shrl or fnsave push leaveq callq (bad) mov rex.WRB scas or jl enterq mov std sahf loope add je xor (bad) fist adc jmp (bad) in rex.B rorb cltd movabs (bad) enterq out jp fucom pop mov shl xchg int3 (bad) sbb rcl jrcxz jno rex.R rex.WXB test andl notb pop shrl add scas lea out scas rex.WRX test push in or add mov (bad) or retq (bad) ss cli jg cmp sub pushfq test rex.R cmp (bad) (bad) mov loope jne rex.XB (bad) cmpsl add or icebp rex.WRXB sbbl movabs scas add (bad) sbb roll js leaveq (bad) jo lret and out (bad) callq mov fistl cmp (bad) ffreep and (bad) sub jrcxz cmp and or xchg es add rex (bad) rex.WR mov (bad) (bad) rex.WR rex.B loope pushq xlat (bad) or jg pop and pop je insb rex.RX rex.WB addr32 stc (bad) fstl in loop rex.X (bad) or loop (bad) rex.WRX mov rex.B and repz jmp rorb iret cmpsb mov lock and push movslq xor rex.WRB jecxz rorl (bad) xchg test lods test sub or add rex.WR movabs (bad) fdivl pushfq pop jmp test and sub rex.RX mov rex.B (bad) movabs (bad) nop adcb rex.B ds movabs gs (bad) cmp fcomp movabs movabs insl and xchg loopne mov add mov lahf sub mov mov movswl adc jl xchg enterq mov rex.R cmp cltd sarl out ja mov rex.WR or imul (bad) nop repnz test test mov adc lret mov callq pushq (bad) (bad) shrl (bad) rex.RX lcall lods (bad) jnp rex.WX jb ds in and (bad) test pushq adc leaveq lock push pushfq fldl and (bad) imul loope (bad) (bad) decl (bad) xor shll rex.WX cs (bad) xor cwtl rex.XB gs or (bad) insb cmp rolb shr nop in callq sub lea rex.WRXB test leaveq or xchg rcrb rex.RB repnz sbb lretw jrcxz outsl xorl adc jmpq int (bad) (bad) fildl sarl pop jns adc (bad) mov (bad) xlat push cmp jge rex.WX out pop repz repnz (bad) mov jb cmp sbb push jo rcl (bad) outsb mov iret nop xchg out outsl add or repz (bad) (bad) adc fcmovb rorb (bad) lea (bad) rex.B sbbl mov sub (bad) retq (bad) or rcl ds sub roll adc or outsl test (bad) retq ss loopne (bad) faddl xor (bad) movabs jnp out lea rex.RB rex.RXB (bad) fucompp callq mov movabs movslq lock rex.WRXB rex.WX push repz rex.WR sbb or in out (bad) testb out cmp (bad) testl adc shrl jl and lock test cmpsl movabs mov rorl cmp fcompl out mov rex.WRB shrl nop jle cmpsl mov or xchg movabs add rcrl push es xchg (bad) movabs (bad) rcr xor shl xor clc push adc cmpsl (bad) (bad) lret movslq mulb (bad) xor rex.XB sbb (bad) or cmp repz add jrcxz fwait pop stc stc (bad) gs (bad) (bad) jp mov sub scas jl leaveq test fld lods popfq push mov adc decl xorb cmp shrl mov fsubrp (bad) pop rcrb mov pop fwait (bad) inc pop insl and xor fidivl cmp cmp sarl shl mov pop scas sub fwait xor and int3 mov jrcxz cmp rcr adc sub sbb add push test adc leaveq jne,pn jrcxz xchg out add imul sbb test rolb jle or shr roll incb (bad) push and fcoml fwait out add add pop cmp rex.WRXB rex.W xlat mov fidivrl jrcxz cmp xchg (bad) (bad) shl adc scas lret sub (bad) sbb retq fadd adc mov xlat (bad) js add icebp (bad) rex.XB jg in mov rex.RX (bad) cmpb (bad) jne sahf (bad) scas pop popfq cmp (bad) imul lea rcll pop (bad) imul imulb and orl jbe nop pop jmp rex.WR pop pop pushfq (bad) in incl sub fs cli xor shll sub rorl repnz pop mov retq xchg rol clc xchg add in retq outsb mov xor xchg sub std out sub xadd insb xor (bad) outsb xchg (bad) not cld shll sbb (bad) (bad) (bad) xchg out stos andl stos sbb jmpq jb jns fidivl sub addr32 xchg enterq movabs (bad) adc rex.WR retq xchg rex.X cmp sahf (bad) imul and cmp in xchg jbe pop shll mov and jge jmpq leaveq scas or cs cmp (bad) rex.B sbb push (bad) rex.RX (bad) xchg or scas repz bsr pushfq lods rex.B outsl int3 je fmuls fisttp hlt (bad) mov cmp push adc cwtl lahf dec (bad) rex.W xchg movabs movslq rex.RXB pop mov cld pushq in xchg add (bad) test pushq rex.X rex.RB je sub jrcxz flds (bad) pop iret push sbb xor xor test movabs fildl not imul mov test nop test xor movsq loopne mov pop test adc movslq rex.RX (bad) cmp repnz rex.WXB inc pop pop push repz xchg adc lods mov out lock sub and cmp xchg (bad) (bad) rex.RB fsubrs cwtl repz adc jle mov enterq int3 pushfq loope cmp mov out (bad) xor int3 gs cwtl imul rex.WRB adc lods mov (bad) push stc loope mov bswap add movabs cmp rex.X mov push xor rcll rex.WRXB fwait adc addr32 (bad) stos push fldcw stos rex.WXB gs rex.WRB sub sar xor ja addr32 (bad) (bad) lods xor insb insb callq movabs mov jnp mov fdivrl test xchg cmp sub (bad) fwait cld icebp (bad) movabs ss pop lret (bad) mov lret rex.RXB jno popq nop inc out lret mov and xchg (bad) jrcxz cltd push stc movslq test shrl mov sarl (bad) out rex.WB (bad) mov lret push xchg cmp iret (bad) repz cld (bad) xor mov lock xchg imul (bad) and (bad) out sbb (bad) xchg fisubl (bad) js ss (bad) shrl mov roll test shr or je jnp stc xlat imul jo rorl sub add outsl sbb fimull add (bad) mov lea pushfq rorl (bad) xor enterq test insb cmp xchg add or fbld mov popfq ror mov clc and (bad) rex rex.XB xlat adc (bad) xor out rolb cwtl retq add (bad) movabs rcrl sub mov cmp add loopne rclb out ja clc xchg rex.WXB repnz mov (bad) movabs mov or or callq incl stc mov in insb fadd (bad) out scas cs repnz insl add rcll xor and cmp add xchg adc cwtl movabs (bad) (bad) push or xor fisttp and repnz fsts (bad) mov sbbl cs movabs cmpsl (bad) test (bad) stos (bad) sbb and divb fimul rex.WRB mov xchg cmp rex.WRXB and int fwait mov cmpsb inc xchg jrcxz (bad) sub (bad) push shll adc (bad) cmp (bad) sub sahf rclb adc fwait lahf data16 out fist rorl in lret sub and rex.WXB movslq or rcll push rcll pop pop xor (bad) jbe mov pop (bad) test rol and and xor and push rex.WX (bad) int shrl jg sar rex.X loope (bad) (bad) (bad) and jnp in or adc add (bad) js xchg retq cmc retq sub rex.RB fnstcw sbbl rex.WXB rcl cltd sti mov (bad) scas (bad) xor (bad) or xchg and rex.B jle xchg push xchg dec rex.WX cmp and data16 data16 in (bad) andl adc (bad) pushq test int3 (bad) js cmp xor int3 jno imul ljmp xor shrl pop (bad) pop movabs cwtl (bad) (bad) mov add adc movsl scas shr pushfq cltd retq sar jle mov and push rorl int lret (bad) repnz xchg jrcxz cmpsb lret outsb retq fcoml bnd movsl sub out (bad) stos (bad) lret imul fstps rex.RB int rex (bad) lock or outsl roll loope push retq callq sti enterq ja and leaveq sub out (bad) push rcrl jg rclb movsb jnp (bad) and fist rorl push fwait ror andl adc flds cmc pop jmp xor mov jbe out jno (bad) mov add imul pop jnp jp jns pop out (bad) in (bad) lret adc (bad) movsl rex.RX rorl xor je (bad) sbb or pop addb fsubrl fdivr adc cwtl rcll (bad) (bad) hlt (bad) pushq movabs or rex.RB mov rex.R fiadd mov jb ror (bad) (bad) out mov (bad) ja or rex.WX outsl (bad) int3 insb pop fidivr adc test fistl std int3 adc idivl je (bad) repz (bad) sbbl shll sbb rcrl mov cmp negb repnz movsb (bad) cmpsb pop test pop add or adc out jnp rorl or pop jle loopne mov (bad) add scas roll rex.RX xchg vandps int3 out (bad) (bad) lahf cmp mov push (bad) cltd (bad) icebp (bad) insb adc push xor sahf imul insl sbb (bad) repnz jns (bad) jmpq xchg (bad) in fbstp jbe pop sar nop (bad) adc (bad) (bad) mov out fwait gs sub leaveq cwtl rex.XB sub not rex.XB sti add jrcxz (bad) rex (bad) sub push xchg retq (bad) cmp (bad) push xchg push pop and clc addl xchg or lret sti in loopne rex.XB cmp test lods mov push rex and sarl mov (bad) sub mov and and fisttpl rex.WB rex.R loope mov cwtl mov shll retq out push cmp sti pop mov imul jrcxz (bad) and mov xchg fdivl leaveq (bad) cmp (bad) xchg cmpl push fwait sbb repz xchg push and mov adc jl mov mov (bad) fcom rex.RX jbe out (bad) rol xor sbb scas movslq adc out (bad) (bad) xor ffreep rex.RXB fildl xor xchg fidivl rex repnz fwait clc outsb push insl sub fwait lret faddp rex.WRX callq and fsubrl sub rex sub cld push pop and (bad) jns in rex.WR mov imul movslq mov jnp int3 fisttpll and jmp out xlat rex.RB adcl fcoml (bad) fldcw xchg (bad) lods jp add movabs lock (bad) (bad) cmpsb xchg push rex.B (bad) ss xor rex.RXB test callq (bad) popfq mov sub xchg or pop jmpq outsl mov push sbb xor cmc push loop mov pushfq repz adc (bad) sbb (bad) adc lock jne xchg jrcxz (bad) add test rex.WXB lods rex.RX mov orl addr32 mov mov (bad) lret loope (bad) (bad) sub je movsl lea (bad) popq sub (bad) xor push loope push rex.R sub scas rolb lret lea xchg rex.XB fild (bad) retq (bad) int retq rex.WR and test (bad) fsts and xchg push (bad) pop rex.RXB retq lret in stos rex.WR rex.WR movslq jnp sbb rex.R sub retq (bad) xchg (bad) gs out fwait sbb lret (bad) mov adc and or jo rex.WRX pop xchg mov js mov or jno cmp lahf jo retq or sub fneni(8087 pop ss jl rex.RX cltd sarl rex.R xchg (bad) xor movabs callq data16 incb mov out (bad) repz lfs sbb rex.X mov (bad) sub rex.WRXB imulb in loopne cs cmpsl rex.WRB pop rex.RB lock adcl movabs xchg scas fadd jne std es lret movabs mov adc adc rorl (bad) (bad) sbb stc (bad) repnz add sub (bad) xor shl fist sbb rcl callq movslq sti xchg addr32 orl pop shrl pushfq push rcr mov addr32 hlt mov test jb insl roll or adc adc or sub xchg rcll (bad) xchg lret jge cmp xor cltd leaveq rex.RB mov (bad) insb roll idivb jo loop adc (bad) loop rex.B and pop cmp xchg adc or out stos enterq popfq in mov sbb jns callq rcrl sub je sbb mov sarl fwait pushfq rex.W push mov and mov movabs mov mov stc mov mov fisubr or lods xchg outsb data16 adc rex.WB stc movslq movabs rex.RX rex rorb (bad) rex.WR push ror xor pop roll out mov nop sahf or sbb movabs movslq adc mov pop lret pop xor nop jmpq (bad) addb push pop cmc (bad) adc cld adc lods (bad) movsb fwait adc cmp cmp lahf mul rcrl sub or push cmp jne cmp test mov lret (bad) int3 movabs rorl (bad) xor test int3 cmp (bad) adc adc insb pop lret adc fldt cld xchg or sbb xchg js in add push lock add mov ror (bad) imul movabs jnp mov (bad) imul rex.WRXB (bad) insb pop lahf lret (bad) cmc cltd data16 pop retq test push jrcxz subl (bad) sub rcrl push and adc pop movslq rex.WR rcll pushfq xchg movabs rorl int3 xor (bad) cltd retq mov add sbb sub sti (bad) and rol jb pop rcr pop data16 xor jo sahf repz ds push scas (bad) (bad) (bad) (bad) movslq hlt cmpb (bad) neg rorl (bad) lahf imul fstl mov xor (bad) imul or rex.WRX sti hlt (bad) rorl (bad) leaveq sbb xchg xchg int adc add shrl cmc jns clc xchg shl (bad) rex.RXB xor or (bad) jns sbbl in add adc cmpsb or and xchg movabs fs and ss jno sbb rex xchg cmpsb or cld jle adc (bad) rex.WRX (bad) scas rcll adc jo std (bad) mov loopne jnp fcmovnb (bad) jns lods pop or mov add adcl outsb sbb jae xchg retq roll xlat push sar add jb (bad) fstl xor leaveq rex.XB (bad) clc vmovdqu rex.B adc js vpunpckhdq shr mov outsl rex.WB rex.WRX xchg rcl mov sbb (bad) enterq callq (bad) (bad) (bad) cli sbb mov sub and iret (bad) cs (bad) add adc sbb (bad) rex.WRXB divl lret fsubrl (bad) pop mov lret std test adc push fldl cmp rex.WR (bad) rex.WRB movabs jmpq loop andl add sbb imul cmp retq insl add rex.RB cmp push fneni(8087 sbb retq sbb or xorb test repz sbb rex.WRXB rex.RXB insl mov adc rcr sub and jmpq fiaddl add jne cmpsl pop (bad) callq jle pop jae add iret movsl rex.B (bad) cmpsl out rex.WB lock testb lret sbb loope mov loop movabs iret ja (bad) (bad) fcmovb cmpsb mov (bad) int jmpq jl test sarl rex.X mov jg movabs roll mov rex.WX jmpq fild cmc lcall pop mov mov ja test in and in (bad) jno sbb jg rex.B adc (bad) xchg (bad) or outsl add mov add int3 out (bad) ja sub lret add icebp cmpsb push std rex.X xor mov (bad) roll iret pop sarl test nop retq mov or in fildl sub rex.RX int3 jge int sub sarl push add mov insl jge pop movabs flds sbb add vpsubusb (bad) jp (bad) rex.B (bad) stc fstp xorb (bad) and rex.WRB cld rex.R jp je sbb movsb pushq in cmc repz sbb mov xor sub movsl xchg rex.RB loope (bad) cld mov rex.R js sub push jb (bad) mov cmpsb mov rcll xchg fs push xor sbb sbb (bad) jne pop add callq mov retq (bad) rolw out roll lret (bad) xadd sbb mov push mov mov fmuls add or or mov jbe outsl ss lret or fldenv mov (bad) push cli push scas (bad) repnz mov cwtd rcl pushq sbb rex.B cli rcll (bad) (bad) or cmpsb fld jnp je,pn (bad) (bad) jo adc mov (bad) (bad) mov mov mov (bad) lods fildll xchg add adcb or pushfq movabs mov mov rorl lahf xchg (bad) rex.WRB lret (bad) jno xor push mov shrl jne shrl cld je scas out test push rex.WRB lret popfq stc mov xchg fsubs rex.XB rex.WRB ss sub movabs rex.B imul rex.WRXB (bad) push loop and enterq fsubr test jno mov xchg int3 mov movabs nop in ljmp or or movabs popfq cs xor and (bad) push stos (bad) xor pop jmp repz scas push in (bad) pop jp fdivrl shl retq pop rex.RX je out icebp xchg add fbstp lret (bad) pop movslq outsl xor out shll (bad) imul int add std mov sbb jae cld retq pop jge (bad) (bad) jnp push mov nop push adc lods roll pop rex.WRXB and xor push leaveq (bad) sbb (bad) jg push (bad) jbe push adc or cmp sub push xchg fwait (bad) fcmovu mov xchg jbe mov mov add jmp pop rcll mov sti jle xor rex.X or and (bad) mov lahf cmp imul roll and pushq jmp negl sub (bad) incb (bad) je pop sar xchg popfq mov scas cwtl rex sub or mov rex.WRXB rex pop outsb (bad) add adc xchg rex.R fwait cmpsl (bad) out add ss movslq (bad) xlat jo orl negl (bad) sar pushq movsl mov (bad) (bad) lahf scas add jns add ss sarl stos mov mov jmp stos in mov iret imul movabs scas (bad) mov add sub in sbb or (bad) (bad) xor in (bad) sti rcl adc pop rex.W jle fld in (bad) movabs prefetch (bad) ss or and out rcr in xor es (bad) icebp stc hlt in movabs sbb mov in test xor rcl ja cmp ds test push push in mov loop sbb (bad) xchg imul add icebp push jp jno,pn and cmpsl (bad) lret or out pushq fisubl pop or outsl cmp stc (bad) outsb (bad) sub rex.X xchg insb jne test (bad) sti loop or movsb jmpq rex.R ds xchg movabs xchg push add cs (bad) retq callq xor rex.RX rex.RXB shrl xorb sbb jrcxz test roll and sub shll mov rcll test (bad) jae or scas mov out int3 icebp movabs pcmpgtb pushq mov out jmp setg adc (bad) xor push xor (bad) mov out iret jmp outsl rex.WX cmpsb (bad) scas es out loopne je xor (bad) jge sbb (bad) lahf mov rcll outsb rex.WRXB es cmp (bad) rex.R rex.W (bad) cmp jbe leaveq sar nop mov ja rex.RXB repz sub rex.RB rcrl (bad) pushq shlb (bad) sbb (bad) repnz pop lods scas mov iret popfq out (bad) adc repnz rclb sub hlt rol pushq insb rex.RXB mov mov and push fwait addr32 cltd rex.B (bad) in sub cmp movabs (bad) (bad) cs rex.B xchg (bad) (bad) retq (bad) repnz mov (bad) cltd retq sub pop rex.WRX (bad) movabs xchg out imul pushfq (bad) jl popfq lods fwait mov xor (bad) pop callq or xchg pop data16 rex.WR mov and or fisubr (bad) scas rex.W and or (bad) movslq stos and retq xor cmp fnsave (bad) hlt pushq sarl (bad) loopne and loope adc (bad) pushq push rex.X rex.B rex.WR js,pn out cmpsl ss sub test movabs fild neg test shrl and rex mov and stc (bad) add imul sbb (bad) (bad) mov nop rex.WR movsb add outsl cld jbe out fiaddl lea (bad) roll and cmp out (bad) rex.R push (bad) out sub mov pushq repnz push and rex.RX fisub scas rex.RX cltd add scas rex.WR sub jrcxz icebp clc (bad) mov add fmuls out cmpl rex.XB shrl cs push adcl mov sub xor jnp notl retq add jle fdivp (bad) mov add pop mov xchg int push (bad) ss adc (bad) rex.WRXB in repnz cs rex.R jrcxz test jb rex.RXB sub cli add lret movsb xor jae lods lock rorl rex.XB repnz jbe cmp loopne fisttpl cmp or xor movabs repz repnz data16 roll rex rex.WRX shrl rex.RB cmp mov jno notl rex.WRB pop mov rcrl stc cltd shrl out mov (bad) out rorl sub pop cmp test and or sbb mov sub mov sub (bad) jb cli (bad) push (bad) cmpsl pop out mov cwtl movabs xchg shll callq pop push jnp sbb outsb mov jbe pop (bad) mov pop ja shl movabs rex.B (bad) test or adc es sub xor hlt (bad) shll sbb (bad) xor mov mov stos cmc or sar mov adc xadd loope in rcrl xor out (bad) mov (bad) rex.WB shll mov (bad) xchg scas repnz mov pop sbb mov rex.X add mov cmpl jge sbb cs xchg add adc add sub sub push mov rcrl sti rex.R mov sbb rex neg cmpsb movabs mov (bad) add divb shll cmp movslq adc fcmovnbe fimull rcl jno (bad) frstor jge lea or rcl cld es rex.R addr32 (bad) ja (bad) fdivs popq int3 mov (bad) (bad) imul or leaveq push push (bad) mov std nop (bad) mov stos mov rex.WB roll xor roll fildll (bad) loopne lret roll xchg es pop in int lret (bad) outsl jno jg mov out (bad) rex.WB rex.B and mov and (bad) or mov shll roll leaveq xchg push mov iret lods xchg (bad) js jl adc shll sbb (bad) ds rex.WR movabs lock adc shll in add xchg (bad) std data16 rex.B rex.B (bad) jrcxz rcrl pushq rcll pushq stos loope rorq or insb movabs sub out rcrl mov es or sbb (bad) xchg imul mov cld cmp (bad) sbb (bad) xor (bad) adc rcrb divl adc movabs rex.WRXB push cmp xchg or cmp test shrl xor shrb xchg insb push test vmulpd or adc scas (bad) mov push adc sar (bad) (bad) or mov (bad) add (bad) rex.WX scas cmp pop rex.WRX out jae cmp je push push xor test hlt lods repnz scas pop retq xchg lods lret (bad) movabs je (bad) (bad) (bad) pushq ds lock clc fs movsb repnz movabs fmull and negl adc movabs retq hlt mov mov icebp add adc int sbb mov movslq rex.R insl rex.WRXB div sbb scas shl add hlt mov cmc lret movslq and push mov sub (bad) cld stc and cmpl pushq repz test test icebp nop (bad) ds (bad) xlat imul mov or or rex.RB xchg cmp pop addr32 and (bad) (bad) cmp cs add mov retq loope repnz scas pop xor jnp jp pushfq pop fcmovnb iret rex.WR rex fwait retq (bad) add movslq cli (bad) movslq shl sarb adc jmp adc icebp (bad) rex.RXB imul (bad) xchg rex.XB ss repnz pop pushq rcl mov faddp sub cltd sahf lret pushq lahf xchg mov divb adc shll jne (bad) icebp retq sbb mov (bad) pop lret add (bad) jp decb outsl in fstps (bad) scas idivl rex.WRB shlb cmpsl (bad) stos or (bad) pop pushq xor cmpsb mov jrcxz lret cltd sarl xor rex.WRB jno mov iret add (bad) (bad) xor lret gs movabs lret rex.XB andl loopne iret cli rex.B retq fidiv jne xor add out cmp outsl (bad) (bad) mov nop movabs sub test (bad) xlat rol (bad) push sbb stos cwtl callq movl pop nop leaveq (bad) shrl lock (bad) gs and outsl cwtl sarl nop outsb cli test mov sahf and and movslq mov (bad) jnp sub rex.R mov rcl rex.W add int in (bad) jle clc (bad) (bad) (bad) mov lods adc jne mov (bad) lahf or cwtl jge in rex.WR repnz rex.WB movabs mov or decb rex.B fs cmpsl (bad) rex je fisub fnstcw jmpq cmp hlt rcrl lea jnp push rex.WR movabs adc popfq sub rol xchg int3 (bad) movsl (bad) (bad) pop roll and xchg sbb add (bad) rex.WR pop int3 cli sub cwtl hlt in cmp mov sahf push int3 push outsl rex.R movabs add cmp jnp pop xchg mov cmpsl add rex.B jp jns movabs shll ja decl movabs jne mov sub sbb lods sti push add fcmovnbe (bad) movabs add movabs scas rorl mov int sub shll xchg movsl rorl and test loop (bad) mov xlat sbb lock mov and lret mov pop test and (bad) roll std in fwait movsl test (bad) imul (bad) mov fistl movabs (bad) sub cmpsl rcr nop jb fisttp (bad) lods jl (bad) (bad) cmp xchg sub mov lea or es inc push int push pop out (bad) sub lret xor callq int js enterq cwtl and rex callq lods sub mov mov (bad) test pushfq xchg in add lret clc out jno sub push (bad) xor cmp cltd xor (bad) xchg adc fnstcw xor je push add xchg stos iret mov pop dec out mul xchg cmovno jnp or and lret add lahf test scas rex.WRB rorl sub shll imul (bad) out mov jmp pop lods (bad) icebp sbb (bad) sti (bad) lock jrcxz jno cmp inc sub fsubrl jge (bad) loope lret js adc add (bad) (bad) imul ds adc test insl (bad) outsl rex.WRX push sbb fneni(8087 jno cli sub (bad) mov (bad) jb popfq and (bad) cmp in mov (bad) xor rex.B mov rex.WRB xchg (bad) out and shrl jg mov rex.W lock rorl and retq scas rex.WR and ja (bad) imul cmpsl cltd sbb loopne callq std (bad) (bad) mov rex.WRX xadd pop mov (bad) adc (bad) icebp rcrl pushfq out (bad) callq rex (bad) rex.WRXB cld (bad) cmc add loopne rorl lret (bad) hlt mov shll (bad) loop sbb sahf pop cs mov shll xchg imul mov adc movabs push xchg cld data16 movsb or and pushq jrcxz (bad) neg rcrl adc (bad) sarb in (bad) stc jmpq cli rorl (bad) (bad) rcrl xchg xor sbb xchg add xor sbb fsubrp jmpq in (bad) rex.R js popfq rcl xchg (bad) pushfq shll rex.WX jg lret and (bad) adc test cmp and imul sbb and adc (bad) je sysexit pop mov movsl add (bad) cmp lret movabs xchg (bad) add (bad) sarl clc rex.WRB bnd lods faddp jns shll and fcomps mov shll rex.WB xchg or rex.B xor push (bad) enterq xor callq shll imul lea pushq test jmpq cmpsl idivb rol (bad) jl xchg jb sub xchg xlat sarl (bad) rex.XB or (bad) (bad) rorb mov decl or popfq rorl pop cmc icebp jle cmpsl jbe mov mov imul or ss xchg mov (bad) out pop iret roll xor sub lock ds rcr shlb (bad) cmp (bad) (bad) lods pushq cmp add (bad) cmpsl sahf sbb (bad) jnp mov xchg or cmp notl icebp (bad) and (bad) enterq jp adc add movabs scas es xor and jle int (bad) sub test (bad) (bad) int3 mov mov cmp shll lahf jnp cwtl rorl test add cmp nop xor mov adc pop rex.WXB and fisub or fdivrl pop and push (bad) icebp es xchg sub lret enterq and (bad) mov out mov xor mov clc jo and pop test (bad) movslq pop fstp cmp movabs (bad) test or test xchg rcrl xlat shrl mov in jmp rol push movsl xchg adcl cld sahf (bad) xor sub or shll xchg cmpsb out loope jmp jnp rex.WR mov sub jmpq pushfq lods xor fucomi sarl incb rex.X jmp push (bad) rex.XB (bad) sub sub push fwait pop testb rex.B (bad) and sbb cltd repnz mov jle stos (bad) cmpsb add loopne out add and int3 roll pop test lret movabs cs mov sbb cmp out xor in sarl (bad) cmp sub rex.X orl mov push out lock cmp jo fwait shrl xor movsb mov mov pushq mov gs (bad) push push loope int xchg movabs (bad) jb,pn xchg mov rex.R jne adc rex.B pop rex.WR rcl in sbb push js lods fiaddl or repnz mov in int3 cmp sarw push xlat rcll (bad) mov sbbl and adc (bad) mov xchg mov movabs and shl (bad) push rex.RB lahf jle cmp retq movabs sub (bad) jns std out out (bad) pop test jnp jl add (bad) clc xchg sub rex.B adc (bad) rex.WB rex.XB loope push rorl in int jl out lret xchg xchg and (bad) or loopne popfq fsubs callq fnsave repnz scas in cmpsb add (bad) shrl (bad) (bad) jrcxz iret (bad) lahf jae push xor (bad) clc iret rex.R loope fs rex.RB movabs push (bad) rex.WRXB mov and and jbe (bad) (bad) add xor xchg (bad) sbb (bad) cmpsl addr32 rex.WXB repz rex.WB sub xchg lods xor loope mov pushq and (bad) enterq (bad) cmp and (bad) push outsb lret hlt out test shrl rex.RB jno mov push movabs mov jmpq sbbb or sbb loope out pop cmpsl repnz xor movslq cmpb loope shrl mov or (bad) rex.WRB mov (bad) outsl popfq sub callq rex.WRX pop jge in sub rex.WRB sub jrcxz and jns sarl pop (bad) or loope jbe nop pop mov xchg pop and (bad) (bad) mov sbb lods (bad) rex.WB jmpq push stos rcrl scas (bad) (bad) cmp cmp imul sbb cmp mov (bad) add pop mov shrl testl or subl retq rcll iret pushfq mov jg scas mov jnp loope mov imul jle mov sarl je rex.B movabs (bad) lret cs xchg push push cmp repnz rex.WXB jg shrl ja iret rex mov rex.WX mov xor cltd (bad) cmpsl lods test adc (bad) rex.WB addr32 scas rcrl enterq (bad) mov insl fdivl enterq jg and stos mov outsl jb imulb mov or retq rex.WRX sub add xlat rex.R addl cld fnstenv pushfq (bad) jmp lret out lea mov xchg adc sbb flds insb xchg add (bad) cmc or rex.WXB movsb lahf movabs xor fisttp (bad) loop mov sub and rex.W (bad) cmpsl fsubs xchg mov or jmpq imul icebp roll mov jbe xchg mov mov mov and bnd xchg movabs xchg iret bnd mov idivb rex.RB lods repz sub shlb movsl jb sub rex.WRXB mov loopne repz sbb sbb cmpsl add push loopne adc sti pop adc lock and mov pop repnz pushw mov mov pop test loope js jb divl popfq lods scas adc loopne idivl adc shrl (bad) mov rex.WRX gs lahf int out sbb cmp mov jo and repnz mov adc fisubrl and jmpq cli movabs (bad) cld test lea (bad) cmc push xor sbb (bad) insl pop fwait enterq sub jg pop mov fstl sub stos subl (bad) ffree jle repnz ja scas in mov mov fmul or mov adc xchg pushfq push mov or out loopne sbb clc lods push retq lret mov loopne lods or (bad) ss icebp adc add mov (bad) pushq fstpl int and (bad) movabs cwtl push sub (bad) mov push (bad) (bad) push insl test rex.R repnz (bad) movabs adc mov mov stos sbb jb push sbb (bad) test ficom clc xor movabs jmpq rex gs sbb repnz xor (bad) jns push (bad) cltd xor lahf rex.RXB mov jle stos mov adc loope pop jmpq sbb iret icebp sti add cs xchg xorl rex.WB (bad) rex.RB (bad) mov (bad) xlat retq pop insl (bad) jmp xchg xor js mov (bad) xchg pushfq addr32 cmp (bad) mov mov in retq adc sub push cwtl int3 xor cmpsb imul or movb imulb xchg sarl fmull jo jge or test repz sbb sbb xor outsl jmpq cltd divl lret es jne mov fiaddl shlb movabs xchg rorb movabs jo movsl pushq jrcxz (bad) and and add mov int3 callq (bad) repz mov lahf lret je retq callq push (bad) mov in mov lea lahf clc callq pushq popfq sti ficoml (bad) jns xor jno and out mov adc jmpq pushfq mov (bad) cmp cmpsb pushq (bad) push loopne fsubs jno outsb mov jo and idivl test (bad) add cltd idivl fist rorb and out (bad) rcll es (bad) insl cmp cmpl rex.W cld sub (bad) rex.WXB (bad) mov rex.WR movabs out out push lret ror pop push xor rorl mov fs rex.XB rex.WRX scas lahf push add rex.WRXB rex.W fcomp flds insb movabs (bad) (bad) in (bad) nop rex.WXB xchg mov fiaddl stos test and ds (bad) notl gs fsubs jno xchg retq test rex.WB cld sub leaveq sub outsb mov (bad) (bad) out retq scas sub xor (bad) cmp (bad) ja or pop xchg mov cltd lret jp (bad) mov pushq push shr (bad) rex.WX hlt (bad) int3 movabs movsl xchg movslq rex.RX sarb popfq adc lock mov cmp in rex.RXB rex.WRB lock pop (bad) xchg (bad) cmp loopne movsb xchg xchg xor cltd sub mov rex.WX jne mov int add add mov (bad) ja rex.WR ficoml test push retq insl push jrcxz stos fnstenv movslq or clc xchg jb shll (bad) cwtl roll je jno ds (bad) push rex and pop cmpsl (bad) mov (bad) in (bad) movslq cltd cmp shll loope movsl ss xor scas add and rcl xlat lret iret fnstcw (bad) and cmpsl sbb sti push mov fisttpl sarl addr32 mov cs add (bad) repz lret mov mov lods adc rcrl xor fildl mov sbb or and mov mov loopne es fsubs adc mov jp (bad) stos jbe shrl adc (bad) (bad) (bad) or fisubl pop lea out adc shrl xchg rex.B (bad) fwait loop rex.XB or cltd rex.B jne xor cmp sub xchg rex.WX (bad) stos or or repz movabs jne (bad) in notb add sub mov (bad) enterq pop mov pop in lods (bad) (bad) (bad) (bad) mov mov xchg movabs rex.RB fstpt mov repz fiadd pop push int3 out cmp stc callq rex.WR enterq test (bad) (bad) add (bad) push add jrcxz (bad) mov repnz rolb and cmc push mov or enterq mov test (bad) (bad) rolb jno adc and orb int3 or pop jl sbb mov out (bad) (bad) xor jno int and jne (bad) adc cmp and xor lret sub fadd add outsl xor retq jl stc data16 (bad) pushq cmp sbb dec (bad) xor sub sub je sar mov fdivs pop gs (bad) mov (bad) (bad) add sbb pop rex.R rex.WR int leaveq faddp repnz imul rcll xchg outsb jrcxz xor jae iret rex (bad) fwait jl rex.RX lret add xor or addr32 sar (bad) rcrb push iret pop pop mov sbb rcr mov jae push lods icebp add push (bad) and pop enterq lret jmpq in rex.RX in (bad) shrl mov hlt sahf sub cltd fsubs lret movslq xchg jae notb insl (bad) xchg in (bad) lret lret and cmpsl adc and cld callq popfq mov mov fisubrl rex.WR push (bad) movsl add pop movabs or mov (bad) jb mov rol push cmp xor stos jae adc (bad) (bad) pop sti mov (bad) xchg (bad) scas mov lods shrb (bad) subl rex.WRX loop add movabs ds rcll stos int3 scas addl sbb and xchg or sarl rex outsb retq mov test in and sub mov mov xchg add cmp sub (bad) out sbb rex.X lods or rcrl (bad) xor out insb sub rex.RXB je retq and pop pop in rex.W (bad) cmp ja movabs rex fwait mov xchg or lock rex.WRXB rex.R sub fstpl icebp notb rex.B lock jg mov fst or data16 sub movslq pop sbbl (bad) enterq or jo in xor (bad) (bad) lea jno sub rol outsb pushq xchg (bad) cmpsb jbe int fadd cmp mov xchg rex.RXB fmull mov hlt push repnz mov rorb cmp sbb (bad) rex.WRX xor mov xchg loopne movabs rex.WRX xor js retq or cmp (bad) js callq lods or mov sbb pushq (bad) (bad) fstps jmp movabs jns retq push fsubrp (bad) lods (bad) out push mov std cmp (bad) sarl mov adc push rex.WR (bad) sbb retq lret (bad) gs loopne (bad) (bad) jrcxz sub movabs jp xchg loopne (bad) pop (bad) cmc nop mov push and out mov sar movsb imul and sarl rex.R jns jle (bad) mov lret rex.RXB or (bad) (bad) xchg mov (bad) (bad) pop (bad) mov (bad) (bad) xor stos pushq and mov rcr cmp pop sbb jno out sub sub sarl movabs cli jnp (bad) xor jge push fwait sahf mov scas roll lods adc rorl jae je retq ss adc (bad) (bad) cwtl rex.RX divl rex.R test mov xchg popfq pop and sbb (bad) out rex.R fisttp mov jno rex.B xchg jne (bad) xchg fnstsw (bad) fadd cwtl mov and jg std sarl mov push ffreep (bad) ja test add jle fs rex.B mov or mov lret rcrl cmp stc mov mov xchg sub pushq lret jno movabs rex.WRXB (bad) pushfq mov stc and cmp mov negb push (bad) scas jle xchg mov (bad) fildll imul sarl jge add adc jae mov clc repz (bad) fstpl in sbb leaveq rex cmp sarl test iret (bad) std shlb mov shr add xchg mov iret mov (bad) test hlt rex.WRX xor and xchg jrcxz movsl (bad) mov xor cld lahf es sbb callq fs sbb test sub rex.RX cltd lock mov cs test imul sarl loope fwait add roll add cwtl cmp iret jmp and cmp cld add add rex.WRXB rex.RXB (bad) imul push mov (bad) ss (bad) movabs test sarl add jae je es rex.WB push rex.WXB xchg adc movsbl lock cmp and xor rorl jbe xor (bad) jae ds or xor pop popq xchg bnd xor mov sub sar (bad) cwtl stc (bad) sbb shll rex.RB repnz sbb add outsb (bad) push mov jnp retq sbb add test rex.RB addr32 (bad) (bad) jle rex.WR rex.WX rex.RXB push pop (bad) roll jp (bad) push orl and (bad) rex.WR (bad) rcrl or roll pop xor (bad) and rex.WRB sbbl mov sub lret rcrl (bad) cmp in repnz cmpl sbb rex.WX add push (bad) and (bad) roll mov cld (bad) jge and mov mull (bad) xchg cmp out rcrl (bad) push scas (bad) add mov or scas fsubs clc mull jmpq jle test cli fsubs rex.WXB xlat xor (bad) push (bad) (bad) pushfq enterq int3 (bad) mov lea and movsl (bad) jae rex.WXB xchg push or (bad) mov movslq lahf adc loope decb pop xchg out jp fimul jrcxz xchg popfq sbb roll mov in pop repnz mov rex.WRX int3 sbbl int xor popfq repnz jne faddl add fsubr xlat stos out in xchg push add int3 (bad) (bad) xor xor jg (bad) out sub (bad) leaveq sub jg movabs adc jl rex.WB and add js js xor or rex.RXB push mov xchg xor jle sub and hlt (bad) sub sub xor (bad) rex iret imul rcr callq clc (bad) (bad) rex.X sub cs xchg push mov lret mov and rex.WRB adc imul cmpsl rex.WRX rex sbbl rex.B fwait push mov shrl add push mov repnz cmp lret sbb out sub add rorl (bad) movabs (bad) movabs add sbb test mov sarl sbb repnz push loopne (bad) (bad) pop lret (bad) rex.WRXB stos rex.WRX rex.X lret pop rex.WR (bad) (bad) (bad) sbb callq xchg jae add pop cld ffreep mov xor or (bad) xchg (bad) xorl sub shrl xchg in push negb (bad) cmc enterq pushfq rorl imul ss and (bad) in (bad) pop mov es xorl test add or lods fisttpll js (bad) repnz in iret and shlb add add shl (bad) push sbb leaveq sbb (bad) out adc cwtl rorl cmp sub sarl push and xor lock xadd insb pop and roll mov (bad) cltd adc cmp fwait in in rcll or (bad) nop shll sub loop mov stc cmpsl lock clc ror data16 ja (bad) mov cltd jp jnp in mov int3 pop or add jo cld js es adc movabs cmpsb out sbb and sbb lods (bad) je sarl stos xor cmp sti (bad) sahf in mov xor sbb mov (bad) jo cld xlat push xor xchg movabs test mov lret push xchg adc rex.WR (bad) (bad) (bad) xchg imul loope sahf inc loop mov mov rcll (bad) mov mov je (bad) xor sahf rcl (bad) mov rex shl sbb jbe cmc cwtl (bad) mov adc ss (bad) sar push sbb test cs js lret (bad) (bad) cmp rex.WRB sub retq int mov mov (bad) sub (bad) (bad) (bad) (bad) push loop rex.RX nop sarl iret je (bad) std cltd adc fbstp stos lret add loopne roll iret (bad) (bad) sub lret repnz loopne pushq cmp sarl (bad) sbb subl test xchg fidivr mov mov jno sub or xchg movabs cld (bad) (bad) mov mov loopne roll out cmc pushfq hlt or popfq (bad) fwait lret jo lea mov movabs jmpq callq mov nop xor retq icebp repz enterq add rex.WX cmp (bad) mov (bad) (bad) mov add or int fcomip add (bad) jg loop pop mov lahf fisttp jrcxz,pt addl test rcrl mov jp repz (bad) rex.RX fdivl (bad) lret pushfq (bad) lods sbb sbb xchg scas and xor (bad) mov adc and jno xchg rcl (bad) rex.RX fs pushfq (bad) adc jne pop fcmovbe cmpsl in cli rex.WRXB sti xor xchg cmpsl vunpckhpd jl fucomip cmp xchg (bad) adc ja in imul repz rcll or loop (bad) (bad) jno rorl insb ja add jmpq (bad) sti (bad) add (bad) and rcrl rcrl insb jp jge int3 jrcxz cmpsb (bad) fild rex.RXB mov (bad) mov (bad) add mov rex.WXB es lods clc cwtl pop and jmp movslq lahf movabs in retq pop out xchg sbb shrl sbb jmp xor lret jmpq rex.XB (bad) shll clc mov shl test rorl (bad) (bad) notb sub pop (bad) stos mov lock movsl (bad) int3 rex.WX push in xor scas pop rorl int3 push clc cs jns push shr sbb lret pop or (bad) push lahf and (bad) std rex.B (bad) and fsubs movabs sbb xor jb ja (bad) pop (bad) xchg rcl jne,pt movlps cmp pop pushq (bad) (bad) rex.W gs cmp (bad) (bad) fs pushfq (bad) mov je (bad) retq sbb push mov retq cs enterq (bad) jae sbb sbbl (bad) (bad) fmul movabs add cwtl movsb in cld divl pop nop test test push pmaddwd (bad) retq push test mov mov stos (bad) mov xor subl cmp push movabs int fnstsw data16 cs rex.WB test or rex.WRB pop mov mov lods jg (bad) xchg cmp mov stc jrcxz add frstor cmpsl mov bnd cmp in out sub fs pop mov ds repnz rex.RXB push jmpq cmp fidiv (bad) repz sbb sub fstps or fadd in movabs xchg fsubp mov push jp xchg or xchg mov orl sbb mov (bad) (bad) (bad) lret sbb mov fcmovnb adc add rex imul fsts (bad) jrcxz mov jo adc (bad) enterq movsb loop jne mov stos fs sbb mov rex.WR and mov (bad) xchg (bad) sub rex.WRX scas (bad) imul adc (bad) rex.WB cltd (bad) jne mov bnd and icebp movabs add lret add fcoml mov fyl2xp1 mov rex.W mov (bad) subl jbe sub in (bad) add cmp fbstp mov mov xchg ds movslq xchg xchg rclb rex.WR adc fld jno add jne sahf rex.RX cs roll and mov jo retq bnd or rex.XB adc or sbb mov test js sbb (bad) xor or clc jmp lahf fs jl fisttp adc imul (bad) fxch or stc (bad) mov xlat (bad) (bad) rex.XB mov rclb stos pop stos addr32 (bad) or outsb (bad) xor cmp (bad) int vmovsldup mov and push jmpq jg int3 (bad) xor sub xlat (bad) cmp and mov mov adc mov xor orl outsb or shrl adc outsl ficom (bad) cmc xor rex.WRXB test fcmovnu xor mov sbb and (bad) fwait or stc mov mov in (bad) jne retq sahf mov test (bad) je (bad) xor movabs out rorl shrl jae nop lock es rex.WRXB push sub movabs jnp movabs or rex.WXB retq data16 movabs movabs xor (bad) sbb loope leaveq in sar ds mov (bad) popq clc rex.X (bad) mov addr32 mov (bad) retq (bad) pushfq (bad) mov xor mov loope sub lret cs cli (bad) jae lret ds int3 xor jo loop test pop pop stc cmp and ds rcrl rex.WX movsb jle mov cmpsl (bad) jne cmp add fistpll add rex.WXB xor add mov addb cmp fwait lret jno mov in cmp insl movabs sbb or imul shll popfq jno fwait jg mov cli shlb sbb xchg jb loop retq xor sbb mov pop out lods sbb rol (bad) mov (bad) cmp and hlt orb rex.RXB (bad) rex.XB push (bad) xchg data16 pushq cltd (bad) cmp sbb (bad) adc sub (bad) movabs add jns and fsubrl divb xchg in (bad) sahf jns outsl ja lock (bad) testb rex.WRXB (bad) push stc retq xchg (bad) mov iret add jmpq xchg and rdmsr (bad) rex.WRX xchg or outsb xchg (bad) test pushfq pop loopne or mov jno (bad) and mov pop icebp flds push ffreep repz xchg cld nop insl int jnp hlt cmp rol (bad) jbe (bad) xor sub push (bad) cmc jno rex.WRX mov (bad) mov jnp jb leaveq and loopne (bad) popfq (bad) jbe,pn (bad) mov jns xchg (bad) (bad) push rex.XB mov xchg mov sbb stos sbb jb add sbb (bad) cmpsl sbb (bad) movsl movsb rex.WXB (bad) sbb add sarq jne enterq outsl jns (bad) data16 rorl mov jge pushfq mov movabs (bad) fldenv (bad) retq sub je sub (bad) sub shrl lods rex.WRB test ss cmp out cmpsb or nop test in out (bad) gs (bad) adc push or fwait pop fld sub cmp shr subl sahf js shll sub and repnz fbstp and (bad) ljmp mov (bad) out push movabs xchg (bad) std xchg jne movabs sub sbb and rex.RB xchg (bad) outsb lock (bad) rcrl cwtl sub enterq push cs (bad) xor ss pop jge movabs sub mov add adc (bad) enterq test iret pop jb std mov out fwait pop xchg cld lret xor leaveq in out jl xchg jns fnstsw mov (bad) insb shr (bad) xor movabs rex.RX xorb (bad) fs (bad) xor push jmpq and adc sub xchg js mov (bad) mov rex.WRXB repnz sbb leaveq fldt (bad) mov rex.WB rex.R movb loop enterq (bad) xor sahf pushfq lahf xlat movabs jmpq div cmp jno (bad) (bad) rcll enterq xadd xor shll (bad) sub add xchg mov rorl add add cltd pop and rex.R and loopne in stos sbb add movslq cmpsl rcll shrq jp loop mov xchg (bad) sti lods shl popfq xchg (bad) out sbb (bad) fwait rolb lods cmpsl (bad) enterq (bad) rex.W add pushq jo mov int3 rex.WRXB xchg jns loop rcrl in pop rcr push rol cmpsb rex.RXB adc push shll stc mov addr32 gs retq (bad) loopne (bad) callq add lock shll rex.WX movabs lret cmc rex.WXB mov push mov sub pop int3 (bad) mov cmp roll fs stos jnp mov mov rcrl outsl adc loop (bad) rex.WRB adc mov stc hlt sub (bad) mov mov roll scas pushq (bad) sbb jo loopne jmpq shrl (bad) out outsb movabs (bad) sbb and (bad) (bad) xlat jmp (bad) test rcll push (bad) repnz stos imul (bad) rex.WRB ror cmp (bad) sahf cltd iret pushq xchg sbb outsb (bad) rcrl add in divb mov rex.WB enterq test rcr xor gs mov enterq addr32 rex.WXB shll insl (bad) adc cmc xor mov test (bad) or stc psadbw and or fmuls (bad) negl adc insb subl xchg cmpsl xchg lfs repz rex.WB repnz outsl lret xor add (bad) push rex.RX jo fistpll mov mov (bad) pop sbb rex.RB rex rex.RXB and mov enterq lret (bad) imul (bad) imulb add sub sarl (bad) fimul (bad) jrcxz mov jnp rex.RXB rex.B test jl rcl xor xor (bad) rex.XB enterq rex.B fwait hlt (bad) xchg sub push out rcl and mov cwtl rex.WR shll mov xchg adc rex.WRXB sub hlt movabs out lods or (bad) pushq sub xchg (bad) jne (bad) jg scas fucom xor sbb in rcl jmp (bad) xchg (bad) (bad) ss cmpsl test (bad) or sub add mov xor (bad) loop mov mov rex.B rex sub cmp orl es imul mov mov xchg (bad) mov popfq sbb jge enterq mov sub int outsb scas xor mov sub xlat mov sbb in test pop lret (bad) jl lea mov add ds leaveq insb jns imul fildl pushq (bad) sarl sbb add insl mov cli mov pushq mov add in sub rex.X sbb jne pop clc rex.XB adc xlat mov stc cmp int sub insl mov lods xchg shrl iret movabs or (bad) cs out int3 pushq leaveq mov notb test in (bad) mov imul push int push insb rex.RB nop xor sti xchg icebp cmp shrl out loopne ja repz jg loop int3 mov lods mov pushq sarl leaveq ja idiv (bad) stos int3 in shlb fldenv add outsb push cmp rex.WR sub shll (bad) lahf addr32 mov mov push movabs adc shr xchg stc or add fistp fstpl jns jp cmpsl fdivr movsl shlb int3 xchg sarl mov addr32 rex.X add test adc push and jnp rex.B rex.R sbb test (bad) movabs add cmp shll jae and sub movabs jns pop outsb xchg cltd stos (bad) rex.B gs rex.RX (bad) movsb movabs stc paddusw (bad) xlat gs mov mov mov stos (bad) int in jnp out (bad) sbb add adcl movslq and or sbb (bad) or xchg ja xchg fisub sbb mov (bad) cli fcomps test sahf cs roll rex.R imul pushfq mov fs mov jmp pushfq fnop mov and imul mov adc lods (bad) (bad) js push add push lea jb mov test add stos cmovp add rex.R fcmovbe (bad) lret or jmpq adc sti sarl (bad) (bad) (bad) xor out (bad) lock retq enterq roll xacquire (bad) fstpt xchg (bad) push test xchg rex.RXB (bad) add jnp mov and iret add adcb mov movabs iret (bad) add fisttpll (bad) in cmp and jmpq push pop enterq test xlat adcl jmpq loop movabs (bad) (bad) int (bad) loop sbb or rorl testl cmpsl iret cltd test mov roll xchg ror rex.RXB sub xor addr32 add xchg (bad) or icebp in (bad) sub mov mov notb pushq outsb cmp mov xchg sub mov xchg push (bad) xchg enterq (bad) pop sarl sbb rex.RXB iret lods xchg addr32 mov or (bad) movabs int3 rorb mov rex (bad) cmpsb (bad) (bad) adc rolb cmp jae rex.WR push out push (bad) cmp xchg sbb cwtl outsl add or insl or movabs mov jl add adc add or roll int3 rex.RB (bad) mov mov fcmovb rex.R or jb adc (bad) mov cmp outsb cmp (bad) mov push roll cwtl (bad) jrcxz fist push callq mov retq mov xchg adc in sbb test movslq ficom jmp or shlb xchg and (bad) fisttpll cmpsl psllw callq fcomi ror loopne (bad) xchg mov adc or rex.WX (bad) pop mov xchg add and (bad) imul fidivl (bad) mov cli rex.W lret retq (bad) loop int3 shrl fs gs sbb in repz rcrl stos mov cmc sbb (bad) test rex.WRB lahf (bad) roll idivb (bad) jae lret (bad) (bad) out iret pop jmpq clc mov rex.RX sbb nop sarl sbb adcl rex.WX or (bad) js (bad) test data16 xchg rcr sbb rex.RX (bad) mov push cmpsl (bad) callq stc mov sub fidivrl xchg rex.XB clc lahf or leaveq in (bad) (bad) cld cmp retq xor add rex xchg roll sahf in xor (bad) xor xchg and stc clc lret fucompp rol jl cmp mov sarb mov sbb and or (bad) imul fucomip adc xchg pop xchg mov movabs mov sbb cmp xchg (bad) shrl mov fnsave mov rex.XB (bad) test (bad) cmp or add cli fidivl sbb retq rex.W (bad) cmp push (bad) jae (bad) sub std cs outsb adcq and add shrl pushq mov (bad) xor (bad) stc sarl cmpsl test rex.WR cmp and sbb nop or and rex.R iret jmp shrl or rcrl rex.WX mov pandn rex.WR mull mov imul lods int fldenv retq in mov movslq fild (bad) cmp pop push sub cltd cmc ja (bad) push xor rol (bad) lods add pop test xchg test xchg movabs rex push iret rex.WRXB xchg cmpsb (bad) leaveq outsb rex.WXB stos fldl ror rex.RXB negb outsl (bad) ss shld sbb adc sar std jno rex.X (bad) mov retq movabs mov and callq add (bad) pop and rex.XB (bad) xor not (bad) movabs pushq fcomps frstor int3 icebp pop rex.R rex.WRB rex.WRX out subb and cli jns (bad) je lods stos movsl cwtl mov (bad) and es lret rolb lahf adc mov roll (bad) mov (bad) jno in sbb lods (bad) jbe xchg jmpq shrl stos add mov mov sub movabs out int3 decl cmp (bad) xchg or mov cli pop xorl fisttpl int stos (bad) pop rorl sub mov xchg cwtl mov xor roll (bad) xchg in pop rex.RX jb cmp adc je mov sbb ja pushfq (bad) mov xchg in lods add rex.XB sbb movabs xchg sub and sub addl ja xlat jbe rex.RB fwait cmc gs int xor rorl mov rex.WXB sbb push or shl sub (bad) cmpsl (bad) mov sahf rex.WX pop push jne jae rex rex.B cmp xorl cmpsb (bad) cmp rcll cs sbbl shrl rex.WXB rcrl movsl rcl (bad) ficom movabs rex.XB push loope (bad) movabs add fsubrs mov roll xor (bad) shll sbb movabs sub rex.WRB fmull cmc test rex.RXB stc mov rex.WX scas (bad) (bad) sti pop mov xchg push and out sub or sarl lock push mov mov or mov add mov sar std pop jl pop mov callq xchg int3 popfq shll xlat and stos loopne cli lret (bad) rorl mov mov (bad) std cs retq enterq imul js ds int repnz in (bad) clc sbbb (bad) mov rex.XB sar adc mov (bad) fildl faddp mov stc or sub (bad) (bad) imull faddl adc in mov xchg rex.RX int3 rex.X rcll cmp mov (bad) (bad) lods push mov in lret fptan and rex.WR rex.B rex.WXB jo sarl or enterq rcll fld loop pop orw enterq rcrq add shlb push rcl (bad) imul adc mov (bad) in sahf adc and sbb (bad) (bad) roll rex.WX movslq int3 insl js mov xor (bad) sbb rcl push add (bad) roll movabs xchg adc sub mov xor mov cld std jle jl sbb (bad) (bad) xor fisubl xchg lods (bad) (bad) stc sar mov imul mov (bad) (bad) (bad) mov pop (bad) sub mov repnz incl xchg mov jmpq rorl push and sub ds xchg (bad) insb sbb mull (bad) mov (bad) jae mov (bad) je or and mov mov push rcl push in or push fcmovb xor (bad) pop in xchg es xor pop adc (bad) push andl adc add mov jne,pn insl lidt iret in (bad) movabs rex.WB jle (bad) (bad) mov loope rex.WR rorl jns mov (bad) pushq fimull xchg rcll xchg push ds (bad) pop or push movabs sahf jne (bad) in xchg movsb fs mov int3 mul rolb cld shll outsb pop rcl in retq jrcxz repnz or lahf icebp loopne xchg pop mov pop add sbb iret and outsb push (bad) loope cwtl lods movb movabs push rcrl out mov or xorl sti ficom (bad) fistpll pop shrl (bad) (bad) jns pop push mov sub retq out shrb sub loopne movabs pop add or pop (bad) and xor fdivs jb test (bad) mov mov rcl rcll (bad) clc mov mov fimull (bad) mov scas fldcw or outsb and mov repnz jg rex.WR cmp add outsb sbb jmpq imul pop (bad) jne repz outsb sub cld hlt and sarl int (bad) and (bad) mov add movslq scas movsl mov movabs pushfq lret cmp (bad) loope std fwait sarb rcll jl xor ja rcrl rex.RB scas sub push in in sub xor adc (bad) enterq mov lods cmp jrcxz adc pushq addr32 (bad) (bad) stc hlt retq jns jg sahf sbb or push movsl mov rex.RXB fwait pop mov (bad) outsb mov or rex.B divl jg (bad) jae and lret out cmp stc mov jmpq (bad) jne roll cmp lods rcll cmc (bad) (bad) (bad) pop rex.WRX push rex.WRXB jle xchg lahf (bad) jl adc cmp xchg (bad) scas mov (bad) sarl sar stc sarb fisubr jns or rex.RX std mov mov (bad) rcl (bad) hlt xchg in adc imul sbb and (bad) jo add rcrl mov lahf pushfq movabs scas adc and iret stc rex.X add data16 push (bad) pop fist (bad) pop jbe pushfq shl sub (bad) repz mov loopne je repz imul pop push callq rorl insl movabs mov (bad) mov or retq bswap leaveq (bad) jmp rex.B jo insl fs (bad) rex.B lock adc mov ja std lret rex.XB rol cmpsl xlat rex.WRX cmp lock out movsb adc fiaddl rcrb sub (bad) movsl outsl roll push xor pushq clc rex.W gs stc jo push callq sub sbb xor pop hlt (bad) cmp pushq rex.WB retq sbb stos push pop rcll lret add rcr cmp mov cwtl push sub (bad) mov pushfq lret in xchg and (bad) outsb (bad) xor mov mov sahf pop roll retq pop movabs rex.WX xchg xchg int sub sub pop jno pushq rorl push xchg (bad) lahf fwait retq fnstcw pop fidivrl or retq xchg (bad) jne lock mov outsb loop (bad) xor rex.WB fiadd imul cmp mull sbbb push sahf lods xchg fldl lock (bad) (bad) (bad) jnp jl movsb sbb stos sti xor cmp or pop xchg imul test jo jg movabs sub callq sbb jne imul test mov xlat imul rcl push insb xchg mov sbb xor mov push jge jbe xor mov rex.RXB rex.RXB (bad) imul out mov xchg mov xor popfq lock int jo mov xchg rol int3 (bad) adc sbb imul sub jnp fs (bad) mov rorl sbb sub (bad) pop pushq retq movabs mov movabs sbb mov fldenv (bad) fnstsw (bad) rex.B lods rex.WX add mov insb add faddl (bad) shr rex.WRX xchg xchg jmp leaveq mov leaveq lods xor rex.RB imul and or sti mov mov stc and rex.R rorl rex.WX loop rex.B rcrl jno roll (bad) xchg cs xlat mov mov pop cli xchg mov xor test scas mov mov (bad) and jrcxz in pushfq pop popfq iret pandn mov and (bad) jno and js (bad) loop rcrb rex.WRXB fwait movabs xchg mov fildll test pushq xchg mov rex.B rex.WX xchg in iretq add jbe (bad) sbb rcll or mov callq out (bad) sub cli (bad) in int3 bnd (bad) in sbb xadd (bad) and (bad) rex.WR rex.X es sbb cmc lea jnp (bad) jmpq fnop and loope xor mov sub sbb addb jo movsl movabs loope xlat rorl fisubr loop cmp pop icebp xchg lock mov add es and jo mov loopne test std sbb leaveq roll fadd movabs imul repz mov xor rex.B enterq adc int rex.WX mov (bad) pop test cltd xlat push or incl pop mov pop (bad) int imul mov (bad) movabs and rex.RXB rex.WXB cltd pushfq add mov cltd pushfq and (bad) sar (bad) push xor sbb cmp (bad) cli xchg (bad) je xchg stos nop movslq or (bad) mov (bad) (bad) push rolq rcr (bad) (bad) cmp leaveq loope (bad) roll stc rex.B mov movabs negl icebp rex.RXB mov out (bad) rex.X lock bnd data16 and xchg lods popfq xchg fs push bnd mov jb rex shll and or add rex.B repz (bad) bnd leaveq sub sub cmpsb pushfq (bad) (bad) movabs shll mov cmp push cwtl (bad) stos int3 xchg (bad) xchg push sub (bad) cltd push cmpsl test rex.RX xor sub hlt out (bad) push lret rex.RB (bad) (bad) test rex.WXB sub loopne movabs (bad) ja jrcxz mov (bad) jmpq js cmc (bad) shrl movabs rorl idivl mov jo rex.B insb roll mov push in hlt and (bad) xor mov xchg rorl (bad) sub lock movabs shll (bad) jbe sbb rcrl lahf pop int3 test out push jge cwtl sti lea xchg ffree (bad) roll jge rex.X sbb loop sbb rex.WRB (bad) sub xor push movabs movabs push push xchg jmpq and outsl cli cmc stc mov jns fs (bad) mov push (bad) adc (bad) ja add jno xlat rex.X (bad) jl out hlt add rex.B in rcrb roll cmpsl (bad) jmp jno lock (bad) loop mov (bad) add adc (bad) ja sbb in pop add xor xchg (bad) repnz test mov cmc je loope std xlat movsl (bad) lret add rex.WRX ja fisttp gs sub test stos cmp test or rex.RB lock jge fs fwait jmp ss mov xchg cmp lea pop sub pop xor jp fxch (bad) push mov and int retq rorl pushfq lret jmpq add jbe clc rcll (bad) cmpsl shlb cmp popq scas shll jrcxz loop mov xchg jp rcrl in shll mov xchg (bad) gs std andb (bad) jl (bad) xchg xchg insl mov cli fbld (bad) lock sbb xchg cmpsl rcrl int3 pop (bad) sarl or (bad) sarw push (bad) movabs add jrcxz rex.B xor flds (bad) sbb mov xor loope ror cmp jge mov gs rorl out pop push (bad) stos xor jmp data16 sbb xchg mov rex.WXB (bad) pop xor jp shl fld int3 std shl imul in xchg rex.B rex.W mov rorl mov sahf scas xchg fild adc xor (bad) rex.WX rex.B rex.B fistpll adc rcll out (bad) xor rex and je mov pushfq rcll (bad) vmovhpd scas cltd jno ror mov mov jmpq xchg callq test pop sbb imul shr pop mov pop rorl mov repz adc and pop (bad) rex.W ljmp (bad) movslq jne (bad) movabs sub pop adc (bad) and rex.WRXB or add fsubl push roll negb enterq cli imull sub cmpl popfq and xchg imul int3 pop (bad) (bad) int roll fmuls ss xchg jne push or sub jbe test (bad) jnp jmp mov push cmpsb mov insb push mov pushfq mov gs xchg adc stc pop jo shl lret movabs (bad) jg retq fmuls mov mov rorl stos inc or sbb ror (bad) jp xor and cwtl std out (bad) lret add jle rorl mov ror add cmc jl rex.WX movsb lea test sbb shll test retq mov (bad) loopne rex idivb negl in shl xor (bad) rex rcrl stos add test xchg sbb rex.X xchg push std sarb sub xor lret add cmp sub movabs (bad) rex.WRX movabs lods int3 push sub xor cmp icebp lret ja rcr rex.WRX (bad) movsl jrcxz (bad) mov sbb cmp roll (bad) and lret data16 sarl fnstsw sti lret mov cmp pushq mov rorl lods fistpl push out shr xchg decl (bad) mov and cmp cltd mov push jae fcmovnb sbb clc addr32 (bad) test or and xchg pushq fcmovu mov xchg movabs rex.WRX out cmpsb fistpl (bad) (bad) sbb mov pop add rex.RX (bad) jae adc lock andb mov ds insl xor cmpl outsl (bad) add cmp in ffree enterq xchg add or mov xor fstps repz pop insl fsubs jno mov movslq adc (bad) in sar jae or stc lods rex.X (bad) pop rex repnz jrcxz (bad) andl movslq imul loope push out adc cmp xchg and retq int3 rolb icebp pop jo loope mov rex push add xchg lret pop jge mov add ja (bad) xchg mov pushq xor (bad) jmp rex.WX imul (bad) sbbb cwtl insb inc mov mov insl repz pop ja or (bad) (bad) mov repz movabs and push rex.W (bad) divb clc iret retq stc roll iret xor (bad) mov mov mov hlt adc callq jmp mov inc vpsrlw cs in lret xchg and test pop mov ror movsb mov retq insb or sub (bad) add enterq adc pop rex.R or idivl pop (bad) adc or movabs roll jl or sahf pop int push fimul in int3 (bad) and cmp lahf (bad) movabs jbe mov (bad) loop repnz xchg (bad) movsl packsswb jl pop xlat pop shl and repz sbb sbb shll jo callq pop sub push (bad) repz clc (bad) sahf sub or lock pop (bad) (bad) (bad) xchg es fdivl mov movabs movabs add pop retq rex.WR cli clc push movabs (bad) xor (bad) mov movabs (bad) (bad) jle movswl lcall ja push enterq movsl imul rex.XB mov mov in fstpt ds pop loope ffreep stc shll lods in xor clc xchg (bad) cmp rex.RX rorl adc (bad) (bad) int ror rex adc jno fildll rcrl lahf scas fs stc int3 icebp xor lods pop cwtl lea rex.X push rex.WX in rex.WXB cmp stos mov mov rex.B mov test pop push ror xor rex.WX sbb mov mov ds movabs lcall pop rol or mov xchg xchg movabs add mov jns rorl (bad) scas ficoml cmp cmp jno cld lret jmp sarl adc (bad) loop shrb imul out negl sub sub sub add adc jg add (bad) xchg rolb iret movabs leaveq jmpq jno fildl out std int3 (bad) rorl (bad) in cmpsb add xor cmpsl rex.X rex.B movabs xchg jbe pop rex.WXB (bad) fstp xchg cmc movabs movslq xchg pop fcom cmpsl jp or mov fsubr movabs cltd movsb int fadds movabs repz enterq sub (bad) test adc shll add mov retq cmp fcmovu std (bad) out (bad) adc mov mov add out (bad) rex.R rex.WRXB cwtl cmp xchg mov rex.X pop rex.WX pop rex.WXB movabs lahf (bad) xor rcrl out (bad) rex.R loop add (bad) hlt mov push roll xchg scas mov mov jne jno or xchg repz mov divl jge (bad) cmc add rorl xorl push fcmovnb out cwtl sti add pop jbe fcompl ja sbb and mov jp movb add mov test adc rcrb rex sarl mov rcl mov scas (bad) rcll cmp (bad) sbb push lods test callq lahf cmp cmp iret rex.X mov test rorl rex.W test add fistp imul repnz push jmpq pushq jo sbb int3 ja rex.XB xchg add retq cld (bad) test or stc sub out (bad) mov jbe js (bad) or mov mov fimul enterq cmc mov in xchg (bad) rex.B rex.W and in std cmp and mov (bad) sub sub in or (bad) in (bad) fsubs stc cmp xor stc and rol jge or movsl jne movabs vpmaxub in sub movslq sti push (bad) pushfq rex.WXB shrl mov add clc (bad) mov rex.WRX rcll rcll movabs rex.WR add push jbe lahf (bad) (bad) fnstcw ror repnz lock mov in xor (bad) ss rex.WRXB retq shrl (bad) rol jrcxz (bad) testb adc jnp (bad) xchg movslq or shrl movabs xchg jns jbe fwait int3 mov loope pop (bad) stc gs in sub (bad) lods out cmp pop cli (bad) shll push (bad) sbb (bad) rex.WX mov pop (bad) movabs mov push mov jo repnz fwait rex.WR xchg adc test retq xchg es rcrl rex.RX jno cmpsl fwait mov xrelease (bad) mov xchg adc rex.WRX callq (bad) mov pop scas cwtl (bad) pop pop and insl mov xchg stos xchg roll shll lahf out cld add pop cwtl shll and mov or pop and push (bad) push fmull (bad) stc rex.W pop rex.WXB (bad) sbb push (bad) movabs pop xchg sar mov push rcll mov adc jle,pn (bad) leaveq cmp cmp movabs xchg rcrl idivb shlb (bad) hlt and (bad) in rex.R rex.WRXB cmp loope xchg nop addr32 jns (bad) mov loop je mov jmp jb fmulp adc mov and rcrl test fsub rcr rex.B and insl movabs add jbe (bad) clc sub imul mov sub mov pop mov std enterq scas stos (bad) rex.WXB fs orb callq fsubl test xchg pop stos fcoml push in or mulb xor mov movabs imul mov shll (bad) cmc (bad) sbb mov movabs int sub mov (bad) cwtl int3 clc push (bad) fbld and sub movabs test sub xor retq add mov (bad) cmp cli cmp push rcl ss or pop rclb rex.R push mov (bad) push insl movabs repnz loope jae fild (bad) (bad) mov (bad) pcmpgtd mov jle js (bad) test push jle jg rex.B hlt or jp test int (bad) mov gs add or rex.WXB xor scas rex.WRXB pop mov sub and lods (bad) out test jne lods retq rex.WXB sbb sbb mov (bad) popfq jb add test rex movslq flds iret movsl rex.WB gs push pop popfq mov adcb rcll mov rcll rex.W lret cmp retq push int sub xchg in rorl test add sbb sub mov jno ror rex.R je ss int3 iret xchg xchg (bad) pop xor gs add sar add scas (bad) in rcl sub xchg add rex.RXB rex.RX mov and xchg (bad) mov (bad) (bad) lret mov jrcxz adc repz jns leaveq fwait adc negl shll adc (bad) faddl (bad) (bad) xchg rex.WRB (bad) fst insb sub (bad) lock rex.RX cld jno pushq xchg fs out sbb rex.R cmpsl loopl idivb mov mov in retq (bad) sarl movabs lret sbb loop or orl (bad) jle add push xchg shl rex.WX insl iret rex.WRB (bad) adc mov jno shl insb sbb repz mov mov stc int notl (bad) (bad) lock (bad) in lahf mov sar mov stos (bad) mov xchg movabs (bad) mov xchg push (bad) int movabs sub add rcl rex.WRX incb jo retq insb adc movabs xlat xor (bad) lock mov in shr insb idivl insb andl add loopne pushq push jbe jo (bad) callq cwtl (bad) movsw imul rex.RX xchg cmp movsl jo (bad) sub rex.WX xchg rex.RX rex.RXB callq (bad) fs in mov cld testb adc fs push rex.X data16 or jge and sti movsl (bad) lret (bad) mov xor rex.XB rcrl jrcxz mov (bad) retq add rex.R push test es mov sbb adc cltd int3 sub xor hlt imulb xor enterq adc sub repz fdivrl xchg add mov (bad) mov jnp jae xor repnz outsl and xor (bad) xchg (bad) clc in movl (bad) int jl (bad) cmpsl lock rex.RXB (bad) std mov insl (bad) enterq sub jg mov or push rol pop movslq je int jne (bad) (bad) icebp frstor mov test add xchg fadds jmpq movabs data16 ficom xlat int rex.RX cltd and adc in xor (bad) xchg movabs pop sub icebp (bad) movabs push (bad) movslq (bad) sbb in sub movabs out fildll loop mov pop jmpq mov push sub push mov (bad) rex.WR pop stc testl fisttpll fisubr icebp insl sub rex.WB (bad) shl mov (bad) cmp sbb or mov icebp cmc jo loop jns int3 sub repnz enterq mov adc fdiv fwait (bad) xchg enterq fs cmp jae cwtl idiv and fnop jl fildl mov mov add retq in cmp rex.WRB xchg fmuls jo (bad) rex.R pop sub fbld hlt (bad) ds lret loop icebp (bad) adc sahf negb cmp xchg es fcmovnb rex jo outsb or retq and addr32 stc (bad) lea mov xchg (bad) vshufps cmp movabs mov lret rcrb pushq xchg stc add movslq jo test (bad) add jne cli (bad) adc xchg jg ror repz jp cli cli (bad) jo xchg jge in sub hlt (bad) xor rex.B jrcxz rex.X mov icebp or data16 je hlt ror (bad) cmp vmaxsd pop in loop rex.WR cmp lods leaveq fs sub roll je xchg cmc (bad) shll (bad) outsb mov mov or jle in (bad) gs xor sbb mov movabs scas bnd mov jmp xchg (bad) test mov jnp rex.WXB mov cmp fwait roll rex.WRXB scas xor sbb ss ror rol movsl add jl xor rex.W mov cmp mov cmp fcoms sarl mov lods out shll cmpsl sbb addr32 or pop rorl sbb xchg xchg cmp shll lods add int3 adc rex.WRX or lea (bad) xchg (bad) mov xor xchg xchg jns jrcxz rex.WRB rorb imul andb shrb iret test mov mov or (bad) fld shrl add and (bad) outsl idivl out xchg cwtl mov xor jmp adcb mov (bad) xor or movabs hlt (bad) fwait jp test cmpsl pop in pop add sub mov and (bad) sbb mov sub push movabs sbb rex.RX pop push test loop out rex.B in cmp add xor movabs add movsl xchg rex.WX rex.WB loop (bad) mov es rex.WRX push (bad) jg popfq and loop mov xor (bad) jrcxz in (bad) (bad) cld mov sub (bad) mov mov xchg push retq lock fstpt (bad) fmuls callq rex (bad) mov and movabs jge outsb pop mov int3 jno (bad) (bad) (bad) mov rorl adc rcrl out jg std xlat rcl jns (bad) jae rex.RB or sahf (bad) jmp mov mov rex.XB mov repnz mov orl scas loope jmp and or movabs pop roll xor rex.WRXB (bad) lock sbb mov xor jo shrl cmp callq or int sahf xor sbb lea (bad) ds pop xchg cwtl xor popfq rex.WRB icebp xchg outsl push rcrl pop sarl sub xor gs xchg (bad) and movabs (bad) in or imul sarl sub loopne ja mov nop cmp retq (bad) mov or push or rorb mov ror and pop lock xor fisubl sub js add in (bad) insl jge orl repz xlat and cmp repnz fs out pushfq mov shlq icebp out xor pushq (bad) scas scas (bad) repz stc sub jnp shrl out cmp mov movabs test add jle rcll rex.WRB clc stos (bad) sbb sub (bad) inc (bad) xor push jnp adc outsb adc popfq test cltd xchg roll jg sub mov sub repnz (bad) fwait (bad) sarb cmpsl sub rex.R repz jl push jae jno add add sub fidivl add (bad) js movslq sub insb xchg sub ss fstl pop mov shl sub (bad) (bad) (bad) xor sarl fimull in mov (bad) xchg or mov ficompl mov mov xchg fxch lret in or int xchg jo mov out movslq push sbb jp cmpsl jp fdivrs sbb mov add movl mov push adc movabs fcomps (bad) int3 (bad) in and adc (bad) ja jo imul rex pushq mov adc std mov stc (bad) sti clc icebp add or and (bad) repnz movabs rex.XB xor sub add enterq subb mov add jno mov sub sbb push adc cmpsb add or fwait movslq test mov add cmc rol cld rex outsl sbbl or xchg popfq stc js rex.WXB cmp jrcxz rex.RX repz imul fidivl loope pop stos lea fdivr lret mov movabs rex.WRB (bad) add (bad) (bad) sub or rex.X pop (bad) mov in lret cltd (bad) js mov mov rcll (bad) jg in mov insb xchg xchg (bad) push jae pushq rex.WRXB ss xor ss push (bad) outsl or add icebp rex.XB rex.WRB std fnstsw (bad) addr32 sbb rex.B jmp (bad) pop jp (bad) fcomip cmp int3 pushfq retq xlat cmpsb adc in fidivl adc add sahf pop xlat fsubs (bad) sbb jl leaveq adc retq out mov add cs test xor mov push mov je repnz jmp div and negb fiadd cmpsb or imul in stos ffreep cmp sub jbe pop jp cs sar jo out int3 (bad) mov loopne xchg loopne xor imul rex.W rex.WB test imul (bad) sub int movsl and ja xchg jnp lock loope rex.B and movslq sbb rclb jne push jrcxz and mov (bad) or sbb mov in movl push and jmp sub mov in pop sbb rcrl rex.WX sbb (bad) pop pop shrl cld jp imul fiadd rex.WR fnstcw (bad) invd push rcll in insl rorl flds jmp adc or orl sarb imul cwtl out rex rex.XB out incb sub xchg add add push pop adc lods ja (bad) rex.WX es pop cmpsl (bad) xor leaveq mov shrb add sub in (bad) insl mov andb pop cmp (bad) (bad) sub mov rolq hlt repz or rolb movabs adc adc (bad) sub mov pushfq (bad) lods rex.B fisubr cmpsl rcll imul push pcmpgtw xor or adc or lret xor popfq mov cmc repz (bad) push pop mov (bad) (bad) cmp cs jnp lsl movsl (bad) sbb ficom in sar pushq adc xor idivl hlt imul push es fisttp loop and mov movsl jrcxz (bad) add rol scas cmpsb xlat cmp sub shll sbb enterq (bad) movsb adc (bad) sub rolb rex.B shrl rex.RX (bad) mov rex.WRX adc test (bad) fiaddl mov icebp pushfq cmp mov rex.X adc (bad) xor rclb retq mov ja or mov mov (bad) cmc rex.WXB rex pop xchg stos pushq repz stc pushfq (bad) mov lock adc (bad) rex.WRX (bad) rex.R (bad) out (bad) xor rex.B mov (bad) pop jo leaveq fcmovbe hlt leaveq ds rex.WRX rex.WRB rex.RXB sub (bad) insl callq subl rex.WRX add cld and jbe add and data16 rex.W and (bad) lret cmpsl fldenv rorl rex.B rex.R enterq data16 sub mov scas (bad) fs xchg jnp jl jne ja mov fist sbb (bad) xchg cmp and and pop jno rex.B mov mov gs pushq xchg mov int3 bnd cmpsb cmp imulb test movsl hlt (bad) sub pushq cmpsl gs add pushq rex.WX rex.RX rex.RXB test cmp pop sbb (bad) jns push popfq add pop and (bad) lahf and rex.WRXB add or gs rcrb loope (bad) out cli cmc rex.WRB xor scas sbb (bad) mov push movsb fdivr rex.WR push (bad) add in push or jl (bad) mov fnsave adc movabs lret add enterq cmp (bad) rex.WRB test and stc retq xchg xor (bad) mov adc sub mov (bad) movsb (bad) in or mov push test movabs xor (bad) rex.XB movslq (bad) stc sub (bad) jmpq divl fdivrs add jno movabs cmp retq in mov lods (bad) cmp and clc and add and rex.B add (bad) movslq jg insl stc (bad) cmp fcoml jrcxz xchg popfq sub movsb mulb rcr (bad) lock push rex.WRB xor lret out mov fs leaveq cmp rcrl icebp ja icebp clc sbb push push mov sbb fldenv (bad) and rex.XB mov cmpsl rex.WRXB pop enterq movabs rorl jno adc rex.WRXB and (bad) xchg neg mov retq xchg xchg add xor rex.RX jl mov movabs (bad) (bad) (bad) (bad) xlat imul mov or movslq (bad) lret mov and enterq rex.WR inc mov xchg rex.X (bad) cmp mov (bad) or sbb sub fisubl (bad) fcoms mov cwtl jae rex.B cmp (bad) add xchg addl lods or and (bad) test push rorl rex.WX pushfq mov mov (bad) callq cmp pop cltd sub sub incb sub movsl fdivl and in add pop sub out fcomps shll xor in lods (bad) fwait sbb adc (bad) idivl mov cwtl xchg movsl sarl mov sbb sbb sub rex.WRX rcrl rex.R mov ror (bad) xor fmul shrl div (bad) jne (bad) adc (bad) movabs (bad) and pushfq (bad) rolb xor jg in (bad) fadd add xchg add retq jns rex.RX imul and imul mov push sub sar scas add xchg ja (bad) rex lahf movabs shrl movabs retq mov enterq sub (bad) (bad) push jne (bad) xchg shr fstps cmc vmovshdup sub mov push push (bad) fcompl cltd or in pushfq rolb rolb add add jne movabs sub out xchg mov jmpq (bad) xchg pop adc adc mov movsl pop jnp (bad) ss repz lret fidivl mov movabs xor int pop xchg (bad) mov fsubr fiaddl in icebp cmc xor fcomi popq sub js sahf fcomi jno push not movabs mov stos (bad) xchg fstps mov sahf sarb movsl rex.RX enterq sbb scas fsubrs stc rorl (bad) pushfq mov mov (bad) stos ss jnp adc repz sub cs rex.B rex.XB movslq pushfq sub and pop sbb sti cmp (bad) mull (bad) or outsl mov addb je rex.B and sbb and jmp fmul (bad) (bad) mov jp notl rex.B sbb retq (bad) sbb add mov rex.RB cmpb int hlt in outsb int3 fstps fild jb (bad) movabs insb jne (bad) pop (bad) movslq cmp cmp sbb je (bad) push jb rex.B outsb add (bad) sub jrcxz xchg mov cmp jb xchg mov mov adc rex.WXB (bad) and pop rex.WR rex.WRB jb cs jl rex.WR push pop fs movabs sbb imul (bad) (bad) jae rex.WXB movabs outsl or and stc xchg (bad) orl push or rex.WX cwtl lock stc pop in jae fildl (bad) sbb mov xchg movabs cmpsl rcrl retq or push movabs lods sahf sub xchg adc imul rex.B cmp movabs (bad) rex outsb adc lock rex.RXB scas (bad) sbb shll jl adc cmp mov test xor jae sbb (bad) lret pushq push and idivl (bad) sahf jb rex.B out vpaddsw add mov fmuls imul jmpq scas push lret clc mov (bad) mov add mov jae rorl stos mov rex.WRB mov retq lock (bad) int (bad) mov pop pop in jmpq push enterq repz (bad) or jo test lods rex.WRX clc repnz mov xchg xchg retq lahf xchg (bad) insb and movsl mov sbb xor idivb fimul mov nop clc (bad) rex (bad) adc rex.R enterq fsubrs mov sbb rcll xlat jbe add mov cs pop jrcxz pop cmpsb je (bad) pop jo std jae xchg cmp mov rex.RXB test sub jl divl add in (bad) (bad) push testb rex.RXB adc movabs (bad) xchg pushq add xor movsl es pop rex.WRX mov sbb loope jnp add rorb (bad) testb in data16 sub or fnstcw adc loope frstor sub jge or sar testl lods rex.WRXB fidivrl (bad) lret sbbb data16 (bad) jge cmpsb sar xchg rcll sbb and (bad) fstl sarl (bad) add mov (bad) cmp mov iret in pushq loope xchg in clc add xchg movsb scas cltd iret and rex.R lahf sbb lret or imul outsb mov rex.X and sarl xor or lret or rex.R mov test cltd rorl or ja add jnp rex frstor fimull clc xchg (bad) test adc adc sub insl insb movabs jbe sarl xchg imul (bad) add mov (bad) jne jns rex.X xchg decl mov xor xchg mov (bad) push movslq and (bad) addr32 insl je mov outsb (bad) (bad) fimul scas roll fmull out jbe shll mov pushq rex.RXB mov loop rex.WX out mov inc sarl rex.W movups fistpll pop rorb xchg movsl adc loope sub clc in rex.WR out sahf sahf movsl (bad) int and repz pop and jmp add (bad) rex.WRXB push es in je nop fwait out pop lret (bad) mov stos fmuls cltd test test (bad) shrl mov fcmovnb push add pushq cmp lcall (bad) mov push nop (bad) icebp shl jo rex.X (bad) cmp or rex.WXB ficom fisttp mov rex.WRXB stos divb mov mov (bad) sub (bad) test mov (bad) rorb (bad) jo lret mov jmp xor adc mov sarl movsl adc mov adc std sbb or xchg cld adc adc (bad) jb jrcxz rcll push jmpq sbb (bad) sub (bad) mov (bad) std rex.W add add mov mov mov jno,pn sub mov sysenter rex.W (bad) rorl sub (bad) ss mov psrlw js sahf sarl cltd rex.XB rex.R (bad) in movsb (bad) rex.WR mov int mov cltd pop push rcll sbb in (bad) rex.WB fcoms xchg cld movslq rorl cwtl mov push rex.WRB (bad) (bad) xor and and cltd sub test mov nop sbb (bad) push pop lock jne movabs or faddp and int3 lods mov out rex.WXB mov push add (bad) jns pushfq (bad) test push xor faddl (bad) or and (bad) test cmp movabs icebp push ja fcmovnbe jnp (bad) and sub addr32 popq mov sub push pop std lea fs rex.WX in rex.XB retq rex.R rex.WX rex.B mov (bad) (bad) movsb testb outsl adc clc rex.WXB fist cmp cmp (bad) sbb adc fidivl sti in xchg mov enterq in std add popfq sbb (bad) cmp or jmpq rex.WB and hlt fsubrs rex.R js rex.B xlat add bnd sbb enterq xlat rex.WR mov div (bad) (bad) ficompl jo movabs movslq (bad) repz movabs std shlb cwtl adc cmp shrl leaveq movsl mov in pop icebp roll xlat mov shrl movabs icebp push (bad) jmp imul jae insb or enterq xchg cmp (bad) (bad) loopne jmp iret jne push rolb cmp clc jp jae mov fsubr xor movabs mov test movsb adc (bad) iret (bad) rex.R rex.X rex.B sub rex.B sahf or jmpq dec out (bad) (bad) xchg nop retq xchg jae pop mov iret popfq (bad) cmc fnstsw stos jge test xchg adc out sbb (bad) fiaddl (bad) test movsl adc ja insb add pop andl rex.WRXB mov (bad) jbe xlat fistl mov (bad) enterq or add pushq imul and repz add test (bad) rex.WB rcrb outsb (bad) pop shll lret test rcll add movslq in (bad) test movabs jmpq incl jae or lock cmp loop clc cwtd movabs je xor jrcxz fcmovb data16 imul (bad) or and movsb pop and pop roll mov pop test xor cltd (bad) lods rcl rex.X clc mov sarl decl (bad) out pop enterq rex.RB movsl shr sbb sti pop imul (bad) je xchg retq cwtl and rex.B fwait pop jns rorl loope sti jle movsb loopne movabs test loope scas jmp stos loope test (bad) sbb rex.XB callq mov movabs fsubrs add add jno mov clc iret adc loop xor (bad) callq mov fimull out mov lea rorl (bad) adc and (bad) mov iret rex.RB sub (bad) xor (bad) insl xor lea addb scas movabs jp rolb popfq shrl pop mov in jno or add sbbb test scas or (bad) sbb mov rex.WRXB (bad) es lret pop movsb mov add (bad) int3 (bad) movabs test mov push movabs imul (bad) (bad) xchg repz movsb shrl cmc test shr cld add jge (bad) mov outsb (bad) fisttpll repnz (bad) and (bad) bnd ss rex.RX xor rex.RB mov xchg (bad) in add int3 ror iret test xor retq testl shrl jg pushfq mov lods inc lahf push cli jl sbb sti fwait (bad) xor jle sub (bad) sbb and or mov (bad) mov sbb sub cld test int3 adc cmp xor (bad) fldcw or xchg sbb (bad) mov notl shll xchg (bad) mov out loopne mov rex.WR movabs jge ss rex.RX add push jne jno (bad) (bad) jb mov rex.WRX rex.RX mov xchg rex.RX sub xchg mov pop jb test (bad) rex.R cld xor movntps pop (bad) (bad) neg rex.WB mov (bad) and mov or rex.WR mov jp adc push lock adc push fnstsw imul rex.W rex.X mov mov retq xor (bad) jge (bad) fnstenv (bad) loope rex.B adc push rex.RXB (bad) mov add negl sub scas rex.WRB mov mov repnz (bad) (bad) sbb adc rex.WRX sub rex.XB cli cmp lret mov scas sub and sub mov push xchg jge and rex.R ss xchg cmp sub stc rex.RXB (bad) cli add outsl mov test repnz int rex.RXB ja fnstenv in sbb jmpq cmc rex.WRB add (bad) movabs (bad) and int sbb scas in mov mov in sbb outsb std pop mov sbb int es push loope or rolb mov sub fwait (bad) and jmp rex rex.RX js (bad) loopne outsb (bad) lret movabs (bad) retq xor rorl movabs ds add in loop xor lahf (bad) scas iret addl (bad) out (bad) callq jle mov imul add mov jle cwtl icebp cmp cmp (bad) and or out xchg add movsl add retq mov mov and cmc (bad) mov lock test fsubs or in pop mov rex.XB enterq outsb ds rex.R rex.RB cmpl pop mov out push shll fnstenv jae (bad) je sub icebp lret imul test xchg xchg (bad) mov movabs or (bad) shrl sub (bad) xor sub and or xchg lret adc push es (bad) (bad) retq (bad) xor lea loop sarl rex.RXB int3 movabs xchg (bad) pop sbb cmp mov fidivr lret pop (bad) xchg xor rcrl hlt lods fnstsw roll out repz cmp rcll (bad) shrl add stc mov andb add in lret pop (bad) enterq (bad) outsb push outsl shrl addr32 inc (bad) (bad) mov cwtl jnp cmpsb stos jge xor mov (bad) (bad) jb sbb and jo rorb mov (bad) lock mov xchg movabs stc mov outsb in (bad) fwait test fld cwtl (bad) or rex.XB jbe rex.WRX out rex.RXB mov rex.WX push loope rcll (bad) loopne sub leaveq (bad) sbb rcl mov mov or js andb in mov fstl test ds add (bad) repz movsl sti out (bad) roll (bad) test cltd rex.WRX mov mov mov jno sub (bad) rcrl ss (bad) (bad) mov (bad) jo (bad) add (bad) repnz stc xor pop (bad) sbb jg (bad) fidivr (bad) cwtl rcll rex.RX lock rex.R lahf out movslq cmp xchg stos repnz mov pop rex.WX adc popfq sub mov loop sub loopne addl addr32 sbb cli jo rcl rex.WR cmp (bad) jnp out adc jge iret rorl stos mov cmc push ficomp (bad) ss fwait repnz xor insb (bad) out sahf xchg (bad) icebp xor (bad) cltd negb lods cmp mov cmp (bad) bnd or rcrl rex.WRB rex.W jae and and mov in hlt lret adc outsl add ja xchg nop cld rex.B or movsb (bad) (bad) pop lahf rex.XB mov or cs adc roll rex.WRX gs cmp cmp cmc mov xorl es rex.XB (bad) sbbl jmp (bad) ja pop callq rex.W leaveq or adc out imul or jae icebp xchg (bad) lea (bad) and fwait stc add xor jo cmp movsb (bad) jns rcl push jg xor adc pop mov movsl rcll rex.X and int3 add xor movsl imul iret shrl rcrl lret lock add pop xchg (bad) fiadd jge sti add rorb and xor (bad) fwait sarl xchg js sbb movabs push add mov ljmp sbb or fwait sbb int3 loopne movabs icebp or rcrl movabs stc popfq mov cwtl repz cmc mov movsl lods add (bad) scas mov (bad) sub iret imul lock or shrl scas rex.WR mov stos jne mov rcl js cld iret lahf hlt and (bad) jns add adcl rex.B and mov push mov ss in pushfq jne enterq out adc movabs and loopne out sbb fsubrl and mov pop rcll (bad) retq test adc rex.WB es add (bad) pop sbb xor (bad) xchg in (bad) rex.B sub mov (bad) mov push roll cmpsl leaveq xchg (bad) (bad) xchg shrl cli es add mov cld (bad) cs fadd (bad) shrb mov sbb sbb lea (bad) sub or mov shrl xchg out mov rex.RXB rcr push ds loop (bad) (bad) xchg and xorl notl (bad) rex.B (bad) cmp add (bad) fwait cli fld imul mov mov push fsubs xor sub stc enterq rclb mov mov movabs sub sbb sahf rol mov in pop out lret lret (bad) (bad) test retq sbb push movsb (bad) rex.WRXB sub sbb (bad) pop sbb (bad) shll bnd insb rcll lcall (bad) loope jns sub idivl movabs jl fs (bad) mov add rex.WX xchg cmp add outsl lret mov add lock rex.B sub or fcoms jno rex.X rex.WXB callq vunpckhps out xlat leaveq (bad) iret int3 rcll sub rex.RXB movabs cmp jle rex.WR add out mov pop rex.RX rex.RX xchg insb rcrl movsl adc xor pop jrcxz push rex.WRXB insl xor (bad) cli rex.X (bad) repz je jge fwait out rex.RB movabs jno pop adc rex.WRB sbb push (bad) loopne jns adc xor scas push push pushfq and cld cmpsb jo jmpq rex.WRX js movabs or xchg adc or (bad) iret (bad) movsl shll xchg in jb (bad) std test rex.RXB shrl (bad) mov incb add (bad) jo lahf mov imul sarl jle fwait sub jge (bad) cmpsl jns rex.WRXB fs jrcxz sbb sbb test mov mov (bad) int3 xchg jne stc outsb rcrl out (bad) cmp ja (bad) (bad) repnz psubsw in cmpl mov loope shr (bad) mov movabs (bad) rex.WR in test rex.WR rex.RX (bad) cmp lock je rex.XB mov (bad) and rex.X mov insl test or retq rex.R jo hlt movabs (bad) jbe adc sub popq (bad) lahf loop sbb cs rex.R rex.WXB data16 cmp rex.WX fimull mov cmpsl clc jge cmpl insl stos (bad) data16 sbb mov out fcmovb cwtl notl mov xlat mov or (bad) notb clc insl or xchg sub nop or jns fsub test rcrl push repnz cs imul push xchg kmovb loope repz mov push mov stos mov iret or bnd rex.WB mov adc (bad) xchg movabs lcall test es and push ss cs test retq shrl xchg lods hlt rex.B and icebp (bad) jmp jmpq mov or cli mov es cmpl movabs adc cmpsl rex.RX (bad) (bad) mov stc xlat xor cmp mov mov lock es sbb (bad) fimul test mov add scas (bad) out (bad) jmpq cs push sahf imul addr32 rolb (bad) push jl lock (bad) rex.XB lahf push (bad) nop sub adc movsl mov callq add rex.WRXB rex.WB or imul and jns imul mov (bad) mov (bad) sbb cmp jle roll (bad) mov test rex.X movsl pushfq or clc sahf (bad) rex.WRB (bad) sub (bad) repz fwait xchg sti (bad) iret ds jne adc pop push (bad) rex add shll cs jnp rex.WRB sub roll or roll addl (bad) int mov sub (bad) lret leaveq rex.WX jno fstps fdivl in sub (bad) xor pop iret movabs popfq mov rex.B fs retq jbe mov push fcomps rex.X rex.RXB cmp insl (bad) rex.WRX lret stc xchg xor mov mov rol xor and add rex.WRXB mov add rex.RB cmp pop stos mov int3 int3 xchg outsl stc rcll and fstl jl (bad) jbe cld xchg cmp xor (bad) out repnz (bad) mov mov push in rex.WRX lea movslq movsl cld add xchg cli int pop imul out movabs lret sbb fwait test out sbb sbb add or push (bad) xor stos idivl (bad) rex.X rex.WRXB (bad) js mov (bad) (bad) jno xor add movsl cmp in in push jp cltd (bad) cmp js jp fcomi push (bad) outsb cld rex.WR mov (bad) cmp mov rorb add jmpq imul cmp xor (bad) sbb sub lods push and (bad) pop jo mov stos or fstp in ja (bad) mov popq xor int3 jmp movabs sub fs mov std sarl rex.WXB xchg (bad) fstpt rex.WRXB xor (bad) rex.WRX (bad) outsb mov xchg xor sbb rex.RX repnz test mov loopne add or or adc xchg cmp rex.WR adc jmp (bad) xchg pop test jl mov sbb hlt lods cmpsb sub imul jmpq adc cs out mov jbe rcrl mov ds and jne cmc and rcr sbb sub ss lret push push movsl shrl jo mov mov push cmpsl sub shrl stc sub pop sahf mov rex.B lret cmpsl rcll mov pop rol rex.WXB pop jb fsubl gs sbb jmpq loop or and (bad) push out mov mov out rex.W xlat mov mull pushq rex.X jo sub rex (bad) fisttpl jns rex.B (bad) (bad) push iret in rex.W rex.RXB leaveq mov rcl cmpsb clc xor rorl orl cmp jmp adc xchg pop jg adc retq ffree xlat jrcxz rex.RXB mov shrl shlb mull mov (bad) jrcxz add (bad) hlt adc sub enterq fwait pushq rcrl adc rorl or push xchg (bad) mov in mov jmp add jl adc rex.B int mov and fwait addr32 xor mov test stos adc movabs faddp mov popfq xchg in adc sub xchg fst add sarl in pushq xchg jge repnz pop rex.RB subl (bad) pushfq mov add (bad) lret xor push loope stc adc cmp adc pop (bad) divb shrl lret lret lods or imul xchg sarl add loop (bad) movsl roll add xchg xchg jb jnp in movb data16 rex.XB xor (bad) leaveq rex.WR in (bad) outsb or jrcxz movb (bad) or retq (bad) sub mov add retq jl iret mov cmpsb rex.XB movabs sti shrl movabs mov lods add pop fcmovnb cmp (bad) mov shll rex.WRX loopne nop cmp sbb stc mov subq (bad) jb adc push add mov and jo jbe (bad) (bad) xchg (bad) movsb movabs add movabs andl add sarl pop movabs pop xor and and sti hlt imul adc xchg lods repz test or mov outsb add test add mov mov rorl sbb vpmaddwd rex.WRB (bad) xchg (bad) testl shrl es xchg add push outsb sarl push loopne rcr xchg (bad) ss mov cmp mov movslq (bad) or push out testb (bad) push (bad) mov jp mov sub fdivrs sub stos (bad) out rex.B es (bad) cmpsb or jno push (bad) mov out (bad) add test mov shr sbb repnz movabs jmpq movsl pop xchg mov imul sbb rex.WR popfq dec stc sbb rex.WRXB mov mov int3 sbb repnz in jo xchg xchg cmp lret and (bad) (bad) and rex.RX (bad) mov sub fdivrs gs (bad) pop cmpl test mov xor imul and (bad) fmulp rex.WRB (bad) mov mulb cmp sub pop mov movabs (bad) retq ds (bad) imul test sub xor mov mov (bad) leaveq xor (bad) (bad) callq (bad) cmp bnd (bad) sbb push mov rex.WR loopne fdivp mov adc lret sbb movabs ficomp retq cmp ss adc rex.RX jp fwait loopne,pn rex.RXB imul mov pop fwait xchg fld fcmovbe sbb roll test shrl pushfq pop shrl jmp pop ja and cmp jo sti retq xor add movsb (bad) fcmovne push adc mov movabs popfq movslq (bad) and or iret clc pop rex.RXB js xor xchg (bad) in (bad) callq rex.WR xchg std and rex add rex.WX rex.WB rex.WR mov jg cmp (bad) sub rex.WRB (bad) ss (bad) lcall (bad) push callq (bad) jae jmp and and adc and lret scas lods rex.RX or jrcxz xor xchg rorl sti scas fisubr cmp movabs (bad) out scas add loopne (bad) cmpsl (bad) rex.WRB xor and rex.RXB data16 fs lret mov sbb fild mov add (bad) insl sub jmpq js add (bad) pop add test repnz fwait sub cmpsb rex.WB lods (bad) jbe retq (bad) sub add cli xor rex.WRX negb pop jl push fbstp xchg rcrl nop movabs mov cmp (bad) fistp shll roll rex.WXB cs sub frstor push shrl (bad) (bad) stc (bad) repz lret rex.B rex.RB rex.B rex (bad) fldenv xor sub in rex.B rex.WRXB test fs sub (bad) adc addr32 xchg int mov fadds mov add loopne xchg or (bad) jno stc add mov mov fs jne jnp data16 mov (bad) stc jb cltd in jge (bad) rex.RX gs mov out test (bad) ja xchg or jmpq push scas xor or (bad) rex.WB repnz cwtl (bad) scas (bad) icebp fstps xchg std stc push rex.RX (bad) push (bad) lods sub push (bad) xor (bad) ljmp int out imull fild pop (bad) or int3 cli push cmp movabs repnz rex.W add mov imul fnsave xchg rcll vfnmadd213ps rex.WRXB (bad) sbb mov and in rex.B push sar movabs mov test adc popfq je shll cld add pushq xchg mov je mov loop jg jae rcrl notl (bad) fwait (bad) je sbb pushq sahf insl sbb rex.B jg (bad) in testb rex.W gs (bad) xchg loop (bad) fild rex mov xchg add sub rex.X mov rcrl adc loop data16 mov rol add rex.WRXB repnz mov xchg (bad) lcall lods fsubl rex.WB and ficoml js rex.RB nop (bad) mov rcll rex.RXB lcall movsl (bad) sti addr32 sbb (bad) mov int3 (bad) scas rcll sbb xchg lret cltd mov jp stos add sub sar and (bad) sarl mov sbb jg in xor rex.RB jge (bad) in mov (bad) sarl loope add xchg (bad) out loopne add cli mov xlat loope fmull (bad) rex.RX in (bad) (bad) (bad) (bad) movabs movsl rex.XB pushfw out adc int3 jmpq int3 fsts mov mov rex.RXB rex.W stos adc (bad) (bad) (bad) shlb mov movabs loopne rex.B (bad) (bad) std fdivrs cltd test sbb clc rex.RX jle pop jno (bad) sub xor fnstcw pop (bad) retq (bad) (bad) jrcxz pop insb rex.WRB lahf cmp rex.WRXB repz rclb roll shll movabs sbb rex.W (bad) sbb (bad) insb fdivl rex jno sub out es lret pop jne rex.RXB icebp mov pop out rex.WRX scas xor nop cmp (bad) and fsubrl retq (bad) negb data16 xlat jo popfq idivl push insl sahf jmp fstpt add out repz rex mov mov sbb cmpsl fs adc outsl (bad) icebp subb callq lods push mov rex.WRB jmp jns retq outsl bnd icebp fstl callq iret rol (bad) mov mov int repz (bad) jne (bad) int3 vmaskmovdqu imul fisubrl xchg cwtl sub in (bad) jne (bad) cli xchg xlat (bad) rex.WX insb rex.W and jle imul je or enterq loop add jp rcrb or (bad) or (bad) xchg leaveq sahf addr32 mov (bad) cld stc cmp (bad) (bad) sbb mov stos jp inc pushq cli jg (bad) sub (bad) xchg rcrl andl and iret cs (bad) rex.WXB sbb icebp mov rcrl mov sahf sarl mov shll callq (bad) roll add sahf callq xchg xor scas test fsub sub es and shrl sbb (bad) mov movabs pop lea test or scas (bad) rex.RX rex.B es js ror jnp or mov xchg mov push nop (bad) es xchg (bad) movabs movb rex.B (bad) repnz mov stos xchg mov (bad) add int movabs xchg (bad) mov or jnp sub roll sqrtps fwait and outsl xor fdivl (bad) mov insb push adc jno bsf retq mov (bad) shll movabs punpcklbw jno (bad) mov jb int3 movsl pop sbb (bad) repz cmp (bad) repz ds jo rex.RX xchg (bad) adc xchg sarl fidivr (bad) push cwtd (bad) or mov sbb rex.X roll imul in (bad) or (bad) rex.WB rex.WRX cltd adc mov (bad) movabs test (bad) lods popfq and adc xchg shll enterq pushfq (bad) rorl push sbb cs mov sub loop rex.WRB mov push mov int3 jnp xor int3 (bad) clc cltd (bad) mov sub pushfq (bad) jl (bad) enterq fcoml ror movsb je cmp (bad) adc xlat sbb (bad) (bad) xchg shll scas negl (bad) push (bad) fs jno shll pop jp rex.WRXB rorl fbld adc push and rex shrb out cltd push addr32 xor insb push shll (bad) mov mov rcrl pop js out and jo sbb rex.RX repz outsl cmp shl rcl mov adc (bad) rex.RXB repz rex.B push (bad) add (bad) nop rex.B ss sub rex.WRXB gs retq adcl sahf jns add rcrl (bad) movabs rex.RX xchg test mov xchg (bad) rorl mov loope rol xor scas loop mov mov add lahf cwtl (bad) xchg xlat cmp loopne mov rorl shll (bad) enterq faddp iret push movabs out addr32 cmp sub add icebp shll mov lret loopne pop icebp rex.WX rex.WRB rex.WRXB lahf xchg fs lret add mov jno mov movsl stc jne xor xchg (bad) rcll mov enterq mov repz sbb (bad) callq rex.WR and (bad) or push cmpsl int mov clc xchg rex.WXB mov imul lret pop out scas faddp xchg test rex.WB (bad) jg push mov hlt (bad) rex.WRXB insl iret sarl push (bad) mov xchg in int roll rorb nop sub sbb jnp rex.XB repz fadds push rex.XB iret in add mov pop pop faddp je adc fildll mull adc out cmp add movabs xor fsubrp (bad) or or mov xchg mov (bad) jno mov hlt (bad) out sar or (bad) mov xchg cmpsb jbe (bad) pinsrw pop sti mov addl mov push addr32 (bad) sbb int rex.WXB rcrl or mov mov int3 stos jp xor (bad) fsts fwait repnz pop (bad) imul (bad) ffreep scas mov cmp roll gs lret add out rcll (bad) iret rex.WR pushq jne rcrl lahf jg movabs cmc add test sub or add fdivs (bad) in lret cmp loope sub and (bad) xor movabs fwait (bad) add scas andl inc int3 data16 cmp add movabs enterq cwtl rcll add sarl push xchg callq lods xchg adc mov mov loope (bad) jg imul cwtl inc (bad) mov or in mov rcr mov rex.WRX movabs xchg push (bad) rcrl jg pop negb repnz or (bad) push in andl shll retq jl mov cmp (bad) outsl insl rex.B fnstenv stc mov jbe sub adc pop jrcxz fsubrl (bad) (bad) mov sub movabs cwtl (bad) mov jge jno rex.RB shll adc (bad) stc int3 rex.XB rex.WRB movabs test scas mov fisttp iret cld jne lretq (bad) xchg sbb (bad) xlat rex.WR push (bad) (bad) jb add xor (bad) lahf decl fs lock (bad) pushq shl lret (bad) (bad) ds movsb mov adc nop xchg rex.X adc es mov mov cmp pop cmc pop iret lret add lret and cltd es je imul and (bad) cmp lea mov rex.R adc xchg cmp (bad) gs loop jg (bad) fadd int outsl lcall rex.WRXB in (bad) rol push negl out or mov and add and mov testl or fdivrs jp rex.RX movabs xchg (bad) push outsb cmpsb xchg mov rex.WRB in or imul sub rolb (bad) es repnz sbb add add adc or adc xchg (bad) outsb rex.XB jmp (bad) or test jb sbb sub xor mov rex.WXB fcomi xor (bad) data16 jno xchg rex.WRX xchg test push sbb (bad) (bad) mov rex.WRXB or (bad) add cltd fisubrl lret rex.WB jp xor or sti (bad) mov (bad) jmpq insl scas (bad) xor fild and clc fwait pop (bad) cmp jb (bad) (bad) popq test (bad) mov mov insb clc mov (bad) (bad) in mov jg pushq retq rex.WRB mov cli in jmpq cmp gs test rcr movabs pushfq jg rcr adc hlt stc movsl icebp rex.WRX sbb jne cltd (bad) mov rex.WRXB rex.WRB (bad) mov (bad) movsl rex.WRX jb mov vmovlps jge outsb (bad) rex.B jbe (bad) cmpsl popfq (bad) and mov push imul movabs sbb mov (bad) pushq (bad) (bad) jmpq add es (bad) movsb incb pop movb pop stc ror mov loopne rorb cmp lods rex.XB fnstsw fsubs add (bad) add push cmp mov (bad) jno loope (bad) pushq sbb repnz fildl or shrl fistpll jge int3 rex.WRX push cmp icebp jbe (bad) enterq sub mov (bad) adc cmp or cmp movslq xor add bnd idivl test outsl rex.WRX (bad) fstl jmpq cmp shrl in (bad) test je rclb sbb rex.RX rcrb adc jns fsubrl hlt movsb (bad) lret bnd xchg jae (bad) xlat test (bad) add sbb or cmp sahf and fimul enterq adc js (bad) cmp cltd lahf ss retq repnz mov jp and hlt (bad) out mov fwait movabs repnz xlat mov out jle ror pushq fbstp lahf sbb stos cmp and (bad) jae hlt xchg mov incb rex.XB repnz shll lods fwait (bad) (bad) cmp or jnp movabs mov rex.RXB cmpsl sbb test mov jg cld cmp test shll xor lock test adc push jp mov lret rex.X mov or cli or adc or stos rcrl (bad) fwait pop jae (bad) push lods roll mov cmp mov push and fsubs xchg lods in (bad) imulb movabs gs test outsl xchg fbstp mov mov cmp mov fcmovb (bad) in shll jb add sub scas cwtl add rcrl cmpsb mov mov pushq add stc cmp (bad) cmp jmp (bad) repnz imul and sbbl lods (bad) stc jns (bad) leaveq scas or sarl rcl (bad) lods sarb mov mov mov sub and lret stos pushq adc sarl lods sarl loopne push repnz lea loop xor (bad) movslq cltd adc (bad) (bad) iret or mov fwait mov rex.X jno and stos cmp jae je xadd (bad) and mov insb pop or movsb movabs push push outsl lods sub adc shll mov (bad) mov (bad) push pop movabs rex.WXB nop out pop adc (bad) (bad) jrcxz sbb (bad) xor (bad) xchg sbb addb rex.X roll (bad) faddl mov jne cmp neg jmp (bad) fidivrl adc int3 (bad) cmp callq xchg stc or pop pop rcll mov (bad) stos lock movsl (bad) mov (bad) (bad) imul xor pop ror movsb push fs xor xor insb lret addr32 xor add (bad) pop sub cmp lods adc movabs jmp sbb mov jae mov xchg rex.WRXB mov fsts fisttpl movabs add (bad) (bad) sbb rcl xchg xchg movabs jo (bad) mov pop loope lahf sbb jb jle loope hlt sub mov retq std pop (bad) test (bad) and sub (bad) add imul (bad) adc lock (bad) jb int3 mov (bad) pop rex.R fdivl sti (bad) mov jae (bad) add mov movabs push mov sbb retq (bad) insl (bad) xor outsl pop rorl sub shll cltd out add sub rcll rorl sbbb (bad) xor mov rex.XB rex.RX rorl cmp (bad) pop cmp xchg rex.R addr32 (bad) es movabs and std lret retq adc lock lret rorl adc (bad) (bad) outsl fcompl je rex.X jno out sbb rex.WR faddl sbb callq add loope rcrl (bad) iret pop mov loopne xorl pinsrw mov cli rex.RB pop and rex.WRB rex.B rex.WXB rex.W sub fs scas js adc clc sbb retq or lods (bad) lahf repnz rex.WR pushq fs out test callq rorb pop (bad) sbb xchg (bad) adc iret iret test stos mov xor callq rex.WR fcoms and flds jge rex.RX rex.XB rex.RB cmc rex.W adc (bad) outsl jmpq fst mov enterq mov movabs mov or rex.WRXB sar (bad) rorb (bad) mov popfq cmp jmpq add out (bad) xlat imul mov stc jrcxz sub ss cs shrl pop or loop (bad) sarl cmp callq div adc (bad) add pushfq imul out rex.WRX rcll fld jns rorl testl lock hlt (bad) jo fisub mov shrl cmp out loop lret xor add fwait push (bad) repz cmp shll mov jmpq sbb and cmp pop movsl shrl xor cmpsb int3 imul (bad) xchg scas cmp sbb cli mov sub rcll ds (bad) gs scas pop stc fisub clc xchg sbb loop rcll retq push sub (bad) add loope mov mov (bad) mov add insb test rex.R jp xor mov jb fsubrs adc (bad) xor adc lret cmp rex.RXB jo movsl sbb xor movabs ljmp std xor cmp shll jnp (bad) cmp sbb xor cmp movsl orb stos adc rex.RXB or rcll xchg xor out sbb and ds fldcw rcrl xchg rcrl push test rcrl incl mov cmp add add sbb pop cmp rex.R (bad) rex.WXB mov mov movabs add mov rcrl sbb mov xor or loope int3 cli (bad) cmp imul xchg fs loop fisttpll rex.WR (bad) sub ljmp (bad) push repnz sbb shr jmp (bad) adc xor sbb rex.WB cs lea (bad) in jo mulb rex.WXB cld xchg xchg in cmc (bad) and fwait hlt retq imul shll repz sbb mov (bad) mov sbb (bad) xor int (bad) sti cmp icebp clc (bad) jo (bad) (bad) add jae mov hlt pop pop pop xchg rex.WRB adc sub cmpsb adc (bad) add rex.WRB sbb xor mulb int3 (bad) fmuls in xor and test data16 rex.B push movabs (bad) hlt mov or fucomi adc fildl (bad) (bad) cwtl lret pop cltd (bad) es outsl (bad) mov sbb cmp rex.RXB ror (bad) ja mov insb pop pop shrl rex.R mov (bad) repnz test (bad) rex.B rex.W mov mov loopne,pt std pop cmp xor loope or loop rex.B hlt xor add andl xchg jrcxz rex.RB frstor or xor lret js cmp imul xlat (bad) xchg sub loope sarl cmp hlt and pushfq (bad) lahf rex.RX xor shrb pushq add xchg (bad) imul sub int mov lods decl rorl adc fadd in insb or rorl int3 mov lcall rex.RXB xchg scas test and popfq (bad) (bad) cli cmp jns outsb rex.WX (bad) (bad) (bad) mov addr32 out rex.B mov sbb rex.WXB shrb repnz mov out shr (bad) lods (bad) pushq jbe (bad) rcll movabs (bad) adc xor sub sahf push mov callq mov rex.WRB and (bad) enterq xchg movabs xor cmp and shll (bad) outsl xchg mov push movsl sub mov pushfq (bad) (bad) jmp (bad) fcomps rex.B rex.WRB sub xchg pop rcll fs rex.WRX rex.B mov movslq jmpq (bad) and jbe cmpb lea and adc and xor rcrl and (bad) ja adc sub shll cmp ds sbb addr32 xchg push sahf neg cmp rcll (bad) sub mov lods enterq leaveq add roll retq sub (bad) fadd mov (bad) lret jmp movabs nop cs test out mov mov cs cli movabs in int3 sbb xor mov sar ss cmp rcrl (bad) incl iret push cmp rol lea (bad) mov xchg (bad) (bad) rex.RB sbb pop xor rex.WR or adc (bad) movabs xchg mov iret shrl stc cltd cmc (bad) jg and xchg cli xchg repnz cmc rex.B and sub adc movabs (bad) mov (bad) mov jno shr xchg jne xchg mov (bad) jrcxz je rex adc rol out jns fcmovb movsb stos (bad) and xchg rex.WB lock cs (bad) (bad) push xor out or es pushfq rorl sbb cmp rex.RXB pushq ror cld sub rcll lods xor pop lret cmpsb movabs (bad) mov test rcrb rorl jg (bad) shrl jle sbb xchg scas pop jne cmc stos mov retq mov sbb movabs xchg addl mov lret (bad) rex.WXB and xchg (bad) push fs rex.X (bad) mov adc lock add jno (bad) push sbb (bad) sti xchg xchg in add icebp sbb imul xchg jns (bad) sbb stos add and xor mov (bad) (bad) clc pop xchg adc shrl xor (bad) add mov add add in pop sub shll rex.RXB cli mov lahf in in sti jle add add pop sub jno (bad) (bad) (bad) cwtl jge int or push lock test nop in roll (bad) add (bad) test xchg xor jnp adc sub lea pop xchg adc cmp stc sbb sahf gs ds callq imul pop (bad) mov pop xchg fwait movabs lahf jno cmp (bad) loopne and sbb fstl pushfq jmp insb sub fldenv test nop pop rex.RX jae rex.R rex.WR pop in test nop push imul jns scas jae fstpt (bad) in retq (bad) mov or mov jrcxz adc jmp cli enterq loop loope add lock movabs rcl sub movsb sbb pop (bad) rex.WXB icebp (bad) (bad) lods rcrl in sarl (bad) lea adc mov scas lods repnz xchg loop fiadd jle (bad) fisubr (bad) fildl loope rex.WRX mov movsb rex.RXB add jmp or rex loopne movabs sub mov or out repnz pop (bad) movb jmp rex.B mov pushq mov andb fcmovnbe pop xchg sbb jb pop movslq cmp lea pushq icebp je xor mov sbb cmp sahf or lret (bad) pushq sub pop sub xor (bad) test push jp movabs lea ror add iret incl mov sub mov or mov retq rex loop leaveq jae jp pop out (bad) mov (bad) mov sti xor mov mov shll push loopne push xchg (bad) cmpsl movabs jmp out cli or retq (bad) jb movsb int3 add jno lret jo divb pushfq sbb fadd jl mov or (bad) movabs sub (bad) movslq (bad) xadd add and push nop movabs mov add iret movabs or jnp imul mov rcr (bad) hlt xchg or int3 xchg mov mov mov rex.RX xor (bad) pop loop (bad) adc ror pushfq pop rex.WX sub mov sub test adc xchg rcl (bad) rex.RXB rex.WX cwtl sbb clc rex.R cli (bad) rex.WR rex.X rex.WB cmp fcoms cmp and movabs in sbb (bad) stc rex.RXB retq in repz xor jo pushfq cmp movsl movabs or movabs nop loope push in pop sti cltd rcrl sbb sub rcll (bad) jne or cmpl xchg sbb test mov cmp or je xorl xor mov jnp out mov push movabs (bad) xchg rcrl sub or cld out rcll rex.WX and jge (bad) add (bad) out rex.XB cs ja and data16 test loope (bad) sub rcr cld sub fwait jb rex.RX fistl (bad) cmp (bad) shll xor rex.B test xchg (bad) test jge icebp movabs retq lahf sub rex.RB or mov rorl (bad) jl (bad) (bad) xor stos movabs (bad) (bad) lcall ror popfq sub mov std insl jge add iret sahf jl xchg adc orl movabs rex.WRX rex.WX ja add adc jo mov or (bad) stos (bad) pop js rex.XB fcmovnb jo adc jmpq adc xchg push sub jp xchg nop (bad) cmp fldenv rcl test cmp jle push pop sbb or hlt (bad) push mov fcmovb jg rex.WRX frstor scas stc nop (bad) adc xchg movabs mov jno jl sbb xchg cmpsl jno mov (bad) (bad) fwait pop in roll or cmp imul nop (bad) mov addr32 xchg sub rclb fldenv xlat rex.WX (bad) (bad) movabs imul xor push (bad) (bad) mov push add jp roll sbb mov xor adc mov out pop cmp sub js rex.WRB data16 sarl fsubr cmc jle xchg pop roll and (bad) pop in mov add pop (bad) and (bad) (bad) rcll rex.WR (bad) lret sbb loope rex.WXB stos and rex.W sarl xchg mov jge rex rex.WRXB and mov rorl int3 sub stos mov mov rex.WRX rex.RB sbb outsb rex.RX rex.RXB rex or jmp xor (bad) mov rex (bad) outsb adc lret rclb ds add (bad) rorl movsb rex.RX loopne test rorl ffreep stc (bad) adc rex.WB repnz (bad) jbe test rex xchg (bad) xlat jl shrl jge xor scas (bad) shll mov fldenv adc icebp rex.RB out cwtl rex.XB xchg popfq popfq mov push (bad) (bad) ja (bad) cmp shl clc lret add and jae test and (bad) cmp iret fsubrl js lahf sbb cld (bad) mov clc rex.X int adc pushfq (bad) int3 xchg mov xchg loop jns rorl mov add sahf adc xor (bad) or sbb (bad) jb pop mov ss sbbl ds and xchg (bad) mov fistpl movabs nop or fwait rex.RX in rorb pushq jno sbb repnz (bad) mov (bad) rolq movsb or mov add outsb mov roll mov cs gs lock and jno mov shlb and mov (bad) jo outsb cmp std (bad) cmp mov (bad) (bad) rol xchg (bad) (bad) movabs (bad) lock lret fistl movsb or add sahf movabs and pop lret (bad) in rol jmp mov lret cmp mov movsl fs lock outsl xchg xchg jg pop mov movsb mov sbb lret insb (bad) out (bad) sbb jns (bad) (bad) loop movslq fadds shll movabs movabs pushfq push pop jmpq rex.X (bad) clc lods mov adc cmp in rex.B (bad) je xor rclb rorl frstor jge rex.WRB mov rcrl and rol retq mov clc callq adc sahf cli pushq in (bad) pop jmpq gs jne jle sbb cmpsb pop movabs xor cmc lcall pop int roll or in fs cltd orl rcll idivl mov lods xorl xchg (bad) movb imul (bad) (bad) stos rcll test xchg or int or rcll stc or mov repz jae,pt mov pop add sbb (bad) jbe and rcrl adc or (bad) jo insl ficompl and movabs rex.X rex.WX es movabs xchg pushfq cwtl xchg and iret lods sti loope movabs or sub mov xor push rorl in (bad) mov imul retq sub int fbld cmp pop scas add jrcxz (bad) jo (bad) (bad) jl or cltd mov je add jp sub leaveq jnp rex.WRXB jmpq (bad) sbb scas mov lods fmuls (bad) fstps (bad) cmp fcompl cmpsl add enterq (bad) retq clc add xlat retq mov retq sbb cmp rol add cwtl (bad) mov testl sub lret popfq rex cwtl mov push movabs adc rex.WR add std sub mov cmpsb fdivrs mov pop sti jnp add adc jns add clc add loopne mov rcrb cltd mov gs pop sub (bad) repnz push adc and push mov (bad) jrcxz cmpsb movsl (bad) int sbb (bad) lret outsb mov int3 int mov es fadds add fisubr mov cmpsb add xor (bad) or xchg sub js fldcw mov rol and (bad) roll fwait lock lods rcr mov movabs cs leaveq xchg mov callq callq or cwtl (bad) rex.WB mov jmpq push adc out cmpsb (bad) out or sub sahf (bad) mov (bad) fdivrl hlt rex.W rex.WRX adc iret pop xchg rex.R callq mov (bad) jae cmp push rex.W sbb repz rclb jae insl xchg mov in (bad) addl in sub fwait adc jl mov and xor rex.B (bad) int3 (bad) (bad) xlat (bad) retq pop adc sub (bad) mov movslq or add pop or lock sub jp rex.X test add insb loopne fsubrl or fcomp (bad) xchg add (bad) and test (bad) adc (bad) xchg test movabs subb (bad) sti (bad) xor rex.WB sub lock mov push mov add xlat pushq imulb int3 sub xlat (bad) push lods mov fstps test jl jne outsb (bad) sub rcrb js xchg cmp int3 scas movsb jl fs stos jp (bad) cmp sbb or (bad) cmp ds int3 in sbb loopne xchg or mov xor iret rex.B lea sbb xorb rorl lss clc mov and sub (bad) push out jo mov mov (bad) sbb pop xor test pop lods rex.RXB sub icebp rolb add and jb mov cmpb jle movabs shrb rex.WR adc imul pushfq jae js stos rcl add mov or fcmovbe adc add cmp (bad) sub jmpq clc icebp mov or (bad) (bad) enterq adc push mov rex.B repz fsubs jae (bad) and pop out (bad) rex.W jne sub sbb callq popfq mov (bad) xor jo jb cmpsl gs sub cld (bad) jb test fdivl (bad) loopne jns shll insb in pop mov movsb fsubr sahf jmpq rex.WXB es (bad) or (bad) (bad) push rex.WRX (bad) mov fstpl sub sub int cmp sbb ss rex.RX sbb fwait (bad) rcrl sub rex.RB pop shrb sbb je cmp sub fwait in rex.R jae rex.RB fisttp adc in retq rex.W (bad) imul xor mov xor movabs add and lret mov or (bad) sub repz push (bad) rex in loope imul mov jb mov sbb cwtl xor incb (bad) lret cs test cmp or (bad) or enterq je shr push or fdivs retq stos (bad) and push xlat rex.WR pop ja jle rex.B insl cmpsl leaveq vpand fmul insl stos sbb jrcxz fsubr (bad) xchg sti movabs cmpsl sbb mov ror mov and ja outsb push stc cmpsl cmp shrb push mov rex.RB sbb or jp add int fiaddl adc cmp repnz lahf loop (bad) jo loopne push (bad) test fsubp xchg cmp (bad) out rex.WRB xorl jmpq add lret lret (bad) cli adc out or rex.R es xor rcr ljmp jne adc mov (bad) xchg test adc movabs (bad) lea (bad) fwait addr32 lock mov (bad) loopne fimul sahf ds jg in pushfq xchg rex.WRX cmpsl rex.X sbb jp mov cmp jno jbe xor xchg (bad) fildl jp test loopne adc rex.RX xlat fcomip cld (bad) pop and (bad) fcoml cmpsb push js out out rex.XB (bad) jrcxz ja pushfq ja xor sbbl movabs (bad) rex.WR rex.WRB mov jl je fstp cli (bad) rclb or rex.WXB mov sarb jae sub adc out enterq fdiv rex.WRB movabs test testb adcl mov add xchg (bad) pushq adc mov (bad) sub pop and rex.WRX xlat and cmp or xchg int3 cmp shll fwait sub and or (bad) sar outsl (bad) jmpq rex.WX pop fwait hlt outsl shrl mov js rex.WRX rcrl shl cmpsb (bad) and xchg movb mov nop (bad) adc jle stos adcb jmp mov negb rcrl test mov addr32 in fmull fst jp and jnp movslq pop or out loopne add xchg adc nop add movslq or loopne add (bad) mov (bad) data16 mulb xor (bad) flds sbb pop (bad) cli insb imul icebp xchg xor movabs rex.X (bad) xorps movabs mov (bad) outsl xor rep xor (bad) fs pushfq xor test callq cmc lods lods rex.WR add iret je lock stc (bad) repnz adc test int3 sub or lea out pushq std mov rex.R cwtl movsb lods lock xor retq adc loopne (bad) adc lret mov addr32 rex.WX lret fs sar rex.R rex.WX rex.WR mov jl idiv rex.XB add (bad) and leaveq clc cli (bad) repz rol pushq (bad) idivb adc (bad) sub lret loopne (bad) shlb loop fildll rex or (bad) sub xlat (bad) cmc mov pop idivl (bad) loope mov add (bad) mov adcl xor cmp ror xor retq cmpsl add (bad) xor jmpq jo loope mov mov sub jns xchg fstpl mov or jl sub mov out adc (bad) sbb lock jae out cmpsb mov out fistl (bad) out cmp incl pop jae pop sub pop mov rcrb in (bad) movl stos imull stc in rex.WRB cltd mov cmp (bad) mov cmpsl jrcxz in xchg or cli pop (bad) mov je fisubl fucom xchg sub (bad) cmp (bad) cmc cmc (bad) jle mov fisttp push fildll movabs (bad) lret ja (bad) sahf enterq add rex.RX mov (bad) cmc mov or xor (bad) (bad) mov sbb xchg adc ds rex.RXB or add stos outsl (bad) xchg xor roll stos movb jnp jne rex.WX and stc cmc mov push or lret sbb shrl mov (bad) jno insl xchg (bad) movabs mov movslq (bad) out gs rex.WXB rex.B cmp adc retq push leaveq fs sbb out rcrl stc in (bad) shll mov and sub push scas (bad) test shll imul (bad) roll outsl cmp lret jp adc mov mov rex.RXB mov or jrcxz push mov jns (bad) (bad) add rex adc mov lret in add pushq shll xchg mov repnz insl sub xlat movabs mov mov mov popfq (bad) fwait mov movq add icebp jbe (bad) (bad) scas lea sub sub int3 out stos (bad) cmp jae mov imul out fbld iret mov sbb add (bad) addl rex.B mov xchg mov rex.XB rex.WRB rex.X rcl sbb sub shrl sub shll out pop (bad) mov in add mov ja mov pop jrcxz sbb (bad) pop rex.B xor shll xor adc jnp (bad) ja movsb cltd xor fwait jle (bad) sahf xor adc mov cmp pop rorl sub addr32 sub adc xor int3 sarl rex.WX sbbb rex.WXB fs (bad) xlat cwtl (bad) or (bad) pushq add (bad) test xchg lods xor xchg cmp mov mov rex.WB rex.WX rorl shrb vcomiss js ja fldln2 movabs mov xor rex.RX push (bad) (bad) (bad) imul adc xchg mov xchg rex.RXB rex.WXB test lahf (bad) xor fnsave (bad) mov xchg xor jb jns rex.B mull push (bad) fwait out (bad) (bad) and lods sbbb movabs sub (bad) int rex.RXB mov push stos fmull (bad) icebp clc push (bad) callq sub xchg (bad) jae repz divl push sub rcll add xor loop int cmp mov mov pop rex.WB je (bad) jne (bad) mov retq es movabs mov (bad) (bad) in mov adc mov in sarl frstor subb xor sub (bad) lret movabs mov (bad) faddp rex.X rex imull movabs or rex.XB sub rolb fwait adc jo xchg (bad) movabs cmp mov movabs push lret adc cli movabs sar pop scas rex.B mov sub popfq cmp cmp rcrl xchg sti repz add xor (bad) jno loopne rorl sub (bad) jne pop out (bad) jae mov add (bad) sbb fsts and (bad) rex movsb shr pop rex.WX xchg insb sarl imul icebp (bad) movabs adc sub movsl (bad) pop and rex.WRXB rex.B pop popfq sbb (bad) mov rex.B jb jo jmpq push test out mov cli lahf hlt cwtl mov stc push je add stos rex.XB add (bad) lods mov add pop mov mov sub jae lods rex.WRB shll enterq ror out xor cltd push shl callq in sarl lods scas (bad) or jg fldl lea sbb lahf (bad) pop jb rex.RB or pop jg sbb (bad) rex.RX mov test rex.WB out rcrl ds push and (bad) cmc sahf add (bad) jne cmpsb popfq decb cmpsl mov adc add mov push lret fadd xchg loope (bad) cmp shr or pushfq rex.RX add sbb popfq mov repnz (bad) gs jne mov shll xor rex.WR adc stc rorl sbb or es enterq shll (bad) int clc xchg (bad) push movabs sbb cmp movslq xchg (bad) mov test xchg pop (bad) or mov (bad) (bad) xchg shll rex.WB rex.RB shll rex.X (bad) int3 fwait movabs test cmpsl jl xchg outsl pop repnz callq fs mov outsb ficoml xor shrl mov sbb mov xor xchg out cmpsb rex.WRB lea pop jo xchg (bad) mov cmp mov add cmp (bad) rex.WXB rorl iret fsubl cltd xor jmpq jmpq outsb and int adc rex.RB retq fs rex.W rex.WXB (bad) pop mov cli cmp test adc jno sub rex.WXB ds popfq nop jmp xchg (bad) jrcxz push in std sub jbe sar loopne cmp jno rex.WXB (bad) mov ffreep jne ds pop stc sub shl cltd fisttpll lea jae and rol rex.WRXB test fsubl or je push (bad) cmp test rex.B mov and jno or xchg mov (bad) test (bad) fidivl (bad) mov mov sub add rex.WXB and mov enterq rcll (bad) sbb insb movabs and cli jae rex.WX xor sbb mov test rex.X (bad) jae out loope adc sarl stc ss jb pop and (bad) sub add jge sbb (bad) mov cmp rcll gs test hlt xchg adc sbb or rex.B adc add mov sub (bad) jo or jne rex.RXB icebp (bad) loope rex.WR insb rex.RX vpor push clc mov and loop pop rex.B jl (bad) xchg or shll rex.WXB mov (bad) mov rex.RX pop (bad) pop (bad) int3 sarb push sbb rcll movabs (bad) rorw (bad) mov xor ss adc movabs cltd loopne cmpsb iret xchg lahf (bad) movabs cmp repnz ror movsl jge adc addr32 (bad) repz xchg idivl (bad) cmp in cmp nop xor sarb push (bad) fistp cs loopne rex.WX adc fwait cmp mov enterq mov sbb add (bad) es icebp mov (bad) mov mov imul sbb cmpsl clc lret mov xor pushq mov jbe int sub jne adc in rolb rex.WX mov (bad) sub sub test movsb (bad) movabs mov add idivb (bad) movsb imul add leaveq mov (bad) rcrb (bad) fcmovnu and retq test fisubr xor rex.RB rex.WXB std jns xchg fstps xchg outsb rex.X movsb mov adc loop gs push jmpq cmc repnz (bad) adc and fcmovnu (bad) adc (bad) rex.WRB repz test sub mov imul rex.XB loope and (bad) and mov adc (bad) rex.W pop mov rorl enterq loope or adc jg mov (bad) rorb decl (bad) xor out je pop adc idivb retq (bad) test (bad) in rcrl pop and test sbb stc jns cs mov mov sub outsb xchg (bad) imul xchg jnp loopne outsb out insl mov rex.RB cmp mov frstor (bad) (bad) xchg retq or cmp roll (bad) movabs (bad) xchg xor fstps (bad) int pop jge mov rex.X movabs outsl rex.RB (bad) xor je sbb (bad) mov adcb cmp add je rex.WRX roll push mov rorl rcl jns pop testl adc pop negb outsl fldt (bad) rex.WR (bad) sbb add mov out (bad) (bad) (bad) imul cmp loope jle movabs sub jb (bad) jne leaveq mov (bad) int3 pop (bad) in xchg sub adc sbb testb flds repnz rex.RB fscale in add mov addr32 movabs push sbb mov scas push jmpq (bad) sbb insl addr32 bnd rex.RXB test test test subl repnz rex.WB in sub sbb mov cmp (bad) sub jb in jno ror sbbb nop xchg sub movabs add mov xchg cmpsl test sbb fisttpl xor cmp mov fwait add loopne or add repnz in and int data16 xor (bad) (bad) insl test test fwait rex.WX or (bad) (bad) mov push (bad) test xor test xor cs cli popfq xchg movabs xchg or movabs jae stc rex.XB push fcmovb xchg movslq jmpq in and mov jg movsl cmp movslq adc add fnsave in cmp rex.XB pop testl mov (bad) sub movabs mov xchg lahf sbb xchg (bad) mov mov rex.WR cmp and jp (bad) jrcxz mov retq ds mov xor or adc sub in test push iret (bad) adc loop movabs add icebp test (bad) (bad) rex.WRB lock in mov jnp xchg pop test or xchg movabs test adc mov in gs push fwait push and cmp movslq (bad) enterq cmpl and retq xchg (bad) (bad) cmp neg out xchg jge data16 adc push ss sbb xor repz test jno xchg callq test push sbb andl loope mov rex.WXB fs (bad) rolb rex.R (bad) rex.W pop test imul sbb repz cli add mov lea add movabs (bad) (bad) (bad) add (bad) mov test add rex sub or out and pushfq ja (bad) (bad) push imul rex.WXB jle lock ss pushfq in sbb (bad) jmpq add int3 rex.RB or or out negb sub fcoml xor loopne stos mov test test (bad) jl sub pop add add mov mov (bad) xchg cs stos stos fstpl mov sub test (bad) jae jmp add pextrw pushfq (bad) rorl (bad) (bad) sbb scas lret pop cmp pop (bad) push fnstsw movsb xor xchg in insl rex.WX rex.R ss xchg rolb (bad) and or cmp movsl (bad) xchg push (bad) repnz adc jle pushq out retq rex.WR mov (bad) push mov mov pop sub cmp jns pop xor (bad) (bad) test add rex.RB fidivrl fldcw (bad) sarl (bad) enterq movslq rex.R mov (bad) jmpq fldenv lods adc mov (bad) ss rorl fwait test rex.B xor js mov sbb pop sub (bad) mov xor roll jge (bad) mov or andl (bad) pop lret (bad) rex.WR rcrl mov ja rcrb (bad) incl mov add rol rcrb sbb rcr (bad) outsl outsb sbb pop movabs popfq push rex.WRX fisubr int3 test jnp in movabs (bad) jne rex.RX decb xchg push sbb rorb lea adc (bad) roll sbb rcrl in repnz pop fisttpll iret (bad) or test xchg sub rex.WRXB (bad) je jmp mov std and or xchg (bad) (bad) xor outsl pop pop stos jg push rex.W (bad) ds clc popfq cmc js rex.XB lea mov xchg sbb xor sub in rex.WRXB stc (bad) cld pop fwait push sbb xchg or xchg fdivrs mov rol sbb (bad) sub sub (bad) je (bad) rex.WXB lock popfq out xchg add scas add stc callq (bad) sbb and mov rcll or cli mov (bad) rcrl (bad) jno mov xor jmp mov lahf es xchg and or (bad) mov cmp pop vpermilpd add cmp sti leaveq ds cmc or js in mov xchg stos sahf rcrl data16 mov int3 pop xchg loop xor lret sarl loope and (bad) fiaddl rex.WR push movslq mov enterq (bad) rex.RB movsb rex.WRXB loop subl xor xchg jp and lret push stos xorl (bad) rol rex.WR rex.R sahf push (bad) rex.B retq sub stos imul push (bad) sub fcmovnu (bad) jb add or rex.X in mov cmp cs sub cld jnp jns jle cmpsb in mov callq fstl insl sub notb roll (bad) (bad) es (bad) shr (bad) mov retq movslq int3 jmpq xchg out pop push movsl rcl popfq mov rex.RXB jge shrb stc nop out pushfq xorb iret mov in pop (bad) add and loopne cld sbb mov and sub js pushq stos xor cmp jge out movslq mov sub sub cs (bad) rcll or ss push pop test lret vpunpckhqdq movabs (bad) fwait retq pop and std push xchg sub rex.RXB mov iret out add sub mov imul mov xchg fs adc lods xchg ja jb fbld sbb mov es mov push loop xchg (bad) (bad) and (bad) adc and stos (bad) xor retq lods sub (bad) jne js out enterq sub popfq rex.WR rorl mov lods (bad) callq pushq rol int3 jp mov mov or add rex.RX add movsl iret push lret sbb cmp sub rorl iret xchg xchg adc rorl (bad) movsl push fisttpl add mov (bad) mov jp cmp loope cli stc mov mov sub push (bad) and xchg pop cmpsb (bad) shll cmp js sarl and loop imul cmp or rex.WRX sahf fisttp (bad) inc mov jge cmp (bad) sbb iret lahf rex.WRX push (bad) jno (bad) int3 (bad) jno repnz mov (bad) test and clc sarl pop xor push mov lret fnsave test fildll cmc shll mov repnz in fld fadd mov xchg lret sub rex.XB pop and (bad) xlat mov fldenv mov or (bad) mov lret rex.RXB add cmp std insl sbb mov cli or mov (bad) push mov rex.RX (bad) (bad) repnz retq stos (bad) push fistl xchg imul lahf imul movabs mov xor rcr (bad) (bad) xor out push (bad) int (bad) jnp xchg loopne cmp divb rol (bad) jns pop hlt (bad) (bad) movabs rex.XB xlat std adc mov xor fwait mov lret jmpq in (bad) in lret vmovaps int fidivl cs cwtl movsb pop repnz sub sub pushfq or callq jmpq sub fldcw and shlb repnz pushq mov (bad) mov mov imul retq xchg sti cltd stc add lret rcrl xor rex.B fwait popfq mov pushq mov or mov retq lea xor imul add nop movb and movabs lea movabs stc rex.WR movabs lea (bad) rex.R mov (bad) (bad) pop mov fcmove push push (bad) retq test repnz movsb (bad) sub rex.X fistpll mov (bad) jno (bad) repz fsubp add add mov mov jns leaveq imul lods retq xlat sahf sbb or (bad) jae movabs int3 enterq in insb lea mov xlat loopne fiaddl (bad) lahf mov xchg (bad) (bad) adc rex.WXB fstpl or lock adc vpbroadcastb lret lods rep (bad) xchg stc cmp repnz mov (bad) jo rex.WXB adc cmp mov leaveq int (bad) rex.WR repnz lcall sub mov rolb shll adc fbld pop rex.WX adc movslq hlt (bad) leaveq enterq lret stos loopne and xchg lea jbe rex.R cmp leaveq add in jrcxz callq cmp fadd cltd push mov add or (bad) (bad) adc jne cmpb sub cmpsl stos (bad) mov pop xor jl fsub rex.B lock mov int3 mov xor imul shr out leaveq enterq sub loopne imulb fidivr iret nop sub (bad) adc or (bad) jg (bad) lods xor (bad) fdivrs xor popfq pushq (bad) adc or test (bad) retq xchg push test cmp movsl test in orl out (bad) mov fs (bad) loopne lret cmp pushq cwtl fstpt sbb callq movabs rex.WRXB fstpt jne jmp jge icebp or push shll je div icebp hlt loopne,pt lret (bad) cmp retq scas pop fld fs xor (bad) retq rex.WRB nop xchg outsb mov hlt rex.R or rex.WB mov leaveq mov sub xor xor vpaddd orl (bad) push sub pushfq popfq jno movabs repnz mov insl hlt sub rex.RX jno add fcmovnu (bad) lea stc rex.RXB test sbb jno adc (bad) or sbb out (bad) jno cmp jo (bad) movabs imul sahf jnp movabs mov mov add rorl std (bad) xorb in fisttp fs cld jg lret mov (bad) mov xchg sbb sti std (bad) sub add fisttpl int3 imul pop xchg (bad) outsb shll cld add test out outsl out rcrl in cmp int (bad) pop xchg scas mov xchg js roll add (bad) (bad) push mov push xchg cmpsl pop sbb in iret and sub (bad) (bad) rex.WXB rcr movslq cmpsl mov cmp or jno stc cmp mov xchg (bad) xor in xor callq or and test int3 push (bad) sarl repz (bad) andl out cmp push adc pushfq push (bad) popfq mov and xor in test ja (bad) stc sbb pushq not pushq stc mov scas rcll jae xor pop rcll adc fld add (bad) and loop add push testl adc xchg (bad) (bad) xchg addr32 mov imul sub or fsubrs rex.RB scas test and and push jg (bad) callq (bad) roll jne sbb sti sbb repz push insb mov adc rorl cmc (bad) rex.WB mov sti movabs cli movabs adc pushq enterq pop shl and cltd sbb shrl ljmp stc push jmpq mov loop xor (bad) sbb or push push (bad) (bad) fimul mov (bad) (bad) movsb sub cmpsl rol callq int3 xchg cld (bad) jmpq retq adc ss movabs (bad) add jno ds repz rex rcll pushq add fisub add test leaveq rex.WRB loop (bad) push out mov pop clc loope (bad) sarl repnz loope cmp movslq nop xchg rcrb fcompl cmpsb cmp (bad) hlt rex.R rex.RX lock mov xchg jmpq bnd rex mov cmc add data16 and rol loop rex.B rex cs lret (bad) roll pop push (bad) ror rex.RXB retq (bad) sahf (bad) shll cli or (bad) (bad) lock mov out mov (bad) clc pop pop sub add movabs lret repnz (bad) (bad) enterq shrb (bad) add sub jp (bad) add (bad) pop mov (bad) (bad) clc ds ja rorl movsb rex.R xchg xor rex.B in or rcr or mulb add (bad) sbb sub fld (bad) std or movabs mov rex.RB rex.WRB movabs movabs rex.R es movabs cmp mov cwtl xor and mov (bad) scas insl or movabs movabs sbb pushq movabs lret es ds xchg lods rorl shlb ror mov cmc pop pushq cmpsb outsb loope add mov mov scas in inc cmp imul in jne (bad) or pushq xor or movslq subl xor jle (bad) xlat sub and and mov leaveq in fdivl iret insb jg (bad) movabs jo and rorl mov mov adc (bad) shlb movabs mov test es fwait rol xchg test jbe xorl (bad) icebp mov (bad) sub rcr mov (bad) (bad) jbe or and ffreep jno or mov divb cmp cmp mov retq mov stos mov xchg and repnz movsl pop add movabs lods mov and mov retq sbbl mov jmp mov mov leaveq stos sarl sub sbb repnz adc movabs (bad) pop rex.X sarl and (bad) or int3 xor stc jno add mov jns sbb mov add shl add lret rex.X mov (bad) (bad) mov sbb (bad) pop jno mov sbb mov push loop mov jb (bad) mov jl adc roll cmp (bad) nop or push add test pop mov (bad) ja rex.WR je or (bad) sub (bad) jnp loop fisttpl fmulp cmp movabs flds mov retq movabs test add mov or fstpt pop mov ficom loop rorl lahf lods ficompl stos roll stos insl add cld (bad) lods and movsb cmc (bad) sbb loopne xor jbe gs pop (bad) and jge addr32 lods iret mov outsl (bad) repz retq nop icebp and cli stc push fcmovnu jge (bad) mov (bad) mov (bad) pushq cmp sub sub jge cmp (bad) repnz or (bad) (bad) popfq mov xor xlat xor jmpq pushq xlat xor xchg rex.RXB rex.WRXB mov add push (bad) popfq (bad) (bad) sub sub add cmp adc sub or jle add jg sub fadd fsubr rex.RB cmpsl pop (bad) xchg mov imul int3 add and addl rex.R rex.WX (bad) sahf mov xchg or push (bad) xor insb rolb xor pop xor lahf rolb mov xchg (bad) and rex.RB xlat outsb xorl loope sub mov sub cltd roll add xchg mov test push movabs mov in in rex.RX enterq mov enterq test rex.WB rex.RB (bad) sub movabs mov data16 adc sub sbb cmp xchg pop sbb outsl iret push adc (bad) rex.WB cli cs (bad) lret rcl and mov pop xor xor (bad) lret stos mov hlt sub (bad) pushq mov sbb sub (bad) (bad) sarl jge lahf cltd adc movabs addr32 (bad) sti mov movabs mov add mov clc sarl lods (bad) and xor (bad) rex.B rex.RB mov int3 (bad) (bad) js mov adc fcompl outsl lods loope movabs jle rex.WXB movabs xchg add sbb pushq sub sub xchg jno sti or stc movabs sbb jge push xor pop shr or xchg (bad) mov rex xor jne rex.RB testb (bad) (bad) rcll sub adc mov int xchg sbb fidiv jb xchg js lret in or or iret jmpq (bad) sub cmp rcrl jno sti fisttp sarl std imul (bad) testb movabs mov in lret sub rorl cs dec sbb or rex.B shrb sub adc push rex.XB int (bad) xchg push cmc add adc mov rex.WRB js (bad) test pop cltd jp (bad) sbb pop loopne fcmovu loope loope negl jge cs (bad) adc jl negb (bad) sbb jnp rex.RX sbb add jns sub xchg rcr mov sub add rex.WRXB insb (bad) jns enterq (bad) (bad) in pop js xor xchg jle cltd movslq or mov fcomp xchg and stos pop jno jg adc vrcpss add cwtl fisttpl (bad) add lret mov adc enterq sbb pop sbb enterq rex.X rex.R cwtl repnz (bad) notl movsb mov andl add lahf (bad) test (bad) cmc (bad) rex.XB rex.WRB in push test xlat sub (bad) or clc pop subl or cli fistp or mov testl mov xchg mov callq hlt cmp add jb xchg add fcos shrb xchg cmp fmull rex.R callq xor imul test (bad) sub clc jns ja add out fnstcw mov stos (bad) out retq sub (bad) rex.W sti js andb iret (bad) test out cwtl sahf rex.RX rex.X lea sub mov shl retq pop out fcoml pop jrcxz movsb js and fwait xor rex.WRXB cmp (bad) movl movabs repz (bad) test rcrl sub rex.WXB pop jg jg,pn movabs retq mov (bad) (bad) sahf lahf repz (bad) shrl mov mov jno cmp out test fildl (bad) imul fsts fdivrl add push test clc enterq test gs pop ds (bad) clc rex.X rex.WX (bad) pushq adc out rex.WR xchg mov push rex.WRXB jne movabs (bad) lret sbb test shrl (bad) rex.WRB and cmp (bad) adc faddp mov and pop incb jbe pushq mov (bad) or adc callq cld pop imul adc hlt (bad) clc fsubr (bad) je xchg pop loope lock (bad) mov fstl movabs add xlat rex.WX lret sar fs and push test andb in test jns popfq pop scas or fnstcw shrl (bad) shr (bad) mov stos movabs movsb (bad) int3 scas cld add stc cmp mov out pop rclb (bad) jge or rex.RB rcll (bad) js pushfq add jbe rex.WR lea rex.RX addb mov movsb roll jns (bad) sub mov jl movabs rex.WX xchg lret push hlt adc sbb jp jl jl mov retq rex.RX imul cld mov pop sub stc rex.B adc pop sahf rcl sbb stc (bad) or (bad) movabs shl and imul stc jae movabs and mov (bad) movabs jae lret test out (bad) sbb xchg loope cwtl sbb (bad) js subl rclb cmc pop test iret fldt stos cwtl sbb cmp jp pop movabs jg rex.B lock push and sbb cmp and ds rorl rex.XB xor (bad) (bad) pushfq (bad) mov cmpl shll rex.WXB iret pushfq add rex.X adc int3 pop xchg callq jns mov mov rex.XB rex.WR sbb jns and insb mov pop callq xchg adc or push fcompl sarl mov rorb (bad) (bad) in or pop ja pop sahf out push rorl shlb rex.WXB jne (bad) (bad) (bad) cmp (bad) insl jge stos negb lret (bad) lahf rex.WRXB ror out decb xor push jnp or mov (bad) xchg lock add push faddp rex.B scas pop rex.RB rex.XB in sub (bad) clc (bad) es pushq fnstsw pop (bad) iret fs mov (bad) rex.R mov cmp nop jrcxz loope jge rex.RX add jb fs sub or mov outsb popfq sbb and in gs (bad) rex.RX rex.WRB loope sub sbb push rex.B out outsb or mov add loopne or (bad) lret repz jmpq pop xchg xor (bad) shrl rex.WX cltd (bad) add or xor rorl outsl std out rex.RB lods (bad) jbe fs andl (bad) rex.WB rex.WXB add repnz rex.RXB mov mov (bad) xchg cmpsl (bad) jmpq (bad) sar or ror lret and (bad) cmc mov rol jns cmp ror addr32 rex.WB lahf test (bad) mov rex.WB xchg hlt rcrl rex.XB mov (bad) jns and icebp out jg hlt (bad) sbb (bad) add cmp add xor pxor jnp cs xchg xor ds mov or mov (bad) int3 (bad) xor (bad) xor xchg repnz (bad) jmpq (bad) nop cmp movslq cmp rex.X xor push retq imul (bad) (bad) sub mov callq icebp jg stc fisubr rorb jae fildll rol fistpl xor rex.WXB add repnz loope pushfq pop in repz out adc enterq add hlt cld adc xchg outsb fdivp xchg jmpq mov in cmp (bad) sarb xlat cmp rex.B adc lock movslq rex push int3 mov (bad) cld cmpsl jo adc sbb (bad) mov (bad) xlat (bad) (bad) clc rex.WX sar (bad) outsl loope jae (bad) or test rex.XB (bad) callq or rex.B vpslld jle add xchg adc int3 in pop xorl push (bad) and rex.WB int3 out ds js fcoml fidiv xchg in hlt add mov roll sarl iret enterq add xor (bad) (bad) push (bad) cmp and and and clc adc stos mov fimul insb cmc sbb int ficoml cmp pop or cmc rex.WRXB stos xchg test jo shl (bad) ja lret loopne hlt (bad) sub rex.RXB lret xor pop cmp dec sub (bad) callq (bad) mov (bad) fistpll fistpll pushq adc rex.WRX cmp test clc outsb popfq xchg enterq fist fisubrl rorb stc insb movslq retq lea xor sub (bad) adc int sbb mov add in xchg rex.RB mov test add xchg callq or fcom mov js imull xchg sbb loop (bad) or fdiv js sub ja and incb (bad) sub rorb (bad) (bad) idivb push add (bad) sub cmp rex.RXB mov xchg and jne and xchg andl popfq ficoml (bad) (bad) or test shl add xor imul xor fsubl pop std lret pop push enterq jmpq (bad) and int3 and (bad) ss rclb xchg xor jl pushfq (bad) jg add mov push (bad) in jle (bad) int3 (bad) adc mov mov sbb callq int fild retq (bad) popfq mov and cmp test and outsb test icebp (bad) je (bad) insl pop (bad) rex.WX lock stos rex.WRB (bad) fdiv mov (bad) xchg sub fs or vmovdqa retq sbb mov pop mov (bad) fldcw adc movb pop enterq jnp jno scas push loopne or xchg adc lret jne loope nop cmp in jmp mov clc add xchg (bad) xchg pushq lret xorb xor out lret jo stc test test sub sub xchg and rex.X rex.WRX or sbb add es rex.RXB (bad) add adc mov test shrb add sub movabs (bad) mov mov rex.R rex.B ja (bad) mov push jl sbb sub jne loopne cmp (bad) add pop (bad) jbe add (bad) jne hlt leaveq and loope rex.W (bad) mov jp fnstcw repnz (bad) push fwait and push jbe mov xor sbb rclb (bad) push callq mov sahf test sub shll (bad) retq ja outsl or andl cmpl sub pop iret xchg fisttp xor rex.WRX sbb rex.WRB (bad) push sbb jns (bad) movabs xor lret enterq adc loop jp add pop xchg cmp sub mov shll rex.WRB test xchg test incl mov rex.WR out movsb fwait ror test pop out rex.WXB mov pushq repnz out sarl pop push push insl lret jmp xchg push jno scas pop cli pop sqrtps (bad) lret sbb imul rex.XB rex.RXB add xor mov or xchg subl or push (bad) mov mov xchg orl (bad) pop rex.WB xor (bad) fdivrs idivb (bad) (bad) add push and rorl (bad) jae ror adc (bad) test imul lahf sarl or sbb fbld push jbe xor rex.WRX lahf iret out fucomi or rex.WR movslq (bad) cmp retq test scas pop jp (bad) rex.W jo sub sbb mov (bad) (bad) cs cmc lock jno mov retq jp xlat test loope cmp flds mov (bad) (bad) ss push mov xor jmp mov fstl out (bad) rex.W addr32 movsl pop imul pushfq test (bad) stc rex.WRB rex.X rex.RX movabs cmc push rex.WRX rex.WXB rex.WRX roll (bad) sbb ficom adc fildll testb es rex.RX xchg jae xlat in rex.W cmp (bad) (bad) cmc jp int xor mov jmp sti icebp (bad) xchg mov push add mov js sub and (bad) and mov loope rcrl pop pop sub xchg in iret pushfq rex.WXB and (bad) data16 add popfq xchg or out rex.XB mov sub mov xchg ja jne sbb xor mov sub xor add ss sbb (bad) orl loopne rex.W stos fstl jmpq cli cwtl imul movabs sbb mov xor pop test (bad) sbb addl adc (bad) jbe addl mov (bad) subl test or mov mov or lret fsts push mov jno jrcxz add movsl icebp jmp repnz mov insl hlt cltd out pop fidivl sbb push loope enterq mov adc sub mov rcrl cmpsl ss jno mov (bad) repz (bad) idivl cmc fcoml pop js (bad) cltd (bad) xlat mov cmpsl rex.RB gs sbb rex.XB xor sub test (bad) jle repz ficom sub jrcxz (bad) mov cmp in js sub rex.RB lods jge mov (bad) jb sub cmpsl fldt xchg mov mov gs rex.R popfq scas lock jo (bad) lret iret fcmovnb jbe fs mov addr32 sbb jg (bad) test jrcxz (bad) imul jg sti (bad) push jp jae sub (bad) outsl xchg mov rex.RB pop (bad) imul and loopne push mov sbb add sarl out sbb and rex.X mov notl mov xlat (bad) cmp (bad) popfq gs push push movabs xor and xchg shll (bad) jbe incb rolb rex.WX movb rex.WXB shll (bad) (bad) push xor sub sub cld retq rex.WRB xchg movabs hlt mov iret cmp rex.WXB mov repz lret js cmp sbb rex.XB or scas cmp scas jg or pop stos add imul sarl adc (bad) fild jbe (bad) shl rex.WRXB sbb imul rep mov xchg (bad) iret nop rex.RXB rex add xchg cld or cmpl (bad) sub adc pushfq rex.WR (bad) pop gs lods adcl push fistpll push adc rex.B movsl retq cltd int3 and callq fidivrl jno and (bad) mov and adc jbe (bad) xor scas loop cmp adcl fild sbb lret rex.XB movabs push rcrl or repnz int3 incb rcrl (bad) in out pop sbb (bad) jb fwait adc test jne andl rex.WXB add xor lahf pushq lock adc loope jae cltd xchg insl rorl mov sbb clc (bad) adc (bad) mov iret (bad) jge rex.R mov clc and or cld (bad) rolb movsl xchg and sbb jnp lret pushq add test (bad) (bad) cmpsl rcll mov xchg rex.WRXB lods repnz fildl mov lret (bad) mov retq xchg push (bad) xchg mov pop test fldenv mov push (bad) out test fidiv rex.X retq mov mov fwait (bad) rcll sahf and jae decl fcoms rcrl xlat callq sub and or and sub mov insl cmp (bad) (bad) (bad) sbb lahf push xor lret test and rex.WRB (bad) insl cmp sbb (bad) (bad) (bad) repz jno adc pop ficomp jle negl fnsave (bad) rex.B rex.WB insl std vrcpps (bad) (bad) and (bad) loop fisttpl shrb test jmpq fwait (bad) fistl (bad) jl sub loope or sahf and (bad) icebp movabs adc test mov rcll xchg cs sbb cmc gs sbb imul (bad) mov stc xchg adc out rex.RB movabs (bad) xor xchg imul rex.RX ror cmp add sbb (bad) jne clc fs lock xor test pop popfq mull push scas retq imul (bad) xor mov mov xchg xchg rorl out sub retq cli (bad) (bad) sahf sar cmpsl mov lods rorl mov mov pushq rex.WRX xchg lret pop loop (bad) sub out fmuls mov lret mov lods sub rcl mov xorl rex.W xor push sub cli movb test mov lret int3 (bad) cmp (bad) mov movsl xor (bad) pop cmpsl push add loopne test test cs jae push (bad) (bad) (bad) rcrl jp xor imul jmpq (bad) push lret jns mov (bad) cmc xor sub (bad) shll negl adc sub sbb test (bad) (bad) out scas fbld pushfq rcr cmp cmp rex.R rex.WX rex.RB test mov (bad) addr32 xor (bad) jne ficomp retq cmp push (bad) outsl int3 loope or movabs repnz movabs fnsave (bad) or jbe xchg (bad) (bad) rcrb (bad) jb (bad) add adc adcl rex.X outsl loopne sub add movabs mov cmp xor rol addl shl setno shll push cmp mov cmp fidivl fcmovnu (bad) xor cmp push (bad) cwtl stc mov faddl rcll int hlt subl shlb repnz adc shll (bad) and push stc out cli lock repz or sarl fwait iret sub push and (bad) (bad) (bad) (bad) jbe leaveq adc std test fwait pushq (bad) jg out rex.WRB lock (bad) rcll mov cli or retq cmpsb xor pop stc add in gs mov (bad) add mov (bad) fs rex.WRXB and icebp rex.XB mov scas mov sahf test icebp in xor jge addr32 movl rorl fs retq in mov push shrb outsb cmc xchg lret sub popfq xor xchg fucomp xchg insb jno push or sarb and icebp ja or (bad) push or (bad) gs sbb mov outsl xchg rolb enterq jae add fiaddl jo in rex.WRX rex.RX mov (bad) outsl cs rex.WRXB add jl movsl xor xchg jmpq loope jo (bad) loop cmp rex.B clc jrcxz jg retq (bad) mov sarl xchg adc test sti xlat movslq roll fldl outsb adcb pushfq rex.WRXB enterq or mov (bad) or insl (bad) test xchg sahf mov fisubl rorl xchg cmp add lret retq and or adc shlq push rex.WRX sub shll sub leaveq (bad) cmp jle rex.B int3 sub xlat (bad) mov fs jo or icebp (bad) leaveq repnz or adc sbb and rex.RXB rex.X mov pop jno (bad) and xor mov callq sub pop mov sub stos lea lret std iret and mov test cld movsl mov mov sub fadd fildll (bad) in test pop movabs jne jbe cmc (bad) hlt (bad) cmp xchg push rex.RB push and rex.RX lahf (bad) retq lret (bad) fldenv cmp xor ror mov adc repnz movabs rcrl push cmp fidivl and mov sub xchg (bad) sbb rex.W rex.WB ss sti add xchg cmc add (bad) pop push movsb mov lods rolb xchg adc rcrl mov repz or mov mov fnstsw cwtl (bad) mov push rex.W addr32 (bad) xlat es in xchg push adc pop movabs enterq jns (bad) jbe idiv rex.X movabs rex pop rex.B rex add clc insb fisubrl mov scas mov adcl movabs pushfq add subl pavgw imul mov xchg adc mov pushfq add (bad) sub jl shld retq or imul out jge rorl mov xor lahf (bad) loope xor (bad) jmpq jp mov pop cmp cmpsl rep int rex.WRXB callq (bad) cmp xchg roll and rex.XB testl in (bad) mov (bad) mov pop and lods mov cmp test jno or push (bad) (bad) rex.WRB repz and xor int3 sub stos mov add (bad) jb sarl pop sahf adc cmp popfq adc sti push (bad) icebp or outsl je rex.WX add xor scas repnz andl fisubrl (bad) lock sub or add repnz push sub outsl mov or pushfq xchg fadd (bad) imul xor nop shll rex.XB jp fs or iret and retq stos leaveq (bad) mov push (bad) and cmp pop out xchg pop (bad) mov fcompl adc sub andl stos rorl jnp xchg (bad) mov pop rcll mov std rex.X rex.B fsubp mov jge outsb pop data16 xor movabs jbe (bad) sti popq movabs lret lods (bad) jl insl test decl adc int xchg movabs (bad) (bad) (bad) out loope xor (bad) (bad) outsl (bad) int3 and icebp rex.B fs xchg add jns shll jbe imul loope rex.B pop stc (bad) mov jns test sub std test out xchg out sbbl mov rex.WR int3 movabs rex movsb or pushfq addl movabs jnp fildll adc popfq repz decl movsb sarl je retq sbb and movabs mov jle (bad) cmp fildll shll iret push jmp movabs movabs shll test push scas (bad) movabs test callq fs fisttpl sarl loopne (bad) hlt xchg (bad) (bad) xor pushfq lret clc pop int3 add push add orb (bad) movb pop pushq cs mov imul (bad) jne xlat adc movabs sub addr32 mov pop loope and (bad) push scas mov (bad) jns (bad) andl or sub shr mov (bad) cmc jnp mov fdivs roll or xor xchg jle xchg test xchg (bad) (bad) sarl mov jrcxz mov cwtl int3 movsl pop out push rex.R (bad) shl scas or sbb jg cmpsl cmp in (bad) (bad) adc test and sbb add or xchg lea rcrl in mov lret ror rex.RXB add retq movsl iret negl cmp mov sbb adc cmp mov mov out add sub (bad) jns fldcw (bad) and cwtl nop adc movsb je in add ds jge lock fistpll rex.WRX rex.W in jge popfq scas fcomps hlt and adc (bad) sbb int3 stos add sub in cmpsl cmp or xor (bad) fsubl adc push mov adc iret (bad) or iret (bad) addb push loop sahf test sbb rcll xchg shrl sbb (bad) and adc add imul shrl (bad) sbb mov pop out (bad) fs adc mov xchg rcll rex.WR rcrl std leaveq rex.W lret (bad) adc fwait (bad) and (bad) add xchg rcll rex.R iret rex.WX in sub and repnz (bad) retq and mov pop push sarl retq (bad) (bad) mov cvttps2pi sub gs shrl jno repnz sbb and rex.R sar or retq rcrb rex.WXB add add retq popfq xchg mov jrcxz (bad) (bad) mov iret lea (bad) or fnstenv or sub pop div sbb add jg xor repz sbb rex.RB imul add orl jo mov (bad) adc xor adc mov sbb negb rex.R sub test retq movabs (bad) (bad) callq rex.WRB rex.WRXB sbb pop popq pop jno rex.B rex.WXB (bad) xchg and stc test sub adc (bad) pop (bad) (bad) mov (bad) push (bad) xor xor pop rex.WB mov mov push fsubrs (bad) lea clc or retq in lea retq andl rex.WR rex.WB cmp mov pop test int3 rex.WX jb xchg int3 pop stc shlb pop fisttpll movabs xchg xchg jb mov fnsave (bad) mov movsl xchg rex.XB jb jo sarl es sub rcrb (bad) in enterq loopne jrcxz cmp jg xor test retq sub vxorps mov fild (bad) gs idiv enterq sbb jb repnz fcmovu cmp (bad) rex.WX and sar int jge sub fwait rex.R jl add cmp adc sub rex.XB fiaddl cmp repnz mov (bad) int int3 mov data16 mov icebp cmc fdivs xchg (bad) mov imul rex.RB sbb loopne rex.WX push cmp rex.RX xchg scas xchg (bad) adc pushq mov pushq mov xchg scas rex.RB mov mov gs jle jg fisubl and imul add iret lret xor add cld mov or scas rex.WR sub sahf sub sbb lock scas rcll cld pushq jmp out outsb out rex.X es and sub rorl mov in cmp pand sub add cmpb cmp mov lret mov xchg pushfq rex.WR xlat rex.WX retq rolb mov add jrcxz mov pop add and mov (bad) fldenv out or and xchg gs mov sti (bad) shll mov lret rex.RB cmpsb push je cmp (bad) adc sbbb (bad) pushq outsl (bad) flds rcrb adc retq lods popfq not push pushq xor (bad) loop callq outsb rex.WX out add and mov stos jnp jo push xchg xor cmp callq jns icebp (bad) and xor add cmp sbb cli xchg movabs cmp add mov (bad) cwtl cmp xorl add test cld mov (bad) sar (bad) ds (bad) pop (bad) fsubr cltd shr clc retq and imul rolb incb push es rex.WB movabs (bad) (bad) xor push (bad) loop pushfq push rcll fucomip loope lret roll and jne cwtl and or xorb xor jmpq (bad) mov (bad) xchg cmp (bad) stc callq cltd shl mov out rorl sub pushq add (bad) add mov movabs add cmp fdivrl jns movabs rex.WRX test xlat rex.XB shlb jnp movabs clc xchg mov sbb shll enterq movslq stos flds rex.RXB (bad) pop xor mov pop rclb cs mov jno rcl xchg fs repnz (bad) xor (bad) (bad) xor jmpq adcl int xchg rex.RB ss xchg imul movabs adc roll retq adc push cmp adcb roll add xor adc xchg shrl sbb hlt mov xor push cmp fisttp movb (bad) sbb stos rcrl sarl lock mov xchg rex.X repz cmpl pop stos int or rcrl xor cwtl pop inc (bad) stos int add mov outsb lods push mov outsl rex.B xchg loope insl (bad) lret sarl shlb and jns sbb movsb (bad) scas pop cs in int3 lret (bad) and callq movabs (bad) fsubs jnp fsts cmp (bad) outsl idivl sarq out rorl jg outsl (bad) fwait (bad) mov sarl or ss out out stc rex.RXB test cwtl mov cmp sbb and movabs (bad) movabs rex.WR nop loope stc icebp push addr32 rex.XB rex.WRB (bad) xor pop add mov outsl (bad) hlt rcrl sarb sbb mov rex.B xchg in notb mov jnp enterq mull enterq and addr32 hlt imul out rex.XB cltd sub int data16 mov xor fwait (bad) jmp add pop mov sbb movslq or in and (bad) testb pushq (bad) out js (bad) stos rcll sahf (bad) xchg in rcr or out rex.XB rol movsl hlt cmp push popfq shll (bad) rex.WX rex negb addr32 rex.WRXB jno (bad) mov push lahf rcl (bad) jae movabs xor jns (bad) sbb (bad) (bad) in out roll testb jno ja test callq (bad) lret add scas shlb (bad) pop iret xor movslq (bad) (bad) mov push in mov fwait and (bad) loopne scas sub inc pop in jno popfq rex.WX (bad) repnz and (bad) and retq (bad) rex.B rex.R shrl rex.B adcl std sbb cmp shl push lahf mov sub (bad) mov jnp sahf cmp xchg mov or ffreep js rex.WRX jp xchg mov icebp cli add cmc jp retq es adc negl pop adc add xchg (bad) fnsave (bad) movabs rcr rex.XB jbe (bad) xor rex.RX js hlt mov (bad) xlat jge fnstsw rex.WRX rex.WRXB lock rcl mov xchg fisttpl jns cmp mov (bad) hlt (bad) jno imul sub fldt int3 jl imul imul (bad) mov rorl icebp mov rex.XB cld (bad) testb mov movabs xchg xchg and jne (bad) (bad) adc popq sbb (bad) xor test test ds lock (bad) in jle fs mov sti rorq sub mov cltd stos push jmpq rex.WB (bad) xor nop pushq outsb mov out (bad) fadd icebp imul pop stc imul roll int (bad) mov (bad) jno cmp sbb (bad) push xor fdivrl (bad) xchg (bad) shrl xchg lret frstor imul mov pop lret jbe rex (bad) pushfq mov sbb (bad) cs xor incl sbb ror (bad) sub (bad) rex.WXB add outsl movsl sbb or loope out mov jbe mov jp int3 or leaveq (bad) int3 std xchg (bad) rcrl out rorl xor mov imul sbb add jmpq mov rex.WRXB movsl (bad) cld mov and and roll jmp mov (bad) xchg in jl (bad) rcr pushq push stc xchg rex.WRXB (bad) jge sbb or mov loope ja xchg rcll sbb xchg mov movsl (bad) (bad) je mov sbb xor sar movabs nop rex.RX and ror lods fmull repnz jrcxz mov jmpq pushfq rex.RXB rcrl shll or rorl (bad) out fstpt push jbe out sbb pop stc (bad) movabs sub sub shl divb mov rex.WXB (bad) stc xchg lret (bad) out movabs rex.RXB (bad) or xchg sbb fldcw rex.RX or test clc mov xlat pop cmc xor roll repnz test xor imul (bad) movabs jnp (bad) pop loope rex.WX lret insb rex.WXB rol adc imul and movabs (bad) loope (bad) sarl sti pop shll stc (bad) mov enterq add xchg out (bad) es lret jg iret callq (bad) ds loop xor shll movabs imulb out or mov rex.WXB pop or add add stos testb out retq shrl fwait lret xchg rcll pop out roll xor rex.WRB rex.WX rorl sbbb rcrl fsubr rcrl pop outsl jno enterq retq jg xlat int3 rex.B gs gs push lods (bad) (bad) cmp cmp jle adc sbb lock jae mov and rex.WRB lock (bad) xor cmp cmp (bad) jns mov xor mov adc fnop lock adc xchg (bad) callq jp and iret jl jbe fild (bad) repz scas and sar rex.WB or movslq add icebp sub fwait xor leaveq mov (bad) int and test sub rex.W js retq adc rex.WX add stc sub (bad) adc repnz or rex.W test int3 add out rex.XB rex.XB xlat mov adc (bad) mov cwtl mov int3 xlat mov scas leaveq cmp pop stc pop ds (bad) cmpb or orl rex.WR mov sub int3 rcrl sbb in rex.X (bad) enterq rex.B sub xchg mov icebp in and and xor jmpq jns push popfq vucomiss lahf iret (bad) movslq (bad) fldenv and mov sbb push push loope (bad) icebp push movslq decl mov es rex.WRXB mov sbbb mov es movslq adc (bad) jle cmp or gs rex.WRX rorb xor add int rex.WXB loopne (bad) icebp or cmc stc std pop rex.WR rex.WR rex.WX add loop xchg rex.WXB loopne test retq imul add rex.WXB fcom rex.WB mov ffree sub sti (bad) pop (bad) rcr (bad) lea pushq int3 sbb pop mov cld shl or iret pushq xor xchg pop push icebp push cwtl std (bad) rex.RX jg enterq cmp movslq mov imul callq gs mov rol mov cmpl rol cmp rex mov (bad) cmp or roll (bad) jmpq rex.RX add push rex.WXB lret addr32 push loope and or (bad) xor add cwtl cld cmp popfq or fist shrl xchg sub (bad) rorl or sbbb adc je stos mov fsubs (bad) xor int sub mov mov and xchg add xchg icebp pushfq in outsl (bad) jl (bad) jle lock xchg cmp leaveq xchg adc xorl jp int (bad) sub (bad) outsb jnp cmp sbb mov (bad) in movabs addl (bad) (bad) popfq (bad) int rex rcrl push popfq jmpq fisttp fdivs sub outsb xchg out xor rcrl xchg lret rex.X push adc loopne xor sbb int3 xchg lods mov hlt popfq (bad) or (bad) mov mov mov jb push retq jbe (bad) jae xor mov movabs (bad) (bad) jle (bad) out sarl and and addr32 movb loopne (bad) in rex.B cld (bad) xchg fwait out xlat cmp lret rorb rex.WR movabs or std cmp pushfq xor (bad) (bad) mov fadds xchg add (bad) jb sub subb pop sarl lahf rcll pop movabs sarl xor jb mov or or shll xor sarl mov jl loopne test fcomip (bad) lret outsb sub xchg out mov rex.WRXB xlat jge mov movsl jle out int cwtl or rex.B (bad) fistl imul cmp repz leaveq mov (bad) stc clc lock push rex.B add add jbe rcll or (bad) imul stc mov addr32 or (bad) rex.WXB jrcxz (bad) mov xor in mov rex.WRB cmpl (bad) xor scas rex.RB cmc addr32 (bad) cmp mov rcrl add cmpb (bad) (bad) (bad) mov shrl mov jns rex.WX rex.WRX popfq sub movabs rex.WRXB rex.R pop cmp cmp rclb movabs (bad) sahf (bad) jae jmp sar mov sarl cmp sub mov sarl jg rorl pop cli loope jmp (bad) jb mov retq hlt iret rex.B rex.WB add xchg rol rcrb lret rcrl (bad) cmp xchg sbb jrcxz repz pop imul (bad) sbb loope and int rex.WX push callq rex.WB rex.X jno add jnp icebp (bad) sbb xchg and (bad) pop movsl (bad) (bad) outsb ficoml xchg mov adc outsb movsl pushq repz xchg and (bad) movsb jge outsb (bad) movabs int3 and rex nop (bad) adc (bad) nop cmp xchg test rex.WR adc ud2 repz (bad) fisttpl out jmpq out pushq (bad) ficom popfq data16 pushfq xor jnp cli xchg xchg rex.RB add push scas movabs (bad) out (bad) out scas cmp lods jae (bad) xor xor pop sub sub leaveq popfq and rex.WRX (bad) xchg (bad) rolb rex.WR in sub (bad) add mov rex retq lahf mov add sub (bad) shrl rex.WR mov jmp add icebp jns (bad) push cwtl in add subb rex.RB in out mov (bad) xor xchg fmuls sub and jge pushfq adcb add retq (bad) (bad) sti ja mov rex.XB mov adc mov rex.XB fsubs push mov fsubrs test rex.XB mov cmp adc sbb rex.X mov cwtl rcrl sqrtps shll or movslq pop shrl shl rex.RB adc (bad) jno test cmp movslq (bad) cmc sub sub (bad) cmpb xor sub mov jmpq sarl mov xlat nop (bad) or pop movabs xchg rcrl ds jl (bad) movabs rex.WRX leaveq and (bad) repnz mov jmpq or movabs add (bad) rcr cmpsb outsl icebp in mov (bad) and or sbb iret stos shll pop add sahf xor outsl nop loop shll jg rcr or std rex.RXB gs add sub jmpq cmp imul fwait out sbb pushq cmp sahf orl outsl (bad) gs sub jns add rcll nop leaveq rex.RB retq sti out mov imulb mov add mov rex int rex.WR in (bad) (bad) roll shl push rex.WXB imul (bad) xchg (bad) (bad) lock cmp jp rex.RB leaveq pushfq or or js jle shufps jge repnz cmp xchg (bad) fcom mov push add test rol mov mov rol (bad) std lret or sub movabs mov (bad) (bad) movsl (bad) sub rcrl adc (bad) iret imul pushfq sbb pushq jge mov hlt rex.RB mov sbb mov stc push mov rex.WB fisubr and jg sub nop movsl xor test xor fsubs adc gs jp push jae fimul (bad) fiaddl (bad) out push sbb fidivrl xchg movb mov mov (bad) jbe mov (bad) loopne xor jns (bad) fsubr in mov fsubs std fadd hlt imul cmc test mov (bad) jb rex.WRB push pop nop rex.WXB cmp (bad) pop sbb repnz push (bad) adc addr32 pop push (bad) adc cmpsb (bad) push lea mov movsl push outsl shl sbb movabs fnstenv add (bad) jno (bad) shl xorb shll pop push fwait icebp xchg loope jrcxz rex.WR jg sbb mov add (bad) cli jno add jl fiadd jbe std ror rex.RB mov rex.WX rol movabs (bad) add rcrl jo rcrl (bad) (bad) cmc (bad) outsl rex.WRB (bad) movsl (bad) xor outsb out (bad) testl sbbl xor (bad) in cmc add (bad) movsl ds repz callq cmp xlat rorl and iret loope rcrl mov out fcmovb ja adc jge or decl and adc test rex.XB cmp jp cwtl addb mov and rex.WX pop negb xlat xor add clc add (bad) shll lcall (bad) sbb sub pinsrw mov (bad) (bad) (bad) (bad) jb (bad) (bad) adc in jrcxz push lret ror roll fs push out sub (bad) movabs xchg push movabs div (bad) int in push rex.WXB (bad) sar sub jl movabs push and rex.WRX push sub ja xlat and imul fistl es pushq outsb pop (bad) (bad) fimul mov sub mov loope pop stos pop imul (bad) iret adc push and rex.X xchg mov (bad) imul (bad) cmp callq lahf lea iret repnz movslq icebp (bad) leaveq adc popfq add push stc (bad) adc rex.WR iret movl pop (bad) std data16 and movsb xchg rcrl xchg (bad) scas ror pop jne xchg jg adc pop push mov and or mov loop movabs rex.RX callq orl retq xor and mov mov push add ja int (bad) rex.WRB rex.WXB jae rex.RX add adc lret mov add rcr orl fnsave push jno (bad) and movabs (bad) (bad) push andl iret sti mov pushq lret repnz push lea ds mov mov jp mov push mov rex.WX in pop shll (bad) stc pushfq add or (bad) jae,pn add loopne and add xor push cmp jl (bad) clc in pushfq enterq sbb loope push pop in insb fs imul mov xchg adc xor jbe sub mov add rex.RXB xchg test out xchg stos (bad) repz sbb cwtl xchg cltd sarl fcmovnb jg (bad) mov shrl scas movabs int3 mov or cmp rex.WRB jb xadd (bad) xor add movabs adc mov xchg xchg mov rol push out (bad) divl retq (bad) sahf mov sbb rex.B rex.RX pushq pop jno pop sbb push add adc xchg enterq cmp add mov xchg fcmovnb xchg jge (bad) out mov int jg (bad) callq rorl lret xchg push push loope stos movabs movsl fadd insb in mov add add add mov je negl mov jrcxz xacquire sbb (bad) mov sub rex.X roll (bad) callq mov sbb rex.B push and rex.RXB rex.R lret rex.WRXB shll (bad) (bad) (bad) movabs push shll rex.WR mov popfq movabs cmp fcomps (bad) mov in xchg adc rcrl lods mov retq rex.RX lock cmp xor push (bad) mov movabs imul and ss add (bad) mov callq rex.W data16 pushq movabs sbb rcr sbb adc push popfq adc sub sarl imul (bad) cmp fadd xchg or or out mov add (bad) (bad) cs jmp shll (bad) je or sahf (bad) rex.X pop sarl repnz movabs lods xchg lahf callq lret pop sub mov cmpl (bad) imul movslq jl and xchg mov jge rex.WRX (bad) ja mov imul sub sti lret (bad) callq or mov lahf (bad) cld xchg mov insb (bad) add sbb iret faddp (bad) rex.WRX rex.WB fcomip sbb rex.B (bad) rex.WRX stos movabs rex.B icebp sbb mov (bad) (bad) xchg test movabs add mov cmp (bad) loope or jmpq ja xchg shlb icebp pop cmp loop fild out jrcxz stc cli add ficom (bad) rex.RXB fwait sub movabs test (bad) loopne add rex.WB jnp (bad) callq enterq jmpq sub xchg retq sub jno fistpl pop fcoml push sarl add xorl xchg jl std mov callq mov jns sub or add es mov sub pop leaveq add icebp movabs sub (bad) pop loop in insb xor (bad) (bad) cs and rex.RXB loopne mov sbb mov rex.B repnz (bad) add fnsave and roll sarb in movabs sbb callq sub push add push es clc or xlat fdivrl test (bad) xor int3 repz jno mov push (bad) scas fimull cmpsb push add sub faddp jmp pop fnstenv outsl retq stos push (bad) movabs sub test fiadd mov leaveq int3 pop test xor rex.WB rex.WB divb repnz std and lea mov pushq test movabs callq (bad) addr32 sub (bad) (bad) cmp push add subl push mov pop leaveq shrd int enterq (bad) test sbb jg and addb mov (bad) (bad) sub (bad) push (bad) jns xchg cmp cmp ja fwait loope fs push lret test (bad) lods sti test rex.RXB or retq insl sbb callq cmp sub push (bad) mov pop fsubrl pop pushq negb add (bad) jg and adc (bad) icebp rex.RX iret cwtl rex.WX add cmp cmp pop xchg and rorb rex.WRX mov cmp test sbb movabs (bad) (bad) cwtl fsubrs movsb xchg mov add mov repnz cmp mov lods retq movsl (bad) jl mov cli (bad) fsub movabs in push rex.R jrcxz loope and cmpsl (bad) push fsts rex.R mov (bad) add fisub repnz scas hlt add test imull xchg sbb fisubr add mov adc (bad) xlat (bad) (bad) shr test jp jno icebp mov movabs fsubr adc std out lret push mov pushfq and rex.RXB (bad) sarb cmp outsb xor imul je out fld (bad) sub nop rcll sbb pop mov pushfq and movabs mov roll jo fisubr cmc sbb sbb movsb in movabs rex.WX out push jle shll loope (bad) movsb out stos push (bad) sarl movabs sbb (bad) sbb cmp adc nop pop or jge insb ficomp (bad) loopne push (bad) movabs test lret push or adc and (bad) movabs int sub pushq mov or mov shlb pinsrw js int pushfq (bad) in ficoml (bad) cmc rex.RB or rex.RXB fwait repnz rex.WR rex.WXB mov movabs addr32 pop (bad) not out add lea cld mov (bad) cs (bad) rex.WB movabs rex.R jns or pushfq jmpq cmp (bad) push iret (bad) push std adc cmp pop add sti (bad) (bad) cld rex.WXB enterq adc push mov fs andl add mov rorb orb lret (bad) rex.R (bad) jb rex.WRXB cmp pop rex.RB movsb cld (bad) xchg jb (bad) rex.WRXB xor jle lret mov rex.R add rcll fldcw out ja cmpsl mov adc sbb (bad) mov test add nop outsl mov rorl push jl adc mov or jns (bad) rcll push leaveq roll rex.RX in fisubl jo xor mov and (bad) jrcxz repnz jne rorl pop xchg iret imul pushq push push clc pop je data16 movabs fisubr jno adc xchg fucom sbb movsb or cld xchg pop add fcomps icebp xchg (bad) xchg rcrl sti or rex.XB (bad) scas enterq fcomp rcl xor std lret (bad) xor and cwtl push xchg xchg movabs retq out push adc rorl enterq rex.WXB (bad) mov outsb mov sarl (bad) notb jg scas mov rex.RB pop rol (bad) jns add testl rex.XB ror rex.WRXB (bad) jno (bad) cmp or sub (bad) lret (bad) mov add pushq hlt (bad) and orb outsb jb (bad) rcrl push (bad) mov (bad) adc lods or pushq mov rex.WRX testl sbb xchg (bad) sub imul (bad) gs (bad) test mov enterq and mov pop (bad) (bad) adc xchg xor (bad) inc data16 rex.B fstpl pop cmp sarl mov and or repnz int3 loop rcll in pushq sub scas ficompl xor cli jge fsubrs popfq (bad) (bad) rex.WRB rex.WR movabs int3 cmp fimull jb rex.WB and push adc mov and push add add ss fld jne xchg hlt shll mov test mov or (bad) xor jae lret (bad) in fistl stc repnz and add mov sub retq rex.WRX pop push push pushq outsl jno (bad) and (bad) in add (bad) xchg mov xchg jge test xor (bad) cmp rex.WRX rex.WR mov leaveq lods (bad) gs mov retq mov repnz ror lret sub rex.WXB add or js add or fdivs callq jrcxz pushfq sbb rex.WRB cmp in mov jl int3 rcr sbb enterq mov sete pop out shrb mov retq push callq and pop movabs and add (bad) int3 adc jmpq outsb jge xchg pop jp int jl mov clc sbb fldcw sub (bad) sbb in (bad) shll xor add mov cltd pop add lea shll cmp xor int mov neg clc sub mov cli (bad) cwtl (bad) in cmpsl fsub cmpsl repnz rex.WX enterq (bad) je (bad) sub test ja int3 rex.WRX xor paddb data16 es movabs (bad) ds in es sub mov retq callq mov loop (bad) xorb sub (bad) mov cli add rex.XB cs (bad) insb frstor (bad) lret jl sub fs (bad) callq rex.WRX repz rex.WB ds (bad) jno (bad) sar (bad) clc sub rex.XB pop in icebp push xchg mov gs in imull rol xor (bad) loope fild xor (bad) (bad) and rex.RX loop sbb je in scas shrl xchg (bad) mov pop adc shll jbe or and xor cmpl repnz movsl (bad) mov xor (bad) (bad) (bad) add sub sahf lea jo cmp movsb rex sarb movabs frstor or (bad) push (bad) js adc rex.WXB in sub mov and mov or fbstp rex.R rex.RB rex.WRB mov add rol lahf out (bad) add stos out (bad) adc out mov outsl sti ds rex.RXB fwait sar (bad) shrl cmpxchg retq icebp jnp movabs adc rcrq sub enterq outsb cmpsb add fwait xchg test push rex es and nop (bad) (bad) loope lods mov add mov iret (bad) ja (bad) pop mov (bad) outsl in pop lret out cmp icebp ja jg rcrl and stc cmp fwait movabs (bad) shll rex.X (bad) stos (bad) lods (bad) rcrl (bad) mov mov jrcxz pop roll cld (bad) rcll mov lahf test rcll pop jo add rcr test (bad) (bad) out int pushfq mov (bad) (bad) addr32 shr or or xchg repnz rcr (bad) mov out mov xlat mov mov push rex rex.XB and (bad) pushq loopne sahf (bad) mov push sarl xor int3 adcl fcmovbe fmul fs movsl rex.XB addr32 rex.WXB movabs jns pushq xchg add lods ss (bad) int3 lods jl (bad) (bad) pushq or in mov adc jbe xor mov rcrl retq rex.WRX lock (bad) sti mov loope or mov cmc ja xchg rex.R (bad) faddl roll rex xor and movabs mov rex.RXB repz or je rclb xchg and jmpq std loope xchg cld out add lea pop out rex.WX or (bad) xchg mov cmp and test in loop xor sub and enterq stc adc mov xor and (bad) nop rex.RX fcmovb mov xchg adc callq (bad) (bad) mov fwait and mov mov and adc out in js rcl shr (bad) jmpq rorb rex.WRB inc push xor iret (bad) (bad) lret xchg imul jnp add mov jg mov rex.RXB and icebp xchg jmpq nop outsl adc gs xchg (bad) sub add xchg shll retq outsb push sub sub icebp mov cmc js (bad) repz cmp rex.RB iret or rex.R (bad) sbb mov (bad) ror rex.RB ja faddl (bad) adc jg sub stc rcl pop (bad) jrcxz push jnp lea (bad) add js pop mov cltd repz mov xchg sub xor adc rex.B fisub sarl rex.XB loop cmp pop pushq in je scas fldcw cmp rex.X rol callq iret push andps ss rex.RB shll roll xchg add roll pop mov mov mov sti (bad) shl push fwait incl rcrl (bad) jrcxz or rol rex.RXB rex.WX add stc repz enterq (bad) jg mov xchg stos mov and loopne ja (bad) mov rex.WB push cld mov mov cltd fdivs rex rex.RXB fistp callq shrb (bad) clc adc jmp ror outsl jle out sti or callq cmp repz (bad) and and (bad) in hlt sarb shll xchg mov je roll hlt adc xchg enterq out rex.RXB out loope adc addl iret add sub in jmpq jp (bad) pop imul rex.WRXB sahf enterq mov add loopne rex.WRX retq or or repnz (bad) cld add (bad) movabs in stc mov jp js push push pop jrcxz pop pop and out pop sbb sarl movl xor sub rex.XB data16 jbe fldenv scas (bad) (bad) shll pop sbb xchg or rex.R push (bad) xor xchg mov xchg or jl cltd push movslq (bad) or cmp (bad) (bad) vmovlps rex.WR xchg jle rol (bad) stos jae rex.WRX add rex.WRB rex.XB fldl mov and rex.WRXB (bad) punpcklwd mov (bad) jb or sbb mov xchg notl rcrl and rex.WXB jle fnop addr32 sbb fisubl or icebp (bad) je iret or adc mov rex adc loopne sbb adc popq rol fbstp insb mov iret (bad) cwtl jrcxz sahf mov rex.B push add jno cmp movabs sbb cli (bad) fistl push (bad) lret push roll cmp (bad) out cld mov int3 vpsrlq fs mov loop std (bad) ss movsb es fisub jg ds mov xchg (bad) mov pop (bad) xlat test rol iret stos cmpsl or mov movabs pop push cmp xchg ffree shll xor lea jb in ljmp iretw loope mov rex.WRXB in rex mov (bad) push xor push (bad) sub push add out (bad) mov add (bad) (bad) cld mov sub (bad) xorb insl cmp fiaddl fwait add pushfq bswap adc (bad) andl rex.X xchg (bad) (bad) (bad) fcoml or in mov rex.B sub shrl lcall xor rex.WRB pop mov js in iret (bad) rex.WX cmpsb adc (bad) imul nop cmp movl (bad) rex sbb or out out cmp add xchg cld (bad) mov rorl and rex.WXB rex.RXB cwtl js rex.B and xor movsl (bad) or xchg (bad) lods repz sbb popfq out jae mov fcoms sub (bad) cs (bad) sbb jle mov sub add xchg out jno pushq repz je xchg adcl (bad) retq rex.WX add pop stos add ficompl rex.RX fcmovnbe outsb (bad) scas cmp (bad) push xor jae shrl loop sub fwait movabs rex.WB sub (bad) (bad) jrcxz cs jmpq rex.WRB sahf mov pop jrcxz and (bad) (bad) rex.WR js jl jl (bad) movsb (bad) jle imul adc (bad) jp imul scas bnd xlat mov shr sarl and pop (bad) push (bad) mov ja xchg fwait adc shl push stos (bad) (bad) movsb pop sub xchg jns mov cmpsl iret (bad) mov loope (bad) repz callq pop (bad) insb push flds js xor jnp (bad) cmpsl sbb and push xchg add mov sar pushfq std cmp mov and callq rex.XB flds sub fwait enterq retq xchg repz enterq mov rex.X je pop cwtl mov xor (bad) xor xor icebp cmp xor push cwtl mov push retq add xor sbb loopne (bad) enterq pop or or fnop sbb or add and leaveq mov cltd add cmp enterq xchg add rex.WRX pushq and rex.WRB rex.WRB (bad) ja sahf (bad) scas (bad) and rex.RXB jb rol jno (bad) xchg cmp cmp (bad) stos mov jge scas (bad) jns rex.WRXB (bad) sub (bad) xchg pushq imul iret push (bad) rex.X (bad) lods cmpsl mov or and leaveq add out sbb and push fadds callq in rex.RXB repnz mov adc xchg rex.XB ror stos retq push fwait in (bad) pop add rorl (bad) pushfq movabs rex.XB lea adc xchg lock cmpsb frstor pop sub cmp (bad) (bad) mulb or (bad) push fidivrl jno (bad) lock cmp rex.RXB (bad) (bad) movslq outsl rex.WR pushfq in and mov jne (bad) rex.WRXB scas test insl xor cmp fucomip shrl pop sbb adc stos test rcl fmul mov add (bad) fadd out stc pop xor sbb add xchg (bad) mov mov out lahf loop sbb add hlt pop outsl fistpll or (bad) adc xchg outsb out pushfq cmp push pushq out outsb rcll fnsave or sbb movabs sbb cmp pop icebp loope or sar callq add cltd mov jnp add pop mov mov pop (bad) fisttpl outsb rex.B mov jb rex.XB push ficompl (bad) (bad) rex.RX rex.WX (bad) lods mov shrl or jg (bad) xor mov loop jae add xor add add pop (bad) ja sub lret movabs lock mov fmulp rex.B rex.W rex.WXB sbb adc push rcl pop ja pop rex.WRXB (bad) xor int xor rex rex.WX insb repz sti sbb test (bad) incl and std rcl mov (bad) rcrl lock rex rex.RB ss je iret (bad) cmpsl hlt movsl shrl jl (bad) mov jge adc roll movsb rol rex.RB (bad) rex.RXB mov or std jbe enterq and rex.R or loope test fisubrl iret rcll movsb (bad) rcll mov rex.XB (bad) pushq ss sub in sbb xor jo push imul (bad) push (bad) in rex.WX xchg mov add cmp shl outsl (bad) ss rcl retq retq rex.RB fwait sbb jns insl callq movabs shr jbe fiadd (bad) push push movslq pop (bad) stc (bad) in lret jp mov cmc rorl jno fistl pop xchg movabs fld jne hlt mov add sbb (bad) fcomps rex.RX mov lods mov (bad) icebp (bad) callq rex.WRB test and mov push fnstsw xor int3 callq shrl lret (bad) popfq (bad) int add add sahf sbb xchg sub test jmpq (bad) xchg cmp (bad) and loopne sub clc or test rex.XB std add mov lret fnstcw xor andl sbb stc cli (bad) mov addr32 jae (bad) xrelease mull and sub mov pushq rcrl outsl out cltd jmp mov and repnz xor xlat jg rex.WRB ss (bad) rex.WXB shrl iret (bad) pop test rcl fs rex.WX scas cwtl xor push xchg cli jno sub (bad) add out (bad) js sub stos iret stos sarl cmp rex.WX int3 xchg (bad) push ds mov jnp (bad) ficomp jno or rex.X and outsl cmp jp sub cmpsb (bad) rex.WX xchg jns mov movabs retq (bad) mov rex.WB rex.WX mov and cmp xor rex.B rex.RB movabs int3 (bad) (bad) xchg xchg (bad) shr mov pop shrl adc cmp adc or rex.XB jmpq sbb sub sbb xor push rex.X cmp pop sbb xchg lods jns mov add sbb or sbb mov add jg xor shrl jbe rcrl rex.WRB jno iret rcrl (bad) (bad) jae sbb (bad) loopne mov callq add (bad) sub add xlat out enterq xor (bad) hlt pop sahf icebp data16 enterq fnstsw sarl rex.WR fwait (bad) lods unpcklps stc outsb or and popfq shrl insb je lahf sbb (bad) rex.WX push rcll and insb rex.WRB rex.RXB fmuls pop adc (bad) mov cmp test iret imul (bad) pop mov enterq stc (bad) pushfq mov testb (bad) pop (bad) data16 mov rex cs or sub sahf fsubrl rex.R ficom lret iret sbb (bad) repnz adc xchg mov sub (bad) ror mov rorl adcl (bad) out push insb (bad) (bad) (bad) pop cld test f2xm1 loope rorl pop pop shrl sbb jno rcl test (bad) (bad) repnz (bad) pop lret (bad) rex.WR pushq mov pushfq mov jrcxz mov callq and sub lcall (bad) js mov sahf rex.W gs sti (bad) out bnd notq hlt (bad) sbb mov (bad) pop (bad) popfq cld (bad) mov es in ja xchg and adc cmp pop negl cmpsb (bad) and int3 mov cmp lea sub (bad) add (bad) fbstp xchg rex.B (bad) rorl mov test negl movsb push in sub or rorl retq jne js movsl add mov (bad) rex.WXB push sub rex.WRXB xor nop mov (bad) mov sbb enterq shr (bad) cmpsl xchg jl movabs rex.B xor sub in retq (bad) shrb sti cmc rcll fsubl lods or rcll xchg movsl (bad) rol push add rorl adc int mov mov fidiv jp xor repz shrl (bad) rex.WRB (bad) push and sbb test ja popfw xchg rol lock in rex.WXB or nop sbb notl cmp shll sub fild xchg or (bad) mov in add rcll (bad) pop (bad) jno js jns out movl enterq rclb jrcxz movabs mov jp adc cmc mov jge or flds int fldl xchg fbld jo (bad) and lock (bad) xchg (bad) movabs (bad) xchg add rex.WR pop cmp out or repnz mov retq add fldenv cmp mov fbstp out scas (bad) xor lods fstpt sbb mov mov addr32 (bad) insl rex.WR mov rex.R and jle mov rex.RX pop jb ja (bad) sahf divb xchg fstpl and loopne callq mov (bad) adc ss mov push test adc mov (bad) pop negl loopne (bad) sub push shll std (bad) push cmp xchg jns or rex.XB jle loop pop cmp mov outsb rex.RX rex.WX sub fsubs (bad) retq notb ja (bad) xor jae sub xchg (bad) cmpsl xor jno pop rex.RX (bad) fidiv jae mov add xchg andl and repnz xor fisub jns mov enterq (bad) cltd insl addr32 test cmp jne add rex.XB movabs add mov push xchg mov jl loopne lea sarl je shll sti jb mov cwtl mov jge addr32 mov add sbb cwtl or retq retq hlt mov (bad) rex.B push and rex.RB lret leaveq icebp pop sbb je or (bad) popfq mul mov rex.RX (bad) rex.W mov and test push imul adc or rex.WXB adc (bad) vpmulhuw test (bad) cmc sub adc (bad) jno outsl (bad) cmc cmc sbb (bad) add stos jp lret psrlw mov (bad) int3 or testl (bad) movsb nop rex.WRX rex lea and fldl push lret pop imul sahf stc (bad) sub test xchg repz push shrl rex.WRX xor (bad) cmp fdivs rex.RXB sbb (bad) rcl mov (bad) cld ds mov insb sar leaveq rex.XB xor rcrl loop (bad) adc adc lock sahf loope imul pushq push jrcxz (bad) fdivrl shr cmp rex.WX mov hlt stos lahf (bad) mov rex.WR jo insl (bad) (bad) add mov sbbb dec mov enterq sub rex.RX std pop insb cmp addr32 push and rcrl out roll (bad) popq fdivl fidivl (bad) shrb xchg rex.RX mov shll pushfq rex.WX jae (bad) mov ss jb sbb (bad) pop xor sarl xor (bad) xchg decl ror rex.WRXB stc xchg ficompl rorl loope mov mov (bad) xchg push outsl pushfq (bad) rex.B cmp addr32 xchg (bad) rex.WRXB rex and jnp rex.WR mov sarl ror imul pushfq out fwait rex.WR shl push rex.WB shrl stc xchg or test scas rclb jo pop or sarl leaveq sub jg shr or mov jne iret and sbb pop in pop jrcxz jae mov (bad) (bad) cmpsb popfq jmpq loope nop loop addr32 add movabs sub add std push movabs int std rex.RXB push sti icebp out xor mov repnz movslq in (bad) (bad) js jno add cwtl xlat loopne and fmulp roll movslq scas movsl xchg movsl sbb rex.WRXB adc (bad) sbb add cmp (bad) repnz mov add mov rex.B (bad) leaveq outsl (bad) roll cltd negb stc (bad) jns lods mov decb jbe mov es popfq (bad) ds loopne xchg cmpsb push cmp ja shrl rolb je pop mov movsl mov mov loope testl sub (bad) (bad) jo add (bad) jrcxz loop mov mov push pop cmp (bad) (bad) fnstcw (bad) (bad) xchg shlb sbb jge sbb cs rorl retq and (bad) lods int3 ds rex imull retq adc repz adc rex.WRX (bad) subl rex.WRXB (bad) or pushq sahf jno (bad) sti xlat xchg fwait movabs or fisubr xchg cli loop cli (bad) (bad) lods enterq and ffreep icebp xchg fcmovne int3 icebp jmpq lock (bad) cmp sub or rex.WRB movabs xor rex.WRXB sub fs mov mov (bad) rex.XB callq mov cmp cmp jg leaveq add movabs (bad) sub rex.XB cmp shrl rex.WRX add movsl and push pop adc mov notb (bad) pushq movsl and sub (bad) push rorl xor decb repnz sbb jmpq mov rex.WRX rex.XB rorl stc and add fisttp or cld sub cmp rcr mov in add rcl adc out mov in pushq xchg loope adc movsb rclb shlb fsubrs adc insl gs vminpd pushq roll iret retq (bad) enterq cmp (bad) add add shll scas (bad) lret frstor in cmp (bad) jno iret mov xor stc rorl movslq popfq (bad) sub (bad) movabs fstl cmpsb fsubs mov (bad) (bad) (bad) std sub mov rex.RX stc rcrl mov sbb jo lret xchg lcall mov popfq rex.WRX shrl push sti push loope mov rex.RB (bad) rex.WX cs rex.B fs mov ja mov fchs fs imul adc rex.B cmp sub mov (bad) sub (bad) js push cmpsb test cs shrl in (bad) movslq sahf imul lods (bad) mov (bad) xlat rorb pushq outsl jae add rcll rex.WB xchg or enterq movabs jrcxz test (bad) xchg fistpll xchg stos push push loopne (bad) mov and lods in xor or (bad) mov pop rex.RX mov jo adc (bad) in movsl mov (bad) scas lret push adc and mov sub cmp ja out xchg lahf cmc shrl rex.WR pop mov (bad) jo sti shlb sbb imul int push rex.X sar fwait sbb (bad) test lret rex.WXB (bad) sbb sub scas (bad) mov pop movabs add mov pop outsl mov jle (bad) ss shl xor mov adc (bad) sub (bad) and shrl mov retq movabs sub (bad) xchg movabs push movsb in jle rorl cmc imul int rex.WB pop js mov repz (bad) ss ror enterq addr32 push or (bad) rex.B cmp xchg (bad) mov rol mov and xor sub xchg (bad) sbb rex.RX pop gs (bad) cs xchg rol test ja mov imul cmp pushfq xchg jne movabs repz roll int fs mov xchg rcll (bad) popfq (bad) mov mov pop movslq rex.RXB shl lods push (bad) xchg rclw lret (bad) xchg pop fsubrs movsl mov enterq sub add jbe jl jge iret (bad) movsl test in cmp and xor rex.X add push xchg enterq sbb loope repnz loop sbb fwait rex.WRB rcll xchg mov (bad) (bad) rcll test mov jp xchg jb movabs lea rorl cwtl (bad) ljmp rex.W out mov xchg scas jae sarl std xlat and movsl hlt insl leaveq rcll mov (bad) jae (bad) nop (bad) hlt ffree scas (bad) out out mov cwtl rorl rex.RB cld xor (bad) or lock push mov xchg in or mov outsb (bad) dec jp (bad) roll xchg movabs jmpq adc lea js iret or jne rex.X shll (bad) js sub sahf movabs rex.WRX rex.RB or push pop push rex.RXB movsl and repnz shll lret push sub scas mov adc out cld (bad) idivb xor int jnp push xchg lea (bad) int stc pushq mov jge and jo frstor sbb pop mov movabs shr xor mov stos cmpsl or imul jbe sarl pop lea and sarl mov mov mov mov (bad) mov adc lret stos (bad) jo test faddp rex.XB sub and stc (bad) sbb mov leaveq xchg add or in stc lret mov rex.WX fisub push (bad) (bad) in pushfq mov sub and rex.XB lcall repnz push (bad) cmp mov sarl (bad) loop shl pop jge std push jrcxz sbb sub rcrb cltd movabs sbb fimull shll fcmovnb xchg cmc mov jmpq mov movsl movb xor push rol mull pop pushq stc loopne and xor mov movabs mov (bad) in retq rex.R mov rex.R popfq sbb add push and (bad) mov insb notl lock sub adc add fucom push lcall mov xchg lods cmp clc mov adc mov xchg (bad) callq roll test pushq (bad) in and mov movslq adc xchg movabs mov retw mov mov xchg in mov scas rex.WX xchg mov (bad) out in or mov push push shrl scas push (bad) icebp (bad) imul rcll ror fnsave test mov pop shr jge pushq (bad) sbb (bad) add stc loope movslq rex.RX addr32 xchg fldcw rex.WR or lret add and pop (bad) adc lret rex.WRXB rex.RX fwait cwtl mov andb rex.B fcoml out sub mov (bad) lods lahf out nop (bad) stc rex.WRX (bad) mov or (bad) pop iret rex.RX sarl cmc and xchg (bad) std (bad) rex.WR mov lretw cmp int in xchg pop (bad) mov mov rex.WXB fcmovnb stc (bad) xchg movabs adc out (bad) std in lods shll cmp (bad) shrl cmp (bad) jle xlat test test outsl lock add and push sbb xchg adc (bad) rex.B iret fistl cltd int3 scas fs loopne mov gs iret adc insb rex.RX movabs pop gs mov mov add shr cltd movabs fbstp rex.WXB movabs movabs jge insb cli add std jg loopne cmpsb enterq (bad) decl ss sahf lcall (bad) cmp lret rclb repnz (bad) xlat mov add jno movabs repnz fisubl leaveq (bad) xor iret xor fsubs add jbe imul jns pushq js mov mov in mov fistpll (bad) (bad) ss pushfq test retq (bad) xor shrb icebp lock xor and sbb or cld adc fstps rex.WR sub sub out imul push (bad) mov (bad) rex.X cltd lea mov lods gs mov (bad) add js stos (bad) fst jae jno cmpsl rex.RX rex.X fs test (bad) and mov pop sbb rex.RX pop movsb add (bad) (bad) sub rex.WR test data16 rex.X repz loope outsb jns shrl orb rex.WRB mov cmpsb rex.WRXB xchg loop or movsl mov xchg int rorl std (bad) (bad) push xchg es mov enterq (bad) stos jg mov xor fnstenv sbb negl loope fwait pushq in test movabs ror (bad) mov mov incl xchg insb rol mov roll test adc add push fs sub cld mov flds (bad) sub std ss stos rex jo sbb enterq jns rol rex.X outsl xor jne (bad) sbb in adc movabs roll push sub je rex.R sub sbb jb add pop outsb movabs adc jmp add and jge rex.WR hlt movabs cli xchg lods add fnstenv movabs add (bad) fdecstp adc rcll sub or std (bad) jrcxz add jne mov rex.WRX in retq stos rcll js int jp rcrl pop mov roll mov fisubr push int jnp lret jb mov cmp (bad) mov outsl add callq testb cmpsb rcll xchg rex.RX ja mov (bad) pop test sbb iret xor mov shrb nop mov idivl iret xor (bad) jge pop (bad) test fisubrl fldcw movabs cltd jne loope jmpq shl callq add (bad) xor sbb jle and sarl jnp jmpq jbe xchg data16 add lcall rex.W mov std or add jns insb lahf fsub xchg test push rcl pop cli (bad) pop or cwtl insb repz ja rex.X jns roll retq rex.WRXB mov (bad) push in (bad) jo rex.B jp rex.RXB sarl in fnstcw pop mov push movabs data16 pop xor in retq adc stc rcrl sti rex.WXB sub sub ja loopne jae push pushfq mov rex.B rex.RXB cwtl pushfq cli pop sbb rcrl rex.WRB addr32 in lods mov rcll div jno lahf retq jnp or lret movabs loope callq (bad) cmpsl mov mov stos or out jbe (bad) mov xchg rorb imul jns (bad) jg xor dec sbb cmc shrl scas test mov mov shrl sbb xchg enterq cld sub (bad) pop xlat sub movabs loope xchg in mov loop sahf or insb add pop mov (bad) xor jle roll shr mov movabs xor mov (bad) add outsb movb callq xor stc (bad) fs pop xor imul movslq rex.R pop pop add fimull jg sbb movabs sbb loopne adc (bad) sarl xor repz loope and cmp hlt rex.WRXB cld rex.RB std xor out xor lock insl vpsrlw imul xor lret std sub test mov (bad) xchg sbb xor pop (bad) pushfq cmpsl adc roll test idiv cld lret (bad) loope adc stc clc pop jno loop xor add (bad) mov and pop stos cmp sub (bad) cli (bad) insb push jne mov or rex.WB jmp (bad) xor imul enterq repnz mov add xchg (bad) or xor cwtl retq loope cmp sub sarl (bad) push (bad) repnz shl fsubrs cmp cmpsl enterq xchg scas iret jnp sub xchg shll jrcxz lods shl rex.WXB test (bad) xor imul in rex.R xor lret jae rex.WRB jmpq rcll cltd mov (bad) (bad) jge (bad) insb xchg sub sub (bad) inc pop adc and js data16 callq (bad) xor movslq rex.X xchg test cmp rex.RXB mov sarl or movslq and push push mov out (bad) or cli data16 adc (bad) (bad) jb rcl pushfq (bad) clc (bad) shll (bad) cmp (bad) inc mov ds (bad) and loop xchg mov jne sahf mov divb mov ja mov movabs rorl xchg ss mov adc test loop xorl (bad) jae movabs sbb (bad) cmp xchg or rex.W mov add ja in xor cmp (bad) mov cmp in (bad) rclb retq (bad) loopne repz rex.RXB pop (bad) rcrl push test lods out ror add mov sarl mov mov jg icebp (bad) (bad) adc stc incl movabs xor icebp cwtl xor retq ror (bad) rex.WR ja movsb sub xchg sbb in rex.RXB rorl retq jns rcr push xchg (bad) adc or fsubrl movsl sub movabs sbb xchg (bad) ss add rorb retq sbbb adc sar push adc in (bad) fstps lods rex.B sub hlt rorl unpcklps callq mov xor in (bad) fsts lret lods lahf xchg (bad) mov jp xchg xor mov rex.RB and loop jmp (bad) rex.WRXB out mov add pop cmp test adc gs adc pushfq notl add out imul stc mov lret rolb cltq test and xchg adc mov cld scas cmpsl push (bad) pop vshufpd adc cmp rex.WRX cmpsb cld xchg movabs jle add jno (bad) mov xchg ja (bad) cmp sub pop retq std mov sub push outsb nop hlt fimul (bad) sub lea rorb (bad) std shll lods xchg mov add (bad) cmc (bad) pop cmp sbb addr32 rex.WB (bad) mov retq movabs sub rex.RX mov sub clc or adc rex.WR lods loop (bad) add lret imul leaveq rcrl pop or push jge (bad) and mov incl rol (bad) sarl fwait mov loope (bad) mov pop cmovs rex.XB outsl (bad) rex.WRX fldl2t cmpsb or jnp cld sub shr movabs movsl sti sbb and and int3 (bad) fistp cmp in mov hlt (bad) push mov shrl mov sub (bad) and jge int (bad) test sub sbb pop or lret mov or mov (bad) (bad) fbstp jo mov loopne popfq adc jle jno jns ror mov int jns adc cmp mov cmp movabs movabs xlat mov xor or (bad) (bad) jge lea adc (bad) (bad) mov mov loope rex.B data16 loopne xchg outsb (bad) loopne adc int or cmpsl test (bad) pop movabs stos mov cmp js push cmp pushq pop xchg ds (bad) and rex.WRX rex.WR rex.RXB add sub push xchg rcll jl mov mov sbb jo jle lret ffreep push (bad) fptan sub fst lock jno adc (bad) lahf add jmp in jb sbb retq clc or xlat cmc fdivs rex.WRB xor insl in pop push popq movabs stos pop test mov int scas mov in movabs (bad) sahf addr32 callq pushq rex.WR fdivrl push xor (bad) ror popfq adc push retq mov stc fnop and xchg pushq adc and (bad) cmc rex.WRB fisttp fdivs mov iret sarl cmp rorl add sbb hlt cmp sar (bad) movsl stos mov neg jne insb pushq mov mov and xchg ja out rex.W addr32 retq shr rex.WB (bad) add jg jbe sbb test rex.R sub lret rorl jb push xchg loop add sub xor (bad) out sahf (bad) mov loop repnz (bad) adc movabs xchg sub jge add sti mov movups loop xchg mov push out fs xor imul lea sahf pop pop jae (bad) rolb xor mov repz callq iret rex.WX icebp js pop xchg rcll test mov (bad) push mov pop (bad) rex.XB add rex.B or rex.WRX addl fistpll (bad) jbe cmp int3 jno xchg out in fiaddl rex.X or mov lods cwtl add cltd add fwait rol pushfq out jae subb lock pop jp cmp repz mov jge lock (bad) ds and lahf or mov adc ficompl movntps mov out (bad) pushq xor ficomp popfq mov repnz ss xchg outsb (bad) test rex.RB rex.RXB pop sbb xchg (bad) sub je cld rcl cltd jnp add or and pushfq jmpq lock loop fbld add (bad) sub hlt jae jrcxz cmp (bad) mov mov add (bad) orb fidivrl add add mov mov (bad) shll mov xlat sbb callq pop mov iret test jl pop add add test xchg shl lret xor callq (bad) icebp mov movabs sar pop int test rex.WX or rex (bad) out push xchg rex.WRX (bad) add mov jo rex.WRB rcrl lea rex.WRXB rol rex.WB mov retq (bad) xor rolb fistpll or movabs sbb xor clc nop mov test pop mov pop cmp repnz lret mov xchg addr32 repz sbbl push xor rex.WXB out (bad) cmpsl mov rex.RX add mov rex.WRX lock (bad) fbstp lret fisub (bad) rex.WR out mov push sub lock andl js adc cmp sub (bad) mov cld push shlb sarl or loop add jo xchg test (bad) cmp rex.WB add rex.WXB (bad) sbb ja insl mov addr32 imul lahf and xor gs icebp (bad) dec push xchg std mov popfq (bad) in or mov lock or pushfq hlt ficomp mov cld (bad) (bad) add or clc (bad) mov rex.RXB stc rex.X (bad) (bad) stos adc fcompl and (bad) loope out cmp add cmp movl (bad) pop fnstenv add rex.WB or (bad) sbb sbb lock add cltd and push xor mov es and fs (bad) jl out and in xor pushq ffree (bad) jo mov add scas in rex.X jp push shll shl mov lret gs pop adc movabs (bad) lea jns cmp shrl (bad) cs xlat loop (bad) jno test mov and in (bad) mov xlat (bad) (bad) add out pushq xchg sbb in retq jne cld frstor fisub inc xchg repz mov (bad) lahf add rex.X movslq ficomp adc sarl data16 mov and pop add (bad) js xor push xchg cmpsb rex.X vpackssdw (bad) movsb roll lahf mov scas cmp movabs (bad) rcll js (bad) loop imul test xchg sti pop movabs incb mov jl mov es flds test sbb roll xchg sbb ficompl fcmovnb in xchg add (bad) mov (bad) mov sar (bad) iret mov mov push (bad) jnp xor jbe rex.WRXB rex.WRB mov rex.WR xchg rcrl and mov repz ud2 rorl cmpsb insb (bad) (bad) mov sub rex.B je rex.WRXB mov sti pop rex.X sub (bad) ja fcomps leaveq lret pop or pushfq (bad) js rex.RB push sbb sbb (bad) sub jmpq (bad) sarl (bad) sbb xchg (bad) mov rex rex.WX sub rex.WRXB ljmp in or mov rex.WX fs add js and (bad) mov movsl (bad) xchg jne (bad) movabs sarl std (bad) movb fucom adc rcrl lahf cmp mov loopne movabs adc sbb in rex.WX movabs ds xchg stc or pushq cmp iret (bad) (bad) movslq rex.XB jle sar pop xchg sub in sarl sbb (bad) stos mov outsb ss pop rcll rex.WRXB repnz fs imul cltd (bad) (bad) jrcxz xor jmp add xchg insb rex.WB sarl add (bad) hlt xchg rcll sub cmp gs xchg sbbl enterq movabs (bad) movabs jrcxz jno retq xchg (bad) jno pop (bad) ror push mov std hlt mov sbb adc jrcxz adc (bad) adc lret xchg rex.WRB data16 pushfq sarl add xchg shll add shlb rex.WRXB out sub std stos enterq (bad) divl ds mov xchg xor xor out insl cmp stos orl fadds mov rex.WX sub (bad) mov (bad) mov (bad) insl in (bad) std movabs adc ja mov ficoml pop jo sbb xor fwait xchg xor std add (bad) mov icebp es jns shrl imul imul mov cltd cmp (bad) xor (bad) and (bad) cmp or and cmp test orl out push cmp and (bad) je xor sub enterq outsl and retq pop or mull (bad) jbe cmp pop rolb (bad) movabs lahf push fnstcw xor mov shr rex.W or jno adc rex.RB cwtl cmp add mov and lea rex.XB fisttpl out pushq in sarl insl cmovs rex.X test insb xor add rex.WXB cmpsl fld mov adc loopne rex.WX test sbb push jb (bad) or repnz mov in movabs rorb sti xchg (bad) shrl fisubl in (bad) adc mov stos sbb mov mov jg sbb add loope jne rorl cltd jle (bad) xchg negl lea and repnz sbb (bad) cmc (bad) cli shr rex.R (bad) rex.WR jne rcrb mov insb pushq mov stos sahf pushq jb xchg (bad) sar sahf insb sbb rcrb cmp rcl out sub xchg rex.WXB fwait (bad) mov or addl movsl add scas add xor pop mov xchg gs rex.WRB cmpsb popfq mov rex.XB (bad) cmp cmp rex.RXB jnp test jrcxz rex.B push (bad) adc popfq test mov sbb sar xor enterq rex.W mov xor jrcxz scas (bad) push mov (bad) pushfq jno lea enterq int3 cmp mov cld rex.R rex.WRX retq lods cwtl je xlat (bad) out repnz jnp or movabs or (bad) (bad) jae (bad) fs mov movsb (bad) int3 add rcll jle pushfq jne roll (bad) sar jmpq (bad) (bad) negb outsl jae icebp ja mov fsubrs rex.WXB jns int3 sbb sub in push fs jp mov cwtl scas (bad) fsubl test cmp and xchg pop nop mov (bad) jns roll movsb xor rex.RXB sbb cmpsb cmp icebp jbe test jl adc ss iret mov cld (bad) mov mov iret push cmp pop lods rex.W (bad) stc (bad) (bad) jle sarl fiadd mov mov in retq rex.W xor pop repz jle mov clc jb (bad) sti ja or xchg (bad) adc out adc iret push cmpsb lock lret insl out mov pop push movabs je (bad) (bad) (bad) xchg sub rex.WRX rex.B rol adc je repnz (bad) adc jno sbb out rcl rex.X data16 lods add nop fbstp add sahf rcl rex.XB in pushq xchg movabs mov xchg rex.X (bad) movsl loopne xor mov outsl jo pop and jae adc out subl cmp jns lret sbb cmc sarl and xchg or add test int3 sti xchg cmc or adc sbb cmp nop jnp loop and js int3 rex.B xchg sti rex.WRX mov sub movabs jb movabs xchg mov sbb mov mov mov (bad) push test mov movabs sub (bad) out shll movabs jnp (bad) push fistp and (bad) jmp jno mov rex.W and or (bad) mov push add rex.WB xchg (bad) in add jno (bad) (bad) mov add cwtl (bad) mov shll sbb add std pushfq test sub sub rex.WRXB fstl cmp (bad) push retq xor and scas mov testb cmp add scas (bad) retq rex.XB rex.W sub mov ss rex.WRX pop (bad) pop and push mov rex.RB repnz sub and movsb (bad) out or xchg sti mov (bad) retq add lret cmp pushq fucomp fwait pushfq rex.RX rex.RXB sub (bad) test or xchg (bad) xor push movsl fld xchg (bad) adc xchg cs enterq cmp jo push hlt cmp rcll sbb cltd int mov movsb mov movsb mov push int pop (bad) push (bad) shrb jno repz pop movabs xlat xor retq cld mov in ja out cmpsb fidivl jle pop div jg add (bad) sti mov stos push (bad) (bad) movabs sbb mov fstl sbb lock pop jns push pop add push sbb rex.RB (bad) fsubrs rex (bad) imul (bad) xor popfq xor add mov mov lods sbb shr sbb rex.XB gs (bad) mov mov jne xchg cmp adc (bad) push jle sbbq push (bad) test add mov (bad) (bad) (bad) je and push test movslq rex.WB jle mov mov cmp xor cmpsb push (bad) data16 xor or (bad) mov sarl add add mov mov (bad) add push (bad) sub stos std adc int3 rex.WX xor adc repz cmp movabs lock js (bad) push add fs mov rex.W (bad) shl std lret (bad) fcomps ss jrcxz xor adc jp pushfq hlt and mov test push shll cltd in cmp xor in or (bad) movabs (bad) adc jns xchg push flds bt cmp inc stc or pop sti int3 jmpq ror jnp shrl loopne int3 (bad) xor (bad) fs jae and and (bad) add repz and (bad) loopne (bad) and out jne sbb xchg sti push pop idivb xorl pushq mov mov or fmul jle leaveq push lret pop ja push rex sub or pop sub jns rex.X jrcxz pop rcll lahf icebp (bad) push or (bad) idivb outsb pop shll shrw (bad) mov sar je add outsb (bad) push rex.WX jno (bad) in ficom rex.X mov loope rex.RX mov loopne sub or (bad) mov orl rex.WRB xlat add pop int jo in rcl push cmp xchg add imul lods (bad) rex.WX or xchg sti xor loope or xor and and nop pop rex.WX xor push jbe rex.R xor or rcll (bad) in xchg and test xor mov shrl rex.WXB jae fnstenv scas test rex.WRB sti mov pop sub mov cmp in popfq (bad) icebp loopne movslq movsb (bad) (bad) roll cwtl hlt lock iret rol mov (bad) in lret clc lea add outsb add push (bad) mov repz rex.WRB (bad) (bad) enterq mov movabs js scas stc xor movabs (bad) out push stos sarl jo rex.X (bad) cltd mov rex.W and sub cwtl mov (bad) jns callq add (bad) (bad) sub fcom xchg mov test mov and (bad) mov callq mov int3 add ds rex.RX and (bad) mov loopne (bad) repz movabs (bad) insb test sbb (bad) loope rcll (bad) pushfq cpuid imul push mov jmp rex.WR lahf (bad) xchg xchg mov stos jle loope addr32 jmpq mov sbb lret sub and or mov mov push pop movabs xchg (bad) adc add (bad) vpandn sar (bad) pushq push test in je (bad) or push rcrl scas cmc rorb repz add cs (bad) fdivrl mov jns hlt es lods shl repz sub or shl lods (bad) loop cli cltd (bad) or rex.WB sub cmp push clc cmp add sub mov ds pop push leaveq loop (bad) imul (bad) sub lock sub mov scas loope adc push push lret rex.W jns xrelease rex.WRXB callq int test rex.WR and js (bad) adc mov loope rex.RXB cwtl adc mov xor fcmove (bad) mov fisub add rex.B cmpsl xor scas adc fmuls movsb adc repnz (bad) and sbb rex.RX addr32 and test xor push xchg and jno negl loope sar rex.RB repnz in jrcxz xor rolb mov faddl cli fs cs pop (bad) rex.RX repnz movabs gs iret clc retq rex.WXB add (bad) cmpsb xor mov pushq sbb shrb and add int xor retq or rex.WX (bad) popfq rex.RXB pop add pop adcb xchg repz outsb loop rex.WRB jae roll mov sbb xor sahf or fs (bad) jo cmp and xchg in xlat rex or (bad) mov mov and retq add movabs sbb xor outsb test jno (bad) andl (bad) pop add add test (bad) clc rex.B fwait or rorl and pop xchg or loope (bad) xor roll (bad) mov (bad) rex.WR (bad) scas adc xor (bad) pushq xor pushfq rcrl test cltd int data16 cmpsb (bad) jle rex.RB rex.WRB xchg (bad) test pop cwtl lret (bad) mov hlt cld pushq sub pop mov (bad) fldl add (bad) sub divb outsl (bad) repnz cs rex.RX (bad) mov adc (bad) repnz and mov (bad) outsb rex.WRX xchg add adc outsb (bad) roll adc sarl callq add jne ja jns mulb rol callq pushq cmc xchg popfq sub movabs js test sub mov cwtl add adc cs and xor pushq (bad) pop (bad) rex.WXB sbb sahf or mov xchg sbb nop xchg xchg repnz push rcr sbb pop xchg out (bad) (bad) rclb xchg je cmp nop shr jge out jle lock sysret mov mov and xchg and int3 (bad) lret jmpq (bad) jrcxz (bad) adcb push push (bad) sbb scas jno xlat (bad) es and xchg add loope shlb xor outsb loopne (bad) or lock insl jl (bad) in sub sbb ja mov lahf cmp (bad) cmpsl mov out stos xchg mov rcll icebp cltd jmpq cmpsb fsubrl xchg callq or (bad) and fadd lret sbb (bad) scas jle adc (bad) out pop (bad) cmc add callq lods cmc addl add fisttpll add jg adc data16 or sub mov pop mov mov jns shr rex.WX add pushq cs sarl fchs push movabs out shrl sbb cld fsubl fadds push test retq cmpsl sar or shlb push out cmc xchg shrl jbe (bad) (bad) jo xchg cmp incl std push xor add sbb outsb (bad) (bad) cmp test repnz (bad) xor ds adc cmc cmpb rorl (bad) in rex.XB es data16 xchg ja and divb movabs in rex.B jg jp (bad) mov lret jrcxz mov push (bad) lea mov shl cmp mov je fiadd movabs mov rex rex.W rex.XB enterq sub pop in (bad) (bad) icebp sahf out fisttpl adc add cltd stos lret leaveq loopne pop ss loop loope (bad) or icebp jo scas jmp leaveq adc rex.WX lret stos lods notb shr (bad) xchg rex.W lret movsl and rex.B cmp callq sub testl jbe repnz loop (bad) (bad) xorl shr (bad) rex.WRXB lea lret roll and fcmovnbe sar sbb shll fwait (bad) (bad) pop lods rex.RB xchg jne icebp (bad) fwait sbb icebp and sub gs movslq rex.XB add movabs add mov shll jne ror outsb sub (bad) (bad) jmpq (bad) pop add nop loope push (bad) cmp add rex.WRX push shr mov sub roll mov retq sbb cmp rcll mov pop mov test (bad) mov sti in cmp (bad) fildll shll cmpsb mov (bad) and jbe pop (bad) test out rolw mov out pop loop rex.XB insb sbb jns retq xchg ss movsb jl (bad) add fcoml mov gs add push cld shrl test rcr (bad) lods or rcll rex.RB std shrl and sbb mov pop xor (bad) (bad) xchg (bad) mov mov movslq adc jae movsb xchg sbb callq loop repz and (bad) (bad) rex.WRXB mov enterq (bad) pop mov and loope (bad) (bad) pop (bad) add cmp callq jo test sbb imul sbb xchg (bad) stc rex.WR mov jae jle icebp (bad) lock mov rorl rex.WX ds pop repz (bad) ds out movabs add enterq adc int3 mov fcomi xchg rex.WX cmc js shrl ja jae rex.RB (bad) scas pop (bad) sarb and or or pop lahf fs fcmovb (bad) sbb jle vunpcklpd xlat or iret rex.B jbe add xlat cmp movabs insb (bad) cld rex.WR push cwtl push stos hlt jae and jne testl jg rex.XB xchg xor (bad) es and pop nop pop stc fidiv fldcw push movabs sbb fbstp sbb xlat test mov rex.WX xor mov test sub pop sar jno in rex.X or (bad) shrl rex.RX xchg mov push add (bad) incb rex.WX sbb cmp or rcrl xchg mov add pop mov popfq mov std mov (bad) and roll adc out mov repnz jg xor mov ljmp (bad) rex.B xchg hlt adc fwait sub shrl mov sbb movabs (bad) loop nop in (bad) repz cmp test movabs add sahf rex.RB (bad) (bad) imull repnz push xor xor push push (bad) pushq adc outsl add movslq push mov rex.R pop mov pop in loop outsl popfq rex.RXB (bad) push scas mov pushq (bad) push sti sarl movslq repz cli cltd xor fld jp or iret mov mov sbb pushq iret (bad) or jnp movabs jae,pt out rex.WX push (bad) or add fcomps shrl jmp (bad) (bad) xchg clc mov test cmp subl loopne add out (bad) test pop (bad) adc (bad) (bad) cwtl xor rcl movslq pop mov or xchg sub loope icebp mov out jbe add cmp js xchg out pop cli pushfq cmp or adc adc stos add (bad) frstor clc rex.W movslq leaveq fistpll mov pop (bad) sar mov add scas fadd or sbb lods pop mull shll enterw sarl push xchg or mov (bad) add adc xchg callq imulb xchg ror rex.B iret jg mov sub jne imul mov jb xchg pop rcrb and (bad) cli stos out rex.WX mov rcrb xchg sahf add pop (bad) enterq retq adc sub sti fldl (bad) jl adc movb lret adc sbb cwtl shll xor repnz stos lea movabs adc fwait mov loopnel (bad) iret (bad) and rex.WRXB rol stc movsl xchg cmp mov jmpq in (bad) xor fdiv sahf pextrw adc shl int3 jb,pt cmp xchg mov rex.WRXB (bad) outsb (bad) in loopne roll imul (bad) jmpq and cmp (bad) fwait mov retq ljmp xchg insl je sub push pop je and add mov stos (bad) sbb sub rep rorl mov add fs fdivs shr add (bad) xor (bad) fbld and shrl ja enterq or add in and sub retq jmpq rex.X jae (bad) outsl or or push jp (bad) adc xchg (bad) loope cmp or rorl rex.WR repnz mov js imul ficompl (bad) rex.RXB pushq sub add sbb (bad) sbb fild push lahf rex.WR movabs mov leaveq rex.WXB rex.WRX cmp adc rex.XB (bad) pushfq scas mov mov sbb rex.WR mov sarl cltd subb lret jb in rex.RX push xor and sbb rex.WXB loope imul (bad) jae gs leaveq push and mov pop outsl shrl fildl sar cli sbb fidivrl roll insb rex.WX (bad) push out test pop pushq (bad) jle rex.WR rex.WB adc clc push (bad) movb (bad) rex.RB jnp push cmpsb (bad) jp adc fistp pop fnstcw movabs rcll movsb (bad) and cld mov pushfw lcall jnp xlat (bad) retq stc pop cmp or (bad) rex.W mov roll mov lea jns shl int3 js movabs mov mov (bad) sti rex.WB cmp add pushq int3 rol (bad) push xchg shll xchg nop retq lret and pushq loope mov enterq sbb xor pop movabs or pop stos xchg cmp sbb insl (bad) adc (bad) sub mov adc cmc test outsl retq (bad) add (bad) lock out leaveq and je cmpsl push movabs pop rcrl (bad) movabs fbstp in sbb sub (bad) (bad) neg sarl imul mov gs mov push jnp shr (bad) rex.WRXB icebp enterq (bad) lahf push (bad) fcmove loop (bad) loope sbb popfq retq rex.R (bad) orl add (bad) leaveq sbb xchg movabs leaveq (bad) shrl lock rex.R pop (bad) xlat (bad) clc iret rex.W sbb leaveq jp in (bad) fdivs (bad) jno pop (bad) ja add std jno and outsl adc lods ja sbb lock idivb mov stc out fbstp sbb lahf xor loope lahf or std rex.W fnsave mov jbe rex.WR jmp nop cltd testb xchg (bad) (bad) rex.RX fisttp (bad) xor retq movslq (bad) sbb ds mov rex.WB rex.WRX xchg sub mov fucomip test mov xor xchg pop xchg lea mov (bad) mov cmc lods in xlat mov jns sub mov (bad) adc retq rex.WR rol loope test xchg jp mov or sub test int3 cwtl loopne pushfq (bad) sahf and repz out hlt cmp mov or loope loopne (bad) leaveq rex.RX xchg sbb (bad) xchg mov jo (bad) repnz xor int3 fdivrs rex.W clc hlt rex.R (bad) jo mov or mov rolb icebp pop rcr stc (bad) mov sub int rcrl outsl imul scas retq clc psrad (bad) or mov int in push callq cwtl add data16 add xlat in adc adc (bad) (bad) nop (bad) stc rolb iret (bad) lock mov xchg stc cmp mov movabs stc push xor iret sub add (bad) mov ss scas (bad) (bad) fs adcl cmp fcomps sbb leaveq jp jne rcr scas xor bnd mov rex.RX add in leaveq pop mov int3 (bad) icebp pop mov imul xor or cwtl hlt outsb xor (bad) lock mov rex.X mov (bad) out xchg sub (bad) outsb fsts rex.WRXB rex.RXB xchg js outsl xor cmpsb pop mov movsl loopne retq (bad) jmp mov (bad) adc (bad) roll jbe xchg mov or sbb pop test lret in fcmovnb mov sbb movabs test cmpsb retq (bad) retq movabs mov add cld sar mov (bad) outsb mov or jbe clc mov lea (bad) (bad) jmp rex.WR rex.WRB pushq sub stc jle (bad) xor (bad) and adc cmp (bad) movabs sbb sub xor scas retq add iret (bad) jl fcmovnb out rex.WRX clc loope,pn imul jo jns sti rex.R pop int3 jae shll pop xlat (bad) fidivr (bad) fisttpll xor orl fnstenv movslq push stos mov pop jne pop clc mov fist adc lea rex.WRB (bad) mov rex.WRX fistl pushq mov (bad) rex.WXB loopne fisubrl mov sti movd add (bad) add sub adc mov push lret rex.RX rex.WR add sub outsb sub rex.WX mov sahf rorb sbb mov sti mov cld (bad) enterq cmp jo popfq (bad) adcl fwait out (bad) (bad) xchg roll divl jp pushq (bad) (bad) mov icebp xchg in lahf stos (bad) int3 mov fsubl lods jrcxz jge add (bad) iret rex.WR (bad) add repnz (bad) mov mov cltd xchg (bad) ss adc (bad) (bad) (bad) ja sbb mov (bad) leaveq mov ror jmp push fsubl gs fadds add test (bad) imul or push imul lahf testl cmp fidivrl fcomps mov (bad) pop fisubr (bad) xchg (bad) (bad) xchg jne adc add and subl or sub movslq mov mov loope adc or xor rex.R gs xlat rorl mov roll jge shll ss out (bad) ja mov sbb pop movabs mov pop sub push sarl xor loopne mov pop and sub or out (bad) lods mov shlb lahf stc (bad) sbb (bad) add imul lret scas pop (bad) pop rcr lahf out cmp mov lret jns adcb rcrb rcll (bad) mov rcrl pop int mov lret xor cwtl test and mov rex.WX vpunpckhbw in iret (bad) (bad) out scas and xor (bad) mov rex.B in (bad) popfq subl test clc add xor (bad) jl rex.X mov rex.RX jl shrl rcrb stc test roll jne loope movabs sbb loop xchg jo and (bad) repnz (bad) stc sbb (bad) divb adc rex.X mov sbb (bad) (bad) cmpsl mov nop cmc jmp pop fadd fisttpll movsl enterq stos movabs rcr clc popfq xlat rolb sub in shl push movabs pushfq add (bad) cli popfq mov insb fcmovnb (bad) and loop shrl and lret xor lret push xchg movsl imull (bad) jge (bad) rex.WX pushq pop cmp pop retq movabs movb mov mov roll pushfq cld sub mov stos jo lret decb insl pop imul rcll (bad) (bad) jp or rex.R syscall cli jne fsubrl add xchg xlat rorl xchg imul mov (bad) mov rex.WRX (bad) jp movsl add loop sbb sub jb movabs sbb (bad) cmp rcrb cwtl lret xchg xor stos (bad) cmp rex.WRX lahf or add es mov rex.B rex.WRXB fwait push sub leaveq mov cld hlt xchg xchg cmp rex.X jb cmp callq je test cwtl sahf push hlt sbb rex.B ss repnz rorb outsb rex.WX rex.RB nop imul rex.R xor (bad) cmp cld insl (bad) out (bad) mov sub jbe pop cld (bad) in (bad) mov jb rex.WRX stos fsts jno sarl sbb out (bad) sub (bad) cwtl sbb and mov (bad) add fisub addl push add and jns insb mov pop (bad) adc (bad) add frstor add xchg mov movabs (bad) cmp jle xor loopne jo movabs mov out (bad) rex.RX gs rcrl (bad) rex.WR hlt xchg xchg sarl subl popfq repnz or (bad) jl cmp cmc rex rex.X sarl fisubr xchg rcll push int3 rex.WXB in stc rcrl rex and (bad) cmpsb shll pop add adc in mov rol (bad) jmpq mov push hlt xor mov or movabs fs or add xor sub adc int3 cld sbb (bad) adc loop insl (bad) callq (bad) or movaps lret rcrl movabs (bad) fld repnz jmp mov rex.X or fisttpl (bad) fwait shr jge repz retq scas std movsb testb mov shll rex.WX sarl rex.WRB cmp shll push test xchg movabs loop push negl add in sbb sarl jo ror lods jge out mov in rex in and movabs lods lret push rex.W add (bad) repnz (bad) movabs adc push cli jrcxz sbb loopne fcmovb mov mov stc (bad) fsubl fnsave pop rex.B sahf xor je rcl nop pop in mov lret sub decb xchg outsb icebp (bad) xchg jns rcll mov imul xor insl sbb rex.WRXB rex.B (bad) in (bad) jo test shll xchg pop jp rex.WR rex.RX iret add (bad) hlt lea or jg in mov xor outsb lea jge cmp rcll lahf (bad) subb adc jg decl pop (bad) movabs imul sub repnz rex.WRX fs jrcxz shl mov sarl repnz imul (bad) repnz xor insl (bad) mov mov (bad) movslq fistl jg cld imul sahf mov and or ja rcrl icebp lret jl mov in rex.WRXB andl pop push sub xor loop sbb roll (bad) (bad) js stc es sbb loopne xchg cmp or (bad) mov iret or fldl in insb stos (bad) mov movabs int3 enterq push xor popfq or sar xchg xlat fwait (bad) movsb sub nop (bad) pushq sbb (bad) hlt pop insb repz and (bad) sub mov (bad) or adc cmp rex.X push (bad) or stos lret insb mov mov xchg outsl add loopne ds rex.RXB or out repz mov sbb xchg add cmp adcb insb push addr32 jrcxz cli jp jge jrcxz shll push mov not jne rol mov lods pop push ror xor push cmpsl jnp retq sbb (bad) nop pop rex (bad) rex.RXB repz rex.WXB and adc xor pop cli rex.B fwait (bad) jae stc jp rex.R rex.RXB adc mov (bad) jp movabs sbb repnz jbe (bad) outsl (bad) add and repnz or rex.R (bad) stos movabs sbb xor pop add sti rcl rex.R out adc pushfq pop (bad) pop mov fcom fmuls rex.XB rex.X adc leaveq jge adc push in or (bad) sub mov xor xchg and loopne out cs sbb (bad) retq mov movsl (bad) sub add (bad) cmp imul fldenv movabs xlat (bad) fsubrp int3 stos outsl add cmpsl rex.R retq scas fstps es mov movabs movabs xor loop (bad) stos (bad) cs mov rex.WRXB sbb rol sbb (bad) jnp (bad) xchg in jmpq push lret int3 shlb hlt rcll test mov movabs sub fs rex.RB (bad) jns mov or int3 pushq jge (bad) or fcomi and or xchg and cmp rex.RX rex.RB loop sub mov shll rex.X mov sbb (bad) sub shll cmp (bad) (bad) ss lods int3 xor pushq sub (bad) xchg or push jno mov rorl sub (bad) repnz add rcrl pushfq (bad) mov int roll nop (bad) (bad) (bad) xchg mov in jns (bad) (bad) jmpq rex.W fidivr test retq mov (bad) lods enterq rex.W rex.B rex.XB int3 mov shrl movabs sub test lock adc rol rex mov sahf movabs enterq and push and repz push xchg stc xchg sbb movabs mov gs xchg mov and cld insl int (bad) mov repz cmpsb mov rol cs shrb loop rex.WX movslq lret sub cmp stos rorl xabort sbb mov (bad) pop rol in retq addl adc adc int xlat test cli (bad) rex.WB mov (bad) movabs es cld push add scas lods mov cmp outsl sbb (bad) mov sti mov sbb rcrl loopne cli callq lods in (bad) mov mov push push shll movabs outsl (bad) adc jno int or (bad) out mov (bad) insb lret in jp (bad) movabs lea push cmpsb add cmp or xchg rcll rex.RX pop sahf (bad) push gs test shll inc hlt xor mov fdivrs add cmpsl outsl rex.WRX xchg jg rex.RXB rex.X pop jb rex.R in add clc loop movabs or xchg lods push and incl fcompl rorb cwtl and mov movsl leaveq (bad) outsb push mov in mull out movsl fistp mov sub and mov (bad) sbb fs xor (bad) mov xchg and or cmpsl loope mov jl add in fs imul xor xchg mov test int in sub cli pop lods adc fimull lret movabs push rex.WRX mov push scas rorl rex.XB imul rex adc rorl shrl jbe and pop outsb (bad) out jg (bad) pop cmp cmp mov outsl sbb adcb je ss test out add push jae push sbb add push cli fisubrl add (bad) (bad) (bad) (bad) xlat sub rex.R add or es js sahf (bad) ss jle add sub movslq movabs or sub pushfq repnz (bad) mov rcl (bad) in (bad) lahf mov (bad) rex.WRX pop add add adcl loopne addr32 or mov cmp and sub xchg hlt pop imul pushq std rcll rex.RXB mov pop iret (bad) rex.WRB mov stos pop imul ror incl or cmp rex.WRXB fs shrl mov rcrl rex.WRXB sbb movabs mov adc enterq adc repnz rex.RB push xor mov jb push stc retq test (bad) rex.WRXB and cltd lret mov shl scas test push addr32 test jns lahf (bad) cmc rex.RXB add js retq cmpsl jnp rex.WXB sub xchg shrl out mov loop pop enterq loope movabs sahf gs jno (bad) xor sarb loopne (bad) (bad) outsl mov movabs adc sub fcmovb (bad) rcrl flds sar icebp sbb cmp rex.WXB leaveq jo (bad) js hlt shrl rex.R push sbb jns insb std fwait mov sarl jne in (bad) movsb lock mov (bad) mov jae iret stc pop or rex.WR in lea movabs adc adc (bad) and leaveq mov and outsl (bad) (bad) fwait mov jns and rex xor sub shr (bad) shll cli ror andl xor (bad) shll push mov rex.WX subb sar adc shrl sub (bad) jl std rex.X movslq cltd fistpll stc fisub popfq mov xlat rcrl xchg rex mov sbbl (bad) out pop imul test mov sub push sahf movsb in mov hlt loop mov mov jnp sbb sub stos adc test (bad) push shrl clc lret (bad) in (bad) jnp loop imul jbe popfq (bad) je (bad) rex.B cmpsl pushfq lahf movabs out scas push callq mov xor rex.XB fwait adc pushfq loopne fxch add rex.RXB roll enterq mov in xchg loop retq xor repnz (bad) jae and (bad) (bad) js movsb xchg rex.RXB cmp xchg sarl je roll rorb pop xor jae std ljmp shrl pop xor and (bad) cmpsb add fldt repnz pop cmp in jne rcrl jp sbbl je add xchg jg adc addr32 rclb cmp in sbb ss (bad) icebp xor (bad) pop add sub (bad) sbb or (bad) (bad) add shll ficoml repnz movabs cmp mov cmpsl or rex.WRX rex.RB out leaveq xor and jl rex.WR in (bad) rex.X subl (bad) retq (bad) mov negl cli jns mov roll mov rex.WR lret xor imul sub ror rex.RX lret (bad) decb (bad) shll mov (bad) sbb rex.WRX and (bad) adc out bnd (bad) rex.R sub mov xor xchg jo lret add insb rex.X lock push (bad) push mov (bad) out xor sbb jb in loopne jae loop rex.RB (bad) rclb sub lret loopne xor add add lods fildll xor and sbb out push outsl stc clc push in test rex.X cmc movabs sub test repnz notl fsubp adc jmp cs push (bad) rex.WB (bad) mull (bad) cmc (bad) es mov sub xchg iret fs cmp lret sub or push test shl rex.WX (bad) pop stos in test clc rex.WRX lock and or cmc (bad) sub fnstenv movslq push mov repnz std rex.XB imul imul pop sub ja lods (bad) rex.W rex.XB rex.WRX in test insb or (bad) roll and fsts pushfq rcrl mov (bad) sarl fcmovbe cmp fadd sti mov (bad) outsb (bad) cmp mov outsl (bad) sub or (bad) mov (bad) rcl icebp (bad) lock pop (bad) sti scas push pop sub jo (bad) sbb cmp (bad) rex.RXB ss (bad) add mov (bad) jge mov rex.R jnp in movabs outsb lret and rex.WXB add mov sub rex.B sub jge push movsl mov and pop cmp lods popfq push mov xchg xchg rclb jae pop fcomip xchg fisttpll in (bad) mov adc jmp jmpq callq mov mov mov xor ss fisubl cmpsb int rex.WRXB rex.B cs and movsb nop rex.WXB pop outsb (bad) xchg je pop shrl iret mov loop add movabs rex.WRXB shll rcll sbb lahf in jne xchg (bad) sub push jne push ja mov es sbb (bad) xor pop lret stos in icebp push insl or loop adc pop rcl (bad) mov je rex.WRB repz roll and sbb fstpt loope (bad) sub mov outsl std mov cmp scas enterq stos push sarb (bad) (bad) movhlps mov jge movabs cmp add xchg leaveq imul test test in mov (bad) out or rex.WXB cmpsb scas push (bad) adc sbb lock loopne xlat retq cmp and fwait gs popfq mull pop (bad) cmp lods push xor mov cmpsl jne jo outsl rcll rex.WX rcr sbb mov out (bad) mov sbb (bad) cli sub and rex.RXB pop jmpq or mov rex.X lock int3 push fdivrs (bad) (bad) ficom shrl lahf mov nop sub add retq mov xor imul movabs jmpq rex.WRB (bad) iret retq hlt (bad) sub add sarb rex.WRX (bad) test je jle and (bad) in mov xchg jnp lods pop out int3 jb and retq (bad) int rol jbe ficompl fs rol cld jle imul xchg cmp mov jp xor adc loopne add jns xor (bad) out cs movabs (bad) lock mov pop xor int rex.WRXB rex (bad) loope movsb in rex.R rex.WRB sub icebp xchg mov repnz (bad) sub pushq or mov jl mov lret sub mov (bad) mov lea rolb jp push movabs jg movl mov popfq (bad) pop mov shr cmp cli (bad) mov cmc add mov rex.WR mov repnz mov mov imul rex.RXB in jo repz cmp repnz or int3 pop lea pushq lock rex.R repnz js sbb xchg mov jg rex.WRB nop pop sub rcll imul in add lret (bad) sub lret cmpsl push push hlt jl (bad) (bad) js or xchg rcll lret mov movabs ficompl movabs and mov movslq outsb subl mov lahf je jb adc mov add out (bad) lahf sub outsl pop imul or xor (bad) xor cld jp cwtl sbb cmpsb and rex.WR ss cmp rorl hlt loopne xor xor popfq pop repnz add sub out sub add mulb (bad) mov rex.B rex.WRXB rex.R test xchg std jg mov pop pop movabs sbb jrcxz or cmpsb fsubs rex.WRX sar cli sbb and lret (bad) (bad) fwait jno fnstenv jmpq repz sbb push adc fnstenv add test add cmpsb shlb cld (bad) lret (bad) rex.WX clc ds jp movabs cmp rex.W rex.WRX (bad) movabs (bad) (bad) mov loope (bad) xlat ficompl lahf out cmovo xchg flds pushfq mov rex.WRB jb (bad) fisttp (bad) mov cltd pushq fwait mov jrcxz xor push mov sbb lret addr32 (bad) xchg (bad) mov rex.WRXB repz repnz jne add fadd mov push mov sub shl push (bad) sarl addl (bad) jo cmp (bad) scas adc add (bad) xchg callq movabs sbb push shll rex.RX xchg shl test mov (bad) jno pushq jno (bad) movslq retq jae in rcll sub (bad) xchg fcmovne (bad) fld in (bad) sbb in mov add (bad) incl mov rex.WRXB sarl sub movl roll rolb push pop cmc ss ffreep retq repz movb (bad) (bad) mov rex.WRB xchg rex.WRXB testb (bad) shll add rcrb xorb fadds shlb sub test push cmp (bad) pop mov rex.WRXB mov jae stos or xor enterq rorl adc mov fild gs pushfq add test mov push cmp jns (bad) sbb (bad) adc mov pushfq mov movabs repz mov adc (bad) loopne shrl and pop add rcr callq add pop div cmp and and retq sbb rex.X icebp (bad) (bad) xor mov add and add ja rex int pop clc (bad) loope fldl2e hlt stos mov test fisubrl cld int3 xchg xor add loope clc loop movslq stc mov adc (bad) mov rex.X xor sbb icebp cltd scas (bad) (bad) rex.WXB mov outsl shrb mov rex.WB jp movsl and push stc jns stos mov sbb repnz and rex.RB bnd fcmovnu mov fs xor mov je mov adc fs (bad) cmp iret popfq nop insl xchg movsb (bad) icebp movabs enterq scas addl rex.WRX cs (bad) sub fiaddl data16 cmp hlt out (bad) add lock pop test pop (bad) (bad) (bad) cmc roll and pop add out pop rex.RX rex.WRXB std rcll sbb (bad) mov (bad) shll (bad) (bad) xchg je ja (bad) sbb xchg jns jp xchg xchg push or ror (bad) xor rex.RB mov cli ss sti xor add and rex.XB imul pop shrl rex.XB mov rex.WX test loop jmp test data16 sbb (bad) rex.RX cmpsl sbb xor mov sbb cwtl (bad) mov fmull xor nop sub cmp pushfq push (bad) cmpsl (bad) stc mov jle movslq or xlat rex.WB or js cmpsb pop jns (bad) (bad) fwait stos int3 mul (bad) (bad) movabs xor mulb mov movabs xlat (bad) mov pop and pop roll test lods fiaddl pushfq int cmpsl xor jg adc in enterq (bad) shlb mov rex.WRX lods mov cmpsb (bad) or xchg or pushfq and xchg and rex.X and jge jmp sub and hlt retq movabs add mov lret cmc cmp adc mov icebp cmp roll rex.WRB pop or rorl int3 pushfq stc orb clc adc cmp mov (bad) mov mov shll add shrl adcb out int rex.X notl mov cmp mov (bad) push pushq imul (bad) pushfq adc movabs cwtl sbbb pop stos sarl and rex.X rex.RB (bad) mov rorl cmp test (bad) pop (bad) (bad) imul jge push cmp (bad) xchg sbb (bad) rex.WX (bad) mov push and lods xlat shr add xchg lahf push in xchg jle cmp xchg (bad) rex.WRXB jl movsl roll (bad) pop cmp movabs push ficomp rcll and add jbe pop (bad) int sbb jrcxz xchg (bad) subb mov xchg mov jrcxz scas pminsw idivb adc (bad) int (bad) jno loope lret mov (bad) movabs cmc mov push xor or frstor pop jnp test xchg fcmovnb imul mov adc xchg or jb addr32 cmp sub add sarl icebp cltd sbb enterq xlat and fdivs jo movl rcll mov xchg (bad) insb shrl jg divb xchg push (bad) sbb fistpl add fbld jmp movabs out jns iret int3 movsl (bad) jle mov xchg pop inc xchg movabs callq repnz mov adc out ds adc mov (bad) xor rex.WX icebp stc (bad) out insl retq out jg stos std pop outsl fwait (bad) xor retq push xor (bad) fcmovnbe (bad) div je fldt pop out rcll push jmpq or adc mov in out (bad) fstp push (bad) add adc (bad) push add ficompl (bad) test movabs (bad) mov mov orl jbe fbstp lea pop xchg adc xor lahf movslq lret rex.WX jno jb loope (bad) pushfq xor pop mov in nop xchg rex.R rex.B repnz lods insb leaveq cmpsl outsb leaveq (bad) (bad) or mov xor xlat incb cld clc mov cmp xchg mov mov add cld rex.RB mov js cmp sti stos jge or mov jl movabs rex.WB jno rol movl cmp jne or (bad) sbb gs xchg popfq xor outsb sbbl fdivl ficoml movsb in cmp mov outsl jp faddp divb ud1 pop cwtl fdecstp jae cmc (bad) fwait lock cmp jge or rex.RXB std sar jno popfq sbb sub sti iret (bad) add enterq jl ficoml rcr (bad) sub pop jae jmpq mov mov js sbb cli rex.RXB mov lret sbb adc stos fisub divb lods jl mov ror xchg rex.WRB fwait xlat (bad) or fmuls in out sahf sub enterq lret (bad) iret pop pop xor je rex.W sub rorl adc sub cli adc stos roll push movabs fcomi mov sub rcrl mov fsubrl rex.WRB stos and iret and cmp rex.B repz shr jp lcall rex.WRX sbbl mov push rol xchg mov xchg fldl add fstps cmc shll mov add cmp rex.XB (bad) (bad) pavgb or rex (bad) mov mov pop push andl jge or cmp sub push rex.WXB and push (bad) repnz rex.WR shll clc retq sub enterq (bad) mov rol outsb cs fstps fildll iret stos (bad) sarl retq popfq (bad) fldenv (bad) mov rorl jle (bad) cwtl (bad) push mull (bad) (bad) int movabs in fdivl je (bad) out sbb or (bad) pop lods gs cld sub xchg enterq (bad) mov mov add cmpsb (bad) and add test (bad) imulb (bad) sbb (bad) and sub rolb and (bad) xchg rex.WB loope mul test jns movabs lods cli and mov cmp (bad) test addr32 iret leaveq jmpq mov retq imul insl in jno int3 je lods (bad) and adc outsl and rol or push fistl add imul mov rex.WR rex.WX (bad) mov callq (bad) loopne enterq xchg ds xlat jnp pop or in subl int3 (bad) sub sub movabs movabs rex.WB jrcxz (bad) fnstcw cmpsl mov jmp (bad) xchg xchg mov scas jbe cmpsl fmuls movb add add (bad) fldpi and rex.WB fildll int3 imul outsl cmp jb mov movabs test xchg mov rex.R cmp sbb xlat repz retq sbb loop or fadds fcmove adc (bad) faddp jbe pop pushfq imul (bad) imul lret sbb (bad) (bad) je in scas and jne jns pop (bad) add imul rex.XB mov sahf (bad) movabs xor jmp xchg movabs push cld cltd movsl roll (bad) lea addr32 roll and lods leaveq shrb retq rex.XB rex.B stc rex.RX cld sarl fldenv sti rex.RB xor or mov sbb push mov std pop rex.WXB (bad) jbe shll (bad) ror (bad) loop cmp fmuls cmp xchg (bad) mull push retq movslq (bad) xchg rex.WXB outsb rex.WRXB pop jnp adc xor (bad) add jns jp sbb jnp leaveq movslq and rex.XB (bad) fcmovb xchg repz mov int sub and pop rex.WX cwtl push xor cli (bad) xor test sbb jns jmpq xor test loope sbb (bad) jp test sub mov (bad) sub jae rex.WRX rex.R and fistpll and xchg incb repnz scas mov je rex.X or cltd push (bad) mov mov leaveq test (bad) (bad) sub and (bad) add int3 and and sub cmp mov repnz enterq fucomp int sub sbb push and xchg rex repnz (bad) cmp sub (bad) jl std add jbe jno enterq (bad) or (bad) fidivl int3 lods enterq int (bad) repz lahf mov test mov jb jp push loopne mov jb roll jno jle mov rcr loopne pop cltd mov xlat or repnz sub stos stc fisubr jg push data16 popfq in push sbb movabs push rex.WRB or rex.R callq mov js xchg mov fwait testb mov cmp and add mov add xor rex.RX mov or rex.WR sub (bad) roll fwait adc enterq imul (bad) (bad) out mov (bad) jo cli rex xor mov rex.W lods lock repz (bad) xor lahf add xlat fwait add push outsl rex sbb pop xchg (bad) jne clc sub pop jns (bad) lock loope and movabs add fdivrs cli xchg (bad) rex.WB repnz stc (bad) lret fild or sbbl (bad) (bad) or callq jb rex cmpsl in (bad) xchg fidivrl xchg sbb retq (bad) rex.WR xor fadd lret (bad) ds (bad) cmp xorl fiaddl repz rex.XB cwtl movabs movabs pop push push jmpq xchg cltd mov stc add mov or icebp push mov fsubrl pop movsl sub leaveq insb rex.B clc orb jrcxz movslq rex.RB xor clc bnd adc xor xor icebp in cmpsb push subl xor and xor push rex jne sub in nop xchg stos out adc jns repnz xchg xchg flds cmpsl rex.X rex.R cltd (bad) in push (bad) rex.WXB leaveq callq (bad) cld mov roll or rorb test lods imul rex.X rolb test shrl pop push sarl xchg fs mov (bad) cwtl xchg pushq rex or mov sbb rex.RB decl mov (bad) rex.XB scas iret popfq cwtl add push lahf rol and cmp loopne push shrb cli and in cmp (bad) sub insl (bad) imul (bad) pop cltd and push and push repz (bad) xchg popfq lock (bad) mov out fs rex.RX jp (bad) adc (bad) add rex.WXB (bad) lea xor gs stos imull add jle mov loop sbb mov (bad) xor orl iret and cltd sub jb ror mov xor retq xchg sahf out add cmpsb jnp (bad) fcoms mov sub roll sti roll mov rorl imul xchg rex.RX (bad) adc (bad) xor adc or sti iret test and xchg push cmpsb shll (bad) (bad) shrl js push xor (bad) and sub jmp mov jne pop lods fwait (bad) jno (bad) cmpsb shrl rex.WXB add jg (bad) mov popfq cli xor gs rex.WX jbe fucomip pushfq (bad) cmc sub push and fisub cld std cli mov rorl xor push (bad) jbe adc jrcxz or cltd roll rorl outsl sti rex.X sbb adc xchg insb enterq leaveq lods movslq loopne iret iret rex.XB cld rex.WR rex (bad) movabs rex.XB shll add xor sub loopne rex.RX xor and movabs rex.X faddl (bad) xlat rol rex.RXB fidiv cmp psrlq mov nop rex.RXB rorl (bad) rex.B push jnp jmp or in (bad) stos (bad) rex.WXB ss xor (bad) (bad) int mov mov mov in mov int3 or test and pop (bad) xchg mov rex.WRB fnstcw jg lret (bad) jo (bad) jge out add nop jmpq shrl (bad) sbb mov roll pushq (bad) cld push pop mov xchg (bad) rex.W test test jg fcmovne (bad) jl movsb rcr mov sub jno push push (bad) sarl sub cwtl (bad) lods cmpsb out sub xchg rcl int jo mov sar push cmp adc shr mov rex.X jg int (bad) roll (bad) add loopne stos (bad) cmpsb pop mov mov callq not (bad) (bad) (bad) movabs jns in rcl cwtl rex.R sarl (bad) mov stos shrl out sti rex.RX mov (bad) addr32 mov pop lods scas and fsubl (bad) mov test repnz (bad) mov sub idivl movsl (bad) (bad) shll mov cmpl pop (bad) insb lret icebp pop xchg mov sub xor jb mov rcrl test int int loope rex.RX or xor shl sbb mov (bad) sarl stos or (bad) xor rorb movabs and shll or rex.RX movabs (bad) negb and lret rex fisubl outsb fistl rex.WRX lahf adc imul loope (bad) fistpll (bad) push (bad) mov or out cli je test roll add rol rex.WRXB add movslq xor or cmp rex.WB movsb or cmp adc sahf movb sub (bad) cmp (bad) rex.R add rex.WRX rex.WB (bad) retq rcll std cmp rex.WRXB mov rcll push negl ror mov rex.B mov shll (bad) adc movabs std mov out lahf stos enterq sti fwait rcll rex.XB (bad) out (bad) sahf ror mov cmp (bad) (bad) sar (bad) clc (bad) and insl pop fs shll in ja movabs xchg callq faddp jl jne pop jrcxz (bad) or pushfq push rcrb shrb out xchg xchg sbb xor and (bad) cmp jp movabs jo ss push (bad) cmpsb loop imul rorl jno mov xor jnp mov xchg movslq testl (bad) repnz shrb (bad) jno cs and jns rex.WR bnd (bad) rex.WRXB lock (bad) mov or sub cwtl xor cmpsl and push insl cld (bad) (bad) (bad) push iret rex.X int test pop fcoml mull push addr32 rex rex.R orb jmpq pop ds imul and stos jnp (bad) xlat (bad) jno leaveq and adc out scas or (bad) neg sub std lods cmp mov int lods rex.WXB cmc out ja push clc add pop movabs xlat rex.W pushq loope retq sub jo sub shrl and (bad) pop hlt xchg add pop out sbb pop rex.RXB imul mov xchg xchg mov mov mov sub test out (bad) (bad) fadd sub (bad) pushq shr retq imul or insb (bad) js (bad) (bad) mov test mov movabs idivb leaveq sbb sub adcl mov lea rex.RB mov movabs test iret (bad) mov icebp cmpsb pop movabs movabs mov jno movabs sbb rex.RB cmp (bad) mov mov fistl retq sbb clc push or icebp shrl adc xor push shlb in cltd stc cli movslq xor lahf lret add (bad) jrcxz fbld (bad) push decb test ror nop cmp outsl add es cmp sbb rcrl push lret mov (bad) insl sub adc je mov (bad) sbb add mov (bad) xor or (bad) loopne (bad) in rex.R xchg mov loope sub sbb (bad) cs xor lock (bad) cmpsb mov sbb leaveq xchg retq cmc mov mov mov decb push (bad) icebp (bad) fs mov jae mov movslq rol lret (bad) lock or rex.WRB mov rcll imul sbb jge (bad) adc pushq push or hlt ds repnz pop mov jb movsb add (bad) xchg mov adc insl (bad) mov push and movabs or rolb jrcxz nop xchg addl test rex.WX pop cmpsb jmpq movsb lea loopel xor pop cmp (bad) retq jrcxz (bad) xchg (bad) outsb (bad) ss (bad) in mov mov cmp xchg add sub push add pushfq xchg cmp (bad) sti andl fstp cmp jb sub xlat int fstpt outsl rcl sub push sbb jp stos sub shl rex.WXB leaveq cld pop movsl repnz jb frstor rorb rex.B fwait shll xlat pop sbb rcll negl pop rcrb sub lock lahf mov and sbb jae rex.RX in push jp mov movabs xor add jl jle sbb add in movl imul xchg mov xor or rcrl ficomp (bad) fadd lock hlt pop xchg movabs or mov stc and rex rcrl mov rex.RXB rex.W cli lahf shrl (bad) andb sbb add (bad) xor add mov add rcll mov int3 lahf in rex.WRX imul xchg jmpq rex.XB (bad) add mov rex.RB rex.B data16 rex.WRXB cmp and cli cmpsb (bad) (bad) mov rex.XB ss vmovhpd jbe out std mov add rorl rex.XB sbb mov and sbb rex.B or jmp add rex.RB cmpsl rex.R iret mov push (bad) movb fld adc xor mov sbb (bad) neg leaveq (bad) cmp pop sbb sub xchg cld jns lea push rex.RXB loopne ds cltd vphsubsw (bad) sbb rex.WB jrcxz (bad) shrl mov (bad) xor leaveq sahf push rex.WB jmpq rex.R rex.WB movsl iret and sub cmp fcomp (bad) cmc (bad) push jno (bad) rex.WR sbb movabs enterq sub xor mov add es test data16 (bad) (bad) pushq (bad) rex.RB adc iret rex.B rex.WB int push lods divb mov (bad) fsubrl movslq add lods rex.RX mov xchg or cmp xor mov callq mov (bad) test cli (bad) rex.WRB or sub rex.WRX mul (bad) cld mov faddp rex.RXB rex.XB pushfq shrl loopne repnz (bad) mov and sub or movslq fldl jo cmc pop fnstcw mov outsb jae hlt decl fadd rex.B je cmpsb jae test cmpsl cmp adc je (bad) or js insl paddw pushq icebp stc shr in pop xorb test cmp and jmp adc cwtl xchg or adc cmp movabs fimull repnz ficom fldcw mov (bad) sub (bad) add in sbb fs lret fstpl outsb mov movsl std (bad) hlt fisubl add ja adcl lret jrcxz jns (bad) jl mov cmp out test cmc xchg jrcxz sti add loope stos jno mov add callq xlat add rex.X sahf fistpl (bad) movabs jbe fstpl or push retq jl or rex.WRXB in (bad) (bad) fcompl (bad) (bad) add shlb sub pop or (bad) int3 ja je rex.R rex.WRB xchg jmp test cmc mov std pop adc (bad) pop xor mov sahf retq mov rex.WRX imul add sbb push lea callq jnp mov retq rorl (bad) jnp iret xchg mov fidiv sti (bad) pop cltd rex.WR fs addr32 retq mov push mov mov mov mov rex.WB sbb and xchg xor add hlt xlat mov rex.RX rex mov mov rcrb flds cltd sub hlt adc sbb and rex.B repnz cmpsl (bad) cmp loop xchg sub in rcr rex.X xor xor jns (bad) jns xchg (bad) rol cmp jrcxz pushfq pushq rcll pop rcr int mov mov or (bad) mov pop (bad) pop rex.W ss (bad) xor lret or (bad) (bad) out jno push (bad) rorl push movabs jmpq shll cld fnstsw fldl rcll mov jnp rcll (bad) nop (bad) sub xor lea push lret push jmp hlt xor rex.WX rex.XB lret ss icebp xchg push or rex.WRXB sub rorb jge rcll stos add movsb icebp iret mov outsl rcll fbld (bad) mov mov fsts repnz mov sar (bad) xchg xchg out js pop jle rex.WRB negl rorb fs in rex.B lret (bad) push rex.RX hlt (bad) jnp andb (bad) rorl mov roll (bad) insl roll retq repz mov popfq hlt xchg in xor movsl or mov fstpl icebp add cmc pushq int3 xor push (bad) in (bad) mov sub cmp fnstsw loope ficom rex.XB sbb jno icebp icebp xchg fcmove cwtl rex.WRX jle cmp mov addr32 cmpsb movabs cltd stos mov rep movabs (bad) rex.W (bad) mov (bad) and in (bad) sarl adc xor push lods xchg sti mov add cmp cld gs (bad) fisubl pop clc (bad) loopne movsb sub shll add xorl mov in test rorl scas (bad) mov rex.RB imul roll mov cmpsl (bad) div push xor popfq jl rorl mov jbe push add jmp push lret pop insb rex.WX cwtl (bad) adc rcrl movabs sub (bad) adc jns (bad) add pop repz pop ds rex.W (bad) mov add pop movabs lahf or ss out callq or pop in fcmovnb xchg sti cmp icebp rcrl mov movabs mov rex.WR rex.RX push rex.WX xlat (bad) mov (bad) rorl cld repnz xor rex.W cmpl (bad) out or std int3 rex.R adc jmpq repnz (bad) cmp decl roll and mov sbb push out pop cmc pop push adcl ja jns xchg jno sub mov lock jrcxz rex.RB rex.X leaveq movabs rex.WRXB (bad) fxch ffreep or jno rex.WXB add adc cltd lock rex.B mov add and retq mov rol mov (bad) loopne (bad) (bad) out xor jmp icebp movslq std js cld (bad) in out sub cwtl jmpq adc (bad) jnp xlat mov mov (bad) rex.R add fisubl jo sarl and mov add (bad) xchg movsl popfq cld shrb out loope fs shr cli rex.W xchg (bad) loop mov pop cs xchg in jbe rex.WRXB rex.WRXB rex.RB movabs es cwtl shr add (bad) xor divb repnz in adc rol or mov rex.WRB ror int outsb (bad) loop (bad) jg adc jmp mov lret xchg mov pushfq xchg pop push shll fistpll retq (bad) push sub int mov (bad) cwtl xchg rcr mov adc (bad) push cs out mov test and ss (bad) xchg xchg repz pop rcll iret std (bad) mov xchg pushq jmpq sti test add (bad) push and pushfq shr rorb subb or shll cmpsb repz (bad) pop mov rcll cld adc xlat jne movsb and test rex.R push fdivrl and movabs push test insb sar (bad) jno sbb lret rcll repnz movslq imul push cmpsl mov mov sar data16 scas insl lock lea jo stos movsl jno movabs retq insl sbb (bad) notb (bad) mov pop in cmp enterq shrl jmp sarb fadd fbstp adc push mov cwtl or addb adc pop iret (bad) mov lods (bad) movabs jmp mov rex.WX and xchg push fidivr mov movsl (bad) xchg mov mov push roll out push (bad) or xchg (bad) rex.W rex.B jg adc in gs mov lahf clc lret jle jbe insl mov (bad) loop andl (bad) xchg shll test sub (bad) shll (bad) jmpq mov ds pop mov fs fisubrl int (bad) jo and (bad) (bad) out cmp iret fcoms leaveq add (bad) iret sahf jmpq adc icebp in pop fs rex.RX outsl movabs loop lods ffreep cmc retq (bad) shr (bad) insl (bad) int3 vcvtpd2psx loopne (bad) mov (bad) sarl lret std shrb in (bad) push repnz loop testb shrl in jle add sti in jge or (bad) (bad) jno sbb push stc in or shl (bad) mov cltd mov neg fs sub movabs sub addr32 jne movabs rex.WRB scas pop pop stos repnz (bad) sub (bad) adc sbb (bad) adc scas mov jge (bad) adc ror int3 xor pop (bad) jns mov (bad) out movslq frstor xlat sarb sub imul adc or mov add xchg shll mov mov rex.WR jle (bad) jo repz sub sub push fildll (bad) test sub cmp cmc loope cmp fnstenv cmpsl mov rex.WRB in int3 loope (bad) mov xchg rex mov mov lock callq fnsave push add add cwtl movsb mov fstps (bad) clc push jo (bad) stos fnstsw repz mov or rex.WB rex.RX or cmp (bad) leaveq jg fisttp jmpq js mov movabs iret lock rorb mov (bad) rcrb push (bad) retq sbb fdiv (bad) in stc fsts mov or loope rcrb cmp xchg push mov (bad) (bad) mov shr fucomp mov fdivl sub (bad) pop movsl int3 jae sbb sub movabs movabs in add cmpsb jae stos add jrcxz,pt and add cltd cmp mov jns pop xchg test jb mov ffreep jo (bad) sub movabs rex.R repz insl fstpl in callq repnz out (bad) pushq rex.WR sub add gs sbb add add retq xor in sti pop mov int sbb outsb or (bad) add (bad) rex.WR xchg xorl pushfq data16 mov add mov rex.WXB mov iret retq adc mov rex.X and (bad) adc outsb in lret insb (bad) cli fiaddl cld rex fidivr cltd mov mov (bad) sub or (bad) movsb fs mov lods jp mov iret add adc clc leaveq frstor add mov cmp add int rex.RXB mov (bad) rex.WB pushq movabs cmc rex.RB iret or js shr enterq xchg loop rex (bad) add mov rex.RB loope (bad) (bad) rex.B movslq repnz (bad) (bad) mov fimul xor in callq sub (bad) out popfq (bad) pop (bad) and (bad) (bad) sbb mov push cwtl xchg cmpsb pushfq (bad) movabs rex.WRB out (bad) jge fdiv (bad) ja rex.WB or test imulb jno and in rex.WXB rex.WXB rex.X mov (bad) jo (bad) repnz mov je test fnstcw (bad) ja rorl insb movslq lahf and (bad) pop cmp int3 jg sahf adc (bad) (bad) rclb cmp pop imul or mov mov (bad) sahf testb jno mov fadd (bad) mov jo (bad) fwait fwait je (bad) test fnstenv rex.WXB fsubrs sti adc scas mov cmp (bad) fldt stos jmp cmp cmp cwtl xchg roll add push and (bad) cmp mov sub (bad) mov push sbb sahf mov xor jae retq movsb rcr imul jmp rex xchg stc xor lea fwait (bad) mov and pop hlt (bad) pop xchg jrcxz xchg mov adc movabs mov out xchg and pushfq pushfq (bad) iret cmp cwtl or callq pop mov rex.WR sbb mov rcll (bad) jbe mov (bad) js nop (bad) in (bad) rex.WX mov jmpq cmp and insl rex.X (bad) stc or sub xchg lahf out adc xchg icebp add shl xchg mov (bad) sub (bad) lock xchg rex.WXB jle (bad) or fidivl rex.RB mov (bad) sbb movabs sbb (bad) mov push (bad) mov addr32 pop shll outsb cmp xor jne lock mov mov fwait (bad) xchg jae repz repz loop scas lods out retq in stos leaveq mov (bad) jmpq mov adc data16 xchg loope adc adc mov je out lods xchg fmuls (bad) mov shll sahf movsb lret sbb mov pushfq cltd sub movabs pop (bad) stc lcall roll xchg rex.RB (bad) adc retq mov lahf rcl repnz or xchg fimul js and mov rex.RX repz movsb stc je or (bad) mov xor (bad) (bad) or out add (bad) cmp (bad) mov adc pushfq (bad) (bad) or (bad) out gs xchg clc rex mov ss rol lods jb rex.WR (bad) (bad) (bad) out rex.WB sbb mov mov rolw ss ror scas pop test add cmp jrcxz fbld xchg (bad) and sarl add es sub retq (bad) sbb rex.RXB jp fldl mov scas jmp and insl rorl xchg rex.WRXB cli (bad) pushfq (bad) cmp xchg push ds xor jp (bad) (bad) (bad) enterq rclq mov lahf adc xor rex.X fwait cltd jmpq or (bad) jne add pop movslq enterq rex.R scas (bad) cmc test sub adc stos mov jp rex.WRB repz add (bad) mov jge xchg xchg rex.R mov cmp scas push sti xchg pop (bad) callq jl cwtl sbb shll (bad) (bad) cmpsl mov rex.XB cmp cmp rex.RB sub je sub rex.X repnz rex.XB jno jns or cmp pop add sbb adc retq xchg fistp shrl rol lret ds cmp pop cwtl push cmp fisttp orl loop jnp fldcw test (bad) (bad) and cmp icebp and mov loope int mov xor push (bad) (bad) sar sub or (bad) pop xchg lods lret sar movabs lret jl js hlt mov sub (bad) (bad) and xchg mov mov (bad) shl (bad) cmp mov shr sarl (bad) rcrl out lret jb,pt add jo mov mov (bad) add (bad) mov pinsrw lret lods test adc (bad) xchg and mov (bad) ja sbb xchg or out repz rex.RB ffreep fcmovbe rex mov or jmpq lret rex.WR fldt (bad) in jne sub pop (bad) outsl (bad) push rcll sub sarb pop lret enterq xor or lahf rolb sbb rex.WXB fistpll xchg mov fistpl or retq sub xchg cmp pop (bad) pop rolb mov mov lea stos xor enterq retq add std push enterq test rex.WR rex.RB mov je movsl mov push es repz (bad) rcll iret cmp (bad) jbe push xchg xchg mov mov hlt roll test xor cmp rol out fnstcw xchg (bad) xor rex.WRXB jnp cmpsb (bad) sub movabs (bad) or shrl out mov cli mov rex.XB xlat pop jl cmp (bad) fisttpll add mov mov mov mov (bad) int3 rex.WXB rex.WRXB cmp pushq movabs (bad) enterq jnp repz callq sahf mov (bad) mov rex.WRB or cmc es jbe push jmp (bad) or (bad) movsb xchg xor jp imul (bad) test sub loope fcomip or xchg shll cwtl movsl mov (bad) mov mov xchg jns shlb fs (bad) or psrlq adc (bad) cli or (bad) and out rorl rex cltd (bad) adc retq pop in rcrb cwtl movabs or (bad) rex.WRXB rex.WX pop mov xor cmp ror fs adc push testb (bad) mov rex.B rex.WB and je out (bad) xor sbb sub mov int push xorl outsl or jns fistl nop rex.WB adc push xor mov (bad) mov xchg (bad) jae pop add or jle jns and (bad) (bad) roll add out lret clc ss pop and rcll test mov mov iret movabs (bad) (bad) cmp (bad) sti roll mov add sub test (bad) (bad) negb xor rex.X iret (bad) movabs int3 jmp or popq pop scas leaveq (bad) ja (bad) shrb (bad) cld (bad) xchg in in repnz leaveq stc fnop jp (bad) xor xchg pop sbb sbb (bad) pop fldenv out (bad) push jns rex.WRX lea test fisubrl rex.WX and rex.B jbe or roll (bad) (bad) shrl and (bad) fisubrl test fsubrl (bad) stos cmpsb stc (bad) test in iret popfq push cmp and (bad) cwtl (bad) adc (bad) stc and loop rex.RX rcrl jle pop mov popfq (bad) repnz or lret (bad) pushfq flds cld pop fbld jnp rex.W retq xor out out (bad) pop sub jne add (bad) sbb (bad) repnz (bad) idiv (bad) add int3 (bad) retq jle test mov (bad) leaveq (bad) rex.WRX fldcw push lret xlat add movabs xchg test fisubl rex.WRX rex.X (bad) insb (bad) icebp fnstenv out xchg cmpsb lea sahf orb cltd pop jp cmp movabs pop xor rex.WXB (bad) insl mov in or xchg jge add cmpsl loope push imul nop in mov (bad) jbe in std loopne repnz (bad) rex.WRX mov add or jrcxz jae jns sbb (bad) (bad) cli scas retq (bad) rol (bad) cmp test loopne sub jbe push (bad) mov fcoml adc hlt (bad) add (bad) jrcxz mov rex.WRX rex.WR and (bad) sbb (bad) push xor (bad) (bad) enterq sbb pushq (bad) (bad) (bad) (bad) jb (bad) fucomp mov enterq fsubrl (bad) xor mov fistl adc add xchg mov rex.WR cmp adcl loopne add cmpsb (bad) adc (bad) add (bad) jno xchg (bad) retq and fisub sbb rex.WRXB rcr mov (bad) jl xor adc add scas adc rex.WRX js repnz fnsave xor leaveq sub add xorb rex.RX pop (bad) movabs fcomps or sub (bad) movsl jae in rex.WXB cmpb add pop mov mull mov enterq sbb movabs xchg jns fsubrl rex.W (bad) adc fcmove mov fucomi rex.RB (bad) (bad) cs xor loope (bad) push and test (bad) jne pushfq loopne jae add fsubl icebp rex.RB movabs in xor (bad) rex.R scas out test sti and movabs fsubr xor movabs (bad) frstor sub callq retq (bad) sub add jg lret mov rex.WXB pop fs leaveq movsl cmp in (bad) hlt shll movsl or xor movabs sub (bad) loop test (bad) cltd sbb xchg mov pop xchg sbb sbb mov push jbe mov popfq xchg shll mov std rcrl notb ds iret xchg or cmp cltd fs pushfq lods mov rcrl shl data16 ss (bad) jo test es retq (bad) jp repz lahf sti loope mov push rcrl pop lods (bad) rex.WXB pop (bad) and xchg (bad) sub rex.RB rex.W pop (bad) (bad) shll stos pop loope xchg xor insb (bad) sbb mov movabs enterq rex.WRX and (bad) mov (bad) sub movabs (bad) or hlt (bad) cmpsl outsb rex.R jmpq test out retq (bad) cmp fstps repz adc jno jno add or rex.WRX (bad) ja leaveq leaveq jae lea test mov add mov (bad) in xor int3 cli (bad) rex cmp jmpq retq cmp cmpsl sbbb (bad) sub int3 sub pop xor sub and movslq (bad) test rex.W repz xchg cmc jrcxz roll movslq icebp sbb (bad) pushq (bad) rex.WB rex adc mov in pushq (bad) (bad) push cltd (bad) mov or stos sub jo (bad) rex.B lea rex.RXB cmp fnstcw jno cmp sbb push mov addl sbb outsb (bad) adc xchg (bad) jo and (bad) (bad) fisttpll ja out adc divb je sbb out mov iret mov cmp fisubr movslq xor (bad) xor enterq or icebp test (bad) or fsts fcompl (bad) test mov xor outsl (bad) out outsl movabs cmp rex.B and cld jae jno mov mov mov rex fisubr pop lock (bad) icebp add pop rex.R movsl std test (bad) cmp sub fldenv in xchg pop clc retq or mov xchg repz movsl adc sbb fisttpl push movslq jns sbb and leaveq rex.W (bad) (bad) lret outsl fs test lahf adc (bad) vcvttss2si insb add xchg cmp or fnstsw (bad) movsb adc or cmpsl lahf roll stc (bad) icebp loope gs rex.WRX rex.WB std repz (bad) pushq add pop mov mov repnz cmp rex.WRXB and lahf in and xchg push leaveq adc (bad) xchg adc cmp scas in rex.WRB mov stc xchg movsb (bad) mov movsl test outsb out jno (bad) test callq mov xchg es fstpt addr32 retq test sub push repnz mov sbb adc vpinsrd and repz retq std xchg add xor push test movabs pushq mov std movsl xor sub (bad) jle pushfq rcll (bad) es movsb test rex.XB (bad) xchg fcmovne rex test icebp test int out xchg lods movabs add int3 (bad) movabs rcll cmp jrcxz ds or loopne test ficompl sub mov mov rex.W jmp sub lock add adc fiadd rcll iret cmp (bad) imul xlat movsl push fcmovnbe shrl xchg retq adc and (bad) fnstenv push stc rex.RXB ds xor (bad) enterq or rex.XB (bad) pop add retq add sub retq or faddp nop pop jb adc rcr mov orl ljmp retq js enterq lock xor mov jns shrl jae and rcll hlt sbb lret rex.RB movabs mull fisttp and jle pop pop (bad) outsl (bad) stos (bad) sahf movabs lahf test fcom jo in rex.X nop sub xor (bad) fadd leaveq (bad) xchg cmp rex.XB (bad) (bad) xadd mov sbb push (bad) sbb rex.B rex.XB cld rcll insl fnsave (bad) pushq fxam rcrl pushfq jb rex.WRXB add loope xor rol cltd (bad) lret rol sahf mov jns shrl xchg lock fs orl test mov (bad) xchg xchg adcb pop push cs icebp xlat mov and loop movabs (bad) (bad) and cmpl hlt enterq cmpsl mov xor sub vcvtuqq2ps std cli sbb cmpsl (bad) movb (bad) jo xor xchg cmpsb jae (bad) pop xchg rex.RXB and lahf pop (bad) mov rol mov shll xchg rex.X cmpsb (bad) fild stos (bad) repz fmull rcll cmp mov add (bad) (bad) enterq mov pushfq xchg lret repz (bad) and (bad) xor pop rcrb add mov fs out out stos repnz or and cmpl xchg (bad) movabs mov (bad) imul pop cltd lret rex.RX xor add or add lahf rex.WB xor or mov xor mov clc adc xchg rex.RX or (bad) push (bad) out pop fnstcw andb and rex.WRXB (bad) (bad) adc cmp in push sbb sbb retq test jnp test pushq or rex.R movabs (bad) xor (bad) mov or push (bad) pushq jmp test (bad) or sub lret rex.R rex.WR pop mov imul stos movabs in out sbb fxch ss mov sbb xchg mov rex.WR rex.X clc lock sub cltd rex.B bnd sbb mov jno (bad) movsl je repz (bad) jnp xchg mov fcoml in test cld add lock jne in (bad) jno jno test cs bnd (bad) fdivl mov xchg (bad) fnstsw test (bad) mov sub repnz stos push jge push jle sub (bad) callq rorb sub rex.WR (bad) mov int3 mov sbb in rex.WRX (bad) jb sub pop rcll mov rex.WRXB (bad) in sub xor (bad) rex.RX pop rex.WXB retq mov and rex.WRXB ficoml push sbb rcrl (bad) fs pop shl jb rex.W cld (bad) lret cmpsb jbe cld cmpl (bad) rex.XB mov xchg rex.WRX shl or js movabs jmpq (bad) jo mov or imul shrl sarl (bad) sub rex.R rex.B xor cmpsb sahf mov fldl shrl js rorb rclb loope shll mov add or test in xchg (bad) add vpcmpeqb (bad) push cmpsl xchg pop or js shll (bad) (bad) es decl add rex.WRX lock outsb or xchg mulb repz in roll enterq js rex.B ss adc sbb mov cmp xchg mov pop mov fmull cmc mov callq popfq cmpsl push cltd adc lods popfq pop insb data16 (bad) mov rcr int mov scas add pop sub cmc (bad) sbbl roll test add gs pop (bad) push ds xchg sub or sbb rex.XB rex.B and mov mov jns (bad) imul lret (bad) cmpsl mov jbe (bad) movl in rcll adc (bad) mov sahf sub test jg rorl sub or (bad) addr32 and rcrl movslq xor outsl push pushfq (bad) jbe (bad) addr32 enterq rorl (bad) pop cli movabs xor (bad) test (bad) mov pushq jbe and (bad) xchg mov popfq mov or insl (bad) addr32 rex.RXB (bad) xor sub repz data16 in mov xchg icebp jo (bad) xor cmpsl sub jno rex.WX sub stc (bad) (bad) pop (bad) add test (bad) fnop (bad) jge outsl rex.W movabs movslq push cmc (bad) sarl out cmp int3 and (bad) (bad) xor jb movabs mov adc nop jno data16 cmpsl leaveq jnp adc out fistp rex.WRXB mov movabs jo mov jno adc rex.WR xchg (bad) cmp cmpsb jp lea stc mov mov mov sarb (bad) push or lret sub test (bad) push mov push and out rex.RB rex.WRX enterq stos fiaddl lret cmp jp repnz xchg (bad) (bad) mov rex.WB xchg cmp rclb sbb sbb ss mov cs and and (bad) pop jns insb add in pop movabs push adc jne rorb out rex.WB rex.R rex.B (bad) lret jae adc (bad) (bad) je or pop rex.RB sahf (bad) push rorl pop (bad) cmp fldl (bad) loop xchg (bad) jae mov shll adc in mov rex.X stc jbe xchg cmp add hlt loopne std sbb cmp pop popfq pushq int test add cmpsl sub lret (bad) montmul cmpsb add clc int3 iret insl fxch shl fistp jmpq lea nop push xor cmp and (bad) xor xor adc ss mov in cs scas fldenv jle (bad) adc in movslq mov push adc cmp movslq mov mov scas pop (bad) (bad) clc mov and mov (bad) fsubrs cmp jg mov xchg pop mov adc movabs pop push xchg retq (bad) (bad) (bad) rex.W wbinvd sub (bad) jp xor sub cwtl cmp mov addl mov orl mov add mov cltd idivb or sub sarb in sbb and (bad) cs rex.XB gs (bad) sub lods sbb sub sub (bad) xlat rex.WR and repz mov sbbl fnstsw es sbb add cld cltd pop negb (bad) xchg push jnp adc mov jno and data16 fnsetpm(287 (bad) mov jns retq (bad) movabs mov enterq (bad) pop and cltd insb or mov mov jmpq or rorl cmp cli leaveq add lret mov xchg icebp movabs sbb xchg add iret jmpq xor jmp cmpsl mov test fnstcw test nop sbb rorl lea or push (bad) mov rex.WX int jno movsb movabs je fwait push (bad) rex.B and sar es pushfq mov (bad) ja movsl and mov rorl sbb rol mov (bad) js jle (bad) adc rex.B movsb sub (bad) (bad) or xorb push xchg (bad) cmp pop (bad) shrl shrb fwait add push mov in mov adc (bad) xor mov rex.RB enterq or sbb rcll push movabs (bad) stos xlat (bad) nop (bad) cmp popfq mov fyl2xp1 es cmc rex.WRXB leaveq out (bad) xchg ja ror rex.RXB shll (bad) insl bnd rex.WB jae or popfq imul mov sub rex.X (bad) sbb cmp sahf imul (bad) scas (bad) xor movslq int3 test xchg adc nop xor rex.XB pushfq push xor sub mov rex.WRX test mov jg xlat in (bad) sub xchg neg mov cli mov imull (bad) (bad) xorl and fxch repz sub (bad) hlt imul out pop rcrl cwtl lods mov (bad) add rclb push pop popfq mov adc (bad) shrl imul (bad) pop cld xor test jmpq outsl fisubl rex.WR in pushq rcll xchg sub xor mov (bad) add cmp shll xchg (bad) out and stc insb sub jne cmpsb pushfq rolb rex.B mov idivb fnstcw rcrl rclb pushq es jne fild movslq fs mov repnz (bad) or (bad) movabs test mov rex.RXB int3 push fmulp lcall (bad) push (bad) test sbb add or rorb adc loop rex.WXB rex.RX pop mov or xor push cmpsb int3 sbb or sub xor mov cmpsl or pop adc iret test out rex.WRXB and pop pop (bad) push popfq mov rorl adc mov add (bad) pushq add cld mov and lods add js sbb jp rex.WR jge movabs push cmpsl add addr32 insl sub int3 rex.RXB scas sbb cs rcr iret xlat jne mov sub rorl cmp mov (bad) (bad) (bad) (bad) fildl pop movabs pop shrl lods push (bad) fwait rorl ds add clc adc and mov add shlb (bad) mov jns add enterq mov rex.WRX push push push out or rex.B negb and rol push divl rex.R rex.W and (bad) (bad) sbb xchg jns pushq mov add cli (bad) xchg mov sub sub pop (bad) inc icebp pop rex.RXB add or (bad) test xchg and shl mov jp or repnz repz out mov sub movabs retq fwait movabs (bad) cld (bad) push adc sub xchg shrl (bad) (bad) jrcxz int3 loopne popfq add repnz je std add add addr32 push sub pushfq insl rex.WRXB cmp rex.B sub cwtl (bad) (bad) callq jns or push push rcrl mov sar (bad) imul or fnstcw mov xor cmp add iret jge xor jb mov or out mov mov sbb (bad) jae cmp xchg imul rex.WX (bad) and adc jbe mov mov or fstps (bad) cmp rcl push (bad) cmpsb rex.WRB repnz pop rex.WR loope xchg sub int subl mov decl insb cmp ja xchg fadds xor (bad) (bad) mov mov (bad) mov cmp adc xchg add add loope hlt fisubrl insl outsb cld mov lret out jp (bad) add jmpq add jnp mov (bad) out rex.XB rex.WXB mov packsswb sahf fiaddl pop (bad) push fwait xor pop out rex.WRX cli jo in (bad) add jrcxz or lahf fcoms and ud2 xchg lods add (bad) push (bad) (bad) mov and pop xchg cmpsl xchg shr jg movsb (bad) test (bad) push mov mov shl lea out push clc adc movabs addr32 repnz sub jb repnz lods imul or fldln2 xchg fidivl and (bad) scas jmpq and repz in xor neg test mov imul rcl insl fsubrs fistpll xor leaveq (bad) jnp loop cmp or cmc clc rcrl add rex.XB sarl lahf jmp sbb enterq stos mulb (bad) stos (bad) callq mov add (bad) adc (bad) add (bad) and mov add (bad) imul ja rex.WB fcmovne mov addb rex.X sahf (bad) imul scas negl in (bad) movabs test jae (bad) push and rex jmp stc cqto pop mov jno rex.WRB and jg (bad) pushq mov in sti (bad) in jbe addr32 movb bnd divl add outsb lods mov jp repz (bad) (bad) (bad) cmp xlat cmp add enterq mov sbb (bad) sub fst mov js rcrl mov shrl je fidivrl and (bad) ja (bad) shrb rex.WX jo cmpsl jl xchg add sub rex.B lock faddl rex.RB sub pop xor in es leaveq lods cmp (bad) movsb outsl rex.XB lahf gs xor insl lret or rolb rex.WRX iret sahf adc movb mov push jo pop rclb adc sub and add (bad) in enterq and adc (bad) mov cltd xor xchg shll vcvttsd2si fcmovb add fistpll cltd test loope (bad) negl adc add in and out ror add test (bad) ficoml (bad) and jle int3 rcll and rex.XB shl add jmp lret (bad) out mov mov (bad) mov mov mov sbb rclb shrl adc mov or std rex.WB sub cmp jmp or (bad) and (bad) xor (bad) retq jp movabs stos jno rorl sbb (bad) stos std cmp rex outsl rex.WX xchg (bad) outsl rex.B xor or sarl test sahf rex.WX mov in pop sbb in mov (bad) lret and xorl rex.R cltd rex.WX (bad) sub (bad) callq fdivrl add jns sbb mov adc mov fldt fwait adc sbb cmp mov (bad) xadd and pushq (bad) (bad) sub sub in add xchg mov (bad) sub outsl (bad) pop xor jo int mov jno rex.W pop jp rex.WB iret lock hlt mov and mov subl fidivl (bad) movabs in pop (bad) faddl xor int3 pop (bad) jnp push pop sbb add rex.RXB callq rex.WRX xor jno pushq rex.RX shlb rcrb rex.B and (bad) mov shrl imul mov jl and cmpsl and rex.RB push (bad) (bad) js rex.XB cmp cmpsb clc sbbw and jl insl cwtl (bad) cmp sub adc and xchg jb jmp or lock jae (bad) fnsave sub in add cmpsb fnstenv jmp callq sti rex.WXB jns sbb sahf int idiv fild js rex repnz jrcxz rex pushq enterq stc sarb fs out cmp fbstp push retq and cwtl (bad) add sub stos out movabs push rex.WRX pop push out movabs cmp rex.XB xchg mov rorb fsubr mov movslq pop mov repz nop mov xlat retq mov push ds adc fdivrl movabs sbb or cmp fldl and adc (bad) rex.RXB cwtl ficomp stc lods icebp jrcxz movabs stc cmc sbb mov mov rex.RXB mov sbb test xchg rex.WR ss push push xorl pop mov cmc movsl loopne leaveq jo mov lret (bad) pop rex.RB add mov cmp lret xchg lahf loop mov or icebp icebp cld push sar (bad) je mov rex.WRX loope cmpsl movabs or or data16 fisttpll (bad) cmp push rex.W xchg sti adc incl mov ror adc sarl mov ja in rorl lret and add xor rex.RB cmp pop pop rex.XB add shr incb pushq mov mov mov (bad) rex.R fisubl (bad) iret sarl cmp out jg (bad) sbb in or push rcrl (bad) sahf movabs add lret (bad) out mov pushfq adc (bad) sbb (bad) and cmpsl (bad) jbe cld jnp xlat mov (bad) int3 push or jge shr lea (bad) xor jg pop shrl cld mov lock and movabs push sar rex.W sbbb fisubr je pushq fwait roll lret sub xorl xlat lret add rex.X andl add cmp (bad) int3 (bad) and (bad) lret or add (bad) push jne fidivl jmpq (bad) (bad) rex.XB rex.B (bad) cmpl jge je jg stc (bad) (bad) or scas int sub sbb (bad) cmp cmp test or repnz or mov pop rex.RX mov cmp lret mov (bad) shrl popfq addr32 cmpsl lods (bad) cmp adc fisttpll lahf xchg xor (bad) (bad) pop ds cmp rex.WR rex.WXB sub add jl fldl out adc imul fnstenv and clc loopne rex.WR nop (bad) mov mov test rcll mov jg shrb adc mov fwait (bad) mov fld cmp xchg (bad) stc (bad) (bad) push hlt jno test retq imul pop fisub (bad) pushq popfq test retq addr32 push shll out cmp jo lret jge push adcb shr jne (bad) adc jno or xor callq rex.R rex.XB stos test insb sbb sub sahf cmp cmp pop pop rep rex.XB insb lods shrl mov roll (bad) fwait movslq mov (bad) lock rcrl push xchg loopne mov and sub test rex rex.RXB pop add (bad) xchg mov (bad) insl fwait scas icebp sub (bad) push xchg (bad) std (bad) mov (bad) mov lret sahf jl add movslq rcll sbb mov stos mov stc xchg movsl (bad) movabs add movabs lods test rcrl cmp adc (bad) lret sti mov rex.X sub jns (bad) in out xor hlt subl repnz popfq pop lret rex.RB jge rcll jo and stc imul or imull rex.X repnz movabs rcll rex.XB fcoms xchg test addl (bad) (bad) cmpsl push out add sub sahf rex.XB mov jmpq rcll iret (bad) rcll stos outsb imul xchg popfq rcr ficomp and sbb (bad) retq fbld movabs shl cmpl and pop (bad) jno shl cmp and cmp rex.RB xchg push rex.X mov mov mov rex.B xlat or xor shrl rcrl jbe fwait sub test mov retq mov rex.R cmc out jne jo loopne xlat cwtl rex.WR rcl jrcxz mov (bad) (bad) mov xchg movabs mov xchg (bad) rex.WXB rex.RB rorl fstpl and add ja (bad) mov punpckhbw xchg out mov stos sub (bad) pop outsb sub mov in roll fs outsb inc (bad) cmpsl testb loop rorl test sbb and test xor sub loopne rorl xchg mov sub rcll (bad) mov (bad) adc out add (bad) mov rex.WRXB rcrb (bad) adc xchg rex.WR adc sub sbb cmpsb jge mov add retq insl sub hlt xchg cs sbb adc fiadd ror (bad) and sarl jl (bad) cmp adc jae roll out pushq cwtl jbe mulb add xchg (bad) fstp xlat faddl cmpsb (bad) ja rol loop fnstenv in xor shll jrcxz jb mov scas or rex.RX data16 stos sbb cmovns rex.WX cmp jmpq and mov (bad) js mov (bad) push insl (bad) loopne (bad) pop gs jp jno push and loop fs (bad) mov mov push (bad) icebp (bad) (bad) add push adc callq mov add lea pop or xlat rex.WX std add repz xchg (bad) hlt (bad) sbb mov sbb shr mov cmp insb jp xor jge rex.XB rex.RX xor (bad) jae kandb nop (bad) lock shl sbb cmpl lea rex.WRX mov push sarl cmpsl mov hlt push add mov cli lods (bad) cmc xchg jg (bad) (bad) pop (bad) std notb sub push out sub mov jae in mov xor test (bad) mov xchg stos or gs and mov or out imul pop mov loop xchg (bad) (bad) movabs rex.B (bad) (bad) pop rex.RXB cmp movsb in xchg incb scas jae mov vshufps (bad) pop (bad) adc and shrl lret imul decb (bad) pop lods jp and push (bad) sbb mov adc out push (bad) or test seta (bad) (bad) cmpsl (bad) add sub out or pushfq sub or add mov fistp jmpq mov mov cld roll (bad) push rex.WX (bad) (bad) pushfq (bad) xchg or retq sbb imul fistpll shll jmpq repz pop movabs (bad) mulb xchg fnstcw fsubrl cwtl jb callq (bad) stc enterq je (bad) movabs stc sub imul movabs rex.WXB sarl jbe xor xchg mov shll xchg (bad) mov scas add or lahf push movslq jb int3 xchg ss clc (bad) mov xor jg movabs (bad) js lret xchg rcrl mov gs movslq movb jns add (bad) (bad) enterq mov rcrl sub (bad) jae xchg lret jns testb add icebp (bad) mov push hlt lahf rcll mov mov or cmp nop loope cli add sbb retq (bad) add pop xchg pop insl (bad) and mov rex.WRX rex.WX rcll push rcr stos (bad) (bad) movabs callq sbb mov mov sar fwait xchg (bad) test or mov test and xor (bad) pop (bad) (bad) stos pushq adc (bad) mov sbb stos imul mov (bad) clc rex.B or rorl jmpq (bad) sahf jae pop stc retq insl add add or mov rcrl pop stos sub vcvtsd2si xchg movsl cmp mov and rex.WB adc pop mov xchg std mov pop cmp rorl add mov (bad) test lock insl rex.RX paddw and rex.X adc data16 jmpq cmp mov jrcxz js sbb loope xor jge and and or (bad) xchg push sbbl cltd xchg jno xor (bad) add jbe rex.B (bad) cs cmc (bad) add or hlt (bad) jae jne add gs jge out scas test (bad) (bad) rcr mov addr32 sub clc add data16 popfq xor rex.WX add or rcr xchg (bad) mov mov jl (bad) out cmp push test pushq mov repz rcr cmpl in mov xor in popfq rcrl xchg and adc in or jle loop sbb outsl xlat xor outsb cs (bad) jl sbb sbb sbb rex.R ds pushq (bad) scas or in sub or jo (bad) in sub (bad) enterq scas cmp rex rex.WRXB rex.XB test rex.RXB repnz shr (bad) jge jp fcmovb (bad) (bad) mul adc in xchg add fbstp std mov test insb jns mov rclb mov gs xor out movabs cmp pop jp (bad) jmp mov data16 or and insb mov int3 lret stos (bad) mov hlt (bad) rcrl test xchg (bad) (bad) (bad) jbe shrb shrl add iret notl rol insl adc imulb mov jg add jle (bad) xchg jmp movsl movabs notl xchg add mov rorb (bad) (bad) ja (bad) add pop rex.RX rcl movabs rex.WR xor rorl fiaddl (bad) imul mov popfq fnsave rex lock rex.XB rex.X fwait movabs mov pop xlat outsl pop lret (bad) int3 ds icebp sbb push sub adc and push cmp leaveq add lahf lret int loopne repnz rex.WRXB sub fwait push test fild (bad) jns sub lea jge (bad) jg test rex.WX loopne in add xchg pop add leaveq pop loopne int add add mov jo mov (bad) cmpsl (bad) (bad) loope rex.RX test mov cmp (bad) fistpl imulb ljmp xor (bad) adc cltd lea mov mov hlt rex.B add pushq cwtl xchg pushq int3 rcrl rex.W xchg xlat add test sbb movabs in and xor ja in rex.WB rex.WRXB rex.WX (bad) mov imul add xor rol cmp jle out not (bad) callq rorl (bad) push xchg movslq sub push add rex.WB or (bad) xor cmp jmp (bad) jle fs mov pushq mov fcoml jmp push movb cmp leaveq mov fs rex.WRX lret enterq sahf mov mov add jg xor fs push (bad) add rex.XB mov or rex.X shrl rex.WX (bad) in out cmp sarl rex.RX rex.WRXB lods loop mov jne lret int3 mov shrl adc ror xor push (bad) and add pop in cmp (bad) mov scas (bad) rex.WRXB hlt movsb jg sub and pop jle jb add fs ja cltd std mov sub add imul xchg pop sbb lea stc retq in add (bad) add (bad) mov jae add pushfq fs out push mov rex.R pop test jns es or int out mov rex.XB iret push ja (bad) adc loop lods stos fmul rex.R enterq rex.WRXB rex.B (bad) mov cmc xor mov in push cmpsb and rcll rex.WX push pushfq out jrcxz mov and (bad) sub jae rorl add (bad) or jno cltd jns rol fsubrl out imul roll repnz iret mov rex xchg cmp (bad) test adc xchg rex.B movabs add movsl test out shll stos enterq movsl adc pop push sahf sbb xchg sbb jl mov xlat add mov xchg mov add (bad) jae repz sub (bad) (bad) jb,pn pushq (bad) scas add movslq roll negb or sbb xchg xchg in adc (bad) mov shufps es retq sbb or vfrczsd test or sub fidivl jp jge (bad) sar mov sub ja jno (bad) sub fcompl xchg sub out add cmpsl fnstcw add rex.B xlat jp sub sbb lret movabs icebp add cmp cmpsl out jb (bad) shl scas rex.WRX pop stc xlat xchg mov rex.X jno shll cli push pop pop mov pop xchg xchg sbb sbb (bad) xor (bad) mov sbb or pop cmp push cmpsb rorl pop push rorl in rex.R sub cmp mov push retq rex.WX sub add and jle cmpsb rcll out callq rcll rex.RB (bad) cmp shll jo (bad) shrl int3 callq adc jo rex.RXB xor repnz loop (bad) and mov rex.WB rex push rorl add pop jl lea jp xchg (bad) sbb rex.WX icebp pop test cmp mov (bad) pushfq and (bad) int3 jmp (bad) (bad) jb or mov sarl rex.R addr32 rex.B rex.RB (bad) (bad) adc rex retq pop in sub pushq ror adc mov pop test jo shrl rex.W ds retq xchg out lea cmp icebp sarl (bad) pop pushq rex.WR cwtl lahf or (bad) int3 add stc faddl or cmp jne (bad) pushq push nop (bad) (bad) cmp or pop imul (bad) (bad) lock je push add icebp cltd adc mov and cli sbb mov (bad) (bad) xchg rex.WR roll js out (bad) in repnz xchg outsl mov cmp jnp or retq rex.XB (bad) repnz rex.RX cmp (bad) xor rex.W movabs outsl in fwait mov out lock loope fst xchg sbb (bad) fs (bad) faddl push (bad) cmp enterq (bad) (bad) jne test test shll fisubl cmc xchg pushfq sbb add (bad) xor cmp (bad) (bad) mov sub std movabs xor lret cmp sarl movsl (bad) and (bad) iret rex.R xchg (bad) mov loop mov add rex.WRX repz adc (bad) xor stc clc mov mov flds imul adc cmp xchg std push add out iret enterq test rex.RX repnz lods (bad) pop sbb xor jg pushfq mov flds push jl jno (bad) mov movabs rolb retq pop leaveq lret cmpsb shr pushq (bad) lret push jrcxz shrl (bad) (bad) movabs jno movabs test test pop stc mov push sahf cwtl adc sub xor mov pop and outsl (bad) lret movsb add jmp flds pop sti adc shll (bad) mov mov mov (bad) out ljmp (bad) movabs rex.B cwtl ds outsl pushfq pop or pushfq nop (bad) int push xchg shrl test pop xchg rex.R ja (bad) adcl pop jrcxz xor callq rex.X ds rex.WB stos int3 pushfq xchg (bad) mov fnstenv (bad) adc loop je imul ds xor sub adc (bad) rex.WXB (bad) test sti adc insl movsb (bad) lock rex.WRXB iret pushfq cmpsl cwtl add sub movabs push imul cmpsb sub fdivs or add test (bad) movsl movsb callq mov cltd sbb stc add rex.R rex.X movabs sub incl movsl rex.B movsb push stc jrcxz cmpsb lret mov or pushq (bad) jbe jmpq vfmadd213ps ja and xchg outsl and (bad) roll imul xsha256 cmpsb xlat lock faddl rex.B adc (bad) jmp mov (bad) jmpq adc mov xchg rcll loopne addl mov lret and shl jae pop sbb xor fbld xchg xchg out xchg retq test add data16 cltd jge rex.WRB xor push cld (bad) mov push xchg imul outsl mov out (bad) sbb mov push fdivr sarl data16 jne ja lret push fisub xlat (bad) and cmp rex.RX fcompl jno rorl or xor push movabs jl mov (bad) cmpsb or (bad) push jb pop sub (bad) mov rorb and xchg mov enterq int or cmpsb movabs lret rcll push repz sti fcmovb outsl (bad) (bad) jl mov add jno rex.RB loope ficompl or cmc push int3 rex jb adc (bad) rex.XB in mov (bad) repz outsl sbb pop xor shll push in (bad) out (bad) nop xchg and xchg push out (bad) sub (bad) (bad) (bad) lahf leaveq jo xchg lret (bad) jmpq jb cmpsb and (bad) sub mov and add xlat xchg (bad) rex.WXB push cmp (bad) shlb sub mov add xchg imul sbb (bad) sbb scas add rex.XB fcmovu (bad) mov mov adc mov sub jns out iret repz fnstenv sbbl or callq mov jg rex.XB rex.RXB cld xor test rex.RXB loopne testb imul fstpt xchg (bad) (bad) popq sbb out xor lock fnstsw sbb mov (bad) test fldt (bad) (bad) in xor fld (bad) xchg mov xor add (bad) or pop loop (bad) jo (bad) movsb (bad) in cmp movslq xchg (bad) sub int lea xor sub push int3 sbb loopne shlb repnz in or push stos test scas fadds sub negb fwait jp xchg jo xchg hlt or repnz sub adc loope mov (bad) mov mov jb mov (bad) mov in sbb ffree adc rex.W (bad) cs repnz in fidiv rol scas movsb repz jmp in (bad) mov test int or jrcxz mov xor roll fs lret stos (bad) mov fildl rorl mov rex.WB jno (bad) jb pop sub enterq push and (bad) imul shl sbb xor and loop xchg fwait jne cltd rex.WR rex.B sbb xor adc sahf test imul cmp rex.B rex.WR movsl push (bad) xor (bad) fucomip movabs movsb and mov stc mov shrl mov (bad) add loopne test add cmpsl adc (bad) xchg and sub jmpq sahf cmpsb (bad) loope add rex.RX adc rex.XB push xor cwtl movabs iret mov (bad) ror movabs (bad) je outsb (bad) (bad) sub fistpl push sub (bad) mov mov pop in cltd pushfq sub movabs in iret je (bad) lock fwait stos sahf (bad) lods popfq lea xchg rex.RXB sarl or mov (bad) movsb sub and ror rex.R jrcxz loop out add push (bad) jo fisub cwtl rorl repnz rex.X roll callq xchg (bad) mov (bad) add (bad) iret stos fcom pushfq jmp sub nop rex.WXB sbb pushfq lock (bad) adc fcmovne cld repnz jns shll xchg or loope pushq retq (bad) int3 pop outsl in clc mov jo lods fildll add sbb rcrl ss (bad) xor sbb mov xor movabs sbb mov (bad) cli and rcll or sarl xchg je cltd outsb jno push add mov int3 out jp test repnz mov cwtl popfq push (bad) mov lock xor (bad) cwtl xchg shlb shrl in (bad) shl enterq (bad) retq movabs out sub cwtl and rorl jno,pn (bad) mov sub shr jp es (bad) rorl nop lea rcll rex.RX push rorl imul insb pushfq rex.RXB xor lret out je (bad) cwtl lret and mov jle cli jg lods lret or xchg lret in add or lods or addl and iret and add jns pop int fcoml movabs rcrl (bad) add out cwtl fiadd (bad) rex.WXB mov and retq fist mov (bad) out pop imul shrl test rex.WRX or (bad) xchg out fdivrp cmp rolb rorl out popfq rcll retq adc push cli xchg rex.R ds loop loopne rex.WRX and xchg pop rorl adc (bad) roll loopne (bad) xchg pop fxch nop fcomps pop movabs jo (bad) add outsl pop (bad) (bad) hlt int (bad) xor xor int3 test sbb (bad) retq jle push loopne pop (bad) imul add (bad) mov sbb pushq rex.WRB sarb sub fsubl fmull rex.WR movslq sub jle gs subl add fdivs pushfq movabs mov insb rex.WR std mov xor int cmp rex.W xor jno pop adc cld and jae out xor rex.RB (bad) fldt jnp stos add repz (bad) loope fstps in xor or mov jp mov insl add sub callq adc cmp repz (bad) sahf xor or lock (bad) stos cwtl outsl stc sub rex.WR cmpsl int3 sahf or mov mov add test lret (bad) (bad) rex.B cmpsl sub fstps mov cmc fidivl fdivl mov stos insl movabs add enterq or movabs loopne out rex.X pop pushfq rex sub ds sahf hlt imul cs mov xchg mov xor mov mov rcll test (bad) cs and xchg icebp rex.B fs mov cs (bad) loope rcrb out sub adc jrcxz rex.RB test xchg enterq mov xchg and mov and shrl (bad) sbb rex.RX (bad) in psubusb xor in adc push (bad) sub repnz or std (bad) movabs jb (bad) add ss (bad) repnz rex.XB test hlt or xor subl sub repnz jae (bad) cmp pop fcomp out imul jae stc cli add jbe pop jl test or (bad) movabs cmp mov imulb jno rex.WXB stc leaveq notb fimul pop loope (bad) (bad) mov fisubrl lock test stc xor test mov fiadd movsb push (bad) lret jmpq (bad) (bad) (bad) cmp xchg ror pushfq cli outsb adc iret push mov orb pop scas (bad) movabs pop jge sub add (bad) xchg clc jmpq xchg retq ffreep rex repnz jo (bad) mov sbb ficompl iret enterq cmp pop cmp and xlat fwait xchg lret mov int sar xchg (bad) xor rex.RXB nop or cltd lret or xorb loope cmp hlt mov xchg sbb ss stc xchg mov cltd sub (bad) (bad) sbb out mov repz pop xor iret push (bad) (bad) leaveq (bad) (bad) pop xchg rex.WX xchg rorb sbb shll int adc sbb mov loope (bad) (bad) insb or add xor xchg or cwtl test (bad) stos adc clc lret pop ffree push (bad) add xchg decb xchg cmpsl rex.WX pop push mov pushq shll sbb (bad) xor jmpq fildll es adc xchg rcrl and cmp movabs mov shll mov gs leaveq scas (bad) enterq pushq lods pop jo push xor ror imull push xchg shll sub mov scas movabs jrcxz scas add orl icebp sahf sub rex.RXB lock sbb (bad) test repnz xchg movabs xchg imul rex.RX sbb cmp pushq mov rol outsl mov rex.WB icebp pop (bad) out (bad) mov add (bad) movabs clc mov mov (bad) callq cmc sti xor jo movabs outsl add jle or int (bad) in movsb lret rex.X fs mov adc (bad) and or enterq stos (bad) rcl (bad) cmc int (bad) lods sahf shlb pop inc (bad) cwtl repnz (bad) leaveq sbb movsl (bad) cmp int3 callq stc int3 movslq movb sub cmpsl xchg and xor jne (bad) mov sub xor pop outsb jnp pushfq add xchg push iret (bad) mov addb in and fwait subl sub out popfq repnz leaveq push rex.WB lock outsl rex.WRB rex.WR and jae std test (bad) fucomi rcll lahf (bad) iret jmpq and jb add push push stc (bad) rex.XB push inc xchg sbb loopne (bad) roll rex.WRB movsl mov adc rex.RB jp stos out hlt jmpq (bad) xchg mov jns pop add std xor pop mov retq jmp (bad) lret imul jl (bad) xorl ror jb ja (bad) (bad) shrl movsb nop xchg test pop ss add sbb test (bad) (bad) mov sbb sub add movabs add or (bad) (bad) shll mov adc pop cmp rex.WR fisttpl pop xor cmp jp sbb (bad) int3 lea mov (bad) cmp outsl (bad) ss (bad) movsb jp jle rex.WR xchg jne jp xchg pop push cmc and outsl callq es (bad) out xlat xor sbb pop sub out stos jo xchg cmp mov pushfq mov icebp data16 data16 (bad) test rex.WX rex.WRX add leaveq ss cld sub (bad) (bad) int fcomps hlt cli js mov cltd push popfq pop sub out scas or mov rex.WX rex.R es (bad) (bad) test rex.WR sar push fwait loop sbb jb js (bad) push movabs jge sub cld rex.W hlt rex.WRB fwait sub jo repnz rex.WRX mov rex.XB or rorl fidivr sbb stos xchg test loopne and rex.WRXB sbb lret jb or gs (bad) and xchg rex.WRX rex.WB rex.WR sub cltd (bad) lret add repnz (bad) or nop cmp sbb lods sbb jmp enterq movabs retq leaveq (bad) lock rex scas sbbl je sub push (bad) fptan (bad) rolb push or or imul xlat jae mov rex.WRB adcl mov jne fisubrl or rcrb mov (bad) adc repz iret xlat add ja cltd xor imul (bad) (bad) lock rex.WR and imul jle jo adc rex.RX std pop rex.B rex.WXB add xor stos xchg rex.WX repz gs jae scas (bad) lret repz or lods test fsubs gs jnp mov shrl fisub (bad) mov rex.WXB sti pop in iret jg fmulp (bad) (bad) or sub mov (bad) loopne popfq mov mov ja mov sub ror push test mov sbb movabs mov rex.X rex.WRB fisubl sbb adc or xchg adc movabs mov (bad) or sbb cmp jb es mov jne add (bad) xchg (bad) out sbb mov xlat pop lods add cmp retq fwait jg xchg (bad) repz leaveq xchg and pop pushq vshufps cs mov rex.WR xor add add shl scas add lods (bad) and cmp int3 movabs mov test lret or repnz insb adc sub mov adc test push fdivrl rex.WRXB rex.WB leaveq rex.B push rol xchg rex.B es fisttp (bad) fldenv cld rex.RX rex.WRX add (bad) test rcr mov jno cwtl mov cmpsl rcrl addl out mov pushq mov xchg mov mov sti imul rcrb jb and enterq cwtl clc add jl and rcl mov jmpq jmp sahf jg pop (bad) out (bad) pop stc ja rex.B lret lret rex.X add mov adc fisttpll fldcw mov and mov push int3 movsb add movabs jno or mov sub rex.W or (bad) sarl jae sub xor callq mov outsl add jns add push stc rcll pushq retq int or mov or mov sub rex.WR (bad) addb push (bad) loopne xor std xchg rol fiadd rcll and push mov rex.RX pop scas movb shrl mov out pop loop push jo cli rex.WX sarl cmp rex.RXB ss loopne jl shll mov je shl out in movabs sub rex retq fcompl xor cmc movabs (bad) add shr (bad) jo sbb add gs movabs adc push sarl loop cld (bad) mov nop out xchg movabs inc jge pop jrcxz movslq (bad) cltd and jl rex.X insl mov roll rex js rex.WR (bad) notl jmpq pop sub sbbl cld movabs icebp pop (bad) mov rex.WR movsl insb adc movabs adc add testb xlat (bad) cmp rex.R and retq (bad) fwait rol xor cmpsl movabs adc mull pop (bad) sar (bad) sub lahf mov rex.B rex.XB or shlb xchg xchg (bad) enterq sbb lods fdivr sahf rex.WRX test popfq (bad) (bad) movabs (bad) fcomp mov mov push cltd xorl nop rex.WB mov mov test shlb or mov rex.XB and rex.WX scas cmp scas pushq js (bad) cmp fidivr repz jmp or (bad) pushfq rex.W sub and add mov ja push repnz xchg (bad) jrcxz popfq cmp callq repnz pushq roll jmpq sbb fldenv lock (bad) adc repnz cmp xchg (bad) (bad) cmp in xchg mov or jp lea cmp pop and xor lods cmp cmp rex.R std repz rex.B std pop adc pushq roll (bad) (bad) jne pop cmpsb lahf shrl sub addr32 cmp enterq icebp shrl mov sbb cld (bad) adc jbe movabs outsl mov pop jge movabs int3 loop in (bad) in (bad) shll or xchg cmp cmpsb (bad) lretq out (bad) (bad) (bad) rex.R stos leaveq (bad) adc test sub enterq test std add and rex.WXB ss insl mov pop fild add (bad) stc mov push or roll sbb imul jno (bad) fs push pop sub pop cmp cmpsb shll xchg xchg rcl pop testl and (bad) sub or cmpsb (bad) sbb icebp imul loopne (bad) (bad) (bad) sbb sbb sub jnp mov loope int movsb rex.R pop push mov sbb rex.WRX hlt stos retq imul (bad) mov (bad) (bad) jle mov xor sbb repz jbe int3 or xchg repz int pushq jmpq jmpq sbb loope icebp in hlt int3 mul lret fucomp (bad) adc (bad) mov sub push push sbb scas and mov rex.X (bad) xor (bad) (bad) jae stos mov movabs lock rex.RXB (bad) push cmp xor rex.WRB adc cmc sbb repnz jne (bad) mov repz sahf adc sub test (bad) fwait rex.WRXB in out xchg rex.XB jae cmp xor mov (bad) mov stos and adc lret loopne clc (bad) lret lahf or sahf (bad) fwait pushfq fbstp (bad) fld jnp fdivp rex.RX or (bad) lret adc fstpl (bad) xchg mov (bad) add outsb pushq mov (bad) adc xor or rex.WRX rex.WX rex.RXB (bad) leaveq rex.WXB fsubrl cmp pop jnp sbb push pushq (bad) test (bad) or (bad) jns xchg leaveq subl pop add jno push (bad) and je loopne rex.W retq mov fiaddl pop loope xor test sarb hlt adc orl (bad) jo pop xor mov push mov sub cmp and mov or mov cmp rex.R lea outsb sub (bad) lahf pop rex.RX hlt clc pop pushfq add jo jno xchg fsubrs sbb pop jae out or (bad) xchg adcb adcl js enterq cmp rcll in pop in lret (bad) or sub sar (bad) cli or xchg cs (bad) xlat jmp (bad) hlt jg sarl fld pushq sbb and sub jns (bad) loope push (bad) in hlt add xor mov bnd (bad) jle sahf cmp pop (bad) shrb mov sti jb add repnz gs rex.RXB cwtl push jo and xor (bad) and xchg cmpsl sbb icebp bts loop (bad) rex.WX adc sub (bad) jbe in (bad) xchg pop fcmovnb xchg mov add jrcxz pop (bad) cli retq (bad) and insl or pop (bad) movb in cmpsl jne xor cwtl adc adc xchg or mov xchg fadd jnp test jmpq (bad) shll pop sbb cmp fadd fidivl mov (bad) xchg (bad) or sbb cmp (bad) sbb jp rex.WB lret push in rorl test movsb sbb (bad) std mov push notb (bad) push js (bad) adc rex.B sbb cmp out (bad) loop (bad) fwait (bad) rorl and insb retq sbb jae (bad) movsb add xor shrl add xchg orl repz jl xor jmp xchg sbb movabs int out callq sub lea lods adc loop,pt je fdivl roll test and popfq sbb fst movsb loop push adc jnp repnz sub (bad) test rex.WRXB rex.WX in or fs shrq and mov xorps movslq outsl rex.RB (bad) (bad) sub and hlt xlat cmpsl (bad) sarl and (bad) sarl add shrl (bad) cmp jae push cs movslq je int3 add enterq rex.WRXB (bad) cmp movabs mov cwtl jno push rol subl sub (bad) jb rex.WRB lret xchg cld mov cmp movabs imul pushfq cld sub (bad) test adc (bad) test (bad) xchg xchg ja outsl and (bad) rex.X loopne negl pushfq cli pop lret and shr callq outsb lcall rex.R fdivrs (bad) movabs fwait (bad) jo mov jge adc xchg je lret test or lods rclb (bad) (bad) xor rex.WB push test xor shr push rex.WXB jae inc and mov xchg shrl sub xchg (bad) and icebp stc push rex.WB clc stos rex.RX js imul roll rex.W cmpsb rcll or pop out mov xor addr32 test (bad) rorb sub sbb jrcxz outsb pop xchg and mov or movabs push (bad) fstps (bad) (bad) add fucomip callq mov rex.W jge sbb out sub add cwtl test jmpq retq pop add pushfq loopne sbb out roll lea add fisub stc lock and std and or xchg retq rex rex.XB cmp mov roll and sub in (bad) cmp xchg lret test push add or insl xchg sarb (bad) and add sti sub jrcxz mov jbe adc jae stos cltd (bad) (bad) rex.WRXB sarl rex.B rex.WRX xor in rol push cmp rcrl (bad) imulb out (bad) or pop repz (bad) (bad) or rex pop sarl movabs (bad) test sub out mov sar xchg mov ffree adcl (bad) xchg retq jrcxz shll mov pop sub rex.WXB (bad) testb rex.RX scas mov (bad) out (bad) mov mov movsb in xchg cltd (bad) mov pop (bad) testb pop jno mov lock (bad) loopne sbb jge (bad) pop retq (bad) sbb (bad) mov mov repnz (bad) lods out adc sub movabs or movabs mov push mov sbb pop (bad) int3 enterq and (bad) lret (bad) cltd xchg ja cmp cs loope hlt callq rex.WRX mov (bad) fwait roll ss in (bad) push std (bad) cmp mov cs (bad) lods jge (bad) divb outsb rex.RB lret jbe leaveq push add (bad) icebp and mov stos pop sbb std scas lret xor rorw movabs sahf sub fcmovb rex.W or test dec xchg in movabs lea enterq mov decl (bad) ja add movabs loopne rex.RXB scas rex.RX mov addr32 push mov or add in rex adc stos imul cwtl xchg iret loope testl sarl push sar negl movabs cmpsb lock mov cmp pop and je cmp fbstp jmp mov (bad) sub (bad) lret push (bad) and (bad) scas enterq nop loope pop fcmovnb iret rex.RXB cltd cltq hlt popfq (bad) (bad) sti rcrb mov xor (bad) xor jns xchg pop incb adc and (bad) scas xlat mov rcrl rex.XB rclb (bad) cmpsb xor pop cmp rex.WXB xchg adc in jge cmpsl xor fs orl rex.X sarl push (bad) cmp insb rcll (bad) in (bad) lret rex test mov rex.R sbb rex.XB mov (bad) out jmp sarl jns addr32 add jbe,pt stc mov rcl xor xchg sbb sub callq sbb pushq xor cwtl mov lret or cltd add lret mov movabs adcl push and mov adc sarl adc in jnp rex.B (bad) add xchg or movslq xacquire roll sub push repz mov cmp movabs mov and mov cmpsb jae int fs (bad) add (bad) (bad) rex jno insb (bad) jp (bad) lret pop (bad) lods popfq rex.B (bad) xchg fwait sbb push (bad) xor outsb mov ljmp imul (bad) (bad) mov (bad) cmc (bad) fimull lods movabs stos jnp sub adc pop pop jmpq jmp xchg xchg (bad) rex.WR rex.XB adc or pop or rorb xchg stc fsubrp mov outsb stc sarl mov (bad) repz rex fs test and (bad) jb,pn rex.B and icebp or jmp test cld movslq xchg rex.RX (bad) xchg push rex.RXB and ss int shrl outsb test xor adc rex.W rex.WB cmp in out mov rcrl movslq or jmp mov rex.RX std or and rolq cltd out loope ror adc rcr repz mov jnp pop popfq (bad) xor sbb pop cli rcl movslq movabs push cwtl cmp sahf (bad) stc pop shrl negl mov push mov xchg rex (bad) cld jo movabs (bad) push and (bad) test scas fidivl (bad) (bad) jmpq scas rcll loopne retq psrlw xchg add sub (bad) hlt imul addr32 imul jo mov (bad) icebp xchg test cli (bad) jrcxz adc pop and imul cli rex.W mov mov pop and (bad) data16 rex.X (bad) (bad) rex.RX jns add retq rex.R sub pop or mov icebp cmpsb fldenv mov data16 mov repnz leaveq xchg bnd cmpsb (bad) movabs pop jbe cs test (bad) stos (bad) rex.WR int3 mov xchg fstpt (bad) cmpl (bad) adc mov (bad) rcrq popfq adc test sahf adc sub callq in lock callq movsl mov mov lret pop loope add test int3 (bad) shrl (bad) icebp rex.RB (bad) pop jno (bad) mov fildll lods (bad) leaveq (bad) jnp popfq sub (bad) jae sahf scas adc test rex.WRX retq rex.RX adc cmp mov cltd (bad) sub sub (bad) cs rex.WR movsb pushfq (bad) ds (bad) cltd adc and mov xor lea rcll fnstcw imul movabs adc in outsl retq pushfq mov rex.R cwtl (bad) mov negl mov sub fwait repz mov push push mov cmp lods test push scas (bad) rex.WRXB xor sbb rex.R (bad) adc mov push (bad) (bad) rcrb callq mov mov bnd (bad) push xlat (bad) out and jle jae ds frstor (bad) negl lods cmp xor cld (bad) out mov xchg or lahf fneni(8087 (bad) nop rcrl rex.RX or lods repnz imul in add idivl lahf iret movabs (bad) jmpq lock (bad) xchg rex.WXB xchg pop rex.WB es rex.WRXB movl or fldl cld mov out sub rex repz (bad) in stos (bad) icebp (bad) fistl leaveq shlb xor (bad) cmpsb mov adc add rorl fwait pushq add rex.RX ds addl adc (bad) leaveq roll pop push insb or or subl (bad) pop loop (bad) jae sub js pop (bad) fs (bad) cld mov or lock lret (bad) xorl adc add (bad) scas sub (bad) mov ja imul movabs rex.X cwtl loop rcrl (bad) sahf sbb mov rex.WRX (bad) in push and int (bad) sub rorl cmp jo (bad) movslq movabs shrl or lods movabs ja cmp insl cmc xor and and sub je mov fcmovb or stc xchg rex.WRB rex.X xor rex.WRXB icebp and rorl add shl mov pop sub (bad) mov cmp push (bad) test iret sbb lock (bad) cmc cmp (bad) callq (bad) sbb mov iret clc fistpll xlat data16 (bad) adc lods (bad) (bad) rol sub push jbe rorl and add sti idivl or popfq retq (bad) lock pop rex.RX rex.WRXB pop add sbb movsl rol mov loop lock cmp rcll cmp (bad) (bad) (bad) rcll callq rcll cwtl pop pushfq leaveq rex.WRX and sbbb fisubr mov (bad) adc ror andl jns (bad) xor test rex.RXB rex.R lahf fldl (bad) int int xchg push sub shlb test imul jp or fcomps (bad) pop sti adc stos jne loope movslq pop sarl rex.R (bad) jns xchg roll pop xchg imul test sbbl and mov (bad) mov mov push mov xor shll mov callq cmp rex.XB xor mov or sarl (bad) cmc roll mov (bad) out (bad) rex.WRX sub cwtl ror jb (bad) mov mov jrcxz mov (bad) je movabs or gs shll add add jo rdmsr fisubrl data16 (bad) icebp (bad) (bad) and (bad) (bad) or ss lock xchg shll jmp xchg movabs xadd (bad) push stc pop shrl (bad) or (bad) xor js iret mov add (bad) mov pop loope xchg shll mov lret rex.RB mov xchg mov in pushfq pop roll shl iret in fwait mov rex.W repz add callq rex.RXB rorl adc (bad) add fcmovu cmpl adc jmpq mov adc pop push stos xchg mov xlat jbe es sub (bad) rex.WX roll adc (bad) enterq mov or je fnsave out rorl cmc cmpsl repnz (bad) jae int xchg (bad) mov sbb (bad) loope (bad) or int3 sahf sub mov (bad) (bad) jg ficomp movabs fnsave add xlat cmp xor (bad) jmp cli mov mov lahf or (bad) pop (bad) cmp pop in int rex lock xor (bad) xchg rex.RXB movsl or add sub in mov (bad) (bad) pop pop out sub and orb sub jns mov movabs rcr rex.WB loope int sahf mov sub (bad) (bad) xlat fstl scas cmp xchg movabs xor (bad) xchg rex.WRX fdivs jl or pop sub xchg insb jle fadd cmpsl pushfq (bad) add cvttps2pi movabs rex.WB es mov stos leaveq sahf leaveq loopne mov sbb rex.WRX movabs xchg imul (bad) rex.WXB mov pop rex.B mov repz mov jae mov in sbb xchg (bad) xor cmp enterq xor fcoml sub mov fdivs mov pushfq push jo movabs roll (bad) or frstor stos rex.RB in jnp mov clc (bad) pop jbe push jae pop xor mov (bad) rex.WRB (bad) mov xlat cltd rex.R rex.RX fcoml inc fs repz push ffree fidivr stos in (bad) xor rex.WB data16 pop mov cmpsl push push mov sbb in mov push xchg cmp (bad) cmp mov xor icebp lock shll push jmpq (bad) (bad) std mov sub callq jge or and adc push jb xchg int3 (bad) rex.B (bad) in (bad) repnz adc push push ffreep repnz push retq cltd js mov outsl int3 xlat (bad) fcomps xor jae xor test outsl xlat popfq stc (bad) fwait and and pushq add retq (bad) scas jge cltd (bad) lock imul shrl (bad) ss sbb int3 flds xchg int sub clc rex.WRB jbe sub adc clc std loopne bnd xchg (bad) mov and mov adc popfq repz jbe test retq mov ja mov xchg pushfq scas mov xor rex.R xor (bad) loope,pn (bad) outsb mov jb jmp sbb outsl rcll roll es sub mov sarl data16 xorl (bad) (bad) sahf js pop clc mov pop add loopne (bad) add sbb lret mov mov mov lret loopne or shr lret jnp pop add scas (bad) flds shl pop shl (bad) rex.WX rex.WXB fnstsw ror (bad) push sarl add roll mov xchg push sbb lods insl cmp xchg callq jp rex.W movsb (bad) int (bad) rex.WB xchg loop js rol and retq movabs out sbb mov sub fnsave cmp fisttp or cmpsb jae js add fldt (bad) cwtl (bad) (bad) or sarl xchg adc jmp loopne sbb lahf mov xchg (bad) rex.B rcrl ja (bad) data16 jno pushq ds movabs mov iretw mov (bad) lock addl (bad) rcl pushq cmp fidivr mov add movsl (bad) int (bad) lock sbb mov outsb or sbb (bad) mov jmpq cmp rorl or rex.WR imul pop add clc je push (bad) repz (bad) stc lods loopne callq outsb xor push xor rex.XB mov fimull loopne add stc adc fwait (bad) pushfq mov sarl pop imul rex.WRX fwait rcrl jge adc pushq mov movabs or adc int3 and icebp (bad) mov (bad) xchg push repnz out add or movl pop rcll rex.RX (bad) pop lock rcrl je,pn std test or imul fadds or add jp rorl movabs imul scas rex.WRXB or (bad) xchg push imul rex.W loop add (bad) adc shll and mov (bad) mov rex.RX cmp (bad) lock cmp (bad) push in mov retq retq sub xchg iret xchg (bad) imul add test rex.WX xchg sbb rorl movabs and (bad) pushfq xchg or leaveq cmp test callq pcmpgtb jbe movabs push sub sbb (bad) (bad) sub movslq (bad) fldcw mov add roll jne ja push sarl repz test and cmp rcll rex.WX and or cmp fstpl (bad) lock insb movabs xchg (bad) movsl (bad) sub mov jrcxz mov pop adc (bad) fs in (bad) jne sbb xor fnsave out xchg mov movsb adc roll fimul xor sub (bad) rex.RB test shrl lea movsl sub scas jg cmpsb xchg movabs sbb (bad) xchg (bad) sub or sub mov rcl (bad) movabs push push mov leaveq sahf sbbl mov movabs mov mov mov in cmp rol (bad) sub std in repz add (bad) sar add add (bad) rex.X mov rex.WR gs xchg (bad) mov jbe or cmp test (bad) cmp hlt xchg movsb jmpq icebp cmpsl pop int3 cli add (bad) loopne cmp ds cmp loop (bad) fldt push push jge iret sar mov push bnd movabs xchg xor frstor int3 xchg movabs retq lock outsb xchg fidivrl xor mov fs mov sub loop xlat add xchg js rex.RB es std (bad) imul adc (bad) mov int3 adc xor jne jbe nop xchg outsb push pop bswap sub insb outsl sarl xor callq movb (bad) test cmp rex.RX pop mov (bad) and sub (bad) out int3 xor rex.B cmc sub push jle rex.WB xchg test (bad) lret lods fs and sbb (bad) sarl mov push xchg movabs ja rcr andb or shr cmp xchg and sub (bad) (bad) mov lods push cwtl shll clc and add fwait add rex.B gs xchg rorl xchg int or xchg (bad) movslq mov xor icebp or lahf mov cld pushfq rcrl xchg jg xor xor rex.WRXB (bad) or movabs data16 std (bad) or jle push add adc xchg gs shll xlat or pop (bad) shl es lods callq (bad) fwait pop enterq xchg pushfq pushq addr32 test movabs in movabs shll lock mov test (bad) mov jp insb iret paddd add mov mov (bad) movabs loop movslq adc sbb add std outsb je stos (bad) lretw hlt (bad) pop xchg rex.R push mov add in lods xchg outsb repnz scas shrb pushq movabs and lods or rex.B mov sbb jge sarl push (bad) rex.WRXB rorl jne push callq movslq mov stos sbbb xor retq mov int3 nop add lret addr32 xor (bad) mov cltd test cmc sub mov idivb mov sbb iret sbb mov std push out enterq add rex.R (bad) cs (bad) mov fs (bad) add (bad) (bad) imul push cmp jnp cwtl mov rex.WRXB roll sub jmpq (bad) cwtl repnz adc sbb lret shrb xchg add sub sti push (bad) outsl std (bad) fldcw fldt and mov rex.WR (bad) movabs add ror jrcxz (bad) sub lea (bad) jne adcl sub jnp (bad) repz icebp or rex.B gs push rex.WRX xchg in and rex.RX loop roll adc cmp incl pop sub stc rex imul ffree (bad) add sar jne pushfq out mov test sub sarb (bad) mov pcmpgtw test rex.R xchg jo fcompl rex.R (bad) out xlat lret stos fsts jrcxz xchg movabs jle cltd dec cld lret movabs cmp or mov js (bad) repz lahf or sub sbb out add jno (bad) rex.X rex.B fwait pop (bad) xchg fildll pop sti loopne xchg fcomp cmpsl and (bad) jae in fucomip mov adc push lods out ficom (bad) push (bad) xor cld mov bnd sbb mov xchg (bad) fistpll movsb adc retq add xchg cmp loope imul sub (bad) fidivl movabs mov or sarl rex.RXB cmpb mov push lods (bad) cmp adc js xor add lods subb pop pop mov (bad) adc loop clc fmuls loop test lret rex.B rex.RX rex xchg rex.RB clc sbb pop (bad) test rex.WXB pop sub (bad) xor rex.WB es retq rex.WB adc (bad) pop out sub mov mov lahf rcrl (bad) mov push mov xchg sbb xor mov or sarl je orl cmp fbstp hlt sahf xchg mov (bad) (bad) mov cmp (bad) xor (bad) roll (bad) jo and ja (bad) (bad) mov loop test int jg ds outsb xor lea stos pop (bad) or adc rex.XB or sub push shll pop push fisttp movabs rex.RXB xor (bad) push movslq (bad) mov iret int3 (bad) cmp rex.R cmp mov xchg mov and iret (bad) int3 and in je sub retq mov jbe outsb cmp mov (bad) rcr insl jmpq scas pushq mov fwait popfq mov (bad) movabs jne flds cmc imul adcl adc rex.WRX add cli cltd sti fstps add cwtl (bad) rex.WX data16 es out test jae or lock push xor adc rex.B xchg adc rex.W sbb decl adc add adc (bad) and (bad) (bad) callq lea rex.B (bad) movabs mov movabs retq xchg test rex.WXB movsl rcll and or imul (bad) rcrl sahf sbb mov sub callq gs ror mov rex.WRB jle int3 (bad) fcomps sub loopne or (bad) rex.WX ljmp shll nop mov (bad) notb push or rex.WRB jle ror (bad) pop clc mov rex.WRB addr32 pop or cmp add cmp rcll sbb test mov sarl stc lret rcl add or int3 fisub popfq cmp mov sbb mov xor (bad) mov or rex.WRB (bad) sbb jge xchg rol add nop fiaddl (bad) (bad) lea xor (bad) (bad) inc pushfq mov push cmp mov pop out std and cmpsb sahf mov sbb xor add (bad) icebp and (bad) xorl cltd fidiv sahf jp sbb push lods pop callq cli in add rol add jge repnz rolb add (bad) push cld roll or sti nop mov and sbb add mov sbb stos sub nop rcll mov rol mov subb roll in mov pushfq shr retq mov mov xchg stc (bad) mov fwait mov or adc (bad) xor rorl roll imul or sub add mov test rex.XB (bad) adc xor or sub (bad) (bad) jae mov addr32 jo rex.WXB repz cmpsl (bad) mov or mov (bad) rex.WX ds sub repz (bad) and (bad) (bad) pop fimul in cmp ror sbb (bad) lret xor (bad) jmpq adc rex.RX add mov xchg jne int loop mov (bad) movabs rex.RB sub cwtl sbb sub je mov out rex.W (bad) xchg xor xchg rex.WXB sbb (bad) rex.WRX sbb jle and icebp fimull data16 or movabs testb or repz roll xor rex.WXB fstps add jns retq xlat xor sbb jg mov fistpl stc pop (bad) fsubl mov (bad) (bad) or push lods mov (bad) (bad) scas adc rex.B or add cvtps2pi add sub lea sub adc test (bad) (bad) pushq (bad) pushq jns xchg xor mov int3 rex.WX adc fsubrp insb mov rcr nop adc out (bad) (bad) (bad) mov movabs movabs adc out js or and pop rol sub loope iret (bad) lock negl mov adc fsts cmpsb or cmp roll je (bad) (bad) jne mov lods xor mov (bad) shll sbb cli sub mov sar add push scas (bad) jl iret fcomps lret test add (bad) jbe pop adc in int pushfq and rex.B rex.R xchg push mov cmpsb (bad) ficoml (bad) mov or add add fidivr mov jge (bad) rex.RXB sbb pushfq nop sub add (bad) rex xchg jrcxz js iret or (bad) movsb stos out push mov cwtl mov outsb imul push scas hlt (bad) jne sahf or and xchg (bad) movabs pop push xlat push jo xor or rex.RB fs xrelease rcr repnz faddl and add int3 notl xchg xchg fisub mov out mov rex.W in cmpl clc sbb mov and out sbb mov fisubrl jno mov push jne cmpsb mov fiadd jbe (bad) (bad) xchg sarl in loopne (bad) movsl (bad) pop cmc cmp (bad) rex repz and mov (bad) faddp add ror adc test (bad) add xchg cmpsl (bad) add je (bad) rol rex.B rex.WX or jns test add adc outsl scas test std push xchg gs rex.B or repz (bad) sbb sbbb insb fwait add jl scas imul in roll and rex ucomiss mov pop lret rex.WR rcl mov mov or rex.RXB lret rex.WR (bad) fs loope jle movb mov out push movb ja shrl lea and int sbb pushfq stos sbb sbb mov fisttpll lret add imulb or cmp push repz loopne test xlat loop loope jp out (bad) jo mov cmp retq (bad) ffreep loope mov js adc push pushfq push mov xchg (bad) cmpsb jmp add rex.XB fldt (bad) xchg push cmp lret clc sar fsts (bad) testl xor jne rex.XB es cld roll (bad) shll mov xrelease in jg pop and lret imul xor (bad) imul movsl iret lahf xchg cmc (bad) xchg rorl jno rex std or mov add stos (bad) lock cmp xor sbb cmpsb mov (bad) outsl xchg rolb jg out (bad) jae xchg test (bad) and add rex.B rcr movabs mov (bad) (bad) icebp fistpll adc imul xchg (bad) cmp and lret retq test and or leaveq loop fwait adcl pop in xchg (bad) (bad) (bad) and (bad) ds fcom add mov sarq rex xchg rex.WRX lret (bad) mov sarb push rcl movabs xor test sub mov (bad) (bad) (bad) xor imul rcrb sarb (bad) mov shrl xchg movabs mov pushq (bad) mov push and xchg push movabs pushq mov callq mov out mov popfq repz sbb jmp and test movsl (bad) (bad) stc fnstsw jmpq (bad) loopne movslq and test rcrb (bad) adc shr pop adc (bad) je (bad) (bad) adc fldl2t jrcxz and rcr rcll cmp sub int3 mov rex.RB cmp sbb rex.RXB pop hlt (bad) rex.RB jmp mov mov pushfq xchg rex.RX rex.RXB add adc sub and in in sub add (bad) ss (bad) (bad) fist cmc mov rex.X movabs sahf xchg out (bad) (bad) xchg cwtl rex.WB movslq and pop imul sub or sbb jbe lret cmp cli mov pushq lret xchg loope fwait mov jb fistpll roll cs nop (bad) rcl popfq add mov lret fidivl out rex.WXB cltd lock (bad) adc or and rex.WR push sarl jns je subb rex.WX rex.R icebp sbb (bad) pop (bad) or cs jle roll push (bad) shrl rex.W rex.R sarl and rex.RX fadd xor nop loop callq pushq callq push add int3 hlt rex.RX jno (bad) and (bad) cmp rex.WB push xlat mov xchg add sub stos fildl rex.WRXB vmovss fisttpl sar rex.WRXB jae and sbb rex.WR test jle sarl jne xchg (bad) (bad) leaveq and (bad) (bad) fnstcw adc fnclex cmp sarb in clc sub (bad) test int3 mov test rex.RB jb imul add fbstp or jrcxz cmp rcr or (bad) fstpl adcl pop mov pop (bad) stos mov cli rolb sbb lock cmpsb leaveq rex.RB mov and sarb xlat mov and loope shlb sub sbb ds loop and mov (bad) movabs add sub fld xlat adc rex.WB push add pop sbb mov sti adc sbb stos pushq (bad) (bad) pop (bad) insb (bad) bnd loop fnstenv movabs mov jmpq (bad) retq notb rex.X rex.WB xor jge cmp jb sbb cmp jae mov int jo xchg std adc enterq pushfq outsb rex.WXB xlat (bad) (bad) rex.B enterq cmc (bad) rex.RB sub jle enterq movsl mov push rcrl sbb lret add (bad) cltd rcll cmp fnstenv rcll rex.WB mov mov shrl xchg cli rcll outsb movabs xor stos movsl in lret lock ficoml xor std rex.RB lods xor rex.WRXB and mov rcrb jae jrcxz mov ficomp std sub rex.B cmpsb cld adc (bad) and movl movabs popfq (bad) or jmpq add push movabs vzeroall (bad) push pop pop lret xchg rex.WRX test mov cwtl in add fsincos mulb cld sbb (bad) test adcb in jp (bad) imull add mov sbb add or iret pop mov test lahf (bad) test mov adc cmp lahf mov shr out rex.WRX rex.X lret rex.RX insb iret xchg sti adc (bad) movslq notl cwtl (bad) out out cld (bad) cmpl rcll jb int and xor cs cmp repz pushq rex.RB mov adc out (bad) int repnz (bad) in incl rorl loope loopne (bad) push (bad) add or rex.B lock fstpt cs (bad) adc push mov sub or jnp cmc (bad) pop lods sahf mov stc roll imulb (bad) rol adc pop rex lret stos hlt sbb movslq pop (bad) mov cltd and or sub (bad) pop imul xchg sbb jg icebp repz movabs shll pop jrcxz mov movabs mov or int add pop adc out shrl (bad) xchg (bad) (bad) (bad) shr push xor jnp lods pop mov rex.WRB in (bad) movslq pushq (bad) xorl sbb outsb cwtl jbe jb or (bad) icebp (bad) pop fcmovnb (bad) cmp retq pop mov sbb jbe jmpq adc xor out sbb test adc sbbl roll mov cmp mov (bad) mov (bad) sub callq stc fsubs insb lods pop sti mov rex rcll (bad) jg xchg mov pushfq int (bad) lret loope rex.XB xchg out (bad) testb (bad) rex.WR pop cmp stos add mov lahf rorl je nop out roll adc shll fwait (bad) in (bad) test (bad) rorl cmp test rex.RX rex.WR ss mov mov rex.WRB int sbb sub out xchg shrl sbb mov adc jae lods lret (bad) int3 out enterq callq repz push shll rcrl outsb enterq popq (bad) clc jmp sarl retq jp push lods sub rex.X loope (bad) (bad) fmulp movabs add cltd push imul sahf scas (bad) mov jrcxz movsb mov (bad) out repnz stos (bad) loope sbb (bad) in lea lock jb int3 out mov fadd (bad) insb (bad) sbb lea mov pop test cmp push add loope loopne or fcoml rex.WX sbb lahf leaveq retq rex.WRX rex.WB roll fucomp outsb lock (bad) fdivr stc jnp rex.WR cwtl mov test rdmsr jo (bad) callq loop mov clc out lret (bad) (bad) (bad) jg repnz (bad) pop sbb (bad) scas mov fwait mov mov fmuls lods rex.WRX mov mov xor (bad) cmp jmp adc sub sbb rex.RB ss enterq out jno or fucomip mov jle jnp add cmp mov (bad) lock (bad) fidiv subl sahf xchg jg fbstp (bad) jo adc and (bad) gs push xor test sub cmpsb iret (bad) push fs insl mov loope fnstenv sub xlat enterq hlt cs sbb xor jns sbb (bad) repz fs loopne (bad) sbb jg cs lock jle and movsl cmp (bad) stos int3 iret sub mov mov js retq push decl in orl sub rex.X rex.R scas out xor mov pop movabs (bad) out movslq (bad) pop imul cwtl rex.B cmp (bad) movb out (bad) (bad) sbb leaveq sti add stos js (bad) hlt callq push rex.WR mov roll mov (bad) callq (bad) rcl mov add (bad) sub es sub mov add (bad) lret jrcxz fwait sbb pushq cltd xchg jrcxz adc cli mov mov lret cmp and lea lahf sub nop rex.WXB repz cld sub sub movabs outsb mov (bad) push (bad) sbb jns pushq std mov xchg out mull adc ror jb push test pop mov xchg je cmp mov (bad) jge jno loopne add xchg xor jns (bad) (bad) (bad) andl movabs lret testl (bad) rex.WRX (bad) (bad) int rex.RXB (bad) jg rolb fldt mull rex.X es adc pushq int (bad) shrl movabs jb shrl std (bad) test mov fs insl repz rcrb (bad) lret cmc rex.WXB and insl xor lret mov fs loop jns add in mov push je stc mov rex.R sub (bad) pushq lock jns movsl pop xchg mov outsl add insl (bad) mov jl fwait cs loop int (bad) sub xchg shrl scas or sarl mov mov int sbb pop out out pop push (bad) mov add or pushq push lea adc xchg popfq sarl cmp jge pushq add push stos cmc scas rex.R sarl (bad) (bad) xchg fisub adc shr (bad) (bad) test lret cmc mov std cs (bad) nop lods loopne jmpq (bad) imul scas jns push pop lret and (bad) pop movabs outsb sarl ss rex.WRXB int3 cmpl lahf sbb mov popfq sub adc xchg es cltd mov movnti jb adc push xchg rex.WXB int cmc pop rex.RX (bad) lret out sub mov (bad) mov rex.RXB rex.WRXB fadd (bad) (bad) insl lock rex jge (bad) int3 (bad) xchg lods jg repz rorl and divps add std roll out mov (bad) (bad) and mov (bad) (bad) sti pop rex.WRX (bad) (bad) xchg std lahf rex.W ss xlat jle mov push sbb fldcw in shll adc (bad) mov xor (bad) popfq pop cmc sub (bad) cmp (bad) cmp pop ffree movsl mov lahf add (bad) idivl mov sub in jne add out adc inc rorb jp or retq out xor push cmp cmp sti movabs retq enterq cltd hlt mov je pushq xchg pushq sbb push sbb rex.WRX repnz mov stos fidivr add (bad) mov (bad) lods xor int3 shrl mov rex.WB xchg scas iret stc xchg scas fidivl mov (bad) cmp ja std bnd cmp add cmp (bad) mov mov rcrl js (bad) jne rcll pop pop xchg pop jp mov jno mov insl loop (bad) int (bad) (bad) ja (bad) cmc or push xor jne xor mov fnsave int3 rex.W push xor lret cmp sbb in test rex.XB sbb sbbl rex.WR mov (bad) mov jns or jo loope movabs xchg loopne callq mov out addr32 pop xchg pushq cli rex.WRB fucomi (bad) add rcrb pop scas repz lock rex.RB (bad) mov xor jne callq (bad) (bad) fwait mov outsl mov rex.WR stos adc add mov (bad) (bad) push (bad) jmpq int rex.X jge add mov clc xchg lret rex.RXB mov and or int3 add rol out test stos (bad) repz lock shll in imul iret (bad) cli jge lret and ss (bad) jnp push and (bad) fsubl mov sar jp and (bad) leaveq lcall mov shrl rex.RX (bad) jno rcrl test xchg rol and fbld (bad) callq mov jmp movb outsb xchg sub cmp orb and (bad) icebp loopne adc sahf roll jp or (bad) fnstcw loop (bad) rcl out mov push xor push iret sbb shll frstor cld sarl sbbb shrl push (bad) leaveq fist (bad) lret test sti mov (bad) int cwtl (bad) out mov (bad) (bad) fsts pop (bad) (bad) (bad) and rex.RB and sbb (bad) jnp (bad) mov mov jle callq lahf add (bad) fildl add sbb mov rex.X pop sbb movsb jb or vmaskmovdqu sub (bad) push (bad) mov (bad) jrcxz (bad) xlat cmp (bad) sbb (bad) pop (bad) popq in fcomps adc loopne sbb rex.WRXB pop mov sti sub (bad) push or jmp and push lret pushfq jp sbb rex.B and callq xchg out cmp mov (bad) xchg popfq lret mov sti xchg jo (bad) (bad) andb sbb fsubrp (bad) sub jno rex.W fiaddl pop xchg sbb movabs jmpq fldcw or adc mov fcoms inc in sbbl scas movsb mov scas callq int adc pop sub sbb jge jg (bad) sub mov (bad) mov mov and cmp test xchg push fsubl push jp leaveq add lods ror repnz sbb test cmp sub loope test mov xchg data16 rex.XB roll test sub add stc cmpsb (bad) sbb (bad) je divb ds rex.WX push cmpsl rex.W mov (bad) popfq repnz jrcxz jb movsl incl fs (bad) and rorb in (bad) movslq jno,pt jo loope icebp (bad) and (bad) rcrl rorb xchg sahf jge (bad) mov movabs cmc mov test loopne scas (bad) (bad) (bad) subl movsl rex.XB pushfq (bad) cwtl or icebp sub rex.R pop (bad) js loope ficom or movabs sbb andl iret fisubr cltd in mov mov mov (bad) test frstor rex.WR xor outsl mov (bad) sarb xchg add movabs push (bad) xorl iret jp jmpq cltd (bad) or lea rex.WRXB fisubrl fdivl (bad) rcrb sub mov jo cli adc nop pushq xchg push cmp (bad) icebp xor rex.X (bad) (bad) std sub scas retq in cmp rex.WR cmp xchg push outsb (bad) stos or adc pop (bad) lea (bad) (bad) (bad) mov rex.WR jp mov rex.WR ds push mov add rcrl mov (bad) test rex.WRXB (bad) mov cmc std callq lods cmp retq xor mov sbb lock mov xchg adc or push es xchg (bad) cltd sub xchg and pop retq retq or retq xlat xchg xlat sti add rex rex.WXB rex.XB stc int xor fsub rex.RB retq rol xchg and movsb callq cmpsb rcl and sbb (bad) mov int loop rex.R sbb hlt xlat test jno loope xor out in repz gs frstor loop out xor ja or bnd cmp loope stc int3 or pop mov push out (bad) and add movsb orl jl (bad) cmp and in cmp (bad) fnop cmpsl pushfq cs xchg bsf andb jo,pn jo mov push stc (bad) jne lock imul in jno jno nop rex pop rclb push (bad) add enterq fbstp test and js xchg loopne cmpps (bad) sahf mov stc test mov rex.WRXB rex.WX test sub add (bad) jno cwtl rex.B sub loop or shll push addr32 (bad) sbb (bad) fisttpll lret xor adc or add mov (bad) shrl pop jno stc (bad) pushq xchg adc push (bad) data16 rex.RX cmp es jmp test popfq loop lret (bad) jbe imul adc nop pop xchg adcl jno add rex.RX (bad) (bad) repnz push (bad) mov or (bad) adc out callq movabs jg lret imul or xor sub js insl (bad) rex.B sbb rex.B outsl retq lahf imul adcl fwait or lea pushfq sbb icebp jp lahf rex.WRB rex.R rcrb xchg (bad) jge in sahf xchg sbb in jo mov sbb rol cmp lret rol rex.W push (bad) movabs add mull test fsubrl (bad) xlat adcl and sbb (bad) rex.RX cmp mov (bad) (bad) cwtl orl push insl sub ss or add es int mov rcll (bad) inc and and sbb outsl (bad) rcrq fstpl add (bad) js callq rex.X rex.B push (bad) sahf add and in repnz rex.WX (bad) and (bad) lret andl rorl jb xlat xchg (bad) pop push int3 test stos sarl add pop (bad) pop adc rex.RX xor repnz icebp fisttp addr32 negl cmpsl repz jnp xor add adc callq jne fnop (bad) shll lock test cmp xchg rorl mov (bad) pushfq leaveq jb sub (bad) cmp jns pop adc fcmovbe and lods (bad) (bad) rorb out mov insl clc in sahf sbb rex.WXB xchg stc fmulp insb jge (bad) imul xchg and lea add (bad) pushfq or movabs testb pop pop in mov xor int3 push mov rcrl sub push cmp insl loop rex.B cmp rolb rcrl sub cmp loope rex.WXB jb mov mov fdivl mov add sbb loope sbb pop xor xor mov rex.B rex.RXB jbe xor pop hlt rex.B mov test cmp imul fistl jae cmp (bad) fsts sbb lret xchg mov mov add jle (bad) jb sarl (bad) enterq jp test adc fidivr jmp adc rorl add jo iret movslq stc addr32 (bad) lret push imul es repz rex.WRX rcrl pop insl xchg jl xchg adc rcl pop or jmpq fnstsw mov imul fildl adc mov std (bad) cs (bad) rorl xor add or test push callq shr cmp xchg movabs mov (bad) xchg cld (bad) and std mov lret mov xor rex.WRB pushq and (bad) xlat (bad) cltd adc shrl rol (bad) loop jmp test stos (bad) mov pop mov (bad) cmp repnz retq pushfq pslld rex.WR rex.B push and test movsb mov (bad) cs rex.RX shl rex.WRX mov shll add sub push out mov fsubs (bad) rex.RB data16 movsl rex.B (bad) pop test rex.XB out hlt (bad) pop rcrl rol and sbb mov sub sub rex.RB rcrl and (bad) rex.RB rex.B in fisubrl faddp or or movabs test or or jp adc (bad) hlt fxch rex.RX out (bad) cmc mov jge jmpq sbb ja (bad) xchg mov cmp outsl and jp jns (bad) jae pop sbb rex.XB repnz rex.RXB fldenv cmpsl fisubr (bad) xchg jg (bad) cmp movabs (bad) jp jae pop mov andl mov imul (bad) xchg (bad) faddl fldl or jge,pt (bad) fiaddl rex.WRXB out jno repnz sbb or xor pop sub mov sub jb mov adc insl push retq movabs xchg sbb mov std mov push (bad) xor lods mov fnop jl mov callq callq movabs iret int jno lods es cmp xchg stc add sub pushfq (bad) add xor and mov and callq (bad) (bad) pop std frstor or adc rex.WRX push test mov imul movabs add cmp (bad) rex.WB xchg xor jle xchg xlat movabs lock retq jp rex.WX pop enterq retq callq test mov ds sub cmp jrcxz popfq pushq pushq shr fisubrl and xchg shl mov xchg or iret adc (bad) loopne test sub rex.WXB push and shrl push or ror (bad) fistpll push rcl mov pop shrl pushfq push (bad) lret rol add test shr and loop cmp subl gs rcr jge imul adc mov adc rex.RX rex.WR sahf add xor cli pop rex.X xor xchg js iret shll ficoml fstl in xor (bad) jno mov movabs retq (bad) int3 cs (bad) mov or movabs movabs rex.WRXB mov movabs hlt push jl cmp lods jbe xchg (bad) in (bad) sahf pop test int pop pushfq jle sti stos int3 retq mov rex.WR xchg push insb add test or rex.WR adc hlt int3 loop rex.RXB gs shll fsubl movabs lret mov loop scas in jrcxz movabs movsb jo mov icebp mov ficompl loop mov mov pushq int add (bad) adc xchg rex.B or ficoml push jno (bad) sbb lret (bad) mov mov out in (bad) shll (bad) and pop jae mov (bad) (bad) (bad) rolb in add fisttpl jb sahf movsl movabs cld add xchg xor (bad) rex.RX add loopne cmp mov repnz mov shr adc xchg sub fcompl rcrl pop sbb out shll adc jne rex gs mulb mov push out cwtl sahf add rol cmp push jge roll std adc cwtl cmpsb sarb out movsb int push fcmovnbe (bad) mov and add mov repnz xchg adc int cmp cwtl (bad) (bad) addr32 outsl (bad) insl xchg (bad) shll (bad) add pop and rol rorb (bad) iret (bad) rorb loope push and cmp and mov (bad) rol notb pop push cltd (bad) sub (bad) pop sbb pop cmp push rex.B mov callq rcr out (bad) mov cli xor xlat mov leaveq test xor mov jp icebp xor sarl pop (bad) callq sbb movsl jp adcl lods (bad) in mov lret and adc idivl lock mov rex.WRB gs sarl stos rex.WR jae (bad) (bad) popfq mov sti mov roll xchg lret lea mov (bad) (bad) mov (bad) mov xchg retq (bad) jbe add pushfq enterq rex.WRXB pop rcll mov rorl cmp add iret lods orl sahf cmc movabs push add xchg push nop push mov xlat (bad) sbb (bad) (bad) retq ror jmpq scas rcr xor xchg pop stc jns xchg (bad) mov add xor jg rex.R data16 hlt test not rex.WX (bad) (bad) (bad) (bad) jae sbb (bad) adc repz xor mov lea (bad) lods lret test repnz fisubr pushq rex.WX fnsave mov movl mov repnz std push jmpq mov fistpl (bad) xchg nop cmc (bad) xchg (bad) (bad) mov int pop loope xchg mov repnz cwtl pop jae xchg pushq add out (bad) sbb pop adc rorl pop loop fistp adc rex.X ss lock movslq add sti or rcrl rex.XB pop (bad) lods roll shll mov ja (bad) xor and fs fadd imul and roll es push btr (bad) test (bad) lock fsts xor in rol xorl shrl (bad) (bad) sbb adc sahf mov out (bad) rex.RX sub mov (bad) xchg mov fild xchg (bad) movabs fildl cmpsl pop divb rex.WXB sub movsl (bad) test and sub sbb cli fcoml lret mov mov rex.R jno adc cmp push cmpsl movabs (bad) rex.WXB shll add mov vmovsd mov movsl jne sub and xchg pop xchg mov sub or push push ds rcll jo es rcrl scas in mov mov (bad) jne outsb rex.WRXB (bad) fcmovb rcrl mov xchg (bad) add (bad) (bad) je and test (bad) cmp or out (bad) adc or (bad) lret (bad) xchg (bad) jrcxz cmp mov (bad) cmp test rex.XB add sub push mov mov (bad) sahf pushq cwtl (bad) rex.RXB sarl xchg out (bad) out rcll (bad) nop jno and test and pop (bad) pop rolb jbe sub roll ja data16 (bad) shl cmp (bad) jno (bad) (bad) (bad) test (bad) lahf lret (bad) (bad) mov rex.WRX lods addr32 (bad) enterq and jg or add rex.XB (bad) leaveq cmp sub (bad) in xlat adc (bad) pop scas imul or rorl cwtl (bad) mov fldt push rex.RB mov xor pop callq pushq retq rex.RXB pop sub adc test rcl rex jge add movslq rol sahf cmpsl sbb xor scas cs js lea mov imul fildl sub fmulp (bad) cs mov movabs mov retq loopne mov pushq repnz xor jbe cmc (bad) fwait cmp cs movabs icebp jae cltd sub or stos outsl jns loop pop sbb leaveq mov int3 int (bad) (bad) fmuls fstpt (bad) (bad) (bad) (bad) in xor hlt adc push sub xor fsubs (bad) pop cs loopne xor (bad) xor loope rcr xchg sbb (bad) mov (bad) int sub cmpsb xchg in push and (bad) mul jno (bad) mov (bad) add xchg enterq rolb fistl fwait (bad) xchg repz (bad) lret add outsl adc movabs int3 push sub jrcxz addb (bad) sbb fldl jle ror retq mov mov pushq cmpsl rex.WR push repz lods cmp enterq fiaddl rex.RXB fsubp mov rex.RB rex.RB shlb (bad) (bad) and lock add orb (bad) movabs sti pop imul xchg or mov rex.WXB and jle (bad) sahf outsb jns push (bad) (bad) mov (bad) lahf lods mov rex.RX (bad) test push cli clc adc ror mov pop add push (bad) outsl ja repz sarl decb sahf movsb rex.WRX push add callq adcl pop shll sbb movslq loope stos roll (bad) callq sbb rex.WRX roll xchg mov push (bad) je add (bad) (bad) popq test ds or sbb xorb (bad) xor rex.RXB rex.RX (bad) (bad) loop mov cwtl test fnstcw rorl xchg or push in std lods adcl (bad) and pop sarl adc or je add callq movabs xor (bad) mov shll rex.RXB sbb jmpq roll sbb movsb cli rex.XB movabs lahf push xor repz test outsb je pop and fistl cmp push adc xor lock (bad) fsin xchg adc rcl int3 rex.W lods (bad) or movsb rex.X sti lahf imul sub iret rol xchg mov repz rex.WB mov push retq movsl ds add xor xchg pop xor test jae and pop loopne ljmp shrb mov (bad) (bad) (bad) sub clc lea rex.WB fwait sub mov jmpq stc test sub je fucomp jrcxz add sub out (bad) cltd rex.RB (bad) mov test xor repnz rex.RXB xor (bad) mov (bad) enterq pop (bad) xor jae xchg jl cs repnz (bad) cmp test sub (bad) fsubr loopne or adc mov rex.RXB stc rex.WRB iret rex.XB neg rex.RB adc cmp cltd sbb jno lea rex.WR sub cmp pushq xor adc addr32 push mov rex.WR rex.WXB rex.RB mov iret int pushq fimul rex.WRX rex.WR cs fs loope out push int (bad) je mov rex.X rex.R repnz xchg ds cltd outsl add imulb jrcxz outsl int (bad) movsl cmpsl (bad) mov es mov outsl (bad) (bad) popfq ficom (bad) push (bad) leaveq cmp rex.RB rex.WRXB stc (bad) cld cmpsb push sbb mulb stc (bad) movabs iret rex cltd sub and add cli addb add dec add rex jl (bad) mov rex loopne jmp xchg imul or int sbb add movsb movslq cwtl jp push mov adc xor imul incl test int push in fs movabs fcmove xchg xor retq repnz cmp cmp test or callq fcmovnu ja rex.B rex.RX xchg mov mov lret xor jnp test leaveq roll imul lret xor shl (bad) rex.WRX lock movabs xchg std push pop push rcrl stos outsl mov push jnp test and or int xor lret (bad) lods mov add ja xchg enterq sub sbb rex.WRB fwait add movabs test stc popfq xor stos (bad) iret mov rex.WXB push shrl (bad) movabs (bad) fnsave (bad) add xchg shr (bad) xor hlt scas or pop lods stos movabs movsb xlat icebp imul mov rex.W in sahf neg scas test and sub popfq push cmpsl adc stc xor rorb (bad) (bad) (bad) jnp sub je mov jmp and incb jbe retq add sti cmp push xor (bad) nop push outsl lea jmpq pop test mov pop pop adcl xchg rex.XB push xchg and (bad) ds and pushfq std int fistl rorl (bad) stos mov imul std enterq cmp rex.WRX (bad) mul pop sbb jge mov rex.R shrb stc xchg jrcxz or fwait sub mov vunpcklpd leaveq xor stos mov rex.X xchg pop mov add test sar test movabs push and jp jge jbe sbb (bad) fs (bad) (bad) mov cmp iret pop jmp sbb jge enterq (bad) lods rcr xchg out xorl mov add (bad) loope mov cmpsl movabs fisttpl in (bad) (bad) es add movslq xorl xchg shr stc ffree xchg movsb xchg mov (bad) out pop push rcr jmp jmpq ficom (bad) add nop icebp rcrb xchg lods push popfq (bad) lret jle (bad) xor inc and sbb sub (bad) rcrl mov sub add rex.WR lret (bad) cmc xchg addl pop rex.WXB mov mov jbe or (bad) sarl in (bad) iret movsl gs (bad) hlt popfq xchg pop or rcrl clc pushfq mov sbb mov (bad) gs rex.RB mov adc movsb (bad) jb pushq out in rex test int mov cs notb shrl movabs fld adc in push xor lret or adc sub jmp jge rex.RX imul mov andl ficom (bad) rex.RXB (bad) jns out (bad) ds cli xchg sub hlt mov rex.WR adc cli in cld iret cli in lods lods shrl rex.B movabs iret scas roll lret cmc rex.WR add push fmull push sub imul mov andl add (bad) insb push and movabs (bad) jno cmp rex.WRB enterq in scas enterq lea mov sar (bad) jae scas rex.WRB add sub cmpsb jp and shl sbb or xchg sbb push shr lahf push divl mov adc roll xor shrl and cmpsb fidivr cltd mov adc outsb sbb or mov rex.RXB es mov loopne shll (bad) xor pushq cmp cmp rcl rcrb rorl cmp mov (bad) (bad) jle pushfq out (bad) (bad) in (bad) mov jns repnz (bad) mov in jae out jl movsb (bad) sub decl (bad) jo cmc (bad) mov sarl cwtl pushfq mov pushq (bad) fdivr (bad) in pop xchg shrl rex.WXB enterq (bad) mov rcrl adcl movslq rcl (bad) repnz testb mov imul ja (bad) out sub mov rex.B rex.W movsl roll fwait (bad) cwtl add (bad) pop insb stc repz sub and or or (bad) jp rol mov xchg adc jnp (bad) fist sub movabs rex.WXB rcll int3 pushq mov rex.R sub shl rex andl (bad) cmp (bad) lea sub rex.WB (bad) and cmp pop sub add mov stos iret shll rex.RB pop (bad) repz xor movabs imul repnz loopne pop out cli add test jle mov (bad) xchg rex.WR ds jge shl pushfq (bad) cwtl mov rex.WR (bad) addb xchg outsl (bad) push sub jmpq sbb loop xchg test adc movsl (bad) (bad) sbb out mov mov push test cmpxchg fisttp mov push jno out in outsl lret (bad) jae jns js cld pop pushq ss stc or push xchg test int lret lods add cmp (bad) cmp lea jge movabs mov loop rex.WB rex.RXB hlt lock decl and sbb pop in pop (bad) int rex.WX test push jge rex.X cmpsb (bad) mov in ss mov fsubp nop push and hlt addr32 add mov (bad) xor or scas mov rex.B push xchg mov mov retq (bad) adc outsb sti rex test and (bad) test and scas rex.RB sbb xchg (bad) pop cmp lahf xlat pushq iret lret leaveq rex.B callq stos lea push cld mov lret (bad) xor (bad) rex (bad) sub add mull pop sbb rorl adc add adc (bad) adc (bad) movabs rex.R sahf negb mov jmp movsb add cmpsl sbb cmc pop rex.B pop imul jrcxz sub repnz sbb (bad) js sarl test mov mov push adc mov adc sar lret jrcxz pop rcll mov scas add (bad) icebp (bad) rorl repz rex.XB ds (bad) jmp adcb (bad) in enterq pop repz (bad) and movabs repnz out movabs mov insl enterq test or pop rex.W adc rcll jae repnz in cld (bad) (bad) sti lea push (bad) int (bad) shll sahf movabs stos movsb jo fwait (bad) incl out and xchg rcrl jle (bad) scas (bad) (bad) ss (bad) jb pop rex.WX cmp lods cltd sbb addr32 in insl push movabs icebp (bad) loopne (bad) mov (bad) rex.WRB cmp shl xchg (bad) scas ss mov shlb mov rex.WRB rex.WRXB cmc andl rorw mov xchg callq int3 or stos rex.X rex.B outsb jbe loop add adcl movabs pop outsl add pop rex.RXB jrcxz,pn (bad) (bad) sbb and (bad) mov push push adc addr32 fisttpll scas mov pushfq test cmp mov loopne jge cwtl pop jg (bad) movabs sub roll mov (bad) mov shll pop retq rex.WR cmp push push cmp cmpsb enterq add test pushfq lods (bad) mov rex and xchg mov add addr32 mov add callq leaveq (bad) mov lods xchg mov xchg scas (bad) mulb and or add stos icebp xchg cmp mov sti mov test cltd mov adc add mov mov jo (bad) adc mov test andl cmpsl sarl rex.WB jle movslq adc jno jp rex.RXB add add rorl or cmpsb jle cwtl shl (bad) xor push fsubl shrl ss jb test add pop scas (bad) push roll callq (bad) iret jae xchg (bad) rex.W fwait and sub movabs pop and rex.WXB cs (bad) cmpsb repnz pop push (bad) rcrl (bad) nop roll pop pushfq in insl icebp jns rorl jae ficompl add ds test (bad) xor (bad) dec push adc pop ror mov scas (bad) cmp (bad) rex.WB xor sarl (bad) cmp or add std rex.WXB nop wrmsr add jge rcr add and (bad) (bad) (bad) (bad) and xor cmp jno rol add jo je rorb add sub std and push add in stos lret leaveq fldenv repz add (bad) cmpsb imul and add sub cmp jrcxz imul xlat and decl xor lods mov and stos mov rex.X rcl sbb (bad) xor (bad) mov stos test or sub fs leaveq add push and retq (bad) out mov xor cmpsb sbb cmp (bad) std rex.WX addb mov cmpsb xchg addl loopne (bad) jbe mov sarl stc sbb xor ficom sub sub rex.RXB cmpsb and (bad) sub sbb cmp ffree mov adc sub sub (bad) repz insb add (bad) rex.X cmc adc movslq cmp (bad) (bad) stos rex.R fwait hlt cmpsl or xadd push test ss (bad) out (bad) lahf insl rex.WRXB sub roll mov lret (bad) cmp mov rex.WXB fldl2t (bad) out (bad) cs and adc int stos (bad) or (bad) in jp movabs repnz and callq (bad) (bad) fnstsw (bad) cmc loope and xchg out shlq mov rcl movsb es adc and fnsave sub iret out outsl ja ror xorl movabs sti out jae adc insl and out popfq xor pop cld rorl jb rex.WXB retq push (bad) nop (bad) inc lahf stc jg sbb bnd rex or xchg out mov mov xor decl out sarl rex.X (bad) int3 test push lret test sahf rex.WRX rex.W shll pop adc je xchg std lahf hlt loop ficoml movslq je sti rcrl sub or (bad) (bad) fldz ficompl sti out rcll mov (bad) icebp fsubr rol stc pushq add sub movabs mov add and (bad) sbbl xchg (bad) mov pop movabs ficom rex.B (bad) movsb mov cld sub sti (bad) repnz fcoms jmpq rclq mov iret scas (bad) jb rex.R loope scas cmp (bad) rcll jne fwait sbb jmpq (bad) jno out jge roll (bad) icebp iret lret loope mov testb mov movabs rex.X out int3 (bad) lods push (bad) pop rcll sbb fbstp cli je (bad) mov or data16 mov xor repz (bad) adc (bad) mov or pop xchg mov jmp cmp fcmove jb cmpsl (bad) jns push push (bad) xchg pop jl cmp rex.RB jo int std fsts jb movsl (bad) jae rex.WB (bad) xchg or movabs push (bad) mov (bad) js mov (bad) imul mov pop mov fldcw sbb js leaveq xchg jl movsl mov jno (bad) stos (bad) cli pop (bad) adc push mov rex.WRX xchg (bad) add outsl enterq adc fistpll mov jrcxz rex.WXB lods idivb ficoml pop pop test or cmp and xchg adc loope (bad) sbb rex.RB cmpsl (bad) xor loopne mov shll retq subl mov loope andl add fadds out jp adc stc scas mov popfq adc loop insl pushq adcl sub roll rex.X sub pop js repnz lret popfq rcrl (bad) (bad) xor rcrl fildll sub pushq clc sub lret movslq rex.WXB and mov imul jns movabs cmp out xchg ja fldt sbb (bad) xor mov rex.WX stos (bad) sub retq out movsb fs jo and and mov imull push mov (bad) cli vmwrite push adc cmp loopne out retq sbb rex.X vmovapd (bad) (bad) adc (bad) adc mov mov sbb enterq xor jno or in jp or push jmpq add pushq xor movsl mov int3 pushq xabort rex.WX stc (bad) mov (bad) imul shrl mov divl push (bad) roll jle cmpsl cli jbe rcrl rex.R cmpsb shrl mov lret movabs mov rorl cmc fstpt sbb xor rex.X stos scas mov cmp cli lods rcll or jb ds iret add sbb shrl hlt lea rex.RX push popq mov (bad) imul sub cmp xor loope rex.WRX rex.WXB xchg pop rex adc and rex.RB and movabs fcomps cwtl loope jns pop and xor movslq rex.RX rex.X loop (bad) movabs or and pop push shrl (bad) jp rex.WB shll add rol outsb loopne movabs jo add xchg rex.WRB lods imul rol adc es popfq rex.B xchg in ja xor mov xchg mov repnz iret rcrl push (bad) int test mov rex.X (bad) mov mov (bad) addr32 orb cmpsb int insl (bad) sti fimull cmpsl cwtl (bad) sbb (bad) xor leaveq rex.RX (bad) mov jo fucomip shll rex.W add push xchg adc adc cmp push mov cs in jnp out data16 add (bad) rex.RXB sbb bnd pop nop rex.WX repz and (bad) xchg in mov sbb add xchg enterq loop pop rex.R movsl cmc and je xor cmp sbb xor movabs rex.WB adc movabs rex.X fstpl rorl jo fcompl insb sti lea lret rex.WRXB xchg shll rcrl sub in and cmp stos loop adc cmpl rex.WXB andl mov (bad) xor rex.XB shll cli imul pop (bad) push (bad) loope jb rorl (bad) and xor mov (bad) (bad) sbb cld sub jns shll mov stos pop lahf lret xor mov rclb (bad) icebp int in shll sarb (bad) sub (bad) sbb sbb and pop in rex.RX jnp sub and jno sub and add or stos rorb rex.B xchg roll es xor (bad) xchg hlt and adc and (bad) lods mov xorb mov (bad) rex sbb movabs out rex.R cmp outsb sbb rorl (bad) mov mov scas imul sub push jle fsubl sbb lea mov lahf movslq adc (bad) lahf scas popfq rorl jle jg lahf scas movabs pop cmp out repnz (bad) lret ja lret add push test cwtl test out leaveq hlt pop and sbb (bad) stos xor sarb pushfq cmp cli (bad) sahf icebp rex.RB sbb xor pop push data16 mov (bad) mov out rex.WX repz cmp (bad) stc pop rex.B (bad) addr32 xchg jb iret jae lret sub pop roll in (bad) rex.WRXB rex.B or repnz mov rex.WRXB addr32 (bad) or cmpsb ss out movabs or and rcll cmpb out and mov lret stc pop rex.RXB ja (bad) pop (bad) adc (bad) jge (bad) insb push movabs jg shrl xchg sub loope (bad) mov cmp jl adc jrcxz (bad) nop sub (bad) rex.WXB fnstenv data16 cli mov sarl (bad) sti push mov push jns mov xchg (bad) out mov iret push pop xchg xor leaveq out adc push mov cmp loop movsb rex.X sbb divb ror or icebp (bad) sub xchg jae repnz push mov (bad) enterq adc (bad) (bad) pop nop callq nop pop rol (bad) rorl lods pop imul (bad) sub mov cmp xlat (bad) movslq pop (bad) test stos push mov mov sahf mov jne or mov rcrl cwtl clc push cmp lret (bad) mov (bad) xchg cli xchg and pop rex.WRXB rcl shll adc add ljmp rex rex.WRX pop fwait shrl mov xchg movsb je fcmovb mov pop ds jne sub test (bad) repnz retq movsb lock sbb fadd testb mov pop jo (bad) mov roll imul cmc movslq mov rex.B (bad) push fsubs xchg pop faddp movabs jp mov mov (bad) callq loopne andl cmp sarb rol (bad) jmpq in mov shll sub loop cli imul rex.WR xchg movsb int3 jge jno in rcll pop iret mov outsb sbb sub add or rol js add or loopne (bad) lret out sbb add mov (bad) test xchg roll hlt jno mov push callq addr32 cli pop clc (bad) or mov rex.RB lret vmovss sub mov mov and jns test movsb mov lcall retq cltd rex.X icebp outsl cmp enterq std fsin repz fbld in cli (bad) sbb mov push in and and xchg rex.RXB rorl fldl xor movabs pushq sahf pop adc sub cmp (bad) sbb movabs lahf loope (bad) (bad) xor sbb test push add adc retq jae repz lcall (bad) add ss je in (bad) pushq cmp roll (bad) in repz cld rex.WR test fidiv mov cmp fs outsl movslq popfq ja cld in rex.WRX iret clc xor (bad) xchg rex.RB xchg adc cs outsb push popfq insl (bad) rex.B jmpq jno rex.WXB outsl xchg rolb (bad) jb (bad) lahf mov mov rex.WX add fildll in loopne adc pop loope (bad) push pushq (bad) faddl rex.WB jp fnsave cmp mov mov and sbb femms cmpsb lock xlat xor cmp lods push mov int3 sub cmpsl pop rorl (bad) repnz (bad) (bad) rex.R sub mov jmpq rcr addl and (bad) fldcw (bad) xor movabs movsb push loopne mov fstpl mov sarl (bad) out fs rex.WR (bad) jns cmc and repnz jnp mov lret lret jae loopne add rex.WXB (bad) and (bad) and js pop cltd repnz rex.RXB (bad) mov fisubl outsl push movslq cmp loop (bad) stc clc rex.WR mov jnp (bad) movsb std (bad) mov rclb mov rex.WRX cld rcl pop repz enterq leaveq roll cmp (bad) cmc and out icebp sarl pushfq imul xor leaveq (bad) movabs and (bad) (bad) and xor fcom (bad) rex.W (bad) fidivrl jae and sbb mov and xor (bad) subl jp rex.RXB shll fwait icebp (bad) mov movsb outsb ja or cmp mov scas (bad) (bad) std add xor adc sub cltd (bad) rcl (bad) or jrcxz mov xor mov lret (bad) (bad) repz adc sub movabs xor (bad) (bad) rex.WX mov loopne xchg (bad) mov xor add test lea mov fcoms std cmpsl sub mov adc rex.RX sbb sub cmp (bad) repnz iretw (bad) jp shl cmp (bad) jp js xchg fnsave add rex.WB fnop mov stos fsts adc pop vunpcklps std rex.B xchg cltd movslq add xchg (bad) rex.WB xlat mov sub stos lea loope or andb jo repz sbb sbb test (bad) icebp cli jbe sahf mov sub (bad) in (bad) cmpsb (bad) rex.RX rcrl movabs stos retq iret rex.WRX lock jnp in mov add jmpq adc push iret rex orl gs mov data16 popfq testb adc sub (bad) mulb cld pop outsb cmc vpcmpgtw push subl cli jno fcom mov popfq add and xchg push rcr pop jmpq roll (bad) rcrl mov adc (bad) rex.WB rex.X lea cmp sub (bad) lret sbb cli jnp popfq (bad) incb fcoms sahf shll shlb je fwait push add push movabs fdivrl pop jo stc cli rex.WB test jbe (bad) push add sbb out xchg in mov rorl push rorb adc (bad) idivl (bad) rex.R pushfw gs add rex.B sub pop loop outsl mov sub rcll mov shll callq notl (bad) cmpsl movslq jnp sub jmp test loop mov (bad) ja xchg xor push inc rex.R gs and xchg imul (bad) xchg add sti xor shr jnp (bad) iret mov xor imul not cmp adc lea cmc fnstenv out and icebp lods push out outsb rcll hlt or callq jg xchg (bad) callq fmull add or movsb and (bad) jle iret iret cmp and cwtl cld outsl rex.RB rolb cmp scas cmpsl roll and movabs popfq shll std mov xlat mov fdivl cmpsb add (bad) (bad) out sub and cld xor cmp rcr shll rex.WRX fucomi (bad) mov mov cmp (bad) jb out xchg popfq cli loope fistl addr32 sarl in imul sub pop sti jmpq cmp mov scas (bad) out jno movsb retq and cmpsl (bad) fst data16 adc jp rex.WB callq addr32 mov jmpq sbb fldl xchg mov stc and shll and rorl mov (bad) xchg xchg movl (bad) mov push es lock xor rex.X fwait pop rex imul or out pop insl sarl pop jrcxz data16 or sbb rex.WXB (bad) jno sti cltd jg cmc ss lods mov pushq mov jl pop jae (bad) (bad) rex.WR cld in addr32 adc rex.B or mov mov cmpsl fld (bad) lock pop ja (bad) iret sbb fs (bad) testb (bad) sub clc (bad) sbb in stos lret pop (bad) jrcxz mov (bad) and (bad) cmpsl lock pop loope jns (bad) sarl rcrl in xchg lret (bad) mov xchg and rcrl int rex.W sbbl xchg (bad) xor ror jl mov xchg mov (bad) (bad) insl sbb lret test mov (bad) jle sahf fimull sbb (bad) (bad) adc repz cwtl sub (bad) movabs fld imulb je pop xchg fcompl es adc (bad) (bad) (bad) (bad) je sbb or push add sub mov imul (bad) test in iret and cmp add adc retq adc (bad) mov out sbb (bad) or jl out push (bad) icebp (bad) ja subl (bad) mov lods (bad) cmp pushq jg (bad) sahf (bad) movabs (bad) lret ss and and loope rex es roll (bad) ffree lock mov add (bad) mov rex.WX pop mov fnsave (bad) (bad) hlt clc pop mov test mov rex.WRXB addl xor cmc pop rcrl popfq or lods sub sti adc mov xchg stos xor cmp mov cmp cmpsb rcll mov pop movslq loop pushq (bad) cmc add mov repz in xor cmp adc mov rcr movsl add jbe xchg add mov pop or (bad) sarl out mov sarl jp movabs in loope rex.WRXB int dec cmpsl rex.WR out and outsl out jno (bad) xor ds stos mov sbb xor movabs mov add cmp callq add lret add push retq mov mov loopne push jo rcll movslq (bad) frstor (bad) insb (bad) pop sub (bad) jbe sbb mov jb or jrcxz int scas (bad) divb (bad) movabs sbb or or (bad) lret sub and out xor mov (bad) (bad) shrl push mov (bad) adc adc rex.WX and push movq (bad) ficomp lahf xchg sbb xor sbb (bad) rorb rcrl jp test (bad) jmpq rex.WB rex.WR mov jne hlt cwtl sahf mov std (bad) mov mov outsl (bad) (bad) loope outsb or rex.WB roll imul sarw mov retq movslq xor rex.WR shll mov int or xor xor fdivl pop js sbb loope fadd rex.WRX (bad) (bad) int push rex.RB cwtl ja shrl (bad) xchg and test hlt pushq shll jrcxz xchg lea xor clc (bad) clc jb,pt clc (bad) jno (bad) nop ja xchg jnp lret test sti add sbb movslq cs (bad) pop je xchg outsb rdtscp subl fcmovnb (bad) jnp pop cmp cld rex.W (bad) lret xchg movabs fs fcomp lods (bad) (bad) pop jg lea out sbb jl (bad) and (bad) icebp repnz mov fbld rex.R (bad) push leaveq (bad) (bad) fisubr pushq int3 add ficompl mov rex.W (bad) clc decl hlt cltd in (bad) jae loope add (bad) and adc xchg xor mov pop mov test (bad) mull out outsb (bad) pop pop in fiaddl jo movslq pushq xchg iret loop test (bad) movsl rex.WX fsubl rcrl sub and rex.WRXB out iret lock sbb out xor or add clc test js cmc xorl sub rclb test mov xchg (bad) lret lret or je in mov bnd sub mov jle mov xchg mov jo iret clc jg (bad) (bad) sub pop mov sub (bad) xor (bad) jnp fimul faddp js addr32 mov sub pop clc jo (bad) push pop (bad) xchg xchg rcrb mov shrl in xchg leaveq roll rex.RXB shl shlb (bad) outsb rcll pushq (bad) fbld rex.X rcrb sbb (bad) and sub js (bad) rorl jrcxz (bad) sub (bad) and xchg out fwait sahf jno in roll imul sub mov add and cmp (bad) and rex.XB mov test mov sub (bad) mov cld es mov popfq xor sahf rcl imul mov int lret cmp cmp lahf icebp pop rex (bad) cmp (bad) out (bad) cli and mov pop push mov pushfq cmp rex.XB rolb gs (bad) rcrl imul (bad) lods stos rex.WR int3 popfq adc sub xor retq fnsave fistpll adc (bad) rex.WB test retq rcl add out or sub int add (bad) retq nop sbb (bad) and addr32 shll xlat or sbb in (bad) (bad) mov adc sti rex.RX divl cmp or test mov or cmp sub jp (bad) rex.RXB mov faddl rex.B movslq testb fisttpll adc jbe cwtl push int3 retq rex.RB fsub rex.B mov ss (bad) (bad) rex.WRB vpsraw rex.RB rex.WRX retq rex.WR jne (bad) adc xchg imul sub mov mov pop (bad) cltd rclb mov sub negl (bad) rex.RB lock leaveq xor lods scas flds or and push xchg pushq add (bad) xorb retq add and add and or jne xchg pushfq retq sbb jmpq mov es rex.X push sahf je mov rex.WRB (bad) stos repnz mov mov add xchg sub xor gs outsl adc retq fdivr (bad) sub jns jl (bad) and push (bad) frstor or xor rex.R outsl popfq fldcw (bad) mov rcll fsubr in xor mov cmp add sbb sarb mov cmp sarl adc ror pop jge sub mov rcll rex.R imulb (bad) (bad) mov xor or lahf movsl rex.WR fist rcll rex.WRXB shrl movl sarl lods rcrb (bad) mov mov (bad) loop pop (bad) sub fadd adc or in sub fwait (bad) icebp mov sahf rex.RXB outsb cld cltd sub pop pop (bad) rcll int3 (bad) pop rol std (bad) icebp rol adc stos fistp shrl pop xor in push repz lret out movabs cltd adc out (bad) xchg (bad) or in ds adcl push xor rex.WRB roll scas or repnz rex.B lret sbb (bad) mov mov cmpsl rex.X rex.R (bad) lret push rex.WR movabs icebp jne xchg int3 in (bad) xchg jmpq sub cmpsl mov rex.X data16 shl mov gs xor xlat data16 (bad) std stos jl test stos imul rex.WRB rex.WB pop pushq push roll fdivs (bad) jbe jo jrcxz mov icebp and out xor (bad) and add mov lods ffree shll clc jle push xchg add (bad) out jb rcrl ja jbe push rex.WX out movabs repnz push cmc xorl adc (bad) clc (bad) xor (bad) rcrl es shrb rcr test rex.RXB shr add sbb sub punpckldq fs xor jrcxz sbb lret adc adc and sbb fisubl xchg add mov rex.RXB lea icebp (bad) shll cmp cmpw clc imul addl sub mov repz cmp (bad) loopne nop mov stc mov (bad) lretq fildll push mov or lods (bad) lret fdivs xor and movabs mov rex.RXB lock cli (bad) (bad) imul imul sub rex.XB rex.WRB lret sbb lret jae rex.WR sbb movabs out repnz mov repnz in mov jne sarl (bad) pop or and adc xchg in mov out (bad) xchg divb cld shrl rorl (bad) roll push cmpsl rcr in xorl sarl rex.WB int lret sub in pushq lret js rex (bad) jge rcrl jno fadds shrl ja shl and mov imul mov sub pop and jp test mov (bad) pop addb fcmove xor scas in cmp (bad) (bad) (bad) shrl repz pop int pushfq icebp and fcmovnb enterq mov loopne rcrl shld (bad) movabs repz add ds loope rcrl movabs movsl mov or rex.WRXB or mov enterq out mov sar movabs push rex.X or rex.W rex.RX rex.WRX (bad) sub loopne test lahf add sbb push and sbb sarl adc mov pushfq insl xchg cmp nop sbb adc pop xor sbb roll rorl cmpsb xchg (bad) fs pop sub retq mov scas fisubrl jg xlat mov xor cld movb scas xor sbb notl pop loope add (bad) add movabs fdivs mov callq leaveq (bad) pop xor loope sub sbbl xor xcrypt-cfb cmpsl movsb mov pop lret scas pop stc (bad) pop rex.WX (bad) sar sbb imull xchg rcr (bad) es loop mov fdivs jmpq cmp cmp fstps rex.R xor lea jne mov rex.B cmp sub sbb cmp movabs rex.B add sahf and mov cltd rex.RB imul test xchg repnz fimul (bad) jmp push (bad) mov and (bad) mov mov (bad) psrlq mov iret lahf sbb rex.B rex.RXB rex.B push rcl outsl push mov mov shll loop imul mov lea (bad) cmpsb mov xchg iret out (bad) fpatan (bad) callq add test push xchg sarl adc mov sub push add jnp xor (bad) negl cli outsl loope (bad) icebp jrcxz xchg add loopne jne (bad) lret movabs (bad) (bad) adc (bad) jmp fisubrl jnp shl push jmpq or fidivrl (bad) pop sub sbb lahf je (bad) pop push add xchg idiv and jno jns fdivrs popq add mov rex.WXB cmpsl (bad) mov sub rex.WXB stc imul rex.WB fwait pop (bad) xlat stos (bad) add in mov out jnp jl mov cmpsl (bad) pop rex.RX rex.WR mov mov (bad) (bad) rex.WR callq (bad) (bad) sarl mov incb jmpq xor (bad) jge (bad) rex.R fwait cli fstps in rcr test adc lret or movabs xor lret jrcxz cmpsl mov push (bad) (bad) test xor iret adc xor retq (bad) mov sarl sub loop scas (bad) add leaveq fstp mov rex.WXB int3 shll sbb jo nop lods addl pop xchg out (bad) clc (bad) cli push sbb cmc sbb movabs (bad) mov mov xor shrl xchg scas (bad) (bad) out cmp roll loop rcrl (bad) je push ror pop ror fcoms (bad) mov pushfq mov rex.X rcl leaveq lock mov rcl ja subl xchg scas rex.WXB rex.WX (bad) sahf stc out stos xor sbb jne movabs sbb lret mov int3 xor test adc rorl movabs (bad) jne xorl sub cli pop sub lock xchg addr32 movabs movabs jg jne movabs (bad) clc cmpl out retq (bad) (bad) adc sbb xchg add clc (bad) insb add mov push (bad) mov fdivrs imul loop (bad) mov lods out rex.WRB sbb cmp test (bad) lock in or fwait js shl or sub sbb lods imull add (bad) stc and cmp int (bad) mov mov (bad) mov pop cmp or and insb xor out rorl lock gs add cmp and cmc (bad) push and roll rex.RB and roll out xchg out test roll rcrl xor sarl int3 pushfq test push (bad) cwtl cmp (bad) adc lock (bad) jne and add jae rcl jo rolb cmp xor scas and loope xchg mov cs jo mov xchg shll add adc xchg sub mov push sbb (bad) and mov rex lret in add rorl pushfq xor rex.WRX (bad) jne repnz retq cld xabort (bad) cli andl (bad) rol adc (bad) xchg cmp gs adc adc cmp lret jmp clc incb mov sbb add cmp (bad) rcr adc sarl (bad) ja (bad) jrcxz add sarl xor jg xor and mov fisubr add fcoms cmp rex.RXB (bad) mov decb (bad) outsl movabs retq push xor subl lret in (bad) sahf cwtl enterq (bad) (bad) mov xor adc shl in loope mov sarl xchg test jbe add cmpsb ja addr32 or shll (bad) or andl mov sub pcmpeqw cli (bad) (bad) or out (bad) xor xchg (bad) pop scas leaveq ror (bad) xchg insl rex.WXB and js (bad) (bad) mov adc fstl cmp xchg (bad) movsb frstor (bad) and rex.WB loope icebp callq scas and jp and jl xor jne add (bad) (bad) fwait scas xchg rorl (bad) (bad) xor cmp mov out add xchg rex.RXB stos (bad) jmp cmp shrl xchg or fs repz mov rex.RB mov add fwait test movslq (bad) notl int lods sbb (bad) mov (bad) test and stos mov or (bad) sbb (bad) int imul jp sbb mov push jmpq or (bad) and add mov in (bad) jo stos rex.W loope xlat sar js mov pushq push callq xlat pop sub (bad) mov mov sub fidivrl (bad) or int pop and push or pop and movabs out imul rex.W int3 cli or xchg retq jns rcr rex in and sbb sub rex.WX adcl ss scas add xchg mov lahf in and mov rex.RB xor and jmpq mov faddp (bad) idivl mov rcl xor mov pushq insb xchg lcall rex.RB cmp stos shr sbb outsl mov movsl rcrl int3 rol push xor outsl add rorl lret pop jmpq in mov repnz (bad) sbb cmpl cmpsb cmp popfq (bad) je xlat or jmp rex.WXB mov pop (bad) test sub rex.B movabs int3 sbbb or xchg rcrl rex.WB cmpsb mov rcrl (bad) xlat push xor (bad) loopne stos fwait mov rex.WXB sbb mov xchg xchg int3 iret movabs test stos js loope fwait (bad) (bad) callq mov paddusw jbe in xor lea callq add xor clc xchg mov test insl int jb in ss and pushq ud1 out (bad) popfq rcll or hlt jge int (bad) cmp mov pop add cmp icebp (bad) pop pop test int push cld mov jl or sub iret in mov add push icebp (bad) addr32 (bad) sub data16 cmp rex.XB (bad) cmp mov sub callq xchg and shr push fstpt retq in (bad) rex.WXB rex.W fucomp ficomp sbb out retq (bad) or xor push pop sti roll in callq rcrl retq imul pushfq rex.WB xchg fld mov test mov rex.X rex.B shrl lcall add (bad) in mov lret fiadd cmp pop mov add (bad) int jg jle xchg jo xchg std fiaddl cmp hlt (bad) rex.WB mov shrl rex.WRX (bad) pop push shrl mov movabs jae rex.RXB push (bad) mov mov out incb fnstcw (bad) jbe out mov lods (bad) loope (bad) pop pop roll lods movslq shr mov (bad) pushq mov pop mov test xor enterq lock (bad) (bad) callq xchg test rorl mov and jae xchg xchg jns or mov in xchg std movabs es jge (bad) hlt rex jrcxz pop sti mov fistpll pop int rex.WRB jno push incl movabs xchg jle rex.RXB sub je mov movl xchg movsl stos add retq rex.WRXB (bad) repz sahf movabs outsl hlt rex.X cs rorl rex.WRX shll out and pushq sbb rex.WB xchg in retq shlb addl incl incb jno xchg loopne loop sub jae loope rex.WRXB int (bad) shrl repz insb out (bad) iret or add (bad) fisttpl icebp (bad) xor loope movabs scas roll sub je cmp add mov (bad) mov mov repnz pop and or and mov retq cmp retq shrl int (bad) (bad) repnz lret in and pmullw imul roll retq fcmovnu push xor in mov xor mov xchg push (bad) cmp mov sub int3 jg jge push rex.B rex.RB in sarl xchg jp rex.X rex.RXB mov rex stc xor rex.WRX (bad) cmp hlt mov lret (bad) andb mov (bad) pushq (bad) mov pushq and out sbb fdiv mov adc cmp adc add mov xchg xchg rcrl cmpsl (bad) sub fst rex.RX lret adc and mov outsb clc rex.WRXB push iret ja loopne movabs xchg and xchg fist xchg scas enterq (bad) rex.WX add sub movabs mov movsl jge and xchg jrcxz pop sbb xchg mov (bad) xchg (bad) scas (bad) je mov mov or sarl movb cmpsb shrl mov loopne (bad) rex.R rex.WX iret movabs sbb xor add sbb adc fs (bad) data16 jnp xsha1 cmpsb lret or in sar pushq repnz test (bad) adc rex.X js add in (bad) stc adc ja sub xchg sub rcr (bad) rorl ss loope mov sbb rcl mov sub mov xorl ud1 scas rex.XB (bad) mov sti gs jb push rex.X repnz pop (bad) popfq pop rex.WRB out lock and movabs movsb lods sub ss (bad) lods and insl (bad) shl xchg fdivrs imul pushfq scas icebp stc sub xlat jl cltd hlt outsl popfq roll scas cmp mov fcmovb rex.WXB pushfq mov (bad) xchg sarl and (bad) rex xchg fcmovnb (bad) rex.X scas jle mov mov pop (bad) iret (bad) sarb (bad) jne rcr cmc pushq imul jae rex.RXB pop lret lods fisubrl rex.WXB add (bad) loopne (bad) (bad) push rcll xchg jns rex.RX fs (bad) pop mov nop jge rcl addr32 out (bad) or data16 adc in or in or adc rex.RB outsl xor roll mov rex.RX nop movsb (bad) (bad) jrcxz and stos or pushfq repnz sbb lock (bad) in imulb fildll sub rex.RB sub movsb rex.B rex.RB mov movabs popfq std jg lock loop sub xor nop xchg adc (bad) pushq and out xor loope rex.RXB rex.WB lods cmpsl mov repz cmp shrl xor xor (bad) enterq shll and (bad) out push add cs loope adc xadd mov je rolq cltd add fwait out rex.B nop cs jrcxz mov mov add rex.WR (bad) std lock rex.WX (bad) fisttpl (bad) (bad) jbe ds xchg rex.WRB enterq outsb mov ror sub add in sub lock iret addr32 mov push sub rex.WX mov movabs (bad) (bad) cmc leaveq adc movsl add xor test (bad) (bad) adc add outsl mov (bad) mov mov movsb xchg mov jbe mov (bad) (bad) fnsave (bad) jmpq je and mov or cs mov rex.X movabs clc movabs (bad) sbb ja (bad) out (bad) (bad) (bad) (bad) lods sbb rex.RXB shrl pop test stc xchg (bad) (bad) rex.RX scas (bad) rex.RXB (bad) sarl jmpq (bad) xadd fmull adc or mov in sahf stos rex.XB xchg xchg cmp mov test jae fldcw xchg mov sbb add mov outsl jb lock pop std jns (bad) jno cmc retq nop jmpq rex.WRX sti scas rex.W popfq pop fs push xor shrl add pushq jno xor pushq (bad) out (bad) xchg jo and pushfq (bad) jle rex.W (bad) sarl mov lret std shl xchg or movabs mov movslq stc rcrl add fwait mov repnz add or (bad) sbb (bad) cmp shlb roll nop (bad) rex.WB mov and (bad) xor movabs add xor (bad) sbbl mov shlb mov enterq test pushfq mov (bad) sbb pop and sahf mov rex.WRB cltd lods ja rorl cmp rex.RX stos (bad) or int (bad) fistpll mov ja leaveq movslq (bad) fistl cwtl (bad) repz enterq shll rex.WB mov sahf jge xchg (bad) xor add rex.XB cli rex.R fild roll out callq imull xchg (bad) scas adc movabs rorb sub insb sub ds fidiv mov movabs (bad) push push xor mov jrcxz rex.X adc or mov add rcl add pop mov push int rcr lods (bad) xchg movsb rorl sahf and (bad) pop lea shrl jno mov scas rolq (bad) jo sub out lahf movabs add sub (bad) sarl xchg and add (bad) sub rex.WRX leaveq mov decb cmpl fcomi cmp rex.XB (bad) (bad) ss or negl dec (bad) loope jl nop mov mov and lret mov push (bad) (bad) movabs fstpt mov rex.R repz orl push (bad) pop (bad) jno adc in xor and xor rex.WRXB addr32 jmp rorl test cmp insl shl sbbl lahf leaveq stc push ss (bad) mov or add push xchg add cmp mov stc pop jo (bad) (bad) sub xor scas test xchg test mov shll jnp imul shrl cwtl and in mov sbb pop or mov test add xor outsb jno pop fstl xor jg sbb testb fisttp push loope fsubp cmpsb or rex.W adc (bad) ja (bad) (bad) (bad) pop jrcxz (bad) cmp repnz rex.RX mov mov enterq outsb rex.WXB rex.RXB rex.WB add push rorb (bad) test cmp cld movabs movabs push test xor (bad) outsb mov xchg loopne pushq add clc xchg (bad) rol test cmp rex.WRXB fwait xchg mov add cs add roll mov mov xchg test xor xchg (bad) repz mov jmpq lahf rcll rex.RB callq (bad) movslq xchg cld sub adc sti mov outsl cmp rex.RX jmp fisttpll imul (bad) je shr cmp xor pop mov clc add sbb (bad) int add movsl cmp imul sti mov or (bad) (bad) or or rex.WX rex.WR xchg adc imul movabs jge (bad) add sub movabs mov stos repz fsubr rclb icebp rcrl cwtl adc jg rex.WB hlt mov rcr sbb mov (bad) icebp pushfq lock jnp jle cwtl sar out mov ror data16 mov sub xchg imulb mov mov xchg fs rorl vmovupd pushq xor (bad) cmpsl sub enterq sbb fistpl mov jae sub jl mov stos (bad) nop ffree fs mov (bad) int shll callq iret rcl sbb xchg or sbbl rex.RX cmpsl popfq outsl retq rex.B cmp xchg shll or bswap (bad) jo pop sarl rex.B xchg cmpsb mov stos rex.WRB xor iret sbb xchg insl push scas (bad) notb or pop clc insb jl movabs pop lods adc loop jmp (bad) jo (bad) pop insb iret shl jne mov (bad) jmp out leaveq mov pop push pop xchg (bad) roll imul movabs mov mov push sub fcoms pushq (bad) ja (bad) add sub ss cs push stc pop loopne test fisttpl movabs (bad) and lods rex.W xchg lret shll repnz cmp jae mov rex.WRXB callq mov and shrl rcl nop xchg lret test xor imul xor rex.B stos scas push or lods (bad) jne pop (bad) fldl jae cld xchg jb (bad) lahf add (bad) movsl or rep adc stc mov test fs (bad) fcompl (bad) add and pop sub or callq pop loopne sbb jns enterq (bad) out jle mov mov add (bad) loopne (bad) add fnstenv or rex.WR je lret lret (bad) movslq rex.WRX rex.XB ficom pop rex.WX cmp xchg movabs adc cmpsl lock pop sbb mull sbb adc fdivl jmpq loope pop (bad) icebp pushfq lret rex.WRX rex.WR pop cs push movabs fidivrl xorb mulb cmp fidivrl xlat jb test outsl xor sub xchg rex.RXB rex.WX adc or fwait repnz xlat push callq lret add push push pushfq js adc (bad) sub xor repz (bad) test rex.RX pop mull mov jmp fiadd sub xor rex.RX test jle shrb jne rex.WRX (bad) lret enterq xor jg xchg sbb xor je fs jle movsb and rex.WRB mov es add rex.WRXB rex.WXB mov or adc stc or (bad) (bad) jge or movabs div lret loopne rex.W (bad) shrl rex.R loope sarb (bad) sbb fsubrs adc movslq test int rex.WX repnz fimul out jrcxz jg and jle mov push jnp lods (bad) es fldl rex.WRX adc (bad) or xchg loopne (bad) cli movabs icebp pop cmp (bad) jge cltd movabs and movslq and or (bad) rex.WXB mov js pushq (bad) repnz fiadd (bad) in (bad) in imul fildll pop mov push pop (bad) cmpb int3 lods jno jae xchg (bad) leaveq stc callq rolb rex.WXB (bad) std (bad) (bad) enterq xchg xor (bad) sbb sarb push sbb mov sub test jg xor xchg pushfq (bad) mov rex xchg lods jno fsubp in enterq shll movabs mov or ficom and int3 fidivrl xlat cmp jmpq stos cmpsl je xor cli or repnz scas jmpq mov pop and fucomip (bad) out mov (bad) xor rex.B sbb rex.RX jno (bad) and repz pop in fucomp rex.RB rex.W mov mov fidivl lret clc lahf enterq gs pop mov fisub adc xlat cmp int pop je stos (bad) xchg (bad) iret (bad) outsl std out cmp pop rex.WRX cmpsq (bad) nop rex.B mov mov loope stc movabs test xchg cmpsl lea addr32 or sub mov fmull mov (bad) jno xlat lock rex rex.WB rex.WB jns movabs adc jrcxz loope rex.B repz fldcw xchg pop lock int3 or (bad) cmpsb (bad) mov mov fildll (bad) jp jns mov or and sub mov push mov adc rex.RX mov fisubl fucomi and (bad) xor fildll sahf fisttpll adc faddl jmpq mov loopne repnz (bad) mov add int add jo insb sub and callq rex.W imul icebp fwait (bad) hlt int (bad) (bad) rex.XB ljmp cmp insl mov mov out int3 sti movsl fnstcw (bad) cmpsb out loope rex.WRXB (bad) cmp and icebp (bad) (bad) rex.WXB callq leaveq xchg in rolb adc repnz mov iret out shrb fldz jrcxz cmp adc icebp sbb gs add ds lock int3 fnstenv mov in xor mov (bad) xchg xor imul mov add xor add stos rex.WRXB and leaveq jne shr sub jp (bad) retq leaveq fisttpl xlat sub rex.WXB (bad) test rex.WX (bad) fnstenv sar mov hlt (bad) outsb jns movabs mov rex.RX in or sub out fwait cmp jo (bad) (bad) insl sbb add addr32 sub fprem1 movsb and sub push fisubrl (bad) pandn outsb rol mov (bad) pushq mov loope push add cltd loopne cs (bad) sub rex.WXB sub lahf and sub scas roll xchg int ror jge loop and (bad) fidivr (bad) ror or adc add and loopne fadd in xchg lock mov out jp ror mov mov in mov mov roll sbb add xchg mov mov (bad) (bad) (bad) sub movabs rex.X adc (bad) jne mov rex.WRXB (bad) rcl add (bad) hlt sbb nop andl mov fdivrs mov sub (bad) int3 adc sbb rex.W retq fsts repnz retq out mov or add mov xlat mov pop test rex.X rex.R lahf ja and test jmp (bad) xchg mov test retq jne stos sbbl pop sbb test xor out cmp mov cmc lea iret in js test (bad) out rex.WXB callq pushfq (bad) shr push scas loope rex.B int insl adc rex.XB in pop xchg (bad) fadds sahf ficomp mov rex.W outsl rex.WB mov roll insl fadds and jge mov cmp movb cli rex.WXB xchg cmp leaveq add lret add cld xchg xor fdivrs (bad) adc ffree sub mov imul (bad) add fcmove insl rex.W lock (bad) jns (bad) mov outsb push cltd (bad) add jns icebp add sbb incl push rorl (bad) leaveq loopne sarb jmpq xchg (bad) jbe (bad) test movabs (bad) mov stc fldenv fstpl add out or lret push xor stos fxam adc or int mov and xor add sar (bad) callq cmp rex.WB vmovaps pop adc leaveq loopne lret int3 rex.WXB jp or add or rex.RXB fstps movsb adc sub rcrl in cmp sbbl out (bad) (bad) xor vpavgw (bad) int3 fldt mov adc adc or push adc jno rex.RB mov sbb pop (bad) xchg xchg (bad) rex.WXB mov sbb cli add fsub out pop mov pushfq jp lods cmc rex.XB (bad) (bad) xlat xor xchg addb xchg sub insb or push out jbe xchg enterq mov or sub js retq rex.WX fnstenv rex.WX rex.RXB xor mov retq outsb adc rex.RX sub rex.WXB or je or mov xchg test scas (bad) mov rex.WR pop outsl xor fimull repz imul and sub or rex jbe jno add imul movabs fnstenv sbb retq clc xchg mov mov xchg shll jo (bad) fnop and shll (bad) clc pop roll mov loopne (bad) lods popfq (bad) xor pop mov pop out pop shr movabs sahf sti cmp mov fdivs (bad) sub rex.WXB push jno retq mov mov mov std shr sub lea push sbb iret (bad) callq icebp mov lret xchg out pop push sarl and movabs pushq (bad) rcl mov mov cmpsl cmp jns (bad) or rol repz outsb scas mov repnz and cmc (bad) (bad) (bad) (bad) sbb movabs int cli mov lret (bad) add add addr32 adc (bad) lock je xor clc int3 mov retq mov xor rex.X int add push fisubrl imul scas jrcxz test sarl xor rcrl or mov xor cmpsl mov movabs lret sti cs int3 push popfq roll jnp mov int (bad) cmp (bad) movabs pop lcall hlt js,pn and in loop add (bad) sub pop lods (bad) je mov sub or sbb scas rex.B std xchg enterq int3 ss jmpq roll retq (bad) fdivrs repnz clc rcrb pushq or add std fwait jmpq int pop stos std fsts add jp movb adc imul jge rcrl (bad) insb jb push (bad) ss sahf and fst data16 movabs shrl loop mov (bad) sub pushq and mov callq insl cmp pop cli int3 sbb iret or lret addr32 jo hlt mov mov mov movabs push jne and (bad) rcrb movabs xor iret cli jmpq vandnps je rol addl rcrl scas (bad) mov rex pop outsb sbb and icebp and push jno fsubrs negb and xlat jo add xchg retq sbb push rex.R fistpll fdivs movsl test mov fldcw mov jne bnd imul fs lret icebp or adc cmp fwait sbb mov outsl cmp cltd movabs shll lods movsb (bad) jb jrcxz xchg rolb jl mov vminsd (bad) out rex.WRX fild jmp and iret xlat rex.X (bad) movslq outsl iret cmp jmp or lret (bad) mov (bad) sub movsl (bad) jmp insb rex.WR pop fnsave (bad) jbe lahf (bad) adc rex.WB or fwait repz fsubrs mov int popfq clc rex.WRXB outsb inc shlb imul pushq add rex.WX rex.X clc cmp mov and movslq and jmpq xchg test xor sub (bad) mov insl (bad) and add xchg jns sbb xchg js sbb addr32 cwtl (bad) sub pop mov (bad) test rex.R ja movsl mov or xchg sbb add icebp lahf or leaveq push mov (bad) pushq test jne lret int3 ljmp loopne sbb fbstp roll adc out xorl jl sbb fwait add add leaveq xor (bad) loopne sub icebp jne repnz cmp add psrad mov xorl test movabs imul std mov fild cmpsb (bad) (bad) sub out cmp (bad) je (bad) test rcll cmpsb lahf pushq retq push movabs std pop test lret cmpsl movabs xor add mov fld jmp roll and pop (bad) movabs push in (bad) pop mov mov rex.WB movabs (bad) mov test cli or xchg iret stos jb cld jno fidivl lret shll rex.WXB xor mov (bad) retq std movabs lods rex.WX (bad) out xor pop add (bad) xor (bad) mov lret adc pushq test (bad) cld xchg rorl xor (bad) add movabs addr32 jns jg sbb pop cwtl (bad) iret and addb rex.RX or (bad) adc (bad) mov lret mov sbbl popfq jrcxz xchg test (bad) jp and add jo adc sbb callq jrcxz xchg rex.WRX (bad) movslq repnz imul stc outsl movabs or scas rex.XB (bad) pop rcr stc enterq movabs add cmp add push movslq mov jg sbb out add rcll lret jno test add rex.WRB sbbl rcrl movabs sahf insl sub cmpsl shrl (bad) shlb jg rex.RX (bad) sub adc lret push je fmulp adc movabs push lahf sbb pop pop (bad) adc rorl test push add pushq orl push sbb add adc or sarb es test pop std mov xor xlat add mov cmpsl mov xor (bad) rex.WRXB cmp mov je hlt (bad) pushq sub rex.WXB cmp xchg mov xchg or jnp rex.WB or pop stc jmpq enterq jge fldl (bad) rex pop (bad) push ja gs mov sbb cmpsb icebp rex.WRXB rex.WR jns jge mov cmp (bad) ja xchg (bad) rex.WRB (bad) (bad) fldl (bad) scas lahf rorl fildll roll stos rex.RX or movabs pushfq mov (bad) (bad) pushfq fs xor popfq lahf rex.WXB (bad) mov mov lods mov fcomps leaveq (bad) (bad) data16 sub addl andl shll stos movabs adc lret out (bad) in rorl jo mov cmp in lret sbb mov xchg int xor sarl or or rcrl adc (bad) cwtl iret out repz (bad) movabs jae (bad) mov (bad) mov push mov add repnz mov js (bad) jae adc std movabs sub or test ds movabs (bad) or mov (bad) (bad) jrcxz add sub rcr adc rex mov xor divl (bad) or sarb or (bad) or (bad) jmpq fistp cwtl or xor fwait add sarb movabs (bad) add sbb cli mov rex.WR mov jge or movabs sbb mov xchg retq add outsl repnz (bad) (bad) loopne (bad) stos mov xlat xor jne rex.XB lretq sbb cmp rex.WRX es pop xchg (bad) (bad) fneni(8087 out (bad) cmp sbb rex.WR sub and pop pop (bad) pop cld fcmovnu xchg add icebp rex.RXB and jmp add cwtl lods out lret (bad) xor (bad) stc (bad) in cmp mov loope fsts cmc add jmpq (bad) int3 pop (bad) mov mov jrcxz imul fnstsw outsl fs mov movsl or add (bad) movabs in xchg ficom enterq xchg out repnz xor xor sbb add mov rex.RB imul add scas insl fild movabs nop fadd loopne fbld callq xchg (bad) push mov movabs imul cmpsl add add rex.WB movabs cmp (bad) shl cltd add pop clc mov add lock rex.R xor (bad) (bad) adc data16 fbstp add insb out rex.WRX fsubp (bad) pop rorb rex.WRB ss jg rorl mov and fs jne (bad) repz pop mov test flds fbstp enterq (bad) cmp xchg fild fcom int (bad) faddl xchg xlat cltd pop shr rex.W (bad) (bad) (bad) imul stos notl or rex.B add movabs or mov jg sub callq (bad) add fst (bad) repz rorb or jae cmc add ss stos rex.B rex.RX mov pop rex.W and and std callq cs scas movsb cmp cld lock (bad) (bad) fcomi jns (bad) rex.W test rcrl stos movabs neg rex.WRB pop repz sarl (bad) es (bad) mov xor lret xor rcrl mov add sub rex.XB in lret clc mov add cmp xchg shr sub loop out add rex.WRXB test int icebp cwtl xchg sub mov pushfq push xlat insl test vmovddup cs (bad) jns fild xchg jnp shlb jo and pop mov in flds (bad) shll pop movabs ja in andl fwait xor rex.X and and jmp adc (bad) xor xor sahf movabs fcompl rex.WR sbb (bad) add movabs popfq rorl xchg shll loope loop cmp rcll lods mov xor lahf insb std pop sbb int add test adc in pop stc xchg stc cs sub xor roll pop rex (bad) in jg (bad) (bad) popfq mulb repnz test sub nop (bad) cwtl leaveq mov (bad) jno (bad) movabs cwtl sub movslq cmp mov mov adc movabs icebp lock in js or sahf push movsl (bad) shl imul pushfq fnstcw (bad) incl pushfq xor mov jno lahf insl shll xchg rorl movabs in (bad) (bad) (bad) rex.WXB flds (bad) rex.WRX sub stc or fwait roll xchg movb lea add icebp sub in (bad) rcl repz rex.WXB movsl cli test lods jno (bad) mov xchg sti rex.WRXB stos or addr32 rex.WR lock enterq rcrl rex.WR (bad) pushq mov rex.B popfq in jl xchg fbld xchg jbe roll mov rex.WR push and hlt (bad) movsb clc xchg mov or xor push test (bad) (bad) lock xchg movsb gs (bad) (bad) adc (bad) add popfq and stc pop mov movslq shrl stos cmc pushq or add mov test sbb mov sub rex.R (bad) and or fs callq (bad) mov xchg adc jae push movsl rex.WX pop push icebp (bad) rorl sub xor repnz sub (bad) jnp push rex.X pushq add xchg roll rcl imul mov jle int in insb cld test retq sbb mov repnz (bad) fisubr (bad) xchg jp jno repnz push add iret int3 (bad) mov insb stc add pop hlt js xchg addr32 rol rcll out lods and (bad) nop out rex.WRXB jbe int3 shll mov (bad) sbb mov pop in mov movslq cltd jrcxz mov push imul and mov push sub shr iret in rolb rorl (bad) mov test (bad) jne hlt or je nop and rex.WRX (bad) cmp pop cli mov cmp cltd cmp fisubrl fdivrs addb mov (bad) (bad) cmpl pushq mov and fadds test clc or and (bad) xchg loopne (bad) (bad) (bad) retq sbb lahf (bad) xor (bad) xor (bad) shll negl rcl cmp mov sbb rolb and add (bad) (bad) jo pushq (bad) xor out test fwait sti or (bad) push push loope sbbl (bad) sbb push adc push enterq enterq and jae mov ss mov outsb mov xchg cld add movabs rex in pop shrl cmp sbb loope rcrl cli xchg shrl popfq mov mov adcl xchg int3 movslq movabs ss add int (bad) repnz and retq test sub retq add (bad) sub rex.B test push jae xor pop test fiaddl add cmpsl in sbb cmp (bad) jb fldl (bad) jge (bad) rex.W rex.WRX sbb int3 (bad) mov test movabs rcr mov mov (bad) rex.RB hlt test out enterq loope,pn mov mov and jne leaveq outsb xchg rex.WRB mov sahf movabs (bad) rex.WX repz (bad) or lret sub rex.WB decl cltd mov mov imul stc shll add imul cli jae xor (bad) and mov xor xor mov cmp rex.X data16 cmp cmp xchg rorb (bad) xchg add jno mov (bad) push jrcxz jo pop mov js retq stc rex.XB leaveq (bad) pop (bad) xlat rex.XB rex.B retq mov clc add xchg cltd push data16 int std fldl and rcll imul rex.B lock rex.WRXB in retq mov movsb lahf xchg add mov fs and lods lahf rorl movsb (bad) sub mov in in rex.RXB sarl jmp (bad) sub add callq rorl rex.WB testl shrl xchg jnp vandps mov add push rex.WXB ja rcrl roll fisubr (bad) data16 shrl movsb xchg movb (bad) lock addr32 mov pop (bad) lods sarb test (bad) lret jg sub stos fs movsl faddl rex.WRXB or lret xchg jne (bad) rex.R fxch fsubrs in movb iret xor mov xchg cli insl adc add subb cli xchg loop shrl xlat insb rex.WB out jg rex.B gs loop (bad) rcll cld pushq int3 lretw rex.WR (bad) xchg lods cmp lock icebp sbb mov ficomp ss sarl jl xchg mov rex.XB repz je test pop cld mov movabs retq xchg psubusw (bad) mov or repz (bad) test ror jg fwait mov and sub jae test shll shlb sbb stos lods cmc rex.XB adc test outsl (bad) nop and popfq sahf in fldl fdivp (bad) mov mov ror mov (bad) pop xor pop push or mov lock int3 enterq mov mov rex.WX (bad) hlt rex.RXB shll jg push out cli mov nop xchg movabs and int out mov (bad) xchg and sub ficomp adc cmp and jg cmp ja mov mov (bad) push repnz cmp retq fcomi xchg xlat pushq and loope rex.WB sarl jmp fsubl rex.WRB movabs sahf add sarb rcll mov pushq shll decl test retq and rorl push push ror clc sub sarb (bad) jno or (bad) mov (bad) sbb stc mov repnz xor adc add hlt or mov xchg roll xlat rol and insl (bad) pop rex.WXB jne rol std pushq (bad) fisttpll rorl mov clc fwait xchg scas lret stos in sahf cmp out and lods rex.W roll jae,pn jne ds adc jns pushq sub mov sub sub stos fiadd (bad) (bad) adc xchg movabs imul rcrl rex.WRB rex.R lret and (bad) rex.RX xchg clc enterq stc rex.W hlt (bad) sbb and sbb adc (bad) xchg sub cmp sbb addb xor fdivs jnp rex.WRX (bad) sub xor or xor mov fwait lcall movabs or mov roll push cltd pop sbbb and or (bad) push (bad) cmp lea xchg sbb sbb (bad) sub add pop push callq ds xchg cmpsb sbb (bad) jle sub (bad) sbb jrcxz adc js mov (bad) stc (bad) (bad) mov (bad) add cmpl loopne cmc outsl popfq (bad) shll cwtl shrl xor rex.B cmp roll movsl rol rex.WRXB retq lret jb fyl2x xlat movabs sti sbb retq lods movl xor (bad) rex.WR cmpsl sub cmc fmulp pushq push (bad) pushq fisttpl (bad) xchg mov (bad) (bad) mov push push jns push sbb shrl (bad) (bad) in cmpsl (bad) jns stc cli loopne pushfq rclb roll rex.WXB push jno outsl incb shrl (bad) loope (bad) cmp (bad) add cmp jb and ss mov movsl (bad) gs and mov in (bad) cmp add sarb stc xchg movb movsb imul movabs push (bad) pushq cmp xchg xlat (bad) fwait xchg xor fucomp xor lret movabs (bad) mov scas (bad) mov xor fiadd sbbl cli fmul movslq xchg jrcxz xchg hlt push sahf insl adc xchg (bad) push pop cmpsb repz mov sbb test std (bad) fistl rex.WX rex.W pop xor or ror xor jnp rex rcr lret (bad) imul lret add add mov add cmp sbb xchg movsl int3 adc subb rex.WRX out cmp or or setne and (bad) (bad) jb jmpq in sub lahf dec pushq jp (bad) and loop xchg movsb add rex.RX shr or rex.WXB or adc rex.RB mov (bad) ss xchg stos sub rex.X xlat rex.R and icebp mov lock (bad) (bad) test sub xchg sti test adc scas rolb imul push jns,pn sub lock mov adc in fiadd movabs in int (bad) repnz rex.RB sbb pop addl fnsetpm(287 and jae jno jb rex.WX in pop (bad) leaveq outsl mov rex.X (bad) outsb pushq (bad) add stc fidivl movabs addr32 (bad) push xchg imul fs imull and popfq sahf mov loope out sbb fidivrl jno,pt movabs jae popfq (bad) mov test cmp movabs cs std fwait rolb mov jns roll jbe retq jle pop rex push rex.WR rex.WB enterq cmc test mov jrcxz fadd xchg callq fist iret imul movabs out mov or in rorl leaveq cltd xchg orb xchg adc add icebp ror pop mov iret (bad) int or pushfq xchg rorl xchg enterq mov xor sarl push retq (bad) mov (bad) (bad) mov xor pop add jrcxz rex.XB jno ror data16 fs rcrl and iret movabs add adc mov pop (bad) cmc (bad) or rex.W (bad) xor adc retq sub int3 insb rcrl movabs cmp (bad) out mov nop push rex adc or rex.WX (bad) divb (bad) retq int jmp (bad) (bad) and movsb (bad) sub pushfq rorl rex.XB (bad) (bad) lock mov (bad) or insl xor mov cwtl rex.WXB jp jo (bad) push rorl (bad) fpatan xchg and rcrl out mov xchg lret sahf rex.WRB mov test scas rex.WXB movabs rex.RXB add sub xor mov mov xchg add (bad) stc rex.RB push callq push pop shlb mov mov rcrb (bad) movabs jno out lods jge loope rcr test shr je repz adc mov (bad) mov rex.RX fldcw iret in outsb mov ror vpcmpeqb stc xchg pushq lock rcrl cmp rcll iret pushq enterq or rex.WXB movslq xchg fcomps (bad) and (bad) out push movabs cld in jmp lcall (bad) add shr mov enterq fldt or rex.WR and lret mov ja test data16 cwtl rex.WRX rex.B xchg std data16 jnp es (bad) out (bad) rorl mov popfq mov rex.WXB fwait ror xor rex.WR movsl and out lea rex.WRXB retq sbbl fnstsw (bad) movabs movabs out pushq add (bad) cmp ss in mov xchg jo out movabs loope adc (bad) mov mov lret push jbe and callq (bad) (bad) xchg (bad) hlt and pushq jp cwtl rex.B callq (bad) cmp or (bad) jns sbb rcl mov ss in (bad) rcl (bad) jge (bad) int add rcll andb jne push addr32 rex.WXB repnz add movabs push cli jl sub (bad) cwtl movabs xor mov rex.WRXB fidivr jno add (bad) sub xor pushfq xchg fsubl pushq lret mov sbb test push out fdivrl xor in faddp cltd test es rcl (bad) mov xchg jo icebp sbb repnz fcmovbe fistl sbb xlat (bad) movabs popfq (bad) or add test (bad) and jno adc xchg es mov xchg push mov mov enterq fisubr cmp enterq pop add sub rclb data16 sub fadd xorl (bad) callq and sub jo mov xor shll (bad) mov mov add cmp (bad) (bad) xchg movabs pop andl push (bad) cmp movabs (bad) enterq (bad) mov mov cwtl (bad) jns movabs (bad) and jg sbb jb lods pop cli pop pushfq shrl movabs (bad) jmpq loop jns addl sbb loop (bad) fsubr mov outsb test lret mov cmp lods mov (bad) rol in (bad) test cltd rol or jne or lret xlat (bad) jl rex.WRX std jnp repz fcoml sbb xchg lret in movhps ds scas xchg pop pop (bad) movabs jl pushq adc add test or cwtl andl mov test sarl outsb sbb (bad) jbe xchg movslq ror mov mov jb rol (bad) test (bad) mov sarl (bad) cmp mov (bad) sbb push cmp (bad) int3 retq mov pushq cltd mov cltd push rcll mov std rex.WRX rex.WRXB rex.X add sbb adc push push sarl scas movsl (bad) sbb sbb xor sub popfq push cmp (bad) add out (bad) mov pushq push sub cmpsb sub (bad) rex.WX jo cs pop cmp movabs movabs sbb shrl (bad) movabs imul add xchg out push fs push fidivr or icebp or mov and add xchg fild (bad) xchg cli xchg xchg xrelease sbb mov (bad) mov (bad) sbb rex in xchg iret (bad) cmovno mov fdivrl shll jl adc push mov sub lods xchg cwtl lret cmpsq nop enterq enterq sti cltd rex mov fucom adc (bad) movabs out jge (bad) out rex.XB sar in rex.WX lock movabs sub mov insl roll rex.RX addr32 (bad) (bad) cmp callq test adc test adc imull test jns or add mov int xchg fbstp jp (bad) sbb stos (bad) std mov outsl and or sar mov retq mov jrcxz xlat (bad) fimul (bad) leaveq loopne rclb (bad) cmpl rex.WB and sub retq iret popfq (bad) idiv sub stos sub add xchg lods mov xchg std jle xchg add (bad) push test out or add and repnz lock out andb (bad) mov and loopne es adc lret (bad) repz rcl xor sub cmp push stos add add loop (bad) mov jge sahf push xchg sbb rorl jns xchg iret and repnz cmpl add pop and xchg fwait mov rex.WRXB (bad) lock fiaddl adc adc std nop xchg cmc rex.B mov (bad) punpckhwd ja (bad) imul test hlt cmp cld (bad) (bad) mull fnstenv stc pop testb in (bad) retq sub (bad) callq add iret mov add movabs xchg (bad) jrcxz sbb add movabs fimull lock fwait jnp pop rex.WRXB int xchg jns pushq add rex.XB ds iret enterq (bad) loope (bad) xchg jg pop mov push lahf fiaddl jnp in ds xchg mov cmp rex.WX je movslq xor jle movabs cmp icebp rex.R jne mov mov ror sub mov mov (bad) jnp (bad) jb (bad) notl rex.XB roll sarb cmpsl sbb out cmp (bad) mov rex.WXB popfq adc (bad) in add jrcxz cld pop or maskmovq idivl (bad) mov test (bad) jns shrl (bad) (bad) fistpl in cmp imul rex.R (bad) jbe mov push imul and in mov cld scas (bad) idiv testl sbb decb retq callq rex.RX mov mov enterq pop (bad) rcll cmpsb rex.RB scas (bad) mov jbe popfq repz movabs loop rex.B adc mov (bad) rex.W cwtl sbb sbb push icebp jg out push add pop xchg xchg mov shl ror (bad) and cmc xchg (bad) outsl cmpsb mov and mov testl (bad) rex sub rol xchg (bad) cmpsb fidivr insl rcrb ds test bnd or pushq jno push sbb jo out (bad) adc (bad) fwait adc lea cmp or enterq out rorl negl (bad) add pushq (bad) xchg jle (bad) (bad) and (bad) adc nop in sarl (bad) movsl roll int3 mov (bad) xor sbb xchg in rcl movsl fsubl clc roll jmpq fld je (bad) fbstp pop cld mov es sbb mov iret test lret ficompl movslq clc push xor cmp lock (bad) test flds adc rex.X push negb callq mov int shlb pop (bad) retq rex.R adc (bad) mov mov cmp addr32 rex.X in xchg icebp (bad) lods pushq lods iret lahf cmc fcompl jmp mov add add xchg (bad) ja (bad) (bad) int notb iret stos jnp or test rex.RXB scas sub fimull (bad) cli rex.XB jo repz cmp or (bad) shll xchg or pop outsl loopne movsl rex.WRXB mov sti outsb (bad) ss pop (bad) rex.W js sub rex.B int3 fbstp xor icebp jo stc and jg and in (bad) mov jl movabs mov (bad) jns (bad) sub roll (bad) fwait fs rex.WRX outsb imul (bad) std (bad) je flds xchg mov rex.WRB xchg lret shrl out jno or es or retq sbb mov xchg retq sbb mov xor or lods (bad) pushfq jmp rex.W rex.RB mov rex.RX pop jrcxz sub mov cmp cmp jg mov rex.WRB rex.RX cmc xchg vmovntps or add cwtl xchg vandpd push (bad) and jb push rex.RX js xchg add push cmp add mov and and mov (bad) (bad) lret mov pop repnz rcr sbb (bad) retq and mov in and imul (bad) adc push fmul xchg loope loop add fldcw jmp (bad) (bad) (bad) mov (bad) (bad) mov (bad) (bad) rex.WX or ds sub shrb (bad) cmp sub mov jbe sub or lock rex.XB rex.R fucomip cmp and out movabs sbb fnsave jb jne nop (bad) cwtl or mov add jp cs pop gs loop mov jne lock jle cld (bad) (bad) vfrczsd rex.WRX (bad) rorb lret rex.WB sbb or std sub xchg adc rex.WX cltd (bad) sarl or sti xchg pop fwait add rex.WRX lods out jnp rex rex.X jne,pn repnz cmpsl cltd jb rex.RXB xchg icebp rex.WRB data16 (bad) leaveq (bad) adc test sbb xchg cmp (bad) rex.WXB (bad) mov and sub insb rex.R mov mov push or rex.XB rex.WRB sub jno imul jp scas andb xor (bad) imul rex.W xor or jmpq fs rex.WB push fnstsw int lods data16 xor mulps cld sub cmp insb xchg sarb (bad) jne rex.RXB jbe rex.WXB retq (bad) rex.WR (bad) (bad) divl (bad) mov sar jb stos rex.WR shll mov rcrl mov clc adc loop movabs (bad) jne jbe stc fildll push (bad) cs sbb or fldl cmpsb mov xor test sbb flds jo mov mov (bad) (bad) jno jmp int3 movb pop cmp movsl testb (bad) fcomps flds xchg insb sub icebp rol loope cmp jno jne (bad) add out sub rex.RXB (bad) std clc insl sbb xor int add in rol xchg leaveq movabs fsubrl int in rex.XB lock rcrb (bad) movabs lahf pop jnp es and mov fiaddl jno ror (bad) sub jmp in sbb pop sbb cld or mov rcr decb mov cwtl pushfq mov cmp lods ja mov add mov cmpl and roll test jp scas ror fs fidiv xchg movabs (bad) (bad) int3 mov rex.RX movabs or sbb loope addr32 (bad) lret mull (bad) test xchg mov fmul in rex.WXB fstpt jmpq lcall jge retq leaveq loope insb fiaddl and sub mov sub (bad) retq fcompl cs sbb idivb retq outsl sub rex.RXB (bad) (bad) mov push add pop repnz jrcxz shrl cmp mull and adc pop jge lods shll xchg mov nop push mov imul (bad) mov test jo push sub xchg or shlb (bad) sbb shlb and mov rorl addb orl sbb sarl push outsb rcl out mov and cmp fadd std mov andl add jae imul xchg (bad) (bad) rex.WX repz push cmc and (bad) test (bad) mov add mov retq mov push ficoml adc rcrl outsb or sahf sub rex fwait in or add sbb rorl pop in int3 jp xor decb mov mov hlt rcrl imul xchg out lea mov vcvtss2sd addl (bad) xchg (bad) repnz movabs (bad) addl repz not push cs (bad) (bad) repnz scas movsl rcll cmp mov mov adc cmpsl shl (bad) shr std jl divl ss rex.WRX rex.WX shl (bad) jge cmp sbb xor mov xchg icebp pushq fsubl or add (bad) mov jg rex.WX rex.WRX (bad) fldenv xor and jle leaveq add ficomp incl scas sbb pop test scas pushfq (bad) (bad) out cmp outsl jno pushq add sarl callq rcll (bad) (bad) mov mov or adc sbb (bad) scas xchg lret rex.WX loope jbe push push push loop lods leaveq rcrl out (bad) adc jl sti cmp (bad) (bad) push or jo cmp movabs xor (bad) jmpq add movabs (bad) rolb or pop push mov callq imul (bad) (bad) and sub xchg pop sbb (bad) push xchg sbb jecxz adc iret add xchg pop (bad) retq stos enterq mov cli or xlat push xor movslq sbb test and sub push retq mov mov (bad) in and lret rorl push mov mov shll mov lret or jmpq mov loopne (bad) xchg jo and add sar cmc mov lahf mov mov and adc pop add pop and movslq lods jbe jb sbb out cmp nop shrl loopne je sub push insl (bad) (bad) cmpsb jns frstor and (bad) out xchg (bad) insb (bad) (bad) jne movabs (bad) clc rorl sbb jno rex.WXB adcl int std je (bad) enterq sub cltd rex.WXB popfq in cmp push repz roll (bad) (bad) fs loope enterq stos jp and sbb and jmp rex.W jg fnsave mov (bad) pop mov mov jge (bad) pushq jle sub and xor xor mov (bad) je (bad) sahf loop rex.WR test add shr movsl rex.RX (bad) nop popfq mov stc test sbbl pushq (bad) rcll test movl rex.RB cwtl std rolb sbb mov cmp xor sarl out insl xchg or repz and fstps movabs lods xchg jns test xor movsb int out lods mov movabs sbb movabs xor push test shlb hlt xchg adc xor sub mov (bad) jb xchg (bad) (bad) add (bad) subb imull push mov scas lods in cmp sti lret js (bad) (bad) repz (bad) negl jae add pop (bad) mov cmove fisttp movabs movabs rex.XB cmc fptan lods push xchg out xlat (bad) mov adc add fcompl (bad) jl (bad) in (bad) shr mov cmc test push data16 xchg movabs (bad) fsubl sbb mov mov jnp rex.WXB out cmpl mov shll (bad) jns (bad) enterq mov out rex.X fwait rex.RXB rcrl ficom mov movl sub fwait clc rex.R imull (bad) repnz out fidivrl jnp sahf (bad) mov movslq repnz (bad) xchg and (bad) clc (bad) fcmovb nop xchg icebp pop mov or (bad) pushq adc sbb fstl add loope shrl mov loop callw enterq (bad) cltd movabs cmp sahf repz lret rex.B rcrl callq std push xor (bad) mov insl add and xchg jrcxz xchg or lret and jnp or (bad) xor jns (bad) pop jno rcl imul and jo rex.RXB mov rex.WRXB repnz mov push enterq (bad) cwtl loope cmp imul push movabs in rcll loop rcrl cmc lret retq xchg movabs cmp fwait rex.WXB ja js rex.WRB fcmovb xchg adc mov jmp in cwtl and or (bad) sar xor (bad) ror add xchg cld (bad) fxch cltd add xchg (bad) lret add or clc pop and rex.X fildll leaveq push (bad) cmp repz int adc (bad) (bad) retq mov shrb movabs (bad) cmp gs test xor cld mov pop (bad) sbb enterq addr32 js std (bad) sbb (bad) outsl jmp jg sti movsl loop (bad) fstps (bad) imul retq (bad) pushq jmpq and test rex.RB ds (bad) scas add mov loope adc mov btr pop scas (bad) lock jnp scas jle add cmp sbb or rex.WRXB mov jns adc decl sbb (bad) rorl jge push neg jno sub xchg or and (bad) (bad) movabs sti (bad) lret cltd test stos sbbl (bad) (bad) sub xor enterq mov cmc movabs ja (bad) rex.W xor in jbe pop or hlt (bad) xor and pop (bad) rcrb (bad) idivl sub pushfq xchg fnop jmpq and in (bad) test je shrl jl stos add (bad) mov xor mov add in rcr rorl roll vaddsubps (bad) pop add pop mov fldl jge mov pop push (bad) pushfq std roll (bad) mov rex.X jae xchg mov lahf (bad) rex.RB subb sti pop or mov jg xchg xchg cmp or mov push fsubl cmp (bad) mov idiv leaveq mov xlat ror mov cmp rex.WX and or mov add xchg jno addr32 mov int movb add mov stc in sub shl jbe addr32 ja or push mov xorl jrcxz mov frstor mov rex.WB movb (bad) pop push xor and rol cmp ds sub fwait pop div lahf and leaveq mov lods mov fstl adc and enterq pushfq (bad) cmp (bad) pushq sbb pop or in rex.B in subl mov cli (bad) add mov and mov sbb ja xorb pushq sti jmp (bad) imul int3 mov add lcall xchg or xchg idivl (bad) xchg jmp jp or lret rex lock add (bad) ss (bad) mov rex.RB jmp icebp (bad) push rex.WXB cmpsl scas mov fstpl cli jno stos (bad) xchg gs xor movabs mov sbb repnz je in push pop xor lret movsl (bad) mov and xchg test mov add rex.R and (bad) or and (bad) (bad) (bad) cltd (bad) nop (bad) jae rex.WRX cmovno (bad) and cld (bad) cmp rcll (bad) je xchg or rex.RXB insb mov jmpq xor movl shr in or pushfq imul adc and jne sti xlat (bad) xchg fnsave adc iret xor popfq pushq outsb movabs and shlb shrl rex.WR fs (bad) xlat lock (bad) jo jle jns jnp rcrl push rex.WRXB fdivl loop rex.RX cmp push iret shrl cmp fnsave xchg mov push sub jno or je pop sti clc pop mov lret (bad) in mov sarl test (bad) movsl lret hlt sar movslq rex.RB int popfq push fld adc xor imul callq (bad) (bad) mov rex.WXB movabs jmp sub fmull cmp sub mov (bad) (bad) rex.WB pop (bad) mov sbb retq in (bad) sbb push (bad) sub jrcxz rex.WR push (bad) addb jg (bad) pop movabs or enterq rclb mov (bad) data16 rex.X (bad) sbb icebp mov leaveq and fcmovbe fwait cltd loop lods rex.X ffree rcrb lods (bad) out (bad) jg jge movabs jb shrl cmp cmc xor (bad) and gs jbe mov je adc fstpt mov rcrl sbbl sbb cmp rex.WB push repz shrl retq sbb jno hlt mov cmpsl sbb push in adc roll (bad) ffreep xchg sbb lock (bad) shl jg adc fst (bad) in mov cmp std xor (bad) int3 push push shl repz push fcmovnbe int cld xchg (bad) cli adc rex.WX or in imul sbb enterq sbb rex.WR sar mov out fldt mov lea incb cmp xor rex repnz leaveq cltd lea lock imul lahf ffree cld fidivr in (bad) sarl pop cmp and jrcxz cs rex.B xor out jmpq sbb jl rorl or xchg lods push loop adc jo jno jmpq pop push jb int pushfq popfq lret push (bad) mov addl add xlat rex.WRX cs shll mov shll mov sahf enterq lretq (bad) insb adc pop (bad) int3 xchg outsl sbb repnz outsb (bad) rex.RXB iret jrcxz mov and sar sarl notb add mov jno movsb retq (bad) movabs popfq in xor cmpl mov rex.WXB pop loop or roll iret adc add rcll fwait (bad) mov fsubs mov lret imul gs cmpsb int3 pushfq loopne jp rex.R sbb mov pop pushq (bad) rex callq bswap enterq mov adc outsl adc movslq fstps out pop pop add out mov xchg jne in jmpq mov (bad) bnd (bad) pushfq movabs mov mov add add rcrb pop rorl sbb xchg rex.WR rex.X movabs rex.RX mov mov adc loope mov pushfq jae xor push rex.X sub cmpsb xlat cltd jae retq pushfq test lea movb jb pop mov clc outsl fadd cmpsl (bad) icebp or cli rex.WX outsb push cmpsl jge sbb jg adc mov (bad) or in mov loope idivl rex.WRB xchg rex.WR std mov and repnz out rex.RB data16 movabs movabs jns or movsb sub (bad) jp ss sbb push sbb popfq adc xchg pop insl mov sahf fild cs pop je sub (bad) xor cmc lahf xchg add jl and push xor rex.X scas ffreep and rex.WRB insb retq xchg fstpt rex.WR mov push sbb imul movabs addl mov in jnp (bad) ja jno callq jbe cmp sub (bad) jae mov (bad) sub add lods xor imul (bad) xor add sub scas adc (bad) mov lahf mov retq pop fs rol cmpsl pushfq (bad) outsl jo sbb jns sarl mov (bad) and mov sar jrcxz sbb outsl (bad) icebp nop ds xlat out out mov pushfq jns movabs (bad) or mov lret (bad) in (bad) mov add insl rcl iret mov xor test sbb shll jae push (bad) pop out mov mov jl jp adc mov retq ds xor jb movabs add pop add rcl lahf mov mov sbb lret (bad) test or hlt sbb pop mov xchg push sahf add rcll mov push rorl or rol rex.WRXB xchg mov sbb adc pop sub fsubrp (bad) xor (bad) cmp int add pop movabs cmpl add popfq jmp scas movabs leaveq cwtl (bad) shrl mov out jle (bad) xor ja jp addr32 testb (bad) rorb stc (bad) decb addr32 rex.WB lods sbb iret push jmp sbb jae callq sub cli enterq addr32 sbb movabs popfq insb pushq sub (bad) mov jae sub (bad) (bad) flds int3 add (bad) xchg xchg pop shrl shll xchg rex.X negl imul rex.R rex.WR movslq jne (bad) cld nop (bad) or in sarl fisub jl (bad) mov inc iret mov sub sti jrcxz test notb imul shrl pop sub add sti iret retq adc push add sub rcr (bad) rex.WRB pushfq pop pop xchg in mov iret insl (bad) cltd and pop jno in add popfq xchg cwtl movabs xor push sbb sbb movabs mov test rex.WXB add roll (bad) ss rex.WX xchg stc ficomp int sub mov fwait mov xchg (bad) jmpq out shll mov fistp mov int3 or loopne imul or loop pop and (bad) lods xor hlt (bad) (bad) push je (bad) adc test xchg jae repnz jp test movabs movabs fwait mov cwtl cmp lret (bad) (bad) push or out mov movsb (bad) xor shll cli sub fucomip rex jge out add movsb cmpsb mov (bad) mov test nop sarl stos add retq (bad) test ja and push repnz (bad) jb movabs out rex.XB add sbb sub or shll jb cwtl in rol packuswb rex.RB push int3 push or roll (bad) mov je loopne or jge rex.R int mov pop (bad) scas push insl rex.XB mov retq xlat xor jno rex.WX or lock rclb nop push outsl (bad) (bad) mov stos rex.RB loope (bad) adc mov in rcrb (bad) mov popfq frndint sub jp jg jp movabs (bad) loope xor mov lods rorb pop or scas jo (bad) cltd or rex.RB mov lret mov js jno cmc jrcxz (bad) xor movsb and je rex.WB lock jrcxz (bad) repnz out cmp push shll leaveq xor jecxz (bad) ja or mov lret (bad) (bad) cmp test mov jo mov jbe test pop movabs cli mov and push xchg fwait stos loop xlat (bad) (bad) mov test and ffreep stos xor rcrl (bad) mov xor (bad) xor jrcxz loop insl rex.WR or enterq fsubs loope (bad) push xor shll lods pushq scas leaveq (bad) ja xchg out sbb xor sarl jns movslq (bad) neg vsubss jne pushfq (bad) and (bad) pop cmp xchg xchg mov addr32 xor (bad) test push pop insl outsb pop sub gs rcll rorl xor incl loopne mov (bad) push or movntps shll jno push (bad) mov or jbe jns (bad) nop lahf pop outsb rex.WX shr mov jbe jns pop jl (bad) rex.RXB rex.WRX rex.W rorl clc or push test push in (bad) cwtl rorl or repnz lock xchg fxtract cmp adc ja cmp js repnz jle rorl jge movabs jmpq push callq cmc rex.B test add (bad) push (bad) xor (bad) sbb rex.WRB icebp or (bad) xchg stos jns rex.RXB sahf in addr32 nop pop sarl mov cmp adc lea xor (bad) lcall rex.RXB (bad) cmp mov fnstcw roll or jl jne jle (bad) pop shrl in retq sarl cmp roll push roll icebp mov mov sbb or (bad) shll mov push clc lret hlt (bad) add in movabs retq lock ds (bad) sarl (bad) iret cmp sub sbb andl fild cmc (bad) sbb cmp rex.WRX mov addl sbb jmp jno std cmpsl add stos ss xchg sti mov ficomp data16 or fucomi cli (bad) mov in cmp pop pop test (bad) add rex.WR stc ja mov movabs (bad) fnstenv (bad) sti not je sahf shrb and rcll sti add mov repz jmp push (bad) adc jl add and push xor scas scas mov fstl push add mov or jb fwait push (bad) (bad) stc cmp mov sub rex.WRX cld mov push rex add adc rex.RB sub xchg loope cmp push jg jns xchg mov imul (bad) sahf in mov lret in adc xchg cmp lret bnd cwtl pushfq shll (bad) rorl (bad) shrb lods xchg movabs (bad) shll jae (bad) or sub fidivr loope sbb out push fwait push (bad) xor sbb (bad) mov cltd pop in and movsl cld in shrl fdivrl xlat movabs push push jnp mov rex.WRXB leaveq xchg retq out (bad) fsubs jo movabs cmp (bad) lock retq jmp sarl rex mov pop cli jge loope jae cmp and push xlat ds (bad) sub cmp sub sub (bad) cmp add cs movabs in (bad) mov mov cmp cli cmp (bad) add add rolb lock (bad) sub sbb push mov sub fcompl fcmovnb or fstpl rex.WR mov int3 fwait mov (bad) adc cli cmp loopne sub in rex.W repnz enterq (bad) mov pop mov jl mov lahf ficomp (bad) cmp not roll gs or pushq pop callq cmp mov add mov jp cld int rex.WR movsb (bad) mov mov (bad) icebp pushq test xor rex.W rex.B rex or pushfq and jge add jrcxz lea rex.RX sbb or rcll mov push mov mov je jbe lods movabs sbb jmp rex.WXB jle or test (bad) (bad) stos scas ss (bad) shr add adc xchg (bad) adc rcrl ficomp imul pop rorl roll adc (bad) notb fstl mov retq pushq (bad) fldcw add rex.B adc or (bad) ljmp mov imul mov xor (bad) add add jo xor jb shlq xor retq sbb cwtl shll cmp rorl pop ss out vpsrlw xor add xchg push jne mov cli cmp jmp or and push add rex.WR out imul push shll scas sti push (bad) shl fcoms (bad) (bad) rex.WRX jmpq sarl jne int rex.WRB data16 fidivr (bad) xchg push push lock jae addr32 jno rorl jno (bad) in cmp data16 rex.R xchg rex.B out mov push fidivl cmpsb pop cmp shrl and sahf mov rorl repnz lods popfq push jl fucomi pop (bad) nop lret rex fs (bad) ffree or pop or js (bad) rex.WX adc shll xchg pop shll lret mov cs iret in push test or rex.RXB roll mov jl mov push rex.WX add insl jg repz sarl in (bad) adc ficomp pop cmp jrcxz jg cmp xchg rex.WRXB insb int3 (bad) xchg xchg rex.B sbb insl rex.W add jmp jbe cmp sbb fucomp shll add (bad) hlt test lock loopne add rcrl and sbb and retq xchg (bad) sti iret in js shrl cmp int lea stc xchg sar xor lret ja add jne sahf sbb jg sbb xchg xorl cmpsl movsb scas stos jmpq rcll (bad) adc sbbl add and pop loope sbb (bad) test fistpll (bad) and loope mov mov fnop (bad) rex.WX rex.RX retq movsb fidiv sbb icebp idivb and mov fidivr (bad) (bad) or jp shlb movslq push mov addr32 loopne (bad) add rex.RXB jge jp add scas rex.X rex.WR movabs lods fisub subl scas and sti push mov fucom rcl std rex.WRX movabs and rex.RB scas sbb mov sbb retq sbb std (bad) pushq pop cmp and and stos mov pushq repnz sub (bad) cmpsl ja rorl (bad) (bad) sbb cli je push stc (bad) (bad) rex.WXB push rorb xchg (bad) or outsl incb jne fcmovu sub stos fwait icebp ds xor mov rex.WR add cltd push rol rex.XB es (bad) rex.R xor rex movsb (bad) ror sti rex.X (bad) shl lea xchg rex xor (bad) repz cmp mov std jg int mov (bad) mov mov not cmp (bad) mov xor xchg movsl jne and rorl push mov push adc (bad) orb jle lods xor rorb out (bad) shrl fs sarl sbb mov je pushq push mov cmpsb push (bad) cmp movabs (bad) stc shlb (bad) rex.WRXB push (bad) sarl xchg sbb icebp enterq shl rex.XB sub sbb shll add ror pop and imul cs add and rex.WB add pop mov (bad) int or jrcxz shrl jno jle int3 popfq sub jb rex.WB xor (bad) xor fistpl nop jmp adc or cmpl adc lods stos (bad) sbb rcll jno rcll rex.WXB pop adc xchg addr32 sub (bad) mov mov sub std add rex.X sarl sub (bad) or mov rex.RX rex.WX jge add and mov repnz xchg pop or sbb icebp jl mov mulb rorl (bad) xor enterq movabs pushfq or cltd (bad) cmp (bad) adc lock push or cli scas pushfq adc jmpq cmp jp pushq in mov lahf add pop iret add es (bad) andl (bad) mov pushfq mov rex.RXB sbb andl (bad) lahf jbe mov (bad) shrl push jecxz xor shll mov fstps fbld xor rex.WXB int rep jp sub mov cld jbe xor cmp rcll pop rol cmp xor (bad) fsubs in jo movabs cmp iret lods or sub popfq (bad) rex.RB jmpq lods xchg (bad) (bad) cmpsb mov stos in adc jbe nop bnd xchg sbb or ror and cmp int rex.WXB rorl push jg fiadd mov sbb (bad) cmp pop sar xchg add imull mov pop mov icebp imul fxch rex.X rex.RX fiaddl cli cli pushfq cmp xchg scas sub pop jp out rex.WR cs incl in jns (bad) cmp sub loop jne (bad) in jmp loope (bad) adc (bad) fistl sbb rex.WRXB movsl (bad) jmpq rex.RX (bad) out fstp sub pushq (bad) movabs (bad) rex.WB jmpq jle fwait jmpq ficompl fcomip sub shll out mov pop or (bad) cs in repz lock js rex (bad) in rex.RX fcmovbe adc orl cmp sbb (bad) stos (bad) rorb idivl (bad) xor xor (bad) jo cmp insb gs xor shr and repnz cmp retq rex xor (bad) pushfq sti and cmp int3 (bad) mov and mov lahf or hlt xchg shr cmp mov fnstcw push int3 adc (bad) pushfq (bad) (bad) mov sbb sub add sub adc imul movsl fistp mov cmc fstpt icebp cmp pushfq cli push (bad) roll rex.WR add xor (bad) xchg xor adc retq xchg std pop (bad) rex.WB (bad) xchg retq sub out mov movabs sub sarl mov rcll jae imulb sub movabs repz xchg (bad) (bad) movabs icebp push repnz add cli (bad) outsl sarl stos xor and loop sub leaveq (bad) (bad) (bad) nop (bad) rorl and adc int3 loop lahf cmpsb rex.R in adc in insb mov add (bad) clc mov je pop jg add iret icebp fnop (bad) jmpq or rcr cmpsl (bad) xor int test xchg jle sub xor or and repnz std xor jae (bad) sarl rex.W lods mov adcl movslq jmp sbb retq lods jrcxz push sub fcomps outsl (bad) add in clc mov or rcrl jg mov rex.RX sti jmpq xor jne rex.RX movb jb out std mov movsl mov fldcw add pop in adc mov jno cmp es mov test cmp rex.XB cmp jmp jge sbb sbb xorb lock retq xor jge (bad) (bad) shlb jne push lahf or mov xchg mov imul add jne xchg movsl cmp jle roll rex.RB sarl sub and in mov push (bad) pushfq insb addb jno rcll rorl lods scas xor (bad) roll add mov sbb (bad) enterq jae add stos xchg sti rcll jle lret (bad) (bad) out roll (bad) fmull ror mov cmp mov adc pop lret rcll popfq cld outsl std or lods loop adc and (bad) (bad) mov rex.RXB xchg mov retq (bad) popfq lret jg mov add mov xlat loop (bad) fsubrp repnz lret sahf shrl pop push (bad) (bad) insl (bad) (bad) adc pop movslq gs mov popfq push (bad) movsl loop fwait (bad) rex.B (bad) mov sbb (bad) sarb mov mov scas pop dec rex.WRXB faddp sub cltd ja (bad) xor or lret test ds push rex.X add loop (bad) test shll mov movsb rcrl and mov mov add addr32 sbbl (bad) stc mov rex.W cmp adc scas callq (bad) repz retq shll rex.R shl mov jge pop callq movabs addb (bad) in push retq xor add (bad) mov (bad) pop mov insb jle sbb mov rex.B roll (bad) cmc (bad) lock xchg outsb cmp (bad) test in jg mov sub (bad) insb adc (bad) mov js lret (bad) push out sti pop pcmpeqd es rex.WX jmpq push mov mov cmp add (bad) mov or mov out movabs jno jns add pop adc scas int3 test (bad) lock (bad) adc ja jp mov out (bad) (bad) and test fsin callq bnd rorl sub (bad) pushq mov lret pop rex.WRX cmp or jne (bad) lret iret shrl pop cld or xchg lea cli rex.X lock (bad) (bad) outsb xor fwait iret (bad) loopne jne xlat ja (bad) jno shrl sub repnz mov or (bad) sbb and movabs std mov add sahf jg rcrl rex.WRB (bad) pop mov mov jbe sbb mov add (bad) movabs (bad) push stc xchg sbb (bad) movabs fidiv clc sarl sbb lret cwtl retq or std (bad) sub mov mov jle roll ja iret mov int rex.WRB pop jns enterq add cmp in js pop mov xor movabs sbb (bad) or (bad) jne sub rex.B mov fadd ss test rex.B or stos rclb hlt rex.WRX mov (bad) movsb rol xchg mov lret fucomp fwait (bad) sub lods adcl movabs jg insb movabs loope imul movabs retq cmpsb lret lock iret and mov stc cmp and and jne jg pushfq rcrl mov sbb xor xchg movsl mov sbb scas pop outsb vpxor scas mov movsb mov lret add or repz cmp (bad) push fcmovbe jbe rex.WRX rex.WRXB push (bad) rex.RX (bad) cmp xchg imul out sbb lock (bad) xchg lahf rex.B sbb rex.WB addr32 shll movsl or (bad) mov mov mov sbb fwait shr add mov (bad) movslq movabs sub xor jp repnz (bad) sbb push rex.WXB push add (bad) (bad) and xchg movabs repnz (bad) xor (bad) cmpsb pop rcrb mov rcll mov sub cmp mov cmpsb adc xchg mov mov jp shrl jae push out mov (bad) rex.WX ljmp add in pushq rcrl cli xor cmpsb sbb sub (bad) cmp hlt rex.B fdivrl pushq sbb shrl add rcrl mov iret (bad) mov leaveq and (bad) mov rex.RXB fmull sub cwtl add pop (bad) addr32 leaveq (bad) mov std (bad) lea cltq pop shrl rex.WRB faddl js mov add jl cmp (bad) stos leaveq cltd scas pop shr sarb sahf push (bad) pop callq (bad) mov cmp ss iret and jmp mov lret stos jnp xchg jle insb (bad) or add idivq rolb jmpq adc jbe movabs or mov (bad) sarl (bad) rex.WRXB movsl lea (bad) movsb cld xchg jg loope jae lret mov (bad) shrl jge rex.R in nop (bad) (bad) fildl (bad) movsb fnsave (bad) loope rex.B or shl lea (bad) int jmpq xchg or pop fimul jae,pt and jge cmp iret mov jp pop int3 stos xchg in loop cltd pop rex cmpsb mov js mov cmp shrl (bad) cmp rex.W rex.XB (bad) and pop lea cwtl data16 roll xor mov shrl in push (bad) (bad) (bad) sbb (bad) jl xchg cmp rex.WRX fsts push outsl shrl pop sbb mov add add rex.R xor xor push mov pushq sub jmp imul cwtl cli (bad) mov jne (bad) rorl or insb imul jae test cmp hlt xor push rex.WX pop fs cmp sbb add sub stos fstpl or enterq rex.W lahf lods lods mov test fnsave rcr (bad) movabs mov fidivr add (bad) jmp adc insl xchg add movabs and xlat shll rex.WRXB ds sbb (bad) adc out (bad) mov sti jp sub (bad) (bad) xor pushfq fiaddl (bad) repnz jnp icebp mov xor clc and sbb callq lahf out rorb rex.WRX lea xchg (bad) je push mov xorl cmc jmpq (bad) rex.B rex.WRXB rex.WR mov (bad) outsb lods rex.RXB (bad) adc xor fnstsw (bad) iret pop cmp test jmpq (bad) adc mov in add pop sarl sbb mov xchg fimull mov lock pop (bad) lret (bad) adc xor mov (bad) mov rex.B hlt addr32 cmp retq shl sbb (bad) insb cmp (bad) fs or (bad) jo or lahf notb (bad) and movslq xor sbb movsb sarl sbb imul fidivl rcl push jl jge pop sarl (bad) sti rcll mov jno rex.W adc xchg callq movabs rex.R imul mov enterq push movabs cli sarl clc movslq in (bad) in or sarl xchg scas sarb (bad) insb (bad) repz roll stos shl (bad) fdivr pop jno sbb jo rex.WX cmp and jge or rcl repz lret rex.WRXB cs xchg rex.RXB and imul rex.RX mov nop rcll (bad) clc xchg mov add mov shll push bswap jb movabs push sub xor jno rol mov lock lods pushq shll lret adc push mov rcrl movabs (bad) mov gs xchg sbb ss hlt sarb add or (bad) rcrl movsl ja and jno shll rex.WRX imul and add pushfq mulb decb cmp mov sub (bad) mov outsl xor (bad) or (bad) mov xchg (bad) pop frstor rex.B out jbe pop add cmpsl xchg shll (bad) je ffree (bad) (bad) icebp loope mov add lret add ror int sbb js cmp pop (bad) int mov (bad) jno mov rcr and pushq imul (bad) test (bad) vmulps movabs insl add rex movabs rex.RX adc (bad) lret in pop in rex.B cmp and rorl jae outsl (bad) scas lahf repnz xchg cwtl mov mov (bad) add lcall (bad) xchg movsl lods xchg mov xchg rex.RXB iret leaveq sbb popfq lcall (bad) shrl jns cli xor shrl rcrl (bad) xchg jg movsb rex.WB js ja xchg movabs (bad) pop test leaveq cltd xchg repnz movsb movabs (bad) xchg pushq add add stc jno movabs xchg push pushq xor sbb (bad) mov rex.RX iret movabs xchg imul loop fnstenv xchg (bad) je cmpsb cmp mov sub rex.RB cmp sub rorl rorq add (bad) mov outsl adc loopne lods test xor add loop rorb pop gs rcll sub add fcoms (bad) rol or pop fld outsl xchg nop push (bad) xor imul loopne lret (bad) addr32 xlat lock pop subb rex.WRXB (bad) xor (bad) lods rex.WXB rex.XB rex.WRB out test mov lods jl mov xor mov (bad) jrcxz rex.WXB or shrl loope push push iret movabs mov movabs test callq rorl mov mov add fbld in push (bad) pushfq roll movabs imul ds rex.B addr32 retq rex.WRX mov sub adc sbb xchg add mov pop jns bnd cmpsl fbld imul (bad) jo xor add add or (bad) (bad) stos sbb test and jmp pushq jmpq out xor lret addb pop int xchg sub pop orl mov adc sahf cmp sbb clc xchg or add mov rol ja in sub int3 popfq (bad) or rex.WRXB rex.RX rolb js mov hlt shl add push xchg cltd (bad) (bad) and push and outsb or sub pop rorl adc mov xor dec imul fs (bad) xchg pop mov shrl jb test xor rex.B fs rol cmpsl js movabs jne mov cltd (bad) xor xor (bad) (bad) addr32 mov (bad) ds xchg (bad) sub add rex.RB retq rex.XB jnp (bad) addl cmp jp cmpsl add jrcxz push cwtl imul out mov mov movsb jg (bad) push std lea cmp loope pop push or (bad) xor (bad) xchg xor cmp adc hlt jb lea movb mov add (bad) lock add or fs (bad) mov retq (bad) (bad) push js mov fs (bad) push es popq rex.WX rex.WRB mov sti cmp frstor mov xor (bad) pushq rex.XB ss cmp lret mov mov stos (bad) sbb rex adc jae in cs rcll mov fnop out sbb (bad) movslq (bad) sub imul lahf mov lret fs (bad) rex.WB test fistpl out (bad) (bad) (bad) xor shl loop sub (bad) (bad) jns (bad) pop sub fisttp mov fisubl subl rex.WR xor rcrl rex.W jmpq imul sbb xchg scas cli stc rcl fwait mov lahf pop fadds lret cmp rex.B (bad) and xor in shl push insl rex.RXB (bad) hlt (bad) adc and (bad) out (bad) jl (bad) sbb adc hlt rcll (bad) (bad) roll xchg vpsrlw cli xchg mov shll mov jnp shr fistl (bad) (bad) icebp jmp cmp xchg ja cmp test adcl lret (bad) fildll mov (bad) push rex.X repz cld rex.B add jbe rex.XB (bad) test and ror (bad) movsl or movabs xor sub and mov xor movabs pushq roll xor out sbb mov loopne (bad) rorl sbb rex.X add clc mov jmpq (bad) jno sahf ffreep (bad) (bad) cltd xchg xor rex.W pop shll (bad) fwait jo,pt mov jns sbb jge hlt jb xchg add fsts rex.RX lret add (bad) and cmpsb jle cmpsl add lcall int3 mov rolb (bad) or test (bad) lods lea sbb pop rex.WXB rorl es xchg mov add pop rex.XB and retq outsl xor sub out pop push cmp (bad) fdivs fisubrl fmul push rex.WR mov scas ror lret mov fdivrp mov nop adc (bad) jbe cmp rex.WX (bad) adc mov pop fildl (bad) (bad) cs shll movabs pushq mov xchg rex.RX lahf fs rex.X jmpq (bad) retq in cmp in rex.X scas jb cld push pop pop or jmp loopne rex.B and loope ss mov (bad) lahf push out popfq sub fabs mulb fidiv xor (bad) jle pop gs mov ror loop mov xchg mov leaveq rex.B rex.WB sbb imul es jmpq cmp sub (bad) sbb jmpq (bad) or pushfq rex.X icebp test rex.B in stc xlat add xor push rex.B ss fiadd adc shll retq (bad) rex.RX cltd add rex.B stos jae jne fstl shr and jmp roll xorl xchg rex.B lods repnz mov enterq xchg xchg rcll iret movabs mov idivl mov sub loope add stos cli pushq push push shll add rex.X adc rolb (bad) and (bad) scas hlt xchg movabs push rex.RB repz add jge andl gs gs push fbld fnstsw jns (bad) mov xchg je xchg jae (bad) orl rex.WRXB retq and or insb mov rex.WRX fcmovnu jne in je add or sub retq rcr rex.B mov sbb cltd cmp (bad) movabs xchg mov popq pop cs rex.WRB gs out add xchg imul cmp mov xchg clc rex.XB bnd xor (bad) subl scas imul fldcw (bad) repnz je loopne pop rex.WRB rex.WB rex.XB push xlat push sub or or nop add pushfq lahf mov neg in fs movsb stos out fldcw int3 insl rex.WB mov imul mov rex.RB movsq ror imull (bad) (bad) jle cmpsl jmpq sub cmpsb and sbb adc pop xor cmp (bad) movabs adc xchg cwtl sbb (bad) jmpq rex.RXB mov sbb sub mov pop vcvtpd2ps enterq mov pop jbe cmc mov xor jl xlat mov add repnz test rex.RB rex.WXB sti xchg jrcxz ds mov rex.W int3 in mov (bad) stc andl retq mov popfq xor movabs insb adc (bad) hlt (bad) out out lret add rex.B add and rorb (bad) push sbb (bad) (bad) callq (bad) ss mov movslq rex.R repnz int3 enterq pop fstpt rex.X jbe lret lods fstl mov (bad) (bad) jrcxz iret (bad) rex.X lahf ds mov xchg rex.W out retq cmc sub movabs jae xchg sbb cli mov xchg shrb add rcl jae xchg sbb xchg mov rex.RX rex.WRX (bad) mov fcomp xor (bad) (bad) rex.RXB jmpq (bad) (bad) imul imul xchg pop fldt fistp cmp rex.WXB cmp cmp add data16 xor mov pop iret vmulsd mov repz (bad) rolb cmp adc cmpsl add jbe mov lret mov movsl jp rol sbb mov ror (bad) movabs (bad) push or jle xchg int3 xor mov xor or rex.X leaveq (bad) pop scas int3 out sbb push outsl rex.RB (bad) mov out push (bad) gs xor pop rol cmpsb loop or mov rolb pushfq lods xchg rorl sub (bad) adc xchg rcr xchg stos (bad) cmp (bad) rorb rex.RXB ss xchg insl sbb hlt rcr adc and enterq repnz cmc rex.X sbb movabs (bad) rex.WRX (bad) rex.WRXB movabs cmc fs loope fildl or mov callq mov icebp mov sbb sbb xor (bad) xchg movabs rcr int rex.RB outsb mov test add sbb xlat cld (bad) ds jle or jrcxz fcmovne sahf and rcll (bad) xchg loope pop ja (bad) (bad) fcomp enterq fdivl movabs ficom (bad) fcmovnb (bad) and icebp (bad) cmp jp cmc stos fdivr rex.RXB jbe lret lret rolb ds rcrl (bad) (bad) adc retq (bad) test xchg in movabs movabs movsl outsl rex.RXB (bad) movabs (bad) sub jmp rex.XB rcrb jp retq repnz mov mov cltd loope add insb mov cld xchg (bad) (bad) jmpq in rex.WRB xor rex.W fiadd xchg mov push pop js fs (bad) ror (bad) lret push jbe mov pushq (bad) nop out adc cwtl add rex.RXB sub std lret test adc or xchg retq rex.XB rex.X mov (bad) ror (bad) lahf mov xor jne es adc (bad) rex.X xchg roll push movabs rex.W fs mov (bad) test xor xor icebp pop rex (bad) adc pushq xor test (bad) xor lret rex.WRXB xor xorb imulb mov (bad) hlt retq sbb fbstp push rex.XB pushfq (bad) imul mov cltd hlt pop stos roll jp (bad) cmp mov add cli fild icebp rcll mov shrl movabs rolb rex.R (bad) (bad) rex.RX (bad) cmp int sbb ds and or fisttpll imul lahf pop (bad) rol fcmovu xor or rcl (bad) mov mov mov or cli add lock in jo cli pop mov (bad) pop lods icebp add rex.WRB (bad) test xchg add (bad) (bad) fsubrl jg cwtl rcll cmp int3 pop mov xor (bad) lock xchg add (bad) es jb out rex.B mov and fbld stc sbb mov or (bad) sub (bad) cmc xor in (bad) fiaddl mov xor xchg sub xchg cmp test pushq movabs (bad) rex.XB imul sbb outsb xor je or repz mov pop fildl and (bad) sub mov shr sti and pop mov test (bad) (bad) pop std js retq mov test scas xchg push rol mov ficomp (bad) or std (bad) or scas ror cmp stc (bad) repz rcrl jb jrcxz sbb add push (bad) notl clc mov pop (bad) xchg pop insl enterq roll jg rol fsubl mov add callq add (bad) lea (bad) fnstcw insl or outsb xchg iret out mov loope ffreep push (bad) fs pushq int3 (bad) jb cld jle rcll cmp (bad) cltd (bad) mov gs add loopne retq jne xchg pop rol iret pushq push push loope ror stos push repnz fist rcrl scas or gs cmp es insl shl xor cmpsl rcrl jo lahf lahf push retq test mov adcl jae lahf jno mov sbbb jne rex.RXB cmp (bad) loop jrcxz (bad) xchg mov int3 cmpsl add fidivrl fisttpl jg scas out loopne sub outsb xor add or or pushq scas mov cmp cmp add rex.WRXB pop pop (bad) add mov mov cld push (bad) in movabs xchg push mov and xlat movsl and mov lods mov jb fiaddl (bad) sub lods mov mov (bad) loop cmp movsb add xchg retq xchg sbb push pop cltd movslq loope pop jge mov loop (bad) and jrcxz enterq xchg mov lret roll pushq (bad) (bad) xlat (bad) gs fld sub pushq mov insl fisttpll jo loope fsubs fcmovb pop push (bad) imul js mov (bad) mov push (bad) lret pushq rex.RXB xchg mov jb adc ror callq scas or jns movabs xchg add adc jbe out sbb (bad) sub rex.WB jb (bad) repnz in sbb cmpsl lret mov movslq pop sub shl pushfq rex.WR gs lods popfq test sbb sub xchg insl jl sub adc adc ja cwtl xchg int rcrl (bad) (bad) stos add (bad) test shrl scas xlat movsl mov (bad) mov test rex.B cmp sub out lret add xchg jbe shll enterq popfq mov rex.XB cwtl push cld (bad) xchg xchg mov xchg retq shr sahf sub adc add jmpq add xor pop add shll sti cwtl xchg stc or push add add rex.WRB add std test ljmp (bad) xor and push loop and jnp lret movsb (bad) mov lea rcrb (bad) addb callq repz sbb or test rcr movabs sub pop lret (bad) (bad) rex.RB rex.B mov andl mov rex.W adcb push xor mov sbb cmp adc mov loope jle sbb cmp scas imul fistpl loopne,pt mov (bad) push fsubrs or pushq and jbe fucomip or rex.RB cld and (bad) lret (bad) add rex.WXB out div pop pushq popfq cld (bad) or rex.W (bad) rex.XB (bad) mov ja (bad) movabs retq in adc (bad) cld adc sbb fld rex.WRX fisub rex.WRX (bad) mov jrcxz xchg lret (bad) pop test xchg loope popfq adc rex.B add (bad) sbb mov sub test sub scas pop rcll test movslq and jmpq jmp test (bad) (bad) push xchg xlat (bad) (bad) xchg mov (bad) push or movabs push (bad) cmp mov stos int3 add pushq mov (bad) (bad) test sbb addl insl test sbb push icebp enterq cmp clc adc pop divl adc shrl rcrl mov rcrl and pop sub and mov push rcr leaveq rex.WRXB mov shll (bad) jbe fstl test xchg mov xchg pushq shrl callq retq shrl or fninit rorb (bad) mov and cld jne fiadd adc lahf mov ficom (bad) xor (bad) ffreep rex.WB cmc sub loop jo push pop jle gs fcompl adc jne lea push loope xchg out pop sbb rex.RX jb jmp pop stos sub xor in ss cltd mov jp loope xchg pop movslq add repz xchg clc jns shrl addr32 (bad) repz (bad) pop shl (bad) and mov jg (bad) test pop xchg push cmp loope jge (bad) pop jrcxz cmp lock (bad) pop enterq rol push pushfq pop (bad) rex.WRX rcrl leaveq xchg addr32 loopne roll mov push scas add imul jge movslq or rex.X (bad) fwait stos fdivrs andl rcl cwtl push rex.B rcrl jl jne (bad) mov pop sub cmp test push stos mov rcll rcrl push outsb ror sahf ds (bad) sub (bad) xchg jno rex.WR movslq rcr fistpl add cmp insb (bad) xor repz push stc cmp rex.W rex.WX sbb pop int ffreep movabs in push xchg test (bad) (bad) and movabs rol rex.RB sbb fldcw sarl insb imul enterq rex.WB xchg (bad) lret mov mov out xlat (bad) jno rcll in (bad) xchg rex.RB rcl outsb js mov rorl (bad) notl xlat xchg push jmpq outsb nop (bad) rorb fld rcll test lods repnz lret push pop jge adc sub (bad) xor xor test (bad) gs (bad) jno ror add decl test rcll or (bad) (bad) or sahf mov mov rex.XB (bad) (bad) rex.R (bad) fiadd sub imul and jns test shl xor add cmp test or jl in (bad) push movabs jg rol rex.WRB lret push and pushfq adc xchg and shl retq (bad) lret cvtdq2ps cmpl nop sbb iret std mov int xchg stos xor mov sbb xchg jrcxz cmp stc jge rex.WR sub rex.WRXB cmpsl lea std loop incl outsb xchg mov (bad) pop push shll add ss lret rex.WXB pop outsb rex.B js,pn imul hlt mov xchg sarl pop xor int3 shl adc (bad) jae push fisubl stos popfq enterq sbb (bad) movabs xchg mov rex.W fs rex.WRXB cmp mov mov mov (bad) sbb rcrl adc mov ja (bad) jno shrl test popq mov fstpl lret loope push int pop movsl push shll outsl rex.WX rex.RXB add cli rex.R mov push imul rex.WX (bad) punpcklwd (bad) jne pop cli (bad) test pushq sar and (bad) (bad) retq sti add (bad) fucomi add lret xchg movabs movabs jmpq push loopne xor sub push or ja pushq rex.WR rex.X adc mov movabs xchg (bad) lret rcll movabs adc data16 rex.RXB and or (bad) retq scas bnd clc callq movslq or or xchg incl mov sub sahf adc addr32 shrl pop rex jae retq data16 mov or mov (bad) jns jge lret pop pushq and pushq mov es mov rex.WRX movabs iret out push push adc (bad) (bad) mov test shrl out movabs or movslq (bad) jns loop xchg std xchg (bad) shll mov xor xor repz (bad) xchg (bad) ror jb jno or rorl rex.WXB xlat pop push sarl stos lock cld xchg and andl pop cmp xor lret adc in fwait mov (bad) push (bad) add (bad) cwtl rorb add or scas int cmp nop and sahf push repnz (bad) cwtl (bad) out rex.WR imul rorl pop outsb rol lahf adc (bad) push sar std push add sbb jo mov popfq flds movabs adc loopne rcrl (bad) stos add xor (bad) movslq mov mov sbb or sub cmpsb rorb add sbb xchg rex ss std xor xor testb shrl (bad) sub shrl cmp push or xchg cld and loope pushfq lret mov rex.B enterq fcmove es and (bad) lcall mov rex.WRX add mov lods (bad) cli cmc rol and mov mov push sub rcrl xchg (bad) scas xchg or (bad) repnz movabs es mov rex.WRXB repnz adc xor lea rex.B rex.RXB mov cmpsl stc pushfq in ja and cmp movabs cmp or mov mov movl test loopne sbb popfq sarl mov (bad) cmp (bad) adc lahf pop es mov jnp add out and pushq movabs cmp cmpsl andl and rex.WX cmpsl jrcxz push icebp sarl (bad) (bad) cmp and (bad) movsb stc xchg hlt add sub lret out (bad) mov cmc movl push pop mov es (bad) xor fisubl fwait sbb (bad) xor movabs callq rex.WR cmp adc fdiv jg or xchg shlb loope sbb sti mov push retq rex.XB (bad) (bad) xor lods rorl clc add fbstp mov jge mov stos movslq (bad) leaveq callq je fnop sub rex.WRB icebp (bad) cwtl negl fdivs lahf sbb in rex.RX loope (bad) lret mov jg mov mov and mov std jnp mov fcomps repnz sbb xor rex.X rex.B or fdivs push push loope mov js add fcoml xchg xchg data16 add lock mov test cmpb xchg (bad) sti adc cmpsb lret sub rex.B mov (bad) (bad) shll int3 fdivl roll rex.RXB xlat movabs add xor cmpsl sahf data16 jle and out (bad) (bad) xchg cli sar push imul or pop push and (bad) mov mov xor rcll adc mov stos (bad) push lret (bad) cmp divl sbb (bad) repz cmp (bad) or rex.WB (bad) (bad) cmp sbb and mov add in int3 (bad) (bad) pop movabs rex.RXB sbb mov cmp rex.WRX cmovg movabs rex.WRB movsb xchg bnd rex.X mull xchg cs shr lods (bad) movabs rex.B test test es loopl (bad) fildll (bad) (bad) xor sar loope adc shr mov (bad) mov rcrl (bad) xchg push movabs stos jns (bad) insb fbstp xorl push push rcrb sahf pop add in in stos sub sub (bad) cmpsl lret mov sar (bad) data16 nop fcoms lock pop mov sarl roll xor mov rex.B (bad) jns test scas and jmp mov (bad) xchg in xchg fadd xor sti rex.X cmpsb test jmp loopne adc sahf lahf sti enterq add jbe push pushfq mov cs movslq cmp scas (bad) rex.WX repnz fs or lea out out sub mov data16 sub mov shll sub int ss (bad) cltd nop add jg test ficomp cmp and adc lock int3 jge,pn cmpsl rex.XB adc shll (bad) out sbb movsb roll in (bad) jmp iret scas jle (bad) xor int3 sub clc imul shl in ficomp add fistp rex.B mov rol (bad) sbb and (bad) mov int3 dec movabs testb lret rex.W mov jmpq and cltd retq imull jg shll subl mov or repz push rex.WRXB xchg (bad) nop adc xchg xchg cmpsl xchg popfq mov or add xor adc in mov jge jg pushq ds jno es mov rex.RX mov mov js (bad) shll and (bad) lock cmp loop ja add (bad) sarl jle sbb shrl sbb and (bad) mov int loop iret cli pop movabs repz repz (bad) loop andl (bad) (bad) fldenv pop xchg (bad) or (bad) fdivl mov mov (bad) and outsb sbb scas pop clc pop (bad) roll jns shrl subl test fist adc pop cmp jbe add movslq cmc (bad) jae rcll rex.R xchg shrl icebp sarl adc mov mov rex.WRXB es add rex.XB rex.WB push movslq jge sub mov (bad) xchg push pushfq icebp xchg lret jns rex.WRXB mov test add mov jnp out sub pushfq sahf out lret mov jns xor pop mov mul sete jmpq dec mov jne jmpq popfq (bad) negb (bad) outsl movslq fstpt subl rex.WRXB lret mov cmp adc xchg pop (bad) cli sub rex.WXB add ss fdivrs (bad) lods mov fsub mov sbb xor mov xchg and mov movsb test sub (bad) adc adcl imul vmovddup lods (bad) mov fiadd movabs (bad) fdivrl push repz loopne lock mov icebp leaveq (bad) pop in ffreep es scas jbe sbb rex.WXB fs roll (bad) int3 (bad) shl push cmpsl jmpq sarl and sahf lock shll movl (bad) cmp xor hlt sar (bad) add jno roll sub xlat (bad) mov jns rex.B sub (bad) push ja add (bad) jl shll rex.RB rex.WRXB sbb cltd mov and add pop mov addr32 movabs jae jno xchg push pop shrl add int mov jrcxz shll std out rex.WR cs fs rex.B (bad) adc (bad) pushq cmp xchg or and pop xor (bad) jb scas mov adcb add icebp mov shrb add and mov shr (bad) mov incl and movsl (bad) nop rcll fsubp iret (bad) negl jmp scas add movslq and xchg pushq stos mov (bad) (bad) movabs or pop loop sbb jg mov or pushfq imul movabs or rex (bad) loope and and pushq int3 fwait (bad) lock mov iret rex.W xchg mov mov push rex.WB or fsubrs jl sub jae icebp pop (bad) fistpl fnstenv in (bad) jmp in leaveq adcl rcrb mov jmp (bad) mov callq xchg (bad) sub pop rcll rcl xchg jp movsb add pop rex.WRXB mov mov outsl cmp (bad) movabs rex.XB mov stc sub sbb mov and rex.RB jp in vsubps fnstenv or bnd lea callq fdivl add rex.W out pushq je (bad) jo scas xor movabs pop out nop rex.RX cmpsl retq add (bad) fs (bad) fstps xor scas rex.WB rex.R add add ficom sub icebp xchg xor and adc and jge add push xchg sahf out (bad) rex.WRB rex.RB addr32 cmp push fdivs (bad) sub fcompl fidivrl repnz sbb pop pop add sbbl (bad) repnz mov jp (bad) (bad) scas outsb imul (bad) fdivs pop pushq in (bad) out leaveq (bad) (bad) int3 out (bad) jae mov (bad) shlb mov (bad) outsl (bad) (bad) rex.WRXB lock mov add mov rex.WRXB loope xlat cli mov xor or (bad) mov jo cld rex.WRB (bad) jrcxz and jns xor (bad) xchg jo test add pop (bad) fisubrl callq push icebp cmpsb in pop test (bad) (bad) mov or xchg sti ficom sub mov jns mov (bad) fcmovbe sbb rex.WB (bad) (bad) rex.WX shld loopne movl add pop clc mov push mov (bad) lock test add mov fiadd test in add rex.WR pushq cwtl rcr push negb mov (bad) shr (bad) (bad) loope xchg sub rex.RB (bad) lret (bad) mov ffreep cld add jrcxz retq (bad) movabs add (bad) test out fwait pushq or int3 rex.WRXB push faddl pop cwtl icebp sbb cli rclb (bad) (bad) mov test imul outsl xchg ljmp xchg cltd xchg add pushq adc movabs in pop in cld mov cmpsl sbb (bad) (bad) mov (bad) icebp mov (bad) in movabs xchg mov in add in jb xchg retq cmp rorl jmp (bad) and stos rex.RX fs test insl lock jo fs xlat rcll adc push lret sub pushq hlt andl callq test repnz (bad) jno std addb add fcomp sub (bad) sub (bad) movsb pop xor push (bad) push flds fimul mov (bad) xlat je sbb and (bad) fcomps xor add jns rex.WRX or and rcr (bad) cli in repz shr movabs fcmovbe fldenv loope scas rex.WXB push (bad) (bad) iret cmp xor add mov sub rex.B nop loop (bad) (bad) leaveq rcll scas fs rex.WRXB cmpsl jrcxz pop push or cmp rcll mov ficompl (bad) rol cmpl loop stc insl test lret push cs sti push scas jnp in shll mov (bad) fimul add (bad) (bad) popfq cmpsb je stos push roll rex.RX lret movabs cmp (bad) rex.RX xchg (bad) rex.B pop xchg xchg js outsb pop cld cli lods out (bad) pop hlt shrl outsl shrl jmpq mov rcr movabs rex.B rex.R cmp fs fistl cmp jb rex.B rex.RXB push jo rex.B rex.WXB push lcall mov rol sbb fs push shl cs mov jmp rex.RB and push rol ja xor (bad) adc insb shrl int3 fs jmp addr32 xchg xchg cmp sbb mov popq in insb rcll (bad) mov retq shrl adc or (bad) jl lahf cltd lret shlb sbb jns (bad) cmpsl and rcrl and sbb add out pop mov xchg jb mov rcr (bad) data16 add fwait jbe rex.B sarl (bad) fistpll cmpl lret sbb add fsubrl test rex.RXB and mov stos test (bad) lret fisubl push push shll and (bad) leaveq jp (bad) add (bad) sbb movabs xlat mov (bad) (bad) in imul int3 lock pop mov in xor sub pop loop (bad) xchg sub (bad) xor sbb rorb movabs std popfq data16 cmp int3 fcomp enterq fld rex.WRX rcrb or jl jns (bad) jb mov and mov jbe movabs mov repz lods cwtl jg shll sahf in lods xor in (bad) push sbb shr adc shll (bad) ss lret xor lods pushq jae roll movsb sbb callq rex.B rex.WRX (bad) int adc (bad) sbb adc faddl (bad) mov movabs je out insb mov add rol es jl (bad) mov jg (bad) (bad) fdivs xchg or (bad) and cmp or mov rcl test jno callq jle (bad) or push xor fsubrs rorl cli out add push sarl cmp add mov sub pushfq fimull and mov (bad) pop insb xchg and pushfq or lret test cmp movb cmp cli rex.X jo xchg imul in js retq test mov movabs addr32 js sbb or rex.B adc movslq movsb sbb jns in push (bad) mov xchg fstps push xor xchg shll rex.W rex.WB insl (bad) xor jmp xchg mov pop (bad) lret xor ficoml add xchg mov add jp mov pop rex.WXB (bad) (bad) mov xchg mov (bad) mov xlat jp es movabs mov and fwait clc mov and xchg test rcrl xor (bad) jmpq nop add add rex.WRXB movabs pop or loopne jmpq pop rolb push rex.WXB (bad) sub iret adc rcrl jl add or in cmpsb rex.R and orl adcb jo repnz movabs add jle rex.RX (bad) mov mov rex.WR mov add cwtl stos pop sbb xor push jp iret sbb adc test sar (bad) retq test addl mov bnd sbb rex.R stos pop (bad) push jrcxz rex.WXB in andl add mov push (bad) movl xchg scas fimul add mov sbb movabs xchg jmpq (bad) xchg pop lods mov test or sbb outsb adcl test popfq adc pop and fcmovb push cmpsl sbb roll (bad) mov jne (bad) xor out (bad) rex.WX and cmp faddp stos xchg rolb (bad) fwait xor test test xchg (bad) mov xor rex.WXB cmp (bad) repnz pop xchg imul sarl retq movabs mov add (bad) jnp lock testl sub lahf test pop xor pushq mov fildll adc and jno ds jmp or jb (bad) test xchg retq (bad) cmp xchg faddl out outsb (bad) rex.W cltd (bad) rex.RX test and and (bad) sub rcr and add or (bad) mov (bad) (bad) (bad) mov sbb mov mov leaveq or rex.WRB rex rex.WRB (bad) popq outsb (bad) stos (bad) lret sub jne rex gs xchg push rclb clc movabs (bad) rex.RB adc mov ficompl xor lahf jp (bad) shll subb or or js mov mov mov fucomip jno mov imul push hlt enterq push int3 add add rex.WRXB jb xchg xchg xchg movabs jge mov callq pushq (bad) rex.WRXB push cmpsb mov (bad) sar outsl fnop cld out sub push int (bad) or iret or cmp sbbl (bad) xchg xchg out rex.B test rex.XB shl add addl mov mov (bad) cmp sbb (bad) jp adc test fsts movabs pop (bad) clc fdivs hlt (bad) pop and lahf mov cltd repnz sub fnsave jae pop cwtl sbb mov rex movsl xor mov xlat rex.X test loopne sahf je mov rex.WRB faddp callq cmc iret sbb jle (bad) fwait xor cmc imul (bad) add mov mov xor add leaveq movabs cli int in push test test fidiv leaveq callq popfq xor in push jb retq (bad) mov ja icebp imul test callq sub imul pop rcll callq xlat pushq out sbb insb jmpq (bad) pop (bad) jne add jl sarl rex.WR lock outsl xchg (bad) mov rex.WX rex.WRXB movsb mov rorl add (bad) cs rcr cmp mov rex.RB cwtl imul xchg cmp andl xchg pop test in rol out (bad) pop out (bad) ds (bad) mov (bad) xor rex.B lock (bad) roll xchg decb enterq fs add (bad) rcrl ja shl mov loopne add jae xchg ss adc mov mov jg rex.WB cmp sub scas cs cmp push lret movabs rcrl cmc test shll mov mov mov pop rex.RX rex.XB (bad) or rex.WB sti (bad) in and mov jge (bad) (bad) out (bad) div lret (bad) icebp lret (bad) (bad) or push fisubl (bad) js (bad) xchg lahf out loope lcall pushfq xor imul movslq (bad) retq and xchg rcl (bad) xchg shll push stos rol insl sbb shrl int3 add sub out mov out (bad) (bad) mov fs shr lock mov hlt retq xlat movsl fldcw adc fwait (bad) mov je ja (bad) (bad) mov jae (bad) xchg adc (bad) xchg mov (bad) (bad) fstl jrcxz loope,pt cmpsb rorl stos mov xchg mov int rcll pop rex.WRX loop jl mov cmp pop pushq mov adc roll rolb xor lods imulb and pop mov cli lret or (bad) mov mov movabs and cmc sarl rolb jge lahf andb shrl push (bad) pop xor xor mov rex.WB repz mov retq retq and test (bad) int push loop scas cmpsb rcll xchg leaveq outsb clc test test xchg rex.WXB repz sahf (bad) rex.WRXB rex.RX sbb sub jnp (bad) lret xor sbb lea iret fistpl push push addl pushq rol out iret out fild rcl xchg jns rex.R addr32 test xor scas adc movabs addr32 xor add loopne lods (bad) (bad) insl xlat (bad) sbb add rex.WRX in and (bad) xchg sub in sahf jmpq fwait rcll (bad) ss jne jae rex.WB addr32 (bad) ja cmp rex.B callq pop rex.B add (bad) rex.WR jb cmovnp (bad) int3 cmc sbb ds mov jp and (bad) int3 loope (bad) (bad) lahf (bad) subb (bad) fsubrs pushq xor mov fcomps loopne and (bad) jns shl jne mov cmp lret (bad) mov (bad) callq xchg lock jp add retq stc cmp rex.WX pop sbb fdivrs rex.RXB lock mov jnp out scas enterq (bad) and movabs movabs retq out (bad) rcl orl mulb (bad) (bad) shrl add jg sarl rex.RXB (bad) xchg (bad) scas jbe rcll (bad) es in adc nop rcrb movslq in rex.R test rex.X rex.WXB add cmpsb pop add jl jnp nop cmp mov rex.WRB xor roll fwait cltd adc push (bad) fnstsw and pushq movabs test mov shl and add sub (bad) outsb (bad) rex.B rex.W xor xlat out mov (bad) out std shll xadd jnp ror xchg stos test rex.WRXB std sbb stos fstl (bad) js lods xchg insl repnz pushq sub vmovntdq imul xor rcl pushq jge rex.WRXB int3 push fs loopne push rex.X rorl adc rex.R rol test and adc sbb xchg rcrl mov push (bad) jp mov pop xor (bad) test vpsubsw mov (bad) cltd (bad) jb jns,pt mov xchg jns add cmpsb sar adc mov cmp stc int3 (bad) rex.B rex.WRB xchg sub ss add push sub (bad) lods mov cmpsb sub xor (bad) loop or xchg push out stos add iret rcr movsb sub (bad) add out jo cmp lock (bad) rex.RX shl mov pop sarl movabs (bad) rex.WXB xchg cwtl rorl pushfq (bad) (bad) rex.WRXB mov shll mov sbb jl (bad) or (bad) jo je test jge pop add lret rex.W (bad) cmc (bad) rex.WRX test (bad) pushfq jnp stos rex.RX add mov rex.WRXB clc push xor ja fadd (bad) decl push rex.X sar int cmp mov movsb movabs fisubr sbb mov out ror adc mov (bad) mov and cmp lret out retq push decb nop rex.WRX sti xchg cmc rcll mov mov cli sbb jmpq iret (bad) (bad) icebp (bad) add movsb jmp and push in callq jrcxz (bad) rex.RX orl mov rex.WRXB addr32 mov jb outsb sbb in rex.XB shr mov pop pop adc cmp (bad) leaveq loop sub roll jbe push repz clc mov fldt test push in fstps rol lods mov jp std rcr xchg sub jbe mov (bad) movabs pop mov xchg cmc sub lret (bad) sbb mov xchg xor iretw push (bad) (bad) ja lock mov repnz adc (bad) mov or icebp pop insl rcrl fadds stos popfq mov rcrl and iret (bad) mov mov (bad) addr32 cmpsl xchg cmp adc fs cli insl out jge test cmp rex.WRX jbe or xchg sub int3 rex.WRXB imulb movabs stos mov repnz push xchg mov (bad) jns callq scas loope (bad) out rol pushq xchg rorl add and out mov lret or adc mov (bad) mov sbb and jl mov jns pop repz sub cmovne (bad) es rex.R shll xor enterq vmwrite lret lret loop int3 movabs rex.R jb fidiv push out ds mov push (bad) insl rex.WX add outsb rex.WRB and nop pushfq pop outsl and rcr pop sbb loope mov scas (bad) sti jo shll (bad) scas stos fildl mov sbb rclb (bad) shll jne rcll mov shrl (bad) xchg ror pop int mov add sub sbb (bad) mov rex.R rcl jrcxz pushq fnop popfq js (bad) pushfq (bad) insl adc pushfq jbe xor (bad) loopne rex.RB rex.X rex.WB iret scas gs push shrl roll movabs pop adc sbb loope xchg loopne xor (bad) xchg stos retq lods (bad) xor subl xor and test retq int3 mov pop movabs cmc xor xor jnp jns pushfq xor test and insb (bad) rolb out cli or stc (bad) xchg test adc adc movabs shr add sti (bad) jg shrl xchg imul test push rex.X rex.X jno movabs scas cmp rex.RXB lahf push bnd pushq and and rex.B (bad) movslq xor rep lret scas lahf pushq fsubl iret add clc rorl sbb rcrl jo and lret rorl insl loope xchg retq sarl (bad) jmpq rorl scas (bad) icebp mov jns xchg cmc xchg mov outsl pop roll fisttp xchg stc and nop and roll cld rex.X imul xor rorl test cmp mov mov movabs (bad) stos push adc (bad) pop pop (bad) leaveq movabs pop (bad) popfq adc add jp adcl rcrl (bad) (bad) jno addr32 callq loop sub xor add (bad) out movb sahf repz jmp or mov and rex.WR (bad) mov (bad) clc shll mov (bad) sub cmp popfq pop lock or enterq add (bad) jp rcrl cld (bad) int3 sbb addl es sbb pop stos add rcl incl movabs (bad) sub movabs callq or (bad) mov add mov jbe rclb adc jl mov mov mov sub xchg int cwtl (bad) in (bad) cltd rex.WB stc mov fldl add xor stos xchg sub test adc sbb jbe rex.X or movsl out (bad) adc push (bad) xchg popfq sbb outsl movabs xor rcll enterq (bad) add (bad) xor movabs xor (bad) stc and (bad) (bad) mov mov cmp (bad) rex.WX repz ror js xchg rex.RXB xchg sahf and rcr (bad) cmp sub (bad) pop retq repnz out lret xchg shll (bad) and adc fldcw in cmp mov in mov xchg rol ja jnp jrcxz int or out roll (bad) lock lahf (bad) lret addr32 movabs sti (bad) mov sbb jns push or retq loopne fwait jns shrl lahf loope shr jae xor nop test out rex.WXB jae fstpt pop jrcxz rex.WRXB rex.B fnop mov cmp adc and fucomp (bad) data16 pushq pop insl and rex.B push xchg loopne repz (bad) subl rex.WX pushfq shll mov (bad) je rorl mov mov sub (bad) mov rex.WRX fxch pop shrl shrl sbb rex.RB (bad) xchg mov sar movslq mov sub retq add pushfq mov mov shll ficomp cmp orl fidivrl sub jo (bad) cmc pushfq lods or shlb xchg movsl insl or repz in cmp and sbb lret mov (bad) rex.WX adc xlat xor lock or fildll (bad) xor cmpsb pop fcompl (bad) xor mov jo iret xchg mov mov sti (bad) rol mov (bad) pop jmpq xlat movabs pop loop sar and cmp pop scas movabs fnstsw push jp (bad) xor cmpsb push pop loope fsubrp test jnp callq shlb xchg enterq rolb pop jno or ja adc insb xchg (bad) (bad) ficompl rex.WRX movsl clc sbb rex.RX pop rex.WB mov cmp std repnz rex.RXB gs shlb (bad) mov insb repnz cmp mov (bad) sub cwtl lahf mov push (bad) (bad) lret ds or or insb add and pop (bad) cmpsb add test int lea pop xacquire jno (bad) test adc (bad) rex.WRB fisttp out (bad) sub rex.WR sub inc xorl retq movabs adc (bad) cli jmp lahf mov mov (bad) cmp (bad) pop mov test sarl mov lret movsb scas jg push cmp sarl rex.W (bad) es or es pop add jmpq sub rex.WRB rex.RB es movabs rex.RB pop movslq xor fcomp test lret in push (bad) cmp loopne lret repnz jno cltd movsl test neg je rex.WRXB rex.WRXB lock jmp jl movslq lea and mov (bad) push mov loope fmull adc rex.X nop cli xor cs movabs cmp lret (bad) fsubrs subl push xchg rex.B pushfq outsb jns adc (bad) test sub (bad) rex.WRB in (bad) (bad) sbb mov (bad) xor (bad) xlat xor popfq sbb stos jne subl fbstp add and cltd lock add xor rex.WX (bad) clc fistpl mov (bad) xor lods (bad) fldl rex.RB retq test mov add movslq pop jb fsubl (bad) pop clc sarl mov scas fldcw jp rclb adc push or xchg int lret (bad) movabs xor fwait shll (bad) sub xchg rcrl push xchg pop xor out lods callq faddp adc adc roll jae jle xor clc xchg pop sbb rol jnp (bad) (bad) pop add mov rcll sub (bad) sub iret movsb je stc (bad) mov add add lahf and and jmp test jmpq rcrl (bad) out mov fxch scas and loopne rex mov movabs sbb sbb (bad) or (bad) lret (bad) (bad) (bad) lods rex.WRB xor or sub sub (bad) movslq and (bad) rorl jno roll mov rex.RB repnz (bad) mov push fnstcw sub rcr mov (bad) repnz es xchg callq xchg movabs imul roll lods test and imul sub cli lea mov (bad) xor loopne lret movabs jge sti mov adc jo scas (bad) cmp movabs in in sbb push rorl lods (bad) sarl rex.WRB loopne (bad) (bad) (bad) pop out iret adc (bad) shrl xor cmp mov sub xor cmovnp and movsl movabs pushfq (bad) mov jns stc rex.XB jno movabs xchg imul bswap pushq insl mov (bad) sub shrb xor loopne rex rex.XB mov add outsl outsb jns test cmp (bad) (bad) fsub (bad) (bad) mov xor fdiv int3 adc lcall jno (bad) rex.WXB mov cmc (bad) rex.WRXB ss push sub mov xchg mov sbb xor fisubr mov cmp (bad) ror shr (bad) rex.B fmulp fbld icebp es pop jns add loop or test int3 mov fwait rex.RXB clc (bad) xchg (bad) adc or in (bad) xchg jmp rcr scas and jmp sub (bad) (bad) shll lret mov fmuls sbb test mov icebp (bad) loope js enterq rorl mov rex.RXB xlat lahf cli cmp fldt cmp and sub or pushq (bad) rex.WRXB icebp cmp sub mov stos pushq jne outsb jmpq shl (bad) int jrcxz frstor jmp fist mov sbb pop xor movabs rex.WRX rex.WRX xchg enterq push insb (bad) icebp pushfq sar fxch test add repz cli mov (bad) push rex.WRX rcll jno mov scas nop xorl mov (bad) mov cwtl imul movsb loop ja lret jmpq (bad) shrl hlt (bad) cwtl mov (bad) mov sbb and mov and enterq (bad) and lret pushfq leaveq pushq (bad) xchg mov icebp repz frstor mov faddl lods je adc rex.W rex.RX fimull rex.R (bad) or movabs in stos rex.R negl (bad) mov sub mov (bad) rcl and xchg rex.WRB mov rex.WRX addr32 push sub fs int3 rex.W fisttpl iret or lods cmpsl or mov adc rex.WXB out sbb outsl jnp frstor jmp loopne movslq cmp movabs (bad) in pop sub outsb mov fcmovne repnz repz jne (bad) and rex.XB (bad) test fidivl or (bad) in add pop jae xchg mov movslq (bad) (bad) shrl sub add or rex.WRB stos in mov (bad) shrl adc movsb (bad) adcl shlb sbb mov enterq (bad) stos (bad) sarl mov test or xchg mov sbb rcll int (bad) (bad) jl rcl (bad) fucom rex.WRB rcrl std cmpsl mov shll repnz sar (bad) or mov test lock ds rcrl rex.W and (bad) push movabs (bad) jo push (bad) and or sahf lcall shrl jl (bad) fistpl stos incb test mov (bad) and or stc iret push pop (bad) jle lret jae mov rorb (bad) movabs rex.WX (bad) movabs test (bad) (bad) sub rex.XB jg in in (bad) (bad) js mov sub (bad) es loope shlb lock insl jmpq xor sar add xor es test rorl in ss xchg orb and pop cmp jbe out rex.X and (bad) cli (bad) cmp rcll (bad) cmp faddp movslq xchg rex.WRB cmpsl sbb xor (bad) jno sbb rex.WRXB mov cli leaveq mov add (bad) enterq cmp pop mov push cmp repz cmp mov je xor mov jb movabs xor and icebp (bad) in (bad) loope fsubp (bad) mov rex.WRB lret cld (bad) (bad) int3 retq sar pushfq xor jg add div sar mov int xor or movsb (bad) out mulb repnz cmp (bad) push sub mov sbbb fisttp cmp jmpq adc xchg (bad) jae (bad) mov rex.B pop and iret sbb fs notb pop stc sarl scas sbb cltd xor and cmp cli roll (bad) (bad) xchg add mov (bad) rex.WX std rex.XB sub jno rex.WRX sarw fs and lahf rex.XB (bad) xlat sub and shll or (bad) roll ds sarl add lods jrcxz sbb frstor (bad) movslq std mov popq out in push push mov (bad) rex.B pop shrl adcl xchg and add cmc (bad) jp outsb test mov int (bad) js movsl movl jne (bad) sbb lret (bad) sbb sbb mov cmp rol lea fs ss (bad) mov nop (bad) (bad) mov out rcll mov sbb (bad) pushq sbb mov hlt mov mov rolb shrl jae,pn (bad) jp movabs idivl jmpq movsb rex sbb rcl pop mov sarl insb lret (bad) jg push enterq retq mov fcoms cmovno (bad) int3 shrl cmp push sub adc rex.X rcll test movabs rex.RB fstpt addr32 rex.R lret (bad) push or xchg (bad) adc (bad) callq xchg (bad) negl (bad) lock rex.RXB fisub push rcrb and cmp mov rcl loopne movabs push rorl (bad) (bad) or iret sub push rcrl out scas sbb cltd sar (bad) jnp adc xchg std out out mov ja divb add fidivr jae clc and xchg mov callq jnp fwait callq jle rorl shrl (bad) xchg out sbb mov jns (bad) (bad) sub jne imul loopne (bad) mov std pushfq out adc sarl (bad) xor cs cmpsl lahf scas ffreep in iret sub sub (bad) mov (bad) pop and (bad) add out (bad) or scas jne rorl test (bad) mov ds gs test shrl mov repnz mov scas repz ss sar adc xor jle mov (bad) (bad) and pop in retq int3 mov sbb (bad) pushq xor (bad) (bad) rex.R imul cmp int jrcxz int adc loope movabs (bad) or pop mov sub xlat or (bad) rcr clc pop callq cwtl sub lock sar rex.W rex.WX lods add mov (bad) fcomi cmp (bad) (bad) (bad) iret (bad) cwtl pop fbld rcrl (bad) loope xor jae sub test cmpsb in rex.W test repz xor orl sbbl (bad) adc mov rex.RX rex.RXB rex callq and add shl jne insl cli and pop sub out mov mov fcoml mov jnp (bad) cltd add (bad) add imul (bad) idivb fisub (bad) sbb (bad) sub sbb push sbb fstpl rex.WR sbb push lea xchg loopne jne add fnsave cmpsb test or icebp mov fnop pushq fdiv in (bad) rex.R add leaveq int3 fisubrl mov addr32 es je xor fsubl cli xor (bad) enterq push fs push repnz retq sub adc adc (bad) mov faddp repz jo push fistpl or fcompl pop rex.WX leaveq test xor (bad) mov add rorl mov fdivrs add cld pushq icebp xchg xor (bad) lret mov and sbb sub pop xchg add cmpsb rex.WX jae mov jo mov fbld mov out jrcxz xorl adc lret int3 push sub in (bad) bnd mov mov pop (bad) lods push mov movslq vpmaddwd jrcxz test fidiv push retq jle and in out loope fwait xor rex.RB movabs add xchg rol jmp (bad) js bnd cmp faddp in xchg xor xchg stos sbb cli icebp scas xchg (bad) pop fdiv in (bad) movabs sub ficom pushq sbb jp movsl (bad) int3 fmull in not repnz (bad) and (bad) rex.W imul faddl (bad) (bad) rex.WRX repnz and jrcxz repz cmp fsubr rol mov xchg (bad) mov cs (bad) loope xor shr fmull rex.RX mov pop out lret sahf and rclq and xor xchg add jge mov sub mov sti out xchg cmp (bad) mov lods lret inc rex.WX movslq js mov movabs pop shll rex.X or cmc iret in loopne (bad) (bad) je add mov rorl mov sahf and lods vpcmpeqw jns mov sarl vpminsb roll (bad) pop rcr (bad) mov (bad) mov push (bad) or outsb in xchg insl (bad) lock push xchg scas (bad) pop sbb pop pop rex.XB outsl jmp rex.WRB (bad) sub (bad) mov (bad) (bad) cld es sbb mov mov repnz adc lret out xchg push jp (bad) cld lret push retq mov stos rex.RB jns outsb insb andl rcrl jp (bad) hlt fidivr (bad) js int3 negl rcll adc mov adc repz repnz test scas rol (bad) and jo (bad) shrl add roll or mov pop push lock lods rex.RB push (bad) sar int3 ja (bad) test ror sti jb mov rorl jg mov or rex.B cltd out pushq cli and movabs rex.WRXB or adc add and jae sub (bad) repnz sbb mov repz mov in push loope pop movb ja jno icebp mov outsl cs sub callq insb jmpq (bad) imulb fsubrl xchg adc rex.X lock xor rex.XB (bad) jno sbb lret ss adc roll in bnd fwait rcrb movabs insl lret callq (bad) (bad) pop mov test xlat (bad) lretw (bad) rex.WRB (bad) loop add in jmp push rex.RB stos mov rex.XB sub rolb cmp iret rex.WR movabs jno sub fcmovu rex.WB jno adc xchg imul test add je (bad) mov out (bad) add int3 add or (bad) xchg (bad) sub int3 fmuls add mov cld adc mov xorl fldenv or xlat (bad) loopne add int3 in push (bad) repnz lods icebp cs outsb mov repnz imul int3 fdivrs loope cmc (bad) cmp xchg lahf loop clc jno ja (bad) rex.WX lahf lods xchg mov mov enterq je jp (bad) insb rex.XB adc (bad) xor xor rex.RXB fcmovb mov in (bad) sub mov movabs cmp and sbb sarb fisubr adc adc fs mov (bad) mov push mov loope iret callq and xchg fisub sbb jno (bad) mov retq adc sub mov rex.WB clc sub fsts js (bad) pushq mov icebp (bad) xor mov movb adcl lods xchg (bad) out mov ficoml rex.WRX mov vmovq movabs pop ficom outsl add (bad) and sub out movslq rex.RB je cwtl clc out movsl jne mov xor xor jae mov rex.RXB jae add retq xchg adc mov sbb (bad) fs lret (bad) mov nop add rex.WR in test cmpsb lods jg (bad) or mov pushq (bad) xlat rex.XB lods ss enterq outsb stc jns add sbb (bad) mov iret movabs rol pop xor rcrl js push fistp jbe popfq lods mov jae mov adc fstl jns mov adc callq enterq outsb cli add int callq fcmovbe mov addr32 add (bad) xor movsl (bad) jo fcoml sub (bad) in (bad) mov stos je insl add rex.WRB fildll add pop sti ss (bad) enterq or cmp callq (bad) leaveq cmp iret std pop test enterq fnstcw mov xor cmp mov callq in jne sub and (bad) rex.WX sub rex.WXB es mov shrl icebp xor pop std (bad) fwait (bad) or and mov (bad) cs shl and or icebp rol or leaveq jnp (bad) (bad) add outsl sub movabs retq push jp int jl (bad) cmp stos or addl (bad) fisubrl int3 shll sub (bad) lret pop in mov sarl test rol fsubrl cld jmpq lret add retq and or cld and pop jno rex.XB (bad) fcmovnu iret (bad) jg cmp rex.R jno (bad) loope out add (bad) sub imul cld rex.WB (bad) rex.RX xchg (bad) test jno sbb leaveq mov mov sbb out (bad) adc (bad) (bad) cmc fwait (bad) mov push pushfq ja rex.RX fsin rex shlb mov rcr xchg xchg negl jmp sbb pop lods rex.RB retq out sub mov and leaveq ficoml fisttpll test adc (bad) lret and int3 (bad) psrlq cmpl ja jl mov rcr rex.RX movsl (bad) pop lea cmp fcompl callq push mov orb (bad) (bad) int push test rex.XB retq fdivl movb jg lahf sub movsl outsl rex.WR pop jo cld adc cmp sahf jae rex.WRB rex.XB (bad) sbb callq mov rex.WR rex.WXB lods mov jge fiaddl cmp lret test (bad) callq and push (bad) mov rex rex.R test rex.WX mov jno rex.W fs (bad) sbbb jmpq mov pop ds adc (bad) adc push rex.RXB rex.X (bad) imul hlt loopne lods int3 rex.RXB push retq je jbe insl jrcxz lret retq stos rex.R out movabs int3 insl jge shl mov retq std mov jno cmp repz hlt xchg mov mov sbb pop in add rex.WX (bad) sub (bad) pop sarl rex.WR rex.RX insb shll cmpsl rex.RXB ss loope xor mov ds rcll mov rex.B rex.WR mov in mov lret jl rex.WRX iret or movslq test sbb ds sbb outsb hlt callq (bad) rcll cs add add data16 jne mov test xchg in sub and iret std leaveq xchg mov shrl and insl xor cmp jns scas mov mov ja test cwtl movsb loop (bad) push (bad) jl push outsb (bad) push scas movabs repz cwtl jmp shrl rex.R rcl xor ja icebp add insl mov (bad) jo adc andl rorb jl mov or roll sub rex.WRB vpminsw movl shrl mov (bad) and rex.W cs fidivl rcl rex.X repz rorl lods std xchg mov idivl sbb movslq callq (bad) iret (bad) pop cmpsl (bad) and (bad) movsl fadd xchg pop sbb enterq out lods shrl int3 pop rex.WRX jae xor cmp callq add (bad) rex.WRB (bad) fild jle jle or fimull imulb insl stos (bad) and push xor jmpq rex.X icebp mov xlat imul (bad) sbb fidivl (bad) orb idivb shll scas mov sub movabs (bad) mov out jnp shlb rex.WR jo pop repz and (bad) mov hlt push rorl mov or sbb mov sahf mov rex.RX icebp out mov mov outsl in cli outsb retq pushq mov (bad) cmpl pushq loop mov or sub js (bad) hlt push cmpb sub js xor xchg sbb pop mov rex.WX leaveq jno cmpsl adc add push mov test lods fldt pop pop ss (bad) (bad) std retq sahf sar cli pop rex.X jae mov outsb rex.RX (bad) pop (bad) scas je add rex.RX add jg iret in cmp cmp rex.WX test mov cmc adc (bad) repnz mov cmp jb int3 sbb mov xchg int divl pop rex.RXB or or retq or iret pushq jge out roll lret xor setge xor push scas rorl rex.XB sub and mov pop jl push std and sub std cmp lret mov push (bad) xor movsl or gs ror outsl cmovne cltd sub or lahf lods sbb (bad) jnp mov (bad) cmp add loopel movsl and push xor (bad) rex.RB ss mov pop cltd imul (bad) lea lock sbb hlt add shrl xor sarl fsubrs rex.W test cli xchg repz push in mov stc cs mov xchg lods retq in sarl xlat mov add jmpq movabs ffreep pushfq neg pop cmp adc rorl and (bad) xor push rex.WR addr32 cmp sarl clc sub mov and movabs lahf sub cwtl sarl nop jns jge loopne mov loope add add movabs es jae insl vcmpsd sti (bad) jg (bad) mov movabs fisttpl rex.WX outsl mov shrb shr push lea ss imul xchg lods int3 or mov fcmovnb cmp (bad) movslq ss shll mov jno rex.WRX gs test rex.W (bad) movabs in rex.WB (bad) xor rex.W (bad) cmp js adc repnz popfq icebp (bad) rex.B rex.W or (bad) in add std nop (bad) stc popfq (bad) rorl jle ljmp fbld push imul sub add loopne xor ficoml push sub ds repz sti sahf jb rcll jae cli retq in (bad) xor rex.WX sahf mov loop push data16 ss shlb (bad) sbb retq (bad) in cli xchg sbb movabs xchg xorb lahf fcoml rex.XB repnz xchg pop sub cltd rolb jmpq cmp add sbb (bad) mov ss (bad) pushq rorl popfq (bad) shrl shll sbb jb push rorl mov and fisub or rex.RB (bad) lret jg imul adc push jae fcomip push rcl orl sahf cli push cwtl std sarl out jge push iret mov adc sbb js data16 rex.XB mov pop push js pop in add rex.WRXB lods shll xor fidivr fwait pop movsb fisttpl (bad) (bad) cmpsb insb pushq or (bad) lods leaveq movabs (bad) icebp (bad) in std add jp lods (bad) sar cmp pop scas jae cmc sahf jno push jnp cli roll xlat rol cmpsl (bad) mov cmp (bad) andb (bad) pop push (bad) retq add xor (bad) insl fstpt cmp (bad) sub negb push loope fcoms (bad) rex.RX repnz rex.WRX cmp movabs adc movslq (bad) fcmovnu fsubl lods sbb (bad) mov (bad) (bad) loop repnz xchg rex.R rex.XB ss (bad) xorl sbb bnd movabs (bad) (bad) add jb (bad) (bad) test lock hlt (bad) mov retq movsb addr32 movabs adcb or xchg test enterq callq lock mov std outsb icebp fildl mov test scas and mov out jmpq and mov adc pop sub retq cmp and adc sahf jle lods jne roll imul (bad) sub adc iret fistl movslq (bad) lock rex.WB rex.WRB xor movabs jae rorb (bad) xor (bad) sub sahf xchg jns xchg push (bad) cmp (bad) movslq sbb add rcl sub pop (bad) adc mov sarb movabs (bad) cld (bad) lea sbb pop loope adc xlat rex.R push mov movabs movabs out (bad) sbb cwtl sarl rex repnz callq stc xor adc repnz mov (bad) je xlat js xchg pop sbb mov (bad) pop (bad) shr fwait and sar jle or movsl rcrl jrcxz rex xchg add movabs (bad) xor insl mov (bad) add xchg loope repz xor mov lock (bad) jne jnp adc (bad) movabs mull (bad) jo roll cmpl jmp (bad) cmp rcrl rex (bad) jb mov mov add in add or adc xchg (bad) sbb sub pushq mov (bad) (bad) (bad) cmp (bad) callq xor roll decb jge (bad) (bad) add movslq in cwtl rex (bad) sti jl adc cli cld (bad) (bad) (bad) in mov fist js xor sarl (bad) fisubl iret jmpq jo testl adc movabs rex.WRB (bad) imul rex.R mov imul decl cld pop rex.RX insl cmp popfq test stos sbb lret or xchg and lea jno pop (bad) movabs cld xchg outsb and out lea imul mov mov mov fwait sub (bad) rex.WR add fs jg rex.WRB stos (bad) (bad) jo out ds push mov jle xchg jl cmpsb or (bad) jne jmpq test loop sub int3 (bad) xchg jmp mov pushq test test fdivrp rex.X add pop sarl mov movabs (bad) enterq rcr stc rex.B (bad) in mov imul cmp (bad) jmp movsb adc lret add imul movabs rorl (bad) lahf sbb repz mov pop movsb cli jne cmpsb mov int3 or es mov fwait movabs jl lret je pop xor movsb cmc jmpq sub sub jrcxz cmc repnz fs popfq and mov rex.WRX cwtl repnz (bad) rex.WRXB shl (bad) rex.RX lret xor or pop cmp (bad) imulb (bad) imul or enterq rcrl sbb (bad) push add int3 push rex.X sbb xlat ja nop xchg lret sbb jno rex.WR fildll add jns fabs (bad) or rol mov sahf sar fcmovnb (bad) or retq mov loop js lock rex.WRXB movabs (bad) sub xor pushq pop push rcrl xlat lret repnz adc xchg xor rex.WXB rex data16 cmpsb pop repz (bad) mov adc mov gs mov shl cwtl in xchg or jnp f2xm1 (bad) jo mov repz (bad) mov mov rcr adc xchg rcrl sbb fwait push mov stos roll movabs add nop shr sbb pop cmp jmp (bad) cmp retq andl icebp sbb mov shll rex.WRXB ss mov mov mov rcll rcrl rex.W lret test mov xchg stos mov sub (bad) jb loope jne mov repz fnop sbb cli ficoml fisttpl jbe jb popfq pop lahf lret jmp add js rex.WR stc jl pop ss rex.WRX mov cmpsb (bad) adc pop push (bad) jb pop test and mov rex.B jrcxz and not cmpsl callq (bad) jo xchg shll jle xor insb rex.X (bad) fstpt repnz lea movabs pop xor (bad) (bad) pop fldt add jno xchg outsb (bad) movslq imul cmp shrb rex.WRX fwait add or js pushq clc xorb add xor mov (bad) cs mov (bad) mov ror (bad) jmpq (bad) or lret out sbb pop in adc in scas add sub (bad) cmpb push sub add (bad) xlat cmp jle jrcxz retq rex.RXB rex.WRXB sbb sbb and (bad) fisubl stc movslq or mov jmp push fidiv (bad) xchg loope repnz (bad) jle mov cmp hlt push imul rex.WXB in adc push rorb sub xchg (bad) cltd xchg icebp rex.WRX or add cmc and (bad) xchg xor or ltr pop add (bad) popfq lock lret (bad) outsb movabs out test xor xorb xchg pop loope fist rex.WRB fstpt mov movabs xchg movsb fcoml stos sti fildl rex and or sti (bad) (bad) (bad) stc pushfq callq add stos adc sub rex.R movslq mov mov mov fisubrl rex.WR (bad) shll mov ds (bad) js test mov (bad) jp icebp rcrl jg shrb mov mul add cmp loope sub fdivrl (bad) jns rex.X gs mov divl adc iret enterq (bad) movsl shll roll (bad) and movabs ss mov sarb add xchg push in sub adc xorl (bad) in (bad) push mov lret stos rcrl data16 cltd movabs loop fnstsw fnop rcll imul push xchg sbb add cld pop stc ds (bad) sbb shrl es mov (bad) popfq pop (bad) rcrl add stos rex.RX mov shll jp (bad) add xor (bad) mov mov pop and add rex.WXB pop shl jge fcmovbe (bad) insb rorl adc cmc enterq rex.RX decq cltd push jp push (bad) stc (bad) (bad) or decb (bad) icebp bnd lea jge xchg lret jno std test cmp ja adc mov pop fsubrl (bad) adc lock ficompl fldcw mov add and stc jmp imul mov mov loope mov repnz pushfq lock test callq or cs adc pushq adc rolb sub and fmul sbb jmpq rex.X rex.WR in loopne push xlat push (bad) rex.WR cli xchg adc mov and ja cmc stc mov push add xchg clc xchg lods cmp sub add (bad) add enterq ja loope outsb (bad) or mov in and stc cwtl int3 add xlat xor jp (bad) repz adc mov movabs jp (bad) sub jnp lock xchg and out jnp out (bad) jnp sbb mov addr32 jno jle subl notb adc xor mov (bad) (bad) rex.RX lock xor (bad) sbb mov test push push imul adc (bad) adc xchg sbb rorl adc pop sub mov sbb (bad) cld iret shll (bad) ds outsb xlat or sbb sarl callq in xor jns (bad) rcrl shl mov jrcxz cwtl leaveq (bad) out mov push jne pushfq push pop in (bad) mov sbb and cmp clc (bad) outsl rex.R (bad) shrl mov lret add lods rcrl rcrb lret movabs out roll adc mov mov movabs add movsl in mov rex.WRB (bad) xorl add mov mov rorl (bad) lahf out rcr leaveq or movabs rcrl jmp (bad) sub add xor lods (bad) repnz fisttp rex.WX addb cmc (bad) and and and enterq movabs adc (bad) sub movsb (bad) fistpl (bad) or (bad) lret xchg pop jns (bad) (bad) (bad) fsubp pop (bad) or jmpq sub rex.RX out (bad) cmp test test push pop xchg movb lcall outsb shll nop jl jge adc adc fidivr xorl sahf nop and js pop rcl (bad) jnp sarl in cmp movups or outsb cmp out kandb imulb sbb mov sub jmpq mov sbb jbe adc add fnstenv add callq or sti xorl icebp rex.XB fnsave sub movabs lahf pop sbb mov sub or (bad) fnop add (bad) fistpll cmpps cmpsb cmp rex.RB pop mov idivl mov sti cltd (bad) movslq rex.WB xor test faddl imul or mov xor add mov xor ds jnp xchg sbb mov push rex.WR rex.X pop xchg sbb and movabs add or (bad) mov fdivr sub mov sti add cmp (bad) rex.WR pop sbb xor xlat xchg xchg ss jo in xor callq mov rol (bad) loopne xor ffreep sbb sbb outsb (bad) sbb movabs rex.W rex.WRX movslq (bad) loop (bad) pushq (bad) cltd adcl rex.RX cmc (bad) mov mov out lea jno jg and fwait cmp mov sbb (bad) sub rex.RXB popfq (bad) lahf loope lret mov mov rex.WRXB (bad) popfq xchg cmp push andl es mov mov xchg rex.WR rex sub subl jnp xchg callq fst fdivs and xchg (bad) fs (bad) loopne jb fildll mov xor mov mov mov hlt rex.B pushq sti (bad) rorl pop scas insb loopne (bad) outsb jl jns pop (bad) loope (bad) cmp adc sub (bad) or (bad) push xchg movups hlt rcll cmpsl xor (bad) push fsubl (bad) (bad) lods adc (bad) xor cmc (bad) adc xor cmp mov lea adc pushfq enterq movsb rex.RXB repz lahf sub rex.RX (bad) jo (bad) (bad) mov and iret xor js out lret mov sbb rex.RB movabs push (bad) lcall int add movb sub jg pop jle adc mov adc shll iret loope jns ds mov fwait (bad) jl mov popfq addr32 xor cltd xor or sub push mov rex.RX sub (bad) ds sarl mov pop cli adc je rex.RX shrl (bad) xchg shll mov (bad) pushq jns mov rex in mov stos rcll (bad) cld mov mov mov and sub mov repz (bad) rex rex.XB shll add mov adcl rex.RX cmp ja shr xor iret fiadd fstl and int out pushfq pop fidivr jmp int3 int3 ror mov rcr repnz jae jo rcll rex.RX or mov xor fsts xchg (bad) jg (bad) scas std (bad) pushfq add movabs sbb push test int lret mov pop (bad) rorl subb es addr32 sub pop pop rex.WR movabs jp adc leaveq xor fcompl test loopne cltd (bad) repnz int cs (bad) in sbb decb retq fcmovb xchg adcb rol mov rex.R rex.RXB cmp rcll std xchg retq out iret enterq insw sbb (bad) pop ja adc jmpq (bad) popfq sub shl sahf (bad) out rcrb (bad) fidivl xchg (bad) pop mulb add movsb pop cmc mov (bad) imul adc ja lods pop std movabs mov in xchg fadd rex in add callq fistp iret mov mov add xor subb addr32 pop adc lods push roll sahf lahf imul icebp mov cmp (bad) add mov shld rcrl movabs rex.WR int3 cmpsb testb mov je movabs (bad) movabs cli mov scas shrl (bad) scas rorl (bad) xchg add sbb add in mov cli jae xchg mov add cmpsb imul std cmp sbb or cmpsb lret stos jge mov incl test push (bad) fst or sar add mov movabs (bad) (bad) pop lret add (bad) or (bad) mov fild retq sub mov fchs loope xorb (bad) pop rex.RX fcmovb outsl adc in (bad) fbld fwait (bad) mov rex.RB rex ss imul fidivrl cmc shrl mov (bad) and rex.WXB rex.RB out jmp sub rcll mov sar xchg sbb (bad) and scas movabs imul out add std (bad) cltd imul lea rcr cmp fadd jbe idiv in mov out in add (bad) (bad) test xlat test sarl pop out nop rex.W xor mov movabs mov fs movabs add test hlt adc jns out movabs add (bad) (bad) xor xor pop sub (bad) jno mull outsl pop fist jnp cli repnz rex.X xor jp mov divl mov add pop adc adc sbb and (bad) roll (bad) jae fs adc pop (bad) add lock adc (bad) add ja jmp int3 or mov mov xchg mov adc adc in xchg cld sub (bad) sub imul sub adc rorl lahf mov jge add ss movabs sub (bad) cli test add lods adc cmp ja adc sbb (bad) out stc pop imul jno (bad) bndstx (bad) fnstcw mov (bad) cmpsl or rex.XB pushq repnz sahf and sahf push shrw adc and roll or repz add jbe pop mov test movsb insl mov fdivrl cmp fs ss movabs sub pushq rex.RXB mov and jge sar xchg shll movsl push sbb movslq sbb add imul test and pop stos mov (bad) jo sub clc popfq mov (bad) (bad) pushfq mov xor adc lea xlat xchg cmc push lods mov (bad) rcrl jmpq cmp pop pop rex cmp xchg (bad) in push and outsb rex.WRXB (bad) xor pushq sar lret out jbe mov loop pop (bad) mov (bad) outsl xchg add jns mov pop mov jp or push loope dec or jg faddl (bad) (bad) and (bad) mov and mov (bad) sbb push mov mov cmp rex.WRX jmpq insb sub mov fdivrs jnp (bad) xchg xor js (bad) in and (bad) sub (bad) or imul loop movslq gs je adc or cmc insb mov (bad) mov scas fcmovbe loop (bad) add or cmp or ror adc rex.WRXB int lods xchg scas cld fimul cmp sbb sbb addr32 roll stc add rex.RXB adc test repnz pop (bad) push movabs mov iret add pop (bad) stos sbb icebp or pop mov or and mov mov add mov (bad) movabs (bad) rex.WRB sub out sub mov sub cmp orl or imul xchg rex.WB rex.WRB es lods rex.WX cs in retq roll je cmp rex.WXB test imul (bad) adc (bad) std shrl loope rex.B xchg sbb (bad) fwait pinsrw stc rex in cmp (bad) (bad) cmp add rex.RX and (bad) (bad) roll jge shr sub adc andb xchg movabs movabs xor or (bad) cmp stos or jmp adc (bad) stc xor movsl lock (bad) fnstenv push jno in in rex.WX scas int (bad) mov xchg fcmovnb cmp jbe scas rex.WR (bad) sarl data16 (bad) (bad) xor clc push sbb pushfq rex.WR pop sahf (bad) fldl ja movabs fidivr sarl pop cltd (bad) es jnp pushq rorl rex.WRB (bad) test (bad) fildl xchg mov sub add push rcrl movsb int3 mov pushq insb (bad) add (bad) cmc add in mov cld jg jno (bad) sub (bad) pop cmp cmp leaveq (bad) addr32 sbb rex.WRX popfq rex.X rex.RB rex.WRX mov mov xlat (bad) mov rex.RX data16 pop fisttpl adc stc push scas clc ja adc (bad) fwait adcl out mov jecxz repnz loopne sbb (bad) cmc (bad) mov (bad) cmc pushfq (bad) cmpsb (bad) jo mov jrcxz adcb movabs lahf or mov addr32 mov or sub movsb stos xor rcrl push cli jg add rcr or test cmp rcrl (bad) jbe shll rcrl in lea sub negl (bad) in sbb mov shl fbstp repnz popfq hlt movsl (bad) (bad) loopne mov rex.WRXB stc push jno shr rex.WRB add mov mov jg add andl pushq (bad) enterq lahf test (bad) test xor rex.XB adc loope or sarl sbb cmp movsl hlt xchg lret in adc rex.WB mov test mov outsl movsb icebp loopne or pushq std (bad) loope shr pop outsb xor mov (bad) add (bad) push rex.WXB movsl movabs fisub in movabs callq iret in pop shl lock mov mov rex.RX repz repnz (bad) add test add cmp sahf enterq adc and fwait cli (bad) mov (bad) mov (bad) shr movsq sbb std mov rcrq (bad) cmp repnz rex.WXB fildll (bad) out and popfq xchg je repnz ffree subl adc push cli (bad) adc adc cmp add rex.W nop (bad) (bad) mov retq jp rex.WRXB shr or pop mov (bad) push (bad) cmp sti rex.B rex.X repz (bad) mov add loope rex.B callq and xchg movslq callq sbb insl rex.WRXB (bad) outsb sbb adc sub xchg rex.WXB test jb (bad) int3 push pop ffreep mov out cmp and scas sub rex.B sbb nop loope movabs fnstcw rex lods iret lahf callq jne and ror pop adc xor (bad) notb lods (bad) test (bad) fsts ja jge test xchg iret int and pop xchg rex.WRXB out mov rex.RX (bad) mov and mov or pushq in (bad) jno popfq ds (bad) shrb mov (bad) xor rex.WRXB lcall mov lods pushfq (bad) sarl adc push stos std bnd rex.WR test fldenv adc lret add add pop add enterq mov (bad) rex.B addr32 movabs imul jne fcmove xor mov mov (bad) push (bad) rex.R mov test mov int test xchg rorl (bad) jl jge fstpl callq rex.WRXB je lea (bad) movabs mov rex.XB in jp movabs pushq (bad) loopel ja,pn flds shll (bad) imul xchg mov sahf addl xor xchg xor movb pop shll cmp push sbb jb icebp add cmp fnstsw out xor cltd out (bad) cmc jrcxz add push rorl (bad) xchg (bad) stc gs idivl add in nop (bad) mov cltd lods in (bad) rol or (bad) ds fidiv fcomi pop movabs mov (bad) int3 (bad) sbb push (bad) outsb rclb mov mov add pushq (bad) out xchg xchg fadds mov xor decl (bad) xor pushfq jae retq movabs (bad) (bad) rex.RB fwait mov rex.RX addr32 or xlat retq sahf retq (bad) in leaveq mov fcmove push (bad) mov push rex.WB xlat rex.WRB (bad) lock cs sub divb rex.B repnz cmp adcb lods mov fistpl rex jl mov and add outsb cmp repnz (bad) shr sub popfq mov sbbb xlat (bad) (bad) loope add je xchg mov cmp (bad) (bad) rex stc es fsubrs test sbb fwait mov pop shrl fimull rex.WRB or sub xchg int3 retq movslq sbbl jge xor shll subl and gs (bad) (bad) nop in rex.WX add cmp pop loop rorl sti xchg movabs (bad) out add retq add (bad) es cmpsb and scas movb sbb adc repnz rex.RXB (bad) sbb int3 sub (bad) fsubp jg (bad) cmp (bad) jmp repz fsubrp loopne and shrl adc and mov (bad) (bad) rcl (bad) xchg mov enterq mov cmpsl rol pop mov in rcll rex.WRB ss xchg (bad) mov std (bad) pop or nop mov sbb pop push rol movabs rorl fsts (bad) jne fcompl (bad) (bad) fcmovb (bad) xchg mov and fwait mov (bad) or leaveq movsb xchg movabs pushq xor rex.RB or or scas xor sbbl cmp shll (bad) enterq cmp sti xor xor pop and (bad) xor imul cmp lock loope mov or testb fnsave xor movabs sub or rcr jrcxz (bad) cmp sahf mov mov add rex.WRX repz es roll sbb faddl loopne mov mov (bad) callq rex.B rex.WRB (bad) test lret movabs sti add retq fistl mov test loopne (bad) rex.X movsb fdivrp lock ja rex.RX sti (bad) ficompl cmc adc jo push hlt cmp out xlat cmpsl (bad) sub fwait rex.WXB and (bad) addr32 rex.WB rcl cmp pop imul (bad) addr32 rex.WB lss (bad) and lock mov (bad) sub cmc push rex.WXB sub cs movabs rex.W (bad) and fistpl rex.XB (bad) cmpsb (bad) rex.XB jge rex.RX mov add (bad) (bad) push (bad) sbb add sahf or fidivrl loopne (bad) (bad) movabs and loope loopne jnp or in js out vpmuludq (bad) out xchg pop rex.X rex.WR (bad) xchg jo mov xchg (bad) rex.WB rcrl mov xchg jne mov pop sbbl (bad) sbb (bad) fadds and push out loope mov retq loop cmp (bad) fdivrs rex.R stc pop mov (bad) outsl rex.WB xchg enterq hlt or cwtl xor or ficompl and sbb xchg movsb mov hlt mov push (bad) adc sbb or in rex.WB add push xchg (bad) out leaveq adc fwait and loop cmp test jbe mov and add and cs test test cmp (bad) and jns push mov lea adc in (bad) rex.RX fs or fwait and leaveq and int xor out test out rex.WB in movabs sub sahf (bad) movsl test cmp cs pop insl pop es es (bad) (bad) lahf rex.WRB pop pushq and xor mov push sbb (bad) nop jrcxz int3 mov icebp test hlt lret rex.B adc test repnz or outsb cmp cmp add mov sub pop or xchg ficom scas in mov int xchg sbb movabs (bad) vmovsd ja sbb mov add repz (bad) stc mov gs xchg jae movabs ja adcl pushfq shrb push and mov sub push rex.R xlat inc scas shrb jl movabs add (bad) sarl adc scas push roll cmpsb adc test xchg notb (bad) js jo std mov roll add pop xor cmp add roll push mov sub iret cmp xchg and sbb in enterq sbb (bad) stc (bad) pop lods test jo xchg rex.WR mov cmp mov xchg fdivl mov jne,pn rex.XB fadd je or (bad) ds lods loopne (bad) rex.XB add imul sbb stc iret stos add (bad) xor movabs mov jp or nop mov xor (bad) cltd pop mov (bad) loopne pop cmpsl (bad) retq scas addl fbstp sar rex.R insl (bad) xchg jmp adc pop mov rorl sub xor rex.WRXB mov jmp (bad) pop out jge sahf jbe ror jnp xor rcl sub out add (bad) jae rex.R sub int3 retq (bad) (bad) and repz add (bad) (bad) cltd shrb andl and xchg mov mov mov rcrl pmaxub jp (bad) cmpsl movabs insl test lcall or movsb rex.R jle roll es jp shrl (bad) data16 out (bad) in jne callq add jno mov mov idiv xor (bad) jmpq cs xchg roll (bad) sub pushq pop std movabs test stc retq mov int3 iret test xchg mov test fwait loope movabs (bad) (bad) xlat xchg mov mov pop xlat jp hlt add push out xor sarl rex.WR pushq mov insb rex.W rex.RXB cmc (bad) jno xchg rex.RB mov testl lret adc rex.WRX xor pushfq (bad) jb movsl cli shl and adc hlt rex.X and js (bad) add and adc jl roll rolb mov test out cltd jae repz imul push popfq (bad) fmuls adc jmpq rex.X rex.WB repnz mov rex.RB rex.WR loop rex.WRB adc out (bad) retq enterq (bad) jno shlq pop repnz rex.B pop (bad) divl data16 lahf fiaddl pop mov insb rex.WR retq and jmpq (bad) rex.RB cmp sub je sbb pushq movabs gs icebp pushq (bad) (bad) fildl rorl icebp roll xor or and pop incl lret out movsl xor movabs (bad) shrl and sub rcrb clc (bad) rex.WX push movsl (bad) pushfq and repnz (bad) repz cmp fwait loop lods cmp pop (bad) test rcrl add shl jne xor jnp mov jbe (bad) jmpq in xchg (bad) xor ficomp je lock xchg mov xchg (bad) (bad) jnp rex.RX fwait xchg and outsl insb (bad) cltd pop movabs or (bad) rex.WRXB pop fsubl sub std loop and ror stc xchg test cmp in fcmovnbe xor callq (bad) rorl pop pop and (bad) sbb fimul movabs pushq (bad) fcmovnb mov test (bad) mov popfq sahf insb xchg iret rcrl cltd pop stc fisttp push sbb in jp or (bad) jmpq (bad) retq xor stos pushq fidiv rex.X push xchg sarl push mov rcr mov fs rex.WR lods stos mov mov scas idivb and movabs cmc test (bad) xchg rex.RXB mov (bad) xor outsb adc and or cwtl mov (bad) leaveq adc push push repnz sub mov sahf push and jbe (bad) cmp mov ja adc (bad) adc xor rclb movabs (bad) adc je rcll pop (bad) adc (bad) (bad) xchg rex.B scas ficom enterq fwait in rex.RX int3 jle add movabs callq div movsl adc movslq repnz test sub rol add icebp pop rex.R push repnz rex.RXB addr32 rorl (bad) xlat sbb mov movabs scas fbstp and pop (bad) xchg (bad) (bad) ja clc loop out (bad) scas fsubs or pop lods push bnd ja vsubsd lods rcrl xchg rol xlat mov push mov int3 loop jns orl mov xor (bad) xchg shrl and cmp add sti mov (bad) imulb cmc jo rcr shrl sbb cld shr rex.W add outsb (bad) (bad) mov and cmp adc mov out pushfq jge pop (bad) push mov int (bad) adc sahf and shll rex.W retq repnz (bad) fild xchg jnp (bad) jmpq xchg negb sahf (bad) js xchg mov ja jmp cmp rex.RX rex.W outsl loope mov sti mov mov (bad) jb sub lods (bad) lret fistl (bad) scas movabs shll adc and xchg (bad) mov movabs jno or js and and jne rex.W or lods jns ja lods (bad) rex.WX mov leaveq cmp jb (bad) jge push stc (bad) add rex.WRB icebp add test mov (bad) mov sub ficoml jmpq retq in rex.R add fnstenv in or mov push rex.WRXB or xor imul int3 mov rex.X cmp ror sub cli ds or (bad) rorl jb test rex.WRX ds (bad) pop (bad) mov rex.RXB rex.X add loopne callq fisttpl rex.B rcrl (bad) rex.X enterq sbb or mov push fcomip push test lret mov adc xor push xorl or cmp fsubrl add (bad) mov rex.R adc sbb lods loopne psubsw rex.WX or cltd lret fdivrs push rex.WRXB jmpq rcrl (bad) sbb push clc (bad) out rex.XB in enterq add lods vrsqrtps movabs cmpsb jp adc mov outsl loope fstps test in loopne rex mov pushq outsl insl mov std addb icebp fisttpl adc rex.B mov lahf pushq sub or fidivl xchg sbb fidivl rex.WRX push mov pop rcr repz jae add loope or loopne pop jle xor mov fistpl jns pop and xorb (bad) je rex.R mov cmp mov mov adc jmp mov (bad) xor fldcw rex.R es mov (bad) hlt cmp (bad) rex.WX imul mov mov andl movabs jne pop pop jae xchg and (bad) sbb adc test cmpsb adc loope jg or int3 xchg jno sbb pop mov and or je jp xor js retq and cltd idivb test pushq pop cmp roll mov jmpq (bad) movslq fs mov rcr fildl and clc add cmp mov xor add xchg repnz rex.B repz hlt (bad) loopne (bad) mov (bad) or or and cmpsb add xchg pushfq loope int3 repz je sub add (bad) add and rex.WB xor cmp (bad) shl pop sub (bad) cmp movb cli lea andb std pop gs add (bad) adc cld add rcrl insb hlt cmc cmp sub (bad) (bad) mov rex.XB rex.XB repnz xchg ss and rex.RXB sbbl movl leaveq rex.WRX jo mov mov es loop in add add enterq (bad) push cmc in rex.RXB retq xor xor mov nop test sub add cli scas rcl fdivl rex.R lock jae out (bad) rex.WXB and sub push push rex.RXB loopne or lods fildll and stc (bad) movabs subl (bad) (bad) fdivrs xor rex.B add repnz pop adc lods cmp (bad) repnz mov (bad) fild fidivr rex.RXB in fmul add roll cltd je je mov pop mov sub enterq cmp jno rex.RXB rex.R and movsb callq jmp fcompl xchg sbb jmp fistpl faddl add or xchg rex.W sbb (bad) faddp lret bnd test (bad) pop xchg fnsave adc negb fist retq lahf rex.WXB jns,pt test rex.WRXB mov shr cmpsl loope rex.RB jrcxz lret sbb out push divl repz adc sbb in pop mov insb pop rex.WR push test fs (bad) iret (bad) lahf mov out xor cmp mov repz orb int push xchg jno adc add vpsllq mov outsl es decl test pushq mov sti (bad) rex.XB (bad) fdivrl leaveq (bad) hlt leaveq vsubpd jl xchg int mov sub rex.WR adc jg int fldl callq adc mov rex.WR fxch cld lods mov jo leaveq (bad) lahf loopne jo in mov sbb rex.WRX mov imul int3 rex.X fistpl jns cmpsl es sub sub rex.WXB lret je pop rorl and pop outsl test (bad) test push xor mov jg movabs sbb add or adc (bad) jrcxz jnp shll pushfq (bad) test rcll sub cltd sarl nop jmp xor enterq sti rorl jo (bad) and rcll fmul fbstp movabs jnp out movabs sbb (bad) rcrl repz shll xchg (bad) sub roll jo retq push (bad) rol sbb mov add adc callq (bad) lods ud2 (bad) ror fnstsw pushq (bad) pop rex.RX rex.B sahf cmc cmp sbb pop cmp add pushfq sarb rex.RXB movabs loope pop adc jae xchg fnstcw rex.W rex.RX rex in enterq (bad) stc cmpsl lahf push mov incl rex.RB xchg (bad) scas decl lea callq add (bad) and sbb or outsb rcll sbb adc movsb add fcoml in addr32 cmp (bad) outsb xchg retq jno xchg mov cmpl and (bad) xor mov xchg rex.WRXB nop out in mov callq (bad) (bad) jmpq sbb movabs stc mov push rex.WRX lret rex.WRX jno rex.WXB or scas test rex.WR xchg fcmovnu cltd add fstps sub cmp rex.X jae movslq fsubl loopne push clc xor pop mov xlat out sub or sub mov jbe imul adcl in in jns movabs mov (bad) jae rex.RB sub roll rex.WB (bad) adc jno mov popfq sar (bad) and (bad) xor (bad) xlat sub fwait cli rex movabs pop test pushq movb rex.RB sub fstps xchg (bad) cmc outsl xor (bad) mov (bad) (bad) adc pushq lret (bad) je cmpl xchg jne rex.R test sbb xchg je cmpsl push sbb cmp loop jl (bad) rex.WB mov (bad) jmp mov and (bad) scas enterq rex.WX orl adc lret and cld add (bad) jno sbb stc xor push (bad) pop (bad) xchg and shll roll (bad) cwtl rex.WR and adc (bad) mov fst je jp loope out int cmp cwtl rex.WRX pop (bad) jo mov roll enterq or lea imul (bad) (bad) xchg lret xchg push mov add cld rex.WRB xchg (bad) lret clc pop shlb rex.B rex.WRXB fiaddl cmpl insb (bad) mov (bad) jb iret sbb mov cltd shll clc retq mov adc (bad) stc pop outsl (bad) je repnz (bad) ror imul cmp icebp movb (bad) in callq sub ljmp jae and xchg rex.W mov add repz or jae xchg rcl push and (bad) xor (bad) mov cmc sub xchg mov mov (bad) in xchg sbb push lret sub int3 fistpl rcrl rex.RX roll push jmpq and rex.X rex.WRB or ljmp imul rex.B lock sub jno (bad) (bad) xlat add (bad) pushfq roll (bad) iret (bad) fneni(8087 stos (bad) mov int cmp cmp rex.WX (bad) popfq mov sbb sub rex.WRXB mov jo cmp test (bad) and rex.RXB insl lahf rex.X rex.WXB loope movabs xchg mov (bad) rex.WX mov xchg (bad) push or retq xor pushq in (bad) clc test mov imul cmp (bad) (bad) out pop rex.WXB and pop xchg insl sbb jrcxz rex.R mov stos mov push (bad) (bad) (bad) in loop nop rex.WRX sub movslq adc push movsb rcll jne popfq fnstsw movsl rex.W rex.B push adc (bad) (bad) xchg (bad) pop ss cmc rex.WX loop rex.WRB out retq mov pop sub icebp (bad) xor adc pushq test fcoms push or (bad) cmp cli push out rex.RXB shll hlt fwait sub jns shll insb xchg idivb (bad) mov mov sub cmpl rex.WRX out and rol movabs test loope in rex.WRXB negb movsb (bad) xchg sub and insb and or mov xchg fwait cwtl xchg repnz (bad) jle clc pop or rol cmp adc or xchg adc add (bad) add jb add rorb ror loope mov (bad) or scas (bad) add negb or sbb push lret idiv sub loopel jne neg xchg fimul rex.XB xor push xor ja mov add rex.WB fsubrs jb ds rol mov (bad) lret adcl jg (bad) int lret sbbl (bad) int3 xor cmp negb (bad) adc or jle loope repz rex.WXB fldenv jl (bad) lods xchg movslq mov rex.B jo mov rex.B movabs add int test rcl orb iret jp (bad) (bad) rep or add iret out insb (bad) (bad) jmpq fidivrl rex.B rex.B sbb rex.WRB retq faddl or rex.WR in hlt int ror popq mov int3 data16 rex cwtl jne jae fsubp or mov xor fs fidivr mov sahf xlat loopne mov sub bswap test popq pop imul cs div fnop sub xchg repnz (bad) lods add ss stos fdivr push or lock in loopne sub xor movabs rex.RB adc (bad) and mov and rex and movsb test cmp pop cmpsl xchg pop rex.WR movabs rex.WRXB mov retq cwtl jrcxz leaveq retq in popfq and test loope iret sbb stos movabs (bad) mov nop or (bad) movabs (bad) jmpq jl pushq cmp sub (bad) rex.X push data16 ror mov pushq loope add es (bad) mov pushq je (bad) idiv (bad) cld add in cltd stc rex.RX and mov (bad) movabs sub retq sarl (bad) fadd mov sbb jo movb sbb negl rorl adc jnp (bad) lret xchg movsl sub loop (bad) xor mov lret ffree mov push stc adc sti xor lahf rex.B cmpsb repz lret mov rex.RX gs push cmpsb fcmovb mov in mov and jl or cltd jge jp in (bad) ja adcl xchg out retq add repnz mov and push (bad) std xor popfq loope (bad) movsb sbb pop stos rex.RXB push sub popfq loop cmp adc adc pop mov enterq xor outsb rex.B rex.WR movsl (bad) shrl cmp mov (bad) mov faddl (bad) cmp mov push xchg (bad) mov bnd (bad) ja roll ss push addr32 es xor and add fidivr outsl adc retq xchg movabs sbbl shll (bad) sbb add (bad) adc and int mov outsb iret mov rex.WX pop iret retq xchg adc jp shr (bad) cmc mov (bad) mov pop addl fs push gs rex.B rex.RB rex.RX or rex.WRXB mov xchg push insl (bad) jno xchg test fwait repz stos push (bad) xor rex.WB jo cmp shll and mov jg push jmpq cs in outsb sahf (bad) add nop rex rex.WXB mov test push scas shrb sub rex.X mov rcr add mov push lret sbb andl mov xchg mov andl (bad) cmc loopne sub adc mov rex.B outsb or pop (bad) lret xchg rex.WRX add idivb lret or (bad) lods pop cmp stc jmpq insb fisubl test fcomps (bad) mov xchg shll (bad) repz adc sub cmp xor push (bad) xor mov stos jnp sub rcll shll xlat sub mov mov jns mov retq adc fsubs sub shll rex.WRXB sbbl movabs add fstl mov (bad) jne (bad) xchg roll or pop and pop cmp cmp sbb jns int sarl lods rep mov cmpsl nop in shll retq sbb jns notb adc rex.X sbb sub (bad) roll insb xchg mov sub (bad) movb rex.WX cmp mov (bad) or sub mov and lret jp sub fcmovnb cmp in fcomps (bad) test push sub and rex.WRB sbb jae pop jmpq (bad) repnz test push add or and lahf (bad) pushq rex mov add mov loopne rex.R fxch loope and (bad) mov sub xchg (bad) (bad) imul (bad) (bad) repnz outsl push cli (bad) (bad) enterq (bad) roll jb (bad) (bad) movabs fiaddl gs movsb add enterq enterq (bad) jge ds xchg and add mov rex.WB add pop mov int3 xor adc and add repnz add xor retq or sbbl pop fist (bad) jne mov rex.WRXB mov rex.RB rex.WR (bad) (bad) jmpq test rex.WXB rex.X push test sbb xchg jae int3 xchg adcl (bad) lahf clc mov iret or rex.WRXB fidivrl (bad) xlat ror std pop lret test adc pushfq shrl pop scas jg mov rex.RX add and insl rex.XB mov rex.WRB xchg ror jle or mov mov and loop (bad) (bad) insb rex.WRX (bad) or or xor shrl xchg enterq (bad) and or xor out or mov loopne sbb out rex xchg shll sbb and js (bad) mov cmp jo mov sub add cmp cwtl mov jge rex.WXB sbb ss cmp mov (bad) out testb fidivrl (bad) (bad) and es xchg mov push or popfq lret std (bad) pop out shll mov (bad) pushfq mov (bad) (bad) rcll jbe push cmpsl enterq adc or sbbb rex.RX jne jo jbe cmpsb (bad) add (bad) loopne ja cwtl nop rorl or xchg rex.RB (bad) pop clc adc xchg std iret sahf (bad) adc mov sub roll adc and movabs add mov cmc movslq negb mov movabs rex (bad) adc (bad) mov (bad) in pop sbb (bad) js (bad) pushq repz (bad) rex.RXB pushq popq idivb lods add rex.RX outsb mov xchg callq fwait rex.R sarl rex.WRX mov sbb ror add in rex.XB fsubl xor pop xor mov (bad) or xchg test xchg nop jrcxz and (bad) pop imul callq add and rorl (bad) and cltd out mov pushfq (bad) movsl imul mov jp movabs add mov (bad) push (bad) adc rex.RB (bad) in shll int3 (bad) add sub cwtl sahf xor data16 shrl movabs (bad) rex.RXB rex.RB fidivr push pushfq sub cs mov push in (bad) decl imul rol (bad) xchg add mov sbb je movabs (bad) lret adc pushq and cwtl pop int rex.B fldcw lret insl sub jae xchg pop sbb push rex.X push add push mov jmp xor repnz movabs xchg sbb push (bad) jle movsb movabs xor xlat xchg jnp or mov push add (bad) sbb (bad) stos (bad) sbb xchg shr (bad) ss (bad) jl mov fsubl pop xchg movabs loop gs subl xor lods fisubl clc (bad) lea jbe sub out pop roll imul (bad) push sar (bad) cltd (bad) lret jbe (bad) mov outsb pushfq (bad) mov scas leaveq push (bad) negb or add iret fs data16 repz ja cli push sub rclb xor cmp sbb push xchg jp mov leaveq add rex.W fisttpl testl callq movabs (bad) xchg xor imul xor and and add (bad) add rcll cmp clc jbe xchg add shl movsb mov mov mov rcll adc jmpq (bad) and rex.B mov (bad) std (bad) (bad) repz jg sbb add mov in stc (bad) fimull movsb cmc shll fnstsw repnz (bad) test mov test and test jge rex.W rex.R or jle movabs outsb xchg lods (bad) jg mov adc vpmulhw mov cmp repz pop (bad) adc in lret jmpq (bad) lea mov (bad) insl adc int3 neg xor or mov mov repz xchg sub loop and je (bad) cld sub and add (bad) jno fwait cmp and (bad) mov or (bad) psubusb decl xor add or mov fildll (bad) push test out in jae in xor xor lock cltd movabs icebp rex.WRX add in (bad) mov mov or fcomi lock (bad) (bad) jns (bad) adc cli (bad) xchg test (bad) rex.WRXB cmpsb xlat sub adc jne sub retq (bad) pop mov in jns out shrl mov int3 sarl mov mov movslq repz mov lret pop xchg sub mov sbb (bad) rex.B movabs mov cmpsb retq sbb sbb rex.W rex.WRXB rex.WR cmp scas xor (bad) repz mov rcl ss rex.XB div insl roll ficoml and movabs (bad) jp movb (bad) nop xor rex.X in xchg pop sbb enterq mov out sarl mov sub mov rex.WXB movabs (bad) (bad) (bad) pop int3 sar xor xor (bad) test fild iret adc xlat jl rex.R sub cli (bad) jo shl test sub sti movsb mov mov or xor cltd (bad) adc loop rcl (bad) (bad) je test jp (bad) (bad) add fnsave cmpsl shrl iret and sarl push and xchg movabs mov shll mov stos xchg cmp rcr (bad) sbb sbb movabs (bad) repnz in push mov (bad) pop callq add movsb mov cmpsb pop in push (bad) repnz test int3 sbb sub rcr not lods rcrl cmp cmp rex.WR xchg movabs push (bad) fsubs lret test pop orl or (bad) add sub add stos fdivl mov nop js pop fnstcw out xor xchg mov (bad) jbe out mov xor jp add (bad) xchg fcmovb (bad) sbb rex.WRXB mov fbld loope sbb outsl or rorl (bad) push (bad) (bad) (bad) sbb jb cltd int3 and mov fstpt in int rcrl cmpsl (bad) mov lods jmpq rex.WR cltd push sbb sti lret movabs je fsubrs mov cltd xchg pushfq retq jp sub sarl (bad) rex.WX sarl (bad) rcl jge mov je add add loope (bad) jbe roll lods sahf leaveq scas pop rcl movb mov push rex.X (bad) adc add (bad) movabs shl sub sbb and imul data16 jns sarl push rcrl jne movabs movsb movabs outsl icebp adc cmpsl (bad) pop (bad) pushq cmp xchg jnp sbb callq or movabs nop (bad) mul add adc rex.B rex.WX jno or push push pop lahf lfs ja lcall jae int hlt cwtl mov (bad) xchg pushfq and insb lods int js shrb fistpl out rex.WR es mov rex.WRX icebp xor scas test pop decl insb (bad) jno addr32 in sbb in es or (bad) mov xor shr sbb rex.X repz rex.R or (bad) lret push add adc roll rcrb (bad) cmp adc (bad) std data16 movabs pushq mov cmc retq iret pop jp fpatan and rex.RX rex sbb jne (bad) ror outsl pop push (bad) test loopne js (bad) lret jle (bad) rex.WRXB pop fsubrs add rex.WX jnp pushfq adc sub mov outsb insb mov or insl jne int rex.WR mov cmp ljmp jg iret push cmpsl xchg movabs pop lahf shll (bad) and rex (bad) callq int (bad) rex.WXB cwtd (bad) sub (bad) movsl rex.WRX mov push mov pop hlt sbb movabs fnstsw sub lock mov ss shll add notl jmpq or (bad) xchg subl pushfq rex.XB jnp jl (bad) cld xchg (bad) rorl int movsl mov rcr jno mov out imul mov shl fwait xor add adc movsl in roll cltd (bad) sti pushfq (bad) fldcw add (bad) fwait mov test scas add jbe leaveq cmp sbb cltd sub or pop movabs shlb jge cmp lods mov fnstsw add stos (bad) imul and test sub push mov loope sub (bad) mov xchg out sub (bad) flds cmpsl shll es imul sub adc flds cmp cwtl xor out shll sbb cmp enterq (bad) jns cli (bad) leaveq push stc add xchg xchg lods shrl cmpsb pushq (bad) add pushfq or cmc lea jp rex lret mov lret lea cltd movabs (bad) (bad) pop rolb movabs cmc or shll sub push shrl sbb xchg rol gs xor (bad) shrl icebp jrcxz mov rex.XB pop sub stos (bad) (bad) adc rcl mov xor sbb faddl xor stc and adc (bad) mov (bad) rex jmp rex.B callq rcrb and (bad) rex.RXB rcll loopne mov sbb (bad) xchg adc cwtl fnstsw adc (bad) rex.W rex.X (bad) (bad) rcr rex.B jmpq sub xchg fcmovnbe and cmp (bad) rex.RB sub ffree push lea lahf cmpsb loopne incb loope pushq shrb shll (bad) push rcll out jp (bad) movabs sbb rol and (bad) (bad) insb mov fistpll (bad) loope movslq add (bad) and cmp xchg stc mov push jnp cmc (bad) fistpll shr mov cmpsb test or enterq jmpq or out sbb xchg mov mov jbe,pt cmpsb movabs (bad) mov rex.WRB imul nop sbb add or mov (bad) (bad) jns (bad) scas sub xor rex.RXB lahf fcmovnu rorl cli sub fs leaveq or (bad) or add cmp add rex.B fs xor mov sub movslq (bad) stos sub ja (bad) jns (bad) rorl cmpsl cmp adc xchg sub cmpsl (bad) (bad) pop push sub (bad) sbb jns ficompl sub sbb add ja jbe adc sar add xchg test data16 (bad) retq rcr or sub (bad) data16 pushq fst mov movsl orb sahf loopne out sbb rex.RXB mov rex.B rex.RX movabs int rex.RX add and pop test (bad) pop rcrl sbb and js mov mov jmp rex.WX rex.XB push scas jle sub (bad) imul and rex.RXB imul pushfq std (bad) xor xchg sahf in retq or pop jns cmp mov pop xchg (bad) mov (bad) pop lods add rex.B movslq fiaddl (bad) (bad) pop iret (bad) pop adc loopne movabs repnz lret push (bad) movsb (bad) rex.B cltd (bad) out (bad) movsl pushq fwait addl shl movabs scas xchg leaveq (bad) xchg loope lods cmpl rex.RX int3 lea rex.WRX test jbe (bad) pushfq add mov cwtl sub and iret (bad) movabs xchg mov push adc (bad) fwait mov xor jge jne lahf fistl cs lahf jnp xchg sbb add scas mov pushq (bad) fsubp jns mov push movabs mov imul fisub mov rex.WRB (bad) retq rex.WX fwait addl in (bad) sub mov test sbb iret push ss rex.WRB cs (bad) scas cmp out callq shl (bad) adc pop mov jns data16 fcmovb movslq loope xchg xchg sbbb movabs shrb imul (bad) sarl pushfq test mov imull xchg cmp pop add rex.RX mov icebp xor es rex.RX in rclb enterq cmp xor rcll neg int jp xlat test ror rorl mov mov xor (bad) jbe rex out sete movabs jmpq jno xchg mov mov (bad) jle (bad) (bad) ffreep jmpq xchg jmp push rex.WRX xor mov lret jl (bad) stos sbbl jmp jmpq mov (bad) push mov (bad) hlt movl pop movabs retq jp (bad) repz lock fcompl push rclb push insb pop adc sbb mov or and mov nop (bad) xchg xlat (bad) (bad) jmpq cmp rex out (bad) divb (bad) leaveq lret fisttpl mov lock xchg cmp rorl retq cmc mull xchg rcl jg mov fstps stos (bad) adc (bad) rex.WXB movabs out sti fldt (bad) movslq add jnp repz jo,pt cwtl test adc rcrl insb (bad) gs shll vpor loop jb lret imul xor rex.RB jmp rex.WRXB in lahf out rol retq ds mov jl xor je rex.XB xchg fisubr rex.X add push sarl (bad) sarl shlb or and int jb divb adc (bad) cmp push loope (bad) or sti jns retq movsb loopne push lods pop mov sbb lock out rex.XB and (bad) or rex.W rex.X or xchg pop xlat xchg xchg push cmpb rex.RXB add retq rex.WRX (bad) outsb and sub cmc movabs js jbe (bad) ffreep ja jrcxz in test sti in adcb scas and mov movabs test sub fxch stc rex.WX jl jae rex.WR push stc in and (bad) lods lret (bad) or divb rclb loope sbb in mov (bad) rex.R jle cwtl sub shrl pushq xchg repnz sub (bad) jmp je rex.XB (bad) roll mov lea xlat xor (bad) push je and test jmpq mov pushq stc pushq rex.WR sub movabs leaveq rex.B cs xchg jns pushq push and in xor (bad) (bad) rorl adc sar cmp mov pop retq test mov and fmul outsb shrl stos nop (bad) jmp sarl (bad) movslq fdiv sub (bad) lods add xchg shll movabs mov jns (bad) je fimull mov add sub sbb xchg sarl or repnz xchg and shlb add adc push movabs sti (bad) push pop in xchg outsb rol rorb (bad) imul push xlat mov (bad) movabs rex.WRX cld adc insb rcll xchg clc lahf add jle pushfq icebp mov cltd and int mov pop and rex.RB gs shll (bad) cmp shll test jmpq jns cltd (bad) fstp sbb rex.WXB andl mov in loope rex.R cmp pop (bad) cltd jle (bad) lock imul cmp lret mov es mov xor roll pop xor insl (bad) clc shrl imul add mov (bad) (bad) xchg sarl rex.RXB mov je cmc pop pop xor mov lret repz add jae pushq jge repnz adc (bad) jo fistpll movabs add in (bad) rex.RB pushq leaveq scas jle lock (bad) test rex.RXB fbstp sub jns fisubrl fwait callq and mov fstpt fwait ja xchg xor xlat sub sub out xchg lea sub (bad) xchg jns stc rex.RXB retq stos or (bad) add mov push sahf (bad) xlat add in int3 lret (bad) adc repnz movslq (bad) rex.B rex.WR mov (bad) rex.B rex.B pop xor rex.WRXB clc jrcxz (bad) adc paddusb (bad) (bad) hlt cmp (bad) (bad) fbld lock test roll or rex ds (bad) shrl scas testl and mov jo adc (bad) sbb xchg and pop (bad) or or insb jmpq bnd cmp test (bad) (bad) jbe sub mov xchg callq leaveq adc in (bad) jbe mov stc lret xchg mov movabs stos add sub mov jrcxz je (bad) and adc mov test (bad) (bad) popfq montmul cmpsb sar (bad) iret xor sub mov push pushq int (bad) jnp mov sarl jl out mov lahf (bad) (bad) rex.WRX cwtl push push rorl (bad) (bad) sahf fs icebp cmp sbb xchg vmwrite mov fwait jmpq data16 shrl (bad) cltd (bad) jns retq iret cwtl lods loopne and mov sahf test lret sahf sbb xlat repnz clc jno and pushfq in rex.XB rex.B lods (bad) sbb nop cmpsl int3 ror rex.RB (bad) movabs xchg std idivb rolb stc movb pushq imul lret pop stc adc pop (bad) sbb push loop lahf add cwtl insb (bad) jle addr32 subl pushq and cmp xchg xor pushq xor sahf retq jmp rex.XB rex.WX sbb rex.WRXB lods movabs (bad) mov pushq je cmp xchg jo adc rex.WXB (bad) rex.WB (bad) push rcl push loopne push (bad) sbb (bad) adc ss or (bad) rex.WRX mov ds adc adc sbb or callq (bad) retq sbb pop xchg sub pop mov xchg insb retq xchg sbb sbb pushq fmulp (bad) jmpq add movabs push pop movabs rex.RB rex.WRXB fstpl std fisubr and lret mov or jb (bad) loope sarl cmp (bad) adc rex.WB mov rex.WX push and mov and hlt mov xchg push push xchg retq shll loopne adc adc loop iret loope rex.WX lret sbb adcl fwait roll out rex.R mov lahf pop xchg rcll or sub add cmp adc rcrl push adc xchg jnp jl (bad) loope roll xlat loopne jle rex.B lret jrcxz loop mov jno std mov xlat xor fwait add add xor imul cmp (bad) mov jns jmpq (bad) mov outsl jo push lods sub repnz pushq xor movabs push jl rex.RB jnp repnz cmp outsb shlb rex.XB sub adc mov sti mov and rorl push xchg pop push (bad) sbb mov idiv jnp in (bad) rex.B stc (bad) popq and mov xor rex rex.WXB sar adc jle insl (bad) shrl cmp leaveq sar and cs mov pushfq shll insb lret in (bad) rex.WX mov jmp fstpt (bad) rex.WXB xlat push std sti rex.XB test pop in (bad) lahf movabs cmp pop movabs xor xor (bad) xchg out (bad) cmpsb mov (bad) lods mov in cli xchg pop cmc outsb in rex.WB adcl push rep sbb enterq sbb ficompl mov xor stc iret test repnz xchg xchg (bad) not andl (bad) lea out xchg in cmp (bad) xchg (bad) jo (bad) cli or (bad) rex.WRX xlat pushq mov rex.WRX cmp movabs (bad) sarb iret repnz jb movabs repnz or (bad) rex.W js jp (bad) rex stc mov (bad) addr32 xchg jrcxz rcll sbb adc rex.B out mov stos add (bad) leaveq jge je rex.R shl (bad) pushq movabs gs (bad) jne orb mov (bad) repnz popq jns rex.WRX jo cmp movsb int3 and rol callq vshufpd (bad) fsubl cmp or fmull xor imul retq bnd jno scas hlt lods gs out stos (bad) (bad) (bad) add rorl fsubrs rex.XB sub frstor repnz add mov jne fcmovnu push (bad) and sbb ds adc sub (bad) cmp sbb add out sub fdivl and xchg xlat push or loop add scas adc stc lahf in bnd (bad) cli sub rex.WXB fstps or lods sub sbb jmpq out (bad) jae mov lret jb mov rcrl or xlat sub jo rex.RB add es ss lock cli pop and add iret enterq scas outsl rex.RX mov lret (bad) (bad) ja pop add xlat vxorps mov clc jge int (bad) (bad) rorb add xor shr (bad) ss sub (bad) int3 lods pop outsl add out rorl add cmp sbb jne add nop adc fchs lock fnstenv gs pop jle shll fistpll (bad) cmc sub out xchg adc mov (bad) cmp movabs retq (bad) cld cltd push rex.XB xchg cltd lahf jne add sar rcll scas movslq roll mov sahf mov adc movabs pop xor lahf push cmpsb mov cwtl cwtl adc pop and pushfq sti rex.WXB repnz rol fcoms jl adc fnstsw jno and xor enterq mov decl roll imul cmp rex.B imul cltd stc loope,pn jns repz xor jmp je rolb sbb retq or fwait (bad) sbb xchg cld movsl jg (bad) (bad) rex.XB mov adc scas mov lahf imul and insl (bad) mov rcrl ja movabs cli fdivrl popfq fcomip (bad) rex.WX xor ss rorl adc clc in pop mov or inc out mov fnstcw outsb roll imul adc xor and and (bad) icebp shll sbb outsl rex.R adc pop iret jrcxz mov or shrl imul popfq clc sub mov scas fisubr std cmp roll pop pop iret roll mov movslq mov fdivr mov add cmp (bad) stos add js pop rcll fucom xchg (bad) lods sbb addr32 pop add jns jns rcrl rex.XB push jnp jl adc add push decb push rex.WRX rex sub testb je test popfq in sub rex.RXB cmp cmpsl add icebp loop movabs rorl adc jp jo rcll fcmovu pop xchg add imul testb nop sub rcrl repz enterq mov sub jrcxz jo (bad) lea stc or loopne cmp add push push (bad) fsubs mov (bad) (bad) stc rex.WRXB mov mov sti and sbb sarl rex.WXB rorl sahf imul or mov roll mov (bad) adc (bad) or fidiv (bad) lret pushfq mov loope or (bad) (bad) jae jge xlat mov (bad) mov in (bad) xor pop xor (bad) ffree mov out add (bad) cld ror pop in adc (bad) xor cmp rcll push sarl jmp adcb retq rorl sbb (bad) je icebp addl ja popfq mov pop (bad) data16 fs (bad) xchg or jle or shll mov out pop xor sbb jle jo xchg jo rcr mov enterq rex.RB rcll repz cmp (bad) movabs out iret jmpq (bad) jns and (bad) movabs ja imul rcll mov out lahf ss lret (bad) (bad) scas push add xchg rol pop mov movabs cwtl repnz testl rex.W cwtl nop in jno retq cmp xor rcll (bad) push cld rex.WRXB mov push cmp adc fdivl rex.WX (bad) jmpq js callq cli movabs cmpsb rex.X test loopne sub and fldenv (bad) xchg or fisttpll and push mov adc xor repz adc (bad) ficomp mov cmp stos (bad) and js (bad) or (bad) fbld (bad) outsl xchg repz fimul leaveq xchg xor (bad) rolb jbe (bad) (bad) sbb ja lock insb sbb jge or or jae movslq mov (bad) pushq scas je movsb xor pushfq testb gs icebp je icebp pop movsb push mov xlat sahf imul xor (bad) sub js (bad) (bad) test or test popq sub movabs jmp rex.B ss sub rex.W mov xor mov (bad) (bad) movsb stc sbb (bad) jp (bad) mov retq and mov sbb (bad) gs repnz cli lods rex.WR rex.RXB stos callq xchg insl or rex.WRX mov xor callq mov rex.WRX movabs test rex.WRB rex.RX (bad) loope mov sub xchg test or subl cmpsl mov sti cmc sbb and jno (bad) mov movabs (bad) (bad) sub sbb cli sbb clc sub movb fdivl rol pop clc cld rex.WB xchg roll pop cmp xchg test jge (bad) rex.WB roll rex.WRX (bad) decl mov sub (bad) (bad) (bad) or adc or jno sub lret jge cmpsl loop push lock popfq xchg out mov cltd cmp lods cmp andl rolb ss sbb mov rex.RB xchg or lret loope icebp mov rclb xchg rex.WR test sub xor mov jo cld fistl test add lret rex.WXB xor movsb sub jno (bad) out (bad) (bad) imulb repnz jbe mov jle cli imul incl insl and lahf loopne retq (bad) test jbe loopne rex.WRX imul movabs stos movabs std adc cmp in and fidiv movsb mov decl negl cmp jb (bad) roll and in rex.XB in sarl test lahf jae iret nop pushq jmpq sbb pushq xor roll fisub shlb (bad) nop adc fst or (bad) jl bsr xor rex.WXB jmp fwait xchg or jne sarl add fstpl sbb push in inc xchg add sbb lock movabs xorl cs cmp loope add shll mov lret cmp gs pop add (bad) jg pop shll (bad) and gs (bad) rex.WB loopne adc jne (bad) fidiv xorl and (bad) in or jmpq (bad) (bad) outsb (bad) movabs adc jg (bad) mov fisttpl iret rcll test add jl (bad) rex.W rex.RX movabs sbb push sti fisubl repnz (bad) outsb std mov cmpsl iret stc hlt mov mov jle add adc pushfq (bad) popfq (bad) test (bad) and rex.B rex.RB push mov rcr orl nop (bad) cld rol xchg push movabs jmpq sarl pop xchg push mov mov cmp xor int shr (bad) cli sahf adc dec fsubrs (bad) int movabs popfq (bad) rex.B movabs imul (bad) pop jle (bad) sbb rex.WRB cltd (bad) lahf fsts roll jbe hlt pushq fstl pop xor std pop xor pushfq (bad) push mov enterq lahf movabs movabs mov flds repnz cmc lret and (bad) movabs xor sbb mov and adc pop outsl rorl sahf cmp sti xchg int sub push loopne (bad) add stos (bad) rex.WRX jmpq jb shr pop jbe int and (bad) movabs js (bad) lea jg (bad) (bad) int (bad) cmpsl movabs rex ss out in lods or fwait mov pop xchg rorl mov mov (bad) out paddq sub rex.RX xor callq and mov xor loope callq shll mov cmc adc mov (bad) ja rex.RB loopne enterq int jb pushfq xchg (bad) pminub jmpq mov orl test (bad) rex.XB xor or out repnz fwait lret mov movabs cmp int3 iret mov fwait xchg jno (bad) shll stos pop sub xchg rolb test cmp leaveq rex.WXB jno int stc (bad) xchg xchg fadd cwtd adc lods (bad) jbe (bad) (bad) (bad) xchg jmp repz mov add movabs adc movsb mov xchg std xchg xchg and push in addl cmp scas xchg mov (bad) rex.WRB (bad) cmp cmp xlat mov adc (bad) pop rex.RB (bad) pop int mov retq pushq subl push (bad) imul hlt rex.RB jle rex.WXB mov scas add cmpsb add and mov sti iret sub mov pushq xchg jne xchg sub jg mov mov (bad) je mov (bad) jbe (bad) xchg xor xor mov fwait add movabs loop movabs movslq rorl xor (bad) test pushfq add outsl fwait (bad) lock mov pop jns shrl mov (bad) ja add or cmp outsb int xorl fwait pop outsl mov xor lahf loop rex.R xchg (bad) cmp cmc sub sub jnp (bad) push mov data16 in shr (bad) (bad) adc xchg sar cli add shll repnz mov (bad) mov rex.R push and rex.B fwait jbe add in subl roll mov test sub jb test rex (bad) (bad) js je rex.B pop push sub add adc sbb scas and movslq (bad) rex.WRXB cmp fdivrs jp mov mov push rex.RX sub lods shll frstor mov (bad) add jb (bad) enterq cmp cmp mov cmp (bad) jg (bad) retq jno xchg shrb (bad) (bad) fldenv in mov and movslq stos (bad) rclb (bad) jmpq sub test mov lret rex.B in sbb jle add roll in mov rex.X enterq out xchg jmpq rex.XB (bad) add xchg std std pop jge,pt (bad) sbbl imul (bad) test sub xchg (bad) sahf repnz cmp sbb (bad) movsb es cmpsl shrb paddusb (bad) xor push iret mov mov add in xchg (bad) fs cs mov jrcxz callq pop jbe (bad) cmp mov jns sbb leaveq idivb fdiv movabs sub lret movabs sub (bad) faddp cmp xor movabs (bad) nop int3 movabs pop sahf insl rcll cmp loope push shl lods std xor mov scas leaveq add (bad) jl push (bad) rex.B lods iret movabs sub rcr cs or (bad) sbb rex.B es shrl shlb cmc sbb insb mov movabs out jns int3 (bad) rcrl sub cli cs movsb int3 (bad) rex.R cmp (bad) or cmp (bad) (bad) sbb push lea cltd mov out rex.WB shll adcl pushq cltd scas push rex.B rex.W ss hlt cmp sbb and cmp xor movabs sub sbb cld and xchg movabs add sarl (bad) lods mov outsl (bad) jne cmp movsl and cmc rcll add xchg rorl (bad) push pop imulb mov fimul (bad) sub (bad) xor int (bad) adc retq jns add lret xchg loope jno cmp rex.B in lods (bad) scas repz rex.WR rex adc test mov rex.RB fwait rex (bad) enterq out mov repnz (bad) mov sub cmpl xchg xor xchg lret vpslld (bad) mov lods adc sbb cmc rex.W sbb addr32 movsl lahf (bad) jno sub adc xchg je pop imul repnz rex.XB sahf jae xlat xchg pop or callq sub xchg sub mov shlb test pop rex.WRX rex.RX js pushq fnop cmc div fwait mov xchg insl (bad) test fucomi push sub iret cwtl lret jle mov mov (bad) lea sbbb push rex.WXB retq cmp push pop add mov je jmp mov and sbbl add pop (bad) data16 fstpt rex.WR in add add rex.B stos xchg add fnop adc movabs fistpl rex.X push test lret scas mov adc add add loop sub ror or shrl rex.RB shrl outsl rex.R (bad) adc xchg fwait rcrl push xor mov xchg enterq (bad) sarl fstpt retq lret xor sub xchg in jb (bad) rcll sbb rex xor mov pop loop fwait rex.RXB rex.WR mov jmpq mov (bad) retq (bad) push (bad) leaveq push xor std (bad) iret cmp stc rex.WRX mov enterq (bad) imull outsb xor and (bad) (bad) rex.W idiv test es iret fwait movabs sbbl ficomp es cmc (bad) mov ss (bad) cmpsb mov shl (bad) xor or (bad) cmp jmpq (bad) xchg sbb jns (bad) rcrl int push and popfq shrl or xchg shlb lahf xor jge movsl leaveq (bad) (bad) xchg and or fidiv pop pop push push sub shll sbb cwtl loope (bad) out mov sbb flds pushq frstor (bad) and sub sbb sarl movslq (bad) in rcr mov cmp retq push lahf roll (bad) (bad) adc shrl mov lock (bad) in xor add (bad) jae add (bad) rorl xchg shl fistp repz adc mov out movabs xlat and repz add (bad) insb (bad) sbb rcrl sub loope outsb (bad) cmp jb mov xchg sub fist out test xchg out (bad) or addr32 es (bad) sar mov movabs jrcxz mov jmpq mov xor mov addr32 mov in and out movslq mov and (bad) pop rex.W push sbb cmp add cmpsb jbe cltd xlat add or fs mov movabs mov lret (bad) mov repnz (bad) fstpt jae mov pushfq cli (bad) pop rcll fnstcw scas sarl and cmp rex.WR in mov insl mov cmp hlt jno add int3 rex.WRXB cmp callq (bad) (bad) sub fcmovb jmp (bad) jp and jae loopne add movl callq sub cmp cmpsl iret negl callq loope adc divl (bad) rolb add and fnstsw cs fcompl fwait sbb xor insl mov xchg push pop ja (bad) mov jmp stc test (bad) insl (bad) enterq and je mov rex.RX xchg stos adc loope add pop cmp (bad) or icebp rex.B std push pop jmpq add sbb push cmp fcoms and in out cs loope sbb int add loope sub imul (bad) (bad) repz and pop (bad) xor mov rex.WX shrl rex.WXB hlt mov rep out jmpq rex.WRX gs scas test fsubrl rex.WXB (bad) (bad) flds sahf fcmovb rex icebp jp (bad) scas cmp rex.WXB rex.R rorl and (bad) sbb icebp rex movsb or in clc sub (bad) hlt ds mov enterq sbb add fbld in rex.XB gs xor fldenv push mov loopne popfq outsl xchg iret xor cwtl lock movabs jge pushfq (bad) lods and insl (bad) rex.WX std rex.XB outsl (bad) (bad) adc rorl mov out jrcxz rcrq je out pop cmp push shll decl rorb movabs loope push sbb adc mov mov int rorb (bad) lock rex.WRXB rex.B addr32 outsl push imul rorl shl out iret adc xchg pushq lret std jns ja loop mov (bad) add pop roll xorl lock rex.W rol push (bad) lods sbb push jmpq pop push rcrl out repnz (bad) (bad) (bad) mov retq jge xchg movabs cmp xchg rex.B rex.WRX or and cmp push lods jp insl rex.WRXB rex.XB icebp in out rex.WR xor lods rex.WRB cmpsb cwtl test cmp movabs push stos rex.WXB and rorl rex.WRB cld cli lahf (bad) hlt add xchg jno jp (bad) int3 fmul rcrl or fiaddl in cmp adc mov mov jp pop (bad) xor xchg cmpsl lods add outsl lretq xlat cmp popfq mov (bad) push cmp lret pop stc test nop subl cltd (bad) lock cmpsl (bad) (bad) rex.WRX (bad) (bad) mov cmc cmp cmc and pop (bad) and add callq nop divb js sub lock sbb mov fwait (bad) cmp insb mov xor mov xchg or mov add repnz adc pop fmulp rex.WR fdiv add xor loopne in mov mov imul int push mov cs retq cld xor xchg mov cmp movabs (bad) dec mov jp add imull and xchg int3 push add rex.R fildll mov rex.W imul insb shrl xchg rex.RX fidivl xor icebp rex.WX pop je divb (bad) (bad) (bad) rcll pslld rex.WRX out fildll cmc pop mov shrl es cmp mov fwait callq movabs sbb rex.RB loopne pop rex.WR xlat xorb adc cltd push jmpq loopne cmp sbb push sti repnz sub jg (bad) outsl rex.XB jnp movabs loope je xlat cmp lret movabs cs out roll add and xor hlt xlat cs jno movslq xadd (bad) or gs movsb xor xchg test insb jb cmpsb movabs (bad) (bad) jl loop jne orl jae jno rex.B sub xor (bad) rex.WX pushfq gs (bad) cmp shll scas test (bad) cld (bad) fs jge (bad) ja es test jb callq sub rex.W cltd rorl clc add rex.B repz add mov stc sub pop xchg (bad) and cmp rex.WX fs push mov sbb shrl popfq add (bad) movb or xor xchg mov rex.RX sbb push or or repz repnz imul and (bad) pushq sar divl mov and rex.WR cwtl or rcrl insb and mov mov sub fbld or icebp push movabs orl icebp nop and add or mov push adc (bad) out add movabs movabs scas imul cmovo xchg sbb pop cwtl shl std movabs adc cmp int3 cwtl (bad) sbb test (bad) (bad) xor add mov stos sub add adc (bad) pop sarl sub cwtl enterq shll callq cld or outsb xchg shrl sub jnp roll or stc rex.WR (bad) adc testl add mov imul pop cmp jae (bad) or mov mov xchg (bad) jmpq xchg insl and rex.RX int outsb rex.XB add or je (bad) js and cmp rex.X rcll mov push mov add xchg (bad) movslq (bad) jrcxz pop or lods lret sbb rex.R mov scas sub xlat fist (bad) fisubr cmp popq jrcxz add (bad) xchg rcrl pop add pop jae cltd add je or rex.X mov and outsl mov (bad) rex.WR lods neg xchg stos repnz cmp jg lret xor rex.WRB mov addl rcll (bad) pop rol rex.R fsubrl xchg movabs callq xor sbb mov sbb jle in rex.X pop test (bad) rcrl sub mov iret sar movabs (bad) cmp cmp movabs adc out stos sub movabs cmp lret rex.WRXB mov xchg sub or repnz (bad) or test pushq pushfq (bad) int je xor inc popfq sbb shll (bad) retq repz rcrl movabs mov sub jmpq (bad) rex.RB (bad) movabs retq (bad) fsub (bad) incl pushfq xchg iret imul int3 loope fs movsb test callq (bad) rcl cmp iret loopne mov push cli rex.X jp mov rorl jno es leaveq movabs rex.WRXB fwait mov fisubr enterq rex.RB retq movsb adcb mov int3 gs andl jb stos rex.WR rex rex.X jo movslq imulb mov sbb (bad) rex.WR (bad) scas rex.XB movabs xor xor jp outsb (bad) cmp (bad) and or pop cltd sub rex.RX sbb ror xchg mov in push adc fs lret fidivr or push (bad) enterq xchg rcr rex.XB rex.R cwtl retq mov cmp jg in mov data16 mov lock and leaveq out (bad) xor add jno cmp rex.RX (bad) ds sub jns in nop add or movabs adc (bad) icebp js mul (bad) cmpsl in jg fimull pushfq int imul jae adc jne and (bad) sub push fsubrp cmp (bad) xor rex mov lahf sub rex.WXB int3 xchg push sti rex.WX (bad) (bad) shlb int3 pop sub pushq push add hlt fnstenv mov jno imul cmp retq rex.X rex.WRX rex.WRXB gs outsb cmp and (bad) in scas xor (bad) and ds rex.XB enterq pop cmp xcrypt-ctr cmpsl pop repnz adc rorl rex.WB rex and sub movslq je idivb in lret movslq adcl rex sub rex.WRB sbb mov loopne rex.RXB data16 fs sti insb cmpl (bad) sub (bad) or (bad) (bad) (bad) (bad) mov or pop xchg adcb xlat stos punpckhdq cmc pushq rex.RB clc testb xor (bad) packuswb cmpsl mov and rex.RXB loopne rex jrcxz mov cltd xchg imul cli cwtl lret fcmovne pop (bad) gs jno lock sub sbb xor movabs and mov xchg stc mov (bad) callq xchg mov lret sbb jne cld cmpl callq mov fwait lret in je loope (bad) mov xchg movabs pop jbe rcl and add pushfq jl cltd rcll sbb (bad) icebp pop add sub sahf jle iret roll mov in jrcxz (bad) pause pushq (bad) lret or jge vsqrtps rex.B out and adc and jno movabs xor and add movsl ss jg pop sub xchg (bad) or fs mov popfq mov rex.B fisttpll ffreep (bad) loope or pop mov (bad) fs cmpsb lret push ds (bad) mov lods pmulhw shr clc in js jg xchg and xor adc sar (bad) shrl pop ds adc xchg gs cmp lcall test add and fistpll sub mov sahf pushq cmpsb loop out popq je movabs data16 in fucomp cltd (bad) mov sti pop movabs jne mov lock sbb (bad) ss movabs rorl test pop mov adc cltd jo in and rcrl sbb xor (bad) mov jle cmp lods cld cltd or (bad) rcl (bad) mov and mov lock rex.X movsl repnz in shll (bad) movabs lret imul addr32 es jno rorl sbb fs sbb mov cwtl add jo loopne sbb cmp jmpq rex.WRXB out xchg movabs (bad) lock scas xor std mov or lahf (bad) xlat sub jmpq add push adcl loop frstor xchg jrcxz or rex.RXB (bad) (bad) je xchg out push push in cwtl movabs pop rex xor loop lods rorl mov (bad) outsb imul popfq loop rex.WB shr sub mov (bad) jo movabs rex jnp mov outsb setge stc rex.WRB mov scas shrl out (bad) outsb jnp push lahf cli int3 addr32 sub (bad) jno js rex.RX sti sub shll lea (bad) (bad) imul roll rex.WB cs mov shll loop cltd rex.WXB xor cmp (bad) (bad) adc (bad) jno jle or rcll sub xor rolb mov and mov jb icebp xchg test imul retq cmp retq in rex.B and (bad) xor outsb nop xor shrl pop xchg retq cmp cmp movabs cltd in mov mov add (bad) pop adc roll mov roll insb loopne sti xor lret pop movsl jne scas or fwait jbe movabs loopne mov (bad) cmp rex.XB jmp rex lods sarb jne add imul jo mov cmp mov clc sub (bad) rex.WXB rex.W sub (bad) xor cltd fld (bad) (bad) rex.RXB sub out sbb cli cmpsl sub rex.WRXB sub (bad) sbb (bad) loope movabs rcl sub cmp jns fwait and shrl pop or jg sar sahf iret movabs in sbb jmpq push retq xchg rcr shrb mov pop (bad) pop add mov pop movslq std push cmp jrcxz xor jmpq sahf push out xchg repz (bad) out cmp (bad) in (bad) xor rcrl xor sbb rex.W in sub ja jnp icebp movabs add push (bad) retq mov (bad) sti rex.RB xor xchg outsb (bad) iret stc callq mov out mov mov movabs or cmp jbe or loopne xor sarl fs lock xorl movsl mov adc (bad) adc rex.XB rex push lahf cmp add shrq cmpsb add add rcll mov mov scas roll or xor (bad) ds jno cmpsl movsb mov rcrl lock pushfq jb out and xor (bad) jl stos rex movabs rcrl fcmovnbe andl in retq rcll cmpsl js pop (bad) ss jmpq rex.W xor xorb cmc (bad) (bad) std roll xor xchg shrl out jno dec shrl lods mov stos stos mov xchg mov jp lods nop (bad) push decb (bad) mov (bad) adc add jmpq shrl mov sarl mov jns rcrl push push add (bad) jp mov mov mov movabs pop mov (bad) xor retq movabs rex.R test rcll sbb sbb xor (bad) jrcxz push rex rex.B jmp (bad) xor movabs mov (bad) in imul fdivrs roll icebp addb (bad) xchg shll lods rex.RX repnz fwait pop movl add (bad) mov (bad) in nop adc vandps movabs adc mov nop movabs xor fadd retq jbe (bad) sbb or jle (bad) lods (bad) je mov rorb pushq push push js cltd iret (bad) xlat xor xor int sbb js out add sub mov (bad) retq rex.WRX push pop mov jg push cmpsb pop mov insl shlb movl fnstsw rex.WXB mov loopne or je addl loop mov cmpsl lahf (bad) (bad) pop pushfq pop mov add imul add mov jge fstp (bad) sarl pop pop nop rex.B out mov cmp movslq and mov add sbb lahf adc (bad) adc insl std cmp loop inc (bad) rex.WXB insb rcrl jle mov xchg stos rex.R (bad) xor mov jmpq cld sub je sahf lods and lret cs fwait rorl (bad) sahf stc pop push sub callq sub sbb (bad) int3 push rcrb cwtl test movsl rcrl (bad) loope (bad) cmpsl xlat xchg shr (bad) jnp pop lcall (bad) and (bad) sahf shrl int (bad) xchg rex.WX rex.RB int3 add (bad) (bad) in fnstsw rex.WR test shrl mov (bad) sahf pop mov flds add xchg xchg stos adc sub (bad) xor xchg js stos shl imulb or rex.WB pushfq lods (bad) (bad) (bad) xor mov sub test sbb fnop stos (bad) mov mov sahf (bad) stos fild jae shll and repz cmp mov lock (bad) add (bad) xchg adc scas scas cwtl rex.B movabs movabs test (bad) ffreep (bad) push sub (bad) jo rex.X pop cmp add mov mov (bad) pop orb rex.RB movabs lock roll mov jg orl fidivrl push ror rex.WB out xchg jns (bad) sbb or cmp lret mov lret je (bad) sar pop adc or out rex.R sbb (bad) rex.X int je callq rex.XB loope cltd sub xchg rcrl ja sarl movabs (bad) (bad) rex.WR mov adc adc xchg add xor rcl jnp shrb out lret repnz add fadds (bad) int sub xchg jno sahf (bad) (bad) mov and pop push (bad) cld gs repnz and sbb rcll movabs gs sbb cmp retq out jg add sbb lret rex.RB pmulhuw and sub jnp xor xor stc lock mov hlt rol adc (bad) mov (bad) xchg movabs repnz addl (bad) xor rol or gs (bad) xchg iret rex.B (bad) and xor (bad) xor (bad) pushq jns xchg adcl rex.RXB cltd insb rex.WRB movslq (bad) mov (bad) (bad) rex.W pop lahf xchg rex.B rex.WRB push jno cli xchg push rcrl mov (bad) rex.WXB mov adc push rex.WR addr32 adc insb (bad) (bad) mov fdivrs (bad) rex.WRXB xchg ror leaveq out push mov rex.RB jle pop add (bad) jns xor loop test mov mov (bad) adc callq rex.WX rex.RX xor push loop and xor sarl mov (bad) rex.X lahf icebp xor xlat (bad) sbb notb in fnstcw pushq fsubrs cmp and cmp xchg (bad) lods insb movslq fstpt xchg or es cli (bad) testb add cltd mov out and rolb rex.W rex.B hlt lods fisubrl rex.X rex.WRX (bad) rex.X (bad) js in enterq adc xlat sub mov sbb (bad) (bad) and rex.RXB rex.X outsl (bad) jne (bad) nop (bad) pop shrb rex.WRB cmpsb insb cmp in fsubrl and jno fcoml movabs xor (bad) movabs cmpsb mov rex.WRB xor pushq pop mov add mov retq adc rol mov fs (bad) jne rex.WXB movabs add or jle mov xlat rex.XB rex.WXB lock cmp or lahf xor jb fisubrl mov jge cltd rex.WX rex.B rex.RXB cmpb imul sbb rcll shlb scas rex.WRB jno popfq mull in movabs fidivrl callq (bad) xor jne icebp out (bad) rcll rcll and sar stos out jbe jle roll xor insb rex.X or cmp and jmpq fstl push (bad) xor stos sbb ds or (bad) pushq (bad) movsb sbb xor movsl add xorb xchg stc rcl push mov (bad) sbb pop xchg jnp movsl mov rorl sub imul cli xor in sbb (bad) shlb adc mov rcll fdivs mov (bad) add jns cmpsb hlt mov push cmc (bad) fdivs sub (bad) sub pushfq jg push mov sbb retq jo shlb rorl xchg stos (bad) jb mov shll leaveq loope sub jo pop sub gs fwait add (bad) (bad) and stc cmp rex.WR mov sti imul lea pop jnp pop (bad) out xchg movsb mov or shll and add lock test and cmp push xor jle xchg adc xchg push lahf (bad) jae (bad) pushq shl ja add mov pushfq xchg (bad) xchg outsb in (bad) pop and stos shlb mov roll sub imul (bad) cs movabs test pop jns test fcomip mov xchg rorl mov ror orb movsb repz cmp rcl test callq retq pop movabs push add xor std mov and mov add movslq stos add rex.B clc rex.RB int mov (bad) nop cmp (bad) repnz sar mov pop pushq mov push scas cmp (bad) xlat rex.RX and add xchg push rorl adc out movabs fld mov mov mov out (bad) pushq (bad) (bad) sub movb pop (bad) nop ja retq (bad) or rcll pop cmc jrcxz,pt sub mov faddp pop pop fcompl test rex.WR add scas jo push rex.WRX rex.WB enterq xchg mov mov xor pop xor (bad) or add in lods fldl rex.XB outsb (bad) mov (bad) or add cmp sub fnstcw (bad) xor or cmc mov out mov (bad) rcrl (bad) sti sub mov xor fsubl pushq mov (bad) scas fidivrl imul (bad) mov cmpsb icebp rorl or (bad) jnp (bad) popfq jno mov cmp nop cmp pop (bad) jns or and jb cld add push movabs cmpsb (bad) sub jle retq (bad) pop (bad) (bad) cmpsl pushfq andl sbb retq sbbl jb (bad) (bad) (bad) and cmpsb fwait xor rex.RB sub pop pop xor and sub fucom mov int (bad) xchg or enterq mov rex.WR pop push imul jrcxz icebp push cwtl fcmovne (bad) movsl (bad) (bad) cmpsb rex.WX rex.RXB mov or rex.WRXB movsb fwait iret lock push outsl (bad) jp fdiv jl (bad) je (bad) cmpsl cmp rcr push and shrl or pop mov (bad) cmp mov sbb lock std add (bad) rex.B in or pop jg,pt xor int3 pop scas push xor shlb sub mov jmpq (bad) retq mov mov rcll (bad) test and xlat or adc mov push rex.WX iret scas xchg sbb (bad) jo retq addr32 insb and and sbbl stos rex.X rex.RX xchg outsb (bad) jl andl adc sbb enterq pop scas mov or rcll imul rex.WXB add xchg ror xchg loop fnstsw pop callq rex.RB mov negb hlt mov jae mov es (bad) mov (bad) cmpsl out movabs test cld and (bad) (bad) loope xchg pop (bad) (bad) sbb adc lahf in xor push shrl (bad) lret xchg movabs adc ror shrl (bad) loop iret xchg (bad) (bad) (bad) out (bad) lock sbb cmp or cmp xlat lock mov roll movsb iret lret movabs rex.WB outsb fdivs rcll retq fwait cmpsb movabs jge pop push pop and mov jmpq add xchg (bad) in rex.RB sarl mov xor mov vmaskmovdqu and rex.WXB cmpsl mov xchg sbb xor int3 movabs (bad) push rcrl mov push test rex.WR loop (bad) out (bad) (bad) js faddp pop test (bad) pushfq fsubr rex.R jp pop cwtl (bad) imul loope enterq sub and jnp negb jno rex.WR rex.RX lahf xlat movslq jmpq rep (bad) sbb (bad) jmp hlt rex.WB pop (bad) add int sub cmp incb (bad) rex.WR test testb repnz xchg stc (bad) rex.WX ds add int3 lods roll add retq cmpsl add xorl popfq xchg cld mov int3 cmpsl push jo push movsb (bad) (bad) (bad) gs add rex.WRXB sarl or movabs stos sbb adc test iret movabs sbb mov leaveq or rex.RXB rex.WRB xchg cmpsl rex.WRB test jmp xor jae sub xor in xor (bad) or rex.R out and push mov cs (bad) (bad) hlt mov movsb adc cwtl sub pop rex.WX (bad) rex.XB rex.WR sbb test int3 fsub mov mov pushfq (bad) and and iret enterq (bad) adc clc out icebp std rex.XB test jno cmp lret mov movabs sbb or retq es rex.WRX jno sbb cltd cmpsb and jmpq sar push push (bad) lock adc cmp (bad) push (bad) sub sub xor jno rol push mov xor fadds addr32 pop rol or jmp negl xlat rcrl lret roll mov movabs sarl jno or rex.B rex.WX sbb sarl mov shl pushq adc shrl jle and es or popfq mov (bad) and icebp rcll mov push (bad) movabs pop sarl es in int3 movabs sub icebp sti (bad) cmp pop cmpsb pop fidiv int shll xchg retq or add (bad) fnop lret and stc stos mov mov je jle xor out jb nop xchg pushq out (bad) repnz rcr (bad) mov mulb shlb cmpsb fldenv rex.RXB mov out (bad) jae or nop (bad) mov (bad) stc shll jbe addr32 mov jmpq rex.XB jne xchg pop movabs movabs rex.R cli fnstcw fildl outsb rex.RXB sahf (bad) sahf or loope imul mov pop push out cmp mov rdmsr movsl (bad) movabs cld lods popfq retq (bad) (bad) cmpsl in rex.B fwait (bad) leaveq ja (bad) je cwtl sbb cmp rex.R pushq lods stos or insl (bad) pop jns rex.RB rex.WR lret (bad) lret xor pop addr32 ss sub test (bad) sub rex.WX cld (bad) std fnsave sti fidiv rex.WXB repz jo add xor roll roll jbe roll mov movabs mov retq loop jae repz mov pop pop sahf push (bad) xor rcrl iret cmpsl mov (bad) (bad) mov cmp icebp pop jbe nop rex.B stos xor loopne mov jne adc mov movabs sub (bad) mov and movabs (bad) add es scas sti (bad) repz pop lret xor shlb retq out int3 rex.W test shlb loope rorl nop test je (bad) out (bad) and push pop stc jg shrl lret es rorb jp leaveq rcrl rex.WRXB loopne nop movsl cltd and mov xor frstor rex.WR (bad) outsl insb xchg mov adc vpminub xchg imul sti xchg imul pop leaveq pop mov (bad) lock (bad) lret pushq ljmp shrl lods repnz (bad) push adc rex imul rex.RX roll (bad) repnz shrl (bad) mov orb pop push cmp rex.WX cli or (bad) jle cwtl cld add lods ja std xor jne pushq and rcl jno cmp pop xchg fdivrs push sub and pushq push xor leaveq in add rex.RX rex.X shrl jnp roll movslq jo (bad) (bad) (bad) sub jmpq mov mov sub repz mov mov sti xor xchg rcll add out cltd adc or sub adc incl fcom jg je (bad) pushq loop push sub mov (bad) nop rex.RXB fcoms pop rex.RX in (bad) and (bad) vpmadd52luq mov xlat shll lahf repz enterq test out stc (bad) cwtl flds (bad) roll movabs (bad) int cmp mov shll xor test rex.R jg cli (bad) mov cmp out push rex.WXB (bad) int3 rex.WX repz out cmp (bad) xor mov rex.WRB (bad) cmp rex.WR (bad) jo fdivr (bad) sub (bad) (bad) hlt rex es (bad) gs shll pop (bad) rex.R test es (bad) loop cmp mov js lahf push shrl sbb add cltd mov mov push mov cs rex.WRXB addr32 (bad) cld (bad) mov (bad) movslq leaveq ffree mov cmp cmc (bad) push rex.RXB cmp mov shrl sbb mov sub or jg (bad) shrl out (bad) sub (bad) jae (bad) lret cwtl hlt out xchg pop pop and (bad) fsts iret sbb (bad) adc sbb (bad) fwait pop movabs in xchg retq mov mov movsb fwait icebp sbb rex.R in or rcll fiaddl (bad) pushq sbb rex.R mov or rex.RX jrcxz pop fstpt jns mov iret (bad) (bad) cmp lock add repz jno pop or and pop rex fmull mov callq (bad) (bad) xchg sub mov sbbb (bad) fldln2 fs push adcb int rex.R loop adc (bad) enterq int (bad) rex.B mov cmp xchg movabs mov and ss (bad) xlat sub add and loope mov rex.RXB xchg callq test mov shr (bad) stc je pop loopne adc rex.RX test retq cld xchg mov clc outsl (bad) push movslq pop or repnz lahf add (bad) cltd xor or (bad) insb movsb adc pop pushq leaveq mov stos (bad) pop jle rex.R xor push adc clc sbb fnsave (bad) test xor pop movslq rex.R imul rex.RB (bad) (bad) cmp mov (bad) jne test or mov rorl imul (bad) insl stc ficom and pop rex.R loopne (bad) shll movabs jmp cmpsl xor mov out movabs adc std push test jne out xlat fcmovnb rex.WRXB rex.WRX push mov roll or (bad) iret xor mov jbe lret shrb (bad) shll cwtl gs add jno xchg rex.WXB rex.W loop (bad) mov out fldcw cwtl xor or fwait add sbb sarl adc shrl repnz in js add (bad) shr nop pop shr out rorb pop ror mov xor in and add mov movabs in movabs std rex.W xor stc xchg callq flds push adc test (bad) xchg mov (bad) pop lret mov fiaddl add sbbl jb vpunpckhbw rex mov add scas shr (bad) mov (bad) (bad) jo out jnp xlat xchg add movslq mov cld stc test (bad) sbb sbb push cmpsb out loope sbb (bad) cmp fs movslq push rorl rex.WXB lods or int mov add scas xchg out cmc ds cmp xchg in pop sub xchg (bad) mov shrl (bad) xor rex.WRXB (bad) rclb mov sbb (bad) (bad) movslq and add (bad) xchg out out (bad) orl (bad) roll (bad) andl pop fprem sarl xchg or pop (bad) and test add lods (bad) fidivrl add popfq lock rex.WRX rex.RX rex.RX clc sub add js (bad) jge (bad) repnz sub test jo shl mov add (bad) int rex.WRXB rex lock mov add cmp rex.X pushq movsl sbb cmp adc test add rex.WXB repnz and xchg roll or (bad) fstl cmpsb mov (bad) adc shrl (bad) shll js cwtl lods (bad) xchg imul (bad) in mov fwait rcr sarl and ffree sar (bad) mov pop add rcrl rex.WR std mov lret cwtl adc push xchg cmpsb xchg rex.RX xor add push (bad) or sbb jns push jge add and fcoml movslq lods (bad) (bad) jmp movabs (bad) jo xor jno mov jmpq imul stos pushfq movabs leaveq jmpq fstp rex.WRXB adc push sub xor test pop nop sarl rex.RX movsl sbb rex.R movsb cli clc mov sarl callq sarl loop pop pushq xchg callq (bad) fwait movslq push out fcompl adc and (bad) mov (bad) mov (bad) adc lret or jne movabs or test adc popfq pushq (bad) retq shrl (bad) push push mov mov pop rex.B and rcr clc mov rex.WR fistpl nop addr32 (bad) and enterq push andl sub lret or lahf or mov mov xchg shll rex (bad) sti fiadd adc mov cmpsb xchg lods (bad) (bad) jne jg and movsl outsb and sub xor jae xchg js stc cs xor adc movabs mov cmp movabs (bad) jle mov xchg rcr (bad) test cmc movabs enterq testb roll rcrl xchg movabs add lods in (bad) add jo loopne sub movabs fwait cli rex.XB (bad) xor (bad) je sub es jmp jns gs cli pushq mov ja jg stos mov pushq (bad) icebp nop pushfq sbb jae xor xchg rex.X sbb (bad) retq cmpsl test jne outsl xchg (bad) add data16 adc (bad) stos fwait mov loope (bad) xchg test sti (bad) xor jns repnz int3 insb out (bad) rcrl gs in roll jne in ja fadd or in jge mov test cwtl stc mov or sub shrl fwait int3 rex.XB rex.WRB add pop push loopne mov (bad) jo (bad) fldenv lret test sti rcrl lea data16 mov lahf adc rex.WX rex.RX outsl mov movabs mov mov (bad) sbb pop sarl adc shr cs push (bad) sbb jmpq pushfq (bad) mov cli hlt loop rex.WRX rcll sub nop (bad) mov xchg movabs xorl imul out (bad) pushq jmpq scas fcmovnu test test jge add repz rex.R sbbb ljmp (bad) mov rex.WRB rcll add sbb (bad) push sbb or rex.RXB int lret lods mov pop pop rex.B imul outsb movabs sbb addr32 and and gs out xchg shl (bad) movabs in roll jrcxz fisttpll rex.WB rex.WR in cmp (bad) xchg movsb mov (bad) cmp popfq (bad) push shrl stc repnz test test andl rex.WRB ss jo lock mov jb (bad) in jmpq ds jbe pop out (bad) sbb add fadd rex.R rex.B rex.WXB iret int3 push sub add jl push std roll jge lods repz (bad) (bad) (bad) stc jl xor (bad) rex.W repnz iret test mov sarl repnz mov (bad) (bad) rex.WX sahf rex.WR rclw add loopne cli rcrl cmc inc movslq stc pop loope xor enterq rex.X or ja std stc rex.WXB mov (bad) xchg sti (bad) fcomps xor mov (bad) (bad) loope popfq add sti xor push rex.RXB mov sbb pushq jne std insb pop (bad) sub (bad) sbb rcrl pop or sub (bad) rex.B adc or divl (bad) xor adc callq std sbb insl xchg mov rcr jnp add sub (bad) in pop lods or adcb push shll addr32 push mov adc and shrl sahf enterq (bad) in rex.B ss rol movabs int int3 sub loop mov xor hlt cwtl (bad) jl fisubrl pop add loopne stos lahf (bad) jns mov lret shll mov ss scas (bad) cli add loope (bad) test add sbb xor xor retq and (bad) (bad) in sti xchg or retq repnz and mov (bad) (bad) pop sti shr jle xor repnz lock frstor test loopne cmpsl push rex.WRX clc icebp lea repz orl fdivrp or sub jne mov callq adc sbb (bad) rex.WRB rol (bad) adc incb (bad) repz roll push (bad) push pop cld shrl mov out mov (bad) in std pop pushq sub mov jns scas and mov sub cmp sti idiv imul jae xchg leaveq and adc movsl add cmpsl (bad) jg int3 (bad) pop mov pop sub lret idivl scas or xlat add imul movsl or rolb pop (bad) and (bad) outsb add out insl sbb or mov jns (bad) mov mov lret out hlt rorl movsl (bad) add cmp in or and (bad) and nop roll (bad) xor rex.R jne rex rex.WRB add lahf xchg (bad) or movabs pop push pop jmpq sti xchg push adc stc or mov or adc add icebp rex.RB nop (bad) (bad) mov in pop sbb rcrb add (bad) sub insb roll (bad) push mov rcr xor ffree rex.RXB subl retq mov cmp add xchg mov fcmovb xor fisttpll nop lret pop xchg or sahf add movabs shr shrl (bad) jae lret (bad) cmp in iret jns rolb int hlt (bad) in mov jmpq rcll lret (bad) rex.WR bndldx push out pop rex.WX imul mov (bad) ss sahf rex.WRX data16 movabs out shr nop push or xor rcll fimull mov push shrb scas lock lret (bad) jmp imul imul (bad) mov loop rol (bad) rex.WXB int test iret (bad) lock retq hlt sub retq loopne movabs loope pushq (bad) xor (bad) or xor sahf xchg imulb (bad) repnz retq xchg cmpsb out jns or (bad) (bad) (bad) repnz rex.W rex rex.B cmpsl scas or or or mov int xor and fldz out rex (bad) mov (bad) rorl rex.RB or (bad) sub repnz rex.WRB loop sbb movabs mov callq add mov (bad) sti push pushq and fmuls cmp lock rol (bad) (bad) (bad) sub loope fcmovne repnz outsl rex.R rex.RB ds sub cwtl pop fcmovbe (bad) mov add fdivrp (bad) push callq add hlt rex.WXB lahf rex.RX add rcrl stos outsl (bad) mov lea mov fsubl imul rex.WX jb jae fadds pop iret retq add loopne or frstor pop test cmp out xlat cmpsl (bad) and nop es rex pop (bad) fcmovu es add (bad) jno rolb sub enterq add rex rex.B cmpsl sbb xchg xlat xor (bad) gs (bad) push mov xchg mov iret std rex ss (bad) xor mov adc jp rex.WX xchg rex.WXB xor (bad) add (bad) sbb insl mov nop rex.WX icebp mov push jno push jl rex.XB lock (bad) (bad) (bad) sahf shll jnp repnz rex.RXB push hlt icebp (bad) roll rex.WR and xchg cltd (bad) (bad) divb cmp mov rex.WR mov mov mov icebp xchg push in fdivr sub or lock in rex.WB movsl fistpl (bad) rex.R or add xchg out jnp faddl xchg sub lods push add (bad) xchg sbb and lahf test movslq (bad) rex.WB xlat in subl mov enterq notb test clc or rex.WRB movslq imul sbb (bad) sub nop movabs jno adc add sbb pop mov (bad) (bad) in ds hlt jg adc lods ficom int (bad) xchg (bad) rex.WRX cmpsl adc sbb mov pushq (bad) mov int3 mov pop (bad) callq mov fstps insb mov loopne sbb adc clc adc sbb rex.XB scas jmpq rex iret and rex.XB (bad) pop stc xchg (bad) sub xchg cmpb (bad) pop adc cmp sahf icebp rex.WRX mov fisubrl rex.WXB (bad) sbb pop rex.WRB sub (bad) mov imul mov movabs mov clc rex.RXB sarl jmp adc loop push pushfq add div mov ficom stos jne mov (bad) or jge or (bad) sahf movabs iret int3 pop movslq xchg jle sar and jae loope lea mov outsb test mov (bad) orb loope rex.W (bad) test adc (bad) hlt in mov and sbb add mov movsl (bad) imul sbb xlat (bad) test leaveq (bad) lea jns leaveq (bad) mov rex.WX rex.RXB cltd out jl jp (bad) enterq outsb outsl add fisttpll (bad) mov cs mov add pop movslq (bad) jno xchg leaveq rex.WR xchg icebp movabs fcomps xchg cmp (bad) xchg push cld pushfq fbstp jb and and rex.WRB xchg add rex.XB fiadd sbb cli in movabs movsb mov jge in jnp rex.B or rex.WRX icebp sti jrcxz and retq jb lods mov repnz (bad) fs iret stos adc xchg adc add or xchg (bad) shl jb mov jne rcll fadds or sbb jno rex.RXB mov lret (bad) (bad) pushq pushq cmp lret scas iret push push (bad) and loop jno add mov (bad) (bad) cmp or (bad) movabs mov shrl pushq push roll mov out outsl rcrl and pop repnz in notb movsl stos int push test repz and fdivrl ss stos mov jrcxz subl (bad) sub iret rex.XB fcom (bad) lret add xor rcl outsb or mov (bad) xor or (bad) add je out xor sarl cs cmpsb jae rcrl enterq lahf std sar movabs fild or insl (bad) mov jmp imul (bad) (bad) push xchg lods ja rex.WB pop insl rcl rex.WRX adc rex.WXB rex.WRXB adcl (bad) cmp or rcll and sarl sub mov (bad) mov nop sbb rcrl iret rex.WRXB js (bad) (bad) (bad) stos sub loope adc rex lret std mov and xchg add js jnp fadd movabs mov sahf shr ror pop (bad) xchg retq rcll add std mov rorl pushq lods (bad) insb out cmpl jb mov xor xchg imul packsswb (bad) enterq in jns or cmpl imul rcrl sub imul ja cmp data16 mov rcrl shl (bad) shrl outsl pop jmpq (bad) fnstsw outsb (bad) xchg hlt lahf fisubl or jae rcll mov shrl sahf mov cltd fldcw pushfq (bad) (bad) (bad) (bad) rex.B rex.B jmpq push insl je xorl push rex add callq rcr mov andl lret add fsubs sub movabs cld xchg mov add lret (bad) jl mov movabs (bad) iret jo and mov popfq lret (bad) sbb or rex.RXB jle pop mov bnd leaveq mov (bad) and (bad) icebp ss hlt pop test rex.RX fs rcrl stc add rorl jrcxz shll scas pop xchg xchg sbb xorb sar xor adc gs loop mulps rorl pop mov xchg (bad) (bad) fwait idivl or std pop mov test out rex.WX (bad) (bad) add retq push add xor xchg rex.W rorl cmpl jmpq add icebp (bad) (bad) (bad) (bad) or (bad) in adc cld pop es repz and push sbb add cli rol pop pop or (bad) loopne push (bad) jmp sub (bad) (bad) fsts sahf or cmp jo rex.R hlt mov rex.WX (bad) test rex.WRXB add callq cs enterq sub mov imul and std repnz mov xor lahf add mov ljmp movsb rex.WRX pop cs fisttp rex.RB (bad) rex.WX pushq jns and subl jp push in add cmp xor jle jns lret pop loopne jne insb sahf or rex.RX (bad) jrcxz xor rol lock cmp mov (bad) imul mov retq sarb cmp xchg mov (bad) rex.RXB repnz retq (bad) mov mov andl mov repz shrb rex.R cs rex.WRX xchg rex.XB pushq test mov (bad) int3 (bad) mov or movslq jge popq xchg sbb je rex mov neg cmp repz (bad) or movsb mov sub push (bad) js jne adc mov (bad) mov sti rex.WXB int3 sub jae (bad) sbb loope (bad) movabs push rex.RXB jg (bad) rex.WRXB imull (bad) in ffree (bad) xor rcrl push shr stos cmpsb xrelease std jp (bad) add (bad) pop sarl andl sub (bad) pop callq sub repz push cmp loop out xor cmp xchg cmp adc mov add rex.B mov mov lods lcall mov xchg jp rcll sbb stos loopne jne mov enterq xchg repz rex test jl (bad) cmp cli roll mov roll fimul xchg shll xor rorl lock cld stos or fnsave outsl (bad) or jp (bad) hlt loope sbb add lret jle fcmovnb outsl xor (bad) lock (bad) cmp jge fadd loop out add jnp mov (bad) ja (bad) xchg mov mov sahf add (bad) (bad) in (bad) outsl rol push loope fidivr lahf lret loopne rex.WRX pop movabs movabs rex.XB jle rolb ja jp sub ror test movabs movslq rex rex.RB stc jbe testl faddp (bad) sub cmc add iret sbb xchg fsubl shlb pop or lret fildl callq xchg hlt out ja mov movsl (bad) int3 (bad) fildl xlat xor repnz xchg (bad) push (bad) fidiv cmp (bad) rex.WRB pop (bad) imul sbb (bad) push idiv test cltd xchg shll pop (bad) mov xchg out jmpq xchg (bad) jge pop test and fisttpl xor rcrb retq mov (bad) (bad) pop mov ficoml sahf or xchg (bad) xor movabs repz js sbb test rex.B mov mov xadd xchg (bad) xchg (bad) pushq xlat insb add rex.RX add cwtl (bad) xor scas lods jae or mov sar jp rclb rex.WX pushq rex.WB mov xchg mov repz fs int shrl bswap movb (bad) (bad) rex.WXB lret xor icebp outsl rex.RB or cli scas jl ss (bad) shrl es mov push (bad) rorb sub (bad) pop sub jno cltd xor mov pop lods (bad) pop lock xor in insl idivl mov sbb orb test jne rex.WX ror clc imul (bad) xor rex.WXB mov rorl (bad) (bad) repz (bad) cmp out int (bad) pop loope mov or jbe hlt rcr jns retq and pop cmpsl jle loope pop xor data16 mov or (bad) in rex.B std rex.X rex.WRX je xchg (bad) mov lret icebp jge (bad) add iret sbb adc (bad) xor imul movabs jbe (bad) (bad) icebp jne mov xlat lret shrl rex.WRX sub lods xchg (bad) stc (bad) (bad) shl rcrl jrcxz pushfq fwait rex.RXB rcrl and outsl pop cld sar in stc sub cmp cwtl jae or jle rex.R sub jne ja fnstcw add (bad) in cltd je (bad) cmp (bad) cmc or sarl jno cmp mov xor adc adc mov sbb (bad) in mov mov lahf roll sub xabort (bad) (bad) (bad) loopne mull jnp cmc or xchg (bad) pushq xchg sub sbb fldl (bad) je xchg std sti outsb out cmp fcoms adc sub (bad) (bad) insb cmp xor mov jmpq adc (bad) (bad) xlat and (bad) insl rex.X sub pop jno pushq (bad) out pop (bad) jge cmp rex.X mov int3 (bad) jae test enterq pushfq xor sahf movsb mov (bad) (bad) movabs xor jmp icebp and (bad) (bad) in (bad) sub (bad) jmpq callq or lock addr32 int3 icebp xor fmulp (bad) xchg fsub mull add cli (bad) adc loopne (bad) jg cmc movabs (bad) (bad) sub insl (bad) (bad) lock imul add (bad) jno add mov (bad) xchg in ja push lods cwtl imul sar jns clc (bad) leaveq pushq mov ja test (bad) add jns int xor push (bad) xor (bad) in pop (bad) cmp cltd push jge std xor loopne fwait jg mov (bad) (bad) testb (bad) mov pop out (bad) pushq or (bad) loop cmpsl or jnp sbb mov (bad) mov cwtl int add iret loop sub rol and cmpsb jmp shrb cmp cld mov outsb lret xlat rex.WXB sbb jb (bad) xorb cmp out push rol out rex.WB cmpsb pop (bad) int3 outsb (bad) sahf xor rcll rex xadd (bad) add repnz or cwtl lea (bad) int (bad) sahf (bad) test std test jnp (bad) jbe cmp sub stc out sub xor roll movsl rcl jge add pextrw iret (bad) xorl push rex.W sub or (bad) add jmp pop add pop out negb popfq lods scas cmp loop cltd jns or adc sbb test (bad) imull fnstsw mov sub xchg int rcrb fstpt test leaveq jmpq adc lret sub add rex.XB xchg and retq leaveq cmc push push sti roll iret push pop or in rex.RB fnstcw add subl jns in es in rcr cli movslq cmpsb pop in movsl cmp (bad) adc xorb vfnmsub132ss data16 insb mov (bad) cltd cmp hlt iret sahf rex.R and outsl mov add rex.W (bad) sub xchg (bad) test in int sub loope cmp lock rolb rex.WRB sahf jo loope (bad) (bad) and lret stos test add leaveq in xchg stc jae (bad) int test sub mov jl int3 test (bad) or push cmc xchg and scas adcl xchg jg retq repz lret or shll jnp movabs fbstp add loope sub pop pushfq or rex.B cmc (bad) add movabs (bad) adc rol movslq (bad) pop lret out movabs jg nop sub cmp and xor (bad) nop mov mov cmp movabs add (bad) cmc (bad) mov add mov sub out leaveq pop cmc stos add push xchg xchg test cmp pushfq cmpsb test jbe rcll add jno xchg shlb pushfq (bad) mov leaveq rex.WRB and (bad) scas adc (bad) cld rcrl (bad) and fnstenv ffree retq gs ror test or lret cmp ficoml xchg jle imul mov (bad) (bad) enterq sub callq push lock fwait cmp fcmovb rex.RX (bad) rcll jmpq rex.WXB mov pop shl clc mov lret rex.X xchg fist imul (bad) jb rex.RX xor in lret xorl jbe shll ja pop adc rep outsb out iret (bad) cmp (bad) enterq add es (bad) sbb (bad) je fcmovne fwait pop (bad) repnz (bad) nop retq xor pushq sub in (bad) (bad) adc ror or fsubrl sub sub std cmc (bad) and (bad) (bad) scas gs imul mov sahf (bad) mov cmp mov xchg (bad) lods lods fimul retq clc jb rex.X out ja (bad) lahf ss and xor pushq jno lret rex.RX es (bad) insb pop out mov jmp add or mov mov jne out mov push xchg clc xor pop rorl fwait ror add lea int3 sti pop clc xchg int (bad) insb or sti adc (bad) xor add lret ror fwait jmpq stc add (bad) test shrl leaveq push out pop (bad) push mov or cmpsl loopne (bad) jl xchg (bad) jo insl ja cmpxchg add xor callq and add xchg shll jb (bad) fwait sbb shrl mov push rol fidivrl (bad) xchg push rex.XB fistp (bad) add insb xor repnz sbb jno xlat cld or (bad) jrcxz sub sbb ffreep mov sbb xchg mov xor in mov scas xor sbb xchg sub mov (bad) adc mov adc sbb jrcxz cmp cmp push jp callq in and cmp sub rex.RB lea add test cmp movslq cli je mov repnz sbb movb add insb jae lret add jp addl cmp sbb cltd mov movb jle jmpq adc add rcl stos xchg iret (bad) movabs mov cld push or mov sbb (bad) (bad) out sarl add cmp rex.WR mov sbb hlt rcrl loop callq rex.WR add fsubl mov push mov mov jle fildll jnp loope xor adc movabs rex.B insl cmp shll in mov (bad) sbb callq lret cmpsl ja sahf lcall rex.R mov pop xor push pushq in pop jo xchg push mov cwtl cmpsb xor rex.RB mov outsb sub leaveq push xchg movabs (bad) mov adc xlat xor enterq mov rex.R (bad) rcll lods cmp add mov out iret frstor hlt mov mov (bad) sbb or (bad) add stc (bad) sbb xchg or xchg and movsl shll rcrb (bad) sub movabs and (bad) ficomp movslq rex.RB popfq cmpsl (bad) cmc es outsl push rex.WR enterq vpand pop (bad) rex.R lods (bad) (bad) lea and cmp ds fldenv pop test cltd (bad) xchg rex.WX jg lods (bad) stc hlt or sbb rol mov sbbl rex.W mov sbb (bad) mov sub cmp cs push add or adc xlat imul sahf rex.RB fmull xor jg adc repnz rex.W and rex.X push cmp outsb adc pop mov mov mov mov cltd rorl movabs in xchg cwtl callq int stos data16 rex.XB loope jnp jb (bad) ss rex.RXB mov pop cmp rcrl (bad) mov push cmp fs shll cld out fwait lahf lock mov or rex.RX (bad) in xor ja add xchg and movabs or faddl (bad) fcompl mov icebp (bad) (bad) fadds mov out xlat vmovdqu push xchg movabs (bad) in or xchg adc fbstp rex.WXB in frstor add cmpsl movabs retq rex.WRB fld pushfq adcl (bad) (bad) test (bad) (bad) and sbb add rcr fisub test clc lea loop insb repz mov add (bad) movabs fwait mov mov and cmp rol retq rex.X imull lret rsm out iret mov shrl and mov cmp (bad) (bad) (bad) imul or sbb xor rcl mov add sub jns or in outsl adcb pop pop push mov movb shrl fsubrp and (bad) leaveq pop or mov pop push jrcxz rex.RX mov shr push shll xchg (bad) ja jo sarl fisubr std stc rex.W rex.X or xchg addr32 (bad) std negb cmc adc test xchg cmpsl movabs adc rex.RX lods lea insl xchg adc int3 jge rex.RXB cmp fstps xchg (bad) rol insl in cs (bad) rex.WR jrcxz int rorb repz push (bad) gs sub outsl (bad) (bad) mov scas rex.W or outsl popfq (bad) xchg xchg and jle cmpsl (bad) mov rex.WXB fisubrl sbb mov repnz mov icebp cmc nop loop js icebp (bad) flds lods stos jg xor sub retq add sub fs fisttp cmpsl rex.W sub xchg and fstl hlt sbb cmpsb or jnp out add (bad) sbb (bad) pop rex.WRXB mov or add pop gs adc es movb xor (bad) flds sub (bad) add ja lret lret insb lods or fadd adc rex.RX add (bad) sub shrl mov out cmp rcll out mov and (bad) and gs outsb rex.WRB test add cwtl repz mov cs xchg fwait mov sbb in rex.B stos rex.X sbb jl and (bad) iret lods ja rex.XB xor sarl xchg adc (bad) iret test shr shrb xchg add sub test adc xchg shll push rex.WXB mov push xchg pushq (bad) movb cmpsb push push sub adc sbb addr32 rex.WR shrl shll push xor mov or and mov cmpsl mov enterq jmpq cmp cmp cmp xor sbbb (bad) pop int sub mul (bad) sar mov callq sbb sbb divb jge loope (bad) pop add rex mov rex.RXB (bad) add sub rex.RB fnsave adc sbb popfq rex push and sub add and out mov (bad) sbb and insl mov hlt add or rex.RX out (bad) scas add jno movabs rex.WX imulb cmp gs rex.B outsb (bad) js (bad) loop rex.WR cs outsl cli (bad) xchg xchg (bad) xor loop (bad) lods stc (bad) xchg movabs test xor add sarb lods pushq movabs lods scas rcll iretq mov push loop rex.WR add sbb xor sub out xchg mov in lahf loopne repz fldt callq repnz mov fsubl (bad) mov (bad) (bad) (bad) out pushq movslq sub lea rex.XB rex.RB int3 sub (bad) jl xlat lock sbb adcl inc add jb (bad) pop xchg mov rcll xchg movslq outsb loope int push int3 sbb repnz insl testl and ja pushq (bad) mov (bad) mov xchg cmp jns sub repnz adc lahf pop incb mov and es in (bad) cmp int3 (bad) jnp mov rex.B test (bad) xchg mov (bad) rex.X cmp addr32 repnz frstor loope shlb cmp sub rex.RXB lods cwtl (bad) xchg sbb sarl jae fisttpl test rex.WR es cmpl fcom movslq cltd xlat enterq mov jrcxz fcmovne jle jl repnz pop jrcxz or lret movslq (bad) mov jbe (bad) movslq xor cmp sbb xchg lret pop (bad) mov rex.R jno test cmp subl icebp cltd cmp out mov imul rex.WRB pop cmc mov cmpsl sbb mov repz (bad) and rex.WRX movabs mov mov int xlat (bad) js imul je fcmovb push jae sub ficoml rex.RB add addb jne (bad) fldenv sbb mov leaveq rex.RB orl fs pop jmp enterq rex.R jge mov repnz (bad) outsl jb or (bad) cmpl jbe jo adc rex.WR retq fs jb (bad) mull jmpq (bad) jrcxz mov (bad) stos sub (bad) (bad) cmpsb (bad) test (bad) fisttpll adc flds retq std rol fisttpl movslq rolb xor adc jge loop mul xor movsl and add xchg push cmpsb jle movsb cmpsl rex.WRXB (bad) sbb sbb test adc movsb fneni(8087 (bad) mov ds mov insl rex.RX std mov cli shrb and movabs addl jmpq mov rex.RXB rex.RX movabs xor mov imul faddl mov neg rex.R xlat (bad) test movsl xor mov (bad) test loopne mov es imulb xchg fcomps stc rex.RXB pop jmp mov xchg es pop enterq movabs add rex.RB test mov rorb xor stc (bad) cmp std lock sub outsl (bad) and (bad) insb sbb (bad) idiv add jbe out fstl mov int cmpsb rex.XB test xchg bnd jb xchg rcrl sub jmpq (bad) and jo (bad) rex.R (bad) or scas rex.WRX jle or and test enterq fs lock (bad) pop sbb idivl cmp ja rex.R rex.X ficomp ja enterq jno mov repnz pushq rex.W ja sub xor pop sbb (bad) push movsl (bad) test fwait xor cmpsl sbb mov in jp lock fidivl jno test rol mov fsub add mov repnz fldl cmp out enterq cmp rex.R rex.RB cs sub leaveq push test scas rex.WRX mov (bad) rex.X test test pop xchg icebp fiadd shrb mov negb lahf scas (bad) xchg retq in cld jmp roll callq mov movsl cwtl orl ror movabs data16 mulb cmp jmpq lods test xchg out loope hlt xchg rex movabs je mov enterq gs (bad) movabs retq rex.RXB sbb and lret mov (bad) add sbb loopne (bad) fdivrs xlat and (bad) fldcw test xorb rex.WB sub or movabs (bad) callq sub xor mov pushfq movabs xor rex.WRX and jrcxz xchg fistpll xchg fsubrs (bad) (bad) mov xor mov (bad) or fcomps mov adc enterq retq or xchg fmuls fnop mov scas jns addr32 int3 nop in (bad) fsubr cmpsb sub hlt (bad) sub add icebp jne or jrcxz add rex (bad) jne sub jae movslq sti shlb jns pop mov movslq xor (bad) int3 or (bad) clc add and xlat test rex.WR rex leaveq xchg cli pushfq movsl xor out xchg repnz sbb (bad) mov cmp mov add (bad) es clc (bad) pop (bad) fdivl sarb ja push ja jo mov int3 (bad) xchg insb adc and (bad) movb jno repnz in fwait shll out test lret mov xor pop mov sti pop shlb shl push xchg repnz push repnz mov out xor retq sub lret fwait (bad) rorl pushq and pushfq cs adc stos sbb fild movsl imul int3 int jo bnd adc cmp insb out outsl fstpt jae xor (bad) in pop sub xor rex.WRB fdivrs or jmp loop jmp scas and cs cwtl rex.WX sbb stos mov rex.RB jo sub (bad) add xor mov and loopne leaveq (bad) cmp and pop pop cltd retq fidivrl sub out pop xchg or addb test rex.WX (bad) jns add pushq rol fcom js rex.WRB (bad) movsl lock mov scas xor push push and mov cmp in xchg fsubr fs rex.WRB js mov sbb iret movl jge mov int test push clc cwtl xchg push rex.WR add movabs (bad) pop callq nop scas add fidivr add or xchg (bad) sub push push gs rex.B mov cmp push adc imul mov out loopne movabs xor outsb mov or outsl rex.R xchg out (bad) stos shll jo add adc rclb callq rex.R ds xor (bad) sub mov lcall fild insl (bad) cmp repnz and movabs fpatan js,pt mov jae loope cltd (bad) icebp mov xchg (bad) loopne cmpsl mov xor and repz adc rcr mov movslq iret addr32 (bad) retq movabs fxch movsb or hlt and rex.WRXB mov rex.B rex.W int3 (bad) xchg mov (bad) lods mov or std leaveq repz rex.RX cmp adc sarl rol rex.RXB jmpq rorb sbb int imul rex.WR xor int movabs rex.RB rcrl sbb lret rex.WRX cmpsb (bad) ss add fistpl xor xchg jnp jp sbb (bad) rolb pop (bad) out jbe jrcxz or xchg cmpsl pop movabs in push add pop mov or (bad) insb test ds cmp rcl fisttp adc or sarl stos push cmp jg cmp xchg out (bad) mov mov (bad) rclb (bad) (bad) cmc (bad) sub movslq cmp add rex.WXB rolb pushq stos js mov rex.WRXB cld addl mov callq lcall mov rcll and rex.X rex.WR (bad) (bad) rorb sbb in push mov xor push rex.WRXB movabs scas xchg cmp callq cmpsl mov (bad) xchg stos pushq rol rex.R push (bad) imul (bad) mov (bad) xor pushq xchg jmpq xorl xchg movsl (bad) fnstsw stos add (bad) pcmpgtb iret out and mov xor xchg in add in add rcll movabs (bad) xor rex.R rorl popfq xor jns push in rex.WRB retq mov test and divb (bad) movabs clc (bad) cmc pop out out and and (bad) mov (bad) outsl xchg rex.WRX or mov mov js sbbl (bad) repnz rex.WRX mov cmpsl test push jo sbb mov repz movabs add mov fsubl stc rex.XB cmp cmp std fcompl pop pop jp add movsb xor fcompl std mov scas rex.WXB nop push jne (bad) lock sti scas (bad) xor sbb mov cmp sub stos or mov mov (bad) scas fmul std jbe and (bad) int3 xchg mov (bad) int3 (bad) pop or rorb or adc jno sarl rex.WRB movabs sbb sbb std jge jno lahf add fcomi enterq (bad) loop ja stc int3 movabs jno fisubr rolb test fmul movsl cmpsl (bad) fldl xchg int xor adc retq rex.WRB pop mov mov mov (bad) loop (bad) rorb adc xlat (bad) or iret repz rex.WRX cmp retq (bad) (bad) mov imul rex.B sbb pop xchg je add (bad) iret xlat js xor std out cmp data16 push add mov adc lahf fldcw psadbw movsl cmp sub sub adc adcb rex.RXB stc loop (bad) loopne enterq cmp (bad) rex.B mov rex.WB sub jne (bad) (bad) rex.WR ds gs (bad) xor mov jrcxz test or loop xchg mov and stc popfq sub cmp test cmp (bad) iret pushfq (bad) repnz (bad) movabs rol (bad) cmpb mov cmp (bad) jns out adc (bad) sbb jrcxz pop fnsave push (bad) xchg rex.WRB lret mov rcl andb rex.WX cld insb rolb jae jmpq mov icebp rolb pop (bad) (bad) cltd movabs push pushq fadds rex.B rex.X lret mov jno movabs (bad) jmp out roll hlt mov (bad) rex.WRX mov in scas rcr adc out rcrl repz ljmp scas or sarl mov (bad) mov and fmull cmp fs and rex.WRXB rex.R fisttpll cmovno sub rex.WB fisubrl cltd rex.RXB mov jge add loope sub jp clc xor movabs xchg cld sbb test repz rorl sbb sub in rorl lods mov scas push push mov mov sub rorl xor roll push in stc pushq mov scas cmp rex.WB adc in xor mov rolb icebp adc fwait cltd jg in mov rex jp or rex.W lods divb mov and xchg je test xchg insb sub jno (bad) mov pop shrl sub scas rex.RXB pop xchg or mov sahf shrl and xor jae (bad) rorl rex.RXB pop mov iret nop jl xor stc push test movabs divb repz pop or rol mov mov or rex.WRXB xor loopne cmpl pop stos xor mov cltd mov sub push cmpsb rex.B xorl sub jp callq int3 or rex.RX jmpq xchg insl xchg shlb rex.RXB add int3 cmp (bad) add mov xchg repnz or (bad) and cmp xor adcb lret stos xchg cli mov rex.WR mov (bad) mov push test cmc rex.X lahf out (bad) imul jne rcrl cld xchg push retq stos mov mov jno pop jne rex.WXB jbe sub movabs xchg (bad) mov mov sahf roll cwtl (bad) (bad) sti xor fist pop sarb add sub sbb gs (bad) (bad) adc roll (bad) mov fucomp movslq cs movabs push (bad) (bad) sbb (bad) (bad) pop out pop xchg jrcxz test insb adcl pushq add movsb fmuls addr32 sbb sarl cmp push test xor addr32 xchg mov mov mov sarl mov fstl in int3 jne cmp pop out xchg pushq add cmp mov add imul out sub data16 insb mov mov mov adc rol stos movabs (bad) iret (bad) adc cmp out cld (bad) (bad) mov add jbe mov loope sbb in push (bad) (bad) xchg jb scas test and add mov or in int sbb xor es jl xor or jle (bad) cwtl movabs (bad) rex.RX mov fldt mov pop sub pushfq lods jmpq insb xor jl in or rex.R lret stos rex.RX (bad) and leaveq lods mov mov icebp cli clc cwtl mov or rex.R sub shll adc (bad) fisubl mov lods movabs jg cmpsb int or in add out stc add clc adc pop rex.B outsb mov adc and (bad) movslq fwait test and rex.X (bad) mov (bad) jbe (bad) mov jnp adc rex.R jp test pop lea sub js fwait out rex.WR iret cmp rex.XB rex.RB pop fdivrl cmc mov and xor fistpll imul pop mov pop cltd out hlt xor enterq rex.WXB stc or add cmc rcll (bad) stos sub insb rex.W or mov rclb jne addr32 xchg add mov ja and sbb xchg add jp (bad) and (bad) rolb rorb fiadd (bad) stc testl mov rol mov (bad) lret xor xor divl add mov sbb test and and jbe rex.X int3 xchg outsb mov rcrl movslq lea xchg (bad) jae jmp rcll rex pop add movsb sbb cwtl mov mov pop movabs pop or loope sub shrl (bad) and movabs test and xlat enterq (bad) (bad) add mov or mov mov fcoml pop rcrl ficompl mov push in imul (bad) faddl pop rcrb ror rex.WRXB jo pushq in rex.WX andl adc imul xchg sub shl lret push movsb lods or xchg jae iret xchg sar ds xchg (bad) shrl fbld movabs roll jp lret and (bad) callq sbb cli mov sarb retq (bad) (bad) (bad) push divl and cwtl xor (bad) shl shll rex.RB mov rex.WRX add hlt or (bad) cmp sbb mov mov (bad) hlt sbb icebp push decl and rex.XB xor scas in jmpq or (bad) icebp (bad) insl xchg rcrl xchg lret ja xchg xor test sbb pop mov punpcklbw jrcxz xchg cmp xchg rex.RB jb imul jno sub lock mov or rex.RB (bad) out pushq sbb adc (bad) mov sub fdiv jae adc mov fdiv leaveq fisubrl or rex.W sbb (bad) (bad) (bad) addl rex.W int xchg lods adc (bad) jnp cmp xchg iret push shl xor adc xchg pop pushfw and (bad) rex.WR (bad) rcr add (bad) (bad) rex.RX xchg rep scas or push movsl out jrcxz add (bad) repnz sub mov jp sub (bad) (bad) xor xchg (bad) ss (bad) mov xchg mov rex.B pushq mov rcrl rex.WRX (bad) jmpq pop (bad) mov xlat imul (bad) xchg (bad) fistpll and stc cmp cwtl rex.X adc loopne mov mov fwait and cmp (bad) push popfq out movabs (bad) cmpsb xor mov movabs movabs xor stc (bad) mov (bad) xchg adc xchg rex.RB pushq stc ja mov and js jrcxz loopne rex.B rex.W out or scas rex.WRB lcall add jae jl sti int (bad) subl cmp out jle sbb add out movabs leaveq mov xor or sbb sti add cmp add movslq mov adc (bad) (bad) jle lea rex.WXB pushq cld lret scas enterq loop rex.RX rex.B outsb adc mov out mov pop retq movslq movabs lock decl or testl xchg test or xor xor fistpll (bad) js repnz je (bad) stos cli push not rorl retq cmp (bad) stos jne rex.WRXB repnz adc (bad) and movsl shll loopne jae (bad) mov add (bad) and sbb ror jbe insl jp fiadd pushfq cwtl rex.RX push (bad) and push xor sub pushq pop pop fwait rex.WXB xchg sub and sub insl sub shll mov (bad) (bad) mov push shrb jbe push rex.WRXB (bad) jae sub cmpl xchg (bad) mov insb fxch sbb in adc cwtl (bad) (bad) loope push rex.R es jns retq xchg clc imul (bad) in add fs roll lock fstpl in imul shlb (bad) rex.RXB cli and pop rex.WB jl rex.WRXB notb jg mov xor shll in (bad) stc mov divl lods test lret out cld xchg loop mov and xchg mov jns bnd shll add fucomp movabs fldl rorl movabs rex.W mov fsubrp (bad) (bad) movabs insl cmpsb retq sahf (bad) test or xor repnz xor add (bad) push (bad) outsb adcb (bad) jle or loopne shrl adc rcrl and mov mov shrl cwtl (bad) je in popfq mov rex.WXB out lock loop sarl or (bad) rex.WX push or sub push sub in int or rcll (bad) int3 xchg movsl jne test (bad) and fisttp pop imul shll rex.RXB jl rex.X mov cltd (bad) xor rcll lods fldt (bad) shrl (bad) sub lahf xchg mov (bad) mov cmpsl push pop test fwait and lret (bad) shl or xchg mov sbb adc loopne add jbe rex.RXB sahf sbb xchg adc rex.WRX rex.RB mov test rcrl (bad) sahf hlt jno sub retq pushq mov icebp outsl rex.WRX mov rex.WXB (bad) lea ja or adc push cmp or sbb (bad) xor nop or jrcxz jnp and (bad) imul cmp jns adc pop (bad) cli (bad) sub (bad) rex.WXB (bad) xor xor mov lahf jbe pushq lea in add pop test xor in jne mov (bad) cmp insl repz rex.RXB rex.WRXB (bad) pop loope jb hlt leaveq out (bad) jp shl xor (bad) (bad) jno rex.WB (bad) cmp js jno (bad) insl and mov adc xlat cvtdq2ps sar jne ficomp xor (bad) rcrl hlt rex.RB (bad) mov rex rcr or rcll fidivrl pop std cltd test (bad) xor pop (bad) sbb (bad) push (bad) repnz lahf push out popq mov adc cmc retq adc lret (bad) (bad) mov (bad) lea (bad) pushq hlt orl ror xchg data16 (bad) movabs cmp rex.WB (bad) pop rex.WXB rex.RXB rorl (bad) (bad) addr32 shrl sahf vmovddup pushq callq repnz ror and jnp data16 hlt (bad) outsb xchg pop or sarl es cmp roll fstl mov (bad) (bad) sbb (bad) sub jmp xchg movabs rorl (bad) ds in fs icebp movsb (bad) mov je rex.XB sbb in rex.B jns (bad) sahf lret and fild fsub sarl mov rcll fwait in pop or loopne ror xor rex.WXB sbb (bad) movabs ror loop cmp in sub xchg (bad) clc testl rex.WR add addr32 out roll iret callq clc push rex.WRX rex.W (bad) and or jno and fisubl movsl ds fcos test rex.R sarl test sbb test xchg test leaveq rex.W fcompl in mov sbb js adc sbbl (bad) jo mov (bad) (bad) mov rol (bad) fmuls xchg sub (bad) xchg or int3 rex.R xor sub in adc rex.RB (bad) mov sub rorb (bad) sahf outsb sub rex.WRX imul mov (bad) rex.RX adc (bad) sar fildll (bad) icebp jns movsb xchg rex.B cltd jle std (bad) or fisttp imul adc sbb add rex.X pop movsb rol (bad) rorb sub hlt je (bad) pop rex.XB rex.RXB xchg fadds addr32 push (bad) insb data16 pop jp jrcxz movsl mov retq rex.R rex.WX push movabs int xorl rcll (bad) notl sbb (bad) rcr xlat sub rex.R sti add out mov rorl xor mov or and lea xchg xchg pushq xchg rex.RX (bad) (bad) mov sbb cld shll mov xor and movabs in jle xor xchg ja fisttp jo sarl or jne movabs rex.B test scas mov jbe iret jmp fcoms movabs cmc (bad) movl repnz jne rex.WXB (bad) jae pop or sub jmpq lret rcll cmpsb (bad) jg movb fisttpl pop (bad) lret ror scas pop std outsl add adc shr sbb jne imul lahf (bad) popfq test sub push insb xchg rcll ror cs mov jle ss (bad) test sbb pop insb (bad) (bad) sarl lret rex.B jns (bad) xor sub add (bad) lea (bad) jl rex.WR sbb ficompl (bad) (bad) in push int fdiv rex.WXB and (bad) in (bad) adc (bad) adc sarl adc lock adc callq mov (bad) lret cmp (bad) add cwtd in (bad) movsl (bad) (bad) cmp (bad) mov mov add lret rcl (bad) (bad) in sbb roll cmp int3 xchg rorl rex.RX (bad) or xlat jo sbb or lahf fdivrl push movabs rex.X jo rex.R negl mov insb xchg fnstcw fdivl movsl mov in pop and (bad) fld rep ds loope adc cwtl fdivp xor (bad) lea sbb (bad) adc xchg (bad) mov rcrl in addr32 movabs cmp (bad) fsubl pushq (bad) hlt pop xor sbb leaveq in fstl mov lock clc push add in ja jae fsts repnz push add (bad) rex.B mov (bad) jbe mov in sub mov push xor xlat jg fisubl add fdivrl push (bad) test (bad) rclb retq (bad) test movabs rex mov (bad) pop imul lods (bad) int fidivr mov add pop lahf rcll jl lods and rcrl cs sahf mov and fisttp test pushfw pop sbbl repnz jb (bad) movabs movsl mov retq clc or jl pushq stc fcoml loop jb rex.B or js push movb sub sbb popfq adc (bad) mov out repnz out iret cwtl add sub out rex.R sub cmp insl or xchg rex.WRX rex.WRXB rcl int3 sbb cmp shlb cmp int test movabs and sbb cmp mov stos insl cltd fwait lea add and push rorl and sub (bad) xchg lock nop push sub out shrl movabs (bad) cmp push test cwtl (bad) rex.WR cmp add movabs nop rex.WRXB js sub std sbb iret movabs sbb pop rex.R rex.RXB and (bad) jmpq lea (bad) (bad) push lret jo sub movabs loop cli shl pop jp or mov sbb mov and pop sub jmp and add movabs scas push mov adc popfq (bad) gs lretq fwait jge (bad) (bad) push test sbb (bad) push fidivrl jnp mov (bad) fldl2e stc cmp js xchg mov nop rex mov shll (bad) rex.B leaveq jle rex.RX vpmaddwd rclb (bad) rex.RX lods adc pop (bad) fisubr movabs add jno sub fs xor mov fistpll add fwait iret (bad) test cmp jle mov jbe rex.B rex.W sub in repnz cmp lret jge mov outsb cmp in jno and xchg loope data16 push xor mov add mov movabs incb enterq push cld fcmovu adc leaveq (bad) cmp (bad) fld movabs pop enterq xchg lock (bad) rex.RB in xlat rcr jae cs fldt (bad) lock sbb jle movsl enterq rex.R rex.WX (bad) sub loope xchg rex.WXB (bad) sti (bad) int mov rex.RXB cmpb nop sbb cltd loopne rex.WR jnp pop fxch (bad) outsb push notb imul out rorl rex.R mov sbb (bad) jno mov pop fcoml cmp (bad) (bad) in cmp repz loop and andl (bad) sbb lahf rex.RX retq popfq cli sub lock data16 (bad) in js and fwait add cwtl push rex.X fs shrb iret mov push jnp sub fwait insb xor insl xor outsl stos rex.WRB or iret sarl (bad) sbb (bad) out icebp movabs jnp gs mov rclb add ficomp out (bad) rclb mov sub rex.WB rex.WR iret (bad) jge cli loope insl clc mov fistp or out lock xlat cmp pop sbb rcrl lea xchg popfq push rclb pop pop insl mov jg sarl xor rex.RXB xchg rcll xor (bad) adc pop rex.B adcq loop xchg rcrl shrl xlat movabs movabs adc flds enterq xchg icebp fldcw xchg rcrl nop (bad) rcll rex cmpsl pop sti cltd fcmovnbe jns jle pop fstps es (bad) test (bad) mov int cmp xchg rex.X pushq cltd in test sub data16 ds pop hlt fistl sbb stos xlat jrcxz,pn (bad) and shll jmpq xchg push pop shll (bad) lods and stc add fsubp and std sub or rol push (bad) sub rex.W es rex.WRX mov fbld add rcrb and movsb in cltd cmpsb fnstenv (bad) xor or test mov and shll test test (bad) jne (bad) pushq mov jns loope std subl jbe rex.RXB rorl sub stc sub mov repz xorb xlat ss fisttp and rex.WB add in pop jmp mov (bad) jb in fstpt push (bad) cwtl rex.RB sbb or enterq xlat xor outsl (bad) rex.RX (bad) mov rex.WRXB hlt sub cwtl xchg leaveq mov enterq fnstsw mov and jno rex.W mov xchg sbb fwait sahf cmc mov js or inc rex.WRB (bad) or xchg enterq pushfq cmp and (bad) jp adc callq rex.WR jp pushq mov add retq jle pushq movsb fs lods pop push imul add iret cmp mov lods pushq mov outsl jmpq je in movabs shrb (bad) jg add sub sub movsb or rex.XB fimul jns mov rex.RX jae xor mov xor (bad) sarl (bad) fnstcw adc in jb add cmp and sahf insb sbb jmp jp rex.WX out (bad) jge out in or shlb callq (bad) mov (bad) shrl iret (bad) (bad) add pop (bad) adc ficompl loop out repz xchg movabs sti rcll mov sbb add (bad) (bad) (bad) lods mov std out mov es (bad) (bad) sub (bad) jo repz iret out (bad) mov movabs sbb pop stos iret scas jns xchg rex.RX mov mov mov push outsb push fcomps sahf (bad) leaveq jrcxz mov sub and movabs mov cli (bad) and mov mov scas repnz (bad) add adc icebp rex.RXB sub add push imul rex.WB ss xchg mov (bad) shll mov (bad) sahf xchg callq mov jbe cs outsl in mov lret retq (bad) (bad) test and jg mov fild pop add mov (bad) mov jb in jns imul movslq rex.RXB ss callq cmp mov cltd sub add mov (bad) (bad) stos test mov repnz js mov test (bad) add cli mov cli add fild cmp adc (bad) jmp or movabs mov mov jbe cmp imul xchg mov cmp jae in mov sub movl in cmp adcb or rex.WRB (bad) scas cmc ror xlat jns rex (bad) jb push sbb xor rex.RXB adc push sarl test push stc mov fldt (bad) jge sbbl push (bad) movabs add jmpq adc setg iret ss movabs rorl adc leaveq jb enterq rex.RXB and (bad) mov (bad) lock imul mov pop (bad) cmc rol sahf sti adc rex.B rex.WB rex.R xchg (bad) shr push repnz add or rex.WB xor pop movabs (bad) mov retq fcmovb mov sub mov xor (bad) (bad) jmp loopne (bad) stos jl retq movsb lret (bad) pop xchg (bad) (bad) pushq callq xchg mov (bad) add rex.WR mov push test rex.RX rex.WRX (bad) in jno callq sbb adc pop adc out (bad) jae fs xchg imul orl rclb cs xchg pushq mov cmc (bad) xor mov sub xor cmp sbb stos and rex.W lods (bad) push and sbb shlb or xchg mov xchg or cmp adcl (bad) (bad) insl fs mul sahf xchg repz push out lret imul mov lret mov int3 negl mov mov xor clc push rcl cmp cmp retq xchg jae fsub rex.WR pushq callq (bad) movslq jno test adc mov sub (bad) xlat movsb (bad) cmpsl clc rex.RX mov add xor xlat shr fild sub in gs cli and callq mov rex.RXB repnz rex.WX adc stc or fwait in jmp jle xchg mov (bad) cld rex.RB pushfq (bad) rol adc (bad) adc (bad) mov (bad) xor (bad) test mov rex.WR mov add mov add lret movabs mov rex.WRX mov retq fcomip add add mov movslq in mov mov sbb enterq (bad) test rex.RB repnz out (bad) retq xchg (bad) fdivs js sbb xchg jmp fmuls fs enterq jmpq cwtl clc rex.W rex.WB sbb cmpsb (bad) adc mov xchg (bad) rolb movslq out (bad) jg mov (bad) (bad) mov mov xchg fcmovu (bad) fs push test or pop lret cmpsl mov mov push imul pushq (bad) loope,pn lock roll and mov mov gs and add rex.WRB repz (bad) xchg rex.RXB push rex.R xchg or testl sbb and cmp pop jrcxz and push loopne (bad) and cmpsb mov mov pop sarl gs sub stos mov (bad) add add stc sbb lock rex.WRX mov vmovss sbb in sbb add fnstenv cli jrcxz sti mov (bad) mov mov xor fdivrs nop rcll push icebp sub (bad) data16 mov (bad) rex.RX rex.WR test test rex.WB callq jno,pn add mov rolb (bad) movslq or test insl (bad) iret jle xlat out icebp insb mov in test pushq rex.R sbb es xchg add enterq (bad) (bad) fistl mov ljmp fsts xchg rex.WB (bad) sbb rex.WR fcoml mov (bad) mov divl out and adc rex.WB rex.RXB rex.WX (bad) pop mov cmpb movl enterq jae cli jns fistl movsb (bad) adc rex.RB enterq (bad) or movsl jp mov mov push push scas imul mov mov fdivrl pop rex.WR fldl (bad) or out cmp cwtl (bad) icebp mov icebp rex.RX loop adc add and ss movb cmp sbb shrl clc xchg fnop and shr mov xchg stos and xchg (bad) (bad) (bad) ss fsubrl xchg test in movabs jae frstor lret add mov pop or pushfq outsl rex.WR pushq (bad) mov sbb std fldcw cld clc jp jae xlat pushfq mov cwtl int3 test (bad) cmp xchg test add gs movabs cmp pushq mov xor or mov (bad) sub sahf movslq xchg out mov cmp jl movabs in rex.WRB mov sbb mov add out lahf repz rex.WRX (bad) push mov (bad) movslq (bad) rorl xor (bad) xor cwtl mov shrb pushfq out adc lods (bad) (bad) cli imul rex.XB push xlat test xchg mov pop jmpq (bad) (bad) stc jb out sbb adc (bad) adc (bad) sbb loope gs pop (bad) (bad) stc push sbb in movabs (bad) adc rex.WRXB ds mov out mov sbb cmp jae movslq xor sbb and mov int3 out xchg (bad) pushfq sbbl jno lea cli (bad) cmp xchg outsl mov adc cmp shll sub (bad) lods enterq mov ror mov sbb sbb std sahf fs rex.R leaveq or lret stos test xor js or mov pushq jmpq pushq xor jns adc (bad) jbe lods je jp es stos movslq out (bad) or rex.WRXB (bad) mov and sbb cmpsb insb cmp or xor adc test add (bad) movslq adc jae fmul cld jb xchg mov (bad) mov movabs rcll enterq jg fimull xor idiv clc (bad) jbe add (bad) data16 bnd pushq (bad) loopne or xor out xor sub int3 sbb (bad) movabs (bad) mov and fnop iret negl xorb (bad) shrl outsl cli cmp rcrl sarb movslq push (bad) movabs or jno lahf pop xor rex.WRX scas ja push add movsb int3 stc int out nop jnp adc fidiv rex.WR adc popfq clc cli (bad) jo sub mov pop xchg mov cs rex.WRX xor pop cmp iret rex sahf cmp addr32 (bad) sub and rorl add rex.WXB (bad) data16 jno sahf rcll (bad) pop xchg mov pushfq add mov je rex.WXB sbb movslq (bad) pop (bad) incb es ja add cmpsb (bad) rex.RB rex.B repnz loope rcll sub insb (bad) jg (bad) cld mov stos jle rex.RX rex.B lods jrcxz in or (bad) shll test subl xchg retq sarl cmpb (bad) insl roll loop add cwtl or xchg addr32 and sbb (bad) and (bad) int (bad) (bad) (bad) jno shr stc (bad) pushq pop out cltd std rex.WRX adc jae xchg or pop shll fisubrl rex.WRXB sub pushfq or (bad) icebp movslq (bad) xor (bad) add loop (bad) (bad) sbbl add rex.WRXB mov loop mov scas rcll retq and (bad) mov nop cmp cs (bad) mov shr adc shl mov cwtl push idiv and jae cmp (bad) push std iret rex.WXB fwait mov (bad) cwtl shll shll in sub test mov add mov push stos out push and or fdivrp std adc fmull (bad) addr32 rex.WRX rex stos jrcxz or mov or orl iret (bad) or mov (bad) in addl add adc (bad) roll jns movabs ds rex.RXB int movb rex.W popfq (bad) in jb sar sbb xor rcll fldl out push push rcr popfq add pop shr or (bad) or xchg mulb mov cmp (bad) movsb pop xchg in shr jnp fldt cmp jge cmp adc (bad) in scas (bad) jl mov (bad) lock sbb rcll cmpsb shrb pop test pop and sub xchg and movsb shr sarb rex.RXB (bad) fadd cmpsl add out jb mov jae (bad) mov jp push movabs jge imul test movb (bad) jae stos es movabs (bad) mov push lods (bad) sarl enterq std shll test lretw (bad) popfq jl rex.B mov repnz or cmpsb pop (bad) cmc xchg loop pop retq jmp nop movabs adc movb sub sbb rex.WRX adcl (bad) (bad) mov xchg callq jrcxz incl (bad) xor or add adc sbbl out rex.X (bad) faddp out sbb lods xchg fsubrl sub cli or (bad) insl (bad) and adc rex.WXB sub xchg xchg lock add rex.WRX rex.RXB mov loopne (bad) adc clc pop fsubl rex.XB fnop mov pop mov loop jo push lods (bad) rex.B rex.RX xor adc mov retq pop popfq and movabs mov (bad) jmpq push pop test adcb cmc outsb (bad) (bad) (bad) jae adc jmpq mov (bad) movabs rex.W fs push jae mov jne cmpsb mov (bad) push xorb test rorb stc xor idivb fmuls (bad) mulb sub mov (bad) sub rex.XB iret or movslq movslq jb (bad) fsubrl lret and enterq mov (bad) (bad) cs xor retq sbb pushq jae fildll or scas adc (bad) lret sahf movabs movsl (bad) rex xlat (bad) pushq (bad) sub fsubl cmpsb mov xchg xchg push decl pop loope cmc xor imul sub xor (bad) jo out movslq enterq mov jno fldt pop inc (bad) adc insl jae push shll rclb (bad) pushq jo iret pop stos cmp add (bad) outsl sbb clc roll int and rex.WRXB rex.B cs mov sbb jp push push adc lock andl rex shrl lret sub stc and mov (bad) and rex.WX xor pop sub shrl jo int fucomi (bad) xchg movabs in callq mov lea xchg (bad) loopne subl pushfq xor fdivs (bad) out retq sbb pop loope out rex jle lods or int (bad) js xchg mov and (bad) rorl xor shll icebp (bad) rex.WXB (bad) jg xchg mov sbb rex.RB rex.WRXB rex.XB addr32 test scas (bad) jge rex.RB cld mov push (bad) test mov cltd mov rex lods mov test movl sarl pushfq push shll fstpt or repnz or sahf (bad) mov icebp (bad) repz retq rex.RX adc rcll rex stc xchg jmpq vshufps stc cwtl scas jle adc (bad) (bad) fbstp cmp callq rcl (bad) test sbb push retq xchg (bad) pop add rex.B cmp and rcll in lahf pop popfq push callq rex.WX int es insl rex.WR mov mov lock add sarl adc lock cmp test movabs loop add mov rclb rex.WX xor hlt rex.RX (bad) sarb mov or decb add rex.B xchg movabs push insb sbb rex.RXB fild cmp loope leaveq cmp mov repnz lock rex.B out pushfq js adc mov add mov xchg jmpq mov int3 out cmp cmpsb (bad) add rex.XB rex.B mov sbb mov xchg repnz pushfq pop xor lock mov enterq pushq (bad) (bad) shr cmp and jns iret pushfq mov pop hlt jo ffreep rcrl mov fldt testl gs rex.X (bad) xchg (bad) rex.WRXB and shr js rex.W ds test loop (bad) loopne add (bad) rex.WX or adc movabs sti add repnz movabs xchg fwait (bad) mov (bad) or and jb (bad) mov rol rex pop and shrl (bad) gs jno shll mov xchg cli ror jo (bad) movabs rex.B rex.RXB cmc int3 xchg cmp xlat cmpsl push xor sbb (bad) push add movabs jo or add add leaveq pop xor (bad) movabs std loope (bad) sbb pop (bad) xor movabs rex.XB rex.WR (bad) cmp mov sub (bad) gs loop xlat push hlt xor pop sti or repnz cs cmp sub sub add outsb rex.RXB sub sbb out mov mov cmp pop mov fwait and stos (bad) (bad) sub imul (bad) cmp xor hlt add test cmpsb xor jle fildl nop cmpsl out rex.WB and insl jl retq clc retq je mov add jno pop cltd callq cmp loopne rex.WR cmp or lods lock (bad) mov imul xor and mov mov loop (bad) icebp mul pop (bad) xor sahf xor std or data16 outsb fildll rex.RB rex.WRX fisttp bnd rex.B movabs int3 stos rex.RB stc rex.W scas icebp (bad) outsb enterq rcrb or fldl rex.W (bad) sbb (bad) cmc (bad) (bad) push (bad) rex.WX shl mov xchg jbe sub fsub adc pop mov sub (bad) (bad) icebp (bad) cmc movsb fldcw rex.RB rex.WRX cmp shrb addr32 sti mov (bad) pop fcomps rex.XB (bad) jbe cmp js data16 mov sub jp adc lahf rex.WXB (bad) add loopne (bad) mov pop add int pushq or fdivp sub (bad) callq sub fild lgs nop and jmpq xor add popfq lret xchg and js adc popfq mov xlat add mov and or rex.XB and fldt jp sbb rex.WX addr32 and add repz sub rex.R repnz sub sub sub cmp movabs iret sarb cmp lret retq sar and push std fldl andl (bad) jne mov ds mov rex.WRB sarl mov sbbb rex.W (bad) sarl sub (bad) and adc shll (bad) (bad) mov jl outsb mov notb and adc sbb sub fisubl mov (bad) fistl movsb jge movabs (bad) rex.WRX (bad) icebp rex.XB xor imul jno pop movabs adc enterq (bad) ja fdivr jns jmp jmpq xchg leaveq adc retq scas mov xor (bad) in rex.B adc mov pop xor sbb xchg pop adc (bad) shrl mov iret sahf push add (bad) rex.W xor movabs sub cmpsb (bad) add es movabs adc outsl and (bad) pop xor jno jmpq fs fidivrl (bad) pop jae xchg rex.WX add pop repnz add rex.RX rex.W rcrl movsb xchg lret mov fistpl adc cmp outsl (bad) rorl (bad) xor rcr (bad) je xor clc loop (bad) repnz leaveq cld gs lea sbb push loope retq (bad) stos iret ss add leaveq movabs loopne mov adc add loopne mov (bad) pop stc mov icebp cmpl adc (bad) rcrl (bad) retq fmuls (bad) jne rex.RXB rex.RX rex.WRB idivl out fbstp (bad) rex.WX ds outsl add jl out (bad) retq pop xlat sbb retq sub test mov (bad) (bad) cmp icebp mov pop scas (bad) mov lea rex.RB mov mov xchg push insb roll (bad) (bad) jge popfq sti xchg and mov movslq mov (bad) xchg adc jle xchg imul stos (bad) ror outsl add rex.XB xchg rex xchg (bad) shll sarb movslq (bad) jno mov es mov (bad) rex.WXB rcrl sub rex.WB rcll pop cmc xor paddsb rex.W icebp clc (bad) addr32 pushq std fs imul sub xchg retq jp (bad) popfq movsl sti shr push and mull roll push xor pushfq sahf mov (bad) xor (bad) (bad) pop shrl rex.RB movabs enterq rex.R (bad) (bad) fwait xchg clc push mov flds stos pop loope (bad) mov test (bad) movabs mov rorb negb adc popfq sub stos out js add mov ds rex.RB jge (bad) sbb (bad) fdivl (bad) enterq in and adc (bad) out movabs cmpsl sub mov (bad) out cli cwtl push (bad) iret (bad) ljmp mov jns jmp (bad) icebp clc jne enterq jle loopne loop cs cli jbe xor std test pop adc xchg (bad) (bad) lret rcrl insb or (bad) lock sub nop (bad) fisttpll push in jno stc scas (bad) mov data16 pop cltd mov jne sub (bad) in shrl xor hlt movabs movabs rex.WB rex.X popfq and jo stos rex.WR lock sub adc cwtl rex.WX rex.WXB loope test sbb sub (bad) cmp lahf fdivrs sbb movabs (bad) jnp rol loopne rex.WRX scas mov outsl pop xchg (bad) fimul je,pt xchg pop int3 shrb stc rex jmp fistp (bad) jne (bad) sbb (bad) and flds rex outsb iret iret and or roll rex.XB std (bad) idiv orl loopne fwait add xchg test push shrl push xor sti (bad) out out sarl stos imul lret ja sub (bad) rex.WRX retq mov jb rcrb (bad) pop jp out xchg sbb popfq xchg movabs rex.XB jo fsubr (bad) rex.B int add lods push and ja mov xchg (bad) (bad) retq and or adc lahf or out (bad) rex.XB rex.WX rex.RB loopne jp scas xchg movsl lret clc jmpq callq icebp fsubl cld rsm mov (bad) cmc pop pop leaveq jg fxch (bad) xchg movabs je adc cs mov fimul lea mov lods and rex mov sub imul popfq xchg rex.WXB rex.WRX jae rex.X jmpq rex.R jrcxz mov xor rcrb (bad) add icebp repz rex.X jne std or mov and jrcxz (bad) lods rex.W rex.XB mull lock mov rex.X sub add mov (bad) xchg fidivl (bad) mov or sub test (bad) std and (bad) (bad) rex.WXB cwtl in lret (bad) rcll fnstcw test lret mov xchg movabs mov nopl xlat xorl out cmp cltd je sbb sub mov jle rex.XB rex.WX stos and (bad) (bad) pushq sbb out rex.WRB rex.XB and (bad) adc mov repnz jno cmpsl outsb or rex.R jrcxz lcall mov fist pushq movabs test jns (bad) pop icebp jo repz or rex.WXB test push (bad) loopne test xor insb callq sub jge loopne xchg fsubrs xor add pop push mov (bad) xchg (bad) mov xor loope popfq cmp fs jbe rex.RB (bad) fcmovnbe lahf (bad) rex.X mov jrcxz rex.WX (bad) fsubs xor mov shr sub movabs cwtl adc and jl icebp rcrl jge fwait out jnp imul add or mov cmp rex.WRB xchg rex.WXB rex.XB cli hlt rex.R out shl roll (bad) jb xor rex.B push xor rex.WRXB (bad) and jp pop rex.B push mov cmpsb rorl or jb ror push test cs sub (bad) xor (bad) jp mov (bad) rcrl lock int (bad) lods mov adcl fldl adc rex.WXB jno cmpsl mov stc (bad) sbb sub rex.X data16 sarl rex.WRXB (bad) out js rex.WRX sar roll out fwait roll frstor jne sahf lahf decb jmp nop lea push pop iret out (bad) in leaveq sbb (bad) test int (bad) xor (bad) add fdivl sub (bad) cmp mov xchg shrl cwtl sub icebp retq (bad) xchg (bad) lret push sbb or rex.RXB iret insl scas pop adc jp and push popfq imul (bad) fdivrs adc enterq in and jns ds sub (bad) outsl or retq nop leaveq rex.WRX mov xchg rex.X sub std (bad) sarl push jl or sahf movabs rex.XB retq and xchg xor cmc xchg shll movabs jne pop (bad) adc xchg rorl push and rex.WXB rex.RB rex.WRXB rex add stos outsl add pushfq int3 adc iret (bad) test jno rex.WRXB add retq in fs jp and mov rcrl pop or add (bad) rex.R lret adc cmc retq sub ror outsl (bad) xlat jne pop pop lock rex.RX out outsb sbb repnz add add sbb jnp fs mov sbb rcr jb push movsl test jno rorl cmp xor insl xor test rcrl add rex (bad) and nop loope lods leaveq cltd loop shll xchg (bad) sub sub (bad) in mov sub jle rex.WXB mov lahf pop mov addl mov cli pop pop enterq ss pop mov jns add es in (bad) add xor rex.WRX ss cld jns jg rex.RXB (bad) sub add (bad) and rcrl cltd add add rcll jrcxz retq cwtl cmpsl pop xchg cld rex.XB rex.B notl rcll or (bad) mov xor or (bad) mov xchg xor adc mov enterq jp sbb xadd rcll mov stc movabs mov rolq movslq mov outsl test (bad) cmp rex.RXB sti fsubl std (bad) (bad) pushq jge (bad) shl (bad) repnz (bad) xchg sbb cltd cs shll insl fld1 adc retq jno js sub fwait repz and cmp (bad) fldt int cmpsb (bad) lods mov int3 sbb or fdivp movabs jae std (bad) rex.WXB (bad) retq xlat xor mull or jne test pop rex.B or mov (bad) mov jmp repnz lods mov add (bad) loopne (bad) sbb rex.RB pushfq xor icebp mov (bad) sbb retq jrcxz in sub mov mov lea or (bad) jae mov add xlat jno jge add repnz sahf (bad) push jne in leaveq mov fwait retq (bad) test ja callq roll test lods or mov lahf (bad) (bad) imul mov sbb rex.X sbb adc imul test rex.X out shll (bad) pop lods imul (bad) mov hlt cli rex.RX ss fidivl icebp push push movsb rcr (bad) (bad) xchg pop mov add sbb (bad) rcr (bad) mov rorl adc lea (bad) movabs test xor loope push out hlt fisub jb enterq loop add (bad) test fcompl (bad) movabs pop mov mov (bad) rorl shrd jge fisttpl fs callq mov repnz add rex.WX iret loop sbb jmpq rex.R rex.R int3 sbb jnp stc gs and add rex.RB ss rex.WXB (bad) enterq cltd and adc lahf (bad) (bad) jg mov in in adc mov jbe (bad) outsb repnz mov cmp and retq cmp rex.B rex.RXB sbb rex.W (bad) gs sub sbb and loop rex.RXB out movl nop stc xchg int jo ds sbb rex.WRB test jmp stos divb adc (bad) (bad) int3 (bad) cmp in repnz (bad) retq flds fisttpll add rex.W (bad) loopne (bad) add ss (bad) jg ja add es jg rex.WRB sbb adc insb add out scas rex.XB movabs mov (bad) ja xchg lods xor rorl sbb (bad) test rcrb out (bad) icebp mov (bad) sti fwait or rex.WRX fmuls xor xor xor adc jo fstpt jrcxz jrcxz sub pop fistp sub fsts cmp mov rex.WB shrb (bad) stos lret lret jmpq push jp repz out (bad) (bad) lock retq jmpq and lret (bad) xor add (bad) jl xor cmp jno jb loopne add in sbb fcmove and fcom rorb (bad) jno rex.RX fcmovnbe or rex.WXB mov rex.W xchg and mov movabs movabs lret sub fnstcw mov (bad) fildll clc in fdivrs mov sub idivl push (bad) retq int3 sub rex.B rex.WB (bad) lss fildll jno jmp pop std jns callq movslq sub (bad) cs xchg clc lods int mov fstpt rex.R xor (bad) adc lret mov outsl pushfq lcall out fsts mov and pop cli rex.B (bad) or popfq shlb jne fs loope int es in mov movabs sbb adc push jl jbe mov or pop and mov sarb lret imul push (bad) rex.WX rex.WB adcb movabs adc rclb cmpsb in (bad) cmp (bad) pop in loopne (bad) mov movabs xor jnp pop mov or (bad) xor movslq pop sub in neg xor add rex.B fidivl rex.WB (bad) shrl or jrcxz clc outsb xor add fsubrl cmpl int rcr (bad) (bad) xchg jno mov (bad) rex.W (bad) callq and (bad) callq xlat (bad) or (bad) repnz mov jmpq (bad) js sbb (bad) jp add (bad) (bad) mov ficomp rex.WRB jno repz punpckhbw shll mov fwait (bad) movabs cmp or imul xorl xor jl jo (bad) add retq (bad) cmp (bad) (bad) adc (bad) pop movabs jbe (bad) xchg (bad) cmp sbb pop gs mov mov xor mov (bad) mov and (bad) shl pop test pushq stos roll fdivrl (bad) test (bad) enterq in fadd and or hlt shr (bad) hlt stos enterq sub jo mull (bad) out ror retq mov callq repnz (bad) loop notl fwait pop mov je sahf out test outsb shrl bt jp (bad) loop movabs or scas int rex.RX cmp mov lret (bad) in xchg rex.RB (bad) fisubr rex.WXB ficompl mov (bad) push fdivl sbb enterq (bad) (bad) mov outsb mov xor sub jne (bad) or mov jo and (bad) cmpsb (bad) jrcxz push movabs loop hlt mov repz (bad) rorl in fwait jge mov lret sub outsl movabs loope clc jmpq jl idivl sub test insb cmp xchg mov stos (bad) add or jae (bad) idiv adc xchg sub cmp ss mov mov sbb in (bad) jmpq loope ficomp movabs add mov xchg (bad) roll mov (bad) js rex.WRX sub cmc sahf cwtl retq pop or (bad) test and xor (bad) nop (bad) je ds rex.WR sbb mov loopne pop mov (bad) stc iret sti scas sbbl int3 cmpsl test jrcxz test lods push rex.WR fs rex.WB js add mov cmp (bad) xlat js push pop jae jmp push loopne jbe (bad) (bad) cmp xchg retq repnz frstor cli xchg jl in rex.RXB movabs and mov jmpq (bad) (bad) xor (bad) or ja add mov xchg outsl (bad) add rex.X pop push fwait sub adc (bad) insb adc (bad) sub repnz or rcrl add outsl pop fsubrl pushq repz mov xor cmp rex.XB (bad) push or jg (bad) icebp jge xor add push and add push (bad) cmp sti (bad) sub jl and icebp pop loopne enterq rex.WX sbb (bad) movl adc and rex.RX fwait xchg insl rex.XB xchg (bad) jg xchg mov cmp pop xor add lret vfnmadd132sd (bad) rcr (bad) lret jp cmp xor rex.WXB jae (bad) rex.WX insl adc add add xor jns retq mov jbe and adc xlat icebp mov stos jne rorl mov shrb mov jle rex.WXB rex.R rolb cmp negb add rex rex.WXB add mov sahf xchg (bad) (bad) mov fidivr sarb sbb xor push adc data16 push cmp ficomp sbb movabs fs rex.RX rex.WRXB xlat mov addl cmp (bad) je adc adc rorl in lret rex.X rex.WR adc xor rcr jle movabs mov pop push lret jmp pop addl add cmp movslq cmp rex.WB jbe rex.B gs mov movsl jne or rex.WRB mov xchg mov addl stos xchg in rex.R repnz and and (bad) mov sbb xchg scas (bad) jb jmpq or mov in (bad) test mov mov icebp gs sub fstpt (bad) jb lret sub jl rex.XB adc jmp std xchg sbb or jae and jle or in xchg ja sub fiadd cmp push enterq cltd iret test xor pop rex.B repz loop hlt or cmpsl (bad) incb in cmp (bad) and (bad) lret fadd fidivrl mov add push push rex.RXB mov cmp gs and icebp fisttpll sti cmp hlt rex.WX pushq mov or adc (bad) rcrb xchg (bad) (bad) push insl xor loope cli rex.RXB (bad) stc movabs add (bad) (bad) or orl scas sub mov add xchg (bad) or mull rex.WX adc test (bad) lret xor jns icebp jb mov jne fnstenv adc rex sbb mov mov (bad) test leaveq and lret cmp test push jmp mov mov pushq movslq xchg cld jle data16 jns stc test xor cli movsl mov mov cmp rorb stc xchg stos clc sahf mov pop in adc (bad) mov rex.RB sub in pushq lods addr32 pushq cltd sub rex.RX movswl adc add (bad) cs mov mov jb sub xor rex.R fidivr jae (bad) test cmpsl or sarb (bad) xchg mov and rex.RXB sbb jns (bad) sbb rex.B rex.WX rex.WB (bad) sub cs and rex.WB jrcxz test loope xchg test jp loopne sbb (bad) (bad) (bad) (bad) (bad) sti loopne and add data16 and xlat roll xlat andb (bad) fiaddl scas sbb test in xchg (bad) add and xlat ficoml jno rex.XB mov pushq mov xor mov callq movabs mov stos rex.RXB (bad) rex.W rex.RB rex.B (bad) iret es test mov rex.WRB (bad) (bad) fsub and icebp (bad) hlt fpatan cwtl (bad) xor adc jle outsb xor (bad) lahf enterq fidivrl and fdivrs rex.WRB je mov lock fs fidivrl xchg outsb cltd mov xchg mov push (bad) movabs lret std in (bad) leaveq push push cmpsb (bad) repnz mov shr rex.R adc movaps xchg mov insl movsl sbb test push scas cmp push in cmpsb (bad) test addb insb sarl (bad) (bad) sub outsl repnz rex.WRB mov retq jbe (bad) xor cwtl (bad) movabs push in scas test lret rex.WRXB (bad) je push clc xchg repnz mov jo xor loop mov mov or (bad) rorl sbb shrl ds mov nop loop test cmp (bad) jbe xchg rex rex.WRX rex.RX (bad) jl jb sub mov cmp push jnp pushq rex rex.B rex.WRX push (bad) jp sub lret movabs xchg or lret test fdivr add jb mov (bad) test (bad) and cmpsl int3 xor loopne jne or movabs adc or (bad) sub rex.B je pushq mov test jne push rolb xor insl cmp lock cmpsl (bad) (bad) gs and fiadd or (bad) mov cmp sub (bad) movabs sarl retq (bad) in loopne add or fistp fs lock iret or pop int testb adc (bad) test rex.RB rex.B add mov jns jrcxz cmc rex.XB rex.WRB movabs (bad) mov push leaveq xlat (bad) lret adc push shrb rorl jns and icebp pop and popfq leaveq mov loop jo (bad) jmpq (bad) lret jae xchg sub paddq stos (bad) repz sub ja rex.RXB test jno jae jrcxz insb jg add shrl (bad) pop xlat add mov shll (bad) rex.WRX fs test add out pop rex.R push repz movb adc push add je ror movabs mov outsb xlat sub rorl or rex.WRXB (bad) es (bad) cmp fsts loop je and sbb xchg clc sub cwtl pop test (bad) ror stos shrl add pop (bad) test fdivrs (bad) jo shr clc cmp (bad) jb xor cmpsl data16 setle fsub (bad) (bad) (bad) lock pop movabs rcrl sub pop test pop adcl jo jno pop (bad) movsb cmp xchg rep cmc mov movabs roll (bad) fistp (bad) or shrl xchg push (bad) roll movabs rcll repz add (bad) outsl (bad) mov lret movabs callq test jns rex.XB rex.WRX sbb mov fwait or roll (bad) xor movsl rex.WR (bad) mov shll loopne sub adc xchg rex.WR push fdiv sub (bad) add std sbb cmpsl jmp icebp clc rex.RX movl rex.WR rex.WXB cmp (bad) rcr jl (bad) pslld movabs xchg shlb fisub push sti rex.WRXB loope rcrb pushq es pop jrcxz (bad) xlat xchg orl add (bad) jrcxz clc (bad) roll pushfq mov sbb mov xchg out add (bad) shll loope xchg stos hlt shl cmpsb sahf cmp jno rorl (bad) adc cmc fwait (bad) rclb jno test (bad) gs jl (bad) xor add jae xorl out (bad) in mov loop,pn rex.RXB sbbw fstps pop ljmp xor adc test fwait cmp shr push ds adc cltd insl mov rcl adc push (bad) add (bad) movabs (bad) cmc iret in cmpsl ja (bad) (bad) jg pop rcrl or nop rex.WRX (bad) out xchg sarl mov rex.WXB rex.B xchg (bad) mov js (bad) callq mov cltd mov mov int3 (bad) stos int iret push fcoml mov (bad) leaveq (bad) pop pushq jl test (bad) ss outsb add loopne sub xor int outsb rex.RB jge fisttp (bad) in rex.WRX fcoml (bad) cmp cltd fcoml rex sbb leaveq rex.WRXB xlat fbld sub adc jb jns scas je (bad) int3 fwait (bad) cltd fistp (bad) or or sub sbb test sub mov movabs movb and fbstp sub (bad) sub push mov pinsrw fdivr lock rex.XB pushfq fisttpl xor or rex.WX mov jbe sbb movsb xchg push sbb leaveq xchg rex.WX rex.X imul (bad) xor rex.XB js xor (bad) rex.WX cmp (bad) and fs imul pop xchg mov xchg test add jp mov jge cltq (bad) fst pushq cmp stos rex.XB xor adc sbb or jle (bad) icebp mov jl je ror sub mov movslq jne movsb mov fbld mov cmp rex.WXB sbb retq pop xchg xchg int3 movsl pop push mov fdivs add sub add out cmpsl cmp (bad) repz push cli jmp addb sarl stos cmc movsl push (bad) pop sti (bad) andl cli rorl jne rex.R (bad) imul (bad) push rex.WX jl sub rcl mov fisttpl jno shl or ja xchg retq sahf in rex.B and adc rex.X and roll adc pop rcrl sahf sti cmp lret movsb cmp retq jp and rex.WR mov pop (bad) int3 popfq rex.WRX rex.B movabs callq leaveq rex.WB xlat rex.XB (bad) int3 retq or sarl leaveq (bad) shrl es int sub (bad) mov mov xor mov pushq shrl jno rorl rorl mov lret pop mov fidivrl (bad) movabs jnp rex.WRX mov cmp rex.B adc cmp stc xchg sbb lock out xor push rex.W add add rex.XB nop or mov lock (bad) movabs rex.WRX mov loopne rex.WXB stos (bad) cwtl (bad) cs rex.X sbb rex.WRB repnz pushfq mov push lret sarl pop std movabs rorl ffree addr32 (bad) cmp sub (bad) (bad) xchg (bad) adc rex.B add clc rex.B push insl in lea (bad) xchg adc and andl (bad) in lea nopl add mov mov sub insl cmp retq sbb orb sbb cmp test jns int rex.WXB negl adc and mov push adc rcrl xlat mov xchg stos push (bad) sbb ficompl icebp mov out jrcxz xchg mov iret (bad) mov or in rex.B (bad) sbb fild hlt test in jmp rex.B cmpsl cmp cwtl imul rcll add shlb (bad) (bad) sahf xchg mov (bad) repz mov stos xor jrcxz push xchg test rex.X xor (bad) (bad) mov xchg or flds and mov (bad) lret sbb xchg sub cmp cmpsb (bad) repz (bad) push shll int3 xchg js fstps js pop rcrl xor (bad) jbe pop (bad) mov jrcxz rex.WXB mov rex.W adc cmp mov loope ss sub repnz sarl xchg jns jno add (bad) mov (bad) add mov scas callq cmp rex.RX sarl xor pop pop outsl (bad) sbb rex.WR fistp jmpq stos (bad) mov je rex.XB rex.R mov sti cmc (bad) jge test (bad) cwtl adc in mov rcrl (bad) test in sarl lea rex.WR shrl mov (bad) or pushfq xchg (bad) push sub pop retq movabs mov mov out mov rcrb outsl testb ds sub sahf (bad) adc loope push roll xorl ja push push pop rcll int3 (bad) out pushq test fnstsw lea mov mov incb (bad) movb xchg push scas rex.RB popfq retq cmp (bad) retq xchg adc outsl sbb stc mov rex.WR and sub test and fs imul mov jl clc shrl pushq lret xchg (bad) rex.B rex.WRB xchg repnz cmp push hlt je repnz cmpl xchg cmc shrl jbe fs stos pop push insb cltd movabs pop xchg adc xor out sbb rex.W fwait rex.B jle in in subl lret lret loopne (bad) jo icebp cwtl add idivb ja (bad) lret jo pop mov repnz fldcw movslq add mov jle loope fdivp gs xchg mov or adc mov fcmovnb loope (bad) mov rex.X callq or movabs rcr mov xor xlat addr32 test jo rex.RX lret sub imul cmpsb (bad) ds enterq test lods sbbl xlat rex.R enterq jns enterq sbb or xchg out cwtl jo xchg add movq test mov or ror adc mov xchg std (bad) roll (bad) movabs add movabs mov outsl movabs add push xlat pushq mov sbb (bad) je addb jge add xor fwait mov pop iret sbb xor loop fldt test rex.X sar movsl push sub adc out mov jne xchg out repz repnz movabs push sub xor xor sarl rex.RXB sbb push fldl (bad) push cmp rolb and jno (bad) shrl (bad) mov sti or and retq rol (bad) stos mov mov push mov sub loop in shrl cmp sub int enterq out test (bad) or sbb fwait mov lea (bad) test pop movabs (bad) and hlt xor or clc imul adc (bad) fidivr movabs rex.X rex.WXB movl xchg rcll insb movabs sarl ds rcrl rex.WR outsb rex.RX and shrl xchg and xchg adc xchg addr32 rex.WXB sarl pop cltd (bad) cli movslq pop sti mov pushfq jl push xor cmp mov out (bad) mov cli sbb faddl pop push scas rcrl out cli lods outsb rex.W add (bad) adc sbb add xchg jge (bad) xchg jrcxz pushfq rcll (bad) (bad) rex.X add insb mov add shll ja jae adc callq cmp shll and (bad) sbb mov (bad) mov repnz rex.B push xor pushq stc mov and sub (bad) jae cmp adc and rcrl test lahf sub xchg mov roll sti adc mov callq pushq (bad) mov adc fs or lret (bad) in (bad) shl outsl cmp subl adc (bad) in imul push movabs xchg lods xchg enterq (bad) sti push es sub mov in mov cmpsl sbb jne cmpl stc bt rex.XB movabs jo outsl repnz and (bad) movabs mov (bad) sbb (bad) fmul out (bad) mov xchg xchg mov jb lret jbe cmp xor fs mov jg mov ja sbb jbe (bad) rcrl (bad) jrcxz jl sti int (bad) cwtl mov (bad) jg rex.B scas rex.WRB rex.W repnz mov cmp rcll insl (bad) out mov cmpsb movabs js xor sub jbe lods sub lock xchg (bad) out movabs mov scas test sbb sub enterq cmp rol mov hlt (bad) jo fwait nop cmp fdivrl (bad) cmp xor pop jge fs scas fisubl adc (bad) clc sarl add jp pop mov out add loope adc fistpll decb movabs (bad) (bad) xchg test adc jns stc or fisubr add fs rex.X cs jns (bad) js ficoml add loope or (bad) retq jne pushfq icebp stc jo scas lret pop rex.RB rex.RXB jrcxz mov jg mov fistpll out rcrl xchg (bad) add rcl (bad) fs cmp movabs imul jg (bad) xor mov vmaskmovdqu (bad) notl pop lods mov adc jg cltd (bad) rex.WRXB sbb adc (bad) (bad) insb jle (bad) xchg rex.WRX pop lock add rol add (bad) mov (bad) iret xlat (bad) cmp cmc add adc adc add mov adc roll shl jns sarl movabs (bad) adc fadd int3 scas xchg lahf pushq jp sar push cmp pop mov rex.WX cmpsb lock cltd rex.W sti mov pushq (bad) sbb fcmovnb in mov stos (bad) xor iret (bad) or popfq sub rcll (bad) loop (bad) or fninit roll sub ror mov callq (bad) rex.WRX and pop mov (bad) jo adc stos xor mov lret fstpt outsb ja (bad) divl loope add shrl pushq shrl xchg fidiv lret (bad) stos jl out stos test (bad) fcompl movsl mov test lea outsl fistpll xchg outsb cmc push xchg enterq (bad) faddl push movabs xor (bad) adc xchg std rex.B push or xor mov sbb xlat shrl mov sti int3 add add add insb (bad) rex.WX sbb jno sbb iret (bad) out popfq sub cmp pushq xor js (bad) leaveq add (bad) lock jle fiaddl sbb xchg (bad) adc sbb mov sar sbb sbb mov xchg movsb and mov mov movsb enterq stos out (bad) rex.WXB xor in (bad) xchg movabs fsubs imul int rex.XB fildl mov (bad) (bad) adc rex.WRX xchg rex.B mov sub jbe sbb mov sub push mov pop (bad) jle mov fcmovb mov pop xor faddp roll jno scas (bad) cmpsb xchg retq mov mov rex.WR rcrl (bad) std sub and mov (bad) (bad) (bad) (bad) fsubrl cmp test out lea pop std rex.X imul lods mov rex.RX (bad) xorl (bad) shl pop (bad) iret out rol push fs (bad) movsl (bad) repz pushfq mov scas stc stos add jbe push mov movabs cmp add push js and in jne xchg add pop mov out lods cmpsb add mov (bad) std and ds fs mov mov (bad) xor cmp xor xchg pop rex.WRXB jno lahf rcrl add adc es (bad) pushfq out ds gs (bad) movabs cltd fxch lock xlat (bad) fmul (bad) or xchg (bad) xchg cltd fimul xchg (bad) (bad) (bad) (bad) sub movabs and lahf jbe minps callq lret (bad) mov mov jno fwait movslq (bad) or jne fiadd (bad) nop pop sahf (bad) mov pop push lcall pop mov (bad) addl xlat sub scas jg rex.WXB sub fnsave rex pushfq stos mov mov jo loop (bad) movslq (bad) in mov sub rex.R mov fwait or mov fst (bad) (bad) stc rex.RB rex.B rex.RX repnz lods push adc rex.W sbb loope lret sbb jmp add xchg add rex.W popfq in gs cmovle (bad) rorb (bad) rex.WXB or sbb imul test rex.RX (bad) stc (bad) rex.B mov js add adc test rex.WR jmpq test (bad) mov sbb or rex.RX in add imul cmp sub or sti mov jp adc cs sub cmp rcrl sarb sarl sub in pop loop (bad) cmc mov or out mov pushq or mov jno scas (bad) mov loop fstps and rex.R fist roll fnstcw mov jae xor (bad) (bad) enterq add pop (bad) ror movabs jo retq fadds movslq adc (bad) cmp jg rcrl (bad) sub roll je (bad) ffree (bad) out (bad) (bad) rex.WRB sahf sub adc cmpsl cld sub add (bad) mov imul sub mov rex.WXB rex.RB xchg adc mov add enterq rex.WRXB rorb (bad) loop cmp jp xchg (bad) push and mulb mov sarl cmp movsl mov add push int out outsl (bad) (bad) ror rcr shrb repnz sbb rex.XB int (bad) mov pushfq (bad) (bad) adc mov (bad) adc cltd rex.WB sub xor mov (bad) test (bad) jb test stos mov rex.XB loope push jrcxz cld movsb cmp jg (bad) imul add jb (bad) lea ss icebp int in lret fwait vpsadbw adc mov (bad) callq rex.X scas sub (bad) sub or icebp xchg cli add rorl push cmp retq cmp fwait or and (bad) enterq loopne mov mov mov shll fidivr pushfq iret (bad) jo movabs imul xchg jnp shlb and sahf retq in fsubrp rex.RXB lret jbe mov ja rex.XB rex.RB xor out (bad) (bad) stos xor sbb shl pushq jne mov pop movslq rcrb mov (bad) pop xor leaveq add flds imul fimull outsl (bad) jp rcrl mov lret (bad) cmp movabs stc xchg imul xor (bad) (bad) jp shll outsb rex.X lret hlt (bad) adc xor loop mov movabs (bad) jnp scas movsl pushq mov sbb or (bad) rcll in cmp movabs and sarl jle in cmpsb int3 out rcr xor test rex.XB pop stos mov add stc in (bad) repnz (bad) fidiv imul mov xchg callq mov test shl mov out shll add rcl push sbb mov (bad) (bad) lock add es lret mov lock shrl (bad) xlat (bad) ss cmp repz lahf rex.WX and in rex.R rex.WRXB xchg movabs rcll mov rorl cmpsl rex.WXB sbb jle out pop (bad) jno xchg add stos lcall rex.RX iret (bad) hlt pop rex.B sub cmp imulb vandpd repz cmp test movabs sub movabs lea subb or rex.X in (bad) sub add fadd popfq jns callq rex.X leaveq clc nop (bad) iret incl fnstenv repnz lods rex.XB repnz cmp pop or pop xchg rex.R (bad) add rex.RB fisubrl (bad) lret int3 jbe xor and hlt (bad) rex.X adc sub sbb stos sub cli clc jae test loope (bad) jns (bad) pop jmp mov int push sarb rcll repz push (bad) testl test mov popfq sbb out cmpsl movabs fwait push stos pop movsb ror sarl push scas subb rcll sbb pop pop (bad) xor (bad) mov xor in sbb xlat ja cmpsl leaveq out rex.B (bad) xchg rex.B movslq mov repz (bad) and shrl cli jae fucomip mov (bad) jno fistp (bad) xor rclb (bad) pushq sti movslq repz mov xchg push pop sub shll push add adc mov fnstsw rorl push push (bad) (bad) xchg (bad) lods lret jmpq rex.RX imul retq in sub rol gs repz lea imul lret lcall and or (bad) hlt pop stos fistpl shr (bad) repz cmp mov in xor scas int setne lock ror push ja cmp (bad) xchg mov movabs in rex.B shrl in es rcll (bad) (bad) std xchg or jns jns iret xchg pop andl add jo icebp push sub rcrl test mov outsb (bad) pushfq rcll iret xor mov imul adc rorl lret sbb mov or cmp shl popq mov rex.W outsl adc mov jl (bad) retq mov sub adc rex.RXB (bad) mov popfq xor shll add (bad) mov adc (bad) iret xchg loope push and or (bad) jl add xchg (bad) add rol cmp jno rex.WR adc (bad) rex.W add mov lock pop int (bad) shr rex.XB fwait xchg mov or data16 mov (bad) mov mov rex.X and (bad) jne (bad) mov shlb shrl xchg jb push (bad) push shr lock outsb orl xor jle pop cli rex rex.R (bad) js (bad) xchg cmpsl rol and rex.W mov int test (bad) sbb adc test insb and xchg jge mov nopl add pop (bad) shr sti jno push fidivrl sarl xchg fadd pushq adc (bad) and lret pushq xchg fild lea and (bad) fwait leaveq jo outsl mov mov adc (bad) mov shrl orb mov cmp and (bad) pushfq lahf cld fldl (bad) mov (bad) xchg mov rorl sti adc stc lea (bad) (bad) sub mov int adc and mov jno jmpq jne loopne scas int3 mov pop rol rex.R (bad) xor gs movabs (bad) not rex.X cltd mov in cli loop or sub movabs jg cmp cs push sbb rorl (bad) and movabs jg and fdivrs movabs cli jbe rex.WB (bad) push clc xor js and (bad) loope rex.RB sub (bad) sub shll and rcr mov in xchg in sbb es pushfq loope lea loop adc xor add (bad) cli (bad) test mov ja push pop cs jnp rex.B (bad) in (bad) insb sahf sarl ja pushq jmpq (bad) or mov sbb mov xchg ror cld mov rcll pop cli callq jle or or sbb fwait cltd faddl popfq jrcxz and fnstsw cmp (bad) mov (bad) mov xchg rolb ja mov (bad) outsb iret xor icebp pop and mov cli (bad) leaveq test jmpq out pop movsl rex.B (bad) cmpsl callq adc std (bad) (bad) pop (bad) loop pop mov adc (bad) cmp scas rol or cwtl repnz (bad) (bad) mov cmpsb xor cmpl sahf roll and add add jrcxz movl (bad) popfq jno sarl mov popfq sub (bad) pop out jo sub enterq and in pop rex.B test jmp mov xchg sbb sub int cmp (bad) stc sbb outsl sbb shrl adc mov test outsl jo add mov sti int (bad) fcompp rex.WRXB mov lret insb es test xlat imul (bad) jl and (bad) xorb (bad) stos and rolb rex.WRXB rex.RXB rex.B cltd movsl cld jno pop xlat (bad) (bad) nop cmpsb push (bad) out loope jno rex.WR xchg cmp shll rcrl loope out push add lret and sbb sar sbb icebp mov (bad) mov outsb cmp pop es je out (bad) rex.WRXB (bad) cmpsb (bad) int push push shll movabs (bad) mov in push (bad) fwait push (bad) (bad) push xorl int rorl add sub mov rex.WRXB mov sarl (bad) mov adc (bad) nop orl rex.X jmp xchg push xor movabs movabs mov (bad) sar jo fcoms jae xchg sbb cmp xchg fwait xchg test sub (bad) cmc lahf add pop movl adc xor sahf movb iret stos sbb faddl (bad) mov xchg pop push sarb pop xchg sbb mov rorl (bad) (bad) mov cwtl (bad) es mov (bad) xchg rex.RXB in rcl jne fistp leaveq shrl (bad) test scas movabs hlt adc lret add rcl jg leaveq rcll jl shll add cwtl (bad) rex.WRXB xchg adc mov xchg out rex.R sub cmp rex.X repz mov (bad) rex.WRX jmpq (bad) leaveq callq mov scas pop pop in (bad) xlat lods add pause movsb (bad) gs rex.WX shr push rex.XB xchg pop rex.RXB rex.X in sbb fld retq sbb mov movabs jo adcl mov movslq sub (bad) mov lock xchg lret (bad) pop (bad) add movabs int clc sub xchg xchg scas (bad) fisttpll cmp add movabs jg mov xchg outsl mov (bad) xor push test scas mov adc (bad) rex.R mov int3 (bad) xchg or add cmp xchg pop rex.W cmp rcrl (bad) jrcxz xchg adc cli pushq callq lret push pop push xorl testb xor pop stos mov mov and shrl jb rcrl mov ljmp sub add xchg rex.B fldl adc scas xor (bad) test xor (bad) xor (bad) pop xchg cmpsb fnstenv jnp (bad) repnz rex.WRB sbb and mov movabs push mov cmp lret adc int3 sti add jnp clc out or roll mov (bad) fildll imul xchg cmp roll mov sarl xchg mov roll xchg push cld (bad) jb in (bad) in (bad) xor ss out insb fild (bad) (bad) jns or (bad) (bad) (bad) mov repnz adc (bad) cmp rcll pop scas shr repnz and jle sarl cmp pop imul enterq jae ds rex.B mov sbb repz push rex.WRX cwtl test cmp fidivl xchg movabs cmpsb loop push ss cmp xchg sarl adc rex.R rex.RB jae lret cmpsb cs jno (bad) ja mov pushq jmpq fcomps in insb mov addr32 in data16 mov (bad) insl gs loop cld rex.WX rex.RX mov jge (bad) jrcxz jl and push ds stc shll lods fs lods cmp rorl clc cmpsl mov adc loop (bad) sbb (bad) cmc rex.WRX mov hlt or fbstp cmp (bad) imul push add fmulp xor (bad) and (bad) roll xor (bad) fildll rex.B rex.WR push add fcmove pop fwait (bad) rex.B or retq (bad) jmpq add (bad) sarl mov jnp (bad) jns xor mov jb xchg add movabs ficoml retq test and push jae loopne negl (bad) icebp jp xchg lods adc (bad) stc mov pop rex.WRX or loope (bad) mov cmpsw (bad) add movb jno sbb roll loope sarl lods push rcll outsl (bad) roll insl sub mov cmp pushq test cmp (bad) jae repz callq retq (bad) pushq mov add loopne addr32 popq mov insb movabs mov (bad) (bad) sti (bad) (bad) adcl imul push negl sbb loope sarl jle sahf iret rcll mov and sub (bad) add xchg add pop rex.RX add out stc xchg mov add sbb (bad) stos push (bad) mov shrl in repz or rcrl fnstenv or and add jb loop (bad) stos xor pop adc and sbb rex.WRXB int3 and incl shll sub (bad) sub outsb push or scas jo pop setg (bad) or xor subl xorl jns roll push add incb xchg (bad) hlt cltd (bad) (bad) cmc pop pop in mov cld sarl lock rcrb jrcxz rex.WXB addr32 (bad) rex.B push pushq movabs out in test scas sub jns in retq (bad) test jae movabs mov pushfq popfq cwtl repz pop pop sub pop pushq xchg test (bad) movabs pushq jns ds adc pop cs int cmpl out or scas rex.XB cs or test je cmp pushq cs rcrl in rcl sub xchg callq xlat sub or lret out test add or mov adcb lea sbb cmp iret xchg dec pushfq cld stc rex.WXB mov rex.RXB add repnz sarl mov loopne subl push ja pop shrl rorl (bad) or add mov mov pop (bad) mov cmp mov movabs pop cmp pop mov stos add add xor (bad) sub retq push test retq in sarb mov pop mov pop addl or jbe mov and and jle mov imul movsl (bad) rex.RXB mov (bad) mov (bad) xor ds (bad) popfq in (bad) (bad) mov int3 loope fadd (bad) (bad) adc sbb lahf mov mov add lret rclb xor mull push (bad) fisttp repz fidiv (bad) adc sbb cmp xchg lahf jbe cli (bad) outsl and rex.WB xlat (bad) negb repnz lods sub sub leaveq in (bad) (bad) pop fild xor out cmp rol adc shlb out (bad) xor (bad) nop fnstcw (bad) retq insl mov add rex.WXB mov movabs repz pop push (bad) lret (bad) rex.WRX xor and roll pop push movabs fnop sub gs adc testb adc pop testl (bad) in (bad) (bad) int3 ja popq rex.WX fldl roll push rex.WRXB cwtl cmp retq movslq fsubrl icebp and (bad) imul jg (bad) stos adc and rex.WX push rcr test (bad) adcb sub in rex.W rex.WB repz push (bad) (bad) jle cmpsl (bad) out rex.B jne out (bad) or pushfq movabs lret mov test sub mov cwtl xchg mov ja xchg leaveq pop in mov subl loop jmp pop rex.WX nop in mov xor mov push adc (bad) mov lret jae outsb andl and (bad) rcrl (bad) mov pop outsb cwtl rcrl insl in rorl mov adc mov outsb xor cwtl xchg xchg rex.WRB mov lret (bad) out test mov jo xchg (bad) cs (bad) test xchg sarb (bad) movabs push and or push and test iret js lret out and mov and movabs loope hlt insb out pop movsb movabs (bad) fisttpl sahf sahf repnz or js in jns (bad) lret cli fistl movabs xor or jp xchg (bad) jge mov out ds pushfq pop mov test rcll mov roll rex.B mov xchg movl sarl js neg mov sbb (bad) enterq out jp sub pushq loop callq pop mov (bad) lock rolb (bad) mov lahf push ror sub lret std rorb pushfq sub xorb roll and rol lret mov mov popq iret (bad) sti js bnd add scas stos lret mov lock push rex.RXB adc (bad) roll mov rcrb leaveq push (bad) popq cmp jne sbb fcoms fidivr (bad) push sahf shl fsave insb rex.XB rex.WR sti add movabs test (bad) cmpsl or js (bad) (bad) (bad) rex.WX push ffree cmp fdivs pushq (bad) mov mov jnp cmp movabs sub xor xchg (bad) xchg or out (bad) mov add icebp add imul xchg and (bad) (bad) pop adc mov and test loop clc pop retq or mov fs lods (bad) xchg rcrl cmp fmull rcl (bad) sub jnp out pushfq mov or cmpsl and rorl push jmp jl xchg rex.B xchg mov sarl shll jmp sub sbb (bad) (bad) lret pop fwait cli jrcxz or (bad) fucom int mov (bad) jb outsb pushq sarl mov loop mov or cmpsb rex.B or jbe (bad) in movabs fst es retq repnz je mov mov xchg insb jns rex.WRX out sub test adc xlat mov ja,pn mov pop shrl insb xor enterq orl cmp in xor (bad) adc rex.WX or adc add (bad) js lret hlt mov sbbl rex.WRXB sub pushq xchg movabs stos mov pushq add and popfq (bad) mov (bad) cmp (bad) stos rcrl (bad) mov pop xor lret fdiv es andb test fist sub sbb gs rex.WR cwtl pop jbe cmpsb cltd fwait cmp rex.WX addr32 fyl2x cmp movsl rex.XB fwait rex.B cmp frstor cmp and in shrl lods mov add or lret movsl push roll mov stos shr fs fdivs shrl (bad) pop jmp or shrl mov sbb (bad) xor (bad) repz (bad) (bad) (bad) je test lret xchg notl or lret push pop shrl fcmovbe ja rcrl jns roll sbb iret jmp lods incb pushfq adc or (bad) rex.R (bad) mov (bad) push rcll push xchg or shrl jmpq (bad) (bad) xchg push (bad) insl fisubr add fbstp pushq mov sahf jns adc rex.WRXB rorl and je pushq (bad) subl or mov mov ds retq out add mov in mov fisubr (bad) (bad) movsb rcll mov cmc xchg xlat pushq (bad) out fcomp add add mov shrb hlt (bad) sub push pop cmp jl repnz shrl rex.WB lret pop rorl popfq mov rcl test adcl sub ja rex.WXB sarl rcrb adc adcl test mov sbb pushq xchg movslq stos fsubrs sahf jns fwait (bad) fxch loopne mov and sbb sub hlt add cmovne repnz roll movabs test scas loope mov mov (bad) cwtl add sub sbb nop pop mov add data16 (bad) (bad) sub push pop shrl or rcrl addr32 jbe rol (bad) add out (bad) jge cmpsb sbb test (bad) ss in sub mov push rex.W jl imul jrcxz fcmovnb and mov sbb add xchg sbbb mov pop cwtl orl stos pushq rcr (bad) cmp imul rex.RXB ffree lret roll retq loope rex.WRB (bad) mov add (bad) adc xchg rex.RX fnstsw add mov jb mov pushq pop rcrl xchg jl push rex (bad) js fwait idivl (bad) jrcxz in outsb jb cmc fnsave (bad) insl cmp fadd adc rex.X jmpq cwtl setbe decb adc sbb pop test (bad) movabs xchg rex.WRXB sub repz imul pop rex.WB add rex.WRB (bad) mov cwtl int repnz test iret shll (bad) jg not jb fnsave rex.X jrcxz push pop addr32 rex.W lret repz stc icebp push in ror pop xchg (bad) jns out adc sarl cld jp (bad) xor cmp pop xrelease xacquire jge and and (bad) iret (bad) repz adc enterq mov (bad) pop cld out jbe push callq mov pop movabs scas repz (bad) or push jnp gs bnd sub cwtl cld xor xchg push (bad) sarb cmp shll int3 test jo roll out adc xor pop cli mov pop repnz add (bad) (bad) (bad) int (bad) (bad) fsubrp (bad) cltd (bad) xor adc movabs out retq (bad) fsts sub shll rcrl ds in pop out (bad) iret mov sub or mov stc insb xchg rcl and xor enterq mov cli cmp mov pushq cmp mov mov stc jnp test cld mov jns or xor jbe loopne mov iret and (bad) (bad) outsl xor (bad) (bad) mov stos jae mov gs rex.B repnz mov cmpsl adc cmp nop jno jmpq pushq lods mov (bad) rol movabs push movslq cmpsl add mov (bad) xor mov xor xor xchg stc sbb rex.RXB (bad) push mov je test sbb jmp loopne out mov loop roll mov gs mov icebp and add add (bad) pushfq es sub dec (bad) rex.B sbb cltd es xchg mov (bad) sub js ja adc or cmp rep pushfq adc rorl mov (bad) out icebp xor jo lret rcr sbb ror test mov mov sarl fwait add rcrl insl shll sarl (bad) icebp sbb test bts scas sbb lods (bad) imul (bad) xor callq movabs ja rex.B (bad) in retq testb adc mov mov cmp xchg mov (bad) (bad) rex.RXB in lret idiv fiadd add rex.X xor fstpl xor sbb fcomps std pushq (bad) fdivrs jne mov mov xchg rex.WXB in rex.WRX test add mov pop jae notl jb lea jrcxz in rex.WX data16 lret (bad) lret xchg cwtl or movabs mov in rex.XB cmp sar js mov xorb lahf scas (bad) in and mov adc cld mov or movsb xchg or rex.WRB nop gs shrl lods cmp add leaveq (bad) orl rex.R rex.R jrcxz scas movabs (bad) mov ds xor and (bad) out jge add in fs (bad) test xchg cmp rcrl (bad) xchg (bad) and (bad) mov push (bad) jae lods add push sbb rex scas test loope add jb shlb jl cmp in xor sub movsb jae ja bnd jae cmp icebp (bad) or sbb xchg pushq adc (bad) rex.WRB adc sbb rex.R mov (bad) rcll (bad) out loope push add shrl (bad) push rcrl in or sub jp mov pop cltd loopne rex.WX (bad) mov xor (bad) (bad) rclw rex.WRXB fwait icebp vpaddb mov xchg repz xchg retq sbb or test (bad) jno js cmp jo pop rex.WR movabs sub shll rex.RB sub je and lret push (bad) mov (bad) mov in (bad) enterq sbb sub or loope sbb (bad) adc pop mov fdivrp or in retq rex.WX fcomi sbb stc pop shrb sub fnstenv (bad) (bad) in jns retq and rex.RB adc outsl sub int3 add ss imul or xchg movsb add xchg jae imul jae (bad) adc jno add or (bad) jmpq jp cli fadd pop mov pop rorl in rex.XB (bad) xor movabs jg retq and inc or jbe pop movslq sub (bad) rex.RXB and mov rex.WRX stos (bad) jb sub mov cmc push adc rex.X (bad) (bad) loope movabs movabs xor rex clc cltd rex.WB pop rex.RB sbbl (bad) popfq (bad) cmc xchg sub adc fiadd jns add popfq loop mov (bad) xchg in mov popfq mov xchg (bad) xchg lahf rex.WXB (bad) loopne iret roll addr32 or fwait mov rdpmc pop mov cwtl pop cmp mov sub sti jg movabs xor cwtl in jl (bad) cmp mov shrl and (bad) mov hlt movabs mov pop rcr rolb retq jge imul add mov roll pushq fwait lret pushfq and repnz adc mov push cli gs (bad) iret adc rex.WX and xchg je (bad) push movabs fadds (bad) repnz (bad) xchg (bad) loope (bad) roll add rex.WRXB rex.RX xorl int push cmp fs sub xor cmpsl (bad) test mov or adc lea mov rex.WRXB (bad) mov cwtl mov gs mov mov add icebp sarl cmp sbb (bad) sub fcompl jrcxz (bad) jl (bad) xor cmp sub jmpq jl xor movabs (bad) cmp in fxch xchg rorl (bad) outsb icebp loopne (bad) icebp fisubr repnz xchg mov (bad) mov sub fstpt jl (bad) hlt rex.WX sub (bad) jae icebp (bad) rex.RB rex.B jp addr32 shl enterq (bad) xchg imul sub insb (bad) icebp xor (bad) rex.B lock jo (bad) mov jne sbb adc rex.RXB mov (bad) callq pinsrw adc xlat (bad) xchg mov add rex.WRXB jle push stc (bad) cwtl test sbb (bad) mov pop jns (bad) sub lahf incb xlat sub sub lret out lahf jl add jns rex.W (bad) lock and decl adc movabs jbe callq test lahf sbb xchg lret rex.R rex.WR scas mov pop (bad) sub repnz lods (bad) push movabs sub rex.WRB icebp lock pinsrw pushfq movabs sbb sub fwait out rex.B jp and and cld xchg and sub cmp (bad) movl shll xchg (bad) add rex.RB jp adc icebp out leaveq fdivrl rex.RXB (bad) in rex.WRXB pop sbb (bad) jmpq xor jl push mov rex.XB repz ficoml movabs icebp sahf int3 (bad) xor (bad) jp insb clc cmc and fildll shrl scas mov xadd (bad) sub out mov sub adc xor invd pop (bad) rcll fwait enterq push lods repnz sub (bad) push (bad) test gs pushfq es cmpsb xchg and (bad) xchg test fstpt lahf es cs test rcl icebp lods cmp add jge enterq sub adc xor mov (bad) (bad) in lahf fcmovnu (bad) (bad) xor (bad) jrcxz (bad) lret cltd je test je xor pop cwtl loop cmc fiadd jnp push pop or cmp sub (bad) cld (bad) (bad) jno enterq jb rex.B mov iret cltd jl ss imul mov jg jge xor adc cli movabs mov sub (bad) lock nop mov hlt rex.RB movabs pop scas xchg (bad) mov movsb rex.B lret sbb incl jp icebp rex.WRXB hlt cli (bad) fstpl mov sarl icebp (bad) adc rex test rol jno and movabs add divl cmp sbb rcr and (bad) sub cmpl push test jge fsub jae pop cltd sbb cmpsl (bad) mov popfq push mov enterq out (bad) rol sbb sub in gs movabs icebp jmpq rex.XB rex.RX (bad) icebp adc movabs rex.WR and sub jge sub sbb rex.XB repnz roll (bad) sbb pop push cmp jge mov mov rex (bad) test pushfq lock mov (bad) or (bad) (bad) sub sbb rex.XB jp movsb push xor cmp roll adcl pop shl xor (bad) jrcxz fwait pop andps rex.R pushfq (bad) cli adcl js push leaveq movabs xorb or sub mov movabs xchg sub jns (bad) lock loop xor rex.W (bad) movabs test (bad) movabs (bad) cmpsb insb out (bad) retq jmp sbb cs repnz movabs ror fs lock in (bad) retq jmpq fstpl in pushfq add xchg (bad) push rex rex.XB xchg loope sub xor add lret pop jns (bad) sub fild leaveq sbb mov (bad) rcrl cmp rex.B xorl pop mov rex.WRXB jrcxz sarl pop xor (bad) mov pop (bad) clc jnp enterq hlt scas rex.B jle out jb rex.RX ss out jl adc in xchg rex.X rex.WB cmp sub mov nop sbb lods int3 std jge cmp ss sub callq pop icebp rex.R insl loopne jmp fcomps retq rex.WRX mov scas movabs gs fistl jl and jp (bad) (bad) shrl ds loopne fstl (bad) adc (bad) adc leaveq sbb leaveq xchg jmp insl jle rcll mov and mov ja rex.WB mov imul (bad) adc jb xor mov in (bad) mov lock stos (bad) jge mov lret int3 clc (bad) sar lock in std push in movabs rex.WR and vmread test sarl (bad) retq stos (bad) jl sbb push subl add xchg push retq rolb (bad) imull (bad) jp (bad) (bad) sti cld cmp (bad) (bad) fwait jle and (bad) lret add add mov jae sub mov push pop adc clc or ja mov rex.XB loop (bad) or xor (bad) cli pushfq cmp or or and add xchg add cmpsl insl or xchg mov xor (bad) pop icebp in incl cmp jmpq jle je and push cmc setne cmc sbb mov cmp sub jmpq (bad) push jle cmpsb pushq xchg neg rex insb repz xchg rex.WR jle push or jbe and add test out test sarl (bad) or jl pop in mov fs push jle mov (bad) jb xor (bad) loop pop gs loopne cmp sbb (bad) jb xlat (bad) (bad) cld xorl (bad) (bad) callq sarb roll pop (bad) (bad) (bad) rex.RXB sahf sbb icebp mov mov (bad) or add add adc xchg mulb rex.WX cmc jrcxz leaveq gs clc lea fxch loopne sub faddp push je xor xlat jp add shrl shll push and xchg leaveq mov mov xor icebp je je jmpq add rex.RX (bad) add add mov sbb pushq imul adc mov jl sub (bad) mul jnp pushq jp loop (bad) jge movabs sub (bad) xchg jb adc mov ficom (bad) callq rex.RB adc sbb adc mov mov mov in rex.W and rex.XB outsl (bad) (bad) (bad) sti in cmc in (bad) (bad) (bad) (bad) (bad) in (bad) std cmp mov lea fidiv or xlat rex.W in in out rex.XB lret adc std in retq movabs sbb and test imul (bad) nop mov xchg movabs rex.WRB xor (bad) test pushq (bad) lret adc imul (bad) pop jle (bad) mov fldenv cmp mov cmp sahf xchg (bad) rex.RXB insl xchg xor movslq mov fidiv rex.RXB fadd mov ja add jl add mov leaveq test repz (bad) movabs mov jrcxz fidivl hlt mov rcll add (bad) rex.W cmpsl and (bad) sti rorl movabs icebp insl fidiv pop mov add mov gs (bad) mov and mov rex.B pop callq out mov or (bad) (bad) (bad) out push sub cmp cmpl rex.WXB pop (bad) or mov rex.W push jbe mov in push (bad) fistl add cmp or jge rex.WRX movabs test repz (bad) jmpq jmpq add rex.RXB gs imul add neg clc test btc push dec mov inc sub stc seto not sub movsbw lea movzbw lea bswap mov movsbl mov movsbw movzbq mov lea bswap lea mov not movzbw lea jmpq outsl jl sub (bad) subl rex.B add rclb (bad) rex.WRB xor rex.WRXB sub imul es (bad) stos mov (bad) (bad) sbb mov mov (bad) fist insl rex.WRX mov sub imul xor jrcxz adc xor jle xchg mov sub movabs push and or (bad) (bad) cld rex.RXB loopne (bad) (bad) (bad) (bad) xlat shll (bad) (bad) mov imul (bad) in (bad) rex.RXB add add rex.R rex.XB movsl rcrb out shlb or adc or add (bad) lret test test sti hlt pop callq jne sar push jmp pop icebp lock iret test mov cmp addl repz (bad) jmpq ja cmp (bad) lock sub add rol jmpq callq bswap add not shld mov clc jmpq jmpq jne shrd bsr mov rol sub adc and mov jmpq xlat jns ss in rex.WX jbe loopne popfq mov (bad) push mov std (bad) scas stc jmpq callq movsb mov (bad) sti repz (bad) testl mov mov js pop xchg loop (bad) (bad) insl callq (bad) or (bad) test (bad) (bad) (bad) outsl or mov sbb (bad) (bad) (bad) incb movsb xlat or jnp (bad) sbb cmpsb sub xchg mov out jnp xor jg xlat out nop xchg (bad) sub movabs mov hlt xor cmc pop rex.WRXB retq xor nop add in (bad) cmp adc addr32 loope rex.WXB and (bad) sub jge mov jrcxz adc add xlat sub movsb test jno xor rex.WRB adc sub lods (bad) or add (bad) (bad) pop outsb (bad) mov fstpt rex.B jge mov rex.B xrelease and adc in popfq or push int3 negl push mov jle cmpsl (bad) outsb xor lock leaveq movabs or scas test popfq cmp mov (bad) (bad) sti rcrb (bad) (bad) (bad) movslq xchg or out (bad) (bad) jmpq and movsb (bad) out xchg cmp scas test cmp rex.X rex.B cwtl (bad) (bad) ja (bad) jno leaveq scas and rex.RX and push and movsl and rex.RXB js xor rex.WXB mov cmp (bad) sti insl test test bt test jmpq jb test clc stc cmp jmpq cmp cli int mov out out sub mov fisttp xor mov (bad) retq hlt mov mov (bad) push out fisubrl (bad) xorb callq div xor loopne (bad) scas add push rex.W (bad) lods int3 xor pushq push mov (bad) (bad) sti jl mov cmp (bad) (bad) decb or scas fistpll xchg test jg stos sbbl imul popfq or xchg xlat (bad) mov cmp jmp jno (bad) (bad) (bad) (bad) fcom xor rex.WR hlt cwtl jp in lcall (bad) jp popfq mov (bad) adc rex.B out mull test enterq adc sub add je xchg mov cmp xor stos (bad) mov and adcl rcr scas in fadds negb (bad) pop jl xor push rex.RB jne cwtl (bad) (bad) je rex jrcxz xchg in bnd rex.RX std jae rex.WRX cltd pop adc pop test retq sbb adc rex.WB rex.WXB mov mov (bad) repz fiaddl and shrl or and test jp mov std (bad) (bad) sbb mov xor rex rex.WRB mov loop cmovnp (bad) stc rex.RXB (bad) and pop int loopne xchg (bad) insl cld mov xchg sti mov cmp adc adc mov mov and cmpsb mov scas loop xor jae loopne movabs rex.WXB or nop callq lret adc shld mov bts sub shl not bswap stc mov cmp clc bt cmc sub stc stc cmp cmp pushq bt stc cmc cmp jmpq loopnel ja xor (bad) sahf je stc push test lods and fs adc (bad) leaveq sahf push xor mov jge test je sub icebp mov loope mov orl xor sbb outsb or push rex.RXB sbb movabs (bad) (bad) (bad) cld add in (bad) (bad) inc lahf cmpsl rex.WRB rex.WRX pop xchg pushfq stos cmp or cmp mov rcrb jns imul test add add addr32 xchg mov out (bad) push pop xchg add shlb ds outsl mov xor xchg sbb (bad) jne fildl jno (bad) sub (bad) jns pop adc mov cmp jmpq callq jmpq shrd adc mov test add test stc mov stc bt stc stc test jmpq callq jmpq or cmp xor int3 cmp rex.R add (bad) repnz mov repz pop cmp rex.RX xchg lahf (bad) lods int3 scas sbb adcl and (bad) and (bad) (bad) mov rex.WRB push or jno xchg movabs mov rex add add (bad) out sbb repnz (bad) mov pop xchg mov pushq popfq data16 rex.XB rex.RX jp and jmpq imul mov out mov pop xor push jmpq jl movslq fistl js mov or jbe adc in cmp mov ja adc out sub outsb fist or insl adc mov lea or lahf out add (bad) jo in sub adc adc in pop rex.B or cmpsb sahf push (bad) lret (bad) imul add and retq repz jp fnstenv and and rex.WB adc jp mov ja fisttp popfq jp (bad) or repz rex.R (bad) lret movsl jae (bad) ds (bad) jle sbb rex.WX repz mov (bad) mov movsb sub js fstl xchg fdivrs fist insl sub sbb std callq adc retq cmp fs callq sbb jle sbb mov or xchg rex.WX rex.RX adc mov sbb jbe sbb sti add or popfq sahf or or pushq cmc in sub add fs stc cmpsb enterq pushq ficompl sbb add and lods sbb jne sub (bad) mov movsl (bad) es test mov rex.WR and mov mov ficom (bad) movslq (bad) rex.WR sub and ds test push sbb xor faddl xor addr32 mov incl andl xchg test and xor (bad) rex.WRXB stos mov (bad) fisttpll int3 mov push iret (bad) adc sub xchg rcrl adc hlt (bad) add jae push xor jmpq stc jge lahf cli pop cli nop mov fdivrs push mov rex.RX and adc (bad) mov mov rex.B insl rex icebp movabs ds gs test and add xlat mov clc cmc bt add jmpq add rex.RXB gs outsl fs imul add (bad) mov (bad) (bad) cmp shll or pop xchg jrcxz int sbb rex.RB and out mov retq imul xor lods cmpsl enterq in test push or mov imull mov and cmpl xor je mov sti fs jae adc (bad) (bad) std cmc pushq jae lods jo xchg stos jle xlat sbb in xchg retq adc clc add (bad) loope add shrb (bad) fcmovnbe (bad) add sbb xor (bad) rol popfq (bad) push add (bad) xlat fdivs lods (bad) adc retq shrb loopne fidivrl sahf sarl xchg mov mov test ja mov rex.RX (bad) stc push loope add fadd mov (bad) mov rex.X enterq bt bswap push bts dec btr mov btc sub xor bts push cmp dec push shr ror push shrd push lea shrd sub mov bt clc test jmpq jne gs xor fs insb add callq rcrl addr32 (bad) jmpq mov enterq xchg data16 popfq mov icebp movabs (bad) push mov paddd xchg (bad) incl vpxor xor loopne insb push mov clc push push jle int3 lahf and sbb rex.WX (bad) roll lock add rex.R rex.W int xor (bad) xchg stos push add mov cli (bad) enterq movabs mov rex.WX test jb xchg in (bad) (bad) (bad) sti popfq insb push push sar (bad) (bad) cs cli in push mov pop or mov ljmp mov (bad) mov pushq cmpsb sub mov xchg (bad) insl repnz (bad) rex.WR (bad) jo mov jne fs rex.WR mov sbb (bad) rex.WRXB mov rex.XB pushq pop jbe add fwait scas je rclb add (bad) jns ss rex.WRXB (bad) adc push mov mov rex.RX rex.WXB and (bad) xchg xchg jae test mov sarb mov pop jbe mov rex.XB (bad) and fisttpll mov fdiv repnz rex fs jmp jrcxz cmp and scas pop mov jbe (bad) movsb repnz (bad) lock int3 mov int3 rex.WB (bad) (bad) sti shrb (bad) (bad) (bad) (bad) or clc rep rcll sarb mov (bad) inc xor (bad) cvtps2pi jnp js pushq pop sti (bad) mov mov or xlat rex (bad) lret (bad) (bad) jg callq movabs lods iret std xchg lea pop (bad) addr32 rex.R addr32 test stc (bad) mov cmp or dec shr sub bts dec or test mov stc sub jmpq and movabs push (bad) jne imul cmp ds xor cwtl lret cli add add xor fwait cli lahf mov cli cmp jo sbb (bad) test rex.WRB sbb movsl gs pop lret (bad) jo sbb out (bad) xor add (bad) (bad) sti ja pop cmp (bad) (bad) (bad) decb push repnz scas test adc rex.WXB jnp es mov jo mov push rex.WRXB fisttp mov adc (bad) adc movabs xchg (bad) in cmp cmp (bad) icebp cmp add (bad) in (bad) adc cli retq insl int (bad) or fwait add rex.WRX or std in test rex.RB rex.WRX gs gs outsl jb add movabs sbb pushfq cld rex.X loope sbb cwtl cltd push rex.XB mov jge (bad) div cli cltd xor gs (bad) cmp movabs fdecstp jmp (bad) sti fbstp adc mov cmp mov out mov add lods movabs jnp mov clc xor (bad) (bad) cld adc adc (bad) (bad) (bad) (bad) (bad) movabs rex.WRX jnp jno and pushq sbb rex add jle rex.WRX vpminub retq fmull outsl (bad) cmp and int3 mov callq (bad) repnz nop cmp mov addr32 out rex.WX movslq jb xchg lret mov (bad) rex.RX mov fs insl (bad) pop setnp pop not pop movzbl not pop jbe mov not mov pop retq xchg fimul (bad) xchg rex.B push xor outsl pop jo (bad) rex.XB rex.RXB mov pop mov fisubrl sub in test fidivrl movabs push sbbl fldt (bad) stos imul mov repnz cli mov (bad) and in adc jmpq (bad) outsb push int push push jne mov or (bad) (bad) sti stos jbe lret (bad) (bad) (bad) cmp ja mov jno jp or imul jnp (bad) (bad) (bad) mov cld xchg imul jb sbb mov rex.WRX movb rex.WRX movabs in fdivs js lock pop push xor mov rex.RXB push loop (bad) jmpq callq rcl cmc sbb cmc add neg bswap mov bt cmp cmpb jmpq and in pop and lods rex.W jbe leaveq stos jl mov repnz mov cltd (bad) movabs xchg (bad) lret xor pop loop fs pop sbbb incb or mov imul adc and sti (bad) mov add packuswb rex.RB icebp push mov test or sbb fldl add iret mov xor xorb outsl lods mov or xchg pop insl rex.WRXB rex.WXB fwait notl leaveq (bad) movsl stc push (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) decl pop adc pushq or xchg iret cmc and cwtl mov iret imul rex.XB hlt adc mov movsb xchg xor scas test lea (bad) out callq or (bad) (bad) jg xchg sub xchg (bad) sbb adc rol mov (bad) mov rex.W add (bad) pop lret sahf xor jmpq (bad) divl imul pop mov std imul rex.WRB rex.WRXB data16 jmpq or sar movslq outsb and mov movabs (bad) (bad) (bad) decb xor add sbbl fidiv and (bad) jb xchg xchg pop mov pop xchg pop xor or repnz (bad) pop (bad) (bad) sbb sbb rex.R mov mov mulb rex sub sub (bad) xchg rex.X (bad) test (bad) jle cmp int (bad) xor rex.WB xchg cmp add lock shld setns xor bt mov xor sub or shl add sar rcr seto mov clc test jmpq je and push rcr rcl mov cmc data16 lock movzbl lea jmpq je xchg clc add data16 testl inc mov je btc bsf shr add stc shl inc bt add ror shld mov stc clc shr stc cmc cmc cmp cmp jmpq sbb callq rcll test scas pop xor xor mov ljmp imulb rex.WRX enterq adc insb rex.WR roll notb fbld mov or mov adc out repz nop in rex.WXB jg loopne movabs callq push (bad) xchg test js (bad) (bad) sti (bad) out add (bad) (bad) (bad) (bad) (bad) nop cmp div mov lods and scas out push icebp jbe pop xchg sub ds add add fnstcw mov push xchg mov mov insl loopne cmp shrl jrcxz insb std lahf mov adc or repz mulb (bad) rex.WXB (bad) out andl (bad) stc cmc add jmpq callq neg mov shl btc mov jmpq rep not pop jmpq jmpq jb cmc cmp cmc cmp jmpq callq jmpq jmpq jmpq fbld mov sahf sbb (bad) divl (bad) sbb add jnp add mov rex.WR rorl and mov lret (bad) (bad) (bad) xor imul adc (bad) rex.W add push jecxz cmp push jnp jmp (bad) rol push xchg mov (bad) sbb xchg (bad) and mov adc test int adc mov rex.WXB insb outsb popfq xchg out xor push rex.WRB movabs loopne (bad) (bad) (bad) (bad) decb outsb xor add cwtl enterq scas popfq rolb and mov (bad) (bad) (bad) decl cmpsb and pushfq rolb or bswap callq cmpsl lea sub es pop (bad) push (bad) jge es rex.RXB and clc push pop std (bad) jle mov rex.WR push mov add sbbl jmpq mov shll mov leaveq mov rol inc add mov bswap mov jmpq jne bt mov cmc add clc test clc movzwl bswap rcl mov jmpq je jmpq jne btc mov xor lea ror inc sub cmc mov js sub bt cmp cmc pushq cmp jmpq je mov jmpq je test clc jmpq bt cmc jmpq lock outsb pop cmp fistpll add xor data16 rex.XB mov roll sbb rex mov or cwtl ds jmp or fbld icebp in mov stc and (bad) xor (bad) sub (bad) incl (bad) mov repz movabs xchg cld cmp push sbb int pop clc out fwait cli rex.WR cmc or stos rex.RX (bad) stc test (bad) xchg mov cmc leaveq pushq cmp fidivr add mov (bad) add shll icebp (bad) jmpq clc ror cmp clc xor bt add bt jmpq test bt push data16 (bad) (bad) add rcl mov clc clc test jmpq jmpq (bad) mov sbb retq insl add mov hlt rex.W js or mov (bad) rex.WXB or test or push jo xchg pushq ja fildll sbb rex.WRX rex.WRXB cmc mov loop icebp (bad) add rex.WRX cmp push movslq jge rex.R mov sub in (bad) pop lcall enterq jmp xlat pop out (bad) (bad) mov scas stos (bad) mov (bad) (bad) cld sub xchg mov sub or cwtl pop or add cmp or rex.WRXB loope test jno mov mov sub adc mov callq jge (bad) (bad) js pop lock sbb sbb mov rex.WRXB hlt lret xchg bt stc bt imul cmp cmp add jmpq stc cmc add cmc sub jmpq and mov stc pushfq rex.WRB (bad) pop jge xchg mov jrcxz outsl rex.R cs cmpsl sbb rex.RXB movabs or xchg out xchg rex.R (bad) adc add add (bad) xlat adc xor loope es (bad) cmp xchg insl pop cmp jle clc movl andl ror out fisttpll sahf sub adc adc adc cmp rex.WB fwait rex.B icebp rex.RXB (bad) (bad) (bad) sti scas (bad) mov (bad) incb jg loope xchg or (bad) (bad) (bad) inc jno shrl in rex.XB movabs xchg jp cld stc (bad) xchg lcall mov cltd and add jg sbb (bad) movabs jl cmp sbb pushfq int3 mov push in test jmpq (bad) lret icebp xchg rex.XB cmp and or ds movabs xchg int rex.RXB jo out cltd push push push xchg loop xchg rex.WXB cmp addr32 mulb cmp lods imul movsb iret lods rorb or jae (bad) xor movslq add mov sbb jbe (bad) (bad) (bad) cli sti add (bad) (bad) (bad) std mov stos or int jno jl rolb rex.XB (bad) fdivrp out (bad) (bad) (bad) jmp and (bad) and leaveq lods sahf (bad) lock mov cmp mov xor sbb rex.RX nop mov jmpq rex.RXB pop lret loop pop sti andl mov lea (bad) insb add rex.WRB jne test test movb cmc bt cmp test jmpq callq bt stc cmc bt or jb je xchg mov xchg mov not xchg movzbw lea lea jmpq cmp (bad) fmuls xor (bad) rex.WR add add in add sub fisttp sbb (bad) out mov or outsl sbb xchg push gs or push push sbbb (bad) sub stos movabs or xor (bad) and sarl sti or (bad) std fwait mov mov cmp xor mov frstor cwtl roll fistp xor rex.WXB and sbb mov sarl movsl push or lods (bad) (bad) (bad) jmpq add mov test push cmp lret pop add jrcxz sbb or movabs pushq pop addr32 adc lea data16 (bad) push sbb rex.W bt jmpq mov xchg rex.WX hlt jg fwait sub or xor mov retq pushfq neg hlt hlt sbb cmp in (bad) out hlt pop mov push pop lahf rclb enterq test push sahf repz or cmp jae (bad) adc fsubrl data16 rex.RXB (bad) (bad) cld mov (bad) (bad) (bad) decl movabs sbb rex.WXB push (bad) xor xchg pop mov fisubrl adc jne insb sub mov pushq jae mov ds jnp leaveq ds icebp cmpsl and cwtl add add cmp fnstcw ds lahf movabs rex mov rex.RX fidivrl and out out shrb sbb test leaveq (bad) mov push jle je jne clc inc mov mov movsbw sub shl btr mov cmc jmpq jmpq outsl jp rex.WXB repz or rex.RX sbb out cmp lret mov lods add rex.RXB clc fisubr mov rol xchg (bad) (bad) cmp (bad) xchg and jo outsl leaveq pop pop xchg cmc mul in (bad) xchg rex.WR xchg movsb xor and rex.WRX xor (bad) pop stos xor rex.WRX mov push ja (bad) (bad) (bad) sti mov es (bad) (bad) (bad) incb adcl add xlat pushq rex.XB lods mov cmp add xor pop sub pushq js mov imul mov and sbb adc fdivl addr32 rex.X cld xchg (bad) (bad) (bad) (bad) mov (bad) ror adc jp xchg fnsave int mov mov xchg lea in rex.XB (bad) test movabs (bad) mov cmp push (bad) cwtl (bad) mov add test stc movzwl bswap and mov clc test add test test mov cmp test jmpq sti pop push jnp push rex.B xchg fsubrl mov es sub ss cwtl rex.RB shl cs xchg mulb xor in movabs insb (bad) (bad) (bad) std in rex.RB stos sub rex.RXB jb xchg (bad) rex.WRXB repz hlt adc (bad) (bad) std jge repnz icebp cmp (bad) mov adc sbb jne xor (bad) rex.X push (bad) ss (bad) je (bad) mov movsl mov cmpl jl push mov push insb sbbl xchg (bad) icebp decl movabs in imul test cmp cmc add jmpq cmpsl and lods and retq sub (bad) fwait push pop imul mov (bad) fdivr lock fimul mov xchg div sbb jge movslq fiadd and sub rex.RB movsb (bad) or xchg mov jmpq movsl adc insb rex.WX or (bad) leaveq pop rex.B orl mov retq add add pushq fdivrs addr32 cmp mov (bad) movabs rcl (bad) (bad) (bad) (bad) sti loopne xor mov jb cmp iret stos xchg mov mov and jo (bad) fdivrs rex.WRX xor rex.RXB fwait pop fxtract add adc callq roll jbe push cli cltd mov test movabs mov mov lea lea mov pop jl ja jmpq sahf rex.R rex.WXB loop movsl cmc rex.W out rorb roll rex outsb xchg rex.B fist cmp rex.WRX fnstenv pop test rex.WX fcmovnbe (bad) cmp icebp and xchg shlb lea movsb jns pushq lods (bad) pcmpgtw (bad) hlt sti in mov rex.RX movslq cmpsb pmulhuw movabs iret retq sub nop pushq rex.RXB leaveq insl (bad) retq imul rex and cmp push or gs (bad) (bad) cld pop cs lods (bad) (bad) (bad) (bad) callq pop callq push sbbl add pushq fimul cli (bad) repnz and enterq enterq mov adc pushfq mov xor retq (bad) jnp mov iret or pop rex gs jae mov mov lock (bad) mov pop or xchg (bad) jmpq repz adc rcrl jns or or fsub loop repnz int3 pushq fucomip (bad) in movabs iret es pop xchg outsl lret pop sub loop add pop icebp cwtl (bad) repz std jl fiadd rex.X or sahf rex.RXB (bad) vmovntps jae xor hlt xchg xchg lods rolb push retq jo mov cwtl lods ja (bad) (bad) (bad) popfq imul (bad) cmp int3 jo sub cmc movslq pop cmp fcos (bad) (bad) std ja rex.WXB fs add add or or cli popfq sub mov jrcxz pop fimull icebp fs fidiv pop jmpq cmp pushq ss pop loope mov jne cmc cmc stc movb bt cmp stc stc test jmpq jne clc cmp test movb jmpq jmpq jne shr add sbb ror mov cmp test add test movzwl adc shl shrd rcl mov clc cmc cmc cmc add jmpq push push push rex.WB cs rex.WR rex.WR fucomip cmpsl sbb decl out cli jmp add xor pop data16 jle imul sub sti out mov add (bad) xchg push rex.WRX (bad) jp pop xor jp (bad) shll (bad) rclb out (bad) test in (bad) push (bad) rex.WX (bad) retq (bad) jle idiv lods (bad) sbb (bad) xor or cmpsl and test mov (bad) xchg mov test (bad) cld fs (bad) (bad) hlt in ror pop repnz add je push jmpq xchg rex.RX rex mov rex.WXB rex.WB mov rex.W rex sbb (bad) imull mov popfq bnd add fistpll lahf lea ss in (bad) mov pop add movslq lret sti jge js rex (bad) (bad) movabs mov sarl or pop test xor mov pop mov imul repnz (bad) popfq (bad) fcmove imul rex.RX test cmc push mov retq jp rex.WRX sub leaveq insb (bad) movsl movabs (bad) imul (bad) pop loope out mov ss xchg adc cmp (bad) (bad) (bad) sti in nop rex.WX (bad) (bad) (bad) (bad) jne jns mov cmp fisttpll (bad) (bad) mov (bad) js mov pushfq enterq fxsave jne retq jb scas rex.WX (bad) xchg adc or jne xor jmpq mov jrcxz add xchg sbbb mov clc (bad) mov pop movabs (bad) ds mov pushq cwtl in mov xchg jnp or jae in mov xlat test fisttpl jo xor rex.WX rex.WR sbb jl pop jle push rcrb jp lahf push xchg cmp xchg sbb add pop add mov fistpll mov sbb fnstsw sub jns and imul cld push (bad) xorl (bad) in imul ja adc push or add add xchg (bad) hlt (bad) (bad) insb jbe rex.RXB in or je test xchg mov push cmp mov (bad) xor sub hlt rex.WRXB or rex.WXB in lret mov pop cmc or push lea jmpq callq bt jmpq setae sub shr sub add movzbw dec add test sbb not movzbw mov inc rcl mov cmc test bt bt repnz jmpq rep movsbl jmpq (bad) (bad) xchg gs (bad) rcll movslq xor push test out adc std pop xchg rex.WXB xor pop scas int3 test rex.WRXB mov movabs sub mov outsl sub mov test or (bad) xor imul not incb and rex.RX int3 es sbb (bad) (bad) (bad) sti icebp jns cmp (bad) (bad) (bad) incb js mov es movsb add add push cmpsl lock push ss icebp lahf rorb sub rclb mov loopne and sub cltd (bad) or in movabs cltd rcrl adc adc stc sub clc clc or jmpq jmpq je movzbw xchg lea jmpq callq clc add not sbb shr adc mov bt cmpb jmpq jb stc cmc cmc cmpb jmpq pop mov fmuls (bad) xchg je xor adc mov mov adc xchg mov pop adc xchg cmp adc popfq rex.RX movabs std insb incb adc mov jg rex.WRXB data16 rex.WRX int3 sarl xchg sti cwtl (bad) add (bad) sub cmc movsl scas mov loope sti rex.XB (bad) (bad) push jg fisttpl rex.WXB or pop (bad) jp mov mov mov (bad) (bad) callq (bad) add jmp pop cmp push fcmovbe and movslq pop ud2 (bad) retq pushq imul push rex.R jp cwtl add add (bad) (bad) adc pop cmp mov pop mov fmull stc jmpq jb jmpq test sub jmpq bnd nop jg movabs sbb rcrl xchg mov cmp pop (bad) movabs fneni(8087 mov mov sar (bad) (bad) std mov jrcxz pcmpgtd mov or xchg clc (bad) pop sub mov jno stc roll gs rex.W rex.W rex.WR jne ja (bad) (bad) std and repz addr32 (bad) (bad) callq (bad) adc jp gs mov and cmp ss mov iret mov adc movsb lea lahf mov (bad) add mov (bad) or (bad) (bad) sub or outsb push js adc in sbb clc (bad) int (bad) sub mull scas (bad) adc scas mov in (bad) xor and int jnp ss push (bad) sub jrcxz loop sbb xchg clc fstp xchg (bad) repz clc rex.WRB jb rex.WRX std (bad) ds stos cwtl rex.X (bad) (bad) (bad) sti push testl std out push mov loop ja sub lods mov (bad) (bad) (bad) inc and repz xchg push andb test xor rex.R (bad) mov fnstenv cmp pop cmpsb mov popfq xchg (bad) jrcxz rex.WR mov and jae (bad) lea data16 movabs add jmpq sub cmc cmp jmpq jne xor sbb clc cmp mov js add stc test movzwl jmpq jmpq jmpq or cmpsb lahf rex.X sbb mov (bad) or int3 in cmp icebp popfq test insl push test mov sub sub shrl add or fucomip jg (bad) lret xchg add push sti ficomp (bad) es and lods pushfq rex.WR rex.X cli (bad) add xor retq push xor pushq mov mov pop test or movsb mov add cmp adc (bad) sub (bad) outsb cli mov (bad) sbb es cmp sbb mull jae pop negb mov fwait mov repz scas push mov ss ja push rex.X jg mov (bad) pushq xor cmp push (bad) (bad) pushfq out add mov (bad) insb adc mov mov sahf sbb cmc repz mov jl in xchg and hlt push sub (bad) movabs jl imul mov push rex.WRXB movabs jno pop movabs insb rex es std xchg nop (bad) cmp rex.WRB sahf out rex.X cmp (bad) jrcxz mov sti xchg rex.X (bad) and sub (bad) xchg rex.WB scas movabs xchg xchg out (bad) pop xor fnsave (bad) mov (bad) int3 xchg std (bad) gs outsl push stc (bad) mov and outsb (bad) cmc data16 int rol (bad) mov (bad) out (bad) in rcrb lahf mov (bad) mov add repnz (bad) repnz cld out cmp add (bad) push xor xlat movabs ja push (bad) sub (bad) movabs add addr32 int rex.WXB rorb sub cli cwtl (bad) js sub retq movabs roll add add jl mov pop mov lahf scas or (bad) in jb test out rex.R cmp xchg nop jo xor or push and adc push and jns retq push loopne (bad) out rex.X ss iret imul (bad) movslq jae scas adc push rex.X not decb mov sahf adc add ds scas loopne sub mov and xor fucomip sub outsl push rex.RX (bad) adc pop in repz pop int jmp mov scas cwtl cld sub out fdivrl repnz jg push cmp cmpsl adc rex.WXB imul icebp stos fdivs rclb cmp out xchg fs xchg (bad) rex.RX in callq in mov mov pop out mov cmpsb (bad) xor sub test pushq jmpq xor outsl or xchg xchg rex.WB (bad) (bad) rex.WRX jno push cmp add push push xchg xor incb mov (bad) adc push jge rex.RXB imul stos sbb movsl movabs jne (bad) mov hlt repz scas (bad) js sbb fcomi adc (bad) mov addr32 sub repnz (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) jp sbbb jno mov test adc (bad) cli rex.RB rex.WR and icebp pop rex.WRB rex.WXB sbb (bad) cltd mov cmp negb fdivl lret mov xchg rex.X lret (bad) retq test push icebp rex.WB mov sti retq adc cmpsb (bad) jmpq neg movzbq mov shld shl add add lea lea mov jmpq jb clc clc cmp jmpq jne bswap sub bsf mov xor inc rcl (bad) lock add xor rcr neg mov bt jmpq clc stc imul cmc test add jmpq cmp mov (bad) pop sub or cmc in test pop pop ds xorl imul movabs cmpsb out es and (bad) test js sbb mov rex.RXB jmpq mov sahf data16 incl and lahf (bad) fmull test data16 (bad) rex.WRX rcl cmp ss (bad) (bad) cld xor mov in sbb rex.R mov vsqrtss mov mov rex.RXB gs push enterq movabs (bad) or sbb xchg add (bad) or shufps sbb stc out adc (bad) mov (bad) sub (bad) (bad) movsb mov pushq mov xchg jno lea pop fistp sbb mov xchg or sub or mov sub (bad) (bad) (bad) sahf movabs adc lahf popfq jbe add loope rex.RB repnz sahf or or movabs jb in adc (bad) and sbb test out cmp (bad) decl mov push ficom fild js fidiv shrb xorl add jb rex.WX adc xchg in jae or adc mov mov rex.WX rex.WB ds loop mov pushq test lea hlt shlb test rex.WRXB (bad) xor xchg (bad) lahf cmp pushq movsb lret test adc (bad) js cwtl and cmp mov sbb vunpcklps xor (bad) (bad) (bad) clc xchg pop jne xchg scas sarl andb (bad) (bad) decb add add or not pop (bad) rex.X and mov mov xchg (bad) pop rex.WRX mov mov insb adc xchg sbb add stc ficom pop cld mov (bad) lods data16 mov or mov mov pushq jmpq fdivl (bad) icebp (bad) add sub xchg sub (bad) sub mov (bad) cwtl (bad) (bad) ja rex jb test scas adc fnstsw (bad) rex.RB (bad) jrcxz (bad) retq xchg callq jle xchg (bad) (bad) sbb (bad) mov xor jg lods mov es jnp xor rex.RXB scas push or std cmp rex.WX and retq rex.RX (bad) jle std rex.WX (bad) (bad) (bad) sti jbe movsl or incb xchg mov (bad) (bad) incl (bad) movabs push (bad) adc adc movsb imul jle lock adc pushq sbb repz and scas mov pop adc xchg (bad) mov jb repz fisttpll rex.RXB (bad) test (bad) imul fcmovu cmp repz out lret insl add xchg rex.WRXB repnz repnz scas xchg sbb movb xor out insl mov xchg (bad) xor mov mov mov sti rex.XB (bad) repz scas adc sti lret fwait sbb cltd rex.WR (bad) adc xchg (bad) movabs add (bad) icebp add mov push (bad) mov xlat loop add jle incl (bad) jae add (bad) (bad) (bad) sti mov (bad) (bad) decb movsb xchg cmc incl add add imul xchg xchg add fsub mov (bad) sbb jns pushq loopne xor imul (bad) xor ds lods test or test mov rex.B (bad) sbb mov testb scas adc (bad) cmc shr (bad) movl repz mov rex.W rex.WRB sub popfq or movabs xchg mov mov std push stos (bad) cld sahf lock (bad) es out (bad) (bad) cld mov sub callq lret mov scas add (bad) std pop (bad) roll and cmp push movabs (bad) jne add add and (bad) jle pop cmp xchg and movq sub repnz out out mov and sub adc fild push add cmc push add mov jno (bad) outsl mov pushq sbb (bad) cmp jmpq fstpt sub xchg rex.W xchg adc repz xchg (bad) pushq (bad) repz xchg movabs (bad) cltd rex.XB rol cmp sub outsl jmpq loope test adc or mov rex.RX cmp mov jnp jb sbb xchg mov jbe (bad) test lcall fisttpll mov (bad) xor sarl rex.RXB enterq sti fidivr (bad) jg push mov sub cwtl sub push jb (bad) mov (bad) xor rex.WB (bad) (bad) (bad) (bad) cld callq (bad) (bad) (bad) std scas sbb add rex.RB rex.RXB hlt ss push xor jmpq xchg (bad) jl push push rex.XB mov rcl loop retq je push rcrl cmp rex.WR (bad) (bad) inc rorb movsl xor leaveq cmpsb mov movabs xchg mov test cmp xchg mov mov push movabs orb test cmpsb subl data16 test loopne mov jmpq out or repz (bad) adc rex.X lods (bad) xor test or scas movabs rex.WX (bad) insb repz jmpq je jmpq cmp stos push rex.WRB (bad) sub jle add mov js mov nop std clc test (bad) adc pop cmp mov (bad) cmpsl iret mov xor retq mov movabs jl loope xchg xchg (bad) shrb callq retq (bad) mov movabs xor rex.WXB ss cmp adc lods in gs (bad) (bad) cld pop jg sbb (bad) (bad) (bad) (bad) in adc mov ja (bad) adc jmp fnsetpm(287 outsl adc add add insl and jae fs jae sub (bad) movabs callq (bad) imull int fimull mov imul (bad) adc jmpq mov insl lahf xor fld1 jmpq out repz jns cltd jmp movslq js (bad) int xchg mov and xor xchg pushq jp scas mov add insb pushfq stc (bad) cs rorl iret movabs xchg rex.RB jg paddw and (bad) mov rex.RX xor (bad) pop rex.WRX repnz adc xlat lea in mov (bad) (bad) (bad) cld xchg (bad) (bad) jmpq adc sub and sbb in mov fcmovne out packsswb or cmp add jrcxz scas pushq scas (bad) adc fxch out sub (bad) imul out notb mov jbe rex.RB adc stos out js pop int3 (bad) lods in rex.RB (bad) (bad) sarb mov outsb fs rex.RX jl icebp (bad) jmpq movabs callq movsl jne (bad) lods cli lahf pushq (bad) mov int3 mov cmc lods and add rol mulb shr lock cmp jae jrcxz xchg mov rex.WB jge lods iret (bad) stos (bad) cmp retq cli sub jbe (bad) pushq mov sub or outsb jae out mov xchg adc rcrb (bad) test iret test cwtl mov fstpl (bad) (bad) fsubs dec popfq and rex.WX mov jrcxz movabs add add pop out movsl adc lret addr32 sub test rex.WX int ja mov adc pop int3 mov stos (bad) test repnz (bad) jmp mov add rex.XB data16 mov outsl push in and jmpq add rex.XB (bad) je rex.WB jae (bad) outsb movslq jae shld test mov test shl neg mov setae rol mov test test stc clc xor jmpq in movabs jge mov add shr add rex.WRB fmull and (bad) mov iret fdivs int xchg xlat add lods mov jmpq rex cwtl shrl xor rex.R and sbb pushfq movsb pushfq cmp (bad) sti je addr32 (bad) (bad) (bad) incb idivb clc mov roll shrb fs rex.RXB test or xor jmpq (bad) jne add (bad) cmpsl stos mov rex.XB (bad) lcall (bad) fdivp pop cmp stc cmc movsl outsl add jno and adcl jge sub mov (bad) (bad) sahf mov movsb or (bad) mov fnstenv nop mov std xchg xchg outsb (bad) mov retq jle push jne retq and pushfq mov (bad) add cmpsl lock xchg js rex.WX mov push pop lret in (bad) adc test movabs in in xchg (bad) jbe mov xchg cmp pop clc cmp cmp (bad) add rex.RX gs gs jb rex.X data16 rex.B rex.R push xor cs insb add test icebp ljmp (bad) and jmpq jne xor mov sub not sub movsbw lea and movzbw mov clc sub test cmc clc stc pushq cmp cmp jmpq fisubrl (bad) nop cmpsb sub (bad) outsl test pop rex sbb cwtl adc fnsave jg leaveq cmpsl rex.WRXB xor int xchg lret (bad) jrcxz xchg mov shrl shrb (bad) adc cmp cmp incl lcall jmp lret mov repz add es shll and rex.WXB ss rex (bad) jb add shrb fucomi mov and movabs ss (bad) (bad) std ja movabs push out sub (bad) jmpq imul push and sbbl movabs rex.WR cld or fwait lret mov jb je and jp cmp add (bad) jne (bad) fldenv jnp mov test or loope in movsl (bad) rex.RB out fstpl movabs insl js retq mov (bad) ds retq mov mov jl mov jb rex.RXB divl (bad) xchg xchg pop neg (bad) movabs (bad) addr32 (bad) (bad) decb cmpsb mov xor (bad) insb and test loope (bad) add enterq retq (bad) mov adc js mov cmpl mov (bad) (bad) (bad) incl rex.WB (bad) imulb movsb (bad) mov pop repnz rex.RXB (bad) jbe ja (bad) or rol rex.WXB rex.WRB mov fs pop (bad) xor push test ss fidiv mov pop adc popfq cmpsl mov jae test (bad) push (bad) adc fidiv and pushfq rex.X cmp sbb xchg in cmp pop rex.WRB xchg sub loope jg (bad) (bad) add ror repnz jmpq lea (bad) or add mov (bad) (bad) (bad) decb fisttp pop and hlt xchg cmc pop std xchg mul jbe add sub in iret pop (bad) sbb (bad) rex.W cmpsl cmc out jo jns adc adc test xor pop out jno jnp rex.WXB in rex.R sub mov jae (bad) movsl rorl test icebp decl mov movsb leaveq add lods stc add push sets mov clc shl sub movzbw setge mov lea jmpq not lea jmpq mov xchg pop push add iret pushq outsl xchg sub imul xor loopne add ficomp (bad) (bad) push mov xchg rex.B mov test mov xorl lret movslq loopne or cmp (bad) sti rex.B rex.WRXB std rorb (bad) cli lahf (bad) fwait mov (bad) lahf (bad) jg sbb mov sbb (bad) pop test fwait xchg mov or add pushq (bad) lock and in or (bad) (bad) dec movabs icebp and (bad) pop mov xor add mov movabs cmpsl (bad) insl data16 in movabs jbe or mov jne imul in jmpq lods out mov or add clc dec shld mov shrd btc shr dec add xor movl or sbb movsbw mov cmp bt stc cmp jne jmpq mov jmpq (bad) cmp add xchg repz push jo push rex.RXB or rex.RB lea std stos (bad) xchg rcll loopne stc (bad) mov xlat out xor add clc pushq movsb rex.WX push jp in imul out lods mov cmp xor xor sbb cld lods in jbe std xor or test mov jns (bad) (bad) (bad) decb (bad) (bad) (bad) decl add (bad) mov push or add lods movabs (bad) in mov (bad) rex.WB stos mov push loopne (bad) and cld lahf loopne out and xor out nop hlt push std mov jbe mov jo rex.R repz clc pop mov sbb or sub mov or (bad) (bad) stos cmpsl adc (bad) repz sub movsb push rex.B push negb jmpq jge adc or cmpsb nop int leaveq fs (bad) out rex.RXB rex.WB (bad) (bad) std push hlt movsl fadds add adc pop pushq (bad) (bad) ss xor (bad) out out sbb xor jle sahf out ja (bad) shll mulb scas iret dec in cmc (bad) js out cli movsb rex cwtl jns out sub and idivb pop adc adc loopne sbb and push pop rex.XB xor rex.WR jns out and imul sub xor jb out mov repnz jnp callq (bad) movabs rex lock sahf int3 sahf mov xor mov callq mov shrl std mov mov stos addr32 out js jnp (bad) lods decb fildll fsubl mov sbb decl mov (bad) jmpq jl xor jmpq jmp (bad) mov ds or outsl mov xor retq cmpsb rolb vpunpckhbw lods (bad) pushq xchg data16 cmp and popfq xchg xchg jbe orb jmpq add ja jmp xor shl sub cli test cld adcl (bad) in add push (bad) add mov xorb fucom lret push (bad) outsl rex.WX xrelease (bad) fsub jg in (bad) mov jrcxz cwtl (bad) push sub mov mov in xchg cmp jbe xchg movb insb and fldz push data16 in cs xor roll push jle imul add sub xor sub (bad) (bad) movabs (bad) sbb cld addr32 jnp push sub in and jo rol scas test lods sbb test frstor jl (bad) push fisttpl movabs xchg jbe mov (bad) js sti and jmpq je stc add clc clc clc cmp jmpq callq bt add ror mov add sub mov cmc clc test stc cmpb jmpq rex.XB movsl mov push push clc rex.X fs mov sub scas rex.RX sub jmp (bad) pop (bad) (bad) sahf pushq jl rex.X je rex.WB movsl (bad) adc cmp sbb add movabs rex.WRB push (bad) (bad) mov adc mov pushq std rex.WRXB rex.WRXB lahf movabs andl (bad) (bad) cld rex.WB rex.W (bad) (bad) (bad) fxch (bad) in or mov jg and retq mov xchg test add add sbb pop mov in rex.X out rex.R xchg mov and iret jle loope cld movabs push popfq rolb mov (bad) mov (bad) jp adc outsl sbb (bad) rex.XB cmp xchg add clc ss pop jbe jns rex.W add repnz (bad) jl movsb (bad) gs scas mov add push cmpl ficom xor sub (bad) in and movabs pop jg xor (bad) adc mov and sbb sub out and rex.XB imul or adc (bad) (bad) sti cli pushq (bad) (bad) decb xor add or loop xor out leaveq (bad) push cmc movabs lret cmpsb mov test (bad) je (bad) repnz sub (bad) sub ss rex.WB rex pop sti (bad) mov jnp ja repz jg test add cmp clc cmp jmpq jmpq repz mov cmp (bad) jrcxz jnp and (bad) mov in sahf add cmp mov fsubr ds (bad) cli sti lahf mov add add ficomp rex.WRX jge popfq outsl push rex.RXB (bad) rex.W rex.WRB push xchg out mov pop rex.WRXB (bad) or and fmull mov xor jns out (bad) (bad) (bad) sti jo insl rex.WRB (bad) (bad) (bad) incb xor xor stos lret (bad) jne pop xchg mov scas scas (bad) stc and pop xchg rex.WRX movabs adc cmc mov sub rex.XB (bad) (bad) jmpq jns je xchg cmc jo cmp sbb loope or (bad) mov fld xchg push or pop rex.RXB movl cmpsl clc xchg xlat jne rol test (bad) lock and mov pop mov jge (bad) outsb adc mov bt cmc ror cmc sub ja cmp xor clc cmc rol test jmpq test test jmpq movabs rex.WRX rex.RB loopne cwtl sub sbb pop out cmp mov (bad) fist jg scas mov imull jmpq sbb or adc test mulb rex.WRB outsb rolb fdivrl pop je mov (bad) sbb fcoms (bad) cld js movabs js push retq adcl iret push mov lods (bad) xchg add xchg addr32 xor movl scas loopne (bad) movabs xchg in popq (bad) mov xchg or out sub je mov add or adcb cld jp adc mov gs rex.WRXB jne (bad) (bad) insb scas test gs lods adc or leaveq out xchg rex.RX push (bad) push rex.WX jmp lock (bad) stos mov jge fstps push jmp rex.WXB sub mov xchg mov (bad) fimul jp mov adc test lret fmuls movabs (bad) xor movsl lret (bad) test rep pop sti nop xchg lods lea (bad) loopne rex.XB cwtl xor cli in mov movsb jo (bad) rex.WB mov xchg (bad) fdivs jne (bad) sub hlt sub mov push rex.WXB lret push rex.RXB test lods (bad) rorl out rex.W (bad) (bad) cld adc (bad) (bad) (bad) movabs jle add add and ss rex.WR add xchg push rex.WRXB mov pop sar enterq pop mov rex.WRB orl rcll jnp push cmp int3 xchg and movabs (bad) mov iret (bad) rex.WXB adc roll loop or push pop jg and add mov and add test movabs imul push retq imul mov xor movsl xchg fisubrl std leaveq rex.WRB mov sub (bad) (bad) (bad) std (bad) in and cmp (bad) callq iret ss insl adc jg (bad) jno xlat sbb out fidivrl cli xor rex.WXB (bad) rex.WRX cmp or callq pop and movabs (bad) nop mov jg mov adc sbb bt cmp jmpq je stc jmpq add cmp clc stc bt cmp jmpq callq bt cmc or jmpq jns (bad) subl lock pop pop mov or jo xchg icebp test push mov jb in fisttp stos sbb (bad) add data16 mov mul or or (bad) sub add rex.RXB fsubr clc (bad) imul sbb clc (bad) (bad) (bad) decb (bad) (bad) xor int in add pop jbe push shlb xor rex.W xchg movabs lock jg (bad) xchg shr or popfq retq rcl sbb fisubr rex.WR (bad) adcb lock test movsbl jmpq cmc jmpq jmpq push jrcxz enterq sub push sub popfq int xchg jae (bad) push push test and mov adc lret xlat (bad) xchg jno (bad) test push mov xchg xchg rex.RXB (bad) movabs fwait push pop (bad) push add and jg jg (bad) and xchg mov mov rex.RB xchg (bad) rex gs xchg callq rex.WRX (bad) (bad) sti movabs xor mov jae insl rex.XB adc (bad) (bad) jmpq nop test rolb mov lods rex.WXB (bad) xchg imul xor in mov imul retq mov pop (bad) ds and (bad) rex.X pushq repnz or rex.R rex.WRX cmp scas jmpq jae jne mov (bad) or retq pop sub addb in (bad) cmpsb callq add (bad) movabs lahf pop pop jbe (bad) xchg jne sub out flds movabs pop movabs or push ud1 scas (bad) adc iret imul and sti xchg rex (bad) (bad) and rex.RXB sub (bad) jle lea xchg xchg (bad) jne push int3 mov mov vsubps (bad) (bad) add (bad) and stos (bad) jge sub fstl (bad) (bad) (bad) jmpq pop xchg fdivrs outsl xor cmp js push pop cmp push pop (bad) stos std fisttpl sbb jns fnstcw mov (bad) mov (bad) jmpq jbe pop sub iret outsb ja or sub shl not rcr sub add shld mov mov mov inc shl mov bt stc repnz jmpq add rex.RB jne push jb movslq jae outsl fs gs in gs lret or jrcxz subl shrl addr32 push fiaddl add (bad) stos iret cld icebp fcmovb test xor fisttp jae (bad) pop and scas mov test adc test loopel rex.RXB cmpsb (bad) pop (bad) sub retq push add pop lret insl adc icebp rex.WX mov (bad) cmp (bad) decb (bad) (bad) (bad) callq mov outsb adc (bad) addr32 add andb rex.XB mov rex.WB movabs lock fidivrl add out push xor sub push sbb es sub jne adc jp iret (bad) int3 sbbb mov xchg addl xlat lods (bad) push or mov (bad) xchg rex.W (bad) adcl mov (bad) jmpq (bad) insb sub movsl xorl cld cmp rex.WR loopne sbb insl xchg xchg rex.RX rex.RXB cs (bad) stos and int3 repz xchg mov fs rex.WX stc (bad) (bad) xchg out (bad) cmp ds pushfq out adc sub and add pop cmp movsl adcl mov fcmovnbe jl cltd add (bad) ja add notl cwtl and std (bad) (bad) adc imul in jp sbb sbb pop scas push fcomps (bad) (bad) std ja (bad) rex.RXB add or popfq rclb sub hlt repz retq mov rex.WXB rex.R xor xor mov sti imul xchg cmp sbb mov test sbb add (bad) insb rex.RX gs movsb jmpq jmpq jmpq mov shr ror lea ror sub adc sbb sub bswap mov cmc sub bt cmp test stc pushq jmpq imul bt cmp cmc test add jmpq clc cmp sub clc repnz jmpq jmpq jmpq not mov ror btc mov stc mov stc mov bt cmc jmpq cmp jne jae dec mov stc clc bsr mov sub cmp rcl dec mov jne xor clc repnz jmpq jmpq cmp lea lea lea mov not pop jmpq je not lea lea bswap mov movsbw movzwl jmpq cmc push movzbw test shr dec mov test sub jmpq add jmpq rex.WRB jmp in (bad) xorl or movsb sbb (bad) stos sbb pushq rex.RX rex.XB (bad) xchg movabs push cmp cli loope xchg movabs mov sbb (bad) movabs and jb push jb sbb test cmp (bad) (bad) sti jne and (bad) (bad) (bad) incb xor rcll leaveq movsl xchg xchg (bad) rex.WXB sbb out retq jge add pop push (bad) mov pushq adc sarb (bad) psraw lahf lods lret (bad) (bad) (bad) (bad) pushq cs or ds cld and rex.R mov callq jp cmp jo or (bad) cmc sahf (bad) fimull (bad) (bad) xchg xor andb psraw pushq push icebp mov xchg lea bswap mov movzbw not lea mov bswap mov mov lea jmpq xchg xchg mov movsbw not mov mov jmpq pop (bad) retq or leaveq jg cmp (bad) xchg (bad) std jo push xchg rex.RB (bad) lret mov xchg adc fdivl jnp xchg cmp (bad) jl add fwait rex.RB rex.WXB sbb je (bad) (bad) mov icebp data16 cmc callq mov cmc xchg mov adc and (bad) cmp rex.RB rex.R fnstsw xchg fcomi (bad) (bad) (bad) sti movabs xor mov imul add cltd leaveq cmc pop test (bad) (bad) (bad) pushq out in stc rex.WXB mov (bad) clc cld movabs adc rex.WB out movabs scas mov mov mov (bad) mov xchg and mov fnop clc (bad) mov lahf imul rex.WB retq test mov insb notl mov mov test (bad) mov icebp repz insb gs (bad) sahf repz fimul sbb cld pushq mov and fs lock std mov mov adc shrb test test pop rex.X or (bad) sti rex.WRX repz rex.X (bad) (bad) (bad) std out cmp cmpsb lods mov xchg in cmpsb (bad) fisttp add retq xchg loopne add add add push adc cmpsb xchg rex.RXB rex.X sti insb vdivpd mov sahf scas (bad) rex.X rex.RX data16 addr32 cmp ss (bad) add add mov rex.WX sub rex.XB mov pop (bad) out mov leaveq adcl (bad) (bad) movabs (bad) (bad) icebp pcmpgtd repnz (bad) (bad) retq mov lret fcmovnbe xchg hlt jne leaveq add rcrl sub jno jo and mov enterq pop out lods (bad) xchg test push add out rex.RXB negl (bad) xor mov xchg sbbl hlt or rex.X or sub cmp rex.WRB cmp mov push (bad) gs in mov imul mov mov sbb adc ds fimul jb cmp test sbb mov add cmp xor (bad) stc mov movabs adc cli jle popfq es callq data16 mov adc loope lods icebp pop leaveq lods rex.WRXB lods movabs sti jle (bad) (bad) sti in enterq (bad) (bad) (bad) je add mov (bad) mov stc (bad) cs stc fldl sub xor rex.WX movabs lock roll lret jp jmp imul movabs fdivr push xchg pushq and (bad) pop xchg rex.WRB mov imul insb nop add out rex.WRB lret mov xor lret (bad) (bad) cmp out rex.RX mov mov pop pop int3 lea jmpq pop pushq mov xchg cmp pop cmp add mov data16 jmp sbb cli push jge mov (bad) sbb xchg (bad) pushq lods adc movabs add in retq leaveq pushfq ja clc in rex.RX out sbb retq xchg fcoml xchg jb and pop lea xor (bad) ffree jno (bad) jno movsl es xchg pop (bad) jo (bad) (bad) (bad) sti leaveq stos push push retq (bad) (bad) (bad) (bad) pop rex sbb xlat jle (bad) jno rex.RX adc (bad) fimull imul and imul cld test (bad) xchg ja scas ljmp mov addr32 cmp sub rex.WXB mov xchg xor jmpq je sub movzbw test movzbw push adc bts rcr movsbw mov clc jmpq ja and sub shrd add dec mov neg mov cmp cmc cmp cmc repnz jmpq test mov cmp out xor add (bad) rex.WR sbb sub sar (bad) leaveq mov pop pop out std mov xor cmpsb int3 rex.RB fs (bad) mov mov repz mov mov xchg popfq rorb sarb (bad) jrcxz test (bad) (bad) (bad) cld (bad) icebp mov pop (bad) (bad) (bad) inc lods (bad) pushq sub pushq movslq add add lret cmp (bad) jp rex stc stc loop rex.WR jg sbb pop mulb xor adc rex.B rex.RB test sbb or mov add mov test icebp incl cmp push and movzbl mov sub bt sub movzbw movsbl lea jmpq jmpq jb jmpq jae cmp cmp jmpq je cmp test cmp cmc add stc bt clc cmp jmpq jmpq je clc bt clc test sub test cmc jmpq jmpq mov and (bad) (bad) and (bad) xchg mov or pop cltd sbb cltd rex.WRXB test or movabs mov out sbb or xchg jge (bad) pushq nop loop negb sarl lea (bad) jbe scas mov xor sti mov (bad) (bad) (bad) (bad) push pop (bad) mov add mov adc outsb movsl (bad) fnop mov (bad) push jbe callq enterq ss jg lret jb push cmp or lods add repz insl (bad) (bad) (bad) pushq rex.X fs (bad) fdivl and rex.WR fidivl out cmc test push nop xchg rex.X es fstpt test pop js cltd mov popq mov rex.RB lock (bad) mov xor jge xchg imul in (bad) and and lahf test jmp push ds in adc fs test jle (bad) cwtl jb (bad) shrb fsubs (bad) movabs rex.WXB pop mov pop (bad) push (bad) rex.WR mov and or push (bad) (bad) fist insl xlat icebp and (bad) (bad) (bad) sti adc (bad) adc movabs adc rex.RB or or jne (bad) (bad) (bad) decl push cmp rex.WR sub adc stos (bad) xor icebp lahf (bad) (bad) in mov xchg rex.WRXB rex.R rex.WR add repz rex.WX pop xor cmc push es nop ds jge stos test add mov fwait sbb xor (bad) (bad) cmp cli jmpq and cltd pop rex.WB xchg (bad) loop and or je jb push (bad) add cmp stos rex.WRX es movb or (bad) add popfq and movslq rex.WR or fadds xor (bad) in lret scas lods sub rcll (bad) insl sbb (bad) (bad) (bad) cld or int3 mov (bad) (bad) (bad) (bad) fwait imul or lea int repnz test add or loop fxch lahf iret xchg rex.R faddl cmp (bad) mov je notl mov test fmuls mov ja movsb mov sub push jmpq xchg (bad) (bad) (bad) pop repnz mov movabs (bad) rcrb cmpl add (bad) loop adc jnp xor and movsl pop in jle sub ss scas (bad) mov mov cwtl negl movsb rcl je test std jg lods xchg rex.XB jae mov rex.R fs xchg or movsb rex.WRX rex fldt cmp push rex.WB mov cmp mov lahf jp xor and loopne add (bad) (bad) cld adc (bad) (bad) (bad) movabs rex.RX fwait (bad) (bad) jge mov add add and loop jg jne rex.XB cmp mov (bad) mov adc rex.B (bad) jo,pt scas lods mov sarl sahf mov jns lret (bad) cmp sbb mov xchg ja (bad) rex.RXB mov cltd retq (bad) icebp movabs cmp xchg pop mov decb jp cwtl mov es jle psubw fdivs xchg jp pushq (bad) jne insl (bad) (bad) (bad) (bad) lret jp adc clc mov data16 (bad) xchg adc sar (bad) (bad) sti out retq cld add (bad) (bad) (bad) incb xor stos fistpl (bad) rex.RX rex.RX add add pop xchg out std jmpq outsb cmpl rex.WRB (bad) jg jmpq (bad) sarl (bad) retq xchg add rex.R or cmpsb lret xlat jo and mov xchg (bad) and (bad) jmpq callq jmpq jne jmpq add (bad) repz xchg mov cmc adc pop (bad) push rex.X (bad) pushq mov fiadd movabs mov (bad) fnstcw mov xor std (bad) and int rex.RXB mov andb repnz ss sti addr32 sahf rex.X fs shlb cmpsb loop jle (bad) mov rex.WRXB data16 jno (bad) (bad) std outsb mov (bad) (bad) jmpq mov ss fs add fwait callq pop jo ss rex.RX ja out xor add (bad) xchg clc (bad) xchg mov or mov xchg movsl ss hlt stc bt movb cmp stc test jmpq add cli es cmp popfq sub pop jae (bad) movsb in popfq rex.RX (bad) (bad) add out test popfq sub pop data16 and rex.WB and fnsave (bad) adc cmc (bad) pop lret outsl std sbb jp xor data16 in rex.WRB (bad) stos rclb (bad) mov (bad) (bad) std or std (bad) pop xor sbb add pushfq rex.X adc std cmp mov rex.B or push pop mov add add or imul and cmp ficoml je mov fs fmul push roll xchg adc mov pop fdiv test outsb xchg add or cmc jrcxz lea movslq mov adc rol stos popfq mov xchg push in mov (bad) cmc nop in incl out fucom in (bad) callq test test cmp jnp jae stc cmp jle jae clc jmpq cmp cmc cmc test jmpq outsl jrcxz sti xchg (bad) ds pushq pop xchg xor xchg rex.WX jl or (bad) insb scas std loope rex.WX sub adc jmp (bad) imul jmp pushfq rex.RB (bad) iret (bad) xor repz ja mov and (bad) lahf mov out and rex.XB scas fmull sub (bad) (bad) (bad) (bad) cld movsb movabs xor retq cmpsl cltd mov (bad) xor (bad) mov ja jge cmp cs xor push xchg add sub sub shrb rex.WXB (bad) push jle icebp lahf cmp ja subb push push rex.R jrcxz roll negl jbe push in fist jl xor (bad) xchg mov xchg paddsw and add or test sub sbb bt bsf add bsf bsf shrd mov bt cmp mov jmpq jp rolb jbe mov adc (bad) (bad) rex.WB pop add stos movabs xchg pop adc or push in adc add and fidivr loop xchg sbb int3 mov in pop test test jge push sbb xor lret outsb jo lods cmp cmpl movslq (bad) or mov (bad) jo (bad) (bad) and cmp callq (bad) cmpsb (bad) xor (bad) (bad) sti mov (bad) (bad) decb (bad) ds add add or orl test push (bad) adc ds pop (bad) movabs cmp jbe leaveq mov and mov jb xor mov xchg (bad) xchg push ss rex.R (bad) or jle stos pop xor fwait sar sbb movabs rex.RB cmc fisttpl jp int3 scas add pop add jb fidivr mov jle outsb adc movabs imul movslq int3 pushq in adc ss xor (bad) (bad) (bad) decb mov (bad) adc fdivrs (bad) and fcoms rex.W cmp lea (bad) adc (bad) (bad) (bad) (bad) (bad) in add xchg rex.RB rex.X add lea xor test cmp scas lods mov jns test rex.RXB cwtl rorb jno xchg rex.X fdivp (bad) test adc mov shlb (bad) cwtl (bad) scas mov push jg mov lods cmp sub cmc ror stc bt stc clc sub clc jmpq sub (bad) (bad) adc jb int3 ljmp cwtl callq sbb fcoms xchg mov lods and rex.RXB fnstsw jo sub adc add stc jle cli xor push xchg cmp in xchg (bad) push ffreep jmpq adc test sub loope fildll adc sbb clc xchg out adc mov add (bad) (bad) (bad) (bad) xchg add retq mov stos jge mov js add add add sbb xchg sti (bad) test sbb popfq mov iret pop rcll (bad) rex.WRXB pop lock negb add jle adc je mov sub sub loop icebp (bad) jmpq je not not inc push stc rcl mov bsr inc sub jmpq sub stc test repnz jmpq shrd add dec mov jmpq ja mov shr sub lea bt btr add lea shld rex.W notl (bad) lock xor dec and mov clc bt cmc clc repnz jg jne cmp bt movb jmpq jne bt bt cmc jmpq cmpb jmpq and jl mov mov stos adc cmp movsl sbb (bad) (bad) cmp or (bad) xchg rex.WRB add loopne xchg (bad) out (bad) push movabs jg outsb int3 mov je and sub push xor pop negb (bad) xchg imul cli jmpq cmpsl in (bad) sub movsb cmpsl in pushq ds callq lea mov (bad) cld sbb add loopne (bad) (bad) (bad) lods popfq scas xchg xor xchg mov mov sub adc rex.WR movsb mov mov xor adc cmp xor and jge rex.WR or pop xlat push (bad) (bad) pop (bad) cmp hlt movabs sbbl and rex.WX sub dec mov inc mov mov xor inc rol mov jmpq jmpq adc btr add bts lea mov cmc jmpq test jmpq test cmp jmpq je or seta neg bts add bsr mov stc add cmp bt mov or (bad) icebp (bad) mov test clc jbe cmp cmp jmpq clc stc xor cmp cmp clc repnz jmpq je neg movsbw stc sub push neg rcr mov mov cmp sub lea mov movzbw lea jmpq cmc cmp movsbq lea mov movsbw pop jmpq callq jmpq test bt test bt test jmpq jne sar mov xor bt sub cmp mov cmp test cmc test sub stc bt stc pushq stc cmp jmpq ja jae jmpq (bad) rex.R jmp sbb (bad) or imul movabs lods sbb stos test adc xchg mov rex.WRX (bad) adc mov and rex.RXB fisubr (bad) loop out fldenv std retq fist mov jle mov test push popfq pushfq cmpsl push (bad) test lock lahf push push mov out mov stos push add or addr32 cmp or cmp or lods in xchg es imul andl (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb add rex.RXB rcrl int3 lahf (bad) movabs cwtl sbb adc rex.W movslq jmp adc xor sarl sbbl (bad) imul or or sub and lret data16 lret mov xchg gs pushfq jge adc rorb rcl sti add clc stc mov bt cmpb jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq jmpq jmpq jb test jmpq cmp jmpq jmpq jmpq clc clc cmc mov cmc bt mov shld cmp xor sar mov ror and not mov not dec dec push xchg shl mov bt stc rol lea push cmc push sar bt push adc rol bts push rcl push bsf mov stc mov movsbw mov test or jmpq jmpq jne neg jmpq test clc add jmpq jmpq je test sub jmpq jmpq cmovs push jo stos sub imul (bad) vpcomuw movabs divl rex.WX popfq (bad) lock jae xchg ds xchg sti repz adc jg xor repz js xchg adc icebp movabs and int decl es cmp movabs sar (bad) (bad) sti test (bad) (bad) decb (bad) mov (bad) mov add add pushq jo hlt loope sub (bad) jmpq mov repz cmp and je rex xchg rex.RB push adc rex.RXB (bad) pop fisttpll mov lea or movabs or adc xchg and lods callq (bad) xchg idivb hlt notb rex.W (bad) test (bad) inc mov in addr32 icebp rex.XB (bad) xchg imul out lret pop sti jno movabs pushfq and ds int jmp cmp data16 xchg xor out scas add rex.WRX jno mov incb pushq rex.WRB (bad) out rex.WXB (bad) push std and pushfq (bad) (bad) (bad) incl (bad) out pushfq repnz rex.WXB rex.WXB repz mov hlt (bad) push adc lea iret imul imul movsb xchg mov (bad) or movabs (bad) mov test test in decl test mov adc bts ror mov jmpq ja rol (bad) lock lea sub rcl add sar add btr bt mov xor and clc mov cmc repnz jmpq jmpq not jb lods jmpq jb test test cmp jmpq test cmp sub stc jmpq jmpq jae stc bt cmc cmp cmp jmpq jmpq jmpq ja bt jmpq iret and xor sub xchg rex.X test push movabs jbe and movabs lret retq cmp or (bad) rex.W rex.X pop push shlb xchg pop andl out sbb mov popfq (bad) jns pop negl pop or cs insb mov (bad) (bad) (bad) cld (bad) jbe cmc sbb (bad) (bad) callq ds or pop rex.WRB mov rex.X cmpsb push push (bad) int3 add cwtl in rex.WX push sbb rex.RX pause sti out xor (bad) in jl iret movabs rcrl sti callq movabs fnstsw pop jno mov cmp rex.RB sub mov (bad) cltd cmc out movabs add add cmp mov mov insl sbb jbe mov cmp callq mov sahf mov (bad) rex.RX sbb fcompl out jle pop add xchg vandps cmpsb sbb jns pop add pop xor scas iret stos loope fcmovnb adc nop stos cmovo rex.WR ja (bad) (bad) (bad) cld (bad) mov (bad) (bad) (bad) cmpsl pop (bad) (bad) push retq jle (bad) sub jne push xchg test int3 mov pop hlt xchg scas (bad) push rex.WRXB lcall add adc sbb lret (bad) and test (bad) cmp rex.RXB sbb add push cmp sub movsl test (bad) rex.X mov movabs (bad) shr cmc stc cmp jmpq jmpq jmpq mov shl shrd mov jmpq jmpq push rex.W rex.WR push rex.WB cs insb add scas es insl int3 (bad) mov (bad) (bad) pop (bad) sub (bad) rex.WRXB sbb cmp jb rex.WRX pop pop rex.WR decb fisttp rex.RX xor lods or scas lret nop add (bad) adc cmp rcl or (bad) sub cwtl jb adc cmp cmp sub scas add cltd mov xor flds (bad) (bad) add roll (bad) cld imul (bad) (bad) cld (bad) cmp mov mov (bad) jne add add jl push adc or xchg or pushq cltd sub test mov pop jbe test adc retq cmpsl ss out std pop lret pop push divb rex.RXB addr32 jne pop mov movabs icebp jmpq rorb xchg (bad) jmpq jmpq rep lea mov lea movsbw pop jmpq jmpq jmpq outsl insb xor cs insb add jmpq cmp enterq enterq (bad) clc retq lock xlat xchg rex.RX mov xchg in negl fwait xorl (bad) cmp jns in jrcxz test scas jrcxz int xlat jmpq push (bad) lret cltd insb mov ss enterq adc or (bad) push push or add jbe rex.WRB jmpq (bad) cld add mov (bad) (bad) (bad) (bad) xchg loope (bad) jo sahf mov add add add adc lods (bad) iret mov repnz mull sbb callq jae xor (bad) mov adc es mov std addr32 rex.X movslq pushfq mulb insb enterq jno push add mov mov movsb icebp (bad) xor jmpq movsb xor jmpq cmp sbb js mov (bad) test mov jnp (bad) xor faddl jmpq jo pop cmp sti cmpsl xchg movabs (bad) (bad) xchg mov pop cmp pop repnz and rex.WB push lock mov out lahf jno scas int mov jrcxz xchg (bad) (bad) (bad) cld add lret test xchg pop push rex rex.WRXB scas fidivr jl movabs mov rex.WRX jl mov (bad) rex.RXB sub mov push rex.WRX rex.RXB retq add (bad) (bad) mov movslq cmp jle jl cmp divb stos (bad) adc pop (bad) popfq cmc movabs xor rex.XB cs xor adc lahf adc jo xor mov movsl mov movabs adc (bad) (bad) outsl addr32 (bad) cmpsb jl movabs cmp rex.WXB jne add in movabs lods jnp (bad) cmpl mov mov rolb adc sbb add loopne movabs pop cld rex.WRB mov push rex.WB adc adc (bad) (bad) sti std sub (bad) (bad) std (bad) adcb jle adc xchg rex.RB mov jae (bad) mov jg,pn test (bad) movabs jle test fidiv lods (bad) test scas jmpq mov pop sarb and mov callq cmp movslq jo sti and rex.RX pop xor (bad) cmpsb rclb jmpq jmpq setge scas cmp and int (bad) pop subl scas int mov js and int3 clc xchg mov fcmovnb movslq retq jrcxz nop mov loop out (bad) rex.XB sub (bad) and jb mov (bad) insl (bad) push add push (bad) mov enterq repnz jo jae pop rex.WB (bad) jne lock xor sub enterq ja push pushq (bad) xchg (bad) (bad) (bad) sti neg cltd (bad) mov (bad) (bad) decb lods shrb and add add pushq (bad) (bad) mov jrcxz retq imul cld push fmull pop xor scas (bad) popfq cmpsb lret sbb (bad) pop jno xchg (bad) test pop sti cmpsl int3 cld mov test (bad) (bad) jno insb cmp int mov push cmp sub xchg (bad) mov sbb push (bad) xchg xchg rex.WR jrcxz (bad) mov (bad) mov xchg (bad) rex.WB jge subl cmp sub adc (bad) adc or loop loop (bad) (bad) fisubrl lods movabs adc cld rex.RX out (bad) (bad) (bad) sti mov (bad) (bad) (bad) decb mov rex rex.B mov pushq (bad) (bad) dec cs ss adc test xor xor sbb cmpsb add sbb adcb xchg decl gs gs and outsb lret imul movabs push mov sub add movsb outsl stos xchg fldt and in in (bad) scas sbb addl clc jnp xchg adc mov imul adc mov std jae int3 jns movabs cmp nop xor scas push and mov mov (bad) sti cmp (bad) (bad) std lret (bad) push mov cmp retq mov xor repnz jl cmc iret pop sub cld pushfq int3 lock adc (bad) (bad) (bad) mov sti cltd rex.RX xchg pop pop adc cmc pop add mov pushfq (bad) loopne movabs fmulp imul movabs (bad) stos or jae in incl decl retq dec btr mov movsbw mov stc xor cmp test repnz jmpq repnz jmpq neg shrd mov bswap btc rex.W testl rcr add rcl mov test jns test stc sub stc repnz jmpq je bt cmp add stc clc bt clc cmp jmpq test movb cmp clc test jmpq jb clc cmpb jmpq je clc movzbw bsf push btc mov bsf dec neg cmp sub not mov jmpq jmpq je neg btr not jmpq jb bt cmp jmpq (bad) cwtl rex.X add mov jne sahf mov imull sub (bad) mov movsl mov cmp in leaveq add insl rex.B addl addr32 or movsl (bad) sti (bad) rex.WXB int3 lret vmaxps (bad) sbb pushq jne pop (bad) callq ds pop in xor outsl jge and add sti andb pushq adc in mov push sbb lods lret sub jrcxz cmc maxps addr32 cmp imul insb sbb jnp pop sbb fs mov pop jne (bad) (bad) (bad) (bad) ds cmp (bad) (bad) std pop (bad) add pop in rex.WR scas cmpsb sub (bad) (bad) (bad) (bad) (bad) sti loopne or loopne (bad) (bad) (bad) mov xor fnstenv (bad) (bad) mov movsb in cmc (bad) mov jae (bad) jnp test (bad) cmpsl addl rex.WRB sbb mov (bad) rex.WR add mov rex.WRXB movabs test or pushfq or adc imul and stos sub sahf fidivr movsl jle mov (bad) test adc xlat (bad) adc sub data16 lret mov add (bad) je sbbb jne jno (bad) (bad) pop cltd add mov test es mov cmp rol or fidiv sbb rex.B push rex.WB (bad) mov lods cs or lea icebp decl (bad) and (bad) (bad) cmp jno cmpb jnp jmpq stc jmpq pop cwtl (bad) mov lret movabs test and popfq repz jle xor fsubrp xchg (bad) mov pop mov shr mov (bad) popfq jp je mov push icebp out stos cld ds (bad) emms xlat sub ja adc out cmpsb int (bad) jge push pop sbb jnp movsb and cwtl add (bad) sub rex.B enterq lods lret stos movsb fisubrl mov xchg imul sub out jb xor mov mov (bad) (bad) cld add fidivl (bad) (bad) (bad) (bad) xchg out test lods rex.WR ss sbbl (bad) add add adc stos (bad) pushfq loope fstpt (bad) insl (bad) cmp push test movslq mov loop ficompl packuswb int imul (bad) clc clc pushq (bad) lods fldcw ss out mov rex.WRXB cmp or movabs xchg enterq (bad) mov jae hlt mov jp pop xor adc jnp fisttpl pop mov xor mov sub (bad) mov mov xchg (bad) je jle shll or gs popfq out mov rex.RX movabs and pushq jae (bad) (bad) enterq mov mov addr32 (bad) icebp jg scas pop mov jne adc and (bad) jae rex.WR insl mov (bad) stos add (bad) (bad) push rex.WRX sub (bad) rex.WX rex.XB adc mov adcl xchg jg rex hlt rex.X add cmp (bad) scas adc lods jl or stc mov scas adc mov fisubrl adc jmpq rex.X imul cmpsb mov jno rex.WR js ja (bad) xchg movsl rex xchg out rex.WR lock movsb movabs enterq sbb (bad) rex.WRXB mov jge (bad) mov (bad) pop out stos (bad) cmpsl mov mov (bad) (bad) (bad) (bad) cld roll xchg xchg push mov fisttpll in rorl retq xorb add jnp jl and or add add add push mov sbb repnz (bad) push jge scas std pop rex.XB stos rex.R sub (bad) pushq adc xchg test sti fsts in retq mov scas fldt jmpq xor cmp stc test neg cmc bt add cmc std cmp popfw jmpq jmpq jne inc add xor xor or mov stc add or add add mov mov stc clc bt stc test jmpq stc clc movzwl cmc mov cmp clc add jmpq mov jmpq neg movzbl test xor test cmc stc test add jmpq clc add jmpq push jmpq jmpq jne adc neg mov bt and jmpq jmpq jmpq cwtl cmp cmc cltq cmp stc sub jmpq stc clc stc sub bt stc stc imul jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq push jmpq rcr and bt dec xor bsf shld data16 icebp (bad) (bad) cmc add jmpq popq jmpq jmpq dec jmpq push jmpq mov jmpq push jmpq shl movzbw neg mov bt cmp shrd add jmpq mov jmpq jmpq jmpq pushfq jmpq je stc stc clc bt addl cmc cmc sub clc jmpq jmpq pushfq jmpq push jmpq shrd bts or rcr mov mov add jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq push jmpq push jmpq cmc ror cmp bt cmc stc add jmpq jmpq jle not jmpq mov jmpq seto push mov movsbw mov jmpq jns mov jmpq push jg push jmpq pushfq jmpq bt sub clc cmp shr jmpq mov jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq shr sub movsbq jmpq rcl mov add (bad) lock jmpq jmpq jmpq dec jmpq jl popq jmpq pushfq jmpq push jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq mov jmpq push jmpq push jmpq push jmpq inc stc clc clc cmc ror cmc clc bt jmpq push jmpq mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq push jmpq cmc test cmp jmpq push jmpq test add jmpq jmpq jmpq bt jmpq jmpq xadd mov lea mov clc add jmpq jmpq mov jmpq jmpq cmp bt add jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq pushfq jmpq jmpq push jmpq mov jmpq jmpq jne jne mov jmpq jmpq jmpq mov jmpq popq jmpq jmpq jmpq mov jmpq pop cmp cltq cmp jmpq jbe push jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq mov jmpq mov bt test bt add ja callq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq pushfq jge popq jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq jmpq popq jmpq pushfq jmpq cmc shl jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq push jmpq je cmp bt stc clc cmp jmpq movsbq not setae seta mov jmpq mov jo mov jmpq push jmpq stc xor jmpq mov jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq push jmpq xor cmp stc bt sub jmpq jmpq popq jmpq pushfq jmpq push jmpq push jmpq mov movsbq mov jmpq test xor xadd mov clc dec mov jo cmp cmp sub jmpq add jmpq mov jmpq push jmpq add btr mov shr setns mov clc sub jle divl jmpq jmpq jmpq jmpq es mov jmpq jmpq jmpq jmpq jmpq push jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq pushfq jno popq jmpq stc clc clc add jmpq jmpq jmpq clc mul jmpq jmpq push jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq popq jmpq push jmpq jmpq movsbw push jmpq add xchg not mov cmp (bad) hlt adc mov test jmpq push jmpq popq jmpq jmpq popq jmpq push jmpq jmpq push jmpq push jmpq push jmpq jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq mov jmpq push jmpq popq jmpq jmpq popq jmpq push jmpq jmpq mov mov jb mov jg mov jmpq popq jmpq push jmpq stc jmpq push jmpq push jmpq rol not sbb mov mov cmp cmp sub jmpq push jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq jmpq push jmpq popq jmpq jl push jmpq jmpq dec bt lea cmc clc clc xor test sub jmpq seto pop lea lea lea pop retq pushfq jmpq pushfq jo popq jmpq jmpq jmpq bt cmp clc sub jmpq jmpq mov jmpq push jmpq mov jmpq cmpl jmpq push jmpq mov jmpq sub bt clc shr jmpq mov xor test btr shr lea jmpq push jmpq push jmpq je clc stc bt test sub test cmc cmp cmp jmpq push jmpq pop retq push jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq jmpq popq jmpq jmpq jmpq jmpq jmpq push jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq popq jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq cmc not clc cmp cmc test add cmc cmp stc add cmp test clc xor jmpq jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq push jb push jmpq jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq jmpq push jmpq js push jmpq jmpq mov jmpq stc stc cmp stc sub jmpq jmpq xor jmpq jmpq jmpq push jmpq mov jmpq jmpq push jmpq lea lea dec mov not jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq pushfq jmpq push jmpq jmpq jmpq bt jmpq push jmpq push jmpq jns push jmpq jmpq push jmpq add cmp movzbl mov jmpq jmpq jmpq push jmpq mov jmpq push jge push jmpq divq jmpq jmpq jmpq decl jmpq bsr and rol lea cmp bt jmpq cld cld jmpq sbb dec mov rcr mov cmp stc sub jmpq jmpq bsf inc mov shl mov cmc test sub bt jmpq push jmpq push jmpq mov jmpq cmp not mov test jp test bt sub jmpq stc sub jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq push jmpq jmpq cmp jmpq jmpq push jge push jmpq mov jmpq jmpq push jmpq push jmpq mov jmpq jmpq xadd adc jmpq push jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq jmpq jne je clc cmc cmc jmpq popq jmpq jmpq push jmpq push jmpq shrd bts jmpq rol mov jo xor jmpq lea jmpq push jmpq jmpq lea push jmpq pop bswap mov mov pop bswap mov jmpq movzbw pop jmpq push jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq push movzbw cmp or sub and jmpq add jmpq push jmpq push jmpq mov jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq jmpq push jmpq mov stc cmp bt sub cmp movl clc or jmpq clc add jmpq jmpq cmc cmc bt imul jmpq mov jne pushfq jmpq push jmpq push jmpq jmpq jmpq jmpq clc and jmpq jmpq push jmpq jmpq jmpq mov clc mov stc bt sub jmpq sar mov cmp cmp stc add jmpq jmpq push jmpq mov jmpq add jmpq jmpq shld jmpq jmpq jmpq bsf mov bt stc jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq xchg bt stc bt cmc cmp jmpq jmpq je setne jmpq mov jmpq jmpq jmpq jmpq mov jmpq push jmpq pushfq jmpq jmpq pushfq jmpq rol btr bt mov stc clc xchg stc xor jmpq not jmpq push jmpq shr movzbl dec clc add bswap jmpq jmpq jmpq sub jmpq not jmpq push jmpq mov jmpq push jmpq push jmpq jmpq jmpq push jbe push jmpq mov jmpq mov jmpq jmpq jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq push jmpq jmpq add jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq divl jmpq jmpq jmpq jmpq jmpq push jmpq sub jmpq push jmpq mov jmpq bswap pop movsbq not pop xchg not not pop bswap movzbw jmpq pushfq jmpq popq jmpq jp popq jmpq jmpq jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq push jmpq stc bswap stc bt test test sub bt ror jmpq push jmpq jmpq jmpq stc cmp xor cmc cmc cmc stc sub jmpq jmpq jmpq jmpq push jmpq pushfq jmpq mov jmpq push jmpq test jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq js mov jmpq mov jmpq jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq push jmpq jmpq jmpq push jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq mov std jmpq jmpq cmp test cmc sub js mov jmpq push jmpq push jmpq jmpq bt clc stc stc xor jmpq jmpq jmpq callq mov jmpq jmpq jmpq push jmpq jmpq bt add jmpq jmpq jmpq jmpq lea jmpq push jmpq ja jne je jmpq dec test jmpq push jmpq mov jmpq push jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq jmpq add jmpq jmpq mov jmpq push jmpq jmpq add ror mov cmc sub jmpq pushfq jmpq jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq mov stc cmp sub bt movl clc or jmpq jmpq movsbq btr and sbb jmpq mov jmpq jmpq push jmpq jmpq jmpq mov jmpq push jmpq jge popq jmpq push jmpq jmpq jmpq mov lea std std push movsbw jmpq push jmpq jmpq push jmpq jmpq mov jmpq jmpq mov jmpq movsbw lea shr stc mov jmpq jmpq push jmpq popq jmpq jmpq test jbe bt add jmpq jmpq push jmpq push jmpq jmpq movzbw bswap mov jmpq mov jmpq jmpq popq jmpq jmpq clc test sub clc bt cmc stc shr jmpq push jmpq pushfq jmpq movzbl jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq push jmpq push jmpq dec jmpq bswap movzbl pop lea bswap xchg pop lea not bswap jmpq push jmpq push jmpq jmpq mov jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq not jmpq jmpq push jmpq jmpq je test bt cmc bt cmp jmpq push jmpq inc jmpq jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq push jmpq jmpq lea inc rcl jmpq push jmpq jmpq jmpq push jmpq lea mov jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq push jmpq bswap mov cmp mov jmpq jmpq jmpq push jmpq jmpq jmpq jmpq test clc add jno not jmpq push jmpq bt cmc btc mov cmc jmpq push jmpq (bad) hlt (bad) test rdtsc clc cmc sub jmpq push jmpq jmpq jmpq jmpq jmpq jmpq clc bt cmc cmc sub jmpq jmpq not jmpq div jmpq pushfq jmpq jmpq bswap cmc shld sar mov test sub jmpq jmpq push jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq lea jmpq mov jmpq jmpq push jmpq je movzbw jmpq jmpq cmp cmc cmp sub cmc jmpq jmpq jmpq mov jmpq jmpq push jmpq mov jmpq jb lea jmpq push jmpq push jmpq jmpq jmpq jmpq pushq setnp movsbw jmpq jmpq jmpq jmpq jmpq pushfq jmpq push jp push jmpq jmpq mov jmpq push jmpq popq jmpq cmc xor cmp cmp jmpq push jmpq jmpq jmpq push jmpq push jne push jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq rcl movsbw clc mov add jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq push jmpq push jmpq mov jmpq mov jmpq inc stc bt ror jmpq push je push jmpq mov jmpq jmpq push jb push jmpq mov jmpq neg lahf sar not mov cmc test xchg jmpq push jmpq jmpq cmc bt clc mov jmpq mov jbe mov jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq popq jmpq push jmpq mov jmpq push jmpq rcl add and sub mov jmpq jmpq mov jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq jmpq push jmpq imul jmpq push jmpq mov jmpq push jne push jmpq mov jmpq jmpq mov jmpq clc jae add jmpq popq jmpq jmpq jmpq jmpq shrd cmp ror clc mov cmp add jmpq push jmpq callq jmpq jmpq jle pushfq jmpq push jmpq mov clc and test cmp jmpq jmpq jmpq popq jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq jmpq jmpq jmpq jmpq mov jmpq jne push jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq pushfq jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq mov jmpq jmpq lea jmpq pushfq jmpq push jmpq jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq add test cmc jmpq rcl stc btr mov cmp test add jmpq push jmpq jmpq push jmpq jmpq push jmpq ja push jmpq push jmpq jmpq push jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq pushfq jmpq jmpq rol rcl clc mov cmc clc jmpq popq jmpq jne lea xorb jmpq jmpq test sub stc stc cmp cmp shl jmpq jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq jmpq jmpq lea jmpq mov jmpq mov jmpq jmpq mov jmpq cmp cwtl cmc cltq jle sub jmpq jmpq jmpq pushfq jmpq jmpq imul jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq push jmpq mov lea mov jmpq jmpq bsf xor bt mov jmpq xadd ror mov jno bts neg mov jmpq push jmpq jmpq jmpq push jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq push jmpq push jmpq cmc cmp add cmp test bt jmpq jmpq jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq push jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq push jmpq dec jmpq mov jmpq jo pushfq jmpq popq jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq cmp sub jmpq jmpq add jmpq jmpq mov not not mov jmpq mov jmpq push je push jmpq jmpq jmpq popq jmpq clc add jmpq push jmpq popq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq pushfq jmpq mov jmpq jns popq jmpq je cmc bt jmpq popq jmpq push jmpq mov jmpq push jmpq jmpq jmpq jmpq mov jmpq push jmpq push jmpq pushfq jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jae push jmpq popq jmpq push jmpq push jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq push jmpq inc cmc lea bt clc bt not jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq jmpq not mov setle mov jmpq push jmpq jmpq mov jmpq push jmpq sub jmpq push jmpq jmpq jmpq push js push jmpq push jmpq jmpq jmpq jmpq push jne push jg push jmpq pushfq jmpq jmpq clc bt add cmc cmc cmp mov jmpq lea lea lea jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq mov jmpq jmpq mov jmpq ja jmpq pushfq jmpq mov jmpq jmpq jmpq jmpq pop jmpq jmpq pop not jmpq mov jmpq cmc mov jmpq push jmpq bswap mov jmpq seto pop movsbw movsbw pop not jmpq not lea push setns not mov push not lea push dec jmpq jg push jmpq jmpq mov jmpq push jmpq clc sub jmpq mov jmpq push jmpq jmpq not jmpq push jmpq push jmpq cmc cmp jae jne sbb setae and xorb sete bswap pop jmpq push jmpq je lea mov jmpq jmpq add jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq push jmpq dec bt bt cmp lea cmc clc stc xor test sub jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq dec or movzbl bt not xor cmc rcr sub jmpq jmpq jmpq jne pushfq jmpq jmpq je test cmc stc cmp cmp jmpq jmpq cmp jmpq bt sub jmpq jmpq push jmpq jmpq mov jmpq push jmpq push jmpq movzbw mov mov mov jg sub stc imul jmpq push jmpq jmpq jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq jmpq jne shl mov xor movzbl mov cmp cmp jmpq jmpq push jmpq mov jmpq jmpq cmc add jmpq cmc cmc stc and jmpq popq jmpq jmpq push jmpq push jmpq mov pushfq mov push cld mov jmpq jb mov jmpq popq jmpq mov jmpq jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq push jmpq push jmpq mov jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq clc shr jmpq jmpq jmpq popq jmpq push jmpq jmpq je jmpq jae push jmpq jmpq push jmpq push jmpq push jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq cld cld jmpq jno popq jmpq push jmpq ror cmc add jmpq push jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq jmpq push jmpq push jmpq lea stc stc stc jmpq jmpq jmpq push jmpq jmpq push jmpq inc test clc neg jmpq jmpq mov jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq jmpq jmpq push jmpq jmpq jmpq lea shl shr mov clc add mov cmp cmp bt jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq push jmpq jmpq jmpq jmpq cmc test jmpq push jmpq push jmpq jmpq cmp jmpq push jmpq push jmpq lea dec movsbw bt jmpq rol jmpq not jmpq jmpq jmpq push jmpq test sub test shl jmpq jmpq jmpq mov jmpq bt mov stc cmc cmp sub test add jmpq clc sub jns bt sub jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq cmc cmp sub jle mov jle lea jmpq jmpq jmpq popq jmpq sub jmpq push jmpq jmpq push jmpq jmpq push jmpq pushfq jmpq push jmpq push jmpq jmpq popq jmpq jmpq mov jmpq jmpq jmpq mov jmpq popq jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq movzbq movzbw rcl cmc rcr mov jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq xadd cmc mov sbb mov shr and mov clc jmpq push jmpq mov jmpq mov jmpq je clc bt clc test addl cmp cmp sub cmc stc jmpq jmpq bt test add jmpq jmpq push jmpq jmpq popq jmpq jmpq jmpq push jmpq push jmpq push jmpq test bt and jmpq push jmpq jne movsbw test ror xorb movzbl pop jmpq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq lea jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq push jmpq jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq jmpq jmpq mov jmpq jmpq popq jmpq jmpq push jmpq jmpq mov jmpq stc sub jb mov jmpq mov jmpq push jmpq sub bt clc stc bt imul jmpq jmpq push jmpq xorb not lea lea pop jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq popq jmpq movzbw mov not mov jmpq jns sub jmpq jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq mov jmpq jmpq test add jmpq jmpq jmpq mov jmpq jmpq or pop shrd shl popfq lea pop bswap pop jmpq add bt test bt xor test cmc stc test cwtl cmc cltq bt sub jmpq popq jmpq jmpq jmpq jmpq rep shld pop shld clc btc cld pop std std popfq jmpq push jmpq jmpq cwtd mov sbb dec test movzbw mov jmpq mov jmpq jnp mov jno mov jmpq push jmpq jmpq push jmpq jmpq popq jmpq jmpq add add cmp add add push add rolb add rolb add sarb add add add add xor add (bad) jb add adc add add pop add xchg xor add sub add sar add rol add sar add and add and pop add movabs add xor add rolb add addb rol add (bad) rex.R add and push add loopne push add (bad) (bad) pop add (bad) mov add (bad) and add movabs in add loopne pop add rex push add orb xor add loopne pop add (bad) (bad) pop add rex push add (bad) sahf push add rolb add (bad) xor xor add loopne push add movabs pop pop add and push add orb xor add (bad) insl push add rex push add and add rex rex.RXB add loopne push add (bad) std push add add add push add and add rex add and push add and push add movabs or add movabs callq add rorb add rex push add (bad) mov add sarb add pop add rolb add add push add movabs sub add add add add rex.WX add add add push add add add andb add push add (bad) std push add loopne push add adc add add retq pop add rorb xor add loopne pop add (bad) xor xor add rorb xor add add push add sbbb xor add sar add (bad) insl push add (bad) xor xor add (bad) notb xor add adc add add mov xor add add add and pop add loopne push add loopne pop add shlb add and push add adc add addb add add add add add add xor add and push add orb xor add loopne push add and pop add addb add (bad) push add and add and pop add and add and push add rex push add and push add movabs or add adc add movabs scas push add (bad) and add rcrb add push add loopne pop add (bad) mov add and add addb and pop add rex xor add add pop add orb xor add add pop add (bad) sahf push add and add (bad) (bad) pop add movabs mov add (bad) std push add add pop add and add loopne pop add sar add and add add push add rex rex.RXB add movabs rex.WRX add rex push add rcrl xor add rol add (bad) (bad) pop add sbbb add rcrb add pop add sbbb xor add and add rex rex.RXB add loopne push add and add (bad) std push add add add and pop add movabs or add and add and add rex add sbbb add (bad) insl push add and push add rorb add sbbb xor add movabs xor xor add rcrb add adc xor add loopne push add add push add rolb add loopne push add subb add jne add sarb add pop add (bad) notb xor add (bad) xor xor add orb xor add (bad) (bad) pop add or add sarb add add add pop add and add rcrl xor add movabs test xor add or add and add or add shr add add pop add movabs mov add subb add or add adc add rolb add shlb add rex xor add sub add rex push add sarb add mov add movabs out add sbbb add subb add xor xor add and push add (bad) and add sub add loopne pop add sbbb add rolb add (bad) std push add and add and add sarb add push push add and add add pop add subb add pop add rol add adc add and push add sbbb add and pop add sub add and push add movabs insl push add and pop add or add xchg xor add loopne pop add loopne push add sbbb xor add add add (bad) push add adc add andb add add add callq add xchg xor add sbbb add (bad) (bad) jmpq pushfq jmpq mov jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq jmpq jmpq popq jmpq push jmpq jmpq clc cmc sub jmpq pushfq jmpq clc clc bt sub jmpq jmpq push jmpq lea movzbw movsbw mov jmpq cmp jmpq cmp jmpq push jmpq mov jmpq jmpq jmpq push jmpq push jmpq cmc add clc jmpq shld mov cmc cmp bt cmc sub jmpq push jmpq jmpq push jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq push jmpq movzbq movsbw push movzbw movabs jmpq jmpq mov jmpq push jmpq popq jmpq jmpq jmpq sub jmpq jle mov jmpq push jmpq jmpq jmpq popq jmpq bswap movzbw mov jmpq jmpq lea jmpq push jmpq jmpq pushfq jmpq jmpq mov jmpq not jmpq jno pushfq jmpq dec cmc clc bt xor jmpq addl bt push bt test stc clc sub jmpq jmpq jne stc sete jmpq jmpq jmpq push jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq push jmpq mov jmpq mov jmpq clc test stc jmpq je setae not movsbw mov jmpq jmpq jmpq mov jmpq push je push jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq push jmpq push jmpq popq jmpq mov jmpq push jmpq mov jmpq push jmpq jne inc jmpq jmpq popq jmpq jmpq lea jmpq pushfq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq cmp jmpq not seta mov jmpq jmpq jmpq jmpq pushfq jmpq or mov cmc inc rcr mov test jmpq jmpq mov jmpq add jg mov jmpq jmpq cmc bt bt sub jmpq jmpq callq movzbw movsbw jmpq push jmpq pushfq jge popq jmpq pushfq jmpq jmpq push jmpq lea jmpq jmpq jbe btc rcl lea stc lea test bt bt cmp test jmpq mov test rol movzbl cmc jmpq mov jmpq jmpq push jmpq cpuid clc stc sub cmc jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jle pushfq jmpq push jmpq cmp sub test test xchg test stc stc cmp jmpq mov jmpq inc stc cmp cmp neg stc clc sub bt add cmp js bt sub jbe mov jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq jmpq jmpq pushfq jmpq sub inc mov cmp test add jmpq jmpq push jmpq cmc cmp jmpq push jmpq jns popq jmpq push jmpq pushfq jmpq jmpq push jmpq jmpq push jmpq popq jmpq jmpq cmc mov test mov shld mov stc cmp jmpq jmpq push jmpq popq jmpq jmpq jmpq jmpq jmpq push jp push jmpq or neg bts mov shr jmpq jmpq push jmpq jmpq push jmpq jmpq mov jmpq jmpq jmpq push jmpq push jae push jmpq push jmpq je stc cmp jmpq 