add add dec add add add add add add add add push dec add xor pop add subl dec outsl adc js xor jle sub add add incb adc add jae add or push add or sub add push sub add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add push add add add and add add add push add insb add or jle sub add add incb pop add push jae add or push add or sub add push sub add jae add push and or or mov add sub add outsl insb add or pop sub add sub pop add push outsl imul add or sbb cltd add or push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add push add add add push add add add pop sub mov pop add push add add or xchg add sub push sub pop sub pop sub add or push sub add or inc add pop add push outsl push add sub add or (bad) jle add add sub add or jb or jo add and add outsl xchg add or add or jle add add sbb add add push add sub push sub add or add andb add lds add sub and push add movb or pop sub add outsl movl sub add outsl enter sub sub add sub add into add or jle,pn add add iret add or jle,pn add add rolb add sub jle add add roll add sub jle add add rolb add sub jle add add roll add sub jae add or jae add or jae add or jae add or jae add or sub (bad) push or add outsl in add add adc sub add lds add sub add sub out add sub add out add sub rorb add add and add sub add call bound add add add add add jge add add jnp add add bound add add add add add jge add add jnp add add bound add add add add add jge add add jnp add add xchg add jnp add add sbb sub jb or jo jmp add jl add add add xchg add jnp add add sbb sub jb or jo jmp add jl add add push add sub xchg add jnp add add sbb sub jb or jo jmp add jl add add pop add sub rorb add add and add sub add adc sub ljmp add sub add sub add jle add or jle sub add add incb test add jae add or push add or sub add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add push add add add and add add add add sbb add and add add add add add add add or jnp add add pop add or or add and add fsubrl add add adc add add add sbb or add add xor add add add add adc incb adc sbb add add add pop sub pop push outsl and add add jge add add jnp add add pop sub pop push outsl and add sub adc add add add adc add add sub add or add or add add or add add add add or push add push add add or or add add add or or add add add or adc add add add or or add add add or push add push add add or adc add add add add outsl sub add add add sub add add sub add add add add sbb add or sub add push outsl sub and add jae add or add or add add add outsl sub and add add outsl das add or add add add outsl xor add add add push outsl xor add add add add outsl xor add add pop add push pop push outsl xor add add add add outsl xor add add or add pop pop outsl xor add add add add outsl xor add add adc add pop sbb add or sub add push outsl xor add add or add pop sbb add or sub add push outsl xor add add or sbb add or sub add push outsl xor add add sldt push pop sbb add or sub add push sbb add or sub add push pop or or add or add or sub add push jb add jo xor sub add push sbb add or sub add push outsl aaa add or and add inc jae add or add or add add add outsl aaa add or and add inc jae add or add or add add add outsl aaa add or and add inc jae add or add or add add add outsl aaa add or and add inc jae add or add or add add add outsl aaa add or and add jae add or add or add add add outsl aaa add or and add inc jae add or add or add add add and add and add add add or add or sub add push push outsl cmp add add add outsl xor add add add jb add jo cmp inc add add add or sub sbb add or add or sub dec add jo xor sub add push add add outsl aas add or sub leave add add sbb add jae add or add or sub outsl inc add or sub outsl inc add or sub outsl inc add or sub add push sbb add or sub add push and add add jae add or add or sub add push sbb sbb jae add or add or sub add push push pop adc add or add or sub add push jb add jo xor sub add push and adc add or add or sub add push push outsl cmp add add pop add push jb add jo inc add or sub add push pop adc add or sub add push sbb add or sub add push and add add sbb xor add outsl xor add add or add sbb sbb jae add or add or sub add push push pop adc add or add or sub add push jb add jo xor sub add push and adc add or add or sub add push push outsl cmp add add or add jb add jo inc add or sub add push pop adc add or sub add push sbb add or sub add push and add add cmp add or add or sub add push sbb sbb jae add or add or sub add push push pop adc add or add or sub add push jb add jo xor sub add push and adc add or add or sub add push push outsl cmp add add adc add jb add jo inc add or sub add push pop adc add or sub add push sbb add or sub add push and add add push jae add or add or sub add push sbb sbb jae add or add or sub add push push pop adc add or add or sub add push jb add jo xor sub add push and adc add or add or sub add push push outsl cmp add add or add jb add jo inc add or sub add push pop adc add or sub dec add or add or sub outsl xor add add or aad add pop jae xor add outsl xor add add or sbb sbb add or add or sub outsl dec add or sub push add jo xor sub outsl dec add or sub outsl dec add or sub sahf add add mov add jae add or add or sub outsl cmp add add or outsl dec add or sub add push pop or add or sub add push sbb add or sub add push and add add add add jae add or add or sub add push jb add jo xor sub add push pop dec pop sbb add or add or sub add push push outsl cmp add add sldt push jb add jo push add or and add inc and add jae add or push add or pop sub add add push add or add or add sldt push sub add add mov add and add add add or push add or sub add add add add outsl pop add or sbb pop add or push sub add add sub or jb add jo xor pop or add or pop add or push sub add add sub add add add jo popa add or sub add push push outsl bound add add add add outsl arpl add add add add or push sub add sub adc add movsl add add add adc pop add push outsl add or add or add jo sub add sub sub add outsl add or add or sub push outsl add or add or imul jb add jo sub add outsl popa add or sub add push jb add jo inc add or sub add push jb add jo inc add or sub add push jb add jo inc add or sub add push jb add jo inc add or sub addl jo imul or add add xor xor add add add jae add or outsl xor add pop or add or add or and add outsl jne add add add push outsl jne add jae add or add or outsl xor add pop or add or outsl xor add pop adc jae add and add add or outsl xor add pop push outsl jae add and jo jns add add add push pop sub add or add jae add or add add push pop xor add or jb add jo jnp add outsl jl add push outsl jge add add add push outsl jne add outsl jle add add add push pop push outsl jae add push add add push outsl jne add outsl jg add push add add push outsl jne add outsl addb or outsl addl xor add pop outsl jae add jb add jo outsl sub add outsl jne add sub adc addl or jb add jo adc addl or sub xor mov add add and pop ds add insb sub (bad) lea add adc insb sub pop push adc sub adc or or (bad) mov adc pop pop xchg or or pop ss add or add add push or add cmpb adc sub and add add addb add or add cmpb pop sub sub add or add adc and add adc add or cmp add imul add add or add push adc xchg pop ficoml pushf adc imul push adc sub xchg push xor adc add or xchg pushf adc add add aas pop adc xchg push adc adc add add add add add pop ficoml (bad) lea add adc or add or pop xchg or or or (bad) (bad) call wbinvd sub xchg add adc sub adc jle add or mov add adc adc adc sub xor sub push je add sbb push add push sub push sub add adc or movsl add add and pop ds add insb sub (bad) lea add adc insb sub pop push adc sub adc or or (bad) mov adc pop pop xchg or or pop ss add or add add push or add cmpb adc sub and add add addb add or add cmpb pop sub sub add or add adc and add adc add or cmp add imul add add or add push adc xchg pop ficoml pushf adc imul push adc sub xchg push xor adc add or xchg pushf adc add add aas pop adc xchg push adc adc add add add add add pop ficoml (bad) lea add adc or add or pop xchg or or or (bad) (bad) call wbinvd sub xchg add adc sub adc jle add or mov add adc adc adc sub xor sub jae add or push adc mov add lea add add adc lea add sub popl add es outsl nop add or push sub add adc or xchg add push add adc and push ds add add insb sub (bad) lea add or add or sub or pop adc pop (bad) mov adc pop pop xchg pop adc adc ss or add add add cmpb adc sub and add add addb add add add cmpb pop sub sub add test add mov adc and add adc and add adc insb sub or adc sub mov ficoml (bad) lea add adc or add ficoml pushf or adc adc or adc adc test add mov adc and add add add aas pop adc or or ss and add add add add add or (bad) lea add or or pop xchg or or or adcl add or add or movntps adc jle add or mov add adc adc adc sub xor sub sbb add adc sahf add jo lea add add add add sub sub adc push add add add add adc and pop ds insb sub (bad) lea add adc insb sub pop push adc sub adc or or (bad) mov adc pop pop xchg or or pop ss add or add add push or add cmpb adc sub and add add addb add or add cmpb pop sub sub add or add adc and add adc add or cmp add imul add add or add push adc xchg pop ficoml pushf adc imul push adc sub xchg push xor adc add or xchg pushf adc add add aas pop adc xchg push adc adc add add add add add pop ficoml (bad) lea add adc or add or pop xchg or or or (bad) (bad) call wbinvd sub xchg add adc sub adc jle add or mov add adc adc adc sub xor cmp add or adc adc add jo xchg add or adc add jo xchg add or adc add jo xchg add or adc add jo xchg add or adc add jo xchg add or add jo add add sub add or add or add or lea add and outsl xchg add or pop outsl xchg add or sbb add or sbb add or sbb add or or add or push sub adc push add add add adc or fwait add add or push add adc add mov (bad) lea add adc adc add mov or adc sub adc adc adc pop (bad) mov adc pop pop xchg or or or jmp test add mov (bad) lea add adc adc aas pop adc sub and add add addb pop adc adc adc aas pop pop sub sub pop sub adc and add adc and add adc adc add mov or adc add push mov ficoml (bad) lea add adc adc adc adc pushf adc mov fidivl sub xchg push xor adc adc sub push adc xchg pushf adc and add add add aas pop adc adc pop pop xchg adc adc (bad) int adc adc mov ficoml (bad) lea add adc adc adc adc or inc ja (bad) call adc add or add or adc push adc jle add or mov add adc adc adc sub xor pop adc and add cwtl add or add add adc sub (bad) lea add adc test add mov sbb adc sub adc pop (bad) mov adc pop pop xchg sbb sbb sbb jmp test add mov (bad) lea add adc adc add cmpb adc sub and add add addb push adc adc adc add cmpb pop sub sub push sub adc and add adc and add adc adc sub sbb adc addb add adc pop (bad) lea add adc adc pop ficoml pushf adc mov push push adc sub xchg push xor adc add or xchg pushf adc and add add add aas pop adc adc pop pop xchg pop adc adc ss adc adc pop (bad) lea add adc adc pop xchg sbb sbb sbb (bad) (bad) call and adc xchg add jle add or and push adc jle add or mov add adc adc adc sub xor sub mov fmuls mov adc sub add and mov add and mov xchg or and mov xchg popa add and (bad) add and add add and add add pushf adc adc and das les or sub xor add add add add outsl sub add outsl lcall add push outsl lcall add push outsl lcall add push outsl lcall add push outsl lcall add push push outsl jae add sub xor add add add add add sub add add add or jnp add add pop add or or add and add fsubrl add add adc add add add sbb or add add xor add add adc sbb add sub add add sub add or add or add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add or add push add add push outsl sub add add add push outsl sub add add add push outsl sub add add sub add add add push pop outsl lahf add or outsl and add pop adc fwait add add add or add or outsl and add jb add jo xor outsl and add pop ss or or add or outsl and add push outsl cmp add add add push jb add jo inc add or outsl add push pop outsl lahf add or outsl add push pop adc lret add add add or add or outsl add push jb add jo xor outsl add push pop xor or or add or outsl add push pop outsl cmp add add add push jb add jo inc add or outsl sub add pop outsl lahf add or outsl sub add pop adc add add jae add or add or outsl sub add jb add jo xor outsl sub add pop cmp or or add or outsl sub add sbb add or outsl sub add jb add jo inc add or outsl sub add sub dec add or outsl sub add pop pop and xor add outsl xor add add add push jb add jo xor outsl sub add and add add adc cmp add outsl cmp add add add push sbb add or outsl sub add sub dec add or outsl sub add pop pop and add add add or add or outsl sub add jb add jo xor outsl sub add and add add adc cmp add outsl cmp add add add push sbb add or outsl add push and add add loopne add and add add mov dec add or outsl add push pop pop and add add add or add or outsl add push pop outsl dec add or outsl add push jb add jo xor outsl add push and add add add or add or outsl add push sbb add or outsl xor add sub mov outsl xor add sub add or outsl xor add jb add jo add adc sbb jae add or add or outsl xor add sub test outsl xor add and add and add add add or add or outsl xor add jb add jo xor outsl xor add pop pop pop and add or add or outsl xor add sbb cmp add add add push jb add jo push add or outsl xor add push outsl stos add or outsl xor add pop pop and add add add or add or outsl xor add jb add jo xor outsl xor add and or or add or outsl xor add sbb or outsl xor add pop outsl lahf add or outsl xor add jb add jo add sbb pop sbb jae add or add or outsl xor add pop or push add add add or add or outsl xor add jb add jo xor outsl xor add and add add adc add or add or outsl xor add push outsl cmp add add add push jb add jo inc add or outsl add push outsl stos add or lea add and add push mov cmp add mov or outsl add push push push jae add or add or outsl add push jb add add or outsl add push and add add sbb add or add or outsl add push pop or add or outsl add push jb add add or outsl cmp add outsl scas add or lea add and add push mov or outsl cmp add jb add add or outsl cmp add pop xor adc cmp add outsl mov add add add push jb add add or outsl cmp add jb add add or outsl cmp add and push jae add or add or outsl cmp add jb push add mov add add add push outsl pop add or outsl inc add push outsl pop add or outsl cmp add outsl pop add or outsl add push outsl pop add or outsl cmp add outsl pop add or outsl inc add push outsl pop add or outsl cmp add outsl pop add or outsl inc add push outsl pop add or outsl cmp add outsl pop add or outsl inc add push outsl pop add or outsl cmp add pop adc and xor add outsl xor add add add push jb push add xor outsl cmp add and addr16 add or add or outsl cmp add pop or add or outsl cmp add push outsl mov add add add push jb push add mov add add add push push jb push add cmp inc add add add or outsl inc add push and adc or add or outsl inc add push jb push add xor outsl inc add push and jae add or add or outsl inc add push pop outsl inc add or outsl inc add push sbb add or outsl inc add push push outsl inc add or outsl add push pop pop pop inc jae add or add or outsl add push jb push add xor outsl add push pop sub add or outsl add push and adc cmp add outsl cmp add add add push sbb add or outsl inc add push pop pop pop adc or add or outsl inc add push jb push add xor outsl inc add push and adc cmp add outsl cmp add add add push sbb add or outsl inc add push pop outsl lahf add or outsl inc add push pop or add or add or outsl inc add push jb push add xor outsl inc add push pop cmp or or add or outsl inc add push pop outsl cmp add add add push jb push add inc add or outsl inc add push pop outsl lahf add or outsl inc add push pop or add or add or outsl inc add push jb push add xor outsl inc add push pop cmp or or add or outsl inc add push push outsl cmp add add add push jb push add inc add or outsl dec add push outsl scas add or lea add and add push mov dec add push mov or outsl dec add push jb pop add scas add or outsl dec add push pop and adc cmp add outsl mov add add add push jb pop add mov add add add push jb pop add scas add or outsl dec add push and push jae add or add or outsl dec add push jb pop add mov add add add push jb pop add scas add or outsl dec add push and push jae add or add or outsl dec add push jb pop add mov add add add push pop pop and add add add or add or outsl dec add push jb pop add xor outsl dec add push pop arpl and add or add or outsl dec add push pop or cmp add add add push jb pop add push add or outsl dec add push pop outsl stos add or and add inc and add jae add or push add or pop sub add add push add or add or and add add jno add jae add or push add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub add add add push outsl pop add or sub movsl add or pop sub add add jb pop add cmp ja add sub add add push sub push sub add add pop add xor jb pop add popa add or outsl add push push outsl bound add add add push outsl arpl add add add push push outsl bound add add add push outsl arpl add add add push outsl add or push sub add add arpl add sub xor add add add add adc incb sbb add jae add or add add add pop sub pop push outsl and add add jge add add jnp add add pop sub pop push outsl and add sub adc add aaa add add add adc incb sbb add jae add or add add add pop sub pop push outsl mov add add add jnp add add pop sub pop push outsl mov add xor add add add add adc incb pop add push jae add or add add add pop sub pop push outsl mov add add add jnp add add pop sub pop push outsl mov add xor add add add add adc incb and add jae add or add add add pop sub pop push outsl mov add add add jnp add add pop sub pop push outsl mov add xor add add add add adc incb and add jae add or add add add pop sub pop push outsl and add add jge add add jnp add add pop sub pop push outsl and add sub sbb add push add add add adc add add inc jle add add push sub add or or adc sub add or add add sbb pop add push adc push pop add push jae add or add or andb add or sub push sub add or jle add add add add add add adc or add add xor add add adc mov add sbb (bad) (bad) push or add outsl flds add cmp sub add sub sub add or add sub add or add or jb or jo lea add sub add or add or fldl add subb add sub add or add sub add or fiadd add sub add sub fisub jg add and sub and or pop outsl loope add adc add incb (bad) adc jb or jo lea add and add or add or or outsl loope add jae add or sub add or add sub add or add or add push sub add add add add xchg add je add add insb add adc adc add adc add or add add or add add or add or sub xor add add add add add sub add add add or jnp add add pop add or or add and add fsubrl add add adc add add add sbb or add add xor add add adc or and add jae add or add add or addl and addl push add add or jge add add add or jnp add add add or jg add add addb push outsl sub add add (bad) add push outsl sub add add sub add add addb push sub or add or sub jb or jo cmp inc add add add or sub outsl in add or sub outsl sub add add addb push outsl sub and add jae add or add or add addb push outsl sub and add inc jae add or add or add addb push outsl xor add add (bad) add push pop pop outsl xor add add addb push outsl xor add add jle add push pop outsl xor add add addb push sub add or add or sub outsl xor add add addb push push push jae add or add or sub pop or jo xor sub aaa add or and add jae add or add or add addb push outsl aaa add or and add inc jae add or add or add addb push and add add das add add add or add or sub outsl cmp add add (bad) add push push outsl dec add or sub out add or add or sub outsl sub add add (bad) add push outsl sub and add jae add or add or add (bad) add push outsl sub and add inc jae add or add or add (bad) add push outsl xor add add jl add push pop outsl xor add add (bad) add push outsl xor add add jp add push push outsl xor add add (bad) add push and add add fldl add jae add or add or sub jge add xor sub aaa add or and add jae add or add or add (bad) add push outsl aaa add or and add jae add or add or add (bad) add push and add add dec jae add or add or sub outsl cmp add add jl add push outsl dec add or sub push sub add or add or sub push jb or jo add adc sbb jae add or add or sub push sbb xor add or add or sub push jb or jo xor sub push and add add adc cmp add outsl cmp add add jl add pop outsl cmp add add jl add jb add jo inc add or sub add push outsl dec add or sub add sub add or add or sub add jb or jo add fs push sbb jae add or add or sub add sbb jae add or add or sub add jb or jo xor sub add and add add daa jae add or add or sub add push outsl cmp add add jp add jb add jo inc add or sub add and add add add or sub add push outsl dec add or sub add sub add or add or sub add sub movsl add or sub add jb or jo add sbb pop sbb jae add or add or sub add sub add or add or sub add sbb lock add add or add or sub add jb add jo xor sub add and add add sub add or add or sub add sbb add or sub add jb or jo inc add or and add inc and add jae add or push add or pop sub add add lock add das add add add or push add or push sub add or sub add add addb push outsl pop add or pop sub add add sub add add sub or jb or jo xor push sub add add sub add add addb push push outsl bound add add (bad) add push push outsl bound add add sub add sub add adc add mov add add add sub add outsl add or add or add jo sub add sub add jp add sub add outsl add or add or add or pop add jp add sub add outsl add or add or imul add or sub push add jl add outsl repnz or pop add push outsl add or add or add or pop add push outsl add or add or add or testb or add or sub add jb or jo inc add or add add add add mov add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc jle in add add push add add dec add add push add arpl je jne jb add outsl add add insl add add add add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fimull fdivr loopne adc dec inc add add add dec add (bad) fildl inc add add add add add add add add add add add add push add push push push pop or push pop or push push or or or or or or or or or or fildl inc add add add add pop push pop or or or or or or or or or or or or or or or or or or or or or or or or or inc add or inc add add adc add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add leave aas jp (bad) stc repnz push sub push aaa xor cmp push mov sub jg cli sub mov or and cmp mov jmp jb push xchg pop push lea sbb loopne (bad) xchg movsl pop sbb loopne lcall dec mov pop dec in out addl (bad) nop sub inc inc cmpsl push mov rorl sub ljmp cmpsb movsb test aas jnp lods sub jmp out ret cmc mov xchg nop push lcall xchg mov mov jp sahf pop push mov mov add cmp popf in test mov addr16 cltd add mov push xchg fwait test lods (bad) jl pop mov dec add and dec out aad lcall xor adc test or xchg cmpsl cltd mov lahf nop sahf (bad) clc xlat cmpsl sbb inc xchg shrl call lret outsl fcomps dec cvttps2pi mov fiadd mov (bad) fistp push mov mov out lods into fidivl stos mov push pop mov repz dec add xor divl mov stos sub pushf gs mov jle sarl cmc adc popf cld (bad) or mov dec inc pop sub pop cwtl mov mov ret and scas out xchg je xor mov sbb jno pop fs sti fiadd stos jl mov jmp in mov push push adcl add push xchg mov dec mov data16 test orl popf mov or push push cmpsl pop rclb mov mov mov or push or ret rcl into xor jne mov jbe mov xchg add lret fisubrl xchg imul jo jb inc cmpsl or arpl cmpsl push mov insl sti scas movsl test imulb and jo mov popf aam sbbl imul jle pop test fistp sbb xchg adc fisubrl xor cmpsb fcoml pushf mov sbb add fucomp gs jo add dec xchg pop cmp movsb mov mov (bad) mov mov stos pop xchg sub dec pushf cs mov xchg mov dec push push cmp cmc sub arpl sbb xor sbb jo test xchg in xor in cmp jmp fsubrs pop xor adc insl enter and jno jno push jl test popf leave dec or test mov xlat lcall cmpsl dec jno popa dec repnz mov je mov push and push movsl dec push jno sbb jb mov ljmp out xor inc stc pusha jecxz sbbb mov inc leave inc icebp fbstp cmpsl pop imul add fidiv mov jo cmp lret imul repnz mov icebp push inc cmp and xor dec scas mov lret in lods adc test dec and popa or pop das iret cmp jnp inc cs sub popa fwait out mov repz lret out xor leave dec sarb into xchg imul mov pop dec nop jno pop jne dec (bad) mov mov xor mov sbb ret push pop cmp mov sbb xor pop shlb xor xchg cld mov aad in pop sti fistl lahf mov inc push sub test fnstcw push leave and fcompl insb out push adc xor inc repnz push jns jp jo les sub fistl xchg dec in nop repz mov xlat mov aad dec and jecxz pop mov aad jp arpl cli (bad) xchg xchg popf (bad) repz jb push and push mov or lret xor mov test dec ficompl rcl cmpsb in mov test sub cmp rcrb movsl pop jmp stos jo jnp lods outsl sub mov sar add xchg gs addr16 and jno push xchg lret xor enter cmpsl lods inc adc shl sarl aam mov jae leave sub (bad) loopne or mov xchg imul movsb (bad) cmp jl shrb insb lcall ds aam aam pop je (bad) les sub hlt cmp loop push test cwtl jle imul sahf sub xlat mov cmp mov into sub mov mov pop lds mov cs popf int add or repnz pop sahf dec je stos ljmp idivl (bad) bound add and lcall adc push xchg xchg sbb jp hlt scas cmp les in int cltd jge movb js ljmp sbb cmp test daa jnp aam pop mov inc cmp cltd or sub add cmp lahf xor sub sbb sub (bad) mov adc mov test mov add push out inc mov inc ffree int stos in out dec pop in je dec dec jbe imulb pop mov xchg (bad) jbe cmp sbb xchg lcall stos push xor aam fdivrs mov jns mov in adc mov imul push ja inc scas clc add movsb mov and mov ret push mov (bad) outsb dec jmp pop push xchg mov jp stc outsb cmp cmp stos mov aas mov dec mov outsb popf (bad) cmp dec movsl jb insl pop out dec fmul or add or cmp arpl jb cs dec pop fs sbb pop aam popf ja push push and xor xchg js pop es fistp pop pop xor mov js xlat cld sub mull push jmp fsubrs dec (bad) rcrb movsl movsl fnstsw xchg mov je (bad) ficompl imul adc ds mov inc sub or imul imul fwait pop sub dec sti fdivp dec (bad) push pop cmpsb cmp imul leave mov fadds pusha jp aam bound mov xor outsl push mov dec rcll add adc stos in pop sbb (bad) jp clc mov dec xchg sbb xchg mov incb inc daa sbb push and or fidiv (bad) subl sub (bad) mov xchg fs and cltd xchg xchg mov popf data16 je repz xlat fs (bad) sub sbbb lds out popa mov mov notb mov ret pop gs xchg daa in jns cmc sbb jnp mov cmp mov repnz ds icebp jle scas into les or test cmp enter add sub xchg cmp lret pop xchg (bad) cltd adc outsb (bad) adc lahf push mul pop mov jns adc xlat pop cltd lods sub mov push into sub cmp lods test sub jnp sbb std loope dec sar lahf adc ljmp sub insb mov add mov pushf push cltd push insl mov cmp jnp mov adc ret pop adc jmp push fiaddl cmp xchg outsb cwtl in imul mov mov lds push mov and jo mov arpl mov ret xor mov popf jp xchg testl jne daa fidivrl nop clc aas inc xlat je add jl shrb les or mov fcompl inc and push xchg stc movsl jecxz mov cmp push int3 js pop adc or test jp mov cmp cmp (bad) insl je cld mov xchg call pop test mov (bad) mov add jle cld arpl (bad) sbb divl enter mov xchg loop inc and imulb dec mov and (bad) in dec icebp loopne push (bad) sti cmpsl cli push sub adc fldenv fstpl pushw adc mov mov out mull fist dec jecxz jne sub imul outsb mov cmpsl mov dec clc jb out pop pop pop test cltd in out fxch std mov pop call jb out mov push (bad) cmp out xchg aas dec push decb stos mov loope lock sub xchg push mov shrb mov xlat out (bad) loop sahf sbb pop int aam nop sub pushf dec leave leave pop and (bad) je sbb sahf (bad) in incl add mov sbb pop push mov mov lock insl xchg int repz dec mov bnd jb cwtl icebp pushf jp rorl dec js insl int3 or inc sti mov inc iret add jge imulb push cmp loop aam jae mov std dec lock adc lods sub mov shl (bad) je les and jmp cltd cmp mov cmp subl push mov pop inc mov out mov push out out (bad) jl std mov (bad) xor push mov pop pop xorl scas push loopne mov iret push (bad) cmp push adc shr popl mov (bad) idivl jbe mov (bad) (bad) rorb xchg pop int3 mov sub dec loope les inc mov mov inc lea xchg fadds add iret add gs xor sbb mov dec mov std lret sarb fisttp mov fldenv popa (bad) bound lods jl movsb cld jle loope (bad) pop or ficomp (bad) jg je in dec mov daa jle push js (bad) mov mov out mov jg and stos sub jns sti cmc mov cmp stc inc stos jbe les add sbb or xlat cmp shll negl (bad) movsl pop mov imul add pop push add sub xchg cmp xchg fwait lcall ljmp insb addr16 dec push xor push inc jb mov inc sbb mov mov and mov testb pusha mov lcall imul pop in test cmp inc sti fbld mov mov out push push hlt mov lahf movsl cmp out cmp mov xor pop push sub sbb imul jne xor mov arpl mov adc xchg ja mov fisub ja mov imul hlt mov out rcr mov arpl stc out push mov addb push inc pop fidiv jg mov in into out pop nop push cmp mulb lods gs int3 mov vpunpckhdq push nop pop lahf and dec mov add sub leave cmp outsb in call push leave push ss ret stos sub cmp fs scas in scas dec cmpsb xchg scas in aas cmp (bad) cmp popa sub inc mov and ja cmpsb and cmp lret shrb lret and mov lcall test mov xor (bad) lahf xchg addr16 imul mov mov sti xchg xchg jno push rcrb push mov scas jb cmpsl pop xchg fs int mov xor lret xchg sahf mov mov push dec xor test leave loopne pop jmp pop xchg lods arpl leave (bad) xchg movsb pop adc mov aas outsb cltd pop mov in cli or clc stos loop or das jl test xchg popf mov xor inc call jae lret push in mov fdiv das mov cmp xlat cmp xchg (bad) xor pop jno lods mov nop repnz fiaddl clc std mov aaa lds imul sbb insl mov in das and inc arpl and inc jne inc popf add imul pop mov (bad) push mov imul lds lods mov jmp andl push pop ljmp (bad) push jne movsl orl ja cmp cmpsl xlat aad cmp push jae dec pop fwait or dec cmpsb jmp cs adc cmpsl sub ret pushf jnp int dec pusha and ss scas cmp mov (bad) movsl (bad) (bad) xlat mov pop mov xchg lea xor icebp lods scas xchg inc jae or inc mov jno or mov push pop fadd cmpsl ljmp xchg xlat sub mul lcall xchg mov std int3 jo popf push fmull shl mov jbe inc xchg cmp ffreep jmp inc cmc pop sub aaa repnz movl mov test pop into xlat outsb enter push popf cmpsl scas arpl lock test jg test jb sbb lahf xor jne test sub into rorl icebp xor in adc cmc sbb dec lahf xor xchg fs test fistl inc xchg push pop (bad) cmp or sbb pop aad dec mov jp mov pop mov ss cmpb inc pop mov imul cmp cmp daa icebp push (bad) jo jle in (bad) mull ret cmp mov inc ret mov je movsl mov mov fadd or sub leave jne cmp sbb or push xchg iret sbb adc xlat scas lods lds push (bad) jno push cmc lds cmpsl or push jo jb out imul xchg push lret shr out sbb mov jmp sub cmp lahf test xor sbb dec push insb ret push mov jmp dec mov fsts aas movsl pop aam and loop xchg dec call pop add loope sti lods ret stos lea jmp js movlps push (bad) outsl sub mul inc (bad) sub xchg fsubrl sbb lahf jg aad adc jne (bad) cmp fld imulb add stos push cmpsb mov fcompl push sbb mov inc mov cmpsb mov lock sbb pushf (bad) (bad) aam jmp mov out jp cmp aad cmp (bad) (bad) clc xchg fisubr mov mov inc (bad) divb lcall jno xor scas xchg jg jg pop add jl and ds mov cmpsl ds mov ret leave mov mov addr16 fwait jp sbb add dec aad mov and movsb mov ret sarb push mov adc xor jecxz push pop xor xchg out mov mov mov mov ss cmp sub pop (bad) pop xor and push xchg fsubl adc cmp push clc add xchg xor and (bad) enter xchg jge push pop sub sub xchg lcall jg repz add add dec sbb push rcrb shlb mov mov inc aaa adc xor jb jb nop or push xlat dec push out in rcr or dec mov fsubl xor xchg push lea es ja or mov mov jno push push out mov inc sub xchg xor in aam pop addr16 daa xchg cmp inc pop adc cltd lods movsl into mov fwait push std fwait mov jmp ja shrb gs aaa arpl cmp sub sbb lea dec sbb cmp sbb sub add mov stos inc lea mov push or sub mov aaa sbb loop dec push rclb pop xchg stc mov int mov es (bad) ja ja xor insl dec dec mov stc test jle cmp stos jo cmp cwtl cwtl mov fildll ret inc rorl test adc pop pop int3 aam dec adc sub bound (bad) inc and adc fcompl aad mov dec xchg in stc aaa decb fwait icebp iret inc lock jmp add movsb sbb cltd xor or fisubl jge btc (bad) icebp dec outsl (bad) pop mov mov dec out sahf insl daa dec xchg lods xor loopne add fistpl pop popf into or aad mov mov js fsubrl pop jb mov sarb lahf movsb fnstsw add shl mov cld imul cmp dec jns mov lea cmp wbinvd dec xchg imul scas lcall pop negb inc out mov cmpsl pop std sarb popf (bad) scas movsl mov rolb xchg and add sub xchg dec dec imul mov dec test inc add pushf repnz ljmp int mov scas cmc dec fdivrs mov (bad) push sbb popa or jg mov jb repz insl loop or ja dec mov ret (bad) ja leave iret scas lods pop xchg int mov mov xlat insl pop mov xor cmc cmp test aad and jmp cmpsb cmp sub out add mov xlat jmp std popa jne jns sbb sub in cmp popf sbb test mov sbb jne (bad) aad ret pop mov adc mov mov push sti jnp (bad) sub sbb dec sub sbb jg mov fidivr pushf sub fldt movsl cmp stos dec sbb outsl js pop mov xchg je mov and and pop (bad) movsl fstpl lret dec mov es xchg imul adc inc jne mov mov cmc cmp (bad) fsts jne sbb jg aas test sahf es push push andl or mov inc stos clc aad sub shlb cmp jo daa mov (bad) iret icebp pop xchg cltd js stos xchg dec xchg mov mov in mov loopne mov popa mov insl pop sbb (bad) xor sub jae rorb sub or mov fdivs repz add or js pop pop (bad) out mov enter mov mov pop (bad) or outsl aaa mov or sbb (bad) test imul fisub mov push stc cli popf adc arpl cmpsb mov jmp cs icebp ja repnz iret enter xor push lcall and or sahf cmpsl cmp mov mov mov push popf pop imul xchg pop ret imul and aad cmp gs cli and pop pop and xchg insb xchg repnz cli lock test rcl push sahf sbb xchg pop lret ficoml (bad) mov cmp pop mov jno pop ret jmp repnz std stos out push pop xchg (bad) leave arpl enter mov repnz popf pop fist fdiv cmp ljmp je in push fildl or adc (bad) rclb cltd jne mov lret arpl notl lret fcom mov pushf pop (bad) jo aas dec jg lahf mov pop test fnstcw mov and into icebp jbe mov pop aas jge pop repnz clc es mov jg pop pop clc dec pop shrl popa ss jne pop mov pop mov push ret push push fwait mov mov push mov hlt inc fsubp sub repnz int bound sub xchg pusha in mov mov (bad) dec loopne or stos mov mov into cli mov gs add loope jp aad cltd add sub push popa fs xchg enter icebp and push nop (bad) or out cmp adc inc ret lods fidivrl pop lock jb xchg inc mov fcmovnbe lcall mov xchg dec cmc scas movsl xchg pop push aas mov js icebp jle (bad) addr16 enter mov lods sub cmp jmp dec dec xor cltd lods cmp push jge jnp cmpsl dec sbb adc cmpsl xor dec add xor sbb pop sti pop icebp sbb bound ret add out adc cmp xchg cmpsl mov arpl mov push in pop mov loopne mov or shr cmp rcll inc adc (bad) movsb push adc sahf cld aad out cmp pop pushf ja mov sub mov cmc inc xchg mov sub mov or add repnz loop stos xchg mov stos dec cmp pusha sbb rcl js xor into pop mov xor mov mov (bad) fwait lea test stc (bad) inc and push (bad) add mov cmp fcmovbe cmp leave and aas xor dec subl cwtl mov lods xchg mov aam xor mov and js data16 mov adc pop dec lea jnp xlat lret mov sub xor movsb ficom pop and mov stos (bad) push sbb sub adc out jb mov iret mov idivb pop std fwait mov hlt adc das or jmp subl push inc mov in leave cmp test imul dec ficoml ss std pslld lahf iret mov push popa sbb mov jg bound cmpl in dec (bad) cmp mov popa inc ret and jno inc adc lret stc pop rol hlt popa cmp and aas mov shl dec ss pop fs pop pop xor mov scas jle sahf lcall enter gs inc mov or je cmp jbe stc sbb pop dec scas imul (bad) push mov lret sbb lcall lahf jo or sbb rcrb pushf imul mov xchg mov movsb mov hlt stos add into insl adc int3 icebp movsb ds popa adc or pop pop xor mov rclb in (bad) xchg inc repnz lret mov icebp sub mov aas xor jmp test or arpl sbb fcoms test mov inc test in pop incb jne xor pop xchg arpl stos add imul inc rolb jbe xorl ss pop jmp cmp fiaddl and xor pop (bad) or ret in cmp xor std dec lds inc les pop int3 push in nop (bad) xor std in add mov out rcll inc int mov mov sti pop mov insb mov (bad) stos mov mov cmp fisttp pop call sub push push int mov push sub cmp or scas jp fisttp dec (bad) mov sahf lods imul xchg adc push pop jp pop adc sub aaa inc mov fiaddl sub pop sbb sahf fstpt dec jecxz jmp rcrb dec (bad) icebp pusha mov icebp pop dec inc cs xlat pushf xchg in in (bad) aas pop push sbb (bad) movsl cmp notb das lcall add xchg (bad) pop push pop mov dec ja cmp movsb jb (bad) out adc jge and cmp fcomps scas dec movsb mov pop and jecxz aaa dec repnz test pop (bad) mov dec ds xor test mov iret xchg into jo jle (bad) divl mov adc lcall adc mov cmp js xchg add push aam mov and ret mov xlat cmp daa mov sbb movsb loope jnp cmc aad push stos aaa gs jge test cmpsl (bad) movsb inc scas xor push inc cmpsl lret in aaa push mov xchg xor cmpsb mov and dec jno xchg cltd mov (bad) push int imul jnp mov dec pop push xchg push sub lods punpckhbw stc mov push add mov push negb mov je daa les pop paddusw pushf mov sbb pop xor hlt sub xor xor lret inc mov push or xchg (bad) mov gs xor pusha (bad) jae pushf jae mov adc dec ja jns cmp add out iret jbe add pop ret jmp pop ljmp dec std faddl pop je imull clc arpl sahf cmp (bad) inc sub dec jae cmp jp pop insb push test mov mov jg push mov pop pop aaa fldenv and icebp cmpl cmp subl in pop mov sar pop jge jmp mov aam xchg fsubp in stos or mov dec mov fwait inc cmp or mov stos leave in rorb lret dec xchg jecxz xor iret sbb aad leave mov xchg push lcall fidivl mov push aaa sub addr16 inc xchg xor pop or (bad) pop (bad) lahf test sbb push lea mov ss icebp pushf fs lahf pop in call test fistpl xchg scas dec pop mov xor add adc cmpsb mov mov lcall inc inc or ret jp pop ret out (bad) push mov jb push std jecxz push jbe xor cmpsb xor and xor pop inc push fldt sbbl xor dec xchg add nop or ds mov imul sub xchg sub subb mov call sub jnp mov fs pop mov loopne sbb xchg repnz imul aam fidivl int sbb sbb cltd daa sbbl test or addr16 mov rcll xchg shlb pop or movl pop pop dec mov pop pop mov xor add and pop xor gs out jnp lods mov xor add div sahf (bad) xor cmp sahf inc js fildl out sahf cmc out adc clc vmovdqu cmp xchg aam mov and mov imul movsl lret and out daa fcomip cmp push js popf in mov pop pop cmpsb lods jle and sbb out push inc jmp lods (bad) jae cmpsb (bad) in pop in inc and in fucomp cmpl aam push test das jp fstpl fsubp push fisttpl lea mov pusha jno aam push lock or (bad) or sbb in jmp lcall insl adc lret jno cwtl mov xor add mov push (bad) scas clc xchg inc lahf inc push mov inc nop std loope insb sub fwait js daa mov adc (bad) negl dec fidivrl dec cmp lods incb pop mov xchg out pop repz inc inc outsb adc arpl mov hlt or daa xchg push aam movsl xchg dec dec repnz dec call lock test stos repnz cld mov pop inc jns jnp mov and cmp jns fnop add sbb jp jl lock les push inc mov mov jge mov gs icebp mov and fstpl jmp cmp adc outsl adc add or adc inc push shlb out loope cltd cld jnp pop mov lods ss mov add add inc (bad) mov sub repnz inc enter pop add mov imulb in fwait and ljmp icebp scas inc dec sbbl fmull leave push cmp dec dec repnz aad aaa pop or mov mov (bad) mov xor stos popf mov sbb push add sahf cmp xlat loopw xchg enter dec sbb pushf loope out dec cmc adc inc aam jne fwait int mov mov jmp adc pop sbb add fnstenv leave divb cmpsl out inc push test push lods loope mov pop mov les jmp es mov test pop mov push shr cld fwait enter sbb addr16 les inc ljmp fcomps sbb ja,pn xorb and cmp sub lea sahf das sub (bad) (bad) loop xchg xor push pop fadds in jp (bad) xor dec inc rorb push addr16 pop hlt jbe adc cmp imulb loopne lods dec int stos cmp cli cmc imul out ja adc or sbb push dec mov leave and adc jmp loopne sbb imul es rorl lret scas push adc testb inc aam jmp ja lahf or xchg or adc icebp (bad) jg jmp mov test stos and sahf xor cmp fisttpl push scas sub mov jns repz mov ljmp and test and mov hlt mov fdivrl gs (bad) mov cmpsl or mov stc sbb sarb int3 pop test (bad) mov loopne arpl and jmp mov mov push jl inc inc outsb cmp xor iret adc sub loop cmpsl aad jp in xchg cmp cmpxchg inc aam fs test inc iret repz jae jl in jg je outsb mov stos jge jo sbb xchg fimull aam lcall cmp lds cmc inc adc fdivr xor arpl push pop sbb jnp outsl pop (bad) ss insb outsl aad loope out fidivrl sbb std int movsb movsl sub (bad) push mov outsb mov mov into dec inc push pushf movsb lea xor xor adc idivb cwtl lret jno dec outsb ss out (bad) push imul dec pop insb mov out jae xchg cltd xchg mov add les sub push xchg in popa jmp xchg xchg sub (bad) add out cmpsl and in pop fisubl rclb test and mov pop (bad) jmp mov or lea cmp push and and jle,pt xor add std sub mov sti dec jne jnp mov lea mov addb push lods movsb add mov sbb shlb aad sub idivb cltd out push and add cmp push pop cmp pop and or add cmp xor das xor xor cmp pcmpeqb and xor ror mov ljmp and out push and push mov fcomp fidivl or inc (bad) cmp out push lcall push lods dec sub (bad) xchg lods mov rolb inc pop push (bad) mov inc stc mov lea sub or cmp mov jg mov lcall mov aad icebp ja mov insl (bad) stc xchg ja xchg jns mov fisub (bad) ljmp (bad) rol jne sbb stos push cmpsb mov mov int3 pop ja repnz inc and pop lret lock jecxz mov pop icebp insb jae lea imul mov loop test mov jecxz pushf sbb in into dec dec test out mov jp in lahf push cltd fs pop sub fnop and cmovle clc dec mov data16 sbb inc mov push or test cmp scas mov inc lods or ja outsb xchg xchg iret push clc sub clc pop clc jl lret sbb paddusw jecxz call (bad) shrl sti rorl adc pop adc sub pop imulb gs hlt push xchg scas cmpsl xchg int3 fdivrp or mov out sbb jp (bad) in xor mov cs clc xor (bad) bound cmp jne les sbb lahf push gs pusha stos sub (bad) out pop sti cmp int js lret push push js movsb dec push jno cmc scas inc lock mov outsb pop cli pop or xor in sbb scas sbb mov mov mov pop dec push mov incb test imul ret leave lea add dec xor pop inc mov mov ret loope jg enter clc ds pop sub or jno pop loope add stos adc mov sbb mov sub sub lods dec mov and sbb les jp movsl pushf xchg and cmp add jp test sbb cwtl (bad) lods gs cltd adc adc sti sahf push dec mov dec fcoml loope mov jno xor orb jnp mov (bad) (bad) sbb push aad imul lock sub pop inc mov and push push mov add xchg jns imul iret in aad mov js ds test cli (bad) dec mov cwtl jns cmp mov sbb hlt loop pop or divb jle int3 sub aad hlt xchg popf mov adc xorl addl sti (bad) testl or shr aam xlat push push pop xchg sub dec xchg imul and adc jo sub adc jmp mov (bad) mov push aam out cmp paddusw mov xor push adc xchg xor jne cmp pop xchg inc test xchg inc jecxz mov aad xchg jg mov incb push call cmp sbb xchg andl sub pushf test popa lods daa aas outsl std mov lock aas pop nop popa sbb dec push jl jg lret pop shrb mov jae lcall sbb stc jge call push mov xor (bad) fmuls rcrl sahf and fsubl mov shl sbb lock out fwait test push jbe cmp arpl sub jp cmc scas dec clc ret mov pop lret insl and and (bad) int jb pop les ja mov lret mov jmp cltd push dec dec fnstsw enter scas cs loope and add stc mov inc mov cmp push jle out shrl mov push call pop mov jecxz push xor loop es or pop inc sub ret push sbb xor mov mov lds mov scas inc cmp sarb stos dec leave test fildll xchg mov dec stos aas gs or mov sti push js repnz inc repz in fildl pop mov inc pop fwait cmp dec iret adc xchg sbb jmp sbb fucomi pop adc dec int mov cld add sub jle mov push inc test fcompl dec lods insl ss (bad) fsubrs fidivrl dec push mulb (bad) dec or je inc insl and addr16 xchg movsl outsb jp sbb cmp xchg repz pushf sbb push dec test jmp or into sar jp test xchg (bad) dec insl negl xor js nop mov push pop pop mov inc add mov jmp dec je cmp out (bad) (bad) sarb sbb lds icebp sub and jg fdivr repz loop test rcrl stc mov cmp push sub mov loopne mov mov sbb dec sub cltd mov fisubl adc ret mov pop inc mov call insb xchg (bad) out adc mov push fidivr adc stc jge aaa dec jns in xchg pushf out cmp lods dec addr16 (bad) jle xchg pop mov xor enter jmp cmp (bad) or pop into push stos iret sbb xchg inc std dec push pushf inc int3 cmp cmc test int3 (bad) outsl frstor repz adc pop and imul mov and hlt lds xor test mov rolb cmp sbb test popf popf fabs fbstp cmc mov xchg pop in lret cmpl out das mov mov jne cmp rolb fidivrl push je cmp addr16 pushf xchg (bad) aad aas sub push lahf mov in testl scas les mov sahf sub lods insl sub test test jae jnp adc push ret dec js imul out or push int3 stc adc jmp cmp shl dec int3 dec sub (bad) cmp into inc pusha xor insb mov insl cmpsb lds in call js mov dec fisubl mov test std dec xchg and out test pop inc nop dec (bad) jo loopne add push lock pop int3 cmp jp sbb lods pop adc outsb scas mov leave push int pop repz test sbb mov test sti push in (bad) arpl and js push xor mov mov pusha fwait xchg pop fsub in cld aas loop and std mov (bad) int3 lds mov mov mov pusha mov test push inc sbb pop jb inc pop rclb pop test les xchg or push inc mov adc sti push sbbl xor mov jmp mov inc aaa jo in mov stos lods sbb inc arpl cmp loop cmp (bad) ret mov dec enter pop mov lea xor mov sub aad outsl sbb ret adc es push insl (bad) pop cmp xor sbb inc jbe jecxz enter ljmp mov sub sarb incb adc mov and mov cmpsb fcoml lods cmpsl movsb or pop and mov scas xor mov lahf stos aad push repnz mov inc lock scas jl pop sbb int3 inc xor in jno data16 lock dec mov dec adc (bad) or mov mov out xchg dec fld1 jb pop enter push sbb in jns xchg jecxz xchg cs lods mov dec test inc cmp push adc sub xchg dec mov rclb cmp xlat xor fwait push sub push adc cmp jns add inc mov cs sbb xchg mov shl cmp loop js fs and fdivrs sahf xchg push mov mov scas mov dec sahf fdivr push mov sahf push scas and dec fistpl xor pushf hlt (bad) jl,pt inc jl sub and or into push shrl leave popa mov and sbb shrb mov fwait mov inc sub jl shrl mov cmc dec mov jmp cmp xchg inc rol mov adc xchg jne je test mov push jbe xchg jecxz xchg xor push mov ja fisub xchg and movsl cmp fildll and pop or mov xchg mov and pop insl xchg mov (bad) pop jbe mov sub adc jnp jp cld adc test fistl (bad) outsb (bad) pop pusha aaa add (bad) clc daa pop xor clc xchg mov lods enter data16 adc xchg push movsl and das clc and xor sub lods cmp add ss sahf fsubs (bad) dec cmp icebp scas sub dec or (bad) out sub jno enter jns xor fldl and jae jecxz ljmp jns mov mov push mov in sbb push jmp dec (bad) lods xchg test fdivr ret dec mov or pop aad push inc lcall mov scas adc scas mov enter fidivrl inc popa cmp sub cs ret sahf cmp jp xchg push data16 jae mov sub test mov push inc xor adc jo sbbl aam addr16 les push push les andb js loope push jnp dec cmp cli cmpsl mov mov out lret stos das inc and adc sub in in fiadd xchg adc lcall (bad) or popl (bad) mov iret psubsb ficompl in sti push cltd sub dec push and xor xor push pop shrl dec xlat push jp outsb mov pop sarb lret loopne adc scas pop add jae,pn mov cmp and dec push (bad) lock ja cmpsb pushf sub mov sahf jp in ret jp in jecxz pop lret idivl data16 outsl or arpl mov xlat mov push push in mov jge das push js mov iret mov sbb popf inc out mov jg pop loop mov testb lds add call xchg lds mov inc push sbb pop jbe sti and mov push pop je mov aaa xchg ja sbb pop loope mov jecxz mov pop xor aaa mov or inc jmp cwtl lcall push sahf pop xorb hlt in jbe add sbb jnp mov lds and aad inc in ficomp or cmp pop scas imul push das scas je xor inc jo lods fcmovnbe ds loopne stc sbb xchg push pop cli mov cmc mov jbe or sbb cmc xchg lcall sbb cld push sbb int lret stos jge push fdivrs dec sub mov xchg cmp cmp dec mov jnp into aaa pop std mov daa xchg lret mov in mov cmc insb jbe push pop mov es pop cli dec push bound in imul jno dec dec sub mov jmp xchg push lret test mov mov ds jo cwtl data16 insb jno div adc clc sub lahf ds jno jns pop inc rorb sub mov cmc hlt jmp pusha mov js xor (bad) add lahf ljmp jb ret mov rcrb or sbb inc jns in sarl xchg xlat lds adc xchg push and fldt push jnp aad mov sbb inc (bad) imull inc sub cmpsb adc iret mov lock test and sbb adc mov ficom aam mov xchg xor jl (bad) outsb js cmp imul jg enter bound daa into stc xchg in jle jmp mov aaa cmp or aaa notb pop imul and mov imull loope gs mov lahf vmovd or hlt stc fcompl pop scas loop xor sbb jne mov scas sar lea les frstor ret jl xor psrad movsl jno gs sub ror mov xchg push aam sub jb and mov dec call add mov dec ss out adc lret icebp mov sbb sub push push jmp xor in sti sbb mov push repnz sbb lods (bad) mov hlt fnstsw stc mov or cld addl mov (bad) pop scas sarl (bad) xor push push ja (bad) jecxz mov push jb lock aas rorb cmp mov hlt mov outsl cmp test add add xlat push or cmpsl mov aad push sbb jge stos pop imul out clc imulb outsl fidivr push mov je mov add inc outsl pop jp lods or gs cmpsl (bad) (bad) icebp push sbb ja adc sbb mov push xchg adcb jnp (bad) idivl push cmp loop dec push pop dec out ss xor stos sub cwtl addr16 into cmp aaa pushf icebp jnp in lods in xchg lea je out jne lahf pop inc jne push incl mov cs cmc jmp mov popf pop ror ljmp lea inc aas sub imul xor pop jle cmp push push cs mov sub or dec jl dec lahf loop aas adc pop imulb (bad) fsts jge lret push push loop aad cld xchg arpl mov lret pop (bad) xor adc inc out mov add adc push push rclb adc lods mov jb testb cld sub js adc cld scas mov insb into lods sub dec sub pop fsubrs aas or adc cmpsb inc mov add shr sub sbb xor push sbb sahf fsts xlat push dec gs xor sahf mov in lret insl or addr16 jecxz stos cmp inc dec mov push rcl ja insl pcmpeqb clc adc stos cmpsb mov daa mov inc mov sub das ja dec cmpsl sbb jns rcrl and js insl (bad) or push aad gs aaa jne dec adcl outsb lock out jl daa add dec xor mov (bad) fmuls adc scas incl pop mov test pop inc jns sahf movsb pop and imul push fcompl xchg sahf fldl xlat loope add popa lahf push mov popa mov xor push popf addr16 xchg mov push sbb int3 xor mov mov lea inc insb (bad) punpckhdq pop loop in cmp fist fcompl mov xor in cld push dec rolb ja frstor aas (bad) loop test ja ds icebp xchg incl pop js fmuls test jl adc sub loopne ja sub pop push pop ja ficom ret enter mov imul fidivl jg mov arpl imul movsl sti addr16 mov test dec cmp les cmc ret mov add jne push iret clc inc lods lret jno es lahf cwtl loope pop je lcall (bad) pop dec xchg loop cmp push xchg fwait fwait (bad) fnstsw mov mov (bad) mov sub addr16 loope sbb loope (bad) sbb jle (bad) in mov adc dec xchg adc in cmp jl lahf ret icebp scas dec xchg cmp xchg mov iret (bad) bnd (bad) and fistpl xchg jmp cmp adc test (bad) push jno jmp mov pop mov out and lahf mov out xchg insl cmp sbb inc xchg push pop out mov bound test ja in (bad) xor clc pop out clc mov idivb sub mov mov xor stos aam cmpsl mov cld inc loope sub cmc scas outsb popf pop fsubrl xchg push or mov inc loop pop xchg (bad) sbb sbb cs cmp hlt (bad) jp push (bad) aam sub in in jp push jp es sub mov test xchg loop and mov and popf loop cld dec xor in mov les testl sbb lods mov lret inc push in or pop ja call adc sbb jb ja (bad) (bad) sub xor adc lret fmuls test lock inc aam xchg (bad) fsts inc out mov jp imul ja pop (bad) aas ds mov xchg loop xchg clc mov fcomp ja insb cmc int pop fwait mov scas test push xchg pop sub int3 inc add imul scas fisttpll sbb (bad) lock in cmp xchg jo add call movsl jge lods cld cmp adc ds fwait dec into jo push cmp sbb mov cld test daa cmp (bad) ds clc outsl sti aaa push sbbl (bad) ror outsb and aam idivb sahf add aas test xlat jl int mov sbb mov out pop mov jno aam in (bad) test adc cmpsl incl cmp mov mov mov xchg lock adc iret lods jp mov bound ret shrl inc mov out in cs out repnz xchg mov dec xchg push xor dec sbb cmpsb sahf mov data16 inc push sbb pop jns das adc cmp shlb cmp nop or scas jle mov jne or loopne repnz enter cmp jl or pop sti gs jnp cmpsl jne sbb (bad) add (bad) xlat xor outsb fisttp out and stc out lahf inc scas imul pop push mov in fsubs (bad) mov out dec fnstenv in outsb popl cltd lods lock loope shll dec out movsb fadd mov dec cmpsb xor (bad) (bad) pop inc dec lahf add sarl rorl add pop clc jne movsl outsb jle fisubr scas ucomiss insl insl aam pop inc dec aam dec sub stos pop movsb aaa or sub out dec cli imul clc cmp out arpl aaa xchg lea sar (bad) aad bound (bad) leave inc dec adc ret xchg dec sub incl les jbe xor sbb jg (bad) jle xor imul div shlb jns push xchg mov in stos jne push (bad) or cmpsl xchg jne aas inc je adcl repz insl clc push aas xchg fdivrl pop mov loopne (bad) fnstenv xlat add push jg aad sbb test adc xor mulb mov in pop pop call mov sub mov ja lahf enter fisub pop js adc xlat rcrl push pop sbb fildl jge (bad) mov test rcrl dec jge jae mov sub je jne gs xchg lahf cmp mov fisttp sarl lock bound sub sahf paddq pop xchg icebp inc jno or loope movsl mov cmpsb int (bad) pop lret xlat fidivr add jb fldcw ljmp scas outsb xchg mov in and stc pop mov iret icebp aaa jmp push inc js ljmp inc iret cmp sub sbb pop popa sub push shrl pop lcall daa or xchg pusha push sbb push mov add adc andb pop repnz out into xchg mov into cli pop shr push adc divb push les mov xchg jne lret adc mov mov jle in incl pop data16 xor jbe jge sub insb iret lahf sub stc cwtl (bad) loop stos ljmp shlb fdivr jl push sub mov dec data16 les dec lret loopne scas (bad) incb jg dec cld cmp icebp xor dec call mov or jmp stos fldcw iret stos sti pop lea movsb sub (bad) cld add (bad) mov inc icebp test lock mov xchg jb push cmp cmp jmp in leave adc jo pop dec push out adc inc dec (bad) loop push lret out cmp imul xchg pushf lods pushf pop inc sbb xchg mov aas cmp pop (bad) mov in je xor mov repnz loopne js out pop and sbb ror xor popf repz jg jle xchg in xor lret pop pop inc jo mov js negl out incl enter icebp jecxz cli xlat mov imul pop fwait neg cmpsb adc sbb sbb scas inc imul xchg pop cmp and scas mov fldenv mov ja mov jp and repnz pop sbb mov enter test mov push jl loopne std push sahf jnp xor pop (bad) out jno out push dec jo aas xor xlat and sbb push mov out xchg lock mov lret mov fldl ficompl xor add pop data16 in adc push movsb xlat mov xchg sbb shrl sbb jns into dec out mov push push int3 gs adc dec stos ret clc imul sahf stos icebp xor outsl test mov cs insl es add push mov lds insb arpl xchg rorl jns jnp mov and testb pop lret punpckhwd sub aaa mov sarl and ss xor adc mov out vcvtdq2pd push pop sub pop xchg xchg fsubl push dec or std out mov mov cwtl xlat jle push pop dec mov fnsave jo dec mov outsb daa nop add jge or pop mov fwait push sbb scas stos js mov push ja repnz data16 sahf xor jns dec aam adc xor sbb cmp inc jb es jns lret out jb jbe dec arpl pushf jae xlat dec js mov gs mov in in xchg mov jecxz (bad) rcr rol insb lds ret adc and mov lock adcl xchg pushf lea insb mov mov mov pop dec loop test stos je fidivrl mov out or js sbb out test fcomip sbb addr16 dec or pop push in mov and aaa lds daa sahf inc ret jg cmpb arpl popf sbb into dec lret mov hlt movsb imul cmpsb mov or out xor lea ja sbb sbb jno mov adc mov (bad) pop mov shl incl xchg (bad) repz aam imul into jbe xchg outsb sti mov mov adc xor mov inc jmp pop (bad) sbb dec jbe leave push mov push scas lods in (bad) rolb xchg (bad) cmpsl lret (bad) icebp stc xlat lds jno movsl cmp hlt ds or ds jmp xor daa mov cmp jp jbe xchg mov into mov std imul inc pop or push lahf enter loopne xor movsl lcall stos cs xchg shl scas or fstpt cltd ret add pop pop mov xchg jnp enter test jp dec xchg cld arpl sbb iret sbb setg fidiv jno mov pusha xchg mov lret pusha addr16 mov not aad inc arpl inc enter cltd mov jne lods test cld mov dec jecxz pop imul xchg xchg cli in imull int leave pop jle int3 stos popa jecxz lea cld cmp push dec pop cmp repnz (bad) jmp outsl stos jmp ja int3 je sub fs xor repz dec jae xor out rcrb clc and mov adc in movsl push jno inc mov addb loope (bad) out push jp mov mov push clc outsb loop in enter outsb sub mov mov insb or push adc aam movsl xlat pop cmpsb jns out imul cmp gs pop cmp sbb in add in jg mov outsl sbb dec insb and xlat push popa sbb ret and xchg mull mov lret xchg imul in aad mov sub and or mov clc outsl ret mov add push xchg cld in add or das scas in test ljmp push pop das jae jnp test sbb movsb out outsl dec xlat fcomps rorb lret daa fsubs push out bound sbb adc inc aaa pushf fucom in sbb sub push xchg cmp loope rcrl (bad) negb adc mov arpl jp (bad) mov dec xchg mov xchg mov lret bound pop repz insl lds add inc (bad) test adc mov or add add cmp insb and mov imul int (bad) mov push jo mov iret pop clc xchg stos ss xor add repnz mov movsl pusha jl (bad) bound mov inc (bad) fist cmp scas mov jbe out out sbb mov cmp mov mov faddl vunpckhps cmp and cld dec xlat pop xchg outsb mov xor stc sub mov sbb cmp sbb push in gs lahf mov lods inc das pop sub shrl and jle push mov xlat jle mov and out sub mov pop movsl lret pop stc les mov jns adc sbb xchg in push in adc fldenv add ret cli dec loopne (bad) iret mov outsb mov xchg pop lret mov nop leave sbb nop pushf sub test lea dec cmc test hlt cmp int pop test push fldt xchg stc lahf imul xchg jbe rcrl cmpl dec mov sub std fsubl pop or addr16 (bad) cmp push push ret out mov push (bad) pslld mov mov xchg jp mov fbld pop popf add incl pop dec (bad) in pop les lods mov sub es fcomps clc daa test ds iret notb scas rcl push addr16 bound dec adc jns sahf pop lods cmp push jl enter mov icebp add or in (bad) cmp cmpb mov ja testl jns outsl das jb in or push idivl pop jl adc push push xchg (bad) int sahf mov add xchg sar (bad) ja push imul das subb (bad) notl leave jno mov movb stc and jp jl jecxz ja push test mov pop fdivs mov out movsl fstl sub sahf xor outsl dec jl pop push fyl2x movl mov cmpsb sti mov rcr icebp aaa lds xlat mov ja xorb les push inc shll jno jge mov mov mov test incl (bad) sbb mov leave enter ljmp out sub aad mov stos pop lret stos mov xlat xchg push jb ja bound fsubs mov adc jno repz scas xchg mov cli pop lcall lods push aaa (bad) out in fldl mov daa jbe xchg dec leave popa (bad) (bad) jae (bad) lock dec clc mov ffreep incb (bad) xor inc pop insb mov je sbb stos push jb mov mov or (bad) sub jp pop mov sti fnsave mov sbb lods bound repz cmpsb cmp mov jle ficompl (bad) negb push mov cmovno lret int3 out aad cmp pop cmc gs bnd mov subl cld iret iret psubusw or incl (bad) lea xor imul orb jecxz jle jle fcomip push outsl flds (bad) or test lahf adc dec xchg pop mov or mov adc mov scas imul mov cmp mov rcrb jmp jle sbb lds (bad) icebp mov inc outsb outsb push or leave arpl jmp incl pop adc fbstp clc or push out js jl lods pop loop adc mov dec xor jbe lahf xchg arpl loope adc cmp push scas jnp and incl mov pop (bad) cld sbb out ret jge in mov or pop test jmp xchg js cmp es and jb jae pop outsb xor lock mov fwait lahf fstps ret jl aam lret repz arpl (bad) in mov lock shll fnstenv add jmp sub lret xchg (bad) dec inc outsl mov pop cmp sahf add cmp icebp inc pop (bad) mov add pop and inc sti movsl dec inc dec popa push hlt dec mov rcrl in into aad sub fcomip lods icebp or dec (bad) idivb fnstcw es lcall incl push cld push bound jns mov xchg xlat sub mov das in std jecxz aam add out insl out addr16 fcomps inc and sub int3 gs xchg sahf sub out ja cli pop sti testl jg pop inc and fiadd push (bad) (bad) mov and push into int3 mov sub push sahf and dec ficom into out jmp xor xchg pop dec imul mov jp push movsl cltd dec pop push mov adc (bad) jmp jbe adc icebp pinsrw sub add adc arpl mov jl les dec sarl mov out out je pop sarw lahf mov xor and and faddl cmpsb inc mov push or inc mov lds sub mov mov cmp je in out lea cld (bad) dec lea jge ljmp mov movsl arpl jecxz mov frstor cmp repz dec cmp mov dec mov (bad) repz pop iret fstpt dec ljmp sub adc push aas loopne push inc jg mov into ss je je sub cmp cmc xchg lret jp imul mov mov mov imul add jb cmpsb mov mov out in repz in adc stc jg and push fucomip cmpsl scas cmp cld inc icebp ficom mov and lret add stos xchg ret push stos inc pop lret test dec stos mov mov movsl mov mov test lea mov jge add ret push fsubrs ret into sbb mov lea pop mov test ficom xor ja sarb cli xor dec dec loope mov hlt jmp mov mov mov push ret or cmc scas sub addr16 mov cmp fldl mov xor sahf sahf (bad) jp mov div cmp sub outsb xchg int pop leave dec rorl mov (bad) mov mov xchg inc fsubl lret rcrb std add xor es mov cmp incl sbb mov mov pushf sahf dec js add adc xchg or fmull cmpsl push lret sub mov int scas lcall xchg dec std data16 xchg call loope in (bad) ret jle shlb jne out jmp xchg push (bad) pop push cmp push leave push fist (bad) and mov sub out iret pushf insl add sarb scas cmpsb xchg js push mov mov pop pop add cmpsl fisttpl mov mov sahf jmp jg clc fcmovne ret lea push push inc dec aas jne dec addr16 jg pusha (bad) cs sub or insl mov aad es fcmovne jg scas cmpsb or xchg fstp mov sbb dec (bad) loop cld adc xchg clc inc and mov xor mov mov add mov add mov and jle mov loop mov or sahf sub sarl mov xchg and leave cmpsb scas arpl aam fidivl pop jg iret leave sub jl sbb stos jmp inc dec add add mov pop in fsincos sbb xlat (bad) push jg imul clc push xchg pop (bad) faddl movsl sbb push imul jg mov ljmp iret push xchg push mov int in mov sahf mov in scas clc sub cld adc lds lods mov add jl jo iret test mov in jno scas dec push jl insb lock jae xor repnz movsb fsubrp jmp xchg outsl orb mov jne in addr16 neg mov leave daa aam pop fmul cs bound shlb cmp pop mov adc scas inc mov loopne jp jl lcall (bad) push dec not lcall outsb and sub pop inc push lahf or pop inc jns movsb mov xchg mov inc mov in xchg fist cmp mov aas ficomp mov cmpsl jg aas clc es add push jmp cli jg cld xor add aam or les add lcall stc jge jbe test lret push dec jle xchg sub sub mov mov cmp cmpsb pop and inc ret out xor mov sbbl lahf mov stos insl pop (bad) mov aam push test mov addr16 cmp cmc loop mov js fst jl jnp negl aaa mov sub sub xlat negb clc or sti lock push pop cmpsb lahf incl or mov pop sub movsl xor or int3 faddl pop mov mov or icebp popf testl aaa dec sub ds xchg pop mov sahf arpl js enter xchg (bad) aad fisub bound int3 sti sub pop decb sub add daa aam adc les jecxz lods add sbb xchg xchg fdiv pop nop lcall lds lea or dec xchg repnz cmp imul push aaa jge dec imul repnz pop fyl2x ja jl jecxz jle sbb dec xlat scas mov push out sub lcall sbb xor lods sub jp sahf andb fbstp mov cltd xchg cmp mov (bad) xchg push sbb sbb mov popa xor xchg fwait xlat mov mov adc dec gs mov dec push jno jo cli (bad) mov imul bswap sarl dec xchg (bad) cwtl jnp jne pop pop es pop jne mov imul out cmp sub (bad) pop fist das test push data16 sarb sbb dec mov into xor inc cld int3 push inc add lahf pop out mov popf push inc push fdivp jge in jne ds lea test cmp loop mov mov sbb lods stos (bad) mov insb cs push xor ret aad dec and bnd incl fistpl mov mov call cmpsl (bad) adc fistpl shll push and adc push std out jno sub xor mov fs pushf xchg xor movsl stos mov jle pinsrw jb adc add out sbb jb hlt movsl clc or fisubl aaa pop cmp rorb jns add push cmp data16 jp imul mov ror pop cs (bad) jae (bad) (bad) in xchg and xchg insb xor ds mov les adc fdivrp xchg push cmp push or stos adc xchg (bad) test roll and xor test aam xchg dec imul out lods (bad) (bad) xor xchg and or scas mov pusha dec sub adc in sub cmp sbb sub in lock push addr16 cmp xlat in sub sbb xchg repz add pop mov je pop lock or mov dec sti and mov insl push pop sarl aad incl adc out out mov outsl push push test lahf lcall and js (bad) push fwait in mov loop jae inc rcrl lock dec scas and out jecxz cmp xchg into xor cmp xor jo insl addr16 inc fs jno,pn dec outsl (bad) (bad) incl test pop or push push popw and jp out aad add xor ljmp inc es add loop lret xor lret add xchg mov lods dec push pop mov dec lds in jge clc jb aas or iret pop mov adc sub fisubr or or sbb loope mov std sub dec mov test lds sub loop in scas or mov aam nop pop lret enter testb ja jl movsl pop mov ret mov int3 nop mov mov in fwait mov mov cmc imul dec (bad) imul adc mov sbb adc cmp jmp dec fist lods insb xchg add in outsb mov add pop idivb cmpsb mov pop adc jae sbb js ljmp adc dec rorl inc jne int3 push push push cwtl out sub clc cld inc loop adc test or mov push cmp cmp pop pop call sub mov jle out sbb cmp xchg pop mov fstl jns xchg leave and (bad) mov pop xor push ret repnz repz cs imul jl outsl outsl movsb adc jg mov cmp (bad) mov mov xchg or imul mov lods sbb jge sarl inc dec sbb (bad) mov lock test imul cmpsl mov icebp out (bad) mov ljmp cmp or mov mov push mov lret (bad) push mov lcall les pusha jecxz dec out fcmovb add jae sbb lods mov ret cmp cmc es fildll fistpl orl je cli xlat fwait popl in push addr16 movsl mov mov dec or sub fistl pop shrb clc pop push pop mov sub into pop pushf push cmp test ret popa icebp repz insb fwait ds lea cmp cmp xor ret stos orb out jp outsl lods inc loope in divl xor loopne cs push fistp mov pop cld (bad) out inc inc divb jg xlat pop movsb inc inc scas movsl adc cs inc inc cmp jmp pusha jns nop sahf jle cmp jnp inc push in movsl sub inc jae hlt incl fcos add (bad) std mov pop clc lret loopne les sub in push xchg push imul rcrl mov xor and xlat xchg clc jp mov xchg jge cmp inc jb inc jbe add inc imul out mov jnp (bad) fistp fcomip push mov in inc loop jg insl mov push inc mov xor nop fnsave rcrl imul mov loop pop enter fstpl in notb xor sbb pop pop inc pop aas sahf in or call sub cmc movsl pop adc int3 cld jmp pop lock les icebp add sub out jo xchg dec pop sahf mov xlat rcrb incb lock scas or (bad) adc inc mov cmp ja iret add movsb scas xor mov xchg and mov fstpl inc in inc xchg sub push xchg gs cmp decb mov xchg repnz loop in aaa cmpsl ds pusha and addr16 jne (bad) jb incl sub fistpl mov scas lods incl loopne pop lock lahf (bad) decb repz mov mov outsl mov fistpll jbe sbb (bad) jae sub mov push lret arpl cmp jg xlat mulb clc sbb jmp out mov pop or jo addr16 push xor or inc sarl cmp scas out not std mov fcmovnb loop fist aas push ror lea ret (bad) mov imul into sub push mov ljmp cmp mov je xchg and daa fildll in (bad) adc jecxz (bad) jg incl push mov cmp lock scas fbstp es das push ror cmp pushf nop dec into into (bad) in cmpsl cltd lods arpl mov xchg iret leave mov xor (bad) mull imul das pop lea sbb pushf leave adc fistpll jbe scas movsl jp ret das xchg cmpsb xchg js in icebp repz mov xchg add adc xor addr16 outsl sahf push cli fisub movsb imul sbb cmp xchg imul adc (bad) inc js xor jne push mov mov nop test jnp pop (bad) xor push jo mov (bad) bound inc adc jb add clc jp dec addr16 out sub clc inc or cmp jnp sbb jnp or mov repnz mov mov mov scas cs and out cli adc jl sub out or jbe sar sbb aam push mov mov mov btc mov fcompl inc (bad) in or lcall mov out out mov (bad) daa sub mov stc xchg xor es aaa add test imul shll mov nop xchg sbb push aad sbb cmp pop or adc in mov gs lcall xchg (bad) (bad) fdivrs cmp mov jne mov and stos inc pop jg stc mov sbb mul jo cmp adc mov (bad) mov (bad) incl push adc sub cmp jne (bad) divb cwtl sub add in (bad) in jl sub dec fidivrl and cld jae jmp mov jne jmp mov xchg fwait mov stos add cmp add jecxz pop dec xchg jmp enter inc push push xchg iret lea dec or mov sar inc mov popa ljmp fwait loopne (bad) scas or dec mov or dec cmp add xchg jae stc xchg push clc push icebp ja xchg (bad) loop ret sbb lret imul sbb sbb sbb data16 decb cmp cli and sub sub dec add mov sbb incl (bad) incl sbb or shr xlat imul sub inc or or mov lret jmp je int3 xor daa aam data16 ret in inc cmp pusha cmp sbb cmp sub js (bad) lcall test into cmp in pop and lret mov xchg and add push in cmpsl test dec jno outsl test std xchg sbb dec lahf dec leave loopne push pop fsts mov mov into ds pushf cmpps movsl push cmp push and je cltd lock lods icebp mov out test loope jns daa pop fwait ss pusha jne sbb push sarl xchg cmp lds addr16 xor xchg loope call push mov mov stos push dec aam jbe xor (bad) stos inc xor jo mov fwait cld popl cld popa and js inc mov xchg cmp dec je sub cli xlat push icebp addr16 or incb xlat fdivp lret ljmp pop addl inc push pop (bad) cmp push push je popf (bad) xor imul adc add sti aas xchg ret lret cmp shrl sbb fcompl stos sbb push daa aaa stos mov cmpsl imul push imul ja xlat xor stc (bad) mov scas dec lods sub jmp lods mov and ja pushf push lcall dec out add inc sbb pop iret les aad ret inc outsb and int3 stos pmaxub sub xchg xor fbld out mov sub shl xchg inc jl mov cld add fwait cld aas loopne push lods mov lea pop pop imul dec imulb js pushf mov cmpsb scas jg in lock mov (bad) cld pop jne pop add sti cmp andl dec fcompl outsl dec lock ret push cmp insl (bad) out stos or lea cmp pushf (bad) xor dec fimul cmpsl mov icebp push jmp cmp mov mov xchg and xchg pop jae mov aam dec xor pop ja mov mov cmp push pop sub jecxz stc incl ret pop cwtl loopne stc push loop aam inc in outsl and (bad) sub ret jecxz xor jge adc inc jnp push aaa stos movb nop dec jge sbb ds sbb not hlt aas ja push sub leave (bad) shr in outsl mov push pop push scas sbb mov mov lock mov xchg dec xor sar lcall dec or xor mov push fsub je mov dec in mov ret cmp jecxz xor mov outsl lods ds sbb push and ret and xchg pop mov in jmp push dec cmp xchg ljmp gs mov pop je dec mov mov out mov mov mov insl sub js sbb stc jb and out or sub pop xor lret jmp dec rolb mov aad dec loopne sti mov out popf (bad) les and cs fwait mov pushf incl sahf sub shl push jne loope add lods jg dec mov incl lock sbb jl stos pop add mov scas jle cmp mov jno pop mov in imul xlat lods icebp hlt icebp hlt mov addr16 ret bound orl sub cld pop imul scas das mov ljmp sbbl xchg mov cmp pop test mov cmp in sub movsl nop repnz int cmp lds or lret mov stos leave leave cmp lahf mov pop jecxz sbb scas (bad) ds jne push push jbe push aam cmp sahf mov mov outsb out mov je push or xchg mov test xor imul mov repnz sbb adc jecxz mov push out pop ficom mov cmp dec mov outsb and add xor out les sahf pop leave pop sub test data16 mov leave movntq decb fwait ja out in push jns je mov fnstenv and xchg aad adc push push (bad) cmp sub jmp scas mov enter inc sar loopne into push int cmpsb out call scas sub cmpsb mov mov fnstenv scas jmp iret mov scas cld dec js jno test rolb mov ret pop cmp adc rorl divl mov jl test inc and jp sbb adc xchg in fildl loope das adc and push jno mov call or adc adc imul int adc dec cmp adc xor jle stos jg cmp es shll add ret xor cmpsl scas imul (bad) shll scas dec lcall inc lock or mov jae notl (bad) stos cmp pushf outsb (bad) pop test cmc loop fisubr or popa and jno pop jno stc loop test in gs fist je outsb jge sbb pushf mov jg mov lret popf icebp (bad) pop push test cmpl dec xor scas and or sub mov sub push lret push out mov in ds ret dec adc int jp lods fwait jmp push xchg scas out movsb xchg push xchg lret cmp cmp mov mov pop dec xor add ss stc aad push mov inc stc lret or dec incl xor jg scas shr jl cmpsl enter and in or sbb mov imul push mov ss lret stc jle addr16 test cmp adc out mov cmpl das xchg inc xchg mov push test lret nop iret mov push in xor fldt and out in pop cmp ja in call imul mov add clc dec loope push jl xchg push fstps lods push stc aaa xor (bad) fldl (bad) rol pop repz (bad) jecxz mov subl mov sub repnz push lret data16 jmp cmp dec push repnz sub ljmp stos ret das fwait sbb cltd mov jno jg pop lea mov shrl jne mov jno cmpsb xchg popf dec (bad) imul rol adc jae mov fwait lea push lock out (bad) test movsl pop incl test jno adc xlat test mov xor xor into pop ret xchg outsl add subl sbb dec jmp and repnz pop jns inc bound lret shl aam popf and (bad) popf or jno lea inc mov sub pop (bad) xor pop out cld daa ss sub fstps popa test loop (bad) mov xchg push cmpsb popf shr shrl xchg jbe sub cmp aam jno daa sub sbb jne adc mov (bad) sub lcall (bad) xlat jae (bad) loope xchg loop lds addr16 xlat pop lods push cmp dec or cmp xchg in xchg mov incl nop std pushf daa add jno lahf sar gs ret jo xor add dec movl clc arpl inc sbb push (bad) das push xchg fnstcw push mov lahf mov add or notb stos xor push jmp jb xchg dec jp shrb and mov mov repz cld mov (bad) sbb pushf mov jl roll pop pop cmp push mov push fsubs jp mov sub stos cs cli (bad) push push jecxz mov pusha in movsl out pop rcl add mov iret xor imul or inc (bad) push cmp jne popa jmp pop sbb inc loop clc sub lea test lock in mov push cwtl lods enter push sbb (bad) adc jns cld adc (bad) fimull mov and data16 addl fstps sbb pop test jo mov cs (bad) dec cmp loope insl fstpl sub sub xorl mov pop es mov xlat scas aas push mov hlt stc push aad jle sbb lcall inc inc push ja cmpsl cmp iret test mov cmp inc mov fbld mov cmpsb daa adc std fiadd addr16 addr16 or xchg adc rcll stos imul jb shlb xchg add mov push les mov negl xchg js cmp pop mov out mov mov inc push sub fild out loope int mov pusha add jb ja dec xor inc add ljmp jb popf bound jns std dec out mov (bad) popa add adc and mov sahf sbb xchg xchg loope push or inc dec ss push dec sub (bad) jno and fsubl jge imul in icebp sub xor lock mov in fisttpll inc mov daa mov es jnp clc lahf pop (bad) xlat push imul mov mov add in mov xchg movsb fsubl cmc dec push rcll in inc cmp les into cmp and jle mov mov and outsb jl bound xchg pop mov pop push jmp dec pop fwait push test fcompl inc outsb (bad) insb mov and div nop stos push inc pop daa test jl pop dec jns ds aas sbb sub imul push cmp mov mov cmpsb fcmovne scas xor lret sbb jnp dec mov and notl cmp mov fs or pop fnsave xchg ds push hlt ficomp loopne ds dec lahf data16 jg lahf lea add sbb insl hlt lods push in in mov adc cmp fdivrl jp imul icebp add pop movsl mov scas daa or lds xor cmp (bad) imul icebp adc inc cmp shl cmpsb xchg mov add adc jbe fs push pop dec xchg (bad) or dec outsb and xchg mov sbb lea repz cmp sub repnz scas and adc fcomi cmc cs xor test xor dec cmpsb sbb add cmp setns leave inc lret ss pop (bad) stos repz inc or stos ljmp xchg push lret loope inc and (bad) push rorb cltd xor incb cmp xchg lret sbb sahf cmp sbb stos push mov (bad) les out jmp adc cmc fstpl loop (bad) int3 rcrl cs adc pop push add in cmpsb ljmp (bad) or nop sub dec scas (bad) xlat push xor sti inc jo test jno mov jge xchg jns dec shrb out sti sbb (bad) jg cmpsb pop sub aad lods hlt pop lods sahf incb lret int lret mov sbb jmp jb idivl dec negb cmpsb scas cmpsb scas popf jae fcoms cld mov fidivr cmp jnp cmp (bad) ds fbstp xor je adc jecxz clc push adc mov jmp lods sub sbb jbe out pop inc outsl push mov sbb js (bad) je jg cmc mov (bad) jns dec push imul xchg (bad) jp fcompl xchg sub in (bad) dec sbb lret add arpl daa cld cmp cmpsb pop or xchg pop stos xlat mov dec lods daa adc rorb fidiv clc lahf movsl call cs cld arpl (bad) mov and pop push ret icebp ss in and dec or outsl insb jno or inc stos push xchg xchg sbb mov jp cmp sarb mov dec aam xchg aas insl loope and mov adc lods adc arpl std popf jg pop xor aaa push (bad) ja insb ss push and add dec stc (bad) mov stos xlat mov cmc mov mov xchg push cmp xchg les lahf pop pop clc pop loope mov insl dec (bad) jo fdivrl or xchg and xchg mov loop cmp push ficom icebp scas test jno mov mov dec ficoml inc lock scas cwtl and insb cli test mov lret jmp imul pop push sub enter cmpsb scas mov xchg stos idiv dec adc pushf out cld or test jmp push dec jbe mov xor mov push stos sbb cmp std push mov aam dec or cmpsb sub pop cmp lcall loope popa in push adc into mov push push sti int fldenv lcall pushw insl sbb repnz inc adc or stc inc imulb rcrb scas mov dec cltd out and lea fistl push test xchg stos mov enter dec jno pop cld movsb in outsb lds mov cltd sub outsb incl in push pop mov sbb (bad) pop jno test push data16 mov lret shrb and dec dec jp aas stos sbb cltd add insl mov inc xchg daa xor in mov mov mov popf movsb nop dec pop in lea loopne in dec (bad) les aad gs sub cmp (bad) icebp mov mov iret and shr dec vpcmpeqd hlt sub popf mov jle mov (bad) push ret movsb cmp idivl and mov loop in incl mov mov jne leave sbb mov xor into cmp hlt fcmove mov mov insl out adc daa addr16 and sbb add scas mov rcl lods sbb inc (bad) loopne push cmpsl xchg mov into pop idivl pop js push push fnsave repnz dec out stos pop fiadd mov mov mov repnz xchg xor cmc stc dec add aad movsl sub fdivr insl loop je data16 sub ss fisttpll xchg rcr inc popa ss lods mov insl enter aam notl aas dec mov push pop mov mov or icebp into jae sbb push xchg and mov lock xor popa sub jbe inc out cmp jnp xchg cmpl mov aam xchg std popf je lods xchg popf xchg jge push sbb mov xchg mov mov cli xor clc inc sbb mov jne cs add rcrl inc stos pop jl jge loop dec loop sub push pop add loop sub mov (bad) mov and movsb jmp cmp add daa lds mov jle scas fidivr jecxz sbb stos mov incl (bad) mov mov push push rclb add mov stos loope scas scas ja notl loope es ret mov push stc scas std aad and cmpsl fucomp mov xorb jns adc sbb outsl dec mov icebp mov sbb cltd or jne mov in enter loope leave ret push xchg and int3 in outsb lcall xor icebp cwtl cmp cmpl mov lret mov adc loope mov mov inc out ret pop fwait sbb cmp minps mov loop popa lret clc xor (bad) adc and loope and add jno push imul insl or cmp adc dec sti jo mov sub shl pop insl sub sub aas mov pop test shl gs out push out lret sarl push icebp lahf pop xlat in lods push adc (bad) das mov fcmovnu xchg push mov add sbb xchg jmp adc jl cmpsb dec (bad) pop cmp test jg mov pop fsubs dec push imul das int arpl dec cs call sbb sti inc pop mov xchg enter add rcl insl loopne sahf sub cmpsl xor or stc push scas pop mov jge pop cmp sti outsl (bad) or mov sbb pop (bad) repz push jnp leave xor gs dec test jg pop iret js movsb mov mov sbb mov movsl pop jp aad out fdivr stos adc lods sahf mov ja (bad) stc insl and push out pop pop bswap adc add imul jbe mov jo and hlt std out fs shrl xor jo scas sub or shrb mov scas sbb pop jbe inc loopne stos xchg adc pop int3 icebp sbb enter mov xchg das cwtl icebp aad in es lea outsb movsb jg pop xor jge pop lea mov push in sub nop adc mov scas cmp fcom mov aas push mov sbb dec div iret loop out call out fstpt adc insl jg daa jge insb jmp push pop cmp outsl mov and and pop jo out adc daa and adc fidivrl lods fidivl sub or cltd dec sbb (bad) leave jbe mov lret hlt icebp sub mov mov xor mov inc cld sub jne (bad) popf outsb stos and jmp fwait and pop pop jmp insl sbb fistpll push popf push cmp mov das xchg mov in and imull adc pusha cltd mov hlt incl or hlt iret pop clc xchg push sar pop popa testb push loope jae inc lret gs push cmpsl inc adc outsl fnstsw mov cld pop xchg bound add sub leave xchg adc xor add mov jne xchg cli mov repnz dec adc inc or fimul inc pop outsb comiss cmpsl jns iret (bad) loope hlt xor iret lcall sti xor mov imul lcall dec into push imull movsb mov adc mov mov or jb test cmpsl cwtl cmp mov jmp fiadd fldcw xor mov aas or (bad) push push negl sbb nop fidivl mov lahf out scas lret sar and cs loopne mov jle mov imul cmp fist adcb pop and rcrl inc mov mov sbb icebp mov jno imul dec dec or outsb adc pop add (bad) into inc cmp push loope dec mov cli xlat cmp movsl es int push ljmp fadd pop xchg out pmulhw stos pop cmp add xor or mov sbb movsl cmp insl sbb or mov sbb mov (bad) mov inc repz sbb cmc jge mov lret sub (bad) fs dec pop mov inc push push loopne or cmp adc movsl cmp in fildll rolb mov sbb pushf jae movsl cmpsb and add imul leave leave mov cmp lods cltd popf test (bad) sbb sub mov mov out push popf push pop sub out jle push pushf cmp inc jns push inc insb xor mov test or pop test movsb fsts out jl sti pop mov and pop dec xchg sub cld sub ds movl (bad) (bad) mov xchg mov int3 test icebp imul sub push mov daa in mov arpl test mov int3 sets inc ljmp add ds inc (bad) sbb add mov in dec sbb xchg iret stos push jae jge or jb mov pop dec out jp mov (bad) lret inc aam add lods mov cmp jns mov int3 lcall icebp mov xchg (bad) pushf xlat ror fdivr adc (bad) call lods adc mov xchg cli fs (bad) or fwait cltd cmpb adc jg push jp inc aaa dec adc rcl insb add (bad) xor aam lods sub or mov stos mov insl mov add out call enter insb jne push int jmp in adc pop sbb cwtl lock xchg push mov xchg insb sahf iret jnp cmc cli mov xchg pop mov lahf js lds idivb cmpsl sub cmp mov jb sbb fdivrs cmp pop jmp jns sahf ljmp jns inc adc add ret in lock inc stos idivl sub dec lret cmp mov push mov lea mov add jp (bad) jns ljmp lahf cli adc push mov arpl xchg roll push cmp gs in iret lea xchg sub nop xchg push dec jmp ret sarl movsb (bad) ja lods pop das pop out bound xor mov xlat add push imul sti inc xor scas add incl or cmc jecxz push xchg rorl dec inc sbb aas movsb cmp icebp push xchg addr16 sti cmp lods pop pop cltd shr ss js pop sbb push daa nop mov and sbb movsl shrb daa mov push dec jbe xchg pop (bad) pop mov push dec sbb popf fisttpll jnp ds les cli incb into outsl loop mov sbb mov push inc mov or and int3 push jge into in (bad) (bad) (bad) push sahf std out cs ret and je movsl jne (bad) fldl xchg scas and repnz clc fisubr jecxz jle jp out dec xchg fnstenv ficomp cmpsl and add jno mov mov sbb mov jecxz in sahf cmpsl insb mov dec icebp lea pop mov mov jp xchg sub lock inc push aad add cmp fwait test imul fndisi(8087 inc mov ds ret cmp push imul pop mov bound cwtl fild add idiv or lods dec sbb cmp jge (bad) js aas int outsb xor push out mov stos das mov out xor or pop cmp cmp xor push jge add outsb mov adc add mov arpl stos mov ret aam lcall xchg insb dec out push jg cmp lods pop pop sub and mov daa xchg jg (bad) sbb test push sub inc inc push fisttp lea push cmpsl push aad sarl lahf icebp push daa sbb clc cwtl xlat xchg rcr leave testb js imul mov (bad) mov adc pop pop jbe pop test lods xchg aaa cmp loope pop pop and int3 xchg and hlt jge lahf add mov popf rolb fucomi add inc jge push (bad) sbb insb mov mov jae ret (bad) inc outsl dec repnz ljmp insl jae xor mov dec sub in dec sbb mov xor push mov ret sahf dec jns call pushf push push pop jnp not in (bad) sti sub je sbb inc sbb or pop mov pushf lcall and scas adc cmp mov in lret inc cli js fidiv mov bound adc sbb (bad) fwait jo insl pop inc mov (bad) cmp jb cmp bound movsb (bad) fwait pop sbb xor mov jecxz pop (bad) jno mov outsb mov sbb stos das icebp add bnd push gs fistpll mov int test ljmp dec data16 adc jp pop (bad) arpl pop insb push pushf addr16 add cmc pop pushf push aas test pop dec mov sbb and pop scas jge scas pushf jne inc mov sub jno daa lret pop rorl cli loopew in mov mov push dec mov inc pop mov loop mov sahf jns push lods sysret std scas dec imul push movsl push mov cmp mov (bad) ss push pop pop pop leave aaa popf adc pop mov jp adc icebp (bad) movl lds sahf mov and loop (bad) mov push xchg popf lahf (bad) call stos bound ljmp and push cmp pop xor xor mov fsubrl js dec mov shlb cmp cmp sbb jns cmpsb mov out mov lret mov neg repnz mov inc loope mov roll (bad) int3 nop test loope fsubrs scas dec mov cmp cmp xchg aaa add add push sbb setge out shr mov cmpsb cs jle jl dec (bad) mov call ja push mov lret mov into xor out pop pop push sub in addr16 (bad) mov fs mov push fidivr stos jno (bad) in mov dec fs addl or or adc mov mov aas jge push pop cmp xchg add add xlat (bad) lcall repz test inc mov adc add insl data16 fadd popf (bad) mov xchg insl call cmp repz loopne mov jle rorl push into cmp push pop pop lods sub cli faddp into scas das mov scas aas data16 mov push lahf push mov push mov shr loop jle enter arpl mov sbb orl (bad) mov sbb lock fwait movsb out push mov jp clc arpl dec cmp and dec insl cmp dec mov and inc rcll cmovae fistpl loop outsl mov sbb inc mov cwtl (bad) loopne and xor xor leave inc sbb insl arpl leave insb js test inc jns sbb loope pop pop dec rorl and mov sbb dec mov dec cmpsl adc mov arpl lods mov loop sub push icebp and mov test js repz rol inc sahf xor xor out in test bound jns fcompl jno xchg sar push scas test aad and rclb mov in mov push incl push xchg fs jle jne xor adc out inc cmp push imul lea cmp rorb mov xchg mov repnz ds sub push mov adc mov outsb cmp mov fstl jns (bad) lds inc add mov push pop aad cltd das das jecxz mov and ret xlat repz mov cmp xor mov out ja add in mov push and daa mov push lods or imul jmp or dec out les pop or outsl in je in and dec insb push cmp jp in push test push pop (bad) int3 incb les push insb (bad) outsl fnstenv outsb icebp mov mov and cmp mov fwait (bad) lret imul (bad) loopne or sub sub push pop xor sar jbe ljmp mov shr insl fsubrl sub dec pop int3 test (bad) in addr16 pop inc mov int xchg nop cmp jbe shlb dec jne mov xchg mov adc inc out mov dec mov dec sar mov xchg rolb mov in dec jecxz arpl or out mov inc cmc jmp aam push mov jae jl aaa sete lea movsl (bad) aad dec cmp mov jno (bad) stc pop push xchg pushw icebp (bad) in imul outsl fsubrl (bad) incl psrld dec push cmc stc lahf sub push dec pop fcmovbe cmp add jle loopne mov je je fsts push imul sbb dec and vcvtss2si pop or pop dec xchg inc fldt in arpl out dec mov or jb pop out jmp jae test pop mov incb leave jo jmp outsl in aad mov fsubrl in cmc pop adcl dec mov sbb outsb lret (bad) jae xor fcomps push scas mov dec or in xchg push xor repz cmc push xchg enter xor add pusha mov dec loope xchg aam mov jmp (bad) daa pop pop dec lcall push xchg cmp int3 scas les jbe cwtl int3 mov push sarl sub xchg ss and aaa dec hlt mov popa imul fwait lea xchg jae push out out push outsl es addr16 push arpl sbbl inc mov mov mov inc out je arpl mov and cmp popf xor or xchg jns pop bound out xchg add xor jnp leave addr16 jns xchg cmp xchg and jnp push (bad) dec mov (bad) push rolb mov pop pop jge jp stos push scas mov pop stc cmp xor dec rol gs mov daa sahf imul xchg jmp lods mov jge inc repz pop sub inc jg into inc mov xor jecxz jae stc fildll mov mov jg jae stos popf shl std loope jno xchg push incl dec xchg pop ret xor loop jp jne push into rclb push mov outsl sbb jnp lcall fisubrl lock mov xor mov and push push pushf paddusw sti pop jae out pop (bad) (bad) or push js (bad) aad imul adc into xor xchg dec mov mov incl ret jg inc loop (bad) sti sub and jnp dec lret clc jno cmp outsl test mov test pop inc mov cmp cmp imul push imul popa jmp movsl movsb lcall in jg int xchg faddl push ret mov push inc and mov adc sti xchg sar pop sub in xor vrcpss lods scas mov stc push mov mov fisttpll mov and lret mov dec sbb cld inc mov stc jae add push sarl je push stos (bad) test lds in hlt push cmp enter mov pop addps cmpsb push sahf xor incl cmc xlat adc dec adc inc push in dec jl iret add xchg cmp sub cmpsl call test cmpsl mov lret or sbb js fcoml pusha js cmc aad ds xor clc mov push loopne addr16 imulb add jae mov int inc xor aaa or sti fprem1 cli push push mov bnd mov add jl add mov pop mov mov xor pop into lods push push xchg jno fucomp je cmp xlat and sbb ljmp les lds test outsb fmuls test sbb lds std outsb jns mov cmp loop test icebp out xchg xchg nop stc jb insb push and fsubrl push dec out mov sbb aaa clc push push and int lcall pop jno xchg fstpl sahf incl adc cs sbb jae jp or push fistl addr16 (bad) pop (bad) unpcklps flds fwait xor fldt ret (bad) and shr sti mov push jmp in stos cmpsl outsl adc stc mov sub jle jp in adc div imul out bound sub in pop loop in or mov test pop sub in ret cmpsl jle aam add cli jp imul arpl int3 jl pop dec fsubl xor xchg cwtl out xchg pop add jno push imul cld xchg push bound mov lcall (bad) pushf mov gs arpl dec clc arpl les out lods sub mov out ja xor repz rcpps test push mov jl jnp test lret pop mov fs or repnz add cltd gs adc or addl mov pop jge push arpl push (bad) mov incl cltd sti mov data16 movsl mov pop dec das inc leave jl stos (bad) loope jg js shrl popf pushf mov hlt enter jl sbb mov fsubp push push mov add scas lcall lcall dec int3 mov fs aas fst mov inc iret (bad) (bad) add add add fisub out mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 arpl sub push jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push gs cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc push inc push lcall add sbb add aam add adc add add jae add arpl outsl add add add and imul jne jb add outsl add xor add insl add add pop xchg add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc jae gs cs jb ja outsb addr16 arpl add add or outsl outsb inc popa je or outsl outsb push imul push jns je insl cs jb ja outsb addr16 imul add add or add add adc jae gs cs jb ja outsb addr16 imul add push addr16 or add add add add pop test add add add add add add add or add add inc inc add add and sub add add xor add add and test add cmpsb dec add and add add and test add dec jo add adc add add add add testb add add add add add add add or add add add add add add add add add add add push push add add add aas aas add xor add aas aas aas or dec dec or aas aas or dec dec push ss sub aas aas or add add add add add add add add add add add add add add aas aas aas add gs pop pop pop or jae imul push push push adc addr16 popa imul pusha pusha sbb push push push and inc dec dec das inc inc inc xor inc xor aas aas and inc inc sbb cmp adc sub or and pop add add add add add add add add add add xor add dec dec dec or popa or bound adc adc jne jg jp sbbl (bad) (bad) and jg jbe jl ja jl jae js jb jbe imul imul dec pop pop pop push push push pop pop push push push pop dec dec dec gs dec dec push inc inc imul cmp inc cmp cmp cmp xor cmp cmp cmp xor xor sbb sbb add xor add add add add xor xor inc inc inc adc push sbb and sub xor jae jo je ja jnp jnp jg jg (bad) push jg test addl jge subb jge jne jns jno jne imul gs arpl push push push xchg dec dec push cltd inc dec dec fwait inc inc inc fwait ds inc xchg cmp inc mov ds jge cmp cmp dec aaa cmp inc xor aaa xor cmp sbb sub or and pop add add add add add add add add aas aas or inc adc push pop push pop pop sub popa gs insl insl push outsl jne pop jbe jnp jp jg addb addl test cltd jge (bad) sahf jns jle jae js outsb jno test push stos pusha arpl pop pop mov push pop mov push push mov dec dec mov inc inc mov inc inc mov inc inc scas cmp cmpsb cmp ds cmp xchg aaa cmp test cmp ja cmp cmp cmp cmp cmp sub cmp inc pop das das aas adc xor or sub push add add add add add add add add add add aas aas aas or inc adc push push push pop sub pusha pusha cmp inc imul popa ja jl jge (bad) ja test mov mov mov addb scas jne jnp outsl jb mov insb insb mov gs pop pop mov dec dec dec mov imul je fldl dec mov cmp inc mov aas aas mov cmp scas aaa cmp mov cmp mov cmp jle cmp outsl aaa cmp pusha cmp push cmp ds cmp inc xor cmp daa ss aas sbb aas aas adc cmp or add add add add add add add add add add xor dec dec adc push sbb popa and sub outsb xor ja jnp jge adcb xchg mov mov js mov mov jg xchg jbe jp jo jae imul pop pop pusha scas push push push scas dec pop pop mov addr16 pop mov int3 cmp cmp cmp mov cmp mov cmp mov cmp aaa cmp movsb aaa cmp xchg cmp test cmp aas push cmp inc inc cmp inc cmp and aas dec sbb aas aas adc sub push add add add add add add add add add add xor add dec dec dec or pop push bound adc jns jne jg jg jg (bad) mov xor mov dec test sbbl jg je jnp outsl je jbe insb insb jle data16 pop lea push mov mov jne iret ljmp ret mov (bad) lcall xchg loop dec dec mov aaa cmp mov cmp mov cmp mov cmp mov cmp mov cmp aas test aas aas mov cmp inc inc jg inc inc jo inc inc popa inc inc dec push inc inc inc inc inc inc inc xor inc dec dec push dec dec dec adc cmp cmp xor xor add add add add add add add add add add aas aas aas add xor pop pop pop or jae jg jg jg lea mov sbbl (bad) (bad) and (bad) daa jbe jl jne jne insb jo aas imul gs pop pop pop push push pop popa insl insl popf mov pushl leave lcall mov pushl aad outsb sahf mov leave aaa cmp lahf xor ss aaa cmp lods cmp ds cmp mov ds aas aas mov inc inc lods cmp inc inc mov inc inc inc xchg inc dec dec test dec js dec dec push dec dec pop inc dec dec dec inc dec dec cmp dec dec dec and push sbb dec adc inc or dec dec pop add add add add add add add add add add push push add aas aas add push push push jo jo imul adc adc bound pop dec push dec sbb mov outsl mov sar imul pushl sar jns fdivr js sar lea push pop lahf xor xor cmp mov cmp lcall aas mov cmp inc inc lods aas inc inc lods inc inc inc stos inc inc inc test inc dec dec sahf inc dec dec xchg dec dec dec mov dec jg dec push jno push push bound push push dec push push inc dec dec dec ss dec dec sub push pop push push push push inc inc inc (bad) cmp sub sub add add add add add add add add add add add aas aas aas add aas aas add push adc mov pushl (bad) pushl aad jae lret popf mov pushl xlat (bad) jp fcos jns xlat pushl sti pop jp mov xor xor cmp insb cmp jle,pt ds xchg inc lea inc inc cwtl inc inc inc sahf inc inc dec mov inc dec dec movsl inc dec dec movsb dec dec dec mov dec push push cwtl dec dec push (bad) dec push push test push js push push push push push pop dec push push dec dec push push ds dec dec xor dec and push push sbb inc adc aas aas or dec dec pop add add add add add add add add fs int3 pushl aad jno aad jno (bad) pushl sar insb mov mov (bad) jp fdivr jp fcos jns fdivr jns aad insl pushf mov jge cmp xor cmp ss ds cmp inc pop cmp inc inc insb inc inc inc je inc dec jnp dec dec addl mov dec nop dec dec dec xchg dec dec dec cltd dec push push fwait dec push push pushf dec push push fwait dec push push xchg dec push push xchg dec push push mov push jge push push jo push push bound push push dec push push inc dec push push cmp dec sub dec and dec pop inc inc push rdmsr dec dec or sub push add add add add add rcl mov pushl xlat pushl aad jb aad jb (bad) pushl lcall mov pushl (bad) (bad) jnp fdivr jp fdivr jp fcos jns xlat pushl sar data16 cmp ss aas aas sub inc cs inc ss inc cmp inc inc inc dec inc dec dec push inc dec dec pop dec dec dec push dec dec dec jns dec dec (bad) dec push push mov push (bad) dec push push xchg dec push push xchg dec push push xchg dec push push (bad) dec push push mov push adcb jne push push imul push dec dec push push aas dec push push xor push es push push sbb push push adc dec or xor xor add add cmp lret mov (bad) pushl pushl (bad) pushl (bad) pushl aam outsl mov mov (bad) jnp fcos jnp fcos jp fdivr jp fcos jp fdivr jns xlat pushl lret jge (bad) das aas aas adc add add cmp adc cmp inc inc inc sbb dec pop inc dec dec es inc inc sub dec dec xor dec dec cmp dec dec inc dec push push dec dec dec dec pop dec push push fs push push insl dec push push jbe push push jle push push test push mov push mov push mov push xchg push adcb js push push insl dec push push pusha dec push push push dec push push inc dec push push cmp push sub dec push and dec pop aas dec dec adc dec dec or dec dec pop add add add add jg add mov pushl fdivr jne (bad) pushl (bad) pushl pushl pushl xlat pushl jmp mov pushl (bad) (bad) jl fcos jnp fcos jnp fcos jnp fcos jp fcos jns xlat (bad) jns aad outsb lcall add add add add and pop cmp cmp aas aas aas or aas aas adc dec dec adc dec dec sbb dec and dec sub dec xor push cmp push inc dec push push dec dec push push pop dec push push bound push insb dec push push je push push jp push push jle push push orb orb jge push push ja push push outsl dec push push fs push push pop dec push push dec dec push push ds push push xor push es dec dec sbb cmp or xor xor add add add add ss scas inc jbe leave (bad) js xlat pushl xlat pushl xlat pushl xlat pushl xlat pushl (bad) pushl xlat pushl aad jo (bad) lcall mov (bad) jl fdivr jl fcos jl fcos jnp fcos jnp fcos jnp fcos jnp fcos jp (bad) (bad) js sar pop pushf mov and add add add add add add xor add xor dec dec dec push inc push push adc push sbb push pop dec push dec daa dec dec push das dec push push cmp inc dec push push dec dec push push push dec push push pop dec push push addr16 push push outsb dec push push jae push push jne push push jne push push jb push push insl dec push push fs push push pop dec push push push dec push push inc dec dec push aaa dec push push sub dec dec and push sbb dec adc inc or and add add add add add add add add mov (bad) jp fcos jns fdivr js xlat pushl xlat pushl xlat pushl xlat pushl xlat pushl fdivr jbe iret jmp lcall (bad) (bad) js (bad) (bad) jge fcos jge fcos jl fcos jl fcos jl fcos jnp fcos jnp (bad) jp fdivr jp sar jae enter mov add add add add add add add add add add add dec dec pop xor dec dec dec push push push push adc push sbb push pop dec dec push daa dec push push das dec push push cmp inc dec push push dec push push push push dec push push pop push push push bound push addr16 push push imul push dec push push popa dec push push pop dec push push push dec push push inc dec push push cmp push das dec push push and dec dec dec adc dec dec push cmp cmp sub sub add add add add das (bad) lods xor jnp fdivr jnp fcos jp fdivr jns fdivr jns fdivr js fdivr js xlat pushl xlat pushl xlat pushl xlat pushl (bad) lcall mov (bad) jge fcos jle (bad) jge fcos jge fcos jl fcos jl fcos jl fcos jl fcos jnp (bad) jp (bad) (bad) jp int3 ljmp rol xchg mov add add add add add add add aas add dec dec pop xor dec dec dec push push push push adc push sbb push pop dec push push es dec push cs dec dec ss push push aas dec push push dec dec push push dec push push push push dec push push pop dec push push pop dec push push pop dec push push pop dec push push push dec push push dec dec push push inc dec push push cmp push push xor sub dec and dec pop aas dec dec adc inc or and pop add add add add add add add add mov (bad) jge (bad) jl fcos jnp fcos jnp fcos jp fdivr jp fdivr jns fdivr js fdivr js xlat (bad) js fdivr ja sar data16 mov (bad) js (bad) (bad) jg (bad) jle (bad) jle (bad) jge fcos jge fcos jge fcos jl fcos jl fcos jl (bad) jnp (bad) jp sar ja leave std pop fwait mov sbb add add add add add add add add and pop dec dec dec or dec push inc inc inc adc dec sbb push dec push push and dec push push xor push push cmp push push inc dec push push dec dec push push dec dec push push dec dec push push dec dec push push dec dec push push inc dec push push inc dec dec push cmp dec xor push sub dec and dec sbb inc adc cmp or xor xor add add add add sub movsl (bad) clc jle fdivr jle (bad) jge (bad) jge fcos jl fcos jl fcos jnp fcos jp fdivr jp fdivr jns fdivr jns fdivr js fdivr je leave lcall ljmp int jle fcos jg (bad) jle (bad) jle (bad) jle (bad) jge fcos jge fcos jge fcos jl fcos jl fcos jl (bad) jnp fdivr jnp sar jno ret loop xchg mov add add add add add add add add xor xor xor xor dec dec dec push push push push adc dec pop dec dec dec sbb dec dec dec sub push xor push aaa dec push push cmp push push aas dec dec push inc dec push push aas dec dec push ds dec dec cmp dec xor dec dec sub inc dec dec pop aas aas dec sbb inc adc aas aas or cmp or xor add add add add add push cltd mov incl rcr jg (bad) jle (bad) jle (bad) jge fcos jl fcos jl fcos jnp fcos jnp fdivr jp fdivr jp fcos jns sar push cmpsb ret pushl aad add (bad) jg (bad) jg (bad) jg (bad) jle (bad) jle (bad) jge (bad) jge fcos jge fcos jl fcos jl (bad) jl (bad) jnp (bad) (bad) jns lret jmp mov xor add add add add add add add add and pop xor dec dec dec or inc push push push dec push push sbb and push es dec dec sub push das dec dec dec xor xor dec xor dec das inc inc dec sub dec es inc inc and inc inc sbb cmp xor cvtps2pi and add add add add add add add add add add nop test icebp cmpl (bad) add (bad) jg (bad) jg (bad) jle (bad) jge fcos jge fcos jl fcos jl fcos jnp fcos jnp fcos jne lret sahf mov (bad) jle (bad) add incl rcr jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jge fcos jge fcos jge fcos jge (bad) jl fcos jp sar jne (bad) stos lds add add add add add add add aas add sub push cmp cmp aas aas aas or dec dec adc adc dec dec sbb push sbb dec dec pop inc dec dec and dec and inc and inc dec and aas inc and aas aas sbb ss pop xor ss xor xor and and add add add add add add mov jle iret incl ret fdivr add incl ret add (bad) jg (bad) jg (bad) jle (bad) jle (bad) jge fcos jl fcos jl (bad) jnp aad insb mov ret mov (bad) add (bad) add incl rcr jg (bad) jle (bad) jle (bad) jle (bad) jge fcos jge fcos jge fcos jge (bad) jnp xlat pushl pushl ret fadds add add add add add add add add sub push cmp cmp inc inc inc or dec push cmp adc inc adc dec adc cmp inc push cmp cmp xor aas adc aas aas adc cmp or sub sub add add and ret mov fdivrp test fdivr test fdivr test fdivr add incl ret add (bad) add (bad) jg (bad) jle (bad) jle (bad) jge fcos jge (bad) ja int3 lcall mov (bad) jg fcos (bad) ret add (bad) add incl rcr jg (bad) jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jge fcos jge (bad) jge (bad) jns sar jo (bad) decl in add add add add add add add aas add xor add cmp cmp xor xor sub inc inc or xor or pop pop or sub push add add dec xchg mov jle iret decl (bad) (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret (bad) add (bad) add (bad) jg (bad) jg (bad) jle (bad) jl (bad) ljmp ret movsl sar mov (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add (bad) jg (bad) jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jge (bad) jge (bad) jge fcos jno int outsb mov fdivs fcmovnu pop add add add add add add add add add add add add add add add add add add add add add add mov xchg (bad) mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add (bad) add incl mov jmp mov (bad) jg fcos test fdivr add incl ret (bad) ret add (bad) add incl rcr jg (bad) jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jle (bad) jp (bad) ljmp (bad) jle leave lret enter add add add add add add add add aas xchg mov jge int (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add fdivr jg fdivr outsl movsb (bad) lcall pushl sar test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add incl rcr jg (bad) jg (bad) jg (bad) jle (bad) jle (bad) jle (bad) jle (bad) jne sar insb mov rcrb add add jg or mov call lret (bad) leave (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test (bad) test fdivr test fdivr add incl ret (bad) (bad) (bad) fdivr jnp sar arpl leave incl (bad) fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add incl rcr jg (bad) jle (bad) jle (bad) jg (bad) jge fcos jo int3 pushl (bad) out int3 (bad) add add add add mov jge int3 call int3 loope (bad) lret loopne mov loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl cmpsb vminsd sar test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret (bad) (bad) ret add (bad) add incl rcr jg (bad) jg (bad) jg (bad) jle (bad) jg (bad) jns aad insb cmpsb (bad) incl fucomip cmp push push add mov call loope xchg int3 loope nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test (bad) jge sar gs mov incl (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add (bad) jg (bad) jg (bad) jg (bad) jg (bad) jle (bad) jne sar push ret cli fwait mov icebp adc add add xchg scas dec jp lret call loop xchg int call int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) lret loopne mov loopne (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr je (bad) lcall mov incl (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add incl rcr jg (bad) jg (bad) jge fdivr outsl stos lret cmpsb (bad) rcr pop pop pushf mov lcall iret jecxz xchg into loop xchg into loop xchg int call int3 loope xchg int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) mov fdivrp cmpb jmp incl (bad) (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test (bad) test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret (bad) (bad) ret add (bad) add incl rcr jg (bad) jg (bad) add (bad) jns aam imul (bad) in sub add add scas cmp leave (bad) cwtl into loop cltd shl lcall iret jecxz xchg iret jecxz xchg into jecxz xchg into loop xchg int call int call int3 loope nop lret loope (bad) lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) jbe leave lcall mov incl (bad) fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add (bad) jg (bad) add (bad) jg (bad) jae iret ljmp ret repnz ret fdivrs out or add add mov lcall shl lcall shl lcall iret jecxz xchg iret jecxz xchg into jecxz xchg into jecxz xchg into loop xchg int call int3 loope xchg int3 loope nop int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) lret (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov (bad) cmpl arpl fcos mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add incl ret (bad) jl xlat ljmp leave (bad) jp enter out sub (bad) stc lcall lcall in lcall lcall shl call iret jecxz xchg iret jecxz xchg into loop xchg into loop xchg int call int call int3 loope nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) jns int3 jmp mov decl enter enter (bad) fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add incl ret add (bad) js sar insb mov shll push cwtl mov jmp shl lcall shl lcall in fwait shl lcall shl lcall shl call iret jecxz xchg into jecxz xchg into loop xchg into loop xchg int call int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) lret loopne mov loopne (bad) lret (bad) leave (bad) (bad) lret loopne xchg fcos insb mov (bad) rcr mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) add fcos jb int jno (bad) jmp test add add lods and (bad) repz iret jecxz mov aam lcall aam lcall shl lcall shl lcall shl lcall shl lcall iret jecxz xchg iret jecxz xchg iret jecxz xchg into loop xchg into loop xchg int call int3 loope xchg int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne mov loopne mov loope jl into jmp mov decl leave (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret (bad) (bad) ret add (bad) add fdivr jl (bad) ljmp incl fucomp cmp add add mov mov ljmp aad jmp aad jmp aam lcall shl lcall shl lcall shl lcall shl lcall shl call iret jecxz xchg into loop xchg into loop xchg int call int call int3 loope nop lret loope (bad) lret loopne nop int3 loope mov fdivr outsb mov (bad) (bad) jg xlat decl (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) add (bad) ja sar imul xchg fsubr repz sub ret in sahf into jecxz cmpsl fldl2e jmp (bad) call jmp aad jmp aam lcall shl lcall shl lcall in fwait shl lcall shl lcall shl call iret jecxz xchg into jecxz xchg into loop xchg into loop xchg int call int3 loope xchg int3 loope nop int3 loope xchg int incl mov into decl lret mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret add (bad) (bad) (bad) fdivr jg fcos outsl stos lret pushl (bad) loopne shl pop dec xchg mov mov jmp cmpsl fsubr jmp xlat jmp jmp call jmp aad jmp aam lcall shl lcall shl lcall in lcall lcall shl call iret jecxz xchg iret jecxz xchg into loop xchg into loop xchg int call int call (bad) fdivrp jo (bad) jmp ret (bad) jg xlat decl lret (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test (bad) test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret (bad) (bad) ret add (bad) jnp aad insb movsl (bad) mov mov fsubrp das and shl iret loop lods fsubr ljmp fldl2e jmp fsubr jmp xlat call jmp call jmp aad jmp aam lcall shl lcall shl lcall shl lcall shl lcall shl call iret jecxz xchg into jecxz xchg into loop xchg into loop xchg int call mov jmp ljmp int mov (bad) (bad) lret loopne mov loopne (bad) lret (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret (bad) ret fdivr add iret ljmp cmc cmpsb ret fiaddl aas xchg mov xchg in ljmp ljmp fldl2e ljmp fsubr jmp fsubr jmp xlat call jmp (bad) out mov aad jmp aam lcall shl lcall shl lcall in lcall lcall shl call iret jecxz xchg iret jecxz xchg into loop xchg iret jecxz xchg lret loopne jae (bad) jmp ret mov loopne (bad) lret loopne mov loopne mov loopne mov loopne (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) (bad) ret (bad) (bad) ret (bad) add (bad) jg fcos outsb test enter loop sbb or fstps fucomip ljmp fucomi ljmp (bad) ljmp fldl2e ljmp fldl2t jmp fsubr jmp xlat call jmp (bad) call jmp aam jmp aam lcall shl lcall shl lcall shl lcall shl lcall shl call iret jecxz cwtl shl incl mov int3 decl lret loope (bad) lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) add incl mov (bad) decl jmp add xchg mov test in pushl fsubr ljmp fsubr ljmp jmp stos (bad) ljmp (bad) ljmp fldl2e jmp fsubr jmp xlat jmp jmp call jmp aad jmp aam lcall shl lcall shl lcall in lcall lcall shl lcall into loop jbe enter ret mov loopne xchg int3 loope nop lret loopne nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl ret (bad) add incl scas int jno ret out lods enter int3 int3 add add add pushf mov pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fldl2t jmp fsubr jmp xlat call jmp (bad) out mov aad jmp aam lcall shl lcall shl lcall in lcall lcall shl decl mov lret (bad) fdivr xchg int3 loope xchg int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne mov loopne (bad) lret (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl (bad) fdivr test (bad) jle xlat ljmp enter leave enter inc xor scas int mov out pushl out pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fldl2e jmp fsubr jmp xlat call jmp call jmp aad jmp aam lcall shl lcall shl lcall shl lcall shl (bad) jp lret jmp sar mov loopne xchg int3 loope xchg int3 loope xchg int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr add incl fdivr js sar imul xchg loopne jmp add add pop lcall mov loopne pushl out pushl fsubrp pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fsubr jmp fsubr jmp xlat call jmp (bad) out mov aad jmp aam lcall shl lcall shl lcall out pop (bad) imul fdivr xchg int call int call int3 loope xchg int3 loope nop int3 loope nop lret loopne nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test fdivr test fdivr test (bad) (bad) rcr jno lret pushl (bad) lret fisub add add mov pushl loop pushl loopne pushl loopne pushl out pushl fsubrp pushl fucomp pushl fucomp ljmp fsubr ljmp fucomi ljmp (bad) ljmp fldl2e ljmp fldl2t jmp fsubr jmp xlat call jmp (bad) call jmp aam jmp aam lcall shl lcall aam (bad) jle into jmp sar mov loopne xchg into loop xchg int call int call int3 loope xchg int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne mov loopne (bad) lret (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test (bad) test fdivr test fdivr test fdivr test fdivr test (bad) test fdivrp jge (bad) ljmp (bad) incl loop push cltd mov (bad) mov loop (bad) mov loope pushl loopne pushl loopne pushl out pushl fsubrp pushl fucomp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fsubr jmp fsubr jmp xlat call jmp aad jmp aad jmp aam lcall aad call mov leave decl into loop xchg into loop xchg int call int call int3 loope xchg int3 loope xchg int3 loope xchg int3 loope nop int3 loope nop lret loopne (bad) lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr test fdivr test (bad) test (bad) jns sar outsb movsb ret clc push rorb add add xchg stos xor enter out (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl out pushl fsubrp pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fsubr jmp fsubr jmp xlat call jmp (bad) out mov aad jmp aam jmp mov jmp sar mov loope xchg into jecxz xchg into loop xchg into loop xchg int call int call int call int3 loope xchg int3 loope nop int3 loope nop lret loope nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne (bad) lret (bad) lret (bad) leave (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr add incl ret ja aam imul (bad) mov add mov cltd ret shr (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl out pushl fsubrp pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fldl2e jmp fsubr jmp xlat call jmp call jmp (bad) call ljmp ret ljmp (bad) decl iret jecxz xchg iret jecxz xchg into jecxz xchg into loop xchg into loop xchg into loop xchg int call int call int3 loope xchg int3 loope xchg int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne mov loopne (bad) lret (bad) lret mov (bad) mov (bad) mov (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) mov fdivrp mov fdivrp mov (bad) xchg fdivr add (bad) jg fcos jp xlat pushl sar jno iret ljmp int3 ljmp ljmp (bad) ljmp (bad) movsb (bad) xchg mov mov divb out (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl fucomip pushl fucomip pushl fsubrp pushl fucomp ljmp fsubr ljmp fsubr ljmp fucomi ljmp (bad) ljmp fldl2e ljmp fsubr jmp fsubr jmp xlat call jmp (bad) out movsl fsubr incl mov sar xchg int3 loopne xchg iret jecxz xchg iret jecxz xchg iret jecxz xchg into jecxz xchg into loop xchg into loop xchg into loop xchg int call int call int3 loope xchg int3 loope xchg int3 loope xchg int3 loope nop int3 loope nop lret loopne nop lret loopne (bad) lret loopne (bad) lret loopne mov loopne mov loopne mov loopne (bad) lret (bad) lret (bad) lret mov (bad) mov (bad) mov fdivrp mov (bad) test (bad) add (bad) pushl sar jb iret ljmp lret ljmp enter (bad) movsl (bad) ljmp (bad) ljmp vpshuflw pushl int jne (bad) std mov add mov xchg rcr (bad) ljmp mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loopne pushl loopne pushl out pushl fsubrp pushl fucomp pushl fucomp ljmp fsubr ljmp fucomi ljmp (bad) ljmp fldl2e ljmp fldl2t jmp fsubr jmp xlat call jmp shl pushl (bad) ljmp (bad) decl iret jecxz xchg shl call iret jecxz xchg iret jecxz xchg into jecxz xchg into loop xchg into loop xchg into loop xchg into loop xchg int call int call int3 loope xchg int3 loope xchg int3 loope xchg int3 loope xchg int3 loope nop int3 loope nop lret loope nop lret loopne mov loopne (bad) leave (bad) mov fdivrp xchg fdivr (bad) ret jge (bad) (bad) js sar jae iret pushl lret ljmp enter (bad) movsl (bad) ljmp (bad) pushl (bad) pushl leave ljmp int3 ljmp iret ljmp sar insl mov ljmp ljmp pushl sar pop popf mov or add add mov in inc jmp repz out (bad) mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl fucomip pushl fucomip pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp (bad) ljmp fldl2e jmp fsubr jmp xlat call decl mov sar xchg int3 loope cltd shl lcall shl call iret jecxz xchg iret jecxz xchg iret jecxz xchg into jecxz xchg into loop xchg into loop xchg into loop xchg into loop xchg int call int call int3 loope (bad) lret loopne mov (bad) mov (bad) test (bad) jle (bad) (bad) jns sar je iret pushl lret ljmp enter (bad) movsl (bad) ljmp vpshuflw ljmp int outsb mov ljmp sar insb mov ljmp ljmp ljmp ljmp ljmp ljmp ljmp pushl lret xchg mov dec xchg mov xchg mov idiv ret inc out inc out inc out inc out (bad) mov in (bad) mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov loop (bad) mov loop pushl loope pushl loopne pushl fucomip pushl out pushl fsubrp pushl fucomp ljmp fsubr ljmp fsubr ljmp fucomi ljmp (bad) ljmp fldl2e ljmp fsubr jmp fldl2e jmp test jmp (bad) (bad) (bad) cwtl shl lcall shl lcall shl call iret jecxz xchg iret in xchg iret in xchg iret jecxz xchg into jecxz xchg into loop xchg int3 loope mov (bad) mov (bad) test (bad) jg (bad) (bad) jp sar jne into pushl lret ljmp enter (bad) ljmp (bad) pushl (bad) test pushl lret pushl into pushl sar outsl mov ljmp aam insl mov aam insb mov ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp pushl sar mov mov add test out (bad) dec jmp inc call hlt inc out inc out inc out inc out inc out inc out (bad) mov in (bad) mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl out pushl fsubrp pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e ljmp fldl2e ljmp rcr mov iret call shl lcall shl lcall shl call int call leave (bad) xchg (bad) cmpb pushl into pushl lret test vpshuflw pushl lret scas int jae sar jae sar jb aam jno (bad) pushl (bad) pushl (bad) pushl aad outsl mov aam outsb mov aam insl mov ljmp sar insb mov ljmp ljmp ljmp ljmp ljmp ljmp pushl lret incl mov aas xchg mov nop mov idiv vpmuludq (bad) call hlt inc call hlt inc out inc out inc out inc out inc out inc out (bad) mov out (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl fucomip pushl fucomip pushl fsubrp pushl fucomp ljmp fsubr ljmp fsubr ljmp fucomi ljmp (bad) ljmp (bad) jmp stos leave jmp (bad) incl shl call int decl (bad) (bad) cmpl int jb leave pushl vpshuflw pushl enter int3 pushl iret pushl sar ja aad ja xlat pushl fdivr jne fdivr jne xlat pushl pushl (bad) pushl (bad) pushl aad jb aad jno aad jno aad jo aam outsl mov aam outsb mov aam insl mov ljmp sar insl mov ljmp ljmp ljmp ljmp sar imul pop push mov (bad) in clc inc jmp cmc inc jmp hlt inc call hlt inc call hlt inc out inc out inc out inc out inc out inc out (bad) mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl out pushl fsubrp pushl fsubrp pushl fucomp ljmp fsubr ljmp fsubr ljmp fsubr ljmp loopne lcall sahf mov (bad) jle sar jl sar jbe int jb enter vpshuflw pushl lret mov (bad) jp sar jl aad jge fdivr jge fcos jl (bad) jnp (bad) jnp fcos jns fdivr jns fdivr js xlat pushl xlat pushl xlat pushl xlat pushl (bad) pushl pushl pushl (bad) pushl aad jb aad jno aad jno aad jo aam jo aam outsl mov aam outsb mov aam insl mov ljmp sar insb mov int3 decl mov cmp sar leave jmp dec jmp dec ljmp (bad) jmp cmc inc jmp hlt inc call hlt inc call hlt inc out inc out inc out inc out inc out inc out (bad) mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loop (bad) mov loope pushl loope pushl loopne pushl fucomip pushl fucomip pushl fucomip pushl loopne pushl fucomip ljmp xlat call call mov pushl ret jmp mov pushl (bad) js int3 (bad) jl sar jg aad (bad) mov (bad) add incl (bad) fdivr add (bad) jle (bad) jle (bad) jge fcos jl fcos jnp fcos jp fcos jp fdivr jns fdivr js xlat pushl xlat pushl xlat pushl xlat pushl (bad) pushl (bad) pushl pushl (bad) pushl aad jb aad jno aad jno aad jo aad jo aam outsl mov aam outsb mov aam outsl mov pushl ret repnz add jg push pusha pushf mov dec out stc dec ljmp enter enter (bad) ljmp (bad) jmp cmc inc jmp hlt inc call hlt inc call hlt inc out inc out inc out inc out inc out (bad) mov out (bad) mov in (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov loop (bad) mov loop pushl loope (bad) mov jecxz (bad) mov jecxz pushl fsubrp jmp lret (bad) xchg (bad) xchg leave pushl sar xchg mov call (bad) pushl incl leave (bad) mov (bad) mov (bad) mov fdivrp xchg fdivrp xchg (bad) test fdivr test fdivr add incl ret add (bad) jg (bad) jg (bad) jle (bad) jge (bad) jl fcos jnp fcos jnp fdivr jp fdivr jns fdivr js fdivr js xlat pushl xlat pushl xlat pushl xlat pushl (bad) pushl pushl pushl (bad) pushl aad jb aad jno aad jno aad jo aam outsl mov aad jne into call mov add add add mov dec jmp dec in idiv lret dec jmp dec ljmp enter enter (bad) ljmp (bad) jmp cmc inc jmp hlt inc call hlt inc call hlt inc out inc out inc out inc out inc out inc out (bad) mov in (bad) mov in (bad) mov in (bad) mov in (bad) mov out (bad) mov in (bad) mov fsubr jmp lret mov pushl pushl (bad) incl je ljmp mov inc inc xchg lcall sahf (bad) jp scas (bad) jge mov mov lret push imul call mov decl leave (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add (bad) jg (bad) jle (bad) jge fcos jl fcos jl fcos jnp fcos jp fdivr jns fdivr jns fdivr js xlat pushl xlat pushl xlat pushl xlat pushl (bad) pushl pushl pushl (bad) pushl aad jb aad jno aad jno aad jno aam jae vcvttsd2si add add add mov dec out stc dec jmp dec jmp dec jmp dec jmp dec jmp dec ljmp enter enter enter (bad) jmp cmc inc jmp cmc inc jmp hlt inc call hlt inc call repz out inc out inc out inc out inc out inc out inc call cmc inc jmp hlt (bad) mov fsubrp ljmp leave (bad) xchg int jns (bad) pushl mov call test cmpsb call xchg ljmp mov incl decl xchg incl jp jmp cld hlt (bad) mov sahf mov decl leave (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add (bad) jg (bad) jle (bad) jle (bad) jge fcos jl fcos jnp fcos jp fdivr jp fdivr jns fdivr js fdivr ja xlat pushl xlat pushl xlat pushl (bad) pushl (bad) pushl pushl (bad) pushl aad jb (bad) pushl sar pop popf mov push sub lods inc subl idiv lret dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec ljmp enter enter (bad) ljmp (bad) jmp cmc inc jmp hlt inc call cmc inc jmp idiv enter (bad) jmp inc call lock shl lcall mov lret pushl sar mov lcall loopne ljmp imul ljmp push mov jmp test incl es xchg test decl mov call ror call mov call lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add incl rcr jle (bad) jge (bad) jl fcos jnp fcos jnp fdivr jp fdivr jns fdivr js fdivr js xlat pushl xlat pushl xlat pushl xlat pushl (bad) pushl pushl pushl leave pushl xchg scas push push cwtl mov dec lock dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec ljmp enter enter leave jmp dec in idiv lret in clc dec in clc dec in idiv vpmaddwd mov fsubr lcall mov iret incl stos leave jmp test pop andb dec gs dec pop mov push gs pop jne incl fstp dec rcr pushl (bad) jle mov mov iret lcall xchg (bad) mov mov (bad) test iret (bad) cmp push (bad) incl jge (bad) in out in call ror lcall scas lret incl into jecxz nop lret loope (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add (bad) jg (bad) jle (bad) jge fcos jge fcos jl fcos jnp fcos jp fdivr jns fdivr jns fdivr js xlat pushl xlat pushl xlat pushl fdivr js sar arpl mov add lea cld (bad) out dec in idiv lret dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec in idiv int clc dec out stc dec out stc dec in idiv (bad) out (bad) mov shl lcall mov (bad) jp (bad) pushl mov call stos mov jmp in in call push jge dec push jb push pop cmp arpl call xchg imul (bad) fucom jecxz jl mov test incl nop (bad) pop sahf lcall scas aad mov lahf enter mov incl jne incl fucom (bad) jmp call incl stos lret call loop xchg int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add (bad) jg (bad) jle (bad) jle (bad) jge fcos jl fcos jnp fcos jp fdivr jp fdivr jns fdivr js fdivr js fdivr js lret incl mov dec xchg mov mov lock dec jmp dec jmp dec jmp dec jmp dec jmp dec in idiv int3 in idiv into out clc dec out stc dec out stc dec in idiv (bad) out (bad) mov shl call mov (bad) jg int3 (bad) jg lret mov lcall ret sar fwait stos mov mov fcmovnu (bad) fucom loop int into (bad) in in out out out pushl test call jp push pop jl pop insb mov (bad) stos fcos push dec insb decl outsl ljmp repz decl jae incl (bad) mov lcall mov stos call popa lods pushl stos incl mov dec int (bad) jmp out (bad) lret aad fdivrp jne mov xchg in xchg int call int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add incl rcr jle (bad) jge fcos jl fcos jl fcos jnp fdivr jp fcos jp aad push mov add mov test out clc dec in idiv int clc dec out stc dec out stc dec out clc dec jmp inc in pushl into loop xchg rcr xchg ljmp mov call ret sar mov fsubp (bad) fucomip in (bad) call repz (bad) in bnd ljmp iret aam dec int3 lret push repnz (bad) mov jae lcall (bad) call call jge dec push jne mov out addr16 incl outsl incl repz lcall jne decl jno incl iret in enter mov (bad) sar dec cltd decl jb call jne (bad) mov imul (bad) mov icebp icebp ljmp cmpsl (bad) iret jecxz xchg iret jecxz xchg into loop xchg into loop xchg int call int3 loope nop int3 loope (bad) lret loopne mov loopne (bad) lret (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add (bad) jg (bad) jle (bad) jge fcos jge fcos jl (bad) jnp int dec cwtl mov inc xchg mov mov hlt cld dec in clc inc jmp out ljmp leave (bad) nop mov int jae (bad) mov mov lcall mov jmp pushl (bad) iret fucom call (bad) call loope dec rcl dec iret sar mov mov lcall mov push sti idiv xchg lods vsubsd lcall (bad) decl jae dec dec push decl mov fdivr jno mov fwait mov icebp ljmp jl call jno jmp popf inc ret fdivrp int3 into loop mov push lods decl jbe call jbe ljmp std cmc inc (bad) scas mov jmp sahf mov test call iret jecxz xchg into jecxz xchg into loop xchg int call int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp xchg (bad) xchg (bad) test (bad) test fdivr test fdivr add incl ret add (bad) jg (bad) jg (bad) jle xlat ljmp ret mov add mov fdivrp pushf (bad) (bad) mov lret pushl (bad) ljmp sar mov mov lcall mov jmp sar cmpsl sar cmpsl sar test jmp mov movsb mov (bad) lret call loope jmp mov lcall lods mov mov mov mov jmp ljmp pop outsl (bad) decl jp jno mov decl jmp decl stos sar jns xchg (bad) out icebp jmp decl sar (bad) mov lcall xchg jmp popf jmp mov ljmp cmpl decl xchg ret push clc repnz (bad) (bad) xchg call aam pushl test lcall shl lcall shl call iret jecxz xchg into loop xchg into loop xchg int call int3 loope nop lret loope (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add sar dec cwtl mov add xchg scas dec ja (bad) ljmp ret xchg mov call lcall mov jmp ret jmp jmp jmp jmp jmp jmp ret test jmp ret mov mov dec fcomp call loope inc into sar mov jecxz (bad) fcomp loop in out jmp in out call (bad) fdivr mov mov hlt cmc out pushl outsl (bad) lcall test pop push loop jge fcos mov aad jb ret (bad) jns (bad) call test imul out in int3 into (bad) mov call mov decl pop movsb jmp fwait ljmp incl lcall lcall lcall xchg lret into lret ljmp idiv push idiv lcall mov lcall shl lcall shl lcall iret jecxz xchg iret jecxz xchg into loop xchg into loop xchg int call int3 loope nop int3 loope (bad) lret loopne mov loopne mov loopne (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr test (bad) (bad) rcr jno vcvtss2si add sbb mov call cmpsb ret lcall mov call lcall mov jmp jmp (bad) jmp (bad) jmp jmp jmp jmp ret movsl sar cmpsb mov dec fcomp dec fucom call in jmp jmp jmp in lock jmp repz jmp in out inc enter (bad) push stc cmc incl addr16 push fs mov lock into pushl enter sar pop jb incl push (bad) fcmovu fcos fsubp in mov sar test decl (bad) jmp mov mov jmp mov decl insl stos (bad) (bad) (bad) jecxz loopne (bad) lret lock (bad) ljmp (bad) jns lret int lcall shl lcall shl lcall shl lcall iret jecxz xchg into jecxz xchg into loop xchg int call int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp xchg (bad) xchg (bad) xchg fdivrp xorl push add add add cmpsb (bad) lcall rcr lcall stos enter mov call mov push lahf mov jmp ret jmp (bad) jmp (bad) jmp jmp jmp ret ljmp mov mov fcomp dec fucom call (bad) dec xlat (bad) int3 aam (bad) mov mov lcall ret icebp repnz call (bad) jmp xchg lcall mov dec push jae mov out ljmp mov sar jg (bad) lcall mov push pop jge dec push je mov lock decl add mov call cmpl decl je incl (bad) scas decl mov lret ljmp lods mov inc lret (bad) enter test into incl xlat jmp lcall shl lcall in lcall lcall iret jecxz xchg iret jecxz xchg into loop xchg into loop xchg int call int3 loope nop lret loope (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp xchg fdivr jbe leave (bad) xor add add add popf mov ljmp rcr ljmp ret (bad) incl mov mov call mov pop mov sar test (bad) jmp jmp ljmp (bad) dec fsub dec fneni(8087 jmp mov mov pushl lret stc cli hlt ljmp jo lcall decl call shr ljmp mov mov pushl lods ljmp mov dec push js mov mov decl insl lods (bad) js lods incl xchg ljmp mov aam jecxz in out repz push clc icebp push sti bnd out (bad) ljmp pushl mov into dec int3 into dec fnop (bad) jl lret int3 loope mov aam lcall shl lcall shl lcall shl lcall shl call iret jecxz xchg into jecxz xchg into loop xchg int call int3 loope nop int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) leave (bad) mov (bad) mov loopne test mov or add add xchg scas inc jno (bad) decb rcr pushl aam pushl (bad) (bad) pushl leave pushl (bad) mov mov call lcall mov lcall mov dec (bad) dec fnop call loope dec fcomp (bad) mov aam jmp out lock into sar in jecxz in repnz stos lcall xchg push bound jmp (bad) in lcall cmpsl (bad) (bad) jnp (bad) ljmp mov imul inc dec call cld cmc inc lret mov (bad) call (bad) jmp call out push cli repz div push div push div call xlat aam into ror dec iret iret (bad) ljmp dec lret int3 call (bad) fdivr call in out (bad) mov out lock clc clc ljmp mov jmp (bad) call jmp aam lcall shl lcall shl lcall shl lcall shl call into jecxz xchg into loop xchg int call int3 loope xchg int3 loope nop lret loopne (bad) lret loopne mov loopne (bad) lret jl int3 (bad) cmp add mov ljmp rcr ljmp rcr pushl mov lret mov pushl leave pushl (bad) jmp mov call mov push lcall enter lret call fsubp (bad) fxam jmp jmp out bnd in out call rcl push repz dec fchs lcall mov pop addr16 pop jne push pop jns fwait mov in xchg mov pushl mov sbbl mov jp mov (bad) jp xchg jmp out push div (bad) cli std idiv fcmovnu (bad) jecxz loop mov ret ret dec int pushl loop inc lret scas mov (bad) fcmovu loopne out hlt cmc push clc stc push clc stc inc (bad) leave jmp jmp push sti cld (bad) out repz (bad) out repz (bad) out hlt hlt (bad) fucomip out (bad) jge leave call fldl2e jmp call jmp aam lcall shl lcall shl lcall shl lcall shl call iret jecxz xchg into loop xchg into loop xchg int call int3 loope xchg int decl lahf mov adc add add mov sar mov (bad) lods rcr ljmp rcr jmp mov pushl int3 pushl int ja int3 (bad) js lret pushl enter ret cltd mov inc aam dec (bad) call fsubp call loopne call loopne (bad) mov ret (bad) dec into lret push div lcall ret jmp mov dec push insl call jbe jb test lcall mov sar mov ljmp cmpsl decl jb push pop jl mov repnz dec leave enter mov lcall leave (bad) in lock out (bad) jmp icebp push stc cli push stc sti push cli sti push cli sti push clc cli (bad) jmp icebp push idiv jmp in ljmp mov ret cld (bad) push cmc idiv mov (bad) jnp int test fsubr jmp (bad) call jmp aad jmp aam lcall shl lcall in lcall lcall iret jecxz xchg iret jecxz xchg into jecxz xchg into loop xchg int call iret incl mov pop fwait mov jmp (bad) lods rcr ljmp rcr incl mov pushl int3 pushl int3 (bad) js int js int jns int ja int3 pushl mov dec fchs call (bad) dec fcmovu ljmp leave into ljmp out (bad) jmp jmp mov movsl sar push outsb lcall mov push pop jbe dec dec imul je movsb (bad) jnp mov gs ljmp mov call jns dec pop jno pop outsb mov mov (bad) clc ljmp mov mov push clc cli push clc stc push sti cld (bad) out hlt idiv lock idiv repnz call fcmovnu (bad) mov mov scas ljmp ljmp enter mov mov (bad) out repnz jmp in lock enter fsubr jmp fsubr jmp xlat call jmp aad jmp aam lcall shl lcall shl lcall shl lcall shl call shl call mov cmpsb and add add mov (bad) mov (bad) lods rcr ljmp rcr jmp mov pushl int3 pushl int3 pushl int3 (bad) js int jns int jp sar jo mov dec fnop dec fsub (bad) fsub jmp ljmp mov jmp jmp out push clc repnz (bad) in mov (bad) call lods pushl mov decl push inc dec popa incl pusha decl push dec push outsl decl call pushl stos (bad) ljmp pushl ret (bad) (bad) (bad) mov repnz fsubp in lret iret sar out repz inc leave lret (bad) fcomp (bad) mov mov lcall (bad) jmp jmp idiv mov mov (bad) mov idiv push div (bad) mov scas int stos fucomi ljmp fldl2e ljmp fsubr jmp xlat call jmp aad jmp aam lcall shl lcall shl lcall shl lcall shl incl xchg mov push lcall mov rcr ljmp rcr pushl mov lret mov pushl int js int js int jns into pushl (bad) mov dec fnop dec fndisi(8087 call loopne (bad) (bad) ljmp out repz ljmp (bad) loopne out in idiv repz repnz call fsubp pushl mov insl sbbl insl mov push pop js dec push outsb call ja dec pop ja fwait lods sar stc repz fcmovbe dec iret sar (bad) (bad) (bad) (bad) fucom jecxz xchg xchg fwait lcall mov xchg (bad) (bad) (bad) fsubp jecxz lea xchg dec into sar in lock scas mov icebp cmc idiv cmc cli sti push clc stc push hlt cmc (bad) call in dec int lcall lea pushl (bad) ljmp fldl2e ljmp fsubr jmp xlat call jmp aad jmp aam lcall shl lcall shl lcall int3 loope jno (bad) repz add add (bad) daa outsl mov into ljmp rcr ljmp (bad) mov mov pushl int3 pushl int3 pushl int3 (bad) js int jns int je lret incl xlat fdivrp int3 fndisi(8087 call loope call fcmovu (bad) mov jmp ljmp pushf decl (bad) (bad) fcmovnu fdivrp aad aad repnz lock div (bad) out repz call fcmovu jmp sahf mov je stos (bad) cmp (bad) xchg mov (bad) (bad) stc cli hlt (bad) mov int3 iret (bad) mov ret xchg cwtl popf (bad) mov mov out (bad) out repnz jmp out ljmp (bad) enter clc (bad) cli std (bad) push repz ljmp lret into (bad) mov mov lcall xchg cwtl lcall mov scas into ljmp in ljmp jmp stos (bad) ljmp fldl2e jmp fsubr jmp xlat call jmp aad jmp aam lcall (bad) call call mov add add add mov lcall (bad) stos rcr ljmp (bad) xchg pushl int3 pushl int js int js int ja into (bad) jns mov dec fneni(8087 call loopne call loop jmp iret sar fchs jecxz test ret jmp icebp push clc stc jmp call jmp lock out lock push clc repz stc sti cmc (bad) in icebp in dec fcomp call test call cmc repnz ror pushl hlt cmc jmp xchg (bad) sti (bad) (bad) push sti cld (bad) stc std std (bad) clc cld std push cli sti push div push div (bad) (bad) in test sahf mov pushl lea pushl loopne dec into sar mov ljmp mov fcos mov out ljmp fsubr ljmp jmp stos (bad) ljmp fldl2e ljmp fsubr jmp xlat call jmp aad jmp shl (bad) js enter stos inc sub ret mov ljmp rcr ljmp rcr jmp mov pushl int3 pushl int3 pushl int3 (bad) js int3 (bad) jns iret pushl mov dec fndisi(8087 call fsubp (bad) fsub jmp call rcl push sti std push clc stc push clc cli push clc stc push idiv push hlt cmc dec into sar enter rcl aam mov mov push repz (bad) sti (bad) clc jmp in in call loopne push hlt out call (bad) pushl rcl dec rcl call (bad) fdivr clc sti cld push stc cli push cmc idiv iret rcl dec into sar mov mov call int (bad) mov cmpsb stos (bad) fcmovu (bad) in lock call clc push stc cli (bad) stc std (bad) (bad) stc std (bad) push hlt idiv lock idiv in icebp repnz mov lods int3 ljmp fsubrp ljmp fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e jmp fsubr jmp xlat call call lcall dec cwtl mov jae (bad) (bad) xlat ljmp rcr ljmp rcr incl mov pushl lret pushl int3 pushl int jns iret pushl ret mov loop iret fucom call loop (bad) frstpm(287 ljmp in icebp (bad) jmp hlt (bad) ljmp inc lret mov (bad) fcos fcomp fdivr test lods mov cmpsb cmpsl stos dec rcl ljmp jecxz (bad) out lock push clc repz jmp ljmp idiv call fcmovu (bad) in lock (bad) in mov mov call xchg xchg incl fwait mov lcall xlat (bad) clc sti std push idiv push stc sti push clc cli push clc cli push idiv push hlt idiv loop call (bad) jmp lock aam (bad) out repz (bad) mov pushf mov pop (bad) mov lock fucomp pushl fsubr ljmp fucomi ljmp jmp stos (bad) ljmp fldl2e jmp fsubr jmp lods int3 pushl xchg scas push and shl mov ljmp rcr ljmp rcr lcall mov pushl pushl int3 pushl int3 pushl int jno enter mov dec fucom call jecxz call loope inc int3 sar mov mov iret inc (bad) (bad) decl stos scas jmp out (bad) (bad) (bad) (bad) inc ret (bad) jmp fstp jmp out (bad) mov rol icebp cmc cmc (bad) (bad) fdivrp leave lret rol (bad) mov xchg xchg jmp mov mov sahf mov sar cmc idiv in ljmp std std jmp out push cli sti (bad) clc cld std push sti cld push cli sti (bad) out repnz sti cld dec lret int popf sahf mov ljmp idiv pushl pushf jmp lret sar jp lret fsubr pushl fucomip pushl fsubrp pushl fucomp ljmp fsubr ljmp jmp stos (bad) ljmp fsubr lcall sahf mov push dec cwtl mov jb (bad) call rcr ljmp iret fdivrp lods rcr incl mov pushl pushl lret pushl int3 pushl (bad) jg mov dec fsub call loop call fsubp lcall fwait mov call fcmovnu push cli cld jmp out push div push cli sti push sti cld (bad) jmp lock hlt cmc push stc cli (bad) out repnz out bnd rcl jmp mov jmp mov inc leave lret dec lret int out ljmp mov std (bad) sti (bad) (bad) (bad) cli std (bad) (bad) cli std std (bad) out icebp repz rcl dec rcl inc (bad) leave pushl mov push cli sti (bad) jmp out pushl mov call aad dec lret int lret into sar xchg lcall out cmc idiv pushf mov aam mov loopne pushl out pushl fsubrp pushl fucomp ljmp fsubr ljmp fucomi ljmp mov (bad) cmp add add xchg fidivr leave jmp iret (bad) cmpsl iret (bad) stos rcr lcall mov pushl lret mov pushl lret pushl into pushl (bad) mov fsub call (bad) (bad) fsub in call fcmovu call xlat (bad) in repnz push cmc clc push idiv (bad) cli (bad) (bad) (bad) clc cld (bad) push repz jmp in inc enter ret mov xchg pushf call aad (bad) mov int3 iret (bad) out icebp repz rcl jmp in jmp in (bad) cli std (bad) (bad) cld (bad) (bad) push idiv push div (bad) (bad) (bad) (bad) (bad) mov mov (bad) fcmovnu loopne mov cmpsb test ljmp mov lahf lcall lret cmc clc stc push clc cli (bad) sti (bad) (bad) inc ret (bad) push idiv (bad) fucom jecxz (bad) in out in jmp ljmp ret (bad) jl lret xlat call pushl loopne pushl out pushl fsubrp pushl fucomp ljmp fucomip jmp mov test add mov jno (bad) decl rcr jmp iret (bad) stos rcr incl scas enter lret mov pushl int outsb cmpsl mov dec fucom call (bad) call jecxz jmp jmp jmp out repnz in repz (bad) jmp loope inc (bad) ret jmp test decl (bad) xchg pushl (bad) call xlat (bad) sti (bad) (bad) push cli sti push cli sti (bad) sti (bad) (bad) (bad) clc sti cld push cli sti push idiv (bad) call icebp repnz (bad) fdivrp mov stos scas (bad) mov mov scas lcall mov repnz ljmp push div (bad) stc cld std (bad) clc sti cld (bad) stc cld std push stc cli push cmc idiv (bad) in rcl xlat (bad) mov mov test xchg xchg fwait (bad) call ret (bad) incl repnz mov loope pushl loopne pushl fucomip pushl fsubrp pushl loopne decl mov sbb mov jmp iret (bad) movsl iret (bad) test fdivrp popf lret jb leave pushl leave pushl pushl ljmp ret lcall fucom call fsubp (bad) fxam ljmp mov stos call lods mov (bad) test inc enter mov (bad) mov jmp cld (bad) sti (bad) (bad) push div (bad) mov cli sti push hlt cmc (bad) jmp out push div (bad) cld (bad) (bad) dec int3 iret ljmp popf jmp out jmp lods mov xlat (bad) jmp call cmc push cli sti (bad) stc cld std (bad) stc cld std (bad) cli (bad) (bad) push cli sti push hlt idiv idiv cli call aad dec lret mov mov lcall test lcall mov jmp int3 rcl jmp out lock jecxz (bad) jnp enter out mov loop (bad) mov loope pushl loopne pushl fucomip pushl (bad) call in es daa inc xchg mov jno ret decl rcr jmp (bad) test fdivrp test (bad) pushl leave pushl lret scas enter mov dec fsub call jecxz dec (bad) decl xchg test lret jmp lock stc sti push idiv (bad) out icebp repz clc cld std push idiv (bad) in out icebp (bad) fcmovu (bad) lret pushl mov mov jmp jmp in inc ret rcl xlat push clc stc (bad) clc sti cld push stc cli (bad) stc cld std (bad) sti std (bad) (bad) cli std (bad) push stc cli (bad) out icebp repz ljmp lock jmp out jmp movsb test mov lahf movsb jmp call stc (bad) ljmp push div (bad) out cmc idiv out lock in out jmp mov (bad) mov in (bad) mov loop (bad) mov loope pushl loopne (bad) mov mov mov add add jae (bad) int3 (bad) movsb iret fdivrp mov iret fdivrp pushf leave (bad) jo enter enter leave pushl lret movsb mov dec fsub call (bad) (bad) fsub in call fneni(8087 dec iret sar in cmc clc (bad) out cmc clc (bad) jmp clc cli push idiv (bad) out repnz call xlat (bad) mov test pushf lcall aam rcl xlat jmp iret (bad) (bad) loope ljmp (bad) jmp mov push repnz (bad) (bad) (bad) (bad) (bad) stc sti std (bad) in out lock call int inc (bad) lret jmp cwtl pushf call ljmp mov popf mov (bad) jmp (bad) (bad) jmp out jmp jecxz (bad) std (bad) (bad) push clc cli (bad) out repz (bad) jmp cmc jmp in lock jmp call loop (bad) jl (bad) jmp call icebp (bad) mov jecxz (bad) mov loop (bad) mov fsubr pushl (bad) imull add add xchg mov jo ret incl (bad) mov into (bad) cmpsb rcr incl lods vpshuflw ljmp mov dec fucom call fsubp call loop (bad) fsubrp in jmp out bnd in out call (bad) inc int3 iret inc lret into ljmp xchg xchg jmp xchg cltd pushl movsb test lret jmp jmp push clc stc push cmc idiv cli std (bad) (bad) stc cld std (bad) stc cld std (bad) stc cld std (bad) std (bad) (bad) dec rcl ljmp (bad) (bad) pushl cmpsb stos jmp stos scas pushl mov iret jmp in push stc cli push clc cli push stc cli call aam jmp out (bad) cli (bad) (bad) (bad) stc std (bad) jmp jmp scas (bad) mov mov pushl ljmp loopne in jmp jmp enter int3 (bad) mov in (bad) mov in (bad) mov jecxz (bad) mov (bad) fdivrp push cwtl mov add add add mov lcall into fdivrp mov iret fdivrp fwait leave (bad) outsl scas (bad) scas vpshuflw jmp fsub dec fucom call (bad) pushl int call lods mov xchg xchg fwait lcall mov mov jmp call stc call xlat fcos iret rcl (bad) clc cld std push stc cli push idiv push clc stc (bad) stc sti cld call aam pushl mov ljmp mov xchg xchg xchg jmp (bad) dec lret (bad) loopne loop out icebp repz push stc cli (bad) (bad) (bad) (bad) push clc stc push clc stc (bad) out icebp repz clc sti cld jmp jecxz ljmp mov test mov mov call rol into aam jmp in lock fucomip in jmp jmp into jmp jmp ljmp mov in (bad) mov loop (bad) jge int3 (bad) xor add aaa xchg scas inc jo ret std jle int movsb iret (bad) mov int jmp iret ljmp ret ljmp (bad) ljmp ret lods mov dec fnop call (bad) dec fneni(8087 call xchg lcall (bad) lret jmp call out (bad) fnop in fsub out out cmc clc push idiv (bad) jmp repnz push idiv dec int ljmp lods mov stc sti std push cmc idiv mov lahf mov (bad) clc stc sti (bad) in out out push clc stc (bad) cli cld (bad) push cmc idiv std (bad) (bad) push cli sti push idiv jmp out call (bad) fcos repz (bad) mov cwtl popf lcall out lock leave int3 jmp mov idiv loop ljmp repz fsubp call (bad) fsub ljmp rcr jmp mov jle int shl inc out (bad) mov in inc jmp jecxz pop pushf mov or add add mov call iret fdivrp mov into fdivrp lcall ljmp ljmp (bad) movsb mov dec (bad) dec fnclex call loopne call jecxz pushl int (bad) mov loop jmp lock call loopne inc enter fcmovu pushl cwtl popf pushl cli call aad pushl mov idiv cli std (bad) (bad) (bad) in movsb cmpsb stos push cmc idiv cli std (bad) (bad) cld (bad) (bad) push clc cli push idiv (bad) out repz inc leave int3 ljmp lods call xchg (bad) fneni(8087 loop stos lods mov scas mov jmp in out jmp in out lcall loop (bad) in hlt idiv ljmp jmp jmp jmp jmp (bad) fsub in (bad) ftst jmp dec fndisi(8087 pushl mov arpl loopne enter shl inc out inc out incl xchg scas popa xor sar mov jmp int jmp iret (bad) cmpl (bad) ljmp mov inc fcomp dec (bad) dec fndisi(8087 call loope (bad) fsub in dec (bad) inc rcl pushl lods mov mov (bad) lcall xchg cltd jmp mov jmp jmp cld call rcl (bad) fcomp (bad) cli cld (bad) (bad) stc cld std push stc sti push clc cli (bad) clc sti cld jmp call ret ljmp cltd popf pushl mov mov pushl (bad) call (bad) inc (bad) enter idiv mov out bnd in lock in lock call in out jmp jmp jmp ljmp fsub jmp ftst jmp call (bad) call (bad) incl sahf mov (bad) mov jmp idiv scas aad jmp mov adc add add mov call into (bad) lahf int3 (bad) mov leave (bad) insb lods ret ljmp (bad) mov leave inc (bad) (bad) ret dec fnop jmp stos mov xchg popf movsb call xchg fwait (bad) jnp mov jns nop (bad) mov into sar lods mov (bad) fsub call (bad) jmp cmc clc push idiv (bad) fcmovnu loop ljmp call fcmovu inc enter popf mov ljmp mov (bad) mov rcl dec rcl jmp call std (bad) mov out (bad) call lret iret jmp in out (bad) fsubp jmp jmp in out jmp jmp jmp jmp in (bad) fucom jmp (bad) ljmp jecxz call loopne call fsubp dec fndisi(8087 dec fucom lcall lahf mov lcall in idiv enter nop mov mov sub ret mov lcall int3 (bad) sahf int3 (bad) mov mov ret movsb mov inc aam (bad) mov xlat fdivrp mov lret sahf movsb lcall scas call mov (bad) mov lods mov aam in (bad) loopne call fsubp jmp in out jmp jmp sar mov mov movsb call mov ljmp loope push idiv (bad) in repnz push idiv push idiv (bad) in repnz jmp in lock call out jmp in out jmp in lock out repz ljmp fucomip in (bad) fsubp jmp fsub ljmp in call jecxz call loop call loopne call fsubp dec fsub dec fnop dec (bad) dec fndisi(8087 pushl cltd mov pop mov enter repnz mov mov cmpsb and add add mov decl (bad) popf int3 (bad) lahf int lcall stos ret jmp (bad) jge mov mov rcr (bad) mov int3 aam stos mov mov mov rcl (bad) fucomip jmp jecxz out jmp mov pushl mov call into sar mov sar jle jmp int3 sar (bad) lret into jmp in (bad) call hlt idiv out repz jmp repz ljmp jmp in icebp jmp in icebp jmp in lock jmp jmp in lock jmp in (bad) fsubp in (bad) fsub jmp frstpm(287 ljmp jecxz call loop call loope call (bad) call fsubp dec fsubp dec fucom dec fucom dec fnclex inc aad pushl mov mov decl mov pop cltd mov lcall mov sub lods and ret lods (bad) lcall (bad) pushf int3 (bad) mov mov sar mov mov lcall test jmp (bad) (bad) loope in jmp in in (bad) fucomp ljmp ret lret decl sahf dec aad pushl (bad) int3 jmp out repz int (bad) fsubp jmp (bad) in cmc idiv jmp cmc (bad) jmp out bnd out icebp jmp in icebp jmp in lock jmp jmp ljmp fsubrp in (bad) fucom in (bad) fsub jmp (bad) ljmp jecxz call loop call loope call (bad) call (bad) dec fsubp call (bad) call (bad) dec fsub inc (bad) (bad) mov aad cmpsb mov ret call mov lcall mov sar jge leave jmp mov pushl (bad) imulb xchg test add mov decl int lcall int call stos ret test mov inc rcr jmp jmp bnd out lock jmp jmp ljmp loop in dec fcmovu lcall mov ret jmp jmp (bad) jmp loope out jmp jmp out jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp fsubrp in (bad) fucom jmp (bad) jmp (bad) ljmp jecxz call loop call loopne call (bad) call fsubp call fsubp call (bad) call (bad) dec fsub inc aam pushl mov ret mov call mov (bad) ljmp aam pushl (bad) loopne stos rcr decl enter ret icebp dec xchg mov pop mov out stos (bad) lcall lret (bad) fwait lret (bad) sahf int (bad) jg into jmp mov ljmp (bad) incl (bad) (bad) call repnz call in out jmp in out jmp jmp jmp in out lcall (bad) inc aam call fsubp call loopne call loop (bad) ftst jmp (bad) fucom jmp fsubp jmp fsubp in (bad) fsubp jmp fucom jmp (bad) ljmp jecxz call loop call loope call loopne call (bad) call fsubp call fsubp call (bad) call fsubp dec fnop inc rcr pushl mov incl test (bad) lcall int3 fcos scas rcr pushl aam pushl rcr pushl int decl stos leave ljmp ret lock cwtl mov and add add jp mov sar popf int lcall int3 fdivrp xchg enter test sar test jmp sar cmpsb sar mov (bad) mov lock hlt cmc (bad) ljmp (bad) jmp hlt inc into sar xchg mov fdivr lret (bad) dec fsub call fsubp call loopne call loope call loop (bad) fsub call call loop call loope call loope call (bad) call fsubp call fsubp call (bad) call (bad) call fucom dec xlat fdivrp mov mov ret test mov pushl call rcr pushl aam ljmp rcr ljmp rcr pushl int decl stos leave ljmp ret lock xchg mov and sbb shl test call lret fdivrp cltd lret (bad) popf int (bad) jle into jmp mov jmp sar test sar cmpsb sar mov (bad) mov icebp repz div (bad) out repz (bad) jmp cmpsb scas ljmp aad dec fsub dec (bad) dec fsub dec fucom call fsubp call fsubp call fsubp call fsubp call fsubp call (bad) call (bad) dec fsub inc aam pushl mov mov pushl mov ljmp ljmp enter into call rcr ljmp rcr ljmp fdivrp lods rcr pushl rcr jmp sar js leave ljmp ret icebp dec cltd mov add add dec cltd mov outsb mov into lcall lret (bad) lcall jmp sar cmpsb mov jmp sar test ret cmpsl sar cmpsl sar mov (bad) mov repnz (bad) (bad) (bad) (bad) dec xlat fdivr (bad) mov sar rcl inc xlat (bad) (bad) fsub dec (bad) dec fsub dec fucom dec fsubp dec fnop inc rcr ljmp mov incl movsb mov ljmp mov pushl leave pushl lret mov (bad) jns int3 call iret (bad) lods rcr ljmp rcr ljmp rcr ljmp rcr jmp mov enter ret repnz cwtl mov and add mov (bad) imul lcall lret fwait int (bad) jge int pusha mov mov jmp sar test jmp ret stos ret test jmp sar mov pushl idiv (bad) mov mov (bad) mov xlat fdivrp (bad) inc aam pushl mov ret cmpsl mov ljmp mov ljmp (bad) ljmp leave pushl lret mov pushl enter (bad) pushl lret rcl movsb into fdivr stos rcr ljmp rcr ljmp rcr ljmp loopne mov mov enter ret repnz cltd mov sub add add mov outsb mov int3 lcall lret cwtl lret fdivrp xchg (bad) (bad) cmpsw sar movsl mov jmp jmp sar test jmp ret stos ret stos ret test jmp mov pushl mov lcall mov decl mov mov jmp mov ljmp (bad) ljmp enter enter (bad) ljmp (bad) ljmp (bad) lods (bad) mov decl int ljmp rcr jmp iret (bad) test fdivrp stos rcr ljmp lret (bad) test enter ret lcall add addr16 imul call int3 (bad) jl int pop mov mov jmp jmp sar cmpsl sar test jmp sar test ret test jmp pushl (bad) mov mov jmp (bad) ljmp (bad) lods (bad) lods (bad) lods (bad) ljmp ljmp ljmp (bad) lods (bad) ljmp ret pushl (bad) incl int3 (bad) cmpsl rcr jmp into (bad) movsl into (bad) movsl iret (bad) test fdivrp stos rcr lcall mov (bad) ljmp ret lcall aas xchg mov outsl mov lret int call lret fdivrp xchg (bad) (bad) cmpsl mov jmp mov jmp jmp sar cmpsl sar test jmp sar test ret stos ret test (bad) ljmp (bad) ljmp ret ljmp ret ljmp ret ljmp ret ljmp ret ljmp (bad) ljmp (bad) ljmp ret jmp ret lods (bad) mov (bad) movsl iret (bad) mov into (bad) mov into (bad) cmpsb iret fdivrp cmpsl rcr lcall mov (bad) ljmp ret pushf mov sub push test shrl decl fdivrp xchg lret cltd int3 (bad) jnp int pop mov mov jmp mov jmp jmp jmp sar test jmp sar test jmp sar test jmp sar test ret stos ret test ret test sar stos (bad) incl lret mov into fdivrp mov int jmp iret fdivrp movsl rcr lcall mov pushl (bad) mov mov sub add add xchg scas inc insl mov enter (bad) xchg leave (bad) xchg lret xchg (bad) (bad) cmpsb mov jmp mov jmp mov jmp mov jmp jmp sar cmpsl sar cmpsl sar test jmp sar test jmp sar test jmp sar cmpsb mov (bad) jg into lcall into (bad) mov int3 (bad) lahf int jmp into fdivrp movsb iret (bad) xchg (bad) fdivr jg int jae (bad) mov mov sub add add mov decl lret (bad) xchg leave (bad) cwtl lret (bad) jnp into lcall mov jmp mov jmp mov jmp mov jmp jmp jmp jmp jmp jmp mov jmp mov (bad) jl int xchg (bad) (bad) lahf into (bad) sahf int lcall int3 (bad) sahf int3 (bad) mov iret (bad) xchg (bad) fdivr jge int3 pushl (bad) ljmp ret pushf mov sub aaa xchg mov outsb mov (bad) call leave (bad) xchg lret xchg (bad) (bad) arpl mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov (bad) jns int3 call int lcall (bad) fwait lret (bad) pushf int3 (bad) sahf int jmp (bad) jnp lret pushl ret ljmp (bad) notl mov add add pop popf mov incl lret (bad) xchg leave (bad) xchg int3 (bad) jnp into lcall mov lcall mov jmp mov jmp mov jmp mov lcall mov pushl lret call int lcall lret (bad) cltd lret (bad) lcall lcall (bad) xlat (bad) jns lret cmpsb ret mov mov das sub scas sub push ret lret xchg leave (bad) xchg lret nop (bad) (bad) bound lcall mov lcall mov lcall mov lcall jmp mov decl int3 (bad) lcall lcall lret (bad) fwait int lcall xlat pushl lret movsl ret mov mov xor add add mov incl lret (bad) xchg leave (bad) xchg int3 (bad) jp into call mov pop mov mov lcall mov lcall mov decl (bad) cwtl lret fdivrp xchg lret xchg lret xchg lret lcall decl mov ljmp sar mov mov xor add add nop stos and cmpsb sar leave (bad) xchg enter leave fdivrp nop (bad) fdivr popa mov mov pop sahf mov lcall mov decl int3 (bad) xchg lret fdivrp xchg leave (bad) xchg leave (bad) xchg lret cwtl int3 fdivrp cltd int3 (bad) mov xlat pushl ljmp ljmp ret pushf mov xor add add mov (bad) jnp iret call (bad) xchg lret (bad) jp int push cltd mov pop popf mov insl lods (bad) decl int3 (bad) xchg int3 fdivrp xchg lret xchg leave (bad) xchg leave (bad) xchg lret fdivrp xchg lret (bad) mov xlat pushl enter sar mov mov add add and shr mov (bad) xchg leave (bad) xchg leave fdivrp mov (bad) jo (bad) incl lret (bad) xchg lret (bad) xchg lret xchg lret xchg lret xchg lret fdivrp xchg lret (bad) mov (bad) pushl (bad) ljmp mov cld pop popf mov aaa dec fwait mov imul loopne nop enter enter lret xchg lret xchg leave (bad) xchg enter enter lret xchg lret (bad) xchg (bad) pushl (bad) mov sar popf mov cmp add add xchg test in mov (bad) xchg leave fdivrp nop enter enter enter enter lret xchg lret xchg (bad) mov sar popf mov cmp add add je lahf mov call (bad) nop enter lret xchg lret (bad) test (bad) mov sar sahf mov cmp add add jg push imul fcos xchg lret (bad) xchg lret (bad) test ret jmp mov (bad) pop sahf mov add add inc xchg mov push mov incl test mov (bad) pop sahf mov aas pop jg or rcl pushf mov ljmp sar lahf mov inc inc xchg mov jbe vmaxss mov add add lods and add add (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add and add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add sbb add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop addb add (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add add add add aas (bad) (bad) (bad) (bad) (bad) push add add loopne add add (bad) (bad) (bad) (bad) push add add incl add add (bad) (bad) (bad) (bad) jmp add add push add add (bad) (bad) (bad) (bad) jmp add add (bad) inc add add (bad) (bad) (bad) inc add add (bad) (bad) incb add (bad) (bad) (bad) (bad) inc add add (bad) (bad) push add (bad) (bad) (bad) (bad) incl aas (bad) (bad) incl (bad) incl (bad) (bad) (bad) cld add (bad) (bad) (bad) incl add add pop (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add add add add (bad) (bad) (bad) (bad) (bad) (bad) clc add add add add (bad) (bad) (bad) (bad) (bad) (bad) push add add add add (bad) (bad) (bad) (bad) (bad) (bad) push add add add add (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add add (bad) (bad) (bad) (bad) (bad) (bad) jmp jg (bad) (bad) (bad) (bad) inc aas (bad) (bad) (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incb add (bad) (bad) (bad) (bad) incb add (bad) (bad) (bad) (bad) cld add add (bad) (bad) (bad) cld add add (bad) (bad) cld add add (bad) (bad) (bad) clc add add (bad) (bad) (bad) clc add add (bad) (bad) push add add (bad) (bad) push add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) inc add add (bad) (bad) inc add add (bad) (bad) incl add add add add (bad) incl add add add add (bad) incl add add (bad) incl add add (bad) (bad) incb add add (bad) (bad) incb add add (bad) (bad) incb add add (bad) (bad) cld add add (bad) (bad) (bad) cld add add (bad) (bad) (bad) clc add add (bad) (bad) (bad) clc add add (bad) (bad) push add add (bad) (bad) push add add (bad) (bad) push add add (bad) (bad) (bad) clc add add (bad) (bad) (bad) clc add add (bad) (bad) (bad) cld add add (bad) (bad) (bad) incb add aas (bad) (bad) (bad) incb add jg (bad) (bad) incl add jg (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) jmp add (bad) (bad) (bad) (bad) jmp add (bad) (bad) (bad) (bad) push add (bad) (bad) (bad) (bad) push add (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) incb pop (bad) (bad) (bad) (bad) (bad) incb aas (bad) (bad) (bad) (bad) (bad) incl aas (bad) (bad) (bad) (bad) (bad) incl add add jg (bad) (bad) (bad) (bad) incl add add jg (bad) (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add add (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add add (bad) (bad) (bad) (bad) (bad) (bad) push add add add add (bad) (bad) (bad) (bad) (bad) (bad) push add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add add add add (bad) (bad) (bad) (bad) (bad) (bad) cld add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add add jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add addb add add add add add inc add jo jne imul fs add pop add push add xor dec dec add add add popa add popa add push jb jb ja jno ja jb jne outsl jb and insl sub xor pop cmp dec dec inc inc inc inc dec cmp inc aaa cmp xor cmp cmp inc or inc cmp cmp inc add add add push add inc inc adc pop sub push dec jnp jg addb jge addl pop pop pusha sahf dec push push movsb inc inc inc cmpsb cmp ds cmp xor aaa cmp xor adc inc inc add add add push add inc dec adc pop sub imul ja push jg subl mov mov jns jge insb outsl jo pop bound push push push mov mov int3 cmp mov cmp aaa cmp aaa cmp cmp inc cmp aas sub inc inc inc or inc inc add dec dec add add add popa add popa add data16 jbe je jbe addl cmpl outsb outsb pop pop popa popa outsb pop jno scas jo lret jmp ret jmp popf in inc dec mov cmp lods aaa cmp scas cmp ds cmp inc sahf aas inc inc mov inc jb dec dec push inc dec dec cmp dec and dec adc dec or dec add add add jnp jo jl insl ja pop imul push push adc lahf mov jmp pushl sar je lret imul cmp ja cmp xchg ds xchg cmp inc popf aas inc inc mov inc dec dec lahf dec dec dec xchg dec dec push jle push push gs push push dec dec push push das inc inc inc sbb dec or dec dec push add add add stos dec je sar jno aad jno int popa cmpsl (bad) (bad) jns xlat (bad) jns xlat ljmp mov inc push pop push xor inc inc inc ds inc push inc inc inc fs dec dec je dec dec orl push xchg dec push push (bad) dec push push orl outsl dec push push push dec push push cmp dec push and dec dec dec or dec add push add add add ret mov (bad) pushl aad movsb ret ljmp sar jnp fdivr jp fdivr ja aam pop (bad) xchg cltd inc pop addr16 dec pop pop or popa adc inc inc sbb dec and dec dec dec inc dec push push push dec push push push push push js push push jg push push jge push push jb push push pop dec push push dec dec dec push xor dec sbb dec dec cmovno add pop lahf mov pushl xlat pushl xlat pushl (bad) pushl jmp ret (bad) jnp fdivr jl fcos jnp fcos jp fdivr jno int push xchg lods pusha pop jle add add add jge push insb jne dec pop pop push dec pop pop or push push adc dec push push xor push inc dec push push push dec push push popa dec push push imul push pop dec push push dec dec dec push cmp push and dec dec adc dec dec or inc add dec dec add add add mov (bad) jp fdivr jns fdivr js xlat pushl xlat ljmp (bad) mov (bad) jle fcos jge fcos jl fcos jnp fcos jp aad mov mov add add pop add push push dec dec push or dec dec adc dec dec dec das dec push push cmp dec push push push dec push push dec dec push push inc dec push push cmp dec sub dec sbb inc or cmp add add ret mov std jle (bad) jge fcos jl fcos jp fdivr jns fdivr ja sar arpl fdivr jle (bad) jle fcos jge fcos jl fcos jnp fcos js (bad) mull mov or add add add push add push dec dec push or dec dec adc dec dec push dec push push sub dec xor dec xor dec dec dec sub inc dec and inc inc push cmp cmp pop lahf mov incl rcr jg (bad) jge fcos jl fcos jnp fcos outsb test ljmp iret incl rcr jg (bad) jle (bad) jge fcos jge fcos jl xlat pushl lret fistpll ret dec dec dec dec add dec add inc add inc inc inc adc push inc inc inc sbb cmp pop xor cmp xor or cmp push cmpsb shlb mov stc xchg (bad) test fdivr add incl ret jg (bad) jle fcos jnp aad arpl fdivr add (bad) add (bad) jg (bad) jle (bad) jge fcos jge (bad) js sar nop mov leave pop inc inc inc add inc add inc add cmp push xor pop das xor push xor cmp dec lcall mov fdivrp mov (bad) xchg (bad) test fdivr test fdivr (bad) ret (bad) add (bad) jb lret mov incl ret add (bad) add (bad) jg (bad) jle (bad) jle (bad) jge fcos ja iret repnz mov xlat pop push mov (bad) hlt (bad) lret loopne (bad) leave (bad) mov fdivrp mov fdivrp mov (bad) xchg (bad) test fdivr test fdivr add incl movsl ret (bad) jg fcos test fdivr add incl ret add (bad) jg (bad) jg (bad) jle (bad) jp (bad) incl ret cmpsb ret test int3 loope nop lret loopne (bad) (bad) lret mov (bad) mov fdivrp mov fdivrp xchg (bad) xchg fdivr test fdivr jbe int insl mov incl (bad) fdivr test fdivr test fdivr add incl ret add incl rcr jle (bad) jbe sar cwtl mov fsts jno int jge iret in cwtl shl call int call int3 loopne (bad) lret loopne mov (bad) mov (bad) mov fdivrp mov fdivrp mov (bad) xchg (bad) push rcr xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add (bad) jg (bad) jle fcos jns iret jmp ret fsubs leave fildl pop movsb (bad) je int3 loope lcall call into jecxz xchg into loop xchg int call lret loopne mov loopne (bad) lret mov fdivrp mov fdivrp jl sar insl mov decl (bad) (bad) xchg (bad) xchg (bad) xchg fdivr test fdivr test fdivr add incl ret add (bad) add (bad) jp aad mov fdivl jae into or int mov shl lcall in cltd shl lcall iret jecxz xchg into loop xchg int call lret loopne (bad) lret loopne (bad) lret mov fdivrp imul decl (bad) fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add (bad) js sar xchg fisttpll pop mov loop mov aad jmp shl lcall shl lcall shl call into loop xchg int call int3 loope nop lret loopne (bad) mov lret enter enter enter enter (bad) fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret add fdivr jl into jecxz (bad) fcoml add jbe iret add lret (bad) jmp xlat call jmp aam lcall shl lcall in cltd shl call iret loop xchg into loop xchg int call test incl lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl ret add aam lea frstor push sahf mov ljmp (bad) ljmp fsubr jmp (bad) call jmp aam lcall shl lcall shl lcall iret jecxz xchg into loop mov leave decl lret mov (bad) (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr add incl ret jns (bad) hlt (bad) mov fisttpll cwtl lret fiadd jo (bad) leave mov in ljmp fucomi ljmp ljmp fsubr jmp xlat call jmp aam lcall shl lcall in cltd shl lcall stos enter (bad) call lret loopne (bad) mov loopne (bad) leave (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg fdivr test fdivr test fdivr add incl mov iret xlat xchg rcl jb lret into loop mov out pushl fucomp ljmp fsubr ljmp ljmp fldl2t jmp xlat call jmp aad lcall shl lcall in nop (bad) insb lods enter (bad) xchg int3 loope xchg lret loope nop lret loopne (bad) lret loopne mov loopne (bad) lret mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) xchg (bad) test fdivr test fdivr add incl mov (bad) xchg mov rcrl push loop pushl loopne pushl in pushl fucomp ljmp fucomi ljmp (bad) ljmp fsubr jmp xlat call jmp aam lcall shl (bad) js int3 (bad) jg (bad) call int call int3 loope nop lret loopne (bad) lret loopne mov loopne mov (bad) (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg (bad) test fdivr test fdivr test fdivr (bad) ret jnp shr (bad) mov insl bound add jo leave xor int3 loope mov loop (bad) mov loope pushl fucomip pushl fsubrp pushl fsubr ljmp fucomi ljmp fldl2e ljmp fsubr jmp (bad) out mov aam call stos (bad) call into loop xchg int call int3 loope xchg int3 loope nop lret loope nop lret loopne (bad) mov loopne (bad) leave (bad) mov (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov fdivrp mov (bad) test fdivr add (bad) pushl sar outsb stos leave decl mov pusha mov icebp (bad) mov in (bad) mov loop (bad) mov loope pushl loopne pushl fsubrp pushl fucomp ljmp fucomi ljmp (bad) ljmp fsubr jmp (bad) call (bad) jle into (bad) jle aam xchg iret jecxz xchg into jecxz xchg into loop xchg int call int3 loope xchg int3 loope xchg int3 loope nop lret loopne (bad) lret loopne (bad) (bad) lret mov fdivrp test (bad) jg xlat (bad) jns sar jae int3 pushl leave ljmp enter lret scas int3 ljmp iret incl mov outsb mov daa sahf leave fdivrp ret inc out (bad) mov in (bad) mov jecxz (bad) mov loop (bad) mov loope pushl fucomip pushl fsubrp pushl fsubr ljmp fucomi ljmp fldl2e jmp xlat call ljmp (bad) call shl call iret jecxz xchg into jecxz xchg into loop xchg int decl (bad) fdivr (bad) rcl jnp sar jne int3 pushl lret stos leave ljmp lret ljmp into ljmp sar insb mov ljmp ljmp ljmp ljmp lret hlt inc popf mov add mov inc out inc out inc out inc out (bad) mov in (bad) mov in (bad) mov loop (bad) mov loope pushl fucomip pushl fsubrp pushl fsubr ljmp fucomi ljmp fldl2e ljmp mov sar cwtl shl call (bad) test fdivr jge sar jbe int3 pushl pushl lret pushl into pushl pushl aam jb aad jno aad jo aam outsl mov sar insl mov ljmp ljmp ljmp decl mov add (bad) sbb ljmp (bad) call hlt inc out inc out inc out inc in (bad) mov in (bad) mov jecxz (bad) mov loop pushl loopne pushl fucomip pushl fsubrp pushl fsubrp ljmp xlat call ljmp mov pushl int3 (bad) js int jnp sar jge (bad) (bad) jle fdivr jge fcos jnp fcos jns fdivr js xlat pushl xlat pushl (bad) pushl pushl aad jno aad jo aam outsl mov aam insl mov pushl int dec lahf mov add (bad) mov out dec ljmp (bad) jmp cmc inc call hlt inc out inc out inc out inc out (bad) mov in (bad) mov jecxz (bad) mov jecxz (bad) mov loopne ljmp loope nop mov lret ljmp ljmp mov mov sar test fcos mov fdivrp mov fdivrp xchg fdivr test fdivr (bad) ret (bad) add (bad) jg (bad) jge fcos jnp fdivr jp fdivr js xlat pushl xlat pushl (bad) pushl pushl aad jb aad jno aam jo aam pop lahf mov add mov idiv lret dec jmp dec ljmp enter (bad) jmp hlt inc call hlt inc call hlt inc out (bad) mov fucomi jmp mov decl mov mov jmp mov call xchg pushl stos call loope incl lret loopne mov (bad) mov fdivrp mov (bad) xchg (bad) test fdivr add incl rcr jle fcos jl fcos jp fdivr jns fdivr ja xlat pushl (bad) pushl (bad) pushl aad je sar pop movsb roll add sarl icebp dec jmp dec jmp dec jmp dec jmp dec jmp dec jmp dec in idiv enter mov aad lcall mov (bad) mov xchg call (bad) call xchg data16 call (bad) (bad) jl mov xchg mov incl sar jl scas (bad) jg mov xchg jmp jecxz call rcr xchg lret loope (bad) (bad) leave (bad) mov fdivrp mov fdivrp xchg (bad) test fdivr add incl rcr jle (bad) jge fcos jnp fdivr jns fdivr js xlat pushl xlat jmp int cmpsb les jae lret mov idiv int3 in idiv int3 in idiv enter mov shl lcall mov sar lods leave fcos (bad) (bad) dec rcr call (bad) (bad) (bad) (bad) pushf scas ret bound push pusha jle test jns ret mov mov mov ljmp jno incl js (bad) (bad) loopne rcl aad xchg jecxz xchg int call lret loopne (bad) lret mov (bad) mov fdivrp mov (bad) xchg fdivr test fdivr (bad) ret (bad) add (bad) jge fcos jl fdivr jp aad push sahf mov add mov jmp mov int3 ljmp jmp mov jmp mov dec fucom pushl mov ljmp movsb cmpsl jmp call mov jmp xchg call int mov cwtl (bad) decl lods call outsb scas decl jnp dec int3 fdivr mov mov test rcr cwtl shl call int call lret loopne mov loopne mov (bad) mov fdivrp mov (bad) xchg (bad) test fdivr add incl ret insl stos enter (bad) or add add mov jne (bad) lcall lcall mov jmp jmp jmp ret movsl mov dec fndisi(8087 dec fcomp (bad) fucomip jmp out out dec int inc aad call xchg xchg mov decl movsb int3 lcall jmp stos int3 call jl incl mov call scas int enter out hlt cmc lcall shl lcall shl call into loop xchg int call lret (bad) leave (bad) mov fdivrp mov fdivrp xchg (bad) test fdivr add lcall mov add enter leave lock int decl mov mov jmp ret test (bad) dec fnop inc into sar lods mov jmp (bad) decl pusha jge lahf rcr mov mov lcall mov mov mov sar mov int3 inc (bad) sar fcmovnu (bad) int3 iret into (bad) mov ret (bad) rcr mov shl lcall shl call into loop xchg int call lret loopne mov (bad) mov (bad) mov fdivrp ja int push movsb mov add mov pushl iret fdivr js lret cmpsb ret jmp mov pushl dec (bad) call (bad) call fsub (bad) (bad) loopne jecxz out popa jae call jns movsb enter stos lret pushl pushl scas jmp (bad) jmp jmp fdivr fucom (bad) fucom (bad) fsubp (bad) (bad) enter jecxz (bad) fcmovnu loopne fcomp (bad) loope out out repz jmp aam jmp aam lcall shl lcall shl call int call lret loopne (bad) enter cltd mov push ret test (bad) scas rcr call mov pushl int3 pushl leave ljmp mov call fucom (bad) mov leave leave inc aam ljmp lahf call jns data16 decl mov call jnp fabs jecxz mov mov mov jmp repnz idiv (bad) (bad) in rcl (bad) (bad) fcomp fdivrp mov rcl (bad) fucom in decl fsubr jmp out mov shl lcall shl lcall iret jecxz xchg into loop cmpl and pop mov aam lods rcr ljmp int3 pushl int3 (bad) js int jne enter sar rcr in ret int3 sar (bad) (bad) ljmp pushl lods lcall cmp dec push jo insl jle jmp jmp sar rol dec int3 into dec lret into inc (bad) cmpsb test pushl rcl (bad) (bad) in rcl xlat jmp call mov ljmp fsubr jmp (bad) out mov aam lcall shl lcall lahf mov add lds outsl cmpsb (bad) test (bad) lods rcr call mov pushl int3 pushl int3 jmp fucom inc lret int3 rcl jmp out jmp out push repz (bad) loop lods mov popf ljmp ror inc (bad) lret test (bad) fcmovu (bad) repnz idiv fsubp jecxz loope out lret into sar mov mov mov stos lods mov (bad) iret sar xchg mov in ljmp fldl2e ljmp xlat call jmp aam call lods lds pop mov sar stos rcr ljmp mov pushl lret (bad) js int mov loop fxam jmp (bad) out hlt idiv loope out (bad) (bad) inc (bad) lret mov call aad (bad) in out in (bad) ljmp call fcmovu call fcmovu dec lret into ljmp mov pushl aam (bad) in out icebp push repz push repz (bad) out repz jmp jmp lcall (bad) call ljmp fucomi ljmp fldl2t jmp xlat jmp ret (bad) (bad) fildl outsb lods movb int ljmp ret jae lret mov (bad) jl ret dec fcmovu call loope ljmp mov sar fucom loop call fcmovnu (bad) fsubp jecxz (bad) lret mov mov ljmp mov (bad) mov cmc idiv idiv cli jmp call in rcl aad call mov sar stos lods mov ror call loope pushl fucomp ljmp fucomi ljmp int3 loope push sahf mov add mov jmp into (bad) jbe lret mov pushl (bad) rcr call loop (bad) (bad) out in repnz jmp out call aad pushl stos scas inc (bad) lret (bad) (bad) in out lock in out icebp push idiv (bad) jmp out dec leave int3 (bad) mov stos lods (bad) mov ret (bad) (bad) fcos idiv sti (bad) jmp jecxz dec lret into (bad) mov lret (bad) test loopne pushl in pushl fsubrp pushl lret mov add imul lret (bad) movsl into (bad) mov aam jno enter enter sar shl out mov ret lcall test sar rcl fdivr repnz idiv in lock dec into sar int3 into sar loope in enter rcl aad into rcl (bad) in out lock stc cli push hlt idiv in out lock fsubp loop mov cmpsb stos inc leave int3 dec into sar in jmp loop out call in (bad) mov loope pushl (bad) call imul add push ret inc xorl pushl leave pushl leave call fucom (bad) fsub out (bad) jmp fsub in aam (bad) mov lods mov cmpsl test in (bad) (bad) (bad) out lock clc stc inc enter fstp inc enter mov mov aam fcos ljmp push stc cli call xlat fcos xlat fcmovu (bad) fndisi(8087 in jecxz out pushl shl (bad) mov jecxz (bad) mov mov rorl pop sahf mov jmp rcl insl scas (bad) (bad) jg sar fneni(8087 dec (bad) (bad) popf mov mov mov fcmovnu (bad) in repnz (bad) fsubp in ljmp (bad) in out icebp pushl lret int (bad) jmp jecxz (bad) in out lock repnz out lock rcl call (bad) pushl ret mov fcmovnu (bad) fucomip in dec fcomp (bad) jp (bad) inc out (bad) mov fucomip decl mov gs cmp lret into (bad) mov scas (bad) ljmp mov dec fndisi(8087 dec (bad) inc iret aam (bad) inc leave int lods mov jmp in out inc leave int3 (bad) clc cli cld (bad) (bad) loopne repnz idiv xlat (bad) dec into sar stos lods mov cmpsb test pushl rcl dec rcl call (bad) jmp in out jmp in lock fucomip in (bad) fsub jmp ljmp mov inc call (bad) pop test sbb push pushf mov lcall mov mov inc (bad) (bad) mov mov mov inc rcl jmp jmp ljmp mov mov call rcl (bad) fcmovnu loop loope jmp jmp jmp (bad) fsub out loopne in (bad) fucomip in (bad) fsub jmp ftst jmp dec fucom dec fndisi(8087 incl lods enter repz mov add shrb lods enter (bad) pushf lret (bad) insb lods (bad) decl ret cmpsl mov int3 call jecxz inc rcr lcall mov dec rcl pushl loopne jmp in lock ljmp jmp in out jmp ljmp fsub jmp ftst jmp call loopne call (bad) dec fnclex (bad) mov (bad) mov lods ret popf mov cld bound add push cltd mov lcall mov mov (bad) fucomp in jmp out lock ljmp mov aad call jecxz (bad) fucom in jmp jmp in (bad) fsubrp in (bad) fsub ljmp loop call loopne call (bad) dec fchs (bad) mov ror mov ror movsb (bad) aad scas iret fdivr mov (bad) cltd ret aad jo vcvtsd2ss add pop movsb mov negl lret (bad) imul ljmp ret jmp ljmp mov enter aad int3 fndisi(8087 call fsubp call loopne call loopne call (bad) call fsubp inc (bad) (bad) mov aam pushf mov ret pushl ret incl int ljmp rcr ljmp aad outsl test loopne mov les dec cltd mov test incl mov jmp sar stos ret lcall call ret aad inc xlat fdivrp mov (bad) sar xchg mov (bad) jge sar stos ret lods (bad) mov incl int3 (bad) stos rcr ljmp iret fdivrp xchg rcl outsl cmpsl (bad) mov or add add (bad) sbb ret repnz leave (bad) xchg lret push cmpsb mov jmp sar test ret incl stos mov ljmp mov ljmp ljmp (bad) ljmp (bad) mov (bad) cmpsb iret (bad) cmpsb iret (bad) cmpsb into (bad) nop mov (bad) mov or add add mov call mov mov jmp jmp sar test jmp sar test ret stos ret stos ret test int3 lcall int jmp int decl cmpsl (bad) mov or add add les imul jmp sar mov mov jmp jmp jmp sar cmpsl sar cmpsl sar mov call int3 (bad) lahf int3 (bad) sahf int3 fdivr mov in mov (bad) or add add mov call sar pop mov mov jmp mov jmp mov call lret (bad) fwait lret (bad) lcall ljmp ret mov (bad) or add add les mov (bad) xchg leave (bad) arpl mov lcall mov decl lret cwtl lret xchg leave fdivr cmpl out mov lds add add mov call mov mov push ret ret xchg lret xchg leave (bad) xchg enter mov shl mov (bad) or add add roll lahf mov call rcl xchg leave fdivrp xchg leave (bad) xchg enter mov ljmp shr mov lds push sahf mov call enter (bad) fdivr jnp int push mov lds pop mov mov (bad) jns int3 jmp mov jnp lods lds dec cltd mov gs mov jl stos les pusha cmpsl ret add add push (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) push add pop (bad) (bad) (bad) push add add (bad) (bad) (bad) clc add add (bad) (bad) (bad) jmp add add (bad) (bad) (bad) incb add aas (bad) (bad) (bad) incb add pop (bad) (bad) (bad) cld add add jg (bad) cld add rolb (bad) (bad) clc add incb add (bad) clc add push add push add aas incl add (bad) (bad) (bad) jmp add pop (bad) (bad) (bad) jmp add add (bad) (bad) inc add add (bad) inc add add (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add (bad) (bad) incl add add jg incb add add aas (bad) incb add add (bad) incb add add add cld add add add (bad) cld add add add (bad) clc add add add (bad) clc add add add push add add add push add add add jmp add add add jmp add add add inc add add add inc add add add inc add add add inc add add add jmp add add add loopne add add jg lock add add push add add add (bad) clc add add add (bad) clc add add add (bad) cld add add add (bad) cld add add add (bad) incb add add (bad) (bad) incl add add (bad) (bad) incl add add (bad) (bad) incl (bad) (bad) incl (bad) (bad) inc add add (bad) (bad) inc add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) push add (bad) (bad) (bad) push add aas (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) incb (bad) (bad) (bad) (bad) (bad) (bad) incb (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sub add xor add pusha add add add add add add add add ds add aas aas push das xor xor and add add add pop push add dec adc and je jg test orl push jb ja pusha fs push push jg dec dec jle inc inc popa cmp cmp sub sub pop and add add add movlps xor pop and jo jle andl mov movsb jne jns pusha gs fs cmpsl out inc inc dec sarb lods cmp inc jae inc inc dec ds inc sub cmp sub add sub inc push push push pop pop arpl jbe push addb xor jge dec push push imul (bad) mov xchg (bad) cmp aas mov inc inc mov inc inc mov dec dec push fs push push aas inc dec dec and ds sub add add add (bad) add mov enter enter (bad) pushl leave cmc jno shl imul inc inc push inc inc jg dec dec nop dec dec dec lcall push (bad) push push push jne pop pop push dec push push xor dec sbb ss and (bad) cld je sar jae sar jno (bad) mov sar je (bad) lock les inc inc sbb dec sub push inc push push push push push push push outsb push push push jle push push adcl pop pop push pop pop inc dec push push and sub and mov (bad) ja xlat pushl (bad) pushl lret stos enter (bad) (bad) jp fdivr jbe int jae (bad) movsl lds add add inc inc or dec adc push push push cmp pop push push pop pop pop push push pop bound pop pop push pop pop inc push push push das dec dec dec sbb cmp or and push pop push add push pop pop pusha lea ljmp mov decl mov (bad) jge fcos jl fdivr jp xlat pushl lret cmpsl (bad) int3 jae lds and cmp inc inc dec adc push push push xor pop pop inc push pop pop inc push push pop cmp push sub dec sbb cmp and add add add and inc pop pop push jo jb xchg cwtl cwtl xchg mov int3 ror jmp in jmp in (bad) fcmovnu jmp ljmp cwtl ljmp enter fdivr jle fcos jge fcos jl fcos jns sar je (bad) repz (bad) lcall add and cmp or inc adc dec sbb dec and push push inc dec dec push cmp inc or and add int3 into lret repz ljmp mov (bad) pushl mov push push mov dec int3 fdivrp sbbl incl ret jg (bad) jle fcos jge fcos ja int jae (bad) out jae lds add add and add daa sub pop and add push push jae lahf aaa cmp dec add add add enter stos lret je ljmp push (bad) call sahf jmp movsb jmp stos pushl mov mov sar pushf scas mov js int3 ljmp enter fdivr (bad) ret (bad) add (bad) jg (bad) jle fcos jl xlat pushl lret cmpsl (bad) mov or or das das das or (bad) (bad) (bad) fsubp (bad) mov stos shlb pop mov movsb enter mov incl mov mov (bad) jns mov mov sar mov sar mov pushl (bad) pushl sar add incl ret (bad) add (bad) add (bad) jg (bad) js iret (bad) jae (bad) cmpsb (bad) xchg ds call call ret aam (bad) out lods scas test call (bad) jo test xchg mov incl mov subb movsb pushf lret call fcmovbe pushl mov pushl (bad) incl (bad) test fdivr test fdivr add incl ret add (bad) jg fcos ja int3 hlt je (bad) loop movsl lds mov lcall (bad) call cmp pop cmp imul (bad) js mov xchg mov (bad) jg mov scas lods sar stos movsb int3 lcall popf decl test jmp jecxz (bad) jns mov (bad) leave (bad) jne enter sar xchg fdivr xchg (bad) xchg (bad) test fdivr test fdivr test (bad) add incl ret jle (bad) pushl enter (bad) lods jae lds sub sub lret fldcw pop jg push pop ja outsb mov incl (bad) call fnop incl ja decl cmpsb int3 call lods incl jle jmp in (bad) jl cmpsl call rcr jae enter (bad) mov fdivrp mov (bad) mov (bad) xchg (bad) xchg fdivr test fdivr test fdivr add incl ret (bad) jns iret sti jae (bad) cmpsb lds dec dec dec dec ljmp decl js dec push jo sbbb lcall mov iret rcl lcall je decl int3 loopne cltd nop ret (bad) js lods decl jns (bad) fcmovnu jmp call int (bad) js lret mov decl enter enter (bad) fdivrp mov (bad) mov (bad) xchg (bad) xchg fdivr test fdivr test (bad) add incl scas int3 bnd (bad) (bad) jae lds mov ljmp jns (bad) jl ret mov incl (bad) lahf (bad) mov lahf lret call stos jmp ljmp lcall sar jnp dec (bad) loopne mov shl lcall (bad) (bad) je (bad) incl lret (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg fdivr test fdivr test fdivr add (bad) jle (bad) pushl repz (bad) mov and and (bad) fldl2t fwait scas ret pop jle pushf mov jmp pushl scas incl insb jmp mov decl test decl ret decl mov (bad) mov ret mov lcall shl (bad) jge into pushl int3 decl lret loopne (bad) mov (bad) (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov (bad) mov (bad) xchg (bad) xchg fdivr test fdivr test fdivr jp into clc jae (bad) hlt jae lds add add pop gs (bad) push pop jp fwait mov ljmp nop mov pop insl nop incl ret (bad) xorl ljmp mov sar iret rcr call fcomp (bad) fcomp (bad) mov xlat call jmp into jecxz je (bad) decl int3 loope xchg int3 loope xchg lret loopne nop lret loopne (bad) (bad) leave (bad) mov (bad) mov fdivrp mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg fdivr test fdivr cmpb icebp insb mov stos push or or (bad) rcr call cmp pusha jnp mov mov mov ljmp lahf jmp jbe ljmp call fstp call fstp inc aam (bad) mov aad ljmp shl ljmp ljmp xlat jmp incl mov call int call int3 loope xchg lret loope nop lret loopne (bad) mov (bad) mov fdivrp mov fdivr add (bad) jge aad js sar jae lret pushl enter (bad) pushl (bad) mov add cmp out cli cmpsl mov mov dec push jo push lcall cwtl mov jp mov bound push arpl lcall in (bad) mov loop (bad) mov loopne pushl fsubrp pushl fsubr ljmp (bad) ljmp (bad) call decl iret jecxz xchg into loop xchg int decl (bad) (bad) mov sar jne lret pushl enter (bad) pushl vpshuflw ljmp int outsb mov pushl (bad) fwait mov add jne fnstsw (bad) fsubp in mov movsb mov data16 call jp dec pop jb push pop js dec push insl incl out jmp movsb mov repnz mov in (bad) mov loop (bad) mov loope pushl fucomip pushl fucomp ljmp fucomi decl stos enter xlat (bad) jge sar ja lret pushl pushl (bad) pushl (bad) pushl leave pushl int jae sar jno sar jo aam outsl mov sar insl mov pushl lret ljmp ret (bad) or add add sarb int3 lret enter in fsub out mov int mov jle pop outsb mov mov (bad) fucomip inc call repz out inc in (bad) mov in (bad) mov loop (bad) mov xlat call call mov (bad) js (bad) pushl (bad) cmpsl (bad) pushl int3 (bad) jnp sar jge aad jge xlat (bad) jl fcos jnp fdivr jns xlat pushl xlat pushl (bad) pushl pushl aad jno aam jo aam jo vmulsd stos add add add mov lret (bad) (bad) in aad (bad) mov repz lcall ljmp (bad) jmp hlt (bad) mov xlat call decl mov pushl (bad) (bad) jl leave decl ret mov (bad) leave fsubp ljmp lret enter (bad) (bad) xchg fdivr test fdivr (bad) ret (bad) add (bad) jle fcos jl fcos jp fdivr js xlat pushl (bad) pushl (bad) pushl sar outsb mov stos push and (bad) iret fdivr (bad) xlat fdivr fsub loopne fsub (bad) mov (bad) out sahf enter mov leave pushl (bad) incl mov fdivr mov jecxz (bad) fsubr in jmp in out (bad) call out icebp (bad) jmp call lret ret mov (bad) mov (bad) mov fdivrp xchg (bad) test fdivr add incl rcr jge fcos jnp fdivr jns fdivr jb enter mov add add add mov ljmp rcr xorl (bad) lahf mov jmp (bad) loopne fsub ljmp out lock ljmp (bad) jmp repnz jmp repnz jmp repnz jmp repnz jmp repnz jmp repnz jmp aam (bad) jp lret int call lret loopne (bad) leave (bad) mov fdivrp mov (bad) xchg (bad) test fdivr (bad) ret (bad) add (bad) jl (bad) pushl (bad) sti and add and (bad) jmp insl mov mov lcall lcall mov pushl jecxz jmp jmp (bad) ljmp (bad) in icebp repz in icebp repz in icebp repz in icebp repz in icebp repz in icebp repz in icebp repz in icebp repz in icebp repz in icebp repz in out incl mov jecxz xchg into loop xchg int call lret (bad) leave (bad) mov fdivrp mov (bad) xchg fdivr ja lret ljmp (bad) mov (bad) add add add mov ja (bad) sti movsb leave fdivr mov sar mov mov lcall loop jmp ljmp in repnz in repnz in repnz in repnz in repnz in repnz in repnz in repnz in repnz in repnz in repnz jmp repnz fnsetpm(287 (bad) jns leave lcall shl lcall iret jecxz xchg into loop xchg int3 loope xchg lret loopne mov (bad) mov fdivrp jae (bad) (bad) push and ret ret mov (bad) mov (bad) std jb (bad) cltd mov test jmp ljmp out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz jmp out icebp decl aad mov aam lcall shl lcall iret jecxz xchg int (bad) jle sar push rcl (bad) pop and mov jns enter (bad) stos rcr (bad) jp int jp into pushl (bad) xchg stos call (bad) (bad) fucomip in (bad) jmp repz (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc (bad) out hlt cmc dec jecxz pushl (bad) ljmp xlat jmp jmp shl lcall shl pushl (bad) xchg mov and add and shrl shl decl mov (bad) jp into jmp cmpsl inc aad (bad) fsubrp jmp jmp hlt cmc push cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv ljmp decl fucomi ljmp fsubr jmp (bad) out mov ret (bad) or add add (bad) add test cli stos iret fdivrp test mov (bad) jns int insb cltd mov stos ror fsub ljmp repz push cmc idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv icebp cmc idiv fsub in pushl (bad) fsubr pushl fsubr ljmp ljmp pushf mov add add add (bad) push addr16 mov loopne mov int3 ljmp mov (bad) ftst call (bad) out repz push div push div push div push div push div push div push div push div push div push div push div push div push div (bad) jmp hlt (bad) jg ret decl loopne pushl in lcall movsl (bad) out and add and (bad) int3 fdivr movsb into fdivr je lret test mov (bad) loop jmp jmp (bad) in icebp repz hlt idiv icebp cmc idiv repnz push div push idiv push idiv push idiv push idiv push idiv push idiv push idiv push idiv push idiv push div (bad) mov movsl (bad) pushl loop pushl scas lret lcall mov add add add (bad) add test (bad) xchg (bad) jmp mov (bad) fsub jmp in lock ljmp (bad) out hlt idiv repnz push idiv push clc stc push clc stc push clc stc push clc stc push idiv push idiv push idiv push cmc idiv out hlt idiv loopne out jmp mov mov repnz cmpsl xabort (bad) adc add add (bad) adc (bad) leave (bad) lahf lret fdivr outsl mov jmp stos pushl in rcr in mov jmp repz out repz repz push idiv push idiv push idiv push cmc clc push hlt idiv out repz in icebp hlt (bad) ljmp jmp ljmp jae (bad) fucomp incl sahf mov add add add (bad) add lahf mov cli mov mov mov xchg scas mov ljmp mov jmp jmp icebp (bad) out repz push hlt idiv out repz (bad) in repnz (bad) ljmp jmp in out jmp ljmp ret rcr jmp mov pop xchg mov xchg (bad) (bad) and add and ret loope (bad) fwait lret imul (bad) (bad) call ljmp mov (bad) fsubrp in jmp in out jmp in icebp jmp in lock ljmp mov mov incl (bad) cmpsb ljmp lods incl mov leave std jbe (bad) ljmp les and mov stc sahf int (bad) jle int movsb mov dec fsubp (bad) call mov enter in leave fcomp pushl mov (bad) js scas jmp movsl ljmp scas pushl mov ljmp shl ljmp mov ret loop mov pop and add and ret ret xchg enter test jmp jmp mov nop mov fdivr mov xchg stos jmp cmpsl ljmp scas ljmp mov pushl lret rcl cmpsl iret (bad) lods shl jmp mov cli jo (bad) out lahf mov adc (bad) add add add (bad) add dec js leave stc cltd int3 (bad) jnp int cmpsb mov jmp mov ljmp mov ljmp (bad) lods (bad) ljmp (bad) incl int3 (bad) cmpsl rcr jmp mov cli jo (bad) call and stos add add add (bad) or mov fdivr arpl mov jmp sar test jmp sar stos ret (bad) jg into lcall (bad) pushf lret (bad) mov cli jo (bad) ljmp stos adc (bad) add add add (bad) add mov stc xchg lret js int3 jmp mov jmp mov (bad) jp int3 call int call mov sti outsl movsb ret ljmp stos adc (bad) add add add (bad) or rol mov fdivr pop mov mov call lret (bad) xchg (bad) (bad) jge int jo ret jmp lahf mov adc (bad) add add add (bad) add mov jne (bad) sti xchg leave fdivrp (bad) mov (bad) xchg lret (bad) pop (bad) jnp int outsl movsb ret in pop lahf mov adc (bad) add add add (bad) or (bad) mov mov (bad) xchg lret mov (bad) jns int3 sti outsl movsb ret out pop lahf mov adc (bad) add add add (bad) add xchg mov jne (bad) (bad) js lret cli outsl movsb ret out pop lahf mov adc (bad) add add add (bad) pop insb mov shrb stos adc (bad) add add add incl (bad) (bad) incl add addb (bad) incl add add (bad) incl add rolb (bad) incl add incl add incl add incl add incl add incb sbb pop add (bad) cld add rolb add loopne add add add loopne add lock cld and add cld add clc add add incl add add add incl add add add incl add add add incl add add add aas add lock add sldt loopne add add add loopne add add add rolb add add add add add add add add add add add add add add add add add add add add add add add add add pop add cld add add pop add incb add add add incb add add add incb add add add incl add add add incl add add add incl add inc add add add inc add add add loopne add jg add loopne add incl add lock add add push add add add (bad) clc add add add (bad) clc add (bad) add (bad) cld add aas incl add cld add (bad) incl add incb add incl add incb (bad) incl add incl aas (bad) incl add incl (bad) (bad) incl add incl add add add add add add add and add add adcb add jp bound or xchg outsl test arpl daa aaa cmp pusha daa push data16 dec popa push imul fs xchg orl dec push pop lods cmp pop dec push pop sub push pop adc mov je xchg add jns jnp mov xchg jo (bad) movsb ret (bad) pop jg aad push pop stos ds inc xchg inc inc dec lea dec insl dec dec dec dec dec push push sub jne push imul lea sahf jb iret pushl enter into stc insl popf mov pop jne ja dec dec aas dec dec dec push dec push push gs push push jo push push push push pop dec push popa xor adc addr16 add add lcall scas ret (bad) js mov (bad) jns xlat pushl into sti je enter mov insb xchg test dec pop or insb adc push push pop ds push push dec push push pop inc push push push xor push push pop bound dec push pop add add add addr16 xchg movsl ret mov leave (bad) mov aam ljmp lods (bad) js aam jl fdivr jp aad jne lret fdivs mov add add add add add lea pop ja or (bad) andps sbb dec pop dec dec dec pop inc dec dec sbb push or ja xchg jno (bad) and jg mov mov call (bad) mov pop outsl movsb jmp stos ljmp movsb mov jae int3 (bad) jg fcos jg (bad) jle fcos jp sar jne lret mov mov bound mov pop jae add add add add mov lret jae je cltd pushf lcall xorb xchg lcall mov enter aad (bad) ret (bad) add (bad) jge xlat std js into in jb ret mov add imul adcl scas std mov sar mov ja call dec sahf call into (bad) jle lret pushl int3 incl (bad) test (bad) (bad) ret (bad) add (bad) cld js int jae ret mov add insl jns add xchg xchg xchg pop jge pusha jne lcall jl mov jp call fwait (bad) pushl lods decl int decl mov (bad) jg aad mov (bad) xchg fdivr test fdivr test (bad) add incl mov icebp je (bad) mov jns lea mov mov lcall mov mov test mov cmpl incl jp (bad) mov rcl pop fdivr jns int mov (bad) mov fdivrp mov fdivrp mov (bad) xchg (bad) xchg fdivr test (bad) (bad) ret jns iret out je (bad) nop jb shlb add outsb jno push mov leave out gs call cmpsb lret lcall xchg ljmp (bad) (bad) ja incl xchg (bad) mov lret xlat lcall mov (bad) decl leave (bad) mov fdivrp mov fdivrp mov (bad) xchg fdivr xchg fdivr test (bad) cmpb leave jb lds add add lahf sahf stos mov cwtl jmp popf sar jl call leave ljmp mov xlat inc aam inc xlat fdivr lods aad jmp in jl int (bad) (bad) (bad) xchg int3 loope xchg lret loopne (bad) (bad) leave (bad) mov fdivrp mov (bad) test (bad) (bad) rcr jge aad je lret clc outsl cmpsl lds add add push rcl in je mov decl xchg mov push mov (bad) mov loope (bad) mov fsubr pushl fucomi ljmp fldl2e ljmp mov aad xchg into loop xchg int decl (bad) (bad) jg sar jp iret pushl lret pushl lret lods lret scas int3 ljmp ret stos enter add jle xchg pop rcl shlb mov mov decl js scas mov (bad) inc out (bad) mov jecxz (bad) mov loope pushl (bad) jmp (bad) jns leave (bad) jge sar jns int jbe int3 pushl int3 pushl into pushl pushl aam jo aam outsb mov int3 call mov add add add add add stos mov mov mov mov (bad) sahf scas mov (bad) mov call repz mov (bad) out cltd (bad) fdivr lea call (bad) xlat jmp mov incl rcr add (bad) jge fcos jnp fdivr ja xlat pushl (bad) pushl aam outsl stos enter mov add mov popa mov (bad) mov (bad) xchg mov aad xchg mov aam stos leave fcos rcl call in jmp jmp jmp out lock jmp in out decl (bad) (bad) leave (bad) mov fdivrp xchg fdivr add incl rcr ja sar pop popf mov add add add mov jmp imul jmp mov mov aam shl out in lock jmp lock jmp repnz jmp repnz jmp repnz jmp repnz jmp repnz mov mov loop xchg int3 loope mov (bad) mov fdivrp xchg (bad) test (bad) je lret test add outsb movsb mov mov (bad) mov std mov mov test out (bad) jmp repnz in repnz in repnz in repnz in repnz in repnz in repnz in bnd in out lcall int lcall jecxz xchg int call (bad) (bad) pusha mov lret add add rolb popf mov (bad) cmpsb int3 (bad) ja lret test (bad) xchg mov (bad) (bad) jmp (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) out repz (bad) in repz dec fsubp decl (bad) call lcall shl incl movsl rolb roll xchg movsb mov rcl jns int test in ljmp push cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv icebp cmc idiv out repz lcall loope stos (bad) ljmp lret loopne insl cmpsl vxorps add data16 rorb iret call jnp int jl mov (bad) jmp hlt idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv repnz idiv rcl decl fsubrp pushl rcr inc cltd mov push mov fsin mov mov jmp jmp (bad) in icebp hlt (bad) out hlt cmc push cmc idiv hlt idiv push idiv push idiv push idiv push idiv push div jmp jmp decl call ljmp ret ret jne lret add add mov cmc cltd enter movsl mov call loope dec fnclex jmp in icebp (bad) out repnz push idiv push idiv push idiv push cmc idiv out repz in repnz jmp out icebp call mov (bad) imul add test mov cli jle leave incl stos mov ljmp ljmp jmp repz out icebp (bad) frstpm(287 ljmp int3 (bad) jmp scas mov (bad) ja (bad) call arpl leave aam ret (bad) ljmp mov (bad) fsub jmp dec fcomp dec (bad) pushl mov incl stos mov lcall into cld arpl movb aam insl lods ret add mov std jnp int3 jmp mov decl cwtl scas ljmp mov imul decl int3 (bad) xchg ret (bad) stc insl test ret lods ret add add push jns lret out ret arpl mov ljmp sar scas (bad) incl enter ret js leave aam pushf mov sbb add add mov divb lret mov ret (bad) jle iret call aad push ret mov bound add push mov (bad) rcl jnp into decl aad je enter mov jne lds mov add add add rolb pushf mov std test shlb push mov add bound les arpl ret add add add add (bad) cld add (bad) incb add inc add inc add incb push add add clc loopne add loopne add rolb pop rolb pop rolb add add add add add add add add add add add add add add pop cld add paddb add incb add incb add incl add incl add addb inc pop (bad) inc (bad) inc jg jmp (bad) ljmp add add add add add add add add add add add gs adc mov jns pop dec pop arpl push cmp jo ja nop pop push stos enter pushf aam push pop ja dec push pop push pop pop inc push fs push pop gs ja nop pop jnp xchg xor mov (bad) (bad) js shr jo mov pop pop je sbb insb sub push and push adc push add add add add add lea pushl mov test sar rcr jle fdivr ja lret ret mov pusha jg add add add mov mov mov call insl mov lahf ret jge sar xchg fdivr add (bad) jle (bad) cli jne lds xchg pushf mov pushl mov movsb popf ret cmpb lods (bad) sar mov fdivr mov fdivr mov fdivrp mov (bad) test (bad) jl rcr jae ret push add add (bad) nop pushf add jge mov jb lods jmp lret (bad) mov fsub jmp mov loope mov fdivrp cmpl pushl std insl test cmpsb push mov ret imul int inc out (bad) mov shl lcall mov sar jnp sar js aam jae aad jo iret std pop cmpsl ret add add add add jo mov incl leave fdivr (bad) (bad) (bad) (bad) in (bad) call out icebp call lret mov (bad) (bad) ret (bad) imul add add add movsb mov (bad) insl cmpsb sar iret xlat (bad) in icebp repz out repz (bad) out repz (bad) out repz dec (bad) lcall shl decl lods (bad) cmp add add lret mov int in repnz push cmc idiv repnz idiv repnz idiv icebp hlt idiv mov fucomi (bad) js int ja iret add add add (bad) xor mov (bad) fucom jmp in repnz push idiv push idiv push hlt idiv mov iret loop jb enter add jno (bad) mov lods ret int mov loope pushl ror cwtl mov ret mov fs and cmpsb mov pushl sar rcl jg int3 into jp enter iret add add add ret xchg jbe lret incl mov (bad) jno les mov add add add mov (bad) cmpsb rcll les loopne add lock add loopne add rorb add add add add add add add add add add add add add pop add clc pop add clc jg add inc add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add or add add fdivr loopne adc dec inc add add add js add loope jbe js data16 dec dec add add add add xchg add add add add sbb add add add add inc add add add add dec inc dec inc inc add dec add inc add add add push add add imul and dec add arpl add add xor add add add (bad) fildl inc add add or push pop or or or or sbb adc adc sbb push sbb sbb and daa and sub sbb sub das xor xor pop cmp xor xor xor fildl inc add or or or or sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc add or pusha add add adc add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add cli add add pop icebp push xchg mov adc inc push ds fild (bad) aam push lods in add push adc mov loop lcall inc inc cltd mov add sub and jns fwait mov ss xchg (bad) fidivr cwtl out xchg jge incl mov incl scas nop cmp mov mov imul fstl out imul loop sub ss mov sahf test aaa jecxz adc push rcrb aas mov dec pop add icebp ror xlat fisttpl mov scas popf incl cmp stc pop repnz popa push clc (bad) xchg (bad) cmc aaa sub mov sub mov sub mov sub mov sub mov mov fwait movsb adc xchg push push add mov outsb cmc ljmp ret stc sahf push cmp test nop clc mov xchg das in inc jbe dec in dec aas jecxz pop cwtl mov push pop (bad) pop lock sub or in stos cmp lods push fcoms adc sbb jl ja rolb (bad) in mov push into fldl push adc jmp jmp xchg stos ret push pop psrad add (bad) xchg add repnz jg hlt xor ljmp (bad) cmp cmp fdiv cwtl je fucomip inc gs mov ds mov ret mov or sub mov sar daa into rol push xchg pop gs lock push and dec (bad) lea sub lret mov hlt mov mov adc push add add push add add push add add jmp mov fcompl xchg sbb jae jne in mov dec xchg cli xchg sub jne adc ficoml fnsetpm(287 dec jecxz dec ret sbb cmp clc mov mov lds xchg inc sbb lock jecxz and imul push mov inc mov add sbb ja stos xor pop push (bad) (bad) lods notb jp cmpb inc sbb cmp or fild int3 lahf mov fucomip push dec loope pop dec push fisubr das adc jp pop jp pop mov push ret and xor leave aas pop cli dec dec push xchg into push xchg (bad) xlat push xchg stos ds enter loop add inc inc pop and jp in adc sbb sub mov gs inc xor mov out pop pop imul pop mov dec adc dec test lods cmp mov cmp add sbb pop sbb add add push add add push add pushf mov cld mov (bad) cmpb pop nop fildll fildll dec bound mov mov out lcall jns jl ds aam adc int dec fwait bound icebp repnz in sti cmp inc jae jo adc add cmp add add xor ror mov dec aam clc pop incl and xchg shr gs sar (bad) addr16 and dec xchg adc jge inc jmp popf in fcomps andl sbb in sbb es movsb stc jbe out and cmpsl out add xchg push in out stc mov jbe clc aas data16 push dec ret ds cmpb incl push gs dec lret mov pushf mov test add lods jg fldcw lods xchg notl and dec cmpsl xor pop je push jbe push std or lcall push mov ror xchg adc cltd jae (bad) cmpsb scas sub (bad) jnp out je leave cs neg outsl stc out lahf popf pop inc leave cs neg outsl stc out lahf popf pop inc leave cs (bad) lret outsl stc in lahf popf pop inc leave lds icebp inc (bad) test cmp loop fcmovb mov mov divl push aaa pop adc xor nop inc inc sub stos push jbe pop jb push sub sub (bad) aad arpl aaa sub imul enter mov fimull bound insl inc sbb test cmc es inc pop inc lds add push clc dec fst pop fmuls aad nop dec sub mov xor inc das outsl dec cmp cli fwait icebp and arpl sub mov aam das mov sbb jg cwtl xlat push daa loop iret data16 (bad) cmpsl ljmp arpl add movsl xchg jg inc out popf movsl outsb ja add (bad) mull (bad) cmpsl mov sbb aad adc lahf and pop push and subl fldcw ljmp maxps or sub mov repz lea or (bad) std cmp std add es inc shlb lahf cmpsl ljmp dec outsl and sbb test in mov jb xchg in (bad) cmc pop add dec (bad) mov ljmp and incl dec inc idiv stos shlb lahf sub push xchg mov add in jg insb incl out cld int repnz inc jno cmpsl pop (bad) repz inc sbb into in inc push ljmp mov int (bad) push iret es cmpsl mov aam in mov int xchg inc xchg nop repz (bad) cmpsb mov mov (bad) loopne out jae ja outsb mov or adc pushf push aad jnp jae aas or in imul ficompl repz lahf sbb pop out clc popf jle,pn sbb xchg push and addr16 faddl out pop pop mov jo cwtl push cmpl sbb adc jo and ljmp je leave lods scas insl cwtl sub push inc scas sbb leave stos pusha arpl arpl push mov scas xchg stos xor cli xchg xchg push (bad) mov out xchg cld stos call cwtl cmp xlat cld add push fstps jl stos incl enter std mov (bad) ds cld adc push clc out xlat cmc ds sbb in pop sbb mov popf cld push incl nop in mov in (bad) mov jnp (bad) sub aas push outsl loope cld sbbl jecxz sar sbb aas aas int3 in sub sub ret pop fwait jg dec xor mov pop dec xchg iret lcall jb mov mov or aas (bad) test cltd shl mov push in lret repnz inc and rolb inc add lods add push mov leave and xchg loopne inc ret push push pmaxsw fisub mov xlat fidiv (bad) adc push jg push (bad) incl or scas cld (bad) out pop (bad) call push push and cmc sbb pop dec (bad) jbe loope pop jp shrb pop or stos cmp mov clc sar add popf aas (bad) mov into lds pop xchg (bad) hlt std dec arpl mov aad out nop loopne lea ret inc fnstcw repz shlb xor push ret xchg xor mov mov or or sub jmp arpl (bad) js aad pop push mov mov cmp mov cmp pop xor ss cltd jecxz mov imul imul xor in adc cmp incl mov cmpsl hlt pop lods popa push mov call sahf adc ja add jae mov mov mov mov in call inc bswap out dec arpl shlb cmp inc les jno mov mov add divb mov mov incl scas imul fcomps repz mov (bad) aaa add push jnp xchg inc push lahf pop mov loopne pop (bad) out or (bad) pop cmp push jbe mov test jmp movsl mov mov mov xchg pop or pop sbb jns mov lret cld into stos cmp xchg out fcmovbe lret sbb shrb cs xchg mov cli and lahf xor (bad) add (bad) add mov rcrl icebp jne mov jg call mov add addr16 cld push incl nop in mov in (bad) mov jnp (bad) sub aas push outsl loope cld sbbl jecxz sar sbb aas aas int3 in sub sub iret xor jns inc test nop clc (bad) loope stc sbb into mov test jns movsl punpckhwd outsl pop enter js dec bound sbb push sbb sub xor call pop adc dec movsb or insb cltd xor pop cld cmp xchg fabs mov les pop aas push mov add (bad) cli and jbe inc mov rol lds mov jle lds mov out adc out push mov jb lock les dec jecxz jns cmpsl cltd bound incb xor xor mov inc mov bound cli pop insl lret (bad) lret aad mov xchg jae jle fadds gs and addr16 fild lret shl dec push lret jg jg adc incl rorb cmp incl sbb test inc jp std jno std or js mov ljmp pushf xchg push shrb (bad) mov repnz jl pop fiaddl movsb sbb adc and fldenv (bad) pop fwait dec pop or sub cld jmp test jge adc movsl pop jb fimull jle inc loope add push dec jne jle dec daa or add jle mov inc xchg ficomp in shll incl add mov movlps push jmp sub adc add lds mov cmpsl (bad) iret (bad) lock cmpsl call es pop sahf cwtl lea jp fs push jecxz stos cld int3 jge push imul shr (bad) out sahf popa push pop pop fsts outsl fs mov and iret jb lahf cmpsb ljmp adc mov adc sub ret sbb inc jb xchg mov loop mov jae fldcw lcall xor sbb dec adc imul les dec cmpsl movsl or call std cli ds repnz mov jo sub push ret ds in mov incl ror jge aas (bad) mov jg cli (bad) cmpsl sarl das cld andl jbe cmp push incl and jg idiv add lea jle jl insl cld pop cli jle ffreep incl stc push aas sti (bad) mov cld xor pop ja mov jg ficoml js add xor sbb inc sbb inc fildl loopne cmp mov sbb imul sub jl (bad) dec hlt xor scas mov lret arpl lock mov outsb in pop cmp mov jg mov and das clc arpl jl sti (bad) jb scas mov xor inc xchg push loop bound dec dec std rsm ret loop loop loopne in outsl xlat xor adc push xchg add cs add fwait out cli clc xchg incl inc xor pop inc jl jg lret aad mov pop incb incl pop sbb js mov insb mov fnstcw jle incl enter add lcall and xor aas push psraw mov bound sub (bad) or jne mov cmp sbb jp jne cmc adc xchg popf push cmp test adc mov popf pusha ficomp dec (bad) mov xor push icebp sbb push (bad) (bad) aaa xor cmp (bad) es push lret fnstcw mov jae lock scas xchg xor push lods (bad) jo in jle cmp pushf fsubrl xor ret bound cli lahf inc push cmp fimull inc (bad) push jns insl fcmovnu mov xchg pop sarl insl stos cmp xchg lods xchg orl aas test into out lea xor inc cs sahf mov dec push fs jg les cmc rclb lock sti cld jge in arpl into jmp call stos incl enter add incl mov add aam cmp std dec mov ret (bad) in jl rcrl inc mov add out incl mov loope cld dec stc in fnop mov std dec mov or (bad) lea clc push push mov into lock flds outsb rcr (bad) scas mov inc sbb lods iret xor das ret dec mov cmpsb in cmovp test xchg xchg enter jp jbe add shll and js and mov mov or jns lret icebp xor sar lea rcll mov jae jg scas jmp dec xchg jp das inc outsl or ljmp and inc ret in fisub mov loopne incl das aas and add (bad) mov in push jl test or dec sub js jge std jl imul dec and jl sti das xchg mov or xchg push mov pop aam sbb cmc daa jg sar sbb aad in xchg rorl lcall lret jae mov or sub movsl mov (bad) sbb mov mov imul pop int inc xchg lock scas js loop push test or pop push mov xchg lds daa mov incl fdivrl hlt mov imul sti (bad) incl jle mov std cwtl jg jmp add jg hlt mov popa int in ret sti addr16 (bad) jecxz add movsl mov xor fsubrp pop aaa aas sbb xchg mov fldt cmp push popf cmp iret inc mov ret xchg out insl mov sub inc loope jmp jl fucom fidivl jne sub imul das push pop xor pop xorl fldl cmp cld stos sbb and enter cmpsl loopne cmp pop stos cld mov mov in inc sbb bnd scas jae nop push ret fidiv xor add mov sbb arpl insl in pop sbb gs lea pop pop imul xor mov in push mov sarb aad pop lods sbb fs jbe adc mov sbb xchg cmpsb mov xchg pop pop aad dec pop idivl mov sbb or les or push aam mov insb and and xor push push cmp push adc ds jmp leave jb pop mov lods imul mov ljmp add mov and mov leave popf stos jp cmp andb gs jmp jle add push jp test pop outsb daa jg sbb sbbb push lcall pop dec and sbb mov mov cs xchg push loopne popa dec cmpsb push leave mov repnz xor movsb xchg leave pop loop pop lock add push add sahf cmp (bad) jno xor xchg jge and je jnp rcr fdivr sahf pusha push push push rcrl xor ret inc push (bad) aaa or xor cwtl lret pop imul std sar push add add sub lds xor (bad) cmp mov add push add or movsl ds outsl add jbe add pop sub jb xor add shlb jno popa jb mov mov push pop push mov cmp mov push leave add popf mov xor pop imul test (bad) push adc xor sbbb fiadd insb mov xchg arpl push test mov add add jp add inc pop std xchg xor jo (bad) xor dec jne lret pop gs mov imull or sarl add fimul cmp pop leave mov cmpl xlat ss xchg adc xor test (bad) ret repnz mov push jb out stc mov add push aad xchg mov (bad) ds adc (bad) and jae test lret jnp (bad) add xlat cmp add mov cmc inc xlat lods int3 mov inc es fsts pusha incl or ds jae or imul xor jnp fsubrs add pop mov (bad) xor adc pusha sbb repz insl nop dec push dec xor iret sbb out xorb inc or add push add add iret dec out arpl imul lret xlat lcall popa nop pop lea pop std scas mov fmull mov into mov mov js into ficomp gs sbb mov lcall outsb in scas and cmp rcrl call pop into xorb add sub xchg ret adc mov rolb popa xchg sbb scas jno sbb pop xor or or sarb xchg mov scas test and mov mov or inc ret fistpll push mov mov outsl adc or add pop mov pushf nop mov adc jge adc fisubrl fcomps stos push push hlt mov clc outsb and adc sub xchg jae pop cld movsl ss cmp cs mov mov test mov sbb aaa sbb xor insl hlt lret pop mov incl sahf test dec add add mov sub sbb xchg int3 xchg ficom jg xor jg add dec mov hlt push mov mov or xchg sbb pop stos stos orb sbb in mov push add pusha sbb add add (bad) add add add mov add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add movb into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc and add add add ds add imul popa add outsl add je push add outsb add insb add add popa add imul add outsl add outsb add add popa add add add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov (bad) fdivr loopne adc dec inc add add add pusha add (bad) fildl inc add add add or pop pop pop ud2 or or movlps adc adc adc sbb adc adc sbb sbb adc and push and push pop push (bad) fildl inc add pop push or push push adc adc push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push inc add or lcall add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add mov mov add mov push xchg ficomp and mov sbb mov push neg pop cmp push and bswap mov gs jecxz mov (bad) mov cld inc jecxz pop inc es (bad) testl mov adc outsl fs sub and repz int3 jg inc aas xor adc push scas scas in mov mov sti stos lock dec sbb lcall rcl dec push dec jno in jno insb cli mov lock fiadd mov call cmp fstpl out jmp adc in sbb rorl xor pop add scas shl mov arpl sbb leave incl (bad) jae lret stc inc adc scas fdivs daa scas and orb jg lret push js xor in daa incl pop mov hlt js loop imul test mov push xchg lock andl fldt lds pop pop lock sbb jno loope add push jae xlat inc movsb ljmp jb in cmp or rcll hlt stos ja jge (bad) leave cmp add lock scas lret xor push movl gs fidivr je lret mov push outsl push or mov incl dec shlb movsb bound daa cmpsl jp loopne aas ljmp imul lcall in add mov fwait stos xor adc movsl sub jle sbb fstpt lea bound mov orl clc (bad) hlt imul inc cwtl in popa shll addl sti cmp ret jle shr xor or fcmovnb add mov stos sbb (bad) mov pop sarl test aas shrb pop out idivb mov xchg pusha jo or sbbl add cs imul inc adc mov hlt xchg jae xor pop xor pop fdivrs test out pop cmpl lock xor mov sub mov mov sub sbb cmc scas sbb cmp pop lahf dec cmp jmp repz hlt or xchg frndint jg inc testl push daa push insb mov push jge cmp movsl insl imul sbb movsb inc sub jns in jecxz aad addb inc in jge int lock test jo xor cmp xchg aad negl lods test aaa lcall and movsb add cmc shrl or in mov xor adc mov add push movsl stc and mov stos mov sti pop hlt lret daa sarb mov out dec shll xchg movsb lcall adc fstp pop fimull ja push div sub xchg (bad) stos adc jmp mov xchg jp popa iret or sub inc scas sub (bad) cmp sbb in sub mov andl sub push xor sbb mov add test add (bad) arpl xchg adc mov jo hlt cmp cltd popa and aam push mov push sbb das mov sbb cmpsb mov scas int das xor mov and pop rorl fnstcw insl into jns out or ljmp fcom (bad) call mov jns scas icebp ret (bad) mov rorb aaa ja dec sbb popa mov xor add and add nop or mov or lock mov jecxz mov arpl sbb roll shll pushf sbb test push adc jp mull dec scas imul (bad) outsl arpl daa mov fs xlat orb je lcall jns in xchg stos inc dec repnz pop xchg clc pop mov lods xor (bad) ficompl fnstsw loopne insb jle imulb xor and sub xchg pusha jnp sub jp insl iret push scas popa inc sbb fisubl test (bad) cmp ss jnp sarl mov daa cmp (bad) js imul and fbstp inc push movsl (bad) out out inc push push nop xchg dec cmp add cmc insl push jecxz sub add add insl lods (bad) iret int dec cld add xchg fwait mov sub fwait inc sahf stos les sbb cmc jle jge nop lock les js cld lea incl pop pusha push ss xchg cs push add mov daa sbb repz dec push fildll or out rcrl roll mov inc adc add push add mov cmp cli jnp push test mov pop pop inc (bad) ljmp xchg icebp daa (bad) sbb mov mov leave repnz lods mov push mov xchg movl pop mov fstpl jle add mov in xchg pop push jge inc sub lret cmc xor push cli mov push pop mov mov xor mov fldt push dec pop pushf add jb leave (bad) dec mov push xchg lock loope sbb test dec mov loopne inc jo adc mov pop xorl dec mov inc sbb jl inc inc or (bad) mov jg fistpll push dec nop lret out cmp fwait aad sar cld push sbb or daa clc push add lds pop data16 jle jae scas jle insl gs leave adc inc setb and mov adc fcoms pop xor lds clc mov insb pop nop or cmp mov add jo mov pop jmp pop pop and xor push cmp jle or push test lahf push jge lcall cltd insl (bad) ljmp in scas dec sub negl pop cltd lods in outsl testb inc mov sbb fist mov xchg bound xchg mov lahf dec mov pop and cmpsl loop dec mov fcoml jo jle dec jmp lcall std lods xor hlt (bad) das xor mov push add cmp sub repz out mov mov cwtl jl clc (bad) mov xor pop (bad) mov cmp jge lret lock and xlat cmpsl jle out mov mov mov sbb movsl je out cld arpl push mov test out pop test in jnp add sub imul (bad) sub cld daa popa adc sub and in push adc cmp icebp lds outsb jne mov jle sti mov ffreep (bad) adc rorl imul out xor jecxz xchg iret mov loope add add push outsb dec pushf int3 push cld or sbb jle add imul pop or aad mov outsl add and push (bad) scas add sqrtps and mov pop jg jmp jle loope cltd sub xchg out mov test adc adc repnz lret push mov loope sub cmp mov adc add push add push mov rcrb cmp loope ret stos out mov idivl mov cwtl mov xor enter (bad) add mov jle ljmp popf jb cmp mov add aam mov shr sub cs data16 push lret mov add pop push repz xor ds fildll push xchg xor and shlb lock (bad) divl or fsubl popf addr16 push enter jle xrelease inc les dec push sbb adc mov sti lods cmp in pop jae lret mov (bad) cmp dec insl bound int3 rorl aas inc adc push mov fldt gs in push adc mov jge loope stc adc pop ret incl mov (bad) pop js lds mov movsb mov xchg enter and add cmp add dec xchg incl pusha clc jg pop scas pushf mov lret (bad) popa xchg incl call scas xchg cmp mov outsl les rcll dec xchg jl loopne and push mov jb cmp cs inc cmpb adc push stos js (bad) mov lods sbb fcmovu pop sub loopne,pt or daa sbb xor ds cmp jl xor inc in sub push inc (bad) fnstcw xchg sahf les insb popf dec xchg lods aas jp push push aaa into popa sbb popa jmp jbe jp test add (bad) iret dec (bad) (bad) adc cs sub mov mov or aam jp je xor pop rcrl add iret and imul shll fcompl fs cli push jecxz scas jnp dec in popl mov movl arpl (bad) sti fs fwait xlat arpl scas and xchg xchg std dec or xchg aas in aad jmp jg lds jg jg mov in xchg incl and and add push fcomps cld xor in xlat (bad) shrb pop xlat inc les mov rorl clc cmp loop popf mov inc fildl inc dec push les push add xchg jae aaa (bad) pop (bad) cli pop xchg loope popf jg int pop arpl int mov push push jns or or mov push (bad) clc push mov fs cli sub incl adc add adc pop jg cmpsb scas or (bad) mov insl das mov aad push test xchg pop mov arpl incl data16 push pop jmp pop mov imul dec inc shr mull imul pop in arpl daa lea or mov or mov jl cmp pop std or dec ret mov rcll sub push mov xor inc in je cmpsl add pop lret mov je cmp xor fsub cmc jg mov mov push adc outsb mov movsb adc cmp sarb loope xor jl pusha notb sbb ret sbb add movl lahf push pop push stos js loop ret aad mov pop sahf ror les mov (bad) mov adc mov nop push dec stos jb in xchg xlat pop out roll mov insl dec dec or pop jg lds popf inc mov iret add (bad) or pop sbb xchg pop sub mov addb xchg pop mov sbb test push sub inc sbb mov (bad) inc jmp push xchg out adc incl inc pop paddw sbb mov sahf cmp cmpsb in mov mov xlat popf pop (bad) mov hlt incl push xor mov mov insl mov xor add mov inc cmc aas inc cld xor or dec xorl add xchg lods sbb push or push loopne cmp (bad) jb xchg in int3 jae sahf lret (bad) mov int mov jp cmp call into je jmp cmp sbb inc mov mov add incl lds cmpl ljmp pop sahf addr16 jne ja incl push js mov dec clc fninit iret lea clc test adc and arpl xor stc les cli or rcrl jae push mov pop ljmp lahf xchg incl xor push aad arpl jge into dec jbe in (bad) and cmovno addr16 incl push cld sub jg dec scas jecxz and push cmp das stc lock jl mov shrl bound adc addb hlt mov lods ss push ficompl dec mov add mov pushf (bad) js lret fisttpll jle int scas std cmpsl lea inc je mov or (bad) mov insl bound cltd lods pop pop cmp mov cmp mov inc cld xor xchg jb sarb out jle jl icebp push mov xor pop inc sub lret dec call xor push pop xor frstor cmp cmp dec ret lahf loope xlat repz insl out in jecxz arpl out insl scas xor xchg pushf adc cli mov icebp out xor or jecxz aam sub dec and sbb adcb mov movsl stos cmp push xor out fs cld dec icebp into xchg loopne or fidiv fwait ja push rcl pop out mov fsubp cmpb pop mov mov (bad) ss push test add xlat and push clc iret les cmc lea repz jo or adc ret push jg xchg jb xor xor jo mov cli add es or imul int (bad) test rcrl loope sbbl (bad) jmp mov add mov sub add adc or pusha xchg int mov data16 push xor xchg popa inc es push dec dec or out sub mov push insb popa mov (bad) jo or imul adc push xchg fs notl rol in loope and sbb add cmp push xor sahf xchg out andb jns int3 jmp pop mov out iret imul cmpsl push push pop xchg xlat fs xchg hlt outsl cmpl shll (bad) dec xchg sub in outsl xchg ja daa repz cmpsb cmp push mov xchg mov xchg push push (bad) iret push xchg (bad) mov add sbb jmp cltd iret mov dec push pushf rcl cli dec push push dec add fidivr pop lock icebp lahf (bad) outsb mov dec lods fidivl sahf aad lock loopne (bad) xchg sahf fxch push imul mov cmpsl cmp (bad) and loope fnstsw out dec pop and xor pushf lock xchg fsub push test mov sahf xor shl jmp push fsts jle and mov inc out dec leave cmp pushf pushf add inc pop push push ds stos add js out mov sub sub sbb xchg lods rorl mov rorb sub jns cmp push rcrb xchg sub outsb lcall hlt stos mov lods notb push mov addl and ffreep (bad) adc xor dec fbstp (bad) pop (bad) in inc and xchg xchg nop inc dec cmp mov mov sahf adc sbb adc inc scas dec cmp cs lret in cmp cmp iret stos jle sahf es pop jge in xor dec inc incl gs cmp in sbb movlps rorl cmpsl scas inc je ljmp sub or sbb xor mov pop iret ret jle mov pop ss inc push sar stos xchg ss aaa and int mov xchg (bad) xor inc (bad) ljmp sub and mov ja aas in sarb pop pop decb test jecxz rcll push push inc or pusha add je sbb xchg (bad) push sarb pushf jp push xchg ret inc push test push movsl jl fcmovbe mov sub mov aaa inc lds inc add and add adc xorb pop fdivr push in pop loope adc aam adc (bad) je jge (bad) xchg jl icebp iret (bad) mov xor jo cmp mov cmc es pop jecxz sbb push xchg in push fidivl mov push xor and test popf repnz cmp shll xchg pop push push push mov mov (bad) sbb aas xor lods lea insb in loopne pop ljmp sub mov adc test leave mov and cmpsl pop mov sti and add loope jg cmp rcl mov insb pop cmc ficomp incl jbe stc lds imul in lods loopne cwtl pusha cwtl loop dec hlt loopne scas in lods cs (bad) or outsl cltd sbb xor movsl (bad) sbb (bad) mov repnz sbb daa imul pushf fnsave fadd clc push incl and ret lahf (bad) or incl inc lods pop clc mov add pop mov in sbb add and inc adc add jb mov and sub (bad) out sbb mov popf aas fs stc or incl cmc out paddd aaa push mov lahf add inc or addr16 or clc sbb mov addr16 jmp arpl pop fcmovu pop rcrb xor scas fldenv jmp fisubr in nop lret mov xchg jne lea das xchg mov iret add mov push and jp dec add std dec inc shrl mov push pop mov push xor imul jp ds shlb es sbb mov xor mov cmp xor popf aaa dec xchg cmp xchg test stos inc mov pop cmpsl xor clc mov add ss notb popa scas stos add push and in and sti dec fstps stc pop int test iret popa stc push mov jnp ret sub pop jne int addr16 jg incl stc daa push lahf notb (bad) incl inc leave pop pop mov cld xchg mov cli clc fwait incl inc xor notl out pusha mov enter iret scas or icebp or in inc or hlt adc imul fcomps out or (bad) aaa jmp (bad) mov mov sub fisubrl lds outsl insl sub jle leave push loopne pusha ja hlt ret cli loop push clc push fs mov push fstps jne jle push and (bad) xchg lcall out jp es incb adc push pop incl ret aas cmovns imul stc (bad) jne icebp dec and jb fstpt idiv add ds sbb ljmp jge cltd out lahf add das ffree adc loopne dec cli xlat lods arpl lea sarl xchg pop in lock rorl mov pop cld iret add divb jmp ret mov rcll lock test or cld sub and pushf stos jecxz xor cmp mov push xor xchg cmp out clc cmp jo loop cs insl cmp aam and insl cmp sahf ja push pop aas push pop imul inc mov (bad) addr16 out dec add sub pop mov aaa jg clc mov movsb jmp stc fs dec out xchg cmp add xlat mov pop imul clc ja push sbb dec sub xchg add rorb clc daa mov ja push aam out mov inc pusha test daa and outsl scas add pushf sbb add pop push jmp clc mov cmc aaa int pop push jecxz mov sbb ret idiv and insl cmp xor add in ljmp mov push clc data16 imul push int3 (bad) (bad) repz mov and loopne lds jecxz cwtl lods jge dec lahf xor sbb pop adc scas jecxz,pn adc pop cmpsb adc inc add adc call idiv push cmpl adc pop inc pop mov jnp mull add das insl enter mov vcvtsi2ss cmp arpl mov lahf xor cmp jbe sbb fdiv sbb adc fadd int3 xor add repz bound lods das add push clc test clc xchg popf adc sub mov add mov push pop sub fisubl daa fcompl repnz stos inc jl sub xchg xchg and mov jmp lahf mov jmp cltd mov arpl adc sub movl jge sub push xchg scas xlat pop loopne xor xor jg call push mov outsl adc out dec adc insl pop stos push cmpsl inc push jne xchg cltd (bad) icebp (bad) (bad) sbb lcall mov fcompl xor add sub push js inc lock lds jae inc gs leave in in xor sub jnp sbb sbb fmul xchg mov mov icebp jmp adc mov push cs int3 mov cmc (bad) jg ja or out xchg xor xchg dec movsl sbb cmp add mov es repz and es stos cmp mov jecxz psubb insl push call mov sbb fisubr push cmpsl inc sbb and repz cmp xchg xor es lret cmp imul and in pextrw jbe jecxz mov test aas int3 jo sbb in mov stc sub fsubr xor sub fisttp add push lahf pushf in pop (bad) mov xor mov jge fldt pop push notl lds adc pop xchg push ds fidivr cmpsl frndint pop fwait (bad) das imul scas and pusha faddl fisub cmp jecxz mov lods sub lahf xor hlt ds aad inc movsl fstpl (bad) inc shrb insl add cmp mov add pop dec xor arpl inc inc (bad) popf out fmull iret fstpl (bad) cmp sub fwait pop sti xor fisub and sbb or (bad) aas xchg jae add stos pop or xchg or fcompl fadd int3 fadd ds push lahf xor mov aaa outsb scas (bad) hlt mov mov inc mov aam mov and add xor div push idivl pop cmp rcrb xchg xchg cmc (bad) cmp mov adc aam push adc cltd js jecxz test dec movsl mov dec lea add test cmc jmp pop xor and xchg hlt movsb mov push xchg rclb clc stos jecxz test imul mov cmc dec arpl inc sbbl cld add hlt fcoml xor rol dec sub jl icebp mov pop pop (bad) jno enter lock sbb cmc jmp in xchg inc movsl stos push pop sbb push push push sbb push xor jl cmpsl lods into lods xor xchg or (bad) rorb pop or adcl scas mov mov sti fldt pop loopne inc jo in pop and push xchg pushf push mov push repz and movsl and xor imul icebp fcompl xchg lds xchg or adcl mov inc adc cld (bad) clc movsl test icebp add repnz in add mov pop (bad) subb clc jb js fmuls in (bad) stos dec shr mov mov and (bad) ljmp sbb lock loopne jae jmp nop incl addr16 cld dec bnd pop sbb mov sbb push (bad) pop xchg movsl pop lds sub inc data16 les pop shlb xchg cmpsl pop inc jle sbb fwait incl loope jmp (bad) popa cld mov sbb sub push clc jae fldenv xchg jge inc pusha aas adc nop mov leave jns or or jnp gs inc xchg test insl mov mov stos fiaddl out mov rorb xchg jb adcb add sbb fistpll (bad) pop ds insl pop ret notl mov test jo in pop or sub (bad) repnz out pop cwtl into push pop pushf stos sub roll mov adc pop shll sahf cmp pop (bad) les or dec movb sub cltd push adc pop lret dec aaa outsl xor aas addr16 (bad) sti xlat dec incb mov cmp xor push inc adc push inc adc xchg pop xchg and xlat jno cwtl hlt sbb mov pop push mov jl loopne inc ret fsubrl mov pop cmpsb imul nop xchg gs xorl loop mov cs mov pop aaa sti cmp mov je loope leave add push into iret insb lods jno or sahf loopne (bad) mov xor mov lods gs push cmpsl pop add stc xor push popf jl icebp insl incl test xor ja and xor mov rorl add bound aaa les mov xchg and repnz fmuls test in dec enter pop cmp addr16 mov jbe lcall aam lock xchg icebp iret sub stc popa mov xlat xchg pop scas sbb (bad) mov dec and jo (bad) in inc jp add jmp fcmovnb imul adc mov std sub mov xlat jg movsb aas leave test push ds mov loope cmc jne fwait imul cmp cmpsl dec mov jbe push enter (bad) adc xchg add sbb sub cmpl gs xchg pop add cmpsl mov and call pop adc testb not inc cmpsl cmp ffreep fistp imul aam nop fstl xchg jno leave daa mov dec add mov popf sub sub movsl sub mov fistp lock rcr fbstp in xor fldcw insl shll add cmpb aaa cli fs cmp sbb jae sbb stc loop (bad) dec fistpl ljmp jl icebp sbb lahf (bad) out and push add sbbb mov fdivr jns xchg cmp fiaddl (bad) dec sarb sbb test inc adc jo addb test and andb push aas jns pop inc mov (bad) xchg mov cmp fisttp (bad) pop clc (bad) into jecxz lret js cmp xchg pop popf lret nop push ds adc jp incl mov xchg ss rolb cmp and subb mov mov fwait push iret arpl (bad) dec xchg pop in ret and aad stc aam mov test hlt mov sub loopne mov fisubrl imul leave mov lds mov pop cmp sarl jnp push sbb cld lods arpl flds cli orl fiaddl jmp in arpl popf xchg mov mov sub inc jns inc dec sarl or dec rcll in cmp test hlt leave daa pop out lcall out push lock mov jp fldt sub lods daa mov je cwtl xchg js adcl popf add cmpsb std mov sti push rol roll insb shrl mov sbb add in pop or aas sysenter adc add add in outsb jg loop std adc push mov outsl stos inc sbb sub xchg outsb jnp mov fldcw or lods mov dec insl insl ror jb inc adcl xlat cltd jle incl icebp in incl xlat dec jg push lods js incb push (bad) mov or incl push pop out std je stc xor popf cmp xchg mov and mov add shld aam cmp jbe push mov jg jl mov popf outsl test mov push ret jae movsb xlat pushf cld push jno jl (bad) mov rorl rclb cli mov dec pop imul and popa pop and rclb int mov (bad) stos aam lods mov movsl out (bad) (bad) (bad) push js pop shlb dec aam dec inc and mov xor cmpsb jno cli push jg jb sub cmp mov inc or xor pushf je mov into lret cltd push sub inc repnz sub jle pop aad daa jmp in xor dec xchg push lret outsl lret cmpsb lcall lea push push xchg scas lcall imul call cmp push stc sub jo pusha adc idivl mov ret jge fcmovnb push lcall in dec aaa out sarl mov stos adc pushf push dec pop xchg fidivl push call std add test sub add and incl inc adc push test mov cmpsl mov push mov adc popl or sbb mov add sbb (bad) test out adc or xchg jb scas cmpsb enter jb mov push jle xor fcoms cld sub jmp incl hlt adc sti sub adc mov aam movsb stos das cmp aam and fadd clc leave idivb pop push jg xchg outsl dec or dec jecxz leave fst pushf outsb fstpl mov add push pop mov in retw fnsave and sbb (bad) lahf mov add or sub or lock xchg addl lret mov cld xor sbb mov icebp mov xchg mov sbb adc cmp xlat sub cmpsb jno sub push cmpsl aaa jbe lds clc arpl (bad) sbb sbb (bad) jbe enter cmp dec inc out or xchg test icebp inc cld and xchg adc je in push mov movzbl pop ljmp (bad) negb xchg add addr16 mov inc jecxz sbb or (bad) push fnstsw or int3 jae pop roll mov xor imul sub and dec xchg jg and pop hlt popa push jl aam vmovaps jae out xchg les cmc push stc mov lret lds push mov ljmp cli incl adc repz push mov in fndisi(8087 imul daa es pop fcomps mov cmp jl adc mov movsb lea fs out pop xchg pop test sahf pop pop push ret mov jl jecxz and adc (bad) or jle or rcll pop or and sbb stc dec iret mov mov sbb (bad) xchg pop mov stos jae movsl pusha test push pop push push dec add mov outsb pop cmp push daa adc push daa bswap add repz jecxz psubb lcall shl lds pop mov pop cmp in push aad push jge pop pop test lret or bound lods mov mov stc push loopne (bad) or ss or fldz push jg test call in cmc cmp outsl in and sub sub testl test inc jle xchg data16 shl xorl jb nop push inc adc push jns push inc push aas icebp inc loope fiaddl pushf mov leave or cmp stc out sahf jb jae fdivr mul mov push fs cmp jbe mov (bad) mov (bad) xor lea cs mov sahf inc aas js add and xchg inc inc push add sahf mov int3 mov adc jmp ja idivb stc adc popf jl inc dec mov or icebp ficompl sub or xchg jae mov pushf cli sbb iret test insb xlat adc mov lods lret mov div mov jmp pop jbe sbb pop icebp cmpsb xchg mov test xchg pushf xlat push rcl sbb aaa test cmp and ljmp push shr xor lret adc insb pop adc push jno aad sbb aad (bad) push pop adc bound rcl pop aad aas pop (bad) adc pop push jmp sbb jae mov or daa test pushf push mov push inc adc das mov scas inc aad cmp js loop xchg arpl xchg pop test sbb lahf icebp sub or or scas or push mov inc lcall pop leave xchg mov lock scas push dec loope jnp in ds mov sbb xchg mov pop jge,pt shrb rclb ficoml add sbb lahf adc arpl dec loop add pop loop fisub aaa ret sahf stos adc call cmp jnp adc cmp sbb outsb mov inc lds ss out sbb test mov jle lock mov (bad) pop lret lret sti mov imul add sbb add dec mov cmp cld jmp inc sti mov sub les lods mov iret jl (bad) jnp add divl leave add flds mov test add inc push xchg out push (bad) mov mov pop es sub imul les jo scas jo dec sbbl mov arpl incl or clc mov movsl adc mov divb and jns in fldenv mov sahf fwait jns fs sub mov sbb fidivrl add mov shr imul xchg (bad) incl adc dec sbb mov subl gs out cmpsl add inc jnp xchg jmp add mov pop adc cmpsl lea test cmp scas mov in dec push out out mov ss sub fsubl mov pop pop out mov jl clc mov mov mov sub bound jo into push sub jle js lret rcr imul sti mov ret dec std xor pop inc cmp push xchg jp push cmp push mov or mov xchg mov enter sub xor sbb stc mov pop nop scas inc movb sti xlat movsb js sub mov push and add in (bad) scas add (bad) lods xor mov rol dec adc sub repnz cltd lcall lock jae dec sti xor xor test repnz mov shr (bad) cld jecxz sbb inc jno and pop addl sbb loope (bad) icebp iret (bad) fimul (bad) outsb mov outsl sbb push dec enter inc (bad) mov jb sub inc inc cmp xor xor clc mov adc and fs mov (bad) mov dec xor in pop inc push pusha add inc test out mov iret aas adc push xchg push (bad) and addr16 lock ret add jle mov popf les shrb jno push pop mov aad xchg xchg in push mov sbb or dec push dec gs movlps aam repnz cltd ds xor dec and jge icebp mov add imul jge lahf loope inc fcmovne pusha inc sub sbb push out lods scas and mov sub cmp and (bad) or shlb negb push int3 popa mov jge jp sbb cmpsb jg pop sbb in int scas fistl sub add ja inc xchg (bad) mov lret ret into subl add jb cmp xor sbb js ret jno (bad) cmp orb mov mov (bad) dec cld ficomp or mov mov mov clc andl push mov push ja in std fcomip repnz mov outsb and sahf movsb hlt add cli or (bad) and rol mov call (bad) daa push dec insb mov iret jl sbb jle mov (bad) xchg (bad) shr mov mov in cmp and daa sbb inc das loope or das hlt xlat mov test xchg and mov stc push pop mov dec imul test call xchg out loopne jle lret jle aad xlat jl jno pop call or inc pop scas repz arpl pop mov daa or fucomp push xlat push pop sarb leave jae mov insb mov cmp jne pushf push jae sub (bad) sbb sub mov sub or dec loopne inc sbb faddp and push inc add sbb loop stos jle lret fnsave inc mov je xor out (bad) inc lcall jno std outsb cmp or ret in movl scas out loop sarl mov negl call out pusha push xchg ftst xchg orl push lods imul mov add jb and xchg push stos loope hlt pushf jg mov mov jmp out addb mov sbb cmc xlat mulb outsl in pop bound ret jo jecxz xchg mov out adc (bad) fimul dec aam addl jo or pushf outsb pusha movsl dec jp mov clc cmp (bad) into xchg mov cli and cs mov add ds jne cli xchg mov cmp push and cmp sub and or pop pop test xchg std sahf sbb loope jecxz insb rolb and dec adc xor les jno movsb or mul lock xor lea dec jb jnp incw pop aad sub jns out fs sbb jae dec into add icebp jbe gs insl mov das les leave imulb and mov (bad) add arpl cmpsb jmp shr (bad) sbb ficomp and insb pushf push test mov dec inc shrl jmp jp scas (bad) xchg jo adc xchg nop xor sub into mov ds dec sahf stos aad mov mov adc pusha jns lea inc and dec pop add xchg jo mov pop xchg and and imul mov push pushf xor enter mov imul test xchg in in stos adc cld inc (bad) cmp gs add imul fwait push push in les adc sbb loope enter xor cmc scas pop subl sbb mov pop aas push pop inc dec test xchg mov hlt or (bad) in dec insb mov cwtl sub pop mov les pop shll movsl and sbb xor (bad) or and or xor sbb pop inc xchg mov push scas rol mov pushf addl mov into xchg loope push iret dec nop (bad) dec cmp pop cmp mov inc cmp sub jmp mov pop cmp sbb adc jno adc mov mov in (bad) repz inc in add into cmp dec icebp imul push inc repnz cli in insl insl rolb lds add dec call loop dec pop aad hlt int dec js sbb inc insl jno adc rcrb cmpsb xlat hlt dec das pop mov sbb push stos pop test adc adc cmp loope aas inc imul fldcw (bad) jno xor jecxz add (bad) mov dec sahf sbb sub (bad) mov xor flds jbe dec loopne ficom cmp mov push fxch add dec pop popa inc nop dec out jle xor cmp imul outsb bound bound data16 dec fmuls push inc add cmp ret ds negb sbb xor sbb and cmpb push ret aas test mov mov adc jb mov out test push adc sbb leave loopne popf pop test push outsb mov mov mov aaa ss jl leave or out xchg dec and call shlb fwait dec mov pop (bad) in scas dec cwtl int push add in je or push cmp mov cmp aam jnp jmp adc sub xchg mov mov daa inc shll pusha pushf pop pop mov iret in jnp or iret add insl jecxz mov cmp fmull fidivr cwtl xchg lret cmp inc add ljmp jne dec insl inc out dec or adc and xor in push jnp mov std cmovl je mov push shll cwtl sub mov adc and add sbb ds mov je or dec (bad) roll adc or sub add pop push cmc fcmovbe outsl divb lcall clc cltd mov stc fcmovnu std dec std sti jbe pop jnp jecxz mov shlb mov jp (bad) mov mov pop inc repz pop mov icebp mov in scas xor (bad) adc cmp mov inc mov imul and inc pusha inc push cmpsl add iret jg or ss faddl and roll and mov je add push inc aam aam je mov lahf mov cs pusha iret pop sub add aas sbb sub sub dec cmp push mov imul or mov add lds pop movsb adc dec xchg ret pop jl and pop jae outsb cmp jnp push arpl jne fs outsl cmp frstor jbe cltd fcmovu adc adc xchg mov hlt insl es sbb pop jo cs pop dec arpl testb dec sbb leave imul mov fstpl sub je out and arpl sub sahf mov aad out jle fsubrp rorb xchg jae xchg pop pop sub mov inc and jp cmp std ljmp (bad) hlt push adc jg sbb cmp lcall cmp aas and test mov cmp sarl mov and mov xor popa sti lods mov cmp jae inc adc imul sub leave xor dec imul pop shll lea adc mov xor add push add (bad) mov inc ficompl mov in hlt sub mov mov mov adc pop loopne outsb imul mov cmp jns jo jno mov lds cmp pop (bad) xchg pop lock xchg sbb and cmp and sarb push inc jecxz pushf push scas xchg jge inc shr hlt popf es notb mov dec in daa xchg dec daa mov icebp and xchg push adc xor das movsl inc mov jbe loope popl push add and cmp and adc lods (bad) mov adc jbe mov and lock push add mov (bad) iret in or add aaa fsubs mov or or xchg fildl arpl xchg mov push xchg scas fldenv xchg jb xor nop inc inc add or mov or mov es mov mov in jg xor add pop test add stos clc jg notb dec mov dec xchg push movsb aam pop push test inc or das xorb clc jg jp xchg je aam cwtl int3 popa es lcall lsl pop cmpl push jg fdivrs dec les xor or adc xor shl (bad) mov adc js js ret jbe out into movsl push cltd add add ret mov pop clc rclb or repz outsb and cmc pop scas jmp stc mov pop pop cmpb push shlb imul ja jnp sub mov push mov mov test adc xor cld fstpt add into ficomp sbb mov dec fidiv push and adc stos cmp sbb add mov out adc int lods jp std jne out outsl jecxz (bad) inc roll stc aaa roll rcr xchg add cmpsb loope cmp and fwait int ja call xchg mov push (bad) mov xor cmp sbb fsubs std inc sbb js and push rcrb or add sub mov les fidivl sti jge push (bad) incl fild cmpsl fldl in add rcr cld idivl loopne fsubrs mov push stc lahf inc mov jno or fcoml and xor clc push stc sub cmp jb aas pop cmpsl mov data16 inc mov and push jecxz xchg fidiv outsb jl jmp int3 sti int cmp sub cmp rcrl inc push mov or sbb fwait adc (bad) insl sti movsb add ljmp (bad) push movsl or pop aam hlt verw push (bad) fidivl xchg ja ficompl int (bad) or and jp loope and add or fxch bound sub (bad) int3 xchg fsubr into dec mov push xor gs pop fsubrs cld int pop inc scas sub inc jb push xchg and dec js adc and roll ds subl lods in pusha mov out cltd jl push nop incl mov xchg sbb mov mov push pushf xchg pop fwait (bad) ljmp pop push mov pop ljmp notl test jl jae fmuls ret mov jg jne or lods xchg test sar sub mov dec push iret out bound inc nop jb addb jo popa lahf insb mov xchg jne and dec and add mov jae (bad) mov pmuludq inc and jmp pushf loope mov dec jp fs fucomi xchg fcom sub test out lcall mov (bad) jg sub cmp or inc xchg adc fstpt les inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add (bad) xchg pop rcrb call xchg jge sarb xchg fist xor add sub jecxz into xor shll (bad) adc jg push (bad) std fsubr setne sbb arpl cmp and (bad) xchg test jmp ja jno jo out es test stos xor jae jg js inc jb inc loopne jg jb xchg out jnp sbb pusha adc cli (bad) push shrl mov mov push mov dec psrad imul incl scas xchg negl pop xor inc and push out xor mov mov jbe sub cltd outsl xor dec (bad) or aaa jl ror ret push mov mov outsb mov lds mov and cmc and dec push push xor add bound sub mov add scas jecxz push lahf popf mov mov adc adc sub mov mov push outsl mov fdivrs movsl and push sbb outsl out hlt or jno and stos es xor (bad) add adc aas jnp dec popa loop adc movsb repnz les pop aam lods addr16 pop pop pop mov aas mull adc pop mov aas shl mov leave jl mov xor adc mov (bad) or sub xor imul inc sub cmp repnz mov jns (bad) dec scas mov test imul inc push mov cmp hlt jmp and xor (bad) xor cld xchg and test cmp xchg sbb fcoms adc push inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc add adc inc adc sub notl and jmp (bad) jl cmp xchg dec pushf dec mov testb cld jno mov sub int or mov jnp int push push fdiv sub sub and (bad) pop les cld or (bad) jne mov lret mov cmpsb mov nop cli mov into mov or jbe pop lock mov mov pop mov xchg movsl pop stc xchg fild mov mov push dec movsl mov repnz pop add jno dec (bad) fildll clc es stos outsb xchg out ds arpl cmp addr16 (bad) mov mov jge loope shrl sahf sub jp sub mov (bad) outsb jg (bad) mov jnp jp xchg jne inc or lret mov incb shrb scas mov xchg sub je xor inc mov inc adc add push add push add push add push add push add push add push add push add push add push add push add push add push add push add push pop (bad) (bad) add add add fisub out mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add inc push inc inc push inc mov into add add flds add sbb push add add data16 imul add add add add and cmpsb add mov repz dec imul stos jg jnp inc add jno cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc sbb mov or test xor cvtdq2ps xor xchg add dec test jb std fcomip mov outsb cmpsl outsl push xor mov data16 add sahf pop (bad) pop outsb mov arpl pop xor fstpt in in insb sub xor pop daa sbb or or jg add cwtl add sub mov adc cwtl add sahf or test js inc add add sbb dec push sbb scas or xchg mov in cmc cwtl add sahf test fwait out mov mov mov jmp (bad) or xchg mov in cmc cwtl add sahf or dec adc mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in adc or xchg mov add or xchg fwait jns lret jno movsl sahf hlt push scas iret jg inc and add sub mov in cmc clc add ljmp add aad cwtl inc mov or (bad) xor mov mov add sahf or xchg sbb and or mov jnp inc loope repz cwtl fs sub mov in cmc fadds jno mov inc add add sahf fdivrs lret out jg inc add popa push cmc sahf add sahf loope xchg cmp adc in clc inc cwtl push ljmp mov add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sbb int or sbb sub lret jns lds aaa bnd xchg cwtl sti pop das addr16 mov mov add and dec cmp in (bad) inc dec or mov dec lahf dec negb fnsave sbb shrl shr cmc sahf add xchg cwtl repnz outsb sar xor repz dec stc xchg lock xchg mov aaa sbb shrl shr cmc pushf clc xor xor mov ret xor jmp sub mov adc mov cmp add (bad) cmp pop insl mov enter mov inc dec or mov addr16 mov inc sbb fnsave sbb shrl mov adc nop add xchg and out dec jb or iret and jmp xrelease pop leave mov sub pop pop lahf das loope xor cmpsl xchg std cmc xchg add xchg and inc dec add add push xchg sbb ds dec mov out clc dec sahf psllq push mov jmp rep sti scas das adc int3 jbe cmp dec mov and ljmp mov insl std pushf mov sarb mov inc (bad) add movsl clc push mov sti push inc xchg fidiv mov clc cmp jnp jb arpl jmp mov xor mov sbb mov push add jecxz jge aaa cmc lahf repnz jge dec jne movsl out in push dec adcl sub movsl stc and mov jg fs cmc mov xorl cmp imul inc stc movsl mov jo lea lods dec lods mov push add dec mov fsub sti add jno xor mov fldl jo sub sbb pop sub jbe push lods push ja call cmp ret xor push sbb daa xchg sbb xor cwtl sub lret (bad) (bad) hlt lcall pop stos shlb sub decl and jne push jmp push add jecxz movsl pop inc cmp subb ja push hlt and xchg jecxz daa (bad) mov movsl and fidivr adc xchg cmp xchg mov (bad) in pop inc mov stos sbb or or dec dec sbb ret jno and pop fildll pop xchg xchg (bad) stos sbb in loope in hlt xor dec or sbb jmp fnstsw sbb mov out popf pop adc xor inc js bound sbb xchg test push cltd adc xor mov mov cmp repnz adc pop jno mov push push popa (bad) add fstpt lahf out inc insl pusha xchg xchg mov test mov aaa mov gs adc loop mov jae pop scas and mov lds cmp nop and loop mov cli push addr16 adc lret pop sub shlb rorb (bad) or test fist xorw push jno stos icebp push and xchg sbb xor jns cmp cmp cmp cs push or add flds lock sub sub push jno pushf out data16 adc inc push repnz push mov jno orps jnp stos rolb sbb pop aaa sub lods pop ja xlat out cltd dec imul mov (bad) loope outsb in bound adc pop jno push out add jg xchg pop inc in mov mov xor popa xchg sbb mov lea (bad) and add inc sbb inc jl scas inc (bad) or sbb xchg testb (bad) repz cltd cltd push jo into fstpt (bad) loope outsb in bound adc pop jno push out add jg xchg pop inc in mov mov xor lds lea (bad) and add xchg mov in xchg cmc cs cmpsl xchg lret pushf adc into cli dec pop push test xchg movsb fsubl inc fwait add inc pop jmp xlat add cmp xchg xchg push (bad) push movsb aad je push cmovp jo cltd xor inc test sbb fbld cs pop push jnp jb js (bad) out cltd (bad) iret aas gs mov mov negl xchg testb lret jg mov faddl fild pusha jns test in sub cmp jne push jmp lods pusha lock imulb pop push pop pop jae jb push loopne inc mov mov pop ja mov cmpsb out jmp push psubd add out mov and xchg aaa jns popf stos pop out xchg xchg cmc adc cmpsb outsl jecxz jb pop or or in call in cmp adc test sbb (bad) clc cmp mov sbb mov cli xor sti inc pop fs and cmp adc jmp out inc or daa push sub jne add mov cmp add scas push dec loop cmp adc test add (bad) cli xor gs fdivrs mov (bad) xchg divl test xor ret add adc mov bnd fs dec pop push pop pop jae jb push loopne inc mov and and roll cmp xchg loopne movsb aad adc push adc or decl daa imul jnp jb jns xchg jnp or jmp inc jmp push fldcw pop decl xor push jnp jge sbb scas out sub outsl xchg cli mulb ja aad fisubl and loopne rcll inc dec lahf jmp std lret and xor push cmpsl loopne mov sarl shll pop or dec push ret mov xchg jb or fistl push jno sbb rcl mov mov outsl jns sub cmp push iret (bad) test out adc cmp lods insb ja xchg fcompl push mov jl inc movsl inc push mov ret cltd icebp cmp push popa in popa jle sub test or cmpl cmpsb push inc pop dec push jmp shll cmp fimul cltd rolb sbb frstor jae inc stos mov cmp lods out mov push test push or and ret popa xor loope mov cli or and xchg xor cmp movsb outsl or pop pop cmpsb out adc fistpll push sbb fidivr movsl outsb (bad) jo push adc push push out call xor or fs fwait cs movb cli xlat daa lea jbe xchg popf dec aaa ljmp fbstp mov push decl fbld jae jb sarb mov push and in jmp enter xor mov xor loopne ss jns cmp adc push divps sub out adc std shrb js cwtl sahf fcoml xchg iret hlt ja mov push or jno int3 push mov mov push and jb popf push xor icebp push jmp fisttpl and fistpl bound adc pop jno push out add jg xchg pop inc in mov mov xor repz dec jmp ljmp fmuls and (bad) lret ret lret pop (bad) cli xor stos frstor jno fmuls cmp repnz lcall jecxz pop ja outsb (bad) (bad) push es xchg daa out mov push scas cmp dec add jnp or inc std mov cmpxchg (bad) push xor inc pop xchg mov repnz movsb cs cmp dec mov in movsb push fucomp cwtl (bad) pop sub xchg push popa (bad) add dec jno loope gs popa insb popf es out push cmp js pop jle xor mov xchg xor adc cwtl dec (bad) mov hlt dec dec leave or cmpsb ja ja lods loop fwait push aaa aaa imul in sti push and fs push cmp mov xchg and jo lret push icebp adc add mov hlt mov add mov out push cmp lea pop xor push (bad) mov xchg sarl add clc cmp sub scas and cwtl add sahf xchg adc sub mov inc sahf and cwtl sub inc add stc jne jbe stc xor inc add add sahf sbb cltd cs xchg jle jns sti xchg clc cmp sub inc add or cmp sahf sahf fsubrp imul scas and cwtl add sahf icebp cmc nop xor or pop test sahf and cwtl sub xlat das mov incb xchg lods movsb mov and jmp dec in mov mov je mov lea jne mov cmp cli lea push neg das sti jl imul add and and mov or dec test pop mov mov fs add (bad) add mov bound pushf mulb or scas lcall mov stos cli fnstenv (bad) sahf adc mov cmp sub icebp scas aad xchg mov into (bad) lds fwait mov add les test (bad) xor xor mov adc clc adc rorb dec pop clc jecxz int mov and inc test stc mov push lcall insb daa lock and aaa mov mov inc fildl jmp subl jg ja mov rclb lcall mov mov psrlq pop je jp hlt jmp test lods dec test mov jge sbb xchg dec enter mov mov jge sbb xchg dec andb mov iret lods cli (bad) std test inc lret sar jb popf push xor pop jl sti test sbb xchg cld inc sahf pop or mov add adc inc pop add addl inc rclb mov add sbb scas test clc fsubrl test and add stos sahf or xchg int3 sti jmp out popa mov inc addr16 jne or dec lcall int3 push inc mov pushl push mov (bad) jge mov movsb jmp ret jmp pop jge rclb test sub xchg subl or enter add outsb iret pushf cli cmp push mov nop mov clc pop sahf mov mov rclb imull movsb push inc pop dec push jmp sti mov xchg add xchg pop xor fnsave adc (bad) xor lret cmc out add xchg xchg movsl repz rorb scas jae cmp dec fiadd fwait out popa jbe cmpsl cmp fdivs mov adc dec jge lcall shld (bad) pop int3 (bad) mov iret in cwtl ror je mov stos cltd adc push pop test jle cmc ljmp out dec fiadd dec jge cli inc outsl out push cmp rclb sub pop xchg add push mov mov pop loop addr16 rcrl jae jae add insb scas es out push cmp data16 jns jo push mov adc pop mov aaa push sti pop scas push dec cli cld adc ja mov inc sti test sub in adc cmpsl fdivr rdtsc mov rcrl pop jecxz out shrl xchg cli and pop je bound jo xlat inc test add jg cmpsl cmpsb xchg or sbb js add out out push test ss dec ret cli sbb fsubr dec jno push (bad) repnz js push jl test dec test add push inc push lret repnz jne cwtl sub shll cmpsl fdivr in insl jecxz add jnp scas mov movsl and push jmp inc nop (bad) jo sahf hlt mov or add popa jg into cmp adc sub inc sub sbb call bound imul xor or stos inc adc in imul in movsl in cld inc mov or leave pusha cld int test mov (bad) out out fimull enter inc pop lret int xchg pop clc or mov fsubrl dec mov sub and fwait lea add cld mov movsl add dec cmpsb cwtl inc test push sbb cli mov mov outsl test negl ret inc aas je push outsb and stc data16 xor or xchg addr16 lret lret or xchg mov xchg push leave cltd lock in mov inc jge cmc in sub std xor js xchg xor add sahf or xchg mov in cmc cwtl add sahf or xchg mov in jne xorb cmp out popf xor pop and mov add cmpsb xchg mov mov jmp mov dec mov push int3 xor inc jno in imul mov cmc cwtl add outsb in les addl sub xor mov in sti push add lahf push js out pusha repnz clc add or xchg jnp inc inc xchg icebp or lcall inc jge cmc in cmc cwtl add sahf mov add inc inc add add sahf or xchg mov in (bad) inc sahf or xchg mov in cmc cwtl add inc push sbb lds xor or xchg mov in cmc cwtl add sahf or xchg jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg xchg icebp or sahf or xchg movsl stc or sahf or xchg inc aam push cwtl je es sub cmp jge xlat negb xrelease mov in adc ss ror movsb jne std in cmc cwtl add sub mov in cmc cwtl add sahf or xchg mov out out repnz push dec (bad) fisubr sbb gs push sub lahf or xchg mov in mov inc jno dec xrelease mov in cmc cwtl add or pushw js mov cwtl pop cmp mov dec push jge cld in and sarb push dec xor mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add scas push and jle repnz rcrl aad mov fucomi arpl fnstsw cli jecxz gs sbb inc mov sbb popf out push jge push sub cmp cmp pusha mov mov js jne adc mov or dec cmpl (bad) out divl sub lahf ss inc add jno xchg xor cmp mov mov aad jmp jb cmp out xchg lcall dec (bad) mov (bad) xor sti jp push jnp movsb jae add lods sarl jno lret in negl popa xorb int3 sub sub xchg push incb add iret mov bound in stc addb adc (bad) xor xlat sti ljmp xchg gs add sarl dec jno lret in sti addb and imul enter push xacquire lods out sub (bad) mov stos call sbb ljmp sub rcll imul add xlat push (bad) sahf mov inc cmp movsl jb push mov add orb sahf or xchg inc jno (bad) into int3 hlt pop fsqrt lar push jne lret mov std cwtl or mov jp xchg add repz push popa jl bound fdivrs std or jno or jns mov in lock test xor jp stc cmc repz gs out leave push cwtl mov les out ret call mov jae push dec and aaa lea aaa lock mov push test jg lock (bad) cwtl or mov inc cwtl (bad) sbb sahf test ds les lods pop xchg mov leave arpl adc xor mov inc cmp pop (bad) and push push lods lret mov xor mov mov cmp aam jne xchg mov test (bad) mov xor inc xchg cmc jle (bad) dec jge sbb mov (bad) insb aaa mov divl negl sti scas push js push int adcl sbb cli in std ret aaa sub pop or test push adc adc movsb loopne sbb daa mov repz arpl ret (bad) ja cmp pop int cmpl out jecxz push cmp xor ja sub jmp sbbl jl xchg and xor jecxz add jle (bad) jmp xchg sbb lret outsl ret mov jne mov mov imul or mov lret ja stc sbb jno xchg pop pop test out inc daa pop jp cli sub pop popa loope push mov ret xor (bad) add sbb push imul or mov sbb dec insb sub adc xchg inc lret jno and sbb and jne std push (bad) icebp jmp dec std (bad) jb gs mov adc xchg push incb das inc inc adc lock shll jne lret clc in jecxz push and pop mov jg call cs inc add in cmpsb mov push shll pop mov pop imul mov cmc push call push inc sbbb cwtl out in xchg ja (bad) cmp xchg ficom adc inc insb or add orb xchg sbb mov pop jne (bad) into int3 jmp sub lar dec jno lret in loop or test adc inc mov push gs push xacquire jnp mov test les out fistpl mov stos call adc std mov pop outsl and sub mov mulb mov repz cmc pop jmp lret cmp sbb std mov outsl and cmp pop in sarb bound sti pop (bad) repz mov (bad) in cld orb dec sub jl cli cmc in negl add push lds xorl add adc icebp aaa mov xlat popf adcl pop or lcall inc sbb adc sbb add insb or add sbb addl mov cli decl xchg fdivl mov push xor lds sbb lea mov xor cmp lcall mov cmc out sbb add or dec mov shrl mov hlt repz mov hlt les push and add push gs xchg xor jge jns imul xor dec pushf mov insb xor cmpsl dec fnstcw mov dec add add mov pop mov loope mov aas out dec mov mov insl adc cmc pusha aaa sbb add xchg adc xchg es mov sahf ficoml cli mov (bad) mov cmp (bad) in pop or inc jbe adc lods arpl rcl inc push daa fstpl dec and out dec cmp cli (bad) push repnz sbb and cmpsl inc sbb fiadd or mov inc pop in insb psubq (bad) aad mov lock inc sbb sbb in (bad) mov leave xorl jmp adc in mov add pop or jp dec ljmp xor out xor loopne pusha not mov repz or pop cmp inc inc popa xor (bad) ss cmc jge cli mov addl xchg fcompl xchg xchg mov cmp cmp cld xor inc jp and out in pusha mov stc xchg inc lea xchg ds lret fisttpll clc mov ja (bad) jmp xchg cmp int std lods inc push pushf fcoms push int inc outsb les jecxz jmp cmp ja pusha aaa push in inc adc mov test insl pop stc xchg std lret nop movsl clc mov (bad) fwait repz pop in add sub sbb (bad) insl cmp inc adc xchg xchg xor mov daa xor gs daa push sti bndstx lea aaa and in std sub pop mov fs cli sbb mov xchg jo mov pushf aam bound xchg mov in lret lcall sub aad and push (bad) inc frstor (bad) rcrb xor adc loope mov mov stc cli jecxz or test add data16 test in mov or xchg fwait cs into mov in xchg xchg test xchg mov in cmc cwtl add cmc xlat rolb popa mov in mov imul sbb jge outsl mov jg xchg xor push push add lret adc add sbb push push lcall enter push mov test popa stos jns xorl sub jmp idivl pop js fs adc out mov add hlt stos js sub adc hlt test sbb cmp aad mov add adcb call or and nop xchg xor (bad) jb mov add lea mov out std in subl jb pop mov (bad) pushf aam push lods lock aaa addr16 scas dec out out shll fs insl inc xchg jle add pop (bad) jp sbb neg dec ja xlat pop in cmp imul loope mov cmpsb xchg xchg pop cmp adc jecxz adc push ficoml repnz add (bad) aad pop cli cli adc (bad) mov dec ja pop ret hlt bound inc mov jg jnp sahf lret mov outsb xor negl cmp insb or scas es mov mov ficoml das or lret pop or dec add lahf fs or xor sbb in xchg adc roll xor daa repnz push or xchg adc clc in cmc cwtl add pushf sbb negl pop cmpsb cmpsl idiv jecxz jg call or icebp in negl (bad) sbb lahf ret push xor inc or xchg sbb pop push pushf rcll cmc push loopne or add xchg stos sub mov pop jmp pop outsl add xchg pushf or sub lods addl dec mov add xor dec mov out hlt mov mov sbb push push sti (bad) ss mov pop mov int3 mov add mov pop lahf and mov repz aas lods insb loope jnp ret cwtl scas out xor lcall add inc xchg (bad) hlt jle sbb cld jno es xchg mov push inc cmpsl pop sbb mov xor ret std enter xor jnp inc push xchg dec into test imull js imul lret and dec mov insb or xor imul jne push xacquire lods out push out (bad) mov stos call sbb xrelease adc mov notb cmp jl stos (bad) pop aas sub lret pushf rcrl mov in mov xor dec insl das xchg mov add jl (bad) mulb mov adc xchg add cmpsb cmp lcall mov sub cmp in cmc cwtl add pushf and hlt arpl mov int loop cli cmovbe or pusha jnp xlat add lods push dec outsb sbb out nop imul std ret jg sub push and icebp in mul out lods rep (bad) aam jl xchg jge lock cmp cmp fcomps push mov cmp mov mov test cmp in cmc cwtl add pushf adc mov into std loop cli cmovbe or bound inc xchg push pushf sti xor enter xor mov pop jno adc cmp in cmc cwtl add pushf sbb loopne sbb loop cli cmovbe or gs rolb push pushf sti das dec jae (bad) out xchg ja ja cmc out adc sub daa sbb add out scas repnz (bad) aam jl xchg jge lock cmp cmp mov cld sbb iret adc fnsave in and pop inc mov mov and jg in das call aam pop cmovbe mov sbb notl sbb addr16 movsb fs adc cmp xchg testl daa jg add clc xor sahf or xchg dec popa xor mov add jl (bad) mulb mov adc cmpsl cmp repnz xchg mov and inc jl xchg push andb sahf or xchg dec popa sub xchg add jl (bad) mulb fwait out aas sbb rcrb jb gs cmp enter inc or jg sti (bad) call aam pop cmovbe mov sbb (bad) xor dec aam es jecxz jg loopne ss inc add ret (bad) push jmp dec pop xor and jmp cmp in clc cwtl or and xor out sbb std jne push js addl and or or cmp sbb test mov mov push cmp mov fidiv shrb imul xchg sbb stc test cmp repnz pop or add in xor add loopne cwtl inc xchg jb sub test es mov jg call stc loopne cmp xchg call adc ljmp gs cmpsl push test mov xlat daa sub out jp push dec mov leave sbb mov push fucomi outsb hlt sub xor fcmovne pop sahf fidivl ds lods sub pop sahf mov loopne xchg add aad lods out inc push iret fwait in lock push xacquire scas out push out fildl cmpsb cmc aad les push jb (bad) dec mov inc roll lds sarb or imul (bad) mov pop mov adc mov adc and popa std div (bad) in push dec sti fildll xchg or add cli cmpsl inc ror jno xchg shll mov setns notb test xor push sbb mov add jo xor cmpl div (bad) in push dec sti mov mov add cli cmpsl inc sub cmp adc or fcmovne lcall in xchg or pop mov xor pop (bad) ljmp add inc mov jb and fstl inc and into (bad) jbe jg in push stos dec out inc dec and js fwait sub xchg and iret sub test lea add pop add cmp and cmpsb out sti aaa (bad) cmp push fsubrp ret int3 mov out std lock dec cld (bad) ret data16 out sub bound and sti cmp jns cwtl sub data16 ds addr16 add cmpsb or dec add xchg and pop cmp test add dec mov sub mov shr clc sbb mov jno push xchg mov jge mov adc push inc (bad) fdivrs hlt cli inc mov inc add mov adc leave out push mov mov mov scas push andl lahf repnz mov sbb lds cmp push shr pop or jo mov out daa std xchg mov pop aaa mov std rcrb pop sbb or in stos test mov xchg pop imul test (bad) cmp add ljmp rdseed dec sbb push addr16 sbb jge xchg popf inc pop xor lock pop scas push sbb (bad) (bad) mov (bad) cltd sub mov push inc adc cli push jnp adc xor sbb or mov cli pop xor xchg ret mov sub sbb in cmp jmp and scas mov cmp jmp adc loopne stos dec cmp mov int add mov repnz xor ds es sahf jg xchg pop sbb xchg cmp cmc mov in or mov xchg mov mov add ja lea jl cli add loope or jno mov add add mov std add lcall xchg or cmp in xor mov inc lods cld jno mov xchg mov push inc mov mov dec add jl cmc int jecxz jnp lea pop dec push ss sub cli or adc mov mov add mov addr16 pop cmc loopne xor popa inc sbb fdivr adc push and cmp push or (bad) mov imul add pushf push xchg sahf cmpsb push inc mov decl ficomp movsl mov stc std add pop push and jne std push (bad) lock pop inc xchg pop ss cmpsl enter pop pop xchg mov leave push out gs outsl mov push pushf rcrl push dec push addr16 lcall lods add push push jne lret clc in clc cwtl or mov or inc cli (bad) (bad) sarl call adc inc add loop hlt popa in adc je repnz xor xor scas outsb outsb sti mov pop inc mov push cmp scas mov aaa lock push push xchg int3 dec push pushf aam inc push movsl xchg sti dec sub pushf out inc sbb scas add popf xchg das and xor mov add pushf jg inc dec cmovo les mov movsl iret dec push addr16 (bad) out xchg push loopne inc (bad) or sbb add dec adc and fistpll pop or mov iret lret pop push loopne push sbb push stc call or xchg adc cmpsl push push aaa loopne ret fmulp arpl mov jbe add or rcll je mov cld jno inc or jg sub ss push inc mov pop jg jb sti cli (bad) aaa pop lods lcall dec scas jge ss std or adc sub pop mov push rcll sarl or mov in out sbb push adc mov push mull and xor aas outsb inc sti cli (bad) push or or fdivrp cmp (bad) xchg sbb fildl (bad) fnstcw xchg std negl adc xor inc sbb sbb mov mov mov fistpll jl sub gs adc mov jno xor pop push jmp mov stc test mov ja xchg (bad) add xlat inc or (bad) cli push cli xchg iret mov pop (bad) inc lcall pop jmp mov lea insb andl lods mov adc das imul negl cmp xor inc sbb add inc push mov mov mov fdivrl jl sub fs pop test jae pop xor pop stos sarb sbb xor sarl mov adc pop xchg push mov mov sub int sub add into gs sbb adc sub mov sti lahf add cmpsl sub pop mov sarl or mov in out sbb push adc mov jmp fisttp sub sbb pop sbb xor sub mov sti lahf add cmpsl and pop mov push rcll sarl or mov in out push sbb pop xor jno push mov icebp (bad) sbb xor and push faddl outsl xor sbbb push sub mov inc bound daa dec sti sbb loope xor push xchg daa dec sti sbb jmp js and xchg add dec xchg cmc inc add push and stos out or out mov mov pop cmp jecxz inc adc sub mov sti lahf add scas push and ss push inc pop mov push rcll sarl std jb pop roll pop lcall mov mov es sub sub fldenv cltd adc lods inc xchg or in lock pop call inc insl mov push dec xchg lods fbstp push dec xchg call push das mov sbb cmp or inc inc push sbb pop (bad) mov jae bound and sub mov mov test (bad) sub out std out mov and sbb xor cli or and mov adc enter push fildl int sub mov push call xchg popa jecxz add movsb cwtl xor out adc imul das adc mov lret mov mov aam cmpsb xor mov inc mov sti clc (bad) icebp cli add pop aad inc xchg mov idivl cmp lret (bad) int inc pop imul push sti mov xchg std icebp jnp jmp sub lahf or add and pop adc lea lret jp aad xchg push shrb clc outsl mov cs push cmp and test outsb mov insb addr16 nop mov add pushf fdivrl pop inc cmp cmp icebp out mov xchg sub sarl lds roll inc out add jnp out inc cltd orl mov inc test jne dec sub fiadd push mov dec mov sti ljmp (bad) ret in mov push adc pop jbe adc push lds aad stos lcall inc jg std xchg stos (bad) jge mov add imul and fs ljmp test xchg or mov pop dec fwait outsb sti add adcl add rcr ja xchg das pop cwtl stos test sub pushf rcrb inc pop sarb std insl shl jg lods sub fbld jno pop sbb inc testl cmp lret aam adc jns add stos or imul pop mov clc sbb cmc jge ret mov inc cmp mov ret xchg xor adc pop hlt pop mov test xchg cs sub dec test jae push das movsb inc xchg (bad) jno dec imul (bad) push mov pop xorb fbld jmp jmp adc sarb loope adc ds movsb ja pop (bad) in xchg add or mov add icebp in enter mov sbb mov fisttp xor sti rolb fucomip sbb push cmc adc arpl out jno mov loopne in dec stc jle lea cld enter adc and mov les outsb push and adc xchg mov pop or push mov (bad) pop lcall inc mov test mov push mov adc pop sbb jbe cmpsb jmp std movsb aas inc mov scas ss cmpsl data16 sbb adc stc mov fcomps inc inc xor ljmp out clc pop cltd mov jns leave cmc add pusha (bad) and test push and out out cmpsb testl mov dec fildll pushf jmp xor imul xor fs xor jno inc jecxz frstor add imul loope mov mov stc cli jecxz or adc cmp mov inc lcall jnp mov jmp or iret out mov aaa out repnz sub jns add mov loopne xor sti rolb fucomip sbb sbb push dec jbe or xor mov or jbe ljmp cmpsb jmp lods es nop inc addb push push negb jg sub pop mov cli xchg mov xor and mov fcoml dec dec sbb cmp jmp stos jns dec repz pop pop loope sbb daa push sti bndstx xchg sub shr and and mov and inc push leave fwait push dec or scas lcall fsubl mov leave push add enter in mov sbb push cmp shrl out arpl jge sub (bad) jo add adc int3 mov mov lahf xchg add cmp mov outsl inc test imul fildll adc jecxz gs out insb sbb and aas (bad) or fwait outsl inc pop imul mov test lea loopne cmp sahf push push xchg cmp or cli cmc in rcl cmp jle arpl cmpsl sub mov xor sub ret xor sbb inc inc jne lcall or stos jle icebp adc add xor mov mov jge sahf adc outsl in mov add pop rolb cmp xchg jmp lcall inc nop out fmuls sti push dec cmp sub addr16 xchg scas or stc xor push out add or sahf fs arpl xor and inc add insb repz ljmp adc jmp leave mov (bad) stos add mov inc ret push jge pushf (bad) dec outsl mov mov jle mov pushf jmp cmp je mov push rcll fnstsw std mov cli jge (bad) insl cmp cmp mov cmpsl in mov jg or and iret xchg sub cmc cwtl add mov movsb pop inc (bad) lret adc mov xorb pop jne aaa in sbb mov xor pop mov jae push and sbb dec push in mov or push fucom movsl jmp test arpl jno leave push cmp mov mov (bad) out std movsb insl xchg pop cmp repz mov lcall sbb dec inc push int xlat adc xchg inc sbb inc addb (bad) sub nop add cwtl xchg repnz jge jae (bad) stos (bad) or mov pop mov jno lcall inc imul jnp and inc imul fs xor mov and movsb in sub imul std xchg popa dec mov jmp xlat push int inc pop xchg cmp decl adc in or mov xor mov out popa test xorb pop jne mov in add ljmp mov pusha daa or pop mov icebp ja fisubrl or mov in or les jns rcr and pop (bad) mov mov xchg jb pop jge lock aaa xchg es popa jge out lds xor pushl std in imul nop add test and add nop xor les test iret cld popf daa cmp divl js xchg pmuludq mov xchg mov sbb mov loope push es ds mov ja test inc mov pop jbe jle xchg std negl cwtl or jl cwtl sbb sahf or xchg jp jge notb clc stos repz ja jecxz das cmp pop iret jbe in add push icebp lret or test push sub lock add lds lcall sbb pop cmc nopl adc stc xor imul adc insl fldpi sbb mov cmpsl jo mov push dec imul std xchg inc mov pop lret inc push in cwtl xchg jle (bad) ljmp xchg mov pop call lods jg add xor xor inc mov sahf ss dec and sub sbb lret out pushf rcr push or adc push in cmc cwtl add add xchg mov out dec test jae push mov roll pushf or inc imull sub mov sti add fsts leave jmp lret test mov cmp insb fsubl mov outsl sar jnp adc cmpsl sub pop mov cli xorl in xor das imul sub pop inc nop inc adcl dec jg xchg call mov out jmp cwtl mov ja sbb jo pop test aaa add jo pop mov cli xorl in xor sub pushf xchg imul jb sbb add test aad out cmpsb mov mov adc shr cmc cwtl add mov add test pop mov or clc inc pop xchg sub movsl cld mov lahf jmp std lds test cmpsb addr16 cmpsl jbe outsl or cs and adc xor das xor mov inc xchg cmp stos outsl out sar outsb cmp mov jnp inc push (bad) sahf push dec ja repz xor sbb pop pop call add xlat in lea mov xchg gs lcall fsubl mov leave outsl sub cmp add xor xchg and push sub xor gs sub lds jae pop inc and insl mov fldl frstor gs movsb pop cmpsb pop cmc xlat daa mov fwait dec (bad) mov adc sub pusha mov xlat es xor jp inc push leave lahf push decl and cwtl and push cmp movsl fdivs movsl icebp enter inc mov jno adc sbb mov dec mov add loopne push mov inc sub ja std push jmp cli or inc inc jl xchg pop loop jns jp lcall sbb loopne add loopne push mov inc sub ja (bad) adc shl lods add mov pop js hlt dec dec and repnz in jecxz lret aas mov push js jg mov in imul sarb orb inc mov cmpsl jnp xor cmp into enter sub inc add sbb inc mov popa sti pushf and fcos out push push faddl pop mov popa in and sbb xchg inc jg inc adc mov sub scas push sbb push lret cwtl push in mov or mov pop and push dec pop cmp xchg popf ja test cmc cmpsl cld pop sbb test mov out call xchg sub shlb xchg xchg mov fwait adc or jnp jg in stc stos adc cmp mov adc push mov cli sub push sub xor xor and add mov sbb lods xlat cmp push cli mov inc imul push push mov mov and movsb fdivr add shrb in or enter repz adc jns mov push lods dec arpl addr16 cwtl mov xor or dec mov test rolb add push mov imul xor scas fstpt pop mov push ret xchg negb cld cli and cli aad pop (bad) call fisttp mov ss jmp adc adc insb mov pop mov pop daa cli aam in scas sub xchg and xor or lahf sub scas push sbb dec mov push dec pop js xchg cmp leave daa or imul out add lea lea pusha xchg cmp xchg xor jb popa jg mov arpl popf cmp jecxz push mov mov icebp pop add aaa test fs (bad) ret repz rclb dec ja movsl repz scas add int mov adc pop or pop into mov inc xchg aad andb dec inc outsl lds jno,pt add add or add loopne xor mov adc add xchg cltd lret cs jae (bad) in movsb inc out push repnz je mov call cli sbb les mov or test xchg add ljmp inc inc sub jno fmul test out std fnop (bad) jmp push test and xor push push movsb and jb add (bad) cmp jb and outsb outsb mov jmp clc mov sbb mov xor out xchg sbb push sbb hlt repz dec xor outsl cmp ja add push dec not das rolb dec test jae push xor aam pop and mov xchg in pushf out rcr daa iret lea cmpsb enter jno pusha aas xor sub out (bad) cli das sub (bad) xor arpl or cmc jge ret mov inc xchg movsb pop shl inc xor xchg sub inc sbb and sbb dec mov push in int3 in add ret movsb mov clc pop or pop xadd jae inc sub mov sti clc enter xchg cmp int sti ljmp nop test pushf adc bnd lcall cmp popf xchg xchg sti daa dec sbb xchg push inc push xchg jp in add pop ss lea aam out jmp loopne mov mulb icebp dec cmc pop push jmp pop incl push pop add push arpl mov push mov cmp pop mov jmp out test (bad) rol jb cmpsl test out repnz test xchg call mov out sbb dec in mov fwait arpl xchg sti mov adc and movsl mov and gs loop or mov and adc jns add adc sbb fdivs mov mulb sbb (bad) aaa mov aad mov aaa mov sbb jno mov in cmc cwtl add mov xor push push and hlt call adc pop into xor inc adc or inc jo dec pop stc inc xchg jb sub dec data16 js in pop sbb not xor mov loop aaa aam dec add (bad) fcomps mov jge ss inc stc add andb jp jmp lret imul and ja int jmp out jmp es jae out stc sarb out jmp pop pop jecxz mov imul in mov cli and sbb sbb in or cmc fildl adc xchg std xor or or xchg or sbb pop inc in xor sub insb pusha cli xor test inc clc dec test jae push and inc outsl xor (bad) (bad) pop add cwtl dec push push inc stos jg test xchg cli ds dec adc pop test ljmp cmc xlat push rcl push mov adc outsl pop mov push out jmp pop lret adc sub in in imul adc xor cmc cwtl add mov sub sub or lcall out dec add frstor fistpll push test cmp xor jmp pushf sti in (bad) jmp cmp jmp aad sub sbb jno pop int mov clc mov xor insl outsl jg (bad) jmp mov add popf push jae out std sbb jnp sbb add insb or sbb inc js mov fadds sub cmp pop cmpsb pop cmc mov ja fsubs pusha pop or sbb clc push test cmc jge hlt and fdivr push sbb insl push (bad) jmp or add andb dec jbe mov mov repz push push cwtl inc ds lods pop aad cmc and and imul pop jno mov shrb gs js xchg sbb pop mov sbb or xor jmp shll xchg or lret daa sub in loope insl mov mov dec (bad) jb jns mov jbe sarb xchg dec sti test stos cmp in call jno stos shll mov pop jnp sti rolb lret lea xor popf xchg ljmp sbb mov aaa pop xchg in jns insl es sar adc imul loope mov mov stc cli jecxz call add mov std cmc cwtl out mov (bad) mov add js mov data16 ja (bad) push in or pop pop lock push int inc pop xchg sub test mov or jmp adc pop push (bad) jb pop roll jne jmp cmc (bad) jb sub sarb dec cmp adc dec xor jecxz inc jecxz frstor xchg fisub xor adc loope mov mov stc cli jecxz loope pop cld mov fsubrp xor xor test xorb pop jne inc fucomp adc cmp cld xor in inc orl and push push dec dec add push sbb pop or insl jl dec add mov jmp (bad) pop add xorl adc cli lods sub xor test push or sub mov jae jmp jb in xor push lret lahf lahf in or aam das jnp jmp repnz gs xchg xchg sbb sbb xor jle xchg call fucomip sbb sbb sbb jnp (bad) xor insl insl out mov sarb sbb les shrl pop cmc xlat daa mov fwait dec (bad) mov adc push sbb imul sti loop cmp lods sub fs in cmc cwtl add pushf sbb (bad) repz or mov sbb adc popa (bad) mov int3 es mov pop call inc insb or add jbe mov subl mov sti sbb cli mov stos (bad) mov aas orl adc mov mov sbb cmp sarl into in lret pop dec loopne ja das sbb dec mov inc dec adc and and mov (bad) jnp fsubp sti mov and push dec test out cmp and xor fdivr sbb xor sub jns add add jl out les inc outsb mov pop int3 movhps ret lret pop iret fwait in enter pop sbb insl sti mov dec stc repz sbb push clts and lret jp popa add push das dec sbb xor xor arpl sbb adc inc pop inc in xor or and dec lea sub mov movsb pop cmpsb pop cmc xlat daa mov xchg clc mov adc and push dec test out and push loop or mov and adc jns add pop jl lods sub jno sub cwtl add mov xor adc pusha add ret lock fcmovne inc nop cmc aad les popa add push xor test sbb imul aam out jmp inc push iret fwait in shrb imul inc mov lods aaa insb sti jmp sbb adc mov out lock mov adc cmp mov add ret pusha or sub cmp xor mov add add (bad) iret xor cmp les dec pop imulb jg test jbe sbb sbb aas dec mov addr16 movnti cmp je adc xor add ret loopne jnp and in or (bad) cmp das imul sbb inc xchg and pop dec je lret das adc mov rolb je ljmp mov in jne adc mov icebp jae push aam imul sub inc lcall mov or cmp imul jge add adc adc sbb pop insl (bad) popa or mov mov cld mov pop (bad) jno ljmp add lret loopne ja xchg pop fist xchg rcr and xchg xchg cli and dec sub add jae pop push outsl fwait mov add mov faddl (bad) and dec lea push ljmp test cmc jge in shlb fs pusha adc xchg sub bound (bad) mov push pop or xchg shrb or fwait xlat sub adc test add lods loope and daa or inc push test jae push and or addr16 (bad) aas adc sub jb add and mov test push imull js xor mov cmpsl insl int pop (bad) jmp dec mov mov icebp mov nop aaa mov xor mov add jge pushl jb sub les jne push rol in pop mov jmp add lret loopne ja xchg fyl2x pop les rolb rcr and xchg xchg cli and cmpsb int3 xchg std cmc cwtl add imul imulb mov add xchg mov jae mov ret fiadd sbb mov dec rcrl xchg call mov mov enter sbb jnp jno mov sbb pusha sbb sbb test push cmpsb cmp es sbb lods popa cld push push dec or jbe out repz lahf adc inc inc test cs sti dec scas pop andl mov dec fstpl xor mov insb rcrl xor mov test mov call shrl sti xor addr16 or sub pop imul and pushf or (bad) arpl and enter pop push jb outsb in mov inc movsl arpl int3 add hlt mov jge cmc ss xchg fcompl std jmp jb popf jbe inc (bad) leave stos push xorl xor ret mov or je mov fdivl mull ja fcoml in mov or mov inc nop stos psrad mov or stos jecxz mov cmp xchg call rcr and xchg xchg cli cli xchg sub cmpsl xchg std cmc cwtl add je pop or bound sbb pop mov mov jb push je into xchg sbb out shr dec rorb or xchg sub in lret rorl and jl lcall sub xchg jmp cmpl inc sub mov sti clc dec popa xor ret push roll xchg adc arpl out loopne fdivrl not inc insb inc mov push or addr16 push inc cmp mov jae push and or addr16 adc or sub adc xor int mov rcrl imul in mov stos nop clc hlt pop scas por lea jne das add hlt add jge (bad) sbb xchg fsubrl out xor mov inc pop mov and push jne mov inc scas xchg outsl sar jmp fnstsw push inc (bad) push xor inc xchg inc mov push mov stc movsl jns jge das rorb add pop test aaa mov xor das adc push fdivr daa xor adc sub (bad) shrb and xor inc roll cmp push dec mov (bad) jg addr16 shrb mov out decb inc imul pop out cli pop pop mov lods cmp lret xchg and pop xchg in jns push sbb add imul loope mov mov stc cli jecxz jmp cmpsb xor sub ja iret mov pushf loope shr lret add std lds xchg loopne lods xor imul aaa cmp xchg call rcr and xchg xchg cli cli xchg sub push iret (bad) jmp dec movsb dec fbld mov in or mov lods sub fwait dec fucomi mov inc and std imul ss cmp lea jl ja mov cli push pop inc rorl je ficom xchg movsb and xchg fsubl xor sub pop adc adc dec sub in mov jg or and iret xchg or xchg mov jmp cwtl add or xchg add mov icebp std jne ss sub scas out push out pushf dec sub ljmp lahf lret data16 into loopne testl test cmc cwtl add lahf and cli pop add dec out into in and cltd aaa mov adc repz imul and adc mov mov mov xor das lds lea out push (bad) iret xchg adc test cwtl aas (bad) mulb cli clc leave add xor adc pusha add ror out fmul inc nop cmc imul lock fcos push adc pop xchg aad jmp movsb dec sub inc jg out adc xchg sub in mov dec and sbb enter fs cmp push push test jae push mov pop out sub push lahf enter lods scas cltd daa push push inc mov xor ret (bad) int3 jb jecxz sbb sbb add arpl (bad) mov cmp mov pop adc inc out fwait push jg fnstcw daa dec cli or fs push jnp jns mov adc insb test ret lea jb ljmp adc out jmp pop add add sbb mov sbb pop xchg cmp mov cmp adc push loop or xchg jae popf xchg out lcall out push les pop bnd lea pop push xchg cmpsl fs jmp movsl jno (bad) ss add sbb and inc leave scas push dec xor lcall in jae jmp mov sbb sbb xchg shr out or in out ds xchg xchg test add pop inc in pop mov mov jg or and iret lods fist or xrelease push lods dec mov rcrl imul or push stc ljmp push in jb add aad ljmp mov cmpsl push pop loop repnz fcmovbe push ret dec mov fnstenv sti or or mov aam out cmc or fwait outsl inc push es xchg ret xchg cmp jb sbb push xor fs xor (bad) fimul neg mov mov repnz mov test ja jns and mul pop mov push inc xchg test adc push adc into mov add loope xor subb jns jg (bad) in jbe (bad) xlat sahf psllq loopne sbb mov pop jno xor push lret out add push gs (bad) cld rclb inc test mov push roll movsl ds sahf jae jmp (bad) mov mov es add addr16 ja jns and xor call (bad) jnp adc stos jb and adc movsl ds sahf jae jmp out pop mov ret jb lea lahf xor ljmp mov movsb xlat push adc sub mov or leave in jle mov push (bad) jns jg (bad) in dec jge rcrl mov jne mov in mov pop jno xor leave push leave in (bad) out add push gs aad outsb jp jge and cmp test test repnz sti jno or pop dec incl (bad) xchg aam std negl add xor inc sbb sbb push xchg xor jge lock mov jnp scas mov adc rorb popa mov sbb adc ret push sbb sub pop in add ja pop lods das (bad) orl jecxz test mov dec inc mov xor ret test inc xchg movsb pop shl inc pop fist int pop mov loope adc dec cs mov ja pop int in dec sahf or leave pop mov fidivr cltd cli inc jbe sub popa js sbb sbb push xchg xor jge push sub mov cld cmp aam cmp out xor mov jle mov xorb in xchg repz jmp ljmp pop or in lcall dec inc push mov cmc or adc popf stos mov dec inc mov sti mov adc and shrl xchg cld in aaa pavgb xchg shl sub add and in arpl int3 inc xchg adc aad inc aad outsb sbb xor mov or sub in sbb xor cmpsb cmp ret icebp in enter add popa xchg test stc xor push fs lahf pushf in or lret fisttpll shr pop or in outsb xor push mov dec hlt mov lret mov hlt mov stos jecxz mov inc sub mov add lods ss push inc sub mov sti clc dec pop xor ret push roll xchg in push fsubrl mov or pop xchg (bad) push cmp (bad) adc mov fisttpll dec adc xchg repz fdivl xrelease mov jne inc fsubrp mov mov das dec jb sbb pop test aaa jae popa mov pop lds jmp cld aas not (bad) dec sbb pop test (bad) das jo (bad) dec mov test out cmp data16 sahf add sti repz add in mov mov jg or and iret lods fist adc sub sub test xor and icebp in adc xor mov insl and adc mov scas mov mov aam es fadds ja imul mov imul add and mov xchg add les inc lea xchg mov mov inc lea pop push inc add push pushf aad pusha pop or push cmpsb push loop xchg lea stos into js inc sahf out sbb jns sbb (bad) cmp mov fwait sub mov mov mov leave push add loopne lds lret adc sub xchg cmp adc insl movsl fwait sbb imul jnp mov mul stc dec sahf or leave imul out icebp cltd cld inc jno jbe xor mov xor dec imul mov cli or and sub bound xor outsb mov lock add pop or adc lret and dec sbb push imul xor mov cmpsl push outsl test jns mov adc out test jae push and and xchg out ljmp xlat inc insb dec mov jge add in mov sarb jge pop call cwtl mov leave jno add std mov sbb cmpb mov push out pop stc jmp sbb test push mov dec lret les lods ret add (bad) pushf in (bad) outsl hlt dec insl sarl les mov sbb jge cmp pushf xchg cs ljmp out push jmp adc sbb mull dec mov in shl insl or pop inc loop pop fwait in out sbb jg xchg cmp out out js jge push in jmp movsb pop cmpsb pop cmc xlat and in inc orl arpl and imul xor xor mov std out std movsb mov sub jbe repz aad daa or sub pop ds mov mov dec data16 loop mov lods fldl pop add and dec insl out pushf xchg and aaa ljmp mov or fimul andb dec push mov out xor inc sbb sbb push xchg xor jge add pop cld inc negl pop dec xchg mov scas test add (bad) or adc xor icebp mov add les gs adc sub jmp cwtl xchg mov add out (bad) cli and repnz (bad) je push jge ret mov ds mov mov and xor in arpl int3 inc xchg adc aad inc aad outsb sbb xor inc inc or sub (bad) or xor pushf or mov add add icebp in shrb gs mov xchg mov sbb fcomps bound mov jge bound cwtl pop cmp cmp mov or and pop (bad) pop arpl ja jmp or leave scas std or push adc insb test mov pop in mov lret adc xchg jl dec jge lret sti and dec sub xor fistpl aaa sbb mov sub inc aaa jns or push stos add in push pushf xchg or cmp loope test add inc pop inc in xor sub add mov xchg decl ja xchg repz pop insb mov push xchg sub mov push jmp mov pop mov sub add or sarl sub jle out cli icebp std jne push xacquire stos stc shrb (bad) lods les sbb outsl cmpsb inc mov cmpsl xor push add jne repnz cld jno add aaa pop dec push add stos inc fs pop pop testl cli cwtl out add or push xor xchg nop jl xchg adc mov (bad) cmc xor adc decl cmc fcomps xchg addr16 jge dec (bad) loopne sbb pop mov insb es inc jle fadd add mov pop xor pusha test es lea addr16 adc mov sbb jge cmp aam out jmp xchg test mov inc sahf or mulps aaa out repnz imul fisttpl js xchg sbb pop add mov repz cli inc xor mov bound or (bad) mov int test (bad) test add popa dec mov add fwait inc hlt xlat push int inc jg lcall adc xlat fldl xchg mov sub idivb in xchg gs inc sbb fisub lods jmp pop insb fwait dec (bad) mov mov iret js in fnop jbe xor mov stc inc clc sar mov mov (bad) xor (bad) in adc and outsb cmp in cmc cwtl add lahf pop fsts mov cmp pop test aaa pushf and stc mov loop outsl inc clc xchg cmc sbb and fsubp mov out (bad) add cmc enter add mov jne pop sbb inc jg jecxz push out mov sbb mull ja (bad) std cmp mov adc rcll popa inc jmp jmp mov adc fldln2 cmc cwtl add add (bad) and fabs mov fisttpll xchg push gs loop sub and dec mov cmp mov mov push sbb pop inc in xor ficompl rcll add push pop xor cs push and cwtl mov xchg pusha aaa push (bad) xchg mov test xchg sub pop aam bound sahf or xchg cmp push fcoml mov add inc jl (bad) add adc out jmp inc popa inc mov jge loope ss pop pop lcall bnd loope mov push pop popa xor insl add jb aam es fadds sub inc sahf jne aaa push insb or add pusha divl insl cmpsb cmp jge cltd pushf sbb xor sub out hlt ret fsubl and je (bad) xor xchg jmp scas adc cld xchg sub (bad) dec adc mov or imul mov ss aam or mov xor arpl mov push mov loopne loope mov push adc daa mov int3 dec and inc sub not mov push and push mov inc stos dec fsubl addr16 inc loopne pusha jb jb into jg pop test aaa mov adc mov mov aam das sub (bad) xor ja dec test jecxz lret scas mov adc mov add sbb das fiadd iret jae inc call aad sub adcl cmp ljmp xchg mov mul out xchg mov idivb lret nop adc popa pop inc je mov insl push hlt in test and pop inc scas push out lahf in repnz inc cmp xchg jge xchg sub insl mov sbb imul add jmp mov jmp mov or push jbe hlt sub xor ror out adcb sbb lods idivl lock lcall sbb inc leave push dec iret (bad) imul imul pop stc out mov aad sti mov scas pop aam repnz jmp or cmp adc xor jae jp das (bad) orl rol test mov dec inc mov cmp ret test inc xchg movsb pop shl inc pop fist iret ret pop mov loope or dec cs mov ja add cwtl inc xor xor out dec dec test movsb mov icebp mov pop jo dec (bad) mov pusha mov loope pop lods (bad) jecxz sbb inc mov popf aam cmc loopne les outsl jae ljmp adc out jmp mov dec fcoml fchs std mov add push adc in jns jnp stos pop shl inc xor xlat les inc or dec stc loopne push es bound inc xchg mov lea cmp call sbb pop out sbb mov mov and cmc cwtl fimul pop and xchg repz movsl call xrelease xor xor cmp jp inc aaa out negl sbb leave mov sbb imul mov repz and in inc mov cld and mov std jne addr16 out outsb adc sbb inc sti and jge mov mov push xor test enter adc sub jmp xchg mov cli sub enter popa ret out (bad) jne xchg cmp fsubl mov sbb lret adc stc mov mov (bad) ja lds pop xchg fcoml xchg in inc outsb mov add pop xchg out fsubrs push push push inc cltd sti lret andl popa call jno rorl hlt punpckhbw or test fsubl sub out into ja cmp notb div sub and fdivr inc lock stc xchg and jns jno add push gs loop or mov and jb inc (bad) sub push add add sbb pop imul pop and jecxz mov mov iret subl xor in (bad) cmp aam and mov adc xor jp cmpsb inc es in jae jmp (bad) scas icebp fimull cwtl movl dec stc xchg or lods out arpl popa cmp xchg jo add ljmp in pop or cmp pop jns fdivrs int idiv pushf jmp sub jle inc outsl sti mov imul js rcll inc mov mov cli push xor dec mov loope pop lods (bad) cmc cmp jno cmpsb cmpsl (bad) sti jmp xchg ss pop movsl push dec popf rorl cmpsb or jge daa or into push test jae push and sub mov xor push xor std and aad cmp ret mov inc xchg movsb pop shl inc xor mov or jmp cmc cwtl cmc cmp aas test inc push das add nop xor dec mov stos scas fs int3 daa adc divb push add adc (bad) jp sbb test xor push stc xor or out cs jno add vcomisd cmp gs (bad) dec bound movsb hlt in repz inc cmp jns xor sbb jle (bad) (bad) loopne adc pop adc mov lods fwait sbb xchg inc mov jo dec adc inc and mov mov sub push in in or aad push push jne (bad) stos in mov pop and int jnp outsb in mov subb jbe loope lcall or adc pop jl mov mov clc cmp inc add sbb push iret fwait in mov jl mov ljmp adc test and icebp in sbb xor fwait inc (bad) int (bad) into push push pushf or xor jae pop jecxz in jg hlt xor inc mov mov pop mov loope mov test mov pop js imul pusha movsb mov push or xor inc mov push dec cmp std stos loope push xor dec inc arpl (bad) in add sub inc push cmc cmovne repz add setnp adc sbb lret mov jne repz xor stc clc sub out insl dec mov add pand mov mov cmpsl cli scas clc inc xchg sub jmp out xor and iret push (bad) repz sbbb mov aaa adc jmp cltd shrl sub dec mov add xor test aaa mov or fimul sub mov mov mov pop loopne sarl jno sbbl or mov loopne test ljmp inc and or mov ja test in shr std sub and aaa andl push sbb mov repz sbbb mov xor and adc sub cmpsb test xchg jns lods jae xorl adc sub jnp dec inc lret or mov cli dec stos xor dec pushf es jmp sti and xchg (bad) pusha aas or sbb popa (bad) push mov pop loopne sarl jno adcl or mov ljmp ljmp inc and repz mov jmp lea dec stc shrb dec cmp xlat sbb mov jl inc mov enter and aam call add adc sub mull (bad) mov jle add in lock loope mov add sub test shrb imul mov sarb xchg dec xor dec mov insb xchg push sbbl or (bad) cmpxchg lret or push out dec and repnz inc jp pop lock sti into push cmp (bad) test in sub lret or jp push mov inc insl inc mov cmpsb add (bad) xchg sbb mull cmpsb (bad) jecxz into aam mov popl inc ffree sbb call add enter and shrb mov cmpsb loopne and xchg aaa movswl fdivrl cmpsl push add (bad) push ficoml mov mov std push stc jmp mov lahf fs sbb lret dec (bad) or faddl scas (bad) aad jno add xor fxch push fstpl in shrb jno jbe xchg pop mov enter (bad) mov call jge std sbb xchg add and cmpb dec xchg xlat xchg in xor cmpsb mov jle in pop or mov and int adc in loopne xor dec mov dec adc cli lcall mov add gs mov ss mov lcall imul mov sbb mov (bad) nop cltd mov pop cmp gs cmpsb sub jno js xchg inc dec mov shl lret inc aaa add jo add daa lahf jmp lahf popl iret push cmc mov dec mov call andb repz sub jmp stc jno cmp cmpsl sbb cmp push ficoml sub es jae stc jmp mov lahf fs sbb lret dec (bad) or faddl inc stc test test into add mov (bad) cmpsb (bad) repz mov in cmc cwtl add psraw aam or add dec and xchg mov imul sbb push cwtl or and cmc adc mov lods add cli push sub xor daa lcall arpl dec js mov jmp gs mov pop ret rcrb (bad) and mov or hlt push sbb movsb out std or ret movsl leave add xor hlt cltd sbb sub pop rorb dec inc dec ret mov aaa call cvttps2pi and mov fsubl sahf les fsts sbb mov jbe cmp dec mov pop (bad) mov call xchg mov jg jb mov into repz in inc cmp inc jns push pop gs clc pop mov test cmc call mov jb mov stos xorb or or dec (bad) cmc call mov jb mov stos xorb or adc mov (bad) cmc call movsb jp addr16 jl cmp pop into test push pop test lcall mov inc jg subl adc pop rcrb iret lar add (bad) out out add hlt push inc jg add cmp mov pop and inc lcall popa xchg scas xchg clc xchg ret mov enter aas ja (bad) js jge inc xor push mov cmp rolb cmc cwtl add jno xchg jno cld orb or subb jp inc lds xor jns andb icebp in add inc in add frstor sti inc xorl xor pop mov mov fidiv add or dec push inc mov mov inc add in sahf sub mov je mov sti (bad) sbb lock add dec and mov push mov xor add pop push ja shlb jl movsl xor xor dec pushf xor pop in mul lcall outsl sbb jne lret clc in cmc cwtl add pushf and adc nop adc mov ss cs inc add fdivs shll pop cmpsl enter (bad) dec xchg das pop out lock mov jmp fsubl xchg inc push xchg adc movsb iret aam leave in inc cmp adc in mov (bad) xchg add and cltd mov popa adcl inc (bad) cmp mov jecxz or mov (bad) dec test gs inc add cmc stos mov push shll pop cmpsl enter enter jnp inc pop lret sti loopne pop mov in inc incl movsb mov mov jae sbb daa pushf dec adc fistpl inc mov push in dec or xchg xchg cmp (bad) popf pop mov inc les dec outsl in in je insl add vmovntpd add rdtsc sahf or xchg dec jbe mov int3 hlt pop fsqrt lar push imul mov inc gs mov push in inc sbb test xchg xchg cmp (bad) sub push and scas jno mov hlt sti push loopne cwtl push lret cmp mov push jmp mov daa cwtl xor outsl sbb movsb pushl cwtl ds test mov cmc cwtl add pushf and hlt mov or xor scas je mov stos in inc decl adc mov adc mov xor ret push and push lds es (bad) and push (bad) repz xor aad add jg into lret push pop lret cwtl in cmc cwtl add pushf sbb push push insl sbb cli fild adc xor dec sbb enter arpl cltd movsl mov int (bad) sub or cs inc add in (bad) popa lret movsb jb gs push jo in imul jp mov mov sbb gs sub out aaa out (bad) cltd sub inc gs mov push and and bound mov xor add int3 hlt pop fsqrt lar add mov cwtl add out mov inc gs mov push in dec push add ja xchg cmp (bad) sub push es scas jno mov hlt sti clc push (bad) add rcr inc xchg sbb pop jmp mov and adc clc in cmc cwtl add pushf adc pop cmpsb cmpsl idiv jecxz jg call addr16 lods inc add rclb xor pusha daa pushf incl jo xor adc in dec xlat fstl lea imul cmpsb dec jmp inc xor pop jmp lock mov in cltd mov sbb and xchg inc push xchg adc push sub lock mov adc adc cmp pusha or ds push inc add repz cmpl shll aas sbb mov mov mov (bad) cmp sub insl dec ja addb mov or jmp mov mov xor pop jmp dec sbb jb sub loop or loope shlb fidivrl add pop pop inc jmp pop cmpsb dec outsl adc add lds arpl pop arpl in push movb push aas inc cwtl leave lock pop (bad) sahf xchg repz (bad) andb test enter lods in add push insb or and inc popl push inc ss nop dec out out xor dec push rolb mov dec outsb adc add (bad) hlt pop push or test dec cli cld cmp loope jp (bad) xlat das xor outsb push (bad) mov popf or ljmp lods inc inc test aam out scas xlat mov pop inc jb fwait mov addr16 mov mov hlt pushl scas push inc arpl mov loopne xchg rcrl jne ds xchg icebp (bad) pop movl fisub push insl jb (bad) out fcomps imul cwtl or and in adc mov lods add cli push sub xor inc pop push jmp in mov sub outsl cmp icebp lret daa mov pop xchg loopne je in inc decl adc add cwtl (bad) dec jmp fnstenv outsl adc pop pop std cmp sbb dec dec push lds nop xlat sti mov loop jb adc sbb enter addl push (bad) icebp or and cmpl sbb sbb inc dec inc mov fildl sbb or jp pop fistl and and adc repnz sbb inc add mov push rorl jb xor jnp jno sub or pcmpeqb push mov stos mov sbb dec push cmpsb dec inc jae add test mov sbb cmp repz jle jnp lcall jno mov in cmc cwtl add pushf xor gs mov cmp (bad) aaa into xor mov xor dec push loope rolb cmpsl push roll pop add jbe mov mov adc ss dec inc cli mov jne push xacquire scas cli (bad) out fstpt xchg stos call pop out xor pop mov cmp add add and mov cmp lahf jmp cld adc lahf or es lcall push cmp inc sbb add sbb jge enter dec outsl in in push lds test andl std dec push sbb lret lea pop xchg fist xor (bad) sub test loopne enter xor lcall rorl loopne push pop dec add mov cmpsb dec jmp das lcall sub push mov mov std cmc mov and jecxz es enter in add xor mov jmp fisubr (bad) jg push pop les (bad) push pushf xor pop in mul call sub push inc rcr mov pop mov mov pop (bad) xchg lcall pop mov sbb cmp xchg (bad) stc loope jo leave jae xor test popa mov mov lcall insl fcmovne add ret and aam pop add jmp adc adcl push repz push sarl dec sub icebp or add jno hlt lods cmp xor xchg adc sbb mov repnz jg addr16 inc jne lret xor cmp adc xor lods jle push (bad) fucom pause cmpl or push inc push mov fbstp imul mov out cmp xor push mov dec inc lea lret dec mov adc adc test mov repz es sti divb push in jb add sub jmp mov sub cmp fcomi std push fldl sbb pusha popf repz dec mov fucomi sbb cs out pop mov xchg mov out mov sub rol jae mov js out (bad) pushf sub mov fmul es iret inc fildl or js xchg jae adc inc mov xlat pop jnp xchg (bad) dec mov shlb faddl mov insl (bad) pop xor dec clc xorl mov (bad) xchg add cmc add inc cmp mov test test or push mov je jle mov mov and jbe xor pushf fadds data16 jecxz jmp cwtl push inc push (bad) xor shll pop cmp xor loopne jmp cltd imull divb scas decb (bad) into pop xchg rcl xchg inc outsb lds and loopne inc sahf jge repz xlat add mov addr16 push sub stos clc jns pop mov popf aas in out hlt add stc dec mov std in sbb test stos in inc cld dec outsb adc sbb or pushf ret pop mov adc lcall dec sbb pusha adc push push sarl sub mov lret jmp mov (bad) pcmpeqd inc jns pushf mov dec inc cmp xor jnp or or cli in (bad) jb cmp xor dec sbb add cld in mov pop xor xor imull add push scas sarl adc mov incb (bad) fild jbe popf jmp mov dec lret and test push in and dec jge imul dec hlt (bad) jecxz push lds lock test mov push enter xor repz sub add pop in push xor out nop stos xchg iret aas (bad) int gs or pop inc pusha enter pop pop lds ljmp mov pop xor push mov mov stc mov stc loopne sbb shlb mov ret repz xor or add loop fcompl (bad) (bad) and mov mov push je,pt mov in mov inc jle,pn xchg inc nop cmp adc xchg imull lcall pop mov in sub int3 std scas inc sub sub jmp ret xchg fnstenv scas mov ja movsl mov mov lods hlt vpshlw aaa pop pop pop stos and xor rorl adc mov xor adc and add mov (bad) ja fisttp adc pop loop insl mov std mov fistpl mov inc js loopne cmpsb mov mov stos in inc cld dec outsb adc testl stc push (bad) lret jmp mov lock push repz sahf or dec push jbe mov mov pusha dec fwait addl cmpsb xor mov out dec inc mov std jecxz es enter test push xchg cmp push mov jne fs push mov adc push push xchg cmp cmp fildll mov mov dec mov test test sub mov pop mov pop ds sti loop pop mov xor mov adc scas pop hlt popf lret jg std push in xchg mov stos (bad) cmc icebp inc pop mov inc pop clc inc pop push repz test sti (bad) mov add mov cmc imull mov (bad) jg xchg in (bad) (bad) push adc aas out call pop xor lret and int3 pop aaa mov jae mov bound cld leave pop aad cmpb cmp shr negb (bad) aaa xchg cmp daa les out pop sub shrl leave pop xlat push cmpb add jmp gs add mov ss adc sbb pop jb mov aas dec cmp inc push aam mov lret stc divl fidivl pop out into clc mov sub shl sbb lock lret xchg cmp cs mov mov push inc push and fldenv jns mov push add pushf cmpsl pop cmp movsb int3 popl rcrl add dec cltd outsl inc popf enter loopne test sbb stos jle insl cmp xchg setl and jg fnsave sti mov add mov push inc subl cmp or gs or xchg movsb fiaddl leave sti in inc pop out xor fwait stos inc jge repz lret xor repz jns stc in cmc cwtl add lahf ss inc add ret (bad) push jmp inc jmpw and sbb cltd divl add adc mov loope ror fidivr in cmc cwtl add pushf sub ljmp std (bad) sarl call sub insb inc add mulb inc add jg out out movsb nop cmp imul lods sti arpl imul cmp xchg mov xchg addl icebp in imul loop mov add jg sti rcll mull insl sub sahf lods sti arpl imul fdivrl std adc into sub fisub inc inc mov imul cltd movsl into fs cmp or sbb pop mov push in jmp adc add sub test jmp jae pop inc nop repnz clc loope dec imul pop pop int mov pushf test inc ret mov xchg cmpb push xchg fisub inc inc mov loopne pop cmp sub lret push pusha add dec mov sti test mov jne mov in faddl outsl and bound ret in loopne aaa add repz or sahf dec push pushf rcrl jo mov xor (bad) lret js imul aaa into xor or add add push call pushf leave mov push add inc aad cmpb inc jae aam or and pop adc ss fnstcw std jmp sbbl push btc adc or or push ja in cs xchg (bad) jp std sbb imul insl ret loopne fsub decb mov fbld jl inc popa iret fwait in lock ss xchg mov push sbb enter jns adc xchg xor aaa in loope or mov jno inc add adc (bad) mov sbb mov sub sub add sub xor pop push aad in call bound mov shl mov adc push imul out rdtsc sahf or xchg dec je mov jg mov add jl and xor jno mov addr16 clc movsl mov pusha sbb mov dec dec add xor pop pop or lods ljmp pusha adc icebp and add jb incl fisubl int3 movsl push nop ret and inc stos jge lahf imulb dec and cmpsb sub mov xbegin pop call pop dec nop out lods lcall pop inc into sahf mov repz insb cwtl ds loop dec iret gs and mov jno jnp lcall movsl jae stos in fistpl inc mov and lods lret out sbb aas mov cli leave pop jl std out (bad) (bad) xchg push fldt aad push push imul mov sbb mov adc lea daa pop pop or lods ljmp bound (bad) push (bad) mov scas mov negb nop cmp add test pop push xor dec nop out lods lcall dec push orl xchg cmp sbb sbb imul js and addr16 into repnz mov bound sbb cltd inc inc or stc mov inc inc adc jge pop push test pop daa xor arpl xor inc jp out adc (bad) dec fnstenv mov add sti push daa scas cs mov inc jge pop push pushf jmp mov jg jbe mov iret mov xchg addr16 imul xchg mov packuswb jmp adc ja test push (bad) lods cld loopne in shrb gs pop xchg lods mov fcoml outsb sbb or cmp inc add iret dec mov jnp mov add enter pop push js ret or or mov add in jbe xchg pop xlat xchg cmpsl xchg test scas clc inc xchg jne sub sti stc inc dec sbb (bad) dec jno dec js jbe add ds test cmpsl pop jmp stos sbb imul lods mov mov xor and mov loope cmpsb inc pop push int dec (bad) arpl xchg ret fcmovnb add out (bad) cli sbb pop (bad) je push jge ret ljmp loop or mov and imul dec sub mov sti xchg xchg push repnz mov mov push fdivrs sub xchg (bad) call stos pop sbb mov out (bad) repz xorb loop mov jnp add fs sub mov out jns stos jns xorl adc popf mov inc ja (bad) icebp and xor fdivr push jecxz out cld cmp jnp or popf mov inc pushf adcl or xchg mov ljmpw daa movsb out xchg (bad) arpl insb sahf add dec jnp gs out jge or cli mov jp es xlat jmp sti loopne xchg push jp jmp pop hlt lcall das mov sub xchg pop inc nop xor pop cmp mov sahf cltd adc loopne aam inc mov xor adc lods sarb fnstsw in mov aaa xor mov in cmc cwtl add mov adc or add dec and xchg mov jne lds movsb pusha ja mov jmp jno cmp adc jle sarl scas xor and (bad) in mov std out lods mov or adc xchg sub fidivr push sub fwait sti xor pusha (bad) sub sbb xor push and or addr16 jno push sub aad or imul aad jmp js inc xchg add xchg std cmc cwtl fadds orl inc push adc adc xor mov fldz xor cmpsb inc lock lds push lret jns lahf fs cmp fild mov xchg and cmpsl inc rcrb jecxz push inc jle mov shrb jno dec adc addl mov lahf fs mov idivl mov cmp std adc sbb es mov mov flds push adc lds push dec add or rorl mov fisttpll xchg jno jp test push iret fwait in shrb imul mov arpl pusha cwtl lahf notl cmp arpl andl repz cmp ljmp (bad) pop inc enter mov mov dec and flds xlat push int inc ffreep jns fnstsw fsubs imul enter lahf xor sbb neg sbbl cmc fsubrs faddl ljmp xor pop gs loop mov xchg mov andl repz xor jg mov push pop lods (bad) pop inc lret pop adc adc insb fsubl mov dec and inc push xlat push int inc ffreep jp pxor fsubs imul lret dec (bad) xchg je loop dec shl subb dec cmpl repnz daa mov xchg mov int inc ffreep push stc mov imul xlat sub xor sbb neg jnp mov jae push lahf pop sar mov and push sub inc in xor loope xor or test movsb pop cmpsb pop cmc sub ja jns pop test aaa cmp jle sub outsb jecxz loope pop lods (bad) pop inc lds popa mov jae jmp cwtl lea int3 loope roll in mov in mov mov xlat push int inc ffreep data16 dec cld scas push or (bad) mov or push loop mov (bad) mov test int test cmc jge inc divl iret jns pop test aaa cmp jle dec dec mov pop lods (bad) pop inc lds push leave adc jmp cwtl lea popa ret roll in mov in mov mov xlat push int inc ffreep pushw push or pusha push or (bad) cmpsl pushf adc mov loop mov outsb push jg std (bad) aaa repnz lds dec inc addl repz (bad) mov xor out es (bad) je sbb mov imul js and inc out jae in fsubrs pop inc fwait mov xchg addr16 xchg pushf mov jno jmp enter notl push hlt mov cli mov pop adc jge sti add inc das or sub out inc pushf jmp in xor adc aam fucomp addl in push imul lret addr16 push rcll mov (bad) aad pop pushf push pop lods cmp mov sti cwtl xchg leave in cld jmp out ja push insb pop pushf ljmp add or pop and xchg lea mov shrb imul mov fadd inc sti stos cli pop jg adc gs in rol push out notl fldenv into loope mov loopne and pop and bound xor jmp das jmp (bad) int3 add mov xor adc mov sbb movsb movsb or or in enter push xchg xchg and imull in mov insl sarl push je fnstenv mov mov ja loopne mov pop cwtl int loopne lods pop lret mov sub test or sbb mov vandpd push jg mov pop (bad) and psllq xchg dec fucomip pop cwtl and mov addr16 shr out mov or divb aad and adc cmp jmp or scas jge and add cmp and xor mov fidivr push push mov adc pop sti mov loopne negl aas cmpsb inc jl (bad) cli push stc mov iret test pushf std icebp jnp pop pusha outsl jnp jp xchg sub mov sti lahf add cmpsl sub pop mov xchg dec in add fbld cmp in out sbb push adc mov (bad) cli jecxz imul jnp pop sbb dec stos push adc sub mov sti lahf add cmpsl and pop mov push rcll xchg dec in add (bad) gs mov in out push sbb pop xor jno push mov icebp fidivrl js adc sqrtps add outsl xor sbbb push sub mov inc bound daa dec sti sbb loope xor push xchg daa dec sti sbb jmp js and xchg add dec xchg cmc inc add push and stos out or out mov mov pop cmp jecxz inc adc sub mov sti lahf add lahf ss cs inc add out hlt popa lret pop jae gs cmpsl enter es xchg mov push inc stos pop and je and enter xor mov mov fcmovu loop sub out xor mov mov ja dec rcrb lea loope pop lods (bad) aam xchg jp jge mov xchg or jno xor aas movsb (bad) jecxz repnz dec imul jg mov insl loopne or (bad) xor jo das xchg mov ret out cltd jb xchg ds test jp clc in cmc cwtl add pushf adc pop cmpsb cmpsl idiv jecxz jg call dec mov icebp in mov inc lret das jg push out sbb ficomp mov aaa lds pushf mov movsl aad add sti sbb mov movsl das add std mov push adcl movsb lahf int dec (bad) dec pop mov cmp outsl sub test imul pop xchg (bad) dec cld jle jg lret sbb add push jmp cmpsl jae ja xor scas inc xor pop enter les (bad) imul add fnstsw sarl pushf cmp add and shlb out cmp add inc jmp pop ret and xchg das mov and ret xchg mov jmp subl push call lcall js sti sti testb scas int sub add (bad) in inc cmp jb pop jg std pop push xchg xor push cmp mov call lcall js sti sti lock sub add inc jmp pop ret and xchg cmp daa jae mov inc stc push pop adc fnstsw test pop xchg (bad) dec cld jle jg adc add jns inc push mov gs loope lahf fimull das jne sub mov out scas addb in xchg call cmp jl cmc xor push xchg xor cli and scas lods cwtl jb pop jg std pop adc sub adc and xor movsl mov call lcall js sti sti lock lods cmp pcmpeqw push test test pop ret and xchg cmp aaa jnp mov inc stc push ret or cmp mov xor xchg (bad) dec cld jle jg mov inc push add push (bad) stc std jmp sub jmp dec jmp mov lret es sarb or pop sbb packuswb xor in inc test push dec and xchg xor cmp test lcall xchg or push arpl outsb mov pop mov xor add jae outsb mov cmc fmull or cs sub mov roll imul in mov and in enter rolb popf cld cmpsb aaa pop scas cwtl sbbl incb adc xchg mov jge rcrb sbb in lea scas push lahf hlt adc push cmc xor (bad) xchg inc (bad) inc out push dec xor ret push adc in out push inc inc dec mov dec push inc mov clc sbb adc xor inc stc xchg fwait inc in jge mov pop popa in es in sbb pushf xor add push dec or mov adc repz push ret jo adcb test add mov dec push sub ljmp xchg push mov mov pop psrlw test mov fdivrs fsubrp jg movsb xchg mov lahf insl and pop mov inc imul push mov jmp in jle rorl mov lcall mov ja sti in sbb mov xchg lods inc in mov mov rcll and out push lahf sub pop xchg cmp cld mov out jno sahf xor jns xor adc cmp adc ja andb inc and pop out in cmp scas into scas adc mov add mov fcomip popa jle jl adc js iret (bad) jb inc add inc stc xchg add mov add xchg out cmpsb out jbe xchg push repz xor sub add std sti les mov xor aam addr16 test (bad) dec jne hlt (bad) (bad) jbe inc pop inc inc das lods add jo xchg aam jne xor and fs mov mov cmc add stos inc jae cwtl adc jo pushf pop test inc mov or out call cmpb pushf outsb inc jl push lahf insb sbb xor push or mov out mov pop inc mov adc repnz or je or xchg inc int cmp jge jns in jb mov (bad) jae nop sub mov rcll dec mov movsl pop lds inc in popa mov scas insb add cwtl xchg and or mov or (bad) or add jp or in jmp cmp dec jg add mov inc imul ret jo xchg aam jne dec rcrl jle xchg pop jo int3 jbe xlat hlt add stos inc jae cwtl adc in mov inc push jae push out daa out shl test fadd lcall mov add mov pop pushf xchg lret add mov popa mov (bad) xchg lahf xchg xor mov add inc stc xchg add mov xchg jnp inc ss mov push ret dec test jge std add std sti les mov xlat xor add pop cmp push adc jge and and sbb adc jno popf pop gs push icebp sub fdivrs mov daa clc rcrl and not jge dec data16 lods xor mov add sbb mov pop shrb add (bad) mov xchg rorl fcmovnbe mov mov hlt loop mov mov mov stos popf in fdivrs add push repnz add addb lock mov mov lahf jb cs icebp jecxz std sti les rcll cmp mov dec or movsb lcall mov clc sbb mov fdiv lahf sub or aas mov mov mov es addr16 imul or sbb inc stos jge adc jg xchg push in sub bound stos inc outsl (bad) call data16 mov cmpsl cltd notl imul jmp cmp dec cltd out pop sti mov xchg sub dec mov inc jnp dec jmp sbb int3 je or sbb out jb fwait mov fistpl xchg xorl stos inc jg addl jnp mov ss sub lcall in dec je (bad) adc loope dec daa (bad) push nop stos iret je mov add sti xor icebp jge (bad) je test mov sahf add adc cmp add lods push ret adc out fs xor stc xor or add push add sub dec insb test mov in stos test subl jp imul ss xchg xor mov in enter mul (bad) sub rcll and outsb leave cli outsb out add push fs outsl mov repz pusha push pop jg int cvtps2pd mov mov loope cltd lahf xchg cmp inc dec mov in sarb lock es sbb sbb cld mov adc in pop mov mov (bad) pop (bad) jbe outsb mov sub cli sbb adc imul pop jg cli and movsb inc add sahf pop lahf in xchg movsl mov inc vpsubusb ss mov mov scas mov sbb add stos jo leave mov add push pop adc leave pop test fs test sub jne xchg call lahf das popl repnz ss iret loop pop fdivrl sbb jl stc add int3 mov in or scas sbb inc pusha mov cli or jne std mov lret decb sub ljmp mov out cli cwtl jecxz mov jnp mov ja pusha xor or jmp sub fnsave call enter mov and dec not add aam clc inc xchg lds cld mov adc or mulb jnp or jo lcall mov outsl out pop cmp and add jb ja (bad) leave add icebp xchg test jle stos (bad) or cmc add lods inc sbb pop stc add or sub push mov (bad) jne xchg push jno shll sarb xchg ficom jns and outsl shll and add adcl add sub ljmp clc (bad) sub shlb push test (bad) xchg mov jmp xchg pushf loop pop fs jmp adc fnstenv jne hlt xor pop aas outsb mov pop jae sti mov add sbbb pushf ja pop daa sbb jge or test (bad) call push lret mov std jmp out shr js lcall test pushf in dec xor ds fisubl mov pop sahf xchg int mov fs fidivl fwait inc lahf xchg imul jmp inc add inc stc add sti mov xlat and cmpsb xchg xchg push inc and fs sarb xchg ficom jns and in cmpsb mov xchg jb cli jge popa jns push add mov cmp lea pushf xchg movsl sub ljmp inc inc dec (bad) or in dec push inc push addr16 xchg out cmpl push sahf (bad) jne add lock jno aad add sub jne repz jle lcall jns sbb xchg popf mov or cmp jns or jo lcall push sub xor (bad) (bad) fisubl mov pop bound or or mov mov mov adc pop mov inc adc scas mov xchg rorb loop leave (bad) cmp mov jnp push into out jo arpl iret add (bad) cltd inc stc xchg icebp (bad) jbe mov je in jg jmp xchg cmp push daa mov cmp sahf addr16 xchg out pop stc xor xor jne dec push inc push mov jae rclb (bad) ja mov (bad) sub cmc stos outsb inc fs mov enter std movsb pop dec leave cmp jae lock arpl or jge les xchg fsubrl jmp fimull xchg jb cli push (bad) mov sahf addr16 push jge std movsb and cmp xchg and push imul arpl xorb jge (bad) pop lcall outsb dec iret push (bad) jb and xchg sub sub movsb xor cmp jae lock adcl clc jmp xchg mov add jmp movsl add sbb cwtl or sahf or xchg mov imul mov cmp addr16 inc repnz pop cwtl and aaa mov dec pusha in and (bad) lcall xchg cmpsl jb in neg push inc imul outsl scas sbbl jecxz pop push ljmp push movsl xchg mov stos pop inc popw hlt lret insb xlat xchg xor push mov outsl mov in stc dec mov into stc or lock lcall push out aam jle sub cmp push sub push pop xor xchg mov xor mov cmc test or mov cld pop lahf xchg xchg mov dec jns dec into cmp mov sub in inc cmp lea pop aaa add in hlt and insl cmpsb sub addr16 mov enter mov jae ja mov or sub out repz dec push jo jmp mov jbe sbb popa aaa out in lcall in mov (bad) test cltd jnp mov and cli xor xor inc jl dec pusha and int and popf loope add adcl in je mov aas mov ficoml pop jns jbe inc ret movsl call sub out pusha in push test cmp cld xchg sbb rolb cs jae ja mov hlt icebp bound jnp jmp cld pop fisubr repnz outsb mov sti adc jl jle data16 iret pushf jmp pop dec inc inc mov or xor mov repnz mov add mov shr push out push and cwtl mov jne addr16 dec push xor mov cld inc (bad) mov ja ja inc lods in and daa push xchg (bad) push jge sahf les imul in mov lds or add inc mov in cmc cwtl add inc je adcl mov inc xor lds push in fadd mov (bad) jae scas aaa sub ss dec gs es or out outsl out pushf call les push jge (bad) jl in addr16 pop cmp call pop ret sub mov (bad) in adc and adc sbb mov cmp testl or sub xor mov xor sub enter sub (bad) mov sbb mov (bad) mov push divl ljmp bound xchg sti or pop dec sub mov adc xchg mov jb test cmc jge insl xchg dec (bad) jb inc sarl out pop cs test fs jp std repnz xor add pop (bad) out aas test cmc jge lret sbb gs sahf jae jmp shrl test adc or add loopne xor push cld or (bad) fdiv jne cli xlat push int inc pop (bad) and hlt add mov bound mov jecxz push and push jne add mov idiv or pop mov out aaa shrb gs gs mov out lock test cmc jge lret push scas sbb pop cs test fs mov jno leave xor dec adc pop cmp sti cmp cmc and cmpsl sbb stc and hlt psubusb lcall add cwtl and xchg push (bad) mov and push pop lods (bad) loop push aam addb out xchg js popa inc adc sub scas inc push push jne mov in clc cwtl or pop repz das rolb in mov dec and xor lods fidivr and add insb andb pop dec inc test rcrb shr inc insl xor mov inc pop (bad) in lods jl cmp mov jne mov in clc cwtl or pop rorl rolb in mov dec cmp and mov xor sub fidivr and add insb andb cmp inc je in imul icebp sti insl xor mov ja xchg out pop cs test fs and aad leave xor dec adc pop sbb cmp cmc and cmpsl sbb stc and hlt psubusb lcall add cwtl and xchg push (bad) mov shrb xchg loope pop lods (bad) jecxz push aam addb out xchg js popa inc adc sub scas inc push push jne mov in clc cwtl or pop sbb jle add dec and xor lods fidivr and add insb andb cmp inc je in (bad) (bad) mul outsb xor mov ja xchg out pop cs test fs and aad leave xor dec adc pop inc sar cmp cmc and stc and hlt lfs or fwait insl xor and xchg sbb mov subl xchg loope pop lods (bad) fcoml repz xor stc and hlt lfs or fwait insl xor and xchg sbb mov cmp test lods (bad) fdivrl xorl and lfs or fwait insl xor and xchg sbb mov inc mov pop lods (bad) fdivrl xorl and lfs or fwait insl xor and xchg sbb mov ja xor loope pop lods (bad) faddl xorl and lfs or fwait insl xor and xchg sbb mov clc outsb imul (bad) xor stc and hlt lfs or fwait insl xor and xchg sbb mov add push pop lods (bad) fdivr mov ja inc push stc and hlt lfs or fwait insl xor and xchg sbb mov xor in xchg loope pop lods (bad) fdivl jbe xor stc and hlt lfs or fwait insl xor and xchg sbb mov mov push pop lods (bad) fcoml loop xorl and lfs or fwait insl xor and xchg sbb mov stos ljmp (bad) fdivl mov ja inc push stc and hlt lfs or fwait insl xor and xchg sbb mov (bad) xor pop lods (bad) fdivl mov ja inc push stc and hlt lfs or fwait insl xor and xchg push (bad) mov int3 mov pop lods (bad) loop push aam addb out xchg js popa inc adc sub scas inc push push jne leave mov jecxz push and add ret in mov mov idiv or pop mov out aaa shrb cmpsb cmp mov ds cmp insl add jb mov (bad) in lods ret push subl jne mov in clc cwtl or pop (bad) aas ret in mov dec and xor lods fidivr and add insb andb pop push inc jae lcall testl sub inc jge sti jmp or add add clc sbb nop sbb mov inc mov mov push pop lods (bad) jp cld xchg fild es mov scas push and (bad) sbb mov push testl or jne xchg out pop cs test fs and xlat repnz xor data16 adcl and push les and xor out mov inc je mov sub add mov out and ss cs inc add mull jb jae gs mov or mulb scas jnp mov (bad) jecxz adc movsb mov dec dec scas arpl lods ljmp mov aas mov jmp adc or cmp into (bad) xor jmp das xchg (bad) mov aas mov inc mov pop call jnp jb es ss int push mov addr16 gs mov ljmp push and adc mov cli punpckldq push dec push sbb add sbb sbb push and imul push or fsubs dec xchg aad push repnz or cs ljmp hlt fldt xor push test and xor popa dec adc daa out sti test or sub mov cmp pop lods (bad) aam xchg jmp mov cmp dec push adc sub jg xor mov in inc stc lds pushl sub test es into xchg sbb or jne adc and in int3 fmuls mov scas (bad) notb out push out jmp arpl insl movsb xor ret push jmp sub cmpsb mov xor sbb test push in clc in call in dec mov xchg jmp jle jne mov jnp push inc gs or ljmp pop dec lahf xchg xchg xchg fwait rol ljmp out sahf into shrb imul fnstenv lahf insb xchg jmp jle jne mov jnp push inc adc add (bad) ljmp mov inc adc imul in ljmp (bad) je sbb or jae jle sbb xchg cld pop inc pop inc sbb mov test sbb and push fildll frstor gs xchg mov mov push xor hlt es pop mov (bad) mov (bad) lret add les push inc pop sti and pop inc in xor test ficom jmp push adc popa push rcrb gs pop xchg or scas clc out mov pop sub sar repnz mov or mov es jne jb dec and pusha jnp xchg xchg jp lret ljmp mov sbb lods stos pop push sbb jae add sub int3 loope mov add enter cmp bound jno mov add mov add cmpsb inc lahf fsubr and jecxz insb or add xor sbb dec insb movsb in and fcmovne lock pop jo imulb inc jns (bad) cmp aad jns or fidiv fisubr stc xchg jmp pop imul adc dec adc jo ljmp jnp flds inc insl sbbl out (bad) incl (bad) mov sahf mov pusha pushf jecxz pop (bad) lcall mov cmp lret sbb cmp fidiv mov lock bound push loop inc mov (bad) (bad) fneni(8087 (bad) mov dec fwait and mul push xor in or pop cs cli push in jmp mov pop mov inc push push mov jne mov in bound gs and test mov or inc mov sahf in arpl gs and mov cmpsb pop dec lret cmp jp cltd and gs push push test jae push mov pop out sub xchg out jmp push daa mov lock js (bad) stos mov push and pusha sbb push inc sti pop jg adc pop repz in cltd in sahf daa cs mov pop jo in adc or sbb xlat test xor cld cmpsb gs push lret mov or add push xchg or (bad) or dec jo sub loopne mov call mov ljmp call sbb add jb mov ljmp inc inc dec inc add ret (bad) push jmp dec pop xor and jmp xor out adc xchg imul mov insl mov xchg jno add fstpl gs ljmp xchg mov aaa ss push xor jo xchg pop add dec push or dec cmc cmpsl lea sbbb and int jp aas pop cmpsl push rol jg lcall dec pop ss pushl mov pmaddwd sub jmp lea or jecxz je cltd sbb or fild jmp sbb push dec rcr mov sahf xor cmp push in ja (bad) and inc mov sub sub out loop push cwtl rcl jbe pop lock sbb and inc sub xlat cltd jne scas mov (bad) dec xchg push ds sbb jae sar or aas add stos outsl out test sub stc xchg fild or xchg xchg mov xlat nop mov pop stc fs (bad) mul ret xchg loop xchg push repnz lea stc xchg mov xor (bad) in test mov rsm jno and loopne pop std out stc sbb jmp fidivr xchg inc data16 lcall sarb and outsb pop aas test sub lea jmp jle jne (bad) add or xor aad aaa inc jl test cmc loopne xor popa inc stos clc dec std adc push and imul xchg into into or (bad) mov imul add pushf push xchg out int3 iret inc mov decl sarl mov stc std add ja or inc add sbbl ja pop addr16 sahf loopne mull and call sti pop test cld jno add jg sub insl add mov push ret xor imull or add hlt mov xor popa inc lods clc dec std adc push and imul or (bad) mov imul add pushf push xchg in int3 leave inc mov decl mov popa or mov stc std add ja or inc add andl ja mov xchg hlt popa enter (bad) mov cld jno add jg sub add mov push aad ss test out lods or add hlt mov xor popa inc scas clc dec std adc push and insl jns push xchg into into or (bad) mov imul add pushf push xchg adc repz mov decl and popa or mov stc std add ja or inc add andl ja mov mov popa enter icebp fidivrl sti pop test cld jno add jg sub adc mov push aam cmp in or add hlt mov xor popa inc mov pop push and data16 sbb xor lcall jno lret mov cmc cwtl add pushf push xchg adc std inc mov decl mov fs mov stc std add ja or inc add andl aad inc ss out xchg mulb and loop fdivrl sti pop test cld jno add jg sub adc mov push int mov out lods or nop sbb adc in in das add orb xchg push (bad) mov pop bound mov jg inc adc and mov adc nop in cmc cwtl add pushf jnp in mov xlat in cmovae nop ret inc scas jb or mov or mov xor add in das add orb xchg sbb mov pop ss jg dec adc and lret xchg in cmc cwtl add lahf and add call pop lods (bad) (bad) dec sarl fldl loope add or jo sti xchg push jmp (bad) repz enter rcr mov push gs push xacquire jnp mov mov mov cmp stos call sbb xrelease dec cwtl les arpl inc test cmc jge nop ret inc scas jb or xlat leave sub in or mov in das add orb xchg push (bad) mov pop bound xchg into jg inc pop add jl and lret clc in cmc cwtl add pushf pop (bad) frstor movsl mov stc std add pop push and jne std push (bad) imul cmpsl mov pop movsb fwait inc xchg pop ss cmpsl enter inc or jl in test cmp movl sub int3 cli mov addr16 mov stc std add pop push and jne std push (bad) hlt out repnz jg cmpsb test ss cmpsl enter push xacquire mov test sahf in or pusha and adc in in das add orb xchg sbb mov pop je mov jg insb cmp jl and lret clc in cmc cwtl add pushf pop lock movsl mov stc std add pop push and icebp mov push (bad) mul scas repnz jg cmpsb xchg ss cmpsl enter push xacquire mov mov or jo xor add in sub adc test xchg mov add push jnp mulb sub cmc mov loope,pn pop jb ds rcr and sbb jne lret clc in jecxz push and test cli pop std (bad) sarl call daa gs inc cld mov out lods repnz jg lods cltd inc xchg pop ss mov push gs push xacquire gs mov test ret mov les add cwtl sub xchg push (bad) mov pop lea add mov mulb and adc push jnp lcall call pushl push cli push gs push xacquire gs mov test ret mov stos les add orb nop sbb mov inc popa sub mov test push jne lret clc in clc cwtl or mov or cmp pusha std (bad) sarl call sub mov in negl enter test jge sti pop mov push xacquire sar sub mov stos les pop in rdtsc sahf or xchg bound cltd into into or (bad) mov jbe (bad) out cmc cwtl add pushf push pusha icebp mov jnp inc add into cmc loop gs mov outsl add jg in sbb and aaa dec jo sub xchg mov lret (bad) cmp push xorl inc orl test lcall shlb xor jae jge and nop cmp xchg aad add jns insb jae in adcl jp dec ss repz movsl cmpsb cmp jae mov pushf pushf cli push test scas pop les arpl push and xchg clc arpl out sbb push fidivrl mov clc sahf mov adc data16 push clc mov jae jns and xchg clc gs out sbb push fidivrl mov clc (bad) mov mov add cmp clc lea shr inc andl pop imul inc lret mov (bad) push pushf aad inc push into repnz mov in inc cwtl add cmpsb pop lock xor cmc lahf cmpsb mov sbb aaa mov push jno jbe xor stos add out faddl ret push repz ss jmp (bad) add adc stc xor add addr16 sbb lods sbb sbb adc add out (bad) cli cmpsb xchg les inc popa mov mul cmp aaa dec add sbb insb fwait dec (bad) mov adc sub (bad) jmp out inc xor add add push gs mov (bad) fucomip sbb addb xchg icebp adc mov push ja jl push out and sbb test repnz into cmp fidivl or adc add iret pop in xchg xchg mov les jmp das xchg push pop (bad) xor repnz pop shld cmp xchg divl fnstcw mov inc inc jge adc adc fstpt in inc frstor in dec pushf jmp mov dec push mov pop pop fcomi xchg cltd xchg int3 lods not ror pop mov ds add or xchg bound out repnz imul inc int jge ss pushf aam lods inc rorb pusha arpl ret or mov daa fmuls or sub jo fstps lea call insb mov add mov sbb adc xor pop pop add mov pop mov rcr sub les mov cltd outsl dec xchg addps and insl mov insl cmp movsb cmp dec inc cmpsb jnp and dec add sbb insb fwait dec (bad) mov adc sub xlat rcll inc xor add pop push (bad) icebp jmp pop and add xor cmp mov call into add mov outsb adc popf mov pop daa inc cs mov push (bad) and stc std xor cmp addr16 scas out push clc in mov push sahf ret xchg mov fdivrl push and test aaa xor shr loopne adcl jge sarb sbbl jnp in jns push fisubl jnp xor xor (bad) decb daa stos push in jne scas xor and xchg sbb hlt clc cmpsl fcos push adc mov cmc cwtl add sbb inc push das add loopne xor es mov pushf fiaddl push mov xor jno cld inc jnp and sbb out outsb and push loopne popa aaa mov into xchg inc xchg repz shll xor mov push in add or push inc mov xchg sub mov push cmp xchg mov cli and lahf call loopne (bad) ss sub loop outsb das xor imul or data16 jmp push dec lods into add aas inc xor ja lds aad and jno push pusha and xor mov dec dec fdivrl mov and xchg aas mov (bad) jae xor jmp fldt ds (bad) insl mov add mov outsl dec bound cmp (bad) movsb orl repz idivl pop (bad) push sub jns pop and adc cmp cwtl sub sub lret out push out inc xor sti mov in mul out orb mov add jp sub movsb cmp gs sub shrb stc push add stos xchg in push stos sbb stc xchg sbb int3 loopne sbb out pop cmpsl and out or rcll push les add les dec les test negl in imul inc inc xor mov mov add push dec js jle repnz add je or mov and cmpsb orb mov xor sti sbb sbb test lahf mov negb neg nop dec insb scas clc dec std sbb or imul jne and imul mov insl dec gs fwait in out pop and jmp test mov outsb mov sub ljmp inc push jmp and push mov mov test add stc int3 divb cmpsb mov xor dec mov xchg adc or cmpsl popf xchg xchg add pushl lcall mov xlat test dec shll sbb mov std enter mov (bad) pop add cmp std sahf xor rcrb xor aas or jns mov push addl gs jo cmp mov in ret loopne mov fs dec add fisubr pushf jbe std dec xorl clc outsl std add ljmp cmp ds ds jmp das jno lcall sbb repnz lret mov pop inc test jge jmp inc cmpsb mov xor cmpsl clc push std lcall ljmp shr mov jge popa in mov je cltd ljmp mov fbld inc js jae lods (bad) cld xor and cwtl pop sbb mov in jecxz arpl push xchg popa dec mov jno lcall push add jecxz pop dec into cmp sbb daa push sti bndstx mov xorb fistl inc inc add add sahf or xchg test inc or out push cwtl sub pop mov cmpb push insl adc pusha out dec clc lcall add repnz lods sub lcall dec dec xor add jp mov daa xchg clc clc out cltd dec mov cmc jge adc mov add mov popa inc inc dec xor jmp addb bnd adc mov add out xor mov loope sahf stc std push out xchg xchg push xor (bad) add cmc call push sub mov mov jge loopne pushf cmp inc jae push lods pop jbe std imul aaa mov mov mov stc div dec gs dec in sbb idiv xchg or out push xor fs jge cmp out pusha rcrl fs mov js mov imul outsb sbb push adc xor jmp inc js push pop or mov mov jnp inc dec ss cld sub (bad) (bad) mov mov jge rorl add pop cmp xchg adc mov int scas addr16 sub push scas (bad) (bad) inc dec and fwait xor cs push pop or out adc cmc push inc lods mov hlt xchg cltd xchg int3 lods not dec jg mov dec pushf jmp mov sbb sub xor jno sub clc jmp fbstp cltd ds shr mov jge (bad) cwtl jo mov pushf daa nop sub xchg inc mov stc cwtl fmull push enter xor add data16 xor jp in cmp cmc stc push mov addr16 insl pusha mov clc sahf mov dec data16 or inc xchg (bad) nop mov add sbb sbb daa mov movsb mov hlt es test mov jge test scas inc xchg jmp push sub sti dec pop inc fisttpll mov in arpl ja jb (bad) cltd pop jae in pop clc pmullw mov icebp divb pop flds xchg inc push jmp dec stos and push jge add xor lret mov mov mov addr16 test mov dec pushf or iret sub mov stc inc push add (bad) mov add call mov mov repz adc dec out (bad) insb cmpl lcall shrl sti or jg mov mov (bad) leave testl jbe je sarl paddd jecxz mov adc loopne aaa xchg xchg jmp mov mov and repz lret lcall mov push ret xchg ljmp jns mov fs movsb cld imul cmp push pusha mov dec dec xor jmp scas jecxz mov out cli push std jmp push jb imul andl adc mov add or dec mov fs movsb cld imul cmp push jmp jg xor pushf cli push xchg aad mov je,pn test xchg push lcall sbb mov jno out icebp jl inc xchg cli (bad) std out rcl jns lcall dec sub lret inc pop xchg inc insb or sbb and cmpsl aas scas mov nop (bad) ret loop adc aad test cmpsb xchg out sub aad pop mov lods jbe xor mov pop push and (bad) mov push inc push jmp xchg push add nop mov aaa insb sbbl (bad) outsl insl xchg in idivl lret jmp inc push mov scas xor and (bad) loop sbb decl dec lods into add icebp jg dec cmp mov adc xchg scas pop jl addr16 inc inc adc jmp cmc scas mov xor xchg jle mov cmp outsl inc push mov cli sub xor (bad) fbstp and xchg (bad) mov in mov repz jge lcall inc jnp jecxz mov sbb scas xchg dec adc hlt int imul into inc jb cld adc in mov push insl ss mov and cld mov movsl mov out xchg stos popa push push dec push or sti xchg out dec push js xchg xor or sbb imull jnp adc enter lock es and fs test xchg movsl cmp dec icebp adc cs pop (bad) add and lock inc iret icebp jl in ret cmp fnstsw and inc data16 push dec mov sub outsb dec icebp scas jno mov sar iret roll xchg jp jp sub (bad) insb xlat cltd daa sbb ds rcl adc loop inc inc iret or jne xchg cmp adc pop shl rclb clc (bad) push pop scas push sbb loopne or fcmovu punpckhdq or call popf mov mov movsb shl ds inc add or in cmp out orb mov mov mov inc not pusha shlb add clc xor ds xchg mov imul std sbb xor fldl pop cli clc jns push stos imul push and aaa push jae aam xor fnstsw aaa cmp in cmc cwtl add pushf and sti mov stos in sbb add pushf popa (bad) jae xchg popa fcomps fcmovne std jne push push xchg stos in loope sbb xchg push lret out mov cmc scas xor enter mov fnstcw icebp out xor push bound clc in cmc cwtl add pushf sbb pop cmpsb cmpsl idiv jecxz jg call adc mov in imul loop cmpl imul movsb stc (bad) icebp inc xchg popa ss mov sub lahf ss cmp inc add imulb push out hlt js pop lahf repnz lods les sbb sahf or xchg adc in shr sbb push mov fisub sbb cmp sti inc push jno in add cmp popa imul jb jbe xchg push push add xor push push lds inc lcall outsb sar and sbb int cmp outsl out data16 xor jne inc xchg add adc xchg dec pusha xor inc xchg lock mov (bad) imul imul repnz jns out mov in rcll inc les enter mov cmc aaa and sbb rcrb cmp add pop dec lods in fadd cmp push jl ja xlat sbb mov ss add repz jmp pushf scas mov xchg insl lcall in or xlat sbbl lret mov pop jnp or and out mov xor add leave test xchg cmpsb lret push xchg in sti into jecxz sub mov push push cli adc cmp in in inc fadds enter in add ror adc divb jne lock addr16 popf hlt mov ja insl int3 ret je negb test mov dec jne (bad) hlt mov adc adc and or test mov pop ret dec in (bad) int pop (bad) fistp mov push lods and ljmp mov in dec mov adc call addr16 mov shl int3 mov lock adc addl loopne aam mov leave flds add jb (bad) jmp xor out stc (bad) or jo adc fwait jae pop mov je cmp ds lods add icebp in (bad) scas push imul fist in xchg jle es sub mov sub es (bad) sbb stos cmpsb or or sub sub (bad) and mov es cmpsl mov aaa mov test cld repnz (bad) inc adc insb sub popa jp out iret les scas (bad) ss sub mov push repnz add scas push adc dec mov mov xor fidivl xchg (bad) repnz pop xchg (bad) sti popa int3 lea and cmp in scas js mov push aaa gs out outsb imul int inc (bad) jge adc jno pop stc sbb in fistl pop leave int3 jns pop xor xchg or or test jge sahf stos into and jle into lds and jp jo aaa ds mov jl mov jae add aas clc mov addps mov push fadds je fcmovbe mov adc mov jne xchg shll aas jno cmpsl sbb pop cmpsl push or add sub jge loope and add xchg mov rcrb int3 jne mov xlat das ret jmp sub mov lods mov or cmpsl xor mov cmp lods jg pop pop pop in mov loopne and cmc inc sahf insl (bad) or pop dec jne mov sbb jb cmp lcall push mov das sbb fs in pop iret cltd add cltd int xor xchg mov mov mov cmp aad push xchg int daa fbstp call cmpsl push add cs ds fwait push arpl subb in addl mov clc adc imul (bad) imul push inc ds in rcl cmpsl fsubrl sub sahf sti jns pop add lahf mov andl call mov push jb daa push daa ljmp repz push mov lods push mov inc inc mov sbb sti adc das dec repnz sahf lock fdivp pushf cvtpi2ps (bad) fwait jge sbb jge (bad) jne into mov mov in testb rorb test and ss (bad) mov in cmp cmp xchg jo mov cmp or cmc push xchg and push mov hlt mov cmc (bad) sahf adc adc xchg or loopne,pn push out rol xchg mov cmpsl xchg sbbl add popf inc out (bad) aaa and das (bad) xor stos dec scas notb dec rcr jno daa imul mov incl mov hlt arpl loopne int3 movsb fwait push or lock and cmp cld mov sbb cltd movsl mov (bad) ljmp xchg sub std and outsb push sti mov fs pop lret jle or in fsubrp in negb ljmp and mov xor adc dec ljmp push imul imul test out mov mov mov iret nop jno mov jbe shrb daa aam lods add cmp add mov shll aas or push xchg scas or test adc in and leave lods push mov pusha aad int mov dec jne cli mov ljmp rol sbb movsl das ret push arpl add add int mov sub adc int push inc js pushf push sbb outsb repnz cmp push rcrb mov (bad) movsb das cmpsb push aad push arpl loope adc pop pop xor xor inc add xor or mov cmpsb dec jle insl xor pop xor notb daa mov mov cmp fmulp mov fsub xchg loopne pushf inc sub mov fdivrs outsl les mov push fiadd sbbl out jmp add dec xchg call jns xchg cltd cmp nop stos cmp fnstsw das loopne mov ljmp push in dec lahf mov (bad) adc jns jl mov push dec pop iret adc sub int3 ss jo insl dec icebp test add pop inc mov lods mov dec iret adc shrb dec shlb push gs pop arpl mulb cmp fmuls bound aas bound jp mov data16 mov cmp arpl xor lds ljmp loope (bad) int mov repz dec lret xchg sarb insb cmp and xchg cmp stc in leave adc sbb pop ljmp pop jns inc insb sbb jbe mov dec add pop ljmp rcrb insb push mov scas and cmp mov xor dec js sar lds add pushf pop bound mov out loop xchg xlat mov xor flds sbb out mov push outsl fistpll mov xor xor sbb loopne cli sub cmc cmpxchg cli xchg xchg mov cmp les rcr sub jns sti jg push xchg rolb pop (bad) jmp inc sub add push push scas loop mov ss jnp xchg in out push (bad) arpl inc jmp ret (bad) sti rcl inc pop and imul jmp inc imul inc in mov lods xlat fstpl pop inc stos mov sbb fsubrs and mov and leave in dec ljmp pop mov inc es cmp inc mov mov or int xchg fisttpll out add add pop pop jae stc jo (bad) xor (bad) negb fstpl or and mov jno mov push sub addr16 push jg mov xor lcall ds inc push test in pop ljmp (bad) or xchg fiaddl dec dec mov rorl addr16 lods scas (bad) dec in imul fstl sub stos dec and rcrl cltd adc dec subb sbbl icebp in jns push jle in add aad adc and movsl out and dec scas lds mov in mov dec lahf (bad) adc insl and cmpsl mov add or mov dec push xchg xchg add mov add (bad) mov lea dec stc xor stos lcall mov (bad) dec test mov movsl ljmp jb inc jns fistpll push aam cmpsb (bad) aad sbb xor (bad) int lcall cmp add pop je pushf fsub int3 inc loope and jbe mov cld push push imul adc mov mov and push (bad) rorb xchg inc data16 je push daa jns cli scas outsl adc push pmaxsw lahf rorb add addr16 sti mov inc int3 xchg sahf int sbbb (bad) sti cltd movsl int3 test xchg xor dec cmp cld adc (bad) leave popf adcb or pop mov push jns jbe mov les aad lcall sbb mov in ret and mov or jle jg dec cwtl or xchg adc or mov jmp mov es add orb movsb jbe push sub rcl out sub and mov rolb sbb inc add cli arpl aaa xchg pop (bad) and jnp lock dec cmpsl or movsl pop add adc ss ss mov pop inc fsubrs sub ds lods adc jg data16 pop sub cwtl inc add in mov mov in pop mov mov stos shlb mov jmp nop lods cwtl (bad) (bad) cltd dec mov addr16 rclb xor shll mov mov pop flds jle sti test rorl les repz jno mov movsl imul scas das hlt int3 mov stos mov ljmp popf cmp test hlt add sub jbe push cs and stos (bad) mov xor mov inc mov sub cli fild pop cli fistpl fiadd mov inc cmp pop jne repnz adc aaa movsl push xchg push mov fistpll xchg in movsb inc in mov jo cmp sbb clc outsb (bad) in enter bound sub imul jmp movsl sbb popf jbe xchg jle push je sar out (bad) push lea xchg xchg mov push sbb imul arpl adc jns lret xchg outsb mov clc and mov and xchg cli leave mov nop mov (bad) repz pop cmp dec xchg das mov push pushf incb out jne mov adc xor xchg jp jbe mov mov push sub and mov sub push sub sti push adc rol je movsl shr inc leave ds lock pusha ss in adc (bad) mulb push lea into xlat or decb fldt dec push jmp xchg push cmpsl mov pop incb add xchg push cltd jnp je dec (bad) lret dec fistpl test stos cmp test cli jnp push dec out (bad) and insb adc adc ret dec aad fidivr sarb data16 pop or (bad) adc mov in test stos pop inc adc lods addl outsb mov xchg ss aaa dec add out pop xlat inc or data16 sbb js pop xchg xor call and cmp mov adc mov insb adc cmp (bad) mov adc jo aad cmc mov popf sbb cmp inc (bad) sbb enter dec dec inc (bad) mov (bad) mov mov call pop imul out push cmp xor dec dec xchg add jg cltd jp lock jecxz sub cmc test dec sti pushf loopne xor in mov xchg movsb adc or pusha jecxz cmp mov sub icebp push and psrld mov popa mov out aad icebp stc lret inc xor and dec jp push addl fwait sbb mull insl movsb (bad) add add push sbb out push repz mov out out (bad) or or push adcl popf push outsb pop mull hlt rcll imul rcrb push test roll push jae sahf in mov dec imul icebp sub and out js push ss nop xor clc jo lret repnz loopne out sub lcall mov pop loop jecxz or sub cmp or xlat scas leave mov in mov mov adc cmp mov sbb pop sbb stos push push push aad cmp xchg xor bnd movsb stos mov xchg addr16 mov fbld ret jne push and (bad) mov (bad) lods (bad) mov inc loop push mov aam push gs sarl movsl add mov ljmp scas mov lods cltd loope and cli add fwait or sbb movl add aam jmp add in add (bad) sub sub (bad) leave mov pop ret mov push cmp or pop jl jg leave mov jno in fwait cmova mov aaa inc mov xor in cwtl ud2 xchg inc cmpsl imul repz cmp cmc sbb std sahf dec inc cmpsl mov dec mov mov pushf pop push or gs xor (bad) pushf mov pop adc movsb leave out sarl pop pop and int3 pop loop push or cmp lea push rcll jb sbb add mov (bad) cmp inc inc mov out push dec dec test push mov adc jg (bad) xor or aam sub out xor and or jno mov push gs push icebp jl leave sbb or xchg test ds fwait sub push mov mov fisttpll mov dec jl in sar stos xor xlat aas mov mov pop jle mov jecxz jl insl sbb movsl pop push cmpl ds add dec sti inc fwait lahf ficom in mov in sub out shrl add inc push add jl and xchg add lods or xchg sub nop dec into cmp (bad) xor xchg cmp hlt arpl mov in inc mov add mov cmp orb and mov loop stc push fstpl (bad) xor push mov dec jne inc bound or int3 xlat mov mov jae pop lods out push xor enter negb incl xorl xor or mov movsb inc fldl xchg sbb scas scas (bad) sti lds out repnz fs ror xrelease mov in adc (bad) dec xchg (bad) aaa xchg mov jecxz fidiv xchg stos scas push pop mov in adc rorb rorl xrelease jnp inc cmpsb sti and sahf (bad) adc jle repnz add xchg xchg lds inc xor inc out and into xor test inc imul xor gs loope adc negl testl cli addb cmp inc jle repnz sti addb pushf or xchg pop push inc jp imul sti addb pushf or xchg mov in cmc cwtl cli inc imul fdivl sub out adc (bad) (bad) mov (bad) mov mov out cmp xchg mov inc add inc cmp icebp (bad) sub adcl cmpsb or mov pop inc dec arpl out or icebp std inc inc mov inc aas sbb dec rolb or jbe adc sub jne sti dec roll inc ljmp repnz jle lods mov aas aas mov jmp inc jmp sbb mov fnop lahf mov or test in dec (bad) lods jo inc push mov pop cmp test inc rorl adc or das fadds adc mov ret test jnp (bad) add jb mov outsl mov inc (bad) dec pop mov sub inc scas inc push out sub cmpsb mov rcll inc in mov jl ret xor jo xor push jl (bad) ds and out clc test xor or mov and push cltd idivl addr16 cmp mov adc xchg or jl data16 inc mov add mov lahf fbld iret inc daa dec fs pop cmp test mov mov outsl (bad) rorl sub ficompl adc sbbb (bad) mov pop inc push mov pop cmp test inc cmpsl dec xor loopne mov rorl push mov vunpckhps in add dec (bad) adc mov dec inc push mov add jecxz dec xchg sbb mov jno push lds adc push aaa test jl inc mov dec inc (bad) mov add sub adc xor pop sbb dec jo popl mov adc cli ds stos xor inc mov dec inc mov popa push inc push dec xor call sub xor fstpt adc out mov test mov inc mov js cmp add mov inc cmc mov insl cltd sbb cmp push addb roll out inc out (bad) jmp (bad) mov mov mov and jle test xchg mov dec xor int ret leave rorl iret (bad) jl lahf mov or mov mov mov mov add inc inc adc push (bad) arpl sbb sbb adc cmp mov cmp icebp xor xor dec shr mov lahf or jge cmpsb mov (bad) pop adc test inc cli lods cmpsl cmp bound add pop inc leave ret out enter dec xor insb adc adc insb ret mov push (bad) mov ja mov popa cltd mov mov pop cmp test mov inc pop sti inc push push shll jg fildl push add repz fistpl leave ret fiaddl cmp enter jnp adc inc pop sti mov ret test cmpsl dec stc mov pop sub or push mov dec jmp jbe mov cmc xchg mov lea cld mov sbb dec inc cmp test fwait push popl and sub dec add sbb jnp test xchg xchg inc int or add lahf mov (bad) in xor stos cwtl iret fwait (bad) out mov ret cs out xchg and das ja lods push ss int and adc out mov jmp xor jecxz adc mov out jns add jnp test push xor popa xchg xor rorl xchg in scas mov inc xchg dec (bad) mov lret dec push mov pop cmp test mov push xor sub into rorl adc pop loop mov daa cmp push adc fiaddl mov xor pop notl testb mov adc jnp icebp mov lahf cmp sti daa addb rcll add sahf or in popa js jle repz negb mov inc jg repnz (bad) stc and xchg push sub cmc data16 jl lock (bad) inc fsts dec mov sub loopne cmp inc movsl cmp sbb pop les es subb inc ds repz fwait pop hlt addb scas adc cwtl mov cmp bound inc cmp ficoml adc sbb imul sub outsb mov es push inc fsts addr16 add cmp push sub stc push jp inc cmc mov std ds mov inc js cmpb pushf sub loope mov pop cld or and jbe fidiv sbb sahf or mov daa mov add inc mov loop cs pop inc cmp icebp cltd mov repnz nop and inc push mov xchg xchg xchg lock fisttpl fimul pop fdivrs xchg xor arpl ds jp or fsubrl mov jne push or andb icebp adc push xor sub in jne inc jne loope rcrl jnp loop jnp outsl inc inc in lret sub sbb ss les out xchg gs movsb inc fsts mov fisttp test outsl inc and pop jno (bad) out xchg inc inc mov enter popa pop mov pop push andb sbb repnz call mov inc jb (bad) adc testl out ja pusha and sbb ss mov out adc xchg pop inc (bad) fs mov fucomp add leave dec mov jnp inc popa and loope pop pusha mov inc inc test popa leave cli ljmp repz int inc xchg inc fwait sub adc dec shr iret cwtl add loop negl push les sbb sbb push mov mov out test inc popf push cmpl mov sbb cmp cmp xor inc in aas loop pop pop mov push sbb aaa lret xchg jns dec lods push repz and dec fstl pop pushl xor dec addr16 or sub sub leave adc cltd int3 lahf cli push ljmp mov out popf jb inc fsts mov mov sbb stc inc add inc inc leave xor inc in push xchg xor aad repnz and out hlt or and ss xor push pop insl xor cmp mov fwait cwtl add stos inc and bswap push adc cltd (bad) mov pop sub pusha add inc scas mov popa dec adc sbb inc add jge mov or loop jp cmp inc in xchg dec arpl subl loope mov push cmc orb sbb enter pop mov cmp rclb stos orb and (bad) jo mov and hlt out mov sahf loopne dec mov cli add mov stc lahf nop add cltd or std jnp inc cmp inc in lahf aas lret ret xchg sub or mov imul jl inc pushw ss add mov adcl sbb inc mov cmp out lahf inc in popf sub and push cwtl mov popf sub cwtl xchg movsb (bad) and imul and push bnd daa push in jecxz push push inc fistpl aam dec std mov popf subb dec shl arpl mov mov cmp jnp lcall enter push xchg xor mov lock popl mov inc and mov xor adc pop adc pop or lahf cmp push mov (bad) cltd xor (bad) das in insb xchg stos xor mov loope adc ja,pt or xlat std je mov fwait loope mov (bad) lret mov icebp leave mov fbstp ret cmp inc cmp sbb out repz es cmovp sub loope fwait xchg mov negl push fdivrl mov inc gs cmpsl out adc js mov add xchg sub mov add mov dec jb movsb inc inc sbb adc lods popf pushf scas cwtl mov cmp push test push aas jmp (bad) add mov dec sbb push (bad) adc cmpsl jae jo sub mov push ljmp cmp into jbe mov and add push into aaa fs in pop add daa out daa or xchg cltd inc les inc test mov fwait mov loopne ljmp pop jge pusha adc mov and shrb dec inc jmp sbb cld inc loopne mov (bad) aas push das daa or decl or popa in inc les sub adc mov aaa roll xchg inc dec pop mov pushf mov mov jno stos xchg dec xor mov or test mov and sub cmp mov ds sub test xor and jg in xor frstor in inc out inc push add jcxz inc cmp xor nop cld and aam test loopne sub mov lods xor (bad) pop test sbb mov repnz xchg in mov iret loope iret leave into scas (bad) xor xchg mov stos cmp add xlat lcall xor cwtl ret mov movd test mov mov xor xlat add mov jnp cmp lods cld mov pop or imul sub js mov mov and imul dec push mov lret inc inc sub out repz jl loop fdivrs stos loopne rorl mov incl xor jp (bad) hlt ss adc (bad) pushf mov mulb je popf xor sub xchg out int3 test (bad) dec sahf push mov inc repz xor sub out jp stc movl ret (bad) lret cltd cmc rcr scas xchg xchg xor test lds ja cmpsb mov jp xor add xchg adc int push push addr16 sub lods add inc test pushf cmpl mov (bad) arpl mov jp mov dec jg xor jb ret scas (bad) jne cltd sbb lahf mov imul adc xor xor cmp cmp adcl inc iret sub test shrb mov sub mov fldl add push mov imul add out daa or mov sbb mov ss in mov (bad) rcll pop mov leave cwtl dec addr16 rclb mov add out mov push mov jecxz lret add pop mov icebp xlat pop stos das dec rorb and adcl in rolb aas mov clc rol inc stc lcall add test sbb sbb mov sub fild outsl jnp cwtl add icebp in sar daa add fs add fucom lret call insb mov push xor sub popf mov sbb sub xchg inc les roll push sahf or cmpsl ds out mov add lahf push sbb inc cmp mov xor mov sbb icebp in sti cmpb adc aas jns arpl mov adc dec sbb mov add (bad) repz jp sub jnp inc scas sub lcall xor cli cld clc push sahf or gs mov add pop push mov mov cmc cwtl (bad) mov aad scas movsl push fyl2x in sti call dec (bad) dec xlat hlt add or das or int js mov pushf xchg cmp sub lods js xchg xorb sub xchg sbb ret aad adc push sahf or adcl mov add addl incl and xor cwtl idivb iret gs and (bad) in lret loopne daa push xchg add jl stc push lret push cmpsb cltd lods sbb imul dec ljmp mov xchg adc xchg xor xchg pop std lcall pusha pop sahf or pop mov fs movsl mov push mov (bad) pop mov cmc cwtl push cmp out gs sbb icebp in dec loopne test pop shl insb add adc scas mov sub sti mov xchg stos sub pop mov mov xor xchg cld das (bad) push add lahf push call out mov in cmc cwtl add pop and mov lock mov mov add mov add lcall negb daa sahf adc js jnp repnz sbb add sub cmpsl inc xor loope add das jnp adc (bad) xor aam pop sahf or (bad) cs in inc mov loope movsb add cwtl or ljmp idivl cmc cwtl push cmp ss pushf mov sbbb js test mov adc ficoml bound add jnp into leave ljmp lods sub adc cmp repz mov xrelease jnp sbb popa aas adc jp pop sahf or cmpsl ds addr16 add js push pop mov adc cmp cwtl cmpsb mov or pop pop jecxz in fistl pop repnz add mov in (bad) cld xor fwait pop adc inc fwait inc scas jmp cmp xchg pop xchg lock addl adc arpl adc or mov xchg leave xlat mov test jmp mov cmc cwtl idivb jae add in lret loopne sbb jecxz shr enter (bad) adc xor scas imul pop adc lret call add addr16 jnp mov inc loope adc pop (bad) xchg (bad) jo adc cmc add cmc cmpsl ds out aaa or mov popa adc add pop sbb adc call xor ljmp inc jnp insl rorl js jnp xlat ret add sub dec sbb push rolb std fidivrl xchg jnp pop or sbb gs or pop jge jmp aaa (bad) stc lds or mov in lock stc xor pop sti mov adc dec xor js jl cmp cmpsl stc mov xor jnp inc mov orl sub lds push add add cmp push js loopne imul sahf or insb je imul js (bad) or push inc jae std add cwtl cmpsb mov mov in icebp in fistl (bad) or adc add gs test mov push inc outsb scas cli out lods sbb mov sub add and scas inc xrelease inc or xchg in movsl das mov and xor add xchg fbstp mov call or cwtl icebp xor sub (bad) add lret loopne (bad) cmp push out pop mov cmp push adc imul mov sub incl add jbe xrelease pop mov out pop cmpsl (bad) jb or adcl fiaddl xor xchg jmp mov cwtl icebp xor lds dec clc icebp in xabort test repnz out test mov out rorl jb cmpsb add js outsb mov fmuls pop mov sub xchg ret push jmp xrelease inc fs outsl or insb inc in sahf or sbbl adc out add xchg es idivl repnz int mov icebp xor (bad) in xabort jbe ret std aaa pop xchg dec mov mov out stos pop das hlt test mov inc outsb mov sarb lds shrb aaa jp or js add push xrelease inc jl (bad) jno adc pop data16 or sbbl mov dec roll xchg es ret out fwait push cmc cwtl icebp xor fisttpl push push in xabort mov std aaa pop jb mov mov out mov das imulb scas js outsb mov aam and (bad) jo fwait lret imul adc bound xchg inc sub xchg test adc sub sahf or xorl dec inc addl loope inc movsb push pop cmc cwtl icebp xor enter (bad) mov clc ss and cmp call out idivl iret repnz mov js imul iret shrb into sub push bound pusha mov xchg pop roll mov je inc mov add stc in rol rol add test (bad) jno cmp mov cmc cwtl icebp xor push xor (bad) lds imul lock (bad) adc mov lcall mov rcl cmpsl push iret movsl or sub or pop add scas pop xrelease inc fadds hlt xchg out shrl sbbl xchg test cmp lea add xchg es inc cli fwait sub std js and cwtl icebp xor movsl dec jne or in xabort xchg into jno daa movsb xchg add adc mov mov outsb mov stos and shll imul mov sbb xchg inc and aad stos adc or orl das add xchg imul hlt mov cmp add icebp in lret loopne clc pop fwait inc inc or test add aaa clc jle outsl adc mov test test mov and fsubrs add aad ret xchg pop mov jbe or lahf xchg mov xchg test mov xchg es jae fild sub cwtl icebp xor fwait pop fs adc in xabort cli push scas dec dec add sahf add repnz mov inc outsb mov (bad) push pop push ret pop mov inc xchg out dec cmp xrelease inc sub (bad) call nop sahf or xorl pop lea add test push ds ret mov cmc cwtl icebp xor gs push icebp in lret loopne repz dec mov mov adc pop decl rorb xchg cmc inc js imul cmp mov loop jnp mov mov xchg pop adc out xchg adc xchg sahf or adcl lret push mov add xchg es mov int3 push mov xor (bad) adcl loopne js xor push pop loopne add mov mov dec xchg or inc imul aaa cmc and sub jge cmp or outsb xrelease pop sar out add sbb test sahf or xchg or mov incb xor or mov cmc cwtl idivb aad sub mov icebp in lret loopne stc lret ss leave imul (bad) out cmp or das dec js outsb mov rcl lcall jnp mov mov xrelease pop lock xchg sahf or mov mov add xchg cs jbe xor inc std pop popf jns cwtl icebp cmp cmpxchg8b shll in (bad) lock ret (bad) inc xorl pushf xchg cltd in in xchg dec sub xrelease cltd popf pusha mov or mov xchg xor or xchg sbb pop in cmc cwtl xorb dec jl pusha aad inc scas mov in jne jbe outsl (bad) fwait mov push in inc add outsl xchg movsl sbb inc xorl mov inc jmp mov mov or xchg add lds sahf or mov or push mov or popf inc dec mov xor dec loopne push mov in jne jbe jmp lock mov mov in dec (bad) aaa or jnp inc xorl mov inc jmp cld mov sub xor sub icebp (bad) dec shlb (bad) je xchg pop test adc add adc jmp xor sahf push inc mov jp cwtl idivb cmpsl fisttpl xlat adc loopne (bad) xchg ret in xor insl jo add push xchg push mov js imul int3 jnp or sub pop nop dec enter lret xchg pop mov cwtl xchg pop push dec sbb (bad) sbb jge daa out xor and mov cmc cwtl idivb mov and mov add pop mov lds cwtl ja jns xor push jo divb inc mov out icebp and push or (bad) (bad) lret xrelease xchg sbb jo push movsb sahf or mov xor clc inc pop imul xchg enter cwtl xchg inc fwait mov sti sub in dec clc pop fdivr push adc pop pusha mov mov sbb mov shr pop add jo hlt mov add jnp inc jge movsl sub fmul bnd xchg adc adc jmp cmpsb sahf or nop add stc jp int xor and inc dec inc iret inc std cwtl jnp in cmc addr16 sahf mov out icebp in jnp mov loopne ja movsl mov xor sti mov sub jb arpl jnp and bound inc outsb jle xchg push mov stos imul andl lock inc pop push or ja xchg cwtl push xor scas test cmpsl cs in fistl add add inc mov ret pop jo imulb inc int call sub pop loop sbb mov inc mov aaa push stos push icebp pop add sahf or mov mov add sbb test stos iret mov mov int cmc cwtl xchg outsl push icebp in jnp faddl mov sub add ljmp in inc (bad) mov mov pusha sahf cmp push add loopne pop pop xchg es xchg scas and jne mov or mov mov add sbb xchg in inc or pop jge and jb ds icebp in jbe dec into jo dec mov mov adc sub sbb int clc js sti mov dec inc sub xchg add test addr16 test xrelease pop cmp in (bad) jp mov cmp jo push enter pop add test lods (bad) mov mov cmc cwtl idivb imul cmp daa pusha call xchg mov add (bad) aaa std sub inc imul cmp push mov mov xor xchg xrelease pop movsl lret ret pop add xor dec push scas mov add test call inc js (bad) lcall stc cmc mov dec inc add or repnz inc fs jl cmp aas ljmp sub inc mov dec popf or xchg cmpl xchg dec inc (bad) pusha xor xchg mov jns add leave movsb inc jecxz add cwtl or xchg fiadd cmp fwait cmc cwtl cmpsb mov dec cmp xor inc icebp in fistl pushf sarl rolb lcall negb subl jnp repnz pop add push sub sbb movzbl xrelease inc dec inc mov adc jmp add sahf mov add test addb and sub cmp fldcw xor sub in lret loopne mov mov mov adc push rcrb repz imul push mov sbb jnp mov fsubr mov into test xchg pop cltd enter adc fnop rcrl dec adc aaa cmp xor cmc mov pop mov cwtl idivb jb pop sbb icebp in lret loopne inc ret dec dec rcl and mov adc push mov test imul ss push iret and dec ja stc cld das lods dec stos xrelease pop and sub lcall or xor mov add test les mov cwtl idivb pop add pushf xor loopne push or push sar fs mov adc push jmp pop aaa xchg imul ss sub sub push jb push stc xlat fwait and and adc xchg aam or or add test movsb hlt pop adc inc enter cmc cwtl idivb sbb pop icebp in lret loopne inc inc jo leave xchg add add push inc es adc lahf js imul aaa jmp xchg sub cmp data16 push lods xrelease pop adc adc jl (bad) sahf or xor mov add test fmull sbb pop mov cwtl idivb sbb pop icebp in lret loopne rcrb ror adc shl mov adc (bad) dec in daa cwtl js imul ss jecxz and inc int insl dec stc mull (bad) scas xrelease pop (bad) inc lcall or cmp add test add pop and lock mov cmp cmp leave nop insl pop icebp in lret loopne mov dec daa mov add mov xchg addr16 jg js imul cmp sub mov outsl add xlat lcall cmc cmp inc xchg and rcr or orl mov add xchg es push movzwl inc jo daa mov cwtl idivb inc or adc loopne (bad) cmc das mov (bad) out lret push ret lret lock orl push inc and jbe and xchg insb pop cld add xchg mov xchg pop test xor sahf or ret lahf iret adc xor cmp inc jle scas mov mov (bad) (bad) cwtl sahf loope icebp in sti call mov bnd pop in outsb ljmp mov inc fwait inc xchg outsb xchg test mov sub mov mov xchg xor or lods fstpl sti push ret fwait (bad) fldenv xor (bad) fwait mov cmc cwtl push xor inc jmp shr sbb xchg cmp mov adc cmc ljmp sbbl inc dec jmp sub lahf test xchg inc mov (bad) dec jnp mov ret xor loopne dec adc lds dec jns imul xor mov pop mov add xor sbb mov loopne mov adc jb lds adc (bad) sbb mov mov stc jmp mov dec ja gs adc jnp jno,pt fcoms clc (bad) je mov dec xchg mov or xor out inc or es mov sbb sti adc cltd pop repz cwtl xor call cmpsl nop sbb jb add xchg xchg js jnp jae adc jbe xor and test or xor enter or (bad) sub call aas wbinvd add cwtl or mov cmc cwtl push cmp movsb lds sti xorb xchg leave dec les repz insb sar mov js jnp cmp pusha out xor aaa shll mov xor xlat enter cmc (bad) fldt (bad) and or xor mov fwait xor push cmp jb jo cmpsl push outsb mov out inc mov cwtl hlt add add xchg aam lret xchg js jnp inc inc nop (bad) lret in xor mov stos adc mov jbe dec pop xor in or (bad) sbb sti dec pop cmp jp or xor mov and cmp test icebp in sti andb jmp inc fadds call inc in lret sub out js jnp mov mov mov sub mov push sub cli sub pop and out or xor cmp addl popf inc pushw addl lods (bad) or negb daa jns sub repnz fucompp lret fadds sbb mov pop popf mov rorb inc mov and add gs and cmp repnz movsb push loope add cwtl or scas mov dec jmp xchg mov cwtl add lahf mov icebp (bad) cmp in sti adc inc arpl dec inc gs add mov out mov in cwtl (bad) insl and push xchg stc imul sub push or jge xor gs lret sub es hlt sahf or mov leave out pop mov push das pop add orl fild mov in lock stc xor fwait fs inc add dec das shll lods fs jl cmp cmpsl stc mov (bad) or sub inc in sbb inc or xrelease gs movsl adc out inc lahf mov sahf or subl mov xor add out outsb mov out cmc cwtl add lods subl xor push inc mov in sti cwtl adc and add cld adc lods test jp repnz ljmp xchg cmpl sahf or subl out dec cltd add lahf push test xor out cmc cwtl add lds cltd mov in lock mov ljmp cld adc sbb lret fs jl cmp jns add cld dec xchg subb repnz ljmp xchg cmpl sahf or subl xor cltd cltd add lahf push test xor out cmc cwtl add lds mov in lock mov insb xchg sbb inc add ret sbb fbld jl cmp jns (bad) pop lret outsb cwtl subb repnz ljmp xchg cmpl sahf or subl int3 adc xor test out cmc cwtl add cs aas mov in lock mov fcomi jecxz inc add ret sbb or fs jl cmp jns lods dec lock xchg mov aas js jnp repnz arpl imul idivb bound aas (bad) adc xrelease imul push jb inc pop mov adcl mov and enter mov repz subl in and inc jmp push lods jo inc fistpl ljmp repnz xchg add dec mov sub mov and push addl jp fcoml xchg or pop sub adc mov add or pop mov (bad) adc in addl jp pop and (bad) cwtl test cmpl mov push stos sub xchg dec fptan out dec fcoml insl sbb jnp popf mov adcl sahf xlat data16 std leave cmp add inc mov dec sbb fcomi adc mov push aad pop sbb movsl xchg pop xor cwtl sbbl das repnz add sub xchg adc repnz (bad) ja pop pushf or inc call cwtl and sbbl mov add sub fwait leave fcomip adc fcomps push imulb push and cmp cwtl lea fidivl icebp xchg mov test mov psrlq or shrb ret int inc inc int3 or or xor sub mov jecxz cmpsb add fiaddl sub lahf leave jecxz out pop jb pop pushf or (bad) xor jnp bound cmp cwtl lret aaa lock movsb ret cmpsl add xlat mov insl or dec inc popa pushf or inc cld mov sbb jl repnz mov int mov enter in add out repnz pop inc jmp addl jnp movl aaa adc aas xchg jg mov aad mov xor gs add hlt repnz xor out loopne jp mov dec cs nop or dec repnz flds xor jnp jnp div out jg lea or dec movsl jnp vmwrite das negb icebp xchg push std test jae jle add sub add jmp aas jbe push jae xor jnp xor negb repnz mov lods scas fiadd xor xor jnp jb cld repnz cmpxchg js or mov mov jb negb repnz rolb scas outsl add sub je (bad) repnz scas mov jp push cmp lods jnp pop add push negl repnz ret mov leave sub jle add adc dec cmp scas jnp or fs negl repnz pop ret xchg les xor jnp jo add out mov addr16 or in in sbbb and arpl xchg outsb rorl movb jb pop int jnp jg add adc or jae mov lret cwtl fidivl push icebp xchg or fisubr add or into cs sbb adc mov addl jp imull cmp xlat pop (bad) popl mov jmp out in xlat sub insb movsb push repnz (bad) mov (bad) addl jnp cmp negb repnz sub xor sub repz out out aaa test inc inc cltd jb and cwtl push out push pop icebp xchg rorb jl cmpl sub insl rorb cld adc or pop (bad) jnp daa jae and cwtl pop insl xchg pop lock mov fcompl sub push out mov repz push cmp inc outsl in and cwtl (bad) jmp lock adc ds aad gs dec or adc in lahf push jmp mov cli add lcall (bad) js and insb das add (bad) icebp in sub bound adc and mov mov inc stos outsl push and das pusha repnz rolb xor gs rorb repnz mov push cmp mov jle negb repnz roll xor inc ret sub insl jle repz lea mov inc jl adc lock in inc gs (bad) sbb add nop aad xor sub pusha inc adc in ss popf push jecxz fidiv sub cwtl xchg push xor cmpl (bad) add sub loop adc in mov addr16 addl jp rclb lock and pop addr16 (bad) mov xor add (bad) test sub fdiv push repnz mov push inc sbb push dec negl repnz cld add scas test in jnp fsubrl sbb out popl (bad) nop or inc cld fsubp je cwtl dec loop outsl repnz mov xchg iret movsb call ds repnz setbe fwait addl jnp das pop xor cwtl add je sub mov fs xor sub enter out pop cmp lret push inc jp clc int jnp cwtl pop movl fild jle out cmp add sub gs out jnp test push jp les pop negb icebp xchg lea dec leave add sbb lock aam repz mov rclb dec scas pop negb repnz pop mov add sub push dec sub out (bad) or movsl addl jnp sti roll lds jl sbbl int3 add sti sub shrb out scas xchg jae pushf or push les cwtl cmp icebp xchg add mov mov outsl adc add sub cmp ss ja xorl in inc pop enter cwtl (bad) mov daa lock les les sbb xor sub mov adc cmp cld out inc ja cli xchg negl lock arpl sbb xor dec xlat or jnp cmp cld adc jge mov arpl inc mov negb repnz mov cmpl mov and out out sub fwait loopne inc lret lcall repnz or push add sti pop fisttp das inc repnz (bad) icebp jp addl jnp push movsl jge cwtl cltd xor sub jle ljmp stc (bad) adc or (bad) push mov data16 jnp (bad) cmp pusha negb repnz push lcall xlat adc gs or adc push movl and arpl cwtl pop mov sahf repnz mov add push and sub cs dec repnz and lret push aam insl repz inc popf frstor cwtl xchg mov mov mov jl inc jne adc xor pusha negl sub test dec repz xchg addl jnp bound mov xor mov hlt fstpt ja adc cmp mov and dec call pop out lret addl jnp dec mov push mov in fdivrl jg inc adc xor xor sub push repnz mulb addl jp mov (bad) cwtl cltd popf movsb icebp xchg mov xchg insl adc xor sub sub loope add addl jnp xchg sbb push cwtl xchg lahf or jle rcll inc sbb sub das push push repz dec imul jnp sub push lcall test dec or add pop je sub lcall lahf rcrb bnd movhps adc test xchg and lret dec dec cmp xor sub and pusha lods rcrl fwait inc mov cli sbbb aas cli or jle aas jo cmp xor sub pushf cld push repnz dec pop fwait rcrb jnp das cwtl dec mov cwtl pop lods scas test or jno cmp xor inc sbb gs mov je jns addl jp les sub pop stos icebp xchg mov lea cmp inc and dec cmpsb lock repnz pop js rcrl jnp ret xchg mov sbb jge jg mov cmp xor xor popf ficompl out arpl addl jp sub ret sbb mov inc stos add jo mov in xchg xor jne jl push inc and lods sbb imul inc and dec xchg enter cmpsb loopne inc inc jns mov xchg addr16 xor adc (bad) jns push inc nop adc adc mov sbb repz sbb pushf xchg lock out mov lret pusha xchg inc mov jge sarb clc add hlt jo clc lock pusha mov sahf inc dec mov or outsl mov add jmp movsb daa add sub lahf or cmpsb jle push dec sub inc mov clc mov subl or rorb imul das mov adc jno out jno mov mov or jns das repnz mov das push (bad) aaa (bad) stc cltd or shll cltd jmp dec in push jp andl mov ljmp xlat movl inc aad arpl stc sbbb ret loopne jmp dec in push push jno mov outsb inc aam aad out in cwtl dec test xchg sub out mov aad mov jg je jmp in dec inc mov stc sbb outsl rcl mov push loopne sbb xor mulb (bad) fistpll fdivl sbb jg test sub adc movsl push fadd stc jg jl mov and arpl dec jbe aaa adc stc cmp int3 in stc orb and clc vpaddq test int3 test dec and mov out mov pop sub pop inc ret test mov scas and loope aas sbb movsl adc out pop movsb and inc inc test mov inc add aas fsubrs test inc clc aad mov jg mov nop adc (bad) cmp ja mov out cli mov das mov stos adc test outsb test (bad) scas outsl mov movsl fwait cmp mov dec mov cmp iret push das or out aad jp mov push and js adc loopne cmp pop out imul aad sub inc fdivs xchg xchg jge xor xor outsl mov test sbb xor (bad) jae and mov aam aaa mov outsb dec popa inc jl mov lcall mov push and and leave mov sti sahf and mov pop xchg sahf cmc fincstp xorl hlt popf mov xor addr16 cmp jge repz inc mov aas add adc or sub lret jae out arpl fs dec lcall mov cltd rcl ja repz pop jns lods inc stos xorb jns cmpsl test adc inc sbbb pop (bad) loopne dec push pop ss out rclb cld jg adc add jmp shrl dec scas sub cmc mov mov (bad) cmc sbb sar mov mov mov (bad) lretw insl arpl fucom push mov mov or (bad) mov or dec lcall mov lcall arpl out es imul lods jg jge imul negb outsb push dec inc dec lds xor nop pop fs ss jecxz dec cmp sbb push aas mov inc or icebp out hlt pusha sub repz cmpsb out push inc aaa addr16 scas ss aam mov aam mov orb inc stc mov pushf in sub pushf mov daa inc mov stc inc xor test repz notl scas (bad) xchg mov lea jbe in and sub inc cwtl aad mov dec out imul das mov adc das jae mov xchg sub notb shrl xlat lea mov std outsb test xchg and xchg out inc xlat pop loopne out pop sbb jne ficomp in ja fiaddl int loopne sbb addl inc mov adc push and xor cmpsl scas mov fs movsl inc pop mov or aad cmp add dec daa push dec dec (bad) arpl mov mov das dec addr16 sub (bad) cwtl mov adc xchg imul push stc cltd lock mov in xchg mov mov jmp js int lea sub sbb inc jmp push fs ja jnp inc sahf inc xchg adc xchg arpl in pop js gs jecxz repz mov xchg (bad) sub mov aaa iret (bad) int3 add jnp sub cmp testl mov popf mov pop mov inc mov lods or sbb nop je stc push jbe pop std mov jg inc std push push js int3 add ret dec sub mov divl lock adc (bad) fmul and nop inc (bad) ja mov test pop mov and (bad) iret pop pusha (bad) cmp pusha scas mov int sbb adc xchg adc dec jno outsl sahf xor rcr inc stos cwtl lock inc sbb pop pop add stc push pop inc push mov inc dec mov or aaa test in cmp cmpsb leave and pusha inc cs sarb fistl leavew (bad) lcall in xchg mov jle cmp adc out in push pop sti repnz sbb and mov mov mov iret mov add mov enter lods flds adcl adc cltd icebp fwait loopne inc sahf push sahf inc cwtl mov xor jge fstpt bound clc test or adc cmc test mov out addr16 inc mov xor cwtl xchg sbb cmpsl mov insb int3 inc js popf mov xor lcall adc popa adc jb in aas adc lock adc mov mov xchg bound std leave (bad) inc or jne lret and cmp loope dec jp cmp or jb dec scas (bad) into mov adc adc sbb arpl push add leave push cld jg add dec popf outsl call cmp (bad) icebp bound and or (bad) cmpsb clc ret in dec inc daa inc mov enter push in mov adc pop sti bnd pop push xor rorb lds or imul pop xchg rcrb nop ja popa xchg and adc dec cmpsl mov fs stc dec addr16 sbb push popf dec mov mov lret dec out and pop (bad) insl inc add mov pushf rcr stc add movsl mov lods jg pop lahf xchg xchg idiv mov inc dec and adc outsb stos sbb sbb into xlat pop jg,pt aaa repz mov shll in lea ljmp mov mov cmc xchg ret iret cmpsb fsubrs mov mov adc fmull mov xor xchg outsl hlt xor loopne mov mov and push dec dec fisubrl xor xchg add add in pop adc push es xchg test ds scas arpl mov sub mov aam pop and dec mov or xchg xchg jecxz pop stos out sbb xchg int3 jge push push popf outsl mov call imul sbb adc test out ret pop out xchg loop or (bad) xchg inc (bad) call aaa push cmp pop push lods mov cltd inc outsl jbe mov adc mov dec fstps ljmp gs and push test lret adc push lea push and dec and sbb pop aam mov imul inc pop ror sahf pusha jp jl cmc mov call mulb jmp sbb inc xor out push xorl adc xchg xor pop (bad) stos pop sbb adc jg and popf adc gs fiadd xchg in popf insl arpl adc cmc push lods addr16 (bad) inc and mov enter xorb xchg (bad) push add pop int3 jb (bad) jmp fmuls mov nop jl pop add pop and sarl aad mov adc (bad) ss loopne in mov inc pop movl dec lods mov sbb aaa out mov xchg imul fldl2t lahf push pop xor arpl and stc dec repz loope icebp arpl xor mov fistpll mov icebp (bad) cmp mov in jbe mov and or sub xchg or sahf fcmovnbe (bad) out xor leave rcrb mov push sbb aaa clc (bad) in push repz mov pop cwtl shr loop pusha hlt dec or (bad) mov ljmp pop movsb add pmuludq and dec mov pop aad dec test dec push scas out movsb sbb mov fistpll lods into mov adcb jmp pop dec ljmp outsl or mov adc cmpsl mov xchg das pop aaa inc jecxz out xchg fisttpl mov xchg arpl cld cmc aad (bad) movsb xchg jb in jl ficompl mov jnp sub fsubrs aaa lds lods es cmpsb xchg int lcall (bad) jo outsb (bad) imulb lods in cli dec stc add lret sbb pop mov inc dec sub xor outsb dec lock roll and movsl mov xor adc or xor or sub jecxz into dec xlat ljmp pop and mov jae jbe inc fistpl adc repnz cmp imulb xor mov or mov cmp jb out fnsave ds cwtd xchg mov adc out cmp push add mov test mov cmp icebp imul (bad) jg push mov out in lret (bad) (bad) (bad) (bad) repz inc enter test mov add mov cmp mov cmpsl loope sahf push mov mov fdivl pop lfs pop arpl in imul jo jle aaa inc rcl lret (bad) dec push jge (bad) mov mov clc (bad) jg aaa xor not mov mov enter dec je ret and mov xchg push and in mov dec das push stos inc (bad) xor xchg loop dec mov pop out pop dec dec jnp fldl mov icebp cmp fmull in xchg inc dec cs sbb int or jg mov dec pop mov or inc lea jno add cmp lods aam dec das enter int3 stos jmp lock ja sub ss pop lea mov mov lret sub inc dec cs mov ja xchg mov sub mov into arpl mov xor xchg fmull movsl mov dec push dec loop mov jne xor movsb popf popl mov into jecxz xchg mov xchg mov cmp sub movsb loop stos lret int mov push xor cmp and pop pop (bad) mov test sub cmp inc or stos sbb fs (bad) call nop mov xchg mov sub cmp or add inc or aaa in stos sbb lods lcall pop loopne fs pop fidivrl inc adc fistp cmp fucom or xor cmpsl mov add jecxz push test outsl outsl addr16 lods shlb dec mov pop adc xchg (bad) push cmp cli loope push stos imul prefetch or icebp inc push inc inc mov xchg incl in (bad) loopne xor sti test mov in mov push mov dec add fs pop add mov push idiv dec add jg iret pusha repnz adc test in repz sti inc inc push jmp adc xchg or mov in std clc mov mov (bad) in lret test stc shll inc push out in out js inc cmpsl inc loope inc add jo cmpsl loopne xor mov or mov adc out dec push push repnz lock jl aad lret dec jne pop pop enter clc inc or sbb fidivl jle in cmp mov divb push pop or inc add imul inc jbe or aaa stos out in test and mov push clc pop cmp int cmp mov out mov std inc mov cmp mov shlb adc stc xchg in inc lock sti inc setbe jns test mov (bad) in sbb int dec out decl test hlt inc dec adc and mov out mov hlt adc push xorb inc cmp xchg rcll fisttpll insl inc fs push cmp sub mov push sbbb orl icebp pop gs mov cwtl (bad) leave ret push hlt mov sti test leave adc and pop dec jo je jnp,pt mov fstpt cmp gs mov int3 adcb sbb adc push loop mov test jns xchg xor cmp inc sub cwtl loope repz push inc pop lret (bad) out and push dec jg sbb push sbb push int adc jle mov push add sbb pusha (bad) jno lret gs jo sti adc cmp shll pop inc testb xchg sbb mov push in sub xor jg (bad) xchg inc ret mov fstps enter mov cli cmp inc adc mov repnz adc lock mov insl mov add pop rorb les add sub mov inc out rorl add and mov loop jne daa and xor cmp fidiv add cmp lea fidivl add cmp (bad) jbe jns (bad) lds cltd and xor lea rol dec dec fwait and xor ret lea add cwtl add orb xchg mov in negl xrelease mov out sbb sti xchg mov in lcall xrelease jnp inc add add addl js jg repz cmc cwtl add sahf or xchg mov in negb xrelease mov in push cwtl add pushf or xchg mov in lcall xrelease mov in push mov (bad) js xchg jnp inc xor pop xor jnp,pn inc outsl mov std cmp dec inc jp jp xchg lret loopne inc mov inc jle jbe stos out out cwtl or dec hlt (bad) xor repnz cmp outsl jbe (bad) dec sbb inc jl mov or add jge or dec sbb inc js sub sbb inc jns sbb mov cmp cmpsb sbb jmp push sub and xor subl mov sub and xor insb fild rclb in mov cmpsb push pop add push in jecxz mov mov popf mov js push xor daa sbb in sbb js push xor mov cmp dec cmpps in inc addl mov or mov int3 inc sbb addr16 add or int3 sbbb test aad push inc cli sub xor mov ret cld es call pop inc adc fadd mov in adc enter test xor adc or or stc pop test mov push or fs sbb roll mov adc fdivl mov cmp pop arpl ds xchg jl push in pop cmpsb inc pop in dec fstps xchg dec xchg sti cmp xor xor (bad) inc mov aaa ret inc stos enter cmp inc loopne mov and daa add or xchg push dec add and mov insl or add mov mov stos fldl (bad) hlt xor pop add mov out sahf inc pushf (bad) call hlt adc pop or pusha xor loopne push call sbb cmc test in sbb lret int fwait adc fld mov xor xlat test insb push or jne les stc push jae or push adcl in or sub aad (bad) das jg fstp das aam mov idiv pop nop in rcll sbb mov cld call dec jno call outsb cld or xor add xchg les mov push xor adc add into stos xor adcl in or sbb movsb mov stos push jmp jmp add mov stos (bad) call sarl movsl jl (bad) loope push inc cli sub sbb pop btc (bad) (bad) mov stc or dec cmp je pop ret mov in mov nop xchg adc fstpl or sbb (bad) stos mov push inc cli sub loop pusha jbe pop aaa in (bad) xchg in pop cmp adc and mov jb adc push popf lods nop xchg adc fstpl or sbb (bad) stos mov sub aad into dec sub pop jecxz mov aad into dec and mov cmp cli test stos or add cltd test dec test or sub push xor mov cmpsl push mov stos in aam mov cmpsb inc bound add std ffree test shrb test clc into dec sbb and aad xor pop scas sahf insl ljmp inc fdivrl cmc hlt lret cmpsb test inc cmp loopne in fimul or ffree cmc ljmp add jmp xchg xchg inc out pop js sbb std cmp mov lret mov cwtl and je fiadd push test fiaddl sti or ret and sbb mov outsb cmp fnsave adc loopne pop push pusha pop jbe lea (bad) repz mov stc shrb mov das imul mov cmc scas stos pop push add repnz aad les mov lea cmp fisttp push (bad) push imul sti inc cmpl jbe mov push (bad) in mov push or ljmp inc outsl das dec test cli rcl das push inc xchg ss in jae pop inc ret inc ffree clc push repnz inc ja fwait lahf xchg jle sub out inc fnsave mov jae cmp les jmp (bad) (bad) cmc dec test out dec cltd test sub mov or into (bad) hlt xor bound mov push xor xchg mov pop ret into data16 mov mov lock arpl pop in sbb pop mov adc repz (bad) xor mov in adc icebp scas xchg jnp or sbb cmp int3 sbb push mov cmc mov es pop icebp add jge adc clc hlt cmp rclb mov arpl and hlt out in adc repz (bad) xor ret cld es out bnd mov loopne scas lods clc push arpl loope,pt movb adcl adc mov in vcvtpd2dq int enter addr16 movsl std pop mov dec xor (bad) lock aad andl mov sub mov ljmp (bad) jg loope mov push pop out push stos mov sub mov adc sbb inc (bad) push movsb das or lahf xor fs (bad) cli inc stc cmp (bad) cmp loopne dec push add adc mov push xor rol inc cld aam int lock repz mov cmc outsl push jo add (bad) sbb sub ret fdivs mov mov popa pop jbe push jge cmp aad add lcall cmp loopne cltd dec xor into jmp icebp scas lret adc sti jne adc cmp rcll in out fildll add cmpsb orb rcr (bad) mov inc cmp movsl imul dec mov pop inc sti xor daa stos add scas ret leave jb mov movsb mov mov ret cli daa rcr into sbb xor scas dec mov ret int3 inc sbb addr16 xchg sub adc mull fdivrl and movsb mov jo mov out mov aas or sbb fimul das movsl in ret (bad) repnz cmp in std inc insb popa xchg fcmovne sbb js es xchg icebp call jmp mov fstps push cli push pop jae sbb lods push cwtl push popa cmp add (bad) scas nop dec pop ljmp push aad adc rorl and gs in (bad) scas nop cmc or ret cld dec bound lret push and mov ficompl jne clc lock shrl int repnz xlat push stos sub mov daa push pop lcall mov dec je repz ret xchg mov inc mov divb ja hlt movb cmp (bad) out jecxz rcll inc push pop or bound sahf xchg mov pop leave sub or aas ljmp sub inc and addl (bad) das cwtl (bad) cmp icebp dec (bad) and rol addl inc pop dec out inc push or mov cmp in (bad) jge cmp sbb add fcompl push cmp bnd xor lods idiv stos xchg inc out jmp add (bad) cltd push adc ret and or shrb fs sbb lock inc jb mov out push es xchg lock mov arpl into stos bound sahf xchg mov call scas mov rorb xchg clc jbe fmulp stos cwtl sarl inc mov das imul dec scas (bad) cmp pop sbb adc cmp lret (bad) jecxz cmp fildll mov aam cli mov xor roll cltd aad (bad) aas jb add push xchg mov in cld inc lods mov adc push pop xchg and inc (bad) and aad xchg adc test sub cmp lret (bad) jecxz cmp fildll mov ficoml push adcl in or or in push test or enter (bad) popa mov (bad) cmc clc scas (bad) stos adc inc (bad) sbb lods inc or mov mov add cmpsb pop test hlt fnstcw addr16 (bad) xor hlt roll sbb pop or sbb mov sbb (bad) int add sbb jbe add stc enter xor cmpsl ds nop sub lret rcrl in mov pop inc outsb pop adc add (bad) imulb pop ret fdivs fcmovbe pop mov (bad) jge into mov inc cli xor out repnz aad les mov lea call movsl lods push arpl mov sbb push leave out (bad) xchg pushf add cmpl in cmp stos or adcl in or sub fbld jmp adc scas mov inc mov das imul pop mov push mov repz mov mov and pop push out sub or or aad les mov subl in adc push add jecxz cmp in addr16 pop fcomp xchg aas push adc in adc and mov insl imul and roll popf fistl in push jge mov mov insl sbb test adc lds xchg cwtl xor push pushf fdivs adc push jae sahf leave inc xchg out (bad) lods push xor mov ljmp mov mov icebp call int3 xor in add dec outsb or xchg lahf mov push outsl addr16 sbb jmp add movsb cmpsl mov adc (bad) aaa loopne scas or leave sar lea push inc xor pop loop adcl (bad) repnz mov add mov div inc popa lock mov cmc imul and loope and sub test pop rcll sbb (bad) jne mov mov mov test sub (bad) lock ret jns les cmpl add mov dec gs leave out (bad) xchg pushf cs mov repnz (bad) cmc pushl orb rol stc inc imul or sbb cmpl hlt and out nop dec push les sbb fildl push mov mov repnz pop addr16 sbb clc insl sbb xchg ljmp push add popa pop orb rol stc inc addr16 movsb (bad) jns (bad) dec mov adc decl jbe out ret dec fwait adc push pop jb in shll push push and stos jg aad mov in cltd push adc adc cmp mov cmp stos sti stos mov add adc out mov add cmp fcmovne mov dec ret int mov xor daa (bad) dec jl (bad) push shrb out push sahf mov sbb shlb (bad) les inc outsl xor sub daa aad mov loope sub sbb xor xchg loopne mov fisubl sbb mov dec test or out ret dec cwtl sbb jne imul in inc cmp inc lcall add subl xchg scas enter mov loopne jno (bad) mov xchg jno pop dec out movsl ret xorl mov inc cmp mov jo add (bad) sbb sub loop xor scas movsl inc and lahf pop in (bad) add mov stos sbb loopne insl push rcrb lret dec or add js popa push movsl std pop mov inc mov mov (bad) cltd push sub rcr add popf mov movsb push add mov icebp dec stc ss iret cmp cmpsl xchg popf faddl shlb adc sbb push lods lock inc xchg push lock shlb int out adc pop flds sbb insb push pushf pop outsl dec mov (bad) int jl mov dec sbb in repnz mov xchg addb sbb lahf push xor adc adc mov iret lea cmp ret jo pop ret fadd leave mov adc (bad) dec add push xchg out dec sahf push sbb (bad) bound mov mov idiv mov adc or out (bad) (bad) push mov add fprem pop cmpsl or push pop sub stc jmp insl rorl jle bound in negl rcrb mov cs movsl (bad) in and cmp push pop xchg sub lret xorb stos and clc cmpsl jmp inc pop push imul sti cs sub sbb rcr inc insl outsb rorb lods mov or sbb pop cmp clc cmpsl jmp push sbb pop gs add jmp or sbb dec ss data16 mov mov and pop xchg mov rolb xor gs mov pop (bad) std fs dec or decb std dec int3 xor fwait sbb cwtl xor inc lods sub out aad xchg lods in pop xor or cld and cli int dec sub sub fstpt movsb and mov pop int leave dec jle or addr16 lret and cs arpl push (bad) out or mov iret lcall pop sbb scas and cli imul pop push addr16 cmpsl adc xchg test (bad) stc cwtl and add sbb fsubrs pop add push push sub jg les mov loope dec (bad) in mov ficom xor xor pop or and inc and pop mov testb leave lock add push dec pop sub out cli and out pusha mov fnop jmp jnp (bad) sbb sbb cmpsl out les out data16 jne stos xchg cld add sahf mov data16 adc (bad) in lcall (bad) dec std inc mov lret xchg lods loope inc arpl enter or xchg insb mov loop cmp shr jno jo xchg mov (bad) sbb lods add rol mov in test rcrb (bad) cltd mov jecxz cld repz cltd divl mov or adc insl gs das sbb sub scas inc cmp fld1 pop sub fstpt fidiv pop add xor or repnz dec cmpb bound sub aad xor inc out insb adc cmpsl into out or dec in mov push add and mov clc cmpsl or pushf sub out jle aam (bad) mov pop xchg repnz dec push in push pop test loope daa mov lcall jno sbb cmpsl in daa add inc cmp mov decl xor sub outsl sbb mov in mov cmc loope imul sbb cmpsl out clc loop mov gs sbb and aas add cmovs cmp or cmp dec fsubr das stc jg icebp push push xor jl fldenv jecxz or mov rcr adc cltd fadd repnz add mov test sub fstpt jle arpl add pop mov mov hlt in mov lods inc cmp add ret fstpt rolb daa ret aad cmc flds jae rcll inc outsl push push pop or jg scas inc push scas lods jle hlt jl fstpt push push pop mov push jno,pt aas pop out pop cltd xor sbb cmpsl jmp dec mov stos push insb shld shrb pop ss data16 mov fmul notl cli inc xor sarb cmpl fisttpl xchg lods out inc pop jmp push adc cmp dec mov inc (bad) notb or push sub cli add push hlt pop data16 inc aad adc into das mov mov sub jmp repnz ds outsl rorl or mov mov and xchg fistl movl pop testb mov and add mov lcall inc add push push daa ss data16 sbb and push jb sarl rcl or fimull aas adc sbb jp jp lret inc cmp and or dec mov dec mov jecxz jae repz xchg shl jmp jmp lret inc icebp pop jb leave or repnz jl and data16 jge cld int and inc inc dec fs mulb adc iret pushf mov adc sti adc push in push xchg aas or data16 adc and lea ret add daa cld adc jno mov mov cmpl ret jge lock inc data16 push stos jno adc out sti jg fisttpll add mulps lcall sub adc push inc jecxz inc data16 xchg jae aaa inc loope add insb sub adc std mov cld ret or dec stos dec das stos xor push push pop pop pusha (bad) push and (bad) decl stos inc insl outsb sbb cmp out mov mov inc into mov add jno pop cli daa inc sbb aaa pusha inc data16 mov loope pop lods sub stos inc ret or roll inc jg (bad) out divb in inc hlt push decb out push mov test es mov aam jns and and lods adc pop pop or (bad) ret or mov sbb adc test dec or sub pop mov pop insb int idivb call cs (bad) in xchg ss enter cmc push sbb mov das sahf cld mov or in (bad) dec fist mov sti inc addr16 xor out adc inc xchg cmpsb push ret data16 scas jbe mov pop add lret mov jno sbb dec inc data16 cltd fdiv and stc xor jno out scas sti inc sbb xchg xchg lods adc sbb adc imul cmp mov add mov mov sbb popa xchg (bad) out lock setns ficomp xor mov pop pop mov or mov mov cmc rol es and dec mov mov repz push jg add in dec cli es aad in ja push push jno ss data16 mov dec daa mov fs wbinvd inc outsb pop dec cs gs out mov lods ss pop mov jecxz adc hlt aaa (bad) testl pop sub fstpt xor mov (bad) dec daa push stos rclb xor push sub stos mov and mov dec push jo adc aad inc or jg in jmp inc movsb mov cmc mov mov sub cmpsb in subb inc jnp shrb pushf adcl mov dec mov icebp (bad) fstl in cmp mov jmp stos cltd add cli sub loop lods or or insb inc insl dec sbb jecxz jecxz dec sub jbe pop sub sub bnd hlt inc pop fs outsb lods jbe lock add inc add fs push jmp aas dec xchg adc xor add repz mov jle lock pop pop mov add mov pushf repnz mov test pop inc jnp out xor push mov sub stc out out movsb js inc je pop pop lret sub xchg or pop scas pop inc jnp aaa addb pushf stos roll push leave int3 scas imul movsl cli cmp xchg pop xchg mov adc pop pop lods mov std (bad) dec cmp pslld and imul lret jle adc inc add loope stc dec jp adc inc jnp in pop mov shr outsb lods iret or lahf shr js addr16 add mov movsl loop leave xlat in jmp mov mul and in sbb dec mov out mov popa adc fidivr sub std inc push mov adc scas fsub and xchg mov inc jnp pop sbb roll scas (bad) mov ficompl in add jmp hlt add ljmp in aad mov inc jnp pop (bad) or or cld cmc xchg fcmovb jle jne cld dec loopne jbe lret insb das insb cmp and and xlat mov in repnz adc pop cmp mov sbb sarl adc pop cmp adc xor cltd add mov in pop mov cwtl push mov dec mov lods push pop stc cs (bad) fdivl ds push jge loop movsb mov pop sub fstpt mov jp mov (bad) aaa sbb cs adc and lds dec xchg mov ficompl xchg mulb add jo or or cltd repz insb adc xor addl stos rcrb lret repz fstpt lds push push dec call xchg pop out pop sbb icebp in xchg cmpsb xchg lahf inc imul fisub or pop out sar sub scas add int3 sbb cwtl shlb int3 cmpsl and popf add scas sub dec jnp ljmp or pop (bad) mov push (bad) in test daa adc jmp in cmp aad fnstcw push daa aam inc in mov xor (bad) adc dec mov lret lods push sbb (bad) lret fisubl inc jl dec add rclb cmp or xor add mov and loopne pop fild cmp push xchg mov fidivrl popa dec add out jmp jns loop cmp aas fsubrl test or imul or lock rcl inc or sub adc cmpsl test flds inc pop inc jnp std push (bad) fst loop adc push xor add add or xor out int3 sbb aam adcb insb mov jnp push loop adc inc xchg push add push pop jmp dec or ljmp loope jbe xchg mov xor out cld jge or and cltd dec pushf cmc arpl subb (bad) jge out jno js jl femms loopne or test add add cmc rclb push and jp gs jbe test inc pop ds inc (bad) lcall or andl scas ffree sbb sub add loop mov inc incl pop gs ret decl xchg dec inc or inc test aas push (bad) push gs add push adc ljmp test add lcall test sti lcall int pop outsl in das loopne sarl lret mov bnd or insl popf mov decl int3 fsubrl pop or sbb std mov lea loope popa gs (bad) adc mov add cwtl lcall mov scas fucomip lret jnp out mul mov xchg mov mov mov in hlt outsb sbb xor in loop mov pop add mov divb dec add mov aad mov ja adc (bad) xchg sarb xchg and insl in jecxz loop sbb adc xor repz xchg dec inc or dec int3 pop inc mov out mov mov ss and xchg aam inc push adc dec jg mov enter mov into ljmp add jb xor hlt popf xchg cld xchg dec fdivrl xor ss or add fisttp dec cmp mov stos jne aaa push sub imul sub xchg add or jns jg test mov mov push push cmp fnstcw or clc pop sub mov js icebp adc sub lcall inc mov incb pop jnp xlat (bad) outsl mov sub xchg push fcomps scas pop push seto (bad) daa jl ret call sub mov sub sbb test aad mov xchg mov (bad) mov add fisttpl sub push xor push (bad) ljmp lods call cmp jmp sub push xchg adc std pop adc adc pop xorps mov mov or sbb addl sub iret adc lods and std dec mov xlat icebp adc out cwtl sub mov pop push add adc xchg adc aaa and mov or sub leave xor inc dec adc nop lods xchg xlat call jg rol or in imul aaa (bad) fistl aaa push sub sbb in pop maxps imul outsl inc addr16 add (bad) dec xor or ret dec movsb cli add (bad) mov adcl xor or out dec rcll hlt in fcompl fs push ret sub adc mov mov xor mov out xchg sbb pop and mov or inc lcall je fbstp cmp fsubrs push not sahf dec in and lret push scas out mov mov inc lcall scas mov sahf push lret inc popa data16 mov neg mov and jnp rol in pop inc pop ret xor and leave push repnz mov xor sub aad mov pop (bad) test lcall mov nop mov jnp add call fmul mov lcall fist (bad) lods push xor sbb xchg mov mov adc jg fstp add (bad) jmp subl or mov aaa leave mov cmpsb sbb xorb ss movl mov jl dec je xchg ljmp or or out dec (bad) mov mov pushw pop push (bad) or pop cli cmp adc or or rol stos xlat or stc and jmp test lods push icebp inc into adc or pop jnp dec (bad) cld hlt or lcall sbb jmp (bad) in mov pop push leave mov stc hlt push mov mov stos (bad) leave mov push insl lods xor nop aaa jnp fisttpl xor dec dec cwtl bound cmp mov (bad) sub and add jae dec xlat cli pushf mov inc lcall iret loope pop jo stc lods sti sub dec andb out mov int testb sub frstor movsb icebp mov (bad) push mov aaa jnp inc cmc inc mov inc pop lock aad sbb xor mov leave mov lcall sbb cmp sub inc push adc or jmp mov pop popa leave xchg mov je fs sub (bad) dec mov adc sbb lcall inc dec test shl (bad) or inc (bad) mov pop add push mov popl mov ret (bad) jl add cs jmp and pop cmp icebp mov inc out mov xor test daa jp cmpsl or lret ss jl or and nop jae mov aad neg imul divb je loop push dec lds or insb nop aam inc sub enter adc mov and push cld loop xor cmp xor sub movsb adc testl sbb loopne xchg jbe and in dec xor icebp xlat jmp fs rcr or fcomip cmp inc push adc sbb sub and loopne cmp incb add shl fwait cmp insl idiv aas ja mov out cld jge pop pop test push pusha cwtl popa dec jne ret cmp dec mov aam mov and push mov adc xor push sbb das pop pusha adc inc sbb push sub sti add cmpsl negb or movsl mov hlt mov sbb mov adc sub or aas insl minps add notb sub lock cmp mov ret shrl std jae push dec lahf fisttp mov out push lock mov jmp jp jl call jl cwtl sbb pop aad pop inc jnp push adc push mov js push pop data16 fnop fadds adc or ret insb std add movsl loop (bad) fdivr push fwait in out lock mull mov pop and add jmp cmpsl bound clc in sbb pop cld mov je enter in lock out dec push jmp inc sbb inc loop adc sbb repnz (bad) out into dec lds inc jnp cmc pop mov sbb push (bad) loope and out push cld dec ret insb std xor lds add lods adc dec gs mov js inc dec add jecxz push or inc vptestnmd mov jne enter cmc cmp orb je mov stc fstl std mov inc jnp pop cmp cld in lods pop das (bad) mov sbb loop fnstsw std dec loopne mov add dec push pop fbld mov aaa mov repz jbe inc xor jmp test mov cmp in lock testb or ljmp push sti pop cwtl fldcw imul (bad) push push xchg lods popf pusha add (bad) hlt notl roll leave mov dec ret insb std jns xchg frstor icebp jo adc jne cmc sbb stos inc dec add cmc fstl (bad) fbld call xchg xor nopl pop fstpl xor xor inc xchg mov fidivl out jmp sbb inc test lret (bad) push mov xor in lock sarb adc push push add dec pop std enter or leave out arpl loopne xchg xor pop lock in lock enter ret adc xor das xor popa mov dec (bad) aad pop inc jnp daa add or insl das movsl pop sub mov sub in popa jne jecxz lret loopne into dec push fs pop inc jnp jmp jnp and push fwait mov in inc sbb inc movsl pushf ror js mov mov imul lods mov ficompl nop in es or dec imul cmp jecxz mov dec ret insb std pop testl int3 or into arpl xchg adc mov dec add mov cs adc inc mov jle iret pop cmc fcomip jbe and mov jno insl xorb pavgw jno add out adc (bad) jmp push out sti stos xchg mov jmp in lock ret cmc adc pusha sahf icebp jno mov cmpsl testb lret lahf inc pop inc jnp push pop (bad) push push push cmp or jmp or ret insb std or add mov iret sbb or sahf lods and or push sahf out mov into pushf pop in daa data16 sbb and enter icebp dec inc push cmc int add pusha push dec inc and xchg aas das inc pop inc jnp out (bad) in test adc sahf cld es iret mov insb std cmpsb loop xor xor cli cmp sub sub mov add idivl mov cmpsl adc mov cmpsb push in pop sbb mov enter push ss push incb repz mov add xchg xchg push bound push fisubl push inc cmp mov mov out aaa mov dec popf xor sbb mov sbb mov jge add fcoms outsb adc xchg and stos and lock or lock jmp adc int3 sbb pop inc mov adc enter adc cmp mov push sahf fmuls (bad) dec es fs add add mov mov sbb push and and sbb cli mov mov push add mov rcll test test (bad) xor dec mov sar incb js fwait lcall out sbbl jne mov sbb pop dec add aaa push mov dec mov inc push add mov cmp jo push in bound into sbb int3 imul stos inc jge ljmp mov xchg lea sub jnp add inc add std inc std sub pop cmc outsb jge loopne mov fwait cld fldt push lds sbb pminsw jge xor lds ficoml clc cmpsl stc sub ljmp in inc sbb xlat sub out mov sbb lock int js xor jge sbb cmpsl adc pop inc mov push (bad) jne sbb cs pop pop or dec push repz pop or iret lahf outsl pop sub push push cmp clc cmpsl add sub std adc add mov add pusha dec ss data16 scas js loop je push or jnp inc add mov in clc xchg lods out jno es xor loop stc sbb (bad) out sub xor fstl (bad) nop addr16 push outsl push outsl stos data16 pop in (bad) cmp testb jp xor repnz (bad) push scas mov push push insl test inc data16 mov cmp sub add int3 pop insl adc mov lret (bad) sbb mov and (bad) in jmp pop andb inc data16 fdivp sbb leave adc fst inc fcmovb mov stos jecxz xchg lods ss call jge cld out aad lock push push rolb dec adc fistpl or ds icebp ds dec lret pop jb or add xchg clc cmpsl cmc inc nop ljmp adc aaa xchg iret ret popf in imul sbb add jmp mov (bad) aaa sbb cmpsl cld and and stc leave aad push pop dec jbe sbb insb in push movsb dec ss data16 push or sahf fsubrs loope or pop xor mov mov mov jbe push add jge jnp flds sub dec inc data16 mov dec mov pop aaa adc xor xchg lods cmc das jg fisubrl mov ret out xor or aas add mov out lahf in cmp stc les fnop adc fsubl into dec jo mov pop fisubr push loope idivb adc pop loopne sub fstpt adc dec sbb stos xor ret bound ficom pop sbb ret rolb dec pop test sbb test stos movsl push or push add add mov (bad) xor (bad) sbb testb xor stos jo outsb sbb icebp dec lret pop and sub ss data16 adc fdivs push data16 (bad) in mov in pop sbb sub popa mov sub xchg cmp decb mov jo pop dec cmp dec mov scas clc xchg lods call and ss sub sbb xchg (bad) sub inc add inc int inc and pop dec pop xlat scas adc enter mov daa push inc lret ljmp dec adc add ds sub lods (bad) xor inc adc not shr aas jmp inc mov in int3 fcoml dec mov jle push fldcw fstpt fcompl mov outsl mov add mov adc into xchg fistl repnz int sbb or dec std jmp xchg out shll lock xchg clc cmpsl stc loop cmp mov add mov inc jno inc inc out pop adc ss data16 and lock leave repnz out sbbl or ret pop add xlat jle dec stc mov jl pushf add jg push pop lret mov adc data16 scas shrl mov mov loopne and and pop jae dec sub fstpt repnz add xor nop sbb pop dec enter cmpsl or ret dec call inc cmp and je ss data16 and cmp loop push add xchg lods or pop add in in mov dec xchg push loope dec add es fstpt sarb out (bad) into adc cmp sbb movsl push arpl out sbb cmpsl add xchg push pop jp into pusha mov out pop sub pop lret insl (bad) dec ss data16 adc fiaddl movsl dec fstps inc add dec add aam xchg lods adc mov imul idivl roll xor movsb inc sbb sub fstpt aas mov loop ljmp mov sub sbb sbb cmpsl cmc pop push (bad) clc insl dec sarl aad lret push sbb push cmp mov cmpsb mov cmc rcr insb dec out loope or mov outsl add ficom push shrb sbb mull xor lods add mov xchg jmp fcoms mov inc sbb jne cmp push test cmp cmpsl pop cmp sbb cmp mov add jnp ss data16 adc push hlt or stc into pop dec inc int sbb lret cli fmuls xchg lods add xchg int adc out cmp inc and push fisubrl pop sub fstpt xchg sbb pop mov leave cmp shlb mov xchg clc cmpsl or mov or or mov stos movsb iret jg cmp dec daa ss data16 (bad) xor daa aad loop (bad) fs repnz lcall pop mov call jbe lds cmp mov int3 dec sub fstpt (bad) sbb inc adc add fimul cmpsl out mov add inc pop push push jae scas push loop sbb mov pop ss data16 das mov ljmp mov jno aas mov xchg lods in push cmpsb lds (bad) icebp loop out xchg mov mov fistpl or cmp into (bad) cmc lock mov mov pop pop mov outsl andb push loope and mov xor call fidivl mov in push or lea inc jb outsl adc call call fmul (bad) fidiv and (bad) in shrl sbb mov in (bad) repnz xlat lea movsb cmp inc add in in stos shl popf lahf jl addr16 (bad) jmp or iret fnop jg push mov or daa icebp pop insb enter cmpsl or lea sbb jg pop jmp int pop inc and incb (bad) icebp mov mov pop xchg rorb movsl clc xchg lods lock out lret vminpd out mov ljmp aam sbb sub jg hlt lcall jg xchg sub adc push scas std adc mov andl or mov sbb push cs sub fwait mov rcrb jle xor xor fs sub adc mov rorl out mov pusha into scas adc push popa sub mov xchg jae out fadds scas loop imul lods test aas xchg dec out sti ljmp sbb out inc sbb cmp dec xor or xchg sahf movsl add std push jp js ret decl (bad) sarl xchg stc jmp dec leave sbb jbe jl (bad) (bad) fs push push jbe popf push add pop xchg in push lods xchg xor add mov pop xchg mov push mov orl adc jmp insb adc push pusha pop inc mov sub or ss mov out add test xchg mov push and aaa mov jns mov insl jae das pop (bad) xchg xchg inc push orb fs and sti xor mov inc or jmp rcrl (bad) cmp rcrb mov adc popl ss cmp mov mov mov stc sbb (bad) pop mov icebp or cmp push out sti test push js fiadd les outsb sbb lahf fst div data16 test loopne lcall lcall hlt mov adc scas pop and mov subb in repnz mov cmp cmpsb xchg sar push and pushf test cmpsb xor aaa cmp add push lock mov cmp push test movsb cli push and jns data16 cltd out int3 and notl outsb mov push mov into decb inc in mov pushf pop add (bad) (bad) sbb xchg notb pop lea stc loope rcrb hlt pop bound sbb (bad) xor loope pusha mov sahf (bad) pop stos jp jl sti mulb xor andb data16 cmpsb (bad) push (bad) pop dec sub fisubr sub lds push inc (bad) mov push mov xor cld (bad) jg inc jmp mov out adc push ds jnp inc pop dec sub push clc ljmp jne mov mov out pop out fsubrs inc dec mov jo push xchg sti dec inc dec cmp aaa jnp jb jecxz enter test mov mov push dec test pop inc dec pop push add sahf jmp jg dec jno cmp adc xor or cltd jmp cmp mov cmp stos sbb clc push stos xor fs jnp enter ret ljmp sbb test aad aas mov cmp inc push in push jae (bad) mov out sti cmp and iret mov clc aad sub in out mov out in sub jns xchg (bad) and enter std aam insl or arpl mov or add (bad) xor jg enter fucom cmp stos movsb test inc lods fsub (bad) xor leave mov mov pop add cmp inc mov xor inc inc push or sub incl fdivrs js adc (bad) scas and dec (bad) mov sub xlat insl or push call jmp sub pushf int3 dec mov in sbb pop dec pop fidivrl inc aad mov add sub pop in dec add jge sbb nop aaa jnp push loop push push pop or bound fisubrl (bad) xlat mov pusha mov jnp and dec cmp inc stos out xchg lahf gs lds mov ret incl lret movsl inc cmp in xchg in pop movsl push hlt pop jae or mov xchg push lds pop or pop mov mov aaa jnp dec out sbb cld or cmp cmp fwait push push loop jge testb push pop in jbe add adc xor or faddl lods shr jge dec ljmp mov mov jg add stos int (bad) jno fs dec push add mov push jb dec jnp mov popa add adc les sub pusha mov stos les repnz lock adc push cmc mov and and arpl jmp push scas jecxz (bad) xchg repnz mov insb cmp test rep add xchg xchg daa cli lods push or xlat nop adc adc inc fucomi mov sub lret pusha mov cmp pop call sub jmp (bad) es dec data16 test sbb adc nop inc sub in or adc mov mov cmp icebp cmpsl (bad) pop mov pop jle dec pop cmp scas sti adc jo push out leave pop insl jb jne sub mov jno or mov lahf pop into cld icebp movsb popf xchg jmp xchg mov lret sbb call inc jecxz and int3 sbb push pusha mov stos xchg dec mov push test arpl mov stos mov and xor arpl mov test pusha mov dec fcmovnu add push je int3 loopne inc add push sbb loopne fcomp mov mov xchg mov add mov inc bound repz cmp into (bad) dec sbb outsl adc test clc mov pop fcoms ret lret jg sub or or pusha mov inc xor adc clc cli (bad) ljmp das lahf mov hlt or lds pop inc rcrb cltd fsubl ljmp mov in movsl pop orps daa iret or xchg push jg test loopne hlt xchg add test jno adc scas pusha mov cwtl mov xor cmpsl xor adc mov add jbe ljmp mov sti aaa push jecxz lret pusha mov stos mov imul adc pop and sbb sub (bad) js cld (bad) dec push bound jae,pt push in int pop leave cmp inc rcr movsl fcompl ret add mov xchg inc fwait cmp (bad) stc mov sub ss dec add pop jg mov xchg add lahf or insl adc stos loop dec lcall subb xor testl or dec fcomps and xor push je pop jne xor ret decl test jg in add popf dec xchg ljmp movsl test and pop inc inc mov inc or notb (bad) sbb sbb jb pushf sti push add lods xchg inc popf jge cmc inc pop rol and testb cwtl mov (bad) dec outsl dec add ljmp lret cld das jmp push out (bad) cmc mov sbb jnp sbb in ror add loopne scas gs in mov sub sbb ret imul mov lods shl mov movsl repnz icebp daa add dec mov in add mov mov add loope add mov movsb mov cwtl push loope psubusw sub outsb or cli push cmp aad sbb in jmp cmpsb inc mov jmp adc int3 sub pop xor or mov gs int js in fs mov dec adc push shll mov (bad) xor push or sbbl fsubrp pop or inc and stos aas push mov (bad) fucomip gs sti loopne dec inc inc mov (bad) loopne data16 push into dec push clc jmp mov mov sbb pusha ss in hlt xor fdivrs mov or (bad) fstpt push add add (bad) fdivs mov cli adc adc nop call push pop pop arpl ret inc (bad) sub mov lahf cmpsl cmp lret sub inc mov pop int js cmp lock adc out loopne pop test cli cld int3 aad mov cmpsb sub loope push movsb mov push lcall add jnp sbb loopne jmp cmp xor mov out mov and icebp int3 xchg cmc cmp and leave dec pop fsubs xchg fwait and or jge fs lret call mov or mov ret mov lret loopne xchg bnd mov das mov aaa jnp dec add adc into (bad) xor sub jns ja dec xchg push pop push (bad) or mov xor jecxz movsl xchg or sarl adc loopne mov ficoml mov loopne cmp push stc int3 fcoms xchg test cld sti call lea aaa popa mov ret out or dec jno test aad mov mov adc push and and sti add push in rcrb push push xor cmpsl gs hlt mov cmp jmp sub stc push push jp adc add es loopne cmp clc pusha or daa sbb dec popf and pop mov add push push stos xchg repnz int (bad) div jg ret decl mov rcll cmp repnz sbb scas mov in mov push inc sbbb xchg jmp sbb sub dec cmc dec iret in add shlb repnz or dec pop cmpsb pop pop xlat std out adc lock jnp cmp dec or mov sub xor push sbb ljmp stc xor jo mov jg imul xor movsb dec divl jns aam test out cwtl or stos es jg sarb lods push es xchg push aad test cmp adc pop cmc mov enter xor (bad) mov dec cmp or inc jge cmpsb adc fistpl xchg movsb sarl cli xchg mov mov adc mov add mov pop into xor ret pushl movsb int mov das insb dec std dec je xchg mov adc xchg ss in adc cmp dec jo mov and xor fbstp or jecxz rol shll dec or jmp scas gs cmp mov outsl mov fsubrp add cmc movq mov jl inc push sbb fiadd fwait or pop adc mov sbb inc (bad) frstor cmp and sti sqrtps aad mov cmp in sbb sbb and dec (bad) stos adc popf fsubl (bad) loope xchg jle cmpsb adc mov aas daa leave adc aad rolb cmp roll in push jnp adc inc push ret aad sti sbb bound mov aaa jnp jp cmp xchg call adc adc push add cmp fidivl out mov add dec mov pop repnz push jnp mov out lahf inc cltd inc sub inc lcall cmp mov cmc dec enter jbe jb notb pop pusha jge aam fist out ja sub in and aam mov aas sub cmpsl and inc dec xchg in out add mov mov lret out xor scas ljmp and inc lcall add and and clc loope lahf mov or mov mov repz addl jmp or cs lcall mov xchg fidivrl fcmovb or jb mov add cmpsb enter push rcrl icebp lret inc pop loope (bad) jmp ret pushl or loope out shll jle xchg and adc mov pusha pop fbld loopne inc or sbbl mov cmp dec sbb or leave rcll xor test aad mov jge cld cli mulb cmp inc add add add or inc lods clc mov insl js lea pop inc mov movsl pop xchg adc push adc mov jnp push push adc sub fldt cs xor js cmpsb mov mov fwait sarl cli mov cmp inc stc test inc sub ret jmp add ror cli scas xchg idiv add out imull and mov dec loop fcoms int3 push das sub scas lock dec mov pop lods clc inc les dec sarl mov mov push popf mov lret movsl push mov inc lcall push inc sbb add jmp aam add fmuls push mov sbb scas add inc daa fcmovnbe in mov stos sbb cmp or movsl movsl aam jmp dec push mov les nop lcall push (bad) or fistp addl sbb mov int mov inc rolb iret aad jge add lcall mov xabort fstpl push push and std mov and stc lds fsts inc mov enter or int notb clc lcall stos mov mov mov mov arpl pushl inc pop add dec jo lcall jle or mov loop cmp loope daa pop pop pop or aaa sub std cmc cmp rcrb push and cli int3 pusha sbb cmp mov jnp dec not cmp aas mov push xchg dec inc pop xor les or add add clc jmp ljmp sub (bad) fnstcw push push dec dec cmp repnz mov int3 inc pop pop int fdivl ret (bad) jge repz adc xlat in and xchg lcall jmp call or add sti xchg stc push dec lcall loope and or (bad) loop inc jbe lret or mov mov and addr16 ss or add pop sub jg mov push fistpll in mov or test or inc mov inc (bad) out daa sbb aaa jnp dec repz mov imul pushl (bad) sub js leave mov test push dec fbstp fcomi jo insb fdivrs mov sub call fcompl push mov add loope rcl daa add jg dec cmp out sub test les dec jae inc push dec sub mov lahf add sahf inc sbb lods js in cli xchg repz mov aam stos lods (bad) mov bound dec inc fistp subl out ds sbb idiv cmc mov loopne mov inc cs lods push add adc add das inc mov sub inc pop imul mov out push lret xor mov mov lret repnz sbb iret add mov cmp adc (bad) fist in dec mov fbld jns mov lcall les inc xor pop push mov (bad) push mov es sbb fldcw or icebp pop pop outsb les xchg sbb xor cld lret hlt jae pop sbb mov xchg xor pop mov cmpsl (bad) xor mov jno cli or ret decl pop fstpt es mov pop gs mov jl jl loopne sbb xor pinsrw stc pop jmp aaa add add push cmpsl loopne pop add rclb (bad) and xor cmpsl push jo (bad) and fadds lds fdivrs or incl (bad) push scas int3 stos mov pop ja sbb ftst out cli mov jo mov pop mov das push pop add xor lods sbbl ret decl in ret adc movsl loop xor std pop dec push sub out mov adc mov cmp movsl outsl outsl sti push call cmc dec add push ds dec jle push mov sbb push cs and adc mov mov adc lods aaa jnp insl cmp int3 jns rcll cmp sbb lret popaw repnz in dec push sbb (bad) fld adc (bad) jle leave xchg cmpsb xor ret call repz je mov or cmp rcrl ja mov push and es idivb ret jmp int3 test ret mov pop xchg lock xchg sub sahf cmp pop out mov mov xor dec repnz pop fmul adc dec pushf fsubs jg xchg cmp shll mov cmp scas add pop scas push repnz inc sub loopne (bad) and or jnp or (bad) lret out sub jns aas mov mov mov outsl pop ret das orl ret or dec sbb pop hlt roll dec sbb inc xchg mov jnp push hlt xchg in sub enter test test fnstcw mov stos test in mov dec jns cmpb arpl add jmp inc movsb fxch cld and pusha mov xchg push or adc (bad) lcall inc cld aas push pop inc lcall push push mov adc loop dec inc divl pop es dec loop lods leave ret insl jns in jo pop fcompl pusha lds push pop (bad) xor aam add mov push (bad) test int divl popf out sbbl push cmpsb jg xchg or ret call sbb popf je fnstcw adc pop mov mov mov xor subl das xchg sbb mov sub pop add and push add jmp dec aaa dec out cmp xor jmp stos sub rorl jae cmc aas sub inc in rorl movsl or push pop and adc fist pop outsb adc repnz mov scas push jmp adc mov repnz xor test scas inc pop push sbb in sti negb push ret pop push cmp aaa mov iret jae push test mov ljmp loop add jnp or fistp fisubl mull lret fmul dec inc cltd aaa js (bad) imul popa sbb rorl cli fwait ljmp jg loop loope pop ljmp pop push nop outsb mov fnsave mov sub out loope in in push stos cmp xchg sbb push or sti pop or lock jge in xor mov stos fs push dec add sbb cmp in in add lcall jb ja lcall dec jl sub mov pop sub (bad) or fimull bound xor lods sbb aad cmpsl mov mov mov dec leave mov fucomp mov jge push xchg and sbb ja mov aaa jnp push repnz adc (bad) mov adcl mov mov dec adc cltd std rorb adc inc pop fisubrl mov icebp imul xchg push push in pop adc xor mov sbb jecxz adc or pop fadd dec scas int3 jmp inc lcall jae scas lods cmpsl rcr add mov push pop mov push ret hlt lret (bad) sbb xor jmp jge (bad) call data16 sti notl lock push dec pop fdivs aad mov jo in dec jno push mov cwtl out out add sub jnp push loop sbb fstps pop dec push adc cmp mov out xchg (bad) dec push out (bad) push mov mov mov jnp or in clc neg popa fidiv lods xor pusha mov lods mov or cmp icebp xor stc mov pop inc lcall mull push or inc or add fcomps or add mov inc push movsl sub lds mov xchg decb js dec out add fdivl add xchg push xlat ret xor cwtl in aaa sti xchg mov nop lcall inc add push je fwait add nop push sbb and mov shrl (bad) bound scas mov out fnstcw imul into mov in adc mov inc mov outsl jno mov or in insb adc roll push bound vpmaddwd inc pop enter inc mov xchg cmp xor jne mov cmp xor jne mov dec pop lcall out test adc nop aaa jnp push in into stc sbb mov mov sbb xor mov xor bound xchg loope out xchg mov jae pop push and push scas mov xchg adc dec daa sub add dec cmc pusha mov cmp repnz scas aad inc mov mov imul xlat pusha inc adc lcall lret imul lds xchg jle mov and cmp cmc or repnz cmp fnsave inc jae je loop aam shrl outsb and or mov inc xchg dec jle push outsl cmpsb add dec aad test push inc cmp mov inc insl push inc sbb adc xor mov add out push and jbe pop lock ljmp cli mov (bad) ss cmp sarb push clc loop mov aaa leave mov xchg ljmp xor lds ss sub incl icebp add push nop jns rcrb cmpsb ss mov mov jp or cmp cld lret or mov jg ret incl into and push and daa std out mov and cld mov loope add push pop mul pop dec dec rcl cli in call push test add adc sub ret add or jmp aad mov push dec cli leave dec or inc popa in fwait ret fisttpll push mov clc mov in sti lock dec cmp cmp sub call mov shr (bad) cmp cmc pop (bad) adc push and add add pop dec add push in test fiaddl and pusha mov jno push sub xor or xor push lcall (bad) cmc mov gs xchg icebp out out xchg xchg push mov ljmp test lods imul lcall stc xor xor loop loop ljmp aad mov mov loop aad aas add cmp fcompl inc (bad) xor dec insb fnsave jmp push xchg sbb push ds mov addl mov inc fs mov je add sbb mov decb push (bad) inc sbb aad (bad) mov divl push rcrl ljmp adc or icebp add lds jno roll add loop add pusha mov pushf pop and mov sbb insl pop clc sti ss insl popa add pop inc lcall and adc icebp sbb lahf sbb imul mov or sub cwtl jge,pt idivl sti cmp lock mov dec pop sub fld sbb pop jge out dec xor sub imull dec imul mov lret jg xor pop cmp xor test mov out mov loop dec adc negl movsl pop and push stos jb fwait and inc inc or daa jmp lret (bad) or pop cld rolb leave mov mov sbb cmpsl xor out sti in push in notb cmp jnp push xor idivb sbb pusha jo cmp add stos adc sub mov bound adc jp shlb add pop mov sub (bad) pop inc lcall dec jnp and je jmp fisubrl pop dec push leave mov and adc faddp inc cmpsb push dec pop dec aas and (bad) cmovnp aaa jnp add xchg sbb mov ret pop sbb pop fnstcw cmp in int add mov enter ret call shrl leave rcl push into loope adc xor movsl mov push mov inc cmp cwtl jg insb les jle cmp lods add loope arpl repnz mov sbb cmp pop push push or icebp sub aaa jnp or fld cmpsl leave cmp ret mov psubd (bad) mov loope leave pop push pop imul xlat bnd outsb daa scas adc fidivr inc lcall outsb inc push lahf outsb loop (bad) in (bad) dec mov daa (bad) mov aad mov xchg into enter mov jecxz cld add mov jge mov or or inc call (bad) (bad) mov loopne sub inc jp push mov insl rorl jmp sti mov aaa jnp jbe test (bad) loope cmpsb mov jns test imul mov shlb fstpl or fs push mov and sub (bad) mov jns mov mov sub xor mov add pop cmc add pop inc push pushw (bad) xor inc inc and jnp pop jecxz jmp or lea es jmp or sbb out cli (bad) in mov insb (bad) push ret jg lret mov push stos push dec sbb aaa out out mov cld les clc loopne imul mov dec dec sbb pop dec pop jns or repnz jne add mov and insl je mov add push ja sbb push mov iret js mov mov fisttpll xchg mov int3 popf (bad) xor and inc aad mov xchg rorb xlat syscall jge adc cmp xchg xchg mov jnp pop call mov inc xor pop fdivr lret (bad) add mov adc inc ljmp pop dec data16 (bad) rcrl mov xor enter mov mov add mov and jge hlt or or push xchg in enter fimul rcl stos xor test dec inc or inc insl add in xor mov in mov je stos inc jge hlt or or and mov mov jnp pop cmp sub fcoml mov push xor in out inc add stc jnp mov in and ss daa add jg inc or inc js loop fs push into adc cmp out or mov jns (bad) xchg sti pop cmp pop imul gs adc lods adc das loop out sub and pusha mov jo enter add iret sub outsb cmpsl imul mov leave mov decl movsl aad push push fnop gs or mov loop mov adc rol in test (bad) mov cli fmull push inc movsb add jnp aaa jnp (bad) aam std pop pushf or add mov sbb into push fnstcw push sbb out mov aad push fs dec loope lods (bad) leave mov inc lcall xor lock clc lock out lods cmp aad mov mov and push or sahf push arpl or dec add jg inc sbb enter mov ficomp ss adc mov mov adc jmp push cltd xchg inc lret adc sub popf adc or (bad) sarl dec xor jb pop mov je mov lock mov shrb rcr jae in adc out in xchg popf xchg dec outsl ss inc add jnp loopne push or fsub popf push test repnz mov loop or mov out in ljmp nop aaa jnp pop inc pop and aaa add push cmpsl cmc (bad) call cmp mov dec add inc jl cltd in sbb lock scas lds and jo in push pminub outsl fxtract (bad) xor jmp cmc push inc ja cltd jmp adc jl out pushf mov aaa sub mov adc xchg inc jo mov pop inc cld dec pop and out mov mov loopne inc es int3 mov or insb push mov ret and xor sbb lret mov out pop orl dec xor ja lcall mov jp xchg fwait lock inc lcall dec bound inc add mov rcrl mov pop aad mov mov mov lock in les push scas iret sub jecxz leave lds mov xchg sbbl or stos rcrl loopne out mov rcr add cmp or inc aad mov mov mov add stos repnz dec jnp aaa jnp inc pop int enter mov jmp mov mov pop fnstcw push movl mov ss pop or and inc lcall test insl fwait sbb call xor out pop xor push cmp add ficoml sar (bad) leave fmuls les (bad) lcall inc in jg push dec inc out push cmc pop fwait hlt sbb push add ss pop sbb sahf rol sbb sbb out arpl pop and pop xor das int3 enter mov aaa mov pop test mov cli or push sbb jnp aaa jnp pop fisubl int3 popa sub inc mov mov mov dec imul aaa stos pushf fdivp outsl adc inc and sbb lock decl mov jmp xchg fcoml int test dec mov push xchg std test mov loopne dec mov ljmp pusha mov sub rorb jo sbb or inc test jp dec add leave mov mov or outsl or push adc mov push dec jae (bad) push dec mov adc add mov inc push insl pop mov lds xor inc insb and (bad) jl fisubr inc lcall pusha pop daa sub lahf clc pop sbb cmp mov adc mov (bad) mov inc and sbb decb cltd das mov jb sbb lods push adc inc and stos push jno adc mov dec xor repnz add pop out ret push loope (bad) mov mov mov (bad) jnp sub dec sbb stos mov inc cmc xchg in jno mov add mov cmp lret scas inc shld xlat sbb adc jne and pop push xor shr (bad) shll mov lds lock (bad) xchg adc fnstcw xchg fwait jg clc lods sbb repnz out in arpl add ret lcall adc and push jg xor out and jecxz mov in pop push (bad) mov outsl inc cld inc aad push add in jp fistl outsl dec jnp aaa jnp pop cmc mov sub mov xor and psadbw pop in add mov stos xor sarb add push jns movsl adc lcall ds and out cmpsb fcmovnb mov ja (bad) mov mov cmp loope popa outsl mov in inc push sbb aaa jnp dec pop cmp xlat int stos adc mov mov xor cmp mov add test cmp int3 repz push lods std int shrl lcall jae,pn xchg xor pop aas mov sarb mov and xchg lret out enter scas jmp movsb cmc push adc and xchg and mov or or stos cmovo cmp add push push int3 xor out mov sbb push adc xor enter mov vpunpcklqdq mov inc lcall jb dec inc (bad) xor sbb sarb push aam mov les sbb jp ljmp int3 ljmp out cs adc jnp inc in inc hlt cmc mov sub cwtl test in ljmp mov xchg loope dec sub std cmpsl mov shld sbb sub decl mov mov imul or mov sarb fildll ret adc test xchg notb adc imul and (bad) or dec (bad) in mov stc sbb cmc add mov cmp dec push aas lret iret add xor icebp ret scas movsl in xchg adc imul test inc push jg fadd stc inc mov push (bad) mov push in jmp inc bound or jne je test (bad) repnz xchg cmpsl outsl push xchg jecxz out push inc jge pop or mov fcom cmp ret xor dec sahf imul mov pop sub push out call mov aaa jnp or out and incl das fnstsw ja int sbb cmp stos pop ret int stos (bad) fbld pushf mov add mov pop cmp mov (bad) es inc pop dec outsb ret testb xor mov stos cmpsb push loopne int3 mov push push add jmpw das out stc inc dec cmp sbb repnz in mov sbb outsb test test add pop jae sti fsubrs outsb mov dec jnp push sbb (bad) aam ss stos push pop dec ds loopne adc sbb (bad) (bad) mov adc adc push loop mov push ds xor or test lcall out outsb iret pusha mov dec js sahf jle enter sarb dec push mov fs pushf adc jbe add push xor sub mov int decl cmp mov repz jo test pop mov sahf and jb jno xor out push dec aaa sub mov mov mov xor aam xor mov pop (bad) fimull rolb xor jb inc sar cmp add adc (bad) pop ds incl add repz out add call (bad) mov loopne jmp daa pushw cmp mov or adc cld fbld mov rolb das andb cmp out add test dec dec jg fdivp cld imul push repz out hlt call pop cs dec push cmpsl sti inc jbe pop inc jbe fild adc jae sbb push movsl add lods aaa jnp pop dec adc pop inc xchg sbb jns arpl (bad) mov icebp xor pusha mov insb pop mov stc push jg and jmp out and mov inc lcall xor sub sbb jne push add xchg mov mov shl in lock pushf lahf push sbb ss pop loope push insb lcall loope mov enter push mov aam leave mov push lret aas or dec xor cltd pop pop pop sar add outsb and jnp aaa jnp jbe mov stos cmp cmp aas pop jl (bad) dec push xor out leave mov pop jp push push xchg std into mov inc lcall push popa push push stos leave hlt and movb sub outsb xchg outsb fdivl push jb add cmp lret xlat adc lcall repnz pop jnp or aaa sub push rcr mov mov mov dec test out mov adc ds add jnp aaa jnp fs data16 ljmp inc rcrb mov inc mov mov dec add cmpsl ljmp aad sub test jmp dec inc and mov xchg rcll sub pusha mov test mov cmc lods add pop add test cwtl adc or cmp xchg ljmp cs ret lock addl push lcall std sub ret ljmp mov dec xor cmp addr16 (bad) mov test fisttpll insb jbe hlt movsl sahf lret (bad) scas popf mov mov lret cs pop sbb mov dec push add das cmp adc adcl rolb daa insl jo mov addr16 in add rol (bad) or sti push mov mov les in inc fsubrp bound ljmp dec or xchg aaa jnp insl movl cmpsl cmp outsl movsl imul (bad) mov add clc push adc add mov lahf cs mov adc dec inc ljmp adc fadds or dec imul psubusb cli push cmpsb xor mov daa mov sub lcall xor mov loopne xchg int3 mov xchg cmp aas dec leave mov or cmp jp cmpsl fwait in mov iret gs push jne lcall push pop stos popf mov cmp loopne push pop xchg out popf xor lock out or sub mov aaa jnp insl inc dec and adc jp dec mov push cmpsl (bad) fnstcw (bad) sub and cmc mov push push stos mov inc push lods nop pushf inc hlt mov or inc lret pusha mov jbe pop cmp mov cmp das ret movsl outsl push lods loope inc lcall jle sbb or or cmp (bad) xchg or (bad) sub pop nop and cmp adc add loop dec lcall cli inc test ret mov inc inc cltd sbb out mov xchg leave mov jnp in xor sub iret xor mov mov push inc inc lds xor push enter andl lret test aad mov add jecxz outsb and or xchg (bad) mov cmpsb les into cmp cmpsb jecxz shr mov cmp xor jp call call insl jmp cmpsl aaa sbb daa xchg xor xor sti int3 inc push movsb mul aad mov js adc dec daa inc fdivrs out cmc sub mov sti xchg pop cmc dec mov xor inc (bad) repz dec loop cmp or dec mov jecxz sub (bad) in sbb rolb outsb mov (bad) xor sub inc data16 ss mov cmp lret and jmp sar adc or add cmc push mov std stc jecxz outsb adc sti fnstsw mov cmp rolb or pusha pusha add (bad) pop xchg leave jbe fndisi(8087 negb add ja stc loop insb cli cmpsl scas insb add out aad mov lret out mov pop pop pop add repz gs insl jb dec aaa fwait int3 shr and sbb fs xchg mov xor aad mov dec ss loop shrb sub inc dec out loopne sub jg (bad) ljmp mov insb mov loop xor ds dec jb call call ds pop push and in enter dec adc fdivl aad mov pop mov out push cmp fild cmpsb stos fldenv push xchg lahf jnp pusha push sbb stos and cld sub xchg jmp inc int3 aad mov and push inc mov jmp loopne ljmp xchg cmpsb xlat pop ss jb lods imul cmp jmp aaa dec push mov inc mov cs std sbbl dec add das pop mov out aam push push insb enter cld xor pop jo and idivl lret push lret mov dec pusha jno repz sti mov inc mov sbb outsb (bad) addr16 call aad mov repz xchg adc sbb sbb rclb cmc popf xor in stc or push mov inc ljmp pop push mov pop add dec inc insb inc (bad) or xchg aad sahf mov sti pop push sub test aad mov mov rcll mov stos ljmp rcrl pop adc cmc fistpl sub dec jae shl mov cmp std and lods nop fwait and push xchg stos insb aam sbb imul mov stos (bad) clc adc sub sbb aad mov lods push out lret nop ror nop (bad) out jbe (bad) mov adc sahf mov inc sbb and jge loopne mov loop cmp rcrl mov js jne vpsubw dec rcrb movsl lods jo lret or in push mov adc int3 aad mov or and adc add in pop push jp repz incl sahf adc mov aad mov in enter pop dec mov mov mov jp test fidivrl push add sbb repz mov pop push jecxz push insl pop mov sbb cmc pop push dec push and fidivl (bad) adc gs mov bnd out aad mov mov and sbb call adc inc mov aaa jnp imul (bad) adc fwait sub notb seto in adc sub out mov and cli sub movsl imul dec mov incb in cmc or into add xchg jo pop push addr16 push data16 test xchg lods idiv cmp aas dec sbb adc les loopne imul sub mov jno xor lcall jmp add pop sti inc inc lcall xchg arpl inc sarb sarl pushf mov pop jle sbb iret pop ss fdivrs push popa add sbb pop cwtl imul mov movsl adc sahf inc jl push sbb pop int xchg mov lds js enter mov les fsubrs adc inc aad mov inc jo sub xorl mov jp movsl inc call ror cltd push cmc lods xor pop insl (bad) aad mov js imul imul mov (bad) insl adc push add mov jns cmp popf add push dec addr16 loop cmp lds call sbb inc call ret add lods data16 repz fucomp xor (bad) or xchg int3 aad mov jbe cli sbb sbb and push into adc or call or mov jnp out sbb loop cmp aam and mov add fnsave xchg push cmp (bad) out test mov jle sti lods cld scas (bad) (bad) aad mov pcmpeqb push fimul sbb stc sarb popa mov sub sub add and inc dec rcl cmp and iret or sbb and adc es jo or xor lods mov aam cli repnz jo jg mov lea mov or stc dec pop stos dec stos add pop lods daa out lret outsb gs in adc aaa or inc xlat or aad mov pop outsb sbb out ss (bad) xor icebp lret pop inc jle or dec inc addr16 inc push adc mov cmp ds pop inc addr16 xchg int3 rclb addr16 xor cmp in movsb cld mov push dec or push sbb loop add add out aad mov cmpsl fwait sbb and jns adc lcall ds adcl pusha push outsb sbb aaa push stos in aad mov clc sbb aas sub adc lods fs dec mov aaa jnp dec inc xor mov mov scas lret mov fcoml sete incb mov mov sub jmp or mov imul sbb subl out clc push inc push fidivl outsl xor bound mov add movsb aaa jnp jge popf push out div mov es mov sub sub cld (bad) addr16 xchg lcall mov aaa jnp fist sub or mov mov adc cli push pop mov lret xor adc ja inc mov push loop aaa jnp or lcall adc mov scas jno icebp dec mov mov push xor add inc dec cmp jnp imul out imul add insb repnz mov icebp adc xchg cmp dec pop push sbb mov cld lock clc sub or hlt repz cmp or jmp xor outsl sub and dec xchg daa pop scas dec fisub rcll test ja mov sahf xchg jnp jb lcall out xor push pop pextrw push dec inc mov mov and insb in or movsl gs pop cmc stc sbb in cmp aaa jns aaa jnp dec push xor stc jmp loop lahf and and scas cmp ss mov aam jle cmpsl dec inc add fidivrl pop inc pusha aaa outsb xchg jnp or jae (bad) xor push add push test loope ret into jnp in sub jg push in push fs and jg hlt fcoms add mov jbe jb pop aam shlb dec adc (bad) in lds add lock inc pop xor mov mov pop jecxz lock sahf mov pop (bad) loopne dec pop cmpsl mov xchg inc xorl jg stc mov es push push addr16 mov aam ret sbb fwait dec add mov mov or in and hlt lret mov push ja sub incl pop sbb and push inc pop ficompl std fmul mov mov in inc jl sbb and icebp addl ret (bad) jp das mov mov add xor mov adc jge fnstenv test fist pop faddl sbb pop mov ret decl (bad) lods inc aaa or out nop lret push lahf shlb adc ds cmp push out icebp push je cmp pop push jo mov data16 aaa (bad) sar jnp dec lods add stos inc arpl insb sbb ljmp mov scas jg (bad) out lcall pusha pop cmp xchg in out or or dec sub popa inc pop out and cmp add iret sub (bad) lcall rorl pushf or xor push jo mov lcall xor popa movsl jbe loop sbb add jb mov cmp sub xchg insb cmpsl push adc cmp aad cmp xchg adc insb jp aad (bad) sub inc cld pop popa xchg and nop aaa jnp jnp lcall (bad) incl js sub inc adc dec cmpsb ja cmpsl sub sub das mov push imul lret jg imul sbb in orb out mov (bad) mov fmul lret imul mov iret add jae setne lock and pop jg inc std stos xor pop inc add sti movsb xor push stos jl jecxz mov dec sbb aaa jnp jo jmp cmp hlt xor (bad) adc xor dec mov push push mov fimul sub lods aaa jnp gs lret cs jnp daa clc mov mov adc into xchg icebp std adc adc or sbb aaa jnp or call ss push add adc lock mov cmpsl test (bad) sub xor mov test (bad) mov sbb mov or cmp in adc mov dec or push pop sub add mov add cmp pushf and mov mov mov adc pusha mov jg push mov pop js in enter mov dec xchg fildll decl jmp mov rorl repz out mov mov or insl dec data16 and push mov sbb fisttpll cltd nop adc dec int3 mov cs cmp aam xor ja rolb pop test clc out xor mov dec sbb aaa jnp push inc js inc out mov int jae je push pusha leave mov mov mov jg dec push jnp fmuls gs jl fnstsw gs mov mov out out sub push jmp xor pop jmp inc mov aaa jnp inc pop sub and leave pop push arpl sbb daa leave mov test jae xchg fildl push aam movsl mov mov dec repnz out jg jmp dec pop push insl or incb pusha mov insb inc or out fcomps pop xchg adc pop aas and lcall lods (bad) stc fdivs push insl test movsl leave sub bound leave mov push sti fs xor push or adc (bad) dec movsl jmp mov xor and pop cmp mov pop jp xor out mov test add test xor add sbb add test inc or mov add xor mov push cmpsl lods mov in aaa fnstcw imull and popf cmp scas pop enter lcall jae mov out add or add mov adc mov push clc movsb jbe,pn mov mov jo (bad) xor mov shll cmp cmp aad mov xchg cmp fistl add dec inc out adc aad clc dec shl push dec jae (bad) clc loopne daa inc mov mov fmuls pop popa jns fcom cmp or xor mov fs mov (bad) jnp popa bound jnp insb rorb aaa imul das mov hlt aas fnstcw pop xor arpl cmp addr16 js aaa repz and into dec adc inc push rcll or hlt pop inc or add mov pop lret scas cmp out sub ret negb in nop aaa jnp jo in loop push add movsb sub adc push xchg adc mov sbb pop jge lods rolb sbb sbb xchg (bad) xor pop inc lcall jbe pop pop jb repz stc xor (bad) aad mov sti insl iret sub lods xchg out cmc mov pop and aaa jnp dec push xor in in decl push pop inc js sbb hlt les mov repnz test aad ret cld and js fiadd decl or mov ds sbb lock dec sub ljmp mov fidivrl in mov push fwait pop mov mov ret call or push push jno test leave shll test int pop inc mov xchg mov push and (bad) cmpsl mov push pusha lcall xchg xchg movsb push xlat and in pop push (bad) inc mov in pop stc loop jno and out outsl push adc adc ja adc cmp sub xor mov test adc push push add mov and nop push into and cmpsb cmc sahf test bound mov imul test pop xchg cmp sti lea inc adc jnp (bad) mov pop mov pop or test cmp outsl daa (bad) out and dec xor hlt push scas (bad) in jecxz pop pop enter cmc xor aad mov imul ja fmulp sub gs mov push loopne ds fidivr hlt push jb fistpl cmc sbb dec push out or mov lock ret push (bad) dec mov mov mov inc lcall pop adcb lret (bad) ret xchg cs out mov xor xor add ja test (bad) out cmc and jg (bad) test push cmp sbb arpl cmc daa and (bad) mov dec pop inc jle jge loop leave sbb popf pop aad shll jle pushf adc or pop xor mov pop ds arpl ds mov in push test sbb pop adc pop sbb xor mov aaa aas xor mov inc sbb call mov xchg push cmp jae sub lea (bad) ds mov sub incl and mov jb (bad) in inc (bad) xor (bad) jb mov cmp and rolb adc dec data16 mov jge fbld mov outsl ljmp in out cld lds mov pusha adc jno pop sbb xor sbb push ret (bad) jnp sub jg ja (bad) or mov sbb mov mov and arpl aam and inc xor lcall xlat cmc mov dec push sbb sbb (bad) adc dec inc push (bad) mov fild scas fcmovnu or test mov inc addl arpl adc jg (bad) pop fnstenv and adc rol xor pusha mov nop inc add jle jmp lds ret sub inc mov stc xor repz aas sbb mov insb hlt add repz pusha mov movsl push pop js xor icebp add mov jb jae xor int3 dec adc or push insb pop add mov pop mov sub push in fs mov or sub (bad) push or mov inc cmp iret lahf cmc jge je mov (bad) adc fstl mov add sqrtps add mov add jmp mov inc ds mov ret decl add out (bad) fistpll and dec cmpsl icebp pop jg leave mov jmp inc stos sub icebp ret pop jb dec sbb push mov and outsl aaa fs iret sbb cmpl sar push inc repnz mov test mov clc xchg stos dec push mulb test mov mov ret lcall lock pop and cmp (bad) scas nop cltd test push mov and sub (bad) fild dec push je stc cld mov ret ljmp adc and (bad) movsl fistpll pop fisttp rcrl sbb mov lods into cwtl cli cmp shrl pop aam cld add cld sub xchg mov aaa jnp imul push andnps outsl mov xor mov xchg arpl mov test pop test dec mov add aaa jnp pop inc push and lcall pop je addr16 pop imul mov mov dec sbb xchg (bad) cli enter shl inc iret cmp cs or ret call lds inc sbb je cmpsl loopne sub add cs mov mov ds adc jns (bad) icebp sub inc inc jmp repnz hlt inc sbb dec repnz mov or and add jle fldenv add jnp jp ljmp (bad) add into xorl sbb cmp pop mov call lret pop dec xor jnp dec dec adc ds sub icebp mov sbb lock xor or push cmpsb mov and insb in (bad) aaa jnp inc pop sbb cmp fcmove jmp in add mov dec adcl push pop push daa lods xor inc pusha lods popf out in repnz inc jge out aaa jnp jae jecxz rdtscp jl and in jo cmp stc test xchg cmp flds adc cmc mov and push or jo adc leave jg js fiaddl dec test int in es (bad) (bad) mov add xchg movsl inc stc lahf pop icebp pop popa sbb sbb outsl dec std scas sbb test (bad) out aas out iret cmp scas pusha mov lods mov int3 adc lret xor roll gs add sbb sbb sub (bad) mov mov insb pop stos in sub push call lret and in mov enter aaa shl push scas cli in out loop jmp mov mov sbb xor or ja pop adc aas lea pop dec xor cwtl fdivrs jg jle int3 ds pusha mov jl out (bad) jmp (bad) fnstcw outsl cmpl (bad) xchg repnz jmp and out gs imul ds test es inc cs push stc mov push mov or sti rolb out mov jnp in adc loopne mov dec (bad) cmc pop mov into push movsb in daa jp or inc inc sub insb lods rcrb les mov mov pop fs mov jmp push in loop pop mov xor cmp in adc push jmp dec inc xor push cli repnz loop leave les push cmp sub movb imull xchg in dec mov cmc call pcmpeqw lea leave mov inc pusha aad xchg out (bad) pop or mov add rcr scas push push and lcall cmp jmp pop leave push or enter adc das adc sub xchg and mov js mov push sub cmp out cwtl adc jns js inc out icebp test outsl jecxz aad xor scas adc jg inc dec aaa or or sbb jnp mov push jecxz adc cmp push daa js push cmpsl push dec jnp inc cmc pushf aas cmp (bad) or outsl push pmulhw stos test cmp leave jno sub iret insb insb adc or sbb jae fidivr adc das testl out call or push js in mov popa pop fisub gs adc jae inc mov or lods dec mov fnstsw mov repz mov sbb sub cltd jns flds push and rol add dec imul push push xchg cmp nop int3 imulb cmpsb rcll mov ret loope pop sahf hlt test and cmp dec lds out cmc jge mov fcom inc sahf int (bad) adc inc sub xchg adc pop push sbb test inc or test leave lahf in pop dec in popf repnz sbb stos leave scas arpl mov mov in dec jnp push mov (bad) xor cmp std enter and jecxz ret stc ja (bad) jne sbb data16 xor rcrl lock xchg mov out xchg adc inc fs sbb idivl fnstcw pop xchg out add mov sub xchg lret cmpsl int3 push loopne outsl pop dec push iret bound jp icebp mulb in rcr (bad) sbb xchg adc adc xor aaa push dec in mov aad push push mov cmpsb clc in pusha add out pop cli push mov sahf out icebp das cli mov leave les mov clc jb xor je mov adc sub cmp fbld outsl mov stc sti int out mov repz scas push scas jbe nop sar or dec fadd lret adc enter (bad) repz adc and push in out adc mov mov mov mov in loop pop lret cmp mov test cmp jp loopne jg adc mov mov les pushf mov in mov (bad) cli ret pop notb dec or mov xchg cld inc push popa pop nop jbe adc sub pusha mov nop loop imul or fdivrl xchg mov imulb sub push mov cs add orb dec (bad) popf jmp repz fwait or fs sbb xchg add xor pop add push inc negb icebp (bad) cmp mov jne jle inc scas sti out imul aad and fistl sub cmp and inc stos cmp or sbb mov adc pop jb jmp fmulp add add fs inc inc pop popf inc xchg inc xchg call std push and ss repnz mov dec movsb push je dec scas out mov dec jns pop aas sub sub add stc adc push sub mov cmp (bad) fdivs pop mov out adc adc sub and (bad) pop movsl stc and xor mov cmp inc rcl cmp (bad) ss outsb cmp sti dec pop add dec cmp fcmovnb or fucomi cmp ljmp adc cmp xor fistpl push jne ficoml xchg mov ds in popl in push dec out mov sub mov adc push push xchg adc (bad) or test push cmp outsb fadd call (bad) mulb loope out sbb rorb inc cli dec insb lods and sti insl mov adc push loopne mov ret decl cld iret stos pushf test lret std loopne dec or in push ret xor xchg std push imul mov add fnop scas xchg nop inc mov out (bad) jb adc scas lahf mov inc stos out push xchg mov int3 xor jbe pushf repz pop insb lods jbe xlat lcall mov cmp outsl xor lock add cmpsl clc pop std scas call jge in scas jecxz cmp cli dec jnp dec pop sbb sti sbb aad mov add xchg mov push je lds cld xlat shrl clc punpckldq (bad) scas adc notl adc pop ja divb jl or add daa movsl loop js icebp jecxz mov inc and sub jns and addr16 push mov idivb cmc in inc dec pop hlt adc ss xor mov into adc inc cld push sub (bad) xlat ret decl fwait add xor mov cmp xchg stc cmp mov jnp push mov or pop adc sbb pop sbb pop (bad) jo loopne insb out sub lds jmp mov syscall mul mov out xor std xrelease adc stos pushf adc jo mov push or pop je adc add sbb pop imul dec cmp fadd or jae mov aas in cli stos dec frndint and and xchg sbb mov in push cs int (bad) sbb mov out mov repz inc std xchg push sub unpcklps sti cmp shlb mov dec ljmp mov sub popa xor pop loope mov add xchg cmp jno cmp inc aad mov xchg and sbb lods lods in inc sub (bad) lock mov aas mov aaa jnp gs or mov rorl movsl sbb sub mov repnz ret sbb jecxz das arpl test or or add mov aas aaa (bad) mov mov stos fucomi mov leave jns insb inc cmp mov xchg loop adc outsb jnp in dec movsb aam jg in cmc icebp push lea loope (bad) mov adc jbe fcomip adc lret and in or adc int3 rcrl pushf lcall pop out cmp daa cmpsb lock jp int pop test xor movsl cli ljmp mov jecxz iret loop out sahf dec sbb mov cmp cmp icebp outsl arpl insb push cmp cmp sti inc xchg xor push mov insb inc push inc push dec imul push adc (bad) aad mov stc push stc lods cmp cmp add adc rol decl enter ja jns jb repz push mov or push (bad) aad mov jecxz and pop xchg sub push mov mov adc push les test mov pop rorb inc xchg aad aad mov lods out jo rcll aaa xor and pop roll nop aaa jnp or ljmp push push jmp push int3 repz mov in pusha pop int adc leave or push clc mulb roll pop sub incl mov ljmp cwtl in loope xor fs into in dec push and mov inc push insb les popa jno pop inc and nop lcall inc adc xchg xorl rorb push pop sbb mov mov add jl push das addl dec push mov ds (bad) or stc mul repz xorl aad mov push dec pop shlb mov adc cli mov dec repnz divb test pop dec jnp xchg frstor fnstcw add jecxz lds push dec bound mov in movsl jp cmp incl iret sbb pop decb push xor xor sbb lret mov xchg sti xor add stos icebp leave xorl stc pop outsb popa xor aaa jnp ja in sbb and jl rcll sub jmp push jbe lret ss repnz jmp mov hlt (bad) jge flds aaa jnp jae sahf cmp inc (bad) push dec psrad adc sub mov inc mov in cmpsl adc push ds pushf lea and push push out add sbb sub xchg stc loope sbb cmp cmp and jge fucom mov cmp add mov jnp outsl int add fsubl jl mov scas sub and or push jo add mov pushf (bad) out add (bad) cld setae pop dec dec sbb mov pop (bad) inc lcall xor shll sar mov scas sub out mov mov xlat push imul or jmp out pop adc je enter call lahf cmp cmp repnz mov lods adc cmp mov xor repnz mov xor adc push inc jmp mov jno inc inc sub rorl stc into and xor mov clc add hlt pop push add cmpsb out int3 (bad) incl stos sub jg lock int3 lret pop out dec xchg cmpsb sti les cli add mov and shrb lret rcr enter pushl adc pop add ret jmp fisubr and dec mov pusha jge mov push or lds sti xor repnz sub aas mov aaa jnp jno jecxz sub and loopne mov ljmp mov movsb xchg (bad) stos jae cmpsl int or stos inc dec adc mov shl lock adc jmp cmp xor add xlat jmp popa in jmp clc jmp ror (bad) mov dec aad mov fwait and test sbb add add mov stos leave movsl mov mul or lcall test sub xrstors xor repnz lret int3 add aaa (bad) dec loope bnd (bad) mov push out inc popa pop jbe push jge pusha outsl jbe mov data16 cwtl add (bad) sbb pslld dec pop loop xor adc adc fdiv and dec inc data16 cmp sub inc js adc test jns scas dec cmpsb in mulb dec test popw and (bad) mov lcall or jmp out rcl arpl (bad) out xchg mov cld or lcall and cld or data16 cs sub fmuls repnz cmp jns out mov mov hlt repz pushf (bad) loope daa jnp addr16 cmp (bad) adc int stc push mov outsb jb imul pop std xor or mov or pop jl jl data16 cltd loopne adc in mov les or push in pop xorb dec xor push push cld leave incb inc data16 shll cltd bound test scas sti rep les cmc dec movsb sbb mov inc sbb ds popf mov and inc data16 adc xor sbb jb add or fcomip or rcrb push sbb dec gs pop lcall inc data16 mov test sbb and mov adc push testl xchg lods or inc mov sbb icebp sahf mov into mov sub fstpt and mov or ror out mov adc xchg clc cmpsl pop adc adc xchg mov scas sbb sub cmc add dec cwtl lea lds or or dec pop dec cmp clc cmpsl jmp dec inc mov jg jb (bad) jnp xor jb ljmp scas cld dec add dec lods ljmp sbb cmpsl or sub pop insb je xor push lods repnz sbb loopne push pop sbb mov sub les or sar sbb cmpsl in movhps push pop jecxz lret xchg in adc pushf pop inc dec lahf ds inc leave enter in ljmp or add cmpsl add inc mov pop inc add fsub xor daa ss data16 and sub dec jne adc inc push into jecxz xor add lods out jno pop in ljmp inc sbb pop push pop add push lret stos mov lahf pop sbb sbb lods cmp clc cmpsl add dec cmc mov adc cli cli hlt adc xor ss data16 push xchg (bad) or inc mov mov dec cmpsb mov stc nop or mov aaa xor loop pusha mov aaa sbb sub fstpt cmc inc add jb adc stc iret mov sbb mov adc xchg arpl xchg sbb rcr and loop mov data16 pop fwait mov test mov mov push sbb cs in mov cmpsl ljmp push add inc data16 adc jmp enter add dec lret xchg or stos jae add ret inc and push xchg push jns cltd jg xchg sub fstpt int xor cs adc dec in std dec jbe xchg clc cmpsl (bad) pop outsb cmc in mov imul loopne pop lret sbb cmp ss data16 das lcall and and dec jmp pop add inc pop mov xchg lods loop das cmp xor add aas ds mov call lahf mov sub dec pop cmp lock xchg sarb clc cmpsl cld cmp cmpxchg mov mov adc push cmp mov sub loopne lret je inc sbb mov into and loopne mov ss sub ret or push leave and inc inc clc push xor test push pop (bad) clc cmpsl jecxz movsb fisubr imul sarb jne outsl loope sbb loope xor mov (bad) lods add sub loopne push nop xchg mov xchg pop or pop xor xchg lods ret cmp xor mov mov or push cmpsl xchg dec mov inc xchg push xchg sub mov shll fldenv sub out je (bad) or es dec ss data16 pushf repz push stos loopne push mov inc sbb clc xchg lods call jne mov cmp inc mov xor or inc mov aam sbb aaa test jmp scas and rorb enter cmpsl cld mov add xor or jecxz movsl mov or std inc lods mov jmp cli or lret xor fcomip sbb cmpsl add hlt hlt mov lods lret inc scas lds (bad) loope test add aaa sub mov fwait test (bad) aaa arpl sbb cmpsl sbb out mov cmpsb pop or sbb jle daa ss data16 mov push in and sub clc jb (bad) daa cld lret movsl jmp mov push mov pop pop jecxz movsl sub dec inc data16 adc in sbb sbb push ret xchg mov xor lods out mov dec repz adc inc out mov fstpl arpl jmp ss repz insl jbe jae jmp mov lods loop dec xchg in and cld sub add mov mov fstpt je jno int3 clc mov pop pop inc sub xlat (bad) and cmpsb mov ljmp mov push test es inc imul bound jb sub test (bad) or inc xchg stc insb mov leave mov or or jecxz in lea add sti fs cmp in pop push dec jg xchg or fisubl sbb cmpsl add out cs loope mov xchg xor fadds pop mov data16 mov mov into xorb in in mov ljmp push adc jmp xchg (bad) mov ret lds pusha imul fwait dec xor popf fwait adc mov xchg lods adc scas ret push and inc imul add dec cs test and int3 jge (bad) push pop loope dec gs cmpsl ficoml add arpl push ljmp xchg fcomip std push adc cmpsb sub test inc aam outsb jle dec fs rol inc sbb or xchg aad xchg adc lods mov jmp (bad) (bad) sub inc data16 fwait inc push sbb inc rcr add jle jmp stos mov pop inc mov es not inc aam jl data16 adc dec push into lods aad fnstsw inc and dec sbb call lods add (bad) mov push daa push pop (bad) push pop mulb loope sbb (bad) repz or ljmp push dec icebp sub or or adc ret xchg mov mov mov or imul sub adc ret or daa pop jg sbb movl sub lret fsub pop mov test xor loopne push pop pop dec jge insl push repnz in mov sarl sti insb inc rol jle fadds in adc movsb sub pop faddl xor push imul xor sub push or repz and je push cld icebp dec push xchg dec ss data16 lcall pop stos sub (bad) (bad) mov pop jl lea cmp push adc push cmpsb sbb and fs inc inc data16 and mov insl clc iret cmp sbb negb xchg lods cld dec test mov push add stc pop push movsl pop cs out add dec sub mov cmpsl imul inc into sti add scas push (bad) aad scas std or push mov sub add adc push fldenv enter stos mov cmpsl xchg lods aad (bad) or and pop mov adc mov mov daa sub jns mov in (bad) lea pop imul sbb cmpsl adc jg sar cld int mov sub iret cld xchg push sarb inc jp pop (bad) and fisttpll inc adc icebp sbb cmpsl in fdivrs mov or cs push outsl insb cmp adc sti sbb inc jo insb pop jge in pmullw stc pop push clc xchg lods or adc cmp adc stc sahf hlt (bad) add mov fnstenv loopne sti adc add xchg loopne xor xchg clc cmpsl sbb cmp jb sbb adc mov mov je dec daa ss data16 js (bad) mov mov sub adc es add lods adc stc std loop mov sbb cltd push test mov add inc ficom sub jle inc mov jmp push insl cmp sub mov push push mov mov mov fstpt clc mov cld loope imul and imulb std inc adc fwait scas addr16 aad add inc data16 sahf bound popa pop stos cmp push pop add fistpll mov scas testb shll jge das ljmp sbb cmpsl sub pop inc xchg sub push out enter mov dec sub push sbb cmpsl adc negb lret jae (bad) lds sbb int3 rolb pop (bad) enter scas pop mov out adc push fistl sbb pusha or clc cmpsl in aam movsb lock sti mov xor ljmp data16 mov enter data16 inc mov jne mov mov incb push in lret dec jae mov push cli loope xchg jge jl data16 stos sub fcomps or sub sub into push pop cld daa sub repz xor add out mov mov add data16 and cmpps stos bound jmp out test pop lods clc xchg lods into das push mov or loop ss or cmpsb xor pop add in push sbb sub pop stos cld push dec add int3 adc mov enter (bad) pextrw xchg pop pop add mov xchg (bad) ud2 jmp add ljmp xchg pop mov inc mov pop lock cltd jmp fidiv cmp or fstpt xor push pop add mov ljmp cmp fwait jecxz jnp sbb mov mov call nop ja in mov dec mov lock dec or cmp mov jge sbb push lea pusha dec mov fdivrs xchg cwtl xorb mov mov jecxz clc (bad) cmp clc cmpsl sti pop hlt arpl lret mov mov cmp add ret adc addr16 push scas movsb push insb (bad) cld in mov xchg lods int3 clc aam nop outsl (bad) jge out sub mov mov aam xor xor out cmp fistpll or out incb aaa dec mov ret rcr adc jnp ss data16 movsb ffree cmc xor out jnp jge aam pop movq xchg lods xor imul lods add fs sbb das push int fisttpl or pop lock inc insl inc inc ja mov das mov jmp faddl stos loop pop lcall xor pusha or imul out mov andl fsubrs (bad) or xchg andl clc cmpsl in and sbb push push xor sar pop dec aas cmp push push movsl (bad) ljmp daa test push ret repz movl (bad) aad cltd in inc arpl dec inc data16 mov mov adc push (bad) fwait (bad) fnsave mov add loop hlt and pop sbb shrb sub mov shlb mov (bad) daa inc mov adc dec sbb mov sbb mov loopne pop mov lods in push jge adc sbb pop repz fistp mov push or push ss es and pshufw pop mov pop adc add or jns mov out and mov fldl2e mov or ss sub pop cmp sbb in cmc or add sbb lret sub fstpt mov and in mov xabort xor sub xor sbb cmpsl shll loop bound arpl lcall dec ss data16 add or rclb into ret mov and (bad) xchg lods notl jns (bad) cmp dec xchg adc jl and jae pop sub fstpt mov push cld out jo xlat adc jecxz cld pop sbbl bound adc inc push out inc call xor dec xor fstpt fiaddl lret and negb pop aad jb xor xchg cmp clc cmpsl call pop sub mov fwait xor adc stc mov data16 test pop mov sbb (bad) cmp add (bad) dec jns push lods adc loope push les in inc sbb inc data16 and ss sbb daa jp lret mov sbb mov mov pop push mov xlat and adc adc pop sub fstpt std cmp and dec movsl cmpsb (bad) ret jo rcl adc testb (bad) aaa and inc or inc adc mov js ss data16 decb xor sbb lods xor shll or cmpsl sahf scas cmpsb sbb lods ljmp (bad) aas push ljmp fstpt hlt mov sub repnz push aas call xor out insb or xchg or ljmp xchg or add leave push jne jo dec jno or mov cmpsl pop testb sti sbb push dec fcoml fildl test idivl push add adcl inc push xor or outsl mov cmpsl std push mov movsb test ja pop test push fisttpl arpl ss data16 jns dec pop adc sbb sub dec je adc push adc (bad) xchg lods in jae xchg inc test (bad) or sub stos ds dec sub fstpt push push jnp enter add sbb sub jnp ds fldln2 sbb jbe imul jmp stc (bad) or add ss data16 mov in stos enter icebp or pop fldenv jno sti xor cmc xchg lods sbb add es aas cmp inc jne pop sub fstpt divb pop (bad) (bad) or inc mov clc cmpsl pop add and and js mov cs test inc data16 pushf (bad) divb mov hlt mov mov pop mov xchg lods add fdivs sbb xchg mov mov in dec sub fstpt adc pop cwtl enter call cmp jae xchg clc cmpsl add clc adc xor rep mov or jbe pop ss data16 pop sub xchg in sbb ljmp into mov cmp sbb add (bad) out mov xor pusha inc data16 cld cmp inc pusha cltd add jo scas jecxz rcrb xchg lods xor ss jmp sbb pop les in (bad) jo or movsb add jge jl aam lea insl aaa stc cmp cmpsl scas xchg adc xchg push testb lcall test daa inc xor sub adc ss data16 pop dec fs adc or and aam test pop fisttpll hlt dec fs ds mov and mov data16 test or sbb add add test xchg lods testb dec mov fimull in sbb mov jb popl lods fwait and inc bound inc jg add clc adc lcall or xchg ds jmp or lock pop sub fstpt mov sub mov mov or andl sbb cmpsl (bad) in cmp push daa mov mov int3 rcl push jae ss data16 mov inc mov sub sbb inc pop inc aam mov xchg lods xor push cmp mov and push dec jbe and fstpt ret cmp jl fstpl iret jae les adc xchg clc cmpsl in adc mov xor add (bad) sbb push lods pop pop ss data16 mov leave scas mov pop cmp iret add mov clc xchg jmp stc add mov movsl lods adcb stos lret aas or std mov mov lock cs data16 mov inc loop fs push clc aas add xor (bad) xor xchg or jno jge std ljmp mov mov mov or (bad) or mov test xchg cmp fcompp cmp icebp xor clc cmpsl in sbb cmp mov push popa mov out cwtl sub popa sub ss data16 mov (bad) out divl adc sub cmp scas aaa js incl sti sub adc arpl and xor loop sub xchg data16 push sti dec es mov cltd pop sbb mov and adc loop popf lds mov pop jl data16 (bad) dec sub leave (bad) or imul stos push pop popf repnz and (bad) inc mov daa addr16 loopne sbb sti jno sbb inc or push adc mov aaa dec sbb pop mov inc bnd adc xchg movl mov int3 cltd loop fiaddl or sub mov enter cmpsl pop or adc adc mov dec out std add aad in daa ss data16 testb or sbb outsb mov xchg lods add pop mov cmp negb repz ficoml inc push aad loopne pop sub fstpt rorb repnz outsb shl push or (bad) bound push and pop mov mov or gs outsb gs icebp xchg sarb and sub repz or inc or xor scas cltd mov sbb push dec dec or cmc (bad) mov add in lcall mov ret or loope,pt lcall cmpsl jg out lea setge clc cmpsl cmc loopne cmp pop xor lret imul or cmp testb inc daa ss data16 xchg shl and and dec sbb pop (bad) popf shrl ret outsb adc cld mov cmp push sub adc out out dec scas and cmpsb mov addl xchg jmp stc add stos inc jge hlt or or sarl shlb sbb aas (bad) test inc lds and and test nop aaa jnp dec lock ljmp lret in pop push nop adc sub fnstcw in subl scas push out lret push mov inc lcall inc lods out and sbb lock rcr dec arpl mov cwtl push ljmp sub cmpsl xchg cmp pop gs jae jnp lcall sbb repz mov (bad) aad mov push loopne and sbb push push jmp fwait (bad) pop stos xor jae add or adc xor out aad mov ja push mov add xchg es pop movsb jns pop dec push scas cli cmpsl ss setno inc dec mov and push (bad) add push (bad) xlat repnz sbb movsl cwtl pop mull push jne cli lret push (bad) outsb stos addr16 aaa inc jno gs ja aaa (bad) adc mov daa das dec push cmp add pushf jecxz pushf test ljmp into sub ljmp lods pop je sbb cmp cmp sarb adc cmp ret xchg xchg push mov push scas in leave adc inc es aaa jnp jno cli out or mov pop std cltd lcall mov mov lds xchg test push movsl aad repz inc aaa jnp insl aad testb mov sbb in sbb mov aaa popf push push outsb xor lds and gs xchg mov jno loope aaa jnp pop jmp cli dec xchg bswap and cmpsl and ljmp sbb inc pop fwait jmp jns out pop mov aaa jnp or lahf sti leave mov sbb incb adc out (bad) mov out out xor idivl push inc sahf jecxz (bad) jb add rcrb or add dec push jb jge mov cmp cs lods insl leave mov das ljmp ret aas scas xchg popa and aaa jnp dec jecxz (bad) enter dec and fnstenv inc jb loop and mov pushf dec dec jp mov pusha mov push movsb lret mov inc lcall (bad) in adcw and imul (bad) mov shrl mov sub xchg not rolb jp push ret je inc lret dec hlt jecxz lahf cmp jmp xor mov aad mov ja loopne dec pop or data16 jge imul setnp cmp aas (bad) (bad) (bad) xchg iret aam aad mov jle and mov iret sti stc imul nop sbb into add mov loopne (bad) pop lods ljmp jns adc fs stc add pop shrl adc inc lcall mov cmp idivl mov inc out mov or addr16 jl loopne fs push pusha jle sub repz pop das cmc shrl test in fsubl imul sbb mov dec push push jecxz (bad) div fmuls push cmpsb cs int inc nop gs mov decl dec pusha mov outsb stos add jo push jns or sarl cs xchg int jmp sarb jl ret decl lahf sub test mov cmp fsubrs mov pop repnz xor xlat jecxz mov push mov adc mov lcall mov xor push cmovno adc sub mov mov sbb mov add out adc rcrl fimul dec pop cmpsb inc mov aaa jnp insl dec divl aam pop mov mov mov fistpl aas leave mov leave push pop jns adc jae push fmuls push dec je inc lcall xlat sti hlt in mov loop xchg sub int3 inc imul aad mov pusha inc adc mov in and adc nop aaa jnp pop cli out (bad) xor aaa adc dec or fidiv into das inc dec imul push push ja js repz (bad) leave mov cwtl aaa jnp inc push and int3 jl mov sbb lock ljmp sbb (bad) push popa sub sti rclb cmp aaa jnp fs out sub test test mov push mov es mov fdivp or sub jnp insl jmp lret cs cld fcomps inc imul pusha mov lods mov adc pop pop mov scas es adc ret decl xchg mov flds loopne addl push inc push cltd sbb jecxz mov pop pop push dec cli stos idivl bound add in or pop jmp jnp dec dec sub and cs stos fcompl add repnz mov pop cmovno mov fildl jae cmpsb ja xchg (bad) loop adc push outsb or pop arpl push sbb or mov mov mov xor sbb ljmp inc cmp out nop out pop mov loope (bad) leave adc mov insb cmp xor sub ret push cmp push arpl pop adc xor cmpsb test (bad) aaa cmp call inc shll mov pop jp adc into imul sbb mov or pop pop and aam mov aaa insb (bad) dec mov adc cmp ret sub test scas cmp or push add lret outsl insb pop mov andl int xchg cmc cmp mov into sbb mov dec pop add sub repz stos cmpsb or (bad) fincstp pop inc lcall xor test sbb cmp jmp mov lcall xor cmp fisttpll (bad) sbb jge add jg stc inc mov adc test mov mov in repnz mov xor loop mov sub or shufps gs mov out push mov dec clc mov and pop (bad) ljmp push stos inc mov sub hlt mov jmp in lods sub lea add in xchg mov leave mov insb inc add push cmp int3 (bad) dec testl test (bad) imul sahf adc sti fs push jecxz mov out jge jge leave negb rcrb jmp es mov adc mov fisubl or cwtl push xlat jecxz in fsubrl and scas (bad) adc jae adc inc popf xor jmp sbb insb sbb inc xchg mov call adc pop adc pushf ljmp sbb jno or cmp ds sub lahf pop aaa inc cmp shl in add imul imul (bad) sbb loope mov push out inc imul lret jecxz int test cmp or and ret int and jne repz iret push dec push inc fsubl push out mov stos sub stos add inc jne lcall cmp dec ret out sarb aam dec mov imul aaa aaa xchg fisttpl ljmp adc movsl cltd in in aas movsl int out push push ljmp or orb sbb jecxz test in hlt xlat aad inc xchg xor (bad) sub out xlat push cmp cli aaa adc xchg loopne dec movsb sbb mov (bad) repz daa cmpsl dec add sarl jg pop push cmp inc and or push test sub inc sbb lods mov aad call mov movsb cmpsb inc pop sub adc loop lret sti push popf lret stc inc std aaa idivl mov adc sub xchg add shrb aam es std lret xchg (bad) in pop mov cmp dec sub scas xlat int3 jle imul xor pop fadd push dec pop das jg jmp xchg decl pop mov inc cld dec push jb mov ret pop out cmpsl mov sahf out jo jae adcb shrb add adc popa test mov add imul lea imull inc out fisubl lret mov imull dec loopne fsubl mov out jo jge hlt add call das into fnop mov frstor or loope dec xor subps push mov or bound push repz ret dec cli enter and test shr outsb lock xchg scas xor or push push mov cltd pushf out jo push ss icebp mov xor inc repnz xor jne sbb mov aad repnz fs sub pop pop sbbl std in adc adc repz lods in xlat add cmpsl xchg popf faddl shrb cmp lret stos xchg push pop out mov adc dec cmp dec cs dec jo cs aaa les pop cmpb sbb mov dec mov xchg xor xlat (bad) mov sub adc aad add insl xor cvtps2pd outsb fwait in fbstp cmp push adc add enter sbb push sub adc jmp or enter imul rcrb sbb or xor popf rcll mov jbe (bad) (bad) mov (bad) out movsb jecxz addr16 sbb sbb sbb (bad) mov fld mov arpl ret mov (bad) jl imul sbb std dec mov or mov or (bad) fcompl inc sbb rep (bad) cmpsl pop mov cli sub dec sbb in in dec std cmp adc lcall loope sub and push xchg inc pop inc adc cmp lret (bad) outsb cmp adc test xor outsl mov repnz sub repz movsb in rol cli mov fbld (bad) in aas adcl test ljmp mov out pushw sbb jl xlat jbe cmc and dec outsl sub sub ret sbb inc jbe aad call or lods dec iret xor fwait shlb aam inc push pop mov lods sub popf addl in ja and xchg loop inc sbb and add xorl mov inc fcompl adcb pushw pop iret xchg bound push popa push xchg add in mov dec add movsl imul dec mov cmc dec mov imul mov pushf (bad) aas std loopne sbb repz mov xlat jmp mov add and fistpll scas enter jge mov xchg mov jge lret ljmp adc js fldl shrb cmp test (bad) xchg test sahf push out adc aad push movsb daa xor loope mov dec adc fidivl jmp xor mov in xor repz sbb movsb mov pop test and daa xchg sahf mov repz cld lods mov add test push adc mull (bad) adc pop aaa int (bad) pop outsb cmp or ret cmp push add push push (bad) mov push test fld movsl mov ljmp loope and inc xchg int3 int sahf add aas lahf rcll les adc pop sub sub push add jecxz inc fs andb cs jo xchg and sub rcll (bad) cmp mov pop mov clc adc repnz fs sub cmpl mov lahf out mov xor repz xor push ss test nop mov adc mov in iret cli push add dec mov jbe and fistpll scas enter jge mov fwait shlb mov int3 sbb mov push cmpsb mov inc adc stos rcl xchg mov rorb dec stos or mov jge,pt adc cltd insb and mov adc or int jno push sbb cld (bad) sbb mov xor mov icebp mov fs sbb mov sbb sbb in int3 add mov push add ds pop stc xchg dec movsb push stos sti imul in ljmp test enter sub sbb imul push dec sbb scas push test xor mov mov sbb mov in in inc pop add int dec sbb subl nop lcall mov lret lock fisub push (bad) repz (bad) lock fnstsw int3 mov pop movsl mov cld mov in pop mov loop sub jne and enter sbb repnz or or ss jg xor cli data16 xor mov insb pop sbb adc (bad) hlt call jecxz mov cmp scas insl lock cmp mov dec or cmp repz lods adc cltd adc (bad) out (bad) jg loope mov push pop fwait rcll rcl pop int3 sbb mov stos add leave adc pop loop add mov mov cld fs lods sbb lods idiv stos xchg lsl sti enter sarb pop jbe push jge cmp sbb icebp xchg int mov jbe sub mov xchg sub inc or xchg stos sub insl lahf lret (bad) mov (bad) fucomi leave (bad) cli push bound mov push out dec pushf xor les fnsave shll lret cld sbb push decb mov stc cld pusha or lds rorl mov leave cli sub fstpt scas sbb lods mov clc xor shrb cmp (bad) repnz (bad) fdivr push idivl out ja sahf mov sahf scas or repnz iret movsb popf in push aaa mov lea stos bound push std movsb jge cli data16 sbb xor xchg divl sbb jbe leave imul or fs lret loop cmpsl xor sarb push movhlps in in xchg adc pop sbb or mov movl jmp bound mov mov ret and (bad) call cli pop jo sbb adc fmul or sbb scas mov mov pop and sbb jo sbb mov cmp cmc or fdivs sbb push aaa pop mov je lds cwtl or and (bad) repz pushf int3 adc mov push push ds mov mov movsb push jp (bad) push push cmc pop loop sarl test out ret hlt jbe pop frstor add xchg loopne pop outsl cmp addr16 hlt into (bad) dec push test je ret enter push out mov ret loop add inc xor maxps pop mov adcb pop popf mov fisttpl or mov lock clc mov sub (bad) inc or mov scas andl fs outsb cmp mov xor in add ljmp repnz push mov mov add xchg mov sub out jnp mov inc sahf leave jbe cltd mull dec mov cmp adc cltd scas addl call push and xchg sbb out push (bad) mov int xchg lods pop jmp (bad) inc fdivrl (bad) repz pop ret mov leave test (bad) repz and (bad) jno test flds xchg mov iret aad jecxz jecxz (bad) repz adc sbb mov inc test (bad) lock (bad) dec sti xor jecxz jecxz iret adc sbb test sub loopne sbb xchg rcl lcall mov cmp rcl lcall insl clts cs mov hlt (bad) movsl xchg inc in lods fisttpll mov js and mov pop adc jns int popf ljmp ror in dec scas lret int add daa iret cmpsb (bad) imul and scas adc cmp (bad) mov mov rsm in xlat xchg test sub sbb stc mov dec lahf ljmp push or cmc insl pop sbb cs add cmp (bad) out jecxz push out dec mov fiadd fidivl je xchg loopne int3 jle dec cmpsl lods std adc sbb bsr mov jecxz add sub xchg push aam ss sbb sbb sbb es sbb mov add sub xchg push aam sbb popa jmp jl sub iret sbb sahf sub aas adc repz (bad) pop add mov into push aam inc sub into lahf popf ljmp ror clc lods mov adc xchg cli cmp js pop pop inc push pushf mov mov mov out hlt (bad) cli jns push inc adc add inc inc xchg test stc mov test mov inc sub iret leave js fwait les push dec cmp xlat jno ret jmp mov add sub mov sahf inc lea inc pop jmp imul test sub (bad) adc movsl fucomip scas xor mov push (bad) adc mov es inc test test int stc scas lret xchg lcall (bad) (bad) jbe mov xchg outsl sbb xor or sbb mov int in push inc mov jno loopne cmp rorb push xor mov test cs jp or icebp (bad) mov dec and mov push sar out hlt addl and gs pop (bad) add xor push adc and inc jne lret (bad) pop pop pop jg inc ss or cmp popf insl (bad) adc mov sbb jo popf out andl inc imulb pushl mov sahf sbb xchg dec lds int sbb pop repnz js mov loopne adc jmp or pop iret xchg pop into cmc add pop dec or (bad) scas push inc xor sub outsb mov push int inc aaa sbb lret xor ja push out adc cmp mov cld and iret rol sub xor addr16 test and les jae add (bad) repnz add les inc stos add in (bad) sbb dec cmpsb inc sarb je xchg out lret popf repz cmp popf arpl add clc cmp aas pop jl or or or mov sub mov sub dec mov add cmpsb ret or push fwait adc jo add cmp fstps imul addl into aas or adc rolb hlt cmp mov stos adc xchg inc or xchg test add loopne (bad) repz or mov aam mov jns repnz inc or jns mov xchg or mov sub add xchg repnz xchg mov jnp icebp adc lock and xor lods js out sarb fdivp imul jno add adc mov add test jg ret sahf adc jns das fs mov jno inc jb mov (bad) js aaa jle jmp inc add stc daa and test jno inc jo lea repnz shrb dec imul mov adc out xchg aas and mov inc inc dec outsl cmp je cmp lds aad jl lahf cmc mov push rorl outsl sbb and das popa inc mov imulb stc xor es pop dec add jo jge fidivrl dec orl add add mov aad mov pop push mov mov lods jecxz push aas adc ret push std jle imul sub gs cmc repz fwait call mov add (bad) xor dec mov sub repz jp add mov cmp repz inc jb add loopne out clc dec movsb xor int3 dec bound leave lahf in (bad) pop xor repz or push add stc aas andl jg imul pop nop and subl ds std loop divl dec dec dec mov adc cld aas lods pminsw add js (bad) mov call test test push xor push push add cld xchg push xchg repz adc js addr16 and xor mov adc repz pop jl xor xchg sbb jge mov xor popa clc lahf loop mov imulb or repz mov sbb push (bad) fsubrp jo mov out scas xor mov cmp cmp adc jle sbb popa test push pop sbb mov adc pop xchg xor jle cmp mov jnp inc ss mov loope sub rcrb ds lret xor or pop sub (bad) xchg jne or icebp (bad) inc adc or xorl (bad) sti xchg xchg pop pop inc add jmp mov dec inc cwtl add (bad) out int hlt mov pop pop xchg (bad) or push repnz dec push jne xchg mov je xor dec dec dec or push inc js out cli fwait (bad) dec repz push add mov (bad) jle xor mov hlt into xor rclb les add lds xor scas sub cmpsb adc mov xor dec jo add loop std out (bad) sti xchg clc mov ljmp push mov or sub mov sti xchg add sbb mov pop in out data16 sub push adc lcall pop (bad) test nop scas sub sbb push std (bad) or jp xor mov inc or gs sub mov sbb mov in jb add sbb dec adc add mov mov out cmp lea and add xor ja pop ret mov adc xchg sub aad xor inc sbb (bad) cld aas popf adc jg inc add clc push mov mov loop outsl jno mov sub add popf lahf movsb add mov mov popf popf mov bnd xor push and lods fwait inc push xchg pusha jno mov mov mov sbb adc mov inc inc mov dec hlt sahf adc push sbb mov repz cmp notb fimul test addr16 addr16 call dec fldcw sub pushf add jg dec xor mov clc sub iret dec push inc add add fistpll jp out arpl lods ret cli jno mov out mov daa sahf shrb dec ss mov clc sub pop ret int (bad) cmp push xchg jno movsb jge adc jmp inc sub scas in pusha test (bad) shrb dec xchg lods or js mov fdivl xor push dec jno pop mov out cmc cwtl add mov xor xor or mov push dec pop inc orl sbb out stos push jo inc add mov mov jnp mov cmp js mov mov dec mov enter push pop mov dec test pop push (bad) icebp call mov ds inc xchg push or loope dec fist imul dec mov dec cmpsl (bad) iret mov sbb ds aad pop mov pop (bad) je (bad) idivb sub mov push out sub xchg pop or outsb or jns mov test aam and jbe cmp add mov push push push push pop mov dec test outsb sub pushf rolb jge or adc ljmp sbb insb or cli mov sub cs in sub xlat pop xor and clc cmp pop aad adc arpl fcomp mov mov js mov rorl imul loop les cld inc test lds in or mov sbb test (bad) xchg addl pop repz push sti mov mov out pop enter imul mov push sti loop inc cmp push repnz jns ds aas call (bad) lcall cmp addr16 mov enter xchg add aas (bad) outsb je jb and je or out clc inc xchg xor insl push adc cmc adc jmp cmp pop push mov lods nop std iret cld adc mov lds add ja dec cmpsl cmp lods loope jmp jecxz xchg mov das movsb js jne out sub andl aas inc pop cltd add push ljmp mov mov (bad) out clc popf cli xor pop xor das fs mov mov inc lcall dec jae jl outsb xchg pushl mov call jns mov (bad) xor test jnp call icebp add cmp xor ret adc daa lods daa call stos leave inc or cmp das sbb or repnz xor dec push nop xchg loope xor mov push push ja push nop outsb sub dec inc and mov dec mov dec push nop push or mov sbb mov in fwait mulb push aas std mov add loopne loope sti jno insb idivb xchg inc or aaa push dec sbb add jns aaa mov adc xor inc adc in cmp psubq sbb jecxz loopne inc stos push mov add imull cli call cmpsl add xchg fidivl jg test js dec add or nop loope jg mov and loop mov adc xor pop sbb pop pop fwait sbb test add mov sti mov add bound jecxz cmp ja push inc ror jno mov cmp push lret add cmp or mov mov aam ud1 add mov decl sub fdivrp int3 addr16 and xchg or lret mov std inc jmp add cmp mov pop (bad) sti dec aaa mov push adc pop (bad) jmp and or fyl2x xor mov cld dec in movsb imul sub (bad) aam ljmp cmc loope inc dec mov inc mov inc data16 sub loope lahf mov cmc and xchg lock popf and mov jp cmp mov adc pop or ss imul cld repnz xchg cmpsb dec sbb push roll xchg xor mov decb xchg xor ljmp fs rolb cmp fidivrl sub cwtl cmp ret mov fdiv add imul pop xchg xchg mov mov sub enter mov je pusha push cmp fs jl aas cmp (bad) jecxz sub fwait inc cld fbld call sub (bad) sbb stos pop dec scas mov add inc jae out lret jmp xor mov ret inc cmp push sahf xor insb add rcll out push xchg mov dec ljmp les push adc sti call test mov mov sbb sti or repz jbe sub push or movsl pusha pop jge bswap std into in hlt mov xor movsl cmp sub xchg add push and mov sbb push add (bad) jg ret xchg rorl jno dec pop enter and imul cmovle xchg hlt sahf out sbb decl jp lock fidivr insb lock dec fwait jo lock mov aam repnz mov xor and add or mov push aas fs mov jmp ljmp mov jbe inc or xchg cmova pop std pop push test aaa inc jl or push pop js or jne xor bound jne sbb adc inc mov adc xor lret push mov int3 sbb sub out cli nop in aaa mov lock add pop push xchg cmpsl cmpb inc push mov aad nop mov add sub inc cltd pop and gs pop dec jb (bad) mov or xorb insl mov sarb bound mull add std enter mov pop rclb jecxz adc and in inc and aaa xchg xchg mov sbb sti in (bad) xor mov push xor xchg or hlt out test rolb stc test je inc add loopne in aaa cmp mov (bad) jbe popf ljmp mov repnz sbb mov push push fs stos (bad) mov inc mov cmp mov pusha push xchg call lods int xchg jne mov and mov testb ret and jnp ja rolb bsf aas mov jle mov xlat lcall xlat xchg mov add mov enter mov pop jbe jge dec jbe sti cmpsb push and fisubrl dec push nop outsb sub jbe sbb jge sbb enter or repz test cmp stos xor push xchg cmp and mov add jmp and mov mov (bad) aas fsubrs repz aad imul and cli imul add imul fidivl lods xchg pop sti inc push (bad) repnz pop push mov negb inc xor dec test lock mov xor xor xchg or sbb dec pusha rcrb sti or lea pop push imul (bad) loopne mov ljmp imul mov loopne cmp jnp ret (bad) mov or ljmp cld add out inc lods xor mov jl std inc (bad) sub repz or fbstp mov or jmp inc dec rcll inc xchg sti inc mov add sbb mov sub mov in pop enter pop or push js pop adc out in sbb fimul jbe add repnz xchg mov sar xchg add mov lock inc (bad) outsb xchg mov cs xor (bad) mov adc cmpxchg mov adc mov es ss in jae and sub add cmp pop cld dec loop and adc jge lock lea xor dec jnp mov (bad) sub fistpll inc repnz fs out or xchg xor in mov xchg lock and es ss in jae and sub pop gs pop pop orl js add fistl sbb (bad) xlat xor push jb jmp pop movsl dec and dec imul fs das (bad) pop jp lock aas lods arpl xor adc incl dec test mov mov insb jne lds jg ret inc adc rolb mov sbb xor push cli test je mov test cmp cmp (bad) cmc add jbe mov sbb ss cmp pop into in xor adc (bad) xor add jp xchg repz cld push inc das add shrb cmp mov shrb mov sub pushf sti mov cmp lea pop dec or inc cmpsl inc dec nop je arpl fnstsw popf dec je sbb lock sub push mov mov arpl fcoml outsl inc sbb sbb jae add les jne add cli out add mulb sbb in clc cmp or dec lret out incb pop push loop cmp and out repnz rorb add sarl stos ds ret sbb into lret push adc lods add adc jb add sub (bad) xor cmp movsb cld or repz push cwtl and (bad) xor je add and fsubrp mov jne cmp mov inc sahf add cwtl (bad) jne and and sub scas out mov pop lret lock ss and jno xchg jbe xchg clc aaa inc inc cmpsb inc sub push iret mov mov cmpsb icebp mov sbb loope loope push aas pushf sbb cmpsb pusha dec insl int scas sahf adc cwtl or test decb mov adc mov sub iret xchg or icebp es xor jg imul xor rclb jle sub dec adc pop lret out push icebp jge movsl pop mov mov cmp adc pop aas lcall test les and mov jne xchg cld inc test testb das lods call xchg fstpl rcrb inc jecxz loop mov xor add jecxz nop lea ret adc add xchg inc cli into jecxz push lea cmpsb adc scas xor ret pop adc mov cmp jge imulb adc sub aam mov (bad) ds adc movsb sub mov adc out adc and dec test jge or in push jne fcoml cmp incl test popf idivb mov inc sub in xchg mov pop adc mov shrb test (bad) js daa insb and or xchg sbb out push mov cmp sbb clc mov scas pop dec push inc sbb mov xchg mov cwtl pop dec push cmp pop ret fldt mov sahf std mov leave stos xchg mov cmp cmc lods insb jns in lret jge imul add sar inc sbb push add aas incb mov dec out outsl inc lods sbb pushf sbb push sahf push mov inc icebp insb inc push cmp aam adc jae dec or popf push sub push int3 imull mov out mov iret repnz inc icebp inc inc jle in adc pushf out xor gs ucomiss push cmp (bad) xchg inc jmp mov fistpll mov sti xchg lea stos sbb lcall inc adc mov cmp dec add testb adc js fist cmpsb cmp inc cmp pushf add subl add and loopne and repz and icebp adc cwtl or inc and js mov cwtl add sahf or xchg xchg icebp or sahf or xchg mov in cmc cwtl add or pushw js add add sahf or xchg or jmp xchg inc in int3 (bad) cmc push mov sahf scas (bad) insb xor cmp inc mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf call inc inc in adc add cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add xchg sbb xchg xor add lcall inc jg repnz in xor sub mov in cmc cwtl add lahf or xchg addb lret xor sub mov aam mov mov in test push xor movsl out pop push push fisttp imul inc int scas lds xor push or pop jmp push cmp xchg std dec sahf sbb cmp push pushf mov rcrl xor dec cmp jmp push mov mov xchg js popa aaa push push mov sub scas pusha clc add fldt stos mov jb in cmp mov icebp and sub js scas or or addr16 aas mov sbb ja xlat mov cmp pop (bad) ss mov cs ds sbb dec dec nop xor (bad) rorb bound je std sbb jmp jmp add inc mov call stc mov iret mov pop ss xchg sarb in jb xor pushf xchg dec jl stc sbb inc rcrl push mov adc cmp mov repnz out popa cmpsb fistl dec aad add icebp shl in fsts sahf out data16 cs mov sbb dec add push jle and mov pop cltd repz scas adc and xchg aaa (bad) xor adc repz xor std jne pop mov and ret clc out fst aam stos adc dec bound jl test mov dec lcall xlat ror sub addl mov mov xchg sub repnz pusha inc xchg sbb inc mov adc and and jno out repnz decb add xchg mov inc testb nop imul sti (bad) jae or xor mov sub negl pop jne mov les outsb loope xchg loopne and push lret mov dec arpl sub in mov loop ret cmp inc outsl aas pop (bad) mov adc aad imul sbb das jne jns cmpsb sbb adc xchg (bad) sahf dec cld lahf xchg and dec cmp mov (bad) dec sahf negb push dec and divl and adc mov popa fdivl mov mov lea int3 (bad) int3 mov xchg jo notb fisttpl mov mov out and inc add jns mov or lods in std iret mov mov adc aam jbe inc jge xor std inc adcl xchg addb mov push sub add mov clc or mov ds out out and xchg popl and ret lret out xchg xchg in mov jb hlt and inc and and xor mov sbb push cmp shrl jg xor out (bad) add out loopne mov jg (bad) (bad) xchg jne sub jecxz loopne mov add enter (bad) leave (bad) lret (bad) cmc push or xchg fs cmp pop sub inc ret add mov lcall jnp sbb nop pop jp sub push pop call inc sub inc ret lahf je xorb cmpsb sbb sarl xchg in jae,pn sbb adc mov fwait jp or pop jg hlt push inc cmp hlt mov rcrb rcll clc sbb addl sbb pop xchg dec add jl xor inc stos pop (bad) jo fwait mov aad mov lea lcall dec int pusha jp (bad) out pop xor (bad) cmp fs xor shrb push ret xorb loope fistl sbbl mov test and out mov or out mov inc xchg out dec fcmovu fdivrs int3 pop pusha and (bad) mov cmp and sbb addr16 jp mov nop popf flds xchg jg lods mov gs icebp stc (bad) and mov mov mov aaa pop (bad) xchg inc cmp fidivr sub mov mov and fwait lret fisttpll (bad) imul and mov mov sahf cmpl mov sub fnclex inc ljmp cs arpl mov jge push fnsave test mov call movsb adc divb lods int ficompl insb sub lock leave nop and iret push pop test clc sub stos enter sub pusha in icebp aaa test pop xor cmp fdivl pop rcll jmp xchg pop mov sub fwait dec mov cld or push bound (bad) (bad) mov insl dec mov pop inc dec pop pop add push incb sub xchg (bad) xchg out popf add xchg aaa mov mov adc es in mull das jg xlat mov cwtl xor sub sub push pop fstl lcall add inc sbb dec loope inc mov mov fwait movsl mov inc pcmpgtw sub jns testb inc sbb dec or in inc mov loopne sti mov loop mov push sub les adc pop adc and mov pusha lods jo push pop push hlt inc pop aaa lcall xor jae xchg pop add mov lret and adc (bad) mov cltd lea rcrb mov or ljmp mov rcrb add popa adc mov push pop fsubp cmpsb popa and movsb fdivrs xor mov jo gs sub and popa mov subl and mov mov sub push popa mov inc cmp setge dec dec sub leave jo xor mov in or dec imul cli pop mov (bad) daa dec lcall mov dec xchg movsl or loope cltd jp jecxz icebp jns sub mov into sub xor fdivl and mov pop pushf rcrl imul outsb outsl xchg pop int3 add stos ljmp jno aad out mov shr add movb add push add push mov ljmp mov push add rclb or cmp xchg shrb mov in (bad) mov (bad) mov push mov enter shrl cmp xchg push imul jnp mov lods jno push daa xchg adc xlat cmp dec or data16 and out into push sbb imul adc adc leave sbb fisub mov pop sbb xchg push pop pop pop jns lea int3 sub cmp movsl cmc (bad) dec mov xchg daa adc pushf cmp pop mov mov push rclb mov jns mov shrb xchg popf addr16 push mov mov outsb inc pop call and adc jo pop mov mov out dec cli pop jmp xchg or jl pop sbb (bad) loop (bad) std js jp pop and pop je adc imulb push vcomisd jne jmp lea sarb daa jb arpl add sub sbb sub test pop aam loop cmp or roll cmp jbe fisubrl in cli mov jae cmp xor push nop popa out aam xchg repz sbbl pop mov in loope jmp adc daa lret in cmpsl aaa repz fidivrl bound pusha xchg insl dec xor xchg (bad) mov and stc or mov fsubrs xor xlat (bad) push jle imul jecxz daa imul (bad) xchg sbb scas jg and insb push stos jbe jge sub fldenv and pop popa xchg sub hlt aad lahf jecxz xchg not lret arpl add sub dec mov mov or es (bad) cmp lods xor and repnz sub scas xor sub movsl movsb xchg pop test jg mov mov jg (bad) sub mov ficompl xchg push mov xor xor xor xor loopne es les push sub lret jl mov jb in insl fistp ret inc sub sbb xor fs incl lea dec pop pop outsb push or xchg jecxz (bad) xchg pop imul fcoms and and in fs adc aam loopne daa adc stos inc mov adc out pop mov loopne flds decb ljmp fidivr ret pop loopne aad mov inc jecxz add jbe ds cmp mov inc idivl fs pop push jl sbb stos scas xor mov imul rcll sbb mov push mov and lea sti cmc stc int3 push popa jne dec xchg inc xor pop jp xchg cmp clc mov sbb mov (bad) lret add sbb mov push add out dec sub jle adc decl repnz pop dec lock in push xchg gs push cmpsb aam push adcl jno repz pop pushf mov pop push lods lret stos test fnop mov mov lahf push cli hlt das adc add xor xor jns pop call daa ds scas (bad) push flds add push xor jp icebp mov and not inc mov inc sarb xor aam enter pop pop jne out ss inc leave xchg (bad) dec in fisttpl inc gs es int3 add lea ds ja lods sbb fwait fs lods sbb push jns clc aam mov mov lret rcr xchg cmp in repnz jbe jae imul cmp sub addl inc xor aam pop out jbe inc sbb jl loope stos andb inc jl sub fwait out jmp aam sbb ja inc leave or mov sbb jmp sub xchg iret push xchg pop pop cmp cmc mov inc mov out out xchg xchg cmp pop mov mov (bad) aas dec sarl mov push mov push xchg aaa scas leave jo adc lea gs dec lcall mov out mov xor jmp cmp cmc ret push ja icebp mov loopne mov sub push pop out mov add fsts in repz cmpsl and bound popa dec (bad) sarb adc pusha pop and out mov loopne scas mov (bad) aaa jmp rorb scas push mov fwait ret frstor push mov xchg out push ret mov out lcall ja cmp cmp sub xlat pop cmpsb xor inc sub js aad mov ds jae shlb pop adc enter adc pop lret int les sub arpl rclb ret imul sbb sub sarl sbb pop shll inc roll loop push and or sbb add arpl adc mov (bad) iret or jmp jns jecxz std les ret in pop and repz sub ja jno dec mov xor and pop test push jo aam and mov push stos ljmp mov dec sub push inc lods pop fldl adc fnop lret lcall movsb daa sbb cmc pop dec fdivs cmpsl push cs jbe xchg test mov mov jbe xchg lds aaa push sbb xchg mov iret pop stc loopne push add out (bad) cld inc mov stos mov push sbb mov rcll sbb scas das cld (bad) dec cld xchg or loope pop xor mov dec call inc dec adc cmp xor in aam pusha out mov call lahf rcll (bad) inc addr16 or xor popf pusha pusha jg add (bad) push fxtract out outsl (bad) arpl sub adc dec or out cmc cs fisttpl loop loopne push leave loopne andl jge sub sahf outsb add outsb fisttpl xlat sub outsl or jmp inc pop imul sbb jbe call (bad) mov fiaddl dec popf xchg scas lods imul push xchg insb es pop dec push pop insl int3 mov popf les xor dec insl mov adc add xchg mov insl pop inc adc inc xor pop bound pop int mov test imull inc sbb (bad) mov push fmuls ja push push xorps lods add sbb ljmp and push js rclb inc dec inc sti lods adc mov inc sbb xor pop je jle mull mov adc lret and fisubr add pop movsl push (bad) sti pop push or or push lahf pop stos xor push bound mov loopne mov mov jmp int ret test lret inc das ljmp push (bad) dec stc bound add dec sub std adc xchg and jno test in inc loopne fs add bound push mov mov jl sti cwtl pop xchg ret pop dec mov ljmp fsubs (bad) repz cmc lret jmp jmp sub xor test ret loopne mov mov pusha daa inc ljmp xchg out shrb (bad) jl hlt out (bad) dec cmp xor jl push inc mov out lret sbb adc mov stos xchg xlat (bad) cli add push mov es cmpsb jb fstpt outsl mov out (bad) dec lahf ljmp cmp jl movsl dec lahf xor (bad) adc gs test dec xchg addr16 or iret or aaa inc scas hlt sbb push mov cmp clc std aaa sub add mov mov (bad) mov lock mov jmp dec jo xor (bad) das inc test clc fsub mov pop fwait adc pop or push fsubr ret cmp dec rcrl out enter test out insl idivl or insl popf ds dec pushf or cmpsb inc pop sub mov iret sbb dec mov dec stos pop pop or add rorb mov and fyl2xp1 loopne mov inc sbb or sub xchg and dec mull popf push push jp xor inc sub sub xor lock or ret and out fldl sbb xchg iret ret mov notb cmp and mov xlat sbb push sbb int pop sub insl js scas push orl add xor push add jle insl or mov lea mov jmp in rolb mov pushf cmp repnz add mov sarb fdivp or xchg std push mov jge cwtl add inc jp or arpl push mov fisttpl mov movsb adc dec fwait test js std cmc add xchg hlt call pop xor mov sti jp lcall inc loopne test xchg (bad) psrlq fwait or jne xchg int3 aas inc movsb mov gs dec cmp inc lret in xor inc adc and and (bad) icebp jle lea jnp pop (bad) jb (bad) mov pop pop xchg sahf mov jbe scas sub popf or push roll das xchg pop mov add test aaa popa cmc adc sub jge cmpsl mov bound icebp insl and or pop popf out mov pop sbbl fdivrs (bad) pop sub and loope xor out xor lret dec push dec aaa aas jecxz arpl outsb imul add popf sbb pop in jae mov jg or mov arpl iret por iret fisttp ljmp leave lods mov mov xor outsl call stos inc stos add cmp out ret ljmp and push and or sarl daa jmp dec inc cmp jmp gs icebp sub cmp dec mov cmc cmc push sub mov pop add gs je xchg ret aam aas negb push mov mov xchg cmpsl push and out loop rol bound xor into call cmp inc lods pusha lret jle jge cmp cmpsb (bad) jno data16 lahf ret (bad) cs fmulp repz popa or mov and sub aas (bad) jg imul cmpl (bad) enter mov shll les leave fstpt adc repnz out xchg push daa mov (bad) xchg jae stos jo mov mov and enter sbb pop lea insb scas std jmp lahf cmp xor dec insb jmp xlat jno imul push test sbb mov mov inc sub les ljmp pop lods sbb push jg dec (bad) dec sub jg dec pop fwait sbb jl dec out aad dec cmp jp,pt dec cmp jnp fisttpl xchg cs (bad) sbb sti xor repz nop sar cmp adc or cmp xchg xchg cwtl pop jb repz mov dec xchg mov sbb mov mov xchg sahf pop ds jmp inc mov inc pop sub or adc sub mov (bad) xchg xchg fmul pop pusha xor mov xchg es int3 xor into sub lcall jmp or inc mov mov push in adc push sbb mov pop push ret pop (bad) jp cmp out scas scas popf inc push adc jo lds add pop mov test aam daa andb frstor pop cltd popa stos jmp jp mov push loopne add dec push fimull roll xchg (bad) jae sub sar gs inc aaa xchg jmp mov (bad) jl xor xor jne and ficomp xchg leave add sbb test cmp pop dec jl scas mov sub aas pushf push xchg iret fwait xor dec mov sub rcrb adc loopne divps std xchg repz cmc out adc push loopne cwtl push cmp xor enter push cli xor int3 push (bad) in test lcall adc iretw pop insb movsl (bad) sti lea and in ljmp insl test jmp sbb test or or (bad) pop notl into inc push push out xchg rclb mov adcl and push inc xor outsb std shr sbb orl daa pop mov mov xchg icebp push or leave cld cmpsl inc sub jae mov fsubrs cltd xlat adc mov outsl aas int sub sub fsubr push test xor inc bound add scas push jle ficomp bound das lret bnd mov mov rorl lret adc sbb xchg fsub adc (bad) pushl loopne pop or or movsl sbb cmp mov js adc mov mov xchg scas (bad) cltd add (bad) jae test mov xchg adc jo fsubrs fldcw xchg xchg mov jbe js sbb (bad) jno repnz inc adc (bad) fwait (bad) fisubl mov into mov jb fisttp out (bad) lret arpl (bad) add (bad) imul lret out repz xor xlat lea cltd scas arpl inc clc (bad) dec jb nop mov addr16 mov jmp xchg movsb loopne adc or testb add add cmc data16 ret pop outsl and cltd ficom jns popa test push dec movsl into dec sbb shr jg hlt push loop rcrl shlb into cmp push adc mov sbbb cmp inc (bad) pusha loopne call jnp movsl pop push fs jbe sbbl mov fsubs lret loope mov ret add hlt rcrl arpl or xchg imul int test xchg fisubr cmc sahf div aas loope ss (bad) arpl lods lcall pop xor pop idivb not jge push notl sbb xchg add cmp jg mov outsl push xor mov test cmp test in dec ffree cs jmp sti mov (bad) ja sbb xchg push dec insl sub enter fcoms sbb cmp lods fucomp mov (bad) test inc xchg bound jno rol adc (bad) mov in jmp loopne (bad) xchg mov and negl ljmp xchg xchg cmp js dec pop mov xor lds push sbbl cmp cmovl fisttpl (bad) (bad) cmp insl sub in cwtl cmp js mov and repnz adc jae inc add pop and ficom dec dec cs push mov ljmpw jle lcall sahf out lret jle sbb pop cmpb mov or ret pushf cmpsb cmpsb insl repnz or and pusha lret rcrb outsl (bad) ja iret mov rcr pusha shrb or rclb gs xor xchg cmc cltd icebp mov and clc lret (bad) mov pop dec ljmp cmpsb sti sbb fldenv push lret dec jnp cs jecxz xchg popa fucomip stc mov aad lcall bound add pushf enter push movsl rorl dec sub dec (bad) sub sub aad add mov adc jbe cld (bad) cmp sub mov (bad) popa xchg rolb mov bound fxch pop push cld adc fildl inc mov and push mov xchg (bad) nop mov aas sarl (bad) mov int and xlat jb loop inc (bad) in or adc and stos adcl (bad) out dec add cmp and adc aad in into mov ss mov and inc dec xor sub xor in pop mov std mov andl inc repz jne popa sahf scas inc std dec aas jne mov das aad shrl fnop mov adc stc or out and out fld add (bad) jae inc aad adc adc pop hlt xchg out mov out in outsl fstps and push inc sub push je push adc and sbb (bad) push dec sub sub daa push aam dec mov or pop dec pop fisubl push xlat pop mov mov outsl mov xor push ret gs dec sar lahf gs dec fcomps (bad) xor (bad) jne pop ds jmp cs fmuls jle into stos jle cmp xchg pop outsb mov mov ret aas and push mov mov jo outsb xchg nop stc ja lods jno icebp in xor push jg lea je pop sbb outsl mov clc inc clc push test outsb mov add test hlt fwait hlt call mov inc lea push inc out bound sbb mov imul jle pop pop mov jb adc push loopne cld data16 dec push jp mov in push xchg outsb gs aad sub scas push inc pop ret and push and fild popa icebp int3 pop dec out or jp cmp (bad) xor jo mov push ss lret sbb or scas push mov cmp push frstor fbld movsl repz sarb push (bad) imul clc xor mov xchg xor fisub shrb (bad) mov (bad) sub mov divl jg fs sbb inc insl insl notl adc mov popa rcrb test loopne int fdivs pushl pop inc je dec mov cld scas xchg mov xchg int3 push jnp sub popa dec cmp shrl cmpsl enter or movsl lret xchg cmp daa int pop pop scas aam das sub dec xchg inc xor mov dec xor fcoml pop aas sti repz jecxz repnz and sbb sahf push or or xor cmc ret arpl xor sti faddl push sub jg fistl cwtl aad jmp push (bad) fadds and xchg mov fdivrl dec push lahf sbb sub cmp mov dec mov ljmp xchg or mov lods push mov mov xchg fdivrs enter sbb sub outsb test (bad) lods jae outsb mov (bad) xor iret aam mov add data16 xchg add negb mov sub cmpsb jp sub pusha fdivrs (bad) scas movsl jo cmc pop pop mov adc nop leave jl std lahf sbb loopne rcll scas lret add lret popf pushf aaa fwait mov scas mov push divb es icebp jbe fildll mov sub dec mov sub xchg lret jne pop jp fildl jae add jg push rorb incl mov mov adc loop aas mov mov mov inc sub stos stc inc xorb addb or cmpsb adc xor mov adc jecxz mov js push stos push rclb out push imul test cmp cmpsl clc rcll adc dec or push or stos into jne jnp cld mov xchg and negb lods call inc sahf push out xchg adc aam pop push push cmp xor jg jg arpl and insl fcmovnb or adc lea (bad) sti mov pusha mov in xor xchg int pop das or (bad) ret fbstp pop push dec ja add insl out test (bad) or xchg addr16 arpl rorl (bad) sarb or xor or ja lret loop mov push adc sahf jge aas ss (bad) jp in jnp ret divl push xor cmp outsb cmp sub aas out mov fldt and dec repz lret xchg mov cmc sub inc (bad) xchg lock (bad) inc or (bad) cmp add gs cli mov es sbb jb cmpsl rcll xor movb rcl loop std popa jae repz xchg push push mov shlb mov push push xchg sbb movsl loopne in sub push rcrb cmp fsub mov scas xlat xchg mov lods insl jb mov push testb sub or dec jae dec mov mov into xor pop repnz and ret clc jnp stos stc add sti adc and outsb dec outsl into loope loopne aaa aaa add xchg pop pusha inc out mov fstp sub sarl imul mov lret movsb jae pushf xchg xor lock push aaa mov push lock sahf and or sbbb cs sub jecxz lds mov cmp stc call repz movsb (bad) ret push aas add dec pop cld jns mov jne fwait dec pop pop jno mov sub dec mov jmp inc add add mov fldl push xchg in xchg mov jge push dec jg sahf mov mov jne mov lret jmp xchg (bad) fadd pop pop sbb mov and adc and mov pop pusha (bad) mov bound pop call ljmp iret aam inc lock in adc push cld aaa pop jl pop fidivr enter fcom gs addr16 cltd jmp (bad) pop es xchg bound sub aas jmp lret mov int (bad) mov adc xchg mov dec ljmp push pop push and sbb insb cmpsl pop icebp xor xor push ror cwtl jb and sbb (bad) inc dec jne lret leave ss les out clc sbb push xchg inc pop or mov xchg push data16 mov loopne js bound mov cs jne sbbb in jb int3 cmpsl lea sub lret aaa mov in lahf sbb sbb sub into xchg imul fnop mov push movsb shll inc sbb sbb decl xchg jmp add add arpl lds push mov mov (bad) fidiv into (bad) jl or jle mov data16 stos inc clc or dec div out pop lock mov popf mov inc push (bad) aad push mov clc or divb push sub test xchg ljmp mov push mov je fistpll insb ds sbb mov xchg or js cmp add icebp cmp fstl sarl repnz xchg movsl inc ja inc or int xchg dec out pop stos mov jns pop sarl (bad) cmp rorb pop pop pinsrw out jb,pt fdivrp cmp mov les xor lds dec (bad) mov movsw jbe add mov les dec xchg mov dec ja dec pop call mov (bad) push push insl dec pop xor (bad) loop nop ret lock (bad) ret ja mov int subl out pushf inc xchg adc pop jno loopne (bad) ret fisubr jb shlb sti fwait pop movsl mov rorb add mov movsb sbb cli es sbb lea xchg bound xchg addl out (bad) cmc xchg jb dec push sub cld sub inc das sbb sbb lret fidivrl xor sbb cld add sub adc fnstenv pop sbb jnp insb mov sub sbb insb outsl out sbb outsb xchg repnz inc bound jmp cltd std sahf mov rol lea pop push cmp push shlb dec add pop pop cltd jne (bad) ss cmp loopne sub sbb loopne cld jmp cmpsl dec pop and and cmpsb or sub pop pop jg sbb and dec jne sbb int3 cmp stos out sub sub lea insl or mov jnp mov mov sbb push mov adc stos pop je and inc pusha mov outsl scas dec adc out and js aad push sbb pop adc xor lock pop push sbb ds gs dec movsl sbb mov sysexit inc mov addl rcrb cld cmp mov xor (bad) neg jbe mov xchg rol add or xor sub xchg (bad) and call jg jno mov ds add adc imul (bad) mov loop shrb lods push cmpsb inc (bad) test sub add cmp mov hlt roll cmp lahf xchg xor mov mov add xchg rol or lret call fisttpl cltd lahf arpl cmp (bad) add sahf pop icebp mov xchg xchg test push aam adc lds loopne xchg lods jge out into lds inc push pop pop or push or data16 jno daa push stc outsb mov and cmpsl sbb pop ficomp push xchg mov loopne pop jge mov imul adc aas mov daa enter or test mov in fcoml mov scas xlat sbb push push and lea outsl cli in js sub cmpl or lcall pop push aad sbb insl loope dec in out dec pop sbb pop sti mov insl leave xor and pusha test cmpsl jae mov popf sbb sub and rclb push mov mov icebp pop ss sub mov jne and out cmp mov sbb mov or pop in or sbb movsl xor or sarb clc outsl incb fnstenv adc adc adc cs jno add bound xor (bad) pusha mov hlt mov cmpsb push xchg sti sbb pop add mov andl mov or jecxz addr16 es lods aad pop mov and jnp xchg fldenv xchg mov lahf mov (bad) xor nop sbb sti fiadd jle pushf push popf test xchg in push aas ret pop or cmp sahf mov add jb mov jnp movsl adc inc add (bad) add inc out int sbb sarl mov mov sub sbb jnp leave les mov push xor push out mov in push loop fld rcrb jg call pop or add out ds cwtl adc sub rcl mov fiadd lods lods push outsb lahf int pop sbb sub aam push mov sti mov adc push sbb jge movsb hlt mov (bad) rolb sub pop imul push inc fwait rclb and out adc sub cld lods pop add nop cmp sti sub inc cmp push and inc mov dec and cmp lods pop cmp mov push adc icebp cpuid jnp adc stc or mov rcrb xor mov mov lsl dec idivb sarb add mov test out jae scas orl mov fs addr16 int3 jecxz sti das sbb cmc hlt xor mov ret mov fwait dec jmp xlat dec sti dec lahf daa jg cmpsl lock xchg data16 xor popa xchg dec aam add inc sub jae push mov arpl mov push lock mov sti lcall aam sbb xchg repnz cmc pop fild push cmp sbb sar imul push xchg (bad) outsb jmp int add jle jmp cmp jge or (bad) popa adc call jp sub aam pop cmp dec pop cmc inc and pop repz test loope sub add xchg push insl or std enter ljmp lods dec (bad) add jnp rcll mov je mov pusha sub ret test repnz hlt gs sub stos add sub cld nop mov in mov lock movsb sub and mov or into mov shr mov xchg in ret fildll lret mov or push cmp add dec clc ds pop pop mov lret les or les push sbb or stos adc mov or push xchg icebp push mov or inc cmp dec mov lock stc arpl mov insb (bad) dec cmp minps adcl mov xchg cs mov (bad) lds inc in mov popa out mov test sub mov call xchg push jmp lret icebp jns inc push cmpsb daa int3 cmpsb (bad) sbb fdivl mov push scas mov cmpb or fldenv inc cmp rolb rolb mov mov fisttp mov mov repz jae mov cmp repnz xor stos sub inc push mov pop pusha push xchg push arpl adc popa push or fs hlt lods ljmp mov mov push je or dec mov adc pop or out loope (bad) xor bound dec leave insl push dec adc inc iret lock sub inc cmpsl lret lahf stos je jge cltd xchg adc in mov movsl stos xor cmpsl or int (bad) daa adc out imull add repnz cmp mov addr16 pop lods in mov sbb mov or rep add pop push cmp repz icebp push inc add sbb pop push lods jb pop jnp arpl mov xchg push inc or jns data16 cli mov and lcall lock mov test mov or cmc cli out call fwait xchg or bound add inc loop mov outsl js pop adc push cmp xor mov fcmovnbe cmpsb mov jne mov popa push (bad) mov cmpsb jg nop xor and popa stc jnp and jmp adc icebp lcall repz cmpsl into hlt mov iret cltd mov xchg inc ja sub test aaa xchg frstor push sbb es lods adc lods gs (bad) movsl jp add ret subps and aaa push rolb cmpsl (bad) xchg push out in jmp jg inc jns movsl (bad) sbb stc shrl mov hlt call pop inc sbb fistl sbb movsl lods mov xor (bad) lds cmp adc imul pushf (bad) fildl mov leave sbb cli leave mov add cmp mov movsb xor push mov in inc mov or daa repnz movl sub add imul inc sub aaa mov xchg out addr16 cvtps2pi mov cltd mov loopne xlat fwait sub ds dec lret rcrl testl adc xchg jnp cmc mov or sub mov mov in xor and imul lock movsb sbb addr16 push xchg data16 mov cmp ds dec sbb imul lods and sbb mov cmpl aad sub leave mov xchg xchg cltd (bad) fldt xor mov mov popl test jne jae (bad) sahf sbb lahf xor mov xchg adc cld lods dec lds mov mov push and fdiv jae sbb (bad) std dec jmp in data16 (bad) icebp mov push and adc sbb sbb adc xchg jle jle pusha jp popa push xchg pop lea xor cmp inc mov cmp mov pusha cmp pop fiaddl cmp out adc or fs mov fs or xor lcall cmp mov or outsb and add jo sbb pop mov aam pop xor mov pop test (bad) mov dec pop push mov fwait pop jbe icebp and jmp cmp xlat fdiv loope lret (bad) popw dec mov movsl scas adc arpl xor xchg sti sti cmp (bad) fiadd jnp adc xor out jb mov (bad) scas adc popf adc in and adc xchg inc or mov jle lret call lret jle pop add (bad) int3 (bad) push iret mov aad sbb imul sbb in dec jl and aam and pop and stos addr16 faddl popf push fisubl xchg mov pop je mov sahf cmp mov mov fcomps pop into push mov ficompl pushf lret std lds pop mov push popa (bad) iret das jnp jge push (bad) les lods popa pop inc add inc ret xchg rcrl and leave repnz jmp jb jns sbb lods pop clc cli pushf sarb or lret movsb xor mov or out fnstenv popa jns dec fldt add jno xor cld rclb jmp (bad) je jae sbb mov (bad) lcall mov frstor cmp in add ds ds fisubr pop mov jl cmpl popf sbb push pop insl iret mov sub out test stos call stc outsl sbb ret add cmpsl cs dec imul fmul jmp jmp fnstenv (bad) and popf cwtl xchg cmp push push mov and mov sub pop int repz adc outsb out in pop bound or clc bound mov rcl fisttpl std popf mov mov pushf sbb xor pushf shl out and fild adc aam loope mov fnstsw fstps leave in out xchg (bad) rcll incb dec out ret xchg std mov sti scas jp (bad) sti lea pop dec or sbb insl fsubrs fdivl xlat aas adc cltd inc xchg sub jp fwait addr16 out inc pop mov test inc ss es dec stos xchg or jle push arpl cmp ljmp or lahf mov sub fldcw push lcall pop push jns fistp mov gs xchg arpl mov mov xor (bad) or push mov enter dec lods scas mov mov xchg sahf mov ljmp sub mov mov fadd adc loope mov test and mov push pop insb ficom jl imul push bound lods dec cld push push adc ja popa pop iret xor (bad) cmp enter adc cmp enter or xchg daa add das icebp mov inc mov ds ja or mov insb repz xchg fsubl shr inc sub pop inc cmp and mov and push jno sbb mov jle imul cwtl pop jns mov fnstsw mov push add (bad) jmp mov and push sub and jecxz add movsb add aam sbbl stc shlb scas jnp (bad) ja and inc rclb and or mov stos das cld subl enter push adc mov jnp pop mov sub (bad) jo aas (bad) pusha jae mov pop out fisubrl push in aaa int mov inc mov out dec xor pop loope dec lret or faddl pop lock ja hlt popa sahf nop enter xchg jb pop push mov or iret psllq sub aam and pop (bad) loope and mov sub sahf shr popa push push cmp pop popf ret adc or mov ret xor fimul sbb cmp xor sbb das push (bad) xchg adc mov xor icebp jl dec mov and out xor or xor ljmp pusha xchg add cmpl lods lret popf out pop lds xchg arpl repz lret cmp addb (bad) test jl outsl lcall dec xchg shrd int sub cmpsb adc hlt aam mov jp into (bad) push outsb mov mov adc mov sub jmp jge mov (bad) int3 or pop lds dec dec adc mov dec xchg adc out xor cs and add daa mov or or rclb (bad) add scas daa or dec adc and sub jmp nop cmpsl movsb adc call mov in mov jo std xchg ja inc pop sbbl and mov sahf dec mov test or movsb dec and adc pop sbb in rcr pushf repz xor and out enter clc jg mov in push push push or lock in lret xor mov jnp cmpsb inc loop dec por push in xchg adc das (bad) addr16 pop dec pop (bad) inc stc push dec and arpl pop adc or xchg and je mov cmp mov cmp out out popf push frndint imul cmp in push roll daa sbb mov (bad) mov jle sbb fwait push cmp dec bnd pop call leave adc fdivs sub xchg pop pop jmp dec sub jo xchg orl fcmovbe and call (bad) out adc in negl lods mov (bad) out xor std adc das mov jg ror jg adc test cmp inc xchg out pop out add mov sub dec sub hlt bswap add (bad) out imul inc call pushf and mov cmpl loopne jmp popf sub fisubrl mov inc jne adc push in adc int3 (bad) xchg jmp cs loope ret mov out fnstcw push and sbb out inc std push mov subl xchg or sahf ficompl fdivrs jge dec dec jae ss es fidivrl push fwait mov xchg test mov or daa or (bad) in loopne movsl inc aaa xor mov sub repz mov les jae cltd and scas leave sub enter mov cmpsb adc cld fnstcw add sbb cwtl test cmp sbb add dec adc jns xor leave inc pusha gs pop push test mov jg ja jb roll jl in cli (bad) les pop xor sti ja movsl test dec adc lret mov push pop lret mov rcll les pushf (bad) jg push mov bound stos aas cmc and rorl lret ljmp scas enter (bad) mov ror jbe rorl xchg das sub mov sub mov sub lea stos xor add cwtl notb xchg dec pop inc inc mov test pop and stos pcmpeqd fidivl (bad) jae jecxz xor (bad) xor bound lret inc in mov add cmp push jae bound mulb aaa push xor daa mov mov cltd and or mov pop sbb and jno inc imull dec and rclb out rcr cmp jmp sub out sub adc lret scas aaa cmp or mov push dec mov (bad) mov popf inc in inc push push je mov push add das aas stc rorb add jle mov xchg xchg push xor xchg movsl popa pusha call pop shrb in cmpsb xchg push stos jb jbe adc jno sbb fs jle pop cmp ret (bad) mov inc std sbb leave pop sbb add and (bad) repnz lcall rorb fistp xchg mov and out je mov lock (bad) xlat call popa push adc ss dec push push rcll enter mov add scas out xor pushf call sbb push insb jns pop inc stos xchg insl cld mov and rclb fiaddl xor sbb inc cmp (bad) dec mov push push notb and movsl or cmc adc in repz ljmp ja daa call jbe mov lods or (bad) iret sbb mov js sbb bound outsl adc mov push push mov mov negb xchg test jp rcl mov dec into push outsl lret lea faddl insb pop push push mov sbb fcomps fist dec or mov (bad) mov loopne cmpsl data16 ret xor cmc jb pop jge addr16 push test xchg arpl hlt subl dec or int3 (bad) icebp xor inc adc popf test push imul or (bad) (bad) aas push inc (bad) (bad) bound pop push mov test jp push shr push rcrb mov aad imul int3 xorb lds mov add xchg dec sub and mov je add mov dec fwait sub shll inc cmp jg fcmovb mov sti fiaddl lret int3 sub fdivrl int3 cmp adc stos add clc lcall mov or (bad) mov xchg xlat fwait iret cmp test sub fildll mov (bad) jae pop ss cmp cli lock add push lods dec hlt push in jecxz stc mov fimul loopne mov scas inc mov inc and adc shrb out mov subb test cmp jns out (bad) jnp gs cli popa mov out push mov int xor (bad) aaa and test repnz pop or or pop push imul sbb ret addr16 fs insl clc jg lret jecxz stc sbb mov jp in cmp das adc int insl sarl or mov cmpsb aas pop mov out (bad) mov and pop jno hlt mov test inc cmp pop ret (bad) pop std adc jmp push mov jmp adc js push clc rorb ja test (bad) testl pop es daa or mov lock fwait fs add mov mov mov adc mov mov (bad) lcall ficompl in jle and xor (bad) stos jp in sti test loope xchg add adc ja add xlat aad inc lret sti out cmpsl or ss arpl imul dec xor or in xchg add sub aad add xor inc dec out or loop leave loope inc mov stos jmp popa lock jbe adc add int or sbbl inc pop lret testb (bad) hlt sti pop adc loope lret jle scas mov lock into adc ss cltd sbb adc (bad) inc pop in xchg scas shrb pop fmull add movsb das or push add sub xlat rcrb outsb pop xchg pop lds sub iret cltd and out jge mov mov lea stos jnp mov scas jl shll ljmp or (bad) mov int rorb adc jo adc loop aad pop out loopne inc aaa push sbb jo push push jae (bad) xchg pushl sbb pop mov rolb pop cwtl insb popa pushf cli cmp xor xor mov repnz pslld mov add mov je pop pop pop lods jns inc test jns pop add dec adc jae rcrl jno mov test vsubpd add out test out xor repnz and je fcmovb dec mov inc xchg push popl das push inc mov cwtl mov push test ret dec fstps subb sahf ljmp jns int3 mov iret nop das xor mov sub mov repnz cwtl cmpsb enter push into fst rcl sti and xor inc lods loopne dec adc in inc pop lds cld lods out gs loope pop test inc pop sti cmp ljmp pop cmp push fdivrs inc push cmpsl push sub add aas xchg cmp mov mov mov aas sub test fwait mov sahf or mov rcll test fdivrs xchg mov mov lds mov outsb mov dec (bad) aam dec mov (bad) and pop jae jmp mov hlt mov hlt xchg mul ja flds xchg sub bound mov hlt dec xchg in fldl xor and test (bad) mov mov (bad) sbb jb stos hlt mov sub mov sub fcoms gs ja mov clc adc adc mov cli dec xchg pusha std in xchg mov jae pop bnd push mov js push adc lahf scas lret lods push sub mov out es add call lcall das push push daa push push int mov mov xchg xor ss mov mov sti sbb lods push push sub popa jbe,pt mov mov adc dec (bad) mov add imul adc pop insl push dec dec int3 and js add or jle xchg addr16 adc movsl push aam add aad cmp fsubs sub fwait popa jmp cmc fnstenv fimull notl xchg mov lret (bad) lahf or into inc jp ds stos or inc fcoms ja ds mov les inc test mov xchg clc add fstpt dec nop jno mov hlt les add cli (bad) xor pushf stc dec jo jecxz test lahf call fldenv inc addr16 mov add sbb (bad) jg movsl or rorl adc push test and ljmp int push lret in sbb push daa loop cmp xchg and push cmp adc repz flds cmp pop mov dec stos clc pushf sahf loop push sub mov outsb or inc jmp or dec or push mov in adc cvttps2pi test xchg jp outsw sbb pop cmp jae stc pop lock in and push test dec outsl enter test jbe pop push test xchg (bad) insb sub pop stos sub xchg ss movsb adc daa cmp jbe into into rolb mov lret or and in rol aad stos push or push (bad) jb push aaa adc pop fist icebp push in pop mov push je dec cltd or fidivl cmc or es int3 (bad) negl inc data16 cwtl pop fistl mov repz ss sub (bad) iret std (bad) stc adc mov push repnz mov pushf push and (bad) fstpt or out mov cmpsl push inc sti insl sub jnp jno outsl (bad) mov or jp mov xchg xor jns push pop push imul sub or cli xchg lret stos mov add inc dec lock movb es mov pushf fdivs pop jg fnstsw xor inc sub aaa aaa sub jle in pop aam pop fs push lods cld cmc in and jne jl sbb jno push push addr16 push std clc lods and push out cwtl ficom or fbstp lahf fadds mov or shr jo orb add inc in inc jo aam push xchg push arpl jl int hlt mov (bad) fisttp xchg dec into shrb push inc or xchg sbb rol jl and xchg xor loopne addr16 jno xor mov cltd mov nop fisttpll inc in imul pop cmp dec mov jne mov xchg mov jmp scas rcr out pop and iret and out pop jg cwtl and test push and nop stc test mov fmuls cwtl xchg (bad) sub mov nop outsb subl out add loope push push mov lret cmp fstpt mov dec dec clc dec xchg xlat lahf mov stos sbb or (bad) mov into ss and pop movsl (bad) adc flds jmp xchg xor ss rcll fwait jnp aad mov roll adc inc inc mov (bad) pop lods pop fmull mov push jg inc adc xor xchg cmp mov mov jl pushl mov jae (bad) repnz inc mov xlat lds sahf pop mov jle loopne sti roll cmp jle xor jbe mov mov and call jle pop mov lahf pop pusha xchg bound loopne jnp out jns (bad) or outsb sub cmp pop (bad) test cmovnp mov sqrtps mov cmp add icebp rcr pop jbe fcoml int lock dec push sub out jne andb push mov push mov les clc or pop sub mov pusha lock push imul (bad) add mov mov ljmp adc insb or fcomps adc outsb out sbb pop loope push int3 je test sbb inc out cmc lods ror sub dec jl lods xor xor shrl push in stos lods and mov into xchg outsb xchg inc xchg mov lcall jp cmp daa xchg loopne add jge,pt idiv jmp pop jl sarl (bad) lds fsubrl loope mulb das test and or mov fmull xor int ret adc je sarb mov mov in pop jo xchg fidivr lcall mov push (bad) inc and xor mov stos aad (bad) mov out sti daa or xchg ror sbbb pop cmp or aaa int push pop adc mov push jae inc or (bad) inc je cmp inc dec push mov das add insb out adc into push pop lock xor hlt icebp sbb dec lea sub pop test and mov sbb arpl add dec mov mov xor jo pop dec pop out repz rclb pushf insl mov mov mov sahf movaps repz jnp clc push and mov mov fsubrs test int addb mov ja jno xchg mov daa loopne fildl sahf add rcll mov and fs jb out inc repz out xor jb mov lret adc or push insl repnz mov push dec xchg mov cmpsl push push aam xchg xchg das fnsave fistp xor stos mov fbstp sahf nop fldl add imul cltd dec stos jg adc inc jno push xchg aam loop mov mov mov add pop inc (bad) out pop fwait pop inc xlat (bad) lds loope fcoml and dec lret sub stos mov xchg loop and xchg outsb cmc inc repz xor xlat rdtsc and push mov pop xchg shr outsl mov lahf aam lock push push xchg adc jb jns (bad) pop out loopne imull adc ds dec mov pop jle push iret pop or and std cmp pusha (bad) in cmp fsts test popf out push sti test jmp es fs inc sarl xchg xor in lods mov cld xchg lea push in sti dec scas in fs fcompl pop (bad) jo and sub and fsts je xlat andl or rorl das or lcall mov ror add pop pop es (bad) out rolb mov cmp inc ja dec ss cmpsb push loopne xchg adc mov sti ficoml in push sar xor mov cmp cmpsb mov push mov mov mov mov sbb jae mov (bad) inc call jb or push outsb cmpsl imul (bad) movsl test xchg mov cmp pushw cld or dec sbb enter lcall iret xchg dec push push sub pop sub js adc pop jp addr16 imul or jg movsl incb outsl orl iret xor pop cmp mov insb fsubr jl xchg in popa mov sub out cwtl sub xor rcll xor push jge addr16 adc outsl stos mov leave movsl stc cmp push (bad) mov mov stos add xor cld in out sti out test (bad) loope arpl adc (bad) scas mov jp add pop sub mov cmpsb sub cmp and fbld scas xor mov lock add rorl pop shlb and (bad) into sbb jmp in adc sub pop test daa movsb lret cmpsl pop clc (bad) push sahf dec fmull popa xor outsl out cmp or (bad) sub xchg mov hlt sti idivl rcl add outsl adc mov mov insl (bad) rcrl loope mov xchg ret rcll ds or outsb aam out repz xlat imul push sub dec mov fwait pop dec jnp push inc arpl dec call sbb negl enter pop push mov pop arpl mov xchg lret fstps push sbb jmp mov or (bad) push lea dec push fbstp push js lods insb cs mov es test mov push jg,pt jge addb imul inc clc mov (bad) mov mov add jbe lods imul fisttp sub xor scas cmp nop fs push jae lea mov fdivs mov sbb and fisubl mov xchg incb in push push or arpl pushf (bad) cmp push test fldt xchg pusha mov daa scas rorl fcoml stos mov iret and push mov sti or xor pop mov subl (bad) fs (bad) sbb divl arpl add lods cmp mov or mov ja mov pop or (bad) xor push lahf xchg addr16 lcall in dec subl mov pop cmp cltd outsl scas and fcmovnu dec in jns,pt mov jle fdivrs pop aad cmp fsub fwait sbb mov ljmp adc leave pop xor mov in cmp subb (bad) testl sbb (bad) loopne dec cld sub dec int3 ldmxcsr in jl adc aaa xchg loopne clc jle fwait int3 pop les push sbb pop jnp (bad) aas jo xor jg mov adc jp fcompl stc movsb or popa mov push fimull jae dec push inc movsl dec and fstps or xchg shrb pop adc push push movsb (bad) dec mov push repnz out in lods mov adc rclb lcall test add push scas sbb xor pop rolb rol mov shrl enter into lcall push adc push scas mov sahf sbb push sub (bad) scas fwait ds jo in scas or cmpsl inc das push (bad) cltd rcll sub pop leave pop dec jl mov enter ja test cmp inc lock andb out orl sub mov enter loop pusha scas mov ja xchg mov aam jmp (bad) dec xchg aaa out dec cwtl sbb cmpsl lods add arpl and das je adc into or rep dec pop cltd fsub mov sub jo das pop ss or push in loope add xchg push call xor lahf ds cwtl xchg popf popa mov pop and dec (bad) xor call (bad) and xchg add sbb push or js int3 mov (bad) addr16 lret sub sbb daa and push out fstl inc shll out dec adc push aaa pop mov out ds (bad) mov fiaddl xchg insb cmpsb fsub jae orb outsb and cli jecxz popa outsb sbb fldl movsb pop (bad) dec gs mov pop and or mov (bad) sbb jae scas std outsl pop imul push out sub iret loop dec fs dec loop loope push push imul es fnstcw pop mov repz push sub or dec lods inc insb mov xchg shlb (bad) sbb push mov xchg jb std sub inc sbb jns push cmp (bad) fisubl test mov jnp push stos mov dec cmp jl (bad) int add sti pop ljmp mov xor mov mov (bad) lock test inc nop dec negl jnp sbb inc inc inc jnp repnz shrb mov dec inc add jge inc data16 mov sbb xchg inc lret pop sbb roll cmp inc aas jmp incb stc out lea ficom mov cwtl repnz addl jmp mov xlat dec mov xchg dec pop in pushf xor pop and test jns mov push sbb push fneni(8087 mov addr16 jns cmp and push cmp stos mov popf inc lods popf lret mov scas mov xor ljmp pusha cltd lods ja fs jbe xchg jmpw aad mov pop push movsl (bad) in outsl ljmp popa sbb cmc fildll (bad) mov xchg jo adc dec jl mov bound sbb sbb popa mov lock mov add pop xlat push mov outsb sbbl fwait lcall push push cmp inc adc xor xor addr16 pop cmp scas mov mov sub loopne jp pop stos inc ret add mov fs in rcrl dec xchg sub add xchg gs es jp dec or fisub adc stc adc pop push adc jmp lds je dec int jbe clc test cmp xor jge divl syscall pop (bad) or sbb insb fmuls lds pminub mov mov in out fmul cmpl or sbb sub add lds hlt inc xor adc iret xchg mov lock lret fbld (bad) xchg dec and lret sub test push jne xlat bound leave fnstsw or add das daa nop sub add int stc ficoml push jmp pop movsb pop (bad) out xor adc mov ret (bad) lods mov push out icebp xchg adc inc aas aam xchg adcl pop (bad) xchg pop js outsl daa cld popf pop and cli mov cltd in sbb rorb out call (bad) fistpll imulb inc mov ds add dec das cs lds les mov mov cmp cmc mov sbb outsl push cld dec insb (bad) rclb rorb jno shrb enter inc pop stos xor cmp mov repnz xlat enter ret loop push orl adc push pop cmpsl dec repnz cmp mov pop test push stos daa mov pop pop fsubs mov lock fmulp xchg scas mov dec imul data16 ljmp xor mov add arpl add outsb rol cmp jmp adc adc je mov cmp rolb mov cmp in pop jmp xchg jbe sbb scas jne xchg fs outsl (bad) or xchg jmp sub cmp jb mov rcl aam cmp push xchg sub or push xchg pop mov push add subb sub mov sub sbb xchg jnp adc rorb or jne push xchg js and cmp mov sahf dec sahf (bad) mov add dec daa mov aad cmp jg imulb stc outsb dec mov into test mov insl stos gs (bad) mov sbb popa loope,pt pop lock addr16 daa in adc add sti inc outsb (bad) mov and and stos cs outsb mov leave fcoms test sub data16 xor lahf xchg jbe adc imulw mov int out sbb or adc dec mov insl dec cwtl idivl sbb jnp fsub jl jae loopne xor mov pusha jl aaa inc adc jns sbb push daa (bad) movsl dec pop xchg push xchg mov push adc mov jns or inc cltd nop (bad) jae lods frstor jmp xor mov adc mov cmp mov cmp jo (bad) in mov xor xchg sbb stos jnp adc cmp lcall mov lret imul adc sbb or stos es pop jp mov sbb fdivrl pop pop je (bad) in and clc cli mov aad sub pop (bad) fs popl push pop sbb (bad) repnz adcb popa jl adc (bad) psadbw inc insb mov sti and jno cmpsl dec adc jae sbb and add in mov out faddl jg xor fist lock pusha or mov mov hlt inc stos (bad) pop xchg ss xchg and mov test mov cmc icebp cmpsb inc sub lret in cltd mov mov mov inc xor mov xchg push dec les enter ja rcr cmpsl cs bound loop rorb cmp mov xor stos mov xor repnz fucomi pop cmp pop jge je fldcw dec and mov push cmp sbb mov cmpsl and sub ljmp (bad) hlt test or shrb xchg pushl push xchg daa dec push stc fdivrl xchg in sbb (bad) jmp mov pop stos movsl movsl les in rorb jecxz inc jmp xchg aaa and mov (bad) ss lock stos sbb rorl rorl pushl inc dec or movsb cmpsb inc push or in out pop push cmp dec mov fs hlt pop inc insb (bad) cmp push nop or mov outsl cmp imul mov aad in mov out andl jne fstpl movsl data16 loop scas (bad) sbb xor frstor cwtl js inc scas daa or lock xchg xchg test and mov imul or mov cmc je mov jno (bad) jae xchg sub or or pop dec pop nop scas or add outsl (bad) lahf push loope add std mov adc mov repz out leave mov inc insb js jge dec mov setle lds jp nop dec movsl loopne popa pop cmpsl push les dec and int3 jne add cwtl or sub push jecxz sarb sub adc mov mov cld ret rcrl imul dec jb fsubr cmpsb xchg adc movsl sub aad xchg xor push xor xor sub enter xchg leave push pop sbb mov fwait pop testl jecxz,pn sbb (bad) mov insb fbstp inc sbb or (bad) adc xor mov inc stos add adc out movsb mov imul dec scas rorl inc mov lcall sbb pop mov and jne sbb leave mov je and lcall loopne lods push jo mov popf iret addr16 lret sbb or (bad) int jecxz or pop negb add aaa loope addr16 call cmc jb cld (bad) scas (bad) xor push inc inc fisubr adc mov xlat pushf decl hlt push std push das lock push and (bad) aam imul lahf xchg fistl sbb pop ror (bad) mov movsl dec cmc repnz adc es (bad) rcll in sbb pop icebp setns mov loopne arpl in pop mov inc fisttpl (bad) jl clc fdivrp lea dec jg adc push inc jns sti (bad) jno dec sub decl ficomp lods cmp push loopne inc mov in out cs push dec push ljmp (bad) sbb mov insb or into insb mov mov adc pushl and hlt insl cli iret fstp and adc cmc push cs mov lea inc and data16 cmp popf lock insb movl push movsl dec and movsl lods mov jno or push add sub clc and arpl inc fsubl test push arpl shr xor jb je test mov es ljmp in les mov jbe addl and cmp fimul jno jo inc inc cld push popf in or outsl mov out lahf sbb es popa in sbb in out adc shrl in js or xchg xchg hlt jge into repz push jecxz mov sub outsb (bad) je sub jge je lock inc test add push jne sti hlt out xchg jge sbb jb xchg (bad) popa mov aaa test clc mov loopne (bad) jno stos jecxz xchg scas divb jecxz or lcall sahf cmp aam sbb push cltd test pop scas outsl lods xor ja loope and daa mov add dec cltd mov push aas imul jp lock mov fldl aas shr jmp sarl pusha cmp call insb dec xor sbb cmp int push mov es mov inc out push fcmovbe jp xor js inc or outsb std cwtl sbb imul mov sub dec mov lods popa aaa xchg les stos mov or cmp cwtl mov lock in sbb xor fidivrl ds lock inc out pop ret add sbb outsb sbb push dec (bad) lods cmp imul jb jmp sbb neg or nop lret lret xor adc fwait lock cmp scas push test xor mov mulb mov push lds incl sub das fadd cwtl lahf and les cwtl push loop outsl jbe ja or xor push xchg popf add repz (bad) push movl mov loopne mov mov out and fwait xchg shrb jns inc pop aam inc inc into cmp xor cltd ss fnsave inc icebp out mov push xor dec sbb push sti lea lret jnp out dec push daa push cmpsl aad mov mov push inc bnd jno add adc fsubrs stc ss movsl das xchg test (bad) dec lret mov in and in rcr or mov sbb and xor outsl daa mov mov fwait mov mov imul cmp in sbb loope push add cld pop lret fcomps jae mov enter jae mov and enter mov (bad) fiaddl push add mov pop sbb mov and mov repnz js mov dec pop test add mov mov pushl jb popa mov mov jge cmp addl scas or cmp leave dec sbb xor fildl jp out xchg adc xchg push sbb pop push cli scas repnz sub xor arpl and push jne and mov push and arpl jne sbb cli lock stos xchg ret jge xor xor cmp mov les adc mov out dec je aas sbb popa xchg ljmp mov mov out (bad) fistp es (bad) adc orl int mov xor enter sbb dec sti inc rol lods add xchg push out dec divb lds cld sbb cmp cltd fadd add lods repz in aam cmpsb int3 mov jge cmpsb lds jge sti add fs jnp mov or xor (bad) icebp jno mov pop fs xchg push inc lahf adc jp cmp cmpsb adc (bad) mov loopne mov ljmp inc xchg js cmp test pop push or call sub (bad) mov (bad) pushl ljmp mov jle mov jge divl adc and or sbbl jmp test push divl loopne clc ss push or add adc test jbe ret cmp (bad) and adc jno ljmp mov pop scas sbb fsts mov jp popa rclb das xlat cmp pop repnz pusha iret in bound inc cltd xchg lret mov push lods in sahf movsl lcall repnz inc adc pop add sarb sub cmpb notl (bad) push addr16 cmp sahf cmp mov xchg cli fcomi fidivrl lea jmp rol fdivs mov cmpsb lahf fldenv xchg or inc (bad) jbe adc push or fs inc sbb outsb lods push jmp dec jmp jnp inc enter outsl push lahf imul fild (bad) out fcoms fisttp mov popf lods rorb cs ficompl xchg jmp add dec add jle sbb and sbb lret xor mov dec mov jmp iret add mov jne pop test mov push lahf or push fisttp cmc sbb out cltd mov mov aaa fisubrl cmpsl sub dec xorl lcall je ret mov sub jbe pop rcl dec in add stos hlt mov lock stos bnd jbe add dec mov cmp mov popa test sbb loopne imul dec or cs cmp mov xchg or pop pop pop or push out addl mov jnp xlat (bad) jbe out sbb adc fisttp js jae push or dec ss lods call mov sbb push jge jg or fwait sub dec mov dec lods xor xchg aam outsb (bad) cld xor mov icebp push jle sub sbb xchg jno adc fcmovb (bad) (bad) sbb add fmuls mov (bad) test pusha jne data16 mov insl and pop push jg cmp or insb jle pop adc cmp pop and adc call addr16 pop in (bad) out pop sbb ja adc mov push mov int dec mov xor inc icebp push jo movlps imul mov inc test stos pop mov (bad) xchg fnstcw jp popf cs xor loop push dec xchg lods xor xor mov (bad) (bad) fisttpl cmpsl shrl (bad) jg jno test iret test fsubrl decl and fisttp adc xchg xor mov (bad) retw inc adc and mov xor (bad) fldt mov cmpsb in inc add mov pop arpl push testb xchg add pop add xchg or xchg mov cmp push mov jmp cmp push ljmp cld sbb sahf sbb arpl mov inc out sbb gs xor ja lods mov mov pop push arpl nop dec out push inc cmp push aam push insl jl jmp xor sahf mov add insb mov push push pop fnstcw push in inc xor cmp nop (bad) jmp arpl pop xchg sbb sub aad stos test jb mov and arpl push pop xchg decb dec and pop jmp pop rcl (bad) xor mov xorl push sbb les xor xlat jmp jmp add sub ljmp das ss (bad) mov addl popf jno mov int3 xor dec push mov mov add hlt xlat inc jmp add pop or flds test jnp repz jecxz lretw jb mov add sbb mov cmp (bad) insl xor dec mov pop push add call mov xchg xchg push push mov or fisubrl lret pop push loope xor push push mov adc mov scas mov push mov xor adc cmpl ja,pn imul sarb out insl insb sub mov lds push leave ret adc cmp stos insb clc mov movsb out mov hlt and mov mov (bad) fildll rcl or jb cltd pop dec or fnstcw fwait (bad) cltd pop mov fsubp pop push hlt sub in fidivr ret mov and pop in mov mov xchg pusha addr16 mov cmp push mov into mov add mov aas mov out push fisub inc cmp jle inc rcl adc iret in push sub subb (bad) xor inc lods or xchg pop jno mov repnz mov sbb in les cmc pop sbb dec fs fucomip (bad) lcall fbstp mov insl xor xchg int3 gs cmp add xchg xor xor mov (bad) mov out pop xchg xchg or mov daa inc addr16 jl mov jns lea inc inc lea fs int3 divl jmp leave divl ljmp fs cld outsb out xchg mov and test pop daa in pop lock mov inc jmp (bad) sub or test rorb fiadd arpl or (bad) daa mov or add inc fwait dec xchg mov cmp in (bad) pop or cs fild data16 xor imul stc jb int3 dec (bad) inc lods pop push and cmpsb loop push loope test sbb outsl sti icebp mov leave loope loopne cwtl dec std and pop add push add push jmp jle mov push xchg femms jge inc stos dec inc cmc out in and dec jl mov in addr16 xchg push push cmp and sbb jnp fs pop aam push push sti gs or mov cli push mov lahf loope push jmp mov sbb (bad) out jae pop stc sbb stos ds xchg pushf jo adc lahf dec mov cmp or ja push test icebp lcall icebp push je leave sbb rcrl pop cmc sub adc les flds mov ds addr16 mov roll leave xchg mov lds mov insl outsb bound in dec jge and addr16 pop cwtl ret in mov imul sbb (bad) or push cld push and iret notl (bad) lret adc int3 adc mov sahf push jns dec nop jmp mov sub notb adc cmpsl rcrl out (bad) jecxz or fidiv les add xchg das mov fnop enter insb mov (bad) lds das push lret ret push mov ret test inc ja xchg dec push jns xor arpl ss push loopne ja add fdivrs ret mul add pop lahf ja inc push mov test insl cmpsl aas or das lret xor pop hlt push xchg lea in sub cmpsl scas mov les repz lock std lahf pusha bound cltd add (bad) icebp inc aad or movsl test mov aaa inc cmp into scas and (bad) ja cmp jecxz cmp pusha sarb iret pop mov cmp pop xchg cmp inc cwtl sub jb rcrl or popa inc xor insb sbb add push enter int3 ja fbstp sbb push inc cltd ret cmp xchg hlt sub push jns ss das xchg pop push (bad) and xor or and call sbbb fwait sub and jbe cmpsl out push dec mov in repnz or fsubp or lcall lret mov sbb add arpl rcrb xchg (bad) movsl add and divl or cmp dec ja mov jo out lods push cmpsb jp enter popa fstp addr16 cli cmc mov ds div stos repz push dec in xor cmpsb adc aas pop cmp xor mov sbb push movsl shlb pop sub loope cmpsl fmulp (bad) sti add shll sbb inc jp push ret daa cmp cmpsl mov das jo int3 cmp (bad) mov sbb ret push lcall jmp ror mov mov into jecxz jae iret (bad) push push push adc loopne mov cmp xchg inc and cld jne add pop mov popa push push and mov unpcklps xlat je xchg and test cld mov (bad) jg mov pop cmpsl jbe movsl and cmp xor lds sti and loope dec lahf movsl sub push cmp cmp (bad) mov inc add or popa movsb pop iret insb (bad) mov (bad) pop sub mov pop into pop adc xrelease pop sbb inc aaa imul shr mov jmp fstp int ficom std inc xchg inc sbb xchg in and mov out adc ds dec sbb dec lods addr16 (bad) pushf mov adc adc inc bound mov mov xor dec test andb xchg test push stos cmp movsb dec je push push into (bad) jo bound and and and test sar fmul push mov push mov mov cld inc stos cmp std int3 fmuls and jmp shlb fwait mov xchg sub mov fldenv movsl pop sub aad add les (bad) mov aam jl nop push lods mov aam es push pop in rol mov lret iret into inc out mov sahf cli stc in sub xchg adc jmp les cmpb rolb (bad) xchg imul (bad) iret and xor ret ret add xor fidiv sbb xchg ja jnp sbb out push test (bad) (bad) aaa imul aaa cmp pop cli jae and jge scas jp loope test mov sub leave outsl mov inc inc jno and xchg hlt fild or (bad) gs mov jnp cmp push aad xchg jns mov jnp fmull xor (bad) fstps mov add insb and cmpsb or stc xchg (bad) pop xchg fxch int3 sbb pop daa in cmp (bad) jmp adc mov mov lahf push sbb mov cmpsb cmpsl rol roll inc mov mov jne imul add push push inc in jg cmp mov jne add push std xor test ljmp or adc das icebp aaa (bad) or mov or mov add jmp paddsw mov (bad) xor pop (bad) xchg sbb decl es pop adc imul xorl pmuludq icebp in fcoml out mov nop cmp bound pop in sbb int sbb xchg pop cmc or aaa cli fnop subl xor xor in in jns lret loopne jae stos (bad) mov pop inc in sbb mov add lds shrl stos dec xchg dec jbe ret dec test xor xchg and cmpl and and test sub xchg insb cmpsl cmc cmc int dec adc push jp dec sub (bad) jne and ss jle addl in cmp ret mov mov pop inc sbb pop mov jp push aaa (bad) repnz xchg push xchg fs or cmp add push jns xchg and pop call lods jno push in sbb xchg adc lret int3 and loope pop fdivl jge xlat test mov adc fsubs inc (bad) xchg xor sbb mov jnp xchg call sbb roll jno xor or dec into test ss sbb ror mov xor cwtl out pop cmp cmp roll jno enter xlat xor loope adc push nop push clc jne cmpsb rclb loop test (bad) loopne jb lock data16 iret fwait in out addl mov jmp test xor push jb cli cmp adc shlb pusha xchg xchg lods fnstenv mov sbb adc push into jnp adcl loopne (bad) xor (bad) sbb gs fildl mov lock mov sahf mov stc repnz jo xchg outsl pop jg dec adc jle movsl mov mov mov cmp (bad) jnp lds adc (bad) hlt mov sbb test fldenv std scas dec dec xlat pushf addr16 push xor outsl aam scas lahf xchg data16 mov out mov dec rol fstps lods xor sbb ret (bad) out dec sbb sti mov mul (bad) into mov std mov jmp loopne add xchg mov shrl cmp pop and pop scas adc out pop xchg mov sub inc cmc movsb and add js cs push cld sbb test cmp jg in sub adc xchg push dec xlat cmpsl jmp xlat push inc in xor mov and cmp loop add fisub push out pushf push mov lret (bad) mov and mov mov insb das pop test aas cs (bad) enter mov popf enter mov out or ljmp push sbb dec mov lcall fsubl mov sbb orl ds rcll and and insl xor rolb ljmp dec idivl outsb sub lcall jo sub mov mov cli cmp sarl test ds pop xchg ds in push mov sbb inc stc enter mov mov (bad) pushl popa jmp mov movsl ds push cmpsb clc movsl addr16 xchg (bad) push lahf imul xor popa push ja sbb in insl std adc jb movsl push jecxz fiaddl call addr16 fisubl pop add pop (bad) repnz aad pusha jl loop mov fs push xorl sbb pop inc inc pusha fcoml hlt hlt bound push int outsb push sti mov pop xchg outsb jp mov inc xor in leave in sbb fs cmpsl or pop mov call mov in dec mov mov sbb cmpsb and insl cltd fucom xchg mov aas cs sub jl sub or fmul mull fcoml pop dec cmpsb repz push pop and movsl in test and mov add xor push imul push sbb pop sub pop ss cli test pop cltd loope daa pop mov sub mov and add cmpsb sub les icebp mov push orl stc add jbe or add out jecxz xchg pop int out push push in pop movsb es ror test pusha negb cmp stos mov pop push (bad) divb (bad) (bad) fimull mulb jmp cmc and pop mov adcb lcall dec fcmovnbe imul cmpsb inc arpl jmp es mov push dec pop or ss cmp pushf adc movsl insl xchg insb ja push cmc jnp xchg aad inc xlat fucom pop mov nop in les add cmp iret sarb add repnz in push stc cmp inc push fisub add pop pop dec ljmp aas lret inc push test ss xorb ror mov cs (bad) mov test cwtl sahf pop inc fs mov fnstsw loope xchg insl xchg sub aam jae in stos aaa neg lret adc xlat pop xor jb dec xchg daa les inc xor (bad) cli rcr ret es call pusha adc jb sbb inc aas inc xor push aas sbb stos mov scas add cmp rolb insb add lods test inc mov test out es or ja fucompp mov mov cmp call and jmp lods leave addl rorb icebp mov movsl mov jge icebp and xor in mov mov sub fistp inc push test jmp push addl xlat mov mov aaa lock push pop push pop test int3 dec ja and jmp inc out adc mov inc imul cltd inc out fwait in xchg xor andb mov jne sub xlat bound mov inc inc cwtl inc sub or aas push sbb mov repnz pop test dec push ret fwait adc scas jmp inc inc repnz or mov or mov mov xorl flds and popa shl in mov jno loopne dec std out out jo jae inc clc push mov addb ss pushf xor mov test sub xor rorb mov xchg (bad) scas jnp std cltd stc push mov lret nop pop pop fidivl leave pop mov push into jns faddl cwtl lcall fildl int3 lret adc lds sub jmp mov mov clc movsl push ror xor fbld cltd push mov cs sbb leave add outsb xchg repnz sub flds (bad) ljmp or sub mov or jb daa mov pop mov aaa insl loop cwtl outsb loope adc int and fs cmc les int movsl jo call aas push lods movsl scas lahf scas test mov insb mov (bad) dec (bad) out in sahf pop xlat lods xacquire idivl popa sbb pop mov mov addr16 lock cmc out xchg mov lahf addr16 call mov stos mov add adc mov push cmp sub rorl sbb addr16 jg adc mov mov jno mov stos xlat loope movsb push stos loopne pop mov ret jbe fmuls gs or (bad) divb js add (bad) mov mov mov mov jb shll es push mov xchg mov pop imul ret push (bad) push roll (bad) and mov (bad) into leave and mov int cltd lret test adc out mov cs fbld ret out or lods push xchg cmp push xlat and out outsl jg fwait mov sub cmp aam sar (bad) lea sbb jns inc scas cmpsb jbe jmp lods in (bad) mov sub dec pop sbb jb fist sbb inc jno test mov stos mov xor cld push out jo pop fucomp xor lret ja push sbb add (bad) add ret push adcb push dec scas sahf je cmp lret addr16 out enter rcl pop mov xlat jl cmp dec add sbb jae cwtl sbb loope jno gs sbb fsubp fcmovnb lahf lods xchg lods jo stc loopne dec in pop mov mov push vcvtsi2sdl jo push jle pusha pop rcll cmpl inc (bad) aam mov cmpsl arpl lock lds rcrb dec aas pop jecxz push xchg xchg sub mov std or push iret enter mov pusha or sbb insb pop cs mov jp pusha cmpsb popf add jne or and inc bound dec int3 int3 push mov test push and lahf sbb jo push jbe lea push jo jecxz lods inc (bad) mov dec lahf sbb and or scas mov jg adc divb add mov push adc ds pop sub xchg push pop test gs xor into cmp xchg (bad) aad jmp mov outsl (bad) pop outsb xlat mov sbb stos lcall loopne aas xchg mov add push gs rcl add push ja lea xchg or push mov jle and and lret inc ljmp mov ret sbb dec push mul popa xchg jle iret pop push cwtl (bad) pop and aad pop mov xchg popf and (bad) stos or nop cs clc inc push xchg add pop clc scas sub mov dec out repnz fnstenv mov popa jno or fsub cmpsl inc pop push outsl mov sti scas dec inc (bad) cs fcomip pop dec jne pop fisubl push in enter iret fs cmpsb inc xchg mov imul imull ss jno sbb repz sbb test sbb push mov and sub sbb into ret fnstcw das subb sbb mov rorl (bad) cmp sub xor inc mov jmp idivb imul fldl add sbb test and in mov nop jg outsb jge fisttp xchg xchg (bad) test xchg cmp pop sub stos jecxz pop sub mov lcall pop call popa adc das inc xchg incb mov push push mov dec xor xchg pop xchg dec sbb addb inc clc push jl inc push push xor rolb push mov fcomp jae push xchg movaps or cmp jnp test repnz push jg shrb int lahf xchg mov pop push mov lods mov mov mov outsl push fcoml xchg sub sub pop and popf jb ja push xchg mov sahf loope cmp xlat pop xor stc imul lahf xchg inc loope (bad) loop dec cs sub mov pop cmp mov into mov sti rsm sbb test mov out adc or sbb sub mov push inc cmp mov mov add cmpsl lcall jmp mov pop or test cmpsb pop repnz incl rorb mov sbb xchg pop rcll lea push loope (bad) pop fnop pop pop jbe (bad) mov outsb ds cmpsb cwtl mov inc (bad) sub mov imul inc idivl pusha mov mov call pop inc daa lret cli mov sarb (bad) in jmp dec push sbb dec fild mov fdivrs cmp xchg mov rorl sub sarb mov add fs cmpsb and addr16 jb and dec dec sar xchg and jecxz mov push xlat xchg dec sub jne je cmp and or add (bad) test lods add subl push or mov cwtl push or sub inc inc fisubr mov es (bad) insb enter fisttpll insl (bad) sbb pop sysret cmpsb div lcall inc imul fimul push and or cld outsl cmp repz xchg mov lods lods push lret loop jnp xchg popa mov lock jbe inc sbb xor repnz in cmp pop push fdiv cmpsb mov pop test rcrb xchg cli outsb sub call jb mov mov notb insb lea cmp test popa and dec (bad) pushf ss es mov xor push insb (bad) or push mov add mov cltd mov test sub add mov pop inc jl loope mov sti cmp (bad) jb cwtl scas jae sub cmp jmp push fnclex pushf and inc jmp shrl (bad) aad or push sub leave cmp or sbb mov jbe sbb cwtl ror fimul jp pop xchg mov into lahf pop dec xor out ret (bad) jne xor into ljmp pop inc mov daa je and dec lds ret ja xorl mov (bad) lods leave outsl (bad) mov popf das mov sbb outsl int3 sub push lods mov sub lods mov call jb dec sub cmpsl inc pop or das mov adcb xor xor lods fwait mov pop xchg inc mov adc mov mov mov divl ds stc push fmulp cmp in mov mov pop outsl sbb nop push push mov (bad) mov mov cs pop mov push mov jmp add mov pop (bad) push (bad) jns or pushf in fistpl fldenv test adc sub lods fs xor jo (bad) es roll mov add pushf xor pop jb out mov insb inc sbb push andl dec (bad) xchg mov inc xchg lret mov jae outsl cld call mov mov fsubs sbb jbe fmuls out in daa dec add scas cmp arpl jge pushf add movswl rcl adc in adc ljmp pusha xchg (bad) stos in out sahf xchg clc cmpsb xor stos js sbb in stos notb jg cs fs mov pop mov pop pushf xchg sbb popa inc bound (bad) cld xor (bad) aam (bad) push test sbb sub test loope mov dec stos xchg jmp out inc insl sub dec inc insl in dec es cmc ja loope out out fistpll dec mov gs int rcrl addr16 and or hlt mov (bad) mov inc mov mov jae mov add ljmp mov jbe pushf pop cmp mov in jno mov cmp loope lea pop xchg jmp push pop repz int3 cmp mov push call ljmp rcl mov ret test sbb mov xchg cmc mov push adc pop into dec xor bndldx decl cltd call adc lret jmp sub dec inc xor rorl iret out sub test cli jne mov into xchg jmp mov or sbb fistpl je push (bad) clc mov mov cmpsb mov imul movsl test cwtl mov sbb mov mov mov sbb mov mov out or xchg pop or int3 xlat call add rorb jb and nop pop fstpt pusha xchg cmc int lea std gs push cmpb xor mov cmp mulb jmp addr16 ljmp xchg mov cmc xchg sahf cli subl inc mov cmp icebp aam into add imul mov jbe dec xchg adc sbb cmp ss sub dec cmp (bad) pusha lahf aas jg,pt push mov pop es fcmovb sahf push shlb sarl imul add scas xchg dec dec (bad) mov adc xchg add mov cmp push jmp pop jae aad mov fld adc (bad) push jg std call sahf cwtl into cmpsb xchg dec sbb insb dec mov jo inc jb lret and mov sub xor adc push sub movsb mov dec hlt cmp leave xchg jb xchg outsb insb xchg xchg push and xor out mov dec inc repnz sbb test sbbl (bad) fisub and pop sbb push mov pop mov pop lods cmc pop jns pop lahf scas push in in adc or lods pop or fnstcw orl (bad) lds push popf mov push fs pushf push test jecxz out repnz adc dec xchg adc hlt jmp mov test xor in mov lret ds xor into out out push test fildll subl mov cmpsl insl loope xor stc inc lds adc popf pop lret xchg xchg in mov push inc add movsb lret scas pop mov jbe jbe (bad) movsl (bad) ficom and aad frndint jo sub add adc sub cs es cs aaa sbb into xchg lods adc dec hlt and sbb addr16 icebp pop ficomp and adc jmp mov lods ficoml mov sub push les xor icebp test in rclb aaa subl sbb add fdivrl or fsubs pop scas inc inc repz pop inc psubw addl cmovno call jae aad jno mov addr16 fs and inc mov in sbbb adc cmp loopne daa scas cmp or repz cmc jle (bad) fsubl push lds and jmp (bad) add push movsl cwtl lret ja or repz out mov (bad) or adc sub xchg push and mov out loop,pn out pop push adc add imull and (bad) lret (bad) or outsl push repnz inc or orl outsb jp dec inc int dec out fs jmp sub jnp and nop aas jno test mov test cld mov push insl sti xchg inc or loopne lods orb movsl out (bad) in int3 jae bound add mov and clc jnp sub pop in fldt xchg pop ds in jmp cmp push sub sbb jno repnz cmc xor cmp jb inc movsl cmp jmp inc ret dec imul lods fisttpl adc into test mov pop jl and mov fisub clc movsb xchg xor ds aad or jns push jo mov mov arpl mov std scas dec pop div mov pusha adc ss mov xchg (bad) dec pop (bad) jae pusha insb lcall or imul xchg inc movsb out jbe push sarb add pusha cs push cmp xor xorl mov divb mov xor fmuls popa call ret sbb lret outsb fstps push imul roll bound je xor jle popa xlat outsb inc jns loopne push and dec ret (bad) push ds xchg pusha or es push (bad) jb adc daa mov ss ficom daa mov xor mov add cltd (bad) cmp xlat movsb cltd adc pushf jb ljmp xchg xchg and add xor sub ja inc orl push test inc mov sub arpl inc leave pop insl insb push movsb dec dec test jp rclb push je insb sbb xor aam test cmp lods cwtl mov loopne ds mov mov prefetcht2 (bad) lcall in aam test sbb imul jl add movsl pop sti xorl jb xchg cwtl or aam mov fwait pop popa mov adc out pop stc xchg enter faddp cmp out out in loopne data16 rcrb pop (bad) (bad) insl push xor idivl inc push push dec scas vphsubdq shrl xchg xor leave xchg getsec xchg lahf test push andl ret fxch jbe lcall mov pop nopl sbb push sub push pop xchg dec cld ljmp jnp mov push jns xchg (bad) sub (bad) outsb lret dec push clc imul fildll jb jb add pop pop jne inc fiaddl stos lea pop xchg loop cmp nop push repnz adc leave addb mov mov and std lock int push push fidivrl sbb add fwait or or and addr16 std aad aam int3 push ljmp enter int ss push mov ret dec cmp fstl mov and dec sub jle xlat fwait pop stos xlat add inc inc ds cwtl mov dec ljmp pop (bad) aaa add sbb or mov pop lahf push ds ja lds xchg push mov xchg and rcr lds push sti ljmp shr and jp imul jp inc cmp mov cwtl push inc jnp (bad) mov gs sbb jle lahf xchg ja xchg push fldl2e outsb sbb sti cli repz adc stos (bad) xchg jae sub (bad) or inc test popf jo push sub fwait ja iret stos test push fnstcw addr16 inc nop push add pslld outsb and jecxz inc xor shlb inc jge inc sub push jmp xchg xor mov jnp,pn test cmp mov dec ljmp jno nop xor test fsub jae mov sub adc lahf sbb test enter test movsb orb bound xchg jg repnz pop rclb jns ret leave add insb insl es inc push or stos nop mov mov outsl leave lods (bad) inc enter mov ljmp and iret and je data16 push lret hlt loopnew dec adc cwtl aad loopne xchg pop sbb ret or jle mov inc jne sub stc mov js in in aam out cld cmp pop push popa xchg lds pop and mov mov les (bad) daa inc js ret cwtl sbb xchg push pop pop and push mov pushf add daa push mov shlb sti fprem xchg out xchg adc push xor je mov pop add test ret mov (bad) sub push cltd jle cmp lret mov dec push stc jmp cltd inc push mov mov sbb add popa addl outsb xor mov ja jecxz shr xchg mov push aas (bad) mov movsl xor mov cmp jmp adc testb push and push jl jno fcomps test xchg cmp (bad) push mov cmp inc jl gs cmp mov jo jecxz in (bad) xor jmp dec jmp loopne mov test mov nop dec idivl xor sub or mov jmp and ljmp sub (bad) or mov mov dec xor adc jmp movsb inc mov popa cld mov push (bad) pop andl adc sub push push adc add lret push dec aad in in pop sbb adc pushf sbb aam xchg mov adc je (bad) test or mov fcoml (bad) sbb cli insl lea push pop mov popa imul out dec nop sub cmp xchg jge negb fnstcw hlt dec add (bad) mov inc xchg int3 mov int3 aad cld lods xchg sti fsubs pop mov xchg push imul outsl add test sub xor jp dec adc fmuls insb and mov out fstps (bad) jge dec lock pop insb pop push sub test data16 push add push and jl add pop pop gs rorb sbb mov (bad) jae movsl (bad) xor inc in int into xor jmp stos int3 call cmp mov mov mov imul addb into lahf add xor in add xchg fisubl daa add loopne mov adc adc jnp mov inc or inc dec (bad) in ficom xchg pushf orl xor sbb aad divb inc jle pop cli insb decl dec (bad) clc movsl cmp push stos xchg push inc je ljmp push ja leave push mov push scas scas mov push roll inc aam and in pop mov adc imul jl stos (bad) jb orb pop ret sub enter out out inc dec mov mov (bad) mov les int3 (bad) cmp iret jb jle jp imul call xchg (bad) push add mov adc mov xchg cmp jl movntq out loopne jb and cli dec cmpsl push sub les push cmp stc test dec mov inc jne lock fmul loopne xchg dec mov push movsl clc jecxz sub sahf psllq ds int (bad) jge xchg inc outsl in repz nop mov fidivrl (bad) mov xorl lea ljmp in outsb mov in xchg adc aam imul cmp mov (bad) inc or or jmp dec or mov inc loop cmp xlat mov outsl sub ljmp stc mov pop jge push popf inc ret leave and lock push loope enter jno,pn (bad) xor cwtl fs jnp out mov mov call and gs out jb insl pop js jbe stos pop mov pop or (bad) ror pop sub mov xchg inc jne jge or mov cmc pop jge and js je mov mov std call sub jb repz (bad) fcomip je ror xor lock inc mov adc mov mov adc or adc enter mov push jge ficompl lret pop je imul int pop inc fdivr fcompl push and (bad) fwait jo cli xchg (bad) sub insb push add jne lods mov xor push jge push dec sbb dec or fildll popa adc pop testb or and pop clc inc jb insl push sub daa (bad) je gs mov lahf mov pop xchg in dec add scas fwait rcr push mov movb fistpl xor lods or add ficomp pop lcall ss jae aad and jge lods int negb sbb sbb mov lea and cmp sub test shll lods cli data16 cmpsl (bad) pop adc jl push cmc push in in rcr mov jno mov jbe loopne cmp inc mov jecxz jns xor cmp gs out jl push outsb mov lock stc std ret sub push xchg mov jp iret mov or inc push fxch mov dec cmp push jmp (bad) pop mov sahf dec and iret out pop cmpsb pop mov dec sti sbb fcomps mov idiv out mov pop pop mov inc fsubrs lods cld cld loopne jl in sbb mov dec incb icebp lock int3 pop fdivl mov arpl fnsave sbb icebp in mov flds adc mov (bad) rcrb je (bad) xchg movsl setne rcll add adc scas and pop pop xchg into stos movsb dec das jo mov and jecxz,pt mov cwtl add dec das add fistpl imul pop inc fisubr out push repz lods xchg in push pushf sbbl sbb cmp pop sbb jbe push or jo lret leave sub (bad) and sbb lods push dec mov nopl lds rcrl out and rorl mov fmuls (bad) fldl rorl mov sbb jp jns push (bad) lcall cltd push mov (bad) sub pop faddl mov addr16 cmp xchg jbe pop add arpl mov inc and jbe jne lret lods dec std dec call ficompl dec pop cmp inc sub fild mov aaa jle adc dec pop jbe push adc mov jno inc mov pop loope xchg cmp stos and mov sbbl dec aas pop fs xchg repz jnp dec xor shll push (bad) mov mov mov ret jmp add mov mov adcb fisubrl xchg mov and ret jb inc clc add (bad) idivl jle xor and aaa inc push add ret mov xchg (bad) dec push or rol xor dec fsubrp jno fsubrs jmp cmpsl loop into stc clc cmpsb xchg int mov pop (bad) mov mov xor dec in outsl mov inc js jl lret pop mov mov adc out mov jl push push jecxz sbb or ret pop push mov push sub mov xchg add sub int lods sbb lahf lods jg (bad) cmp jbe scas (bad) dec mov add sahf sub imul xchg and xchg movsb in or inc leave inc daa dec sti lds inc xchg insl jns xchg ljmp xor inc xor jmp ja mov adcl xchg xor mov pop int gs inc je mov in and cmpsl mov push xchg mov mov mov test push test xchg sahf mov mov mov sbb aad arpl fs jb dec sub daa mov inc in and mov fs pop push loope imul ds inc loope popf xor dec rcrb push dec adc int3 (bad) jmp xlat or sub sarl mov mov mov adcl stc pop sub sub js mov adc call mov push sbbb inc adc inc mov push push mov imul xchg adc jns mov (bad) lods sub mov pushf pop lahf js mov push movsl sbb cmp cmp shll xchg and lret ret xlat and mov adc cwtl ret mov adc pop cmp (bad) arpl (bad) xchg cmp sbb mov and lods ret ret or call (bad) lret sbb js das xor cmp pushf clc outsb test lock adc jle cmc data16 (bad) cs int3 jg jb pop and jae dec in pop cmp (bad) mov xorb jecxz mov or add jecxz repnz repz icebp push push dec cmp mov (bad) test cmpsl jbe mov mov pusha int gs into je xchg xchg dec push cmpsl push cld and sub lock cmc sub sub nop fcomi rolb ret mov xor ucomiss ljmp add pop lret xchg gs dec (bad) pop outsb insb adc insb mov stos ja ss mov fnstsw imul xchg push xchg cwtl (bad) or or ljmp scas imul sub stc das cmpsl and cmp fcmovne add fsubs jns sub int3 dec repz pushf cwtl xchg add js cmp (bad) lcall lock or lods gs lea lds xchg sub arpl cmpsb fistpll push pop aaa sbb ja xor in dec xor push (bad) mov mov dec stos mov sbb dec jbe dec lret mov outsl xorb inc or std inc stos int dec jle cmc xor xor fisttpl xor xchg sbb pusha iret fsubrs inc adc adc jae lcall cmovns les iret adc mov enter inc mov jns xchg sub (bad) stc mov or sbb inc ret rcrl adc push stos fist inc (bad) mov hlt mov mov or dec push inc jl cwtl adc jp ljmp pop dec xchg dec sti gs xorl jle shl movsb scas cmp das xchg cmpl jne loopne pop sub in pop dec mov ljmp test dec popa xchg movsb sbb cmp rcl and and (bad) push imul loop sbb lss fcoms mov fsubrp sbb in cld (bad) lret stos lods mov and adc sbb movsl xchg les xchg cwtl push mov pop sub pop or inc and in or push adc push int3 lock insl sbb fsubp jecxz xchg mov mov jb fisttp nop and pop fwait dec cmp mov xor push and je push movsl ficom bound inc xor sbbb or loopne roll setg insb fsubl (bad) icebp lods xor xchg push and mov cltd jl mov pop enter pop mov repnz inc pop outsl in adc mov enter mov push dec mov xchg imul (bad) stc jl pop jb iret loope (bad) jbe imul imul jmp sbb push mov ss test xchg mov sub and dec aam jp (bad) and daa cltd loopne adc loop decl scas push negl adc insb fcmovu adc (bad) xchg sbb movsl lods xchg pusha outsb stos dec sub or cmp pop lea mov sti (bad) outsb xchg mov incl sub mov sub stos fsubs stos jmp dec and lret add pop sub inc sub mov and mov adc imul into (bad) cmpsb mov lcall je cli xchg mov pop add stos lret dec cs inc adc es sub fldl inc fwait icebp mov leave xor test loopne pushf or pusha fs cmp push adc push div imul and mov ljmp in and js stos dec xchg dec pop stc shll outsb arpl mov ds aad and jo fstpl pop push leave cltd aaa lahf cmc xor jp adc clc jp or xchg xorl (bad) push xor out push pop fcmovnbe inc pushf orb movsl push aam push (bad) mov insb mov aaa testl das fwait pushf mov dec je (bad) mov divl gs nop add dec cmp ret sbb mov xchg sub out (bad) mov imul test add mov inc test jecxz test push push inc mov (bad) xor ficoml push ret aad std push fsubr xor loopne mov mov shrb dec mov dec push or or jmp jl sahf andb lea (bad) pop and rclb jb jae inc inc push bound aas lods std outsl pop ss scas clc xchg pop sbb loopne fwait cmp or stc or mov and sub cmp insl inc pop jl dec sbb mov iret jmp ret (bad) shlb ljmp es xlat mov hlt into (bad) jmp push jb insb jle (bad) xor xchg fimul push in stos push dec das cmp mov data16 mov sub jle mov (bad) pop lahf xor hlt mov xlat mov es push sub pop insl cmpsl xor add and std cltd jg imul mov push adc rclb ficom outsl aad outsb stos sub fscale sbb lods ret mov outsb mov jb sub pusha cmc (bad) gs add in push adc adc addr16 mov subl xchg es cltd fs push pop outsl or stos mov push stos mov or (bad) aaa loop mov push xor popf push pop inc pop push jl xlat mov addr16 movb es xor jb or mov add adc xor bound fwait mov out imul cmpb inc push lods mov imulb push jno push mov imul cmp sub in scas pusha shlb lods xchg add xchg sbb sub pop in sub sub and add xchg mov das hlt sbb xor cmp pusha mov dec mov mov jo xchg fcmovu es (bad) int3 add push ja cld or fldt sbb push mov mov movsb push adc int sbb xchg inc addr16 mov sbb push jb dec out sub outsb (bad) faddl pop bound bound insb out xlat mov cli mov shrl rcrl and jnp scas jo or push push test lret lahf jge jns in dec jo add mov jg pop mov pop negl js push push sub or mov pop arpl loop leave xchg test fildll mov addr16 addr16 std sti mov data16 jnp push mov test cld xor push aam mov into clc cld in mov adc cmp in fstps ret lahf xor xor xchg ljmp sbb add push insl push mov jmp iret (bad) jbe mov sbb pop in sub push inc lock add cmp or leave int3 in mov xor out jg jnp or cmpsb insb or lret out mov lahf jno jl cltd mov lods (bad) leave xor fnop inc mov mov cltd sub in lret fdivr xchg pop mov (bad) (bad) out xchg push push pop sarl pop add rclb pushl jae pop aam test fisttpl andb and push leave daa pusha mov mov dec mov aad aaa cmp cli lock out (bad) cmp iret arpl inc (bad) imul sub pop movsb jo jne sbb mov inc lret ret hlt (bad) mov mov mov cmp stos repnz jno dec sbb (bad) or adc test jg mov sbb js mov outsb pushf xor inc aas mov aad lahf stc loop dec sbb rolb inc fist (bad) xor aad sbb mov dec mov ret sbb lcall fsubrl addr16 cmp adc xchg ds ret popf std mov jo ja cmpsb movsb mov sbb mov mov notl add mov mov rorl cmpsl jb push mov dec ljmp loopne push fstl fistpl dec lahf sarl mov xchg sub jmp or mov (bad) iretw (bad) xor mov pop outsb outsb xchg fildll aad fisubl sar sbb adc ror mov les inc xor nop mov btc sub out sub sbb vsqrtsd mov sarb out sub mov jmp mov (bad) arpl sbb jle pushf xlat (bad) xor lcall xor ss add (bad) xor jl nop lods ds dec popa cmc (bad) ja jl ret pop pop mov sub fwait int3 mov mov lahf fistp push test dec pop cmp fist stos xor (bad) nop je daa loopne lock enter out arpl push jmp and test loope shrb mov test adc mov cltd jecxz dec adc lds mov add (bad) outsb gs dec lahf mov (bad) jae inc jle mov fucom mov in add stos pop dec push pusha pop sahf sbb cmp inc inc pusha mov xchg stos mov (bad) (bad) push inc dec insb cmp outsl (bad) into imul sbb icebp jne pop mov test ror add inc in je (bad) shll mov sub or adc lea ljmp sahf mov test mov cs cli pop enter enter adc ja das daa xchg push jne sub fimul jle sti mov inc xchg and mov (bad) fisub fbld (bad) and xchg xchg ja mov push insl add dec push dec sub aam jbe js shrl loope pop jb xor fdivl cmp and (bad) movsl sbb pop mov or fsubs movsb push frstor mov fsubp cwtl out adc and notl cwtl arpl xchg repz cmp imul mov inc repnz mov push mov cmpsl mov sbb test xchg scas es lods pushf push (bad) jle js insl insl pushf mov scas cmp cs adc out sbb push stos loope sarl or and xchg xlat jp mov dec sarl pop pusha stos aam jg add (bad) or out cltd mov adc lahf mov pop pushf inc adc or ret sti mov mov inc cmp xchg popa inc or loop pop lods jge push inc and fnsave inc into out jecxz jp popa aaa aaa or sub mov xchg stc sub fidiv mov jae or mov jbe (bad) int (bad) stos adc push and call jne sarl pusha out outsb push cmc setl mov mov jecxz jecxz cmp aam or or (bad) mull adc mov jg mov jbe outsl push mulb ja jb cmp push into loope dec pop lcall lret gs cmp xchg rcrb mov hlt fs sub les add sbb data16 or int3 xchg inc (bad) mov stos pushf movq cmp or xchg push and lods mov adc pop push xchg jmp addr16 cmp pushf (bad) divl loope cltd and jp jno gs xchg ds dec and sahf ja sbb adcl xor call test fcompl lahf (bad) outsb or lock jo lods in lods scas aas movsb negb imul inc insb xor das fcmovnbe stc (bad) sbb or gs dec pop pop jnp pop fdivrl (bad) or test or packsswb sbb pop push push test clc and stos lds data16 mov inc jnp jae rcr sahf stos push outsl popa insl les stc das dec mov xchg adc and add xchg jg mov or add sbb xchg lret sbb cs xchg mov pop or test pop adc mov movsb xchg add adc mov add lock push repnz aas xor in bound scas ljmp roll shll xchg sub int3 fsts mov or inc dec and addr16 xchg jle lds sub test daa int les stos (bad) into dec ds mov stos mov sub add fstl out pop sahf dec in loopne push shrb jno and outsb mov repnz or rclb (bad) in sbb xchg inc sub cld ds dec mov add mov jns xchg push add xchg jle and lret dec out (bad) pop pop dec pop jle out stos fcompl aaa mov data16 es sub jns xor dec mov adc in push mov (bad) lods sub jae jb xchg jo movsb xchg mov inc call dec enter outsl push add ftst ljmp lock sbb stos popf mov jbe add xor scas ret push out push mov mov or lahf jbe jge jmp dec fsts (bad) (bad) scas movsl lret out lods mov sub jbe movsl pop dec daa inc mov push or aad (bad) in int3 mov mov pop lret (bad) dec pop and cmp mov es add dec or call out push pop fidiv test jl outsb loope js and xchg cmp lcall dec jecxz and xchg into push inc push mov xlat mov je cmpsl inc int js subb adc lods pop and dec add and cmpsl xor imul jg fcomps inc fdivp and pop arpl mov int leave cmc andb or sbb pushf mov repnz mov stc (bad) and lcall repz xchg (bad) xor ss cmp sbb pop (bad) cld jp push adc jg pop push jo pushf ljmp fxch xchg and sbb hlt test (bad) rorb fidivrl adcl dec add sbb inc ret leave je xor jecxz fs mov inc mov push aaa pop inc lret fwait jne adc sub and mov sub fstl lahf test sub sar xor add subb test mov (bad) mov repnz les aas xchg out lret sbb dec cmp push das cltd push arpl cltd lock dec stos sbbb sbb add js inc xlat data16 and (bad) xchg imul jnp stos (bad) or bound inc (bad) inc popf pop sbb mov out push lret movsb mov inc rcl flds mov mov cwtl lret inc fimull or dec adc xchg mov jo xchg mov push cmc lret and movsl mov jmp xchg jge push jecxz movsb jecxz bound xchg scas mov (bad) mov inc test mov cmpsl je push mov out xchg jnp push fwait sahf or jne lods iret test in mov xchg je push xor cmp sub sti adc push cmp (bad) dec cmp popa loop lods xor std jno iret sbb test out stos jl popf mov mov lret or mov push sub cmp and adc and mov push mov (bad) out sub sub cmp cmpsb sahf inc push fcomi jecxz adc push push jo mov icebp dec adc dec dec xor inc or call pop push shrb mov je cwtl mov (bad) dec shll push mov call or sbb pop xor xchg push stc mov add mov add mov imul ret cmp and scas jmp push sub loope (bad) fisub cmp and movsb fbld out ss fs inc or mov adc and dec mov addl in dec fcoml xchg dec stos inc pop imul mov (bad) pop inc mov inc (bad) jp mov jo pop ret jge jno jp mov xchg fs adc sub push aam push xchg addr16 bound adc push xchg jle xchg cmp push push daa and cld scas int shll loop push imul add daa jmp inc jge sbb mov movsl mov mov mov dec inc (bad) or inc jae clc mov (bad) aas incb and in push (bad) push fcmovnb push mov cmp pop (bad) loopne jbe dec mov andb xor in cs xor loop push or dec cli jmp (bad) in fcoms mov xchg pop aaa repnz mov aaa mov sbb (bad) inc out cmp (bad) sbbl sub or xor bound cmp and inc clc cmp fwait (bad) cmc fistpll (bad) or div lods xor cltd loope and pop je loopne push push pop xchg jo out xchg lahf out jle mov loopne fistpll mov sub ret jne xor into loop mov jbe inc jns je or jge js push test xor add das jns loopne xor jbe add repnz sbb pop (bad) cmpsl jnp or push push addr16 cs aad push insb mov stc mov popa cwtl jp cmp push mov and sub inc nop inc sub test xlat sub loope call cmp hlt pop pop push mov jne mov pushf shlb add adc lret mov ficoml xor dec shl ror mov inc aas mov mov je inc push out les sbb fidivr jne (bad) lock (bad) xor mov pop adc cld in xchg movsb orl push xlat ret adc push add pop pop sub jae cli xor jp (bad) aad leave ret and adc dec cmpl data16 jl mov mov adc mov dec andb cmpl pop inc or lea cmp cmp test mov cltd sub xor lret stc ret into mov (bad) jae hlt xchg cmp cmp pop push dec int (bad) shll (bad) jno loope push int fdivs mov cmp jmp mov mulb (bad) out fnstsw mov popa pop dec mov xchg mov (bad) out sub into and movsl jno scas add mov xchg fiadd and jecxz fstpt cli xchg movsb cltd insl pop ja bound jns scas push inc rolb inc jmp mov lods jge mov rcrb push pop and mov enter mov adc inc mov pop xchg dec xchg ficompl sti (bad) pop les in loopne sub xchg test xchg dec daa mov cmpsl std mov sbb or inc (bad) xor nop jmp pushf or mov imul push pushf lcall cli test fdiv ret icebp jl das loope mov lds das imul mulb and dec push dec inc jnp mov aaa cmc sub mov call mov addr16 sbb (bad) xchg lods popa mov das js mov fistl adc in stos push ret jno mov sub add shl mov std mov lods sbb mov mov leave frstor (bad) sti dec mov adc stos xchg push enter out cs add scas ret lea sar xor adc adc mov enter lds xchg xor cmc insb pusha mov test xchg cmp pop jle in rcrl jmp pop or jno adc xchg fisttpll cmpsb cli test movsb pop fstpl icebp adc xor mov cmp mov mov cmc (bad) adc sarb pop xor jmp mov aaa movsl lods mov pusha add jne lahf push cltd loope lret ljmp scas int xchg lock (bad) mov test pop hlt in ret jbe mov in enter sub cli xchg push dec pop add call push xchg xcrypt-ctr cmpsl pop sub pop mov xchg and mov add mov xchg lods or ror mov pop xor mov daa pusha or inc lahf into sub xchg stc icebp xchg cltd fnstcw push and fsqrt dec iret and push outsl test cmp inc out mov xor fs lods iret push aaa jp jnp das nop mov mov clc loop cli lret in mov xchg cltd cs mov jecxz add pop jnp shrb rclb fimul neg push clc adc lods mov sti fxch sbb xor or jg pop xchg in mov dec pop sbb inc xchg (bad) mov test and mov pop jb xlat adc scas movsl ljmp push mov inc outsb cmp xor lds xor push je push mov mov adc sahf mov or std mov sub ja fisttp push push jmp arpl movzwl mov sti adc and ret (bad) (bad) movsb daa pop sbb push jle or cmp push pop cmc sbb lret shrl inc mov sub aam sbb jbe xchg xchg fildll lea addr16 and hlt mov sub push call mov jns inc rcrl push fisubrl push adcb xchg sar add cmp imul movsl mov cmp cmp sbb pop cwtl daa imul in jp ficom xchg cld add fwait add mov lret popa jl rorl aaa ret stc xor inc loop fsubp ss mov iret cld inc jge rcl mov cmp dec (bad) cmc and gs push pop xchg enter lea test lock inc gs and int icebp lret icebp cld inc (bad) jmp addb xor mov sti pop inc lea es cmp dec mov push sub pop fist cmp xchg je (bad) ficoml mov fsubrl (bad) push shr lret adc mov inc repz and sub mov call clc fs imul dec dec repnz push xchg roll dec sbb dec (bad) mov outsb daa arpl roll adc xchg or in jae movsb ret or insl pop lret insl cmp insl ret fnstsw (bad) mov xor sub enter or data16 popf iret je enter aas cmp js imul ret push fisttpl lds stos aaa dec repz xlat xchg jmp adc add rorb je adc and (bad) xlat mov adc or ss xchg jne sti dec adc test notl sub push xchg ljmp and cmp pushf cmp movsb adc ja rcr (bad) push add jecxz enter je pushf mov adc inc into aad call ja jmp pusha sub mov sub push incb sub sahf mov dec (bad) ss xor daa sbb out jnp das jl in ss or mov sub dec fisttpll push xchg cmpsb popa in addr16 xlat dec repz or dec iret xorl mov mov dec or jg cltd nop cmp cld repz jnp subb jns call adc fisubrl lods pop mov data16 pop jne call int mov lcall and dec cmp ss cmp inc lahf adc sahf pop xlat jae rclb or pop or jo push sub mov inc adc insb jnp sbb sub sbb xchg inc (bad) mov scas cld push add xor jg mov sub pushl mov fcoml imul dec inc and push push pushl sahf xlat sbb mov mov xlat mov cltd inc lock ss xchg mulb subb rcrb pop pop test sub int outsl lcall (bad) loope mov mov jbe xor push dec push mov je pop or and xor (bad) hlt inc cmp sub roll jnp xor dec or inc add addl ds scas pop lret fiaddl lcall mov incb test imul jmp out pusha aad push es xchg fs aas rcrb jnp jl mov cmpsl aaa jecxz cmp or jnp inc in mov mov (bad) loope lods ret adc insb movb jns push mov bound mov and cmp gs test adc outsl sbb mov mov add lods xchg adc fdivrp lcall ret pop lret fnstcw or out scas test sub add jne cli idivb jp push and imulb ret pop out fidivl sbb xor pop xor mov sub sahf lea aam aam xor in ret rcrl push sub lcall dec fildll adc scas push push mov pop out insb xchg dec sahf movsl mov inc adc (bad) xchg addr16 push jb xor adc sub inc and mov (bad) fidiv fadds fcoml sub aas test pop insl (bad) and scas in (bad) jno dec xlat mov push push or test lret sbbl lcall jno int3 sub inc insl jmp and inc (bad) mov lcall leave mov cwtl jns (bad) popf pop add lds pop in dec xchg ds jns push popf xchg pop mov push sbb add (bad) lret scas negb push sub sub inc lods inc test rcll (bad) or and fstpt fstps sbb dec lods and (bad) aaa imul pop pop sbb fcoms push sbb dec cli mov lock pop push jo (bad) lods mov xchg (bad) subl adc daa push aaa les icebp movsb stos fnstsw xchg dec mov xlat scas jecxz ss push pushf xchg push shrb dec jno mov in aas or cwtl and xor das mov mov bound pop movsb xchg inc mov inc jo push mov out xor xor cmp cli xchg or add psrlw mov push xchg adc adc mov pop dec (bad) xchg pop jno es imul jle,pn cmp xchg cmp test in inc fcmovbe mov pusha aaa pop (bad) jnp pop mov stos mov stos jecxz sub mov or (bad) jmp mov dec insl inc ret jnp out jecxz cwtl xchg xlat xor jbe loopne loopne mov cmc push xor push or popf (bad) ljmp sti cwtl or daa dec (bad) jne int inc xlat mov add mov cmpsl inc dec mov jg add (bad) and lods fsubrs pop push push xchg mov leave call adc icebp push jnp ja (bad) cmp sbb or hlt mov popl in mov xchg adc adc inc pop mov adc cmp or or cmp sbb pop into adc sar orl sbb dec cmp arpl mov (bad) mov stc and mov xchg fisubl je cmp stos mov (bad) mov adc mov adc xchg mov lret jle nop in adc int sub sub sbb cltd jmp roll mov cwtl (bad) shrl cs daa xchg jecxz xchg adc push repz jge daa pusha dec inc rcrl xchg (bad) loope leave das push dec lahf negb mov add mov dec popf jmp out lock imul push addr16 fistpll cmp dec or inc mov (bad) jle cmpsb das mov xchg enter jecxz (bad) ss sbb push pop mov pusha int adc jmp (bad) dec shrb bound push sbb push cld jno push dec (bad) mov arpl sub push cmp aaa mov sti mov (bad) push lcall xchg cwtl loopne aaa sti clc nop pop jg cmc imul ficompl sub in repz pop xor pop lret pop psllw (bad) nop loopne in nop int3 test xchg ret int3 mov lret loopne mov mov fs int cmp cmovnp adc sub fwait jl mov repnz pusha insl faddp fcmove fisttp push jge xor mov (bad) (bad) mov ret (bad) je mov inc imul cmpsl adc cmp push mov push fnstsw dec mov insl xchg pusha and clc nop aad sub jmp xor es imul bound cmp push add mov iret pop movsl cld add ret leave dec hlt jbe stos fcom call cltd sub pop sbb xchg xor jmp ret (bad) cmpsl xchg jmp ficoml lcall jp or jo jmp sbbb aam sbb jmp mov or push subb sbb pop mov sarl leave les dec sbb les add sbb add mov imulb repnz mov sub jl test mov in adc mov push pop bound push loope in sti xor stc int3 jae pop outsb xor xor pop cwtl rol sbb cmp xchg rep std mov (bad) aam cld mov loop sub sarb xchg mov pusha push push out test repz fadd push inc dec div add cld adc testb (bad) pop popa addr16 int3 stc xor cmpsw mov pop sbb sbb lds add lea bnd dec addr16 adc pop loop mov add mov int3 lods adc push leave push loopne pop dec cmpsl fist (bad) je jle cmc insb pop (bad) push mov imul pop jge stos shl repz xor add sub sbb outsb inc mov ret pop sub mov cli rorb pop iret push adc inc mov sbb pop icebp mov ret mov bound push sbb cli and pop scas out jbe adc ss dec in xor fwait or insl mov stos jl (bad) sbb add (bad) scas test test push lahf jae bound mov and mov mov lea cmp setnp ds repnz into xchg jbe sbb (bad) dec cmpsl dec pop icebp sub xchg out and mov bound mov stos and mov popa andnps jnp sti mov lea mov dec or cli enter push lds rcl pop das push xchg pop mov xchg xlat (bad) mov stos mov es pop add repz nop (bad) subb mov nop int lahf push sub sti sti call jb cwtl xor iret or jne iret inc push insb popl mov fs (bad) out push stos (bad) icebp lret cmpsl lret adc repnz call cmpsb pop dec jle xlat (bad) mov xchg xchg and xor or cltd dec sbb (bad) mov adc xlat hlt shll mov sub jecxz jg subb sbb pop loopne fsubs mov xor lret shlb dec push or and pop mov push xlat arpl mov mov inc test xchg nop imul jmp inc imull xchg sub lods dec (bad) popa adc dec mov pop fcomip addb jg cld adc sub jae loop movsb into es divl inc inc enter add inc and mov jle or inc lods sub pusha lods movsb xor hlt test fidivr fmull bound sti iretw ljmp arpl (bad) lods out xchg sti pop lds dec mov (bad) movsl sub add lcall lock or movsb outsl or dec dec lods cmc adc pop out lds rorb fsubrl aad mov jecxz in (bad) out jge out dec imul sbb jp add les clc lcall push imul das imul adc fdivrl outsb xchg ret repz xchg loopne es js jns push shlb or lret fisttpll (bad) or adc or nop cmp add ja mov les movsb cmp or ret mov lds out xlat loopne ds xchg jl pop (bad) (bad) mov data16 dec or lods xchg aad jg insl icebp xchg pop enter sti push add jnp sbb cvtps2pd xchg push fcmovnu aaa sub and xchg out pop and adc mov sub push in mov aad and xchg test rol (bad) sbbl dec sub inc jnp (bad) cltd ret addl mov mov inc pusha xchg add repnz popa pop pop pop add into jge (bad) int3 movsl shll xor push imull dec pop and jns (bad) dec iret push inc mov push adcb mov mov xchg adc popa decl jo and mov in clc sub test jecxz stc sub rclb ss or fdivrs int scas sarl sbb das lods aas push push mov insb pop fcmovbe call fldpi stc adc pop scas ret fcmovb stc mov push pop mov pop mov inc popa aaa mov lods or xor sbb pop sub pop xor mov cmp cwtl and ret sbb mov mov out (bad) sbb xchg mov sbb (bad) jl icebp cli lahf sub aas xchg leave out cmpsl test mov jns lret mov mov call or adc cmp xchg add ja or push push stos imul hlt add or xchg movsl aas in std mov in (bad) pushl dec lret and outsl insl repz inc adc cli sub dec push add fiadd call mov push dec mov dec jnp scas (bad) xor test xor loopne (bad) fsts dec pop pop mov mov jns mov push clc xor cmp dec xchg ret popf push inc fs movsb mov aas out repz outsb enter in push sarb rcrb scas sbb out scas mov dec lret sbb xor cmp add jl dec sub fnstsw pushf pop and shrl enter xchg xor jns lods nop shr push popa mov rcr test loope popa mov stos mov cmpsb xchg sbbb push sbbl and mov mov insb add xchg sbb enter sub xchg (bad) int les das jmp aaa or fstpt (bad) jmp dec jne xor push inc in jae jl enter sub stc test sbb pop jge jmp jno jb mov enter int into jne pop hlt cmp inc jg mov mov sbb jge test aaa or lock mov outsl pop fs sbb add cmp cmpsl in fs mov lods xchg mov pop xchg leave sbb or add dec mov ss push push movsl ret ficom mov pop cmp ja and stc adc ljmp cld ss pop (bad) addr16 push xchg adc addb cmp dec mov mov xor and test popf (bad) inc ja mov mov (bad) mov mov dec stos ss fisub (bad) adc sti repz imul push jns dec add fsub popf fiadd (bad) fcomip mov and cmc jle sub adc sbb pop dec inc jp xchg or test inc ss pop ret sub repz mov into push dec sbb aad push repz pop xchg fmul aad das int das mov nop ljmp insb in jne jge fidivr je mov jb rcrl mov dec out xor in and nop ficoml outsl inc bound sbb stos jl push ret das cmp ret lahf mov ja test sbb adc mov or pop jmp lods sbb pop setno lahf jmp push cmpsb push es repz xchg mov xchg sbb add mov cmpsb test roll pop cltd out sbb gs inc or into mov mov xor sbb and test sar insb xchg fwait je cli xchg fldenv lds in jae sbb call imul scas call (bad) push icebp jb jle mov pop pop xor in daa (bad) cld jl in cltd jne enter test pop mov sbb (bad) mov mov out fcoms popa (bad) ljmp cmp jmp inc ficomp sub push pop nop jb push ficom daa fisttp lcall add pusha bound fdivrl sbbl addb push rcrl nop mov mov pop repnz pop pop sbb and cld push and mov repz pop sbb xchg sub dec xor or dec cmp xchg pop mov push outsl dec mov out and cmp push or mov movsb (bad) call dec clc xor pop pop xchg sub jae lahf sub cs iret clc cmp xor popa jns sarl sbb std pop lods nop cmp sar adc push iret and inc repz and arpl mov xchg add lret stos int adc jbe push mov ret sbb int fwait jmp shrl jge aaa jge (bad) loopne pop stos ja pusha push mov fcmove xchg ffree cmp bound pusha stc mov cmp pop shr pop loop mov xor mov mov lods (bad) (bad) leave ljmp xor push stos xor repnz fdivrl cmpl roll sub int nop mov push movsl mov lea (bad) mov jb jg cmpsl add sbb repnz fadd pop lock xor cmp mov loop iret imul xchg call lds mov inc cwtl (bad) mov int hlt mov insb lret stos fnstcw push insb adc xor sti push adc call ljmp dec aam stos mov fisttpl dec mov add or push ret jmp add inc in lds push dec movsl pop fs lea and outsl jecxz test repz cmp cld xlat sbb mov (bad) jae sarb push aad scas sub shrb test out jnp (bad) push cmc inc jnp pop icebp in xor sbb outsl push addr16 add sbb cld jbe jb out push dec push adc rolb test jns mov or or call sbb push je sbb adc xchg fcoml loope adc pop xor jl ret push add xchg loopne and push lahf xchg negb or lgs jge push xor cmp mov stos imul xchg int pop adc rcl loopw,pn ljmp js pushf dec inc leave inc mov daa adc fnstcw adc pop sti lahf outsl pushf and (bad) repz daa xchg arpl mov repz outsl inc push lods pop insb xchg or cmp nop mov jecxz lahf loopne or clc movb xchg shll dec jmp addr16 out sbb push mov dec jecxz lods sub pop push jecxz jle sbbb dec scas cwtl repz adc dec dec insl mov imul inc adc call mov rcrl jno imul lahf leave int and stc jecxz movsl and rorb ds push add mov push leave sbb or mov lcall pop cmc pop fwait aaa lahf fcomip clc xchg xchg add lock popf ds jbe jle jmp xchg sub lret dec ret mov sub adc data16 cltd inc mov xchg imul iret pop xchg add pusha adc iret lahf (bad) fisttpll bt sub and xchg push jp push sbb aam hlt mov pop push sub cli sub insl push lcall pop mov jecxz inc sbb scas iret adc and mov fdivl inc dec mov call fidivl fcompl je bound push or gs mov test aas mov mov inc push adc rorl add loope or cltd repz or push dec mov sbb or mov lret sbb jl dec cmp lret jecxz jmp cmpb scas mov aaa clc (bad) mov mov aaa or or dec mov lods loope adc cmp (bad) pushl shlb xor sti xor outsb mov (bad) icebp sub in jle jb fild fild in xchg or mov icebp dec (bad) jne fnstenv call lods xchg mov les in dec testb ss incb push rorb mov outsb mov lods pop in fcoml or out and and (bad) daa dec (bad) dec mov xchg fmuls (bad) je scas lahf negb hlt repnz rcrl dec jnp lret fwait pushf aaa mov xor dec dec dec cmp xchg ja popa cmp cmpsl lds pop movsb add lock jge icebp sbb lods dec sbb pop in push pop sbb push xchg insl jnp or insl leave je cmp jb add pushf push xchg inc sub cmp movsl jecxz rclb rcrl jl xchg cmp cwtl loope ret lods hlt jle and jb (bad) sbbb jae mov aam and push ds sub or pop jno scas inc insl (bad) ljmp jg mov mov les incl fnstcw xchg sti sbbl xchg call xor lds pop aas jo incl mov out sbb sbb jo faddl gs mov data16 into outsb jle xchg pop pop in shlb add push dec xchg xchg jbe inc dec xchg ret pop sub jge cmp or sbb xchg mov and inc push dec out mov aaa (bad) iret pop dec add mov add in (bad) push push orl add aad mov push cmpsl jmp sarb mov outsl leave or call jbe out pop (bad) mov xchg add add fsubrp in pop cli add mov stc push cmp cmpsb xchg add cmpsb loopne pop add std (bad) mov add mov mov xchg stc es jl cli adc fs cwtd (bad) and shll xchg xor jbe in cmp jnp push fidivr pop mov sahf pop (bad) xchg nop out sub das (bad) adc push mov sbb insl in idiv jnp dec push movsl jns cmp lea sbb push mov cltd sub jecxz lret sbb mov es mov test mov cmp test hlt xchg inc mov dec fimul js mov push (bad) jmp js movsbl sbb xchg mov lahf xlat sbb mov pop imul popl imul cwtl (bad) dec jne push es lods add xlat push xchg ja push clc icebp fwait sbb insb pop xor in mov push sbb jbe pusha mov inc jp pop jne mov jge aad xchg sti mov movsl or sub push lds dec (bad) sbb jno aam fdivrl mov rol add test ja imul cld shlb bound mov (bad) or push jae or mov push insl lret test push (bad) (bad) mov and mov cmp push inc mov loope loopne ds leave arpl (bad) fist or fnstenv sub lock add mov sub pusha push or lahf pushf mov jne jmp inc xchg aaa ljmp (bad) rol loop sti int3 jmp sub push xor jns push (bad) lea sar adc ljmp push imul or mov ret andb (bad) outsl push pop lcall inc jno pop test xor shrb loop outsl mov jae (bad) scas jecxz pusha xchg inc jp iret or in std adc push add mov js mov aas out sub xor iret fs or ja repnz icebp das aaa adc mull push push add jno scas ljmp je push sahf inc or cs xchg lcall rorl (bad) or shrb sbb fadd leave mov pop cli les mov push sbb lea inc push fprem1 mov jle scas jb out cltd outsb loop hlt stc fs and or jge cltd and xor inc dec sub in loop xchg call pusha mov or mov push ja jmp aad outsb je xor and lds mov rcll xchg popf outsb scas cmpsb mov add jne pop ret in or xor or andl pop clc fcomi stos insb sub sub std rclb ljmp daa stos push int xchg (bad) hlt das jecxz jb stc sti push dec loopne aas dec cmp ret mov andl fs (bad) in dec or or xlat jp push push sarl inc fsincos push clc lods mov roll repnz div dec lcall push loopne icebp scas out aad dec in es sub add test shrb mov sub or mov stc inc test fs pop sbb cmp mov (bad) sbb mov nopl cmp leave mov aas andl inc xor cli and je mov ficom lods sbb cmc popl (bad) xlat sub mov mov sbb jno add in sub fiadd in (bad) xor clc adc sbb call mov shrb sub shll adc cmp jns jb inc or adc js sub test rolb sbb aas test mov fwait mov cli dec mov adc leave ljmp and in push (bad) cld xor fwait mov das arpl push mov rcrl iret sbb scas lods push pop adc sbb sub push mov cld cmp xchg test adc sbb iret cmp (bad) jle xchg mov dec icebp insb push lods test sbb negl adc sub cmp sbb cmpsl mov xchg xor ljmp ds test in lea push js or or xchg mov mull pop lcall mov (bad) jp imul hlt mov test stc out xchg xor pop icebp mov xor push sub push adc mov xchg icebp icebp dec popf gs daa add aam ljmp push dec dec mov jp xchg je loop enter int fidivl inc call movsb push jle sti enter clc movsb sbb and and cmpsb xor orl jns dec lds or test mov sub stos sub pop or hlt faddl cmpl jmp mov pop xlat aaa xor out jmp repz dec (bad) mov ja lds jmp and movsb mov ret loopne es mov ret ret jb cli add or loop fstl mov jne cmc adc cmc insb sti mov mov dec loopne loope jge jmp inc xchg jne xchg add mov lds in insl ss repnz loope movsl and sbb push iret pop push dec xchg (bad) (bad) dec sarb shll push fistpl test adc fisubr sub mov repnz pop iret frstor leave adc jmp sub sti hlt bound cmpsl inc imul les mov mov arpl push das push xor test mov (bad) out je add scas fisub cmc sub ss or xchg insb cli shrl mov test stc mov test xchg in out (bad) call or push ror and xor and mov jb in pop rclb jmp ljmp xlat repnz jg or into push mov or pop jbe popa jl (bad) lods and stos adc mov data16 out push cmp pop icebp cmp sub out dec xchg mov push fwait dec in leave lcall xchg fidivr xchg js pusha pop out ljmp testl mov test xchg lods pop push pushl subl push je (bad) mov bound cmp push sahf js cmp ret (bad) adc out push sarl adc lahf rol in cmpb mov jae or and fldt or cli mov fstpl mov in dec xor cld mov sahf mov pop dec mov popl xchg dec pop scas enter pop cwtl adc adc fildl out fsubl idivl pop rcrl dec ja lods adc ja xchg mov aaa pavgw sbb test add std mov and fwait jb movsb adc out movsl loopne mov (bad) sub mov push movsb jb push jns addr16 sub and push mov int3 ja js inc call dec or pop mov dec or mov insb push stos pop xchg fwait sub jg or or sub lcall xor lds pop gs aas mov iret int mov xchg mov lods or adc lret xor mov mov jns insb push imul adc cs mov roll push cmp nop lock arpl jnp mov repnz push or lds insl push xor pusha loope or sahf lcall cmp enter cmc push push mov jbe lahf inc mov jl mov imul int (bad) aam aam pop out fadds loope data16 aas mov (bad) in push or lds mov xchg sbb jno pop cmp notb xchg aad lds movsl (bad) stc test call scas popa ret sbb lods dec cmpsb push fcmovb push xor xor in sub jge dec imul pop jbe mov jecxz sbb ret (bad) mov lods sbb mov and mov push lcall mov ja,pt xor movsb in jnp adc jae and sbb inc in inc outsb lds lcall aam jnp adc jmp push xor pop push inc leave mov in xchg outsb cmp adc xchg inc xchg dec and (bad) xchg mov push jnp leave mov cmpsl popa (bad) and jecxz mov push ljmp cmpsb or xchg cmp or imul adc dec cmovno scas cli mov dec mov jecxz insl or jp pop jge sbb jp int3 outsl fstps fnsave mov push sbb cmpb cmp lods std cmpsb mov sbb pusha test or xchg leave jnp xchg (bad) (bad) fstps (bad) mov fdivl push (bad) pop mov daa dec stc adc in imul inc out xchg pop mov adc and push xchg mov push pop mov data16 dec popf jne push rol scas cmp clc test sub pop test dec shr loop data16 repnz inc fs out test xor sbb jge adc jns (bad) (bad) xor loopne inc das push add adc loopne dec cmpsb pop scas call (bad) cmp jae pop jecxz sub aas push adc notb dec jp in inc dec ja rolb jnp mov into push xchg mov pusha sub xchg out ds arpl addb fistp inc xchg sub imul lcall (bad) or adc xor push sub mov xchg pop arpl mov xchg xor jne shr inc sahf enter push sub in das xor call bound outsl fistpll or fmull test xor fstpt mov push idivl inc xchg mov imul cmp movsb jmp dec xor jo mov in aas xchg ss mov test adc scas pusha sbbl fnstsw (bad) jp,pt imulb pop add int3 xor je fimul arpl push push fldl test pop mov outsb mov pop push add adc mov pushf sbb test aaa add mov ljmp nop inc std addr16 loop cmp hlt inc and rcrb in into sbbl mov pop cmp hlt lea mov hlt loop out call sbb push aaa or dec mov or adc add xor xchg lds jge inc in and leave into push (bad) jo cmp nop aam mov mov fldl out pop lods jge adc test push pop jo lret push sahf in pminsw inc pushf popf mov and shrb jno popl inc mov jecxz jnp inc inc dec xor pop imul clc pop sbb jg adc arpl mov sar or in enter icebp sub add sahf int3 pmulhw xchg lcall jmp xchg mov fisubrl (bad) stos in xor popa lds leave repnz cmp pop loop in in popa cmpsl or mov shr jmp mov popf int (bad) jne stos xchg mov sub fwait mov lret (bad) pop test insl pop cwtl hlt (bad) and in div stos pusha add ret aam mov push lods push jecxz mov adc in xchg adc aam stos std loope jns cmpsb push or pop inc ja and xor ret popf popf rorl testl jecxz cltd (bad) repz dec popa lods dec sbb cmp hlt xchg (bad) in in mov stos xchg cld (bad) fcmovnbe push adc sub ljmp push int jnp mov je (bad) popa inc int test push leave sbb stos add pop roll js scas push scas popa leave push leave xlat sub or scas inc sub cmpsl pusha ja jnp ja fisubrl pop data16 pop xlat push jb cmpsl std (bad) mov outsl rorb icebp inc mov (bad) hlt ja jo popa sbb lock mov xchg push push bound testb or out xor out jb cs and clc std ljmp out adc pop mov pop add stc sub arpl fsubs xchg ja inc cmp or out sub mov stos xor inc stos int lret int3 dec xchg push imul mov repnz jno adc jg insl jns aad fistpl stos and loop push iret sbb jg imull mov xchg sub mov stos push lock idivb scas je cmpsb pop out stos add add sub outsl stos sti repz jno aaa imull xor addr16 push test cwtl jge cli dec cltd and test inc int3 ror scas fnstcw je push xchg gs and pop in inc pop cs add sbb add fildl xchg sub andb bnd jb dec fdiv sahf pop xchg inc sub stos test and and je (bad) fcmovne aas stos test mov mov jp jnp pop and mov sbb stc sbb mov mov sbb sbb popa js gs mov cmp mov shlb das and test push push inc or cwtl std iret sbb jnp dec ss or cwtl imulb jnp test mov cmovnp push pop adc cli jb in mov arpl test outsl mov xchg jl test fs mov fstpl sub xchg rolb push sub mov xchg jbe cli or sbb add sub imul in push jno sbbb ds lret std jns ljmp cmp mov mov sti push in loop aaa or jl mov adc (bad) sbb xchg inc cmpsb enter lea jne popa jb push data16 (bad) int3 movsl aaa repnz xlat lcall pop xchg lcall cmc insl lds out push fcomps lahf arpl adc xchg inc mov stc cwtl in jge mov push dec cmp dec cmp sbbl (bad) jmp test sub js xchg das xchg dec dec add ljmp dec or inc mov lock mov xor addr16 add sub push xor (bad) ss jg mov jne xchg (bad) movaps pop xchg outsb cmp out mov (bad) pop xor pusha push aaa inc cmp xchg jae aam inc sbb cmp je push stos jecxz ja std mov inc ss mov sub imul and test pop add sti (bad) aas lret gs sbb (bad) or dec mov lds lcall inc push sub cmpsl cmc mov mov popf sbb push addr16 ljmp es inc xchg (bad) ds mov rolb mov pop punpcklwd sti cltd mov xor or and jecxz cltd je scas scas outsl xchg repnz mov xor or test jecxz stos fs mov sbb ds cmpsl lret jle in jb lds cld pop stos das pop call add mov mov xchg mov cmc push xrelease arpl inc inc cmp in aas hlt or loope scas push pop test dec das in mov pop mov in and xlat sub ja push in xchg lods add clc es fs das fisubr sbb sbb push add cmp shlb sbb pop enter mov lock inc stos je cs jnp mov aaa loopne aas icebp ljmp rol lahf (bad) mov mov in lods sahf inc cmc pop sub jns ret ja xchg mov adc mov shrl (bad) push add push (bad) js,pt and imul xor dec xor mov push xor add jle fwait adc mov out daa mov int3 ret mov jge adc add jbe push pop fwait or scas int pop add out pop add aas push xchg (bad) repnz xchg dec jb add mov cwtl sahf pop in sub adc pop (bad) (bad) daa add lahf sbb mov xchg inc aam daa mov fisub xchg add test pop xchg loopne ret adc out and fildll test and ljmp call loopne divl mov push pushl nop imul inc ss inc jle xchg dec repz push xor jno lods lahf dec pop int3 xor roll cmpsb pop subb fdivrp mov loopne scas fbstp fisubrl jge jl xor les popf push fidivrl out rorb cmp out loopne pop sbb inc les mov out inc js pop or add mov ds je fs and aad sub sti inc fist lods jb cmc roll mov sbb pop in push lds dec out jge dec lds fsubl xlat push std jge mov ljmp xor in shlb xor inc mov sub cld pushf adc sbb push jp test test sub daa push sub mov pushf inc aad (bad) fnstenv sbb test lret fidiv inc inc pop fidivl mov xchg and mov cmp xchg mov int3 into push jnp add test mov fwait mov fstps adc jnp and int3 jl sti push test movsb pop notl mov jmp repz sbb pushf add je pop or (bad) out ret lcall pop lods out stos adc mov fidivr test aam dec stos hlt xor les or push in pop fcompl leave ja outsl nop xchg jbe arpl push iret lret pop loope jle fisubrl aaa cmpsl sbb xchg add add (bad) mov icebp into mov adc nop test inc push sub pushf mov push or inc and xchg xchg xchg cmp xchg mov push (bad) xchg dec pop js nop ret leave les fdivl jb pop (bad) sarb mov decl (bad) and jo or xchg mov ja (bad) jo inc imul insb xor sub and sbb imul cmpl push add mov inc (bad) jmp sarl cmpsl pop jl sarl inc out push in mov push mov pop add pop fwait inc or add stos (bad) out add fbstp jns push xchg sbb enter (bad) xchg pop ljmp cmp inc dec xchg push cmc test rorl or sub and inc mov shrl ds sub mov in add mov lock outsb inc adc imul mov mov mov pop sub leave adc in test fdivrs lcall jns inc dec and fstpl cltd cmp aam out lea xchg sub xorl push sub lock sbb insl cmp jns jnp out aad jmp inc mov or jae outsb xor jne or push adc cli andnps inc pop or bound sub fstpl into dec loopne sbb lods repz push mov dec clc xlat aad gs popf mov pop cmp xor addr16 fcmovne cltd mov bound dec add test iret or push ret or xor pushf jmp push sarb aaa xor mov cltd xlat sub roll xchg mov out outsl pop xchg aam push sahf sahf outsl mov repnz pop push cmp jmp mov icebp sbb sbb fs fdiv mov mov lods adc or das outsb dec int3 imull add aad jno mov cmc addb dec push inc daa or sub (bad) jmp lcall xor push lahf jg dec div js or pop int popa pusha push (bad) fnsaves mov sub movsb fcmove dec mov cmp and sbb mov mov int push in fstpl ret mov mov bound cmp push ret inc inc jle xor xor mov sbbl incb mov cli sbb push (bad) sbb sub add push mov (bad) xchg scas cmp mov mov jae cwtl mov fsubrs xchg lods (bad) mov adc pop sbb movsl xor pop and mov and jle imul fstpt cmp xchg mov fidivl mov gs or leave sbb sbb (bad) mov sub jg cmp pusha xchg test push data16 xchg pop push cmp es xchg push nop (bad) cmp fnstcw sbb sbb xchg sbb inc or push push mov add push adc or xchg shll xchg xchg sbb mov (bad) in ss ds cmpsl add rorl pop add sbb aad pop dec mov mov daa icebp sub shr out inc cmc xchg pop test mov jl hlt inc dec pop test dec xchg fsubl sub stos xor or lds pop mov mov out mov lods fistpl or lret mov nop mov (bad) xchg add daa mov out leave fisttpl sahf push xchg cmp rcl mov mov mov addr16 jmp lds dec scas hlt cmpsb sti cmp sbb jl adc or xor daa cs shll xchg jg stc sarb jp sahf or sub repz fcomps adc outsb fisttpll inc notl jg pusha pop (bad) scas loope or (bad) mov mov xchg es shl push mov dec push bound xchg push shll push std cs es adcl in mov js ret sub push scas sarb push stos and xchg cmp cwtl adc cwtl insb lea pop push xchg pushw sub mov and mov ja mov cmp outsb test mov aam sbb inc sub pushl hlt mov add mov fstl inc cmpsb aaa (bad) push lcall or xor dec and or sub orb sub fsincos mov mov push test fsubrs cmp adcb inc rorl xor fldcw or pushf jmp andb out imul xor xchg ficom pop pop sar es hlt into dec mov mov xor xor call iret sub bound pop xor js fsubrs roll push sbb or mov jecxz add stos stc xor mov ljmp cld mov add lret mov mov and stos leave jae bound fldt lret inc addr16 div cmp or rorl and in and push fwait sbbl int3 or and mov inc fdivrs mov and lahf sub or push jp inc jno sbb imul mov cmp inc xor add adc and jne push xor aaa loopne shlb and xchg (bad) je sub add fsubr xchg and push mov inc hlt aad dec pop clc mov sbb mov icebp add xchg mov xchg push popa jmp test popf ja test aas call jl popa jo test fcomps and orl jae in cmp addr16 sub ficom and pusha (bad) push arpl test shrl xor xor cmp inc pop (bad) hlt sub adc gs mov adc test mov jno mov aad pop or fidivr xchg jns lret data16 sbb (bad) popa sub push ret (bad) push shrl xchg fbld pop dec and call rcrl mov outsb bound dec sub scas gs mov mov adc mov sbb adc mov stc adc jbe mov mov xor cmp mov jae icebp sarb out mov (bad) xchg test les loopne sub cmp push adc adc (bad) arpl mov aaa dec push loop mov push sbb call pop pop mov or imul movsl lods jecxz ja push ds arpl xor sub shl repnz sbb ret mov cmpsb cwtl cmc repz sub xor gs push andb fbld jmp in push test adc pop sti xor movb repnz cmp jg clc sub xor shll aam adc cmpsl fildl sub lcall mov xchg (bad) frstor adc mov inc cmp inc inc loope arpl mov inc out ret add add push fildl sbb cmp popf or lock add sub icebp push pop out icebp xor subl loop (bad) mov fwait add xchg rcrb pop pop lret add into fstpl int3 jmp cmp sar addr16 (bad) stc pop xchg pop pushf or inc xor add xchg movsl xor dec add popa and test sbb imul pop fiaddl fwait jmp pop ds jbe jp imul cld add adc adc dec jecxz pop inc and mov test stc addr16 cmpsl popf jb pop (bad) (bad) push dec mov mov out inc dec and or mov or push lea cmp fwait xchg push movsb push add xor mov leave adc (bad) ja imulb sbb stc mov mov sub outsb iret (bad) sub popa data16 test in jae cmc sbb adc dec loopne sub and mov pusha in stos fs push movsl mov push xor aas (bad) and cwtl jp jbe add hlt add (bad) repnz fs hlt pop into insl inc test inc xchg (bad) repnz arpl pop sbb xlat cmp push xlat xchg adc dec stos inc call push lret push cmp in xchg sbb pop int sub mov mov pminsw sbb nop subl pop mov inc inc pusha xchg xor repnz out cld and ljmp sub xchg mov pop xchg mov loope mov enter xchg sub (bad) dec sub (bad) out sub (bad) lret jae aaa cmp inc jg,pt mov jl add adc mov sub sbb mov rorl cmp insb out das stos lods mov out mov mov ficompl shr aaa insl sti mov jl pop rol dec aas pop mov lret fwait ret adc stc jmp addr16 cmc ret sub pop orl xor push ss xlat lret push jg inc sbb idivb cmp fcoml sbb std lds fwait mov add and (bad) test mov sar (bad) or pop jae mov sbb (bad) mov pop inc lret sub inc imul (bad) clc out es adc int3 jmp lcall sbb ja in cli shlb push imul xor jp mov test pushf push or pushl ja and ljmp dec int3 (bad) je insl mov aad pop out les pusha add jns jmp pop xchg ja inc mov mov jl pop in pop outsb dec xchg mov xor sub fistpl int3 mov jg inc and xchg dec adc mov push popf push pop das insl gs sbb mov mov pop sub dec (bad) dec mov loopne sbb (bad) fdivrs lock inc and aas (bad) int3 pop (bad) aas mov (bad) sub icebp dec roll imul xchg xor jl mov sbb cs pop movsb ss frstor jae aas mov and stos xor xlat inc ss cmpsb lret mov (bad) in sbb fisubl add lahf ret push loop movsl sub test loope jbe loopne sti and out fwait inc mov pop xchg lock jb pop dec mov adc lds mov cmp push pop xchg adc xor fsubrp mov add add mov andl jo mov lds inc jbe inc sub subl cs xor sub mov fdivl nop imul addb sahf cmpsb jae out add add adc ss arpl cmp lock aaa cmpsl pop loopne fsts dec adcl push push and jnp icebp lcall mov notl sbb sub or mov inc jno cmpsl test pop add push in (bad) jae add dec imul xchg add push xor jecxz xor (bad) pop scas or jecxz jge fsubrl lahf mov xor mov ja inc adc in aam mov or dec into push xor ljmp inc fsubl sub xchg dec cltd ss jmp popf mov xchg xchg dec mul push stos jo clc mov shrb inc in push in ret arpl lds fsubl mov and pop scas jl xlat dec adcl cmp cwtl mulb int3 test and pop mov aaa out movsl xchg dec imul jns dec fs pop dec cli les inc adc imul sbbl stos mov rcll nop out rclb fsub push outsb in sbb popf jp cli ss lea mov and das cwtl data16 sub je pop dec aas push adc rorb push lret mov shr sub fsubrp mov sbb popf mov fs (bad) hlt bound mov fs push inc incb add pusha into movups (bad) daa mov aad cmp jne std sub int3 call or mov lods sub and shr xchg jb,pn xchg mov jne xchg pushf lret mov add push and ja fstps fwait push add mov outsl cld push pop cwtl arpl lds xchg dec loop sbb jmp out je mov push stos fsubl mov sub mov push add pop add sbb sbb int3 test xchg movsb jle mov nop inc lahf mov inc jae aaa scas sbb das xchg fist sbb outsb cmp pop jmp mov arpl pop mov clc bound xchg out std jg cli std fnstsw std in push dec ds or mov dec addr16 jmp ret (bad) idivl lods jecxz aaa pop xor sbb dec cmpsl scas mov jmp and lcall hlt in dec iret cmp out lock pop pop shld scas test jb push out push mov xor mov adc and lock decb add ret rorl push mov aas push icebp arpl lahf and sbb ret mov in mov pop cs daa icebp nop pushf sub leave cmp dec (bad) repz jp imul xchg cmp adc stc add cwtl je lea jle dec ss ret out test mov ret (bad) bound sub js push lret lret sbb dec dec das xor lods das lret outsb jnp push sub sbb clc ljmp outsl jge adc adc je jnp ljmp pop mov pop fwait imul loope and fstpl je ja iret dec mov mov mov mov inc adc lea shlb cmp adc gs or pop popa aad mov pop test xlat push pop pop ret sbb (bad) mov mov cmp jo xchg mov mov push fiadd enter push push daa push sbb scas mov cmp lods ret inc int3 ja das dec cmc scas cld test fxam (bad) lret adc lea cli adc push add sub pop push and sub mov test enter and inc idivb add push in and inc add ret xchg addr16 in inc push xor xchg push in fwait mov cmp cmp gs dec mov int3 inc adc hlt dec popa gs out rclb ds sbb enter (bad) mov inc loope js jo in mov int stc or mov cmpb pop aaa pop dec adc xor mov lock int sahf push mov sbb or test shrl sbb or sub cld mov xorps popa sbb cmp jl fdivrl pop ret cld stos scas out movsl fbld add xchg xor packsswb cmp adc mov mull popw xchg (bad) pop xchg mov mov sbb out les mov (bad) add or enter cmpsb movsb fisub pop inc das jo and daa add aam sub enter sub cmp fistp imul dec mov add imul int3 push mov mov jmp jmp icebp dec decb mov mov in push adc stos pop in xchg add and jge jnp (bad) or sbb jecxz mov xchg sbbl sub scas rol cwtl ret cs imul lahf jge out nop cwtl adc mov adc mov rdtsc (bad) mov jno jle jecxz or push je hlt popa push (bad) data16 ret enter test sub pushf fidivl xor inc inc fsub lods popf movsb loopne out pop sahf push ret cmc sub push repnz xchg cld lcall stos fsubl fcomip bnd lock jnp push andl mov mov jl xor cmp sarb loope inc sbb cmpsb fsubrl mov mov mov sub (bad) lret mov loope,pt pop inc push and sbb dec add vshufps data16 dec sbb and stc pop mov xchg mov (bad) std or lret push jne dec or je (bad) sub rclb pop fisubl cmpl xchg sbb lds fs stc mov cmp jge mov dec in xor xor add xchg sub fadds fdivrl cmp cmp lods insb imul mov mov pop dec fwait (bad) and sub pop pop cmpsl lock outsl fiadd (bad) je adc pop outsb jo das in mov popf add mov or mov cld daa and rorb test in or adc add and mov jl scas es sub sbb adc mov sub loop aam (bad) ficompl jnp out or (bad) add rolb ret jb movsl xor sub aad daa mov xchg mov mov and add cmpsb jae aam cmp cmp adc sti loopne xchg push add push addr16 jl add (bad) sub test xchg xchg inc mov dec xchg scas jnp sub outsl pusha mov in inc out adc and add adc imul jo sti dec stos popa cwtl in adc jb adcl push out das adcl in loop jmp and push dec jl mov ficomp add dec out mov pop nop push out test fidivr daa pop lock repnz into push add stc je cmpsl mov xchg (bad) mov mov movsb dec nop mov bound in inc push les mov cmp dec (bad) fwait outsb jl nop xor bound addr16 movb cld and dec xchg or scas enter movsl fucomi or xchg inc pop push mov jnp push ja push mov sbb pop lcall pushf jo jo push (bad) and mov hlt hlt mov sbbl and pop lcall mov jmp enter cmp cltd test inc push and (bad) lods jg mov jnp jno xor or dec fs jmp mov rolb cmpsb sbb mov fcompl cmp ror inc sahf fcomps xor jmp jbe sbb inc enter sbb xchg movsb jmp jp jp sti call xchg daa repnz or cmp cli aam adc into push lret push sbb out xchg stos jnp fsts bound and sub fidivrl jge mov fistp sub pop outsb xchg mov lret test ja pop inc repz dec push cmp rcrl scas jne fs iret rcll xchg jnp test xchg jg cltd pop xchg xor push enter stos imul cmc fistp fucomi cmc mov jmp fsubl mov les push cmp cltd and cmp pop loopne rclb pop pop into pop ss adc les dec add outsl daa ds xchg pop fistp push orb repnz ret pusha pop dec inc or cld jle cmp and aas jno xor mov les gs lret inc cmpl fs stos add push mov inc mov leave jnp cwtl cmpsl insl fiadd fs hlt scas gs jl sub fildl das in sbbb mov jg stos cmp mov test lcall push mov in add cmp adc mov je jb (bad) and repz notw push out cwtl test push add xchg adc ljmp or inc add push aad xchg sbb or push jmp es incb sub loop fadd pop or gs sub xor outsb sub pop adcb sbb (bad) pusha sub jg jns add xchg imul aad jae mov push cmp xlat ds sti out cmpsl cmp xchg sbb jg test sub lock hlt lret sub push bound or es pop in mov shrl in gs pusha loope xchg pop notb in shrl xor fnstenv xor sbb ficoml mov cmpsl push les add divl hlt mov pop cmpsb jne and and lret scas je test jp mov insl fsubr jle fstpl lret pop cmp enter bound je (bad) lret pop out fdivr in test adc fsubs mov adc bound sahf fldcw sub repz scas jmp insb std xor pusha out adc dec (bad) jg jne pop cltd or mov adc pop inc stos (bad) mull nop mov add pop rorb mov dec xchg push or pop sbb repnz jle xchg cld or (bad) jo sbb sti mov push jle or lods push mov bound stc mov rclb jge scas ja jb mov loopne xchg adc loop (bad) (bad) aam jl inc xor jnp scas je mov in enter cmpsl ja mov mov jae fidivr scas in push and inc inc (bad) adc cmpsl push push inc stos pop xchg mov lahf orl add push addr16 fstps sbb hlt (bad) mov xor dec xor scas lock aam or ss pop add push inc jne and das rcl nop xchg inc sbb mov imul mov mov arpl mov outsl popf xor rol das xlat popf mov pop or pop mov add rcrl fs jmp cwtl jle sbb xchg (bad) jle js int3 mov not adcl cmp pushf mov pextrw mov cwtl mov sub fwait xchg repnz mov xchg sbb mov arpl pop sub inc dec jnp mov icebp fwait push push rclb dec sbb mov cwtl (bad) imulb pop popf adc dec inc fdivrl mov sbb scas dec sub or cs js mov fistpl std leave arpl outsl xchg push loope mov and cmpsb or mov mov xor or cmpsl xchg mov imul mov stc cwtl jge jnp mov scas push nop cmpsb jne pop ljmp lds mov mov xor push arpl out (bad) pop jb movsl mov repz push lahf xlat inc faddl xchg jg jg cmp call imul hlt pop or test and lods mov xchg fisub andb fildl mov es sub loope imul ds mov fmull jno sub lea daa sub sub arpl icebp scas shr dec mov in ret cli ljmp in ret shlb lcall movsl and cli xor cmp push xor mov hlt cld cmp sbb data16 sbb mov loop fstps xor jmp inc pop pop iret pop dec lods in aas ss mov jbe aad test cmp stc rcrb fwait callw push push xchg jecxz add xlat sub clc cmpsl jge inc mov jl dec jle call jl adc mov push insl mov outsb sbb pop jnp jns mov adc stos mov and pusha sub test mov sbb repz call or insb sarl inc lahf add jb jecxz ja,pn add inc subl and push xchg pop (bad) fcomp cmp jle adc or leave or push mov inc movsl xor and les mov mov push fs daa inc scas insb frstor mov pop ror push shll jb jno int3 call cmp and ret pop push cs sub es es das shl sahf enter mov (bad) in jmp arpl test xchg pushf dec stc jp push insl and mov in fmull jecxz stos push pop loop adc cmc mov shll xchg adc mov sbb es pop jno out leave jo fist xchg movsl inc adc notl data16 jbe dec clc fsub lcall jns jnp ljmp jl cli dec and or add jns jmp xchg mov rcrl js ret das and nop mov insl cs enter adc sub cld pop add out shl (bad) repnz sbb xor cmp jl (bad) sub daa add mov mov jbe rclb out jg sbb insb rclb push cmp mov xor or imull sti pop xchg jge fsubp iret cmp jb (bad) les daa cwtl cmp (bad) test insl fcmovne enter ret or clc cmp or out sti xor xor inc jmp and clc hlt jl cmp fisttp mov (bad) ret add addr16 dec jns test out dec push aam jmp xchg repz mov rcll push sub xchg pop jns add scas mov imul (bad) jne and clc push in push jbe aaa push call in pop das insl sbb and add ret (bad) xor lea or clc or jmp lahf sub push loope ror mov mov and xor lret loop mov orb mov hlt mov lahf data16 pop inc adc cwtl pushf mov sbb inc dec push in cmc adc dec cs xor ja scas sbb outsl jnp jb jns test adc fadd push icebp pop push mov jne mov xchg aad sub gs and imul sarb mov pusha cltd out jecxz fiaddl and add jl test jp (bad) in cmpsb cmp or cmp and mov push fmul and data16 xchg icebp sub xor xchg jecxz dec loop lods adc fidivl and mov out mov jg push fmuls cmp fdiv loop test xchg daa push pop les sub and (bad) popa hlt pop movsb lods pushf dec loopne xor dec or aaa sub or mov mov (bad) inc loope cli loope or pop mov adcl mov sarb stos dec mov push pop adc inc push (bad) dec adc push dec pop mov mov and loope pmaxub pop mov rcll out dec nop ret inc loope sbb or pop add xlat xor mov ret jge cmp sub pop adc pop lods jge cmp jo jecxz push push movsl daa and mov mov es push ror push std aas xorb sbb mov jbe xchg bound pop cmp rcrb das hlt add push lods cli lock or fs push ss push sub loope nop aaa lcall adc adc adc mov iret (bad) adc pusha fldcw jne dec mov adc mov jnp scas sahf sahf scas icebp fcomi push xchg sbb andl xchg test (bad) dec sbb bound pop aad xor lahf push decl dec push mov popf inc test bound sub cmp mov movsb dec fisubrl sub notl mov shrb add pop push mov lahf cwtl scas dec (bad) xchg or lret jge jp mov sub faddp cmp inc xor test sub xchg loopne daa inc dec jp mov inc inc adc jp dec call out movsl jns repz idivl mov fildl mov inc cmc stos call aad pop jb inc (bad) adc mov enter shrl rclb scas andb push pushl icebp mov inc nop fbstp test cli rcrb (bad) mov mov (bad) scas sti mov dec ret pop es hlt mov pusha mov sbb cmp (bad) (bad) movswl xor aam xor addr16 jo jecxz or ljmp int3 stc xor add jb aad js xor and sbb rol sub enter xor lds or mov pop std hlt push cmp daa dec mov inc jmp push mov cmpsb mov sub inc jns sub and aad push mov mov out push pop pop iret jge div gs push imul (bad) addr16 leave jb clc inc dec lea push es shrb inc lds into jbe mov (bad) sbb sub push dec shrb in andl outsl dec es sub pop lock lea pop sub or cmp incb adc lock cmp xor adc lods ljmp inc lods mov and sbb jns cmp pop negb push sbb or lret insb mov inc adc or or mov jp jmp cld icebp xor fs inc popf mov out aam mov inc (bad) or ret mov movsb lcall jbe pop mov repz pop lods adc mov pop jmp rolb js sbb sbb xor (bad) pop int xchg testb dec mov add cmpsl int3 mov cmc mov popa push sub repnz push outsb jmp lock add inc xchg and fldt loopne and jle dec mov jno xor out es or test cmp (bad) cmp add xchg (bad) addb cld or outsb cli stos jmp jo inc sub dec xchg cmp inc xchg adc cwtl mov (bad) and lods jmp adc lods pushf mov sub dec mov ja add jo sub ss and sarb outsb cltd aaa lcall push lds stos cmc nop leave push dec (bad) popf out popa inc cmc inc push and test dec xchg mov stc rorb fldt jg cs stc mov pop data16 dec xor mov mov adc or mov jmp jnp fsts out hlt cli cmp imul push sub (bad) into inc or loopne test outsb outsb cmc or das jp rcll or mov jb dec lea std or mov aad stos pop nop jp inc cmpl xor xchg adc jns mov pushf mov std xor out pop iret aad (bad) popa jecxz sbb mov cmp repnz outsb aaa add mov add je push mov shlb outsb iret push cmp aas push sbb dec mov mov gs insb adc adc scas std push and scas push pop pop pop jl jmp add ret lods mov adc jl je push roll pop push adcl out scas jle mov dec mov mov mov pop outsb fcomps roll clc dec mov cmp pop mov enter push push scas adc fs enter fs pop jno (bad) ss cwtl std mov in dec cmp inc jno imul mov mov inc cmp add mov popa xchg clc or jb aad aad in or (bad) in mov sub mov push push sbb icebp (bad) stos in jbe (bad) mov sub (bad) popf mov adc movsb scas pop or movsl sub pop inc sub push cmpsl mov and paddusw dec mov push je mov (bad) mov mov pop in mov jl jno add sarb std stos adc push adc testb pusha aaa dec sarb dec cmp fdivs push lret cmp fisub jb inc mulb pop arpl push cmp pop mov mull xor xorl dec push pop pop lcall pop cmp jo mov cltd mov sub add sahf jns sbb jbe adc int3 cwtl sbb jb inc test or mov jns int3 push frstor lret sahf xor ret int sbbl loopne or shr imul inc mov test xchg (bad) xchg mov adc and into push cwtl sub cli xchg cmp mov leave add mov (bad) mov or (bad) xor cmpsb or (bad) and or pop mov xor (bad) (bad) js mov (bad) xchg jge mov lock rcl pop add ss icebp cmp lcall imul enter clc in mov shrl sarb rorb movsl mov mov cmp push jo ja arpl (bad) pop cmp flds test push cmp mov xchg sub subb movsl pop cmpsl or jo inc adc dec (bad) xor movsl push inc mov fucomip add fstps cmc es add loope jle out mov (bad) mov xor push mov xchg push xchg xor clc out mov add aas and mov (bad) sbb pushf xchg cmpsl inc xchg arpl mov sub sub insl and dec inc cmp adc adc in dec jae cmp xchg test dec jl movsb in push mov mov or in fisub loope mov dec aam inc and lea inc loopne lret push cmpsl jno sbb lea push or lret add xchg cs cmp cmpsb mov sub mov aad scas neg rclb loope jo andb xchg push add jns movsl idivb nop xchg inc shlb cmp jle mov hlt push ret xor into movsl nop mov js lock into jb sub in xor fsub sbbb in push popa ljmp cs shll sub cmpsl pop sbbb xchg mov mov test xchg cmp lret jmp stos jle fs or nop aad sarb divb and aaa test (bad) sbb daa mov es and xchg jp xchg push push fsubrs jp or mov lods push jae scas xchg shll and sub xor gs popf jp std std add dec lcall lahf sbb jge dec mov jnp imul xchg lcall ds xchg and mov xchg loope pop int dec jle cmpsl push sub movsl sti fimul mov pop shlb sub pop rclb mov inc jo (bad) lods aas adc and cs movsb cmc or dec adc mov pop inc and out inc xor lods fcmovbe cwtl jle sbb js add inc pop adc and push mov gs les aas push xor adc decb jmp xchg lods es ja mov movsb arpl orl lea ret inc std mov jo stos mov push int push sbb rcll lret cmp repz shr fistl subl sub and jbe gs xchg sahf insb sti mov xchg fild repz sub in lods in lods std in movsb lcall movsl lods xchg inc out sub je xchg jp inc sub mov jb mov mov push faddp sub dec xchg mov jg sbbb sub jbe cmp je inc mov in sub pushf cmp xor test xlat adc add cmp jmp leave mov mov sbb mov lods or dec (bad) roll imul out out and push clc ds cli out add mov imull xchg pop rcll test mov ficom out movsl int add inc or sbb jo mov xchg fistl imul sbb shrb or push pop cmpsb mov sub or xchg xlat jp aad stos adcl mov inc xchg pop mov mov insb mov into decl test arpl lahf jle or add fisubl (bad) mov adc adc inc pop xchg fs jns lock dec lds mov xchg (bad) mov xchg mov setne aas test mov inc cmp in xchg add cmp xchg jle iret std lret sub loop mov push movsl pop std cltd repnz cmpsl mov xor scas dec mov lods inc pop fstpt cltd sub jae,pn and add out dec cli mov xchg or pushf mov or mov dec js mov mov call movsl sahf mov hlt (bad) adc xor nop (bad) add sbb mulb loop loope in mov jl dec stc jns out lahf cmpsl jl aam movsl xchg pop push pop mov add lods push test hlt pushl (bad) cmp add mov test insl and insl aad mov adc cmp adc imul push sub sbb jnp push push sbb jle inc ds and add cmc fisubl fbstp mov outsb push insb into out pusha test add fsubrl push out adc lds dec insb mov lret subl shl mov in push push jns pop jbe (bad) push cmpsl jbe jbe (bad) mov ljmp stc dec test sub or or jbe sbb jp into cli xchg cmp loope xchg adc mov adc mov stos pop jmp or mov fldt mov imul (bad) sub xor add fmuls push jge loop mov rclb test lahf out mov mov dec push aam lods mov xlat fstpl inc in (bad) (bad) icebp (bad) dec sahf data16 mov scas push mov (bad) icebp mov ja dec iret xor dec pop subb insl xchg push or mov adc sbb rolb aam jl rcl popa inc call stos repnz pop inc pusha cmp in or jp frstor pop lods test les in jge out sub js (bad) inc int insl push jb mov inc adc adc rdpmc cltd or adc adc ja adc test sub cli lret mov mov mov mov inc mov cmp xlat inc and xchg insb jle fs sub in pop xchg jp cmp mov sub movl aaa dec mov lock pushf popa sub out pushf mov and hlt loopne xchg adc cwtl orb lods inc and (bad) push nop leave fwait xor mov xchg std mov adc and mov insl xchg jns cs inc stos std out push mov inc pop jae add into movsl mov mov push and xchg dec ds mov test imul xchg fdivs andb imul dec mov fs clc dec xchg mov add adc lea test stos jns add icebp pop into push sarb loop roll adc xor and jnp mov je push mov imul jge pop dec lods jns mov out inc adc cld add mov adc xchg dec inc jno push pop out in mov mov xchg cmp fistp gs jmp in mov push add dec sbb mov push mov sbb adc inc adc std and out lea adc movsb (bad) pop das in je pushf les pop outsb ret xchg (bad) rcrl adc popf iret adc nop sbb mov mov scas arpl test pop mov sub sbb xor jecxz jmp ffree fwait jne sti sub cmpsl pop femms and loope inc push push cmp stos imulb movsl or les mov cmpsb iret adc jnp mov iret mov cmp xlat mov shll dec xor jnp jae pop mov mov sti lahf nop shrb push inc outsb cmp ljmp scas add iret or adc cs fidivrl xchg mov mov mov jb and sarl mov in mov punpckldq test lret in xor inc sbb dec cltd movsb mov xlat sahf push cmp in cmp and std inc sbb test or sbb stc lea sbb test lock or jp in mov inc xchg mov pop mov xchg adc (bad) clc jl pop mov ja ret push push jp sub xchg add add or push scas inc pop jmp imul leave cs jae adc out int3 out push add (bad) xchg dec aam xlat addl aam jecxz std xchg mov aas sahf adc cwtl sbb outsb stc mov movsl pusha out mov sub adc inc cld and jbe and push rcll test lcall jecxz pop mov push outsb pop divb add dec ljmp push cltd sub mov xchg xor push (bad) sahf adc mov push iret fcompl jne repz add sub jbe mov mov pop xchg mov adc mov sub stc ljmp hlt and pop xchg les rorb push ja xchg (bad) and daa mov in pop out inc inc nop (bad) daa cs mov outsb imul js lock iret pusha test xchg dec jbe sbb mov cli outsb lds push outsl dec pop xor adc (bad) test flds and sbb out pop adc aam icebp stos inc push inc test xchg shl adc dec cs int3 in hlt pop aam mov in jecxz movsb fs sarl pusha std jg into insl mov sbb es xor xor shlb dec test and sbb jge sbb pop imul add rcpps or aaa mov mov jp add inc push data16 std lret lock dec andb cltd out mov hlt (bad) leave xor mov push mov jecxz push sbb (bad) xchg xor xorl cmc jmp cs or lds dec sbb mov decl inc je js aas xor and out enter push sub inc and sbb jnp int3 out data16 sub add mov incb movsb lods pop jo je push lret scas sbbb iret push xchg xlat insb fimul cmpsl xlat cmp scas cs mov jns add and frstor mov push cmp sub pop pop (bad) mov cmp aaa fdivp push js ds lret ss fs in and sbb aas pop jns movsl lret xorb shlb xchg mov jne xchg mov rep mov mov pop lods (bad) jns jge jne addr16 xchg xor dec mov enter outsl or sub (bad) or lahf loop jne mull inc add insl fs mov lret (bad) fisttp jnp or in lods fbld mov incb (bad) cmp cmpsb popf add cmp shl mov push rcll sti push mov or mov mov sub in mov test mov mov imul sbb ljmp or insb sub jmp call inc sbb inc pop sub aas dec adc lea xchg inc xchg adc mov mov dec loopne push jmp sub fisub xor jnp mov inc push pop add jecxz add imul and mov pusha jge xor fsubl daa fstp test fidivr (bad) and push leave inc mov loope mov bound pop in addr16 loope test and rclb gs out fildll movsl cmp dec loop fucomi cmp dec mov xlat add movsl cmp movsl cli jmp sbb data16 loope adc (bad) (bad) aam inc jge sar (bad) divl pop adc cmp push xchg pop pop ja std ljmp js insl imul pop jns xchg mov enter scas pop xor out add (bad) jne (bad) je repz inc inc insl and fnstsw push xor aas daa pop and mov xlat negl divl (bad) fldt sub mov stos inc subl mov xchg sbb rep pop sbb arpl push xchg xlat pushf (bad) dec hlt mov in ss sub outsb lods pop pop inc jne lods mov jecxz add (bad) in mov push les xchg jne addr16 mov jge fnstcw jnp jmp dec cmc inc jle mov aas mov rclb scas or and mov out test adc dec sbb popa mov mov xor loop cmpl js jle xchg mov mov jne shrl (bad) int xlat mov sub test pop inc xchg int rolb jp outsl mov mov hlt sub out mov lcall pop xchg push xchg mov sbb mov repz push lahf div stc cmp push xor or hlt jb xchg and outsb jg enter add les out sbb imull mov mov stos fnstenv loope xor jle lods ljmp hlt or mov sarb pusha pop pop lods jge add jle lcall dec inc inc cwtl jno mov mov ja js insl (bad) lahf xor inc push inc cli fisttp or cltd iret mov xchg dec data16 shlb cmpsl lret iret (bad) sbb leave icebp xchg mov push rcrl out jae shrb test out pop jne lret push fwait jno xchg int3 jecxz cmpsb lret cmpsb or or aaa fmulp das int3 out cmp fiadd (bad) jo cs mov push cmp add mov loop repnz je mov repnz or movsb mov jl or push mov pusha test adc fcmove xor lahf adc inc clc mov mov mov lea cmp fwait lds ljmp negl or mov inc loopne fsubrp mov mov iret inc cmp and (bad) arpl ss dec (bad) je cld cltd dec push ja xchg int jb movsl add push std outsl cmp push inc xchg adc dec sub in xchg cmc int cltd mov stc test stos pop lret shrb adc and popf cmp shll stos lock lock adc in jmp je imul adc in adc jns divb xchg dec adc adc cltd fwait int dec adc pushf or fstpl flds jl dec ret stos idivb fs inc add and cmp inc mov mov mov add mov add pop push int dec xor jp lods jle pop cmp push push mul sub scas pop or dec int jnp jne subb mov cltd stos mov xor movsb push sbb xchg insb sbb lret sub cmpsb sbb fwait or cmpsb imul pusha shll sbb dec mov jbe inc jmp lock push (bad) cmpsl (bad) mov js shlb dec mov scas mov idivb push (bad) adc and lods mov popf mov push jle inc popa pop lds jae add lods dec or (bad) lock xor pop and repz add cld jge jbe movsl in clc pop add dec pop xchg add sub leave lods (bad) pop mov inc inc cmp or mov jb xchg mov subb xchg mov mov out and repz add inc xchg scas fmul stos fwait jne jbe shrb pop adc mov fmull sbb pop loope sarl (bad) movsb outsb mov cmp jmp mov mov mov xchg daa add mov aad and and fs inc sub xchg test mov loope rcrb dec push fstpt incl test bound les dec cmp jl sub in xchg xorl pop mov in xor pop int3 iret ret cmp aad jmp cmp daa add inc je (bad) jbe loopne jle or sub push push incb jge xchg movsb jne cmp sbb std popf push mov sbb out pop add lret dec out lret pusha push inc repnz sbb push adc ljmp ror rcrb loopne and jl icebp inc in pop inc xchg shr pop xlat sub gs dec out out fbld fwait xor jle mov imul cmp push jl mov lret icebp inc imul sub sti orb lock inc aas loopne inc cwtl add fldenv xchg xor xor push mov sub sub push sbb sbb jns push add dec inc jecxz xchg scas (bad) imul out lods jns jnp adc movsl xor rolb or andb cmp mov push into jns test fisubl push pop or adc test scas inc test xchg mov lods or mov test pop ja insb loop mov inc sub cwtl jne jle cmp jg test sub outsb nop push cmp subb add (bad) addr16 push adc fbld xlat xchg fs fst jne jle sub loope dec jbe mov outsl push stos je test or icebp pop insb push cmpsb or add test dec xor mov fcomps movsb dec in pop enter (bad) imulb (bad) sub dec and add jb (bad) int3 mov pop movsl pop sub mov sbbl inc addl mov and sub (bad) repnz push int lods cmp cltd or lcall sbb pop rorb out dec jno or or jne and dec pop aam (bad) ss aad and sbb inc fxam sub das inc sbb jge push pop mov mov adc (bad) sub fidivrl outsb outsb xchg mov leave mov aam lock enter (bad) mov sub gs std movsl orl jle mov fwait sbb ljmp outsb test dec and sub inc mov repz add or mov es mov push sub sub jbe enter jl mov pop jg mov and lcall in cltd repz push ret iret push es rcl push xchg xor test jp pop add or cld inc (bad) pop jge jg xor pop push frstor je xchg pop dec ljmp mov repz aam andl outsb in test sub pushf mov arpl adc add dec pusha lds mov movsl (bad) (bad) int3 mov std sahf xchg push or ds js or push jo inc lcall (bad) jbe stos subb xor repz loop xor dec stos cmp fsts fs lods in jb clc icebp (bad) and mov fwait sbb loopne jns mov adc ret in lret sbb (bad) loope aas dec pop in mov cmp xor cmpsb loope rorl mov enter arpl movsb push cmp sub aaa cwtl dec mov mov fistpl cli push addr16 sbb cmp xor rolb mov fchs mov ret sub idiv ja fistl xchg aam or adc push mov jns insl sub imul cmpsl lea mov mov mov xchg jp leave mov jns fild fwait or loopne cmp repnz push mov mov jl aaa jo lea in mov xlat (bad) jmp pusha (bad) jb add bound dec ja fdivrl cltd clc xchg imul sahf xor push shl xchg jns fcoms jne fstl imul adc movsb gs mov push roll pop lods inc bound ja ss lds adc arpl mov mov mov adc (bad) lea add (bad) aam and insl dec mov jp loop push enter xchg mov das lds cli dec add jle cmp jge push pop adc shr ja stos stos ret data16 push les aam lahf lock punpcklwd jae repnz mov inc fwait insl pusha mov mov cmp mov lret xchg pop mov iret xor push movsl in push iret lea jno push mov xor jp push lahf pop cmpsb and (bad) xchg bound or test add xor cmp push test aam adc cmp jne jecxz pop mov inc arpl ret mov inc adc test cmp push push adc mov xorl cltd sub or jb repnz xchg fs (bad) jo dec call cltd pushf adc mov stos dec jno sub stos dec mov mov test jg jp jae jb adc int3 pop (bad) dec mov in stos mov cltd mov sbb mov scas cmp ja hlt repz cli jge sub xchg test jbe xchg fidiv andps lret mov int3 icebp add mov mov mov imul pop or mov and lahf xor push cwtl mov cwtl push jg inc sti imul ss out jp mov test imul push mov inc jmp std lods sbb mov cmpsl out scas adc push and sub test loopne dec dec mov push cltd dec xchg xor repnz js mov daa or xchg stos sti xchg test ljmp out orb insb or les repnz and push xlat cmc cmpsl pop push or xor cmpsb icebp jecxz repnz jne mov mov lock mov loope xor mov daa incb rcrl lea xchg or bound ret and sub xchg pusha push mov dec push rclb inc outsl int3 lock scas les push rcrb jns xchg outsl mov fisttpll lods mov loopne lods dec mov ljmp adc push movsb push or pop imul xor sarb loopne mov stos mov push mov push div es scas movsl dec int3 and xchg inc int fcoms mov or xchg add push jecxz push sbb jbe dec sbb adc jmp out pop sbb mov hlt xchg mul lea xchg push mov (bad) cs fnstsw inc sti pop dec xchg and dec cmp notb and leave loope lcall push enter mov jo xchg dec stos shll lods xchg pop push lret xchg or sub iret add notl outsl pop lahf sub fcoms arpl in sub insb lods lahf or (bad) popa pop pop mov pushf xchg stos pop lahf adc aam scas inc jle sub jg in test push jns mov cmp mov or xor pop cmp clc loop nop jbe pop mov mov loop popf fisubr dec (bad) ds cmp add scas lea pushf aaa sbb enter fisubr outsl jmp mov push test imul stos adc into jae mov aam imul hlt dec (bad) mov add mov clc lods inc pop mov rolb cmpsl adc jmp push xor je mov outsb xchg pushf ja jnp test pop or sti jmp ret lods lret pop inc in pop push out dec mov and js in sbb loope add or ds in push mov imul out push shrl (bad) add mov dec mov pop negl lahf int bound sbb mov mov inc imul cmp and jns cmpl out mov loop outsb lock dec cwtl ret push (bad) outsb and inc mov inc lock sarb sub inc test pusha adc call mov jge and mov xchg lahf outsl stos aad cmp cwtl and mov int3 loope jg inc xchg das inc test fimull xor ret jo cwtl jbe mov lea (bad) sub cmp xchg iret out mov stos stc add lods or dec mov test addr16 mov jecxz dec addr16 lcall in xor xchg jne dec mov mov mov mov adc inc mov push insl lcall dec (bad) push frstor sbb mov xor lea in xchg sbb ds lock divl mov arpl jno inc ja sbb ss je shlb jbe movsb inc insb nop inc or pusha mov cmp enter dec hlt jg cltd mov fmul cwtl cmc int xchg dec or fmuls xchg dec aaa push pusha xchg inc inc sbb adc xchg jg cs dec inc popa lods (bad) (bad) and cmp push leave loop add mov push mov xchg mov xchg adc mov sbb xor (bad) shrb sub lods adc stos shrb rclb mov xor lcall pop sahf imul xchg loop lahf xor aam mov mov jns xchg lahf dec pop sbb in call jns movsb pop dec loopne je fisubl mov xchg dec jo xorl int3 pop add test lcall arpl or pop jnp add mov inc jae out xchg inc push and stos lock sbb sub and out xor std (bad) arpl pop out and out cmp mov inc or xchg push cmpb mov sbb sub or es mov add ds call mov jne pop adc cwtl popa sub movsl mov repnz cmc inc out xor xor (bad) daa cltd popf fistp pop mov lods lcall fiaddl jne mov movsl push je lock adc adc and xchg hlt mov add push in in loopne nop fcoms int std arpl inc lret call xchg or xchg mov pop lds adc into addl int3 fnstcw enter adc xchg cs pop pop and cmpsb (bad) out and xchg rcrb stos mov mov dec inc or or jbe lcall scas aam aam fdivrl and xchg in loopne xlat aad cmp idivb jnp (bad) and ret jge mov add negl idivb dec adc mov stos dec in xchg mov pop in pop mov mov cmp sbb ja aam and jbe jae mov pop cld icebp xlat loop shl gs data16 adc adc sbb cmp jl mov mov jp sbb pop int sub (bad) repz jge pop add xor sub mov mov push pop xchg rorb or mov addr16 mov adc pop xor inc lcall and cmp mov or ficompl cmp fisubrl pop lret jns stos and sahf mov adc sbb inc fdivrl (bad) fdivrs ja arpl (bad) jp and push cmp sbb jns jecxz addr16 push jbe cs or pop pusha or push inc sbb fpatan out cs ljmp out decl fidivr insl xorl clc push pop ds sbb mov (bad) mov aam cmpsb add fmulp mov sarl push and jnp popf jl ret mov jae push mov ljmp sbb test loop neg stos xchg into push adc xchg test out cmp (bad) mov outsb inc clc push aaa mov dec jns and mov fs sbb cs dec mov movsl inc push xor inc jae,pt mov xchg in int3 jae in cmpsb mov pop fisttpl mov xchg or idivb jle (bad) mov ss popa icebp sub mov lds sahf cmp adc mov and repnz push mov mov shl mov shl test or sub out mov mov inc jno xor sub dec and pushf ss cli mov rcr xor pop jnp inc movsl ja (bad) jb xchg cmp mov ljmp fwait es mov icebp ret mov mov aam jbe dec mov mov mov lods push shll jo cld xchg sub mov out mov and xchg aaa xchg dec in orb inc mov out push or add dec out xor in cld or pop add pop add mov or lods popf and mov shr pop add dec out movsl iret jae xor das aad jne js xor or lret rcl sub sub (bad) (bad) sub ds lcall pushf xcrypt-ofb cmpsl stos jle out addr16 cmpl mov add shlb xchg dec movb mov pusha add ret pop sbb movsb add adc push cmp mov jg jg sbb pop xor je,pt test jo jecxz add sbb test ss dec jnp pushf xchg fstpt xor fisubl outsl call pop sbb mov cld out js cmpsl cs rorl cmp in jnp add inc pop insl cmp fcomip (bad) adc stos dec inc add outsl in stc loopne aam pop fidivr fidivr aam and jg add mov inc sbb dec std loop mov std dec rol dec xorl sti push mov fs or fidivrl (bad) or fldt xchg iret cltd and push es nop loopne cmc sub out in lock push sahf lret cltd lret dec fsts push mov adc gs pop pop lret decl leave mov test jnp or jle pop ljmp mov jne pop add outsb hlt lods dec jp test ficompl sub in in xchg bnd sahf cmp xchg cs cmp ficompl sub (bad) dec fld punpckhdq and outsl scas and mov ds daa push daa (bad) in mov into ret into bound fs fbld inc xchg mov repnz jne out fnop fimul rorl inc xorl rol xchg dec mov into or xchg test subb xchg jecxz rcrl lret (bad) mov mov push test sbb xor test fcomps dec call mov add jae cwtl mov dec xlat pushf fistpl jg mov call push or jnp (bad) xor ds adc xchg jnp fbld jnp lock mov insl rclb jl adc (bad) pop or aam add aas dec in mov fiaddl mov insl pop push into test and xchg out and mov xchg push jbe push and ret mov lea sbb ret adc jb xor mov test mov mov dec outsb push insb aaa inc cli adc stos sahf mov out notl pushf mov xor mov scas mov insl popa inc push push push lret jl and inc pop outsb pop fstps mov les add cmp mov aad movsb data16 lock dec das les jo stc inc test in cmp mov test pop outsb jo push pushf add ret into xchg xor add sbb sahf lods ja in dec adc sahf inc test jne add push cmc sbb inc xlat adc jle mov or leave cmc mov mov xchg mov std lahf scas fwait add jno int3 mov mov or leave jmp xor cwtl mov mov (bad) out dec and test (bad) add jmp imul push sub (bad) in int3 sbb (bad) adc pop jle jae sub mov scas xor sub nop mov mov add (bad) lret fcompl adc mov stc inc xlat (bad) sbb rolb scas std mov in popa adc shl enter dec bound inc cwtl jmp aas enter mov call dec in cltd hlt jmp aaa (bad) outsb mov add mov insl jb aaa fdivrs add pop dec call adc xor rorl fwait rolb jl jl fsubl xchg or stos outsb fild push and pop outsl stos cli fldenv sub aas daa or lods mov (bad) insb icebp jbe (bad) adc push mov movsl fsts sbb push push cmp add pop enter add out out arpl add ret xchg fcomps adc xchg fucomip scas or cmpsl pushw sarb sarb cmc pop test xor push or cli fisubr pop imul jno push xchg stos scas xchg mov jb xor mov ljmp jp xchg jae ja xchg cli jl rorb dec or cli cltd nop sbb adc clc and js loope sbb and pop xor dec out lahf daa mov push mov xchg in xchg insl pusha aad (bad) fbld maxps xor jne iret call dec pop xchg add lcall mov paddb and mov cmp jecxz pop xchg ret sbb push in loopne dec push (bad) sub dec dec mov xchg cmp push shlb inc dec mov adc mov xlat cs ds mov lret or inc adc jnp int dec and sub pop int3 xchg pop mov (bad) insb pop inc mov dec push xor add push mov pop inc dec aas cmpsl mov in rcrb outsb jae push out xor xor cmp loope mov push dec sbb call mov sbb adc loope xor (bad) aam xor mov movaps mov cwtl imul ljmp mov xor jmp inc mov rolb xchg mov (bad) xor lcall cmp cmp cli cmpsl fistpll into shlb pop jns (bad) jo in out shlb xchg inc sbb mov bnd xor mov fwait repnz push out lock jns (bad) ljmp mov sbb xor or add int3 int3 fdivrs jp add mov (bad) pop mov test xor mov pop clc fadd or xchg mov adc cmpsb test xchg xchg arpl sarb popf jb imul mov mov pop add mov cltd lods movsb ret sub cmp fldl bound shll movsl sbb shll mov lret iret aas inc pop xor pop jge rorb out adc add pop and lret or fnstcw lods popf lock out decb outsb cltd cmpsl mov daa outsb int fbstp test cmp fs sbb scas mov out ret pop out movaps lds leave push mov lret cltd and lds xor mov loopne mov mov pop adc jo bound dec xchg mov jo inc lds jmp or cltd adc jno loope inc xor test dec sti mov push fdivrs cltd jae mov dec in iret dec test dec and or jno fidivl (bad) adc add aad mov sbb mov push cmp imul outsl push cmp pop sub insb pop push adc inc lods stos lods sarl in xor lret adc lret add mov xchg lret test fucom inc xchg jle xchg sub pop addr16 or mov xchg or xor in mov int add fcomps jle mov popf cmp xor sub sbb lret arpl jmp sbb repnz ljmp or pop ret sahf mov sub mov jmp add xor pop test test push xor xchg mov sbb mov sub jns xchg mov push push sti lods gs mov sbb dec repz dec cmp aaa xor and clc (bad) and cmpsl jl pop in push inc test jo (bad) jmp jo jmp (bad) in push add repnz cmc cld gs cmpsb gs out sub xchg je out int3 xlat and push mov (bad) push insl aas jle mov fisubrl jmp std or jo nop pop daa mov mov fidivrl rorl in lock aas mov push inc adc ret xor lock sbb xor sbb (bad) xor call scas fbstp xor sar insl testb push call (bad) outsl (bad) sub test cltd arpl cmp or dec nop xchg call bound sbb cli (bad) mov pop cli outsb add cltd pusha (bad) das inc push scas xchg daa adc mov rcr lock lods cs ljmp jmp xchg pushf xchg mov sub aaa rorb push bound enter add es sub cmp clc addr16 pop das cmp mov dec (bad) and inc inc adc sbb and mov cmpsl fs rcrb push imul sub mov sub repz pop (bad) outsl gs cmp pop std xsaves inc jmp fdiv (bad) or pop sahf ja out fsubr or sbb inc xchg (bad) int aaa fldcw mov sbb sbb add gs cmp or rorl test lock ljmp cmp xchg ljmp mov mov setp int mov scas sbb cmp inc (bad) xchg push nop nop aad pop hlt push adc dec sbb int js mov pop push mov pop mov jp enter mov (bad) imul inc jp,pn pop xorb notb sub in hlt sbb inc mull mov jae ss xchg scas push notl icebp lods jecxz inc je pop mov stc pushl and fdivl popa imul xor aad sbb jg icebp xchg outsb andb jbe pop stos xor (bad) or xchg int cmp mov push shlb and ffreep ds imul mov add test xchg in adc enter movsb aad cmp mov mov repz jne ret mov in (bad) ljmp jb loop mov mov aad push hlt jns roll and sbb xchg (bad) je push fdivs sub cltd test jle icebp jl push or pop sbbl sub dec data16 sbb aam jmp sbb jge push mov xchg out aaa sbb jo movsl dec jl leave or enter xor add pushl (bad) ficom jmp test icebp lahf add inc push stc jle jo mov inc popl jp adc adc jns xchg lcall mov cltd je mov xchg cli xchg pop adc in mov das aam sbb rcll cmpsb rcl insb cmp inc cmpsb adcl dec mov pushf test sahf or jl inc xlat jno hlt cmp sbb call cmp lahf push adc shr sub mov lds sbb mov mov outsl repnz (bad) sar mov pop or in movsb mov bound push dec loopne sbb outsl adc rclb xor mov push and mov lea cltd mov add pop shr dec out dec pusha and lock test xor jns je rorl pop loope mov mov mov and ret movsl out inc xor pushf stos lods mov (bad) mov daa call xchg outsl jo pop ss mov pop dec iret dec inc cmp and or arpl xchg mov mov add dec (bad) std dec sbb lea jge mov (bad) xchg fstps xor inc pop mov mov xchg or ja inc xchg add mov ret pop lret lock mov xchg or mov (bad) mov push ret dec and xor pop std (bad) lcall push std je lret lret dec es xor sub inc das sub sbb scas out mov das dec out adc fistl add mov inc addl mov inc lret addr16 (bad) push push bsf lret bnd push cmp inc dec xor inc test xor imul shrl mov scas stc or fcmovnb dec negl insl pop test daa std cmp subl (bad) jnp cwtl xlat sub lds or mov imul mov mov inc sbb push stos addb xor movsb insl mov cmp scas jo and mov pop mov in dec aad mov push dec inc mov and cmp pop fnstenv push jnp dec outsb scas movl adc outsb mov ljmp sahf loop test (bad) iret pop in dec lret or loop push daa adc ss jecxz and or add and adc or ja cltd pop ljmp cmp scas and (bad) jnp cmp and in xor dec mov adc ret cmp or mov sbb xchg or xor pop insb loop stc daa jo jns sti in lds aas mov fiadd in sub aaa rcrb mov jg adc jnp fdivrs xchg andb xchg sbb bound push cmp cmp cltd inc add sbbl sbb rorl adc mov mov and push fidiv jmp lahf lret mov push lea pop dec xchg imull xor pop and ret mov lock arpl push mov cmp add daa cmp in fnsave std fimull arpl clc or xchg fcmovnb dec loope xor loop (bad) (bad) in sar lods ror clc xchg xchg adcb push leave ret loop enter adc mov aas (bad) jmp push adc xchg loope xchg adc rcl mov xor jo (bad) enter sub push adc clc xchg mov popf scas cmp pop ret adc je in jbe,pn mov jns push scas xor aad mov enter dec mov popf jns cmpsb add cld mov arpl inc int dec nop sub hlt jno pop loope std jl aaa pop loope push lods nop jmp xor push or mov pop push add mov sarb push sti mov outsb adc imul mov shrl aas mov sub xlat shlb ja xlat dec jp stc jmp cli je cmpsl sahf dec sbb out shl rcl lret or out dec nop nop adc xor sbb mov ja jns mov add inc jmp add or mov int3 (bad) push in adc jns add mov (bad) mov and fsubrl sbb insl int adc shlb call mov mov clc lods cs push jle loopne cwtl lret jb scas mov or jmp psraw fsubrs xor dec fimull or lcall sbb (bad) fs or pop mov jno scas xor adc mov cmp push repz iret pop inc sbb mov int3 sub xor std push jge sti movsl movl and push notb and lcall push popa cmc and out in add ja xlat pop push and rcl xor pushf mov outsb bound push xchg in test leave mov les mov or cwtl xchg cmp or xchg in cwtl sub hlt (bad) mov cltd mov xchg lods int mov adc movsl (bad) mov lods mov cmp sahf pop imul dec inc xor cmpl (bad) int cmpsl xor and leave push cltd pop dec mov sbb iret adc jmp inc insl xchg fwait push dec call sti sub or cmpsb and and stos inc rorl aam (bad) enter push xchg jge das movsl or shll movsl in repnz sbb pop iret push mov dec pushf test mov hlt sbb out cli sbb icebp add cmp daa lcall (bad) fildll cmc in add inc adc inc aaa and gs fisubl into cmc mov into stc xor rcrl mov push xchg mov mov xchg push bound inc fimull lahf es les scas pop mov enter jg dec and sahf stc cmp lods (bad) int sub pop rorb data16 jns jnp mov mov fbstp pop inc jne xor sub jne enter sbb add imul xchg in test jbe sub test lea add mov mulps call test mov or add and mov xchg inc and movb pop rorb cli inc push xor lea data16 mov sub sbb cmp jns mov loope cltd pushf cs sar sub pop rorb push sti test xchg loop sub aaa push (bad) rorb bound cmp imul nop rcr sbb (bad) mov pop popl add in pop or sub inc lock mov push push int jmp lea ret cmp mov and cmpsb mov and fwait icebp aaa in pop mov fmulp gs ljmp (bad) icebp gs push inc and stos es add push jae scas mov mov xchg add test lahf dec sub sar adc jl adcl pop adc mov fldl inc sub in push aam jge in xor (bad) test and dec mov xchg xchg shrl dec push sbb sub sti test mov inc ret lret cmp or pushf mov or pop fs sub lahf mov cmp or les xlat and pusha cmpsb test or js pop pop jno fs push push aad int3 mov sbb pusha sbb call lods dec lcall orl push pop jbe leave and lret push outsb mov add mov scas aad add mov push xchg sbb add and loopne add mov mov push jg push sbb test jbe std add mov pop sbb (bad) xlat or movsb cmp mov sbb cwtl push xor (bad) mov call inc andl sbb fisttpll adc xchg pusha stos ds add icebp sti popf cmc stos adc or and inc xchg enter ss ljmp pop cmp fldt xlat jp mov bound ds sbb outsl or pusha jnp sahf lods or mov out fwait ljmp mov (bad) pop test dec push out scas (bad) jb or stos dec ret cmpsb cmc add sub xchg rorl test (bad) pop sub cmp ret dec (bad) cld ss cmp xchg xchg push das mov leave scas es inc (bad) jp dec leave add (bad) mov scas aad inc lods (bad) push je adc imul popa sbb mov loope add mov jno loopne call out sarb je pop cmp daa movsl outsl jmp jg mov andb lods cmp mov iret std jne movsl mov sbb int3 movl mov adc jle xchg pop pusha outsl mov xchg push sbb in andb jl sub jg dec xchg fbstp jae (bad) or mov mov ds inc dec nop mov popf fistl repnz push dec sarl (bad) xor xchg xchg into jl xchg add adc in dec xchg or sub push mov or movsb inc sar fldt xlat or enter mov test push es push ljmp cld adc jb add mov mov outsl adc scas adcl and incl fsubl xchg lock push jmp int3 rorl lock or or mov mov lods lret imul mov xchg dec and xchg testl mov sub imul leave push and xchg leave mov sub loop pop (bad) icebp mov mov lock push lods aas sub xor mov into push mov sub or ret push es lcall movsb adc and xchg sub pop mov call inc (bad) pop daa imul xor sub xchg inc mov sbb jns mull faddl sbb in incl test int3 mov dec inc push (bad) mulb adcb inc adc paddusw sti or or out imul imul mov les xchg aas notb stos push mov jnp repnz (bad) mov cli outsb mov inc ret (bad) (bad) mov xlat mov stc push sub rcrl xchg push pop imul les or inc sbb lahf and mov lret adcl add mov or movsb xchg ss push enter sbb cltd outsl xchg push ja adc add or stc mov xchg cmpsl daa (bad) popa arpl stos cmpsl jbe not jo cmp (bad) aas frstor dec inc mov dec fcoml mov push xor push xor sbb inc mov lods out xor fsubl mov lcall mov push pop fistp dec enter xor cmp inc insl (bad) mov lock test push and and adc mov xor fsub notl or add cwtl jnp pusha pop (bad) das add fdivs xlat dec in push pop jge mov mov movsl movsb mov add int3 dec (bad) jno test sub inc data16 loopne in int scas jne add ds test out adc fcompl push in cmp or (bad) fsubl dec mov mov in adcb imul sahf mov cltd push aam mov cmp js stos lock scas xchg add sub pop dec lret dec aam das mov xor push inc inc bound xchg cwtl mov repz imul jl and ret xchg mov in jge das ja psubusb push (bad) into mov mov in and in mov xchg mov mov in scas cmc mov ret hlt stos addr16 les xchg ss sub aaa sub adc (bad) jo popf lock lret roll sbb icebp mov (bad) int pop es es (bad) mov or jl pusha in adc jmp jmp out push pop popa cmp xchg iret daa sarl mov cld or (bad) cmp pop inc sahf ja xchg xchg sbb mov sub or mov out and rcrb sub or dec jecxz mulb pop and enter xchg aas icebp jp mov repnz jp mov mov jp in and fsts inc mov ds dec (bad) jo mov add cmpsl sbb or cwtl testb mov insb cmp aad sub popf jns fisubr divb mov mov mov jle in xor inc or mov dec mov jmp out (bad) dec pushf out lret rorb ljmp jl aaa mov in or or dec (bad) pop xor test fcomip cmp jmp arpl xchg push mov jmp sbb (bad) ret push imull outsb add ficom adc test mov and (bad) ljmp stc fistpll hlt fisubr fmulp aam jl xchg xchg mov lea dec fwait xchg popf push push (bad) fs inc ficompl adc stc cmp in cld dec pop (bad) mov aas sub mov cwtl movsb rclb or pop into fld shll in mov in sti ficompl pop lods mov jbe cmc insb pusha push outsb sbb sarb adc std aam (bad) adc push incl add dec imul pop mov xchg data16 int fisubl movsl inc mov in inc arpl arpl mov popa scas adc fwait das jne mov xchg inc mov (bad) sti fsubp mov mov outsb jmp sbb mov mov out movsl sbb pop out jnp call and mov adc push fisttp jno leave imul sbb pop in decl (bad) mov sbb xor and (bad) mov pop ret enter fbld mov sub repz xor (bad) je inc mov aam out add movsl imull lret les repnz out or mov sub and lds gs jge loopne in shrb idivl out outsl xchg sbb xchg sbb cmpsl xor notl stos mov sub pop enter push mov inc repz inc inc fwait jl testl mov pop lcall pop mov or fstps sbb xlat xor imul adc jp jb mov stos js out add insl cmp jmp sbbb jno pop xor sub pop in divl push inc test icebp xchg cmp dec push mov (bad) (bad) insb or idivl test rcrb jg or popa mov and sbb xor sbb and xor push mov jbe out adc stc bound inc ss ficoml mov fwait insl mov jg dec js (bad) loopne fidivl fisub loopne sahf xorl les (bad) cs jmp cwtl jnp movsb xlat pop cmp cmp cmp shl mov daa lods iret aad (bad) push mov push iret movl stos jp pop xor sub add hlt decb iret cltd sahf xor jg sub js insl cmp ficomp call lods mov xorl xchg imul push and (bad) neg (bad) ror xchg or lds inc xchg sahf pop sbb push pop sbb repnz lret cs sahf leave insb jbe pop xchg adc mov jb fmul pop jb lcall adc push jo daa mov lea adc push lret cmp lea out mov push into sti dec push mov push push cs cmp (bad) lods pop daa fstpl (bad) movsb sar lcall sbb xor sti xor divb adcl xor gs cmp cmc dec pop aaa sarb xor pop enter jo dec push (bad) dec dec adc xchg repnz jp scas movsl out testb in xchg mov lods and mov rorb cmp ret cltd mov or sbb gs and add in add add jmp dec sti (bad) fwait rcl cli push mov (bad) or dec ds dec push mov jb push sbb dec mov push pushf jmp mov fdivrp test rorl dec inc icebp adc lock cld rol jnp clc push sbb ja inc mov shr xor imul adc out and loopne mov sbb mov aad push xchg mov test cli pop mov xor push xchg add pop outsb pop xchg repz mov enter add mov jle adc pop jg add or sbb jbe pop fdivrp lods ds stc (bad) jmp sti pop mov pop dec dec or imul rol pop cmp cmp pop add adc scas out jp in lods not ret pop inc addb jmp out popa in mov xchg pop add mov ss clc (bad) jge fs scas test mov rorl cmp mov sub rcll jmp and jns and bound mov mov idiv sbb dec xchg mov lods es push fsubrl in jecxz in lcall cld push mov mov (bad) fnstsw pusha mov or dec and arpl incb jo or sub mov adc jae mov (bad) push mov sub mov sbb repz sub dec (bad) mov sub adc mov les mov inc jb dec or mov in aaa and pushf lret inc outsl pop jle shll sub inc mov and jae inc or inc jmp xchg push sub dec mov in adc xlat xor sub pop mov sub data16 push addr16 jb cmpsl pop jo xchg xchg xchg bound popf call inc sbb movsb pop inc pushf ljmp dec dec pop mov xchg or inc pushf lret fcmovne or mov inc inc orl dec aad fs arpl sbb (bad) aad pop push aam mov fistpl add andl into push lret enter aas cli sbb sub pop test or add int3 mov fiadd jbe movsb repz hlt bound or push or or sub mov mov mov cmovge add fcomip loop and xlat out scas popf mov clc push sbb push cltd arpl xchg popf dec jno je outsl test pusha cmp or in xchg cmc les mov roll mov cmp dec lods mov fstl jno dec xor ljmp pusha clc fldl2e jg jne dec (bad) notl add dec pop std sbb in lcall orl mov into or aas sub fcmovnu ret into adc mov pop gs jbe,pn mov iret data16 ds out jo and aas (bad) xor pop sub mov jne shlb imul daa pop out jmp cmp aaa sub loope pop push cmp adc cwtl cli outsl subl fidivl mov scas jecxz mov fldenv inc in jl push and dec rcrl xchg xor ljmp or inc cmpsb test es add lods stos pop ljmp jbe mov dec or inc sbb cmc jne stos lock pop cwtl inc movsb stos sub imul xchg int3 cmpsl ret jae xchg jge fistpl rcll cmp mov sahf popa mov hlt mov mov cmp lcall imul jo mov and jle xchg push cmpsl pop push xor add jg lret inc lahf movsb jae mov or mov test call pop sarl movsb sbb loope ret ja cmp jae add stos mov in mov int3 sub popa ret das dec xchg lods int3 inc jle sbb push push fbstp leave out cmp fist test loope jno and sbb mov cmp fistl gs enter addr16 inc lods (bad) icebp ljmp sub in add add adc pop js sub test push (bad) fistp push negl dec lds push orb lods imul mov adc sbb out cli rolb jns aam ss pop push push xorb subb cmpsl mov dec aad sbb or push pop sbb fs (bad) jg insl and pop ret es push popa outsl stos and add push jne jl adcl cmpsb fstpl jecxz sbb mov sub inc or notb pop xchg lret xor clc jnp ja lods call mov jnp mov or add jbe sub adc popf and sub fstpt int mov sbb popa cmp mov fist add sub cmp mov xchg ret xchg xchg ljmp pusha push (bad) adc dec pop jecxz sub cmpps dec addr16 cmp in lahf sarb das out int lods sub jno mov es mov pop dec in adc lods adc jecxz jecxz mov popf stc std xor dec (bad) notb test add gs mov adc dec cli scas (bad) sub dec mov sbb sbb arpl test and add clc mov cmp sbb adc test sti lods hlt fcos lahf push cmp mov fs testb test mov xchg jbe mov dec cmp in mov adc out paddusb (bad) stos jb mov stos or pop sbb adc popf insb jmp jae (bad) mov cmc in push sahf cltd in pop outsb jb add mov inc pop stc outsl jnp xor mov mov iret scas divb adc mov movsl js or jmp sahf and mov fldenv xlat (bad) or bound dec in decb lods loope scas push and jo movsb (bad) hlt push mov add and mov or repz mov and test push orb jbe jp in mov and les inc jb and popf mov sub or sbb add sbbl iret dec mov adc inc mov imul ss sub dec nop adc jecxz js pusha cmc push dec jae fisubrl dec jne (bad) dec mov jg inc push hlt mov test mov dec push cmp mov sub int3 imul inc adc fimul push aas int3 mov sar and jne push std jecxz (bad) ds jns daa aaa (bad) das mov imulb into int3 aam aam xchg or int into fstl push xchg inc fucomip popa scas les cli loope mov pop mov jbe clc test shrl lea scas out jmp aas mov push sarb mov lcall pop jnp push inc dec out sbb add test sub xor les push in call pushf cmp stos stos (bad) popa popf movsl ss mov andl popa popa and hlt sbb roll xchg xchg int adc jecxz mov xor add aad sub pop outsl bound fldcw jnp jp sbb (bad) stos gs xor push mov decl inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc dec pusha sub jge (bad) cld inc test and dec call cmc pushf clc xor sub cmp add add or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf mov pop sub subl dec pop popa mov loop mov jl fsubl mov xchg push push mov cmc pop outsl out in cli sub xor leave add or xchg stc bound mov xor sub push jno repnz clc insb mov fs or mov enter dec jnp inc pop mov lods cmc fsub xor addr16 add clc xor sub mov adc cwtl add sahf push repz std mov lds and jnp inc add add sahf or xchg std outsl pop cmc cwtl mov add add add sahf or xchg mov mov lret sbb js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl loopne mov jnp inc add loopne mov jnp inc add orb aas xchg add mov in adc or xchg jnp inc add add sahf sub cmpsl dec frstor incl jo add mov or mov sbb or xchg cmc jno mov into xchg js add add pop fs add add sahf dec repz imul inc add add sahf or xchg mov in cmc rolb jns push xrelease or popf es push xor or subb xchg inc push addl sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov add xchg es popf fs mov stos pushf adcl out ficoml dec inc pop adc aaa out dec xchg push aad pop js xchg pop fidivrl sub leave add push repz mov mov stos cs aaa adc pop rcrb jae jp and inc and inc sbb cli loopne fwait push repz add add add sahf and inc inc add std xchg movsb pop jg xchg lea sub scas pop xor in lcall imul mov popa ja int pop in (bad) inc dec or outsb mov lret ja add pop lea mov gs dec mov xor lea mov decl jns jge cmc mov push add and mov das shr cmc pushf clc xor test aad jecxz sub or dec enter or outsl test sti inc cmp xchg fsubs push loope push dec xchg shrl shr cmc cmp xchg es arpl aad jecxz mov inc dec or mov mov or addl pop pusha adc xchg inc xor cmpsl fdivr jecxz xor sbb sub test and jmp jmp cmp xor mov sub xchg dec std lods and mov das cmpsb xchg std cmc cmp popa mov inc push fnstcw fwait out movl adc js add lahf xor negl and ss lock dec sbb xchg sub mov leave arpl pop lea push bound jmp inc sahf push xrelease inc pop xor mov sub lods and jae lock xchg cld add scas and dec cmp orb mov scas jb dec jecxz std pushf mov sarl jmp inc push sub out add cmp jo add clc mov aad cli push (bad) fnstenv fwait out sbb mov in jo fnstenv test sbb aad jb (bad) fnstcw xchg sbb (bad) dec ljmp aad pop mov fnstenv cltd adc in and lds jnp in pop popf pop aaa cli cmc jmp xchg push or pop add xchg negb or xchg test sbb mov leave das ds xor xchg mov gs adc ja lds (bad) icebp stos inc mov mov jl not sbb or ja push std int fsubl test insl mov decl cmc scas scas add mov push lods push das std imull aaa adc ja xlat imul ljmp ja inc add sub lcall stos aaa cmp mov push push stos mov push icebp inc movsb icebp cmp cli and cmp inc inc aam inc test imul xchg adc add mov call cs cmp insl mov sti sbb popl inc mov cmp inc dec jae insb mov outsl xor add outsb cmp test outsl cmp add outsb stos xor cmpsb psadbw mov push push lcall add in jnp test lcall mov fsubrl (bad) mov xor add jbe incl push lcall pop mov loop jmp (bad) das dec inc push push (bad) xchg fnsave loop scas stc mov bound iret ja test jmp inc jmp mov cmc ss mov cmp scas cmp repnz loope loop jmp sarb jnp inc cmp or and adc rol xchg fnsave loop mov jg icebp aaa popa js xchg lds stc ljmp pop dec test mov pop inc xchg xor (bad) call xor test adc cmp cmpsb push leave js or ljmp bound mov and in sub mov (bad) add sub movsb add mov clc out bound inc stc cltd mov push adc cmp adc push clc fildl gs dec mov ss jp cli jg ja add loop inc sub (bad) jle jge loopne jnp push ficoml push imul jne add (bad) lock idivl insb (bad) ja sub jge (bad) push add xor fsubs mov xorl jne xchg mov mov daa cltd hlt sbb sbb (bad) test aam mov arpl add jmp outsl adc lret mov adc sahf lahf ds mov xchg push (bad) repnz jle cmp add (bad) adc mov in ret push adc push test aaa sub add outsb stos xor and push dec push or call in les mov mov stc xchg jecxz dec or mov dec fsubs cmp inc xor mov push jno jno addl sub icebp xor adc test and scas push or inc popa clc jge add mov mov push fnsave mov and push add add mov adc jle shlb repnz or mov inc dec mov sti xchg add mov adc pop xchg fmull insl inc lcall lock dec cld or js dec outsb mov gs push sub sub pop mov jecxz (bad) push addr16 jmp sbb lret push outsl lcall scas stos and or jmp xchg jo lea xchg sahf lock push inc inc mov in nop sub push add mov andl sbb and inc inc xor dec adc sar pop mov sub pop jmp ds add push fdiv sbb sbb and mov in add ss inc jno cmp jbe xchg mov push and fldl and jmp clc ja xchg ss aas lea jg ja scas in fistpl or xor sbb pop (bad) cli inc in mov imul sahf xchg arpl lret lret std outsl cmc mov cli xchg mov xchg sbb addr16 adc sbb sub test and call repz stc cmp push mov test or dec sub clc cmp cmp popf scas arpl out movl adc js add mov lea mov jmp lock dec or js outsb mov leave sti or dec std lods and and stc clc ljmp das jbe test inc mov stc std cli inc lock cmpsl add lock inc add adc std sub sbb loope fadds (bad) or loop xor adc sub (bad) inc dec sbb xchg sub mov in sbb inc lret das jg jle or out pop in (bad) inc dec or inc dec outsb mov leave repnz xchg dec std lods and mov das cmpsb xchg std cmc cltd incb es xor loope out movl adc js add adc dec fs bound jmp dec sahf sbb xchg cmp xor negl pop mov cmp dec or dec arpl jne xchg sbb xchg rorl ds dec addr16 adc (bad) inc dec and movsl sub mov mov cs mov movsb sti mov jnp lcall jge aad in cmp (bad) into or inc mov inc jg icebp in cmc xchg clc cmp (bad) icebp inc pushl inc out cwtl add jno adc cwtl jge push adc mov sbb ficom adc (bad) jae sahf hlt hlt lea push dec hlt cwtl xor sub adc jg mov aam adc inc je inc in dec cmc cwtl add sahf push repz push (bad) cmp cwtl or and fs add arpl loopne dec sahf and cwtl sub and xchg jp inc add add add test mov add sahf adc (bad) sub mov out cmc pushf clc xor sub mov adc fwait cli ds push repz cwtl add sahf lahf push xchg cs cmp (bad) lret (bad) inc popf in arpl or add lea jge jmp decl adc cli or es xlat std je shl push add js add pusha or add jle sbb mov cmp (bad) add mov pop dec dec inc push enter mov add mov (bad) hlt sbb jbe and cmp rorb xchg fild loopne sub inc adc push out mov add int3 add cld xlat out inc or push jl call cmc lds rorb gs add fdivr mov or or xchg std stos mov pop jnp inc mov cld or dec inc lahf jns sub pop divl into addb lea xchg or jp in jecxz stc aas movsl and ja roll stc fldenv cwtl (bad) push test sbb mov cld push imull idivl cmp jb jle in ret lahf cli pusha test pop cmp inc or stc loopne cmc jg and repnz inc inc add out cmp xchg negl cmp sub add hlt pop imulb jg push adc je push push sti sahf pop push cmpsb in lds fucomi add push mov sti jb mov cmpsb test jmp push jne inc add add cwtl add sahf push repz jns jne or sahf or xchg mov aas negl hlt push dec add mov std in stc sahf add mov push aam add jecxz negb adc mov js add icebp in cmc and xor pop or jge dec add icebp sahf stos mov mov popa jnp jle in add jmp sub jg outsb lcall ljmp divb loope add popf pmuludq cli loope xor repz in cmp addl sahf mov push dec jmp clc adc jne fcompl adc jb mov add push outsb inc inc jle rorb sahf dec adc jae std jle add sbb ljmp push xchg xchg out lds jb or jg jg jecxz std roll lahf (bad) xchg cmp pop hlt addl pop imul dec jmp out sbb pop push hlt sahf mov clc mov repnz sub add mov fptan jg xor addr16 adc outsl add mov xchg xlat icebp sbb cld inc test popf mov mov mov jnp sarl out pop jle scas xor cmpsl stc and loop scas mov inc mov (bad) cli (bad) stc or std mov cmp psrld add clc gs std lock or mov and inc add incb aaa mov push cld cli (bad) pushf adc lahf lods out sahf mov ja add sub xor or add push jno cwtl add mov sti jp fildll xchg in cmc (bad) in icebp mov sbb and sti jg sbb jbe iret sbb mov mov fisttpll cmp jnp mov insl jae jmp cli jne xchg sub cmp cwtl call fisttp inc dec dec cmp (bad) js xor outsb inc cmp enter cwtl add cmpsb out and data16 pop aaa xchg in cmc xchg hlt cmp xor mov add fdivr into inc fwait in push test sbb mov sub or js jnp inc imul adc sub jne imul or mov add ss hlt and sahf pop or add add mov loopne cmp jp pop in xchg in cmc in (bad) fistpll sbb mov push out imul adc cmc sub or jae jnp mov push add and cld ljmp js jg out test addl cmp (bad) loope cmc cwtl add insl mov jge lret adc add mov sbb pop cmc cltd in cmc lahf add mov lods pushf clc sub adc xchg adc lods dec pusha inc add add or mov jnp xchg test and mov sbb std inc jae roll jmp stos mov jb jl ds add (bad) cmp xorl mov cmp push iret lcall and and es sub pop add arpl adc (bad) gs inc add incl mov jnp xchg lock scas fsubl sbb sub push sbb cmpsl or subb clc inc std adcb sahf add pop pop out dec stos jg ljmp in adc sub js xlat or in cmc (bad) in icebp mov js add adc or inc jg js push mov xrelease rcrl push sahf or xchg mov cld call sahf pop repz jge sbb sahf inc loopne push push pop mov cmc popf push jp jl cmc mov aas jp mov adc (bad) mov push pop js add adc cmp js jg js push ret test xchg rcrl jnp or xchg mov add repnz xor xor test pop aas cmc cwtl add sahf inc loopne push xchg jnp orb in cmc popf push jp jl es adc pushf add (bad) mov (bad) mov inc add adc pop cmc loope jnp inc jg js push adc add xrelease rcrl cltd sahf or xchg mov mov sub add sahf pop repz shlb cmc cwtl add sahf inc loopne push mov sti (bad) and in cmc popf push jp jl jne adc mov mov adc (bad) mov int3 push js add adc push js jg js push dec add xchg rcrl stos sahf or xchg mov jl push repz sahf pop repz ret cmc cwtl add sahf inc loopne push into xchg cmc popf push jp jl xchg rorb icebp adc (bad) mov ss js add adc sub sub idivb push mov xrelease rcrl ret sahf or xchg mov lea sahf movsl in push xor mov mull xlat test repz jle jg or loop add popa mov jnp jle icebp aad aam xor jns test jp out (bad) dec clc call push xchg sbb ret sbb negb hlt subb mov mov sahf cmp int fs notl stc out testl inc jg xor sahf add popa mov cli jns mov pop rcll sahf pop loopne xor js cmc mov repnz bound jg push dec loope add jno lock push mov movsb push std pop cmp jg pop cli sub out (bad) lret hlt jg push repz lret inc jg shrl lahf add pushf int3 cmc test mov or aaa pusha js imull cmc push add loope inc inc mov loop add jbe sti lea mov in (bad) out xor fs je in icebp lods cmc sbb or add add imul mov pop mov mov int xor jns push repz ljmp cmp add clc popf push ljmp repnz pop mov rcr add sahf add sahf cmp or repnz (bad) dec testl sahf rolb jg add mov test mov cwtl jle std jns inc push ss jo imulb js stc fwait stc out icebp sar mov mov rcl clc sahf add mov incb or push xor push add sub jae std out icebp dec std out or inc mov fs ljmp repnz pop mov lret pop aaa sahf shl xor push cli sub out div pop test repz or sar sahf add mov incb or push xor xor js jae std out icebp dec std out or adc data16 loope push xchg js jmp mov mov cmc xlat fisttp sahf imul sub call testl jns jg outsb jge sahf add mov incl pop mov xchg int xor fs (bad) and ljmp dec inc inc add add sub mov push xor sub js jae std out (bad) dec testl sahf rolb jg xor sahf add popa mov ss mov xor popa or sahf mov push xor lret repz jmp scas cmp jg push inc lock add jb incl add or sahf mov push xor lret repz repz dec inc inc add add sub mov push xor sub js repz std out icebp lret ljmp (bad) jle add push test jns in mov adc inc out dec scas jg mov pop into sbb dec mov flds sahf cmpl or push mov bound lcall jno pusha inc decb (bad) jle xchg pop add pop into sbb lret int3 xor push fiadd mov sahf cmp and ret jbe out pop loope out xchg adc inc out dec xchg fimul bound hlt jbe lods xor push dec adc push pusha or mov sub jnp ja out and cli iret inc pop adc out dec es mov mov sub incl push in lock add rcll cmp notl mov xchg repnz sub incb pop cmc (bad) ljmp push aaa add xorb ds mov jnp ja out in push sti xchg adcl add clc adc aam xchg add loope push or and dec js jbe out cmp xor jnp out dec (bad) jg mov xchg dec push insb lods dec repz add insl lcall out cmp dec fs xchg adc sub pusha out int3 testb ret int insb jl int (bad) in add shll movl xor sub inc pop orl inc mov sbb dec sti jns jg lea rcrb lret test js lcall inc adc sub cwtl jo out add fwait out mov xorb sub in jg (bad) mov pop das cld adc aam or adc enter add and mov les ljmp adc cmp cmp sbb mov pushf shl fimul inc pop test add jnp icebp push adc cli xchg bound cmp out or ljmp je jecxz add lret or jno pop ss cmp int3 std fdivs adc add jecxz popa lea cli xchg push movsb pop mov pop out mov jbe or cmp xor in and add les ds jg out xchg cmp clc (bad) mov add lahf icebp aam pop xor in mov test sbb push cs in inc out jo push push pushf mov test test jmp jne movsb pop jae lahf in xchg ss jns cli pushf in adc pushl (bad) adc int or adc sbb les incl test outsb add (bad) stc daa mov icebp cmp js fstl decl les cmpsl add mov pop mov aaa jmp std pusha insb repz or hlt mov and repnz aaa hlt pop clc fcompl mulb fiadd and enter repz lods pusha sti pop jp jno divb imulb lea add jl in stc iret pop div adc mov xchg and stc mov push (bad) xor clc pop jp jb divl pop pop inc jb fiaddl cmc cli iret pop mov into scas fiadd sarl jne insl stc lcall cmp js jb divl imull or out pop aas jne fcompl jmp push mov ss mov enter repz mov or notl xchg clc sbb sti dec push inc add add sahf or mov add mov imul mov add cld sbbb dec aad jnp add push cmp imul out (bad) push cmp jmp jl jl (bad) xor div cmp test add lea push mov mov test cmc outsl cld pop or sti (bad) mov jl add jnp stc mov (bad) mov mov adc pushf add sahf or inc inc jg std jecxz addl sahf or inc mov lret icebp jmp repz inc js add add pop xor xchg sub add jg std leave and sbb jbe mov out add sbb push or js adc add sahf add js add add sahf or dec stos das jns add add sahf or mov jle icebp out (bad) add sahf or xchg rolb xor sub mov adc cmp cmpsb mov repz mov in cmc cwtl add xor inc add add addr16 add jecxz out pushf add sbb mov js mov xlat out sub dec dec inc mov fucomip add mov inc inc mov xlat in pop cmc call or jnp sahf jg pop movsb cmc call or jnp xchg jg pop movsb cmc call or jnp jo mov lcall ljmp rcrb pop dec loop xor in mov loope dec mov xlat mov dec fsubl dec sbbb xor mov test imul push sub adc sbb fildl mov push lea jno adc sbb add mov movsb scas xor push sub inc pop and test dec push idivb shll movsb pop outsb cmp ret adc or lret nop mov notb cmpb sub cmpsb les ljmp jnp push mov (bad) jmp cmp scas xchg stos adc jp jmp jecxz movsb aas pop cmpsl cli lods mov or sub mov lods adc inc cmp mov outsl push mov lret repz inc test in sti aaa push jnp jae decb (bad) std add nop mov dec sub or clc lret movsb movsb cld xor rclb dec or repnz push cs sbb ret fiadd out adc scas popf pop fisttpl pop mov addr16 pop cs cmp in sub hlt push ss lock push repz loope lods cld or rcll sub cmc jp pop xchg in mov pop add flds clc dec adcb lds out test clc loope inc mov lock xlat sbb mov adc mov push (bad) out das ljmp (bad) cmpsl mov mul pop push cmpsl mov ret pop (bad) adc jg leave add dec sbb inc adc sti (bad) cmpsl stos pop pop fnsave enter push add xor xchg icebp aas mov mov out sbb xchg icebp aas mov mov les sub pop mov mov cmc xor insl fstpt sub cmpsb (bad) mov pop push movl popa push repz addl mov jg jmp push mov mov into pop hlt inc lahf mov jne pop fsubl xlat nop xchg push repnz or cmc dec test mov pop out sbb cmc or out inc pop ss imul cltd pop mov pushf pop cmpsl lret leave push xlat jg fstpt add (bad) cltd cmpsb mov dec cmp lds andl stos fxch push xlat jg mov lret push pop xor pop and sahf mov or or inc mov aaa ret inc sahf fmul or lcall mov xlat into or or pushf sub jl sub negl mov mov xor scas xor push and (bad) ds and cltd (bad) mov call sbb ds and xchg sahf mov or xchg push (bad) jge pop outsl ja mov xchg push (bad) jge int cltd in fld imul adc scas inc lds inc (bad) push jns call popf idivl sbb adc je sub iret sbb mov push lahf lret (bad) jp data16 divb into stc mov ret hlt or add ljmp or aad les mov push sub loop and mov add push sbb adc jl pop imul push mov push or lcall cli lods js mov inc inc mov das imul xchg outsb sti sbb loopne mov push xlat or hlt std imul dec cmp jecxz inc adc iret fld mov leave sub mov add sbb repz or push add repnz aad les mov clc push addr16 adc push add jecxz cmp in sbb pop mov adc repz (bad) xor pop mov or roll cltd aad (bad) aas jb add or jbe adcl adc in in rcrl sbb add or aad les mov xchg mov and jg daa cli jbe adcl adc mov in vcvtpd2dq int enter addr16 movsl std pop mov pop scas mov stos scas repnz icebp repz cli cmp add xchg les mov mov sub mov iret pop call (bad) das imul scas mov cmp mov sub xor roll cltd aad (bad) aas jb add push xchg mov in cld inc lods mov adc push add (bad) in sahf lret or dec inc mov das imul dec scas (bad) cmp sbb adc add jno cmc clc scas (bad) stos adc cmpsb sahf add lock daa cmpl adc jge lods stos imul mov lahf mov push mov repnz sbb mov dec (bad) outsl and (bad) dec inc push add call sub inc dec mov fstl hlt es sub sbb mov push inc pop cmc add add or jle sarb mov les sbb push shrb sahf iret pop xchg stos jnp sub out scas mov stc (bad) dec xchg mov sbb jne and inc xchg xor insb xor mov jg add mov fadds jmp adc push push or iret adc (bad) jle cltd decb adc iret mov fld cli sub xlat cli mov mov addl sub repnz shlb hlt icebp inc cli dec add imul fmul ret idivb and aaa cmp add pusha sbb adc jmp jno or lret xchg ds nop dec rolb test sub mov sbb mov (bad) adc popa test sbb loopne in icebp mov movsb cmpsl mov int push or movsl sti movl xor add (bad) lret inc push ds adc iret adc (bad) das sti pop decb sbb or dec inc lea aam enter dec xor subps dec xchg push (bad) jge cmp nop jp ret inc mov sbb lret inc inc mov daa cmpsl dec or loop js (bad) int jb mov js push lock cld mov movsb add push shl sub sbb loope popf in into mov inc fdivl jge or stos cmpsl push add (bad) roll jge cmp pop lret jbe ret dec aaa jbe into sbb (bad) mov (bad) mov ror in jmp iret lods idiv stos xchg inc add lret lret repz cli mov cmp mov (bad) aam inc adc mov cwtl push cmp in std inc insb lods leave lret mov mov jmp ds add mov bound cmp cs add out aas test shr lret and pop lock push cs dec jo sti jns rcll add sub rolb aam fincstp cld mov add stc mov (bad) sbb mov cmp or nop dec lock out fnsave hlt in xor lds cli stc dec sbbl cmp sbb sbb or cld push sub call stos testl inc sti cld in pop (bad) cli cmp js aam inc cmp mov xchg in inc hlt sahf je,pt or shl mov xor inc popa pop ret into jl mov dec sbb daa mov adc jbe xchg mov xchg daa aam out mov call dec pusha test sbb fdivrp dec bound loop out fidivl pop cmp adc insb popa lahf sbb aam sbb adc xadd sbb dec scas test adc push mov add in out jo fwait testb fcomps mov push adc add enter sbb es adc or xchg xchg sbb jb or mov pushf mov sbbl jmp inc in cltd test sub movsl out xchg scas out inc (bad) repnz pop add mov out sahf inc pushf (bad) call or (bad) cmp inc cmp (bad) xor sahf dec ret (bad) cmp (bad) and leave out (bad) xchg pushf add repz fdivl adc int3 sub mov repnz int add rolb icebp inc cs push jl cmc lds push mov jle cltd decb adc inc (bad) scas test sbb cltd mov mov and daa add or sbb push leave out (bad) xchg pushf add lea call movsl lods push arpl mov sbb push leave out (bad) xchg pushf add lea call pop mov xor and xor fildll mov fisttpll mov add sub mov cmc lds fsubl push or jns jne js nop mov jb cmpsb mov sbb cwtl push shrb adcl adc js xchg mov mov inc dec mov fstl jns jmp sub pop and lds inc mov shlb pop mov repnz ret cli mov insl in pop fcomip aam test test and adc lock stc lods icebp inc hlt inc cmc cmpsl aas je or test into (bad) icebp mov bound in ja leave cmp mov add mov mov out stos out stos xchg lret sbbl sbb cmc ficompl xchg jmp pop adc clc out jg push push fnstenv aam stos and mov cmp cmc jp jmp mov mov pop sub in adc sub mov scas or (bad) mov add lret (bad) cli mov xchg pop jge and test aad pop lods mov pop or or dec pusha add jae or cmp negb pop lret sbb and lea mov (bad) or popf lods mov out repnz mov loope cmp icebp jb,pt out mov shlb (bad) cmc aaa mov push (bad) cmpsl test movsb mov pop push sub or aad cmc aaa mov bound inc inc out aad notb popl popf mov mov inc divb sub ljmp fildl in test (bad) sbb cmp jno (bad) sbb aad popf scas loopne call cmp and shr lahf (bad) add lea or std imul mov outsb lds ret sub aam mov push jb dec out es xor subps dec dec xchg clc mov nop cwtl cmpsl pushf or cmpsb jmp outsl or repz test in and cmc mov or xlat ret addl xchg inc xchg in sbb icebp mov jae out fcomip aam test sbb sub lahf push ret insl xchg lock pusha out pop cmpsb add stos in mov negl add stos in inc pushl add sub repz aaa jae negl add stos in inc pushl add (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl pop adc xchg add cmp or sub jne fmuls in mov sbb stc mov mov inc pop adc add rcll inc mov repz lret adc fdivr inc test xor cmc int fdivr inc test jo mov sbb aaa rol aad enter call (bad) jmp mov les push inc add dec inc mov add mov mov dec outsb adc sbb mov xchg add aaa jae negl add int3 (bad) pushl push in lret mov mov inc jne adc pop lds in inc pushl jae negl add movsl in inc pushl jae adc cwtl incb mov aaa jae sti add mov stos in inc out aaa add negl add stos in inc pushl jle push add mov xchg add cmp out negl add shl clc inc pushl jae negl add stos in inc fnstcw adc negl add lea jl lock mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov negl add lods in inc pushl jae negl add stos in inc xchg add iret sbb mov test lds aaa jae lock mov xchg add aaa jg sti sbb mov xchg or aaa jae negl add test lds aaa jae negl add stos in inc pushl jae negl add cmpsb sti testb pop out negl add stos in inc pushl jae stc sbb sahf xchg add dec gs negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae jecxz push mov xchg add aaa jae negl add shl clc inc pushl jp (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add mov clc inc pushl jge icebp sbb mov xchg add aaa jae negl add stos in inc pushl jge repz sahf xchg add aaa jae negl add stos in inc pushl jae negl add test mov adc js rcll clc inc pushl js clc add mov xchg add cmp out negl add mov aaa jae negl repnz xchg add aaa jae negl add stos in inc pushl jae negl add test aaa jae cmc add mov out inc jp movsb inc jmp gs sbb cld mov mov aaa jae negl add shl clc inc pushl jae negl cli roll sti inc hlt inc jg negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov ltr lds or movsl cwtl mov negl add (bad) movsl sahf inc pushl jae stc sbb sahf xchg add inc jg negl add mov aaa jae negl add stos in inc pushl jae negl add stos in inc pushl add (bad) sbb mov xchg add inc sub fisub shll xor aaa jle cli sbb mov xchg add aaa jae negl add lea jae hlt add int xchg add aaa jae negl add stos in inc pushl jae negl add scas in inc pushl jae sti add roll clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add mov inc pop out negl add stos in inc pushl or mov xchg add aaa jl sarb repnz clc inc pushl imul (bad) xchg add aaa jae negl add stos in inc stc cmp add icebp leave mov ret inc cld cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl adc add mov xchg xor aaa jae negl ror lods xchg add aaa jns out js mov xchg add aaa jae negl add stos in inc in cmp negl add jg pop inc (bad) aaa jae negl ror mov fwait (bad) mov inc clc in xchg xchg add inc jg and sti inc jo jmp inc cmc dec addr16 pusha cmp sub pop add cmp adc pusha sub (bad) movsl outsl inc addr16 outsl in push add mov je xchg inc xchg adc js cmp (bad) shld jg lret lds and sahf test adc sbb mov xchg add aaa sub mov xchg repz cmp pop add mov mov or aaa jae adc xchg add xor repz xchg add cmp out js mov xchg add aaa jae negl add stos in inc in cmp negl add jg pop inc (bad) aaa jae negl ror mov fwait idivl inc clc in xchg xchg add dec adc add add (bad) pushl jge pop add mov xchg xor aaa jl and sti inc sets add dec pusha in cli sbb mov nop test mov hlt sbb mov cmpsb adc jnp lcall add xchg xchg std add inc jnp and sti inc push xchg sti add dec gs negl add add aaa jae negl add scas in inc pushl jae adc xchg add cmp lock mov xchg add cmp out js mov xchg add aaa jae negl add stos in inc in cmp negl add jg pop inc (bad) aaa jae negl ror mov fwait popf inc cltd inc inc adc in xchg xchg add inc jg out and add aaa jge sbb add mov in inc cmc dec addr16 pusha cmp sub pop add cmp adc pusha sub (bad) movsl outsl inc addr16 outsl in add xchg (bad) je xchg inc xchg adc js cmp (bad) shld jg lret lds and sahf test adc sbb mov xchg add aaa sub mov xchg repz cmp pop add mov xchg add aaa add negl add stos in inc xchg in int3 js inc jns (bad) cmpxchg clc inc pushl jae negl push mov mov cld mov in sbb test lahf inc test sbb mov stos in inc aad xor rcrb mov xchg add cmp adc sbb mov int3 (bad) pushl jge pop add int xchg add cmp in lret mov xchg add aaa gs pusha cli mov xchg pop pop sbb out negl add scas in mov enter mov in inc lea adc mov jnp lcall sbb mov pop sbb out negl add stos in mov icebp sbb int xchg add aaa add negl add stos in inc xchg adc sbb mov mov clc inc pushl jae negl push mov mov lock xchg jg sbb sbb test fwait mov lock mov lea xor out sbb test jle negl add test jl sbb clc int xchg add aaa jae adc xchg inc jg inc mov negl ror lods xchg add aaa jae negl add mov lock xchg jp in pusha sub test xchg inc mov jae lock mov xchg fwait in mov (bad) js mov cwtl idivl mov call adc sbb mov cmpsb add stos in inc (bad) xor ror lods xchg add dec daa in fidivrl mov xchg add cmp negl ljmp sti stc mov adc (bad) adc inc pushl jp (bad) sbb mov xchg or cmp and sti inc or clc inc cmc dec inc adc add jno repz dec adc add cmpxchg jge pop add mov xchg add aaa jl call test cmp aaa or les add test dec inc outsb aaa jae lock mov mov lret (bad) js mov push fldl mov dec outsl in out cli mov faddp lcall sbb mov xchg fwait in mov sarb cltd push fldl mov dec outsl in loop adc add inc insb adc sbb int xchg add dec outsl adc js mov mov clc inc clc cmp ljmp add inc jns repnz mov mov lret (bad) js xor jmp mov in sbb mov pushf inc test sbb shrl inc mov sbb mov mov add aaa jl sbb clc int test cmp aaa push out pop sbb mov xchg add aaa jae lock mov mov lret (bad) js mov push fldl mov inc outsb in out jmp lods mov dec faddp pop inc outsb aaa jae lock mov cwtl std pop xchg fwait in mov sarb cltd push fldl mov inc outsb in jecxz or cwtl cli add aaa push adc js mov xchg add inc sub jecxz cli mov out add cmp inc clc repnz xchg add dec sbb sarb sahf xchg xor cmp adc js mov fcomps stos in mov push add mov xchg xor xor add add cmp sbb cwtl idivl mov inc pushl jl sbb test add dec outsl adc sbb mov xchg add dec outsl adc pusha adc xchg xchg add dec outsl adc pusha sub mov and adc mov enter jp in pusha sub mov cmp lret js cmp (bad) shld js adc mov test or lret (bad) (bad) js mov xchg pop mov aaa pop out negl add xchg fwait mov dec add (bad) js mov xchg pop pop sbb out negl add scas in mov ljmp add pxor js mov data16 add (bad) xorl out negl in insb call clc inc pushl gs pusha inc xor cwtl flds add jae negl (bad) mov call enter jge sbb and add lret (bad) js mov push fldl mov aaa pxor js mov data16 mov les negl cli (bad) mov and mov out js roll add xor pop mov mov cmp or mov mov out test jge add sub or xor (bad) mov push fldl (bad) mov dec out sub and add inc dec out sub and or cmp inc push (bad) adc stos in inc cmc dec popa out adc mov mov cmp adc js mov mov mov aaa jae negl ror mov sti sarl sbb mov cwtl flds add jae negl ror lods xchg add inc jle icebp sbb mov cmpsb add inc in cmp adc sbb mov mov cmp adc sbb mov xchg fwait jmp hlt cmp out sbb and stos in inc lea adc mov jnp lcall js mov cltd movsl mov out negl add ret (bad) jmp mov or cmp out cmc sbb shrl inc inc push xor add pop add add ret shll leave mov jmp call mov cmp in enter adc pop add dec popa out jmp test add inc or negl add jl inc inc test sbb int test imul sarl pusha push mov test xor cmp (bad) (bad) jmp mov or cmp out lds mov mov cmp in clc add inc push (bad) adc stos in inc cmc dec popa out adc mov test or cmp adc js mov mov mov aaa jae negl ror mov fwait (bad) mov loop in mov add jae negl ror lods xchg add inc jle icebp sbb mov test add aaa jg lret js xor mov out cld dec fs lret js xor stc setns or les rorl jg in inc testb lret js cmp (bad) shld js adc leave cltd test or xor sti inc adc adc inc cmc dec gs negl repnz cwtl flds add jae negl ror lods xchg add aaa jae negl fdivrs stos in inc lea adc mov jnp lcall js mov xchg movsl jo pop lret jmp sub repnz mov cmp negl ljmp sti pop mov pop sbb mov stos in inc cmc dec gs negl cli roll out mov negl repnz xchg pop cmpsl sti push inc gs jle negl add lea (bad) in cli sbb mov xchg pop lods in inc iret aaa das out in js mov xchg add aaa jae negl add stos in inc in cmp negl sti vpcmpgtd add aaa jl lock vpcmpgtd add aaa jl lock vpcmpgtd (bad) in inc pushl jl lock leave mov movsl sahf inc pushl jl push add int call loopne out and negl add mov call adc sbb mov xchg add aaa jae lock mov pop add jle negl add (bad) movsl xchg aaa adc mov jnp lcall sbb mov test gs negl add test jle negl add test jg negl add test and negl add xchg test adc pusha sbb xchg xchg add cmp (bad) js mov cwtl lock and adc data16 stos in inc pushl in loop add mov lret shr pusha sub lods sti cmc inc loope arpl aas add mov xchg add inc outsb in cld sbb jno (bad) xorl adc add mov cwtl incb stos in inc std cmp sti sbb xor repz cmp adc pusha sub xchg pop out negl add lahf test out jmp xchg pop lods in inc xchg lret shr pusha sub lods in mov negl ljmp sti stc mov (bad) js mov cwtl incb stos in inc pushl in bnd mov xchg or lret ret sbb mov xchg pop lods in mov negl ljmp in inc xchg aaa jae sbb cmpsb pop add aaa ja icebp sbb int xchg add dec and in sbb test add negl add into in mov negl cld lds (bad) pushl jl lcall add add dec outsl adc sbb int xchg add aaa js ljmp pop lods in inc iret aaa and negl add andl out negl add stos in inc iret aaa and negl add mov les into js mov xchg add aaa jae lock mov mov xchg inc test sbb lds cmc jg test inc pushl jge pop add int xchg aas mov mov dec sub sarb mov xchg pop mov or negl add stos in inc pushl adc add mov xchg add cmp out in sub stos in inc pushl in adc mov xchg or lret ret add mov xchg pop lods sti in mov (bad) js xor jmp mov and or stos in inc (bad) inc jg call mov clc inc cmc dec gs lock shrl lcall sbb mov stos in inc cmc dec gs (bad) sbb pop cmpsb stc add aaa jl jmp mov movsbl loop idivl adc enter mov in inc stc cmp lret js cmp xchg add aaa jl sbb (bad) adc stos in inc cmc dec inc adc mov xchg add aaa js das loopne mov cmpsb stc add aaa ja negl add seto jp ret js mov xchg test out negl add stos in mov (bad) sbb sbb clc add aaa jno sbb cld mov xchg pop test jae negl add scas in inc pushl jae adc (bad) pop add aaa pop out negl adc add cmp in js mov mov add aaa jae negl add stos in inc in cmp icebp sbb shll clc inc stc cmp sbb cld mov xchg pop test addr16 or sbb mov clc inc cmc dec inc adc xchg add aaa adc add mov xchg add cmp adc sbb add aaa jae (bad) js mov xchg or lret (bad) js mov xchg pop lods in inc pop cmp mov xchg add aaa jns stc sbb roll sahf mov cmp sbb (bad) xchg add cmp out in sub xchg jl negl add mov aaa jae negl (bad) mov push fldl mov cmp lret js roll enter jae lock shrl mov negl add mov aaa jae negl ror mov cmp ja out test jb jmp cwtl fisttpll movsl lcall sbb mov cwtl flds test out negl ror mov in inc jo jno negl add mov cmp mov sahf test out sarb cltd push fldl mov inc out lret js mov out divps jl negl add mov jl negl add pop sbb inc jae jo negl add mov aaa jae negl ror lods xchg add inc cmp lds (bad) int xchg add inc cmp lds ljmp (bad) (bad) xor pop mov xchg mov (bad) js mov xchg pop lods in inc scas lret (bad) js mov xchg pop scas in inc jne jbe negl add mov cmp adc sbb mov xchg add lret (bad) js mov xchg pop cmpsl sti pop mov negl add mov aaa jae negl (bad) mov call enter jge pop add mov xchg dec mov lcall sbb mov xchg xor aaa jae negl (bad) mov clc sub lahf test inc pushl jge sbb xchg incl stos in inc cmc dec gs negl add or cmp leave sbbl inc out cmp adc pusha add pop (bad) push movsbl enter jge pop add mov xchg rcrl adc add mov mov or aaa jae adc cwtl incb movsb sti testb pop out lock roll clc inc cld cmp out js mov xchg add aaa jae negl add stos in inc pushl jae negl add nop movsl sahf inc pushl jge sbb add stos in inc cmc dec gs cld add cmp cmc add gs sbb lds in inc xchg cmp vmread mov xchg add aaa jae icebp sbb int mov or aaa jae adc xchg add xor cli roll clc inc cld cmp add mov xchg js cmp negl add stos in inc (bad) out adc xchg pop mov jp add xor add dec gs negl cli shrl idivl negl ror lods xchg add cmp mov xchg add cmp add xor add dec gs negl add lods sti icebp inc xchg jae pop sbb mov stos in inc stc cmp push pusha inc xor repz cmp mov xchg add aaa adc add mov xchg add aaa jae pop sbb mov stos in inc cmc dec gs negl add movsb sti clc inc rorl in sbb sbb xchg jge negl add mov js jbe jae negl (bad) mov xchg add aaa jl lcall add add dec inc adc xchg add dec sbb iret js mov xchg add cmp negl add mov call out negl (bad) mov xchg pop mov jl lock mov out add aaa jg in js mov mov add aaa jae negl add stos in inc in cmp (bad) sbb jae cmc add aaa push adc js leave mov sahf mov out pusha sub mov and (bad) js mov cmpsb add stos in inc pushl jae in sub mov lret (bad) pusha sub scas in inc dec dec add mov xchg sti add aaa jl sbb clc int test cmp aaa jg sti sbb mov xchg add aaa jae lock mov mov mov aaa jae negl repz call enter jge pop add int call loopne out das out in js mov mov add aaa jae negl add stos in inc in cmp (bad) sbb or call inc sti aaa push adc js rcll sahf mov out pusha sub mov and (bad) js mov cmpsb add stos in inc pushl jl push add mov xchg or lret (bad) adc add mov xchg pop scas in inc dec dec sbb negl add test jl sbb clc int test cmp aaa jp (bad) sbb mov xchg add aaa jae lock mov test jp negl add mov les icebp sbb mov sahf test inc pushl jl lock vpcmpgtd pop sahf test inc pushl jl lock int call loopne out das out in js mov xchg add aaa jae negl add stos in inc in cmp in and cmc data16 sahf test inc pushl jl (bad) js cmp repnz cmp mov call enter jae lret js cmp (bad) shld jle pop add roll pop add jl negl add mov (bad) inc mov jae negl (bad) mov push lock test pop adc in mov in inc fnstsw and adc xchg xor aaa adc add mov enter in inc (bad) aaa jg jmp xchg add aaa jae lock mov test jl negl add mov std inc divb and pop cmpsb stc add aaa jns es cli inc daa out add dec push leave xchg cmpsb pushl cmpsl test mov jmp test pop mov xchg mov negl add mov test negl repnz cmpsb adc jnp lcall add scas test pop mov cmp in repnz push fildl lods in inc pushl jl std add mov mov add cmp adc sbb xor repz cmp in add sbb test jge lret js roll lea fs negl add mov sub negl add mov inc inc jbe jae negl (bad) mov clc sbb mov clc inc pushl jge push add int xchg xor aaa pop adc js mov stos in inc scas aaa jge icebp sbb mov xchg pop lods in inc xchg lret (bad) adc sbb mov xchg pop test cmp sbb mov enter in inc outsb aaa jae negl ror mov fwait cmc inc xchg jae negl ror lods xchg add xor add mov movl xor aaa jae sarl pop call loop cmpl and dec fcoms shrd mov negl add scas in inc push mov out negl add ret (bad) jmp mov shld add in sub inc cmpsl movsl lcall sbb mov mov in mov jae negl push mov mov inc inc adc js mov stos in inc sti cmp mov xchg add aaa jge ret js mov stos in inc cmc dec addr16 pusha or mov jmp out negl (bad) mov clc daa aas stos test inc pushl jge push add int (bad) or mov aaa jge in cmp sbb pop mov negl add lcall out lock mov (bad) push aas mov inc pushl jge sbb out stos in inc cmc dec gs cld add mov cmpsl test out adc call enter jnp pop add mov mov aaa mov clc inc pushl jae (bad) js mov xchg incl stos in inc mov add mov stos in inc pushl jae adc xchg incl lods in inc loope sub lock mov xchg add cmp in js mov xchg add aaa jae negl add stos in inc in cmp negl icebp mov push rorb xchg movsl xchg inc xchg jae lock mov fwait movsl sahf inc pushl jge pop add mov mov or lret ret js roll xchg inc stos cmp in or xchg xchg inc mov adc add mov out add dec movlps pusha sub (bad) movsl sahf inc pushl adc add mov test cmp aaa jg sbb sbb stos in inc mov jae lock mov lea sbb pop add mov xchg add (bad) negl add test jl sbb clc int xchg add cmp out (bad) js mov xchg incl stos in inc pushl jle cli sbb mov xchg or cmp cld add jno repz dec outsl adc pusha sub mov and (bad) js mov cmpsb add stos in inc pushl jle lret mov xchg or aaa or sarb sahf xchg add xor add test jl sbb clc int test cmp aaa jle cli sbb mov xchg add aaa jae lock mov andl out negl add test jl sbb clc int test cmp aaa jg sbb sbb stos in inc jbe jae lock mov lea sbb pop add mov xchg add (bad) negl add test jl sbb clc int xchg add cmp out (bad) js mov xchg incl stos in inc pushl jg sti sbb mov xchg or cmp cld add jno repz dec outsl adc pusha sub mov and (bad) js mov cmpsb add stos in inc pushl jg lret js mov xchg or aaa or push add mov xchg add xor add test jl sbb clc int test cmp aaa jle cli sbb mov xchg add aaa jae lock mov andl out negl add test jl sbb clc int test cmp aaa jnp lcall add test stc mov lock mov test jbe negl add ret (bad) out or test jbe negl add test insl adc pusha sbb xchg xchg add cmp (bad) js mov xchg xor and adc cmpsb add inc pushl js hlt sbb mov xchg or xor sbb rol inc (bad) aaa jae lock mov xchg dec loope clc inc (bad) aaa jae lock mov xchg xor aaa adc add mov xchg xor aaa jae negl ror lods xchg add aaa jg in js mov xchg add aaa jae negl add stos in inc in cmp (bad) sbb add dec dec adc sbb mov test xchg inc popf aaa adc mov xchg test adc sbb mov xchg add aaa add xlat js mov xchg add cmp sbb mov xchg sti add aaa jl sbb clc int xchg add aaa jae pop sbb mov stos in inc cmc dec gs negl add scas sti testb adc (bad) js mov xchg add dec js negl add test aaa jae negl add andl out negl add stos in inc (bad) out jecxz add mov pop adc js roll loopne xchg aaa jae icebp sbb int enter in inc (bad) aaa sub fsubl mov xchg add aaa jae lock mov mov outsl inc outsb aaa jae negl repnz cwtl repz aaa ja negl fadd mov add stos in mov negl add mov dec js negl add mov aaa jae negl (bad) mov push rorb mov aaa jl testb inc jne testl cmc dec or jecxz sbb scas test pop xchg addr16 js mov stos in inc jmp sbb vorpd movsbl enter jl testb inc jb testb in inc cmc dec bound sub enter add inc (bad) cmp cmp lock aaa jo and cli inc jo call inc cmc dec pusha in cli sbb rcll pop mov jge sbb and or cmp adc js mov xchg stc jnp lcall add scas test pop xchg fwait (bad) mov jecxz out fwait push rorb mov aaa jl lock vorpd movsbl enter jl lock mov mov aaa jge sbb cwtl cli add dec gs negl add pop add gs negl add pop add jg out js mov mov cmp adc add mov mov outsl inc outsb aaa jae negl repnz xchg dec mov outsl inc outsb aaa jae negl repz call out inc pushl jge pop add mov (bad) repnz mov aaa jae negl ror lods xchg dec mov outsl inc outsb aaa jae negl repz push rorb mov aaa jl testb inc jb testb in inc cmc dec inc adc pusha add test repz aaa jae (bad) sbb add lock aaa ja pop sbb mov stos in inc cmc dec inc adc pusha cli mov xchg add cmp in cli sbb mov xchg add aaa sub roll clc inc cli xor cmp aas mov lcall sbb xor repz aaa jae cld add mov test aaa jae sarb sahf xchg add aaa jge out sub jg sahf inc in cmp mov xchg add cmp out adc clc sub stos in inc pushl jnp in pusha sub mov aaa jae out js mov test jns negl add mov mov out pusha sub stos mov xchg cmp in cli sbb vpcmpgtd seto jl testb inc push xchg sti add dec gs negl add add cmp out js roll add dec gs cld add mov test aaa jae negl add scas in inc pushl jae adc xchg add dec add int xchg add cmp in js mov xchg add cmp negl add stos in inc in cmp negl sti lds xor mov out inc pushl jge sbb push clc inc stc cmp negl sti lds xor (bad) in inc pushl jge sbb push clc inc stc cmp negl sti lds xor aam enter jge sbb push clc inc stc cmp negl sti lds xor mov out inc pushl jge sbb push clc inc stc cmp negl sti lds movsl sahf inc pushl jge pop add mov xchg inc mov icebp mov negl ljmp fistl push aaa sbb adc (bad) sbb mov out inc pushl jge pop add mov cwtl flds sbb movsl aaa jae negl ror lods xchg add dec adc negl add mov aaa jae (bad) sbb mov call enter jge pop add mov xchg inc mov icebp mov negl ljmp test mov adc xchg xor aaa jae negl add lods movsl sahf inc pushl jge pop add mov cwtl fildl sbb mov jae negl ror lods xchg add dec adc negl add mov sub mov xchg std add cmp adc mov xchg pop mov push out negl add jge cmp aaa jae negl ror lods xchg add mov out negl add xchg movsl lcall pusha and xchg les aaa add (bad) js mov xchg xor aaa jae negl ror lods xchg pop pop sbb out negl add stos in inc aad adc mov xchg pop mov add negl add jge dec inc test sbb int xchg add mov out negl add xchg movsl xchg mov clc js inc push mov pushf mov negl ror lods xchg add cmp negl add stos in inc aad adc mov xchg pop xchg add adc add (bad) movsl sahf inc std cmp or mov stos in inc loopne fucomi mov adc iret in inc inc aaa daa out negl add stos in inc aad adc mov xchg pop xchg add push pusha sub (bad) movsl sahf inc std cmp or mov xchg add cmp inc sbb or test int cld cmp sbb mov (bad) sbb mov out inc pushl jge pop add mov cwtl flds sbb movsl aaa jae negl ror lods xchg add mov add roll out (bad) sbb mov call enter jge pop add mov xchg inc mov lahf inc mov sbb shll inc xchg mov sbb popf fwait jecxz loope jns xor xchg add dec inc adc lds stos in mov add xor add cmp sti add inc and and inc cmc dec gs negl sti lds test inc pushl jl sbb in stos in inc lret adc hlt mov xchg add aaa jae add xor add cmp sbb sbb mov movsl in mov negl add mov cwtl inc mov sbb int xchg pop pop sbb out negl add stos in inc aad push adc js mov xchg pop mov jbe (bad) js mov out inc jge dec inc test sbb int xchg add mov out negl add xchg movsl xchg mov stos sbb roll les aaa daa out negl add mov pushf mov negl ror lods xchg add cmp negl add stos in inc aad push adc js mov xchg pop xchg add adc add (bad) movsl sahf inc std cmp or lds in inc loopne (bad) aam sub iret in inc inc xor add stos in inc cmc cmp adc js roll movl add mov xchg or in mov loope adc (bad) movsl sahf inc in cmp inc imulb add dec gs negl cli shrl scas mov negl ror lods xchg add xor pop cmp mov add cmp in (bad) js mov test aaa and negl add stos in mov sbb add (bad) movsl sahf inc std cmp inc clc fdivrs stos in mov or lds in inc in add cmp sbb (bad) movsl sahf inc std cmp inc clc fdivrs stos in mov or mov xchg add cmp in cmp sbb (bad) movsl sahf inc std cmp inc clc fdivrs stos in mov or mov stos in inc in add cmp sbb (bad) movsl sahf inc std cmp inc clc fdivrs stos in mov or leave mov jecxz in add cmp sbb (bad) movsl sahf inc std cmp cmp cmp or hlt add cmp out out adc (bad) movsl sahf inc std cmp cmp cmp or hlt add cmp in or mov xchg add cmp add ss arpl add dec gs negl sti lds (bad) pushl jge pop add mov xchg xor aaa jg in js mov mov add aaa jae negl add stos in inc in cmp sbb icebp mov test add aaa jno sbb cld mov xchg pop test adc add roll push inc jbe jae negl repnz xchg xor aaa jg in js mov mov add aaa jae negl add stos in inc in cmp sbb icebp mov cmpsb add stos in inc sti aaa jno sbb cld mov xchg pop test jg in js mov xchg add jae negl add stos in inc in cmp pop sbb rorl popl aaa jae negl jmp pop clc add movsl sahf inc pushl jge pop add int xchg dec mov repz pushl jae negl repnz cmpsb adc jnp lcall add xchg cwtl std pop xchg test out sbb icebp mov cmpsb add stos in inc sti aaa jo sbb ss pusha data16 stos in inc cmc dec gs negl add pop add add negl add test add negl add ret (bad) jmp mov add cmp in lret vpcmpgtd or aaa jl lock lds sti dec shl clc inc pushl jge pop add mov xchg add aaa jg in js mov mov add aaa jae negl add stos in inc in cmp sbb icebp mov test add aaa jno sbb cld mov xchg pop test adc add roll sarl negl repnz xchg xor aaa jg in js mov mov add aaa jae negl add stos in inc in cmp sbb icebp mov cmpsb add inc sti aaa jno sbb cld mov xchg pop test adc add roll int xchg jae negl repnz xchg xor aaa jg in js mov xchg add jae negl add stos in inc pushl jae negl sti lds (bad) pushl jl push add roll mov negl jmp inc call enter jge pop add lds test inc pushl jl sbb ss insb push fldl stos in inc cmc dec inc adc js xor repz cmp adc js mov xchg add dec sbb icebp sbb mov xchg pop mov (bad) negl add xchg out negl add jp cmp aaa jae negl (bad) mov call clc inc pushl jge pop add mov (bad) or (bad) xorl adc sbb shll int3 mov negl ror inc (bad) pop add aaa jns out js mov mov add aaa jae negl add stos in inc in cmp (bad) sbb int xchg add dec adc clc loop mov clc inc cmc dec pusha in cli sbb mov (bad) out ja lds out negl push mov lods in mov push sbb mov xchg add cmp in out js mov xchg add cmp negl add mov cmp shll in inc repz sbb loope in mov xchg add aaa jl out js mov sbbl mov negl ror lods xchg pop xchg fwait mov cmp out out js mov xchg add inc pop adc ret int xchg add xor adc mov test inc pushl jge sbb and xor aaa jae negl ror mov mov jge add sub ja fwait xchg mov sbb add mov js negl add mov cmp adc sbb mov push adc sbb mov xchg add fs lock mov mov aaa jae negl ror lods xchg xor aaa jae negl ror lods xchg xor aaa jae negl (bad) mov (bad) pop add dec adc sbb mov xchg pop test jae sarb sahf xchg add aaa jle sbb sbb mov sahf inc (bad) sbb jecxz add mov cmp adc js mov enter in inc pushl gs pusha sub mov dec jb cmp sbb (bad) movsl stos mov or mov xchg add aaa jp add xor add clc inc cld cmp jmp xchg icebp xor aaa jae negl ror test (bad) inc sbbl mov negl (bad) mov call sahf inc pushl jge sbb and or cmp mov cmpsb repnz mov jp negl add stos in inc mov or inc pusha xchg sti add dec gs negl in dec mov inc sbbl inc test sbb int xchg pop pop sbb inc pop dec jns negl add mov dec pusha in push sbb mov xchg add cmp in out js mov xchg add jl lret js shll std inc test or cmp sbbl mov negl ror pop (bad) call inc pushl jge sbb and or dec sub enter fcoms mov aaa jae negl ror mov (bad) in cmp adc js mov stos in inc cmc dec gs icebp sbb mov stos in inc cmc dec gs icebp sbb mov stos in inc cmc dec pop adc add mov xchg add cmp negl ljmp in mov negl add stos in mov push sbb rcll in inc pushl jae negl clc mov stos in inc pushl push adc js mov call lcall sbb stos in inc pushl pop adc lds add jg loop sbb add (bad) mov adc lds fcmovnbe mov pop add mov jp mov out cmp fdivrs (bad) (bad) fimull adc js (bad) mov sbb inc mov sub cmp sti inc ds or in mov cld sbb aaa iret fcmovne inc rorl out in adc out pop rcr incl aaa sub std sbb cmp out aas (bad) mov adc int retw sti repnz mov add mov test xchg mov add add mov in mov repnz mov into in mov xor fdivrs ret inc inc cmp cmp repz mov cli mov iret fcomi inc fiadd adc pusha add sti push iret inc mov add cwtl test dec (bad) fcmovnbe mov fisub xor movsl xchg mov inc clc fnstcw jo mov in or retw mov add out std mov iret fcmovnbe mov adc lds fcmovne mov sbb cli roll clc inc pushl jae negl add stos in inc pushl jae hlt add mov mov pop sar inc cmpl stc mov push clc inc pushl outsb in ljmp add dec adc sbb sti cmp hlt add aaa inc adc js mov xchg add xor push int push pop inc mov add mov jp mov out cmp fdivrs xchg mov js inc clc sti inc data16 fwait mov pop add mov (bad) in mov cld sbb inc jp test fnstcw add cmp call mov adc add mov jp dec mov cmp cmp jle fistpll (bad) mov sub std sbb cmp out aas mov lds xor ffreep cmpsb push lret inc sub cmp fdiv dec (bad) ret inc and frstor mov mov clc inc nop mov out sbb cmc shll xor inc mov call call mov in aam add hlt data16 imul sti out loopne das mov lret inc out dec sbb loop in mov mov dec adc xor clc add in mov or fdivr inc jp cmp adc fdivr inc mov dec mov call push pop inc inc inc sub pop add mov jp mov out cmp fdivrs iret fcmovnb inc lea jge negl add stos in inc pushl jae negl add stos in inc lock adc (bad) mov cmpsb adc iret (bad) xorb in ljmp add xor and test les negl add stos in mov negl add mov push mov or daa leave mov adc mov negl add stos in mov adc add mov cmp mov fdivr dec mov sahf inc pushl or iret sbb leave mov popf mov negl add insl add or in sbb and test inc pushl jae negl add cmpsb test inc pushl and cmpsb sbb mov test cmp stc pusha sub mov clc inc pushl jg sti sbb mov xchg add inc ja fsubs leave test in inc pushl add mov cmpsl in mov negl add xchg movsl lods inc cmpl out in add mov xchg add aaa jae negl add stos in inc cld cmp adc js mov mov cmp out negl add insl movsl pushf mov lock rcll les negl add stos in inc pushl jle lret mov xchg add aaa jae negl add stos in inc pushl popa adc add mov xchg add aaa jae negl add addb inc pushl addr16 jecxz add stos in mov negl add stos in inc pushl jns jmp sub test sarl sbb mov mov add aaa jl out sub stos in inc xchg jae negl add stos in inc pushl jl sarb sahf xchg add aaa jae negl add stos in inc pushl jae negl add mov aaa jae negl add stos in mov les push mov mov aaa (bad) in adc cs mov aaa outsb in cli js mov mov aaa jle cli sbb leave mov (bad) xchg aaa js les lds out mov out add (bad) mov and mov aaa add xlat js leave mov test adc js int out add aaa insl adc pusha es out add aaa add int xchg incl mov aaa js ljmp pop lods sti std inc xchg popa adc pusha sbb lods sti std inc xchg pop adc sbb mov cwtl stc pop lods sti std inc xchg pop in or sbb lods in inc xchg aaa sub mov out add aaa pop in push sbb mov mov aaa insb adc add inc out add aaa add mov popf test jb jnp sbb out add aaa pop adc add mov out add aaa add fstpl jecxz outsb call xchg aaa in bnd mov mov pop xchg fwait fwait inc xchg aaa inc adc add mov sahf test adc add mov lods in inc xchg aaa (bad) in add lock push mov mov or mov and mov sbb repnz and mov aaa push out xor out add aaa inc in and repz pop out pop mov aaa insb adc pusha add pop out pop mov aaa sub int xchg add aaa jl push add mov clc sub mov aaa jp sbb call add aaa addr16 repz mov clc sub mov aaa push in call clc sub mov aaa inc adc add mov call mov out add test add aaa sub mov xchg add aaa sub scas sbb mov out add aaa jns cmc sbb mov xchg add aaa addr16 add ljmp test adc js mov mov aaa pop out jmp out jle daa add aaa pop adc call xchg aaa inc out add (bad) mov mov aaa insl adc add mov mov aaa imul pusha sti mov (bad) movsl xchg aaa and aad cld mov mov aaa gs js shll pop mov aaa addr16 adc mov stos in inc xchg aaa push in call out add aaa pop adc pusha inc outsl (bad) adc scas in inc xchg aaa inc in xor (bad) mov testl xchg aaa insl adc add rorl add aaa sub movb shll add aaa sub (bad) shll add aaa pusha adc js xor cwtl stc pop lods in inc xchg aaa or xor mov aaa push out xor (bad) or mov aaa sub (bad) xor stos sti push mov lret js cmp ljmp aaa js ljmp jns aaa jp (bad) sbb seto je fdivrs cmp out add aaa inc adc sbb add aaa outsb in cli js cmp out add inc mov sbb add aaa jp sbb xor out add aaa pop adc sbb inc or mov jmp test add aaa inc adc js inc add sahf mov add test add aaa sub movb inc push jbe push test in fsubl inc push jbe push test in sti sbb push test in iret js mov out add aaa in or sub scas in inc xchg aaa or mov jbe push test adc sbb add aaa pop adc js mov jbe push test out xor mov jbe push test adc sbb mov jbe push test adc sbb mov out add aaa jge repnz mov (bad) movsl xchg aaa jnp push js mov lods in inc xchg aaa or lds pop mov xchg fwait fwait inc xchg aaa push out sbb mov sahf test and cs (bad) movsl mov in cmpsl sbb mov mov aaa sub cmc sbb rorl mov cmp pop sbb roll loopne xchg aaa js lds lds in inc xchg aaa pusha adc js lds in inc xchg aaa pop adc js lds xchg aaa pop in and xchg add aaa inc adc xor mov in inc xchg aaa insl adc js roll xchg inc xchg aaa push adc sbb roll xchg inc xchg aaa das out ret roll xchg inc xchg aaa jae lock leave test xchg inc xchg aaa jns (bad) js leave test xchg inc xchg aaa pusha adc sbb add aaa jae negl add stos in inc pushl jae negl add stos in mov negl add test aaa pusha adc pusha sub stos in mov (bad) js mov xchg add aaa push in call in test sarl add mov xchg add cmp sti sbb mov mov cltd inc mov js mov xchg add aaa jl sarb (bad) xchg add aaa jae negl add stos in inc mov js mov mov add aaa push out add xchg add aaa jge sarl test stc add cmp sbb mov out stos in inc pushl js les mov cwtl cld add aaa jae negl push mov mov aaa pusha adc pusha sub stos in mov in pusha sub mov aaa (bad) in add sbb test icebp mov pop add mov call les sti sbb add aaa jp into js mov cwtl lock aaa jae negl push mov movsl in mov fisubl mov test add aaa add in sbb mov aaa jle cli sbb mov lods sti dec inc outsb aaa js les mov mov add cmp sbb mov mov jmp adc js mov mov add aaa jg lret js mov mov aaa addr16 repz mov call loope mov addr16 repz mov cmpsb add inc pushl addr16 repz mov push jae outsb aaa jg lret js mov test add aaa addr16 repz mov data16 xchg jl push add mov mov add cmp outsb aaa jg lret js mov cwtl incb pop sbb lods aaa jg lret js mov push sbb inc outsb aaa jnp iret js mov xchg lock mov stc mov iret js mov (bad) or mov jmp out iret js mov out pop mov fdivrl lret js mov mov aaa jae (bad) js mov test pop mov jl (bad) js mov push imul js mov mov pop popf fwait cmpl js mov out pop lcall out (bad) js mov xchg lock pushf test outsl cmp lret js mov xchg incb inc and js lret js mov data16 inc and js lret js mov out pop xchg fwait cltd mov lret js mov push mov lret js mov xchg fwait js je sub movsb sbb rcll clc inc pushl jg les rcll add aaa jae (bad) js mov xchg movsl sahf inc pushl jae negl add mov cmp ljmp add dec sbb negl add test stc mov clc js mov stos in inc xchg add rcrb mov stos in inc pushl jl pop sbb lds (bad) lods aaa jae in sub mov clc inc pushl jae negl add sahf fwait jl outsl cmp pop add mov mov add dec sbb negl add stos in inc incl out aad sub mov and stos in mov sbb fidivrl stos in inc pushl jg les rcll add aaa jae in sub mov clc inc pushl jae negl add stos sti xchg mov add sbb movsl in mov negl add test stc mov in adc lock stos in mov repnz lds in inc pushl jg jmp call mov in sub (bad) inc pushl jae negl add movsl in inc cmpsl cmp adc js mov mov add xor add test stc mov adc (bad) sbb stos in mov (bad) sbb lds in inc pushl jl push add lds movsl mov in sub (bad) inc pushl jae negl add lods in inc movsb xor adc cmpsl in inc fidiv add test sarl js int (bad) adc stos in inc (bad) aaa jae icebp sbb mov xchg add aaa jae (bad) js mov test add inc xchg jl sarb dec out xor aaa jae negl add stos sti jecxz sahf cmp pop add mov xchg add cmp negl add scas in inc xchg cmp and push int out add aaa or (bad) sbb mov xchg add aaa or out adc mov add jl out sub cmpsl test inc pushl jae negl add popf mov add xor sub mov cmp negl add scas in inc xchg cmp in lock js add aaa (bad) in loopne (bad) mov xchg add aaa or out adc movsb (bad) pop add mov out sub cmpsl test inc pushl jae negl add fwait test adc pusha sub movsb sti lahf mov negl add mov aaa outsl out jmp lock in stos in mov fistpl (bad) mov xchg add aaa or out adc lea inc mov icebp sbb mov cmpsb lock mov clc inc pushl jae negl add test lahf inc movsb xor sbb scas sti xchg mov negl add stos in mov fstpt int (bad) sbb stos in inc test sbb mov stos in inc pushl jl pop sbb lds (bad) lods aaa jge pop add mov (bad) push aas mov clc inc pushl jae negl add test xor add mov cmp mov xchg add inc cmp aad sub mov and stos in mov lds add sahf xchg add aaa jae sarb mov or mov aaa jge pop add mov (bad) or inc pushl jae negl add stos in inc sti aaa daa out lds sbb cmpsb sti popf mov negl add test in inc popl out repz mov stos in inc mov jp clc sbb mov stos in inc pushl js sbb inc movsb mov pop cmpsb in inc mov jle lret mov xchg xor (bad) pushl jae negl add scas sti xchg inc movsl aaa das out frstor mov test add inc sbb negl add test in inc popl out xlat js mov xchg add aaa jl repnz roll clc inc pushl js sbb inc dec mov xchg mov hlt sbb mov cmpsb pushl xchg movsl sahf inc pushl jae negl add mov aaa jl les mov scas in inc xlat inc sbb negl add test in inc xchg aaa inc adc add mov enter fucomi inc test sbb roll clc inc pushl js sbb sbb stos in inc xchg cmp jmp sub xchg movsl sahf inc pushl jae negl add mov aaa adc add mov sti xchg mov negl add test in inc xchg aaa insb adc add mov xchg sti add aaa cs movsb sbb mov xchg add aaa jae out js lds (bad) cmpsb cmp out pusha sub (bad) (bad) pushl jae negl add scas sti xchg inc mov sbb mov test inc push out negl add stos in mov call enter (bad) mov arpl loope lret xchg add aaa jg les rcll add aaa in loop add lea aas mov clc inc pushl jae negl add stos sti jecxz sahf cmp pop add mov out add sub mov xchg add aaa pop in or mov test aaa cs movsb sbb xor repz aaa or rcrb lds movsl mov cmp bnd mov out aas cwtl movsl sahf inc pushl jae negl add mov cmp pop add mov out add and negl add scas in mov out sbb mov mov aaa sub scas add add aaa add cmc pusha std mov lea addr16 add sbb mov clc inc pushl jae negl add lahf test in push mov stos in mov negl add scas in mov sbb stc mov mov add aaa pop adc add mov stos in inc pushl add cmc pusha cli mov push jae ja pusha out jecxz add pushf xchg cmp (bad) pushl jnp lcall add pop sbb out cmpsl sbb mov mov inc sub negl add scas in mov into sbb mov clc sub mov aaa arpl ljmp add aaa add cmc pusha sti mov popf fwait popf inc xchg cmp repz mov push enter jae negl add mov cmp adc add dec imulb add inc sub negl add stos in inc xchg aaa inc adc js mov fcomps add aaa push adc add roll clc inc pushl jl push add mov push call adc add mov out aaa (bad) (bad) pushl jae negl add mov xchg inc mov add (bad) cmpsb sti in mov negl add test stc mov fidivr mov mov add aaa and mov xchg add aaa jg jmp call xchg mov std sbb aaa (bad) (bad) pushl jae negl add test ret inc cld cmp jmp out stos in inc jecxz pop out negl add stos in inc incl out aad sub mov and scas sti xchg inc test sbb rcll clc inc pushl jg lret js mov xchg test inc test arpl int adc xchg movsl sahf inc pushl jae negl add cmpsl in inc jno insb adc js (bad) lock cmpsl in mov negl add test stc mov in push mov cmpb out negl add mov cmp sbb mov mov add jl negl add test stc mov negl add scas in mov negl add lods in mov negl add mov xor add mov xor add lods in mov negl add lods in mov negl add test aaa ja negl add test aaa ja negl add mov cmp sbb mov mov add aaa ja negl add lods sti jmp out negl add test aaa ja negl add lods sti jmp out negl add mov cmp sbb mov mov add aaa ja negl add lods sti jmp out negl add test aaa ja negl add lods sti jmp out negl add mov cmp sbb mov mov add ja negl add mov cmp sbb mov mov add ja negl add mov aaa ja negl add cmpsl in mov negl add movsb sti out mov negl add movsl in inc xorl out negl add movsl in inc push ja negl add cmpsl in mov negl add movsb sti out mov negl add movsl in inc xorl out negl add movsl in inc push ja negl add cmpsl in mov negl add movsb sti out mov negl add movsl in inc xorl out negl add mov aaa ja negl add cmpsl in mov negl add movsb sti out mov negl add movsl in inc xorl out negl add scas in inc mov sbb mov mov add aaa ja negl add mov cmp sbb mov mov add cmp negl add movsl in mov negl add movsl in mov negl add movsl in mov negl add movsl in mov negl add mov cmp negl add mov aaa ja negl add mov cmp negl add mov cmp negl add mov cmp negl add mov cmp negl add mov cmp sbb mov mov add cmp negl add mov aaa fs sbb add aaa imul inc imulb add cmp cld sbb mov push sti mov cld sbb mov xchg add aaa pusha adc sbb mov test add cmp lds mov mov add cmp cld sbb mov (bad) sbb mov mov cmp cld sbb mov call icebp inc test bound cld sbb mov in scas sti out mov js mov data16 scas sti dec inc insb cmp lds mov mov cmp cld sbb add cmp cmc js mov stos sti out mov js mov movsb sti dec inc je sub mov adc add cmp sarl nop xchg incl mov (bad) mov sarl stos mov lods mov sarl mov sbb lea jle sarl mov add cmp sarl scas test add cmp sarl icebp data16 mov int lea jg sarl xchg cwtl cli add cmp adc or mov pop adc mov popa inc je jge (bad) js shrl call adc js shrl call out lret js shrl call adc js shrl call out iret js mov mov aaa add (bad) sbb add aaa or rcrb mov mov aaa push in lret mov mov aaa or les add add aaa or into sbb add aaa add (bad) sbb add pop mov rcrb mov push sbb movsl aaa push in lret mov push sbb movsl aaa or les add add pop mov into sbb add pop mov iret js shrl call adc js shrl call out repz shrl repz int or scas mov repz sarl mov pop sbb lahf cmp adc js mov enter add push out xlat js mov call cmp fistpll mov pusha sbb pushf xor or scas mov repz xlat js mov mov aaa add xlat js mov movsl in mov loope or popa add push out jmp or mov add pop adc js rorl add push inc xchg xor push mov lods sti popf mov out or scas mov mov mov push out jmp push mov scas sti stc mov xlat js mov (bad) adc mov testb inc out out js mov mov aaa gs js mov mov aaa gs js mov (bad) pop add mov leave js mov fcoms add mov adc js mov pop add inc adc js shrl popl xor or scas mov call adc sbb add add aaa inc adc js shrl mov cmp js shrl call adc sbb shrd popf mov sbb add rsm in mov aad adc stos sti popf mov sti js sarl sahf inc lahf cmp cmc js mov mov aaa or aad adc lods sti jecxz mov js mov test cwtl inc movsl aaa push out out adc xchg mov or mov test setae push out out adc add push adc js mov fcoms jg aaa imul js mov rol inc test pop adc add add cmp adc data16 mov cmp adc js cmpps mov push sbb add cmp adc js mov mov xadd in scas cmp out adc lods cmpsb cld xadd in scas cmp out adc mov adc ret inc lahf cmp (bad) js roll mov out adc ud1 fucomi mov fistpll mov (bad) mov or aad or pop sbb adc js mov mov clc inc nop cmp out adc lods in mov sbb add test sti mov sbb add mov clc mov sbb add add cmp in mov mov call adc js mov mov aaa popa adc js mov (bad) adc mov inc out out js mov mov aaa inc adc js mov mov aaa inc out adc mov mov aaa or mov xchg sub mov or scas mov roll (bad) sarl mov lahf fwait jb jae add sarl mov mov sub shrl roll (bad) sarl mov pushf test adc js mov lea inc out out js mov (bad) or mov jbe (bad) js lds mov jbe (bad) js lds test out adc mov (bad) or mov sbb test mov imul jb sarl movsl enter fwait jecxz test jb sarl xchg lea int adc setl add sarl (bad) hlt push call adc js leave mov loopne lcall mov (bad) or mov add sarl mov arpl pop inc mov push adc js mov xchg test out iret js leave xchg mov pop inc imul adc js mov mov cmp adc js mov mov cmp out js mov xchg punpcklbw inc out adc mov xchg punpcklbw jnp iret js mov data16 xchg test inc stc cmp leave js lds fwait cltd mov repz (bad) (bad) xchg test adc js leave xchg mov call out fstpt leave xchg mov call out out or hlt data16 mov sti mov out or xchg cltd inc fwait cmp loope or xchg mov or cmp jmp or mov in inc mov pop adc js lds and mov lds out js lds sti fwait inc fwait cmp out js lds sti dec mov adc (bad) fmull mov out inc mov (bad) aad or or cmp out or or cmp out js leave mov sti dec mov adc leave stc data16 movsb sti leave mov in js leave xchg mov call out idivl leave xchg mov repz leave js mov xchg or cmp adc js mov enter mov popa out idivl mov (bad) movsl xchg inc cmpl or stc data16 ret mov sti js mov mov aaa jge sarl pushf xchg or (bad) lahf cmp sti js mov enter (bad) lods aaa imul stc push testl js leave xchg mov pop inc imul adc js mov ret (bad) cli inc sub mov or add inc adc leave xchg mov idivl mov or add aaa sub mov mov repz test mov repz (bad) js mov mov repz sarl mov or mov xor add mov xor add mov xor add mov xor add mov xor add mov xor add add addr16 js mov test add xor sbb mov jp add sbb mov outsb in add sbb test inc insl in add sbb mov jp add sbb mov outsb in add sbb test out cwtl inc insl in add sbb test inc insl in add sbb mov inc outsb in add sbb mov leave mov add sbb rcr mov add sbb mov inc insl in add sbb fwait test jb jp add sbb mov pop out (bad) sbb add or mov data16 mov cmp mov cmpsb sti repz sarl mov test add xor add add jne iret sbb cmpsl in mov iret sbb add jne std pusha sub mov cmp std pusha sub cmpsb sti repz out adc mov xor add add pop adc pusha sub cmpsb sti repz or mov mov add cmp or mov cwtl incb mov inc out out js mov test add xor add add inc adc pusha sub mov cmp xor mov mov out idivl mov test add insb adc sbb mov cmp in add add imul pusha sub mov cmp sbb mov mov aaa and stos sbb add sub fsubs mov data16 mov cmp in fsubs mov test add aaa ja negl stc rcrl jecxz lahf cmp (bad) js mov sahf fwait mov cmp in das shll inc lahf cmp in sub mov fwait mov cmp in cs mov cmp sarl lahf mov add push inc lahf cmp lcall stc rcrl jecxz lahf cmp iret js mov sahf fwait mov cmp iret js mov sahf fwait mov cmp in pusha cs mov cmp in pusha sub mov fwait mov cmp in pusha das shll inc lahf cmp leave js mov push add or rcrl jecxz lahf cmp mov test cmp adc js mov push add jne iret sbb rcrl jecxz lahf cmp std pusha das shll inc lahf cmp std pusha sub mov fwait mov cmp std pusha das roll cmc inc fwait cmp out std pusha sub add cmp std pusha sub add cmp adc cwtl incb movsb sti jecxz lahf cmp or mov sahf fwait mov cmp or mov cmpsl in mov or roll stc inc testb sbb enter sti jecxz lahf cmp xor mov mov inc adc pusha sub mov fwait mov cmp xor shll inc lahf cmp xor mov mov imul sbb shll inc lahf cmp in stos sbb rcrl jecxz lahf cmp in mov cwtl std pop mov cmp adc flds cmpsl in mov negl std leave sahf cwtl incb movsb sti jecxz lahf cmp (bad) js lds sti out inc fwait cmp sarl repnz cmpsl in mov lcall cld (bad) flds mov cmp lcall std leave sahf cwtl incb movsb sti jecxz lahf cmp iret js lds in mov (bad) sbb (bad) flds mov cmp lds sti out inc xchg cmp adc js lds popa inc jno jb iret sbb (bad) flds mov cmp adc data16 mov cmp sbb data16 mov cmp in cld (bad) flds mov cmp in std leave sahf cwtl incb movsb sti jecxz lahf cmp in stos sbb leave sahf cwtl incb movsb sti jecxz lahf cmp in stos sbb (bad) flds mov cmp negl icebp mov cwtl incb movsb sti jecxz lahf cmp negl lock data16 mov cmp lcall icebp mov cwtl incb movsb sti jecxz lahf cmp lcall lock data16 mov cmp mov cwtl incb movsb sti jecxz lahf cmp iret sbb mov cwtl incb movsb sti jecxz lahf cmp adc data16 mov cmp adc cwtl incb movsb sti jecxz lahf cmp sbb cwtl incb movsb sti jecxz lahf cmp in lock data16 mov cmp in icebp mov cwtl incb movsb sti jecxz lahf cmp in stos sbb int data16 mov cmp in hlt mov data16 mov cmp in stos sbb mov data16 mov cmp negl call add cmp lcall call add cmp mov mov cmp iret sbb mov mov cmp adc data16 mov cmp sbb data16 mov cmp in jmp add sub stos sbb (bad) mov adc movsb sti jecxz lahf cmp negl jecxz pop enter sti jecxz lahf cmp lcall jecxz pop enter sti jecxz lahf cmp mov fcomps movsb sti jecxz lahf cmp iret sbb mov enter sti jecxz lahf cmp adc enter sti jecxz lahf cmp sbb enter sti jecxz lahf cmp in jecxz pop enter sti jecxz lahf cmp in stos sbb mov enter sti jecxz lahf cmp negl out inc enter sti jecxz lahf cmp lcall out inc enter sti jecxz lahf cmp mov movsb sti jecxz lahf cmp lds adc movsb sti jecxz lahf cmp iret sbb rcll push mov iret sbb lds adc movsb sti jecxz lahf cmp loopne or add xor push leave pushf xchg icebp add xor adc add pop inc mov adc add pop inc pushf xor daa mov cmpsb add pop add insl in sbb daa mov cwtl incb push add jnp int3 js mov pop sbb movsl aaa push mov test push mov mov cmpsb add inc and ja in sbb test cld pop mov cmp adc mov lea push adc js vpcmpgtd add aas mov in adc scas xchg cli pop xchg jg jmp adc xchg mov pop mov pop out jmp repz out pop mov cmp or int xchg cli pop popa sbb movsb inc jnp lock mov mov add aaa jl push add mov cwtl cli add aaa jge icebp sbb mov xchg sti add aaa jge out sub stos in inc jbe jle cli sbb mov test add aaa jg sbb sbb stos in mov push pusha sub movsb sti fwait inc cmpsl cmp sbb add lods in inc xchg cmp jmp adc movsl in mov cmp sbb movsl in inc scas cmp or mov xchg add aaa imul sahf xchg add xor adc test stc mov jmp sbb (bad) xchg add aaa or enter (bad) xchg add aaa push adc sbb mov cmpsl in inc stc cmp mov cmpsl in inc push sbb mov movsb sti std mov mov xchg add sub mov mov cmp add roll (bad) mov jmp xchg add inc insl in add adc xchg lds inc outsb in add adc test out movsl aaa jae in sub stos in inc test js mov xchg add aaa jl out sub stos in inc mov jge sarl pushf xchg add aaa jge out sub stos in inc outsb aaa jle lret mov mov add aaa jle lret mov xchg add aaa jle call xchg add aaa jg lret js mov mov add aaa jg lret js mov xchg add aaa jg jmp mov add aaa jg jmp mov add aaa js les mov xchg add aaa js les mov mov add aaa js ljmp add aaa js ljmp add aaa jns lds mov mov add aaa jns lds mov mov add aaa jns jmp sub scas sti cltd inc mov pusha sub scas sti xchg inc test js mov mov add aaa jp into js mov xchg add aaa jp in pusha sub scas sti inc inc jbe jnp iret js mov mov add aaa jnp iret js mov xchg add aaa jnp in pusha sub scas in mov enter test sti out inc mov pusha sub cmpsl in mov adc leave stos (bad) adc mov lret leave mov sub pushf fwait xchg mov in js mov data16 test in inc xchg aaa jae jmp test pop mov lods mov clc sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl push in fstpt leave mov call out negl add stos in inc pushl jae negl add stos in mov pop add mov xchg add aaa jge pop add mov xchg add aaa jae negl add stos in inc pushl jge pop add mov test add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add test xor add stos in inc (bad) aaa jae negl add stos in inc pushl jae negl add stos in mov out sbb stos in inc pushl jl lock mov xchg add aaa jae negl add stos in inc pushl jae (bad) js mov out add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add lods sti icebp inc clc dec js negl add stos in inc (bad) aaa jae negl add stos in inc pushl jae negl add stos in mov adc xchg add aaa jae negl add stos in mov negl add mov aaa outsl out jmp add stos in mov negl add stos test or aaa jl sarb lcall inc xchg aaa jl lock mov cwtl cli add aaa jge sarl xchg xchg sti add aaa jg sti sbb mov xchg icebp add xor add test inc inc jbe or out adc mov clc inc pushl jnp iret js mov xchg add aaa jg sti sbb mov data16 scas in inc xchg xor add scas sti cltd inc mov add cmpsb (bad) pop add xor add pop sbb mov add add aaa inc adc pusha sub mov push in clc pusha push mov lods sti mov cmp push pusha sub mov aaa jp into js mov mov add aaa jae negl add stos in inc xchg in fsubs inc sub repnz loopne xchg inc lea in in sbb jp test fnstcw add cmp call cltd inc cmc dec pop out in add inc jp test adc out setl ja call out add dec je in add mov hlt mov sbb or ffree int out gs sbb ror push call cltd inc jmp push in sbb sub cld inc jp push mov fidivr mov out inc into in mov (bad) js mov call push mov add cmp jp out scas in inc jnp imul xor sti inc and add (bad) sti (bad) mov (bad) js roll hlt mov cmp out aaa (bad) (bad) lahf mov out sti add xor testb movsl insb inc mov js leave mov hlt mov fisub lds lret mov add inc mov aaa addr16 push sbb lds stc inc pushl icebp lds movq lods inc fdivs and fisub int push cli inc aad add es leave inc (bad) and iret fcmovne inc loop add mov cwtl fildl mov js cmp fdivr inc sar xchg inc cmc xor ffree pop fdivr inc (bad) sti ret inc js aaa add mov cmpsb or (bad) lds mov add mov aad pop inc inc inc js inc clc cmc mov fsubs xor mov in add cli mov (bad) or (bad) cwtl mov in sbb in mov push cmp adc fnstcw aam lret inc cli cmp inc clc in lds lret inc jmp push in sbb sub cld inc jp push mov fidivr mov out inc into in mov (bad) js mov call push mov hlt add lds cmp adc fdivr inc mov inc push in sbb sub cld inc jp push mov fidivr mov out inc into in mov (bad) js mov call push mov add cmp jp aam xchg mov js inc clc sti inc data16 fwait mov pop pusha sub loopne int3 mov add cli mov call cmpl jp jmp insb sbb in sbb ror pop out aaa jb test adc out aaa iret fcmovne inc fwait mov out jmp adc ffree int aam je inc clc loope mov das aaa mov aaa cmp adc stc leave push clc add (bad) sarb cmp mov ffree ret aaa aaa out fidivr mov out inc into in mov (bad) js mov call add (bad) js (bad) les (bad) jecxz js pop pusha sub ffree pop mov inc clc xlat mov cwtl movsl insb inc mov js int mov inc (bad) sti ret cmp int fdivr dec shl xchg mov cmp and inc jp mov in push add int fdiv dec shl inc inc mov add inc adc daa pop rol pop mov aad stc mov (bad) and ret inc imul out js int push ljmp sbb mov lods sti cld mov inc clc in inc fdivr inc fcmovb cmpsb mov inc clc mov aaa (bad) (bad) lahf mov out in adc out inc mov dec mov fisub cmp fdivr inc test dec add sti add shll inc jnp movsl inc ljmp mov test dec (bad) fcmovnbe mov fisub xor push (bad) sbb out inc clc jmp mov movsl xchg mov fisub cmp fsubs aaa aam lret inc fnstsw das in cmp xchg add push jo mov in scas xchg (bad) (bad) xlat xor sbb test dec adc icebp sbb cmp fdiv dec shl inc inc mov add inc and aaa add lods inc fild out (bad) js mov fsubs (bad) (bad) xlat xor adc inc test aaa push in fsubs leave inc fdivr inc test dec jne inc clc fadd mov aas xchg mov or inc clc fnstcw shl testl clc into leave inc fmuls aas mov jns es leave inc fsubs aaa iret fcmovnbe mov xor sti inc and add (bad) sti (bad) mov (bad) js roll lods inc fdivs and fisub int push fwait mov pop add inc jae aad jge add in adc mov fdivr inc scas movsl cltd inc iret xor out int call rolb mov in sbb in mov outsl sbb fisub int push cli inc aad add es leave inc (bad) and iret fcmovne inc xchg je cmp fdivrs jne mov into cmp adc add shll xor mov xchg mov out in adc out add cmp out fidivr mov out movq lods inc fdivs and fisub int push cli inc aad add es leave inc (bad) and iret fcmovne inc xchg or ret js int fdivr inc scas movsl cltd inc aad adc (bad) js mov enter fcmovnbe mov aaa add mov call cmpsl mov (bad) js lds movsl mov test out cmp in mov movsl insb inc add int3 out in stc mov fdivr inc scas movsl cltd inc aad adc (bad) js mov enter movsl insb inc mov js leave mov push inc push pusha inc inc call je mov daa in cmp in lds (bad) lahf mov out repnz lds movsl mov adc js roll mov in ds aad push fsubs xor inc js add lds sub jo mov out cmc add xor enter fcomi mov fisub lds lret mov add inc jl xor inc jnp and adc sar clc inc enter inc clc ffree dec call cmc mov sti add mov iret in inc mov call inc ffree push inc inc aaa daa out sti add lds push inc test dec adc hlt add mov sahf mov js add lds sub jo mov out cmc add mov sar inc inc jno push adc in lds lret inc iret xor fcmovb inc call jne mov sbb int fdiv dec sar inc inc jno push adc in lds lret inc ljmp shrl lret inc pushl adc shl cmc mov cmp out inc jnp movsl inc jmp jnp cmp sbb mov add pxor clc add in mov or call xchg inc fnstsw add inc clc loopne mov ss cwtl movsl insb inc mov js leave mov insb inc mov js mov cmpsb pop add aaa add inc clc in dec fdivr inc test fwait mov sti add mov call mov int add inc clc fdivrs jne dec mov inc clc in dec fdivr inc test fwait mov ds stc inc jns roll lds mov add mov jo mov out xor clc add in mov add sbb mov pop inc into in inc lea out cmp in inc call add sti add rcrl inc jp inc inc mov pusha add mov (bad) iret xor fcmovb inc call je insl cmp fisub leave pop out aaa ja scas mov fisub mov (bad) (bad) (bad) aaa or fistpll mov aad xchg inc decl out cmc add inc jns add insl sbb adc add mov iret in mov into add mov mov cmp adc js mov cwtl add iret fcmovnb inc cld aaa arpl adc mov fcomps add cmp xor (bad) or lds inc dec sbb cmc add mov sar inc inc outsb inc jae (bad) js mov cwtl fildl mov cli out frstor cmp fsubs aaa aam lret inc iret xor jecxz inc (bad) incl movsl xchg mov int hlt int push ret xor fcmovnb mov stc inc (bad) sti (bad) mov sti add mov shl xchg mov inc clc in dec fdivr inc test fwait mov sti add leave movsb mov inc test xor adc mov movsl lods inc lea out repnz mov insl add ja sbb in mov xchg mov pop adc sbb cmp xchg fild lds mov add shll cmc mov fisub cmp loop lods in mov pop add inc add xchg inc inc mov adc js mov clc or add and cmp out xchg xchg inc jp mov in ds fcmovnb mov stc inc (bad) sti (bad) mov hlt add sarl pop inc inc inc push out cmc add mov sar inc inc je pop in add cli mov (bad) or (bad) cwtl mov in sbb in mov aad xchg inc inc mov adc js mov out xor lds inc inc push out (bad) sbb int fdiv dec sar inc inc je pop in add cli mov (bad) or (bad) cwtl mov in sbb in mov aad xchg inc inc mov adc js mov mov add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out sti add int divb aaa (bad) (bad) xchg mov adc pusha or leave sti cli inc (bad) adc test aaa aam lret inc call add mov iret fcmovnbe mov frstor int fcomps add inc sub fisub mov fadd pop mov out std mov iret in mov fsubl mov leave sti cli inc (bad) adc test aaa aam lret inc int3 aaa add pop pusha sub (bad) lds mov add mov aad pop inc inc inc js inc clc cmc mov fsubs xor mov in add cli mov (bad) or (bad) cwtl mov in sbb in mov lods in mov xor loopne mov push inc iret in mov cmp (bad) incl fucomi inc std inc js pop pusha sub stos mov adc cmc mov fsubs setnp or (bad) js mov push mov in adc mov fdivr inc mov cmp out sbb cld int xchg add (bad) loopne add call fdivr inc test inc adc add mov aam lret inc cmpl cli mov (bad) or (bad) cwtl mov in sbb in mov aad xchg inc inc mov adc js mov call dec mov xor loopne mov push inc iret in mov cmp (bad) incl fucomi inc std inc js pop pusha sub jae dec mov xor loopne mov push inc iret in mov pop pusha sub jae mov xchg mov in add add mov mov sti adc js leave mov cli inc aad cmp cmp fdivrs jge inc inc mov add mov (bad) lds add in mov (bad) lds outsb aaa pxor sbb lds sbb adc stc inc cs sti inc cmpsl movsl xchg mov sbb add rcr (bad) mov inc clc loope mov in inc jecxz or inc clc cmc mov call dec mov (bad) pusha sub (bad) fcmovnbe mov fisub xor sbb adc add inc and cs (bad) lds add adc (bad) and (bad) (bad) mov or int call nop inc jmp jp in sbb daa fdivr inc scas movsl cltd inc (bad) adc add cmp clc inc jge add cmp clc sub scas in mov out js mov call xchg inc mov adc jge add adc pop cmp fdivr inc test aaa pxor add leave inc fdivr inc int3 sti call out add cli mov xchg inc jp push mov ds jmp mov sbb xchg aaa sbb (bad) js rcll insb inc add adc iret fcmovnb inc in cmp pop add leave inc fdivr inc int3 sti call out add cli mov xchg inc jp push mov (bad) sbb int fdiv dec sar inc inc cmp in add cmpps mov push add lds sti sti mov xor push jmp movsl mov sbb arpl inc jge push inc repz jnp pop sbb mov scas in inc cwtl mov in add cli mov call cltd inc fnstsw and in add shl inc inc inc aaa sub repz mov fsubs aaa iret fcmovnb inc in cmp out in add shl inc inc inc aaa sub repz mov clc xor iret fcmovnb inc in cmp out in add shl inc inc inc aaa sub repz mov cmpsb push aaa iret fucomi inc mov add inc arpl add sbb (bad) js rcll insb inc add adc iret fcmovnb inc in cmp mov shl testl add mov jp mov in ds jecxz inc fdiv dec (bad) sti repnz mov pop adc lret clc sub lods sti inc inc cmp in add cmpps mov push add lds sti testl clc fdivrs jb mov out cmp lret cmpsb push aaa iret fucomi inc mov add inc arpl cmp dec sub mov enter movsl mov out adc call dec (bad) sti repnz mov pop adc lret imulb add mov sbb arpl add fcmovne inc fisttpll adc pusha sub (bad) ret mov adc push cmp clc xor jne scas mov in add add inc jg cmp pop mov fdivr inc scas movsl cltd inc cld aaa add aad add cmpsb enter in mov ds leave push out dec into in inc (bad) xor and into in inc lret out (bad) js int clc sub scas in inc lea or cmp cli inc jno xlat inc test fwait mov adc mov push lock (bad) lret cmpsb push aaa iret fucomi inc mov add inc arpl cmp (bad) (bad) cmp adc mov push push mov hlt add mov fdiv dec (bad) sti repnz mov pop adc lret clc sub lods sti lock (bad) lret cmpsb push aaa iret fucomi inc mov add inc arpl cmp xor push int push pop inc mov add mov jp mov out cmp fdivrs lods sti lock fild adc sti inc data16 fwait mov fsubs mov aad jmp stc inc js aaa add mov divb aaa iret fcmovnbe mov adc lds lds inc jnp add mov test dec (bad) fcmovnbe mov fisub xor sbb cmpl out sbb and rcr loopne mov in sbb ror push call cltd inc pushl ffreep cmpsb push lret inc sub xlat pusha sbb es incb test inc enter (bad) js int call lret dec sbb int retw sti repnz mov add mov jne mov in ds jmp mov sbb adc fsubs (bad) (bad) (bad) aaa aas out frstor mov scas movsl cltd inc aad adc (bad) js mov enter add or add (bad) mov aam lret inc leave dec sub mov enter add or add (bad) mov aam lret inc pushl ffreep cmpsb push lret inc push out hlt add int lds add jg loop sbb js add in jmp xchg rolw jecxz xchg mov out in adc out add cmp adc add shll xor mov xchg mov out in adc out or mov sbb ror pop out aaa jb test out (bad) js int fcomps add inc pop adc and (bad) sti repnz mov adc push pop mov fdivrs mov fsubs aaa (bad) in inc out pop adc add rcrl inc test xchg inc fidivr es js roll stc inc out push adc pusha stc mov xchg add aad pop mov push add mov shl inc dec dec fs inc clc stc inc cs sti inc cmpsl movsl xchg mov sbb add (bad) ret cmp xor call aaa (bad) int3 mov add cli mov call cmpl push fdiv dec sar inc inc jae or fisub lds lds out sti add mov fsubs mov pop sbb mov xchg aaa jne mov in ds out int fdiv dec leave sti repnz jecxz add cmp add lods sti cld mov add cli mov call cmpl sti lds add jg loop sbb push cmpsb out ret inc fild out frstor mov call xchg aaa push in fsubs inc and pop inc rcr ret cmp adc add mov mov inc test inc js aaa add mov fsubs aaa iret fcmovnb inc in cmp out xor sti inc data16 mov je cmp fdivrs jne scas mov pop add mov rcr ret mov out cmc add mov sar inc inc insb dec inc in sbb in mov lods in mov pop add inc or sbb out out js lds add inc jns pop add inc or in mov hlt add lds push inc add in frstor lds movsl cmpl mov sti inc inc jb push out (bad) js mov fsubs xor dec mov jmp adc (bad) fcmovnbe mov fisub xor mov add sbb ror push call cmpsb mov inc clc add cmp stc inc ffree xchg inc lea adc sbb mov mov cmp cmp fdivrs lods sti lock cwtl mov adc call lds fisub shll aaa iret fcmovne inc rorl out sti add mov shl inc inc dec inc jnp and adc sar loopne repz jnp pop sbb mov scas in mov enter lcall mov cmc add mov sar inc inc pusha cmp inc clc fdivrs jge add out (bad) js mov call lods inc lea adc add mov sar lock fild adc pop mov fdivr inc test aaa cmp (bad) pusha sub iret fcmovnb inc (bad) xor add cmp and lret inc jecxz cmp sbb cmc shrl cmpps mov pop add lds xchg inc out js cmp out aaa ja pop inc out pop adc and (bad) sti repz (bad) aaa pxor add scas in mov sbb ffreep pop fdivr inc test xor call inc ffree push inc inc aaa xor fsubs inc sub and aam lret inc leave dec sub mov enter fcmovnbe mov in sbb and in mov cmp push pop mov fdivrs mov clc xor iret fcmovnb inc in cmp adc pusha sbb sub and lahf movsl lods inc lea adc add leave push clc add (bad) sarb cmp xor data16 cmc mov (bad) sbb int fdiv dec sar inc inc bound add dec fsubs bswap fcomi mov (bad) js mov push pop mov inc clc stc inc and ss (bad) fucomi inc stc xor add ret mov into add inc les movsl jb mov add mov jp mov in ds out int (bad) (bad) dec (bad) ret dec adc xlat mov insl add rclb add mov jp mov in cmp fdivr inc ffree pop mov inc clc in lds jmp ljmp mov call in rolb adc xlat mov aad roll es pusha or leave sti cli inc (bad) adc test aaa aam lret inc std cmp adc add leave lcall inc xchg pop adc retw inc jp mov faddl adc add mov shl lds fdivrs mov test dec (bad) fcmovnbe mov fisub xor sbb adc pusha pop mov call cmpsb mov inc clc add cmp stc inc ffree xchg inc lea adc add mov cwtl add (bad) lds inc inc js cmp push stc inc (bad) xor in inc fsubrs add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out hlt add int lds add jg loop sbb push xchg inc ffree aad (bad) adc ss cmp in mov pop pusha sub (bad) (bad) cwtl mov adc clc (bad) mov mov xor jmp inc mov mov in add add mov mov sti adc js mov test pinsrw mov push sbb lds stc inc xchg cmp add cli mov (bad) or (bad) cwtl mov in sbb in mov mov inc in call fsubs aaa iret fcmovne inc cli dec pop adc pop cmp sbb out xor sti inc sub and fadd lret mov add add mov mov sti adc js mov xchg aaa (bad) (bad) cwtl mov adc clc (bad) mov test lcall js mov cmpsb out ret inc aad add call (bad) and ret inc mov add leave inc (bad) lock (bad) ret inc push out sti add xor call lods inc aad add inc clc sti inc sub hlt dec int3 in mov out js int data16 aad xchg inc mov jne (bad) js int call dec mov inc clc add cmp stc inc ffree xchg inc lea adc sbb mov mov cmp cmp fdivrs lods sti cld mov frstor cmp (bad) and inc fimul in fsubs inc sub repnz loopne xchg inc lea out fidivr mov push mov in adc mov fcomps add xor in mov jge movsb inc mov add mov aad pop inc inc inc cs fidivr mov push mov in adc mov fcomps add rcll clc in inc fdivr inc fcmovb cmpsb mov inc clc add cmp clc inc jge add cmp cwtl fild sbb adc or push xchg aaa iret fcmovnbe mov cmp push cmp add mov cmp adc fdiv dec (bad) (bad) mov cmp mov dec leave sti repnz fadds out in add sti mov in mov fidivr lds lds inc inc jg cmp mov dec shl std mov sbb cli mov call push mov xor clc add in mov or fsubs inc lea out cmp in inc call push mov lret mov jne mov adc pusha sbb popa push test out gs sbb ror push call cltd mov cmp fdivrs shl xchg mov add mov mov inc jge add cmp out add inc jns pop add inc or sbb jecxz or inc clc cmc mov call mov out hlt add (bad) ret mov add out std mov (bad) fcmovnbe inc xlat inc sub movl cs (bad) in inc lea out sti add mov sar call adc add mov test xor std mov (bad) in inc lea out sti add int call nop inc jmp jp in sbb cmp cmp push mov out hlt add int push mov adc pusha sub shl xchg mov pop pusha sub iret fcmovnb inc (bad) cmp adc js int call lret dec sbb int push mov adc pusha sub test inc jnp push add leave inc (bad) and insb add js cmp push push inc inc aaa xor fistpll rcrl iret fcmovnbe inc xchg mov out in adc out add dec addr16 sbb ror cwtl push ret cmp adc add mov mov inc test inc gs sbb in mov test mov out frstor cmp fsubs aaa aam lret inc lock insl adc out aaa (bad) (bad) lahf mov adc add mov rol lret inc std cmp add int fdivr inc (bad) sti repnz jecxz add inc clc push cmp pop or mov repnz lds movsl xchg mov push add mov test inc sub cmc add mov sar inc inc insb dec inc adc xor daa fdivr inc mov mov out cmp fdivrs shl xchg mov add mov fsubs aaa iret fcmovnb inc in cmp in fsubs mov jp mov (bad) adc js mov mov inc into in mov cmp cs (bad) or sbb test out cmp in stos mov inc cmpsb mov add aaa add mov cmpsb or (bad) lds mov add mov push xor add out aaa (bad) lds add push xor testb add add adc mov mov inc jge jb test es pusha add inc ffree push inc inc aaa aaa out fidivr mov push mov in adc mov fcomps add jnp cmp fsubs aaa leave sti cld mov (bad) js mov call mov xchg mov in add add mov mov sti adc js mov test dec (bad) fcmovnbe mov fisub xor mov add sbb ror push call cmpsb mov cmp fdivr inc test cmp mov stos movsl mov adc js leave mov cmp adc add leave push clc or ffree roll es pusha or leave sti cli inc (bad) adc test aaa aam lret inc pushl add cmp stc inc ffree xchg inc lea adc sbb mov test xchg mov (bad) js mov fsubs mov add add mov mov sti adc js mov cwtl or into lds add std mov lret inc fnstsw add cmp clc sub scas in mov push add mov loopne pop inc inc inc js cmp push mov adc clc fdivrs jne scas mov add lds xchg inc (bad) aaa or mov loopne pop inc inc inc js cmp push mov in fsubs inc gs pop mov add stc mov xchg add (bad) jecxz or inc clc cmc mov call mov faddl adc add mov ret inc mov add leave inc (bad) lock (bad) ret inc push out cmc add inc and and jne cmpsb mov pop add shll xor dec mov hlt add int fdiv dec shl sti mov add add mov mov sti adc pusha lock sti (bad) mov cmc add mov sar inc inc imul xor fdivr inc jnp mov fildl out cmp fdivrs aad pop inc inc inc push out hlt add (bad) mov or lahf movsl mov test out cmp in scas xchg add (bad) out adc cmp out inc jp movsl inc jmp gs sbb ror push call cltd inc cli cmp pusha sbb sub and (bad) sti testl clc iret leave push clc add in mov add sbb mov push inc test aaa pxor clc add in mov add repz inc test aaa or (bad) pusha sbb bound inc faddp lds frstor lds (bad) out xor ffreep push xor pop inc (bad) aaa add xor call dec into in inc aad adc (bad) js mov enter movsl mov adc in scas mov dec leave sti repnz fadds out in add sti mov in mov cmp fdivrs jne pop mov add cli mov mov dec leave sti repnz fadds out in add sti mov in mov cmp fdivrs jne dec mov push add mov iret fcmovnbe mov frstor int fsubrs mov push add mov lret inc jecxz add inc clc push cmp add int pop mov inc clc in dec fdivr dec shl xchg mov add mov fsubs aaa iret fcmovnb inc in cmp in push add mov aam lret inc aad adc (bad) js mov enter in inc dec dec sbb frstor rorl xor lds inc inc push out cmc add inc and and jne cmpsb mov call out inc rcr ret mov out sti add mov shl cmc mov inc clc into leave push call jmp in add add mov mov sti adc js mov test dec (bad) fcmovnbe mov fisub xor sti cli inc jecxz gs dec clc into leave pop out aaa mov jmp adc into leave pop out dec into in inc out xor call add push out daa add mov lods sti cld mov inc clc cmc mov fdivr inc test xchg inc test out (bad) js leave push call ret inc (bad) aaa pop adc fdivrs jne jo cmpl out cmp call inc ffree push inc inc aaa daa out (bad) sbb int fdiv dec sar inc inc imul xor fcomps add inc jns pop add inc add loopne test out (bad) sbb int fdiv dec sar inc inc arpl pop out frstor lds movsl xchg inc out jp sbb add iret fcmovnb inc in cmp mov into in inc (bad) cmp adc mov push add (bad) js int fcomps add inc jns pop add inc add mov out out js int data16 aad xchg inc movsl xor in pop out aaa fadd movl clc (bad) mov jge jb cmpl adc add mov mov inc jge add frstor leave pop out aaa iret fcmovne inc xchg pop cmp rolb insb inc inc cmp int fdiv dec sar inc inc je pop in adc mov call test out jnp push add mov ffree pop inc inc inc jg cmp call add sti add mov shl inc inc bound call aaa fadd pop inc mov add mov jp mov in cmp mov in inc bound call aaa fadd pop inc mov add mov jp mov in cmp out inc ffree lds pop add int call nop mov xor sti inc and cld dec leave sti cli inc aad add adc repz call xchg inc push out cmp in inc call push mov cmp fdivrs jne scas mov cmp (bad) or sbb decl out hlt add lds mov adc pusha ffree outsb fdivr dec loope push inc pop mov in sbb add iret fcmovne inc faddl adc in lds lds inc clc fnstcw scas in mov fisub cmp lock aaa cmp into add shrl inc scas movsl cltd inc enter fisub xor call xchg mov xor mov xor inc inc mov or frstor mov (bad) es jne scas mov in add add inc jns pop add inc add call out sti add xor call lods inc aad add inc clc sti inc sub hlt dec int3 in mov out js int data16 aad xchg inc mov jne (bad) js int call dec mov call fdivr inc cmpsb mov cmp cmp fdivrs scas in mov out js mov (bad) cli inc jge mov int3 inc sub int clc mov (bad) or add out cmc add mov sar inc inc jb push adc add leave push out xor inc adc xchg or mov lret mov into in inc stc dec inc adc fdivr inc test dec addr16 sbb ror push call cltd inc cmc dec pop adc (bad) mov jp inc inc xchg cmp adc js int retw sti repz (bad) aaa push in sarl mov movsl insb inc add in lahf data16 ljmp js int fsubs add mov out hlt add int lds add jg loop sbb pop test aaa (bad) (bad) pushf mov adc push cmpsb mov ds leave push out dec shl inc inc dec dec jp cmp out inc ret inc test add mov imul cli mov call mov in es leave inc fsubs aaa (bad) enter je inc clc ffree dec call cmc mov sti add xor xchg aas int3 (bad) aam ja adc mov push scas mov add lds sub jo mov adc push stc inc out js aaa add mov cwtl or imul cli mov call cli inc jecxz jnp cmp (bad) incb add es sti add (bad) mov mov xor clc add in mov or fdiv dec (bad) sti repz (bad) aaa or (bad) pusha sbb sub sti inc jge movsb inc jecxz add cmp add jne mov in cmp test add dec mov sti add mov shl testl add mov scas in inc addl shll mov cmp push dec inc outsb aaa add xor sti inc and add (bad) sti (bad) mov fsubl rcrl inc jp push mov fidivr lds fcomi inc test clc sti inc and std dec ffreep lret inc cld aaa add aad add mov mov in cmp fdiv dec ffreep lret inc out xor sbb cmp sub inc fadds out in add inc into in mov cmp push dec inc outsb aaa add xor into leave push out inc int cmc mov fsubs inc sub and aam lret inc leave dec sub mov enter lds dec dec push adc js mov mov inc test inc gs sbb in mov (bad) (bad) aam ja adc mov push mov out xor sti inc and cld dec stos movsl xchg mov sbb add test xor and fcmovnu testl clc in pop (bad) or lds inc dec sbb hlt add mov divb xor lds mov add inc ds or (bad) jmp add cmp and xchg movsl lods inc cmpl out cmp lds insl sbb out xor (bad) or lds inc dec sbb sti add int divb aaa (bad) (bad) xchg mov adc pusha sti mov jno lods inc xchg mov adc sbb mov call cltd inc in aaa pusha adc ljmp sbb adc add int push mov adc pusha sub iret fcmovnbe mov cmp pop cmp fdivr inc mov inc jg cmp adc lret inc out pop adc add mov leave sti cli inc (bad) adc test aaa aam lret inc cmpl loopne mov add pop adc add mov (bad) incl movsl insb inc pop mov adc clc lret cmpsb loope test cmp adc js (bad) (bad) dec jecxz lret mov add add mov mov sti adc js mov cmpsb or (bad) (bad) out inc js cmp out xor mov adc js mov (bad) sti (bad) mov fidivr int clc xor (bad) lds inc inc adc sbb lds sbb in cmp clc or sbb out sbb cmc shll cld mov add cli mov call cmpl dec clc xor aam lret inc out xor sbb sub cld inc ret inc aad add cmp stc leave xchg push incb aaa je cmp fdivrs jb scas mov add mov loopne int3 mov add cli mov call cmpl or in mov hlt add int fdivr dec stos movsl nop mov cmp in lds (bad) lahf mov adc add shll dec sbbl add cmp (bad) or sbb mov add xor lret fsubs xor inc mov inc clc in lds pop mov enter sub sbb inc inc aaa cmp adc and loopne lds adc mov fcomps add fs adc mov (bad) cld inc jp push mov fistpll lds inc test inc jae frstor cmp (bad) cld inc into in mov cmc add mov leave sti inc inc bound (bad) mov (bad) in inc add add mov xchg aaa (bad) (bad) cwtl mov adc clc (bad) mov lahf movsl lods inc lea out fidivr mov push mov in adc mov fcomps add inc push out adc adc inc fsubs aaa jne dec mov aas clc add cmp das aaa (bad) in mov sti add int call rolb xor std mov ffree push inc inc aaa xor pop add mov lret inc addl leave push call in lea pop in add cli mov (bad) or (bad) cwtl mov in sbb in mov cwtl mov add sbb ror push call ret mov out js mov fdivr dec shl xchg mov in ffreep callw leave sti in stos cmp add cli mov (bad) or (bad) cwtl mov in sbb in mov insl add ja sbb in mov xchg mov int3 adc call cli mov adc adc jp dec mov cmp stc leave pop out aaa mov jmp out (bad) js lds fcmovnb inc mov push adc call cld mov cmp mov dec leave sti repnz fadds out in add sti mov in mov fidivr int clc xor (bad) lds inc inc adc sbb leave cmpsl xchg inc ffree xchg inc lea adc add mov jp dec mov cmp and leave sti cli inc (bad) adc test aaa aam lret inc sti inc inc in call (bad) sub inc mov add leave inc (bad) lock (bad) ret inc push out sti add mov jp mov out sbb cmc shll cli inc jecxz adc into add mov lret inc fnstcw cmp fidivr mov push mov in adc mov fcomps add dec jbe inc clc fdivrs lahf movsl lods inc inc mov out xor sti inc and std dec (bad) fcmovne inc (bad) lret push ret mov adc (bad) lock (bad) ret inc push out sti add mov jp mov out sbb cmc shll cli inc aad cmp negl (bad) mov shl sti mov add add mov mov sti adc js mov mov inc jnp test adc pusha add mov (bad) fnstcw add out js mov fdivr inc test cmp add cli mov (bad) or (bad) cwtl mov in sbb in mov ret mov fisub xor (bad) cli inc (bad) sti in cmpsb aaa or (bad) js int fdivr inc test cmp push call jmp in add add mov mov sti adc js mov mov inc jnp test adc pusha add mov fnop inc jecxz or shrl add fcmovnb inc mov add leave inc (bad) lock (bad) ret inc push out hlt add int push roll push adc sbb mov cmovns fcmovnbe inc xchg mov adc js roll movsl inc mov sbb mov jno lods inc xchg mov adc sbb mov fdivr inc movsl movsl jl inc inc jp sbb in mov jno dec mov into add inc fs inc jl mov into cmp adc add shll xor mov xchg mov out in adc out cmp lds adc js int call lret dec sbb leave mov add mov inc clc fnstcw jo mov out hlt add mov test xchg inc fnstsw add inc clc loope mov ret cmp int fdivr dec shl xchg mov cmp das mov cwtl movsl insb inc mov pusha or test dec jne inc clc fnstcw jo mov out negl add stos in inc sti inc jbe lret sbb mov imulb add aaa pop adc sbb mov fcomps add aaa pop in sbb add test aaa or std pusha sub lods in mov lcall add lods in mov adc add test aaa or in add mov fcomps add aaa pop adc pusha sub mov aaa jnp lcall add lods in inc jbe jnp lcall add lods in inc jbe pop in sbb add lods in inc test add mov fcoms add mov adc pusha sub lods in mov out sbb mov aaa pop adc js mov clc sub lods sti inc inc jbe pxor add mov fcomps add aaa pop in ljmp add aaa push out out adc lods in mov out sbb mov aaa pop adc js mov mov add aaa je fdivrs mov fcomps add aaa je fdivrs mov xchg aas int jmp mov js mov out add aaa pop adc pusha sub lods in inc outsb aaa pop adc pusha sub lods sti std mov fdivrs mov fcomps add aaa pop adc add mov out add aaa pop adc add mov mov add aaa or std pusha sub mov aaa pop in sbb add lods in inc jbe pop adc add mov xchg or fcmovnb inc xchg push out out adc lods in mov les add mov aaa pop in sbb add lods in inc jbe pop out sbb add stos in inc cld cmp sbb inc je cmc add aaa pop in sbb add lods in inc jbe pop adc add mov clc sub stos in inc in cmp adc sbb mov fcomps add aaa pop in sbb add lods in inc jbe pop out sbb add stos in inc testl mov call cli mov push pusha sub lods in inc (bad) aaa add xlat js mov test add aaa or out sbb mov aaa je fdivrs mov fcoms add aaa or fistpll mov fcomps add aaa or fistpll mov call ljmp add mov mov add aaa or mov mov add aaa push out xor clc sub scas in mov sarb mov (bad) pop add aaa pop adc pusha sub lods in inc xchg aaa pusha adc sbb mov xchg or fcmovnb inc xchg push out out adc lods in mov les add mov aaa pop in sbb add lods in inc jbe pop out sbb add stos in inc repnz movups add mov call sti inc xchg pop adc js mov clc sub stos in inc rorb out cmc pusha sub mov aaa push out out adc lods in inc (bad) aaa jnp lcall add lods in inc jbe jnp lcall add lods in mov out adc lods in inc xchg pop adc pusha sub mov aaa je enter sahf xchg cmp dec inc mov js mov out add aaa pop adc pusha sub mov aaa add xlat js mov out add aaa pop adc sbb mov call repnz fistpll mov push nop inc test pusha sub scas sti sti mov add sbb lods in mov pop pusha sub mov aaa pop adc add mov fcomps lods in mov pop pusha sub stos in inc pushl pop adc in lds movsl loop rorb out jmp or repnz mov mov out xor mov aam enter push in push clc ret mov (bad) sbb fwait mov popf in rcrb in mov sti inc inc push cmp xor rcll cmpl sbb mov mov pop lods in inc cld cmp js mov xchg (bad) sarl nop cmpsb cli movsbl les (bad) js mov nop movsl xchg mov negl push mov stos in inc in cmp in cli sbb mov xchg xadd int in sbb rcrl clc inc pushl jg sbb (bad) mov xchg je (bad) sbb mov lods in inc (bad) aaa jae lock shrl xchg inc cmpb out add (bad) mov xchg ja negl add mov lcall js shll inc repz add lock mov xchg or inc jnp pop sbb aaa mov les cmc sbb mov xchg sti add inc js lock mov xchg movsl test icebp sbb mov cmpsb pop or (bad) xchg out lock rcll out movsl aaa jg add bsr in inc in cmp stc sbb leave test mov lcall push mov xchg fs sbb sbb scas in mov sbb sbb stos in inc jmp and (bad) js mov lods sti push mov in adc movsb cmpsb std xor (bad) jmp js shll inc pushl jge icebp sbb mov (bad) or test std inc fiaddl out out js mov xchg seto sbb lock sarl out mov jl repnz sahf xchg or xor and pop stos in mov jmp cwtl cld add dec adc js (bad) mov and mov xor sbb mov cmp leave js mov mov mov negl cli rcrl int (bad) xor or mov sbb test jg negl dec mov int (bad) xor or mov sbb test jp out sub mov and sbb das mov stos in mov add cmp pop cmpsb icebp cmp lds out negl cli rcll inc into inc adc (bad) sbb mov (bad) mov out out sbb das mov leave lds jbe jl icebp sbb mov mov jae into js mov mov cmp int fnstcw stos in inc std cmp add int xchg mov adc js rcrl int xchg mov out sbb cmp sbb add stos in inc std cmp repz xor xchg ljmp mov adc js rcrl int xchg mov out add cmp add cli add dec adc js (bad) mov and mov xor push mov mov ja leave js mov (bad) fcmovne inc into inc sub out push mov mov and sbb das mov xchg jp lock (bad) mov or test jnp pop sbb add cmp int3 js cmp (bad) or popf test mov add cmp pop cmpsb (bad) cmp fcmovnb mov sarl nop cmpsb lock enter icebp cmp out sarb mov sbb xchg jg lcall push mov mov call out (bad) js mov popf test out xlat js leave test sahf mov lcall add int3 (bad) in cmp out (bad) js mov int3 (bad) test jge sbb xchg xor cmp adc js mov mov cmp adc js leave test jae push jg lcall add into (bad) in cmp out (bad) js mov into (bad) icebp cmp out adc (bad) or mov js lcall cli rcrl imul sbb mov cmpsb adc int3 (bad) loope sbb lock lds in mov sbb mov pop xchg add in adc movsb cmpsb pop or (bad) (bad) aaa jae lock lds in inc pushl jg push add lds in mov push add lds clc inc in cmp adc js mov xchg sti add dec je in adc movsb cmpsb icebp cmp cmp adc xchg aaa mov loopne xchg aaa jae adc (bad) or mov ja negl add mov call out lock (bad) mov sbb xchg (bad) sarl nop cmpsb cli movsbl lock xchg aaa jae adc (bad) or scas in inc cmpb out lcall push mov stos in mov lcall add test jge (bad) js mov stos in mov adc xchg stc add cmp out (bad) js mov lods in inc cld cmp lcall leave mov mov les (bad) sbb mov mov xor pop mov mov inc addr16 sbb aaa xor test or cmp sbb aaa xor xchg add cmp icebp sbb leave mov lock xorl out negl push mov lea adc (bad) js mov nop movsl mov (bad) js mov fadd les (bad) js mov ffree les (bad) js mov ret mov (bad) js mov ffreep idivb negl push mov stos in inc pushl jae negl idivb lea fs add bsr in inc mov pusha clc mov fdivr inc xlat fcmovnbe inc into cmp mov fcomps mov sti mov or sub mov push mov negl add mov cmp negl add stos in inc sti aaa ja (bad) js mov xchg add cmp add (bad) mov xchg movsl mov scas cmp lds shll inc incl adc sbb aaa mov les lds shll mov out add sbb rcr inc in sbb shrl lcall add mov sahf test mov icebp sbb mov cwtl cli add dec jne lock mov mov or aaa jo out sub nop cmpsb pop or cmp out (bad) js mov scas in mov and add jp aam mov add out js mov mov in mov negl add mov dec je sarl push out add fcmovnbe inc lret adc add leave inc fsubs lret inc jecxz add inc clc push cmp repz cmp sbb mov ffree cmpsb mov inc clc fdivrs stos in inc lock js (bad) js mov xchg add leave fcomi inc cmc aaa xor in add inc ds or fcmovnbe mov lock leave mov push mov in sbb sbb roll pop adc js (bad) les (bad) jecxz js pop pusha sub lods in mov add add sahf test mov stc sbb leave sbbl inc incb out negl push mov (bad) mov idivl rcll imul js cmp loopne mov lock test jnp lcall leave mov scas in mov sbb sbb (bad) movsl lcall sbb rcll aam icebp cmp add add mov clc inc in cmp add add mov lock test jg add and mov pop inc imul cmp call inc mov inc adc js xor xchg icebp add cmp lock mov mov aaa xchg movsl sahf inc cli xor sub lcall inc sahf cmp add push mov sahf test mov call xchg add dec fs sbb sub sbb enter add xor clc add in mov or call xchg inc fnstsw add inc clc loopne mov ss cwtl movsl insb inc mov js leave mov ss cwtl movsl insb inc mov js lds xchg mov sbb in mov jne dec mov inc clc in dec fdivr inc test fwait mov ds stc inc add xchg mov pop add inc cmp fistl push cmp adc pusha sbb cmp add in mov cmp fdivrs lods fwait ljmp js cmp fcmovne inc enter inc clc ret fsubs xor pop inc (bad) xor in add inc ds or fcmovnbe mov negl idivb (bad) mov jae add and scas sti out inc pushl push int push pop inc mov clc fdivrs xchg mov js add lds sub jo mov in or (bad) or add cmp cmp sti inc and add test xor call add int3 adc out inc ffree lds pop add mov (bad) or add cmp cmp sti inc and sbb test sub fisub mov (bad) push inc push cmp adc pusha sbb cmp add in mov cmp fdivrs lods fwait idivb out js int out inc jp test in ds cli inc or mov cli out frstor cmp fsubs aaa (bad) push inc push cmp out negl add xchg je (bad) sbb mov stos in inc test out sarb mov ljmp pusha sub mov aaa jae negl add xchg ja leave js mov mov inc cmpl out lock mov lret inc cmpsb cmp jmp cwtl std xadd iret inc mov sub mov push mov mov inc imul cmp cmpsb repnz (bad) fcmovnb mov add fld cmpsl mov or cmp cli sbb mov mov or cmp add and mov xor add mov or mov mov out sbb das mov stos in mov sbb pop mov mov lock test js sbb das mov mov cmp sbb pop mov mov jns sbb pop mov enter pushf inc jnp icebp sbb mov (bad) fcmovne inc pop jmp adc test or xor and mov sbb xchg js lcall cli roll jecxz lea out sti sbb roll inc (bad) xor cmp (bad) xadd int (bad) xor cmp (bad) xadd iret inc mov sub mov or mov sti push mov push add int xchg or cmp bnd mov cmpsb add mov cmp add add cmpsl mov aaa xchg movsl sahf inc in cmp adcb mov lds lds (bad) in add (bad) sbb mov xchg std add cmp adc pusha or test or add add cmpsl mov or cmp repnz sahf xchg or fs jecxz push mov xchg movsl sahf inc sti aaa jno pop add nop cmpsb (bad) cmp (bad) jmp sbb rorl pop stos in inc cld cmp add cmp cwtl cli add cmp sbb add cmp (bad) cmpb out sbb repnz mov pop adc js mov cmpsb repnz (bad) fcmovne inc xchg mov out sbb pop mov leave lds out sbb add add cmp int or repnz nop movsl test icebp sbb roll inc xorl adc pusha sub nop cmpsb repnz mov inc mov out out js (bad) mov pop aaa mov lock cmpl push mov mov fnstsw sbb sub mov aaa add mov lea jp cli sbb (bad) mov or mov cmp in and or les repz mov mov aaa jg add and xchg cwtl incl test jl sarb mov lds inc jnp pop sbb mov mov sarl mov xchg icebp mov aaa add mov cmpsb fcmovnbe mov lods js mov cwtl cli add cmp lock mov mov or cmp lcall push mov mov or mov xchg or cmp adc cwtl cli add dec jns ret mov xchg or cmp adc add mov mov or xor stc mov rcr mov negl add in sti mov lcall push mov mov cmp lcall push mov mov cmp cli sbb mov mov add cmp in (bad) js mov in pop inc inc gs sbb mov mov xor cli (bad) mov or mov cmp jmp mov xor cmp out and or les sarb or in mov sarl or out sahf cmp lcall push mov ret mov out push int xchg cmc or inc sbb add and mov daa jns cmp into js mov ffreep pop inc dec xor and dec int sarb sbb mov ret mov (bad) js mov cwtl or xchg mov int sbb add out cmp (bad) pushl jg lret js mov mov lock (bad) lret cmpsb push aaa iret fucomi inc mov add inc arpl cmp (bad) pushl jg lret js mov mov lock (bad) lret cmpsb push aaa iret fucomi inc mov add inc arpl cmp aaa jle lret mov scas sti call out add cli mov xchg inc jp push mov negl add stos in inc test fs lcall leave mov mov clc inc in cmp ljmp xor cmp add and xchg ljmp js lds mov jle lock mov mov or aaa jae (bad) js mov clc xor insl add ja sbb in mov xchg mov js inc clc sti inc data16 fwait mov or cmp cmpsb out jge cmp adc js cmp test dec leave sti cli inc aad add cmp add loopne clc inc pushf mov adc add mov fwait movsl xchg mov inc clc fnstcw jo mov in call out aaa (bad) in mov jmp out cmp cmp sahf xchg add aaa jae sarb xchg iret inc xchg or fidivr (bad) mov or mov cmp jmp cld mov sahf test out cld sbb mov xchg jl sti add mov ffree int aam je inc clc loope mov das aaa mov aaa cmp adc stc leave push clc add (bad) sarb cmp xor ljmpw mov add adc rcr ret cmp adc add leave mov sub insb sbb in sbb ror pop out aaa jb test adc js int call add cmp cmp test aaa iret fcmovnb inc mov pusha sbb and add add cmp add fadd testl add mov (bad) lds inc inc js cmp push mov out mulb mov out cmp cmp sahf xchg add inc jp sarb mov sbb mov and add jp aam xchg mov jns add cli mov call cmpl cwtl xchg xor cmp repz mov lods in mov out sub (bad) xchg add aaa jge icebp sbb mov lods in inc pushl jae negl add xchg movsl lcall js mov cmpsb pop add inc push adc out setp xor fistpll rcrl iret fcmovnbe inc xchg mov out in adc out cmpps inc out inc je inc clc xlat mov mov cmp sbb lds sete adc in add lds (bad) mov clc in lds sti loopne out inc js add jge push mov and sbb mov addl insl adc (bad) incl lds in fisubl int out inc ffree lds sbb push mov shl mov in add lds (bad) mov clc in lds in mov pop add shrl dec jecxz pop mov out cld mov mov or mov xchg inc test xor cld mov test cmp adc sbb inc into in mov cmp (bad) sbb inc aad cmp adc stc leave pop out aaa aam out mov jl negl in imul in inc lret aaa sub std sbb cmp out add xor adc mov mov out mulb lds lret xor add cmp mov out mulb mov negb aas enter jecxz adc adc add aas lret inc loopne adc loopne aaa leave stc push loope mov call adc sbb stos in inc out or (bad) js mov cmpsb adc inc inc cmp lds sbb mov add lds in inc movl mov stos in inc out or (bad) js mov test (bad) sbb divb cmp into add inc fs inc jl mov into cmp adc add shll xor mov xchg mov out in adc out cmp (bad) pushl jae negl add aaa cmpsb movsl sahf inc pushl jae negl add stos in inc pushl jae negl add aaa cmpsb movsl sahf inc pushl jae icebp sbb sahf xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl sub lods add rcll clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add lods sti inc inc jb push adc in lds in mov frstor leave pop out add dec sub cmp sti inc divb aaa (bad) (bad) fbstp cmp into add shll add aaa jae negl add aaa (bad) (bad) fnstcw and (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add fwait mov (bad) sti mov dec je negl add stos in inc xchg jae negl add stos in inc pushl jp out or test (bad) inc stos inc jg negl add outsb sbb pushl jmp testl add rorl jno mov push adc pusha xadd movsl lcall sbb mov mov cmp bound inc clc fdivrs jge jno mov or fisub mov fdivr inc test dec adc mov aaa iret fcmovnbe mov sbb add out aaa (bad) sti cld mov call mov inc test fwait mov adc mov push lret cmp out xor data16 cltd movsl cltd mov cmp in (bad) lds sti repnz out js cmp hlt shll xor cmp push add mov (bad) in inc out push out adc adc inc fcomps aaa (bad) sti cld mov call mov inc test fwait mov adc mov push lret inc (bad) aaa add pop add mov (bad) sbb stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov negl add stos in inc xorl sbb lods sti stc inc pushl jae lcall or stos in inc pushl push out pop sbb mov xchg dec into sti jecxz movsl aaa jae negl add addb inc xorl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc xchg jae negl add test or stos in inc xorl sub cmpsb sti movl sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov (bad) sbb inc jns repz aaa jae lcall or stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov (bad) js mov xchg add aaa jae lcall or stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov (bad) js mov xchg add aaa jae lcall or stos in inc pushl jae negl add stos in inc pushl jae negl add stos in mov negl add test lds cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov negl add test cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov negl add scas sti incl cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov negl add scas in inc cld cmp sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in mov negl add lods sti stc inc cld cmp sbb mov xchg in inc (bad) clc inc pushl sub movsb sbb roll clc inc pushl jae negl add stos in inc pushl addr16 in out mov xchg add cmp sbb mov xchg add aaa jae negl add lods sti xchg inc stc dec sbb negl add stos in inc pushl jae negl add stos in inc pushl jae negl add jmp aaa sub movsb sbb roll clc inc pushl jae negl add stos in inc pushl pop adc sbb mov movsl in mov negl add stos in inc pushl jae negl add movsl in mov cld sbb mov xchg add pxor pusha sub lods sti loope xchg aaa or sarb mov cmpsb add mov sarl mov test add aaa or cld pusha sub scas in mov out sbb stos in inc pushl jae negl add mov pop cmpsb in mov negl add stos in inc pushl jae (bad) js mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc (bad) aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl or rcrb mov xchg add aaa or ljmp add aaa or out sbb lods in mov fdivrs mov cwtl cld add aaa je out add mov call clc inc pushl jae negl add stos in inc (bad) aaa jae negl add mov aaa or fistpll mov out add aaa pop adc sbb mov fcomps add aaa push out out adc lods in mov negl add stos in inc pushl insl adc sbb mov xchg sti add aaa jae (bad) js mov test add aaa pop adc add mov call dec mov (bad) pusha sub lods in inc test sbb mov fcomps add aaa pop adc add mov (bad) pop add aaa jae negl add lea jae (bad) js mov out add aaa addr16 jecxz add scas sti incl aaa pusha adc sbb mov (bad) sbb scas sti incl aaa jae negl add test cmc inc (bad) aaa jae (bad) js mov xchg add aaa pop adc sbb mov fcomps add aaa je fdivrs mov clc sub lods in mov aaa add mov call ret inc pushl pop in sbb add lods in inc jbe pop adc add mov xchg add aaa or cli pusha sub lods in mov enter dec call in inc mov pusha sub mov aaa pop adc sbb mov out add aaa or std pusha sub mov aaa push out out adc lods in mov repz mov xchg add aaa jge icebp sbb mov mov add aaa push out out adc lods in mov ljmp add aaa pop adc pusha sub lods in inc jbe pop adc add mov xchg add aaa addr16 repz mov out add aaa in add sbb test aaa addr16 jecxz add scas in inc (bad) aaa jg sbb sbb scas in inc test add mov push ljmp add mov out add aaa pop adc sbb mov xchg icebp add aaa pop adc js mov fcomps add aaa pxor pusha sub mov aaa or in add mov mov add aaa or std pusha sub mov aaa pop adc sbb mov push ljmp add mov out add aaa pop out sbb add stos in inc pushl or mov cmpsb add mov lret mov fcomps add aaa or fistpll mov out add aaa pop adc pusha sub mov aaa pop adc add mov call cwtl inc mov sbb mov push clc inc pushl add cmc pusha sub mov aaa pop out jmp adc lods in inc test pusha sub mov aaa jnp lcall add mov and test aaa jnp lcall add scas sti incl aaa addr16 repz mov in stos in inc pushl push in lret mov cmpsb add mov clc pusha sub lods in inc test pusha sub lods in mov fistpll mov out add aaa push out out adc lods in mov add mov fcomps add aaa je fdivrs mov xchg add pop in sbb add lods in inc xchg or sarb mov out add aaa pop adc add mov out mov aaa pop in sbb add mov aaa in add sbb mov aaa je fdivrs mov xchg add aaa js hlt sbb mov mov add pop adc add mov call out inc (bad) aaa pop in ljmp add aaa push in call fcomps add aaa je fdivrs mov xchg add aaa or cli pusha sub lods in mov enter dec call in inc mov pusha sub mov aaa pop adc sbb mov out add aaa or std pusha sub mov aaa push out out adc lods in mov repz mov xchg add aaa jge icebp sbb mov mov add pop adc add mov call out inc (bad) aaa pop in ljmp add aaa or ljmp add aaa pop adc pusha sub lods in inc jbe pop adc add mov xchg add aaa in add sbb test aaa addr16 jecxz add scas sti incl aaa jae negl add stos in mov (bad) js mov mov add aaa pop adc pusha sub lods in inc outsb aaa or in add mov out add aaa jnp lcall add lods in mov aaa add mov clc sub lods in inc test pusha sub stos in inc pushl addr16 repz mov out add aaa in add sbb test aaa addr16 jecxz add test aaa jae negl add stos in inc pushl add (bad) sbb mov xchg add aaa jl lock mov xchg add aaa pop adc xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add addb inc xorl add leave in inc pushl pop adc xchg add aaa pop adc xchg dec shl clc inc pushl pop adc xchg add aaa imul sahf xchg add aaa jae (bad) js inc jns repz lret out adc pusha sub stos in inc pushl add repz sub mov lret (bad) negl add stc xor jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc mov xlat mov jl push mov inc clc xlat mov jl push mov inc clc hlt mov xchg pop shl inc mov add les divl shl inc mov add les divl shl inc fidivrl and (bad) js dec pop push jmp xor out adc cmp pop push jmp xor out adc cmp pop push cmc mov sub jmp xor out adc cmp pop push jmp xor icebp out (bad) sbb mov xchg stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor and (bad) js dec pop push jmp xor out adc cmp pop push jmp xor out adc cmp pop push cmc mov sub jmp xor out adc cmp pop push jmp xor icebp out (bad) sbb mov xchg stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor and (bad) js dec pop push jmp xor out adc cmp pop push jmp xor out adc cmp pop push cmc mov sub jmp xor out adc cmp pop push jmp xor icebp out (bad) sbb mov xchg stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor and (bad) js dec pop push jmp xor out adc cmp pop push jmp xor out adc cmp pop push cmc mov sub jmp xor out adc cmp pop push jmp xor icebp out (bad) sbb mov xchg stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor and (bad) js dec pop push jmp xor out adc cmp pop push jmp xor out adc cmp pop push cmc mov sub jmp xor out adc cmp pop push jmp xor icebp out (bad) sbb mov xchg stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor and (bad) js dec pop push jmp xor out adc cmp pop push jmp xor out adc cmp pop push cmc mov sub jmp xor out adc cmp pop push jmp xor icebp out (bad) sbb mov xchg stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor and clc sbb sarl cwtl inc lahf inc inc out pop sbb sarl cwtl inc lahf inc inc out pop sbb shll jmp mov add les divl shl inc mov add les divl shl inc mov add iret sbb mov xchg cmpps inc stos inc or into add rorl cmpps inc stos inc or hlt js cmp (bad) fcmovnb inc fidivrl and cld add lds out loopne popl inc push adc xlat lds out loopne popl inc push adc xlat lds in inc cld aaa add les divl shl inc mov add les divl shl inc mov pop out (bad) sbb mov xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stc xor out adc cmp pop push jmp xor out adc cmp pop push jmp xor aaa adc sbb mov xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cld cmp adc xchg add aaa jae negl clc mov stos in inc cli xor add inc and out adc cmp pop push jmp xor out adc cmp pop push jmp addl add stos in inc pushl jnp lcall add stos in mov lock mov xchg add aaa imul sahf xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add addb inc xorl add leave in inc pushl pop adc xchg add aaa pop adc xchg dec shl clc inc pushl pop adc xchg add aaa imul sahf xchg add aaa jae (bad) js inc jns repz lret out adc pusha sub stos in inc pushl add repz sub mov lret (bad) negl add stc xor jae negl add stos in inc pushl jae negl add jl push mov inc clc xlat mov sbbl add les divl shl inc mov in push cmp pop push jmp xor jecxz fldl fnstcw xor out adc cmp pop push or sub jmp xor jne push cmp pop push jmp xor jecxz fldl fnstcw xor out adc cmp pop push or sub jmp xor jne push cmp pop push jmp xor jecxz fldl fnstcw xor out adc cmp pop push inc inc lahf inc inc out pop sbb sarl cltd inc mov add lds out loopne popl inc push adc add mov shl inc mov add les divl loope clc inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stc mov pop adc xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl push mov mov lret (bad) negl add stc mov jae negl add stos in inc xchg jnp stc sbb scas cmpsb add stos in mov lock add aaa jae adc cmpsb pop or jae (bad) js mov xchg add cmp sbb mov mov add aaa jae negl add movsl in inc jae ficom sbb push mov shl dec inc mov sbb lds inc cmpsb mov add inc clc push cmp jecxz mov sub std sbb shll pop mov inc clc in inc call xchg (bad) shr or adc xchg movsl jno jge out out pop sbb mov clc add in mov into add mov jge add sarb (bad) out aaa iret fcmovnbe mov (bad) js cmp incb (bad) mov adc loope mov (bad) (bad) cmp out in adc inc faddp xchg inc (bad) aaa add or xor (bad) lock (bad) lret aaa adc int fdivr inc int cmc mov (bad) js leave mov add mov cmp clc or sbb mov in lock add inc jecxz pushf inc mov adc add cmp mov add std add xor fdivr inc test mov adc js int push xchg mov inc clc into leave push call jb inc inc pxor js cmp out xor dec jp sbb sub mov dec jbe inc clc fdivrs lahf movsl lods inc inc mov adc pusha stc mov fdivr inc test xor jecxz inc (bad) out dec stos movsl xchg mov inc clc into leave push call jb inc inc pxor js cmp out aas (bad) mov sub std sbb shll jecxz (bad) xor and sub and leave fcomi mov sbb or ffree int out gs sbb ror push call jl dec inc adc sbb mov (bad) or lahf fwait dec mov sbb sub mov repnz fadds in adc int push pop mov or mov push xchg inc (bad) aaa add or xor (bad) lock (bad) lret aaa adc int fdivr inc int cmc mov (bad) js leave mov add mov cmp clc or sbb mov in lock add inc jecxz pushf inc mov adc add cmp mov sub in aaa xor xchg cmc xor cmp out loop int3 sarl (bad) (bad) pushf mov adc push pop mov sbb sub mov cli inc fnstcw sbb loop int3 shll aaa iret fcmovnu mov (bad) js int push stc inc xorb adc push xchg inc lea adc clc fdivrs stos sti cwtl inc cmc xor or cmp cmp inc cwtl mov adc push test fimul adc pusha sbb daa fdivr inc mov inc inc mov pusha add inc jp test adc call cmp adc add mov fcmovb cmpsb mov sbb sar rorb mov cmp out stc sbb mov in inc fnstcw sbb loop int3 shll aaa iret fcmovnu mov (bad) js int push stc inc lea pop out sbb in mov (bad) ret xor pop cmp xchg push aaa iret (bad) inc out inc jg adc add aaa iret (bad) inc out inc jg sbb adc sub and lret mov cmp call mov out pop sbb mov retw inc ffreep lret mov cmp fdivrs mov inc inc inc inc sbb adc and jp mov in sbb cmp incb test sbb stc sbb mov sti xchg mov cmp clc cmovg (bad) fisttpll in sbb in mov mov cli inc (bad) stc leave pop out aaa (bad) (bad) stc inc js or cmp incb test sbb stc sbb xchg aas fs push out cmp fnstcw rcr ret mov in in aaa xor xchg cmc xor vpaddsw in pop testb (bad) (bad) mov xlat pusha sbb es incb fwait dec mov sbb icebp mov lret mov fisub xor (bad) cli inc (bad) sti in mov js int xchg add aaa jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae cmc add mov xchg add aaa jae negl add stos test inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add stos in inc pushl jae negl add sub dec (bad) dec or or xor cltd inc iret fcomi mov in call dec int3 fwait xchg inc std aaa add and popf (bad) inc movb mov inc enter xor cmpsl in shlb out ljmp inc mov scas inc (bad) cmp fmuls testl cmp aas sbb mov fxam loopne testl (bad) mull lea xor loop gs incl movsl scas inc (bad) cmp out pop add leave pop (bad) add test out push pusha sbb shlb adc add int call mov aaa pusha or cltd add (bad) jmp jns mov push in add mov shlb (bad) int sarb mov test xor push mov lcall adc or jg dec cmpsb pop in inc je sbb mov (bad) in mov aas sbb mov test xchg mov es mov call scas inc std aaa or daa add mov shlb call test cmp inc pop mov loopne pop fcoms jp inc or jmp mov (bad) cmc inc roll out or or (bad) fwait mov add push mov call loope in inc push int call cwtl mov aas add sarl scas inc lods aaa outsb in or clc mov mov xchg mov add movsl scas inc pushl ret mov (bad) out jg cmp decb in cmp xor call inc lea add dec cwtl mov addr16 xor xchg out clc xor pop int (bad) dec xchg imul or mov cltd add in sbb adc sbb mov cmp adc sbb or jo sbb cmp mov gs mov add test jp dec pop loopne pop hlt sahf loop push xor mov xchg stos data16 mov adc js inc ja adc int hlt arpl leave or aas repz sbb push inc je scas loopne xchg in dec cmp sbb push mov cld fwait sti xor out call adc hlt xchg push jno xor xor inc je cltd or loope push push jbe mov mov push jae sub (bad) inc and pop ret aaa mov cld mov in sbb mov push mov out out ljmp adcl mov clc cmp pop inc test (bad) fsubp push addl orl in xor sub mov mov mov ja (bad) out mov int3 fisttpl lret push lret or pushf inc mov mov (bad) out mov inc dec inc inc jge xchg cmc sti loopne cmp dec js fs cli sbb add cmp (bad) adc mov xchg (bad) mov jl push pop stos sub xchg (bad) jmp out sti lcall inc gs mov (bad) je imul mov imul or jmp sti or xchg in pop andl and mov outsb add insl mov push xor adc or call cltd in cmp mov out or in xchg sbb mov adc hlt xchg fs dec xchg sub push push jp out aad cli xor jne mov lret les fs sub lret pop mov imul icebp mov pop dec pop mov test das icebp insw addl or icebp (bad) fidivl sbb insl xor mov fidivl sbb daa inc push addr16 (bad) xchg add outsl jbe mov outsb ret std adc pushf add inc push out loop repnz insb jne mov (bad) mov jl (bad) cs repnz mov xor inc outsl lods clc or out test sub je outsl or sbb mov push popl dec movsb add repz inc push xchg das dec imul loope dec cltd or sbb jle inc ss jb out adc out push push arpl xor (bad) stc xor jmp cltd scas jle (bad) sub jge cltd add sub adcb out and add mov in cmp ret inc jp mov dec push movsl or xor mov (bad) sub jge cltd add clc add movl in (bad) ljmp arpl adc sub pop dec or jg js fadds out dec dec js imul lods xor das clc mov ret popf lods cs lret repnz push inc jb add imul ror dec and push addl stc adc out xchg aaa push push imul cmc inc outsl insb inc (bad) js ret lcall int3 es dec lock cwtl push xor sbb or mov cld cmp xor inc mov push mov jg sub sbb jle push dec popf adc and lea in inc mov xchg xor mov jno push sbb mov cmp add add jno dec and call (bad) pusha inc inc inc pop mov add mov fnstenv add shlb add (bad) push xchg push in cmp add mov jnp mov movsb in dec xchg popf pop call mov test mov dec add test cmp lret jl dec (bad) flds mov test lret mov cmp imul cmpsb movb pop jmp ljmp jb (bad) (bad) in in sar mov cmpsb (bad) mov cld fcos loop mov jmp insl ss arpl sub pop mov test in int repnz test or into or mov enter cmp and lahf or mov gs add aam pop mov push xchg pop das jg jmp dec lock push sbb fidivr pop aad adc mov mov inc cld dec push xor flds mov cwtl popa aaa (bad) out les mov jnp dec aad lahf mov lahf clc test push rorb xchg leave and xor push inc cltd in fld mul or (bad) cli push faddp cli mov iret in aad sub js adc movsb (bad) std sub pop sarl imul mov add mov decb inc jb ret int3 mov or aad cmpsb jno inc lret pop fisubl dec lahf outsb idiv inc ljmp mov adc loop pop dec or repnz push cs sbb ret int xchg (bad) in add lret xchg jle loop cmpsl mov dec gs pop sbb push mov (bad) mov lret or and imul cltd test sub leave repz fdiv cld mov insb test mov mov mov jge gs psubd mov cmpsb cmc and cmpsb and mov jle loop cmpsl mov dec gs pop add leave mov sub push andl je ficoml ret mov inc dec mov rcl stc mov (bad) sbb push jo repnz ror test fadd sub mov mov add cs jg or ss pop push mov repnz mov into push xor std or add and mov insl mov add and mov rolb fnstcw stc and out mov xor cli mov mov lds ret mov notl add sarl lret loope push ss jmp std lea mov mulb (bad) lahf xchg nop cld or lods adc fwait xchg lds rorl sub sbb sbb shr push hlt push adc outsl clc pop jle jmp roll es negl xrelease cmpsb xchg sti into adc sahf or xchg dec lret in cmc sahf add sahf sbb popf sub mov add mov mov push je iret outsl lock push mull mov mov subb jno jmp xchg or in jbe movhlps add dec outsl cmp test xor movsb out cmp popf icebp in dec hlt mov fdivrp sbb cmc ret push xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg sub mov cltd add sahf or xchg mov in adc or xchg mov in cmc cwtl add sahf mov mov add add pop les dec movsl cmpsl inc gs adc movsl dec orb icebp xor xchg xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or test xchg icebp or sahf pop adc lods jnp inc add add sahf or subb js add xorb or xchg mov out negl repz sub mov in cmc cwtl add sahf or subb js add popa jne cwtl xorb or xchg mov out negl or sub pop rcrb arpl negl xrelease jmp push sarl les arpl jmp cld mov mov les dec incb sub jg icebp in cmc cwtl add sahf or xchg mov in cmc pushf clc xor sub mov in cmc cwtl add sahf inc jmp sub sub add or sahf pop aad jo xchg clc cwtl addl xor jg jne sbb mov fucomip dec stos mov dec incl adc out xor aas into addl pop clc mov jecxz jp lods test and ljmp jmp mov test negl adc dec sbb inc add add push adc lcall outsl adc add rcrl popa aad test incb sahf push repz stos cltd test aaa sbb mov ret jmp stos mov icebp in cmc cwtl add sahf cmp mov andl ficompl mov mov push arpl adc shr js inc js add sbb xchg sahf cmp mov andl int3 mov test sub add sahf cmp ret cmp mov repz adc jmp test fsubr dec stos mov jae das or xchg sahf push adc int mov sbb push repz dec jbe jle push jae cmp add mov mov clc daa or rcrb sti sub xor out addr16 pop enter mov jecxz xor push rorb push negl jmp mov mov repz mov leave jmp mov mov or lret add sahf or xchg mov add pop enter cmpsb test cmp stc jne (bad) pop shr jbe mov jae cmc cs mov outsb mov jb lock or test inc jno pop adc test mov mov in cmc cs mov pop cmp mov add pop shr js popl aas adc jle repz movsb test sub adc xor lea jno mov inc lret mov mov inc jge sub jb cmp push arpl sub cld lahf sahf cmp ret cmp mov repz mov mov xchg jle icebp in cmc cwtl add sahf jmp cmpsl dec add mov mov (bad) rclb sbb mov pop sub inc cltd push and adc sbb inc inc imul loopne mov fstps enter (bad) push cmp jno push data16 ucomiss inc clc dec or out and mov (bad) repz les add lock aam (bad) repnz mov mov mov mov mov ljmp scas (bad) cmp adc pop int3 jo into scas rolb dec or lds in and hlt out rol (bad) imul clc inc mov xchg shrb inc out loop (bad) leave loop jge pop mov (bad) jno push data16 ucomiss inc clc dec or out and mov (bad) repz les add lock aam (bad) repnz clc inc in sar cmc jns (bad) dec pushf pop std push dec clc inc xorl adc lods out mov in insb dec cmp ret jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub fdivl cmc sbb mov mov insl stos (bad) hlt inc subl inc in fcmovbe scas leave daa xor mov ss mov push mov insl add mov sbb lods mov inc data16 cmpsl dec (bad) inc inc jge or out out inc fldl lods sti clc lods lock scas dec cmpsb and mov les dec popa add inc xor push in inc push icebp sub in pop fisub dec jb sub pusha xchg fimul pop jno mov lret mov and push cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov lret or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg jnp into cmp adc sub inc sub sbb call bound imul xor or stos inc adc in imul in movsl in cld inc mov or leave pusha cld int test mov (bad) out out fimull enter inc pop lret int xchg pop clc or mov fsubrl dec mov sub and fwait lea add cld mov movsl add dec cmpsb cwtl inc test push sbb cli mov mov outsl test cmc cwtl add sahf or inc aas je push outsb inc popa xor (bad) xor inc add sar mov mov ss ljmp push add jg push out cmp mov mov mov cmc mov cmp sbb aam pop rcrl call lods test add sbb test mov cmc sahf add andl push or stos into test repz out sbb das add sub (bad) jae cmc jmp jmp sub mov out cmc in push inc sahf push repz popf push xor adc mov mov out cmc pushf clc xor sub mov add sahf or xchg lds inc inc add std jecxz add dec mov jle int add jge popa cmp (bad) adc push icebp or addb xchg lret and cli arpl aam pop in cs pop clc and ja or cmp mov pop lds or push jge mull xchg jmp xchg repz movsl cmp or imul std sub test lret xor (bad) std lea pop clc xchg xchg inc sub mov inc imul stos fistpll pop or sbb aas push jmp rol stc inc xchg fidivl sub aad pushaw ds aam popf or jge xchg or mov or lock jg cmp sbb lods pop addr16 xchg je std cmp fucomi jne cmp aas and repnz fsubp add mov push movsl cmp sbb add mov push das dec js and loop repnz bound in push inc dec add ja fucomip cld push jb push mov mov mov dec or inc test out aaa imul cli cmp lcall push lods lea (bad) mov or (bad) cmp sub xchg out int3 loope inc xlat repnz dec pop in ficompl push jge ret insl mov sbb xor in cmc adc testb js add add sahf xor jecxz pop js jg repz cmc cwtl add jle or add cli dec jle jmp sub inc jl repnz jmp add push jmp sub ljmp sahf or mov jne pop subl xrelease mov incb or or scas xchg ret pop cmp cwtl adc sub mov add xor cmp call push in and cmp mov add pop imul inc jle add sahf jne scas xor fdivr sahf icebp (bad) daa jecxz addr16 popa adc jg (bad) push xchg add addl out in xchg outsb xlat clc add dec into inc (bad) cld icebp stos fldz add dec std or add xor out bound je test xchg fnstsw lret mov fnsave push (bad) js bound addr16 pop mov jg (bad) lock add lcall repz das push push push outsb inc pop clc outsl hlt mov addr16 adc fisttpl (bad) xor add cs sub mov sahf xchg testb ret inc aaa jp jb stc imul arpl jmp dec inc mov push push lock xor mov add mov jle stc stc (bad) roll dec jb fnstcw push mov adc test (bad) insb in add inc adc mov inc jo inc push or xlat hlt int aas in out scas orl daa cltd push enter js lock jb test (bad) insb in add inc adc mov inc sub loopne clc jns inc mov rorl jle in push enter adc jb test sahf pop stos stos add pop lods inc adc notb pop xlat jne test inc and push enter outsb adc push mov in sbb xchg insb or inc gs pop fs test ret inc aam stc insb jge xlat mov cmp negb rorb mov inc sahf jbe add jne test ret add in stc inc adc sub jmp fcoms loopne fwait sbb cmpsb jmp pop lret sahf (bad) lret jae jnp mov call add sub xor fsubr mov cmp push add repz std lods and sahf pop or jo (bad) jg inc stc adc insl jmp lods inc js pop mov (bad) addr16 pushf cmc in sub mov nop repz cld sahf inc jb aad test jg sti dec add sahf push rorb dec jnp mov or movl stos adc sub movsl pause repz mov or mov (bad) icebp imul pop jmp xor rolb repnz push cwtl add cmpsb pusha add dec jb or cmc out ljmp fcmovnu movsl push std popa inc fldcw jmp xchg inc sbb mov push (bad) sahf leave leave mov clc incl cmpsl cld ficom push xchg dec addb mov cmp outsb (bad) fdivs add (bad) dec push jns jg icebp in cmc sbb mov push jmp dec add loop pop cs jae insl js add daa ja (bad) lea repz jge repnz sti js pop aad or mov repz sub test ret xchg add sahf mov xor jne adc xchg lea sahf pop adc jle gs mov cmp fcom mov in stc pop repz test cmp mov out (bad) enter xor dec sahf sub add or pop in int pop jnp inc jg jle sbb adc clc std test cmp xrelease cmpsb std aaa mov das xor test add icebp out div push pop orb out pop jp jg jns negl cmc subb xchg jae lea mov fs cli add out mull pop popl stos jnp add sbb popf push mov xchg mov mov xorl add sahf cmpsb call les jmp addl push inc lock add pop stos testb mov arpl add in lock sub js jnp cmc out icebp out cli dec (bad) pop repz jg lahf add sahf add jp testl int3 in add mov jge cmc out idiv sti pop addl stos or jg ljmp aaa call cli add out sub xor js shr mov popw xor pushf aam mov ljmp rclb push mov push jns add out sub iret clc aad pmaddwd xchg add xor (bad) icebp mov rclb push mov push jnp add jns (bad) cmc sbb cmp push jecxz loopne add int cmp je or repz push mov cmp sub imul push dec mov push add pop adc ljmp jo push xlat jo sbb or std (bad) das je in add inc inc adc (bad) pop push jge out push aam shld loope cmp fs mov push test sub repz push or out mov pop dec or jle or notl jmp call and mov jnp pop pop aad mov cmp pop iret and pop out add xor add sbb xchg cli mov ret dec add add push pop xchg call jge mov cli jo int3 ljmp mov insl lret inc negl xchg aam ja repnz repnz enter inc std adc insb ja xor data16 inc (bad) xchg jae cltd mov test adc sub in pop cmp adc dec push cmp push nop nop (bad) fistpll pop popa movsl out ds test cmc mov inc cmp daa dec test scas add (bad) jmp push stos hlt or sahf add pop or test or and mov pop test dec pop pop sub clc into ja cld or or add fisubr scas mov lahf ds rclb mov fistl jecxz (bad) push ret push jae repnz push and cmp or stc lret cld ret js jg in mov icebp add jle repz test jg adcl inc repnz clc test sar fiaddl cli dec inc inc out or add orl jnp add mov and into jle adc sub mov cmp adc (bad) sub jle sbb out add jg repz pop test add add mov jo bound and mov sub inc mov loopne stc out xchg hlt fmuls js add add sub loop (bad) mov repz push add mov or maskmovq sub mov pop and pop insl mov mov sub repz pop inc jle push dec cli mov push and test cs mov jb mov lds adc sub jecxz repz mov iret repz jmp adc aaa fiadd mov stos insl xchg add pop and add pop and aaa stos xor jo rcrl enter mov (bad) mov pop lods pop mov lods sub mov pop and add inc and mov mov sub and add jne cmp loopne incb jno pop divb jmp cltd repnz sub mov adc mov fdivrs sti ljmp std push bound inc or jp add call jmp jns cmpsb xor das jg pop jb call jmp enter addl scas pop aad pusha int mov jmp inc repz es stos jg in testl leave addb jmp mov adc sub adc dec aas mov (bad) sahf push jmp sub jg repz pushf cld cmp or js add jmp loope,pt mov in ret jno mov sub aam mov or cltd add jge bnd add push or or sub sti lret push mov arpl add gs add mov negl (bad) into xor inc xorl xrelease mov jmp sahf or xchg shr cmc cwtl add sahf adc xchg mov out xchg push inc sahf or mov mov in cmc cwtl add sahf pop or sub inc add add sahf or subb repnz cmc cwtl add sahf or xor cwtl inc loope adc adc cltd add xor add add sbb mov jg loope jmp pop repz sub loop jb call icebp loopne jnp stos jg jge sub add inc adc imul or dec and (bad) out popa lcall (bad) cs push jmp jmp add mov out sahf inc pushf (bad) call inc mov inc fcmove shrb (bad) dec cmc add popf mov sbbl or fisubl fnsave hlt in xor lds enter mov in lret decb mov adc rcll nop lods call mov mov lods adc mov sub scas out nop mov pop add std dec popf fstpt lret fadd sub push std jecxz push ss or cmpsb sti mov pop je lret call mov test jge negb hlt (bad) mov fincstp mov ret hlt adc push scas out dec shl pushf pop outsl pop xchg xlat (bad) dec add sbb cli cld lds cmp xor inc (bad) mov test xor je inc xchg sub ss insb xchg xlat (bad) dec add sbb cli cld lds cmp or sbb (bad) and add inc pop lret jbe ret sbb ret inc into imul (bad) ret into js shll or testl lret decb mov repnz cltd pop xor inc fcoml mov (bad) mov dec inc loopne adc (bad) sub out dec pushf xor jbe cltd push or lds cmp or nop dec push sarb leave sahf hlt in xor lds inc out fnsave hlt in xor lds cli stc dec sbbl cmp sbb sbb int3 shrb fwait repz jnp rorb (bad) call and push (bad) add or scas mov stc xorl movsl mov or xchg cmpsl and fst mov mov sub or clc lret movsb movsb cld xor ret mov jmp test icebp dec xchg iret testl popf adc out enter add push mov add clc ss stos mov scas in je test sub enter add push out dec cltd test sub (bad) out scas mov daa aad xchg rcr (bad) or sti test test add inc pop (bad) outsl sub fs in jae ror lods mov and pop push in cli mov aad (bad) mov and pop (bad) xor dec mov push in sub in adc add cmpsl popf out fmul call cmc into leave (bad) push mov aaa xchg dec icebp xor cltd mov lret fnop repz pop pop and xchg inc cmp mov pop inc and mov adc int loop arpl mov sub sahf nop test or jp js iret fstl dec xchg js pop (bad) pop sbb jl stos jns lret scas mov idivl add cld outsl inc jne or popf sub pop pop lods out cli icebp pop pushf test sub cmc into aad mov or subl lahf mov sbb cmc jp inc push scas out dec cmp sbb sbb outsb push dec outsl movsb daa xor push add mov test push mov (bad) sub pop shrl sub push repnz lahf insl aad iret les dec jb loopne lock test xor fs inc repnz (bad) xchg adc (bad) xor push push fstpl cmpsb mov lret (bad) jecxz jle lahf xor adc pop mov and mov inc test in sti cmp ret (bad) add loop dec or jne push mov lods cwtl in xchg mov inc or cmc cli call stos inc cmp cmc cli call ficomp jl repnz and call pop mov or mov xor mov push mov lods addl int push pushf push add mov and pushf mov mov call scas mov rorb xchg clc mov xchg pushf lods sub test lds adc pop mov xlat fcmovnb sub pop aam add int insb inc or ret or fmull out pop stos sbb loope mov lds icebp scas lret sbb hlt lds xchg xchg (bad) dec out pushf scas jp or xchg jle iret (bad) call pop mov scas in mov add ret add cs and flds xor sub mov lds adc rcll push mov or sbb cmp or mov and sar sub cld leave test push mov (bad) mov (bad) repz into aad sub (bad) mov push stc stc mov xor mov pop push cld inc nop jge popa jp ljmp std aaa mul insb adc xchg dec mov outsl dec push dec add mov cmpsl mov or int add xor push mov loope aad cmpsl xchg cli xor shlb ret int mov into mov jb js cltd mov mov sbb xchg (bad) or inc mov popfw (bad) repnz push ljmp in sahf cmpsb std std inc stc inc push ret test jb in xchg iret outsb in (bad) (bad) mov cltd icebp pop iret int3 stc cs dec jecxz cmc dec adc mov sub mov (bad) scas leave and push push (bad) cmp adc test inc outsb test inc xor (bad) adc lods or popa inc imul mov in sar mov or (bad) mov pop xor mov sub cmp movsb or std dec adc mov mov pop pop das pop adc jns jmp mov scas lret mov jmp mov repz adc sub add xchg aas nop push clc in mov rolb sahf not lret ficoml mov and cli lds fwait lea add lret test in push cmpsb ret pop lahf lret (bad) jp data16 divb into stc mov out push or cmc testb (bad) in cmp xchg in cmp sarl and sub add and inc pop adc bound jns adc mov xchg int dec cmpsb (bad) fistpl mov loope sub sbb add scas out leave mov fs cmc lret jnp lret xchg xchg sbb scas in loope adc repz (bad) xor mov or ret hlt iret stos ja push int mov cmp add ret jl lret mov call stc into insl call or cmp jecxz inc adc pusha sbb (bad) lret sub lret (bad) jecxz cmp in addr16 aas aad les iret aaa sub lfs add cltd daa sbb jecxz pop enter jno cmc clc scas (bad) stos and add ljmp into jl mov cwtl adc cwtl xchg lret inc icebp mov pinsrw cli stos jno test leave or lret lock addl pop or icebp inc (bad) mov add sbb lods add cli aaa adc mov or push pop dec or push lahf enter add push popf inc inc xchg jle inc stc ffree test shrb iret inc adc fld mov xor jl fnstcw popf sbb mov xor loopne push or mov leave mov and push mov (bad) outsl pop in mov out add js popa push movsl std pop mov pop scas ret into jl mov xchg clc add sar sti push pop pop repnz aad les mov repnz lret fisttpll test iret xchg std inc test in and jns xlat test insb adc sub (bad) call cmc and idiv mov aaa out xor adc sub adc inc pop lret jbe ret fsubl shlb mov out addr16 xor sbb or pop mov movsb mov lods push mov sub hlt cld sbb sbb jle incb inc and mov xchg and sub iret pop xchg stos and push out daa js push push imulb pop (bad) and pushf push xchg pop das jg jmp add mov int adc sbb sbb aam mov (bad) sub jle mov pop and sti in repnz fs sub js push push out iret cli push adc and inc (bad) and inc add dec cltd test sub (bad) mov inc dec dec cld test mov data16 xor lods add out stc mov cltd xor or mov push jb sbbl pop jmp mov add mov repz les (bad) pusha cmp clc dec mov shrl test sbb mov jecxz fidivr jns lahf sbb add mov add in call call inc lock jge imulb mov sar lds out dec sahf sub cli jmp mov push (bad) jmp in adcb push js add es ret and iret pop cmp and lds dec nop test stc (bad) fisttp cmpl add inc iret lahf mov or sbb hlt jmp inc bound add push xchg mov xor test sbb mov ffree push mov adc rcrl push cmp cmp aad (bad) xchg mov sbb bound add mov icebp dec in mov clc stos stos insb out or xchg dec mov sbb mov or lods mov fsts cmc lods stc loopne aam ljmp mov iret xor jo pop cmp push push ss and movsb mov sbb jmp sbb in mov repnz addl cmpsl stos xchg cmc ss xchg and sbb movsb mov pop lcall int3 test ljmp xsaveopt cmpsb sti and je inc jo repnz push out adc aad push movsb daa xor xchg aad notb popl xchg inc insb ja neg enter aas sbb (bad) mov lods movsb stos jns mov xchg xchg xor sbb cmp push or push aaa sbb xchg push xchg mov mov cmp nop insl inc pusha ss js or push adcb aaa inc lock loopne sbb in fadd mov or les stos mov adc pop sub scas xchg stos pop inc test call ret notb leave sbb push stos dec mov out test iret inc adc push mov xchg mov dec (bad) outsl jae (bad) out push cmp shll dec sbb push adcl in or adc les inc and nop mov lods mov dec lahf jecxz xchg int3 int sahf add aas xchg fistl in push jge mov lahf mov or cld push add (bad) mov adc mov xchg push cld fcmove ljmp xchg jo enter or stc mov jg pop movsbl mov mov iret inc adc mov ds shld add jno cmc clc scas (bad) stos sbb mov pop xor std in mov fnstcw (bad) std in mov lock jns mov fisttpl clc cmpsl cmp stos pop (bad) sbb adc sbb cmp and xchg sbb lret xchg mov fadd mov out push es (bad) movsb mov mov into fs rcll outsl dec dec cmp jecxz inc adc mov std add cwtl jmp adc inc outsl adc add jmp int mov lock insb add sahf mov xor ss push addl clc mov ss jmp insb pop sub les add sti daa sbb push rorb clc mov mull xlat sahf xchg jmp mov cmp mov cli ret repz test xor add test jbe,pt sbb or mov mov (bad) clc scas cld jno mov lods movsl jno xchg and sub clc js imul stos out inc or icebp insl dec sub mov pop in cli push mov cmp xor mov std xor inc pop arpl pop int test sub add mov mov in daa add test jp rorb les std xor sahf xchg jmp mov cmp movsb lock icebp adc enter sbb les cmp aas mov adc mov les aaa sbb mov mov jne nop push jae adc test jne cmpsb test cld shrb mov jne lods repz mov (bad) sub add mov mov imulb adc rcrl jmp aad clc inc pushl clc ret or cli clc push orl pushf pop shr arpl mov test pop add enter mov mov aaa sub push lods pop int jo mov sbb adc mov aad pop mov les jle (bad) pop aam dec aad insl popa cwtl push jno shrl rcrb clc dec sbb cld enter std out mov adc adc aad mov mov cli add lret jmp mov clc xchg xorl add pop fldpi jp lods mov xor pop clc mov jecxz jp lods test pop pop cli movsl pop int3 repz mov cmp clc loope scas or stos cmpsb test inc outsl or jl loopne mov test sbb sub fistl sub orl ret jmp lods pop add pushl add aas std loope inc mov test inc insl sbb and pushf pop fist push mov test adc stos stos andl inc addl cwtl jle adc mov (bad) aaa adc lret test jle test push (bad) js mov inc mov mov fiaddl and jl mov add orl push jnp stos or sub add xor mov push (bad) jbe inc add mov pop lock dec or lds mov test or dec add mov aam call in sbb mov call lret mov add int out jns mov add in sbb int enter test adc pusha pop mov call mov lahf cmp js mov (bad) cmc jns mov js xor sbb inc mov pop mov cmp sbb adc dec jnp loopne cld leave mov jp decl adc xchg mov xchg jb inc fdivl push mov mov xor icebp mov xchg ja movsl mov adc jmp push jbe repz aaa jns stc add mov mov mov sbb xchg inc stc cmp into pusha or bound fucomi out call add xor adc mov (bad) mov cmp in add icebp leave pop call stos mov int3 rcll ret rcll cli inc repnz sbb sbb idivb mov mov push in enter push add aaa push in int3 add leave dec jbe push push cmp in lret mov test or fcmovne mov sbb scas sbb movsl mov (bad) dec or sldt aas fadd out clc dec jnp and idivb int mov cmp in add icebp leave pop call sahf mov incb clc mov test xor xor add adc repz sahf movsl test les in mov iret fwait xchg cmp and divl jo mov out repnz pop mov xchg aas mov dec popa adc add mov test xor mov adc std sbb mov int in inc push int out inc call inc adc js int out jns mov int loopne jmp pop fwait xchg inc repz jnp or int call loop inc mov adc clc push dec pop pushw (bad) dec add out in incb lock mov dec mov test loopne in rcll mov xchg cli inc ljmp mov mov dec or or imul sbb mov int in inc push int out inc call inc adc js int out jns mov int loopne jmp pop fwait xchg inc repz jnp or int call loop inc mov adc clc push dec pop pushw (bad) dec add out in ret js mov cltd test out xor mov nop movsl (bad) inc jmp add roll ja test mov add sti mov mov dec gs cmp xchg cmc or aaa or mov ret inc pop mov cld mov mov push imul pusha or pop push lds shlb pop fdiv dec test mov in incb out inc movb movsl mov orl punpcklbw jle hlt or fcomi mov add dec inc (bad) stc dec mov dec sbb out cmp fs add aaa cmp inc add cli inc sbb mov out add (bad) lock movsl pop mov pop pusha push mov movb pop mov daa cmp in inc dec mov divl mov int inc cmpsb (bad) push add mov mov mov push fwait adc mov mov xor mov scas (bad) out jns movsl insb inc sarb inc movb jl inc dec aaa push in xor and sti or movsl mov inc leave lret in add mov popa loop mov lcall push sub fldenv pop andb dec (bad) in jb (bad) pop aaa cmp mov add mov icebp stos daa xor adc lock cmp ret push inc add xchg repnz mov jecxz inc jg test mov dec and mov ja (bad) in jmp sbb mov (bad) lret sbb xor jbe add (bad) adc mov jnp mov (bad) loopne inc mov jb inc adc (bad) or pop out mov add inc xor add or mov adc repz dec cld lea inc bound mov loope out sub adc add stc inc adcl js jg repz stc cwtl add sahf add mov aad jmp lcall mov rol dec mov call inc pop mov clc dec test mulb fs test loope (bad) dec nop sbb (bad) xor clc inc cltd sbb mov cmc icebp jmp lcall inc add add xor inc inc mov adc cwtl add lret push jg inc mov pushf clc adc xor dec add add sahf or mov jnp cltd add lea sahf or xchg mov sti jo xchg daa out enter sti mov test popa cld int mov js adc (bad) sbb movsb xor movsb daa xor (bad) mov dec daa idivb je call xchg testb or movsl scas loop rcll inc fcmove shrb in pop inc xchg insl sub insb mov cmp sbb sbb or lea add jbe lock lret sti pop (bad) das jg fstp jb sahf or jp jge jecxz in pop and rorl jno jge or jecxz iret incb inc mov jno push js clc adc lret jbe ret inc xor (bad) out leave out (bad) xchg pushf add hlt pop in decl ljmp sub subl jecxz pop mov fcomps mov pop loop out incl mov inc sbbl outsb or lods xchg ret cmp jb cwtl push xor jb mov loopne pop dec mov fs add out inc mov testl xlat out sub in lds jo (bad) rcrb (bad) sbb mov gs mov add cli pop movsb dec add fdiv mov pusha pop mov pop inc push add add inc push call mov adc call dec mov or in inc add hlt clc inc lods or lea sub inc add push je popa push xor sub sub jl or repnz loopne lods or stos arpl push arpl hlt inc insb push div js,pt dec or (bad) xor repz cmp dec gs sbb nop hlt inc insb push div js,pt mov add cs dec xor scas in hlt lahf repnz es mov or (bad) fcoms loop pop xor (bad) jno mov int3 hlt adc aad adc jno out sub popf adc aas pop js add sbbl pop cmp imul out pop fxch pop jns inc fs ljmp cld aam into (bad) and lret addr16 outsl mov aas sbb push mov jb jns cli lea in iret push stos inc inc jg test push dec dec adc jnp lock ret test ror push js scas jp mul push (bad) or clc fistp xor test xor in push scas test and push test adc into jl mov inc add outsb push jo pop out push ds stos jo sahf cmp mov in add sahf sbb lahf sub mov rcrl sti test (bad) xchg addl pop repz sarl ret out jg inc add inc daa cmp (bad) dec jnp inc add add sahf or xchg gs std xchg pushf add sahf or loop or jns cmp lds gs pop xor sarb cmc cwtl add sbb pop int js add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf sbb xchg sub lods add cmc rolb push or sub mov in cmc cwtl add sahf push repz jno cmc cwtl add sahf or xchg mov out cmc xor cltd push or sub mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc push xor add add sahf loopne ret not xchg jle icebp in cmc cwtl add sahf xor iret push outsl js cmpl cld lret adc lret iret clc inc decl add outsb add sahf nop jmp mov js add out loope pop (bad) xor jnp inc add add sahf cmp mov add add sahf or xchg mov in cmc fdivr jne or cli aad mov int3 daa sbb repz mov test cld clc pop sahf or sti aad test cmp push adc mov stos cmpsl test cmc cwtl add sub call adc popa add pop shr sub jae,pt out cld lds jmp sub mov (bad) adc push cmp and clc pop sahf or lret mov push std addr16 cmpsl jle repz mov cli daa add into pop jbe xchg test js mov je lods mov add jg lret pop shr js inc js add add adc xor test jns mov popa aad mov sbb adc repz mov mov in add mov jmp int mov aaa icebp cltd add mov dec mov mov (bad) sub add stos scas test cmc clc add inc adc call sbb mov stos mov arpl sub xlat repz mov mov in add mov jmp int mov sbb xchg bound scas mov sbb push cld stos pop fistl inc lret (bad) mov jnp enter adc xor mov sbb sahf adc shrl jae das or pop in adc sub sub adc bound (bad) pop fldpi in sub mov repz adc add (bad) clc ret gs xlat xchg addl popa add pop pop adc mov adc cmpsl pop mov inc sbb cs ljmp xchg imul imul jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub enter outsb or sbb scas mov ffreep (bad) lret inc add fisttpll jno jb js jmp inc xor cld cld cmpsb inc mov add xchg add mov lret cmp sub cmp mov lock cli push cld int into inc lods mov daa push mov mov ret jp or test out call cwtl jl repz inc sbb out (bad) jb outsl out sub fdivl cmc sbb cli jne add xlat ret call div sbb mov push loop movsl out mov lret ret mov pop mov inc xorl jns jg aaa (bad) iret repnz pop std or jmp add mov push add cmc adc ljmp repz lods sti clc inc in (bad) adc add scas dec cmpsb adc mov call xor (bad) push mov lret iret mov sbb pop btc scas push sbb xor iret ret lods mov mov in cmc fs or xchg sub lret push into sahf lods cmp pusha mov fisubrl mov daa pop mov cmpsl scas cmp (bad) mov loope mov arpl fildll mov aaa jnp inc add add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or in js add add cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf or xchg mov in cmc cwtl add sahf mov add add add inc push dec inc add add add add or add jbe xor xor xor cmp add add add add sbb add add add and jb outsb addr16 add add add cld or add push push add dec add adc add and dec inc add add dec add sbb add and outsl bound add add add add add push xchg mov add cli and add add add add add add add add add add add add add add add add or add xor add push add add add add add add add add add add add add add add add add add add add add add add inc add add inc add add add out inc add add add or and sub push add add add add int3 add push add add push add add add add or or add sbb push add jp push add add or or add or or add add or or add add adc add add adc push add inc adc add add mov add adc adc add adc adc add adc adc add adc adc add rclb push add jge push add stos adc adc add adc adc add adc adc push add inc adc add cltd adc add add add adc or cli adc push add adc add add adc adc adc jg adc pushf adc sbb push add mov add add adc add add adc add add adc push adc ja inc add add add add adc fcoml adc inc add add push inc add add push int push add int push add add add push int push add push int push add pop inc add add inc add add inc add add inc add add add add xlat pop inc add add sbb fildl push sbb add add add add fstps out adc repnz or add sbb sbb sbb add sbb push add add enter or out clc sbb add sbb sbb add mov sbb sbb mov adc mov add sbb add add sbb add add sbb add add sbb adc add sbb or add sbb sbb push add pop sbb add add add add sbb push add sbb push add sbb adc int push add add inc add add inc add add add add sbb adc inc add add out adc mov add sbb and adc push mov adc pop push out push add mov add push sbb push add push sbb push add sbb or inc pop sub push add sbb push add add add sbb push add pop sbb add add sbb add add add add add add and sub add add add add sub add add add add add add add add sub xor add add adc (bad) or push add add add add add add add mov pushf or add add adc jmp add add add add or add add add add or das add add push add cmp das add add add in sub add add add mov add add add sldt pop add add add add add push add add add add add add add add add add add add add add add add add add add add add add adc add arpl adc add imul add add push add add push add add add add add add add add add add add mov add xor add add add adc add push add add add push add add mov add jle mov add xchg add add add add lock add add or add add or add add sbb xor repz or add add or add add or add add dec add add or add add or adc sbb sbb jmp push adc add pop push adc add pushw adc add jno or add (bad) push or add lidtl add add maskmovq testl add push sbb and add mov add add les dec add add add add pop add add add add outsl add add add add xchg add add add add cmpsl add add add add mov add add iret add add mov add add inc or add add add add cmc add add add add push add push add and add add sbb inc add add and add add xor dec add add and add add inc add pop add and add add pop add or hlt and inc or pop add add and add add js inc add add and add add mov inc add add add add add sahf add add add add add add and add add add add or pop and add add sbb and push add and add add add add add add add add add add add add add rolb add add add add add add xor add add push add add xor add add add add js add add push add mov add add and add add dec add clc cmp add add add bound pop add cmp add add add add add add les dec add add add add add add add add inc or add add and inc or jg add add inc or add add mov add add lds cwtl and add add rolb mov add fildl test add call add add cmc add mov add add push add add and add add adc dec add add and add add and push add add and add add xor push add add add and inc or add and add add dec push mov and add add pop push cmpsb add add and add add imul add cmc and add add jbe inc add (bad) and add add addl push and add add nop push mov and add add lahf push mov add and add add mov add and add add aad mov daa add add and inc or push mov and add add adc ret add and add add and movl add add inc or pop dec add add add and inc or pop push add add add add inc or dec add add add and inc or push add add add add inc or inc add add add and inc or inc add add add add test inc add je add and inc or add add add inc or add add stos pop cmp sub add add mov add add aad mov and add add out pop mov das add inc or or add add inc or or inc add and inc or mov and add add pop or xor sub add and inc or pop add add add add or add add and add add sbb and xor repz add add add or add add add or aaa and add add or or add add and add add or or add add add add adc bound xchg add imul add add sbb and xor jae add add adc imul jo add add push or and add add or add add sbb and add add or push add add add or pop add add add or add add or add and add add or add and add add sbb xchg add add inc add add adc sub or add add add lahf add add and add add sbb and cmp daa and add add add cmpsl add add add add lods add add add add add add add movb or push and add add or add add add push or add add or add push or add and add add or or out add add push or or daa and add add add cmpsl add xor add add lods add add add add add add add add dec add add adc sub pop and add dec or pop and add add sbb and aas add and add das push in add add and add add sbb and aas add add sbb and aas add add add les dec add add add add add inc or add add and inc or add add add inc or push inc add jbe add and inc or push inc add jg add add inc or push inc add xchg inc or push inc add nop and inc or push sub inc add add or xor inc add add sbb sub inc add add xor xor inc add add add add add add add bound inc add add add add add test add add test add add test add add test add add test add add test add add test add add test add add aam add add fildl add add aam add add fildl add add aam add add fildl add add aam add add fildl add add aam add add fildl add add dec add aam add add fildl add add aam add add fildl add add aam add add fildl add add push add add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add test add add adc add or add add add add add add add add or pop or insb or call add or add add or add add add add add add add add add add test add add test add add test add add test add add test add add aam add add fildl mov add add and leave add sub flds inc add add add aaa add add aaa add add aaa add add aaa add add aaa add add add add aaa add add aaa add add aaa add add and xor inc add add add aaa add inc add add inc add add inc add add ds and jno inc add add inc add add add add push cltd add and or inc add add pop or cltd adc pop test add add add pop mov ret adc pop test pop mov pop adc inc add add add and and inc add add add and xor inc add add add add adc xor add cltd pop flds inc add adc nop adc mov mov add les mov loop lret add adc clc adc add add lahf pop add mov inc add pop mov aas push fiadd mov dec push sti add push push in sbb gs ljmp pop sbb jp stc pop sbb dec push sti add add add add mov scas push or mov mov add push aaa add add push invd cmp notl push or adc sbb sub and add cs add add pop and mov lcall pop sub xor insl pop xor popa add push aaa add inc add or lods pop or lds inc or add pop push or add pop sbb or out pop dec or add sbb pop mov nop adc mov xor pusha or add add add add add sti add or add add add push aaa add add add add sbb add or add or add or add or add push aaa add add and mov jno and mov jbe and mov jnp and leave add add add and dec add sbb add add and sub fstpl mov loope inc add add xchg or add sbb add add sbb add add sbb add add aaa add add pushf or add mov adc js aaa add add lea test sbb sbb sbb or add sbb or add out sbb loope in or add sbb or add ljmp sbb or add and inc add sbb or xor and cmp mov aas sbb sbb adc inc add add mov jae mov jns inc add pushf or add add add add inc add add inc add add inc add add inc add add add sbb add add sbb or add sbb or add sbb or adc sbb jno repz or or or or add sbb or or dec sbb add or or add or add pop test add lcall push aaa add add sbb or out repz add sbb or add sbb add pop test pop imul roll sbb push sbb inc add imul imul imul imul imul jno fstps negb inc add add add add push push and loope xor jno jmp or add jo imul jmp or add das push in add das push in add das push in add das push in add das push in add inc add add inc add add inc add add inc add add inc add add or add add push mov or add add add or add push mov pop lret add pop rorl sbb pop mov or add or or add add add gs outsb or xchg inc add add push jmp pop sbb mov pusha pop ljmp or lcall pop push or add pop push or add pop add add sbb push push or call add pop lods add add or add add repz add add add add add add add add add add add add add add add add add add pop add add push add add push add add je add sahf add add stos add mov repz jnp repz addl add jae repz jnp repz jnp repz addl add jae repz add add add add and add add add add add add add repz add add repz add repz add add repz add add add repz add repz add add repz add add add add add add repz add repz add add add add repz add add add add add add repz roll push push inc add add repz jnp repz addl add mov add add add add add add add push add add add add add add repz add repz add add repz add repz add repz add add repz add repz add add repz add repz add add repz addl add jnp repz xchg add add jnp repz addl add add add repz add add add repz add add repz add add add repz add add repz jnp repz addl add add add repz add add repz add add add repz add add repz add add add add add add add add add mov repz lret add add repz lret add add repz push mov add push rolb repz add add loopne jnp repz add add push add and inc add pusha add popa add addb add mov add add repz add loopne jnp repz add loope fildl repz push jnp repz push addl pop add jnp repz push jnp repz push addl pop and jnp repz jnp repz jnp repz addl pop pusha push jnp repz jnp repz addl pop addb add add pop addl mov add push jnp repz push jnp repz pop jnp repz pop jnp repz jnp repz jnp repz add add pop jnp repz pop jnp repz or repz or repz jnp repz jnp repz add add or repz or repz or repz or repz jnp repz jnp repz add add or repz or repz or or or or or or or or or or or or or or add add mov repz mov repz add add inc add inc add inc add inc add repz or add mov repz push mov push mov push mov repz mov push mov repz mov repz add add repz push mov repz push mov push mov repz jnp (bad) add add jnp repz add add (bad) add add (bad) add add adc repz adc repz jnp repz jnp repz add add add add add test outsb or or test or or or add add add add add add add add add add add add sub or add imul outsb add add add add or jae add sbb jae add sub js add cmp add jae add ja jae add jle jae add test jae add mov js add xchg or add mov add add add or add (bad) or add add or add add or add add faddl add push or add sbb js add or add sub add outsb add add xlat add add xlat add add add add add or add out or or add add add or add mov jae add xor add ret add add add add add fild add in in add aas push repnz add jae add outsb (bad) add add jae add orb add add add add add add add add add add add add add add add add add add add add add add add add add add or add push add add add add add add add add add add add add add add adc add and add add add add add add add add add add add add add add add sbb add sub add add add add add add add add add add add add add add add and add xor add add add add add add add add add add add add add add add sub add cmp add add add add add add das add add xor add inc add add add add add xor add inc add add add add add aaa add add cmp add dec add add add add add cmp add dec add add add add add inc add add add add inc add add inc add add add add dec add add dec add add dec add add dec add add push add add add add push add add push add add push add add push add add push add add pop add add pop add add add add pop add add pop add add pop add add add add add or or or or add add add add adc add add add add inc add add add add add sbb add add add add add roll add add add add add add add loope int add add int add fmuls add notb add shrb add add sbb add add add add inc adc add add add add jno add or or or or or or str add add add add add add add add add add add add or add or add or add or add or add or add or add add push popa jb outsb jae and popa imul insl cs add gs outsl jne inc outsl js add jb outsb jae pop inc insl popa imul insl add jae gs cs imul inc outsl jb jae inc outsl jb add popa bound popa jns jne push popa outsb gs add insb gs popa jns jne push popa outsb gs add outsl outsl push imul outsl js push imul outsl js pop dec popa bound push jb fs je popa insl add gs add popa bound push gs imul bound inc outsl insl jo outsb jns popa insl add gs inc outsl js gs jb jo imul je outsl js pop dec dec inc jne je outsb add je outsl outsb add popa bound inc outsl jo jb addr16 insl jo outsb outsb je add jae gs add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add arpl add jo jae add jo jae outsb add je push popa bound popa jns jne push popa outsb gs add je push popa bound popa jns jne push popa outsb gs add je inc jbe outsb je push popa insb jne add je dec outsl outsl push imul outsl js jae je dec outsl outsl push imul outsl js addr16 dec popa bound push jb fs je popa insl add je dec popa bound push jb fs je popa insl add je dec popa bound push gs imul pop dec popa bound push gs imul pop dec popa bound inc outsl insl jo outsb jns popa insl add je dec popa bound inc outsl insl jo outsb jns popa insl add je push gs inc outsl js gs jb jo imul pop push gs inc outsl js gs jb jo imul pop dec dec inc jne je outsb add je dec dec inc jne je outsb add je dec popa bound inc outsl jo jb addr16 je dec popa bound inc outsl jo jb addr16 imul inc outsl insl jo outsb outsb je inc bound je outsl js pop dec outsl popa add arpl insb imul je jb jae jae outsb fs add inc jne je outsb pop inc insb imul outsl push imul outsl js dec popa bound push jb fs je popa insl add gs push gs imul gs inc outsl insl jo outsb jns popa insl add je outsl js gs jb jo imul jne je outsb add gs inc outsl jo jb addr16 jb xor pop dec popa bound xor pop dec popa bound xor pop dec popa bound xor pop je je insl popa imul jne push arpl je je gs popa add je push outsb add jb addr16 jae inc popa jb add outsl addr16 jae inc popa jb pop dec popa bound xor pop dec outsb jne je imul jne je imul jne push outsl outsl insb push je imul je insl add insb push je imul je insl add gs insb outsl jo jb outsl outsl insb push je imul je insl add jb jne inc outsl js add outsl jne inc outsl js pop je je popa jae ja jb add js push jae jb popa insl add popa bound add popa bound xor arpl gs outsl js add imul je imul je insl add js je outsl outsl insb push je imul je insl add insb gs jb insb insb push outsl outsl insb push je imul je insl add jne je outsb xor inc outsl jb xor outsl popa add outsb push outsb fs inc insb imul gs outsl jo jb outsl outsl insb push je imul je insl pop inc insb imul jae push dec pushw imul jae imul imul popa addr16 addr16 push jo gs addr16 inc dec dec inc dec dec inc dec dec inc dec dec inc inc dec push jo add popa imul outsl gs add popa add imul jb jo outsb jne je insl pop inc insb imul popa jb insb insb push outsl outsl insb push je imul je insl pop inc insb imul je outsb xor insb imul pop dec popa bound xor jae je dec popa bound xor addr16 dec popa bound xor jae je dec popa bound xor addr16 dec popa bound xor jae je dec popa bound xor addr16 je je insl popa imul js inc insl popa imul js push jne push arpl gs je je jne push arpl gs je je gs popa add je je je gs popa add je bound outsb add je bound outsb add je push jb addr16 jae inc popa jb add je push jb addr16 jae inc popa jb add je dec popa bound xor jae je dec popa bound xor addr16 dec outsb jne je imul pop dec outsb jne je imul pop inc bound je outsl outsl insb push je imul je insl add je inc bound je outsl outsl insb push je imul je insl add je inc gs insb outsl jo jb outsl outsl insb push je imul je insl add je inc gs insb outsl jo jb outsl outsl insb push je imul je insl add je inc jb jne inc outsl js add je inc jb jne inc outsl js add je je je popa jae ja jb add je je je popa jae ja jb add je je je jae jb popa insl add je je je jae jb popa insl add je dec popa bound add je dec popa bound add je dec popa bound xor pop dec popa bound xor pop push imul outsl js add je push imul outsl js add je inc imul je imul je insl add je inc imul je imul je insl add je inc js je outsl outsl insb push je imul je insl add je inc js je outsl outsl insb push je imul je insl add je inc insb gs jb insb insb push outsl outsl insb push je imul je insl add je inc insb gs jb insb insb push outsl outsl insb push je imul je insl add je inc jne je outsb xor jae je inc jne je outsb xor dec popa bound xor dec popa bound xor dec popa bound xor je je insl popa imul bound arpl js dec gs popa add outsb push outsb add outsl addr16 jae inc popa jb add gs xor dec outsb jne je imul jne push outsl outsl insb push je imul je insl add gs outsl jo jb outsl outsl insb push je imul je insl add outsl jne inc outsl js add push popa jae ja jb add push jae jb popa insl add gs add gs xor je jb inc outsl js add insb gs outsl outsl insb push je imul je insl add imul jb jo outsb jne je insl add gs jb insb insb push outsl outsl insb push je imul je insl add je outsl outsb xor dec jns jo insb imul add jb outsb jae pop inc insl popa imul insl cs jns dec imul je push imul jae arpl push imul outsl jb jae jo insb imul inc popa jae add arpl jae data16 push imul jae arpl inc jo insb imul push gs imul imul add inc jb popa je dec popa imul push gs jne arpl add jb outsb jae pop inc insl popa imul insl cs jns push gs jne arpl add push arpl gs jne arpl popa outsb add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add jae jne arpl jne je jb add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add je push gs jne arpl popa outsb popa addr16 addr16 inc jne je jb add je inc jne je jb add insb jne add insb je jb add push gs imul jo imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add popa jne je outsb jae popa outsb arpl popa fs popa outsb fs gs popa fs popa outsb fs gs outsl arpl bound arpl arpl outsl jb inc jne outsl push popa jbe push gs imul je inc gs jne je inc gs jne je dec jns gs imul jo jb jns addr16 push gs imul je imul inc outsl insl jo je jb inc outsl insl jo je jb dec imul je push imul jae arpl inc gs arpl add push jb push arpl pop inc outsl insl jo je jb bound arpl outsl jbe fs insl pop inc jo dec bound arpl outsl jbe fs insl pop push jae jb bound arpl outsl jbe fs push jae jb insl pop dec jns outsl jb jae bound arpl outsl jbe fs insl pop dec jns bound jb imul arpl outsl jbe fs addr16 inc outsl insl jo je jb addr16 inc jo insb imul add je push jae jb addr16 inc outsl jb jae addr16 push bound jb imul jo imul add jb jae push bound jb imul inc outsl jb jae insl pop inc outsl jb inc imul je add jae je bound push jns je insl cs outsl insb insb arpl outsb jae insl pop inc bound je outsl js add inc outsl jb xor insl pop push jo popa jae push arpl outsb xor inc jb popa je pop pop dec outsb jae popa outsb arpl pop add outsb jae popa outsb arpl inc imul pop dec outsb jae popa outsb arpl pop add jae popa outsb arpl inc jno popa insb jae outsl add je popa jae inc outsl fs je jns add add je imul pop inc bound je outsl js add je inc outsl jb xor addr16 push jo popa jae push arpl outsb xor jae je inc bound je outsl js add je inc outsl jb xor jae je push jo popa jae push arpl outsb xor push jo popa jae push arpl outsb xor dec jns bound jb imul jb popa fs popa gs bound arpl outsl jbe fs xor insl pop push push push je je arpl insb jne add je inc gs outsb jae popa outsb arpl inc gs outsb jae popa outsb arpl pop inc jo insb imul push imul jb imul jo jb addr16 popa imul je popa outsb gs add gs imul je popa outsb gs add je inc jo insb imul push imul pop inc jo insb imul push imul pop push gs imul pop push gs imul pop inc outsl jo jb addr16 je inc outsl jo jb addr16 je dec popa imul je popa outsb gs add je dec popa imul je popa outsb gs add je inc gs imul je popa outsb gs add je inc gs imul je popa outsb gs add insb popa jae push arpl outsb xor outsl popa add jo imul push imul jae outsl outsb add jo jb addr16 imul je popa outsb gs add popa imul je popa outsb gs add jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul aaa inc xor xor inc cmp inc xor aaa xor inc ss cmp inc aaa inc cmp xor xor add push je je arpl jb jns outsb imul jp cmp popa insb jne push jns add jb outsb jae and popa imul insl add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae inc jae gs bound imul imul jns je insl cs gs arpl outsb add jae insl bound gs jb jo imul imul jae gs bound outsl insl jo outsb jns je jb bound add jae insl bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add addr16 jb insl gs jb inc je jb bound add jae gs cs jne je insl gs gs imul inc gs outsb gs outsb gs je fs je jb bound add arpl jae data16 push imul jae arpl inc outsl insl jo insb gs gs imul insl jo insb gs outsb gs je fs je jb bound add arpl jae fs push push gs jns je jb bound add jne addr16 outsl outsb push jae jb outsl fs je jb bound add jne addr16 je jo push push imul outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add inc push push inc je jb bound add jne addr16 imul jb bound add popa outsb fs jb dec outsl fs gs je jb bound add fs outsl fs gs popa insl gs je jb bound add insb jo gs outsl jb inc je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs cs gs outsb add inc jb jne inc outsl insb insb arpl outsb inc je jb bound add gs fs je je arpl je imul popa jb outsb jae pop inc insl popa imul insl cs bound je outsl js jb,pn jae jne arpl add jb outsb jae pop inc insl popa imul insl cs outsl jb xor jb jae jne arpl add jb outsb jae pop inc insl popa imul insl cs gs jne arpl jb,pn jae jne arpl add jb outsb jae pop inc insl popa imul insl cs jo popa jae push arpl outsb xor jb jae jne arpl add push popa imul dec inc pushw push gs jne arpl add outsb je popa outsb fs gs popa fs dec outsl popa add imul insb add outsb je outsl insb add insl outsl jbe pop inc insb imul pop inc insb imul jo outsb outsb je gs jne arpl popa outsb popa addr16 inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add jae outsb fs popa jns jne add jne jo jb dec outsb imul add imul jae je inc outsl insb jne outsb inc outsl jne je addr16 inc outsl insb jne outsb push je insb gs push popa bound popa jns jne inc outsl insb jne outsb push je insb gs outsl insb insb arpl outsb add insb jne outsb push je insb add jp push jns add add je inc outsl outsb je outsl insb jae push popa bound popa jns jne inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add je inc outsl arpl inc outsl arpl je insb add jae gs cs jb ja outsb add imul pop dec outsl arpl imul pop dec popa insl add je push outsl ja outsl jne je addr16 push outsl ja je insb gs push popa bound popa jns jne push outsl ja je insb gs outsl insb insb arpl outsb add ja je insb add jp add je push imul pop push popa bound fs inc gs bound arpl insl popa add je dec insl popa add je outsl ja jo outsb add je push imul add arpl gs outsl js imul add je push popa bound outsl jo push popa fs pop dec popa jb imul dec popa js insl jne push imul pop push gs add je push gs inc insb imul je outsb je insb imul add insb outsl jb addr16 push push insl outsl imul gs inc outsl js popa jae add je inc popa arpl outsl insb outsl jb jae je dec jne je insb imul pop push gs fs outsb insb jns jae je push arpl insb insb inc popa jb add jb insb insb inc popa jb add je inc outsb arpl jb inc outsb arpl jb je insb gs jae je inc imul jae insb je inc imul jae insb je inc jne je outsb inc popa jae add jp inc add outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs je push push jae je inc popa outsb arpl inc jne je outsb add jne je outsb inc outsl outsb je outsl insb add je inc insb imul add outsb je outsl insb inc outsl insb insb arpl outsb add je inc outsl jb inc outsl jb gs je insb add jb inc outsl jb gs je insb add je dec popa js insl imul jae je dec imul inc outsl js jae je push popa fs pop push push push popa jae bound add je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add jae insl gs popa jns jne add jb outsl jb dec popa jns jne add fs outsb imul arpl imul add je dec outsb outsw add jae insl bound outsb outsw add je push imul jb je jb add insl jo jb push je imul pop inc jae gs bound popa insl add je add jae gs cs dec add je imul imul je outsb jae outsl outsb add jb outsb add jb popa je inc insb outsl jae add fs outsl ja push jo popa je add gs add jae gs cs push imul gs jae je push imul dec popa imul add jae gs cs gs dec popa imul insb imul je push popa insb jne add je push gs add je outsl jb inc jb fs je popa insb add jae gs cs gs jae je inc jb fs je popa insb jae dec inc jb fs je popa insb jae jns outsl jae add je push outsl jb add je dec outsl jae add je inc outsb popa bound jae add imul jae jae je inc jb insl add je push outsl add imul jae outsl insb insb arpl outsb add je push jne push arpl gs inc outsl fs push outsb add outsb arpl add je jb arpl outsb add addr16 outsl js dec jae inc outsl js gs insb je dec jae inc outsl js je insb add imul je add jne add je add jae pop gs add add insl jo jb add jae insl bound dec outsl popa add jb jns imul dec popa je inc imul dec popa je inc gs push jne je insl gs gs jo jb add je bound arpl insb jne add je dec je insl add gs popa insb insb add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl addr16 inc jae gs bound dec outsb imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add outsl push arpl je add fs jo add gs jb jae je inc jne outsl push imul pop push imul outsl insl inc jb bound addr16 push gs jb outsl jb add je dec popa outsb add jb outsl jb jae je inc jne jae jb inc outsl outsb je inc outsl outsb je je insb add popa jo imul add je inc outsl outsb je addr16 dec popa jbe outsb fs jae je inc outsl jb inc outsl insb outsl jb jae je push jae push imul jns gs popa arpl outsl insb outsl jb push outsl outsl insb push je imul dec je insl jae push outsl outsl insb push je imul outsl insb insb arpl outsb add insb push je imul inc fs popa outsb add outsl insb push je imul outsl ja dec je insl add je inc jb jo outsl ja dec je insl jae jae je push popa jae ja jb inc push gs push popa outsb dec push add outsl outsb add je dec arpl add je dec popa imul je imul push jae inc outsl insl jo je bound gs push outsb fs outsb add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add je outsb je arpl imul add je dec jae imul jae popa outsb arpl jae je inc outsb popa bound imul jns gs jae je push popa jbe dec jns gs imul js je jae je push push ja push je insb add jne outsl ja dec outsl fs je dec popa imul push gs outsb arpl jno popa insb jae push gs imul add outsb arpl outsl outsb imul je push popa jbe dec jns gs imul js je push popa jbe add push arpl outsl ja outsl outsb je outsl insb add arpl outsl jb jns arpl imul popa insb jne push jns add outsb imul gs push push ja inc jbe outsb je popa outsb fs gs popa fs push push ja add imul je outsb jbe arpl imul jo imul pop dec jae imul add outsb je imul push je insb jae inc gs gs jne arpl je imul popa insb imul imul jo imul imul inc jb popa je dec outsb jae popa outsb arpl push gs jb push arpl jb jb inc js gs imul pop dec outsb outsb gs js gs imul pop dec gs popa add insl outsl jbe add insl jo outsb outsb je inc jb jne outsb je js gs imul pop inc popa arpl jb jne fs insl popa add je inc popa arpl jb jne fs insl popa addr16 popa jns jne add popa addr16 popa jns jne add je inc jo push je jb imul pop push jb outsb jae popa jb outsb je push jns je insl inc outsl insb outsl jb add je inc arpl gs popa jo imul pop inc outsl outsb je outsl insb inc outsl js addr16 dec popa push jb dec outsb je xor addr16 dec imul add push add bound insb add dec add jns outsl add je push add outsb add insb add sub add outsl add imul jne jb add outsl add add insl add add add add push add arpl je jne jb add outsl add add dec add bound add add outsl add add je dec add insl add add push add jb popa add jae push add popa add insb add add jns jae je add add dec add bound add add jb jae imul add push add jb jae imul and xor add add sbb bound add add jo jns jb imul je add inc add jo jns jb imul je add dec add bound add add insl add popa add jns dec add insl add add inc add insl add popa add jns and dec add insl add add js je inc add js inc add jae arpl jb imul imul add dec add inc add je je outsl add add add dec add adc bound outsl add je inc add js xor add inc add outsl add je and inc add jbe add add add add add inc add outsl add je and jnp xor jge add add jbe add add add add jns and push add jb popa add jae push add insb add popa add add popa add popa add jae push add add popa add insb add add outsl add add add jo jns jb imul je test add add add add add popa add popa add jae push add add je imul jae add add jae and jo jb outsl add jb popa add and jae add add and add popa add insb add add jb outsl add and jns outsl add jb and add imul imul and inc add inc add dec add add insl add imul popa add arpl outsl add outsb add add sbb je jo add insl add imul arpl outsl add add push add add push add add add outsl add add imul push add outsb add add add and popa add imul add add outsl add and push add imul and and add je jb jns jo outsl add outsb add or jbe outsl add add pop inc add jb add add data16 pop push imul add add add push add data16 push data16 imul inc add inc add dec add data16 add bound add add adc popa add insb add add add add add or bound add add adc jne bound push add je and cmp add bound add add adc jae jae popa add add add add add adc add add popa add insb add adc je push add bound push add je add je dec add jae jae popa add add or jb imul add bound je outsb add add add adc outsb add add insl add imul push add outsl add jb add jae inc add jb xor add bound add add adcb add and push add outsl add add je and imul add jbe add add add add jns and push add jb popa add jae push add insb add popa add add add add add add add add add popa add popa add jae push add add je imul jae and jl add outsb add push add add jo xor add outsl add je push add outsl add add add jo dec add outsb add dec add add add inc add outsl add je add jbe add add add push add outsl add add add jo dec add outsb add dec add add add inc add jbe add add add add inc add outsl add jo inc add js xor add inc add arpl outsl add outsb add add outsb add outsl add insl add je imul add push add arpl je jne jb add outsl add xor add insl add add add push add arpl je jne jb add outsl add xor add je js je push add jae jae ja outsl add add pop je js je push add add outsb add insl add add bound add add adc popa add jae ja outsl add add add or bound add add adc jae add outsb add insl add cmp add inc add insb add push add outsl add add add jo dec add outsb add dec add add add inc add insb add add inc add imul outsl add insb add je jb imul add jne dec add add add inc add imul inc add add jb inc add add add insb add je jb imul add jne dec add add add inc add add jb and inc add add cmovb jne je je outsl add xor add push add add arpl outsl add add inc add jb insl add add xor jb popa add jae push add popa add insb add add jns jae je add and push add add add add add cmp jb popa add jae push add popa add insb add push add jae je add add add outsl add jb arpl add add push add outsb add outsl add insl add pop add add jne jb jae imul inc add jb insl add jb add je add xor outsb add outsl add insl add pop add add dec add outsb add jb inc add arpl add je imul add add outsl add add je jns and arpl popa add and outsl add insb add and bound add add add add add add outsl add add outsb add add dec add imul popa add outsl add je push add outsb add insb add add popa add imul add outsl add outsb add add popa add add pop dec add imul popa add outsl add je push add outsb add insb add and je popa add insb add dec add jns outsl add je push add outsb add insb add sub imul outsl add outsl add je and push add outsb add and push add jb imul push add jb jae imul add push add popa add insl add je imul inc add add and jo jo insb add arpl popa add add outsb add add add add add jbe add add add add jns and push add jb popa add jae push add insb add popa add add add jb popa add jae push add add popa add insb add add outsl add add push add insb add jae push add add outsb add add pop inc add jbe add add add add jns and push add jb popa add jae push add insb add popa add add add popa add popa add jae push add add popa add insb add add outsl add add add mov frstor cmp mov subb or xor mov push adc add adc add adc add adc add add add add or or add or adc adc adc add adc adc sbb sbb and add and add or add or adc add adc sbb push adc add adc add add add add add sbb and adc adc sub sub add sub adc xor xor add and sub add sub xor mov pop jg aad cmp push add adc add add cmp inc add inc add add cmp inc add adc add add push sbb add add and add sbb add sbb push adc and push adc adc push adc dec pop push adc sub push adc sub add adc add add adc add dec add add sub add sub or adc add add adc add dec add add sub add sub push adc push adc add adc push adc adc add add add xor add adc add add sbb and or add push add add add add or add or and adc or or and add xor sub adc add add or sub adc push adc add add add add add push adc and add or add add add add add add push add push jb jo outsl outsb inc js gs imul ja add imul add add add add push sbb add popa jb outsb jae and popa imul insl add add add add adc jo jb addr16 and xor xor add sub add xor cmp sub sub sub sub bound xor xor xor add add xor xor xor xor add add cs inc push inc jb insl gs jb sub gs imul xor add inc jb insl gs jb inc imul popa insl adc dec inc push and popa insl gs jb and add add adc popa bound popa jns jne push popa outsb gs add adc add dec outsl outsl push imul outsl js add popa bound push jb fs je popa insl add adc add popa bound push gs imul add dec popa bound inc outsl insl jo outsb jns popa insl add pop add adc je outsl js gs jb jo imul add dec dec inc jne je outsb add adc add dec popa bound inc outsl jo jb addr16 add push dec popa bound xor add add push dec popa bound xor add add push dec popa bound xor add js inc insl popa imul je je jne push arpl sgdtl or dec gs popa add or add bound outsb add adc add jb addr16 jae inc popa jb add or add dec popa bound xor add add or outsb jne je imul add inc bound je outsl outsl insb push je imul je insl add pop add sbb gs outsl jo jb outsl outsl insb push je imul je insl add push add or outsl jne inc outsl js add adc add je je popa jae ja jb add adc add je je jae jb popa insl add or add dec popa bound add or add dec popa bound xor add push imul outsl js add sbb add push outsl outsl insb push je imul je insl add sbb add push outsl outsl insb push je imul je insl add push add sbb gs jb insb insb push outsl outsl insb push je imul je insl add or add inc jne je outsb xor add push sbb add dec jns gs jo popa je or xor xor xor xor add and add xorb add add inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add add imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add add or cs gs imul add or cs outsl insl jo je jb add add push dec jns inc jo insb imul add or add dec jns push jae jb add jns inc outsl jb jae add add push dec jns push bound jb imul and push push push push pop add sbb jae gs cs imul inc outsl jb jae inc outsl jb adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop adc cs jns jb push arpl outsl jb jae add add jns je insl cs bound push gs imul outsl je arpl jae push outsl popa jo je jo insb imul je arpl adc gs je pop pop dec outsb jae popa outsb arpl pop adc jo jae pop pop dec outsb jae popa outsb arpl pop add add jo insb imul push imul add push gs imul add inc outsl jo jb addr16 add cmovge outsb dec popa jns jne push popa outsb gs add pop add adc popa imul je popa outsb gs add add sbb and add adc pop add adc sbb fldl add adc and and add push add jmp adc add adc adc add sbb or and add cmp and add or and add cmp and adc or addl and sbb push and add orl push and add adcl or or push and add adcl add adc add sbbl and add subl adc add push and add xorl and add addl inc push and add sbb and add orl orl and adc or push add add push add sbb add add add imul xorl cmpl jge and add subl push or add addl sbb sbb or or add adc add add or add add or push adc adc adc or orl add sbbl push push sbb adc add add add add sbb and sbb sbb adc sbb or or add adc adc or adc sbb adc add and adc sbb or or add adc adc push push adc push add add cltd pop and add adc adc or push aaa pop and add add add add lea orl add sbb orl adc or add sbbl mov adc add or add push and add add adc sbb and add push and add sbb adc sub add add add push push and add and adc add add sbb or add sub and add add add add sbb add add add and add cmp add and adc adc adc dec push adc sub adc sub pop add add cmp add push push sbb add add add add add add add (bad) or (bad) or push adc add or adc add add or or adc pop add add adc add adc add add add and add (bad) sbb and add push push sbb add mov add add add push mov add add pop inc outsl jb js dec popa imul jb gs insb add add add and 