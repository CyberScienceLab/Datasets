xor add add add add add add add adc add add add add push pusha xor add (bad) and add add and add add add orb add loopne add lea add add add add add addb add add jle jae add push jge add add sub add or sub add sub add add sub xor add add add add jle add add sub add adc add adc add add add adc add add add rolb add push or sbb add sub sub add push sub add push sub add push sub add push sub add jle add add inc jle add add inc xchg jle add add ss pusha and add add sub add xor add add add add adc and inc add add add add add add add add add sbb sub add sub add sub add add add sub add add sub mov add fldl add sub add push and add push jae add or add or or add sub add sub adc add sbb add add add jle add add add add push sub add or add add add add add add add add add add add add add xor add movl add bound add rolb add push sbb add mov pop pop pop lea add add add adc add push or adc xchg add add pop decb add sbb (bad) (bad) incl pop add add add or add or add arpl (bad) incl incl add pop pop push add arpl or pop or add inc (bad) (bad) incl pop and add add or add je add sbb add xchg add popa rcrb (bad) (bad) decl pop pop or adc adc (bad) decl pop xor pop or add add push pop inc xchg sub push jne add sbb add add xor add add jle add add add pop add add add or add add add add sbb add add add add add add add add add add pop add push es sub add push or add and or add xchg pop pop pop pop decb add push or pop or add repz add push xor adc add add sub sub add add push add push add push sub adc add add and inc add add add add add add add add add add add or add sbb fcompl push lea add add add add add or push je add sbb pop and add add ret add pop add push and xor mov add add add sbb adc add jae add or pop add add movd add add setno add add inc xchg popa and pushf sub sbb add testl add jle add add add push sub add push or adc add or add add add add add add xchg add add add add rolb add add or add and add and add add add add and movb add add add or adc stos rolb add add or add and lock add add or add add push xchg adc jge (bad) lcall sub jae add or pop je add add je add add add or add push jne add sbb add push fimul or add sub add fiadd sbb pop adc inc add add add rorb add push sub add add add adc mov add add add xor add add add add sub inc add add add add add add add add add add add or add sbb sub rolb or add and add and add add sub xor add add adc add add sbb pop inc or add add add add add add add add add add add sub or jb or rorb and pop adc icebp add add add sldt add incb sub push sub or adc add add or rolb add xchg pop or jnp add add sldt add or add push add or rorb add push sub add adc add outsl add add add adc add add sbb pop inc add add add add add add add and add add xchg add add push add sub and add and sldt or in add and pop add sub and add add pop or test push sub add or rorb add sub adc add roll add add adc add add add pop add add add or add cmp add pop add add add add add and add push add add add add add xor add dec add add or or popa pop jl push popa inc add add add add sbb pop jbe sub adc add add sub or pop pop or and pop or add and sbb pop sbb lcall sub sub adc adc inc add add add add add add add or sub addl add and add add pop add add and add add sbb add and add sub add sub add or sldt push sub push add push sub add add add adc and add add push add add or add es add add xor add add xor add xchg pop and add add sub sldt push sub cmp sub add or rclb add push sub adc add add add adc add add movd add add adc pop adc inc adc add out add xchg add add add add add add add int3 add add add cli add add add add add xchg add add add add add add add add add add add add adc add es adc sub mov or add add or add and sbb pop popa or mov add add (bad) (bad) (bad) jle add add add add pop lcall push cmp (bad) call mov add add in or add sub je add sbb add add add add push adc or or adc into add add add push cmp (bad) (bad) pushl add or add or add adc adc add sbb or pop xchg adc adc pop xchg adc cmp (bad) (bad) call or pop adc push pop pop pop adc and incl add arpl pop adc pop inc xchg adc cmp (bad) (bad) call push pop and or (bad) (bad) lcall push sub adc pop punpckldq or add adc xchg adc adc pop aaa xchg and add add push cmp or add mov or adc adc pop arpl add push cmp (bad) call add sbb add adc add sbb or pop pop adc pop xchg popa adc jne add sbb or or pop adc or popa shrl add or pop or push cmp or pop adc pop adc cmp (bad) (bad) call or pop xor pop or push cmp (bad) (bad) lcall or cmc adc outsl push add or add add add pop or add mov in (bad) decl jne add add add adc add movl add jle add add push sub adc add add add add or add addl add add add add add add jl add jl add inc add add adc add sbb add sbb add popa pop inc pop push popa inc add add or add adc pop jb adc sub adc adc and pop mulps add add add outsl pop add or pop adc incl pop pop or call and and sbb pop xor push adc lcall testb sldt add sbb add incl adc add clc add add add adc add add jle add add add or inc or add push add add add add add add add dec add add add push add add lea add add add add add addb add lea add add push jne add sbb and add popf or repz add je add sbb and sub je add sbb add push je add sbb scas push add popf push jne add sbb and adc jb or arpl (bad) incl jne add sbb and add popf push jne add sbb and add popf sbb (bad) incl je add sbb and add popf pop lea add add push je add sbb sub adc add es add sbb add and add and add add or or jecxz add and add add and nopl sbb add sub adc add sub xor in add add add adc add add add add push push adc add or add inc add add add inc add add add add add add add cmp add add add and add push or adc lret popa pop jo push popa inc add add push add add or add mov sub adc add add mov add add sbb add push pop pop or ret add xor add or xchg push add pop or pop pop xor sbb add jno (bad) call push and and jmp add add add dec (bad) (bad) ljmp push adc adc inc add add add add add add add add add add add adc sub pop (bad) (bad) incl add sub rclb add push sub add xor add add add add sub inc add add add pop add push es or fsubl cld cmp add and add add add sub add sbb add sub sbb add sub adc add dec add add add adc add add sub pop inc add add add add add sbb add or faddl add xchg or ds pop or shll pusha sub add and add add add sub add cmp sub add or rcrb add push sub adc add out add or add jle add add add add push sub add or add add add sbb add inc add add add add add xchg add add add add add add add add add add sbb add adc adc adc mov or adc mov add pop push pop push popa inc add add adc add adc add pop adc mov sub adc sbb add test mov add outsl sbb add or add add (bad) (bad) incl pop pop or and pop or push pop inc xchg pop or add dec (bad) (bad) decl sbb or adc inc (bad) (bad) call sub pop jne add add adc pop jbe push pop adc sub (bad) incl adc add jecxz add or or add add add push sub add or add push add add add push add add add add add add add add add add add or add xchg add rcrb add sbb add mov pop inc xchg pop sub add mov add dec pop push popa inc add add add adc lcall push pop cmp xchg pop adc xchg mov add outsl sbb push adc jb (bad) incl pop pop or pop or add add pop (bad) (bad) decl sbb or or add dec (bad) (bad) call push pop adc lock jne add add adc add (bad) (bad) incl adc add fild add push add adc add add add add push sub add or add or add mov add pop add add add add add add add nop add add add add add inc add add sbb push adc mov add mov add pop imul inc add add or add adc pop adc fwait adc cmc adc adc pop and add add addl add add add add or sbb add outsb (bad) (bad) incl pop pop or or adc and pop and adc push (bad) (bad) decl sbb or adc inc (bad) (bad) lcall sub pop jne add add sbb add xor (bad) incl adc add aam add sldt adc add add add add push sub inc or add addl add add add add add add add add adc add add add test add inc add add push add push adc out add add add mov or add lods add jg push popa inc add add add adc xchg push sub adc adc pop and add mov add add pop add or pop or add insb (bad) (bad) incl pop pop or add pop or add pop or adc push (bad) (bad) decl sbb or adc dec (bad) (bad) lcall testb sbb add cmp (bad) call xor add add add add jle add add sub inc add add add add add add add add add add add pop add push or ljmp or aam cwtl and add add add add add sub add add sbb add sub and add sub adc add cmp add add add sub inc add add add add add add add add add add add and add sbb sub and add lea add add add add add sub add sbb add sub and add sub adc add fadds add adc add jle add add push jle add add pop sub adc add add add add add add add add add add add add add add (bad) add add add add and add sbb add adc pop jl adc popa pop xor push popa inc add add add adc stc adc adc and sbb mov and add or pop and add add add add incl pop pop or call and add add sbb pop xor push adc lcall or cmc pop jne add add adc pop jl adc call xor add add or add jle add add add add push sbb add add or add inc add add add add add add add leave add add add add add add add inc add add or add add add rolb pop addr16 push popa inc add add adc add adc add add popf adc and and add add in adc pop push xchg adc test mov add sub add or pop pop or faddl add or pushf add add and pop add pop or pop pop xor adc add cmp call add add in adc pop pop xchg pop or add add xor add jle add add xor add xchg jle add add pushf add add add pop pushf pop adc or (bad) ljmp sbb or or add add add add add add add add and add sub sbb xor add add adc add add add pop add add add inc or add inc add add add dec add add add add add add add add add add add add add add or add push xchg or popa pop cmp push popa inc add add or add adc or sub sub add push pop pop or and pop or or pop sub xchg adc adc inc add add add add add add add and sub xchg add push add sbb add sub out mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc mov leave push stos mov leave push stos movsb leave push stos movsl leave push stos cmpsb leave push stos cmpsl leave push stos stos leave push stos stos leave push stos add push xchg std push push xchg std push push xchg std push push xchg std push push xchg std push push xchg std push push xchg std push push cwtl std push push cltd std push push lock push push icebp std push push repnz push push repz push push hlt std push push cmc std push push idiv push push idiv push push clc std push push stc std push push xor push push xor push push xor push push xor push push xor push push xor decb push aaa decb push cmp push push cmp push push push decb push push decb push push decb push push decb push push decb push push decb push call add add add add add add push add push add xchg add cld push add and add dec pop add lar add add add add mov add mov add faddl add add add add add addb add add add add add add and add add add add add add add add sbb add mov add add add insl add add add add add add add add add push add jecxz add or add xchg add add add add and aaa add add xor bound xor add add add sub add add add add arpl aaa add add xor bound xor add add add sub add add add and add add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add pusha add and add add add xor bound xor add add add sub add add arpl and add add add xor bound xor add add add sub add add add add add add xor bound xor add add add sub add add add add and add add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add ret and add add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add call add add add xor bound xor add add add sub add add add add and add add add xor bound xor add add add sub add add add sgdtl and add add add xor bound xor add add add sub add add add add and add add add xor bound xor add add add sub add add add xor add add add xor bound xor add add add sub add add push dec add and add add add xor bound xor add add add sub add add add add add add xor bound xor add add add sub add add add add and add add add xor bound xor add add add sub add add add (bad) add and add add add xor bound xor add add add sub add add add add and add add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add mov add add add xor bound xor add add add sub add add add add and add add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add or add add add add xor bound xor add add add sub add add pusha sbb add add add xor bound xor add add add sub add add add add add add xor bound xor add add add sub add add add inc add and add add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add add imul and add add add xor bound xor add add add sub add add add add and aaa add add xor bound xor add add add sub add jmp add and add add add xor bound xor add add add sub add xor pop movsl add and add add add xor bound xor add add add sub add xor les add add add xor bound xor add add add sub add xor xor add and add add add xor bound xor add add add sub add xor xchg fild add add add add xor bound xor add add add sub add xor push repz and add add add xor bound xor add add add sub add xor add arpl aaa add add xor bound xor add add add sub add add arpl aaa add add xor bound xor add add add sub add add sbb add arpl aaa add add xor bound xor add add add sub add add add arpl aaa add add xor bound xor add add add sub add add inc add and aaa add add xor bound xor add add add sub add add push add and add xor xor xor popa add sub add add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lds add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc jecxz icebp xor cmp sarl and push inc negb addr16 adc fsubp jo (bad) mov jnp int3 ret out fnop jns adc nop pop add arpl ds jmp cmpsl xchg das xchg and add (bad) mov mov xchg mov pop out jle mov test mov test ret mov dec push jnp fwait test mov or jmp iret ds cmp out cli mov mov movsb out inc inc mov or ret (bad) into lods push and or (bad) in push and inc lds cmp mov mov or sub sub fisttpl in and dec outsb jg bnd or daa mov into clc cs mov push add sbb mov dec dec or xor loopw aam dec jb divl fcmovb flds icebp (bad) mov rclb inc mov clc jnp fwait xor (bad) and fsubl jns imull jmp xchg cltd fldt sti imul or inc aaa xor jecxz popa outsl (bad) mov aas stos mov cs inc loopne jmp das fadds jns int3 cmp jae adc scas (bad) (bad) and (bad) jle lods pop es jmp jecxz (bad) pusha jbe adc pop sahf xor sub (bad) mov mov pop sbb sbb ret push int3 mov sahf jg gs push insl ds dec mov call inc or and mov xchg sbb xor and push subb dec sbb nop or sub (bad) mov xor loopne add sbb out mov cmpsl mov fcomps xchg adc mov dec xor push movsl xor shrl jl jecxz rorb dec jno xchg xchg int3 sarb in pop push in add dec cmp mov pop add xchg mov mov xchg push mov mov out outsl lahf in push push test lret mov movsb repnz push xor mov mov iret pop cmp dec mov mov inc ss or jae inc pop aad sbb lds add movsl stos (bad) sbb lcall push xchg jno out push mov rcr jbe add jp cld fisub dec sub and mov push lret outsb sub push inc sbb or scas fstpt ret xchg pop and mov pop mov lods call xchg add adc sbb pushf mov out mov pop das imul nop or and push test push pop mov push mov push jno and push mov xchg cmpsb dec subps lea jle mov xor lods push dec scas ss jge xchg cltd pop xchg into cwtl push sti outsl testb ds mov mov test jecxz jle xchg jbe fldl xchg mov les xlat sahf scas pop mov or scas sub out sub pop inc sbb cld shl jne inc movsl lcall mov push lcall xchg sbb cmpsb insl xchg ret fcompl sti into mov xorl xchg inc mov or stos lock jg jg mov pop mov mov xlat xor xchg jge push inc in out pop sti mov es push das mov hlt add mov dec mov aas xchg xor into inc in stos cmp fldenv mov cltd lods cmp xchg inc mov movsl loopne (bad) lret std dec mov std movsl data16 cltd add data16 rcr test mov pushf fistl add lds add xor jb pop xchg mov adc out repnz push stos movsl sbb test mov pop dec ja lret out loop lcall (bad) cs mov jne lret lret or sti add fstpt call push jbe pop lods addr16 pop repz shlb sbb stos pop add ficompl sub inc test pusha sbb adc loopne lcallw and popa push divb scas ss call les outsl cld pop jne stos and jns movsl pop jnp mov adc aaa and mov dec (bad) test adc push fcom movsb fnstenv and sub pushf sub inc fwait adc sbb (bad) push mov (bad) int3 or ret xor and jbe ret dec push pop (bad) mov push test sahf adc sub mov adc jle adc aas dec sti ljmp sbb cld lret jo addb and lds in sbb xchg das je (bad) pop xchg (bad) xor xor dec jmp xchg mov jno push mov ror test or and and adc xchg lret (bad) enter je popa lods rolb mov popf and xchg jle std sahf xor mov stos mov inc sub pop je movsb mov push jne (bad) jno js and sbb xchg inc jmp sub popa xchg fistpll adc in mov lods jns xor mov push pop inc sbb mov leave mov cmp add ret cmp adc loop xchg push xchg inc mov mov outsl insb cmp lea (bad) in xchg mov sbb scas add pop in nop add mov xchg push fcoml (bad) add (bad) xchg (bad) sub jl mov fstl fsts xor push xchg in xor jns adc xor pop mov and jp in and lds jnp ljmp mov out fbstp jnp ljmp push cmp fwait inc imul sub scas mov (bad) or pop pop test cmp sub out push and pushf inc adc adc mov ret mov cld pushf pop sar xor aaa sub fdivrs push sbb jle fnclex mov cmp fwait push (bad) xor inc push push ss lods dec sub leave lahf cmp (bad) daa cmp into js out pop pop nop into add es sub stos pop (bad) inc in pop (bad) out loop loope adc xor lods sbb (bad) loop es (bad) lock xlat sbb or inc sti bnd mov pop lret outsb bound loop xor orl repnz loopne fisub (bad) mov scas shrb hlt outsl lret pop and xchg pop loope repnz imul notl lds mov lock cmp js sub andl sub fs cmp add ljmp xor cmc js sub pusha incb imul add xchg lods loop movsl mov inc push loope jmp and cwtl aaa (bad) mov jns lock jg xor movsl js xchg cltd push dec dec push dec jge dec jmp mov std jnp push bound test fadd or xor (bad) hlt dec test clc enter pop stc push dec xchg fidivl xor popf cmpsl add mov pop sar fnstenv mov mov mov and add jle inc push add scas clc inc lds or fwait cmpl jecxz vpslld ret xor push xchg es shrb cld popa push divb stos and jl (bad) arpl jne aaa cs mov push popa ljmp add decl mov addr16 jnp push (bad) mov mov mov pushf stos xchg cli (bad) ficompl iret out mov mov jno and inc enter jo xor sti or push push out sbb jae xlat pop lods jl lahf push test bound sbb mov cmp dec addr16 rcr mov pop scas sub jbe cmp xchg movsb jl xchg mov xor mov lret mov mov aaa mov pop adc xor or fwait inc dec dec add aad sbb pop and arpl das popf mov test xor scas les aad or mov xor dec cmpsl mov xchg sbb or (bad) lcall and xchg sub ret inc and sub out jg dec jae or xchg mov iret in cld sub out loop sub jbe jne stc jg ds push loop sti dec cmp out pop jb out sub pop pop push stc sbbl (bad) dec rcl push in outsb push cltd mov push (bad) jg lea add dec mov lea jb adc cmp gs int aaa scas imul mov or ret pop rcrl xchg cmp xchg and add gs stos das fmulp fadds les lods mov loop (bad) jle roll and adc mov sbb inc sbb stc mov (bad) aaa cmp mov movsb dec xor pop mov sub stos adc and in push jo inc sub pop out pop sbb repnz xchg (bad) sbb cmp (bad) mov sahf xlat jmp sbb rcll lcall int3 xchg bound mov adc in push mov pop in mov lea dec shrl loope (bad) mov movsl or mov pop insb mov daa jo jmp shll sbb movsb fisubr (bad) cmc mov cmc in add leave adc dec aaa nop cwtl (bad) aaa jge ljmp push mov movsl sub push ljmp movsl or imul mov sahf jmp cmp jg scas push dec cld repnz or pop (bad) mov inc cli mov (bad) out jmp mov or test cwtl daa mov xor jno mov (bad) pop cli lea jbe push dec lahf mov or iret add dec daa xor sub pop push aam xchg or inc aad inc bnd les das sti fwait jno cmp xor dec (bad) xchg jle fsub test dec mov leave rol inc sub js fwait movsl lock dec and push fs xchg xor mov xor shrl mov mov adc add inc jnp mov sahf xchg fst cmp jg push rol xlat mov fwait stos xor int xchg das bound popf push mov scas popf pop cmp (bad) hlt jmp data16 daa ret cld (bad) call insl jnp ret (bad) loopne,pt sbb test in ljmp stc inc mov sbb xor test int (bad) jno lgs sub imul fwait lds jbe arpl mov jns dec push ret popf lds lds or lcall mov cltd call outsb jne clc inc pop mov jmp insb pushf mov fs xor sub leave insl mov std push xor lret jp cs ret call xchg scas sti mov sbb push jle movsb scas sbb cmp sbb push cmp add push push push scas pop jo adc dec pop fiaddl fmuls lods cmp jl sahf inc jo outsl ret (bad) push xor dec pop cmp insl ds das lods mov push pop push mov add nop outsb or cwtl xchg movsb cli scas pop dec xor cmp jp mov (bad) ret cmc mov daa and cmp mov ljmp cwtl mov mov lock lods push shll xor jne lods xchg cld cld je mov enter cmp rorb mov iret dec into pop cwtl mov mov push mov adc aas fstpl (bad) icebp push fwait push in lahf (bad) aaa jae nop fstpt and mov pop inc mov mov or loopne or aaa push (bad) fdivrs xchg mov mov cmp stos xchg inc adc fistpl clc push sbb sbb xor mov cmp (bad) stos (bad) lret lcall pop pop push (bad) mov stc mov lods insb lods fdivs scas jmp dec cli fnstsw xor sub popf in jnp jg lock mov (bad) bound rcll mov enter pop add push jno mov cwtl push jmp mov das mov add sbb fldcw dec push jmp popf and mov in pop in or mov rol fidivr sub sub fcoms pop adc sahf sbb cmp aam mov stos fnstsw and stos mov lock xchg repz out mov movsl sbb cmp fdiv aam sub (bad) mov loope inc in add fs push mov add mov insl ja mov or test mov push cmp mov call mov pop dec es mov push jg jo inc fstpl mov imul sub pop pusha mov fstps and inc xlat loop rcll adc enter jge in vshufpd xor cmpsb mov jno push into into push inc ja rcrl sti cwtl nop adc fsubr inc sub pop and repnz icebp push pushf int fadds (bad) or push mov (bad) inc out jno cmc add outsl cmp mov negb nop pushf lret lock shlb inc repnz rclb fisttp nop or mov fsubl ficomp sbb jmp rorl mov pop dec (bad) and stos dec lea jns (bad) arpl adc jl and mov fs mov es mov or call inc test adc ja (bad) sbb out sarl iret data16 xchg sahf ret mov pop repz pusha pusha lods mov jle dec mov imul push push (bad) pop mov jge (bad) mov cs lret cmp mov ret xchg cmp cmp pop popa jbe sub (bad) sub mov ss mov inc or jecxz cltd int cli addl add xor mov mov (bad) and decl fdivrl cmp fdivrl cmp jg add add sbb cmpl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lahf adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov xchg xor xchg cmp add cmp and push mov xor aam pop movsb movsl imul push movsb popa je cmp ljmp loop jns add pop cmp outsb ds (bad) fisub scas mov adc and sub jge call dec ljmp cmp ja loope ljmp inc stos sbb inc mov mov fs jns mov jp outsb outsb rcll out xor mov push je,pt into jae insl mov in adc lret jl adc (bad) aaa lods in sub adc (bad) sar and je movsl in mov gs xor or xchg out inc and xlat inc pop xor xor xchg mov movsb clc ret test ror pop pop repnz sbbb adc lods test push cmpsl inc adc loop repz inc (bad) out mov jne xchg fucom xor scas insb into or rcll into test gs push andl cmpsl bound or mov push mov in cmp cmp pop pop pop mov es lahf dec and push mov mov cs mov inc (bad) into pop jne mov imul ljmp add inc pushl mov pop out jno out mov cwtl mov add iret int3 sbb std and test ss andb and sbb or pusha aas cwtl ds subb sub addr16 into adc incb mov (bad) mov out fmull xor mov xchg add add pop mov push scas pop jmp mov out out out out stc in inc fdivrs imul xor mov ja mov mov mov mov and jp call and dec push adc test jne dec xchg int jbe inc jle or add subl cld fdivrs and or fadds xchg xor add add aaa xchg jno xor test cmc mov cli ss (bad) jne mov or sub (bad) in xor cmp aad popa cs mov shrl inc mov enter daa fist push cmp inc leave pop lahf insb mov sub dec mov pop xchg cltd (bad) pop or leave shlb cmc mov and in fsubrl insl inc out or outsl jp loop test cs ja mov cmp mov call icebp fsubrs pop add adc inc or fadd es stc and jmp cmp inc movsb addl lret push movsl jmp jg lret enter rorb push add push scas push sub xor sarb (bad) fs call pop cmpsl inc test mov lcall cmp flds or daa (bad) fistl test cmpsl cwtl xchg outsl mov or test push in add pop push in (bad) xchg (bad) jl fstps pop dec in popa xchg jb mov rclb push pop repz leave aaa fimul xor or fimull sahf lahf in enter aad int fistpl mov (bad) into clc inc push push and mov sahf insl adc pusha mov int3 insl fistp push movsb outsb jmp (bad) jns mov int3 ja push or xchg push push ja scas dec sbb or cmp pop pop bound lods or push mov or sbb rclb inc jecxz jecxz mov mov cmpsl push jne in xchg sub cmp bound xchg mov or push aas lret mov xchg ror scas push les cltd aad imul out fstpl sub insl mov cltd (bad) (bad) jnp and pop adc inc mov call xchg or or lock jo daa and mov and mov xor pop inc inc ret push movl rorb xchg rcl mov jno mov xor outsl sub cwtl enter repz mov testb push mov je jo mov dec inc pop (bad) dec rcrl cld lahf fnstcw fadds stos lss pop cmp xor and and dec ljmp in repz pop mov dec dec mov xor scas clc cmp mov mov loop jmp mov scas dec into mov inc add xchg arpl mov int or pusha js push fisub leave inc daa aam (bad) ljmp imul dec pop imul xchg inc mov out fwait shrl or (bad) sbb cld js sub repz jae jns sbb pop mov mov lahf xchg pop or mov test in incl pusha mov xor inc adc jno add inc push xchg sbb inc sub jmp in aam (bad) dec mov lret jl fs outsb cmc cmp leave adc add out dec mov mov xlat ljmp pop data16 push pop mov jp sub adc leave insl cmp sbb pop testb loope out ret cmpsb out fidivr testb outsl mov lods push in stos mov inc xorb add and cmp in fistl dec adc mov push pop repnz xchg int3 adc movsb sbb pushf icebp add test jns aam out inc faddl ret push in add lds cmc enter jle clc in int inc movaps lret lods pop mov repnz out testb leave cmpsl jp cmpsb mov xchg out fnstenv xchg std mov data16 cmc lcall out pop push rorb loopne mov dec test (bad) ficoml leave add push dec notl inc insl stos bound fcomp pop lods pop jae lods fsubrl clc xchg add jne aam (bad) je adc push ret dec jp add xor cmp imul das scas movsb mov jo pushl cmpsb int3 out push leave sbb sub and sbb hlt push in daa adc add out cmp xlat xorl outsb push pop cld rcll (bad) outsl pop sti and int3 jmp push inc sbb lret mov sbb adc bound mov push xor iret in pop mov test icebp pop pop enter in adc iret mov mov lret icebp loop (bad) sbb (bad) es mov push fnsave inc and lcall adc jg in cmpsb dec mov aam das mov xchg cmp or mov mov fdivrp in (bad) out lret pop pop xorl mov cmc sbb sub insl (bad) icebp xchg shll dec push pop mov and imul (bad) and aam rorl cltd sbb aaa cmovbe xchg adc pop arpl lret movsl inc mov mov mov xchg lea shll adc xor test jo jno lods mov fsubl jne jge inc idivl mov push mov jecxz pop inc (bad) mov cmp jle xchg aaa fwait push adc mov shll fdivr jl movsl mov orl push lret push das imul adc in in nop out imul sbb bound mov xor ret outsb mov in int3 out jle mov mov into rcll jge (bad) fs roll push push addl xchg push sub addl mov cwtl hlt mov insb (bad) jb lods push jle cmpsb xchg cmp shll pop cld paddw push xor xchg outsl xchg cld int outsl xor and sub and jbe or das mov std in popf nop xor stos sub dec add mov pushf outsl pushf cmp mov (bad) jo cld mov cmp lahf incb bnd jb (bad) jbe popf jge xor daa jno adc mov pop mov jecxz xchg xchg mov sbb movsb mov outsl xor or das (bad) jle push dec mov xor mov mov (bad) int (bad) ret je add imul or call cmovnp push cltd or xchg add pop adc pop adc into cmp je lock jo push call xor push lret in xor out sub daa cli cltd mov dec fdivl addr16 lea xlat mov and xchg movb fdiv add (bad) jp enter in cld inc lret sbbl sbb jnp ret or xchg aam aam ret pusha mov icebp jo jnp movsl inc rorb inc pusha mov inc pop xor test fistl scas pop (bad) mov cmpsb fistp (bad) mov arpl ss insb dec lahf mull enter clc xchg xchg in lret lods sbb sbb fwait in pop shr inc loopne lods repnz and push in cmc test cmp xchg or ljmp pop mov pop in cmp out out adc (bad) jmp ja and popa outsl adc add xorl lea sub test push dec inc insb pop or frstor fmul scas jge cltd sbb adc insl sbb mov daa iret lods test jl insb xor cld mov cmc ljmp or pop cmp mov mov sub (bad) pop (bad) xor sbb push ja and xchg pop sub or daa xor add scas loop dec mov rolb sbb dec dec mov repz and pop sar insb in mov pop scas mull shrb pop aas je cmp mov inc dec int3 loopne negb pop and jb jne in jnp adc mov and ds mov mov stos add loopne adc mov push sti push aas sub push mov mov call mov jmp jmp stc xchg inc aaa test and and push outsb loope fwait add je sbb adc hlt adc or hlt mov mov push add mov push dec movsb add out popf xchg jae ficom das dec or jmp mov inc mov into inc cld lea jmp fwait mov dec pop sbb or mov push or ljmp jmp cltd lea add xor stos sub loope shr jo inc jns xor jno stc sbbl (bad) cmp fnstcw cld jg enter nop add push push outsl ret xchg imul sub bound testl (bad) ja jle xchg in or push jb leave push xor mov pop mov cltd jle icebp push fild xor call sbb daa fistpll xor mov aam shrb mov loopne sub das sbb (bad) adc pop (bad) xor pop int3 xchg ficom push pop and adcb cmp push jge shrl pop xor call jnp popa inc pop mov scas pop jg addr16 push insb out mov adcl enter xor ljmp pusha aas lods je jle or fstpt mov sub dec jmp (bad) lds fwait jno out cmp inc xchg cld mov lahf push scas decl xchg dec push das pop cmpsl ja loope bound push test push mov cmp hlt or inc xchg rcrb pushf mov add cmp and test sub push and pop add cmp pop jg movl adc jo mov xchg sbb cmp div sbb in pushf mov xor outsl adc xlat cld and in mov lods (bad) adc int3 or push and add stos dec sti outsb inc inc adc hlt in nop xchg and or adc jmp (bad) cmpsl shl cmp cmp ss mov cmpsb les aaa in fwait mov cmp sub insl ss adc mov and repz sub xor mov sub (bad) hlt push xchg cmp lret scas decb jbe lcall in std fsubrl (bad) call xor ret gs scas mov in inc jecxz int dec jp and push push insl popa xchg add mov push push fsubs lcall (bad) repz mov out mov rcrl hlt jb inc leave imul lods mov xchg mov jbe fpatan leave lret icebp mov ljmp and ljmp jo adc pop jl out mov das sbb adc jmp (bad) call repnz or fadd inc mov (bad) ja inc cmp test fsubrl rcr fisubl js bound dec fadds out std or (bad) popf pop loop and push xchg pop outsb pop sub movsl xchg add shrb cmp jbe icebp in push xchg xor mov xor cmp (bad) rcrl xor das pop data16 lea stos mov xchg inc test int mov fsts inc les into mov (bad) xchg inc inc pusha cmp pop popf mov (bad) repz andl aaa aam jne mov (bad) mov sti ret or rorl pop push dec fisttp mov cmp mov cs mov aam mov stos sub lock sub or ret fidivr cwtl pop out inc sbb and out sbb add and stos mov (bad) lret lret ja (bad) mov das jae lret mov ficomp (bad) xchg and call mov xchg jecxz in push and fmuls into pop mov out dec in idiv dec pop jae (bad) stc mov or (bad) aam jmp lcall fisub in add sbb fisubr pop cld leave dec gs pop pop popf in mov fcmovnb inc ja clc (bad) mov jnp out fnstsw jnp out fnstsw jnp cmp add daa dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb cmp ja je jae loop jmp dec fsubrl cmp ret imul mov dec cmp out aaa push out jg repz cmc stc add fs cmp jno sbb sub das jne das movsl mov data16 and jp out outsb mov pop imul lahf push pop mov push mov dec loop xchg push or bound int3 (bad) (bad) and shl int3 ljmp push fs jbe jns mov bound dec sbb mov mov (bad) fldenv sub mov lret mov aas jecxz lods lods hlt xchg movsb dec scas and pop call pop xor popl daa das fadd adc (bad) jnp mov das mov fcomps imul lods xchg pop rclb jno mov shr gs push push inc push jne sarl inc and mov roll movsl repz pslld add imul and sti out xchg xor xlat cltd outsb mov xchg mov sti mov dec mov (bad) push ljmp adc xor push aaa mull (bad) mov push cmp jno loope pop insl lcall or call mov push pop insl mov or sbb pusha mov repnz cli sub mov cmp pop outsl (bad) jnp es (bad) jns loopne sub outsl jb pop lds push mov out cmp pop jbe aas sub es outsl rcrl jmp pop dec push mov sarl mov lea enter iret (bad) shrb addr16 jns fnstenv (bad) sti xchg stos push clc xchg xchg pop sub je sbb out push pop repnz xlat daa data16 loopne or das outsb jg and mov jo insb xor sbb pop js mov or aas sub jo and adc push testl pusha scas fstpl mov sbb xchg daa (bad) jb xor incb outsb dec shrb std data16 sbb repnz mov ret xchg and loop mov fsubp movsl mov (bad) loope push dec jne inc je xchg push sbb call jae push js cmp push (bad) xchg int3 xor sub lds and scas add fwait mov mov pop add mov mov out ljmp sub lock mov sahf test mov nop adc test repz popf mov xor movsl mov sahf fstl mov xlat ss adc xor jnp jmp xlat cmpsl jae lahf (bad) imul imul push pop xchg inc and nop push loop insl lret in push lahf in lds std loop pop and push shlb and ret fsubr xor fstpt (bad) xor push pop stc mov xchg rolb xor (bad) jmp out sbb adc pusha mov sub mov mov sbbl stc aad loopne sahf add shll adc stos xor ret faddl cmp mov push or mov mov mov std and xchg gs aam icebp ljmp mov shrb push iret sbb popf mov cmp add ljmp movsb mov jnp and (bad) sahf xor mov or jl call enter dec loop fldenv xor int3 pop jae dec mov mov sahf add cmc arpl lret insl pop push pop jecxz pop sub out xchg in int3 push mov rep scas outsb psrlw adc mov call push and mov and pusha (bad) sti or cmp or fsubr (bad) push imul imul cmp mov aam jnp repz lea cmp inc push push loopne rcl dec mov jns enter cmp jb xlat fsubl xchg inc cld jmp mov mov mov add mov mov xor in (bad) movsl (bad) ja stos arpl into dec popf js imul ret push popf int3 pop cmp xchg cmp cwtl (bad) repnz (bad) leave hlt ds out cli sbb stc mov lret push stc inc mov in xor fsubp (bad) rol shrl cmp lret (bad) add sub pop dec pop jmp andl pop fwait aam jbe cs nop jl xor js mov jl call es insb or lock das lcall xchg adc xor sub mov imul imul add xchg pop mov fisubrl shll sbb out js fnstsw jbe lret and dec les hlt test imul ja jecxz xchg ret jo aad lcall cmp lds jecxz jg jb add aas leave add fldenv dec pop js jp add add pop pop and xor into lods iret lea sbb xchg fucom jnp cmc test loopne test imull push jne (bad) in adc test xchg or lcall xchg fidiv xor aas xor or sbb add and je jbe in out or mov add inc adcl (bad) pop mov stos (bad) jae cmp outsl cmpl jnp mov test pushf pushf cltd dec pop (bad) loope push (bad) sub push or addl cmp cmpsl mov push xchg mov jnp pop dec leave cmp inc jnp (bad) aad sahf lds add faddl fwait js jo jge xorb leave ljmp (bad) mull cld outsb and flds jae imul fdivr cli push lea dec iret dec cld (bad) mov rcrl xchg lds sbb jnp sub pusha lret mov sbb xor lods push into ret mov or jmp stc les xor cli roll imul pushf and shll fadds shrb xchg mov push pushf cli pop adc or sub inc in pop cs mov cmc cmp push add push popa in aas or push and neg fcomi arpl and int3 push xor add xor adc imul test dec andb loop sub test cmp decb loopne cld pop cwtl jae pop test mov int3 mov repnz jge repnz cmc fimul dec lret imul fwait outsl cmpsb (bad) mov jns insb pop pop fnstcw xlat fs push mov inc in cltd arpl pusha xor mov mov mov mov or js (bad) sbb dec (bad) repz hlt jge mov sti xchg ret jbe jp outsl mov xchg push andl cwtl ret add mov dec cs (bad) repz lock mov mov adc pop mov and loop out out inc push push adc cltd adc jg sbb fstl xchg cmp std sub add sbb jb mov xchg movsb add push and pop push loope fstpl (bad) iret scas cmc lods rcll (bad) dec test mov and or xchg rcrb adc insl sub in mov aas pop iret (bad) lods insb loop mov leave inc fcoml mov pusha mov push xchg adc cmpsl les add mov or mov in enter dec xchg mov je addr16 pop jge sub pusha int iret sub and arpl pop cmp stos xor push mov loop jmp inc mov in mov movsb (bad) sub mov out mov ret aas addr16 repz ja sub repz add outsb shll cmp push stc clc shrl add sbb inc iret imul mov cmp iret (bad) into fcomp icebp dec iret mov fcomp dec mov pause inc xor mov outsl mov mov std adcl push lds ret push aad or cmp inc cmc jp (bad) jge int aas (bad) mov sub mov mov jbe mov mov rcll mov add xchg lods pop lock subb inc xor cwtl arpl rcrb lods std jmp mov jmp push jns mov inc pop stos pop loope inc mov cwtl cmp scas xchg xchg push clc lods jno mov jmp inc cmp test inc in mulb (bad) mov xchg or test bnd fs add rorl xor cld cmpxchg xor test mov sub pop dec and xchg je jne popa push (bad) mov ret push push loope add test dec subl outsb es fidivr inc xor (bad) mov cmpsl mov pop inc outsb fbstp push xor mov test xchg sar cli jb add adc inc pushw cli pop stos shlb int3 mov mov add lods mov (bad) mov push inc fwait push (bad) cmp movsb sbb mov inc dec cmp sbb pop out mov ja call test xor out stc jmp pop in pop mov repz mov scas lods scas mov push fwait popw fcoml ret jg or cmpl (bad) stos lods mov out cmp std in scas rcrb xchg (bad) imul out push push mov mov mov scas in es jp xlat dec and aas dec xor ret pusha cmp adc xchg push jg (bad) sub mov clc aad add xchg push jge ss aas mov into or fstpl fldcw clc sarl nop sar dec or sbb mov ret add jmp rcl fwait int cmp mov mov xor pop push addr16 cs (bad) rcrl ret lret sbb int3 add addr16 push xlat lods pusha cwtl and daa push cmp adc repnz and out mov (bad) out movsl push pop bound jg inc mov leave into (bad) and js (bad) dec inc popl int sbb sbb xchg mov push adc inc call inc add or dec and test adc mov mov sub (bad) stc push jae nop outsl in (bad) adc subl sub adcb dec sbb add jl aaa dec outsl das sahf div hlt mov (bad) loop add test es (bad) hlt xor or out popa fiadd pop rcrb scas push (bad) and dec lret lds push sbb sub mov add or xor stos clc fstpl sub jo daa cmp (bad) mov lret jnp je pop mov fucomip insl ror mov cli lret loopne jg push sbb cltd lret jle (bad) xor subb (bad) xchg inc sahf lock lods xchg loop fbld cmp movsl popf cmp fwait js addl jl and or pushf out adc push test mov pushf sbb into pop mov adc jmp jbe repz sub stos outsb jmp sti xlat or inc jne push dec dec fwait enter mov jo aad or cs mov dec dec ss mov sbb out push flds xor sbbl (bad) mov iret fadds sahf mov lahf mov cld xor cltd (bad) push xor xchg pushf mov push cmc pusha mov or cmp push add pop mov inc cmpsl fucom inc outsb mov in jecxz in adc sbb pop push jmp cmp sub or fildl rorb sub jns or push fiaddl adc ljmp sti mov mov sahf int3 sbb mov (bad) scas push adc and push mov je cmp adc xor xchg pusha inc call mov pop mov stc cmp ja imul scas pop insl sahf ficoml push jno test (bad) ja add imul int3 xchg sub fwait mov subb (bad) lahf jbe inc (bad) cmp test test ljmp push push loope int (bad) push mov sbb jmp cltd dec aad mov push fxch aam push pop cmp sbb adc or cltd or lock int3 push data16 pusha add add cmc sbb loop pusha adc shlb mov push in in jge ljmp and mov add add int stos movsb int3 adc pop frstor imul mov push jne addr16 xor vpavgb inc mov stc or adc stos cmpsb xor cld sbb fwait inc je and loope adc inc sar ror daa stos fistp out repnz sti and (bad) dec sub int jp shrb or jo pop xlat mov inc (bad) repz scas sub fistpl cmp mov push sub js jno hlt popf ljmp pop adc test aaa sbb data16 xchg mov jns inc xchg mov cmp mov pop sub loope mov jnp js jge xlat mov jle outsl popa xlat push and movsb mov les push xchg dec dec hlt (bad) or gs arpl cli and push mov addr16 push inc pop test fsubrp sti inc push mov rcr dec shld pushf fadd pop jp scas data16 aad scas inc (bad) xor jge lods adc call sbb sbb xchg test nop ret unpckhps imul ror pusha xor jbe in xor push outsl stos lds aad repnz jecxz arpl dec mov popa daa pop sbb (bad) inc (bad) adc rcl in mov mov sbbb icebp shlb ds lods cmp sbb xor mov ds enter aad jle mov push mov lret mov sbb imul sahf sub xor xor subl (bad) out cmpsb repz dec pusha cmpsl mov push push mov call (bad) mov mov or aad lret cltd insb outsl negb out jne sbb repnz cltd pushf out dec fsts adc test and jp mov mov pop add movsl jne mov sub lds (bad) int3 and mov mov popf mov cmp lock addl push cmp lock addl push cld incl add psllw add (bad) loopne add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add enter add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas fucomp inc icebp mov cwtl into xor dec pop fstpl ret adc ret aam cmpsb fcmovnb xor xor mov jmp jmp sti aaa jle mov jg mov fiaddl (bad) jecxz adc or jg scas cmp inc hlt add push mov ret and fwait mov mov jmp popf sub cwtl push repz insl mov into or vmread outsl rclb inc arpl add pop jb int3 jbe rcll push inc add or iret add jecxz stc xor ret ds lods mov aad imul inc insb nop jecxz icebp and mov repnz lea (bad) std mov push push inc sub inc int3 jae adc mov fs pop dec mov sbb add loopne jne pop mov in sbb pop add fs jp push sbb push aad sbb or xchg mov inc (bad) stos add or rep out xchg mov pop sarb in cmp mov inc fucom push cltd rolb stc ficompl pop push leave jno int mov sbb shrb leave bound or lahf test loope and add and jg inc in stc jg cwtl lds aas cmp test mov dec cmpsb cli arpl (bad) cmp mov jp fucomi mov bnd mov test adc adc jnp lods mov mov push xchg repnz jecxz lds into push fldcw icebp cmp imul lcall jmp (bad) lret adc push jmp lods lretw stos ja jno mov mov sub (bad) repz and (bad) xchg hlt std outsb push je adc leave jg adc cmp mov in cmp outsl mov jg es jns mov (bad) adc jmp (bad) ficomp lods movsl push out sbb mov jb xchg ljmp insl pushf fwait mov sbb add jle inc out cwtl cwtl xchg shlb ficompl out (bad) imul pop in push jge aad ss sti push and fcmovbe fimull imul insb mov push or dec sbb inc cltd push arpl mov ret shrl in mov nop aam pop insl jnp in and in pop ss shrb enter ss loope adc out repnz test inc sbb jo cli mov jge push xor dec pop mov clc and testl pop or xchg (bad) xchg mov fs jns stc xchg insb mov xchg push jo cmpsb pop popf jno cmp addr16 addr16 repz and cwtl dec or mov test aas fs out sub inc imul cmpsb push gs out push sti lcall test cmpsl es xor lcall aam xchg cmp and lods loop popa dec jno into popf cmp imul mov data16 lret add inc adc scas lahf (bad) or rcll xchg xor loop mov sub xchg orb les cli adcl movsb dec (bad) pushl or xchg xchg andl adc aaa stc and rcrl pop rcrb in out cltd js jl mov outsb mov pop xchg insb mov movsb mov sbb push sbb movsl les pop lock repz js pop dec icebp mov jnp fs in cmovnp pop negb fldcw aaa addr16 shlb dec push mov xor mov xor hlt int (bad) mov mov lds cmp jp inc xor daa loope loopne enter popf fsubrp lcall mov or mov pop rclb incb imul jmp push xlat int daa add mov push outsl pop and and aad iret es jnp mov outsl add movsb jge sbb (bad) std pop das addr16 xchg enter fwait out sti cmp cmc dec rclb cs stc xor pop and inc stos mov jl bound push sbb fdivrl (bad) sbb icebp and fsubrs xchg xchg inc out xchg in xchg test mov gs lods or pop lods xchg cmp dec ret mov es and orl bound jb cld imul andl cs jo jecxz adc arpl lock popf push push stos inc out xor cltd iret cs mov dec fist jo mov xor pop or sub cmpsb insb idivb xchg rolb or jg pop sbb or add (bad) cmp sbb pop xor pop or aas xchg in cmp mov cmp ret push xlat ret pushf xchg xor test int3 enter les fsubs sub std sub jecxz jb mov out fsqrt sbb popa xor ds add sub jl ror inc mov nop (bad) imul fwait inc sahf fbld xlat adc ja inc pusha call mov mov push pop jo gs xchg inc in xchg jne push (bad) mov pop and pop pop pop xor jae xchg sbb enter sbb xor lret lret adc ljmp jns sub lods fstpl xchg or es xor and dec pusha push sbb out push push jle add xor cmp imul loope hlt and stc insl cs clc (bad) data16 adc push xor inc movsl push add jle sbb xchg (bad) sub test movsl or or xchg jp icebp mov les and push ss jmp cmpsb popa jbe pop jb or arpl cmp outsb xor xchg sar mov sbb sbb push cld sbb loop xchg cs std inc (bad) notl cmp es js cmc dec jge or imul dec pop in pop ret xchg loop mov iret insl cwtl adc cmp fcomi xchg jl movzwl les lret sbb inc cmp sbb mov js ja addr16 mulb mov inc std out hlt repnz pop stc nop jl cmpsl test jecxz lods cmp add loope nop sbb scas sbbb js cmpsl add pop imul pop out and stc test (bad) sub (bad) daa sbb add data16 test jno popa dec mov dec push adc push sub je mov dec (bad) repz inc enter xchg jae icebp jns fldcw in bnd jle mov fidivrl sub aaa out inc fwait mov aaa cmp jb xchg push cwtl shrl loopne les (bad) lods pop (bad) add loope mull pushf lds pop adc xchg mov stc push or add dec mov out sbb inc inc call (bad) pusha sbbb lods and ja (bad) cmp aas orl outsb xor lcall or movl inc es xchg mov mov cli inc mov sahf mov ds sub mov movsb nop adc and pop jae test pop and lods jg adc aad sub push out dec sub clc xchg add mov repz xor jo shl fldenv mov hlt mov sti add cld gs fsubrs pop das cmp in xchg dec jae dec lea mov in loope iret ljmp loope pusha out test pop fisttpll and sti mov cmp inc (bad) scas mov inc xor add pop mov inc pop repnz mov xor jmp es in mov cltd pop scas xchg insb and movsb xchg cmp dec cmpsl dec add das inc pushf push test enter daa lods insl jge mov into int jns (bad) mov stos xchg dec push cmp push mov icebp push aaa or stc cwtl jp (bad) pop out and adc repnz xchg (bad) and addr16 pop lgs into or and and mov mulb out dec jl ds jecxz or or mov inc add ljmp jae pop mov fs and mov adc xchg repz pushf fwait mov lret mov mov jle xchg (bad) sbb mov adc insb mov (bad) fucomp lea sub jle xor das push mov out outsl pop sbb push mov mov jle test sbb add xchg jns stos xchg sti xchg lcall dec push mov in adc bnd add div in scas sub lea repnz loop lret rol stos mov rcrl imul sbb push cmp adc repnz push pop fisttpl in cmp cmp out or push (bad) inc sub mov xor jge mov mov mov adc mov inc mov xchg stos mov inc repnz cltd cmp pop (bad) dec and mov fiadd insl mov lcall jmp pushf lock push test stos test cs jb clc and add imul aas insl add imul mov mov sub repnz sub dec ja sti imul mov mov fstps pushf push insb hlt mov push dec lahf add jge and dec sbb pop mull loopne std in std jno mov inc mov sbb jge sti sbb and lods xchg movb sbb in push psllq popf mov (bad) test popf fstpt mov xor mov sbb push fs rclb adc ja sbb aam jmp or pushf jl inc mov lods into add aas sahf adc fs into mov lret xchg addr16 sub lea hlt in stos scas lods imul lahf dec add xlat (bad) dec lock outsb lock add mov or stc jnp pushf jae adc mov jnp xor mov xor mov xor shrb rcll inc std addr16 dec scas mov sub scas lods inc mov adc fdivrl clc fwait inc (bad) push mov cmpsb aas xchg inc xchg push inc xchg call sbb scas js into pusha and fisubl out and mov pop add out aam lods cmc fcoms rclb xor fimul aam or pop and push pop aas mov in pop inc and out inc and mov fisub push outsl nop sarl sbb (bad) je push jp jae (bad) iret jnp aad out xor xchg push push mov jp (bad) lock pop aad mov arpl cmp enter sub out (bad) cs fisubr es sbb pop cmpsb xchg or daa jmp out mov xchg call xorl fwait and push push inc fwait cmpsl daa sbb mov jmp inc aaa add popa and ds sub mov lret stc aas hlt mov aam movsl popa loop in iret scas out push add mov stos in inc test in les ljmp adc lock cmp (bad) pusha int xor lods pop shl out xor inc add push xor or sub out xor push push dec jnp stos in cmp daa jnp popf push out mov cmp ja es sti call adc stos adc cmp shl mov or xchg cmc cmpsb popf mov add push roll notb or test and sbb js fxch mov pop ljmp mov mov mov dec stos shll pop mov dec out mov mov mov pop or pop cmp aad test dec jecxz mov std push dec sub out cwtl mov sbb dec insl addb or dec cmc add rol aas cmp (bad) jno fwait push push test and xor inc mov stos mov jle pop bound mov dec inc mov add out lds xchg cmpsl fs loope mov and pushf xchg sbb add dec xchg mov sub sub xor pop test pop xchg (bad) fbld push inc jmp lret loope dec adc mov mov xor dec adc pop aad xchg mov jge xchg cmp jl mov mov out push and xlat stos lret lea mov bound imul adc pop ja jmp dec fmull (bad) scas mov out jp inc jns xchg in push jmp icebp int3 fbld sub jns mov mov (bad) in and loop shl sti jns mov or addr16 loope outsb pop or scas fs sub loope cs mov xor mov mov (bad) jp or push add test mov jae pushf iret or xchg xor and sbb mov add sub jecxz fwait mov sahf sbb push bound cmp fidivrl iret pop lds jle xchg stos test test sbb (bad) sti mov movsb out adc scas pop (bad) xor sub out and sarb pop push and in mov std int test mov test mov arpl inc mov cmpsb test adc pop cmp sub or lea adc mov mov test push dec xor out jp and in pushf or pushf sbb sbb les leave push test jle out outsb xchg jmp cmc sbb xchg pop lcall mov add and sahf pop pop imul sub orl adc mov lods out pop mov adc jae and mov insl jns imul mov ss jg cmp jno mov movsl movsb mov orl cli add xchg test mov cli out jge mov inc fidivr xor xor xchg ja outsl cld cli test jp mov push pop sub popa movsl push push dec sbb mov stos ljmp cs test mov inc mov daa mov pop lret jbe (bad) ret loope mov ret (bad) ret jne xor fildll dec les dec pop (bad) test add xchg push xchg (bad) push icebp dec jmp mov mov inc pop xor inc or xor insb aas cmp in mov mov cltd jmp xor inc mov and dec outsb pop lret repz add jge cmp addl push cmp lock addl push cmp incl add pop js add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc jae mov sub jne (bad) fidivr mov sbb inc pop fstps xor out in jne fdivrp addr16 iret mov icebp incb add incl or hlt inc fild icebp loope inc les dec fisubrl mov dec mov xchg mov xor les (bad) mov mov in test inc ss xor sub sti sub rcll cmp inc and (bad) lret sbb jmp lock les push (bad) repz inc aas out bound es jle or ljmp repz pop test adc mov mov int3 adc pop int3 push jmp xchg sbb popa test jl les xor mov dec fiaddl jae (bad) leave sbb add mov sbb push in mov xchg lock shl dec out aad push sub fcmovnbe push jecxz xchg jl push repnz arpl sub fsubl xchg inc cltd inc mov or (bad) pop or in (bad) jp lahf repz sbb dec xchg sub loope lods in sahf mov iret dec stc pushf fadds stos ret xchg pop push shll cmp mov jo test sub aam sbb nop inc cli inc inc or xlat push jb push arpl mov mov jnp outsb mov inc and enter inc bound xchg jg mov sbb js jns inc test adc imull add dec lret repnz and xor pusha mov aaa cmpsb dec mov xchg jge add push mov les mov inc sbb out mov xchg out leave mov or mov adc repnz sbb jecxz jg jno adc add mov fwait inc jp arpl or cmp dec xor cmp xor xlat lods sub mov xor mov push dec test in fcoms in mov sub cmpsl cmp mov mull mov mov fldenv ret push lret rcrb sti dec pop mov inc or loopne xor out inc push stos or pusha mov (bad) jmp dec aaa mov jno mov pop mov cmp xor mov test inc aam stos pop clc or xor mov movb and aaa cmc ja mov aam pop imul frstor ret inc sub es xchg into mov and jp les stos (bad) mov jle pop sti test jno aad push sbb or and xor fistpl ja bound fnsave popa ror xorl jp cmp jb popa sub mov or inc mov xchg rolb mov dec out jns jnp ret ret xlat xchg mov mov out leave pop ds xor mov rcll xchg dec push sub pop aam mov pop cmp sbb imul stc xor dec mov aas mov push sti cltd dec insb push lods xchg push and or repz scas in mov lods inc leave mov xor rcl repz mov xor in out outsl jne fstpl stc mov popf cmp sub add repz cmpb cmp cltd ja cmp ss sti out roll mov cwtl mov in pop or fbstp or jg xorl jnp jecxz sbb xchg stc cmp icebp sbb loop ret divb (bad) mov (bad) icebp mov incl lahf js iret fdivrs pop lock dec pop cwtl stc jns (bad) jp push pop mov push xchg ljmp lcall mov cmpsb mov lods gs dec cmp aam aaa or pop test inc mov mov insb aad or sbb sbb add ds xor sub mov pop add push mov inc (bad) jp push sub jns cmc sub jns (bad) pop fimul or push aad xchg loope adc scas xchg in mov sahf sahf negb xchg mov and dec lods and dec cmp sub add inc sbb lahf lret mov jle mov stc pop scas pop sub repnz mov js inc add imul imul ljmp fwait mov scas pop mov sub out aad cmp lahf in or adc cwtl or pop dec mov xor pop imull insb jg ja fs inc xor add sub iret jb mov push pushf or adc jmp jmp cmp in adc aaa jecxz movsl scas inc dec sub into fstl and hlt loop jecxz (bad) xor lea cmp mov test dec or loop push imul adc ret adc enter leave xor or rcll sub mov jl cmpsl or insl dec data16 sub dec test out jne (bad) mov jae inc mov or (bad) icebp mov loopne xchg rep imul popf mov (bad) push fidiv adc mov rcrl out cmp xchg or inc mov xchg and jnp xor out sbb xor bound mov add cwtl call push shr inc mov leave fsubl pop bound stos cmp fcomps idiv jecxz call push int3 sub mov dec lea fist cmc movl jns clc (bad) inc sbb imul xchg jecxz mov imul fldenv sbb or das (bad) repnz in jge sahf mov pop pop aad and cmp andl push inc mov dec (bad) iret int3 push aas das jns,pn lock jp repnz cmp (bad) dec insl fdiv jp insl or daa loop imul push inc push or sarb repnz (bad) xor xlat or xchg lds in (bad) or insb divl out or mov adc add incl in xor data16 cs add icebp gs adc jne jbe pop out mov div incb mov fwait repz jecxz rcrb pop sbbl rcll ret xlat cmpsl lret movsl js fmuls mov pop jg xorl xchg cld arpl movsb cwtl (bad) (bad) xchg dec jmp int3 imul dec push xchg cli jecxz mov mov leave dec (bad) iret push push cmp js in lds add inc xchg movsl scas stc pushf push jae xchg clc repnz push sbb pop dec mov addl idiv out or out push out or stos adc addr16 lods in mov fldenv cmp add arpl (bad) lret cltd add add push scas loope mov bnd jb and cmpsb je pop fcom push inc out push rorb mov push stos sbb mov leave call aad sbb mov cwtl clc sbb mov push ja,pt xor out hlt pop mov ds mov jp ret inc mov xchg pop xchg pop pop les mov movsl and lock mov xor data16 mov pop lea adc (bad) push push mov cmp pushl pop or add test stos inc cltd dec shl stc je repnz hlt cmpsl out xchg xchg jnp popf jns sahf ds fstpl sbb mov sub sbb popf mov push addr16 cmp jno iret inc aas sahf inc call adc outsl leave pop add mull loope lret js cmp sahf movl jmp mov push icebp mov sahf into cli inc fisubl test and mov jne cwtl mov push mov sub dec xchg mov xlat xchg pop mov sbb lods and jae,pn pop mov mov repnz (bad) and or sub nop xor mov dec mov cmp sub out adc xchg push loopne cmpb movsb sbb popa jg pop cmc pop and xchg andb fidiv xchg cmp mov push mov adc or js cmp mov loope ljmp lret scas dec mov xlat (bad) clc incb inc add inc out jns hlt or outsl ja pop jecxz sub sbb push dec cmp dec xchg jmp jb inc test aas std xorl pcmpeqw mov mov mov sbb add xchg lea outsl insl add mov movb popa cmp stos and hlt ret loop inc int fwait addr16 dec push (bad) pop sbb mov add dec pop aad dec add mov xchg (bad) in mov and lret mov cli or or pop jl into dec sub movsb xor pushl or ror stos mov inc ljmp and scas js fsubl cwtl jge mov mov stos dec xchg dec (bad) push (bad) dec ljmp movups dec hlt fsub xchg sbb aad jmp jno sbb mov add popa xor and movsb outsl xor (bad) lcall mov popf or flds push scas mov pop repnz inc int jp cmp gs push mov adc xchg inc clc jecxz inc jecxz pushf mov jmp enter outsb xchg sbb lret inc (bad) fsubrs mov push xor sbb dec xor jo adc dec sbb push insl or and stos or cwtl adc inc xor aas sti or nop cli insl test mov fiaddl xchg lar adc rclb sbbb jp jno mov rorb aam xor (bad) dec arpl (bad) cmc cmp pop xor scas push mov test and mov mov aad lds cmp cmpsl adc mov dec out lcall jne out push jmp pop adc dec pop jg xor rol mov jecxz jmp js sub (bad) int3 pop in jmp insb dec arpl int3 xchg out mov fs mov add xchg dec jg push mov ss xchg inc and out xor ss jecxz test pop mov call scas add sub faddl aam lret rcrl pop pop mov jl sbb cmpsb xor lea xchg mov push push mov fisttpl push sub rcl rcll out pop mov call xor lcall mov mov and xlat push out ja iret jns dec aas mov cmp sbb jmp add arpl movsb sub test (bad) dec xchg test cmpsb mov outsl cmp sbb add lock inc inc xchg or sbb inc sbb aas lahf add inc clc rcl pop or jecxz mov jmp je lret jmp mov push cltd sub jp call add fwait adc test clc pop dec mov xor in es insb and pushf (bad) mov ss mov hlt mov cmp fmuls mov insb loope cmpsb inc inc xor and or jae push std lret (bad) ds or in daa scas popf jmp mov sub aaa mov fsubrs lds lret jae cld ret (bad) (bad) cmpsl std out rcrb mov mov je sbb inc cld fwait mov outsl arpl popl pop ficomp mov pop test ljmpw int je fdivr xor push jmp xchg cmp loop int3 sarb shrb sub pop mov (bad) mov and ficomp leave lahf add push aad js and daa dec jle mov outsl add pop loope ja pop mov test mov xchg (bad) xor push pop fs outsb xchg adc cmp dec icebp (bad) pop mov js icebp dec dec rorl cmp xchg leave mov mov jnp jbe adc jbe pusha imul or sub divb bound pop sub fisub das push adc cmp xchg enter and inc mov or (bad) adc push xor sub sahf call sub xlat mov cs push pop jle jle sub push insl mov cmpsb aas imul out adc xor inc and inc fsubrl push insl loop adc xchg mov je xor mov je arpl push xchg negl ss (bad) out pop mov adc sbb cld push mov rclb insb add stos mov cmc cmpsb jecxz (bad) insl xchg popa xor fimull xchg fsubrp cmp dec lea mov push jnp pop pop inc sub lock xor (bad) sahf cmc ds (bad) mov xchg out push or push (bad) fiaddl aas or jl or push icebp fnop mov test pop xchg dec clc push fmuls das les cwtl (bad) mov jbe jmp pop (bad) hlt xchg or js fmull jns test pusha push jnp mov aam fadd push mov inc sbb sub xchg mov dec pcmpgtw jl divb sbb mov xor stos add dec pop pop scas mov rcrb push jecxz es mov sub xor fidiv insl (bad) mov push pushf test pop pop push pop xchg mov out sbb repz sbb ret repz cli inc int jg cli ret lock pop fnstenv (bad) xor out ret aad sbb push (bad) int3 fnstenv lahf aam or or jb scas xchg push inc (bad) fcmovnb inc xchg add out cmp loopne sti xor aam mov loop and jge repz inc inc jl lods cli pop sub loopne subb test sbb cli push leave adc scas sbb and cmp es inc adc xchg jne jnp pop in xchg pop (bad) sub xor pop sub xchg add mov pop push and adc std jae loope or or sub in loope sub jl clc sub adc bound clc cmpsb adc in cmc test pop nop add mov fsubl and std mov push jle pop mov (bad) hlt (bad) cmp mov xchg mov daa mov mov jne loop dec fistp enter jmp or dec fdivrp out arpl into popf cmp fdivrl cmp fdivrl pop add incl jb adc sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov push rorb mov mov inc push inc mov and xor xor inc prefetcht0 cmp loop decl sub lock lock scas inc adc (bad) mov cwtl lods jno in and xchg (bad) xor pushl fsubrl pop in aad pop push push rcrl add (bad) sub pop or in push jecxz jns (bad) fidivrl pop icebp aas pop push mov cmp out mov iret pop faddl push fistpll sbb sbb jb xor mov (bad) es ds nop fucomp loopne lret lret sub inc popf mov enter add push xchg cmp iret sub pop rorl pop dec popa jno pusha (bad) cltd or cmp add mov pop sub mov sbb or lock add or cmp nop mov push arpl jb inc adc mov out mov rolb pop (bad) mov fisttpll lret test pop test ss mov xchg fidiv mov xor sub jo lret adc sbb ret inc xchg insl dec rorb mov cmp in fild aaa dec jb jbe outsl xor ss out out cmp les lret incb test inc sbb xlat repnz and mov jae fdivrs in dec inc mov test je add test out cmpsb jmp lods popf xor lods jl add dec repnz or sbb fidivl rcrl pop cmp xor ss mov sbb jmp inc push sub lret adc push pusha sub fucomip mov inc ret fstpl jb jbe and xchg call movsb mov idivl xchg out std mov xor (bad) call jle mov subb xchg pop jmp mov fdivrl xchg loope jno push sub mov mov adc mov jo mov push push jo lods and pop mov mov in jmp mov in jo outsb insb mov shlb (bad) or out jno mov pusha (bad) push pcmpgtb mov ljmp sbb mov xchg (bad) xor inc or jb idivl sbb lahf and inc xchg (bad) test popf xchg outsl out mov jp push jl xor test lret dec mov (bad) inc xchg adc xchg pop test mov lcall loop xor fstps pop shll fcmove push inc and and jle add adc call sub pop in add mov arpl mov (bad) negb scas jge lahf mov xchg xchg arpl pop lea test cld xchg daa jle lahf xor or xchg int pusha push mov pop dec sub pop push push sbb jecxz add jecxz pop or or ss inc pop mov xor (bad) sub mov test pop cwtl inc jg cs push pop loope adc testl sbb jnp xchg mov push add outsl test (bad) incb cmp sbb outsb mov ljmp or test das dec fiadd push out (bad) in test ja daa inc add loopne add stc daa fbstp cmpsb sbb adc inc fistp jb push test xchg jg mov arpl xor adc add or add test ret pop lods dec hlt out sarl sti add mov dec cmp int3 psllw xchg and jg fcmovb lea mov aad push mov mov push jg fxch in inc repnz push lock test cmp int3 (bad) or inc mov fisub cmp pop cltd mov and loopne sbb les and jbe out dec fnop and std mov jns jne loope add icebp fsubrs sbb lock sub jbe push xchg out xor jae mov mov pop js stos mov fiadd das in pushf jb or loop syscall xchg nop popa pop mov cli cwtl and and out push push adc inc sub mov (bad) pop xor stos js outsb hlt add push div adc sub (bad) dec push jo mov sahf repz or dec xchg stos insl cs sub pop (bad) je fistl push sysexit or pushf jnp sub xchg ds jmp (bad) sti movsb or sub hlt adc call xchg ja cld adc out das mov dec xor mov mov xchg test js (bad) sub gs add lcall fidiv mov or xor xor and push push push mov jnp xchg and adc std mov lahf test loopne test cmp into fsubrp loope or and gs adc adc add or jg rolb gs or ror aaa in sbb dec sti adc and cmp and mov icebp inc sbb adc sub dec mov movsb outsb push sahf (bad) adc xchg mov shlb subl ret jnp shlb popf negl addr16 add pop (bad) gs add setns fnsave stos and cwtl das into adc mov jp or (bad) icebp xor xor push (bad) aam push push mov sbb jne (bad) icebp xlat lcall cmpsb mov mov stos push jnp adc pop fild adc sbb pop mov and cwtl jecxz cmpsl (bad) mov inc mov xor mov sub xor xor insl movsb fstpl adc and inc enter lahf cmp stc stc xor mov rcrb xchg bound ds in (bad) leave jae pop sub xchg cltd push pop outsl push pop arpl jne mov cmpsl in es in sahf ljmp pop xor sub das dec sub test cmpsb pushf outsl dec loop or scas jne scas mov lret fwait mov out xchg xchg loope shll loope add out stc jp enter pop sbb xor sub cwtl push dec mov dec dec nop (bad) xor stc fldl fwait dec out mov add cmp mov in daa fsts dec sqrtps aaa pop inc sbb mov add jp push adc mov push adc mov (bad) jg xchg data16 sbb xor sub jbe sti mov jns pop pop insb test sbb les dec add sub jo lcall (bad) and mov ja or mov sub jecxz dec add bound lea out (bad) aam pop shrl xor arpl or lods scas out xchg mov jno icebp mov mov data16 movb lret es or jle dec int sbb sub (bad) jno pop enter jnp mov lcall mov cld in jp sbb rorl clc idivb jno push push frstor adc daa mov or xor out out mov fld popa adc mov dec iret (bad) jno subl push xor test roll and cmp addr16 stos add (bad) sub ljmp sbb inc jp outsb mov dec adcl pop cmp mov fiadd rorl sub push pop or push lret test aas ror push push dec dec mov xchg push lret or aad repnz pop loope scas cld cmp jl fldcw mov cmp gs adc rcrb xchg stos jnp out pop and jae rorb dec hlt inc xchg (bad) xor xchg call rol cli mov rclb sahf sub bound in adcl in sub cld pop jl imul sbb int3 jnp dec cmp mov xlat arpl fiaddl sbb in stc inc sbb sub idivl outsl fstpl push push repz lea mov ljmp jecxz cmc arpl inc les sub inc push roll cmpsb imul push jp or rolb cs push and cld and std repnz inc lcall jecxz xchg pop sub adcb stos xor int xchg sub push das jmp sub push mov or sub jno sub imul mov (bad) push sbb xor mov dec mov pushf mov scas fdivrl xchg inc ror add lock dec pop (bad) shrl aas ljmp jp enter cmovg mov pop jo and mov imul pop xor pushf test fs mov lret xor mov enter lods pop gs cld add inc repz das out and fmul std data16 mov ds inc xor in xchg hlt and (bad) jmp pop add lcall jb lret xchg mov rorb inc je xor xchg or imul adc pop sub xor inc jecxz pushf inc cmp add dec in xorb sub scas movsl aad jecxz std fnstcw sahf sub push and addr16 jnp call and jmp push imull sub ljmp mov dec (bad) mov fstpl mov inc test out mov not inc and lods inc or xchg sub js xchg sub pop popa cli test pop imul leave rorl inc (bad) xor fsubrp popa mov jne imul fistpll ret (bad) mov mov adc insb sub add imul dec jl sbb bnd adc (bad) xchg sub cmp insb mov rcrl sub push orl outsb (bad) xchg xor (bad) mov cmpsl dec test fs jle jecxz in adc fbstp mov push test pop push pop sbb pop lea jle dec mov jl or icebp adc pop hlt clc dec inc sbb add xchg mov ljmp test rorb (bad) push adc idivl cmp (bad) xchg js push add ljmp std fiaddl jne mov shr jne xchg js jae mov mov hlt jge inc xor mov in lret xor mov jg mov push pop inc adc lahf outsb hlt out and xlat mov arpl call lea jl pop jg sub ret and cmc dec mov adc jns insb (bad) inc or rol push mulb xchg dec add sbb cmp jp sti or xadd pop jge and adc test push out scas or and cmp outsl (bad) cltd ljmp lods mov jnp gs mov or add test dec neg and cmc movsb sub jmp sub mov xchg (bad) xchg mov sub inc mov push sub arpl sbb std mov lds out mov icebp xchg pop xchg dec cltd mov mov mov std cwtl cmp xchg vmovdqu and icebp and adc orl sub clc cmpsl movsb or or aad add xor push fcmovne push mov pop das push mov or sahf dec jns ficompl shrl xchg or fisub sbb aam (bad) test sbb (bad) aam dec movsb in lret xchg inc push mov adc ret mov insl aas xchg pushf sub and and push fidivr inc and xchg push inc sbb sub out sub outsl mov (bad) add leave inc jne sbb das push in cmp mov aam jge popf arpl xchg lret jae xlat stc mov and sub jmp pop aad es dec pop fdivrs outsl push (bad) js popf push xchg xchg adc cwtl pop movsl adc sbb mov insl out mov mov pop sti mov mov sub add mov and insb mov jno call lret test push les test mov sub and sbb iret std je movsb fsts into push sbb xor pop jmp inc or rcl cmp and rorl mov scas xchg or adc pop add cltd jmp pop std adc js pop sub repnz (bad) js adc aad pop cmp inc adc cld push jne cmp shrb repnz stos push jg cmpsb push push mov sub mov insb daa xor push inc test and movb mov mov and xchg loopne imul cmc aam mov pushf popf out inc sub mov enter mov pusha jmp je mov cmpsl or fisub int3 pop cmp push ss sahf out mov (bad) lahf dec adc aad add shrl repz inc mov lea pop les adc scas mov inc stos enter jb mulb pop mov je repnz ja sbb sti icebp jg dec in ret ljmp test lret lea or and notl hlt xor pop add rcrl lcall xchg sbb adc sbb cld mov push out lret fcoms mov aaa out loope mov sbb pop xlat lock (bad) mov bnd scas hlt cmp mov icebp lea cmp test movsb inc mov push test loope dec jp ja cltd mov xor cwtl jp ret imul sbb in enter sub cmp dec test add mov in and test insb stos ret fwait sub repz jae addr16 mov sti mov mov shrb sub pushf xor inc jecxz cmpsb sbb int stc pop cmc mov pop in das data16 mov jle push mov inc cmp in xchg dec (bad) mov jmp icebp sub mov jle adcb stos dec leave lret mov es shlb adc mov xlat jmp adc xchg (bad) nop and xor std out xor in fnstenv jnp in fnstenv jnp in decl add jg insl push cmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov sbb bound adc add shlb rcrl inc enter and neg sti aaa cs lahf clc sahf out add dec add jmp outsb int dec adc test xor xor push mov pusha sub lret mov sbb push dec mov xchg push mov jnp pop lcall adc clc jo lods clc and es push sbb arpl xor ss hlt mov ss cmp and lock movb adc gs xchg push mov adc aam outsl and push (bad) stc js inc mov mov aam cmpsb arpl jmp dec sub sub xor cld aas push pop stos stc mov adc (bad) jns xchg (bad) mov jnp xor scas test out cli jns lods repz jno lock mov dec xchg lret sub addr16 xchg xchg repz mov mov and inc mov ljmp arpl incb push arpl gs and dec dec (bad) js bound movsl lea push out fidivrl xchg xor mov adc xor jmp dec aam push repnz add inc mov and cmp jne inc push pop out call mov aas sub insl and mov daa in pop test in sbb iret nop cmp mov jp and das xchg jecxz fwait addr16 lock bound sub xchg cmpsb and lcall in insb pop mov into cs ror enter dec cmpsl push fdivrs stos sbb mov cs repz xor sbb scas daa shrl mov ret mov sahf cmp fisttpll dec dec (bad) lret push hlt cmp sub mov mov sti lret pop loope jp clc or xor (bad) lock add pop je out test fldenv xchg jae cmp mov mov orl dec repnz jne dec ja arpl sbb idiv scas adc rcll mov test xchg xchg inc lds sbb lock iret pop outsl pop mov lods call cwtl mov jae mov je fsubs rep fs iret call inc jg addr16 js iret mov dec ja mul add inc sahf test fnop mov jmp xlat push outsl loope dec mov scas mov imul ss mov sbb adc les cwtl lds and pop jae mov scas out xchg xor cmp in negb xlat xchg testb fwait mov push lea out cmp ljmp mov push mov sbb and push mov enter xchg in rorb rorb inc and push loope lret div clc popa call inc sti pandn notb gs fs insb mov xchg pop scas dec or paddsw jnp inc pop bound test dec popf mov clc fs out or add jnp ret cmp and cmp lea adc data16 fdivr push push out pop adc arpl sbb loopne xor out inc dec and inc mov rcll sbb pusha in test addr16 (bad) mov lret jno mov inc daa xlat mov xlat xchg dec loop ja mov inc inc pop je lea rcl (bad) in and push dec inc mov xor lcall inc cmp pop loop (bad) mov fimul cmp dec hlt adcl inc pop xchg stos sbb sbb cwtl add and test repz dec js popa (bad) mov mov stos inc jbe push mov hlt mov push inc mov push loopne,pn push or (bad) in add adc pop js jecxz pop push loopne rcll cld testl leave dec in dec dec jp in ret jge push mov test push stc or dec add inc jo adc fdivrl push xor test dec mov lock push movsl inc or jle imul jle out inc pushf sbb adc (bad) jno jmp jmp jge sub ds xchg aam test mov test lods pop cld call hlt out pop mov outsb inc jg xor jg negb and cs xor fisttpl (bad) sub or into xchg dec sub and sahf mov cwtl lods pop sub sahf push je cmc jmp pop xchg popa dec mov js enter aas dec push fwait mov sbb cmp cmpsb pop and dec or in ret dec sbb rolb xchg fs (bad) ljmp or loop sub nop xchg pushf add inc pop push or sub movsl xchg ljmp in pop das mov movsl fwait and out sub imul jle mov xor bound xor cmp aaa (bad) mov call stos jbe fucom push cmp idiv in and sbb leave mov imul pop mov popf (bad) lcall sub mov add les ljmp or enter jmp mov mov cmp arpl push aas ja cmp ds cmp mov mov cs andl adc sbb pop hlt pop (bad) mov lods push out into mov clc (bad) push jmp outsb xor ja lret pusha nop cmp int js jp,pt dec aam sti sbb ljmp lcall insb sti jae fisttp out out out movsb (bad) adc (bad) xchg in xor xchg lret sti je scas add pushf xlat cmp add in sbb mov add pop inc in fisttpl or adc xor sbb sti adc fidivrl jo daa or mov (bad) mov scas dec mov add out loop add in push fcompl push mov jmp adc xchg aaa xor dec sahf enter lret fistpl loopne dec scas mov popf faddl jecxz imull mov push movsl ret push jp cli or sbb or push pop fwait pop xchg cmp pop jnp lock pop and dec or enter dec fisttpll cwtl mov mov mov pop test jb lock cmp daa das jmp cld push (bad) push xor jle insl loopne in outsl mov xchg and outsb lock mov hlt aam lods jb sti push xorb jo scas mov inc outsb mov sub shrb xchg arpl sahf in adc push ficompl xchg mov cmp xchg sti ret pushf int3 fistpll jae pop pop push andps shll cmpsb aad insl mov scas fs leave (bad) adc jge xchg mov xor cmp mov lock jo and (bad) adc icebp dec fcoml lret jbe jnp xchg mov pop adc pop das cli test sti loopne sbb (bad) jecxz aas mov xchg pushf aas inc mov jns aas mov mov lcall bound or push andl xchg rolb fucomi loop dec xor dec fnstcw cwtl mov std cmp out call and iret mov fildl sub aam push jecxz mov lock ficomp imul mov xor jge and cmp push jnp xor xchg fwait in push ret mov imul push fadds and xlat sbb sbb fstps fucomp out pop icebp push and rep sbb aas cmp in pop fdivp (bad) arpl es ret mov ljmp pop xor sub sbb clc pop xor xchg mov jnp and push test es xor scas pop mov pop ja (bad) jno xor stos adc insb (bad) ljmp and sbb dec dec test and adc or pushl loope dec jns pop lea mov mov xchg fcoml lea imul daa bound sbb clc dec add lods cmc call mov lock int std inc jo stc or xchg inc in popa dec mov les lods dec (bad) mov mov ss mov xchg (bad) mov push and insb fistpl test cli mov test mov jne pop ret das nop ret arpl test aas xor imul or push mov xor xchg pop into test xchg push mov xor out fs into lods in sub push ds jl pop call stos sub jle mov popl jl sarb mov int3 (bad) adcl jbe lcall idivb je dec sbb hlt das pop in cld hlt mov xchg and dec or es mov scas (bad) hlt roll in xchg jno pop mov jae cmpl or cld mov sbb and fs mov loopne insl jo pop dec outsb cmpsb pop jle mov cmp mov out pop mov xchg mov out bound add arpl inc jg cmp mov mov mov in pop lcall push mov testb out mov subl inc jle jbe adcl out addr16 mov inc inc jo and out pushf add fbld pop cmp insl adc in adc sbb rcr xor xchg pop call mov or add sbb push scas scas das cs fnstsw mov add sahf dec adc cmp cmp lods outsl pop ds mov xchg pop mov cwtl movsl mov stc (bad) stc cmp sub inc fcomps loop icebp lcall lahf mov fadd jp mov sbb xorb or dec add cld bnd gs bound fldl (bad) inc sbb mov sahf pop xchg or out cltd fcoms sub pause cmp push or xorb imul mov sbb mov addr16 pop mov aaa stos sahf inc inc mov cmpsl addr16 jle repnz clc lds pop rcrl inc ret in push sbb (bad) mov je dec (bad) inc cwtl mov jns jle dec fs aaa insl fidivr mov jmp pop mov psubsb jecxz push nop sbb pop scas les popa inc (bad) mov xor mov repz ds inc rolb enter jo mov adc je jne popl stc push push lods popa or out lcall cld out jns aam jno dec test mov dec ljmp jns mov sbb sbb mov mov lcall push repnz inc mov dec push pop test ds pop lahf jl sub fisubl in mov pop fmuls ja ss cmpsb orl jnp testb adc outsl cmpsl xchg add sbb enter xor flds outsb lret pusha insb outsl decl lods sbbl dec lret (bad) cmp cmc jae lahf xlat mov lahf pop test sti jns push repnz xor scas mov jp push cmpsb xlat dec (bad) into cmp orl sti outsb inc sbb add inc and inc xchg popf je mov std inc jle lea pusha inc leave lods sarl push iret push fdivs xor popa std scas les imulb sbb cwtl sub les sbb inc shrb test rorl stos sbb mov into adc cmc push add add jecxz sub fnstsw lods je sbb mov sbb inc add xlat cmpsb sbb cmc cmpl xchg add cmpsb add scas pop test stos add rorl add mov insb cmc sbb pop nop in loope mov xchg ja sarb pop (bad) pop test mov das pop xlat lahf push movsl rcl mov dec out es mov inc sbb sub xchg cmpl dec jo sbb add cmc pop jge pop popa jae shrl push pop xchg dec xchg decl and outsb xchg aaa xchg mov inc outsl daa pushfw scas les lret jl ret movsl sbb ja xlat fdivl inc cwtl jae arpl jg adc loope cmp mov adc (bad) stc pushf stos and pop stos rcrb mov jp bound ljmp cli out cmp in jo cmp mov clc push pusha insl push xor (bad) pusha (bad) fcoms jno xchg nop vunpcklps jg cli mov or xchg imul adc cli addr16 cmp xchg sbb dec xlat jp jg sarb xchg cld dec imul enter cld dec in iret xor cmp sub fimull dec lret sub or xor int3 cs push in imul jmp mov js add mov or dec mov lods mov into adc push ljmp test lock pop xchg mov mov sbb jle scas iret andl xlat fdivp xchg fadds fidivl or sbb sbb sub sbb mov imul pop int3 cmpsb inc sub and (bad) push ss xor adc fs adc xchg sbb jecxz xchg int3 mov sti pop xchg test jbe shl ss adc cmpsb in push push aaa dec xor mov sub push mov xor sbb push (bad) lcall dec xor out dec out sub xor outsl ficompl mov push fmulp mov jle jbe push push outsb inc scas xlat push mov cmp and leave and pop aam dec add in mov xchg enter add call hlt cltd pop cmpsl idivl xor das mov cmc ret ret test mov pushf movsl arpl inc sbb xor incb mov xchg add test jns rcll movl sti push hlt sub mov lds sub push dec rorl cmp decb and test pop int3 decl cmp mov jp call jg add add fwait or jecxz mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov pusha (bad) call mov orl or movsl inc nop push push orl mov jae gs fwait clc sahf out add (bad) incl add iret in pop xchg jecxz je fs mov and push mov loop pop inc cmp mov mov cli ljmp ja (bad) mov sahf call mov outsb lret jb adc jne test (bad) stos or ljmp int3 je jl adc mov xor in mov mov js adc xorl out and jg push jne pushf sub jb pop aas scas mov adc insl mov and push into addr16 inc push shll pop push test test (bad) cmc cwtl fwait mulb in sbb adc popf xor or mov sub pop mov setns daa pushf call cmpsb loope pop das inc iret repz inc pushf movsl inc xor les dec or das repnz lret sbb faddl (bad) sbb out pop dec stc push (bad) jmp dec and ss dec push test inc fsubs inc out data16 inc dec pop dec or push repz and jecxz xor push popa inc mov out jnp jns dec add cmpsb mov dec fsubr test sahf popf out pop dec sbb add mov jne xrelease push cmp aad xchg xchg push dec mov pop (bad) shlb sub lock pop nop mov dec push cmp loopne push addl lahf hlt jmp (bad) push cmp or lds (bad) lock jae or jnp gs mov mov adc daa cmp jp fwait add (bad) int3 ficompl jo imul mov (bad) pushf jae xchg inc lds cmp popa inc mov rolb test pop int3 mov adc sub (bad) mov (bad) fcomps js je pushf jecxz out dec pop fisubl out mov enter movsb outsb pop jns in or test std xchg cli ljmp lods ljmp mov cmp lahf lret icebp mov jnp jge in mov pop dec repnz and vunpckhps rcl out cld push jg pusha mov sti outsb aaa hlt ss pop pushf jl nop fimull stc and das cmp or insb lret inc lret mov daa movl lcall inc ror mov jp mov mov push sub dec rcrb lea pop add loopne mov notl mov (bad) movsl cli cs insb xor inc out dec xchg pop sub cmp xor cmp sub xor xor int3 xchg test cmpsb sub lret test ss pop nop jb jns mov pop iret fild push cmp addr16 pushf stos ds cli cmp hlt pushf pop xchg push cmp loop sahf or popa dec fsubr jb loop push popf dec xchg jns fwait jo mov repnz sub dec movaps and daa lods in test insb sub ja sti inc call std dec sub xchg inc cmp seta hlt sti out jne mov lret inc gs loope loope pop add push and add and jnp dec (bad) lcall xchg scas adcl int nop push inc mov mov or rcrb and insl lds xchg mov cltd nop daa (bad) or jl movsl (bad) adc repnz mov icebp bound aad push xchg push push (bad) add fildll and insb test sbb cmc pop pop lcall gs mov mov inc setle sbb add ljmp aas inc pop outsb mov (bad) mov pop pop inc mov xchg fwait xchg sub outsb mov pop pop in imul std aam incl pop pop adc addr16 inc mov loop jp mov dec movsb es push mov test (bad) pop stos dec hlt xchg ret les pop inc jne sub aad mov push push nop jnp jle gs inc xor mov xchg (bad) divl lahf popa movsb pusha jle mov cmp aas aam mov push inc (bad) jno mov les repnz pusha xchg push loope pop inc lret mov aaa mov pop xlat adc flds xchg adc and mov aaa mov in dec xchg cs lods mov cmc lods mov inc in xchg xor pop in or sti xchg das into mov roll mov xchg cld popf enter adc xchg lcall aaa adc mov mov lea push jge outsb add and (bad) jmp fwait jbe test add (bad) jecxz dec xor stc lea or push pop aas pusha and jmp xchg leave jbe xchg fnop sbb cmp cld sbb add cli xchg sub jns std int3 (bad) in inc (bad) insl xchg ds jg ret cld scas jle,pt (bad) mov rorl popf and in sbb xchg mov push mov jno add jmp pop loopne inc jne nop jl cmp mov jp add or ja push pop pop xchg int lock out fadds idivl arpl andw in dec fisubl mov pop nopl cli lods stc sbb repnz mov push sbb lcall nop std push and pop addr16 lods leave xor (bad) or pop outsl and inc outsb outsl cwtl jmp pop das pop mov setp and push out rolb mov pop call sub mov sub dec in cld leave inc xchg sbb negb mov imul jne lcall rol insl lret push inc lock (bad) dec mov cmpsb hlt lods pushf arpl (bad) dec mov adc or repnz and lods sub aaa add das test fbstp hlt movsb insl xor repnz add rolb jmp lock sbbl enter cli (bad) xchg iret mov test add out sahf lods inc mov insl push imul cmp adc mov pop or jb lods xor jl jne adc mov shll push pop adc int (bad) jecxz cmpsb jp pop scas push jae (bad) pushf js pushf push (bad) inc int lods imul arpl sub loop sbbl imul pop mov jbe pop push aam ret jg mov pop jb int xchg and xchg pushf jmp mov fcom mov ja push lea mov clc or test cmp nop xlat cmp rcll inc stc mov dec xchg sub divb or xor push dec inc int3 std dec mov sbbl sbb test sarl in jl sbb jbe movsb pop test fwait rorl mov xor pop mov in push and adc dec xor jns adc xchg imulb popf aas jae lds mov pop ret push mov fsts xchg mov fiaddl notb iret (bad) jl les in pop aam or int xor stos repnz push push adc fs mov icebp sbb lea fbld (bad) mov jge es (bad) int rcrb lret loop loop jg jns xor dec xor sub fistp dec aad cwtl xchg adc test mov xchg (bad) jno xchg scas std jg cmp (bad) pusha lcall fldl std in out aad mov cmpsl std stos in iret fldt shll scas mov mov mov (bad) movsl imul jge pop ja jle adc (bad) mov xor xchg addr16 cs loop push xor repnz or add mov inc jmp dec sbb adc cltd jns push imul adc and or cmp mov xlat stc xchg (bad) fisubrl mov jbe shlb mov jl cs cmpsb sbb movsl stos cltd daa push jno shr mov ja sub sbb push scas sub xchg xor icebp aad loope mov mov adc sarb mov and jecxz sbb ss es jg insb sti popa inc jns mov (bad) mov mov inc rorb pop inc xlat scas jle shll mov xchg xor mov cmp adc stos loop cmp out xchg popa jle repz cltd xchg jle addr16 jo pop mov pop xchg push cmpsb insb sub test test push cmpsb std pop (bad) push adc or dec fnstsw mov and jns and scas adc loop and das xchg cli loopne (bad) cwtl cmp mov fsts sub add (bad) jecxz in out shlb inc cld enter and sub shrl mov std sahf mov stos push (bad) mov mov cmp push scas jle push sub ja mov inc jmp fsubrp push jecxz stc and push jmp mov sti sarl dec mov xor jl jb and add jne out gs pop (bad) jo sbb fcoml xor jns sub mov mov xchg sbb push (bad) and jbe hlt and xchg add jb pusha push xchg nop in clc inc or test call mov adc sub test movsl add jecxz and inc stc cmp pop dec out cmpsb leave es lods jnp and inc sub out fnstenv jnp jecxz add and es add add fistp inc ret dec xor sub sarb pushf (bad) sbb inc or (bad) add cs ret mov popa cmp cmp and or decl test (bad) loopne jno (bad) jnp mov xlat insl lret xchg jo xor cmp std lods sahf std jp push cmp xchg xchg lods adc cmc (bad) sub xor mov stos pop cwtl fs dec mov mov es int pop ljmp fucomi jle add or gs imul mov addr16 in jecxz in fnsetpm(287 icebp mov decl ja leave mov iret add pop mov xchg mov push jo insb adc dec add adc dec addb jle in mov mov lcall xchg es sub repnz push mov mov xchg mov jmp pop scas notb in jecxz lods movl mov inc sti outsb dec data16 dec sub sub das mov pop cmp add call push cmpsb bound mov mov (bad) pop mov and pop decb or movsb inc push mov xor cwtl push inc outsl mov lock xchg add xchg xchg pop data16 fdivr add sarb sbb lcall icebp and outsl mov out jle (bad) adc fnstsw xor cmp mov mov lcall push mov dec mov sub pop dec fnstcw sub aam push (bad) out jns mov lret imul sub cmp pop add lods xchg aas sub sbb lea pushf jno jns enter out sub test xchg call pop rcrb (bad) mov (bad) jno out imul jmp inc mov popa add je add lret xchg insl add int scas dec sbb (bad) lea and bound sbb sub jmp sub pop mov cld andl es pop popf int3 test aaa adc dec jg mov fwait jnp sarl mov xor sbb imul fwait popf cmp pop pop xchg push outsl popf call stc into adc (bad) imul fs ljmp test cmp jp cli out xchg add (bad) xchg xor lods jecxz fnop xchg add pop mov jp jno repnz add enter mov int cli xchg sub sub outsb pop iret sub test mov stos dec sbb ror data16 mov lcall lea gs jle imul lods rorb jnp xchg pop pop pop out mov nop sub jnp push or dec les gs (bad) sub ret lcall mov jae sub mov push adc jge arpl stos mov adcl mov ret sub and push sbb cmp cmp pusha mov add (bad) push test cli jo lea xor jge mov or sbb xor mov mov inc out in xchg out lock mov idivb jle jg idiv jnp pop int3 and push jmp inc arpl sub test hlt xchg lret inc fcmovbe lods hlt hlt add sub and test and xchg mov hlt in jp dec test add fidiv push push dec imul adc mov outsb (bad) sub fldt lcall cmpsb (bad) and pop jmp daa dec xlat cmp out pop cwtl into lahf aad ja xor sbb push mov shrb (bad) cmc push push jl dec (bad) lods adc loop jnp jbe cs pop out jge push loop (bad) pop aaa insb sahf aaa jmp inc mov push jne scas jno in jp shl int gs test push dec test fxch and cmpsl icebp sub jge or adc xchg lret sahf mov mov fst insl pop into mov pop jmp sub lods xlat cmp fstl out int call (bad) cmp outsl loop scas pop (bad) jne inc out int aad pop mov xchg or jge mov jb mov add cmp jmp cs fidiv mov scas mov in pop stos rcll fcompl outsl and xchg dec xlat in push xchg sahf sub movsl lea xor fdiv mov stc push loope xor sbb jne sbb xchg cmp stos adc out inc ljmp and sti mov les push jecxz rolb and (bad) push cmc push adc leave and movsb in adc sbb xchg mov jo jae and pop test xchg or cmpsb rorb and popf jbe (bad) pop add cmp out fidivr mov jnp out std incl add pop xor mov arpl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc cld (bad) icebp mov xor push pop adc or cltd sbb sub mov xchg cwtl cltd adc ret into jnp,pn cmp fistpll stc repz icebp js clc jp fild add and jg cs jp lret mov jg lret out pop sbb jge push sub movsl std inc js push scas lret xchg jmp dec repnz adc inc jae dec mov out flds xchg pop pop add clc pop dec xchg jle aad test test lock cld mov jne jbe insl mov cltd adc aad dec inc or test inc imul pop test inc mov aam cmpsl hlt cmp ficomp or (bad) je sbb mov cld dec xor icebp mov cmp iret loopne or mov scas cmp or rorl loopne ja (bad) lock dec adc fldenv aaa arpl dec nop mov mov test fistpll mov aas ret inc movl je xor test pushf adc je xor add push ret js pop add lds lahf fsubl orl pop cmp mov pushf adc mov cmp in cwtl scas icebp fcom mov cmpsb mov lret ret ja ss test imul mov mov in add add cmp idiv push enter pop sbb lcall gs xor outsb mov (bad) call mov das inc cltd pop jnp add sbb sbb (bad) sub push je inc inc jp cmc sbb scas adc jp addb outsl fs hlt jae (bad) cmp pop and repz mov dec test inc mov push pcmpeqw mov inc xchg mov test mov mov mov cwtl jns pop jne movsl (bad) and aam pop mov lret cmp jmp in add xor sub add movsb push mov or xchg adc or add pop mov call or cmpsl cltd in cmp mov push jae mov mov mov sub pop iret ljmp push adc rcrl mov lock cmp push out mov and fsubrl fist shll push jnp inc push dec or jbe jns popa repz xchg jnp into xchg movsb xorb and pushf outsl add mov es cmc dec leave and lods mov cmp fistpll mov test add outsb out lds cmp mov cmp add pop jb nop sahf sbb pop or xor repz push int sbb xor cli mov sti fcomps pop add shrb add stc aad gs and jp fadds pop and test add mov insl call decb (bad) sbb xchg cmp adc xor inc test pop daa mov sub push movl or and push add dec inc xor lcall ljmp pop add aad scas dec lret xchg mov jns arpl (bad) icebp inc hlt mov push xchg out xlat mov sbb lock add inc mov lret out xchg jmp into push jmp add lods pop add and dec rclb cmp or dec getsec out jae in ficomp fadd cmpsb rorb adc inc inc out cmp sbb (bad) je jg call out or mov cwtl jle lods sub enter or in aas popf dec mov inc fdivs jno popa or out stos xor adc or add stc hlt jp arpl fcomps loopne cmp mov das and ret inc push cld and fcoml xchg out mov hlt aas xchg loope and iret jnp lcall add daa xchg or sub cltd iret movsl sahf pop sti add dec jle adc mov mov test cmc arpl lds cli push mov pop sbb mov (bad) dec fnop pop xchg pusha cli dec cmpsb (bad) pop mov cltd push lcall int dec dec cmp dec mov fnstenv jbe leave add xchg mov adc out mov (bad) test pop mov adc enter orl cmp (bad) mov cli ds repnz mov iret adc mov sub push (bad) fadds adc dec ret (bad) and mov (bad) lret sarb adc in lea (bad) or pop in idivl mov (bad) scas lods int cli iret je mov arpl dec fisttpll popa movb pop out call stos fchs fcomi pop in pop push aas (bad) jb adc std imul call cwtl je pushf data16 dec add iret jns adc sub xchg mov jbe int imul (bad) fidiv dec das leave jns jae fucomip mov (bad) int test pop outsl pop sahf stos pop push add sahf mov cwtl leave push lret std bound dec scas adc jmp in mov out jbe fidivr and fildl stc mov jg mov inc or push pop hlt mov sbb adc enter inc inc inc ljmp dec into pop mov adc adc lods lods inc imul lahf mov cmc push inc enter push dec inc int xchg mov out mov mov (bad) add push fsubs out dec loop lahf cmp sbb imul inc pop cmp (bad) clc ret and mov aad pop mov in stc int3 in insl mov pop inc xchg xchg mov or gs js,pn (bad) ja push mov fidivl sbb add adc jmp std cmp (bad) dec cmpsb cmp insb push js out lds dec fs lods mov icebp (bad) xchg mov inc loop and je ret stos inc or adc les ljmp push fs sbb test js pushf dec incl je dec lods (bad) lock arpl sub cli cmp sub stos pop push add pop sub push sbb icebp adc jg data16 jo,pn mov test in aad mov movsb jmp push and or mov dec test jecxz cld sbb jp xlat xchg pop adc and mov repnz imul movsl daa clc jae mov (bad) mov jle xlat xchg call or xlat inc xchg subl cmc insl fsts out mov into ror and nop xchg cs inc add ret cmp out addr16 inc sub jl add sahf iret (bad) xor stos (bad) jnp sub mov jnp stos xchg push ja (bad) mov or insb mov mov cmp and scas sbb std add inc mov (bad) mov or cmc imulb ljmp jns mov or imul mov jb xchg or negl mov std dec sub (bad) test stos mov xchg aad adc mov (bad) (bad) cmp jg xchg xor sbb in mov mov cmc nop pop xchg aas repnz stc adc push mov cmp jge mov std scas (bad) adc ja in sbb gs jb repz aad jl push xor ret (bad) stc lahf loop jp iret jp imul mov jmp mov lea ss sub arpl cltd lret mov push push jmp xchg sti mov xor adc bound imul cli and pop pop sub mov or icebp js cwtl jae into hlt xchg mov in ret lods jl (bad) jp in movsb fsubs dec adc mov adc loopne pop inc bound pop lea cmp xchg inc (bad) stc mov xlat shr jge mov xchg mov or jg cwtl iret mov xchg mov pop push sbb scas sub mov es arpl dec leave in pop mov ret cs inc aaa mov adc cltd push xchg fwait mov lahf sbb or pop xchg in repz sbb cmp stos stc fidivrl jns (bad) cld and or cmp jns movsb sti or je das rcr in jnp pop lret pop inc pop (bad) pop iret xchg xchg jp pushf (bad) and notb icebp popa jbe sarl dec mov movsl in fimul xchg lock push lahf push loop sbb cmpsl fdivrl ffree lret call push and mov fnop out sbb cmp pop and add sbb or dec mov fstpt ret lods pop pusha push adc jno rolb inc xchg sbb dec xor mov adc xor rcr mov pusha das and or scas ds push bound lret mov xor dec jne mov popl mov jmp adc aaa push cltd call push push pop loopne cld das fild mov mov and push in and in mov repnz inc loopne rorl push pop out outsb pop jecxz mov stos and ljmp (bad) fcomps or adc fstl jecxz dec ljmp jbe das rcrl cmpsl mov pop fstl lret pop ret push (bad) pcmpgtd inc les inc jl js cld sbb adc out in inc or add xchg loopne nop adc out dec dec popa imul in clc cmp mov and mov movsb movsb les pop stc fs pop mov fisttpll imul mov pushf fistpll shr sub jecxz rcrb popa orl fidiv xor add fwait add push clc xlat add adc andb cwtl adc and shrb push add repz movsl dec add add jbe (bad) hlt sbb popa xchg add cmc push mov out add adc into (bad) adc mov int3 sub aaa jno mov jb xchg adc dec add xchg mov loope sti lcall push insl loop jl dec jg je cltd add dec or test mov jle sbbl leave push mov xchg fdivl pop adc dec lods jns notl lret (bad) jecxz push sti mov sbb xchg mov stos dec inc jmp roll fcoms add adc mov repz das ret xor add sbb js adc outsl repz notl std mov pop je and (bad) imull out stc stos mov scas sub inc sbb dec ljmp popa mov in jo cmp (bad) loopne cmpsb ret sbb push cmp sti inc outsb dec mov aaa cmp xchg pop nop mov nop jmp xor mov xchg or dec jl lret inc dec dec (bad) int sub (bad) cmp mov into sub cmc lcall mov mov fldenv fstpt outsb xchg add pop pop add (bad) xlat push jl or (bad) mov jno cmp paddusw sti ja int jecxz cmp jle sub sbb and aas pushf into fstps ret sbb sbb add imul dec pop inc jnp (bad) mov jmp decb lds sub (bad) push mov lock push js sahf mov push sub and mov sahf pop fsubrs mov addl (bad) dec push sti jae sub fcmovne pop imul in jbe mov mov sub test inc jbe mov mov pop sub fild call sub jns scas repz in jbe das or dec cmpb cmc data16 push pop ror pop data16 mov rcl jns out lods icebp mov xchg or inc jne out decl jbe mov push addb or lret pop loope fwait leave or push add xor cltd movswl jne jecxz or data16 mov push inc jbe sub inc icebp fwait movsl cli mov inc or (bad) mov xor in xchg jae xchg and sbb sub sbb push hlt xchg cmp cmp (bad) ljmp cmpsl aad push dec pop mov xor rclb mov push mov adc outsb sub adc lds or icebp enter jmp (bad) nop fldl jae mov add mov sub inc push adc std popl insb and jne add sbb leave or lea lahf and in mov xchg mov fsubrs adc pop xchg push adc mov lret loopne outsb cmc mov fcomi jge icebp xor sub mov push inc and mov out movsl dec (bad) cmp shrl mov pop jmp fs ds xchg stos loopne shr add imul add enter jae inc fdivrl test dec ds push test scas inc inc mov test mov dec jo mov ret (bad) xor ficoml mov mov mov xor orl pop inc stc in pop or jns (bad) xchg dec xchg addr16 and stos xor add push cmp movsl (bad) mov js icebp std jae in loopne xchg dec test mov dec add fs push ret add sti cmp aam nop or pop aad arpl dec dec roll int stc mov jae cs adc mov aaa ficompl fs clc adc fildll shrb and jg fidivr fwait out stos mov into sub and aad loope (bad) jp jge push and rcrl mov adcl or loop dec aad push mov ljmp punpcklwd push adc nop inc in addl sub fidivrl pop mov sub sbb sbb test fnstenv dec pop jle adc adc sarb (bad) pusha adc aaa or cld xchg jne sbb cmp insb xchg imul bound jnp mov xchg mov mov jecxz adc pop in out add xor xchg (bad) push adc dec out push (bad) popf (bad) and ffree lret scas (bad) out xor popf cmp fdivrl cmp fdivrl add jg mov sbb stos fs add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc and rcrb dec sub jmp out push imul movsl sbb jecxz faddp idivl add push clc pop stos insb jp jno adc cmc fldt inc (bad) iret inc jbe cmp test push pushl pop loope ds sti xlat add (bad) sahf icebp int pop aaa fdivl inc xor fs mov aaa sbb jmp push outsl cmp adc (bad) xchg cmp jae mov fidivr mov int dec lods aam adc (bad) lcall mov hlt pop in xchg cmp lock mov enter in leave fidivrl sbb mov icebp mov pushl outsb jge fwait lock notb sbb sahf inc aaa jecxz mov sbb stc and or mov and sbb repz mov push stos or push mov js cmp out cwtl sub cltd mov int nop jmp lds mov and rcll stos cmp mov fs xchg andl cmp fisub bound mov mov and inc ficom adc (bad) rclb pop pop sub inc pop pop cwtl jp scas stc repnz sub aam xlat enter push popf mov fisubr outsl leave out fwait mov jp cltd idivb loopne imul shrb xor addr16 fucomip xor js fwait dec stos pop mov jb xor loope test inc sbb sbb mov cmc adc or stc mov inc repnz popf repz mov rcrb movsb int3 and or ds std adc jp pop or (bad) pushf mov sub leave mov sbb and stos cmpsl xchg (bad) dec xlat in pop mov mov cmp push gs lds icebp sub mov xchg mov jbe mov sbbl dec pusha int (bad) rorl mov pop pop fmul dec inc sub and lret rorb ja push rorb xchg insl sbb cmp (bad) int3 ror inc mov enter jnp ss mov dec hlt sbb das or aas and sub or nop mov sti xchg add les insl sbb or or xor dec and cmp icebp adc out ret mov daa (bad) xchg mov jo xchg jp jp or xchg add ret pop sbb das scas adc mov stos sti orl xor jle je mov dec into cltd mov popf mov popf mov xor xchg (bad) and imul fs nop xchg cli lcall xor cld push repz das inc xor and ja or xor (bad) xor mov (bad) scas int outsl int3 jge sbb add loop into andb aas jecxz clc decb push nop jbe cwtl sub mov xchg xchg adc aam sti lea or loope bound insl or jnp cmp ljmp outsl sti xor sti popf pusha push xchg adc lds clc sahf jne ret cmpsl sub (bad) sbb lods lret rorb mov mov adc dec outsl lock out fidivr sbb mov icebp lahf hlt inc adc lcall fsts xchg cmp push pop test mov out fsubrs sbb cli insl xor mov insl or adc dec dec dec fdivs (bad) lcall fcmovu adc cmp sti lret jge fwait aad xchg in push js sbb clc xor sub mov pusha and push cmpsb enter loope inc test cmpsb rorl js cmp jp into lods test mov pop pop (bad) mov xchg jecxz loopne cwtl test mov je cmpsl cli jno dec nop (bad) mov das add hlt mov loop jnp mov xor ljmp test leave dec ret pop std inc adc pop ror xchg push adc cmpsl popa and cmpsl bnd push or les xor or jmp loopne adc xchg push push or aas cltd sbb test adc inc jmp roll mov or (bad) mov and mov fnstcw test jmp pop lahf std jno pop inc icebp mov push outsl mov imul outsb push mov shll sbb lds pop ds add dec fs shrl outsl pop mov rcl rorl pusha xchg sub addr16 xchg shlb out add push or cwtl xchg fstpt sbb inc or es mov push push pop notb jns dec scas sub adc inc xchg cmpsl inc push test lret dec mov cs sub inc sub clc push imul sub (bad) sbb and daa ret xor push inc enter les fstpt mov sub mov jle xor cmp lock or pop aaa pusha fistpll into nop outsl push mov lds divl and cs std (bad) iret xlat cmp jge mov pop addr16 aaa sbb mov ret imul mov jg dec mov aas stc or push inc scas push inc dec mov mov pop sbb movsl lock mov ljmp movsl lret ds adc push loope xchg jne jp mov inc fsubrp and out xchg or jns stos mov imul push adc or enter std jle lock aad es lds xchg mov pop sahf push cmp dec ret dec xor (bad) ret les mov push in push pop icebp int inc fcmove aam mov nop inc pop mov out jmp adc adc bound push inc sub xchg xlat cli mov sbb dec daa loop outsl sbb fisubr in add jns outsb jnp js pop push xor dec cmp jns xchg fstps or push jne mov movsl jge mov cmp push inc add movsl int3 popa xlat sub jb mov xor or mov sub mov jo repz mov mov cmp and sarb in arpl mov out outsl sub xchg jp push (bad) sbb nop sub idivb push adc bound dec dec mov mov ret les clc mov push in pop (bad) int inc sub ss mov adcb jp aad rcl out mov pop scas and add cmp push test adc lods jo shrl mov data16 in sub mov hlt cmp cmpsb mov mov out stos (bad) repz mov cltd in fcoml addb lret cmpsl aam mov sub mov mov movsl in push sbb imul inc and sarl push pushf fdivrl mov xor xchg xchg cmc int3 (bad) sbb jmp adc mov xor sbb in mov (bad) push adc xor pop jge pop or out es subl dec push push sbb stc add call xor jmp xor jmp jge insl mov dec jge xor insl cs test lcall sub cld sbb aam (bad) push and mov inc xchg jns xlat es (bad) aad jb adc fwait sub fisubl jmp fadds adc aad xchg cld add or mov (bad) stc imul sbb mov dec cwtl les xlat int add hlt out xchg popa push rclb sbbb jns sbb jle inc xchg les or ss lods mov adc aas insb mov js xchg fcomi jecxz mov iret and shr rol pusha xor scas add loopne push popl mov pop sub cli mov jno imul call std adc mov jo push cmp fildll jnp (bad) pop sub mov add negb out rcll xor mov push sbb xor or scas outsb inc sbb daa or fcmovu pop cmp int3 sbb sub lret loop sub inc not (bad) xor enter dec aam in cli arpl sub sub inc mov cmpsb cmp push mov dec mov jbe sbb lret sub cmp aas and insl lods leave mov inc dec add mov jge mov pop andl ss jne sub (bad) cmp in jmp adc push sub lea lock and push enter mov pusha call fs mov push incb fstpl syscall pop outsb test push (bad) je (bad) fldl lods sub cmc fcoml adc mov dec cmpsl incb pusha xchg jae aad fs dec sti cmp stos push pop (bad) jl xor add push test mov out sbb sti inc pop mov sbb mov mov add mov out jae sub rcl dec adc test inc xchg pop lods inc sbb push repnz mov int add in xchg push out xchg movl mov inc (bad) das call test lods xchg cmp lahf xchg fisttpl jl scas mov mov cmp movsb outsb cmpsb add lahf push jb cli inc clc push icebp cmp (bad) lahf and imulb and or push adc pop test add mov sub adc lds out (bad) mov mov dec mov jbe push into scas and jle mov out sbb mov jmp pop pop xchg mov mov mov or push insb lock cld in je sbb push loop mov sub push mov and mov lods xchg sar xchg loope xlat cmc addr16 imul cmc jmp cmpl push icebp sub pop push adc cmpsb aam aas push out in and fdivrl xor insl insl jbe xchg pop pop je dec inc and jg and outsl mov cli ss fs xor cmpsb push fwait push add mov (bad) fistp loopne push rorb mov lds xor dec pop fsubrl dec pop and sub dec sarl ud2 push pushf inc sbb mov xchg fdivr cmp aam adc int3 fistpl repz imulb pop mov and sub enter cmp cwtl loope in adc jo sub and mov ret jnp insl (bad) jecxz mov mov mov lret cmp jo test mov pop repnz int3 movsl adc jg inc pusha movsb fistp cmp cmp repz push xchg pop xor mov cmp push cmp movsb lea mov pop mov mov jae shr fwait push jnp push and push jo cmp cltd mov repnz xchg xor shrl pop xorb push dec lahf pop jmp out fnstsw pop cmp cmp movsb jno xchg loope push mov adc mov test call jge div mov lds stc mov mov and stos in in cmp movl (bad) and decl into loop jge (bad) out movsl dec dec pop roll fisub mov xchg xchg dec in push or xchg cmc dec imul jecxz ret xchg outsb sbb sbbb leave or pop (bad) idivl push or mov add pop int or xorb icebp fwait adc push lcall out jb (bad) cltd xchg xchg jns stos cld movsb repnz add stos jno stc and fistpll jbe cmp mov inc adc sbb sbb stos mov mov xor inc xchg push xchg jno pop ret ds jo add add add les fs add jp cmp cmp test rorl mov mov cltd out int3 div nop cmp lea scas shll adc mov inc es mov in cmp pop (bad) xchg and les lea mov cli add inc push add cld scas (bad) fistp jecxz rcll es and sub divb imul fcomps adcb push les jecxz mov fwait int xchg add xor movsb sbb cmpsb inc or xchg push jns (bad) push cmpsl cmc inc jl lods mov cmp jns and mov int3 loop and orb mov cli mov (bad) leave aaa (bad) lret jo repz xchg fwait inc xchg and nop and sbb sbb adc nop dec mov xor insb data16 mov push sbb jno mov jbe mov insb out std ret inc xchg mov push pop insl or js dec cmpsl addb jp iret adc jbe or (bad) mov xchg enter fsts dec fstps jo clc mov jnp stos stc push or int daa mov add inc pushaw cmpsl push xlat scas fiadd loop (bad) in pop ret inc push mov in test jle call adc xchg mov push jnp je out rorl movsb inc inc pop push or out arpl jns sub xor out stc dec iret xchg ljmp inc out pushf inc andb pop lea fisttpl sub or (bad) push sti arpl push xor jnp out mov adc sbb xchg mov icebp or arpl cmp dec or fildl fwait loopne pusha xchg or add sbb jns imul mov adc adc (bad) and mov cmp jbe push xor cmpsb lods shrb dec data16 dec aad inc aas mov sti add jle aas flds fnstcw lahf (bad) repnz addr16 xchg add xor jns sbb into pop insb repnz sbb push xor mov pop repnz lds loop xor xchg fxch (bad) xlat mov sbb and dec fidivrl mov mov mov push and test jae cmpsb lcall xchg mov mov adc mov add (bad) adc (bad) mov sub xor pop mov inc js dec mov iret ficoml xchg xchg xchg call mov das pop mov mov das pop mov mov aas add sbb es add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc xchg push shr add push inc jb lea out push (bad) in sbb pop inc nop xchg xchg dec or frstor repz lea jge add pop jmp jge pop push mov lea aam ret lds lods nop adc pop xchg dec imul in or adc cmp sahf ja pop ja (bad) test jae or cs push mov pop jl jno xchg hlt adc mov sub mov cmp insb in adc mov out mov cmp fnsave add test mov mov nop lock ja mov sbb cmp jbe loop push arpl push mov lcall rorb out mov addr16 (bad) hlt pop repnz ss inc cmp popa mov outsl dec xchg push xlat adc addr16 pop dec pop inc mov mov loopne in (bad) mov int jge out dec mov ljmp loop lock fldl leave mov movsb dec out fisubl stos idivb inc fldenv inc icebp imull xchg jno daa inc mov jno dec mov rclb cltd int mov cmp scas test adc jmp repnz and and lods or push test pop mov xchg or scas xchg decl repz scas jl mov in mov out xchg mov int inc push lods cltd sbb cltd push cmc jne adc test lds push movb dec in jmp sbb pop into pop cmp test mov mov ret mov je sbb (bad) jle adc clc (bad) jle mov iret jo jno inc mov xchg pop out lcall fistp mov test test in xor pop or ss (bad) insl (bad) lods sti mov imulb cmc push sub fisubrl or jge in (bad) das rcll test nop mov fs dec out lds cmovb cmc cmp je mov ja test out out lods stos fistpl push sbb mov rcl sbb sbb mov sbb btr or outsl mov jae mov repnz lock xchg or movsb les dec sar bound mov fbld loopne xorl inc adc aaa fldenv rcrb xchg in adc (bad) ja push xlat cs dec lods movsb sub push loopne xchg cmp inc int3 ret adc pop imull sbb jno jae movsl or sub in jns and pop push and jmp add bts test xor in xchg adc imul xchg sub sbb mov xlat and icebp (bad) into fistpll pop sahf std loop sti fsubr mov pop sahf imul fimul xchg ds sbb mov lods aad jbe mov sbb xor xchg cld aaa fbld xchg cltd sub mov enter loopne pop rol push push xorl decb push and or mov push outsb sbb dec pop out inc mov mov shrl in add ds leave inc mov mov and xchg pop cli push mov mov out fildl sbb (bad) aad sub add mov inc out outsl ds nop inc adc push rcr frstor jl movsb inc repz mov mov push out jbe insb fisub jnp (bad) js aaa in sbb cmc mov imul mov inc cmp xor fsubl movsb sbb mov adc pop cmp mov aam xchg push fidivrl pop arpl ja xchg (bad) rcrb push push jns (bad) leave mov add xchg or cmp push jns shrl sbb sahf sub stc pop mov sub jmp and je test push adc pop fs jb int je xchg je add fistl int aam rorb inc imul and clc dec xor jle pop and sub ss mov dec aam fwait lahf add lods mov loop aas cltd (bad) mov insb xlat lret xchg cmc add lock int push movsl and xchg and mov cmp inc push sbb test nop or (bad) mov cmpsb cmp mov pop inc loop inc sub push and popf out into push clc stc adc cmp into xor pop outsl dec das push shlb sbb hlt fimull fimul jmp jbe cmc mov mov sarl fwait lock insb mov repnz lock sbb inc mov ds rolb push adc fnop fimull je sti scas cltd insb popa cmp add adc push into cld sti cmp sub dec add test int popa aas cmp imul lods pop pop xchg inc push push jns ja mov ds mov or fisub loop and push sub (bad) fcoml leave and cli imul in add xchg roll pusha aad xor test test roll mov pop ss cwtl daa mov pushf mov jno neg (bad) pop imul (bad) and mov cmp stc test xor mov aad (bad) fsubr dec xchg sub out mov movsb or jo je adc sub sbb push push (bad) out mov cmp rcll jle add sub xor aas sbb xchg lds enter xchg bound jo fisubl xchg xor cmp xchg test fwait clc sbb lea cmp out rolb jmp pop sahf dec xchg pushf xor gs push sub or imul lock dec sub lret ret repz pop add fcmovbe int aas loop pop subl lret loopne in decl xlat rcl or sub xchg rcll jle addr16 lea add dec mov sub sbb arpl (bad) fcomps or stos loopne mov xchg (bad) sbb cmp mov pop sahf cmp jb aad push or ret fisubr scas popa sbb fldcw arpl and (bad) sahf pop fildl call scas xlat sub push cmpsb cwtl call push add mov subb add mov push cmp cmp xchg adc aas push loope pop cmp xchg add shr jge jmp ret xchg and (bad) std push inc arpl idivb hlt cltd dec adc loop pop maskmovq divl cmova test push sub test xchg mov daa test sbb xchg xor dec insb cli push into in out jmp cld aaa movsl and push fstl inc icebp dec jnp push fbld lea push out ss paddusb jb in decl mov daa das daa insl imul lods adc (bad) fist movsl adc nop out jbe xchg fidivrl pushf xor ret jbe or xchg pop lds adc arpl push mov loope aad nop pop (bad) mov push jbe xor nop mov in dec jbe imul xchg push fwait cmpsb sarl mov add mov imull lods scas xlat and fldenv gs pop pop clc jne sub fstpl cmp mov popa aam or xor lret jae xchg pop scas and clc push push scas mov xchg jns and push mov jmp inc cmp ror xchg in add rclb cmpsb inc loope dec xchg ja ret aas pop incl sahf push nop test ds flds or shrb (bad) jecxz and shrb sti or push or xchg jae dec pop subl cmc add (bad) cs adc adcb sub test inc inc addr16 gs sub inc aas imul (bad) movsl dec mov xor and sub xchg and movsb loopne mov arpl aad rclb lds and sbb pop (bad) mov in arpl dec scas int shlb inc xchg insl outsb (bad) std jno push push sub cld cmp (bad) sub daa clc fisttpl lock cmpsb les daa rcll jge lock xor push nop sub imul call jle sub cmp pop mov jb arpl or in sbb rcrl xor scas mov dec sub sarl fistpl movsb xor sub in repz dec pushl push aad js adc mov out mov xor popf pop and daa arpl bswap sbb ret repz push inc mov in add adc or push inc frstor mov sub movsl test loope add sbb daa cmpsb les cwtl adc sahf stos imul insl notb (bad) dec lods enter pop jmp cmp lods pusha aam lahf hlt test xor sar lods int3 cmc in dec mov xrelease push pop outsb stc lcall outsl or sarl int3 adc jge cwtl fadd pop xchg push push or xor mov xchg pushf (bad) repz adc dec fdivr out lahf or movsl mov push mov ror ficomp xchg jg sbb pop xchg int3 scas in outsb sbb jge inc sbb or dec jb sub add add mov fwait stc cmp mov repnz test mov jmp dec push imul std sahf test faddl inc or clc and fldenv mov push sbb mov or xlat jb lahf outsb mulb push stos dec in mov lret mov mov repz insl test sbb daa xchg imul gs rcrb adc pop jne add neg repnz int mov std (bad) and scas inc inc repz pop mov (bad) iret push (bad) lret enter or pop in bound insb cld or pop fdivl mov adc inc jg xor std (bad) mov mov adc mov jg imul data16 jmp inc cmp cmp xor sbb int3 hlt faddl and cmpsb les jnp mov icebp popf out cmc or out push loope mov loope std mov mov adc in mov dec int push mov sbb div cmpsl mov in adcl push mov lcall inc dec jg cmp jno mov xchg test mov js pop das dec loop call dec mov pop jle jp mov xchg mov pop xor imul add fcmovb xchg clc (bad) (bad) data16 iret and add orb lret dec mov xchg jle scas repz lea enter (bad) adc pop sahf add and dec adc push repz cmc shll pushf stc mov xor dec ret xor adc and shr mov rcll mov pusha lea shld and subl mov mov jnp xchg dec adc decb sub lds and jnp out pushf lret fwait push pop adc mov add arpl mov pop pop adc adc add imul insb pusha inc clc ja movsl aas test dec movsb jp inc daa cld ret aam adc jle decl add popf js iret lret lahf adc push js jecxz out test jno addb sarb aad subl xor jb cld xor ret jmp mov dec fdivs cmp pop movsb test xor push aad inc into pushf out daa aas push sar andb iret inc or jle adc outsl pop cmp or insb push ljmp mov popa lods es lock cmp pushf cmc pop das sbb clc call pop xchg jge push je lret (bad) or test mov and clc push loop push lock imull inc xor loop cmp mov sbb cmp subl addl xchg popa fidivrl push jmp xor add lds scas hlt mov mov icebp int3 std pop mov mov lods jg in les fildl arpl mov gs in rcll add sarb xor aaa jae push out nop cli sub dec jb pop push mov mov lret cmpsl scas cli add cltd sub xor push sbb fcmovnbe loopne movsl lods faddl xchg inc dec jl lss mov lahf dec cld repnz lods sub sub add add (bad) lods mov cmpsb les xlat and or stos mov cmc pop ja jmp mov js dec jb fbstp rclb insb mov jmp lahf pop out sahf pusha pop push xlat (bad) fstps std (bad) fld xchg inc inc push (bad) cli mov mov mov in or pop rcr test or mull jno push dec push and (bad) arpl mov adc adc mov aas popa xor ss adc jl push xchg cmp pop (bad) lret xor in xchg mov inc push lret and sub es fldl cld lds mov cmp in pusha data16 push fbld js repz push loop out xor pop orl dec loope push lds int3 ret insl je lds out div jmp fwait loope inc loop jle ret or in adc je jge dec sarb xchg jnp mov sti (bad) hlt idiv sbb xor and jnp inc mov loop add jb outsb int in aam push mov fcmovbe dec jnp adc xchg clc and clc pop notb xor push in outsl clc lds sub out mov sar inc push std push inc push mov dec fldl test loopne popa sbb jge,pn pop sub repnz push jne lock adcl mul or mov in jmp aas mov clc mov fiaddl mov test inc gs clc (bad) xchg imul or cmp fpatan fisubrl mov pushf (bad) fbstp je fidivr mov jnp out fnstsw add jg arpl and xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc and shr or or dec aaa rorb fisttpll je dec add xchg push sbb sbb les ret std daa sahf jmp add mov shl aam push loope inc sub (bad) in adc mov push (bad) pslld lods push fcmovbe out mov mov adc frstor rol rcl sub int3 (bad) xor scas xchg mov jecxz ja out push imul daa and pop push dec pop (bad) cld jl,pn mov add mov pusha outsb pushl and loope mov pop cwtl lret push dec sbb fcompl in adc mov roll jo ficomp rorb aam push imul jae test sub aad push jnp xor ljmp (bad) mov lcall call sub js sub or push mov lret mov sbb mull xchg orl movl roll push jo fildll lods mov aad sahf out sub mov xor adc lods fwait jge subl inc pop push sahf in mov popa inc push cmc nop pop push test mov xor cwtl jb (bad) into jae and and mov mov lret dec popa loopne mov (bad) (bad) hlt add daa inc into mov ret repz mov je arpl sub lods jns xchg cmp iret sub das imul jecxz and rorb pop imul pusha stos dec leave and fildll sub cmpsl inc hlt scas das mov out hlt cmp or aas repnz push xchg jecxz xor cmpl push and loopne cmp or lds cwtl push das xchg pushf jmp scas loop movsb int3 es mov jmp xchg lods push out repnz (bad) hlt jle aad cmp jne scas mov mov bound push popf les scas aaa ljmp lock out mov xchg mov in lahf addr16 cwtl push push xor lret ljmp orl push sahf shr decl mov stos cmpsl bound icebp sahf inc mov jbe ljmp inc push push mov out jne dec inc clc call popa cmp pop push test jp push (bad) xor inc cmpsb gs jno mov sti adc js fnstcw repnz or insb ss inc (bad) aas sti sbb movsb lret push adc addr16 sub (bad) insb fstpl in sbb add nop test aad mov lret ja adc push gs call mov hlt push sti in stos xor test pop mov adcl sub dec xchg addb mov ds (bad) xor mov cwtl arpl jmp push das cmp lods jmp (bad) loop inc cmp push pop lea popa mov fucomp int push and inc ret sub xchg out cmp ljmp mov pop dec fsubr (bad) aad div loopne lea and dec and addr16 arpl (bad) aad aaa and and movsl sub out outsl int inc mov dec (bad) mov mov or push aam cwtl jg xchg gs int inc nop or (bad) mov data16 aam leave inc imul pop sub fwait leave push adc sbb mov ss sbb mov lret pop sub (bad) lods cltd ljmp test (bad) mov imul hlt cmp jb pop (bad) mov bnd add sub insb in subb (bad) shlb dec into xlat dec das shrl les mov or jl js add push jns test sbb fldz jne dec or in or and mov sub call jbe and ss fs insl ss jg mov popf lds in mov inc orl insl mov mov jae cld fdecstp out cwtl stos popa push lods popf xchg inc and inc (bad) mov inc je mov negl cld mov cli dec aad andb in scas arpl cmc sti mov pop and aam mov out sbb sub adc in add fistpll xchg push test rcl aaa mov ror cmpsl ret js xor cmp mov mov dec inc fcoms out mov outsb xor pop cmp add insb ror test inc lahf outsl and mov and and add xlat jne mov mov out sbb sub dec stos xor pop outsb pop add cmp dec lods mov jle sub xchg fbld data16 fs push movsb (bad) adc mov in mov sbb shrl mov mov call pop das shrl (bad) sub pop push mov xor stos iret dec lods xchg out stos sub int3 push add arpl add outsb lods adc push mov sbb les imul lds nop adc push movsl (bad) cmp (bad) cmp xchg jbe mov add or lahf lea push mov les jne pminsw fdivs lahf dec aam fdivrl out mov int3 lahf mov xor insl mov dec mov mov sbb jl ds sbb xchg lods add in push push dec mov push das dec or mov in (bad) xor imul frstor cmpl pop push scas mov xlat aaa cs in lcall add imulb sub loope push xchg add inc pop arpl int xchg icebp adc xor ljmp mov div inc lds push das sti dec dec mov mov shrb adc cwtl inc xor gs mov imul insl scas adc mov cmpsb std lock (bad) repz and out aad pop inc xor (bad) ljmp xchg inc cmp (bad) xor fs and mov pextrw jp stos int and pop xchg ret jnp into movsl lahf outsl push out cmovp push xor mov jne test adc mov inc mov orl push icebp mov xor (bad) jne pop mov lods jns and adc jp int jbe (bad) (bad) (bad) xchg into pop sub sbb lds stc adc testl fildll lcall push cltd add aaa adc mov inc shll dec adc idivl dec aam jecxz pop jmp jb inc fmull inc xor push bound push cwtl loop das dec fisubrl popa add dec lret add cwtl rcl out enter je mov (bad) xor xor xor pop mov test fidivl sarl xchg xchg ret pop cmp adc insb add jge inc dec dec pop dec and js test sub jle pusha movsl mov dec popf cmp fwait mov int xchg xchg cmp lahf mov add xor movsb push rorb mov jl cmp xchg daa cmp dec mov mov sbb call nop cmp nop cmc cli mov mov inc fcom (bad) imul xchg mov mov hlt push test sbb hlt dec pop push inc in push enter das js inc xor inc sbb mov add lahf test lret xor push (bad) repz sbb fucomip fmul loopne mov mov pop in (bad) rep fistl (bad) pop ds push mov cltd hlt push xorl pop lea dec in sbb mov pop adc pop insl test and scas in icebp addr16 push lret xor sbb cltd dec sub rclb and cmp xchg cmp xchg push add jmp repz into les jmp pop int3 mov lret and push (bad) pop sti inc xlat mov arpl mov xchg cwtl adc (bad) mov or adc push sub outsb (bad) ss pushf xchg nop fsub in aas dec pop xor lock out dec test scas mov idivl movsl xchg (bad) push test adc xor pop out ja jg or pop enter int3 push pmulhuw out bound jb (bad) stc popf fnstcw inc pcmpgtb jbe rorl jecxz je jbe (bad) add enter mov das push add das call or aas adc and outsb mov je loope cmp cmp outsl cs out sbb sub fcmovu cmc xor cmpsl pop lret insl addr16 aam (bad) push pop sub lahf xlat out psraw xchg sarb arpl mov mov jne,pn mov sbb ja mov repz test (bad) je mov jns adc out movsb push fmulp pop and pop int inc jmp sbb xchg jp imull arpl andl mul sti xchg pop xchg (bad) ljmp inc push inc (bad) fstpt mov sub adc add cmpl push int3 out (bad) sbb popa jb sub daa ljmp mov jg or repz pop dec (bad) nop fiaddl mov jae pop (bad) movsl xchg mov (bad) rcrl cmpsl out lods inc call dec pop ja call in xor lret jns mulb test fcomip or imul inc or stc xchg mov fsub les jae out popf jb adcl mov in pop xchg outsb shrb stc loope pop inc fildll adc dec push cmpb insb inc jmp stos mov mov int3 sbb lret in and sar xchg mov mov sbb fndisi(8087 add (bad) mov fwait (bad) (bad) lock and push lock dec jle call mov out cmp movsl or out cmpsb lea inc pop or sub push lds rcl (bad) or (bad) (bad) (bad) cmpsb sti push inc stos popw xor arpl sub cli mov fmul mov mov cmp inc mov pop xchg or shll scas mov dec inc inc out or push je lods outsb jmp ds jne fisubl adc dec xchg push cmc or sbb xor repnz sub mov inc pusha mov mov xchg je out pop nop (bad) mov jmp enter jmp leave imul sub sub push cld pop enter stos jecxz in and dec fisubr outsl aam fmuls inc pop popa stos hlt arpl and lock (bad) jmp in add mov imul insb and xor ss sub fdiv pop cli adc fdiv push sbb mov inc mov pop test shrl xchg mov push add or and (bad) fistpll cmp fdivl add in inc fs pop notb hlt test adc icebp or fnstcw icebp inc mov stc movsb mov add mov jae stc orb pop sbb push into sbb jb adc ja pusha mov mov xchg and out popf jmp (bad) cli notb icebp imul adc ss jo mov in cmovle sbb mov add popf (bad) mov mov dec jae push test xchg push add (bad) sub in fcompl cmp inc xchg test rorb inc or xor add add sub outsb out cmpsb jae lcall movsl sti add fild push (bad) (bad) cmpsb xor es mov scas jne loopne call push sbb mov cltd dec mov or js push dec mov icebp mov cmp jecxz into mov (bad) das mov dec loop scas sbb jmp lret mov lret popa and stos movsl cmc jbe push mov dec loop pop cmpsb jne in mov hlt mov shrl movsl loope inc xor mov cmp sbbl mov pop xor cmp in sti mov ret fs insb ss mov movsb in mov fwait push push sbb mov mov jns jecxz add lods mov jle fimull ss xlat pop in repnz mov mov push xor and fisttp loop out xchg cs add add cmp loope mov xor gs sarb xchg or pop adc out pop enter xor lcall push push mov push (bad) clc in sarb or pop xchg push nop rcrl sti sbb fwait jnp xchg inc repz iret cmp inc ficomp push int push sbb fiadd popf pop mov sbb into inc jg mov push mov xor scas roll jle push scas jge (bad) xor das mov and mov pop sbb gs pop sbb aam loop add push roll jecxz mov pop push lods ret call sbb dec sbb stc dec mulb dec mov les loopne mov xlat jg mov stc mov in popf dec xchg fcmovu movsl daa and dec mov inc out ja out adc push jecxz jnp dec movb push sub xchg cmp in outsl ret and mov js imul (bad) leave addr16 pop jmp xor push push jae mov xor jnp ret int3 enter cmp pop inc mov je gs sub jb mov fidiv or push mov in mov cltd adc xchg inc mov dec xlat inc jecxz cmp xor inc sub std fwait addr16 pop mov bound cld ljmp hlt das fistpl sahf mov lock fs mov fisubr push add std mov or outsl in lcall inc popf xchg xor dec or notl imulb jmp dec cltd fbstp cmpsb loope jl sub pop aam or out aam stos xchg es mov push sub xchg cwtl movsb jg sbb cld inc sti frstor sahf pop sub pushf pop jb xchg popf cli adc mov jmp inc fild push insl jno leave ss sbb sub xlat mov mov aas pushf mov lea xchg iret rorb ret pusha jg pop cmp push cmp (bad) fistp mov sbb outsb fdivrl sbb outsb fdivrl lock or add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add enter add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc jecxz lock jnp jnp leave lret jo mov sub fisubr lret bnd mov inc enter divb jnp sbb mov addr16 mov cmp or pop out sub call ljmp jge mov in push mov cmp sti sbb mov daa xor scas xor add arpl repnz sbb cs dec xor addl mov jne jp pop sbb push sahf xor roll in and fsts inc mov jae lahf arpl fs jae test sti cmp or mov lret call fimul adc sbb shl idivl test mov adc lahf mov cmpsl cmc lods lds icebp fldl2e (bad) pop and loopne mov (bad) js jno jmp push cmp enter fwait push addl mov push clc in mov hlt test popf jns sub bound mov xor push je (bad) cmp jmp push mov mov jno ret mov sbb jne push aad adc dec pushf in cmp (bad) sub add xchg int jnp add pop sbb jo jp pop cmp test int lahf add mov (bad) and jle lahf inc push or aaa stos lahf pop or popa cmp adc loop jmp mov lea jb orl push in xchg out push pop mov mov fadds (bad) faddl rol ret mov push jae aaa mov sub lahf xchg icebp dec adc imul cmp popa leave fwait dec push cmp divl mov jg aad add sub or adc inc into stc pop jne fcompl jns mov insl gs cmp pop inc pop cmp dec aam in mov jg inc int push arpl sbb pop test jle pop mov mov jns sbb ficoml cmp inc jecxz movsb add movsb pop iret sbb fdivr dec push dec int mov push loopne out cmp out mov ficomp xor xchg mov dec adc mov pop add adc add mov loope inc dec cmc add pusha xor cld and leave mov xchg mov add mov outsl aam (bad) cmp jbe mov lods lahf sbb add fldt and int dec fs add icebp aad or or scas pop (bad) std jl push xorl or cmp scas leave xor mov fidiv push and jg sahf scas adc ret (bad) hlt mov mov fwait daa iret or (bad) jae ret repz bound adc jmp pushf rorl enter dec push dec mov adc mov cld ja data16 cmpsb mov enter movsb fisub cli dec (bad) and bound inc aam adc inc ja mov mov cmp xchg pop xor or push adc (bad) std adc and faddp outsl mov add and bound or fidivrl data16 pop lods pop fcompl inc inc sub xchg lea inc mull insl jbe adc pop mov and (bad) lods xchg lock and pop rcll xchg jb cmpsb mov or loope cmpsl gs dec nop pushf sbb cwtl and add sub cmp aad xor xchg cmovs mov sbb enter and and mov dec lret and cmp fwait nop (bad) add mov push adc inc push inc lcall or sub incb (bad) sbb lcall add (bad) enter inc test dec (bad) jb out jg pop shr sbb jns mov jl cmpsb iret mov xorl jns addr16 imul jne xchg mov push mov out loope (bad) mov mov xlat mov (bad) sbb jns xlat fwait loope ljmp cwtl pop enter outsl mov or fs int out ja add in cmp mov scas (bad) mov push sbb mov mov pop sub ja mov lahf lea loopne sbbl imul (bad) aam sub mov xchg pop outsl pop sbb and (bad) xor sbb xchg push lock pop (bad) je push jecxz (bad) dec jecxz imul sub push inc jae adc scas out bnd sub enter xor cld push mov xchg aaa mov jne and test cmp repz ljmp mov pop push test repnz out cmpsb int add insb pushl jns add std xor inc mov mov add dec icebp push out mov pop aad cwtl leave int3 pcmpeqw leave sub dec (bad) cltd repnz xor mov and in jge push (bad) mov xor mov call xor cwtl inc and adc call mov in enter sti test (bad) push mov xchg jp hlt sar lock dec mov lahf sub lret ljmp and bound mov xchg mov aam jmp adc adc or cs dec leave orl daa add js aam ljmp cs and pop and fcmove mov sbb test jo pop mov mov and jo add mov push imulb outsb ljmp divb aam test popf ret xchg mov dec aas jp mov mov inc outsb jno sahf cmp fldl adc insb gs test out mov lret call addr16 sbb cmp jns out mov sahf in setno jo lock lods cmp xor movsl mov lahf lock sbb push sub in rcrl into cli in outsl sbb adc in pop lret mov lods mov in xchg dec mov cmp aas cmp push dec cmp pop (bad) mov test push movsb xorl mov shr mov jae mov out pushf mov outsl push pop int inc insl xchg ret mov jle jmp cli lock cld stc inc jo mov lret stos adc fdivrs movsl cwtl pop push jg pusha push adc and xor xchg sub cmpsl lea jmp loope inc and add or push and dec mov fld jge call das sbb inc ljmp (bad) sbb lea mov (bad) xchg dec sub test mov xchg clc cmpsb pop jbe dec mov js (bad) inc (bad) fbstp dec mov out inc call aaa mov and sub outsl push fistl test or cs sub mov popf repnz and jns mov adc mov cmp pop mov aas inc sub in sarb sbb in inc mov das ror enter outsb insl jmp leave ficomp aad stos ljmp pop mov out push fs incl mov int3 insl in mov xchg pop jae fdiv test jge cwtl jecxz aam into mov imul dec mov (bad) and out call aaa mov ret jp xorl sbb jecxz movsl jmp jo in add mov movsl cli mov je lcall push sub cmp ror sbb repz das push std nop cmp int3 scas movsl out lret rcl popl jb mov lods jns (bad) push push sahf jle mov sbb test pusha pop jecxz push test scas (bad) push pop mov (bad) mov gs les lods adc pop xlat push jl pop xlat jmp hlt hlt lock into fs pop outsb mov jo adc add movsb push orl dec fs mov fiadd push jns pusha pop popf adc flds pop dec push daa mov out and test pop jecxz xchg in cli stos xor adc movsl movsl pusha cltd pop mov pop les jne outsl mov and cmpsl pop pop push jp or mov sub pop push xchg xchg lea inc inc push mov sti arpl jg aad jbe pop cmp dec jae int add mov push inc in lods arpl pushf xor stos stos jl scas xorl or push xchg or lcall mov les add and push xchg add fdivs mov adc or shrl jnp push mov lock jle adc fsubrs fnstenv xor notl and push cld mov cmp and mov pushl jl test mov push push xadd xchg xchg inc pop pushf inc push push or out or (bad) not daa pop xchg mov popf test xor (bad) pusha xor mov loopne loop int3 lea movl xor mov (bad) and fsts push cmp push mov lock jo xchg pop dec test mov fistp pushf bound mov in scas lock or ds xlat adc out adc or rcrl cmpsb and sarb loop outsl in subl (bad) mov cmp mov cmp bound or test pop rcrb mov add sahf jne sub sbb frstor lahf sti push inc ret aam inc jo mov push int3 loope scas (bad) xor out outsb outsl lods cmp daa addl mov or xchg cmp sbb mov mov jbe daa cmc jnp or inc jo shr je cmp mov adc sub or mov out arpl cmpsl jg loopne (bad) jl fwait jo jle and (bad) cmp cltd add (bad) es xor sub push mov jmp test pop roll hlt mov or mov in sarb rclb sbb jmp push mov cwtl inc imul and mov fcmovb mov rolb aad pop mov dec inc inc pop mov sbb or fmull cli pushl cltd inc sub xchg (bad) scas sub add out mov inc imul imul test sbb mov lock insb cmp and mov ret inc insl loope fistl js and jno popa mov (bad) stc jmp mov sti pop dec cmp cmp jle xor pop pop lcall dec sub mov push or cs les into dec dec pop jnp jl fdivrs (bad) mov pop aad mov dec add jg std ret mov gs movsl or fldlg2 aad fwait xor das fwait int3 or mov inc aam ds test cli adc mov mov push (bad) mov mov dec lahf icebp sti lods mov insl cli inc sarb sub adc aaa jecxz cmpsl jb inc jnp or (bad) in out idiv push sti jnp addb jp imul sbb lret add das xchg mov mov adc fcoml and xor popf int3 push in pushl xor arpl cmp push mov sti mov mov jge pop add mov sub aas mov clc inc shlb fs pop dec inc nop cmpsb pcmpgtw push sbb xor sub inc or jp mov mov ds add sbb insl pop sub pop fiaddl outsl call cmp fwait outsl sub (bad) mov mov lea mov dec jge insl (bad) cwtl cmp xchg adc adc adc popa pop fdivl jmp add cmpsb add xchg add pusha lods mov sub sbb (bad) int jg mov lea push xchg mov and in and out lret in clc sti fistpl sti fdivrl adc or test fstpt ds jo cmp movsb dec and int hlt movsl add add shll sbb repnz cmp sbbl (bad) outsl test mov ret push out data16 test inc sahf push clc fwait ljmp ss and shl xchg repnz scas push or pop ror pusha cld xor (bad) pop roll cld jae mov jns sbb lea sahf xor in xor pop je pusha fdivrs (bad) fstl jg cmp daa icebp lahf jnp lea pop je mov stos push or sub fstpl (bad) sahf mov je nop push or outsl mov lcall imul js (bad) mov (bad) pop jle in sahf ja push aam mov pop or cmpb lods das cs or negb fimul aaa movsl bound js or enter mov push push popa push add nop xchg jo stos cmp rol jb lock mov adc idiv and lcall jecxz,pn and stos insb lahf mov mov bnd int mull imul aaa fild fsub lds xchg arpl pop mov xlat cs stc ret xor adc mov xchg into push mov inc es int3 xor inc cmp jecxz out inc or xor test (bad) jmp cmp outsb xchg scas (bad) nop ficomp ret cmp (bad) mov xchg fadd aas xchg jmp sbb pusha dec (bad) je xchg lahf mov call or and ds cmpsl ret in jnp iret loopne sub out or pop in dec (bad) jg jmp xor jge in or int idivb sub icebp add ret out mov push adc aam fistl xchg xchg push mov lods (bad) mov fbld popf pop push push mov cmpsb mov mov dec jecxz jno xor lahf ss push mov adc fidivl jns pop test aam and sub ljmp ficom ror mov sbb mov pop mov fnstsw pop mov incl add add ret out scas pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb push rcr pushf sbb xchg (bad) popa jb popf sahf mov loope outsb shr sbb popa jp es pop dec xor (bad) sti jle xlat repz add into mov sbb cmpsl ficom stos sbb mov (bad) rcl in cmp or dec mov lock mov jne out push (bad) aad and loopne nop dec lret mov adc xor add and lahf in jecxz mov lods call scas out push hlt push shlb jg or leave fnstenv ljmp inc inc out or sub add add push lret inc cmp or ss inc lcall or iret lcall sbbl movsl xchg jge xor stos lret out fisttp mov sub inc fs pop pop fstp dec enter loop sub fnstsw push push pop (bad) mov popf fisttp mov mov adc mov jecxz leave or movsb popf pop inc jge shr and scas mov dec and jmp add (bad) and or add lock int dec pushf fstpl xchg fcmovnb inc repnz add jns movsb cwtl xlat pop cmp dec aaa (bad) push xor repnz imul test fidivr mov and mov add sbb add in bound mov aas mov pop push push pusha cmp fidivl sarl pop and jb repz cltd fwait pop xor jno (bad) pop hlt pop loop rorl push mov js sbb (bad) xor jge popa jbe dec lcall mov enter xor mov sarl mov cltd cltd mov lock push add dec cmp mov xchg or mov repnz imul loop (bad) repz rorb or push mov add sub mov bound dec sbb movsl mov pop pushf into js mov stos jecxz fistpl inc mov hlt movsl fdivl sub out lock jae mov push test repnz cmpl pause inc pop aad movsb cmp push cmp push ror dec repz jg es and je rol rcrl stos ret mov dec cltd cmp mov popf lock pop fwait js ret sti data16 rclb aas test es popa dec push fcoms mov xchg (bad) rcr mov dec dec scas enter lods push sub and xor jp push mov div lods mov mov inc int xchg sti testb std mov xlat lret sti lahf jmp or test call or (bad) push fstpl clc add lea rorb dec push or sbb xchg pop jns (bad) jge fwait jmp or fadds pop xchg xchg sbb ret xchg cmc hlt pop sahf pop std mov stc or repnz mov jae out xchg cmp cmc or xchg std fnsave gs lods jge lahf repz jne jecxz pop pop cli xchg std lods sbb xchg stc and dec lahf push movsb jle inc es sbb test xor popa mov pop sub (bad) movsb pushf aad inc test add outsl (bad) frstor sbb addr16 adc jno xor jae out mov test xchg out test mov adc pop rol adc dec jmp mov xchg and cld mov sbb cmovnp xchg addr16 movsb lock cmpsb mov xor push push lods pop movsl pop sub sub jns or cmp pusha cmpsl adc pop push je call sbb imul in insl int repnz adc es sbb fsubrl fwait cmp pop adc inc inc scas gs mov ret cs sbb or or jge push jg mov shrb inc daa std or orb inc cmpsl or xor sub jnp or sbb fmull js dec jo,pn pop in push (bad) mov fisttp adc jle gs mov cld pop inc jle repnz push adc adc xchg popf outsl das (bad) push cmpsb int mov leave inc ljmp sbb data16 mov das popf mov repz fucomp xlat or stc jg out push pop xchg jae jmp out push popf rorl lods cmc push pop sahf dec cltd lds and arpl dec pushf dec pop push mov shll cs pop adc lret mov int lret mov sti jmp in mov mov pop arpl rclb pop mov dec and sbb sub in jecxz jb cmp sbb in xor jg xchg fldcw or lds imul cmp push mov out popf mov repnz sub xchg sahf adc cmpsb in mov out add mov xchg sbb jbe push mov leave jns mov mov std xor stc push nop in and jl add pop in mov add call imul mov fbld sbb pop call out loop scas icebp add xchg ret in push cld xchg adc ret add sub dec push pop lods xor cmpsb dec mov loopne mov and pop pop cmp mov pushf gs outsl pop add mov sbb jp cli adc (bad) dec or (bad) sbb pop jo mul push loopne in das in and sbbl xchg pushf (bad) mov sub clc sbb popw inc in notb mull jecxz jbe mov lcall cmp test fsubrs cmp pop aad aaa lret std in insb nop dec gs xor push push insl push ret adc mov cltd dec ss loope fadd inc (bad) push adc cltd and inc leave pushf mov movzwl ss data16 pop xchg imul and jns pop inc mov inc mov jmp jmp mov push or jge xchg fildll adc out jae xor inc xor mov jno loope mov lahf jg leave push mov jecxz shl cmpps test cwtl jbe loopne sbb add dec pop fmuls lock add stc cmpsb cmp pusha xchg adc mov (bad) pop test loope js xlat cmp int3 sti cmp pop inc xchg sarl inc call jmp aaa mov sbb and test adc icebp mov sbb mov ljmp sub and sbb popa sbb je inc loope fildll mov outsb push sbb inc sbb iret mov sbb xchg ffreep jmp sbb mov push push cmp std lret sub stos adc fildll xchg in dec pop ds add ret pushf movsl insb jge sbb mov popf lret stc xchg inc stos icebp adc cmc (bad) sub add push lds aad pop xor mov mov cmpsl mov clc jge sub js rorb rorl mov fisttpl mov mov mov add loope inc dec xor sbb (bad) dec roll sbbl ss fmull int clc xor add pop cmp ja mov les inc adc xchg movsl mov loop mov dec bnd mov mov cmp adc jp,pn mov inc scas cmpsl inc jg inc xor sub xchg cs add fmull mov jge cmp pop push mov and mov ljmp pusha mov in dec pop je hlt popf dec push ret and repz adc fs jmp rol or loope jl jb rcrl (bad) jbe or dec push push mov xchg scas pop loope std out fnstcw and sbb lods add add nop xchg adc out xor adcl enter push dec leave xchg push mov adc inc fs fistpll push out jb fdiv inc cmpsl pop pop xchg xchg mov push mov jecxz or stos adc adc inc mov jmp loop call test jg push int3 mov xchg pop dec xlat std sub jno sbb cmp std jo das pop ret cvttss2si pop lret mov ja js mov pop mov sbb mov xor push add push mov jno sbb jmp pop mov adcb xor xchg jb sub imul jae inc push lea (bad) leave js or sub imull mov xor out aam xor in mov test loopne out pop inc outsb out and mov jp dec (bad) pop cld das roll daa cmp bound arpl mov ficom test and nop ljmp loopne pusha cmp pop pop das jle xor mov sbb jecxz pop gs inc push enter mov mov mov and push or push push mov sti jnp negl dec or std imul rorb gs or call or aaa push adc mov fwait mov jle xchg scas das xor mov test push popf add into inc mov or les xlat je shrb sbbl stos ret fwait out cmpsl lret add (bad) cmc loope xlat les xor mov ljmp out scas je movb cmc test shlb cli inc sbb ss sbb rcrb clc aas jle push movsb dec lds lods bound add loop (bad) loopne (bad) int cli pushf mov addr16 mov in int xchg pop test rolb xchg add lcall dec ret sarl push and xchg push pop push rclb cmp and and jp and movb push cmpsb clc fnstcw pop inc sbb arpl cmp sbb jae jp clc mov xor and or stc cmp push jge xchg mov push cmp adc ss pop iret dec lods insb jne dec (bad) or inc (bad) pop pop cmp lods rclb fildl inc lds sbb aaa int3 pushl xchg mov mov in dec lds mov mov (bad) push xchg pop sub push mov cmp cmp jp (bad) repz sub cmp (bad) mov movsl (bad) push and or sub push fwait xchg repz (bad) mov scas dec (bad) inc or repnz into into push mov cltd mov imul mov rcrb push xchg nop sbb and mov iret jmp mov dec xor xchg sar in fsubrp add mov lahf adc mov pop xchg add inc aam and add test fnstenv fwait inc and pushf in es mov mov lcall (bad) repz addl mov data16 sub test loope inc jno loop shrl outsl mov dec cmp fs es mov je stos mov dec (bad) shl lods push arpl daa and cmp movsb dec push xchg cmp xchg xchg push int jb adc or add mov arpl mov cld in outsl in dec fadds push jmp cli outsl lcall jg mov mov cmp xor xor add pushl movb and cmc jle cmp lds pop xor cmp mov dec adc rorl adc sub xchg pop xchg lea push jg mov outsl xchg sbb mov adc jg push scas mov inc lret lret xor jmp mov jg adc lret mov pop dec leave fdiv int3 out mov scas mov xchg jg pop test jge pop pop sbb test cmpsl mov inc cmp adc xchg test repz cmp fldenv xchg andb out fwait es adc and push cltd inc jle inc adc pop push and fisttpll push lahf or jne mov lahf adc push push in or add jg and pop push je,pt je,pn outsl mov lea fdivl cmovs in inc popa lea lahf and push repz sti push inc or scas cltd xchg push sub pop cwtl xor adc mov movb (bad) je scas dec adc and sub sbb iret mov xchg scas jg sbb inc mov dec pop iret (bad) adc nop xchg adc lea divb pop jmp scas sbb sahf rcrl pop adc mov or sbb or xchg xchg push mov cltd jno insb arpl jecxz xchg daa jmp setne add into stos insl outsl andb adc into cli fucomp and cmp xchg sbb cmp add mov stc sub dec aas rcrb xor lret push loope add leave rorb aas fdivr hlt ficom mov adc sub rcrb or fcompl and mov inc cltd push lds mov lahf cmp out lret cmp lea ret dec dec sbb push ds rol xlat adc stos mov mov pushf push cmp in jb mov int les stc jl push insl inc call jnp sbbl push ja ds mov xor jg cmpsl or or sub aad jb cmc jns lcall and dec fbld stc jns,pt mov (bad) rorb loop add mov negl andl or jge mov xchg pop push mov insl mov xchg dec push adc (bad) mov jae push (bad) mov pusha out test mov lret dec adc lods pop mov lock arpl adc (bad) push (bad) sbb pop std mulb dec mov js fstl inc out xor mov aad cmp out push xchg lcall test and fs sbb sbb push out imul js faddp push sub (bad) inc push mov sti sbb push mov mov dec jbe addl xchg add (bad) int mov test addr16 cltd cmp cli push mov pop mov (bad) (bad) pop or jns in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp incl add pop test call daa add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add call add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc push cmp rol and jmp and dec xor mov sbb push xchg jno inc (bad) dec lret pop jbe mov jns cltd addr16 in jne ret fnstcw imul idiv adc repz (bad) adc hlt pop cmpb imul in mov add addr16 cwtl pop sub cmpb sub dec outsl dec (bad) out sub (bad) dec cmp pop ret mov lods push lods xor jmp popa (bad) mov lcall es jle mov inc sub in stos xchg push lods arpl aas adc or push jae aas lea cmp inc sub sbb mov shll add or das clc je fnstenv or mov mov call sbb int test or pop je ja inc bound cltd jo fs ss sbb clc xadd jb inc push inc pusha daa xor stos call es adc sbb ja mov fs adc test xlat sarl sub addb mov jae mov scas fs mov lds or push cli sbb jnp out sbb jmp stos sub rcrl mov jmp loop outsb xchg leave mov xor pop push cmp jmp dec add popf sub ja mov addr16 out xchg in lret pushf xchg cmpsl and cltd pop insl or inc mov int insb fisubl sbb sbb adc into (bad) jo jno jae test in icebp popa aad icebp sahf xor fucomi (bad) cmp mov sahf or dec fldenv xchg mov mov fnstenv loopne scas add sbb sbb xchg xchg sbb js daa js (bad) adc cmpsl je mov xchg test adc mov aad test outsl shlb icebp xchg xchg cmp push dec sbb imul outsb xchg sub loopne pop mov adc outsb outsb mov mov pop in call add cmp rcrl jmp jge out ss icebp jne xor cmp into add xor addr16 or xlat push ljmp mov ja add mov mov pop lock ljmp add (bad) icebp hlt in jp push psadbw je pop jge and incl std push sarb jl ficom std sub push fdivs dec addb jno mov sti dec jo movsl mov add fimull adc add outsl and xchg pusha cld pop cld enter fistpl mov movsb and mov imul loop ljmp rol aam popf sub (bad) xor add mov sub cmp out mov fild pop mov iret (bad) mov aaa mov add sbb or jg mov push loopne sbb fwait sub jae lcall mov xchg push rcrb aam dec cmpsb mov test arpl icebp or or jb xor sub jg aas inc push fsubs pusha dec push jne les lret repnz jle lods jp sbb in sub xchg in arpl out imul add xor fisttp and and sbbl or je sub pop addr16 jp pop pop pop xchg push lds inc movsl dec addl mov and push mov stos cmpl pop mov decl push dec mov adc mov call jb pop hlt fmuls or push jns sbb sbb fnstcw xchg std inc dec gs and cld jns std push vpaddq in js jl inc in movsb pop arpl leave bound cmp xchg bound sub lods cmp adc gs sub popf cmc test rclb insl cmp cwtl sub push mov lahf dec dec cli cmc mov push cli add jecxz in push fucomi dec inc test lock sbb mov rolb or pop iret cmp sub cmc out cmpsl xor cmpsb lods push xchg pop push mov popa jns clc or ret sti outsl (bad) mov lret and lea cmp data16 jecxz cmp jmp dec outsl outsb outsl imul imul push adc outsb sub ljmp jb das push jnp inc cmp inc ds add xchg push push gs pusha stc shrl outsb clc jge xor pop add jbe cmpsb scas xor inc add mov cli bound pop ret cmpsl mov test and pop aad pop inc fistl stc (bad) xor out repnz adc std movsb adc mov or dec mov dec out lock adc mov in cld nop push pop (bad) pop ret push scas mov xchg repz outsl mov pop addr16 adc outsb push push sbb mov adc pop fs xchg insb cwtl addr16 popf dec pop aad int add mov dec roll imul (bad) fstps ss mov inc aas mov addr16 lods movsl jne (bad) mov xchg pop sbb lods out pop movsl pop mov pushf (bad) dec mov das or jno cmp (bad) mov push cmp iret mov loop movsb (bad) sub sbb out fadd and fwait stos push pop mov push mov mov lods (bad) mov cltd mov inc mov xchg jg daa scas mov (bad) push mov test dec dec or or shr sbb cmp and sbb push sbb push push data16 cmp rep stos inc ljmp jnp repz nop mov popf js cltd or in rcl inc push mov fisubr sbb addr16 nop in cwtl repz xor lret and jno loopne dec int3 fcoml jmp (bad) pop inc push repz ja stos aam sahf clc (bad) lret fwait inc xor ljmp pop sarl mov and movsb mov into cmpsl sbb mov aaa or push adc push int dec in xchg dec insl mov push and ds (bad) pop mov push gs xchg cwtl leave aaa cld loopne out mov rcr and dec or mov cli and movsb inc mov repz cltd int mov xchg int add ds (bad) imulb push aaa into lahf mov js in mov mov sub jl xchg inc test outsl rclb xlat iret push cli and cltd (bad) pop and dec loope sbb inc movsl (bad) test jb das loopne dec mov (bad) mov push pop sub adc aam shlb outsl mov mov mov (bad) out or ret jp inc andl push mov fwait lods cmp jno sub mov jge inc jle push iret mov jo daa push push arpl jg idivl test inc outsl and pop ljmp sub outsl dec pushf xor push sub fwait push repnz out test in into lcall sub sub adc mov iret adc dec out add lods lcall insl addb push addr16 sub imul (bad) in ds cmp adc out std push bound and push sbb and movsb jns xchg sub pusha (bad) icebp in mov or cmp sarb mov inc inc cmpsb (bad) push ucomiss sbb test movl nop sti sbb sbb imul xor lcall sbb sbb ja out mov outsl mov ss adc ja loop test ds inc jne addr16 jb hlt xchg idivb das rcpps out jns jmp mov mov mov mov mov mov or mov roll dec or lcall cli sub ret dec popl mov cmpsb mov insl sub xor pop fistpll aas cwtl mov pop sbb push sti in mov lcall mov frstor inc imul mov mov es ds mov int3 push pop in into shr xchg test add (bad) add cmpsb in push mov jmp repz dec daa pop lock (bad) (bad) ficoml lea push ret es inc mov jg in jnp (bad) jbe push sub mov push scas lahf and mov adc ficoml aas mov scas out out (bad) lret outsl xchg scas popf sub sbb jge xchg cwtl sub aam or jnp xchg daa lea mov test enter in xchg pop fdivs es std popf mov sub add sti dec xchg jnp xor jle popa loop popf adcl add push sbb xor pop dec inc daa cmp loop fidivl mov int3 push dec jmp fadds mov dec xchg fistpll xchg cwtl jl es xor pushf add sbb gs ljmp mov add (bad) ja test inc outsb mov les push mov inc out das jne mov jp push lods cmp mov or sbb scas lahf inc in in and jb jne cs jb add addr16 and test ret and stc aas mov xchg mov or nop sub decl sbb mov daa mov mov mov jae mov (bad) fs pusha pop mov jge insb decb and jmp lea lock iret scas mov inc loopne int3 push lcall mov out pushl push pop insb scas fs xlat fwait mov adc fdivp pop mov shrb fidivr iret jmp pop cmp mov cs dec sbb movsb and sub imul and push icebp hlt arpl in jmp fdivrs fs mov loop mov xchg int3 sub outsl nop adc jg pop jmp mov cmp repnz xor cmp iret int int pop adc fstl mov cli sub arpl mov adc pop incl inc xchg jnp add repz in lahf repz loop dec cmpsl sub test sub into jecxz inc divb mov xor iret call sub out mov push (bad) adc sbb cmp cmp cmp test jno and stos push icebp jp decl ss sbb mov inc pop cld lret push mov loope adc scas mov in popa cmpl dec hlt std sub adc add jge aaa das imul xchg fdivrl add leave or cmp and daa dec jl nop fcomps loop (bad) les mov push bound (bad) les mov and adc and cmp nop clc mov fcompl gs int3 or jmp dec call mov std rol jo das dec cmp arpl cltd and (bad) pop repnz inc inc hlt and dec pop enter out out mov mov fldt je daa push cs sub xchg ret cli in je addb aaa pop push (bad) fwait mov out shlb hlt inc (bad) sub sbb pushf sub ljmp inc clc pusha das jp mov push lods leave xchg add xchg mov cltd push sub dec hlt xchg arpl push jb lea pop fnstsw or pop fcoms xchg cs (bad) mov in cmpsb ss int push (bad) rcrl leave cli jnp jp mov int3 loopne push pop mov xchg insb add outsb jmp mov inc ljmp je (bad) fiadd cltd nop push mov xchg mov fadd in mov fstps mulb aam test xor push rolb cltd push ja pushf mov cld loopne sbb sub insl mov dec lock pushf (bad) jmp xor outsb jge fs fldl test mov dec add shr push iret cmp fmuls aam faddl jo lahf ficomp pop enter push ljmp inc movsb int and or ja and std mov jno fwait sbb xor jb cwtl jg stos sbb mov jae xor lcall jge mov test adc and sahf (bad) xor je (bad) fwait pop cmp movsl jns dec iret iret (bad) inc nop js pop add jge pop cld xchg movsl mov mov nop iret lret and pop and stc stos and cs insl cmp inc mov xchg cmc shrb push or dec incb leave jne rolb loopne mov xchg push je or data16 test sbb mov shlb subb and mov push sub shrl jnp mov gs iret jp divb add outsl sbb fwait stos add cmpsl pop sbb std les cmpl nop push mov jmp loop mov mov (bad) bnd push shl ss adc clc fwait sahf mov ret rol mov xlat lods push in lods es push add stos or lcall mov xchg dec fstp xor aas add dec dec jl mov push arpl lock out xchg and mov psrlq fild cld test aam clc movsl ret sub rorl aad lods loop mov push xor cmp cs js lret dec sbb es push mov sbb ret icebp dec inc add lcall icebp arpl mov jne sub add mov jp add gs cmp call leave xor jmp pushf mov dec dec rcrb aad push pop jne push push pop jne push push pop jne push push pop jne lcall clc fist fnstenv jns fwait add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and inc icebp xchg jge mov addr16 fldenv in int cmp and cltd or neg and jb mov std sbb (bad) jg stc jle add stos pop sarb mov lds enter xchg int enter xchg (bad) rol into leave lods or xchg or popa lock cmc out or les test mov fiadd sub orl ficom dec pushf leave and out mov sub xchg sbb sbb insb scas sub cmp imul mov jae mov sbb nop jl sub gs adc fs jbe pop in aad push in mov xchg cmp sub pop es push cmp out (bad) in xorl inc arpl push stos popf push sub mov stc adc xor cmp loop stos inc repz xor dec enter stos xchg xchg xorb cmp or pop (bad) jle stc loopne dec mov repnz cmpsl and aad popf inc lea ja cmp adc cmpsb pop pop movsb (bad) mov jmp jb mov mov dec sbb xor jp mov push dec adc (bad) jl orl cmp push mov xchg push add fistp or sbb xchg mov xchg lds xchg mov out mov loop das ja adcb aas xor fist sti mov lcall xor cmp inc and scas lret dec pop adc subb mov push and lods jne mov add inc imul out xor rorl mov outsl test inc (bad) jne or push movsb sub push test stc add sbb in aas outsl or and jmp stos test mov aam or in xor add lock arpl sub adc fwait add mov jp pop outsb lret enter addl cltd cmp pop and adc mov xor pop leave jl rcrb xchg jo push out cmp test mov clc lock and shlb jge push stos and cmpsb sbbb (bad) test outsl add arpl xchg neg dec pop add push mov out mov je stos dec inc ja add js dec add leave inc ret pop into stos div xor pop jl shrl xchg div dec in addl push lret mov mov sub call push cmp pop or hlt (bad) mov sti sahf xchg in sub das in outsb jae imul cmp sub rorl js into pop into test es xor stc loope xor imul mov dec pop cld adc inc rorl or cld add lahf mov sbb rcll and scas rorl stos hlt mov in xor add jo lea inc ljmp pop dec mov jl lcall adc jmp jle,pt mov addr16 (bad) jne xor push (bad) ja (bad) popa fsubr add push xchg shlb scas dec (bad) pop clc cwtl fidiv jo ret (bad) pop sub xor ljmp pusha call mov mov idivb mov push fisubrl sbb push shll (bad) sbb pop (bad) mov ret mov imul in das jmp dec cmpsl pop xor (bad) jae mov aas sbb aaa movsb fsts inc jnp push repnz cmp mov (bad) imul push pop test fisttp jnp mov xchg scas (bad) pop clc jnp scas jle aas std loop out mov cmp cmpsl cmc lret iret mov sbb std cmpsl cs jg movsb fs cmp enter cmpsl jl pop cmp dec loopne in popa leave xor push mov cmp xchg lds push xor dec jmp test fildll into xchg mov pop outsl arpl pushf imul fldenv sbb fisttpll mov mov xlat ljmp daa (bad) loopne adc xchg inc or adc jecxz js dec lock add out or mov cmp and popf pushf sbb outsl std dec ljmp ljmp in inc in syscall xor or test fcmovbe rcrl push (bad) imul in std sub dec xlat sbb adc (bad) xor call pop movsb mov xor jo mov loopne cltd jo pop or jns pop jl addr16 clc mov je inc inc push fstpl inc jmp or es nop jg inc mov or in sbb inc mov je pop adc inc xchg xchg jge cmp dec icebp mov cmp xor scas adc negb lea popa xor mov push xor outsl aam pop (bad) aam jae rcr mov dec es cmp xchg fisttpl in cmc mov jmp ds movsb loop jmp cwtl pop sbb inc int sub mov hlt fsts jle mov cmpsb mov adc mov mov dec dec aam mov inc push mov and out sub fnop ss arpl popf fadd dec mov and jo pop ljmp into dec ret in xchg or outsl hlt jmp orl imul loopne jae xor jl cmp mov ret inc sub je mov or lods mov push (bad) gs lret inc xchg fwait mov pop mov inc fmull cmp ss sub adc push xchg push xor inc add fs es out and push insl repz xchg adc pop add in dec das inc cmpsb lcall ss add jnp push or mov dec dec jnp sahf test mov js sbb stc pop mov mov pop sbb and aad loope (bad) inc mov adc fwait inc repz sbb pop jle jmp mov clc ljmp xor das mulb push mov imul std push jbe clc call and jp mov aam xchg xchg iret jle enter fbstp push aas scas ret out loope add mov std and inc ret xlat scas pop fdivrs sub xor adc or icebp and repnz mov lahf int3 negl and jecxz (bad) repz js inc pop aam mov scas bound lea mov xchg lods sahf dec (bad) in pusha adc rclb movsl gs std sbb lds push cs aaa fmull sub fwait adc clc xor outsl fwait sub scas mov (bad) sbb mov test jp cmpsl out std insl bound pop push sbb imul xor hlt imul jo mov jno cmpl dec xor sub xor push push std gs sbb pop pop pop mov fnstsw and das xor xchg ss sahf add or dec inc push bound test aas dec push add fnsave out stos flds push mov mov daa stos push inc xchg ret cmpsb cld jecxz pop jnp mov mov push jnp bnd pop pop xchg icebp mov out pop movsb shrl pop sbb xchg jle inc testl sahf or jo mov fidivl cmp mov xor out and mov out sbb (bad) jge rol iret outsb into into (bad) sub inc popf push or sub add lahf jo mov popf xor fwait sbb cs bnd ja xorl mov and sbb jnp psubusb push push movsb mov movsb sti rcrb xchg adc push adc jns adc push push fmul (bad) jae cmpsb outsb out movsl (bad) cs add sub notl mov daa dec test insb mov clc inc push inc xor mov sbb rcrl fnop out and hlt (bad) add insb and cltd rolb cmp push pop int int push jne inc fs mov inc dec mov add ja xchg pop insl and xchg lods imul jns mov je jmp (bad) lock imul mov push cmpsb sbb add inc aad rcrb jle xor outsl push sbb out sub xor sub mov xor stos jnp int3 inc mov and addr16 dec aad jge jg xchg mov mov mov mov sbb in stc pop xchg imul push cs leave mov or out addl icebp or repnz into cmp ja mov clc enter fwait das popa addr16 push xchg pop push xor cmp (bad) cs int mov sbb and xor cmp incb inc dec jg stos ss adc fcomps xor pop jne or outsb and jecxz push mov (bad) pop orb cmp imul sbb enter pop cli xor adc out sbb pop cmp mov lcall mov fnstcw ds mov mov sbb in lret les push mov push sub mov divl mov xor cmp mov fcomps fisubl inc jne sahf sahf cltd leave repnz hlt cs inc bnd in mov loope (bad) mov stos dec xor mov adc stc aam cmc lret dec sub in stos sbb (bad) push out jno mov cld lods cmp sub loop xchg insb mov jne imul mov shll in mov adc and orl add es jne pop xor mov int3 mov ljmp mov lods pop pop mov mov adc stos or fcomps sub test or aas cmpsl fld ret mov pusha lcall cmp push pop xchg lods xchg xchg lahf mov into push add scas mov and mov jl fsubrl addr16 pop push mov inc movsb mov jecxz push mov jno xor cmp dec test (bad) roll popa add sahf faddp mov aas xchg (bad) out mov add pop xchg in daa fstps jge aad out pusha imul les push or scas std dec sub cwtl mov decl jne in cmpsb into enter les loopne push fisubr bound mov stos into xchg icebp or cmp pop jb imul sub (bad) xchg cwtl push pop cli xchg stos cwtl pop cwtl mov inc mov loop (bad) sub add mov mov mov gs shl adc or add sbb xor dec sub mov pushf sbb popa nop addr16 loope fwait cmpsl out mov ja scas (bad) repz stc sub (bad) loope inc xor outsb jmp xchg mov into aad iret outsl mov cltd xor xchg in mov jg fmuls sar or and jle into and lahf pop outsb push es add push cmp jp or push sub mov add mov cmp clc js test add jg cli loop scas ret inc ret add popf mov pop mov out aaa jae xchg dec inc pop rol int xor repz ja sarb call std shrl in loopne and xchg loop enter mov outsb and je,pn lock movsb (bad) loopne and rorl insl cltd dec xor mov adc push dec lret sub dec js out lret cmpsb jbe and xchg sbb clc or cld test mov fmull sbb loopne inc cltd cmpsb sahf mov (bad) inc mov pushw push (bad) mov push loope adc jns jbe mov push xchg shll dec imul addl mov jecxz es inc mov movl adc xchg pop ret sub popf idivl lea xor sbb dec loope ja push jl mov dec loopne (bad) scas push je push shll sbb roll or xor push imul lock std loope arpl xchg addb and ret sub pop dec sub rolb rcll rol cmpsb jnp xchg fucom push cmp inc sub out mov sub sub ds test jo adc aas adc pushl out sti xor xchg xchg jne outsb mov inc notl or jge push (bad) movsb stos or mov or xchg add cmpsb test xor out sub cmp pop mov mov mov push sub int lret xchg int jecxz mov out test sar imul pop ret dec mov jp or into dec outsl subb mov push sbb mov mov and inc js,pn add and sbb cmc xchg adc and insb jp xor jg rcll mov nop stos mov and insl addb jns idivb out stc jmp push das jae mov mov cmpsb inc movsb loopne aam aam rorb pop (bad) add mov pop repz push pop test movsb xor xor cli scas jg push mov and hlt icebp inc sbb lcall stos out mov jb mov push sub ljmp nop xchg iret in arpl imul movsl test (bad) cmp mov gs cltd xchg pusha push adc popa or add out insl call (bad) stos lods std mov lahf cmp sahf cld pusha adc loope,pn mov cmpsl lcall cmp mov xor pop pop jo pop imul scas dec and repz push insb xchg mov sbb bound sub mov mov pop cwtl xchg mov inc jno cltd sub inc imul in add (bad) repz out lcall inc mov fnstsw pop mov fnstsw pop mov incl add pop sub pop xor jne add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xchg adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc dec inc inc push push and mov (bad) icebp (bad) into dec ja out add sbb mov bound scas cwtl scas mov test arpl jo jae ret divl inc iret repz js pop outsl add lea rcrb jne ret in adc sub sbb mov jp test gs inc xor cmpl loop imul or gs mov xchg sub jne or jge mov (bad) cmp bound sub leave repnz (bad) rolb jg (bad) cli mov push dec sub jg movb lret xchg dec and pop test mov popa mov cmpsb mull imulb pop add cltd vpaddsb pop sub int ljmp inc pop jmp add iret clc cmpsb stos addl cli neg cmc pop lahf dec sbb jo in jle adc jle sub into lods mov arpl shlb orl adc xor xchg mov mov jecxz or das xor adc mov lea leave out xchg loope sbb andl and xchg fucomi jge in sahf lret xlat sarl push jb,pn xchg in test loope push jl repnz loopne or pushf rcl insl rcl dec inc push (bad) mov or pop xchg sbb cmpsl loopne ret dec pcmpgtd jno test sbb push cmp sub es imul cmp and sub mov jbe loop shl fistp push or lods jl rcll push lahf pop lret jnp push (bad) push pushf push repnz repz dec mov push dec adc popa les cmp pop mov mov das sbb push pushf pop jl (bad) lds sbb pop movsl inc dec in lahf push shll mov divb inc mov or sbb outsb pop int mov ja dec mov ss mov cmpsb sub push add gs into rolb sahf sub mov or add push js cld ljmp flds in js xor repnz repnz movsb dec dec test xor adc out sub subl daa mov cmpsl inc fidivl jne rclb popf (bad) mov ljmp ret lea push or cs sub jg xor push jecxz insb and cmpsl fsub jle xor sbb aaa sarl mov popf xor dec cmpsl hlt jb data16 in aas pop push xchg mov (bad) scas xor out fdivrs scas gs cs mov sub jecxz aad jno xor (bad) mov inc in (bad) pushf loop (bad) inc xchg cld arpl cmp cmpsl inc call (bad) xchg inc inc js imul (bad) dec iret mov roll (bad) test imul mov mov ljmp jecxz adc ror arpl push jb inc dec les mov idivl mov adc movl cli mov popa sarb add jecxz icebp dec test fnstenv ror jno and frstor xchg fwait jb iret sub fcoms jecxz outsl movsb cmpsl lcall jb mov int3 push cltd ret mov adc mov xor push add dec sti dec push push rolb push fist cmp xchg stos cwtl (bad) jle mov jbe mov cmp jbe jge imul jg cmp cwtl jecxz or out lret cmp fisttpl add shrb inc cmp and xlat dec sub pushf lret cmp mov ljmp xchg rep adc inc (bad) ret pop and repz push ss fisubrl ss xchg (bad) fcoml repz popf icebp xlat sbb pusha jmp repz jo xchg jns pop shll (bad) push inc clc push out repz cmp (bad) stos rcl pop fisttpl sbb mov cli push outsb dec push int mov jae (bad) (bad) pop pop sahf mov mov adc loopne int3 xchg add lods cmp xor jae mov xchg jns out jmp xor mov ret rclb (bad) jbe jns aaa mov out (bad) jge lcall repz or sbb cltd rorb push cltd es (bad) unpcklps sub cmp arpl inc (bad) xor shrl xor push lea scas cli mov loope ja xchg (bad) popf mov mov cmp scas mov jbe mov cmc lahf leave sbb stos sub out es sbb (bad) lock (bad) scas shrb mov sub push mov mov leave subl lcall aas add pop sti xchg push xor testb sub mov push inc push push cmpsb test adc cmp jb push data16 or nop les push mov mov xor sbb xor jl and adc xchg mov (bad) sbb (bad) mov (bad) call in pop and pop adc std push (bad) leave push xchg out add into push sbb mov pop out dec out push leave inc int3 adc cmp jmp push int jae enter mov sbb xchg jns jecxz inc es ljmp adc or mov pop inc cmc and leave inc push icebp lods enter scas pop movsb cmp arpl inc cmc push cli movsl fwait mov (bad) mov insl cmpsl stos fstl cwtl pop pop cmp mov mov pop dec adc mov pop jg cmp shrb neg push das sub mov mov mov push lock mov cmp push adc daa aad mov (bad) sub mov cltd in (bad) jbe subl les pop stc rcr jno out jle jecxz mov mov xchg loop cmp stc arpl and jno scas xchg insl (bad) pop pop scas push lea cmpsb cld out jnp xlat adc scas addr16 adc mov mov mov loope out or addl sub push dec mov fwait xchg cli lahf les and xchg les mov dec push xlat cmp movups mov mov or cmp xchg pop mov cmp vxorps or xor ja mov mov cmpb sub jno push (bad) sub xor ret push mov mov pop sahf dec in cmc pop in xor cltd cltd push sbb (bad) test mov shr hlt lret jns les push loop outsl add jmp ljmp dec ja sub mov lods ret int loop loope ja mov fisubrl test and out jo sbb test push xlat std jnp sbb lahf sbb data16 jb sarl cmpb ss in ds fldcw repz cmp cmp cmp test adc jnp jb ds out cli pop rorl bound xchg cwtl (bad) mov ljmp pop cmp sti add or or icebp out (bad) hlt lods popf adc push ds bound mov into mov icebp iret mov dec add sbb fmull orps mov push xlat cwtl mov lret data16 fsubr lret pop push jl mov jge xor movsb fisubrl pop push push add popf inc in iret sub xchg push xchg mov mov mov outsl mov inc inc cmp es mov popl aas fnstenv pop test movsl (bad) pop gs rclb das sbb outsb xchg xchg xchg xor mov xor fldpi js mov mov jo test xchg clc mov xchg and mov xor loopne push bound fnstenv cmp sbb negb pop pusha pop add cmpl or and mov pop push xchg icebp in xchg prefetchwt1 fisub shrl jmp mov xor xchg scas outsl ja bound pop cmpsb mov lret jecxz add imul inc xlat jmp adc jmp pop adc mov cmp jmp push and xor and sbb sub int3 in (bad) pop add mov (bad) inc das inc jmp push aaa subb imul in (bad) stc test mov in dec push and mov dec (bad) daa push mov loope scas mov adc popf push ljmp xchg sbb xchg pop js insl sbb cmp call test mov incl push adc into jo adc adc pop mov clc pusha je cmp inc icebp sbb sub fidivl dec or jno adc mov and adc sbbb or mov stos add sbbl sub or push loop aas push inc int sbb push loopne mov frstor or and out in int3 cmp ja adc cmp mov (bad) mov (bad) js shrb int3 ds mov inc aaa jb jo pusha pop mov mov mov sub fimul cld pop (bad) and fs xorl movsl jl and (bad) dec inc mov pop jmp and sarb sbb push mov push scas adc xor cwtl sbb mov test jmp popf les xor mov mov or das cmp add repz scas ror test push jecxz (bad) loopne cltd cmp sahf xchg pop jge (bad) in gs popf cli push pop in imul dec out imul cs adc mov fisubr dec inc dec or imull (bad) cmp push mul mov fadds mov push std (bad) ds loop aad xchg arpl push lea pop dec xlat mov sub add fwait add and pop aad test jb fnstsw loope jo,pt pusha sbb add pop cmpsb jp fwait int ljmp pushf enter push out dec insb xchg nop or sti mov cltd into js fnstenv jno pusha icebp mov or icebp (bad) scas xchg lock xchg mov push ljmp mov int3 call fdivl popf mov mov jbe or xchg aam test (bad) lcall inc fs inc inc insl rorl cmp lock xchg pop pop push loop sbb jp add out cmp inc inc pop or fidivrl ret or cli jne jg mov pop lea int neg adc cltd sbb sub icebp inc mov ds dec jb mov adc pop push sub jge cmc andl fstpl xchg jns cmpsb das (bad) cmp xchg int sub shl fcmovbe (bad) push pop cli inc cld js fsubrl leave cmp ss lock dec clc aaa lods ret jge xchg push mov xchg xor jl jle iret and sub je testl test inc (bad) sbb fidiv mov dec or cmp out leave sub or mov into mov out push adcl xchg and mov xor and pop and push out jb pop lods movsb scas sahf jle inc xor lea xchg aas dec inc mov cli shlb inc push adc out jecxz add cmp or mov xor xchg mov sbb adc or mov (bad) xlat xor movsl xor lds sub fsincos leave js push ss xchg repnz ficoml cmpsl push xchg movsb add inc or and push xor out pop dec scas inc ret fldcw sbb adc sub sub adc sbb sbb push fstl xor or cmpsl pop test das insl and dec jb dec insb lcall cmc sbb inc addr16 dec adc stc jae fs ja addr16 and imul jle dec loopne cmp jge rorl pop mov aas jmp push cwtl outsb outsl add push ljmp stos idivl loop mov iret les popl (bad) (bad) jns in ror dec daa fbld add scas insb fldenv and add inc adc mov xorb mov in pop inc mov pop decl jle das bound cwtl addr16 lds hlt cmp push insb scas jmp lret sti mov mov mov lock or dec ret enter insl mov jmp daa and sbb cmp push jbe or insl mulb inc xchg inc and mov outsb out or fwait js xchg xchg aaa or stos hlt lea add cs jbe lods aad and mov cmpl out leave in ja test cmc je fadds jmp jnp gs ja cmp push cli rcl popf mov leave lods lods or mov jmp in lcall dec jne and and cli sbb movsb cmp (bad) testb jg sub sbb mov jg repnz popa mov dec pop add sbb jbe adc inc std mov or fwait in out pop gs icebp mov mov sbbl rclw xor sti cld int add pop mov idivb cmp sbb xor loop aam mov adc add mov cmp sti mov sbb daa je sbb mov sub cmpsl mov fsubl xor ljmp nop fwait sub aas daa pop push js fildl jbe into (bad) inc add sub jge cmp out das cli mov pop stos test lcall xchg std lea dec cmp cmp les mov jns pop lods pop dec (bad) mull jo pop mov (bad) xor sbbb shrb out xor loop jp push adc jnp mov leave (bad) add iret fs sbb cltd (bad) jnp fnsave insl mov jbe insl mov jbe insl mov jbe insl mov idiv daa add pop mov push rcll lret add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add dec adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc dec inc inc push push aas adc add icebp mov jbe negb loope xor jno inc jbe lods or mov inc (bad) mov mov and jns jmp jns (bad) fistp add fistp mov push sbb and popf sbb shlb xor int3 add adc jae pop push and js (bad) cli mov je fwait pop xchg scas scas cmp shl test sbb out cmp in and pop mov adc daa and push and jmp push movsl inc sbbl out mov add adc data16 mov adc and add pop push mov jmp cld jle (bad) mov in xor (bad) jl lret or rclb stc xchg inc push and aam lods sub pop int adc xor and xchg ret loop call mov and movsb ja dec mov jle test aas push inc sbb add dec pop cmp shl dec mov sbb mov dec and (bad) nop addr16 jbe lock fs mov nop ljmp xchg mov adc stc or mov jle and out fldl2e dec push aaa roll iret sub push jne mov dec adc xor data16 push add arpl rcrl mov addr16 jns pop std out sbbl and sub pop inc (bad) mov pop in sub orl inc xor sub sahf push push mov cltd stos jnp push fdivr and mov rcrl gs test fbstp mov push nop cli mov (bad) jae jb sub inc mov ret push jp lea sbb pop pop push pop pop scas inc cwtl fiadd shll mov or push push or dec mov push cs shll push dec dec ror cmp dec sbb ss sbb test inc aaa ljmp or mov lahf call cmp incb jmp fisub fmuls aaa jbe jae inc sti ds xchg inc mov jno (bad) cmpsl pop sbb pop dec adc xor push movsl push test add faddl cwtd or aad or push jecxz ds adc push jl push lds repz test sub loop xor (bad) (bad) and fwait loopne (bad) scas cmp testl or movsl xchg push es pop shr fcmovbe sbbb xor jbe (bad) lods out sahf test sub push lahf sub sub shrb mov ret xlat mov or jbe popa lea inc sti sub push pop cli sub push les imul js shr mov mov dec sub pop mov xchg xchg icebp mov jge cmp (bad) loope jl call xchg mov push and rolb and push gs jno test push repz ds sbb jne cmp nop lcall fisttpl mov fs loop xor or lahf call mov (bad) xchg xor lret aad pop repz push or bound adcb mov pop lea or int mov ss push in push out push inc loopne pop xchg inc notl or je leave pop sub shlb (bad) scas cli sub add insl lahf (bad) in rcl sub xchg nop js fbstp or out in jnp push daa mov add add mov xchg (bad) stc test xchg mov adc repnz jmp fadd pop push loop lods pop lea xor imul scas stos adc loopne push je dec cmp mov ja test scas bound and (bad) jb popf lret fdivr movsl imul pop je out xchg out xorb inc mov push popf xchg lods push daa popa inc das pop mov test adc inc scas cmp insb loope ljmp or push mov xor or inc sub add add xchg cli pop js mov imul (bad) shrl mov adc xchg (bad) adc pop xor adc aam out mov neg mov (bad) xchg jl fs sub jg scas mov in jns scas add insl cmp cmpsl call adc pop mov aad scas (bad) mov xlat sub or or mov pop in mov adc push dec out roll pushf pop bound or jnp repz iret ljmp cld xor aad mov dec dec xchg out and bound fimull xor sbb ss xchg inc fimull insl sbb or call cmp adc sti jns lret cmpsl stos rcll mov xchg movsb or xchg into mov bnd stos adc cltd arpl pop xor push push mov fcmove pop cmpsl push ja push or xchg les test stos das sub jne fdivrl fbld (bad) adc add in mov shrl scas inc xchg fidivr stc mov in imul xchg daa push mov add ret test cmp loop pop scas hlt push jae (bad) aad repnz (bad) lds add push ljmp dec call dec jmp mov lock in mov hlt daa sbb jecxz add aaa lds out mov inc sbb (bad) cmp pop and (bad) cltd cs inc mov (bad) out out mov dec pop aas sar lock pushf fldcw add push cs stc nop xchg cld stos adc aad popa in out or icebp mov nop xchg lods jae xchg fdivp inc in jno jecxz fbld ja cmp rcl or jnp mov shll xor dec mov or pop ret push add dec lods rolb shll cmpsl test and jle lret cwtl aaa (bad) dec int3 mov aas push rorl mov bound xor or jno cmpsb jmp mov push and sbb fisttpl jns daa decl and and pusha adc cmpsb xlat mov inc testb jb add pop push lds mov inc pusha sbb ret push pop mov xor arpl and bound mov bound push (bad) xchg js sbb fnstcw inc loop inc (bad) xchg cmc rorl mov jle jp insl pusha and (bad) inc scas enter aaa adc enter and call (bad) test (bad) (bad) (bad) out fs inc je inc loop jmp cmp cs out mov js dec mov sbb mov fwait fs out iret (bad) aaa adc mov adc mov xchg cmp out mov std (bad) les pop arpl mov scas xor aas sub cld out and popa adc jno xor loope,pt les dec jmp aas (bad) daa push out inc bound and stc js les test adc inc out js cmc pop and adc xor imul lods fmull and cmp out push mov arpl scas popa sbb and icebp jecxz insl fnstcw push and dec push sbb mov add mov push mov sbb jecxz outsb and sbb push call cmp lret test arpl mov sbb dec inc test mov and adc cltd xor les xchg push mov or test icebp popa and cmp push pop mov js jno add andl mov loop loopne xchg and push mov int3 xor add imul or mov pop pushf push decb lret mov ret jbe jae dec mov and decb pop fidivrl push lcall fistp jge insb adcl sbb sub sub cld jmp bound mov inc add dec lahf mov mov inc gs in xchg scas les shll mov packssdw lds cmpsl xor das push push mov pop scas and xchg inc aam mov (bad) fisubl std out or inc or nop out push das xchg cmp mov dec mov mov (bad) daa mov fisubl addr16 xor fcmovne lret sbb pop sub xchg dec jno loop push jae and adc mov movb sub mov ds rolb in xor stos cmp pop cmc outsb push lcall notb loop xchg addr16 or sbb gs sbb sbb xchg sub dec adc or xor data16 xchg push daa std mov call fldl jnp xchg lret lods push pop inc and sbb hlt hlt pop push jp jge mov ja jmp jbe (bad) sbb inc push movsb orl pop sub mov xchg jg aas mov std cmpsl pop mov sahf adc addr16 dec popa cmp pop xchg cmp or mov mov mov jl (bad) mov std movsb sbb and cmpsb orl mov pop pop inc roll icebp adc hlt in inc sbb cmp stos test dec pop add mov rolb cmc push xor push call inc lret fidivr or sub rolb pushf mov cld aam cld stos xchg or out inc add sbb leave xchg cmpsb fsts test aam cmpsb test jns shl jl fldt sti gs rcrb in pop and add loop jb sub outsl xchg rcrb mov in in pop lret jne ds adc (bad) push lahf and pop add (bad) rclb mov push xor push sbb push pop mov out scas mov and popf (bad) in pushl inc lea aam add fdivrl das or jmp mov jmp fs outsl xchg dec das cwtl xor sbb scas mov inc adc fucomi cmpsl xlat add inc mov mov ss or xchg ds xchg (bad) cmpsb xchg gs lods lcall pop cmp dec dec stc and out push and xor mov mov and cmpsl std sub cmpsl (bad) mov xor fwait test dec mov mov mov aaa or dec test xchg rcrl dec addl jne xchg adc cmp xor inc lea movsl popf pop pop addr16 jbe in mov pop sub lock std addr16 mov sbb push mov add mov cmc pop mov (bad) xor adc mov sarb push jmp mov inc mov test sbb jmp stos loope fadds popf inc push mov nop or xchg clc fs push adc in or add jmp iret shlb cmp rcrl (bad) int cmp ljmp fild xchg je insl sbb mov and out ja mov push sbb dec inc sub mov jo fisubr fmulp mov jb push out clc push cmp adc cmpsl sub mov pop cmp stc loopne jmp mov lods aaa jecxz es ftst push nop je inc dec mov imul lcall xlat arpl inc pop sbb dec popa sbb rolb push cmp jecxz sarl cmp push sahf pop push xlat jnp movsb push inc fdivs fwait xor aas dec mov int3 (bad) rcrl xchg in mov je mov call loop out ja push negb xchg mov movsl les fnsave sub dec aas (bad) xchg frstor inc lret dec pushf sbb daa dec push (bad) sbb movl xchg and rcrl imull pop insb fcmovb cmc movsl jmp enter inc fisub lahf scas dec pop nop push ret aam xchg mov pushf adc mov fstpl arpl cmc lret push out test xchg adc sahf mov or (bad) loop jne test mov (bad) (bad) in out or jae push enter stos xor mov dec rorl fs cmp xor popf daa mov cmpsb fs mov cmpsl stos jnp adc sbb stc (bad) pop mov inc inc pop bnd out or aaa or fcmovu nop int3 movsb mov mov jb scas popf shrb fidivl lahf fldenv sub inc test lds sbb fmul into pop into out cmp push xor sbb push das dec (bad) repnz cmp pop ds sbb ret cwtl (bad) and push (bad) pop cmp cmp cmp lret pop add mov std mov mov cwtl out push jge and dec cmp cmpsl inc pop or xchg inc aam shlb scas pop inc xor and jae jge xchg pop bound mov insb test dec repz add jle ret lods xchg (bad) iret mull stos xor (bad) ja push mov lock int out clc cmpsb cwtl adc mov ret repnz (bad) jae ss and mov dec bnd loopne dec xchg sahf (bad) push xor ss jb jl sub sub dec (bad) xchg push mov dec jbe mov mov or jns and inc jle jo arpl add mov adc jecxz imul js icebp xchg cmp adc int3 inc icebp and or jae or stos sahf leave push mov js (bad) rcll scas dec (bad) in rorl stos mov mov xchg movsl jae inc sub (bad) ja push mov adc lds cmp cmp movsl add push inc loopne cmp outsb dec pop push dec cmc std fdivrl rcrl push fdivrl fxam scas bound xchg out jmp xor xchg push jl (bad) bound push pusha mov xchg in mov outsb mov mov mov sti decl add punpckhdq ret add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push adc and jle cmpsl test and shrl out out rcrl dec mov fstp js idivl cmp jnp add nop sbb inc mov imul in add pop pop mov mov cltd inc pop inc ffree jge mov jp lret pop jle insb in aaa bound pop popl pushf adc jl jo icebp out xchg test xchg loope js and fwait scas jecxz xlat cmpsb mov jle push push mov adc sub arpl popf mov adc sbb add out jno pop (bad) imul add outsb jle xchg iret je lret add jg xchg jbe mov cmpsl jl enter xor or pop test iret bound add iret pextrw pop or stos out sub cmpl dec jns jno (bad) out adc (bad) inc test lea jne ret jnp push sub sub lods pop sub sub mov dec cltd dec and cld mov jo flds pusha dec popa neg mov insb pop outsb add jns jo or pop inc xor test insl outsb cmp and bnd (bad) (bad) or and sahf jnp push inc out (bad) add jno push and cmpsb insl jle lock mov ja outsl sti mov xor mov bound adc dec and and std xor mov cmp hlt (bad) inc lods and mov clc xor test dec pop push stos push adc sahf push jb inc negl rcrb ja or mov sub pop sub push and jg jg jo jle jecxz mov mov mov fisub and xchg dec stc xor pop adc dec mov jae (bad) xor ljmp cmp pusha sbb sub out sub enter repz mov push fsubs ss jae mov push xor popa scas ret mov xchg dec imul bound std fnstcw stos icebp push pop mov es lahf clc mov inc and jnp out jae shlb sbb mov pop jl or cmp ljmp es xlat mov loopne xlat sub push inc push sbb test or mov dec mov mov movsl pop rol sti test test or ja repnz inc cmp out enter fcomip mov cli sarb es hlt mov aad inc cli addb shlb sub xchg xor roll sub add adc adc gs iret push lock in ret nop repnz inc inc xlat add lret mov je imul jle push std jo cmc jns mov xchg out lds sub push push mov lahf cmc (bad) cmpsl mov sbb jmp xor adc sbb mov sub gs inc cmpsl lea out insb cs sbb xchg enter es xor jecxz pushf pop hlt outsl mov cwtl or pop movsl xlat loopne jne les adc fwait push push sti pusha ret mov add pop lcall stos pushl inc stc push dec inc mov adc ret mov mov pop shll push aam movsl mov sub jg aaa pop insl int jae cld aas popf les rolb sbb pop arpl and fidiv sbb push add (bad) roll sbb xchg mov or ss adc xchg lea fsubrl sub pop mov mov fidivl fimul popa lock scas sbbb mov scas pop inc xor bound or jl sahf sbb repnz hlt lret pusha mov (bad) out (bad) cs ds or aaa mov (bad) cld add lods andl push stos push mov leave les jl mov imul aaa arpl ja ret cmp or lds inc stos int stc movl push dec in mov xor movsl mov sub rclb push je test lods adc es xchg and std push jne in add dec icebp pop or pop and jl pop xchg repz lcall js add xor (bad) imul outsl or loop inc (bad) loope pop aas aas pop lret add and add arpl sar lret outsb shrl cmp sti sbb out (bad) movsl push cli dec in xchg out dec xchg gs lock lods cmp lock cmpsb (bad) jecxz mov aam xchg lahf xor aas inc pop (bad) fdivp push add mov (bad) (bad) dec fsubrl imul nop popf inc mov xchg sub and repnz jg inc adc out subl sub sbb dec jbe dec daa int push and (bad) adc enter lahf mov push scas sub pop adc sar dec push rcrb push subb rcll pop out sbb daa cli jl add cmp repz test lods loop les pushfw sbb repnz mov jecxz (bad) les cltd inc popf in icebp mov xchg xchg dec mov jnp pop push dec clc jp push push xchg cmc lret pop or jecxz add dec mov or push mov int adc out and add push pop cmp incb or add (bad) out or pop ja (bad) add mov mov push mov pop cmp jmp sub and cmp loopne out mov outsb jl ja push push add cmc out aad fwait popa test inc notl pusha and mov mov sahf mov adc ss pop mov xor je sub je jbe sub mov sarl and shr and xor jecxz rol cwtl je cmpsb lods fcmovu fild mov xor push push mov push mov (bad) xor xor int fadds in add cmpsb negl pop bswap in repnz fadds stc and (bad) jmp dec inc mov fcomip inc xchg (bad) sbb mov sahf sbb inc jo test scas pusha push pop jnp jb fidiv and loope loopne loopne dec cmp inc xlat cmp mov xorl push jp ds rcl aaa mov cmc clc sbb loope inc aas push pop sbb in or ds or mov push push outsb pop imul or xor scas jns and stc mov into nop mov in aaa loopne and adc xchg test dec fiaddl mul mov push ds lcall mov enter mov mov cltd jle scas orl or mov ja icebp ss in jmp test das mov lret sbb cmp mov insb push clc xor test popf mov inc add fwait mov adc (bad) das fsubs or inc jg addr16 ret mov insl aaa insl jle outsb jne stc stos fldcw out mov in inc xchg js scas pop js jb ljmp pop outsb push out scas xchg xor dec in popa out xchg pushl cmpsb enter (bad) out cmp das dec lods add xor adc cmpsl push out jb xchg mov adc sub xchg mov sbb cltd outsb push scas les jae push xor hlt add loopne mov dec dec cmp and enter roll cmp and mov push xlat or pop inc scas sub and jmp inc dec mov in cltd push lret adc mov fistpll cmp cmp jne addr16 aas fstpt cmp sub or popa fdivrs out pop xor sahf jl aam push ljmp mov rol (bad) jno mov cwtl cmp rolb jecxz push jnp add (bad) cmpl int3 mov fdiv inc pop in in loopne pop xchg add fcmovnbe pop into test stos mov inc mov imul fcoms test lea cmpsb scas add arpl aam sub ja and shrl mov js and das xor jecxz stc mov mov ret je jnp je andl mov stos mov les adc xor test mov jecxz subl ds lret cmp cmp lods dec loopne rcll lods cltd sub cltd jo push (bad) adc push xor in insb xor inc dec xchg pop xorb or add movsb test sub sahf icebp and mov pop rol add (bad) xchg aad test stos std pop dec movb jb mov or lea in (bad) pop je sbb push fwait jle mov pop cmpsl and jnp xchg enter adcl pusha int (bad) repnz test fsubrl lock pop xchg imulb lock pop cs sbb popf outsb ja mov sub xor mov in (bad) div daa add rcl cmc popa and mov push jmp pop add sbb ja ss call (bad) hlt cld ja sbb nop lock es pusha aad xor stos mov outsb sbb out jns add je (bad) dec roll push jo in sahf insl push addr16 sbb push ds stc sbb and cmp mov imul gs sub mov mov dec or cmp or je xchg in gs lcall jnp jns xor push scas add jns push or adc dec movsb popf (bad) cmp cmp or pushl in rorl mov aad out mov jbe fadd lods lea iret iret std gs mov test inc (bad) outsb rcrl mov test push mov jae (bad) pop addl add repnz and dec cmp xor mov repnz test mov mov sub adc pop bnd aas in or jge das cmp shr jns mov and mov mov psubq jbe sub stos repnz insl movsl add nop mov mov jp out out jno push das out mov jnp xchg je push ret push stos aaa adc lea xor dec push in jg sti or jns xchg fadd std cwtl call rcrb (bad) fnstcw adc popf inc in mov adc mov aam xchg data16 fistpll mov pop in cmp cmp aad dec cmp push jno nop push aam in sbb dec cmc inc add cmp subl xor inc rol clc sub stos movsl out mov fnstsw movsb cmp push mov push test lret cmp add xchg aas movsb test call pop inc ljmp (bad) cmp aas mov (bad) mov sub jl mov xchg push mov lea adcl shl dec aad adc jbe push jb dec pop sarl repz cmp mov sbb inc ljmp add inc add jl ljmp or (bad) jp pushf out pop ljmp hlt pushf mov cmpsb inc sub lods push xchg pop jae bound and test xchg in xor mov mov push js fnsave xor cmc adc es fs pop mov jp fsubrs push nop jbe jge cmc pushf xchg sbb mov fisubr pop pop push jo cmp xchg cmpsl aaa (bad) clc fsts sti inc jmp fucomip aaa cmp movsb shll fs (bad) outsb in out lret aam mov lcall mov mov sti cmp adc cmp jbe xchg xor push lds mov inc or es cmp dec jns fs sub lret lds (bad) into sub aaa lock jp push (bad) mov mov push dec push mov pop cmp lret and popf mov cmpsl rorb or out gs lds xchg lods repnz sbb bnd mov lahf popf ljmp (bad) jl jo push movsb mov or pop add or sbb cmc stos (bad) gs mov or pop stc push pop dec mov xor push add jp xor (bad) in pop imul idivb pop jnp aad aad aas je je stos std or add shlb jns jo ret aad adc add (bad) fisttp in imul cmpsl push mov mov pop out push std loope pop js jp mov jbe xchg push add lcall jno pop dec movsl enter sbb (bad) mov pop inc push mov hlt jne sti lcall insb sti sarb sahf sti lea (bad) cltd lods push cli jne (bad) out and sbb out xchg aam fwait mov adc fbld aam mul sub sti dec mov (bad) ja inc push jmp inc sbb push cmp sub test out xchg shlb popf inc (bad) test cltd push sub jno in mov out cmpsl roll push sbb notl test stos lahf jno xchg arpl adc push cmp jne (bad) daa dec in pusha (bad) mov iret ficom add xchg and jl xchg (bad) jmp sub mov pop bound cli push pop xor sub inc xchg cmpsl (bad) xor repz or sub ds inc lret (bad) fcmovb jo adc lock lcall xchg and lea inc pop jle cltd (bad) fnstcw mov xor ss lock mov xchg lods sub in add lcall je fisubr (bad) popl ds mov xchg fnstsw mov jle mov sbb mov add cmpsl dec inc or movsl jb cmp xchg scas out pop inc xchg mov xchg jge pushw lcall jno cmp cmp scas aad sbb enter icebp push mov push mov xchg jmp movsl test out jbe into adc push xor call dec addr16 jp scas adc jp and lcall ret arpl outsb mov adcl loop sub xchg xchg outsl jmp mov lahf cmp inc ja mov xchg dec lcall lcall jns in xchg daa dec sahf cmp repnz xchg daa dec (bad) incl add pop inc aaa or mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb add lock jno imul fucompp out out out ss outsb xchg cmpsl imul sbb cmpsb xchg bound xchg dec xor jle jge out xor add in add mov dec rorb inc cmp out and gs xchg rcl lea popa sub stc fs pusha jp cli jnp mov std xchg cltd sbb pop adc cmp ljmp or push mov daa xchg enter mov pop mov fsubs jo addr16 xor lods insl xchg xchg xor pop inc inc ja insb or orl sbb loop ja cmp enter in loope jmp std fldt mov sub imul inc pushf or inc (bad) sti int3 jbe mov jno gs fiaddl push outsl mov xor push arpl push test movsl mov fcmovbe cwtl mov out je pop (bad) xor cmpsb add push notb cs jnp (bad) pop sub pushw insl xlat fildl or repz pop xor mov ret insl pop sub xor mov shll and ljmp mov call pushf int add out inc jne repz add shlb std adc add rorb push leave out mov sahf lods mov pop fsubrs mov add adc into ffreep add pop add pop or stos mov cmc adc mov je leave jae and or mov hlt cs test (bad) fidivr adc insb push and in aam sub ss jae mov jmp es fdivp fucomp in dec adc inc (bad) (bad) push pop xchg mov or push jnp iret icebp imul add sbb mov jb jne scas mov popl or push pop mov or out push inc test mov test jns (bad) out ret mov jo add adc cli and cli pop mov aad push pop add add mov jbe dec lods push les loop mov ficoml adc cmp mov js je clc or mov popa sub aas or xorl push cmp scas out lds cmp xor xchg dec sbb fmull dec sub clc lret xchg sbb fcmovb pop lds out cli (bad) push mov cmp ret pop push or enter mov inc loope adc movsl popf xchg jns jl andl and and mov mov dec (bad) imul dec sub pushf outsb xor push repnz aas inc xchg lock or mov or insl xchg hlt aam ja (bad) cmc aas stos (bad) mov mov add mov xor arpl jo out mov or sti pushf (bad) aas adc clc mov or rcrb movsl push sub xlat es int call push mov imulb cltd pop ret data16 inc sub fisttpll sub popf mov lahf sub hlt in push leave fnsave cmc mov ss sbb mov push movsl cmpsb cmp in (bad) stos in arpl mov mov mov push icebp div mov sahf pop clc fistpl adcb cmp dec jne sub std mov out and cmp (bad) cs out cmp test (bad) dec fwait pop push jno xchg sbbl inc fnsave push mov mov (bad) push jl mov scas jp sbb das sti shr and loope decl xchg sbb sbb and or (bad) jae iret pop mov rclb xchg sub fbld sbb dec push jmp jbe cmp add add lods and out cld sub fwait dec push sbb sub lcall clc xchg mov push jg ret movsl cmpsl mov xchg or mov inc cltd cmp mulb cmc fmull mov lock enter dec dec fxch shrb icebp mov test push push (bad) repz stos mov or mov mov add into sbb ret xor sub (bad) lock jge lcall pusha fnstenv dec arpl mov xchg or mov cltd pop mov ss cld and and bound ror sub mov mov inc cmp test into and cmp adc pop stc std adc sbb sub jecxz jbe pop loop popa lret push sbb ret imul test sub aam ficom inc xchg das jg cld push loopne call pop (bad) in add dec mov imul test cmp test movsl jns aas xchg es hlt jmp push jl mov das cs dec test push aas jecxz test mov jmp gs stc fiaddl sbb popf imul movsb push and (bad) cmp imul push scas lahf daa fbld test mov inc sbb push push mov fs mov add pop dec ss inc mov aad pop pop inc add in jg push aaa sub and pop movsb sub std in pop push xor insl cmp sub repnz cmp cmp or jno xchg fwait insb fsubrl xchg cmp aas inc adcl pop push (bad) mov jnp inc test xor pop sarl fdivrp add nop dec cmp imul rcr push push lcall cmp jp lods dec in push mov ds mov sbb xlat loope or mov aaa jle pop lods xchg sub in jecxz aam rolb jb and mov mov push inc xor adc in fisubrl cmp popf fs mov xor mov cmp outsl enter int3 fstpt xor fisubl outsb popf dec cld or sti cmpsl push sbb int cwtl hlt pop cmc sbb cmpsb popa (bad) loopne mov insl pop ds ds pop xchg dec push add add push jp cld ds rolb cltd es adc cmp gs cmpsb add push xchg aad pop mov pop lods push pop fs mov call inc lea daa cmc dec mov xor (bad) int3 mov adc loop ret mov adc ss xor mov add outsl sub add test lds jb cli jno ficom lahf mov xchg rolb xchg mov mov xchg testl adc and sbbb jno out iret out int3 sbb push sub sub adc jl ss jle movsb lret pusha call inc xor imul lahf push sbb push cli xchg movsb sbb insl mov (bad) mov inc fwait int adc cmc mov (bad) push fildl xlat hlt xadd lods cltd jp or adc (bad) mov popa sbb pop dec push push mov ror repnz cmpb fs test outsb (bad) shll mov in xor stos test int3 fstps jle jno xor mov and adc push jl pop mov ret jo aam mov xchg fldl clc addl sbb outsl inc call cltd popf sbb dec icebp mov insb or mov test das lds push call mov pushf vmwrite orl mov (bad) mov divb imul jbe (bad) out mulb fs inc and iret imul (bad) test rcrb stc cmpsl cmc (bad) mov and pop jnp push shll mov outsl mov lgs add xchg (bad) (bad) test or or pop cmp enter or push xchg jnp xor and mov sbb xor mov adc push mov sbb outsl cmpsl pop xor sti roll or bound xor lods push movsb lret and cs rcrb mov sub or ds ficoml dec imul mov jmp aas imul mov or insl inc (bad) shrl xchg arpl sbb pushf adc cwtl add and push xchg sbb xchg cmpsl mov int fadds rcll dec sbb lock dec int3 sub cmp leave arpl cmc cmp idivb mov out xchg rolb (bad) lods or jns push or mov jno loop add sub sbb jge int insl xchg jb ficompl xor test test out mov popl inc in xchg (bad) fmuls or adc lahf xor pop loop int jle scas test pop es stos es sbb mov jmp sti or push ret outsb xchg fcomip or mov into jl jae aad or or push mov jno mov or mov jecxz aas cmp lcall jb int ss mov push sbbl les add mov rorl bound and jecxz inc xchg adc dec inc cmc jmp lret mov jl cmpsl mov cmp sbb add andl push rorl fbstp cmpsl mov jmp jge xchg mov aam fdecstp idivb insb in test ds or into int or mov xor rolb pushf (bad) lret rcr (bad) dec sub push sarb cs cmp shll push push mov outsl dec pop (bad) cltd fisubl lcall dec pop cli lds notb jle xchg sti test dec pop pop mov cmp xchg add mov (bad) cs dec mov push ret icebp mov outsb lods lahf mov outsb mov outsl (bad) lcall shr mul xchg out cmp cmp mov ss push lcall add push pusha jns sarl lret movsb and cmp add mov fidiv add jo add out jno stos inc xchg mov es lods jbe jo xchg dec inc sub popa xor dec mov (bad) cmp pop push pop adc or push mov fstpt mov arpl fistl jbe push popf xor test lret faddp lcall pop das cmp js cmp lods mov pusha divl sbb mov frstor sbb popa sti addr16 int3 xor dec pop dec fcomip sub mov mov sti je cld push std icebp rorb jo jno repnz fbstp movzwl jae sub sub bound jge sti add (bad) xor (bad) leave cmpsb sbb add mov out repnz jb imul nop in or inc popf imul outsb ficomp inc sub je aaa sahf mov fisttpl inc cli push scas enter (bad) cmc sbb lcall addr16 repnz es cs ret int pop sbb loop cmp mov mov insb add imul mov push and pop lods or into sarl ds das out mov add mov or aad jae inc pushl ret push rcrl and and orb ss dec sbb pop adc pop sbb in lret xchg mov mov sbb int insl fimull je jl daa loop aad aas push or mov ljmp mov mov inc ret sub bound lods xchg sbb pop in or cmpsl fucomi pop inc js arpl test idivl push negb mov loope cmp aam mov xchg outsl mov push out out jle sub sub mov je movsl inc add jnp out mov je mov or push adc adc xchg mov push sub lcall pop xchg cmpsb mov mov pop pop cmpsl mov adc mov inc aam pop mov mov je and mov sub add mov ljmp jnp sub cmp jmp and add movsl (bad) incl mov inc push popf xchg add push pop mov test pop scas adc pop popa jbe xchg pop das out addr16 inc es cmp cmp cli inc lahf stos adc xor or cmp lahf and push scas sub add cmp inc incl adc jle imul adc gs pop push push mov xor sbb out daa xor bound lods xchg mov xchg rorb repnz push mov into mov sub sbb insb xchg and pop cwtl cwtl fldl push pushf rcll aas repnz cmp (bad) vmovntdq push aas dec pop mov mov cmp pop movsl fild cmp addl cltd les aaa sbb repnz sbb mov shlb popa fsubrs insb xlat or (bad) xor mov sub (bad) mov (bad) test movsl inc cmp inc and mov std mov mov cmp pop pop sub mov lds imul cmpsl fwait sbb movsb inc test arpl lea sti mov fs and (bad) ds or sub test mov (bad) adc (bad) fcoml cmp gs push fs pop cli mov xor and ret and xchg fldcw fdiv lret mov xor jae lret popf cld inc and jae mov iret lock clc in push mov and or cs lret lahf adc push mov packuswb cmc sub and mov xor mov stos push mov cli call adc (bad) pop daa dec je mov in or ja fistl fldl cli inc adc cltd mov rclb sahf aam (bad) mov movsb sbb outsb (bad) jns push dec xchg shrb mov imul xchg arpl pop js int jge pop lods push loope pusha insl (bad) leave xchg pop loop add aad mov (bad) cmp fdivrl cmp fdivrl lcall add jg int3 iret (bad) jne ss add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov aam nop adc or xchg out jbe dec inc dec aaa dec or dec cmp add or mov cli jle out sbb aas icebp pop xlat add adc aad cmp insl loopne repz call xchg dec popa xor ds adc jmp mov or push cltd rcrl imul xchg in mov jp int movsl dec sub or sub popf scas pop fidivrl sbb xlat push jbe mov gs (bad) jge (bad) (bad) repz popf inc mov mov add enter mov fucomi loope jl je xchg frstor adc les (bad) (bad) repz xchg sbb lea sub pop mov cli push das lret lea aad sbb dec cmp (bad) sub repz mov add hlt lret call inc mov ret (bad) push and cmp in jle mov sbb xor sub sbb xor lcall and (bad) icebp sub in jbe addb fdivl test in movsb test nop lock or inc cmp adc (bad) cmpsb leave pop and mov nop shrb mov push sub (bad) js loopne inc repnz push out jae jnp shlb mov push mov leave jmp cld dec inc inc ret xor scas dec mov (bad) fdivrl ds outsb leave jbe scas dec sahf hlt mov (bad) out jnp cmpsb push or std push out fs iret mov sahf sub cs lods loopne and leave shll adc xchg lret add or xchg sub dec push push dec (bad) mov push imul enter inc cltd shll notb xchg jle in js pusha ret nop mov push test stos xchg aas mov ret adc inc int lods cmp dec stc mov xchg and add es xor or je xchg insb rcll repnz xchg aaa data16 or inc jp and imul dec sti cwtl jne andl lock cmp pop inc loope jne mov mov cs push leave (bad) imul jb pushl (bad) fidivl adc jmp in das (bad) aaa ljmp mov aas xchg push sbb cmpsl mov js arpl cmp imul cld sub push (bad) mov out in fdivs jnp jp popa (bad) out scas insl loope pushf iret push movsb arpl push movsb and loopne mov push fidivr xchg xchg icebp rcll add aas sbb loopne mov sub sbb movsb cmp lods sub mov or (bad) push lock (bad) stc sti sub ljmp mov jecxz mov pop cltd gs fidivl cmc enter test das popl (bad) pop push ss push push mov adc jae xchg std and mov pop xor rcl icebp pop pop push in pop dec stos shrl inc cmp jae es subl cmp xchg jl dec or dec jp out movsb mov dec lahf mov insb orl cmc dec xor jbe inc and gs adc xchg push (bad) push sub push pop pop mov or decb mov xchg out fildl inc into lds lods cmc lret and (bad) lret cmc sub enter out (bad) jae loopne dec push or dec dec xchg dec or push pop or sub test cmc or xchg data16 pop jge mov and arpl pop test xor pop popl and adc or pushf xor inc add in cs pop add sbb mov shrl add push es push mov jne mov test pop mov add sbb test xchg mov repnz cs sub mov xchg test (bad) jle sbb scas and ja cli fidiv aaa mov scas jbe or aaa push mov int3 aad fwait xor in inc mov push inc adc inc rcrb ret or aad and lahf mov (bad) mov and in outsl (bad) leave (bad) mov cld dec or add xchg fs test test cmpsb cld sbb sub pop cld loope cmp mov inc sarb pushf sbb jp sbb adc addl stos out pop scas mov sbb cmp loope daa aas andl mov pop fnstsw push std fisttpl imul cwtl stc addr16 push sbb sbb sbb push dec divb (bad) ficomp insl inc fist pop xor sbb addr16 push inc (bad) xor icebp jg,pt les add scas ss std dec shll ljmp mov sub mov mov ret dec fsubl arpl leave mov sub mov push push out movsb sahf cwtl sub fldl fprem1 cmp lahf dec iret inc fwait push rcl icebp aaa rorl enter and ss jg ds call mov repz mov jno mov test lds rorl setp daa cmc leave add sub cld mov test int andl mov jnp,pt popa or xchg nop in popa jbe mov (bad) mull leave pusha xor clc in mov jmp daa cli mov push cmp lcall and mov js mov jmp add sub add sbb mov mov mov mov daa sub xchg or xchg xor mov xchg aad pop (bad) (bad) pushf pop adc out xchg mov or and xor (bad) xchg push xchg setge test enter or inc sahf push sub xor rcl cwtl and pusha inc pop dec aaa fistpl mov out or je lret fdivs mov shrl jmp scas fbstp sbb and push cmpsl aaa or addl push jb lahf scas iret sbbb push or adc xchg jp cmp or sti push bound ljmp out call inc jmp add sub ds daa sti xchg push in cwtl and into fisttpll fcmovnbe js fwait add push jl cmp imul mov mov aaa jae ljmp sub and js xor (bad) lret sahf dec jge sub pop ja ret sub jge push xchg sub pop add icebp cwtl push js push jno or lods cmpsb out push jge cmp pop enter dec cmp rcl repz inc jge sahf xor or or pusha adc call dec sbb psrad inc bound outsb cwtl lods add or mov mov or inc arpl sbb mov divl and shll in stc ja,pn or lret inc push jmp clc sub scas lock add xchg mov fistp pop mov scas hlt push cmp repnz fldcw mov movsb jecxz sbb lret leave ja pop in and cmpsl mov mov mov test pop inc xor fstpl fwait push xchg pmaddwd rep ficom cmpsl xchg into sbb es cmpsl sbb insl cmp dec cs push repnz rcr inc arpl repz add outsl movhps rclb lods js sub lcall adc lods fsubrs sub xchg lea popa test mov add push sub (bad) and call mov lods and jp mov les clc cltd cmp mov push cmc push lret jmp inc movsl in or int3 aaa inc dec push sti es dec arpl xchg cmpsl cmp bound pop enter push jl mov xchg pop sub aad sti outsb mov xchg mov andb call adc jne (bad) xor push jl je pop inc cmpsb push pop inc (bad) push hlt lds xchg pop or mov push hlt into sub repz sbb fstpt cmp loop stc loopne into rcr mov push pop (bad) lods dec xchg fildl mov comiss ja xchg jbe out or popa (bad) sti lods arpl fwait loop add loop mov push mov mov je mov shr aas sub mov sub test outsb add in aas scas xlat sub pop es push cmp mov fisub pop mov nop dec sbb lock xor push sub sub in jmp push in push icebp sbb cmp loopne inc stos pop mov mov sub jmp movsb imul pop lcall aas lods nop or cmp out or xor mov mov jb int3 cmp mov jg roll dec ret push xchg dec pop xor pushf mov jge inc aam mov cmp push insl jg add test mov mov dec stos subl sub in js (bad) (bad) int xor out mov mov jl scas les cmp dec insb cmc fist fist ljmp xor mov dec mov sub cld enter loopne jl push sub dec dec cmc dec fwait stos insl push out xor adc loopne loop sbb into cmc adc inc pop imul scas jg sub pushf fs jbe out je scas movsl iret lds stc sbb mov std adc push xchg movsl or mov xchg xchg iret jmp hlt divl ficoml cwtl imul jae in push pop jns and dec pop ret mov js icebp mov out rcrb rorb pop aad mov fstps add xchg ss subl aad mov sahf xchg dec jge loopne lcall fdivrs xchg rorl mov int xor sbb or imul push repz shll and jb sbb xorb rolb xchg add xor adc pop push imul jge fmuls std lahf adc paddd mov loop ja insl jo inc xchg scas popa jecxz xchg in fdivl stc add jae test stos inc push rolb sub lret (bad) sbb in test push sbb test hlt ljmp mov out xor or ds clc or xor jne sbb inc jbe sbb aad cmpsl scas mov iret mov lods cmp out xchg pop xchg imul lret mov mov test cmp or xchg inc pop mov daa test mov aad add push ret stos pop mov sub adc sub jne int3 pop leave mov (bad) pop data16 mov loop pop xor out dec out sti mov (bad) flds or lret add jno cltd inc sti xor rcrb test mov icebp nop lcall movb mov sarl ret mov push inc mov dec mov rcrl scas xor push push jne dec mov and lret jne pop out xor mov xchg imulb mov aad clc push cmp pop inc add pusha fcmovnbe jmp rcll jmp adc mov fisubr lock popa cmp pop cmp jp aaa pushf hlt jg insl cmc jge push mov repz divl aaa cwtl test inc inc jno (bad) mov (bad) int3 inc (bad) fistpll jp pusha dec lock and xor mov nop dec mov dec ror test add and cmp das int loop sarl xor call cltd pop bound and and dec psubw movsb xor in jb pop and ror adc ret cmp mov inc inc jg daa sbb rorb lds mov iret push repnz test test cltd sti lret push xchg enter xchg xor xor or inc inc xchg enter out xchg or mov jbe cmp ficoml cwtl mov xchg xchg mov push add pop into cmp sbb nop add repnz cmp ficompl push fwait adcl jle outsb jle jbe call push aam addr16 pop xchg (bad) push cwtl pop cs push imul outsb rcrl ja cmpsb nop xchg xorl cmpsb pop pop (bad) mov xor scas (bad) push mov or cs (bad) mov mov scas and inc in mov (bad) lahf enter lret sbb jecxz cli aad add (bad) mov or mov sub pop push ret jae inc mov sub pop int std mov insl shll inc sbb arpl jle sub stc aad in mov outsb push mov outsb xchg sub pop movsb test out clc and inc push dec jg inc or xor aam xchg dec mov cli or or and mov sbb inc fincstp cmp aad imul mov scas lea push cmp mov sar and mov xchg cmp cmpsl es mov out and inc jecxz lea push fs outsl imul imul and lock mov sub in xchg ss inc xor gs fcoms push add xor dec push xchg mov add cld pop cmp jecxz stos ljmp fsts xor ss dec enter push arpl repz or jecxz push out ds push add (bad) mov sub test lds pop cmp jns push out pop lret or sbb sub bsf xor (bad) pop out pop pop add scas subl mov sarb push aas push and mov cmc nop jl adc cmpsb lds jae popa xor lock add sahf push push repnz ss push add jl aas add jg cwtl hlt das add mov fisttp lods dec int3 loopne jns mov cmp sar add dec enter out (bad) pop test mov xor mov insb iret jl outsl in push inc add sbb insl sbb enter xor aad and pop (bad) mov out xor shr xchg das push push push dec mov imul (bad) xor adc out push dec add xor out fisub inc pop jmp jnp xchg xchg pop push ja (bad) outsl cmpsl push xor icebp jle out pop jp sbb clc sbb xchg (bad) fbstp hlt in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz verr jg lds out out sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push adc mov fstl lret sub frstor insb shlb imul out cli fnsave vpsubw out cmp add push clc daa or aam xlat mov js lret push call mov and push ss outsl iret (bad) sbb pop inc xchg test push dec fist cmp and xchg inc dec sub jmp xor bound enter xchg (bad) or cmc movsl adc mov and pop mov jbe xchg outsl or movsl fs bound mov xor xor loop and jg (bad) push xor mov imul fsub in push scas sub add popf lea arpl subb and xchg in es aaa cmp sub (bad) push imul inc jne inc andl int mov mov fcmovnu outsb or lcall fwait dec push mov mov pop and xchg scas dec hlt jno f2xm1 inc mov dec outsb pop mov loopne aad sbb (bad) fimul dec loop sbb mov js xchg and xchg inc push cmp cmc outsb push ficom jle push sbb in pop in pop push pushf add adc dec xor mov or test in adc pushf or (bad) jmp imul ret xchg pop pusha je jmp mov cltd scas sub aam adc in add sub inc (bad) push lods inc repnz jae sbb daa xchg sub cmpsl outsl and sbb mov add je mov aad push add cmpsl imul loop mov jno and dec mov or fwait js dec lcall out pop mov sbb (bad) jge xor in insl xor mov bswap push outsl sub inc aad mov and sbb mov test (bad) insb int mov outsb fs or xchg test cs sbb pop inc movsb add xchg jmp sbb xorl sahf mov lods pop xchg lcall inc repnz push fs add sbbl push outsl inc jo sbb (bad) jbe jo (bad) nop push cmpsl clc mov jb jns push adc cmp mov sub pop add aam xor nopl push andl ret mov test lret xor je cmp iret arpl jecxz in mov or popf test movsl es lods aad mov jae cmp cmpsl or dec lret sbb clc repz sub or push loop and es xchg and pop (bad) cmc mov inc jns dec push int insb roll lods mov xor test test mov fdivs jae outsl sub (bad) adc outsb mov inc pop mov movsl xor cld xchg lock (bad) insl hlt mov test xor out cmpsb pop mov and fwait clc sahf sti mov sti ss mov sub aaa cltd inc and into pushf push lds mov pop rolb and cli flds imul nop jmp mov pop pop jae shrl cmp scas dec lcall inc pop popf mov scas pop (bad) repnz je sub (bad) lock out pop pop cmc xor mov jb outsl add sbb xor cmp (bad) repz mov mov es jnp imul mov and fwait push jmp fwait repz or mov in inc aaa xor scas mov js jns mov inc clc sub pop cs sahf les lret repnz in and add jae,pt pop cltd stos out lahf daa lret dec out mov out (bad) and sbb xchg sub adc call mov pop bound xchg int3 (bad) dec lods arpl outsb (bad) add or movsb rol jbe fcomps clc jno sti repz loop dec cmp addr16 push jg pop push sub bound sub xchg cmpsb rorl fnstenv loopne mov mov pop xchg pushf in mov inc scas ja ret pop les scas sahf fdivl test jl fld sbb sbb jo rcr mov loopne cmp pop clc adc push pop add ror lods jmp nop add jno add aas andl std repnz sub les lock push xchg lea cmc outsl (bad) data16 loopne clc xor xor ret dec mov shrl mov pop insl xor mov sbb in fmull test in rclb les nop (bad) jo xor pop fs daa push xor fdivl fs xchg xchg pop test les jbe add push ja xchg push sbb sub cmp psubw test mov in test popf cmp mov push ja mov or shr jmp test fs (bad) push mov mov xor pop fs mov hlt push ret scas aad pop aad mov ja push adc jb lock push shrl dec std imul mov mov add stc lods mov js lahf mov cmp stc and cli mov ja (bad) mov sub cmc cltd push add push (bad) sbb stc mov popf in test stos aad ror push jne jnp loopne jmpw cmc mov test out mov cmp cmc push mov sbb pop nop sbb lret cmp or inc push sbb mov scas repz sbb insl mov das xchg adc test jecxz xchg sub pusha outsb sbb mov xor xchg pop xchg mov or scas test mov pushf inc mov outsb (bad) or pop lods inc loop mov dec jbe daa mov sti pop js loope fmulp mov ret ret call bound inc mov lret popf push lods inc adc scas add xchg jne dec cmp in cwtl push pop inc sar dec (bad) aam push pop add jl cmp inc outsb add pop jp out lahf popf xchg mov inc mov stos mov repnz in test push push int xchg add mov or push out cmp mov loopne cmp aad push movsl inc inc ds xor adc cmp lds cwtl jg hlt out push hlt xchg rol enter sahf int jl pop pop push (bad) mov int3 add mov les sahf sub rcll enter insb cmp das test orb cmpsl stos or mov mov sub and in jle lds aam int push popa (bad) mov jne in jmp pop aas (bad) dec jbe adc andl std push bound cmpsb cld push bound lret out sbbw xchg push iret push rorb pop ja pop stos push push lea lret cmp xor rorl jne push or mov dec adc jl cli in mov les push jno sub data16 dec mov orl jbe je jne imul (bad) dec js jmp dec or out insb push arpl mov or sbb jmp and push movsb hlt or push ficompl xlat scas pop popf sub setbe mov pop or mov scas mov inc aaa std xchg (bad) enter fld xchg mov stos mov push hlt sub aas push pop stos add fldcw or pop in jg mov icebp jmp mov and mov call pop adc mov xchg mov (bad) in cmp add mov sub nop mov jmp sub pop mov add mov jp inc ror stos dec addr16 enter sbb and repz mov std mov mov inc xlat mov jp imul sysret dec mov mov xlat cli and push mov or call cwtl ds int fsubr aam std push loope sbb sarb add popf pop mov dec repnz loop jbe add movsl pop je push imul mov cmp (bad) neg adc (bad) xchg cmp inc mov cwtl sti pop mov aaa arpl shlb add dec push inc add test adc pusha sbb mov mov pop shl ret cmp xchg jns dec ss repnz or sub jmp inc (bad) xchg loope and aam jmp and lahf leave push fsubl sbb inc xchg jne movsb and stc fsubl imul cmp mov dec repnz mov aad pop sub mov mov cwtl push insb ds cmpb jae mov dec cmpsl inc ret cli or aas ret xor sbb js add dec out mov xor std movsl inc xchg loop xchg pop in sbb jge dec cld (bad) les pop mov sti adc pop push loopne lods push and (bad) pop aaa (bad) pop xchg (bad) in int3 xchg pop lahf inc or in les mov inc cmp stos xchg jno addl cmp inc push or jae int fisub adc ret mov imul fadd pop in cmc flds pop out fldcw movsl push cmp jbe push mov in inc jl dec nop dec pop js or pop mov mov addr16 aad addr16 out test aam leave sbb gs xor add mov cmp movsb xor mov aad mov xor data16 cltd pop fldl xor outsl stos sbb rcrb mov or mov sub mov adc inc pusha xor testb lock test int3 adc fstpt add add clc or outsb push dec icebp stos (bad) sub mov and mov sbb es call insl (bad) dec ret es fnstcw and daa mov leave scas xor nop int3 mov (bad) fiaddl jo sub mov dec (bad) mov jne push das rcrb mov push and push fimull jbe add lret gs or mov and out loope mov lock inc aam in mov pop sbb out aad stc inc das jns push xchg push fwait aad fcomip push jae fcmovb mov and cld mov mov loope mov into test shlb out jmp daa (bad) and shlb leave popa sahf add lock sub movsl das sub pop sub sbb sti movsl and jl rorb pop and (bad) sbb mov pop out sub and mov imul pop mov or push popf loopne mov inc in pop pop adc imul movsl push hlt popf ret cld dec cmp cmp sahf inc std jne sub inc pop insl movsl mov sub nop pop fiadd cmp (bad) mov leave rorb into iret cwtl imull scas mov enter stc and std push ffree pop xchg inc fs cmp leave inc mov cmp fcoms sbb and in xor jo mov nop in scas push inc pop xchg cli mov cwtl scas ret rolb inc (bad) not call test mov sahf mov mov idivl inc mov aad mov icebp (bad) dec (bad) in cli je mov inc dec rorb lea xlat or mov dec sub sub ss mov aam mov jge hlt mov sahf lahf cmp sub xchg imul (bad) xor sub xor xchg scas pop enter out stc rorl pop cmp cmpl cmc dec cmp pushf outsb pushf in (bad) repz stos sub or push movb ss and xlat iret pop lcall pop ja mov inc pop call cmp call push enter sar in rol jnp push mov and daa pop arpl addr16 mov gs xor jae mov jp lret ljmp inc pusha repnz les movsb decl repz loop dec pop dec jmpw js cmp inc sahf pop out jmp andb std lea addr16 mov dec add dec pushf repnz pop mov mov dec xorl (bad) push fidivr pop inc lret lods lea cmp cmp mov test lods insb pushf enter push sbb and adc ss in inc mov xchg jns cmp fwait movsb and ja movsb mov mov add adc jno mov das ss adc or test and pop and je xchg and sub lea fstl xchg loopne pop out pop mov outsl into gs add mov mov or sbb je push pop repz loopne mov jae adc push jb pop addr16 daa add push insl call rolb xor mov add iret addr16 aas (bad) repnz cmp movsb loop clc add insl pop pop add cmc inc sbb popfw sub mov jae test mov sub stc mov jmp mov mov and popf lret cmp jne jg push in xchg (bad) and stc in test imul push out jle pop les sub mov repnz shrb sti cmp xchg (bad) cltd not stos push rorl push mov ret push popa movsl fsubs jo cmp adc mov jne or mov leave gs je inc xor in fbstp fcmovu adc nop js pop in gs outsb mov dec loopne fidiv add mov lock push (bad) ja jne imul in test dec imul (bad) lds inc js pop lock pop (bad) mov jl clc cmc mov shll xchg loop popf fiaddl cmpsb repnz (bad) nop aam cwtl jp loope cmp enter xchg add lea jns out movsb std jno and dec jge gs pop popa mov xor add leave or inc cmp pop loope into mov add xor mov push test push enter dec (bad) add mov mov lock arpl nop push add (bad) pushl cmp xchg daa dec sahf cmp repnz xchg daa dec sahf cmp incl add (bad) pop fcompl es add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb andl ja aam sarl ljmp cmp sbb sbb lcall idivl jg out xlat jecxz add dec push add hlt or sub dec sbb inc shl sub mov rcll sub das lods or push and pusha jb cmpsb mov lock daa add (bad) and fimul movsb jmp sub add inc add negb xchg lds clc add push jmp out imul rclb in xchg jbe out xchg jne and std ret xchg dec jno pop cld inc leave bound jbe mov push mov xlat mov nop movsb out push pushf test adc xchg dec jnp xchg bound jl jns xchg shrb (bad) sub sar inc les add xchg loope mov push jmp data16 popa mov cmp mov cmp arpl enter cld inc xchg xlat outsb jg (bad) lock pushf hlt jae gs test sub cld loopne,pt rcll rcr pop lret rcll xchg xor outsl sahf lock jl adc dec mov es ljmp addr16 push mov jle incb rolb dec pusha pushf imul stos mov add ret sub adc aam daa loop aam pop dec (bad) decb push sbb sub xlat cs mov ss lcall scas sbb lret dec cmpsl push push pop mov mov pop jge std es pmulhw out lea test scas rcrb or mov xor jl js stos js sbb out pop cmp loopne out imul mov (bad) pop dec ror sbb push xchg hlt push or mov jle pop add adc jno xchg xchg adc aaa mov repz roll flds add loopne movsb mov int3 popf mov loop out jo mov jge sub or mov cmp sub push xor and add pop lret push inc fadds cwtl mov insb adc cmpsb (bad) lock xchg in (bad) outsl gs push ds dec sahf imul dec xor xchg push scas and dec hlt sub sub dec or mov fldl inc or aam (bad) ficomp aas lea outsl xchg sub cld addr16 (bad) dec int3 (bad) sbb dec stos fnstenv dec mov lods sbb pushf jae rcr rorl xor aaa je add push pop test sub insb clc ret (bad) in pop fwait call lret and sbb sub ds (bad) rcl xor inc mov jge mov sti faddl enter (bad) push sub call jns das lret in movb xchg aad out mov mov xorb push adc cli popa (bad) jmp lret out scas add pushf lret jns mov cld adc push hlt out mov mov les push jno mov jbe in jns imul cmpsb scas cmp sbb mov sub mov in and adc jbe xchg call (bad) (bad) stos nop add fistp fidiv into call (bad) dec mov jmp jecxz mov fsubr in imul sub mov loopne sub into fldenv mov sbb cli lods jne negb out (bad) stc mov jo mov xchg les ret js pop ret jecxz push pop (bad) push mov ficomp lret inc push ds pop pop icebp in push fcmovnb dec fmull rcr adc rclb sbb (bad) inc jp mov pop pop sub pop push (bad) lods fisttp jge mov push test add lds push xor and dec mull repnz xchg pushw sub xchg push icebp int jp insl cmpl lods add popa (bad) xor loop fisubrl lods (bad) push cld hlt xor push jae test push add repz std pop (bad) jmp in and sti test in push popa je test pusha mov subb mov scas xchg add aas outsb xchg jb dec in loopne mov fldcw mov stos dec fisubrl imul xchg dec jbe stc es xor jl or fisub test cli aad xchg cltd mov add stos mov or lret scas adc pop incl xor push dec cmp mov sub int3 xor add inc jle rorl mov adc mov adc inc jmp mov je das mov sub cwtl xor cmpl dec jg mov mov leave cmp push push pushf cmp fxch and mov ds lods repnz or xchg inc cmp lret or ret mov fisubr notl pop add addr16 jb out jae test mov lret dec xchg mov mov push adc (bad) movsb imul idivl scas cmpsb aaa jns outsb sbb inc mov ret jae loopne dec sub cmp mov and iret cmp inc cmpsl lock lcall jmp mov sub addr16 mov lods jns test mov in jno jae lret in insl fwait aas push cmp sti pop sbbb fs cmpsb mov mov (bad) adc cmc ja jg adc lods xor (bad) rol push sub or push out push mov aad hlt mov lds in xchg mov not xchg xchg push add mov push sub or pop cmp jle lods in scas ljmp (bad) test das sub mov imul (bad) imul rcrl divb stc mov sub mov pusha sbb out mov add ja cmp cmp pop jns push lahf ror das fisub xor cli fisubr mov mov pusha negb idivb mov and or stos add push jno jg aas data16 icebp js mov insl arpl push mov ja pop push sub in lods sub mov pop jae sbb xchg sub test int lcall in sahf mov (bad) int3 stos jae shl sub mov addr16 enter loopne mov xchg pop mov lahf pop push and loopne push push mov in sbb (bad) xlat cmp add imul leave cltd arpl add sub cmp xor repnz mov sub sub cmp (bad) lcall xor les dec or test out fistl (bad) push (bad) in and sbb mov imul js ss mov jmp xor rorb rcll cmpsl cmpl call xchg mov int3 xor js lcall mov cld cwtl push test or test jg adc fnstenv dec fwait or xchg out xchg stc cmp push xchg sub addr16 outsb or lret jg inc shrl insl inc (bad) or pop clc push mov int jle ds repz shll test out loopne out out out scas lahf mov sub xor dec jecxz mov sub insb sub iret sub pop jns mov clc mov mov imul out (bad) pop sarb cmovle cmp in and outsb push rclb jmp jne xchg sahf mov lea fisubrl xchg xchg push inc pop (bad) mov loopne or enter inc or pop fs mov xor fstpt pushf mov in mov ljmp popa in out fdivrs call call xchg xchg (bad) gs mov jg mov popf add pop (bad) aaa inc aam add pusha mov sub (bad) cmpsl repnz jg and in andb stos jb stos fldl adc inc mov orb mov mov cmp (bad) outsb and xlat outsb movsb popa mov (bad) icebp add mov pop or push fimul (bad) std hlt push dec leave cltd hlt inc (bad) ljmp lea and out sbb mov fwait iret (bad) sbbb into lret icebp inc subl aad cmp imul inc cmp out sahf pop in lods and je (bad) or loope (bad) rolb arpl (bad) hlt push ftst mul push mov push push outsb call mov js (bad) (bad) jp and clc lcall jo push cmpsl add push cmp pop loope jecxz cli std scas (bad) jmp imul les sub in rclb sbb (bad) mov hlt add stc test popl test mov cmc dec (bad) dec mov push xor daa inc mov (bad) mov inc ja pop into movsl int popa outsb xchg push sbb scas add mov decb jecxz mov cs or add fisub stos iret adc mov fucomp inc call imul ljmp stos sub cmp lods cmp pushf and inc loop ficom jns push inc loope ja sti es dec or and inc sbb scas fnstenv cmp dec push or ret ljmp xchg add iret add loop icebp push insl lahf test push test mov jge add sub xchg mov aaa pop test xchg aaa adc xor and cld mov add (bad) lret inc repnz jns dec cld loope and loop cwtl pop inc shlb pop mov adc and dec mov scas aad leave lcall insl je pushf mov or aam jo xchg cmp (bad) mov cmc stos mov jnp mov inc xor mov mov or mov lock jnp sub sbb sbb pop sbb adc lea jnp (bad) stc add addl fisubl and mov sub iret mov cmp movsb addr16 cli jge inc jns pop mov or mov jg xchg std call mov iret loope and jecxz ds mov test shlb mov sub bound cmp (bad) stc ljmp jl mov adc adc fcmovnu dec fisubrl pushf neg cmp pop std pop dec pushf jl add cmp in popa outsb out lret dec in and cs dec pop fchs push dec aad mov inc mov xor cmp sti ljmp mov xor fdivr (bad) mov mov in cmp addr16 sti outsl inc mov fs loop jne inc pop sbb lock pop int fnstsw sub xchg jecxz (bad) mov cwtl fisubr push fcomps push sub pop or lods aaa test es jmp dec arpl lret mov sub outsb ljmp lahf imul ret sbb (bad) lret scas sbb mov aad fnsave lea jl sbb sbb jns cld jmp pop ficoml addr16 aad cmp jmp (bad) aaa dec add adc dec lods xchg mov mov push movsb call arpl sbb fcompl fwait rcl mov out out sbb call (bad) add push dec rorb mov mov stc push (bad) vmovntps aad xchg fsubs inc js ds fldl incb dec test out in nop fs adc pop push and mov mov add or iret push or jbe cmp rcrb fildll dec add cmp (bad) iret (bad) in lods sarl (bad) mov add bound jp decb cmpsl mov sti dec sbb push data16 cli sub mov sbb nop add jle incb lret test push movsl xor cmp sbb inc notb adc jmp jns mov sbb leave std (bad) mov xchg push fidivrl push and scas sub lds in jle lea cmpsl sub enter xchg mov push jmp push scas movsb test aaa add sub aaa cmp jnp es jmp inc pop xchg push std lahf iret push in inc popf xlat movsl sbb or cli test in or cmp fiadd shrl push cld and inc (bad) push hlt cli stc pushf dec popa or dec loop xor icebp negb cmpsb adc xor nop mov (bad) aaa mov in popa adc or push mov sub jge ja addl popa insb icebp (bad) pop aam jbe cmp push jge dec mov in test (bad) jae je imulb sub jl adc sub xor cmpsl cmp push pusha outsb or jg test imul inc and jno,pn or out fistpl inc mov dec push and pop jne jecxz dec jmp jnp pop xchg (bad) xchg mov dec mov gs mov pop pop adc sti sbb repnz inc mov lea negb mov dec and fimul pop jbe cwtl ja add aad and push sub and je pop inc insb ret ss cmpsl mov imul lcall fbld and mov in scas enter jb test or fsubrs xor sahf fsts cmp jecxz imul cs sub push xchg sub outsb push cmovno jecxz or lret dec xchg js mov loope jae cmpsl jge or push cltd jno jmp pop mov negl xor inc cmp add xchg push andl mov cmp and mov aam (bad) jecxz insb inc int add mov and cmp push inc mov lahf jae popa clc lock rclb std fmul sbb (bad) (bad) gs mov fwait and xchg andl sbb out imul pop fbld jle xchg mov xchg sbb mov repz jp jmp mov sub lahf aas jb mov outsl push cmpsl sahf enter jae in mov test mov adc mov ret sahf jbe scas dec push cmp (bad) xchg fmuls jecxz fwait clc jl xlat out xor sub out or test hlt cs (bad) in test orb mov js loopne addl push cmp lock addl jg add add fs ficompl push add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add enter add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop xchg or jmp (bad) je dec mov or sbb dec jmp movsl sub and inc push jae jae (bad) loope adc fistpll rcl loopne jno push jg xor dec insb xor mov or clc ret xchg shll cmp cmp ret stos mov cmp aam idiv jae mov xchg inc test hlt push adc mov cmpsl lock aam cs in mov sub xlat popf repz push roll push cmp adc mov lods push jbe jns jge jnp es (bad) dec hlt push dec adc int outsb js adc mov js cmp mov xlat jno sub cmp mov rorb add add xchg loop icebp ja cltd lock sbb jmp sub mov (bad) popa fwait inc dec adc or adc xchg clc cwtl or mov sub mov shrd add cwtl xchg push or mull xchg rcll inc jge push jbe and out stc jne mov push not stos add adc inc mov bound (bad) iret dec in sahf adc enter fnop add fstpt xchg mov and mov pop push push mov loop (bad) push mov (bad) cmp xchg mov popa xor dec and adc bound xor (bad) dec inc pop insl adc mov outsl or es xor ja rolb xchg dec pop fnsave fisttpll xchg test inc adc or push mov pop pop add jae and cmc adc mov imul insl not xchg jno lea xlat dec lock roll lret sbb jno sbb ljmp inc dec mov mov push in pop xchg pop jne jge icebp and mov jno jge mov ret dec adcl jo aas sub mov sbb xor inc and xchg movsb es dec or ret out pop mov pop pop push hlt mov loope mov push aam inc pop jo mov insl aad les add mov dec inc adc and mov cmp arpl dec xchg sub xchg je push fwait push pop stos lret xor imul jnp js xor jg aam dec cmp jns mov (bad) mov cltd dec jmp cs adc sub sub mov loope clc lcall inc mov (bad) xor mov xchg xchg lock insb jb add push push aam mov and pop dec mov je fidivl jg lcall insb adc push sub dec push dec sub leave bound cs fmull arpl add mov loopne into pop mov (bad) (bad) mov and lea mov nopl nop imul sahf cmc test rorb stos movb bound fld lods fstps decl cmpsl inc test (bad) inc push nop out scas push jne mov and xchg jecxz fdiv jno mov xor jnp jae ja cmp (bad) das and sti cmpsl call mov sbbb fistpll mov cld maskmovq (bad) or mov iret xchg (bad) rorb cmp js lods int repz jb dec mov pushf sub sub add clc scas sarl roll or sahf imul mov push sbb mov fdivrl out xchg or and rorl (bad) testl xchg mov xchg dec push sbb cmp inc inc gs dec into stc xchg daa sub (bad) pop fsubrs jecxz inc add pop sbb (bad) inc push loope test popa pop push cmp clc vmovd mov mov negb lods push jno push mov iret cmc xchg xlat outsb std shr push inc rclb and add lock scas pop inc clc sbb pop lret dec jae and das aaa inc push mov in jo jnp sahf nop adc int sub mov (bad) mov std push ljmp inc je lret jno adc mov dec or jo inc call fs lret pop jp repz add mov and cmp xlat mov sahf push mov pusha mov gs inc sar data16 mov inc or shr movsl mov out push test add leave inc push pop (bad) xlat and les ret dec sub jb xor dec es insb inc mov mov jo enter mov jg lods sbbl ds nop inc lahf push cmc pop mov push test (bad) arpl pop das dec stc mov insl lods cmp xor das mov loope fisttp pop push (bad) lret or xor sub pop dec insb push cli ja test (bad) stos jmp xorl pop clc sub or jb adc jno mov (bad) loope stc cmpsb fstpt mov jmp (bad) cli stos pushf sbb xor mov call sub mov mov push xor sub (bad) les loop (bad) sub push jle push push inc popf jbe jae cmp fiadd dec pop sbb sub (bad) mull xchg push leave sahf add clc sbb std cmp in pop jb push sbb mov fcomi sbb gs repz cs in loop or or dec inc pop icebp or inc shl inc mov mov ret xchg xorl leave loop mov push inc pop outsb xchg call xor mov lahf in in add out ljmp inc lock iret imul jl add gs jne lret insb repz loop mov xchg cmpsl pop push out xchg stc pushf insl pop mov stc inc inc jno adc and cmpl xlat cmp mov jecxz (bad) xor mov dec or popf xor add lahf mov xchg dec iret push cs pop stos sub rcr ljmp insl rorb mov in cld xchg stc cmp loopne and (bad) dec add push pop and dec in imul jmp flds in mov cmp mov (bad) jae push push into sarb je wrmsr xchg lds repnz push (bad) fisubr jmp pushf cmpsl imul scas movsb out or pop jmp jecxz push or xchg dec or sbb jmp mov adc shrl aas push daa cld out xor inc insl fdivr cmp aaa mov or cmpsl inc idivl cmpsl sarl call sub inc and push imull xchg jge (bad) mov xchg rclb lret js mov inc (bad) sub clc (bad) icebp mov js lret jno inc outsb fdivrs cmp and mov mov imul mov xchg xchg adc jecxz lea pop stos adc gs sbb add add lods repz pop lds jmp lods iret or sub lret push mov jmp aas data16 (bad) xchg call nop mov into cmp mov int3 xor pop cwtl lods bound jbe push sub int3 mov cli icebp ret mov sarl je das inc add fcmovb or fs xor shrl xchg js or or cmp dec push pushf add cmp mov pushf pop xchg loopne sub imul mov (bad) and xor cmc xor xchg scas dec pop add push out and fldcw cmc shlb mov inc mov loope adc test pop xor repz in cmp insb cs out std cmp dec or jecxz nop fstl dec mov and hlt loop mov mov leave into and mov push aas jo mov hlt add lea push enter daa stos mov dec push pop jae out fisubrl enter pop icebp xchg ret jge das ret iret les cmp mov jg loop clc dec push loopne movsw jp loope hlt cmp scas (bad) arpl into mov xchg push cmp mov inc in out lea popa mov and mov inc mov fs jo mov xchg out mov or cltd call lret jae pop add mov popl xor imul jp mov xor push mov fcmovbe mov inc scas xor (bad) repnz iret add ja das hlt and cmp xchg or mov nop lret repz decb movsl (bad) hlt pop and dec and pop sbb lock mov fisttp dec insb push xchg cmp das js adc (bad) out mov and jne es add cmp roll mov mov fs (bad) pop iret pop sbb push xor (bad) jg jle mov fwait dec push jne mov mov jae out jne cld push jns sub scas int mov cmpsb mov (bad) lock jge mov (bad) out lods mov mov xchg into popf ret adc rolb cld push pop pop out sub leave mov icebp in mov jg pop push mov jg sub inc mov jne jge int fsts es movsb xchg enter adc fidivr cmp popa ss jp mov mov mov cmp int hlt sbb addr16 (bad) (bad) mov lret inc dec push add lds xor xor jecxz rorl mov std add cld jp push rcrl (bad) sub stos fdivr add jns mov mov or ljmp jmp adc xchg loopne lds in or ja pop jb mov stos gs movsb imul stos fwait clc add popf loope pop adc ja in and and adc jbe dec adc gs sub and add lods or push sub ret call jmp cli js xchg xchg mov sarl pop pop pusha cwtl nop inc jge aas jno push mov pop (bad) xlat (bad) xlat xor and sbb add inc (bad) into ror ja adcl imul sbb xchg or jnp mov or lods in iret sbb push xor lods add mov jle test xor das pushf out nop loope mov les dec int xchg fldt pop cmp cmp inc imul outsb shll das cltd sarb jo lods lods adc loopne (bad) push imul cmc xchg (bad) jge (bad) xor mov imul xchg loop pop mov mov fistpll mov dec insb fwait outsl mov loope lock mov test xchg mov push frstpm(287 js arpl int3 ficompl outsl mov adc push jle sub bound lods fist cmp leave stc repz ja loopne dec (bad) ss or push xor sahf push out fild pop adc jge in dec jl lods push cmp or lret (bad) mov xor cmpsl jno push ret mov jo rcll sti lock sbb repnz add popf sbb sahf outsl std imul shrl (bad) inc mov ret into xchg or push (bad) xor fisttp aaa sbb jb stos mov je arpl (bad) adc push pop fdivrs scas insb jne sub outsb adcb shlb mov or mov int3 cmp or jns mov sbb in cld fsubl jg clc xchg pushf int push int3 inc aas add add (bad) lods es fwait push dec cmp popa or (bad) xchg mov aad jmp mov cmp out sar mov jmp sub mov mov movsl cs inc push add adc pminub ds mov mov rorb leave lods out dec or xchg and (bad) arpl and sub ss dec pusha nop (bad) idivl sub gs leave push jmp sarb xchg jp aad cmpsb aad movsb sbb xchg cmp scas sbb fsubp call std mov sub pop jmp aas mov fstpl aas int3 das adc mov sbb daa (bad) mov subl hlt popa mov dec test inc add ds aaa cmp and daa popf repnz clc fcoml inc cmpl outsb loopne sti sub aad mov fs add in popa outsb add call and into lahf mov repnz clc test sbb ja pop arpl (bad) cmpsb movsb out xchg aad mov mov adcl pusha xor lret xchg sbb dec je std jecxz into leave not sub imul add and add or jl dec xchg in mov nop cld icebp sub cmp movswl or cmpsb dec add xlat mov jp or jno hlt mov sub jae lds insl lods and insb cltd mov xor loope lahf out push or shll pop pop nop jecxz test push popa cwtl hlt (bad) mov int3 jnp push dec (bad) cli dec inc pushf jg push jns out xor movsb lea adc aaa xchg mov dec mov dec add inc rcll add sub mov test dec inc lods push dec push arpl mov cltd pushf adc mov out pusha cmp les inc push pop mov fcomip pop inc add lcall mov inc jmp fisubrl jp (bad) mov inc pop pop xor in sbb and mov push (bad) icebp data16 ror ljmp adc push daa mov in imul lcall stc lods fdivp and into mov and inc push pop popf int xor or sub and into inc dec inc cmp jmp xchg xchg in out dec sbb test mov push clc jns add add mov inc ret insl inc jae aad scas pop call jno fildll push out pop xor mov jb ljmp sub xchg les pop push (bad) into lods int3 adc aad xchg push movsb enter sub jecxz xor pop add outsl push stos es mov out sub arpl dec jbe repnz inc popa ret xchg cmpsb arpl je fisubl cmpsb stos inc leave hlt pushl icebp inc mov fsub jmp addb xchg cmp mov jp call push std incl add add (bad) addr16 add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lahf adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb andl mov cwtl loope shll jno ja je (bad) xor repnz cli call into cmpsb mov idiv pmovmskb lahf js fisubr xor loopne cwtl into jmp outsl (bad) je add pop cld xchg test push outsb bound enter mov jne jo or test (bad) or cmp ds sti stc clc push incl lods out sub push ja sbbl xor loopne stc xchg xchg xlat adc mov lahf cmp cmp movsl scas outsb cli rcl rol cmp dec pushl hlt push movhps (bad) stos hlt insl clc mov pusha ror (bad) sub jmp xchg xchg (bad) std and push fsubl in lahf mov push jecxz cmpb inc mov imul mov push dec lock jns xchg fldcw dec xchg fs ret enter cmp cmpsb lret pop gs cmp mov add pop mov xchg rorl and xchg xor stos mov cmp clc sbb push mov jge sar rcll (bad) or ret pop xchg into pop dec out mov hlt push shll pop out fild icebp mov test lahf outsl jecxz mov fimull popa jns leave sahf sbb lcall lret imul pushf xor xor sbb jmp and cltd daa mov stos movsb xchg sahf dec testl xor pop push pop push call xor arpl inc loopne mov ljmp js cmc pop jae outsl or test jmp adc (bad) jp inc ret add sub inc mov or xchg or pop cli inc cltd push mov scas leave mov das mov mov int3 inc cs mov psraw dec pop (bad) pop xchg ror or push rorl add cmc push push mov lret lds movsl mov (bad) stos cmc mov pop clc cmp mov or or not cmp sub inc xor push dec pop mov xchg pusha jg pop pop pop jecxz dec das lock inc and dec jo fwait add mov mov push adc push in mov dec dec push loope into sti jne fsts sub or cmpl push mov mov add inc xor mov pop mov cmp lods decl call cmc xor push or dec addr16 cmp in push jbe fstps into mov jne mov xchg cmp adc aad add (bad) cmc sbb scas rcll sub jge lods std pop sub mov mov ret les leave popf cltd add xor jns pop cld fs or push hlt out jmp (bad) adc jb scas xchg mov lret cld mov mov in (bad) xor lods dec ret rorl mov inc or fldcw test push dec xor dec inc sbb btc mov pop push (bad) aad iret pop out pusha sti pop scas cmpsl leave lods mov test inc dec stc jb pop xchg iret bswap mov mov adc stos call mov adc push dec cmpsb outsl insl mov in or mov mov pop dec in mul pop inc lret jnp clc in mov cmc xchg stos cmp aaa add dec movsb push push or out pop jle nop leave cmc int cwtl (bad) into lods mov push mov sbb (bad) add jmp pop arpl lods cmpsl adc je or push loopne jecxz stc insl cmp (bad) jo xor xor leave and enter fsubs enter testl cltd cwtl mov jns daa loopne xor jge aas dec jecxz lahf sub stos xor add adc mov adc mov call pop or bound into ja loope cli inc push pop jecxz mov imul cltd mov sub (bad) push mov (bad) dec neg dec nop outsl call lock sub pop shl cmc mov cbtw mov repz and sti in nop pop inc or jnp adc or inc pop fs fisubrl mov sbb inc ss ss loope sub out gs in lock jno cmpps fnstenv mov push mov jo xchg jp pop xor jo stos in jo fs test cmp mov mov stc jo cmpsl aaa fwait out xchg int3 iret loop inc insb in jl lcall inc data16 jp dec je lds add sbb or sar mov outsl arpl jbe icebp fadd or cli sbb xchg or push mov pop andl cwtl jno aam sbb repz push pop jo push cmpsb mov aad add pop mov and adc (bad) jle and mov divl adc and inc mov cmp fwait inc mov test scas xor xor dec mov lods push cmp ja cld test movsb cmp lock dec stc xor inc out xchg popa or and pusha mov popf into mov in mov push push aaa popa (bad) dec xchg scas lds dec cli dec xchg and movsb sbb loopne and stos clc sbb nop mov add push and jb fnstsw jp movsl jb (bad) jle lcall cmc push ljmp leave pop sub inc outsb cltd mov xor xor movsb repnz lahf mov repz xor (bad) jns xor (bad) outsl std (bad) cmpsl dec mov adc push das lock popl or jno mov dec mov xchg or fs add faddp sub imul push call sbb xchg xchg mov xchg (bad) inc mull fs inc (bad) (bad) mov das sti xor rcrl je ret loope xor (bad) sub ds aad inc jmp subl sbb push repnz test mov add mov idivb into xchg sbb ret push or int sbb aaa imull cwtl pop pop (bad) push (bad) push pop lcall xor test stos xor rcll aam or loopne xor add xchg imul jmp xor aad mov cmp pushf test mov and into clc stos adc mov push xchg mov jle push xor push adc mov xchg mov pop lds push jle push (bad) aam in xor inc pop inc fbld jmp xor fldcw jmp push mov inc cmpl fldl jecxz hlt push jae in (bad) imul pop or fdivl fidiv mul push mov std mov and popf push dec dec loope pushf add pop mov sub pushf lcall and out xor test outsb jnp xlat sub das jg ss mov push daa into lret out pop sbb mov adc jns mov ja mov aas out test pop arpl mov mov push jl arpl out ret cmpsb ret xor mov sub jae xchg test push or xchg add push jp dec scas jl push popl xchg mov out fistp (bad) cmp jbe in je adc negb jge adc aaa mov push mov pop add ds in fsts stos inc aam inc cmpsb adc xchg (bad) cltd jns and jmp call das sti dec int iret cltd orb lock aam iret jge dec int3 lods fstp (bad) sub (bad) mov jmp imul hlt jno pushf lcall jl mov je outsl test imul jg mov sbb xchg xor mov mov mov stos cmp pop cmc pop outsl fs jae vandnps aam (bad) rcl (bad) mov sub sub push cmp je pusha or rorl test push and mov pop push mov cltd adc mov xchg pop fidivl test xchg imulb addl clc imul mov add in jle xor cmp adc dec mov inc ret rclb and ret lahf int3 pushf pop cmp jne bound pop xchg dec xlat sub mov inc inc lods sbb xorb or push pop clc cmp jecxz dec ret rorb div pop jae xchg mov cmpsb mov push mulb mov stc stc sbb push int3 clc rolb loope and das push inc out inc adc rcll imul jmp lahf mov cmp es stos xlat mov xorl aas xor push repnz repnz sar imul xchg addr16 xor stc lea scas out out fs (bad) mov jo leave push fnstcw jae in call aad clc ljmp adc mov arpl push mov sbb cmp (bad) pop pop gs out pop jl cmp sub mov xor lahf cmp icebp jns test dec cmp sbb rcrl leave dec push js lock insl and xchg shrb mov pop (bad) xor cmp sbb dec xor mov push inc (bad) or repz dec ljmp mov outsl and inc add jp call enter iret ret xor lret imul cwtl pop sbb jae xlat (bad) xchg inc dec sbb sbb inc dec mov (bad) fcomp push pop push lds fist cwtl dec adc movsb xor adc popf pop outsb (bad) out mov inc or cmp dec sub xor call jge call out leave xchg add in pop pop pop dec mov mov sub mov xchg pop ss jnp jge mov and dec jae (bad) adc addl adc scas xlat popa nop pop repz mov out lds or (bad) cmpsb cltd jns add add (bad) adc jae rorb sbb ret imul push cmpsb and (bad) jle cmpsl lds mov or or sahf out (bad) sbb dec test sub cmp es scas mov dec out sub shlb lret (bad) movsl xlat push in dec sub insl (bad) mov daa add sub mov ja mov insb lea cmpsl inc pop out bound adc sbb mov hlt movsb cs pop add push int mov lret push repnz pop shrl std inc cli inc (bad) xchg les cwtl xchg mov mov mov fcomps fbstp int3 and lea rcrb dec add sbb cmp jge pop cltd aam cwtl cmp pop dec outsb sbb dec sbb mov repnz out add int3 jmp adc jo pop pop sbb mov mov jns xor in roll dec cli mov in out inc rol jns push inc fsubrl pop jbe lret pop repz int3 push cmp mov dec ret int pop fiaddl (bad) aaa lds lods int3 mov dec pop mov das pushf or arpl dec or jmp in hlt jb mov dec mov mov das dec es xchg mov xchg inc sbb dec movsl scas (bad) es sahf push push cmp jae shlb mov add mov sbb sub hlt mov repz xor in lret mov xor enter loope and les and clc mov or mov xor aam mov (bad) iret scas push rclb cmp int ret and sahf xchg pop cmpsl mov icebp imul das xchg cmpl mov loop cmovno (bad) jb jg jns das push add scas ss leavew jo lret adc insl mov rorw or jb mov (bad) pop xchg xchg mov add cmp ljmp inc lret jg lods aad push (bad) loopne mov mov jg cmp adc popa scas jg loope adc aas leave jge sub sbb pop mov cmpsl mov and lds pop dec fildl sbb adc mov mov test shlb jns xor push loop fistp mov (bad) mov repz stc je jae jnp cmp mov fldt mov jmp sub mov lock out push mov scas xor bndstx out pushf cmp mov add and sub sbb stos dec ss jl push out les add hlt mov jmp gs lea sub xchg pop push mov cmc and fnstcw adc out repz jl cltd ret mov out inc adc cmp fwait inc out push push aad mov fcomip es cmpsb lds out div enter test sub dec sbb jnp scas scas pop add sub sub cmp sahf std dec adc lret test sar sbb push scas inc pop inc push or ljmp jecxz xchg std cmp dec push test xchg jne (bad) fistp in add xlat ss popl cmp pop in mov mov (bad) mov or dec fcmovb ja sti jae dec lods cmpsl cmp iret adc call mov jmp xchg les mov sbb adc mov (bad) xor stos xchg sbb jmp stc pushf test jp sahf (bad) cmpsl sbb and ss ret es lahf sti iret es pop pop cmpsb cli cs scas fadd and pop lret lods mov nop popa jns sub sbb popa sbb adc in cli je stos xor adc outsb mov xlat mov jb xor xlat add mov shrl and je push je repz (bad) repnz dec inc stos sbb pop arpl lret add pop mov movsl jmp enter or mov dec sub in jo jle mov lods ja (bad) inc dec inc xor mov xor mov jp call push cmp mov add add stc out data16 in add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add push adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc dec inc inc push push pop adc and mov or and frstor xor (bad) xor pop inc nop sbb sub adc jmp lea jnp (bad) out dec jl iret add add cmpsb jo je rol inc cwtl sahf (bad) mov (bad) pop enter and into cmp movsb into lods mov leave push jae mov dec jnp dec in jge adc enter or rcrb xchg lahf jle xchg sahf mov stos cmp jle sbb lods daa sbb shlb jl cmp jns movsl loopne lods (bad) sub add dec dec test inc cmpsb sub xchg push sub movb cli push xor decb icebp and adc scas mov lcall xchg clc add into aaa mov jnp fcoms aad push pop and jbe xor lret push stc (bad) fild hlt mov ret push lahf stos add lahf imul xor clc push fldcw mov nop push and push cwtl mov jmp mov (bad) jge loopne fstl lret mov jb scas sbb mov push fldenv jle xchg cmp outsl xchg xor aaa mov ret mov pop push test xor push popa cltd out ljmp shrl jo and aad push sahf dec pop inc push and fwait adc jecxz pop inc fisttpl push loope sar or sub pop lock repz dec dec jl jbe mov (bad) ret fiaddl dec inc dec jge sub push add jnp xchg data16 mov push shr sbb mov mov out xchg and mov adc int3 jae cli mov cmp push cltd sub lods jmp sti jnp xchg nop cmp dec in push adc cmp sahf cmp aaa cmp (bad) mov enter jge pop xchg bound test loop sub loope sbbl pop sub pop sbb or push push sub add add push iret vpsrad in push dec cmp xor data16 cmpsb xchg or js cltd ja dec imul pop pop scas mov or fadds fistpl jg xchg jmp stos dec jnp cs out and nop push aas adc inc adc out in es mov sti cmp mov sbb shrb jno mov aad test or push mov popf (bad) xor mulb lock in (bad) movsb jmp cs pushf push adcl sbb stos je lret js push add call cli arpl xor in cmc and sbb ret inc jecxz xor mov ret xor mov (bad) pop push cltd mov aaa addb (bad) les aaa andl aam dec sbb sbb in push mov icebp or in sub jne ljmp icebp cwtl dec js pusha mov lahf jge out dec dec (bad) std imul or mov stos (bad) mov fbstp das or insb sub shr jo cli push out push (bad) aaa je xchg mov push cmpsl jne mov roll outsb push sub call mov mov cs sub xchg outsl xorl nop adc or pusha pushf add pop in aas inc xchg inc cmp test rcr aad add ds into sub pop xchg adc mov pop mov mov pusha xor bound mov nop into cmp mov cmpl js aam and test mov divps js hlt test in (bad) or mov push pop mov xchg pop pop ret shlb je cmp (bad) push cwtl pop inc je mov mov push cmpsb insl mov xor lcall add insl or mov sub mov divl xchg mov push mov mov jp xchg pushf and sarb xchg jmp mov push adc mov out pop pop mov lahf jne repz sbb shrb mov arpl sbb sub mov enter enter xlat insl jp xchg or pop pushf arpl call stc add dec mov add imul fstps sar nop jno inc icebp pop mov cld hlt fisttpll popf fldl dec xchg sbb stc cld xchg fsubrl inc or js push xchg insl cmp pop std xchg mov xchg (bad) imul push movsl pop mov inc fidivr dec mov mov in mov out cmc loope mov xchg mov xor es xchg cwtl cmpsb push xlat test andb inc jbe and inc and fistl mov (bad) rorb addr16 lahf inc lock lahf shr popf mov push lcall shll mov in and out clc out push loope lret sub dec mov mov sbb cmp imul sahf ret mov jo inc addr16 push divl (bad) loop sub dec cmp stos stc mov and sub sub outsb into mov dec fcoml mov aas pop push mov rolb decb pop xchg xchg add fldcw negb inc movsb fdivr bound sahf arpl sbb rcrb loopne xchg jg adc mov sub pop inc mov in gs jb pop lods movsl mov xchg dec lods jg sbb inc jge mov inc loop pop fistpll add rorb or repz xor int mov xchg nop sbb out cltd cld dec or mov jmp fisttp add stos std iret xor dec jl test sub sbb inc pop ret mov test xchg notl aas mov (bad) mov fisttpl loopne aad add popf popa or or xchg loopne mov loope ljmp test mov or sub rorb shrl sbb fstpl mov stc mov cmp xchg pusha out jmp jne cmp push (bad) int3 pop loop cmp pop push xor in pop sbb jmp shr fld shrb pop mov dec dec adc fidivl jg popf in inc xor or or sti sti pop push inc jmp xor xor xchg xor insb add push pop adc pop repz imul leave cmc sbb loope push sub and mov (bad) rcrb xor xchg (bad) push mov cwtl fnstsw sbb fdivs mov cmpsl push mov in das inc dec insb adcl unpckhps mov dec daa shrb cmpsl jb cld cltd (bad) ja loopne (bad) jne fsubs pop add cmp popf (bad) daa xchg inc pop and aad stc jge scas (bad) cmp add mov stos (bad) xchg pop xchg dec add (bad) fisubl dec push adc enter inc les jns iret xchg inc cmp mov out or dec out dec movsb fist and cmpsb mov or (bad) dec outsb jbe sahf mov adc dec cmp jo ja mov repz cmpsl mov sub push xchg jg or clc cmc repz adc inc rcl push pop lods jmp and jno inc xchg (bad) push (bad) cmc mov mov jl mov lods shl push mov dec mov jp cli mov sbb xchg or mov aam mov xchg push stos add ret stos push popa test aam mov icebp aam xchg jo xlat dec rcr pop lret ret pop mov nop es rcll adc xor fiadd movsb mov in test test inc insb xchg and add mov shll fildll test xchg cmp cld inc jg cs mov and jl cmc aas adc lock mov arpl negb mov sahf pop dec push movb dec cltd fadd sti or jnp inc jno in aam cmp mov mov adc and xor icebp xchg mov stc sbb mov insb mov xchg in mov mov dec pop mov outsl xlat cmp dec add movsl xchg jl pop sbb in mov sub es int insb mov ret (bad) (bad) mov add bound aas aad lods mov pop jbe fsubl sbb scas pop les mov cmpsl xor pop loopne sub loopne insb push aam cmp out inc movsl adc insb add ss push dec dec cli repz add xor push mov dec cmpsb shrb std fnsave cmp gs push testb lret add lock (bad) xor mov lret (bad) sbb scas aad or mov pop rorl icebp inc or (bad) icebp por cmpsb les lret aaa cmp mov aam lahf test lods add in fwait push fidiv mov mov lods ja inc sahf adc sbbb and arpl icebp xchg adc aam stc and loop xor ficom rolb negb or xchg lret pop add mov ja ljmp jp aaa rcrb cmp test aaa jmp mov insb push shr jns dec pop movsb mov iret pop mov sub xchg adc and dec mov das shl fistp jns movsb mov fdivr (bad) loop scas ret ret enter mov shlb mov add dec jo hlt fdivl cmp ficom ret pop mov or fstp push test mov jb icebp in push repz fstpt inc into jae inc push pop jge call stc pop movsb sub out push jg lret jge std push popf js cmc push hlt (bad) push sub cwtl jnp xchg dec pop xor sbb (bad) into xchg sahf cmp notb cld mov aad lret lock pop loop add cltd xorb cmc sbb or mov test popf mov call jne out xlat lret fwait mov adc xchg lss inc aaa cmp int3 ror arpl and cwtl dec lret fldt pop sub mov repnz xchg cld and jae xchg aad mov je lock xor pushf jbe jge mov mov dec sarl notl xchg mov mov movb leave add imul xchg push mov aaa sbb jbe popa ret add je bndldx pushf mov inc xchg pop or outsl push push test dec das out push out add or out sti lret lds jae aas scas jmp scas add xor ljmp sti out dec mov decb (bad) dec (bad) out sahf push sbb test pusha cmp jecxz xor jl sub in jmp ljmp lods or aaa mov lock sbb inc push ss xchg push jecxz add xchg push xchg jge xchg sub add popf sub les notb xchg mov sbb cmp (bad) jno sub pop (bad) lock movsl mov mov je and mov mov mov mov inc adc rcl and jecxz das pushf imul out loop dec sahf cmp sub mov enter add in mov xchg in dec lret mov mov mov add mov in hlt push test pop sahf outsl mov roll outsl icebp mov push bound movsb les dec mov stc cltd jecxz xchg leave ss insl lds adc (bad) (bad) mov int3 pop inc dec fdivr pop mov mov cmp inc loop push push or stos imul cmp sbb imul shufps imul ja cli cmpsl jne mov xchg rclb jno jg ss daa icebp mov push loop movsb les fdivrl dec in (bad) outsl add cmp pop (bad) xchg mov std insl jb mov ss pop cmpsb aas out pop popa push popa clc mov add outsb es pop lahf mov sbb sub repz pop mov sbb inc xchg fwait sbb fld mov stc fbld sahf cmpsl adc out xchg pop repz call sub daa mov stc pop add dec shlb into push icebp push (bad) jp inc push push rolb gs jecxz lds sbb add push mov ljmp jg js imul loopne mov dec cmp sti test into in xor ud2 inc cmc or jo (bad) ljmp mov push jl movsl pop dec enter add mov (bad) jno inc mov call xchg (bad) movsl lods pop sbb push ds xchg mov inc std popf ja mov cli movsb jp (bad) ja out inc dec jg mov cs and inc pusha (bad) gs mov (bad) sub in scas inc repnz xor inc push das cmp xchg ret inc (bad) cli fs shll sbb add cmp mov mov mov vmovapd jecxz dec or and aaa jno mov fadd pop (bad) insl bound mov push pop prefetch std inc mov je push cld jge sbb and int3 mov mov adc (bad) sub fisttpll fs stc xchg jb jecxz inc jge jge insl fistpll push inc imul (bad) shrw or sbb pop mov dec sub std cltd sub scas mov stos or cwtl sti gs mov out push mov rclb lret cmp or out arpl add mov mov out repz cwtl sub and pushf dec adc fdivrs sahf dec and lods xorl push fs (bad) movsl (bad) ljmp lahf jnp sbb (bad) ljmp orl inc fwait (bad) loopne cmpsl lods int3 shrb (bad) cmp mov push sub mov xor stc mov dec mov enter lcall movsb movsb fnstsw in daa push xor and mov leave rcr neg lea mov fnop pop mov and pop mov hlt rolb cmp cmp cmp cmp loopne add in xchg lock pushf add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb sub outsb xor cwtl out jecxz inc out fstpl push mov mov test sbb outsl fcompl jmp js add jmp inc dec fldl add jp imul mov jns (bad) or movsl xor and sbb out stos notb shll iret xchg imul push rcll (bad) cmc fadds sub gs sbb hlt das aas cs xor jg cmp mov into gs in out and sub ljmp stos cmp adc adc data16 pusha pop out pop dec inc mov mov stos mov add out fs xchg jb push bound add add ja sbb adc pop xchg ja add test je or fsubrl jo push mov testl xchg xor dec mov xchg jbe fwait pop mov dec cmpsb or in out or test sbb cmpsb mov (bad) repnz scas dec inc xor jecxz lods cmpsl std insb pop push into pop sbb inc shl dec movsb xor add rorb das pop stos mov jl movsl xchg hlt je mov imul sbb mov lcall imul lock ss cmp dec mov sub mov mov xchg stos cltd add pop adc cmc divb inc in xor ljmp mov xor jne dec xor imul shlb out mov xchg mov dec sub subl mov ds sbb jae xchg lret sub icebp aam fdivl out jbe test sti dec cwtl rorb mov sub push sbb inc mov dec call push cmc sbb das cmp or or in shlb add je bound aaa arpl add sti fs sbb mov push jbe sub out sub sbb inc push bound mov xchg sub push out mov jp shll or mov clc push cld inc addl mov dec lds into dec xchg push scas ss out frstor cmc mov fidiv add xchg js push dec mov add xchg iret arpl inc (bad) or push scas ss or ljmp data16 jmp aam popl shrl test add jae psraw fidivl pop mov ret lods pop adc pop mov cmpsb (bad) mov mov mov mov sub data16 out cltd sarb je lret push clc loopne pop mov jle sub movl mov mov in les leave hlt enter add jo lea cmc stos or fwait (bad) push idiv fstpt push repz scas jbe rol sbb inc jns or adc pushf imulb push mov ficom mov mov imulb mov inc pop aas shrb or daa jns mov std fcoml or xchg sub pop inc xchg dec add aaa out sti test (bad) call xchg rcl push and (bad) es xchg xchg shll (bad) aas mov movsb pop dec cmc mov inc push xor repnz push test inc mov mov inc sub outsl mov stos dec add cmp pop addl movsb pushf mov cwtl jl xor dec adc mov lods or and xchg ds or jmp fwait test ljmp sbb push add adc mov in insl jns sbb xor fnstcw aaa pop xchg (bad) adc add add std add sub ret prefetchw daa and lcall or stos xor sbb xor adc leave sti pop xchg sbb ficom outsl stos mov inc in jnp mov dec outsb sahf xchg jb push aaa inc outsb cmp nop add pop fcoml push or mov jecxz out cwtl test imul mov lock push jne push in push stc test in sub pop cmp xchg (bad) call sub ret jl stos xchg (bad) or add push cs (bad) adcl push and push faddl arpl dec jbe (bad) mov shll fdivl repnz or insl movsl test sbbl in loope mov fcmovnu mov outsb or lea (bad) rcr in mov mov ja sub mov fmulp adc das and add jmp repz imul or into sub lods mov pop pop xchg sub push cmc js aad sub pop mov sbb push test repnz adc lock mov je call adc loop bswap adc movsl dec popa pop add dec repz sbb and repz xorl xor aad mov xchg in pop pop call jnp popl dec jbe stos and dec ficom testb rcl mov addr16 xor (bad) jbe mov lahf andl push lcall and imul mov mov pop push icebp mov repnz mov rorb imul (bad) arpl xchg pop cltd cmpl clc pop loop cmpsb adc (bad) pop xor cmp cmp mov cmp jmp clc pop sti repnz outsb xor out add (bad) xor in pop (bad) xor pop ss push jle sub dec cmc test ret add js mov cli mov ret push mov sbb loopne sub rcll mov fsts jg sbb and lahf aad out addr16 xchg movsl mov push loop cmp add nop inc ds push aas std cmp scas xchg mov cmp cmpsl mov mov push iret mov dec mov out leave hlt and insb aaa mov add xchg xor cmp xor cmp and cmp cmp test add push in scas pop sub cwtl mov mov xchg pop call (bad) jae fcomi ficom popf (bad) lea imul fisttpll inc add push idivb jl or enter jge or mov hlt data16 insb in imul mov adc mov dec into lods or jae les cmp mov test mov mov jmp add hlt mov movsb in arpl aad mov ret insb pop inc dec stos lret pop mov jl and fiadd je adc sub mov test mov out or mov shll dec stos adc cmpsl push mov sub ror clc pop mov lea xchg cwtl loop mov push fs (bad) gs sub sbb xchg xor aas lock mov js stos jo sub sbb adc and jle repnz add inc sahf aaa in ja rcrb mov lods cmp add xchg xor icebp xchg pop int mov nop sub jno push pusha mov and test inc sahf mov shrl jecxz cmp div call aas jge inc les inc out and les decl arpl fisttpl loope mov push mov and sahf test movsl out sub mov add (bad) or mov dec dec mov mov popl mov mov out xchg ficomp pop movsl cwtl scas mov jecxz outsb mov add xchg insb dec mov inc (bad) out repnz cli mov frstor xchg mov adc outsb cmp add xchg int xor add aaa dec dec sub push sub mov xchg movsl popf xchg cmp mov call mov inc add add fnstsw incb inc mov and fdivs adc out lds out jl pusha leave cs add lahf enter mov je xchg mov int3 add inc int3 subl clc pop push cli je cwtl sbb out scas or (bad) into bound sbb xchg (bad) and fimul outsb sub add outsw les cli negl sbbl dec inc lret xor add jl xchg stos enter mov (bad) mov inc aad and fwait js sub add ljmpw xor cltd xchg insl imul test cmp mov (bad) out sbb xchg mov xchg (bad) lret subl push xchg pop jle xor scas xchg jae mov insl sbb jo inc movsb sbb xchg push enter push dec fnstcw out out and mov fdivrs call cmpsb push cmp mov dec mov xor xchg dec mov sar pop das pop roll sub push inc ret pushf and dec jmp (bad) push inc subl iret int mov sub sbb out test sbb xchg (bad) pop (bad) mov sti or incb fucom jg (bad) call sub mov and scas dec (bad) sub lock sbb lahf sbb mov popa or idivb lret fstps mov inc or arpl and adc jns push jl mov mov or cmp add iret clc lcall inc inc inc out fnstcw daa cwtl aad cmc jmp into xchg mov leave pushf (bad) adc lcall xorl cmp sub pop pop push hlt cwtl (bad) push xor pop lock sbb mov fistpl out std in pop je addr16 movsl push lret xor push mov sub movsl push jnp out push sub fucompp ds insl ds dec inc push pop (bad) andl mov in popf sub add int push (bad) xchg add das sbb into jo fidivr push or dec mov jmp inc stos call imul add nop out push fsubl sbb test (bad) cmp mov jp fwait jae insb add inc and pop pop sbb in repnz push aaa dec inc (bad) push aad mov xchg lcall into push pushf or mul jge outsl sbb inc dec lea ja ss fistpll xacquire and mov fwait in pop mov push hlt push mov push inc repnz jns inc dec int3 fstpl inc addr16 jno,pt add cmp jnp (bad) (bad) jne call jg in mov in jno mov jecxz into outsb repnz popf lock stos clc dec push test xor jae fiaddl mov repz arpl xor add add enter xor movsl pop cmpsb xchg adc sar push xchg shrb pushf ficomp (bad) out mov scas sbb cli test adc jns or adc dec insl inc and je adc and lea aam iret jb gs jnp sbb data16 sbb push addr16 arpl in jg adc call movsl jl mov stos add es cmp ljmp dec test xchg jne lret inc xor in xlat jnp jl push mov sbb movsb mov clc sbb sub movsb ret mov push xchg fistpll ja or dec jp adc xor mov or int3 inc push aas (bad) mov ja or mov imul lcall and es push mov mov dec add clc das in xor out rcll lahf psadbw jecxz sbb std jo cs sub mov ret out mov mov in push and cwtl fs sbb sub test pop (bad) je in lods xor xorl ljmp scas lea call movsb jp movsb cmp sub mov out mov sbb loop rclb pop es inc addl dec jp and (bad) sub or add jbe jge or loope sbb daa dec inc cmp and mov push stos sbbl dec fwait or mov rol mov mov ret sub mov inc mov add push jmp and das call dec bound sti loop sbb jnp pop sbb dec cs xchg es xlat fidiv fwait push mov pop arpl push xchg xor dec hlt les iret add mov popf adc fisubrl fstpl push ss or clc mov cld daa jmp jge or icebp fcomps pushf jne mov scas jecxz jmp addr16 aam push fdivrl cwtl js push dec pop scas adc push or lret inc add cmp jo xor mov fsts and push mov (bad) jns jns cmp sub push fistp sbb push je sti pop or stc sahf loop in gs out scas push sub pop adc cmp mov into and (bad) out sub dec jmp xchg stos fnstcw add scas subl lcall mov idivl pop daa mov add jns ret fucomip movsb popf (bad) lods in addr16 sahf in mov scas ljmp dec dec iret clc aaa push arpl xchg cmp sbb add fadds mov xchg mull cmpsb ja add pop mov xchg aaa mov or hlt cmp scas push lret mov cmp ret xor mov aaa (bad) and jne adc or pop fnstenv and mov add pop mull test gs dec js sbb lds nop mov push imulb mov dec sbb cmp xor dec inc push or movsl xchg out sbb sub loopne test pop iret cmc push and push (bad) mov and in cmc nop inc out jl in cmp jbe cs push sbb cmpsb loopne lahf cmpsl (bad) inc cld scas adc mov popl push mov (bad) and push out test xchg add movl dec xchg dec clc pop pop fdivrp stc add add and jb push pusha aad or fbld shll jp call push cmp lcall add incl stos loopne jb adc sti add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc rol and ret xor cmc and outsl cmpsl insb into mov scas enter sbb test inc ja es aaa push out jg repz jle add sti mov inc or push lea movsl aad inc sbb pop inc mov popa arpl in pop lock mov ja rcll mov push pop les cltd repnz cld jl (bad) popf jno jmp mov lods (bad) cmpsl pop adc mov (bad) jne cmp xchg clc or jle jnp in jae ret mov cld jb ljmp repz (bad) cmpsb ja incl ret loope cmpsb jno ss sbb fisttpll or sub js aas mov movsb xor clc lret jo adc mov pop addl sti repnz enter jge pop push inc fldl (bad) mov loope or into jle pop xor and inc mov test mov (bad) mov (bad) fadd dec mov loop xchg and xchg push icebp ljmp mov pop out out pop inc iret bound and movsl push jecxz sbb push inc pop test xchg and inc pushf xlat sti fstps mov cltd les mov std pop sub sub aas xchg in not adc mov xchg xchg adc pop xor pusha decl push je pop leave loope or add pushf push jle mov into push cmp enter mov mov cmpsl movsb sbb popf cld (bad) jo sbb movsl or pop repnz xor fdivp or test push lods xchg mov sub jmp push rcrb or insl mov sahf aad sbb pushf test xor jp or ficomp mov not lret jb xor ja pop pop ficomp push fcmovnb sbb add fxam sub lcall stos imul adc push shrl mov push ja cmp mov dec mov push scas iret sahf jle mov jecxz cmp in insl mov and (bad) push movups jno jbe cli fnstsw push jo movsl and adc call mov iret ss ja xchg cltd sbb push mov ud2 fild jmp pop pop sub loope aam add enter jg dec movsl daa pop fs fmuls out jge call sbb sbb xchg add pushf sbb jge mov aam mov (bad) xchg sub js addr16 mov in push data16 push test push lret inc subl mov pop or or or (bad) gs mov mov jb inc sti imulb stc into lret enter mov (bad) lods xor push (bad) out mov movsl movsb pop pop fwait stc inc test mov out sub adc jmp jmp mov sub mov cmp cli push ret aam lcall xchg ror xchg xorb mov xchg jnp movsl inc in xchg sub cmp stos jae and sbb dec xchg add inc xor dec jb xor in aas xor mov (bad) mov stc gs mov hlt sub imul mov dec jo dec add sbb (bad) dec mov es xchg jo mov loop test jmp test das mov ret sbb fdivr divl nop shrl inc xchg mov cs push lcall sarb inc sub add add ds jmp orl push in aam add mov mov arpl js mov mov cmc ret pop pushf mov mov repz push xor mov dec inc push insl sub xor inc jae cmp sbb dec inc mov addl fwait mov (bad) push mov rorb add inc movsl pop shl lods dec out mov sbb shrb cmp (bad) ficom outsb sets bound pop add inc inc lods pop jno mov scas jle and adc add ljmp lods push pop gs push mov mov push adc imul inc sbb mov mov dec clc pop jp xchg cs sti push andb mov push sub fbld movsl aaa shll adc pusha jle ja fisttpll add push lret jecxz dec sbb push mulb movsb or lods stc imul fs test hlt jg icebp jle or iret fldt sub cmp (bad) sub jg jmp mov popf (bad) sahf mov xlat and jno mov mov loopne mov decb cli pop out test lcall push mov xor jnp sub sub push fwait lahf popf fnstcw pop hlt nop pusha and mov (bad) icebp imul jb (bad) sbb ja fisub mov dec (bad) ja test mov inc dec sbb outsl mov movsl or and dec stos cmp ret ljmp sub lods sbb and fdivp insb pop cwtl dec das aad cmp inc aaa imul inc mov mov sti xor cwtl mov test cmp or pop mov sub adc sahf in cmp nop fs sbb (bad) mov inc aaa inc clc das mov jnp fisttpl repz hlt ja sub test dec out aam or mov jecxz cmpsb push pop jbe outsl mov dec mov (bad) pop add outsb insl xchg js and xor jmp pop (bad) jmp dec mov incb push xchg sub inc push and outsl and pop push (bad) fwait clc push xchg imul push dec fild mov popl into push lock jp add test invd icebp clc mov cmpsl (bad) mov and mov add fnstsw rcrb loop jl and pop jle ljmp imulb movsl ret xchg push stos sub xor das push xchg xor and sbb inc lods leave adcl adc xchg ja cmpl dec roll fwait cmpsl dec lret jl and loopne mov and ret test xor into dec sbb stc xor imul mov shrl xor je (bad) lret push (bad) cmp push and dec jne dec aas rolb ljmp add aad out imul jecxz xchg js jmp movsl mov stos (bad) lret xchg sar scas les sbb sbb daa xchg stos sbb dec loop into gs cmp int hlt push sbb mov enter (bad) lcall mov das mov xchg lods xchg ret ret pop jmp pop pusha inc das fmulp mov dec data16 push stc pop jg (bad) adc scas stos lret cwtl pop and dec fsts in mov or (bad) rcll mov and jbe cmpsb pusha and lcall pop sbb or bound cld arpl fldcw shll mov scas sub and cmp pop hlt adc ds es arpl xchg cmp shll daa dec or xor xor fdivs rolb gs test jbe scas inc xchg insb aaa mov (bad) (bad) dec push clc vmwrite shlb not mov sbb mov mov iret mov adc or and out outsl xchg sahf xor dec mov test cmp push or or ja mov lahf pop pop fldt cmpsl add jl jne add sahf mov shr andl lods mov pushf add inc (bad) mov mov push icebp fidiv test out iret sub adc xchg jns dec mov loopnew mov inc dec jmp add (bad) push mov stos mov pop mov aad fbstp je adc nop dec and (bad) aam push push xchg lock outsb adc inc inc or gs movsl dec dec xchg enter out cmpsl add fisttpl xchg sti repnz jl or fisttpl lret xor mov push outsl xchg lret xor xor movsl pushf lods out pop xchg fistl push inc mov adc cmp dec (bad) aam inc xchg mov movsb mov sub testl stc pop inc das inc push fidivr mov jl scas pop icebp dec sbb shlb inc xchg in popa lret or fwait jle movsl and lahf imul jl lahf mov xchg (bad) lahf sarb sub (bad) sub lahf loop add int jmp mov jmp mov lods les (bad) fistl int3 jge inc xchg adc ds (bad) (bad) pop cwtl dec push bound lods dec cmp leave push mov cmpl xchg bound mov test ret fstpt pop adc xor lds out (bad) aad sbb mov enter lret sahf aaa leave aam jae aaa jo hlt mov push xor popa popf push mov daa fisubrl mov adc jecxz pop mov mov les mov cmpsl or les mov into mov inc mov enter push jbe jo shrl aad dec mov ret push push pop push xchg xchg and mov mov pop mov fidivr mov mov orb jle inc repnz les jnp mov mov imul ljmp xor lret idivl inc aam stos sahf dec or int int inc fist sbb cli add sbb xor arpl mov popf fadd mov ljmp in nop loop adc scas (bad) divb mov add xchg and maxps mov mov xor push or mov nop xor cmpsb ret aad popf daa ds push lahf and ljmp in dec test loop push ficoml das sbb lret xor add xor inc pop mov cmc out repz dec inc lock fsubrs mov ljmp xchg mov cmp int (bad) iret cli jo jno orb (bad) pushl push fs mov loopne fstpt sub dec shlb rolb loop push scas push aaa arpl popf dec sub dec std inc jns pop in lcall es xchg jns and (bad) jbe adc andl mov xor xor pop lahf gs and loop push mov loop xor insb xorl (bad) das aam mov out jmp mov sub mov xchg inc sbb out cmp and xchg xchg pop insl sahf mov iret jbe scas inc idiv pusha out pop xchg mov jno mov addr16 cmp push ljmp pop dec (bad) jl rorl test cmp mov cmp xor stc rcrl bound push sarl push rorb mov lods jbe movsb ljmp pop mov int3 outsl push inc (bad) jge fildl pusha mov push dec nop inc pop add les adc dec or rclb out cmpsl into popa out out adc and and add aad adc mov xor (bad) clc jecxz adc popa sarl ja jnp inc imul imul jae mov aam push adc out push and xchg xorb pop and xchg dec aas and (bad) aad popf sarl cmc cmpsb dec inc cmp mov in dec cmp jb in (bad) out and pop and pop xor popa xchg jnp and insb sbb je cmp hlt dec (bad) fnsave jne adcl mov aad jbe aaa lea push push and ljmp jle sub sbbl fstpl pushf xor ss mov push and lods mov push fidivr das inc shlb inc lods mov hlt mov cs inc xor jge mov inc outsl das or insb mov daa cltd inc adc sbb mov mov and call dec jns mov dec dec cwtl sub fidiv and adcl stos ret fisttpll addr16 cmp clc divb push cld sbb add test jecxz (bad) sbb xor cmpsb mov fistl jle mov orb or fdivl mov xor das adc mov addb ds movsb inc iret cmp (bad) mov imul mov std sub enter dec fist xchg lea mov push stos jle add push bound or inc stos dec mov inc inc cli loop outsl xor jbe dec pop mov dec je jp movsb mov (bad) push sbb andl pushf out jnp outsl pop pop adc push push scas dec or push mov jmp mov dec and or hlt js pop (bad) shr mov cmp jno lcall pop loopne lret mov loope ljmp cmc repz bound fist ds fs mov pop xchg push lods jns iret ljmp test out sbb aam mov (bad) mov push (bad) (bad) (bad) scas push mov sub mov mov jl idivl enter faddl mov mov repz mov sub pop fsubrp xor enter push dec test cwtl into movsl test mov cmc aas mov xor fisubrl in jnp and stc add imul je ljmp adc inc lahf (bad) mov pop mov dec jnp jb insl in scas repz cmp mov pop (bad) dec bound mov mov das js sbb lcall pop fildl addr16 out in jo in sub xchg mov stc adc lahf mov fadds imul fimul adc cwtl pop jae repz aad add fs push aas ds push daa inc gs or aas bswap sbb xchg mov test (bad) imul leave daa ds std fbstp je (bad) lea aaa outsb fdivrl sbb outsb fdivrl add jg lahf lret add jno or dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov dec and and pop (bad) xor lea inc bound and les adc adc rcrl jns xchg and fisttp cld scas sub mov inc xchg cmp mov out aam shlb add movsl fnsaves cli jae add fiaddl int3 neg jp je mov rorl and push mov fildll and jb pop cmp loope cmpl loope mov lcall jns out jle jo xor pop mov pop or es lods fistp mov pop inc sub ret mov scas ss mov xor call xchg arpl mov mov mov mov repnz cwtl jmp imul pusha cwtl mov pop and fs xchg lods popf imulb and in xchg push push xor jo rcr ficoml mov dec sti fdivrl es gs xchg test movsl mov inc scas int3 rcrl fwait mov test fnstcw fisttp decb mov pop cmp test mov mov test out lcall (bad) xor lcall subl (bad) mov mov inc xor push clc (bad) sbb jg push shlb lcall mov (bad) ljmp dec sbb rolb pop jb rcrb push xor sub inc dec jmp (bad) outsb shrb (bad) (bad) aam sti fstpl cltd leave (bad) insl fdivrl xor and pop hlt push jno xchg pop and push das and test pop jmp push xchg push repz mov std or cltd xor sub adc mov fldl mov xchg imul pushf out add sbb push pop adc jl mov in fxch lds and es popf fild and int3 add out mov xor push adc out clc movsl mov fwait mov xor pop aam inc pop fldl in nop daa cmc sbb enter push adc (bad) dec mov xchg pop sbb inc jns dec mov mov fdivl cmp cltd lret xlat xchg cmp mov clc js mov jb std popf push enter stos pusha jnp loope scas sub adc mov jg leave dec hlt xlat in adc pop aaa xchg mov sbb xchg pop push jno cmp roll movsb push or and inc and mov pushf fwait dec dec or icebp ret xchg mov out mov test ret icebp push (bad) fisub adc jmp test mov es les mov (bad) xchg mov jmp faddl xchg xchg dec out mov inc sub insb cmp jb and cltd add cmpsb repnz push add push inc inc test rcr insb push in out loope jg cmpl and dec test inc shlb jno adc push insl ljmp iret in lahf sbb daa call pop (bad) xchg xchg ljmp and sbb sub and inc lret jmp xchg push mov les test jecxz mov push sub lret mov lds (bad) sbbl ret jb adc xchg jns and negl iret test xchg (bad) adc int mov push loopne push lret add dec lods xchg (bad) sbb push cmp inc test call repz hlt mov dec arpl cwtl inc push push adc ss and int or xor mov cmp js lahf or pusha cltd popl and sub ficoml push cmp sub xchg jne jae pop call test mov xchg mov das adc fildl xchg push pop imulb and sbb fwait insl fcmove repz ds dec xchg in cli mov dec mov repnz jne xor sahf or cmp cmp jge bound xchg psubusw push mov xor push inc jo or repz mov int3 mov lret sti xchg jmp inc cltd iret mov lahf out jmp (bad) cmc repnz repz leave in std pushf ds xchg mov hlt mov mov fwait xorb cmp push and aaa imul mov inc push dec or lea xchg mov imul leave sti or out enter push lcall stos out outsb fneni(8087 into inc (bad) cmc adc jo push mov adc mov mov mov push and and lret push (bad) sub aam insl (bad) jae add fwait mov test pushl call lret shr mov ret out cmc lods add push icebp or les xor push mov aad les sbb mov sahf cmp mov fstl jnp push rcr xor add jns sbb mov jle mov push aad ljmp nop gs (bad) xchg jbe jns dec negl pusha pop cmp sbb call inc sahf fistpl pushf aas adc inc xchg nop mov test sbb in outsl pop cmp cwtl xchg push icebp push mov xchg pop dec jnp dec xor rolb frstor xorps push imul imul xchg (bad) loop inc and clc cmp int3 addr16 (bad) sub or lahf sub rol fadds xchg cmpsl les mov stc mov sbb dec jae lds pop sbb add fstps sbb mov adc mov inc fdivl cmp mov pop insl push jo aaa add movsl xchg inc ljmp mov sbb shrl pop add aad sbb sbb cmp pop pusha push and ss or pop in int3 and xchg adc cwtl ficom js in ds ror lods adc pop cltd sub fcmovnb adc sbb mov mov xor xchg cmc data16 sub mov mov push cmpsb sbb push ljmp js dec cld hlt movsl addr16 outsl add add push xor dec mov dec adc mov push pop pop cmpsl add or pop mov loopne es popa psubsw mov clc lea into push mov dec pop pop jecxz (bad) std mov repz js mov out mov int cmp rcrb sbb or dec ljmp xchg (bad) push shl lods mov jns nop adc out pop mov sub xchg mov ds mov outsl rcr sub pop mov add jne dec les cmp cld adc repz pop arpl and sbb push sbb jb sbb test lds mov add mov jnp mov mov cmc jp lret cmp scas sub into fnstenv dec jbe lds icebp and add xor arpl iret rorl cmpsb out pop (bad) out test push mov arpl loope stc pcmpgtw inc push in sbb lds mov icebp lret adc js sub loope mov pop xor mov jmp jle inc add popf fldt push ja arpl stc jnp (bad) xor adc push insb ficom xchg pusha jae add mov or movsl popa stos cmp inc and dec aad sahf ja push fwait movsl sbb mov xor or push pop lret adc icebp in xor aaa jbe popa je,pn fsubs or test cli xchg int mov jecxz cli repz arpl (bad) mov cmp popa (bad) pop and gs jl sarb gs fdivr and pop loopne dec out ficompl mov data16 aad and iret mov mov fidivrl dec lret inc cmp inc add rcrl pop dec lea inc (bad) mov movsl notb mov or dec cmp cmp ret aas push rcrl dec and loopne sub popf push (bad) and jno sbb pushf jo jmp push inc int stc jge mov lcall imul adc sbb arpl dec sub pop cltd mov and xlat test xchg inc push jp ja movsl push fnop jmp pusha mov push sub or andl mov dec (bad) imul mov add dec push shlb dec outsl hlt es dec jne int3 mov lea pop cmpsl mov xchg test scas call dec mov and insl jp cmp xchg mov inc lods test lahf lock rolb outsl jae movsb repnz pop (bad) (bad) lea or inc adc mov inc pop push pushf sub lock (bad) popa cwtl cmp lcall push sub js notl push sbb and and jecxz dec push test inc jg mov or ret idivb int cmp mov inc icebp or sub nop cmpsl popf mov pop push inc xchg inc shl je subl add sub adc sbb ret roll stc dec pop sbb dec mov sub and adc jmp out adc std mov pusha lea dec sub push sub xchg cltd leave lea cmp test sbb sub pop into and dec mov sti sbb and std pushf es sbb pusha pop mov mov mov sbb xor outsb es adc je push ret aas fdivrs push sbb mov ret xchg mov mov and pop std mov jbe sub cmp push cmp out outsl std icebp je stc outsl (bad) aad jmp cmp scas adc add add ss nop pop icebp out fisubl sub ds fdivl xchg leave or cmp test cwtl pop sbb push mov jno fwait add aam sub mov xchg das sbb out cmpl data16 loop loop repz cwtl cmpsb idiv cwtl dec leave popf and idivl scas cmp mov test mov rcr ret cmp lea outsl sahf pop add flds push ljmp (bad) js or mov pop push fistp xor nop pop mov or and add lock sti mov in xchg enter popf mov test in lea mov mov xchg inc test lods inc sbb push xchg scas les inc outsb xor stos xor dec mov and scas push cld (bad) mov mov cmp adc lock adc pop xchg cmp sub loopne or lret ret jnp bound movsl shlb dec rcrl mov xchg pop sti jo jmp and clc test popf clc cmp jp testb test stc pushf out cmp mov cli fcoms sbb insl imul popa lds mov loope mov clc cmp in lods imul pusha leave jno push xor sbb or push push fidivr xchg lahf aam mov mov xchg push pop pop mov cmp pop mov ljmp dec aaa jnp mov sbbl jge cs sbb (bad) cmpsl dec scas lcall add out test push mov in repz push cmpsl inc mov dec push push or int3 sbb sub f2xm1 jp xchg les nop sub popf sub scas mov pop xchg movsl inc (bad) div dec mov pop push data16 fstpt mov cmpsl xor mov out mov repnz xchg fildll mov les outsb leave test mov repz and outsl push jae aam outsl mov das inc push aaa xor or into sub rorb or cmpsb pop sub pop jecxz xor adc out (bad) mov dec mov mov mov in dec cs sub cltd xchg sub in pop gs jno adc mov or push addr16 movsb movsb (bad) syscall cltd imul mov sarl dec sub mov mov fadd cmpl adc test cmp and (bad) aam jmp push insl mov mov jns mov xchg dec sbb sub jmp mov and rcll test xor cli sbb pop and outsb and in icebp (bad) call ljmp adc mov jno push cmp add ss lods cmp in cmpsl mov out (bad) mov insb xchg lock mov jp in cwtl and repnz cmp sub mov lret out stc mov push into call iret lods jne shrb leave pushf push das (bad) cmpsb in pop int3 ret sub fild mov out sbb clc ja test lods push lods sub outsl lock xchg out in push dec mov loopne or lock dec (bad) lock xchg mov and xchg or or cmpsb mov mov mov decl stos pop lock mov mov lahf xchg dec or test adc imul xchg rol xor in (bad) sub (bad) cmp add testl lock lds push pop xchg jbe mov or dec push pop daa cmp xchg sbb test xor gs mov mov aaa fwait inc push lcall cmc lods mov sahf in xor fnstsw (bad) mov fwait into sub loope aas or fildl scas add pop movsl mov (bad) add cltd jae or mov add in push fildl insb test adc fstp add shll pop xlat xchg dec mov pop pop add lret mov cmpsl jle out sub mov fisubl sbb data16 outsl adc bound mov aas paddd push ret loop mov jle pop daa cmc (bad) xchg jecxz ret mov retw mov mov roll pop push call or icebp push mov test xor dec fs pushf xchg pop lea stos mov sbb xchg xchg rcl add ret mov push gs xor jns fidiv fildll insb pushl icebp cmp xor notb jno call sbb aam push cld jg mov mov jnp out fnstsw jnp jg add add mov lock add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add enter add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc rol mov fnstenv lret dec (bad) and fs lods or fs pop xchg sbb addr16 in int3 in dec enter sub pop idivb sahf jg icebp (bad) daa ds out pop add push mov loopne je xlat dec xchg inc imul rolb imul or popa add scas repz fimul mov loope and cmpsb pop pop jno push and flds mov sub sbb add repz shl mov pop adc (bad) jge out xor movsl dec mov adc push iretw aas into mov xchg out ja gs fidivl inc loopne jae lret sub loop fimull sbb out repz sbb pop push (bad) mov dec push or arpl xchg inc adc imul movsl fnop jb pop jge es jb mov xor mov sub scas jne out scas push addr16 inc dec (bad) push dec pmuludq sub jmp (bad) pop out push in vunpcklpd out popw xor sbb daa mov and gs xor pop sub out lds or test jne (bad) loope and mov data16 sbb dec in movhps fucomi add xor fiadd mov xor or pop cli sub iret add out pop dec dec mov cltd mov sbb push fisub xor mov xchg jo mov adc cmovle lds sbb cmovno call enter cmp push mov test adc pop outsl or pushf int3 add or sbb xchg call mov mov movsl inc lock pop push sub xchg in (bad) push pop cli aad add js std int mov lret lahf sub cmp incl xchg gs xchg xchg xchg cwtl and callw dec movl je fildl movb in push inc sub sub push mov in inc mov and popa stc cmpsb imul in push imul repz fnop clc mov push jo adc ljmp repz repnz imul jb add sub psraw (bad) shrb cmp mov xor mov mov stc in dec mov imul and leave sbb mov stos in mov xorb add clc loopne inc hlt dec repnz sarl cmpsl mov jmp sti cmp pushf imul aas iret (bad) aam nop sub lahf push faddp sbb lock bound out adc loopne jge xchg loop jmp stos out in push subl and jle int imul dec and fisttpll cmpsl daa stc push int3 dec mov lret push cwtl rcrb insl scas fildl and sub int inc fnstcw jmp lret mov push cs shr ja fwait jae lea jbe mov or pop out xchg in or mov data16 jae pushf aam (bad) mov mov sbb je push roll dec cwtl mov (bad) fisubr lahf testb jns mov imul imul dec mov or clc mov std icebp ja mov aaa xchg mov push mov cld loopne shl xor and inc and add push ja or fadds pop xor mov push cld pop xchg jmp push stc stos les ds icebp and int inc pop or push iret or test push inc sbb cmpsb xchg fwait mov scas (bad) rcll jae aam addr16 jbe cmp lahf ss add enter addr16 push stos rcll sub scas dec test mov jo fwait scas mov add xor div pop push iret iret push imul ljmp and mov pop mov push daa (bad) xchg lds sbb pop in cmp in inc arpl into adc mov lret int pop jecxz mov jg stc enter sbb addr16 push rcl xor lds xlat jle sbb inc sti xor outsb rcl shlb push sbb cltd insl cltd mov cli jbe dec mov mov mov add jp into mov imul scas jecxz dec cmpsl xchg sahf push xchg in mov mov out lock stos divb inc jnp loop (bad) fisubl mov andl in mov ret mov lods gs push (bad) sti dec sahf aas roll mov xchg xchg xor jp jle push sub cmp movsl jecxz lret fistl mov into daa stos or fs loop cmpsb sbb aad popa dec ret negl push jl sub bound adc repnz (bad) fcom pop aas pop insb cmp sub pushw cwtl mov push jns loope ljmp lret dec lret pusha outsb (bad) hlt xchg aad and (bad) or adc mov (bad) int3 add sub cmp mov jno dec push inc push mov push enter mov pop pushf idivb mov jle cltd adc xor scas (bad) repz lret inc call outsl aam mulb out sbb and jo inc pop jl cmpsl or std rcll jae icebp push and jnp in fisttpl mov fildl icebp inc lods test hlt and shlb adc movsb movsb add sbb fs fsubl xlat lock sbb adc int3 lods sub gs push lods cmpsl dec fwait imul icebp pop push mov adc xchg fstps loope sub adc mov nop js mov push mov scas fimul inc xchg jnp rorl scas repz jl aad ret scas and sub jle xchg fs pop cmp or hlt bound lods and loope mov in dec enter mov cmc sbb into lahf jne daa mov or in xor test adc mov test fdivrp (bad) adc loopne into dec adc in movsl xor fidiv inc jns xchg sub jo mov lret sub sub mov mov pop push jno push jg xchg push sub push inc sbb inc inc fstpl adc ljmp inc orl or push xor (bad) dec xchg adc fcomps cld sbb push (bad) mov pop sub cmp (bad) lret jl lods lds hlt push lods scas sti mov faddl push mov jns add cmpsl addr16 stos test out andb mov mov test pop outsb arpl stos outsl movsb int cmp int and repnz jecxz loopne xchg push nop and push mov mov sbb push jae ljmp ljmp leave mov and icebp or ss dec adc jecxz popa xor ret dec lcall imul xchg scas fdivrs fbld push lods stc clc xchg adc and enter add xrelease mov dec inc lret or hlt mov push stos and jnp pop xor and xchg pavgb cltd fs mov movsb into inc mov scas les mov or mov je imul call pop popf jne mov sbb inc out xor push enter xor daa (bad) inc mov rclb aad nop rcrb ret jle or pop mov push insl subb adc cmp or ds xor sub notb mov shrb imul cwtl cwtl inc das cwtl sbb push and pop add dec hlt add pop sbbb push fadds mov ret in icebp dec repnz ja in stos clc sub cli jge mov mov cld icebp lods and add dec cld aam inc fild pop lret push push in in push addr16 std xor mov mov mov pop push sar jp fs loop adc mov sbb mov sbb cmp or lock aaa pop xor lret cwtl insl cmc mov outsb jle cmp test cmpsb test adc mov mov pop ret idiv add cmp idivl sub add xchg cld pop pop mov add adc (bad) cli dec sbb jp call fdivl dec push dec mov pusha mov jp xchg push jae cs cs test sar push loop push and sti loop cli jne mov mov (bad) dec jnp es into dec add lods sub gs jno jbe rorl fs xor cmp push sbb mov es xchg add cltd jge cmp stos and pop xor (bad) mov push and int3 dec movsb push sbbb dec leave sbb push sub inc sarl and xor jl sbb mov jl fmulp test fs call xchg jmp cmp pop (bad) out cmp sbb jns mov daa and insl mov aas addr16 stc xchg shr fsubl aas (bad) lods sub popf dec xor cmc in pop cli aaa and bound (bad) int3 insb xchg cli fwait add mov enter jb xchg cli push gs fstp xchg insl jns cmp jae fcomps sub dec bound push pause mov mov stc loope popa mov fisttpl cmp dec xor mov jbe ljmp xchg or inc sub pop jmp cmpsb fidivl fidivr jecxz cwtl jg mov mov sub in add adc ljmp lcall xchg mov add mov cmpsl (bad) fnstsw adc push pop sub js jle xchg fbstp mov lret cmpsb daa cmp cld mov sbb pop lds jge das into xchg adc (bad) out in mov rol push (bad) jecxz and mov sub mov std das sbb fwait xlat movsl mov aas mov add leave pop test aam test clc jae movsl dec (bad) xlat lcall and xchg add mov or pop inc fildll pop pop adc jle imul andb pop or jmp iret xchg mov sbb or ja sahf test pop movl jge mov lret es icebp aam jne ja dec std idivl ljmp out sub nop shrl lods loope or xlat sbb imul jg xlat pop push imul cmp insl nop push je or popa adc inc mov sbb pop es jle (bad) jmp and cmpl adcl cmp adc jne push xchg repz inc jl or mov mov repz xor dec popf fmull out ss cmp and push jmp cmpsb outsl jl mov (bad) mov mov clflush dec jb mov sahf repz imul push jg xchg lahf jns ja outsb pop aaa lcall scas xchg mov jno jle xor in in sahf test cmp jo sbb mov mov jp call push shrb pop mov xchg nop cmp jl pushf sub test mov push shrl sub mov jo sbb pop xchg icebp inc int das aas cmp push mov fcmovne jb out sahf flds lock adc ret mov fimul aaa insb pop (bad) loop decl jo test jne pop testl jbe mov cmpsl (bad) aam jne add and movsb mov and (bad) add fistpll mov inc loop popf mov push xlat icebp stc push fcmove addr16 add std jne cwtl sbb and stc ret mov cmp sub lods add insb jecxz insl bound stos loope iret mov out fiadd push sbb mov inc jno push imul adc or inc and inc pop fstl cmpl cmpsl aaa mov fsubrl (bad) repnz arpl repz xchg fnstsw xor mov dec pop (bad) call addr16 (bad) pop mov hlt and lock repnz mov cmpsl jge (bad) jg cmp xchg xchg mov outsb push in mov ljmp das xchg push int mov sbb pop inc and pushf and scas (bad) lret add xor rcrl lods es cmp (bad) jo insl mov insl ljmp in push in clc adc dec push adc push inc idivl sub dec mov mov jge inc (bad) dec scas das bound sbb push mov pop cmc push je adc mov shll fwait mov and mov pop mov (bad) out and and mov push jnp outsl push inc movsb mov sbb sbb mov sbb (bad) ljmp ret pop mov pop pop jp das xchg (bad) int xchg add pop std pop fdivl dec cli fcoms push pop test rcl jo mov or (bad) (bad) dec add dec inc into xchg cs (bad) mov daa push (bad) xlat jle sar jno mov cmp dec sbb pusha add fldt jno mul bound popa mov and (bad) imul or pop into or outsl mov lock pop mov stc lret mov dec shlb cmp aas arpl fnstenv insb lea adc and js popa push out repz xlat xchg out sub test mov sub aas out nop adc sti mov sub jg mov cmpsb test pop iret mov sahf cld and stc cmp arpl lods or fs and and mov nop into inc outsb jecxz idivb xchg inc mov push jge fistpll xchg inc xchg fistl rep test and stc loope enter (bad) xor or std in movsl (bad) or lahf leave rcl sub xchg sbb std sarl sub push cmp mov pop sbb ja loope insl ret ror jno xchg into out insl sbb out imul ja out (bad) cmp out fidivr mov jnp out std incl add nopl out add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc jnp (bad) in xchg sub push enter call inc mov insb mov insl aaa fwait sub xor jno outsb fstl mov decb push scas testl jmp pop aad pop les inc mov pusha fdivrs push sahf dec xchg sbb cmp loop jge call sbb jmp and jecxz jg xor mov es jo mov rcrb sub pusha inc inc cltd mov dec cmpsb imul mov or xchg inc ds add inc hlt out jecxz jg mov mov or adcl lahf int3 dec inc ss sbb rorl mov insb lcall xor push pusha xor pop adc or in sahf lods stc dec mov outsb xchg cld loopne jmp sub push scas les xchg jae cmpsl jmp mov call cli mov (bad) push mov out stos call push rol inc jg pop cmp sbb jg rcrb cmp pop cltd (bad) xor xchg pop out sbb movsb jns sbb scas jecxz out sub jnp fbld push xor push mov xor (bad) pusha mov test jno out in into inc and lds sbb xchg out pop cwtl iret fist in inc inc adc (bad) and and ret aas add xor ret xchg popf in data16 cmc or fisubl andps lea pop lea jp movsl push cmp daa mov aam daa cli mov outsl inc ret mov scas cltd outsl sbbl mov out imul shlb shrb lods ss push das aad cmpsl (bad) scas jb mov addr16 daa lods inc (bad) mov xor xor into test shrl mov fldt xchg xchg add daa fnstcw mov sbb sbb push mov call dec clc add cmc sub jle lret add sahf cmp pop jmp mov dec shrl test push sub xor enter lea repz (bad) mov jne xchg ret xor lret dec into cmpsb (bad) cmpsl jmp outsb inc movsl cwtl dec out ss mov leave stc aam in cmc mov add sarb push cmp xchg fnstcw fiadd xchg sub lea lods lret jbe out and jae lcall lea int3 popa stos add xor pop jl mov mov jbe nop gs or adc das sub push pop dec push cld mov jge in fimul push jg loope (bad) cmc add jb or mov out add (bad) (bad) (bad) testl cwtl cmpsb sbb or in pop jl xchg cmp leave xor mov outsl dec daa push add push fmuls pop jae inc add or outsl add xchg cwtl inc mov ficom outsl dec inc mov dec call xor push dec pop aaa sub adc (bad) es jb xchg pop enter mov mov dec mov mov fcom movl lock push dec xor push aas es mov mov imul (bad) int (bad) fisttpll xor dec pop lret (bad) and std xor cli orl cli in aad sub test out (bad) xor jge in shl arpl pop loope pop out ljmp enter cmp mov ret dec ror pop out xor add aas pushf inc stos adc mov in js jle pop fwait inc jecxz inc mov jne xchg dec hlt fnstcw lods push cmp ror icebp sahf orl push jl cmp add ret mov mov cmp enter inc dec pop (bad) or dec fnstcw mov imul mov jbe aas adc cmpsl jno mov cmp (bad) xchg (bad) jo mov arpl lods addr16 add cmp push loop es xchg aaa decb aam test mov pop adc lahf xchg clc mov xlat xor addr16 lods pop mov inc sub pushf std cmpsl stos fsubrl sbb jg jle jg mov fwait sub ljmp push leave dec sti xchg mov test (bad) repnz mov sub jo loope leave (bad) rcl loop jle imul (bad) jmp icebp xchg dec mov call aam and loope mov jb lret push pop sbb and dec push or mov lret pop popf xor or in or mov ja mov int insb dec fistl mov stc inc xor or push xor push jo xor push xchg in insl mov loop jo add sahf mov repz loopne cld lds sub mov lahf xor sub bound cmp je fistl pop subb push popf out scas lret cmpsb jno mov jmp cwtl (bad) jmp push lock insl les lods dec mov xchg stos push mov dec pop adc mov jnp divl lock decl inc (bad) xor arpl mov sbb bound leave jg int inc adc mov jl stos jg push adc cs daa fildll sar xor shrb addr16 mov pop (bad) popa xchg stos (bad) xchg pop scas ret je pop xchg mov dec sbb pop push inc movsb xor or push inc xchg stos jge fsubl das daa mov ja sbb xchg dec cmp pop cmpsb push dec test arpl std mov fsubs hlt sti leave aas inc test mov movsb xor (bad) mov cld inc xor sti pop addr16 xchg shr incl lahf scas jge push jl mov or bnd js stos mov pop shrl jp call outsl xchg (bad) xchg insb mov pop push scas fxch add push fwait cmp push ret cli add pop idiv mov sbb inc mov cmc into or pop fimull pop fwait cmp lret ljmp xchg jno sbb out sti call ds sub mov and ja push add je scas mov fisubr jb sub test mov inc in inc jl iret mulb push mov lods incb test arpl xlat mov cmp out push and push mov out mov sub sbb pop lods or push cwtl xchg out (bad) cltd (bad) cli dec sub mov mov push insl les repz ljmp pop jmp jmp xor dec pop add or jmp mov mov mov lea and ds repnz cs imul jb pop sbb stos test out mov mov icebp sbb add add sahf outsb outsl das cltd ja inc lret jb pop jo ss jns pop xor sub int mov push push fcmovu and add (bad) ljmp fisub movsb sub add insb popl ja pop inc push ja pop das int3 pop adc push pop mov pop jnp out decb (bad) adc and lahf adc (bad) mov cmpsl ret mov jo mov cmp fidivrl insb mov fwait mov test imul ja imulb int3 jl jns jle inc fimul sbb push dec add loop ficomp sarb imul jle xchg insb bound outsb dec or out or lret idivl jae in mov lock int mov jo xor xchg cmpsl andb clc or xchg stos xchg xlat jmp shrb push aam xchg rorb cmpsl imul jl scas xchg add sub insb adc push insl loopne je sarb ficompl scas cmp in mov mov push xchg pop xchg and popf repnz mov xchg sub int dec mov gs xor out fbld pextrw sbb in jmp push test iret dec xor ljmp scas fisubl pusha cli dec iret xchg in sub mov jb,pn xchg sbb outsb xor in jge andl pop pop das mov out xchg sub out mov mov and cmp fildl stc pop mov (bad) xor push jle pop (bad) push add (bad) icebp add jecxz push loop aaa ljmp (bad) mov inc mov scas mov jmp enter jb push das (bad) repnz mov xlat mov add leave sbb xchg (bad) push dec dec shlb cmp inc loopne jb jg into rcrb mov push stos push sub pop adc cmc aad lahf mov adc int3 je mov lret scas popf in adc xchg jl cmp outsl push stc and mov xchg adc lea mov pop push movsl cwtl add (bad) xor mov and mov int3 int sahf dec scas mov inc xchg outsb push or icebp lea outsl or pop ucomiss scas add ss hlt or stos push enter mov mov dec mov pop sti jno and mov push pop (bad) jbe loop es sbb add adc in mov pop jmp mov cmp or push int lods inc lods jge inc movsl push rorb ret clc sub push loopne fildl mov ss sub (bad) fidivrl cmp cmp addr16 sub mov sti ss mov lds setb cmpsb pop sbb jnp sbb adcl add push jge sbb or mov or flds or push jae xlat mov adc add xlat hlt (bad) int3 pop mov xchg sbb addb dec repz xchg cmc icebp sbbb je xlat cwtl cmp idivl aad loope xchg cs lea (bad) insl pop pop hlt jle adc cmp inc ret xor pop addr16 in test xchg (bad) mov mov fcmovne (bad) pop jg push inc pop data16 mov xor mov lea in xor mov sub repz addr16 inc decl movsb shll cmp xor adc xchg mov int3 xchg xorl fcompl jns in (bad) fdivp shlb and push xchg das mov inc mov sbb inc or inc add pop dec (bad) in mov aad loopne gs or icebp fdivp fwait mulb retw mov pushf cmpsl mov mov out pop stos add push in imul add sub xchg arpl leave dec jecxz mov fsubrl inc push leave (bad) push push addr16 jno scas cmp lds je mov xlat pop adc xchg cmp sbb jbe sbb add fcompl mov (bad) jne imul sub jb cli inc aam sarl adc jp std lret mov imul (bad) rcr sbb (bad) stos pop dec in popf sub out adc call fistpll test pop mov das (bad) into and roll and mov push (bad) pop (bad) insb (bad) mov std push mov pop in push (bad) ss ss std or xor sbb jecxz dec xchg nop into cmp push xor lahf add add jbe fs test jne jne,pn hlt ret sbb pop xchg lea xchg loope ss hlt mov inc into int3 in movb mov cld and cvtdq2ps jbe cmpsb nop mov and push xchg test insl pop roll mov jne dec sbb pop mov outsl jmp add or mov dec std mov push jge les jg jnp sub arpl adc mov dec es adcl jl jo aaa xchg push sbb push bound push popa pop jecxz jecxz cmp rcrb lods outsl (bad) inc adc fistp nop mov pop mov cmp mov cmc inc lret fdivrs dec cmp sbb sahf mov jle lock xor lret sbb popf je dec mov inc fdivrl fistl nop fs pop fist ja adc fwait mov data16 add cs or rcrb stos xchg data16 movsb addr16 mov add int3 sar insl stos test mov adc pushf cmpsb gs icebp inc jbe mov sub mov dec dec pop fbld fsubrp les sbb mov fbld in dec dec cmp dec mov mov les xchg jp or (bad) repz cltd leave shll push fidivl sahf add pop sarl imul inc inc (bad) dec dec fwait dec push cmp sti push (bad) mov stos outsb js dec les lret add pop repz (bad) sahf inc sub rorb pop leave push sub lock ljmp movl repz stc push inc test dec fisubl cwtl in imulb pop sti das mov xor movsb push xchg cmp cmp (bad) fnstenv push xchg loopne mov dec dec fldenv add add rep mov out pop into sahf add movsl or mov mov mov sub push iret jns inc addr16 repnz ja (bad) mov mov es push xor insb push in ljmp push mov and push xchg stos add sbb cmp dec pop mov cmc or in or (bad) repz and jp adc dec mov (bad) movsb jge xor mov dec out data16 outsl mul sbb insb jg aaa pop jg icebp pusha test mov mov push mov std imul mov jmp add jge fs jge mov push out arpl pop xor call aas insb (bad) pop stos cwtl mov xor mov adc (bad) mov xchg scas aaa orl lcall xor sub sti mov das or and loop cmp pop push das or pop push jne fisubrl pop sub mov scas fcom mov add scas xor or mov (bad) sbb ss loope xchg ljmp ss pop sub ss in test das scas jae push mov mov jb cmp sbb sub cmp out mov (bad) icebp bound in push push daa out subl sbb mov push ja out inc cltd mov stc ja out fwait add pop es xchg xlat nop inc pop xchg ret and push test or imul mov nop cld cli outsl adc jb lret push scas pop mov sub pop stc incl lret out gs add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push inc adc xchg (bad) mov ret mov sbb or jge ja push adcl inc push pop nop xchg out out jecxz jg jo mov jge add movb xor jg and out or test lods and dec lods out cli pushf cmp mov and add mov push fwait js data16 dec fsubl xchg sub mov js xor mov sbb sahf xchg or mov fs out inc ja mov insl rorl fstpl mov ficomp sub lcall lret add jmp jns xor pop ja cmc out inc mov sarb inc xor out pop sub jns insl add jl ljmp loop push and leave out xchg les xchg icebp stc fisubrl mov adc xchg add es xor out fdivr push xor test cld scas xchg jne pop sbb jb std xchg repnz sbb inc lock inc test loopne sbb jnp xor xchg push or or cmp fstps out sbb bound pop push or outsb mov add ffreep jae,pt sbb scas cmp cmp dec in or ret hlt in pop adc scas dec pop push shll stos push ror imul imul adc mov xchg push jl stos pop in loop pop enter fisubl pushf push dec jns inc aas pop jmp popa ret jle mov xchg adc test outsb addr16 in fbstp aaa jb sub dec pop out stc je sub scas stos (bad) pop inc add push aaa adc xchg loop dec cmpsl sub cmp cmp pop inc test pop adc ficoml lea xchg in out movsl mov push loop mov sub std pushf cmp jae xchg or or (bad) aam inc inc xchg jbe mov insl ljmp dec aad push and inc icebp (bad) mov adc test das dec sub mov pop lret mov jge int3 jnp int3 dec test mov aam ret sarb ja sbb mov jne xchg jl cmp aam mov mov mov xchg lret sbb lods push adc push sub inc ret (bad) jbe cmp jg loopne popa or mov aas fwait xchg and mov lods (bad) dec and sbb xchg daa or or sbbb sub movb in mov mov push lods dec cld rcr faddp pushf popf sahf clc ficomp push xchg fadds mov lret or int std cmp mov sbb inc and scas ret test lcall mov or xorl dec jo daa push mov xor mov enter push cld aaa inc arpl dec mov inc pop cmp rcrl mov jl insb stos je fstl dec repnz push xlat pop movups mov adc xchg jb aaa scas (bad) bound outsb ljmp mov or test jnp,pn xchg hlt mov aas hlt or lret sub loope jbe rolb pop mov iret jbe dec jne or cmp aam push stos sbb fwait out cmp mov mov sbb inc sarl mov sbb pop je dec cltd dec adc adc leave add add mov pop lret mov xor sub outsl and inc pop outsl mov or push pop in idivl push out std decb lea repz fldenv jmp mov popf roll xchg or imul ljmp stos lds mov insb in pop cmp xor sahf jge mov xor call xor xchg lret jge mov outsb cs dec (bad) mov push cmp pop pop data16 add mov xor icebp dec push xchg loopne iret outsl lods adcl movsl mov fldt xchg arpl jle fcomi cmp iret inc faddp add cmp push cltd dec int out or nop push imul sub loop push and sub xlat icebp mov jle rcrb or lods jbe imul lods lcall (bad) das mov cmp xchg ret xchg jae je cmpsl and mov push lea cmp in xchg (bad) out loope jge fidivrl rcrb push mov ror in stos popf loopne aas cmpsb add idivl jl ror push shlb je lret xchg sti pop jge mov lods jge not inc js dec xchg jge push loop sub xchg add icebp lock fmuls push xchg pop mov lea push adc inc (bad) lods xchg mov push mov mov push aas jae push mov aas out inc repnz mov movsl adc cwtl jb push mov add mov movsb or test in imul test ret data16 jmp testl inc push sbb out pop add aaa pop inc call mov inc (bad) push sub scas das push and popa push jne retw adc adc add adc xlat sub mov adc fucom pop cmp lcall jns sbbl xor push jbe les cld je fbld cmp inc (bad) mov stos cld out ss pop imul dec outsl or pop stc lret or data16 movsl cli lcall xor or sub pop add pop pop and sarl imul es dec jbe jnp mov fisubl and (bad) mov push setno imul rolb pop add sbb pop push std out push mov xor sub loopne jl or dec fisttp int3 add add xchg leave dec cmp fs outsl pop sub push mov sub adc orb dec test addr16 mov jae mov je test fs bound add fsubl xchg adc adc sub fistp aad rorb fbld push stos addr16 shl std jp jge test push pop mov xor and push rolb cltd out scas inc ja sti stos aas inc xorl mov test leave (bad) mov mov (bad) hlt into push sub push int3 xor fidivrl jecxz xchg sbb loopne rcll xorl pop add mov ret jne lea xor testl and std in aas add inc jp and pop sub xor iret sbb lahf lods in pop mov add pop cmp dec add aad adc mov mov xor enter hlt clc mov lds fldl jg xchg into lods mov cltd stos loop push bound cmp push dec fnsave and (bad) in mov add pop hlt dec and sbb ss inc movsb mov hlt int sarb inc test in (bad) outsb push jl pop outsb addr16 inc xor popa cmpsb loopne pop loope pop call mov ss push inc push adc jmp dec or xor daa out adc mov push loop pop test out arpl adc iret aas xchg into xor inc es xlat jle das adc add and adc fcos test jmp cli scas les jg cmp sarb adc add out imul test lret adc imul (bad) and sahf loop int3 rcr scas xor aaa push xor negl pushf imul ret sbb repnz lret and in scas test jae movsl sbb inc ret add andb loope mov or dec and inc or repnz mov out rorl sbb lret push int inc xor mov loopne sub inc ds stos xor mov mov mov cli dec sub stos cs aas (bad) cld sti in insl fbstp mov and xchg xchg add mov rcll sub mov popa mov test mov daa pop sbb jbe mov and loop bound xor cmpsb cld cmp adc fcompp push stos sub cld inc adc and out xchg pushf xchg dec (bad) (bad) mov push jne bound dec lock and ret adc rcll jo cs dec add in out lret dec mov sbb test jne gs jno add or pop int3 roll mov jl ja jb dec xor fwait nop mov sbb mov mov mov movsl jl ret or push pop rolb xchg sub sub std push loop pop xchg ficomp push stos or jbe dec into or lods (bad) clc jns jp push (bad) and pop jl sarb pop test cmp dec rcrl ret loop xchg fdivr (bad) xor aas mov or out pusha cs inc pop push mov cmpsb inc lods insb mov jo lds jbe jle mov dec pop inc and (bad) rcl aam fsubp scas jg out or clc ja mov and imul int jmp mov mov inc out xchg jnp stos fwait pop leave gs xor add add cmpsb cs (bad) push dec cwtl test jl stos je,pt outsb scas jge (bad) out loope xor adc insl and icebp sarl leave ljmp xchg (bad) les cmpsb sbb mov cmp push in inc xor add arpl ficompl or mov (bad) adc pop cmp xor scas dec adc aam push jg cmpsl dec hlt call test rcrl stos add push in inc sub testl pusha sub icebp (bad) es jae jns andl mov mov add aad xchg jo icebp add pop loope xor aas mov mov into insb repz xlat lods pop adc jnp jecxz xchg dec jbe loop movsb lds cld movsb iret je ret in test push sub jbe xchg add inc sub or ljmp das ret sub data16 adc xchg xchg jns (bad) fisub je xchg sbb xor mov mov (bad) popa or push jle xor xlat jmp popf mov in push icebp fstps jmp and sarl inc mov (bad) mov fmulp shll sub adc pop jns cltd xchg mov loop pop jle lds leave cmp mov cmp sahf arpl push bnd stos iret dec out aad sbb gs (bad) mov jno xchg lret cmc or inc adcl lcall arpl ret mov cmpl add pop and faddp ljmp sub xor sbb mov adc pop or sbb add imulb nop or add ljmp enter push push pushf (bad) mov fldenv call add ret adcl sub (bad) iret push mov je sarb xor cmp xchg push jge xor dec js mov js (bad) xchg ljmp xor and fwait jae lock mov aad and adc mov inc (bad) ss in jbe and ret mov lea cs bound gs mov test ljmp fdivr pop inc cmpsl lock mov daa cmp mov mov xor push sub dec aam mov sbb repnz stos outsb inc jns fildll dec and inc out in outsl add aaa fwait pusha push mov in add jno cld jns jns,pt xor and leave aaa movsl push notb lret aaa outsl rcr std (bad) ja adc cwtl mov cmpsb stos sub fistpll sbb je popf sbb mov mov sbb inc (bad) cmpsl ret fnstcw insb mov arpl or repnz stos and add hlt mov inc into in scas push mov rclb sbb sbb pop jmp cltd or inc pop or and mov mov ja xchg mov push lcall ret sub inc es out mov or mov or sarb push mov cmp mov popf fucomp pop outsl jo jns gs and cmp dec sbb lahf add or jg push test sbb (bad) fiaddl inc (bad) jmp or xlat insl or (bad) mov bound ljmp iret xchg dec push fildl xchg xor push cmp push movsb or mov xor mov cmp cmpsl cmc mov test popa out push jecxz pop ffreep je pop dec inc push cltd inc mov pop shrl out mov pop int3 test and cwtl daa arpl add fsub test lret in std aas mov enter cmpsb iret fdivp adc jle mov adc aaa fwait sbb xchg ret pusha pop sahf push pop sbb cmpsl lds push daa mov or mov scas movsb pop (bad) mov cmp jmp idivl std jo xchg or cld adc sub cmp mov in in pusha popf and fsubrs inc push cmp cmpsb sbbl inc aas xchg and stos mov jns mov sbb fbld dec (bad) xor mov push repnz pop leave dec insb dec out mov cmp in and out fisttpll inc stos movsb enter jnp cmp jg lods jno mov cltd mov cld pop dec iret jl pop sti adc and dec ret decb outsl xor xor jmp add jne and inc push mov enter sub xchg imul pop ja add (bad) mov inc leave push pop cli fbld negb mov mov push mov faddp icebp jle inc bound mov lods outsl jecxz sub out dec cmp jge cmpl into sbb pop xchg adc mov adc mov mov rol js loope or add (bad) push ror mov xlat push xchg clc ljmp xor pop mov jle jecxz lea js or dec call ss dec hlt leave jmp lea mov or test mov cwtl sub dec out fisttp jns jns negl jp call push cmp mov jp incl add aas cli xchg out cli cmp dec lock add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add les add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc rol mov inc notb loop fs jae enter gs enter xchg pop pop sub jae mov mov mov lahf xlat (bad) or xor (bad) xchg xchg cmp jle dec (bad) (bad) iret cmc mov ja das jle lret cwtl sbb push mov adc push cmpb xchg sbb pop outsl test fnstenv or icebp mov ss sbb call dec jno sti in iret dec cmpsb (bad) aaa addr16 add nop mov lret xchg jb mov push aas loope call mov sub rcr xor adc xor mov int3 dec cmp hlt or fwait (bad) aad aas cld ja ret lods pop repz mov adcl sbb xchg or in pop jle js lea xlat mov or and repz ret cmp xor and xor es cmp (bad) lods fwait inc cmpsl mov push inc jecxz jae add cmp daa dec push sub and aas inc dec mov adc inc push adc mov rcl push ss dec adc sub ret push push leave xor pop popa xchg sti les push sbb or mov pop xchg ss sqrtps cmp imul cmpsl mov fmull icebp lds popf (bad) pop jle lds ficompl test int3 pop xor jge xchg add lcall jo sub adc outsl aas jle pop (bad) pusha pushf and popf aas adc mov lahf sahf push mov adc scas fldenv mov or xchg movsl aas stos cmp mov pop sti mov outsl imul dec fisttp lock push dec add jae pop movsl mov (bad) sti xchg sbb popa into cld or cmp jo push (bad) push xlat aas dec ljmp pop mov movmskps shr outsb pushf sub imul mov loop inc aas push test adcl cld repz or or xchg xchg std push lea pop les (bad) gs movsl jns cmpsb out and js arpl mov inc rcll mov pop mov popa lods stos add xchg in xchg cmp sbb loop and mov rcll enter cmpsl or aad adc mov divl mov mov (bad) jb xor es lock mov sar inc push push imulb jno xor inc xchg dec mov sub dec decb cmpsl dec aad push lods inc jmp (bad) adc pop inc cmp js mov add lahf add aad pop stos repnz sub sub jl pop mov xchg sti in out cmc jp (bad) mov sub jge inc push lods je lret data16 mov sub sahf cmp out mov and test pop out incl or adc loop mov lds add mov jl mov in lret andl (bad) aas cmc mov sbb (bad) mov scas (bad) fstpt and xlat sub fsubrl mov pop mov mov xor cmp imul clc rorl xchg lcall gs cwtl (bad) je add cmp (bad) rcl (bad) pop in inc (bad) loope or jge ret daa jno and lea sti lock fcompl mov xchg add iret adc outsb out int3 xor mov lods out pop mov sub push lds mov push test push lret pusha xchg js pushf jg dec sbb aaa and push xor dec and loopne lock into mov push lock pop lahf mov push leave jl sti push sub hlt and mov mov pushf rorb mov mov (bad) fisttpl mov mov mov push fadd xor loopne xlat push add dec mov xchg in decb mov sahf xor mov mov jl mov jae jne imul hlt pop pop adc dec out pop adc cmpsl pop cmp sbb push xchg fnstenv push (bad) pop pop xchg cmp int push shlb mov scas out movsl in loope mov xor inc mov or dec mov push lods out out inc mov push adc pop in lods sbbb fisttp (bad) sub pop ret ret notl add bound sbb xor mov adc xchg stos cltd jmp (bad) jnp mulb or lret dec in shrl inc mov das pop xchg (bad) mov data16 adc nop shrb icebp cmp fsubs mov arpl ja xchg ret or outsl jg mov and or dec or imul jns leave jmp ret ret (bad) push arpl les inc cltd inc loopne sub jae movntq xchg fisttp fs adc inc lret pop fldl std sub mov enter aam cld pushf sahf mov xchg sbb inc outsl and outsb sub sub xchg adc stos xor (bad) mov dec mov inc gs sub jl xor jecxz (bad) sti ss rcr or (bad) cmpsb jmp shrb invlpg leave (bad) lcall xlat iret cwtl clc and ss insl lods sbb test sub shrb jge pop dec adc arpl out xor out out hlt imul sti outsl fwait or dec jle dec cmpsl cmc cmp out ret mov adc outsl dec add xor loope sahf aaa lret or mov sub mov (bad) movsb in out and movsl add sub nop sbb (bad) push cmp mov sbb pop int3 aam enter (bad) js sub push push fnstsw aad rcr adc imulb push cli jmp jmp add jp sub enterw add dec cmp aaa pop push adc and xor mov hlt jne test in push sbb cmp push inc sti mov adc rorl xchg cli mov bnd push jae adc scas and fs mov inc xchg cmc sahf mov dec (bad) inc loopne sti sbb iret sbb sti (bad) into cld mov inc (bad) sub jl or pop aaa andl mov mov mov or fwait mov sbb nop push xchg lds divb cli sarb out icebp xchg pop out fcoms cli or push inc jecxz test icebp sbb xchg xchg push stos in inc stos jae nop or mov and or pmuludq dec clc add xlat (bad) repnz mov mov pop sbb ret xchg xor js ret or test scas dec in push pop aaa fild adc push sub int3 inc push (bad) loopne insb divl xchg stos and xchg cs cld imul xor mov pop cwtl js add cmc jnp xchg fwait ret imul (bad) clc and inc inc xchg sbb add sbb inc stos xchg and adc movsl int3 mov cmp das push sub dec scas adc xor (bad) (bad) xor pop dec xor jnp mov (bad) pop jp daa in cmp adc pop add or mov jae cld (bad) cmp cmp mov push outsl xchg dec push pop mov inc out jp inc cmp hlt mov cmp faddl out std mov add das dec lods imull cs xchg jg rcl dec cmp dec fwait mov xchg xor lret dec add in jmp mov cmp sub sbb lea rcl out loopne,pt mov inc or xchg or jmp mov cmp dec adc jnp out jle mov fcoms jb pop fist in or and pop shrb leave iret out (bad) pop add sbb push mov pop mov clc out testb lahf and xchg sti sub data16 push cmp fcomp out xchg or popf xor push adc cmp test xor sbb xchg pop cmpsl inc dec add cmpl repz dec enter or sbb rcll sub cmp add lea shll (bad) notb fs or insb out mov sub xchg mov sti jnp es and mov loope inc jmp out jl push dec fdivl jge jge in mov push inc push sub pop int or lock push shrl inc or sbb cltd cmp scas icebp lret xlat bound dec sub mov sub mov jo mov test sbb cwtl mov xchg and adc mov enter pop into (bad) adc int3 xchg mov jo xchg mov nop inc (bad) aad mov push xor push out aad push fcoml int lret std push inc negl lret or rcr sbb and cmp stos jle mov out and lods inc xchg cmp in mulb mov cmp out std iret jo mov pop inc ficom push inc cwtl out lret xorl jp aam in mov les adc (bad) fldenv fldt pop dec inc mov mov cmc mov fidiv rorb (bad) (bad) cmp loop enter ret int3 and imull dec aad dec and cmc adc nop jle jl outsb les sbb jae sub cld fcomp add test insb je or ja mov cli enter xor imul stos cltd (bad) arpl not and dec or mov xchg pop push fsubrp dec insb pop test lcall fsub fimul in sti ret push push mov and and inc ffreep lret jae push sahf pushf repz jge lds lret sbb iret stos cs xchg sahf pop add pop aam jmp ss fbstp dec data16 mov ss lret and and (bad) addr16 cmp mov cmp jne jo push lock jmp xchg inc icebp mov ficomp adc push inc fldenv pop ss iret out cmp jnp mov xchg scas pop xchg js sub stos sbb push roll movsl adc int3 in mov mov cmpsb (bad) movsb add out nop push out aaa fwait testb ljmp inc and xor (bad) in adc jle cmp (bad) std or xor xchg gs mov push out pop mov mov data16 call aad test (bad) pop pop mov pop mov mov ret bound loop sbb add fidivl test pop xchg pop sub cmp sbb lret (bad) push jne loope and xorb push out jecxz ja inc jno cltd ja loope push cmp mov xchg lahf inc leave das push hlt orl push out data16 clc pop mov sbb sub rorl and ret lret in addr16 cli scas call pop ja jge stos push std lds mov sbb lods in inc fs leave sbb mov adc adc stos lods mov enter push inc gs mov aad (bad) ja mov pop ja jmp xchg and sbb jnp lds mov mov ja sbb fist test sbb pmuludq mov fisttp push add jecxz add pop dec pop lods into dec movsl test xchg in sbb xchg dec sub (bad) dec jle fucomip pop adc jno lods xor pop jge fistp cmpsl call imul repz (bad) xor xor cs sbb lret cmc inc add outsb and or adc iret mov add ss rorl xor and pop or and mov ret std lcall dec dec shlb mov xchg aas push icebp arpl xor xor cld stos push cmovg mov mov mov enter sub sarb outsl mov nop inc outsb outsl xchg nop rcrb jmp (bad) sub xchg push jge adc aas stos fcoml jle lret loopne ffreep and inc jae mov cmp adc dec push or (bad) aaa lods xchg mov iret jge mov out mov xor sbb sarl loope negl ret test and packuswb push ret adc (bad) aam (bad) adc mov scas sbb test sbb fwait call jle movb inc ljmp jae mov or xchg push insl cmp dec and leave and mov and mov scas aaa xor lock push fstpt outsb and stos (bad) fimul push cmp fisttp shrb sbb adc test inc pop mov sbb mov sbb sub jae sbb dec sub int3 push jle add pop push dec aaa addr16 sub lods test mov sti popa pop fimull dec jecxz popf pop outsl loop rcl popa xchg es push jo dec pusha or dec out jae mov int je push pushl leave test xor cmp mov push xor xchg inc push (bad) aaa inc cmp push inc inc mov jle repz sti cli mov ja lret cmpsl movb mov dec (bad) jae bound lea clc out or lods and sbb ret pop push rolb add push sbb adc daa pop push out movb imul iret inc mov and xchg mov cmp mov les into outsb or jb pusha aam fldt shlb lea cmp add inc add sar push sub dec jno popf dec movsl push mov test lahf push movsb or sbb (bad) out (bad) xchg mov add ret sbb stos inc (bad) lods in xlat fild add insl fstl jns cmpsb sahf mov push test sbbb ret and test fwait js xor aas dec mov xor push addr16 jmp push mov pop xor pusha rclb je enter mov pop stc ret (bad) pop inc inc les insl pop jne mov xor fsubrs mov and addr16 outsl jne mov (bad) popa repz fdivrs dec xchg push stos in jmp mov les inc xchg and push cltd cmpsl js pop and mov add stos inc idiv cmp jecxz lea aaa outsb fdivrl sbb outsb cld incl add (bad) in sbb frstor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc pop (bad) icebp and xchg dec add cmp and cmp cmp scas or mov mov fnstenv out in in jne sti jle lea cmc cmc js add xchg jg mov std and inc std lahf imul xchg scas cld lea pop imul cld insl ss rcll bound push jbe bound cmpsb dec mov inc pop dec jecxz call aad fsubr xor cmp sbb test pop sbb out cmp push mov push mov (bad) dec xchg stos hlt or push outsb sbb pop pop mov dec insl jmp sub (bad) jne fs dec jecxz test cmp mov sub mov sbb push pop sar xchg arpl push ja mov sar int3 mov jge lretw movsb or loopne fwait test movsb fisttpl neg leave xor shlb jecxz jno aaa fnstsw cmp mov out sub push lods inc fcmovnb dec pop jns fs inc test inc out pop sbb aad orb cmp jo xor jmp ret inc negl cld sub (bad) dec (bad) pop lea aaa mov js (bad) das in adc push cwtl xor pop xor fdivrl cs loope pop sbb mov or sti and aad and sti loope dec jecxz push lahf or imul lock test rorb (bad) fldcw cmpl add jns fnop push out mov lods or lret mov mov cmpsb in mov out cmpl ja (bad) shll ds push push push repnz (bad) call (bad) push inc in adc sbbl inc jo inc mov pop popa in fild pop mov out dec sahf jg fsubrl int3 ss test or sub jno test fwait sahf xor in leave test push lods mov add dec mov enter dec test out add push jae or test jmp test xchg jae jae clc fiaddl xchg pop xor in sub jno and dec dec jns dec in inc inc or (bad) mov mov pop dec mov test out fsubs jmp adc stos (bad) xchg stc cmp xor repz out clc mov cld dec mov test int3 sbb push fsts mov pop cmp push cli rcrl inc jmp repz incl or arpl into inc mov cmpb (bad) mov mov loopne and sub std and sub cmp push mov cltd xlat xor (bad) fdivrl cli jae outsb lods mov ret mov xchg adc dec adc push cmpsb lahf pop mov mov mov insb mov sub icebp jnp ret sbb sbb inc cltd jmp push mov lock imul subl das sbb push repz pop dec adc rorb clc cwtl mov cmc movsb xor int3 std stos enter insb mov cwtl add jne lret (bad) push adc adc and int3 cmp (bad) jl mov popa pop in stc gs xor push dec cli sbb add data16 test repz sahf push push fbstp push lea add jp mov jl add and push je mov pop fwait jnp outsl mov stos push jnp mov aas mov inc inc pop adc fist and add dec add cs int3 sbb xchg outsl cmpsb dec add lods sti dec or icebp cmc lcall sub rorb xor add mov cmp pushf shlb xchg ja xchg cwtl lret cmc pop mov or cld adc loopne and popf call sbb push jmp xchg and addr16 (bad) cmpsl mov sbb jecxz cli pop push sbb mov xchg inc popf fsub mov in or dec jmp sub push sbb sbb xor sub loope inc int3 mov jnp movsl int mov jo push cli and out into lret xchg icebp out pop repnz (bad) dec dec push pop out movsb push cmpsb stc imul loop pusha in je movsl das repz jg lods xchg pop inc je lret les loopne fmull push test and lahf jecxz jnp add add lods add cltd xlat cmpsb dec dec mov dec in (bad) fdiv gs jbe jecxz hlt in pop (bad) out mov push jp lods or (bad) dec and jl mov ds jle lods test lods xlat adc add hlt orl sar inc (bad) push dec mov mov inc push adc push loopne lock jno int3 push sub mov xchg fsub cmp mov xchg sbbl test cmp loop test fs hlt int3 mov int3 lock lret or jg das gs jge or mov push pop push mov das xchg mov ljmp lds lds push lahf cmp jbe add mov rol add sub hlt imul pop jp mov sti or pop jge pop cmpsb add rcrl push jnp cmp inc rorb loop sbb push inc xor sbb add fnsave cld dec loopne sub insl push sbb orl mov add test stos test lret (bad) sbb in cmp push aaa loope out (bad) mov push out in sbb sbb fistpll and jg fcompl jecxz sub cmp and add inc dec orb and daa push fsubs mov iret and imul stos cs mov push shrl adc mov add pop movb mov xchg sbb ds or out or mov xor aam add sub ret xchg movl add xchg aad ljmp sti fisubrl out jle push mov unpckhps push sub out inc cwtl dec test dec mov sub push adc mov cmp jns mov rolb pop notl cmp add pop cmp and cmp js mov xchg int3 or dec push into mov xchg fwait inc aas xchg lds mov cmp repnz js dec jge or push out test pop sbb dec jne xchg fldln2 add or enter inc ljmp inc push rorl ret jnp pop es popa arpl (bad) push mov addr16 adc sub movsb pop sbb icebp fwait outsl rcll cmpsl jnp mov gs leave and mov loope dec jno jg xchg out (bad) push dec jmp xchg movsl sbb decb inc xor sub (bad) inc lods pop xchg and and (bad) repz dec pop add int3 sbb lahf rorb jo out push mov loopne imul mov jnp jecxz fistpl movntps sub push rol push jns inc mov xchg inc sti push (bad) mov cmp xor mov push push pusha mov or mov mov jo push cmp ljmp gs scas push movsl or xchg outsb push dec mov pop mov arpl xor pop jecxz test push mov add aam in dec ljmp mov push daa call cmp ja clc (bad) adc fildll (bad) ffreep xor adc fstps out mov jecxz pop inc or mov rcrl push xchg sbb call fldt cmc xor or (bad) lds in xchg push jo stos es cmp mov bound mov paddq icebp push call les shlb mov repz and jecxz lds ss inc sti add js mov xor psllq xchg cli call rorl sub add int loope sbb or popa in cmpb pop and cs mov imul les ljmp jno popa xor mov in dec push xor movsl push xor xchg (bad) pop jp push pop add cmp push stos xor mov js jnp sub fisubl pop mov inc xchg or mov icebp inc mov (bad) call lcall js jmp ret jle pop call xchg dec jecxz pop mov mov sbb jl add mov xchg imul scas mov sbb mov xchg push mov ret imul push outsb push pop pop ja jns xor lret adc mov push xchg xor lahf jnp xchg dec test mov sub mov xor sbb mov adc (bad) mov lock inc push setg ret in lds mov jae and jns cmpsb add icebp xchg (bad) pop enter dec jp pop push add (bad) push divl mov dec jne outsb jnp xor mov mov addr16 or scas (bad) in lods pop lea lret push sbb pop dec ds test lock jbe inc inc imul sub aas mov test (bad) mov xchg pop and ja mov push lea add int3 gs testb pusha adc addr16 (bad) ja lcall loop xor and cmp cmp mov jecxz jae jb aam fisubl sbb popa push and movsb test sub aaa push mov mov and pop jno and aam mov rcrb push xor jl sub push xor leave push lahf xlat xchg pop mov aam stos and dec sti xchg (bad) jae jae dec setle push sbb cmp adc cmpsl push nop xchg push inc adc xchg repz sbb sbb push jnp ja jno ljmp xchg fadds mov test aaa adc xor (bad) in jmp loop push movsl jo cmp scas sub push fwait pop mov jnp in out pop loop cmp jae xchg adc cmp inc mov insb icebp stos aas daa xchg push fldl ljmp inc imul pop mov pop pop test mov xor xor repnz sbb cs enter pop das cltd sub mov loop pop push scas pusha adc pop lret lods or lret idiv ds scas rol jnp clc (bad) mov fbstp lret mov ret inc adc xchg sub (bad) ja jne lret loop cmp popf cwtl iret adc out sbb xor jnp test pusha push inc sub fidivrl jbe push or ret inc inc xchg (bad) jb jo stos mov adcl sbb xor mov dec inc leave std jbe (bad) lahf (bad) cmpsl xchg sbb adc cmc mov pop idiv cwtl adc (bad) fs or push or mov movsb jle ret movsb mov pop jae cmpb lods mov push fdivl imulb cltd add leave pop xor dec outsl imul jb aam stos jp ret (bad) xlat sub repnz out pop xor sbb cli fidiv movsb pop mov shll in cmp or cmp mov jl jg xchg sbb dec or jnp mov rcr fisub pop push pop jbe ljmp sub pop adc pusha mov sbb arpl cmp push inc jnp inc das test out stos subps pushf cltd mov in push out nop dec pop xor mov movl clc xchg lea (bad) sbb (bad) mov cmp mov test arpl sub xchg jbe imulb dec addr16 sbb add loope jp sub inc cmc lret pushf out aam pop add gs or movsb sbb mulb cmpsl mov cltd js pop fisttpll xchg cwtl pop loope or mov lds push mov and fildll sti mov mov faddl out lods ret or dec adc (bad) cmp xlat sub pop mov cmpsb lods mov ljmp push (bad) xchg js test pop and mov shlb sbb pop test aad fsubrl stc shr pop xor pop ljmp aas leave xchg pusha sahf imul mov xchg lds fisttp les xchg sbb out jp int sub in cmp mov movsl fldt lret push sbb rorw jge pop out mov gs push scas or mov sub cmp stos sub (bad) rcll (bad) loopne ret jno add mov pop flds jb or rol dec cs and jb mov mov mov into mov test adc js cmp xor loopne pop cmp leave jbe loop bound shrl or in xchg data16 push mov (bad) xchg push iret adc cmp pop or or mov into ja add push mov sbb pop gs or lcall call (bad) cmp jecxz or ss push rcrb adc lahf inc shll cmpsb jl (bad) dec dec pop in (bad) or mov out negb leave fnstsw cmpsb repnz (bad) das dec jmp popa (bad) sbb pop aad mov je insl inc adc sub push sbb xor pop sub mov cltd add sti lea add add mov out xor or and mov (bad) mov dec xchg (bad) scas or cmpsb fsubrp jno push pop aam push pop xchg flds sbb jae movsl mov mov ja dec (bad) sbb (bad) js xchg (bad) (bad) cld mov jnp mov sti xchg iret mov push cwtl loope mov jb hlt jno cli adc mov insl mov or sbb sbb mull jne scas xchg pop and jae sub icebp pop mov push iret dec cwtl (bad) movsl mov add mov mov icebp mov xlat scas pop mov imul pop mov lcall add jg shrb test ss add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc rol jecxz stos inc or xor xor or jecxz and out mov mov pushf mov fpatan lods ret sbb lods mov js decl add sbb (bad) push fwait lret or out inc enter lret mov pop cmp outsl xchg mov xchg setl pushf in leave into int cmc mov mov pop xchg imul mov (bad) pop or mov adc cmp aas popf xchg inc jbe mov test sub addl mov fstpt in stc jp in fldcw sbb aas pop xor rolb push lea fwait clc push bound pop ret mov sbb (bad) mov sbb out or dec push and imul repz and adc sub ljmp les cmp mov add mov inc pop mov sbb pop mov (bad) int3 stos and fdecstp adc enter clc adc adc push mov pop and and lods and in push incl jns lods mov ss ds pop dec or addr16 sti mov fucom add push negb jne lret pop push add divl lret rolb mov pop mov inc popf addr16 cmp cmpsb add cmpsb cmp lret scas inc or aas push jae cmc adc icebp pop pop mov sub (bad) sub loop imul mov cs repnz adc or pop mov xor test or or addr16 popa dec adc jp dec mov add sbb and xlat mov cmp dec mov push jns in loop dec push pop insl dec mov pop or push stos ret push or sti je jecxz ljmp sub mov aad add out loopne sub push mov xchg in aad fdivrs jl shll add hlt daa pop cld sub mov jne in push sbb push loop xor adc out jecxz pop in in xorl das aaa cwtl rol (bad) (bad) mov fsub mov mov repz aas push dec incb sub sahf int cmp cmpsl int lods xchg xor xchg mov std subl aaa inc out dec out add in es aas dec xor leave gs pop cli faddl lret movsl pop jmp pusha xchg pop fstps mov jne xor mov cmp jno jae jbe mov pusha pop es aaa inc aam test or or and mov cmp xor push adc mov sub pop pop xor push in push cmovae pop test inc xchg gs mov je and jae andl and dec fistpll (bad) lods pop fldenv push pop adc pop mov into jl pushf popf cmpsb jnp push test cwtl jl ret fcomps or mov xor in loop imul mov lcall sbb xchg push sub mull inc sub push ja pop (bad) leave add enter push ss test push pushl xchg iret enter leave outsl daa xchg xchg repnz xchg push lods jo cmp sahf lea xchg and lret jo insb sbb mov cmc mov sbb data16 push (bad) mov icebp pushf lods xchg int das fstpl ljmp pop cld push and insl or cwtl push iret push jmp mov sbb je mov pop xchg jl in dec je aad aaa ss insl pushf fdivrs pusha dec out xchg pop stos xchg push ds repz push sbb sub jno fisttpll js imul orl pop repz mov fiadd scas fs pop je addl rol div loop cld add pop repnz mov and out out xchg out fcoms xor and inc cmp inc pop dec fwait sbb int3 sti push cmp scas push mov sbb test test in xchg ds daa sahf or xor jg aad divb xchg mov jne leave std pop dec rcl leave sub and sub (bad) rorb xor ss push je loopne mov cmp jo aaa rorl add out xchg clc sbb in xchg xor (bad) dec adc scas (bad) test pop mov test icebp stos adc sbb in jne xchg pop lcall mov jg lea jmp pop ds push ds aad sub bound or es in push or add fldl2t jl rep daa ljmp lods lea adc mov clc pop mov fisub test mov fnstenv shr (bad) xchg je out arpl mov xor jge int3 aad mov mov inc mull mov and jae es cmp popa mov test pop pop loop (bad) iret fdivr lds test lds test popl and push adc mov sahf pop xor mov dec sbb mov add in gs mov mov (bad) inc test inc xchg inc in push xor sub loopne in mov lahf sub cmp xchg andl aas mov (bad) out jp mov pop fwait stos std leave test cld test add cmp lcall aaa sbb inc (bad) add adc sbb xchg lods imul inc or aad fnstsw adc mov sub mov sub ficompl xchg outsb sbb and fisubr mov push lds cmp pop fidiv xchg lret xchg in pop jne push pop in scas cmp aad add shll sbb ja test cmp lea (bad) idivl cld imul pop fs movsb jge pop (bad) imul pop inc lret das jbe sarb pop mov into shr xchg xorl jo and inc push pop jo aam pop add xchg call jmp aaa sub aas in mov add sbb sbb rcl push fildl mov mov push xchg mov std and dec adc inc icebp test mov fcompl lods mov pop movb or pop and dec sahf add icebp sbb addr16 sbb in or iret mov jmp iret dec cmpsb xchg (bad) lea push stos jne jge and mov or and (bad) sub xchg stc mov push popf js sbb adc cmc jae,pn fisub movsl imul rclb lods jle pushf lock rorb gs mov mov sbb ljmp jmp out test cmp cmp aam xor dec enter push scas jg fisub popf (bad) and mov imull cli loopne outsl dec js cltd jno pop mov jecxz inc flds mov dec pop cli or cwtl cs or outsl jecxz sub (bad) xchg rorb stos ljmp mov and sahf (bad) push repnz mov sbb mov adc pop jmp mov and imul lea (bad) xor add xor fwait addr16 push pop lcall stos or repz or (bad) or push mov icebp pop fbld jle sub popa std xlat push dec inc and pop xor addb bound add (bad) cmc sbb sub cmc sub cmpsb pop testb clc sub sbb push les mov dec push adc adc cmpsb aad add (bad) jae out dec sbb pop ss outsb cs mov sub icebp imul int3 daa or jns int jae cwtl jp,pn ficoml mov jb lock cmp fildll in hlt dec mov add icebp jo sbb jle push pause jne popa and mov pop xchg rcll negl inc sbb mov xor push mov or inc cmp adc imul xor insb shrl inc incb cs mov jo out in jge pop inc dec push fwait jno push xor leave subl sub fimull cmp push lret das shll and inc ficom out arpl and jge fwait mov push lods lods int3 loope dec fsub xchg insb xchg cltd inc idivb aam (bad) inc dec sub and jle xor cs pushf mov push dec lcall imul pop lret xchg repz mov adc sbb cmpsb test add push movsb jne out in jne mov push je fs inc lds (bad) push lret mov jg ds adc jmp inc data16 xchg inc push mov dec mov jg (bad) cli sbb jge mov pop bnd cmp scas scas jb mov rcr scas lret gs pop shr xor mov pushf loop dec fsub neg push xor mov addr16 push jae dec push xor push xchg or xchg pop movsb std sub jb (bad) pushl xchg lock pop mov mov outsl inc xchg fisttpl and aaa jns inc cmpsb adc mov push mov aaa repnz add fiaddl jl (bad) sar push repz push lods fiadd dec in cmp lds push add enter test cmpsb aam inc (bad) stos cld xchg push pop push sub dec stc fstpl jo fisubrl insb mov scas pop pusha insl or hlt mov adc ret arpl xchg lods and fcoml pop dec push mov repz sub pushl jae jmp jmp cwtl jmp (bad) iret and xchg adc jp pop xor pop cmpsl pop into jmp scas adc pop lcall and hlt in mov mov mov mov push mov sbb mov les adc lea aas fstpt cs arpl iret divl mov sbb push lret sti cs inc dec push cmpsb inc in (bad) mov mov sbb cmpsl xchg mov jnp movsb dec push adc jno scas and dec pusha movsl aas or icebp inc cmpsb jmp and scas les sarb loopne test cs mov lret data16 and cmpsb push (bad) lahf in loop adc mov xor mov (bad) xor pusha mov cmp jg pop divb ret push call mov xchg and movsb lcall ret push pop push xor sahf sub (bad) jl es mov xor lcall cmpsb inc iret xchg arpl (bad) loopne call rcrl sbb pop inc inc addr16 cmp push cld sarl icebp mov dec dec xchg bound dec nop adc push push or sub mov (bad) mov scas mov lahf cmp xor push mov mov ljmp les shr imul pop dec push fdivl sahf push imulb std aad shlb cli mov and call (bad) xchg das lods xchg jbe lods inc sahf or ffreep cmc outsl jne (bad) aam jp or loope sub add xchg adc pop mov int3 sahf inc loop mov adc push int cmc push (bad) or push cmpsl pop out ja lds dec lods in insb ja lea aas or mov add inc add cltd or adc es fcmovnb mov jno stos mov in dec mov adc leave jae sbb mov das ret and jmp cmp ss iret addr16 adc add add jmp leave stc data16 xor cmpl mov cli inc cmp cs rcrb jecxz add nop std daa jmp (bad) movsl inc xchg mov loopne jecxz pop cld fwait stos fcom xor repz push decl sub inc adc dec cld scas jo (bad) push and mov xlat sti roll leave lods bound stos cmp ljmp add jne,pn mov jle or in pop xorl jg rorl push lcall push sub jbe or dec call inc mov push jmp bound xlat push pop mov aaa fstps sub aad dec sub icebp or mov outsl and sub push loop mov cmc mov les psubusb cmpsb sti cmpsl add push push es adc in cmpsl fdivrs pushf dec jp rcr xchg aad xchg add lds adc fadd pop std std out jp call adc movsb and ja std adc js sbb jne xor insb test inc inc int cmp sti lret in xchg jmp icebp stc push lock sti ror ds das or call out cltd jo lcall mov into push mov or pushf dec cmp inc jge add incb hlt dec int3 push xchg ds pop sbb or lods jo mov out std push inc jge sbb stos jo mov outsb pop sbb scas outsb stos push jmp add and (bad) out out or stos in (bad) pusha inc int3 push add outsl mov mull outsl clc bound sub jbe icebp cs repnz aaa and inc idivl jnp sbb inc out outsl fwait es push mov inc imul jns shl dec push ficoml leave stos push in (bad) stos dec ss lock mov rorl mov cmc popa cltd mov cmp mov out imulb mov loop dec jge jne int3 stos mov jl out cmp or mov mov insb daa cmpsl int3 dec sub sub xor sub inc mov jg inc sarb mov xor xchg outsl pusha cmc mov adcb hlt add mov outsb mov mov lcall and xor aas arpl mov and shlb cld fcoml testl xchg push sarb xor mov mov leave test int mov jecxz gs dec cmp fdivs cltd cmp pop insl dec jmp scas fnstenv jo xchg jl dec mov shl orb pushf or enter push iret mov lods aad jg xor out ja ljmp and rorl orb in sbb mov pop mov fnstsw pop mov incl add pop fcoms out add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb loopne icebp rcrl insl sbb dec popf fimull rcr jne cwtl out popf sbb jecxz dec mov out lcall mov jle lea in cmc js add stos and jmp cltd movsb aas daa sbb scas pop gs jne pushf ljmp xchg xor lods out out pop xchg inc loope lea cwtl int sahf in jle iret inc sub xchg iret mov xchg dec ss pop push int inc ficomp cmp xor addr16 inc aas adc mov dec bound aam adc mov test cmpsl jo daa lret mov mov push pop dec xchg mov push lcall in xchg jo sub mov gs mov dec jp les je outsb sbb adc push loopne test mov dec fwait cmp out bound inc out outsl jno in mov adc pop fnsave push or mov jecxz push fcmovu mov adc (bad) push pop stc jae jbe and mov xchg loope mov inc ret in bnd push or or cltd xor push inc (bad) or je ret jmp out iret adc jne jle xchg cmpsb cmpsl adc scas mov int3 push pusha cmp lahf rclb mov out cmp cmpsb jnp cmp out dec cmp fadd sbb in adc pop cmc test mov nop or jmp (bad) lock sub cmp enter cltd out xchg jb test xor push hlt je mov iret pop stos or and daa mul nopl lcall push mov inc push ss lea and push mov (bad) fstps ss xlat jae inc mov ret arpl cmp mov repnz test lods dec dec mov jle das pop push std mov mov dec aas repz and add dec dec cmpsb fs pop (bad) enter or jecxz jbe xor popa loopne xchg adc cmpl mov or lds pop insb ds jecxz mov sub fisub and cmp ja jl mov jl xchg loopne or (bad) mov fcomps sbb or loopne sub mov aam adc jp pop adc jne loope lcall inc or add mov hlt dec (bad) (bad) xchg stos pop icebp jge push pop and fldl cmp movsb inc bound fiadd aam xchg jo stos fisubr imul imul addr16 sub loop mulb aad xchg inc sbb stos fwait mov jnp xchg push popw hlt inc in mov lock enter mov incb subl rcl fs dec es testl adc insl mov xchg jle lods scas enter mov dec push jmp inc repz clc lret jle,pt icebp lcall std bound add jle or cld xchg pop mov inc mov dec pushf (bad) push addr16 mov mov cmc lds or int mov sbb jns xchg pop mov scas cld push push mov sbb adc gs push mov mov sub mov movl and faddp in adc cmpsl test mov jg push stos xchg pop dec pop enter push xor jg jno jb mov adc (bad) repnz adc (bad) sub cmpsl mov and mov sub sti lods ljmp jp stos mov adc xor dec jl pop jne in lcall in dec mov push test jbe ret lock les in leave dec xchg mov inc push adc arpl inc xor sbb fnop ret fisubr mov int aaa dec in lds sub jnp mov pop ljmp xor cltd pop push rolb (bad) xor (bad) mov sti inc and int3 mov inc push pushf mov add jne movsb mov xchg sub ss imul sub sarl es outsl cmp push fcmovbe push lret xorl popf push pop int rcrb fnstsw cwtl mov mov push stos push das hlt fdivrp int3 xchg jae loop add popf mov out xchg adcb pop loopne adc xor pop jmp insb sub mov xor data16 dec adc mov bound (bad) mov pushf in test out dec loope icebp sbb imul je jp mov mov jnp dec pop sub mov into imul jg xchg mov seto dec cmp inc cmp stos hlt push pop ret push dec add divb adc aam fildll fcmovbe and popf inc sbb fistpll sbb mov pop loope iret jae leave lea inc nop into enter xchg sbb mov and arpl mov repz mov xchg stc push and scas mov or and fdivl into mov dec pop mov jp or out ret push fdivl sub rorl push ljmp (bad) mov fdivrl addb repnz jo dec adc pushf mov (bad) ljmp fimul bound pop xchg sub addr16 jmp (bad) sarb fisub push std mov sub mov pop test repz dec cli orl adc repnz aas clc fdivrl out adc adc hlt int3 dec fbld inc jo push lret push out and jg call adcb in mov pop call push mov in rcrb cmp movsl dec mul negl stos dec pop loop jg dec add adcb inc out sarl and es mov cmp sahf mov xchg dec stos adc dec cmp fildll fistl push pop enter fdivp in lock (bad) xlat lods mov sahf notl movsb add es bound mov push enter in imul jle fwait (bad) in lcall int jo (bad) ret xorb cmp (bad) sbb jmp cmpsl icebp push sahf push daa loop or int cmp lahf imul pop rclb insl call sub sub addr16 lcall mov and xor sbb ja dec pop add imul xchg mov into bound movsb cli hlt mov leave jmp clc mov push mov (bad) arpl std stos mov push mov das dec xor dec sub mov or pop xchg negb add push rcll mov (bad) cli mov xchg xor insb xchg leave dec test add dec mov cmp pop lret jo mov mov jle outsl mov cwtl mov popf sub jns pushf pop inc in je loopne fistpll fdivrp mov (bad) mov out jo stos fsub xchg (bad) jb es fmull (bad) xor xchg cli arpl sbb cmpsl enter mov cmc ja cwtl pop xor adc fbld cmp adc int lods popa rorl ja sbb (bad) lcall cmpl push loop cwtl add jmp popa add push cmp mov fstl pop pop add mov sub mov fcomip jge daa daa icebp jmp mov (bad) (bad) repnz mov pop adc mov push and add cmc popl call jae and xchg outsl pop ljmp jcxz dec pop imul push lea mov sti loop cld fisubr (bad) cmc xor hlt jg cmp stos jno adc mov aas mov aam sub mov sub (bad) jmp add cmp int3 movl data16 lret mov pop into and dec out pop mov mov movsb call push repnz outsl movsb cmpsb jns pop mov xchg jns xor aaa and mov xor xor lock (bad) or inc xchg cwtl xchg jl mov lods icebp push inc shl nop test mov test jp pushf or jmp jecxz sub sub lret std xor cmp sub mov or mov (bad) xor stos mov fidivr mov ds xor push ror adc jne xchg aam scas xchg ja or rcrl adc push lods mov loop adc (bad) das xor add iret sahf dec iret sbb mov pop fstp repz aas xchg (bad) push ja (bad) jnp mov push mov loope mov mov call (bad) fninit and mov dec xchg repnz or pusha dec or cmp xchg add fisub loopne popf jbe mov sbb das or add mov mov std loop mov decl dec pop adc cmpsb or push movsb adc push int3 test test pop push push loop dec cmp enter gs and adc sti and jb adc sti add test pop or enter jne (bad) pusha mov arpl pop mov cmp int3 cmpsl inc push adc push je cmp adc pusha lcall cs cmp mov test push jo hlt aaa xchg add mov pop in decb mov adc test cli mov stos inc iret or jns enter adc icebp add pop push flds cld iret lret cltd xchg dec (bad) mov aaa mov ror (bad) sbb loop jbe mov push adc mov sbb hlt sbb jns ja mov inc sahf jp dec dec sahf test xchg dec shrb out rcrb mov jecxz xchg (bad) scas les jg inc mov int3 xchg sti mov push out cld mov xor (bad) mov scas out cmp outsl in iret push adc rep enter sub mov pop sahf std xor ss inc push pop mov subl in (bad) sbb stos icebp sahf mov cld pop xchg mov (bad) push bound lods loop pop ret push and inc push cmp mov add jne arpl cmpsb mov roll xor imul push dec pushl addr16 mov outsb xchg loopne dec pop and movsl sbb loop sbb repz sub out jae add rol xchg push cli mov js cld test stos movl leave fs shlb aad jle xchg push sarb gs pushf mov stos xchg je bound jb ljmp lock loope iret (bad) mov inc out dec jne push xchg stos xchg loope push or xor jecxz lods inc mov fmuls dec dec inc adc xorl xlat push push jne cli mov mov lret in mov ret xchg scas call cmp and es cmc movsl or stos flds add sarl add inc cmc jb push fadds sub pop sahf movl fmul sub ja inc repz cmp sarl xor out repnz lret cmp mov stc repz test cmp ljmp aad (bad) xlat jae int3 popa pop sahf icebp xor out dec cmp mov inc and push int3 push repnz sub inc popl mov sbb and sarb and xchg pop mov and mov cli ret jg cmpsl out movsb les push xor ljmp and fstpl aaa idivl out add (bad) mov jp pushf loop mov add popf pop out jge ret or pushf lret cld out (bad) addr16 xchg clc mov aas outsb lcall out cwtl inc jne shrl outsl insl sbb sub pop lea (bad) pop mov std ljmp mov lock mov mov jne ljmp mov mov jo sub fadds add popf xor push mov jmp push mov cmpsb out mov lcall popf in xor xchg fsubrs xor pop mov push lcall leave cmp jl out pop jae jecxz xchg cs addr16 cmp xor test pop xor scas (bad) nop pop movsb iret js lahf and mov ja fstps pusha stc xchg xchg push mov rclb pop sub inc dec jnp scas in scas add and mov and (bad) jno jge add aaa test hlt xor data16 les push jmp sub decl jae jecxz jmp pop test (bad) mov cmp cs out fnop xchg cmp test gs xor xor nop sub and repnz pop test push sbb sbb xchg dec aad (bad) sbb push mov mov sub pop fcoml and std lods std mov cmp dec pusha pop jo mov ret sub sbbb pop fldl (bad) xchg pushf loope aaa inc push xlat into push das and aaa pop lock push jb ljmp (bad) jle xchg sbb jnp lds bnd mov ljmp pop or jbe test popf (bad) dec sbb sti jp jae adc mov pop in jnp,pt pop out call pop out jmp or xchg icebp lea int mov int jg fisttpl lret or inc (bad) std mov or mov adcl sub jnp add andb cmp and add loop cmp push cli roll push inc cmp flds ret sub jecxz ja push in mov xor out (bad) lods clc stos fwait shl adc ficoml fcmovnu roll ljmp jne (bad) jle mov xchg movsl fcompl cld push jmp loopne mov scas jmp mov fistl push ljmp push pop js repnz push insl pop cmp psllw or pop aas popf repnz jae sub xchg test adc xchg push std pushf cmp ja cmp addl push cmp lock addl push cmp incl add pop pop ret push push jne lcall inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc jae (bad) or enter cmp inc enter sub and adc cltd mov fldenv mov fisub sbb jmp out std aaa scas out lock in cmc js add ljmp cs pop push mov jnp add push je in fwait adc in cmp xlat xchg xchg loop faddl pop sbb mov insl mov xlat pop push outsb mov sahf cmpsl scas xor sbb inc adc test xor inc stc dec or pushf insb inc dec xor xchg sarl fwait orl inc cmp cld sahf or cwtl bound jmp sbb inc jno cs push cmp in into jge add inc mov pop sarb xchg repz and push ret and pop mov inc dec pop mov pusha or inc push sub pop xlat dec hlt cmp insb mov push int pusha xchg xchg cmp lea pusha fs pop cmp jle inc scas mov out loop push (bad) stc xor dec xorl clc lret daa fcom repnz or lahf xchg sub dec xchg adc or cmp xchg fldenv xchg jb loope adc mov cmp ja inc add mov call pusha ja insl push mov xchg (bad) int mov clc and loop xor or sub in pop stos push or jg repnz ficoml out push jno push and popa repz pop xchg out cwtl sub lock movsb lcall mov pop in rcll lcall nop pop test stos cmp sbb aas ljmp cwtl cltd hlt repz inc mov push out dec pop and xor cltd clc (bad) clc enter jmp (bad) repz mov sar mov push ret lcall lahf dec pop ds and (bad) imul inc (bad) ficomp dec or adc icebp rcrl jmp hlt jmp mov arpl jbe jp pop into cmp jbe popa xchg and jp pushf out scas dec pop push inc sub scas andl mov jbe cmp js cmp in cmp sub (bad) push ret aas dec inc jns fmuls or jl dec sahf jg shrb fistp imul insl lea dec or push xchg rcll push adc and fcompl lahf inc cwtl repz sub inc push stc xchg dec mov jmp push ljmp lret fnop sub add mov leave mov xchg add push in lcall mov xchg xchg mov imul xchg aam addr16 fnsave ds js mov clc xchg test leave popf lds pop das cmp push lret inc in push adc sub mov iret and outsl fstl aas xor repz scas pop pop in fimul cmpsl jno ja mov divl sub jns dec sub mov fdivp or inc mov fdivs cmp sbb jg ret mov cmpb pop idivl dec dec dec repz and lds repnz ds push fidivr out cli mov jmp xlat dec sbb pushf adc jbe rcrl jne ja arpl neg jp inc sbb sbbb pop adc xchg xchg stos adc fimul data16 cmc gs inc das dec icebp int3 cwtl sub inc daa and mov scas mov int3 jmp adc scas in or (bad) data16 (bad) mov mov std mov jns cwtl hlt ds sub sub scas fs mov push mov mov add int stc into aad mov test pop mov cmpsb jno cli aaa aas lret outsb aas iret inc fidivr cld (bad) and push jp (bad) lock push out andl pop dec imul xchg mov fdivs and mov insb sti test push jo sub fisub scas mov call ret clc add sub xchg dec xor jp cli stc mov addr16 fsubs repz sub shll dec inc xor mov lret das cmpsb push or adc repnz pusha and je push sub sahf cmpsb or mov fucomp clc rcrl aaa arpl dec add push sahf pop inc lods pusha jmp ret adc cmp add loope out shrb pop cmp arpl sbb xor push sub cli loope rorb ss int3 jbe out and (bad) mov push je repnz dec cmc mov ja push idivl pop int cmp popf mov subl iret inc and xor mov (bad) dec mov out or inc pop test sub dec lods inc bound scas fcoml fildl xchg sub cmpsb mov push and or out movsb pop shl sub adc sbb ljmp cmp aam xchg loopne mov into nop xlat push es mulb ret icebp xor je mov or in xchg xor cmc xorl adc popf cli std imul mov loopne outsl mov dec out pushf in sahf inc leave addr16 mov jae sbb in sbb push ljmp ja xor dec pop mov pop add (bad) rclb ret stc mov std add pusha pop insl lahf inc jmp and ret fbld cld in cmp cmp mov mov xchg aad fldenv lods mov inc push (bad) sub (bad) sarl mov mov movl cmp mov inc jb and test xor lock ljmp and mov dec enter jp jb pop xchg nop xor mov fdivl nop sub dec push sti and mov mov adc push es arpl xor es or out jne std fmull push jl mov bound mov inc jb adcl sbb imull push movsl or or mov dec lods jns or lahf subl mov add xchg lahf imul pusha cwtl call mull cltd jmp stos (bad) mov pop and dec out icebp ret lds cmp ret mov imul idivb icebp or insb mov lret mov inc or mov add jb cmpl stos (bad) fildl stos push or arpl or mov mov pop and rcll mov stos (bad) mov and xor popf (bad) (bad) xor dec out xlat test xchg mov not je push dec ljmp sbb daa int xor mov push sbb (bad) cli pusha (bad) jnp sbb les dec scas lcall out adc pop addr16 frstor mov sub add mov pop popa sahf push dec fimull mov daa ficom add lods lods and nop mov inc (bad) call lret ret sbb jge gs inc pop jns xchg push mov ss jecxz sbb inc fsubl sarl xlat ficoml (bad) setle aad pop mov cltd dec xor cmpsl (bad) out insb rclb jl aam insb sub andl cmc inc icebp adc cltd and or daa popa sarb (bad) ds test jle pop insl push roll mov icebp std (bad) sub pop mov js xor cltd aam fldcw jl fistpll push pop loop xor pop adc icebp dec mov dec test pop sbbb push popf sub (bad) pop cs mov popf mov sbb rorb add lret cld fsubl jle (bad) clc sbb add push das imul inc fcompl adc movsb (bad) push cmp (bad) jbe test pop xchg inc lahf aad adc (bad) sbb test mov ja jl cmp mov push out scas pop cmp addr16 ljmp aad inc mov cli sbb and mov sbb sub in and cli movsb in mov cmpsl push push pop pop xor aad hlt and rclb jbe popf les ja call lahf mov sbb sti test push push enter repnz mov repz divb cmp sbb xchg cmp jo out (bad) call and lcall lret push xchg gs out or sbb jg mul mov and xchg cmp mov loope iret cli out pop js (bad) stc inc push jae jle mov ds int ljmp xchg cmpsl mov popf ds mov jg (bad) ret cbtw mov push icebp jle test jbe fldenv adc mov insl mov mov push cmp dec outsl and jbe insb dec cltd mov enter or cwtl int add movsb mov push sub outsl add and movsl call mov sub imul jno cmpsl mov sub loopne xchg loopne mov mov lods cli jo jecxz pusha es pop cmpsb cmp jp ficom mov mov adc fdiv cmp jecxz icebp fistpl and inc mov sub dec inc sub adc rep test mov mov push and ja (bad) ljmp (bad) jae int3 dec std out mov cmpsl jecxz iret popa es add sub pop insl cmp aaa or std stc sub mov ficompl sti (bad) fcmovnu ljmp sbb dec or sbb push je xor mov outsl or mov repz add lea sbb add cmp sub xor gs dec mov ljmp jle xor cmp incb pop inc fstpl iret shlb imul xor mov adc pop in adc push mov (bad) pop dec or scas (bad) repnz sbb inc stos sub rorl out mov idivb sbb xor dec sbb (bad) mov into fnsave xor dec repz rcl mov popf dec (bad) adc (bad) outsl test add jns jns pushf add mov or push stos aas mov lock cmc mov cltd test pushf dec (bad) in xchg dec cmpsl aad cmp lea and lods pop jp aam mov cltd lret cmc test push cmp fcoms stos stc cs and cmpl mov outsb nop out mov add fsubr lret and pop add jae fdivrs jb cmp inc lcall dec jb xor jns or xchg mov push call leave call adc sbb xor sub cmp lds mov or mov mov mov dec repz mov pop enter out mov mov inc js dec lret daa sti repnz lret vcvtdq2pd ss fidivrl repz adc cwtl fs add inc inc sbb hlt push mov lahf mov push jecxz push je (bad) daa push jge in xchg imul imul (bad) out lods nop sbb mov xor ss sub xor mov mov hlt add bound repnz loopne cmpsl add cmp and loop push fistl mov lahf call in aad push jo fs mov (bad) mov scas add xchg std addr16 mov leave (bad) fldl pop pusha xor dec mov jns int sub test xor outsl lods ret sub out insl dec outsb insb sbb xchg mov jo adc xchg ficom aaa adc mov inc adc adc icebp inc popf xor icebp mov aam xor out mov adc xor cmp mov push lret pop insl pop test int jle sbb ret push cmp loop xchg mov faddp xlat fldcw in outsb sub mov mov (bad) pop (bad) jle fucomi sbb sub dec cmp cld add pop push into (bad) (bad) cld sbb dec adc sub mov sti xor xor aas movsl ret mov push xchg imull bound add and (bad) in mov sbb mov ljmp sbb lds roll sub xchg push lock xor jge,pn iret aas out mov ljmp adc std adc cwtl sub hlt jmp push repz push out pop xor mov fsubs and mov push xor shlb int rcrl push push sbb mov xchg mov sbb cmp jne pop loop sbb and mov mov cltd cwtl push mov push sbb imul add stos and (bad) sbb cmp push dec call xor push push xchg inc mov je mov xor icebp inc aaa and hlt sbb stos pushf lea dec repnz add adc push stos mov ret fwait in fimul dec aam xchg fsts cld sub sub ljmp arpl jecxz insl mov fdivr sub rorl leave movsb stc dec outsb mov inc jge loope sbb call lock test pop dec bound xor or cmc sbb repnz sub add popa leave cmp mov and dec cmp mov inc adc sub mov push daa pop imul pushf fs sbb inc sub fidivr dec ficomp xchg and pushf jge and leave adc and (bad) fs jl bound roll iret (bad) mov lahf xchg xor dec pop fidiv jge xchg mov cmpsl mov (bad) sub ret sub in and cmp jg incl and loop xchg idivl daa cmc or outsl popa mov dec pop push or aam add negl mov cmp fdivrl cmp fdivrl lock or sbb mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas adc fwait sbb or int3 xchg in push lret int3 pop and ds ret in scas mov push into adc lret lcall fsub out stc aaa jle inc repz jle add cmp push aam into mov add cmp inc ss pop xchg fwait and in pop (bad) cmpsl nop lahf dec mov (bad) inc and mov dec mov and push sub jb fcmovnb cld std cltd sub ds cli mov cmp add loop jle test cmp pop ss adc adc ret retw insl jbe or rcrb dec mov (bad) cltd lods dec adc sbb mov pop fisttpll test clc sti rcrb cmp stc sub arpl dec js nop fwait je,pn xor jle jns xchg movsl sub mov out fsubr outsb mov sarl push leave insl scas test xchg mov imul (bad) sarb jmp jecxz jecxz xchg es mov sbb xor icebp sti mov jno push mov das xchg nop scas pusha clc sub cmc push mov fisub mov divl push cld xchg in pop push adc mov hlt movsb fistp out inc cli fnstsw dec fistp into das mov sub sbb sarb lret push into add dec mov sbb dec scas aam xor test or inc lret out lea in adc add in push fistpl imul pop jecxz fisttpll sbb mov and inc pop sub dec mov push mov push jp pop ds rcll adc das cmp sub push repnz sbb fsubrs sbb out xlat sbb out mov or xchg and xchg jns repz mov stos cs (bad) in jl mov loopne cltd dec jl inc ret rcrb sbb mov fimul pop loopne,pt aas (bad) push cwtl and push pop lods dec cmpsb push mov aam jbe inc adc jae inc mov mov jo mov pop jle test je js testb or fs sub mov daa sub insb faddl rclb adc sub or or sti leave xor xchg mov cmc adc aad mov xchg sub mov dec int3 push sub pop in mov cmp sti cld in pusha mov jb dec dec movsb xchg out orb jmp sbb lea cmp in xor aad out sbbb ljmp and addr16 sub fidivr xchg mov aam pop sbb pop dec mov sub bound jge push cli and xchg cmp add out jge sbb (bad) iret (bad) push cmc pusha xor pop fidivr sub repnz mov xor ret (bad) aam aaa pop jle lods xchg mov jae (bad) in rcll pop jge or inc pop xchg pop xor fnstcw cld or mov push xlat push loopne (bad) xchg mov dec sbb fiaddl shlb fildl inc into pop test mov push popf sub gs jns leave jge inc push rcrl mov scas loopne mov aaa sbb mov pop mov xorl dec out test (bad) mov jae out mov jo mov xchg das aaa mov push popa inc scas add inc aam test push dec lahf jl or jmp and add leave dec test (bad) notb (bad) out lods dec add out adc xchg sbb popa xchg nop je shrb fldcw scas fdivr rcr lods lcall xor scas int3 cmpsb ja pop pop dec dec loopne jle (bad) mov out mov cmc sti mov cltd fisttp jecxz aam sub out adc mov fdivs jnp adc push mov push jns jnp mov push stos mov sbb or test sbb sbb into into pop mov fcoml out sub mov cli pop mov inc cltd loop jne mov scas out pop mov pusha movsb and xchg mov scas dec fwait je clc adc gs (bad) fdiv xor lahf cmc jns notb rclb jnp (bad) insl insb cmc sub pop fwait dec pop lahf in mov test lahf and in sti xor add xor lcall loopne lea fcmovnb sbb stos jo mov fbld mov scas aam data16 pop imul scas pop mov push clc mov in xor (bad) in in in lret push cmp sub leave je sub cltd lds mov push pop icebp and scas adc jle cli pushf cmpsb mov sti pop sbb out sbb std cs mov jne or (bad) hlt (bad) call inc and ja std push add jmp inc in es into jae aaa cltd stos ljmp imul sbb and (bad) fidiv aad cmp cmp das mov ss xchg inc pop sub shr pop cmc enter and cs loopne jle scas mov (bad) (bad) aad mov mov test mov xor and inc cld lock mov jae jae sahf jne jp jmp int3 sub fcompp xor popf dec sub out insl mov add dec pop imul mov cmp push dec push test and mov pusha ss das inc jae adc lea into scas test (bad) mov sbb fisub insl out loop cltd (bad) sub cmp das call rcr push shrb and jb (bad) add test and inc nop fpatan ja adc mov xchg sub popf ret sub dec lea scas sbb cmc sti jae fsubrl popf out cmc ret push mov stos divb jae and and cmc repnz inc jl cld fcmovu lock xchg pop pop push pop fdivrl outsb test out (bad) dec (bad) xchg popf pop shrl mov repz jnp pop mov mov movb mov lods std sub mov inc xor xchg mov cld or dec (bad) out push sarl dec xor movsl or sarb lock inc out mov sub fisttpl cmp outsb mul into sahf dec mov pop andb dec sbb mov inc inc call add popf push jns jge mov pop dec jmp bound and mov fwait cmp in lahf mov mov js,pt push sahf popa cld inc movsb add insb jmp nop adc mov mov popa cld pop in push imulb mov (bad) jns and daa mov sbb mov xchg cmp mov mov cmc push inc sbb mov mov test pop (bad) lods repz inc repnz arpl or popa int jle aad xchg sbb lret (bad) push cmp ret andb (bad) fsts sbb out test es test mov push inc dec cld loope and and mov js sub cli loopne push repnz or pop fs add and mov mov icebp rorb cs loop jp cmpsb dec sub popf mov lock pop call jmp or movsl repz icebp sub gs mov xchg pop lcall (bad) xchg mov add push or sbb je adc xor insl dec sbb push stos fstps (bad) sarb xchg (bad) (bad) push clc outsl adc subl lods inc push cmp xchg call jl scas xor xor leave imul or sub loopne mov ja icebp push jg mov (bad) (bad) daa xor or cmpsb cmpsb aad in or inc loopne,pt fnstcw fsubs test xor cld aad push jns pop mov jge popa lret frstor xor push cli ret es sub sbb dec cld test xor sbb daa mov mov movsb dec popl xchg aaa dec xorl mov adc sub and pop aam or js test xor jns ret fmuls shll xchg pop leave jmp (bad) addr16 in mov push mov cwtl incl fs pop sbb sub lret xchg sbb push adc cwtl test xchg (bad) scas scas add jo repnz mov pop sbb inc mov in mov std scas push cmc and jae sbb insb push mov fisttpll adc adc ret movsb insl add mov addr16 addr16 test sbb mov or push cltd lret push xchg push jb ret push mov int3 jno loop lods outsb mov mov bound add stos or dec cs mov call lcall scas push xchg jne push xor lret and arpl out roll rorl xor js mov movl mov sbb aas mov mov mov mov sub lret imul sub repnz push inc jne sub jns ficoml pop iret clc jp add or and xchg pushf test jge int3 cmp adcb mov lock jbe push sbb mov xchg mov jns icebp xchg pop sahf popa outsl sbb nop iret stc mov inc lds mov (bad) not mov leave iret xor cmp push push dec jb arpl out add jmp les or in and jno inc pop fwait push into cltd mov inc sbb lret (bad) jae mov mov pop or popf and shr add mov xchg jae sbb push hlt insb movsl rorb push mov ret lods and mov stos icebp sub dec mov stos repnz dec mov mov mov in mov cld jmp adc (bad) mov sbb sahf call popf sbb nop xlat push rorl mov scas scas (bad) out sub inc cmp inc cmpsb in sti xor add arpl xor xchg jae mov dec xchg mov mov pop xchg cmp ret lcall icebp xor cmc cli sub xor push les imul mov push clc ss out loopne stos pop out pushf dec jl push mov mov addr16 lds mov add mov push scas cmpsb jo jnp daa jno fsub les xadd out lahf pop adc cwtl pop and push xor fldcw lahf sbb push mov ljmp cli jle jae fidivl imul test xor stc push mov aas mov in dec (bad) xchg push lds out dec lret xchg sahf pop cli andl pop ds xor ja lret scas and hlt mov ja fwait (bad) subl lods lret (bad) sbb aad xor imul adc cmpsl mov push js cmc pop dec inc cld fnstcw push mov icebp gs xchg test lods mov mov gs loop push imul xor mov movsl dec dec and jb push stos dec je icebp stos fist sti inc bound inc xchg adc cmpsb outsl lds (bad) adc shl ljmp fisubr dec sub call sahf pop divl push xchg xor ret mov sahf mov testb repnz pop xor jecxz mov lahf inc push jmp push sub or clc sarl push xchg xchg sbb pop sti (bad) jb adc or jp jae adc jae stc popf jg dec cmp into dec arpl std jno addr16 jnp das mov mov jle fiaddl mov cmp inc repnz (bad) imulb mov fcomps dec xchg and clc inc loop inc stos ss xchg (bad) jae dec ss movsb popf imul sub push adc push inc clc lock or mov repz test mul jmp lret imul jg pop dec insl push mov icebp out jl dec and (bad) inc faddl fistpl pop mov push ds subl and and sahf arpl popf mov mov mov xor pop bswap subl in aad add movsl cwtl (bad) es pop aad mov add pop fdivp popa stos ret push jle add jae loope and mov jbe das ffree ret call jne sub loope aam add pop mov addr16 mov cmc mov nop xchg mov mov or setnp jle xor xchg or enter xchg pop and scas mov cmp push scas xor pusha scas sub fistpll sub pop lods pusha sub jno mov mov mov push js pop out mov jbe ret mov pop pusha add xor mov cmp add xor rclb or sbb daa sub mov dec sub push arpl pop xchg in mov flds jg arpl push mov (bad) cmpsl lahf mov mov xor addr16 cmc bound jl pop lret fisttpl movsl (bad) (bad) leave xor xchg lea xchg int jb leave cmc pop out movsl xchg dec jl mov (bad) push mov cli fs xchg jg roll xor pop sti stos ss jbe,pn lcall (bad) leave leave xchg or addr16 add jecxz cltd xor pop inc cld adc std jno movsb dec add inc inc aad sub sub add mov mov movsl loope hlt in or mov iret adc loop push cli push insb sti push pop scas or push xchg (bad) insb pushf pop rcll mov fadd arpl ret inc bound decl pop fs test pop push mov lds fmuls sbb pop (bad) fildl pop ja cld int cmpsl jae mov icebp daa push mov inc mov jg sub in cmpsb dec cmp xchg cmp jbe aas or sti or jmp adc (bad) das add scas daa mov in mov dec cmp mov dec cmp mov dec cmp mov dec cmp decl sar ds (bad) or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc push lock pop dec ja xchg xor xchg shll adc lcall and out sbb repz scas jmp add roll loope imul bnd and cmc arpl pop push mov into (bad) ljmpw pusha and js std mov outsl js xchg loop mov xbegin inc dec pop push adc outsb fisubl sub lret mov push push movsl mov cmp xlat dec and popa mov repz pop adc sub mov ljmp mov in push xchg imul lret push add pop fcoms and in adc add aas shll jb sbb mov outsl fistpl int lea mov inc lods add xor jbe fldt push fcoml and (bad) push mov adc loop and mov adc xchg push mov mov out loope stos lcall cvtpi2ps scas cmp jns lret jle push scas cmp pusha lock dec sub insl xchg mov mov inc ret aam gs dec mov cmp fisubrl notl aas dec add or push jge ficompl fwait enter fcompp jne mov aad roll jl and test aas mov pop jo xchg and push ret xchg mov sti (bad) push push (bad) pop mov cltd mov es iret and push mov mov mov mov push cmc stos lret lret out hlt mov fistpll mov (bad) mov sub cld sahf lods aad bound sbb into sub sbb mov lods hlt out cld and hlt into ss and rcll pop mov jp sbb repnz jno xchg sbb pop jbe xchg mov xchg imul dec mov loopne shlb push popa ljmp pop sub adc mov imul std adc daa rcrl cmp inc and push xor in mov sub push cmp jmp std ja subl lods std inc daa dec mov enter orb sub or pop cmp sbb call (bad) mov xor xchg jb shr mov insl stos bound dec pusha fsubrs leave aad aad sbb mov sbb icebp pop cmpsl ror pop lret mov in rcrb fwait adc push je mov repnz sbb bound cld xor cmp mov cwtl sub sar pop cli sub mov cmpsl pop xor jne insb inc fadds loope shr mov js cltd mov xchg cmp pop repz cmp pop scas adc or shlb sub adc inc jecxz and xor inc loop pop scas aaa test lds inc lea std loope iret pop pmaxub out xchg inc mov mov jae mov aad fildl pushf ja arpl jl xor lds (bad) pushf adc jno add out push clc xchg cwtl mov adc dec test cmp movsl ds jmp pop xor sahf jmp inc sbb sub dec sti jecxz lock std fdivl leave pop xor pop mov add pop ljmp cmp out inc ror bnd xor sbb cmpsb dec rcll jo cmp pop cmp cmp in rol popa shrl jmp and hlt rorl add or mov lret push mov and push stos or jns aaa arpl fbld dec mov sub mov ja pop popf push ror push lahf and push or pusha stc lcall adc lock fcomps mov mov xor movsl push jge and mov (bad) insb data16 mov aas pop mov fisub int3 push test push push (bad) fs sub sbb and xorl dec mov sub sbb inc dec xchg data16 (bad) out xchg (bad) lods lahf push (bad) aaa in mov pop xchg jl stc pusha ja sarb add cld sbb int3 mov orb cmc in jecxz aas (bad) out je add xor jbe inc or (bad) inc outsb or sahf (bad) dec pop es mov clc dec lcall cmp test jecxz lock jmp sarb push ret or adc jo aaa ds or (bad) ret rclb call fwait mov rclb adc xchg mov (bad) std fcoml out cmp int3 in cmp js jae fwait push fdivrs arpl lcall fsubrp out pop icebp dec dec mov add jns outsl shlb or inc les clc mov lock stos pop or cmpsl iret inc cld imul stos into daa lea push popa xor push sub (bad) mov frstor out xor xchg xchg int jo test mov ficomp fsubrl mov pop mov xor loopne out aad bound out daa jo (bad) lret lods cmp add fs mov rclb (bad) cmp jl mov in mov mov pop push (bad) repnz cli xor xor inc pop pop movsb insl mov dec and jbe pop xchg sbb divb mov xor xchg out (bad) movsl sub movsl push adc adc es mov shll adc dec daa insb inc mov enter fbld (bad) dec mov fsubrs sbb lcall add ljmp ljmp push das rcrb out insl in and push out cltd sbb fldcw std and sub (bad) (bad) jae ret jle data16 test pop in mov outsl (bad) sbb mov and xchg andnps push loope cmc lea arpl cmp dec cmc adc pop inc mov mov xchg lahf out mov cmp iret loopne sarb orl mov mov mov and jno xchg or jge cmp jge stos cmp and repnz mov push dec dec pop clc and push imul cmp sbb dec imul cmp cmp (bad) js push jle sahf int stc xchg stos pop mov cmc mov insl jg xchg mov push jl test in sub ficoml outsl mov popf and lret leave lahf daa xchg pop xor pop shld mov int cmp pusha clc sbb lods sahf (bad) pop and mov insb xchg add lret int3 cmpsb ljmp mov sub into and jno xchg ret adc bnd frstor (bad) and test out bound (bad) movsl jo or push pop mov (bad) dec aad pop int stc stc inc and push orb xchg (bad) stos fsubr push mov imul push mov xchg out mov lret xor jne lods fistpll (bad) test xchg leave pop add sbb xchg dec lret ss cmp mov es inc fs sub xor cmpsb out or inc add shll cmp dec fstpl popf fsubrs push xchg sbb jae jns repz sti pop cwtl ss lret xchg xchg movsb lds ljmp inc test test icebp shll (bad) xor add je mov std test mov imul es stos mov inc js std push dec dec pop sbb test xchg out insl add scas pop mov pusha stc aas jo in loope mov popa movsl lods xchg addr16 lahf cmp insb and out xchg and jo movsb jnp mov xor rcll das jge mov fucomp adc fbld sbb stos arpl out sbb mov mov rorb fcompl (bad) jbe jg pop test adc or sar xchg xor mov push xchg test (bad) cmp jmp (bad) cli mov adc push fwait out lret adc add jecxz dec repnz pop jmp inc mov std dec ljmp loop xchg outsl xchg jge lcall xchg (bad) fcmovne xchg lcall leave repz pop push fnop test leave leave aas push insl arpl mov sub in daa mov mov or in cwtl sahf test dec jge adcl stos cmp pop test ret inc pop mov push movsb add divb mov (bad) sbb xor or mov icebp fldt mov mov ss jae inc (bad) (bad) addr16 pop sbb aas insb pop cmc in sbb pop pop inc mov mov insl bnd xchg stc in jae lea cmp into push pop out sbb sub fmul lret cmp xor stos cmpsl (bad) pop xchg push mov push sbb jp push imul out int3 jno dec fnstcw sub ljmp pop decl inc push iret push call (bad) mov push sub fisttpl inc in push mov in mov dec test mov fiadd test out in ja movsl mov repnz mov cmc mov pop daa (bad) add pop or jmp push aam and pop in lret adc and adc cltd or mov jecxz scas iret lods mov mov gs jecxz adc clc pop xchg sahf sti jb mov or sub dec xor xchg loop out imul jbe inc xchg aad out xchg popf lods jge add fnstenv (bad) clc and cmp add push mov mov mov popf mov cld insb ret jnp popa or popa cli sub mov pop xchg add cld dec mov aam inc rcr fldenv fcomp movl (bad) dec add mov push mov inc lods sbb ss add int3 testb jno (bad) leave push int push popf fidiv mov outsb std push mov mov and mov hlt jge sbb ss add add xor movsb cmp repz ljmp movsl pop xorb cmp push sbb in fadds push mov aaa xchg cld mov push jnp les in adc out xchg sub mov xchg shlb sub ret xchg lods mov pusha lea test out out out insb mov scas enter jecxz inc ret pop gs xchg pushf stc repz mov dec data16 mov sbb add sbb test outsb cmc inc cli sub or mov sbb cld mov sti sbb enter sbb xlat push sbb push lock cwtl stc sub pushf jbe mov leave mov dec cltd mov cmp xlat inc xchg xorb pop adc imul mov incb rclb out mov adc add sbb mov out mov insl cmp xor test dec adc dec cltd repnz cmpsb adc popf mov adc cld mov sbb aaa lcall adc mov mov sarb xchg pop mov jae inc lock mov push shld add jle nop mov lods sbb sbb imul int pop jecxz outsl dec in pop sahf push mov divl ljmp mov arpl push push int das lret jmp (bad) (bad) xchg inc test sbb ds inc xor cmp in mov jecxz pop fwait popa mov jno jb sub mov add nop jbe mov xchg or in imul movsl aam dec jg out mov adc movsl daa out (bad) data16 and divb mov fstpl aam cltd dec ret jle xor jl push enter mov adc in adc je stc sub stc sub das cwtl sbb js cmp dec iret aam jne cmp inc push mov jb cmovg and jns incl inc jns add jle pushf aad aaa pop scas push jmp dec popa xchg mov or add dec add jns cmp xor mov stc pop jl push lock out xor jno out ret sub rcrb std fnstcw lods add loop pop and push ljmp mov out jae jg sbb out test sbb sbb mov scas or cld inc mov mov push fdivrl lcall fldl dec ret (bad) ror inc test inc push jmp adc sub jg mov sub les sbb ret ljmp in and fnop mov movsb add xor add outsl scas aas insb cmp (bad) jle sbb hlt imul push es rcr mov jno adc pop nop xlat pop fwait push or sub stc in cld mov mov rcll (bad) imul cmp mov repnz or mov sub cmp shr and sub cmpb xchg mov pop mov mov dec sarl js pop pop iret inc fwait dec mov sub scas scas cs dec (bad) jns jl adc fmuls xlat push lock insb mov adc fcmove lea adc mov add cmc les add cs rcr mov or loope inc or insl dec fmuls add pop jae jbe push hlt dec pop fisubr sub or cs aam mov push xor bound shl ds call xlat ficom mov mov dec or pop add fldl sub test push (bad) mov shrb sub imul xor xchg mov fbld roll xor mov sub push mov inc xor sub (bad) mov and outsb pusha insb mov lcall sbb cmp sub inc mov int loopne movsb nop cwtl dec mulb or jb xchg and xchg fs out lea or (bad) into enter xchg mov inc cmc out mov xchg das cmp pop dec dec sub movsb into xorb push mov jecxz xchg pop xchg (bad) outsl sbb into aam out sub and in mov das pop push repz ljmp mov xchg fsubp in ljmp mov negl jp call push cmp mov jp incl add aas or inc insb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb jecxz lock popa int3 leave insl mov je xor xor fnsave mov imul ljmp idiv sbb (bad) loope cmp out add popl incl lods pop orb cmpsl rol cmpsb jbe (bad) loop int3 mov loope enter aam (bad) int ret fildll loope inc insl frstor aas add cmp sbb sbb cmpsb popa jle,pt cmp mov mov pop and lea add push test in fcom jo inc mov jns or mov jle leave pop xchg cmpl inc insl push jmp sub sbb cmp dec sub sub test pop in rcrl push mov jp jne (bad) sbb cmpl xor repnz cmp sub mov iret xchg out adc (bad) push cmp jle pop dec sub mov jecxz fsubl ror out rclb sub int3 and ret (bad) or cmovno icebp sub imul inc and ficoml adc shlb cld sahf jno icebp ja mov jnp int popf psrlw sti dec pop neg pop test ret sbb cltd and hlt and aam adc sti and and iret hlt and pop xchg out mov inc fbstp arpl dec call aaa int lcall mov mov mov bound fwait lds iret cmp pop lods mov scas mov inc adc ljmp cmpsl cld push mov push (bad) jle adc hlt repz and pop inc ret rol push cmpsb bound push (bad) jg cmp adc cli clc fdivp inc jb sahf jecxz pop in pushfw lods loopne (bad) xchg clc adc xlat add xor icebp int3 push or jmp imul or push adc mov sar mov mov fisubr jp insb pop mov call (bad) jecxz outsl adc mov push mov cmp jo into idivl jl (bad) dec push xor sbb sbb cmpsb dec lds jne loope sbb jne jl pop jecxz arpl sbb insb adc pop ja add xchg test cmpl movl jecxz bound (bad) data16 pusha sub push loopne xor scas mov cli pop fs gs jl aad and enter lea and addr16 push fldenv mov ja add cmc ret pushf lea fcompl cmp jno sub push fidivl xchg pop test mov in and push es and inc pushf jne xor out and xlat xchg mov sbb dec adc add inc lahf aam nopl fidivrl jecxz loopne jmp popf pop fsubrl mov push pop and mov pop jno xchg and xor pop xchg cmp mov lcall adc pop rcrl or mov mov jl std (bad) xor (bad) jecxz je bound mov sysret sbb movsb inc mov jle inc mov mov mov and stc sbb (bad) hlt in fisub outsl pop jmp push (bad) testb push dec jp lds cmc xchg ret mov sbb sbb aad xor xchg jo mov mov mov hlt data16 mul test mov leave repz push sbb out sub aaa stos inc es mov add sbb (bad) popa loope cwtl xchg mov sbb lret and xchg mov xor je ficompl mov ret popa fist and dec add sub mov jp mov inc cmpl xchg mov xor sub dec jns clc jne stc mov inc clc xchg xor xlat mov scas addl mov outsl lcall mov nop js leave push dec cmpsl call inc pop mov test pop stos cmp mov cmp cs (bad) fistpll cmpsb shll out xchg lods sti push push sub or (bad) cmp push movsl gs cltd dec xchg pop xor psrlw adc aad idivb push cmp popf insl or lock ljmp xlat pop out imul mov sbb jbe (bad) ja xchg cmp pop int push pop ds (bad) push shrl addr16 cmp aas movsb xchg mov insl xchg cltd ret add sbb push cs xchg lods fisttp adc inc call sbb xchg imul mov push test lret movaps arpl mov test dec ds cld imul push mov mov mov and sbb adc push push leave cld cmp jecxz into xchg fdivrl lcall mov pop cltd cs push sub fsub adc fisubrl negl daa sti data16 push add cmp insb inc xchg cwtl push idivl push pop pop out nop sub lret add jo loope shl pop fxtract dec adc aaa jno push cmp dec lcall test jp adc out inc sbb (bad) mov adc push fistpl in and add cltd xor add push dec mov mov test ret fistp dec adc inc loope jbe mov dec push aas pushf in xchg pop enter dec pop mov adc rorl pop cmp xor jg xor mov jecxz add cwtl lock pop add daa int jmp fs jne imul clc xchg push cmp icebp sbb sub mov call mov sub aaa dec jg in repz fistpl mov aas fs (bad) mov icebp cmp dec lret (bad) lods jge pop sub dec sub (bad) nop inc shlb push imul out out mov test mov shrl pushf add verw mov adc ljmp xor int3 sub lods cmp adc cmp lcall pop sbb cmp std xchg jne or pop outsl jnp cmc nop mov enter and cli lods and adc cltd push fisubl xor inc push inc fwait or mov ljmp fwait mov dec aad rclb sahf loopne xchg loop dec adc gs xorl movsb outsl jae lahf test repz pop popa inc outsl cmpsb push outsb popa or mov movsb sub adc jne (bad) jb cmp mov mov mov aad push cmp clc xchg mov jl cmpsl pusha lahf mov repnz pop (bad) sti (bad) xchg pop lods fs dec stc lcall lods adc pop out add popa mov cmp mov adc testl stos test enter push loope outsb aam data16 pop (bad) mov ret dec dec (bad) ja adc jecxz cmp pop rcl cmpl ror pop arpl aad movsl les adc lods (bad) fisttpl cmp aas popf and into cwtl call outsb add push shrl mov push rcr mov in mov aaa mov hlt pop push ja sti out push aaa push and mov or out sub inc shr scas lret xchg test ficomp mov in xlat or jo in mov xor xor cli mov fnstsw mov test push scas pop pop pop fwait mov xchg int dec dec loop xchg inc lock loope pop mov in loope or es loopne xor bound insb xchg (bad) adc out arpl cltd mov pop cmp std pusha pop sti shll data16 pop push call push (bad) imul mov or jl jge mov lds jg jbe js icebp push test xlat xorb push fidivrl cwtl outsb fisubl cmc adc pop sti fldcw cltd jmp cmp jb movsb xor clc add cmc mov add xchg mov fistl (bad) into into ror mov test lods jnp jo jecxz jecxz mov jl stos adc mov inc and inc xchg test cmp pop jae fstps stc fldcw stos mov mov data16 nop jecxz adc and dec dec arpl mov jg or mov mov adc mov sub sbb cmpl add lcall loop fcomp dec dec mov jb dec ss mul sahf jmp cmpsl push mov pushw jnp jl repz pop and push arpl cmp call test adc jle loope add sub jo push lock pop insl fsubp repnz add and mov popa dec mov repz cmp and mov outsl mov movsl xor (bad) leave mov ss sub scas (bad) cltd mov imul lods xorl test mov andb imul xchg imul fcmovb out or inc mov push jno or jnp mov adc movsl das or cmp in gs sbb xchg into xor push outsl jne xlat enter cmp sub mov dec adc fdivrs outsb out ljmp or and push sub add stos mov clc idivb shrb pushw stos sub out (bad) lock cli dec mov iret andps pop xchg or aas cli or push jle or xchg lea ljmp jbe pusha cmc xchg xor jecxz enter inc sti mov stos push fmull insb pop sbb jg jle inc lret and push xchg sbb (bad) clc (bad) push outsl pop add (bad) adc inc mov insb (bad) and xchg ret lea xchg inc lods lock pop in dec add push sbb fidivr test xchg rcl mov mov or popf sbb insb test movsl dec popf mov mov push subl xor jmp sahf or pop popf jo inc out icebp fwait lods iret pop or call jno push lods jne cmp jo out inc sub adc (bad) xor orl push pop iret inc and dec dec sub icebp cmpb xor sub mull adc xor mov xor fwait scas mov mov pop out in dec dec mov loope push fdiv sub mov int3 sub hlt sbb scas xor mov das sahf adc pop sub push xchg rep mov mov cmp push mov int3 push (bad) and icebp xchg push mov push or pop (bad) aaa cmp stos adc or loopne lods cmp sub sub enter es lret xor call push movsb pop pop push lds imul sbb das lock mov xchg push mov leave imul ret or test xor out pop sbb es fcom mov fidiv pop popa xor cmc push cwtl call inc cmp ds or sbb movsb insl mov std hlt push es mov push mov mov orl jmp sub sub movsb adc lds lcall flds push dec enter xchg sub aas movsb mov cmp xor insl pop fstpt add cld adc lds lock inc dec cmc mov cltd mov dec test lahf mov cmp jge pop repz jg mov iret xchg jge mov adc lock rolb push call xor add lock das or mov lret or cmp push cmp xchg loopne cmpsb negl push popa mov es mov pop je push lret jle cmp pusha daa aaa jns outsl xchg movsb jne mov dec push mov pushf sbb repz mul mov jae pop fiaddl adc sbbb sti cmp mov ljmpw xchg cwtl push push xchg mov mov pop xchg fwait lods and inc (bad) jl dec test mov fxch fisub and inc xchg jae repz ret mov dec xor cwtl xlat xor stc mov stos enter adc call call inc pop incb ljmp icebp pop xor fwait cmp adc xchg push lock sbb mov inc jae xrelease or mov movsl add cli rclb add dec and push daa push outsl xchg imul adc jns out ljmp aas insb test adc repnz dec add cld mov lret sahf std sbb iret lahf adc loopne cltd mov pop or mov bound outsb sbb dec jecxz inc in jge fnstenv ror out and push mov mov adc push stos mov cwtl mov push scas data16 int inc adc xor mov cld push sbb leave stos repnz inc mov jmp aam aad in es movsl adc xor xchg (bad) pop in xchg (bad) jmp rorl test sub jecxz or add mov push leave and pushf pop push mov (bad) pop rclb mov jbe insb push daa stc out (bad) pushl or sub sub xlat jae adc add popa sbb je xlat dec rcll push mov jno loope ljmp jb movsl outsb mov ret inc stos je cmp xor imul shrl xchg mov or aas arpl sbb pop mov mov pushl ret jnp repnz cmp pop aaa mov sbb loop and (bad) jle or lods cmc sbb add mov fcmovnu mov push aaa jne cmp (bad) call clc lahf cmp or and (bad) je inc push inc test iret mov and xchg lea ss hlt jb rorl mov lahf mov adc loope or loop insb scas jno push ja pop andl rcr xchg imul leave pushf shll jbe pop hlt mov mov sub sti ja movsl (bad) out mov scas pop xchg andnps lea ss inc inc subl dec mov fdivrs cmp fldl xor ja cmp mov jp call push cmp clc bswap data16 push push ret add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add outsb add add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add add dec inc inc push push pop or or in lcall xor mov push mov outsl jg xchg mov out mov fwait movsl outsl lahf lcall mov pop std scas or jp ret jg outsl and out mov push jo xchg xlat jg xchg push daa push mov mov pop pop mov loop push xor jl es xor jecxz stc pop (bad) xlat fsubr xchg mov sti and imul sbb inc fisubr stos jb jno cmc aas jle jl aas mov es aad mov (bad) insb in xor jg sbb mov mov popf xchg cmp adc add push xor inc shrl add (bad) push xor inc shrl add (bad) push xor inc shrl add (bad) push xor inc shrl add (bad) push inc add pusha add (bad) xchg pop jnp jo xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push adc cmp (bad) xor xor push sbb inc or pop add or dec cmpsl in jmp xlat jnp jecxz mov add push add imul jmp add scas inc ja div cmp ds sbb in push fiadd mov cmp inc ds nop fidiv adc rclb pop fcomps xchg jge cmpsl adc jno pusha xor pop (bad) popa fidivr sarl push pop cmpsl inc pop lock xor test dec (bad) jns repz and mov mov repnz scas imul dec xchg inc mov jns cld prefetchwt1 jbe add xchg int cmp cwtl pop insb adc ds adc push push push xchg inc add insl dec fsubr add test stos inc jb dec stos mov sub cmp mov bound adc je call mov jle push (bad) stc cwtl jle xlat out in stc repnz pop xchg ret mov pop in inc test cmpsl push in mov mov xor jmp ja jle cs or pop sbb cmp dec loopne cmp iret cmpsl loop push xor push xchg jg xchg push aad jbe jnp leave lods movsl sbb add pop or or pop mov scas cmpb mov mov ret leave add iret test in inc loop sbb rcrb (bad) scas mov out and out cwtl ret cmp ficomp in xor sub (bad) push mov adc mov lods rcll adc mov lret sub movsl (bad) dec xor xlat xor xchg inc js aam sarl push cmpsl jp fisub inc inc aaa pop (bad) in cmp inc (bad) jge pop push aam and dec ret fsubr iret sbb pop loope fcomi xchg lods pop and lea push mov xor test das jbe stos xor mov push add push fwait sbb mov lahf fs lcall das add sub xor orl insb insb js cmp (bad) cmpsb jns or add enter out lahf add ja xchg push stc outsl mov movsb imul movsb adc xor mov adc bound sub ss iret xor fimull (bad) adc adc or mov xchg aad imul jp ret xchg push (bad) mov icebp movsb sbb and xchg int dec out sbb dec loopne jg cmpsb rcll mov cltd xchg inc frstor rcll push imul mov and add adc pop pop loope add or stos mov mov popl dec pop jg push movsl and push jmp int xor dec popa outsl xchg scas xlat or dec nop loope xchg stos sahf xchg rcll pop test mov mov lcall mov xchg (bad) mov sbb adc xor test out loope adc adc sub out add fidivr sub mov mov mov daa das int (bad) mov pop dec jae daa (bad) xor mov xlat mov mov int3 xchg jecxz add xlat fisttpll xchg sbb xchg lea fs dec lock into xlat in in jo (bad) in dec rclb imul aad dec ds hlt pop or in inc outsl or add mov movsl lret mov pop clc jle push cmp ret adc in sbb jl cmpsl lcall mov pop adc lahf fwait adc mov pop cmp adc sbb add push mov mov int3 xchg dec inc sti or dec bound das lcall movsb mov iret dec cmc inc ja aaa iret inc sahf mov pop push les out jne push xchg dec (bad) xchg (bad) sbb fild insb dec xor pop xor jae ret mov mov sbb (bad) test xlat mov cmp and lods and inc jno out lcall loop aas lahf or mov sub jbe mov insl fisubrl mov mov (bad) cs xor sbb push icebp jmp loopne pop jge fidivrl les jg mov ss sbb or cld sbb (bad) bound (bad) je mov jg jecxz shll cmp test stos stc push mov stos les cmp popa mov sbbl movsb dec scas fstpt cmp test adc add icebp clc xor sub scas sbb mov pop dec (bad) imul subb (bad) sbb aam lcall inc xchg dec push cmp or fcmovne in loop sbb mov xor test mov jecxz add scas xchg jle incb dec xor and xlat cmp cli mov popa iret xor loop data16 insl mov rcll lds leave cmp fs dec das add push or test cmp and stos push test push dec xchg xor mov mov iret mov jecxz jbe mov mov mov add push lret push std push cmc shrl out sub add lods mov xchg or dec jmp jp push push das icebp xchg repz lds ljmp les clc fidivrl mov aam int3 pop fldl jns (bad) xchg dec mov inc insl cmp imull out sbb xchg cs (bad) jae mov xor fadds movsb inc inc lcall cli test cmp xchg lods xchg pop dec mov mov dec add jae call push (bad) ret cmp cmp adc sahf jae js sub hlt jbe adc mov sbbb test mov dec mov inc int ret add repz in pop in sub int3 dec insb icebp pushf mov icebp xor adcl mov lock (bad) out pushl jo (bad) add sub enter nop xchg adc enter jnp or xchg lret sbb pop jbe adcl bound (bad) cmp adc cmc add push sbb js (bad) xor lds (bad) jmp (bad) xchg add push dec pop jne out pop push and pop sbb mov int int xchg idivb jg into ss mov sub sub cltd xchg loopne xor outsl frstor mov mov adc out lods sub loope push sbb jge push cmc push (bad) popa ret xor xchg or pop mov rcrl popl cmpl and cmp popf and mov push insl les scas les jl test rclb enter pop scas ret test cmpsl lods aad iret push cmpsb mov hlt bound mov mov pop mov das mov cmp push ror ret xor std pop push imul dec cmp aaa pop cmp xor pop ret mov inc fisubl pop fnstsw cmp scas (bad) icebp nop movsl sarb dec adc lcall xlat xchg xchg cmp cmp lock (bad) pop (bad) or pop mov jle and pushf push push adc dec push cmc arpl mov inc mov jb movl mov aad jl xchg popa sahf cli pop je sbb xchg jnp stc xor orl (bad) sub enter xchg and mov push inc jl lock adc pop fcomps mov scas cwtl popa into cmc loopne int3 xlat or or push popf addr16 pop push imul inc add add xor mov xchg std jp add add dec dec jnp in push jl xor inc (bad) pushf (bad) rorl cmp cli (bad) lock mov clc xchg aad inc dec in inc into push sub out ljmp test scas sbb repnz (bad) ss test imul scas and inc pop add loope stos mov dec jge fwait jl les xor add das pop xor iret and aaa xchg mov sbb inc jle dec pop mov in inc iret ljmp adc dec or test push icebp divl fisttpl adc lea jne push dec imul stc add hlt sbb popa xor test xchg inc push xor sbb mov testb xchg cmp mov and les dec lea cmp push int3 mov je and sub pop push mov dec sbb lods dec and arpl pop gs cmp lahf jge jb lret cwtl pusha sub mov add in dec bound enter mov lock or xor bound push sub jno mov into adcl es sbb mov ficom jb andl sbb rol add nop jbe mov test ds sahf loope mov cmc dec out lds movsl ss aaa sbb in push push insb mov jb xchg jle sbb dec adc mov imul and arpl cli ss mov out mov inc in push mov iret mov gs pop cmp jne rcl ss pushf fabs imul repz xchg cs pop popa jbe cmp lret repz xchg or loop roll lds sub cmc xchg mov fldenv or xor mov add dec (bad) aaa inc mov add xor sbb xor sub stc out shr mov dec mov (bad) sub fwait or aaa add xor outsb adc mov pop je repnz adc imul fmuls dec mov aad inc imul stos and lahf mov enter push popa out mov mov push sbb xor dec jb xchg (bad) clc adc enter push and hlt imul lods mov fstps add in jg mov fstpt dec (bad) mov cmc fs lds sub mov jle cli pop sahf (bad) fsubs sub cli cmp jno mov jl imul pop ss jne ja outsb call leave and gs rol icebp push sbb fisttp mov cli stos xor cmp add loope pop inc mov mov nop inc push pop std sub shr push das int3 push test std pop cmp mov out test mov sbb and icebp mov or insl cmp sarb add pop aam dec xor lds ja xchg and subl nop jge mov dec scas (bad) subb jl push enter or xchg sub mov sub in cmpsl sbb or (bad) sub mov es clc popa fwait mov lcall repz outsl sbb (bad) lcall in jmp stos push cli sub push loop sar test cld sti rcrb xor outsl jmp fbld lods adc xor jbe call mov xor call inc cwtl rcll pop push (bad) jb and cmp popa lods test pop jg mov test ss jnp fisub inc add aas sbb popa push and test fcoml ret out dec test sbb jmp idivb cmp aas xchg add xchg prefetch mov outsb (bad) mov rol sahf sbb (bad) aad add push loop cmc into fldpi and cmpl or test xchg rorb jecxz aaa repz mov cmpsb xchg mov mov xchg es mov jb jnp jne lods fsin xchg push imul lds (bad) out sahf push div jne,pt xchg mov jae insl xlat sub sub cmc into fild inc es into add adc push or test mov xor or mov push faddl das (bad) in cmp mov cltd cli pusha xor mov add cmp mov pop push loopne ljmp jo aam lcall mov mov xor stos mov add pop aas enter std mov dec gs js fucomp add (bad) insb add add xchg xor call pop xchg cltd dec (bad) push fcmovne add arpl and jnp or (bad) divb dec cmp add xor lods adc sbb xchg pushf push cmpsl or jge sbb jb lahf lahf subb loopne inc in shlb cld xlat fldenv in xor inc xchg icebp into xchg imul imul jne mov xchg mov fsubr add inc sbb les or push addr16 pop xchg testl adc shrl mov mov or sbb lock and mov sbb mov jae push jmp mov sahf add jae mov push nop mov les dec and cs push negl mov inc cmc mov fxch movsl ljmp push add cmp or and mov scas andl pusha out push add gs (bad) stos lock leave cmc stos mov pusha lock lock arpl jge dec pop imul jno (bad) dec sub fdivl jl cli jno sbb cltd jnp xchg iret sbb cmp jns test jmp mov add mov insl push pop je and scas ss call xor mov add xchg repz daa jmp push sub mov cmc int adc dec std imul js or jne loopne in std in cmp adc mov push call pop pop ret (bad) dec ds fstpt repnz hlt mov aam mov out mov icebp and pop movsl idiv movsl (bad) arpl sub imul iret push push mov push nop mov into cli ljmp mov out bound (bad) xchg mov adc jne stos int3 sbb clc imul pusha push dec ljmp cmp mov jp call push cmp cld pop xchg sbb lret pop inc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov push xchg and push jb xor jmp jecxz add sub or je out cs or jo out cld (bad) ret std daa sahf jmp add xchg inc mov dec sbb loopne push mov imul jge inc or jl in ret mov mov (bad) les fnstsw jg cli cmp mov loop push xchg stc out dec ret sbb ja push roll mov jecxz or pop pushf loopne lret add xchg sbb xor pop jg clc dec inc push imul lea xchg sbb jne mov mov scas (bad) (bad) xor mov adc out and in dec mov div mov mov (bad) jne mov sub (bad) call outsb leave adc cmpsb push cmc mov add enter mov cmc test inc inc (bad) pushf cmpsb mov lahf inc push in sub xchg cmpl pop es aaa arpl jl and rcrl int inc shrb js cwtl xchg outsb in add mov test gs into stos mov sub push inc lahf adc call fsubs nop fiaddl (bad) xchg add or imul jae pushf or rol pushf xchg jle ja lret pop out adc cmp cwtl adc sub imul mov test xchg hlt push repnz jge stc mov fcomps (bad) and pop fdivrl and add ljmp test mov (bad) enter aam mov cmp gs cmp fs (bad) cwtl inc sbb ljmp xor mov dec xchg scas cmp pusha cmpsl inc int cmp jecxz out call cmp shrb lods sbb cmp insb popf mov out push jp jp shr lock cmc or sbb lods mov push sub xchg pop dec out aaa rcrl outsl adc jl popl add js bnd loop aas mov adc add adc aaa cmpsl ret inc addr16 sbb xchg mov xor shrl ljmp mov pop mov int3 and mov bound repz movsb popa pusha mov insl (bad) jl and pop loopne inc cmpsb hlt ss mov add (bad) dec jle or out popf in adc inc jno test pop lods clc insb fdivs push or or popf aas outsl mov (bad) loopne cmc dec fucomip psubw ret jge sbb cmp scas fidiv push jge push jnp repz outsb pop rclb daa enter das jecxz loopne std push mov (bad) out adc lret and jns movsb mov dec dec lret lods iret cwtl lods enter clc hlt pop loope pop adc clc xchg add test add pop insl mov sbb jmp clc inc aaa ret cmpsl jg adc mov mov mov pop inc ds sbb add enter push push mov in xchg sahf jp mov repnz ljmp jne into aas xchg (bad) mov pop iret adc pop mov cs mov sub test js cli sub addr16 outsb orl repz clc into lods imul add xchg fisubl xor arpl xor push add gs inc sarb dec and cmpb outsb rcr arpl mov in and loopne movsl sar test call jno pop fs movsl dec sbb ret mov adc xor int arpl std and cmp aad sub push sbb imul jne jno sbb cmp adc aas ret and aas adc les add cmp add iret mov jne mov int add push inc cltd subl pop (bad) lods cli mov loop hlt sub cs popf ds imul movsl adc push enter subl and fdivl xchg dec mov add in jmp push neg bound rclb imul (bad) xchg mov lock addb adc aas (bad) aad aaa iret xchg repnz cmc ficoml xchg (bad) mov outsl fisttpll jl test ss ret sbb and xor dec jmp popf mov mov and push enter cmp push jle,pt inc pop cmp dec jecxz jp (bad) push scas add or push sub xlat sub (bad) mov nop mov cmc push in out cmp pop dec jbe mov ret std (bad) daa cmp sahf cld addr16 jl mov add inc push mov xchg jo xchg push or (bad) lea in sbb aaa lock (bad) test cmp aad lahf inc or dec mov in rolb dec fist inc ret mov outsb xor popf sahf push xor sub sbb shlb bound jbe pop sub pop ja out dec test pop cltd flds call pop bound pop hlt inc (bad) lret fbstp cmpb movsb fbstp popa cltd inc pop clc scas add (bad) or xor int3 lretw out ret pop int pop pop mov lds scas and out (bad) sbb ja push jbe pop imul loopne,pn bound imul lret mov ds and mov stos loopne idivl adc cmpsb (bad) loop jge add mov sbb out mov orl mov push push add lret ss repnz push nop rolb xchg cld bound stos xor adc xor cmp cmp test test push mov sub lock push insb loopne cld jb stos ljmp sti mov dec jb add lock repnz stos jl ret fidiv inc sub outsb jo xor pop ds mov pop sbb xchg fmull loop stos mov lock inc lods enter ret cmp pop cmp das pop ja aas push mov mov xlat cmp jns in sbb sti in pop stos xchg outsl sbb lds adc push dec push les scas loope rolb ja jns xchg add testl cltd fwait add add mov aam inc insl orl sahf sub int pop mov inc dec dec jno (bad) data16 lea outsl xor pop mov cmp inc pop xor mov or je mov (bad) pop sub mov push mov iret jle inc test fidiv popa fs mov nop cli jae jle (bad) (bad) repz (bad) jp dec icebp (bad) mov cltd sub out shll out fdivrl fidivl lock ds jp xor ja dec mov mov adc insl arpl mov loop rclb fs mov mov fldl adc push and mov data16 pop pushf xchg es loop imul and mov mov add lea xchg je mov cwtl scas jb enter aas pop pop push sub int xor out loopne sar movsl repnz shlb adcl mov xor and pop inc jmp or aam lods mov jo mov lahf clc push cs jmp mov jnp cwtl push icebp negl push popf mov jo sti fsubs insl push (bad) mov shlb clc push nop movsb inc cmp pop repz rorb (bad) pop xchg sbb (bad) cmpsb or fwait push scas push jmp arpl push xor mov add xchg sub add mov xor jno pop sbb (bad) (bad) test or jae pop push jns,pt inc mov es loopne in rol sub push fcoms ss icebp sbb (bad) mov mov cwtl cmp pusha jb cmp (bad) and xchg push aam xchg lods xor push outsb pushf push pop arpl movl push shlb iret outsl ret lock dec and shr xchg pop lahf mov les jmp scas out lods in ret pop test add mov fs xchg es mov addr16 push stos cmpb xor xchg sbb adcl cmp pop xor add arpl and (bad) pop jg cli mov inc dec int cmp imul lea notl lods call push iret inc das sub stos (bad) cmpsb je (bad) rcrl test (bad) loopne out xlat mov test sbb add (bad) jne mov (bad) stos loopne iret dec jae ss in push fnstcw and jle cld sub rol ljmp movsl pop dec fistl pop mov fstl in add cmp mov mov mov fistpl mov (bad) dec push xchg mov pop call pop mov mov rclb push sti ds lahf out arpl (bad) push (bad) push lock (bad) es cmp cld jne jno flds sbb push and jle or xchg cmp loopne sub popf mov clc inc jg mov jbe adc cs lret pushf shll stc (bad) mov daa push push pop xchg sbb (bad) (bad) xor mov nop add ljmp lock sub jg or sti lea leave lea sahf int3 cmc fstps bound dec cmp test cli (bad) xor rolb jae lret push mov mov inc adc sbbl jbe xchg (bad) sub test or mov jl movsb outsl inc mov imul subl sbb add stos test (bad) clc loopne adc mov lock sub ja xchg imul pop sub das jecxz ret fistl sarl jo sbb xor lock cli and mov fist clc in repz mov mov dec mov jp xor mov cmp inc std and pop inc arpl lods notb out and dec cmpsl adc push mov push stos shlb js push xor or xor pop xchg sbb addr16 cmp cld sub gs mov inc mov jno pushf clc lods jne pop daa jecxz dec movsb scas cmpsl sub mov sub sub dec jnp xlat or cmpsl and sub and dec cwtl ss and movsb cmp sbb pop movsb cmpsb loope mov test ret (bad) adc xlat jecxz int3 aad jp sub add arpl push inc dec mov xor data16 div scas xchg jae mov aaa and lea call addr16 cmp hlt insl in add push cmp and sub roll adc dec xchg insb xchg jno jl bound pusha sahf mov jmp pusha dec jp mov push mov xor sar inc aad sbb ror add lods cwtl in rcrl repz sub (bad) mov jp scas in mov push lret loopne lahf mov into ret movsl mov out and fidivl aas push sub and aaa ror jnp in fdivl xor fsub test or push cli push fldenv ret rolb add sub sbb cmpsl test or fisubl repnz xchg test out out (bad) push cs outsb sti mov xor (bad) (bad) pushl adc dec cmp dec out jo jl xchg xchg mov inc mov xchg push fistpl pop adc (bad) ss xchg ja sub jns push out fsubrl je xor mov fnstsw xchg test fsubrl icebp jne (bad) jno mov scas xchg sahf sbb insb pop outsb cmp inc mov mov inc jmp fstps pop push out enter cmp or test fs sub outsl inc repz (bad) pop gs xorl inc push cmc add jg push stos mov cmp std adc cld and movsl pop mov jmp shr cmpsl mov push insl cs lods ja fisubl imull pop pop cmpsb std mov pop pop xor loop in dec jge imul push sti out adc push push lahf aaa fucomi out mov ja and jmp sbb cmp call push out push adc xor mov (bad) mov imul rolb lret pop leave mov sub imul loop sbb adc data16 incb and pop pop push pop jne sbb push test mov cmp aaa mov in cmp adc lock push stos mov test iret and bound repz sub mov lret xchg dec adc cmpsb xchg stc xchg js int or xchg lods xchg decb jle add pop xchg das loope push sti mov or (bad) xchg scas and repz decl sbb paddb ficoml out rsqrtps lahf iret jbe roll cmp cmc dec jnp jmp out insl icebp adc cld push or or imul sbb ret add ja sarb or cmp add jns je in enter push mov (bad) xchg push je cmp icebp xchg sub dec pop test jmp push jb jecxz jb dec std or jae jne ss push xchg or test in dec es push mov fistpl and data16 ljmp fnstcw or rcr das inc push cld lea xchg push negl hlt lds jb sbb mov scas inc scas pop pop pop inc lods scas adc aam mov das js sbb imul pop mov mov leave dec insl mov push fldl push xchg mov pop sarl ja pop gs bswap movsl test mov ret hlt cltd cmp inc enter fs mov sarl mov aaa add ljmp xor test aad fsubrl outsl push mov inc daa ljmp sub clc jb cmp xor imulb mov and int3 leave jg icebp sbb mov or repz push (bad) push fmuls scas cltd xchg sahf push jp and in inc std cli sti jg enter adc aam xchg sarb mov add push (bad) jno jle jg shrb mov pop mov fnstsw (bad) cmp cmp lods bound popa call add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb jecxz icebp arpl mov mov shll out aam push je aaa xchg ja ss cmp aas jecxz std dec jl fildll add or das pop mov dec fnstenv call movsl mov (bad) mov sub adc mov insb pop push out push neg scas and or adc in sub into scas or xor mov fs fdivrs sub cmp jae orl (bad) sbb sub std jmp mov push push pop sbb xor in inc mov bound xchg jge mul sub push inc test out pop pop mov cmp mov dec lea sub jns inc out dec push push int adc pop pop leave out sbb sub in jp sbb ss and jecxz mov add mov std and cmc loopne pop add pop outsb faddl insl add push sbb rol push pop stc rolb (bad) cli jp and xchg ret cmpsl aaa inc (bad) in sub rcrl arpl repnz jl sbb outsb pop inc je cmpb imul mov outsb lret call xchg mov sbb fadds pop daa imul fildl aam jnp inc xor inc sbb xchg jb js sub mov shrb cmp xor aam lea movsl xchg les mov fcmovu add cld imul imul test sub mov ljmp sub add jne add popa mov jnp arpl push movsl xchg out inc call (bad) movsl mov jno and mov leave ss jp inc and mov clc dec cld sub lods add pop mov inc cmpsl sbb outsl sbb xchg sbb arpl ret jle movsb insl add fwait nop stc test xchg cmp sbb or std jo xchg fldln2 pop add icebp arpl ror mov into lods rcrb sub jnp lods call idivb jno repnz push les sub inc ljmp lock mov loope xchg add sbb xchg (bad) daa outsl ja cmpl out sbb dec (bad) jg pop inc pop sahf imul int mov jbe jecxz daa stc stc mov mov xlat xchg (bad) stos cmp es pop fsubrs sbb add mov outsb add sbb (bad) mov mov xchg mov dec pop push cwtl jbe arpl xor and push pushf add mov or test decl adc daa mov ljmp stos adc insl push or sbb cltd cmp stos mov pop or xchg popl test lahf jae ret cmp popa int (bad) int3 pop sti pushf pop fcomp inc cli (bad) int adc cmpsb ret loope cmpsb jp push insb push sti jne adc xchg or jb popf sub (bad) aas cltd sarb addr16 mov inc push arpl out jp cmp dec or and pop dec movsb pop cs sbb xor daa push mov pusha verw fcoms push mov in ret pop imul adc inc dec flds test scas lock push xor in mov es dec subb (bad) not (bad) aad and sti test gs je out inc lock xorb sub scas or adc cmpsl loope xchg mov jbe mov push sbb gs shrl sub (bad) icebp mov mov mov fsts add lods push dec or mov out popf cmp push mov mov imul insl imul cmc fwait bswap add xor cli cli pop mov insb inc xor out lcall arpl lea aam or mov jne imul lea mov test mov pushf and aad mov jae xchg mov add sub xor mov test fcomps dec inc mov pop popf loope xor add mov sti ffree cmpsl das push push in push dec adc sbb cmp arpl sbb add mov subl pusha mov push cli icebp dec int pusha ljmp dec scas cli lahf insb (bad) clc shlb add xor lods pop aas (bad) push divl push aad cwtl test sub shl mov cltd out js pop sub loopne xlat mov jl cmc push scas movsb jecxz ja xchg (bad) fidiv sar in in cmpsb sbb je add sub rcll cmp imul push xchg push mov pop (bad) jnp jecxz outsb pop push and clc mov sbb in or xor stc cmp and outsl cltd fwait sub jnp lahf ja push in xor jbe sbb inc in aaa pop mov lods mov mov sub or movsb adc (bad) xchg push popl pop sbb and pop inc cmpsb fwait test fdivp and pushf mov xchg mov pop clc xor daa inc dec daa loopne dec ret dec lret add mov (bad) and js (bad) adc pop cli jb aaa ja (bad) movsb jb mov js dec negl mov (bad) (bad) outsl lcall sarb nop add (bad) mov sbb hlt add daa push dec push xchg shll loope ss mov push add aam jne jle adc cltd fsub into rorb cs sub mov cltd sahf cmp in pop aas cmp movsb jno (bad) std mov pusha mov inc ljmp ret sub xor cmpsb pusha pop lds imul xchg push sub mov call inc out aam js imul fldcw aaa add call loope mov hlt sub sbb jae and je test jne adc movsl xor imulb test cmp in inc loop jns (bad) cmp and das fwait insb jns push jle dec sbb mov jns sbb xchg adc cmp pop push lret cmp hlt icebp hlt hlt mov push dec mov aam xor aas bound mov xor (bad) mov adc lcall xchg inc fildl fcmovbe push fs in jb sti dec fs sbb movsl pop fnstenv mov mov insl add mov (bad) sbb das pop fsubrs inc movsb gs int3 pop sub cld outsl imul mov into push add inc cmc mov xchg les xor lods mov rolb aas mov fnstenv adc insl sbb pop mov cmp insl sbb stos mov jae int3 popa je daa add aas frstor push push cwtl sub and xlat add xor pop (bad) adc (bad) lcall or jmp pop jp clc mov cltd xor fistp hlt jg out sbb scas hlt nop mov mov jnp into mov int mov (bad) cmpsl lret sub mov add (bad) rorl cmp sbb xorl mov xchg mov jae (bad) jne xchg gs pop lcall loope jmp add sahf mov jl cmp sub sub test ret insb mov mov notb nop add pop cmp xchg mov sub adc arpl test sahf out xchg and sub (bad) aaa inc (bad) and xchg ret mov cwtl pop and mov push mov sahf enter fiadd imul cmp popa push ffreep dec insb test (bad) ja cmp inc js cmp in add add imul addr16 aas mov mov out pusha push sub out mov add cs ljmp js jno xor popl adc fcmovnb mov rorb sub into iret pop mov xor imulb adc ja pop mov hlt inc scas mov fwait pop test das mov pop lahf mov sarl lcall xor mov dec pop fistl dec add fdivl (bad) out or fsubr int clc cld stos test hlt lea push ja lds push loop sahf test sub sbb jns imul fistpl or popa mov pop cmc and xor rcll fisttpl cmp xchg ljmp test sbb scas in push fistp cmp mov fwait daa repnz stos mov xchg mov xchg jp repz mov inc jecxz loopne or (bad) jge in mov (bad) or (bad) xor ja dec orl mov rcrb pop mov cld mov add cwtl stos icebp loop xchg (bad) and pop je idiv mov leave cs dec jne add add jg mov sub sub lods mov out sub fcomps mov shr imul mov sbb jmp dec jmp inc push or sbb mov rorb mov rorb aad arpl inc xlat pop jg out cmc xchg sub pop fildl enter aad andl scas sahf cmp push cmp lea fimul jno push xlat xchg jno sub add in test mov in pusha popa jb mov mov jecxz pop push jnp mov stos cmpsl pop and or cwtl sti xchg adc out pushf ds adc popf cld or stos pop jle (bad) (bad) ffree fmull outsl fcomp pop jns enter mov xor xchg dec das cmp push mov mov inc push int mov out int3 push dec iret movsl nop dec cmp sub cmp lea inc (bad) arpl inc sub push ja dec (bad) xchg negl je jno call jmp jns sbb xchg and adc inc std inc sbb xchg repz inc mov lods das sub cwtl cld pop ret push adc fwait scas iret push lcall ret cmp adc add mov push push inc lds in jbe mov and pop cmc (bad) mov sti mov adc dec jmp and or cld add dec cs pop xor nop add mov xor sub dec lods jmp cmpl mov xchg aam aad cs xor sti and fimull cwtl cmp cmpsb pusha out mov mov aam mov inc stos xor mov call and aas sub aaa test mov sub cmp in mov lret sahf or pop rolb or or insl ljmp (bad) mov outsl jecxz in pop adc aaa adc outsb mov mov arpl cmp sbb push aaa fimull test and int mov and mov xchg cli cmp push (bad) jp test int cmp dec mov pop sbb sub mov imul outsb push daa cmp into jns mov mov out push mov dec cwtl imul lods test xor sbb (bad) jns xchg mov dec mov (bad) or stc or cltd cwtl fsub push add aam mov cmpsl loope sbb std fisubr outsl inc cmp mov insb jne loopne xor stc xor movsl lea icebp sbb xor pop adc cmp gs jne jecxz ljmp lods ja fadds sub jecxz sar call sub out and push mov cmp jno push call add adc (bad) bound pop fcoms test test pop movsl setb jo lock fs ja dec daa scas fcoms cld sub mov jae lods pop repz cmp sbb lcall leave divl inc scas imul mov int3 jmp dec mov sbb pop mov push ficom lods loop cli ja movsl jecxz lock aad mov and clc mov hlt add (bad) mov shr jmp adc jo adc jg test loopne xor xchg push in lods and jp mov fbstp dec jnp jmp dec daa repz aad js ret inc pop shr idivl addl test ret leave insb (bad) fwait cwtl dec aad mov outsl rolb iret int jno sar lret fcomps hlt add popf mov cs fldl mov into aas xchg pop or lcall icebp push inc insl call xchg mov or insb and pop cmp push cli pop mov inc sti sti mov jg les in fadd orl stc mov pop test (bad) icebp adc xlat out dec jae sbb pop arpl xchg add ss lcall clc lods jbe in test test cmpsl mov xchg mov mov sub adc xor cmp es movsl cmp lock mov push xor fimull jne imulb addr16 jge xor fs sbb mov stc fs inc loope xor lods xchg repnz push jg std jecxz out iret pop ds (bad) xchg ja in repz push inc mov xchg inc mov mov leave clc test arpl mov arpl dec cmpsl loopne movsl aas push icebp or jo (bad) adc fnstenv pushl dec mov xor mov jnp or mov push addl dec andl inc mov push dec push js fstpl out call popf and xchg sahf xchg xchg jae jae shlb cmc jns les dec push mov push inc repz jp int3 das into cmp sub stos inc ds pop fmulp xor lcall add sbb cmp jg xor rorl clc mov (bad) push shll pop roll pop mov xchg test mov nop inc fwait xlat jmp jg inc jmp jecxz lock cwtl mov mov in inc mov je mov and outsb and lock cmp repnz xchg daa dec sahf cmp repnz xchg daa (bad) jg add add add lret imul add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc xchg rcrl out xchg push dec sbb adc adc add cmpsb mov adc xchg out xchg mov nop out repz repz push negl add pusha add imul jns pop scas subl jmp xchg dec into push jg insl mov (bad) pop into (bad) imul inc push xchg scas imul loopne adc jp mov pop cld sbb scas inc mov aas imul in test xor cmp push es ficomp sub nop (bad) repnz push inc stos stos out sbb lret scas jnp jb lahf testl cmp inc popf sbb pop test iret leave popl das fdivrs mov daa push push setg jo negl fstps pop xorl push dec imul cld pop xlat jecxz adcl ret loope jnp mov jb dec sub xchg push jnp lret lcall dec sub out jb dec xor repz cwtl outsb out pop mov iret icebp pop push inc testl int3 clc jns xor mov add or mov inc and sub in pop sub ret aas flds mov pop dec into cmp icebp adc xchg sbb popa int push jnp cli xchg cwtl add ret cmc jnp and xchg int mov jbe sbb outsb dec and pusha adc loope (bad) sub xor dec and xchg and jecxz add test xchg cmp insb mov mov sub adc xchg cwtl cli aam repnz inc or jge xlat xchg pop pop jp bound mov fcmovb xlat jg aam aad out mov push sti lea jbe hlt fimul xchg rcrl push (bad) ss in aam inc ss imul cmp xchg add enter add jecxz cs push xor jns sti out add dec adc dec lds icebp out je xchg add xchg push mov mov sub mov dec loop inc dec out (bad) cmc mov mov fcmovne add push cmp cmpsl bound sbb int3 cmc and push jecxz xor clc shlb add pop jne outsl jo ss addr16 add or adcb (bad) jae fldt xor sbb xchg ucomiss jmp pop fdivrl fwait and vrcpss mov sub shrl fcoms xlat jae xor mov mov fbstp and jo hlt (bad) (bad) bswap int insl cmp dec xchg lcall xor or cmpsl clc lea pop or lahf dec jl push jnp (bad) xor sbb ror lahf fisttp fcmovnbe pop sub and sub inc outsl sti mov adc adc mov stc pop dec fs (bad) aad sbb sbb cltd movsb je int jp inc aad mov jns sub in fidivr in xchg push js push pop pop call inc and sub mov inc xchg adc mov jl arpl inc cwtl ss bound subl mov or enter adc or dec xor pop ret sbb or and cmp lods (bad) xchg scas fwait sbb int3 pushf mov xchg inc add mov leave xor popf xor (bad) arpl and dec inc mov xchg xchg pusha push lods jge adc outsb pop and (bad) xor add int stos lcall arpl rcll and inc popf in adc fwait in jl das aad lea movsb add dec mov add lret xchg cwtl inc sbb (bad) lods dec mov mov mov sub push test lcall ret xor in and dec fs pop mov sahf sub outsl mov sub fwait jge aad das cmp xchg in scas mov cld lds sub cli xchg add out add mov jl ret stos fisttpll or adc mov cld leave inc aad mov cli dec rorb sub jbe (bad) icebp or mov sbb imul fiadd es enter mov inc or inc daa and mov mov cli loope push jnp add push push pop fisttp lret mov ljmp push pop aaa or imull imul testb cmc mov icebp fsubrl xor fadd pushf (bad) xor fimull inc mov in xor iret sbb or push aaa (bad) (bad) mov test add mov xor fistp jae mov imul mov loop dec movsl movsl pushf aad sub test insb shrb test inc cmp xorl xchg jae in pop xchg (bad) lds mov inc insb inc orl loopne (bad) mov xor pop movsb fimull adc or repz push (bad) out mov push cli cmp sbb mov jg popa mov xor adcl insb cmc out lea pop adc pop xchg jp mov imull aad mov lock or ljmp and int mov sub iret xor mov sub inc (bad) ja push add (bad) std cld inc inc mov sarl pop stos out mov pop dec dec adc fnstsw stc addr16 in pcmpeqd aaa push push jae fldt add xchg ljmp mov gs sub loopne clc xchg aam test mov data16 movsb std sub sbb sbb aam mov mov aas aad mov add imulb ss sub negb dec sbb js jne inc adc insl mov sti jbe push mov insb xchg xor push dec pop fs lahf push mov jns sub mov mov cmp (bad) (bad) mov fxch cmpsb jae outsb aaa push les push dec cmp or adc in std mov in pushl out (bad) into insb stos pop (bad) mov dec scas cmp mov lock mov xchg lret pop cmc jb test (bad) dec or lret scas pop push inc lahf sbb sahf adc push mov mov xor adc jo inc inc mov sbb movsl pop fidivr add xchg adc mov adc push push pop fdiv jmp arpl jge pushl int3 (bad) out jecxz gs mov lea mov jb aam mov add sbb ffree dec add jb ret mov mov cmp into fmuls mov add sbb test jmp pop enter test pop adc invd in mov fstpt cltd mov jae fistpl ss negb leave adc mov ret mov inc repnz insb (bad) out xor sbb mov imul clc pop cmpsb fwait push xchg lret inc rcll xchg mov shrl cmp mov cs adc dec in push sbb (bad) xor out cmp mov mov jbe adc add mov lock and movq jae push push xor gs sbb int dec arpl xor lret ja push data16 (bad) or lock shl aam mov mov xchg test in in test add inc jne xor lea mov repz (bad) sub push cli pop decb nop xchg rcrb xchg cmpsb (bad) mov cmp push dec or fcompl int hlt rcrb (bad) (bad) in or fmull push xor out popf inc xor xor in push xor jge jnp je ret int3 dec xchg jg mov mov ret fnstcw addr16 dec mov lds push mov addb imul mov push jo dec jge js clc push decl stos add and (bad) loop sbb dec jmp in xlat imul push or jo hlt lret dec lcall adc dec test sub xor cmpsb push dec jle (bad) pop and adc inc mov inc lea jno xorl and ret repz add scas inc push test rclb mov add inc sahf and xor pop roll sbb xchg add xor stc nop and imul pop push test xor int3 mov sbb popa ret dec sub loope jae fmul mov or jae add push dec pop cmp add adc aaa stos mov push aas hlt dec repz aad or int add add push xchg or ljmp mov in les insl dec (bad) call (bad) mov mov stos lret mov xchg xor push xor ficom decb (bad) xor dec mov enter inc jae aaa cmp popl addl daa mov xor pop mov pop lcall popf xorb aad push loopne inc cmp mov sarb (bad) and jecxz ds dec ficom push sahf call mov imul pop push aaa push aas (bad) arpl pop daa and push sub xorb xchg mov in test sbb sub jle cltd adc mov cltd jp pop in push int3 xchg and imul cwtl addr16 xor dec sti lgs pushf adcb mov movsb ret inc add scas test imul aas mov jnp fidivr mov or lods push jge xchg lods push (bad) (bad) je (bad) ret mov cltd sarb neg cmp or mov daa (bad) loop push mov xchg mov aad dec jp xchg in out cmc sub mov in scas mov aaa mov mov push loop add loop cwtl adc jmp push xor outsb push sub xchg inc xor incb fnstcw pop pop rcrl sti jae mov ret fsubl mov daa std fcompp xor xchg sahf fst (bad) mov and jb adc cmc ret mull mov jecxz lcall push lahf inc hlt les adc mov add ficom les popf push adc scas lret pop push xor lahf test (bad) push and shrb pop adc or xchg adc scas (bad) lods xlat xor dec mov stos cmp ds sub fsts clc into inc mov shr icebp mov scas cmc pop or (bad) xor sub jb add loopne mov sti xor cmpsl mov sub dec dec data16 outsl test xlat mov dec adcl pop ljmp mov les cld andl mov sub pusha scas lcall or dec imul mov mov xchg xchg popf mov inc mov js adc inc cltd mov lods xchg idivb out add es cmpl push and lret cld sahf jae or (bad) cmpsl out xlat lds lea daa (bad) cmp sub fwait xchg mov scas stos dec or cli inc sbb enter xor dec sub or mov dec push call repz mov (bad) and push movsl sub inc add lret dec push out lcall dec xchg and (bad) jno xchg fcomp jle cmc mov lds lock in jne test fisubl mull jns xor mov ret add sub mov and (bad) sbb cld leave and scas in enter stos pop push mov ret or pop mov lahf fdiv or mov adc call call mov fwait outsb or or mov lock jg dec and xlat jns fs dec sarw mov (bad) xor add mov fsubrl add jle aaa mov stos mov mov cmp mov aas and js push mov cmp bound dec pusha adc mov fstpt es fcoml popf stos fistp mov sub fistp es jno into aaa cld dec pop test pop mov sti subl cld push mov (bad) mov lret sbb mov (bad) leave mov mov adc mov adc int pushf out rol ret mov sti add out int loopne add fiadd xlat call imul cli or pop fwait mov fdivs fidivrl icebp aaa dec dec (bad) adc xchg xor xor lds push and mov hlt cmp shrb push inc nop cmp roll insb pop lret pcmpeqw push cmp xchg mov lods cmp push fidivl out scas add inc lret mov xchg adc xor clc push jge jne ret mov movsl adc add sti ds mov jge pusha dec movsb std push repz cmp and popa mov sahf cmc (bad) adc dec mov xor dec fldt pop or out jo loope aad sub fisubl scas jae pop mov cltd popa jle into mov sbb out hlt jecxz sbb rorl lahf xor sbb data16 dec push lret jno in fist dec test jecxz test (bad) xor (bad) jno adc out or lods xor xchg scas inc jae popf (bad) outsb cmp jg (bad) in xor imul repz (bad) mov shll mov fiadd pop mov sub (bad) (bad) add mov jp ds or fnsave pop (bad) popf stc dec test aad xor outsl dec xor fdivl out xor lock sub in scas cmc ror ds test inc mov movsb bnd adc adc jno adc push xchg sub inc mov scas mov xchg pushf jo lcall int add xor xor js mov repz test cwtl mov jne mov jge or das pop add pusha jmp add sti nop adc imul or dec sbb lret sub pushl fnstsw jnp out fnstsw jnp out (bad) incl add pop rcrb sarl add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push adc (bad) icebp xor jmp inc mov dec sub cmp je shlb rcr fucom pusha xor sbb dec fdivp fisubr out iret jns add pop mov into and pop pushf rorl ds lea xor jbe jnp shlb add mov inc or cltd and ss pop lahf xchg repnz xchg inc repnz fdivs xor push mov test mov cmp into std xchg inc push lcall push and (bad) (bad) iret push xchg cmc negb sti dec int int3 loopne gs insb in test mov dec or hlt or jmp and lea test xchg fwait stc and cvtpi2ps test fldenv jmp in int3 lcall insl add push ja cmp pop loop adc jl xor aaa xlat insb aas (bad) fcoms fcoms sub addr16 loopne (bad) sbb fwait and mov fdivs cmp and xor cmp xor cmp xor js or rorl sbb addr16 cmp push pushf ror leave dec cs aaa outsl adc out lock aaa (bad) leave jg clc xchg xchg (bad) (bad) (bad) je dec lcall mov outsl mov dec leave mov cmp subl js (bad) pop stc xlat inc mov fsubs ret cld fstpt pop les out xchg fwait mov cmp cmpsb dec mov mov pop cli dec mov rcrl jmp mov mov pusha (bad) out fiadd ret fs in jb sub push ds cmpsl insb jbe mov dec pop movsl (bad) (bad) add bound xchg lods je jns punpckldq test cwtl subl es popf cmp subl pop push inc addr16 pop mov mov out icebp pop ss aas or xor add mov popf or rorb sbb aas add cli and xchg pop ss mov pop sti mov shrl (bad) and jecxz mov inc ljmp xchg push ds add fcomp adcl arpl out and mov dec sub mov fsts xchg fnstsw jbe jmp xor lcall mov jmp lds int xchg dec insl or daa pop push mov mov cmpsb xchg sub adc mov add mov push mov mov push inc cmpl fimul pop add js fidiv sub loopne lret frstor or arpl pusha hlt xchg hlt push mov les ret (bad) clc fstps mov das aas xchg xchg in push jb inc or or aam call adc push pop push sub in in je jb shr fmuls fcomps cmpsl aam rol cmp mov dec mov enter adc pop cmp xchg sbb inc ja add cmpsb pusha scas mov call jbe or and in mov adc out fist and cwtl mov push rolb rcll add ret (bad) lock xor mov inc xchg popa cs fld push int3 rclb sbb les (bad) repnz pop das and adc mov nop outsb jno ds jbe in ror pop cmpsb cld inc int3 push pop xor outsb iret adc mov cli in in movsb stos ljmp (bad) nop cltd inc push sahf mov sbbl iret or movsl push leave adc sti push mov jle xor mov int jmp scas fiadd fwait ret lea fstps mov add (bad) xorl (bad) dec push push les cwtl or inc mov (bad) push jb (bad) cmp jcxz cwtl insl ret fmul pop xchg mov outsl sbb and mov jl push xor mov mov mov inc jle push mov sbb loope and into rcll outsb mov xchg lods cmp cmc mov dec and pop add lahf aaa jne and push mov aam loope jmp bound pop ret sub add dec lcall fs (bad) jno comiss inc loopne ja add mov sub xor insb jmp inc pusha and mov insl call mov pusha cmp lcall enter xchg fldl xor add push push sbb mov push gs or sbb xor leave dec add push mov test cmp jns mov xor sbb lock pop xor push inc daa out mov jp sbb adc bound mov adc or jnp scas xor push arpl dec sbb insb xor outsb cmpsl mov outsb sub mov daa jne iret imul xchg mov xchg fs dec dec mov std sbb push push push and sbb dec push lock setp mov stos mov and xor inc fldenv fs ror sbb scas ja xchg xor inc arpl loopne sbb push jae dec imul out andl insb sub push and sub jge xchg xor cwtl or xchg je data16 scas mov sti int pop mov (bad) mov jge xchg inc popf std js and ret (bad) adc fnop je lret jae and cmp leave rclb inc leave add sbb out adc push pop pop xor lret mov lea lea dec pop lcall dec cld out sub int3 mov push jecxz adc mov sti loope addr16 enter (bad) psubusw (bad) or test pop clc popf push pusha dec leave sub sbb (bad) int jbe insb sahf or push pop loope push inc mov aad aas mov jge mov andl dec dec pushf adc (bad) dec jo call xchg in or sbb mov pop sbb daa (bad) icebp push (bad) jp aaa dec lea and (bad) out jbe ret mov jge outsl xor test jl pusha pop repz pushf push das ss icebp stc jmp lahf xchg arpl jle idivl pop outsb pushf stos (bad) mov dec push stc scas subl leave aam dec lods push nop mov mov fdivrs sub sahf mov pop lock into add sahf pop in lods pop mov fwait lcall rol push pop divl mov mov stc dec in sbb mov (bad) test mov (bad) dec inc push pop loopne into jne int xchg push push jg pop or push rcrb gs and pop dec xchg outsb pop add cwtl ret push cmp sub pop jp (bad) js jno mov pop xchg scas mov pop pop and movsl inc ficomp lds mov ss data16 jp xchg mov xchg lods pusha into xchg stos imul lahf jns in mov fld dec mov cmp js addr16 stos lret sahf sub rorb int3 mov stos cmpsb inc cmp fisttpll mov cli xor sti mov cwtl inc xchg sbb mov inc push into stc sbb mov jle xchg add xchg jb add jle lds (bad) fsubl mov mov jecxz cmp cmc pop (bad) out pop dec fnstsw dec imull add dec movsb sahf adc inc (bad) lret imul and fs and mov lea cmp jo mov mov or cli outsl dec push or xor cmp cmp ret (bad) gs (bad) aaa int or fcmovnu and inc (bad) mov jmp jecxz loop sbbl sbb pop cmp dec loope cld jnp mov je mov movsb xor fldt sarl cmp push adc movsb xchg xor inc push inc cmpsb mov sarb jo,pt jg jno pop pop addb cmp bnd or inc pop in dec xlat icebp xchg xchg leave das adc (bad) add jp inc sahf add and sarl or mov jns fsts pop imul xor cmp rolb mov sbb mov adc mov pop xchg std insl dec rcrb jo aad inc push divb push cltd cmp jl and jecxz cmp andl xchg rcrb in sbb test loope hlt mov in dec add stos adc dec loop inc xchg xchg pusha ss sbb and movsb popf (bad) mov pop (bad) jae imul call (bad) cli mov aaa lcall mov push in rcr (bad) int inc jno shr das xor negl (bad) leave pop je call scas adc jge and jno mov ja divl leave mov inc jbe mov pop xor dec mov fisubrl sbb addr16 pop xchg insl inc xchg add rdpmc popa dec cmpsl or cmpl xchg pop das in cmc mov mov add jo dec rolb imul subl or ss loope sbb outsl inc xchg lcall mov pop mov gs imul dec jae mov jmp jb mov mov sbb jg and inc push sbb in stos cmpb push cwtl in imul ret loope into adc imul aad mov out test aad rcl push test daa test mov lahf scas lods cwtl iret xor lea aad je popf out inc enter mov inc insl jb dec sbb pushf ljmp daa xor testl lods lea and lahf jne cld mov popf repnz cmovbe sbb or lret push add ret ret shr dec cli fdivrs nop jae (bad) fcomps xchg mov (bad) cmp cs mov or aaa push adc pop sub ljmp jp pop enter adc sub test inc or mov push dec movl add cmpsl dec add mov cmp ret mov xchg mov fwait dec lcall jo pop push mov push jne cmp cmp jnp js loopne stos mov insl pop scas adc mov mov mov (bad) gs or push pop sti mov js out mov xchg mov mov push mov jle mov inc lods fsubrl pop iret jne ret mov imul adc rcrb add mov outsb imul or adc push xor xor (bad) js pop mov movsl sbb pusha mov sbb loopne cmpsb add enter xlat push fstpt dec idiv jnp and xorl (bad) xor push popf sbb cmp sbb xor xchg mov gs or js hlt adc xor push mov xlat and cmpsb ja add sbb js aas pop loope jp lods pop imul adc and mov dec movsb and (bad) xchg jmp adc repz movl les les out adc jg jbe popa or iret inc sub pop jge fwait adc xor sahf jae xchg rep push (bad) cltd rolb aaa add nop dec cmp loopne sbb push aam (bad) pop sbb ret mov sub inc add daa fwait mov lret aad pop (bad) fwait dec fstpl subb sbb icebp adc repnz adc mov scas aas xchg int3 cltd adc (bad) pop pop jp jg adc das mov lahf or push (bad) jnp vsqrtps push push sub mov lods icebp push xchg inc stc movsl jg adc mov sub rcll mov cmp mov push or repnz lea popa scas or stc mov fcompl lods fidiv xchg add out popa int mov fwait cli or jl pop lock push sbb cwtl das mov sub mov cld int adc (bad) push jb mov push idivb es sbb xor arpl mov add out dec mov repnz fimull and push test pop popf cmp mov jo lea into adc or in cmp or cli sub lcall mov dec mov addr16 into fistl and sbb sub sbb aaa mov mov outsl dec imul mov xor out push and (bad) push mov jo sub ret negb dec ffree add ljmp js sbb addr16 mov ror fs jns xor bound ds pop pop (bad) mov mov mov adc dec out push aaa fwait cmp inc or mov fisttpll in bound mov xchg fsubrl xchg in inc imul dec mov add push push imul and adc popf scas adc lret jo lods lds mov or jns push pop cltd or jns fnsetpm(287 ds movsb popa ss (bad) loop adc adc lcall cs or jecxz jne sub sbb in cwtl (bad) xor xchg (bad) fdecstp jmp push popa inc imul pop gs cmp in data16 add mov sub mov sbb int3 fidivl jns jne rcrb lock ja in dec add daa enter pop ss xor test ds imul outsl and pop movl fist das or inc push out loop add jp jmp in adc xorl in adc popf mov movsb sub rorl push xchg popa adc adc xchg push push out inc outsb lahf movsl push iret testl (bad) jle pop (bad) (bad) loop mov jp test cmp (bad) gs in or pop ss stc pop scas cli xor inc push cmp (bad) clc inc sbb imul push fcompl jecxz repz inc cld add data16 lock sub sbb xchg stc nop lret adc out movsl pcmpgtw stos in into mov add ja cmp xchg daa dec sahf cmp repnz xchg daa dec sahf cmp incl add pop leave mov movsb sbb add add dec inc scas inc pusha (bad) or sub movsl cli movsl (bad) movsl jmp stos sub xchg icebp pop sub call jns cmp mov or scas loopne dec in orb insl sbb and adc cmpsb fldenv test lock sub mov cli jnp lahf push int jne jp dec sbb mov sub clc xchg xor ficoml cld outsb je and sub call mov cmpsb pop lcall and dec stos cmpsl data16 int shrl loope stos cmp setg add sbb fnstenv mov push or and mov movsb cld mov cmp fldenv mov mov push pop xor popf mov mov jg xor xor and and xchg rorl pop inc (bad) or pop bound jg scas gs lods add test cmpsl push adc mov (bad) and popf into in mov in aas xchg outsl iret subb jb sar dec add in mov jmp fldz adc push cmp imul mov int3 iret lahf mov adc fdivs add dec test aaa (bad) cmp ret or and add jb sub inc jnp test and push jne push fldl jge dec sti adc adc pop sub mov loop lock mov ret cmp dec mov ret stos ljmp stc aas add and ret icebp cwtl cwtl mov sarb insl jbe add cmp xchg pop out xorl inc daa movsb push iret in inc and jae xchg rorb mov pop adc (bad) shrb adc adc adc sarl sti push xchg test mov xor aaa pop xlat mov mov mov movsl dec pop daa mov into and inc call push aad add push sbb scas test out push pop movups sub test inc mov and test mov sbb out rolb adc mov loop mov dec or jae cmp in jne push mov fwait mov push xchg mov pop dec and into cltd ret cld jmp hlt sub dec or out mov cvtpi2ps sbb add cmc pop rcrb mov test jmp push adc pop test jmp arpl add push pop sbb jno mov xor in arpl and inc gs out mov add pushf xchg pop aaa push (bad) in add pusha (bad) mov push les lcall test mov jecxz pop fs inc rorb std hlt jo pop loopne mov outsl and add cltd cmpsb in xchg jge int3 sub es ss fisubrl jo xor cltd repz inc xchg sbb cmp subl sub (bad) ss xchg xor das inc in xor fidivl int3 inc andb pop fstpl or xchg int3 and sbb test repz mov mov test mov cmp imul lcall cmpl jae push pop js add jge inc sub pop jg adcl sub sahf inc jnp das cltd cmpsb imul (bad) movsl sub (bad) (bad) popf in sub rcr aam daa sub jbe popf in test lret and push test imul push std sub or test cmp in aad sbb cs jbe dec test in cmp ret test fidivl int push lea loop sbb out push (bad) jbe sbb pop adc xchg in aam cs movsb stos cmp das stos bound movsb stos add cmpsb scas das in daa shlb fimul jge push sub and dec aad mov or (bad) sub jne jecxz pop push push std jns popf push mov cltd push lahf pop cmp pop jle mov dec pop xlat cwtl lret cwtl xor fs insb dec pusha (bad) testb mov outsl ja out mov dec mov stos inc xchg ss (bad) push (bad) call jns rcrl int3 mov cld call frstor shrl imul ja xor jns sub jl popf add shrb mov mov repnz lcall or or dec sub mov icebp cmp mov xchg or mov cmp sbb adc outsl inc (bad) fldt push pusha jb in decl cli fisttp xchg add out jae dec xchg push lahf daa mov aam xlat fisttp (bad) test inc pop jbe addl jg or std push jo pop movsb inc pop popa fcoml mov lahf or mov popw cmp cmp (bad) jge outsl xorl xor ss cli and jno add sbb mov cmp mov xchg pop mov jp daa sub add int3 adc xchg rorb inc ss cmp dec fs mov pop dec lods add int3 xchg addr16 call push pop mov jns imul xchg insl sub push cmpsb cmp or dec push fwait cmp or or cmc mov cltd (bad) stos add or clc and xchg imull mov imul pop inc mov std jmp inc inc imul jb push lret lea flds ljmp cld cmp sub imul stos sbb stos mov fstpt mov aam push mov loope mov les lahf lea in leave ficompl cli mov mov ja and int3 sbb jae push add adc test das mov in movnti je inc cli je sbb mov les rolb addl mov dec pop xor clc icebp outsb popl push test and mov pop adcl sub js pop pop mov xchg add mov adc add and mov test or xchg mov fdivrs push test xor je movb mov lret xchg mov xchg jb sti lcall xor inc jge scas (bad) leave jno bound push repnz mov add pop das sar push mov cld in pop sbb pop xor sbb mov shrl stos pop sbb lea cmpsl sbb insl cld push or addl adc fild xchg xchg mov aad sub jmp scas mov sbb hlt sbb aam pop xor fadds and adc loop lret int3 push out enter add gs jnp xchg jae lods js xchg (bad) xor dec das test pusha sarl pop inc imull mov sbb jl leave into xchg mov lds lods xlat mov lcall ljmp pop out push push pusha arpl out lds jmp popa sub daa xchg into out (bad) hlt adc push or adc jmp dec adc rorb leave jge loop stos xchg pop lea lods mov lcall fwait divl push sbb mov arpl pop fmull into ss cmp push push mov and into std lods inc jb pop mov daa iret dec fs sahf stos jo pop push push fnop repz fisub les pop adc xchg or mov xchg sbb dec mov negb mov es mov movsl out imul bound xor dec data16 in rcl push xchg fcmovnb popa aam sub inc xchg mov das xchg arpl inc push sahf or xchg pushf shrb test popf ljmp in repnz mov (bad) dec mov jle xor popa cmp push lods inc push in repnz pop jl cltd inc jl xorl push add push inc pop mov cmp addb sbb sub (bad) shlb push andb or popa cltd lahf ljmp cmp out (bad) mov stc in mov jb xor lahf (bad) cwtl mov sub xlat into mov mov call insb or frstor das lret leave or lcall negl inc sub inc in mov fwait in xchg repnz fwait movsl test js loope jbe test out (bad) mov cltd sbb mov les (bad) addl test inc dec push dec add movsl fildll andb bound jle sbb push rol jae sub fidivr dec rorl loope (bad) cwtl jo pop ja pop mov cmp add push test mov test sbb push movsl in jns lretw pop loopne xor or mov insb loopne enter call les sub xchg push push sarb mov or cmp icebp lea adc les (bad) icebp mov fs or jecxz dec ficompl dec pop aad (bad) mov je std or cld and ljmp cwtl hlt in fistp popa mov cli sub cltd mov fisttp sbb xchg aad into adcl jg jge outsl in lds pop sahf sub sbb dec or xchg xchg test icebp sub mov dec mulb scas hlt inc lods cwtl mov (bad) out sub or sbb mov popf add sbb lock rcll mov push dec mov add ljmp dec xor push ffreep push bound (bad) outsb imul xchg jle psubusw out aaa lea pop flds orl and imul xchg push mov fsubrs out dec in jns in shrb adc pop fs ja lret stos lods fidiv mov aaa pop jl cmp sub or repnz push pop or addr16 cwtl dec lea movsb mov neg in inc mov (bad) cmpsb sub divl mov sbb faddp sub in outsl lds ss sahf push (bad) mov jae dec and scas mov popa movsb jecxz into jl mov cli insl jbe or push jbe lock aaa in xchg inc in mov and dec stos scas dec push int3 insb decb scas fildl mov xor call int (bad) scas jp xchg jb cmp dec push push push (bad) cmc lcall nop popa jmp dec push mov popf and pop jns fild repnz imul iret pop add into mov sub das or fisttpll jmp sub push jb xor das ss and lret stos add sbb sub pop xor fidivr dec (bad) inc cmpsb fcmovnbe sub pop xchg xchg lahf sbbl cmp les or jbe or mov out push jmp and xor rolb andb xchg scas inc int add push jns jnp cmp pop xor mov xor cld out sub loop lods sub jl insb mov sbb imul sbb and (bad) cmp add les popf adc ja rcrb cmp imul insb xchg call pushf fld hlt jmp jns jns es jno mov ljmp xor add into xor lods jp adc mov and loop pop imul nop push cltd ds inc aaa xor pop xchg (bad) iret pushl ss nop scas lret jg xchg (bad) leave rcll cmpsb popf and in les les sahf in mov mov or or push jo inc es add sub in movsb mov mov sbb popa and sbb cwtl pushw add jbe mov dec cmpsb and xchg mov loop sub sti mov (bad) jp mov fnop mov into loope cmpsb cmp outsl cwtl fstpt or jg mov jmp adc xchg dec out fisubl push push enter mov sti adc xor xchg pop gs add inc cmp sahf out dec mov fsubrs clc mov add jecxz popf dec iret dec mov mov dec scas dec pop (bad) pop out push push xor dec jb xchg pop dec or movsl mov stos inc sahf in inc xor pushf imul push das (bad) bnd push es das xor scas or in xlat pop scas xor mov mov bound xor movsb lret enter mov into jl mov sbb dec rcrb sbb xchg xlat push sysexit repz add (bad) loopne int jge pop in dec popf sahf inc push shr mov jno inc or nop mov lods and push jnp inc out mov push xchg mov (bad) dec cmp pop dec jb cltd cltd int xor xor xor mov rolb xchg mov aad or add dec push sbb cwtl outsb push xchg inc add sbb test mov idivb out push sub mov (bad) faddl bound jle (bad) jbe lret xchg pop out fisub loope daa (bad) mov int rorl imulb sub cmc cli pop call lods inc out mov xor les mov xchg xchg lds ja xor sbb inc xor aas loopne (bad) mov in rep pushf and aas pop and insb jecxz jno sub lcall adc mov pop add scas insb mov xor mov pop adc out xor adc inc xchg sbb inc push mov xor (bad) lods sub into sub sbb add movsb fistl ja fnsave add jecxz dec movsb pop push push cli hlt test xor outsl gs ficoml fld je cmp rclb aad outsb in repnz nop push aaa push jp rep mov mov inc push push cmpsb adc aam or clc mov mov lret mov mov jbe xchg fstpt mov ljmp mov cmp fmuls gs mov pop jb xor js pop fmull adc andl adc jae jp dec aas add inc mov jno or loopne inc add sbb imul jbe xchg gs sub cmpsb cld mov or rclb je add jge icebp rolb jb adc add and pop add inc xor cmc xlat xchg test add add mov dec jl dec dec les test cmpsb lcall xchg sbb cmp adc cmpsl rcrl pop lcall mov mov mov imul fldcw sub inc (bad) mov movsb push sarb and mov divb aaa clc and loope xor lcall push and and (bad) inc sbb sub dec push sbbb faddp aaa les cmpsb nop gs ret dec call test popa push ret push mov (bad) cmc notl cs hlt les cmc sub push les dec es adc gs xlat shlb orl (bad) in inc and sbb test popf into inc jns (bad) outsb (bad) aam jg pop push gs mov outsb repnz cmp hlt setnp mov add loop push sti cld es data16 loop mov push (bad) jmp adc xlat sbb and test out std or mov mov mov ret sbb xor fisubrl sbb (bad) cmp shlb sub cmp (bad) (bad) push xor add cmp jnp out sti pop or movsl adc sbb in add lret jmp mov bound les add sbb or push jg pop dec gs pop dec add mov jo repnz mov rcrl and rorl cmp pop cltd mov push in hlt sub (bad) pop mov push inc aaa xorl pop inc cmc xor in mov out sbb out orl cwtl inc jo inc bound (bad) dec pusha sbb pop push xchg (bad) jmp mov sar lods andl ret xchg test loopne (bad) in test out stc or push inc mov or fdivs push mov sahf stc call pop loop clc xchg adc or out cmpsl adc pop fwait bound jmp add mov arpl leave rep jl adc lods mov sbb xchg rcl addb mov cmc data16 and nop ficomp pop scas ja inc fnstsw sbb xor mov push push gs xor mov lock jns mov or lods outsb sbb (bad) aam dec lahf in sti mov cmpsl or (bad) out xor dec in push movsl pop or jp pop sbb jae stos sahf or or insl push cmc mov pop jne subl bound mov mov pop enter hlt inc ss pop xor xchg nopl ljmp and mov lea sahf mov xchg in out cmp movsb and negl enter ss das lret dec cmpsl sysexit cwtl test pop sub jmp xor jge (bad) cmp mov pop mov insb movsb pushf outsl add lret sti aaa dec mov gs mov jo jle mov xchg (bad) fcoml jns inc cmp mov push inc arpl test push fsubrl ljmp xchg xchg push test orl inc sbb jbe scas push xor imul addr16 mov faddl cmp shlb sahf pop or add pop sbb jl ljmp ljmp loop pop rcrl leave sarl icebp add sub int3 sarb mov jo adc mov mov mov pop addr16 jns in mov xchg adc addr16 or xor fnop out (bad) jmp jbe mov cmp and cmpsb jno dec sbb rorl mov sub mov adc mov adc outsl cmp popaw scas push inc xchg mov cmp mov int sub dec mov mov jo jl xlat cltd rolb outsl jno lahf pop lret movsl les movsb pop (bad) cmp (bad) ljmp adc mov popa mov pop pop jp shrl cli mov and xor cmpsl push and out dec cmpsb push fnsave cmc mov fs and out jle mov xchg addr16 cmp movsl add push in test gs lret stc daa sbb aas mov add mov mov je pop insl lret jb cmp imul prefetch je push lock ss inc mov jne xor ret jo xor pop aam jns idivl mov je sub (bad) mov and fwait jp popa stc jne test imul pop cs jle ror sahf mov inc cwtl sbb push ret dec jl sbb addr16 lret out mov add inc (bad) mov sahf dec pop xchg scas mov test inc mov mov adc ja add mov es orl inc idiv jmp mov push mov nop jo jg and mov leave daa dec stc imul icebp mov jbe xchg pop adc mov roll leave push out dec or cmp cmp je (bad) movsl cs mov push jo loope out lea scas imul test xor inc cmpsl and pop hlt sti adc pop leave mov mov sbb add jmp gs mov lock mov stos aaa push xor mov mov jmp push push inc mov nop out push (bad) data16 dec ror mov cmp in or mov stos sarb or (bad) xor out incb mov cmc (bad) pushf and imul push das inc out pop sub std and cvtdq2ps lret lret push cmp bound jecxz adc jb push enter imul jnp (bad) aaa in mov cwtl and and test daa jl xchg lods pop pushl cs xchg xchg push fs push cs (bad) mov add cmp xlat (bad) xor adc repnz inc adc mov mov push jle or push insb shrb sub push icebp push sub loop push or mov jge ljmp loope arpl aam repnz test jnp jg and sub popa jl xor movsl cmc add mov pop jno xchg inc cmpsl sub negb fsubrl out xchg adc cmp stos pop or cmpl pop mov repnz xchg not dec data16 mov jae fadd sti aam (bad) lods sbbb scas (bad) mov xchg jecxz cltd ficoml push jnp (bad) sbb adc push sahf and add or mov jae mov fildll jo mov mov mov xchg jo mov nop dec ja sub fwait loopne xchg jae sbb mov arpl xchg out mov int jge cmp into addr16 mov dec rorl jb daa xchg jb call and fsubl mov sahf and mov jecxz wbinvd jp cld mov pop mov daa dec xchg push or xchg les xchg loope aaa (bad) push mov pop adc push push cmp jns loopne jp lods out and mov clc cwtl dec unpckhps sub mov mov dec dec push cwtl (bad) pushf jl mov jns call jp movsl adc stc mov dec scas adc inc iret push mov xor (bad) in lods sbb xchg cld cmc pushf cmpsb mov ds xchg sub repz jle fisubrl inc add aaa pop push enter mov adc cmp inc xor ret (bad) mov cs push repnz add mov pushf and dec insb repnz test sub pop sbb gs mov rclb push in dec (bad) cltd andl mov ror mov mov inc push xor jl mov dec xchg push sub or test xchg dec addl repnz movsl xchg xchg pusha popa cld cld mov cmpl aad jae mov cltd pop fstps mov jmp inc xlat lahf mov lret fisttpl dec repnz cs (bad) mov xor mov and into mov adc das std and scas idivb xchg pop add ja inc xor adc push rcl movsb fist pop mov pop shlb sbb out xchg or stos pop sbb cmc fwait insl add sub ret dec mov stc push out adc pop xchg movsl sarb popa xchg call popf inc scas mov lods sub sub ja sub sbb fs pop sarb ficompl mov orl (bad) (bad) (bad) mov movsb cld or imul mov js push icebp rclb mov in sahf out in iret fcomps pop cwtl push aad negb sbb pop mov mov and loopne nop sub test stos mov jecxz in lods xchg mov jnp sub cmp and data16 mov and jns inc adc mov mov movaps dec sub imul push pop mov pop imul sub xor jg scas lock arpl (bad) aad nop cmp shrb pop into push mov push ja fimul sbb sub aas ja sub jb aad lock adc xchg sub dec mov xchg mov fimul cmp cmp pop stos inc push outsb pop adc pop add xchg lods add mov mov (bad) jp add dec loope lahf dec ret xchg dec sarb cmp in add ljmp int3 jae xor clc pop add xor mov push mov jae dec cmp pop sbb cmp popf push pop jbe xlat cmp sbb mov fcmovbe mov or setns xchg dec mov lret test lods out bound icebp ret popa xchg xor (bad) fisttpll jnp add in lods pop ss dec dec cmp fcompl push ds aas test jle outsb dec mov xchg shrl pop jge push fsubp loope imull inc into iret mov jp,pn xlat and lret scas repnz add push xor aad add test mov gs in add jno xchg loopne cmp unpckhps xchg mov aas adc fldenv inc push jl sub faddl mov adc add push lea ret mov dec test outsb mov cmpsb jmp mov xchg jecxz scas jmp mov fwait sub inc ss mov xchg dec mov enter pop xchg push in push cmp out xlat xor mov push repnz mov fs pop pushf mov fcomip (bad) inc shrb push outsb xor mov loope loopne notl xor jmp push mov xchg push mov hlt in jp push inc in mov mov icebp stos js adc jb scas pop xlat fsubrs and pop inc js sahf mov (bad) cmpsl stc (bad) std test mov cmpsb hlt loope mov enter mov (bad) lret sbb pushl add insb insl stos adc das pop hlt adc push icebp clc fstps test ret or cld mov pop insl cmpsl gs fstpt dec jne and idivl les enter cmpsb dec lcall mov jge pop cmpsb out sti fs xor dec test pop pop xchg addr16 in dec int cmp mov sbb push addl cwtl stos fist sbb stc sub push lods das sub in fadds dec sub cltd cltd js mov inc insl test inc aad int3 add jmp adcl fldl test out icebp je mov mov lods dec (bad) cmc ja fsubrs test mov mov adc cmp xchg sbb mov jns push mov dec outsl imul jl (bad) lret push in xchg add mov in fwait add ljmp lods sub addb aas data16 pop mov rcll (bad) es xor xor or cmp and push stc ja scas mov lds or sarl xchg jnp (bad) (bad) xchg push in cs fstps mov and pop in int sub call push ljmp gs xchg rcll les imul pop xchg mov loope dec (bad) xor jo push pop add and or cmp outsl mov shrb and lcall dec jnp xor xorb aam sbbb pushf daa out enter xor fstl mov rorl pop mulb cmp call lods inc testb inc mov mov inc sbb fwait push push insl and push mull mov adc add push pop mov xor (bad) fisubr scas pop mov sbb loopne lret mov mov lret mov ret jmp sub or mov adc jmp add ja (bad) inc adc xor xchg xor sahf jne mov lcall sub subl xor fnstsw cld pop dec push fidiv test jb mov mov fdivl (bad) or and mov xlat out jns dec call mov jmp and or or mov gs jle popa decl xchg call adc push adc jno mov lods xor test mov fldenv fidivrl dec (bad) cltd loope mov popf jno rcr mov add cmc testl jns icebp inc test outsl inc push dec push mov loop push pop mov xor testl pop aaa xor jne dec add jo and negl adc (bad) into jl lahf (bad) sub jl cs mov xchg cmp out xor add mov data16 push dec cmp jl shr movsl repz sub adc (bad) inc cmp dec cmp fadd mov ss mov mov insb scas mov fisubrl mov cmp jae sub stos pop sbb add inc pop pop repz fdivs mov lcall aad (bad) pop push cld cmp insl in lock jl ljmp add aas cli add lret xor and std jle adc mov jg xchg push dec sbb cltd aad mov ss lahf pop rorb ds ss push sarb (bad) adc cltd pop fst mov sbb pusha mov insb pushf dec mov lods fwait cld in (bad) cmp cmpsb or pop xchg cli repz add loopne movl dec push pop jl repz jle test (bad) mulb jno fwait adc cmp fwait shrl jmp mov ret (bad) pop pusha imul movsb nop add adc pop out lock or popf cmp test cmp lea rcll mov xchg cmp sbb dec add (bad) adc adc xchg rcl repz sub xchg orl inc int3 xchg push jg inc pop sbb adcb rcll mov mov jmp mov dec cmp push or add dec mov xchg (bad) imulb nop icebp and cltd int3 cs insb lock sahf or inc sbb mov sub pop stos jbe xchg sbb lds les pop loop dec mov dec jo (bad) pop pop aas or push icebp stc push scas out outsb pop adc lahf fisubrl lret pop jb mov jnp add scas (bad) sbb cmp adc push inc adc mov cld adc notb scas lea nop or div mov pop arpl aam stos lret jge jb popf leave adc fcomip (bad) rolb xchg je std xchg addr16 popl jnp leave sub add dec jae inc cs out and mov in add sub insb mov std cwtl arpl pop push (bad) repnz sbb nop nop call pop pop ret stc jmp xorb out mov rolb in imul jge cltd outsl xchg (bad) clc aaa sbb xchg ljmp or adc fisubrl and fsubs xchg movsb popa xor dec sub mov and lahf out in mov or into in xchg pop fimull pop adc xchg lahf mov pop mov and jl mov cmp idivb sub fisttpl mov jae fisttpll and fldenv or icebp and xchg xlat (bad) int mov inc sbb sub outsb mov adc push loopne fsts adc fbstp mov les mov repnz add add cmp enter xchg lahf jb das movb mov out lods cwtl fistpl jns and sarb shr mov sbb mov push sbb cld lret mov or out dec aas mov dec push jbe test mov rclb pusha lock nop xchg in in (bad) or inc jge dec push dec mov test jecxz jge mov stos xchg push insl pop (bad) pop mov repnz mov mov inc rorb jbe loope mov mov xor add inc cmc scas dec add pushf mov idiv cmp inc cld xor (bad) (bad) ja jae mov inc rcrl xor test pop adc mov lds mov in cmp and sub aaa lret or iret mov mov out cli movsl pop pushf sub add addr16 jge xchg cmp sbbl ret cmp dec test lcall xchg dec out xor pop repnz xor bound and in enter sti fwait pop mov cld mov jecxz sahf xchg mov test jb in fldl jl xchg addr16 pop pop in loope int3 xchg pop cmpsl sbb repz (bad) movsl push lods stc minps scas cmp xlat dec outsl push icebp int3 test nop pop (bad) xchg sub or int dec and push loop lock ja jmp imull fwait mov lea and mov push lahf inc out aam mov std in (bad) cs ret jmp nop fs leave sbb adc in push mov cmpsl jo mov sub push ret push je and push xor cwtl jle xor (bad) aaa popa or cld jb xchg xlat dec (bad) add pop add ds rcrb sbb mov jle data16 ds dec not test aam mov dec mov ljmp es in iret mov and fdivrl mov push and adc sbb daa adc (bad) fnstenv or or jnp (bad) jg sub inc hlt out cmp jb lret test sti mov mov push sbb adc and sub sbb sbb mov push inc pusha and cmp pop inc mov stc push js dec push sbbb leave (bad) aaa (bad) push cmpsb pushf pop fnop xchg repz shrb scas inc jnp pusha mov lcall cwtl lock and dec cltd rclb das aam push mov sub inc repnz fisttp lret push inc or push call add xchg add outsl xchg mov mov (bad) popf stc jbe jo jge mul je inc je (bad) fiadd sub mov push ret cmpb mov adc mov sub xchg add sub fcmove adc rorl aad jbe xor dec popa iret loope add test adc add mov loopne repnz sbb mov loop inc push addr16 sbb fdivs not lods cmp lock lods adc jo mov dec (bad) ss mov jmp bound enter sub cmp xchg stos pop cmp cltd sbb mov xor push ficompl dec pop sbb jne icebp or ss pop inc movsl das insb ja int push pop adc push xlat loope mov arpl test into out pusha push fsubrl es pop and imul cmp xor pusha sub jb xor add xor into jmp jnp add (bad) xchg cmp cmp clc out jns sbb push in xchg aaa inc pop add or xchg or mov pusha xor (bad) call inc mov loope hlt mov (bad) xlat mov cld cmpl (bad) repz shl mov aam cmp les fsts into pop jne das sbb (bad) or mov dec loop out nop or xor or xchg loop pop outsl mov xor mov repz stos jae cmp mov xor cmpsb int mov or insl push lcall lock (bad) pushf and sbb sbb data16 jmp sub inc and sbb mov enter jg fwait clc pop jp add inc les rcll repnz xchg pop adc rorb mov pop or scas lahf shr test fdivp jnp out out mov pop repz test sub dec or mov cmpsb aaa nop int imul ds pop or lock pop lahf cmp addb lock jno push lock mov flds mov mov adc enter mov push inc xchg push pusha repnz add sbb aam push mov sub sub outsl sbbl outsb test and mov cmpsl add cmc ss fldcw inc cwtl mov lods xor sub cld fsubs sahf mov fistpll sahf popf (bad) fucom das pop jno aad repz popf aas dec (bad) mov in daa xor xchg loopne jns adc adc or push dec dec xchg dec inc xchg sub xchg dec lods nop push jl push mov lcall bound in dec addr16 aas loopne push mov rorl lcall daa (bad) repz xor xchg loop lea (bad) sub pop repz je jne fnclex mov add lods jle add test dec es jae pop daa mov outsl xchg jmp jmp mov roll push loop add es fldcw data16 js add adc dec xlat mov adc lea addr16 clc pop or lods insb mov es mov inc test xor cmp (bad) enter (bad) mov sbb fs xchg or xchg push addr16 and sahf cmpsl pop ficom inc xchg xchg (bad) sub pop dec es fwait cmp pop mulb cwtl lret xchg sbb icebp stc xchg mov mov jns push decb jb cmp (bad) xchg es add xchg or loopne mov je push stos sbb (bad) aad leave mov inc jp popf pop imul rorb xchg out test cmp movsb add push jmp incb (bad) xchg popa ret gs jb or cmp jbe jns xor lock (bad) xor dec push aad inc and add jno xor cs pushf imul bnd setg fs xchg or dec dec (bad) sarl movd testl mov mov mov out sub out mov sub xchg sbb les jle mov sub (bad) (bad) outsl mov iret pusha dec lret adc sahf or or into pop cmc cmp dec or pop mov aas or icebp and xor call adc icebp rol and iret jle (bad) (bad) lret in ret add add pushf mov rorl test xchg fld mov jecxz fbld lret cmpsl add insl insb xor cmovnp cld sarb stos jecxz sub xchg mov sbb dec sub pop push sub ficoml out aam pop dec test into push sub lcall mov ja fdiv dec out leave cmp add rcrl loop cld add push pop xchg or out test rcrl std pop or xchg cli popf fdivs jmp jo dec and clc xor outsb mov mov test pop cltd xchg ss mov dec jb js pop cltd mov mov sub and mov push popa lea jbe gs test jns or xchg pop jne fstpt loopne test and stos jo movb (bad) mov sub iret fadd mov jecxz jl sub arpl mov add push ret pop ds or sbb mov sub dec cmpsl leave aam les sbb mov xchg cmpsl inc dec subl xchg xor push pop pop add movsb xor jg sbb shlb or push stos shrl icebp imul lret pop cwtl sub sbbl movsl xor mov cmp sub jmp dec aam add outsl test jae scas or push aam rcll sub (bad) bound mov pop pop cmc jmp xor (bad) mov js (bad) xor xorl inc mov das mov dec es pop in imul out pop sahf push pop mov (bad) xchg xchg xchg sti popa cli pop movsb and into sti ret das (bad) mov sub sub por dec ds lret push imul mov jmp aas push jl fsubrs scas lret dec jmp arpl pop and pushl mov pop push fs data16 and lahf std enter decl add jo pop mov out add pusha xchg rcrl adcl hlt daa inc add mov mov loope inc mov jno (bad) mov icebp and mov cs mov sbb pushf sub pusha mov bound xor outsb jl jno sahf (bad) je push ret xlat int3 sub inc inc nop cwtl sub jo popf test das test cwtl xor jg inc les dec flds pop mov popf fcomip cmc call pushf sub test mov cmpsb dec mov push mov pusha enter jns inc push ret inc cmpsb in dec lahf mov push jl cmp push sub push inc pushl sub xchg addr16 xchg inc sbb sub mov fwait enter jnp sub dec lahf add dec clc sub ljmp arpl out pop fdivl jbe lahf dec cwtl fild ret enter pop or inc or push adc pop (bad) daa lock lcall hlt or add dec push in and mov and jns (bad) cmp dec dec sbb in nop (bad) fdivrs mov sub test ljmp mov test push pop addr16 jmp into fwait add jg dec sahf or (bad) aam ss mov adc out inc and jnp mov cmp push movsl das pop add sbb ror test scas xor sub inc add mov cmpsb les push jg mov fs add or mov push lock (bad) lea sub stos fptan mov push ficompl outsl pop mov in scas (bad) cwtl sbb pop add (bad) cmp int3 mov mov iret xor cwtl shr xorl xchg aad pop or mov sub nop cmpsl negb mov xchg dec xorl xor sbb sub cmp clc inc cmpsb je pop push idivl mov stc xchg adc ss push (bad) int (bad) nop pusha lahf xchg sbb lds sbb push pop inc ret inc push push cmp rclb leave mov xorl pop faddl add mov inc cmpsl xor cmp adc sbb push jp ds incl inc inc pop xchg push ss cli (bad) and icebp hlt mov je in iret (bad) int xor (bad) mov pop mov and xchg data16 sbb sti xchg and jnp rorl dec sub pop xor sti rol xchg cltd cwtd sub iret daa dec add xchg mov ficomp dec adc cmp pop pop add dec or dec and dec insl jle push inc jle jo jo inc lock ja dec fwait xchg xchg das in iret add add pushf ss sahf scas repnz mov ret jmp push mov fldln2 mov mov imul (bad) flds push add push jecxz cmpsb and dec pop aas fisub dec ljmp push in jge fcmove mov repz xchg push into ds lcall pop pop out cmc lock leave xchg pop in clc mov js or cmp add adc xchg into mov bound push (bad) jbe inc daa push or add cmp dec add orl clc xor int3 mov clc dec add jle xchg sub xchg js cltd js pop icebp mov out enter lds mov es stos mov loope mov test jns or jbe outsl xchg mov std loop sbb and xor jo (bad) ds mov pop iret mov cmp jbe sti jl enter mov sub in mov std jne dec mov add add jbe ret jp cld mov jle stos mov jae xor imul mov cmpsl fwait inc jnp push push xor jge fisub adcl fs aad dec bound jge adc sub xor (bad) (bad) jbe sub addl mov add cmp into mov sub pop in enter add gs test push adc pop cld inc adc js (bad) or xor outsl bound mov jge jp adc lret stos mov (bad) scas rep xor xorl xlat pop mov cmp ljmp push movsb ror xor jl fwait mov arpl lret mov cmp push out mov clc (bad) rcrl xchg inc or (bad) push es xchg daa scas mov rcl sbb ljmp fist pop ss add notb lock cmpl imul ja cld and pop jp inc fwait imul int js fwait mov pop sbb sti push pop (bad) jb fldl gs dec aas mov lods push cmp xchg stos clc rcrl mov cld imul nop daa icebp cmp cli mov sub das (bad) (bad) shrd pop push loopne fcomi popa daa and dec dec or xchg aad aaa aad sub or cmp and out adc cltd (bad) cwtl pushf mov arpl inc add jb or fs cli xchg neg jp out test mov hlt inc mov pusha mov jns pop mov dec jmp pop cltd inc jge (bad) xor movb xchg pop cmpsl lock xchg xchg jp lahf ljmp call xor lea call sub out xchg lea jmp lock daa cltd (bad) in addb loopne sbb nop add or adc sub aas and or pop add loop lret in or sub imul cltd jecxz testl and in xor ds aaa (bad) (bad) adc cltd pop mov mov test (bad) xchg aad xchg mov push add (bad) jp fdivl push inc adc push (bad) jno push roll stc xchg (bad) mov dec cmp stos js loope push inc aas xchg push scas divl (bad) xor jnp mov inc jp or fcoms or sbbl icebp cmc enter xor lds sub aam pop shlb mov pop lock in push sub std shrl fdivr pushf cli inc mov inc rclb and mov dec or fadds xchg xor jmp das (bad) jo test rolb push imul or (bad) lahf ljmp fs mov cmpsl mov sbb iret add xor imul dec push (bad) cld icebp mov inc (bad) cmc arpl xlat (bad) cmp cmp out pop movsb in xchg push mov dec out rorb push and fxch adc add dec xchg fisubrl hlt (bad) sbb mov mov ret adc xor aas inc jl adc hlt jecxz pop or adcl int3 cmp xor (bad) push mov repz jae pop push dec arpl imul mov pushl jnp aam test cltd pop mov pop cld dec cs std leave mov loope movsb in or std pop jge adc xor repnz and or aaa int cmp jae pop dec cmp lods flds dec add cltd jne cmp (bad) push movl xor add pushf testb sahf out mov (bad) xchg addr16 push lcall adc pop and lds loopne call or xor hlt cmpsl cmp stos and arpl mov inc loope sbb test scas (bad) pop mov adc orl or lods fimull jg daa leave pop jle sbbl js daa mov xchg inc sbb jae imul mov das mov cmp add jo inc daa lods mov mov ljmp jge imul dec mov imul (bad) adc dec neg push sub xchg dec test or cmp aas push out fldl lret or jle add (bad) add push push decb or (bad) inc jne outsl mov popf pop pop test mov sub or sub stos mov fidiv lea sahf fs sarl es subl repz je push clc je xchg mov das rcll jnp cmc (bad) mov mov idivb and jmp pop leave mov out sub push jno mov lcall push add movsl and mov mov fmull jmp jae mov adc lret lds sub add pop ja jnp mov pop int sub and push lret dec aam add push or frndint bound or xor decb stos fnsave lcall and mov andl mov sahf cld sbb mov enter call popf pop mov in call dec idivl xchg mov cmp pusha gs das and leave mov rorl aad js xchg inc push push std pop adc push es rcrb jbe movsb lahf hlt fstp xor leave push and cmp (bad) adcl adc cwtl cmp sub ja,pt mov push sar movsb inc jb pop mov out daa int3 inc push nop lods push dec pop sbb inc adc fdivl test dec ds insb dec mov es add loopne jnp scas mov xchg cs fdivl jge (bad) sti scas andl cmp add in cld fdivrl jmp mov fistl ljmp xor test cltd add cmp cmp mov daa xchg movsb cltd cmpl lret in jl adcb repnz (bad) mov (bad) jno outsb cmp (bad) mov lock mov je sub imul in popf adc ficoml pop in dec push sbb push inc jnp lods cmp stc and (bad) shll xchg push sbb xor ss rclb aaa jns sub lcall test out (bad) fnstsw nop pop clc mov mov lds sbb inc push std nop xchg adc rolb dec or fidivl cmpsb movsl pop pop popf pop or jecxz lret adc (bad) jnp ds stc out mov or mov js repz out loopne jmp cwtl add js popa mov in std add dec push es mov xchg mov dec xchg mov frstor (bad) jne xlat insb fsubs into sub inc adc repnz ds fldcw pushf into psubw pop push jl aaa stos xor add push push fs mov mov (bad) aam sti pop push and dec out push test (bad) pushf jno inc fcmovnbe add sbb mov insl ljmp movsb cmc and adc xchg sub xor outsl lret add hlt jb sti ss decl cmp stos mov mov push sub test (bad) push pop sbb lods loopne sbb stos rorb mov cli and mov fwait jnp jb or (bad) (bad) xor mov lea pop mov mov stos cwtl mov sbb and xchg push hlt (bad) sub pushw jae xchg adc inc imul clc xchg jns cmp pop int3 leave gs int3 and and jmp (bad) jb dec sbb inc xchg in push cs addb cmp pop add jae jecxz mov inc pusha retw movb xor mov xor sub sub xchg (bad) fwait aas insl cld and les sbb ljmp cmc pop sub cmpsb sar std inc or jmp test adc cmp dec mov cs xchg (bad) rcll shll dec ds dec mov dec mov mov data16 mov mov jle mov (bad) es sub std mov cmp jb into mov sub lock inc jmp fdivp push movl xor popa add sub mov ret imul mov and sbb lret call mov insl loop es push sar cmp stos and arpl jmp mov movsl jge fidivl mov aam pop addl add lods fimull xchg out leave pop jbe xorl das mov jp les add adc mov xor push divb inc es sbb mov ljmp add orl cmpsl mov jl sub pop loop rcrb add pop je mov sbbl pop inc pushf daa popa mov or test dec or aad loopne xchg out jne fstpt std xor and (bad) aas pop mov jno mov mov (bad) jbe sti loope push ss ret loop scas inc je aam lahf jne arpl les inc add jecxz mov cld int3 jp sbb mov jb mulb loope cmp dec je cmpsl inc inc mov xchg xor aad or jp,pt fild mov shll or mov xor ss xor (bad) (bad) pop nop sub xorl movsl push rcr jge dec adc jno add pop enter add push or scas fcomps push (bad) jno out sub loope mov lods or call xor mov stos mov pushf mov into jmp xorl xlat mov lret out mov dec pop ljmp pop in imul jl lcall xchg rclb cmp or (bad) (bad) icebp or fcoml js dec dec add push push not xchg sub fwait jmp or loope pop rclb push xor sbbl sub or ss cmp xchg xchg mov repnz inc jb push inc jle int dec fcomps push push aam sbb call inc das les add frstor mov ljmp cs icebp in add imull enter inc inc add lret int3 out adc cmpsl negb lret mov inc xchg adc outsb push mov and jmp daa xchg lcall rolb popa insb dec imul xor push pop shll or fsubrl out and xchg ljmp pop clc mov fdivrs loop mov loopne test mov rolb xchg push or cmp mov test cmp pusha inc in std add mov (bad) aam scas dec fisubrl jecxz adc pop in cld and inc adc mov in cs mov mov push pusha add mov (bad) jmp hlt (bad) sub sahf mov push mov sbb sti xchg pop xor xchg adc mov in shl rcr xorl inc jnp push dec loop movl add cmp or stc dec dec add mov push adc std push (bad) rclb sahf popf nop movsb jae mov rcrl jns mov add in pusha adc jge mov ss push add fs vshufps pop mov fucomip loop aaa insl xor cmp sti xchg (bad) mov into xchg daa cmp push and call cmp jb inc push cltd push movsb xlat cmp insb push aas mov mov test mov cmp pop aad add and ss inc and (bad) xor out and cli data16 sbb pop loope rcr out enter into inc loop adc dec lds daa outsb repnz popf and ret outsl imul mov xchg mov shrb lret adc adc cmp xor and iret lods (bad) fwait xlat push push imul mov in jge in and lods adc inc out jne movsw adc sub push mov push pushl cmp andl sti jmp dec into les cmp int3 xor dec xlat push jge mov mov and in mov enter lahf mov in lea xchg fcmovu add sub dec pop and test pop movsb ficoml in rcrl aad out adc inc jmp iret test stos insb jp inc xchg mov push inc inc cmc and jo test dec shrl mov outsl aad sti std cmp dec xchg movsb ret inc push mov xchg repnz (bad) scas ja cltd sbb jle scas dec and mov lret mov aam in cwtl jo xchg insb call andl cmpsb popa pop mov dec into mov push dec ret push mov into sbb xor jns jge lock movsb das int3 add les sti daa cmpsb (bad) movsb outsb dec in mov xchg cmp int3 sarb and (bad) mov out add cmp sbb test cmp (bad) xlat jo popf pop or sub mov jnp push enter add add data16 imul sbb (bad) outsl bound push and mov cmp lds popa dec push int3 sub jl pop scas into xlat jge inc add and dec and out insb adc adc imul and inc insl push (bad) sti xchg adc push daa mov or pop hlt ja mov leave pop jp add sub loop lods mov fwait test pop sub lods or push mov (bad) sbb inc cmp dec mov or push pushf stc xchg pop enter jg cs das out jns add sbb jb inc fdivr xchg cmovns and push sub in xlat in shrb in pop inc mov fisttpll jbe mov add add dec fidivr lahf add int3 fiaddl and popf dec xchg scas push inc shrb insb cmp inc sub daa popf (bad) (bad) jle pop fbld idivb pop push xor push jl aad push aaa mov pop mov sub aad cmpsl sub sub hlt movsb sub or inc sbb xchg rcr es or dec (bad) dec dec sarb xor dec iret pop sti cmp inc fwait add gs xor (bad) dec dec xor adc dec inc or xchg adc sbb xchg inc cld repnz sbb jmp mov add add pop adc icebp jge push in pop test push cld leave loopne add push inc xchg aad jmp icebp in push bound mov xchg push pushf aam fsubl and hlt aaa dec pop jge inc iret lods sub fmull ret jg,pt cwtl repz repnz fwait or and lods sub in ds and lock jl aam fmuls cli xchg add push push out pop das sti iret cs in add add enter inc inc or lret int3 out adc cmpsl negb lret mov inc xchg adc pop inc outsb add sub and loopne push shlb pop popa insb dec imul xor push pop shll or fsubrl out and xchg ljmp pop clc mov fdivrs loop mov loopne test mov rolb xchg push or cmp mov test cmp pusha inc in std add mov (bad) aam scas dec fisubrl jecxz adc pop ret (bad) sahf pop in popf and inc adc mov in cs mov mov push pusha add mov repz js xlat pop mov idiv adc mov mulb sbb push out pop xor or sbb in shl rcr xorl inc jnp push dec loop movl add cmp or stc dec dec add mov push adc std push (bad) rclb sahf popf nop movsb jae mov rcrl jns mov add in pusha adc jge mov ss push add fs vshufps pop mov fucomip loop aaa insl xor cmp add es or mov pop or sarb dec test push outsb xlat imul lret jmp outsl inc repz test bswap in add aad add and ss inc and (bad) xor out and cli data16 sbb pop loope rcr out enter into inc loop adc dec lds daa outsb repnz popf and ret outsl imul mov xchg mov shrb lret adc adc cmp xor and iret lods (bad) fwait xlat push push imul mov in jge in and or dec outsl (bad) jmp movsl cmp lods jns sahf mov ss jecxz lahf mov movsb test cmp sti out in mov xchg imul xor dec xlat push jge mov mov and in mov enter lahf mov in lea xchg fcmovu add sub dec pop and test pop movsb ficoml in rcrl aad out adc inc jmp iret test stos insb jp inc xchg mov push inc inc cmc and jo test dec shrl mov outsl aad sti std cmp dec xchg movsb ret inc push mov xchg repnz jg sub and test xlat xchg rsqrtps leave inc pop or rcl in cwtl jo xchg insb lcall movsl arpl lret popaw xor cmp es ret push mov into sbb xor jns jge lock movsb das int3 add les sti daa cmpsb (bad) movsb outsb dec in mov xchg cmp int3 sarb and (bad) mov out add cmp sbb test cmp (bad) xlat jo popf pop or sub mov jnp push enter add add data16 imul sbb (bad) outsl bound push or sbb shrb and inc loope int3 sub jl pop scas into aad mov or jo xor jnp pop jb sub ljmp xchg lahf xchg cmp mov xchg jns insl push (bad) sti xchg adc push daa mov or pop hlt ja mov leave pop jp add sub loop lods mov fwait test pop sub lods or push mov (bad) sbb inc cmp dec mov or push pushf stc xchg pop enter jg cs das out jns add sbb jb inc fdivr xchg add cmpsl sub push xlat (bad) push (bad) sbb mov (bad) sub jbe mov sub into (bad) mov pop jl mov and popf arpl push push into cltd xchg jmp lds adc popf (bad) (bad) jle pop fbld idivb pop push xor push jl aad push aaa mov pop mov sub aad cmpsl sub sub hlt movsb sub or inc sbb xchg rcr es or dec (bad) dec dec sarb xor dec iret pop sti cmp inc fwait add gs xor (bad) dec dec xor adc dec inc or xchg adc out or ja and pop sbb jmp and cmc and xchg mov leave push repnz test pop push repnz adc sub gs int sub lea in mov xchg push pushf aam fsubl and hlt aaa dec pop jge inc iret lods sub fmull ret jg,pt cwtl repz repnz fwait or and lods sub in ds and lock jl aam fmuls cli xchg add push push out pop das sti iret cs in add add enter inc inc or lret int3 out adc cmpsl negb loopne popf mov sarb cmp outsb push mov std mov (bad) xor xchg sbb ljmp dec imul mov mov idivb insl std dec pop or fsubrl out and xchg ljmp pop clc mov fdivrs loop mov loopne test mov rolb xchg push or cmp mov test cmp pusha inc in std add mov (bad) aam scas dec fisubrl jecxz adc pop ret (bad) sahf pop in popf and inc adc mov in cs mov mov push pusha sub mov xlat pop mov add mov in scas adc and fcomps std mov adcb out sahf xchg jbe mov adc mov in shl rcr xorl inc jnp push dec loop movl add cmp or stc dec dec add mov push adc std push (bad) rclb sahf popf nop movsb jae mov rcrl jns mov add in pusha adc jge mov ss push add fs vshufps pop mov fucomip loop out cmp pop int hlt loop fs mov xchg daa cmp push and call cmp ss inc test push movsb xlat cmp imul cli leave add in cmp pop aad add and ss inc and (bad) xor out and cli data16 sbb pop loope rcr out enter into inc loop adc dec lds daa outsb repnz popf and ret outsl imul mov xchg mov shrb lret adc adc cmp xor and iret lods (bad) fwait xlat push push imul nop and outsl fisubr jge imul dec jns xchg jne addr16 adc sub push mov inc call pop into movsb test cmp sti fstl xchg mov xchg imul xor dec xlat push jge mov mov and in mov enter lahf mov in lea xchg fcmovu add sub dec pop and test pop movsb ficoml in rcrl aad out adc inc jmp iret test stos insb jp inc xchg mov push inc inc cmc and jo test dec shrl mov outsl aad sti std cmp dec xchg movsb ret inc push mov (bad) dec test jno cltd jae,pt fldl push mov cmc jns or push or sbb or push popa cmp cmp stos movsb inc std es ret push mov into sbb xor jns jge lock movsb das int3 add les sti daa cmpsb (bad) movsb outsb dec in mov xchg cmp int3 sarb and (bad) mov out add cmp sbb test cmp (bad) xlat jo popf pop or sub mov jnp push enter add add data16 imul sbb (bad) outsl bound push and mov cmp fcoms dec int int3 add outsl jl fcomps std clc pop inc sub lcall rclb adc ret movsl imul and inc insl push (bad) sti xchg adc push daa mov or pop hlt ja mov leave pop jp add sub loop lods mov fwait test pop sub lods or push mov (bad) sbb inc cmp dec mov or push pushf stc xchg pop enter jg cs das out jns add sbb jb inc fdivr xchg cmovns and push sub in xlat in shrb in idiv mov pop mov lods ret aam or popa push rol andb arpl and popf dec xchg scas push inc shrb insb cmp inc sub daa popf (bad) (bad) jle pop fbld idivb pop push xor push jl aad push aaa mov pop mov sub aad cmpsl sub sub hlt movsb sub or inc sbb xchg rcr es or dec (bad) dec dec sarb xor dec iret pop sti cmp inc fwait add gs xor (bad) dec dec xor adc dec inc or xchg adc sbb xchg inc cld repnz xchg popf movsb in sub or add xlat notb mov leave push cmc xorl jl sub cld leave loopne add push inc xchg aad jmp icebp in push bound mov xchg push pushf aam fsubl and hlt aaa dec pop jge inc iret lods sub fmull ret jg,pt cwtl repz repnz fwait or and lods sub in ds and lock jl aam fmuls cli xchg aas mov addr16 sti iret cs in add add enter inc inc or lret int3 out adc cmpsl negb lret mov inc xchg adc lods jp push mov and in push xchg cmp clc mov dec imul xor push pop shll or fsubrl out and xchg ljmp pop clc mov fdivrs loop mov loopne test mov rolb xchg push or cmp mov test cmp pusha inc in std add mov fsts test sub jecxz adc pop ret (bad) sahf pop in popf and inc adc mov in cs mov mov push pusha add mov (bad) jmp hlt (bad) sub sahf mov push mov sbb sti xchg pop xor xchg adc mov in shl rcr xorl inc jnp push dec loop movl add cmp or stc dec dec add mov push adc std push (bad) rclb sahf popf nop movsb jae mov rcrl jns mov mov push pusha push push mov mov ss push add fs vshufps pop mov fucomip loop aaa insl xor cmp sti xchg (bad) mov into xchg daa cmp push and call cmp jb inc push cltd push movsb xlat cmp insb push aas mov mov test mov cmp pop aad add and ss inc and (bad) xor out and cli data16 sbb pop loope rcr out enter into inc loop adc dec lds daa outsb repnz popf and ret outsl imul xchg push push movsl cmp shrb lret adc adc cmp xor and iret lods (bad) fwait xlat push push imul mov in jge in and lods adc inc out jne movsw adc sub push mov push pushl cmp andl sti jmp dec into les cmp int3 xor dec xlat push jge mov mov and in mov enter lahf mov in lea xchg fcmovu add sub dec pop and test pop movsb ficoml in rcrl aad out adc jns dec cs lcall mov mov push sbb shrl mov outsl aad sti std cmp dec xchg movsb ret inc push mov xchg repnz (bad) scas ja cltd sbb jle scas dec and mov lret mov aam in cwtl jo xchg insb call andl cmpsb popa pop mov dec into mov push dec ret push mov into sbb xor jns jge lock movsb das int3 add les sti daa cmpsb (bad) movsb outsb dec in mov xchg cmp int3 sarb and (bad) mov out add add cltd gs add cmp and jne or addb enter add add data16 imul sbb (bad) outsl bound push and mov cmp lds popa dec push int3 sub jl pop scas into xlat jge inc add and dec and out insb adc adc imul and inc insl push (bad) sti xchg adc push daa mov or pop hlt ja mov leave pop jp add sub loop lods mov fwait test pop sub lods or push enter jns je shrb inc dec movsb mov mov dec femms pushf stc xchg pop enter jg cs das out jns add sbb jb inc fdivr xchg cmovns and push sub in xlat in shrb in pop inc mov fisttpll jbe mov add add dec fidivr lahf add int3 fiaddl and popf dec xchg scas push inc shrb insb cmp inc sub daa popf (bad) (bad) jle pop fbld idivb pop push xor push jl aad push aaa mov pop mov sub aad cmpsl sub sub hlt lcall xlat ja inc inc shrl push or das xchg add inc cmp mov iret pop sti cmp inc fwait add gs xor (bad) dec dec xor adc dec inc or xchg adc sbb xchg inc cld repnz sbb jmp mov add or inc xor leave sub test push cld leave loopne add push inc xchg aad jmp icebp in push bound mov xchg push pushf aam fsubl and hlt aaa dec pop jge inc iret lods sub fmull ret jg,pt cwtl repz int3 push rcrb xchg in lods loop ljmp xlat fnstcw cmp aam cli cmp fadd adc add push push out pop das sti iret cs in add add enter inc inc or lret int3 out adc cmpsl negb lret mov inc xchg adc outsb push mov and jmp daa xchg lcall rolb popa insb dec imul xor push pop shll or fsubrl out and xchg ljmp pop clc mov fdivrs loop mov loopne test mov (bad) mov (bad) jle xchg push cmp cld jge pop dec test shrl add in data16 cmc jo inc mov xlat scas dec fisubrl jecxz adc pop ret (bad) sahf pop in popf and inc adc mov in cs mov mov push pusha add mov (bad) jmp hlt (bad) sub sahf mov push mov sbb sti xchg pop xor xchg adc mov in shl rcr xorl inc jnp push dec loop movl add cmp or stc dec dec add mov push out sbb inc mov aaa sub pushf mov popf pop dec mov sub scas xor fidivl int pop pusha adc jge mov ss push add fs vshufps pop mov fucomip loop aaa insl xor cmp sti xchg (bad) mov into xchg daa cmp push and call cmp jb inc push cltd push movsb xlat cmp insb push aas mov mov test mov cmp pop aad add and ss inc and (bad) xor out and cli data16 sbb pop loope in arpl sub add adc iret xchg repnz and inc pop or mov sbb popf jle jg outsb sar shrb lret adc adc cmp xor and iret lods (bad) fwait xlat push push imul mov in jge in and lods adc inc out jne movsw adc sub push mov push pushl cmp andl sti jmp dec into les cmp int3 xor dec xlat push jge mov mov and in mov enter mov or ret shrl loope jle int3 lret cmc mov ficompl hlt iret aad pop out rorl xor cmp lods outsl mov push inc inc cmc and jo test dec shrl mov outsl aad sti std cmp dec xchg movsb ret inc push mov xchg repnz (bad) scas ja cltd sbb jle scas dec and mov lret mov aam in cwtl jo xchg insb call andl cmpsb popa pop mov dec into mov push dec ret push mov into sbb xor jns jge lock movsb das int3 add les inc movsb cmpsb aam pushf dec scas rorb jnp in cmp mov and or ja jae stc xor mov lret cmp ds xorl ss jnp push enter add add data16 imul sbb (bad) outsl bound push and mov cmp lds popa dec push int3 sub jl pop scas into xlat jge inc add and dec and out insb adc adc imul and inc insl push (bad) sti xchg adc push daa mov or pop hlt ja pushf fildl jp mov cmc loopne add sub enter pusha test mov lret loopw cmp into inc push inc pop (bad) jne cld je shrb inc dec movsb mov mov dec femms pushf stc xchg pop enter jg cs das out jns add sbb jb inc fdivr xchg cmovns and push sub in xlat in shrb in pop inc mov fisttpll jbe mov add add dec fidivr lahf add int3 fiaddl and popf dec xchg scas push inc shrb insb cmp inc sub daa popf (bad) (bad) jle pop fbld idivb mov mov xchg sub (bad) mov mov mov cmpsl jecxz (bad) sub lds rclb not push dec inc shrl push or das xchg add mov xor dec iret pop sti cmp inc fwait add gs xor (bad) dec dec xor adc dec inc or xchg adc sbb xchg inc cld repnz sbb jmp mov add or inc xor leave sub test push cld leave loopne add push inc xchg aad jmp icebp in push bound mov xchg push pushf ljmp hlt je jns mov mov lea add subl add sbb fwait (bad) or (bad) push int3 loopne loop ljmp xlat fnstcw cmp aam cli cmp fmuls cli xchg add push push out pop das sti iret cs in add add enter inc inc or lret int3 out adc cmpsl negb lret mov inc xchg adc outsb push mov and jmp daa xchg lcall rolb popa insb dec imul xor push pop shll or fsubrl out and sbb jbe fisub add sub dec sahf sub push orb push mov or lods pop out idivb enter xchg cld jge pop dec test shrl add in data16 cmc jo (bad) (bad) aam scas dec fisubrl jecxz adc pop ret (bad) sahf pop in popf and inc adc mov in cs mov mov push pusha add mov (bad) jmp hlt (bad) sub sahf mov push mov sbb sti xchg pop xor xchg adc mov in shl rcr xorl stc clc jb enter xor mov sub bound push or adc lds cli inc sub idiv lds sub pushf mov popf pop dec mov sub scas xor fidivl push jo pusha adc jge mov ss push add fs vshufps pop mov fucomip loop aaa insl xor cmp sti xchg (bad) mov into xchg daa cmp push and call cmp jb inc push cltd push movsb xlat cmp insb push aas mov mov test mov cmp pop aad add and jne mov inc inc shl sbb jb stos insb mov stos lret lods inc jecxz and adc aam out mov adc adc iret xchg repnz and inc pop or mov sbb popf jle xchg mov shrb lret adc adc cmp xor and iret lods (bad) fwait xlat push push imul mov in jge in and lods adc inc out jne movsw adc sub push mov push pushl cmp andl sti jmp cmc dec les mov xlat aad hlt mov jge (bad) arpl push pop xchg in gs pop xor add les int3 lret cmc mov ficompl hlt iret aad pop out rorl xor cmp inc xchg mov push inc inc cmc and jo test dec shrl mov outsl aad sti std cmp dec xchg movsb ret inc push mov xchg repnz (bad) scas ja cltd sbb jle scas dec and mov lret mov aam in cwtl jo xchg insb call andl cmpsb popa pop mov dec into mov jmp mov add xchg es sbb xchg cld mov aaa add adc cmpsb xor mov pop jnp in cmp mov and or ja jae stc xor mov lret cmp ds xorl ds jnp push enter add add data16 imul sbb (bad) outsl bound push and mov cmp lds popa dec push int3 sub jl pop scas into xlat jge inc add and dec and out insb adc stos dec imul xchg popl out divb mov repnz xchg sbb mov mov push lea mov cmc loopne add sub enter pusha test mov lret loopw cmp into inc push inc pop (bad) jne cld je shrb inc orl mov femms pushf stc xchg pop enter jg cs das out jns add sbb jb inc fdivr xchg cmovns and push sub in xlat in shrb in pop inc mov fisttpll jbe mov add add dec fidivr lahf add int3 fiaddl and popf arpl push add cmpsl pop xchg push cmpsb mov (bad) adc test aaa lahf movsb dec push xchg out stos xor jbe aaa jno cmp (bad) dec jnp mov mov cmpsl jecxz (bad) sub lds rclb not push dec inc shrl push or sub out enter dec sarb cmp dec iret pop sti cmp inc fwait add gs xor (bad) dec dec xor adc dec inc or xchg adc sbb xchg inc cld repnz sbb jmp mov add or inc xor leave sub ss jns loopne mov push mov sub or push test pop ja sbb pushf pop lea gs add cld movsb je mov mov lea add subl add sbb fwait (bad) or (bad) push int3 loopne loop ljmp aam cmp enter scas inc daa fldl addr16 loope inc mov push shrb mov icebp cmp std cli mov fstpt xchg sbb pushf out out pop pusha inc int (bad) bound xor dec pop ds in jmp ret aaa xlat test das inc hlt nop or insb jecxz adc sahf mov arpl inc push sahf or and push test pushf ljmp in out sarl cmc dec mov ja aaa pusha mov jg push cmpsl inc push in lock adc jl cmpl push or sbb cmp nop xchg xchg fldcw jp xlat shrb push xorb sbb mov jmp idiv or scas cmp cld (bad) mov sti in sbb mov and aam addl jecxz push fstl inc mov push jl dec (bad) daa loopne pop lcall cmc push add imul repnz movsl test js loope jbe test out (bad) adc cltd sbb loop jl les (bad) addl test inc dec push add (bad) xchg bound jle sbb push pop into jae sub fdivrl dec rorb shrl jl aam mov cmp sub fs test mov xlat mov dec movsl and movsl mov lret sbb call test mov insb repnz (bad) icebp icebp dec in hlt ss sub aam pop shlb mov adc xor in lea dec sti leave sub icebp ret fisubl pop repnz out and xor inc pop dec dec ljmp pop add xchg rclb mov xorl jl xor cwtl xchg jg mov or cmp add mov push int3 out xchg add cwtl shrb popa sub in mov ljmp popa inc mov repnz arpl mov mov int fist (bad) mov insl mov popf push mov xor ret pushf push cmp lds cmp (bad) cmp cmp sub int add mov inc pop xor cmp movb inc cmp sub xchg imul cli pop and mov dec iret pusha sbb divl xor push jmp jp daa stc and je pop sub xchg insl cs xchg mov jnp shll dec fisttp daa mov (bad) xchg add sub iret add fsubrs pop xchg or inc fiadd dec jg sub cmp or push and xor insl out lock inc cltd or negl fwait lock add addb pushf mov repnz mov ret push push sub xor dec pop scas imul (bad) lods mov insl mov push mov stos inc addl xchg sbb dec pusha jmp test jge ficompl mov aam pop int or jnp push decb (bad) lods mov cmc repz leave or mov hlt mov (bad) das icebp loop cld lds jae push jmp mov pop test rcl insb push xchg jbe inc inc je sbb (bad) mov xchg add andl ret icebp gs xor cmp mov das mov pop lea add xchg dec jb js pop adc fldl dec ja mov inc popa mov sbb jecxz xor xchg aad loopne xchg out jne fstpt jle dec xor jo (bad) pop pop ret xchg daa mov pop mov outsb in jbe sti loope gs ret fidivl inc jne xchg imul jne arpl sbb in mov add push xchg movsl jp sbb mov pop sbb cmpsl jae (bad) (bad) iret sub stos and dec xor sub sbbl and pop inc call xchg pop and mov aad cmpsb sbb xor ret leave or xlat js dec jns aas hlt stc arpl xlat mov loopne repz adc mov jb mov adc xchg jmp xor mov mov pop and cvtpi2ps (bad) mov xor inc cmp mov stos test push test nop into scas ficoml push mov sbb sub xchg sub mov out not dec jmp cld divb sub out cwtl incl inc mov pop lret out and pop (bad) jae mov in mov sar stos mov push call bound push mov push inc and icebp cmpsb dec ds jle pop testb adc stos push push pop addb stos mov and push aas loopne orb add xor fimul subl xor xor xchg mov mov frstor rcr fimull xchg cmc pop popa stc mov ss out mov js in movsb xchg adc daa xchg cmc jle add dec or mov adc inc xchg jmp sub jo adc nop into jmp lret inc shrb mov sub insb xchg sahf pop incl int3 adc or in jo cmp cmp pop in (bad) dec push or sbb cmp nop xchg xchg fldcw jp xlat shrb push xorb sbb mov jmp idiv or scas cmp cld (bad) mov sti in sbb mov and aam addl jecxz push fstl inc mov push jl dec (bad) daa loopne pop lcall cmc push add imul repnz movsl test js loope jbe test out (bad) adc cltd sbb loop jl les (bad) addl test inc dec push add (bad) xchg bound jle sbb push pop into jae sub fdivrl dec rorl loope (bad) cwtl jo pop ja inc mov cmp add push test mov cmpl addr16 movsl jecxz jno pusha lret push loopne xor sbb mov insb repnz vpsllw movsl hlt ss les sub rclb pop shlb mov adc xor in lea or leave sub icebp xchg fiaddl sub jecxz dec ficompl es push dec test mov inc sbb adc mov mov adc xchg cwtl out or enter arpl cmp mov pop sub nop mov push mov cmpl hlt aas jp sub mov clc (bad) sbb cmp inc (bad) mov push push loope stc adcb ss dec pushf int (bad) nop and xchg sub sti xlat sbb inc sbb pop mov and fcmovnb add add inc orl dec push dec mov inc inc xor cmp addb inc push xor ds sub pop add sbb arpl sub cmp bound dec iret pusha sbb adc mov mov jmp test adc cmp dec xchg sbb xchg xchg (bad) rcll shll dec ds dec mov dec mov mov inc sub iret insl dec or xor inc fmulp inc fistpll pop or pop out cmp jb into mov sub lock inc jmp fdivp push movl xor popa add sub mov ret imul mov and sbb lret call mov insl loop es push sar cmp stos and arpl jmp mov movsl jge fidivl mov aam pop addl add lods fimull xchg out leave pop jbe xorl das mov jp les add adc mov xor push divb inc es sbb mov ljmp add orl cmpsl mov jl sub pop loop rcrb add pop je mov sbbl pop inc pushf daa popa mov or test dec or aad loopne xchg out jne fstpt std xor and (bad) aas pop mov jno mov mov (bad) jbe sti loope push ss ret loop scas inc je aam lahf jne arpl les inc add jecxz out mov adc sbb jno shrb or mov jns loope jbe test out (bad) adc cltd sbb loop jl les fcomps negl (bad) aam mull jb lret jecxz mov and adc adc sub push push outsb cwtl xor insl mov xchg jge js jl mov cmp push add enter or push roll sbb mov mov movsb rcrl mov push loopne xor jae fwait sub ret insb repnz icebp icebp dec movsl movsl hlt push das les sub aam pop shlb mov adc xor in lea or mov inc mov pop ficompl es push dec test movsb incb mov add mov adc mov mov adc sahf mov in or enter arpl cmp mov pop int3 cmp call outsb xchg imul stos hlt aas jp sub mov clc (bad) sbb cmp inc (bad) mov push push loope stc xorb ss dec pushf int (bad) nop and mov enter mov popf push mov xor mov (bad) jmp mov pop add inc orl dec push cmp ret inc addr16 pop push inc push xor adc lret cmpsl add sbb arpl bound dec iret pusha sbb notl jl (bad) mov nop xor out jp (bad) test adc cmp dec xchg sbb xchg xchg (bad) rcll shll dec ds dec mov dec mov mov incb mov adc xor mov mov inc fdivrl pop push daa pop out cmp jb into mov sub lock inc jmp fdivp push movl xor popa add sub les jle loop adc scas in xor lret push jns ss jg xchg in pop inc notb dec scas imul shlb cmpsb sarb inc mov in daa cmp mov scas sti sub aaa aam or lods cmp fiaddl or fnsave cwtl popa (bad) das mov sbb add ss cmp or cwtl xor push cld idiv inc es push jmp lret add (bad) ljmp imul sbb icebp fs lods or test push bound and pushf test xorl jne jns test jmp pop add jecxz add outsl mov popa mov xchg mov push popa js aam nop sbb out jne icebp je ss int jns in sbb pop loopne (bad) dec shlb add jl cld loope push sbb ror scas inc jle sbb mov add loop testb imul in jg lahf mov xchg repnz sub cs and pop bound notl pushf sbb cmpsb sbb jg in into cmp das out sub bound push lret popa sub dec incb std addr16 int3 loopne pop push jmp rcll jnp pop mov enter outsb in mov pop fldcw xor xchg rcr or lcall bound sub call dec divb pushf mov in icebp xor test loope (bad) mov xor mov aas pop loop aas aaa pop mov dec call sub call sbb or (bad) (bad) sti and rol sbb daa sbb roll jle cmpsb mov lcall mov pop jb push test adc sbb ljmp movsl cmp push mov mov js jg push mov mov adc loop jae fsubs jmp push rol insl pop and xlat repz aam inc movsb rclb cmp sub std xchg mov fidivrl xchg sbb xchg stc in ss lret repz insl dec bound push mov jmp ret aaa fldl lcall sub les jecxz gs mov pop jl pop imul stos data16 addr16 push testl jecxz ljmp cli mov dec dec and mov pusha mov outsb pop mov mov ficom inc jl test in (bad) cmp and sbb pop mov sub lcall pop sbb sub (bad) add push xorb adc out lret cwtl call sub cld (bad) mov sti ljmp mov sahf in dec xor in popa lds inc mov insl or jl dec (bad) daa xchg pop pop lcall fldl add jg outsl inc in jmp test sar shrl movsl test js notb push lea xchg leave mov movsl loop jbe in mov enter add push mov bound or notl inc adc jb into jns xor jne jnp or mov cwtl jo inc pop pop inc mov dec cld add xorl fistp stc pop push (bad) jb addr16 jo jg mov dec enter add fwait sub cli insb repnz in out icebp dec out mov mov and lods xor iret push pop lret popf popf add lock cmp rcl sub sti mov insl mov bnd fcomip and dec test stos incb stos push sub mov pop std and loop lret push push xor push enter jge add inc out sub lcall mov jo imul (bad) jmp jp aaa and sbb clc (bad) and dec jmp mov ljmp adc int (bad) into nop and mov enter mov lods adc pop (bad) jecxz and fnstsw icebp les leave xor popa jb cmpb pop pop hlt outsb push cmp leave dec xor ret cmp insl push inc push cmp sub jp add cmp arpl cmp sbb iret pusha add adc call out pop out adc daa test xchg cmp xchg xchg movl and popa js ds inc mov dec mov mov inc adc into insl dec or xchg sub stc iret inc aad bound std pop push dec jnp cmp inc data16 mov and icebp lods inc in or inc iret call popf cli cmpsl cmp add sahf ror mov ret outsb push and (bad) jbe test dec mov data16 sbb rolb loop sub inc push sar pop leave stos sub fs xor sbb stos fidivl jge loop mov aam sbb test xchg add fwait push cmp (bad) lahf out repz enter aam clc xorl pop sub jp ret sbb outsl push addb xor out test fsubs push cld cli movl ret shr test add jo nop orl out (bad) or xchg and mov scas scas gs push stc xchg add pop jle test lcallw adc ja aad pop inc xchg or mov pop insl lods mov test pop dec or (bad) loop xor (bad) jne rcll enter fisttpl xor xor stos mov pop icebp xor test clc sti loope sub dec ret out pop inc je mov fs lret test add pop push jecxz lea in sbb jg xchg mov outsb fidivrl add cmpsl sub adc dec pop or jge mov xchg xor std inc or mov aad mov xchg sub (bad) frstor bound push scas nop xor add nop sub stos insb mov scas lret push xchg jno xchg push inc into adc add in loopne aam pop mov addb stos (bad) std push icebp xor in add add popa mov xchg sahf sub (bad) mov cli mov cwtl mov inc cmp xchg (bad) xchg jecxz jmp repnz std mov dec sbb (bad) ljmp inc mov arpl jl nop bound mov lcall jbe cmp ret jge cmpsb les jmp jns ss pop leave push push not test test push rcll mov jmp negl cmp xchg jno pop arpl dec aad dec lcall test pop mov pop and mov lods dec xlat cmp jg and cmp fcomps push push ljmp (bad) add stos popa pop and (bad) mov xchg enter (bad) fucomi cs fnstcw lock dec dec cmc add ljmp (bad) jae jbe ficoml sbb xchg fcmovne dec shrb xchg or xor cmp icebp icebp xor fs sub or and outsb imull xchg test shlb lods and icebp dec sub mov pusha sbb in lock push repnz cmp iret inc add out inc dec dec mov gs std cmp mov gs dec inc into jo add shrb (bad) mov mov mov movsl (bad) data16 movsb lret add xor sti in addl mov jecxz push fimull pop shrb in push jl adc ss push pop mov xor add scas jp pop inc std in sub (bad) fadds sbb cld js jmp aas out (bad) push mov mov mov les shlb xchg push sub inc es nop mov (bad) xchg fs divb pop mov push ss pop lds pop sub fidivrl push rorl out sti cwtl jo push jg xchg mov dec lret push push jmp mov loopne in fwait cmpl sbb sbb loopne mov push idiv xor daa inc repz pusha shr repnz ret loop inc int hlt sub in xchg test clc daa pop shlb mov adc xor add stc sub idiv sahf inc stos and (bad) es add std mov inc ja pop add push loop mov loope aaa mov sahf mov pop pop arpl data16 xor mov nop mov inc test jge jge jno test enter js pop add in mov mov imul jnp loope xchg les test int3 fcomps xchg mov jbe nop popf sbb push enter push and repz pop add aaa scas or aam shrl sub mov inc sub cmp add aas jmp ja insl xchg xchg pop pop daa cli sub popf ret bound cmp arpl push fistpll cmp cmpsb mov adc pop out jnp sub bound cmp dec cli pop cs cltd (bad) push dec ds mov stos jbe xchg jo lds mov data16 pop scas sbb inc faddp loope cmp push jp pop out dec push and enterw jnp lea lock push cli add fdivrl xchg (bad) aaa dec push add sub mov lods sub loope mov and call mov loopne es bound mov test pop sub push adc jmp cmpsb inc mov mov jle mov add decl shrb pushf test cmp les out iret or clc mov sbb mov mov out mov xor jb gs stos fildll pop lods push and jle (bad) lret cmpsb inc jo bnd insb pcmpeqb fucomi mov sub sbb rorb jns mov push sbb jnp hlt pop ret pushf gs imul adc leave sub pop repnz aas push jae mov daa popa jecxz jp jno push cmc lcall push (bad) xor jno stos push aam test and (bad) xor mov insl in outsb (bad) jl out lock repz outsl jp (bad) xchg or aad (bad) (bad) mov pop fsubrl imul push jge xchg movsb fldt sbb mulb leave sub stos and jecxz dec or insb xchg push and aad ja popf movsb xor xchg adc or sub loop mov lods pusha xor xor pop nop jae movsl jae int3 (bad) push mov test lret pop mov (bad) aam add (bad) xor fcomps and xchg mov ret aas sbb les dec pop sbb ret lea cmp cwtl scas leave (bad) pushf mov out add inc xor out adc nop out fbstp imul mov hlt pop mov in outsl popa adc addr16 fmull mov mov rcll mov xchg ret and cwtl sub (bad) stos bound dec add in pop push fldl out scas iret les cmpsl add lods xchg in loope cmp jmp sub sbb and sbbl dec in test (bad) cmp js mov repnz dec add mov into dec fnstcw xor sbb fadd (bad) cwtl add aad je xchg sbb clc mov jp shl push scas sbb cs out push xchg fstpt jmp push or push outsb and sub dec dec bound data16 in jecxz in fcmovnb ss xchg pushf jmp jge daa jp xchg test out dec jno mov ret cmp sahf or and shrl sti pushf out cmc inc arpl (bad) popa out shll mov inc iret cmpsb ja xor inc xor sbb lahf cmp pop cltd gs xorl or push jno mov cmp nop xchg cld cmp mov jp fstp outsl loopne xorb pop sub lock div shlb test dec in xchg cwtl mov cli cld sbb mov cwtl addl loopne sub or xor adc jne fldt lcall cmc adc dec imulb xchg inc lret mov shl add movsl test js loopne jbe lahf pop out decb (bad) cltd sbb leave cmp and cmpsl repz test jo inc inc mov xchg aaa xchg add fldenv xchg push jne fisub push pop into js sub fisubr or or lahf les jl test loop inc push push in mov rol push test sbb inc inc cwtl jg jecxz ja xor mov jns dec ss xor mov ret neg sbb movsl (bad) sbb add mov test xchg adc aaa (bad) mov das inc sub sbbb in lea and leave sub clc mov fcoms std nopl dec xchg (bad) pushf ret mov add push es mov xchg out jecxz adc lcall xchg pusha push jne das jbe fdivrs sub xchg mov cmp fnstenv lods push rcrb sub mov sbb push aas adc std lock push push in imul aaa test xchg dec mov inc inc rcll mov sub icebp lcall nop fwait cmp push sub pop pop ret xchg push and fsubr jg cmp sub fs stos and xor cmpsl dec push pop mov dec xor cmp sbb jns inc xchg xchg xor and repnz jmp sub mov arpl dec mov cmp mov (bad) cld jle mov push in jns pop test add sub xor in add xchg cmp bound scas sub and movsb pushf lods notb mov inc fsubrs and sbb idiv inc fistpll pop fs std pop add pop loope js addr16 int3 pop or cs (bad) lock dec ret pop fdivp sbb insl int mov nop (bad) sbb popa add ds repnz ret imul pop bound or lret call mov addr16 es gs cmp stos xor arpl jecxz popf sbb mov mov ficom fldcw ret sub lcall fimull nop xchg and inc push out sbb sub mov mov sub es jle add push scas lcall jmp xor jge jg cld dec add xor int3 inc mov pop xor add pop and cmpsl mov jge sub gs rcrl cmp js pop je mov lcall mov push jp push push dec mov jns xchg mov mov dec add test loopne dec in push cmpsb fildl xor and (bad) cmp xchg jo mov mov (bad) jne sti loope dec push dec ret (bad) inc addr16 out incl arpl ljmp cmp add sub mov jo in idivb lahf test inc enter jnp pop ficomp mov inc stos push sbbl sub pop pop add xchg xor cmpsl or and test fldcw mov xor je sub stos aas mov scas inc and jnp mov into adc add in loopne aam pop mov adc je (bad) fcomps inc rcll push out pop and add out popf mov or sarb (bad) stos mov mov mov jecxz lahf xor push xlat mov lret mov pop jmp push pop in imul jl or xchg rcrb cmp sbb nop fdivl mov or push js mov jle leave pop push not xchg sub lcall mov into repnz or rcrl xchg push stos cmp jns mov mov xchg iret std stos les dec lea and ds icebp sahf stos jbe push push push clc rcrb ret push out sub xor xchg xchg cmp xlat out sbb aam inc sahf mov xchg pop stos push mov icebp adc jmp lcall mov pop pop aad cmc mov test dec bound out clc xor repz hlt xchg and pusha xchg out das loope mov mov arpl push push sahf or cwtl sub add test pushf in cmc and out (bad) mov mov cmc dec mov pusha mov xor jbe fwait cmpsl inc pop push mov push cmp cmpl adc (bad) lods fnstcw cwtl movsb cmp cld cmp add idivb fldcw jge rcrb enter in sub mov or mov rcrl leave es fimull xor xchg mov imul xchg xchg push in lahf mov push jge inc add pop nop jae (bad) inc in jecxz aaa sub push lock sbb ljmp xchg pop ljmp in xchg pop and (bad) xchg pop dec lahf push addl push mov mov bound or pop fildll mov inc aam pop outsl nop (bad) push pop les sub (bad) outsb mov jbe loope jecxz je jl pop arpl dec inc push xchg jge sbb mov mov pop sbb jb adc sbb (bad) lret jnp call fsts sbb cmc push ret dec imul popf das les sub rclb push (bad) jbe mov adc in push es inc inc loope push mov out inc fdivl js pop or test cmpsl into inc sbb rclb mov mov adc pushf lcall add push and cmp xchg mov inc mov call adc pop scas cwtl mov shll push pushf sub cltd pop mov test pop cmp dec loopne jmp mov xchg outsl pop push jae mov jmp (bad) jbe nop popf sbb lcall xchg push and ret aam dec pop add testb faddl inc ljmp xor ret cmp xchg inc push cmp arpl int es fs scas and sti outsb fs xchg sbb mov add xor aad (bad) pop sbbl call adc dec xor dec test cs xchg xlat shll shll push push fwait dec aad dec mov mov xchg jp lock lds cli or bound mov fidiv pop and add cmp into mov sub sub insl lcall dec push (bad) dec fisubl xchg (bad) cmp push ret mov mov jmp fstps inc fwait or mov sti xor (bad) pushf mov insl clc xor adc cmpsb cmp mov and dec push cmp in lods mov mov mov aam aaa sahf test daa jne sub dec add cmp (bad) xchg iret in cmc xchg in (bad) into pop insl rclb jl das test jp mov dec jbe gs mov mov arpl xor and jg jbe dec sub sub insl rcl call xor push xchg push xchg daa mov mov jl add mov jne enter mov dec sub pop jb lods je or dec sub add push mov add ja pop cmc xorl idiv or xor cmp and out pop mov cld lcall bound je cli loope jl dec ret call das aam fwait push in popa sub sbb (bad) mov jg add fiaddl mov test dec movsb aaa jb xacquire push cmp dec jo fdivrl mov cli xor sarl add add cmpl xchg lods or mov or sub (bad) pop nop sub cmovnp xchg mov (bad) push pushf into adc push imul rcrb ret inc mov dec inc scas fdivl push pop or stc inc cmp jae loope mov int3 mov jge je cmc call cmp out (bad) enter mov dec mov or mov in test loope lods pushf dec sbb (bad) pusha mov cmc inc dec dec addr16 push mov push fwait mov aas xchg (bad) lahf mov xor jno (bad) icebp adc sahf js xchg pop or dec pop int jge roll jns lods xchg loope mov sbb repz and pop gs jbe sbb aas cld cmp push mov inc repnz inc jp jne jle xor dec inc fsubrs jns cld clc sbb rcrb std roll daa mov repnz and out addr16 (bad) jnp lcall mov lock (bad) xchg push roll mov bound pushf out ljmp shll adc push jecxz jmp cmp xlat test cmp negl sub sbb (bad) mov xchg pop arpl inc push icebp sub subl lods xor cli fisubr icebp xchg out cwtl mov js (bad) push movsl cli pop hlt aaa pusha mov daa js imul in hlt mov sub cmpl push or (bad) dec mov add popf xchg pop sbb push inc xlat (bad) inc or cmp push cmp loope jb mov loope jo scas cmp mov sti call cmp mov ret popa dec xchg xchg sub dec mov inc jae adc sub out sbb add fwait sbb sub dec addr16 inc in mov xor test push sub decl out (bad) push out lahf pop in insb mov arpl or mov mov mov add push pop pop lret cmp pop xchg bound add sbb into sbb sub fidivrl sti push leave loopne cwtl jp push data16 mov aas icebp or test mov mov mov cmp push dec loope jno inc lret sub add fwait sub add arpl fcomi ss rclb mov jno dec cmpsb rclb pop enter mov arpl xor or jmp mov stos sub popf stc dec ficompl pop es dec cmpb imul cltd fsubrs cmp call xor push adc test enter arpl imul je cmp stc inc out push (bad) scas cwtl test idivb push sbb sub mov pop mov dec je sbb mov jns hlt (bad) test fidivl nop dec out jb fbld test xchg sub rclb mov cltd ds sbb sub les mov and fucomp add cmp fistpl popa jb stos push cmpsl xor rorl push in add mov inc inc xor mov pop sbb out jne lret ja insl xchg xchg pop push gs sub mov add inc popa mull outsb mov mov jmp cmpl popa cmp mov iret rcll shll adc cltd dec sti mov jbe (bad) mov data16 lods movsb iret insl dec and cs (bad) mov inc fmulp insb aad pop addr16 cmp add push xor imul (bad) icebp push ret insl test cmp les xchg (bad) pushf testb mov inc ret imul xchg jne test or sbb dec leave add xchg mov insl icebp add add push sar cmp mov sub arpl push in push aaa sbb mov aam adc xorl pop sahf and ret cld (bad) lahf loope loope out into dec adc ret js pop out jp mov sub inc pop add adc pop mov or inc inc (bad) sub jbe inc push subb rol cmc mov xchg stos dec daa mov mov jl add mov jne movsb pop loop rcrl (bad) mov jae js js mov xorl and inc pushf daa push stos mov popw jg xchg mov lods imul loopne mov sbb ss or jmp dec mov push cmpsl mov mov xchg sti loope jl dec ret in cmpsl push jae in negb xor leave jg add mov mov fcmovu jl aad mov jne decb out pusha mov mov repnz mov xchg xor enter mov fisttp xchg xchg and cmc or bound test push mov xor (bad) xor sub mov pop push mov mov adc jno adc pop enter add adc js push lock std push fisttpll jno in sub loope lods mov or out xchg jne sbb cltd xchg pushf mov ret push sbb cwtl push xlat mov out mov scas pop iret movsl sahf aas or push mov inc (bad) sahf fwait mov and jbe sub bsr jno test push adc js popf xchg or rorb cmpsb clts neg pop sub mov jmp jmp cmp push push pusha lret add add lcall push xor push mov or and nop out lods inc mov jle add sahf dec fcomps push pop pop shlb add push in pop arpl pop sub int3 xchg inc daa xlat hlt xchg in js idivb xchg push shrb mov jp std cli mov xlat cmp mov fldcw inc int (bad) bound (bad) fcmovbe push bound inc lahf in (bad) lock xlat mov ss (bad) push ds sub adc sahf lcall les lds pop call mov push fldl xchg mov mov push jno lods ja aaa lcall adc cmpsl inc shr lock xor pop cltd add sahf pop in (bad) pop pop or or mov cmp nop xchg xchg fldcw js xlat shlb push andb sbb mov jmp hlt clc or scas cmp std (bad) mov out in sbb mov cwtl (bad) inc xor jecxz push fstl inc movsb imul sub fbld lock out iret popf sbb dec inc in cmp out out test loope out jb pop xor (bad) jp xor das mov mov stc rorl jmp mov push add aad inc and sub push pusha andl dec fidivrl push add out andb mov pop loop pop push push (bad) jnp movsb mov cmpsb xchg and pop imul stos add dec iret rol rcll and aas adc cmpl or xlat jmp dec aam out sub mov lock sub mov mov xchg (bad) xor pop sub jp ljmp inc sti iret sub stos shr icebp hlt dec fiaddl xor add leave fs sbb inc dec add ja ljmp jl sub and xchg insb pop adcl popa xchg fcmovb xor mov cmc (bad) dec xlat ljmp popf ss test aas jl add rcrl adc cs mov mov orl fdivr enter xchg dec rcl and xlat nop jae dec (bad) out je mov pop mov cmpl xchg dec (bad) ds push fdivs pop add outsl or sbb rcrb pop and or lahf xor inc sub sbb xchg xchg ljmp out sub loope data16 jmp fs dec lcall daa cmp fldt adc js xor xchg divb cmc fwait rcl or lcall loopne es loop or jecxz pop jns sub adc lods cwtl fwait or flds lods or lds push dec sbb mov cmp mov mov cs repz dec loope ja jbe inc negl fwait lret aad fwait xchg scas xor add mov (bad) shll je mov clc xchg cwtl pop inc jp outsl scas sbb add (bad) and cmp je (bad) cld xchg sbb mov js gs ds inc jmp mov fcomps ret ss negb popl out lods mov xor mov leave xchg jp fimull jbe das test sbb push test xor xchg das das pushf nop or mov push cmpsb je jo inc pusha push xchg out mov in popf das push fs add cmpsl ljmp mov jb sub pop loop rcrb xchg add jecxz xchg mov lods sbbl pop inc pushf daa popa (bad) mov ja or test dec or aad loopne xchg pop jno fstpt std xor and (bad) es mov push mov pusha mov fwait jbe sti les aad scas inc jno (bad) divb std mov add sub test xchg jp sbb mov inc adc cmpsl les sbb dec je cmpsl push inc (bad) insb test xchg push cmp pop pop add movsb push ds jle andl and in or sub xchg test xor xor nop sub sbbl movsl imul test into aas sub jmp inc jbe call push or scas cmc dec std push stos or jmp push loop sub bound sub pop (bad) call xor lds mov lock icebp xorl mov shrl lahf dec sbb in mov in imul jl (bad) mov xor ret je pop imul (bad) mov sti sbb push popa jmp dec mov decl leave sbb not sahf xchg lods xchg test cmp out push jle jbe mov adc sbbl aas pop mov loop xchg push mov jle and mov inc add mov push iret sti fs jo pop inc push iret clc repz (bad) pusha test inc mov xor test push daa xchg xchg in jp mov loope inc daa xchg jmp pop mov testb cmp ljmp sbb xchg push out dec pusha pusha lds cmp dec sbb ds jl stos xchg enter bound ds and (bad) sub into (bad) fs test dec mov lahf scas xor les scas inc aas sahf aas scas jp push xchg jo sbb cwtl mov sub popf fcmovnu hlt insb xchg test mov ja andb popa xor push mov lahf das insb leave cwtl inc jp nop cmc pop mov cmp sub sub xchg adc pop ljmp ret test push sub cmp dec sahf mov sub (bad) fcomps lods insb jg and xor (bad) sbb dec and rolb jecxz cmp sbb or aas or or push pop add movl xchg sub stc mov sub push lea (bad) imul lods pop lcall out mov inc xchg sahf xchg sti mov xchg out daa cs lret jle mov cmpsl cmpsl (bad) das ds pusha fisub arpl add jl insl rorl loope push andb ja inc mov inc (bad) push (bad) jnp mov cmpl data16 xchg sbb pop lret jmp sbbl icebp xor movsl hlt ss jmp jno xor rorl mov adc negl (bad) mov add leave sub icebp xchg fiaddl out inc ficompl es push dec inc (bad) ljmp mov rclb mov mov adc xchg cwtl and xchg aaa loopne addr16 arpl cld and mov mov push js mov inc xorl hlt aas mov sbb adc fistpll pop adc mov ret in jmp test xchg ss dec pushf int fist popf imul enter mov nop jge jbe daa pop mov loop push ret cs pop add inc or xchg pop jle pop push cmp add cmp addb inc push xor cmp inc xchg xchg sbb arpl out and repz add iret pusha sbb out push cmp mov mov test (bad) add cmp fistl (bad) sub ret shl popf cmp sub cwtl and (bad) xor repnz jno pop sub iret insl dec mov outsb or inc fimul dec sbb inc or or popa and sub lock inc insl adc div mov push mov call mov repz mov ret dec push dec mov lcall scas xor lret call xchg dec insl lea (bad) jno sar cmp stos loope sbb mov sbb dec xchg cli push xchg stos cltd push movsl jge fidivl mov aad sbb out sub lcall ljmp out rcll pop fs mov rcl mov (bad) das and insl cld lds jae inc ss adc xchg sub mov xor push push jbe inc pushf push sub jmp xabort (bad) xor sbbl cmp pop xchg mov jl mov mov pop aam rcrb enter lds mov int push jmp sub add rcrl dec push xor test jo or aad iret xor out jne fildl push inc add cs pusha pop push xchg dec mov je icebp outsb pop jg sti fidivrl loop cmp and mov std je push mov or je xchg jo sbb mov jb cmpsl adc inc les sbb and je lods mov insb xchg arpl xchg xor inc pop orl in fild xor call stos add mov imul dec (bad) (bad) pop add rorl cmpb jno add sub jmp outsl aam add push sbb scas fcomps push xchg or out sub mov mov or jns std sbb lds and inc clc inc xor addl mov mov aam pop ljmp or punpckhwd data16 dec imul sahf cwtl mov mov xchg ret pop and adc test or out dec push ss pop leave push push sar mov push lock mov lcall pop lds push xor pop cwtl mov pop icebp test jae push xor bound and loope stc inc (bad) dec mov mov pop imul clc lea imulb rcrl lock scas or in pop addr16 loope inc xor insb (bad) je (bad) sarl jp std imul cmc mov pushf imul (bad) and (bad) fimull ds in sbb push xlat clc es test xor insb jne jnp leave test sahf mov arpl (bad) out movsl inc push sahf mov mov adc orl fnstsw push mov jnp cmc dec and loope mov push ss and jl mov scas pop jg xlat pop push (bad) aam mov mov sub jo aam xchg fnsave mov insl enter jnp or ljmp sub cmp dec (bad) ljmp in pop fsubl mov sahf mov mov xchg lret sbb clc xchg imul sub (bad) daa loopne pop lcall sahf push add imul repnz movsl test mov out add adc pop sbb mov (bad) cwtl int xlat repz test inc mov mov (bad) pop addr16 hlt pop sbb push lahf iret jo pop dec push jg dec rorl loop inc addb xor inc mov cmp add push inc jle mov cmpl hlt mov movsl jecxz jb cmpsb lret mov push or test pop icebp icebp dec in divl jmp jmp sub push pop xchg lds sub adc notl out mov test icebp xchg fcmovb mov repnz jmp pop add sti insb sbb pop add mov push mov and mov mov adc xchg cwtl and or repz ret pop arpl mov sub nop mov push js scas xchg jmp cwtl mov sbb sub jbe mov clc subl cmpsl arpl mov rcll stos stc out adc nop dec pushf int fist xchg in movsl sbbb enter mov pushf fimull mov loop fadd lahf (bad) std leave pop add inc orl test int add mov inc xchg jne mov addb inc push xor aas mov xchg xchg sbb pusha cli out and mull dec iret arpl loopne popa cmp mov mov sub gs push lds sub xchg pop rcll shll dec push sub and (bad) es xchg xchg pop movsw sub iret insl dec or (bad) (bad) fstps inc sbb dec icebp (bad) mov cmp mov int jmp insl lcall icebp jno mov iret xor lods add mov repz mov roll lcall lods out data16 call xchg dec insl lea rolb push sar cmp stos loope fstpl fisub cmp dec xchg cli push sbb cmpsb fidivl mov aad sbb xchg mov jmp (bad) xchg sar scas (bad) xchg out leave lret clc test (bad) das and mov sub jb sub add adc xchg cmp add (bad) dec (bad) jne inc pushf push sub jmp xabort mov add sbbl xor pop stos mov jg scas pushf shll clc pop loop rcrb jno,pn jns pop je mov test jmp sub ja mov and mov sbb xchg mov test dec or aad loopne xchg out jne fstpt std xor and (bad) aas pop mov jno mov mov (bad) jbe sti loopne push ss ret loop scas inc je aad sahf jne arpl lds inc add jecxz mov fmul jp sbb (bad) imulb xor mulb loopne cmp dec je xchg mov xchg xor aam or jg cmpl cld mov mov xor xor (bad) (bad) pop nop sub jae lret pop push mov nop jge into adc je add pop enter add push or scas pop pop std push (bad) jae sbb or add sbb mov sbb call xor mov stos mov lods mov into call xorl lods loope cli mov dec pop ljmp push in imul jle cwtl mov cmp ja cmp or (bad) (bad) icebp (bad) fstl js xchg dec add cld dec add roll jle lods xchg jmp jmp cmp adc sbbl ds (bad) or cmpb push mov repz inc jb dec mov daa iret dec fstps pop push cld clc sbb fldenv roll les scas inc daa fldl addr16 loope inc mov push shrb mov icebp cmp lock cli mov fstpt xchg sbb pushf out out pop pusha inc int (bad) bound xor dec pop ds in jmp ret aaa xlat stos sub inc hlt nop push sub into sub adc sahf mov arpl inc push sahf or and imul mov fnstsw out test mov hlt dec mov ja ss mov jg push cmpsl inc push in lock adc jl cmpl or pop inc pop mov cmp nop xchg xchg fsubrs jp xlat shrb push xorb sbb popa mov movntps stos (bad) pop sub adc incb and mov (bad) fstpl inc test adc adc sub pop mov (bad) pop fdiv push pop sub jnp dec inc in xlat nop fwait in aam inc or jmp xor cmp lahf test out (bad) in cltd sbb mov les (bad) addl xchg cmpl cs push dec push add fisubl xchg bound jle xorl rclb dec fnstsw pop rorl jecxz jne jo pop ja inc mov aas loop inc push push test mov cmpl data16 mov sbb mov push loopne and pop subl insb add icebp cmc dec sbb mov sub rclb pop shlb test inc in adc lea or lret sub fdiv jecxz dec fisubl dec mov mov inc sbb adc mov mov aaa enter xchg cwtl out cmpsl and xchg push popa xchg fcmove sub mov mov push mov cmpl hlt aas jnp mov adc cs jmp stos sbb inc push loope stc pop add add outsl (bad) nop mov fdivr xlat sbb sub sbb pop mov and fcmovb or cmp pop add inc orl xor fmull mov aam ds push inc xor cmp addb inc pop es inc sub adc inc xchg xchg (bad) and sub int bound dec iret sbb adc mov mov in daa push and pusha cmp dec xchg sbb xchg xchg (bad) adc sub push ds mov mov jb sub iret sahf dec or xor inc fmulp inc fistpll pop or pop out cmp jb int3 mov sub in inc out or push movl xor arpl (bad) adc sub mov (bad) imul mov and sbb (bad) into call mov insl jecxz es push ret cld cmpsb cmp stos and bound jmp mov pop js fidivl mov rclb pop addb sub lcall fimull xchg out leave inc dec jbe xchg xchg mov jp lds outsl push addb or out xchg (bad) mov cmp jbe inc aad sub out mov jmp mov add orl cmpsl mov jl sub pop les jl xchg add repnz xchg mov stos cmpl pop inc pushf aam mov or addl or aad loopne xchg out jne fstpt push or jo (bad) aas pop mov jo mov mov (bad) jbe sti loope push ss ret loop scas inc jne aam lahf jne arpl cli sbb sarl jp stc int3 jp sbb cmpsl imull xor inc cmpsl sub sub aaa sbb je,pt movsb xchg inc shrl jmp pop call mov cmp and jb pop bound add dec inc add add add add or add jbe xor xor add add add push or add jle add push add and jb outsb addr16 add add add and dec inc add add add and outsl bound add add add push xchg add or add add add add add add add xor add adc add sldt add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add lret add add add add add add add add add add add add add add add aaa add add aaa add add add add add add add add add add add add add add add add add add add aaa add add aaa add add aaa add add add add add add add add add add add add add add add add add add add add add add add aaa add add aaa add add aaa add add add loop repz add add dec add arpl lcall add rolb jmp add push mov push add mov push add push fwait add add fwait add add fwait add add testl testl testl testl jle add add add add add adc jmp lldt add add add add add add push add add add add add add adc insl add add push add addb add add add add add add add add add add add add add add add add add add push add add add add add add or and add add sbb add add add add add add add add add add add add add add add add add add add add add jge verr add add add add verr add add add verr add add add adc daa add add add add add add add add add add add adc xor stc add adc outsb add add add add add add add add cmp xor add add add add add add add add add push and add add add add add add add add add add add add xchg add pop add add add add xchg add add add add add and add add add add add add add add and add add add add xchg add out add jo add add les popl out add add add add addl add mov add add adc mov add add add add add add add add daa add add xchg std add add add daa add add adc mov add sub add add add je add hlt sub add add add add sub add add add add sub add add add add xchg add add add add xchg add add xchg std add add add xchg add add sub xchg std add add add add add adc push lds add hlt add add adc lcall das add add adc outsb add add add xor add add add mov add add xchg add add add xor add add add add xor add add add add add add xchg std add add add add add adc mov add add add add xchg xor add add add je add pop xor sbbl add add add add add add add add add add add add add add push add std add add add std add add add add sub roll mov dec add add add add add add add add add add loope and mov add add add add add push add add add add push add add add add add add add add add add aad rolb add xlat add add add add add add adc pop add add add add add add add add add add add std add add std add add std add add add add add add add add out add lods add add (bad) add add (bad) add add (bad) add add mov add add add add scas add add add add add add add push add add add or add or and add pusha sub add add add cmp add add add add add add add add add add add add xchg add add add jge mov mov iret add add add test dec add jno adc or push test imulb xor nop aad add add add sti add or add add add add sldt add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add add add or or or add add add add add add add add add add add add add add add add add add add add add add add add xchg add or dec add add add add add movl sub repz add cmp sub add xor add push add add add cmp add add pop add or push add add arpl insl insb outsb imul arpl insl insb outsb imul jb imul gs cs imul inc outsl jb jae push jns je insl add jae gs cs outsl jb add jae gs cs jb ja outsb add cmp xor sub sub gs jne arpl jb,pn jae jne arpl add gs je add outsb je insl gs gs jo jb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add arpl outsl jb inc outsl jb xor push gs inc outsl js loope mov arpl add jne gs bound push jns je insl cs imul arpl add outsb jne gs bound xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push outsl inc jb popa jns loope movsl add jae insb jbe inc jbe outsb je popa outsb fs gs inc jo inc outsl insl popa imul inc jae gs bound gs insb jbe add jo outsl insl popa imul loope mov add addr16 outsb je jne insb inc js gs imul add outsl outsb jbe jb imul jo add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add jae insl bound push jns je insl cs gs arpl outsb add jb outsb add jbe insb imul imul jo imul popa je dec outsb jae popa outsb arpl outsb fs outsb ja popa jo inc js gs imul pop dec gs popa add outsb jae insb add imul loope mov add jae insb jbe inc jbe outsb je jb jae dec inc imul insb add jo jae add jo jae outsb add outsb je outsl insb add jp add jae insl gs popa jns jne add (bad) mov loope test dec outsb arpl arpl outsl jb dec popa jb push push gs bound arpl gs inc outsb je jns outsl imul push outsw add je outsl fs popa jae add outsl insl jo jb bound push je imul fs push jns je insl cs gs add jo outsb add push arpl outsl push je imul insl jo jb bound xor addr16 inc jne insb dec popa insl add popa jb push popa insb jne push jns add push jns add je jne jae jb outsl jae je outsl outsb add je inc insb imul add inc push push inc je jb bound gs (bad) mov jae insl bound push jns je insl cs jne je insl gs outsb je jb jo gs imul je inc jae gs bound dec inc jbe fs arpl popa arpl jns push jns je insl cs arpl imul add jbe imul (bad) mov (bad) mov loope mov cmp jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul cmp xor inc inc xor inc xor inc inc inc inc inc xor cmp xor xor aaa xor xor add xor xor xor xor inc inc aaa inc xor cmp xor xor inc inc xor inc aaa inc inc xor add xor xor xor aaa xor xor inc inc inc xor xor aaa xor xor xor inc aaa inc xor xor xor xor inc inc inc cmp inc inc inc xor inc inc inc ss aaa xor inc aaa xor xor inc aaa inc inc inc cmp inc xor xor inc xor inc inc add jo inc outsl insl popa imul inc jne jb outsb je outsl insl popa imul outsb fs popa jns jne add je inc outsl jb addr16 jne fs outsl insb outsl jb inc outsl outsb jae insb gs outsl insb outsl jb loope mov loope mov dec inc outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add (bad) mov (bad) mov loope mov and xor and xor inc jae gs bound jb fs popa jb inc je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound jb fs je je jb bound add jae insl bound imul outsl outsb inc je jb bound add imul jne add insl push imul je jb bound add jo jb jae dec insb fs jae inc je jb bound add outsb je insl gs outsl insl jo je bound imul bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound gs jb jo imul imul jae gs bound imul imul add std insl dec mov jmp bound or xor mov mov pop jg aad cmp add add or add add adc add push pop add or sbb or adc adc adc adc or add sbb sbb add add add sbb and pop adc sbb sbb sbb add pop push or or sbb pop add or add push push add sbb pop or sub sbb add adc adc xor add cmp push add add add add push add and cmp dec add add add add push add or or or or or push add sbb push adc add add and popa add add adc add add pop adc or imul sbb or or sbb add add add or or push pop pop or or or sbb or add push push add add pop add sbb add add or or or or pop or add push add pop push add add add addb sbb adc or add adc push add or pop or imul sbb add push add add orb sbb adc sbb add cmp add pop pop or or sbb push add and sbb sbb add add push adc sbb dec add adc push adc add adc add adc push adc pop or adc or add adc and add add add or add add adcb adcb adcb add add adc jo jb addr16 and xor xor add push add or je insb outsb imul pop xor xor xor xor add add and xor bound fs xor cmp xor sub sub xor xor add push add add push add push jb jo outsl outsb inc js gs imul ja add add or add or add add add push add push add and add push add add add add outsl jb js dec popa imul jb gs insb add add add and 