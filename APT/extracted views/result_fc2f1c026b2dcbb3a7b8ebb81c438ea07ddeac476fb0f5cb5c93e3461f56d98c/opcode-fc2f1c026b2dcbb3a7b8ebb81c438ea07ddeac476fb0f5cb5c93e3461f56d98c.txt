ror add add add add add add add adc add add add add push adc pop add add adc add add add add add add or add add or add jo inc add jo add add add pop sub add or pop pop lea add add add mov add or push add or add jo inc add jo add add add adc sub add or push add or add add push add or imul jo inc add jo add add add lea add add push adc push push mov adc adc adc or add sub add or sub add adc add aas add add add adc add or push sub add or outsl or add outsl or jae add or pop outsl sldt or sbb add or outsl adc add add add add or add add pop int3 push push add xchg mov mov jg loop addr16 xchg cmpsb inc movsl in push jne inc adc push loopne and xor pusha push loopne and xor pusha push loopne and xor sbb loopne repnz dec push xchg jge lods ret mov outsl mov test repnz mov jns ficomp push repz dec fnstcw (bad) out cmp dec xor cmp pop js mov and sub jecxz push xchg dec push inc sub xor pop rcll jnp je test fwait lds jmp sub cmp popf popa outsl and js add pop jle xchg or cmp and lret dec mov jg fildl int3 loopne or inc cmovge jnp xchg lcall paddq (bad) mov test pop ds (bad) mov test pop ds xchg sub sahf jge xchg adc push loopne and xor jmp mov mov sub unpcklps loopne and xor pusha push loopne and xor jbe inc inc test pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pop xchg in cmc jne cmp push loopne and xor jbe pop xor loopne and xor sbb popf add in pop inc mov lcall adc push loopne and xor call fildl es pop xor dec jmp mov movsl xor add jno mov push loopne and xor mov adc add js push or push pop notb pop push insb repnz xchg adc push loopne and xor sub dec adc push loopne and xor pusha push loopne and xor repz arpl in sub lret hlt xor cmp jne test jp ja (bad) push pop adc push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor cltd int cmp pop pop (bad) (bad) jno test cmc outsl lret add fstl outsl imul mov scas (bad) or or iret sub enter fist sbb cmp inc insl cmp test or loop rclb push mov inc mov xlat push sbb fnsave jnp ja add mov lret adc lret jns test inc daa cmp pop (bad) mov sub stc cwtl aad jbe xor sbb inc mov xlat push sbb fnsave (bad) jbe push lods sbb xchg dec fmul negb pushf mov dec jp es das popf stc jns sbb jecxz ljmp pop cmp les (bad) fadds insl aad shrb in popa push mov sub daa cmp (bad) movsb add or std mov sbb inc mov xlat mov ja nop push in mov inc mov roll iret xlat mov das dec rcrl mov sahf and test mov sbb sahf mov pop mov inc ja test push mov fbstp repz test ss sbb stos stos or enter fwait push sbb pusha nop sub xor xor (bad) out or ret hlt clc in lcall comiss cltd cmp add jg or or cmp add xchg xchg movsb lret add sub push aas gs cmp out stos out call incl inc outsl push fcoml mov or and sub xchg mov xchg mov das fs arpl mov adc outsl pop sbb cmc loope mov adc sbb bound lods rorb int3 fstpt adc imul push pushf sti scas cltd push add iret je jne jcxz out cmp pop inc call cwtl jb fidiv mov data16 add xor adc (bad) and popf push outsl test imul xorl ficomp js (bad) sub loope sub xchg neg mov cmpsb outsb lds sbb (bad) in aam dec jp jne cld lods add adc fsts sarl mov popa stos sarb mov in leave or test mov (bad) clc fstl (bad) adc aas and imul in sbb inc adc ljmp xor inc inc shl fistp addl cmpsl ret scas cmc es std mov sbbb js inc push jno fsubs mov jg (bad) adc out sub aaa sbb mov xor lea inc call cld (bad) mov sbb ret test les in scas dec movsl jb gs dec aas mov (bad) ss fcompl mov mov mov cmp sub mov lea icebp sub xor decl xor jl push push pop cltd mov arpl pushf stc std or pop gs (bad) cltd dec mov insl movsb jns dec dec and adc daa or int and daa lea push lret jp aaa imul xchg mov xchg cmp cwtl add loope subl call inc mov adc and mov movsb pop xchg inc jo loope fsubrs adc pop jnp leave or movsb push add xor lods fcomps movsl sarb decb and loope (bad) push pop insb or cmc sbbb icebp jle repz adc ds inc cwtl and inc in inc pshufw outsb ds mul mov stos dec test fdiv stc cmp cmp add ret (bad) (bad) fdivrl es sub enter xor sub inc sub lods xchg sbb (bad) lahf or mov cmp test cmpsl sub or inc rolb jns cld (bad) xchg rcrb lods scas mov notb sbb pop lcall in mov clc out mov lods in loopne dec mov jp cmpsl push adc pushf icebp xchg xchg pop push outsl out and out mov push out flds aas jg and cmc xchg (bad) mov test lret mov pop inc jo jae stc adc das es adc push lock add (bad) jb cmp rclb xchg xchg push mov xorl repnz movsb scas imul pop dec (bad) rorb mov mov jmp or ret (bad) movb and adc push stos out loop ficoml movsl outsb mov test mov push fstpt inc int3 pop insb xchg cmpb cmpsb xor loopne push pop das cld dec imul mov push jl xchg mov mov mov jp lret mov mov sbb lods les cwtl bound stc adc cmp adcl push and out pushw xchg jno mov bound push pop (bad) push xor je outsb ds clc lock je iret jno mov std mul sbb outsl int and fistl cld pop fmull pushl push mov mov shrb pop in jle ret dec mov daa subl xchg adc and aas dec nop adc lock lret dec sbb ja ret add out inc xlat pop clc in ret clc leave cmp js mov push (bad) lods jnp es or lahf test xchg (bad) xor inc addr16 scas push mov pop pop je testb loop pop adc das pop or ds xchg mov cmp jg enter xchg xor add or mov xchg add adc mulw (bad) push (bad) adc cmp push stc cmovne fdivl jmp jno cmpl mov pop push addr16 pop pop cmp add or lods scas lret subl test mov subl jno sub sbb and fadds ja pop pop or test mov push mov sub sbb cld jmp lahf std les push (bad) push mov sub or and adc dec daa fistp jne stos std inc pop xor sub std adc jecxz cmp pop dec adc orl repz pmuludq or push fadds jl xchg mov xor imul cmpl adc lea adc and repz cmp mov fbld in stos jnp or inc aaa push jb cmpsl cwtl stos sbb or xchg aad xor call loop dec mov imul sub ficom cmp lock ja mov mov mul sti jns fdivrl fildll mov cmpsb lock bound dec jo lret addl sbb and add scas aaa jne lds in (bad) das inc pop push pop movb fs sbb mov push xchg mov stos mov cs lret rcl ljmp adc imul pop hlt sbb sbb xor lret cmp xchg mov cmp jo les xor out scas adc jmp and test inc jno and or mov lret sbb xor fsubl jge dec pop inc shlb ljmp mov imul mov mov push (bad) jbe pop xchg sbb cmp adc fild out jns sub repnz or pop cwtl pop mull int3 repnz inc sub enter jle push int arpl mov in lahf push mov test jle aas mov push push mov xchg popa hlt mov into shll in dec fistpl add insb ja xor pop jmp icebp add fs push and pop push jbe hlt dec stos lods mov cmp push fwait pop (bad) aas push mov outsb pushf cmc adc mov lock sbb test lea jmp dec into int3 dec in mov xor jbe mov in sub and fstpt fildll (bad) lret sbb sub dec fucomip ljmp push jo pop push insb inc mov add push xchg adc es adc mov lds dec in out xlat repnz out jno pop cmp push xchg and arpl adc je loope push jecxz cli push or (bad) mov push pop pop movsb push imulb xor mov jmp push jae pushf xor ds loopne add mov aam mov jg mov sub mov or sub loope insl and unpckhps and xchg push hlt sub out inc setbe cmc fidiv mov shll sbb sub cmpsb dec decl inc clc lcall jp loope and or push dec popf adc lret rcrb insl scas inc xchg int3 arpl ret jne hlt dec and gs xor and xor test adc js cmp jno shrl xchg fs stos push push mov mov mov bound das or pushf push jnp rcrb and adc movsl shlb mov sub int3 sbb shr lea out pop mov icebp insl jnp adc (bad) mov xorl mov add test push or or jmp cmp mov add mov ret iret or xor or in scas sbbl icebp adc jns push outsb pop push pop ret rolw cmpsb push adcl movsl push fbld xchg stc fmulp inc daa jle xchg xchg test cmp inc out xor loopne stos lea xor test cmpsl mov sti ret mov lods test sbb jno pop or inc mov or jno movsb (bad) std add sub jecxz push stos in sti shll shrb test mov pop cmp push test push daa lds aaa mov popf (bad) or loop dec cs data16 push movsl inc sbb push mov imul jbe ret xor out int3 xor xchg or dec cmp sti pop lcall ss inc xor ss adc pushf jg adc mov pusha in add stc fcomi add jno fcom test dec shl out cmp sub idivl jbe in sbb xor xor mov add mov roll adc push jmp les xor jbe lock iret lods dec mov push inc hlt and push (bad) mov outsl sub cwtl pop mov xor lahf pop adc ficom lods popf or push test jle out notb jle mov imull lods inc mov jecxz mov push (bad) mov cmp cmp push adc mov loop rclb icebp daa mov out cmpsl sub mov dec cmpsb push ljmp mov nop push mov call adc rcl push fdivs out test or push aad mov ljmp mov xor xlat jbe dec (bad) sbb fs lods (bad) ja mov or push (bad) rol jle push jle movsl xchg sub fildl dec adc imul out ja dec xchg jbe lahf adc mov emms sbb insb xor push inc xchg and jge push adc ss push sbb add dec mov xlat nop stos int3 mov test xor imul or fwait dec (bad) in xor jp mov out xchg lock mov stos adc pop loope cmp stos mov rcr jbe fdivrl mov adc pushf mov push pop mov and clc mov inc popa outsb stos call xchg outsb scas jg pop inc sub inc movsb rolb fistpl decl add aam xchg es mov push inc mov cmp jns add fidiv test test mov mov mov out add inc loop out mov xchg xchg divl and jle jl iret out rorb ja in loop add cmp scas jo push xchg pop xchg jle test stos cmp add sbb mov ret dec test stos mov in dec jp pop or xchg or jb into ds loopne cmpsb pop pop sti pop pop ja inc int3 push hlt sbbb cld ljmp shl jle int3 aas lret int dec mov mov or dec outsl test loope mov imul xchg bound arpl popa insb push mov mov (bad) (bad) and xchg jg out stos pop push push jmp not xor insb sbb add out stos mov mov icebp fidivl xchg and and es test stos aam jae mov out lods or in inc sti adc xchg mov pop or lret insb jb pusha fstps out repz (bad) wbinvd xor popa inc shll clc stos (bad) mov mov pop pop rcr in sbb jne dec sub xor (bad) les daa jge fldcw pop lods jge and jl inc ret stc sarb jbe pop jle cmp rol outsb xor xchg mov add movsb add push mov mov iret sti sub sahf roll fnstsw loopne mov jle fidiv mov pop pop mov adc rcl xor fstpl or lock mov push and sbb sbb icebp add jmp sub jae jl push push inc ret ds jle sub xor xbegin shrl sub clc xor sub test repz (bad) sbb and (bad) push dec pop pop cld pop dec xchg dec pop pushaw daa dec sbb jae out call (bad) icebp andb aaa lret ret inc out pusha jbe mov scas push out lea push xchg les sub icebp test test push inc lods push stos mov idivb aam loop xlat cmp push pop repz mov pop and xchg mov push imul push cmpsl pop push movsl pop sub jns jmp leave outsb sub (bad) adc fldenv cltd mov mov push shlb decl jns xchg bound cmpsb sub push push ja pushf jecxz mov enter lret ret mov cli in or mov cmp cmp and pop or xchg mov lds leave add push or pop aaa push bound movsb jb pop xor imul rolb outsl mov dec add mov add cmp and sbb pusha xor xchg stos pop and and roll dec cltd lods xchg push fsub xorl int3 out ljmp jmp cs jl gs cmp pop mov mov sahf cwtl sub outsb cmp and or pop fisubr out mov insl outsl stos cmc mov pop mov jg in ds cmc xchg je mov xor rorb push sub mov mov test mov mov cmp stc sbb mov lock add jp divb es dec scas (bad) outsb repz adc int3 mov aaa jmp ja data16 inc ds sub pop pop xor ret push rclb stc imul popa mov push lret shll xchg out mov lods ret dec mov xor gs rcll loope dec (bad) (bad) aas push inc ljmp mov icebp xor int (bad) lock call push repz daa dec std in (bad) divb lods sti ja ja enter push lods jne or jbe ja mov jmp mov dec gs (bad) movsb lea push or fist mov mov rcrl adc movsl dec mov jb sarl cltd mov xor sub push mov or inc (bad) fsubs push sbbl or aas popf or lcall (bad) mov les insl in dec loopne adc xor sub jne movsl lret test jl mull mov loopne pop pop cmp gs push jbe fnop push pop mov cmp sbb mov pop sbb sub sub xchg out mov cmp outsl das jb (bad) sahf mov (bad) aas inc push shr cmp imul movsb jecxz lds and jae ljmp jp cmp test xchg outsl lods popa scas (bad) movsb loope int loope push mov test scas (bad) ljmp (bad) addps cmp cmp (bad) xchg sbb test sahf outsb inc add test mov xor insb mov sarl lods mov fwait push cmp lahf jge pop cmp push sub fwait push bound in xor pusha (bad) or aas add mov stc aam test push lea (bad) cld ret outsl int shlb sub jge test inc clc (bad) dec ret cmp jne push push call pmaddwd mov sbbl mov fdivrs dec push shll inc dec loope xor shr ss jns cmp cmp cmp adc pushf jnp loop je or mov dec insb inc das xorb jecxz nop (bad) or pop sbb movsb mov pusha test aas ljmp or jne in inc les cltd rol ficomp inc or push inc add pinsrw stc lret or xor test ja,pt cmp sbb popa dec sbb xor jns shrl fldl mov sub adc (bad) ss mov (bad) mov add push out cs dec (bad) mov test (bad) aam (bad) xlat cmp stos fstpt lret sahf fistp pop dec fild jge xchg mov iret mov gs sub int3 cmpsb cmc push sti mov push repz insb ret mov mov rcl cmc jo dec negl dec (bad) ja adc lea and mov enter jl iret sbb es mov jb jge js dec xchg imul jge cmp xor shrb mov mov push stos lcall dec rcr sbb insb call ds imulb (bad) mov adc mov sahf out icebp mov fcompl mov ja sbb mov mov mov sbb mov insl popa popa shlb mov jb scas and or movsb jnp int3 mov xchg pop sub add cwtl add adc cmp or or add enter sbb rcl cmp sahf xchg xchg mov sub or scas xor stos pop (bad) fwait adc mov xor daa decl push pop add sbb jno popf pop and xchg mov (bad) jecxz fsubrl leave out mov inc xor add test push mov push addr16 sahf push mov mov and mov pop mov ds mov cmc fwait aam xchg lret sbb sub inc popa into xor dec nop dec add mov or inc pop adc fwait shrl xchg inc pand jns test (bad) or sub ljmp rcrb ret push push pop idivl xchg dec sub in imul int add push imul in cmp (bad) and (bad) jmp fildl (bad) in push das sbb sbb adc ljmp pop mov inc mov push mov repz insl jmp addl sti (bad) jno fstpl xchg lock nop int3 ljmp pop rolb xor sub pop popa ss scas xchg clc jo aaa inc fimul xchg xchg cmp out (bad) scas lea das fdivrl or mov xor push inc jne cld pop (bad) xor mov mov mov out lock pop fsubs mov and jo mov mov mov fisttp roll aam jno dec jno xchg sbb aas stos dec push jns outsb stos test neg (bad) xchg test movb stos push ja out stos ret xor mov adc sbb fwait xchg lahf add and or jno aaa jl and mov outsb mov out out out jmp mov pop xor push aad pop mov mov or bound and push aas imul xchg ja push out xor push or mov aad mov mov cmp dec popl or inc fucom pop or xor jno clc dec lcall mov in loopne push xor xchg xchg sbb adc add mov dec inc gs add mov add ds and sbb (bad) adc mov popa dec cwtl or mov cld fs push sbb push icebp push lea xchg rcrb sub dec cli test ja cmp ret lock in test gs stos fimull in pop js jp sub xchg mov ljmp fmul cs inc aam or inc sbb gs cltd mov push outsb ret push pop cmp lods movsb loope xor stos imul mov mov jp repz mov imul nop adc push rcr add mov mov int stc push mov data16 mov les movsl out sbb or dec inc or lcall mov aas emms iret pushf and pop push cli sti cwtl mov push mov enter mov cmp (bad) mov lahf into sub cmp dec sbb cltd (bad) pop jmp je inc lock test add (bad) mov adc ljmp jne jmp mov sub push mov xor and cmp mov inc mov int3 in and leave roll cmpsb into movsl inc mov inc sub rcrb add pop sti xor push dec xchg adc dec fnstcw adc gs mov nop outsl ret add stos add fdivl mov cltd jb adc xlat or repnz mov in jno rcr push mov xchg ret enter mov rol int3 add (bad) ja sub pop mov iret (bad) mov scas xor pop out mov pop jp into adc cmp stos mov ss add add or (bad) xor (bad) outsb and jbe lods or mov lret mov hlt fildl or nop mov fcomps adc jl xor mov test cltd mov in lods dec mov sub lods cmp fsubp scas popf lret sub les (bad) mov dec xor cltd das std add aad pop pop (bad) fstl sub jbe rorw add sbb push in js pop (bad) (bad) or (bad) ss jo imulb int3 push mov xchg sbb mov pop dec pop decb icebp ret and fwait jp jg adc push add cwtl faddp mov mov test xchg insl lods icebp cbtw adc sbb adc ja int3 movsl lret test mov scas xor inc mov push cmp jnp lcall (bad) sbb sbb repz sbb (bad) cmp adcb lret sbb push (bad) lret xlat xor (bad) cmp in sub in push and lret aas out mov out pop repnz mov cwtl lcall lret divb pop cmc dec call lods pusha pop or jle sbb xchg push test addl data16 das xchg add push adc inc cld js pop lods out or mov (bad) ss (bad) cmp rcl popa pop punpckldq xchg test mov or fwait sub inc cli lock out dec bound xlat mov and loop or in rclb inc inc mov mov ds jb inc add orl pop pop jg add (bad) lahf hlt and rclb loop sbb pop outsl popa fwait push pop mov fldenv icebp dec repz mov out cli mov dec testb call pop out aas mov or js fstp sbb outsb pop pop inc daa stos jbe push xor adc cmp lods jbe iret pop sub push lods add ja iret pop nop or mov mov sbb or dec dec xchg xor imul loop sbb push stos adc jl enter pop xchg push cmp add xlat js out movsb (bad) mov mov pusha ljmp imul and push inc lods nop ljmp xchg mov cmp pop dec stos xor and cmp aad aaa push and adc mov mov add xchg clc cli pop jle insl aaa mov (bad) mov xchg ljmp sti or test stos push (bad) (bad) insl je,pt sti aam cmpb pop cli daa xchg (bad) in hlt lds mov pop add pushf aam xor pop or mov push pop pop sbb imul lcall ss mov or jne and call fwait sbb sbb rclb scas cmp sbb enter ss pop inc in (bad) lahf (bad) or sar pop sub xchg mov xchg loope mov xchg fstps (bad) jno out mov (bad) or cmp cmp inc das test pop jb mov xchg push dec loopne outsl add jns sub roll insb and dec sbb arpl sahf lcall sub sbb ja out fiaddl push and and mov jo xchg ret int sbb rep jae jns cmp sub mov mul xor test rcr push pop mov xchg xor xchg jle or push sub fstpl cs adc push out add scas mov ret adc inc jae xchg add ljmp aam das add test jge dec adc orl aaa (bad) mov push mov mov aas fcompl cli ljmp out fnstsw test push stc pop sbb loop dec outsb and lret jmp dec push jmp es cmpsl (bad) mov mov mov test lcall (bad) pushf sbb mov movsl test and pop mov fs cmp dec adc sbb jg and imul jmp rcl jecxz ljmp jns inc ret fdivrl lret and jge xor das push mov aam cld mov push adc dec dec xchg sti push and fs jo and sbb hlt scas (bad) pop sub or stos pop cmc sub and cmc push pushf pop imul xor sub clc add ja pop movsb inc mov inc data16 test add pop sti pushf jle insl add inc adc or mov pop inc mov add mov xchg push ljmp movl das (bad) faddp inc daa and inc cwtl mov aas out call arpl adcb int3 scas outsl cwtl push pop cwtl inc adc fstpt mov mov push bndldx sub frstor rcll pop enter cmpsb scas jae jnp add mov push inc negb xor cltd xor jecxz clc test inc sub pop test rol out jbe add loopne out insb out test loopne inc sbb xchg mov and and push mov dec mov in loopne popf push aaa or xor roll add cmp out add movsb in sbbl mov push jle roll push das (bad) mov incl repz sbb and enter pop aas mov mov in pop mov int3 movl pop in testl aaa cli mov movsl outsb in icebp js pop xchg dec and stc dec test jnp not pop loopne lahf jmp xor pusha ret push xlat inc push popf jbe dec push stos movsb mov jmp mov sub popf pop nop sub fstps mov xchg test pushf add sahf jecxz mov sti cmc nop or add sbb inc mov mov mov inc pop nop je mov scas rclb xor mov pop insl push mov loopne outsl in daa jmp sub movsb jle mov push xor sbb popa pop push xor mov mov sbb shr loopne pop inc pop or mov inc arpl xor pop cs jl adc sub mov clc (bad) rcrl subb push sub out pop lahf xchg sub push push pop sub and mov popf inc pop test ljmp popf mov add sarl jno jns push push stc in push mov lahf jle sbb jne inc adc mov mov scas je test mov jg scas push sbb pop jb inc (bad) sbb repz mov imul dec dec hlt dec xor adc adc push cmp aaa inc cmp stc cmp out adc popf aam mov jle push mov jl (bad) pushf add sahf xchg push pop sub ss jb les in es jecxz cmpl clc test jb dec rolb push popf fdivs or nop inc sub or lahf rolb stos insl les push std dec ss dec or jl aad mov hlt cmp inc test push mov fnsave push stos or call mov rcr xor jecxz jbe cmp (bad) cmp xchg inc aam dec (bad) rcrb push addr16 xor (bad) sbb adc sahf andl jp push mov mov pop sub addl lret sbb sarl inc je (bad) repnz xor dec pushf repnz or not adc pop dec aas aaa (bad) cmpsb push into fdiv lret in mov jbe dec sub dec mov push cmc push (bad) idiv mov test xchg aas mov out in fbstp jle in inc push loopne (bad) arpl mov push (bad) movsb insb push cld mov jae dec das mov xchg jmp iret mov dec mov lret and out lods sub lock and cmp add cli xchg lods (bad) sbb data16 decl push mov push les daa mov ljmp (bad) dec fs adc cmc mov mov push push xchg aas cmp push push idivb hlt cmp mov aas cmp mov mov leave xchg and mov ljmp push inc loop movsl adc cmp adc mov call stos cmpsb cmp mov repz repz in xchg ja in mov cli aad cmpsl push dec or and or fwait pop add mov lcall rcll adc push mov mov jo push arpl xor aam lods pop (bad) loope mov test push inc cmp and sub lods mov sbb dec push pop pop xchg mov popa xchg xlat xlat (bad) push sahf repnz in int3 cld xor mov adc push jl sub jmp push jb adc pushf outsb jne out in sbb and and dec (bad) xchg cmc adc mov xchg (bad) sub lret add mov scas or repz outsb sbb ror mov mov subb xchg push jbe push or inc jnp flds stos or pushf sub ret hlt sub out aas adc insb push lret mov in mov fcomps adc jl mov cltd insb clc stos inc push xchg es mov push pop mov inc push (bad) sub loop pop fst notl push sub dec xor push xor rorl cmp jbe ljmp mov pop push or mov xor lods and adc push mov mov (bad) push lcall mov int3 add popa jmp sbb dec adc xchg and scas out xchg add pop dec push nop repnz push push sub cmp push pop pop cmp in inc repz je add scas inc leave push incl dec leave adc adc jp mov stos push inc cmp scas xchg cmp jno sbb pushf ljmp push jg push stos mov adc dec and arpl mov and (bad) repnz sbb and push push (bad) into cld pop das repz outsl push imul scas inc das mov mov das aaa stc push add mov in mov or das pop push pop jae nop shll jne push repz sub iret pop xchg cmpsb cmp lcall in jecxz loopne leave hlt mov lcall scas cmpsl jne push inc sbb xchg mov mov andl xor sbb adc pop scas inc stos sahf in mov inc shrl and fcmovnu mov leave cs cs out sbb pop cmc jmp ljmp jbe pushf std add lahf jno les fldenv push or jo mov pop or mov cld fnstcw sti loopne xlat pop aad mov imul aam mov push fcmovnbe lahf data16 mov out cmp mov mov mov pop test mov push shlb jecxz (bad) mov fildll sbb jbe xlat fisubrl dec daa dec xchg cs ljmp fldl jno cmpsb addr16 mov (bad) (bad) or jle jl jmp lret pop loopne xor mov scas rorb or push adc ret push rclb mov or mov lcall aas push (bad) daa ret pop and dec xchg ljmp mov cmp out dec test es test repnz nop push (bad) dec xchg addr16 xor xchg jo scas push cmp in inc xchg push movsb xorb push lret add add mov sub in pop orb mov shll sub cltd das sub movsb cs jo ss dec (bad) pop lock cltd arpl jo push insl jmp outsb jl jmp dec jno add jp pop in add (bad) stos in fcoml lahf ret adc or shrl in fwait and lods lret psllw rol jne mov into (bad) dec jl xchg xchg xor popf adc insl test cmp sub dec push imul or fucomi pusha xchg fstpl les pop test test cmpsl lea pop jp inc jmp repz pop insb jmp (bad) pop pop and das loopne daa and mov push iret repz (bad) je (bad) enter or loopne cmpsl jns,pt dec into pushf and push adc adc mov sub cmp bnd notl jo cmp iret jo pop hlt mov test dec xchg lahf jmp sub dec sub ss jle add fisttpl rorb or jmp outsb aaa xchg dec cmp jae scas (bad) fidivr adc dec cli iret xchg mov repnz sbb cmpsb mov lret mov call xchg imul pop mov mov xor pop push inc ss dec sbb retw mov pop add fcomp int and inc xor int3 (bad) jnp mov cmp xchg aad cmp in mov loope xchg and lds dec mov in mov push mov cmpsl out jns out js xchg arpl jmp icebp in sub cmp xchg mov jg mov xchg sarb sub (bad) inc push std dec out insl add sbb movsb push scas pop sahf pop aas popa dec pop sahf stos daa cmpsl aad pop mov mov repz lock cmp stos faddl fistpl sarb ret (bad) ret jnp,pn mov popa jb mov pop dec std sbb mov lret popf iret cmp fistl sahf cld mov lcall cmp repz xor ret (bad) pop xor daa xchg dec adc test jnp out out cmpsl mov or test pop pop jmp push jge pop xchg mov ljmp repz mov pop aad push aam imul mov fdivl ljmp stos (bad) jecxz lods aam inc add (bad) jo adc int dec mov imul push push mov test xchg rclb pusha es xor mov (bad) adc loop daa adc iret scas jp inc cmpsl jae dec mov ja mov sbb fist fdivs movsb lods jp sub pop lret xchg mov imul rcll sub leave pop xor cmpsl pop push sbb mov push jb mov xchg mov jle push sbb adc daa hlt scas insl mov or cmpsb pushl in mov icebp push mov loopne icebp dec jno adc fmul (bad) into cld fcmovnbe (bad) sub sahf (bad) mov rolb add jno push jnp (bad) hlt jl sarb mov and call sarl outsb cmp pop roll cmp loope sbb inc mov push add fldl xchg cmp out fwait mov mov popf leave (bad) in push push and add push lahf (bad) mov ret or sub push out pop (bad) cmp mov pop (bad) insl sti daa cmp jns push xlat pop lods cbtw movsl mov sbb daa test andb lock imul or jb xchg sub mov mov mov (bad) mov loope push mov pop adc call push mulb in and rclb fild jg sahf push sahf jmp sbb scas cwtl out cmp add mov lods jb and loope fstpt sub xor scas (bad) repnz mov or pop pop xor and jae mov adc (bad) xchg clc popa rep and aam (bad) cmp in loop std call iret dec fbld sbb push sub rclb mov lret cmp sbb fcomp adc std out test popa jle stc lods loopne ss sub xor adc jne sbb cmc cmc xchg shrb cmpsl xchg pop cmpsb (bad) shl adc push in out mov out ss push loop insl fdivrl jno int xchg bound inc stos xchg in pop in sahf push movl xchg ja jo (bad) lock popa outsl sahf mov push out rolb stc pop adc xchg outsl test (bad) and and and cmpsl adc and ret pop jbe mov xchg in jle pop xor mov sub int3 (bad) scas pop cmp adc sub xlat dec sub in out movsl sub fidiv pusha imul xchg adc dec mov int3 mov insl aad lods mov or push insb dec mov sub je lds mov lods sbb mov jle cmp mov imul in jl jne jbe or dec fsubl cld and jno jae xchg ja (bad) xlat sbb clc (bad) mov daa pusha lcall inc sti or mov test out pop inc and mov sub inc ret nopl push add xchg dec movsb mov sahf test cltd stos mov loop lahf test and inc nop jl push das loope sub jp daa add loop push enter cld dec mov cli pop push pop dec sub cmpsb pop sahf xlat popf push sub out and insb pop leave or lcall or inc aad sahf cmp movb jne xor iret gs add out outsb lds ss and mov xor push out (bad) mov stos ja out fs in push fwait movsb roll sbb sbb sub sub cmp push scas inc sarb push sub add (bad) push rcl test mov and adc mov and scas or pop jg repz adc xchg emms inc (bad) sbb and rorl push xor dec daa (bad) roll pop lahf mov imul xchg and sub lcall cmc cmp fcomps es in pop jbe mov xchg gs mov scas in mov popa xor jb lahf testl xor lods cmpsl cmp es cmp xor mov pop xchg test push bound pop xchg and scas sbb scas push pop lcall dec xor jmp test jp lock lds mov cltd outsl add test cmpsl lahf hlt mov add (bad) fisubrl dec fisttpl mov test lock mov and movsb es scas js fwait loopne cmc pop lods out jmp in out (bad) cmp push das repnz jnp mov in fs int cwtl cli fyl2x lret mov sti std mov add fcmovbe test jne inc repz popa jge pop mov mov je or insb xchg sbbl cltd (bad) jecxz sbb xlat mov and dec xor adc les jnp lret dec iret (bad) (bad) sbb repz or xchg add aam (bad) mov out pop xor nop and add sbb add (bad) inc imul repz in imul dec lock loopne mov xchg flds lock (bad) lea popf xchg lds popf adc pop outsl ret xchg mov mov into mov jo inc mov ss inc (bad) imul (bad) push lock icebp imul sbb jbe fwait jbe lods sub arpl xor and lods mov out and and dec xchg or mov in add cmp mov lods cmpsl movsb push rcrl jne rorb lods les push push (bad) xor fstpt inc jae popa dec repz cmp cmp jno out fs push and gs dec popf icebp xchg popa movsl int cmc out (bad) or or sti push cmc fdivrl mov mov push xchg pop outsl clc in or xor cmp cltd bndstx xchg jmp fwait or dec call mov std pop pop (bad) fimull push mov and or aad cmp fnsave jae jb inc lea push sbb xchg jb mov cmp inc dec dec mov (bad) push iret cmpsb xchg push ret cmp mov sar jecxz sarb popa cmp inc (bad) mov adc mov mov (bad) out in out (bad) or hlt and push cmpsl and lds pop mov cltd into dec loop rcrb xor dec mov dec insl int3 aaa scas stos lahf lods xlat mov stos into fsubrs stos lret inc xlat xchg push and fstpt out popa or out inc cwtl xchg sub iret xchg (bad) fcmovne sbb pop das or ja (bad) loope outsl ja cmp mov aad push jge scas pop sbb (bad) sub pop aad and sub data16 decl enter pop add or repnz push dec add cmp fmull jns daa jo aaa cs dec sub push or jmp xchg pop fisubl inc data16 adc mov in dec push lods jmp js jae xchg inc adc mov repz dec xor cmc mov adc (bad) (bad) dec add shld mov insl and cmp out inc sahf add inc inc dec or adc mov push jno stc (bad) mov nop sbb lock jns data16 adc inc ret jge mull xor test add (bad) dec and rcrb lock aaa and dec sub adc inc jnp (bad) jno lea inc inc inc push xchg shlb stc lret xchg (bad) ss or xor int push pop push push cli insb int3 or rep mov cmc loop fnstcw pop push dec lods xchg sti inc xor cmpsl (bad) mov xchg lock ret dec xchg pop adc test ljmp jne or lcall (bad) lods cltd insl mov cmp adc popa lret hlt lds out rcrl mov cmc xor mov or adc cmp sub (bad) lea inc jb ret adc stos pop xchg shrb mov movsb and push push dec pushf cld jae xchg nop mov test cld dec jo rcll push xchg push cmp or loopne aad pop inc xchg xor jmp cmp test push jge or ficom call cwtl jl jns,pn mov jmp (bad) adc popf fsubrs jae js hlt pop daa lods ret jne mov aam and (bad) iret or or addr16 inc into add mov repz and push sbb scas sarl int idiv gs xor sub cs push cmp (bad) insb cwtl fsubs pop mov dec imul push inc xchg fnsaves inc adc roll sbb mov inc pop insb dec add cmp mov aam inc decb push xchg jp dec cmp pop loop fbstp sub dec mov xchg rcll lret xchg push adc mov cs mov push cmpsl pop stos ds sbb ss gs inc fbstp xor lds push dec fldenv dec out or dec adc aaa xchg add int pushf lea xchg imulb fs ret fcompl pushf jne rclb and insl adc mov dec data16 mov mov push test xchg add push imul insl lcall adc xchg cmpb mov arpl inc (bad) sub enter jp add xor mov mov add push xor jp mov mov imul pop jecxz in aaa mov jno rorb xor lcall jns in test lret or sub pop sbb das fwait inc imul cmc cs and pop lock ret (bad) adc xor mov iret push dec ja nop pop dec sub ljmp addr16 aad xchg cmpsb inc mov inc addr16 loope push fild repnz adc mov in out push (bad) mov mov test add jno push test cmp add or sti xchg jo data16 pop aam push pop repz roll or mov fnstcw pop lcall fldt bound scas (bad) xchg inc mov loope cmp jae mov sub imul (bad) rorb fisubrl jae push gs popf cmc pop push cmp and les outsb mov aad pop lods jo pop fwait lret pop add (bad) jno or push mov aaa xchg aam adc add pop mov popa mov test sbb pop and in and push inc inc sar mov mov jecxz test xchg dec arpl and ljmp jl lret xchg or or mov cmp lods push cltd adc loop xchg xchg xchg inc dec jo mov mov cmp orl mov dec clc out (bad) test inc xlat mov daa aad mov inc lahf je cld mov movsb stos add mov insb cmp fldcw xor in cld dec jg int xor adc pop outsb push cmp jge cmpsb out inc (bad) xchg leave bound xchg insl sbb xchg pop pop popf add lock add jnp imul test mov inc imul cmp inc addr16 (bad) jbe pushf mov ja stc xlat in dec call ret stc cmc outsl sub movl cmp xchg call popf pusha adc push cwtl cli jle pop in daa push add cmp sbb jl add cmp xchg pop adc jb sbb (bad) pusha into mov scas rorb push sbb out add mov mov (bad) xchg jno pusha cltd sbb rcll stos aam sbb sbb (bad) pop in ficom lods sub ret inc xchg mov lret cmc mov xlat imul mov mov lds add test daa enter dec aaa push gs ds lods xlat sub imul repz xor xchg mov cld inc push iret outsb (bad) aam call add jo cld dec cwtl inc in or (bad) ja or int3 insb jle xchg mov movsb push mov push jae mov mov (bad) iret test mov adc jb andb (bad) repnz pop mov out cmp and push stos mov and and pop movsl movsl xlat mov cmp mov add pop dec das cmpsb cmp cs xchg movsl push aaa les repz loop jg mov mov lcall or fwait adc fldenv adc adc movsl insb in ds or dec leave sahf sarb das push lahf mov mov inc (bad) pop fistpll daa sbb and jg adc daa into dec lock sahf pop mov cmc sbb cmp stc test jbe xchg pop insl and hlt or mov rol push mov (bad) sub mov mov es test sub push push aas bnd lahf inc inc dec mov movsl loopne loopne pop add xor pop ficom aad cmp popf sub add mov inc mov mov mov stc dec fldt cmp ret ja cmpsl mov addb cmp sarl jae icebp out ja out push mov sbb jb scas imulb ljmp sub cmp add sub sti ds ss enter loopne dec inc popf test and adc test je and or xchg jb xor mov mov orps cld mov sbb (bad) flds out leave adc dec iret popa es fidivl mov movsb push mov sbb push cmp sbb inc add scas call adc jae mov jne pop arpl stc push loop xor or mov stos jne loope in call mov inc pop aad inc rorb test out sbb dec adc sbb mov and mov mov (bad) or or scas sahf and cmpsb push jb xchg pop gs in jae mov inc das xlat adc dec fild mov inc das lea add dec xchg xor mov lock aaa call movsb pop ljmp cmp dec jno out sub cld sbb lds and addr16 out data16 cmpsb test daa std pop jae xchg adc enter mov mov cmpsb movsb sub gs jae (bad) repnz push icebp adc lock mov pushf adc xor int3 popf bound mov hlt rcll js mov enter in mov jp inc jecxz in cmc lods ret dec xor add add pop cli (bad) lds jb lret dec jbe imull int3 xchg mov mov pop mov stc (bad) in hlt iret (bad) jecxz fsubs ss mov ficomp cmp xlat mov outsl jnp jge,pn ret andb xchg add mov lea inc daa jecxz mov fstpt nop insl pop adc pop mov xlat mov and xchg adc lea repnz (bad) xorl or push inc push cmp jne test mov and lock inc je inc push mov mov sub loope in xchg sub add cwtl loope sbb (bad) les ret sub ret pop stos movsb ja or lahf js arpl pusha test push cmpsl or test cs xchg fdivl test push outsb and mov insl (bad) jo pusha cmpsb jno imul shrl in mov ret mov loopne outsl jmp icebp add lods cmp fnstcw mov notb cmc (bad) mov pop sub popf (bad) ja push rclb adc cld fs movlps dec pop dec aad xchg adc or movsl test hlt bound insl into cmp and xchg add jge inc mov ret mov and jnp addr16 sub adc xchg rorb pop xchg jb imul cmpsl mov out in mov inc out push jl scas fisttpl push out int3 sbb jbe mov push and pop jne mov push pop push daa icebp xor and inc sbb cmpsl and mov and mov jle call std or popf in add dec int3 pop dec sarb sub pop push fisttp dec imul fucom add jo lea adc (bad) repz lea or mov mov sub clc pop gs cmpsb fstps jle sahf pop pusha jmp and pop out adc mov imul mov add mov int inc ss mov push xor outsb pushf or (bad) xchg push push popf arpl lds mov stc pop hlt or sbb and fs inc test and and cmc repz inc repz jge loop xor xlat mov orl inc mov movl mov jecxz stos fmulp mov adc loope jmp dec jb push cmc scas adc mov outsb fstpt gs outsl push test cltd or mov sub sub test rcrl rcr fnop add scas push es aam mov sahf incb stos outsl lock outsl jbe gs and popf (bad) xor arpl mov xchg xchg push and jecxz pop jnp in mov mov dec adc dec cld aaa idivl inc bound ljmp mov addb xchg cmpsl outsl sarl push cmp mov push add jbe (bad) and jbe xor arpl mov inc cmc ret mov shrb xchg mov test xchg mov add call pop (bad) lahf int3 mov and xchg mov lret adc aaa stos inc les lea test push pushf mov popf sbb icebp fisttpl fsts mov pop mov xor inc ficoml fcmovnb in in ss cmp rcll ficoml push daa (bad) js sub scas cmp into mov cli push aaa outsb push mov add arpl ss cld (bad) mov fprem1 rcl push in popa js in dec lret into out or lea lahf insl sbb mov stc jns dec push pusha adc (bad) jg push cmc stos inc add popa movsl lds testl cmp inc inc outsb ret pusha and dec mov cmpsb dec jp pop rcrl outsb mov pop aas aam jmp xor addr16 out loopne and pop movsl sbb addr16 mov adcl imul or addr16 loope cmpsl push aaa outsb in mov out sbb inc jae (bad) (bad) jo and sub addr16 scas bound jp mov inc sti xchg jle test add mov aad push lret inc or les xchg or adc xor mov jl in pop dec out es cmpsb test pop cmpl and mov aam sbb sub pop mov mov add scas inc pop popa pop cwtl popf movsb mov pop pop or sbb jmp dec jno push push lcall out arpl push pop sub cwtl fidivr mov mov fiaddl sbb mov hlt sbb rorl (bad) jae sbb leave pop cmc out cmp or insl cmp xor xchg inc inc or mov (bad) cmp dec or add jne les loop inc sbb push xchg push call cmp fwait rcrb and push mov mov xor jmp add mov daa (bad) add sub add xchg test jp not std jge push sub stos gs mov (bad) xor nop cli jecxz add lret push imul iretw sub jno (bad) je (bad) push cmpsl test mov add sbb cmp mov mov insb bound pop jge dec prefetchnta push gs fistpll dec adc mov xchg es lret arpl (bad) dec stc popf std leave add stos dec (bad) mov adc rorl xchg xlat mov js pop pop jmp sbb stos and push push lods (bad) cmp push adc jl push jbe stos inc insb or xorl mov pop repz push lds rcll lods pop xchg xor jno sub (bad) popf jbe pop or add mov movsb test fldenv call pusha sar xor cmp in jbe cmp out pop out push mov ja or cwtl dec lcall fdivrl popf pop int3 std jae sar lahf push mov fstps pop divb adcl out cmp sahf sub push jnp cmp inc xchg fs adc xor sub and or sub aad adc daa push push movsb add xchg inc rcrb out test inc push mov push inc repnz std jbe movsl das movsb mov cmpsl js push push sbb test aas pop push seta mov (bad) stos gs xchg decb pop pop push lret sub pusha ret cli (bad) sbb xchg cmp inc imul sbb sbb jecxz mov and arpl jnp or fwait mov xchg aam mov inc inc push lcall jno mov in and sub dec mov mov or iret imul add das and mov rcll aas adcw mov and outsl flds fsubr push cwtl jg sub imul call pusha xchg pusha xor lcall (bad) fstps jmp stos cmc dec dec test xchg sbb and add ljmp lea stos insb sub or add in js mov movsl mov (bad) bnd jb enter pop sar inc mov inc mov ds mov or (bad) dec adc and push aam mov jge popf jns add icebp mov or lds cmp ret daa test arpl test jae mov cmp (bad) jne int sahf bnd es lcall inc cmp scas ret dec or cmp pop sub add sub and adc and jge push push ds (bad) popa adc inc ss sub sub mov insb cli mov adc mov (bad) fwait mov adc cltd aaa dec lds push (bad) sbb add bnd lahf cmc adc cs mov sub out xchg fwait mov (bad) lret lock ljmp mov jle sti icebp ds dec xor pop cmp or pop dec mov daa jge fwait enter insb and (bad) adc fisubrl mov je out lret sbb mov pop pop sbb push add mov bound push xchg cli (bad) mov scas cmpsb movsb stos sbb push mov cltd and xchg cwtl out shlb stos fs xchg jno add shrb std push sbbl hlt es jg divb mov dec fisubrl push inc lods cmpsb test mov and iret jns adc in sub or adc nop mov loop jecxz add fimull sti mov jo int3 pop pusha stc js mov dec stos clc mov add xchg loope sub mov cmp adc nop mov jb sbb les sub cmc inc stos (bad) dec aam xchg fist je fidiv pop sub pop mov in roll nop rcl lret or pop inc push rcl pop (bad) push in cmp hlt daa out sbb fistpl les sbb stos popf push lret pop cmp (bad) icebp xchg push je aaa (bad) enter stos testl dec loopne dec pop dec sub add adc (bad) test repnz bound cld jne,pn push into mov cmp sbb ds lret ss leave les pop jmp lock adc mov (bad) sub outsl cmp pop xor inc jns xchg sub fs push jg loopne andl mov push bound out mov cmc fs xchg (bad) mov shrl daa adc lods sub fsubl push int xor jnp dec repz in xchg mov sbb mov popa bound pop fcoms add iret out (bad) repz pop (bad) fisub imul add add add sti sub (bad) mov jl das push lock sbb in aad dec and xchg inc repz std (bad) hlt loop xchg jo or outsb mov in xchg mov cmp mov rorl xlat sahf adc cmp adc mov (bad) adc jo push sbb jo popa lret cltd pop jnp aaa mov sub xchg mov pop xchg or enter dec out dec adc push rcrl cs repnz mov test sub xor popa adc mov pop clc (bad) xor push adc hlt fldl fdivp sub les je stc stos and push fldlg2 sbb int3 mov cmp sahf mov in push pusha aam pop ss cmp icebp (bad) sti adc fstps lea push loope,pn rorb xchg mov outsl insb dec xchg xlat add mov xchg outsl inc aad push xchg sbb scas mov adc les outsb ljmp jle dec movsb daa popa bound pop inc bound xor ficom pop addl clc scas stos out cmc cmpl adc xchg aas mov cwtl jae jmp in mov test int3 inc into push lea loope jl push ds dec dec divl pop js adc push loope xorb cwtl inc in or pop jns add loope lock sysret or in xchg mov dec fadds jmp sbb fbstp out call movb test push icebp or xor cmp lock outsb lcall or cmp sahf and scas aad xchg dec nop dec cld mov jp jns sub ret jle (bad) sbb (bad) fistl in fst and mov cmp xor mov insb lret pop mov xchg jo fsubl xchg inc ret fisubl daa push cld jmp mov add adc jnp push inc mov cmp (bad) mov jmp aas jl iret cli inc cli jmp sub cmp jne,pn dec fwait lds add outsb push mov popf orl ds jnp sbb jo loope jge mov dec adc xchg lret jnp in mov (bad) adc fldl in fdivs outsl xchg cmpsb cltd jecxz lret lea outsb lods push push dec ret sub test pop imul pusha rcrb out mov (bad) cwtl cmc loope test orl sbb mov and jle pop inc movsl and xor sub repz mov inc jge daa and out pop add add pop ljmp pop shrl hlt fistl stc adc pop pop xor nop/reserved lods imul sbb sbb int mov mov fsubrl cmc loop test test xor and leave or pop adc cmp sbb rol ja and xchg push xchg pop cmpsb pop imul xor sub (bad) std imul sub sub cmp xchg jecxz push aas lret jb gs cmp mov pop xchg and mov and or jae mov cld mov add push push sbb bound xchg fcoms push test incl je add dec xlat add fcmovu repnz mov xchg cmp jmp pop (bad) sbb or cltd sti push sub aas pop jmp pusha push cmp jb enter sbb mov movsb ret fsubl xor jmp das pushf push push andb push mov lcall push mov mov adc mov sub dec in mov pop push inc ljmp fcomps push jle popf cmpsl jbe add inc shrl inc stos mov xor inc dec xchg rcr pop int3 daa movsb lea into cld dec fwait aaa push jmp dec adc aad (bad) mov jmp fstpl dec sbb ljmp mov insb loope adc fimul or fisubl and and icebp xchg fisubl jo mov push add rorl jecxz addr16 dec int3 xchg imul pop xor pop push add or pop cmp push jne roll ja jmp and clc cs aad jmp jne outsl mov and inc test sub pusha popf dec aaa inc xchg cmp test sahf push jp std jno scas jo jb pushf dec cwtl movb xchg (bad) dec lds stos out dec cltd cwtl add mov (bad) aaa cmc xchg adc sbb popa pop push sub ret loopne cwtl fldcw jg or inc cwtl int or xor cmp insl xor push jg mov mov shl lods mov movsl cmpsl cmp and adc in (bad) icebp jns and pop pmulhw jg gs dec or xor (bad) adc cmp add push dec in icebp loopne cmp mov pop xor jo or shlb cmp dec adc jne and mov cmp arpl cltd dec lds pop outsb push neg (bad) fcompl pop sub adc or sbb test xchg mov sbb sbb stos aas sub and dec (bad) rorb or inc xorl jecxz pop imul mov ss dec adc fstpl inc xor mov fucomi sbb (bad) dec push arpl nop (bad) dec mov fsub lret sub sbb adc test sbb mov pushf jbe cmpsb mov add push std sub xchg aad sub test ret and fcompl sub jnp xlat cmovae cwtl push push cltd xchg movsb jnp lock ret mov pop imul in xchg lcall pusha in jae test mov pop stc mov das mov cmp lds (bad) fidivrl pop aam ds jmp aam push (bad) mov xor push cmp cmp data16 push je lock in inc in pop mov jle push mov cmc scas xor pop dec cltd mov insl pop (bad) push cmpsl push fcmovb cmp inc push xor and xchg jb mov jb imul jb jmp push push testl or sub push pop xor push loop dec add shrb int3 and mov xchg dec sub mov cmp (bad) aaa lret push mov movsb aaa andl sbb lods cs or fidivrl sbb movsb mov or gs movsb push loopne aas add mov jp int3 cmp or ret fs sbb pop push imul pop mov or movsl (bad) roll in cli js jae es (bad) fisttpl (bad) lcall gs push int xchg pop cmp and pop popa cltd push jecxz imul popf js loopne cmp leave dec jbe lods je aas outsl push int3 fcoms adc push pop adc (bad) std jmp cmp lcall push sbb mov insl fildl xor pop nop test jb sbb aas stos adc ret clc inc inc jo and in pop dec dec add and ret sub jmp jmp add jge jge push ja mov div mov cmpsl imul fsubl insb mov mov mov jle cltd mov rol mov cwtl push mov cmp adcb (bad) repz lret inc ret imull mov fmuls aas addl mov pop or nop sahf out sbb fld jae mov popl leave xor pop leave pop fcomi (bad) lds xchg sbb push cmp fstp pop test cmp cmpsl je (bad) ljmp insb jae jecxz,pt pop sub xchg inc add cli sub inc out idivb bt push dec aad inc insb push loope push repz fnstenv clc cmc mov ret mov sbb push roll inc jo adc pop fcomps mov fdivl pop outsl jo or push sbb call push cmp das jo stos adc andb dec pop ja pop or push mov mov leave shr out pop jg pop and clc xchg jg mov fstl movsl sub scas arpl push (bad) xchg loop push sub movsb sti sub dec jo cmpsl jecxz lret icebp fsubl jne mov gs dec js lods jmp cltd loope stos push lcall imul int test inc jmp testl pop sbb out xor jnp pop data16 jl icebp pop xchg cmp and and (bad) aas leave xlat jl cmp vmptrld in or mov inc in push mov push movsl test xchg loopne and into xor or ret mov adcb add or add adc aas adc scas bound dec (bad) jb lcall stos aad aad sti cmpsb cltd xor aaa int sub es into push or push and jo sub pop lret mov (bad) mov popa adc mov es call movl inc sbb and sahf je nop add pop inc push pop aaa idivl (bad) scas mov xchg cmp lods cmp cwtl fildll fidivr gs mov aas mov pop add and xchg mov lea xchg push jp inc cmp ljmp ja sahf rcll cmp lods out je std xchg dec cli orl adc dec pop inc jae pop call cs scas jle sbb es std (bad) push icebp add cmp (bad) adc pop inc and movsl push int into pop leave dec aas repz sub outsb ja push xor (bad) jns inc push enter xorb mov push and mov (bad) (bad) fs inc and adc fmull cld jecxz stos mov adc out xchg sbb into cli out (bad) stc sbb (bad) repz adc or daa rol in dec jbe pop add mov adc clc mov in cmp pop jp iret cltd mov mov xchg xorl sub stos or sahf xlat jmp push incb pop es mov faddl movsl mulb out sahf fs dec pop vcvtsi2ssl imul ljmp test (bad) (bad) or or lahf dec sbb rcrl lds (bad) notl push insl jnp pop (bad) mov or scas pop jmp mov test and xlat mov jnp xor pop sbb lock mov test or dec mov sub mov loope push aam and mov fidivr mov das xchg mov adc jl xchg push loope cmp ljmp nop xor push stc (bad) mov dec sbb lods mov push push aas sbb sbb stos (bad) sti jbe push ljmp in stos (bad) or ds xchg ss aas pop xor lea or js mov cmp pop lret int inc adc (bad) adc aad int3 gs movsl dec xchg test iret int3 dec mov sbb hlt subl dec jge ret aaa jnp rcr pop (bad) jbe loope mov sub inc mov pop out fs pop pop (bad) pop add push in inc cmpsl mov mov mov pusha jne and aaa punpckhwd sahf add in fdiv pcmpeqd pop cld mov or push mov icebp mov xlat (bad) hlt dec pop rorb inc adc mov cmp (bad) sub dec ja lds fnstcw mov gs push jmp xchg jo pusha add cmpsl mov ljmp std pop popa dec lds imul sbb loopne,pn xchg cmp enter jle stos call push lock inc xchg sbb das popa lods dec add or test xchg call lret cld mov ret adc insl pop andl js stos xchg fldenv loopne push dec or xor (bad) mov movsl dec dec ficomp sub mov lret fcom (bad) mov pushf imul test aad lret jne push stos int lds shrl (bad) cmc lods xchg daa cmpsl pop fpatan cli cmp insb mov ret test leave fildll jl xor sbb mov rol outsb in in gs lret xchg (bad) lock or movsb es cld add mov xchg cmp (bad) cli (bad) out sbb in mov aaa xorb jmp clc dec cmp dec aaa fcoms mov lcall pop push cwtl xchg mov dec fnstsw and mov mov ret int add xor enter mov outsl sbb sbb aad sarb push stos rcl loope dec cmp test sub out sarb jge ret sub insl sbb sub xor add cld (bad) mov adc push xor dec rolb (bad) movsb push dec notl jo mov leave lret push mov jecxz jg mov dec enter lods cmpsl xacquire fldl cmp sahf ja fbld mov pop fsubl add sub mov and lds and or sub mov js mov hlt dec lldt daa add push ds push je (bad) pop insl (bad) mov xlat jg stc out cmp and xchg jg pop xchg mov imul mov cs icebp mov lds inc repnz bound mov mov mulb shrl repz rorl dec and shrl push insl icebp push mov fisubl push insb cmc fldcw je loope mov xor and insl (bad) mull mov mov (bad) dec push inc nop les jecxz xor mov sahf mov push int3 mov cli inc test int3 cmp js pop push xchg jecxz xor movsb cmpsl (bad) cmpsb in ffree fldl jg dec mov mov inc xor xchg sbb ret icebp iret jne mov and xchg outsb jp jae lock ja daa push cmpb cmp enter aas cmpsl jb sub mov (bad) out sbb sub in push cltd out outsl cld sbb (bad) adc shrb mov lock sahf xchg mov add pusha lods xchg dec mov dec (bad) aaa (bad) repz and stos jb xchg mov mov stc jle sbb adc inc out (bad) xlat jo (bad) xor mov mov sbb lock push xlat push loopne call mov stc fsub outsl jmp and mov repz or adc jp dec add xchg mov es jbe test mov (bad) mov or cmpsb xchg int jnp xchg jmp jg fildll adc mov and das adc ja imul xchg mov pop pop pcmpeqb fisubr pop xchg (bad) test push popa fcmove cmp nop jge xor aam mov fadds xorl cltd imul mov mov (bad) mov add cmc pop out jl xlat dec imul ret lret enter xchg test mov in dec dec jl cmpsb orl sub daa dec cwtl cli fwait dec push imul out inc sub mov or jne,pt add popa iret imul xor loopne loop (bad) mov pop mov adc loope mov int dec jno mov dec dec lods xor adc cmc xor add les scas popa cli scas mov daa lret push cmpsl xchg inc popf dec jl sub enter fsub loope ss xchg cmp repnz adc push or gs pop inc test dec adc jae dec mov push jo add stc clc aas adc cs pop lock and iret movsl in mov out lds (bad) push cmpsl ja std cltd xor xchg in fsts or sub adc cmpsb popa sbb inc (bad) aas dec movsb andl xlat cmp jbe push push cld pop cmp pop int3 sbb fidivrl lcall xchg test dec mov icebp pop sbb push repz int3 xchg loopne xchg xchg jge cli (bad) xor dec xor stos xchg or sub clc mov addl mov sbb bound popa push cld shlb fildll and lcall jg ficompl mov xchg xchg jl les enter pop ljmp pop or clc inc cmp fisubl pop mov jnp and lds lret inc shlb add insb shll cmp pop jmp inc mov jne arpl jg xchg insb arpl xchg sbb hlt jg sahf call test test xor mov mov imul cmp cmp mov sub adc (bad) cmp cmc mov xchg mov mov stc and xlat push xchg or mov test sbb push xchg sti outsb cltd sbb cmp int3 xor js arpl fdivrl pop shrl clc sbb adc and jns adc xor mov cmp sbb or mov push inc cs (bad) inc or repz les call test aas lahf (bad) cltd cmpsb dec cmp sbb jle jmp std jno pop fisubr mov dec fld xchg arpl insb test xor mov add mov out add sub mov xchg stos les mov inc mov sbb sahf or pop mov inc lock mov leave orb enter int3 adc ror push imul add lods sub dec and adc sub (bad) or add push add push imul sbb inc or inc (bad) jo cld stos popf insb dec jmp jge stos add mov xlat or jmp or cmpl xchg ljmp jnp (bad) add mov push sti insb in mov add lahf outsb lds adc (bad) jo cli in out stos inc push scas jne xchg pop pop das mov pop out jge loope call fdivl xchg popf ret cld out repnz add add fldenv fcom adc (bad) test sti loope pop push dec test shrl sbb mov test pop je fcmove test jge dec add test xchg arpl inc clc (bad) test ret call dec ja jp test lahf mov sbb test fildll xlat int3 cmpsb sbbl mov and sbb dec stos jb psllw int es or push (bad) std dec dec decb imul cwtl push aaa sbb cs rcrb leave sahf push fsubs dec daa daa and ja or cmc inc cltd mov jnp sub lret xchg cmp nop push (bad) js xchg pushf loopne ss add orb mov jbe in rcl lock and xor daa or xchg adc sub mov adc xchg gs imul dec cmpsl int3 mov rorb xchg xchg mov jo lds mov pop nop test and sarl sbb add push mov mov in pextrw xor cld or ret and push and test pop andl lcall popf jmp imul test push lea lret add xor mov mov jg test xor lea mov stos clc xchg push test adc stc mov sar lcall jae xchg mov mov repz mov sbb imulb push ret test and jg rclb sbb cmc test roll inc stos push pop cld push ss sti add insb lahf mov lock (bad) jg lahf test mov and xchg cli mov sub or sbb cs fsubs lea adc pushf dec or in mov xchg jmp xchg adc push jno push data16 sbbl stos das sub movsl mov push ficompl jno shll jbe pushf xor popf out repz jbe cwtl fbstp adc mov mov jbe mov ljmp pop mov scas fstl pop mov popa (bad) or push sub or insl dec nop repnz and dec xor lods jge rcrb or xlat dec ret in push orl cmc stc xlat pop push add hlt nop insl fdivr shl mov push cmp push inc test sub popa int3 imul insl ja stc lret stos test xor out add cwtl mov add fnsave push xor push mov pop fbstp xor cmpsb cmp hlt imul pop mov pop mov adc hlt dec add ret mov xchg add movaps pop jge out pop jb mov mov scas mov cli repz js (bad) mov cwtl jae sub mov lcall lret jle xchg mov inc pushf shrb pop loopne adc aas sarl movsb popa xchg icebp cmp jmp xchg jp sub cwtl rclb mov add outsb mov sahf mov dec out and scas push sbb sub pop or leave pusha and jecxz shll movsl shr out inc xor sarl xchg add stos cld sub cli pop dec repnz nop mov and jl imul push mov in cmp bound xchg cwtl ficom mov jb push test adc jg out jbe movsl (bad) iret inc pusha inc jns mov je movups push nop daa mov psubusb inc xor sbb add cmpl sub or negb mov mov jmp push in insl cmp mov dec ljmp aaa imul repz lcall es mov sbb dec sbb shl dec test mov inc lea test push loope jle sub pop aad pusha dec jle mov sbb push sbb (bad) xlat pop jg inc repnz decl aas xor mov cmp adc mov mov pop sub lret in (bad) bound outsl cmpsl cwtl pop jp fcmovnbe dec cmpsb inc mov lahf outsb test cmp std xlat fs stos sbb fnsave push push inc adc scas sahf frstpm(287 pop cltd test mov mov sbb sbb std pushf rcr ljmp mov (bad) mov cli inc fidivl ljmp (bad) enter pop mov out lahf shrl or out loopne scas mov push push mov inc popf imul fucomip mov pop movsb dec adc or sbb mov sub gs dec aaa cmc sub inc enter les daa out movsl xchg xchg inc ja mov jbe leave dec imul lret (bad) adc aaa cmpl mov aam lods pop lcall pop pop sbb cmc sub decb cmpsl mov mov jl aas andl push imul pop dec xchg jle aas aad add mov call push mov in js mov xor cwtl push mov dec fild pusha ljmp mov int iret jne and in dec popa jg xchg mov and mov (bad) mov cltd mov jo fs cmp outsb icebp into inc movsb aad add out mov lds frstor cmp sub out adc jle adc mov sahf mov aas loop jo idivl xor pop lds inc push jge and sbb mov scas and sbb out push xor insl xchg into adc ret dec ss sbb cmp (bad) jmp mov (bad) mov call outsb mov subl push cmp lods repnz add mov addr16 in jecxz rorb mov jg,pt ret mov push enter and icebp hlt xor sar roll stos pop and mov jle bound out push movsb call cwtl loopne iret dec into xchg fiaddl inc dec push xchg dec in sub insl mov xchg aaa dec or dec fwait xor stos leave jo dec pop mov sub push test and test and imul ja mov push pop inc sbb fwait mov jno jge or repz scas and arpl push lds fldenv mov push xchg hlt ss pop xor iret aaa outsl xchg or sysexit dec mov add jnp dec shll add xchg int3 pop rorb pop jmp mov ret dec rorb xor dec sahf jg movsl idivl adc cwtl cs in icebp mov lods sti (bad) (bad) loopne mov in jno subl out xchg pop ss test xlat addr16 addr16 decb test stos xchg clc pushf inc int3 mov fsubp sbb xchg jbe add repz adc pop xchg fdivs sbb push pop cmp sbb clc mov gs add or imul outsb movsb fadds adc loopne popa or push mov adc and aad add xlat cmpsl out inc bound lods jo fcmovu (bad) sub insl xchg push xor jne sbb vpsrlq mov out pop hlt and test in xchg adc sub es mov push js (bad) int3 fldt mov loope jmp (bad) push lea push gs cmpsl and dec cmp repz jge pop (bad) mov xchg test popf lock in iret push movl jp outsl push out jns sti or mov fidivl pusha pop mov rcrb adc daa mov lcall dec mov jnp mov mov (bad) lret jl pop dec dec fidivl clc sbb pop add lret data16 js mov pop mov cld repnz pop lock pop jl pop dec loope sahf dec fmull scas ss lret or dec bound clc (bad) dec mov mov mov jecxz mov addb mov lret push and outsl xor out lds push andl add push jae and cmc aaa add adc sub sbb lock (bad) pop jne adc cmpsl pop or dec inc jge aas lret add pushf dec mov into (bad) xor push roll cwtl inc cltd cmpsl push nop (bad) mov iret stc fsub or dec and push xchg out mov xchg cmpsb scas mov repnz pusha pop add test dec mov shrl testb inc data16 inc pop xlat ret xchg xchg push mov adc inc xchg mov stos cmpsl xor dec arpl add jo xchg inc and xchg lret xchg sbb add mov pop and or cltd in pop push or mov xchg pop push pop loop movsb das dec ss mov ss cmp aam out ret push ds data16 jecxz ja pusha mov adc pusha lods inc stos inc and ds (bad) jnp pop inc (bad) mov clc dec push xchg repnz fdivs dec jo xchg inc or js std imul pusha mov pop movsl push mov and xor popl add adc (bad) call jmp scas std cltd shlb jecxz lcall gs sbb and nop jo push pop sbb pop enter push add xchg std pop jne mov in add subl loopne rorb mov inc push iret inc dec sahf cmp imul insl popf push mov pushf lret sub add pop bound insl stos cmp call jns test outsb shlb out dec andps push jecxz sub loopne mov movsl inc (bad) dec inc setno or and mov cs jne fsubrp in loopne fidivl shrl xor push stos cld dec and imul aas sub cli popa pop adc in jae aas lods in adc fwait loope fsubl enter loopne sbb mov push dec cli outsl sub rclb cwtl sarb pop and push ret adc fdiv (bad) adc inc (bad) cld lock xlat sahf dec inc fcmovnu fidivrl mov pusha test or movhps push push sbb xorl adc fisubr ljmp lret cmp sbb ror outsl cmpsl push (bad) push sbb adc add rclb push dec and fnstsw pop fs cmp adc push mov les jecxz sahf xor leave test adc cmpsl jbe xor or rorb insb aas (bad) movsw cmp jp int3 jge mov and pop lahf ret add cltd icebp push test ja jp ss aam push fiaddl adc sahf dec int3 and pop loope mov pop lods test fwait adc mov jns xchg aad fsubr or lcall cmp cltd jb fs or mov (bad) int3 (bad) hlt cs cltd das insb stos jmp mov inc inc jmp mov push and push mov addr16 mov mov inc mov cli dec adc jmp inc add enter and mov ret xor fnstenv dec sub jmp dec cli sbb add mov adc sbb xor dec jle mulb insb (bad) or cmp pushf and fcoms iret gs lods arpl cwtl jo sbb jmp incl int3 xor pusha divl (bad) jg mov sahf iret int3 aaa or push std je je mov hlt (bad) jmp xor daa jp xor fistp dec ds mov pop xchg ficoml loopne mov sbb sub enter movsb cmc mov stos out mov insl xchg pop es negl inc push movsb mov sbb lret xor mov into mov out adc gs xchg btc mov movsb mov pop jp subl jp (bad) dec rorl fmull lock les (bad) js mov stc mov and adc jl add outsb add lret lods leave pop out inc (bad) mov popa movsb iret sbb aam scas push mov dec test add int lcall insl call pop js jecxz push cltd xor ss movb jns mov inc mov aad cwtl push pusha mov sub inc cli and mov cmp into sti or pop pop adc fildl daa pushf dec insl cli jns pushf lds jmp loopne leave or push fsin out and (bad) mov cld cmc rorb insb jp xchg cwtl cmc cwtl fstl std adc mov sti hlt push xchg daa or and push mov xor test int cmp push cmp rol mov inc shr std cmp in stos bound (bad) out pop xor enter arpl push sbb sbb shrb fisttpl test xchg pop mov pop cmpsb xchg subl mov jl cmp fadd lds lret fstpl in clc sbb mov xor jg loope addr16 push js cmp xor cli xor add sub fcmovnb lcall (bad) and ss (bad) lret hlt pop out enter xchg fiadd sub mov sarl pop cltd emms sbb inc lods test xchg sbb out pop sarl mov mov repz add mov lret inc and imul dec pop ret lret xchg mov cld fisttp xchg cmpsl dec push test jg mov dec out adc mov cmp inc arpl out pop push jns adc or mov lock stos and add push pop mov xchg adc pusha popf mov pop movsb cli enter sub jnp hlt lea (bad) cld daa into mov ret cmp jne lods xor ficom or gs ss inc lods sub mov jne xchg shrl jbe dec push pushf add and leave arpl jae cmp stos into add call ds mov inc sti fnsave mov mov and cmp cmp xchg mov adc scas test sbb fcmovb bound xor push mov mov mov add mov xchg jb xor test fcomip cmp or mov sahf shll adc or imul or fidivr lods jmp and movsl cs inc in aam int dec les jle lret push fwait test iret in xor fidiv jo and in cld insb leave imul negl jae test lahf negl add push imul fidiv out insb push mov pop inc pop loope leave mov (bad) mov inc and clc inc jg xlat ficompl int3 int (bad) jmp xchg adc inc mov mov mov jno adc inc in cmp stc andb or mov push jns push push addr16 mov bound jbe cmc movsl adc std jo adc xchg push pop or aaa aas and add (bad) cmp push (bad) scas and mov jle sub test pop pop loope push gs xor (bad) nop push dec aad fwait sub ja xor stos jge clc cmp lock inc mov jmp fdivs dec push cmp lods lea push dec pushf mov lcall push adc mov mov scas pop lret packsswb (bad) in leave mov in and jl sysret sti (bad) std jb jge in mov in jb cmc add ret cmp (bad) cmp mov push movhps xor mov out popa xlat icebp sub mov push mov xor mov sbb inc aad sarb aaa cwtl aas add ds cmp je aas (bad) cli insb mov pop add sbb popa mov lret dec cmp nop ljmp sbb loope xchg movb std call rolb push pop and rclb dec adc jl in popa adc lock xor or push inc adc ljmp and and inc or xchg mov pop icebp adc lock sbb jp out sub in (bad) repz jo in fistpl add imul pop or cmc cmp xor aas adcb scas adc push lods addr16 scas push std mov daa int3 imul mov mov fnstenv xchg hlt jl fisubr cmp addr16 imul fsubp or push out mov clc or push into fcoml movsl repz or cmc scas pop inc rcrl idivl mov int jbe pop sbb pop pop pushf enter push daa outsl pop test es jmp xor cli xchg lea inc aaa adc jne mov xchg stc sbb (bad) xor lahf inc xor in push add pop ds jb push insl add les xor push mov fldenv xchg add lahf fild lods gs adc pop push xchg loopne leave pop dec cld leave mov fidivrl (bad) int loop push adc mov bound xchg outsl leave dec xchg xchg inc cltd jle out test xor add xor xor push inc sbb cmc sbb lret lret rorl push push mov arpl inc xor mov (bad) jbe ds rcll popa and xchg push fsubrl or or out xor jbe arpl push in lahf adc pop bound cmp inc mov sub jbe dec repz mov mov clc mov jae cmp ret in push andl or and outsl lea and je pop enter cs test lods cltd xchg test mov lret (bad) int mov mov (bad) ret jecxz imul out or push pop jbe mov and or jle (bad) push sbb (bad) test push test mov adc push loopne rcl xchg or dec push xor xlat jle fs and lcall lods je push test dec or cmp loop sub inc pop mov sarl test push sbb pop xlat jmp aas sarb pop sahf mov cmpsb mov sub das call adc jp mov push jecxz es inc aam mov jb mov sbb arpl lret inc dec jno and ret aam inc lahf decl xchg out sub push sbb add xchg pop lods and lea sbb les in mov pushl xchg pop mov mov sbb push cs test hlt mov ret jle test fdivrl loopne mov movsb ficoml int mov nop adc mov xor pusha ja sarl or and iret cmp aam cmp mov sub adcl je mov inc ds jbe mov push mov (bad) dec test je mov jg ret fcoml push dec adc popf adc mov ret scas sbb xchg xchg nop lock stos cmp mov mov add sbb inc jecxz sub inc call mov sub ffreep xchg enter mov add sbb and mov cmpsb fsubrl sarl es dec pop pushf cmc cmp push std mov push leave inc fs in stos mov dec add xchg (bad) mov cltd inc das dec fistpl test mov daa mov imul inc imul std aam add in dec jle mov mov jl xor test dec out xor ljmp jecxz imul iret mov fdivrp dec movsb xchg in fistpl cmp cld push cmpsb and fwait add pushf push mov push mull xor fstpt movsb out xchg ds pop mov popa enter stos or fnstcw add adcl in cltd fildl mov divps lds pop sbb (bad) pop movsl mov ds repnz jl pop jle dec jle dec jne adcl and lret push mov mov stos inc jle or mov stos adcl pop sub sahf sub add cs mov adc into mov dec inc mov sti lds popf push push inc xchg cmp mov in orb dec inc pop dec sub mov es inc (bad) icebp sub cwtl adc inc cld js mov dec enter in aaa sub nop repz add cltd fdivs js lahf dec in inc adc dec and and or jp inc fdivrs lea daa popa mov fidivl dec mov push into sar jge std cmp mov lea cwtl sbb cmp das fstpt imul addr16 push xlat ss and pop lahf adc xchg add fisub fs add push jl outsl daa xorl out adc std lock lret ret push outsl shrl mov stos sahf inc sarb pop inc (bad) mov pop cmpl mov mov sbb call fs sti xor (bad) orl jge (bad) xor xor cmpl cmp bound pop xlat xchg mov daa or (bad) repz bound push xchg or pushf gs ja jbe and sbb enter inc outsl fwait jge fnsave int3 (bad) gs sbb mov or dec pushf mov in mov and pop and pop mov push xor inc and loope inc sub jne and pop adc out mov cmc ja or dec aam xchg sub mov or mov mov popa out or add pop lret mov stos lods stos shrl pop ds cli rolb fs aad aad insl stc aas jmp add fisubrl orl ror add pop aaa mov mov fs xchg mov push sbbl push jb mov pop (bad) pusha adc push ret jno jp mov cld scas sub mov xor dec fs sbb into orl (bad) mov jbe sbbl in repz scas or popa clc push sub xchg xchg push jmp lods cmp test enter jnp mov push mov lods adc mov mov sub mov inc sbb push repnz cmp and sbb push aam pop lret outsl clc sahf leave and test andnps out jmp (bad) imul (bad) fstps in mov mov fstpl sub mov mov mov cs jmp pushf or cs fstpt sub loope dec push xchg scas loopne or fisttpll cld sbb dec jnp mov jae jns in pop aaa jmp imul mov loope gs mov imul stos icebp pop lock loopne and jp fsubl icebp divl pop cmp test add mov mov pop inc add nop mov or xchg into loop jecxz mov mov sbb loop les icebp mov or xchg jge bound mov dec stc pop out loopne jge lock std push ret sbb or insb mov aad aaa jbe lahf ret pop hlt jl dec stos xchg or sti push jno dec (bad) out push mov les push (bad) (bad) test stos ds mov mov inc sysenter out lret dec cmc xor cmpsl adc js cmc gs adc jns mov int3 and out xor in adc or out inc shl mov xchg mov icebp call xchg jl cli (bad) cltd inc (bad) xchg cs into aas jns lods test jns jg add clc mov cwtl xor movsb insl daa lods pop test mov cmp push es jl dec repnz add pop cmp inc into xor fimull dec outsb aad add mov mov clc test xchg pop scas push js fistl jnp mov cmp xchg or insb mov add sbb mov pop jecxz mov mov scas add or adc mov scas push into (bad) shrb pop inc jg sbb (bad) icebp inc lcall and and es ss iret pop sub cmp je jl iret add scas loopne int imul sub fiadd cmpsb adc mov jmp mov jbe or mov insb xor lds jo sar rcrl mov sahf mov out cmpsl xchg (bad) xchg adc xchg xchg jns mov nop mov inc push jno fwait inc cltd add sarl pop test cltd sub and sub das push jl ljmp mov sub outsl inc std outsl (bad) std out mov dec push mov bound lods fisubl push jecxz lret pop lahf jle jp jno lret add arpl pusha stos rcrl push fidiv shr mov test inc mov mov push or adc and retw mov ljmp push test (bad) mov stos lods or dec dec popf add stos ja xchg mov xor je dec es xchg xor or nop cmp xchg add add nop lds lock jno subl imul inc inc in aam stc jnp (bad) mov shr int3 sbb mov fcomp test inc ret jmp mov and push mov mov xchg pop jmp mov xor rclb orl inc int add outsl divl lock cmp mov ficoml sbb sub mov dec jae dec and fwait sub mov sbb xor xor xchg add mov test lea shr out fwait push insb push pop mov push dec xor es push mov mov add ret orl mov mov pushf xchg sub jno mov icebp fdivs in or mov out ss daa pop adc xchg jg fldt push shrl rcrl shll stc sub sahf adc pop std sti (bad) stos xor stos add inc (bad) stos dec push outsl add in ret dec sbb mov outsb push aam fwait cmp addb mov arpl inc dec cmp loope out mov ja lahf cmp icebp inc jp aam mov mov movsl inc cmp or imul (bad) aas sub fnstenv push dec outsb sbb (bad) sub or sbb loopne iret fiadd sbb cs and and cmp pop out inc aas mov aam adc cmpxchg loop sbb inc movsl out adc out les mov xchg mov sub pop fmuls xchg dec dec mov fs inc stc vpshuflw push pop xchg pop cmp insl adc push inc xchg mov bnd inc cmp iret xchg ficomp dec lret jecxz daa push mov int3 ljmp std dec dec mov push imul xor dec cmp jl fildll repnz sub and pop jo xchg icebp push cmp jne sti adc sbb cwtl lret cmp pop jmp sbb mov rcrl (bad) mov outsb mov rcl std jmp mov mov cmpsb sti popa xor insb xchg add cmp push out dec add divl push into sbb push (bad) adc int3 inc les lahf (bad) jg daa sub xchg xor fcmovnu add cli mov push pop mov lock jb push hlt sbb push out inc (bad) fmuls lea dec push cmpsb lods lods mov loop and (bad) mov (bad) mov pop and mov (bad) mov inc mov ljmp inc cltd stc arpl pop les outsb mov into or xchg lahf xchg out bound bound decl inc jg dec mov les divb arpl cmpsl shr sbb xchg lret call adc mov ficom repz dec xor or mov dec mov daa pushf fwait push xorb cmc lds in subl pop insl add push jmp test cs in mov idivb inc lods (bad) stos sbb jge aaa add jae (bad) xor cmp iret mov out clc test into int3 out xchg mov ss adc andl (bad) mov mov adc mov and cmp mov xchg shrb jp test inc orl and mov out jne ds add pushf push or js inc dec pop fmull insb idivb inc mov add insb ret (bad) xchg dec or xchg xchg sbb (bad) or scas cmp add lret inc lret les stos jns inc pusha gs out cmp jb mov push jl adc repz and jg icebp (bad) (bad) cmp mov add popa mov mov and mov dec in adc sbb stos inc neg out and arpl xlat add dec es mov fdivrs insb rcrl mov in mov imul xor adc push sbb (bad) clc jmp test add inc loopne or jmp lcall cmc daa fstpt add cmp xchg (bad) mov cmp mov in cmpsl mov loop repnz (bad) movsl repz mull loop dec lret jbe mov or les xchg jb lahf inc int imul fsts push dec out scas fcmovb sub cwtl jno,pt mov mov loopne imul je rcrb add push les pop rcl bound and int3 outsb sub shrl dec jg push outsl push in shrl out pusha mov push in mov mov rcl imul lret cmp daa fcomps push int cmp addl mov fldenv and add aas cwtl jle cmp xchg jns popf pop enter cmp rorl sub rcl ret or mov fsub and ret mov add scas and inc js outsl xor stos cmc aam push rcr xor stos pop pop pop lds sub push xchg fwait cmp push mov out sbb mov push (bad) adc lods out lea out jl fistpl dec push xor xor xchg cmpsb fwait jge rcrb lea xchg push pop decl cmp xchg hlt sbb pop outsb cli dec adc repz cmp hlt mov sbb stos xor ds pop mov inc roll rorb sbb and nop ret mov (bad) hlt dec mov outsl scas out test jle (bad) hlt ss sbb pop pop dec jle es fmulp sti jo,pt or lret push push fcomip idivb pop xor xor mov shl xor mov repz out iret sbb jo addl adc inc clc mov ljmp fistp (bad) int3 lcall mov xchg xchg lods xchg push sbb sbb push jb xchg incl nop addr16 add push jb sarb pop in iret inc jne js pop mov and dec jl or mov clc outsl int cli out inc cmpsl aam cmp insl jno hlt cmpsb out ljmp jmp mov imull push mov or mulb test sti adcl xchg dec cs and repz cmp pushaw mov loope insb lret xor adc or fcoms inc (bad) adc jns stos xchg sbb or loopne movsl lcall jle inc loope inc sbb hlt mov push int lret push (bad) in jp xchg push mov movsl mov pop add rorl mov stos or or pop (bad) jno and gs mov in pop cmpsl sbb sbb push lcall dec sahf lret lds jge mov mov inc and add adc ss add testb xchg cmp mov pop stos ja notl insb (bad) andb push sub rcrl mov push xor push xor fs or jmp or popf jle jno int3 imul shrl fcom xchg cwtl xor inc push pop adc or xor pop jae lret mov mov and mov repz int adc pop push dec xchg inc and stc (bad) loop jbe das sub and test mov jle (bad) lock jbe adc mov xlat cmpsl cmp pop icebp outsb (bad) leave shrl or fwait adc sbb pop cld lock add sbb shr movsb fcomps (bad) jnp data16 cmpsb in mov aas and mov xor ficoml and xor insl push adc incl jle xor sub sahf movsb cmpsl sub dec dec jbe adc loopne fstps mov add sbb add andb jg pop mov arpl leave popf push dec inc add inc fnstcw xchg jbe test pop hlt pop cld test or pop dec pop cmp or punpcklbw xchg xorb (bad) test sbb fcmovu sbb inc loope add pop inc repz stos jl int mov rcrl push mov jns int inc jmp and into mov (bad) mov mov inc push cli xor pop adcl inc push aaa xor inc or push mov jecxz rcl es jmp xchg sub stc mov fs xchg cmp mov adc lret dec int3 sti imul scas cs lods (bad) bound or leave ds inc pop in fisttpl jge jmp loope sbb push (bad) aas bound add (bad) ljmp into lock adc and aaa jg xchg mov jno jecxz loop pushf repz jnp dec add xchg shll shll or xchg mov cmp jmp push repnz sbb inc jne and and stc ffree clc clc mov jecxz mov movsb inc adc and jae and push jnp add fstl outsb adc sbb mov and addr16 cmpsl ret mov inc mov pop popf mov test or push out push (bad) jns mov cli push xchg inc inc mov rol insl xchg jnp dec adc popa adc pop mov outsb pop fdivrl rorb adc pop inc mov cltd lcall test mov outsb repz dec pop xchg mov dec or push test sahf es sub pop loope jge jbe lods shlb jmp pop and mov lods jae cld and lahf loopne sahf in das xor aas pop push cli bound jnp int cmp scas scas sub lds jg loop xor and test or mov add imul aaa pop push xor cmc nop out jae dec fisttpl inc mov inc jnp xor jmp push and dec xor dec sub cmp add lock mov daa les xor je mov arpl and add xor test and pop push call sahf cmpsl cmc mov jnp or (bad) add pushf mov lods cmp imul fucomp or jl add mov out cltd sbb fcomi (bad) mov mov fildl ss loop pop cli nop popa cmpsb xlat comiss (bad) adc mov cwtl mov data16 nop xchg mov js shlb outsl cltd lods aam das dec data16 and mov pop negb xchg jns popf jg je fsubrs (bad) outsl or out mov movsb gs adc mov mov repz dec sbb bnd inc jp jbe outsl das in jmp outsl fisub add xor xchg cmp push int inc add jns dec jbe mov (bad) (bad) aad xchg add jle xchg mov mov hlt fiaddl push mov cmpsl adc sbb sar pop dec pop ja hlt mov dec push jb or push cmp (bad) iret mov insb xchg movsl and hlt cmp aaa leave stos outsb clc adc xchg mov call in cli test test outsl je adc sti in subb cmp iret add mov les movswl dec les pop icebp lods cmp inc add push ret mov xchg pop hlt mov inc fsubs pop add ror cmp xchg call or jns sbb push mov or jae es mov cmpsb lods and cmpl cs into dec jge inc aas pop imul sbb pusha leave fcomps xor mov push stos ds (bad) xchg inc cmp (bad) outsl notl sbb lret dec popa ljmp mov jl setle cs pop sarl dec pop inc negl out jg test je js sbb int3 xorl pushf pop adc cmp dec sahf bound or mov adc fsubrs nop repnz leave or int stos mov lcall fdivs pushf popf cmpsb dec xchg push sub jns cmc inc inc inc xor xchg stc (bad) or xchg push (bad) aaa jecxz xor lods shr es push jmp repz fnstcw pop mov xor (bad) ss cmp inc add rcr dec out out adc cmp aaa lods loope fdivrs orb pop and push and int3 pop movsb mov sub mov or cld adc shlb dec stc pop pop mov lods clc ds repnz cmc dec jle cmp cmp dec push lods pop pop sbb loop inc (bad) push inc push in pushl push add or negl fcmovne ret addr16 andl daa pop or rcl xor adc inc aam outsl imul popa mov fisubr test dec inc das clc popa sahf push int push cmp push push (bad) adc out cld fidivl add sbb sub lret imul bound ds ret out call xchg mov mov dec js cmpsl ss mov loope dec xchg vminss out fdivrl sbb push jb mov dec aad adc repnz mov in push jle mov and cmp (bad) sbb mov rorb into sbb hlt sub fidivrl insb in jmp imul inc in (bad) testb dec dec sub dec std ja pusha mov xchg jmp dec dec and inc mov fldenv pop into sub stos shrl xchg (bad) test popa hlt pop jo mov mov flds enter dec mov fisttpl mov out mov stos sub icebp (bad) aad xchg rcll push test addr16 data16 cmp jns push xchg movsl or xchg cmpsb arpl sbb rorb out repz push and in dec xchg pop jns rcll push add ret leave jbe les data16 into iret adc sbb (bad) les into jns adc cmp test scas jb jecxz push sbb addr16 mov out mov scas cmp lds inc sbb add inc dec xchg lahf fucomip and inc cmpsb jge movsl or pusha mov or arpl arpl sbb mov push inc inc in divl (bad) adc cltd cmpsl mov jg xchg jno test aam stc add push rclb cmpsb call sub call hlt pop cmpsl xchg xor sarl push ret out in orb and repz loop jno and inc push pop sub popf and test sbb jbe aam sub xor inc btrl inc daa bound or xor adc dec lods sbb jns daa jno je pop loopnew mov cmp in dec jmp and scas outsb sbb lods jo mov sahf lds test shl mov sbb fdivl mov inc aad arpl repnz (bad) xchg pop mov out mov lret dec push cwtl mov fucomi ja pusha bound cli ja,pn lods inc mov sahf aaa pusha lahf aad pop ret cmpsl pop inc adc inc movsb loop and pop scas and mov aas rcrl and and (bad) jb pop nop orl pop pop pop shrl pusha scas insl jb stos xchg out incl cmc leave jnp pop jnp insl cmp dec jmp dec sbb pop scas mov dec mov rcr adc dec sub push add into add mov lock pop push adc ds xchg push (bad) int3 andb (bad) xor fcompl shrl int adc lahf sub mov pop lret cltd imul inc sbb push inc add or mov jne dec stos insl fs call jl add inc and iret jle mov pop test daa xchg sbb mov fldenv push cmpl jmp xchg push fdivl mov jmp (bad) mov dec jbe mov push push pop sub lret repz sub xchg scas (bad) enter sub pop jmp mov das jnp jl inc inc sub dec mov cltd dec stos jae fwait inc mov loopne and sbb pop cs mov pop loopne sbb fsts mov xchg jp pop (bad) data16 cmp in pop sub (bad) std xor dec popf and popf mov inc mov in or out cmpsl push cmp jns jge mov pop sub ror sti (bad) int3 jae ret rcr addr16 mov xchg or cwtl dec xor das fxch scas pop (bad) cmp sti daa push ja and test jne (bad) jae and popf mov cmpl call je jns addr16 jb push push jmp lock push and cli into cmc imul jae ljmp lods sbb mov in push stos mov dec cwtl cmpsb outsl adc add ds mov inc pop roll push enter inc cmp dec js sub xchg adc ficom or mov es ret xlat cmp xchg int mov aas cmp gs out xchg sbb clc sahf ljmp jmp lahf insb or mov or jge or inc lret mov mov push mov stos rcrb test and mov cltd int mov int3 test and divb jge cs or mov dec or xor hlt leave sub cmp out xchg int3 fstpt or pushf ljmp xchg adc or aas mov sub jl xchg insb fs shrl cmp jae push adc and jnp (bad) fs test pop dec shrb adcl sub mov dec lea movsb outsl inc enter stc jg lock mov fcmovnbe leave cs out out pop and cmpsl ret cwtl push fcompl mov in fxtract test addr16 lods fisttpll hlt and mov (bad) int3 (bad) ret adc jo andl xor int xchg adc mov and push mov movsl jl test jo lock cmp insb xchg shll cmpsl fsubl jmp sti out adc sub popf xchg mov xchg pop pop jns arpl and and sbb fbld sahf (bad) shrb aaa sub hlt rcrl in ret sti lcall scas and lahf in int enter ret cmp jbe push cmp insl (bad) ffreep push or or hlt xchg sub arpl pop fisubrl fucomp popf push pop lret popa jo lcall jmp int sbb mov and sete (bad) jne (bad) mov mov mov ret mull mulb xchg and jo and outsl pop (bad) bound inc inc gs push lret add inc sarb fisubrl pushl incl adc push jns aad clc push add in stos cs fildl dec mov sub dec dec leave inc sbb adc and (bad) pusha fsubrl pop push cmpsb (bad) push lahf lea xchg fadds mov mov mov push or mov mov fildl outsb or mov dec dec xchg sbb stos cmp stc or ds loop dec jb out es mov testb fs pop stos cmc inc stos movsb fstl mov sahf lea fcmovnu xchg in cmpsb fisttpl and cs xchg mov pop xor sbb or (bad) std inc jp icebp stc scas jecxz fbld push arpl xor cmp push ds (bad) lods sub pushf pop add xchg loop outsl cld lods outsl fs shr pusha fisttp ljmp mov pop lret add cltd stos inc fld (bad) (bad) repnz daa mov cmpsl pop fmuls pop add mov inc ret mov jp,pt push out in cli stc je xchg adc sub or das jae dec out or jmp cmp in push add cmp dec sub inc mov movsb clc push insb addr16 cmp jns cmp movsl stos mov xchg rcrb dec fsubl call fadds stos cld jns jmp in popf xchg cmove push bnd dec dec rolb ljmp rolb dec cmp add ficoml cmp in les push fsubrs adc ja fcomps fistp leave fst sub ret mov mov and pushl dec mov mov mov lcall push (bad) dec or fstp lea bndldx jge inc lods push dec xor mov adc xlat sbb out test xor int gs faddl mov fwait cmp rcll lar fcomps fiadd and sub rcrb (bad) or xchg sub push idivb cmp out dec sbb push out dec add mov out popa sbb pop stc lock in mov xchg mov pop repz pop clc (bad) in lret xchg mov xchg mov dec cmp lea mov and int xchg scas and xchg dec out out or mov or ret outsb push dec adc into dec (bad) sbb sahf xor lods or jle les rolb mov loop aad repnz jg addr16 sbb fimul scas pop (bad) xor pop es inc mov adc xor mov xchg inc insl mov out push jp or out jecxz xchg jle sahf sub (bad) push loope movsl movsb push pop push sub imul xor insb xchg mov sahf imul cltd bound adc cmpsl push and rclb (bad) lea ja lret inc fs (bad) (bad) jbe or addr16 addr16 int3 dec test test iret sub loope mov xor or inc xchg xor mov xchg xorl push or sbb cmpsl xchg aaa jg aas popl mov popa cwtl in insb mov cmp adc adc sub pop cmp incl shrl fnstsw leave sbb inc sub daa inc sbb movsl jmp jle das out dec jecxz jb inc je inc mov lds mov leave jno push icebp adc mov xor inc pop dec add mov imul rcrb mov sahf push sbb cmpl lods movsl add scas sub lahf icebp clc push add jnp (bad) xor outsl xchg outsb insl outsl jno inc loop push pushf sub sbb int and sbb add mov mov xchg pop mov adcb in or aas lea js es out es call sub adc into adc (bad) repz mov pop push mov test rcll out xchg lods enter test mov jecxz fldenv inc ds cltd fwait and mov add pushf outsl mov sub pop inc lahf inc fildl mov arpl xor fmull dec jb fistl inc mov add test mov (bad) pop (bad) mov mov push cmp roll add add pop into jmp mov insl push adc jle fldl ficompl into out in insl sti dec mov roll xor jmp cmp addr16 cmp imul or pop int3 mov pushf div (bad) dec mov xchg push inc out mov push in and imull (bad) dec jbe xchg push ja jge imul add xchg bnd cmp (bad) es loop (bad) outsl lods jo or push mov dec and push add sbb sbb adc cli pop popf sbb lret push hlt jb cltd xor mov outsb loopne cmovnp int inc cmp jge inc in and mov sub jns pusha jno push movsl sub and es (bad) inc jnp repz xchg psubw stos stos (bad) sti jne adc iret int jg push adc mov test xchg cmp insl mov mov in and sbb cli xchg mov jle sahf stc sub cmpsl mov aam xorl mov sub leave or int roll cmp jne mov jno mov mov out mov popa leave lcall in movlps aas iret cmpsb jecxz mov bound mov stos sub jg mov dec jb outsb mov nop lods sbb dec arpl cmp or cld xchg dec (bad) dec lds inc aam mov aam mov mov test stc cmpl push mov imulb jl dec loop fildll sbb fwait cmp popf imull (bad) int repz shlb mov xor pop mov push and pop mov ret adc ja pushf ljmp cwtl xchg ja dec daa jl sub sub jp inc and movsb mov xor pop out push pop xor mov push orl pushf push out daa in xor sub movsl cmp jbe or dec push xchg mov jns lahf xchg dec std int3 inc and repnz and jge jo sub (bad) flds jne adc xor in or ss mov add jle (bad) push pusha jbe push cmp dec out leave adc xchg (bad) mov add pop jmp xchg leave test pop in icebp aaa pop mov out incb xchg in stc or les or inc sub or sarb lret shll or arpl cs adc leave imul insb cmp mov outsl and mov dec lods inc xchg stc push fldt int3 aad gs cs sti inc mov dec adc mov add loopne cmpsb xor fs jge ljmp out adc or jne push mov xor xchg cmp pop jbe sub scas pusha int3 repnz mov push dec bound int3 push popf pop les mov das xor js fdivrl imul mov test test (bad) out or and add iret xchg jae mov insl (bad) mov mov cmp lea cld nop pop xor adc mov movsl jb lret push xchg std rorl ljmp push insl mov or stos push fcomps pop or cwtl push sub xor cmp push jo adc jle loop push mov pop (bad) pop test mov sarl mov xor pop enter cltd lock adcl sub scas xchg and mov test or sbb in jg push xor das jle das or jo pop mov pop jae dec dec adc dec add add outsb xchg add addr16 iret (bad) negb arpl push mov adc stos data16 add std jae jp outsb repz fwait adc (bad) cmc adcb or mov rcrl loopne inc pop cmp mov or scas jmp in mov xchg (bad) ljmp push es mov inc mov inc dec mov daa sbb fildll stc inc insl cli xor add sub push xor pop push xor arpl sub xchg inc lea inc idiv xchg int3 sub add mov sbb sub sbb mov aam sub dec adc test ja lret sbb mov and fistpll jge (bad) ds insl pop mov sub dec imull push lea out sub lcall adc mov jae insl test in (bad) push mov adc stos add mov outsl add pusha mov test daa push (bad) jo loopne dec mov xchg mov push inc adc (bad) mov lds sub dec cmp fistl push inc xor pop dec jge je push sbb push cld and sbb jbe incb loope pop int3 cmp adc (bad) inc data16 cld ret sub xchg int3 js xchg mov push xchg xchg out aaa push bound xor pop mov cmpsb ret stos test inc or mov jecxz inc mov xlat dec and mov call xor aam gs repz sbb cmpl dec inc (bad) mov test sarl addb insl ljmp loope jg lods adc test add out mov aad mov ljmp fidiv cmc enter int3 fucomip stos pop pop mov outsl mov jle pop mov lret popa push mov xchg sar jmp mulb mov out aaa es test pop out iret popa xchg out sbb frstor cltd inc or insl insl imul or (bad) cli mov ret fwait or loopne push test inc and lahf dec mov push test insl hlt jmp and jo lcall cmc and mov adc into fwait sub xor imul das dec loopne pop test fisubr xor fcoms mov scas movsb test pop push push pop divps mov test inc sti shrb lret out jecxz jmp data16 cmpsb mov cmp adc pop aaa stos (bad) cmp dec cld push inc dec cmpsl adc les ret clc cmpsl push mov (bad) in cmp cmp mov fmull std repz pop (bad) or imul stc pop fidivrl aad push push fistpll push cmpsl mov jp xchg push mov gs stos inc and in inc mov mov mov inc insb dec sub mov sbb xchg ss lea movsb xchg and dec sbb in dec stc rcrl cmp and ret imul pop (bad) dec in rorb idivl jo or add add mov hlt sub dec pop mov into call icebp sbb adc and or pop xor jns mov scas dec mov fcmovb dec xchg pop test sbb ljmp fldlg2 add imul jb add inc test outsl push ja xchg test or mov or aam ret push mov aad xchg or lret in jnp jns scas in arpl cmp popf div pop fdivr dec jb or pop call in enter mov jecxz cwtl (bad) mov xor cld xor push push lods inc dec leave test daa leave ror xor inc daa pop mov sub pop rorb sbbl xchg cs movsb int into sub or and push (bad) push icebp dec and cmpsl emms jb clc fcoml xchg aad rcr jno jecxz insl inc mov inc lcall inc add jb jo mov imull loop out repz iret inc cmpsb sbb mov sahf loopne ja fidivl dec lret pop push fwait sti cwtl mov cmpsl mov shrd rcll dec iret lods pop fwait mov shrl pop push mov jo adcb dec push repz mov in negl repz and int3 adc push and inc xor inc xor push push mov lcall ja jp (bad) fisttp call sbb call push jg,pn out mov cmp add pop add push mov adc pop mov outsl ror jl mov fidivl dec fs pop cld sub add fisttpl xchg or in and rcl adc sbb push add dec lock mov add negl xor cmp sub adc inc and pop (bad) stc pop and outsl arpl movsl sbbb adc push sbb mov fcoms mov dec (bad) or sub rcl mov mov jo dec inc arpl xchg adc cwtl inc lods aam fbstp jg mov rolb push push push mov outsl outsb dec repnz fnstsw cmp shll lock cmc enter shrb push (bad) lock xchg and (bad) jnp pop (bad) adc add or loop cli das dec sbb pop imul push push mov lods mov xlat mov jl pop orb rol or mov les mov pop jns negb mov fdivs lcall sub xorb scas and sub clc and out xchg cmpb ja inc inc xchg (bad) loopne repnz dec mov in xchg or or adc fbstp sti pop out adc mov (bad) fsubr add mov xchg gs popa mov push clc enter mov ret jo or into cli ret outsl outsl cmc aam enter and daa push cld push cmp cmc mov rcrl push mov inc aas pop mov loopew bsr mov mov inc movsb jae dec adc cltd inc cld pop mov test and fnstenv xchg dec mov xor sbb std out mov add cli mov cltd add xor or push jg shlb xchg dec add jp dec sbb jp les xor sbb sbb in dec adc ret push pop xor scas jbe out fld popa add scas out fdiv sub cli inc mov push call lahf cmpsb mov push lods popa add out sbb cmp (bad) mov push into lds push flds test pop mov adc ficom or xchg andl faddl fldl popa sbb repnz xchg add (bad) pop bound pop jle jg sbb loop push insl xor sub call xor sub jbe popa mov xor vaddpd mov das dec cmp mov mov scas pusha fistpl cmpsl icebp arpl cwtl (bad) daa pop add das test popf mov add push loopne nop or std lahf ds std pop jg ljmp lds push xor loop (bad) out cs push cmp jmp xchg mov inc incb xchg movsb scas mov insb push xchg into insl sub imull mov jl (bad) cmp push mov nop in add fs (bad) sub xor pop jp push xchg mov xchg jle push xchg out pop or mov pop shrb iret ss gs in pop fstpt xchg (bad) (bad) jg add pop mov xor push int3 xchg test (bad) pop or es sbb mov inc lahf inc shrl mov adc packuswb inc xchg mov mov and mov add fwait inc cmp arpl sbb pop xor shrl jb js pushl fist bound xchg pop jg cld xchg fwait inc cmp lcall adc add out cs addr16 in push sahf sub dec adcl arpl xorb pop movsl js fs jae sbb sub jl cmp fstps push mov sbb cmp in int3 dec adc loopne cltd in push lods fcmovb incb inc shl (bad) in dec pop xchg push loopne mov mov imul dec insl mov push lahf xchg lcall mov clc push mov push cmp dec bound fsubrs aad je push dec push and push sbb pop popf xorl add jp mov jbe or mov inc rcrl xor pop aad bnd cmp adc dec pop imull mov sbbl pushf cltd push icebp mov sub and out pushfw mov popa lret fbstp push fcomps push mov je pop xor xchg jg push lea jg xchg inc pusha or std adc sub jmp jmp lret jno cwtl pop cltd xchg icebp xlat jo pop jmp mov movsb mov jo dec xchg inc insl fwait push test push inc mov (bad) push insb jp or push popf sub outsl xor ret cmp int imul mov push ja xchg addr16 pop into imulb movsl out mov aad mov add aad psrad or (bad) and icebp jno outsb movsl imul mov and pop mov lahf pop mov dec push push sub scas xchg cwtl fsubs aam test or or mov inc xor sti xor repnz xchg push or cwtl scas sub shr int lock inc push movsb sbb loopne call movsb bound push js pop out jge sbbl dec cli das clc mov or add (bad) clc std pushf test xor insb pop adc mov in mov sub movsl jl incl xor mov inc inc push es test and mov pop scas jle or and sbb push (bad) sub adc cmp xchg push cmp popf lods repnz cmp push xor iret xchg ljmp fiadd mov enter pop (bad) lock push mov imul fcmovnbe add sahf inc stos mov jno sub lds popf (bad) cmp loopne pop push mov mov inc inc pushf adcl test out inc pushf push cltd sbb ds sub lcall push jne pop jle push pop cmp aad sub les mov aad scas push sub fs mov outsl push push xchg adc out sbb or jb jae jo adc leave and mov in dec inc into mov loop push xor lods inc adc sub ds mov inc fwait mov out jae ja in nop leave ljmp int3 dec rorl mov pushf cmp fldl jmp add mov pop lcall js or xchg data16 xor ljmp pop rclb inc xor xchg pop cmp mov mov es dec sarl or lahf xchg mov pushf outsl inc mov pop xor fwait push pop in fnstenv (bad) mov outsb faddl insl arpl hlt test pusha pop lcall int sahf xchg pop jbe (bad) mov bsf xor (bad) in jb dec cwtl pop push add mov lods adc lds pop inc mov xchg daa dec mov or mov lcall push leave xlat das mov mov insb es push dec dec xchg (bad) mov dec xor lret add jo add pop inc adc sub popa and mov gs adc push (bad) sub pop leave leave add sti dec bnd imul mov ss push xchg cli pop rolb lods inc xor mov stc or mov nop faddl inc or push outsb dec dec add (bad) orl aaa ret jg xchg aas cmc out sbb std or das gs movsb aas push icebp sbb dec (bad) fisubr movsb leave xchg icebp fwait jne call mov mov and or mov adc into fistpl frstor test mov mov pushf dec mov popa sbb test jnp and repnz jbe dec cmp jae xchg enter fldt popa fs mov div fidiv inc arpl clc (bad) pop ret and or gs adc (bad) lret mov mov roll push cs jecxz lcall pop lret iret pop jbe pushf xor or repnz dec xor fdivrp inc aam scas jle pop dec mov popf ja or sahf pusha lods loop outsb and repz pop stos sbb xchg adc loope lcall (bad) cmp popa dec inc lcall call (bad) ljmp xchg addr16 xchg push out fisttpll ss pop ja sbb and mov call mov cli jns xchg or std outsl ror jge sbb lock add loopne aas push aaa adcb test pop pop mov or dec pop mov jmp or pop push and (bad) mov and lcall and jmp loopne mov clc test in shll add pop xchg push sbb push es test and cmp fistpl mov xchg mov xorl addr16 jne insb inc dec bound mov movsb neg sbb mov outsl adc push lock ja (bad) mov rclb sarb xor sub jne decl mov popf cmp mov lods mov or adc cmp add fidivrl js clc pop test les pop idiv hlt ss jecxz push mov and push lods test popl (bad) pop insb sub lret pop pop jp loop dec sub popa pop jno lcall or jns mov (bad) stos ljmp ds jge pop add push mov (bad) xchg and fstpt sbb jbe loopne (bad) mov incb mov adc mov dec (bad) sub lcall lods xor aam jnp and stos ja lods inc repz pop cltd stos add pop popw add sti sub mov inc repz aaa sahf push add dec adc inc mov push lret aas push jb push lahf loope mov push add cmc es repz pop add adcl sub mov fmulp xor push inc clc inc sahf pop fwait sahf sahf xchg insl call inc mov aas loopne cmc mov lea sub minps enter out outsl dec dec in jg pop xchg mov aad out repnz out into (bad) jle add jne movsb nop sbb push mov dec cmp xor js pop ret imul mov xchg lahf stos jo dec xor xchg loope or (bad) pop mov adc jo ljmp lock hlt mov rorl sbb xor insl cmp dec mov out mov jmp cmp cmpsl push cmpsb lret (bad) mov pop ljmp cwtl push loope sarl xchg pop (bad) iret shr fldt mov leave je es sbb mov lret xorl add jmp in sub sub mov jae loopne clc xchg sbb mov pop ficom rcrb out (bad) jne add inc cmp (bad) pop movsl in cli shrl push sub and and xor int3 sub cmc and pop and lret cmpsl cli push add xor mov adc sar js rclb push mov pop ss sub adc adcl cs inc xorb cmp ja aaa mov sub xchg cs and addl fidivrl cmp daa push out (bad) in jae inc adc mov cmp jmp pop push std mov movsb dec push push test mov push data16 fistpl jle data16 je pop arpl dec add xor lds scas enter pop cmp out jae sbb and rorb fcmovne pop (bad) mov test and sti push dec mov dec test sub push push and ds cmp in xchg nop inc lcall pop iret in pusha push ficoml dec fcompl pop into call pop pop mov push lahf push fimul inc in sbb sub ret or and pop mov rcll lcall pushf outsl cmc aas (bad) xlat inc sarl stos jmp or sbb add cmp enter out mov movsl sbb icebp gs jbe movsb mov pop scas and out sbb sbb sbb adc pusha shll sti xor shl aas js sbb adc cmp and mov pop adc dec movsb outsb in ret push mov and pop call add mov out dec sarb add incb leave mov pop mov push shrb adc std mov (bad) adc aam jb,pn sbb sbb call cld imul or les and jae mov cmpsl test dec nop jo xchg sbb aad mov mov dec fcmovnbe push sarb das icebp orb idiv addl scas push cwtl in cmp mov mov rcrl inc pop pop and push aas arpl (bad) push sti in sub push inc int3 loope nop loop push scas insb mov pop in lock add mov dec out aas out and jge lods push push adc xchg das sbb jo cmpsl mov in in fwait das sbb mov jmp enter mov pop or jns lods mov lea out idivb nop loop cmp sbb test or mov or fimull loopne call mov push cwtl xor icebp aas dec add bnd pop imul in out add mov fidivl push mov cs pusha jle (bad) or mov ficom imul jl or adc ljmp js mov mov inc dec adc bound jmp je mov clc pop aas fnstenv decl loop out test dec mov outsl mov push lret push call xchg cmp addl sub inc mov (bad) mov jnp pusha lret xor sbb mov jl add mov push xor xlat push sbb push daa mov scas add fwait adc (bad) (bad) movsl repnz adc (bad) in dec sbb adc sbb lods ret xlat pop dec movsb and cmp cmp movsb adc push add ficom sub sbb jl jl sti pop cltd or js mov fsub adc fisttpll stos scas xchg cmp rorb (bad) addr16 xchg das mov push xor outsb adc cmovge sbb test push leave push push add dec cmp cmpsb sti ja movsl in fcompl xlat xchg adc jg push cli jne es xchg xor mov imul pushf aad inc push push aam movsb mov lock push pop sbb lahf push mov adcl fs push lods sbb push in repnz movsb sarb dec push rcl xor xchg sub sbb clc mov xchg (bad) sbb (bad) push test lahf mov push xlat vmread inc shll and dec cmc cmp lods cmpsb (bad) cmpsl dec dec ficompl push cmpb dec mov (bad) (bad) xor rcrb fnstcw push jmp mov int3 subps xchg pop repnz rcrl ljmp adc sbb jmp xchg mov xchg fwait add aaa add cld pusha hlt (bad) lcall or dec repnz lahf mov cmc cmp add popa xchg or and fs addl insb jg popf inc push jb test jle and or (bad) xlat sub ret fs jo mov (bad) dec mov mov je jnp cs out arpl jl fldt ficomp sub cmp stc add mov and mov xchg nop and insb mov fimull shrb cli sub sbb mov add dec int3 in dec inc xchg jae gs mov sbb mov fadds sbb call rcrl nop ret pop cli dec mov mov test (bad) mov add cwtl out (bad) lcall insb popa aad jo push loopne add xchg rcrb inc out cmpsb or jns push sub inc loopne pop cld jno pushf int3 ljmp jo push movsl mov push jne cwtl in push cmp dec leave jp inc mov fildll insb mov fbstp cli cli ficomp xchg test jnp mov dec pop inc out (bad) mov mov ficom outsl sbb cs cltd and or mov push mov cmpsb cli stos repnz (bad) cwtl sbb dec and cld insb fnsave xchg testb movsb sahf div pop enter push mov mov mov add aam inc push pushf jbe mov fmul inc cmp inc pusha out adc and sub mov ret mov xchg (bad) jle mov (bad) mov (bad) push push mov test push xor jl popf movsb xchg mov xchg (bad) insl or push inc aad mov or hlt imul jne push xchg xor mov hlt fs and mov mov hlt xchg xchg or sbb leave mov addr16 pop jecxz push inc sahf loopne xor loope gs fbld dec inc aad fsubp cs into mov inc sub mov or cmp mov iret xor lahf mov push out jle mov sbb enter mov int inc out aaa in xor mov xor xchg sbb imul pop lea shl out bound aad dec imull add cmovp in (bad) (bad) out out popf lock pop imul loopne xor mov dec lret jo mov jno add repnz cmp cmpsl pop inc (bad) insl push mov push lahf scas and cli push xchg lea or xchg fnstcw or inc insl sbb push inc (bad) in inc movsb cmp inc add (bad) inc and addr16 or out pop and or sbb mov pop pop push mov fdivs pop xchg ljmp xor adc jmp pop test mov xlat sub dec mov sbb into mov mov xchg andl add clc jmp setnp ror stc xchg pop in mov mov sub iret or push les or stos mov divl mov hlt xchg sbb mov (bad) mov mov push insl (bad) cmp outsl mov aad push iret pusha and int3 jb test cltd mov mov dec sahf push (bad) out clc pop dec inc push mov fucomp sar movsb in sbb and out jbe xchg add (bad) lds aaa repz in test cmp pop add addb ja cmp jns mov push dec sbb sbb jmp (bad) mulb dec loopne dec push test test xchg xchg ss add mov fisttp add fsubp pop mov arpl aad mov (bad) mov xchg fisttpl mov and cmp mov rorb xor sbb (bad) icebp hlt test mov (bad) mov xor cmp cmp pop stos fnstcw jg dec mov pop mov ficom xchg test lcall repz xchg xchg aad sbb scas insl jb sbb jmp sbb jno in and rep mov leave pop out imul (bad) (bad) xchg jo jmp push xor xchg push pop enter cmp jle and fstpt inc jno xchg scas or fsubl inc adc fsts pop mov std cmpsl mov jge mov scas clc scas push push (bad) sub lds andl or scas cmpsb inc sarl or dec jo or movsl test lret insl xchg pop pop insb push pushl adc mov xor push fsubrs mov outsb adc cmp add sbb add jns xlat aam pushf jecxz xchg mov push mov push jne lret or insl rclb mov fistpl pop inc repz pop loop lea xor hlt dec inc pushf js jb cltd repz inc loop arpl cwtl dec jmp nop mov cmp mov dec adc (bad) stos dec sub cmp out inc insb inc pop mov and mov jne in xchg mov jno push inc sbb rolb xor pop outsl pop sbb or ljmp scas and xlat insl lock inc mov mov xor loope lahf jg data16 push mov mov outsb xor adc into inc xorl xchg cmp fwait sub pop int fsubp pop inc into xchg add xchg or pop push jecxz mov inc dec leave hlt adc test adc nop fimul mov fistpll test ja or inc in js rcrb ss mov jle ret xor jnp test push hlt jmp jecxz lds add stc addr16 cs lods aad outsb mov lods push mov mov lock mov scas push jae movsl sbb mov lods sbb add pop loopne adc adc scas and aas imul push mov (bad) and inc fstpl fnstcw push out push ret sbb jg mov loope or (bad) sub xlat sbb mov dec inc (bad) lret insl cmp sbb and clc fdivrs and mov mov adc pop xor outsb roll sub mov imul sbbb jg and dec (bad) fstpl fidivl sub mov pop mov xor jg mov fstl dec sub hlt xchg cli sar test lcall jno xlat mov jno and stos inc daa pop repnz lahf dec lods fsub mov nop cli pushf ljmp and std mov (bad) xchg mov pop mov xchg out iret xchg cmp in leave mov xchg mov cli in mov cmp mov int3 popa daa pusha fidiv adc movsl adc adc cmp in mov inc xchg cmp lret sub clc push iret add ficoml push dec (bad) xor dec es jbe and ds hlt mov mov ss sbb fild mov add and mov mov nop adc rcl xchg int test xor and js sub and pop pushf add xlat jg push mov ficom test pusha icebp or jg xlat loop loopne jecxz and mov and dec adc cmc (bad) jns dec movsl je ljmp stc hlt out (bad) cmp rcrl hlt movb and dec std (bad) aaa imull daa xchg cmc pop lcall nop cmpsl dec or dec idivb js adcb cld test inc inc add (bad) into dec jne mov inc pop and addl push int3 (bad) pop and mov mov mov xor lods push ljmp mov cmp cmp repz insl xchg push gs pop les pop push dec or js dec nop (bad) jge sbb xorl stos add mov ror pop outsl and cld push jmp fcoms xor jae enter fstpl aam mov cmc test pop sub cmc in (bad) fidivrl dec mov cwtl sbb std mov push dec or sub (bad) (bad) scas inc add inc sbb xchg dec push jg mov and pop cld xor dec pop cmp cltd dec and sbb sahf in iret (bad) xchg outsl rcrl inc and mov pop movb insb and fs mov int3 bswap jmp xchg out cmp push mov std cmpsl scas std sti add std nop push hlt fcmovnu pop jb xchg das out xor js hlt dec call lret mov push dec add mov cltd mov fnsave mov jns mov popa mov pop aaa stc dec (bad) loopne xchg push push js fidivr ss sti sbb inc dec adc sub pop sub mov imul mov push jecxz mov dec rcl imul mov repz ds stc or cmp cmp xchg sbb cli sub mov jo insl into test repnz into or imul push aaa mov int pcmpeqw pusha xor xlat jle imul push jo pop dec push mov mov jge jmp adc push sbb mov pop mov fsubl dec mov js push imul add movsl out push sbb mov push dec mov addr16 push bound inc (bad) pop pop dec sbb fsts repnz sub in pushf (bad) mul mov ffree lret andl sahf bound rcl or mov add xchg testl mov or (bad) mov ljmp fistl test icebp incl cld es imul loop xchg xchg add lret dec adc gs mov mov inc mov or stc fnstcw enter mov icebp mov push lret cmp ret lret (bad) fnstcw fbstp fsubrs inc add xchg cld jp xor mov (bad) insl jne cltd sbb scas fist dec mov mov or ljmp add mov mov xor (bad) (bad) cs hlt cmp (bad) imull dec mov mov ret xchg add stos mov mov jecxz adc (bad) mov pop dec fsubl addr16 and mov insl push cmpsl iret icebp notb or rol addr16 out ljmp push sbb xchg inc out jmp test jns mov pop push dec mov enter xchg not int pop lods mov cmpsb sbb jle (bad) (bad) xor and jo outsl jnp mov cli insb jg clc les jo dec nop scas dec mov mov cbtw insl cmp mov dec jecxz cmp mov out (bad) dec adc inc mov (bad) decl adc xor inc dec sbb popf js out mov cmpsb (bad) adc adc sub xchg stos addr16 dec jnp insl aaa and enter add adc scas cmc push imull sbb test and xchg pusha mov jmp jne mov cmc repz sub xor loopne pop push jns jmp int3 testl sbb pop inc sbb (bad) in in dec cwtl xchg stos clc test jmp pushf cmp ficomp dec popa (bad) mulb stos jb lcall sub jne or testb push in jmp (bad) cmpsb pop mov and mov aad sub ror pop adc aad es mov mov xchg xchg cmpb lea pop ss jbe,pn jae ret orl mov adc or sub mov jle sahf push dec sti outsb loope fistpl mov mov mov sti es and lret inc leave and push in xchg fs movsb das xor push popf psubusw iret pop notb mov xor add js and pop and sbb stos sti adc fwait ret int inc pop dec pop fwait inc loopne inc scas add sub jae pop cmp mov sbb sbb (bad) dec or inc push xlat xor repnz repz xchg test mov movsb into push stc fcompl out mov mov nop into fidiv movsl push incb lcall lahf sbb xchg add (bad) pushf or mov push popa iret mov scas mov in movsb jmp adc dec lahf mov stos and or dec jmp pop xlat in sbb ror daa pop into lock pop dec xchg mov dec cmp mov orl add packsswb pushw lods xor mov cld xchg or insb adc sbb jnp lret sbb adc loopne imull (bad) lds scas pop aam movsl idivb imul pop stos and (bad) aaa call cmp xor dec rcll push xor mov push jno cmp in mov ds dec push imul dec pop push test add dec and imul (bad) xor jb inc lds mov jmp mov int3 pop or stc fadds mov mov sbb jne addl cmp sbb (bad) aam or inc out hlt push mov and pop test (bad) into in mov mov mov pop nop ret mov fs push jmp sbb in pop mov xor push add in cmp jge fstpt cmp cli icebp fisttpll jns lods jb cwtl jg mov cli into fsubr sub int3 push xor sbb js xchg sub mov aam mov push mov jp lret cmovl mov rorb mov jae fstpl or fcmovne das out aam std xor js sar xor dec inc imulb ds aaa icebp xchg jo in cmpsb sti repz out adc add cmp loope push rclb test pop jnp dec movsl in sub nop out gs or and xor (bad) scas or mov pop into shrl add xchg or and mov test cmp mov dec adc and add mov cld rorl outsl movsl adc jbe icebp add test in jmp xchg out pop outsl cwtl push xlat std divl jne outsl mov sub xor sahf adc xor incl rcr leave out sub roll add repnz out and pop adc mov fldenv mov imul nop cmp push inc and xchg xchg or cmp jle gs out sub cmp lret bound ret xor dec aaa loope add in jo jl mov and jns xchg add (bad) (bad) cld popf dec inc pushf repnz sub das mov xor pushf sub out test mov shl cmp mov pop aam xchg aaa mov (bad) pop stos xchg icebp sbb lahf push xchg loope mov out push stos sahf lret dec pop push aad int3 cli sbb or add jnp mov in ljmp movsl rcll push stos xorb adc lods mov pop out test stos cmpb xchg ss mov add mov and cmp cmp test push and cmp inc xchg xor fsts cwtl (bad) addl or mov adc es rcrl sub jmp divl or mov add adc cmpsl mov imul lods mov adc push xor and add cli js adc aam pushf pushf mov fcmovbe lret gs inc jae cmp push and inc loopne in jnp sub fsin pop mov (bad) in (bad) push gs push test dec xor mov jne pop adc arpl mov or add addb xchg sbb ljmp and (bad) push rorl out stc dec and loope mov mov mov push fsubl jno mov or or outsl xorl mov orb and xchg aam mov sbb pusha (bad) pop pop push xor xchg cmp push xchg and inc notl sub mov insl sarb jnp sbb dec push repz clc movb mov adcb sub inc pushf cmp int3 in loopne imul jmp mov push mov xchg push adc sbb push outsb pop clc ret (bad) rorb mov ss add in pop and pop push out mov ds out in mov cld out js xor adc pop ficomp test push xor add sub pop pusha lahf aam and (bad) lds cmpsb cmp xor add xor push gs and xor subb inc sub sub cmp popa push lar cmpsb outsl in rcll and fiadd out jns xchg insl fsubl jo cmc stos (bad) idivb stos cltd ret cld int sub cmpsl sub out aaa adc add (bad) pop sbb hlt daa jbe jns xor cmc arpl pop imul adc and sbb arpl fidivr enter or xlat sbb iret sarl push dec jl adc xchg jecxz add sub or xchg xor cmp (bad) push sbb aas mov pop mov push push shrl cmpsl pop jne sti (bad) loope es jno mov repz jp push xchg dec xchg dec test aaa or jmp addb push cmpsb push fsubr pop aad mov scas xor call xchg (bad) and xor mov xor fsts jge jle dec add in mov mov mov scas mov mov aaa stos enter pop xchg das pop push not int3 icebp xchg add pop jns mov (bad) imul push push stos push sarb aas sar rcrb rcl inc adc (bad) adc mov adc int xchg adc xchg mov mov inc enter push jne xchg and mov mov addr16 mov cmpsb leave fistp cli fs sub fistp fldenv push rorb pop mov scas stc inc or pop lods mov rorb mov gs (bad) xchg dec fsubl xchg adc test mov lret fwait jecxz cltd dec sarb add push mov enter movsb mov xor fsub stos in mov (bad) adc shll pop mov xchg sar in cs or lock stos adc cmpsl ja push scas mov cmpsb mov aaa fmull in test lock pop add inc stos aam and fcmovnu mov lods sbb jnp arpl mov fstp cmp ja movsb int3 call inc les cli dec add clc inc mov addr16 sub xorl cmpsb push inc or mov mov pop sub push mov adc js js lahf jae mov in ds mov std lods pop out mov fildl adc xchg std movsl add in mov add movsb outsb push jecxz fsubrl rcrb aad in pushf lods shlb sub mov cmc leave imul dec test adcb jmp add xchg dec daa jp xchg xchg pop (bad) and xchg das fwait (bad) cmp sub pop lea subl dec stc sahf cltd imul faddl xor inc out movsb xchg stos flds ljmp insb sti ss iret sbb push mov adc pop test loop outsl cmp in and mov add repnz jl fstps dec jg int3 mov sbb (bad) cmp push push push sbb or xor cmp cmpsb jo lods mov sti inc lcall jp mov dec sbb add sahf aas icebp inc xor dec lcall xchg pop daa xor popa aas int3 popl bound out jnp data16 lods test adc xchg in jno inc cmpsl pop ret pop dec ret (bad) xchg xchg ss fwait stos movsb (bad) mov fsubrs xchg icebp imulb mov int cmp dec pop in les (bad) call int3 adc lods mov mov mov addr16 mov shrb mov repz leave in adc mov imulb shrl mov mov xor jecxz enter fwait dec into xor int gs or inc ljmp dec clc inc and mov push les mov stos pusha stos xchg mov cwtl add pop out sahf add bound mov movsb clc xchg sbb mov cmc enter sub or scas insb mov rorb xlat (bad) jmp rolb fwait cmpsl and xor push xchg sub and or (bad) test inc cmp mov aad movsb lret ret lock ljmp js or cmpsl sub xor sbb sbb mov inc inc adc jbe (bad) mov stos mov xor xchg (bad) xor mov adc jl add out int jno sahf andl sub sarb xchg imul or (bad) sarl rcr push pop (bad) jp lret jo mov push pop adc pop cwtl in cmp xor cmp push (bad) xor or push rcrl mov lahf popf ss daa mov repz fidivl (bad) sbb insl dec shlb out sub dec fisttp aas xor dec ret int pop stos (bad) movsl pushf cld push add fcomps testl jmp push add in data16 dec mov sbb mov mov xor jecxz je,pn push iret stos dec and mov in or sbb cmovp mov loop inc mov sub xor (bad) aam pop call gs aas mov xlat nop sbb in in mov cmp imul and sahf lret jmp nop cmc xlat push test stc and lret pusha sbb repz sar sbb or jecxz leave xchg pop test ds add pusha dec cli insl cmp (bad) mov cmp inc cmp or sti arpl (bad) pause sahf xchg js dec xor cld xor insb xchg daa and jb mov cwtl and rolb jno mov ds (bad) fmull cmpsb and imul lahf es negb int or cmpl xchg jmp mov jmp push out imul sti (bad) push nop imul mov dec mov gs jmp push jl es push xor in roll push jb ss add loopnew and in rcr push add lret imul lahf addl add and lret cli repz lods in sbb dec jl out repz jns push fildl adc jge adc dec arpl inc and in hlt sub cld outsl out fsubp xchg sbb int3 addr16 aas jp inc adc mov pop fs faddl mov mov pop push cmpsl in mov mov sub negb add adc sahf ss sub dec je pop xchg xor mov loopne mulb sbb jg mov loopne cmp lret repnz loop and push cmpsl mov (bad) cwtl rcr inc popa cli jae mov and sub (bad) insb insl ljmp daa hlt and adc pusha movl cmp add ds dec aam pop (bad) pop sbb and dec add test mov push jg jge push mov cmp hlt jnp add add and lret inc add cmc gs pop bound inc dec les aaa lods add js pop mov jecxz mov adc ret call decl idiv mov loope xchg sub lret adc fsts imul (bad) ficom std adc sub test fnsave data16 fwait or shrb pushw (bad) (bad) repz loopne inc notl lock shrl shll pop popf xor in in dec dec mov inc lret and inc (bad) popl into pop push data16 jle outsb imul sti out cmpsb jo add data16 int jb fdivrs xchg cmp test mov aad mov test sbb rolb push mov test rorl pop les (bad) insl in xorl (bad) int movsl pushf aaa mov (bad) push sti (bad) js jo leave das sub or cmp aaa add out lahf fs rcrb xor insb pop movsl icebp icebp adc pop (bad) jnp jno dec adc cmp inc psubq not nop test pop ret push int3 mov dec or push jmp xchg daa in dec inc mov sbb movsl pushl fisubl scas sub arpl js inc push add in xchg cmp dec cmp cwtl or fisttpll test sub imul pusha add mov insb ss fcoml jmp pop fnstsw or xchg bound sarl add aam icebp aad loop dec fcompl jle fucomi cmp popa insl xor mov add add push xor adc sbb fildll add push insl fldenv dec lahf imul call xor addr16 pop iret out ret dec inc clc sub pop rclb cwtl dec psrlq add jb in inc pop cmp pop pushf and or fild sbb sbb ret or test jb (bad) mov int add add test adc lcall xor mov or jbe sahf loopne (bad) (bad) movsl pop sahf xchg pushf xor and daa mov lret sub inc ja (bad) and mov jg mov mov adc add fdivs jne out sti or adc flds ret fimul sbb push dec insb sub jge adc stc aam jbe push or cmpsl mov std adc rorb dec aam cmpsl mov jae mov pop pop xlat loope mov movsb jmp test stos sbb lret pop xor icebp jae pop xchg add fistp cmp pop xor push adc aas repnz push cmp add adc (bad) sbb (bad) xchg or std or lret clc mov insb mulb push jno (bad) mov xor cmc cld pop test xchg cmp cld sbb in (bad) hlt fadds imul ds mov cmpsb dec mov or out dec xor jo xor cmp pop cmp loop sub out (bad) push mov sbb adc xor ret movsl aaa jo pop aam frstor shrb jne pop pop jg stos sub lea fistpl aas jg (bad) nop dec cmp lock cmc mov or adc enter sub out stos (bad) popf cli and push in xchg inc jnp xchg fs outsl or cld adc dec and fwait or aad fnstsw in daa addr16 cmp fisubr pop pop test stos xchg or inc lds and test push out mov inc pop jmp sub in sub (bad) jne mov xor and test arpl cld or mov aam out incl insb lahf sbb std lahf jl fwait xchg fld mov push loop push dec adcb iret mov mov ljmp movsb jl mov jo in cmp mov dec cmpsl ss and sahf push ja mov pop push pop or push roll aad cld add xchg or sub out push fxch lods or inc (bad) push shll mov adc add adc jle test popa repnz insb test (bad) ss loope iret inc mov enter dec xor push inc xchg loop (bad) loop xchg mov push dec mov cmp jns sti push push and mov rcr jg sbb push dec mov shlb fstps mov aaa cwtl xchg in insb jns neg pop insl jo dec pop call and pop jo xchg mov mov mov add icebp cmpsb stc push push sti xor outsb ficoml je lea pushf hlt xchg pop cmpsl xchg push ds inc xchg and adc push sbb rol mov popf fisubl ret mov out je xchg (bad) mov es cmp enter sbb pushf adc jg cmp jno loopne out jbe push push aaa lret dec xorl rcrl call cs push adc sbb lahf icebp in outsl das push lods pop out jne xlat dec jge dec movsb stc leave adc mov pavgw jnp movsb mov and jl loope addr16 dec int xchg jp inc imul insb fldl ret stc xlat dec std test out out test mov je push jge movsl xlat and aaa gs lcall or aam xchg lods sbb pushf xor mov dec movsb cmp dec cmp jle fbstp xchg repnz mov mov push jmp jp adc push or lret sbb insb mov jns add mov jbe fninit iret inc xchg aad out (bad) cld ret js mov mov (bad) cld (bad) imul push dec cwtl lret movsl add jno sbb bound lods or mov into xchg lods leave ror xchg sar jmp sbb mov xchg add and sti out sahf mov pop out mov cld xchg cltd push into nop iret xlat jne xlat mov xchg pusha mov and xchg xor lock mov inc inc pop push push xchg jns cmpsl sbb lcall popf pop mov mov xchg iret lcall (bad) inc daa mov xor cmp ljmp inc gs in xchg sbb xchg nop mov fnstsw cld pop fldt scas xlat pop repnz jmp std sbb aas sub add cmpsb test jb xrelease mov jmp jmp mov sub inc stos jle or movsb and push cmpsl fcompl xor fdiv sub scas sahf in enter dec xor movb enter (bad) xchg xchg into jbe mov sub mov dec movsb and ss sub sbb and or or stos jbe (bad) or push dec pop and int3 jp fdivl jno out (bad) mov sahf sahf jle aam mov xor cwtl out ret jo adc stc int3 iret insl inc test jnp push inc (bad) imul jl (bad) push lea inc xor cmp inc dec jne shl js xor pop xchg jge mov repnz mulb push sub data16 adc gs lea dec imul and dec cwtl pop or mov std mov out jecxz gs sub jne mov inc fiaddl jns insb aas je sbb out inc sahf pop or xor add cmpsl cmp or test mov mov adc sbb mov mov and and mov mov xchg pop adc fs bound shr cmp sub or ss std std inc sub rolb push popa or ret mov fwait mov mov mov cmc push js nop cmp inc les push addr16 jmp mov arpl aam xchg nop (bad) jno je xor aas adc aaa jmp into mov loop ss add jg dec mov ret xchg push ds adc sahf jp push dec scas enter movsl cwtl xchg ret push pop push mov out out loop ljmp mov push fdivrp adc xor mov movsl daa pop dec std gs lock xor push dec pop jle dec cltd gs popa xor (bad) mov mov lods into test rcl or ss push adc in and (bad) mov push out daa inc (bad) push mov scas mov xchg jne in lea xor mov shl lret push test stos xchg push push test mov movsl popa (bad) ja cltd pop inc sub adc shrl inc stos xor clc inc rcrb or hlt into call push xchg std cli icebp daa xor push iret (bad) push xor ds add add jns iret iret cmp clc popa jbe stos inc scas mov sbb jne cmp push inc jge sub enter mov sbb xchg lcall aas cmpsb int3 iret push ss imull cmp and ret jno cmp jmp outsb mov xchg ss out pop xchg std or pop leave sbb scas push cmp lods rolb pop xlat bound mov cli nop call cmp sbb xchg scas iret cmpsb xor mov jne xor ja sbb ljmp out movsb lods scas jg dec add (bad) (bad) jecxz fnop mov push dec and ret pop or mov lods scas mov push xchg fisub adc ror mov mov fnstcw jo cltd push movsl movb cmpsl sbb jecxz call xor adc xlat mov nop inc movsl jge inc lret sbb mov (bad) jbe decl and lock popa or cmpsl and test mov fwait mov push add mov mov cmp jl or outsl mov enter cmp xchg pop dec xchg push ds ds and mov cmp negb lods pop mov imul das adc adc bound lea push call loopne mov sub insl gs outsb pop aaa repnz std inc and or lock aam mov mov pop adcl leave push lds xchg inc ss jle int mov xchg lret push cli bound xor mov xchg popf xor inc push pop mov adc jb negb push sub fsubrl add or (bad) jnp mov js push scas mov int3 and or stc in (bad) cmpsl out mov enter in mov inc jmp js shlb (bad) pop insl loopne repz fild adc vpmaxub mov cmp push add jp fnstcw mov xchg aaa sbb xor fnstenv inc jo repz inc mov or pop adc push mov ss pop cmpsb mov pop aas or aam sbb inc mov fnsave imul push cmp es test cmpsb xor cltd xchg js roll (bad) fwait cmc scas (bad) aam add fnsave inc xchg (bad) imul fisubl loopne,pn push (bad) outsl fnsave ret scas pop cld fisubr cmp inc mov mov out movsl orl mov scas icebp sub movsl push imul ds rclb dec cltd sbb mov leave hlt out repz ds and xor pop mov movsb mov xor outsl sub xor fisubrl xor pusha xchg test sub (bad) mov inc fcom jecxz xchg lret sbb push inc inc sbb movsb jle jne fisubrl or push notl inc jnp lods sub jmp mov lods loop push or test dec mov or mov push fstpl push sub dec pop add xchg (bad) pop fld pop push in and fstpt lret jge hlt xchg leave or inc out call dec popa pusha arpl roll ret mov mov push jmp ret push ljmp (bad) xchg shll arpl adc sbb aas jmp fwait jb xor sahf std iret or aas xchg insb bound rcr mov in faddl dec test popf ret orl xor adc push icebp das push push inc aaa add das mov out xchg and movsb cmp mov sarb (bad) jne add stc rolb xchg add xchg (bad) pop (bad) ljmp daa jmp movsl pusha jmp and insb jo mov int or outsl inc mov lods repnz xchg mov xchg or lret leave dec jle xor mov test js pusha sub cmp and sub sub dec test bound (bad) or push scas jo push test sbb push call (bad) pushf (bad) lods sbb les jne vmaxps test rolb sarb xchg jnp xor pop ret movsb and into cmc loop aad sub and cmp and push mov push icebp ja xor jp lret mov pop jae fildl jmp dec test shl mov lea inc sub fcomps jg out adc push sub lcall test xor (bad) aam mov (bad) out je sub rep lods push cmpl push es dec movsb movsl adc xor and dec in lods and mov scas std pop les sub lea mov xchg jecxz sbb sbb imul lock dec mov pop cmp sub mov fwait or pop and or and outsl cwtl shl mov xchg add pop cmpsb sbb pop pushf (bad) cmp jno xchg push pop fstpt lods and stos pop and or (bad) mov fwait mov dec jbe mov push add sub in in fisttp rorl test pop cld das mov lret adc ficomp (bad) clc nop inc mov push jbe cmp xchg cmp pop das mov pop mov aaa adc and sbb (bad) arpl adc pop or or enter xchg jo cmc mov (bad) jp jg into (bad) imul pop push int in insl cmp cmp sub pusha (bad) push sub cmp movsb inc (bad) xchg cmp adc mov addr16 xchg test push mov or mov or push or xor sbb ja std ljmp clc mov test push je ljmp and ret bswap jmp call push js shlb cli aaa imul and lcall insl xchg cmp je mov pop out lods cmp notb xchg mov cli push (bad) lea insl inc sub add mov xor (bad) jae nop add aaa and sbb xor push inc xchg add push cmpl mov jge or xor pop insl roll jnp notl cmp dec mov dec adc cmp mov pop pop push jp cwtl mov (bad) outsb (bad) pop int3 fcmovnu mov mov xor gs imul add mov cmp test mov sub sub cmp aas js andl push lret arpl xchg dec aad aam xchg nop enter xchg dec mov jle mov dec cld insl sbb pop out and jg pushf movsb outsl push xchg nopl out (bad) nop enter repnz dec jno stos test cmp loop (bad) in leave loope sbb rcrb and pop cld sbb cmp xlat add sbb lock je mov pop jns dec lahf mov or bound cwtl mov xor inc repz xchg lods push or sub popf xchg pushl mov cmp out loop pop ss loope rcr nop aas sub dec fwait cmpsb mov js xor lea popf cmpsb lock and (bad) je mov mov push adc cmc dec std xor (bad) (bad) mov push xor adc clc mov aas jmp vpaddusw cmpsl (bad) and call out mov addr16 dec sub jl fiadd out inc fst cld pusha fs mov cmp lcall lock jecxz arpl xchg dec cltd es push jp push mov lods roll cmp add lcall mov loop inc (bad) lods xchg lock pop enter movsl add (bad) jecxz mov iret outsl xchg pop or push mov mov push push sub imull ljmp mov jmp jb lods lret pop and out pop ret mov jl cmp (bad) xchg lret insb add scas jno cs xorl (bad) push mov cli and (bad) fistp fistl cmpsb inc test xchg jecxz mov ficom mov and mov test outsb or repz repnz (bad) push xchg cmpsb lods test inc fldcw popf mov popf pushl lods adc xchg mov repnz std xlat lahf mov pop mov test sbb pop pop inc mov xor mov out sarb adcl pop or cmc sub stos popa aas sbb lcall jl sub in insb sub and dec cltd pop jnp or xchg sub orl dec dec cmc sbb stos mov movsl mov gs add decl lds ja dec push xor mov out std test pushf jno std in jne adc inc push lea ss movsl ffreep or stos inc imul fdivrp sbbl shrl push mov lock cmp addr16 imul add jnp cmp xor xor das adc adc dec (bad) jge in cmpsb imul push outsl ja jl (bad) xchg xchg cmp pushf add pop roll (bad) xor js leave std and rcl cmpsl mov sahf aaa mov cmpsl in (bad) mov ret dec sahf push push inc cmp push and dec xchg idiv mov dec movsl gs inc (bad) in sub nop mov mov sub mov cmp outsl pop inc aad sti dec sar push pop push std xchg adc adcl mov mov test popa inc enterw loop movsl lods push or out mov scas inc dec stc aad cmp pop popf jb sahf ja repnz call mov rorl cmp mov inc mov mov cmp sbb daa mov std xchg loopne fsubs dec mov push loope aad aas inc mov mov enter add jmp iret test sub gs repnz xchg outsl pop jle jecxz fiadd inc and cs int lahf jno aad dec loop dec xchg test sbb js jbe add or lock arpl int3 out in out cmp lahf gs call rorb inc sub mov push fstpl mov adc in cmp aad outsb mov and sub ficompl imul test xor das int3 out lea (bad) icebp mov mov mov test ret das scas xor ja jbe pop ljmp fsubrs div and push sahf sbb jecxz adc movsl lods dec scas cmp imul jnp push aaa jle,pt xlat pop decb fcmovnu (bad) mov loopne inc inc mov mov pop sub push pop xor andl outsl inc ror dec push es loopne movsl pop mov push ret cmp int orl cmp clc xchg xlat pushf arpl cmp pop push nop test and popa xchg dec inc dec bound mov jle pop bound mov loope sbb (bad) mul ds pop xchg idivb (bad) scas shlb (bad) sub cmc mov xchg add jae lret mov arpl and (bad) and sub mov cmp mov scas mov jg cmp rcrb xchg mov jg lret add inc lcall cmp mov (bad) mov pop fwait mov movsl lock rcrb inc mov imull or xor clc jmp and xchg ret xor or add push int3 (bad) sar inc xor iret scas push mov sar mov test adc insb cwtl pop jmp loop imul xchg (bad) and pushf loop arpl aas inc scas ret imul jg mov lods (bad) jmp or xor sub mov push add mov loope lods inc aas scas int3 add test imul push sub push pop and jecxz sub push xor inc dec int3 xor push xlat loop in xchg pop jae fucom jns push iret lret pop ljmp fbstp mov dec ret cmpsl xchg rorb xchg jl push mov pushf pop or add insb nop mull ret lds push out fldt xor adc sub cmp jnp int3 xchg sbb inc js pop push and pop sbb mov pop cwtl int popa push loopne test (bad) jbe stos pop loopne iret xor mov inc pop gs mov jno jns test inc repz leave adc xor sub cli addr16 push popf fsts add add jnp sub js (bad) leave lcall pop and mov lcall popa or stc div sahf in les arpl imul and push sbb add inc test popf jmp or aam pop (bad) xor sbbl jl addb cmp in sbb repnz xor pop xchg mov add (bad) enter fsubrl or popf adc dec repnz arpl mov jne leave lahf lea pop mov orb pop jne bound dec push (bad) (bad) or pop jp aaa icebp xchg aam jae popl push sbb dec leave pop push inc sbb rcrl jp fiadd add jne xor fs add or push es scas xchg enter and aam jno or pop gs push jns pop loopne lds mov sarb addr16 test imul iret aas pop lods sbb xor add push push adc mov popf push inc jmp sbb adc xchg call (bad) dec sub insl mov jo in cmpl out stos in sbb mov rorb mov jg add fidivr add hlt pop test (bad) testl add mov lods les fwait rol out or std test ret or inc push ret or aad sbb loop sahf or xor dec mov mov jne mov xor mov into ss xor lea sub push cld lret cmp mov in mov add and or jp adc pushl jae lods mov push inc lods stos inc ljmp xor popa jecxz sbb mov sbb repz mov and orl jp sub add and stc adc in jle xlat clc out das fist ret cmp lret (bad) xchg or mov jae pop pop dec jecxz iret jmp test int3 (bad) (bad) ljmp (bad) pop (bad) jne scas push or and movsl in add sbb xchg subl popf push mov jno mov and mov push imul pop xchg dec jno (bad) or popf popl sub sti cmp clc adc mov into push mov aaa inc leave inc cwtl repz cmp in jb out lcall lock lahf xor cld adc ja add mov inc into fs pop (bad) inc sbb rcr mov add add xchg mov in xchg and lret jp (bad) and mov js pop mov adc (bad) jae xor (bad) ja shrb jge repz rcrl or sub jecxz pop cltd inc je mov ret lret rcl ret dec mov stc imul sub fldenv adc mov xor pop iret jb test xchg lods repz mov jg mov fidivrl xchg jnp pop cwtl xchg and stos les ljmp mov stos loop jecxz jp sbb jbe fisub (bad) jns cmp push sub cmp xchg xor iret xchg mulb adc fmuls add adc and adc movb mov fcmovne jno (bad) stos pop pop in call mov bound pop lcall push lahf pop arpl sub pop leave mov (bad) push push aam rcll in dec sub jne xchg sbb cmovs ss lds sahf cmpb scas push rorl repz cmp aam leave pop orb aad mov test stc iret jle cmpl mov outsl push (bad) or add hlt (bad) ja pop adc cmp fwait add mov mov in mov sbb pop gs lods xor fiadd ljmp inc push add in xchg dec outsb cmp cmpsl leave xlat popa adc setl shlb negl jg or push push inc push mov lds (bad) out popa pop test repnz dec cmpl cmpsb aas and lock pop dec sbb pop arpl scas in mov jg hlt test jmp xchg (bad) jge adcl pop movsb and (bad) sub ret lret scas add xchg pusha scas cmp (bad) aaa data16 mov (bad) push pop xchg lds imul xor xor jecxz push jl jmp mov mov mov lods cld sub pop push dec sbb jb inc mov mov push lods push xchg mov cs aaa loop sub mov push dec mov push (bad) das mov imull mov sub sti fsubrs lods push jmp mov imul daa inc push mov add das or pop je shr or lret pop add (bad) loopne mov pop jle push mov int3 sbb cmp xchg sub inc and std push cld mov (bad) sub or mov xchg xorl test test popf into and ljmp jbe call pushf pop popf ret dec xchg lds (bad) dec inc jle icebp xchg pushf rolb jmp mov pop add adc shl fs mov stc pop sub cmpsl in cmpsb jecxz decb jno cmp rcll push mov stc mov inc lock movsb mov pop bound andb movsl aam lahf jle dec scas cmp adc (bad) xlat xor xchg mov negb rorl and mov sub nop xor mov xchg inc scas inc mov push dec inc jbe cwtl lods std mov insl lods mov mov dec mov sti xor movsl jecxz call or mov xor je cmp inc lcall mov stc cmp in rcr inc sub das cmp lods xor test aam sahf pushf xlat jnp in jle push mov mov ja mov mov lock push fucomip or pop test adcb dec jp mov cld add flds mov repz xor scas add xor clc xor cmp push dec dec push fs insb rolb loope test leave loop xchg mov ja or cmp jns lds fcmovnb outsb out movsb bound test mov popa (bad) scas (bad) pop lret inc inc mov push pop int xor mov (bad) jbe adc mov push jo cmp push lcall mov xor hlt and dec nop inc xchg and push ret cmp jno fistpl insl jmp push xchg outsl add lret pop jmp outsl cmp outsl or mov fcmovnbe lret test inc std into sbbl inc mov mov test xchg adc mov lea rcll fldl mov xor adcl test or or adc out sub or sahf xchg leave mov sbb xchg jge adc js jnp fs and cltd repz push jb cli mov xchg fistp add lahf in add fisubr ret imul outsb adc nop push pop and cs jp inc icebp gs jnp cltd push mov jb push ds mov or (bad) xor (bad) (bad) jns aam lods mov leave inc mov xlat mov imul jl in sahf out shl cs scas jne or mov mov and dec fmul and ret jae sub sahf fld1 sub out mov outsb xchg enter push cmpsl lods and lahf call jge aad (bad) jmp push clc mov pop sub mov (bad) mov scas fdivp adc pusha fnstsw (bad) fistp pop addr16 mov cmpsb sub xor nop inc xchg test rcrl dec push mov fsubrl addr16 cld (bad) xor xchg outsl jb ja adc mov pushf xchg adc outsl mov cli iret mov int push es dec fstpl mov mov ret outsb cmpsl inc sub ss (bad) jae pop mov pop push aam cwtl cs das jbe test jl int3 mov sbb test fs js jb adc push fidivrl lods enter mov mov stos push push jb mov mov jge jp cmp inc inc ja jl (bad) lock mov mov pop inc xor cmpsb out rcll call jae inc and adc leave inc ds into lods mov and mov lock push xchg pop dec sbb jle push dec or dec push mov call pusha jmp dec pop jecxz out pop imul adc cwtl addr16 fs jmp repnz ror js lcall push ja push mov jnp nop es jecxz lahf (bad) xor ret push xor cli lock jns adc repz xor (bad) xlat (bad) fs and push push lea xchg lods mov out jns xchg js (bad) adc mov jp (bad) pop mov jbe in (bad) mov (bad) movsb xor shll pop and rorb pop icebp and (bad) out xor ds pop jno xor mov decb jl mov (bad) and mov shr icebp xor (bad) cli gs pushf xor insl xor dec pop out or bswap cmp xchg add pop cmpsb ja icebp lods mov xorl mov lea test push xchg icebp sbb das push jno push jae add xchg inc push add mov ljmp pusha pop popf insl (bad) inc imul inc jecxz push inc mov testb dec or mov add adc mov orl ljmp add push sbb std adc or sub jecxz push ljmp and sti mov aas sbb xchg pushf aas out xchg xor (bad) fbld mov movsb lods (bad) (bad) mov jns icebp hlt test adc shlb adc repz popa test adc jns sub and (bad) (bad) mov mov jge insl and sub inc in popa xchg jae push hlt enter mov add sbb in negl mov (bad) and jecxz cmp loop mov mov lods cmp dec div and inc daa stos and xor inc push (bad) adc scas xor push push inc ret outsb js adc orb pop inc dec nop daa xchg ret (bad) std mov inc ret dec pop mov call mov pop cli aam lds push mov rcl pop test fs mov push dec (bad) push addr16 sub jae test jo hlt aad out mov mov jp cmpsl mov lcall pop imul inc scas jl andl fwait jnp push mov scas aas lahf mov cwtl das icebp push xchg (bad) and repz or dec xor mov insl cmc sbb mov pop push push mov les mov sbb inc (bad) imul xchg (bad) jbe fcmovnbe mov divb push pusha les mov dec lahf mov xor jmp push mov (bad) xchg test insl outsb imul fisubl inc cmp sti in in xchg mov mov jmp dec dec gs dec leave test into cmpsb sub int3 mov push lock dec jo jo (bad) and and stos cmpsb xor cmp loope (bad) mov pop push movsb and out dec xor fldl2t jl ja stos lret add loopne mov pop sbb push je mov pop lea mov adc ds (bad) sub pop clc inc push rcrl jg mov mov (bad) fldenv out push icebp int3 out sbb std bound sahf ret loop cmpsl fs mov xor cmpsl pop in idivl push mov sti pop movsb movb es pop (bad) push push (bad) test rclb jecxz push loop mov xchg fs test loop jl sbb stos inc sbb cmp (bad) stc lods mov (bad) jb outsb and out mov mov pop push fildl test mov stos adcl sahf pop clc cwtl mov mov orl mov mov int (bad) idivl add arpl enter aaa cli jl sbb xchg popf clc cmc inc fwait adc jnp and lret mov and aad and in push cmp inc cmp xor mov shrl cmp int shrl mov enterw cmp ljmp or adc in outsl into loop in sbb pop pop fidiv pop jbe ds add sub push outsl loopne nop (bad) sub and push aam cld push stos es and mov jns xor pop fmull outsb push adc mov (bad) pushf jg push add aaa add jecxz fs xchg les inc or jnp jge lock dec inc les dec clc addb and adc cmpsl (bad) cmp mov stos fist jp repz dec push flds dec adc rcll fildll outsl pusha cmpl or std push jl mov or out fldl sub popf imul fdivrs ret fcompl cmp jne mov mov or es pop mov mov data16 pop push jg jge sub ret add scas ja cmp test mov xchg out sbb xchg out cmp outsl or jge mov xor in add pop les (bad) rorb adc jae outsl rorl rolb push adc sarl mov sarb add test pop jecxz mov dec jmp mov xor mov cmpsb xlat test pop insb pop xchg adc xchg mov ja int cli mov scas sub inc mov add enter xor mov hlt int mov (bad) notl push mov stos cmp insl (bad) jecxz insl negl mov adc add mov push jg aas clc imul ret xchg ret pop imul mov cmpsb test xchg sahf push outsl xor pop xor hlt mov call xlat ss push push mov rcrl xchg inc jmp mov lahf insb stos pop imul dec inc lods rdmsr nop fnstenv jae adc xchg jns iret mov jmp fisubl fwait add fdivs sbb xor repnz ss mov outsb setge test cli push test dec inc push pushf dec mov push sub cwtl or xchg sbb pop lods xchg push cmp mov push sbb frstor fstpt shll sub aaa xchg arpl adc push add pop scas daa loope lret cmc cmc divl jle jge iret mov add mull and sbb scas jle fsubrp mov xchg adc arpl jp ret mov add fiaddl (bad) mov mov out mov adcb mov cwtl sar xchg mov fdivl mov into xor insl push add cwtl in repz jle mov insb add jb call loope call out push inc cli loop add cmp scas pop push jae aas fcoml push or mov jns sbb push fisttpll ljmp mov sub cwtl test jae test ds push xchg cmp push dec fimull in cmc and jp frstor pop jbe inc push iret mov add scas in mov adc pop mov push adc (bad) in inc int3 movsl lret data16 sub js adc pop dec jno repz jmp loop adc cmp jmp popa push lcall (bad) outsb sub fwait add cli mov lcall ret fistpll mov mov mov push sub dec jmp fwait scas push in iret test ljmp (bad) or jg and xchg (bad) fwait popl das push shlb cmp and adc leave push jp jae inc movsb test je xor fistpl out xchg sub aad test mov imull adc (bad) shrb jge jo push adc dec pop sub in aas mov pop bound loope or pop mov cmc insb sbb rcll cmpsb push add adc (bad) xchg test xlat movsl (bad) push jnp sub mov ss sub mov sti jbe mov mov addl sub mov and sub sbb enter outsb xchg mov lahf mov sub xor scas movsl adc pop xchg push icebp mov or fdivrl adc cmpsl xor (bad) mov cmc or ret push sub sbb and cmp jecxz incl mov lret ficoml fcmovnu dec out ja (bad) leave hlt inc sbb cmpsl jo cmp push pop aam jae sbb and fisttpll xchg adc scas cs jge movsb sahf fisubr xchg xor decl aad cmp xchg jne push jmp lock (bad) xchg cmp push push mov lahf ss imull jns add cmp in xchg add stos push jecxz dec jno inc loope ja ret mov aas fst pop cmpsb and icebp aas std pop aam aam add jle out lret mov test and aas nop push arpl cmpsb jl test and mov hlt clc daa nop lods pop and pop xchg dec add aas dec subl push and add jns cmp push push test clc push cmp cli imul or dec icebp lcall dec dec push jg and lahf jns icebp outsl and lds adc mov ds mov fadds enter es movsl out mov call fwait add inc cmp pop adc insl cmp fild push in mov add (bad) sub push pushf cmp jbe sbb jp outsl ljmp lods loop imulb (bad) mov (bad) lahf fwait inc xor dec pusha and mov cwtl rcrb xor add jne xlat mov js test stos cmp mov ss test fs pop lods xchg mov sbb jl or in (bad) mov sbb and ja loop int3 pop js rcll lods jne insl js xor sub pop (bad) push jnp inc dec outsb loope (bad) test sbb aad imul mov sahf out push fimull insb sbb mov out ret ja add outsl mov sub add pop fimul dec std push mov outsl pusha stos repz dec hlt das inc jb nop jns les or (bad) xor inc call mov mov mov stc sarb sub mov mov jge jecxz cmp mov jne popf jne ret mov in aaa or (bad) fwait lea fbstp adc cmp test test (bad) fstl xor xor jb dec hlt aaa jns pop imul sub pop or pop in xor push lock lcall lea push mov fidivr xchg lret pop pop mov inc jbe mov fwait subl insb inc cmp into sbb add pop in jns mov imul js in push or test mov mov cwtl mov dec daa pop dec fcomi mov push adc xchg sub push pop (bad) (bad) xchg add inc push mov mov loopne or test push pop lods mov add mov push pop xchg enter inc jmp popf popa cld fdivrs popf dec addl (bad) sub not iret cmp xchg fwait sub js int3 fstl in sbb lea aaa or mov mov and int add cld mov xchg jbe jne pop push sti push dec cmc jge das sbb mov adc ror xchg xchg enter inc mov sar adc xchg shrb inc add and movsl repnz push mov push cmp push jmp out test in aas sbb mov xchg pop mov mov enter orb xchg lea scas cltd daa rcl jmp (bad) clc inc loop pop push leave jge or out jle mov lahf mov pop fidiv pop mov dec adc into or int and jp (bad) and xlat push adc mov inc sti jmp andl lret and inc or leave mov gs std stos aad pop test je push jne int3 test movsb out sub pop jl pop mov adc inc fsubs (bad) je adc dec mov cltd (bad) fimul push lret out jmp inc sub jne cmc pop mov les push sbb fsubs push icebp dec bound jmp push out loop jle or add scas or lds push xchg jmp test add ror iret jle sbb call std inc sbb (bad) mov jae (bad) sbb (bad) in test (bad) xor push jl cmp les pop mov push lret jae rcr movsb fndisi(8087 mov mov (bad) cld (bad) adc lcall enter mov test sbb xchg inc sbb push cmp loopne jns mov fiaddl mov mov cmpsb jae sbb jo das inc xchg pop dec xor push mov stc cmp inc inc cltd cs minps sub mov pop push adc fdivr insb aaa dec jno scas loopne xor xchg out dec or jbe mov or insb mov ss sbb aam scas imul mov (bad) lret das aad push cmp stc pop (bad) and push jp imul push pushf arpl dec jno mov cs inc xlat incb xchg jae movntps xor mov les std arpl sti dec jbe scas add xchg inc inc xchg test push loopne or add push (bad) rolb imul in in js inc xchg popa xchg jne addr16 pop cmpsl les je rcll xchg (bad) mov mov sahf sub sub inc fisubrl stos jge xor xchg push adc (bad) mov dec (bad) or mov (bad) fisub jmp jge clc js repz mov push out decb call je iret pop mov xchg hlt pop pop daa hlt aam adc push mov adc mov inc lahf mov cmc pop adc xchg push ret shrb adc xchg sub cwtl jle ljmp mov addr16 push jb xchg dec or pop cmpsl imul ret fcomps and xchg xchg xchg dec sbb rol (bad) rorl jle push push pop jno add cmc pop nop fimul xor nop mov andl push test stos (bad) in out mov insb mov adcl mov xor mov xchg movsb lods cltd cmpsl push (bad) xchg mov xchg or xchg sub sub mov mov pop push and es stos cs imul test push arpl sbbl mov test arpl mov (bad) jbe (bad) cmp or dec inc or (bad) cmp outsb imul sbbb jecxz,pn push andl or idivl sbb fisttpll inc ffree pop cmc mov (bad) fst sbb sub mov cmpsb (bad) sbb mov pop in sbb imul or pop jmp xor mov mov inc cmc enter lds sub gs arpl pop sub sub mov pop enter stos sbb les xchg mov mov sbb in pop pop mov lahf sahf pop jle in cmpsl ret mov fwait iret js dec add loopne or push and xchg les out lds and movsl jmp cmpsb into loop xchg in dec push repz lret sbb mov inc dec shrb (bad) jae stc adc mov imul push movl mov cmp mov out fwait rcrb cmp mov adc gs lret inc push xor pop jp shll loope sbb mov insl stos cmpsb test ror lret scas add adc mov incl lods xchg push push daa shr mov icebp push sti les aas (bad) xor outsl clc mov adcl in jp xchg jns fimul xchg fwait aad jne movsb mul and jp dec imul push ljmp pop (bad) jge shlb daa out out das sub and mov movsl add sahf push orl ror xor sub cmc ja fstpl jg push xchg call daa lods pop mov (bad) adc pop cwtl jne or dec jbe sub in pushf and xchg sahf hlt sub sub std or pop adc jb mov mov cmp je in mov bound fwait mov ficoml xchg (bad) inc insl cmpsl jne push sub xchg xor jae xchg sti and xor or bound or mov inc xchg xchg jle lahf jb (bad) hlt bound pop sub sbb lock out xchg and sti jb xchg (bad) cld or insb mov (bad) sbb movsl jmp aad fs stos cs xchg cmp and or in cmp xor add sub popf call incb ds jnp (bad) sbb aas rorl push add xor repz in decl sbb pop std popa xor negl call pop mov pop es (bad) push lcall push in rorl sgdtl mov cmpsb outsl loope std enter push xor or (bad) js cli fadds inc xchg shrb dec ret aam insb add dec pop inc add adc rolb mov cmp iret sub imul xor lret dec fs add mov imul movsb dec fcomi mov cwtl test pop cmp dec xlat or inc pusha or divl or push int rcrb call inc in cld inc es push out (bad) mov push or jge and add pop mov xchg icebp jmp mov jo sub pop sbb add sbb aad xchg je and cmp adc in ret jg mov popf cmp push cmpl repnz add faddp outsb jl sti or loop call jbe pop int push inc or add lock and cmp sahf pusha adc or sub mov xor loope cmp sbb in jns mov in mov mov ds jo push or jne gs adc inc popf mov inc sub popa jmp (bad) inc fcoml imul ljmp lods push mov jne or sub add movsb lods cmp sahf xchg push aad setle test loope xor pushf mov pop inc je pop stc jbe mov or xchg outsl inc add imul adc leave aaa popf dec lds sbb jecxz sub jno inc loope xor xchg and lret or inc enter shrl add stos cs out popf mov imul sbb mov inc cltd test idivb xor xor dec cmpsl ss idivb mov popf out inc pop pop in mov inc nop mov push sbb ds xchg mov dec mov and scas cli jecxz mov mov or mov arpl adc push test (bad) mov push dec sub nop sub arpl sub aaa addr16 lcall lret bound lods or insb push mov aam lea aad int ljmp mov stos pop cmpb add xchg fild pop add cmp adc adc pusha lahf mov in adc arpl sbb sbb sub les dec pop (bad) in lret mov sub inc lods pushf mov daa dec adc push rorl repnz aam clc in mov rolb lret dec dec outsl lods push jle mov (bad) lahf adc push add jg adc add cmp mov jns sti aas xchg sarl xchg add xor sub mov notb (bad) aaa pop outsb lods test inc jl mov push pop push ljmp adc pop mov (bad) sbb push adc mov int xchg (bad) push jmp cmp mov ret insb scas cmp jl dec mov cmpsb addr16 cltd subb push mov dec jno pop movsl push or or sbb int or andb cli lret js lcall cmpl pop dec sbb ror push mov out mov jo ret push cwtl dec jge repnz jne daa cmp add adc (bad) fimul js inc jns ljmp loop sub add lods (bad) int3 sub (bad) pop sbb fdivrs push test cwtl lods shr movsb ret xor push xor dec jmp xor lahf mov int3 inc fs xchg icebp cs push mov gs adc das enter adc mov loop in mov mov aad rcrb inc xchg pop dec mov into mov sbb mov fucomi bnd and sub lret ljmp jmp stc iret shl lret int3 xor or sub inc jecxz daa fildl inc push repz dec rorb dec loopne sbb jmp sbb cmp outsl in fcmove hlt cld add sarb test fsubp shll neg dec xchg cwtl (bad) stos dec imul mov pop xor push push xchg in xchg rcrb push (bad) out movsb and jo push sbb pushf xor int3 xlat adc or sub inc pop mov jb xchg stos dec shlb xorl addr16 and (bad) push std cmp out push mov jl les cltd mov pop pop mov je inc aas lock pop lcall inc daa rcrl push push or sahf out repz call andl mov jmp fcomps int adc inc movsl in shlb rorl inc or (bad) add sbb mov push sub xor mov mov cmp hlt xor push pop movsb stos cmp pop jo ds inc mov and jl push es push insb movsb push pop aas dec shrl push adc rcrl sbb (bad) or add mov je mov and cmp pop loopne push ds (bad) stos mov (bad) data16 cmp imul sub sub pushf sbb pusha mov mov cmp scas or imul sub nop jae cmp mov scas aaa push aam mov pop dec pop stos lret repz lahf inc sub push stc and (bad) sti mov ret rolb dec popf mov (bad) repz or and nop fwait add and loopne leave lea add adc sub mov mov xchg lcall pop jno fstpl lock aad push jge push mov dec mov jle xor inc cmpsl mov mov imul and jmp bound ret ds in sbb mov outsb jae (bad) xorl xor inc jo (bad) pop xchg out xor rolb aas iret inc push loope cs jno jg mov ja lds aam movsb mulb outsl jno adc pop (bad) mov xchg jecxz inc push inc xor mov dec pop addl jmp push adc stos push xor mov leave aas fwait std por mov (bad) sahf das movsb dec and xor lahf (bad) ss jne or (bad) mov hlt add jp jnp dec xchg pusha gs repz pop jnp sbbb mov mov jae mov dec nop dec cmp cmp mov fidivrl cmp and fiaddl cmpsb sub sub movsl sub xchg xchg sbb ljmp sbbb dec stos dec scas jle cld mov fwait out cmp cmp or test leave rol mov daa adc mov pop adc ljmp cmpsb gs jp and negl (bad) (bad) aam jmp adc push push mov cmp fldcw cmp mov dec or pop sbb xlat lock cmpl sbb data16 (bad) aas outsb lods cld sahf lods sahf push outsb enter ret mov sbb fwait mov xchg mov or and xlat gs cmpsb lahf es jg xchg jo and pop push xchg adc mov jbe lcall stos (bad) clc mov mov jge and pop fsubs jnp inc ret stos fisttpll push jo les jae test pop (bad) adc mov lcall insl or mov fisubrl mov je bnd mov enter sub add xchg mov cmpsb adc xchg movsl sub dec clc mov inc sub mov dec xor ja in pop mov imul adc movsb out sbb sub mov int pop ja test xlat mov imul scas xor mov sub push mov mov mov push (bad) sub in pusha and ror arpl ds sarb int3 (bad) std or push cs shlb pop dec inc mov sbb or out adc mov (bad) xlat jle push hlt jo popf test sub pushf notb ja ljmp mov pop jle xlat fsub in mov stos sbb or nop push (bad) test adc movsb xchg cmp xor add test or push pop mov xchg xor add mov lods ljmp cmp pop push xor xor push mov mov outsl push loope xchg js add scas roll pop xor xor ds dec nop mov (bad) cmp sbb jp or ret add jmp notb roll mov jmp lcall movsb scas in test mov inc mov fadds mov or cmp shl mov dec imul sti aam arpl test aad jge ret lea pop in xchg inc lcall jno dec xchg sbbl popa jno test roll iret mov leave pop in rcll pop dec or dec sub lock int stc pop ds sub mov out std bound inc test sub fisttpl xchg rolb into cmpsl xchg xchg sti (bad) pop pop in sbb rcrl popa add lds in adc stc scas mov xchg jbe fdivr adc mov pop jp push push (bad) data16 adc outsl loop jo jmp sbb mov arpl les aaa push aaa mov rorl outsl mov data16 xor mov and out repz incl mov xchg cmc sbb sbb jns fwait inc xchg repnz mov sbb pop xor ja enter pop aaa mov jmp movsl jo push add sbb pop test sub jp out push (bad) mov ja out jecxz mov mov adcl pop mov push lahf xchg mov bound or push jge (bad) mov cwtl outsb mov jae mov sahf xlat aas stc dec push mov (bad) sbb add or mov pop inc xchg mov jecxz or icebp or loopne (bad) or xchg and ret push gs jbe cli jb into adc insl xor cmp loopne shrb in pop fldz add test sbb cmpsl sahf push mov ja cwtl fstpl icebp xchg and cmp push mov jl sbb bound mov pop sbb dec dec xchg mov daa mov in (bad) out jle xchg adcl int loop in stc jns adc cld jge xchg mov jl (bad) cmp inc inc ret xor lret (bad) addr16 dec fimul daa jne (bad) clc mov adc jne cmp mov out cwtl sbb int3 cmc outsl adc cmp push outsl in and add (bad) xor add mov es jmp adc jne mov push (bad) rcr xor lock aas mov aaa sub pop fs pop test mov adc cmpsb scas loope bound adc out popa roll jmp dec and xor lods dec lret jae jns mull mov subl aad mov loope inc jmp xor pop sbb push adc add ljmp xlat cmpsb repz xchg pop sub (bad) js pop cmp loop or movsl loopne call data16 mov push lcall loopne daa iret mov push push pmuludq cmpsl ja xor cld dec jns (bad) pop xchg mov pop xor pop lods mov loope or icebp ret xchg pop or ljmp inc mov cwtl sub pushf lods cwtl gs icebp decb lret sbb bound gs cwtl pop fst dec cmpsl repz inc call xchg and xor (bad) (bad) lea das aas jmp cmp adc mov adc or sbb test insl clc push mov aam or out pop (bad) or adc cwtl xchg cmp imul repnz out mov mov (bad) ror dec cmpsl cmp push cmpsb sub shl pop lcall fs cltd hlt add ret ret adc stos or cwtl lret sub mov pop jne pop nop mov and add jbe cmpxchg or push in (bad) inc inc mov loop jae mov bound in fdivs jl push pop xor mov lcall xor je adc fstp sbb jle leave jb,pn jo insb adc lock dec mov pusha adc xchg addl insl cmc stos lock in xchg cmp lods mov jecxz cli add xchg nop imul jl inc pop xor dec lcall cmp dec sub pop popa jno scas mov mov pop mov push les mov adc jecxz xchg cltd or bound imul push mov shrb lret dec inc jo popa push add ds sbb push mov das inc jecxz inc repnz (bad) cli add fs das jns std lcall lock dec mov pop xor call xchg aad clc mov push cmpsl stc cmp sbb (bad) mov cltd lret sub mov dec cwtl bound dec push hlt jns cmp jge sub push sbbb mov gs mov xchg js xor rol and int push cmp fwait inc addr16 into and add adc or cmpsb repnz adc stc mov add mov mov adc push jns fisubrl ljmp dec lcall out dec fs lcall popf loopne dec movsl les cs jg andb inc pmaddwd jb stos sub xlat push enter lods jmp cmp (bad) cmpsb call inc test (bad) outsl cli in mov sbb mov lea (bad) inc jns mov jnp push out in lods int (bad) mov mov outsb push mov insl and (bad) mov mov shlb lods pop adc xor lret jecxz and pop call andl xchg push (bad) mov mov xchg ret dec dec sub mov fwait fwait pop jae in bnd inc out fnstcw inc punpckhdq pop test dec add btr cmp pusha addr16 aaa push push add and and or icebp test and lahf nop push cmpsb mov jbe sbb lret es mov mov and enter pop xchg pushf xor imul cmp inc in fst insb and push in and js sbb ficom aam sbb bound pop ficompl addr16 into inc push mov sti cwtl leave repz jmp ret call push pop imul xor ljmp out addb mov loop iret inc ficomp ss enter dec fs jp (bad) repnz pop push pop dec xchg pinsrw and outsb jnp push mov loopne pop ret aaa sub clc mov test ja xchg das cmpsb inc mov mov cs mov push lock inc mov arpl add mov push xchg stc rclb and add adc xlat mov cwtl je iret out test (bad) xor mov hlt loope,pt and push in sahf cmp sahf hlt xor add mov pop cmpsb sub arpl xlat ss (bad) dec lock sub (bad) shr pop negb mov mov cmp sub fwait sub mov hlt xor xchg push aam je pop push in (bad) in jg adc add xor sbb xchg lds push aaa mov stos add push sbb inc jp int3 or imul mov in or sti adc in mull mov fcmovnbe les jge push xchg cmpsl test pop pop lahf loopne scas jecxz jle cmp ret cmpsb xchg mov mov outsb adc cmp mov (bad) sti out adc cmp cwtl mov sub or push inc dec sub test mov stos icebp (bad) loopne fiaddl mov fidivl fisttpl (bad) adc int3 scas ret out stc dec add out xor sub cli adc test lret (bad) mov mov lea lods rclb pop jo mov fwait mull (bad) cwtl stos fstpt test xchg inc inc mov das fimull pop in or inc sub lret xor jb sti ss xchg scas mov sarl pop dec dec push xor aam adc iret add imul jg mov add add add movsl jae add pop dec in xchg aaa pop mov je outsb in or inc popf into sub aam ljmp pop xorl mov or lods cmp jecxz mov repz aas pop and lcall lock mov jo jecxz inc or lret cmpb inc push sbb dec jge sbb loop out sbb sub push pop loopne fnsave (bad) and vunpckhpd or inc in mov add mov scas test arpl mov mov rcl lods aas dec imul sub (bad) clc movsl dec dec inc mov fs rclb and sub movsb lock cltd pushf out call arpl mov enter push xchg sub mov xchg fdivs insb cmp mov lret bound fldcw dec outsl xchg insb push pusha lret add andb hlt dec xor dec and xchg xchg sub jns dec xor mov cmc sbb pop test popf dec pop js sub mov pop or jge jmp sbb (bad) push add shll push mov aaa (bad) cmp add es dec movsb in je dec adc lods ja cld dec repnz sub xchg push (bad) jge ja xor aaa xchg xor push add das in js inc inc pop or js inc out fnsave cmp es or insb mov mov popf dec pop (bad) lahf gs je mov data16 xchg inc mov or jns push pop es lock adc insl push rep sub lea jns cmp lcall mov ds sbbl das and xchg test rolb fcompl mov test cmpsb pop mov push aaa mov fmull mov fsubr and mov dec pushf loopne or (bad) mov mov fisttpll movd cltd mov cmp jp or enter (bad) loopne sbb cmp pop enter fwait movsb pop cmp ret xor mov xor imul or push or test mov pusha fldz sbb in inc jmp ja push repz fsub popf mov cmp fwait cmp mov daa pop push lods push into imull add and jg (bad) fnstsw pop pop mov aam sub dec rolb ss or pop lock xlat test bswap dec ret dec test cld rcrb movsl sarl sub pushf push and (bad) jl test or jp ss out mov call ljmp lods (bad) xor mov lcall pop mov lcall notl in sbb lods fsub push insb push test repz (bad) jecxz cmp ja sub lea fistpll data16 xor xor mov jp ficomp test cmp loopne in movsl xchg fidivrl xchg jg movsl movsb mov mov mov in add leave dec fdivrs mov pushf shll push or (bad) mov pop adc sbb jb cmpsb adc scas dec push iret dec aas lret orl sub cmc je add daa int data16 sub scas out loope cs sbb leave pop pop push into pop in fcoms cmp out cmp imul xor (bad) mov sbb jg fmull mov jg sarl jne xor push shrb adcl out cwtl addr16 ss xchg fbstp cmp jbe out in push in enter inc add ds test xchg add mov ja sahf testl std js pop sub sbb loop mov jae cltd loopne add (bad) sarb into inc shrl mov inc or aad pop mov and push ds cmp sbb add push test imul outsl out ja (bad) adc mov hlt nop mov int3 nop insb mov mov test sahf and jp xchg mov les inc dec adc movsb inc inc xchg jecxz or lds xchg push rcl and movsl decl in xchg fs mov sbb cmpsb js mov pusha cmp cmc xchg js fisttpl jnp xor mov (bad) inc add jge and movsb mov movsb mov cmp mov sbb rolb jle dec cltd add or pop mov fs mov in mov and vpshufd into or hlt cmp xchg mov pushf dec arpl adc push push insl fs cmpsb inc imul push dec pusha dec jo adc sbb sub adc jge jge dec pop dec xor data16 (bad) pop add fcomp and adc cmp test scas mov inc add stc mov push mov imul enter mov mov gs cmp push loopne mov jae mov dec lahf arpl test test add pop (bad) int iret cmpsb sub and data16 jp or (bad) inc pop test jecxz pop loop insb imul std mov aad js push add test jge xor mov (bad) movsl xchg add mov jae cs push bound adc mov mov aas rclb mov (bad) int jns out dec repnz mov cs in in xor movsb fs (bad) cmc jno jno iret and lea lahf cwtl sbb sbb cltd pop data16 dec ret cmpsb adc dec pop jno xchg sbb lods sub test cld test pop (bad) xchg or out ss sbb push or sahf ljmp movsl push inc (bad) out sahf jmp push xchg pop lret or or (bad) mov pop nop lds adc and or xchg nop dec adc loop pop clc enter or mov stos pusha push inc adc mov mov xchg and out lret mov popa inc out iret xchg and push sub inc iret push cmp jle cmp clc pop lock add ljmp inc cld mov dec pop arpl mov and (bad) shll insl push lock adc mov mov pusha adc dec scas mov and iret arpl aaa mov xchg into scas push mov cmpsb movsl (bad) xor (bad) jmp push mov jo pop data16 push or adc pop and sbb pop dec mov int xor mov add jb jae pop cli pop or std loopne stc daa sub test push fs test aad add xchg stos dec push sahf lahf cmp loopne inc xchg movsl mov and pop (bad) aaa xchg pop mov mov les mov loop xor icebp pop sahf aaa movsb (bad) es gs clc mov push lods jl jl and sbb popa mov cmp insb jo sub clc in dec jne add jmp dec xchg xor pop mov xchg xacquire insb cs jb imul stc jmp jg (bad) loope cld daa mov jp outsb pop pop into mov inc push mov sub lea jno xchg sub lcall movsb jnp mov scas icebp test xchg pop fwait sti adc jecxz inc (bad) or popa addb dec jmp cmp fild pop add and mov les mov lret repz mov das insl fdivrs lret je shrl xor and add or dec cwtl or inc (bad) out adc and and cs out pop fnstsw xor (bad) pop das inc adc pop mov flds pop or adc mov sbb push sbb pop jl pop sub sub insl dec push push mov pop jmp aas aaa movsl js outsb test lods callw xchg inc outsb test test mov cmp bound adc cmpsl data16 push mov fdivr cmpb fdivrs xchg inc push (bad) inc inc dec fbstp inc fstpl inc jae into scas pop xlat cmpl mov and xchg leave jl inc push or pop sub cmp dec sub rep andb push (bad) cli pop in cmc mov xchg popf ds inc mov fcomps popf pushf (bad) push inc aad test test lea sbb mov cmpsb into push inc mov repnz xor imul out les fldcw dec pop (bad) test dec and mov mov mov and xchg add (bad) jecxz mov push inc xor cli inc xor insl pop das sub adc arpl mov dec dec sbb dec xchg mov mov fist int3 adc or jae xchg push adc ret mov mov inc add adc push and sbb xor jp jp arpl popf outsb aas push pop popa jle in ds scas mov in in or fildll add and imul inc push int dec fs cmpl adc repz nop ss add aaa push dec jge sahf adc push stos dec and pusha clc xchg fs xor int mov fsubrl mov jmp xchg cs int3 cmc arpl call iret in push add jns sbb mov cmp mov call roll popf negb (bad) clc cwtl out fstps frstor xor sbb popf cmpsl sarb into (bad) (bad) clc mov or cmp das sub pusha (bad) ss or pop fcmovnb addr16 mov ret push test arpl mov sub repz cmpsl dec mov jmp inc pop cmp int3 fnstenv clc jle jge or push add push aam fsubs lock out (bad) and push pop xchg lahf rorb and sbb stos loope repnz mov jns mov cmp dec mov out sub in mov mov jp jg jb mov lret scas mov and mov das xorb into xchg mov lods movsb jno sti gs push cld test mov sbb adc sbb scas jb icebp and mov sbb sbb xlat idivl lods push push insb out in repnz cld flds inc dec dec stc jg (bad) jne,pt xor jecxz xchg add add ret mov mov mov pop or adc cld outsl (bad) mov icebp iret sti inc icebp ret sub adcl inc rcrb sub mov pop jnp xlat mov cmp lret pop xor js mov fcmovb pop movsb mov mov mov pop push pusha les fwait ret xchg push stos or pushf cwtl in loopne mov sbb ss hlt gs aaa adc jae sbb or sbb outsl sub stos cmp sbb stos enter mov mov xchg inc pop add adc in mov loope mov or mov jmp lcall (bad) pop push dec mulb and mov cmp mov scas pop mov mov xchg mov dec push lock sbb loope add fldenv add sahf ljmp xchg and int push popf mov dec sub or dec push pushf mov rol jb push cmpsb js cwtl jle jg popfw rcl dec pop mov xchg inc into sub ret cwtl popf cmpsb pop mov adc movsl (bad) test hlt jno adc lea xor push add int jmp scas or loop or int3 aas iret scas or lea subl sbb insb sbb cwtl scas sti imul inc mov addps mov xchg xor adc sub out jge enter add repz mov xlat jbe xor sbb adc jnp fst cmp push mov or mov nop or xlat cmpsb sbb out psubsb mov in mov push jecxz jmp dec scas pop shrb loopne adc sbb lock mov sbb fmulp cmp sbb aas cltd cmpsl pushf std ss mov das inc icebp mov lea mov inc pop cmp pop repnz and sbb and pop or lods jne adc imull insb push hlt lods (bad) or jg pop addr16 inc ss sub jbe aaa pop in test inc aaa ja nop repnz scas xchg fsubl xchg adc lcall sub lea cld pop pop ror rcr pop pop push xlat fldenv jmp jge add int3 inc jecxz outsb hlt out test mov jle pop or add aaa js mov cmp repz jne (bad) data16 cs in jo inc fstpl push dec popa fs adc fiaddl sti cltd add mov icebp mov xchg dec rcr xor xor mov bound xor in rorb mov jmp call add jns mov adc cld insb add add lods inc inc mov ficompl inc and mov jmp or xlat xchg hlt in and mov scas je pop adc test jo decb add pushf adc rol ja sbb out pop out jmp and popa adc enter rcll rol adc inc mov pop insb std loopne add in movsl iret in jl mov xchg cs mov test xor mov push mov test cmc in leave push loope mov imul push push dec xor adc sbb lods in xchg sbb jl ja pop ljmp sahf dec jg xor inc mov xor std div or push xor adc mov aam mov cmc or jns movsl sahf jo out pop mov xor mov adc loopne mov cwtl rorb xor mov popa mull mov adc pop (bad) (bad) orl jae imul mov jmp int adc mov adc test or or fstpl pushf pop loop stos es push mov daa mov inc in mov lds scas les push into fcomps fwait cmp dec push loopne and and loop xchg push lret lcall (bad) sbb lcall lods les fdivrl push popf sub cltd lahf lcall mov pop xor pop dec (bad) out pop pop mov leave mov loope inc pop fcomi sub jnp lds push inc shll and add pop pushf out push enter sbb ds cmp ret xor mov sbb mov bound inc movsl pop in aad push hlt mov iret jmp out jbe ljmp scas (bad) pop inc add js push add das xchg (bad) outsl dec pop arpl inc enter cwtl sbb sbb lds arpl adc inc scas cmp jae mov mov xor stos in jl sub push out bound or test icebp js ficoml adc inc pop (bad) sbb sbb imul or lret sub pushf sbb js dec in rorb jb ss dec xor jmp negb dec dec xor cmp inc repnz sbb dec and lods jl in mov addr16 xor adcl mov loop sar mov data16 in out decb mov cld (bad) push sbb (bad) ss pop aam jg lcall roll xor cmp nop lods add sti imul test pop push (bad) adc xchg xchg dec mov mov dec imul fiadd and incb cli mov nop clc mov adc mov pop mov cwtl inc dec aas loopne icebp cwtl dec decb mov sbb adc stos xor cmpsl pusha and jl sti es push xchg jecxz leave mov leave test push loop jmp in icebp in (bad) push popa xor je out mov jne das cmp adc ss mov in popa cmp mov ret int3 in inc push ss dec xchg jbe push ret imul and sbb push sbb xor inc mov fisubrl daa xor fsincos pop nop (bad) gs jne xchg aam jbe push jb pop mov aaa xor rcrl gs les or sub lods or add mov enter cmp and xchg cmpl dec out hlt or outsb bound test cmp xor negl xchg cmp mov mov xchg imul or xchg adc loopne out (bad) iret ja pushf dec stc sarl xor jno push adc mov dec flds bound inc insb arpl test add dec aaa lcall sti lret cmp adc and or and pop jae mov add mov mov outsb xchg je push add (bad) lea dec or push cmpsl int jge cwtl push or sbb aam jbe fsubrl out xchg int push dec push fs cs add cli ja test inc ret add push insl in inc pushf jle push lea sub xchg jno iret ds out xlat ljmp xchg xlat lcall (bad) enter mov aad mov clc jmp mov fst xor push xor stos popa jns push xor pop pop add dec mov (bad) mov jne in cmp xchg shrb mov inc int jmp xchg adc push cmc or ja,pn icebp pop cs mov adc xor icebp mov sbb dec or cmp nop dec xchg aam adc scas rcll dec (bad) (bad) xchg cmp loop mov jmp mov cmc mov push xor mov jg jo sbb (bad) insl stc cmp jp xor sbb xchg ss jb inc mov adc inc sbb xchg push popf mov jg add xchg or aas roll in mov (bad) adc pop sbb leave js or adc pusha lret gs push mov mov sub add repnz sbb aaa out into (bad) push xor mov dec pop rcll repz and lods sub jbe jnp fcmovbe adc cmp mov jne shrl aam mov in push push inc inc inc and pop movb add outsl and lds adc stc fsubr movlhps or es cmpsl insl fistpll jge fsubs sbb ja rcrl mov jg incl xchg (bad) or addl sahf adc cmp inc in jae or mov cmp mov rol jnp jg test cmp fnstcw fs jno data16 mov repnz (bad) mov (bad) xlat mov inc scas imul and pop sub repnz add xor repz fucomi or add add dec fisub adc xor mov jno adc enter shr addr16 out idivl push imul and jl in daa pop cmp inc test orb xor mov andl mov (bad) aam loop cmp jmp sti gs hlt mov ss test sbb cmp iret xchg inc adc xchg inc andl mov fisttpll xchg cmp in ljmp cltd mov add jb inc stos jnp xor mov pop xchg stc mov inc leave pop adc jns pusha popa jge fnstenv mov mov add enter je,pn popf sbb xchg jno jno mov mov push ret loop rcr aaa repz xchg push inc fistpll lea cmp and lret sub jmp sub add inc inc ljmp ret xchg pop push mov mov mov mov mov cmpl xor cmp add jle cmpsb dec ss add dec or ror dec pusha add bound lock inc push test lcall idivb jp push andl inc pop inc nop inc sub negb inc add push (bad) push stc push inc jne cld adc pop in stc pop sbb and rol cmp lahf mov test lock cmc movb or divb cmpl fsubrs gs jo stos mov outsb pop cmpsl mov pop lahf les inc sbb jb cs outsb and xor jmp cmp add in sbb cmp mov scas ret scas mov or mov pop (bad) scas sbbb out cmp sahf push cmp mov and fldt scas mov popa das fcomps push test mov and rorl xchg sti fsubl sbb pushl les imul outsl scas test shlb loopne xorl fnstenv pop adc add jge mov add (bad) (bad) jp push lret dec mov xchg insl aas fcomps mov shlb mov add or or lods pop aas push mov xchg arpl push lock push movsb call test sub jne add push jle adc clc and sbb sbb lock fnsave jne (bad) mov (bad) mov aaa setp ds push xchg std into sub nop mov adc jecxz sub das mov pop pop mov rcrb loope leave inc cwtl inc lahf jae jg cmpsb jns jg pop adc ds or fs ljmp or aad test ficompl lods xor jecxz jae adc fnstenv xor outsb xor pop (bad) mov inc out jae notb cmpsl out add cld pop push xlat stc in jmp dec dec aaa sarl dec jb sbb jecxz repz dec test pop mov xchg or push mov shlb (bad) mov rorb mov xor sahf cmc adc movsl or mov jge frndint add xchg je data16 pop (bad) mov jl jp pop popa shll mov pop daa pop fdivp test mov xor sbb imul call clc or sub jb xlat push or lods (bad) mov cmpsb in cmp cmp gs push mov mov and icebp loopne (bad) lods rolb push (bad) jl sbb out idivl cld jnp mov push aad mov fld into lds xorps xlat push push sbb mov movsl sub clc shll inc out xchg jne cmp lahf inc jmp sub (bad) xor inc jl mov lods in sub (bad) subl (bad) fisubl stc in (bad) int3 add adc sbb dec lea dec outsl fdivrp data16 pop in setg mov stos int3 push dec sbb dec test out mov bound scas dec nop xor adc mov or cmp sub pop fwait and jecxz xlat mov mov in mov icebp das dec stos inc ret cli push dec add sti jle mov mov mull notl sbb cld (bad) fcmovbe sub and cld cltd and mov mov xor pop adc adc lds pop push and ret out out inc ljmp cmp aas xchg pop rcrb sub mov lcall pop ljmp loope test pusha and mov fcmovnb sarb or push setge fucomp xchg (bad) leave push test or mov in in arpl xchg sub leave push and and stc sub mov sbb cld lock movb (bad) lock pusha and xchg mov (bad) ds inc jge push xchg or xor imull psllw lret push loopne (bad) pop popa repz adc cwtl into (bad) testl dec or add xor roll call outsb jmp add (bad) (bad) jbe mov inc and mov test or xchg jg imul insb mov iret cmp cmp mov inc in stos ret sbb pop mov dec shll mov jg dec dec xchg sub ds lret mov in xchg dec push rol bound loope mov push and (bad) xor test dec inc push fs pop out loope loopne out sbb outsb or movsl sub out xchg das test inc or scas xchg out into pushf adc pop pop test dec sub shll cmp (bad) (bad) jecxz jmp cmp jp popa inc adc inc fistpll cmp xor sarb movsl lret cwtl xchg sbb ljmp mov push and arpl (bad) ret je pop popa repnz inc fiadd enter add mov jae push adc test pop movsl push xchg mov adc mov inc pop in in and ss pop xor lea repnz mov (bad) or sub xchg dec dec mov shlb ret std jge dec (bad) fcoms cmp icebp sub fisttpll jo inc ljmp cli mov lock lret (bad) fisubr aam addr16 repnz xchg dec imul inc pop sahf movsl flds mov lods add lret mov inc jo dec or out push pop sbb lods movl outsl sbb cwtl mov and jo dec inc mov aaa lods imul out aaa inc mov outsb and bswap mov pusha and outsb cmp (bad) sub movsl adc cmc (bad) mov rorb jno xchg dec dec insl and scas cs dec test push iret mov mov (bad) jl add lods nop push iret test pop rcll or inc jnp jne add mov fisubrl xchg scas dec mov scas cmpsl std mov cli and das popa lds mov dec (bad) mov out pop mov pop dec mov stos mov aam sti or xchg movsb cmp dec int iret dec fadd popf loopne add jge aas add sub xchg or cmp jecxz push imul scas xlat leave push mov (bad) push xchg cs fdivr pop mov (bad) cmpsl pusha jbe mov sub stos inc fwait movsb sbb ja pop js jecxz add into adcl pop mov dec xchg lcall pop and call movsl mov cmp xor rcrb sahf jmp testl imul mov dec or inc mov sti arpl clc movsl daa movsl push adc (bad) das cmpsb notb sub icebp add pop jb sub (bad) or jbe push jle orb mov mov mov fidiv cli loope mov mov jg (bad) les scas lret mov pushf das bound jae push jae fdivrs repz cltd outsb ret and cli ljmp dec fimull loope dec jae dec xchg adc push xor movsb or jle ret adc jecxz enter adc es sub jmp or rcll mov test push cwtl fidiv enter or inc dec call inc pusha push fwait ljmp in movsb test (bad) and rorl jno sar push clc shll inc cmpsb clc jmp pop jp rclb dec cld nop cmpsl xor out cmp (bad) ret outsb inc push js sbb adc push int3 jae jno cld mull add int3 sbb jns or pop movsl push jl add lods int add mov out inc dec inc pop scas ret (bad) not and popa mov xor push (bad) mov pushf fwait cmpsb mov in jno dec inc stos insl and lret xor or or setl sub in aaa fidiv lcall jle inc aas adc in adc jecxz lea and dec cs pushf mov fisubrl enter mov (bad) mov xchg adc movb jecxz mov mov cmp sub push loop repz xor scas imul loop js and dec adc je lea fadds lea lahf dec xor xchg popf inc pushf repz jne push scas negb lods xchg fwait push cli aaa push sbb popf cmp dec enter and div jns lahf add ficom or icebp or sqrtps je mov movsl inc test push sbb in sbb or insb inc iret cmp cs ds sub lret jmp inc imul jno jnp gs push xor sub (bad) jle inc cmpl lea sbb sbb insb scas add movsl fnstsw divl sub jno loop inc sub push xchg mov ret icebp inc ds pop xchg mov pop dec stos pushf (bad) es push insb xchg adc push pop jmp popf pop xor cld ja mov out cmpsb sub pop enter cmp dec sub insb pop mov ja sbb pop movsl inc cmpsb mov loopne shrb pop push sub and inc jbe int pop jne or test idivb ljmp ret (bad) out lds fisubr add addr16 cmp lods arpl mov push sub out cmp pop xor xchg lock lock inc lahf out inc ret jg aas inc jge (bad) mov out and push and mov jmp roll sbb sub push sbb std cs (bad) ficoml xlat mov jae (bad) jb xchg jns push dec mov (bad) inc xchg in sbb (bad) imull test outsb popf or jae inc xchg push jbe aad pop mov dec ss rclb push sbb sub sbb shl repz add xchg cmpb pop cmp dec mov inc mov popw add movhps fcompl mov iret cmpl repz mov mov adc pop mov mov movsb cwtl dec aaa pop ret sbb cmp or nop mov xchg data16 in xrelease or iret stos jns mov std test fmul inc (bad) call add insb cmp pop ret cmpsb inc scas sub cmp or fs movsb or xchg movsb jp ljmp adc hlt sbb cs movsl dec xchg push (bad) repz mov pmaxub push fdivrl rclb ss dec mov ret or (bad) ret xchg loope jbe rol sbb int3 nop dec imull repz bound xchg ljmp fcoms mov das out and push lcall xor popf push xor inc cmp loop or mov push dec ffreep jge rolb xor pop or jnp and std mov test popf pop or ss sahf es daa jne cmp lods (bad) lahf (bad) cmp ss movsl jno pusha int sbb sbb lods pop test ljmp adc or invd cmp pop xchg dec cmp mov xchg sbb cmpsb movsl dec scas dec shrb xlat loopne cld mov sbb or ss aaa mov subl fcoms pop dec adc fstps dec or dec jmp sub ret jge mov lods stc imul fdivr iret mov (bad) or in rolb fldl sbb ss lods gs inc jnp dec push sbb sbb sbb sub dec fs nop mov (bad) xor adc xor scas cmp loop dec in push pop loopne into cmp lds idivb or dec and lahf mov loopne or inc mov stos stos or arpl push cltd repnz mov push dec je mov cmp adc push imul cmp adc decl dec sbb sbb loopne test dec mov in jnp or mov loope (bad) xchg and in (bad) mov fcomp xchg inc lea push jmp and sahf hlt push pop aas mov pop mov mov scas pop ds pusha xlat (bad) mov popa adc or push js jo jecxz in enter gs test jbe mov stos ds inc fldenv xchg orl push jl jge movsb scas push inc mov jg gs out dec jecxz adc or mov pusha ss push leave pushf cltd mov jne jp ds out jl hlt aam hlt scas add popl std xor and xor cmp stos scas sbbl int pop test lcall mov sub sub shlb adc gs or mov mov adc mov inc fsubrs mov push pop xchg dec js mov stc fcoml and jo jecxz fstpl mov loope and cmp pop pop fnop and dec cmp mov dec push idivb mov sub xchg (bad) outsl cld pop xchg ja cli stos aam push js push push stos pop mov fiaddl test inc rorb adc cmp mov xor push cld outsb mov mov lods jge or mov push or inc inc adc sbb dec loopne push stos pop cmpsb (bad) adc xlat icebp xchg call (bad) lods xchg sub leave stos mov lods add ss dec data16 call ljmp mov or addr16 das push lahf mov dec stos cmc pop les dec sbb sub inc xor xor rcrb ds outsl cmp jp add call imul lea jnp push dec je stos push xor pushl xor and je dec rcl jp dec push ror insb sbb fsub xchg mov scas mov pop sbb mov inc dec das fistl adc fwait (bad) ja push clc pop cmp movsl cmpsl mov sub jle cmp pop inc jecxz mov hlt nop scas popa mov push add test repnz pminub ja add repnz inc add mov jns data16 sarl imul (bad) cmc push aad mov xor in mov or fsub imul in mov outsb das mov xlat xchg into dec sub mov fildll and cmp cmp and popw sub cmc lret hlt jp pushf data16 mov cmp dec fcmovbe adc (bad) xchg nop pushf flds out repnz pushl cmp mov fwait ret sbb xchg inc shrl push ret arpl xor cmp into aam stc insl push fidivrl xchg add loope push sub pop inc push loope (bad) (bad) out lock mov scas sbb or inc add sahf xchg xchg negl div xchg daa or lods and subl addb add adc repnz insb sbb aad rcll enter add rolb stc sahf es add dec push inc mov adc test cmp cld fdivrs jge jmp ret jg scas lods incl add insl and das movb sbb dec jmp push ret popa sub rcll cmc lods pop stc xchg sbb divl mov ss test and inc arpl inc subb out mov dec push or in enter arpl test mov jge jo mov mov jmp push aad jg imulb arpl push (bad) fsts popa in sbb cmp in stos inc pop dec sub aam pop aaa cmp and sbb scas cmp fbstp mov mov pop jmp cmp sti adc pop inc aam daa mov mov (bad) push adc cmp in ja not mov lea cmpsb jmp sbb (bad) jl jl mov xlat divb xorl dec cmpsl lods mov lods imul (bad) insl adc lods cli popa cwtl sarl iret inc or adc push jns mov mov or inc popa scas mov in sbb rol push or fmull add imul enter mov in mov addr16 lcall test cmp pop cmpsb pop clc ret or lea sub leave push ds jmp pushf mov xor sbb sbb cwtl daa mov pop dec lahf imul in inc popf lcall jbe mov dec sbb shrl (bad) mov repz pop stc mov and sub sbb mov in dec idivb mov das sar shll test add inc push add or cmc dec into daa pushf and sbb pushf and sub mov or ret adc aaa mov scas fsubp mov mov (bad) mov outsl pop mov stc ljmp xchg push out xchg inc je and mov mov sbbb sub push adc cwtl add jle and pop popf adc adc outsl add dec xchg push lret inc fwait arpl sbb ss divb fs ljmp mov dec mov xchg imul pop add call cltd xor mov pop cwtl jbe test addb iret loop mov (bad) jecxz popf stos mov es sub loop sbb mov out mov in scas or dec mov xchg fcmovnb cmp and mov out orl dec movsb (bad) aaa mov gs xor sub or (bad) aas andl sub or adc lds xchg adc popa mov cmpsb insb fidiv mov stos rolb (bad) jmp roll or and iret sahf mov notb lock sbb out pop in cmpsl add (bad) mov cmp push (bad) fcom adc sarb lea add jecxz int stos xor fnstcw test add stos xor push fs fistpll mov pop insl fist mov pop loop adc inc ret and and hlt mov ret jno std mov jecxz push inc xor add xor not loop mov lods cwtl adc clc int stc int inc jl cmc insb cmp jl sub adc push push jne pop mov add mov cmp push repz sub or jb ret pop lock lret lret xlat dec dec dec cmp int3 jl sti in mov ret ja inc push inc ja mov mov xor push inc cmp push and xor pop dec nop push add in (bad) jmp xchg (bad) ljmp cmpsl pop movsl xor or clc test push lock xchg cld out mov push int ja in dec les dec repz xor ret mov inc mov inc faddl lea xor lds adc bound out arpl pusha add sbb mov sub inc sahf mov inc mov mov xchg and add inc call mov add aaa movsl fcmove (bad) xor loopne es pop pop ja lock sub mov xor sbb xor mov cwtl jns inc adc mov (bad) mov mov adc jge in movsl jno nop jmp lea roll push (bad) cmpsl jmp jns (bad) aas push pop push ja data16 lock adc aad lods cmp lea sub xchg imul xchg sbb outsb cmp lock push mov xchg xchg lock sub cmpsb insl lock movsb sub mov sbb mov aad cmp cli outsb mov push adc (bad) mov popa dec pop inc movsb enter ja dec out inc das jae add xor out sub imul and les add outsl in push mov and push test pop mov lcall das js int3 jnp cwtl fwait jl mov push jbe cli adc dec mov pop out dec jp jo push push int cltd mov push or mov sub ror lret jae jae jae int cs hlt mov std jae ret mov mov and sbb jl aad mov imul jl int mov ret lods jmp and (bad) jnp movsl arpl into ret pop jge lock pusha mov fistp cmp movsb mov jecxz mov jg repz push ds pusha cli cmp cltd scas stc mov sub cli daa mov inc dec mov sbb cmp test inc (bad) ljmp jl cmp aaa addl sbb aas (bad) (bad) ss push fsubs jbe pushf pop out leave mov push dec hlt lods jns sbb in xchg fstpl test loopne mov sub sub and inc jge and mov stc pop adc adc pop aaa roll cli data16 lret pop popf inc shll jg into movsl mov sbbb call and divb push das cmp mov inc jecxz mov ljmp add push push or sub sub into xchg shrl fidivr jg add jcxz lea out stos cmp push mov push out xor pop sub cmp int sqrtps lahf add enter stc movsb add mov mov movsb fist jge jl aaa mov mov sbb xchg xchg xchg dec jl mov cld dec int mov jb dec or mov jmp xchg xor xchg jge jg rol pop into fcom dec outsb push adc xor pop dec rcrl stos dec mov movl insl es xchg insl insb adc dec lea xchg lds scas push xor test cmp jge inc xchg cmp jne inc mov fwait xor push pop lret push jb,pn cli sbb xchg sarl pop movsb aam cmp push xchg push xchg mov daa cmp cmp (bad) and jnp aam jbe push enter rolb cmc aad (bad) push (bad) bnd and shll cwtl add jle aad sub imul icebp fsubp or xchg out cmpsb cli mov (bad) pusha sub sbb pop jns rolb mov out out mov outsl lea fmull into push xor into push pop dec mov cwtl ret mov cmpl and pusha or add and xchg movsl cmc lods cmc outsb int3 ss (bad) mov inc ss test jl pop push sbb mov sub je imul aas cmc (bad) xor adc test scas fsubrs call xchg jo inc movsl and or adc sbb fsubrs cltd sarb cmp test xor roll mov divl fs ljmp aas icebp mov sbbl sbb (bad) sahf gs andl in (bad) or and mov ja cmpsl outsl sub andl jp ljmp iret jecxz push pop cwtl push mov divb (bad) and and mov sbb sti mov faddl imul bound add inc jb xchg cld in out xlat xor fist mov fsubr pop push cwtl fstps scas insb dec mov rcl jp imul lea push push jg cmp (bad) lods jmp int dec adc sbb push in dec mov push daa inc ret jne xchg sbb adc nop adc xchg xor in pop xor or xchg mov ljmp rclb mov outsb push mov add mov std xchg syscall out pop (bad) mov and mov dec sub push test sub (bad) push add mov mov cmp sahf mov sbb sbb insl scas push mov mov dec pop sub cmpsl pop pop fbstp in jb xchg mov int3 pop jmp call and scas inc mov fs std stc cmpsl push dec jle andb lods push lods pusha in push out and mov cmp mov dec clc aas push sub out (bad) cmp mov adc mov and or mov mov (bad) fadds outsl shlb sbb ja ds popa dec push mov call scas cld (bad) test jle sub mov xchg pop dec loopne xchg jg push fisttpl jg jge mov or xchg xor cmpsb inc xchg pop xchg or shlb inc jno add imul xor add or je sahf imul jns push nop sbb aaa lcall xchg add fidivr clc ret fadds mov xchg addl aad mov ret enter xor adc aaa test fisttp lock aam bound or scas add jle mov test push mov iret mov or dec sbb lea loop dec fs adc sahf test sub push push les outsl es pop aaa xchg call sbb xchg insb xor mov out call jb push out inc xchg push aam dec cli sub iret or add addl push rol push enter cmp data16 inc out mov sub loope xor das add push outsl jecxz cmp movsl adc idivb jns inc xor mov data16 (bad) pop jb nop leave arpl hlt stos adc insl movsl add pop test xlat dec or adc inc push fwait lret mov jo mov inc jns inc fcmovb imul xor lods aam cmpsl outsl cmp test xchg pop xor or mov ss mov lea mov ss fwait fwait or pop (bad) xchg inc (bad) mov lret mov adc and pop xchg fimull out push jecxz add push in sbb mov scas add daa dec pop lea and insb or in into addb xchg dec imul sub rolb lock xor xchg (bad) popa lods mov dec sub jecxz ficom sarb jmp adc lods test add sbb test and mov mov fbstp repnz mov (bad) mov into loopne inc xor dec push lea lods lea jecxz bound leave iret out mov test in mov (bad) lods mov xchg fcoml test inc cmp inc cmp sarl (bad) stos push pop scas loope mov repz inc ror pop das pop push jg xchg fisttp cmpsl dec sbbl stos (bad) dec or ret sub or pushf xchg xchg pop es lds loopne cmp push pop cmp aaa sbb (bad) mov rcll inc (bad) push (bad) xor jnp out or xor mov push (bad) mov fcomi add enter mov mov sbb fcompl adc add stc les jge mov mov in inc stos dec aam xor and fiaddl inc cmp subb repz pushf sub inc jnp mov cld xor shrb mov (bad) push fimull pop and fxam pop mov ret imul inc ss sti ljmp push addr16 inc test cmp push fisubr jg (bad) in mov pop fistl stos inc aas (bad) xchg notl repz stos jg xchg jnp sbb neg in (bad) ss gs and out inc inc mov imul test push cli and jl dec inc pusha or inc mov mov cld (bad) mov aaa enter xchg sub pop mov popa daa add and in jmp adc (bad) fmul mov sbb jmp fwait push (bad) aad (bad) dec jns es cmovno pusha aas iret (bad) push xchg inc mov pusha cwtl sbb jne mov sub xor pop pop cmpl push scas xchg fildl push xchg into jnp jecxz (bad) ss stos jb sbb inc gs fmuls aam or pop pop cmpsl lods movsl (bad) and push scas pushf push sahf cmp lret mov bound add ss xchg adc dec mov std xlat inc scas pusha xchg js dec sysret rorl or ss repz mov or fnstcw mov and fdivs or mov rolb pop pop lds mov or lea (bad) fbld fldt jmp std add push dec adc pusha les bound xchg adc xor pop adc stc cmp ja shrb dec add sbb sbb loop mov push xor or cwtl (bad) aaa punpckldq mov sbb mov sar mov clc dec ljmp int3 xor aam or dec dec xchg inc push std adc icebp sub lock lret xor fist push and (bad) jge xlat lret mov leave pop enter mov jl push xor jmp and xchg pop repnz addr16 ret xchg js jae outsl repz inc jb aad (bad) push out inc mov (bad) int3 dec inc (bad) dec mov mov (bad) and stos push pop dec cmpsl into and das lret jg (bad) sbb jo mov frstor jnp popf popf (bad) jge mov adc arpl mov pop adc pop push jnp inc jb imul sub and xlat std push sbb dec mov and rcrb xchg out xchg inc push (bad) mov add pop arpl (bad) sbb xchg cmc jp loopne xchg cmp daa sbb dec jo sbb int3 mov cwtl xchg stos mov mov mov loope xchg adc mov loop jb dec int sbb cmp int3 aad sub (bad) loope cmp xchg xchg adc jbe sub orb sbb sbb inc push imul mov jb xchg mov fnstenv stos push or jnp js mov or xchg mov sti scas pushf into lahf clc mov sub cmc imul sub inc and dec adcl jg xor fist mov divl cmpl mov push mov insb mov cld daa sbb dec mov idivb data16 and dec orl xchg mov mov in shrb dec adcl (bad) stc xchg pop sbb cmp scas stos xchg xlat lock sub jno cmp or das (bad) add inc movsb les shll jae jae xorb add loop add jmp push push mov sub cmp cmc rorb jno scas (bad) in or ficomp and lahf shrl pop (bad) in mov scas mov movsb rorl push lock std or xor push andl mov mov test daa das scas outsb popa popa add add mov mov nop in mov call lock out xchg and mov cmpsb dec (bad) mov lods hlt pop and xor cmp pusha subb shrb aas pop enter (bad) xor inc ljmp sbb and jno fcoml mov stc imul loope (bad) repnz leave pop inc jl addr16 adc push add mov leave jle cmpsl ds dec lock repz (bad) add jle insb and inc enter jmp aam or or int xor mov mov ss add dec pop mov stc mov fistp ret cli andl sbb pop cmp out sub xchg jp sbb xor xchg mov pop lahf xor push ja mov push xchg call out imul mov lock hlt ljmp fwait scas (bad) cmpsl aaa inc sub mov call lcall out xchg stc mov and xchg scas sbb in iret stos add sahf fldt jns and icebp mov xchg xchg adc cld sahf cs loope lods inc and icebp jo cli cmpsb aaa test not push mov mov lds mov sbb add pop stos lock or jl jg jns and pushf mov arpl int3 adc lahf or pop ljmp adc outsl imul (bad) xchg outsb add push or push push ret stos pop mov popa mov fistpl das pusha out jp or push fs roll inc into aam dec xchg call adc test lahf dec repnz jg jne or jge adc insb fimull xchg push fs push mov (bad) shrb cmpsl jmp icebp dec sub sub mov dec mov imul pop jp pop or xor push cmp cs jne xchg out cmp xor cmp (bad) push aas in (bad) mov ljmp popf pop mov sub stos and jbe scas sti push xor cmp movsb adc push pusha outsb daa popa dec movsl or fisubl fcompl pusha lods les adc shrb lods cmpsb push data16 shrb inc jno pop in cltd xchg into js cmp aaa bound sub push inc sbb in mov cs popa outsl divb cmc push stc push cmp mov mov mov je cmpsl push cmpsl (bad) jno pop and test xor mov jne dec jno sbb std push xchg push nop (bad) add push mov fsubl mov fwait (bad) sub daa inc (bad) mov cltd sub insb fmuls negb sub loope sbb mov bound inc sub aam movsb (bad) repz jne mov dec jmp (bad) (bad) inc push or fsubrl or (bad) shlb hlt or adc sti loopne clc add push out lods cs push je (bad) ss push scas stos add cmp cmp imulb nop movsl sbb mov fidivr mov pop xchg cld in arpl jno sbb push fcmovne xchg mov ret mov movsl push decb dec fidivl sahf pop mov ja scas bnd cmp mov inc inc rol xor xchg dec clc add inc dec outsl std cmp cmp pusha inc push mov push arpl adc mov jbe xchg stos enter fsubr ds jecxz xchg bound and test out (bad) mov cltd cmpsb mov pop or hlt adc lock xlat clc enter and aad push int cwtl xor movsl jmp mov sub sbb in lods jg mov jecxz (bad) cmp (bad) in cmp inc outsl xchg les addr16 or adc sbb stos adc sbb sbb jp sbb sbb mov imul stc into cmc and mov arpl inc pop (bad) xchg sbb sub pop push test inc mov (bad) imul xor xchg rclb ja daa add adc sti xchg add aaa xchg pop stc lods mov inc jnp cwtl bound xchg jle loope movsl insl push leave popa js sbb jl shrl ja gs imul jnp enter out scas adc lds xchg push negb (bad) cli sbb aas out or add sub andl add mov (bad) icebp scas in pop lret xor data16 dec jo das out pop add inc divl inc mov adc je je push adc fild and imull cmp add scas or xchg insb nop xor fistl xchg rcl xchg out pop sub sbb xchg mov std mov pusha pop addr16 dec sub jmp adc daa shlb lcall les fisttpll int pop push lods dec cmp dec fst daa push mov cli or (bad) add orb push insb xchg pushf push push pop jmp xor add jo jae pop nop xor pop dec mov in cld sahf lods push pop pop lds jno test ret test ljmp movsl cmc int push cmp cmc mov mov punpckhdq cwtl mov out les pop movsl jae (bad) gs shrb rolb in test jle loope movsl jp movsl out cli inc aad ja mov push sti jl ficom jle rcl jbe xchg jnp (bad) stc dec pop and mov pop sbb jno mov push sti dec mov lds jle scas inc adc icebp iret cmpsl adc jle loope push cmc cmp in push out imul fnstsw stos insl hlt ljmp jno clc loopne push sbb data16 mov (bad) sahf jle mov mov add ficoml push push add std outsb xor (bad) stc (bad) or cmp mov fs cwtl mov pop popf cmp or dec mov repnz popf jp subl push jmp and loope cmpb adc cli add ret mov inc jb jbe movsl iret nop ja leave jae es jne out mov xlat add cmp mov in inc imul fdivp pop xlat dec or and imul fcomp and test jle xchg mov inc xchg clc pop stc mov inc test cmp jae mov push cmpsb sub lds fdivrs fsubrs cmpsb call pop sub lcall pop iret cmp rorl std jbe xlat add int in arpl mov pop push aas xor sbb ds lods hlt icebp sbb cltd mov jg (bad) xchg stc cmp push scas pop mov and and mov lods add jne cmpsb jbe mov sti insl adcl pop adc fiadd and sbb aad addr16 push mov inc cmp sbb test mov mov pop into jae jnp or inc inc insb ljmp data16 push dec inc adc adc mov sub jmp insl movsb xchg adc data16 (bad) mov shlb jecxz xchg mov hlt cmp jno cmp notb jb dec push cmpsl xor sub cwtl (bad) lock xchg insl cmc (bad) insl xchg dec fstps lds scas repz mov int push fcomps xchg and pop pop pop pop cmp xlat in test mov fs or fcompl inc cmp inc jnp and fadds fistpll loope mov leave fs fisttpll mov xor mov cld mov enter loopne lcall jbe sub sub xor pinsrw shlb lea (bad) decb movsb mov movsb jl mov icebp adc add aas enter xchg lock xchg mov ret inc sub (bad) in pop add jmp aas and popa ss mov push xor jno sti int imul mov fwait rcll scas test push lahf fiadd cmp mov sub and movsb xchg cmp mov or popa pop addr16 push jnp mov xor rep (bad) in and ficompl negb pop inc cld addr16 jne push lea je es mov fcoms int3 pushf iret ljmp xchg mov inc jmp lock mov cwtl call mov push rolb jl inc loop mov lcall dec sub ret push xor lea pop fmuls (bad) repz jb sbb mov ja mov cs aas arpl dec sarl aaa and aad (bad) popa aad lahf pop pop xchg lret and cmp xor mov fbstp xchg stos mov das arpl call out mov jne cmc mov mov adc mov or jmp dec jg sti add inc fmuls imul addr16 daa dec nop ja cmpsb mov mov ja (bad) rcr sbb cltd pop pop out in or mov fcomp mov inc (bad) bswap nop (bad) dec pop fwait (bad) out jb ficompl cmp push jmp hlt xchg sti dec inc in daa push stc lods cmpsb jb imul (bad) jmp jmp add scas pop jge int fistpll dec (bad) out test mov fisub adc insl push push cmp popa orl scas adc mov pop das cmpl call mov lea jp cmp xchg aam adc inc lds ja in aas mov (bad) pop (bad) push mov jne inc je lds dec push or sti sbb mov xor pushf adc dec push and mov inc mov mov out xor popf mov cmpsb iret and (bad) adc pop out jns pop std outsb and lea rorl xor rcrb and mov inc loopne jbe loopne pop push xor std mov adc ja mov inc push push mov mov mov adc icebp int3 divl pop push xchg inc sub test jns imul scas nop icebp das jl push (bad) out jmp std je in aam mov lea loopne stos lea out ret xchg leave movsl xchg cmpsb arpl movsb ds mov xor mov cmp test aaa push sub wrmsr adc dec iret lret test dec das sub (bad) jae jp pop dec aaa es loop inc mov dec inc or mov in lret aaa leave mov test repz jne jp adc in fisubr aaa or loop (bad) out xchg pop sbb pushl aas stos rol mov ds adc lahf adc xchg xor jne mov mov xor xchg mov adc cli imul mulb adc pop stc pop or push stos lods cli dec loop in and pusha call xlat and and pop lock pop das sti fimul imul dec inc bound and pop push xor jb jmp mov jb mov mov pusha xchg sub test test jns or out das jp dec adc sti add (bad) insl pop mov add dec cli mov and (bad) ljmp pop clc adc outsb xchg push out and cmpsb and push push jl (bad) and aaa aaa jecxz das and sub sub lcall push nop jbe fcmovbe ljmp movsl jl addr16 or push mov dec fdivrl lods mov out ret js xchg sub xor mov sbb push iret pop in pop mov clc ljmp or pushf gs int test (bad) aaa pop iret xor xchg lret cmp insl fs pop mov (bad) jnp jecxz cmp jnp xor lret pop mov sti ds sub jge ret xchg mov out and push int3 cmp push xchg cmp fnsave stos out scas adc pop movsb repnz shl arpl jg or dec out dec hlt jl loopew int3 dec mov fwait (bad) aaa fild scas push ss rclb cmpsb pop inc xor (bad) fstl xor cmpsb inc fsubs pop pop push cmp cltd mov mov and insl addr16 icebp sub or cwtl gs xor pushf jmp push (bad) mov sti dec fbld addr16 lret mov addl or dec xor mov sbb mov decl xchg and sub out push and pop jns nop mov mov cmp push aaa sti and pop stos imul rorl mov inc push sbb lahf movsl fs loope outsl mov add pop sbb mov sbb xor or fs add pop je cmp cwtl pop inc and xor and cli mov out mov and test sbb mov dec mov and mov mov std stos dec dec xchg cmpsb ljmp (bad) jmp out rorb insl test test iret nop pop xchg sti inc in jge leave (bad) (bad) movsb decb or movsl scas xor and (bad) ljmp push mov mov (bad) ja repz xchg je adc ja ljmp aam icebp cmp mov fisubr mov iret pop hlt push xor (bad) push aaa clc mov je xor sbb jecxz or enter sub dec mov in lret add jns imul ja sub mov jbe les (bad) jae jle into mov loopne push mov jno fwait jno loopne pop xor xchg push fstps cli js popf outsl pop push pop sub (bad) jge shrl or cld jbe lds mov das in clc mulb jmp sbb mov jnp mov mov lods sbb push inc push xchg pop sbb dec sub into adc fimul outsb mov jns mov rorb clc ffreep dec in mov push cmp scas into (bad) lcall xor xlat test aam add inc pop aad mov adc sbb aad popf scas aad addl hlt pop dec fisub rep inc or pop cmp cmc lmsw xchg pop cmp jl sahf adc sarb add push mov (bad) mov mov jp fnstcw fisttpll jb xor outsb mov int cmp push sbb stos mov sbbl popl rcr jmp mov jne sbb loope int push and sbb cli adc nop enter (bad) in mov imul nop negb mov mov inc pop sbb movsb cmp insl xor test test mov adc xchg sahf adc cmpsl push popf sub jecxz push insb dec imul aad cld sbb sti xor cmpsl scas jne aaa jg pop add push lods (bad) dec xchg xchg and outsl push mov jp std xor xor movl mov or loopne sar xchg outsl jmp leave dec adc cmpsl adc adc into inc inc ljmp pop jge testb pop sti inc adc sbb lea das push mov or mov xor leave dec mov out ficomp inc sar sub cmp inc xchg sahf inc nop sarb stc movb pop pop sbb push incb push lock in daa jg in mov pop adc push test xor (bad) loope mov (bad) mov mov adc mov scas int ret cmc xlat push les mov jle pop stos dec pushf mov dec fisubr push ja mov incl pusha xchg adc popa incl xor mov adc inc xor mov sbb pop jecxz add cmp jae (bad) or xor out push sub data16 enter jp out xchg mov cmp and cmp sub in ficom jo pusha dec lret icebp insl or adc mov or mov jne or adc cmpsb sub inc je add inc movsl adc movsb jge repnz repz add clc pop popw inc clc imul xchg es or fsub push test sub loop cmp xchg outsl insb fnstsw fmuls lock mov inc pop inc bound sub jno mov xchg cmp daa mov ret (bad) stc inc shl std cmp aam push lahf dec cmp imul mov insl pop les sbb pop mov jb and dec add adc jno imul inc popf mov mov sahf xchg scas imul jecxz cltd cmc lcall pop cmpsb in sub je aam idivl sub adc out xor aas push fnstcw jne fs lea ds (bad) (bad) out push adc js push mov aad outsl flds (bad) sbb pushf jo cmp or clc test dec fbld mov lea rcrb xlat subl xor add pop jb adcb fwait jb faddp xor cmpsl sbb xchg leave es fwait aad pop xor popa and hlt jle cmp addl push mov (bad) xor jl insl xchg fidivr fwait mov jbe (bad) cmp mov cld fs jno or sub clc test sub push cmpsl adcl adc sub in push jle addr16 inc or (bad) movsl dec mov mov xchg mov or mov mov (bad) xor adc jbe outsb fs daa sbb test sbb add add mov dec cltd rorb xchg in push mov push loope xor fadds mov push sub imul or xchg das push sti jg pop aam outsb in mov iret (bad) in nop jmp push jnp mov aaa push mov sti push aaa mov mov stc dec sbb jg mov jle stos dec jns popa xor icebp jnp test cmp in inc loop push mov jl stos mov dec mov xor mov or lcall fcomps js aas fwait loope popa hlt ds fucomp out xor add jp mov ret es in inc mov fistl bound jo (bad) ret sub pushf adc jae xchg hlt jg cmp fdivp and shr lcall into jg fnstenv cmp push test mov sub add lret cs inc (bad) ror xchg push sahf repz inc and fucomi aad jmp xchg mov rclb and in pop fisubl add dec stos out pop pop and (bad) adc popf or jmp hlt les cmpsl in insl jecxz sub mov xor call ss outsb (bad) test outsl std push pop std sub (bad) jo lcall xchg popl daa and scas push (bad) daa lcall mov arpl jg fisttpl fst jmp into sbb push xor mulb or dec stos pop mov (bad) sub sti xor sbb sub daa mov dec push jb mov adc and ss js xchg lret add jns push stos or push push jmp sbb mov mov and fdivrl notl popa fcompl jecxz imul jp int3 adc jmp add out test mov hlt mov idivb insb mov lods cmp rcll stos scas cmpsl push in cmp xchg dec ret subl sub sub push push pop cmp clc jle mov and fnstcw mov pop jnp push xchg ficompl jbe xchg dec push ret and pop outsl iret jl jecxz push ljmp aad mov test adc push bound push js sbb ja stos pop leave cld jle xchg es hlt cmpl popa data16 loop test mov adc and push or xor or aaa lock pop pop sub push out rep xor adc cltd pop and pop fisttp addl jb cmc jl jae jb sub pop or mov and jl dec and fadd in imul inc es iret outsb inc (bad) or and fwait inc mov push push lods jg (bad) lds adc push pop mov lret mov and jnp arpl mov sub lret sbb pop push lcall sbb adc jmp stos or call test or fcoml mov fldcw xchg and push xchg xor cs jbe das cmp jg ljmp imul mov fcomps das adc cwtl xchg jp cmp pop and inc scas popf sbb and sub and cwtl add pop es xor jb rcrl or cltd inc int3 jno pop aad mov jl test sub scas fstpt dec leave sub stos jg adc movsb fsubl loop gs add mov or dec adc test repz push outsl push test sub test mov fnstcw les fistpll aaa fsubl pop mov loop push imul testb out pop in cmpsb dec ret jle in shll inc push out orl xor std and adc mov sub (bad) xor sar mov cmp test mov mov or mov xchg test movb or add addr16 imul and popf pop jmp mov js test mov rcrl repz nop mov (bad) mov xchg popa scas imul sub and leave adc xrelease lods inc (bad) call stc or pop push jne das fcoms shll xchg mov (bad) lock sub cmp popf mov iret les cli or inc rclb dec adc mov aad rorl jo nopl cmp ror in roll sub jle push jne js lcall (bad) cltd sbb xchg out xor decl enter push popa fldt xchg xor out imul lods dec daa cmpsl cld pop outsb mov outsb sub pushf xchg mov hlt out mov mov and jne jecxz mov sti in movsl lods cmp dec mov scas aaa inc test (bad) xchg jl adc adc and xor or lods sarb scas inc ds (bad) std or dec or jb mov cmpsl loop gs daa les sub pop stos out cmp (bad) sub repnz jmp repnz out inc dec in arpl jae (bad) pushf or sbb insl out push ffree sar jae fldl scas ja loope outsb mov mov (bad) shrb push popf cmpsb jmp adc jmp jnp out in xchg mov and mov sahf fdivs mulb mov mov sarb jle push add cmp inc or cli insb dec or adc sub outsl mov cmp call pop int inc aaa ficoml push sub sbb sub mov dec fmull imul scas mov ficoml cld fidivl mov fidiv test jmp xchg mov aad xchg add adc bound sahf pop in ror xchg in sahf lea sbb adcb mov jl adc mov or test jno aam inc fwait subl xchg jae mov sbb sbbb fwait iret stos inc lock stos (bad) mov imul insl cwtl mov push or shr mov dec jnp fwait insb (bad) jns stc jg ficomp ret loop xchg inc out dec mov in outsb dec xchg rorb test (bad) or repnz or out xchg xlat in push (bad) outsb inc jnp vpaddusw and das jecxz push cmp dec ret inc jl and lea in jbe pop mov xlat mov fstl xchg aas mov dec jne dec stos mov sub ret addr16 sub cmp loop repnz fisubr jns xor scas inc or dec push js (bad) jno jge mov push push shr in adc loope ficom push cmp nop fcmovu add jecxz add dec iret mov sub (bad) cld add fldenv out sub sbb ret push adc push mov stos les test fdiv fs outsb rcll or stc cli js cmp lods sub fdivr pop repnz sub ss (bad) add fmul loop xor push pop and repz inc clc sub cltd lea das fnstcw aas mov inc (bad) xchg adc leave repz mov ds lret jbe jns rcl add das popf add jle pop daa loopne jecxz nop sarl xchg sub xchg xchg pop sarb dec test xchg or rorb lds sub xor aaa loope sbb and pop push xchg fisttpl enter cmpsl (bad) push sub push arpl std pushf jnp inc jno sbb xchg push inc (bad) adc inc xchg in inc inc incl or jg daa dec push addl fldl mov lahf imul xor jno xchg movsb push push xorl dec cmpsl add adc ja (bad) fmull popa dec push pop stc (bad) push in jmp mov cmp fcomp dec sarb inc scas adc es sbb das test jne rcll fstps mov xor xlat sub inc mov sbb pop sbb cmp xor sub fs jo jo and loope pop pop or out sti add fcmovb inc test xor inc stc cmp xchg adc push negb sub sub frstor cli mov (bad) int cmp jmp add fadd movsl and insb inc mov xchg outsl into mov pop lahf sarb push xchg pop cmp mov push nop fimull inc jnp jo addb (bad) mov fwait mov (bad) or (bad) fisttpl clc (bad) ja sahf sub xor int das pusha ret jbe sahf addl mov xchg dec mov xchg mov pop xchg (bad) sub mov repz add in push mov push outsb lock sbb sub xor cltd push (bad) hlt or mov aad sbb push test jg sarl xchg sbb ja es or fcomps xchg icebp xlat icebp (bad) mov lahf bound subl hlt pop sti xor leave in or shr mov sbb dec insb aam xchg stos inc xor aas fdivrs xor int (bad) not push mov (bad) sub std imul pop iret das lods das cld add xchg ljmp jo dec leave outsb lahf mov arpl cmp dec jmp mov cmp call inc repnz pop es in or inc sub jbe aas jecxz test mov jae std aad mov jnp xor dec adc fcoml cmp sbb notb (bad) push mov scas cmpsb out popa lock mov leave mov in clc mov or sbb movsb ret mov out push lods ficompl (bad) or scas in push sar lock adc fistp lret sub aam xlat outsb std jns sbb or ja mov or cmpsb jo jmp int3 stos shrl ljmp aam fdivr adc lret pop push test mov mov push lret arpl xchg leave loope (bad) push lea sub mov add jge mov repnz or loope adc cmp jmp mov sti cmp aaa (bad) sahf cli xchg jle imul aas insb jns adcb (bad) sub cmpsl test outsl addl push dec enter out addr16 sub mov adc push jb mov mov and mov mov jl cld enter sbb jnp xor call imul scas (bad) mov dec xchg hlt ja dec mov xchg mov xor jge cltd jge inc mov and mov pop and sbb or inc stos mov push cmp mov jle sbb jo fnstenv mov mov and in or les cltd lcall mov sti aad scas jbe dec push cltd jge ja (bad) repz jnp add lds mov xor xchg stos mov xor sbb int jle sbb daa movsl mov sub mov (bad) adc ret pop sub cwtl cli jns and or cmp fwait stos int jg fnop fwait push xor inc xlat push or pop fiaddl (bad) fiadd mov (bad) shlb sub aas lret (bad) in mov push movsl sti (bad) rcrl sbb xor aam test mov subl nop cmp push sub mov repz mov mov (bad) xor adc out xor daa or mov inc (bad) es fnsave shll fldenv cmp jle and xchg mov inc dec and (bad) daa xchg inc gs cs push jmp xchg xchg adc push hlt dec movsl fwait add sti addr16 stos cmp stos mov adc ss xor mov or cwtl push xor gs andl pop adc insl sarl push (bad) push adc or fldl adc mov mov cmp push sti in adc jmp cmpsl ss and sbb aad ljmp mov aas add insl rolb push push inc sbb sbb or mov mov xchg (bad) (bad) sbb out push cli and lods mov cld (bad) mov push mov adc mov cmp (bad) in dec out lret (bad) loop dec arpl ret mov mov js pop push cmp lds stos inc in and test pop and cwtl stc dec mov or and adc push in push jno xor cmpsb mov into jge dec add sbb rcll push repz add lahf add in push divl pop out fistpl push sbb lods pop xor popa sbb and push test push loop int3 aaa std dec shlb lds ret xor lock and jl mov sbb mov (bad) rep pop inc flds jbe shld nop (bad) shrl cmp sbb pop jecxz into fisub pop push adc in pop enter addr16 es lcall xor aam and test mov mov xchg in ja xchg jge jl dec pushf lods push xor mov fdivrl loopne dec mov push aam mov dec jns,pn sbb xor mov cmp cmp mov sbb loopne jmp adc ss rol xchg fmulp (bad) lret mov fwait cmpsl cmp or pop movsl pop roll clc sti push or pop cwtl dec inc and lret test (bad) push jo jbe sarl enter inc out and seta pop pusha sub push stc jmp dec inc mov (bad) mov sbb test fistpl or ds arpl add push add and cli jg gs cmpsl cwtl out mov mov rcrl inc divl and adc adc cmp pop aam jnp rclb sbbl or dec pop fdivl xor imul cmp push fstl jmp lret aam sarl inc cmc jbe lcall fisttpll xor adc repz xchg ret ret sub and scas fwait adc icebp in push lcall (bad) fdivrs mov je je xchg gs inc mov xchg lods mov gs jno in dec or and incb fpatan lods (bad) xchg adc sbb stos popf les push dec jno or insl jno cwtl or mov ja push mov pop xor ret (bad) scas ficom inc jle jae push test sbb je idiv cwtl ja mov (bad) lahf jne stos or jle divb in lods add adc or xchg sbb test shlb jno mov jmp sbb jbe jo pusha decb dec mov xor jbe outsb inc fwait (bad) int add (bad) dec jns es pop pop cmp sub aaa adc jg jo or push dec test inc lock call fxam lret adc andl and mov xchg outsb adc test fwait ljmp (bad) lods out adcb mov repz clc popf es push js fs xchg cmp (bad) xchg lret mov sub js pop lahf ret cmp sbb daa test cld dec (bad) dec dec orl xor mov xor (bad) push data16 mov xor mov (bad) fmull adc lods mov icebp imul clc xchg mov pop jns inc test xchg and shrl pop outsl movsl stos movsl dec lods movsb jae in jnp lret ds push imul fiadd (bad) adc js push out inc addr16 push dec out aas (bad) push sbb mov int mov gs aad mov cli ljmp mov mov or scas jp call movsb lea mov loope hlt add cmpsb push test cmpsb sbb jne and js or clc mov mov pop push sbb adc mov lcall pop outsl ret insl fucom in call xchg or daa fwait push and or mov cltd bound mov xor pop mov or pop (bad) leave pop fs in cli mov cmp xchg in popf xchg icebp dec inc test adc and jo movsb fiadd push movsb pop jae and pop sbb dec nop adc jg in mov rcrl lcall add pop cmpsl cs lret cmp pushf cmp mov andb xchg mov cmc repnz cmc mov inc mov fwait ret mov cs cli cli int push sbb fs and add xor cmpsl fistpll cvtps2pi lret mov pminsw test sahf mov pop pusha push jmp icebp dec (bad) mov adc sub sub jo jmp mov mov or cmovne dec push cwtl mov jnp repnz inc xchg mov xor inc arpl movsl enter mov mov lods ret mov jge fwait mov inc inc lret jecxz jae or out jg adc xchg and mov aam inc fs add addl xchg cmp js jo je push out jl sbb aaa add shlb and js stos push stos xchg into xchg inc cmc loopne imul repz aas mov jbe xchg pop or jnp cmc or dec push jmp add cmp xor lods or ret sub sbb fbstp add flds xchg rolb in enter insl imul sub (bad) movsb icebp call adc call and aam jo fcmove pop pop lds repnz cmc inc cmp cmpsl cmpsl inc push dec in fadds je inc xchg sbb (bad) lea repnz push or xchg xchg xchg insb icebp inc mov loope test add xlat adc pop in inc fnstcw dec int3 pop inc mov sti fwait xor jp mov bound pop rclb movsb shll es stos mov mov jb xchg mov push sub stc jnp and arpl cmp repz sbbl int3 inc test cltd (bad) fwait xlat (bad) out cmp fimull mov jb sbb aam test cmp aad outsl lods (bad) adc std xor push aad sbb js mov lods fsubrs sarb stos test add mov sub (bad) dec xchg xchg cmp mov add insl jge mov cmpsl mov lret push jnp push xlat xchg sti sub clc mov xchg and int mov jb jp ret dec and jno add inc lods and inc sar xor or aaa mov push cmp mov adc jbe mull out mov data16 ret mov mov inc sahf mov mov and inc xlat xor fwait shr daa sbb mov clc xor testb xlat xchg pop jg mov inc jp stc cmc mov loopne test daa jnp outsl popa pop fdivrl xchg enter xchg mov sahf lret jecxz inc jp jne in popa push add hlt aad into xor pushl push lcall test aas pop lret mov lahf daa xor pop pushf xchg neg subl pop or jecxz scas pop xor ss jo jno test das adc pop cwtl out test sar cmpsl xchg scas dec inc and mov or pop sbb mov add jb scas fdivr mov jle push mov sahf (bad) clc out outsl in and das cmp add jl or leave pop sarl xchg push aam and cld push (bad) out add push mov out in aaa emms sbb xchg xor stc push stc popf pop adc mov pop ret jmp pop ret in mov aad cmp cltd in fistp enter xchg mov cmp pop adc adc push pusha push (bad) loopne imul inc push popa insl sub mov lods repnz and cmp push in lret and out ffree xchg or push js dec sbb dec addb in shrb mov mov dec movsb imul mov das adc mov aad cmpsl mov adc sbb dec mov enter mov add pop ljmp dec pop or mov xchg mov stos inc movsl inc jecxz rolb lret fcomip call out scas sub leave outsl outsb sbb add jnp inc xchg push jle inc enter popa mov cmpsb dec mov or pop in jmp mov push aaa jbe in (bad) adc xchg push int inc int3 daa test ds or outsb xor mov jmp sbbl out rcr xchg jbe cmovbe xchg daa xor xchg jb icebp jae das in add dec mov mov jmp push ffreep push pop movsb outsl in cmp aaa pop dec sbb jge pushl mov imul or push push inc ds negb jle pop xor sub jg shrl outsb mov push rep in dec pop jns push test mov bnd shlb dec mov rolb repnz and ljmp test xor (bad) jne mov pslld jecxz push jnp sbb mov test fs ficomp push inc sub xor cli in pop jb sbb push mov ds (bad) xchg or addr16 mov jecxz jae dec jb jae mov sahf and scas dec cld pop scas scas test in xchg std dec jnp inc cli cwtl cmp jl jnp cmp int3 (bad) pop (bad) jne xchg cmp xchg adc loop,pt fisubr in fisttp lret xchg mov lret lcall frstor fcoms jecxz add aad dec and cmpsl and rcll imul push push hlt push pop or sbb inc scas push movsb popa lcall push out in clc cmp mov mov sbb cltd in cwtl enter push sahf mov ret out xor and mov pushf outsl push and and rcll popf xchg repnz pop push pop cmpsw cmpsl leave add ljmp roll mov dec (bad) aad jle pop add inc (bad) inc jo lods lcall sbb loope stos vsubss cmc mov sub mov rcll xchg int sbb xchg movsb test push fs xchg loop sub cmp ljmp xorb pop sahf inc sti sbb or insb sub mov popl inc adc mov inc btl insb jb lea xor sahf sub inc xchg adc icebp shlb test dec dec mov mov add inc dec ffreep jl or es popa jmp cltd repnz movsb dec xchg loop rorb jl test scas inc push je xchg movsb dec jge pop (bad) negl add sarb sti addr16 pop scas mov cld and mov dec push mov daa add fistpl mov inc add popf les jecxz stos jae or sub (bad) fmul inc adc scas push sub cmp jo mov (bad) mov scas aam ret stos jl or fwait and jbe inc dec divb js cmp nop out arpl dec imul loopne inc daa xor std (bad) xor (bad) aaa pushf xor (bad) pop repnz out (bad) mov or xchg or pushf bound das sub dec push jnp je and scas fdivrs adc push xchg out iret lahf xchg mov cmp mov mov into lods mov in xor inc scas mov dec adc lret push fs mov add sbb movsl pusha test out push (bad) scas or aas mov mov cmp pop xchg outsb push and mov out add repz and outsl popf ljmp mov rol loop lret add jl or mov (bad) out test (bad) out in inc cltd mov fsubl xchg ja imul adc xchg addb stos pop fldt cmp movsb aad push xor adc rclb (bad) leave lcall sbb pop into mov ss xchg push add outsl rolb rcll mov repz add shl insl cmpsl arpl mov addr16 mov sub adc mov sub dec xchg leave arpl clc add nop dec mov cltd negl jne push sbb stos jae data16 scas add add mov and pop addr16 fiadd xchg lcall in test mov and jne jecxz xchg sahf pop outsb jb jo lahf dec adc insl mov hlt cmp test cli out inc pop test mov lods (bad) in push jl repz jge mov cmp mov dec in outsl (bad) jecxz (bad) mov jmp mov pop stos aam sub push jg xlat stc push lret in adc dec push aam push sbb adc xchg cmp mov inc adc mov clc outsb pop inc in add fwait outsl jo (bad) pop test dec mov push dec imul lods xor in insl imul sbb push pop insb lret mov (bad) adc sub jbe and pop je adc int3 mov push jmp sub imul jae mov mov pop lock fsubr cmp das mov mov xor pop dec out mov push xchg in lret out scas xchg dec sbb pop pop inc or mov xor (bad) sti push or sub into mov sbbl inc ljmp scas pushf push mov push or jmp mov movsl xor sbb sub jmp adc mov outsb out xchg loope xor fincstp cwtl and movsl mov mov mov mov mov fildll daa in sahf sbb jae push inc cli lock (bad) pop roll or dec adc mov imul sbb dec adc push fildl jge and aaa push or into insb pop xchg loope mov add mov cmp mov xchg (bad) adc aaa cmc inc mov bsf in rorl jnp idivl xchg frstor mov lea sub xor cwtl fucomp pop cmpsb push mov ss sarl or (bad) cmc jecxz sub sarl movsb decl mov xor pop xor jle or cmp push sarb data16 mov push lret jno xchg cmp xchg sti fsubs fist iret movsl mov xchg in dec addb adc jle out in mov cmp and cmp mov mov dec cli into (bad) scas lods jmp jg xor adc dec sub movsl jnp inc mov loop adc call push lcall cwtl mov push into push mov adc call or sbb aad push adc sbb test dec les mov sbbl cltd sub scas inc add lea mov sarb xchg push cmp or push xor pop jbe les es push cs stc aaa aaa mov jle pop inc add push aas icebp scas mov or and sahf push add mov dec scas cmp lock das jmp leave mov xlat jmp sahf xchg pop xor mov mov add cli aam adc loop and aam xchg mov mov std mov imul out test push (bad) out les push sarl and push cltd and add lret cmpsb stc xor enter test out adc pop push jl out in xor xchg ret mov xor and fsubrs xchg mov adc aaa mov cli push and or lods inc inc dec pop mov mov xor iret inc icebp xor iret and popa out je and sti bnd jno and dec (bad) push xor rorl fmull clc (bad) bound nop push jp aaa and aam mov nop mov dec xor inc imul mov subb mov out sbb bswap mov sub addr16 mov pop mov push mov rcll nop adc int cmp int3 pop data16 push into adc mov pop out sub out nop push push sbb lcall pop inc push roll aam lea dec push dec pop mov pop xchg arpl mov js push stc int3 fwait inc popf fisubrl divb and mov xchg (bad) lods fdivp cmpsb popa push fnsetpm(287 iret and std xor nop mov xchg dec shr xchg loop (bad) mov inc sbb jne mov je sub loopne ficompl fidivrl xchg test mov (bad) cli sar and push push sahf xchg cld xchg pushf sarl xchg les loopne and mov aam arpl mov hlt in mov jo (bad) movsb (bad) fsubp call aaa daa into sar imul jnp in lahf dec popf aam add out es pop enter sbb push cmpsb xchg idiv adc xchg loopne lret (bad) enter rcr xchg into xchg sbb adc sub jns notb out add mov push ror push cmpb dec xchg rcl jne inc pop dec mov fist ljmp sub sbb sub inc fwait xlat rcrl mov insl lret push popf dec nop mov jno notb repnz xor jle lods mov idiv bound mov push popa dec in pop psubsw dec mov faddl or jb mov dec mov add mov and and out cld and push dec sbb ret and dec mov sti adc dec push dec and jl mov xchg or ficomp dec jns jbe cmp jbe dec pop push sub (bad) in push pop add jg jmp scas xor push pop sarb dec add jae add inc fwait clc jbe insl aad js dec and push mov pop jbe xlat cltd popa adc add and popa inc arpl fstl out lret push sarb fcompl faddp push or sbb aas mov cmpsb sarb or clc movsb or in mov or or mov decl lock (bad) enter icebp ljmp bound shrb jecxz sti cmp jnp sbb mov mov (bad) sti out (bad) sbbl add mov sub leave mov int3 (bad) loope mov aad outsl mov jl push dec orb pop xchg inc sub jmp push (bad) xchg dec or lahf jb js inc pop or and sub ljmp jl xor rcrl pop mov jp cmp jl mov mov push sti mov fnstenv mov sub xchg aaa adc jne loope out pop cmpsl push dec es mov ficomp lret xlat in lcall mov fs sub loop loopne pop lcall inc sub shrl mov xchg jle test cwtl bound lahf gs (bad) (bad) jns add ret pop mov pop (bad) or xor pop movsl sub xchg jno and cmpsl stos add cs aam and fiaddl mov fdivrs push jmp lock imul in push add test inc jae sbb pop (bad) dec jb mov call (bad) mov (bad) xchg xchg push dec xor push mov fistpll or sub xlat mov lock lods jo test rorl jecxz dec (bad) loopne cs dec inc lock inc add not fildl push pop xchg cltd movsb add outsb push adc in aad sub xchg xor mov (bad) fisub push xchg or lods arpl inc and mov jbe xchg repz push dec out rolb xchg mov aam pop les (bad) mov ret or es jo orb je cld lock and adc mov aad addr16 mov lods in add inc inc inc ss pop test mov jge mov jno or icebp fwait pop jge pop and arpl inc pop dec outsb in (bad) cmpsb adc insl in sti pop jge mov xor (bad) daa rcr xlat sbb hlt dec sahf pop or cltd loope addl jo mov xchg cmp sbbl pop stos iret mulb xor fistl lcall push push pop dec (bad) mov jp sbb bound or movsl and sub sbb mov mov pop outsl rorl and lock sub push xchg push and outsl call int3 inc in loopne push push push lods dec fcomp repz cmp add fnstcw push jmp jmp (bad) gs daa cmpl cs mov sbb pop negl push (bad) fildll inc jp xchg push iret es mov dec adc push test push xchg jne sub mov cmp ljmp pop out imul scas adc cs ljmp notb xor mov incb xchg pop cwtl outsb fs lods neg movsl cmc je cmp add aas in pushf push and rclb push push cltd xchg ja aas stos (bad) jno sub test inc repz lds or insb sarl push fs bound mov xchg xchg pop xor xchg sub xchg stc aaa leave repz mov sub fstps iret (bad) mov pop ds out insl (bad) mov pop sbb scas sub xchg sub flds sbb mov repnz sbb bound arpl out fs ljmp repz daa sub dec or ficoml fucomip sub mov xor imul jl dec fnstcw and nop arpl les ss jp xchg loope mov and sti dec cld push outsb xorb test jg movsl cmp mulb je inc int xchg and imulb in add ja imul loopne adc lahf fildll cli xor jnp push fbstp sbb jle add in (bad) divl out cmpsl inc jge mov int3 add (bad) adc pop inc and ljmp cltd sub adc dec or ret std (bad) jns (bad) mov fwait and push xchg jo fstpt (bad) pop ja iret arpl or or cld ret fimul lods cmp jecxz lcall push push outsb jae sbb rorb push jp or push stos rolb lret cmp test fistpl (bad) loopne (bad) xlat fisub and jle sti in ss frstor lods push jno jmp jge ret jmp aad push fidiv sub mov cmp arpl and pushl or mov test in mov pop out testl adc cmpsl push out push arpl or jge mov add sub ljmp jbe ret add sbb sub mov lret enter imul cld dec test jns in sub lea push push or adc gs jne xchg mov pop fimul test jb adc daa out lods add inc inc cld xor sub out nop jno insl ret in xor fs mov pop lea push dec pusha rolb stc add jg xchg jae fcmove fwait xchg aad dec dec ret ss lcall push fstpt push ljmp nop inc hlt cli mov jecxz les mov notl sbb jnp sbb fstp push fs je icebp mov pop mov add in loopne or push jnp ret cwtl cmpsb icebp loope je and repz std stos xchg sbb jno mov pusha sarl imul cwtl sbb aam sbb (bad) bound ja mov and sbb aas adc nop sbb stc xchg cltd cmp cmpsb jno push test mov jmp cmc fxtract xchg divl (bad) outsl sbb stc test pop rcrb xor sbb outsb push addb out dec jnp mov scas add (bad) push push pop loop and roll xchg jp (bad) imul jb (bad) cmp dec andl js out mov cld adc xorl push pop jg push pop push popa push leave pop (bad) jge jmp int sbb loopne mov mov sub imul and mov pop sbb cld pop and cwtl sub lret mov and in cmpsb imul (bad) mov mov je in idiv push test lock cmpsl or sbb insb sbb inc dec jo test lds jmp dec xor push push frstor push pushf add ja cmp mov in add movl and dec std cwtl and loop gs xor scas jae sbb cmp pop pop mov sbb cwtl adc push (bad) lret xchg sbb js pop mov jno clc sahf cld mov clc pop pop mov mov bound jb (bad) leave sti push sete add push mov sbb pop out mov xor bound and cmp dec sbb xchg add add bound call std push in ror (bad) mov rol aam pop cwtl mov cmp aam cmp or xchg movsl sub notl into pop xlat and mov push fdivs cs xor outsl fidiv inc mov xchg imul inc lret and enter mov sbb cmc clc dec mov popf jnp xchg xchg add push int lds bound pop jns (bad) rcrb insl int inc xor xlat jle push stc xchg xchg jge lds jbe cmpsl popa or das mov mov sbb mov (bad) cmc aas mov inc adc scas std fisttpl inc imul inc push das mov cmp outsb outsb push jecxz pusha push and cltd lds mov pop lcall insl sbb xor les cmp bound push les mov ljmp idivl enter push and cmc jb pushf push call cmc icebp ficoml xchg mov repnz cli in jl pop mov cs mov loopne lods fwait push jp cltd mov xchg pop xchg xchg jl mov scas ljmp emms dec (bad) iret nop das xchg pop inc xchg lock inc xor ds mov inc cwtl jne mov xor in add lods cltd pusha inc xlat rolb pushl sti rcll sbb pop in loopne mov sbb and jo dec inc bnd jl adc cmc mov fs mov adc adc (bad) push jl fistl loope fldenv out fs dec push out mov push mov mov test sbb lds loopne jne jae push and mov bnd ja test sbb (bad) pop scas mov and adc ret push fldt lahf jle pop hlt add stos movsb pop push (bad) lea fisubl in dec imul inc bound inc fcoml (bad) jmp call dec pop dec sahf push out xchg or test pop movsl push or xor movsl aaa push and ret ss inc in sbb push push pop aad xchg lret adc and neg push pop mov outsb or loope test loop loopne loopne pop hlt jbe inc aam cmpsb add cltd mov add inc hlt push outsl mov cmovo push daa in cmp fnsave decb jp in add pop inc jns cli cmp inc test jb jecxz out cwtl insb andps add cltd adc mov or fnsave inc mov mov mov fmull adc and call push cmc movl sbb xlat mov lahf cmp in mov dec pop ja mov xor fs loopne les push mov inc repz ret xor jl cmc adc jno insb mov inc xorl push push xchg test cs dec adc push insb leave mov lods add arpl xchg out adc rcll int3 out sbb mov jb sbb ds inc mov daa dec mov lods lea mov mov js in xchg push mov sbb or addr16 fcompl test push sub sbb clc fwait cmp sbb test add pop mov xor and andl add ss pop jnp pop out leave sub inc or stc js cmc mov dec (bad) into adc jle xor cmp dec (bad) in sub fwait push inc (bad) movsl cmp cmc push push and neg sub jecxz push cltd push outsl mov add popa loopne jo outsl xchg jae mov sub shlb jp sbb repnz jecxz xchg aam inc sub push xchg jp mov mov adc jl stc loopne bound jp pop jecxz call and ret mov les mov ljmp pop push push and dec enter push scas mov (bad) lock lret mov mov (bad) xchg jp mov cmp xor lock outsb les and jns jp mov mov sub fisubrl dec mov test (bad) jne pop cwtl jl mov adc sbb dec cmp cs xlat (bad) adc or dec loop ret ficom cli mov iret pop in fcmovne fs mov adcl mov mov fs cmpsl movsb aaa aas xchg xchg sbb stc xlat mov out add push pushf ds adc out jae andl mov mov (bad) cmp ljmp push adc lods inc xor ja cmc jo shlb jo dec mov add icebp rcrb dec xchg mov fsubl pop fidivl test daa pusha push inc pop cmp lcall xchg dec mov mov adc mov repz pop dec mov mov into or pop inc jne scas xchg popl add ds call pop dec (bad) pop (bad) out mov sbb xlat test xor fbstp imul mov or xor fmuls mov addl xor adc mov pop imul mov fsts loopne insb inc add mov fnsave and pusha adc mov stc fdivrl mov cmp xchg add adc js sub xchg (bad) out jge into jbe push bound mov add out aam mov xchg and cltd jo dec cmp fimull call cmp xchg repz imul rclb insl xchg outsb mov xchg out pushf dec jbe xchg sbb (bad) decb test js and aas std cwtl rcrl push pop cltd shll inc pop (bad) and (bad) int les in cmp mov daa add xor mov dec std outsb mov fidivl lret clc outsb data16 ss and std outsl or repz sbb lret dec scas push xchg push hlt movsl dec cmc scas xrelease sti fs mov xchg (bad) xchg (bad) or cmpl add sbb inc and xor enter inc push in add dec call shll push ds push call test adc bound insl in out pop stos das bound sbb sub nop mov (bad) sub dec fimull xchg cltd xchg pop rorl or xor out (bad) xor adc cmp mov pusha (bad) mov loope add xlat ja ret fnsave std orb adc les negl cmp dec js mul lods (bad) xchg ja inc insl fidivl adc (bad) and sbb push or fildll inc inc or (bad) xlat test adc cmp arpl sub and push add test call sub test repz xchg pushf dec test ljmp outsb ret xchg int xor and or pop cmp inc push cmp (bad) sti inc inc cs jbe (bad) addr16 pop or mov or inc mov sub mov jo sub xchg jge fdiv std incb jp scas scas stc inc std and lahf pop and rcrb ret push scas mov sub test stos sbb aam lcall jle fldl mov out cmc cs and in mov int jne jns (bad) int3 imul cmpsb hlt aam cmp in jg scas xchg sbb jmp aad test gs sbb popf pusha test les pushf adc add out cmpl (bad) aaa jbe adc push or push enter fs add fistp or xor inc mov or or sbb icebp jno mov mov (bad) rolb sub iret ds add mov addl pop outsl mov mov aaa (bad) cmp mov inc and cltd jmp inc jo cmpsl and xchg fiadd cmc icebp data16 rcll pop ds jnp in aaa mov add cwtl cmpsl and data16 pushf cmp xchg stos push mov and jns pop sti roll pmulhuw xchg lock adc popa pop popa adcb xlat lcall xor subb repnz xchg mov lds (bad) popa and cmpsb sarb divl popa sbb (bad) jle aad out mov xor sub aad (bad) ljmp add xor dec lret cmpsb outsb cmp xor in enter loope mov cmpsb mov dec stc lock lcall int sahf lods fld aad test pop sahf mov add popa das sbb xchg fwait loope (bad) incb sbb shld or mov cmp lcall movsb pop ret push fistp mov movsb adc add repz push shll pop (bad) jo test and or fld out pushf neg mov ss xchg xor lods fidivl out dec scas subl dec insb (bad) sub xchg sar mov ficom add pop lods (bad) mov (bad) xor jo xor shl xchg (bad) add std xor or lea push inc hlt mov roll cwtl jmp (bad) imul pop jo adc lds aad jle rol icebp fidivl adc movsl arpl push dec mov xchg or xchg test (bad) cmp push push test nop loop push cld mov bound fildl rorl dec loopne dec jb cwtl (bad) or aas (bad) aas pop icebp and stos lds inc loop icebp dec lds aaa mov movsb jl jae mov mov mov jp sarb aaa xchg push cwtl mov dec mov mov and xlat lahf inc std cmc pop loopne push fwait adc cmp sbb dec daa and push test jl or insl or lods fcom aad jae xlat mov ret scas push mov mov push mov push cmp and jg aaa out into pop pop sub je cmp hlt outsb loope pop jns fistl (bad) stc jbe sub fidivrl ss jae lock and jo dec scas aam mov sbb cmp push leave loop jle jle insl push nop in insl mov pusha adc lock mov push adc stos pop or dec dec out dec cmpl (bad) push adc mov pop push xchg mov out inc jne dec and sub sub mov sahf clc adc pop (bad) cwtl xchg adc mov fisubl lea nop xchg inc mov cli das mov lods outsb push call ja add pop dec cmp pop sbb (bad) sbb jo lea mov sub lock push test popf xorb (bad) xor fildl setno testl jmp mov push sub fsub xor xchg sti mov insb mov push xor roll stos test iret cmp repz push add cmp fmul popa mov adc sbb dec or inc das inc adc lods icebp and inc test insb or sbb xor in mov jne or mov or leave inc sub jmp imul push inc adc (bad) aam out aaa pushf sub cmpsb fmuls jns sub adc mov add sbb dec loopne jns jo dec jge or pop inc fucomi subb fcom pop xor or outsb pop add mov ficompl (bad) sbb leave mov pop dec loopne mov pop mov sub mov mov cwtl paddd xlat sub inc mov or jp pop adc mov dec hlt sub loopne cs std dec inc jne dec cld adc (bad) iret mov xchg enter cmp ret lcall or or andb orl push es daa ss inc mov mov outsl (bad) mov clc rorb aad sub dec adc movsb pushl sbb sbb mov sub mov call loope mov mov mov jns mov js jns cmp inc out push test fdivrs jmp enter or jnp daa xor insb add call mov sub cmpsl sub adc fnop fidiv daa cmpsb pushl sti imulb popa push inc push sbb clc sub adc adc jl jle pop enter xor or loop inc or inc xor push std and jmp fs gs outsb in jl mov adc pop popa in out (bad) bnd loop or add jo jp push lahf in inc (bad) test test fcmovnb sti lock pusha sub imul loope adc inc fild mov stc adc push aam movsb sub mov and imul add lods jae call js daa mov insb sbb mov aaa cmp inc mov xchg test inc xor pop fbld xchg and cmp divb xor cltd shrb sti lea enter (bad) rolb xorl sahf dec xchg xor aam ljmp jo jnp dec int3 movsl xchg sarb cmp push into mov jne int3 and jno pop mov (bad) cli out sahf jmp mov bound hlt inc test mov adc out or and adc iret sub xor cwtl mov (bad) jo jns pop sbb out jecxz in sub lds mov xlat and cmpxchg les cmpsl repnz stos loope and (bad) pop dec push aam xorb in ljmp push xchg cltd div mov in cmp and outsb jp add fiaddl jno mov inc rclb pop jne pop or and sub and cmp jns hlt xor roll pop lahf adc insl cld xor pop cmp pusha pop mov imul adc jns xor mov xchg (bad) pop mov dec fwait mov data16 mov and je sbb rcr jb sti dec mov jbe rorb adc test cmp inc in mov or inc fstl adc inc cmp sub (bad) mov jmp lret roll (bad) sbb xor scas mov push (bad) flds jecxz lds nop xchg inc mov lea mov sub test out dec insl pop add ljmp hlt cmp loope out add sub add and push push insb jecxz mov sub or adc pop mov inc mov popl jne sbb sub and sub lcall lret mov push clc ds movsb lahf xchg pop loopne adc pop icebp or cmp cmp in mov outsb dec sahf repnz scas popf inc int3 jne (bad) sbb cltd adc ret fsubs fwait cwtl pop xor sbb xchg sbb stc pop cltd cmp icebp cmpsb jnp jle gs inc cmp lret pushl sub and jmp mov arpl sub cmp arpl add mov add jnp cld cmp jbe pop pop sbb insb cmc int push jg daa das mov loop sub fbld scas ss les mov xchg pop icebp mov jg cmp xor pop ret push xlat xchg sub loop inc xchg inc cmp add mov push lcall mov mov pop addl or mov aaa adc leave jnp pop lret mov repnz idivb leave pop cwtl xor repnz aaa lods nopl (bad) (bad) mov repnz pop push mov cmc dec dec jg icebp add xor mov and mov lahf in hlt daa je push dec jns fidiv xlat jge ficompl js loope pop rcrb xlat aaa xchg or push int sti and je mov fcoml push cwtl fst sbb pop lds xor mov jae ret clc stc sahf subb repz push aas push mov or mov in out enter sub mov and mov push mov movsb mov pop stos int3 cmc loope adc leave pop dec or jae dec sti incb and cwtl cmp je and push fwait jb cmp mov movsb xchg mov sbb jno addr16 std stc xor jbe mov cmpsl subl rorb imul insb mov lods scas push mov int3 cmp cmp cmp mov mov mov and jmp addr16 xor cmpsb mov xchg adc fwait mov pop (bad) lods push sub lret decl xlat and cmpsb scas leave pop pop jno aaa repz mov daa sbb (bad) insl jmp imul pop negl test fs push or faddp xlat incb pop or pop adc sbb dec push dec xchg xchg mov ficoml pushf push xchg icebp daa mov jecxz jmp adc cmc (bad) cmp pop and adc push jne (bad) outsl jmp mov sub stos test call sbb in mov mov push inc mov ss mov ljmp xor rolb fs int sub (bad) pop and add seto pushf dec arpl jae sub mov movsb js fcoml cmp and jbe pop int3 pusha mov lret cld mov test dec dec gs mov outsb outsb xor sub (bad) loopne leave insl jle stc in mov pop mov hlt popf sarb inc (bad) je xorl push xchg dec xor sbb mov test sti cmp xchg or pop lds adc adc or mov mov jg aad pushf xchg cs jbe adc pop mov cmc lods fimul loope xor ja cmpsb sbb (bad) push rorb aam lods jno jo ror cmpsb cmp push mov sarb sbb mov mov push (bad) mov dec sub lods add dec fcomi and lret pop pop push adc icebp in (bad) lds ret xchg jmp ficom mov mov pop stos test test call adc sbb aam clc dec call (bad) jnp cmpsl and in cmp sub and dec ljmp arpl push mov xor pop and cs or jg in mov popa add or push sub les movsl inc inc add sub pop mov sub clc mov jbe and adcl out jp rcll lahf and mov push insl and inc es push in es (bad) cli bnd repz push push push and aam scas test ja push daa cwtl xor inc inc mov inc adc mov mov mov and mov mov fistl je xchg lret lret or fmul cltd ljmp xchg cmpsl mov sub leave push pop cmp sahf out inc cmp int3 xor (bad) repz rcrl loop (bad) push sbb xor fnop das jl add mov movsb dec loop jmp push aam lock pop (bad) mov dec cli sbb sti movsb lret or xor push fdivrl adc mov pop dec rclb xchg and xchg push sbb jns rcll xor or sub mov xchg jge or in (bad) jle outsl ret sub dec cmc pop adc fcmovne add jecxz shlb ror (bad) out inc test add mov test inc xchg cmc fwait xchg push sub adc (bad) push xchg js roll cli fs pop fsubrs das jp insb into xor push fsts ret movsl insb (bad) add adc int3 ret daa push outsl cmp mov stos lret mov in or fwait push and adc ja mov (bad) sbb in xor push clc xchg inc loopne cwtl roll xor or mov or loopne jne add cwtl (bad) aaa lahf fnstsw cltd clc fstpl push jl xorl outsb into xlat xor out inc lcall sti xor or ljmp aas imull pop dec std (bad) mov cmc add jns jnp idiv inc xchg ficompl lock cmc lret push or xchg sti mov mov dec jmp mov movsl fdiv (bad) or cmc push sub xchg insb push cmp scas adc stos cmp mov lret xchg cli cmp loopne je jle and fild aaa iret out and jle push sbb nop fs mov cmpb push sub push dec (bad) std or cwtl inc fnop inc aaa mov xor popf cmp stos and mov stos adc fwait inc (bad) and mov sahf int test add xchg mov (bad) les (bad) mov loopne cld jne push popa push inc rclb ret xchg sbb sbb loopne (bad) jbe dec data16 add (bad) mov outsb mov sub mov iret notb or shr xchg addr16 adc int3 mov xchg push (bad) jb push mov test add fdivp movsl ret shll inc or outsl stc inc (bad) cmc aas (bad) jg mov addb pop pop adc pop aaa aad push pop xchg test clc movl loopne (bad) dec hlt stc pop insl sbb sti jo aad inc mov sub or mov rolb mov cwtl roll orl leave or cmp mov out sub bound adc insb pextrw jle push mov aam sahf outsl pop mov ret sti xlat lahf jmp and cvtps2pi jg pop sub mov test (bad) loopne shll lahf dec aam pop (bad) clc cltd frstor rcll dec jge mov adc stc into adc mov ja mov and outsb call cmp pop (bad) imul pop sub (bad) xor mov push xlat lods (bad) dec mov add cmp dec mov movsl jge mov les jecxz xor and push and in mov sbb jg nop xchg xorl pop nop xchg push push jae outsb xchg push sub mov bnd je sub sub mov sbb ficomp jo and cmpps add jno roll mov inc out xor push fnstcw xor add add cmp aam dec and les jecxz or pop mov out mov jecxz push mov push push insl stos and push test add rorl andl mov jg,pn add test es push or lcall jo and add mov push repz in nop addr16 fildll shrl data16 add xchg jle cld adc mov adc add icebp xor adc pop inc cmpsl lea nop out xchg rolb jg cmp popa cltd sbb push loopne xchg xor pop bound dec push add xor sbbl mov xor xor push icebp jb cmp ret das repnz popf out ja dec mov mov outsl loop mov xchg mov das cmp ret xchg fs xor pusha gs rcr push and pop rcrb mov mov cmpl jmp aad in inc pmaddwd xchg pop out push and out ret sti mov mov xchg mov dec adc shlb pop mov in cmp add mov adc inc pushf loope inc cs pslld pop adc int3 xchg lahf mov mov js jo sbb mull xchg adc xor jne (bad) add cli daa jge xor mov jl scas push je je xor ret lret lods fldl pushf leave fwait mov sub or mov pop mov addl ljmp jnp aaa jne lret inc cli ret push das xor mov inc push sti mov popf jnp outsb fildl xchg int lahf out sub jns shrb shll pop mov xchg aad xor xchg and cmpsb das push aas mov push bound jl int cli mov popl faddl or inc adc pop inc jnp movhps mov sti das mov cmpsb mov leave stos jo inc loop sub (bad) jne cmp xor or ds std shrb clc jbe mov mov test jo mov scas (bad) push clc mov ss push cmp cmpsb nop dec fldl jb mov push repnz ljmp aas addr16 add mov lret pop pop or js test adc pop jne mov arpl into xchg pop mov out ficoml sbb dec scas jp push call ret mov xor aad adcb sub push push jmp jae cmc mov pop stos mull movsb or add aam add mov cmp mov movb aad in mov test jbe add cmp out sbb mov ja mov or xor xor mov sub lds lock inc aam or fs lret xor jns int pop sub test xchg leave icebp insl gs loope hlt lret push sbb ret sbb and ret and ss pushf (bad) mov orl data16 mov mov inc jno rorb movsl popf adc repz jns sbb mov cmp dec ljmp jl fisttp dec pop push aas (bad) jg xlat fidivrl pop leave ret mov add aaa dec addb and notl mov jno mov popa pop in add sub mov or dec or lret aam data16 popf mov and mov sub dec nop aaa popf dec (bad) jmp dec push jge sbb xor shlb xchg mov dec or cmpsl mov (bad) or sarb vmwrite sahf add fcomi mov test (bad) push (bad) daa sub lock insb test xchg mov mov pop push pushf add push mov aad cmp std movsb inc xor lret or inc iret xchg aad dec pop insl ss cmp insb adc imul dec mov sbb xor mov or pop (bad) push fs inc dec mov fistl (bad) sub lods sub adc or (bad) pop jg fdivrs lret enter adc imul cmc movsl (bad) mov push dec hlt xchg arpl ret ljmp lds fdivrp adc sub ljmp xlat mov add jne (bad) enter sbb lods sbb lods cmp mov cli popa mov lahf outsb (bad) jne daa dec dec pop stos cwtl cltd rcrb test retw ja mov enter ja push test stc pop cmp mov pop aaa mov cmp fdivrs cld sar jmp popf pop cld adc add inc push fisubr cmp icebp mov and jge cwtl out popa cmp in stc mov cs ret pop repnz xlat imul bts (bad) add fnstenv aad out mov or pop inc pop or sub aaa aam mov adc push test or repnz mov cmp fsubrl inc aaa mov mov mov xchg aam dec aaa pusha lret scas mov push out lods jp xchg and mov jmp sbb mov inc mov leave in cmp jae or les jmp sbb stos (bad) mov inc clc add imul adc aaa nop mov xor xchg scas leave cltd loop push inc mov mov movsl sub sub adc push cwtl lods push divl cmp das int3 mov add stos std push or jge mov push xchg rcll in insl adc pop sbb pop xchg sbb mov sti xor in xchg loop and nop lods lds adc sti push or sti mov dec adc cmpl cltd fstps dec and add test jo xor (bad) and aam add jb inc out sti outsb add outsb mov jg popf push inc inc outsl imul jp mov pop subl (bad) add std sub mov xor loopne mov and jmp cs stc popf xchg testb add add or xor addr16 lods (bad) ret xchg int sbb gs or mov clc mov notl dec pop add jg xor mov fs sub sbb stc lahf repnz aad push ja inc and inc jno mov xchg xor jbe pop adc push pop out ficom or or scas or mov outsl mov and sti test mov ljmp fwait mov pop mov push insb jns xchg dec faddl out loop cli icebp enter fnop dec push (bad) xchg mov cwtl sub ljmp test call xor sbb aas mov lods pop mov (bad) jo and and (bad) mov mov jne ljmp jmp pusha mov and mov (bad) and negl pusha pop rol jns add cmp jb mov enter dec sub pusha shll mov push arpl mov jmp ljmp outsl imul adc pop push inc xor push sub into push loop add rclb lods cmpsl cmc sub xor or push pop nop xchg mov daa not das mov inc js loop ret outsl cli inc popf (bad) mov mov mov icebp shr aas push mov gs rolb lock jno sub repz clc movsb mov (bad) cmpsl call paddsw push mov mov jecxz mov mov push xor lds pusha dec das aas (bad) xor fdivs int pop in (bad) loopne or jb ja movsb sub sub xor sbb or cli rolb int lea rorb sbb xchg repz dec sub dec dec xlat xchg add pop push and jb adc dec mov pop ret (bad) int3 int3 xorb cmc jge xchg aad les fwait lock inc add and cltd lret jge xor (bad) jae mov hlt ja movsl jbe sbb jns pop or push xchg mov add mov imul outsl cltd cmpl pop sti inc push mov mov (bad) into jb mov mov jecxz fcmovne jle cwtl xor push pop adc roll movsl movsb sar mov ror jo lea ror mov fldl add ret movsb aad mov (bad) mov (bad) xchg in or xor fdivl xchg mov in or orb loope and cli insl cmp mov jl pop xchg addr16 ljmp mov push adc stc cmpsb jmp cmp insl xchg pop lret and (bad) mov mov nop movsl add cs mov jbe xorl repnz push cmp jns stc mov mov test lcall aaa push dec dec movsl arpl repnz sarl jl xor dec push js and out js (bad) xor push jae xchg lret pop sub call popl xor popf pop sti aaa and subl fisttpl ljmp dec ret mov jp jno frstor add push cld pop inc mov cmp xor mov lret loopne and jmp lret pop andl and clc jmp add pusha jge or mov adc fwait jno sub ret ret ljmp mov xchg push add das jnp mov dec pop add es push sub xor (bad) cmpsb dec ret and fmuls jns fsub dec push xor adc mov pop mov pop push loop fcmovu ss xlat xchg mov and dec cltd cmpsl daa mov jl xchg sub fwait (bad) cli jns inc fs (bad) rorl and xor xchg cli jg les push mov jmp pop push je mov sbb or out js loope pop loope pop sbb mov push xchg mov xchg add dec loope lock mov add push dec xor push pop mov mov fisttp xchg js mov fimull jns dec loop int3 arpl ret or jns enter inc dec mov sub adc sub mov (bad) mov sti mov lcall mov lret imul lcall insb popf jne adc cmp popf fildl push bound mov and push xlat inc cld test pop add ds pop inc (bad) mov jle pop stos cmp inc test in aaa dec fbld mov xor fimul jns mov lock int3 not clc fisubr leave pop push jle mov jl repz jge aas (bad) iret dec sbb fwait push daa stos xor cmc jecxz add loope jg add mov scas inc xchg pop or xchg pop fs stos nop inc and mov in fdivl cmp inc lahf fnstcw leave jmp mov dec jno (bad) xchg scas fdivs pop dec lods jnp mov or push mov (bad) and sub aad hlt inc test (bad) push xchg push jo push jle sub jg inc push inc shlb jns imul (bad) ficom xor in cld cs int mov pop inc mov mov enter imul add sbb ret aad (bad) int3 (bad) fidivl dec (bad) xchg test adc xor test aad pop add mov cli cmp test fcoms aad stc sbb (bad) fbld les push insl lds or adc add cmp in sbb outsb ret push xchg jae add cmp inc mov ljmp jg enter xor inc sbb loop jno mov or pop mov cmovns insl push mov mov sub popf dec adc icebp jnp and lret enter and sbb (bad) lea add je (bad) push xlat cmp pop loop cmp ja jb mov pusha lahf orl hlt bound and dec mov test les js out mov icebp xor adc sub fadds dec mov dec stos iret or or pushf addr16 cmc insl call jp repz int3 leave mov push cltd aad insl inc jne lock (bad) mov xor repnz fprem1 sub sahf mulb dec cmp (bad) shlb movsb insl jl jg lods push push (bad) adc push cs sar hlt fsubr nop sti pop inc mov jae stos xlat xchg sub adc (bad) jbe loopne test test ljmp add scas mov jnp add sbb pop gs add adc lea push stos cmpsb pop xor jns sbb movsb inc out cmp shll inc sbb push xor ret pop pop mov push or mov inc outsl mov outsb pop loope rcrl pop push (bad) and ds lds fwait out ret lea push cli or dec dec xlat pop mov jle and jle push (bad) xlat fs cltd scas pop xchg out cltd mov or dec add leave sbb push inc aaa mov repnz sbb ds aaa cmc mov rcrb rcrb pop lret mov insb cmp pop movsb mov pop mov lods add sub fwait pop pop fs mov (bad) fldcw or in enter add push sub lds push xor (bad) or call mov mov push xchg xor sub gs adc add xchg add fistpll mov (bad) fistpll test out mov sub (bad) and jo in lds jg push das cmp and lock and call hlt sbb sbb adc nop icebp aaa dec lret and das xchg (bad) cmp mov and (bad) ss mov push mov (bad) pusha sbb in jno xchg dec push xchg jbe dec incl xchg mov inc (bad) dec movsl sub nop in mov or in fldcw adc fwait or jmp dec xchg inc mov xchg xchg and xchg push mov rclb shl jle inc sub (bad) mov xlat clc jne das arpl pop mov popf fs (bad) icebp loopne lds or xor sti jb repnz addb mov mov jl test jmp and (bad) ret aam inc xor ret js stos mov jge bound fwait hlt inc call bnd xlat lods push mov xor pop sub imul xchg (bad) mov pop popa repz xor sub dec mov push inc aas sti mov pusha jmp inc sub sbb les cmc jg add sub sub inc dec das int adc cmp js xchg add cwtl xchg test mov cmp mov jge cld lea sbb or inc in pop aad test (bad) fisttpl fdivs les fisubr test sub inc pop out gs mov ss jmp dec xchg dec adc into in sub xlat dec cmpsl lods jno push xlat jmp push in push mov dec repz iret clc push adc inc push fwait lret (bad) (bad) sar sbb adc mov sahf mov push sbb xor arpl add jmp jb cli and push loope out adc mov int3 repz repnz loop fucomip imul mov shrb and cmp and enter pop mov xlat sub adc push xor test xor popf decl movsb lcall adc inc mov xchg aaa dec add add hlt xchg or pop stos (bad) in sub push jmp adc subl test loop mov daa xchg add push mov mov and dec push decl cmpsb xchg sbb push push mov lock inc pushf adc pop ret dec cmpb adc mov xlat xor jo cmp sbb cs dec sub sahf pop aam gs xchg sub addr16 stc (bad) fsubp inc pop sbbb jae nop pop jb mov jbe xor in push stc cmc pop lods mov pop imul dec (bad) cld push jne ss lea cmpsl outsb cwtl insl ja adc fs xchg inc push out fwait sbb mov jno (bad) mov add fisttp mov into cmc jnp jg xchg mov cs lock mov ret push push test adc cwtl mov and stc sub pop dec aas inc jnp cltd test add sub mov mov pop stos sbb xchg pop pop xor sbb dec mov mov loope sub pop xchg dec xor jnp dec aaa adc mov mov mov push das mov pop mov sub das call sbb sarb mov pusha (bad) jo out aaa call divl (bad) cltd mov jne icebp shlb adc dec testl out ds sbb shlb xchg add sarl in jl inc and dec fidivr pop mov stc sub iret sub mov sub inc imul add xchg jg cwtl dec hlt pop les mov xchg mov pop fldcw icebp les jmp xor push xchg mov leave lret xchg lret cld iret mov adcl fwait cld inc jle (bad) cmp lods add fs rclb push mov test jns and jecxz lret push (bad) mov movsl test or lahf add xor sti xor inc arpl mov cmpsb sbb lret adc icebp inc gs sbb sub sub (bad) call or out and int3 and adc mov jg mov loop cs mov (bad) loopne adc jo adc push movsb mov pushf dec or lods ss imul daa bound imul fisub inc push nop jp sub cmp xor jnp stos dec xor gs mov and mov fnsave cli cmpsb pop (bad) pop xchg fsubrl hlt loop inc xor insb jecxz add xchg out inc add cmpsb imul loop int3 loop push pusha (bad) out mov mov roll and js out clc into fsubrp adc (bad) in add pop cwtl jmp or lods loop lret pop and scas jns inc inc popa ja out pop jg mov mov fsubrp xor out sub pushf or loop movsb decl push imul pop or jne dec loopne in inc or fs dec scas addr16 repnz (bad) xor cmp imulb or push in sub push insl mulb cmp sub push jl into adc add dec add scas imul insb bnd gs or xchg jecxz jb jp or sbb fcomps mov imul or sub sub adc xchg ja sub (bad) sar pop xor and pop (bad) dec fndisi(8087 jno addr16 cmpsb push iret (bad) mov mov jl xchg inc lret loop cmc fs xor jle cs test and adc mov mov adc sub pop cld sti cmpsb (bad) adc inc or (bad) scas repnz cli xor ja mov lods mov outsl xchg fs add dec jl mov push in adc sbb adc push iret xchg mov push movsl enter push mov dec sub pop push inc and adc aaa movsb cltd mov sbb popf nop les xchg lea pop ret push stos xchg lahf push pushf adc aas fisubrl negb mov push popf (bad) call insb adc jnp popf je push sub fimull add (bad) daa pop cli pop and fidivrl fadds cmp insb xor inc mov add sub fldt sarb imul in sub movsb fsts push push movsb sti notb cmp mov xorl xchg add mov rolb add hlt add (bad) cmpsl and lds clc inc ror adc mov lret repnz cmp scas incl fisttpl lds or rorb jo pop add xor jp mov jmp cmp (bad) ds mov call or addr16 or pop stos and pop ljmp push xor movsb leave jne daa cli scas cs leave (bad) stos and test mov ret jmp fisttpl dec dec sub adc dec mov push mov sahf arpl inc push pop movsb adcl mov pop je cmpsb fdivr ficompl mov jb arpl add mov inc jo js and or lahf mov mov std pop cmovg push fdiv xor popa dec push shrb pop iret dec data16 iret inc ret test or or in and xchg cmp ja xor cli cli jnp pop sub push sarl or in or (bad) popw and aam (bad) in data16 sbb jmp mov dec loopne jl aaa jb xchg sahf jp jl jle xchg les pop mov mov ret and and out loopne mov mov call int3 pop mov addb loope dec rcr and jl fdivrl adc insl std sbb or jns mov inc cltd sub iret pushf rorl adcl stc inc jno sbb nop insb mov imul pushf adc aad sub or add sub scas pop in cwtl stos pop dec jecxz sub arpl mov and mov cmp adc mov sub in lret (bad) in insb (bad) lods scas bound flds loop sub xchg orb movsb (bad) gs sbb xchg stos in inc pop or ss or and shrb jnp jl inc mul addr16 jne test (bad) sbb inc jge in mov adc idivb test inc push stc push out movsl scas jnp mov jp xor cmp and scas adc aam mov scas outsb loop or adc adc fcompl (bad) dec adc or inc pop mov push pop cld negl mov jecxz cmp es (bad) sbb or shr mov mov push cli sbb or dec or mov mov fxtract mov adc pop ss int fisttp (bad) (bad) mov test repz xorl das inc xchg mov xor inc (bad) cmp ficomp cmpl in orl stos push and fwait and repz test mov pop xchg insl mov in mov jmp mov sub rcrb push in sbb ss pop mov or nop mov lods push xchg aad dec fptan xorl pop pop loope mov fcmove add (bad) sbb jae in push push mov pushf jnp (bad) xor cs cltd xor pop push flds inc inc das cmc xchg sub xorl mov lds cli push mov push pop addr16 pushf and aam (bad) pop mov inc push adc mov imul pop pop xor outsb clc and xor scas lcall lret cmp adc loope dec js (bad) mov or fwait dec mov push loop xchg pop and mov scas push and mov in cmp mov (bad) dec into stos lahf gs es xorl xchg movsl rcr cmp aad mov jnp cmc adc test mov jmp adc je or jg dec outsl (bad) sbb adc adc jecxz in rcrb movl dec inc (bad) repz sbb inc inc jo push inc and jnp dec popa data16 cmp mov mov add adc leave or push mov xor or fidivr fcoml mov add pusha cmp dec in in loope fsts enter out in outsb fiadd std jae pop and shl or lcall scas push arpl movsl das adc leave hlt and xchg add pop cmp add nop (bad) out mov insl in aad jb outsl lret loopne xor out xchg pop adc out adc jl ljmp sti test push mov and int3 movsb inc xchg sbb push in ret jp sub outsl push and inc adc lcall push out adc cmp adc or lods adc clc (bad) ljmp pop idivl (bad) sbb pop mov pushf insl push xchg bound mov xor rcrb sbb frstor push mov jnp popa and jecxz cs addr16 mov or pushf test aad jb pusha sbb pop loop arpl cmpsb mov pop insl dec imul or add lret push daa ret jnp je lret jnp aam jno mov mulb fcoms shlb jmp adc jne push and xor sbb cwtl jge popa leave nop and addr16 icebp inc out sahf dec sbb outsl inc sub call test rclb pop cltd mov (bad) jecxz cld cmpsb test mov xchg push fdivl shrb loope inc in fsubl sbb in cmp and addl sar insl mov sbb (bad) ljmp divl mov enter sbb pop enter cmpsb mov jle lret (bad) jae les ficoml lock jbe aam mov scas fldcw dec and leave lcall (bad) lahf and inc mov jmp rorl jp inc sbb jmp rorb in jbe rolb lret mov (bad) jg fs fwait js pop sti or pop jg cltd sbb in stos sub xchg js std pop lcall aas dec cmp test inc fs jae data16 insl xor dec or daa jp mov in mov mov fildll out jns cmp add repz push pushf mov sub cld les int3 lret pushl test push cli or dec jle in (bad) int xchg mov in pop aas mov mov hlt sub les ja jg mov push lea outsb iret lea sub mov aaa mov xor add jb loopne insb dec xor frstor cltd jbe int3 add stc movsl pop test pop push inc ret add sbb xchg ljmp or mov adc mov in push push cmpsb leave frndint jecxz xchg push cmp sub test push push xchg jecxz xchg sarl pop shr lret inc sbb lret lea lcall add fldl sbb cmp or out pop mov popf scas add daa push dec fldl lods enter adc icebp mov cmpsl js pop lcall repz cmp push sbb or inc add cmp nop push sbb push cltd push push lcall mov jbe pop dec pop lahf pushf (bad) shr xchg jnp outsl rcl mov xchg sub or jne push stc and xorl jle jecxz push and test sub xchg outsl lea out or icebp cmp movsl stos mov call popa out pop stc add in pop sub sbb mov inc xor mov dec xchg add lods inc add or shll sbb int ret (bad) popa test mov sbb sbb loop jp push mov push lods enter dec sbb and scas lods imul mov and js icebp mov pop lods inc pop out test aas lret xor or adc ret std adc xor mov adc push gs fwait mov outsl mov enter or mov in xor bound pcmpgtd pop push mov aas jle (bad) mov insl xchg lret xchg dec aam bound movsb sub cmpsb inc sbb lods mov rcl push mov sbb fisub sbb push in arpl in jmp xor push xor cmc or scas lods pop movsb add fist jnp (bad) adc cwtl lret jno sub jnp aaa mov push jge pop mov and cmp dec push mov sbb test push ret (bad) (bad) lret dec pop outsb dec adc xchg nop xor popf add fwait loop (bad) jg push jae cmc dec xor and sub xor repnz out mov mov gs jecxz (bad) clc push ret stos adc jo jge mov or ds mov dec hlt pop scas mov fstpl (bad) pop insl sahf test stos mov cld inc das mov pop push dec cli jp lea es mov jmp aas ficom repz dec movsl cmpsb and xchg cmp imul aam mov or push xor pop sub hlt inc and cmp in sti addr16 andps ss ret xchg mov push jg push and je mov imul and aaa mov mov mov cmpsl dec sbb sbb pop out sbb pop scas sub push sahf push imul xchg mov adc or jl push xchg cmp jns jmp js sub xchg xchg xchg int3 jmp mov fwait add stc fcmovnb enter xchg clc xchg push inc mov loop push les inc lea inc pop add neg (bad) leave fcompl arpl or xchg jl rolb and jno sti inc push mov add adc mov sub sub hlt sub cld push movsl cmp mov rcrb inc movsb xchg je stc jecxz adc mov mov jae pop ja xchg sbb sub loop (bad) in repz ds les jnp dec jb mov mov mov mov (bad) mov lock popa push sahf movsb fs adc or mov jg jne call push jecxz mov int3 loope cwtl loop jle (bad) lock imul dec cvtps2pd mov cmp push (bad) fistp sub je and movsb adc in inc test push inc jo and cmp push inc add mov xor icebp repnz xor loop fsubs sub fcomps mov pop mov imul loopne neg push loope test push pop mov sub push and mov pop ror or ljmp (bad) lahf ret inc fmuls lock cli cmp popf pop (bad) nop pop dec mov sbb rolb (bad) cmc call add fs xchg (bad) cmp sti fisubrl xchg xchg ljmp pop add lea out repz mov popa test loopne jg mov js loop cld arpl ret push or iret push fcoml lret or mov cmpsb or mov sti push or outsb into call out ficompl xchg or (bad) push outsl ja fdecstp or xchg add pop xchg dec (bad) pop dec xor outsb xor xchg pop pop add and jbe mov rcr mov jl push and nop aas sbb mov sbb cs nop and dec pop xchg jmp shr (bad) mov (bad) mov mov sub dec imul xor clc movsb mov add test scas xchg push dec inc lahf jno pop xor fs inc sar mov repz mov xor xchg aaa sar cmp fisttpl xor mov lods mov stc pusha sbb fs xor popa or sbb xchg dec loopne mov sub out push lret and lret insl adc dec fsubrl inc sti inc jge je pop movb test cmp pop add and nop dec aas xchg sarb add push jae xchg xor rcrb lods pop and dec out sub call xor jp icebp (bad) or inc imul lcall in std jg into cmc incb movsb mov adc in xor ljmp or jno mov test icebp xchg cltd hlt jge jne mov out cmp adc mov fiadd jne xor mov fcomip mov int3 cmp xor or hlt adc outsb push (bad) mov pop add adc in lds or clc cmp xchg and or push or mov hlt jl in lods aam in jno sbb adc cmp and mov and pop mov push mov jb or cs imul lret pop mov in push dec jmp xor push cwtl xchg test inc mov push sub pop (bad) inc cwtl fbld int stos and and mov xorl daa or lret or dec mov test inc popf mov and add and ret test push cmp xor cmp in outsl adc adc int3 lods ret cmp ret icebp into loope sbb and mov pop mov sbb jae test fisubrl arpl pop insl (bad) (bad) aas scas mull pop pusha stos addr16 push mov daa jmp fsubs stos and jmp pushf out mov push or mov loope popf mov mov inc imul add in sbb rcrl lahf push imull bswap aas mov (bad) xor xorl rolb dec inc jl jbe outsb loope jo fsubrl dec xchg push inc rorb lret push sbb fdivr jge add push jl jb cmovno fdivs push push pop test fbstp dec je push insb mov sbb xlat leave add es mov adc add int3 out mov insb mov out push pop (bad) (bad) lahf ds stos fldl leave and and fnstsw sahf add push dec in lret stos dec jns stc mov cmpsb xchg repz mov and fdivr lods xchg jnp push mov and jg mov out cwtl nop (bad) xchg movsl push push add jmp in stos jno aam xchg xchg out das sbb push sbb inc pop cmp (bad) xor sbb jp in movsl mov jae test xchg nop cmp xchg test mov fadd movsb dec iret insl stos inc sbb addl xor mov fstpl sbb sbb jg sub jo test pop jecxz int3 outsb fsubrs push insb arpl bound or jo cltd push fs es mov or mov in xor pop int scas xchg sbbl mov jecxz ficom mov loope jecxz (bad) sbb jge loopne sbb sbb adc lret and fist and push xchg scas std adcb aaa or shlb adc das inc aad inc push sub push das lods sbb popa scas loopne mov repnz pop int lock mov cmc add xchg call xor mov cmpsl adc add sbb cli dec adc nop sbb pop lock jmp mov pushf and rolb jg mov shll xlat xor les insb aaa jbe sbb push inc ja jp inc mov or lods out push dec mov mov jl dec popf test jp in add mov js jp dec inc (bad) aas dec dec and mov sub loop sub adc sub ja insb mov mov test lea es xchg xchg or dec nop mov inc xchg jae or fistl mov lea sbb push shr add mov jge fstpl lcall lret addl xor pushl inc sub push inc lea stc jnp in dec inc inc xor ret mov fcmovu xchg pop int3 sbb ror or jl mov add fwait arpl pop iret inc das dec gs cmp hlt gs xchg aas inc gs out mov jbe mov fbld jbe ficom or mov sub sbb xchg fneni(8087 xchg stos mov cmpsl mov dec xchg (bad) inc ds jl adc dec ficom aad cmp js push ljmp inc leave push and cmp or push dec cwtl or cltd in push or out daa cwtl adc dec sub sbb xchg fsubrl enter xor lds xlat inc inc or cmpsb sbb mov push popf sub faddl sahf test repnz inc sbb test fwait das mov add fnstenv icebp xchg jbe lods clc in add jl sub sbb test sbb sbb pop icebp mov sbb push cs into cld loop stos mov (bad) jae or inc push push lret popf sub sbb pop xchg pop pop mov jnp sti cltd sbb lcall addl (bad) sub cmp xchg push jno jmp call xor in inc lret test dec fstps loopne add pushf scas inc inc sub mov add (bad) add or (bad) mov pop mov mov cmpsb fldt xchg (bad) ja subb inc pop aaa inc xor je fstpl pop outsb cld addps cmp cmp xchg (bad) fildll cwtl jbe addr16 out insl scas stos and popf ljmp int ljmp cli pop push das pop or sub icebp outsl daa sbb mov jl jmp xor or lret flds sbb repz xor pop mov mov cmpsb xlat sbb dec or popf mov cmpsb shrb arpl push fldenv les ss mov aam popa insl push lret or addl enter pop push push out add loopne mov jb xchg push insl pop cltd out jmp jg push jecxz out call inc or and inc jle xor test push cmp ds dec mov sub leave adc shlb std pop and sbb xor cmp push int3 flds sbb pop loopne push das imul iret or mov dec pop fidivrl xchg imul jle mov fisubl xchg fcomip out enter sbb fcmovnbe lock or fnstsw jle lds lcall es adc xor sbb je out dec loop xchg bound xchg std hlt nopl push cltd push xor adc mov inc jno push jle clc dec test pop jmp scas push add push out lcall imul aad lds pop in in out xchg xor dec les add mov mov xchg fildll xchg repnz insl fidivr inc jb test call out add fildll cwtl xchg cmpl lods cmpsb fisttpl lcall or fwait or ss xchg decl andb insl inc cli mov ficom mov jno insb pop sub dec xchg xchg jae push enter jne out mov inc dec in test mov daa nop (bad) in dec mov mov xor push push (bad) mov ret pop push movsl xchg imul add enter sbb jp roll iret hlt call stos insl add test lahf cmpxchg mov mov jbe fcompl popf ret imul mov mov xchg xor push ss push mov inc dec jo js push or popa jge pushf pop sbb lahf cwtl sbb stc fstpt int lcall and sub imul sbb jbe mov cmp xor jle adc cld call cld jp sub mov mov mov and xchg mov in mov push insl imulb shrb mov mov lret xchg cmp push insl sbb into mov sbb repnz in jns cmp sbb sarl pop dec pop hlt je fbld lret fwait add sbb fldcw dec mov fcmovnu sub in int and test mov rclb inc jp or xchg inc dec aaa xor mov ds int3 cs (bad) and jne negb mov pop daa dec push sbb adc popf inc sub or lea push lods mov ret roll dec sahf outsb in sbb fwait data16 xor pop mov out scas pop in xor inc dec loope addr16 sarl sbb push ja popf das rol repz (bad) insb int idivl pop lds movsb jle imul cmp mov sbb test test cmp inc fdivl dec xor lret sbb sub mov or mov aam daa ret (bad) jb lret faddp push cmp hlt repz push xor add or or int popa outsl ljmp scas data16 or movb cmp xchg popa imulb jae cld ljmp scas (bad) ljmp inc hlt mov imul and mov dec mov cwtl and mov xchg add (bad) fistl inc and pop subl lods sub cwtl in push outsb mov pop ljmp ss xor adc sti xor movsb stos xlat into and cwtl dec rep jb cwtl es bound pop push or jg ja or sub inc (bad) addr16 ds cli add xor iret dec pop scas dec insb test lods repnz adc call call test sbb (bad) sbb jne icebp (bad) or call push imul fildl lods push outsl or jp mov mov push stos cmp setle rcll xchg dec js daa xor movsl pushf or xor dec scas mov jp loopne popf enter mov sub lods ja push ljmp push out sbb std movsl dec add push push sbb pop addr16 jae push jo fsubl hlt adc sbb popf pop pop push and stos (bad) arpl in pop ret into inc jmp daa pop and push outsb lret daa testl jmp jno ret push in loopne fwait pusha and int3 cmp jle ljmp js inc into jle jns sbb adc in ja cmp cld stos shll fistp sub jmp arpl les or lahf gs fistp in inc in cmp pop push insl xchg (bad) repnz cwtl push std inc or sahf jb and pop dec pop lcall dec and lcall incl roll mov test (bad) das and ret lods xchg lahf or mov push loope jecxz add in or sub mov pusha in (bad) or jmp sub movsl mov jp pop into out fidiv gs cmp repnz (bad) lods adcl pop icebp lds icebp jnp and ficom aam int3 fstpt pop je adc insb insb arpl ret cmp mov mov nop stos jbe xor jg sub cltd outsb or mov int flds popf or adc cmp adc (bad) loopne fistpl lods jmp xchg jne lret jle push cmp cmp mov dec mov arpl push lahf shlb xor cs add dec dec xor fisttp or adc lea aaa add jl xor in add imul es stos push fnstenv fwait push outsl pop aas ljmp shl mov xor xchg fadds xadd inc mov fisttp mov fnstenv pop mull jmp push (bad) out daa xchg test lods dec movsl cs movl fstl std hlt dec repnz call jp ljmpw jb (bad) mov jo test lds sub dec pop dec cmp cmp jae (bad) pop xadd pop nop rolb pop adc cs lea jg popf fbld xchg in mov stos jmp mov mov loopne out or xchg mov cmp pop cmp sarb fidivr lds add xchg orb inc cmc inc inc jno lods enter loopne mov rcll mov or outsb jp cmp in push pop mov scas mov xchg mov mov jbe sub mov ficoml lods jle movb out xchg cmp mov fist pushf movsl inc les push iret mov jle aad add cmc pop pop jmp push xchg fidivl adc (bad) push xchg pop cld (bad) pop sub pusha aaa sub mov add adc adcl adc sti pop ret push adc repnz mov (bad) pop repnz jb les sahf fidivr lds popa mov icebp sarb pop add jno push cmpsl push xchg jmp icebp lcall adc gs stos pop sub push mov mov xor arpl into daa fsubr fwait icebp clc inc or xor inc clc andl cmc outsb inc jmp dec call je (bad) movsl cltd jns jge push xlat mov lret in or lret mov cmp and (bad) (bad) xor xlat xchg sbb and mov clc imul jecxz gs outsb dec and sbb sub jnp lahf sahf insl loope lods daa cmp les cmpsb imul cmp (bad) jb (bad) es fildll xor cli inc ss pop ljmp cmp fldcw sub stc dec loop aam cmp ficompl push pop std outsb add lret jb adc out pop inc xchg push jnp push outsb popa inc insl popf mov add daa dec push in and sbb fsubl out and xchg pop sbb lret and jno js sub ficomp mov push std push pop stc and loopne mov out cmpsl jbe mov (bad) jmp push mov inc cmp fisttpl ss in jbe pop hlt insb sbb loope test out xchg daa int out stc lods sub cmp dec pop pop aas imul call mov into scas or dec je int jl negl outsl popa sub stc mov ror jne popf mov xchg push mov inc xor dec or jl in jg dec (bad) divl aam xor shrb dec mov rclb jp mov add xor scas (bad) loopne inc repnz add rclb aam ret out lock loope popa inc (bad) mov or xchg (bad) loope add (bad) or test mov xorl lods stc loopne push in or cltd imul in lcall mov jge add leave mov aam cwtl pusha lcall rcrb xor xchg push mov scas sub cmpsl ficoml stc add ljmp cmc call xchg iret jno movsb testb inc data16 ret pop sbb and imul mov aad loopne (bad) jno movsb or iret cmp push xchg lret and cmp iret fwait pop imul icebp and cmp mov js sub and lret mov sub cmc or clc xchg pop add les loope call outsb (bad) xor jmp sti mov test sub sbb sti pop orl xchg or aad push mov (bad) mov xor insl fs push loopne and popa cmp (bad) (bad) aaa stos (bad) push lahf test sbb stos and or adc rcl insb sbb outsb xchg mov xor push push push loopne fnstenv inc sub push loope aad negb leave ljmp lds add ja shld jmp popa fiaddl mov cmp pop repnz mov sub cmp dec mov jns push inc mov pushf push and add or fildll loopne lret (bad) out or mov cs push mov push lock int3 in push lds sarl sub jecxz push movsl jecxz add rcr pop cmp or lods mov dec scas mov push cmpsl add mov adc in aaa mov mov aad into dec dec inc or addr16 push xor (bad) fisubl sbb inc adc lahf sub je push adc (bad) out mov inc inc xchg in (bad) rcr enter std mov icebp loopne jge fdiv ret jmp mov and jmp (bad) loopne and sub (bad) mov pop push scas xor or jb (bad) pop sub or push cmp ret jb lcall fist add or adc iret ret jecxz xchg call subl es cmpsl or std lock mov fisubrl in sub mov pop lea jle (bad) cmp xchg and pop mov pop roll pushl and mov arpl loop lret (bad) mov add xor (bad) cmp inc (bad) enter cmp push jb add scas or xlat cltd xor mov add popf dec lods sub mov pusha imul xchg aam adc sub test scas push mov dec cltd adc push stc cmc in adc aad (bad) mov pop sbbl lods or cmpsb lods xor inc (bad) sub jne mov xor sarl cmp xchg and dec push test lret push add mov xchg pop data16 test lock sbb faddp adc push xor mov push add js idivb fs aam loopne fldenv (bad) aaa inc xchg sbb sub mov lea (bad) mov mov xchg ja or or movsl push (bad) fist add gs mov pop repnz cmpsl cmpsb dec sahf pushf jnp cmp jp js jle out sahf outsl fbstp lret or shrb cmp xchg imul stc lret inc adc cmp push dec int3 jl scas add xor add leave lds popf cmp ja jae mov adc sti push or aam xor xchg test pop jb lcall add andw dec jcxz,pt loopne int3 imul mov into js lahf es sub mov frndint mov cltd cmc mov pop mov sub fadd outsb mov dec xor icebp imul out xchg xlat popa xor (bad) sbbl inc push dec inc adc xchg (bad) jnp shlb int mov mov fwait outsb (bad) clc jle cld arpl inc movl es jno jns addr16 mov jp mov lcall sbb and in out sar inc (bad) lret cmpsb sub pop push test mov es enter loopne jg loope cmp pop adc mov jle das es fsubs dec cmpsl lahf jb inc out (bad) mov or scas sbb inc (bad) sub stos xchg mov jno pop out sub sbb mov bound fistp mov jg xchg fwait loop mov cmc push xchg pop (bad) cmp add stc pop jns inc sbb je fldt add inc push out ss aad sub fdivs dec pop shr mov dec mov outsb jnp rorb stos xchg push jge orl aaa fstl test and jmp test cli loop mov push pop mov dec xor cwtl test (bad) mulb push and jb inc xchg add scas arpl imul inc cs (bad) mov dec fdivrl inc jns jbe stos aad adc push adc push sbb pop bound cmpsb scas lods iret xor mov or insb cmp dec xor lods add ds cmp loop mov cmpsb loope cld xchg scas ljmp cli inc aam clc rcrl hlt dec xchg cmp in mov inc inc bound inc (bad) xor and jl jle hlt mov cmc push push outsl mov or movsl loop pop fadd loop xor (bad) aas push fsub ljmp jb and inc loop cmpsb jb in jge pop cmp mov arpl xorl jg inc aam lds scas dec idivl xor add inc rclb loope cwtl push jg inc add mov sbb ror jp inc inc sarl add subl ret mov mov and nop jecxz loop fdivr mov push shll adc inc add scas mov and cltd dec cmp ror movsl inc push or mov js adc int3 out mov daa pop in pusha add lods popa or cmp stc cmp add pop pop stos pop cmp aam pop and lods mov ds test nop iret imul xor imul rol pop clc clc jp ljmp jnp xchg je leave gs fmul loope fnstcw fisub xor push inc stc lock test test xor insb jge stos test lahf adc xor (bad) dec cli dec ds stc and inc cmp adc inc gs out mov std mov (bad) sbb lods add jo or mov test jbe and lods das rolb mov pushf pop sbb sub mov jp pop mov pop adc mov out mov mov push mov adc in mov jnp xor test imulb stc (bad) push adc lcall test repnz inc xor (bad) daa add call fadds jge mov add jle pop push mov sbb mov int hlt popa mov test jg (bad) jmp mulb cmp xchg sub lods fldenv mov stos out xor adc hlt out pop and push jnp nop lds mov fdivl sub ds cli add push and scas shrl mov pop aaa dec xchg mov sbbb (bad) dec shrb jge ror popf or lret (bad) nop cmp sbb inc in sbb movb push int mov adc lds push sarl push xchg fistp mov jl in inc push xchg jbe push bnd push mov and cli sbb and lods sub (bad) jne fwait mov out xor push movsb lahf mov mov xor cmp pusha pop in and jmp push sub loope test jb (bad) fildll pusha outsb sub and dec push fcomps add les and rcll imul pop test aad jp sbb push call sub fldenv xchg push pop mov jo sub push mov mov add popf dec and lods cld xchg sbb sub dec add js int and mov (bad) btc divb (bad) jne out cmp imul xor into inc stc lahf (bad) fdivs adc int3 cltd add xchg adc pop xor fs jno bound and andl add jle pop ja frstor repnz or hlt test cld mov stos cmp lods xchg jne pusha in mov jl stc shr jl add pop dec sub inc fisttp xlat mov push sarl scas inc ret sbb jge jns faddl mull sbb adc (bad) adc movsl xchg mul jmp scas lea sbbl insl add pop push add push pop lods and pop cmpsl jbe jmp push hlt lds fist and xchg out mov cwtl aad dec adc mov add cwtl adc stos movsb shll xchg hlt sub adc push mov mov inc das (bad) jp daa ret cmpsb cli push testb and movl jb push repz sbb dec in mov dec sub stos push jno cmpl test std push add fldl2t and out jae ja daa fcomps mov xchg in pop out mov aad xchg jns push scas sub push aaa lret jno mov jge push sar xchg cmp mov add fstp pop mov cmpsl cmp mov push push test out movsl mov arpl (bad) adc loope and out pop push push jecxz pop sub mov adc mov mov leave and sub push inc ret iret push sbb xor int push mov nop add popa les inc (bad) jnp cmp adc sti xor fmulp into insl aad mov stos fnstsw orl cmpsl sbb mov mov pop push popa ds ljmp (bad) insl nop enter fs inc idiv mov (bad) jmp jp pushl sbb insb in sbb or xchg (bad) fsubl gs dec sti lods (bad) jmp add rcl mov into xor stos test mov lods jmp mov ljmp ljmp dec stos mov ja dec sub pop xchg dec push xor xor mov loopne mov lahf jge mov scas mov ja inc inc xchg out pop out lcall fidivl cmc sbb push mov cmp or xchg (bad) xchg push mov mov js in cwtl lcall lahf adc mov lcall sahf xor mov or aad jl jecxz cltd cli mov xchg cli hlt jecxz fsubrl push andl push or repnz movsl fnstsw dec (bad) mov cs in push jns and mov push pop scas repnz xlat mov mov cld gs xchg into (bad) sbb ret popf cltd outsl mov es out cld leave mov mov imul jae (bad) jae pusha jge push dec pop mov or mov int ficoml mov es stc push sbb cltd or jmp mov sbb and jecxz sub or jne into mov scas jp jnp jae lods scas mov ds and mov (bad) ret dec push cmc inc cld inc idivl fsubrp add fwait add sub repnz pop pushf pop lea adc mov and or lcall repnz pop and outsb adc jns in ljmp mov and mov insl test aas mov lcall mov imul imul pop and in jo mov loop fnstenv mov out or mov lret fidivr iret iret adc push mov or outsb add adc aaa lock je hlt push lds repnz push xlat loope and mov jb insb mov cmp lcall in lret outsb push fsubrl hlt push adc jge push test dec stos out mov inc push adc jo push aam out xchg (bad) movsl dec add add pop adc push adc sbb (bad) adc push mov outsl in sbb xor ljmp je in cmp push into mov adc sbb jno,pt xchg xchg in cmp add push loope add test cmpl mov cmp sub push fiaddl lcall mov clc mov pop add lret xchg push (bad) xchg xchg arpl cmp or (bad) (bad) inc mov inc add cmp inc mov xchg xchg xchg sbb mov push add (bad) lcall subl jo mov sbb stos mov pop mov xchg mov jnp fdivrp testb or jbe xor cltd cmpsl nop negb push in mov jns push movsb pop adc xor xchg imul jns shr sti jge sbb stc cmp repnz stos or mov adc nop fdivrl cmp in sbb (bad) jle xor out jno xlat out pushf jg jg lret loopne mov mov xchg (bad) mov add imul lds hlt into mov sar outsb and add outsb out inc cmp fs popa ljmp roll mov inc and ljmp jnp xchg mov sub fidivrl jecxz mov jae fidiv adc xor adc outsl adc dec test bound xor pop dec fild jns pop add aas push or in pushf insl out loopne repnz sbb inc test pop bound lret jbe add cmp mov adc lods mov push sbb sub push (bad) sbb sub clc call aaa repnz inc push cs jo (bad) mov sbb push push fistl or fwait hlt adc stos push sub in sub out out jns (bad) mov rolb xor dec rcr cmpl mov push sub adc cmc add or xor cmp dec xor mov adc mov in fcmovnu sbb lds (bad) lds dec push aas xchg xchg daa in lahf cmp mov xchg jo mov mov xchg push ret int cmc mov xor and dec sahf mov dec aam stc mov dec inc mov dec sahf rcrl fcoms push out push dec stos dec out jp mov pop adc cmp fs das lahf jl rclb clc xor and enter mov nop cmp (bad) int3 mov xor xorb idivl lds in inc popa test (bad) aam outsl (bad) movsl cmp in inc add mov and xchg pop xor cmpl ret xchg cmpsb fildll out mov and scas movsl cld xor adc push cmpsl jne push inc mov xchg add or push xchg sub cli in adc je pop lret aam (bad) mov lahf add push pop enter mov pushf cmp push mov jns (bad) in mov add and int lcall cmc aaa repz dec outsb fwait popf or aas les sbb cmpsl in jno dec sbbl sbb insl int ljmp jnp mov enter outsl add dec clc pusha into cmc xor mov pop popf fidivrl hlt das adc cli addl outsb mov inc sbb or push fisubl mov pop dec jns pop cmp xchg lea sub decl mov push ss jg data16 cmpsl dec and scas jp mov (bad) mov add negb xchg dec mov insl rcll pop pop into mov push movsl bound rorb lods cmc add mov push push jns insb mov aam mov insb sti add pop ror icebp inc sahf dec (bad) cmp dec aam cmpsl scas jno cmp aad push pop and jp je pop ja sbb mov sub and mov cmp mov imul mov push sbb dec sbb sub dec fsubrs and add loop frstor push push push sbb cmp (bad) sub xor pop leave in cmpsb or insl xor cld mov cltd lods stc mov dec daa xchg sbb pushf sub add sarl inc lcall or sbb mov je sti jb,pt inc mov lds aad imul ficoml or out xchg imul les out pushf inc out rcrl (bad) jbe jl bound loopne nop push push lret push dec rorb inc out or adc scas pop fisttpl inc mov out mov xor in fsubrl inc lods (bad) push les jl imul mov mov out cwtl or sbb cltd mov js mov jmp mov lds pop mov in inc pop (bad) jnp or and fmull jmp je rcrl repnz jp lcall adc sbbl mov mov aas jp sub dec (bad) daa bound and cmp jle lcall jmp sbb xor movsl dec sbb in jp stos mov cmpsl sti cmp or push pop imul mov mov repnz pop mov mov cmove or sbb push sub cmp xchg leave lret cwtl xchg push mov movsl pop std idiv aaa xor push sbb sbb cmp sbb test xchg or dec xchg lcall aam mov mov in sub jmp inc push xchg jbe fwait imul xor jbe mov je xchg imul inc daa adc dec mov rorl fcoml push push add sub movsl les movsb sub daa icebp int3 fwait in pop sbb or fcmovnu jne inc sub or (bad) jno int (bad) sarb jg dec call pop xchg scas sarb jge mov mov in outsb jl,pt push mov xchg fstpl std inc pusha mov xchg test inc and cli ret inc scas cs fs repz dec sbb and fistpl (bad) push inc imul jecxz cmp mov pushf ss add adc mov loop sbb jbe out adc adc nop add jmp jmp insb shrb dec cli sti xchg push inc mov jge adc aad inc mov pop pop lods xchg mov lea insl inc jnp and scas rorl les cmc xor imul jp pop sbb test cmpsl sarb mov xchg push pop mov lret ret mov int3 rcrb mov loope aam hlt lret push movsb iret sub repz ror jge jb flds xor movsb leave pop cmp push and or adc imul data16 and (bad) ret or lcall clc mov dec cmp jno cmp inc adc pusha jecxz add fmuls std add popf js das mov xlat pop jno out icebp pop popa into pop or push lea mov or in push dec daa std jp clc movsl jns div add xor lcall flds movsl clc testb insb movsb pop or xchg mov inc jl mov push daa rcrl in jne mov adc test (bad) in or aaa xor xor rolb mov in loope dec cmp lods and sbb inc or mov adc aam push test add or aas add push push (bad) push in mov ficom and xchg lods stc pop fisubr int repnz mov sbb test (bad) cmp rorb add cmp lock mov cmp ret and fisubrl fidivr enter xlat ds push cmp aam mov mov and pop sub dec loop add sarl mov xor insl fwait in xor ret movsb mov inc sbb fnstcw scas icebp call or ret adc ja push xor push pop scas mov scas mov into mov or je,pt cmc jb push or cmpsl sub insl add and push sub adc dec outsb icebp push lret ljmp pop loop data16 pop andl (bad) or add outsb hlt sub mov mov pop mov and divl jp pop in and outsl jo (bad) roll xchg rclb into push push mov pop xchg jg rcr jecxz and (bad) mov hlt sti (bad) notl mov das or jae das push jnp cld push sbb push daa dec lret cmp push push clc dec or jne pop pop scas jl out mov cmp lret ret test scas push inc inc out decl xchg nop mov negl das push fstpl lock xorl loope xchg mov sbb insl aas addl xor inc cmpsl aaa int xor or mov xchg pop dec mov xor in out pop in cmp mov dec sub xor mov jne loope add xchg lock repz test sub jae sbb inc sbb clc and sub xor (bad) in adc stos sub dec adc jecxz into cmp add sub fsts push pop jp out fcompl int push push add icebp pop add int3 or dec sub loope fnsave xor or mov rclb outsl aas icebp lds xchg (bad) or arpl add sbb jge and mov (bad) notl ljmp aam outsb adc add (bad) xchg sub mov adc lret es andl mov sub and inc out scas jno xor add lret jbe pop aaa or and jl mov xor cli imul int jo std mov mov jnp cmp dec fnop fadds mov es mov jge xchg xchg sbb gs repnz mov cmpsl cmp push mov inc ja fistp add mov outsb rclb jb insl dec xchg jno pop lods iret pop loop (bad) sbb decb inc sub aam (bad) mov pop test mov outsl call stc out std dec test pop out jl and mov lahf aas mov sbb cmp sub and inc jmp lock and imul add negb cmp xchg scas pop xor mov dec xchg add addb sub adc bound call in (bad) jbe fstpt xor adc shrb xchg les aas pop inc repz (bad) pop arpl lea fwait movsl xor mov push cmpsb sub outsb in cltd mov push ja aad or xorl xor adc inc pop or mov fst mov dec push dec bound jp or daa inc mov int sub fsubl cli adc ljmp ret subl push in cmpsl jae xchg and notl mov out pop xor xchg add lret mov mov addr16 cmp loop add enter jae in pop es pusha xor mov loope lahf pusha hlt mov adc pop dec push popf jle jmp adc mov lods xor dec gs sub mov int cli dec push popf mov mov pop adc pop add addl and xchg pop mov mov bound sbb fwait mov stos mov cmp pop idivb ficompl gs pop pop mov adc add xor pop out mov test or pop adc clc cld xchg xor mov jge fsubr add sub (bad) adc jmp and push xlat inc bound push mov sbb icebp adc arpl lcall sti icebp clc out add dec add mov mov push sub mov xlat sub ficom cwtl and mov js loope movsb adc mov std mov mov imul (bad) ljmp cmpsl shl rcr les daa jo push (bad) dec aad add mov cli je fwait outsb cwtl sbb out mov bound test (bad) (bad) xchg scas in pop stos jnp pop pop cmpsl mov push je mov cmp repnz pop (bad) je frstor mov ljmp sbb dec dec cmpsb cli cli jbe iret mov insb mov fs lea lock fimull pop out std (bad) lods add mov (bad) jo int3 aad test jns push (bad) push stos sahf cmp sub xor lock cmp leave std push mov shll scas mov jno jle cltd (bad) push aas mov xchg jo loope jecxz add out or sub ljmp test lahf fiaddl push das aad testl pop aad mov pop ds frstor mov adc movsb pushl ret jmp stos push inc loopne roll mov fisubrl fs jge (bad) neg fiaddl cmp arpl int ds ds xor lret inc scas mov inc cmpsl xchg add mov cmp mov mov mov mov in or fucomp sarl movsb fucomp cmp inc push mov mov sbb aaa sbb sbb add movsb xchg push add mov sbb lret ss mov into jmp push int3 mov push inc or mov or cmp jne jle lods mov cltd push or (bad) cmp mov jo mov adc not jmp repnz jmp pop and lcall inc mov std cmpsb fisubr jns jmp dec push (bad) dec pop jge pop and add adc xor clc mul jns,pt pusha out mov pop (bad) cli into inc loopne cmp arpl loope out jle xorl mov shll xorb ss jle stos push pop add mov das es xchg int3 mov sub or and cli mov lcall lahf push sti sbb sti clc lret mov psubusb in int lds xchg rcr sbbb add ret sbbl dec cmp xchg addr16 or inc jp ffreep ret and test push in popa push mov in dec adc and ja stc adc pop xor ret mov jns push fild xlat mov mov ljmp mov nop or or push int3 fdivl mov mov sbb daa (bad) cmp mov icebp ss or mov out pop push lret push scas jae or aam fidivrl inc jae mov xor push fnstenv idivl mov cmp inc inc push add or mov add leave mov pop add negl jbe (bad) or rorl andl add divb ljmp inc push sbb jae ret movsl mov dec pop dec lods jl sbb fnstenv xchg mov cli lret mov in mov (bad) push lods arpl (bad) (bad) jmp inc (bad) inc and aam popa js out dec add sub pop ret in dec lret sub xor xor je mov mov push dec rolb push lret je out lea sbb fidiv xchg fwait ret cmc mov iret pop call pop push sti repnz idivb (bad) and repnz jmp stos adc mov push xor or cwtl scas sahf pusha sbb js adc mov pushf std jo insb xor sub mov mov and pop (bad) dec xchg push mov in ficom push adc insb addr16 outsb aad icebp sub jecxz enter (bad) jbe push ret pushf mov test popf adc lcall pop push mov jg int int3 xchg mov dec (bad) cltd mov dec out pop push popf xor xor ljmp inc or fmuls mov xchg call xchg adc scas idivl scas call pusha add mov aaa cmp pop ret mov fcmovnb cmp and lea or ja sub mov fdivs jo adc mov ss movsb mov cmpsb popf out mov jo lret add xor into pop shr mov add shrl test in aaa in dec mov (bad) mov mov aad push (bad) or scas clc inc dec mov inc cmp jmp test jge mov arpl loopne iret cmp lods loope cld push sbb loope rol xchg in add xor add fist test and and push test aam je loop push xor mov enter cmp jmp mov test imul cs pop push mov ret mov mov test je mov mov stos mov sarl icebp cli inc arpl push push ds mov xchg push pushf scas (bad) in mov inc sub pop in nop xchg loopne popa dec cmp mov add xchg repnz aas mov push xchg sqrtps pop call and ljmp sti cwtl xor jae mov shlb pop (bad) cmpsl ret int js mov cmp cmpsl ret push mov movsb inc bound shrb mov sub int3 popa push cwtl decl push data16 cmp mov or and add lea xor sub stos lcall repnz push jp jb rcrb adc jo or fldt iret cmp ret shrl mov gs cmp into jle push mov mov pop mov pusha int3 dec jnp out mov adc rclb (bad) pusha out adcl rorl movsl xchg cmp insb pop or xchg sub outsb movsl mov mov jl mov mov pop sbb add pop scas dec dec in into add scas mov xchg fbstp or and fdivr (bad) (bad) repz sub aas and stos mov clc andb pop pop sbb dec xor divps popl scas or mov lds stos pushf xor mov add aaa hlt adc pop lcall ja dec mov jo fwait xchg call xchg push add push jge pop dec loop fmulp jno call cmpsb cmp push loop xchg sub xor repz (bad) iret fscale xchg pop cmc aad lock mov jno fstpt cltd pop jl mov gs pop or jle das in pop rcll js jl mov sub mov dec mov add into loopne xchg push xor sub and cmpsl lahf cmp lock mov rolb mov push inc jmp sarb fwait push mov and sbb mov lods cmp pop jl pop dec xchg lret out dec hlt sub jp ja js ja cli lret lahf lahf in jmp xchg sub fsubrs inc into stc fdivr sub cmp or mov (bad) scas fnstenv jmp pop cmp stc sti ret cmp lcall pop daa sbb cmc test xor push icebp cs xor rolb in dec pop and pop lods pushf lea push jmp sbb mov push arpl jbe xor pop roll sub mov and inc fstl jae call xchg stos out mov (bad) sub jmp lods lcall stos shrl (bad) lret in data16 cmpsl fistpll out int sbb pop fst bound aaa pop lods jecxz pop cltd xor and mov movsb mov sub arpl mov int3 cmc cmp ret hlt insl dec mov pop aas mov mov and (bad) shrl pop fwait enter push clc push nop gs pop mov push bswap jo nop adcl sub movsl inc mov fwait test or adc mov sti sbb adc clc sahf repnz orl mov fnsave mov cli cmp lcall loop mov push addr16 sub das adc cmp notb inc jne loop inc fimull jns inc xchg scas in fstpt mov out out in aaa xor imulb hlt lock les pusha jo or addr16 dec xor (bad) sbb push outsl inc test cmp xlat (bad) insl lock cmp adc or push data16 or inc xor (bad) fmul jae iret nop cmp push insb jle mov jbe (bad) lret loope int3 scas (bad) popa cltd jmp movsl jbe enter xor shll adc add pop insb or das gs arpl add jb mov pop (bad) call sub testb roll sahf and mov (bad) dec inc fcompp mov cmpsl mov xor lcall mov imul leave (bad) push inc cmp and sbb sbb pop or cs mov (bad) push pop cmp enter mov loopne mov jle inc xor and out jo cmp dec pop jmp dec pop cltd sahf or jno sub sbb retw data16 in btsl xorb jne pop mov pop add sbb fdivs pop into sub xor js sarl or (bad) (bad) in inc mov inc xchg push sub daa stc cmpsb jg in aad xchg add mov popf aas push push add in repnz xchg dec push pop mov mov insl mov cmp mulb arpl (bad) inc mov stos jns ret xchg fisubrl jmp mov and push ja imul out into ret subl dec cmp adc std adc or mov sbb aaa sarl pop jns stos adc push cmp and hlt cmp cwtl cltd mov xchg dec pop js not mov mov jl mov or mov (bad) cld push and aaa pop es popf lret lea aas sub xor push out sbb adc bound xor mov movsb iret jmp xchg jle bound inc ret mov inc test dec push adc jge add andl das (bad) jmp jnp pop cs add mov xchg loopne (bad) (bad) jb jnp mov or xchg sbb or dec push xlat cmp loop xor in popa push call sub mov mov pop adc imul in xchg xchg inc ret xchg sbb xlat mov cmp sbb nop ja adc push loopne and xor pusha push loopne and xor and mov adc push loopne and xor adc jecxz pop dec jmp add push das mov in fidivl (bad) xor loop iret sbb push loopne and xor aad pop jbe mov loopne or inc cmovge mov js push clc xchg es push loopne and xor ret pop push push cmp cmp push lods rorl insb xor mov fcomi aas aas loop mov mov fbld mov cli and aaa adc scas mov aas adc scas daa out cmpl scas test mov mov repnz lcall sub popf repz push mov cmp cld add cmpsb mov cmpsb fwait xor xor add shl (bad) cmpsb adc jp popa mov mov clc cmp cmp popf testb dec sbb fstpt leave adc and stos pop pop fldenv add cmp xchg ret xchg call lcall xabort xor lahf int jae dec mov fidivl cld mov sbb adc and stos pop pop fldenv push and inc scas loope lret icebp cmpsl adc fist pop mov nop mov es out mov or jmp xchg add jb lret adc outsb adc pusha das stos adc mov test loop rolb outsb hlt xchg call les (bad) mov inc mov sub (bad) xor in xor subl (bad) nop inc stos imul xchg int pop clc cmp mov sub sbb jb push clc pusha rorl cmp and movsb push clc pusha ror pop cmp add or jp adc sub ljmp dec sub add stc sub or roll into aad sub test adc cmpsl enter inc imul mov sbb ljmp add dec and or inc imul out sbb mov sbb push add lret dec jl out or dec cmpsb xor in cmpsl cmpl cmc mov sub sbb mov dec mov test test sarb icebp fs (bad) orb gs loop das mov and inc sahf xchg sub rclb pusha mov lock push stc scas fstps fwait xchg add orl sub pop jbe test add scas insl out push nop rolb aam in inc mov fstpt jge push cltd push mov push and test adc je mov dec sub into inc iret or mov dec scas sbb adc sti and inc stos jo lahf cmpb in test test test stos jmp add cltd fs mov bound jmp mov bound add (bad) mov fdivs dec daa fistp sub lods dec fsub bnd imul (bad) int3 adc cltd mov lds test sub test dec clc dec imulb jae repnz pop lock xchg mov adc stos ja jmp (bad) stos push and daa insl (bad) ret scas movsb jp inc inc inc fimull aas scas mov cmp clc test (bad) hlt adc std push lods pop in xchg movsl mov (bad) mov cltd lea xchg stos xor ja dec test adc fwait add jns sbbl inc les xchg jmp jmp add jns fstpl pop into push push ret insb mov adc mov sarl imul jmp test sti rorl les fiaddl es sub jns sbb pop dec (bad) dec add sub rorl jecxz cs fimull je fdivp mov (bad) (bad) sub leave lea and (bad) rorb fs mov adc dec (bad) and (bad) jo (bad) cwtl sub jo (bad) int3 ja mov push mov pop adc shrb mov icebp cltd rcrl pop nop stos jmp add jns fstpl pop cltd (bad) ficom pop xchg mov outsl movsl cli jno add (bad) icebp xor (bad) mov jnp push leave icebp es cmp dec test lock jb cmp (bad) push sbb add sbb sub cld mov gs pop loope xor sub mov mov inc cmc mov and in inc cmpl (bad) hlt sbbl push rorl ljmp and mov cmp js mov add mov in into xchg mov ljmp add je (bad) jge inc and imul out cmp xor enter jns push je cmp mulb lods jle push cmp xchg cmc add xor leave or jl cmpsb ja cmp jmp daa xor insl fiadd jno sub test rcr stos cs push lcall (bad) lea dec fcom push movsb mov and pusha push test pushl leave fld lcall (bad) jle push jnp dec in int imul dec xchg mov push loopne pop xchg jnp cmp lret pop arpl push jne aas push mov mov insl insb je mov xchg inc sbb jb dec jb (bad) out scas xlat pop push xor pop jg loope adc xor push mov arpl xor sub jl js pop dec add (bad) fidiv jg movups mov xor das mov out scas jp cmp xor in mov rolb sbb mov mov stc vmwrite or inc cmp jbe push lcall and gs push test and fsubl pop jae outsb sbb movsb rcll add dec jp js cli ds xchg out jge loope stos dec mov inc (bad) sub rcrb outsl fldl xchg jnp fldt shlb jnp jbe aaa cmpsb sbb mov in push mov insb xor mov cmp nop mov clc das aam lcall dec rorl dec xchg test lret inc icebp in push push fwait outsb fmuls js push push add lret dec jl (bad) loope cmc jnp mov cli cltd jmp pop int adc fisttp dec inc int icebp (bad) sbb inc ja sbb nop movsb xchg bound addr16 inc push ftst jle adc nop jns or sbb xchg jg imul dec cmp loopne out push (bad) out outsb cmp daa jo adc adc lcall fisttpll sahf popl sub pop cmc push inc ja add dec inc test cmp sbb inc sub cli mov insl adc inc (bad) cmp aas dec call lcall test stos aaa leave cs sbb iret cli sub stc sti pop sub fwait inc or mov (bad) fist pop mov cs xor pop fnstenv scas je cmp adc jmp lea shll imul test mov es imul mov (bad) adc outsb jo or outsl and jae insl mov adc jo cli jbe adc les sbb je cmp out inc test call inc loop loopne gs xlat (bad) jno pusha lcall sbb iret push in out xchg dec xchg xchg or addl dec dec push inc arpl xchg (bad) and rcrb loope lock (bad) adc xor xchg pop mov imul sub or test daa lds and repnz dec movsb rolb cli mov dec or imul dec cltd add dec movsb rolb rorb xchg aaa or in (bad) xlat push mov imul mov dec arpl mov in or aam dec push scas jae mull int rclb mov (bad) fstps push fisttpll mov cli mov adc orb xor push repz mov inc sbb (bad) mov dec movsb rolb mov adc cs insl jb mov dec shlb gs or push shrd ret fmull lds sub and cltd ljmp dec xchg push cmp pop xchg pop or or or xor cmp lret xchg negl arpl dec ret mov pop cmc mov lock cmp sub aad inc and lea adc cs stos (bad) inc mov pop mov sub xor lock xor gs bound bound inc pop mov inc cmp ljmp push ficom mov pop cmpl ss and std cmp lret jo cmpl popl out pop add lds dec test test clc pop lds cli push ficom mov pop cmpl ss and std cmp lret jo cmpl popl out pop sbb cmp xchg or mov and cmp fcomps xchg or (bad) popl jno push call dec or lahf je lret je ss cmpsb push inc cmp or out mov xchg jl faddl and insl mov fs out push xchg call sub cmp and imul xchg mov xor ljmp cld inc sub xchg sbbl inc xor movsl into sbb test mov arpl jo jae outsb lea out mov mov (bad) mov push fdivrl sub and imul xchg mov xor ljmp cld inc sub xchg sbbl inc xor movsl into sbb test push cmp add mov or call or jle cmp lods aaa pushf es in inc loop,pn jae outsl pop shl das imul cmp sti fldl out xchg aad add and ljmp outsl in out mov dec wbinvd sub enter mov sbb mov cmc ficom mov test inc nop and pop pop (bad) jno push call dec or lahf je lret je ss cmpsb push inc cmp or out mov xchg jl faddl and insl xchg repnz imul and stc xchg push ret adc push sti push mov push pop pop jp pop inc loop,pn jae outsl pop shl das imul cmp sti fldl out xchg aad add and ljmp outsl in out mov dec wbinvd sub enter push jp push stos and pop jp int mov xchg loop mov push ficom mov pop cmpl ss and std cmp lret jo cmpl popl out pop inc fldl lret (bad) mov fldz sbb pop enter fidivl push repnz fnstcw cmpsb mov in out xchg mov xor ljmp cld inc sub xchg sbbl leave adc pop xchg lcall cmpsb lret inc mov xchg popl outsb fnstsw jo push enter ret jle stos cmc imul adc ljmp push jno test or out or xor loop pop and popf add mov xchg adcl fdivr outsb loopne inc int3 stos or fnstenv xchg jmp xchg andl std fildll es sub xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg cmp mov mov pop xchg or ret add in mov ret data16 pop imul push push cwtl mov in movsb pop jae out popf in inc xor mov mov cwtl rcrb xchg jmp and je mov loopne scas je adcl add xor stc jle add ret into push pusha pushf add leave rcrb les xchg cmc mov movsl shrl push sub rcl pusha (bad) enter mov ret mov out xchg subl les sti adc fidivl aam aas cmp cmp mov dec dec xchg add outsb mov xchg andl adc sbb test jle add mov es jns in xchg pop dec mov xchg adcl fdivr mov xchg sub movsb nop xchg mov xchg andl std fildll es sub xchg sbb mov jmp lock xchg mov bound jecxz js dec or movsb mov xchg andl lods fwait sbb sub std mov xchg orl cwtl ds xchg xorl dec mov jp inc cmp test (bad) hlt out add xchg pop dec jns in xchg pop dec mov xchg sbb mov jmp cmp ds xchg cmpl pop dec mov xchg andl cwtl ds xchg orl movsl cltd or xor insb xor or cli in xchg pop dec mov xchg andl cwtl ds xchg andl cwtl ds xchg andl popa xor inc add ja imul test ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg add and leave (bad) mov iret mov xchg andl cwtl ds xchg cmpl adc pop jecxz outsl jo mov ds xchg andl cwtl ds xchg xorl xchg lcall out repnz xor and inc not dec push aad mov xchg andl xor push cmp pop mov mov xchg andl cwtl ds xchg andl arpl outsl loopne sub pop popa xor inc add ja lret inc out or jnp xor jp push pop aas jns in xchg pop dec mov xchg xorl es sub iret test mov xchg andl in cmc mov xchg andl cwtl ds xchg subl les push sbb lret mov inc test lret mov aas push jl xchg lret aam jno and pop popa xor inc add ja cwtl ds xchg andl jns (bad) stc aas push cmpsb mov xchg andl cwtl ds xchg andl std fildll es sub lds mov cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg sbb push iret mov xchg sbbl mov ds xchg cmpl mov push inc test and dec fwait push cmp insb xor mov loopne mov xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg orl xor in mov fwait pop insb popf push out dec sbb xchg or (bad) add iretw dec ret fsubrl adc xchg adc sbb pushf lock popa pop iret (bad) xor sub sahf or int fldenv mov mov and call mov pop cmp or lret insb (bad) adc ret dec jp add popa inc int3 mov bound scas cmpsb or add or cs or or std ret dec ficomp mov adc imul pop mov fiadd and test lock outsb loope jnp dec push adc loope pusha inc adc mov (bad) jmp push iret sub out xor jmp lods jmp jl pop cltd iret and or pop mov jp imul hlt xchg jns jbe jl in or dec adc lods jmp jl fs mov pop push jo xor (bad) ficoml pop fsubrs push sti inc and jo xor inc push sub repz loope jno mov repnz sbb pushf lock aad xor bound rol sub dec dec subl (bad) iret lods inc movsl sub in notb add lds mov adcb jnp mov int mov inc int push fisttp jg lcall sbb sub mov cli xchg adc testl in int3 dec je jg outsb add mov jl nop into inc divl mov test lods ljmp aad and mov pop jp imul push enter push out (bad) std outsl jne sub clc pop cmpsb or add or jae clc adc rcl lods loope jecxz bound dec imul sarl sbbl rolb sub sub std outsl jne sub clc pop cmpsb or add or jae clc adc (bad) mov lcall pop in and imul sarl sbbl rorb pushf or push aas push lea pop mov jns add ret cmp dec addl mov jae lcall mov ds rcr lret push xchg (bad) in mov outsb rorb mov cmp aaa pop sbb push stos sti fstpl sbb sub ret (bad) mov addr16 cli hlt xchg mov adc adc mov orb jne sub clc pop and or mov (bad) mov fmuls test pop scas int pop cli xor imul shrb sub dec dec subl shrb lea cmp sbb insl arpl testl jmp adc cmp jns outsb imul sub aaa dec sub jg lcall sbb insl mov xchg mov (bad) cmp in aam ret push loop mov xor adc pop imul push int3 outsb xorb inc xor mov cmc dec pushf lock ss dec fmull mov and (bad) sub loopne scas cmp push daa (bad) jo cmp in aam ret push nop sbb adc aas sbb mov xor inc xor scas mov push cmp shlb ljmp ds stos pop inc pop push out das cmp lock insb jecxz rorl repz lock cltd fildll loope fildl mov addr16 cli hlt xchg std outsl jne sub clc pop and or mov sub jb mov pop cmp cmp sarl cmpsb mov daa sbb sub ret (bad) mov addr16 cli hlt xchg jge (bad) cwtl adc insl add add adc stos (bad) mov outsl outsl mov mov push and mov dec test and and test (bad) and adc jae sar in add mov inc jmp jb testb and fiadd fcoml dec xlat lret (bad) push fisttp jg lcall sbb jp ljmp cmp subb repz xchg ret push notb add adc cmp fst mov mov insb jns and mov fisttp jg lcall sbb (bad) cmc dec ret aas ja xor xor ljmp (bad) (bad) mov mov cltd stos ss mov jo outsb es mov outsb sbb icebp adc (bad) repz push add lods ret add data16 out ret in (bad) jne sarb in in aam ret push loop mov xor leave push add cmpl arpl jecxz jb pop pop cwtl push into rcr pop sub adc hlt xchg jns jbe jl dec dec imul sarl sbbl shl inc cwtl call adc jbe cld mov (bad) icebp mov jne jnp mov sbb and fimul xor repnz cld jno xlat or cmpsl inc add mov jp imul push mull push mov mov jae lcall out mov xchg inc ret lret mov lret dec stos enter jns jbe jl dec dec imul sarl sbbl shrb or je jmp cld rorl (bad) pop mov jp imul or sub cmp ficoml bound add jge insl mov cmp ficom or jbe jmp cmp pop loop addr16 mov push mov insb xor mov dec xor (bad) ds dec in pop repnz mov xor popa cmp sbb pushf lock aad xor bound rol sub dec lret in pushf imul inc fmuls fnstsw in (bad) mov in pop repnz mov xor jl sbb pushf lock aad xor bound rol sub dec xor (bad) push dec into and pop addr16 in sti lcall push fisttp jg lcall mov pushf leave stos in jle sub dec sahf test pop lret loopne sar outsb gs sub punpckhwd outsl jne sub clc pop int3 sub jne jo mov mov jp imul fdiv xor push lcall fiaddl gs and fldl2e mov add mov jnp mov jne out (bad) loopne cltd ficoml cwtl cmp push push lods xchg mov adc xor lock pop sub dec fldlg2 cltd ja mov cwtl fisub aam ret fsubl xchg andl xchg mov add in outsl sbb movsl push and jle cld xor mov lea dec add mov xchg addl sbb out and or mov imul cmp cmpsb aam sti sbb test xchg ror fildl mov xchg sbbl cltd outsb push sbb or sbb hlt sbb leave or jge adc sbb leave lds frstor mov iret xor fdivr cld sbb jb push lods fwait sbb sub std cmp xchg andl fnop (bad) pop imul test andl jmp jl dec and lea fs insl push xchg pop dec faddl out repz or xor dec (bad) jae mov stc aas push cmpsb call or rcrb mov xor shrl fnop xor push cmp gs in dec mov aas mov push push lods fwait sbb sub std mov xor cmp out orl and or mov jge xor add dec sub ds xchg andl or add or push roll lahf push jnp push pop cmpsb or add or xchg cmpsb (bad) dec lock push adc push pop jo push adc incl mov xor dec or movsb cmpsl mov mov cwtl ds xchg orl and stc push sbb pusha wrmsr cli and cwtl ds xchg addl sbb out mov je jmp or mov mov xchg andl add inc (bad) pop mov jp imul mov xchg andl mov push jne mov cmpsl mov mov mov xchg add push adc jmp or out xchg andl sti mov jecxz mov or pop in xor sbb sub inc pushl sahf xor pop repz clc xor pusha dec sub and dec loopne mov sub inc pop stc dec cmp xchg xor add inc dec xchg pop fildl push fist push ja (bad) popf jl bound sbb lods imul sar dec jp xlat mov test push in pop push int aaa jp nop mov lock sti mov fst bnd mov pusha nop mov lock sti mov in popf mov mov rcr pop push fst bnd mov in xor sbb mov movsl mov sbb std adc lods pop fmuls in xor sbb xchg sahf sub pop imul jae push call adcl in jae lods pop jae push call mov add (bad) fstps push jmp add dec (bad) sahf aas clc cmpsb pop sub (bad) lods fnop jnp test push int3 sub sahf add sbb mov out xchg add push adc jmp or inc jmp or loopne mov dec mov iret xor xchg or hlt inc jnp xchg and or mov jb mov fdivrl es jbe add adc dec or dec jae mov push jp fsubrp icebp and or pusha cmp push jp mov sub ret lds adc jne mov cmp jge jb mov mov subl push and pushf data16 inc push mov jle ret (bad) negb icebp lret pushf data16 inc push mov push mov mov inc push mov and in stos xchg test fbld mov cmpl push jl fbld mov cli sahf push scas or nop fbld mov lock pop int sbb adc xor sub aad mov adc mov insb adc xchg mov mov xchg adc mov mov aaa add divl insl mov ds xchg cmp mov lahf sti mov sbb xor bound adc or mov testl fisttpl lods lods sub mov test out mov sub mov xchg xorl into lds cmp inc mov push cmp mov sbb or fadd mov xchg cmp mov ret mov jge mov inc repnz push push xor mov cmp mov add in outsl sbb (bad) dec enter add or div in addl cwtl ds xchg xorl into lds dec mov jl jl push shufps sub jne jge mov xchg cmp mov push sbb cmpsb mov fnstenv cs mov sub in outsl sbb (bad) dec enter cmp les in jae test sbb incl or mov ljmp push lods movsb sub ret jmp bound mov cwtl ds xchg cmp mov sbb (bad) pop cmp inc pusha ljmp sbb enter sbb and xchg fs add test icebp add rcr pop add xchg mov aad cmp mov xchg addl or or push mov sbb push pop jo push adc mov pop mov mov fdivr cld and cmp test (bad) mov lcall les dec inc daa test sbb dec mov iret xor aam xlat cmpsb pop add mov cmc dec pushf lock scas mov orb incb fsubrs nop jne pop out nop je bnd enter loope js ret cmp ret mov mov aad in fdiv pop mov jp imul push mov adc (bad) push pop jo push adc popf xor inc cmpsl mov mov pop into or xchg mov jo push adc popf xor inc cmpsl mov mov pop into or xchg mov jo push adc popf xor inc cmpsl mov mov pop into or xchg mov jo push adc popf xor inc cmpsl mov mov pop into or xchg mov jo push adc jp sub loope test fmuls push xchg add cmp test subl adc lcall (bad) mov or pop and fcmove xor sbb imul (bad) push pop jo push adc jp sub loope test fmuls push xchg add cmp test subl adc lcall (bad) mov or pop and fcmove xor jno enter jo push adc jp sub loope test fmuls push xchg add pop jo push adc sbb add pop mov lea aas loopne push and cmp test add lcall pop sbb cmp mov pusha dec mov iret xor test pop jo push adc sbb add pop jo push adc into push mov mov dec outsl mov sbb cmp test ds loope (bad) push pop jo push adc into push mov mov dec outsl mov sbb cmp test ds loope imul test pop push xchg and xchg pop daa mov xlat cmp push repz pop pop push gs call sub adc lret jg fnstsw insb daa dec mov loopne loopne fwait and xor cmc mov mov pop inc or pop cli cld mov mov push call xchg mov test jmp dec hlt sub jae pop pop push gs jg fnstsw adc mov push jnp adcl sub add mov lret rcrl es ljmp cmpsb or sbb (bad) mov fwait adc xor fcos xor les les xchg mov cmc xor sbb popa ret in lcall dec pop jle movsb sub cmp pop inc cmp pop mov mov pop mov or jp insl fs test call cmpsl loope (bad) (bad) xchg aam pop xchg imul and das jg push and mov inc push aad adc int xor in shrl mov add sti mov inc movsl adc inc add sti mov loope (bad) (bad) xchg aam jno pushf push aas test push ja aad push aas test loope (bad) (bad) xchg aam in shrb inc xchg sub shrl mov shrb inc xchg dec cmpsl loope (bad) (bad) xchg aam pop xchg imul notb xchg pop xchg imul faddl cmp or mov push lcall imul fldcw inc jmp or out xchg adcl insb daa dec mov loopne mov xchg andl mov mov jno fdivrs pop cmpsb inc pop (bad) out push into ficom and lods insb xchg bound xchg or cmp (bad) into enter fcmovbe mov insb daa dec mov loopne xor adc jle cltd push dec (bad) push pop jo push adc icebp dec xchg push nop mov out jle leave pop roll xchg mov push mov (bad) aas and or mov xchg jg pop xchg and (bad) xchg lahf pop jo jmp jo push adc mov mov out jle leave mov (bad) fs mov adc add or sub lcall jle (bad) push pop jo push adc mov ss out mov jno add mov xchg andl cwtl ds xchg andl arpl cmc or xor inc dec ljmp dec or movsb mov xchg andl cwtl ds xchg xorl movsb adc pop std loop cwtl ds xchg adcl fisubl xchg andl testl push sbb cmp mov adc loope pusha sti lcall mov xchg andl cwtl ds xchg add push adc or cwtl ds xchg adcl clc cld test mov bound sarl push mov in (bad) jns sub pop popf xor pop jae addr16 pop incl sub mov fs mov je mov cmp insl mov fild jae push adc adc into sub inc ror dec inc mov or xorl and fdivrs mov cs cmp nop inc jmp or xchg out mov and ficomp dec rcll sti out dec sub daa stos add sub cmp repz mov fild push rcr roll cmpsb (bad) scas jne insb mov add scas loope pusha and dec or xor pop pop arpl xchg (bad) rcr mov nop xchg fistl negl rcrb jge push xlat mov fisubr in bound lods mov sbb and test push jge daa lcall hlt ret in outsl hlt test popa xchg rorl (bad) sti sub xor push loopne in adc inc (bad) jmp test dec pop repz jne inc scas push jl subl cmp stos fs aam sbb test lods sahf lock movsb adc lods int3 pop sahf xor pop jp decb sti (bad) pop sahf lahf adc and addr16 pop int enter pop mov rclb inc fstps cpuid cmpl push ds cmp es enter lret xor cmpsb (bad) scas jne dec leave push jge daa lcall sar movsb cmp ljmp notl inc dec popa xor popf ja jnp test inc cmp ffree mov (bad) mov int xor fs jle pop leave xor cmc (bad) jp lcall into pop push lds mov (bad) mov mov adc int3 mov jb xor int3 add mov sahf cmp sbb ret jmp test dec pop repz aam mov lock xor les mov push add pop imul iret push or mov cmp cmp test daa and movl jne insb and test mov test into mov dec jp mov popa movsb adc mov ret (bad) out mov out cmp mov mov into mov dec jp mov jecxz pop fwait stos jle mov cmp sub jne aaa (bad) mov enter inc mov mov (bad) or pop or xor pop jae fstpt (bad) cmp pop daa and movl jne insb and test mov test into mov dec jp mov jecxz pop fwait stos jle int mov rcll sub aaa (bad) mov enter inc mov mov (bad) or pop or xor pop jae push fistl xchg push push cmp sub and dec or xor and (bad) mov cli es inc rol sbb mov movsl add mov inc mov lcall xchg cmp dec or push push dec lahf lret pop mov iret outsb je insl adc cmp dec or pushf in out ss mov shlb in jnp mov das loop fs scas xchg das sbb mov in js call in push lds pop mov cld xchg (bad) mov ret andb dec outsb nop jmp push lods in mov pushf call repz pop insb cmpsl iret mov (bad) xchg imul sbb pop xchg fdivp mov mov or sbb xchg xchg xchg add jp dec add pop pop push leave ja ret xor add cli and cli jecxz fwait notb (bad) add in inc cmpsb rcr les xchg inc pop jl es bound movsb mov jg fdiv enter pop or out (bad) sbb jb xor int3 add add loopne dec fdivl inc iret mov adc or sahf int xlat mov fisubr sbb and fsub ljmp lods subps arpl mov xchg out das mov xor lea jg adc jmp push sub mov ja sbb inc stos mov add mov les mov jp and add inc adc inc push mov inc pop imul mov or mov mov adc xchg xor jbe (bad) xlat mov rorl (bad) sti pushf adc aad mov rclw (bad) dec sbb pop or add aas inc inc shrl lahf add out jecxz hlt je lods in mov pushf call repz aam mov lock xor les mov push add pop imul iret push or es out aam scas cmpsl mov je stos aad cmp (bad) (bad) sub cmp pusha and dec or xor and (bad) mov cmp ds repz ja cli cwtl xchg dec rcrl data16 ret leave xor je (bad) scas jne cmp adc mov fisubr mov hlt (bad) (bad) sub cmp pusha and dec or xor and (bad) mov repnz sbb push and push and das lods int3 pop sahf xor pop push push and adc inc subl imul xor cmp xor les mov push add pop imul iret push or sub fldcw test push and xchg push mov mov adc pop (bad) out sub sub pop ss dec (bad) push xor orl (bad) fstps jns aas das cmpsl in fwait (bad) jecxz mov push add rorl push movsl mov push vcvttps2dq in cwtl add std mov jecxz addr16 jne insb movsl mov xchg test mov loope lcall fisubr clc jmp sub (bad) scas imul sbb jnp jbe jae or and xor insb mov xchg or dec in (bad) jns sub pop popf xor pop jae addr16 pop incl sub mov fs mov je mov fs sub dec out or popf loopne mov lods add int3 cmpsl and pushf adc aad fcomi sub testb rorl inc pop mov mov cmp stos fs fldt xchg (bad) pop mov dec ljmp insb adc xorl adc jl push xor jbe or cltd dec pop or mov push je xchg shrl js dec int3 or nop xchg dec push push mov fldenv pop sub test cmp in rcrb fisttpll popf mov xor and pop sub out dec inc aaa loopne and pop int3 mov add push or mov xchg mov add mov jge daa lcall aas in push fdivs push dec out stc inc popf sti add inc fstpl (bad) sti xlat and test mov jg in jns sbb and push cli gs mov inc sbb dec test pusha mov imul sbb and leave aas inc inc shrl inc imul das sbb lret push add leave loope adc inc sbb decb sti (bad) pop sahf lahf adc test lret xchg bnd jo mov stos dec xchg in cmc insl mov fwait dec or outsl xchg add pop aam mov sub pop mov pop sbb dec pop (bad) cmp inc pop int3 mov dec dec pop or mov push je xchg shrl js dec int3 or nop xchg dec push push mov fldenv pop sub inc adc jecxz mov loopne les das fsubs repz mov inc sub aad popf int3 sbb sbb arpl dec fs sbb bound sarb addl jp decb sti (bad) pop sahf lahf adc test daa stos add sub cmp repz mov outsl inc pop sub enter or inc fstps cpuid mov scas aaa dec sbb fmuls lea pop pop arpl stos add sub cmp repz mov imul arpl pop sbb enter (bad) push mov (bad) stos push and sub or rcr jmp push sub mov cmp cmp (bad) dec sahf xor sub pop mov cmp ds repz ja cli cwtl xchg dec pop imul mov xchg adc insb mov cmpsl cmp scas in xchg cmp out and repz ja cli cwtl xchg dec or das fwait dec inc pop dec adc orl fild jbe cs jo jae jle jb jno imul add stc cmovb push xchg adc push add cld sarb xchg jmp xor dec add cld sub (bad) push push mov fldenv pop sub clc loop sub xor or xor test cld call dec pop jns pop and out ret pop mov mov inc jb and mov in cmp and cltd pop mov lahf jnp cmp (bad) add xlat ror int sbb jg mov icebp hlt aaa loope leave jle mulb insl dec leave push jge daa lcall cs mov cld call dec dec sbb adc or mov push fs clc push lea rorl loop fs clc push out adc cld sub incb push dec stos leave lahf lret cmc popa addl cmc pop iret mov arpl mov mov cltd fldl mov pop fsubrl test divb inc fstpl lods lret fs nop xchg push mov fst xor (bad) xor aad (bad) jecxz cmp mov mov sahf dec icebp xchg inc ljmp out push cmp loopne and lock dec scas mov or icebp stos lds dec inc stc pop js test push imul aaa jmp pop cmp andl or icebp stos lds dec inc imul (bad) rep movsb sub ljmp aaa je lods in mov pushf call repz jb and push push and arpl sub (bad) push or scas lcall fisubrl insl jmp push in cmp mov imul pop sti mov scas mov jmp stos fcompl jbe gs out xor push pop pop aad xchg sub enter out push add (bad) das nop sbb ficompl push enter (bad) add mov psrad pop (bad) inc into subb xor xlat jmp xchg dec dec and xchg mov daa cmp ljmp rcrb aaa in cmp rcll cwtl js jb test lret pop fidivr cmp xchg jle inc jmp pop jae popf add or xor in mov mov popl cmp push mov into push inc inc ret inc jmp bound out das and mov push (bad) and mov push inc shlb cltd pop jmp scas fadds (bad) xchg mov and fcoml add outsb scas fidivr mov push jne mov pop imul mov add and loopne push stos dec pop cmpsb or dec scas inc das movsl lret lods and jle xchg push mov dec pusha push adc dec hlt mov mov clc fbstp mov xchg out stc adc aad mov jae mov mov fldenv xchg lock xor aad loope iret je inc sub mov sub push mov push addr16 fsub sbb dec dec lahf and imul jo pusha jnp dec cmc adcl mov and adc out jge inc out stos cld int3 and cmp rol push push daa je sub mov xchg xorl sub inc fimull sbb dec fnstsw insb daa dec mov loopne repnz add sahf dec inc inc ret jmp stos mov es in push and sub jne out sbb out mov cmpsl ja jns mov xchg loope test mov decl push test js pop test mov mov nop stc cltd dec sbb pop test cwtl mov movsb mov xor pop lods mov mov fsubrl and loopne push stos dec pop popa or sarb adc xchg sub fiaddl mov popf inc bound pushf jb movsb pslld add (bad) fs popl mov imul inc ret inc jo xor mov (bad) pop shrl clc jmp lea cmpsb mov push cmp testl pushf fwait (bad) xchg mov mov or inc dec mov adc add pcmpgtw rcr xchg fldl or std or sbb out jno rcrb pop jo push adc or xor aaa dec mov ds xchg andl cwtl ds xchg orl pop outsl loopne sub mov xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg xorl cwtl ds xchg andl xlat or inc (bad) je push push lcall push dec or adc push jp inc pusha jno dec jnp push ljmp out adc dec mov mov fisubr xor call cmc or xor cmp (bad) aam fldcw cmp mov xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl (bad) cmp and sti dec daa test outsl loopne sub lods lea into (bad) inc dec mov incl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg andl cwtl ds xchg cmpl in mov aad imul fisubr mov push ret mov nop push jnp addr16 or fcmovbe mov dec cwtl xor mov sub les jns out mov mov jecxz mov cmp les jbe jge or dec inc add iret lret add push cwtl fildll or aam xchg mov sbb cmp out in cli mov push sub jb jb jg data16 into pop cltd or loopne int (bad) push mov mov xor ficompl aas adc xchg lret jae hlt fcmove jmp test push ret adc fnstenv pop jp mov add pusha loop inc mov notw rclb cmc arpl push std mov dec bound inc fs cs lret aam mov cltd stc call sbb dec sbb bound jp mov push cs xor pop sbb out pop jns xor pop cltd fs scas or popa in out shrb mov les lret inc push push and movsb pop jne adc movsl cmp icebp paddq in mov call mov lahf xor cmp cli pop mov dec dec fwait sbb jl ret jne out push sarl or mov mov mov mov jge mov (bad) lock dec jns push rcl enter lds push orb lret push test push std xchg sarl jo push js ffreep lods jmp and push call sti or dec cmp jp xchg cmp stos or gs pop rorb (bad) movsb fsubl mov and ret sub jmp stos dec cmp mov sbb clc int3 je ret xor sahf mov (bad) ljmp pop les dec test and test sbb inc std inc cmp add sbb jnp push adc add or ja (bad) loop and push or dec jno mov mov mov test jae sbb cmp addr16 xchg push mov xchg (bad) mov cmp inc les out mov popa adc xor into dec pop movsl cmpsb push jo jl lahf mov enter (bad) or xchg sbb cmp adc and fdivr notb xchg add add dec xlat outsb decl (bad) fisttp mov inc mov push push inc mov jg fdivl jge (bad) push xor cmp fadds test add mov cmp ficoml bound mov (bad) daa push pop fsubrs xor sbb xchg test jmp xchg (bad) nop loope sub and in nop push jb cld cld inc outsb orl push daa and mov bound sub cmpsb xor (bad) gs and or xchg cmpb mov leave mov ds dec call sbb mov cli aaa jecxz or adc pop daa inc mov inc xor mov xchg ss inc mov stos adc or or mov push pop inc pop mov in pop mov jg xchg inc lret mov lcall insb jo data16 movsl add cmp inc push (bad) mov or jmp push dec ss mov mov and dec cltd stos (bad) in nop sbb jmp andl pop adc push loopne and xor pusha xlat adc pusha push loopne and xor pusha push loopne and xor data16 xor adc push loopne and xor pusha push loopne and xor dec xor lods dec push pusha add push jnp xchg pop (bad) mov push jl dec aaa adc pop mov xlat and ss push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor mov (bad) out sbb imul jnp xchg inc pop repz adc push loopne and xor and pop loopne (bad) loop or loop ss adc push loopne and xor and pop loopne (bad) xor and adc push loopne and xor and pop loopne (bad) popf sbb loopne repnz adc push loopne and xor and pop loopne (bad) sub addr16 iret push test pop call cs xor jne mov adc push loopne and xor pop dec outsl mov mov adc movhps sbb aaa imul inc in insl shl mov and aad insl mov mov daa push outsl jae pusha push loopne and xor pusha push loopne and xor sub dec pop (bad) cmc ds mov push loopne and xor sub int test mov xlat iret adc xor arpl int es (bad) dec pop loopne push imul in push and xchg testb out push push cs pop adcl adc js mov ret dec xchg insl cmpb jmp mov or adc cwtl dec or push clc lret movsl adc push lds pop scas call mov ficomp adc out jp das adcl ja int3 adc sub adc jb xor mov rcrb fnstsw pop movsl push je outsb sub dec pop orb (bad) cmc xchg sub out sub xchg and jnp movsb push ss cmp lcall test xchg insb pop ret dec int add leave mov (bad) jmp dec clc pop (bad) out jo cmpsb lret insb icebp adc push jle aas push inc icebp ljmp cmp xor add inc cmp repz mov xor inc les xor pop push movsl gs in xor movsb popl (bad) jmp dec clc pop (bad) out jo sbb into (bad) aad pop test int push add and les shrb mov mov shlb aas out sub xchg and xor in xor out add sarb dec iret xchg clc xchg or imul dec call push xor mov mov mov shlb aas out sub xchg and xchg xor jp lret sti (bad) xchg gs push movsb adc icebp repnz or mov imul aaa inc or cmpsb addl loop jle xchg int mov movl ss xchg jbe add (bad) bound adc sbb out dec push jge in pop rcrl jo sub push xchg repnz (bad) cmp subl out push sti stc stos mov lea aad inc mov roll inc dec jns les lods sub lret lcall imul pop stos mov std push jne out out movsl sti sub ljmp ja sbb sub call bound adc sbb out dec push jge in pop rcrl pusha mov in mov jne cmp jo xor hlt fwait dec in xchg mov (bad) fidivrl inc movsl ret xlat push inc lods iret addr16 pop push imul mov or test jl dec lret mov sbb pop or mov rcrb sbb xlat lods roll dec sti out mov sub cmp ret xlat xchg cmp sahf rclb mov push pop mov jns inc lret movsb loopne arpl fmull fstpl (bad) xor pop dec mul fiadd jmp sbb icebp inc mov inc mov pushf fcoml call insl shufps stos dec lock in data16 add add mov xchg cli jge dec dec dec mov and lret mov mov lea loop adc push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor mov mov push stos sbb jae (bad) stc repz adc push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor pusha push loopne and xor into inc or outsb and lcall add add adc add addb add push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc push add adc inc push dec inc add add add add or add jbe xor xor xor cmp add add add add add xchg add add and jb outsb addr16 add add add push add add add inc push dec inc add add add add inc insb outsl bound add add add add add push aad and add add cli and add add add add add add add add sbb add add add push add add add add add add add add add add add add add add add add add add or add add add push add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmp push add insb add xchg fwait add xlat add and cwtl add add in push add in push add add add add add add add add add adc pop add add add add add arpl add add add add arpl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add add add add add add add add add mov add add add add mov add add add add add add add add add add add add add add add add add add add add add add adc sub mov add add dec add add add add dec add add add add dec add add add add dec add add add add add sbb add adc repz add add add add add add add add faddl add sbb add add popa add add add add add mov add add add add and add add add add xchg cmp add add add xchg sbb add mov xchg cmp add xchg cmp add xchg cmp add xchg cmp add xchg cmp add xchg cmp add xchg cmp add mov xchg cmp add mov xchg cmp add mov xchg cmp add mov xchg cmp add mov xchg cmp add mov xchg cmp add mov xchg cmp add mov xchg cmp add add add xchg cmp add add add xchg cmp add add add xchg cmp add add add xchg cmp add add add xchg cmp add add add xchg cmp add add add xchg cmp add add add xchg cmp add add add add add add inc add add add add add dec add add add add add add add add add add inc add add mov add mov add add xor inc add cmp add lea cltd add add mov add add cmp add add add add add add add add fwait add add add add lcall cmpsl add add add add testb add add add fildl add add or add cmp push add add add sbb add add add gs push inc push dec inc inc dec dec pop dec dec dec inc push cs add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc add inc dec dec push pop push push inc dec dec inc add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor add inc dec dec push pop push push inc dec dec inc xor push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor xor push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor push add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc jae jae jae jae jae jae add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc push push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor xor add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa aaa add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor cmp xor xor push inc dec dec push pop push push inc dec dec inc xor add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor ss aaa xor xor xor add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor ss aaa xor xor xor cmp add inc dec dec push pop push push inc dec dec inc xor xor push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor jns push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor xor inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor data16 push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc addr16 imul dec push pop push push inc dec dec inc xor xor jns add push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor xor push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor xor push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc push imul cmp push push push inc inc pop inc push dec inc inc push dec pop push push dec inc push dec pop inc inc pop inc xor bound insl jae outsl jb imul gs add push arpl popa imul push inc dec push inc push inc pop push dec pop pop inc inc dec push inc inc push pop inc push push inc dec push inc push inc pop push dec pop pop inc inc dec push inc inc cmp add inc push push inc dec push inc push inc pop push dec pop pop inc inc dec push inc inc add arpl add addr16 inc popa je add jns push jns je insl cs arpl imul imul add arpl imul jae imul imul arpl imul outsb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add outsb je insl gs outsl insl jo je bound imul bound add push inc push dec inc inc dec dec pop dec dec dec inc push add jo outsl insl popa imul inc jne jb outsb je outsl insl popa imul outsb add jo popa arpl push jne je insl gs gs jo jb add je bound arpl insb jne add arpl jae data16 push imul jae arpl dec imul je push imul jae arpl inc outsl insl jo insb gs gs imul jb imul popa insb insb push jns add insb insb inc jns popa insl add gs imul push jns add gs gs dec outsb je xor dec gs popa je inc imul push jns je insl cs arpl imul je addr16 jo jns dec inc xor je push gs imul imul je insl cs gs add arpl imul pop push outsb imul gs jns gs dec popa jae inc insb outsl jb je insl add insl jo je dec popa jae add xor jns je push gs imul imul insl gs imul imul pop dec gs inc imul fs je dec outsl fs jb jo outsl push jb outsb jae outsl jb add gs je inc arpl jo outsl jb push jb outsb jae outsl jb inc imul arpl arpl outsl jb inc jns add jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul xor inc inc xor sub sub sub xor inc aaa cmp cmp inc outsl insl jo insb gs outsb gs je fs je jb bound add insb jne push jns add push je je arpl jb jns outsb imul jp cmp xor and insl gs outsl xor xor xor xor xor inc jb popa jns push jne je insl gs imul fs add imul inc jb popa jns push jns je insl cs arpl imul jb imul inc outsl fs je jb bound add add add cmpl push add dec add inc add add push add pop add inc add dec add inc add dec add pop add push add inc add push add push add pop add dec add pop add inc add add inc add push add inc add push add dec add inc add add push add pop add inc add dec add inc add popa add pop add push add inc add push add push add pop add dec add pop add inc add add inc add add inc add push add dec add inc add add push add pop add inc add dec add inc add push add inc add push add dec add inc add add push add pop add inc add dec add inc add push add inc add push add dec add inc add add push add pop add inc add dec add inc add add inc add push add dec add inc add add push add pop add inc add dec add inc add add add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add outsb add pop add push add inc add push add push add pop add dec add pop add inc add add inc add add inc add push add dec add inc add add push add pop add inc add dec add inc add jb jns push add inc add push add dec add inc add add push add pop add inc add dec add inc add push add push add inc add push add dec add inc add add push add pop add inc add dec add inc add push add inc add push add dec add inc add add push add pop add inc add dec add inc add imul pop add push add inc add push add push add pop add dec add pop add inc add add inc add add inc add push add dec add inc add add push add pop add inc add dec add inc add add add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add outsb add pop add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add outsl add pop add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add push add inc add push add dec add inc add add push add pop add inc add dec add inc add add pop add push add inc add push add push add pop add dec add pop add inc add add inc add pop add push add inc add push add push add pop add dec add pop add inc add add inc add add mov scas roll repnz add mov pop push sbb mov push pop add sbb add sbb add or or add sbb push add add or aad cmp add sbb adc sbb sbb adc push sbb add add sbb adc push sbb adc sbb sbb sbb sbb add adc and sbb add and add add push add add push or add or pop add cmp sbb add add add push adc add add adc add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add lods iret add into iret add add add ror add add outsl jb js dec popa imul jb gs insb add add add and 