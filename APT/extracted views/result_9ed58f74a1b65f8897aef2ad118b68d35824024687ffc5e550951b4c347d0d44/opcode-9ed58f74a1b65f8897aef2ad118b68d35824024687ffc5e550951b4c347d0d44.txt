jo add add add add add add add add add push xor add js add add add inc add add add add mov add add and add add add adcb add sahf add add and add add add orb add push sub add add sub add adc add add add adc add add add or add add add add add inc add add add add add push add pop add add add add add rolb add push adc je adc je pop or sbb sub add imul xchg jle add add xchg popa and add add stos add add inc add push pushf sbb pop or add push xchg and roll pop or incl add or lcall add add add add sub add add sub sub rolb add sub add xor add add add add adc add add add add push sbb inc add add add add add add add ljmp fcom add add sub add or add sbb add add push add add add pop add add add inc add add add add adc add add add add enter cmp add jle add add ss add add ss jle add add jno pop pop adc pop sub pop addb add add incb sbb add jae add or add or add add add add outsb (bad) (bad) (bad) fimul jne add add or add fcompl adc adc inc push add add add add add add adc sub rolb sbb or shrl rolb sub add adc add add xchg loopne or add add xor fadds add add add jle add add add add or add je add add add add add add add add dec add add add add add add add add add or add add add add mov inc pop push popa inc add add add adc cmpsl pop or clc sbb sub add or pop pop or xor add or add add and sbb add or pop pop xor sbb add jne (bad) call add add add jmp pop (bad) (bad) ljmp sbb pop adc inc add add add add add add add push add push sub jne (bad) call xor add add add add jle add add add add push sbb add add or add adc add inc add add add xchg add add add add add add add dec add add add jbe add push or add add adc rolb sbb push popa inc add add adc add adc and and add pop adc sahf adc and add xchg and sub sbb add mov mov add sbb or add push pop pop or cmp add pop and and add xchg and adc pop (bad) (bad) incl or or pop sub cmp (bad) call push and add add add jmp adc inc add add add add add add add add add add add pop add push sub dec (bad) (bad) incl add xor add add add or add add push sub inc or add add add add add add adc add add add add add add add push add add or add adc popf and add add mov or add add adc mov pop inc pop push popa inc add add push add add or add mov sub adc adc pop imul adc je (bad) incl add add add sub add or adc pop pop xchg and adc push (bad) (bad) incl pop pop or or adc cld add pop adc aaa (bad) (bad) decl sbb or (bad) (bad) call sub pop jne add add adc pop jnp and add pop adc push (bad) (bad) incl add xor add add adc add add movd add add adc adc inc adc add insl add add add add add add add data16 add add add add add add cmpsl add add add ljmp add add add add add add add or add adc pop adc add push sub outsl popa add jle add add or add and sbb pop popa or adc cmp (bad) (bad) jle add add add add pop lcall and add xchg and incb add push cmp (bad) call sub or add sub je add sbb add add add add push adc or or (bad) (bad) pushl add or add or add sbb or adc add sbb or pop xchg adc mov add add add push cmp (bad) (bad) call or pop adc push pop pop pop adc and incl add arpl pop sbb push cmp (bad) (bad) call push pop and adc add add pop adc cmp or pop punpckldq or add adc xchg adc pop or (bad) (bad) call or add mov or adc adc pop imul adc cmp (bad) call add adc add adc add sbb or pop pop adc pop xchg popa adc jne add sbb or or pop adc or popa shrl add or adc pop pop xchg and mov push cmp (bad) (bad) call or pop adc adc pop xor pop adc cmp (bad) (bad) call or pop xor adc pop push xchg and add pop adc cmp std (bad) lcall sub adc adc add outsl push add or add add add pop or add add cmp std (bad) decl jne add add adc add fiaddl add pop add adc add add push sub add add add add add push add add add add add add add add add add add cmp add xchg add add add rorb add push es add adc and add add add add popa pop dec pop push popa inc add add push add add or add stc adc sbb add add add sub add or sbb add incl pop pop or clc add and and add add add add decl or or pop sub cmp (bad) lcall sub pop jne add add sbb add incl add xor jmp add or add jle add add add add push sbb add add or add push add add add add add aas add add add add add add add dec add add or adc lret popa pop pop pop push popa inc add add adc add adc add add add cmpsl sbb stc adc add add add xchg add adc add push pop pop or or jnp and add add or or xor push adc imul notb push and xchg add push (bad) (bad) ljmp pop adc adc inc add add add add add add add add add add add or add sub pop (bad) (bad) incl adc add loope add or add jle add add jle add add add or inc or add xor add xor add dec add add add add add add add add add dec add add add inc add add or pop je and or ret add pop inc pop push popa inc add add push add add add aas xchg adc aas xchg pop or movsb pop or stc adc add add add sub add sub add or pop pop or pop sub sbb jo (bad) call add repnz add add ljmp ljmp sbb push adc inc add add add or add sub imul incl add adc add add add adc add add add add push sbb add add or add dec add add add add add add add add add jl add aas add add add add or add add add add roll push popa inc add add adc add adc and and xor add sahf sbb add xchg add outsl adc add push pop pop or or add and add or push add pop sbb pop xor adc pop sub pop adc pop (bad) (bad) lcall sub sub adc adc inc add add add add add add add add add add add or jle add add or add add or add sbb sub push (bad) (bad) incl adc add faddl add or add jle add add add add or add jl add sub add das add add add add add add add add add add add add or add shlb add add les pop push popa inc add add add adc scas sbb stc sbb add cmpsb add sub add or pop pop or bound add or xchg add or jbe add pop sbb pop xor add add pop adc imul and and sub sub adc adc inc add add add add add add add add add add add push add push sub push (bad) call xor adc add or add jle add add push jle add add pop sub add add add adc add inc add add add add add add add or add or add roll add add add sldt push es adc pop adc popa sbb popa inc add add sldt add push pop cmp pop adc pop es and pop add pop sub adc push adc add add add adc add or pop pop adc xchg pop adc incl pop pop or jge add or add cmp add or pop or xor adc pop pop xchg and adc call pop pop jne and add pop sub adc and and faddl add add incl jne add add pop adc call xor add add add add jle add add push jle add add pop sub add add add add add add add add add add add add add add mov add add adc add adc and and js add add adc pop sbb pop adc popa pop push push popa inc add add adc pop and add add add add call pop and adc and pop sub adc pop adc incl mov add add adc pop adc incl pop pop or rorb add or ret add add sbb pop xor add add add add lcall sbb (bad) (bad) incl adc pop add add add or jle add add add or inc or add pop add add add inc add add add add add sahf add add add add add add or and add add add sub push add popa pop pop pop push popa inc add add push add add add or pop or mov add jo and or popl mov mov add sbb add add outsl push add or pop pop or sbb or or arpl (bad) lcall (bad) or or and fildl add add add js adc add js jle add add sub pop or xor (bad) ljmp sbb push adc inc add add add add add add add adc add sub dec (bad) (bad) incl add xor add add add add adc add add jle add add add or inc or add mov add add add add add push add add add add add add add add cmp and add add add addb add lea push je add sbb and adc pop gs and add pop or mov add sbb test jne add sbb add push je add sbb and and je add sbb and sbb arpl (bad) incl je add sbb and add popf push jne add sbb and and add xchg and or cmp (bad) incl je add sbb jbe add popf pop or addb add je add sbb sub adc add sub xchg add add push jge add add sub add or adc add add push add push sub adc add sub add adc add add add adc add add sbb pop inc add add add add add add add add push add add add or sti sbb mov mov add sub add sub add iret add add xor add push xor and push or lods adc pop or imul or add and add and add sub add sub sbb add add add add add add add add add add add add add adc add sub fs outsl sub add push sub add or add xor add add add adc add add pop or inc pop add add add add add add add xor add inc add add add xor add add push or xlat or test add xchg and sub add add add adc add or and xor add sub jnp add add adc add sbb add add sub add or rclb sub xor add add adc add add jle add add add or inc push add add add add add add add movsl add add add add add add add add add add add add add add testb add add add add add add jae add or add add or add add jnp add add sbb or xchg add out add add mov add sub add sub jnp add add and sti add add add add or das xchg and or popa (bad) (bad) incl jnp add add je add add pop adc outsb fs outsl sub add push and add and add sub and add and add add or add sub add sub or sbb jnp add add push jae add or addb add mov pop add sub jnp add add sbb fs outsl sub add push pop pop pop sub add sub pop and pop or aad (bad) incl jnp add add popl add mov pop add or inc add add je add sub add sub jnp add add and test add sub add sub or xchg (bad) (bad) incl jnp add add and iret add add or add add add rolb add jae add or add add aas add add or add sbb push (bad) (bad) incl pop and add add roll add sub and mov pop add or mov fild add sub add sub add repnz add add cmp (bad) (bad) incl and add add inc add add sldt sub jnp add add and add add je add add pop sbb outsl sub add push outsl and add je add add and add pop or cmp std (bad) incl adc pop pop and scas outsl sub add push sub add add sub add cmp add cmp adc pop push and scas outsl sub add push outsl add or jnp add add daa add or or jns (bad) incl push sub add or rclb add push sub add xchg sub adc and add add add addb add rclb add push sub add jle jae add push jge add add sub add or sub add push sub sbb add sub xor add add adc add jle add add sbb pop inc pop add add add add add add add add add inc add add add add add add sub or or add xchg and or lret or movsb add add add out add add add adc add add or stos sbb cli add add add adc add sbb add add sub add or rcrb add push sub adc push add add jle add add jle add add add or inc or add add add add add arpl add push add add add add add add add xor add call add add push add add add add jae add or add add or add add jnp add add sbb and and add pop or nop add imul add xor add sub add sub jnp add add and add add jl add sub add sbb arpl (bad) incl jnp add add je add add pop adc push scas outsl sub add push and add add xchg add add add and add and mov add sub add sub or pop (bad) (bad) incl jnp add add push jae add or inc pop jle pop add sub jnp add add sbb sbb jne scas outsl sub add push and add add nop add add or add pop or fdivrp (bad) incl jnp add add jecxz add and pop add or in add add fldl add sub add sub jnp add add and add add les add sub add sub add inc xchg and mov add cmp jnp add add and lds add sub add sub and add inc and add jae add or les add and add add or add adc pop xchg and add pop or dec (bad) (bad) incl pop and add add les add sub and add add add pop add or sub add adc xor pop or push (bad) (bad) incl sub add or jnp add add and add add pop pop and scas outsl sub add push sub add or inc add add add cmp std (bad) incl adc pop sbb ja scas outsl sub add push outsl add or jnp add add daa add or or mov push sub add or rcrb add push es add add cmp add jle add add cmp add xchg jle add add and add pop popf sub sub rcrb add push sub add xor add add add add add sldt add add add or add add add jb add jo adc cmpsl add add sahf inc add add sbb sldt add add xor add add adc add add adc add add adc dec adc inc sldt add add add add add add add add add add add add add add add add and add add add rcrb sbb adc mov push push ds add add adc and and clc add pop adc sub add dec add add and add or pop je add add add sbb pop and scas outsl sub add push and add add aad add sub add sub (bad) (bad) jmp sbb add add inc add push or add add push pop aas sub add sub add adc or (bad) (bad) call add push add sbb outsl add add adc test add xchg and add pop adc cmp (bad) (bad) pushl add or add je add add add push add sbb incb add and adc add adc pop xor pop adc cmp (bad) (bad) jmp sahf inc add lea add add add add add adc sbb adc mov (bad) decl push pop pop adc pop or adc movsb (bad) (bad) call push je add sbb pop (bad) daa add add add pop push push pop push add add pop shlb andl adc push add pop adc cmp (bad) call pop pop pop adc pop or adc pop (bad) (bad) call pop push jle add add pop jle add add pop xchg push add das or adc cmp (bad) (bad) call sub jae add or or push je add sbb add or pop jae add or or adc adc or add add add xor add xor add xor add adc add addl add add add adc pop adc enter xor add adc jne add sbb adc and add add sub add sub add sub or add adc jne add sbb adc jne add sbb add and add adc add and adc add add add adc data16 (bad) call adc add add add jmp push adc inc pop add add add add add xor add adc je add add adc pop xor pop adc sub adc and clc je add in adc jne add add add or sbb sbb sbb add add add cmp add dec add add add add add sbb add pushf add add add js add imul add jecxz add adc add adc jne add add add and add and add add adc push je add add stos add add out add sub add sub je xor pop add sub add and test add sbb jo (bad) decl je add add je add add add add jo add and add sub add sub or sbb inc (bad) (bad) call add add xchg add add mov sbb add adc or (bad) (bad) call or sbb push lcall add sbb or adc add adc outsl das add or or sbb repnz (bad) call push pop pop adc adc pop sub pop adc cmp (bad) (bad) call push adc sbb adc sbb pop adc cmp adc popf add add pop sub pop adc cmp jne add add je add add add or add adc cmp call add push add sbb jne add add add or add or adc pop push xchg and adc cmp (bad) lcall or cmc adc add adc add adc add add add add add xor add add add add jle add add add add push sbb add add or add cmp add pop add add add cmp add add add cmp add inc add add add add add push or adc into add popa pop push push popa inc add add add adc mov xchg and add pop sub adc pop es and pop add pop adc pushf add outsl xor add push pop pop or lahf add add pop and xor pop xor sbb add jb (bad) call push pop pop xchg and roll add in sub adc adc inc add add add add add add add push add push sub insb (bad) (bad) incl adc add cld add add add adc add add add add push sbb add add or add pop add add add dec add add add add add xchg add add add add add add add push or adc lret popa pop sbb popa inc add add adc add adc add add add cmpsl pop sub adc pop sbb pop adc xchg add mov add outsl xor add push pop pop or xchg add add pop and and add add add add popa (bad) (bad) incl or or pop sub adc add xchg and adc inc (bad) (bad) call sub sub adc adc inc add add add add add add add pop add push sub dec (bad) (bad) call xor add add add adc add add or add or add add add inc add add add jg add or add xchg add xchg add push add add add add add add add js add shlb add push sbb push or popa pop aaa pop push popa inc add add push add add add or pop or cli adc adc jo and or add add add add or sbb (bad) incl pop pop or pop sub pop or call add (bad) fildl add in push or incl je add add push or incl adc add out add add add adc add add add or add or add aas add add add push add add add add add push add add add add add add or popa pop xor popa inc add add push add add add cmp and roll add sub xchg and sub adc push add pop or add add add add or pop pop or pop pop or add adc pop or incl sbb or or call add sahf add add pop sub sub adc adc inc add add add add add add add and add sub push (bad) (bad) incl add xor add add add add adc add add jle add add add or inc or add xchg add add add addl add add add cmp add add add sldt add add add or pop jne and add pop or ret add popa pop pop push popa inc add add adc add adc xchg add add add sub and cmp add icebp adc jg add xchg and add pop or test mov add sbb sub add or pop pop or pop sub sbb fs (bad) call add mov add xchg adc mov add xchg pop sub or test add xchg and lret pop or ds (bad) ljmp sbb push adc inc add add add add add add add add add add add and add sub push (bad) (bad) call xor add add add add adc add add push jle add add pop sub adc add add sahf add add add add add add add add add jge add pop add add add shlb add push es or add sbb add popa sbb popa inc add add daa add add push pop sbb and add jle add add pop jle add add pop xchg add lret add add pop adc sub adc sbb add ljmp add or adc and and adc incl pop pop or jne pop sbb pop or or adc call pop and and sub pop je add add sbb add call xor std add add add adc add add push sub adc add add add add pop add add add adc add inc add add add add add stos add add and add sbb add sbb add push add push popa inc add add adc add adc and sub adc and and add in push or push and add xchg and fiaddl add add incl mov add sbb add outsl aaa add or pop or add incl pop pop or loopne add or dec add add add sbb pop xor add add add add lcall sub pop sub push and add add add add incl add xchg add add push jge add add sub add or adc add add sub add sub and sub add adc add cmp add sbb add sub inc add add add add add add add add push sbb sub and int3 add lea add add add add add sub pop pop pop insl sub add sub add push sub add push and add add sti add add sbb add outsl cmp add sub shlb add push sub add jbe adc add add pushf add add fldl add sub add sub shrb add push sub add xor add add add adc add add sbb pop inc pop add add add adc add inc add add add add add add pop or xlat or daa xchg and sub add add add adc add add or mov add xchg and xor out add add add adc add sbb add add sub add or shrb add push sub xor add add adc add add sbb pop inc or add pop add add add add add add add add add add add and add add push add add add add add add rolb add jae add or fldl add and add add or add sbb sub add add cmp or and add add ret add add or inc pop and push add sub or jbe (bad) incl adc pop sbb outsb fs outsl sub add push and add add push add add or add sbb cmp (bad) incl adc pop or jnp scas outsl sub add push outsl add or add push daa add push jae add or cmp add or sub pop or sbb (bad) incl add push sub add jae add or cmp add add sub add or shrb add push sub add xor add add adc or inc add add add add add add add add add add pop add add sbb add sub add push push pop jns sub or lds add push sub adc add push adc add push jle add add mov add xchg pop sbb sub sub add sub add cmp sub add or shrb add sub (bad) add add adc and add and add add sbb add es sub sub add adc add jge add adc add jle add add sub inc pop add add add add add add add add add add add add add add add shrb add push es or aam adc add leave sbb cli jb add jo or add sub add or ret add add aam add sub add jae add or or addr16 and or xchg jle add add add add xor add add sbb add sub inc add add add das add push es or fdivrl add add or mov add jle add add mov add xchg jle add add xor add xchg pop pop push pop popf sub add cmp adcb add (bad) xor add sub sub (bad) xor add sub add xor sbb add adc add add push jle add add pop sub inc or add adc add add add les add ret add add add add add add xor add adc pop pop xchg and add pop adc pop or add add pop mulps popa inc add add add adc and add add add in add pop or add incl mov add sbb add inc add or adc pop jg and push add pop adc incl pop pop or and add or add mov add or sbb xor add add add add call push pop cs and sub adc and and add pop adc incl sub push pop sbb pop adc incl add adc add stos add add add adc add add pop or inc or add and add dec add add add add add dec add add add add add add add add add add add add or add pop pop push popa inc add add add add sbb mov sub push or mov sub add push pop pop or and pop sub sbb cltd sbb cli or addl add pop or xchg sbb add add add add add add add add add xor add sub xchg add xor add add add add jle add add push jle add add pop sub add add add add add sbb add or add les add jl add les add mov add add add add add add xor add sbb add adc pop cmp and dec add pop adc popa pop push push popa inc add add add add pop pop pop xchg and add jle add add push jle add add push xchg jle add add sbb pop adc call push pop or and fildl add in adc adc pop cs and adc incl mov add sbb mov add outsl and add or pop and and lret pop adc incl pop pop or push or sbb or pop pop xor sbb add call sub adc and and add pop adc incl sub pop and and add pop adc incl adc pop add add add add adc add add add add or add xor add add add add add add add add add add add push or adc lret popa pop jle push popa inc add add add adc mov sub adc adc add pop adc mov add push pop jle add add incb add jle add add incb add xchg jle add add xchg popa pop inc pop popf pop or cmpsb add add int3 add add and adc add or pop xor pop or add push (bad) (bad) lcall sub sbb add dec (bad) (bad) ljmp sbb pop adc inc add add add add add add add add add add add xor sub push (bad) (bad) incl add xor add add add or add inc or add add add pop add add add sub add add add add add add add add mov add inc add add add push es add mov add mov add popa pop push pop push popa inc add add add adc mov adc adc add add add mov mov add sbb mov add add inc add or sbb add insl (bad) (bad) incl pop pop or or pop or add pop (bad) (bad) decl sbb or adc dec (bad) (bad) call add test add in pop sub (bad) (bad) call xor add add add add adc add add jle add add add or inc or add nop add add add add add add add add add add add add add add or or int3 add pop push popa inc add add or pop jp and hlt add pop or scas adc inc add add add in pop or lcall add add or pop jle add add rolb add jle add add rolb add xchg jle add add or pop and popf pop or pop sub push or push (bad) (bad) call sub or sbb and add pop or inc (bad) (bad) ljmp push adc adc inc add add add add add add add add add add add aaa add push sub dec (bad) (bad) call xor add add adc add add add add push sub add or add add add push add add add add add add add add add aaa add add add add add or add sarb add push es or add mov adc mov add pop pop pop push popa inc add add add adc lahf adc xchg cld add pop sub adc pop adc mov mov add sbb add or pop adc ja (bad) incl pop pop or pop or push and xor add push (bad) (bad) decl sbb adc add add add add cmp (bad) call push and add xchg and fiaddl add jmp add jle add add xor add add xor sahf sub or add pop (bad) (bad) incl add adc add mov add pop add adc add add add or add xor add aas add add add add add add add add add push add add add add add add add add or or popa pop push pop push popa inc add add add add sbb sub sbb add add add add or pop pop or pop or or pop sub mov add jbe and popa add pop sub sub adc adc inc add add add add add add add add add add add cmp add sub mov xor add add add add adc add add add adc add add or add push add add add add add inc add add add add add inc add add add add push add add or add repnz add add sub add add cmp add add cmp sahf popa pop push pop push popa inc add add add add sbb sub or add add add inc add or pop pop or pop or add mov add cmp (bad) incl sbb pop sbb (bad) lcall sub sub adc adc inc add add add add add add add cmp add sub insb (bad) (bad) incl add adc push add add add add adc add add add or add or add inc add add add add add add add add add add add adc add lahf add add add add add add cmp add sbb pop or popa pop dec pop push popa inc add add push add add add inc xchg and mov sub or add add add sub sbb sub add or incl pop jle add add sbb add jle add add sbb add xchg add and add add pop or and pop sub sbb lcall sub adc inc xchg and jbe add cmp (bad) (bad) incl jne add add pop or call xor add add add add adc add add push sub adc add add add add add add add add add add add add add add add add add add add jne add sarb add es adc sbb add popa pop outsb pop push popa inc add add add adc stc adc pop or add add add outsl dec add or pop or add pop or mov and and sbb pop xor adc sbb add pop adc lcall sub pop jne add sbb sbb add call xor add add add add adc add add add add push sub add or add jae add sub add add add jp add jp add arpl add push add add add add add add add xor add sarb pop or add mov add mov add pop dec pop push popa inc add add add adc mov adc sbb add xchg add dec add or sbb add test pop pop or and pop or add lahf ret pop adc data16 (bad) decl sbb or adc pop (bad) (bad) lcall sub pop je add add adc pop inc xchg and adc cmp push add add add sub xor add add adc add jle add add sub pop inc add add add aas add push or test add xchg or test add xchg pop or into jle add add cmp sub or rolb add sub scas sub inc add push and add add js add sub or add adcb add rolb add sub sub rolb add sub add xor add add and add jle add add push jle add add pop sub add add add add add add add mov add add add mov add test add add add inc add push es add adc pop and pop adc popa pop xor popa inc add add push add add add add or add stc pop or cmc adc adc pop cmp add add add xchg add add add add xchg add add and add sahf pop adc ljmp add sbb add ljmp add sbb add incl pop pop or mov add or push or pop or or adc lcall sub pop je add add adc pop imul adc call xor add add add add jle add add add add push sub add or add or add add add popl add or add pop add add add pop add add add inc add add add add inc add push sbb add mov pop imul lods add popa pop outsb pop push popa inc add add adc add adc and and add pop adc mov sub pop sbb cmp incl sub add or adc insl (bad) (bad) incl pop pop or pop or or add pop (bad) (bad) decl sbb or or add dec (bad) (bad) call push and add add add jmp add xor (bad) call xor add add add add jle add add add add push sbb add add or add inc add add add add add add insl add add add movsl add add add add add add add add or add xlat add add add rolb popa inc add add add add add adc cmpsb push sub adc and and clc add pop sub sbb add mov mov add sbb mov add outsl and add sbb add jne (bad) incl mov add sbb mov add sub add push pop pop or repnz add pop inc or jns sbb pop xor add add pop adc cmp (bad) call add (bad) xor add in sub adc adc inc add add add add add add add add add add add inc add push sub inc (bad) (bad) call xor add add adc add add add add push sbb inc or add inc add add add pusha add add add inc add add add test add add add pop add add or adc lret push add sbb push popa inc add add and add adc movsl cmp add add add xor add add xor sahf pop adc xchg sbb stc adc xchg add jg (bad) incl mov add sbb add outsl dec add or pop pop or push or mov add or pusha add add or pop pop xor sbb add push (bad) (bad) lcall or cmc adc and add add add add aaa (bad) (bad) ljmp sbb or or add add add add add add inc add push sub inc (bad) (bad) incl add adc add roll add and adc add add dec or add add add jge add test add add add push add add add daa add add add inc add add add add inc add push adc gs and loopne add sub and and xor sub xor push popa inc add add add or cli adc adc sub pop or incl mov add sbb add or push or incl pop pop or pop sub sbb cmp (bad) lcall sub sbb (bad) incl je add sbb sbb (bad) incl add sub rorb add sub add sub rorb add sub add add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc nop and test and test and test and test and test and test and mov and mov and (bad) mov aas fucom daa aas fucom daa aas fucom daa aas fucom daa aas fucom daa aas fucom daa aas fucom daa aas fucomp daa aas fucomp daa aas fldl add add repnz add add add add add add ja add xchg add add add add add add add add add add add add add push add add add add add add add add add add add add add add add add add add cmp add arpl aaa add add add add add add add cmp arpl cmp add arpl aaa add add add add add adc add add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add dec add and add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add cmp arpl cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add scas add and add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add aad add cmp arpl cmp add arpl aaa add add add add add jmp add cmp add arpl aaa add add add add add add cmp arpl cmp add arpl aaa add add add add add add adc add add cmp add arpl aaa add add add add add add add add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add add add and add cmp add arpl aaa add add add add add dec add and add cmp add arpl aaa add add add add add pusha add and add cmp add arpl aaa add add add add add je add cmp arpl cmp add arpl aaa add add add add add xchg add cmp arpl cmp add arpl aaa add add add add add fwait add and add cmp add arpl aaa add add add add add scas add and add cmp add arpl aaa add add add add add roll and bound xor add bound xor sub add add add add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb (bad) jne xor test les out mov dec sbb iret cmp dec xlat aam xor (bad) (bad) fdivp imul arpl incl stos into cmp adc push insl xchg cmpsb jns jg adc stc lret add pop push test push lcall addb gs jbe pop lgs lret jbe fsts cmp jp pop jp push int cmp dec inc fwait adc xchg insl adc jo sbb outsb lcall out out xlat add mov (bad) in (bad) or stos (bad) sub outsb in repnz sub push jecxz and sbb ret gs and push jge (bad) (bad) jbe sbb push pop mov sti xor rorl shrl in mov pop add aaa gs pop out repnz enter or cmpsl mov pushl sub inc fadds jl cld add dec into stc test fsubr adc ret jg mov jns mov insl das mov add xchg and mov fnop nop mov jno mov add pop push jo adc xor into push das jmp popf outsb test cwtl jp lahf ror aaa sub cmp push xchg movsl mov push mov mov mov jae repnz sahf add jl mov mov mov or mov icebp shll rcrl rcll dec mov fidiv dec cmp jae popf lock pop fs pop jnp scas scas adcl call mov lret xor sbb mov int3 fildl push (bad) jmp addr16 cli icebp and movsl jne xchg adc insb dec ret jle adc cmc fidivl mov lret cmp inc lret jno mov adc dec movsl mov in sbb jmp inc test cmp iret adc adc cli insb out xchg insb pop into lahf sbb nop push mov or in pop (bad) or sub xor xchg pop pushf add mov js sbb stc lret mov fisubr mov popa in mov jnp fcmovbe addr16 ja cs clc inc jp mov divb jg mov jns in rclb enter push mov xor sarl add dec xor mov pusha adc rcll xor inc and push sub mov loopne repz sub sbb leave dec insl xor loopne or xlat mov xor pop and jo pop inc negl dec mov mov cmpsl out in sub push sbb jp in imull fwait inc icebp ss lods leave inc mov mov hlt push lahf jl mov insl outsb ret lods iret aam or xchg in inc add cmpsl xchg icebp inc aaa sub dec fwait sbb mov sub and into ja or mov cmpsl lcall xchg mov and mov mov or lcall adc or mov into xor leave in ds repz into pop xchg jle or jns jmp push in sub sbb fiaddl rcl xchg adc cmc in lds (bad) pop mov jge incl (bad) shll mov or mov mov sub xor shl and hlt sbb movsl lret into xchg dec xlat add jb jg cmp pushf jge jb test lea mov popf pusha loopne int3 mov or mov orl sub jno sub xchg insl dec lea and or lcall pop cmp adc movsb jo (bad) mov dec sub (bad) sub mov dec xor push jo cmpsb shrl cmpsl or outsl and cmp sbb sbb aad cld mov data16 jl in mov xchg and pop imull ret adc sub mov arpl test push adc xlat outsb push fldl mov insb gs sub enter push jge add pop pusha pop mov add subl jp ljmp fsubrl push jmp and stc stc popa mov out xchg ret inc jo inc packssdw push cltd enter jnp mov cmp add test inc lock cmp jmp cmc or jo and cmp aas push cmpl jg or mov ss cmp mov lods or in push movsb dec jbe shl dec lods add ret add out push enter push mov pop push aas pop push sub das jno xor xor dec and das inc pop mov push cmp pop loopne mov inc rcrl and push mov xorl lcall (bad) in test ficompl fnstcw aam xchg xorl sahf fisttpl sbb push push pop test aad sbb pop pop mov jg mov into aaa dec xchg clc cmp mov mov insb push sub pop dec daa or pop pop xchg scas jecxz fild scas test fmuls ljmp setnp cmp or imulb clc lret aaa mov push fdivs adc jg dec mov lret xlat out sbb pushf dec imul std testl and stos fisttpl das fmul stc dec push fwait sarb stos push xor in out jecxz clc ret fnsave test test inc std add lret cltd and aad xchg cmc (bad) (bad) aad cmc movsl out ret xor imul je jge loope push outsl mul pop cmp jae and out or stos sub sbb push sahf push push mov mov jge popf aad jl int3 mov or push mov sub mov jmp jns xchg fisubl out arpl outsb paddsw sub cltd mov xor fist sbb xor pop (bad) push adc ret mov mov cmp outsb push adc and cmp test add or adc push pop popa popf adc bound cmp jg movsl dec clc repnz adc in out notl mov xor decl je js dec insl jmp hlt aaa sbb sub cwtl mov popa les xchg ret cld js sbb dec mov push and inc jnp subl cmp out mov inc push popa push adc and xchg std or dec scas add mov cmpsb iret or push push inc popa movsl out push cli int3 ret pop (bad) ljmp (bad) sbb push roll dec lods mov sub iret (bad) ljmp lret xchg nop popa sbb xor das (bad) leave pop int3 mov pop mov int push mov fmull xchg lods mov xorb repz leave into and idiv mulb fdivrl data16 mov hlt dec jb fucomi adc dec add imul mov fwait pop addr16 stos and stos scas ljmp mov adc mov pop arpl adc enter lcall mov push pop and sahf or sub xchg test cmp fimul addr16 fs xor out inc mov je inc mov dec fistl pop add adc mov stos xchg outsb daa mov in xchg aaa and loopne rcl iret loopne je mov insl jb cmp fist mov xchg xor lahf add (bad) jb mov int ficoml cmp bound call mov xchg setbe cmp (bad) hlt jg pop outsl ret (bad) fidivl or jg sub int das mov inc mov insl pop (bad) sub jns jge jbe mov and lods cmc xchg and aas call call ret inc bound cmp aas scas mov movsb (bad) shlb stos dec cltd das add rclb les inc inc ret add (bad) cmp mov loope adc mov jno addr16 and movsb hlt repz (bad) icebp push sbb cmp push mov jae insl fs mov rcll push xor test (bad) je lahf outsl or sub in cld and jp xchg lock mov mov dec ret iret aad lods and xchg adc daa jns loop adc push call xchg or inc shr inc push mov cld push stos jns xchg mov sbb lahf cwtl xchg or pop lahf xchg ljmp (bad) sbb lea sub mov adc ret cmpsb pop test adc jo mov int dec xchg inc cmp shr pop repnz mov loop (bad) adc xor xchg movsl aas mov mov adc pop mov bound bound sbb fstpt push mov cmp cld js adcl xchg xor dec cs ja sbb jle mov adc mov negl xor (bad) xor fcoml lds das and sub cltd xor xchg and xchg xor xor pop cwtl and ja test imul (bad) fs adc mov leave nop push aas out mov stc sub pop xor mov dec jp fildl ds fldcw xchg dec fnstsw divb dec std loop mov sub mov repz data16 sti cmc jle fcompl pop cmp (bad) pop cmp daa xor lcall mov pop inc adc in xlat mov bound dec jecxz sti scas xchg push push push stc (bad) (bad) and mov mov jb mov arpl and outsl pop iret sahf jbe ss mov aaa push push push cs jg loope jbe and jmp mov int cltd mov sub jbe jnp sahf iret push popf addr16 std aad icebp jne aaa call cmc inc adc mov inc pushf jg lods lcall mov mov xor mov fwait stc test fimul rclb adc mov test iret popf pop inc pop mov addr16 pop sub arpl jno xor and ja pusha cmpsl mov cli jle xor mov add mov xor bound mov push pop push or mov xchg xor push aas and xlat sti lret (bad) repnz int3 in xchg mov sub mov std data16 lret or lds outsb inc or dec fstpl and jecxz cmp gs gs out inc imul outsl sarb fistl int3 das mov popf rep or xor mov mov lret pop rcll sti call rorb xchg hlt in gs and inc addb test and pop mov jge int sbb push mov enter dec or mov pop imul (bad) int3 cld (bad) jno iret mov (bad) mov sub cmp push pop loop xor mov addb sbb sar inc jp in inc mov add je lahf dec push pusha scas (bad) lret jp push pop push cs loope jle rep roll jp mov dec rcrb pusha adc test xchg or je jns pop je cmpsl imul ljmp leave mov pop rcll xchg (bad) mov push jno bound rol popf aaa addr16 add scas ret mov push push mov lcall dec and (bad) jnp mov imul dec dec pop out stos int3 xorb stos and sub add dec mov jp lret push shrb and sti cmp jle or cwtl mov aad mov mov add das into mov dec add vunpckhps cmpsb xor dec inc lret lea aam mov push sbb sub or fstps (bad) xor loopne sbb lret fwait sbb xchg cmp mov pop cld test inc repnz adc out or xchg pop adc lret cmc pushf popf jne mov stos and mov out inc sarl jge mov fmull sub cli idivl mov mov test iret sbb sbb stos jne push fwait xchg repnz lods rclb rorl movsl int cmpsl push ss xchg in fldcw lcall ds lret sbb ss mov rcl lds add or cmc cmp js popa divb in das pop xchg adc jo inc sub (bad) adc or scas pop test cmp xchg insl pop outsl mov cmp rcll and (bad) xchg mov je cmp (bad) test daa cmp gs and imul jb sti mov lods mov hlt sarl mov jl test cmpsl xchg in rcrl into in push call add mov cmp outsl arpl add sub jle pop jecxz xchg pop int xor shl lods mov pop outsb jge push pusha loope pop adc pop jecxz ret mull sub xchg mov subl into dec jb xlat movsl loopne stos mov or add arpl ror out adc cmp mov sbb add loop xchg lcall jbe imull mov leave orl pop repnz xchg xor add test jns (bad) enter cmpsl sbb lods leave dec loopne loop insb hlt push pop popf testl out or xchg add gs add cwtl cmp popl pop sub jbe xor pop lock call pop adc push (bad) in jl inc pop inc sub shll cmpsb sub into push test movsl and pop dec test pop cmp push xor jecxz push dec cmp stos xor sbb push cmp lret jge das mov jmp sarb (bad) repz cli add (bad) mov je loopne xor (bad) ret ret je insb jb dec cld pop test aad mov dec push cmc lods es push dec out (bad) addr16 sahf cmp mov iret sahf cmp mov aas add in gs and add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push inc adc and movsb sbb xchg adc xor sbb jmp inc nop push jmp out out push push je xor mov in or fildl add js xchg push mov jecxz add mov push add mov addr16 cmp xor dec xor and inc mov and fs add push push push addb sub int3 and arpl jnp das sahf cld jo (bad) xchg dec mov in repnz outsl sbb movsl popf mov call pop mov jmp stc or call subb enter lea cmpsl sarl out cmp xor and pop inc cmp xchg test pusha scas subb rcll fs loope sbb sub jne (bad) xchg mov es fnop pcmpeqd cmp mov lcall mov pop repnz inc iret clc add mov jns mov std fildl inc mov cltd mov idivb data16 cld and mov popa mov ret jne movsb adc adc pop or negb sub pop fs fstpt sbb or xchg or or pushf aad jmp xchg xor daa push sub (bad) in rcl mov loopne sbb mov repnz push add andb adc jmp push xchg imul xor xchg or cli (bad) int3 fnop inc rcrl add ds stos dec and mov lock ret insl cmc in stos sub push les and iret xor add sub xor fcoms lds lds dec movsb push lahf in ljmp lds (bad) push (bad) xor xor popa out fistp shr adc (bad) enter push jge das xor fwait inc pop fsubrs pop in (bad) jo push int3 add stos leave push pop aaa sub xor cwtl lret jle shr repnz adc jb shr arpl xlat movsl iret cmp push jg push mov mov push mov xchg push pop pop mov das mov ds das stos dec imul lret sbb lods mov sbb out mov mov lcall loopne imul test jl jl leave pop fucomip fdivrs subl mulb pop test stc xor mov mov test and ficoml jl adc ljmp pop mov cmp push push pop cvtdq2ps rorl mov loop andl xor rorb fbstp movsb xchg pop cmp clc fwait mov push jle lods outsb sar dec ficomp lea pop loope add xchg (bad) sti sahf hlt adc and maxss pop popa in sbb pop sbb leave pop or iret mov push mov mov leave and mov mov insb mov xchg mov or in cltd mov push inc jmp mov mov outsl xchg es mov xor inc lock pop push pop outsl in xor mov xor (bad) inc out outsb jecxz popf add out (bad) ss sub sbb ror xor sub iret jb scas cmp mov sti pop lea cltd lahf and inc in pop and add lock lods xchg add mov push in sbbl arpl adc sbb push mov xchg or dec jns mov or sbb popf mov sub loop aam sbb xchg push push adc cli popl adc fmuls dec push cmpsb mov data16 push sub jmp (bad) pop mov sub imul mov enter imul and mov imul push pop arpl in insl mov sbb aaa push mov jp cmp push test jnp movsl and outsl fnstenv data16 outsb mov or clc add fcomi sbb scas (bad) lret dec cmp sarl sub iret shll pop cmp lea lock add shl cwtl mov mov jnp lock xchg iret push mov jp (bad) and xlat stos leave out dec ret loopne mov repz add outsl in lds jecxz test xchg sub (bad) adc ja inc mov in lds lea mov xchg adc xchg jp cmc addr16 pop ljmp mov adcb xor daa loope fstpt mov fsubs push sbb inc or mov rorb roll sub dec xor (bad) mov inc pushf mov cmp xor lods shrb pop in icebp push xchg dec in xor jmp add or xor adc pop sub rcl inc lds fwait les in mov ds add scas sti loop push xor lea lahf out mov dec mov mov test sti or add jge ret addr16 loope cmp das sbb lret mov add xlat fcoms dec movsb loop and fsubrl fwait or bound enter or mov and movb add xor jle clc sub adc add outsl lea fdiv jae mov jne add jno mov leave or xor jne mov hlt xchg push add sar dec loopne dec bound mov insb sub lahf call xchg xchg dec test mov xchg test pop scas inc mov push enter lock loop adc (bad) popa mov dec decl cmp jp jo push cmpsl js data16 pop bound jb push aad jae adc not movsb loope mov cmp fisubrl jno push or outsb outsl xchg cld fistpl rcrb pop shrl mov mov push add lret cli out jmp or jns cltd mov aad enter mov cwtl fiadd push adc clc add bnd mov mov jne inc sub fsubr push ja cs lock pop negb sub jp stc fidivl lea jmp add jmp add or sbb xchg pop adc stc push lods jl inc mov push sbb add jbe out je (bad) (bad) lret push push mov mov jne mov and cmp test lahf add mov lret xor insl daa es addr16 rcrb mov lods ret popa movsb out and out add inc xor cmp pop sahf sahf or dec inc jne hlt mov mov xor into or shl ds out fwait dec loopne out repnz adc mov scas fcoml sete lret xchg xchg mov pusha dec cmc (bad) sub mov rcr dec xlat out mov or pop in jae push fsubrl outsl cmp sbb lahf push js cld mov pop jg sub mov mov hlt mov ljmp cmpsb cmpsb mov push imul fwait stos enter (bad) dec pop jmp mov imul (bad) gs inc stc (bad) (bad) adc pop xlat mov inc adc test jl push mov cmp xchg movb push sbb lock pop fwait stos dec stos repnz scas sbb fsubr jle popf lahf pop mov dec shll or ror dec mov lret ss xchg cmc movsl (bad) cli sub push and mov clc mov push shll scas sti sub lods jbe ja adc add sbb adc movsl cwtl clc mov arpl sub scas (bad) xor mov mov jns cs jbe xor mov leave (bad) shrb ljmp test fnstsw (bad) xor daa jbe out pop push adc ret repz outsb loope fadds shll mov xchg push pop jno lods dec cmp imul mov inc cmp mov stos xchg jle mov push jnp (bad) subl lret xor ret sarl gs test fsubrs les push jg cld pop shll cld mov inc into jg dec dec (bad) fnsave inc popf sub mov sbb (bad) and lods mull (bad) jno ret jge jo mov and fs cmp dec movl movsl mov push push adc pop fisubl dec adc lret fcmovnb insl out ja,pn js std insl (bad) data16 and das shrb out outsb cmp lret cmp push add dec sbb mov jnp mov cmp add sahf cmp pop inc movsl or fsubl mov cmp adc adc inc cmp dec sub into scas push and or dec jl fidivl jns dec xor and sahf jmp add lods imul pop push ja daa or cmp add lods aam jl add inc pmullw dec cmp (bad) dec sbb fisttp daa mov iret xlat cmpsl xchg pop ret scas cmp mov fadds out lods insb leave sub out jmp hlt jae sbb popa dec push sbb (bad) push cmc aas adc sub cs loop cli sub jns pop sti lods pop add mov enter inc mov (bad) bnd fiadd iret out jnp cmp fisub inc cs fs pop jl push pop in stc xchg gs add push popf stos mov add or mov scas leave and rcrl mov xor mov mov icebp xlat in mov arpl pop popf or je mov inc icebp call dec jmp pushl xchg add push xchg lret loope and cmc std rol out (bad) das mov ds cmp aad mov cmp jo icebp or aas out not pop mov cwtl ljmp lods rol push out fwait test fcomps rol aad jne fnsave je mov out jb aad jecxz ficom fs xchg jge inc cmp add mov fsubrs mov gs je (bad) mov inc jnp std sbb cmpsb sub adc jg (bad) jmp repz xchg ds (bad) push movsb daa cmc scas sarb lea das push push scas js shrl adc pop mov jge sysexit fisubrl jmp (bad) dec fstps push (bad) jbe loop outsl popf andl or hlt add pusha and shrl pop ret xchg add mov add insl (bad) jnp cltd insb imul pushf cs sub dec mov push xchg test or bound dec pop in pop arpl pop sub scas and inc dec leave pushf mov scas sbb jg fsubrs sbb (bad) insl push and test adc mov mov je ds mov jmp pop xchg popf aad fwait (bad) xchg sub cli and mov repz lcall xor xor aam lret dec mov int3 sub sub loope call cmpsb xchg cmp in sbb pop push nop push xor push cmp inc je in fnop (bad) lds dec test in xor pop popa sarb and subb xchg jno mov xchg sbb xchg scas (bad) pop icebp daa inc mov adc jns mov mov mov mov (bad) (bad) mov sub xor mov cwtl cs sbb (bad) das push pop fiaddl popf sub mov pop or push mov hlt push or sub ret adc pop scas and (bad) fwait movl cmp sbb jo lret outsl mov sub stos lret (bad) fidivr xchg je (bad) push inc mov mov inc mov outsb adc dec sub jns fincstp jge inc fprem ret fbld dec sub pusha addr16 jb mov and stc push adc xchg xchg dec xchg and inc inc adc imul inc loop xor and push jnp cmpsb (bad) xchg test cmp mov pop lcall rcr cltd (bad) in xlat rclb push mov loopne jmp xlat out ds mov arpl aam out fisubl jns xchg cmp repnz xchg hlt ret push dec mov push ss dec or and test repnz arpl cltd sti test pop lret sub (bad) cwtl fwait sub sub (bad) push call shl iret push icebp ds icebp and push jp repnz scas push pop pop xor (bad) lea sub out pop sub sub (bad) jge mov mov ret ja jge fdivp mov push pop dec push jecxz pop adc ret xchg adc or mov push and into xor mov jle clc dec (bad) fs repz daa enter movsb xchg push sbb test mov repnz scas mov sti fstps movsb outsl dec pop xlat xchg cmpsb mov mov lea sahf loop and mov mov cmp xchg outsb dec xchg mov gs and xor dec jno ljmp xlat stc out lea and or cs mov or mov popf imul mov push (bad) test dec sub fstps mov add cli mov je xchg das xchg jg xchg sbb hlt mov and cmc jnp mov push fimul lock dec adc inc imul es dec je cmp shl fnstsw xchg fs int3 daa fidiv add xchg or es pusha (bad) (bad) dec mov sub dec sbb dec outsl fildll xchg inc es ret clc mov imul mov stos add adc fmul dec adc adc dec or aam xor cmp lahf pop mov outsl scas stos iret adc addr16 lds cmp idivl and sub arpl inc add mov cmpsb aaa jl push flds lcall imul test inc icebp xor push outsb and pop mov mov popa and aad adc cli sarl imul pop push fsubl leave test cmp xchg sub mov jb push pusha out push sbbb inc addr16 icebp xchg jmp pop push cmp mov cmpb out (bad) shlb jp call push cmp mov jg test or and add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc inc pop nop or outsb jmp movsl inc xchg xchg mov (bad) xor mov or dec ja out pop jecxz sti or pop divl add lret and pushl std addr16 or insb xor lcall jmp (bad) cli lods jp sub daa xchg in outsb fadds push pop fimul fucom sbb mov jge xlat fild (bad) or jae pop pushf xchg lahf jnp xchg pop std pop push in push adc mov pop es sbb push sbb jne push subb xor into sbb xor push mov test xchg test dec mov cmpsl or out rorl add jns clc outsb mov test xchg pop data16 in jns and jae pop push les dec movsb mov pop mov sub outsl ret push push xor adc les add mov adc aas sbb pop int addl mov clc addr16 dec add dec push ret and mov mov xchg pop cld push insb and out insb outsl ret mov mov dec aad push into mull mov xchg fwait ja xchg out lock stos jnp mov push push mov xor lahf jns pop push xchg mov loope jne or incl cmp xorb jo sbb aas sbb ja je lods mov lcall sbb lret sar add inc or cli pop stc push cli mov push jno dec into mov fisubl (bad) or je mov xchg push mov mov xor in jle dec cmp xor in sbb fdivs pushl (bad) jns and ds daa push sahf sub inc shrl fdivrs push cs ret mov sub mov pop movsb push mov pop or or sub cmp imul add add out mov dec fdivrs mov adc inc pop nop call pop inc push loopne lds popf test cmp and sub ss lret not push popf cmpsb xor ljmp divl and sub sahf int std sbb sbb push aaa data16 sub and aaa sub adc inc ja shlb mov aaa loope mov mov pop into repnz int sbb roll pop and jo scas hlt insb sub sbb pop lods mov ja insb mov xor idiv repz and lahf xor and mov ss lea cmp icebp jo cmp push aaa add mov mov popa xor fdivrl aam ja cmpsl movsl mov cmpsl mov and popf dec repnz ja rcl mov sub test pusha std arpl adc jbe (bad) mov pop push sahf mov test leave les loop (bad) jb sbb inc (bad) mov inc ds imul inc (bad) mov pusha dec add mov nop out fnstcw or or jbe xor fadd out mov xor jp ljmp hlt (bad) sub lahf sti jne rolb mov cltd mov leave insl in sahf lcall loopne notb out cld divl loop jle repnz adc clc data16 test daa repz mov imulw lret js lret mov push mov imul cld or cmp sti sti xchg pop mov lcall xor fldcw jp push lahf in addl dec mov xchg and in mov fstpl (bad) cmp add daa push lods adc mov jmp int stc arpl out pop push movsl mov lret mov hlt stos in adcl mov lock lret frstor add ret sbb pop (bad) xchg lahf cwtl fadds popa mov (bad) (bad) xlat and orps into cmp loop adc shrl mov jae into sub out pusha repz fcompl jg jecxz mov fbstp and sub dec fidivrl (bad) pop inc jge jbe (bad) adc sahf leave or fnstenv jnp daa out sub nop imul lahf loop mulb add in in loope sub dec test stos dec rorb cmp mov popa push inc ljmp adc (bad) sbb cli les fsubrs test and mov cwtl pop data16 lcall push add mov fstl sahf push aas adcl adc add idiv sub ljmp xor cmp mov in jp and (bad) repz sub or fwait dec xchg jecxz xchg and and inc insb (bad) mov adc shl push aad cmp nop xor mov fdivrs or inc lret jg nop adcl dec mov cmp and mov pop fimull or xchg or inc jb ficomp movsb ror pop jo std mov cmp jl push shll repnz sub lods roll stos hlt jno in dec jb test clc push in in iret pop sti mov std fst mov sub ds pushf cmc (bad) repnz stos adc mov stc jge xlat mov aaa mov jne test add jp mov jle fild repnz dec cmp and or add sbb scas mov pop jnp lret repnz popa les (bad) mov xor scas rcll icebp ret jecxz insl rdpmc stc jae mov cmp in jp jg mov lcall shrl repnz xorl arpl sub inc das xor pop sub adc push and (bad) lcall adc or xchg inc dec or icebp shlb dec stos insb and (bad) jae xlat in into sub enter shrb test mov leave or jb imul pop repnz jp or pop pop xchg in in dec jmp mov dec mulb mov mov jae cmp sarl jbe addl jb pop xchg dec xlat out xchg cltd hlt (bad) mov idivb pop cmp dec jae addr16 popf push inc pop loopne popf pop pop test adc imul jle dec arpl je mov insb jno rep cld pushf insl nop scas test dec xor in out repz jo sub inc lret test test js dec and jl lea sub pop pop push or stc adc js mov fisubrl ja mov cmp (bad) push fild sbb lods or sub (bad) or out incb das cmp cmp lea sbb inc cmp out and xchg cltd inc data16 lret aas call inc push sbb fisttp fcom xchg pop rcr add test jns pop push mov mov (bad) lods and mov jp jle in xor pop sub mov pop in aas pusha cld test lods enter add (bad) sbb adc cmpsb (bad) push clc jp xor sbb sbb gs mov jmp jne idivl inc clc sti mov cltd cmc lea int (bad) mov test sbb mov dec xor xor (bad) mov cmc inc out sbb cld lock mov (bad) adc loope sbb enter xchg aas (bad) (bad) pop sahf xchg repz add mov or pop cmpsl cmpsb mov pop mov mov mov out pop mov adc loopne sbb jns cmp mov dec (bad) pop (bad) sbb push add lcall rcrl out adc insb int3 push or orb movsl std xor test adc dec cmpsl xchg xchg lods adc jo add js scas int3 fisttpll mov mov pop sub jne out mov jae push sub rcrl add fsubrl adc dec (bad) fnstenv stos jae or cmp fnstenv jns sahf sti sysenter out xchg pushf ja cwtl pop (bad) bound xchg es sbb and mov lods sub dec mull iret test inc jle fwait imul lea leave (bad) inc clc fwait sbb outsb mov je sti sub imul add xchg in outsb mov out insb ret frstor lcall mov mov pop jnp es lret scas add push loop inc cmp jno dec pop int xchg loop push dec xchg sbb test xor fs xchg jo int push or jb or adcl repz add mov pusha gs jb or xchg push es mov jecxz jl (bad) jmp (bad) icebp and lcall arpl mov loop int3 cmp sub and sub pop pop cwtl mov cmp sbb push mov data16 or out movsl orl adc call sbb movl rcl (bad) cli (bad) cmp ja mov stc xor sarl idivb push cs (bad) jnp and sub sub cltd xchg cwtl xchg call shlb or mov loop (bad) push sbb push int3 loopne xor or xor add insl jle sqrtps sahf push xchg lods and mov into hlt mov daa pop pop fimull scas push fs into aad jmp jo xlat ffree mov (bad) cli inc fnsave cmp jns jo ds dec jb jp xlat (bad) push add dec bound leave movsl or pop lods jae jne jl mov call sbb les mov mov xlat dec insl stos xchg cmc bswap sbbl fiadd jnp lret lock (bad) pusha mov aad jge mov std lcall daa mov mov rolb test into cld sub test les mov insb js adc loopne sub (bad) out adc insb dec outsl std negb mov add lods sub push imul push sbb jbe js mov adc and cmp and mull (bad) movsb lds or cmpl jge mov push stos xor or faddl mov loope ret sbb or in ds push jle stos push jae xchg mov adc or mov insb test mov jno (bad) (bad) jbe insl adc fdivrp pop mov ljmp jne dec push add cmp mov stc jb cld dec mov adc mov repz outsl in xor or add cmc sub push add or jbe mov dec in jl sti push rorl mov enter lret pop add and fdivrs cmpsb sbb sbb jne pop arpl bound xchg popf inc jne pusha jp negl popa stos jp les cmp es inc mov mov xor adc xor mov loope cld push jmp gs jmp adc fstpl add lcall loop adc cmc cmpsl data16 and adc xor stos mov icebp das lock das pop mov rclb jmp jmp fsubs cmpsl imul mov xor push mov dec mov inc in mov (bad) mov inc xchg mov mov or ss jo xor js loopne pop mov cltd mov inc cld in mov sub push xor mov nop cmpsb xchg jmp je frstor je roll jge jne jns addb mov popf jge outsb imul mov cltd xor dec aas jp mov je rcr into push es jp add aas (bad) fsub sub stos cmpsl clc fistl out mov fistl xchg xor out addr16 out in insb flds mov not add jecxz push das adc jnp insb adc cmpsb xor outsl xchg icebp loopne jp mov xor jle iret sub iret mov orl lcall and cmpsl mov inc fdivs dec jl push fisubl pushl add scas iret loopne mov fld (bad) add loope outsb popf jb insl test pop xorb mov dec rcr or or push or gs adc arpl imul mov (bad) sub mov jb inc dec cmpsb sub dec ss push sub out int3 fcompl aaa shll je pavgw test sbb push lds add cltd movsl jle stos jmp mov xor ficomp out add clc or sbb fistl cmp and imul jp aaa cmp ljmp pop mov loop leave cmc imul lret shrd or lods mov in inc sub pop sub cmp pop xor jp jmp adc and loope scas aad or mov pop push (bad) stos popa test cmp inc mov mov push pop js inc push xorb icebp push fwait test das hlt in out fsubrl clc xchg mov sbb pop shl aas dec jp xchg lods adc aad jp cli push dec and push xor jg (bad) enter xlat rorb ljmp cmp loope pop jmp es inc leave or iret xor popa dec cmc shlb cmp mov or jg stos mov ret xchg sub mov addr16 test jo stc jne in dec scas je dec imulb (bad) cmc out cmpsl sbb push imul mov mov mov imul loopne or pop sub xor sahf cmp gs push xchg inc gs loopne stos or mov ss mov push xchg cwtl stc jbe imul das pop aas inc mov loop ja push les jne xchg jecxz mov out or mov mov in xor pop cmpsl out lcall inc dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg daa dec (bad) ja add pop int sbb push mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc mov shrl xor lcall xchg xchg data16 and rcr pop add inc jmp mov jmp (bad) loope adc jne add icebp pop sar ficomp cmp xchg jo mov fistpll jae fdivrs add mov or int3 mov sbb loope push jae gs push (bad) or sub cwtd jmp (bad) daa push scas test std jns loopne push dec sbbl into add lds cmp in cltd dec aaa jge and pop cmp inc sub pop mov insl push xchg jge mov stc mov or jge popa mov sub cmc mov adc imul mov fsubp imul sbb lock or popa mov push out mov iret sti inc shll popf rcll jmp lahf push or sub sub push lahf sub (bad) (bad) lret in mov test (bad) push mov jecxz imul sbb or xchg rcl fnstenv push push mov loope outsl stos sbb sbb stc sti test cmp sub test sbb jge sbb inc dec lcall jae jno fsubl nop add aad (bad) push xor bound and or stc mov clc push rclb scas ret sbb dec (bad) or inc sub push fwait js jb insb pop out inc repnz mov out adc xchg int dec idivl push and insb sub insl pop in imul negb push xchg mov and dec loope lret lahf loopne mov bnd ret aas or sub adc (bad) sahf add cmc push jecxz adc in in jecxz (bad) sub test add mov mov nop test jp xor mov popa cmp mov jecxz cmp cltd dec fcompl (bad) sub sahf into sbb jne scas mov fimul call mov cmpsb mov xchg cs inc (bad) lods pop fldenv das daa popf bound faddp sahf mov mov mov stc xchg and (bad) xchg das jo out sub add pop inc dec jecxz or mov mov add div call (bad) sub roll pop dec adc jle ja push jecxz pushf mov mov sbb dec mov shrb fcomps daa in cli std repz or lret fistpl cwtl and mov pop stos sbb pop sbb and inc (bad) push ret cmpsl movsb fisubr adc or (bad) xor pop stos sbb mov pop sbb aam call xchg sub faddp mov xor movl ja jmp pop sti adc fwait mov dec dec xchg xor ss call and fcomp mov mov loope jmp push sub add mov out mov add jae pop dec jp (bad) xchg xor es xchg and mov (bad) in cmp fwait and xchg daa sbbl int3 test and mov cmp mov cmp mov leave xchg jmp mov dec pop xchg (bad) cli push push scas insl cltd push cmp cmp shlb add mov jnp sbb test std ss arpl dec std ja xchg rol or or or arpl mov jg icebp stc stos fs xchg xor push lret mov (bad) mov (bad) das aam es fsubrs xchg dec sub mov add pushf adc lods pusha dec and cltd mov imul jle (bad) push neg sbb lcall mov fsubs jmp test mov push pop inc and test pop popf stos lcall lret cmp add adc test lds and fs fisubrl mov lret mov clc ret push mov mov sub (bad) in jmp push xchg inc mov repz push inc lea xchg sub mov pop pop cmp push inc fwait out in jnp popa push mov xchg rcrb data16 loop (bad) je mov xchg push jl or mov push rorb inc aad test fisttp sbb cmp sub sbb xor adc lock call je test cltd pop test jb stos xchg cmpsl data16 ret xchg mov shll sbb or push lahf mov or mov cltd dec mov xor scas sub cmc mov ljmp push inc into xor loop fldt cmp mov pop push rcrl sbbl out or mov mov dec stos out popa mov mov hlt ljmp push add jg insb lret push nop fmul int3 push add inc bound push sub outsb inc jno lds xchg push sbb mov int3 fistl pushf push aaa mov mov stos jbe les mov (bad) pop and dec jne decb insb addb pusha or pop addr16 or sbb xchg xchg lret gs xor sub lahf inc (bad) repz mov adc dec loope sbb fcmovnb sub xchg cmp nop lds imul (bad) jmp and xchg and add je cli pop pop pop push je xchg sti push pop (bad) xor sti sbb push mov mov jae fldcw mull arpl aam inc lcall in out lods xor clc dec daa ja cltd push scas fdiv push loope pop movsl dec cltd es lods xchg add or jne scas xlat adc out lods mov insl jb mov or insl mov fadds xor cli jb jmp pop xchg movb sar jmp inc xchg push and (bad) dec and movsl subb mov rorl mov push pop push cmp sub stos push jmp jbe insb movsl mov sti jl popa outsb sub cli (bad) imul out dec rclb dec mov and mov int je mov mov jns lock push movsl jge popf pop xchg push xchg stos add adc sbb adc outsb pop leave inc popf sti push jbe adc dec push xchg and adc out (bad) repnz lret sarb cmpsl pop test add outsl or inc mov ret jb jno cmp push (bad) cmp pushf or jne jecxz lds mov fmull rdpmc iret xchg (bad) fist aad sarl sbb push call jnp mov xor pop stos popl dec out push sbb or mov call or js xchg xor insb push (bad) jne daa xor dec dec push (bad) fildl lret pop mov int (bad) aaa fildll test ficom popf lock test lea in xor stos add jle daa sub movsb sub sub mov xor test sub mov mov scas jno rolb lds fwait clc push je adc pusha lret sub cltd out mov pop mov loop pop or cmp test jle or dec jbe jmp outsb xchg (bad) mov adc int3 ljmp incl fsubrs addr16 fildl cmp (bad) repnz pop jnp push repnz jnp cli out repnz fwait test push cmp cli (bad) mov je in nop and mov push jns (bad) leave push push pop jle in pop rol aam push cli or (bad) (bad) mov adc out das lret or scas mov pop inc dec push sbb test push xchg pop cltd ret (bad) push popf jecxz jecxz fs push pop mov push arpl cmc divl cmp aad repz rcll ljmp mov mov xchg jo icebp push aad xchg lret es lret stc test xchg mov adc xchg add stos push incb sbb dec popa inc cmpsl mov lea rorl xor dec add push mulps ja push sbb repz sub jb inc cltd bound and adc ss scas and jle inc das inc sbb call and push push pop stc fs push push push dec jmp mov daa sbb adc popf or pop dec aaa (bad) js xor xor push mov mov into lds pop xchg or or sti mov jbe (bad) mov push cwtl push (bad) lock jmp fwait add adc (bad) stc sbb dec loope jecxz sarl pusha pop mov dec scas dec stos jmp xlat dec cld lods lock fcomip ja rorl pop jg shll movsb inc divb in je dec cmpsb aas lods sahf jmp inc lock cld sbb xor cltd sbb jl fdivrs mull and lahf xor jo daa aad xchg jae xor fcoms push lcall add fisub dec stos movsl mov mov sbb push push cmp jg add negb test arpl sub fnstenv fs subl pop dec adc add and or insl and stos ja mov dec sub outsl insb and jmp rcl mov bound lret data16 sub mov jp and inc in ja sti push mov stc in push mov mov dec inc xchg adc sbb nop sub mov add loope pop mov rcr cltd sahf lods js mov test inc in inc sbb dec (bad) xor sub xchg std or out fnstcw lds push psubsb clc sub je ret aam pop scas mov in ret ret es mov mov pop or inc push loop mov inc popf clc push and cmp rcrl iret sbb mov push jae rorl ljmp div or mov and mov mov push clc mov int3 mov dec fadds pop outsl jle ja mov pop or jecxz xchg mov (bad) call mov mov arpl mov shll mov pushf (bad) jge in pop and cwtl xchg or jg bnd push xor test sahf (bad) cwtl or xchg inc pop mov outsb mov xchg stos fiadd pop inc pop pop in lods adc jae ljmp cmp mov out inc shrb fdivl sti enter daa xchg (bad) mov mov pinsrw fnstenv mov mov mov pop mov sti xlat inc sub cmpsb cltd mov mov push movsl dec frstor mov inc stc aaa orl pop aad fisub lahf lods dec cmp cmp push ljmp and add adc out lds popa mov pop aam mov add nop mov leave stc cmpsb cwtl sbb mov push cltd popf jecxz lods sbb test sbb (bad) sbb scas scas inc or and mov lds push call add aaa fdivrl pop flds xor mov sub mov jnp (bad) cmc sub dec adc mov dec and test pop push lcall jmp adc out jnp dec call out pop jl xlat dec mov push loopne fwait int pushf incl arpl jmp jmp stc push sbb xchg dec int xor ret add mov sbb aad popf xor mov out cmp or insb (bad) lret push leave inc les ret sysexit pop cwtl insb push inc sbb dec cmpsl fstp popf (bad) sti (bad) aam icebp fstpl iret outsb les xchg cld call fisttpl cs mov idivb out rclb loope clc test push loop jmp inc push adc xchg lock mov int inc mov fsubl mov xorb dec ja ljmp pop nop pusha aad push dec mov sti sub std push pop and pop push std mov scas test push or icebp stos add xor bound cld jl or inc adc sahf xchg rol test adc test xor mov (bad) push or inc rolb movsb mov jae pop xchg jle mov push xchg jbe mov adc hlt add ja jmp es sub stc sub dec mov fsubrl stos shlb lods mov lea add loopne hlt dec std int stc out add mov hlt xchg daa sub hlt mov inc cmc in add into es sub adc push outsb loope dec xchg inc pop sub and daa xor jmp les into xor mov cmp punpckhdq add and mov and aaa mov push push xor mov inc pop out sub mov xchg (bad) pushf mov adc out fild and ja sti adc xchg loope xor jbe loopne mov inc pop inc adc (bad) sti xor add jb out xor mov (bad) ret sub jle lock stos mov cli jmp xchg dec out mov aad dec and pop dec cmc cli cld mov pop pop and dec in dec ret test (bad) mov subl rcrl aas roll loope mov in dec pop es push lahf inc aaa add mull cmp out test xchg and mov lret dec lds inc dec arpl test (bad) xor jmp jmp std inc rolb cmpsl and lret mov push femms hlt es hlt daa and dec daa jns mov xchg int std add repnz push lock mov xchg dec popl (bad) aam or (bad) int3 or dec jno (bad) mov cmc jp fucomi repz mov jle mov jmp jbe dec rolb xchg dec sbb lret test enter jmp or js fwait or hlt xrelease fisubr dec fstl add jle cmpsb cmp mov pop or nop aam push test jge rclb data16 fcmovbe sar xor xor (bad) cli cli popf xor ss push xchg call ret pop push lret push or dec pop rolb ret nop xor adc cmp add arpl lds js loop mov das pop mov lcall sbb mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push inc adc xchg (bad) xor or dec ja dec xchg and mov and inc mov or xchg push inc inc imul add outsl sar mov add add and mov nop pushf test jg stos mov mov enter sub mov pop stc jne xchg popf mov xchg xor jge arpl sub test mov push lret insb (bad) adc ljmp (bad) es imul rclb sti xchg out lods into xchg cmp data16 xor adc test xlat sbb mov pop mov push ret shrl adc or push (bad) js loopne push movsl or iret hlt (bad) loop mov lahf inc outsl ljmp stos pop jecxz or repnz das sbb sub movsb out fwait add jp rcrb push push lock aaa mov mov sbbl jnp sahf cs ljmp and cltd jb jae push push pop inc ret sarl leave sbb push jbe (bad) out es lds mov mov mov insb jbe dec cmp and cvtdq2ps sahf gs pop push adc mov sti lods sbb cmp shrb cmp scas mov scas pop leave dec mov insb clc rol add pop fmull dec dec inc xchg rcrl clc pop jp cld scas mov push jl pop cmp inc out and push test scas mov cmp jmp out push stos cld mov dec fwait xlat int3 pusha and xor add and loop cmp dec lea pop cmp shrb xchg pop mov addr16 and mov popf out nop inc stc push (bad) jle jecxz std xor mov mov jns jno mov decb ja xor pop pop or mov jmp out and insb adc in stos sbb test fwait js lds (bad) rolb and sbb xchg xor mov mov cld push dec inc (bad) in decb iret xchg inc aam inc sbb mov fisubr stos arpl (bad) cmp fmuls shr adc mov inc es pushf jecxz lds jno flds fdivrs cwtl imul lahf inc out leave je addr16 xchg mov and scas sub mov adc push not xchg lahf popa cwtl lahf xor jns aaa jl pop push aad out xor insb jl,pn push dec fld fdiv mov pop xchg mov lret jmp lahf adc sub lcall xchg mov ljmp fnstsw (bad) lods cmp jb stos test jns arpl aam and xchg cwtl in outsl ja je fstpl (bad) stc out ds cmpsb inc mov mov sti movsl jno push pop pop ss mov dec mov out sub cmp mov (bad) pop or mov sahf pop out mov mov das out pop movsl inc adc adc lret sub mov mov lcall scas loope add push sub sub xor or sbb cmp fwait or out xor push dec xor cs jmp pop (bad) mov in (bad) pop or push adc in imul lock fsubl int3 jmp cmp data16 fwait daa xor repnz push dec xor pop lea imul ret test jo jbe test mov pop daa push dec push xchg nop popa push lods sub loopne mov mov out in pop mov mov xchg (bad) pop (bad) mov cmp inc int3 dec rol pop dec sub jne cmp fsts repnz jb out lock or xchg leave cld cltd cmp mov bound test xor lds mov cmp xchg xor mov rclb or lret dec sbbb pop jns lds mov cmpsb out insb movsb sbb lret sub pop jle out rcl jo pop xchg mov sbb push andb fnstenv addr16 insl icebp shrb (bad) out jne cs nop dec push lret xlat call stos jg scas lret pop pop pop adc add xchg ret inc add xchg dec in mov cmp cwtl shrb jo pushf test pusha add xchg add pop or ret imul pop jb jmp out mov inc xchg xchg cltd and xchg cmp aam adc repz jno inc mov xor sar mov das or or jae cld push add neg insb decl mov cmp jmp xchg ret inc xchg lahf jo adc std mov icebp sub or das jmp jp je cwtl movsb ljmpw arpl jno daa out fdivs add imul rorb inc push xchg rcl test loope add les dec mov mov test adc and imull iret ja (bad) lahf into mov add xor (bad) cwtl and jp inc xchg dec pop (bad) xchg lahf sti cmpsl (bad) jno jp lcall loopne inc mov lret fbstp xchg push fisubr xor xor sub cmp jne test dec mov rcrb lods popa stos pop shlb pop movb iret (bad) idivl push cmpsb ljmp mov inc or xor in and inc pop xor sub dec idivb or xchg sti adc outsl popa push pop notb inc and jmp lahf xor sbb pop xchg sbb cmp (bad) pop dec (bad) sub test jb mov mov repnz push add pop (bad) sbb xchg xor stos fcom jge pop pop lock ja repnz pop rclb push mov fwait inc stc dec xor xor stc push mov adc mov cltd ficomp xchg nop fcomp stc xchg dec or loopne sbb fstpt nop pop cmpsl es add sahf das xor and jge sub addr16 pop xchg test mov jo inc xchg adc pop or pop xchg xchg sbb pushf stc repnz cmp test shrl insl jnp ds inc out lret pop push mov and imul pop mov add ds push pop aaa sbb sbb fmuls jno idiv fnstenv movsb in clc add sub mov fcoml (bad) cmp xorl push and or inc insl adc xor mov inc enter mov nop scas sbb pop or xchg and push push aam loopne out dec sti jge insb jne enter sub leave xchg ret and xchg mov pop sbb aaa aaa lahf mov in addr16 mov fiadd sbb xchg aaa jb not call mov out popl fsubrp jo cmc sub jne cwtl lahf sub icebp decl sar pop lahf jp aaa aam cmp ret in testb push cmp pushf arpl in jb data16 sub ljmp rcrb inc jmp lock lea repz inc fwait cmp orb (bad) xor mov sub in adc jne inc rol pop jecxz inc addl sub push mov lds jb fsubp negb aam js loop add mov cmp arpl inc mov insw xor mov ret push andl mov data16 scas or negl lock invd lcall ficom mov jnp rorl xor dec stos sub imul mov insb outsl mov jns push sub arpl dec dec pusha aam cmp pushf jge lods es loop mov dec jno jmp push cmp sub popa fisubl push xchg jns jmp adc adc fldt mov xchg adc and ret das xlat insl dec pop mov call ljmp inc xlat jb mov lea mov adc pop lods in icebp inc sub push bound test jnp xor push test loop inc (bad) rorl je outsl mov daa cmp out pop cmp mov (bad) push (bad) pop dec imul jno and (bad) mov cli sub loopne push xlat xor jecxz push and xchg mov mov jle fwait or sti ljmp pop push ret js mov jmp stc jge add cmp std scas jp ret pushf xor inc into mov pop icebp imul lret sub popf add push nopl mov sbb cmc adc jo mov loop sti add push xchg sbb mov cmc cmp imul fsub pop pop pop sbb push jg pop mov jnp imul popf mov add cmp xchg das movsb sbb (bad) enter pushf clc xchg ret mov pop fidivr ficom popa xor call sbb mov popf add movsb (bad) idivl mov mov (bad) lea stc xor sub jnp sub mov arpl and mov in inc popf (bad) bswap int (bad) (bad) cmp or mov jo cmpsl ja push out pop lret pushf mov (bad) adc adc mov sahf push cmc ss repz mov dec sub sti lock pop push sarl icebp rcl popa lcall (bad) (bad) fdivrs inc mov mov inc rorb out sahf mov shld xchg pop cmp push dec adc inc mov xor rcrb lods imul or data16 xchg sub add cmpsl loop test add pop and jne fnsave mov jbe add adc mov mov call adc xor xchg andb push xor sbb dec lcall lret or push ror mov sub jne mov shrb imul mov jmp jmp mov pop movsb cmp inc loopne mov cwtl push or fstpt cmpsl jge test pop or fwait adc mov idivl adc hlt push inc pop xor xor mov xlat mov outsb cltd rcr imulb xor cmp stc test cmp int3 fdivs (bad) (bad) stc call ret cmp aas popf pop jge cmp fs in add sbb mull dec out sbb adc lds pop mov xchg or xor cli repz out repnz and mov pop inc (bad) xchg ja jbe rclb cmp (bad) lahf (bad) mov mov pop (bad) add cltd or lahf inc aaa aad mov mov push cltd jnp jnp popa out test daa dec and out cmp mov adc and inc mov pop rolb rcrb pop push cmp cld mov lret xor push push outsl jmp jae adc bnd sahf (bad) sbb and jmp movswl dec test clc push pop fidiv hlt jo mov sahf mov movsl out mov push cmp ret jne rorb dec mov xchg push popa jns add (bad) icebp xchg inc sbbl sbb test dec add mov or pop add adc pop and std jl adc in pop aam push adc nop mov mov dec dec xchg sbb fistpl pop int clc sbb int xchg outsb movsl cmc adc add mov mov (bad) inc and loope lret or pop inc push arpl sbb ret sub fbld hlt aaa test push popa xor xor dec cwtl or not sbb jnp mov xchg mov out mov xchg inc loop adc stc pop pop into add pop loop xchg lret sbb repnz xor or mov dec stos dec jecxz enter push addr16 scas mov jmp fistp mov leave jns into shl mov clc out xor xor sub ljmp loope mov fidivl aam mov jno scas (bad) xor mov cmp cmp fmull aas cld mov loope les mov dec sbb cmpsl xchg fstp (bad) sub call jg out test aas jp inc sbb pusha cmpsl push outsb cmpsl push mov shrl sbb outsb xchg ret sbbb scas lahf mov insb cli shlb inc inc add cmp adc fcomps pushf add inc lds sti scas rol cltd fs and movsl popf dec xchg pop sub (bad) insb fild pusha dec es push xorl (bad) jmp dec insl pop test adc into std mov ficompl movsl movsl mov inc (bad) and xlat cmp in sub dec (bad) iret push jl outsl pop and insb pop inc push in repnz xchg or test lea mov pop jg mov scas pop gs mov jne dec cwtl mov stc scas dec mov cmpsb dec sbb sbb mov add or jg nop stos jmp (bad) fsts xor mov push xchg (bad) add jne and out mov mov and in dec push ret std (bad) mov pop sahf jmp mov dec mov jl,pn cwtl (bad) and test push lret (bad) std rclb jo rcl adc popa inc scas loopne imul sub mov sub test push inc xor les mov mov pop lock pop mov pop push and push dec and test (bad) imul ds pop aad sub pop dec fwait sarb or jl inc xchg lds jecxz dec or ret rcrb xchg rol fcom add loop enter cmp jns call fadd cli test xor mov aaa scas adc hlt (bad) aad lock cmp mov repz das cmp loope or sub aam imul popf insl jle sub movsb fildll or inc add or in pushf mov fstl add js mov adc outsb cmp inc adc cmp addl ret mov jp call push cmp mov jp mov mov out xchg push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add enter add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add loopne fstl lea and sub fstpl aam shll adc lea into adc fnstsw lldt popf add stos jmp cmp push pop sbb push add mov mov cmp pop adc xor movl test mov data16 inc enter outsl imul outsb and jo push push mov mov mov fstpt or fxam jle fildl push inc scas (bad) mov addr16 and jae outsl xchg loope leave mov push stc cwtl sbbl pusha and add data16 add xchg dec test sbb insb push ljmp cld aam hlt cmp scas push shll adc arpl ljmp lock std clc push pop repz (bad) int mov mov sub (bad) mov sub notl cs dec jae pop xor dec in and addr16 jnp lock cmp and jecxz pop and jbe (bad) fnop je rcr stos bound xchg aam (bad) lock pusha imul push pop out push insl arpl in and push ss testb jnp lea sub popf mov cmpsl test das sbb mov and icebp inc push test or aas xor or aas push mov jb (bad) jge mov inc pop xor mov sub dec lock (bad) mov repnz or out shl push out sub vmread cmp sub xchg lods pop sahf push in jle push mov jp ss hlt mov fsubr cwtl mov mov or (bad) bound adc movsb mov jb sbb sub sbb test cmp dec test mov adc sub dec mov lock push mov lods cltd je stos xchg xor jne jge scas xor cmp sub jmp leave mov les push adc xor sub and cmpsb in pop sahf and scas (bad) loopne (bad) dec mov andl scas sbb scas xchg mov sarb or (bad) ss mov sbb int (bad) lods jne or (bad) xchg lret sub mov jle sub push sbb sbb pop sbb out pop cmp adc pushf add in mov lahf sbb and mov mov mov push push jg imul cmp in lods fsts mov nop and loop jnp mov push mov (bad) push push adc enter pop ficoml mov sahf movsl and popa std mov mov jns adc lahf inc push dec xchg loope mov fsubs loopne fcompl jmp mov (bad) jmp mov notl add jmp dec pop loop hlt xor cmpsl lcall dec stos stos ss add jl cmp xor dec adcb xor push pop repnz mov pop cwtl adc shl cmp xor (bad) mov clc test push test rol std pushf je sbb mov mov test mov xor clc cmp push sub orl pop fist pusha inc jns cmpsb loope es cmp popa lds mov test imul clc jle push mov cmp sbb sbb xor xor push shl jmp (bad) jo pop mov imul lret or push jno sbb xchg ljmp rorb sbb pushf aaa aam cs or (bad) repnz hlt inc inc jne leave jecxz cmp mov test xor cmp pop (bad) adc leave js adc cmc xor lods mov xor and xchg adc add pop mov outsl add push mov mov leave sbb shrb or ja add stos lcall xor dec jno fisubl jp xchg outsl push pop dec inc insl push dec jo mov mov adc aaa iret or outsb jnp jne xchg in or pushf sub sub aas sub push test orl sbb cmp bound mov xchg outsb clc push xchg mov loope sbb ret xor in adc pop xor mov jg imul xor dec pop es cld popf push sbb jb lret or or adc ljmp sbb mov popf fs in arpl fiadd lods out jae xorl mov or add push je mov xchg loope pop inc ja mov loopne fistpl int3 sbb adcb mov push (bad) mov push jmp cmpsb mov ljmp adc (bad) pop iret dec xchg xchg cld movsb mov ror std addr16 pop movsb xchg clc (bad) lret push and mov aas jle or aas push mov inc xlat les mov adc push les imulb cmp sbb (bad) cmp or dec jp ret loope pusha xchg lock repnz stc in fstps mov fistp enter enter leave xlat xchg std add dec adc mov iret mov xchg or fwait scas inc push cmp in scas js pop movb (bad) mov rolb iret and mov mov (bad) mov loope jnp sbb xchg inc js mov (bad) cli push outsl xor and inc xor xchg dec loope test mov lcall outsb xorl aam loopne add jmp std mov mov add add cmpsb dec sub bound adc int3 add cmp dec push call lret stc cmp inc (bad) dec jnp lcall stc lods aad cmp fisubrl mov mov lds shlb pusha sub loope shrl xlat in (bad) icebp les mov int cld xchg adc mov stc je loopne rep cmp sub daa mov das popf push xchg dec inc sub add ss dec push push mov adc adc add sub fldt stos mov mov (bad) cmc subl push cld mov jmp push cmc std jmp add mov dec aaa rcrb (bad) mov test pop and push mov bound fidivrl data16 cmp push shrb cmp push push cli ljmp and and (bad) mov out aad js aas mov (bad) cwtl adc inc enter mov ficoml mov sahf jbe sbb adc or xchg ljmp xor add ret add dec insb inc jge int3 arpl xchg sbb cmp xchg cmp and and aaa sbb repnz ret fimull fs decl in mov add loope movsl orl (bad) fwait push sbb les test add and xor jmp mov sbb mov (bad) lret stos jp pushf pop leave (bad) dec xchg pop xor lock dec cmp pop fdivrl mov les dec sbb dec sti and lds lret das (bad) jmp dec mov sbb sbb repz add adc jns dec mov dec add ret repnz repz aas sbb jne cmp jecxz jge out call sub xor aas jo push mov (bad) iret add inc push cwtl daa (bad) dec xchg iret fistp repz and mov adc mov sbb loopne xchg xlat cmp xor in dec push push jle (bad) lretw inc je clc fs xchg adc inc sbb sarl dec dec aas jecxz (bad) sbb scas adc add jbe std out or outsl arpl xchg repz cmc or orb inc ss jns aam and dec mov jmp pop (bad) leave sub adc inc xor sub dec int3 ss and mov fistpll inc xchg mov push call addr16 mov sbb mov iret loop mov mov xor or sti cs and orb pop inc cld dec jle push and out or cmc mov jnp std and dec mov std cmp mov jle jb rcll pop pop out jns test outsb xor and and pop dec add sahf sbb lcall dec in ja mov test mov in inc mov imul xlat js or or (bad) cmc cs mov push pop jle cmpsb inc (bad) clc dec fcompl std jp xchg (bad) lahf sti jle stos add (bad) or and clc and in adc loop push or daa or mov mov cmpsb dec arpl xor mov cltd fucomip mov outsb adcl repz mov test cs test inc adc daa xchg push test outsb fsubs inc rclb mov icebp mov jmp pop dec push jl,pn out int pop mov loope ja or dec test sbb in mov test in mov out jo xor repz dec pusha es rcr push repz jno xor fldt push in outsb cmp push lds push gs test les pop cld movl rcll push or mulb inc sub mov add pop mov cmc dec xchg stos daa xchg xlat (bad) cltd and pop jecxz push mov outsl jge dec mov pop xor (bad) rorl cld mov ljmp ds stos mov lods pop xchg or jle xlat insb sub mov nop cmp adc mov cmp mov and (bad) jae cmc sub fwait mov in imul inc ljmp xchg dec sub test or pop jnp mov orl mov jecxz aas pop adc xchg fnstsw out sub push mov adc scas pop adc push and iret jl scas pop xchg mov ret jbe loop push in inc push (bad) sti xor mov and jb jmp out fdivl dec pushf add push cltd or xchg das adc mov push pushf clc jbe jmp stos inc ljmp call (bad) je mov xor lea and mov bound out fdivl mov xor cwtl daa je dec cmp leave stos leave js sbb decb sub push push mov test call ds movsl sbb mov cmp inc out push jp scas mov mov push sbb push stc sbb fsubl iret pusha outsb lcall mov jl sub call sub sub xchg bound mov (bad) loop mov cmpsl aad jl roll lcall scas insl mov jnp out push cmpsl in mov cs pusha xchg adcl lods lds call loope daa lods rcrb aam dec cmp adc xor push and push aas add sti dec pop dec ja sarb aad cwtl mov pop shl mov shl idivl cltd es push ja paddd dec ljmp outsl adc movsb pop push lock nop ljmp xchg loop repz mov add out call inc push jg push jmp push outsl sbb outsb lahf push sub xchg out arpl out inc sub aad int3 pushf mov ss push lcall test mov scas lahf popa sub adc andb int3 or fisubr pusha popf stos sub sub ficompl mov cmp fldenv pop (bad) mov aam sbb dec sbb sub aas pusha or aad pop cltd call cmpsl or adc gs mov xchg int in mov jg jb std xor in and and (bad) addr16 mov ljmp inc xchg repnz push jns out cmp imul (bad) dec es or pop cli xchg rclb outsl xor fidivr and dec mov mov jbe fstps push pop cmp lods xchg sbb ret push (bad) jl lret scas out jg in lock aad lea jge pop mov ljmp adc cmp in pop adc and xchg stc jge cmpb add dec in sbb fsubrl addr16 ret or repz (bad) lods insb popa jl fs dec push add (bad) repz xor and nop dec (bad) arpl sarl xchg (bad) jb ja or sbb mov mov sbb in push arpl gs or pushf sub cli adc aam (bad) je push inc dec stc sti mov dec ret inc ret mov nop das mov inc insl adc adc pop jmp add das dec lds stos and cmpsb aam push sbb jbe andl xlat test mov fldlg2 pop lret (bad) xchg orb push or xchg fldcw adc xchg xor in sbb xor lods jnp lea jge daa xchg in xor into stos push xchg adc mov mov or xchg xchg jo mov call add dec dec pop (bad) jno jo pop (bad) mov outsb and adc jbe pop jge jle dec add jge push lods in int xor sbb out cmpl add mov pop push push ss lret stos push cmp dec cltd jb stc pushf cs fdivrl mov xchg imul fistpll push jmp inc pop arpl inc fnstsw push cmpl pop adc or lret sbb arpl and ja add or fisttp add add std mov push push aas xchg outsb (bad) int3 mov mov repz push xchg setb scas mov pop mov (bad) shrl xchg daa subl push add mov je adc lret mov rolb rclb addr16 stos popa rcll test push sbb in ljmp ds mov (bad) push jnp cli adc pushf cwtl stos sbb pop add xchg fistpl mov movsb jle mov xor push cs andl mov stc or dec lret jg fs mov jge mov jl xor xchg pop movsb lcall pusha sbb jp loop mov das pop mov mov das pop mov add setne add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb rolb adc fstp pop rcrl aas int dec mov loope popf out int3 je jmp popa mov xor fdivp imul addr16 mov ret mov sti and iret push in cwtl cmpsb add push hlt imul (bad) xchg cs cli mov mov inc pushf xor and xor pop mov jne pop call movsl xchg sbb add sub cmc enter pop dec daa and rcl (bad) mov (bad) leave and push out (bad) daa add into test push es enter aam xlat out push add xor call pop sub sbb fnstsw inc xor scas and jecxz jmp scas pop xor dec popa fwait sbb movsl inc pop in sub add out rol push pop mov bound dec cmpsl dec mov jns aam jecxz jno les out shll lea repnz xchg outsl jle push movsl xchg xor sub jg xchg xor xor cld imul test mov loopne pop jns sub flds fcom (bad) adc inc jmp dec dec insl and jmp test xor imul dec and pop mov push pop fsubrs addr16 pop ljmp popf dec mov nop mov cmp and ficoml fs add out call push jp xor lods ficoml daa push adc add (bad) adc mov pop (bad) pop mov push sbb std push xor sahf adc das sub xchg mov mov jge mov cmp mov add push mov sub loop rcrl int pushf cmp outsb bound out sarb sbb xor (bad) ljmp popa in aad mov rclb push mov test ds mov stos out xchg es xlat jo pusha push arpl sbb into sbb push jne aam or jne add lods dec sub mov lcall inc int mov dec ds je insl and ss cwtl add fildl mov xor addr16 das mov int3 push jno loopne jl inc movsl sub movl jmp icebp add lret push pop mov movsl or cs adc mov jno test or sub pop cmpsb inc push fadds aas enter addr16 into xor jnp (bad) adc xchg repz jno fadd push dec inc and adc jg sbb or push testl test bound es (bad) or in lock test insb push sub inc sahf insb fistp and popf or movsl inc dec stos shrl insb and bt aam icebp sub pop xchg sbb and cmc dec mov dec xlat jo loopne jl aam repz sbb inc stos rcll push pop ja scas stc sub lret test (bad) bound sahf pushf fistp rcrl dec or mov inc mov fisttpl pop aaa arpl nopl stos in popf (bad) scas roll pushf sub call cltd js mov pop test negl jmp push xchg les push sbb test fcoml or inc mov mov outsl pop cmpsb lret push xchg lret dec sbb sub jecxz pop mov jle pusha mov ret or sub inc call or and fldenv sti ss push jl xor cli mov popa add outsl pop push rclb ja cld adcl sub xor dec mov jle lahf repz lahf cmp out outsl fwait ja or addb inc ficoml test sub loop sbb shll pop lcall xor inc (bad) lock lds xchg jbe mov in sbb jne push loopne ja dec adc outsb es mov aas xchg add aas stos out inc pop aad dec addr16 fs jmp addl sbb loope stos dec aad adc (bad) addr16 scas sub sub mov fsts int adcl inc or xchg rcrl xor jns xchg ret xchg and sbb mov mov push and xchg xchg xlat lea xor scas mov sub dec std inc fisubr xchg mov test xor mov lods cwtl loopne jo ljmp mov out sahf push sahf into sub lahf mov ret mov lret movsl hlt enter adc ret ljmp gs jb jns icebp (bad) mov mov mov adc push pop sbb mov sbb cmp push push lret add out jecxz mov mov inc mov mov or xchg jecxz das dec sbb mov inc cmp rclb jge scas inc dec clc sbb outsb pop jecxz xlat data16 xchg cmp arpl sbb add dec mov mov outsb out sti insl inc jle jp fbstp fs cmp mov fnstenv pop stc imul dec cmpsb or push cmp in and (bad) push xchg addr16 negb sbb jle das and adc (bad) sarl mov dec push ss in jne cmp int3 pop enter bndldx clc out xor lea mov (bad) dec call in jbe aaa cmpl dec xchg pop mov pop xor jno and xor mov inc out (bad) iret out xchg xchg add loop cmc ret sarl xchg rclb bound jo pop xor cmc inc mov cld dec sar in jnp std ret sahf mov leave sub in xchg scas in mov xor dec (bad) roll adc aas imul mov jne sub or xchg xor (bad) int3 push icebp mov mov add fnstcw test cmp shl push lods mov add mov xlat jne mov xor (bad) das sbb xchg scas call cmp xchg sar daa cmp arpl pusha mov rolb jge push aam pop mov mov hlt or loop jmp lods idiv xor push lret out (bad) xor aas mov rol loop inc mov sbb sbb adc ds pop fs xor inc inc xchg dec adc stc movsb sbb cltd stc es or xchg aaa popa jbe push pushf imul fwait test xchg outsb pusha mov jp aam sbb pop xchg push gs or cmpl add ss mov cmp scas push sbb jnp inc out js incb mov mov loope mov adc or (bad) int3 add lods mov fdivr fist scas xor movsl dec es mov mov out xchg sbb or aaa lahf cli (bad) mov addr16 and test jl push inc std jl mov dec aaa (bad) dec mov mull or sbb imull (bad) xchg stos mov lcall lcall (bad) stc xchg (bad) aad sarl stc add fisttp pop sub or dec ss (bad) inc mov test mov jno sub jb imul int3 out mov or cwtl ljmp push shrl icebp dec fs xor out stos int jne xchg scas and inc dec jmp push adc fstl aaa fisub lahf jbe push pop outsl dec mov aaa mov mov xor push mov and mov loop outsb daa inc (bad) adc adc sub push test enter test xor out sub dec pop pop xchg iret dec pop cmp jp imul jns (bad) repz int3 xchg add ja fcomps mov mov pop hlt sbb and xchg fwait push lret call adc rclb cmp pop stos stc ja jp popa outsb hlt cmp ret clc inc sub and lahf int3 sbb lods orl mov inc xchg hlt and dec adc lret (bad) dec or aad rcll adcl loopne (bad) clc or flds inc pop or xchg (bad) sbb (bad) cli dec mov imul or and mov xchg jns dec xor (bad) sti loope sub je lret fucomi mov sbb sbb dec nop sbb sbb pop aas pop aad xor mov sbb call xchg lods pushf aas iret cmc aaa rcrl mov in (bad) fidiv jns mov mov mov or dec shrb mov nop xchg pop cmc movsl mov mov icebp lods pop (bad) incb push (bad) jmp or dec rcll mov mov mov cld dec mov mov fs sub in mov sahf mov mov ja ds (bad) jp jno and mov pop popa inc sub pop push (bad) jb mov or sub loope dec scas rol fmul or (bad) sub mov ljmp jmp or into xor and arpl mov lahf aas test (bad) mov loop (bad) cmpsb jge subb aaa hlt adc add inc (bad) out js icebp repnz cld push icebp test adc add inc jns hlt icebp sbb mov push shrb aad dec (bad) jp inc pop aas fnstsw repz cmc xor pop add ret lods xchg jl outsb int or sbb insb shl and dec (bad) std mov lret faddl ja insl adc xchg pusha inc xor inc (bad) std pop xchg (bad) pop mov xchg out pop mov sahf je loope fmul xor xchg mov fsubrl jle pusha pop rcr imul dec pop hlt cltd sbb and and test data16 or xchg mov sbb fnstenv fnstenv aad cmpsl jb test mov lea mov jb pop ret jle mov pop push xchg arpl adc (bad) lea js jmp cltd and cli div mov adc test fmull push jns aaa in xchg (bad) jle into jmp sub ja and sarb inc jnp add push mov (bad) (bad) jecxz popf sub inc and and sti jmp push mov dec (bad) xor fimul push xchg mov repz mov mov outsl data16 cmp cmpsl sti out popa int3 lret pop sbb lcall fimull cmp xchg xor cmp sarl mov inc jne (bad) ds sub jo jecxz pop mov jp mov (bad) jne sahf pop icebp sbb sbb loop test jge lock out pop push out rcl or inc mov adc mov out mov and or push sbb mov insb push inc pushf (bad) sbb nop cmp push sarl dec addr16 lea jno leave es sub sbb pop popa icebp lcall imul je,pt or xor icebp lret js xor sbb xchg out cmp test outsb jge stos roll push sbb inc xor lock dec fs les inc inc mov test lret lods fildl (bad) in in aas xor xor mov or fdivl incl cmpsb dec jb sbb mov mov cs cmp sub mov gs mov mov dec ja and fimul push nop ret cwtl cli lods mov es jns sub adc in mov scas popa in jne bound repz pop add xor stos xchg jbe mov xlat ret jp pop and push mov jg pop fistpll dec ss sub data16 adc imul data16 jg add mov addr16 out jb or sbb cmc add daa popa sbb inc dec sbb ds je fmuls mov jp (bad) cwtl inc dec and push int call ret inc cmc (bad) mov or stos test mov xor repnz xchg pop inc popa fsubs sbb test scas lret lret in pop or sarw (bad) cmp adc add inc jne push (bad) out or data16 test insl sbb dec sub rcrl ds push in xchg xchg pop or insb outsl adc push mov test and imulb xlat adc fs stos jge lock cs test das (bad) jno sub jno jmp inc leave rclb movsb out or roll shrl bound outsl call fcompp dec data16 sahf enter and aad and jb jg std test ja test pop mov or inc (bad) test mov (bad) rorb stc repnz popa sti (bad) mov jne push insl adc sbb xor push xchg cld cmp shrl sbb outsl (bad) xlat mov push sub jp ds sub hlt sahf mov mov setae adc imul add fdivs imulb jb les (bad) jle sahf in adc mov aad sub or jae shlb sub stos dec stc adc dec or push mov add stos mov push mov adc subb ret mov pop shll ss imul push es jge sub hlt jle mov das mov push call insb xchg mov xchg lcall inc int loope dec fistp out fistp inc jo cld pop mov movsb ret and jg sub mov lret sub push pushf repnz and xor mov mov in clc fistpl (bad) outsb sbb addr16 popa inc mov mov outsb xchg mov into int test cmc aad pop mov test scas inc divb lret or cs in and dec out fisubrl mov mov cwtl out pop mov lcall pop sbb jp inc push jp sbb call nop pop sbb loope stos add cmp popf push mov je sbb test loope test sub arpl scas cmp jle sub test xor inc nop orl dec mov dec mov std sub adc ss mov push gs roll mov imul xor xor sti ljmp xchg fnstenv jnp in fnstenv incl add unpcklps (bad) in cmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb rolb (bad) xor cmp xor (bad) xor fstpl ja mov dec xor sti xor add mov test adc dec and mov (bad) ficom hlt and push adc xchg inc cs inc jl rcl pusha add sub cli sarb lahf sub int3 push sarb xchg movsb fwait add rclb sub out test aas ret xchg imul pop xor cmc (bad) fucomip mov or xor aam ret or sub rcr xor or cmp arpl mov cmpsl or iret sub scas insb andl inc jp inc push arpl loope (bad) fs jl dec and pop fdiv xchg scas push mov jle jno jbe pusha aas pop cmpsl jge pop das add (bad) dec mov sub inc adc mov popf jge and lock int mov sbb outsb std and ljmp hlt movsb mov jnp mov loope int pop pop pop (bad) fwait jl cmp lds push imul repz inc dec fist and pop cmpsl mov pop or sti mov icebp mov sbb lods inc push mov jnp push fwait rorb mov sbb xor cmp out (bad) jmp cmp int3 (bad) jl adc cs mov (bad) pusha (bad) pop fwait cmp cmp negb sbb fisubrl ret jp (bad) cmp sti mov cltd cs mov lds das cli rol mov test imulb inc lds cmp push das popf xchg cwtl movsb xor and sbb popa or fiadd sub mov gs or or insb mov jb push push add jge xlat adcb stos sti xchg leave inc jbe loope xchg xchg out jno dec ljmp fdivr fs aam lret loope xchg add and (bad) pop test mov test loope jle or push xchg ds out sbbb (bad) jmp xor outsb pop dec add jnp loope jbe jnp dec repz clc sti and fs cmp arpl ljmp or cmp push bound fistpll xor outsb (bad) iret cmpsb dec adc pop scas sbb ljmp int sbb ds add in lods iret pop stos xor push (bad) jge negb pushf and cs mov insb sbb adc ret and xchg mov movsl loop shlb jmp repz out sbb cmp lret adc or sub lcall nop cli andb add inc arpl into es add jmp and out test aas shrl mov gs scas sub add push dec subl dec das sbb in test movsl out iret xor dec mov push insl xchg nopl sub dec ret ljmp mov cmp in pop mul or in into fistpl stos sbbb mov jl aaa adcl outsb out call xchg inc push aaa loop inc mov arpl add push mov sbb mov and sbb mov xchg pop (bad) jb popl mov data16 jecxz xchg bound hlt arpl stos xchg or sti and popf jg stc dec sti push test push add push sub add push faddl pusha sahf scas mov inc jae rcll jo pop dec add xor mov xor pop frndint inc arpl mov aas out popf xchg push mov adc aam fildll push cmp pop sarb out mov push loop pushf mov std add js xor sub mov mov es adc mov push jecxz,pt fs mov sub push out inc add push mov mov adc sub rol mov scas fstl insl adc lret lcall sar sbb rcrl mov fs repz loope and imul pop pop sub daa in sub cmp pop movsb nop movsb mov xor jmp pop cmpsb sub cmp leave data16 sub fbstp jns lret nop adcl push jge lcall adc movl fistpll popa jl mov (bad) dec icebp das mov sbb dec push insb ljmp cmp sub (bad) mov js add loope ficom inc aam lahf test (bad) dec clc js data16 adc mov mov cmp sbb stos gs subl mov cmp xchg cld mov adc add mov adc dec nop dec jmp das dec std mov pop cmp jno std pusha outsb ficom inc outsl je jmp mov movsb mov cmp dec inc mov into jae pop xchg movsb add mov xchg inc pop add sti xchg in es pop sub or loopne jg out sub push testb or add loope pop sarl mov mov pop scas mul mov dec and stos push inc iret mov inc lret dec repnz xchg ds jnp daa pop adc stc mov xchg mov (bad) push xchg pop inc mov gs inc push mov jge aad mov lods mov xlat inc in add ss xchg lock mov popf and jbe jmp shrb sbb stos mov jle mov or scas cwtl shlb fldenv jns outsl and shll (bad) dec int3 inc jno mov or cmp stc ja lret (bad) push jbe cwtl shll (bad) pop sahf jp std fcoms sub jbe faddl push sbb xchg jb (bad) insb out dec aam dec insb mov fstps ret dec and bound (bad) das push push xor cmp jbe push jnp or daa mov xchg inc jmp push inc sar xchg je mov imull stos fsincos pushf mov sub iret in jb jne fcomip movsb scas push cwtl add ds cli mov int3 loop ficompl out lret sbb stos popa mov stc es aaa sti repz cmpsl and into mov push nop mov push push jae sbb sbb or hlt pop out jp cwtl fwait mov data16 out aaa lahf jmp cmp lret sub dec pop cmpsb mov test xor jge pop fwait loope inc lret xchg ror sub imul repnz inc pop jmp out pop pop cmp push push pushf mov push xchg adc push lret lahf xchg andb adc xchg movsb sbb jne or arpl fldt xchg testb mov pop icebp mov cwtl scas pushaw test (bad) enter sbb or xchg sahf shll dec lds mov jl push mov cwtl sbb xchg push dec jp sbb pop xchg mov sti add lahf call cwtl (bad) stos test jb jns sbb inc fs cmp pop xchg lea scas push mov (bad) pop in pop ja out sub daa or push (bad) sub scas adc outsb frndint or or andl xchg clc (bad) pop inc jl stos push sbb mov mov sbb (bad) mov and add cmpsb or or sti dec mov jae popf loop or ss inc int call repnz loope (bad) jge adc adc xlat stos xcrypt-ofb cmpsl out jmp cmc sbb sbb sub in cwtl movsb sub add cli add cmc dec xlat add insl push (bad) ja fldt lahf inc es sub stc add cmc int3 dec lcall jne xchg mov xchg or aad mov xchg pop xchg popf sti das mov or push bound adc mov push mov dec mov jb ljmp and (bad) in pop test xchg xchg add cltd out add loopne mov (bad) dec jge jmp jg ja icebp cltd hlt adc jo je aam out xchg xchg or mov dec es add (bad) mov lcall mov add imul pop mov dec icebp or lret call js aaa cmp shrl xchg fild sbb dec (bad) lret cwtl (bad) das mov fwait ljmp movsl xlat mov into fsubs sub add lds imul mov fisubl push jno stos leave loopne inc pushf mov dec bound push jecxz and dec ss movsl nop xchg ljmp mov lds shr (bad) fbld inc xchg pop enter xchg pop notb div mov fs adc mov out mov or (bad) dec push mov dec adc push jg or les dec (bad) pop pop and or cs pop dec and xchg outsl (bad) xor into outsl mov add fidivl insl add out adc mov mov bound inc inc icebp ret (bad) out sub xchg sub sub dec test leave add mov (bad) cmc push clc cmp pop pushf in jl cmc mov or mov push cmp mov iret jecxz or in push push mov dec (bad) push pop stos cmc jne mov (bad) std adc push mull mov cmp sbb xchg or sub dec mov fistp dec (bad) or adc cli dec and sub insl dec cmp fwait sub lods push or and sahf and push sbb cli or pop out sbb out sti in insl cmp dec adc ss addr16 mov test sub rcrl add cmp dec sbbl rol inc ds stos leave pop adc fs adc (bad) clc (bad) sub ljmp or mov fmulp in das sbbb sbb (bad) leave xor mov icebp jnp sub fsub adc sub push push in (bad) shl sahf lods imul pop (bad) and test int3 sub enter dec sbb lret cmp pop (bad) ss jp ret lahf idivb fisubl mov js loop or sub pop lea add fnsave mov fmuls pop dec push fiadd sub mov jmp push pop add mov push rcrb stc jle inc in adc int3 jo fild jp fwait mov inc adc mov cmpsb sub cmp aas fldenv jne dec aad cwtl das in sub addr16 lahf les (bad) jae xchg out and cmpsl shufps (bad) push aad jg dec in dec shrb mov add mov mov imul insb mov adc imul jg int3 xor jle rcrb ret fisttpl hlt mov push fwait pop test mov lock sub scas xchg mov fcmovb xor mov test out cmpsb pop push mov lods jle imul jo,pt sbb rep or shl mov pushf push sub push loope or sub sar popf and or cwtl mov xchg dec daa sti iret loope pop sbb mov pop rorb push inc fs call sbb into cmp jmp add (bad) jae movsl xchg xor xchg or lret pop stos out gs (bad) loop in jp cmc xchg (bad) fistpll test into push mov cld jnp fcmovu insl adc jno push jno sub cltd repz xor pop inc das sti lret mov dec aad dec cmp or test call xchg cmp movsb cltd mov pop push insl notl mov aas call mov jae mov mov (bad) cmp sti pop xchg fmul popa fsubs or dec sub mov dec rcrl xor ret test sbb adc cmpsl pop imul (bad) repnz popl add test pusha dec mov jp inc shrl push jle fcmovbe rcrl daa sbb jno movsb sub cmp data16 xor loop xchg xchg je mov popa ret lahf ret xchg mov dec xor push adc push (bad) std pop fwait lret nop daa (bad) jns pop mov dec xchg sbb cmpsb mov loope push cmpsb sub (bad) insb add scas addr16 ret test and movsb fmull (bad) lods (bad) imul sti lret mov push sub lock ds sbb (bad) mov mov add sbb pop je inc lret inc xchg sbb jge mov jnp mov insb push popa leave mov das jno cmp mov jg in ds push and scas xchg dec int xchg jbe fisttpl push ret cmp pop adc add ret pop sbb divb bound add fnstcw andb stc adc push dec (bad) sahf test xchg out xor mov rcll cwtl fisttp mov xchg or mov push xchg jbe sarl or inc in (bad) add dec les mov arpl pushf sub cli or ret mov add ja das mov cmp call mov arpl aaa sbb rorl or cmpsb xor xor sub pop dec fcomip ror mov push daa pushf add pop cmp int lahf into sbb mov lods push scas lods push xchg inc xchg dec xchg jns sbb adc stos je cmpsb hlt push loopne lahf xchg xor add movsl dec pop lea or push test enter ret popa iret pop das sub sbb jecxz sub aam xor sbb sub mov fnsave pusha sbb sbb xchg pop sbb in dec cmp mov cmpsb push add enter sbb jb jno (bad) mov mov aad xchg mov loop mov inc cwtl int push aad pusha dec mov arpl in dec jo pop fild mov hlt inc popa out inc ja insb jno or xorb or pop ftst jl cmpsb stc enter sub cmp iret dec (bad) mov mov jae insb xchg pusha movsb imul mov push out sahf rcr xor mov inc push jo mov dec sbb jae daa xchg shrb jbe das ret rolb push mov mov add mov rcrb jns out fwait aaa outsl fidivr (bad) aas add in mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add leave adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas sbb add lock int pop cmpsb cmp leave arpl (bad) jmp shrl dec ja jmp mov in outsl js idivl jg xor lock mov fdivr in loop mov mov inc ror mov test mov xlat in and sbb imul jl mov jp loopne (bad) dec sub or jg aad push add xchg sub cmp mov lahf shrl push mov loop ficompl jmp rorb sbb pop aad cmp out loop cwtl inc jbe sbb (bad) xchg xor adc mov jge lret sti stos outsl movsb loop or leave pop jne bound mov daa test rcrb sbb lods out test je add stc mov jne push (bad) ljmp cmp or lock test sub inc cmpl ja movsl inc icebp lods icebp imul addr16 dec mov and mov cmp xor sub jne jb add stos test and insb scas cmc sub cmpsl mov sahf or xchg movsl jne xchg mov mov xor jae gs cmc shrl mov leave or fst cltd (bad) and test jecxz mov ror in ss sub in or outsb and dec jge out pusha or cmp lea movsl cmpsb enter push in lcall (bad) pusha pop inc xor adcl fisttpll stos (bad) int3 inc and leave cmp ret js sub sub stc lret mov int loopne add xor lock cmp push sbb out loop (bad) mov jmp pop xchg xor sbb or aas lret inc add dec pop pop ret cmp repnz je pop pop stos iret aaa mov data16 jp cltd pop inc xchg js mov enter sub outsb add lods add xchg cmc pushf add adc add adc mov arpl (bad) xchg pusha and inc mov pop adc in ljmp add or test mov scas jecxz xor or sub (bad) mov jp xor adc jno mov fistl sbb icebp jle mov sbb jg inc adc ss addr16 jb pop xchg cli adc dec dec jle dec aam (bad) (bad) pop gs jae jecxz mov xchg jne test lahf mov push or das pop out dec cs icebp les mov dec push jnp fadds test out pop xchg xor call xchg imulb in daa cmp scas je fistpll push movsl mov (bad) pop jg call inc lcall and pop ret pop iret in lods loopne in out cmp fidivr call mov push les adc add xchg cmpsl ja inc fdivs dec xor mov mov popf insb out outsb pusha imul lret adc xor add in pop jns lds (bad) imul push sub xchg add add fsubrl cltd fisttpl mov mov pop jbe or xchg add and push icebp int3 adc dec add (bad) pop xchg cltd or aam add xor mov and inc aaa data16 mov jae push jl push mov cli cmp mov loope mov in jbe sti cmp xor or xchg dec inc lea pop mov fwait icebp sub cmp mov rolb cltd stc push mov add scas in mov sbb bound es or dec inc pop cmp ret test xchg cltd add xchg fwait das dec push stos xor xchg push aad jge inc inc imul sbb lods std pop popf add fadd mov jl ja jno mov jo cmpsb inc jp lcall es mov insl aad imul pop cmpsl sti xchg leave ja xchg or ret sbb inc inc sbb jne push repz (bad) fsubp jl mov jae cmp cmp mov stc xchg dec lret push lds test jo sub std add cltd cld push xchg mov adc js dec adc movsb mov jge mov sub cld addr16 sub rcr mov clc cmp push notb sub popa in dec hlt in xlat mov repnz xorl xor push in push and imul in movsl gs fbstp clc jo aad ret jle in js adc or in (bad) mov int3 jecxz (bad) and stos iret loope fnstsw jb popf add divb ja push test out xor scas xor xchg adc pop (bad) xor pop push ds aam daa jp ret lret jle (bad) pusha sbb dec sbb sti imul xor outsl push inc cld lret push fisttpll or aaa mov out hlt in jae sub jns pushf loopne out jge dec mov jmp xor leave cmp cmpsb in cli fbstp dec outsl lds pusha lret mov mov cmp jg scas inc (bad) pop jnp outsb or push bound pop les mov push cmp shrl cltd or pop addl outsl adc mov jecxz stc cmp stos adc leave cmc sub inc add (bad) push (bad) das cwtl fbstp cmp loop dec subl pushf fcomp push (bad) mov sub push movsl lods mov out scas xchg mov push jge dec aam and aam fadds mov jmp xor jae fcoms popa test insl gs ja and in sbb outsl push sub mov bound adc xlat push add inc dec jg and sub repz cmp mov xchg xchg movsb push xchg mov mov sub in fstps arpl retw out xor inc push sbb aad add fsubr shrl jg sbb cltd xor imul pop gs push mov mulb inc sbb scas movsl mov hlt ja mov mov xchg mov (bad) mov rcrb mov enter test push sti jbe loopne and loope mov inc das lea mov cmp or xchg mov popf mov mov mov xor mov and mov inc stos mov adc push aad jno icebp add in lods out and adc jmp arpl lds xor mov addr16 lods cmp leave push push cmp fld push dec jecxz push xchg jp push in je xchg mov stos push scas mov fwait popa xchg (bad) popf cltd daa mov sbb sbb in ljmp rcll ds mov stos pusha xor sub ret aad stos dec cli fwait sbb ficoml sub bnd push sub pop fmulp jo pop mov sti dec popa push stos and (bad) fildl cmp mov and mov push mov xchg imull enter sbb data16 pushl pop jb inc ret cwtl sub sub add icebp cmc sub insl or lods adc fwait cmpsl cmc pop pop aam fcoml data16 fsubrs mov test cmp sbb enter rcl out imul and (bad) jge pop (bad) fcoml xchg adc mov xor outsb sti xchg ja mov xor jl push loope (bad) sub jo or sbb push xchg out sbb incb or xorl lret pop cmp rcll xchg cwtl jl rcrb mov pop push inc inc repz addr16 cmpsb insl add cmp (bad) jbe scas (bad) jle or rep inc cli xchg cmpsb rcr sbb lahf push cmp (bad) or stc sbb add pop dec stos shrd bt xchg out and xor add mov js out xlat sub sub dec xchg mov xor divb jle jg jecxz mov xor cmp scas push (bad) pop cmp mov push push pop mov call inc push fs jns jb pop iret pop fdivrl pusha mov sahf adc add jge push push mov dec add sbb rclb mov add test mov or cmp gs neg jmp (bad) xor inc dec pop dec sub insl jmp aaa mov divb mov mov mov push ret bound push testb jp mov out fmuls or nop xor movsl (bad) hlt mov fidivr lods cmp movsb pop aam popa dec mov xchg loopne pusha popf repnz std cmc std (bad) lret mov push in push inc cmp push mov mov sarb int3 lea mov out adc push out les (bad) mov dec xchg test ja,pn mov and mov mov jp lret sbb mov cwtl scas mov mov imul cmp outsl pop in push lds mov mov mov mov dec fldenv fucomip push lcall and lret jle mov out popf enter in ret cwtl add and inc push dec mov or fist adc or std lcall push xchg sub cmpl pop or jno push into mov mov ljmp push push jae iret ljmp sarb push data16 into aas lret pop mov mov hlt rclb mov popf notl jecxz ja (bad) in xchg xor ficoml lret mov dec cmp js testb pop pushf cs or jle fs mov aas cs mov loop mov push or xlat (bad) icebp int mov scas insl mov movb in enter mov mov push xchg mov outsb push sbb add enter push (bad) leave and adc lret inc pop insb adc hlt outsb roll stc xchg sub sbb pop pop (bad) adc or mov int jo insl (bad) cmp cmpsb push and in pop jge int3 cltd adc jnp push iret inc push adc fs push shlb das sub mov xchg (bad) cld int movsb dec pop jle xor lcall sub (bad) jge cmpsb xchg or rol or (bad) mov lcall sbb pop dec cmc push movsb inc std lret inc jle je adc jp jp pop insl jp sub pop jl jo mov push and mov and movsl sti or mov mov push mov xchg jno cwtl movsb mov adc mov sahf and in mov lret mov sbb out cmp cwtl rorb sub dec and js cmp mov jnp push mov pop jno adc das jnp shrb scas aad rcrl ja adc mov xchg sub dec fcmove xchg push cmpsl push cmp push add movsb inc push xor adc add ljmp sbb int3 mov mov inc int cs sarl ret pop or jns push inc mov popf add jecxz xchg pushf add cmp cld push imulb jg cmp mov dec cltd nop subl mov xchg testl lcall dec movhps shll lret addr16 imul sub rcl std push push repnz in add imul (bad) into mov xor jmp stos inc popa xlat iret ret add add jnp pop or leave fstpl (bad) scas xlat jle push mov repnz daa xor fisubr cmp jp adc inc lret jnp cmc pop add inc iret (bad) lock adc out push sarl jne mov loopne mov test xor lock jbe inc or add jnp add pop sahf pop arpl cs mov out data16 fsubl inc cmpsl push sbb xor xchg fmuls push cltd and inc cmp pop mov cmp jmp mov mov xor out mov sub sbb sahf stos pop dec sub sti in test test xchg les jb lret xchg outsl and and scas std int3 adc sub xchg popf inc rcrb mov lods or or inc xchg (bad) mov bound arpl popa push mov mov sub xlat sbb scas jns lds adc insb dec sahf lods mov sbb or enter dec test js push (bad) es xchg mov cmp sti outsl inc icebp sub movsb pop das les adc mov popf rcrl fstp mov outsl cltd xchg xchg pop mov clc test movsb stos je sub stos push pusha rol data16 into sbb (bad) dec cli jge pop call decl sub movsb or jae cmpsl fldl lea fwait jo inc jae adc icebp stos out push push and jo dec jo lcall push movsb xor jbe jae adc mov mov push push xchg pop lods mov dec push js sqrtps and out push pop mov jae pusha jnp inc popa daa cmp repz pop jecxz mov xchg pushf outsb pop cmp add idivl jl fimull sbb pop add fisttp rcr cld jbe mov push mov sub movsb pop inc sub repz (bad) cmpsl sbb lahf lret out movq flds stos (bad) cmovp sbb cmp outsl mov cmpl imul xor imul out adc mov cmp (bad) push mov in mov imul call mov (bad) addr16 push clc popa adc xor inc and hlt test in aam cmp into push insl scas cmp in stos iret jl push popf mov aas push nop pusha push and into out repz leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz add addps jbe add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add add (bad) das and and cmp and (bad) aam inc add inc ret call adcl jecxz push jecxz add sar dec push iret pop arpl loop js mov fidivr add lds into xor xchg dec pop cmpl jl inc ja call jmp xchg xor jbe pushf dec int xchg jle and ret mov addl fisttpll std pop add test push icebp jns in (bad) mov pop ljmp icebp or gs adc fstpt (bad) adc sub inc sar or mov mov pop adc or into lahf xor outsb mov dec jecxz enter (bad) or push add in mov mov mov movups popf movsb lret inc pop rcl ja jb scas mov mov lock or sti adc test into jl out lock lods mov stos out dec call sub push scas push icebp fistl fucom dec aas pop mov js xlat js fstps outsl roll sahf pop mov mov addr16 aad fcoml mov andl jecxz rorb mov lret dec sti jecxz pop add push jp cmc lret hlt mov mov sub je inc fstl fwait rcrl cmc and sbb inc mov jns xchg (bad) or loopne movsl push xchg sbb rcr popa hlt xor xchg in ret iret or push dec jns hlt lret sbb lea (bad) pop test add ficoml cmc sbb cmp stc sbb sub dec push mov jae jg add ret inc push mov stc in mov sahf (bad) cld ret mov push mov xchg dec incb pop xchg cld repnz negb push sbb es sbb sub bound mov xor adc test push mov cmp mov fistl loop cmp sub scas and mov cmp sub add mov mov lods and jg int xchg jno cmp mov sbb xor sbb in in pop lds mov dec jb daa popf push lock rorl pop pop adc dec cmp cmpsb mov daa shrl leave cld test rorb dec fcompl in mov or cs (bad) sub mov pusha in (bad) int popf sbbl push out cmc dec je jae xor or inc inc pushf mov mov cld inc jns pop jb push pop jg fucompp xchg and hlt div stos mov mov xor push aam pop in mov movsl sbb insl push mov in lahf push dec dec dec inc (bad) mov insl movsl pusha sbb fldl pop rep mov lds aad dec push mov loopne jb hlt or (bad) jb lret addb ljmp dec jbe dec (bad) test xchg add das repz and mov call iret xchg push xor mov mov jnp and dec mov push mov inc repz sbb loop lds (bad) frstor cmp sbb gs pop loop xor sbb bound xor jae imul cli xchg fwait cwtl inc cmpsl and cld add dec xchg sub stos or repnz (bad) hlt dec adc cld jns stos test in cltd hlt in pop inc add adc and arpl or (bad) mov (bad) sbb push mov movsl out mov int3 mov hlt call test test pop or mov sub add dec out xchg popf xchg xchg xor mov fmull and sbbl push push lock xor add pop int3 add (bad) lahf jns dec addr16 xchg cwtl (bad) movsb loop xor loope std lds gs (bad) divb jl mov or and jp das (bad) in sub mov fisubrl popa inc roll mov mov xchg arpl adc mov jno lea in jmp lock jle scas and lods aas pushf test push ljmp lret jns xchg xchg int3 stc mov stos mov push fistl stos leave inc push fstp scas cs mov (bad) or sarl test (bad) sti pusha cld dec push xlat loope cwtl dec out mov push aad movsb test sarb adc and imul xchg lods lea push stos jb (bad) icebp icebp adc dec shll das popl xor cmp mov push (bad) pop and in jecxz xchg lods int3 dec xor nop mov gs mov outsb mov push dec aam mov insl adc and xor fwait mov es pushf sti in aaa scas mov fdivr and insl popa das int3 in in jbe adcb in jecxz sarl push test inc mov ret lods ret mov mov pop xor or out xlat fldl pop daa push and and jns call fistpll sub dec (bad) jbe int aas xor les enter dec mov lock (bad) jbe sbb jl jne dec stc mov push jle data16 (bad) fsts insb lret pop sub pop hlt cmpsb sbb sub std pop push clc xchg cld repnz lahf nop lds lret lds sub aas nop mov addl test imul lret stc add in cmp xchg and mov nop aam mov mov mov push xor push push push fwait push xchg adc xorb push imul mull popa pop icebp aas rolb xor dec sbb or loop arpl cmp stos enter pop insl pop data16 and sbb mov cld les jle pop dec and jl js ret movsl lods sub sub scas mov dec jmp inc (bad) call jne adc sub popa or and aad sbbl xor je push movsl push or jne das mov xchg mov mov mov add push add std test in orb sub push inc or (bad) in or sub out call (bad) push mov cmpsl scas cmpsb (bad) std or sub (bad) (bad) mov xchg addr16 or dec (bad) mov ljmp fadds mov gs das mov push xor jo imul nop xor push pop rcrb push xchg das shr mov daa inc jp sbb sub mov lds cmp pop fcmovnbe out mov iret push xchg scas les (bad) (bad) and mov (bad) fcos push enter mov out mulb std cmpsl std mov inc bound jns shl test les push pop sub insb mov into inc clc push es lret fstp dec push cmp out or mov mov and or jp xor lock (bad) (bad) push faddl pop pop inc les loop and clc sub lock or or push push pop aad in dec adc push (bad) aaa loopne dec mov ss or int3 outsb lret jge lret xchg mov cmp stos mov push sarb adc cmpsb xor lret aaa mov sub dec jge pusha lods imul fcmovnb data16 clc adc (bad) test cmp jmp arpl mov xchg and pop aad iret out ficompl (bad) daa daa into push scas ret aam mov add lods mov jnp scas in cmp mov or sbb mov lahf cmpsl dec popf fwait ja and fstpl adc cmp std mov pop je mov sub leave or notb cmp xor lahf (bad) mov pop cld mov pop pop and cltd xchg lods push or sbb roll dec sub ret insb mov repz scas jmp mov enter mov pop adc hlt icebp dec stos and fcoms dec sbb das push push mov out xor inc mov imul xchg push pop jl or push xchg je aas test adc pusha (bad) jns jne dec fsubrl mov pop pop push popf pop xchg pushf and push sbb pop jp inc cmp xor fcmovne sub jbe aaa std int3 pop pop xchg fisub (bad) nop js addl adc outsb popa jmp or inc jno ds mov dec pop pop push ret fsubrs adc mov add xor addr16 aad roll push mov mov ret mov (bad) push push iret dec pop xor xchg push mov inc jbe cmc call push shll sbb stos push cli sahf mov les or fcmovnbe push sar sbb shlb lds popl jp or cld add minps sub stc (bad) pop sbb xchg mov ljmp jnp shrl mov or and sub in cmp bswap or or lahf in std lret sbb test mov mov mov xor (bad) lods ficoml ss mov sbb addps pusha lds xlat lea or pop cltd outsl mov loop cmp cmp pop test pop push sar sbb mov leave jecxz fidivrl adc jbe lock movsb jbe add repnz add bound cs pop lods (bad) xor (bad) enter xor lret mov sub jns push in outsl les test xchg in or fwait xor mov pop xchg and pop add out icebp jmp xchg ret imul fnstsw inc pushl xor sub xchg dec mov sysenter jns add sbb mov sbb adc push in push push insb dec movl mov mov inc fldcw push mov nop fisub nop out and ss xchg fnsave mov add push dec test inc daa jo dec push lea andb jle test and bound cmp or and sbb inc inc cmp add fidivl test imul lahf popa xchg mov std (bad) cmp jmp sbb lcall sbb jecxz ss push int3 or and out jns pushf lock push sub mov data16 push ss ss enter dec ficompl mov xor add sub and inc jmp jmp cmp cmp pop sub jle addr16 push push stos les ret jo pop sbb cmc pop xchg aas sub xchg mov out cwtl add lcall div std leave push and jo lea pop leave out sbb mul and mov push cmpl stos in leave les push xor push mov test add addl cld cmpl inc sub rcrl fcmove aam push ret outsb xor add pusha pop test insb mov out sub pop pop mov call mov xor xor add jp or std loopne fcmovbe fsubs sbb inc into ja,pt loope bound ficomp aaa sbb inc (bad) ja sub jb lret out mov icebp ljmp sub hlt loop push sub faddl or or sub adc lret cs les imul mov int3 jns sub hlt shrl popa movsl fwait push jl push xchg out ds addr16 repnz shl push push inc and pop fs leave jbe notb push or mov sbb add aad call lret push ds insl pop shrl push jnp jecxz mull push lods in jns lcall mov xchg xchg (bad) push xor in js xor mov mov fcom jbe cli stos jns inc xchg dec dec dec jmp test aad jl or dec std inc cld out mov sbb pop sub clc insl popf and mov xor pop sti push sub aad imul ja and sbb dec iret les adc xor inc data16 push sti inc js push fcomps in adc sub cld cmp sarl out inc sbb cmpsl mov pop jl (bad) in imul or xor into cltd xchg pop adc idiv pop leave jge cltd rclb repnz pop mov push pop jnp out roll repnz lock dec subb cmp in (bad) mov pop addr16 imull mov minps icebp out dec (bad) sub ja js test mov ja in iret xchg sub adc notl inc cmp fndisi(8087 aas pop clc and repnz mov and adc bound cmp sbb push add hlt dec pushl mov jne push xchg es movsl fildll pop scas icebp cltd mov and in jle,pt mov sbb jnp cli outsl add stos sahf sub imul xor jecxz xchg pop sbb jnp bound push mov stos sti popa es sub arpl scas xchg test jecxz xor ret xor jg sbb xor sbb jmp or xlat or xor sub sub sub mov sbb jo dec (bad) xor mov mov js xchg mov mov mov cld push mov mov ljmp or outsl xchg leave pop adc test sahf pushf popl hlt sub mov pop aaa int3 mov lods sub xor mov hlt push lods mov mov cmc pop out in cmpsl cmpsb imul push scas or add scas mov ror rorl jge nop mov mov mov and insl push mov pop dec popf data16 adc and out ds mov loopne adc test cmp pop cmp pop push jns insl dec inc loopne mov sub inc jp push in popf stos icebp xlat sarl fdivrp mov xchg mov push push mov and cld cmpsb sub outsl inc mov cmp mov fbld push and jecxz push adc lods dec or mov pop jmp push clc daa (bad) call inc (bad) push cmp mov jp call (bad) incl add pop stos pop and jg add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop xchg addl sbb pop push bound and inc mov dec or movsl cmp sbb movsb mov out ja imul add dec in cwtl leave inc fiadd lret pop or shlb cli mov pop dec jle,pt cld xchg mov test loope sbb cmpsb lock inc or in push pusha bound sbb gs (bad) mov push in mov push aas jbe xchg hlt dec cmpsl js ret jbe fnop mov mov data16 test test fwait sti push call add jne jmp adc push std pop enter pop or mov sub mov xchg push add dec mov mul sbb pushf out out stos cwtl or push shr or dec xchg and lea (bad) mov fistp pushf cmp mov (bad) adc mov or push popa mov push inc mov arpl adc out adc mov inc sti insl cld sub (bad) pop popa mov mov push jl loopne xchg sbb or cmp jns mov (bad) clc movsl pop ja fistpl sub roll mov xor insl push mov xchg push jb cmp (bad) (bad) enter inc push xchg rorl jbe pop mov cmpsb mov mov sbb aad add cmp inc xchg mov iret (bad) out (bad) add ss imul mov push (bad) adc ror cmp pop aam rcll sahf and jp inc psubw aad push add cltd xor xchg add loope mov mov mov ret shlb cli fimul push inc rcr mov adc mov and ss (bad) xlat jne fldt jle adc aas in xor sbb fs and jbe movsb inc clc stos push mov (bad) ljmp aaa sbb shrb ljmp loopne lock (bad) (bad) xlat jae dec iret out inc adc shll push mov pop mov bound mov mov inc mov dec std stc (bad) insb mov std xchg fiadd movsb inc xchg aas or cmp scas in pusha lods ja cmp cmp stos aas mov test xchg cli and xor xchg jle inc das sub adc loope les lcall and mov in test out mov icebp mov inc mov inc je movsl lea jecxz dec adc jl cltd and sbb xchg out insl xchg inc lret and cmpsb mov jg mov push add (bad) xchg subb cld cmp enter jmp ret mov xor (bad) cli (bad) ja or andl aam adcb fsubl mov (bad) fadds sbb adc stc mov out lds xor popa fcmove (bad) jb lcall std mov xchg loop test sbb test pop sbb in pushf (bad) rorb (bad) ljmp adc (bad) dec orl inc pop push sbbl pushf adc lea lods inc mov cmp mov stc pop cltd les pop cmp add mov sbb xchg sbb pusha lods or sub jl dec and ja lret dec inc jae mov push xor test aas cmp out imul fisttp mov mov cmp stc ss xor lods jmp ret sbb repz add push pop or test ja jno rolb (bad) out jle push push insb (bad) lds xchg int xchg cltd outsb xchg push (bad) jb dec rorb jnp cmp call pop push pop fnstsw pop lods jns mov inc and in insl add jb sub inc fs fldenv fs aam and add imul (bad) cli aaa sbb shrl std fdivs shrl data16 xchg fwait stc lcall inc movsl int3 cltd js fldcw aad cld jg xchg push les test add in adc movb cld scas imul ljmp pop sub in cltd jae test dec fdivrs jns lock mov mov mov add push into ss adc pop fldl fisttp cltd sbb les inc stos push mov nop mov cmp mov sbb jp repnz sarb idivl jnp pop push or insl sub loope std ret pop sub out sbb mov cmp xor stc (bad) into jbe fwait lock dec xor enter repz imull clc and inc mov jp sub fild pop push cmp push pop xor adc xchg sub mov std push gs add test test push fild adc (bad) jo pop push cmp divb and inc sub or inc imul sbbb push arpl (bad) movsl pop hlt cmp sbb cmovae out adc mov (bad) and call into push dec dec xor xchg jo fisubrl movsl andl mov dec mov shl into xchg ss dec (bad) rcll cmpsb adc sbb icebp pop je insl jo push cmp rcr arpl rorb lock inc loope mov sub in add pop mov notb cmp add mov ficompl xchg mov lret mov and push (bad) sbb imul pushf scas sub adc mov lds int3 sbb rcrb out xor sbb sub out outsb push mov xor push and xchg inc push and bound sub pop jle jcxz mov ja and scas ret (bad) and sti mov jecxz mov cmp (bad) sbb inc dec inc stos jb sub movsb ds mov out gs jl std push mov dec pop xor stos sub cld or adc push or int ret movsb mov test pop outsb je xchg enter pop xchg sbb or daa leave inc leave lcall outsb pop jg and outsb cltd (bad) dec loopne or gs inc and mov cwtl jl data16 cmp adc rcrl jmp xchg xor xor fwait (bad) (bad) mov and sti jp call sub loop jecxz aad push push fwait (bad) and mov loop insl movb fs lret xchg aam xlat imul (bad) test or push sub jmp xchg fstps push dec dec and cld in notl xchg fimull in leave pusha dec out aad notl out shrb popa (bad) jae inc sbb and insl ret mov xor push lcall lock and sub jns shrb jle nop in jge jmp out jg je add adc ds mov lods (bad) pop jno stos push ret test (bad) sahf inc xchg rcrl pop jb (bad) out pushf xchg add (bad) or mov frstor fstpt negb mov std sahf mov fnstsw scas xchg mov sbb cli xchg ljmp subps sbb lret adc out inc scas insl jo jl mov fdivs jns mov roll pop push into inc popf scas adc jecxz leave or dec sbb out leave pushf jecxz je add sub out iret xlat push or mov jae mov dec lods cmc pop sub cli push dec out shrb movsl loope jmp xchg jne sub int3 pushf mov and jb in iret call mov mov repnz push push ss (bad) loopne insl inc mov jb cmp sarb add repz push repz repnz sbb pop or mov mov inc sahf int addr16 popf stos fwait jbe xchg fnstenv inc sti aam gs push scas movsl in enter or ret sahf fcmovu cld cmp ret xlat sbb test inc adc fst sbb mov pop std push xchg push mov sar subl pop adc cwtl outsl out push hlt mov or jmp in sbb and push sbb pop dec adc addr16 mull and insb pushf lcall xchg mov call dec mov push sbb and mov lea aam push dec inc stos xor pop pop movsb pop and mov lock xchg inc mov lcall loopne pop lods and xchg in xor loope gs scas or jmp jecxz out cmp in jno xchg cld lds jle fstpl in lods mov sahf cmpsl or pop movsb aam dec cmc push cwtl dec pop mov je (bad) bound mov out inc pop bound inc ds je (bad) jae xchg jp inc aaa fmulp adc aas fbstp addl adc loop pop lds and scas lahf (bad) adc pop xchg fisubr fwait cmp pushw and mov loop cltd scas js (bad) leave out test mov sub fnstcw mov and ljmp push sbb roll (bad) out into and sub pop aam stc push cld mov scas mov xor sahf push mov lret mov insb jle inc int3 dec std ds jne stc add cs adc repnz rcl pop sbb cmp (bad) data16 add cs inc stos sbb (bad) jge mov mov push inc sti (bad) push repnz jb or inc cmp fs movsb rorb add roll popa js xchg ljmp int3 inc test sbb mov adc bound adc add cmp sbb test mov test lock jmp aas jecxz jbe or icebp cs and out mov pop (bad) cmp cmp pop mov xor mov lock lret repnz or cmp pop std inc cmp jo inc ret adc pop cmp fisttp sbb (bad) ja push xor (bad) mov pushl cmp push mov es sbb jae dec sub mov xchg lock popf add imul and std (bad) mov mov jl ds mov mov inc pusha rcrl arpl xchg outsb pusha (bad) rolb lds in aam pusha dec aam mov and les push adc or rep js jns aaa mov fisubrl add (bad) xlat or cli insl (bad) notb loopne push or xor adcl icebp imul mov or data16 mov jb cli mov fnstcw in xchg mov adc int3 scas cwtl pop (bad) lcall xor lds dec dec mov jo mov adc cmp inc (bad) iret cmpsb xor nop or lock inc idivl icebp (bad) sahf gs cli fsubrl jno movsl movsl cmpl inc cmc pop sub mov sahf xchg cmc xchg sub xchg xchg push scas gs jno ljmp and fxch jp in and adc sbb ror (bad) lret push pop jns xor mov je cltd jnp dec scas dec aaa es (bad) cmpsl insl dec or movsl xchg lea fidivrl fnstcw xchg adc jle add in cmp (bad) nop out data16 lret mov (bad) repnz adc sub insb jge popf pop icebp adc push daa loop cwtl sbb push xor dec mov dec push clc insb dec fild or xchg jns mov loopne lahf repz cs imul mov in jecxz adc push in idiv dec sub ficom mov outsb sbb pop dec in cld sub das sub push insl inc ja pop lcall decl pop or pop mov sub or loop jge dec mov loop les inc xchg and or frstor shrl ror call loope pop in pop xchg xor adc (bad) call jmp xchg mov sbb and xor lods (bad) push ss jle xchg (bad) and das gs jg inc push notb fstl jecxz test and inc xor sbb popf cmp add xchg mov mov (bad) xchg cmp out add and xor or stos call mov dec or into outsb test inc iret add sub inc jbe xchg sub pop jns (bad) jmp aam lds push pushf inc lea lea scas popf xor adc mov and enter xchg data16 emms dec in outsl dec dec inc leave sub mov xchg push add and jae xor mov adc jmp jle sub push push lret push jo cmpsb in stos das pushf ret xchg fdiv loopne mov mov mov sar sarl in cli dec jge push adc (bad) mov stc add gs into mov pop pushf push jbe and cwtl iret andl stc and daa shll adc lods lret jge mov and or mov addr16 mov shrb ljmp adc xchg mov xchg and out jns lds mov mov and in (bad) jl movsl push dec (bad) test jmp inc je ds into divl dec out popf mov jno fstps push sbb xchg mov call out jbe xchg (bad) call (bad) gs jae nop cwtl push clc dec aas or pmaddwd sub fstl ss add mov xor dec sbb inc pop add daa mov xchg out add incl icebp cmp ds fnstenv sbb mov adc outsb push xor nop mov fadds jno mov mov jg sbb sub fcom neg sti xchg inc dec iret xlat or loope inc hlt jnp mov xlat jno les sarl xor arpl int3 int scas add std adc push push add mov sti out pxor and movsl gs mov sub mov xchg add divb das scas test mov mov inc mov ds dec into push mov cmp xchg call inc nopl lock addl push cmp lock addl (bad) jg sarb push test jnp popf add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and add (bad) icebp (bad) mov jno mov (bad) je mov jne push rorl sbb dec dec or insl fisubl out jge (bad) (bad) jmp js lock add arpl ljmp cmp out cmp ja stos mov xor mov shrl hlt arpl inc ja test aas std mov adc fcompl mov xchg dec lock cltd gs test sbb cli out je push mov mov jb pop testb mov shrb dec mov sbb cld cld scas pop push add stos mov rcll in push sti pop cld push (bad) mov mov (bad) xrelease das jnp or pop mov sbb jbe adc pop je js mov roll aaa int3 out xchg fimull jmp popa stc or add cs jno push cld divb push or pop xchg loopne shrl movsl mov data16 sub dec gs out sti jo or mov mov sub mov fistp xchg daa jle aas sub rclb xabort mov cld adc push test pop (bad) sbb push arpl jb add sub pop cmp int3 mov jg sahf movsl xor sbb ret pushf in xchg jmp xchg mov lods insb in int lea xchg xor lods leave add xchg imul mov outsl cmp mov int cmp xchg pop divb adc dec jae or pushf push into sbb leave add dec aam sbb mov mov ds xchg xchg xchg jl jbe pop jmp push mov adc xchg adc icebp dec decl xchg sub cmp mov adc movsb mov mov loop dec push dec jp test push int push in mov fdecstp fsub cmp (bad) out pop icebp xor and and xchg loope imul sub mov movsb or imul pop enter and lret aam cmpsb pop inc or push sub mov mov pusha jp cmpsb mov imul inc mov push fxam mov fdiv pusha inc jecxz sub in xchg les je inc into stos mov push stos add sub imul sbb imul test (bad) pop sbb or xchg push int3 neg int3 repz xchg into push fistl cmp repnz ds out int3 add push cwtl xchg adc xor fsub jbe xchg adc aaa sarl addr16 xor mov mov xchg or xchg js jnp push out push or add notl mov push pushf sbb jae jecxz mov shld mov adc or bound outsb xchg cmp sbb (bad) in pop jp add mov xor lcall lret mov cmc push lret (bad) or shlb or pop das mov push push sub (bad) in repnz das pop sub mov mov addr16 ret out aaa test popa je sub xor mov fwait add mov adc mov fs pop cmp add fistl mov es add push jg insl pop sub sahf hlt das push mov xchg data16 jg jae icebp jmp or popa jnp or loop roll scas cmp inc fucomi pop mov mov or mov in fsubrp leave shrl xchg cli stc std pop mov mov pop (bad) dec lret imul jge in jno inc aam leave clc inc sub cmp out repz scas push in pop and sub pop pop pusha hlt lods sarb and dec callw jbe add enter mov repnz mov mov roll jmp mov push push fdivl or int3 es stos (bad) pushw clc les cmp xor cmp scas jae addr16 rcrl insb push add loop,pn or pop into push outsl inc mov pop and mov inc sti shl outsl push mov iret ljmp in movsb and dec or sbb (bad) adc cmp inc add cmpsl int3 mov or int jecxz mov cwtl lds dec pop test fidivl push dec ljmp shll and fsubl pop adc cmp lods and sbb jnp dec out cmp cld mov scas rorb ss mov data16 mov (bad) and dec int3 push fistl into mov push aam clc scas loopne mov rorb fcompl hlt call or stc adc test pusha adcl push xchg cmc cld ja cmc (bad) shll jbe mov loop xchg (bad) dec mov mov (bad) (bad) jg sub sub inc test les test fbstp mov xor push int adc mov daa push adc fsubrs lods pop xor cmp mov xchg mov int ja push jge dec xor cmp jmp sahf psllw jmp pop js sub mov adc je arpl loopne xchg insl fdivs (bad) cmp push loop negb sbb aad or jmp inc push or mov sbb jbe jg into pusha push fbstp mov push xchg cmc push jge cld cmc lods in xchg and bound mov int3 scas mov in imul mov xor push add inc cmp mov and mov jecxz pop mov push hlt test out sbb out adc xchg xchg adc sub and sbb or popf pop mov ds lcall inc stc cmp add cli test adc xchg insl cmp les scas repz xchg fidivr pop cmc sbb clc xchg lods xor cwtl pop push outsl cmpsl arpl xorl add fdivp fcomps inc out mov cli ja jle dec pop ret mov clc inc adc or add mov inc rclb inc sub mov cmp xchg clc rol int3 lds ljmp pop in cmp lock jno test pop test sub fnsave cs (bad) into ds and sbbl and xor ret ss (bad) jno bound and add jne cmpsl aad aas shll pop outsb or cs dec xchg js jle (bad) (bad) dec mov mov push in dec fimul lret xor fld sbb mov enter jle,pt (bad) cmp mov lock popf add mov outsb add xchg jge pop ds test adc punpcklbw out mov jle inc lock jmp dec pop insb addr16 inc cmp push or and js adc call in xchg dec inc mulb sub negb cmp sahf scas mov pop pop or mov push inc stos ja aad enter (bad) mov push xchg rclb inc sahf je jno fwait sub xchg xchg (bad) stc sub pop movsl dec jne jmp xchg (bad) mov mov mov call pop and and xchg fcompl rcrb mov add sub fstpt adc cmp mov xlat push insb insl pop (bad) into fwait push scas sub jl loop nop pop push stos loope jnp xchg jg sbb dec cmp cli xor sbb fstpl pop scas inc out push imul jecxz scas int mov xor cltd or subl shrb idiv loope push inc iret imulb fucom cmc sbb lcall mov add jl hlt sahf mov xchg fsts push xorl jnp mov call loop sti jmp and in outsl test add pusha mov std sbb lea sarb pop and addl (bad) int3 push aam fadds mov rclb ror dec (bad) icebp cmpsl (bad) mov fcomps repnz xlat (bad) nop insl or mov jns repz sub aad insl aam jle pop pop xchg xor jge cltd xchg jae inc and cmc test call dec aam fdivs fmuls xchg lcall (bad) lret pop jg into or sbb or pop cmpsb pop or adc push pushf add outsb mov scas mov mov mov xchg sub inc outsb dec cmpsb mov inc ret mov or add mov fdivs clc scas scas pusha cmp (bad) mov sbb out icebp jmp fmul iret jns or mov imul push jg xchg out loopne shll (bad) rol xchg fcomip mov ret dec mov jl cld test insb in push fsubl xor adcl pop push push push jle outsb push pop mov and test jecxz out sbb push repnz mov in pop je repz test inc pusha or lcall pop daa sub arpl dec or jo jb xchg and call and push cmp mov (bad) stc jbe jge fistl std and in lods mov xchg inc mov ret call mov cmp aam jecxz add jmp xlat loop mov and jl ja dec lcall cwtl fprem1 fnop out insl outsb les pop stos cs adc add or enter dec pop jmp out cmc sti pop stos mov adc mov push cmp in out adc gs mov (bad) lret sub movsl cmp push xchg dec loope sub mov mov pop popf push fs xchg nop adc or jmp mov les pop jl add rcrl int3 lds sub dec daa (bad) cli push (bad) mov cmpsb dec in cs push add std sbb cmpsb ret lret pushf fmul mov sbb sub jb inc js push rorl mov repnz or ss push faddl iret testl adc inc lds test mov or mov or fwait push lea (bad) mov into pop mov and outsl push fucomip fnop mov scas (bad) idiv es inc jp xor xor out jl adc imul inc test iret movsb push shl cmp or daa pop mov cmp mov aaa fstps push cmp ficomp into xchg ljmp sbb lcall sbb sub lods ss push mov leave mov mov ds es (bad) sti in cmp mov aam idivl or mov xchg shrb push outsb push (bad) in xchg add pop imul ret cmp outsl in cltd std mov or out or mov leave repnz cs sbb or scas adc cvtps2pd out sar movsl pop add (bad) roll mov inc fcmovnu lret idiv int lods and xor mov xlat xor mov xor push pushl xor push (bad) shr mov ljmp ja adc inc adc into adc out cltd lods inc int3 sub bound fcmovnu sub sbb add imul fdivrs cwtl xchg fadds mov sbb push mov fmuls lret cmp test cmp fwait push adc lock jo inc scas or mov imul push push repnz loopne mov xor rcl mov mov pop imul int3 jmp mov es push sub iret cld imul add fwait inc lds hlt in mov and (bad) cmp rcll push adc push or and fldl mov jecxz inc cltd out syscall lods or xchg int xor cmp bound rcll stos and ss jmp dec jecxz xchg fsts adc mov fidivrl stc cld mov pusha xchg stos sahf jmp xchg popl or out xchg inc cmp in jne ret out sbb cmp lretw jecxz mov push add or xchg cmp dec clc and jp mov orb inc leave xlat test sbb mov into loop and inc cmc dec push aas imul in ds adc xor xor sub jmp fiadd out add aas jmp xor lret sub iret mov lods adcl inc xor adc pop popa and sbb or mov mov pop or je jnp aas lret loop sbb pop dec xchg lret pop inc call (bad) int3 jns (bad) adc pop add (bad) xor (bad) mov push nop loope (bad) lahf pop loopne and mov xchg pushf les ljmp push add or popf add mov sbb pop sbb add movb jecxz add mov lcall cmp lahf xor lret pop add fdivrl ja inc xchg pop xchg inc sahf push pop (bad) jo inc in loopne iret jmp daa sub sub push jbe daa push arpl aam mov sub or jecxz icebp push lods aad mov xchg sub lret fisubrl cmc cmpsl inc push push mov das sub fwait arpl jl,pn jne or lahf out adc pushf ss xchg popf mov mov testl movsb mov cmpsl adc lcall dec push cmpsl dec insl push popa mov push test dec adc aad gs mull ja xchg cltd or push pop xor pusha dec in dec push adc jbe mov mov aas imulb int3 mov sarb aam in ja mov sbb out loope mov xchg xchg add jmp pusha test or pop xor fisttpl mov fmull in lret in bound scas stos (bad) mov jne cld add scas fwait popa and xor sahf push lds test jno (bad) enter std add jmp fsub mov (bad) into xchg xor sbb mov jo add pop and pushf or ret ret stos dec inc ds and out int3 decl cmp repnz xchg daa dec sahf cmp repnz xchg daa (bad) cmp loopne pop mov aad add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and sar xchg jecxz rcl dec divl cwtl fisttpl xor cmpsb int (bad) dec fwait into rcrl arpl iret idiv cld sbb loope add or push xchg jo and icebp dec cmp hlt jo xor iret iret leave xlat dec sub mov jg clc int3 jo dec mov jecxz ret mov mov (bad) sbb mov lea mov push fs ja mov sar jae pop stc addr16 outsl jno das dec les xor icebp push cltd lcall test pop jecxz jo ficomp mov mov xor lcall dec push xor jne insl mov xor repnz and push orl in mov fbld pushf pop loope xchg in or mov in jp and xor les cmc popf hlt in push scas loop ljmp ljmp cld and jge sub mov mov add and bound xlat js xchg lds lock dec cmp mov inc cmp fcmovu jg adc test cwtl (bad) pop popl push xor pop pop mov mov ljmp xchg mov lods clc arpl (bad) mov call push insl pop adc dec fistpl xor daa push add mov mov jecxz mov cwtl outsl push push fsubl cmp push xchg sub push es adc mov leave mov sbb jle push mov in mov xchg mov push out lock pop xchg and xor and (bad) ret mov and (bad) cwtl (bad) xor lds (bad) pop cwtl stc or stos fisttp sub aad aaa out dec imul add add sbb rcrb fistl aaa mov fisub loop ljmp cmp ret xchg cmp inc mov jns les lret fisub in mov movsl sub pop pop icebp fsts in mov enter sub je (bad) adc push adc xor mov les xor sbb dec movsb dec jp cmpl aad cwtl add mov je mov pop rcr pop cmp cmp faddp mov mov mov shr dec mov push or mov push cli movsb dec mov xor inc rcl dec enter dec test pop stos popf fdivrl out mov daa mov mov dec ret out (bad) cmp adc sahf mov mov call xchg icebp pop push stos mov mov mov cmp pop push pop jp ret mov xchg mov cmc xchg fsubs mov lods test fistpll xor pusha outsl call adc jbe rcr pop (bad) fdivrl dec out (bad) (bad) aad inc add jp loop sub stos out out adc es dec sub int jecxz gs xorl mov cmp subl test ret lods and stc add andl rclb cltd in jecxz dec xchg ljmp adc add dec icebp andl (bad) clc xor imul clc in push jg jae insl cltd push cwtl in adc lea jp shr test adc lcall or popf push pushf fdivl xor inc add js add cmp or ss sub leave dec lea bound scas fcomps cmpsb pushf mov mov sub enter call aad je xchg sbb aam insb sub out fbld xchg jne mov mov bound inc rcrl (bad) push mov outsl mov repz (bad) pop xor mov mov std insl sub insb xchg xor mov xor xchg pop std out (bad) repz call or es inc pop sti add xchg pop sbb iret inc pop cli repz lods xchg pop fidiv adc enter pop mov mov mov lods mov sbb stos ss dec cwtl cmp jno mov jns pop sarb cwtl popf cld mov xor jbe ljmp cltd and pop decb (bad) xchg cmp pop cmp movsb shlb xor negl dec cli or mov fldl fimul push add sub pcmpgtb pushf repz sbb lcall aas pop jle gs sbb mul dec mov jns xor cmc divl cld inc pushf (bad) das mov les xor jb xchg xor dec add pop test icebp movsl jmp and addr16 aaa icebp push std test jmp (bad) xor scas cld scas pop or xchg xor adc repz aam mov sub out lahf jo out mov test mov (bad) incb shr xchg fsts pop mov ret inc (bad) jbe das inc rcl cmp sbb adc or je add push rcr sbb adc mov add leave int3 pop and bound std push mov js pop push popa lods and sbb cmc xchg jnp lret mov and sbb jb imul bound loope jmp or out jne cmpsl or out mov mov push add cs mov cmp out mov mov mov cmp out std and vaddss fbld cmp clc mov lret mov popf mov push inc cmp xchg xorl les repz mov (bad) jp pop (bad) and (bad) lods clc pushf inc or sahf shrb ret pop cmc mov mov dec lret pop push pop int adc gs mov or clc sbb jno pop flds popf loopne movsl push jp aad inc pop fsubs push rcrb push ja cmp jge data16 xor xchg (bad) rcr dec not jns sub sbb xor insb pushf jge dec add andl xlat inc and (bad) call jmp and cmp ds dec push (bad) mov dec pop fwait lock sub mov push stc mov push mov adc (bad) mov (bad) movsb ja push jo das lock mov movb cmp stos (bad) ja ret dec adc jle inc xlat fcmovnu cli fs push xchg fisub dec mov bound addr16 pop xor std dec adcl add sub jp ror mov ss in lea (bad) arpl xor and push sub xchg mov mov and testb add push cs jb sbb int3 call mov add mov mov mov push lret push ds (bad) sub and cltd pop or mov std jne push and aas rclb aas mov xor pop cld sbb mov inc mov fcomps loopne aam call movsbl sar fisubr pop dec mov fidiv icebp adc rorb jmp call and js sar ficomp fsubr sbb lahf mov out mov mov jb in (bad) jmp push jno jb inc mov xlat outsl ret pop inc out sbb ror bound (bad) cmpsl push les pop sbb inc jl outsl pop inc add cwtl push cmp mov mov aaa xchg fwait jge (bad) dec fiaddl in dec and sbbb cmp out mov xchg mov loopne movsb imul xchg repz jecxz loop mov call and push (bad) xchg addr16 movsb sbb outsb cmp fstl mov ljmp insb or (bad) push (bad) cmp repz lcall (bad) mov int3 ds mov adc in pop xchg xor imul aas sub imul cmp jecxz test out outsb or push mov sub fsts scas into iret out (bad) jo shlb pop jo test dec fmull jge jb pop mov repnz mov pop fs and sub mov rol pop sub lods aad popf xchg push jno cmc cmpsl js cwtl dec inc lahf and pushf in mov or out sbb pop in pop sbb pusha shrl out xorl dec cltd or movsb cmp sub movsl jl (bad) sub sbb xchg inc pop mov adc lahf sahf jb repnz cmp jmp xor jp push adc outsb cltd call jo cltd jns ret mov repnz (bad) push and xchg adcl inc mov test test test fsts pop test dec gs jl fisttpl dec cmpsb or (bad) sub icebp or pop bound push jo xchg jb (bad) hlt lret or mov sahf addr16 outsl (bad) in ss mov enter lock (bad) and lahf mov aaa inc test call imulb or das inc daa pop xchg fisubrl (bad) loopw push pushf hlt aam push (bad) insl fnstsw fist xor mov int push xchg sbb mov push pop xor cmpsl xchg add lret adc imul xor add jg stc jle cmpsb rclb pushf cltd xchg out jns lret jmp jp dec gs push xchg repnz mov repnz push add aas sub cmpsb shrb negb mov jns (bad) jno xor dec pop cmp imul nop (bad) or sub pop xlat addl daa stos ja in pusha test into into pop jae cmp lds and adc fisttp inc jne inc sub jb dec xchg mov arpl enter lret (bad) call or popa xchg and add add aaa ret adc mov mov loopne mov dec mov or mov js or dec jge (bad) mov fldl inc pop cmp push outsl push sbb pop iret lods fld xor xor inc insl (bad) xor lcall xor mov pop sti dec mov or push int fwait or jo es mov mov int3 and jnp add jno mov cmp fbld mov xor mov shl push pusha sub andl jmp lods xor pop (bad) icebp and mov mov sbb adc pop push cmp lret dec (bad) mov neg xchg test (bad) ja adc into iret add pop add (bad) push dec movsb je enter adc cltd (bad) cli lahf push cld jl xchg adc jmp lea jge xor inc inc add leave (bad) rcl sub pop xchg (bad) mov and stc stos bound push inc (bad) cmp imul shrl stc adc xor mov cmp dec mov std pop scas or sarb cmp inc jmp (bad) cmp lods (bad) adc cs xchg xchg adc leave inc (bad) lock inc sbb add xchg or andps jae sub std sti mov adc mov push xchg (bad) rclb mov lret or pop decl jnp arpl mov jp sahf cld (bad) and outsl xchg dec in fs (bad) lds js add pop clc outsb int3 aaa ds repnz mov and xor cltd mov je ljmp xorl fisubrl dec fdiv ljmp dec mov xchg add add xchg imul (bad) xchg add adc ret mov popa jnp mov pop xorb test cld sbb or inc xchg movsb jb lea dec cli fs std mov call ds sbb xchg movsl cmp and cmp push daa cmp inc (bad) adc xor enter xor inc sub adc mov dec xor sti mov jle and push out sti mov or lret (bad) (bad) push paddw shrb (bad) push in fs xchg int inc and hlt scas iret push jmp lods jmp xor dec inc push movb jae loop (bad) fisubr sbb daa dec pop jg shr adc sar test (bad) mov xor push mov adc mov inc push push ret rorl sub cwtl jg sbb mov addr16 movsb sub (bad) call fwait mov pop pop cltd sahf mov aas jge inc jecxz add or mov cmc cs movsl (bad) std lret cmc repz cld aam negl xchg xchg insl sahf jbe int fs pop out or push adc push mov aas js and and andl into stos dec sub jo mov not inc clc test aam hlt lods xchg mov adc jge or ret sbb dec xchg cmpl fadds bound aaa cltd fwait push in sub sub mov mull cld sar fs data16 or xchg jo loope insb (bad) mov xchg insl iret loopne dec cwtl mov dec stc xchg test push sbb xchg cmp cld mov popf cmpb jg jns inc in pushf xchg fnstcw aad aad adc hlt (bad) sub fild ljmp into jns jg jge bound sbbl xchg aas sbb in and jb rolb outsl jmp push and fstl pop pop dec scas out xor cmp inc mov jle mov (bad) fistpll aam (bad) cmp dec and lock lods loopne inc inc (bad) outsl push fcoms add pop in movsb mov mov adc jp jmp xchg test sub or sbb pop fcom (bad) add inc mov xchg cwtl or stc jle jmp push dec rolb stc cmpsl pop lea mov cli test mov jecxz mov mov or scas loope mov sbb fbstp cmpsb pop fwait mov push nop (bad) in push lcall out (bad) dec call mov dec push fist int (bad) mov scas sbb dec loop mov stos fnsave add pop xor adc es out ja (bad) das (bad) imulb dec add mov mov in add xchg mov mov inc sub call jnp outsb arpl int3 pop loope popa ss cwtl cltd push push mov mov addr16 sahf cmp mov iret sahf cmp lcall outsl adc sub (bad) add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc push push aas sbb rolb cmp (bad) pushl xor rcr cmp cmpsb imul xor jge sbb cmpsl arpl cmp out jge (bad) jmp sbb add or pop xor in (bad) xor mov add rolb clc test jo clc out jnp fistpl aad jae mov push jge rcrl fist lret adc cld (bad) jg mov cmp pop mov push and dec mov mov cmp dec sbb adc add inc sub jl cmp mov in cmpsb dec push rcll popa push cwtl lret shl stc fwait pop ljmp orb (bad) jmp (bad) inc or sub shll stos (bad) daa fidivrl leave push add pop add shl inc jmp pop addr16 xchg mov popa push pop pop mov and clc scas pop dec aaa or fsubrp mov clc jb shl scas xchg shll outsl jne mov sti adc sbb dec fildl xor mov stos popa in push mov repz std cmpsl aas inc test icebp jnp jmp xchg cwtl in faddl sahf inc pop stc inc pop lds scas xchg xor add pop sub movsb fsubrs sub lock (bad) scas sti sahf dec (bad) push call popa xor dec adc scas and setle (bad) lock icebp lock add jns pop add and pop int3 add aaa xor insl daa inc into cmp cli sub adc mov lahf dec sarl or test repnz dec xor sub dec mov adc cmpsl insl int3 add ret out mov (bad) lret jne dec fcomps mov mov flds hlt dec xor pop call out test js aaa or (bad) inc xchg cmp jmp je stc sub mov jle jae in (bad) sti pop fist in cmp lea cmp nop mov gs sarb jnp bound loope pop push gs push cmp js cmpsb daa orb loop ljmp pop pop push dec or mov sahf adc lcall and out inc enter enter les iret pop sbb repnz aam pushf das sub dec push push cmpsb cmpl (bad) aam adc push insb test cmp scas ja in or clc cld mov (bad) daa dec ss inc cmp add cmpsb dec inc call xchg pop popf and dec stos add cmp xor cmc int sbb or push insl add xchg mov repnz daa ja xchg or xchg push pop clc jge mov adc repnz ljmp sti std mov dec fistpl push and sarb mov add pop dec xor dec lea sub call inc sub punpckhbw inc movsl jbe inc pop dec fnop sbb sbb scas push in in daa lea sti hlt dec add jns or mov xlat sub push mov or imul jb shll fcmovnu andl sub nop push push adc push sub add jmp pop fbstp (bad) mov adc xchg cmp ljmp inc or nop jl add dec div ret inc mov and outsb push out mov xchg outsl loope ss mov shr pop xlat outsb mov out push mov xor (bad) adc repnz lods in sbb pop shrb aaa (bad) daa and test dec xor popa mov mov aas popf ret xchg arpl adc rcl sarl sbb xlat push dec (bad) jns jp xor out lods jo sub mov fdivr adc sub (bad) out lods sub jo pop xor adc or in ljmp mov pop test pop push adc pop jne push ficomp fldl mov mov xchg jnp pop aam rolb mov cmpsl mov adc out inc mov (bad) out iret dec mov repz inc addl loope popa test test sbb inc jg aad icebp mov mov ja into sbb int cltd xchg cltd fsts sub jge and fildll dec popf dec lds xchg push dec mov push xchg rcll pop or cmp or (bad) stc add push push dec inc scas dec ljmp in pop out jmp scas imul mov fidivrl cmpsb cmp popa es dec addr16 lock imul xor fldt adc mov sbb out mov or scas sbb mov jno push and popa ss incb adc mov mov mov or aam xchg pop faddp scas mov and and sbb pop clc xchg mov ds mov (bad) xchg fstps rolb iret (bad) aam xchg lahf icebp cltd loop mov and xchg cld mov fistpl sti push or pop cmp imul in mov aaa notl rcrb cmp dec jno inc cmpsb dec push aaa int3 bound xchg imul cltd xor cmp test push push loope jecxz mov iret into dec es pop pop mov push lret xor (bad) std jp cmpsb mov add mov (bad) repnz jle stos sbb jb (bad) lock or adc cmpsb sbb add daa jns dec push cli inc xchg jbe xor adc pushf xchg sub sbb mov sbb imul fist dec sarl subl (bad) pop push mov pop or jmp fsts xchg pop setle xor pop dec sbb int sbb lahf jno jnp jns push adc (bad) lock sub cltd sarb mov inc cs dec (bad) mov ret mov call mov (bad) mov lcall cmp jae (bad) cmpsb xor push cmpsl mov xchg jno out sbb dec jae int3 add test fnstcw inc data16 or test mov pushf xor xlat test mov les pop fld aad outsb das push jecxz inc repz aam movsl (bad) mov lods mov call sub out test imull ds sbb lret fist pop jmp loope mov cmp or ss (bad) shr cmp cmpsb (bad) fnstcw cltd push push pop aaa adc mov xchg mov das icebp fsubl clc inc sahf mov arpl adc fldcw inc mov aaa push (bad) sar outsb xor add call xor rcrl jle pop or xchg add scas push aam and mov mov dec scas xor movsb mov adc sbbl pop adc lcall or into out cmp subl (bad) fidiv xchg xchg xchg loop mov stos lret dec aaa sbb lds pop jmp or mov test cmp cmp stc sbb cmp xchg xor push and (bad) inc jbe push repz inc xchg out cli push or lods lahf dec push jbe cs add add pop or mov flds adc add lret rol out cmp icebp notb js inc add push (bad) push lds xorb sub pop je push stos sbb inc xor loop lods sub pushf cmp mulb dec dec adc xchg inc mov xchg addr16 leave bnd cmp push dec incl daa push scas repz mov dec dec push lods rcrb xchg cltd push cmpsl sub jno lret push test push mov cs or lea out pop daa adc call mov das cltd pop jbe sbb loop jp jg jae leave iret adc inc outsb (bad) lahf test sarl loope cltd xor xchg dec insb lds int in movsw pop sbb sub (bad) or (bad) jl popa fsubr ja shrl test out es (bad) cltd ret mov cld and bound je ds or fdiv inc xlat pop test or dec and xor mov hlt cmp arpl sub aas sub leave in test jle popf push xchg jnp adc mov push push xchg scas and dec sahf mov outsb sbb out popf (bad) bnd adc jnp iret lock xor cmpb popf cli push gs push jae mov clc lock shrb mov push lods add or push jae and jnp popa rorl sub scas fucom pusha lods lea mov mov push aaa and sub jo lock dec icebp rcrb inc inc push mov adc fnstenv push sbb mov test jnp and fadds xchg cltd js sti push adc push push and pop outsl mov and outsb xchg cmp out stos xor or mov or pop popa les pop dec cltd pop add pop mov arpl pop mov xlat mov adc cld and ljmp pop dec (bad) cli dec lcall and inc sub and (bad) (bad) jp jmp inc xor pop ja int mov jle pop pop nop fstpt divb in outsl mov addl notb mov enter loop add aad cmp nop loopne pop or les dec cmpsl jbe test js hlt cmp std ret das sub fistp lahf pop mov adcl xor mov mov pop sahf add rolb xchg jns (bad) int bound jle leave iret cmp mov pop xchg xor cmpsl movsl mov inc mov inc stc lods jp xchg xchg sbb addr16 lahf jae xorb lds nop test lods dec cmp loop cmc jmp leave mov inc and scas icebp int3 scas dec sbb stos loope xchg or mov pop (bad) out mov insl std and bound dec pop ret (bad) mov xchg mov shl pop jl lahf pop bound aaa mov lock movsb fsubr sbb sub sarb insb popl inc jbe mov aas jne lods mov ret outsl stos lods scas adc negl ret ljmp cmp mov or mov call or add in dec ret les push sbb mov sub es enter (bad) xor adc mov and dec and cmpsb cmp sub xchg daa leave mov fiaddl in loopne ds mov jg sub add stos in leave lods out popf int3 adc je and dec or pop sbb ljmp (bad) mov enter lods das or add lock pop pop pusha sbb mov mov pop in add sub pop push xor (bad) mov out inc mov jno in jecxz hlt fcmovnb out seta loop jmp xchg out std arpl push jne jo pop or aas jne ds pop cmp insl (bad) mov std stc addl iret ret pop add push insb pop inc jmp lods mulb pop lret or push mov rorl adc faddl (bad) sub jmp or pop or aas ja lret clc or jp jl out dec cltd hlt dec dec dec mov ficompl movb push xchg sub call mov sbb mov lret mov add lock inc xchg xor jae xor lds jle out jo data16 cmp or (bad) and and push fidivr test aad adc divb ds mov xor inc jg push cmp xchg xchg aam jecxz pop mov int3 push or ficompl sub mov cs sbb rol pop mov lcall sti and shld xchg mov xor sbb mov inc mov jns cmp fisub mov dec mov dec jns aas xor clc rolb mov dec divb icebp mov les lea xlat f2xm1 lds cmpsb jle pop add xlat jne pop shrl xor les addr16 cltd adc popa mov sbb cmp icebp push je xchg lock mov adc outsb aad and jmp xchg test rorl scas (bad) pop stos dec (bad) inc jmp xorl and pusha stos mov (bad) in daa lock push or rolb in (bad) fisubrl (bad) in loop sbb mov mov dec iret stos mov icebp loopne push andps xor cmp stc mov frstor mov push inc mov xor jnp iret mov ds notb sahf test lock cmp (bad) pop (bad) cmp cmp lret inc (bad) mov sti sbb jmp (bad) push stos pusha dec xor enter mov iret mov mov repz xchg mov insb mov loop jl dec jae lret (bad) aaa inc ja clc in sbb je adc push add mov sbb push je cltd dec xchg cmp jb test mov inc in cwtl pop cmc jp bnd fsts or test pop les rcr mov xchg jmp (bad) int3 cmp sbb inc cmc pop (bad) jmp and adc ret cld push (bad) jno xchg dec loop pop adc jno push arpl aad fwait xor stc cld cs testb or int3 mul sti mov es cmpsl sahf mov inc or out outsb ljmp or pop pop sahf mov cld mov data16 pop adc push and dec cwtl loopne sub in cli xchg xor lods mov lods xchg sbb rorl sbb test xchg movsl add xchg aaa ret lods lods movsl sahf adc or sbb xchg aad jge stc loop mov mov mov mov fadds ljmp adc inc sbb fs xchg cmp sbb lret xor push aam inc iret xor jp incb xor dec je fwait xchg mov push rolb arpl xchg dec stos lods jnp in cli subl pop imul popa xor jnp inc in push fisubrl in mov xchg inc push sub sub inc imul cmp pop ret daa mov lods lods lahf cwtl fs sbb outsb lods dec (bad) cmp clc push pop movsb mov sub mov leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz add aas fimul mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas fmull rolb fisttp fdivl pushf lcall cbtw cmp xor test xchg mov int adc fstpt pop (bad) pop add cmp pop or cmp (bad) test dec push movsl std lods insl mov or dec sarl jo cmp sbb mov (bad) icebp lret cmp jno and add loope popa stos movsb sarl adc incb push sub fisttp jle cmp mov loope adc inc push inc jecxz cmp adc mov cwtl movsl (bad) outsl js cli cmpsl xchg lods ficompl jl lock call or addr16 push gs dec sbb xchg jle arpl adc pop ja scas cmp push stos (bad) mov dec call hlt cmp pop lods lods mov scas jge cs mov jp (bad) mov and adc fwait inc mov iret leave cmp mov int3 mov mov sti push insl (bad) orl imul pop (bad) adc fs jbe cli nop in mov mov jmp out mov mov push leave push add mov roll cmp dec and pop jbe or pmulhw and fisttp lods sbb fdiv cmp fs call push iret mov push and inc push mov sub int3 push sbb aad ss fldt js dec arpl inc repz cltd and fsts adc lcall sub sbb push out pop sbb shl mov (bad) push dec cmc (bad) cs push aas and ds or frstor imul adc push aas hlt fcompl push ja push xor jae sub jo sahf push inc dec sbb enter or inc sbb cs mov (bad) mov xor sbb push into aam pop xor ds nop jmp aam xor xor mov imul adc push and iret sahf enter arpl jmp and rcrb adc mov xor dec mov repnz out fs mov (bad) xlat scas das pop andl insl sub add sub xchg lock jmp lahf movsl pusha inc in lret (bad) arpl sbb push mulb dec dec mov push sub das lret js or sub or pop (bad) scas and loop and pushf data16 or and js notb sub out aas ret dec cmp fidivrl test push sbb or scas (bad) pop data16 xor outsl loop dec xlat call push fbld or (bad) dec mov cmp cmp lahf cmpsb mov jp (bad) loop push or sbb inc lods xchg pop add fwait sub sub xor sub aad mov and scas js jb lcall mov cmp fldl adc sbb add pop imul jg add adc mov sbb mov loope aam jge fstpt mov pop xchg inc dec lods jg push out push push mov mov sub dec fldenv loop outsl aad dec fwait imul into fldenv add sahf daa adc lret mov jge xor mov xchg data16 cmp or sti addr16 push mov push nop (bad) jp mov mov loop aas fisubrl jnp (bad) leave (bad) mov xchg mull xor int xlat scas pop push inc jge add in mov mov jecxz popa mov imul and or xor sub pop lock push jbe (bad) int3 jae mov dec leave lret mov push imul fsubp inc fstps insl dec mov inc lds adc adcl mov sub mov das dec ds pop aas xchg or dec icebp gs mov sbb les out popa popa cltd cmpsl stos (bad) push xorl ja sarb pop addr16 pop leave inc xor rclb out pusha (bad) jge and xchg frstor xor and mov mov fdivl imul out pop push and test lods std stos xor or xorb ds into inc aad data16 rcrl jge inc ret shr or addr16 cmc jl fwait movb inc insb out pop xchg cmp xlat jecxz adc mov pop nop push dec cmp aaa add mov imul incb (bad) push mov adc inc into adc add scas (bad) in pop cmp js or repnz mov movsb jne adc cld std mov data16 mov aam clc ljmp bswap daa sbb mov or fdiv movsb dec dec push mull and cld mov (bad) mov rorl push pop dec mov inc iret arpl rcll mov jnp jle pushf jne cmp cmc (bad) push sbb jne dec data16 xor lock add jl jne loopne insb iret lahf arpl jns out in repz inc mov mov pusha insb fstl dec mov sub add into and pop jle (bad) mov push lcall sbb pushf lcall sub jno sbb xchg inc xlat push xor sbb sbb movsb mov jae jmp (bad) mov push pop or jg outsb push aaa jae (bad) js call aam clc inc fs pop test add fdivs (bad) cld inc mov test stc (bad) cmp sub fs and cmp push dec movl push jb mov scas adc stc adc pop lock sbb inc xor loopne pop sub aad lret add jno and scas mov cmp xchg pop rclb sbb push mov mov cmp dec inc (bad) inc inc nop pop test pop dec and jge and lock sub jmp imul jno ja sti mov or (bad) cs push mov pop mov and mov adc fidivr add gs rolb cmp inc jae ja ds mov mov fisttpll sub (bad) mov add push fidivl jae sahf sub aas lret sub in ds aad mov mov xor lret mov lret cmpsb imul popf pushf mov jl pop and mov mov ja jns dec sbb mov in repnz out ficomp mov lods xor daa mov cwtl sbb loop inc sahf jnp cmp jbe sbb fmull (bad) scas sahf jge sbb sarb jbe int3 fdivs sub pushf xchg insb (bad) lea adc sub inc lods xor sbb mov into cmp and push mov into imul (bad) shrl lret fistpl ret test xor mov (bad) aas jb sub lods mov int aas sbb jle ja rol mov push jmp das fistl or test shrl sbb scas sub flds jmp jl pop pushf repz clc dec fimul scas pushf and fsts mov nop es xchg mov cld xchg jecxz cli call cmp dec nop mov push sahf xchg int3 fnstcw daa (bad) mov outsl pop daa repz mov adc sub mov or jns adc mov push lret call jp add dec cld dec cli jae fsubrl ret adc push sub popf add pop int3 push icebp mov ret jne or xchg or jbe ds dec call mov inc mov adc popf mov out cmp repz jo mov pop mov pushf inc aas mov nop cmp cwtl inc jno outsb or cmpsl fldl fist orb outsb jo or insl loop sbb pop insb ret mov popa mov call pop imul jmp movsl fwait mov mov lcall movsb sbb call jle cmp push pop daa data16 adc mov pop int pusha movsl mov cmpsl ljmp iret cld loopne outsb repnz cld shrl sbb pop adc into pop jno lret cmp mov subl fdivr inc and push setns mov mov cmp pusha pop xlat int sbbl push push gs xchg xchg loopne jmp cwtl add fnstenv pop (bad) je mov jmp mov pop std inc mov sti sub mov dec sti dec mov (bad) cld in cmpb pop aas jle (bad) mov cmpsb (bad) sub mov out inc cmp in repz xchg inc lcall ds orb pushf sbb cs mov push fstps xchg adc or adc arpl imull hlt call push mov and xor lahf aaa arpl xchg mov mov pop mov popa lret mov in cmp jbe xor jg mov fist pop xabort scas loopne sahf es imul sbb jp fildll sarl mov and mov lods xchg out mov adc xchg hlt pop add mov cmpsb cmp inc push outsb or dec (bad) int scas push cmp into add negb sub stos xchg cwtl mov inc shrl mov les push sbb jl adc pop or xorl in push ja cmp dec xor pop cli xchg cld lcall pushf notl pop pop and and push lret inc stos xchg mov sub cs cltd outsb popf loop adc stos ljmp (bad) clc xor adc dec add mov pop jns stc inc fmuls inc daa test fdivr loopne or sub divl adc dec fcomps loopne loope or dec jg pop int3 insl adc lods scas cmp push push jmp jbe fbstp sarb adc insb cmp inc push cs mov and lods fwait cs sub mov std dec aam push int (bad) pop sub push mov and cwtl sahf gs ja in les mov or mov xor jns (bad) in mov fcomps fisttpl leave popa enter ljmp xor pop jno movsb sbb sub repz sub or inc scas out or out pop in ja (bad) mov (bad) pop call loope dec adc sbb stos bound mov loopne xchg jae int3 icebp negl cs xchg push mov jo adc (bad) sbb lcall ljmp or cs push mov loopne push pop cmpsl nop imul pop push popf or cmp cmp mov in and iret mov lahf pop cwtl push push call jl movl imul push or inc adc or and subl jmp and push pop pusha fdivl mov sub xchg sub and xchg mov inc es lret out mov dec (bad) xlat or pop dec in das push adc lcall je call int3 and push lret pop jo lock stc jae cld fbld cmp inc pop cmp mov xchg inc mov iret dec (bad) or aaa mov sbb bound addl aas scas cmpb pusha lock jle data16 lods mov mov xchg stc repnz push mov push xchg shll outsb pop xchg iret xchg jge lcall mov hlt (bad) fldl test int push lcall imul xchg pop mov jg push jns pop enter aaa mov (bad) mov mov addl movsb add jbe test cltd dec xchg push push pop jge mov aas xor pop pushf cmp test stos fisttpl jns arpl cli inc movsb or divl int3 sub mov (bad) push out enter pop (bad) daa xchg pop xchg jle stos inc pop sbb fmull cmpsl mov dec and pop mov test aad adc lods xor pop mov fld iret and mov aaa sbbl (bad) aaa ljmp inc push jne mov adc cwtl loop mov sbb cmp pop clts pop jge jns pusha inc mov push mov push and das imul das adc mov insl inc mov add ret pop add je xor jle (bad) xlat xor xchg adc jl ds sbb sbb das adc or dec aaa pop mov or sub loope lock cmc mov sbb mov add cwtl ficompl out negb xchg mov (bad) xchg mov dec test jbe jg sahf xchg shl in push xchg clc dec sbb sub push jecxz mov bound mov jnp push push je lret scas dec jmp sbb decl out (bad) lcall fadds xor aad mov sbb icebp jns outsb nopl mov stc pop and loopne mov icebp xchg mov outsb mov pop imul int insb lods imul xchg mov mov movsl inc repz mov or mov stos dec test xor lods lods imull xchg loop dec adc mov stc add push dec pop mov lret or adc mov jno mov cmpsl pushf iret xchg cmp xchg clc xchg xchg inc ficoml pop dec js mov sub dec xor or fld imull lcall lods dec adc outsb dec sub jno out xchg imul das jecxz in jge out ucomiss stos mov insb cmpsl push sbb lods mov or cmp mov movsb push push push or xlat add ss sbbl shlb ret add repnz inc loope adc out cld push (bad) pop fisubr sub push jne push stos std add push mov test (bad) push movb pop dec ficompl mov mov add aas cmp jnp ret lcall negb sbb xchg mov inc jge cmp out pop cmpl push xor xor ret cmp loopne (bad) call push cmp mov jp call lock cmc into pop adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp ret or int pop sarl jno cmp mov pop mov daa (bad) jmp je ja addr16 idiv aaa pop lahf jg stc std add mov decl dec loopne sub data16 std xor add mov sarb lret dec mov sahf lret cmp cmc rcll in push (bad) lahf push dec scas fnop sarl sub aaa aas std inc adc mov divl mov jbe bound testb aad cltd arpl pop mov pop imul fisub call rcrb imulb mov pop push jmp out arpl cmc pop mov cli xchg das xlat pop mov or hlt aaa inc fisubl mov and (bad) cmc push inc inc add (bad) sti sahf push std and sbb push mov pusha adc pop dec fildl or lods inc add push pop mov push mov mov or adc imul dec push gs aam rorb xor mov mov sbb mov cmp arpl dec out loop xor cmp movq loopne add mov jns std xchg adc mov in add insl adc leave loope mov mov jbe neg inc (bad) jmp and pop (bad) cmc mov xchg mov mov adc add sbb shlb sub das dec push mov xchg repz std xlat call xchg adc imul mov add mov lea and xchg ret dec test fs mov enter or test fwait mov fistp (bad) data16 jo test jbe (bad) pop out mov jge xchg sarl add or mov sbb (bad) (bad) pop inc xlat cmc fadd push loop cmpsl mov nop mov mov insb sub add lmsw jl test xor addr16 push xchg (bad) cmc xchg sarb es add pop dec jbe movsb stos cwtl mov incl lahf cmpsl sti (bad) pop (bad) ficoml pop push mov xor outsb mov and es cmpsb aaa scas adc add mov jne int cmp in push popf sub xor (bad) sbb in lds pop nop andl (bad) addr16 adc fcoml cmp cmp in fistpl test mov cmp ds stc popa rcrl adc xor fisubr fwait mov mov xor or inc test out push mov mov sbb sub loope shrl icebp jb out mov ja mov jb fisttpll push jge xor adc push mov loope paddd aas mov sarb push fwait (bad) test xor (bad) mov mov lock shrl mov dec sahf cmpsb fisttp adc je out insb jg out out mov mov in cmp aas jae notb int xor js gs lods das aaa addb mov or or jl jmp rcll lahf push pop and and push fisubr push xchg mov in add fisubl das push add test cltd mov inc pop jnp dec adc sbb mov pop cli pop push jg popf mov ds call mov fisttpl push pop cltd adc adc sahf adc dec icebp clc xor push mov nop inc fstpt cltd gs pop pop bound mov (bad) punpckhbw jmp cld and cli (bad) xor adc and mov cwtl sbb mov sahf aam les push and enter push imul inc push dec aad std outsb dec cmc loop and cltd push outsl lea dec jl mov sub adc data16 aas in fdivrs inc mov out fwait or sti dec jecxz add std stc inc dec dec mov push jbe push movsb and cwtl xor icebp fs mov outsb je or or sub mov pushf enter jbe cmpsb xchg xor out js arpl in dec jmp das cli jnp scas (bad) stos imul add adc xchg popa (bad) outsb xchg mov test jne pop jecxz sub in icebp fnsave or lret fidivr mov sti xor adc add js mov mov sbb loopne cmc pop adc push inc pop ficomp insb pushf ret fs (bad) shr sbb or cmp clc cld (bad) fldcw xchg cmc jmp inc icebp xlat in mov lret js scas invd frndint out mov popf mov fstpt fidiv negb xchg push mov aas les bound cmpsb jge (bad) (bad) jge imul pop add pop in loop fldcw imul xor loope add sbb fiaddl ficomp loop push inc imul or rcll inc (bad) xor test in lock mov mov jmp pop rcrb sarb and dec cmpsl jo cli mov lock cmp sub sub adc mov pushf jnp stos std (bad) stos mov add xor into jnp bound arpl sbb fsubp xor std xor rclb push adc mov lods cs (bad) imul inc pop lcall cmp lahf stos mov mov inc lods pop je fbld cs inc xchg jno mov mov jg inc pop bound scas imul or inc cmp into lods sbb pusha add aam test mov stos mov cmpl push mov les call je jl xchg sbb scas jl jp aam mov jge sbb (bad) das cwtl or pop lods push cld xor adc mov jae adc insb popa jno cli pushf pop or inc repnz negl pop loope pushf or cmpsb lret addr16 test add ljmp pop and stos xchg jne addr16 jnp cmpsl add loop mov (bad) mov (bad) adc dec loop imul lahf and ds jo xlat or lret add mov cmp loopne mov push xor xor xchg adc fidivr mov mov cmp pop mov xchg dec dec inc mov repnz addb popa (bad) sbb out je icebp jl xor pop or xchg xor into cmpsb push dec add inc lds sarb jle lret lret pop imul not ja lret out subb in mov aas into inc shll or mov test addr16 xor insb or dec cwtl adc out clc outsl cs (bad) xorl stc daa inc (bad) (bad) loopne xchg lea aaa lahf xchg inc out jo scas (bad) in mov jo ljmp jbe cwtl cltd add jb xchg inc xchg jne mov add cli sub sub scas or push repnz lock imul cs shll push xchg int3 or cmp sbb (bad) fsubs subb mov mov rorb ret pop imul add cmp std (bad) ds pop fimull shr out test cmp jno,pn imul out imulb imul mov clc cwtl push dec inc sarb xor arpl daa xor sti jmp out loope jbe adc (bad) sub pop push pop pop or std leave jg sub xchg xchg inc fcomi mov ljmp ja mov icebp repnz inc (bad) in lcall and xor and push or mov outsb out clc sub xchg xor push (bad) aad rorb xchg push (bad) enter enter push pop mov push fs mov mov xchg in (bad) (bad) lock sub sub rorl fmull jbe fwait mov mov popf lcall loope ljmp (bad) and cmp popa aam sub add hlt lds jns leave lods out and pusha inc fsubs icebp dec dec dec les push test fisttpll cmp pop repz addr16 loop xchg scas enter sbb lahf insb add shl adc xor insb mov arpl mov sub add and enter out das hlt pop aas out dec in xlat xchg fwait xor lds push test shrb enter push mov faddp mov out aad cltd mov dec mov add fdivrl scas push inc les jnp call enter data16 mov and add pop scas lret je (bad) fwait js jb pop mov pop sbb arpl out adc mov mov push pop cmp popf add loopne mov pop fisub and jle or (bad) repnz inc out xor push xor add sub and dec mov mov and sbb stc inc mov loope sub pushf pop pop rol les fisubl jnp es jnp mov fidivr in data16 cmp push xchg jp mov push clc adc pop jbe inc (bad) pop adc adc jl fmul adc xchg mov mov ret ds add dec neg data16 (bad) add je sub jne pop xchg sahf fstpt mov cld cmp sub jecxz sbb int sub sar cmp mov or add test imul jo les sbb push cmpsl fsubs aas inc mov jecxz imul pop stos sti dec in data16 dec cmpb (bad) mov jns lock mov xchg inc fisubr jecxz enter push mov push std stc dec adc idivb jge movsl outsb ja dec dec push sub push ret mov jnp test lock jnp xchg insl cwtl jno jecxz mov or loope xor and loopne pop lret dec mov xchg mov int mov jp sub loop xchg es pop inc fisub (bad) loopne popl iret lods mov sbb je jmp je adc xor imul jge add (bad) icebp iret sbb jae mov pop sbb xor mull outsb dec cld adc mov xchg xchg test aam pop push add mov mov fs and arpl fwait out dec adc insb in pop jl sbb push imul iret dec pop scas ret xor jl inc dec xchg repnz fsubr and mov jl test aad push insb and inc outsl xchg sahf sub das mov rcll data16 ljmp push xchg xchg jle fcomip inc lret dec mov lea inc mov jl push cwtl or inc cmp cwtl mov lods shr pop je and pop push lahf adc pop mov pushf sbb xchg scas imul xor stos xor xchg out dec pop test adc test pop loope out jge aad and icebp fidivr arpl fs (bad) xor stc aam mov jg dec in notb ret test adc cmp fdivrp jp ret push add test xor and dec mov mov pop sbb inc inc mov push cmp jmp cmp jno mov or sbb (bad) jns (bad) cmp (bad) in bound ja mov add and (bad) std fistpl xchg cs sbb pop adc mov repz push notb push (bad) inc sub decl jo jp subl jl mov jae imul sbb into jae cmp sub xor inc test data16 stc (bad) fistpl scas and fwait out stc insb loop add dec in ja in loopne mov jno dec cmp ret sub xor sub test subl mov push call lret stc xchg cmp or mov les aam or aas cmp test adc arpl adc and and or and sub pop repnz lahf push subl stos movlps push js fcomip xchg push and xchg leave jno arpl fistpl jns pop repz lret xchg jne dec clc or mov shrb sbb dec je add push xchg sbb inc in int loop xor jbe dec ds sbb mov (bad) xor in fld stc inc mov stc pop push test call or cmp adc stc (bad) daa int3 sti or fwait int3 int push or out repnz xchg (bad) jbe cmp int lret mov cld loope mov out cmp push mov cmp cli push int push cmp mov loope adc cmp jae dec mov movsl add insl pop hlt dec xchg sbb lods (bad) cmp jmp adc xchg aam jl lods push insb push jge data16 loopne push iret mov scas push push xor pop mov shl xor xor xchg lods ffreep nop jno add (bad) cmp scas xor icebp pop aas jnp,pn (bad) cmc jne in xor pop pop add subl lods dec inc lock mov add push lock outsb aam rclb mov push mov or cli cs inc cmp test mov (bad) jns pop cmp rcrb clc imul clc xor push mov call mov fistpl pop ss dec dec sub lcall pushf fxam mov mov and jmp shll pop aam push movsb sbb and mov cmp jge push test (bad) adc and jne lds or cmp adc pop ja movsl int xchg jne out les dec inc mov push mov jecxz sarb xor pusha dec push loop pop jmp and mov cmpl lidtl les nop dec movsb push cmpl lret mov ret out or (bad) aam movsb jnp inc xchg (bad) popf cld add lahf add mov lcall jns in xchg daa dec sahf cmp repnz xchg daa dec (bad) ja add add and (bad) leave lret add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp xor dec mov leave push arpl (bad) cwtl ss cmp push cmpsl arpl jbe mov xlat js mov movsb jg ljmp cmp lret add mov enter push fcomps dec cwtl inc aas je sbbl sbb push push loope cmp push stc (bad) mov or loope inc xchg insl lahf push sub stos xchg daa dec pusha cltd ss and stos lea mov sbb scas imul test or call call cmpsb cwtl dec cli fwait (bad) push or lods xor mov and in sub stos pop push dec movsl (bad) mov nop mov fadd sub mov arpl sub or mov xchg sti cwtl pop jmp test mov jmp rcr iret (bad) imul xor mov jns lods cmp das sub mov repz mov jp sbb xchg dec in ds sub mov hlt jl dec mov xchg cmp sarb js dec mov push test pop imul stos lcall fs mov inc xrelease imul dec imul std dec cmc sti test jae fcompl cmp jns and and and xor add pusha clc add cmp mov mov out push push xchg aad rorb cld push dec pop movsb idiv js jns mov hlt xchg fidivr cmp sti mov xchg xchg xchg cmpsl inc sbb mov xchg cmp cmp daa ret call or or fnstsw push mov fcmovnu (bad) mov fsts fldl dec popf lahf jbe push insl sub mov in icebp rolb aam ret in mull daa inc loope or lock out xchg fldt stos divl sbb add mov push inc nop jp or xchg mov ret sbbl data16 loope mov arpl shrb out push cmpsl loop mov bound incb out jo push mov bound xchg mov dec push xor xchg jnp cmp dec mov xchg mov das mov fs and sahf sbb inc rcll mov sbb hlt daa jns clc add xchg pop push (bad) in ror sbb cs movsb (bad) cltd inc adc loopne xchg xchg stc jle sbb jl cmp bound or or out sahf or cltd mov lods mov out fsubr push enter cmp and pushl sub or shrb adc and (bad) jns cmp push xor xor out sub mov (bad) out jno addr16 lcall bound loope in fxch xor sub mov push and (bad) (bad) test fisub scas lahf lret xor loop scas lcall and mov push shlb pop outsl out fwait cltd push sub add xchg or push dec call test stc loop in mov mov out push outsb jecxz scas (bad) xor sbb push loop xchg push insb xchg and cmp movsb arpl loop,pt int3 add negl mov xchg xchg xchg adc stos cld jbe xchg mov outsl inc push loop in mov call jg mov xchg and int3 call js or call sbb insb cmp mov icebp push xlat sbb inc mov lcall jb fdivrs xor dec sti push jb adc xor in icebp ja mov adc outsb add pop repnz xchg sub imul mov in imul push jmp mov or mov adc lret (bad) mov jbe outsl sbbl cwtl ds mov jmp xadd mov mov rol sbb cli or sub cmc xor inc ja ret out pusha rcrl test outsb pop xor adc and dec rcr loopne lret jbe mov pop sub incl inc sub sub xchg inc push outsl movsb adc jne es and mov jne jmp mov push mov scas adc mov ret push mov push xchg xor and push cmp xor orb mov dec aad jecxz adc sahf push cmp (bad) sti dec fiaddl push (bad) out xlat sbb mov les mov insl or test pop xor or fs mov in fsubrl cld and dec imul movsb repnz push data16 divb (bad) and sub push dec push flds mov xchg adcl sahf mov add mov xor lods adc xor dec imul out repnz jp icebp push push sbb push pop fstpl jle call mov push pop (bad) jb mov and inc ss fs test adc (bad) push jl mov imulb mov push adc xchg push mov shlb das xchg dec mov scas mov (bad) in fs adc sahf scas mov test dec sbb (bad) mov jns data16 out lcall add push inc add or icebp xor dec fcmovb aas mov sub jle popa js icebp mov jnp mov (bad) (bad) cli aaa imul scas ja sub std test addb mov rcll mov outsl rcrb std cmpsl out leave bound shrb dec pusha mov sbb mov test in jge out cmp in jle lds mov test out push shl in mov or sub xorl daa jp pop test xor xchg and fiaddl or pop cmp mov and inc test pop inc (bad) cmp mov andl push push mov pushf xchg std pop lea push pop mov mov insl fstpl jge nop scas imull in cld call popf and (bad) jnp mov pop out adc lcall and mov fidivr adc push jecxz fsts (bad) (bad) call (bad) shlb ret repz hlt sbb push lods and ret cld in fstl pushw push cmp adc mov sbb lds fistl lods adc in xor jbe mov and out mov jns dec mov xchg movsb adc and jne add into push aaa (bad) call in push aam dec adc sbb adc jecxz pushf sahf dec (bad) popf lds hlt mov outsb adc in ja push ret out push mov add xor loop xchg imul (bad) dec lea addr16 int shrb rcl sub lahf mov cli test fdivp lea divl cld add and jno iret test dec int or jno cmpsb and sbb xor inc lea sub (bad) shrl test inc mov dec push sbb std sub dec xchg lcall or and add cmpsl mov push incb ss fsts out and les and mov inc inc cmp pushf roll jbe cmp push pop ds inc (bad) out mov sbb dec outsl inc adc mov mov xchg flds fldenv pop jge pop sub mov xor insb lcall mov dec lret aas lods pop jle dec mov out fs mov jmp shrl mov adc das int push cmp and inc xchg mov jp jle loope push clc gs adc mulps dec inc (bad) push (bad) mov xor pop push pop (bad) adc iret mov (bad) fucom pop stc pop cmp or rclb lea aam test ds dec fs mov insb lea arpl (bad) xor dec push dec and (bad) ret ret jnp adcl mov pushf sbb xor mov jae rcrb popf sub lahf mov loopne jo sub xchg lret jecxz lcall pop int fdivrs sti push ret dec sbb repz data16 mov outsb dec adc or stc mov bound add cwtl insl test adc mov pop dec aad pop jns ljmp ljmp add scas dec xchg mov repnz xor fnop jge cmpsb inc movsl xchg std dec lahf inc addr16 ret xchg ret loopne jo pop mov adc fistl push je push test add xchg (bad) mov test mov fnsave sub std mov les adc popf xchg aad xchg dec push xchg mov xchg jmp adc js ss mov stos hlt jae pop daa push cmpsl adc mov cmc and cmc jo aad loope xchg dec and ja aam mov sbb arpl scas inc jne mov lahf imull or or sub sbb adc and adc jl pushf outsl (bad) sub sahf repnz out add dec sub inc sbb cmp sbbl jge push xchg xor fwait test (bad) mov mov fs hlt repnz mov jb mov mov fstp mov jmp sbb sahf xchg rcl (bad) jb clc xchg repnz lcall adc pop sbb mov sub (bad) xor xchg stc push fsub test sub sub sti jne mov inc push sbb popf pop cmp dec (bad) cld daa int3 mov or or mov dec repnz xchg insl ljmp mov bound xor xor and (bad) les movsb and xchg insl movsl leave cli adc aaa add xorl std fsubp dec mov stos pop aaa out jg jge mov sbb mov pop or adc lahf cmp jp fidivl inc jle outsl decb mov test adc (bad) mov xchg pusha aam sbb or mov movsb loopne je jp push sub test ss fist mov xchg jnp fcmovnb sbb add stc shr test xchg sbb xchg inc jl jno stos mov sbbl or repnz pop popf arpl add mov xor loope jle cs mov lcall mov inc es in fnstenv setb inc cwtl push jmp not or ret js cld xchg mov (bad) clc mov (bad) leave mov push sbb mov cli or mov sbb cmc sbb and mov out and mov lods pusha fcoml add dec ss notb push push sub shll hlt lahf scas andl push push outsl jbe sti xchg aas xor mov xchg pop movsb pop repz loope jnp cmp dec mov push stos push std imul xchg dec sahf bound jo jne test lret mov sub cltd pop fs lahf ficoml jecxz or or insl xlat ds mov xor shrb lret sub lea dec in mov mov pop rcrb push (bad) clc pop mov jbe push test insb pushf lcall es xlat jmp gs pop les cmp xor addr16 lods fsts insb lret imul mov jge out imul xor pushl pop mov test jne cli out daa xor cmp push sahf jge pop fwait inc push and aad ds jmp and int mov mov push pop loope out movsb outsl lahf push ret jae and add xchg xor jge or adc or jl inc add xor adc aad mov sar rcrl movsl push ss add xchg (bad) push xchg je lea movsb inc push lcall aaa xchg scas cmpsl popf pop mov mov sbb repnz out adc fsubr inc xchg and mov sbb mov sbbl fistpl and lcall in adc or loop mov mov decb xor into mov test mov fisubrl bound jl mov mov push xor addr16 lds push xchg iret mov test dec jmp repnz movsb shrb mov xchg jae fimul pop cmc xor and mov outsb out in ffreep or adc aam cmp sti xor loopne jae icebp in lcall pop fcomps or mov lods mov sbb xchg pop push dec add outsb out stc mov pop addl jle subl and in sbb or mov inc popa lods sbb andl in dec sti mov call dec xchg mov fsubrs sub push int jg jb add mov cmp xchg inc mov loop iret call loope jnp out pop push hlt xor dec (bad) jl push mov adc mov ja sub mov pushf mov sbbl lock in out in cli mov jmp repz pop lcall pusha (bad) in aam fcompl xor imul cli and clc mov lret dec ret divb sub enter mov jg fmul or xchg stos jge pop inc loop ret mov ret ja fimul cmc adc dec lods jg jbe mov pop jmp dec inc and cwtl jbe mov data16 mov arpl (bad) arpl nop hlt inc in and jg sub mov or xor (bad) leave addb jnp xchg mov xor cld ret out popf xchg dec and jg pop in pop ds push jecxz fisubrl sub scas add outsl scas mov add pushf jmp cld ja cmp mov jp call push cmp cld pop fbld loope add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add pop add add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add add dec inc inc push push in popa add lods add hlt pop ja cmpsl dec pop das fs mov mov insb cmp (bad) mov scas mov stc out sti cmp sti icebp pop (bad) mov imul cmp jb std pop sar nop ja incl dec jno (bad) xchg (bad) jl mov jno pop mov and bound mov stc maxps xlat sbb imul mov shlb mov int3 jnp xor lods lret adc hlt in jnp pop decl dec and pop in out fwait loop xor pop mov into loope inc out push fwait push imul fucomip sbb sbb push mov (bad) xor mov xchg sarl movsb cld mul int3 pop testb insl outsb fdivrl dec lahf repz xor mov insb cmp mov loop fisubr mov outsb iret pop cli cs mov lds data16 mov pusha and (bad) pop popf inc mov (bad) fdivrl mov aaa (bad) lods mov lods mov pop mov xchg sbb mov (bad) push push sub pop clc popa cmp ret cmp jne,pt jg icebp lret add mov pop int test jl mov popa frstor pop dec leave int xchg dec jnp push cmpsb mov out mov jne fistp loopne sbb (bad) push xor inc shrl add (bad) push xor inc shrl add (bad) push xor inc shrl add (bad) push xor inc shrl add rolb xor enter xchg mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add into adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push pop adc add loopne mov or rcrb ja ret adc cmp or ja out scas rcrl loop dec adc pushl jle add das std sbb xor fnop not inc outsl and cmp dec jl or mov cmp dec repnz (bad) jecxz cmp roll add int pop push cmc push jp nop jns int3 lret js lret dec clc dec sbb and lahf int3 pop popf xlat cwtl and loopne std pop mov test imull sahf xor out pop stc cmp fistl popa cmp stos outsl ds cmpb push imul fisubl es jnp in or or mov fisttp fidivrl shll popf jg mov sbb scas add out adc test or adc sub addl inc mov jns daa sub fstps leave insl xchg push jg ljmp loope push sti adc mov sbb jns push nop mov add ret pop push movb int inc ss icebp lods xor jmp sbbl mov les dec or bswap inc in test negl negb adc ds jnp mov outsl sbb dec adc aas push leave or xchg (bad) jb xchg jg fwait (bad) std mov jg dec cmp pop xor mov cmp ror xor ret fisttpl (bad) daa std push mov insb aaa jns (bad) mov cmp ss add das addl pop test test pop std pushf adc rcrl add adc xor (bad) pop pop and in arpl push push fs sub (bad) fdivrs sub mov cmc mov pop cli clc in adc cltd cmpsb xor pop int3 mov or jns cmp cmpsl lods push std mov mov rcl ret call jecxz inc and mov jb mov fildl xchg adc fcmovb stos les imull ret jb outsb xlat push (bad) gs ss mov mov xorl mov sub rorl in lock inc jl,pt mov bound insl lcall pop dec cmc jbe mov repnz iret xor aaa cwtl cmp lea (bad) out pop pop jne xchg mov repz pop cmp ds pop stos popf lahf (bad) cmp in jae sub jle mov icebp cwtl (bad) sti cmpsl rorb add pop and rol adc fdivs ljmp mov (bad) or adc bound jg push les lds xchg loope xlat xor jle push ja dec mov pop scas cli dec and dec fsubl popf mov dec cmp or adc push (bad) clc and scas mov hlt jl idivb push inc test mov lret sti push (bad) xchg sbb xchg dec out ljmp repz stc fldt mov popa dec aad adc fidivl dec fdivl sub mov out ss pop ret adc out out icebp add shlb adc mov inc or xchg push scas jmp es xchg aad pop dec mov jge mov stc xchg cmp jge test sahf cmp push sbb sbb fdiv add fwait mov out push (bad) lret push add ljmp insb dec mov cld addr16 sbb std mov (bad) shrb xor cmp cmp int push cltd adc adc jb mov stos fmuls stos ficoml cs icebp adc sahf sub cmpsl outsb mov stc in adcb loop ljmp rolb sbb push pop es lea ja jecxz push aad push jmp add popa push dec add adc mov xchg pop movsb loopne (bad) mov popf adc out popf test aas xchg pop inc insl (bad) testl enter fsubs inc clc dec pop push mov fnstenv cmpsl sbb jge es inc pop or inc (bad) bound insb dec loope repnz jns inc cmp (bad) sub outsb or cmpsb test sub outsb faddl xor mov hlt add sub aaa mov pop or movsl mov pusha lods pop gs test or pop aad fistpl enter stos push xchg xor mov cwtl fnstcw mov movsl mov movsl mov mov aam cli jp fstpl ret (bad) mov cli xor xor fcomip hlt fisubrl stos lock push (bad) or loop pushf jnp fnstenv dec mov lea int cmp jmp cmpsl (bad) sbb or cltd sub sbb movsl lock shl cmp fmull mov aaa jg bound pop pop pop rclb stc jge sub pop add stos jno mov cmp and push enter jle in sbb dec mov aaa adc mov test lahf test loop lds mov xchg cli repz adc mov decl xlat lock cmp ja and push sarb outsl xlat cmc in inc mov loop cmp add push lret or lods imul sbb inc div mov call insl rolb cmp mov prefetcht1 xchg or addr16 push jb inc (bad) stc cmpsb push mov xor push or mov mov push sbb and cs fnsave pop and fwait imul popf fbstp sbbl xchg push xchg fsubrp leave and flds mov aam jl fnsave shrl add subl scas mov aas push xchg dec cmp sbb push es xlat adc xor mov or adc push xor data16 or aam mov iret push sub sahf lret push fs data16 sahf mov inc xchg mov lret out (bad) jbe rclb nop pop jo jb mov xorb lret pop mov cmp jb jo add add in das fcomi lahf repz dec fcompl pusha test mov push adc cmp sti xor push int xor gs dec inc ja mov cltd xchg xchg test or out and and and outsl jo popf fisttpl nop cltd mov jns aaa fs xchg xor sarb inc out inc xchg or in pop add icebp dec mov sbb inc xor popa lret mov mov aas scas shrl or mov adcl xchg lcall aam add test ret or inc inc mull jge outsl sbb aad or xor out movsb bnd pop sub adc das stos xor popa jne (bad) ss cmpsb in cmp mov stos and mov adc sbb fwait mov adc les dec fistpl lods and xlat loop in jns out test pusha jle and xchg inc fldl ss mov mov stos aaa mov cmp adc add loop movsl or sarl test jg pop sub out insl mov sub push js push pop jnp pop or jns push mov mov test sub imul jle cs (bad) adc ss ljmp jmp lahf xchg add mov rclb scas inc ljmp popa cli aaa stos hlt (bad) push fsubrl and or ja sbb idivb pop dec xor dec push repz cltd adc movsl je mov lcall xlat adc add rcrb shll dec cwtl std (bad) divl dec rorb ret mov xchg out mov push pop add pop xor jmp cmpsb out out sub int adc ret outsb push xchg mov lcall mov push or pop sub add (bad) popa jg sub repz mov popf ret rolb xchg mov adc in mov cld cs fwait sub dec adc sub mov mov xchg fnsave es subl out pop xchg sbb ss dec mov xor dec ss stc mov movb lods adc pop push sbb int3 loope das mov add or stc stos ss adc sub sahf cli mov (bad) vucomiss xchg xchg aaa in insb cltd jmp push bound sbb fildl jge scas cld adc icebp in xchg adc mov aas call push pop mov xchg add jnp,pn add inc (bad) jb mov mov adc shl adc pop mov adc mov enter xchg dec cmp test pusha mov cmc sbb jbe pop mov mov dec cmc push test test dec pop pusha cld add pavgw add sbb pop shll arpl pop fbld fwait push dec (bad) dec test pop aad sbb mov addr16 out arpl mov sub cli mov (bad) cld in (bad) out mov xchg sbb movl xor (bad) push test jb stos and notb pop jno mov mov arpl test jle insb sarl repnz dec fs fnop push sub jmp data16 outsb push popf push fimul push jp jbe inc jne pmaxsw adc jge out mov addb rolb outsb adc popa cmp mov pushf test mov mov and pop cmc and jns push fildll lea xor push push jg leave movsb adc push mov pop adcb mov lahf dec dec aad cmp fdivs push rorl into (bad) in (bad) test subb enter jns iret sbb call idivl sbb jbe lods xor out lcall ljmp (bad) (bad) lret call cmpsl fdivrl jnp inc pusha movsl lds cld cmp stc inc scas psubb inc inc ficompl mov fistpl or pop xchg xor shrl ss (bad) xor jnp sub test sub enter or addr16 xlat or (bad) adc hlt loope fisttp outsb adc jmp mov in mov jno push add pop sub inc jg or icebp pop bound cmp add icebp cld cmc push leave test movsl scas push mov mov xor mov dec sub inc jbe loop (bad) dec mov jns fs add push insb aam add dec push add xlat mov enter ss insb mov lcall xor mov popa push jg push out or jge repnz jb in test fdiv add or mov mov cmc (bad) sub fwait jnp mov dec and mov aas sbb pop sti push call cltd test loope fldcw call or cmpsl movsl or add jno cli (bad) push xor sahf (bad) lods sbb cmpsb test or jmp adc cwtl xchg jle lret mov push fsubrs sti sahf jb pop in mov (bad) out (bad) or outsl arpl xchg shrb (bad) scas push mov aam jno xchg cmp out (bad) in dec and loope arpl mov adc jg ret ds push or repnz int3 lea mov xchg adc daa cmp ret jbe lcall cmp iret cs (bad) fldt repz mov fneni(8087 fdivrl inc adc mov mov mov xchg dec idivl and jg push or (bad) cwtl sub lea fwait fs mov roll inc sbb inc adc adc or icebp cli sbb push push or add shll fidivl lock mov cmp imull jae imul pop mov pop gs pop mov shld sub (bad) jns fs push sbb mov xchg aaa aam push sub test pop jg pop mov push pop js setle mov sbb test ljmp xchg sbb test pcmpgtw mov in lahf cmc nop hlt pop push dec loopne lods dec into inc outsl scas jne aam call adc push sarl xor xchg das xor and mov daa inc cmp (bad) clc push test in mov mov in in fdivl rclb jp mov sub xchg cmp dec push clc xchg into pop sahf aas mov push mov mov fimull ja or movsb sub dec dec stos xor cmp cmp scas sahf push mov pop (bad) fmulp cmp adc (bad) push mov fldl in ja out in gs scas xchg sahf mov or aad aam dec mov scas inc mov mov cmp repnz sbb shl inc pop jne pushf ja dec leave push out into sbb aam mov call andb or add sbb xchg and lods and enter aam notl adc cmp sbb push into add add sub clc in int3 adc int mov add int push adc cmp pop add repz lret call fs test pop mov add out xchg push jecxz cmp xor aad cmc outsl mov ret mov in decl mov mov pop and loope mov movsl mov add mov maskmovq divl lock cmp ljmp repz adc xor ret rcll xchg mov sbb inc out bound or es dec xor daa pop div (bad) jbe push jnp cmp in pop push adc dec mov xchg mov notl mov xchg out test jnp test sub push mov cmp xchg jne mov push std js out popf dec repz fstpl arpl into mov and fsubr push mov das (bad) out cmp movsb and iret movsb ja push push insl pop lods stos js add out (bad) mov jp call push cmp mov cmp loop or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp jae inc pushf adc addr16 push mov cmp pop cmp pop xchg dec push jbe neg cmp insb xchg lods in mov std jle jg cmc stc sbb cld add (bad) mov hlt jg popa or es aam test cmc mov push jg xchg jl mov (bad) xchg xchg mov push jns push xlat lock das pushf inc cmp loope xchg addl fs xchg cmp (bad) je inc popf dec arpl dec incl cmc mov dec scas es mov push sbb dec dec incb pop dec ficomp ficom mov pop cmp comiss std pusha out or xchg xchg sub mov lret lret xor xor adc mov xlat mov add or add sub jb cmp mov outsl ljmp dec popa cmp xor jmp insb cmp cmp push addr16 xchg mov adc sbb aas cli inc jnp clc sti mov mov aaa push into xchg fsubr clc push hlt add mov lret int3 imul adc jp xor and mov mov lea lods (bad) xor insl pop adc pop repnz pop push push je dec and jge cltd icebp xchg add inc dec jg jp xor adc aaa adcl or push insb lock cmp data16 popf and or (bad) mov jae loope test sbb xor mov (bad) repnz inc das mov mov ja bound adc faddl lds faddl repnz gs scas dec jae and push decl movsb push jbe or insb lahf ror mov aad cs pop dec cmp daa push mov std xchg adc jno repz pushf mov mov sub mov rcl cli xor cmpl out pop mov std xor insb std roll outsb or fldl push mov mov out add sbb sbb mov loopne mov rcr daa mov or sbbb push mov mov cs xor push shl cmp push std fildl jmp mov and pop or mov bound push negb inc ljmp pusha mov xchg mov jmp jle aaa (bad) dec into cmp inc xchg mov add lahf out mov or out (bad) push inc or adc dec movsb mov lcall mov xor in popf dec mov pop leave inc call shl sbbb lcall bnd jecxz cmp jg xchg out pop cmp jecxz xor pop xor (bad) leave (bad) stos jle mov (bad) fldt mov test stos out clc test or stos xor xchg cmp (bad) popf jno push push mov mov loope or sub lcall movsl into imulb mov into sub not push imul mov fild in sbb jns fs and adc addr16 inc shrl sub test aaa inc test and sahf fldt or mov scas aam mov ljmp inc in or jmp and mov mov arpl fwait cmp and out pop pop (bad) push or adc lods adc test sub ljmp adc adc push mov lret fdiv jle sbb repnz outsb out sub rcr cmp hlt movsb lods pop and mov shrl imull sbb dec lahf mov int decb xchg sti adc lea push cmp mov mov cmp data16 pusha fs test or mov xor inc pop xchg lods adc idivl xchg scas idivl push mov test in inc mov push test xor cmp lock loope (bad) mov sbb cmp mov xchg idivb mov movsl and aas cmp mov arpl add lods aad popa jb sbb loope add fnstsw mov mov out mov repnz mov cmp popf inc adc sbb cmpsl cli imul popf (bad) icebp (bad) loope (bad) icebp popw les in jmp stos add inc adc cmpsb in scas and sbb enter mov xchg adc andb and fwait xchg push jbe das lret leave addr16 and and sub pop mov xor mov pushf adc in push cmp insb add das inc xchg jecxz ret xchg (bad) adc sbb lret xchg roll stc cli xchg (bad) pop mov sub jmp mov xor aad push mov sub movsbl (bad) jne packuswb mov cli ds dec or xchg test in cmc movsl jns dec outsb and and into dec shlb cltd repnz aad push or insb xchg push cmpsl dec hlt int xorl mov jl test cwtl adc jns je rol sbb mov (bad) cmp scas cmpsl adc into fdiv mov std (bad) repz xor (bad) in inc (bad) jmp jbe mov push aad cwtl ret hlt lahf aas mov (bad) sahf out mov cmp adc or incb mov xor mov in ret cmpsb mov add sahf lock and xchg outsl mov inc out div xchg jl cmpsb sti jl dec fs ljmp inc inc dec daa xchg jg pop inc out lods xor (bad) push sub inc rclb call gs push stos pusha sbb push es push jecxz sarl or add idiv dec sub frstor (bad) (bad) repnz pop xorl aam mov adc and and inc ljmp add push mov mov lods idivb stos insb dec out jmp ljmp sub xchg das push popa dec loope jp push test aad inc in out push inc sub mov jle ds jnp jae inc sbb xor mov xchg bound imull ror movsl jle,pt idiv mov jnp jo inc pop sub or outsb sbb icebp and adc xor mov ffreep add xlat lahf fsubp shlb mov shl xlat lea push or aad or dec clc aam xchg and xchg rcrb mov mov fisubl sub adc sarl jne and data16 into (bad) jae sub jecxz ljmp mov fmuls in popl xchg test scas push test add xchg xchg out mov pop sbb cmpl pop jge jns xchg and (bad) test and mov movsb push stos mov add pop jnp andb ja mov insb lret pop push (bad) ds xchg fcoml rorl inc aaa in mov aad (bad) jecxz clc pop (bad) and jecxz fs sahf xor jge pop dec push mov clc ja repz push aad sbb repnz in inc sarb cmp sar xchg xor xlat mov insl pusha rorl in arpl mov pop (bad) mov fisubrl mov test fdivrs popf (bad) jne scas cmpsb cld (bad) pop add and adc cmp dec cs dec clc fcmovu mov pusha mov scas das scas cli jno aaa cli decl int push inc add sub cmpsb add mov mov adc stos test fnstcw jo std cmpsl adc mov dec or div mov (bad) les push inc aam fldcw scas (bad) mov sub cltd xchg das std outsl mov leave jo jo push addr16 mov aas cmp sti lcall insl sti leave invd mov (bad) ja in leave movsb int sub ds imul out outsl fcomi or fs in nop (bad) bnd jp cmp out dec (bad) lahf fidivr test addb mov sub shlb sub mov pop mov shrb int3 aam (bad) icebp add sbb mov inc mov or push dec dec inc idivl call mov imul (bad) enter inc sub jne fisttpl jns push dec jb sub jno or mov cs push xor jecxz stos hlt mov jecxz stos xchg imul fucom jo fmul dec xchg imul lea es scas imulb pop push pop inc sarb cmpsb and test sti mov mov ret xchg cmp popa pop jg sub nop aas in bound std (bad) sub std shlb mov fcomps je sub mov mov cmp mov cmp and or int3 adc test mov mov cmp insl repnz xor sub ds sbb mov (bad) jle outsl shr mov pop gs dec inc sub aad outsb lock add jecxz inc add add in push mov decl mov mov add xchg cmp pop inc pop popa jns ret imul les sub xchg lcall andl and push out stc in push flds icebp mov jge out (bad) divl stos scas lock outsl dec test dec test cwtl jno add cs fcomps push jecxz inc jne xchg mov (bad) out dec testb pop lcall xchg mov aaa fld lea dec cmp fstpt fist fnop imul lea fcomps sub leave sub in aas add mov mov lods rcll mov (bad) dec add dec push jae jmp push dec pop cmp rorl xor or in int add fidivr sub xlat sub out sub hlt xor mov and cmc bound adc insl test or cltd adc sub movsl xor (bad) je gs leave mov stc push lcall ljmp cmp cs xchg (bad) push out mov loop out inc das adc jge lahf fwait jecxz pop sub subl mov (bad) popa insl xchg xor insb sub arpl cld addr16 mov push jbe ds xor inc loope pop push push pop and dec (bad) xor mov loopne movsb test imulb xor jl dec adc icebp cltd jp inc mov cmp mov jno pop ljmp pop pop and pop (bad) hlt divb lods ljmp adc int3 scas int3 aas mov pop es mov out xchg xor js pop iret (bad) std jns bound fist lock mov out in xchg popf dec jmp dec add nop add fisttp jns add sbbl nop sbb xlat ja (bad) hlt icebp cmp test push les insb cmc mov popf sahf inc out adc loopne jnp xchg xchg in add insl sbb into in je icebp faddl out xor mov loop adc repz or pop jno (bad) cmp lock leave cli and lret adc pop xchg sbb cmc sbb xchg cmp sbb mov xor cmp int3 jb add test fidiv idivb lret iret adc xchg lods adc mov es not mov data16 push push or pop repz inc inc cli xchg add rolb push movsl sub xor sub pop xchg mov lret jp mov pop xlat mov or nop or sbb enter push das push shll push jns add mov pop aad out xchg out ficom and xchg es and mov mov mov ss push push mov xchg jb lds es mov out mov (bad) mov inc insb sub leave jno mov cmc mov adc add push fs jge (bad) adc outsl call adc inc out mov jbe jb dec ret movsb (bad) out push sub mov (bad) imul sbb jle cwtl (bad) mov (bad) in and mov rcrl lret cld jns sub jge xchg jle sub push popa mov shr fyl2xp1 push out mov xchg stos xor add xchg jl (bad) dec jle nop xchg inc sahf sub dec test jno cmp pop xor mov es mov cmp pop or dec das daa ja xchg insb (bad) aad ds cmp adc imul sub rcl jns xor ds add sbb call hlt cmp sbb pusha rclb inc ret mov push cltd out repz xchg loope mov jle push nop lds push mov mov or sub ljmp pop xor mov mov enter pop sbb push rclb loope loop addl push aam out push push loope inc (bad) je push jo or cmp sbb xchg cmp sub out sbb add inc mov and in sbbb pop push insb shll and cmp lods mov dec cltd stos es shr cmpsb fistpl lds out push iret int das int3 subl lock adc adc mov lahf pop and test call lods jl lea lods push fistpl lcall out push outsb rcrl repnz sbb lods jmp cwtl in inc fsubr es cmpsl outsl mov ja xorl cmp fstpt insl adc sub (bad) lret ds dec xlat rolb cmpsl (bad) int (bad) leave add jp das cld scas push lahf dec outsl outsb adc xor jno adc stos inc pusha insb pop dec xchg jnp cwtl stos cltd or mov in jmp xor popf cmp jp lcall inc (bad) aaa test test xchg sub dec out lock sub subb sub (bad) roll fwait mov push inc fisttpll mov mov sub cmp sbb xchg mov mov push push mov jae (bad) xor or out xchg cmp dec inc (bad) and pop xchg push aam push pop das pop mov or dec jae push addr16 insb lret sub dec and repnz mulb les (bad) add xor mov inc imul out dec sbb adc mov and out mov test rcrb inc test lds pop xchg subb cli ret decl fnstsw jnp out fnstsw jnp cmp cmp out faddl mov roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push push adc mov push inc cmp dec push jmp outsb add addr16 adc nop out out sbb inc mov out push fild imul add lahf add pop imul add fwait bound enter mov loopne in mov popf mov adc sub sbb repz or push cmp stc jb loopne cmp jle inc shll inc pop scas jb jecxz scas adc (bad) jo mov popa aad push push int3 inc adc sahf jg out push xor jecxz mov pop and std jae mov enter lret adc mov pop stos (bad) cmp mov popf lret aaa shll dec pop cmp and stc push dec fxch aaa xor cltd sbb loope lret xor push xchg call fwait dec inc (bad) mov fimul mov test out rcr decb mov loopne mov or insb enter dec ja mov mov (bad) mov fildll shrl add and cli int popa mov sbb pop (bad) clc or sbb sub in and xchg je push xchg and push xchg add test jne in jns add mov lea ljmp sbb mov mov stos jnp aas push js ret and xchg jl pop xchg roll push cli pop adcb flds fs add adc push addr16 jle repnz adc repnz adc outsl cmpsl clc mov stc xor jmp dec repz enter fmul xchg xor inc imul loope xor adc popa jo xchg mov cmp sub xchg sbb add pop dec lret fsubrp xchg (bad) jno or mov aas scas scas sbb (bad) dec xor mov scas fldl mov stos jb push insl pusha and rcll pop fild adc sahf (bad) outsb cmp ret xchg mov out lcall pop popa aaa jle (bad) mov movsb repz dec cmp cld je ja sub bnd and inc ret arpl sub clc ficoml add xchg push or mov mov jle test jle mov addl fwait bound into sbb rep (bad) mov mov sub inc xchg mov pop dec in inc insl lds push mov out xorl in mov pop aas jl lcall mov inc faddl clc test adcl xchg adc sbb dec xor inc sarl xchg pop call dec sbb xchg push pusha gs movsb xor leave jl lods adc mov lods mov jno (bad) imul repz or adc mov mov push in out fsubs cli dec (bad) bound inc cmp push mov mov jnp mov arpl movsb sahf or dec addr16 sub push dec repz and pop cld inc sahf insl and fmulp xor in inc fsubrl popa mov enter add xor push orl xor jns adc xchg xor xor inc inc jle ds aaa loop inc mov dec jl fcomi daa cmp add or ss mov pop jne outsl lods jmp (bad) mov mov jb pop mov add mov dec sub mov inc imul js lcall sbbb call test jmp out out pop pop and ret into out jle out fsubrl xchg dec push or je inc popf xchg das xor mov add xchg imul push loopne inc xor rcrb cld seta fnstsw stos insl (bad) iret cmp cmp addr16 addr16 out mov mov or mov stc fs push shll mov es lahf inc std sub sub jno jl lcall mov das pop shrl pop cltd pop std cmpsl mov push add add or mov sbb jbe rcrl jbe jno in lret and scas fsubp cli sub flds pushf insl lods das call sbb hlt scas shrb mov subl bound cld scas pop adc mov loop insb ljmp xchg mov lcall jg lods popf xor add stc lret inc mov mov daa ds movsb test dec fsub ret sub fidivl sbb xchg fmull inc std mov or xor pop stc mov sub mov sbb mov cmpsl cmpsl stos mov fmuls imul shlb (bad) xor mov push cltd xor push loopw push mov mov pop ss and lods flds push in mov cmc ja pop inc pop leave sub pop shrl adc insb icebp cmpsb pusha pushf and or int jns and enter cmp pop in sub pop pop mov outsb mov xchg adc out jecxz,pt push in sbb call jmp aam mov in outsb pop pop mov mov xor (bad) fdivrl jl jns enter repz fist lcall xchg jecxz or dec xor adc daa inc dec mov enter movsl push xchg gs xor adc popa in lea out mov call fucomi mov push push mov mov leave leave xor dec sahf push mov push jmp in or xchg repz fisttpll movl lea jge hlt shrb sbb or adc insb insl int3 fs imul in (bad) push fldt jp mov cltd mov mov sub sub jns xchg cmp xchg lds outsl out das ds dec in jmp ret xlat xchg stc ss out mov mov fs into fxch and mov fsts aas pop adc fldl outsb add nop nop aaa les mov dec push and enter aas lret mov mov and mov xchg cltd lods je pop mov xchg pop or (bad) push and mov jmp (bad) in adc arpl stc mov push mov xchg and scas add pop mov jle into hlt movsl int popa adc pop xor mov or or jns call cli je,pt nop mov ljmp cwtl aaa cs mov pop inc or insb (bad) es mov scas dec sbb pop test cmc and fcom outsb popa icebp xchg and and jg mov ljmp add jecxz sub jnp sub shrl lock lahf fs push or cs inc and mov sub lea adc push outsl cmp fldt xor or mov mov insb sbb (bad) popa (bad) lret jmp sub in ficom mov cmpsb add jb loope cltd xor mulb sub jmp call ds pop dec lods mov addr16 mov and xchg mov outsb rcrb shlb mov andl inc dec xchg aas xlat and sbb mov cmpsb in mov mov stc dec sar in dec jo popa jb push push mov daa gs add push call add xchg mov lea stc push jp xchg sbb adc sbb dec xor pusha mov ja jae inc cmp (bad) mov jbe mov fist lret and dec icebp aaa es out pop mov ja add popf movsb roll mov dec push or hlt jmp mov gs jno sub and inc addb in imul outsb mov sub lods jecxz notl loope xor or add fsubr push int cs jg mov ret aaa pop dec in popf and loopne adc mov lods hlt popf pop arpl sbb inc cmc and sbb pop imul and sub aaa pop and ret insl das out ja push out int rorl and test jmp (bad) testb cwtl cmp (bad) and mov jp test mov and js dec and push dec sti rclb enter jl aas sbb dec mov fidivl or jbe sbb call dec fcomi mov pop adc push push es cmpsl mov dec push rorl int dec inc stos outsb fnstcw mov out cmpsl daa movsb cwtl sub sbb push minps pop pop cmp inc (bad) clc jle aaa push and mov jge push and mov xchg inc cltd push fcmovnbe cld aad scas mov and jo xlat int3 idivl lock mov dec push xchg repz jp push mov cwtl jno fimul pushf loope in fwait mov data16 (bad) aas addb sub pop inc adc cmp or xorl in andb fist movsb mov outsb push and lods dec inc sub test lcall cs test adc dec or lds push mov cmpsb mov aad cmp or jmp push addr16 ret xor dec and sbb sbb mov fstps push das jb dec lcall pushf mov push repnz or xchg xlat fnstcw int3 push mov jmp (bad) add dec or sbb lods test shlb and js pop ss dec or or xor fidivr push stos popf cmp push hlt and mov xor sub xchg mov (bad) in outsb xchg (bad) xchg xchg insb hlt dec mov inc sbb jae test and (bad) sbb mov insl loop mov mov (bad) lods xor ds mov lea lods orl incl jmp sbb (bad) xor xor outsb adc gs rol sbb sbb inc orl mov xchg mov rorb cmc inc imul dec pop mov or leave addr16 mov lods je scas ja cmp out adc or inc mov pop inc in je or inc pop lret es push cli nop fwait mov popf mov xchg sub and enter pushf inc lret push xchg test sub mov sub mov or jne pushf stos test sub std icebp jo and mov xchg adcl aam aas pop in scas (bad) cmpsb cmp inc add add movsl and or loope mov (bad) mov data16 jne popa sahf inc sub movsl mov pop push lcall sub imul rcrl pop sbb sub lods (bad) cmpsl mov insb push clc in rclb stos mov mov sub xchg daa or dec xor sarl aas ss lcall adc dec gs sahf push sbb jno add jne mov push fistp mov loopne adc lods xor push ret push push in adc mov into and jns cltd fldcw test xchg movsl ficomp xor lock add inc popl and or and xlat into sub stos and jmp xchg aad lret mov jmp adc inc in mov fisub je dec (bad) outsb (bad) sbb cmp test das nop movsb mov push mov mov add in adc cltd push lret sbb data16 sbb repz push mov ds mov pop sub aad out dec aam mov (bad) sti dec ss popa xor push enter xchg jp adc pop data16 push cli aas sti mov mov fldl2e mov xlat pop xchg daa iret ret dec adc imul call dec inc es sbb xor pop mov aas jle adc mov or sbb push js inc int fisubrl sbb xor iret loopne sahf mov shr lret out mov jl sti sbb cwtl in dec mov ja adc hlt into pop mov clc daa mov mov imul in dec mov pop imul adc (bad) in xlat mov xchg jae and addr16 pop add cmp out jb sti xchg inc xchg jge test dec mov jb or sti adc test (bad) mov (bad) cltd push imul dec stc imul enter in inc addr16 adc dec scas jns jae push ret clc lods fidivrl mov adc inc imul and add sub cwtl jle insb (bad) enter das mov mov cld mov sti (bad) jp adc mov aas daa push cld dec push push (bad) out jmp ja setle out popa jmp rep cmp push mov (bad) dec roll push xchg add mov or pop dec adc mov loop int3 outsl movsb inc into (bad) cli jne xchg into jns sub dec out add adc pop sub pop lock dec int je mov xchg push xor push lahf mov xorb testb mov adc jne lahf out mov xchg inc dec popw lock adc mov sub jb test jbe imul sahf test push cltd outsb adc lret sub xorl fisttpll ljmp inc daa (bad) pop addr16 pop xchg mov and or iret movsb fidiv out cmp xchg sbb and mov rorl jb imul arpl pop or rcrl pop jmp jb lret adc std cmp push das adc (bad) stos aaa cli cmp lcall shr lret ret (bad) jo scas jbe sbb in nop mov aaa xchg sub das fs dec sbb or xchg testb jmp sub mov dec adc and pop popa inc push fwait les sbb mov mov jo mov jb xor xchg ret addl inc inc pop xor xchg push cmc xor push and mov inc pop data16 fs inc sti sahf cmpsl int3 add (bad) mov jp ljmp jp ljmp cmp jle lock das mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rclb add add or or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push and jecxz icebp adc dec (bad) loope int ja cmp cmpsb mov cmpsb dec pop ror les (bad) loope iret hlt (bad) aam std mov aas cmp cmp add or dec sub and adc sbb stc pop std mov and or (bad) dec push or movsl xor adc and xor les cli cmpsl pushf mov loopne jno push dec jmp icebp adc and lods dec pop lret pop addb xchg cmp xchg (bad) decb roll ljmp pop mov pop sbb repz adc pusha mov pop push sbb cs and imul fwait popa fdivl or out aas rcrl loop dec jnp jno (bad) mov add cli sti mov pop add (bad) aad jnp mov subl iret mov fwait loopne jo dec sbb scas stos adc jbe adc adc mov mov mov mov into and fistl xchg arpl (bad) ja test dec (bad) movl scas add loop stc (bad) fistl or jl mov es out pop sbb mov ret rcr xchg leave xchg test pop movsb ret mov (bad) push mov xor pop mov and mov ficom stc (bad) cmpsb sub sub inc jnp cmpsl xorb and or inc ja movsl shl sbb xor stos adcl dec imul imul push int inc fwait rclb xchg mov fidivl popa repz xor fiaddl xchg fsts push stc jb jmp cwtl stos cwtl mov loopne iret push in js xchg fsubrs pop or (bad) scas mov push push aaa jno and loope fwait iret push in sbb pop inc out stos test or xchg xchg jo and jno test or pop push test aaa daa or inc add inc (bad) js arpl das add into cmp outsl clc mov cmpsb inc and sub mov mov pop push imul mov aas dec clc rclb test push push ss push cmpsb into imul lret mov cmpsb stos (bad) jle insb mov cmpsb or loop mov in cmp pop ret dec push fsubrs (bad) or xor inc cld dec (bad) cmp cmp cmp jg adc xchg dec mov xlat dec (bad) sbb xchg loop mov mov or mov mov aas xor inc add (bad) cmp enter inc sahf fdivl push repz sbb mov add xchg pop pop lcall hlt pusha cld push out push push (bad) imul xchg sbb outsb sbb insb (bad) xor divl in movsb (bad) es mov mov loope add pushf xchg (bad) out fnsave and dec push add mov inc movsb cmp lcall stos mov xchg push mov sbb (bad) push mov and mov fdivl ret xorb frstor shrl fwait xchg push jae lds outsl das aad (bad) aaa mov or out xchg movsl arpl jmp mov dec orl mov fcomps mov xchg pop sub or std sub jge push sub lock cld xchg sub pushf fs adc jb mov add cmp (bad) out clc or dec std jge bound nop loopne mov adc adc cmp or int3 xchg in inc fnstcw ljmp out loop adc dec into xchg lahf sub test incb push pushf push lods xor push add negb and aam and movsl ss cli aam repnz xor ja cmpsl fnsave pop xchg je jg mov add add mul sbb (bad) dec (bad) (bad) gs (bad) dec hlt jne dec xor icebp popf gs xlat sbb (bad) call bound inc mov push pusha (bad) adc cli sbb push pmuludq cs repz sbb pop stc dec in adc push (bad) fcoms fcomps mov lods dec pop outsl rcll sbb cmc mov test mov xchg xchg xor xchg (bad) jno shl xchg subl imul rclb adc leave xchg dec sbb or xchg mov mov fwait test arpl pop adc in pusha std fbstp mov sub rclb push scas cmp dec sub shrl rorb cmp ficom sub popf mov lcall fucomip sub rcll sbb xchg outsl (bad) out xchg sarl das repz or sub aad (bad) aaa or outsl pop push push cmpsb adc test int3 adc push jge add pop enter repz pop testb call clc dec pop cmpsl nop inc in popa mov xlat xor fs mov mov adc das cmpsl lcall pop jns inc imul xlat imull xor psubsb (bad) je adc icebp je mov push pop stos mov mov sub or inc int3 fidivr lcall dec inc sbb int3 dec xor mov shll (bad) add dec mov pop hlt nop fimull enter mov mov sbb xchg stc stc insb xlat sbb shll xchg iret push jle subl cld pop jecxz push cmc mov ret shrb (bad) mov loopne fbld jge insb xor xchg mov leave (bad) das sbb mov rcll or push in push mov sub cmp loop enter cmp mov mov mov mov mov xor adc and sar incl imul sub push clc mov mov xchg cmpsb xchg aas enter push repnz fwait jne and or testl das cltd xchg loop cmpsl pop fcoms push push cmp push dec ja jbe ja push dec lcall stc mov icebp or lcall ljmp popf mov lret out and push ret imul push mov imul dec lock out cli pusha loope fcmovnbe inc lahf or xor (bad) in clc fbstp sub cmc jo out inc loop xchg or loope cmpl mov popa mov pop adcl push fnsave sti sbb inc out fld1 fildll ja insl mov sarl arpl sahf icebp and mov push sub adc jmp mov and mov or or sub pop addr16 test push jno xor dec dec nop or cli out inc lret addr16 rcll mov clc dec aaa test ljmp fisub dec je push lods mov (bad) lock cli add dec mov inc sub cmpsl jns add cmp push ret roll fsubs xor imulb int3 pop or aaa cmpsl fsubr cmp ficompl mull lock push pop jne ds add sbb push jge pushf jne jne fcomip inc and loopne scas cmp jge sub mov in shr jecxz jo inc int3 iret xchg pop in out aaa fisttpll sbb popf lods cmp push addr16 push mov cmp cmp shl je cmc movsl aaa imul sub lahf les xchg addr16 ficompl scas sub rcrb sub xchg in mov jae lcall repnz push rcrb jmp shll daa lods negl add and cmp cmpsb mov aad sbb inc lret js cltd pushf mov xchg js jecxz ret fdivrs rorl shr fsubs test insl mov or cmp mov inc fstps mov je nop push (bad) pop shr mov mov es test sbb out popa cltd pop int3 mov (bad) dec cli test mov push loop dec loope cmp jns jge out add mov fistpll popf in dec (bad) xor push xchg fsub mov jge insb lcall push loop cltd imulb ret or jg fstpt add sbb gs pop into aam mov push sub xor hlt add pop into fcmovbe fwait jmp (bad) popa xchg div cmc xchg jl imul fisttp inc mov push jmp stc ret subl mov je lock push adcl inc jecxz xchg mov aam adc mov (bad) iret jg dec jae sub push xchg xchg je shll push jge xchg adc stos mov imul jp clc aas loop mov cmp dec add insl dec xor aaa inc lret mov push pushf aam cmp jecxz sbb cmp jmp enter call jl inc (bad) jno lods inc jo out std divl ss push xchg insl cmp arpl or popf mov aam sbb sub sub sbb sbb loop divl push inc aas sbbl mov and fldt inc push push jo push inc inc loopne inc xor ja xor popf pop pop jae pop mov stos (bad) lret xchg push pop in (bad) push xor ljmp les xor cmp loopne imul jg (bad) adc enter cs (bad) add into xchg scas adc rorl adc mov sbb loopne rcrl sbb les push ror sti test scas mov icebp ljmp shrb dec cs adc jbe aam jne fwait enter mov scas pop (bad) lea jp lods xor and pusha ds cmp imul jge out pop fmul outsb cmp fdivr scas testl jge (bad) dec xchg hlt mov dec lock xor cli (bad) mov lahf mov xor in jae popf jae jg lods int cmp jp push mov add popf out push pop mov or out adc fs pop ja mov into imul push dec or call stc cmp lods (bad) in or xor insl push xchg fstpl cmc loopne aam push push divb pop rorl add jle clc aaa cmp cmp (bad) mov pop cmpsb dec xor daa dec popa jne xor or aad xor push cwtl xchg or pop pop dec jae dec test mov jmp repnz jbe cmp bound or dec xchg pop push push (bad) mov cmp test and jo dec jmp mov mov (bad) xchg frstor cwtl xor clc movsl xchg idivb (bad) paddusw push je sbb add daa mov inc fstpt and adc and outsb out lahf pop inc mov ja outsl dec stos or (bad) cmp push lea sbb in jg jnp dec xchg fcom dec cmp cmpl push cmp sbb xchg mov mov loopne mov push int3 (bad) lret test mov aas xor and outsl out pop scas out (bad) mov test ret cmp repz xor mov dec cmc stc adc scas ds adc and pop mov pop mov and cs imull daa int3 call sub sbb js sti add adc sbb negl loopne jbe iret ss fs fs mov mov je mov and add xchg xchg jns imul fstps jnp (bad) clc jmp imul out sahf add cmc cwtl dec and mov mov mov pop popa (bad) fisttpl hlt insb pop fdivl mov or daa mov mov cwtl and enter push mov nop adc aam xchg push pop xchg popf push (bad) in enter enter jb sub xor out add sbb jge adc pop ds pop js push jo scas imul lret call test xor mov clc cwtl ljmp in pop andl rorl inc pushf fmul cmp mov and arpl hlt or outsl xchg inc ret test call mov mov (bad) xlat mov jge pop jbe mov pmaxub test insl mov jo pop pushf inc sbb xchg enter sbb mov daa aam push mov cwtl cmp fimul outsb xor dec loop popf scas (bad) loope xlat or insl add scas loopne rcrb mov imul subl fsubl (bad) push mov je jge,pn stos loop jbe lahf mov icebp pushf inc aam xchg jp adc lahf lds iret xlat sahf push aaa cmp pop shrl scas mov xor stc sbb mov xor ljmp cmp mov popa mov mov lret sub dec mov (bad) idivb jmp push das icebp ficom test add pushf sbb mov sub pusha test movsl repnz shrb adc sub push arpl sti dec push mov rol mov iret ficom insb push aam bound xor inc xchg pop imul dec lret or jle int3 jbe push push daa shlb (bad) jae stc xlat inc (bad) (bad) push jno cs (bad) and dec adc xor ret out or repnz add pop or mov dec cmp inc xchg shl and pop xor aaa mov xchg pop std xchg cmpsb jg clc push inc pop cmp jg xorl inc pushf popa rcl mov adc mov cs adc int3 mov xchg push aad lret xor ret mov mov addr16 pop mov das gs push out call cltd test xchg mov (bad) xchg jge mov inc hlt jecxz xchg jmp pop push fsubr xor xchg xor mov repnz jb out pop sbb bound jbe dec mov enter sub sbb cltd or leave cld sub gs sbb imul mov pop test arpl adc xlat lcall in andps or outsb (bad) in fwait push push sub movsb fdivs sub stos inc jo cmp nop fisubl jp in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz push fwait sbb jae andl dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push inc sbb (bad) repnz ds insl fldt aad dec fmul mov sub scas gs push into ret (bad) mov adc pop sldt (bad) lret sbb jne in (bad) adc jecxz xchg ja clc aam and ljmp lahf fs lret inc push cltd push loope cmc adc cmpsl mov int inc sbb mov lahf xor pop push mov jg pop or sbb (bad) jmp insb jo es insb sub xor pop jle aad lds cld xor (bad) mov enter push mov sub out int3 push rorb cmp adc jb mov movsb dec faddl es xor ficom xor add mov popf jno sbb mov mov adc mov and mov add cwtl out mov sbb dec mov xchg ret (bad) jp iret int3 xchg lret (bad) mov jg cmpl mov sarl (bad) pop push jl jae cwtl out mov movsl jp cld jl and (bad) popf rcll addr16 or or xchg mov inc add jne test mov cmp shrb out int jl pop andb xchg icebp pusha lds fsubs hlt push (bad) lods jb push jp mov iret test mov add mov aaa les sti loope stos popf mov sub int mov cmp push lock ror dec jle insb or in popl lock in decl jle test xchg in clc push scas loopne adc mov sbb mov mov iret arpl and push dec out mov dec mov jge shrl cmp jns addr16 adc cli rcll scas aaa push xchg cmp lcall mov ja (bad) mov aad xor cmpsb (bad) xor dec xchg mov ficomp imul cmpsb nop lods jmp inc jmp pop in pop loop fildl addr16 xchg inc adc jae ss jge out dec cmp movsl sahf add mov in imul push xchg pop dec or test jns jnp sbb das cmp out mov sbb mov icebp (bad) jle dec cmp loope dec ljmp insl cmpsb push cs pop push jecxz mov bound or dec movsb jp sub data16 jg mov adc les pop mov pop (bad) ret sub add test mov jo and (bad) mov push add pop adc add stos or pop repnz and adc fsts push add push sbb xlat mov xchg and shlb inc mov inc lea jge loop je or add pop inc cmpsl pop cmp loope push mov (bad) fmull es or mov fs pop jg adc pop inc sbb enter sub sbb popa jnp xor insb orl inc xchg xor ret int (bad) sub lods (bad) in and xchg adc adc ficom pop xchg jbe adc or es hlt jae pop mov clc lret loop int3 stos mov movsb dec fldl inc out push iret sub std sti outsb inc jne inc outsl enter lock xor and push pop or jg mov inc lea mov pop inc push or cltd (bad) je jae push mov xlat sbb xchg cltd and (bad) jl push inc jno jmp cltd sbb xlat arpl int out lret jne sbb sub imul std stos inc loope rcrl movsl pop enter (bad) jecxz mov sub push pop mov sub addr16 fs fdivrs add test lds push and lea jl shl xchg jmp pop mov mov (bad) jns jne and xchg cwtl mov not xor je dec scas cmp ds sbb ds adc sub test adc cmpsl sub xchg inc pop lret (bad) outsl out push ss ja cmp mov lods mov pop pop dec js sti push xor repz sub arpl insl lcall push div cld movsb in mov push sti fidivr mov out add repnz test dec cmc mov (bad) repnz jg add ss lcall movsl test jge (bad) pcmpeqw mov arpl mov outsl out int cltd mov fstps sbb mov jg popa lods sbb in (bad) mov (bad) repz inc xchg out pushf lods repz jbe aas sti call or sbb and jnp das mov and sub jnp,pn xchg add movsl xchg jbe add add cmp dec jecxz push addr16 and rolb pop push lock sub into xor es (bad) pop pop ret sub dec inc out cmpsb dec lock pop cmp mov inc cltd cmp inc andl sub flds inc xor mov cmp fsubl insb repnz pop sbb or inc popa dec push int3 sub xor aaa push in roll lcall fs lds lds xchg repz cmp out sbb sbb jns jo (bad) je shrl mov adc jne adc repnz jae test inc xchg pop test pop pop push nop push lods xor push cmp xchg pusha pop int (bad) enter out and mov aas cmp enter lahf int3 pushf ror xchg jmp sub mov (bad) push js loope test mov mov fdivrl xchg xchg xchg mov out out or xchg fwait dec jp push sub insb sbb mov iret lret jl adcl mov push fdivr test xchg sbb imul std push mov aas outsl aaa sub imul ss pop mov inc mov aas out andl notl xchg ja xchg (bad) stos mov out sbb lods xchg sub inc dec rcrb jp pop shrb xor int3 inc ja (bad) in mov mov add fiaddl test (bad) xchg aas sti pop cmp or lahf (bad) gs inc int outsb lods flds inc sahf jns mov add test pop movsl adc sbbb repz sbb loope inc inc fnop cmpsl outsl scas (bad) cmp sbb adc push mov lahf xchg int fadds outsl mov xlat ja or adc cld aad or sbb pop out xor mov dec or stos jnp mov loope xchg lea dec or fldenv aas cmp lods fidivr ss mov push add hlt aam outsb into scas mov daa add scas xchg jbe int mov inc (bad) push imul mov lahf sbb aaa xbegin sub test push xor sbb xlat inc sti sbb adc inc or mov roll jmp cmp xor sbb mov mov dec inc xlat mov xchg cmp lods or data16 insb push sub push js or push sub insl enter loop sbb jnp add ja xlat xlat lock xor stos sbb and rorl or and icebp lods mov jp notb imul mov (bad) add ja int enter cwtl aas add fnstsw cmc jecxz and add fxch xor hlt stos aaa or jo jmp (bad) add pusha icebp cltd lahf jo aas jg in inc xor sti fild mov aas dec or jl xlat cmp ds (bad) es and movsl mov adc lock je fwait pop hlt mov jp jmp cmpsl mov sub push aaa das sub sbb push sbb or dec rcll xchg sbb aam les and (bad) push test mov (bad) pop andl inc test nop push movsb xchg xor pop xchg mov lods inc loope cmp insl test sbb in daa scas pop int xlat mov imul and xchg insb xor inc notb add cltd ljmp loopne adc and out repz cmp and mov dec scas mov (bad) jo aad sub int push or (bad) popf adc pusha fnop xchg pushf enter sbb mov fimul iret and sbb adc push cmp mov cli cli lcall stc arpl cmp jecxz iret testl push jbe aaa mov pop mov mov mov sbb lret cmp in aaa call fdivrl xor inc je insl cmp mov movsl sti push mov inc inc std call mov push add je push xor outsb popa sub jo in xchg adc std adc mov xchg (bad) jnp xchg jmp or or lods inc mov push pop js (bad) mov add sbb mov mov add sbb mov ja ja or lods xor cmpsb mov hlt pop mov mov fsubrl jb popf popf ss jnp and inc pop adc push bound jp in cmpsl in paddusw or aam je cmovnp lret les aam movsb mov xor xlat dec js xor push loop pop xchg (bad) popl or and (bad) imul or jecxz cmp int3 mov and lea mov add in push and or leave dec mov rcr or into or gs int3 mov stos mov data16 ljmp jbe movsl icebp mov cltd mov loop mov mov cmp inc movsl fs jle lock sbb daa inc lods push add mov mov adc lahf push pop mov xor cmpl js arpl ja mov sub push add daa orl lds movl jp mov jnp dec enter mov sub xchg ret pop rorb enter cmpsl mov mov fcompl push and aaa xchg (bad) pop push xor push jl sti (bad) mov cmp lcall inc fdivl (bad) into pop jno dec cs fidivl pop inc pop inc cmc shrl mov adc cltd out adcb clc dec jl outsb ret sub jmp test dec xchg ret insb lret push es lds ss (bad) daa jae xchg (bad) daa (bad) mov ljmp andl ljmp jp push lret clc scas stc inc mov pop imul (bad) or dec aam shl or jbe data16 adc inc lods xor addl test xchg add dec popf mov mov and ret xor fcmovb mov mov cmp adc into or push or (bad) popf add and fdivs mov push xchg xchg mov jne mov popa mov sti mov out inc jl jle into sbb or mov lcall sbb inc inc std jae or mov imul (bad) fldl rolb mov repnz lock inc sub scas into sub lret sahf pop add lret outsb (bad) stos sti mov or stos cwtl xor sbb fmull dec sti addr16 jmp pop pop jbe sub jl imul imull add xor xchg nop jne sub inc xor jb movsl das jns dec pop (bad) jnp outsb test and rclb mov mov mov (bad) mov popa sbb push (bad) adc and sub mov and rorl xchg addr16 mov cmp xor cs jp pop addr16 mov jp xor in hlt adc and push jp sbb scas stos jg (bad) cld jb inc cmp lret cs cmp pop movsb or dec inc pop and dec mov stc popf loope sbb cli or mov push mov and pop pop cltd pusha mov cmp cltd lds out mov dec or mov xor sbb sbb xchg mov fwait lret xchg dec mov push mov imul orl xor mov xlat int decb pop and ret lcall (bad) fist inc rclw lea imul add add repz lock int3 mov outsl sub mov jbe cmp stc mov xchg push mov and pop and enter movsl jl xor test sbb fwait dec (bad) cs cmc or jnp adc fucomip popa mov pusha aaa sbb pop (bad) xchg sbb ret inc loope dec push scas add push mov xlat mov (bad) ja inc mov xchg lahf int3 (bad) sub mov rorl xchg cmpsl insb adc mov decl scas je bound out rorl fbstp cli ret mov add lods mov (bad) sub shrl outsl dec push out sub test xlat mov jno push aaa add ret sub es pop xlat out lahf or jp call pop push outsl fadd repnz mov jbe xchg push out push adc rcl outsl mov cmp mov sub lods (bad) jmp xchg pop fldenv or or mov aad push jno mov mov jp xor in jge ss sbb ljmp (bad) mov adc lods pop mov (bad) dec stc xor int add fwait mov or or stos mov cmp iret iret push xor es bound mov pushl lret or lock aam sarl dec subl leave mov mov add cltd (bad) test or ss mov adc in push fsubrs loopne jg das inc sbbl sbb fnstenv mov outsl mov inc into sub push adc imul cmpsb arpl out ret test inc cmpsb (bad) mov mov mov xor push in xor mov vorps sub inc stc add imul repz fwait aaa outsl fidivr aaa outsl fidivr clc (bad) test adc push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add lret adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas faddl add loopne out popa mov mov xor popf ror jo daa pushw je sbb repnz jmp ret sti jnp scas icebp jp movb les jg mov xchg leave fwait inc dec inc mov mov inc sub mov fcomps in sub (bad) stos mov adc lret add cmp inc scas pop inc mov xchg jecxz repnz push aaa mov loop adc pop cmp loope push pop es test push aas inc in push (bad) stc stos rorb add jae popf negb jl dec jae lods cli dec xor stos cld xchg popf stos test mov cmp mov xor dec fcoms sbb out sub mov adc ret lret cmc pop pusha adc mov add add xchg inc dec shll mov or mov bound fildll ret cmp popa pop xchg fucom in hlt test outsl jg test xor out mov gs flds lahf mov mov xchg jmp mov xor adc movsl cmpsl pop mov lods lea push jb push pushl xchg inc mov ss push xorl mov iret movsb arpl popf sahf mov mov xlat xchg cld arpl fdivrs adc (bad) (bad) sbb add mov add or mov test mov mov shl or repnz call jmp dec in mov sub rorl iret pop lock push mov stc arpl xchg mov (bad) sbb ds es pop mov cmc mov mov xchg cmp repnz jp les aaa cld and jae push and jb lods jmp xor rcrl je or lods push sbb addr16 rcrl faddl dec sbb fstpt loopne ja mov xor jl pop xor pop sub adc ds push outsl (bad) jp test imul fdivl push push push (bad) mov or fwait lret dec pop jno scas xchg lds dec pusha lcall add std rcrb push (bad) mov outsb fs scas scas jnp mov mov adc adc stc out mov xor test xchg sub aad xchg leave int3 jb or and ja jne into mov int xor into mov jmp and xor adc stos pop jne and arpl push mov push pop cmpsl das mov std mov xchg hlt call or ret jne xchg sub push divb sub add dec imul shll xchg jmp jnp nop dec (bad) insl in xor in add cmp das xchg fwait or jl sub mov fcmovnbe mov adc leave loop inc fsubl fisubl (bad) sub aam loope push add sbb sbb mov or sbb jge out in out sub into inc icebp lock jecxz jns ss sub out jg cmp icebp mov cmpsl mov fcoms fmul jmp mov jno lret cwtl or mov adc xchg out xchg js add add adc cmovae insl mov cmc (bad) cmpsb icebp mov call pop jns mov fisttpl pop mov aas inc shl mov mov ret or lea adc (bad) fistpll nop sub jg dec push test xchg jns daa (bad) sbb insl inc xor xor (bad) dec jp jb faddl inc call dec mov sti push inc mov or fistp scas fnstcw outsb mov push (bad) and stos pop pusha xor movzwl into out dec mov lods in push fwait (bad) adc mov lcall cmp xchg ds fnclex or mov testb sti push loop and cltd loop push adc out out add imul test mov rcl jbe,pn mov mov cmpsb psubq out or cmpsl pop sub push xlat test mov std pop adc imulb fistpll mov fldt cmp ja (bad) test in into (bad) enter ret or outsl fstpt jp idivb hlt rclb sub or sbb xchg mov stos ficomp pusha arpl sti cmp aad out sub cli lods mov mov leave dec out lods sub mov fdivrs (bad) loope imull jns push mov xchg (bad) imul fisub xchg icebp ja cli in mov xor fwait cld shrl mov sbb jmp mov sub lods out icebp out sub or xchg sub fwait loopne es jmp into pop iret ret push loope in scas dec cwtl add (bad) fmuls aam rorl cmp (bad) loop loop es out outsb cmc dec pushf adc (bad) sti divb lods jae lcall insb or push mov sub pop jne insl into fist icebp cmp pushf pop stc mov fidivr xor pop hlt jecxz xor push cmp jg add xor (bad) sarb xor add movswl loopne out mov lcall mov mov lods pop stos cld loopne mov jecxz push lock repz inc push popa lods cltd add iret add das or mov jle xchg pop fmuls pop (bad) scas mov aad loop push jbe call cld call dec pop fdivrl lods push imul sub ja test (bad) mov popa lods inc arpl sysret daa dec fcmovu ret inc xor popf stos movsb cld mov sub into hlt adc enter (bad) jo ja pop push dec mov jl fs loopne mov sub add pop fs or popa iret pop cwtl bound sarb fsub in add mov xchg fstps std and lds lods and out fstpt jb lock mov fwait out hlt sbb inc in addl xchg or pop mov xchg iret add adc cmovnp xlat inc sub mov push pushf xchg aam and cmc inc sbb int3 out mov xchg xchg lahf mov lock test imul mov pop mov pop lods pop fadds jns cmpsb sbb sub call ja (bad) push mov fwait test inc sbb xchg lods fbstp mov or fs aad fild mov add push xor (bad) adc aam jl nop pushf popa mov (bad) lahf ja jp call adc push scas xchg pop lcall dec inc cltd shrl inc cmp inc sbb pushf mov enter dec mov mov adc jg or push or cli subl xor xor clc pop testb loopne xlat or dec jb mov lret cmp mov das arpl fcoml cmp inc (bad) pop mov (bad) cmp (bad) xchg inc cmp (bad) out pushf inc imul icebp mov cmpsb sub std sbb push nop cld je decb mov (bad) lcall shl xchg mov sbb or loop xor in cmp sbb enter xchg movsl cmp pop inc outsl mov addb push xchg push push dec jge scas push addr16 jg imul cmp pushf or xor out in in loope inc xchg inc fs mov pop mov lret jo mov repz cltd ja push (bad) in xor cmp push hlt imul fmulp jg outsb subl xor dec inc jg xlat pop or fdiv cltd inc fwait sub les cmp dec pop jp xor jg and mov cmp (bad) out jne mov ja ja pusha sub add pop cs ljmp sbb sub dec leave stc stos imul sub mov jg xor and in je lcall cmp jp loop or imul mov xor sub mov mov jns ss mov xchg adc lock cs icebp dec xlat or lret xor and iret (bad) ljmp xor mov pop test fs iret loope int3 mov xchg xor xchg and imul push data16 (bad) mov xor (bad) dec sub sub xor repnz xor test sahf push mov mov repz notb mov pop imul xchg stc push push dec enter xor sahf sub gs cmp cltd mov or inc adc add outsb mov fs cmpsl xchg subb push jmp aam add in pop test and or or inc out insb inc xchg repnz (bad) add (bad) (bad) or xchg add dec ss cmp fsubrl mov adc inc popf adc inc xor push sarl das sbbl mov push js cmc (bad) fildl and add lods dec and push pop scas mov mov je mov stos icebp cwtl sub pop es jl adc lret push sub dec sbb mov sbb xchg dec adc pop mov gs xchg fincstp leave jno inc rcrb cmc adc xor or repz mov mov sbb cmp jbe repz pop fimull jle (bad) dec push lcall aad (bad) or movsb pop mov shlb test popf stos pavgb aaa popf xchg (bad) xor cmpsb push and dec mov mov incl mov and inc lret jmp sbb push mov clc test dec or adc cltd adc pop mov leave imul call bound cwtl xchg adc add popf mov pop add push mov jbe out add fwait sub aam iret pop sbb push mov fstpt sub and and shl imul mov xchg pop insb int test inc out inc test cmpsb cld sbb and dec pop and and int repnz push xchg jmp pop hlt repnz push cmp adc (bad) jbe stc clc push push cs dec out mov xchg mov mov and rorl push mov ficom xchg sahf insb or cmpsb in mov mov jle mov lea push pop and mov mov jmp mov ja jns (bad) popa mov jne aaa cmp cmp test bound lcall mov int fwait lret cmp or mov adc inc int3 loope mov add repnz dec xchg movsb dec movsl mov mov loopne pop and out push aaa and mov lock aas cwtl movsl icebp mov sub in nop je je out (bad) pop xchg (bad) fistpll fiadd out les hlt mov popa pop jl cmp jp add jns sub xchg dec int imul int3 iret rcll imul lods iret fs jne call and loope inc sbb push cld addb cmpb out sbb jb (bad) xchg jp mov xchg and add push into out jg loop pop and mov or cmp decb xor mov cli leave push xor push inc push mov cmc mov test insl sbb pusha loop pop and xorb je jecxz xchg (bad) fwait lds dec hlt (bad) aaa push lret js fwait xor jb add mov and loop test pop cltd scas lds xor xchg sbb jns arpl jno cmpsl data16 lret jne insl outsl (bad) push andb daa xchg add icebp ss cwtl xchg jne lcall ret xchg outsb in sbb cvtps2pd sbb jno and adc jb ds andl jmp sti add cmpsl mov insl sub das pusha inc in mov in or adc in push jno adc adc mov adc push pop outsb nop (bad) repz and (bad) mov mov mov mov add cmp imul mov pop out (bad) pop cltd lods ret loope daa stos mov cmp dec xor hlt sahf outsl mov out cmpsb cmp jb imul xchg mov into and xor mov xchg es mov mov pop adc mov jbe aam fucomi (bad) and add imul cmpsl lret rcrl jecxz (bad) std and adc push sbb push pop adc (bad) cmp inc jecxz in pop adc mov aad adc idiv inc sub (bad) out mov cmp mov ljmp xchg cmp add outsb xchg (bad) ffreep lret sub mov cmp (bad) pushf (bad) std ja cmp cmp popf popa adc fsubrl lahf rorl aas ljmp (bad) aam ret mov and rcl ss mov ja dec pop lcall push xor repz icebp lahf xchg or mov push cmp pushf sbb bound xor insb mov in cmp aam or cmp jae insb push jno stos clc fisubr mov fmull popa mov (bad) push jmp push (bad) pop es cld ds imul out (bad) daa (bad) sti or xchg (bad) mov int3 mov lods mov stos addr16 push mov jecxz xchg fbld mov xchg mov jecxz xchg lea outsl jle mov ret pop dec and dec std xor adc push sub das pop mov decb xchg push mov in cmp inc cltd mov cmpsb (bad) push int iret xchg pop ja jge rcrb xor stc leave mov repz sti mov mov imul (bad) repnz mulb (bad) inc sub mov mov xor (bad) fstpt xchg mov fisub (bad) in pushw xor sbb jne inc jle repnz cmp adc fsubrl (bad) ljmp push jo test in mov popa dec imul pop in mov cmp sub in idivl repnz mov into and mov into stos ds adc ljmp mov sbb xlat or imul (bad) in arpl lock out jg hlt in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz pop add pop xchg jae add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add int3 adc add mov inc or add or add add add add or add add stc xchg add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc inc inc push push aas fmull rolb fbstp mov (bad) bound xor mov xor aam (bad) sbb cmpsl dec ja cmp insl bound out sbb (bad) repz jg pop jb push sub (bad) insl pusha mov out cli mov fidiv sbb add les cmp inc call gs inc pop imul adc push imul adc jo or dec xchg dec movsl jo xor mov jne jg lds jecxz jp imul mov inc sbbl (bad) sbb mov mov push push xchg xchg dec (bad) cltd push mov xlat daa jp sbb dec mov sub pop inc xchg cmpsl sub mov scas mov lods negl sub in xchg fs out fmuls imul mov add pop xchg into pop cmp xchg cmp lock lea cld rclb and xchg scas aaa cli pop push fistpl loopne lods adc jns,pt test xor int3 xlat jb adc outsl loop hlt (bad) stc aam sbb lods sub les xchg les mov mov adc (bad) in test xor cmp loopne lret mull ljmp scas xlat push cmpsb out mov mov cmpsb dec dec adc jmp inc add nop bound cmpsb mov dec sbb (bad) fist jns rorl rorl ffreep push sub stos ret xlat jle rcr mov les xchg adc iret repz popa xchg negl mov into push shl dec sub nop jl out stos divb jbe adc or lods push in call fwait stc hlt cmc mov pop push cld dec jmp xchg lea pop scas adc sbb rclb clc and and add enter cld (bad) xor sarl and pop popf stos jecxz add je pop sbb mov push aad sar test sbb fidiv loope pop xor (bad) int cmp (bad) in ja pop dec or mov jmp imul mov incb xor fnsetpm(287 xor mov (bad) mov insl push dec es jge test out adc and pop insb aam cmp outsl push sub setge out icebp or jae cltd repnz gs pop in dec rorb js and jmp stc cmp and push dec xchg inc iretw cltd and or aam sub push sahf mov lods or jne mov aas (bad) jno xor jae insl shr push or or jmp aam je std push mov push inc jge jae mov and dec adc jmp inc fisubrl sbb jl mov test scas xor (bad) jmp popa fwait das mov jecxz,pn sub jle test dec jb sbb movb adc icebp xor in leave fnop cmp (bad) xor repnz pop jl sbb lods xchg add int sbb int3 xchg ss cld pop xor fistpll je loop mov or dec andb andl xchg pop dec pop xchg scas inc sti jmp mov push loop data16 aam std les mov sub test les add iret xchg int3 loopne je (bad) jl xchg mov pushf loope js inc aas mov enter cmp jge cmovno (bad) and (bad) repz mov ss vpunpckhqdq sub leave ja clc xchg out pop mov lcall (bad) stos xor out add nop pop lods mov push in add or (bad) jno pop stos pop dec int3 shll xor and lret (bad) sbb out scas add pushf dec out jmp cltd push mov mov popa inc jae pop ret fisubl prefetcht0 lea out lock jle (bad) sbb in icebp xor scas bound lock adc es cmpsl mov cltd stos mov shl dec push test dec insl movsb repnz mov push stos push aam xchg cmp test cwtl xchg lcall stc sub dec lahf xor push jecxz xchg mov xchg enter sahf mov cmc je faddl jae xchg aam or add add xor fdivs mov add mov jo aad xor pop stos push lods nop repnz lcall mov dec (bad) arpl fsts pop xor (bad) and mov mov xor dec cmp mov cmp cmc push jp adc mov in fwait rorl int3 adc push (bad) mov xor scas (bad) (bad) xchg push icebp or pop pop push xchg lods ss ja pop clc dec movsl bound enter push mov (bad) cmc ret push pop repnz jle and adc ja xchg outsl and jle and popa in aad fisub movsl xlat add (bad) xor xchg push ficom mov jg mov movsl bnd imul add mov push cmc adc add mov test add xchg push lret push pusha pop fs xor jns push bound popf leave push pop leave xchg (bad) mov xorl pop jne adc push jb gs mov and (bad) inc xlat loopne dec push inc rol ficom mov pusha and icebp xor fadd sti xor mov imul inc sub popa pop jl push and xor pop jno scas xor mov scas lock imul dec add mov inc (bad) scas cmp jle dec xchg mov inc push lret push push mov jmp shrb scas test (bad) fwait sub push lds add fndisi(8087 hlt test or mov xor adc pushf xor insb pop adc inc sbb stc notl test push xchg fs fisubl sub jmp lock cld dec pop fst xchg in rcl pop and rolb xor (bad) das andb and orl (bad) sub mov push lea mov push and fcomps or lods xchg jl call test iret call push sbb and int3 arpl jg pop movsl sbb movsb and (bad) xor xchg cwtl or into dec dec mov paddb and (bad) sub adc xchg fs sti sub lcall and pop outsb push insb cmp cmc movsb jo test movb push cmc aad sub fisttp sub lods mov lret mov mov in std xchg fisubr stc mov push popl push (bad) dec loope dec fmuls xchg leave mov mov lods xor push jnp outsl ret fistpll mov pop mov xor stos add ljmp subl ficom or clc (bad) popa cli repnz sub or hlt sub push pop cmp push xchg jae icebp lcall cmp push icebp rolb ss out cmp push sbb cli nop push xor insl add cmp ret cmp scas push mov mov push cmp adc ret jmp hlt pop lret std mov mov mov lods cwtl xchg mov mov (bad) mov sub pusha lods xor and out adc lock xchg sbb loopne hlt shlb cwtl mov mov in push aad ja ret imulb imul (bad) int3 ljmp test xor cld sti (bad) je mov call xor lret nop cltd dec insl aaa jae jmp xchg mov insl mov into cmp push cmpsb insb in hlt pop and scas (bad) fildl icebp mov or xchg jnp adc pop xchg jnp imul and jnp and mov icebp pop scas insl movsb add pop push es iret mov (bad) hlt add jo mov (bad) cld inc sub (bad) xor pop push push xchg out jmp jne stos mov pop xor shrl rcl and xchg adc test sub jbe mov xlat xchg nop pop mov pop mov dec xor enter mov mov sbb push and mov stc lods clc mov test xchg mov mov les rclb lret test mov pop (bad) sahf inc sbb lret cmp lret mov adc es pop and popf ds test popa dec push jmp sbb sub ja sub enter mov jae test mov popf fcomi stc cmpsb pusha push and addb sub pushf stos daa xchg pop in sub inc cmpsl mov and xor xchg and pop adc mov fmull (bad) pushf mov jle repnz sub pop ja sbb mov xchg mov clc pushf xorb mov repnz push les sub push popa outsl pop mov fwait cmpsb add (bad) into and fisttpll movsl cwtl mov je popa mov cld scas incb mov shll mov pop stc pop (bad) fldt ret in daa into shrb mov cmpsb enter pop pop push lret adc sub xchg xchg add cli jnp mov sub xchg or shll xchg xchg sbb orl xor push enter sarl add cltd into fcmovu pop stc lods rcrb es or das xlat dec int3 out call insl rorb lahf icebp mov cmp lcall jmp cli popa gs pop inc in jbe jno jmp mov xchg mov add pop inc out xchg mov fnop aaa lret mov mov subl mov (bad) js pop dec rcrl andl jecxz in sahf cmp sub xchg inc mov sub push insl stos jno sti sub dec clc in rcrl shrb adc in push mov jnp mov xorb cmpsl ljmp outsb mov mov xor dec sbb pop xchg inc xchg repnz dec sub lret ret lock pop lcall inc fisub mov ja mov sbb jmp shl jae (bad) jno es push inc inc cld mov lahf cltd xor adc lock xor cmp pop ss lods repnz ret (bad) ss repz lods flds cmp fwait dec mov std sahf call nop nop sahf (bad) and (bad) mov adc and cmpsl popa into push cs and (bad) xor outsl rolb lock sub cmpsb pop test clc or std inc mov div (bad) (bad) cmc jge inc xlat nop xor imull dec stos sub int xor nop in jo outsb add dec movsl xor lods push ss dec sub and aad test cmp xor sti add aas in dec jp lret loop pop insl xor ja mov inc push mov cmp int3 outsb and sub int3 mov test pop jo sub enter push sub rcrl push jns inc out pop outsb arpl mov in stos xlat and jae stc ljmp dec (bad) xor lods mov lods cld mov sti xchg add ja push jbe xor es or repz dec pop int mov cli aaa xchg add jb push dec inc movsl (bad) adc jo or ja push xchg insb outsb jge ficoml mov sahf shrl jl repnz dec push push gs rol nop je sub pop cmc (bad) or fcmovnb faddl or clc or dec push and push aad or popf jbe push pop push xor inc push (bad) inc (bad) (bad) (bad) xor inc fisttpl xor sbb (bad) xchg scas (bad) fldcw and pop test sub mov dec cmp jns sbb adc mov (bad) rorb sbb sahf cld mov ds leave jmp adc cmp push pop cmp mov pusha leave mov loop adc mov lret std cmpsb push inc push imulb or sbb sub insl mov add push push pop push adc (bad) fisttpl lahf ficom scas mov daa sub and or xor inc arpl popf push jl in imul xor mov ret sbbl xor pop int3 mov sbb add dec outsl and mov cmc cmp mov fidivl inc mov dec mov push aas jbe jns mov cld lea sbb imul mov cltd sbb push pushf aam mov (bad) cld mov jg dec mov xchg andl das hlt fstpt jns mov mov lock cmp mov or call pop pop aas add adc imul cmp rclb imul gs idiv notl in mov push sti xlat mul jmp sbb cmc movsb pop push imul pop fs sbb bound mov mov sub aad adc inc hlt mov sub mov bswap jg out mov dec sbb fsubs push add or aaa and mov (bad) lods pop pop add mov jne sub jmp test scas adc mov mov xor lahf xor or insl adc inc (bad) adc mulb (bad) icebp xchg adc inc cmp inc and aas scas aam push mov arpl sub xor shll lea hlt jns add dec mov hlt cmp imul std bound pop jbe xchg add xor xor cmpl cmp imul call dec popa lcall dec jle je gs nop sbb inc inc ss mov jbe mov popa pop sbb pop loopne outsl mov cmp cmpsl movsb sbb dec sbb scas push cmp or gs in or nop xchg js mov lahf or dec xchg pop add movsl out cmp dec sub jmp (bad) pop push jmp sti pop cmc int3 mov lea inc sbb sarl push mov (bad) xor and fldt pop sbb movsb bound adc shr (bad) push in xchg popa leave jne and into loope cmpl xchg fs loopne repnz or mov enter repz stc mov shll jp call push cmp add psrld sub add add dec inc scas inc pusha (bad) or sbb add add add add xchg lods xchg lods xchg lods xor or add sub and ss mov faddl mov shrl jno imul cmp imul or dec jl jl jl pop (bad) pop sbb jns insb dec and dec and push xor adc add add pop xor push add add xor inc (bad) mov and xor test cmp or pop xchg pop pop fistl push xchg xchg popf mov or outsl idivb shld adc jle into outsl add (bad) dec test dec mov ds in mov pushf jle rcll adc inc cwtl imul lcall pop and push je sbb rcr in scas inc and daa dec push pop mov mov jmp xor repnz push (bad) sub inc fldt ficompl or push and pop pushl add pop out push subl fbld xor jg popa divb daa test lds (bad) adc bound das sti xor ror mov inc adc fstps stos shl and andb mov add int xchg jnp push jecxz subb lods adc cltd sub push (bad) jbe dec xor aas jb sbb stc sti popa or inc in ljmp insl jg daa jecxz arpl mov push jmp jmp xchg sub (bad) ljmp lods xchg pop je (bad) (bad) lock ficom test add aas cmp and and sub xor aaa push ret out fisttp pop dec icebp movsb cmpsl lcall adc mov dec dec (bad) mov dec popf stos cmp mov aam lret xorl cmp imul cli out shlb cltd push cmp xor and pushf sbb xor (bad) mov lcall mov mov sbb movsl movsb push les jae ja,pn sub pop jno dec fwait push cmp xchg push mov mov push in nop je dec sub adc adc xlat aas dec aaa jg cmp xchg sti mov mov mov insl dec jg mov jg loope leave xor int pop jle mov xor push inc inc ret sub icebp mov test xchg jmp xchg mov je stos clc scas idivl ret nop add cwtl push push cmp aad fistl (bad) dec aas cmpsl sub push mov pusha lock mov mov and outsb popf in and adc mov mov (bad) je xchg shrb push faddl pop shlb lods pop push pop adc jmp inc jnp jb leave ror cmp stc or mov fldl mov mov mov int3 (bad) rol push es in in xlat dec cmpsl mov and and mov (bad) fstpl repz aaa mov push jnp inc int3 mov fimull stos cmpsb repz jns loope hlt (bad) mov mov shrl inc pop sbb loopne push test out xchg (bad) inc jmp addr16 cmpsl sub xor bound les mov dec pop and mov movsl or push icebp mov mov clc sbb cld jbe jnp scas sub imul adc cmpsb cwtl pop mov mov sbb bnd pop ficomp push fs fdivl mov cwtl push push push mov or jno pop loope or stos fcomi add js mov push mov pop mov mov sbb icebp xchg scas push enter jns sar movsb test fucompp mul (bad) ret daa push inc mov sub jnp insl cmpl addl inc xor push xchg ret jbe movsb js fwait test cmpsl mov push (bad) jp jb xor daa ret cmp mov sbb xchg xor mov sub xor xchg pushf popf lcall jle in scas xchg inc dec dec (bad) call mov push inc jne and mov or sbb jl add sbb inc fwait ret mov xlat leave lock aam ds shr push sbb xchg mov das je enter movsl cmpsb cmpsl clc jecxz loopne mov mov lret sub lea addl adc adc sub sub cmp movb push ljmp invd sbb jb dec xlat inc inc xchg or cmp cmp inc mov lock jne divl mov jge das jecxz int3 cs add push push or sub push ja je dec icebp fcomp dec adc and ja mov and fmul outsl cmpsb bound jb scas push push jbe jo movsl and pop pop mov mov cld out andl lcall jl cli sub add sbb cmp sub xchg rcl aad popa (bad) clc mov or jmp or mov (bad) mov lret cmp jno lods and test push std push pop pop jmp add in and mov sub ret cltd mov dec out (bad) fs fdivl dec mov sbb push out les jle aaa xor sub int mov sub insb add or adc cmpl adc inc mov test arpl sbb cmpsl gs inc inc insb fsubr sbb ret fucomi stos test pop pop push push jns cmp ss add dec insb xor into pop mov mov inc ret (bad) jnp mov push out jle jns sbb and add add dec cmp out out loopne arpl jmp dec pop xchg push aas adc dec ja jne push push jl movsl in or and or add adc cmp xor out sbb pop mov lock (bad) iret cld mov repnz and inc aam fimul cmp xor inc out leave scas aas (bad) push jle sbb (bad) rcl pop adc movb pop cmp aam aam aam dec outsl mov push scas loope lret mov ret or shrl nop ljmp dec (bad) sarl mov (bad) or pushf cmp adc dec push sbb mov dec mov dec cmpsb jno jnp fucom ljmp jle imul xor xor fldt repnz stos lcall pop loop mov dec mov push (bad) inc push mov fadds ror out scas orb jno leave pop lret mov addl dec dec xor pop pushf sub rorb jmp out arpl aas (bad) cmp and pop ja mov xor and mov out fisttpl cli xchg add push in dec leave gs inc loop xchg dec dec cmpsl subl insb push pusha xor fsubl mov cmp inc jmp jg xlat loop push (bad) jb pushf jp mov js and lock test dec xor sub sub sbb orl lret test mov out xor xchg (bad) test outsl outsb out in cs jno movsl and adc jg xor clc fldcw sahf popa scas ja lods dec push add loope mov or stos push inc (bad) decb dec insl inc pop stc sbb pusha mov daa loopne imul out hlt push push sub mov into pop xchg nop cmp fwait xchg in mov rcr rcrl inc js ljmp js out mov and out fmul iret in in loop pop mov enter push aam aad push xchg lds fwait sub sub pop shr lds adc lock xor dec mov xor rol andl xchg jb loop nop jge or aaa outsl lret adc ja dec lret lea (bad) xor movsb aad mov test jno cmp bound mov inc push jno test (bad) sahf loop fwait xchg lods test lea inc cmp mov jl cld mov lods (bad) sbb ds cwtl cmpl fsub inc cmp movsb fisubr dec and pushf lds mov mov call (bad) lret sub jno aad mov icebp add and push adc pop pop pop cld mov (bad) mov cli (bad) pop cmp les (bad) mov xor push (bad) int mov pop test mov inc int aas push and inc mov clc mov mov gs (bad) xor lock adc sub sbb cs push and cmpsb cwtl push sbb xor jno xor data16 leave mov cmpsl ret insb icebp pusha jne call push pop jo hlt das in pusha stos mov push xor fsubr pop sbb xlat (bad) in mov test jo stc mov mov mov daa (bad) or mov lods jmp sub cld loopne dec add lret mov jmp lea (bad) dec mov push mov cltd or adc jno outsb scas lods lods (bad) out xchg pusha pop and jae and das xor loop ficomp testb pop jbe sub pop inc xchg xor pop mov dec pushf sbb and decb adc adc (bad) fs push push rorb lahf (bad) mov mov dec (bad) sub imul pop inc sbb xor es fiaddl mov loopne addr16 and xchg mov add push push sbb push mov mov mov sbb fnsave push jb addr16 lret or dec pop jno jl xchg add jae inc push xchg pop lret (bad) int3 pop pop lcall adc and dec ja and and or add int xchg fsubp in dec sub jge pop loope (bad) xor sbb std test ret je xor cmp popa int inc cltd add add dec test mov sub push pop dec push dec es cld sti xchg mov inc sbb adc out mov hlt lods pop stos fldl dec pushf inc shrb push fsub frstor jle sbb sub ss adc out rol addr16 xchg xchg mov mov shrb add aaa cs mov mov inc call cwtl jae ret xor xchg pop fistpl fild pop scas divl cmp imul ljmp stos mov out sbb int sub loope and add jbe xor loopne mov popf pop push xor in es push jecxz insb (bad) cli and jae sub or jno sahf lahf cwtl or cmpsl mov stos sub pop xchg or sbb push ror push cwtl (bad) cs aam shrb cmp in faddl inc xor sub and lds outsb push enter push (bad) lret push add mov mov data16 fdivrl and push ds repz jg ret adcl push setl mov cmpsl mov xchg mov and fistpll cmp loopne sub repnz pop popf out les pop push incl pop sbb pop dec mov aam negl cmpsl or dec cmpsl dec or inc daa daa in loopne (bad) mov insb outsl mov out lds mov pop sbb jns xchg cs aaa cmp movsl aas scas lcall lds dec mov in out xchg pop clc sbb popa ds repnz hlt lea and imul leave mov and bound pop sub jnp mov cmpl and pop xchg xchg xor ss xchg fisttp sub add cs ss out mov stos mov shll push pop mov xchg mov xor dec push jge test data16 mov and imul xchg int3 pop xor repnz repnz addr16 xchg sbb test (bad) sub push stos (bad) aad rcll pop dec lods mov mov jecxz in pop js shrb out push sahf in push aam int3 lods cmc out (bad) fnstsw and xchg (bad) movsl push loope addl xor push out js xchg or xchg and jp,pt in jle in jge dec shrl cmp addl or sahf sub mov std cld std and jmp out sub xor (bad) (bad) out das movsb stos test (bad) repz or lret mov inc inc cli sarl daa cltd dec out sub pop popa mov and cmpsb cmc test ljmp jg pushf daa les ds dec xor xor divb jg mov jge push sbb add xchg jnp add mov clc stc cli and loop xchg stc and dec push pop xor xor mov xchg pop add into stos outsb clc jge vmwrite push aaa dec out rolb mov adc cwtl clc push mov jge xlat and ds xchg test mov inc pop mov rorl aaa dec pusha mov (bad) lock cli fild in ret cwtl loope or sbb push mov orl xor aaa xchg adc mov leave xorb mov pop xchg xlat mov call hlt repz and sub mov test mov fdivrl imul mov xchg nop xchg (bad) jl jno cs cmp cmp pop pop jae pop scas jle imul xor jnp or lcall arpl lahf and inc dec cmp int mov test xchg (bad) movsl and fstps push ficoml pusha ret movsl xor push lds pop rcl push mov mov inc ret lcall (bad) sub xchg fs sbb cmp jecxz cltd call push in lods lods lods cwtl sub out push fdivrs cmp or stc xor jnp xchg xchg enter lods movsl (bad) das call inc (bad) inc mov mov mov ret sbb hlt and lea jp or imul xchg nop jg pop int3 xchg ret or push popa jbe jo push sbb or pop lret sbb es into (bad) (bad) mov xchg jle pop dec cmpsb pop pusha lds mov enter (bad) aad aam dec mov je movl lock in mov mov outsl mov inc aaa xor pop fsubp sahf ljmp lret shlb pop or push pop jge cli add lcall mov bound sub enter shl mov dec dec jbe div lock or add sub push xor fstps mov dec rep ds xor inc mov mov movsl mov js or aas jae int bound xor fstpt push ja icebp fcmovnbe negb xchg mov sub icebp ja mov adc mov push cmp mov popa dec inc dec pop cs push gs pop push repnz add mov in ljmp cmc push jb ror (bad) jge pop push push inc mov in sar add scas call in fidivrl rcll int stc aad test xor nop sahf lahf sub test in lret or je shr out add cmp lock sti or inc dec dec pop cmpb aam push and push call cmpb js mov pushf shld and out mov jmp sub in les mov addb inc push sahf je (bad) mov shrb cs mov fisub (bad) leave enter or (bad) sbbl adc jmp xor ret mov repnz je loope mov push push adcl lcall loope cmpsb jge fwait inc fadd inc mov push gs lret arpl cmpl xor inc cmp mov pop aad ss xor hlt divl outsl popf mov xchg push imul in pcmpeqd mov loope cmp add jo xchg lds sbb ffreep mov jg sbb movsb cli and pop cmp lods sub sub mov cmp (bad) jne cmp xchg inc inc push mov jb pop xchg fsubrl roll xlat shll popa aam popf bound push ror jb sbb or push inc cmpsl rol mov inc push push xchg sti push pop mov mov or cld cli sti adc lods mov mov pop fidivrl inc imul or push in xchg jge lds je push mov cli jmp loope adc or fbld sbb or fistpl popa lahf cld push sbb outsl in adc sub loopne fucom sti cmp shlb add in xor imul movsb mov lcall ds mov cmp ffreep ds jo mov cmp adc mov ja andb pop push lods stos clc mov lds testb cmpsl mov add pop push push cmp cmp lods jecxz test xor xor sti cli lods sub sub mov (bad) cmp popa andl outsl sarb aas ds inc inc stc fisubr pop cmpl mov mov mov inc insl ss lock (bad) push pop insl xor andl lods scas or test dec insl es mov push fild popf leave push shl (bad) cmp mov out xlat iret pop stc adc cld mov pop jg cld fiadd mov in cmp pop (bad) retw bnd cmpsb insb push push rorb insl add mov pop fldt pop push adc push daa and sub int3 mov addl jmp fdivr mov jns xor test cmp dec push movsl pop inc insb jp dec sahf sbbl jo mov sub fldl fildl in mov je test xchg cltd je repnz loopne aad repz (bad) mov sti add out dec fs and pop (bad) sub scas js sahf test jns push ja inc add mov cmpps mov sub stos dec jmp cmp pop out and push sbb xchg ljmp (bad) push fcomp ficom (bad) std stos mov mov push push outsb lea lds rcrl jo and loope das and and fsubrs and dec cs jae adc inc test jae rolb jge fstpt add mov mov sub fsubrs ficom imul xchg in inc adc movsl mov sub mov push lret insl fadds jb notl data16 ja xchg or adc aam arpl cltd arpl push test jle sbb js inc fs bound mov incl mov ss dec xor sub pop sub or pop and es cmpsb fnstenv loopne cmp push sbb xor inc dec jb jo xchg out jg mov loopne gs jg or jnp adc push add mov repz cld movsl jecxz jne sub push rcrb int3 xchg rclb dec inc fidivr push mov scas lret or xor push outsl icebp push dec (bad) jmp call sahf cltd fimull sub dec add cmp fadd insb repnz add out vandps sub jp repz shlb and lock shll xor dec fidiv mov mov imul sub jp ret dec dec ss test jnp jne fldenv (bad) jno add lock inc lock pop mov or cmp adc aaa or movsl lods add add repnz sub (bad) imul pop pop in outsl xchg stos shr cmp and mov out sub scas aad in out push inc jb pop and sub fdivl jbe cmp mov dec pop or lods leave sbb push stc jo inc (bad) stc jmp push insl out sbb mov fnop cmp call cmpsb and or dec push cmp mov sbb mov sub push pop adc dec and pushf mov test imul sbb and push in imul jge mov cmp mov xrelease push mov add inc cmp inc mov mov pop mov mov ficompl fstps sbb cmc jmp push pop icebp mov (bad) push aaa adc sub test aaa pop lea xor jno pusha add out fsubp inc jno xor inc adc mov mov jge scas mov push fsubs cmc dec (bad) mov pop std mov gs out imul jo mov pop clc sub (bad) lock inc pusha in or cli lcall add sbb sub cmp push and scas psllw test adc pop insl jbe push (bad) (bad) lock arpl jo,pn outsl mov or mov fsubrl fcomip mov pop jle xchg pop or mov dec out aaa push mov jb sbb mov mov pop mov pop add outsb push mov cmp cmc jne ret daa pop imul adc ret insb inc mov push pop or ds ffreep jl fmuls addr16 cs xchg pop lods jge in dec and gs ds ljmp xchg inc fldenv ret les into lock orb in leave pushf pop push add (bad) push mov pop movsb inc ffree jno lret (bad) sub cmp push xor jmp mov enter or imul or in xor pop xor mov pusha test dec lods and lock gs push ret xor inc jne mov adc pop push je clc xor push fisubl sbb jg test (bad) test inc negl pop aaa mov push popl mov jae aaa aaa jns and cmp lret cmp (bad) xchg add cmp xchg ja (bad) jbe xchg jb mov scas pop in rclb push or jge leave adc cmpsl test dec mov xor jg fisubrl xor sbb popf (bad) or icebp inc gs mov out mov test int jle cmpsl mov cmp xor fadds pop ret ds pushf test mov lret imul int3 jnp popa or xor cwtl cld in cltd push inc add adc or fxch or icebp data16 pop into loop cmpsb movsl sbb bnd cmp stos out push jo xchg int and call pop fcomip mov push daa dec jp xchg leave lahf pop cltd jle (bad) loopne aam inc dec sbb pop and popa jo dec xor (bad) insb sub decb (bad) dec sbb inc inc addr16 ds jb arpl mov fistpl sbb xchg adc jp jl repnz inc sub sub adc test rcrb sar pop push pop push ljmp cwtl mov cltd in push pop dec pop cwtl movsl xor push jns xor adc aam mov loop xchg cmpb adc xchg hlt xor mov xchg mov sub inc sub xchg pop leave inc dec or lds pop aam out cmp mov nop mov pop sti cmp movsb jg pop cs sub jne and rolb xchg inc sub outsl adc into and push popf in inc adc pop ss imulb aas mov scas sub or clc insb cwtl test shl mov cld dec mov divl cmp sub xlat call cmc mov mov shl push dec mov hlt test int3 or sahf ficoml sbb jb push jnp scas jbe movsl popf pusha (bad) push mov xchg je fs clc ret add insb push mov sbb fnstsw jbe in insb ss test rcll push js mov jnp mov aad mov (bad) lock (bad) les or and imull loope iret int3 insl stos sti outsb pusha pushf scas sub cld dec movsl cwtl xor fwait lds push add mov fbld dec stos pop lds mov pop sub add das ljmp cmp imul sbb sbb pop fmull pop arpl push xchg lahf and test jle ja or in cmp mov cmp outsl adc and sbb jo out jb hlt add out jb push fisubl xchg sbb rcll es sub outsl ficomp pop jmp jb xchg sbb push add push clc inc into mov in sbb cmpsl cltd gs pusha push fwait xor mov adc or lcall lea xchg push pop mov nop call push imul imul repz cmp xchg out add cmpsb inc dec repnz sub mov pop dec push inc outsl push in ds (bad) icebp pop dec aad cmp push test dec push pop mov dec push aad jo jge arpl xchg mov jmp sub cmp push ljmp mov mov push (bad) cmp ret mov sub lock adc xchg jp inc sbb int loop bound pop lret outsb and sbb inc pop xor inc add mov ret add mov mov aaa loop push jae jbe mov scas push imul sub std icebp dec ret or add xchg mov xor fucomp xchg (bad) jae mov pop sub sbb repnz bound pop (bad) das sbb jl fadd sub in mov ss or fstl adc push xor iret into mov dec jg lock jg sarl fmuls xchg push sub hlt outsb not lret lods inc cmp mov pop jns or loop orb pop movsb jge xor pushf mov pop test jmp (bad) pop scas dec adc push adc ss pop fsts (bad) pop inc jmp jg fs pusha in xchg jnp test mov fwait jns xchg out jae sub das sub or lods adc mov insl stos mov cli sbb and iret pop xchg (bad) out mov mov xchg (bad) in nop fstp push ret mov in and jnp jmp adc out push popa movsb and mov xchg lahf push pop and xchg add in jle inc test inc (bad) gs add xchg rclb cmp and ss mov pop in cs in inc fldl mov jne clc outsl mov xchg add xchg or jno ret stc ljmp and (bad) shr add pop test push push and jmp repz test es sbb mov icebp aaa hlt jne add ss cwtl icebp sub insl sarb movsb add sub mov je icebp cld cwtl pop jmp inc fiadd pushf pop pop mov jbe test lret fdivr mov sbb arpl lds flds and das loop push and std fildll fstp into ret mov xchg mov cmpsb push lea xor scas aam pop out or inc popf sbb jns xchg xor xchg ss push lret add or xor call mov mov mov pop adc mov movsl lret lods and or adcl dec xchg xchg sub mov cwtl add ror cmp jb in sbb mov (bad) (bad) shlb (bad) pop push test outsb mov fcmovnu mov mov inc scas push mov fistpl fiadd push into xchg shrb push jmp dec dec jae stos push inc adc in xchg jae add jp mov mov jge push mov jo pop push ja pop sub lcall or out xchg xchg cmpsl xchg mov mov aaa jp sub jo and sbb sbb push in jne mul pushf pop inc daa scas pop push pushf fadds in pop cld or sub pop negl repz mov and jb daa scas xor mov enter dec or mov bound cmc push xor shl cmp fwait lock cld decl test jo inc jle mov sub and inc mov adcl push pop leave jb add pop cltd pop imul or in or lret call icebp repnz adc ficomp fbld aad mov add jbe mov (bad) xchg xor push cmp add adc sub pop rorl out ror (bad) jno and (bad) repz insb (bad) mov mov out cmp or bound push xchg stos jo iret fnstenv jmp or xchg (bad) push xchg or jg fbstp jmp jp mov pop stos inc and mov (bad) es or ds xor adc mov adc outsb dec xor push frstor push (bad) mov sbb add sub rcrb and adc cs cmp sarl push mov into push lock dec in mov pop scas stos gs decb mov mov test rcl fwait movswl int std (bad) mov rcrb stos out mov dec out adc pusha inc xor pop sub gs iret jle stc mov insb push subb int shl into roll xchg push pushf or dec cmp jo sub das (bad) mov sbb (bad) je pop cmc lahf mov sahf and jne dec mov lret cmp outsl sub out push cs fsubs add cmp seto xor add cld lret jae xor xlat jae xchg scas js dec fwait xchg or push adc mov (bad) pop (bad) mov add jae xchg scas loop cmc lock pop sbb rorl aas and push aad xchg jl adc jb jae (bad) call shr arpl scas loop je in mov sbb sub inc mov mov mov add loopne xchg lahf test iret mov add and mov xchg push sub xchg shl mov mov sbb inc fidivl cmc or cmpsb inc inc xchg bound hlt shrb inc cmp cmp sbb inc jmp jp sub ficoml jle add pop fstpt in and push jnp sbb test scas mov loopne jp push mov xchg push mov mov inc popa jne clc sahf lods inc pop add mov mulb int3 and add mov jge popf dec lcall popf lret fstps ss (bad) dec fisubl adc call (bad) add mov xchg fucom ds ljmp ficomp push out push fstpl (bad) ds inc out repnz mov and xor mov lcall dec mov inc dec fwait ret arpl inc fcmovu xchg xor movsl out pop push mov jmp or and inc lods js stc test jns loop mov (bad) loopne sti or in lahf and hlt stc jb in sti iret bound inc mov test inc fnstenv imul sbb loope fisubrl test icebp adc mov repz inc jb rcrb add push dec test cs push loop sub movsl xor int stc mov mov loope inc jo icebp fwait pushf out fbld push mov lods mov dec push jo adc outsb xchg mov out xchg je xor xor pop add popf adc call arpl jne xchg add mov add insl mov pop cmp (bad) out or test addl push lcall push push or fdivr or call xchg sub or sbb sub mov xchg fsubs adc fcomps pop mov pop sbb (bad) adc push add into xchg pop sbb pop dec sbb pop in mov movl movsb std sarl mov dec lods xchg xchg xchg or and sub jb aas sbb rclb xor xor and paddw mov cltd cmc stos xor sbb sbb pop js sbb adc add das push mov (bad) xchg cmp daa push mov jo faddl or out mov or push xchg das addb sub adc mov fwait mov out adc and mov mov xchg je cmpsl push ss leave mov nop arpl or sub test test mov dec or in jno (bad) popf lock push cmp std xchg adc xor je dec insb sarl test (bad) je sbb and adc loope add rorl push addl cmp jns sbb xor std repz test jge in loopne pop adc xchg and pusha and sbb bswap rorb mov ret sub fstps mov imul jmp movsl imul int imul jg sub sbb (bad) mov int pop (bad) popa cmp mov inc and xchg clc int3 xor (bad) pop and cwtl repnz jmp push mov or mov imul lods enter mov mov push pop dec xchg fldl and xchg stos jecxz in cmp notb cmp sahf push fs mov sbbb xchg mov jns std mov adc (bad) jne jb dec cld cmp (bad) push jg pop mov pop dec int add gs movl mov adc inc mov jae pusha xor in scas adc fdivrs pop cmpsb leave or jo xchg dec xor cmc rorb jmp mov mov dec sbb addr16 popa mov icebp mov dec mov lret cmp jl inc jo dec push xchg call xor shll xlat ds jp xchg push div add rcl imul xlat arpl icebp jge shl dec test movsl pop faddl inc push inc aaa cmp cmp scas repnz sub sub and cli hlt cld repz push pop out loop add cld push jnp sbb aam xchg mov xlat fadds push and jge xor xor xchg cmp xchg (bad) ja or mov insb mov push pop stos pop pop stos ret push dec inc aad (bad) jb dec xor into push adc pop pop bound (bad) mov add sti dec out push mov rorb adc jno pop and jmp mov jo adc push mov push mov sub mov sub push sahf xchg ja adc idivl push xor and mov pop push rolb xchg gs jecxz sbb lods test iret mov dec in dec dec out lret gs or lock and add cmp push je mov call fiaddl fsubs aad enter inc jbe mov xchg cmp fdivs fwait or pusha andb push ficoml sub int scas sbb das and jb adcl mov out (bad) dec pushf bound sarl sti clc push imul pop pusha sub sbb aas popf and jne fidivr nop dec jnp dec mov inc ljmp cmc js lea jno inc mov loop jge rorl prefetchwt1 cmc fstpt loop cmp xchg scas lds (bad) jo (bad) mov sbb into fdivs push frstor shrb xchg sub xor and mov popf sub xchg cmp outsl repnz test adc sub cmpsl fildll movsl push jmp push popf or sahf adc jo fist out outsb and sub sbb mov adc aas addr16 outsb push (bad) pop or aaa repz xchg xor lods ljmp adc push cmp sbb sarb daa faddp xchg cli mov int3 ret mov mov push icebp ljmp mov cmpl jae jne inc xlat dec dec shll bound cmp mov mov (bad) aaa jns push movsb mov xor idivl sbb cld movups jo cs or sbb mov (bad) scas hlt mov ja in push xor push jno jo lods stos lcall insl dec test xchg pop cltd aas pop stos push into inc daa hlt mov xor jmp clc add (bad) ror jl call iret out jns leave xor in mov cltd insl mov inc add dec roll jg fisttpl sub cmc pop icebp xchg mov sub divl data16 shrb push dec sub enter sub inc cld lret add jb jnp add adc daa or jns mov sub call (bad) pop sarb out mov or mov test xorl loop test mov sti in fcomps icebp testb or jae jp stc dec popf xor dec push test or inc loop jmp stc sub mov xor lock test movsl or arpl out inc ret mov mov or rol sahf cmpsl aaa lea inc xchg fisubl hlt arpl fmul sbb push sub xor std sbbb jge bound fsubrl mov push cmp scas (bad) rcl lods add mov lret adc push mov push xor pop ja fbld mov sub stos in mov mov cmp mov jb sub inc cmp pop pop mov (bad) inc dec rcr add push test movq aas scas cmp fcmovu hlt jmp mov push call repz aam (bad) sti pop shll xchg pop in pop mov leave adc push fdivrp or icebp out fstl lret push push pop into pop roll xor sbb mov mov jbe,pn inc mov mov xchg cmp cli in cmpsb mov xchg xor out jge add pop inc in mov inc out loope inc lcall das push mov mov push stos insb mov pop imul adc push pop rcl sti jns and (bad) hlt add inc sbb fdivs xor xchg mov push jg test adc push adc mov rorl popa push test push call mov fmull sub push push sbb sbb jae jno test mov jmp cmp and movsl insb mov in mov shrl lret negl cmp mov sub hlt and das outsb addr16 mov push sar fnstcw xor mov loope stos dec xchg mov lret int3 xlat jb cwtl cmpsb das and mov aas fsubrp mov aas std test (bad) notl pop inc pop add xchg mov pop and ret mov pop xchg enter call add mov cwtl repnz jle mov scas roll push mov jge movsb pop bnd pop jmp sbb or imul dec jnp icebp fisubrl aad add xchg adc sub xlat inc mov sub push cli push mov mov dec lds call mov out pop movq repz bound jo and push stc sub sbb adc (bad) sbb lcall aam mov lock lock lcall xchg xchg fisubl xchg jae cmp das xchg push addl fiadd xchg addr16 fistl pusha xor pop xor imul and cmc push sub dec sbb loopne daa loope cli xchg mov mov imul mov pop inc lret sbb add push and test sub movsl inc mov push outsb cmpsl int push insl mov popf pop divb and fs test jne and sub cld iret jae test mov popf cmc cmc dec cmc sbb add jns mov mov add mov fwait (bad) jg (bad) lock test (bad) pushf pushf andb jns (bad) sbb dec add icebp into in aas mov stos gs or insl loope insl mov movsb mov mov idivb push mov ja adc add int3 mov dec push imul jl cmp adc dec pop test add cmpsl enter inc push clc (bad) push es dec aam aam pop dec push dec nop repnz xlat mov add leave mov push or and mov fs push adc push inc mov mov ljmp sub gs or or and movsb mov adc mov es call push movsb mov mov int jno adc sti je sar or dec jae arpl jo enter cmp popa test out adc in inc push int jp xor pop stos dec (bad) loopne jg mov mov xor test pusha jo and into cmp jne inc pop push js add (bad) mov (bad) cli (bad) hlt dec ja add fstcw dec hlt fist loop xchg mov jns sti inc xchg js sbb rcrl mov loop adc loopne xor push jne addr16 ret sub aas ret les mov loop nop xor inc mov pop inc push nop xchg imul ret sub out mov inc negl add cmpsb outsl sub ret sarl mov in dec or pushf mov ror fwait stos push pop push gs dec mov ja rclb mov incl stos inc mov test icebp push stos cmc je inc inc adc lods sub push fsubrl mov lods inc lret fs inc test cmp repnz xor (bad) rclb adc ljmp pop xlat daa sarb jmp int3 sbb add flds or (bad) addl cmp sub cs mov (bad) rclb add rcr dec movsl scas movsl fnstsw sahf adc cmpsl ret aad addl xor inc in movhps (bad) or inc shrb andl pop or jb jae imul push dec mov adc adc or clc dec dec cmp cmp enter imul (bad) das popl push cmp leave enter rcrl aad sub pop ja mov dec push shrl roll imul sub mov pop inc jle adc or jg imul addb sbb or enter dec cmpsl cmp xor jns add iret pop add push mov or inc test push cmp aam adc cmp mov cmp es jmp sub cltd jnp clc mov mov sub jg cli sub in push add mov and icebp (bad) push adc scas or loopne pop aam or aas pop jo mov test mov mov jo jge daa stos push and icebp loopne test in ret shrb pop adc dec dec scas fnstsw lcall xor xor jnp mov lods insl sbb push divl mov cmp sub enter jecxz mov in push icebp lea mov aaa in (bad) stc shrl xchg push cmc and es div xor fidivl xor or in xor subl test and out jnp imul sub xorb xchg dec adcl jg stc xchg rcll jbe jnp stos sahf outsl ja adc add (bad) sbb aaa je cmp ljmp leave or cmp (bad) mov xorl dec je sbb test lahf imul inc ds aad pushf (bad) sbb add lret mov jp and pop push cmc fsubrs mov push or aas fidivr rolb mov in das sbb repz ucomiss mov repz (bad) adc jo test adc dec cwtl inc mov loope mov imul dec aad cs pop pusha imul aas jl cmc xchg es roll mov gs add test test xor add sub or push fs add loop lcall ds cmp lret outsb cltd sti mov inc push hlt inc xchg imul loope add ret adc adc mov or mov xchg inc outsb rcr out push fstl mov dec add mov (bad) cwtl lcall push imul cmp fs or imul xor loope movsb stos mov jbe and aas dec orl jp jl sti xor sub sub xchg pop out test add or fsub pop aam xor stos in push inc ret lds (bad) and sub and in and push (bad) xor inc jmp mov xor shr je js or lahf (bad) dec push cmp js sub xchg sbb sbb jmp loopne push mov push mov fisubl (bad) xchg enter sub jle lods sti jl pop (bad) mov lahf idiv stc sti test shr inc mov mov mov js xchg adc nop repz jnp out xchg or xlat mov cmpsb jbe fldl dec and jmp rorb mov fcompl push jg sbbb push inc adc scas (bad) cwtl loop lds inc mov xor xchg notl cmp dec data16 and add test movsl mov xor lods idivb cmp bound (bad) lods mov mov xchg popa xchg and cli xor inc stc fisubl rcrl mov cmp push fisttp (bad) cmp dec and (bad) mov (bad) scas lcall jno push sbb (bad) rol sqrtps jg pop and pop adc lcall xchg mov int sbb mov clc mov in out imul cmp ret and jne in mov (bad) clc mov cmp or stc push mov add mov daa and xchg outsb mov jle aas push test xorb cmp cli fwait jne mov pop sub fucomp cmp and adc out mov or int mov (bad) lcall pop in and xor xchg orl lcall in or sbb pop jbe mov sbb pop dec pop inc repz or push mov dec fbld mov cmp bound push lods jns xchg movsb imul mov cmp pushf xor daa cltd jbe imul add jne fs pop add ret cmp xchg out (bad) repnz mov lret fcmovbe cld and std inc shrb sub call push xchg dec ret (bad) into rol rcrb notb mov jne fsubrp imul ret lods movsl (bad) popf fs and cmp ljmp inc test push sbb add push test pop fs or push adc outsl jo dec add pop jno arpl xchg push sub scas adc sub outsb cld xchg xor fistl rcll sahf or scas bound pusha push adc cmp or add adc aaa ja inc sahf mov jge cltd push rcll aad lret cmp cmp add sub in call gs push add lods mov or movsb rorb mov fsubp fisttpll add pop ds or leave popa sbb pusha lcall fisub iret popf repnz mov insb or imul inc inc rorb cmp sbb lret out gs int3 rclb mov xor inc mov dec jne insb ret mov test test xchg mov rclb or pslld into int push lahf in jo mov cmpsb push int cmp or notl dec add jnp hlt das mov dec arpl jl mov shl inc jle aaa in pusha push mov fwait hlt xchg jp fldenv shrb cmp es adc std jnp push xor test or aad fldl imulb jmp out inc dec lock imul (bad) cmp fcompl push push adc cmp imul leave fwait test (bad) sbb sub test xor movsl shr outsb (bad) ja fstpl jae sahf ja dec out ljmp cltd dec in inc enter mov dec sub sahf add cli (bad) adc out mov add fild sbb clc rcll (bad) sbb inc sub pop or push dec push repnz int3 cwtl push cmp icebp gs mov add jmp xchg xor stos out in inc jns inc inc xor outsb push aas dec in mov test ljmp test sbb in inc xchg cmp add dec jle insb test jno xor fildll add mov cmpsb xchg mov lcall out inc sub jecxz fucomip mov cmp rclb lods lea outsb mov int3 cmp mov push pop inc jmp or aam out push jg shrb fwait loop clc lahf cmp in ror roll mov fstps out sbb ja jge data16 popf cmpsb jge adc mov in ds add cmp mov jo or add sbb fimul movsl in notl fildl in cmp call and inc adc inc cmp fnclex jle sbb pop sbb xor lret leave xchg and (bad) into movsl in rorl imul sbb sbb out or xchg cld cmc push adc inc cmp lret aad dec cmp cwtl cmp jg addr16 mov fwait popf out inc mov sarb pop lea fdivl (bad) xlat jbe jecxz mov inc sub sub mov pop les push sti (bad) pop jmp jecxz mov push (bad) js adc mov add pop jo iret sub pop cli scas push mov push mov xchg dec or cltd mov fs and mov call int and sub pop insl adc es int jnp mov es jle cmc fdivrs jae pop aas popf in or pop ror nop sub mov and addr16 (bad) sahf and (bad) popl sbb sub int cmc scas js or dec movsl mov ljmp incl int mov or cld fldl cmp xchg add jnp adc ja in add popa sbb xor imul mov (bad) mov jne lret cwtl pop xchg dec test pop lcall sahf fs pusha push cld sbb xchg jle add (bad) xor (bad) mov cli jg pop aas scas adc or popf roll notb jbe inc or or lods adc sub or jg jbe stc dec jle (bad) int sti jl sub sbb out push push jmp xor (bad) hlt outsb adc sti xlat cmp sbb repz sarb jle jno jp cmp sbb mov aas jle cmpl sbb arpl lahf mov add and bound dec mov pop sub adc cwtl jae lmsw leave add jmp test notb leave mov adc cmp push jle adc int3 inc in xor aas in push ja or sub ljmp rcl mov or scas faddp add pop (bad) ljmp sub into or out sahf dec inc xchg mov or mov push stos and mov int3 pushf outsb sub out xchg push ljmp xchg lods jbe (bad) mov xchg add jecxz data16 movsl pop lret and in sbb rorl inc movsb sbb (bad) and repz cmc jb cmpsb loop push add mov xorb sub mov sti scas add adc cmp mov xor movsb adc adc dec (bad) jae dec icebp lods mov test cwtl out gs fldcw dec out mov inc adc popf idivl outsl xchg cmp int3 (bad) loopne jae mov inc insl movsb pop mov loop (bad) (bad) (bad) scas jp sbbl pop fcmovb sbb mov xor mov cmp (bad) iret jg cmp and jge inc mov dec out xor ret mov lods popa rcr aad out inc cmc inc daa cmc aam xor dec sahf push (bad) std sub clc jbe mov mov cmp jmp add divl cmpsb cmp jmp aam push inc cmp jns cmp dec sbb out ret call lret loopne loop and and dec push cld popa arpl (bad) into fisubr dec shll lds xor and xor mov inc xchg (bad) pop xor es pop cs cmpsb fmuls mov clc int jg mov adc pop push loope dec out fwait test mov addr16 or fsubrl inc fld sub (bad) aaa stos mov push in mov jge les hlt push stc sbb sbb mov dec jb add mov mov imul sub lret test stos xchg push adc repz jb outsb push cmp leave fimull xchg mov bound jno mov pop inc movsl pop sbb sub rorb adc ds aas pop movups divb mov jno (bad) jg xor cli (bad) cmpsl push ss ja mov iret xchg push xor dec mov or pop ljmp loop add dec dec and sub (bad) lret mov mov enter cmpsl pop cwtl or or dec xorl sahf arpl aaa lret mov inc popa push mov fcoml scas cmc inc testl fldt in sahf data16 aad mov adc jecxz aam iret jo mov push sub push jae push or imul fcmovu cmp cmp aam pop inc cs push pop adc mov int3 test dec sti mov push push adc ljmp dec inc cmpsb cmc imul mov inc sbb and pop jo mov mov cmp jge xchg mov push sbb imul jl (bad) jg scas repnz lods (bad) sti mov stos (bad) xchg lds shl push adc push xchg mov push ror popa rcrb push jge mov leave xchg (bad) cmp cs scas pop test (bad) ds mov xchg xor sub (bad) sbb clc loop je movsb icebp mov inc jns addr16 mov or cmpsb mov inc xchg cli mov (bad) xor sub dec sbb and jae out cwtl sbb es mov mov mov pushf popa pop or leave pop push (bad) sbb cmp push fisttp lret inc mov cwtl mov inc leave dec gs mov (bad) loopne mov push jo xchg adc mov std stc scas dec loope dec dec xor mov inc daa push jecxz push jbe fstps bound repnz xorl mov pop push and movsb lsl shrb push pop fwait jmp xchg mov mov mov or xchg xchg addr16 les jbe xchg mov pop pop pushf cld push in fdivs add lcall loop fwait icebp data16 stos ds mov mov mov call dec cmp cmp out mov mov sbb fistl les mov das dec test mov add test sub xchg mov cltd sub (bad) push mov in std repz and adc and pop test aas es in sahf push jae sub divb add stos out or jle or sbb repnz mov xor mov pop add div (bad) dec mov mov leave pop mov inc popf pop pusha flds test in fsubrs jmp pop ret das es rcrb pop push add lret jge jl mov dec mov test mov out fiaddl fucomp sub mov fstp imul or dec shr mov lock insl aas xor jo jmp call push scas loope cmp out sub and cmp jno and cs inc cmp out aas mov ficomp and push ds test add jl fsub in cmc xor adcl pop in adc jo push adc inc sahf fcomps scas (bad) stos rorb pop cltd psubw inc mov nop fs out adc outsb enter or sub jmp xor ret aad es je mov pop push push aas inc stos mov mov outsb xchg fcomps pop sbb inc mov idivw push dec or or xchg rolb sbb test xchg and jnp inc xchg push or outsl gs push lods or imul jo lret shlb (bad) xlat inc or call mov clc jp scas in in add adc test add jecxz mov and out xchg fidiv add sub addl jb mov dec out in shrl inc cs push push or push fcomps test outsb aaa mov mov popa inc jmp cmpsl rcrl scas jl mov pop push pop adc cmp imul pop repz fsub xchg cmp push pop in sahf mov and cld not (bad) sub insl daa fldt stc out xor sub dec push lahf dec adc fimull xchg mov jne inc outsb hlt add xorl dec fsubrp jmp insl and mov adc (bad) mov insl leave xor repnz orl pop dec sbb repz (bad) push add divl (bad) dec fwait or inc add in js fstps dec ret xchg dec ljmp adc sahf in jmp call adc (bad) adc cwtl push arpl or xor dec jbe mov jle xor ss (bad) in mov insl pop cmp cvtps2pi out lahf xor push stos sbb xchg fsubrl mov or int inc jns adc int3 cli (bad) je aam push daa and movsl pslld mov icebp scas xor pusha das in enter ficoml push clc aad int (bad) paddw icebp mov mov mov sub push xor int or popf mov fldcw stos das cmp je cmp mov jb mov lock fs test cs int inc xor dec std pop arpl cs in jo ja cmp leave xor aaa fistp jl (bad) cmp dec and mov pop into and push loopne sub test mov inc cmc push mov (bad) xchg xchg enter mov inc stos aaa pop fadds (bad) mov icebp pop or inc xchg push fisubl inc out push repz push imul (bad) aad jl sub test cmp stos adc arpl outsb fcoml sbb sti shr push mov push pop test aad imul xor dec or dec aas in fsts lahf xchg pop dec xchg sub fsts fcmovne xchg aad xlat sbb orb stos cmp cmp test (bad) lock jne mov add push or lock inc repz out mov push mov and or jp insb scas cmp dec mov pusha add mov cmp add hlt push js and leave out mov push das out aam xlat sbb pop shll dec inc cmp call dec ljmp add adc cmp aaa pop cmp sahf bound sbb int cwtl dec mov call push outsl jmp subl push xor jno jge mov add pushf insb pop inc andl jecxz and jnp test add cmp fstpt sarb sbb xchg cmp pop sub ret pop and movsl fimul push pushf negl sub xchg cmp or mov std inc negl ljmp jbe mov test aaa cli cmp xorl push pop push cmp loope scas xchg mul inc insb push mov pop xchg jne mov insb push lock sub xchg pop int3 cld out jmp mov decl adc pop ss test roll or push mov das push stos repz adc push pusha outsb push add fbld xchg (bad) inc lret cmp xor inc pop sbb mov fcompl iret (bad) jl inc lds mov sbb xchg repz lahf sahf sub cmp jp (bad) add loop cmpsl inc iret call jb (bad) pop dec cmp out push fcomps cmp push addr16 lret push inc xor dec inc xchg xchg and or rcll es or ret mov and adc lock fwait and push jns rcr cli bound aad lock adc in sbb rolb jp,pt lahf jnp add inc xlat sbb shrl lds out inc fwait sti mov sub sbb movsl mov add mov in pushl push mov or xorl fs arpl call lds (bad) (bad) sti or scas mov in xchg dec (bad) mov ja cmp mov arpl jbe idivb pop push test repz push pop lods and xchg jns sar inc inc jnp addr16 (bad) in fbld mov cmpsb xor stc mov int3 and fisttp lahf and sbb cmc daa jecxz decb ret inc aam adc clc inc add push addl movsb out inc jp and lds (bad) mov push adc ret repz sub mov add pop rclb insb movsl gs inc dec into dec insb hlt dec mov pop (bad) fsub mov rcll fcoml lock xor (bad) js cli jns ficom jae jmp into lret pop cs clc dec mov fist inc sub fwait mov inc sbb divb gs pop in adc test (bad) pop add das test push push push je lock xchg sbb add dec out scas cmpsl xchg (bad) test and repz add and lods popf push imulb mov aam sub mov push mov adc pop mov stos add je repz out hlt jno popa es or mov dec mov mov popf jns pop fdivl andps pop outsb jo sbb bound mov jne add pop xchg ret cmp sub clc out mov addr16 mov fs add mov hlt bound dec call lahf push in and loopne xor dec jge pop push aad cmp mov imul sbb fisub sbb movsb pushf cmpsl pop lods repz fdivrl mov sti popa push push pop (bad) lods ret lcall jmp dec movsb mov push xlat rcrl fs or in fstps pop rorl stc push jnp stos add fistl in mov or dec es in and adc sbb pushf dec stc repnz and or enter dec push iret ret xchg adc adcb pusha test adc out add dec popf mov out imul jae mov aam lods in mov test push or mov push cmc xchg fildl mov lea mov cltd mov pop and adc cmp dec xor adc mov shlb mov cmc mov sbb mov fcoms add daa movsl and stc inc add data16 idivl or cltd insb std jne jl lea cmp out nop push xchg in notl data16 je cld icebp stc mov jbe jl xor (bad) iret mov stc push (bad) mov stc out mov push (bad) mov push cmp insl rcll dec fild imul jns and fcmovu sub (bad) rcr aas dec fsubrs aad js ds inc inc sbb pop adc sbb fcompl jmp arpl cvtdq2ps jbe pop adc dec mov cmpsl lret and pop push into sbb test sub arpl icebp inc sub pop mov icebp xor mov cmp add arpl (bad) adc push inc sub xchg andl push aaa adc cwtl stos mov jmp xchg inc sbb cltd imul (bad) pusha pop dec mov xchg in (bad) cmp sbb rep int3 cwtl mov cmp inc popa fnsave pop xor dec dec shlb add cli push sahf pusha popa jae sti jge jge movsb jge push xor jge jge pop adc cwtl sar xchg (bad) lret xchg popf mov imulb pop rcrl push aaa or fild ret sub in sub addr16 shlb mov mov cld imul dec out push sub out in cmpsl insb aas adc mov scas gs clc push loopne aam fxch repnz push push xchg lds out movsl mov mov xchg sahf mov testl adc fcomps (bad) sti push mov cmpsb (bad) int3 aam or jbe imul dec or in (bad) incb es and gs jno lcall imul scas or out loop sub mov nop mov fstps push push push add pop pop mov add popa or add cld and or hlt rorb rdtsc ss bound xchg jnp xchg sub add xor fnop mulb ja mov mov ficom decb push mov mov fwait xor ja pop mov scas repnz fstpl jle mov or dec mov or cltd or cmp ljmp mov sbb mov push xchg xchg lret or inc fisubrl int add pop push pop (bad) int3 scas adc cmp mov dec push adc jb stos stos movsl das dec push mov mov stos insb push adc add push jb pop mov (bad) xchg mov imul insb lea pop js popf cmp adc bound push adc insb cld scas pop inc pop jne xor jnp enter jl xchg adc idivb dec aaa push lret add enter push dec call xchg mov in xchg inc xchg or lock add sub sub fadd push push push fsub scas cmpsb mov pop or rcll push dec adc pop push lret sub jmp lret (bad) mov or rorl sahf scas sub insb (bad) sub stos stos out xor xor idivb and jecxz test dec add call mov xchg outsb pop xor inc jl lahf enter jle cltd jecxz sbb pushf jmp xchg jge sbb cmp nop (bad) roll dec movsl ret (bad) fdivrp js add loop test lods jmp ds push fisubrl xchg test (bad) mov push add loopne scas ret repz pop lea push mov sbb sbb push ret adc adc pop cwtl bound rcr inc fidiv je xchg test lcall fimul jno adc xor mov cmp add mov mov int insl cmp inc pop dec jae cmp cmp and xchg out mov pop loop fmul jnp cli jmp test insl scas jecxz jmp mov push es das mov sbb dec xor scas mov pop sbb jl push les (bad) fwait jmp sub movsb mov sbbl cmp xchg scas mov pop sti jae xchg fwait dec mov popa inc cld in in ret lea sarb xchg lahf add push loop sub push je stos stc dec js into sub es test jae (bad) cmp and daa push push roll ljmp push movsb call add xor mov jae sub outsb (bad) mov aad aaa std aam aaa push add xor or loopne in sti or pop dec push xchg xor aaa and and push aam inc nop arpl cld push adc fildll dec rcrb out test mov rcl or nop out dec pop (bad) mov jg roll sahf pop rcrl jecxz arpl inc cmp negb or push lds movsl jp in test pop jl loopne cmp sbb ret fdivrp xchg ret mov push inc in shr clc inc pusha sub jmp rol mov cmp mov inc mov lcall sub sub hlt or mov js sti or les js mov sub out negb xor call psubb iret push js popl js mov leave in lahf xlat or outsl in and inc frstor or mov ds inc loopne cmp jmp into jbe cmpsl inc jo mov iret jl mov sub or xchg test xchg add dec clc dec out cwtl dec xchg jb push sbb or inc daa pop jg adc mov mov leave (bad) mov out or dec ret xchg scas scas mov adcl and aam ds jne and in push shll addr16 cmpsb es lds mov mov imul push lods mov inc hlt jg pop outsb repz adc (bad) xor xor add rcr sbb pushf popf push push push inc push mov dec mov arpl xor jmp cmp mov int3 movsl scas call pop xchg outsb mov mov lods push push push jne mov (bad) popf sub jmp gs sub ja inc nopl fs add es int (bad) out sub push and (bad) icebp dec dec enter aad mov in xlat fs xor bound es mov and or mov mov and jb xor (bad) jno dec mov lret cmpsb sub dec and leave nop push xlat dec sbb adc fdivs hlt push aad push imul je add addr16 movsb lods sar dec outsb or sbb out lcall pop fistpl sarb adc movsl sahf jl das mov cmp aad aas nop push pop xchg jb mov idivl ja sbb push xor sbb push inc ret ret jbe cmp test jne fstp push dec mov fistl cwtl es mov inc sub lret pop test jno dec insb xchg imul int3 lret in ret inc and mov std xchg xchg cmpl clc mov push or inc lret jle lds add test or test ret addr16 popw or mov or mov adc inc push pop jne enter stos jg sub popl rcr pop hlt mov cltd cmpb mov mov imul pop xlat cmp mov aam jb adc inc xor cmpsl cmp push ret scas out ficoml arpl mov dec add cwtl dec call sbb adc xor push icebp pop jo cmpsl jp mov mov adc dec fmulp flds andb add and (bad) hlt jae js jnp push inc sbb fwait mov outsl add fstl fstl sub stc enter sbb mov pop dec bound and mov pop rolb dec mov aas repnz lret inc iret pop mov adcl lcall jne out push mov hlt mov xor bswap hlt pusha iret sub fimull cld xor mov lcall add pop popa cmp pusha dec addr16 adc fisttpll (bad) pop rolb cmp inc lcall (bad) hlt jno cmp sahf xor push into xor add aas sub and cwtl dec mov add jle aaa xchg fldl mov push add addr16 hlt or mov dec int3 mov incl (bad) lock mov dec cmpsl call sbb and outsb adc add js imul insb jp add xor int3 or cmpsl mov loop in mov or ljmp repz fsubl inc (bad) pop sbb leave sar pop lds jns jns push mov sub ds ffree imul cmpsl jecxz pop jns mov inc sbb push aam sbb clc stos xor cmp push jns lods arpl mov xor ss fidivl stos adc adc inc ljmp inc js xchg jl inc gs test push aaa cli adc cmp outsl shlb add lea outsl xchg jle in mov shlb cwtl (bad) outsl inc stos cs push rcrb dec sub mov add ss mov dec rolb rolb sbb adc aas mov cwtl call (bad) std test daa push fdivrl mov movb xor gs mulb (bad) xor add rclb jne push insb mov xchg mov adc xor jbe bound cmp dec dec push ret es jnp and sbb arpl push std push dec or jl push pop jl dec mov popa pop outsl inc or pop sbb cmpsb xchg lcall movsb movsb push xor mov dec sub les jmp out dec push punpckhwd mov cmp pop (bad) leave shll cltd or pop push std mov and xor fidiv mov push cmp inc lods adc jne outsb fiaddl adc addr16 xor xor jge in fist fdivl (bad) out push jae lea lret (bad) cmp nop movsl je dec cmp movsl fcomps fcoms aas lea jle (bad) aas push xor fs loopne jns dec ljmp loop xor imul xor cmp stos cwtl int3 mov jnp add in cli stos adc inc and xor mov scas roll icebp add push ret and xchg test add or lret bound decb or jge inc pop inc stos out in movsb fnstcw insb data16 xor pop and push inc xchg sbb sub iret ja pop mov pop xchg add (bad) add je dec cwtl mov mov mov test js (bad) ss movsb adc mov jl gs orl xchg out pop mov (bad) daa pop adc inc cltd pop mov (bad) push mov or cmp and dec mov (bad) iret sub lds add sarl dec mov push cmp dec push and (bad) les pop repnz loopne dec pop and mov sub lea pop and jns dec jae jge fbld dec pop iret incb or mov mov inc mov repz xchg stc sbb jp in inc test lock test loopne adc add cwtl inc outsl aas inc pushf jne (bad) xlat ret or mov std stc jnp sbb incb sbb gs shr dec shrl lcall dec push or add inc enter cmp mov (bad) dec cmp sbb (bad) xor add out or add (bad) jns xchg mov nop push pop and ds cmp lods and adc fcmove pop pusha bound and or data16 mov mov xchg mov jp (bad) (bad) nop aaa mov xor icebp dec xor push push jp push fwait or mov cld push and popf adc adc andnps jnp test pop push insl jnp mov adc mov jb xorl addb xor xchg rorb daa clc and inc mov and aaa sub lods adc mov push test stc or jo pop (bad) aad inc stos outsl dec adc xor sti out jno jns mov lret in iret jl add sub fdivrl pop xchg or repz jne push fwait in iret jp mov sbb and dec imulb and scas mov out jmp cs ds pop orl mov repnz cs ljmp lahf dec pop arpl scas ljmp bnd jno jg pop cs mov pop add repz stc in mov inc nop mov stos stc pop test xchg sarb iret lcall orl cmp add xchg dec xchg (bad) push add ss dec shrb adc rclb (bad) jecxz xor pop xor push rsqrtps into imul call lahf xchg ret in stc mov mov icebp pusha (bad) push xchg xor xchg jecxz (bad) xor lods xor mov das lret dec nop icebp inc mov xor mov add pop (bad) int3 sbb mov dec shr dec mov in jmp loop sbb or cmp stos push sahf aam adc fstps sbb ficoml inc ret pop aaa insb das mov inc gs in jae (bad) sarb (bad) mov in and mov cmp js pusha popa cmp xor pop rcr cld jno loop ret repnz iret and stos xchg es inc lret repz mov test sbb je fsubr add xor and xchg mov pushf pop stos test gs mov dec jnp cmp inc pop and mov lret mov xchg xchg bound sbb add xchg and xchg mov addr16 ss xorb sbb and adc insb xor stos add cmp fstl insl adc test ss les push iret sbb dec rolb mov (bad) jo ljmp fdivl jbe mov xchg add lret lods mov jns inc jae jge and mov add xor into xor mov (bad) in pop lods sub shrb scas jo cmpsl sbb xor dec sysret sub jo push fmuls dec shll pop xlat loop lds xchg push es xchg pop nop jbe aaa jb les out clc divl gs int3 mov add sub scas xchg xor mov sbb add shrd outsl (bad) jecxz outsb std mov (bad) dec lds movsl jmp or pop (bad) mov push inc adc jae aad das push and cli cmp jb fdivl lret push loope orb (bad) test xor pop add push mov xlat scas push mov notb stc and xor and aaa scas mov pop rcrb inc xchg inc mov fstpl lahf les cmp test loope mov (bad) sti rcrl mov sahf or jns mov pop neg (bad) shll cmp cli nop mov add mov pusha fnstcw sub inc mov dec les jle,pt cld lods mov push mov mov pop jecxz sbb xor push pop mov insb lea mov aaa je frstor push pop in pop xchg dec xor (bad) xor jae movsb popa jl (bad) cmp dec vpshuflw jbe jmp stc pop or inc xchg rolb xlat divb scas sub fbstp xchg nop pushf scas inc fs je lcall lods test mov ss imul push mov jg cmp xchg das (bad) pusha in ds imul or pop push cwtl sub rclb nop lcall outsl jo add hlt xchg sbb sahf data16 and adc lea and push inc jp emms push xor adc cmpsb mov add fimul push out jb pushf in sti mov aam aad and cltd pushl insl lds sbb enter sub and dec add sub scas xchg dec mov loope mov aad push (bad) xchg lock cmp pop pop enter lcall mov or pop and insb (bad) nop mov or lret into aaa loope pusha or xchg (bad) sub pop adc xchg (bad) mov loope cs and cmp lock sti mov cli std insb and loopne sub jp and pop or ret xor fisttpll jmp movsl loope xor cmp rclb adc popf mov in dec pop mov outsb std (bad) or adc out sub xor xor pop imul roll xchg fwait imul (bad) fidivl (bad) mov push dec out aas lock insl and pop leave add in rorb pop xchg ror mov dec inc out mov add (bad) js mov mov jl jg xor sub orb mov lret aaa int3 popf fcoml add xor mov cmp dec sub mov ficoml (bad) (bad) adc push aas push out cmc arpl pushf dec fld1 jns xchg pop sub adc jmp arpl ja aaa and xlat call ss add mov jo xchg mov rcr push stos negl mov cmpsb lcall push lods xor fmull nop jne xchg add or (bad) jmp in stos mov xor bound sub jmp scas add imull push xor pusha adc add mov lea xor (bad) mov lcall movsb or mov addb push pop adc cwtl jle adc std cmpsl sbb pop hlt push insb xor js inc fisubr xor adc jbe push fdiv push dec add push stos aam mov mov jno add push (bad) scas lods push sub sub cwtl ljmp or mov in mov sub jp adc lock jg inc rcrl adc cmp sub (bad) xor cli (bad) sbb push (bad) inc push cmpl rcll aaa pop fist popf push pop lods mov adc loop pop sub inc xchg mov in or add jecxz pusha xchg or jo div ret xchg pop call xchg ja lea and inc imul call cwtl icebp lea stos rclb sub data16 mov mov dec pop (bad) aam and nop cmp lea mov les xor inc xor or adc mov (bad) in jo out aad mov stos fisubl lcall adc pop aad out nop mov pop inc and stc jge xlat dec pop xchg fcom pop rorb mov jle (bad) arpl stos push test and inc add xor and imul mov xchg or shll rcll push (bad) out sbb or sbb sub add (bad) pusha iret pop jg and and mov stos shlb jns dec lret cmp cmp ljmp inc or (bad) mov jle lock mov test add mov dec cltd imul je adc mov mov jnp jmp mov mov scas adc int and add in test jne mov insb cs nopl popa dec xlat jbe imul dec das dec mov iret push sub repz or mov push mov jo mov (bad) or ja dec loop xchg mov adc sahf negl push inc lcall cmpsb jnp or add (bad) jle mov push mov adc dec int ja mov fcomip cs and adc xchg cwtl jnp mov push xchg inc shll nop out xor push mov test cld sub push sti movsl jge add sbb xor imul mov cmc push data16 and int dec push lock notb test sarl push out fistp push cli std dec jnp sahf lahf and inc sbbb sbb lods jo (bad) aaa cld pop mov and enter jbe add fmul adc push pop ret mov sahf hlt inc and add pop fiaddl add mov nop leave adcl inc jmp ljmp (bad) or xchg daa inc pop in scas pop int (bad) aam dec sub bound jmp mov cmc sbb in jmp ret int3 add outsl repz dec je loope cmp cmp (bad) ret add add lahf inc insl adc ret es sub dec jbe pop pop mov xor push mov (bad) cltd xchg into pusha adc je mov sbb in dec nop je,pt pusha out (bad) cmp pushf das aam add stc lret and and out sbb call enter iret lods in ss fisubrl xchg inc cmp imull mov nop mov jns (bad) nop nop enter popa mov loopne dec inc inc jp jmp adcb jle mov and (bad) js pusha mov fnclex ret mov stc inc bound pop enter dec inc pop cs arpl inc lret pop jne mov mov push clc sbb pop push cmpsb push add mov out xor fild ds (bad) repz fcompl jle int cmp xor dec or (bad) or or cli add jle inc stc cli or jbe or lds or mov ret aam imul jmp sbb cmp mov sbb dec das xlat test dec aam lds ja (bad) jb imul xor or sub call repnz pop jnp mov shll xor and bswap rol sub fildl cmp mov (bad) mov daa ja sbb and shrb push jne sub (bad) cmc xchg fyl2x jle popf add push mulb jnp mov mov push xchg sub pop movsb fnop pop push mov ss popf scas push jb add movsl lret add pop xor mov (bad) pushf sarb inc mov and aaa aam push add sbb sahf and sub std sahf insl sbb out sbb psllw orl popa inc in jg lret leave jae mov or fist xchg gs sbb jae mov push sar clc mov dec ret cmc cld fucom add or inc jns adcl xorl pop popa (bad) das xchg int add cwtl mov bound add lods mov lret sti sbb test out scas aam add jb,pn fisubl xchg cmp stos mov sub ja movsb add sub sbb xchg mov jno push mov xchg pop fistpll aas or popf lret jae outsb daa aas xor sti inc push adcb or popf xchg andl popa rolb pop sarl dec adc mov inc repnz movsl mov xor mov fisub bound cli mov in cmpsl (bad) mov call movsb adc nop jl jnp pop fiaddl and pop pop popf or nop pop sbb dec aad cmp cltd xchg push das xchg jns fild lcall popa pop fwait jmp xlat into int3 rcrb repnz lcall mov loop in rcrb push loopne incb loop mov adc mov insb xor in outsb xor mov sbb sub in cmp cmc and test pop adc test pop roll stos jge out test imul pop jb jne sahf mov or or xchg cmp (bad) xor adc xchg and jl mov mov clc push insl xchg dec popf test fdivl cmp push mov inc shl aaa fiadd jl or outsb adc lahf sbb repz test push adc inc or xchg (bad) pop and adc aas std ljmp sub fisttp sub daa aas adc and lret inc outsb dec adc lock pushf (bad) push fcmovu fnsave iret jne mov mov into push inc movsb int3 mov (bad) xor dec sbb mov xchg in jmp or idivb jae jle (bad) out (bad) bound subl cmp shll out insb (bad) pop inc jge ljmp out cli test mov jge loope mov loop xor xchg mov sub and or jecxz mov jb mov pop roll pop inc adc adc mov xchg loope sub lods (bad) js (bad) jecxz lds popa push cmp scas stos lcall (bad) idivb xchg lock dec push cmp int3 test sbbb xorl (bad) xor push mov negl push cltd les inc (bad) cmc pop push jo and dec test mov pop pop mov pop inc xor dec fildll ret xlat push (bad) mov pop add inc or hlt mov pusha fnstsw sub adc or outsb sub aaa or or cmp dec inc dec xchg stos pushf push adc out mov (bad) js mov sub imul mov dec cmp add cmp jecxz out outsb incl enter adc adc js cs popa (bad) (bad) fnop lods adc test push mov sub hlt aaa leave push (bad) faddl bound push adc loop in inc pop imul push sbb repz and ret sbb js cmpl sub jge scas call sub pop jg fisttpll shlb adc push cmpsl leave out outsl jg pop adc pop rcr dec xchg fiadd imul cmpb sub les (bad) push ss nop lods jge xchg rorl adc sbb movsb rolb dec gs xor push sbb xor xor inc mov ja mov cmp mov insb test inc pop lahf test xchg leave xor std cmp mov movsl or xchg push cmp sub push jne jg and mov icebp in sub jmp cmpb or orb add cmp dec adc inc (bad) pop ret shll data16 pop js xchg pop jnp and arpl lds xor adc (bad) xor sbb mov int3 jae jg jp sub ficoml popf mov jo test dec sub jno jns adc xor cmp stc xor sub or mov sbb les cmp push in cmpsb or add push fistpl add cmc xchg and xchg packsswb pop mov divl aad enter insl pop lods test js inc sar jmp dec repnz xchg repz sbb in repz je cmp ss push decb and repz and mov sbb clflush ret jmp insb sti ss hlt sbb test jp jo jle push mov sub mov pop (bad) push (bad) jle or inc leave call mov arpl outsb mov andl mov in in insl (bad) cmc imul mov test fsts rolb aaa sarl nop mov mov stc xchg fisubr mov push mov push add or scas (bad) dec popa cmp leave cmp clc xchg mov outsb xor push in mov or sub iret jmp lods mov adc sub pop pop lea sbb lea outsb (bad) sbb lds std pop (bad) mov fcmovnb mov xchg mov test or sub icebp xchg test hlt iret cli sbb add push dec lods fildl cmpsl mov mov or js mov jg xchg xor xor lahf add test addb popl sbb xor lcall adc scas sbb xchg test ja ret dec cmc xchg mov cmp and xor dec xchg and mov mov aad (bad) mov adc pop (bad) fisttp scas leave mov (bad) rorb push pushf jb and std cmp mov aam sti enter loope dec pop jae cld push pushf sahf je ret pop push adcb jge imul xor or lods and or insb mull jmp scas pusha icebp add cmp es fldenv xchg adc lds adc int3 repnz push jo subl dec inc add gs enter add out xchg icebp clc mov sbb xchg je mov cs mov mov push adc add and shr or enter lock pop int3 push cmp nop adc jbe mov pop sbb sbb cmpsb pop push ds pop pusha fstps fst les out cwtl pushf adc push jmp ret repz or inc xchg sarb inc push in jb xorl push test mov ret or xorb mov jno fnstsw inc pop out sahf push jecxz inc push sahf inc popf cmp mov push mov scas xor add popf mov out outsb pop (bad) adcb sti cltd dec cmp jle xor cwtl xor push push cld fwait push or jo out xor je inc or adc pop xchg mov shrl lahf test clc fsub push push cmp rcr icebp cltd (bad) sbb cmpsb mov ja orb sub mov inc lcall bound iret dec xor stc movsb and xor fadds daa push jp shrb pop sub test inc pop pop cmpsl lret mov push (bad) jo ds lods push xchg sub adc sbb or mov mov lock or popf cmp sbb in push add xchg data16 xlat inc repz scas xorb sbb push hlt cwtl push push xchg jo jns sarl fchs aad xchg fiaddl movsl dec mov ljmp imul jne mov test pop mov or sti adc xchg cld lahf popa shlb cli xchg loopne pop inc add sub cmpl dec dec arpl adc imul sarb sbbl leave dec arpl sub rcrl jl loopne mov test mov mov fwait (bad) pop loope fnsave cmp adc xor test push sub and cmp xor mov cmp or pop pusha push hlt sub lods jb lea dec push jecxz sbb movsb imull push jno sub push sti add (bad) mov pop stc xchg in and add divb in out bound push ret (bad) xchg dec (bad) js dec leave lea xor adc pushf lret negb xor test fdivr or ja lods or jnp les mov ljmp mov xchg sub mov rclb pop out js ret push (bad) or lret sbb adc jae sub inc push mov adc or push pop pop cmp push push add test push pop xor scas inc lods push std xor lods outsl mov dec dec in mov cs lret adc pop jecxz jae push popf inc add clc xchg push and adc hlt imul fs addr16 mov push sbb mov sbb in dec add adc xchg mov mov mov aam pusha divb pushl dec pop pop rcll fmull aam add sbb arpl add add pushl iret mov stos loopne mov lret xchg fnstsw inc push add loope xchg pop (bad) (bad) cmp inc xchg outsb outsl mov les or or sbb or or adc xchg (bad) repz push mov inc push push dec cmp push and clc pusha movsl sub ss ja cmpsl jns popf inc jns scas icebp xor mov ja cltd lahf popf lods pusha fstpl mov push push dec jg inc adc pop xor cmp subl add loop jb iret xchg dec xor dec stc idivb lods jno sub jecxz popf leave cmp hlt jne sbb xchg lods inc (bad) jp add push lea fstps jo mov nop jbe scas test sub and add add dec dec frstor xchg test mov leave movsl jge xor and adc fstpt clc dec clc mov ja pushf jbe mov lret mov push test sbb pop stc out and mov leave fsubrl test rcll (bad) out pop push pop dec (bad) aam jnp jge lcall cld jp sub je or aam sahf imul mov test xchg mov jnp out mov fdivr js fst loop mov lods je add lret lock call repnz fisttpl push in mov dec mov or or push (bad) jmp arpl cmp push fcmovnbe std hlt and pop add adc xor jmp fmuls sub push stc movsl jb in sbb jns loope cs mov jecxz and lds arpl daa daa repz repnz inc in test or mov jbe sahf mov int xor mov pusha push mov lea daa loope pusha mov cmp mov sbb adc pushf (bad) out add repz jmp jno scas lret push mov bound mov inc (bad) je notl xor mov (bad) adc repnz push xsha256 cmpsb (bad) mov cmc mov mov jb scas out cltd cmpsl dec adc add adc daa scas dec ret jae fdiv lcall ror nop imul fwait popf test and pop loopne adc mov data16 push inc cs and (bad) in daa out (bad) jae jg xchg into loop jp jnp inc aaa fiaddl stc push xchg push cltd pop mov cwtl mov jmp fistpl mov (bad) pusha jne test cmpsb dec xchg xor xor psubw pushf in in loopne inc fisubr xor adcl popa bound icebp ja jo jb ror popa mov dec mov pop inc sub xchg sti pushf dec xlat addr16 sub pop sub fcmove sbb pop loop and dec sub push jmp pop lahf sbb pop imul push xor fmuls sarb stos adc ljmp sbb push ret into mov (bad) in mov or scas push sub mov push add sub xor and call enter call or adc add out mov es mov pop sbb lret leave and ret jae add js in pop icebp pop dec jle sbb mov test mov cmc mov movb fmul inc mov add sti xor inc cs (bad) ret dec lahf or dec pop mov js (bad) cmc test xchg mov xchg mov jecxz pop mov ja sbb (bad) int or jbe jns ret test mov out mov daa int3 push jge les dec sbb pushf mov insb les lcall daa movsb inc imul sbb lahf mov inc xor cltd add out jecxz cmpsl divb pop push mov and mov stc hlt cli outsl sub out test lods test cld pop inc and nop dec jae test sti psllw cmp cs std insl ret or xor (bad) mov stos enter std es xchg cmp mov or ret imul dec adc iret jecxz in and xor (bad) adc in insl fcomp or in xlat bound int3 xchg sub and add test jne sub dec stos push ficomp mov cmp mov aas (bad) (bad) fsub (bad) jae out jo cmp pop inc cmp mov push ds enter mov pop icebp push push and test mov cs dec enter inc shrb popa and mov jmp pop inc cs jle cmpsl mov fisubl sub insl mov ss jnp mov cmp aam cmc xlat sbb daa add shrb outsb out and jmp cmp pop mov jno es out mov adc mov and push jle aaa jb pusha and icebp imul jns or xacquire sahf and sub fnstcw jae outsl add sub scas aam nop (bad) xchg ds jno lahf aad jecxz sbb dec repnz call loope dec add cltd jnp jb into dec pop add sub adc pop lcall mov out jle cmp ret push lea cltd fcmovne mov mov mov fstps mov push (bad) (bad) cltd xor mov pusha push sbb rorb mov test add mov ficomp stc fcomps jecxz xor dec cld aas push bound jg in inc ja jge mov lea iret js or xchg lods dec inc pop dec pop mov stc mov js out xor mov out ss and push icebp (bad) lret xor test fdivl jl push or inc fcoms fstps xchg push pop (bad) lods std (bad) fs xchg std icebp push pop test add jp out mov xchg dec andl les cmp call dec mov into popf les adc jo cwtl adc inc mov mov cmp dec fidiv test stc sarl loop loopne xor rorb pop dec mov sar and rclb lret jmp aam push inc fdivrl int paddusb dec out fcomps mov mov push shrl rcrl icebp les mov imul pop fmuls mov jo jle popl clc ss cmp imul push std movsb fs sub push and movsl cmc pop xor dec pop push (bad) scas inc xchg adc jmp sbb bound cmpsl and pop xchg stos orl rcrb mov pop mov push jle push into xlat adc and test dec inc mov aas leave cli (bad) fisub cmp sahf jno sbb sub push fmul (bad) lods idivl je jno pushf imul negl jmp lods and idivb xchg out fwait pop repnz cmp dec mov aaa xlat ss scas mov adc popa popa or pop adc sub lret negl fisttpll add mov mov ss inc pop sub adc out xchg push call fbstp imulb mov test inc xchg or xchg das insb rorl push pop inc cmpsl ja mov adc add mov mov scas cli cmp push lods imul insb es adc sbb (bad) mov xor movsb push mov inc xchg mov cs outsl push enter fistl loop adc push andl cmp adc sahf bswap lock out mov mov ljmp sbb inc dec scas fstl (bad) int3 sbb fsubl inc rorl pop inc bound mov pusha outsb sbb mov or cmpsl in mov dec adc fnsave lea scas shll pop lcall test jbe inc jbe dec sahf jge mov pop int lds dec jo jle out clc mov jnp sub or push in push stos out or test jmp mov les cmp jmp push sti and sbb sbb fs fild shr stc push stos sar mov sub cmp cs popa and push mov mov xor popf fist rclb inc ss xchg pushf rclb insb ficompl dec inc js dec call (bad) sti stos or push cmp addb jb (bad) push pop mov mov cli (bad) fdivl dec lahf (bad) leave sbb xchg pop fstl stos dec leave or cs adc sbb ret lcall shlb int3 sub mov inc mov mov cmp lret outsl insl cwtl add lret cmp cmp (bad) push es int3 and fwait inc jb mov fbstp sbb inc and cld sbb ljmp (bad) xor pop xor sub stos pop xor adc test jg push and cltd jmp pop jl mov mov sub push and push popf add (bad) movsb push sub xchg add xchg xor sbb xlat stc das repz and fcomps mov ror lods loope inc lret inc push rorl xchg xor cmpsb fild hlt cmc pop std addl lcall in cltd cld sbb aam xchg xor shll or xchg dec in negb in (bad) and out or push adc pop sbb cmp xchg adc cmp ljmp sub ds jp mov jmp repnz pop inc das pop in push std das jns mov lock test inc stc push push sahf daa xorl push mov int (bad) int outsl pushf or data16 sub dec outsb cmp dec clc (bad) adc mov jo dec mov int aas out adc lock dec dec (bad) or int3 and icebp in ffree sar jne outsb (bad) cmc cmp fwait inc out mov sarb dec stos std imul ret (bad) insb pop push ficomp cld mov push daa push jmp or xor and lock dec push inc insl jae jp dec adc pop add rcl xchg pop dec loope add mov jne sti clc test dec lock es cmpsb jo sub icebp fsubrs imul jo lds ja dec nop movsl add leave jae vhsubps lcall xchg sarb cmp orb or sub (bad) outsl cmp or or stos icebp ret mov test push loope xchg movsb scas push jbe ja pop rcrb aam repz mov mov dec (bad) js movsb pop fwait xor daa in xchg push ffree insb cmpsl xchg dec pop ss fwait push pop jmp mov cmp bound das in out (bad) inc (bad) and mov dec or mov dec lds (bad) jb push pop xchg sbb xorl inc lret and cmpsb adc lahf out pop xor cmp imul xlat pop mov jl adc mov (bad) aaa sti into stos dec push fcmovne hlt jb dec mov insb sbb jl xchg mov repnz adc mov xor clc mov push add (bad) in pusha xchg or xor add push xor cltd fsubs sub jbe xor stos pop xor or add je sbb adc mov mov cmp cmp cmp hlt cwtl mov (bad) cmp jg call push ret mov fwait rcl int3 (bad) (bad) jp sbb mov cltd fs out es or imul or (bad) fiadd cmp popf cli dec scas lds pop fwait or leave jno xchg shr pop shrl fmuls xor jne mov setl addb std dec cmc std loopne imul pusha xor jp fdivrl sti lock (bad) movsl mov add mov or fcmovnb out inc mov inc fnop fcoms jp nop test xchg xor push pop xor cmp sbb fimull lods fdiv test mov popf sbb test mov jp and lea dec pop hlt jmp jmp adcl adc mov or sub test mov jp outsb sub mov mov pop sub mov psllq dec inc imul test incl in xor inc lds sarb add loopne xor mov fwait test add and in mov lret movsl cmc dec inc sub cmp ja (bad) sti dec cwtl dec loopne nop out scas push test stos movsb mov scas jle sahf and call test movsl stos or lcall pop xor mov daa push js test push mov inc push aaa push adc pop incl push sub push test fs push mov das bound (bad) daa pop adc pop push mov es sbbb mov int int3 test xlat push loop icebp mov hlt fidivr add push dec dec addb mov dec loopne (bad) repz cld pop (bad) mov pushf adc sbb (bad) out dec sub lret pop (bad) arpl fucomip cmpsb sti xlat in movswl mov mov mov mov in and sti orl inc lock push mov mov aam jnp xchg loopne imul jns push mov adc pop roll test mov shlb repnz into jb pop xchg mov add sbb pop fdivrs pop push sub xor insl mov push and pop jmp mov cmp dec pop inc sahf mov mov dec xchg (bad) rcl jle push jo loope adc push xor cltd gs in test xchg fnstsw mov push js stc lds jno push lcall xor mov cmp (bad) xor daa movsl cmp cmp cmp jo bound ja lods push and xchg fisttpl hlt jnp lret xchg xor fcomip jle cld cmp lret loop movsb xchg (bad) sti adc inc fadds cmp lret inc adc fadds rorb cmpsb mov jle mov inc push daa (bad) ficomp in nop negb (bad) leave test jmp (bad) js clc jae rcll push xchg repnz int xchg rcl ds insl add fldl push push (bad) aaa add into pop mov aam cmp mov mov pop pop sbb push xor sbb es pop fcoms loopne mov mov cmp daa (bad) fsubl negb jbe dec dec cs arpl aad (bad) cmp pop int push pushf push shlb aaa cmp scas mov ss out stos and int sbb aas push xchg jns cmp out cmp cmp mov cltd inc (bad) mov (bad) xor cmc daa (bad) mov gs cmp test add inc adc paddd mov adc icebp cwtl sub outsb cmp bound inc shlb (bad) leave movsb (bad) xchg sbb stc cmpsb sub sti sahf leave and push sub xchg dec cmc pop popf aad xor nop icebp or jo pop inc mov decl inc outsl xor jecxz in imul (bad) pop nop cs pop arpl sub fsts jb xlat hlt clc xchg dec dec pop mov jmp dec jg mov aam out nop mov sbb sbb xor data16 mov insb inc add sbb jns mov mov loope push mov scas sti xor dec mov adc shrl inc popf push daa (bad) lock scas movsl cmova jne (bad) dec push into sbb aas jl aad sbb jae sbb xor sbb jno xchg push in mov push xor xor outsb pop jbe and adc sbb xorb sub fmul fucomi mov or test push int in ss out fcoms mov mov inc sti cs dec sahf pop jge lock enter iret add xchg pop add dec mov push and fisubl rclb fistp test fcoml ret xchg cmpsl dec mov out (bad) cmp or imul lret jg dec dec divb mov mov push nop dec nop out inc xchg repnz mov (bad) rcll jo xchg cmp fimul (bad) mov sbb pop jg test xor bound add and mov cli mov hlt lcall fldt in ficompl push mov mov dec cli cmp loop xor sub jne mov test stc dec repz cmp push ss pushf mov (bad) (bad) jae shl movsb mov xor dec outsl lret sbb js fdivl adc mov sbb popf add xchg cmp cmp into mov xchg dec cmp cld mov std outsl mov sbb test out arpl fwait inc inc insb ljmp int aam cmc (bad) cmc dec ds imul nop sub fild movswl jle shlb xor push (bad) (bad) jno add and std jae ss mov insb clc and fnstenv cmpsb jb sahf jle jmp push cmp cmp je sub leave js cmpsl adc jl jmp outsb push sbb stc sbb mov repnz insb loop,pt fwait aad decl xchg movhps (bad) stc dec sub clc or insl (bad) int3 dec (bad) adc int3 sbb fucom and out orl popa jbe in jnp fs inc dec sub xchg jle push mov stc and jmp cmp xlat cmpsl test pop adc iret xor (bad) pop push sbb pop mov jb outsb dec dec add mov add push push inc daa ljmp cli sub or arpl cltd in add mov mov mov dec adc fadd jns aaa cld add scas push (bad) mov sbb and fchs xor add pop sub incb xor in lea (bad) jge ret fisub loope push (bad) mov push lret push scas loopne ja xchg dec mov fnstsw push mov inc jge rclb clc or (bad) movsb notl out lret stc ja test mov mov inc pop adc je fcomip clc lcall jecxz fwait int fwait shrb push xor jbe jbe or sub jns sbb imul shrl in js mov loope xchg jge insl loope lods (bad) mov (bad) and dec jo mov pushf dec push (bad) xchg jnp add sub and push mov clc lods dec pop adc lods loope dec ret imul outsl pusha shrb xor ss fidivl add push mov dec mov push dec pop js mov cs (bad) mov sub sbb jl mov int3 xchg jnp mov xchg xchg push adc xor jae nop mov xchg ret xor push or xchg mov movsl pop ret add xorl xchg lahf cltd or xor mov mov mul iret jp sub xor pmaddwd xlat fdivrl dec mov mov fbld data16 dec iret aas inc inc data16 js mov inc add ljmp xchg cmp sbb ja push jo stos cmp (bad) xlat pop push pop cmp lret mov jge push idiv or jl (bad) out mov jg sub jl xchg inc popa insl push pop outsl jge ret jmp ss sbb cmpsl pop arpl sub cli xor ret jae js test dec scas adc add cmp jg push mov or add mov fwait jno mov xchg inc fwait scas insl out push (bad) mov das and enter add mov iret imul stos test mov arpl std adc mov sbb mov lret cmp jnp (bad) xchg add push in fisubr pop loopne mov pop or pushf pop xlat inc (bad) xor imul lods sarl xor ret jecxz data16 in dec lcall mov arpl add cltd or movsb rcr mov ficomp mov ljmp test arpl or popf nop add push cmpsb lods cmpsb and mov xchg or mov sti enter enter cmpsl mov pushf push lds jle fs stc xor outsl ljmp mov xlat iret ficomp nop rcrl sub (bad) add int3 decl orl iret xor inc fild (bad) adc cli icebp jle mov xor cmp sub das cmp ret push insl xor adc lahf mov leave or gs jge popa sti stc rorb jne loop add cmpsl jge out sbb stc cmp popf mov sub loop std je and cltd pop (bad) push cmp adc jmp or repnz cmp fldcw push loop and adc int3 scas or loope cmp jmp negl mov push ljmp xchg push fdivrl outsl sbb fwait add outsb int roll lcall pop or lcall out shll lcall or (bad) sub daa sbb les jns iret mov test out lods test fucom inc mov mov mov push enter jmp ret sub daa into shlb adc mov rclb jae and out pop scas sbb subl mov sbb fildll shlb and sti jle in out in mov les enter cmp in mov (bad) or push movsl xorb pop in repz roll fnstsw jmp cltd jmp imul cmc mov mov xor loope mov jns std sbb (bad) push cmp iret out insb pushf icebp sbb mov (bad) lock lret adc or int xchg jne pop ffreep sub mov inc subl (bad) (bad) xor mov ss call dec testl cmp data16 sbb xor lds sti mov cwtl in jg inc inc jmp bound add cmp pop int3 fldcw push lcall fmuls out in pusha ds mov bound add aaa dec daa pop add mov dec xor cmp iret jg rorb sub ret xor adc push cs and mov out cmp shlb pop sbb sbbl scas sbb jmp mov or stos jmp mov arpl xchg sbb push aaa fidivr imul fnstsw stos imul scas or mov mov (bad) fwait shll fldt and jb test push fisubl imull xchg sbb xchg pop adc out mov jp shr roll pop cmpsl adc je mov lock (bad) loope adc repnz mov hlt lahf jl pop mov xchg (bad) out add ret cli push jb xor in dec loop enter gs mov shlb sbb adc ret inc pop mov enter dec mov repz scas xor daa mov daa cmpsl xchg jge mov inc or jbe dec clflush xor cmp and dec fucomi aad jg cmp imul std cmp jp inc fcmovne lret and ja cmp or ljmp lds dec sahf in push and push fsts push aas sti pop mov rcrb add out mov pop push mov fadds std push hlt pop jno xchg adc and inc leave lret mov push incl lret cmpsl fwait and loope push ds aaa inc mov xchg mov mov cmp insl adc sarb rcrb cmp push pop into sub (bad) cmp adc dec insb rolb xor repz mov push jnp inc es sub adc xchg inc sahf stos xchg movsl lock push adc cltd mov sbb repz and scas stos in (bad) xor pop cmp lds sub jmp aas mov lds mov cmp cwtl rorb andb js (bad) jb or push pushf bound cmpsb daa out flds in ret (bad) mov sub sub xchg sub popf or pop mov fidivr enter jno scas sti arpl adc lods xchg mov mov loope iret outsb pop shrl pop or sub fs in lods addr16 push inc popf or scas in std jmp aas mov iret out or out xchg xchg xchg mov adc aad fs stos es mov add jns dec adc add xorl and push xchg mov push rcrb andl xchg dec or enter rcr insl loop daa aam jae push cwtl ret adc lock cmp and cmc or jecxz rcrl idivb and pop xchg adc int push sub xor sub in and or mov loop mov cmpsb fwait or add dec pop fwait mov pop mov rol dec mov sarl mov xchg out lods dec pop js roll pop or add ret xor test xchg push shll inc fsts mov xchg jg add cld add inc add mov push dec imul outsb cltd packuswb xor jge scas jo clc aad call or shll loopne pop and aas pushf mov xor arpl jae dec das dec imul push das inc jl repnz imul aam mov mov jnp arpl out lahf cmp xchg adc inc nop inc popa clc or mov dec into sub int3 dec and insb adc adc lea jmp xchg push push add sbb inc inc out adc dec inc out push push data16 jle je and jp add jecxz xor (bad) lods jmp iret mov in mov and push pop ss arpl pop sub jbe int3 inc pop out inc lea fist (bad) (bad) je and test and lahf je sbb dec dec mov std sbb mov sbb or pop push dec jb out imul (bad) adc int dec andl hlt adc (bad) mov cld dec push outsl lds inc dec push adc dec cltd push (bad) (bad) outsl into icebp jb daa lcall test sbb jbe xchg jns xor inc mov cmp aam jecxz jmp iret int arpl and mov xor nop dec push jecxz (bad) pushf (bad) xchg in mov leave das adc aam cmp xchg sbb stos adc in hlt sti fs iret cmc lods push out (bad) mov fsubs fdivrs (bad) or gs pop dec adc pop push xchg jl rcrl cltd (bad) xor sub stos out sbb and ja add sub jno sub mov fnstsw mov pop je int xlat jno mov push xchg mov out jnp daa addr16 cmc aas imul test xchg jmp lods jno sub sub mov pop pop xchg sti pop push cmpsl dec sub lea je loop push push fs cmp mov mov or sbb loope mov hlt pop aad adc repnz mov adc int3 pop cld or mov pop movsb fnop stos adcb aaa stos insb roll push mov xor sub push lahf sub sti je inc or inc imul in test stos loopne xor push or push jae loope incl dec cmp sub test ds cmp sub xchg push insb sbb and mov repz loope dec fidivrl sub adc scas (bad) sti pop les (bad) ljmp movsb sub cmp (bad) sarl cs mov into pop xchg pop loop or jae inc test imul mov mov xchg (bad) aaa mov repz cmpsb add orw das adc test iret aam fadd aas jnp data16 ljmp (bad) hlt mov imul stc enter dec cld ds xor test inc test sti pop pop xchg dec adcl xor out cmpsb add movsb jle add xchg (bad) jp xor adc xchg adc pop add mov jo jnp xor in dec (bad) adc adc test jmp inc in mov sub popa dec push lds and int push mov pop cld push sub inc int cwtl (bad) pop or xchg lcall sbb lea pop (bad) fwait sub mov xchg sarl cli pop jb add pop sti test mov int lea idivb jl les pop add lret cmc ljmp cmp data16 das jl in clc das pop jns fs stos push ret mov xchg out data16 sbb mov lds adc popf out ret inc xchg std jle dec pop fwait push fcoms rolb and scas int3 jecxz cmp popf mov mov movsb lds stc push mov int3 hlt insb add jp movsl testb xchg cmpsb jp xchg test inc jo cmp sbb push int inc jns (bad) cmpl pop mov fstpl mov jp cmpsb ss call aas jns mov aaa mov inc nop into out pop push xchg out add or jmp clc push inc js addr16 jl mov adc (bad) fidivrl inc xor add shlb test fimull push loopne pop leave stos das xchg mov dec mov mov sub idivb jne mov lods jbe jo add rcrl aam mov sub ljmp in xchg outsb jp jo cmp cmp stos and dec std icebp incb dec jo or push loop mov mov int3 sub push xchg rcl outsb pop aad inc rorl sub sub arpl mov sub fnstenv (bad) xchg lret (bad) icebp cmp mov jl adc mov sbb (bad) popa inc dec cld hlt fisubr mov sahf in mov in or mov mov push jecxz js out cmc je test (bad) (bad) mov in cli idivb adcb adc jne adc add add ljmp test and xor mov jno unpckhps adc add and add je aam xchg aad out (bad) ficoml stc repnz iret int cmp out pop jl xchg pop and adc mov out jmp dec add jbe pusha push or pop shll loopne fisubl or lcall fimull mov mov cmp loopne das lods test (bad) test fimul lock out js shrl negb push dec mov sar cmp packssdw fs xchg dec addl leave jle call imul adc addr16 lds jmp or enter push imul aaa fucom xchg xor aad and mov jno jge pop call fstp sbb rcrl (bad) sbb aas xchg call andl mov pop push daa imul mov mov call mov pusha push cld adc inc lock pushl jns mov add xchg lock add or xlat jbe icebp negb mull sbb adc inc je mov adc loopne test pop mov or cs pop loope pusha xlat iret jae and loop dec outsb in jecxz sub addl lret mov lock lds das sub cmova out push jne pop andps lods pop dec sub cmp pusha sub icebp lods push push push stc icebp inc ljmp in jae mull mulb iret mov sbb mov jne cltd dec fsts dec xchg inc sub inc pop ret dec sub or xchg enter scas ss test xchg fimul xor adc sbb call and push inc sti aad aad inc (bad) mov push add mul mov lods scas pop flds or push pop call je pop in mov jecxz (bad) sub aam jo pusha mov xchg ret mov push loopne out ds mov or pop sub or and pop cmp lahf lods gs fwait sub add lahf jle xor inc xorb andl stc dec (bad) (bad) fisubl pop pop dec lahf clc ja push fistpll ljmp mov mov pusha add and ja les int rorb fwait xor les cmp fsubr xchg inc insb dec mov xchg push add and mov les xchg add and xchg pop sub push rcrb repnz stos stc jg or in es into push in xor enter jmp cmp mov push mov or jb push xchg fs jp test (bad) shrl dec fsubrp mov sub leave icebp mov (bad) inc in lcall sub adc movsl outsl jmp movsl out pop sub dec mov (bad) jne mov cmp pop js cmp inc lock movsl lods je ds lods cmp push ret fisub das jecxz add inc xor and add rcrb lods bound movsb popa mov sbb mov rolb aam and sub test test add mov sahf icebp scas adc and push stc pop les stos xor xchg scas fs pop jge cltd mov jne add cmpl in xchg dec jl push push ret inc jge xor lahf cmp ss int3 icebp js adc psllq loop xlat mov dec cwtl test out nop fnstsw aas mov mov pop clc mov out push insb adc cmpsl sahf outsb add jg dec xor pop jb push mov (bad) shrb inc sbb test push mov jl aam pusha jmp cltd cmp iret xor fcoml push xorl push dec sub test sahf rcl outsl pop mov xlat test add subl inc (bad) fs lahf inc jae das cltd jg mov add ret xchg and push frstor pop repz mov scas pop push outsb (bad) adc aas push ret pop sahf mov mov fwait sbb ret push inc jne mov lahf lret jnp xor lret mov xor fsubl mov out aad shr or xchg cs cld xchg mov xchg loope scas mov sti mov xor leave mov mov not cmc jg mov je out stc mov (bad) cmp loop add mov jnp int add daa lret sbb cmp test mov loopne cmpb cmp cmove leave aad fdivl push mov clc pop movd fdivrp mov lods test fistpl pop mov and add (bad) inc xor mov fdiv int rcrb or jge pop pop mov ss ret push sbb imul fsts insb sub mov in jae in cwtl xchg dec std push push gs add movsl dec adc rolb push orl loop or or das push rorl fs js add adc cmp iret test pusha xchg adc inc and int3 repz outsl fiaddl es out adc loop shlb cltd fnop adcl sbb movsl mov jle movsb loop or sub fcoms push adc fwait loop mov sbb sub push sub adc outsl pop jb add in pop dec xchg mov (bad) int push sub xor ret je insl cwtl and xor jl jmp fisubrl cmp stc sub das add inc or add mov cwtl and jnp pop inc (bad) aaa (bad) adc (bad) add mov xchg test ss xor out jo daa mov ljmp cmp mov fs sub add nop add sbb jp out push and outsl fisubl out imul push sub lods pop sbbb loope mov shlb ret jle add push (bad) sbb into enter cmp jo movsb xchg xchg xlat pop mov ja outsb lret stos out dec loop rcrl sahf mov test test outsb inc sarb sub cmpsb mov int3 push andl push push adc scas movsb (bad) insl push push cld jmp jno mov data16 loop adc jle sbb rclb fsubrl pop jb mov loope cltd jns jbe sbb mov mov in int jle ja lret mov adc sbb xchg xchg insl cmp cmp xor inc movsl push xchg mov inc inc stos mov or int3 insl mov dec xor adc es test lds je clc xor jns imul xchg int bound insb pop xor (bad) int mov and popf into ja out aam lahf fsubrs push stos repz push mov movsl adc mov xlat jb lahf dec insl into mov cmp mov mov pop bound mov inc xchg sahf push and nop out adc inc xorl push mov pushf les in xchg fcoml in jno add std into ja sub adc rcrb pop scas test incb jmp andl xor call mov lahf xchg mov jo imul inc sbb inc fldenv add dec push jge cli in fistp sub dec ret ss (bad) fsub stc adc fimul or aad aas jno pop mov jns fmuls pop push xchg es jns outsl sub mov mov (bad) int3 mov scas scas into xchg inc cmpsl cmpsb cmp pop jmp xlat mov nop and loope repnz inc mov inc jp mov mov xchg lods fldt aas (bad) mov mov in lahf mov loopne clc fldl sbb sbb cmp add mov dec push inc and movsb mov js cmp pushf aad aad std push loopne xchg cwtl mov mov pop mov xor cltd mov lea dec pop mov mov std ja aad outsb lock jns rorl adc dec in mov ficomp add mov inc xor lret xor push shrb dec mov (bad) jp lock mov add aas adc (bad) testl pop cwtl push (bad) xor jmp lock jae or jp add and out stc dec mov shrl push xor addr16 aas insb lea shr or mov sbb fwait ljmp jbe xor lcall int3 inc insb mov adc aas or or in test sub xorb dec add imul std fstpl daa push das xchg aad push fsts (bad) mov mov pop add cmp lock mov cmpsl mov mov sbb (bad) dec std je outsb pop scas addr16 sbb pop jmp adc cwtl scas jle push pop cmp stc cmp ret (bad) or push pop cmp mov sub push ret pop enter pop ljmp pop dec or out cmp jo mov jp mov je dec (bad) and cs xchg inc mov sbb into mov into cmpsb ja sub push cmp leave cmp or outsl mov xchg enter mov inc leave pop call mov adc jne xchg mov push dec lcall xchg inc jle ret pop push sti ss pop je in out mov mov (bad) in add xor cmp stos dec (bad) in sub enter loop cmp scas xor sti jbe adc mov pand in mov incb sub hlt add ret inc aam fstp js test pop sahf sbb gs ja sbb push jl pop adc leave int add pop push pop (bad) sub stos sub cmp mov xchg aam loope adc movsb dec mov stos cmp adc mov push loope sti sarb push gs lret ss jp,pt and sbb dec or in cmp fidivr adc adc jmp mov xor jge inc fcomip push mov add sbb adc push sbb shr mov xchg mov sbb mov dec enter jno je addr16 repz out or inc arpl xor sbb pushl jb xchg cltd add mov lods cmp inc (bad) mov mov push arpl nop lods or or int dec push (bad) stc ret cmpsb add add psubusw pop stc jae test push mov lea sub popf mov loop (bad) repnz sahf test xor outsb call push dec jmp xchg (bad) jo mov out add fstpl stos jge inc pop xor jecxz cmp add loopne andb pop push call imul jb dec jb sub adc popa xor xchg adc push in push xchg (bad) cld outsb cs rcrl xchg dec push daa jle jle insb inc sub cmp call and or (bad) adc jno movsb outsb pop or lret call add mov fbld jo push outsb loop fiaddl inc mov popa daa sbb mov and push fs and pop fsubrl out fs pop clc sub (bad) in sbb add incb divb (bad) sahf in into pop lret inc add xchg in decl jg aaa and adcl pop add and jg fs or jno int fstpl cmp and sub xor sbb mov ja add dec scas fnsave (bad) and arpl jp fwait cmpsb mov insb fisttpl aaa mov dec mov mov clc adc repz add out sub pop cli pop jecxz aas scas cmp xchg popa jle in (bad) xchg adc push addr16 fdivl mov aam imul dec enter stos jmp ret push test std mov fidivl mov in jbe ret out js jle mov push sbb cltd sub mov sbb mov or inc xor jl jmp jecxz ret ret stos cwtl sub mov cmc ficomp adc sbb fstps jae cmp imul fbstp mov xor mov add jb pop cmp dec leave inc inc or mov push add rcrb or pop pop or lahf cwtl dec mov push ds xor mov js adc movsl pop ljmp mov cs stos and inc add in js pop and aad out loopne jo pop sbb in jmp movsb mov mov lret repnz xor adc xchg sbb sbb sbb mov pusha or or xchg movntq cmc lods les push sub bound jne pop ja cmpsl sbb clc cmp in movsb scas sub push invd and sub mov xor lock test int mov leave stc mov mov jo std sahf add mov dec jl out lahf test mov sbb test pop push data16 jle test jge xchg xor mov pop xchg das adc imul mov sbb or popa and insl dec rolb mov cmc movsb or aad sahf lock rcl je pop nop test cmp xchg rorl ja sbb jle sbb cltd xor in dec sub inc pop call dec adc mov int enter and lcall aad dec lods imul outsl leave loopne inc mov cmp int3 insb jmp addr16 imulb test scas jp leave cmpsl pop xchg sbb imul adc mov cmpsl lock loopne xor pushf out fdivr scas push xor mov (bad) cmc jmp add and aad scas adc cmpl push jle loopne xchg xchg sub repnz xchg push inc je inc in js (bad) mov cwtl jl,pn outsl pop pop xchg pop xchg pop pop bound (bad) (bad) push (bad) xchg jle jmp mov inc in sub adc cmc inc fsubrp inc movsl mov imul push ret lahf push jae jmp sbb mov fld mov loope inc xchg mov test insl ret ds (bad) sub sub jae,pn aad adc cli mov (bad) xchg jo in dec cmovne cs (bad) loopne xor sub mov aad or push cwtl mov sub fcmovnu jl lcall int push cmp fisubl mov sub jge mov sub repnz jl cmovbe cmp xor push xor and (bad) cmp dec dec ficom mov in scas push jne inc pop daa call cmp xchg int3 and push dec dec neg dec imul scas test loope ret xlat addl in shr into or lcall fstpl mov cmp jb pop inc outsl pop outsl idivb sbb test nop enter sbb sub inc fwait popa push nop jo cltd adcl aaa test lods outsb fwait xabort sub or jle inc cmp xor sub inc js imul xchg jp pusha dec test adc cld jae rcrb dec dec dec loope push dec stos mov adc cmp sbb adc adc cmp fbstp (bad) cmp add shrl add push in mov xchg jae pop enter pop repnz sbb sarb das sub out add inc dec nop cmp mov call jl stos jge push test aas xor aas mov xchg ret push mov std add ret mov jo mov fs insl push leave nop cmp jmp xchg xchg rorl (bad) or mov pop fisttpll in cltd repz fnstsw ret push mov into xchg loope mov in xor stos push call cmpsb xchg mov mov outsl fsubrp mov pop cmp stos sbb jo push cmp jmp or xor pop (bad) (bad) and mov mov pop dec aaa cwtl mov gs mov and sbb adc mov sub es cmp (bad) jno or jmp outsb xchg adc cmpsb mov or xor sub cld or mov adc mov add and dec lods movsl (bad) and adc inc sub jl xor xchg cmp mov dec mov repnz jbe movsl or dec lods sbb or xor pop push and in xchg dec mov pop push jbe push lock cwtl mov mov ja sbb test stos dec scas ja dec lret subb bound xchg push out pusha or and lods mov popa pushf int dec dec fisubrl xchg mov stc popa dec cmpsl stc and loope jae mov lcall aam in or mov ss out sub xchg mov push std push in clc mov (bad) (bad) cmp push rorl sbb xchg es arpl in add push dec rep xchg add or mov mov test std add jno cmp in push sub mov popa pop inc test in repnz decl lahf pushf orl pop push test jge cmp std mov clc rorl aad jg idivl xchg pushf insb ds sahf jle adc out pop jmp xchg sbb jns loop sti pop (bad) into out cmp test dec arpl arpl aaa xchg cmpsl sub push stc pop fcmovb movsl inc fist cs xchg sarl shlb xchg push dec mov fcompl (bad) aaa icebp fistl add mov out add out enter (bad) je sbb call (bad) (bad) mov sub push mov bound lock subb into xchg aas push outsb daa daa in stc cmp outsl sub mov es adc xor inc je and lretw lods pop jl rcl pop push jbe or adc lods stos sbb aaa pop scas pop pop jno loop jge sub pushf push repnz pop mov sbb out and mov daa add mov loop add push js inc fdivl jecxz roll nop jb mov out mov outsb jo out fnstsw roll sti in sub arpl test push cwtl push je jae push push cwtl inc inc cmpsl lahf pop hlt push inc movsb mov aas cmpsb (bad) jp xchg pushf flds inc andl movsl mov push jg push xorl mov rcrb cmp inc mov inc leave add mov or xor cmp sub imul shlb pop add arpl insb mov and cmp js scas out pushf adc pop push in mov imul subl pusha sti ljmp adc out xchg idivb dec (bad) mov inc push test sbb rol add sub daa xor push xchg inc mov icebp das je jge and dec sub jecxz ret and dec rcll (bad) fnsetpm(287 jnp shll iret and popa sub iret xchg cmp pop mov subl call fsubrs dec mov addr16 jne lret dec int xor dec rcl hlt aas or out or mov jbe and cltd mov xchg xlat test sub mov movsl popf adc in lods adc jo pop jmp sub push inc pop dec popf fsubs jp mov pop jecxz js and loope and nop mov xchg jecxz popa (bad) mov mov scas mov fdivl push ljmp rorl pop pop js cmp dec jno jp ficom insb xor and aam fistpl adc pusha popa fistpl fwait (bad) jmp or add sti push fldl (bad) popf iret or inc jl mov es ja jmp fnsave mov adc jae dec (bad) je imul in pop rorb in mov mov cmc daa cmpsl dec mov fwait les bound mov lock mov (bad) sbb xor sub fmul mov cmp dec rcr push stos jns stos les out dec mov scas or inc out (bad) pop arpl or cltd ljmp out dec cmpsl push (bad) lret test jle push mov mov pushf ret hlt rcll sbb mov (bad) jecxz mov pop dec mov mov (bad) andb test icebp nop lcall push movsb mov out xor cmp fsubr imul pop (bad) fbld cmp int3 sbb cli idivb (bad) pusha sub int clc movsb cld add sub add cmpsb pop lock jmp fidiv loopne mov ja push inc cltd or push into and fstp sub cmpsb int mov mov sub (bad) jbe dec (bad) aaa jp rorb sbb insb jmp inc xor jg in (bad) in aam clc andl jns jg js std das and and add hlt int3 mov mov and cmp mov call jb test push xor cmp lret sbb xchg sub shrl nop aaa jns rolb int3 dec dec add push (bad) and js sub aam jl sub dec imulb jmp out aaa mov mov (bad) rolb sbb dec es ret pop jnp push fist inc push sub add or int3 lds dec int dec mov inc aas pop jae jg js xor (bad) push daa ret push divb xor stos iret mov cmpl popf mov fstp int3 imul daa bts hlt mov or push jns adc xor vshufps mov mov loop mov pop xchg fsts hlt push rcrl adc pop lret scas rcrb (bad) out xchg adc push (bad) push inc push or call lods (bad) sbb adcl or int hlt or cmpsl loopne (bad) sbb lret xor inc mov pop ret iret jmp test and or je inc es lret test xor lret ret xchg stos fdivrl faddl mov notb pop mov repnz mov adc mov cld cli je add pop aad in xor jo push movsl (bad) push and xchg jg pop scas mov xor jnp jge movsb xor lods cmp pop xchg rclb mov fidivl imul mov dec dec dec inc pop pop cmp dec iret (bad) pusha xor dec test out mov push sti or lcall mov test pusha sub cmpsl mov lods je inc shrl sbb les cmpsb adc mov faddl leave or or pop int3 sbb pop pop jb cmp push lods dec enter pop inc enter push dec movb icebp jo loop add ss push add gs xlat addr16 push aad fwait test jbe popa inc mov jbe out aas ljmp dec insb or add mov (bad) lahf imul dec cmpl cli ss and hlt hlt insb fcomp jno jle ret push outsb jae jge fbstp scas fs xor dec dec jnp pop rorl jae fsts pop xchg push in mov ljmp fcomip inc out jno movsb mov cwtl in and mov test jmp inc (bad) (bad) gs cmpsb inc mov (bad) jg jo push jne dec outsb clc clc push pushf mov aaa inc mov fs jb lahf mov out fsubrs or adc int push scas jmp push mov push jno push mov (bad) pop pop mov addr16 jge out cmc int3 out fnstsw mov hlt pop adc jge ljmp bound add insb ja xor lds fsubs loop mov out repnz xchg mov orl stos mov cltd fcomp test adc imul (bad) mov es outsl ud2 and sub mov mov add jge enter loopne mov mov inc cmpsb sbb call loope jo sbb loop xchg leave inc xor push xor add mov lret cli (bad) pusha mov pop das jle cmp stc adc loop ljmp stos push (bad) daa push out xchg rorl sub cmp test stos push out arpl into inc xor bound out imul mov sbb or (bad) jnp leave mov mov dec mov cs shrb cmpsb sahf pushf dec es hlt and stos cli mov cld cwtl scas aaa mov gs or inc imul xor push push push mov fwait aam das pop jnp add jns push cmp in (bad) mov in mov add add clc ficom xchg mov in dec push popa insl std mov shrb xchg aas jo mov or push popf (bad) ljmp cmc push xor neg je (bad) mov mov and lods ror cltd (bad) push mov mov dec or or stos push mov xchg jb cmc ja (bad) mov push or mov push inc xchg jmp loope (bad) mov addl loope ss cmc stos into cmc inc or arpl gs pop pop mov js addr16 xchg and fild sti stc popa xchg push mov lcall lods push das (bad) scas jl mov test loopne sub popa je cltd xchg xchg sbb int mov pusha xchg insb inc movsb cmpsb cs cmpsb and int lret xor cmpsl push jae xchg dec enter mov jle sahf gs xchg cltd insb sub enter ds jb js movsb inc dec mov aaa fwait ljmp rcll shrb pop push pop (bad) xor mov repz jmp fs daa lret ja xor add sub jb add push pop pushf add out mov into jle fistl sbb xor dec pop lock and add adc adc jmp and fs ds and (bad) push adc in insl shr int sub jns fcoml xchg push dec test xchg sub inc dec jp jo sti xchg out mov jno shrl jbe pop push shl adc subb sub xor sbb mov es icebp add mov add in std in repz in or mov push out shr jp cld insb leave or lret clc sub mov jne mov out push and pop sbb in dec inc cmpsb pop mov dec mov jge fnstsw outsl mov add mov push cmp cmp movsl mov insl inc pusha incl adc test cli push xor insb (bad) dec lds fsubs bound clc and (bad) inc daa and xor addr16 dec mov addr16 sub popf mov icebp icebp push mov jl push lods sbb pop fsubl sub lret cltd cld cmp jmp pop int3 and ret scas pop lock cmp mov jae orl lret andb lcall popf ljmp aad mov ljmp (bad) sub mov push stos enter jo xchg or sub ret fnop sbb lret push mov fidivr jbe push mov xchg adc int3 mov (bad) jge insb mov xchg dec fs cmp repz mov cmpsl lock xor popa decl gs cld (bad) xor push pop or xchg mov xchg pushf ret pop sub js pop test sti jp and lahf decb or lret push aam mov mov sub mov push mov lods movsb mov jmp mov jb dec cmp add stos adc mov xchg jnp mov mov pop xor mov cmpsb pop jmp jg push stos push pop jbe pop loop aas dec xchg or aas icebp push add repz add adc and out into mov arpl dec mov std (bad) shll mov adc pop frstor adc int (bad) xchg cmp and pop cmp jge mov hlt fisttpl dec mov cmpsl pop test sti dec loop xor stos repnz sub scas xor and xor pop sbb add xchg add xor mov fwait lea xchg add jns mov aaa aas pop hlt adc push in pop and mov sbb inc movsb lds js daa adc (bad) outsl and xchg add xor mov sbb mov mov adc pop dec mov fstl int3 int3 into xorl inc sbbb ret sub add sarb push xor sbb fsubl divb lcall push inc dec ficompl leave lret add push negl loop pop ret les adc pop jg pusha cmp adc jmp lock rcl cmc push inc std add jnp add (bad) sub fwait popf jmp add sbb dec push inc nop cli cs sbb and loope movsb jge mov sbb rolb gs mov mov push in mov sti adc out hlt mov add (bad) add push sub push cli xchg fstl mov lahf (bad) div negl push adc repz jns and add inc fbld in pop push ds rcll ss jp iret inc sub daa push push jg fisubl in aas or pop push insb ss and sub cmc enter mov enter pusha (bad) dec xchg imul xlat cli sahf lret cmpsl mov mov leave cmp shl jp lea sub cmpsb fldcw push and cmp mov jno pop and (bad) std in out sti into jbe pop mov daa pusha adc adc sub and mov outsl push adc inc mov mov pop cwtl js int3 adc pushf lods and repnz jl mov test mov jb pop push sbb insl jb pop ds je fldt dec push sub pop movsb (bad) xchg aas test test xor adc pop inc xchg das (bad) sbb xchg mov in ret sbb sbb cld (bad) cmp lods push aas sub push push cltd mov sbb gs push sbb push jl xor sahf ficompl test mov mov sub loopne mov bound and rcrl push in push pusha cmp outsb inc punpckldq lds out add scas and lock outsb stc bound (bad) fucomp cmpsb movsl out ret sbb nop dec xchg push hlt mov daa cld mov fnsave mov ret (bad) cmp xchg xchg (bad) outsb cmp fisubrl ja inc ret into jnp add adc je ljmp mov insl pop in cwtl (bad) ret (bad) fnop lcall inc mov mov mov xchg mov and push daa jecxz mov jb and xchg jno or test adc mov jge iret adc out rcrl es jp insl pop dec push sub xchg sub xchg decb or shlb test cwtl xor rolb mov push and fstpt jb fstpl add mov xchg (bad) jp add imul imul mov lods push nop leave in jne repz icebp cmc xchg or cmp dec fwait adc mov jle in bound lcall cmp adc mov jmp in dec imul repz cld (bad) mov and inc dec dec inc inc fs and rcrl cli inc jne xchg sub scas insl push adc loop jmp cmp fwait jl insl mov (bad) cli sti push dec jl (bad) incl (bad) sahf cltd cwtl clc adc fsubl sbb mov xchg nop push ret inc xchg xor fbstp pop rep push movb fucomip aaa int inc loope inc jg lret dec add sbb push fpatan push xchg rcr lcall lds notb arpl cmp sbb sub push inc jg mov adc xlat nop out pusha jp inc jo outsb jbe and add sub test sub lods test outsl mov outsb pop in ljmp jmp testl popf fdivrs mov int pop shll outsb mov xor clc rolb push data16 pop dec fsubr sub popa fdivp xchg cmp scas dec pop mov add jmp adc jmp sbbb mov in fbld out out test and ret cs mov jno hlt ss call or test dec add pop jmp or imul or sar mov leave mov push ljmp popf sbb gs pop adc xchg in xchg xchg lods and xor stos push in nop mov insl adc jns mov call out test jmp lret xor pop dec pop lahf loopne in leave in inc inc (bad) xor xchg outsl inc adc fsubs push movsl sbb inc adc mov sub dec arpl xor je push sbb outsl outsl inc out arpl fisubl xchg jecxz jle sub out pop and scas call sarl fsubrs push adc outsl addb pop notl xor lods mov or popa ss insl push push into cwtl xchg xor std pushf or fwait dec add push and outsl out push sti add test mov leave xor pop test sub loopne adc sahf push pusha aad mov jle dec pop arpl push and and out mov cltd xorl subl es fs cmp stc in (bad) mov fwait add testl push sbb fildl dec sbbl arpl pop and jno movsl jbe inc sub adc sub xorl mov sbb mov movsb and dec jb repz add inc negl stos adcl sbb lcall stos sbb das adc mov add jo out fs clc ds sti xchg fildl xor bnd add movsb orps pop fiadd add pop mov js scas lds adc dec orl dec push dec or and lret and and inc scas (bad) ss movsl xor add mov (bad) xchg jbe mov ror pop leave cmp testl adc mov jb loope aam pusha negl xchg icebp sarb sbb xor out dec sbbb enter enter mov sahf (bad) fdivs or cmp rol imul jae nop cwtl xor lock mov pop dec xor add or jae ds or in cmc mov or dec mov mov sub ja cmp (bad) dec dec jp,pn add fldcw sbb or cmp in mov xor push repz sahf pop or and ljmp xchg mov repz push aad cli adc mov mov pop mov iret jns leave add mov pop cmp mov cmp iret mov popa mov push sbb inc sarb mov sbb mov gs pusha xadd push or out adc push lret (bad) scas sbb xor push cwtl addr16 and adc add lret sbb xchg cmp jp outsb dec add cmpsb lods subl xor add push mov inc popf test rcrb in mov (bad) (bad) cmc cmc (bad) pop and lods pop scas or sbb ja lret sbb je jb xlat sub jo cmp out test adc mov jnp pop shrl pop (bad) cmp roll mov insb mov ljmp push test xchg add movsb pop or iret enter (bad) push and lret lods fwait cld dec (bad) loop out mov jbe xchg adc sbb ds mov loopne inc sbb pop cs stos add lock es outsl pop mov jne out adc inc add push jnp inc add int3 xchg xchg ss cmp mov enter push sub adcl cmpsl les dec sub sbb insb andl add mov rclb aas pusha pop aaa mov das aas jle jle iret sarl xchg mov mov add iret mov pop hlt imul lods dec mov jmp movsb cmpl push aam sub (bad) (bad) aam test and es out fimul mov in es jl pop insl loope pop xor mov repz jg jle xchg and aaa fwait pop negb fs lods sub (bad) ss fwait or jbe stos mov xor dec test repz repnz xchg (bad) cmc inc paddusw add or mov (bad) cmp jp inc pusha (bad) fidiv nop pop and adc inc shl xor jg jg lcall (bad) fwait rorl out xchg insl pop add mov imul push mov pop sbb fwait inc testl mov jne daa push fidivl loopne or dec cltd ja sub xor call jne out mov shl sub sub rcr mov int cld push cmp and push xchg jp lea notl push scas stos mov add push test jmp andl xchg mov mov ljmp cmp dec movsb shl fsub pushl scas rorb aas mov inc mov (bad) lret sbb pop repz mov out inc cmp pslld out pop xor outsl ss inc aad arpl dec add imul pop jg ss stc jmp inc bound cmpsl and push mov sbbb (bad) cld int3 sub jns (bad) je nop dec imul lods test add or lods addr16 inc lret and push inc sub js in push sahf jge sub adc push hlt pop mov cmp mov loope or or cmc sub mov xchg xor pop test add arpl mov aaa (bad) push sbb pop (bad) bound jmp aas js,pn mov ret push daa sbb clc rol or repnz add sbb mov stos repz call xchg mov fcomp sbb (bad) or mov jge pop inc icebp cmp cmp cmp mov fsubrs cmp imul shr add dec fidivr jnp cmp adc loop int in mov lds add mov lods sbb mov fsubrs jo dec jno dec mov fsubs movb ret push or xor pop xchg shr loop mov fucom xchg mov sub adc or push push mov ret mov enter sbb (bad) ja sahf fisubrl xchg adc aas rcrb push lcall imul push dec sbb jmp dec adc mov bound add jne bswap xchg jo xchg repz and (bad) cmc xchg cmpl pop push js pop rcrl popw arpl shr (bad) int pop sbb mov sbb cmpsb jge inc sbb xlat cwtl jo xor int xchg scas jl mov and stc test xchg sub insb lock lea and test stc (bad) pop xchg mov das in (bad) repz inc cli stc push int js fildll ljmp dec jnp dec loopne insl add mov pop xor jg into mov mov dec out adc xor movsb mov je pop bound add sub or push and xchg in repnz and loopne shrb ja lret xchg xchg add push mov js jg loopne cmp or mov inc push cmpsb loopne arpl dec insb mov and imul xor sahf stos mov add insb and stos ss iret daa notb in push adc push leave lahf ja cmpsl push je xchg in pop loopne roll nop inc mov les xorl cmp inc in mov mov ret pop dec clc sub and xor mov push or arpl mov rol mov das push popa push dec insb scas test sbb pop lcall or pop cmp mov loopne,pt test (bad) jne xlat and stos leave adc aam and jns mov pop xor sub stos scas sbb bound fwait cmpsb fnstenv jl mov and xchg pop cmpsl (bad) pop mov adc mov sub les xchg stos cld aam pop jg jp sbb and es jno xchg lds pop mov add lcall push add (bad) xchg orb imul movsb sbb out fisubrl dec (bad) mov aas adc addr16 mov xor sahf lret dec push xchg aaa or jns dec fs and sahf decb fwait or int3 sub imul and or xchg jbe imul mov pushf (bad) addr16 call adcb fcoms jo xchg pusha push mov daa mov lahf movl xor jnp call std push je push addr16 or jo xor repnz xchg jns lret mov jl in rolb xor cmp adc push push scas into loope out xor push jb popf in mov cltd push stos push cmpsb stc mov (bad) out inc and fadd mov pop stos mov mov cmpsl es pop and outsl sub std xor jnp fs fnstcw movsl mov enter mov bound fmul incb adc cld sub jl or addr16 and psubsw pop testb js cmp sti add fistp cs push dec jle in adc mov jge pop outsl cld sbbb arpl cmp inc jmp cmp lock xchg lahf xchg push sahf mov js fidivrl xchg push xor cs xor pushf mov mov xchg pop iret imul sub sbb clc push fs sub xlat mov mov xchg movsl xchg leave je ljmp mov dec test mov mov and loop jb mov into sub and dec or les xlat sbb pop adc outsb pop sbbl stc ror jo imul out sub mov lods cld jp sbb (bad) jle mov xor mov mov popf mov cld mov ret pusha and fidiv lock mov stc stos out push aaa and cmpsl adc sub inc test cs out sbb and pop in fidivr add scas push sub pop aas ss mov imul mov dec or fbld or test mov idivb lds (bad) xchg jne push imul nop adc (bad) dec mov and int mov cmp daa cmpsl mov mov lcall adc lods incl mov xchg ja scas insl ss push push pop inc std fimul adc jno adc std push (bad) incb mov mov and hlt retw unpcklps inc dec loope push fisttpl add lcall sti push fs insl icebp jo jbe jb iret mov mov inc data16 dec call outsb mov pop sub cli adc adc and stc popf jecxz cltd arpl adc nop push sub inc mov xchg push cmc mull mov insb pop fimul mov rorb mov jmp movsl inc cmpsb pop jbe repz mov push mov lods ja mov jae (bad) mov insl sbb jecxz ja inc jmp xchg or jb cmp sti jnp bound das add mov and clc (bad) sbb dec and adc mov fwait std aad push cmpsb and mov jl push cmpsb and scas xor (bad) pop cmc inc fdivrl sub sbb fistp nop mov mov inc movsl push and pop inc pop ret repz mov push je sub clc movsb mov cmp mov mov push enter mov adc inc xchg shlb jle push lea sbb stc inc rolb and dec or inc cmpxchg pop mov xchg scas and std cmp test cmp cmpsl lret add (bad) mull add or loopne stos lahf xchg dec ret scas xlat jl out add sbb loope and mov mov pop sbb push (bad) repnz and cmp mov jl sub outsb xchg loope (bad) ficoml dec scas cltd add cld dec inc loopne push lret test dec into (bad) sbb push push (bad) (bad) jae clc imul (bad) inc cltd mov (bad) jo mov and rcl adc or daa sti data16 mov fnstcw (bad) xor dec lahf test mov or pop outsl push inc sbb pop xchg xchg sbb (bad) iret (bad) xor xor icebp mov xor lret inc nop dec xor out sahf je and data16 dec lods jbe out mov shrl xchg loope sahf mul outsl cwtl repz jmp jmp imul inc pop popa add and sbb daa pop jb xchg mov inc add mov rcrb mov inc cmpl add in inc stos dec lods push pusha scas fildll (bad) fwait pop insl (bad) mov (bad) dec jb cmpsb xorl sbb sub xor sarb mov mov sub lods int3 lcall rolb cmpsl cmpsl into mov or pop sub (bad) not je pusha call cwtl hlt pushf add ret pop xchg (bad) out mov fcmovu adc cwtl dec xlat in repz nop ljmp and mov cmp or clc scas pop cmp adc push xchg pop stc mov jbe pop ljmp mull loope cwtl (bad) lret outsb stos aaa and xchg add (bad) and scas (bad) cmp push movsl sub aas cmpsb dec popa jp add sti xchg cli in repz sub xchg clc and sub mov stc stos imulb xchg pushf xor int3 stos and imul inc xchg (bad) scas fwait orl mov cwtl outsl test and rorb lahf stos mov mov movsl inc cmp mov cmp sub pop and cmp fadd lahf mov pop push jb fwait imul jne xor add inc or into or add inc cmp mov dec sub mov sub pop mov roll das dec mov int scas cli fs outsb inc jo mov adc sti in mov push pop push and mov bound dec into js std add int arpl mov dec mov pop push push mov out ss mov aas adc sbb xorb fnstsw outsl mov test add nop repz test fstpt jbe add and (bad) or mov mov sub ret add (bad) repz leave mov in in js inc enter mov std sbb lret pop jb js xchg cli mov lock jne push adc lahf mov (bad) push push pusha or psrld or das push jl adc ret pop (bad) or and insw fisttp jbe mov pop into mov jl jns push push push fs dec xor xor movsl push xor cmp push push ss fwait sub idiv mov pushf jecxz push repnz (bad) push jo outsb and jle sub movsl es and fistpl cmp xor push dec sub das mov sbb ss push ret cmp nop mov xchg (bad) mulb aam adc xor cmp cmc mov sbb jmp stc push movsl mov rorl cwtl aad cmpsb push fsubrs xor pop aam mov ficoml push inc and iret or repnz sbb add push xchg rcl mov dec nop push dec int push inc cmp addr16 paddw adc (bad) and sti jl push je xchg or sbb div test pop mov movsb and xor cmp xchg dec xchg push dec pop dec inc mov mov sub loopne je cmpsl cs xchg cmp cmp sub stos xor adcl xor rolb sbb out test push movsb jbe icebp xor jne leave xlat loopne nop pop mov cmp into inc dec mov lods fwait inc jbe (bad) push mov shl and sbb movsl jecxz mov inc sub sbb push inc xor arpl jmp mov inc addr16 push dec insl stos cld sub scas mov sbb fs fwait loop and xchg (bad) xor mov mov ficom push pop xor add or ret jae push xor ds (bad) xor pop (bad) cmp or xchg sahf iret lcall fstps loope push in clc adc fcoml dec lret movsb mov cltd test xor push jae inc push mov inc aad nop pop jge inc mov cmpsl enter pop sahf aaa test fcmovne adc inc fcoml mov or mov repnz test jecxz xchg cmp fnop sbb jnp mov mov stos es or dec aas sbb (bad) cli xchg test mov xchg xchg adc stos dec cmpsl dec push negb js pop mov push pusha ljmp xor and cltd pop pop fs into xchg pop mov pushl (bad) aad mov pop mov ror cmp cld sar movsl dec sub je (bad) mov jle aam cwtl jge stos stos or push or js sbb or pushw pop cwtl sub jp (bad) xor stc xchg xor cwtl and das pushf in sub mov sbb jl pop lcall das pop leave jmp mov sbb pop push add pop out lret xor fldcw push lcall cmp inc jp mov test shrl out mov lea addr16 pop out ror stc dec push add das testb mov jecxz push pop jae cmp std xchg aad loope es mov (bad) mov pop int3 mov push jno cmpsl jecxz mov push and into or fs push inc sub outsb les mov cmp gs push fdivrl dec mov push mov js push mov adc adc mov nop sarb xchg and dec mov lret add (bad) fild and pop test std or in jg stc (bad) enter shl loop call xlat fnstcw mov xchg xchg shll pop je outsl sbb adc fist push iret cltd popa dec loope jecxz aad ret fsts pop test andl sbb jge pop in in js test ds jmp mov js xchg lods fbld mov cmp cmc rcrb lcall (bad) jne arpl incl mov fs addb push pop imul loop sbb or cmp xchg out out sub mov and xchg je outsl dec cmc sti mov in xlat inc sbb aam les adc jle scas clc lock xchg insl out (bad) jecxz scas insl xchg dec stc sbb imul aam popf ficoml jmp test sbb or sbb xor mov xchg cmp inc in daa scas (bad) (bad) pushf cmpsl rorb xor xchg sbb inc mov js xchg xor lahf mov arpl maxps fisubl push rcr push sub lods repz sub add xor add mov (bad) vhsubpd xlat test xor or jns fs jmp sub repnz in sub push mov mov mov repnz insl mov imul cmp in jne xchg pop and inc inc mov push or fistp loop test ret dec dec adc pop push repz fistpll shl jle mov ss sbb and xchg call lret movsl lret imul incb roll mov mov xor jg jb jne out jmp push pusha flds add out icebp fs and dec stos data16 sub sbb out int3 push cs dec adc push mov popf push mov movsb popf mov push shrl push cmpsl cmc mov cmp or push rcll xchg scas enter (bad) jb mov stos and in sahf lahf loopne add or shlb imul cmp (bad) das add scas test inc xchg jecxz negl or pop les in xchg push (bad) dec fdivp mov (bad) out (bad) out dec in ret je fstps in repnz xchg subl test mov inc inc insb push adc or jecxz mov shrb cs xchg (bad) pop xchg mov mov inc int (bad) push lds push jnp inc jl pop inc pop jne jl xor xor ss ds inc imul xor hlt xchg test lret cmp inc cli arpl test mov inc push scas and idivl fdiv mov sbb dec jp outsb cmpsb mov (bad) in xchg mov cmpsl mov or cmp xlat pop adc xchg hlt iret subb arpl leave fwait popa dec push leave or cmp aas insl pop gs out adc cwtl sub je adc xchg push mov cmpsl pop xchg cmp in or repz mov out dec sub adc xchg xor repz dec mov mov mov xchg jae jo dec ret cmp mov cmp sub add mov xor inc fs das mov pop cld push scas popa mov sub mov inc in dec outsl mov dec notl nop or sbb xchg xchg rorl stc mov outsl fs imul cmc ret (bad) push data16 and xor xchg loope test stos add or js adc arpl adc pop fs pop sahf add daa cmp inc ss lret ret dec jns and fs fidiv and pop mov pop pop jns adc mov divb std mov dec (bad) adc pop cli sub and sub pop or xor std test xchg fstps popf cmp sbb jmp adc xchg sbb mov loop divl push or shll fnop dec (bad) jno lret inc mov lret cmp sub jne jbe imul ret call pop imul adc push mov std bnd or lret fs mov push and mov movsb add jge lcall jle mov cmp and pusha mov (bad) xor mov loopne js les push icebp inc sub nop aad pop jb inc inc (bad) pop cmp cmp lret jbe mov je test into lcall sete int in test push pop das test or outsb dec add sbb outsl ja push cmp sub gs fsubrl add push fsubrs xchg dec xor aad cmp fwait push xor stc sti cmp mov popa mov jnp (bad) jne jnp mov push mov jbe dec ljmp push stos (bad) xor jge mov mov or add cmp movsb (bad) cs sahf mov or mov in stc add jo sarl cmp outsb mov jmp xchg popf mov mov xchg xchg push inc fbld fdiv add sub rcl add out rorl fldenv jle jno jmp and pop cmp jle cmc pop push mov popa scas out jle jmp dec mov pop daa cmp jns repnz inc dec xor std aam (bad) pop dec ficompl das cmp mov les cli jb (bad) sbb pop sub dec ficomp and xchg (bad) xchg mov sbb sub push xchg (bad) push stos nop xchg inc sbb das (bad) mov xor insb daa rclb (bad) lock (bad) lods jle pushf inc test mov push push popf push xor and roll push out cmp xor xchg push jnp call fisubr imul vpsravd out lea inc pop mov movsl dec push push sub push cmp and jbe adc stc jecxz stos sbb mov int add addb xor popf cmp fdivp adc outsb add sbb xor mov test pushf xor jbe mul push cld test xchg jb sub dec dec dec aad data16 call pusha ficom jno mov sbb mov stos mov mov (bad) dec lret rorl fcomps inc xchg inc ss sub add and outsl mov data16 cmpsl dec test stc mov sub xchg mov pushf ret sub inc jno out cltd push inc pop mov mov mov mov push mov pushf rcll or adc pushf cmp add adc in daa iret (bad) jp jmp lea aam xor roll pushf out xlat bound xchg aas fdivrs addr16 adc fcomps enter inc addb mov mov jp or shll int3 pop sbb sbb arpl iret rclb pop iret jle pop lret mov jo jnp insb xchg mov out pop ljmp sub jns stos add repnz cmpsb mov lds pmulhuw loopne leave jg mov xor fcomps inc insb inc sub dec jbe insl dec inc xchg dec out sub adc jecxz xor outsl cmpsb test xchg ja aaa dec repz jae dec icebp daa xor sub push adc aam xchg xchg cltd or les sbb outsl xchg popa jecxz push iret push lock adc inc aaa push iret adc xchg sub (bad) inc inc add inc add and add in outsl int3 jns (bad) lods jae xor jmp push add aas das mov data16 mov shrl (bad) and jae int3 pop mov nop clc rol icebp sar xchg and xor test stos adc inc inc test cmp aam mov loop stc mov pop xchg jg outsb addr16 (bad) dec push add sbb push es jecxz and mov jle nop xchg iret cmp sbb out mov enter das pop cmc push or test lock addl sub loop test sar lock xor dec cmpsl mov push addr16 fadds adc enter jg push fdivrl frstor popa das pop (bad) dec or call lods insl inc mov dec lock mov addr16 incb xchg jns lahf test add jmp inc mov jnp push test dec repnz xor inc popf faddp dec push sub jecxz mov jmp or je sbb lret xor inc jecxz xlat jl mov jae jge arpl cwtl mov jbe scas mov push mov mov or mov test jb ljmp inc push inc pop pop rolb cmp gs aaa lret pop cld lea loop dec call rclb jl and and inc insl sbb ljmp imul add loope out pusha aad popa lret ss xor push pop hlt in and bound push rcll outsb mov xchg lahf sub call fs sbb xchg sub lds push jb hlt xor mov push push push mov cmp mov sti int3 rorb xchg adc je out rorl lock (bad) xorl or (bad) lods out (bad) mov gs inc data16 movsb loopne lds (bad) mov push push cltd dec int sbb test dec cmpl or cmpsb ret sub cmp mov in jg mov aas fnsave aas out add mov ret push pop sub divl xchg (bad) and addr16 xlat mov das mov (bad) or and or mov sub adc or xor js std pop (bad) cli push and jns jle aas test mov pop arpl repnz pop mov push cltd mov and jp sub mov imul idivb daa fisubr mov jbe push stc push iret aaa ds lds sbb outsb sub (bad) scas test sub mov adc adc add push rol push nop dec jg xchg imul jbe mov push in mov xchg dec inc mov jp out xor and dec push mov mov pop inc lods cmp (bad) (bad) cmp mov (bad) mov jo xor out xchg (bad) aam jno mov fildll and mov inc (bad) cmp test jmp add rclb xchg push sahf pop lock push sahf test xor in and testb and jns cld aaa fildll ja mov popf popa andl adc outsl mov xor in bound inc test test add fstl repnz rorb not dec push mov pop sbb ret pop ret or mov mov pusha cli lret xchg ss fild dec push dec add and sub inc mov mov rclb xor or dec sbb insl cld mov sub mov xor inc (bad) iret jmp xlat sbb fdivrl pop mov add out xchg and dec xchg lcall fldenv mov in or xor cmpsb mov aas pop or stc dec dec fnsave jl adc sbb xchg cmp push push push pushf xchg sub inc or ret cld push fs (bad) mov adc scas push sbb xchg pop and lahf lds xchg or movsb into nop add and out push ja jg insb mov outsl hlt call fist movsb hlt sub push push and adc pop sbb jbe dec popa aad pop in sti jg,pt nopl push push push cmp orl adc dec jmp outsl popa sahf and movsl pop sub xor inc xchg roll sub push inc xchg or pop outsb inc popf cli fs cltd insb cmpsb out divl lea leave sbb ljmp mov out push inc scas sub repz arpl push insb push stc or test pop push add mov push loop mov popa into sub popa nop adc jb mov ja inc push mov sahf pmaxsw cmp dec call test xor repnz adc and aas cmpsl xchg xchg pop out in jae bound (bad) fsubrl cmp fdivrp lret sar xor arpl in mul dec jl in movsl inc xchg es nop in (bad) jmp roll rcl xchg and jle and jnp int3 push scas int3 xchg arpl je mov pop popf adc add out fsqrt pop jb (bad) pop lods push int or or adc repz bound sub out sti push imul psubd mov pushl outsb sub in popa dec divb xchg push push (bad) or stc push pop mov inc adc iret outsl jmp (bad) mov and push ss daa outsb adc (bad) out fs call std jbe rorb xorl jle jbe and xor pop clc fwait inc out cmp sarb decb cmp (bad) or jg jns dec repnz cmpsb push sub addr16 call fadds adc imul dec rorb psubb mov cmp std mov xchg in dec mov mov loopne loope cmp (bad) cs jecxz mov push and mov adc push xchg jo in (bad) out jp mov outsb sub ds aaa daa mov mov push lods or xchg pushf mov andl pop cmp jbe aaa lcall and fistp aam add fimul xor pop loopne mov stos mov je daa mov dec mov inc or mov jne pop test fldcw mov fcoml push push out pop pop inc inc lock adc mov rorb gs or ljmp (bad) jge pop xor push fwait inc mov (bad) jo ret cmp nop cmp pop outsl (bad) pop nop test push cmc in shrb sbb inc pop mov xor mov mov inc add xchg fnop addr16 dec pushf loopne addr16 pushf bound cmp orl leave push jge jle into loopne imul dec bound jb outsb pop pop test inc nop and out fbstp push inc cmp jb in sbb jno adc sbb cmp add out inc jmp mov stos push in push fdivr mov scas jl pushw push addr16 jmp xchg push push cmpl iret dec mov inc dec fcoms imul pop pop sbb xchg jge fs in jg cmp add dec andb and outsl ss pop sub pop iret lock popa lods jmp je negb mov lahf int inc roll popa pusha fcoml xor or push or lret sub cmpsl jp adc ja xor orl jbe test js ss lret mov pop xchg clc popf mov and clc (bad) fidivr jle dec fistp sarb ret jg inc sbb cli xor mov stos cmpsl or mov repz sbb int xor lret mov and call out out pushf mov and shl (bad) js push cltd (bad) mov cmc dec inc xchg inc sbb jg sub pop and out fisttp xchg add popf pop dec in dec repnz inc pop push jl push incb jp cmp xor jecxz lock in push ret cs (bad) hlt adc lea pop xchg fwait jle mov testb movsl out mov adc pop out dec icebp add mov and ffreep xor push sbb inc mov xchg sub inc push mov xchg cmp les mov movsl push les jns fwait idivl insl cmp mov cltd outsl mov lret andb push pop repnz pop mov ja pop add push cli pop fsub data16 and scas mov cmp ret or (bad) mov or aam mov stos shrb out jne stos lods xor hlt and sbb sub sbb fcomp pop push jge paddb inc push sbb sbb inc cmpsl daa loopne push sti pop insb adc or int3 push cmpsl sub adc frstor and (bad) in or xor ds (bad) mov sub xchg notl fcompl xor add pop jns sbbl in sbb sbb jns int jge mov jmp pop mov leave mov cmp (bad) (bad) mov inc adc fstp cmp or pop lds loope divl mov jmp sti dec mov iret fdivrp loopne call mov test push cmpsb xchg dec xor xchg xor js ljmp jge sub mov mov sbb mov jnp shlb inc adc xor push fs stc push aaa pop cmp in push dec mov aas mov je repnz xlat mov xchg pusha call enter nop ja nop mov pop jmp sbb mov inc pop gs sub lret push (bad) pop mov aas vmovntps mov mov adc or ss add fidivrl xlat push xchg fwait ss js xor loope dec (bad) and cmpsl mov fnsave push (bad) leave pop in movsl outsb mov std dec cmp xor mov pop repz sub xor push aam cmp gs xor fsub aam mov mov imul mov jae mov nop push loope and (bad) mov int xchg add ret push sbb fnstsw (bad) repz loopne xlat in btc sub insb jns aam lds add mov mov sub or push push xor test in xchg (bad) rcll pop pusha mov imul xor inc sub stc inc dec and rcll jo aas nop inc xor xor outsb mov jnp sarb (bad) (bad) pop ljmp pop and and js test mov rorl lret ret daa pusha stos pop idivl out push and fidivrl loopne in xor xchg mov add cltd and leave xchg xor inc dec push lock sti test jb jp addr16 sub daa verw mov jl mov dec hlt adc sbb lods (bad) cli rclb notl into leave stos inc cld sbb (bad) ja jno lock xchg stos or mov rorb mov ljmp sbb xor enter cmp out pop idivl icebp xchg and cmp bound rcll xor nop mov cmp js push jecxz xchg decb mov and (bad) cli jne je arpl jb mov les cld daa stos movsb jns jno scas daa push test xchg sbb fisttp mov adc setp leave jns mov mov push scas or adc movsl cmp push rorb push int popa dec mov pop and cmpsb add sub hlt xor hlt pop and push xor in cld sbbl or sbb push repz popf mov xchg rorl pushf push cld loope jecxz fs out repz in fldt xlat adc mov push divb (bad) jmp ret fist mov test adc inc adc lcall sar rorl dec rorb jmp push mov (bad) adc mov dec movsl or repnz add or inc inc sbb mov mov and popf or (bad) stc pusha in xor leave ror sub xchg dec ds xchg je jecxz add cs mov cmp enter bound sub sbb ljmp dec xchg faddl cmpsl dec xchg imul pop xchg push jne in sbb push dec outsb je cmp repz mov in pop lret roll andl dec aas cltd aaa jp js popl pop pusha daa das into mov mov pop (bad) repz add sbb xor inc mov cmp adcl push push mov fwait popa pushf fwait scas push inc mov dec out xchg js test popa pop add (bad) mov sbb xchg shll out lret push ja jp call inc mov inc sbb dec dec aad adc pop iret loopne outsb (bad) xor (bad) push enter adc mov ds in aam ss inc ss cwtl stc daa sbb xor jge xor sbb mov std push aam jo lock cs jno pop jns or shrb mov pop loope mov jl (bad) int3 fdivs cld sbb dec lock imulb adc ret mov and add sbb jae xchg daa jmp jmp mov ret ror xlat inc imul or dec and xor xchg add rcrl xchg clc or mov out out push or pop ret pop cmpsb out fwait popa pop cmp div add es cmp imul mov cmp cmp test lock inc xor cmc mov test sbb jecxz pop push adc std test insl rorl pushf (bad) mov push mov pop jl lahf incl push aas mov loopne add cwtl (bad) test in shr ror push dec dec int3 pop popf es cmp in fsubr leave cwtl add add and pop in shl sbb mov or or xorb mov push aas or sbb xchg push (bad) (bad) lret jne mov dec mov mov daa sub mov imul sub fstpt scas add lahf jmp stos jg xchg or and insb iret jno mov movsl jl out mov movsl mov push stos int in jb clc (bad) pusha sbb mov imul mov mov mov pop shrb in jl sub imul and sub pop js imul sub jp cmp push jmp mov cmpsb mov iret xchg pop jae cld add movsb lods je or add stos push xchg call jne (bad) stos fcmovnu mov inc and sub inc push stc xchg mov and xchg sbb cmp inc xchg or outsl repz xchg mov jl mov pushf xchg dec leave jnp imul jg pushf or mov arpl mov add mov push stos mov stos scas popf test mov mov das pop cmp (bad) leave data16 jns add cwtl ds add popa dec arpl pop push mov rcrb aad or or call sbb shlb pop jne sbb mov fdivrs jb das std inc xchg jle sbb out pop sub mov cmp cmp (bad) sahf inc add das push jle cwtl cmc frstor (bad) mov cld lret int3 add gs loop pop mov push pop xchg adc movl cmpsb (bad) xor adc ret lods inc into bound xchg inc test jecxz dec inc push cltd cmpsl scas orl (bad) sbb adc cmp movsl ja int ret pop adc and fcoms and jge mov pop mov ja insl pop sub out push cmp pusha lcall add push fidivrl cmpsb jne mov push imul and in ja xchg outsl rcr bound outsb dec cmc sub out ret imul bound gs cmc inc popf dec fistpl pop mov addr16 fsts int3 fsts (bad) fcmovne jp scas dec lcall roll xchg lahf call push pop jecxz jnp,pt push add jp dec mov hlt ss ret (bad) mov fs or inc pop pop or inc (bad) or ret mov stos dec mov insl push in pop outsb enter xor push sub xchg fisubr rcl bound aad outsl mov cmp test ret cmp cmp pop sub arpl pusha xchg or push stos dec add jl cmp cmpsb push xor sub data16 jns add movsl int dec jge xchg adc pop jb add lock mov mov mov stos (bad) fstpt dec and xchg lods sbb jbe adc lods and sti cli sahf pop faddl pop and ret out int3 out inc lret (bad) and add shrl push dec ja xor ret push pop out icebp out and xor sbb data16 xchg lret (bad) (bad) (bad) js and loop pop or into cltd mov imul adc inc or push lea mov adc dec ficom sar pop or or ret xchg mov std sub jp stos cmpsb xchg sub test xchg aam imul aam push xchg (bad) sbb testb pop fnstenv hlt loope leave xchg sbb jb push notl xchg push cmp aas in jmp jae addb loop jecxz shrb (bad) test fstpt pop lcall (bad) jae fsts repz xchg push sub int cltd inc inc int3 adc add cmpsb xchg in xor imul jne pushf mov mov cmpsl cltd enter icebp push jl mov cltd outsl jl es popf mov aam fstp mov mov fwait lods test lret jp aaa stc pop divl fdivl mov jg and dec in (bad) lods int adc scas jmp jge cli jns cld xorl adc lods jmp gs stos test dec nop andb mov pop lcall fadds (bad) xchg out dec and test cmp xchg adc add aaa push jecxz sbb enter in sub mov xchg incb mov or mov notb aad mov xchg push (bad) sarb pop lods (bad) dec repz cmpl xor stos and bound outsl push jne imul cmp std lahf pop cmp pusha dec inc dec sbb cmpb jno movsl jecxz cmp arpl bound sbb mov addr16 add jb in inc cmp mov fstl ss push pop mov mov cmp repz pushf xchg push addr16 push mov (bad) clc push add and lahf movsb sbb inc sahf fnstcw (bad) sbb daa add repnz gs scas pop testl ds mov test pop sbb dec iret dec push scas gs fisubrl and inc push ljmp cmpsb xlat jne push jne aaa mov pop insl rcrl xchg adc dec mov cltd jg inc push addr16 mov in hlt clc sbb pusha addr16 add lods ret stos mov jg cwtl push es push inc dec dec jnp jmp push xor rol mov cmp mov push mov iret sbb adc loop (bad) loop mov sbb cmpsb cmpsl add xor and cmp sti cli cwtl add add dec xor sbb xor cmp js push in rorl lea out loop dec inc jp (bad) (bad) notb sbb sub xor adc into xlat and dec cmp lahf ja mov sbb mov sbb in ret mov data16 orb cltd gs test sbb push cs jns ljmp pop cmp out mov lret imull sbb addl jp mov cmp das jmp and adc fsubrl sbb or push push bound nop pop dec nop add jle stos ds incl (bad) stos jno cmp and pop cmpsb pop sub lret pop sub push sub enter xor or dec stc inc sti (bad) std (bad) mov inc (bad) jp mov lods imul mov add cmp test mov and scas inc or (bad) ds faddl ficompl mov xchg sub imul dec xor sub xor mov sti icebp xchg lock lret clc loope out out mov mov je and int3 out pop loop lods xchg mov sbb mov icebp cmp test addr16 dec cmp scas jno test pop pop shrb mov dec lods out test mov iret fwait scas cmp fbld cmpsb cltd pop jmp ds sbb sbb int xor cli stos or mov xchg mov push push leave (bad) aaa nop (bad) aas mov lock jb jp sub movsl inc sbb shlb cwtl outsb sub sub dec stc (bad) jne inc or clc scas lods stos cmp push jno push in sub mov dec fimul loope mov mov (bad) (bad) scas ja fs insl addr16 xor in (bad) icebp lea pop jns ja xor repnz mov jbe daa lods out inc mov ljmp mov and xchg xorl mov mov cmp jge mov cwtl mov leave push arpl jns sub push rclb arpl mov lds call sub mov push cwtl in cli jbe bound mov aaa mov sbb xor bound inc cmp sbb div mov rorb ljmp add xchg out lret negb lea pusha fdivp out jmp adc mov clc xor clc or fwait cwtl scas pusha test sub cmpl xchg inc sub clc in jecxz jae dec push push jne js mov mov mov (bad) hlt out sub sub (bad) push jp mov push pop cmp pop rolb cmp jbe aaa mov mov sbb mov push scas mov out cmp ja cmp jo mov repnz sbb add mov pop push mov pop xchg orb sti mov add sti push jb sbb mov stos in and fwait push rcrl test add into das or push cmpsl and imul movl dec pop (bad) fstpt sub das mov push xchg in mov ja aas inc testb fdivl sahf push sbb cmp sub repz xchg push sbb lcall inc xchg subl jo mov and popa jnp add pop mov fnstenv add push jo mov pop leave sbb in xor jmp lahf mov (bad) push fstl gs lods mov push jge fdivr dec xchg or (bad) mov out jbe in inc jno fiadd or cltd es pop stc imul mov fs mov clc pushf push arpl out or jmp or into ds dec pusha push pop pop sbb adc xor iret aaa ror mov mov sub sub add test mov xchg mov jg xchg loopne xor lods out jmp fistp inc sbb lret jle jecxz sbb or in sti ror sub sbb repnz clc sbb ret pop (bad) push cwtl inc xchg inc xchg xor mov inc push push stos xchg aad cmc mov cmp je xchg xchg imul cmp jmp int3 dec popf ss sbb adc mov adc mov (bad) int stos stos mov stos aaa in in push lods in out lret mov push cmp sar test mov mov rcll rorl idivb dec cmp repz add enter mov pop push or repnz repnz cmp ret (bad) fstps inc jmp loopne push leave adc inc and sbb jmp lret clc je jp loopne adc mov inc sarl aaa daa and adc call fwait call cmpsb lahf leave push ret loopne insl sbb gs dec enter (bad) gs jle push mov sbb jne pop jle repnz icebp adc push fstps mov mov push imul xlat xor sbb pop (bad) ss mov jnp insl ficompl repnz cmpsb cmp xchg push lahf fimul fistpll ljmp xor (bad) movsl inc js or imul pop aam xchg fimull lret test leave sub pop ja push and nop dec pop fdivp bound adc cmp mov cmp mov pop cmc or std mov mov leave sbb mov cmpsb add out or xlat sbb jns mov push push repz aas sarl negl push add fidivr fs cli push mov ret test mov mov movsl addr16 mov loopne into add jg sti les mov (bad) mov icebp or mov inc push pop lock xor test push jns and sbb lcall iret fcomi jmp movsl adc insb inc jns dec jp enter arpl int dec in cmc push fdivs push rcl insl cld add push xor mov loopne ret int3 jno jp xchg mov ljmp xor xchg mov mov pop mov lods (bad) scas (bad) pop cltd lods pop jp stos and stc mov lret add fdivrl cmpl ficom addr16 test inc jecxz xor sub mov stos or xchg mov xor (bad) fbld nop fdivl ljmp bound cmp adc stos inc mov adc mov jne je inc popa jle mov (bad) xor fildll ljmp cmpsl adc shlb add pop pusha or gs cmp loopne bound and dec ret jbe mov cmc or cmp dec jb (bad) sub push cld rcrb (bad) (bad) call mov mov add imul gs imul inc dec pop push andl mov std xor mov mov xchg test xchg (bad) data16 (bad) adc xlat cmc add das mov or insl adc lods add insl push sbb dec outsb aad ficom pop cmc aad (bad) pop sbb mov clc nop sub imul ja test push repz lcall cmp leave scas push xor lods fnstcw add mov lret imul (bad) enter (bad) test repnz in mov sub inc push std push cmpsb lds mov stos lea cltd mov pop mov shr imul sbb mov loopne adc add test popf cmpl mov add out pushf cltd mov push fidivl push hlt lcall aad icebp cwtl inc daa push fwait ljmp jecxz int in (bad) mov mov imul mov idivb loope lret fidivl sbb lret and push or dec jno js jp out push out enter adcl adc cwtl dec fcmove in add gs mov ret dec stc je mov test repnz pop bound ss jg add jp or push sub sub adc arpl push mov push repz out int pop xor inc xor frstor pop scas cmp inc cltd addr16 adc (bad) lods pusha push iret mov dec xor pop ss sbb cmp daa arpl mov xchg lock and stos pop fdivl sbb mov xlat jnp sub adc aaa push lret sti int mov rorb jmp jo insl mov dec shrb (bad) push mov lret inc cltd (bad) dec lret enter cmp jecxz in mov xlat popa lock xlat dec mov scas mov or pop scas pop lcall push ret or movsl xchg lods sbb inc push sbb inc imul call inc cmpsb pop ficom repz mov pop mov in (bad) aaa movsl xchg lds or sti xchg sbb xchg jge dec adc (bad) xor arpl push das add js fdiv jle sub js adc push mov fwait mov dec les pop outsb (bad) jb out xchg in arpl les mov push cmpsb push jno push cmp push shll loope daa inc call sub xor jmp out (bad) cmp or les repz xchg sbb push ljmp pusha test cmp test jg scas enter or mov fwait (bad) jle inc iret arpl dec sub loope mov cmp lock and mov lods call loop add and les adc dec subl popa mov fbld ljmp lcall sub outsb add xchg aad lea or (bad) sbb or sbb or mov js sahf mov test inc pop test in jb out outsl fnstsw out or jno pop cmp jae pop cli push shll fucom pop dec mov stos pop sti adc repz in les and xchg mov and mov lds cltd loop dec inc sbb repz sub fimul add adc sarl jl stos (bad) outsb lods rorb test sub (bad) add dec sarl outsl sub js mov mov loop in lods insl scas fiaddl and fidivr add push sub loope insl mov aaa ret xchg add out xchg leave leave cmpsb ss test lea rol sahf outsl std add mov cmp (bad) xchg je in xchg cli (bad) lret push mov or xchg xchg xor hlt in dec xchg mov incl jmp and lods ficompl sbb scas loopne les sar fwait cmc inc sti (bad) pop sub xor cs dec push and loop mov add push test mov addl scas mov out test xor and scas cwtl fisttp mov data16 insl icebp lret cmp cmpl mov xor (bad) jb lds outsl dec fiaddl xchg jae mov mov push out pop pusha out xchg pop mov (bad) jae adc and add dec lret pop and mov jns les lods sub in push dec mov dec push scas loopne (bad) and jno dec stc das jmp push xchg add cld mov arpl outsl xorl adc rolb jge or cmpsl sub xor rorl sbb pop xchg xchg cmp mov pop mov adc int3 push mov jp popa (bad) lret or push fptan call push sub pop xor cmc (bad) in push jae aad inc out mov jmp sub fsubrp xchg test add push cmpsl cmp mul testl mov push push jne push lea mov lea xchg dec cmpb cli sarl add add cs ss enter leave jmp cmc jo fsubrl adc xor xchg ret in icebp pop imul xor xchg xor rorl xlat and lret jbe pop sbbb rcrl les sbb sbb jbe mov cmp cmp lret xchg test cwtl pushf pop lea out push adc xor or cltd xchg add and pop flds xchg cs xor mov mov lods imul ds scas pop sub inc out (bad) and mov dec cmc es pop sbb stos mov jnp imul test aam inc inc sbb pop inc cld jle insl ret cmp pop push bound insl cmp inc sbb enter inc cmp cli sbb pop cltd xchg data16 aaa (bad) hlt inc cmp movsb inc ds mov cmp dec data16 scas jge mov sub movsl inc pop pop mov pop sub ljmp inc push xor dec daa mov xor (bad) sbb mov (bad) outsl xor xchg out mov mov mov and add lea pop cmp loop lods bnd into and pop fcomi mov mov lods jne and lea mov adc mov sub cmp iret xor xchg mov int cmp fs and test cs ljmp dec sti pop sbb push aad sub xchg add cmpsb out adc mov lahf call mov jle fmull pop inc icebp shlb inc sbb sbb sbb adc scas add movups daa test lock mov (bad) mov pop iret pop rorl pushf nop pop lret imul pop test inc ret sbb xchg pop repnz gs jae out sbb xor jg imulb (bad) pop aas xor imul repz push mulb mov data16 add sbb push test dec stc mov fiaddl mov fucomip aam sub std push shll test roll adc das adc fstpl xchg arpl or inc cmpsl out pop cmpsl push lds dec imul mov push iret jno push (bad) outsl pop (bad) mov cmpsb outsb daa fisubrl sub das mov mov rol and sbb imul fidivr ss hlt dec subl sub ljmp sbb push mov dec pop fldenv inc push or and mov jge xor loopne jl loop push sbb and push je pop jnp sbb jle scas cltd pop jne dec (bad) int xor inc pop adc push dec ds xchg fneni(8087 jge pop mov mov pop cmp mov cwtl and cmp pop adc stos jno jno leave xchg dec repz pop int3 aas (bad) sahf push mov test inc xor push jg lret lcall data16 lret lret sub ficoml mov loope mov mov pop jbe mov jle mov insw or test sbb aam pop adc jo fimull ss fstl sbb add inc lods jl fsts xchg jbe shl jae jmp cmp bound (bad) pusha and cs fiadd pop jbe mov inc mov mov xchg pop pop cwtl and mov imul div xor fs int3 xor ficoml fs sub insl ja stos call mov push cmpl dec mov (bad) in jecxz cmp add cld ds int jb into xor addr16 pop lods lret (bad) call dec popf rorb out jecxz imulb ficompl mov ret xlat sub cmpsb jbe test mov lea add js xchg call mov mov out mov fcmovb pop in cmc pop xor ds jge adc push pop test mov adc int das scas shr inc or xchg inc sahf dec sbbl inc hlt and in adc arpl out fwait and mov dec add mov test js cmp inc mov mov push in loope inc jge adc rclb sbb or aas ret jo rcll jne movsb and sahf repnz jne (bad) rcll adcb daa mov xchg adc or sahf pusha sub iret jecxz notb pop mov inc addr16 out shll jno mov fmuls inc je jle rcr adc fwait das (bad) hlt stc test mov jl xlat repnz pop (bad) ss in test mov push xchg pop xchg push ja sbb imul xor movsb mov aaa lods icebp push out movsb scas xor pop sbb pusha and imul lock out and cs cmp add in stos das sar push ret mov fs dec push mov fstl outsb sub rcll rolb lret ja nop out adc or bnd lds jge add pop inc sbb lods dec cmp jno setge mov inc cmp lds jno dec dec aas pop jl test dec loop sbb push lods xchg push fiaddl or mov sbb out ret loopne lcall pop push leave push int3 cli and adc hlt mov fwait adc xlat lret data16 sub or fildll (bad) push and cwtl xchg lods dec pushf scas mov push enter mov (bad) or mov (bad) mov pop sbb sbb inc xor test jae dec popf add sub enter out and rcrb sahf lret cmp (bad) cmp (bad) cmp cmp mov sub xchg xchg cwtl cmp arpl mov sbb xlat enter cli jge ss dec adc mov xchg out jle popa pop adc rep test inc out test iret inc fsubrs mov dec mov add in xchg sbb lcall dec mov fldt les inc xorb mov stos lea lods xlat jge,pt dec mov lock rolb push adc cmp inc cs mov outsb arpl xchg aad mov mov mov pusha cmpsl pushf in loope xchg ret ss push out jl fnstcw ret sbb loope xchg fdivrl and xchg lods pop bound lds pop cmp mov es loope mov fsubrl pusha pop sbb sar jno pushf sbb xchg add xor loope xor addr16 pop cmp or rcll movsb jae pop add in sub cli sub in jno xchg std rol loope pushf add aaa sub daa dec (bad) imull stc pusha cmp pusha push xchg push mov xchg test dec push in add imul fdivs insb pop add pop adc mov aas adc rorb jmp push add and or cmp mov sti aas push aaa clc inc stc xchg sbb rclb xchg in push out aas inc hlt insl dec push outsb mov dec cmpsb arpl cmp pop cmp add rolb push sbb aaa adc ret pop fidivrl scas in (bad) rorl shrl cmp sub ret stos in add xchg scas cli adc mov test mov mov adc (bad) std lcall inc sarb cli adc pop lret fwait sbb inc loopne (bad) into stos xchg cmpsl dec stos stos lret ljmp push jecxz and cmp into xchg loope ljmp pop cli iret divb or rcrl jbe pop sti jae push mov jns (bad) mov or arpl cmp repnz stos dec mov insl cmc adc xchg inc inc pop adc mov jge push ret jg jge int3 push insb repz loope mov pop add neg jle jmp int aad inc ss stos pop hlt hlt aam mov sub or pop cltd shrl neg jns imul xorb popf and cltd lret inc cwtl sub adc sub ret mov rorb mov lcall mov jp (bad) imulb push mov xchg mov xchg cmp and enter (bad) adc out sbb or inc add sbb (bad) out inc sub jnp mov push add add icebp es cli pushf push cmpb jecxz xchg push xor xor mov inc test inc aad in push arpl push mov cwtl mov sub les inc inc fs dec add js mov std inc inc inc imul lahf into add mov xchg and and lret icebp xchg dec sub stos cmp or xchg cmpsb test shrl (bad) push into inc outsl lret test push rorl pop inc sbb sub push lret cli xchg mov dec or fnstcw dec jbe nop fcmovnb outsl rclb pop cmp inc out jne cltd stos lock call mul mov rorb daa pop mov push mov push cmp pop pop and fisub dec jbe jne mov lock jg fiadd cwtl repz push cmpsl jnp hlt nop sub xchg arpl clc add push test add andb sbb push sbb leave loopne inc or cltd push mov ret lock and inc test xchg into cmp in xchg cmc icebp cmpsb rcrb push lcall hlt pop and iret sbb enter add (bad) mov cmpsb push fsubl testl into sahf (bad) jmp dec add or push dec mov jmp cmpsl cld cmp and (bad) mov jmp (bad) iret adc xchg enterw or or (bad) mov popa sbb sahf popf int3 mov sub shrb inc jmp inc ret int (bad) xor mov xchg mov sub push movsb lret lret lock int arpl mov ret or ret mov negb add pusha ds xchg and popa out insl loope into jmp movsb mov std xor adc mov push xor xchg xchg cwtl jo ret or xchg adcb jmp aam jg bound aaa jp and and sub in and xchg iret jge inc jp sbb xchg pop push mov aas std rol dec inc cmp test inc xchg cmp xor and xor sub in lock sub movsb jns test push fistp push inc mov mov mul popa sbb push jnp ret rorb sbb cltd mov xlat into mov mov inc jns and add xlat int adc or call dec in sbb lock add lret and in and insl mov jl mov and mov sub test sub movsb mov sub fs xor push mov gs xchg out out inc ffreep pop loop ds outsb movsl stos movaps stos dec lods mov arpl rorl clc push jmp push (bad) push mov aam jae adc loopne cmp mov jae xchg mov dec sbb jecxz add stc sub inc inc jno or inc pop or dec pop sub in add pop lret push add cmp rorl aam mov inc (bad) xchg lods fisttpll cmp sbb mov cmp stos xchg lods dec lods stos cmpsb jns hlt stc in ss shrb mov into (bad) ss jae rclb inc push cmc cmp nop gs jg les nop ds mov jns ja cld mov sub xor xchg cmp mov out loop test jns,pt mov daa pop lods lds aad pop pop adc in mov jb dec cmc mov mov repz aaa popf pop pop pop fnstsw lahf aas add xchg popa mov daa mov inc sub pop push into jle (bad) fprem lock jb xchg sub enter adc mov dec fisttpll adc inc sbb sub imul ljmp out movsl (bad) sbb jl imul hlt loope in ds loope (bad) mov (bad) leave call jnp lcall (bad) in lds daa mov dec (bad) push xor lods jne xchg lcall aaa out mov mov mov jbe scas cmpsb sbb xchg int push ror in dec sbb xor fbld test fisttp pop sub or cmpsl jbe or push daa jle xchg notb sub xchg add gs xor in jle and and gs bound xchg push sbb inc sbb rcl aaa imul insl inc sub pop xchg (bad) icebp imul imul adc cmp and xor mov lret cmpsb int int or inc xlat push fnstenv sbb add jnp jecxz jmp adc xor lret int3 orl iret roll push fucomip push int3 cmp je pop mov adc mov dec sahf in inc add xchg pop in outsb pop jl repz xchg push xchg fsubl ljmp in pop fcoml jns or fmuls mov fdiv imul sbb movntq dec inc gs pop fldcw rcrl adc jne and faddp lret or pop jmp aam or shll js std xchg popa pop sub scas sahf ret dec das test cmpsb and adc cltd das lret inc arpl pop cwtl ficompl add mov jp popa hlt test xor mov bound cmc add roll mov jmp test mov fdivl pop repnz pusha inc mov jns mov push dec or (bad) call xor (bad) mov pop pop insb and cmovs mov psubusb cmp insl push xchg xchg insb sub add inc add inc xchg bound call fisub mov sub jne inc inc sbb pop push pop imul ds sub aad or cmp aam lcall outsl bound rorb xchg xchg insb adc popf jecxz loop push mov mov adc (bad) add sub sbb dec and sub mov lahf faddl sti add xchg movsl fnop or insw adc jbe loope es mulb xorl jae cmpsb add imul push pop test or pop popa mov cmp or sub inc insb fs stos jmp mov mov lret mov cltd sbb fiaddl sub and jae xor aas cmp or ljmp xchg jmp outsb mov mulb add jo out call jno or xchg pusha sub out add jb pop pop loopne jmp lahf mov cmp mov sub fcmovu aaa shlb sub test mov popa xchg mov dec or int or enter jle hlt lods mov inc push les jno insl rorb sbb sub in or movsb inc sbb jns bound fwait jne add int fadds mov aam daa lea mov aaa out ffreep ljmp cmc sarb xchg dec jb mov ljmp stc loopne,pt call adc loopne mov sub mov or loope aam stc (bad) fidivr xor pop mov div push divl (bad) cltd pop and movsl inc test push pop xchg dec add xor in lods adc lea xor fisubr lret sarb inc or lock xchg cmpsb outsl fidivr mov fistpll add xchg push sbb gs fadds imul stc adc sub leave jnp mov jl ds loope cli inc inc mov (bad) (bad) dec mul push stos pushf (bad) aam push adc push ret inc or xchg cmp call ds cmpsl sub xor test add mov pop pop jb mov loop sbb push (bad) mov fildl cmp (bad) rol xchg lock sbb push mov mov (bad) out icebp xor sti icebp cmp or dec sbb pop fdivrp std mov fs pop pop mov cltd fidivrl leave push mov mov aaa lret es push sub xor jmp add or (bad) jbe add add xchg add ret push xchg adc push imull bound jmp insl in int jmp jmp dec icebp repz lods inc js push js lods jge (bad) loopne fild out outsl sub mov (bad) loop cmp adc mov outsl add sbbl push cmpsb and push inc testb gs inc mov fimul pop mov out test jb xor cld push daa xchg gs xor pop out lcall ljmp lret cmc in ljmp out push xchg aaa and aad (bad) mov or mov in les adc fdivl sub call xchg xchg ss adc xor out lds (bad) addr16 mov stos daa aam add add aas addr16 mov in aas and (bad) loope or jbe lds stos mov xchg xchg xchg rclb out lahf je repz mov ret mov dec ret popa mov les arpl pop sbb mov pop (bad) std aaa (bad) int3 sbb shlb cmp jg fisttpl jmpw push adc xchg push dec call pop jmp int dec js sub xchg ljmp push jp push out push mov lods lretw ret push jae sbb mov push push stos mov add into sbb insl mov (bad) add lods and cmp loopne call sub pusha fstpl aam mov mov insb xor inc cs loope rcl pop fincstp mov call cmc xchg sub jmp jg mov das sbb loopne outsb repnz xor jmp xlat in rcl jmp push push mov jg fldcw dec int sahf loope add aad adc mov ds leave pusha pushf fwait mov fidivr dec mov decb in gs push push jns xchg in mov loop loopne dec testb (bad) jecxz in sbb cmc movsb into mov cmp std adc lret add push daa push mov frstor aas leave cli jl scas rcrb sub mov and mov adc add sub lea ret cmp sahf mov pop or or add imul pandn xor fstpt int3 push loope and cs lcall lods arpl sti (bad) push xor rorl cmp cmpsl sbb cmc imul in roll ja jae push dec sbb (bad) xor stc hlt data16 sub fiaddl or jae adc scas ja sarw pop or sahf insl sub mov jno sub test adc pop xor jae ss idiv inc or push sbb aaa cwtl sub mov xor test adc push sarb pop les test in mov jmp insl sbb loop,pt mov mov aaa mov (bad) and mov aas je daa dec fbstp mov das lds out jae rorl jnp pop xchg nop ret jno push push xor out ja inc mov push rcl add fwait stos mov mov mov xchg push push mov lea lds mov or sub inc sarl movsb ss xchg (bad) clc mov jae xor insb mov nop xchg mov ja push (bad) ljmp adc add mov popf sar xor sbb inc or icebp movsl ds test push outsb xchg inc xor int adc jle inc xor xchg or dec test aas xchg outsl xor xchg and lcall xor adc adc jl xchg adc jnp ret shrl push mov sbb (bad) and cld stos divb mov dec mov inc add cmp sbb mov (bad) call ret lcall inc outsb gs push or push or shlb imulb cmp xchg mov lcall fistpll out push jnp xor push decl cwtl adc cmp push sub ss loop xor sub sbb pop les les enter (bad) sub xor enter push (bad) dec das xlat fimul pop xchg rorb ret mov bound jns outsl jg inc daa (bad) cmc mov jle in push stos rcll cmp xor inc faddl add shrb int pop pop in inc xchg dec xchg fidivl cltd testl mov mov lods lods cmp lods xchg sbb iret cmpsb jge fcmovnu mov int sbb xchg insl pop push call pop jmp add cld arpl mov sub xor (bad) addr16 xor mov repnz bound adc out mov les pop pop enter inc cs js sbb or sub stos cmp push or mov (bad) push data16 call sbb call js jnp (bad) sub lret addb mov or mov into (bad) and pop hlt push mov add cmpsl addl test icebp dec insb stc sbb test and push (bad) lret les ret testb and push inc jmp add shll fs xchg fwait shlb or mov mov loopne ret mov adc cmp sbb (bad) je sub nop/reserved clc lcall sahf loopne mov jb push push call sub jns mov xchg mov mov push stc mov pushf pop out pop hlt pop leave (bad) fucom push xor sub cld and fdivl mov mov inc cmp nop je jnp add sub aaa mov jns dec mov dec dec dec sbb jno das xor xchg or or iret or xor test js cmp cmp inc inc adc dec push or lock das aas xor rcll mov call int3 dec std (bad) push xor out loopne mov xchg inc cwtl add and xorb cli (bad) jbe mov addr16 jle rcrb push insb jnp lahf xchg xor enter int dec movsl cmpsl pop sbb jae push imul mov cmp shrl fcmovnb cltd rorb test lcall test cmp sub mov mov mov fisttpl push jl xor dec cmp jg mov pop popa cmp out pusha mov mov inc mov xchg dec adc or mov cmp fsubrs mov cmp lods mov pop mov jl outsb xchg outsb xor jecxz rorl pop xor imul scas or inc or mov pop cmp push cmovo sub adc sbb stos fcomip and push int adc cmc addr16 (bad) inc fiadd inc mov add test sub xchg shlb rcrl mov mov xor and fstp fcmovnb loop xor fbld inc adc ss js jg ss push ja pop fldl inc cld jbe fisubr inc andl bsr push xor jb cli add mov (bad) xchg jle cwtl outsl in imul mov fcmovbe lock call clc push jo inc push popf pop mov push bound pop dec pextrw outsb out xchg xchg iret scas lahf mov pop hlt pop dec fist xor push add movsb test int3 inc (bad) cmp fldl or mov add inc clc imul xor andl mov sbb mov insb stc pop or popf pop in (bad) mov clc sbb imul xchg dec loop and mov jg dec mov in or adc ljmp rcrb jns fxch (bad) sbb mov add sbb push jo xor pop sbb dec mov push popl xchg pop cmp mov imul aas xor sbb add push popf mov shrb mov lret cmp dec cli dec outsl in movsl sub call leave add outsl jmp fistl pop pop (bad) cli ds test jnp mov pop mov (bad) mov shll cs jp packuswb inc jg into add out cmp pop movsl imul lods mov mov mov test cmp push fidivl inc or pop cmp mov pop inc addr16 out push sub aaa adc (bad) and xchg mov (bad) ss mov cld mov add push ret sub dec rcll jecxz imull loope sbb mov out push sbb mov dec xchg sbb movsl push xor xlat inc jne out add dec push xchg jnp je test push scas test (bad) cmp (bad) aaa test dec sub lods dec (bad) xchg push gs mov push pop pop sub push xchg sbb ret jns and scas aad mov dec push pushf shrb mov fcompl jecxz cs stc mov mov jecxz xchg adc push outsb ficompl sbb cmp adc js jg mov add test add pop out and xchg mov cli sub out pop outsl mov bound rolb call fisttpll sbb testb iret sub add sbb sbb xor enter xchg or fcmovnbe insl sti inc adc insb repnz and adc or mov inc daa bound (bad) shlb aad pop jmp mov jno and jns out and mov pop xchg sbb cmp adc loope aad mov mov mov test jne inc sbb cs jge test rcr pusha (bad) (bad) mov mov popf xor in mov ja mov xlat or jno bound xchg xchg cmp js cltd mov sbb arpl mov cs sbb scas imul (bad) xor mov gs adc and fldenv (bad) int adc mov stc loop cmpsb test js dec push sub add (bad) jns adc fnsave loop sarl sti inc stos lock or or and xor sub inc stos test inc imul mov mov xor xor xchg movsb popa pop lea cmp cld xor test aam sub sub addl ljmp mov adc jg js jo mov aam in mov dec push and mov outsl loope cwtl push fucom int3 lahf dec nop es dec jl jo in fldenv mov adc aad xchg in sbb scas push xchg jae and js jnp mov xchg aaa cltd cmp push adc jnp or sub sub nop pop je inc mov xchg fisttpl loop mov imul sbb jo mov ja incb push xchg loop jno mov lds push push in xor cmpsl ja sbb gs adc rol inc push rolb nop loop push fildl mov sub and dec xchg out jae lock outsl outsb cmp testl in mov fist inc daa or push addl lock sar loopne pop hlt cs (bad) int3 std aaa push xor mov xchg and adc and aam repz ficom sbb outsb push dec adc push dec loopne enter pop ss call mov js mov popf movsl add adc mov imul sbb aaa pop push push mov mov mov lods lods xor pusha mov dec sbb out (bad) pop mov sub mov inc std std xchg scas and pop cmp xchg aad push dec lret cld xchg out outsb inc mov add mov int mull add lods or jmp mov dec sbb add rcrl lret xor mov dec add daa popf roll jp mov andl mov outsl stc jle mov pop dec jecxz frstor jmp (bad) fldenv repnz sbb jns jmp pop pop mov test dec push fist cwtl pop sahf or pusha xor pop (bad) jbe sbb mov scas bound add sbb push add imul jg stos mov in or aaa pop fs xchg or adc (bad) test push cltd outsb mov mov insl aaa push outsb sbb out sub mov andl inc pop inc mov cmp dec pop mov mov and cmp jno mov test sub pop push mov mull fstl or loope test icebp add insl (bad) mov mov aaa inc fiaddl jo pop jne push ror jae push mov jnp int3 push mov jnp rcrb fbld cmp xor lahf mov jne jo inc repnz add loopne jmp leave stos out out call cmp inc insl je push dec inc fwait divb pop (bad) mul out pop sub loop inc roll mov xor testb xchg sti mov imul (bad) addr16 xchg in dec or push xchg or (bad) mov loop loope add mov lea xor sub (bad) pand cli fadd ret loope and xor adc mov jle bound mov dec mov bound push mov das mov dec mov (bad) cmp movsb sysenter inc sbb ja adc leave movd ficom mov xlat push xchg dec sbb andl hlt lcall sub mov mov out push mov lods insl cmpsb cltd inc popa xchg cltd xchg hlt push or jb orb (bad) jecxz ljmp imul xor stos sbb xchg add sti add mov movsl clc fs cmp xchg push inc mov adc mov jle popf pop ljmp popf in (bad) stc into sub stc jecxz pop ljmp or xchg cmp rolb rorl imul cmp mov mov mov mov pop andl insl lahf mov enter dec jl repnz stc (bad) xchg in cmp or dec movsb imul addr16 nop push daa sub mov aas jno cli mov sarb mov mov loopne daa add adc add sbb movsb dec or adc nop out cmp jle insl sahf push pop lcall mov js sti into jmp rclb das pop into jp fdivrl jp (bad) push xchg icebp bnd repz cmc mov cmp pop insb mov mov cwtl pop loope stos ds push or dec mov lea and fdivl test aaa add mov repnz call mov sub cmpsl sbb pop (bad) fistpll test fsts xor add jge jae outsl loop or lret (bad) cmp les push (bad) dec scas push fistl fs icebp add popa mov cmp mov bound loop pop xchg jno nop notl rcll ja test repnz cmp test jb inc insb jmp pop jns lea cli add movsb jnp mov fidivrl imul xor test and xchg pushf ret xor repnz ss adc (bad) jge sbb cwtl outsl and fs pushf test xchg aad stos mov pop and xchg and pop sti cltd loope and loop stos insl dec jne mov movsb xchg addr16 lret pop stos or aaa jae xor sbb clc add xor jno insl (bad) xor mov int3 ljmp in aas (bad) flds mov (bad) clc add gs leave add pop je push popf adc je jb sub es stc mov shr xor lret inc insl loope test or mov jmp inc cli sbb fidivl jmp push ljmp and inc sbb pop lock sub shll xor pop imul daa bound or into cmc inc fs lds lcall xchg cwtl insl jge lcall sub inc jnp cmpsl mov mov cmpsl jo cmp pavgw push push cmc jl movsl outsb loope inc repz fistp sarl das push pop (bad) xor mov or mov mov mov mov incb push fisubl jmp ficoml nop sub iret lods mov lea (bad) and mov adc lcall or mov rorl sub fs ret xchg loop dec jg fidivr ficom mov mov pushf cmp faddp or in push (bad) mov push std mov rorb push (bad) dec (bad) jo sbbl lock mov lods add lea pop out push xchg into (bad) push ret lods popf mov lahf sbb sbb cmpsb push adc pop loope inc adc pop jns js mov push add dec pop inc dec hlt cmpsb dec shll xchg sub add mov das push push stos or jnp xchg ljmp js fwait cld push (bad) xchg scas and out shll lret inc adc popa add (bad) push mov stos test cmpl sub stos jns sbbl jmp bound je stos imul mov mov add lds dec push push sarl sbb pop mov js fstl testb scas in mov outsl xor aaa imul xchg stos notb popf cmc inc xchg int3 and fsubrl sahf xor sub sbbl negb sbb sub in inc push xchg sbb mov xorl push out sbb xchg pop (bad) (bad) mov into arpl and das repnz cs mov sahf roll add cmpsl gs dec inc lret dec ret int jnp sarb and mov sub pop mov lret mov out mov sub or lods sbb gs mov out popa es iret in xor pop sarl fiaddl clc pop (bad) jne outsb dec add fs dec lcall insb out sbb mov lock dec sub (bad) dec adc or mov inc js push repz out aas cmc (bad) call and (bad) mov rorl in xor addr16 cmc lret pop pop jnp xor push inc inc movsl jne jge inc mov inc loopne outsl jmp lcall cmp out cmp mov sub addr16 mov inc jne movb adc repnz xor push push std mov sbb shrb pusha out pushf js inc xor test jl or cmp test xchg das movsb lcall mov subl dec lods cld adc push out pop mov push faddl insb ja mov outsl sub inc sbb fdivr push push fbld sbb push outsb stos fnsave ret ja pop mov xor cmp cmp stos je je xor or lock bound inc jnp mov aas fucomip and adc js scas (bad) rcrb jns push push inc and sub nop mov fildl pop cmp pusha dec inc dec dec ss bound add or pop orl in sbb sbb xor mov jne mov xor and jge aam jno jmp ret loope add mov stc in xchg iret or lret lret mov jo mov repz mov movsb pop cmp add cmpsl and sub stos outsb mov push loop sbb insl fnstenv inc xlat in cltd xor xor xor mov add mov into repz sbb jle nop inc loopne mov gs rclb dec das cmc and dec mov push mov mov pop mov dec pop popa popf inc sti je dec fiadd add push xchg mov js std sahf xchg xchg mov inc mov mov jnp popa inc pop sbb xor sbb cli (bad) pop stos adc sub sbb add mov and and ret fisubrl pop ljmp jb js jl lock xor fwait into into or je ljmp ja or sahf mulb push pop testb dec sub adc push mov mov dec sahf imul clc out into mov mov movsl (bad) lods adc xchg in jo inc in scas sbb xchg sbb dec xchg lds sbb cmp es mov cmc xchg sti mov pop cmpsl jmp pop sahf push xchg mov mov imul repz jp jp mov lret daa mov inc inc dec inc dec data16 lahf mov adc jmp subb ds es xchg pushf fmuls push and dec fidivr jmp (bad) mov adc dec inc adc jge sarl loope imul sbb test xor xor ret mov movsb fcmovb and sub imul shll inc mov cmp pop mov loope out out adc jg leave pushl jns xchg cmc leave cmp cmp out nop add fidiv add imul and je mov rcrl popa add sbb push xor rorl setge enter dec cmc lods punpcklbw out jbe scas fwait cli lret shrl loope stos ss lds and jae xor adc fistpl pushf scas test or divl aad aaa inc cs ret nop pop dec add jecxz jecxz or or in popf je sub insl fwait lret cmpsl cmp sub pop or (bad) cld cmp sub fwait push lock shll and or sbb jl (bad) xchg subl std sub decl addr16 inc jnp sub data16 out lds sbb ds add movsl arpl xlat xor fs sar ljmp mov jmp xor repz lret jne fbstp sbbb xor xchg lcall lret push adc int les (bad) cmc leave sbb cmp movsl pusha mov jmp jg sbb mov sbb clc adc stos je xlat inc inc jecxz inc lods popa loop mov xchg mov cmpsb call scas fsubrl add and mov adc pop jle les scas (bad) jmp loop jp mov dec pusha adc cmp fcom scas pop imul in adc dec out arpl xor outsl adc mov mov fldenv add cmp or push add sbb push xchg out stos es cmpsb movaps push or inc inc pushf xchg adc in or adcb add gs mov ror dec cmc mov sti mov cltd add data16 mov loope sub adc inc rolb outsl or test and lret popa mov jg mov xchg jbe ret and test xchg jp je scas cmpsl xor add sbb inc mov insb add cbtw mov (bad) mov and popa or and sub ret stos iret addr16 popf pop mov fs iret pop cmp inc adcb (bad) jns add mov jmp hlt (bad) nop je sub fcomip sub loope fcmovnb jb int3 xor (bad) je pop push push xor xor dec sbb mov lahf push lret mov jge and jg and fidivrl outsb mov out loopne xor and mov mov mov sub and imul mov lds xchg movsl or and scas cld add sub cmp inc mov mov push sbb add daa xchg and test jb push dec cli adc fs push sub add mov test mov fadd fidivrl jno sbb jp fdiv push mov jecxz push sbb push ret push insl sub lahf shrl mov mov imul lock out ljmp rorl or mov negl aad rorl daa or ds xchg push inc push sbb mov lret ror dec insb xchg push rcrl repz ret xchg push test inc nop mov pop push aas dec loope cmovs aam je pusha jno add add pop or inc push aam aas aad (bad) (bad) sarl jle pop xor shlb shlb and pop jmp mov xor std and movsl ret cwtl cmp push out into imul mov shl scas andl rcll pop addl stc shlb pop xor cmp dec (bad) cmp and xchg jg jns push dec insb repz pop adc movsb mov loope stc js jl aaa cmp mov push pop cmp clc loope mov fcmovu adc das and mov pop jnp (bad) imul pop jno add repz popf imul arpl push push push xor in push sahf lea imul int mov mov insb imul call mov push xor enter cltd sbb jns leave sbb in notl adc (bad) gs imul or or mov dec push mov xchg aaa dec pop pop bndldx or divb scas std xor in mov roll imul in sahf data16 mov cwtl xchg or xor inc icebp push andl popa xor test cmpsl dec jp sub mov push (bad) mov cmpsl inc cmp mov pop pop xchg aaa pop adc sub mov add pop jle inc inc ja (bad) jmp push gs or or mov (bad) jne hlt xchg aad inc icebp loopne xor xchg xchg lcall aad (bad) out insb xor and mov insl push lcall cmpsb loop and rorl adc mov mov lods and adc lret pop inc add pmaxub dec (bad) mov ror mov inc cld inc jbe cmp sbb stos mov mov mov loop fcomip sahf mov push insb hlt or sbb jns movsb jmp mov pop scas inc dec leave mov addr16 mov stos out push icebp push jge popa cli hlt test shlb dec daa das cmpsb push jle insb push imul leavew pop adc adc cwtl fstps mov xchg in mov add fldl xlat ja aam inc mulb cli (bad) or mov ret mov push push aas (bad) sbb adc dec mov aaa test (bad) (bad) popf imul jecxz data16 mov jae ret shrl inc aaa call and fistl dec fidivr mov xchg ret jle push xchg lcall or jg into dec stos add mov iret shlb sub scas jb inc pop add push xchg (bad) mov xchg idivl (bad) ja xchg iret sub pop xchg cmpxchg pop mov mov adc enter insl icebp gs dec push mov in packssdw xchg sub xchg or clc int push xor stos mov push stos in mov jge sahf lcall mov mov test sahf iret mov adc cmpl mov out mov cwtl leave cmpsb fcmovne sbbb test icebp mov mov std daa add in lods scas stc xor arpl in ret mov pop dec inc lret mov (bad) stc sbb imul push mov ret (bad) mov xchg ror out bound pop pop pop in or inc jge add in mov add (bad) adc (bad) iret (bad) pop stc add cwtl (bad) lea dec mov xchg mov mov xchg mov mov cmpsl cmp stc test push popf in nop pusha cmovs mov sub jp imul or arpl add xor and push jg js call leave xor rorb pop dec push and out scas jo push xchg jge pop lret loop dec inc xchg or jnp lahf and cli xchg in jmp mov jb push iret dec (bad) cs test mov inc leave sbb movsl xchg pusha movsb push jno xor mov dec ret xchg jo popf mov xor mov sub mov add sbb nop push xchg (bad) mov jle std jnp sub in lcall cmp bound sub mov dec (bad) dec ljmp inc enter ficoml das (bad) iret mov stos stc pop call fisubr clc push pop pop loop dec mov fcomps data16 mov imul lahf mov jnp xor mov lods std push fwait call fstpt push jbe push dec sub jb cmp ret scas cmp or call jge cwtl stc cmp mov ja daa mov es jle xor bound in sub imul dec mulb ja or stos mov add inc cmp and sub pop rcrl dec pop mov jmp scas push dec and out aaa imul call fstp ja jns bound mov mov sbbl mov pop ret decl xor push mov pop or and jg mov test inc xchg test pop xchg (bad) mov push gs inc sahf xchg ret stc lock lock in push inc int sbb lock mov and jl adcb sub jo icebp xchg or div or bound mov cmp cmp dec ja stos sub push mov jp jl mov loope nop pop loopne xchg enter jne dec xchg lock mov (bad) clc mov pop out les push sbb aam lods jne shrl cmpsl pop or push jge sbb sti aam dec ljmp rcll loope (bad) cmp mov in sub cwtl push push push lods dec adc dec mov imul jle (bad) popa testl cmp fdecstp out stos sub lcall push test out adc xlat adc mov inc loope gs cmp into (bad) ds cmp push lea xchg pop sti inc mov add insl xlat sbb out mov lcall (bad) mov idivl outsl lods push mov pop jnp (bad) jp movsb adc adc imul inc jno fadds jbe scas mov loop fldcw xor flds and insl push adc fs insb test cltd ja cmp insb mov mov xchg fisubl mov add sub pop sub std mov cmp adc xchg (bad) daa or dec cltd mov inc dec mov xchg and adc lret test ljmp arpl test jne cltd pushw mov sbb pop into movsb push loope fidivr jle sbb jnp icebp push jb jle cli adc ret push or and sbb xor outsb xchg lahf aaa jecxz fcompp rcrl and (bad) mov or call std into aaa in inc (bad) cmp rcrl push hlt cmp jbe int3 (bad) int3 or fwait addr16 lahf leave jb push xor cmpsl sub cmp lods inc (bad) ss imul or imull sub cmp in loope bound insl loop sbb lds adc sbb push (bad) iret stc idivl lahf xor push les xchg mov cli jne mov dec xor push mov pushf mull adc push ja fs scas in (bad) pop aam xor push sub aaa inc and movsl cmc sub sti push inc icebp lods sub dec push mov scas insb add cli ss fstl test add (bad) jns lods insb xchg lahf adc mov fcomi insl ret nop fldenv or mov and xor pop dec inc je test fmuls icebp pop and packssdw xchg add jae mov movsb add dec mov sbb jnp cs jl ret xchg xor aad dec dec scas clc fwait mov sahf test pop mov pop js mov adc cmp adc (bad) or or xchg inc int3 add cmp es (bad) lret in dec popa stos (bad) and sbb mov push pop add aam add sbb inc xchg stos sbb call sub cld xchg out sub pop cmpsl fbstp push and mov sbb in mov ja add mov dec fdivrp std cmc inc arpl xchg ret jo in adc dec mov pop ret lea lcall je dec xchg mov fisttpl pop or sbb xchg pop dec (bad) in lret jp sbb xor or xchg or add or add inc sbb inc (bad) lahf or (bad) sbb pop inc or push cltd test out lds dec cmp aaa mov lock int3 push call mov lret popf arpl sub adc addr16 xor out mov testl xchg mov and enter enter aaa nop insl xor and pusha in xchg sahf ret cmpb mov fcmovbe pop fisttp fldt mov jae cs push lock mov mov sbb inc adc std cltd or add pusha xchg cwtl stos lods jle or jns xchg dec fwait jbe lock cmp push and shr aaa pop sbb jmp mov sbb add lods pop add dec lret cwtl and bound loope push cmp xchg push hlt stc pop xchg lock sti in push mov fsubr cmp insl shrb leave inc (bad) aas outsl mov jo cs iret lret aad jg or pop inc mov mov jns das cli inc push pop add jno (bad) and js stos mov cmp or bound mov insl test sbb shrl shr (bad) lds inc arpl jb sahf jge and xchg (bad) jle,pn int (bad) mov sbb push sahf lea shr (bad) mov jb and out fwait (bad) mov sbb push inc adc (bad) ja lahf dec in into mov incl aam mov das mov es lret cmp push test push sbb (bad) in and std xchg lods std xlat or mov sbb (bad) push mov jno mov and adc lock xor sahf pop imul sub scas cmpsl push adc jne data16 jmp ret ret mov sub mov out push sbb jb mov (bad) test outsl cld jmp fwait iret mov xor push jmp std push fucomp (bad) fs out loope mov xchg ret pop test add jae iret and repz pop xor insb mov inc push add and test dec push dec and inc jmp sbb cltd stos and les adc xchg outsl fidivrl inc ret out paddb push test call in test lds mov sti (bad) ja cs push stos lods es adc dec (bad) or fs sahf test stos mov ficomp hlt adc mov imul nop loop ror es pop add outsl mov xchg jne fidivl outsl dec pop test pop in sbb outsl rcrl clc loop outsl mov out loopne sti out out pop jbe (bad) addr16 (bad) in outsl dec lret xchg push rcrl xchg cmp jnp sub orl popf imul (bad) clc insl mov sbb adc lds xor in lea test frstor push mov fistpll adc (bad) out xchg pushw shr xor adc test xlat mov dec or les sbb jo xchg ret xchg jle inc sub cld inc jge jle mov xchg sbb icebp out scas adc pop xchg sbb rclb sub or mov cwtl or mov pop int3 inc cmpsl nop insl mull mov sbb lods xor pop dec das divl int3 mov dec jecxz jae (bad) hlt mov and and jnp inc jle lret aaa pushf dec mov jnp or in xchg shlb out repz sbb mov push mov das mov sbb sub lock jmp jecxz jo hlt jp test ss push scas and addr16 out lcall jle jl cmp mov pop test decl sub lret and test lock shrl in je ja (bad) (bad) mov jbe jg aas call (bad) repz sbb loopne pop push xor daa in push repz mov mov es repz shll cmp aas jns push sbbl into ret in and jae sub fwait xchg pusha jecxz test cli int3 or aam aaa mov sbb bound push stc test sahf sti jmp push mov aas (bad) push ja cmp call je push ss les mov or movsl jg push cmp inc or or dec jbe aam outsw ret or or idivb mov or add xchg test ja jmp inc pop popa jl pop je ljmp out add mov (bad) (bad) push jb mov sbb out outsl int3 stos movsl jl shrl jp adc inc outsb jp imul daa in aam pop out mov jecxz dec test lods ret popl int3 xchg fmulp inc xchg fwait int sbb ljmp insl mov mov fstpt movsl xchg mov adc aas outsb add sub sbb mov cmp outsl or cmp mov paddsb (bad) mov mov mov lret xor ficom pop or add test xor (bad) cmc test scas movl mov repnz in sbb mov ret pop mov aas int fwait aad aam stc movsb in push xchg mov jg and test sbb cmp ret dec xchg push mov mov mov cwtl mov cli cmp in dec movsb pop das stos imul hlt loop dec jg sub xchg lea jns and xchg (bad) out push push in dec mov sub or rcrl and in pop xor repnz dec mov mov lahf xor add pop ficomp insb mov or push jno cmc inc mov test mov mov mov cmp push add psllw mov pop out fistpl push push jecxz test scas sbb dec xchg push loope mov outsb mov fidivl xchg roll or jl mov dec push enter dec or mov pop mov in xorb pmuludq xchg fcmovne and repnz jmp mov sbb xchg cwtl cmp jo fnstcw lds pop xor fmuls inc mov add mov push dec fwait cli or negb adc jae out sbb enter mov push rol in inc xchg pop xor adc jns mov jge out stos dec mul add mov push ret (bad) outsb lcall xchg pop vmovaps cmp loop jno jb pop mov xchg rcll mov sub cld mov repnz test xor scas dec mov mov decb pop push lock and std lcall stos hlt lock enter mov subl xchg or fcmovnb sub mov in mov icebp gs or fnop rol or lock inc sub fisttp mov xor jno dec xor leave push (bad) fistpll add lods cmp (bad) std push loop sarb daa cli xorl (bad) cmp call cmc mov in stos lret mov inc and or ds arpl mov sub adc (bad) inc sarb lods mov stos mov (bad) (bad) repz test aad mov lods and or test sub jbe (bad) imul es orb jo in jp imul sub pusha js test inc mov dec or mov push pop adc xchg push sbb inc inc jge enter adc xchg sub (bad) loopne aaa add leave mov adc push sbb mov jmp in popa xor dec inc mov clc and inc add popa pusha add push iret add jno jb out cmp daa pop dec mov mov sbb push dec mov mov test ss addr16 mov movsl inc fbld orb add lods test ss (bad) ja std jbe pop dec or insb jp mov pop flds push cli xlat ret inc jge nop loopne ss xchg cwtl cmc cmp (bad) int3 out testb cmpsb ds inc and cmp add pop into popa pop sarb addr16 out sahf loope jno or jb in jecxz mov push loopne jb mov pop adc inc fs jb jno imul mov test mov or dec push fnstenv orb and repz push ret pop push inc pop lods fsts mov inc imul js or or popa fstpl popa lods or dec or pop les mov test fs xchg imul add fs push adc and sub jecxz or dec mov jmp fbstp inc test outsb idivl popa dec sub dec popl pop push aaa bound repz ja and andb leave xchg (bad) xor call sahf scas xchg push mov pop mov adc sub ja mov faddl pusha xchg insl mov pop or xor xlat cltd sbb cli and int mov push xchg add and push mov jmp pusha imul cmp lret loopne es cmp ds lret jbe jns movsb out in or mov test cld sub pop addr16 and ss mov js aas inc or xor jmp cld sub pop xchg mov push xor imulb mov pop in adc cmpsb je imul cltd and pop mov add push xor test add ds push cmp jo xchg mov shll hlt lods pop les sbb in lret dec stc movsb xlat xchg mov and jg xor jno ficomp inc test mov (bad) cmp das cmp mov xchg sub movsb push loop jg fsubl lds push push (bad) dec gs bound je mov imul movsb cmp ja idivl xor inc icebp inc add pop jb pop jb xor fiaddl xor das out mov or std mov add pop sub xchg sbb outsb fadds or jecxz ret xchg mov mulb stos jno hlt sbb int3 jo fwait repz bound sbb xchg inc lods repz pop sub fdivl int3 xchg mov push xchg adc xchg rcrb and testl incb adc mov hlt mov adc movsb jmp cmpsb pop popf mov ror pop xchg pop cld repz jge imul dec sub xchg add ret mov push stc dec adc cmp mov (bad) mov aas xchg sub jp add hlt mov out (bad) sub (bad) xor inc pop (bad) idivl mov das popf push add in iret sub mov inc mov loop inc pop mov dec test cmpsl out andb mov dec stos sbb and mov stos or fidivr adc jg mov scas dec mov sbb dec lcall adc dec das add mov inc dec in push inc insl jo imul xor stos fildll adc sti jecxz xchg mov xchg lods in andb or add push jae dec adc ds inc push aas fidivrl in insb rolb mov out dec mov nop insb cmp movsb ja pop (bad) jle xor rcll fwait cmpsl xchg pop add sahf push and sub sub add fxam (bad) sub loop cli mov lods cwtl mov add (bad) or arpl out in pop ss pop insb add aas xor sbb aad dec stc pushf loop adc xchg stos dec mov int3 and hlt sbb inc call adc mov sahf ds inc xorb loope mov mov clc sbb push stos in mov stos hlt cld inc sbb es mov aam or mov jg adc mov (bad) mov pop daa popa mov adc loop push sbb mov inc fwait push lcall ret xchg pop test (bad) add gs shr pop iret daa jmp cltd lcall mov mov push repnz xchg xchg loop in cmp ljmp rorl sarb pop shrl mov cmp pop pop iret mov rorb jp adc cwtl adc add lcallw lret sar movsl outsb mov add repnz icebp aaa jne jnp adc (bad) (bad) cmp mov dec lds gs jbe push out fisttpl mov mov or in or jno mov addr16 outsl mov add lods cmc imul dec sub lahf enter ljmp xchg lahf push xchg xchg rorb jge mov into sti fwait test (bad) into arpl aas in push pop in jbe fisttpl adc out mov addr16 rorl jns xchg push push inc sub lret push int3 push lret in fbld xchg ror pop scas in mov push sub inc mov dec push push lret pop in ss scas xchg inc push arpl pop jecxz (bad) out mov ficoml mov push ds int stos dec xchg xchg in shrl out inc pop insb xchg xchg xchg jecxz fucom in and lret aas fnstsw xchg add aas incb leave imul sbb jnp cmc cmp mov xchg aaa arpl cmpsb push out add (bad) jnp dec pop pop adc xchg xchg fisubrl fldenv xor mov mov mov cmp add jmp push int nop ret shrb lea sub and scas cmpsl xchg imul cmp push gs out mov enter popa dec push loop cmp push dec sti insl jno cmp and lock inc or insl mov cltd movsb pop ss adc test stc ret sub jecxz jmp sub lods pop push xchg mov rcll xor push mov xchg jg fyl2xp1 popf lret dec inc fisubl mov fwait clc or call mov loope mov (bad) xor lds jecxz popf sub imul pusha mov imul jmp fsts repz add mov outsl pushf cmp or mov aaa push xor rcr pop dec or loopne add arpl add mov das dec lds mov in pop outsb push inc (bad) mov mov and push insb cmpl pusha mov adc out ret cltd (bad) adcl cmp lcall mov rcrb xchg mov pop (bad) sub ret sub sbb std or push cmc mov sub frstor es bound mov subl test lahf mov lods jb xor test test sub fiaddl stc xchg out cmpsl aaa lods mov pop pop (bad) sbb pop test mov arpl insb (bad) fcmovnb nop mov lods sub mov pop out cmpsl loop jge mov mov aam lock loope mov popa lods notl arpl aam xchg sahf rolb dec aas shrl mov jmp sbb leave cmp xor int3 or fistpl jge in faddl inc imul jne dec xor push std loopne xor push in leave inc adc mov jg lds inc jo repnz pushf sub and sbb out lds mov cmp movsb fdiv stc pop jns mov mov imul mov stos mov adc mov xchg sub ds adc mov push dec cli ja inc aas mov aam stos (bad) dec jl fcoms dec lods cmc dec mov icebp xor jb gs xchg into xchg out dec clc loopne lods pop sub (bad) cli xchg repnz inc mov mov jl fstpl aad popa cmpl and scas mov out pop test or pop push inc mov lods xchg mov punpckhbw push les pusha sti addr16 pop stc mov sbb out std mov cmp out push cmp jg cmp lret cmp xor scas lret dec push call int mov push push rclb sbb lea cmp pop lock sbb cli sub xchg sub mov test test sbb pop mov push dec xor stos jb out out sub mov mov xchg push sbb and test xor cmc pop adc mov inc pop lahf dec mov push lret (bad) or xchg fbld sarb lret xor ja lret push adc ret inc gs (bad) std aaa pop ficom outsb xchg sub inc rorl sbb in dec lods jg mov (bad) std xor in sub or xchg fwait call call adc cmpsb (bad) leave jmp adc enter fbstp inc and jp cmp sbb jge dec and ret mov inc cwtl outsb sti dec mov and add mov sub xor jbe mov lods xor dec (bad) fsub cmp lahf out and (bad) aad (bad) pop mov fimull stos movsl ljmp or fs loopne jmp mov xor push sbb stc and xlat aaa mov shr jbe sub adc jne bswap cmp jmp fldenv push xlat cmc add fcomps in je neg jl pop fsubp aad sub rorw pop gs flds pop (bad) jne add arpl ljmp (bad) mov mov push lods push xchg mov push ret or lds and cmp outsb cwtl lds push aam mov pop aas cli (bad) pop mov mov ret sub pop stc test es push es mov add sbb pushf push cmp mov sbb je mov inc lock hlt outsb jae lret outsb add repz gs xor inc add add jle fdivr js fisttpl jo mov (bad) mov repz push jbe daa aad push pop cltd (bad) sahf aaa in inc cmp push cmpsl xchg enter or xchg sbb ret sti sbb das xchg orb data16 lea push adc xor fnstcw push das sbb cli sbb lods xchg dec popa mov or inc pop (bad) adc mov xchg leave lods pop cmp int3 sbb enter cli and push (bad) mov cwtl fsubrs (bad) (bad) cmpsl pop pop jp clc jg xor inc cmp (bad) xlat sub in dec push cld repz and or sbb movsl sarl and insl lds dec leave mov cs jno jnp lea aas push gs cwtl xchg inc shrl xor clc inc or (bad) adc ja push aas mov lcall jo lcall data16 mov roll movsl (bad) mov pop popf mov das cmpsl jmp mov es push or pop scas adc scas adc cmpsl movsl sbb adc lea sbb xor add fcmovnu xchg jmp shr in inc jg jne icebp push call aas pushaw inc mov lahf inc pusha das sarl xor mov mov and scas ja andl xchg pop aam jne jge fs mov dec es mov add fnsave pop jae cmp push xchg out aad (bad) pop push inc or in fbstp frstor and or jle adc movsl sub mov add xchg dec push mov lahf lds popf add inc xor pop addl inc scas icebp je xlat cmpsb std mov mov cli out push bound cmc adc test and movsl cmp jl jno jle inc fcoms ret mov adc or pop xchg lea jle sbb rcl sti testb leave test mov pop int cli push int mov jne xor or dec (bad) pop mov fidivr xorb scas inc int3 sahf lahf add jle push test sbb push mov and adc mov sub mov mov je lods (bad) jp mov jg (bad) fidiv in xchg cwtl sub cmp scas pop les fs les rcrb scas dec pop or into push lret sbb inc loope out push mov xchg sbb stos push imul sti jmp ss je push pop add mov dec cli js lea (bad) adc pop sub or add rorb mov dec stc (bad) int mov or mov sbb sarb pop cs mov es mov in jbe jnp aaa imul pop aam dec ret out stc inc mov push ret dec pop loope fistp jne jne adc cmpsl push adc adc adc cwtl pop aaa jbe imul jl (bad) movsl adc (bad) aas test xor xor enter mov cmp jl repz or pushf sub inc add mov (bad) mov (bad) xor arpl mov ds in lret jo cmp add (bad) cmpsl test fsts shrl (bad) pop xchg dec pop jne push pop jb cmp ret and cs (bad) scas les aad es inc add aam rcrl out mov pushf xchg push adc cwtl inc push xlat dec repz add sbb stos mov test inc mov pusha dec lret enter sbb movsl lret scas or leave das (bad) xchg ficompl popf daa add div cmpsl push int3 inc (bad) cmpsb dec ret mov mov (bad) mov cmp cmp nop addl mov push push push dec adc fcmovnb pop push jae jo mov scas pop int3 aad cmp cs xchg mov call lret aam stos cld nop insl cmp imull fidivr (bad) push lret dec xlat scas enter mov (bad) mov dec push cmpsb fisubrl mov xchg push loope icebp gs add cmc ret shrl or mov and cmp mov lcall push mov rclb clc mov push call sub xchg pop cld and (bad) fstl cli sbb pop and lods pop add leave dec add xlat imul testl jecxz push mov lret (bad) roll pop sub dec stc add mov pop pop mull mov gs add sbb subl addr16 xchg inc outsl xor (bad) adc fldl and outsl jne pop cli scas xor les outsl dec cmp mov xchg test jns shrb fwait xor (bad) and pop ds fbld jne imul add mov fstps mov mov inc inc (bad) xchg mov aas imull xchg jne stos (bad) add add test loop (bad) mov push (bad) push in lods rorl movsl in push pop jbe,pn lret outsb mov mov gs mov cmp cmc xor pop jns pmullw pushf hlt cmp inc popf pop cmc xchg mov sub insl in jns jno,pn xor xchg sub inc fnstsw inc sti lods loope fdivrl out jne jno repnz mov inc lcall in cmc das stos sub ds cmpsl imul xchg and sbb dec jbe and cmpsb xor mov mov or stc push mov cmc inc test clc fwait or clc or xor bound jp or int3 dec push in lret mov adc aaa sbb or mov ss call mov dec lret xor jp xchg pop clc jnp inc into cmp insl ja ja and jg mov popa or shrb arpl outsl xor jl into add mov lret lods xor and or or inc dec pop mov enter icebp dec movsl xchg test xchg ljmp mov mov push dec sbb inc in mov popf push add and mov loopne push (bad) aaa jbe test aaa and sarl mov jns lcall pusha daa cmpsl (bad) pop (bad) icebp cld jae dec outsb stos add fcompl rorl je (bad) pop sub fs ret inc aad push jg fwait sub jl adc mov adc jo push add dec xchg push jns je ret mov mov lea lahf clc aam xchg leave (bad) loope push add or push lret cli jp pop add loopne std pop popf test or fdivl (bad) xchg repnz lods dec (bad) sarb push xchg gs test mov sub jae call push unpcklps daa cmp and xchg lea pop ret cs out loop jecxz out fildl jbe sub scas das fbld movsb and cli fwait lock (bad) cmc shl fbstp inc sbb ret push lcall cli fiaddl insb mov jo testl inc roll inc fiaddl aam outsb repz fisubrl adc out dec insl test lods stc mov movsb cmc mov lcall mov mov mov imul push test mov jle imul pop hlt pop jne mov xchg out push pop rolb adc in popa pop lcall sbb out jb jl daa pop or loope jo jns imul (bad) inc pop arpl dec inc repz bsf inc cmp bound clc cmp sbbl jb lds lods xchg imul les mov js sub stos push imul xchg add xlat arpl bound in xor sub ja or jp clc mov aas sarb cmpsl mov inc sbb pop aaa mov mov push xchg pop sub rorb pop cltd xlat stos xchg (bad) inc fdivr xchg test inc xchg inc sbb dec fadds rolb sub cld mov or and mov mull adc lret pushf (bad) sbb mov cmpsl mov (bad) cld fyl2xp1 adc flds fcmovb js fidivr int3 and loope imul cli adc xor ret mov inc cld je cli sti cmp mov call sbb inc push ja ret and pop and lock cmp push stos mov pushf xor mov jbe sub out mov sbb mov cld ljmp jl out aad fsubl call xor flds repz pop stos test fstps cmp cmp cmp cli lock push jb mov stos loop ret ss jl push inc and mov lods push aaa jne shrb leave mov cmp pop cmp or daa sub in cmp lahf cs call addr16 pop dec xchg lea cld dec add lahf mov pop repnz addr16 cmpsb mov or divl push or xor adc push popl fisttpll rolb mov add pushf lods push lds test xchg push xchg dec or adc xchg ficoml push inc sbb out data16 cmpsb push leave add xchg sbb mov sbb out mov orb sub rcll mov pop pop nop jg inc es mov imul aad cmp sub ret xor cmp mov sar add and push lods ss mov cmpsb mov aad xor adc add cs sub dec jecxz cltd inc cmc ficompl shrl mov lock out insb mov xchg or lret or adc das lea call cltd xlat cli out nop cld outsl ficom fs push stos (bad) inc sbb pop test sbb int movsl lods push mov outsl xchg cmpsb mov cmpsb pop rcrl test mov pop push xchg add adc insb inc mov add paddq mov push xchg repnz and mov ficompl adc push neg icebp mov jmp pop (bad) lret popa outsb cli cld stos push lds and outsl fdivp mov clc sbb inc pcmpeqw nop sub sti inc xor ds pop push jns sub mov inc ljmp sub hlt int3 bound lcall mov fs loopnew pop andl cmp sub pop adc add pop rep shrb insl cmc sub lods fcmovnbe jmp add sti aas dec ret mov movsb lret (bad) (bad) sub jl push mov mov or gs sub int pop lret ret push lock xchg and mov jo xchg repz push push xor dec scas add (bad) push pop inc jmp or subb in aas fstpt or adc (bad) dec sub insb popf or lea xchg ss leave mov cmp cmpsl into sub push sbb mov dec dec xor lods je xlat aas cmp and lds sti decb (bad) jp jge mov in xlat aas scas clc adcb adc fs fs push or (bad) mov mov popw in jo ja insl mov lcall in jge enter xchg sbb movb mov in adc dec cmpsb mov or mov pop mov lds add and adc (bad) push pop mov (bad) pop inc mov lods and sahf mov push enter push cs in (bad) enter nop rcrb jne mov mov stos (bad) jno sub jns bound icebp cmovp jp mov jmp mov inc mov push ss sub (bad) cli mov push mov or shll cmpsl inc out in aam xchg ja jecxz sbb xor push lds out xorl push scas jns scas incb or or in add pop mov shr aaa mov mov scas ljmp clc jecxz test xor std jl (bad) lock cmpsb dec pop dec jo mov pop dec push test mov aad xor popf fdivs sbb nop mov or ror insb in dec jle inc imul push jp loop,pt xchg mov mov inc in xchg dec pop xchg cmp or ljmp push jns fcmovbe pop int (bad) sbb cld jp lds push cmpsb leave call ret je popf inc pushf cmpb mov imul inc rorb sbb push pop (bad) mov jmp push jp pop lock loop es add sub jl add jne cmp mov jmp getsec addl and negb je shrl aam (bad) lods lds (bad) xor dec fisubrl mov xchg dec je adc mov fcomip test lahf in and mov lret test out mov int3 push xchg mov mov add outsb cmp cld mov push and outsb sbb inc je mov lods inc sbb sub inc pushf and insb ss or cwtl das pop push daa push lcall enter (bad) mov frstor xchg push lret js sti mov cmp push jbe test xchg and pop cmpsl outsl ja sub jno (bad) push loopne loopne repz pop (bad) cmp add xchg xchg in (bad) xchg xchg cmpl xor icebp fisttpl jne adc xchg dec stos sub movsb fldcw jecxz jno pop ret mov add cltd mov inc stos dec (bad) fdivrl pop lds dec iret sbb fist mov jnp inc ret lahf inc and bound jle pop mov dec movsb mov addl (bad) pusha out or arpl xorl adc loop mov lahf test mov sbb jmp daa imulb cli mov sbb xor inc xlat pusha (bad) dec test xor mov xor jno addr16 jge jp xchg insb sbb mov testl data16 cmc fildl lret xchg mov ja lds aad cmp in imul xchg inc push push leave ja ja sub shufps adc ds inc xchg or dec push add loop bsf loope or in rcrb xchg (bad) imul jge jge mov jbe daa mov pop mov push mov or dec adc iret out xor (bad) fsubl adc vpor aam scas inc mov cmp mov fistl dec jno inc push pop imul jnp shlb mov lret sub cmp dec xlat in pop int3 jecxz enter scas cmpsb ret sub sub inc jbe xchg lret mov cli int3 int jg ret inc dec or push shrl repz scas icebp int pop mov notl rorl imul push jp fstpt inc fs mov cmp imul add sti and inc xlat mov dec lret (bad) aad es add inc lods test or xor push mov mov into into sahf xor out xchg mov push (bad) mov imul movl xor or or push mov roll xchg test ljmp inc mov dec xor nop xor pop push outsl xor arpl or mov insb in mov mov or and sahf fisubr out sub cmp out push decl fldl movsb dec mov and sbb fildl lcall (bad) jnp pusha test fnsave mov adc cmp mov lret add inc pop cmp and jmp push in add mov push fwait lea xor das mov fistl stos push adc outsl dec cmp mov int push mov mov and jecxz pop sub lock ljmp pop xchg stos dec push aaa or sub or ss or add rcrb inc aad nop gs pop mov lret dec sub cltd push pop arpl movsb shlb jmp dec mov jle test push idivl pop sbb lds jg or es mov ds pop andb mov pop jge xlat arpl pop cmp xchg shrb arpl loop jp ret sbb les inc xchg scas mov arpl adcb rclb pop jns sbb scas ds push dec sahf mov hlt insl jmp (bad) adc pushf mov outsl jo inc mov xchg cs lds int inc lea and mov ret xorl out or cli xchg mov and mov std xor pop inc dec jns sbb push loop adc pop in insl push jno loopne dec lea or ja jl cld data16 inc aam xor push xor push aaa repnz xorb int mov xor mov aaa xchg xchg jmp inc push lret mov push outsb movsb fs mov and nop xchg mov xlat sub xchg sbb jne data16 mov out aad aas push (bad) mov xor cmp jecxz rcrl in pushf (bad) icebp nop xchg into imul in mov sbb jb roll mov shrb dec fsubs or push adc insl xor dec cmp movsb ja pop mov add (bad) or cli sub cltd jp movsb lods sub fisttp (bad) insb pop and cmp adcl pop jo popa dec mov cmp rclb out push pop test mov faddl inc xor imul mov pop lret int jbe addr16 pushl cli push pop insb out sub stos insl add xor std adcl test insb out jmp and push insl inc pop inc in mov js (bad) cmp xchg (bad) or pop pop popa xchg mov (bad) jmp jge lock cs ds test pushf mov push stos jecxz shll sub push sub cltd ss inc cmp popa mov pop add push xor lea je cmpsb and sbb mov icebp fs push addr16 dec stos dec pushf lahf imul xchg xor into dec mov cwtl loope sbb repz insb mov xchg je out sbb lea cmp xchg int sub int mov adc out jp outsl jle je adc shl dec ds in rclb mov out dec stos dec mov cmp xlat cmpsb roll fidivr pusha mov sbb jp dec dec add stc repnz int3 cmp (bad) lret cmp push stos cmp pop mov das lods ret gs jp push enter enter jns mov mov xlat hlt and add or xchg mov cli leave mov mov xor (bad) cmpsb sbb cmp icebp pop les dec mov push push add xchg sub test (bad) js xor leave jl arpl mov jl hlt fild sub cmp adc sbb dec ds dec rcll leave mov js out roll cmp jmp dec imulb insb push jns cmc cmp cs outsb scas ljmp pop mov scas adc or pop fcomip mov addl and cmp repnz in or inc jb mov cwtl dec or or outsb sti cltd inc mov outsb cltd jns and jg jb enter into dec orl push pop xchg mov dec pop (bad) pop push push push xchg data16 fistl and aam les inc cmp cmc push and pop loope (bad) dec push ja push mov pop jecxz sub xor js loopne out adc mov xchg mov leave pop daa lahf arpl outsb adc inc ret int inc iret push lock test sub pop add inc je imul insb mov icebp lods inc push popf repz mov movsl inc mov scas xor lea vcvtdq2ps mov cltd (bad) dec jp in cwtl cs inc xor rcl mov mov jmp cmp test dec xchg sbb popf int push test xlat xchg xor icebp or xchg imul push repz mov ror push aaa (bad) jb dec push movsl and mov dec sub add int3 addr16 mov sbb mov sub daa pop cli add xor mov out cmpsl in sub dec mov (bad) dec stos jg add lea and mov sbb and push ror jnp sarb push ja int3 loopne xchg inc rolb stc leave adc cltd mov cmpl mov rcrl gs out imull inc cli scas xchg pop je clc lcall sbb pop xor stos xchg mov or in xchg sbb xchg nop je sti pusha sub pop push adc leave stos nop rorl lds inc fs test (bad) dec das movsb adc ret subl dec rorl pop sbb mov fisubr scas jp or sar out sub in decl in loop imul lock addr16 inc mov js inc scas rorb push fmuls mov rol hlt imul jae and (bad) int3 insl mov cmp aad popa arpl inc xchg in mov push imul je or sarl stc fiadd cli sbb imul xorl ljmp mov aam int3 test fcmovnbe and and gs mov movsl xchg lods xlat sbb movsb cmc sahf jns fcomps cmp (bad) adc sbb insb inc and dec sub jecxz pop lret movsb adc repz xor pop stos add cmpl add pop sbb sti add int push cmp das xchg push shl xchg jbe test fbstp xchg int mov int3 mov mov mov out cld test daa (bad) arpl sarl das push movsb out shl idivl std repz enter push mov dec enter add mov push scas insb mov adc sub mov in dec add in dec imul jo mov mov or and mov inc ret mov sbbb iret pop iret outsl dec ljmp insl das and push lret dec in (bad) stos frstor jmp insb adc adc (bad) fisub sbb cmpsb lahf in popa lcall sti sub les adc xchg xchg inc adc dec sub lea inc and mov jecxz jb clc stos loopne in enter ret leave loopne mov sbb out out xchg jp cmp mov (bad) sbb adc sbb mov and push mov adc cld call sub test daa popa call dec jle popa cmc mov adc aas sub or and inc sbb ret push (bad) (bad) sbb pop neg iret lahf (bad) cmp pop fidiv in sub adc inc push (bad) xor and xor int3 test xchg popa jmp out cltd inc pcmpeqb int inc mov popa push pusha (bad) ljmp jmp out lret rol pop mov pop jecxz cmpsb stos fcomip jg xchg sub xchg test lret dec push mov jbe mov cwtl add (bad) (bad) out pop adc push in sar lahf rclb xor jecxz fnop sbb and inc (bad) data16 clc ficom xchg push add xor or push jp jno cmp push mov mov xchg int3 sbb cli out jge gs adc pop cmp in es sub mov fwait or mov mov ja stc fs fstpt cmp imul mov mov dec mov jns rcl in adc call mov popa adc hlt ds jno lods jbe (bad) mov jae repz push mov dec jnp mov in lea leave jmp pop clc sti enter inc ja push mov push jl sub in inc sbb loope repnz push jno idivl jmp js or mov stos mov imul lcall mov jmp lds stc mov (bad) xchg jbe push adc insl shrb dec ficompl ficom xlat jns sbb loopne dec loope mov cltd add ds or (bad) xor into call cli pop mov mov jp hlt stos xor xchg push xor xchg and xchg sahf jp mov cmc pop or pop mov or dec jno adc sbb mov aas cmp aad sti cmp jmp mov mov or inc fist sti jmp sub jb xchg or mov adc into or pop gs mov pop cli popf iret xchg mov (bad) aas xchg mov roll (bad) movsb sarl cmp mov mov pop cmp stos (bad) cmpsb popf mov pusha inc add jl rorb out movsb push sub mov sahf lods mov lret int3 push negl cmp jge hlt push sub cltd jg arpl or je ja ss xchg pop scas pop insb add es xor dec outsl cmc rcrb mov sbb test and daa mov xchg xor mov pop loopne es (bad) into iret mov xor push cmp xor xor scas mov fsubrs push icebp adc pop xor jns shl enter add fcomp sarb popa scas xchg cwtl pop sbb xchg iret mov pop sub mov cs mov sub mov pop lahf adc inc aad push insl mov jge lcall popa hlt jno stos xchg push jmp (bad) cli sahf repnz cmp sub push out ss in mov push pushf jne push push inc loopne or ds xchg std lods mov pop pop movsb ss fdivrp stos push dec out jae jg leave into mov pop iret lock in push push and push lods mov outsb mov jnp mov mov inc repz imul stos cli iret push xchg dec mov sub cwtl clc or jae adc xlat (bad) dec loop cmp dec push out push (bad) repz cmp aaa or push test pop lods sbb (bad) lock into outsl lcall fnsave pop and sti aam notb xor xchg or es xchg mov pop push mov lcall imul test scas mov lahf push aam xchg in dec movsl jl je (bad) mov out les xor push jae es scas popf andl (bad) xor lret mov or test push pop mov push pop sti mov mov sbb pop dec inc mov sahf lahf jae sbbl push mov movsl jne add mov add out xchg lods or cmp ljmp dec mov loop sbb adc std scas xchg (bad) loope xchg pop negl adc js call aam addb pop aas push icebp popf or push push push ret pop pop sbb scas enter lahf pop add adc xchg push mov xchg test or in xor xchg mov lock pop sar decw pop inc aam mov push xchg lret in push dec jecxz out push or test dec stos in add sub mov jno sub arpl push inc in jmp in dec adc mov jo xorb inc lcall cmpsb aad sub fstl add jb mov lods inc test enter dec fidivl pop repz mov xor ja test (bad) adc inc hlt test jl push mov incb stos mov and incl mov daa daa jnp movsl bswap lods (bad) lods sbb icebp mov sbb and sub push jp int3 xchg sti jecxz clc addr16 xchg rorl cli stos dec imul mov out pushf mov ror push inc lods adc nop xor mov bound loopne mov idivb test out cmp aam inc mov or aad sub insl insl or loopne movsb xor push mov push arpl test les cmpsb (bad) popl hlt inc repz test sbb pusha sub lock stos in xor (bad) in sub in jle mov popf movl pop dec mov mov ljmp mov adc mov loope sahf icebp push adc scas lcall jle lods mov push pop or pop inc add dec rolb push lods mov pop insl adc nop mov cmp xor clc jno xlat pop sub es mov xchg outsb rorb enter cmp loop rol hlt dec (bad) (bad) mov sbb mov cltd xchg push sub adc mov ja ljmp jge pop (bad) add mov mov pop stc or mov je mov mov pop aaa xchg and jb and xchg mov and jnp jecxz pop sbb push or xor daa insb cld lcall push push push xchg das push mov and test mov xchg push jne sbb rcll loop shl aaa (bad) call sub ret pusha loop dec lods mov inc pop mov jl lcall push jns pushf pop push paddq push xor outsl mov loope lret inc icebp jne push push gs xor sub jbe cmpsb or add (bad) cmc aaa pop int pop mov inc mov lea jmp lods orb out or popa mov stos adc adc adc repnz add ror cmp fdiv add aad mov push (bad) in cmp inc sbb xchg rclb push fildll inc daa cld inc test les out pop into cmp int3 push adc push fstl arpl lret out (bad) mov dec in pop lret ret add andl jmp ljmp sub sbb mov enter bound and or out repz dec inc ret mov in jbe ds and sbb cs xor push nopl pop stc xchg jo xchg jae movsb mov dec test dec and loopne loopne icebp dec add sub lret mov or inc cmp push xchg adc call pop lcall jmp mov mov xchg inc cli push xchg ljmp cs es inc pusha lret push andl dec cmp out scas imul movsl jnp xor (bad) xchg pop add sub inc clc add ret fnstenv mov mov push ror insl and or ret xor jl lret xchg data16 fnsave aas inc cwtl dec lahf sbb sbb xchg aaa jns call and enter clc inc mov icebp xor clc mov movb aas daa add dec push (bad) ljmp cmpsb imul hlt fidivr repz sbb jno ljmp lods inc push push repz push (bad) pop add cmpsl inc movsl mov xchg xor leave cli sbb or or sahf xor push icebp adc dec jle dec sub push mov xchg loop mov mov pop js xchg cmc push ss cmp adc sub sar mov pop int3 push pop mov push fisubl std and push inc iret loopne add xchg jge xor mov lret mulb fidivl scas scas sub pop dec sti adc or sarb add fs fildll (bad) fcmovnb mov jecxz lahf add dec xor call inc insb inc mov xchg rclb xorl sbb inc mov and push and (bad) jp fcomi icebp xor jp push pop mov lods and lahf pop pop and ja jb add mov cmp add (bad) mov or fcmovu mov imul xor aam das mov shlb rep pusha scas iret insb jmp pop jmp and cmp insb add aad (bad) dec jl mov (bad) lods pop lds add popa lahf push test dec stc push inc push mov or and jae fidiv pop mov dec cmc sub arpl ret jge imul test mov icebp dec sub loope roll jns insb dec mov cmp movsb fs rolb xlat dec test cs sti adc or xchg cmpsl aaa inc xchg xchg xchg (bad) (bad) rorl sub cmp or cs pop mov mov out rorb dec in test xchg push (bad) int jle xchg hlt scas xchg insl cmpsl cltd jg or imul pop push mov mull (bad) mov push movsb (bad) lock dec int xor test mov (bad) jecxz out ljmp ds fldl mov adcl out mov les sahf adc pop (bad) dec sub (bad) movsb pop es lods addr16 mov mov fwait in mov and sbb jmp sub es out leave in (bad) jecxz mov xchg out sub dec rcl jno push int test or icebp sub loopne jle icebp jl fmull fadds inc shrl test or pop scas mov out push fistpl xchg push sbb ljmp xchg bound imul sub mov sbb inc mov dec fwait ret mov imul int lret test jl pushw pop inc xchg jl xchg sub pop ss test and push dec mov clc jl clc push push jbe leave aaa rol in daa lods lods pop mov lods fs pop icebp inc sbb fimull (bad) add jb xchg cwtl mov inc fs int push dec xor mov add in lea add mov and lret fisubrl xor mov pop movl pop add push mov popf ds (bad) and repnz loope lds inc fild cs and cmp mov (bad) js mov mov stos inc push stos gs jo nop sbb adc mov int3 scas jl iret inc (bad) aaa jnp xor arpl push shrl mov jno or push sahf mov add daa subl xor push sbb sub push (bad) lahf imul jmp (bad) xor das push dec enter inc into sbb test fdivs frndint push inc or push cld cli dec add sarb mov mov xchg add add test mov je mov iret inc out push add mov (bad) push adc lods pop std pushf lcall ret shrb cmp aas inc dec sbb pushf int jg loope sbb mov jns in inc mov xchg cmpb cmp das outsl lea lea and dec xor scas mov jno add xor inc inc ret lret mov fcomps iret cltd hlt sbb enter jle jbe icebp push cmp in adc enter mov in or into es (bad) arpl shlb mov pushf ds add addr16 rcrb sbb adc test lcall dec sbbl popa mov repnz sbb mov jmp les xor lret mov outsb xchg add jae sbb pop (bad) dec jle pushf xchg aad jne jno inc and in jmp or outsb mov mov adc ret leave dec jmp hlt cmp and sub lahf sbb pop sub and fisubr lret (bad) cmc adc lahf outsb lods cmp into push inc sub iret ret mov xlat jle cmc add or mov sbb pushl clc out out ret repnz test xchg jecxz add dec or xchg cs lahf pushf in call dec cmp sbb mov fcompl xchg push sbb test jl xchg adc (bad) nop or aad add or inc aas inc mov lea fisttp ja imul push aad (bad) jle lea adcl mov dec jb jle stos push mov movsb jb movsb cld mov pop dec movsl add cmpsb adc mov adc dec inc arpl adc xchg out ja cltd mov stos sahf inc adc sbb daa jb xor idiv sbb hlt adc inc ja inc inc leave mov mov push addl mov fcmovnbe dec fsubs pusha fldcw test jp push jg mov inc ss into or jne out sbb dec cmp fldenv es test xor add pushf pop andl insb cwtl fsubr mov icebp and jle xlat cmp imul and lea mov imul rorl popa push push or add scas stos insb cs test inc mov add add daa mov sbb mov mov (bad) push addr16 mov enter cmp loop dec rcrl push push mov in jl lods imul lret lock mov mov mov jnp mov or xor aam pop jno inc std fdivrs xchg pop sbb sub in push add clc outsl mov repz mov aam mov les add cmp popf dec add lea jl push fisubrl fcoms jae (bad) int3 adc jecxz mov imul xchg outsb mov dec and xchg fisttp lock dec cmp cltd fisttp adc xchg ret mov cmpsb jae xor push mov jo mov fbld add ss mov lahf iret and mov imul loop sbb ds test mov iret push xchg enter cmp andb test loop pop jmp out loop fwait xchg fwait sarl fwait nop call mov adc xlat inc mov cmpsb lea faddl leave aam pop imul (bad) lods in xlat les lods jmp mov adc dec jae loop jle (bad) (bad) push aad jmp xchg aad push decb mov cmp loop add xor sbb imul cmp pop xchg flds jl jg incb cmpsb inc das nop dec jg rcrl add std sbb les dec lods repnz scas into add dec mov cmp mov rcl cmp inc add and sbb scas pop or ffree addr16 fwait and pop lea lock movsl lods repz frstor xchg lret mov scas cmp push pop inc hlt push inc subl lea insb jle ds std mov stc pop repnz scas pusha inc (bad) cmc aas repnz mov rep cld mov lods je das or jle je gs outsl sar lret gs dec fs fildl cmp sub dec in dec test aas out or cmc add mov fsubr rcll incl and (bad) xor movsb je mov push cmc stos popf push lret xor (bad) xor ret outsl jmp pop sub lods pop popf add lahf ret inc jge or das outsb (bad) stc in clc fs pop mov mov (bad) cmp dec sub sbb jno ret rcll repz adc sbb sbb xchg or outsb jg sbb jmp lods jne movsb divb cmp xor xchg sub dec adc mov call xchg pop (bad) xor out sub jbe jne fisttpll getsec lret data16 cs push mov pop pop out xor cmp repz repz inc push (bad) dec in scas sub mov repz lock dec clc and dec shlb rolb cmpsl mov cltd (bad) and pusha les cmp adc rolb ficom or std inc nop pushf lahf dec mov inc lret shrb (bad) cmc jne inc add jo lahf fbstp xor rorl mov xor lock cltd sbb in adc popa mov cmc pop inc sarb pop adc cltd inc repz xchg jge,pn (bad) loope out push enter sub movsb jg or lret cmp imul sti lock sbb popa add or repz push pop sbb and mov mov jne and data16 sub inc mov and or daa dec loopne out (bad) pop pop fcmovb aad mov sahf xorb mov cwtl ret leave xchg decb jo cmp add mov push jb rolb stc pop cs xorl nop jmp out insb lds mov xchg xchg sub repnz push data16 mov sbb fs (bad) cli test dec lret lods mov pop jae roll andl sub inc dec jmp leave jle dec fnsave xchg adc and fsubs (bad) lret jg fbstp mov rorl add shl ret and stos cld in mov dec inc dec mov pop mov sub dec incb addl xchg xchg fistpll shlb cmp adc xor pop popf mov pusha mov mov xchg pop sbb lret ficompl pop stc rcl cli aas jp xchg add and pop ds ret adc sbb sub push scas sbb jmp das rorl test and pop mov mov or (bad) and adc sbb adc cmp iret push stc aam cmp pcmpeqb out xchg xchg stc ljmp jnp je loop jbe push push jle adc or xchg pop pop and push pop jno dec mov mov mov xor mov pop nop mov ja sub dec mov pop imul rorl mov aas and lock cmpsl xchg out sub ljmp in sti data16 scas lods test sub enter sbb add jbe adc insb inc iret xor mov cmp and cmpsl cwtl ret xorl stc subb (bad) push pushf push mov mov push dec cli inc inc mov jae daa dec jnp aaa daa cli arpl mov and es popa push sbb mov scas xchg mov xor pushf jno mov dec (bad) sub (bad) pop pushf jbe sub loop lea inc mov and lret inc pusha rcrb push arpl sub pop repnz mov mov sub out insl arpl sbb xchg ljmp cmpsl daa loop sub mov lcall dec and push fisubr scas add iret dec lcall sbb dec xchg jl faddl in out push ss rcl and insb dec sub or hlt mov ss jl loop pop pop push leave test jbe sbb gs test or dec addr16 mov scas cwtl daa imull jp cwtl arpl or dec sub scas xchg push imul fimull cmc xchg cltd in mov add sbb insb aam adc cmp aaa out sarl jge fisttp xchg arpl and push aad push sbb or inc push inc popa pop inc stos test fldcw push and scas (bad) mov in mov xchg lods dec out test in hlt add gs push mov ret out cmp xor popf push nop dec and xor sub pop repz iret nop daa lea jnp insb cmp jne sbbb mov lahf les xor fldcw ja dec mov push dec mov dec xchg xor adc push mov mov adc nop sub std sbb dec fdivl out idivl pop sbb movsb outsb sahf adc cmp mov jle pop (bad) mov in cmp mov test lret xor push or mov sub xchg and outsl lea fidivr pop aas jle stc jo cmp (bad) js scas sti addl int jno cmpsl jge sub fcom sbb hlt stc out dec movsb pop mov ljmp add (bad) into pop jo jmp sub cmpsb rcr cmp mov push sbb imul dec add cmp jg addr16 pop sub or or fst jle pop or loopne call addr16 rorl repnz lea mov inc or incl xchg add push loop imull in or sub (bad) sti mov (bad) dec aad pop or insl (bad) icebp std push adc cmc push inc stos pop std fldl fidivr repz mov mov adc dec cmpsb sbb mov pop xor dec sub sbb cmp cli ljmp in inc lds inc push into dec ficoml cmpl cmc loopne mov pop jle jg sub xor jl dec adc je adc mov push sti xchg sub movb inc jae mov out or pop into iret add shll xchg nop in scas xchg xor push and ss incl data16 jne fwait lea xorb cmp subb mov divl xchg dec inc xchg into adcb sub sbb adc push inc push mov std popa xchg pop push dec inc cmpsl cmp jo pop push into add clc adc sbb dec lds jb cmc out out dec fsubs push repz xacquire es mov add pop das arpl addl pop sub mov ss arpl (bad) (bad) fcmovnu out sbb adc js xor jb mov xchg jae decb pop jno outsl mov lods jne or xchg incl add adc mov and fcmovbe adc fs fnstenv pusha jmp dec or out ja leave (bad) cmp jge loopne mov stos cltd mov movsb insl push shlb aam mov mov cmc push or mov jge cs lds lcall add jo stc arpl aam arpl adc add push outsb mov fisubr sub and mov mov dec adc add push popf lods jae shrl inc or mov in cmp mov dec push inc and mov jle jle jbe in inc or cmp lahf fisub add mov rcrb pop enter data16 das xchg insl inc loope stos xchg xchg pusha mov cmp js inc pop pop push sub pusha push mov jg,pn mov add fisttp mov call mov jne fsubl and add push xchg mov or pop (bad) ud1 jg sbb add inc dec movsl fnstsw push xlat cmp xchg cmp in xor out lret dec loopne ret jecxz and pop jns pop cmpsl popf cmp addr16 jnp data16 sub lods jns (bad) mov dec in xor aam xchg xchg loope (bad) repnz out mov subl lods jecxz inc aas jo pop bnd mov (bad) js cmc mov stc mov imul inc push xchg sub addr16 lods rorb in popf in addr16 push out cld and lea mov jb mov mov jle adc jno es iret push bound in fnstcw push xchg jno popa lea mov push cmc aaa ljmp int3 pop std test adc gs mov cmpsb xchg sbb jns jge dec (bad) es xchg outsb pushf pop add lods leave int3 cmp dec jnp sub mov rorb lret movsb push inc sub flds mov xchg mov sub nop pop stc inc iret jo shl (bad) pop dec cmp aas daa xchg out sub mov adc cmp call jp lods outsb rolb sbb lret shr test or mov fsubr es push push xlat jp je jg cmp add mov sti (bad) insl add icebp fist cltd roll mov dec leave stos sub js mov sub in ljmp lcall inc rcll push lods push test inc cmp cmp push je cmp ret nop (bad) jns xor xchg dec (bad) test jo dec xor fiadd jmp cwtl xor add dec movsb and mov popa sti andl inc lcall push leave cld dec aaa pop test cmp adc inc push sarb mov mov mov jmp stos imul insl decb insb rclb lods cmp inc cwtl into fmull in mov cmpsl (bad) fwait in loop (bad) xor outsb dec gs xchg hlt adc jg dec xchg xchg mov pop ret hlt jbe loope sbb negb pop sahf int3 stc pop xchg in imul inc and cmpsl jnp cmp (bad) rcrb arpl addb mov in lahf sub std (bad) adc das icebp pop stc lret jmp test sub mov pop cli inc mov movsb stc stos in (bad) cmpsl sub imul sub insl lcall repnz repz inc sbb jge xchg bound add mov push outsl rol (bad) pop xorl xchg cmp scas add cwtl cmpsb iret cmc mov ret mov mov not dec arpl cmp orb push bound jge push push stc das (bad) pop add aaa cmp and cwtl pop outsl negl lock mov xor mov push sub sarl insb xchg cmp dec je sub iret into ljmp inc mov js pop push (bad) or pop inc dec add sahf or mov sub mov jnp scas adc pop addr16 in adc mov loop push in ret add mov (bad) pop pop adc inc sub dec imul es popf imul fldl mov cmpl mov add xor sarb lods mov or and pop xor addr16 pop pop ljmp pop test cmp out and pop (bad) gs loope,pn mov sbb jge (bad) mov popf xchg outsb fistpll fild (bad) cltd imul cmp and sbb outsb xchg out dec push cs les sbb xchg lea mov arpl fsubl fstps bound xchg inc cmp mov push ret mov (bad) xchg pop in hlt jb int movnti lret xlat mov insb xor dec mov loop movsb test iret xchg imul jae sub sub inc sahf (bad) and (bad) pop cmp test imul or icebp lahf jp in cmp aad std add fs in mov outsb and jns jae and dec sub mov jmp and push jne lods je popf clc mov pushf jae cwtl xchg sub cmpsl sbb popa cmp mov in mov jne push jno in pop inc mov or inc fstps xchg pop repnz out xor loope js sbb xor mov outsb loope jo fcoml stos fadds inc sbb mov and mov ja jae cli xor cmp xchg and lds es mov je push push mov fnstsw out imul shlb sbb adc dec fimull add add iret jle out add mov mov push mov mov or (bad) loopne aaa cmp and inc inc sub xor xor mov fs cmp test cmpl lret cltd sub xchg test fxch mov jmp fbld (bad) inc fsubp mov jmp sub mov jle jbe out mov je and fcomps push jle movsl push dec dec or (bad) icebp pop lods sbb sub rcrb notb cli mov or mov daa adc xor insb push cmp jmp insl dec fsubrs and bound rclb and clc ja insl jp sub daa add adc pushf daa adc and gs xchg sahf fwait pop add outsl rorb addr16 xor pop fs stos dec xor inc add mov stc out cmp sbb pushf cmp adc xchg xor into push cmp arpl arpl nop imul (bad) sti cmpsb sub dec jns fistp outsl fsubs popf (bad) xor xchg cmp sub jno fidiv and (bad) std xchg fildll scas mov mov dec jle push mov (bad) push (bad) inc leave add fmuls jae and add mov mov add test les add fwait das sbb fs xchg sub lods roll scas cltd lea mov lods pop mov jns xor orb push aam lahf mov push fnsave flds iret or cmc and mov cmp shrl popf sbb mov movb pop ljmp pop sbb test loop les mov mov dec pop (bad) fwait clc dec cwtl cmp sbb push int repnz mov cmp push stc push push insb mov dec (bad) (bad) aas add rcrb mov iret int3 cmp xchg test ret mov arpl adc jg idivb stc inc (bad) add pop push xchg sarl aas sub inc cmp and or mov nop or adc hlt loop,pt jo push fldt jg pop test popf xchg xor mov push arpl lods call sub jns inc fidiv xorl imul jnp lea sub jmp push mov xor add scas stos outsb popf jae xchg xor fiaddl ljmp xchg mov mov xchg repz pop scas pop lret inc dec ss jb out popf daa addl inc outsb popf popf into xchg mov fcomps dec push mov pop push mov movsl jno lods leave insb aas sbb lret lock and pop mov stc je aaa into dec cld and add (bad) dec loop test pop ret mov jns leave and clc sbb inc mov sub test sahf mov cltd (bad) icebp not jae xor outsb test (bad) stos cmp stos imul jne xor cmp mov popf gs lret jmp mov sub mov or jmp add jo adc inc cmp pop push out cmp sub dec scas ss out bound jle (bad) pop or jno aam jae xor ret (bad) (bad) (bad) out pop sbb stos pushf xchg mov cmp stos aas aam cmp adc (bad) pop test pop xor cwtl add fcompl imul pushf dec mov cli dec outsb cld aaa ja mov add jecxz mov add aas sub iret dec fs sbb stc lock out fidivr mov sub arpl adc popf or lds pop test mov enter mov inc enter into mov (bad) out adc clc pop movsb push inc sbb or mov mov (bad) lock (bad) mov inc mov std and rorb popa mov push add xchg push cs cmp scas insl sub sti call xchg dec dec out mov clc in xchg fcoms dec js bound mov sbb out insl loope inc push fdivl test cmpsb push mov add inc ds cltd (bad) stc in dec xor dec jmp inc lret dec adc pop pop pushl dec and imul add test les cmp or popa jo aaa cmp sub in mov les dec or jmp icebp sub adc fsts rorb add xchg dec cmpb mov xor fisttpll push push test sub dec xor sub ret push jp movsb imulb push cmp sub cmc add jl mov insb xchg sbb inc jmp xor jl jg mov cmp iret nop aad inc ljmp xor das in jae shr sub mov mov xchg arpl and cwtl inc call adc insl pop (bad) pop iret addb dec jl jne mov in mov cltd sti out mov (bad) imul jne pop adc add cltd push aaa sti cmc mov mov movsl and push rol faddp xchg jecxz lret ror or push mov dec mov pop add xor movsb pop xlat fidivl add lds test scas or ret xchg lock push xchg xor jmp push add shrb leave jae aam jne push mov and mov aad aad mov in jo aam (bad) cs scas lret sti or jo xchg xchg push pushf lahf bnd jl push mov (bad) clc sarb mov (bad) or xchg std mov xorl xchg notb add adc xor dec mov inc mov (bad) iret leave jb cltd test outsb test mov loopne dec lods jle (bad) mov in fsincos jl push cmp daa adc add stc and (bad) call leave push mov and xchg inc inc push pop cmp dec aam jae mov push cmp sub mov test iret dec inc roll imul mov (bad) jo xlat dec dec test add inc test xor mov in cmp jb lret jnp cmpsl adc fwait jecxz mov das dec cmp add rclb jecxz test xchg dec xor push (bad) xor and test adc sub xor xchg ret clc inc imul (bad) mov and mov push nop int pop out (bad) jmp arpl sbbb repnz inc mov mov enter dec (bad) push lcall mov icebp dec aad mov pop (bad) xor out push out (bad) adc mov cmpsl adc pop repnz arpl mov and mov jmp in in jo subb rcll jb and into mov andl imul jmp mov mov mov out ja add inc xchg arpl imul jno jge imulb es test nop insb je mov ljmp cs mov imul ret and movsl lret jne mov arpl mov or lds (bad) mov addr16 fldt sarl mov or addl in gs mov add enter jo inc dec in sbb call stos push int3 mov jecxz (bad) sti les cmp lods sahf add dec push cmp sbb stos and fmuls int3 dec fiaddl lret imul leave decl stc call ljmp mov cld fstl pop int adc jle cltd rclb mov int jns jg xchg add stos adc add pop addr16 (bad) mov dec mov (bad) int3 sbb mov ret aam (bad) std in nop and add pop (bad) jae data16 imul push fildll mull mov mov xor mov gs xchg push or mov sbb push ror fimull push hlt inc test jne dec sarb pop sbb decb mov int3 cli dec arpl mov aam test sub sahf and ficom (bad) fnstenv pushf inc fisttpl (bad) movsl sub adc icebp dec andl jl clc push (bad) dec movl xchg test mov mov jo xor sbb add add push iret out imul cli pop cs push in inc mov jmp push notb pop jg inc mov fimul cmc enter fnsave dec fprem arpl xchg push jnp dec jg mov popa mov sub in sub js hlt insb cld pop and sub fnstenv mov pop sbb pusha inc mov imul push inc daa (bad) inc mov mov xchg mov aas fstl adc adc push out rcr sbb xchg stc lock test (bad) iret jbe xchg adc and add inc push xor add loopne test dec scas aas insb cld cmp jge cmp nop mov xchg mov cmc inc mov rol fisub or sbb push repnz (bad) and cmp divl jno icebp ljmp fadds jl mov ja ret pop out popf cmp mov cmc sub push fcoml pop mov dec jge inc fmull addb xchg adc push (bad) cmp call fisub push dec aam adc lock inc adc pop mov or sbb ret xor push or push xchg mov in jg dec push push pop (bad) int3 movsb pop jl cmp aas xor mov mov (bad) call xchg stos movsl mov inc pop and xchg (bad) (bad) jg in in popa es sub outsl mov pop pop adc ret dec stc adc xor repz ss cwtl sbb test call imul fiaddl cltd stos xor xchg rcr sbb mov repz test out push mov inc aaa clc shrl sti push pop aad mov mov arpl rcr lock add push push push cltd loopne xchg imul mov scas cltd and inc jmp jle cld xchg and fsubrp cmp mov push push ja cwtl cmp push inc das (bad) push push fwait outsl inc xor fiadd push clc xor leave sbb push mov dec xlat push cltd xor aaa mov and inc dec lods xchg lret mov inc mov repz imul pop (bad) mov and and daa in xor push popf (bad) fdivs mov mov movsb pop das out or mov dec incb mov cmp mov jbe fucomip bound lods test add lods aad sbb cwtl frstor into pop sbb add pop push lock popa mov scas (bad) dec scas inc jp sub jno cmp popa mov push int outsb (bad) jae in or pop dec (bad) adc out jge jg hlt nop push loop enter pop mov imul cld dec jne insl sbb pusha cmp mov pop dec daa and negb ret dec movsl xchg ret dec in and inc sbb push xor cs test orl pop mov orl jmp lcall inc (bad) xor arpl call or stc and ja les fs cmp jge jno sbb pop hlt or jecxz inc test adc xchg dec sarb dec mov out jle cs pusha inc or jge loopne jp sub pop mov div mov lods ret inc (bad) xor outsb cmp cwtl std (bad) xchg fcmovnu pop sahf pop insb add cmc lcall std (bad) loop sbb (bad) icebp push or or mov add cmp push dec fwait (bad) and inc push push bnd dec sar adc mov sbb (bad) xchg jge lock xor insb (bad) jae pop jmp in hlt orb mov imul daa sbb and jecxz ja repnz vsqrtss push (bad) cmp fdivrs jle (bad) js faddp sub lock sbb sbb fmull scas wrmsr inc (bad) push into loope jge add xchg orb lock mov and pop insb mov jbe mov jo cmp mov sbb les pop adc or test xor sbb xor inc int3 insb cmp xor test xchg (bad) mov jg or xchg fs add insb mov xor inc push stos das loop shrl addb xor adc movsl pop aas push xchg jae cwtl cli add mov imulb xchg or push jl popf and cmp mov test push sub or out xchg pop xor add mov cwtl stos add xor mov std pusha xchg and not sahf shr (bad) imull fwait mov inc jge lret int3 iret out pop dec iret paddd mov repz cmp jo bound loop daa pop fs fcmovbe mov lret pop les test jecxz adcb and mov loop cmp out cmp mov xchg add frstor and fs shrb ja mov mov jmp inc sbb lods and sub loop mov mov dec push mov decb jae jmp xor adc and dec jmp xor insl movsl scas jae inc popa cli in push lods add and pop daa in in adc in idiv sarb nop insb add and out int ret rcr int dec sbb pop lret adc push (bad) mov cmp xchg inc lods lahf mov inc mov push hlt stc push out xor data16 push jle lock jmp jo jb inc sti sub das mov dec mov adc cli dec jnp sub cmpsb leave cmp movsb (bad) pop mov mov sbb lcall mov add adc enter leave push xor nop (bad) sbb push xor push cmp mov pop scas mov cmpsl (bad) iret mov (bad) pop push mov add mov and popf (bad) xor pop mov push subb (bad) and cld int (bad) (bad) and mov stos pop mov fidivr adc dec out push mov ret push xlat pop push roll cmp sub lret jnp test xchg dec cmpsb fsubl mov inc test xlat out (bad) ja mov aad xor xor fistpl out push repz mov push jle pop cwtl cmp nop xor cwtl and mov (bad) jmp pushw dec ds shr xchg sbb stos call mov adc inc cmp push ficompl repnz lret mov loope insl fildll add lahf cmp jecxz into pop xchg bts sbb insl jl add mov (bad) sti lock cld jge outsl (bad) sub iret sahf jmp or mov fmul push sub imul cmp int dec test arpl imul push test pop pop movsb scas push mov sbb lods inc mov cmpsb arpl lea jecxz jns loop negb jae sub inc xchg outsb jp lock or xchg and push out (bad) in cmp scas or mov dec cmpsb mov aas xchg hlt nop (bad) loopne addl outsl fwait push or dec adc adc mov ret arpl dec pop in jg pop dec cmp enter push dec ds push and lods test pop push sahf add fwait mov or cwtl cld jmp (bad) pop push cmp xorl (bad) hlt in arpl mov test push (bad) cmp sbb or mov addr16 mov dec arpl bound sahf (bad) icebp into mov mov cmp push imul fstpt lret in inc clc mov mov test sub fisttpl loope sub jecxz jle divl js inc sub sub loop psllq sti inc dec in cmp push pop add cmp lods imul scas mov lods pop dec gs ja (bad) adc int3 cld mov les jae repnz test inc mov inc xor in push outsl loop pop inc loopne sbb jmp lahf aas cmp fnstsw enter andl jo mov jle ret mov js das jp (bad) xor stos ja inc and lds loop mov test (bad) mov fsubrl jmp sub ret inc jnp push out mov adc lret rcr cltd data16 loope imul aam lret mov mov sbb lds sub mov loop jnp ficomp push ret add aad jnp xor dec adc xchg push push add mov xchg mov jp pop pop call jnp push (bad) in test xchg out push push pusha arpl sbb jbe xchg (bad) (bad) fst ret mov sahf (bad) sbb lea (bad) rorb pop mov inc and fcoml xor pop and sbb popa or mov in and movsl fdivr stos iret xor mov (bad) cli aad mov pop push lret mov pop mov mov mov fcomi ljmp adc repz out (bad) cwtl mov int add pop xor adc cmp iret sub push sbb adc pop ljmp mov jl xor pushf push test pop nop clc ja mov dec push xchg stc nop mov or in mov push stos mov je rol shlb sbbb adc lock cld xchg loopne (bad) push adc les pop jge call enter xlat movsl adc xor pop mov aas mov rcrl cmpsb in add dec and pop jns jmp or insb in test out jmp cmc sbb icebp and sbb inc js test int3 rolb push fwait mov or pop mov mov push cld gs cmpsb fcomip mov xchg or cmp cwtl mov lds sub or stc jge dec mov pushf inc sub sbb ret out or daa adc mov and mov out xchg pop mov fs popa fsub or insl pop xor add sub mov lods icebp bound jo loop ss jnp,pt add cmpl xor and shll add dec fldt addr16 jae leave dec ja dec mov push (bad) pop imul xor xor inc je inc in mov jp adcb ret es add out insl aam js hlt imul popa daa push leave out or enter icebp cmp scas scas push pop cmp push push loope xchg (bad) (bad) rcrb mov xchg cmpsl mov subb ljmp xchg jae sub sbb test sbb add mov cli push mov scas ror mov sub (bad) push movsl mov cld (bad) jmp xchg decb jge bound adc out xor (bad) and push jno xchg sbb inc movsl out ljmp scas adc pop in lea xchg (bad) jl in pop lcall sub sub es cmpsl push inc shll add ljmp xlat adc sbb mov mov jns push (bad) mov inc (bad) ss xor repz pop and je fldt bound jae pop or scas aad popa sub dec shrl jecxz mov push ss pop cli ljmp inc jb les xchg lahf mov push and jne jle cltd jecxz movsb cmp dec xor mov sbb les push test and xchg sbb arpl (bad) mov lds test loop push imul jl xor mov or dec or inc push push cmp cmp imul out nop arpl and (bad) and out xor jb fiadd daa and or add mov icebp testb outsl lds and (bad) and adc cld sub into mov jge pop rcll adc and pop xchg andl je test scas xchg add xor xor loop test and pop sbb xchg test push inc jmp fistl inc adc les jae dec aaa das mov call fildl xchg sar mov sub xchg mov ss inc or xchg sub dec and dec or mov mul cmpsl sub outsb loop fwait pusha and jo mov pop mov mov imul scas xchg stos jg xchg addl sbb out (bad) std lds mov jle repnz push dec in pop push shll jne scas jbe dec mov mov fwait sbb shll cmp movl mov inc jb repz lods subl fwait fwait pop push inc pushf pop jecxz in imul pusha out mov jns sbb mov or mov out stos dec inc loopne cli push add data16 ds clc adc add clc push sbb jmp cwtl mov xchg dec aas les sti jecxz enter push movsb lock das cs lock out ret cmp idivl mov pop pop lds fs sbb mov subl pop repz push mov (bad) rcr xor outsb dec mov ficompl ja adc xchg jle fmulp in adc xor inc xchg insl adc sub mov mov call mov jae pop bound loopne sub cmp push and jge sbb adc add (bad) addr16 xchg pop aad xorb inc mov imul jecxz push jae pop into fbld jbe mov (bad) lcall jb lds pop mov dec sub mov outsl jg mov test lret inc pop stc shr arpl aaa fcmovbe jns rcr sbb repz xchg sbb pop dec inc je rcr dec lea imul xchg int jne stos lahf ret pop jle cli mov ja mov icebp push and in mov hlt mov push imul js popa adc add push xor jecxz cmp out sub fldenv (bad) xor pop push cli stos and (bad) jmp xchg ja int pop std push out push add push out je pop aad call pushf and and cmp inc xor cmpsb and shr cmp jno jb int jne push in jo push push jp popa stc fldt inc (bad) pop pop std andl lods adc insb enter mov jmp sbb lret push mov shlb (bad) mov inc pushf mov and pushf adc dec sub out stos sarl sub (bad) ja daa scas mov es jmp sbb xlat lahf push loopne lds jecxz lock data16 mov jl addr16 or test shlb fild out lahf (bad) mov sbb stos cmpl xchg cmpsb cmc incl xor sub mov mov lock sub or rolb rcrb out mov add shrl ss (bad) and adc lock adc mov leave sub jbe xchg dec and adc rcll pop add pop or xchg mov mov pop pop sub mov subl xchg inc les mov aaa and shl (bad) cmp int adc sbb inc lds call test (bad) xlat gs adc fldl dec jl mov xor lods dec scas mov rol andb ja bound test or out std lcall lret ffree insl xrelease xor xchg (bad) ss pop test adc lods mov pop cmp or sub pushf pushf jp in cmpl mov xor sub mov jb mov cmp push xlat push leave fs add add test ss dec pmullw add cmp sub fcoms jne sub xor xor fsubl adcl cli push les push mov jmp dec loopne cwtl mov fiaddl dec cmp in and hlt mov fnop scas int or xchg pop mov xchg jp bound and cmc movsb insl sbb cmp push sub or pop cmpsl into rcrb cmpsl cmp dec js sbb ret mov adc adc fs jecxz fistp test out ror cmpsb dec cmp jecxz mov fstl test gs lret cmpsl xchg add (bad) aas lret enter push cmp sbb scas mov test lret sbb out cmp cmp mov or and fildll and mov (bad) inc sub adc xor outsb cmc jne push out jo sub sbb cmp fadds iret jecxz clc mov fs je pusha sub or push sbb add jge inc dec into sbb xor pop fwait push enter inc mov testl push push cmpsl cmp in xor loopne mov repnz jno fst adc or adc fbstp fs jb les mov jae sbb clc and inc sub ret outsb and (bad) cli hlt aaa inc js pushw sub pop mov inc push imulb mov and in mov cmpsb pop rclb in adc ret xchg or (bad) add xchg pop inc cltd lret out cld pop inc repz pop aad les xchg xchg and or push addl sub aam sbb sub pop adc sbb maskmovq mov or xchg das xlat add ljmp das movsl hlt mov inc aad ds bnd cltd cld nop test add (bad) mov mov das inc xchg negl cmp push and jne sbb hlt stc sarl pop mov sbb pop push cmp ret test xor out movsl xchg cld xor or cmpsb jle pop pop push sbb xor cmpsb inc test test jecxz testl dec sahf pop push sub outsl cmp nop dec mov lret adc xor inc lods sub aas jp push fldenv sub mov lret and push imul cmp fcoml dec mov xor xor das sbb mov or movsl inc (bad) or dec testb nop dec add mov xchg hlt mov dec in pop ja jb mov and repz pop loop adc lods and jno in xor add in cltd xlat push (bad) mov mov mov add shrl mov std cmp sti getsec fwait sub loop pop pop sub inc mov sahf movsb cmpsl popa inc outsb das fdivrs jbe cmp xchg bound push pop add std xchg stos push add scas adc in in bound in (bad) mov inc lock repnz (bad) mov mov mov inc sbb add mov lds sbb sbb ljmp fnstcw cmpsl or je mov jl mov in insb jge faddl cmp jmp (bad) mov xor hlt sub lea add ret cmp lret cwtl and arpl sbb call lock cwtl aas icebp and fldcw inc fcomp cmpsb xchg jbe clc (bad) test mov pop incb and loopne iret pusha inc dec rorl cmp mov jmp cs ret nop gs push mov adc adc iret mov in (bad) mov xor cmc sbb add push bound xlat sbbl mov aad loop sahf add xor btr push inc jecxz mov in jmp xor jo mov sub (bad) jbe leave call cltd inc mov cltd stc push pushf shrb icebp inc imul adc mov or pop mov xchg jmp ret xchg (bad) sahf pop ljmp iret jbe mov mov notl mov gs add lcall mov xor popa inc repz xchg loope cs adc sub std (bad) loope repnz test loop sbbl test and cmp lock shrb mov mov pop mov adc lods add lds call (bad) and aaa mov xor fwait adc mov lods (bad) mov inc pop fmuls cmp rorl daa dec adc data16 and mov outsl outsb xor fxch push mov sbb jbe sbb inc repnz push cli mov in pop outsl out in imull xchg cmp cmp dec pusha pop pop xlat mov sahf mov jo (bad) mov mov in (bad) mov pop enter and push mov movsl sub inc orl xor cmp add mov (bad) fwait cwtl repnz lds icebp (bad) mov mov pop push out cmp adcb adc inc add sti pop ja xor push jle icebp ret enter cli mov test adc pushf cli jb test sahf jmp aad pop inc jb mov xchg fcoms jmp fdivrl push xor sub jg stos and lahf lods and inc xchg test ds dec add call stos push les and cwtl push mov aaa pusha inc inc jge xchg les stc sbb add stos mov test inc lret loopne rorl int push mov xchg adc (bad) loopne adc sahf push cltd or lods sub imul loop dec add and in orl inc sbb sbb fcoml movsb (bad) lahf fnstenv lahf lret cmpsb dec push (bad) (bad) fsub mov sub (bad) (bad) lret sbb in sbb repz pusha mov (bad) jne cmp int3 or aaa fadd jb dec jmp imul sub lret stos sub daa xor push push aad pop les mov lret pop or dec sbb push jp fwait add testl push adc dec (bad) nop pushf lahf insl cli and imul enter jae mov test pop mull sub xchg xchg push dec test (bad) mov and les fwait sbb jae dec mov js call dec out iret stos push jnp sti dec sti jle popa ret mov inc test pop inc movsb mov xchg mov stos xchg loopne push or jg lea rolb daa mulb clc into in add out push loop mov dec and aam test adc mov xor lock scas test inc in je ret arpl xor xchg mov (bad) fistl push jnp and add fdivrs in rolb xor fcoml es imul or adc das mulb jp mov pushf mov xchg and fildl inc or jecxz or lods addr16 jno (bad) cs mov sti (bad) pop cli jmp inc ret notb sbb sbb es call leave jle ja insb push cmp in stc pop xchg cmpsl ss mov xchg out cmpsb xor jne cmp jno or jmp mov xchg (bad) ficompl and imul or pop mov repnz in jle jb lahf mov (bad) fimul cmpsb divb jne push mov cmp add and lods cmp pop adc cmpsl pop or dec add mov jns stc pop and iret jle cwtl call or std xor push lret pop xlat inc cmc cld add jo lret xor decl lds push aam and or push scas test cmp cld add mov xor adc dec in movsb sbb not pop loopne mov or movsl lcall outsl hlt in inc outsl enter push jl cmpsl loope cmpsb rorb das mov sub in imul pop xchg insl repnz add imul das ficom cmc outsl insb xorl fisttp add jle pop cmc in jl fadds cmc add mov jb mov int jnp test fldenv std cmc inc sbb mov stos mov (bad) std incb out lds pop sub hlt lds pop imul sub dec mov xor outsl out decb xchg enter out nop pop out dec or scas mov (bad) mov dec ret mov insl push mov xchg sbb mov mov sbbl dec push cmpsl jne fbstp push shlb in xor add int3 sbb aad movsl mov cmpsl hlt loop mov push (bad) addl lds pop xchg pop dec add cmp mov dec loopne arpl jno inc or adc add hlt mov in cli hlt aad pop (bad) lock jmp fbld cld imul lcall fwait mov mov sbb mov adc movsl mov rolb adc xchg lahf rolb call leave aaa pushf popf lcall aad push and repz mov loope leave xlat pop dec pop ja (bad) jb and std enter lea mov push ja imul aas dec xlat inc cmp mov pop push mov mov xor (bad) aaa pop cmc jnp pop xchg mov aad dec mov mov lods cmp dec lcall (bad) cmp fild push pushf clc ret das sbb and ss fildll pop xor mov push je lahf and fsubl fadd out nop xlat xor loope sbb mov cmp jp sub xchg outsb mov icebp push jecxz gs jo push mov adc imul xchg sbb loopne and fs jmp ds ret mov xchg fs inc jnp sub push les into inc xchg popa add je into sbb fmull pushf push jno mov adcl cmp xor xlat or notb mov jle dec rcll and jmp adc and push out es fdivrp lcall sbb or lea xchg push mov (bad) adc pop popa js,pt (bad) jmp cmp cmc xchg jae xor sbb sbb push imul aam cld jnp sahf shll inc pop insl push lcall mov ds fcomp mov fidiv push sub xor or xchg mov dec cmp xor mov (bad) dec jbe mov loopne aas cmp subb mov popa js mov repz jnp jbe or nop sub das movsl xchg bound fs imul out (bad) lret mov or mov dec cltd fisttp push ror mov mov inc imul sub xchg mov dec pop addl adc cs xchg daa (bad) out (bad) pop imul (bad) call nop jno dec sub notl imul cmpsl mov jae inc into jp inc mov scas inc pop fidivr xor cmp fcompl mov sbb daa cli pop mov lret sbb arpl xor (bad) (bad) insl movsb (bad) rolb mov sarl push (bad) fwait orl (bad) dec and mov jp sbb inc lcall lock iret jne rorb and stos lods push inc adc sbb (bad) mov movsl hlt and leave mov lret or push loop jae (bad) pop sub cltd ret icebp mov lret imul fildll dec sub insb in sbb icebp icebp pushf inc jne add or outsb push aaa (bad) mov adc xor xchg push jnp movsb test xchg adc test cmc sti inc dec int3 in or push rorl js xor or dec (bad) shl icebp cmpsb (bad) lods adc lock mov movsb pop pop dec icebp insb or stos scas out stc mov add ljmp pop push cmp ja adc adc or les inc mov pop pop ds mov pop adc jbe movsb pop mov dec cwtl cmc fwait cld fildl push lods push cmp out outsb xor cmp ljmp dec cmp cld lret mov cmp (bad) jnp dec pusha mov push aam inc fs addr16 jmp pop aaa outsl lds arpl fiadd addl hlt xrelease pushf jecxz dec pusha lods imul xchg jo and or inc addr16 (bad) fiaddl xchg lea and icebp int xor inc sbb and push aas loopne push stc movsl xor mov dec sub sbb fstps push out pop into push shrb imul add mov scas jne mov je mov cmovae push inc pushl js inc js test dec nop jl cltd rcrl cltd in inc hlt xor aam fs adc push stc xor in lds ss jbe fiaddl imul pushf or push in pop push sbb add jo shl sbb inc cmpsb (bad) popa and stos addr16 push cltd dec cmp add (bad) cli lods dec movsb mov int3 add ret (bad) lock sub pop outsl jb mov xchg mov dec sub pop jp inc cmp (bad) iret jo jnp xchg pop push sbb mov dec xor inc test int3 or pop sub sub pop fnstcw dec fwait inc mov fwait dec cmpsb inc xchg cmpsl dec xchg xchg sti sub in sub clc jnp lret adc add jmp popf mov pushf push mov dec (bad) pop push pop mov sub jno in leave add mov pop (bad) adc cli add cmp loop icebp fmull jmp inc and mov (bad) stos mov xor dec push lret pop inc inc mov cs xchg xor adc pop rol jg mov stos xchg xor outsb dec bound sbb enter dec scas xchg pop inc cmp sbbb push cltd inc sti ret inc pop cmpsl mov and sub rclb pop mov (bad) lock mov and sbb out fistl (bad) rcrb mov jbe lock inc popf (bad) xchg jg mov adc mov adc mov cmc xor add fcmovnbe aad xchg cmp jbe dec jmp and adc xor decb loope push (bad) mov mov enter adc push cs pusha jne sbb lock bswap xchg test stc adc out and sbb xchg mov push pop roll test insb mov andl daa inc or (bad) insb dec in sub scas push (bad) cmp icebp or inc and outsl call ret icebp adc mov add fcomps in xor pop mov imul inc jno xor mov imul cld xor lock or sub xlat dec cmpsl loopne jo lret (bad) jl mov push insb cmpsb iret lcall (bad) std or inc push cmc add int xor dec add shlb mov sbb adc xlat and scas add addr16 push xor out cmpsl sub inc (bad) data16 mov xchg sbb xor ret xchg dec lds sarb mov fisubl mov aas cmp rol mov pmuludq xor xor xor mov jmp mov adcl or xchg xlat clc insb (bad) adc insl shll mov mov mov lea sbbl xchg addb lds pop daa and dec cmp iret mov add loopne sbb hlt xchg dec xlat lds jg aam inc cmp lods sub hlt add roll (bad) add sub inc add sti sbb mov es push cltd dec fisttpll in es sti push jge xchg testb test into mov jmp or jo mov cltd cltd movd or adc push outsb sbb push cmpsb mov mov mov xchg push nop push (bad) pop scas xchg dec mov xor xchg adc mov xor jb cli add stos sbb and fnstsw repz push (bad) jb adc out mov orl scas push jae popf out xchg add or fldcw pop jae mov xor sarb or push aaa lret mov inc pop sbb mov nop out sub sub (bad) call int lods sub test mov jg icebp in call or sub xlat ja dec push pop clc mov ret pop lock inc and push je push rcrb push push fmul or cld aaa cltd adc je or mov xchg inc imul push clc add mov addr16 push sub mov ja popa sbb xor cmpsl cmp call and and (bad) shlb dec adcl lea sbb (bad) mov mov (bad) mov dec mov or insb pop js lahf sub dec out push shrb into ret sbb rorb sahf int3 (bad) scas movsl mov test arpl stos (bad) mov in sub dec xchg xlat gs lea insl cmp cmp pushf nop mov dec mov ret cmp or aaa cmpsl lahf fbstp mov add sti loopne rcll jp mov jb cltd pop rcr stos sbb test (bad) mov mov fldl and data16 cltd pop bnd pop jnp jbe push fsqrt adc pop sahf mov mov mov enter mov aaa push cltd mov daa cmp out mov fnstsw ljmp fildll dec pop jmp (bad) in outsl sarb mov fistp arpl inc test orl call inc cld lret aam mov adc jg f2xm1 aad jp sub mov pop out push xor ja test inc test imul aam int3 push xlat int inc dec addl jno push or xor shrl mov ljmp xchg pusha pop in and mov js push push cmp loop sbb (bad) aaa (bad) jbe test mulb scas dec dec (bad) inc das xchg or movsl (bad) mov pop pop fisubrl mov xchg les mov and and out out or mov movsl xor rcll shlb push scas cmp insl and jb clc out xor mov je inc xchg mov jg push popa inc or inc sti sti mov jle sbb (bad) int jl sbb xchg cmp leave jne,pt xlat xlat pop xchg mov xchg out mov test hlt or adc dec or jnp and fnstcw push push dec idivl stos shrb mov xchg inc ja inc outsl add fs add add test lret iret (bad) test adc jp lahf int iret call imul fadds xlat sbb and (bad) cmc clc jo loope adc pop sbbb or cmp test and repnz inc scas (bad) mov pushl jae xor or xchg mov mov and push adc jl mov sub in pop orl dec aaa mov cltd cli xchg in es add fs xchg adc xchg popf xchg outsl arpl in jmp popa out lret (bad) jle pop cmp scas loope pop mov add adc ficom cmpl push (bad) mov jno cmp test vunpcklps add int3 pop je xor jnp mov mov call (bad) in fsubl pop shr in test push jecxz outsb adc mov (bad) jg push iret lea dec sub sub shl push lods stos pop enter jb lods xchg jno mov add outsl add mov adc adc (bad) sub lcall test inc cmc sti xor stos ss sbb sbb jle mov daa xor aad add pop add jo repz dec jp sbb insl lods adc fsts (bad) mov aad movsb and pusha jmp out lock fstpt mov xchg xchg mov shll xchg or push jl ja mov ljmp iret (bad) cmp xchg xchg mov movsb and adc push aas loop pop mov jo push lock pop or lea ja stos mov scas dec xor dec (bad) cmc pop pop jl xchg or jg fidiv or cs inc fstpt inc sbb or dec sub push lock push fsub inc pop mov mov popa sti roll pop ret lret adc stos sar loope gs mov cmp lea fwait imul lock ret pop add push or sbb jno cmpsl cmpsl les cmp mov mov int3 mov cld pop arpl mov sbb dec enter fldl imul incb (bad) sub xor push pop pop (bad) nop rcrl cmpsl mov jne test sub das push lods scas sbb xor mov jnp inc jmp cltd jnp dec test out xchg aad sub ds jmp popf xchg addb test icebp stos call loopne outsb cmc icebp test mov or fsubrs xchg sub xlat adc rcl pop mov lock pop xchg mov ljmp movsl (bad) jle nop sub adc push outsl inc push push enter int or sub sbb lods iret addb cmp mov sarb mov add cmp jae cmpsl mov idivb js mov (bad) xchg cmp stos (bad) cmc sahf (bad) jnp jnp fisubr arpl arpl and arpl in lds pop mov test sub push addr16 inc dec test mov pop (bad) push sbb mov add mov mov sub push push (bad) xchg and imul out jae jns or outsl xor lock xchg cmp fcomi push mov ss mov gs inc pop (bad) int3 sub repz inc sub (bad) ljmp (bad) pop pop ja movl lock fwait call cld mov lea jge fwait inc test jae xchg push xor jge (bad) pop add jns xchg mov pop pop pop xchg inc stos jbe in add pop jns push pop xor sub test jns push rcrl mov (bad) shll or out mov sub dec cs or inc adc push shl mov fbld test lods pop mov mov pop push test dec xchg mov inc xorl mov cmpsb xchg sub mov dec cltd daa push jl xor (bad) mov xor rolb lods adc inc pushf setge stos (bad) inc mov mov pop pop mov push push cmp mov outsl in cs cwtl fmulp or sbb and jbe cs scas int3 test jle push and dec aas shrl jge sahf fist nop lods jg mov (bad) (bad) add cltd push mov ss lods dec out std or adc xchg popf in cmc ja ds lret jp cs cmpsl dec frstor inc repz stc jecxz and les or dec call push cmp dec jno out dec mov push mov adc mov sub in mov xor mov xchg inc es sbb mov lods pop popa sbb push cmp je xchg movsl adc or add or or jp inc aaa mov cmp mov cmc push push bnd fcompl stos inc jle or sub fsubl inc add sti jmp clc bound test inc jno push popa mov sub stc leave sbb and (bad) xor push mov inc mov pop mov mov fs data16 aad adc sbb pop pop xor daa scas cwtl ja dec std cmpsl jne xchg pop pop or xor or mov mov push sahf loopne cmpsl cld adcl xchg mov push xlat enter adc sub add or push adc sub dec nop test push sbb movsl fsubs push xchg (bad) stos cltd inc mov or in dec or cmp mov cmp in push rolb ret mov iret rcr lock push or push js jmp jmp dec adc insb cmp rcll mov (bad) testl xor fdivl pop dec fwait or cmp cmpsl xor xor sbb out mov sub jne out or mov clc mov xchg jmp xchg push cmp sub adc (bad) cmp flds out fcmovne mov inc sub in (bad) jnp out (bad) xlat mov into and int3 xchg xor fnstsw clc add dec fwait cltd pop xchg enter or or inc mov bound jo jns fs add imulb aad and jnp or and push jno jno lock add fistpll sbb mov dec add lock jae popa lret push add aas test imul mov enter pop xchg mov loope or xchg lods mov inc fwait push mov push addr16 xchg or dec push ret jno outsl fsubl adc pop push lods pop sbbl mov pop push jae or add aam mov jne je cmp nop sub xor fs in fcmovu inc adc cld in ret and pop pop lods inc mov push ret lret lret jle enter aaa loopne jp push mov inc xor dec jns fsubrl pop sub popa pop stc and fst add (bad) push mov or xchg icebp and mov add cmpsl xchg int3 or addr16 push stc inc mov outsb xchg nop mov dec dec push sub int out mov xorb dec mov dec aam ds xor dec fistpl idiv jne mov xor add fdivr push into or inc (bad) xchg cmp jp and idivl (bad) fcmove inc imul addr16 pop das ljmp insl push test pushf xor mov jbe (bad) movsl jns pushf mov and sahf jo cmp aam xchg push mov ficom scas loop std addr16 cmpsb add mov call movsl and push or test lds mov ljmp mov pop inc push mov inc jne add sarl bnd scas mov arpl daa cmpsl pop enter or dec dec nop inc outsl add sub inc cmpsl mov enter push int3 mov sbb clc gs (bad) push cmc rcr xor out mov addr16 sbb dec test inc lods push rcl aam jns push pop mov pop (bad) lahf inc sbb mov hlt sbb sarb aad add inc or xchg stos movsl mov push inc push je into mov rcrl cltd push jmp incb loopne in jns mov orb sbb aad jo test outsl hlt cmp scas mov scas inc sar fwait sbb or mov xchg mov fnstcw jmp jl pop cltd mov cmpsb or lea in mov add or or sub test jge or mov jle jbe lcall pusha mov xchg adc sub cmc mov repz push (bad) rol adc or or lods cmpsb gs cmpsb pusha fistpl scas insl rcrb or enter test add popa jge ds pushf arpl lods lcall cli xor lds roll test les ss nop ficom imul lret jp scas shrb dec lods and imul cltd in sub ret adc mov test mov sbb inc push cli aaa arpl imul pop mov or add pop sbb aam mov jg cltd js add repnz loopne ds sbb in cltd pop ds into aas aas sbb dec cld fs stc cli mul in mov cmp xchg test add cmpl fs xor xchg les unpcklps lahf mov jge or stc bound cmp hlt popa (bad) jnp inc dec fistp pop es push dec adc mov roll or push icebp addb jp dec cmpsl bound or xchg scas movsl gs add cmp xchg push int3 aaa cmp cmp out int3 fdiv add mov jnp mov hlt and xchg xor sub push jmp cmp je mov cld sbbb or lds push (bad) stos add xlat xor rolb mov pop outsb rcl sti push xchg je push mov jmp notb mov dec or dec dec mov xchg je xlat sub leave cwtl (bad) jo hlt jmp push pop mov sub sub xor ja,pn cmp in xchg stc push xor lock fxtract add imul loopne inc lcall push sub push and adc and cli popa jbe sub mov mov and xor jge into out ss sbb cmpsb mov dec jne sbb int mov xor inc fnstenv or mov xchg xchg inc mov dec jmp sub push loopne dec pop clc inc jp jl inc aad clc sti nop lock mov in (bad) out dec pop movb ret adc inc jne lods nop or (bad) lods push mov sbb inc mov sbb (bad) popa stos sti scas or sahf xchg and inc sti in xchg mov call xlat fcmovu cmp mov aad mov in (bad) jns popa ret xchg clc fstl testb jns jo dec xchg mov pop push sarl jge sbb call pushf mov jle sbb add dec push cwtl adc xchg sub push fild loopne inc mov sarb cld pop add push in add and fs mov loop sbb loopne add aad and jae loope sbb pop loop rorl aas lcall fucomp out xor inc (bad) mov movsb jbe cwtl cli add fdivrs fwait cwtl push mov (bad) lret jl cmp fidiv and std rcrb ret push dec add call cmp mov mov mov movsb imul lods sbb dec fistpll icebp lock jae fucom pop dec ficompl mov (bad) push dec mov jbe add jno enter sub testb popf sub xchg xlat pop push and sub or mov cs pop xchg pop adc pop mov mov jmp rorl sbb clc and cs and scas es mov out js and mov inc cmp in (bad) aaa cmc mov out cmp add shrb out mov sbb mov xchg int movb push or jo out add mov mov in pop fdivl jge (bad) int ret mov dec sar inc push cld mov xchg adc mov fwait rorb or enter push push rcll icebp add sbb subl jge pop fild scas xchg sub int out in lods jne inc addr16 pop lods inc sub sub (bad) and jg mov pop test (bad) imul cli faddl sub sbb ljmp sbb inc popf xor dec pushf or stc fwait xor push loope mov jp or push in cmpsb xchg rcll inc fcmovne mov sub aas subl es mov mov or lock mov jns lret out jno jle pop out mov inc xchg movsl aam das out dec inc sbb lods sub push lods pop jno fcomps lahf pop dec push add (bad) cmp or scas pop sarb subl movsb sahf sbb push fdivr and jmp das in insl jg jmp outsb cmpl or stos pop into and xchg xor iret (bad) dec inc xlat cld mov dec aad push cmp out xchg dec sbb stos incl pusha jle sub mov repz test pusha add mov mov sti mov mov and xchg into adcl pop rcr jne repz sbb js jns out dec push in jne in and fiaddl xchg mov dec adc mov rorb adc cltd jge pop rcll and (bad) pop daa clc sbb jo js in mov in sti ficom pop into pop or xor pop lret cmpsb shrb adc ret out aas xchg cmp mov jmp hlt int sub fs pop cli inc mov jl push xchg into aam inc add pop scas pop in fwait outsb ss pop push pusha outsb cmp in adc xchg cmp das fidivr mov aam pop dec dec mov popa pop mov popa mov rolb ret xor outsb ds mov sbb and push or ja sub call in cwtl jno sbb (bad) sahf jl and lods jnp stos fisubl sbb add es outsl or jne jle mov pop cltd ss cmp inc (bad) mov sbb inc stc mov xchg mov jns jbe cli fcoml and jle sub adc ret jnp push pop nop flds lds in jbe insb dec mov mov imul cltd sbb mov fsubs mov outsl loop xor rorb push mov sub sarb pushf xor jo dec iret add in les data16 (bad) in jno aas sti cmp or mov xchg and testb pop ret or hlt pop int ljmp dec pop mov sub inc push leave add dec jmp test arpl dec (bad) jb xchg add pop mov clc lcall push push aaa fistl roll adc cmc xorps jl clc loop xchg xor xchg mov into pusha pop jle inc push jno push les dec mov mov out fisubl xchg adc lret sbb pop addr16 inc cmpsb cwtl fbstp int sti lods leave xor pusha mov repnz cs mov (bad) jecxz das repnz jbe out inc and test stc test ret aaa movd imul pop adc jne repz mov fwait subl mov pop shl mov addr16 arpl addr16 pop cmp setle mov xor leave outsl pop les adc popf add and xor sbb jecxz repz and idiv xchg (bad) icebp cltd gs jl xor mov repnz leave mov in pop mov fadd or dec mov daa xchg cmp add mov dec nop lcall xchg mov cmp call xchg xor rcll aas add jp cmp pop push pop int3 cmp insl (bad) jmp mov or shl rcrb add fcomps arpl sbb inc or dec ds popf mov test je out mov mov outsl pop pop push daa bound add daa adcl ret inc push mov mov mov xor test test mov (bad) ret lea xchg imul sbb pop push ds cmp jb sbb ds jo mull sbb inc jle lret lock cmp test cld mov add pop int3 and outsb sbbl pusha mov imul adc xchg lcall xor jg cltd mov cmc xor pusha call add mov dec pop scas mov xchg xlat xor mov bound popa sub nop imul pop jmp out pop (bad) das inc add je pop (bad) aaa cli popa std pop test je insl out or jne xchg add pushf stos (bad) push xchg outsb pop jne (bad) dec in shrb xor movsb lock cmp mov (bad) push adc mov cwtl mov add mov in stc xlat sub stos push and clc lds pop std sub call sarl scas sub imul jne into int jmp push inc clc insb inc movl or sahf or leave push pop in aad add aas leave cmc (bad) fcomps ret dec (bad) sub (bad) lock and aam xchg xchg cltd fildl lock mov (bad) cmc dec aam sti (bad) ffreep insl fmuls ret js mov out mov jb sbb lock pop arpl adc (bad) fsub lcall cmp sbb dec cmp adc (bad) stc jge jno fsubrs mov scas lcall adc adc xorl push and push and pop int3 sub cmc dec cmp add mov cmp lahf adc jge decb cmp jo push dec pusha imul mov daa pop int3 cmpsb dec rcrb out adc xor repnz repz mov cmp xchg das jl icebp test lcall outsl testb xor or (bad) (bad) jbe add imul (bad) sahf cld xchg sub scas jp stos xchg mov mov or and sub fidiv push xor bound jle pop nop jmp out push inc movsl cmp loop fidiv xor sub mov cmpsb fidivrl inc xchg gs popa fwait cmp sbb adc fldt push inc pop mov je pop (bad) cmpsb pushf inc and pop addr16 ret arpl pushf imul xchg std fsts cmpl inc pop or or xchg int (bad) mov sti cs test sub in (bad) repz mov and (bad) insl popa xor lds repnz xorb aaa xor mov pop lcall es mov xchg cltd pop or jns sub inc arpl incb jg xchg bsf clc and pop jmp mov in jb call pop mov cltd movsl cs call addr16 (bad) adc xor roll scas add sbb roll scas cld sub rolb movsb jbe inc in out loope mov push pop mov mov mov test jne rcr add cmp mov (bad) fucom add test sub (bad) movsb aaa lds test xor mov mov ret jb mov xor mov sbb cs mov (bad) js (bad) jnp gs jb and cwtl mov fstp sahf fldl cmp (bad) or sbb xchg je pop mov inc imul and dec test pop dec decb push mov pop scas loope (bad) gs popl clc fmull lcall es mov xor cmpsl (bad) cmpsl or (bad) pop mov (bad) sub (bad) mov in adc loopne enter in stc cltd mov mov out mov xchg inc sbb sbb adc jmp jae das jns and fidivl call and pop (bad) sbb jne (bad) (bad) (bad) cld add pop hlt jbe or sub mov add loop or push in sub test cmp pusha sub jge (bad) repnz adc sub jne mov ffreep fcomps inc pop repnz adc jnp inc fwait push out mov push add inc pop pop lods add mov mov mov clc adc scas imul lret popa mov aad sub insb ficom xor dec xorb les je dec ror xor sub insl sbbl inc popf add pop push mull lret or mov and and add inc or inc sub push cmpsb mov push push cltd movd cs mov pop push scas adc fistpl iret out call or lds jg xchg and mov es je adc dec ss lcall push push fcompl xchg insl movsl and or rcl xchg loope cs xor cli push ret in out mov or inc (bad) jmp dec inc mov imull mov dec cli push (bad) push cmp hlt and cwtl rcr in mov pop jne fidiv scas arpl lds out or xchg add subl sbb mov popf out cmp dec xchg adc in or xor imul xchg nop imulb cld dec pop cwtl or jo notl and adc mov scas test adc inc sbb and sbb jbe adc dec adc fcomps (bad) pop jbe dec test test roll inc nop sbb inc repnz (bad) icebp dec jo cmpsb in test cwtl (bad) or notb add cmp mov cmp inc jle and insl scas enter jecxz lods add adc cmp xchg fisub dec ja fmuls xlat insl lcall loope rolb dec mov stc mov push mov (bad) pop add insb push scas add xor mov (bad) lods lods pop test scas jnp mov das sub test fwait xchg or aam mov test push push mov and xor adc imul call test into enter xorl dec push xchg addr16 pop or shll or jns jnp mov aaa jnp sub (bad) sbb sbb leave aas outsb test das adc mov or imulb sbb imul repz insl adc stc (bad) mov pop aam pusha cmp xor ret scas (bad) insb pop push inc mov fldt mov sti ret in cmpsb pushf fildll sbb dec push cltd mov push or dec sbb sub stos mov dec fs jmp mov out lods xchg ja (bad) out mov jne jns xchg jp in out push inc leave rorl jbe mov mov enter xor xor push push out pop (bad) pop fs sub pop push fmulp lret adc aaa fstl and mov lock ljmp cmp dec pop inc jnp and mov jl pop pop loopne mov arpl or popa (bad) sub sbbb sbb or out inc repnz in adc or repz mov sub inc or (bad) mov xchg push jbe dec movd sti out arpl mov ret cmc int3 push sub sarb gs lods cmp fidivr stos gs mov adc ljmp aad loop in icebp xorl inc test mov incl hlt int xorl inc dec jb jge adc decb sti sti inc in cwtl mov mov loopne fs fwait xlat pushl push scas xlat xchg sub sub imul cmp aaa jg pop fidivrl cmp and mov (bad) jnp (bad) xlat xchg cmp lods mov mov (bad) mov (bad) jle cli sub leave mov jno pop or push jl (bad) xor es ss ffree cmp sbb les and sub mov and jecxz mov jns pushf mov loope rcrb jne xor out xchg orl xchg push test sti cmp aam lahf shrl fs mov call mov mov les cwtl jl mov xchg inc std mov sbb mov (bad) jbe pop mov out and movsb and outsl jle push xchg fdivrp push or cs add cmpsb in and xchg (bad) std cltd push xor loopne pop pushf lret bound shrb pop xchg inc jmp data16 sbb outsb jl fs daa lcall xchg add shll shl adc push mov scas (bad) adc push pop dec aas xchg cmp int xchg mov not dec cmp test jle mov mov inc push pop add xlat insb ficompl aad negb je pop lods cmp ret inc in adc ficom add lret adc mov daa mov pop mov or imul jns jnp subb fldl mov movsb imul pop pop sbb (bad) push aaa in inc inc adc std dec mov lods mov lock int mov mov das adc (bad) hlt cli and loop and daa mov scas int cmp ret nop int jbe imul lea movsl aas push xor jns xor cmpsl outsl imulb (bad) int3 mov es les cltd adcb (bad) mov (bad) (bad) jb repz add (bad) mov (bad) (bad) mov push jg adc xchg in cli jnp les or push (bad) out push pop pop jmp xchg mov or inc xor mov push inc mov insl mov rcrb cwtl xchg jo xor pushf sub inc mov cmp (bad) adc mov mov inc cmpsl out jno sub test push scas add and xor pop fsubr imul addr16 ret jg fwait inc insb test test sub scas cmp lods pop test out jge int3 (bad) xor sub leave xor sarl mov in sub loopne push jmp xlat mov xor cli pop fwait push adc cs xor hlt arpl inc (bad) sub (bad) pop push lret inc or mov sbb dec mov rclb mov xchg sub sti cmp pop ljmp sbb jo jl out (bad) xchg mov jb pop sarl inc ror sbb mov movsb mov xchg inc mov sahf jmp mov fstl pop mov mov cltd pop fwait repz pop sub push inc push (bad) mul mov or add and add lea fnsave sbb sahf pop inc test scas cmp xor fdivrl push jg cmc movsl sbb outsl or loop push xor dec js ja cmc faddl movsb pop adc mov out sbb iret xor nop sub iret fs dec pop or pushf push (bad) or int3 mov adc mov ljmp adc dec jmp dec icebp inc (bad) movsb push lds lcall adc cmc adc hlt push shlb xchg popa in mov ret test mov fwait out mov inc push or fwait xchg lock or popf sub mov int3 fs mov cmp push mov mov inc ss mov or dec cmc in and mov jg or (bad) fldt cmp mov test jae lahf imul addr16 ja je cli ljmp iret dec and jl mov stos mov pusha test sbb adc sbb pop xchg pusha clc push call ja ljmp xor push arpl jg dec xor push add push mov sarb cmpsb inc imul cmp xor test out mov xor loop inc push pop in cmpsb nop mov pop cwtl test mov inc daa stos push xchg dec add push xlat dec pop aam (bad) fsubrs dec push rolb dec add and cmp mov imul or adc xchg ret dec mov (bad) and dec (bad) adc mov cmp leave pop (bad) dec push pop movsl cmpsb icebp inc pop add jle inc cwtl push sbb stos das cwtl mov (bad) iret sbb dec imul xor xor inc or cmc push jmp cld stos stos pop std lock stos inc mov xor jp xchg sbb mov lods aad roll repnz mov pop popf sub popa xchg adc jns call (bad) les mov dec test xchg leave into ficomp mov add ret pop mov jp dec movsb and add jo adc incb (bad) mov dec or pop and mov int fcoml push xor cli and dec dec lods pop daa lea or jle ret iret push je out xchg sbb and fcmovbe mov and fs add lds push ds or cmpsb fdivl or pop push dec and and insl nop jnp ret pop lahf add ret leave push ss lock (bad) arpl negb fistp je jbe lmsw xchg lret test and jl movl loop test mov (bad) negl imull pop or pop lcall (bad) cld dec std cmp loopne cmpsl arpl jns out mov es scas inc push jg ret inc idiv jne insl ret orl xlat mov enter xlat movsb sbb mov repnz out mov out lret cld lods fwait jmp pusha (bad) iret push negl or sbb adc or mov or mov mov sub dec push cli fidivrl push aam jbe test and mov xorl rcll lds xor push mov imul dec (bad) cli fs xchg mov mov in push pusha and mov jne mov int mov loope adc in nop mov mov xor gs jno mov fwait jno inc pop fldt and adc mov fs sbb dec mov fxch cmpsb loop xor and sti pop mov cmpsb (bad) popf outsb aad inc icebp loopne sub (bad) xchg pop repz push in sub jns dec dec mov lret aaa dec jp ds loope mov mov call jo sti mov adc xchg fcomp dec xlat dec mov pop test ret ror scas fs jl and pop pop pop fisubrl faddl pop dec inc ja icebp jp jnp push test dec ret jb xlat inc fistp mov fs push pop popf ja ss addr16 pop fsubrl sub jnp cmp xor mov ror enter and (bad) sbb jne add push push cmp cmp jl lea sub les pop test add lret jnp and push in inc sub xchg sti mov add inc lcall imul fstl aad into outsl rcrl and and cmp pop (bad) fucomp in cmp stos sub enter dec pusha mov xchg popf fisubr inc and xor fidiv pop push xchg call ret enter or bound sub test adc inc insb into pop lar call jo mov push lods movsl test pop bound enter jne jp adc push aad adc dec adc leave push rcl aam bound fstp pop rcrl (bad) jecxz in popf lods push xchg insb int3 (bad) fadds xor aam cmpsb adc adc repz xchg adc mov mov in test add xchg movsl sbb dec (bad) data16 xor inc pop loope jge dec testl mov inc nop icebp xor pop or not scas jle pop sub cpuid cmp dec jne mov std das hlt dec jg push leave testb xchg enter loop jmp push mov sbb add add aaa fisubrl jp jmp cli sbb mov or sub and cli ljmp pop push jg dec popa into sub std xchg xchg int dec aaa jecxz jo cmp dec loop adcl pop sub lahf and jae test mov and pop mov sub xor es (bad) and aas and call and jbe mov inc pop push scas sbb fdivrs or mulb (bad) and outsb or pushf jnp sub jno adc mov addr16 test in gs lahf scas (bad) mov pop imul adc jl lahf mov pushf (bad) ds in mov das push dec arpl sub add jge lret xchg lcall add subl (bad) shlb and jbe mov bound (bad) mov arpl cmp push or (bad) push sar xor cmp in jp aam pop xchg mov push les cwtl pop shrb sti fsubs fidivr inc mov fs aas bnd mov mov xlat mov add pushf mov in lahf lock test xchg sub mov pop push xchg xchg call sub test dec xor daa push xor xchg in das lods jmp cld or inc inc aas int3 rolb add pop movsl pop xor pop xchg mov out cmpsl jnp lods in test mov cmpl or popf mov adc push roll imul fdivr faddl inc push movsl xchg insb imul andl pushf sbb xchg mov test rolb lahf ficom lea test cmpsb jne aad adc into iret inc jae test xlat out fsubrl mov inc jne int dec and xlat adc repnz out add push push mov dec cwtl (bad) jo add jo icebp jno inc inc mov ss xlat fs ret mov push insl std (bad) clc ja addr16 cmp jb jnp in loop sbb add push insb mov stos sub cmp lcall pop repz add daa xor or cmpsl or pop repz and mov mov cmp mov (bad) jae movsl aam xchg call cmpsb test (bad) adc dec jb inc pushf (bad) sti out jnp js xor ds lret jnp test mov dec mov pop jno mov out lods mov aaa mov push adc clc and and add insl cli dec popa push mov xor inc imul mov push dec cld roll loope rcll cmp lret test jp xchg lcall outsb push scas mov push or stos shll mov jle or jne ss cli cmpsl (bad) gs ljmp scas jecxz rcll mov add pushf shr mov inc mov (bad) mov (bad) sarb pusha adc scas pop jecxz jne lahf cmp in sbb lahf sbb dec push js lea mov repnz fstl sbb mov inc pusha in (bad) (bad) jp xlat mov inc sbbl jl jne and mov aaa pop add xchg mov adc sub lahf cs test lcall and and jnp dec push cmc fistpl lcall in and sarl fs outsl lret push xchg test or adc sub xchg iret adc rcrl dec pop loopne mov jbe push data16 int3 jmp cmc pop iret add inc (bad) roll loopne sub jnp xchg lods jmp inc and dec add cmp cmp or push mov cmc (bad) mov stos repz out mov lea inc (bad) and xor mov xchg cmc dec mov loopne je mov xor pop lret mov adc test mov sbb sbb mov les inc nop push cmp sarb adc (bad) aas fnop pop push mov pop push dec sbb add push jge adc mov inc push dec push aas jg out cmp sub dec jp xchg arpl fwait lret mov jne jle add xor xor addr16 jnp movsl add scas movsb jo les sbb pop and es pop xchg sarb jge (bad) mov stos or loopne xor jbe jae sbb adc fcmovu jmp inc jl push sbb cmpb out xchg test lock and or xchg xchg mov inc and or je icebp sbb fnstcw cmp ret cmp dec or sbb mov mov mov mov sub jne add lds out fwait scas adc imul jge inc cmpsl cli lods jae xchg dec adc fdiv and aaa pusha jle jecxz pop xchg nop outsl clc or (bad) ds dec (bad) mulb lret sbb mov pop dec (bad) ss std fsubr outsb jnp out jbe test add xchg dec mov push ja sbb cmp subb or mov mov adc js mov in fimul insb loope or jbe sub fldcw daa add pop push ss pop jns jo push pop add sbb daa dec inc (bad) push xor adc xor idivb (bad) mov pusha test inc xor stc or ds adc pop jb movsl sub and loopne and mov mov sub sbb jge mov jge xlat pop jnp mov push sbb push icebp mov adc ja pop and arpl outsl aas mov xor xchg aad adc xor int inc in loopne xchg (bad) xchg dec jge rcll adc cmp xchg fstl std fidiv outsb add mov add adc jnp dec aaa sub cltd (bad) je push (bad) divb sbb dec (bad) je xor inc xchg dec sbb out nop adc inc mov aad pop push rorl inc dec fwait push call xchg adc add mov ficompl jg lock ror pop dec push pop test sbb sbb cltd sbb fimull stos rcrl insb or out mull idivb adc mov int mov mov jnp or (bad) xchg in pop xchg jp leave add pop jecxz in (bad) inc xor out lock add mov or and add jg sahf jmp cmp lock sub aaa dec mov jecxz into sub sub sbbb sbb ljmp push fwait out add scas adc or mov pop cmp lcall dec movsb mov inc mov dec sbb xchg ror das mov ret into stos test movsl mov psubd jno sub mov pop cs fiadd jmp fisubl or (bad) sub scas push and fidiv lcall mov popa jo stos std xor pop jmp cmpsl inc arpl sbb jecxz (bad) daa mov push mov movsb xchg pushf imul pop add inc push in dec ret (bad) and push sub insb call mov adc pop pop xchg or imul ss je insb pushf and cli in pop popf jge mov add daa push inc mov aas cmp test fsubr lds jno mov pop push js dec fcoms jge mov imul ficompl (bad) mov dec rolb stos pushf mov mov pop test (bad) aaa jge and fcomps sub inc movsl lret into inc movsb shll popa push lds or adc ja dec cmp popf cmp xchg imul mov stos or add mov push xchg cmp movsl sub mov pusha mov xor xchg mov xor lret call mov xchg or inc loop and lret int jae xchg xor out shrl test jnp mov cs les add sub lea pop cmpsl (bad) arpl enter aaa push popf and movsb sahf mov scas and out pop xor mov sbb cs xchg push cli adc push mov cwtl add in push into cld test or aam or or bound inc shrb leave jo arpl cmp sbb subl icebp (bad) sti sbbl sub mov cmp arpl push jl sub sub pop push in mulb lcall cmpsl mov int3 xchg insb flds scas mov xchg repnz rcll popa ret es mov sbb dec (bad) push ja jge fxch pop pop sahf add hlt loope pushf jmp pusha xchg jno inc fnstcw inc bt sbb aas test xchg mov pop cmp sbb adc pop push mov mov sub mov test insb dec xchg iret mov std mov repz push push call daa inc pop mov out push repnz ret sbb int fwait cmpsb (bad) idiv lret ljmp cmc jg das rorb xor std cmp cmpsb jae (bad) mov sub mov jl adc (bad) or int push push aad ficompl scas ret mov push adc sbb mov mov adc mov test fs cld pop das xchg scas fiadd pop cwtl cli xor call fisubr les add adc adc fs and das adc jl aas mov push fsts out out mov testb in pusha (bad) dec aas mov or shll fldl or pop dec fcmovnbe in es rorb and pop xor int jl inc aaa iret push mov outsb sub xchg rolb jmp stos and mulb mov sbb push sar push xchg or or int3 xor arpl ret daa sub dec lahf rolb scas out das sub les jb mov dec lods int jnp mov stos sub in xchg (bad) fs lar mov insl jecxz scas pop call sbb xor pushf lret out pusha push fwait das int sub mov xchg movsl rcrb ja push fiadd inc xchg cs data16 mov popa jecxz dec popf or push xor xchg loop cs jbe mov push sahf adc adc adc lahf scas stc and in vmulps xlat stos pop mov fcmovnb sbb scas rolb loopne jle mull pop push lret and out js push mov cmpsl sbb sarl stos fcomps xchg nop (bad) mov sbb out outsl jecxz (bad) js or inc repnz icebp (bad) aam push insl or outsb mov (bad) dec fisub pop mov pop mov mov xchg xor cmp push inc stos fcompl jecxz mov xor xchg pop dec js int repz enter cs in inc pusha inc sub in jp pop rsqrtps dec aam fisub pop enter xchg sbb inc int3 xor push cmp push push gs jl movsb (bad) in mov or adc mov enter sub scas es test pop imul mov lea mov cld fisub fnop inc xor xchg (bad) hlt cmp push ret push out cmp icebp adc movsb jp es jg sub repnz sub cli ss pop pop xchg mov cli push (bad) pop dec xchg stos or aaa adc mov mov addr16 outsl shrl jae aaa push stc xchg adc aad fcmovu xchg mov inc stos and es and xchg pushf notb push enter and (bad) mov sub arpl fimul dec popa lods mov int3 or imul fwait add xchg dec mov les jnp iret cs jp jno sahf loope sub aad mov or add jmp add cmp dec push adc or lret xchg jns dec fcompl out cli mov pop jo jnp mov mov out sar rorl lea test outsl mov or fstps aam sub cmp add jns mov inc test in or ficompl lret stos fwait repnz push mov in inc (bad) mov and pop icebp xchg adc dec outsl pop inc leave or or jl sub lahf push cltd add cld mov push xchg pop cmpsl mov pop lods lret and pop subl inc and jns int idivl insb lret lods dec mov pop mov lock mov mov add xor adc xchg sarb add pop mov mov std imul dec es das sub outsl sub or fcompl push popf dec add dec (bad) sbb ret leave cmp jnp icebp (bad) popa cmp bound scas ss int sub push pop mov ret int3 sub insb pop mov push jge dec scas mov jmp push mov insl int outsb xor inc pop add stos adc fs mov dec scas dec xchg mov subl mov loopne test cs ret and pop sbb jle (bad) repnz (bad) jmp adc add loop fimull sbb aad add call cmp sub popa fs cmpl lock xor lcall out or mov xchg (bad) clc (bad) adc or (bad) mov sub cmpsl inc xor lahf fwait sbb sti dec pushf les in add sub mov add cmp aam test mov jmp jg sbb iret adc repnz push jecxz dec call arpl inc push and add xor pop stc fsubrs xor sbb mov ret roll and or jns lahf xchg mov cltd and fcmovbe repz or les arpl imul push insl nop pop (bad) fnstsw stos cs xchg inc pop (bad) lods enter dec push in loop (bad) in lods ds adc pop pop outsb hlt ljmp test testb insl xor inc pop jge iret mov iret sbb push je enter xor inc sub testb lahf cmp movsb test cld pop pop push dec sub leave fstl dec or lahf outsb clc aam pop fstl xor dec test mov scas aaa or popf js xlat xchg pop mov or jae pop and xchg inc sbb std cwtl mov lcall sbb cwtl out outsb dec xchg push lcall ret pushf (bad) adc lahf jle out std call xchg scas xchg test dec in lds sbb pop jmp ret fnstsw ja xchg imul fstps frndint pop repz push in int3 lock adc stos outsl or adc ret and add adc xor jp mov push popf ret adc fisubr xchg cmp inc dec sbb and lret into and inc mov cltd push jl in je xlat loopne push jo sub add dec imul ss dec pop lahf stos js xor hlt js dec cli sbb push xor movsl icebp mov jae lahf rcll dec pop sbb and repz mov in sbb inc dec push lds mov imulb mov fistpll pop orl fisttpll jp addr16 (bad) xor jnp sbb xchg push das movsb ret sbb dec mov cmpsb out mov icebp (bad) or stc add mov sbb in cmpsb inc mov push ret inc xorb movsb arpl sub (bad) insl in and dec lret insb dec cmc xor fsubs inc or jge mov or mov lock mov jno sti or push or inc hlt cmp lods xchg xchg jno cmp (bad) sbb adc mov jae sub je cmp iret and jle (bad) pop dec pop stos jle in cmpsl les roll xchg push add lret popa out ljmp jmp add insl inc xor (bad) sar cs add or mov push sub outsb push aaa add das cmpsl mov icebp and sbb xlat inc xchg fxch cmpsb or or push inc xchg out pop push xchg hlt adc or cmp aaa pop cmp mov xchg cmp lahf repnz mov leave enter dec test sti push push adc xchg push aaa lds jne jg stos sub jge pop add movsl sbb xlat pop sbb test in mov adcl jnp cmp adc push fmuls syscall cwtl cmp dec mov das mov cmovns and xchg mov scas cmp std pop cltd mov cmpsb fdiv xor jp jle jl pop push mov mov adc lods dec and cli xchg outsb dec ljmp test je pusha jne cmp pop aam (bad) fs adc adc fsub inc sbb enter xchg sbb push (bad) fldenv nop stc stos movsl adc out imul lock in push jge mov sbb xor fbld push testb sarl xor jbe clc cmp mov cmpsb cmc ds push sub xchg jge inc sub push mov addl inc lods jl lock xor dec (bad) fstpt cs sub or push addl sub clc push nop fdivs adc test dec (bad) loopne mov adc scas (bad) insl xchg jmp push jnp cmp scas add es push js aam fimul rorl popf orl push xchg mov daa xor (bad) xor inc cmp arpl gs subl pop push lret dec pop sbb jecxz call fs enter lods xor test adc insb adc cli xchg mov jns pop inc fmull mov mov lret in rorb dec mov add lods fwait lock nop sbb out lcall jmp dec sub int or or int cs add inc adc add test cmp mov add mov mov (bad) xchg ss cmp addr16 xor arpl sbb fistp dec dec jge add lock pop (bad) xor xlat clc cltd fistp adcl (bad) (bad) sub dec and push sbb (bad) sti rorb jg fs dec pop jns pop xchg (bad) sbb xchg js cmp xor jmp jae pop ss jbe jno repnz sbb imul in repnz or add test (bad) subl push popf je lods push sub rolb mov mov js jecxz or sub arpl or cli (bad) lea dec in jne mov mov icebp mov cltd aam movsl call sti mov mov dec mov outsb push add push cmp push inc inc mov rcr pushf dec in xchg scas sbb es into movsl nop cmpsb cmpsb out (bad) dec das adc push sub sbb (bad) fisubr pop sti repz or mov jb loope and daa sahf testb xor cltd jp insb jbe leave and xchg rolb jbe dec pop add pop sbb bound aaa in insl jmp arpl sbb push addr16 cmp xor mov xchg xchg pop movsl xchg addr16 fcoms sbb xlat jo clc fs (bad) std fcoms xor push aad sub push push or lcall jo repz test xchg mov dec cmpxchg mov jmp in mov aaa inc xchg lods dec lret rcrb sarb jg sub xor push addr16 adc sahf jae inc mov (bad) add ljmp sbb mov lods xchg mov cmc cmpsl daa stos ret sbb clc add ds pop in jge push push dec xlat xchg mov or sar movsb iret pop mov adc in jmp mov sbb jg push mov in sbb out stos hlt repz outsl cli mov and xchg jge jae adc sbb andl popf shll xor sbb mov sbb xor (bad) and add (bad) pusha leave stc in pop lods push insb pushf das sub daa add les inc gs cmc rol into lds test pop out scas dec scas pop sub lock xchg lret adc (bad) push pop cmpsl test ret fs lret enter out cmp imul cmp fwait aad push pop xchg add repz jno loop js mov jp in loopne ret cmc sahf pop mov adc lea mov cvttps2pi adc xor mov loop scas sbb push sbb out hlt sub test xor jp and addl jge mov aas mov mov (bad) in popf in shl (bad) mov jge xor int3 icebp (bad) mov mov add push mov jg cmpsb loopne pop test add mov pop adc push adc pop push jae and push or icebp aas xchg jl adc or fldcw xor xor and out scas (bad) into lock test call es jmp push mov or cmp fs (bad) loop neg sbb mov fwait inc out add cmpsb fsub dec mov xor push adc in mov mov mov lods icebp or test jno sub stc cmovnp mov mov jecxz dec mov add cmp dec jge mov mov out jne fyl2x sbbl lret jbe mov push xor push push stc rorl out pop mov sub clc jle adc jle in mov mov scas push sbbb dec (bad) into ja sbb pop inc adc arpl sbb shrb in mov push sbb pop pop adc jnp xorb pop lock mov in clc pause jecxz leave ret aas adc mov mov adc lcall push mov push sbbl mov cltd push pop xchg (bad) jo push pop (bad) and je jo mov jb xchg cmp mov adc daa push dec test cli les popf cmpl mov fcoms mov (bad) bound (bad) mov push sub call mov fs (bad) mov mov mov sbb inc xor ljmp mov push pop or pushf outsl xchg push mov and inc mov adc xor clc arpl mov or xchg fidiv in adcb sub jg shrb dec cmp (bad) scas and out cmp dec mov test mov rolw cmp nop scas mov rcrl jnp sbb and insb es jmp cld rclb enter mov sub (bad) mov dec and fbld negl cmp ret and pop adc pop and inc add (bad) sahf lock inc test fldt xor mov mov jnp out mov test ret and jp sbb or out (bad) xchg pop lahf clc push inc push daa cmp mov mov out inc movb inc or insb pop mov jae inc (bad) and out hlt (bad) jno cltd or pop cli lahf sub adc pushf lret adc dec adc and and sti push lods negl fwait (bad) xchg (bad) xor pop cmpsl push ljmp insl pop adc gs test inc adcl (bad) xchg pop sub xchg (bad) packssdw pop push push or gs xor sarb es add iret pop (bad) jecxz fmuls xchg daa shlb adc adc or jmp pop in xchg cmp cmpsb cmp jp pop lret mov insl sahf mov jbe (bad) and inc dec sub mov push inc xor dec pushf fcmovnu xchg les mov inc mov mov xchg decl aas bnd mov sbb out and cs pop (bad) ja inc sarl fwait jg fidiv sbb jae or inc icebp pop jnp lock cld into dec mov std cmp lea sahf mov fdivrl mov mov xor loop test mov push ds sti clc add mov gs ljmp (bad) jns xchg cmpsb mov mov fidivrl jne mov mov mov inc cwtl call and js sbbl sub (bad) int popa sub inc push repnz jne lods dec xor jle comiss jae js ret sub jmp push mov push lret sub lret jbe jge clc aas gs jp mov xor ja mov outsl jne mov jle push pop and jp cmp dec sarb mov jae mov adc xor iret fmuls das jmp mov push int mov cmp inc xor inc mov xchg lcall cwtl pop sarl mov sbbb mov icebp int3 je imul cmp sti mov popf test insb cs lea lock mov jle mov pop and mov or cmp test lahf pop push addb xor push (bad) leave enter lods mov outsl je in add mov mov sub lea sbb adc ss mov lds cmp mov or jbe sub jb je fdivl fcoml inc cmp je push les imul hlt or test es jno cmp icebp and adc sub xchg jns aam popf push repz sbb xor test aas mov mov jp adc mov lock push imul push sub and sbb sbb and dec or ss notb sbb sbb in enter push fdiv subb cld xchg cmp testl mov sbb xchg jae cmpsb push (bad) ja adc mov mov and sub rol ret mov cli sub and push arpl xchg sub push inc cmp cmpsb xchg xchg (bad) sub ret gs cli sub mov mov ljmp cwtl cmc sahf add xchg pushf mov fmuls repnz sti inc fidivl adc ss nop push mov lcall data16 stos je xlat es fnsave add mov inc lret shrb pop stc aam sbb sbb and scas jbe dec jl cwtl push rcrl dec or inc and jns mov mov push sub mov dec xchg rorl push (bad) lock dec xlat push pop jb xchg inc rorb stos int3 (bad) mov daa xor pop fsts mov sub jne adc das out inc sub in push dec (bad) pop inc aam sub sub cmc fldenv mov fsubl stc orl stc lret mov xchg jo jmp addb nop xchg push movsb lods mov lret out mov scas aas xor jne jg test mov xchg leave push mov cmp mov cmpsl and sub adc sbb rorl push cmc dec or addr16 (bad) es (bad) xchg in push repnz and inc adc in out push cmpsl lods lds mov cmc xchg inc mov clc sub pop pop insl popa xor xlat icebp pop int movsb push jmp mov movsl clc decb mov aaa insb adc mov out xlat add xor xchg cmp pop stos xor cmpsl rclb push push (bad) es arpl popa (bad) repnz cltd ljmp mov mov cmpsb or add andl fs mov jnp sbb xchg data16 cli out xor adc jge test mov pop push jnp enter aad idiv xchg sbb aam push pop dec add adc jne,pn ss xchg or fcompl push out fdivr stc sub lods clc xchg sbb aas xchg in in imul test jp xor cli (bad) call dec ljmp sub mov ret out add std sbb push imul stos and sub jae and fisttpll fnstenv or cmp repz push sub ja lcall or inc fistp (bad) pop call xchg inc out sbb ja cmp pop cmp mov rclb sti mov ljmp mov stos cmpsl push pop and cmp mov mov add xor fnstcw sub adc frstor fistpll lods xchg jb cmc mov or sub mov jp add popf sbb ret mov sahf add lret mov cwtl std adc push push mov stc and mov test ret stos out push pop test push jb cmc pop lahf ds lds push jno mov mov mov xor sbb hlt arpl pop adc das into inc fwait sbb mov aas or push scas enter fisttp sbb inc sbb mov cmp imul add daa sbb mov dec xchg jle test fild movsb decb xchg movntq pusha out jne xor fldcw push add mov test clc pop hlt mov test mov mov imul cli shrl lcall lods fs dec repnz lret jno (bad) fisub nop pop lret iret push in xor jbe xor pushf stos sbb push mov insb xchg xchg adc inc call push cmpsb test fisubr mov fisubr push cwtl inc dec jb lods mov clc sahf jle in push int3 hlt add cmpsb adc clc or xor pop scas data16 insl lods movsb aad in fcmovnb add adc data16 add ljmp dec fsubs fiaddl icebp mov push cmp jo out lea xchg pop jns push jo lock (bad) lea cmpsb push adc jns addb clc insl cmp sub jno sbb push mov mov dec sahf dec and ss imul sbb icebp xor sbbl popa loopne mov or jo flds pop mov movsb and inc mov ret lret rcrb movsb mov and mov cmpsl in lret fwait mov bound xchg arpl (bad) nop mov outsl fdivrp add mov push (bad) stos pop daa rolb sbb pop scas pop cwtl and fwait stc jmp jne push enter dec scas xchg pop sub xchg sub dec movsb xor push and outsl ss ss mov scas push nop inc cmp or cmp sbb hlt mov push and shll xchg pop icebp jns xor and fs inc popa adc mov add imul aad test xor dec dec inc fldl test test das push xor scas jl dec je cs ret sbb sti sbb je enter loop sarl push add push inc pop and cmp scas cmp aam scas jl aaa (bad) or clc testb cmpsl and lahf xor or mov jmp ljmp adc xchg loop jecxz xchg int3 dec xor cmp fstps popf inc add adc in or or xchg clc jne mov outsb jecxz stos fstpl unpckhps mov shrb pushl aam sarl xor fimul push cvtdq2ps mov (bad) imul into loopne xor inc xor addr16 fucomi stos add sub out sub push xchg clc and pop stos lahf jge mov aam cs cld rorl sbb dec out lcall and neg add rclb loope imul cmp mov imul (bad) (bad) pushf int sbb jns lret or fisub test out pop xchg cmp and pop idivb jmp adcl loopne cmp xor and cld mov add mov repnz mov push stos xor adc cmp mov jg inc xor add lcall iret mov fstl (bad) xor sub push sti clc inc add aas and and fs int3 gs push pop lcall adc inc ud2 (bad) mov pushf push imull in mov in push cmp cwtl sahf cmp xchg jae insb push js iret cmovnp xchg xor shrl sub loopne xor jb in mov (bad) test enter xchg push dec call lahf mov mov fisubr movsb jno (bad) push test leave xor nop mov out adc scas mov mov mov cmpsb dec jno test aas push mov xor pop ja cmp mov and stos aam xor add adc jge aas (bad) dec push inc int3 mov mov repnz inc push sbb dec xchg xor call rolb pop mov test ret ljmp loop xor jae add sbb sbb loop xor add sub mov add jle push dec and cltd rcrl out int mulb (bad) and aad push pop rcrb imull cmc stc jecxz (bad) push test std mov mov mov cld or aam jmp (bad) xchg stos mov nop out sarl mov ss popa out (bad) inc insl dec xchg sub mov xor mov cmpsl daa cwtl mov mov dec ss cmp pop or mov cmp mov insb cmp push dec ss mov aam lock pop pop dec mov jne cwtl daa fwait xor xorl out lods cmc (bad) (bad) jg dec cmpsl insb mov jno negb orl ljmp mov pop jne mov push (bad) xor rclb xor add cmpsl cmp push pushf aam enter push aas (bad) test adc cmp inc cmp cmp mov mov sahf rorb scas jl pop cwtl leave imul pop push dec (bad) repz jnp ja jmp mov cmc neg in push mov orb add out out in (bad) imulb aad (bad) int fdivp ds adc dec fldcw fldl (bad) cmp test (bad) imulb jge xchg mov inc jnp sub ret insl lret dec dec scas fwait in leave xchg fsubp out add or sbb mov gs add popa imulb in jp push aam xor arpl std pop inc call cmpsb mov mov inc ljmp out adc in rcll pop incb in dec sub leave jl dec lcall inc push xchg (bad) pop in mov inc jnp inc test and pop insl lods sbb xchg jb mov nop icebp (bad) (bad) add dec cli out mov add arpl xchg repnz (bad) adc addr16 sub mov and into outsl xchg sub pop imul xor xchg mov pop add in jbe push test iret inc jno lahf xchg (bad) mov movsb (bad) mov (bad) adc int3 data16 or rcll dec jbe popf movsl jbe je mov pop sbb pop lods inc es jge jbe sti rcl push mov xchg movsb mov jno stos mov sub xchg aas push (bad) or mov add push and leave fsts mov insb popa movsl push int3 dec insl out or pop mov mov (bad) xlat push in movsbl or jne ds xchg scas scas xchg jne push scas loop es (bad) mov aam sbb imul (bad) xchg push popf test cmp mov inc inc (bad) xor xsha256 cmpsb pop mov out cmpsl (bad) int3 add push std sbb ljmp mov cld push leave lret pop stc out xor cmp out gs int add sub (bad) and lahf adc xchg push cmp out dec xchg xchg xchg inc cmp pop lods mov or popa or repnz add xchg and adc js sahf add mov (bad) jnp sub imul mov ror adc and popf xlat rol (bad) xchg das or int out cmp cltd inc dec lret ja cld bswap adc jp xor adc inc sarb push out psubb dec scas mov and jae adc imul pushf loope js mov or xor adc (bad) mov sti fcomip push jne repz sti mov fsubp push jno push fisttpl and pop leave jg fistpl fsubrs lcall mov int popf sbbb cmp (bad) xchg neg push xor fnsetpm(287 xor fistpll adc scas dec iret mov mov inc mov mov mov mov or cs leave ret xor out (bad) jg jge outsw (bad) sub shlb jo outsb (bad) imul xor mov clc test sub cmp xchg outsl fmulp fucomi inc pop push xchg pop lock pop xchg mov loopne and rcr pop xchg dec cmp (bad) out push xchg mov in mov shll pop mov add cmc (bad) jg jecxz rcl insb xlat sbb inc mov lcall nop (bad) xchg cmc insb sub adc fimul dec or cwtl out pop sahf inc jl test jne fldl sbb pushf add xchg add aam scas loope or cmp xchg inc mov mov mov mov mov sarl lret jae mov dec loope xchg lret push sahf (bad) mov xchg jge insb rcl in and inc mov int aas mov icebp gs cs imul push xlat ss mov or fcoms icebp outsb mov mov (bad) in pop xchg stos xchg test arpl adc leave xchg addr16 adc sarl and out mov push xor ret popf cmp sub sub xchg mov (bad) dec jns outsb or dec and addl push lret dec inc dec xor enter push sbb cmp mov mov jmp enter pop jns nop pop out sub jg repz add popa imul (bad) int test xor adc jo push mul repz cmp test js cmp push and jg imul test xlat inc sub fcmovnu scas push in fcoml rcrl xchg lcall loopne fnstcw aad data16 inc fdivr jle enter dec cmpsl mov popf ja push mov test mov jb xchg dec call lahf pop push and je imul stos push ds lahf imul dec gs clc inc inc and stc xor daa call repnz inc inc push inc lea leave mov sub mov push mov icebp mov or cmp adc add mov into addr16 adc test loop clc add dec insl jg pushf lret lret dec loop push or call push stc push pushf into loopne and js push xor adc xlat push jnp insl adc les jnp push xor jno push lea (bad) out or (bad) in popf or sub mov shrl jg jae jb push fwait les test and fucomip mov mov adc xchg jmp add cs jae or xchg mov inc mov add cwtl add jns add jge add cli cmp add int add dec add mov adc add add add add lock fstpl add les add inc cmp add add popf and add add fiadd add subl add add adc add movsb js add cli add sbb add je add out or add add dec out add les add frstor add jg add incb add mov arpl add add add insl add dec dec add cld and add cmp add xor add add dec in add cmp add insl insl add in add xor add mov add jb add and add (bad) cmp add add add or outsb add fistp add (bad) jbe add mov add inc mov add imul add movsb add in add leave mov add xlat int add add inc fldl add xor add movsb add and lret add push and add lods sbb add test add and cmp add sub add add mov add pop mov add sbb add movsl ret sahf xchg add sarb add xchg add and add lds add stos popl add fadds add adc add jns add add out add test add mov add hlt add push pop add inc testb test add and add push add rorb add mov add add add push and add add mov add mov incb add js add add imul add xor add add dec sbb add add addl add lret leave add add add jo add jmp adc add jmp add add add pop incb add inc jnp sub js daa stc mov loopne jnp sub cmp daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc les imul jno pop cmp mov xor dec xchg icebp or inc pop mov and (bad) mov mov jmp flds in hlt movsb dec (bad) mov mov jne pop (bad) daa stc inc mov sarl sub xor leave mov and sub ja pop stc inc pusha cmpsl test sub (bad) pop daa stc inc (bad) cmpsl test sub lret jl daa stc inc mov sarl sub js daa stc inc mov sarb sub jl daa stc inc mov sarl js jl aaa stc inc mov test sub jl daa stc inc mov sarl sub jl es fsubl sarl sub jl daa stc inc mov sarb sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc dec mov sarl sub je daa stc or cmpsl test sub push testb mov sarl or jl daa stc inc mov sarl sub jl daa stc mov mov lret in daa stc inc mov sarl in js jl daa stc inc mov sarl sub push lock xchg sub cmpsl test loopne jnp or jl daa stc inc push sarl sub jl daa stc add cmpsl (bad) and sub jl daa stc inc mov sarl sub xor daa stc inc mov sarl mov lret jg daa stc enter and sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarb sub jge daa call das ljmp out das xchg icebp mov sarl xor test aam mov mov sarl add test or (bad) push xchg inc int jl psrld lahf dec scas sarl add fcoml xor dec shlb mov js bound lods scas ss jnp sub jle daa call xor cli arpl (bad) sub sbb popa mov and (bad) je jg dec movsl enter fisttpl das push lret addr16 stc sbb shrl lahf js jbe nop stc inc test (bad) push jle insb (bad) daa repz cmpsl test (bad) adc sub push andl aad (bad) jb inc (bad) lret jl sub movsb enter fistl imull or scas test jmp jb add daa stc dec mov jnp sub dec shll inc mov sarl sub jg daa call das (bad) data16 and xchg jl sub jmp loopne jno pop js jge and or or sbb int test das pop fidivrl aam jl (bad) push icebp sarl and out mov inc mov sarl add jge daa stc inc mov shrl sub outsl mov stc add shrl sub jl and cmp cmpsl test out sbb nop es push mov sti jge sub stos xor inc test jecxz loopne stos lahf sub push xchg daa stc dec mov test sub bound lods scas ss jnp sub daa call and test sbb (bad) and les sarb pop jp cs daa repz mov jp sti sarl cmp imul sarl aas js jbe dec stc inc test jmp loopne push movsb sub add dec xchg sub jge daa std inc movsb ftst and sub push and inc stos ftst and sub adc daa stc inc test sahf and jne adc das repz sub mov mov jns sub push loopne stc dec mov sarl or cs mov sarl push dec lret jl ss sub cli pop loopne js js leave sti inc mov xlat add je adc inc cmpsb mov dec jg jnp punpckhwd arpl mov and sub stos (bad) daa (bad) cmp stos dec sahf sub pushf jg jg cmpsl test insb ljmp (bad) daa repz mov test sub insl xchg fnstcw scas cmpsl test call jl sbb adc das or jl sub aam enter and jg cmp and cmp insl (bad) daa std fs movsl test das push sarl aas xchg cmpsl test icebp aad cltd or jl cmp and scas jae sub mov stc inc mov xchg and rorl sub adc daa stc inc mov cli sub sarl push dec lret jl ss push movsl xchg sub pop cld ss inc cmpsb xchg loopne adc sub js insb call ss jl xchg andb sub test sahf fnstcw sub daa std push mov movsb and imul ljmp flds test js push and inc mov sarl punpckhwd push test mov sarl or cs mov sarl push dec lret jl setge xchg das jecxz jae inc xlat lret jl add fs cmpsl test and lock stc dec mov xchg ss jmp mov (bad) daa std fs movsl test das jnp ja sub das repz (bad) stos push stc inc test xchg es fisubl push mov push mov xchg adc scas push sub andb sub test icebp (bad) mulb xchg and push mov xchg xor pop adc cld and inc cmpsb scas call loopne jg dec js jbe sub xchg xor pop adc test xchg cmpsl subb imul push sub xchg jl rorl sub adc stc inc test push and sub dec mov xchg jl nop test push fidivrl fldcw aaa sarl cmp jb (bad) in js js and sbb lods movsb and imul fistpll movsl cmpsl test call jl sbb mov insl icebp xchg jp pop call lret loop jnp (bad) js jp cs cli (bad) cmc and cmp js and dec mov fwait or fldt jno jecxz (bad) daa repz xchg cmp loopne jg (bad) jp jl lock inc movsb flds in js js and add repz pop insb and test sub mov stc inc mov jmp loopne jge push imul inc mov sarl sub js pop into inc mov sarl sbb push mov mov sarl add outsl mov stc pop mov shrl and jle and dec mov (bad) push cwtl ds jp push adc ss jnp sub jl daa stc insb cmpsb cmpsl test enter das push lret or inc mov sarl add jl psubq add loopne jg sub lret jp pop stc inc movsb popl lcall stc inc mov jg sub jns daa std insb cmpsl cmpsl test enter das push into jl or inc mov sarl add jl (bad) inc mov sarl sub adc inc movsb popl xchg sub push xchg stc inc mov jae sub jne daa std insb cmpsb cmpsl test enter das push ret or dec mov sarl add jl psllq add loopne jg sub pop stc inc movsb (bad) (bad) and sub push xchg stc inc mov ja sub jno daa std outsb mov aad into sub jnp daa call daa enter and icebp sahf daa stc inc xchg jp aas js jbe sub xor sarl add jl and push mov cld jge pop js jbe and insb iret cmpsl test xchg iret jnp sub lds sarl mov (bad) pop loopne jge pop js jbe pop stc inc test xchg dec cltd sarl sub mov (bad) sub test loope jnp sub push pop loope mov ret js sub and inc mov jnp and fs xchg cmpsl addb scas lret jl pop out mov sarl adc ror mov sarl and jl sub idivl loopne jno das push fidivrl fnstenv aaa sarl ss jecxz (bad) daa repz cmpsl (bad) stc and sub push (bad) daa stc dec mov test cmp js sar inc mov xlat push cs inc jl and add inc scas lret jl ss insb sahf cmpsl test enter and jl and push cmpsb mov ja (bad) push sbb mov (bad) ss test pop jnp das imul dec mov test cs pop jl and dec int test daa js js and add xlat adc sub push mov (bad) push stos (bad) and jno int mov lea sub jne daa call cmp (bad) jno das pop (bad) jl sub test shlb jl and dec movsb mov sahf and inc mov (bad) jno sub outsl mov stc sbb shrl and arpl jae mov aad sahf sub jl xor inc mov stc jnp sub jnp and inc repz cmp stc icebp sahf sub push push xor inc mov jnp cmp inc jl sub xchg loope gs sub push lods stc inc test scas mov sarl sbb arpl cmpsl xchg xor rorl (bad) sub jbe and enter cs das jle outsb (bad) daa repz movsl lea sub jbe daa repz mov aam and js jo daa call das ljmp jl daa decb xchg and jno mov cmpsw test xchg into jnp and jne and andl jnp cmp mov daa repz mov xchg add inc mov jl xor push movsb enter fistl sub arpl cmpsl test out jge in js jbe das jmp mov test dec js jbe and push movsl sub or cmp mov daa repz cmpsl enter fstpt outsb fidivrl dec xchg lret mov mulb mov loopne jge or jbe daa stc push xchg mov jnp sub arpl lods mov xchg xchg jnp and pop (bad) daa repz cmpsl test xchg hlt jnp and jp add adc loopne not sub adc fwait xor and add enter fistl sub pop popf sbb das mov stc adc mov stc push mov shrl mov mov inc test test sahf and jecxz (bad) daa shrb cmpsl test popl and pop jl sub test dec and mov les lods xor sarl and jecxz (bad) daa ljmp test xchg ret pop push fidivr out stc (bad) nop and sub jno xor inc rorb mov fistpll rcll mov xlat or xchg cld push cmpsb enter fldt cmp sbb and cmpsl test mov jns jnp xor outsl mov jle xor or ss enter and xchg and out (bad) sub test cmp je and nop push jnp das push pop jl sub test enter das jae jnp stos lds (bad) sti hlt mov jecxz (bad) daa repz jo sub jge daa stc inc mov shrl sub outsl mov stc sub sarl clc js jbe ja inc mov fldt sti js jbe idiv inc test mov mov js imul push and sub push xchg daa stc dec mov fisttpl dec sub lods shll stc inc mov push dec sub rcpps stc dec jb test sub push push daa stc dec (bad) jbe and sub push daa repz mov and sub das (bad) daa clc insb mov test cld stc test lods (bad) daa repz cltd cmpsl test (bad) jnp and scas (bad) daa repz jae test xor fnstsw out jo test xchg add and rcll cmpsl mov jmp jb lods (bad) daa repz hlt cmpsl test (bad) jnp and push push daa stc dec (bad) jbe and sub push daa repz test fisttpl dec sub lods mov stc inc mov ja sti js jbe idiv inc test fsubl sub arpl lods div loopne jno jo lret jge xor inc test mov pop test mov xor (bad) jno es sbb mov mov outsb lret jl cmp insb jo test lret lea jnp jbe daa stc dec mov sarl or inc mov sarl add lret jl push (bad) inc mov sarl and dec (bad) daa repz mov mov cwtl inc dec lret jl xor push cmpsb loop and sub jl daa enter mov sahf sub jl daa xchg adc sub jl daa cs mov roll jge daa out mov sarl lahf sub sub enter fcomi into sub adc stc dec lcall icebp sbb jbe sbb inc mov fildl sub jnp pavgw mov cltd das pop stc jl sub test sarl adc jl and sub xchg and pop jl sub test out dec sahf sub cs daa clc sub test fmuls jnp sub adc hlt test sub mov movsb enter fcomi movsl sub adc stc dec lcall icebp push js jbe jae inc mov fildl sub jnp dec roll jo sarl std js jbe movsb stc inc mov sarl movsl cs jl dec sub push out adc sub lock stc inc int test das pop clc jl sub mov scas (bad) jge adc jbe jg inc mov fistl jle,pn inc (bad) daa repz and add loop test inc mov sarl std js jbe xor inc int test sub daa (bad) daa clc sub test jmp jo and pop mov jno cmp js sar inc mov xlat jl cld js jbe daa stc or sarl inc inc lret jl dec sub cmpsl loop outsl pusha das lretw jl push aaa inc mov (bad) jno es js pmulhw mov xchg aas push lret outsl mov stc int3 mov shrl adc jge xor inc test mov xchg js jbe or aaa aam test lcall push daa repz mov test sub insb (bad) daa std xchg xchg jnp and icebp sahf daa stc inc xchg jp aas js jbe sub add cmpsl test add jl das rcll cmpsl mov jmp js jbe and insb iret cmpsl test xchg cmc jnp sub fidivrl rcll mov jnp sub push ret inc int test adc push gs mov dec jnp and icebp mov mov jno cmp jecxz (bad) sub xchg and lret sub and inc movsb sub js mov in insl xchg mov sub mov les rcrl mov jnp sub jle push stc inc test cmpl stc jne sub jae daa rorb mov jnp ss jecxz (bad) daa shrb test in (bad) fiadd push ja mov sarl add jl xor inc stos xchg rorl add js arpl lods xchg and imul test stc inc mov (bad) jno das outsl movsb fldl mov jno das imul inc test xorl pop sahf sub je das call and cmp nop inc mov (bad) jno cmp adc test (bad) xor mov fidivl stos stc inc test adc aas imul dec test mov jmp pop fnstcw and xor mov pop insl test (bad) push movsl enter (bad) insl test inc mov sarl sbb mov mov sub lret das data16 cmc inc mov pop jnp fnstcw jl daa stc inc mov (bad) ja sub ds stc inc rcl test loopne push mov js push (bad) daa stc push (bad) cmc test sub jecxz (bad) daa ljmp cmpsl test movsb jns pop or outsb mov sarl pop loopne jl push bound xlat lods pavgb jge sub ds std inc rcl cmp loopne push mov js push (bad) daa stc push rolb and sub jecxz (bad) daa ljmp cmpsl test fdivrs or je push shrl cmpsl (bad) pavgb jnp pop push ret jl push rorb xlat lods pavgb jge sub ds (bad) das loopne push mov js push (bad) daa stc push ror mov sub jecxz (bad) daa ljmp cmpsl test inc jo pop or (bad) push shrl cmpsl (bad) pavgb jnp pop into (bad) jl push inc dec mov sarl sub ds hlt inc rcl fs mov int (bad) daa stc push rcrb and sub jecxz (bad) daa ljmp cmpsl test hlt imul push shrl cmpsl (bad) pavgb jnp pop cmp jl push mov pavgb jge sub ds jmp rcl call mov js push (bad) daa stc push shrb xchg and sub jecxz (bad) daa ljmp cmpsl test bound pop or (bad) push shrl cmpsl (bad) pavgb jnp pop scas fidivr and xlat lods pavgb jge sub ds inc rcl jb loopne push mov js push (bad) daa stc pop sarb jnp pop loop jl push fs mov sarl sub ds loopne rcl ds loopne push mov js push (bad) daa stc push (bad) jno and sub jecxz (bad) daa ljmp cmpsl test cs sahf pop or popa (bad) push shrl cmpsl (bad) pavgb jnp pop fs jl push mov xlat lods pavgb jge sub ds jl loopne push mov js push (bad) daa stc push (bad) mov and sub jecxz (bad) daa ljmp cmpsl test push pop sahf pop or (bad) push shrl cmpsl (bad) pavgb jnp pop lret repnz dec addr16 pavgb jge sub ds fiaddl pop add mov int (bad) daa stc push shlb jl sub jecxz (bad) daa ljmp cmpsl test cld pop sahf pop or pop (bad) push shrl cmpsl (bad) pavgb jnp pop xor jl push mov mov sarl sub ds roll lock mov int (bad) daa stc push shrb lods and sub jecxz (bad) daa ljmp cmpsl test jp sahf pop or (bad) push shrl cmpsl (bad) pavgb jnp pop scas loopne repnz and xlat lods pavgb jge sub ds rcl orb mov int (bad) daa stc push rolb pop mov or push (bad) daa ljmp cmpsl test nop push sahf pop or outsb mov sarl pop adc jl push xchg jne xlat lods pavgb jge sub ds inc rcl push pop loopne push mov js push (bad) daa stc push rcrb mov nop mov jecxz (bad) daa ljmp cmpsl test add sahf pop or dec (bad) push shrl cmpsl (bad) pavgb jnp pop test jl push push jno xlat lods pavgb jge sub ds inc rcl mov mov js push (bad) daa stc push shr mov nop mov jecxz (bad) daa ljmp cmpsl test mov movsl inc (bad) push shrl cmpsl (bad) pavgb jnp pop ljmp mov sarl sub ds ret inc rcl xor loopne push mov js push (bad) daa stc push (bad) jne and sub jecxz (bad) daa ljmp cmpsl test xchg inc sahf pop or outsb mov sarl pop push cmc jl push mov xlat lods pavgb jge sub ds inc rcl sbb loopne push mov js push (bad) daa stc push rcrb (bad) fildll or push (bad) daa ljmp cmpsl test xor sahf pop or outsb mov sarl pop jp jl push cld add sarl sub lock pusha loopne push mov js push (bad) daa stc push shl shll or push (bad) daa ljmp cmpsl test mov cmpsl cmp cmpsl (bad) pavgb jnp pop repnz je mov sarl sub lock insb loopne push mov js push (bad) daa stc push shrb and sub jecxz (bad) daa ljmp cmpsl test cmp sahf pop or outsb mov sarl pop jo jl push repnz sarl sub lock loopne push mov js push (bad) daa stc push shr lret mov jecxz (bad) daa ljmp cmpsl test rcl jnp sub jl daa stc inc mov xlat insl adc js jge jne inc test push and sub sub mov ljmp (bad) sub mov jge leave push ret daa stc inc mov mov int3 sub adc dec pop pushf test insl js jp stos ret cmpsb lods ja (bad) jno (bad) js jbe and inc mov jecxz sahf sub jl sub mov sarl pop mov cmp lods pop loopne jno and lret or jae inc test test rcl jnp sub outsl (bad) daa call das ljmp jnp push lret inc mov mov icebp icebp js jbe aas mov dec (bad) xor sub cmp cmp test lods (bad) loopne jno pop js jp daa stc sub fistl sub push inc push test sub bound mov jge sub pmaddwd stc dec rcr test push js jbe dec addl cmp stc jbe sub push xchg fcos cmp sarl pop add jl add sub cmpsl test (bad) lods jnp and push cld xor inc cmpsb (bad) mov sub std mov sarl or cs mov sarl sub sub xor inc cmpsb mov jnp add daa stc inc mov jnp sub and or add outsl mov stc outsl mov shrl and dec (bad) daa clc dec fdivl je (bad) js jp xor test int3 cmp mov pop stc inc movsb lea sub imul stc adc (bad) daa repz mov fisttpl xchg sub jp je inc test cli cmp sarl sub mov (bad) and insb and jns xor jl sub test enter and push lahf daa stc inc cmpsb mov and push jnp and add test sub sbb repz sub push rcrb mov sarl inc js jp inc stc inc movsb movsb lods jno (bad) jno xchg js jbe or cmp jnp das push mov and test and jl sub test sbb pop (bad) daa stc push mov stc or (bad) daa clc dec mov xlat pop cwtl aas jle adc test jmp loopne jno add cmpb xor outsb mov outsb mov scas and stos cs inc movsb subl imul test pop jnp jl sub test sub js or cmp push sahf and cmpl clc mov xlat push sbb addl test sub stos (bad) daa ljmp cmpsl test sarl sub pop mov cmpsl test rcl jnp sub fs daa call and pop dec lret jl sub mov loopne jo mov stc jl es inc movsb mov jnp idivl mov mov sarl (bad) js jp (bad) stc inc mov test add pop (bad) daa clc pop xchg mov jnp sub add daa stc dec mov sarl or (bad) pop cld (bad) stc inc test pushf dec test jnp and outsb test or jmp pop cmpl test loopne jnp cmp jl cmp push xchg cmpsl xchg loopne jp sbb xchg (bad) daa stc pop mov push jnp and jl and sub mov jnp add lret jl sub test xchg fdivrl pop jle das (bad) daa repz shlb and sub gs daa repz stos (bad) das and movsb ja jl add inc add sahf das pop lret jge daa in dec mov jmp loopne jno sub inc jae daa clc popa mov es push repz pop (bad) pop stc inc mov xorl jb imul stc inc mov sarl push insl lret jl xor and loop and sub and mov jnp or jl xor inc mov jmp loopne jno and jl and inc mov aam icebp xor jbe stc call and and jl sub test sarl sub lret or lock mov xchg jnp int3 js jl daa stc push xchg mov jnp sub pop xchg stc inc rorl add jle inc stc inc test (bad) or movd mov stc icebp sahf sub hlt (bad) daa ljmp cmpsl test loop jnp push imul lods mov push jnp das push lret addr16 stc dec cmpsl cmpsl test loopne push cmp js sbb inc movsb (bad) shlb sub pop cld ss inc cmpsb xchg loopne adc sub push xchg daa stc inc test xchg and pop js jbe stos stc inc movsb lods idivl loopne jge add jl jge sub das pop sbb adc cmpsl test sahf mov and add daa stc dec mov xchg movsl std sarl aas imul scas jb sbb fsts sub adc dec (bad) xchg test add lret jl dec das inc mov sarl xor lret js (bad) inc mov (bad) jno sbb jge xor inc cmpsb scas lods mov sarl (bad) js jbe ja inc mov (bad) jnp das pop sbb adc cmpsl test out push add daa stc dec mov cli jl (bad) jno and jo and push stos (bad) fldenv sub fnstcw scas mov inc scas lret jl (bad) ret cmpsb xchg sub stc and (bad) daa repz (bad) jae lret jp icebp stc inc test mov loopne push jl and xorb ret push fisubl stc inc int test sub jno fxsave jmp loopne jno jns lret jge imul jmp loopne jno jns lret jge sub insb mull jnp and lock es mov test das pop sbb adc cmpsl test out fsts sub adc dec pop testl test inc mov shll cmp xor cmpsl test inc ljmp xchg xor cmp cmpsl test repz js lret jp icebp stc inc test mov lea js push adc stc inc and push shrl js adc dec (bad) xchg test add lret jl dec das inc mov sarl push dec jl sub test sub add mov or add mov (bad) daa std push mov add sub pop push stc inc int test sub in in stc inc movsb adcl outsb cld ss inc cmpsb xchg loopne adc sub imul cltd and sub push (bad) daa stc xor mov and sub push cmpsb mov cmp mov and insl test out push scas mov (bad) and insl mov icebp insb jb test (bad) fldcw add jl or insb mov xlat insl mov js jp sub dec mov jge add lret jl das rcll mov sarl mov lret jl push push inc mov sarl push outsb lret jl pop jecxz mov sarl adc daa std dec mov jg aaa js js iret cli inc mov sarl cmp js xor push mov xchg and push jnp das push sarl sarl mov arpl (bad) daa std insb mov test int3 ret insb push xor js xor inc cmpsb (bad) std and and xchg daa stc inc fdivrl xchg popf sub adc stc inc fdivl (bad) cmp insl xchg jns mov sarl add lret jl or push and push mov xchg inc mov sarl inc scas lret jl pop ljmp ret push cmp cld (bad) daa (bad) cmp aas jnp sub aad (bad) and jne fstps adc nop or push mov add loopne insb adc lret jge xor push enter fldt add lret jl or push mov add cmp xchg xor and sarl add lret jl ss push popa sarl cmp jae or leave lods cmpsl test pop faddl popf daa stc inc add sahf sub or cmpsl test icebp (bad) push in js insl xchg or push mov stos cmp fidivr sub insl xchg es shrb pusha fild movsb aam and sub insl lcall cmp sarl cmp jl and add inc scas lret jl pop ljmp sarl sub jl cmp inc cmpsb mov lcall roll loopne jnp sub mov daa stc mov cmpsl test loopne jnp sub outsl mov stc add shrl movsb inc lret jl sub mov enter and push test test xchg jl sahf and adc daa stc dec xchg jno ds push (bad) sub mov not cmc testl stc pop xchg mov jnp sub push adc enter (bad) add lret jl sub inc mov or jnp and (bad) sub sti jnp cmp jle xor dec (bad) cmpsl mov sbb pop (bad) daa stc inc mov push jnp and gs sub test sub adc daa stc dec jl mov lahf cmp jl daa stc pop mov sarl sbb pusha (bad) daa stc pop mov lahf jnp and adc daa stc dec test xlat jge cmp jbe and inc mov test loopne jnp cmp jl daa stc push mov stc repz sub outsb (bad) daa std outsb mov stc aaa sahf sub outsl mov stc xor cmpsl test loopne push ds fist stc inc test mov xchg das push mov (bad) sub xchg or and jl and insb fsubl bound (bad) and insb shll add jle adc insb shlb sahf sub push cld daa stc dec mov push mov js jp inc stc inc movsb (bad) cli and add lret jl or test add lret jl or test add arpl mov test sahf mov and fistpll mov mov sarl add out inc mov sarl js,pt js pusha stc inc movsb daa pushf and sub jl sub (bad) and sarb sub jo daa stc xor loope lods push js jl and sub sarl push js in daa stc in cmpsl test mov or inc pop mov jl cmpsl test mov jnp jl lret xor daa stc push mov test fisubrl js and daa stc mov mov js jl daa stc inc mov jae xchg daa js jl es cmpsl test sarl sub pop (bad) daa stc or loopne jnp sub movsb (bad) daa stc pop mov sarl sub jle daa stc pop mov sarl sub ss daa stc inc mov sarl sub jge daa stc inc mov sarl sub insb (bad) daa stc inc mov sarl sub jo or inc mov xlat jnp sub lret jae mov inc mov data16 sub stc mov loopne jp sub bound nop test sub lret jp dec clc lds push jp sub lret and (bad) mov or sub test mov jnp sub sti jnp mov jp sub leave std andl (bad) mov pop jns sub loope cmc clc inc mov xlat jnp sub sti xchg mov data16 sub stc mov loopne js sub push cmpl xchg jecxz jnp sub enter cli repz movsl js sub enter stc lret mov dec js sub fild ja xchg jecxz jnp sub enter cli inc mov add sub jo and pop cmpsb jne lcall lret dec xchg inc mov xlat jnp sub jl mov in jp sub iret scas andl iret cmpsb test loopne jg sub loopne cmc clc inc mov xlat jnp sub nop std xchg mov add sub stc cwtl cmpsb mov jg sub addb andl sub enter cld pop mov add sub popa andl xchg loopne jle sub cmp pop stc inc mov xlat jnp sub leave jp inc cld repz data16 sub into lret (bad) and lds pop jle sub out xchg clc inc mov xlat jnp sub lret cmp mov add sub into scas andl cld cmpsl jne and outsb jle sub mov mov xlat jnp sub lret cli cld mull bound sub andl xchg loopne jge sub inc test xchg jecxz jnp das lret enter push mov bound sub int andl andb jae xchg sub jmp inc mov xlat jnp das stos lret and repz data16 sub scas andl movsl adc and jmp popf sub cmp cmc andl xlat jnp jnp,pn jp inc incb mov jp sub int3 add flds jb,pn enter dec mov fstpt cs jb (bad) (bad) mov out jl sub stc gs inc subl divb jbe,pn push mov mov out jnp and jb push dec stos mov jl mov mov or pop mov stc aam fmull and rorl cmpsl test sub jge daa stc push mov in jnp sub jl aaa stc xchg stos imul js jl icebp icebp mov fnstsw sub cmpsl mov icebp jns test ss jnp sub stc dec mov sarl mov inc (bad) sub pop mov cmp and insb (bad) pop stc inc mov sbb lret pop (bad) daa stc push mov in jnp sub jl aaa stc mov loopne jnp sub insb (bad) fyl2x mov mov lret jg jmp jns mov push loopne jp sub jl push mov aad xchg and sbb mov ret jb sub lret push (bad) mov test jmp push lret fiadd mov jnp sub lret ja aaa stc gs cmpsl test out cmp jnp js add inc mov ja popf sub mov stc and loopne jp sub jl inc stc jle or and sbb mov jmp sahf sub lret inc (bad) xchg stc inc mov sarl sub movb lea sub lret ja aaa stc or loopne jnp sub js imul data16 jnp sub mov stc and loopne jp sub ret inc stc pop mov sarl and sbb mov mov sahf sub stc inc mov sarl sub clc inc mov pushf jnp sub stc xor loopne jnp sub jl push lock mov pop jnp sub pop mov test loopne jnp and leave push nop lock pop jns sub stc (bad) stos imul lods mov sti jne jb jmp loopne inc and lock mov aaa jns sub stc stos stos dec xchg loopne jb sub test pop (bad) shl loop pushf and repz mov aam lea imul push test xchg lret sub pop mov cli jne (bad) mov jecxz jnp and insl (bad) or push mov fdivrl sub jno ss mov loopne jno sub aas mov cli inc movsb out mov loop sti into and sub jb push mov les test jno and mov dec adc aam xor xchg out insl enter xrelease enter cli shll jns test xchg pop jno sub dec in mov cli adc xor add add add ljmp xorl add gs sub lds sbb pop and jp out repz aam mov addl xchg or lret popf mov cli mov lock and pop (bad) xlat repz mov icebp js test and or xchg mov cs orl mov and sub daa stc inc mov out lahf sub jmp (bad) daa stc ret (bad) pop loopne jnp or jl mov push test sub sub in (bad) ds mov sarl sub lret bound dec movsl and sub cmp cmpsl test and lret js fildl cmpsl test jge in daa stc inc mov (bad) jnp sub jmp (bad) daa stc ret (bad) pop loopne jnp vmread jl mov jae rolb js in lcall cmp sarl sub lret inc mov mov sarl sub or sub xor cmpsl test and lret insb (bad) lahf rolb test sub pop test stc inc mov push jnp sub jmp (bad) daa stc ret (bad) pop loopne jnp add jl mov push test std push sahf sub ljmp test sarl sub lret and aas scas and sub jecxz xor cld (bad) cmpsl test and imul test outsl lret cmp test jnp sub jl daa stc shlb leave jnp or jl mov test loopne jnp sub lret in mov mov jnp sub lret or loope mov sarl sub stc cld (bad) cmpsl test and push (bad) mov test push lret jl daa stc les or mov js jl cmpsl stc rolb (bad) jnp sub cld (bad) mov shrb pop sahf sub cli lcall or sarl sub ret cmc mov stc jno pop movsb and xor inc (bad) adc inc mov inc pop adc movsl lret dec (bad) daa stc inc mov inc jo sub les and sub cli jl daa stc shlb in jnp sbb jl mov fldcw sub lret out mov test sub ret fisttpl xorl and rorb cmpsl test and lret cmpsl test sub sbb daa stc inc mov and sub jl daa stc xlat stos addr16 (bad) loopne jnp sbb jl mov subl js out mov repnz cltd test sub ret mov aam jp arpl or (bad) sbb pushf xchg cmpsl test and lret cmpsl test sub jl daa stc inc mov and sub (bad) daa stc xlat stos dec (bad) (bad) loopne jnp sbb mov test loopne dec sahf sub out mov repnz cltd test sarl sub ret mov ret mov loopne jnp and cmp cmpsl test and stos int mov xlat ja sub call mov and sub (bad) jl daa stc xlat stos mov (bad) loopne jnp sbb mov push scas push test loopne dec sahf sub out mov test aam jnp sub ret arpl pop mov loopne jnp and (bad) sbb dec xchg cmpsl test and pop int3 inc mov pushl sub dec mov stc inc mov and sub (bad) jl daa stc xlat stos lahf mov loopne jnp sbb lret jl mov jns push test loopne dec sahf sub out mov mov cltd test sub ret cmp aas mov loopne jnp and popl cmpsl test and out inc mov xchg sub test daa stc inc mov and sub stc xlat stos (bad) mov loopne jnp sbb lret jl mov and rorl js out mov mov cltd test (bad) sarl sub ret adc lahf mov loopne jnp and popl cmpsl test and inc iret inc mov scas ja sub or mov sub std jl daa stc xlat stos das mov loopne jnp pop js jl mov leave scas push test loopne dec sahf sub out mov test (bad) sarl sub ret jmp aam jp jg and and (bad) popl cmpsl test and daa into inc mov ja insl sub push mov and sub jl daa stc xlat stos pop mov loopne jnp push js jl mov icebp scas push test loopne dec sahf sub out mov test sarl sub ret ret mov stc jp fbstp or (bad) sbb enter and and xchg inc mov pop ja sub enter inc mov and sub stc xlat stos jg (bad) loopne jnp push js jl mov cltd scas push test loopne dec sahf sub out mov cmc mov cltd test fcom jnp sub ret fwait mov stc jp mov jnp and push loopne jae and lahf flds test sub cmp daa stc inc mov sub mov (bad) daa stc ret (bad) pop loopne jnp adc jl mov push test and sub in (bad) jo dec mov sarl sub lret and fwait mov movaps stc sbb cmpsl test and lret inc rolb mov aam subl daa stc inc mov mov bnd daa stc aad test inc loopne jnp adc jl mov push scas rolb js in (bad) ds popa mov sarl sub lret bound push mov movaps sbb cmpsl test and lret addr16 inc mov cld jbe sub lret push mov loop shrl xor jl daa stc aad nop mov loope jnp adc jl mov js in je mov lret ljmp test fcmovnbe jnp sub lret cmp fwait mov movaps (bad) xor sahf cmpsl test and lret and mov inc mov test sub lret pushf mov xor sub stc aad std mov mov adc lret jl mov sbb flds sub ljmp test sub lret adc mov sarl sub stc nop loope test and lret xor mov mov lret xor daa stc inc mov mov (bad) jl daa stc shlb mov imulb lret jl mov (bad) scas roll sahf sub in mov test movsb sarl sub ret lock aam sub push shlb jmp stc mov loopne jae and lret adc lahf flds test sub lret js daa stc inc mov mov imulb js jl and ret (bad) pop loope jnp sub jg loope fildll sarl sub mov mov sarl sub clc les sarb xor add cmpsl test loopne jp and lret daa stc inc mov jae and dec jl daa stc inc mov sbb sub jl and ret (bad) pop loope jnp sub jg loope fildll sarl sub mov mov sarl sub clc shlb sarb xor add cmpsl test loopne jp and lret daa stc inc mov jae and loope jl daa stc inc mov sbb sub jl and ret (bad) pop loope jnp sub jg loope fildll sarl sub mov mov sarl sub clc loop cmpsl test xor add cmpsl test loopne jp and lret daa stc inc mov jae inc sub lret jl daa stc inc mov aaa jp sub jl and ret (bad) pop loope jnp sub jg loope fildll sarl sub mov mov sarl sub clc andb jnp xor add cmpsl test loopne jp and leave mov mov jae xchg sub stc inc mov ret jns sub jl and ret (bad) pop loope jnp sub jg loope fildll sarl sub mov mov sarl sub clc cwtl mov sarb xor add cmpsl test loopne jp and leave mov mov jae test (bad) daa stc inc mov aaa jp sub jl and ret (bad) pop loope jnp sub jg loope fildll sarl sub mov mov sarl sub clc mov cmpsl test xor add cmpsl test loopne jp and leave mov movsb test loope jbe sub stc inc mov aaa jp sub jl and ret (bad) pop loope jp sub jg loope fildll sarl sub mov mov sarl sub sti inc mov sarb xor add cmpsl test loopne jp and leave jne daa stc inc mov jae loope push jl daa stc inc mov inc jns sub jl and ret (bad) pop loope jp sub jg loope fildll sarl sub mov mov sarl sub sti pusha mov sarb xor add cmpsl test loopne jp and leave pop andl inc mov jae xor push lret daa stc inc mov fs sub jl das stc ret (bad) pop loopne jp sub les sbb push and lret jge push inc mov sarl sub lods scas cmpsl test push jbe sub mov inc mov and lret jge fcomip inc mov sarl sub jl and dec lods cmpsl test sub sub test mov jnp and lret jle add inc mov sarl sub jl es mov loopne jne sub inc mov flds test daa js jle jp inc mov sarl sub stc shrb sahf sub in daa stc inc mov sarb daa js jle mov inc mov sarl sub stc xchg lods cmpsl test loopne jne sub nop mov stc dec mov fdivrs daa js jge testb xor rcrl sub jl es mov loopne je sub pop lea stc inc mov aad lods es jns sbb inc mov rcrl sub jl es pop lods cmpsl test loopne je sub push lea stc inc mov aam movsl es jge testb imul jnp sub jle and test loopne je sub lea stc inc mov sarb and lret jge ret hlt inc mov sarl sub les stc mov loopne je sub jmp mov sarl es jg xchg testb loope sarl sub mov loopne jbe sub stos lea stc inc mov sarb es jge lret mov sarl sub mov cmpsl test jnp sahf sub test cmpsl xchg and cmp jge sub inc mov sarl sub jl es fwait scas cmpsl test loopne imul daa stc inc mov sarb and lret jge mov test out sarl sub jl and test fwait imul daa stc inc mov sarl cmp jg push jmp mov sub fstpt stc loop cmpsl test loopne imul daa stc dec mov fstpt cmp jge jg inc mov sarl sub jl and ret test loopne imul daa stc inc mov fnstcw cmp jne imul inc mov sarl sub stc push mov test add sub mov mov sarb cmp jle jbe inc mov sarl sub jl es inc mov test loopne push sub mov in xchg and cmp jge insl jmp je sarl sub jl and test shrl sub jnp daa stc inc mov aad aam js jge fsubrp inc mov sarl sub fstpt stc dec mov test loopne push sub jae daa stc inc mov sarb cmp js insl jmp fdiv sarl sub fstpt stc adc loopne push sub jnp daa stc inc mov sarl cmp jg xlat jmp outsl lock sub stc push mov test loopne imul daa stc inc mov sarb cmp js adc inc mov sarl sub les stc gs test loopne push sub xchg daa stc inc mov xlat jnp cmp jnp insl jmp fdiv sarl sub fstpt stc adc loopne push sub pop xchg daa stc inc mov aad les js jns dec call imul pop fidivrl stc imul jge adc push xchg and cmp jge fsubrp inc mov sarl sub fstpt stc or lock sub xor xchg outsb cmp js insl jmp fdiv sarl sub fstpt stc adc loopne push sub sti xchg daa stc inc mov aad or js jns sub mov sarl sub fidivrl stc lret mov test loopne push sub fistl push xchg and cmp jge fsubrp inc mov sarl sub fstpt stc cmc mov test pusha push sub mov in xchg and cmp jge insl jmp je sarl sub fidivrl stc xorl push sub xchg daa stc inc mov sarb cmp jle loopne inc mov sarl sub stc mov loopne imul daa stc inc mov sarb cmp jle jbe inc mov sarl sub stc xchg mov test loopne push sub ret stc inc mov sarb cmp js shr inc mov sarl sub fstpt stc mov loopne imul daa stc inc mov sarb and lret jle xlat jmp outsl lock sub stc push mov test loopne imul daa stc inc mov sarb daa js js add inc mov sarl sub jl and test cmpsl test sub add xchg and cmp jg pushf testl jnp sub stc jle cmpsl test loopne jne sub test mov cmp ja insl jmp fdiv sarl sub fstpt stc adc loopne jbe sub cwtl (bad) daa stc inc mov sarb cmp jge fsubrp inc mov sarl sub fstpt stc mov cmpsl test and jp mov in xchg and cmp jb cmp mov enter inc enter repnz mov xchg js sub aas andl insb loopne jo sub lret jb fs sbb jecxz jnp and enter repnz mov xchg js sub inc (bad) pop stc cmpxchg xchg stc lret sbb jb int into xchg pop loopne jnp and fldl push test jmp js sub fldenv add xchg loopne imul nop push cli movsl mov sub and enter repnz mov test sub jmp test jle add imul push mov sarb fcmove insl subl in mov jmp xchg mov clc mov fbstp sub scas nop sahf cli mov lock cmp repnz add sub inc (bad) push clc dec test sub inc sub jp jb jge mov (bad) jecxz jp cmp ljmp cmp cmpsl sub lea push xchg subb inc lret (bad) jge ret in jp cmp inc sbbl sahf test sub fadds push clc (bad) mov subb movsb sub lret xor sbb in jp and leave adc mov cld jg sub inc (bad) push clc xorb push mov mov test jo sub add mov (bad) jg sub aas xorl outsl (bad) sub (bad) cli aad xchg nop inc in jp cmp pop in mov test hlt mov fisttp xchg xorb lret and aad lds hlt cmp pop in (bad) cmpsb test dec jg sub (bad) xchg orb lret mov in mov js add mov test sub fildl sbb pop sub nop std std mov push iret lds test hlt push jg sub xchg xchg clc dec mov sub (bad) outsb imul std xchg mov add cmp into lods subl dec test hlt fidivr sub inc (bad) fdivrp dec test fbstp sub leave inc xchg outsl cli inc mov sarb and jge outsb in jle scas xchg mov fimul mov test push outsb out sub in xchg sar dec mov sarb fwait lret insl adcb cmc mov fidivr mov xorl popa leave cmpsl xchg jb insl mov loopne (bad) lret dec or xcrypt-ctr cmpsl sahf xchg mov sub push sti mov loop jo sub leave jb fs or loopne jns cmp into sub cmpsl into xchg idivb ja fiadd add add push xchg pop cld cmp in jns aas dec popf subb jle dec xchg jae outsl sub repnz sti imul insl cmp jns sbb xchg mov aas fmul jge lods out out cmpsb xchg sub fst xchg cli dec test dec insl sub enter clc jge add das aas mov out dec cmpsl fiadd pop sub mov mov xchg stc enter stc int ja push and int std out mov pushf js sub cli dec mov adcl sbb xchg ret in js ds into int add xcrypt-ctr cmpsl push xchg negl mov pop xor sub cli movsl mov xor jno,pt xchg subl xchg jle sub popa test std aas mov (bad) xor fbstp sub iret call sub or inc int xchg orb (bad) aaa test std loop lret (bad) adc ja in das insb lret jb sbb xchg movsb out jnp and push (bad) mov int mov sub fsubr test stc dec test jp pop das jo clc (bad) or dec mov fnstcw sub je mov jns scas test sub lret cmp jmp sub and fadds or sub ret je xchg stc and mov lret adc inc (bad) sub and mov pop icebp dec mov fnstcw sub ret je repz int3 stos scas test sub icebp mov stc pop mov cmc jp and scas test ljmp int3 test (bad) jnp sub stc popf movsl mov sub lret mov mov ljmp (bad) (bad) (bad) push mov sub stc andb jl sub loopne in fbld jp jns fwait lret (bad) mov sarb sub stc (bad) movsl test (bad) jecxz sahf test cmpsb loop jnp cs fild or cmpsb out jns sub int3 mov movsb inc xchg sub lret incl inc (bad) es jnp cs enter (bad) addr16 (bad) out js sub stc (bad) movsl and xchg xor sub lret sahf test mov call enter cli cmp sarl sub jge daa stc inc mov dec jae and ret leave mov icebp xchg stos js enter and pusha mov lea mov loopne lock mov (bad) jp and mov lock scas test fidivrl sub cmp sbb and sub mov mov sarl ds leave jl imul jmp push sahf sub stc movsb mov xchg sub xchg xchg pushf sti inc mov sarl ds leave jl fsubrp jmp push sahf sub movl fsubl sub outsb lcall sahf loop jnp xor leave jl push loope mov push sahf sub movl in and lcall sahf loop jnp xor leave jl outsb loope mov push sahf sub rol andb sbb sbb and sub push lcall sahf loop jnp xor leave jl push loope mov push sahf sub rol andb les push arpl lcall sahf loop jnp xor leave jl mov test sub rol andb in mov jl and lcall sahf loop jnp xor leave jl out jmp push sahf sub stc xchg mov add and lcall sahf loop jnp xor leave jl into loope mov push sahf sub stc mov loopne arpl fwait pushf sti inc mov sarl xor leave jl ss mov push sahf sub movl hlt bound (bad) and inc mov sarl sub jle or dec mov fidivrl sub jno and test loopne jnp sub dec (bad) xor inc mov sarl sub jle adc pop mov lret sub popa (bad) and test loopne jnp sub inc (bad) add inc mov sarl sub jle sbb insl mov cli jnp sub push (bad) and test loopne jnp sub ds adc inc mov sarl sub jle (bad) stc jge movsl test ljmp (bad) and test loopne jnp sub ss fs inc mov sarl sub lret jle push or loopne jnp sub lret xor call jnp sub cs je inc mov sarl sub lret jle jb sbb loopne jnp sub lret and clc test loopne jnp sub es inc stc inc mov sarl sub lret jle jp sub loopne jnp sub lret adc enter mov out sub push (bad) push stc inc mov sarl sub lret jle inc stc cmp loopne jnp sub lret add fadds sub push (bad) movsb stc inc mov sarl sub lret jle dec stc int movsl test pop jnp sub lret icebp (bad) and test loopne jnp sub ljmp test xor shrb xor pop mov std jnp sub lret imul mov xchg sub cmp jecxz (bad) loopne bound (bad) jo inc mov mov dec jl es inc mov sarl sub std fwait daa stc inc mov sarl sub jle scas loopne mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov aaa jl sub jg and inc mov sarl sub sarb stc inc mov sarl sub jle pop icebp inc mov sarb sub insb (bad) and push mov sarb sub push mov sarb sub fs and pop mov sarb sub pusha (bad) and pop mov aad subl and mov (bad) jnp sub pop (bad) das stc inc mov dec bound (bad) xchg dec mov jp xchg sub int (bad) xchg decl sbb jge sub dec mov add sub (bad) fbld (bad) sahf dec or adc dec xlat and ret (bad) mov mov and (bad) cld inc xchg mov mov xor ret cltd mov cltd or push nop sub mov dec lea cwtl sbb push nop daa (bad) aam ja mov mov out push cwtl xor (bad) mov mov and mov decl scas cmp rcl inc loopne add pop sbb cwtl and enter mov sahf insl sbb nop sub ljmp pop or adc shr inc mov sbb cmp into sbbl inc sbb xchg inc jecxz testl sbb mov lret enter movsl or dec or mov (bad) lret cltd xchg adc dec adc int lds mov scas jl push mov iret vsubps push mov notb sub loopne or dec adc mov (bad) shl push mov sbb aaa rol jmp icebp pop add add (bad) movsb psubq cmp sub repz lcall mov notb xlat shl and inc or xor aad inc xchg movsl push sahf jp mov push xlat leave lock lea push in push stos and shr inc test scas cmp rcl inc loopne or dec adc nop sub icebp loope xchg mov mov xor cmpsl lret inc mov psadbw inc jmp ljmp pop mov xor lret (bad) mov mov or (bad) mov lret cmp inc sahf aaa jecxz lock mov mov (bad) dec stc pop xlat xlat hlt push test stos adc inc pushf and enter mov jmp adc ss vsqrtpd or adc in push cltd sarl incl mov sub ret mov cmpsb sbb (bad) loope dec andl adc jecxz lock mov mov push stos and cmpsl leave push mov mov and shl and inc sbb xor mov incl test adc lret icebp inc mov or sub or daa mov (bad) iret jmp test cmp pop (bad) dec xchg sub aad inc rcl sub pop or adc out mov scas adc push nop daa mov cwtl adc add mov lret and pop das stos adc (bad) lret loope mov or dec adc pushf and loopne push ljmp xchg ss lock test mov xor lret loopne xchg shrl out or adc lds mov cld inc add cs xchg xor (bad) mov lret das sti push lea iret mov inc xchg mov mov and shr dec mov cmp inc sbb and aad imul dec popf and mov cwtl add mov loope xchg mov mov sti push lea vpmulhw test xlat push mov (bad) dec lods ss leave testl or xor ret loopne adc dec sub inc lock ljmp pop mov (bad) fiadd pop pop lods or test cmpsl adc inc push cmpsb sbb push stc pop rol out cmpl lea mov pop sti pop js or dec xchg and mov mov sub cmpsl (bad) inc xorl pushf daa (bad) into jmp mov xor inc lock push mov xor dec popf sub cmpsl leave inc xchg mov (bad) sbb inc sahf and (bad) mov lret ds mov push xchg mov sahf pusha push mov cmp xchg mov movsl or dec nop and xlat loope andl lea andl pushf and iret testb sub dec or and ret test movsl adc (bad) popa nop sub hlt std push xchg mov xlat inc push movsb jl push pushf sub cmc loope test lret xor push xchg inc cmc (bad) in push test adc das notb and mov test (bad) push cwtl daa (bad) cmpsl xlat push xorl mov push xorl xchg sub in push test ss inc sbb sub mov test out xchg and mov lock mov and into jmp icebp pop sbb xor psubq xor pop lret leave jecxz test xlat inc or dec (bad) jb sub xchg mov mov adc cmp push pushf adc lret mov cmp pop add ss out mov adc inc sbb push (bad) jne sub enter mov scas adc push cwtl xor aad ja mov cmpsb adc sbb dec (bad) and fdivp inc xchg sarl sti pop adc and cmpsl xlat pop lea cmp lret shr dec loopne adc inc sbb pushf inc repnz loopne mov scas jl push xorb xlat push xchg mov repz scas sbb aad push xchg mov mov sub into loopne xchg (bad) xor pop adc sub mov or dec sbb or push lea jecxz xchg movsl or sub scas sbb push lea fucomi loope mov or inc or sub (bad) out and pop or add (bad) aam jbe mov cwtl sbb push mov xorl adc push xchg sub mov stos adc inc mov int3 ret test adc dec or push (bad) gs sub into ljmp js adc mov mov sahf insl cmp mov int loope xchg mov movsb or inc pushf mov mov mov and rcl inc xorl xchg and cmpsl ret mov std dec sbb nop sub hlt in inc xchg mov fistp mov and mov in sub mov aaa out enter mov fimull sbb rol in loopne add pop sbb xlat pop int hlt push test lret sub dec lcall movsb pop sti push cmpsl adc inc lea xchg mov mov sub test sbb ret movsb mov lods jl inc lcall sarl negl stos or inc lea xchg mov mov or push lret mov mov sub lea mov push lret shr inc nop (bad) xor dec pop scas xor inc xchg or ret loope mov add inc movsb push out inc lea icebp dec test lret das sti push lea iret mov dec mov mov sub cmpsl xlat pop xchg movsl push repz das mov aaa mov jmp lea cmpsl adc jne aaa xlat lret lock dec pop scas ds pop mov dec xchg (bad) ss pop or cmp (bad) jmp loopne ss dec or xchg push out lcall pop cmp or in jnp push xor mov mov rorl fs lret dec shrb xchg (bad) sbb mov iret adc stos rcrl stc sub idivb mov mov lcall pop cmp adc mov jnp push sub jl gs mov rorl or jbe inc aad aad loopne adc adc mov rcrl stc loopne,pt mov mov mov lcall sbb lcall cmpsl lret inc xchg sbb pop mov popa (bad) movsl xor or dec fwait xor ret test scas sbb (bad) aad inc xchg movsl push in sub cltd xor lcall pop cmp or in jnp push xor mov mov rorl mulb push cli push inc shl leave sbb mov mov cmp ljmp sub cltd xor lcall dec cmp adc mov jnp push sub jl gs mov rcrl idivb lret pop cli jbe inc (bad) in sbb mov iret adc scas adc sbb xor lret icebp inc mov sub jl jne jns leave in je rcll adc jbe inc int aad loopne adc adc movsb add sbb xor idivb mov mov lcall pop sub adc mov jnp imul jl jne jns aam je rorl out inc lret or jbe inc (bad) iret aad loopne add adc mov xor idivb mov mov lcall push adc adc mov jnp jnp idivb test mov rorl js lret dec (bad) jbe inc int leave sbb lcall ljmp les leave sbb movsl cmp adc mov xor ljmp sub xlat daa rcl push loopne add adc mov xor ljmp sub mov mov lcall push cmp or in jnp jnp idivb mov mov roll out inc lret dec shrb xchg iret leave sbb loopne rcll cli adc sbb push lret and sub xor lcall sbb adc lods in jnp inc xor mov mov rorl inc lret dec ljmp sbb jmp repnz sbb jge ljmp sub xor lcall imul inc (bad) gs adc mov jnp inc sub jl gs mov sarl fdivrl lret cmp jbe inc in aad loopne adc adc mov rcrl stc add idivb mov mov lcall arpl lcall cmpsl iret addr16 jnp inc sub jl gs mov (bad) fdivrl lret xor jbe inc in in sbb lahf adc adc test rcrl stc or idivb mov mov lcall jnp lcall cmpsl xlat addr16 jnp inc sub jl gs mov shrl fdivrl lret sub jbe inc hlt in sbb xchg iret adc pushf rcrl stc adc idivb mov mov lcall jae lcall cmpsl loop mov jnp imul jl jne jns shr fst sbb js lret adc jbe inc lret sbb mov mov sub mov mov cmp lcall inc sub adc mov jnp imul jl jne jns int3 in je rcll out inc lret adc jbe inc into cmc aad loopne adc adc cmpsl add sbb sub idivb mov mov lcall dec add adc xchg mov scas sbb dec mov aam out inc loopne adc adc inc stc aaa (bad) aad dec nop pushf adc pop adc jecxz,pt pushf inc (bad) rol push mov sbbl ret icebp dec test or pop adc sbb push cwtl inc ror push andl stc sub lret nop mov cmc dec pop scas aas in push xchg xor mov movsl xadd xor ret loopne push ljmp pushf sub roll pop js sbb inc stc sub aam and pop add mov mov lods cmp dec pushf or lret mov mov sub cmpsl call stc pop sbb mov lret leave loope mov lret or fs sub ret test lea jecxz mov loopne mov mov inc (bad) enter rorl in dec push mov and cmpsl notl mov repz mov (bad) push lea mov push lret movsl jb aad inc lea mov aaa int test mov lea out notl mov movsl cmp dec pushf inc lret inc xchg mov movsb pop int3 inc xchg and sahf or dec or adc dec xchg and aad dec mov adc inc js or dec cwtl and cmpsl hlt push lcall adc test push loopne sbb pop sub inc rol out xorl lcall movsl adc jecxz pushf or ret xchg mov stos push jecxz pushf xor aad and dec or xor cmpsl loope test cmpsl sbb inc lea into ljmp sbb and cmpsb mov lret pop out mov iret ret cmpl pushf xor (bad) lock loopne add dec sbb cmp nop mov incl sbb (bad) enter mov mov sub ret loope loopne or inc pop movsl shufps fcomi in dec test or pop or or push stc and lret loope cmpl sub loopne push clc dec or lea enter mov sahf inc sbb stc and xorl sbb int jmp testl lcall mov scas jb (bad) loopne xchg movsl or dec or nop sub ret xchg cltd sbb dec adc jb shr dec mov lret sbb push nop ss jmp std pop or sub (bad) mov stos push notb or nop mov mov ss (bad) lock (bad) mov cmpsl push jecxz xchg inc rol notl movsl jnp inc or sub shl pop xchg rcll lret scas sbb loope ljmp sbb ss aam and dec or push testl pop test sbb pop sbb lea (bad) leave test mov sbbl leave icebp dec (bad) mov rorl mov out lods sub ret loopne push repz sbb xorb aam inc xorl cwtl and aad push xchg rcll sti inc pop mov add andl lahf sub aad push test mov and loopne sub inc sbb xor ret loopne test cwtl adc into jmp adc dec sbb sub lret loopne xchg mov lret sbb popa mov (bad) repz push test psllw cmpsl cmp dec pushf pop lret fucom and inc cmp ss leave testl js or inc cwtl sub fdivp inc xchg test incl lods sbb push pushf and mov mov sub cmpsl rorb movsl or inc pop lret sbb push cmpsb pop xlat aad inc mov scas xor pop lea notl mov mov add enter mov mov imulb xor enter mov lret scas cmp dec xchg pop out hlt int loopne adc xor dec fwait and cmpsl xlat inc xchg shrl icebp push daa mov inc xchg sbb push stc aaa (bad) rcr imul inc xchg and mov cmpsl add std in inc test mov imulb cs sbb imul sbb in dec mov sbb shlb sub pop adc and mov sbb ror and pusha push mov and ret int xchg out sahf jnp stos sbb xorb cmpsl (bad) inc xorl cwtl and into ljmp sbb ja cmpsl (bad) inc xorl pushf and xchg loopne sahf push movsb movntq stos and ret (bad) pop xchg mov sahf jge stos adc inc xchg ss loope dec cmpl xorl xchg (bad) xor xor inc xchg pop xlat (bad) cltd sarl in dec sbb (bad) fiadd inc or lea ret lret icebp inc loopne push ljmp test pusha cwtl mov mov and mov xor in roll sbb xor jmp dec xchg mov pop int out xchg sarl icebp inc or adc int in inc xchg nop or dec add sub imul lea scas or inc lcall mov cmpsl adc (bad) loop push lea jl inc mov mov mov mov xor hlt in pop test adc jbe mov out dec lcall mov mov mulb sub shl test movsl pop (bad) dec xchg sub enter mov sahf jp mov int stc pop int std and inc sub and enter mov mov out lea out call sti sub mov adc xlat loope mov xlat inc or dec (bad) popa mov iret in push test dec int or sub leave lock sarl pop cmp aaa (bad) rcr insb xchg xchg sbb inc pop mov inc icebp shl push xchg sarl pop mov sub lock push mov mov sub cmpsl (bad) dec lea mov mulb ss xor cmp push mov inc lea sbb bound dec (bad) mov lahf sbb push test pusha cwtl mov cltd sbb inc mov push test scas or daa mov aam test mov leave pop adc and cmpsl jecxz xchg mov out or aaa mov sahf adc adc mov psubusb cmpsb sbb daa sahf and clc leave dec test or data16 (bad) lret cltd rcrl pop daa sahf sub pop stc and rcr fs xor sub scas or push mov xchg mov stos push sti daa mov dec mov add and clc (bad) dec (bad) mov int add sbb enter mov stos sbb dec xchg and movsl push fimull add mov lcall (bad) inc loope jmp (bad) dec or ss leave lock mov sahf push scas sbb rcl in xorl rorl mov mov scas sub bound push mov adc dec or and clc aam (bad) mov in pop ss adc daa mov push xchg mov ljmp mov lock mov mov sbb (bad) in dec lods mov lret sub dec lea int rcrl jnp dec or push in inc pushf aaa shl std insb test sbb pop daa xchg out xchg and (bad) jmp ljmp popf and ret loopne push ljmp test jbe cmpsl push sahf dec sbb cwtl sub mov lock js adc dec mov jo mov mov and cmpl xchg sub cmpsl lds rcrl pop daa (bad) or dec stc je ljmp sub xor lcall sbb adc ja in jnp push xor mov mov rorl inc lret dec cli push inc lcall rcll repnz sbb jge ljmp sub xor lcall imul inc (bad) adcl push sub jl jne jns jecxz je sarl int3 js lret cmp jbe inc in aad loopne add adc mov rcrl stc add idivb mov mov lcall arpl lcall cmpsl iret ja in jnp push sub jl jne jns jmp je (bad) ss js lret xor jbe inc in cmc aad loopne add adc test rcrl stc or idivb mov mov lcall jnp lcall cmpsl xlat ja in jnp push sub jl jne jns repz je shrl int3 js lret sub jbe inc hlt cmc aad loopne add adc pushf rcrl stc adc idivb mov mov lcall jae lcall cmpsl loope mov jnp imul jl dec test mov mov lods sbb adc daa xchg and leave loope shl jnp inc sbb xlat and lret test mov scas cmp daa mov dec adcl jb shl arpl xor mov jne movsl adc lock stc sub (bad) jmp mov mov pop int loope mov jnp and pop (bad) pop stc cmp lea sub pop (bad) pop stc cmp loope jecxz add dec (bad) pop stc inc and dec sahf insb js jl daa into inc shlb sub insb js jl daa rolb and jg test in mov and push js jl daa xchg inc fwait cmpsl loope adc mov inc fisubl das sahf push js jl daa mov out ljmp js jl daa scas inc lea cs imul lret daa stos inc xchg cmpsl out and dec js jl daa int sti cmpsl mov cltd shrl insl js jl daa lret cmpsl fsubl jp sahf jl daa mov aam scas shrl sahf insl js jl daa mov aam jecxz lret rcll js jl daa lcall shrl sahf insb js jl daa xchg inc xchg cmpsl in and pop js jl daa mov loopne mov dec sahf inc js jl daa rolb add js jl daa int3 inc sti cmpsl loope aam push sahf inc js jl daa addl or (bad) push stc mov loope test (bad) inc stc jae loope dec loopne jnp sub or in push loopne jnp sub lret inc (bad) push stc adc jmp lret or push stc daa mov in fsubrl adc adc xchg test lcall (bad) outsl stc xor jmp lret sub push stc sub iret test mov sub dec (bad) pop stc xor in aad adc and jno imul jnp sub lret push (bad) dec stc and loopne jnp sub lret or push stc cmp lock out clc sub stc sub call jnp sub lret aaa (bad) imul dec loopne jnp sub lret es push test out out or and mov test fldcw or stc mov movsl jnp sub lret sbb fldl sub lret jl mov loop cmpsb shll sahf gs jl daa lahf inc ljmp sahf inc js jl daa mov out xlat and add jl daa mov fisub outsl js jl daa test leave cmpsl hlt and jae movsb jl daa mov clc cmpsl shll js jl daa int xchg cmpsl (bad) and jl mov inc out aam (bad) rcrl sahf push popf jl daa into inc les dec sahf jo mov xchg inc shlb sahf push js jl daa rolb and dec js jl daa cwtl inc call rcrl sahf inc js jl daa mov mov cltd rorl sahf dec js jl daa lcall rcll sahf push js jl daa enter shll jle (bad) jl daa mov and pop js jl daa stc pop (bad) aas sahf dec js jl daa addl cmp jl daa stc lds mov lret sub inc stc sub mov lret aaa (bad) push stc sub lahf jnp sub or jmp jnp sub sub xchg test loop out das lret sbb repnz loopne jnp sub lret pop (bad) adc test sub lret or mov mov cmpsl sub lret xor into test cwtl jnp sub lret das (bad) jo pop mov mov scas sub lret adc mov test sub stc sbb loopne jnp sub lret sub mov pushf jnp sub lret dec (bad) inc stc add mov lret add dec stc push mov mov shrl sbb ss outsl stc je loope push loopne jnp sub lret cmp mov movsb jnp sub lret pop (bad) dec stc or icebp test xchg jnp sub lret pop (bad) push stc inc and dec sahf inc js jl daa sahf inc jmp shll inc js jl daa mov xchg cmpsl aam test inc sahf imul shll mov (bad) cmpsl in mov sub jl daa xchg inc aam cmc and dec js jl daa sahf inc shlb ds outsb js jl daa (bad) inc hlt cmpsl shll pop js jl daa mov and sbb jl daa mov and push js jl daa lods inc mull dec sahf dec js jl daa lods inc xchg cmpsl aam mov das sahf pop js jl daa test loopne mov (bad) shrl sahf imul mov cwtl inc call rcrl sahf bound jl daa mov and jo (bad) jl daa mov into and push js jl daa nop inc shll sahf addr16 jl daa mov add js jl daa popl ret shrl sahf sbb jl daa mov and sub lret gs aaa mov test fildll push lret das (bad) push stc aaa mov stos jnp sub lret and adc test mov lret sbb (bad) test mov lret push (bad) ja jge aad outsb loopne jnp sub xor xchg test out shrl cmp stc sub cwtl jnp sub lret sbb aad outsl loopne jnp sub stc jl xchg test loopne jnp sub lret adc mov sub lret dec (bad) inc stc xor call lret dec (bad) push stc jne ret test cmpb dec lret or cmc test loopne jnp sub or outsb stc add cmpb push lret cs or xor jecxz (bad) xor sub adc jbe incb sub lret jl jbe sbb les sub lret sub xchg test movsl jnp sub lret dec (bad) pop stc inc and push sahf fs jl daa mov and fs jl daa lahf inc out repnz adc jl daa rolb and push daa lcall rcll jl daa scas inc (bad) cmpsl hlt and sbb jl daa mov and push js jl daa mov jmp sarl sahf sbb mov inc lret cmpsl jmp sahf inc js jl daa sahf inc fwait cmpsl shll dec js jl daa iret inc into cmpsl frstor inc js jl daa mov fisubl ds jnp mov inc shlb or into daa mov enter (bad) adc push js jl daa scas inc (bad) cmpsl jmp sahf push cmpl inc shll add les mov ljmp sahf inc js jl daa mov mov mov dec sahf jg test stc lds loopne (bad) sub lret dec (bad) push stc sub mov stc sub dec (bad) pop stc cpuid nop test mov sub pop (bad) inc stc mov (bad) jnp sub lret dec (bad) push sbb loopne jnp sub lret or (bad) test loopne fisubrl xor or in dec loopne jnp sub push (bad) jbe jl xchg test loopne jnp sub (bad) push stc mov movsb jnp sub lret sub mov mov stc sub ds gs add test lret dec (bad) dec stc ja rolb sub or repz jnp sub lret inc (bad) gs xor loopne stos sub lret sub (bad) test mov sub pop (bad) inc stc mov test lret push (bad) dec stc sbb cmpsl cmpsl push (bad) jnp sub xor (bad) test mov lret sbb iret test sar lahf push js jl daa mov shlb sahf insb js jl daa lret inc mulb ss sbb jl daa mov lds pop js jl daa fwait inc (bad) cmpsl int mov js jl daa mov shlb sahf adc jl daa mov and insb js jl daa stos inc lcall sahf push test lahf inc aam repz adc jl daa (bad) inc lret cmpsl call sahf sbb jl daa lods inc lret and inc js jl daa mov and jl lods jl daa mov and gs jl daa mov shll xor jmp cmpsl repz data16 jl daa xchg inc lret cmpsl mov aad push sahf adc jl daa xchg inc shll sub xlat daa xchg inc repnz repnz dec js jl daa mov iret cmpsl test sub cmp rolb sub lret dec (bad) jle je lock lahf jnp sub stc xor loopne jnp sub stc xor loop push loopne jnp sub adc mov xchg sub stc push mov mov lret push (bad) inc stc and loopne jnp sub lret jb in test mov lret adc roll sub lret sub popa stc mov cmpb ds sbb (bad) test mov call (bad) push stc pop mov movsb jnp sub stc sub test scas sub lret aas (bad) jle push mov mov shrl or dec (bad) ja das mov nop jnp sub lret sub roll sub lret add push stc jge nop test mov hlt sub lret dec (bad) inc stc sub call lret jl es in (bad) and dec js jl daa scas inc repz jecxz xchg push sahf inc js jl daa scas inc xchg cmpsl cmc and push mov inc aam (bad) and fs jl daa xchg inc mulb ds gs jl daa roll and push mov inc repz shll popa js jl daa xchg inc fisubl or pusha js jl daa mov in and jns lods jl daa scas inc shlb sub lret daa iret inc ljmp sahf arpl jl daa lods inc fwait cmpsl aam rcl adc loope popl loopne rcl push sahf jae mov mov lds inc js jl daa mov icebp and imul les cwtl inc clc cmpsl shll addr16 jl daa stc pop shlb adc bound jl daa mov mov xchg or (bad) cmpsb clc xor mov lret sub rolb sub stc add nop jnp sub dec (bad) imul (bad) loopne jnp sub lret dec (bad) jg push mov test sub or ret loopne jnp sub lret sub xlat test mov sub stc or nop jnp sub or std test popf jnp sub sub xlat test test lret adc mov (bad) jnp sub lret or incl sub lret adc ret test jnp sub lret ds jno xor mov repnz lret or inc stc push mov mov lret inc (bad) jno aaa mov lahf jnp sub lret and pop stc inc xor jnp sub or enter xchg jnp sub das (bad) push stc sub sarb pop js jl daa lret inc aad in cwtl sarl jl daa cwtl inc clc cmpsl ret and sbb jl daa mov and outsb js jl daa mov leave cmpsl mov sahf dec js jl daa lcall roll sahf arpl jl daa lret cmpsl mov movsl rcll dec js jl daa mov out cmpsl (bad) and inc js jl daa mov int mov js jl daa lods inc jmp sarl sahf dec js jl daa stos inc call rorl inc js jl daa addl dec sahf adc jl daa mov in and dec js jl daa int3 inc (bad) cmpsl (bad) and adc jl daa xchg inc shlb pop sahf jle mov inc loopne repz insb js jl daa mov enter mov jnp inc js jl daa test and jg mov inc mull jnp sub lret dec (bad) inc stc imul jnp sub lret sbb mov mov hlt sub lret cmp les sub xor mov cmpl and or xlat test loopne jnp sub lret sbb xchg test loopne jnp sub lret cmp repz lahf jnp sub lret adc lret loopne jnp sub aas (bad) push stc and out lock lret sub cmc test loopne jnp sub lret jb out push loopne jnp sub sbb in jbe movsb jnp sub cmp into test xchg jnp sub lret xor mov nop jnp sub lret or mov in lods sub lret pop (bad) outsl stc sub rcrl sub stc push mov fwait jnp sub lret cs dec stc or xchg jnp sub jl es inc lds sub shlb inc mov or shll mov and push js jl daa mov and sbb jl daa rolb and pusha js jl daa xchg inc ljmp sahf fs jl daa mov xchg cmpsl mulb push js jl daa mov mov xchg (bad) xor int mov shlb sahf inc js jl daa enter in and jae (bad) jl daa leave inc jmp int3 and sbb jl daa mov into and push lods jl daa scas inc cmc cmpsl shll jg stc jl daa mov and pop js jl daa into inc out cmpsl enter xor shll mov call roll sahf pop js jl daa stc pop int lret shrl jns mov (bad) daa mov and sbb std adcl xor loopne jnp sub lret jb lahf test xchg jnp sub pop (bad) dec stc or loopne jnp sub lret dec (bad) jle or loopne jnp sub jb rolb sub lret dec (bad) pusha stc sbb loopne jnp sub lret dec (bad) inc stc and mov mov or stc adc loope inc loopne jnp sub lret or fs adc xchg test movsl jnp sub lret jb out push loopne jnp sub stc or sahf jnp sub lret dec (bad) inc stc sub xchg jnp sub lret add insb stc jbe fiadd sub lret or xchg test mov sub lret or cmc test sub jb roll sub lret adc daa fmuls loopne jnp sub lret adc hlt test jecxz in sub lret or adc inc and sub shll inc into cmpsl cld and jge xchg mov and pop js jl daa mov lret (bad) xor mov mov and jge mov mov and push js jl daa xchg inc lock in mov sub add jl daa rolb shll dec js jl daa xchg inc shlb sahf push js jl daa mov mov mov pop sahf push daa xchg inc enter test dec sahf push js jl daa xchg inc (bad) xor outsl js jl daa lret inc in into and dec js jl daa xchg inc cmc cmpsl mov rcl or repz mov xlat and sbb jl daa iret inc leave cmpsl mov sahf sbb daa test cmp js jl daa pushf inc (bad) xor lret daa pushf inc shlb fisubrl cmp or ret test popf jnp sub (bad) adc imul jnp sub lret push (bad) pop stc xor mov (bad) sub ss push stc sub cli jnp sub lret xor roll cmp sub aad imul cmp sbb out test nop jnp sub or lahf test xchg jnp sub stc mov mov lret sbb xchg test loop les or pop (bad) adc test loopne jnp sub lret dec (bad) adc xor loopne jnp sub cmp roll sub lret sub out test xchg jnp sub lret adc mov cmpsb jnp sub adc movb das lret push (bad) insl stc or xchg jnp sub ds inc stc and loopne jnp sub jge daa mov int (bad) and push js jl daa mov and dec js jl daa fwait inc int mov mov js jl daa nop inc loopne mov mov ss inc js jl daa fwait inc fisubl dec sahf pop js jl daa mov scas and push js jl daa mov shll sahf push js jl daa mov in and jno mov inc hlt cmpsl aad mov inc sahf js mov inc fisubl sub mov mov in cmpsl (bad) and jl movsl jl daa stos inc out mov mov inc sahf jg lcall cmpsl frstor push movsl jl daa stos inc shll push sahf push js jl daa xchg inc fisubl sub lock mov and gs jl cmp and push mov inc lcall sahf jno mov jb xchg test mov lret lret adc mov mov icebp sub stc adc xchg test xchg sub push (bad) push stc mov pushf jnp sub lret push (bad) insb stc sub fwait jnp sub sbb mov xchg jnp sub lret cs data16 sbb loopne jnp sub lret or jno and loopne jnp sub lret push (bad) data16 sub mov sub (bad) adc mov mov les dec lret pop (bad) jne outsl mov loope fldt sub adc icebp test movsb jnp sub lret cmp repz test sub lret dec (bad) dec stc add mov sti sub adc fldl sub lret dec (bad) dec stc je out test mov leave sub lret or pop stc inc mov cmpsl jnp sub lret xor xchg test test in js jge daa mov lock mov sahf pop js jl daa lret inc (bad) cmpsl ljmp js jl daa addl and bound jl daa xchg inc repnz (bad) and inc js jl daa test enter mov add loopne mov and imul aam mov out enter adc lret inc xchg cmpsl (bad) and jo mov leave inc shlb cmp repz mov and bound jl daa scas inc in cmpsl ret and pop js jl daa lods inc xchg cmpsl frstor pop js jl daa scas inc out leave and addr16 jl daa mov and pop js jl daa (bad) inc enter (bad) cmp push js jl daa mov shll sahf pop js jl add and inc js jl daa enter jmp sahf pop js jl daa addb pop adc scas jl daa lahf inc lds adc out daa xchg inc int hlt and pop js jl daa popl cld and push daa mov and pusha js jl daa mov out cmpsl lret shrl sahf js cltd jl daa lods inc mull and mov lret inc xchg cmpsl mov aad dec sahf push js jl daa leave inc mov call lret sub mov call lret cmp mov sub lret xor ret loopne jnp sub lret sub ljmp sub xor rolb sub lret add push stc adc mov repnz lret xor aad (bad) loopne jnp sub lret sub mov mov stos sub lret cmp mov sub lret adc testb push lret es gs push mov fwait jnp sub lret push (bad) dec stc adc loopne jnp sub dec (bad) jb add loopne jnp sub lret or lock mov fsubrs sub das (bad) je or loopne jnp sub sub repnz sub lret add adc cmp loopne jnp sub lret dec (bad) daa js ret cmpsl frstor sbb jl daa scas inc enter aad dec sahf imul out into inc (bad) dec sahf inc js jl daa enter mov mov js jl daa xchg inc (bad) cmpsl mov rcl sbb in lods inc xchg cmpsl shll sbb daa pushf inc xchg cmpsl shll jl mov inc in cmpsl mull js stos jl daa into inc repnz leave and dec js jl daa mov xchg cmpsl fsubl jg cld jl daa (bad) inc repnz repz push js jl daa mov mov sahf push js jl daa xchg inc lds adc jl daa lea std and dec js jl daa rolb and adc jl daa xchg inc repnz in and pop js jl daa lods inc mov roll sahf jl xchg jl daa lods inc jmp rcll sahf jp lea clc and out out sub lret xor loop adc sub pop (bad) insl stc adc iret test movsb jnp sub lret dec (bad) pop stc jo movb push lret xor int3 test jnp sub lret or xchg test test sub lret dec (bad) jno xor mov jmp (bad) push stc je iret test jnp sub lret dec (bad) data16 jl icebp test loop out sub stc adc roll sub lret dec (bad) ja jb hlt test mov lret dec (bad) dec stc add xchg jnp sub lret sub repz lcall (bad) imul jb in hlt sub stc add out out sub lret sub xchg test jnp sub lret sub incb sub stc sbb in insb loopne jnp sub or mov sar lahf pop js jl daa sahf inc aam (bad) and data16 jl daa addb and bound jl daa xchg inc out into and sbb jl daa int3 inc xchg cmpsl xlat and dec js jl daa (bad) inc (bad) cmpsl hlt and inc js jl daa enter hlt and adc jl daa xchg inc out (bad) and dec js jl daa mov and inc js jl daa roll and jo (bad) jl daa mov and dec js jl daa cwtl inc ret cmpsl (bad) and jo stc jl daa mov into cmpsl (bad) and inc js jl daa cwtl inc xchg cmpsl loopne rcl and ret daa lea mov test ds jno lahf jl daa fwait inc in cmpsl mov xchg roll jnp mov inc hlt cmpsl cld and sub jl daa mov loope xchg rcll sahf pop js jl daa mov test push lret cmp into test loopne hlt sub lret ds dec stc jge xlat test jnp sub dec (bad) insl stc pop mov out mov add pop (bad) inc stc sbb xchg test loopne jnp sub lret push (bad) adc add loopne jnp sub sbb lock loopne shrb xor stc adc mov sub dec (bad) pop stc add xchg jnp sub aas (bad) data16 xor mov lret xor outsl stc jl aad dec loopne jnp sub lret add mov mov repz lret sbb mov pushf jnp sub lret dec (bad) push stc ja loope push loopne jnp sub lret xor mov test sub lret sub (bad) test sahf jnp sub lret es je sub loopne jbe jmp lret push (bad) arpl or hlt test jnp sub lret push (bad) jg adc loopne in sub lret adc les sub lret adc testb xor stc outsl mov mov jmp (bad) daa fcoml mov xchg jnp sub stc or jecxz sti sub lret pop (bad) push stc or popa mov sahf pop js jl daa xchg inc xchg cmpsl shlb add jl daa sahf inc fisubl dec sahf pop js jl daa test shll pop sahf jg cmpl call sahf pop js jl daa xchg inc aam out stos rorl sbb jl daa xchg inc jmp out xlat (bad) xor sti daa mov fsubl inc js jl daa sahf inc ljmp sahf adc jl daa lea mov fcom ss dec js jl daa leave inc loopne xlat and jle lcall cmpsl stos and dec js jl daa mov lret sarl sahf pop js jl daa mov in and jge mov inc xchg cmpsl enter sbb lods daa mov and jae cltd jl daa popf inc xchg cmpsl mov cmpsl rcll sahf push test sahf inc out out and jge xchg int into cmpsl in and inc js jl daa mov fisub outsb js jl daa mov fwait cmpsl ret and push js jl daa int out cmpsl in and fs jl daa stc pop shlb sahf arpl jl daa lods inc fisubl sub (bad) insl stc adc loopne jnp sub lret inc (bad) adc jge loopne push loopne jnp sub lret dec (bad) dec stc jl hlt test jnp sub or mov popf jnp sub or out test out out sbb dec (bad) pop stc sub cltd jnp sub cmp into test sub lret das (bad) dec stc je rolb sub lret dec (bad) jno cmp repnz (bad) jnp sub adc rolb sub sub call jnp sub lret and mov cltd jnp sub lret dec (bad) jb mov jecxz into sub lret dec (bad) pop stc or mov lret push (bad) push stc xor loopne jnp sub sbb call jnp sub stc jl hlt test jnp sub lret ss adc test (bad) jnp sub lret jb xlat test mov lret dec (bad) arpl xor xchg jnp sub lret xor dec stc mov xchg jnp sub lret or pop stc add mov aad xor dec (bad) outsb stc je nop test cmpl (bad) daa js ret cmpsl lock fs jl daa addb and gs jl daa lea lret and inc js jl daa scas inc aad frstor push daa rolb and outsb js jl daa mov and inc js jl daa mov and pop js jl daa stos inc xlat cmpsl repnz bound jl daa int3 inc nop cmpsl call sahf insl js jl daa test and push lods jl daa mov in and popa js jl daa int xchg cmpsl cmc and adc jl daa pushf inc loopne shll js jl daa lret inc leave cmpsl (bad) and jg lods jl daa mov lock loop lods rcrl sahf inc js jl daa stos inc jecxz lds pop js jl daa xchg inc mov sarl jl daa roll and popa js jl daa test and sub lret dec stc or loopne jnp sub lret dec (bad) je adc (bad) jnp sub adc ja mov mov lret or iret test jnp sub lret jb lahf test loop scas sub stc xor mov lret add mov test sub stc jbe incl sub add mov (bad) jnp sub lret add data16 mov test std sub lret dec (bad) imul push loopne jnp sub lret cmp mov movsl jnp sub lret or leave test mov lret dec (bad) dec stc xor loopne jnp sub lret sub enter mov lret es adc jbe in pop loopne jnp sub lret jl jno sbb loopne jnp sub lret aas (bad) jg or mov lret sbb cmpsl add sahf sbb daa xchg inc ret cmpsl loop mov dec sahf dec js jl daa lods inc (bad) dec sahf push js jl daa iret inc (bad) xor jl daa rolb and add jl daa mov lret and jae movsl jl daa int fisubl or int3 daa mov and jl test addl and inc js jl daa mov (bad) xor test cmpsl enter sbb mov xchg inc fisubl and (bad) daa enter mull data16 jl daa scas inc xchg cmpsl out and pop js jl daa addl dec sahf adc jl daa mov lret and sbb jl daa leave inc shlb sub inc js jl daa scas inc (bad) cmpsl int3 and adc jl daa sahf inc out iret and adc std andl mov mov clc sub dec (bad) dec stc xor ret test mov (bad) sub lret cmp loope dec loopne jnp sub lret sub jg jo loop jae mov lret sub incb sub jb hlt test jnp sub lret or in test jnp sub lret dec (bad) dec stc xor jecxz pop loopne jnp sub pop (bad) push stc adc rolb sub (bad) pop stc jb in test mov lret adc rolb sub lret cmp incl sub xor in pop loopne jnp sub lret add mov cwtl jnp sub lret adc mov jmp lret sbb movb dec lret sbb jecxz push mov in sub lret or ret loopne jnp sub lret adc push stc mov rolb data16 jl daa lret inc iret cmpsl lret rcrl sahf inc js jl daa mov and insl js jl daa scas inc in cmpsl mulb jnp mov out mov and bound jl daa lahf inc (bad) cmpsl shll inc js jl daa mov and jno lea stos inc xchg cmpsl mov aam or jl daa mov (bad) and inc js jl daa lea fisub dec js jl daa lods inc lcall sahf inc js jl daa popf inc cmc cmpsl fisub dec js jl daa mov into and data16 jl daa scas inc iret cmpsl mov mov or les xchg inc xchg cmpsl icebp and pop js jl daa lret cmpsl shlb js jl daa enter jmp mov jnp inc js jl daa roll and insl js jl daa into inc lock test pop lret xor fldl sub lret xor aad imul jnp sub xor mov cmpsb jnp sub lret push (bad) adc push mov xchg sub lret sub enter out aam pop lret xor les sub lret and mov sahf jnp sub lret push (bad) adc je icebp test jnp sub ss insb stc jbe fiadd sub sub les sub lret jb les sub stc jo jmp jnp sub lret inc (bad) inc stc add out int3 sub lret dec (bad) or aaa mov mov lret cs pusha stc xor xchg sub sub jecxz push loopne pop (bad) sub ss adc add test sub lret xor roll test in (bad) daa mov in cmpsl (bad) and js popf jl daa stos inc xchg cmpsl scas and arpl jl daa mov jecxz cwtl rcrl jl daa xchg inc loopne mov (bad) dec sahf dec js jl daa rolb icebp and inc js jl daa scas inc xchg cmpsl int xlat shll sahf dec js jl daa iret inc out cmpsl mov (bad) (bad) xor loope mov and jle test mov and fs jl daa lcall rcll sahf jp mov mov and pop js jl daa rolb and jl cli jl daa mov ret cmpsl mov stos rcrl sahf inc js jl daa popf inc in lret rcrl sahf adc jl daa mov xchg cmpsl repz data16 jl daa mov and pop js gs xchg inc les dec sahf push js jl daa mov xchg cmpsl fisub sub lret dec (bad) fs jge out je mov lret xor fldl sub lret cmp mov mov lret pop (bad) inc stc and cmpl (bad) dec stc xor jmp lret or mov xchg jnp sub lret dec (bad) pop stc jge ret test jnp sub lret add mov mov lret adc xchg test cwtl jnp sub lret sbb in test lcall (bad) insb stc adc loopne jnp sub lret ss adc push mov mov lret add mov out scas sub lret sbb call jnp sub lret inc (bad) adc pop mov xchg jnp sub inc (bad) jg adc mov sahf xor lret adc mov cmpl (bad) imul mov rcll inc js jl daa xchg inc cli cmpsl mov rcl push sahf jnp (bad) jl daa stos inc shlb or shlb inc xchg cmpsl int movsl roll fs jl daa mov in (bad) and adc jl daa cwtl inc shll sahf push js jl daa addl sub mov cmpsl cld and dec js jl daa into inc xchg cmpsl mov xchg sbb jecxz xchg inc xlat cmpsl ret rcll js jl daa mov and push js jl daa (bad) inc mull add leave daa xchg inc jmp scas and dec js jl daa xchg inc in cmpsl mull pop js jl daa into inc int leave and jle test fwait inc loopne mov movsb rcrl dec js jl daa lea mov loopne inc sahf arpl jl daa mov and jle std jl daa mov and dec js jl cmpsb clc sub fwait jnp sub sub mov lahf jnp sub lret push (bad) pop stc jo int push loopne jnp sub lret xor fldl sub lret adc hlt test cmpsb jnp sub lret dec (bad) pop stc sub test out sbb cmp rolb or cmp loope dec loopne jnp sub stc and mov in sbb sub incl sub or loop push loopne jnp sub lret ss gs and mov shrl dec lret dec (bad) pop stc sub mov sub lret sub movb push lret ds outsb stc sub cltd jnp sub lret adc xchg test mov shrb pop lret cmp xchg test mov sub lret inc (bad) jae jne call jnp sub lret cmp iret test in sahf test (bad) jl daa mov lds push js jl daa mov out and jl lods jl daa scas inc xchg cmpsl cld and push js jl daa mov and pusha js jl daa rolb ljmp js jl daa lods inc fwait cmpsl repnz fs jl daa xchg inc call shll sahf dec js jl daa iret inc fwait cmpsl mov mov js jl daa xchg inc fisubl adc jl daa int icebp cmpsl ret rcrl jl daa iret inc lds xor push mov inc lea inc sahf pop js jl daa lcall rorl jl daa mov and sbb jl daa pushf inc icebp cmpsl int3 and pop js jl daa popl fisub pop js arpl daa test leave cmpsl fsubl bound jl daa xchg inc sti cmpsl mulb inc js std orl mov mov lret add mov mov lret dec (bad) push test movsb jnp sub ss inc stc adc xchg jnp sub stc or test lret sbb sahf test mov les dec lret adc lret test sub lret or push stc xor in fldt adc sbb mov test sti sub lret cs jg push mov xchg jnp sub dec (bad) adc and sahf jnp sub lret sub int inc loopne jnp sub sbb int push loopne jnp sub lret dec (bad) (bad) stc jl call jnp sub lret push (bad) outsb stc ja loopne dec loopne jnp sub lret cmp mov xchg jnp sub lret push (bad) daa loopne mov xchg jnp sub and outsb stc aaa mov (bad) jnp test cmpl inc mull cmp cmc daa lcall rcll push js jl daa xchg inc xchg cmpsl mov adc mov (bad) xchg inc xchg cmpsl xlat and data16 jl daa mov xchg cmpsl jmp sahf jl mov inc xchg cmpsl shlb sbb jl daa mov and push js jl daa mov and pop js jl daa lea scas and outsl js jl daa addb and jno popf jl daa rolb and dec js jl daa iret inc sti cmpsl mov mov js jl daa into inc mulb adc jl daa xchg inc jecxz in aad and enter leave cmpsl out (bad) sarl sahf jo mov lahf inc shll dec sahf jl lret pop mov mov jecxz adc mov inc leave cmpsl shll inc js jl daa scas inc clc cmpsl test sbb dec (bad) inc stc xor call lret cmp ljmp sub lret sbb xchg test mov repz dec (bad) dec stc sub loopne jnp sub lret add inc stc add cltd jnp sub lret sub mov sub (bad) push stc jae lret test mov lret dec (bad) imul dec loopne jnp sub stc cmp lahf test mov lret sbb call jnp sub lret xor hlt test mov sub stc xor aad push loopne jnp sub lret or jmp jnp sub lret sub (bad) test loopne jnp sub sub fldl sub lret xor mov shll xor sbb les sub dec (bad) dec stc or sar lahf adc jl daa mov nop cmpsl out test or enter clc cmpsl std and inc js jl daa mov and jge cmpl inc xchg cmpsl stos and popa js jl daa scas inc iret cmpsl repnz gs jl daa cwtl inc mull cmp mov sahf inc ljmp sahf dec js jl daa xchg inc xlat cmpsl lret shll sahf pusha js jl daa mov and pop js jl daa mov (bad) dec sahf inc js jl daa rolb shlb jl (bad) jl daa xchg inc (bad) cmpsl mov movsb rorl data16 jl daa mov and dec js jl daa mov and pop js jl daa lods inc lea dec sahf pop js jl daa nop inc xlat cmpsl enter or mov cmpsl in and push js jl daa mov icebp and outsb js jl daa stc lds mov lret dec (bad) inc stc pop mov mov mov or stc das mov mov lret cmp les sub lret jb nop test loopne jnp sub lret xor in dec loopne jnp sub lret or jno push mov cmpl pop lret xor mov popf jnp sub lret and push stc push mov popf jnp sub lret push (bad) jne or xchg sub lret sbb mov xchg jnp sub stc push mov loop mov xor adc loope sbb fwait jnp sub lret pop (bad) adc push mov lcall (bad) inc stc adc mov lock lret adc dec stc sub loopne jnp sub stc or xchg sub or int push loopne jnp sub mov loope mov mov js jl daa mov and jge cld jl daa mov and inc js jl daa scas inc cli cmpsl shll js jl daa mov out and inc js jl daa lods inc loope jecxz mov adc (bad) daa stos inc lds sub jl daa lret inc les ss jo std jl daa popf inc mov or inc js jl daa iret inc (bad) cmpsl repnz jp xchg jl daa lret cmpsl mov mov js jl daa mov and jp mov inc fwait cmpsl ret and dec js jl daa lahf inc (bad) cmpsl repnz dec js jl daa mov and dec js jl daa popl shlb push js jl daa stc mulb cmpsl sarl sahf jo cli jl daa test (bad) cmpsl mov rcl adc mov mov movsb loope jnp sub lret sbb enter xchg jnp sub lret es jg sbb xchg test (bad) jnp sub lret aas (bad) inc stc and loopne jnp sub lret add mov xchg jnp sub cmp ret loopne jnp sub add mov mov sub cs push stc and loopne jnp sub stc and loopne jnp sub xor ret test test lret cs push push mov cmpl (bad) push stc sub loopne jnp sub sub lret test loopne (bad) sub stc imul jnp sub adc aad adc (bad) jnp sub sub les sub lret dec (bad) gs add rcrl sub adc adc add loopne jnp sub lret xor mov (bad) jnp sub jge daa addl and sbb jl daa roll and push js jl daa mov and jg sahf jl daa into inc xchg cmpsl jecxz iret rcll jl daa mov in repnz jle (bad) jl daa mov xlat cmpsl mulb bound jl daa sahf inc (bad) xor jl daa mov mov fcom cmp dec js jl daa addl and sbb daa test in cmpsl call sahf inc js jl daa mov mov lret rcll jl daa mov aam fsubl push js jl daa lahf inc repnz mov sahf dec js jl daa xchg inc in cmpsl out and pop js jl daa xchg inc mulb or jl daa cwtl inc loope scas and inc js jl add inc loopne hlt and push js jl daa pushf inc loopne mov sahf imul shll mov lret movsb loope jnp sub lret and push stc ja incb sub dec (bad) push stc and lcall (bad) outsb stc and mov xlat sub cs inc stc or xchg jnp sub lret ss dec stc imul jnp sub stc or test imulb sub sub movb inc lret or ljmp sub or push stc mov mov lret sub lret add (bad) stc and mov repnz lret add mov mov lret adc pop stc xor mov lret adc les sub xor mov xchg jnp sub lret push (bad) push mov mov lret sub sahf test shll sub cmp aad jb in shrl inc lret or cmpsl add sahf jns mov inc iret cmpsl out mov js jl daa mov hlt cmpsl shlb arpl jl daa into inc int3 cmpsl lds pop js jl daa addl push sahf dec js jl daa stos inc in cmpsl loopne lods sarl sahf outsl js jl daa mov xchg cmpsl mov sahf inc js jl daa mov and jno mov inc jecxz shlb jge cmpb inc (bad) cmpsl in xchg rcll pop js jl daa mov jmp rcll sahf pop js jl daa nop inc in cmpsl ret shll sahf adc jl daa test and sbb jl daa mov and gs jl daa stos inc xchg cmpsl icebp and inc js jl daa enter ret and sbb jl daa mov and inc js jl daa iret inc repnz shll js stos jl daa xchg inc (bad) cmpsl shlb sub lret jae sub mov lret adc xchg test loope lods sub lret sbb out test mov xlat sub lret dec (bad) pusha stc jno sahf test jnp sub lret xor nop test jnp sub lret push (bad) adc add jecxz (bad) sbb stc adc loopne jnp sub lret sbb int popa loopne jnp sub lret xor mov mov cmc sub stc add xchg jnp sub stc and mov lret push (bad) adc xor loopne jnp sub lret or ljmp sub adc xlat test jmp lret or fiadd sub lret inc (bad) dec stc daa mov mov lret jl push stc das mov mov (bad) sub lret es push stc mov xchg jnp sub jge daa stos inc nop cmpsl loop movsb rcll sahf insb js jl daa mov shlb sahf dec js jl daa xchg inc lret cmpsl cmc and inc js jl daa mov mov cmpsb roll sahf dec js jl daa sahf inc mov sbb sbb cmpsl jl daa pushf inc xlat cmpsl enter sbb jl daa mov shll sahf pop js jl daa mov mov aad and xlat daa mov and gs jl daa mov aam iret rorl adc jl daa mov and dec js jl daa mov and dec js jl daa xchg inc xchg cmpsl into and push js jl daa mov out mov js jl daa fwait inc lock (bad) and jno movsb jl daa leave inc xchg cmpsl cld and pop js jl cmp inc shll sahf inc js jl daa popl int3 and sub xchg inc (bad) push or pushf jnp sub lret cmp mov sub lret adc fs adc cmpb or sbb aad inc loopne jnp sub lret adc leave test loopne jnp sub lret cmp iret test xchg jnp sub inc (bad) jae aaa mov pushf jnp sub lret xor iret test test lret pop (bad) push stc cpuid int3 test mov int3 sub lret aaa (bad) dec stc and lcall (bad) adc or mov lret cmp mov xchg jnp sub lret cmp testb cmp or jmp jge movsl jnp sub stc sub jecxz repnz lret and fs cmp roll sub lret aas (bad) jne xor out (bad) sbb cs jge jno rolb sub lret cmp std test mov lret xor int3 test mov lret dec (bad) jle adc cmpb cmp sub lcall sub (bad) gs cpuid jecxz dec loopne jnp sub push (bad) daa js int stos and dec js jl daa mov and pop js jl daa mov xchg cmpsl leave and jno scas jl daa mov and jno scas jl daa xchg inc leave cmpsl mov mov adc in xchg inc out cmpsl shlb dec js jl daa mov into cmpsl shlb js jl daa mov xchg cmpsl hlt and outsl js jl daa mov lds push js jl daa lret inc fwait cmpsl shlb jge mov inc mulb sub mov cmpsl stos and jp mov inc lcall sahf jp sahf jl daa xchg inc shll dec sahf imul aam mov and pop js jl daa xchg inc lds adc mov addl push sahf bound jl daa mov (bad) and gs jl daa lea lret and sub (bad) push adc in sti sub adc rolb sbb adc into test mov cmpsl sub lret and push stc sub lcall (bad) pop stc xor cmpb cmp push (bad) push stc adc mov out or sub dec stc sbb loopne jnp sub lret or lds sub lret add mov movsl jnp sub lret dec (bad) outsl stc push mov test sub lret das (bad) push stc and mov sub lret push (bad) jle and cmpsl jnp sub lret sub mov mov lods sub lret xor xchg test mov test add add mov cli jnp sub lret or jecxz jo jecxz sahf or lret sbb loop jg in lock stc xor jecxz ljmp mov aam test sbb call cmpsl in mov js jl daa mov and push js jl daa sahf inc loope int3 and pop js jl daa mov ret rorl sahf gs jl daa stos inc xchg cmpsl std and push js jl daa lods inc xchg cmpsl in and jno xchg jl daa mov and inc js jl daa mov int3 cmpsl aad cltd rorl push js jl daa mov shll sub lock xchg inc xchg cmpsl fsubl bound jl daa lods inc fsubs dec sahf outsb js jl daa mov cmc cmpsl frstor inc js jl daa addl cmp jl daa lea std and inc js jl daa mov and jae mov gs call sahf pop js jl daa mov in cmpsl lock jl mov shlb xchg inc mov lahf jnp sub lret sub mov mov lret sub push stc ja int3 test jnp sub lret cmp leave test mov lret cmp fldl sub lret push (bad) push stc pop mov mov enter dec (bad) pop stc xor fild sub lret adc jecxz sbb sub (bad) inc stc mov mov lret es je or loopne jnp sub lret adc xchg test out cmc sub lret xor leave test stos jnp sub lret xor leave test cwtl jnp sub lret cmp sahf test mov sub pop (bad) dec stc aaa mov mov sub lret xor ret loopne jnp sub lret or mov loopne fildll dec lret sub xchg test loopne jnp sub (bad) pusha stc jl fild sub jge daa popf inc lock (bad) and pop js jl daa mov and pusha js jl daa leave inc (bad) cmpsl cld and jl (bad) jl daa leave inc xchg cmpsl repnz imul cli daa lea (bad) and push js jl daa into inc (bad) cmpsl std and inc js jl daa xchg inc call rorl sbb bnd daa addb and dec js jl daa int jmp shrl sahf push cmpl inc nop cmpsl lds fs jl daa test sti cmpsl shll js jl daa xchg inc lea das sahf sbb jl daa xchg inc lret and dec js jl daa mov and dec js jl daa mov and pop js jl daa mov and push js jl cmp inc loopne int mov push sahf pop js jl daa xchg inc jecxz mov stos rorl sahf sub lret insl stc jae rolb dec lret dec (bad) inc stc mov test int3 sub lret sub movb dec lret cmp aad insb loopne jnp sub sbb jecxz adc (bad) jnp sub lret push (bad) pop stc cpuid call jnp sub lret push (bad) push stc outsl mov lahf jnp sub dec (bad) ja pop mov out aam adc stc add mov cli sub lret sub ja add loopne jnp sub lret sbb mov xchg jnp sub lret and mov sahf jnp sub lret add imul adc mov fldt dec lret push (bad) jle or popf jnp sub sub dec stc adc loopne jnp sub stc add movsb jnp sub jl inc stc jb roll add aas (bad) push stc cmp loop adc sar lahf pop js jl daa mov and push js jl daa scas inc shll push sahf insb js jl daa lcall (bad) ss imul cmc daa mov repnz lds pop js jl daa lahf inc mov sub dec js jl daa into inc shlb sahf inc js jl daa mov clc cmpsl std and sbb jl daa lcall rcrl jl daa mov in cmpsl fsubl outsb js jl daa lret inc loopne shll pop js jl daa roll and arpl jl daa mov out in and inc js jl daa mov int nop (bad) xor mov cmpsl mov test sbb in rolb mov mov cmp jl daa lahf inc iret cmpsl out and sub jl daa lods inc out cmpsl xlat and pop js jl daa xchg inc lds cmp (bad) insl stc jb repnz mov lret push (bad) push stc jae iret test mov sub lret xor fild sub lret xor jae xor mov sub sub loop push loopne jnp sub stc jno hlt test in in sub dec (bad) pop stc xor out repnz or dec stc pop mov mov lret push (bad) arpl outsl mov cwtl jnp sub or lahf test jnp sub sub push or cwtl jnp sub jb in test jmp lret dec (bad) push stc and sahf jnp sub lret dec (bad) push stc add xchg jnp sub lret push (bad) jo adc loopne jnp sub lret es imul mov jmp lret jl jb daa mov jecxz lret sub lret cs jbe and mov sub adc and dec sahf adc jl daa enter cmc and inc js jl daa rolb mov sahf pop js jl daa mov shll jp lods jl daa sahf inc shlb dec sahf bound jl daa mov and jl cmpsl jl daa (bad) inc cli cmpsl shll push in mull mov xchg cmpsl std and pop js jl daa mov lret and dec js jl daa addl inc sahf outsl js jl daa lret cmpsl out test pop sahf js mov inc sti cmpsl jmp (bad) add mulb lret cmpsl in and inc js jl daa popf inc aad (bad) and pop js jl daa mov jecxz xchg (bad) aaa sahf addr16 jl daa popf inc shll sahf dec js jl daa lods inc (bad) cmpsl test xchg roll pusha js jl daa sahf inc in jmp mov inc sahf push js jl daa test mov loop shrb adc or jle outsl mov xchg jnp sub lret dec (bad) adc or loope jmp (bad) push stc xor xchg test jnp sub lret ds inc stc push mov mov lret or push stc adc fild sub lret inc (bad) dec stc cpuid lahf test lcall (bad) pop stc add mov sub aas (bad) inc stc sub loopne jnp sub lret dec (bad) data16 push mov stos jnp sub lret dec (bad) dec stc and mov lret sbb ret test mov sub lret pop (bad) adc and loopne jnp sub lret dec (bad) inc stc add loopne jnp sub sub aad inc loopne jnp sub lret xor pusha stc adc cwtl jnp sub lret dec (bad) push mov xchg jnp sub lret jb testl (bad) adc mov sar lahf sbb jl daa scas inc ret cmpsl mulb insl js jl daa xchg inc lock jecxz test sub (bad) daa cwtl inc lret cmpsl lds pop js jl daa xchg inc into cmpsl out test or fsubs mov aad mov sahf insl js jl daa int xchg cmpsl lret shrl sahf addr16 jl daa addb and addr16 jl daa lea jmp sahf jae lahf jl daa lahf inc shll sahf pop js jl daa mov (bad) and dec js jl daa test ret cmpsl int3 and inc js jl daa xchg inc mulb ds push js jl daa int3 inc cmc cmpsl ljmp js jl daa mov mov cmpsl shll sahf fs jl daa mov (bad) and dec js jl daa addl and sub jl daa mov in int mov add repnz lret inc xchg cmpsl ljmp aaa lret push (bad) pop stc xor out dec loopne jnp sub lret push (bad) dec stc jbe jmp adc out shrl xor inc (bad) jae adc mov cmpsl sub stc or xchg jnp sub lret das (bad) jge je iret test mov lret lret cmp mov test sub lret push (bad) push stc jne rolb sub lret cmp out test mov lret xor out test mov sub lret cs jb aaa mov test cmpsb sub stc xor mov lret or xlat test jnp sub or testl (bad) dec stc and mov lret add mov jecxz cmc sub lret cmp rolb sbb sub sahf test jnp sub lret adc inc stc jbe cmpsl add sahf inc js jl daa mov and inc js jl daa lea jmp cmpsb shrl sahf inc js jl daa stos inc cmc cmpsl mov sahf outsb js jl daa mov lret and dec js jl daa lahf inc lret cmpsl repnz js fwait jl daa test out cmpsl lock bound jl daa mov in mov js jl daa xchg inc (bad) ss inc js jl daa mov mov mov sbb (bad) daa pushf inc out mov (bad) rcrl sahf push daa scas inc aam lds push js jl daa mov call sahf inc js jl daa lret inc in cmpsl out and push stos jl daa pushf inc out lret and jns mov inc in jmp sahf inc js jl daa lahf inc mov sbb loope lret cmpsl hlt and outsb js jl daa stc lds mov lret and arpl pop mov in fisubrl sub sub fldl sub lret dec (bad) inc stc adc xchg sub lret pop (bad) jo sub lahf test mov lret or mov in in sub lret dec (bad) push stc sub mov call (bad) push stc jb ret loopne jnp sub lret cmp rolb adc stc xor mov (bad) sub lret xor adc mov mov lret or dec stc adc testb inc lret sbb roll or add mov mov lret das (bad) ja or xchg test jnp sub lret cmp call jnp sub push (bad) jg add test test (bad) push stc mov xchg jnp sub lret jl addl and bound jl daa xchg inc les or shlb lods inc clc cmpsl mov adc sahf dec js jl daa mov xlat cmpsl enter inc sahf jo mov mov and sbb jl daa lea out mov adc jl daa iret inc shll pop sahf adc jl daa mov shlb ds pop js jl daa mov and sbb daa mov and adc jl daa mov cmc and inc js jl daa mov lds and lods daa mov lock mov cmpsl rorl push js jl daa roll and inc js jl daa mov and sbb jl daa addb and dec js jl daa stc addr16 cmpsl mov sahf insb js jl daa int3 inc fsubs dec sahf inc js jl daa lods inc xchg cmpsl test aas lret sub jecxz dec loopne jnp sub lret cmp fldl sub lret or xchg test mov fisubrl cmp and mov jecxz std sub or mov sub lret adc mov in imull and jb xchg test mov lret es adc imul jnp sub lret pop (bad) outsl stc add cwtl jnp sub lret sub mov mov sub lret dec (bad) push stc cmp loopne jnp sub lret or mov mov lret dec (bad) jo or loopne jnp sub lret push (bad) adc or loopne jnp sub lret ds push stc adc loopne jnp sub lret cmp incl sub lret push (bad) gs mov xchg sub lret sub je aaa mov mov scas sub lret cs (bad) stc xor out jmp ss pop (bad) dec stc sub xchg jnp sub stc and fwait jnp sub loop mov mov lret adc xchg test test enter mov mov jecxz stos sub cmp jecxz adc loope fildll push lret dec (bad) adc jl in or jmp lret dec (bad) or jge lahf test loopne jnp sub lret inc (bad) pop stc add loopne jnp sub hlt lea lea lret mov rcrb jl das dec ds icebp popf adc pop jae push daa mov push sub xorl test mov leave popa xchg xchg movsl inc shlb cmp mov mov sti pop mov rcrb sub mov cli inc mov shll xor jl aas jmp jg test loop data16 sub js sub pop cmpsl movsl xchg sub ja and dec mov std daa out int xchg sub jb xor xchg out fnstenv sub popa nop cmpsb or cmpsb xchg movsl insl fnstcw sub jl cmp inc (bad) cmpsb cltd cmp aam sahf sub outsb add sbb loopne jns daa push fs das call daa loope jne sub cld add xchg movsl fs arpl lcall das loopne jae and outsb add andl xchg jmp mov (bad) jae and jge xor cltd cmp sarl xor into jl es cmpsb cmpsl test fnstcw sub jle sub inc mov (bad) jnp cmp sub and inc mov sarl daa jbe jp notl data16 jns cld inc das std inc mov shll xor (bad) jns daa clc dec lods mov jne or pusha lcall cmp daa push mov (bad) stos xchg inc out fbld sub jb ss push mov xchg dec cld ficompl and adc mov xchg and outsb out in mov cwtl and shlb dec jno jns cs pop cmpsl scas mov rcl sti and jns das jmp mov ret push xchg or fs cmp pop scas xchg (bad) xor adc test mov aad sti and adc test loope rcl xchg jo inc xchg outsl mull loope call xor adc stos mov push xchg adc je and pop stos scas xchg sbb dec pusha ret je pop jmp mov push mov outsb out jmp mov push mov jne cmpsl jns test mov push incl mov mov push incl sahf and inc mov add test pop lahf xor lds es mov addb jnp sbb xchg xchg sub jp sbb inc stos movsb (bad) aaa mov jge jns int fisub push mulb mov int mulb push shlb mov int loop call mov jg cmp pop js xor mov out sti sub jle js xor xchg sbb sub jle cs inc mov push sti lcall call add sarl sub lret ss mov sarb sub jb pop stc pop mov icebp jp cmp mov jle add xor mov xor push or jns sub lds mov nop cld int3 addr16 or jle cmpsb call and fildll sub and inc mov aad subl jle pop sti push and mov out jp test es xor jp cmp pop js es stos xchg mov and mov sar sub jno pop stc dec mov icebp jnp sub jp pop stc dec mov icebp jnp sub jnp pop clc pop cmpsl scas mov sub ret jo and push and cli adc leave je das cmc mov sar cmp outsb jne and xchg movsb inc fstps sub insl add mov rcl nop cmp push js es dec cmpsl cmpsl xchg out int sahf sub jb and inc mov fbstp xor and mov sarl daa jbe cld dec and inc lods mov jns cmp push jp es mov ret cmp lcall and sub cld arpl jmp cmpsl cmpsl test sub das icebp inc mov aad lahf and xorb push out jns xor es cmpsl cmpsl test in jge sub jns and inc movsb mov jp sub (bad) jl es push scas xchg movsl adc jns outsb add std mov sarb test int xorl and push lret stc add ljmp call jp jnp and pop cmpsl scas mov rcl subl jp daa in and cli scas sub lret outsb add cld mov sarl test int3 pop subl (bad) and and jg sub inc stos mov cli sbb pop lret cmpsb jo (bad) movsl xchg movsl dec int3 jle sub jmp nop cmpsl push inc (bad) cmpsb cltd and aam cwtl cmp jb (bad) es shll cli subl lret popa nop cmpsb and cmpsl xchg movsb cmp pop sahf cmp jns,pn daa jmp jg test repnz mov jge cmpsb and test cmp (bad) insl add cld mov icebp jns cmp (bad) outsb add lock sar sub and inc mov subl shrb mov mov add (bad) je jge cmp push mov test mov jp outsb add clc pop mov shlb and jge cmp inc mov add cwtl sub (bad) lahf sub inc cmpsb mov cmp fildll or pop test sti inc mov xchg and icebp jp cmp pop (bad) cmp inc movsb xchg lcall clc push lret and cmpl mov jmp cmpsb lods test mov sbb jbe xor xchg push in jp imul mov shrb add jge and inc mov sarl sub jl jb pop fcmovnbe lock (bad) ljmp jmp or adc or dec nop (bad) push in pop adc sub aad inc xchg std pop repz sbb (bad) icebp loope xchg mov in lods pop xlat je xchg push mov movsl sbb push mov xchg mov (bad) dec xor and lcall sbb cli inc mov pushf je sahf andl or dec or jl daa stos inc scas hlt loope lods mov ljmp loope mov sarb sub imulb aaa (bad) loop push (bad) mov ret jl daa stc inc mov test jle stos or dec xchg add (bad) mov mov dec mov sarl and jp push mov ror test sub jge xor (bad) dec xchg jmp mov enter lods and cmc dec decl sti sbb inc aam mov or out stos add test out into jbe xchg mov test lret jl es inc xchg mov sub (bad) daa std inc loop test loopne jnp sub and les sarl sub jl daa stc push mov sarl sub js daa stc inc cmpsb out and sub jl daa stc inc mov sarl sub (bad) daa std inc cmpsb cmpsl test call js jl sub add inc das jg jne das cli dec movsl mov cmpsb xchg cmp out mov mov (bad) je das icebp inc stos scas (bad) cmp fnstenv and jns and dec stos mov imul mov in lods scas mov repnz jne sub lret cmpsb incb mov mov sub std cmpb dec mov or xchg cmp cmp shr les mov fdivr aam fwait jns,pn cld or decb daa adc adc jbe cld pop cmp push and sub aam push mov frndint and in stos mov push mov (bad) movsb mov sti adc cmc dec mov aam fwait xor frndint daa xor or fwait and jle xor mov out imul subb inc movsl cmpsb cltd and (bad) jns sub into jnp sub dec cmpsl mov jne and outsb repz pop mov aam lahf cmp inc pop test icebp pop cmpsl mov pop loop addr16 daa jbe jle das (bad) dec mov int3 jle sub jb cmp pop movsl mov sti das das jg outsb add testl fistpll idivb jl daa stc inc mov sarl or jl daa stc inc mov sarl sub jl daa stc movsb jge test sub jl daa stc inc mov mov icebp pop cmp nop sub mov cmpsl adc pop mov sahf sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub fs daa stc jl cmpsl add loopne jnp sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jge daa stc sub cmpsl add loopne jnp sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc aam cmpsl test sub jl daa stc inc mov sarb sub jl daa stc inc mov in sahf sub lret das (bad) js adc (bad) jnp sub lret xor jmp jnp sub roll test sub jl es inc mov sarl sub js daa stc inc mov sarl sub jl daa stc add xchg sub lret cmp ret loopne jnp sub lret jl daa stc pusha mov test sub lret adc movb push lret jl daa stc inc mov sarl sub lret or leave test xchg jnp sub sbb roll js jge pop stc je xchg test sub lret dec (bad) daa stc pop mov xchg jnp sub stc sub sarl sub pop (bad) es inc mov mov lret adc movb js jl daa stc jb mov jnp sub sbb aam inc loopne jnp sub lret or leave test sub or int3 test sub jge popa stc sub loopne jnp sub lret jb leave test sub dec (bad) or je mov sub jge outsb stc sub mov lret adc lret loopne jnp sub or int3 test loopne jnp sub stc or mov and popf jnp sub lret sbb mov test in sub lret sbb cmpsl test mov lret push (bad) dec stc and icebp jnp sub pop (bad) adc test sub jge imul mov mov lret sbb mov mov lret jl daa stc inc mov fidivrl sub lret push (bad) dec stc and mov repnz lret adc mov mov lret sbb mov mov lret add inc stc inc mov (bad) jnp sub lret push (bad) dec stc and movsl jnp sub lret adc cmpsl test jnp sub lret push (bad) dec stc inc mov fnstcw sub lret push (bad) dec stc and movsl jnp sub stc sub loopne jnp sub dec (bad) or je mov sub jge data16 aaa mov mov lret add mov mov lret adc mov sub dec (bad) daa stc stos sbb mov mov jmp xchg jns xchg stos adc dec pop scas adc div ret repz in pop sbb sub lcall pop jne jno sbb inc mov movsl movswl testl push cmpsb adc int lock or fs (bad) ljmp sbb xchg jns xchg stos adc or sbb ror insb test pop hlt inc mov lret enter loopne scas pop dec in mov ret lods test out pop adc pop jecxz nop sub mov push nop repz mov mov ror dec xchg movsl movswl testl push cmpsb adc int lock or jp lods movsb add dec sbb jp lods movsb add adc inc mov mov adc dec pop scas cpuid pop xchg sub aam pop xchg mov mov imul mov test out sbb repnz ret xchg or pop mov aad push xchg mov ljmp mov lret enter cmpsl push repnz or dec les aam dec xchg mov jmp jmp lcall mov repnz sbb repz xchg dec or and aad push mov cmc jno pop fldenv stos push test mov (bad) sub lock xchg mov movsb inc (bad) sub testl js jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov sarl sub jl daa stc inc mov inc push dec inc add add add add or add jbe xor xor add add add add jle add add fmull add and jb outsb addr16 add add pop add mov add and add add add inc push dec inc add add pop add and outsl bound add add add push xchg mov add cli add add add add add dec add add add add add add add add add push add add add add add add add add add pop add add add add add add add add add push add add add add add add add add add add xor add add add add add add add add add xor add push add xor add add add add add add add add add add add add add push add xor add add add add add add add add add add add add add add add push add xor add add add add add add add add add add add add add add add add add add add add add cmp or jae and push add add add add add add add add add add add add push add and das add push add outsb add xchg add cltd add rolb ss or or inc push and or push push and push add xor push xor push rolb push add push or or addr16 and push add add add add add pop jecxz push add pop lds push add or or or add add or add add or or add or push add cmp push add pushf or or add add add add add add adc jecxz out sbb add add add add add add add add add add add add push add add add add push add push add add add add add add add add add add add or and add push add or and add add add add add add add add add add add add add add add add add add or add add add add or add add add add add add pop add adc add in add add pop add adc add fimull out insl add add adc add loope out insl add add adc repnz add add add add add add rolb add sbb add add add add add add add testb add add add add add add add add add add add add add add sbb mov adc testb add and or push push and add add add add add add add add add add add add add add add add add add add add add add add xchg and add add add add and add add add add adc roll jmp sub add add add add add clc sub add add add add add lock add add add add add add sub add add add add add add sub add add add add sub add add add jge add lock adc pop add das add add adc imul sbb add add xchg sbb add add add xor add add add add add add xchg add add xor add add add add add add add add add add add add add add add les lcall add add addl add mov add add add cmp add add add add add add add add xchg add add add add cmp adc roll adc add add adc scas add add add aas add add adc repnz add test add add adc in add add movsb inc add add adc in add lods inc add add adc or mov add test add add adc adc add xchg cli add add add inc add add xchg add push mov inc add add addl add pop inc add add addl add jl add add les lcall inc add add addl add and add add add pushf inc add add sbbl add add lods inc add add xchg add add add inc add add xchg or add add add add add xchg or add add add dec add add xchg sbb add add fmull add add add add add or add add add add dec add add adc in add add add add add adc sbb addb cld dec add add adc cmp add dec add add adc dec add add add adc pop add add add dec add add adc dec pop jecxz add mov add add add add add adc imul lods push add add adc pop add add add add adc xchg pop inc add add add sbbl add add pusha push add add xchg or or add add xchg cli add add mov add add call add add clc push add add adc adc add push add add adc sbb push push add add add add adc scas add add and add add add add add xor add add adc repnz pop add add xchg sbb add add and add add xchg sbb add add add add mov add add add add add add add and inc add pop add add push add cli add pop add add add add add add add add add add add add add add add add add add add add cltd add add push add add xor loope cli add add add add add add add add add add add add add add add add add add add add add and cmp cmp add inc add add add add add add add add add add add add add cli add add cli add add add test add add add add fiaddl lock add add hlt add adc pushf add daa push enter cli add mov add add add xchg push hlt add add add add add add push cmp jno fldl push add add push jnp roll and xchg add add pop movsl add add les add fiadd add cli add add add add add stc add add or cli add add add mov add or dec add add add sub cli add add add add cmp cli add inc add add add cli add add cli add add add pop add mov add add push add add add add add add pop add jno addl add add cli add add add add sahf inc add pop add add add add add add int3 add sldt addb add add add add adc and add je xchg add add add add add add add add add pusha add add xchg add add add add add add add add inc push jnp or add or add add repnz add jecxz gs movb add add add add add add add add xor and add or mov add jnp add add add adc add add add add push add add add add add add add add add add add add add add add add add add add add add add add dec add add add add add pop add add add add add add add add add or add add add or add add add add add or add add add or add add add or add add add add add or add add add or add add add or add add add or add add add or add add add or add add add or add add add add add or add add add or add add call add call add call add call add call add call add in or add add call add in or add add call add call add call add call add call add call add call add add add add add add add add add add add add add pop add or add add pop add add add daa add add add xor je xor inc add add pop add add add add add fldl js jecxz jp jmp add add add add add add add add add add add inc add add add pop add add pop add or dec add add or dec add add add add add add adc test adc sub add pop add add pop add add add add add add add sbb and sbb add pop add and mov add add and dec add lds and inc arpl popa insb imul inc arpl popa insb imul jb imul gs cs imul inc outsl jb jae push jns je insl add jae gs cs jb ja outsb add arpl sub sub gs jne arpl jb,pn jae jne arpl add gs je xor push jne je insl gs gs jo jb add jae gs cs jne je insl gs outsl insl jo insb gs gs imul imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add popa jb arpl outsl jb loope mov loope movsb add push arpl (bad) mov add arpl add insl bound dec outsb outsw add jae gs cs gs arpl outsb add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add outsb imul je insl cs push imul gs inc jo inc outsl insl popa imul inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul jo insb imul add popa bound imul jns gs loope lods add outsb jae insb add imul inc jae gs bound dec outsl popa add imul jns je insl cs arpl imul arpl loope movsl add (bad) mov loope test dec inc outsb jne gs bound push jns je insl cs outsl insb insb arpl outsb jae dec push gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add jb outsb add jb outsb addr16 jne insb fs push jns je insl cs gs add jo outsb add je imul je outsb addr16 popa jae add jae gs cs outsl outsb imul je outsl outsb add outsb arpl outsl outsb imul outsb je outsl insb add jae outsb fs popa jns jne add jb add outsl jae add (bad) mov je jb inc outsl js jae je push popa bound outsl jo loope mov (bad) lods add outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae push imul mov (bad) mov inc outsl outsb arpl add (bad) mov (bad) mov inc gs popa je add (bad) mov (bad) mov push gs popa je add (bad) mov (bad) test push popa insb jne push jns add insl jns gs push popa outsb outsl insl add imul outsl jae bound inc imul imul add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 push jns je insl cs outsl insl jo outsb outsb je outsl fs add jne jo jb dec outsb imul add imul push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add popa add imul add outsb je outsl insb inc outsl insb insb arpl outsb add add je bound arpl arpl add je dec arpl add je dec popa insl add je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add je push gs add fs outsb imul gs popa jns jne add je add mov pop inc insb imul add je inc outsl outsb je outsl insb jae push gs insb jbe inc jbe outsb je jb jae dec inc jbe fs arpl popa arpl jns push jns je insl cs arpl imul je jb jae dec inc insb outsl outsb gs bound dec popa jb push push gs bound arpl inc outsl insl jo jb bound xor inc imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl dec gs outsl jb push je gs insl add jae gs cs dec add insb popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul gs insl add insl jo gs imul add je dec je insl add je dec popa insl add outsb je imul jae je inc outsl arpl inc outsl arpl je insb add je dec insl popa add je push imul loope movsl add je js arpl imul insl bound loope movsb loope movsb add popa fs (bad) movsb loope mov ret mov inc gs jns add je inc outsb je jns outsl imul push outsw add jb inc insb outsl jae fs jbe outsb je jb jae inc outsl jb inc insb outsl jae fs jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae add outsb je popa outsb fs gs popa fs dec outsl popa add outsb add inc push push inc je jb bound add jae jne arpl add outsl push popa insb imul gs imul je jb dec outsb outsw add jae gs cs insb outsl bound imul add je outsl fs popa jae add js add je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je loope mov (bad) movsl add jbe imul gs dec outsl arpl imul pop inc jae gs bound jae je push popa bound fs loope mov (bad) mov pop inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs (bad) mov (bad) movsb add imul jb popa jns addr16 inc jbe fs arpl loope mov (bad) mov je jb jb ja popa bound je jb bound add imul jae bound je je add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs dec inc outsl outsb je imul je imul jo imul push gs imul add je inc gs jne je inc gs jne je cmp jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul inc xor xor cmp xor xor xor aaa cmp inc inc inc inc inc inc inc xor xor inc inc cmp xor inc cmp aaa aaa cmp inc xor inc inc xor inc inc ss xor inc cmp xor cmp add outsb jbe jb add jns add imul popa outsb imul jae jne arpl popa insl gs loope mov loope mov and xor and xor and xor inc jae gs bound outsl jo jb addr16 jb bound add jae insl bound imul imul outsl insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul jae insl bound imul outsl outsb inc je jb bound add imul jne add jo jb jae dec insb fs jae inc je jb bound add outsb je insl gs outsl insl jo je bound imul bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add add dec xor add add arpl cmp xor add add add add add add data16 add sub add add add xor xor aaa add add add add cmp arpl outsl add popa add add add jb outsl add add je imul add add outsl add jb arpl add add mov popa xchg dec mov sahf stc loope sbb jp push sbb mov mov pop jg aad cmp add add or add add add pop add sbb sbb and add pop or sbb sbb or add adc adc sbb add adc sbb add xor pop or or or sbb add add add or or or push add add push or add add add or pop pop or or sbb add adc adc adc add sbb or push adc sbb adc or inc adc or or sbb or add add adc add add or add adc add or or or adc push or add adc add or or or or adc add push add push or pop or or or adc add push add push add add add adc add push add add or or or or sbb and add imul push add imul or inc or or sbb push add push or add push add add add or sbb or or and sbb or add push add add or pop pop or or or push add sbb adc add add add or pop add sbb push sbb popa add adc pop add or add add jno or push push pop add or sbb or and add and add pop push or adc add popa adc add or push add add popa add or or adc or adc and add pop push and add adcb push and add sbbb pop add or sbb or and add orb xchg or add cmp cs sbb andb lods adc or xorb adc push sbb or sbb or or or add push add sub mov or push sbb sub and add add add or add lds mov cmp inc pop and add add add add or or push adc or sbb and add or adc add push add or add and add addb push add add or pop push or dec or sbb and adc add cmp add or or or or or adc add push add orb add push add orb or dec or or sbb add adc cmp pop or or or sbb or adc push or add add push adc sbb or add add adc adc and add adc and add subb sbb and add sbb push adc push sbb add pop add add add adc and or adc add and and add adc addb in add add and pop or or or or and or or adc add or push or push or or add add push add add push or or sbb or or adc add push add add add add add add add push push or push or or sbb sbb sbb add add and add orb push add orb or or sbb and adc adc or pop or or sbb and add or add push add add or or or or or and add sub adc add push add sub or push or xor or adc add adcb pop pop or or sbb sbb add push add add inc or add adc add or addl cmp add add add add add in and add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor add adc xor add xor add push add add xor add imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor add push adc push adc push pop or adc or add adc pop or or add add adc add push add add push pop and add adc push add add add pop add sbb sbb add push pop add adc jo jb addr16 and xor xor add or arpl popa insb imul add add add xor xor xor xor add add and arpl aaa bound cmp sub sub sub cmp data16 xor xor add add push jb jo outsl outsb inc js gs imul ja add add or add add add fs add add add add add add add add outsl jb js dec popa imul jb gs insb add add add and 