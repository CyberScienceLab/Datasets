stos (bad) cmp fwait fs xor lods xchg ror mov cmpsl rcr mov sub icebp or popa adc jmp aaa (bad) dec xlat cli push add sub enter push (bad) fldcw sbb pop push lret sub push adc add dec xchg lea adc mov sbb movsl fs mov in pop add imull cld pushf adc scas mov pop popf lret jbe push jb dec les pusha and mov pushf insb mov pop in nop aad xchg adc dec andl es pop xchg icebp sbb aas lds idivb imul sbb sahf lret jno daa jae jno add in stos mov outsb inc push sahf sbb jno out test bound movsl jns sahf std mov call bound inc pop adc je push sbb dec movsb les dec pusha mov add les pop push popa daa out movsl lds dec mov fistpll mov popa xchg aaa fsubl ret icebp jle in (bad) aad adc repnz nop out jl xor add add inc (bad) pushf mull inc mov lahf push mov mov fdivr add or clc aad aam clc sub sub pop inc mov jge mov lcall shll add pop outsl pop fwait das (bad) or add mov mov divl jb and jg fcmove mov insl mov je inc sahf inc outsl lret call int mov icebp ss movsl insl mov xchg jg mov inc out sbb cmp sarl inc inc sbb mov std push and enter call inc (bad) lods outsb lods pop add ret fiaddl mov scas (bad) ret xor shrl or rorl or roll sub pop xchg loope jo in js cld cs scas mov sbb push dec dec std jno das sub ljmp popf popa ss (bad) sbb adc mov lahf (bad) xor xor into insb decb ss test pusha sub in mov scas das rol push pop daa outsl test pop das and in mov xchg xchg push inc pushf rorl lcall stos adc add cmp or mov pushf mov lcall cmc add icebp add pop pop pusha jg outsb mov mov or and jmp shlb movb mov repz xchg xchg test push es add adc nop add inc jns mov pushf pusha lea jmp clc add pushl push movw lea jmp push fdivrl mov in jne dec das ja dec dec mov push sti aas mov ljmp sbb inc xlat mov fiaddl jbe mov adc stos sbb sub cmp add jmp pusha fwait add aaa inc pop fidivrl aad xor push mov push dec pop or fwait add stc add fisubl push in push aad adc out jns test push sarb in push aad jo inc push jmp add gs (bad) xor mov daa cltd jg push inc dec push push movsb test dec je cltd pop (bad) icebp dec pop xchg cmp jbe clc aaa cmpsl lret bound mov dec (bad) and mov mov stos dec lcall dec push xor sub jb cmp push cmp les cmp stc stc xor icebp push jl cmc mov loope jecxz sahf pop inc out sbb and aas fist sarl vmovntdq roll jg or iret das sahf imul cmp mov xchg push mov addl dec xor push cmpb or mov fs popf push pop pop cwtl mov loopne sahf lahf mov add pop xchg sub shl rcl movzbw lea sbb call add add and add test add adc add and add push or or or sub or push int3 or adc or xor or (bad) loopne add adc add and add or and or inc and add in or sub or dec and add test add adc add or push test add adc add mov pushf xchg jmp mov call mov push inc in xchg dec in test lret dec enter sub movsl (bad) xlat mov sahf push or pop push negl xor add movsb mov mov out mov dec fsubs mov adc xchg fdivrs xor add sub scas cmp cmp and mov rcll mov ja fist test hlt pop or arpl adc rcr adc fsubrs repz out push sub xchg adc cwtl call dec inc mov mov push pop cmp popa ss and mov mov add mov bswap pushf mov pushf pusha push pushl ret pop push bnd push inc in mov sub or hlt js or enter andb xor push test mov mov xor pop mov xchg jge cmp pop and arpl adcb fs lcall jge add mov lock (bad) xlat sbb inc in sub mov xchg stos cltd inc pop call push cwtl gs popf mov xor js pop lock and mov mov jo in lods jnp sarl dec adc insl mov fldl rorl inc add xchg inc fimul les mov cmc fimull mov addr16 lods fidivrl loope sub dec stos adc xchg xor (bad) mov jnp cmp int3 jmp push cmpsb in js xor mov lods jae sub mov or and push pop cmpsl push in es aad push rcll aad dec fsubs ret add mov sub movsl mov dec sarl or pop cmpsb lahf xor jbe sti jl inc sub xchg add aam out outsl lods ljmp (bad) test mov enter push cwtl fdivs jae cmpsb movsl xchg js in test jge cmp shrl mov test stc fldt mov loopne inc jae push mov jbe xor add repnz repz jg sbb lods (bad) jge aam xchg xor cmp addr16 xchg lock nop int pushf (bad) decl pusha pop mov out mov out rsm fs insl xor jne lcall into jns cmp or mov xor cmp sbb popf imul inc test addr16 loopne inc gs or mov adc adc xchg xchg stos std sub in push lret dec clc mov clc dec and push scas adc cltd fsubrs movsl inc inc ret loopne dec or lods and es or das inc ret imul jge inc and (bad) pop pop daa sti fwait icebp leave stos repz jecxz cmpsl lcall pop cmp lods push xor cli push cmc lcall lods clc push xchg mov bound push les push add out mov jg sti xchg fs lret mov sbb inc in lcall or jmp dec sbb test xchg cmp dec jge into shll arpl jae hlt (bad) out jle test push jp jne popa xor jmp aam popa hlt xor add xor jne repz ret inc push iret aaa jns pop and mov or push scas (bad) adc mov imul dec lret test pop xchg jb jl push stos sahf jo js adc cvttps2pi push mov add adc mov mov sbb fidiv push mov jmp fisubrl lcall push sbb jbe movsl push or cwtl adc sbb sarb out pop or push std std mov push mov repz out jns aad faddl and cli mov insl lods mov push mov pushf lea pushf lea call pusha lea jb bsf bsf movzbl pusha shr btr cmc movzbw imul sar add stc pop lea sub sub mov shl clc shrd mov btr shl mov setl dec ror pushl mov stc pushf cmp mov lea jb cwtl not mov push movb pushl call imul and rol lea sbb clc bsr mov shr dec bts push rcl pusha mov pusha bt bsr mov jmp bound sbb inc and js adc mov lret mov sub push and sub aam in mov and cmpsb aam sbb lock popaw aaa lahf mov repz add add mov xor sti xchg std cmp mov jg,pn inc jno or in cli fidivr xchg push repz scas mov and fsubs xchg icebp dec int (bad) pop xchg and and xor mov fmul mov mov add or xchg sub and leave jbe (bad) and fstl pop incl inc imul (bad) mov test fcomi pushf jo popf insl inc imul and mov jge mov jmp jo and std (bad) mov daa dec push rorl pop lcall push push lods icebp inc mov sbb xchg inc testb push mov lock loopne nop rorl mov fstl jl lret (bad) jbe adc loopne leave xchg pop rcrb and adc subl fistp inc jl cmp xlat movsl imul rorl dec inc je js mov dec call setnp bswap lea lea pushl call pushf lea jb and cmc mov sar add pushf mov movb call popf lahf cwtl sbb inc mov rcll pop pop push (bad) mov push (bad) push dec sbb jae pusha mov add and bound push push negb jbe (bad) or js add ss xlat lcall adc cld adc popf xchg cli dec and cmp arpl mov xor sub jmp pop pop sub (bad) or inc or jne xchg xchg jbe in icebp aad push mov outsl pop xchg pushf xchg dec and push aad jno leave sahf or push cmp aaa cli or adc ret mov ret xchg and mov mov mov inc xlat jns inc cmp and stc stc icebp ret mov xlat out push (bad) gs call pop lret sbb leave sahf add adc sub push xchg scas cmp (bad) jg mov (bad) ret add test xchg mov gs push in in xor sbb cmp das mov dec lcall inc movsb pop popa fcoml flds aad push adc xor aaa jl movsl inc or std test sahf dec add xor mov je addr16 enter pop pop push insl add je cli inc mov dec loope test or push aam rcr or int3 xchg or ficom mov inc loop jp inc mov ret daa mov cmp dec adc jno ja imul or aaa cmpsl int3 inc pusha pusha fsubrl shlb mov shrl fs (bad) je sbb shrb xor jb sti popa sbb mov cmp test push sbb push xchg pop int push pop or test jmp sti ljmp adc hlt push pop mov xor dec mov stos notl xchg test cmpsb and sub mov cs into or inc stc dec mov and pop (bad) adc mov js fisttpll sbb lock std std (bad) ja push and aas into les and pushf mov pop xchg ss popa dec cld sub loope dec dec push and aam push les loopne das adc test popa sahf sub inc mov add xchg push jbe je and int3 push enter fisttpll jae rorb and jmp add inc gs outsl fs gs popa outsb fs gs add (bad) or cmp or xchg push pop in mov mov rolb adc test dec sbb jb inc in (bad) jge sbb (bad) jp inc (bad) ja roll push inc cmp adc lahf jae dec sub and test ret test mov mov pop mov sarb lret inc dec fstpl outsl jno pop add fild or ja in xor xchg lret sbb add cli add (bad) lods std mov into (bad) repz or adc test add push xchg test ja and xchg adc (bad) sub nop and add push es pop xchg jl movzbl push mov movzbw pop lea movzbw mov not pop mov call mov pushf lea jmp call lea call sar mov clc stc shl jmp cmp pushl pusha movb pushl lea jbe lea sub mov bsr or add xadd cmc btc mov rcr add movsbw movl add mov test pushf pushf cmc cmp pusha mov mov call pushf lea push jmp mov push inc cmpsl pop push outsb sar push push clc jbe into pop or sub push sahf pushf cld gs sub cmp pop hlt enter cmc fadd dec stos popa mov jmp xchg xchg mov insl (bad) aas push mov lods out fidiv pop lret mov insl mov cli xor scas lds test ja jg loopne sbb repz mov pop or movsl dec add stos xchg mov mov xor xchg mov sbb and jo adc fdivrl leave add and ret jl dec rcl (bad) pop loopne,pt pop icebp jbe ror imul not pusha roll mov add or addl cmpb shlb out (bad) adc cwtl data16 jge (bad) and cmp into insl fcmovnbe aaa jle add jle push lret adc sub aas cmpsb in jne loop inc sbb bts mov and not cmp add movb setb push rep jmp inc (bad) fldl xchg inc pop xor or jmp out scas icebp icebp iret (bad) bound xor pop push cmp pop int3 bound or imul das lret dec stos imul lods jbe (bad) jecxz mov mov fisubrl lss lock (bad) push mov dec outsb mov xor pop mulb mov jle pop xchg dec inc push loope mov adc sub or bt cmp pusha mov test not mov mov mov lea je push pop pushf lea lea push mov lea jmp dec inc push dec inc dec xor cs insb add xchg inc addb sbb ja xlat ja pop sub pop movsl popf add imul dec sub xchg pop jne stc cmc inc mov lods test and dec xor jge nop movsb dec adc adc fisttpll scas stos fscale mov inc je fdivrs and addr16 fildll jmp xchg sbb pushf in or sbb sbb lods in dec or cmc cwtl xchg mov mov xor and ss stc dec iret in (bad) cmpsl std push mov and pushf mov les subl in into push pushf jmp bts mov pushf pushf bt and call lea call cmc pushf cmp jmp or push inc scas les mov fsts push lret (bad) xchg xchg (bad) aam push add test cmp into sub cmp sahf cmpb push shrb cs nop push and jp or fcoml mov adc inc adc (bad) or insl or jp sbb bound daa or sbb pop iret enter push bound xor xchg mov int fsubl in inc sub addl sub jno sub mov and jg dec (bad) (bad) push or nop aaa xchg sub stos add loope int std std out (bad) jno and dec ret int3 push loope pop xor add stos sti adc ljmp test (bad) cmp test mov or dec mov in jecxz xor lods sub in popf out or aaa inc leave mov outsl loope imul mov lods xor xor insl hlt cmp xlat and movsl (bad) and mov mov xor add (bad) push inc imul cld bound mov mov jecxz cwtl jmp cld jae jg sbb mov xchg pusha xchg cmp negb std sbb jecxz adcl push cmpsl dec fsubrs (bad) in cmp sahf add pop je aaa mov cmpsb sub rolb jne fwait xchg mov inc pop daa int3 js xor out adc es test stos fiaddl inc das mov xchg xor cmp adc pop outsb into mov jnp scas and ja cmp (bad) lock and xor shl daa inc mov jp jb inc push les cmpsl xor or push or dec int3 mov lahf xchg fisttpll push inc push in xchg xlat cmc inc leave leave jecxz popf adc and mov iret addr16 cmp adc out push idiv cli lock adc int out fild push mov cli cmp xor rorl push aas sub add adc sub jae inc sub fcmovnb ret push push lret in loopne mov ss pop test das or sub repz jne sub int cmc adc pop xor jno xchg lea (bad) and mov xchg pop sysexit pushf lock mov jge sbb dec jmp outsl xor and fistpll lds stos orl dec lds mov push fistl inc mov lret enter sbb js push lods shlb jecxz movsl sub sub arpl orl lret mov pop mov test bound repnz mov out jg je inc inc cmp mov mov mov lret sarb dec mov mov cmp loope cmp lret data16 enter mov push add cld call stos inc sbb aam imul sbb sub sub shrb push adc xor inc dec xor push dec aas xor mov add dec cli sub arpl test movsb or cmc add ss lock push loop rcl pop or in and js xor mov ja cmp mov loopne mov das aam add pushf xor hlt ret pop cs rcrb stos movsb adc pop dec jns fsubs mov and cmp push shrl outsb or fisubl imul xor cmpsl sub cmp jge insl inc fwait or in jae inc rolb scas cmpsl andl and inc push cs loopne daa sub mov out nop sbb push roll cmp sbb dec out cltd dec adc and shlb jae mov (bad) leave outsb (bad) mov adc push and in adc (bad) xor pop and (bad) repnz and ret insb dec sub shl pusha aam sub test dec sub dec bound and sahf ds mov pop mov cmp lds je mov push dec test cmp addr16 jb dec mov jl sub mov dec jno jmp cmpsb popf test cmc inc loopne xchg mov jbe fdivrp (bad) lock bound hlt mov pop sbbb xchg addl mov mov dec int3 icebp addr16 inc leave rcll (bad) lea sub ss dec mov js mov push gs add add mov inc jle mov or lods cmp insl mov (bad) pusha adcl mov or add outsl cli mov test sbb adc leave adc test cltd push loope aam jnp int pop or sub (bad) sar jns mov sbb popa xchg jns lods inc mov inc jle pop push jmp mov dec rep clc pop jmp or pop xor sub cmp and inc cltd cwtl xchg xor out and and aaa in ret sub mov lcall inc xor in cmp gs mov addl cltd fs mov inc push inc daa pusha sub push cmc jmp arpl mov sarl lea adc in aad in pop jns jnp fwait xor (bad) xor mov std adc imul inc sbb sub mov xorl mov push and dec out pop dec stos test outsl imul out repz xchg sub out sar jmp dec xchg inc sub xchg mov loop out adc test outsl xchg jp das adc ret and jns sbb ljmp lock xor in mov xchg rcll rolb ss push das repz sti xchg add push sbb les test ljmp add mov xchg cmp mov mov hlt jbe mov sbb lock inc sub popf push sahf push or cmp (bad) (bad) push jg sub ret jmp pop dec adc jle insl ja sarl (bad) imul mov cmp and sbbb sbb (bad) add mov jnp stos add int3 push repz sbb push flds xor inc pop dec lock in or int es movsl mov jmp cmpsb push mov mul mov xor push (bad) lret push fsubp lret pop and push jge mov mov daa in jns fcomp jne ljmp and jl pop imul test cmp pusha dec test xchg stos pop stc in xchg es scas repnz aaa cmpsl jnp repnz push test dec lret mov pop push mov dec lea jmp adc mov add pop (bad) xlat adc int3 call sub cmpsb inc into push cwtl cmc scas adc inc pop pop jo mov cmp (bad) rolb push notb or outsl xchg mov mov sbb or sbb push cmp pop mov test add les jp test jns arpl fnop jo mov dec nop jle cmp mov arpl xchg mov ficoml push pop leave xchg cmp arpl mov inc inc mov dec (bad) and rcl roll push cmpsb ret sahf cmp inc or movsl repz xchg fyl2x lds in adc xchg mov cld sbb jl adc push outsb xchg xor adc dec stc aam pop in push mov xchg aas bnd into or and outsb sbb mov outsb cmp outsl xor pop jl mov pop add fcoml das mov xchg int3 xchg scas jns jnp fwait and icebp gs stos push fs pop sbb rorl adc sti cwtl and daa sub push dec sub test or add cli sbb mov cmp shrb jne leave lcall adc mov (bad) cwtl jae sbb mul sub or movsl sbb cltd mov jle xchg add leave sarb xor imul and jnp stc jb (bad) jmp mov movl in pop jno fbld mov jmp fcoms and cld xchg outsl leave sbb lahf (bad) ja cmp and pop std js call xchg lock out adc jb and es outsl xor loope lock adc cmc gs or insb mov mov cli jns push push xor bound sbb mov jmp jno dec mov addr16 add mov test pop dec repz cmp (bad) jp dec lods cli stc popa movsl mov pusha (bad) repnz stos sbb adc or mov arpl jp mov icebp and fdivp xor outsl cmp cmp fcmovb je sbb in test sbb in cmp dec stc daa movsl mov stos out int3 das push adc stc or xchg or stos pushf xor outsb push jmp and std fs xor das xchg lret xchg jo jmp pop or mov ja jbe (bad) in dec mov (bad) mov mov push lods and sahf shrb addr16 std inc inc imul xchg push lahf cmp imul pop add sti push das inc add cmpsl ret sub mov lret in (bad) jg aaa add bound inc ja std lret add mov (bad) xchg mov mov jns popa cmp out dec (bad) mov es push insb push fidiv (bad) mov pop pop in imulb subb leave gs repnz cmp adc pop scas or mov fistl mov dec arpl rolb loope outsb leave mov lods shll or xor add (bad) jge subl cltd xor mov call (bad) jnp pcmpgtb and adc dec jecxz xor ss and dec add pop stc jmp insb imul xchg enter es mov xor cmp pop adc loop jl inc mov adc sbb imul mov inc push sub xor jg fistp fimull test icebp jne aaa dec sub enter clc inc in jg add punpcklbw jno mov in jmp mov scas dec jne aaa sbb movsl daa mov xchg pop add push sar mov push or jae std stos idivb add and add jmp add sub cwtl shrl jne xor sbb jb inc ljmp cmpsl sub in pusha xlat mov je mov lock dec pop inc mov ljmp sub aam hlt clc mov ja xchg dec sbb mov lods out sbb xlat dec push jmp fs fsubl xchg insl cmp orb cltd (bad) jge mov push sahf sub repz adc adc xchg mov jb jecxz dec fcoml out icebp dec ljmp aas jae dec push jp (bad) mov lods mov rolb pop insb xchg xchg mov movsl push or push mov push inc sub adcb popa cwtl das mov fidiv or arpl xchg xlat inc leave add dec stos fbstp paddsb jp sti xor mov cmp jp jnp out test xchg mov dec cli xchg jmp push mov push mov or cmp xor push inc push (bad) (bad) pop adc mov mov call inc cmp and adc inc lret in cwtl mov ret dec mov jmp dec repz jae (bad) xchg negl andb mov jge out std mov mov adc in test push adc psrlw xor popf or adc sub xchg ja add add fisubl aaa fldenv out clc loop adc or pop test add push sbb xor hlt aad sbb jl in jp adc out xchg mov ret fdivrs in insb sbb sub mov add xor pop fldt loope (bad) cmp pop dec popf (bad) aaa mov sub xchg out (bad) pop cmpsl jno and je dec lods jnp or jae xor jns add repz jbe jo sub inc mov or shll repnz imul push push test mov js outsl xor je js xchg jecxz sub pop fiadd pop icebp outsl dec lock mov ljmp dec adc mov repz rolb and int3 push arpl (bad) repz cmpsl xor imul into xchg mov in mov jecxz ljmp mov jb insl dec pushf notl mov adc popa xchg inc pop mov jne inc dec or scas lods lods test mov pop mov add icebp int push (bad) out sti xchg mov mov iret (bad) xchg push adc scas push dec das cmp cmp or mov dec scas lock pop repnz (bad) pop (bad) addr16 ficomp lds cmp js or adc xor or cmp xchg repnz out mov popf and out insb aas dec test mov out daa call bound in xchg jl jl inc negl vunpcklps hlt jge stos bts inc add test loopne ja mov push in gs push xchg aam push sub xchg xor (bad) aas loopne xor nop cvtpi2ps sbb jnp fnsave dec sbbb call sti and aaa mov mov js add sub call fwait adc into (bad) mov scas jne adc or mov push xor sub enter adc push xor notb scas mov inc mov xchg es sub cwtl cwtl add push jno andb inc add inc data16 fist mov xchg adc and mov insb aam mov popa mov mov add addr16 push mov aam push into lret lds jle fnstsw jl hlt test push xchg fxam popf mov leave clc mov cltd je jle stos popf cld pop add rcrb inc lods mov insb xor vcvttsd2si push les cs pop push je arpl sbb fistp push cmp dec xchg sbb xchg xchg in (bad) imul mov repz lret addr16 push andl xchg mov adc mov movsl rolb dec inc sub es inc test movsb mov adc neg xor push loope sub inc stc cmpsl imul adc fidivl mov xchg cld std adc pushf out cmp (bad) xchg xor pop ds or jl mov or adcl cld int3 xchg fistp lret sbb mov adc icebp insb fsubrl (bad) or out mov push mov pop inc sahf sub lcall movsl and sbb xchg xchg movsl stos inc push sbb add add xor jecxz insl repz aam fimul xorl inc mov out fisttpl mov add je ss push push gs push mov or add in adc inc cmp adc sbb shr mov push (bad) out call ficomp daa jo add hlt cmp ja loopne cmp mov jns jb fwait int3 mov dec jo cld fwait (bad) out mov aam int3 pop pop mov insl popa gs add adc xchg push sahf xor aam repnz pop ljmp test data16 push or or mov mov repnz lret adc xchg jns push add lods loope clc (bad) sbb xchg cmp mov negb loope lods sbb mov notl orl aam scas stos shrb fnsave call (bad) mov sti jl popa or pushf add sub jge andl pop pop mov jns es popa fs bound or enter xor ja loopne outsl cld cmpsl ds mov pop aaa sarl xor pop lcall mov and fdivrs adc in lret sub sti rcrb arpl dec scas pop pop test in call xchg pop inc lcall pop js cli fist inc insl mov sahf sbb or fwait stc xlat mov push fiaddl aas push mov fidivrl sub movsl cmp push sbb mov aad mov dec jmp dec xchg out mov out pop jae icebp sar mov jmp std popf pushf sub sub xor pop enter mov cld scas pusha in mov aaa (bad) mov repnz jns incl stos les push inc fbld adc and xor lds cmp jg out push jae mov fistpl in sub aam dec xchg scas (bad) jno nop mov arpl fmul mov fldt mov test out jl mov mov jp neg sbb sub mov pop scas sbb push mov icebp xchg (bad) or fistpll test add push adc arpl std (bad) sub and fbld in lods add flds inc mov aam mov mov jle (bad) test jb fwait cmpsb int3 push or call dec mov cli std fstl sub push xchg pushf dec lea icebp sahf mov repz nop dec stos inc dec pop (bad) xchg arpl js (bad) add mov gs pop cltd push lea add or cs mov mov cmp faddl mov idivl es iret in test mov cli stos repnz add and jbe jno aaa mov jmp ds aaa andl shlb mov add adc mov xchg daa ds push in pop add mov push mov in and shl xchg adc mov mov cmpsl lahf sub std push in insb fs lods rcrl push xlat add mov sub mov test int adc das ljmp mov inc inc dec pop jmp inc movsb aad mov (bad) or outsl movsb mov mov mov or enter dec inc mov cmp fistpll mov pand adcl sarb push fsubl lahf fs cmp or mov insb pop push mov jp fs sbb mov lret fisubrl or mov sahf pop xor or pop mov mov xorb jmp or push jle and bound xchg cltd in adc ja repz pop iret xchg push xchg or pop ljmp cmc cmpsb adc movsb cwtl add jno mov mov adc cmp dec jp loop loop xor dec and jge aad stos fisttp mov jnp mov daa xchg pusha sbb loop cmp mov mov fidiv and inc lods mov out mov aad cmp leave shlb shrl mov add pop cmp push mov cmp mov (bad) in fsubrp ljmp xchg std mov xchg mov inc (bad) lock and or mov adc fldcw addr16 test adcl add inc jb cmc lods inc test cmpsl pop add or cld fstl leave adc fdivrs dec dec mov insb scas mov dec dec adc jbe dec (bad) pushf mov dec add inc outsl dec dec lods insl aaa popa subl adc das ret or mov pop out jns ret stos or mov out inc sub fnsave pop aaa mov adc lock add ret lret xorb mov mov leave jle pop (bad) fprem mov push pmullw add jl std add add mulb out lods sbb fistpl hlt jmp mov fstl gs ss mov test inc xor mov sub add lahf lcall sub loop dec fwait push cli jno push xchg adc outsl ja mov repz pop inc je add sub data16 push bound add fninit push pusha jg out nop insl or stc jge (bad) lea in cmp cmpsb nop mov push test cmovge loop fildl xor pop pop or dec gs cmp cwtl rol jns leave xlat rep and or jnp rcrl (bad) dec mov sarl add push dec jmp jo stc xchg sbb lret outsb mov and pop out out ficomp dec and mov aaa xor ljmp pusha inc and push pusha push mov lds jp xor jg in pop adc add lock (bad) mov and outsl xchg pop lea add insl insl inc jecxz add lret jecxz mov outsl (bad) or fsubs jle push add mov aaa push xor inc (bad) cmp or mov push stos mov call mov or or out repz sbb pop cmpsb mov mov add stos sub lret (bad) dec adc lahf lret loopne add mov jo jns das fstpl cmc fs imul cmp into sub mov mov mov dec out negb movsb push inc push lret aaa outsl gs stos dec push adc loopne das jge or sub push fist adc sub repz sbb mov inc cli cmp pop lods dec mov stos and ror push mov rclb cld cmc adc fcoms mov fistp cld nop dec test sahf or scas in and jne fcmovbe (bad) mov push aad cmp or mov fiaddl subl sbb jo stos inc cmp stc mov mov mov sbb sbb sub cmpsb xor xchg in push rcrl int3 ret push mov dec dec stos xor add lds jns jns dec add add jp jg jb pushf aad cmp cwtl movzbl inc sbb not cwtl pusha lea call rol push cwtl bswap ror lea mov shl sub aam push aad adc push seto aaa push bt push inc adc mov jmp bt add jmp lcall fnstenv fldl (bad) xor stos insl cltd pusha mov xchg inc loopne bound (bad) lock add fsub sbb mov dec add negb jbe outsb push test push inc icebp popa jge mov push inc or testl dec daa jno push cwtl fdivs mov fsubr cmp pop push mov aam js add and clc inc mov movsb jno pop jo ret ds arpl minps mov jmp and pop sub mov push insb push dec leave cmpsb push inc pop sbb mov sbb jo mov jp jnp or add sti jge mov incb push aam sbb xchg mov sbb stos push pop pop inc cmpsb push and mov xor xchg jne,pt loopne inc mov jp idivl pop sbb loopne xchg inc xor fstps adc divl mov xchg jl adc push jnp cmp outsl stos lret rolb xor sti imul repnz push inc outsl sbb sub aas mov in mov sub mov inc loop mov add mov in rcl sub and test test outsl adcl rolb int cmp push test ja loope (bad) jo fldt fwait lock push into mov repnz sar dec fnstsw sbb arpl mov mov sub stc lock dec mov mov das subb into mov or xchg pop cwtl imul mov leave add bound inc jg jno jns push jp xchg loop inc call mov not lods bsr setg neg call add dec outsl arpl inc insb insb outsl arpl popf negl mov std popf subl push mov xlat mov push cmp mov adc and inc mov xor (bad) jbe xchg push push imul mov test xor mov dec loop sbb mov or mov sub insb loopne cld (bad) lret mov mov adc sbb dec mov inc repz jbe pusha incb and mov mov mov xlat or out sub fsubrs jl pushf pop aam into test movsb sbb xchg pusha cmpsb insb and sub outsb add shr sub lret movsl (bad) test lods xchg inc mov rcl xchg inc into in iret stos pop or or xor inc movsb lret mov divb sub jle out cmc lcall and push nop pop push jmp cmpsb mov ret adc call daa imul cld in leave addr16 inc in mov xchg call call inc push xor mov or test sub pushf mov push int3 fadds lock lcall pop sbb adc push rcl lds fdivrs lea cli cmpsb sub pop gs sub push cltd loope push cmp out push cmp xlat mov sbb cmp mov add cs arpl cmp xchg jo xchg adc pop add xchg lds sbb lods xor arpl into pop cmp and xor mov insb mov mov lea shlb out clc das xor sub incl add add adc pusha mov pushf jmp pusha pushf pusha lea call pusha jmp mov push movb mov pushf pusha setp mov lea jns pushf pusha push mov pushf lea jmp mov xchg pusha mov movb setge setge lea ja pop call call shl test clc pushf add pushf cmp stc sub lea jb jne bswap mov test jmp stc mov repnz push lea jne push sets call jb jmp and test mov fcoml fcoml fmulp add sahf aam cli ret dec in or mov leave dec push fistp mov sbb hlt outsl mov mov inc jb push cmp sbb movsb mov popa push mov popf je inc mov mov cmp rcll fcmovnb mov add cli ds lods pusha pop fidivr sahf xchg stos and jne int3 ja or cmpsb mov sti inc sahf sbb dec das outsl inc rcll or inc mov mov jb dec mov (bad) jo jmp (bad) sbb inc jmp dec sarb repz xor and sbb pop jmp movb lea jb adc push sbb jmp mov mov mov call lea call jmp cmp push inc push cltd pop cld sub mov jbe out or leave icebp add mov sti dec cld cmp stos ljmp out mov inc repnz rolb (bad) pop ret fdivrl insl mov inc fstpl (bad) dec mov add push fdivs out pop std push fdivrs inc jp imul and xchg movw call addl mov pop cs jge cmp outsl insb xchg jmp or push int movsb sbb fcomi jecxz imul or mov lahf and xor cmp mov fildll and or popf adc xchg xor xlat std mov cmp push add call fsubs fwait push cwtl lods in daa sub icebp (bad) adcl movsb inc xchg int3 push inc pop cmc sub jecxz jo or ljmp adc xor fild (bad) sbb or add sti or mov jo cltd pop and bsf cmp in mov lcall sub and lcall iret sbb cwtl pushf mov into fidivr pop jg cmp (bad) mov jnp mov mov addl pop push psubw repnz lds dec mov and add not xor jl xor dec hlt cmp int pop sub fptan mov outsb cmc psrlw add adc repnz mov movsb xor push insl xlat sbb inc mov ja adc sbb mov sub int pop sbb lds sar pop mov nop icebp fldt adc xor pop pop leave cmp test mov int3 js cwtl mov jno or push sub pop push ficoml dec pop xlat mov iret jb (bad) std sub stc ret cwtl cli jle push sti ja push mov sbb in inc mov jmp outsl xchg pop jb adc adc adc cs inc inc test jne aaa aaa sub fsubl (bad) jbe aaa lods repnz cwtl inc or addb loop push or roll ds mov jle xchg dec cli lret je push lahf jnp je mov dec fidivr cli loopne or push jbe mov (bad) jmp xchg dec popf gs jle arpl mov mov fisttp xchg pop and dec js sar movsl push cltd aas dec es out scas or fsubs out lods stc popa aad adc pop sbb sbb insl (bad) or fcmovu push std jnp fisubrl jl popa mov jae jl addl xchg push or cli in xchg jbe sbb and inc push jecxz xchg mov sub dec sub fnsave cltd mov dec adc push scas shr push sub jne xor mov xchg push push pop mov (bad) scas aam idivl rcrl imul scas aad imul mov xchg cmc fmul mov fidivrl ljmp dec daa insb aaa xor scas sbb sbb cwtl cmp out mov mov push fwait cs xchg daa (bad) icebp ss loope jno pop add std mov add rorl enter pop (bad) sub insl jne xor push mov fcomp or mul mov pop cld push and mov pop mov add mov push fwait daa outsb cwtl xchg leave scas or jb popa (bad) ds imul leave inc xor leave and nop or fucomi jb xchg mov inc fs repz (bad) push dec xor sbb add xor inc lret mov push cmp cmpsb add out ja xor decl push xor cmc inc int mov dec jo mov or dec (bad) scas fs sub push pop call gs push pop ljmp sbb xchg push pusha cmp or stc nop push test stos sub fildl xor scas int3 sahf stc add jg xchg mov sub (bad) jge pop fldl jbe hlt jbe loop sbb imul xchg fwait (bad) mov xlat inc aad mov or dec inc cld rorl sti pop stos jl push insb xchg cmp mov mov sbb xor out mov ljmp popa add int3 (bad) into jle sub sahf jp jmp dec scas scas (bad) mov out notl adc inc fldt dec out out mov pop cmp mov push ljmp jmp shll mov xchg xchg or jnp fdivrs and test inc adc rclb lcall push hlt jo inc mov ja loop mov push and dec jno clc lock aad jnp cmp insl cli es clc lds pop fdivrs xchg cmp push jnp push xchg dec inc dec roll push mov adc and icebp jbe inc (bad) cmp inc or jb ljmp cmp mov ffree push shrl mov movsb cli mov add pop (bad) mov shr or pusha popa sub xchg loope cmc fild lods stc aas mov (bad) pop ds insb sbb ljmp lds imul add cli jne es mov pop stc imul ret sbb or xchg dec add mov cli testl and insb rcr dec lret jecxz jae sub dec pop in pop stos mov test pusha fisub jle movb in adc addr16 cltd pop jge or sbb jge mov fistl mov sbb adc jecxz mov pop rcrb mov xor adc push outsb sub push int3 push push or dec rorb jge fldenv jns pop cmp add mov inc fcompl ss imul and inc push fmull std sbb jns mov sub xchg dec inc mov push shrl movsl hlt jle jg ret fsubrl pop jl sub cmp fsubs loop das push mov xchg iret rclb (bad) mov mov fstl pop fdivp xchg in dec aam dec or jbe out das add jge mov mov mov out pop es inc jns xor flds cmpsb or cmpsb inc call xor (bad) scas push clc insl daa fiadd in xlat mov mov and lods ret cwtl iretw sbb pop les jp jp orb adc adc test stc cli scas adc adc pop sbb xor mov lock xlat pop stos xchg push les inc push inc lahf xchg (bad) repz fs push inc push cld lcall clc xchg nop jecxz add xchg xor or push sbb and xchg stos sbb push ret pop rcrb aad dec out fcoml loop pop sbb repnz cmpsl shl loope or adc mov ror ds or dec adc jb mov sbb mov cmp xor and mov outsb shr aam adc lds pop mov add ds mov pop pushf and aad stos cmp sub mov (bad) movsl test jb push dec mov lods and mov out mov jo or fmulp jle mov insb mov bnd push inc xor imul fsub mov pop inc adc fidiv repz gs fsubr or mov cltd adc lret es pop fcomp fdivrs dec jp sbb cmpsl hlt out sub xchg es data16 or sbb pop lret mov testl int3 test in stc mov sub sub inc and or jmp addr16 jle cmp push mov arpl les fildl sub pushf (bad) loopne add test aad clc push or mov shrb test ss repz ljmp fsubr mov xor mov call sarl mov std xor imul add cmp stc mov (bad) xchg lock xor mov jp es aas xchg stos pop roll adc popa mov add test or leave and ret iret xor mov fwait les add enter dec mov scas inc add pushf or xchg shrb mov int push cld jo push rorb adc cmp movsb dec inc mov inc js sub pop ljmp mov mov rcrb outsl int call rorl les xchg jle sub mov in ds inc pop mov rcll or bound pop xchg jnp cmc push adc das xchg mov lods daa stc outsb ja insb jle xchg sub popf push xlat cmp xor and jbe and mov sbb addr16 faddl sbb inc sub or jns data16 push dec or ds and lret stos xor push cmpsb add mov sub jo jb dec push dec mov lret insl pop jo orl repnz call push cmp sub pushf sub fwait (bad) setp cmp rcr inc push loop push icebp push dec inc test sub inc xor xchg int3 inc stc mov dec add mov arpl rorl sub sti xchg mov or adcb jmp and mov cmp mov inc leave (bad) test sub mov mov or out test je and dec jno data16 push in pop in xchg mov loop rolb enter imul cmc mov xchg cld push rol pop xchg popf dec cmp mov jp (bad) fstps cli xchg cmpsb das sahf cmpsb nop lock lret dec jg fwait pop jge dec loope outsl popa les inc es push mov mov pop inc jmp push push xchg xchg std test push repz add and dec mov push and jl xlat scas andl xor fucom dec dec mov movsb popf in vmwrite (bad) (bad) mov push fimull cwtl push movsb inc mov xchg lods pop xchg fiadd and mov dec les mov loop dec add mov lahf outsb out fldl2e xor inc dec (bad) pop mov inc dec andl fadd xchg repz gs inc xor shrb ss or xchg fisub fs sub or jae push push lds mov push js xchg divl enter sub out mov inc fs inc pusha outsl adc push sbb mov je dec sub scas cmpsl out ret jae inc int3 pop sbb xor loop jmp sub sahf mov sbb cmp sub sbb jg insb out mov sub sub mov je movsb pop mov add xchg inc test jmp sbb mov sbb std stos cli fdivrl mov inc mov inc cwtl js (bad) outsb jg push pop stos rclb mov aam (bad) rcr jne add adc adc inc push out addr16 repz inc rclb sbb aaa xor out mov sbb pop inc or shrb mov xor jmp aam scas and inc int3 movsl stc push ja adc sbb test or push xchg mov inc jmp adc lcall inc lcall xor adc dec mov pop std jne dec and sbb test cmpsl in mov jmp js repnz xchg cmp dec daa out mov pop test add pop lcall jl je ja int3 gs dec clc mov push dec das xchg or cmpl lea inc sti pop in incl es xchg pop push loopne jo lahf mov aad (bad) cmp (bad) fidivrl cmp dec xchg add or sbb inc mov push sbb sub rcrb pop ficom fstl cmp jns movsl pop inc cs out fdivl pop aam jae test xor sbb dec sbb cwtl test and jae js mov dec cmp xor ljmp xchg cmp jno iret mov pop std sub sbbl adc mov cmc jae inc pop push into jo sub add es mov mov std daa jle and js scas mov jo call mov push sti adc cmp out lret dec add rolb lea inc adc push add mov xor mov aas mov std sbb push inc mov fstps jle pop push xchg jl test sbb xchg push mov sbb loop mov or jne movsl xchg push ds sub lods push mov xchg or cwtl sub push push lds es idivl mov test sub jnp shrl rclb adc popf inc mov cmp mov jns int3 cltd adcl dec mov xadd paddb dec adc mov cmp imul ret imul mov aam adc in pop jns xor out outsl lret and loope orb xchg add xorl fwait sti shl popa sub push cwtl adc push cmp call and test shlb and fsubl xorl inc sub mov mov or je and stos dec cmp je fisubr or cmpsl cs dec sbb sbb sub mov insl call mov in test repnz insb inc xchg mov movb adc popf cmp call addr16 mov gs jle fcomps push bnd das or add arpl mov cmp inc xor or test inc dec into cmp mov rorb cld push aam adc dec pop and aas mov adc out fsubrl fwait sub mov outsb fistp mov sbb loopne aaa fadd or aad or das shrl sbb or xchg call les lret outsb in lea pusha xchg sub stos mov leave mov orl dec add das pop (bad) mov data16 mov pop mov fldz cmp movsb lret in ljmp mov mov movsb pop lds mov sbb sbb dec in jecxz (bad) sbb int fwait jb mov adc aaa (bad) adc arpl nop scas xchg dec mulb sbb adc int mov mov std dec xchg xchg cmpsl lods scas mov loope mov stos outsl and dec icebp lock out fwait mov and sub inc sub aam outsb sahf jne pop (bad) mov add xchg sub aad pop insb cmpsb insb les in hlt icebp mov mov lods jp pop popf mov sub and test aad js jl cmpsl jnp bound insb jg (bad) push sbb pop movsb out test rorb pop arpl mov test in adc (bad) adc lahf cmp (bad) fisttpl iret lock jbe cwtl fcomp adc jecxz mov pushf cltd ds push dec hlt cmpsb mov shrb mov xor push fdivrs inc pop and mov dec sbb pop and ret pushaw pop cli loopne gs add jl gs in push xchg mov mov ret cs enter sahf mov jno push mov test lds fmulp cmp (bad) sbb cmp adc incb mov mov inc mov test mov sbb dec sub dec aad (bad) inc add lret jecxz xchg push push and and icebp jns fldt in lea cmp inc mov jecxz mov ret pop xor ja insb jnp mov in out ljmp or pusha push cmp stos xchg (bad) sbb xchg icebp push sbb jb insl and nop or or dec flds (bad) es sbb rolb fsub aas fnstenv mov inc pop loope cli cld inc xor pop fwait out add cs in push jae sub jmp or lret (bad) jno data16 pop loop add icebp aam push ret sub mov or and adcb xchg insl add cmp xchg movsb cwtl push mov or ja sbb sbb cmp xchg sarl lds (bad) out roll popf je cmp cltd xchg stc ja into and jecxz cwtl lds shll push jp cltd pop fisub mov pop ficomp out mov xchg insl add push add repz push adc mov sbb or mov or adc aaa xorl dec add ret arpl mov lods xchg jecxz mov xor push mov les pop ret sbb mov (bad) dec es add sbb pop sub or shll cmpsl lock mov dec adc cmp xor fistpll inc adc and jnp sub jp jno test cmpsb mov mov popa add les inc fldl (bad) popf cmp call stos ret push outsb test add dec xor outsb fisttpl push xchg jp lret mov cmp xchg outsb sub and rorb (bad) adc (bad) or jge push xlat adc js jae jo aas adc ja (bad) seto pop pop in adc jae sbb sti pop mov mov mov mov insb dec inc in adc jle cmpsl mov sbbl mov push jmp push jbe pop sbb pop js sti enter dec cmp and push xchg push cmp push pop push and test (bad) jnp push out mov imul addr16 (bad) lods sbb fwait xor xor sbb or pushf push xchg xor enter loop adc mov push mov lret mov jmp dec inc pop aaa adc push sbb bnd cmp jle mov decb mov add xchg ljmp mov in lods cmp push mov stos fcoml cmc data16 xor pop ljmp add repnz pop ds (bad) cmpsl mov xchg lea int cmp stc push movsl fs scas mov into ss shrb push sub (bad) hlt or idivb sub test data16 lahf (bad) jno in pop movsl jecxz add loopne push push icebp jb dec push fs cld push shrb decb pop out stos loope popa test push in sub stos cmp out fldenv pop fisttp xor mov lods or xchg push test fwait pop scas aas jg js dec scas jle sbb adc jno sbb addl pop mov push cmp sbb jp mov mov push xchg pop fsubrs enter jle mov aas data16 xor xor sub mov and xchg call sbb pop loope mov aaa and mov test mov dec divl aam ss mov test or ss cmc push clc stos mov add ja stos cwtl push lea adc test dec scas es sub push pop sbb sarl ljmp pop popa cltd and add mov test bound and test mov add cmp setbe outsl mov pop dec push ret cmp fisubr ffreep pop (bad) fldenv mov testb cltd push cwtl mov pop and mov js pusha (bad) xchg cmc jae out xchg shlb ret pop mov xchg cmp pop push and adc aad ljmp cmp xor mov js sub cld xor push out in fs scas sub aas dec and loope cmp imul jnp pop mov jnp (bad) pop cmp ss pop ror dec in in ds ds clc les out movsl in fs cwtl sbb rcrb outsb pop xchg orl shlb cmp xlat sahf pop insl lcall imul and inc push jecxz fiaddl xlat mov fild rclb jmp push xchg push and andl xlat insb cmpl inc mov lcall (bad) xorl mov nop xor in out jecxz out iret push jle test fsubr sbb lret or xor mov dec popf xchg insl sahf iret jbe fistp loope aam fldcw addr16 subl sub icebp popa pop xor loope inc push jo ja fsub push je outsb sub movsl test xor imul test dec mov sbb cli out mov sub xor cmp jno ret mov jne jo fidivl hlt orl mov loop stc hlt pop out dec adc add icebp dec mov push jno mov mov jge cmp (bad) es repz lret mov pop and cmp sub pop (bad) call int or scas jg fcoms lock test cmpsl cmp inc or xchg popf loope push jge sub jmp in stc pop jg mov mov cmpsb aaa or pop hlt adc jbe imul pop fisttpll mov into jno xor push iret xor or in sub (bad) into xchg insl aad aas mov jb lcall fisubr std mov mov mov adc aad push movsl jle xlat jo fistl scas ds and ds (bad) movsl es repz stos (bad) cmp and je dec ret push push pop shrb enter lock cld fldl xor xor outsl pop and fcmovbe mov xor loopne enter jae rol mov in pop hlt jge pop or mov jge mov pop sbb jmp call push (bad) cltd mov sbb mov push inc sbb (bad) cmp aaa jp jns out das inc pop int3 push inc hlt in mov popa mov push jae in rcll subl xchg mov adc adc imul add (bad) jnp lahf cmp add repz inc daa and sbb mov jge loopne cli cwtl cmp ret add mov das mov lods sbb push dec dec and movsb sbb jns or insl mov stos push xchg mov scas cmp push xchg adc adc js aad (bad) aas stc xor fmuls jns call stos mov popa cmp fdivrl int3 mov fs add int3 popa mov pop xchg push ss clc sub mov adc xchg mov jmp jnp test (bad) pop jmp imul in sub data16 addl ret sbb xchg jnp adc in int3 fdivrs mov jg jmp adcb nop pop pop lcall mov mov nop adc pop cmp ret insl inc push add xchg pop cmc mov in xchg fdivr ficoml aas sti popf sar pop or out jb adc nop mov dec cltd sub add sub outsl imul mov iret icebp cltd cmp test adc cli dec cmp jo std dec shrb in data16 inc jecxz jge and aad pop and test sub jecxz jmp subl aas jp sbb mov je (bad) pop loope xchg mov data16 cwtl and adc in adc daa int (bad) mov pop inc test mov pop jmp xor fisubrl test movsl icebp sahf lds loopne inc or adc inc and out je mov outsb mov testb add movsb sub dec push rcrb popf mov jle (bad) bound out test sub test push add imull shll ret xchg fadd test jno mov pop mov xchg jl mov push push sahf lcall push (bad) fnstsw rcll pop add cltd ss or je sub jmp mov xor mov (bad) push cmp cmp hlt dec cmp aam push loope std mov popf rolb jbe push popa jmp mov or aad jno or fdivrs cli out sub inc ret dec jo leave push mov mov xchg xchg pop scas jg mov fsubrl mov jl push pushf sti jmp pop movsl mov sub lahf push das or ror adcl xor cmp lds incl fdivr loope xchg fldt insl jne out ficomp xor rolb das xchg aaa dec mov repnz mov pop dec pop or pop addr16 jg fs imul movsb and dec insl and and sub outsl (bad) std adc inc push sarb ret mov mov mov int3 loopne das roll sub or jle push pushf push lret lods test cwtl sub push cli loopne adc mov lock mov out pop inc rol jae inc mov push push sbb add arpl sub cmp push or and xchg jge out mov push lods lahf subl cmpsb xor mov dec aaa popf inc (bad) outsl dec out loope lret cmpsl cmpl loop add jle cld cmp dec (bad) cmp mov in adc push sbb orw arpl xchg lcall sub (bad) jle cltd dec push adc je mov lods pop sbb pop fisubrl or out and dec enter outsb add sub mov xor sbb fisubrl adc repnz mov int3 (bad) push rcrb hlt xchg xchg add inc (bad) std xchg cmc aam aad scas iret cmp push sahf mov cmp or and xchg out and stc jnp loope rcrb fidivrl add sti dec push shll push xchg test icebp xor xchg lret and loope mov mov daa cmpsl lret ljmp pop nop xlat dec test mov dec push push cltd mov pushf lret bound (bad) dec mov cs ficompl mov sub frstor fnsave cmp add jb mov in lea dec sbb or das mov pop dec gs or movsb pop push xchg cmp sub ss xchg les sarl and push cwtl cltd pop dec outsl cltd lods sub push mov cmpsb ljmp orb mov lret add mov mov pop mov dec test pop xor orl lret mov int3 or and out pop lods clc add mov pop pop inc cmp xor dec mov push sbb insb sub sub js cwtl mov xchg xlat dec mov pop ret scas dec or jge push (bad) jg mov les xor out add jns fsubs dec lods roll fcompl aas aam icebp nop cmp sahf inc aam sbb (bad) add int3 cmp test test ja mov lods mov and lea xchg mov xchg sub dec ja sub pop mov mov nop test cmpsl lea pop jnp popa loop xchg jge mov xor sbb lea stos stc xchg mov dec xchg rorl fisubr movsb enter push and cmpsb sub sub fnstenv aam aas lcall adc into mov sbb inc lret lea xor addr16 xor dec into pop cmp xchg jo fcmovnu pop jecxz cmp adc pushf jp (bad) mov xchg sti xchg addr16 loop pop push ds roll push mov in hlt js popf mov fnstcw stos divb das lret idivb (bad) jbe inc int3 mov sub stos dec ret movsb sbb mov push loop arpl enter xchg inc sub cmp push mov jmp sbb dec mov movsb adc push test int jmp ljmp jg sbb push sub outsb inc or loop js push or rolb je jno mov aas faddl mov push popl push dec and push aas dec ret arpl push dec loopne mov std out cwtl ficompl ds rorb into dec xor mov push js lret ret adcb das in jne push outsl mov cmp cltd dec push cli adc sub cmpsb lcall jl fstpl dec data16 cltd es (bad) lret xor mov add (bad) or stc mov es ljmp adc mov mov mov mov inc pop pop aad bound xor inc mov or fwait pop out (bad) aam inc int push mov test mov push inc mov loope xchg sahf aam sub inc iret mov xchg cli push mov mov cmp dec sub push adc out cmpsl fs stos sbbb jg and hlt mov dec xchg xchg pop out mov adc sbb outsl mov push push and push and mov ret fistp je popa jp pop stc je lahf shll mov lahf fwait push and rclb jg jl outsl add in dec call fwait daa cmpsl or jmp loop cli dec sbb xor sbb aam xchg loop sub loop add xchg dec sub pop jb in clc xchg or daa mov jle pushf pop and jmp push cltd push cmpsb bound sbb (bad) push push xor outsl dec xor xchg mov mov bnd sub data16 dec loope sbb (bad) outsb sbb push cwtl incl shr jne push popa mov mov in iret mov xchg mov pop bound mov inc test in cwtl imul ljmp sub hlt test xchg xchg sahf mov cltd jo mov lock dec es push (bad) adc adc lea js pop pushf cmp (bad) pop lret hlt pop jae dec mov xor xchg mov cmp sarb jb mov mov push mov loopne mov xor mov clc dec ja jnp lcall aaa shl call loopne jo add scas divps dec into mov fs imul (bad) hlt push aaa fdivl ds mov and pop insb adcb jb mov cli stc push mov and fldl andl push cmp in mov adc xor sbbl adc imul test aad lock dec jb inc test adc shld or shrb adc in (bad) shrl mov cwtl jne icebp sub (bad) mov scas mov add sar fdivr test test lods xor cmp add sar ret and pop scas ret mov dec leave stc fisttpl cltd and or cmpl (bad) jne or insl fisubl gs sbb and or mov jp cmpsb incl inc dec cmc sub nop push and pop jg arpl fcmovnu push jle lock or aam fs pop fidivrl push insb push fwait shr cmp fdiv out xchg arpl jg pusha int3 sbb sub mov insb cmpsl sti xchg mov lahf fwait ret sbb rclb push xchg push fwait and leave fadds scas xchg divl mov and and add jle fs dec out pop or lock inc pop das cmp cmpsb mov dec ror pop xchg lods fstpt (bad) fdivs jae lcall js (bad) ja pop lods cmp les mov inc in inc push test shr dec cwtl fwait dec sbb sbb outsl sbb mov adc fsubs sub ret fisubl int3 call dec mov (bad) cwtl cmpsl rsqrtps fprem1 ja out movsb adc or and cmpsl arpl xlat mov les push in ret test sti test and sbb data16 push inc sbb sbb pop dec call dec scas lds repnz mov js xlat jg add out mov fildll cs cmpsb in jns push out repnz addr16 sbb (bad) (bad) clc mov mov sub fnsave enter xor sbb cmpsb and or cmp cmc pop into jmp call add pop in and sub push adc mov push pop pop popa shl (bad) fmuls xor push cli (bad) cwtl jns xor inc subb iret or inc inc mov jnp,pn lahf hlt out (bad) aaa pop push mov mov jae adc pop add or popf xor push lea sbbl pop or jge jne rcl movsb call into or daa pushf imul pop dec jnp loop leave or pop xchg adc adc into jae jecxz pop inc cld out inc repnz cmp daa jne sub bnd jmp (bad) ja inc (bad) inc jo faddl lods xor mov xchg sub (bad) cmp (bad) fidivr adc mov cmpsl (bad) xchg sub or (bad) inc ds xchg mov cltd jl add or inc add xchg adc inc fldcw test dec and push xor add jo sub clc (bad) out shrl cmc test cmpsb rcll xchg dec ficomp das push es sahf xchg loopne aam lods andb xchg out or mov enter mov (bad) add xlat add insb imul mov and outsl or jmp in sbb and lds mov push add lea adc jle rclb jl inc insl out popa cs push pop xchg pop pop cmp into or jns adc in xor push dec sbb popf sub mov push add jle ds stos dec rol cwtl xchg out lret lret mov in mov pop sbb dec aaa ret out and mov leave adc and push mov sbb les int cwtl mov lret push lock sti in dec ret sarb add dec (bad) int3 int3 sub out (bad) enter pop pop sub push cmp cld sub cmp jbe dec lds jne cmp lods bound inc enter enter (bad) jp psubw jnp insb jns aas int js mov cs sbb xchg and out mov dec fs jbe in leave or dec mov mov lock fwait iret scas cmpsb ret arpl jge mov fstpl sbb rcll xor mov insl jbe or lahf jno iret stc fsubs rclb dec and xchg movsl pushf lods imul xor mov cltd ret dec call cli stos data16 popf sarw outsb roll repnz mov push jne push adc popa xchg mov pushf inc inc sbb ja jnp cwtl movsl stos dec stos sub mov bound xlat adc (bad) (bad) xor push out pop popa outsb rolb nop inc mov xchg dec mov ja rclb inc imul jo sub aad cmc mov dec fdivrl jecxz andb xor cmp push sysenter lds inc rcll jno test cmc push (bad) std test push xlat push pop rolb out fisttp push sbb cmp jnp xchg lcall mov push pop mov mov jle inc inc (bad) stos lods and xor add sahf cmp adc in cmp aas jmp es pop ja mov imul hlt xor mov mov jl jg mov or push pop jae dec xchg and je cmpsb (bad) fistpl or inc mov imul mov sbb jge aaa es lods out (bad) cs jmp pop (bad) sbb gs insb out insb xchg fnsave and mov inc arpl sbb lahf lret dec xor (bad) lcall dec push xlat mov rep arpl das scas aas jae fidivr cmp cli int or fildll js sub add push push sbb push movsl lret les cs dec out in or lret popa cwtl xor mov mov fildl hlt mov cmc xchg pop and ss (bad) insb inc popa fwait lcall mov push mov in xor add push jge cwtl xchg imulb or test clc iret iret jl sbb inc push shrl fnop ljmp pusha clc add arpl fsubr xchg xor fnstenv xchg add inc xchg test cmp mov push mov push mov push push xor stos rcrb pop push mov (bad) lret cmp dec sub mov lods scas adc or and or aam out mov mov xlat lcall cld inc arpl push mov stos add (bad) lock in mov xchg call adc xchg sub divl mov dec push (bad) xchg xchg outsl pop aas jb push roll xor test jne lret ds pushf cmp aad sbb adc (bad) scas cmpsb daa ret aam sub sbb lods and xchg dec lahf or out sbb adc jp call mov lods inc rol shlb mov add mov push loope adc cmp add in call jnp,pn sub pop and in or sbbl mov jae mov pop sub push cmp test mov or or jmp es lock nop cmp (bad) ja mov out mov out fsubs pusha or sub sub ljmp ljmp mov inc xchg sbb into dec arpl inc mov push mov andl pop and push sbb jmp push rorb inc xor mov rcl push jo sbb jae (bad) jo mov loopne popa sub pop scas cmp fiadd mov outsb data16 pop mov pop lcall push lds mov push add dec or stos mov insl or into mov ds and xchg les (bad) je fstps jmp sbbb in mov add (bad) je imul sub data16 cmp fisttpl and in ret mov adc in fist adc orl xchg sbb mov das movsl mov popf (bad) mov rorl fs adc daa pusha loopne js sbb sbb sub mov push sub add add fimul xchg out (bad) lret leave (bad) push lret pop adc pop movsl inc (bad) lret cmp (bad) fwait push cmp mov mov lock jmp cmp sub or fs aas xchg jae fisttp stos push xchg mov xchg adc dec js xchg cmp icebp sub scas int (bad) xor flds imul push xchg add mov mov dec push sub in cld push test lock fdivrs and cld push dec sbb daa (bad) jno jle push cmp sbb in mov add repnz insl add gs mov imul xchg cld mov jecxz lret lahf jle lret (bad) out inc cmpsl repz test outsl out pop and pop out mov int3 inc pop xor jl add jp int3 fwait and mov int xchg inc test mov out pop rorl add fs adc aaa test pusha movzbl sub dec lcall es not jnp jp hlt test clc mov mov outsb xchg or pop shrd daa push sbb ss lcall mov pop fcmovnb mov mov mov xor pusha jb daa mov enter inc loope out dec sbb and into sti mov aad push scas lock fadds loope sti hlt xchg push and fstpt xchg inc and add mov lods cmp adc sub xor insl fwait jmp pop dec sub push mov ljmp fsubl loop mul xchg daa sahf loope (bad) int fldl2e mov jle add sbbl inc cmp xchg dec sub fstl jb fidiv ret iret nop imul inc push mov cmpsb popf pop outsb ss outsl ret sub sbb cmc shrb push inc sbb rolb loopne xchg push loopne push or jge test fmull movsl lret sbb push fcompl dec cld ss lea inc sub inc push dec cltd inc mov enter xchg call or inc push cmpsl cmp sbb mov cmp cmp lahf jo loope shl mov and ficom cmc (bad) aas movl cmpsl lea shl cld jae andl gs pop push xchg xchg mov push mov mov mov pop xchg sbb lret sbb outsb or mov adc and jmp sbb mov bound les inc lahf hlt adc call out mov loop mov mov insl sub fwait mulb aaa and clc sub adcb call xchg adc jg daa int sub je (bad) decb inc add std lock lahf jmp pusha pushf inc fcomp sub xchg jle jb sbb fs fstpt mov call jecxz repz cwtl inc or mov cmp sahf mov mov pop or les pop ss loope ror push push sahf and mov into sub and mov aaa jge int3 shl jb test sub movsb jle movsb mov dec adc stos push stos pop outsb leave daa insl test insl jl push cltd int3 pusha iret ljmp leave int and xchg and jne in scas pop xchg cld jo jp clc stc adc subl push push pop push xchg jae cmpsl ja (bad) jae das loop inc out inc pop es pop push add aam xchg fild lds sarl sub iret cmpsb scas pop sbbl mov jae stc repnz inc or jl std sarb mulb cmp lea shr (bad) in stos out sbbl sti aas fimul lahf andb jge sbb dec popa add xchg inc jp xor leave (bad) stc test xchg aam fs sahf sub test dec mov mov add out sbb repz repnz lea dec aaa lea icebp inc cltd cmpsl pop lds mov sub push add insb in and scas or cld xchg or xor push dec mov and lcall aam sahf add jg sbb stos cmp or daa imul add push or mov mov push pop xchg add xor jg das dec adc popa sbb mov pusha push stc jo or add ret jmp dec scas mov (bad) push mov movb adc jo add and (bad) lods repnz enter lret ss pmaxub nop push and add add xor push xor jle mov cs mov imul inc push fimull jns loope ljmp push mov mov jecxz push inc icebp out adc pop xor popa ds fcomps xor push xor rcll daa sub fisubl xchg sbb out lcall and lcall jg mov and gs push adc rcrl dec add int imul dec mov adc and jnp lret pusha shr sbb idivb mov sub jp popf pcmpgtw and popf dec mov (bad) movsb ss xor add sarb mov xor mov jo cs test cmp push nop loop punpckldq push fidiv add pop xchg push enter stos cmp mov and das int3 int and pop xlat inc into xchg adc push or and call mov adc mov int3 dec sbb xchg dec push jle mov jl stos push jo mov sbb aam cmpsl shl xchg and xchg mov das dec pop fdivp lret movsl pop add icebp ffree (bad) adc popa or (bad) mov in sbbl div (bad) stc jns jp xlat xchg daa into pop bound mov add inc jne xchg xchg push xor test inc je or add push sarb les cmp (bad) sbb sbb sub test orl adc mov lock insl jg or or nop mov sti leave mov jb shr movsl add cmp push or sub pop into jnp push sbb rcrl adcb and push aas and push inc fistpll xor shrl out mov js daa stos push sbb outsl mov gs ffreep pop mov adc mov sub pop xchg push fucom push add and cli mov aam mov inc sub loope or xchg xchg into int3 and into inc jle inc jg cmp loopnew mov (bad) out pop and outsl inc fimull mov jecxz insl adc aaa adc jnp adc lret in push xor outsb fnsave cwtl sbb stc mov loopne lret push lea enter (bad) push lret add cltd out mov mov jb stc bswap aad rcll inc (bad) shlb mov pop rcrb lret loopne ja lahf add xchg push push pop dec dec outsl mov int3 push into fs push cltd ss push add (bad) aam pushf jns repz sbb sub xchg pop test in rol dec jno fidivr dec dec dec popf adc aam rclb mov int3 (bad) adc mov sub fnstsw mov pop jb and inc inc mov (bad) loop sub adc xor push stos pop push xchg scas mov int3 call push push lcall mov (bad) adc pop and call ficomp iret cmp cmp adc bound xor and xor sub int3 (bad) in dec scas inc ss cmpsb dec xor call addr16 push (bad) mov stos mov sbb rclb sti sbbl inc inc mov cmc outsb es mov cmc repnz ljmp mov hlt (bad) xor lods mov test mov jge sbb dec inc pop sbb int3 fldt or push mov mov xchg mov mov stc ss and (bad) in pop cmp pop outsl fidivl jae into cmpsl mov pop fistpl popa mov (bad) dec cmp ror or or dec cmp add jmp push jo popa sbb push xor adc fnsave int int3 mov inc push jg mov mov int3 pop adc rcr mov imul mov inc fsubrp aad push pop xor mov mov mov dec out or cs ja xchg repnz lea mov mov arpl and mov xchg mov pop add fs in sub in imul testb xchg scas lcall (bad) mov daa adc loope pop or ficomp cmp cmp xchg pop in inc jg mov sahf adc pop sub sbb add fsubrl push mov arpl dec xlat enter pop rorb sbb cs scas arpl mov jg lret fs leave xchg adc sti fildll push mov pop pop or sub mov mov lret mov xor jle popf pop xlat ret push xor mov or negl xor dec test inc xchg and add cmpsl cmpsl das mov dec sbb jo es sub inc push push stos fdivrl out sbb sti call mov cld cld add or dec fmulp push ljmp fisubl pop and enter loopne inc add cmp enter fsubr arpl sbb lahf (bad) mov jmp lock lahf and mov mov mov aas ret loop jp pop or std loop mov lods lods mov dec (bad) or inc repnz mov jo test cmp xchg sub outsl adc xchg pop lds stos mov nop sbb dec std in hlt add daa or jle jbe ja data16 aad add cmp adc jo xor xchg mov lds mov jg pop imul js test jns out jle (bad) pop cmp (bad) add loope leave out enter fnstsw int cmpsl inc mov popf cmp xchg or int3 stos xlat push test mov jne mov sti popf sahf fldt mov mov mov sbb orl pop fsubl repz pushf jb test ljmp repz les add mov outsb loop std add iret ja push js cmpsb (bad) (bad) lret sub jb mov inc movsb movsb iret sub fwait ja inc (bad) pop and pop mov cmp xorl or jmp lret sub adcl sbb sub jne fidivrl mov cli and dec aas and das inc fist in pop lds jae pop mov insb sti sbb cltd mov (bad) or or jne div lahf movsl xor sbb inc add mulb (bad) bound inc clc cmpsb xor leave dec loop enter lods bound pop ficompl add ficomp popa jge jge push mov enter mov push jg in (bad) shlb out push repnz scas jnp cmp cmp rcrl shll ss (bad) sub fidivl fmull je add adcb out ljmp adc xor cmp or dec mov ret lods xchg aaa inc xlat les dec push or jns rorb xchg lods cmp add add sbb incb jp dec in and cwtl lcall loop enter and and push xlat repz stos ret sub or pop and push fist cmp inc jo mov push and andl inc jo scas xchg push mov mov push inc jbe adc rol jmp xor int3 lods insl xchg cmp test and jg mov out push push fist add aad mull push pop and sub or or mov in (bad) cmp fmuls sbb push adc push fbstp cs push pop es or xchg (bad) movsl xor les mov int3 fnstenv mov or stos cwtl jg add stos lods in cmpsl icebp divb in or ds sarl je adc cmp stos mov sbb xor imul lds cmp not sahf (bad) cmp mov mov in mov cmp (bad) iret popl nop dec xor add xchg cmp mov or pop mov (bad) popf std and test je popa adc fsts cmp hlt jae movsl mov icebp icebp inc mov mov stos lea jno jmp dec aam and pop mov testl repz ret jo add xchg inc ret je jmp ret insb clc add lock stos jbe pop adc lock adcb and mov nop and movsl inc xor and loop push pop add roll lret dec sub mov cmpsl stc ret jae icebp aaa jge outsl bound out fnsave test dec popf and inc ds pop call push mov sub xchg jne cmp xor cmp imul arpl out sub mov cmp mov into mov ja xor inc (bad) or sbb mov xor fcoms fimull jle mov add mov xchg sub fs sarl in mov out mov aaa pushf (bad) xchg std adc lods icebp (bad) outsl xchg dec pop mov nop cmp (bad) mov sub fldenv jl out push fistpl push aas sbb sbb test ja push xchg sub cmp dec jbe test sti add or push insb push in cmp dec out sub mov sub inc dec aaa ljmp xor ja out gs jg in sub mov sbb orl jmp dec jnp mov insb es adc cmp cmc rcl leave dec in sahf in imul ret movsb sarl or and push add js inc sbb and add push and jo stos ss mov pushf and jmp dec out and int3 lods ja shl jp push mov mov fld push lcall push jp fisttp mov pusha mov add mull xorl je jo jp hlt shrb cmc mov leave mov incl mov xchg sbb out and push (bad) sahf push xchg cmp mov mov cld mov rorb lods shrb push or add fbld mov pop xor lock push sti sbb mov pushf mov mov ficom pop ret cmp lahf dec (bad) and neg xor xchg or add fadds iret sbb xorl jnp push jg test push mov jmp inc mov bound dec sub push leave sub out sbb shlb pop ret mov add pop inc ret jmp insl xchg push lret loopne test xor inc int leave imul mov mov push push lret mov inc sbb inc add add pop sbb int (bad) push lds fs stc add in mov sub call notl xchg in sbb jle (bad) std jne sub sti mov (bad) enter dec add xor inc cmpsw push mov mov movsl jnp xchg neg test push sbb jno popf test jno push pop test ret inc pop and mov sub jl mov jmp (bad) pop aad (bad) loop sbb das test repnz nop daa xor sbb rol push and gs cli stos movsl jbe fisttpll mov mov fstpl dec sbb rolb das bound or imul out ret mov xchg sub (bad) ss lret pop dec pop stc jno push out adc je repz mov (bad) cli (bad) mov jbe int3 mov in out repnz inc dec mov repnz or (bad) cltd add shlb sahf in roll lret sub nop inc and jbe mov clc push rorb sub cmp rorb push dec ja mov inc jecxz and inc dec dec xchg rorl xlat or add xor (bad) (bad) jecxz lock fwait loope cltd pop dec inc xchg cmc dec rorb adc insl (bad) xchg pop add lds (bad) jno xor push les loopne mov push aad and add sbb orb in adc bound inc enter xchg xchg xor push setae lret repnz or sub sub cmpsl scas pushf aam out sub jg mov jne cmp fildll and lods pop adc ret inc hlt add inc hlt mov sbb xchg cwtl cld int jp mov sub xchg dec sub sub mov adc add mov daa mov lods fidivr (bad) add cli mov pop adc bound add sahf test fsubrl cltd insl lahf sarb pusha xlat jmp jbe inc mov add loop xlat add push lods mov xlat arpl mov sti mov dec cmpsl std cmpsl test sbb or mov adc adc mov cwtl and push orb lahf dec popa aad push push jle shrl mov insb ret nop xchg dec movsb ret xchg orl (bad) (bad) sarl je mov and sbb (bad) sti es mov (bad) lea ja lahf fistp mov inc movsb fidiv push ds xor stos aaa in into into jmp or mov dec js pop pop sbb nop scas inc test mov xor ljmp aas mov mov popa in push jmp jne in sub cmpsb xor pop lods popa mov jns dec push jns outsl inc (bad) lahf lods lods pop sbb sub pushf enter push jl mov and shrl test jo repnz fistpl xchg add mov stos fstps mov out mov ret aad jb push insb xchg int3 fs lahf xor popf shll cmp jg and push xchg insb nop loopne cwtl sub jnp dec (bad) push and aam mov mov or cwtl stos mov (bad) ret cmc int push dec mov xorl clc repnz aam lds add and (bad) add and rcll movsl fst mov push dec push sbb fisttpll lahf xchg inc pop lcall and out in imul dec inc imul addr16 loop mov pop fsubrs xchg aam cwtl daa popa bound or out xchg cmpl test mov int3 lret mov inc scas insb std jecxz cwtl shrb fs sub sub pop test push dec out mov sbb push imul (bad) jbe ljmp popa imul xchg cmc sub xor adc mov push adc (bad) mov cmpsl sbb rcrl jge icebp mov adc aam bound pmuludq fadds dec nop xor sub jp fcomp push dec push mov cs daa fnsave cltd lahf add sbb test mov cmp jle add mov sbb mov scas fisttpl mov divl outsb ljmp xchg fisubl fcompl (bad) (bad) subb mov sar stos leave and int je test pop mov inc fstl add or mov push roll push mov enter repz adc sbb sub roll sbb popa mov (bad) mov inc mov adc dec adc repnz (bad) out pushaw adc sub push loopne push adc imul loope xor sbb sub push xchg xor cmpsl or pop (bad) xor mov arpl imul jne xor cltd sub test sub cwtl jle (bad) jnp pop js inc pop (bad) mov mov push pop push push add dec mov fstpt sub sub xchg jmp popf std xchg call xchg xchg adc mov push test rol out movsb sbb stc mov mov ret shrb mov call or adc mov test xchg sub and sub sti ret int fldt rolb push cmc (bad) lret lock mov (bad) jne repnz jmp add cmpl cs cmp loopne jmp scas dec mov lret insl insb mov popa shrl ret repz fwait sub pop fisttpll dec pop fincstp fmul (bad) cmp sbb add sar xchg lret mov pop mov (bad) xor fwait xchg and pop jge fisttp cmp outsb jecxz or std jp js mov lods call jo sub xchg adc xchg pop lcall out fsubr mov push enter (bad) aam (bad) lret add lea fisttp dec bnd pop ljmp cmp add (bad) mov push std cmp out jnp and sar stc sbb or adc int3 imul insb pushf dec xor lods push xor inc int and xchg push sub mov pushf test mov stos (bad) jb push ss mov mov in cli mov jo loope movsb imul ja test (bad) xor stos add (bad) mov dec std pop mov xchg adc jo lock cmc push jne pop mov xchg inc js adc xchg push aas pop (bad) push push mov push jnp iret inc jge imul and mov sub add jne or mov test jae mov mov dec add push add mov push inc cmp es inc in sub cmp xor sub int3 sub lret mov imul sub (bad) jae das cli cmpsl inc cs pop mov dec in hlt lret xor pop int sbb dec sbb cmpsl call dec testb or lods inc insb bound xor push pop inc sbb sbb mov in inc ret stos inc lahf add adc stc rcrb pop cmp dec xchg arpl sbb inc in aad cs rep outsb mov push or xor push pop cmpsl into push in sarb fmull mov xchg mov and fldt int dec jle clc into lret or cmp fstpt (bad) xor xchg jns test andb mov pop jbe pop mov push xor xor adc fdiv dec loop loopne or push xchg jl pop popa mov add stos aam ja mov push push pop loope push arpl stos xchg cmpsb test (bad) adc sbb (bad) leave jge push test or push mov ljmp (bad) xchg jnp sahf sbb enter mov push popl out rorl dec lret outsl push int3 mov sbb mov add xlat test mov jp (bad) mov adc add hlt push adc adc xchg loop push push sbbb pop rorb push int3 inc inc dec cmpsb sbb cmp dec pop adc mov aam mov mov pop adcb popa push or dec xchg jb sub mov jmp mov (bad) pop xchg or mov cltd or sub loope int3 fnstsw fucomi repnz cmp sbb xlat mov push pop mov dec fdivr dec jmp ja add outsl cmp mov pop pop mov xchg xchg xor loopne (bad) daa mov push cmc dec jg dec jle mov mov loope pop sbb pop adc (bad) push outsb inc pop (bad) jae rclb out (bad) xor inc lahf lcall lret sbb rcl sbb int out sub (bad) push and mov and add outsb sbb stc fnstsw and or push out jg fildll inc inc iret dec repz xchg (bad) cmpsl (bad) add inc cmp fwait add cmp clc pop icebp pusha jecxz and dec repnz movsb pop and push xor dec xchg scas cmp inc bound (bad) popf sbbb loop imul enter push mov movsl das fbld sti sub leave mov fwait test sbb cmp mov jecxz adc popa mov lret cld stos das and xor dec inc mov out (bad) fcoms out test xchg addr16 jp mov cmc push sub adc push movsl rclb sbb mov sbb lea inc xchg mov jnp ss sarb jmp pop xchg mov inc (bad) mov add (bad) rolb (bad) clc cld fdivs or (bad) inc bound cwtl add dec jmp jl mov popf movsl mov scas pusha in sbb adc jbe mov jl push push xor cmp fsub int3 decb dec adc fwait or push mov add lods xchg mov pop xor xor rcll lret xchg test cmpsl fiadd sub js cmp dec dec jbe push shrl outsb jp push xor add jns add sub in pmovmskb test mov nop cmc (bad) mov lret insb ret xchg lret push xchg fmuls out jno lcall sub or bound cwtl lds mov nop or push es cmp inc pop mov inc loop cwtl into rcrb andl fldcw add shrb dec mov push out mov cwtl push jl sarl mov and dec adc loop add cmc adc or mov sbb pop fdivrl fdivr sub adc cmp lret int cmp cmpsl (bad) punpckhdq aas data16 ret cmp clc jmp sbb fldt icebp mov decb leave xchg inc or pushf cli ds sbb dec xor lods add js dec xlat cmpsl cmpsl lret in push cltd lds lret arpl std mov inc xchg xor les popl lds les or lret shrl fcmovnbe stos sbb xor xor push sbb jp add cmp push jecxz push adc or mov mov dec jge sarl jmp xor add stos mov cli xchg in pop push jecxz (bad) xor loop (bad) xchg pop jo scas or fidiv and cld aam push adcl aad mov (bad) xchg test test mov xor or inc and and cmpsl jnp pop ret inc push jge cltd jle xchg aaa sbb xlat pop and repnz enter test shr mov jno sbb into pusha jnp (bad) push fisubrl jno dec inc lret adc xlat pop outsl cld cmc loop jl sub ja movb xor ret in jl xchg clc scas clc jno cmp es aaa inc inc dec movsl inc mov es and mov or xchg es cmpsl repz dec jmp imul sbb enter xchg push cmc xchg xor sbb test stos (bad) stos (bad) leave popa mov rcrb stc lret xor push mov jnp push idivl dec dec pop xchg push jbe movsb mov add sub adc mov ficom mov fwait mov mov push adc mov mov xchg xchg mov dec sti mov adc add lods int3 cmp cmc dec inc cmpl or inc dec aad or outsb into clc loop mov enter fsts aad mov stc jg inc xor addr16 jo test sub sbb int3 jne and (bad) sbb aas cmp mov cmp lods (bad) je aad or adc xchg stc enter jecxz test das pop sahf sub mov imul rcrb jb call aam int3 lock sbb and rclb and dec shr mov sbb test out mov xor dec push out mov or push cmp movsl sub jle pop lcall jnp push sub outsb mov sub push inc addl das out jne mov jmp mov (bad) mov mov fwait mov pop mov xor mov stc pop iret test (bad) (bad) clc loope es lahf and mov mov cli movsb ret add xchg jns cmp cwtl xor pop aad mov clc fdivs arpl cmp clc pop rol scas sti cmpsb fidivr cmp inc or push lods dec fstpt popf mov or (bad) jnp xor cmp lret mov enterw xchg int push and jg xor aas mov cld push xchg or arpl shlb jno int3 out xchg xchg mov mov sub or clc mov mov xor mov jg movsl scas cwtl sbb jmp push mov pop mov jbe mov jecxz iret jg or daa mov rcrl (bad) ss add adc pop stc jo (bad) jno sub data16 push xchg cltd xor aam aas adc cmp adc dec (bad) lods incl ret fdivrp jecxz imul push or repnz sub fisttp cmpsb in mov iret or sarl or xor fistl pop jge mov sbbl cs sarl sahf jne xchg bound addr16 ss fldenv sub pop push out pop inc push xchg test jmp or sbb xor (bad) loope jl jo mov jb add ljmp insl aaa or inc sbb (bad) mov cmpsb jmp push jbe cmpsl mov div jl and sbb xor imul (bad) fstps out cmp xchg cld or ret cmp mov xor xlat fwait (bad) aam cmpsb adc ja add and (bad) in out pop idivb adc mov mov jecxz imul push data16 call jnp mov adc dec inc jne es cmp and shrb add jle in mov lret sbb scas adc mov pop popf (bad) in mov fsubp sub lret adc xchg and xor leave in in mov fldcw lret sub xor adc pop rclb cs (bad) addr16 mov lea push out cmp (bad) and out ss inc pop jmp insw arpl test jbe sbb sar mov inc or scas sub hlt notl pop cmp push sub dec cmpl repz jb fcmovnu pop and and call scas cmp aaa mov sbb add and jecxz push xchg pop insb adc push and push jmp fstl lods clc xchg mulb inc aas xor or pop mov or (bad) cmp dec rorl fistpl cld stos int3 and push js jbe and jb ds ljmp cmp inc idiv push and loope mov into repnz ret mov mov jmp outsb icebp andb outsl bound xchg mov push arpl data16 loop daa xchg xor add dec in fcoml mov adc dec sub ret cmp xor add das adc nop stc mov outsl (bad) mov mov xorb cltd movsl lds (bad) mov pop pop test dec stc pusha loop into and push adc push mov push cs (bad) cmpsl ret lcall cmpsl stc push imul rclb lock test lea popa push loopne xor cmc sub subb (bad) int jp fildll idivl xchg daa enter dec dec ds insl mov push sbb push stc sub jb xor (bad) daa int out daa lahf lret sarl jmp cmpsb push mov std pop adc mov xor int3 lods pop cmc cmc push das inc mov pushf inc jbe and mov scas pop xchg scas cmp jno mov in mov mov hlt (bad) repnz xchg leave push jne (bad) repnz mov dec xchg adc pop shlb xor loop pop adc cmpsb fwait xor adc dec or mov and cli dec mov jbe aaa repz outsl jmp dec data16 repnz sub xor jge pushf adc sbb sbb add dec test dec roll cmpsl fnsave pop dec inc ds movsl xchg mov std insl jno loope icebp xor cs in js fucom shlb push mov loope lahf lods cwtl enter sbb lea js (bad) xchg scas fild xor fwait cld jno xchg cmp adc pop clc ljmp sub mov int3 and andl psraw nop jp pop std mov rol cmp push push mov lret lcall cli mov sub aaa int xchg outsb in push sub push mov push inc test or in jno sub or icebp cmc pop into xor xchg mov jg adc rcr fmulp cmpsl pop rcll iret scas pop int pop adc std inc sahf repnz inc loope std or stos iret pushl xchg movsl test cmp in fnstenv inc les push jns pop je out and push adc lds mov push outsl arpl cmpsb jmp (bad) cmc in or adc inc popf stos shlb inc aaa inc fild movsb xlat decl mov or test stos daa and sub clc sub mov aam mov mov (bad) push or leave xor sub adc shrl movhps inc test mov push into js sbb outsb shrl mov sahf adc dec insl pop jle les iret sub and cwtl data16 cs movsl gs cmp into lcall xchg xchg (bad) pop notl add mov fcmovbe dec jb cmpl pop jp sub decl lods cli jb xchg sarb jle mov iret or and cmp mov inc mov mov ss das popa pushf mov aam das dec movl fimul mov jl pop add mov (bad) rol push inc xor rcrb inc xlat scas inc iret inc (bad) loope aas sub out lods inc stc mov xlat fdivp inc jmp fstps dec xchg sub es stos cmpsb test mov idivb mov xor xchg pop lea stos mov pop test arpl or xor xchg jmp inc std scas jle aaa pop dec pop or mov mov sub sub push pop sbb fwait icebp push pushf (bad) adc (bad) sub xchg imul jp lcall push hlt or stos jp mov push lods mov iret gs mov (bad) dec scas inc cmpsb iret dec aas pop in xor daa jno cltd (bad) xchg xchg mov out mov loope mov lods movsb addl dec xchg push sub out sbb cli inc lea jnp cwtl lahf push (bad) jae sbb pop ja dec popf es adc aam clc push mov mov iret pop lea cmp fisub xor fdivp jle fild adc push leave xchg arpl add push aam out (bad) insb add or inc pop xchg pshufw roll pop ljmp loope xor in stc rclb mov mov fldl and inc test pop (bad) fs add sahf out lahf mov lcall fidivl adc sub leave test insl loop push and and xchg scas lock ss fs push adc loop dec push pop cltd and or pop iret into jae add dec and jno gs sub sub jl jecxz out and inc adc pop mov xchg mov and mov sub jp mov ss adc rorb lods (bad) repnz int3 xor push dec pop mov ljmp mov bound leave das aam mov sahf mov setnp loop push xor push addr16 jl cwtl cs cmp ljmp repnz lret stos jnp push dec es sub xchg call insb lahf mov cmp in insb icebp add mov mov or pop mov leave jo lahf push leave popa fcomip in push lahf iret mov xchg adc jo cmp int add nop loop jg or test pop dec iret arpl xchg std xchg test dec scas rcrl mov push mov int scas lods lds and push stos and jp (bad) cmc xlat jge shrl lahf jbe add je jae pop or (bad) daa rorl adc and clc sub add sarb fucomi test pop lock jge pop ds jo aad and out stos out mov pushf mov (bad) mov imul mov adc clc test and mov dec fucomip iret push jno cmpsl push lfs cmp and push push push pop arpl stos cmpl xor jecxz mov dec pop xor push std sbb fcomi aas sahf sbb mov pop sub jns dec add dec cli sub jb clc mov fidivr mov pop sbb test and idivl jmp or sub cmp ljmp mov in mov jo jl fcomps (bad) add js push sub lock loop call leave adc fmuls scas cld popa lcall mov lret scas add in movsb lea nop aas aam test in mov mov pop mov inc addb and pop movsl imul mov repnz add cmpsb aam (bad) lock ss aas xor pop addl mov add fsubs int fnop mov sarl push adc push ret sarb and pop and cmc aad and pop ds cmc mov mov pop sbb mov pushf rorb mov test push fcmovu lret loop or add push in decb inc out push and add movsb aas or in pop roll push xchg mov jno data16 in ds xor pop and mov pop and mov data16 (bad) fbstp adc nop sub lds in aam xchg aad xor jmp mov sbb (bad) shr fstps xor sub cld ds movsb mov push or (bad) or xchg add inc (bad) jb sbb jne sub or cmp xchg lret inc test mov sub je push add popa or push mov leave out cltd lea data16 adcl cld cmp lret push jecxz xchg mov or dec or test sbb push mull jb inc pushf xchg ss xor pushf xor jno or shrb das mov cmp les fwait dec into mov fwait movsb popf push push ret or in outsb add in bnd add dec fwait xor out mov je scas addr16 add in scas in xchg sub insl pop sbb dec cmp or pop inc adc les aaa out mov dec in std push push mov mov xchg jmp inc scas xor out and loope loop (bad) dec mulb sbb jl fcmove ret leave mov test adc aas pop jmp jp jecxz dec cld dec mov mov icebp and subl (bad) in pushf mov push aaa mov repz xor xor add lret push stc add incb mov and out (bad) into inc sbbl divl insb xor sti dec xchg lret outsb stc adc out icebp pop jo mov mov mov jae inc dec xor xchg imul sbb cmp std xchg inc inc mov mov aad je push cmpsl call outsb cmp rsm lahf mov call push push push js sub lret scas insb cli aaa jge add ss mov mov push mov ror scas cltd psubusb sub icebp inc dec pushf out sbbb push les cwtl mov insb gs mov (bad) and iret fstps dec add repnz movsl in insb daa mov mov stc test inc pop in out data16 dec mov mov dec jo xchg sub lock in inc rolb or mov jmp xor leave out inc xchg (bad) aaa loopne pop aaa jns mov inc inc out cmp sti push fcmovne sbb (bad) pop add ja stos inc push cli pop pop popf jne lcall addr16 es inc add mov arpl lret lcall cli jne popf and mov scas inc mov dec and shll mov jne in std popa push mov aas hlt movsl jnp push sub fcmovnbe mov int loop push jnp push enter xchg xchg adc mov cld ret outsl jbe xor mov mov aad jg adc fdivs mov lahf inc jp inc cmp xchg mov inc adc mov add jmp shlb insl lcall into and jecxz or imul push and in adc out push in adc (bad) fiaddl mov and xchg mov and push add scas es xor cwtl cwtl jge fsub insl cmp out stos inc adc sti (bad) les iret in ds sbb adc mov sub lds les push jecxz add aas mov imul leave arpl scas testl cmp cmpsb mov xor add cwtl lds ljmp cmp (bad) cmc push jmp in lret dec xor pusha cmp int iret loopne cltd icebp mov aaa imul mov or cmc cs ret sub cmpsl movsl adc loope fcoms divb xchg fnstsw cwtl jns xlat mov cmp loopne test jmp in iret xchg fs pop jno (bad) push push cmpsb add aas jg push or add aam (bad) mov pop lods lahf fild outsb std mov ss mov (bad) jb adc cmpsb pop push cs and (bad) ds sbb cmp xor dec sub or or lea aam pop inc adc scas adc xchg popf aad cld mov stos jmp addr16 fdiv push inc pop dec inc lock aam push imul jae into ret mov mov inc pop push or push insb and and testl sub ja in add xchg or cmpl sarb lahf xchg repnz push test (bad) repz or bound lcall jl in loop arpl push cmpsb cmp das add (bad) jns mov sahf add xchg xor scas mov pop mov push mov dec mov test adc sbb icebp mov outsb jbe inc pop stc aas mov add in dec mov fmull add daa call or or dec (bad) movsl mov or cmpsl out leave mov sarl je sub inc or int3 mov jnp push jnp fmul insl lea std fcom cmc or sbb mov xchg popf stos sbb xchg popf jmp add mov xchg adc add sbb mov pusha mov cmp mov jns or mov xchg aad mov mov jg rcll divb fs dec loop and mov jb add into push shrl sahf inc into icebp xor cld out xchg inc clc idivb dec add jae loop scas lcall (bad) loopne scas int stos cmc sbb and nop ret pop dec lods mov into mov movsl pushf call test pushf xor cltd xor out inc (bad) es ss inc jge or cmp popf out lods or jnp mov or adc xchg pop into add (bad) out pushf es adc dec divl aaa mov (bad) aaa dec push fldl test inc jae scas mov cltd mov xchg daa mov add push rorb dec pusha and sbb loopne stos test cld mov push into mov or mov in out inc fstps stos sub cmp push lret push shlb xor xchg lcall loope (bad) jecxz and dec fst mov mov jns sbb jecxz testb iret mov repnz stos inc sahf fwait js push xchg mov insl gs mov fs outsl sahf add (bad) and leave xchg sub ja push in and ret push mov xchg clc cld or imul sub ljmp and jg inc push dec (bad) into (bad) jge gs push or xchg pop es sti push fwait imul xchg inc dec or pop sub mov iret mov (bad) xchg push int3 popf daa xor test or dec xchg jl ret lods decl enter push imul dec cmp sbb ljmp xchg adc fistl movsl mov mov xchg (bad) out pop iret nop fcompl sbb cmpsb jmp aaa jp out std bound (bad) imul and movsb and out scas lock jno aam mov pop icebp inc adc cli fadds and xlat or (bad) xor jg in jl add pusha mov and mov push pop in cmpsb in add stos jl stos pop push xchg mov jmp imull sbb inc xchg dec pushf jle aas ss and mov xchg mov push fwait add cmp add icebp arpl in cli lret or jge shr dec sbb sub shrb mov outsb add loope (bad) mov xlat push aas aam sub mov loopne adc xchg cmp icebp sahf jnp ds sub xor lock inc stos push gs in mov add movsl aas (bad) fidivrl mov inc mov clc lock mov ret fadds imull je mov stc aam jnp into (bad) in leave xchg dec aas cli daa mov repnz jp sti out dec pop cmpsl push jecxz xchg in jo lret jo xor push lds mov jmp xchg cmpsl mov xor outsl jbe mov lret popf and in push jns push cmp push sbb sbb sarl pop and stc push jl cmp jmp mov test mov push in mov ja,pn (bad) in sbb xor jg or daa stos jmp sub (bad) pop inc xchg mov jns cmpsl icebp inc sub stos xor leave sub and mov enter dec or std mov sbb mov and sub pushf pop xchg mov lret sahf rclb (bad) or mov daa cld add shll lahf cmp jno adc das mov into mov ljmp and xor fbld sbb mov jg sbb jbe (bad) (bad) (bad) pop fidivl push mull lds xchg ljmp jle daa cmp imul adc xor or mov push loopne aaa sahf lods xchg mov mov add int daa cmpsl and inc pop xchg mov movsl inc inc adc (bad) repz xchg pop enter mov insl pop enter inc xor addl call push (bad) (bad) cld mov pushf repz ds or shrl fimul js cmpsl mov (bad) (bad) push adc (bad) sub daa popa movsb mov and mov call xchg inc into dec ja dec jecxz push jl dec sbbl jle push inc dec mov lcall mov les mov int3 cmpsl loop inc das popf xor call rcrl rep (bad) push fcmovu and popa das mov sbb subl jp cli repz push inc dec (bad) icebp mov rorl enter pop push mov lahf push push pop imul jmp mov pushf mov (bad) js xlat jbe hlt (bad) adc sub stos inc add lods pop es popa xchg push in push fldenv mov pop sbb loopne int bound sbb jbe mov call lods mov bswap outsl inc add divl in mov ret outsb and hlt (bad) bound cmp jo mov into nop mov push sub sar adc push out sbb jp lcall fimul xchg sahf adc sub js stc adc lahf dec jge lds xor outsl fisubrl cltd dec mov or mov icebp adc mov std add repnz pop into or cli in xchg push push and test cld lock lock ja inc imul inc aad push inc shrl push (bad) addr16 test xchg or push cmpsl dec xchg call or sub or mov push gs stos cmpl push je popf jbe ljmp xor and inc sub xlat call addr16 jae insl icebp aaa in test push (bad) lods or cmpsb add es xchg pop and test mov inc fnsave ficom sti int3 les repnz mov inc inc pop add jecxz leave pop (bad) ljmp call shrb adc or (bad) dec pusha leave add fldcw or imul push addr16 pop popf pop lcall pop popa paddb cmp mov jns daa mov movsb mov jae test fisubrl cltd icebp cmpl inc ret mov xchg mov dec push scas fsubr xor push inc add mov outsl repz imul dec sub enter jbe (bad) jns push jge sbb clc enter ja sub (bad) sbb push mov imul mov cmp insl fistpl mov xchg fstpl aas in aad (bad) cmc mov stos fs aam add or sbb in sbbl (bad) aad mulb scas jg lcall add mov jb popf out cmpsb cld dec lods dec jg mov jae imulb mov pop push jecxz test daa or mov fildl enter push inc push movsb ja call xor xchg out sbb jmp jnp outsb hlt popa outsl es repz fbld lods jno aad and cmp or (bad) dec arpl es stc mov jae fmull sahf stos inc dec cltd inc rolb ret mov es icebp nop in std fidivrl inc flds pusha dec lea insl icebp repnz jmp jle test pop xchg (bad) icebp loop dec xor xchg mov scas fsubrl jecxz das sub cmp int lods lret not jle inc jne imul clc add push jnp (bad) adc jecxz mov lret ja inc push sub push std (bad) (bad) adc aam jmp popf xor js sbb add mov push sub cmp mov inc cmc fwait sub xchg aad mov dec popa nop xor mov dec addl and into clc xor lods in and mov bound jge arpl aas out inc or icebp pop hlt sbbb mov sub cmp and adc insl fincstp iret sbb push into es outsb js ljmp push fcoml jmp (bad) stos test sarb test into mov inc in mov lds jmp inc jl sbb jp pop js mov fprem1 sbb pop or pushf add mov imul pop xor cmp add push in call call insl popa (bad) out bound sbb gs inc jno push fcomps cmc inc das adc jns fbstp mov xchg insb pop sahf pop inc pop rol lods lret jne stos jge movsl aam inc mov int pop cmp andl push scas jle fdivrp and je mov lods dec inc ret out rcll in (bad) pop in mov xor lret xchg adc ds pop sub adc or sbb jmp in lea movsb fucomp push aas pop pop sub rclb cmpsb jge cwtl and dec or shrl pop leave xor fs mov idiv xor daa ret pushl jecxz xchg jge into or pop cld xlat xchg pushf xor sub pop test cmp sub adc loop movsl in flds scas sbb mov sbb mov jecxz sbb in add mov add into inc test jo dec push dec xchg xchg test push mov loope and shl inc out adc mov pop push mov je lret push roll subl sub mov add outsl sbb in fucom mov sub sti jno cwtl mov jmp pop inc mov jne jge sub mov cld xchg rorb lret pop pusha lods jno and add mov fdivrl (bad) ljmp mov clc cmp push jl jg (bad) pop lods push mov imul (bad) sub adc add push add in cmp mov xchg add call aam ds ret jg mov std sub sti fsub jns faddl lods sub jne mov int3 adc incb das (bad) nop mov inc into ret sub outsb jle aad cli pop lds jmp dec scas push xor pop mov imul jb add mov xchg fcmovbe stos call mov add cmp (bad) cmpsb jne sub (bad) pop pop jmp sub out stc dec icebp jg mov shrb enter aaa and dec sbb cmp cli shrb imul sbb pop push jmp push aaa mov out shrb add and ljmp push (bad) push jae add cli shl bound ds (bad) icebp pop test xor popa and xor loopne xlat jge stc sbb xchg or (bad) loope dec fistl test cmp xchg mov repz dec dec js pusha mov pop in jo jecxz pop xchg sti sub dec (bad) jne je jle data16 pushf rclb (bad) call rorb jmp sbb (bad) dec or pushf mov and cld push ljmp rcrl dec shlb shl pop fbstp xchg loope cmp mov jp (bad) pop lods insl dec cmpsl jbe (bad) int int stc rcrl aam mov jnp ja sub dec sahf jo sub pushw jns and daa fldt jo int pslld pop sub fsubs call jbe pop sti test cmc daa pop adc xor jns pushf es jge push je jecxz xlat jmp pop cmp sahf sbb jae pop inc int inc mov xchg sub div int3 scas das xchg fwait call into movsl ja cmpsb jo push cli mov gs push inc xchg lcall sub (bad) test pop mov repnz (bad) and cli lcall adc push pop jo lds xchg or xor out outsl dec or or daa xchg lahf adcb pop mov std add out push leave sbb test sbb mov lds add lret ficomp sahf xchg xchg (bad) adc fstl jne (bad) sarl test std dec dec dec test repnz pop jbe jle stc push dec xchg dec push push ja (bad) add or shlb cmp sub push lea test push je xchg das dec lds cltd mov sub sub lret mull in mov out ret repnz sub sub xor rcll ljmp jg mov clc loop test sub jmp sbb arpl call push jp ljmp jg xor (bad) xor aad mov pop xchg dec lods fisttp cmp mov jl leave outsl negl std mov push ret mov jmp jge das repnz stos fisubr inc subl jg mov push mov pushf lock mov notb mov xor jmp pushl and add ja sub cmc dec aam decb pusha or int3 add icebp ror rorb sbb leave dec bound aas outsb test pop stc sub push negl ljmp jecxz int int3 sub pop ret lret cmp xchg inc imul mov add dec (bad) out fwait push iret and adc fcomps addl js stos mov add inc adc fldlg2 or sub cltd mulps inc sti xchg leave add push (bad) xchg inc mov pop stos aad mov pop (bad) add xchg or push aaa daa lods sar xchg mov fcmovne jnp mov mov add mov jns mov inc pop xchg fistpll (bad) (bad) mov data16 and stos les push pushf jns xchg pushf scas mov push mov jl int (bad) inc pusha test push std sti xchg inc dec ds push fcmovnu sub sbb sbb add jmp and lret rcll jle call xor aas mov push in insb (bad) repnz jo in inc xchg sub in out sbb (bad) fimul sbb loop inc xorl pop and fidiv lock inc lds rcr (bad) outsb jnp bound push lahf lods and or insb sbb jecxz aad pusha pcmpeqb jne aas clc xlat (bad) ljmp xor fsubrl fisttp push or lods call sti adc mov ret or stos sti mov mov out jecxz lret pop cmc lock inc mov jge fwait adc (bad) xor mov mov (bad) lcall out std outsb mov ss adc les sarb into add and and (bad) addps jmp and push rclb ja and ret aam cmp mov pop pop mov add adc test xor xor stc lods arpl leave sarb pop movsl fucom push (bad) push shl or call push inc lds outsl or pop aas cmp jle,pn ds xchg inc imul (bad) adc loop push sub push (bad) xor sub push pop into lods mov fnstsw lds dec jae xor rcrl xchg mov daa es shrl sub imul rol bnd inc test inc popa lret cmp repz mov (bad) (bad) adc fidiv mov das dec dec outsb sub mov ds cmc jmp mov test inc sbbl (bad) cmp pop in scas and dec in rcr cwtl popf addl dec pop push repz mov inc aas fldcw jge dec ret xchg add push inc movsl xchg inc pop and add or popf jecxz pop cs into mov sahf ss and (bad) fimull (bad) hlt mov cmp cmc stos push dec push (bad) and mov subb mov xchg ja (bad) pop and lahf cmp xchg aad xchg in mov adc push (bad) jne in push dec fs push iret int3 scas lahf bound mov mov sub add add push inc lcall mov lds xchg lret adc stos push adc push inc stc ret and test (bad) loop push sub adc sub loope js (bad) jb adc mov fistpll addl test xor jne ret test jg stos arpl pop hlt test leave outsl cmp es lds fst cmp adcl jnp jns mov jbe push icebp mov mov call xlat jp push xor sub addr16 pop dec mov add inc mov xor or push push cmp jle sbb or out add ja ss or out dec xorl insl roll mov xchg push lods xchg clc or mov popa loopne (bad) outsb xchg imul push lcall mov sbb and rcll cmp add push data16 jmp cmp test inc inc mov sub fs xor cmp arpl jecxz lret jge,pn lcall in sub sbbl fcmovu mov xchg or test mov out (bad) xor mov add xor push dec cmpsl mov and ja cs mov arpl or aam adc mov inc sarb gs into aam inc xchg aam xor inc fisub popa aas push sub mov push pop arpl outsl int pop test out mov dec sbb les repz int scas sub jle add push mov std inc (bad) mov push psubw jp fist or js mov jp loopne aaa je fld or inc scas xlat lock dec pop xchg icebp lea jmp pop cmp jb jmp in bound mov sarb cltd add pop subl in stos xchg enter or cmpsl data16 mov lret shl test push push pop mov push and or jae movsl jnp scas sbb mov mov (bad) fisttpll push push and pop add sbb stos or pop and pop shlb std jns sbb xor cmpsl jnp push jno lea cmp fstpl mov in sbb nop mov test lods add add adc cli addr16 dec adc adc std jge lret jg pop subb ret pop xchg xor popa in push mov cmp test paddw push popa mov mov mov pop jnp loop mov push jbe leave cmpsl mov mov outsb in scas jno mov sahf das mov outsl lea jnp test jno aas mul and lret jne mov mov (bad) jno xor mov mov xor or mov shr mov jecxz gs stos mov in mov scas pop xchg sbb out mov mov dec jle mov pop lds dec or mov jmp lahf ss cmp push insb incb repnz pop pop and xchg adc ret arpl ljmp or push movsl push (bad) outsl add inc sbb lock dec mov mov rcll loope loop fldl incb or das pop sub sbb leave adc les daa xchg leave mov push lcall push int xor push adc lea pop add cmpsb sub movsb xor test fisttpll dec pop push ret out sbb push adc inc ja loope out stc sbb cli pop mov and inc int3 push std iret jno out push cmp (bad) dec faddl xchg push cwtl mov xchg xor lret scas xchg in test arpl repz sarb xlat add or repnz sub xchg loop mov mov or outsb icebp cld fnop pop sbb pop lcall pop icebp gs (bad) cmp test pop cmp jg dec xchg cmp push int sbb mov xchg test dec dec or or push fstl cmp mov pop lods mov in clc sub cwtl insb notl je cmp dec xchg xchg push mov sub je iret dec gs sub in push out shrb nop sub into push testb aas int3 push jb pop aas sub and pop test out pop mov mov fisttpl xchg sbb outsb test shrb std sbb bound xor lahf idivl push loope test pop mov jb pop test mov adc movsl sub and outsl mov repnz and sbb int3 dec pop pop pop lds ljmp lret add mov and iretw adc inc int3 mov sti jae adc jge sbb or cmc addr16 int loopne mov adc mov dec xor clc sbb stos xchg lds adc lock mov jne xchg xor mov dec mov bound jo test repnz inc call and mov movsl pop (bad) shrb scas mov int popa ret cmp outsl jns or lcall xor movsl lods in in xor push sti mov adc test repz push js fbstp hlt dec add cmp lock loop sbb out je,pt sub adc cs gs (bad) out inc adc repz scas repnz mov fsubp ja shlb stos fldenv icebp in ss cli subb incl movsb imul jne clc out dec cmpsb sbb lret push xchg xor pop mov mov push out or stos mov mov add jg lahf and mulb imul cmp lret sub cmp sbb (bad) jp dec xchg cmp or ficoml and xchg clc add cmp mov incl pop sti leave clc add inc mov cltd inc mov pop pushf mov popf mov bound xor xor stos add call les sub pop cmp inc rcr dec cmp push imul and dec in or scas sub popf movsb dec rcrl pop subl xor push fsts push cli xor fwait pop cmp inc jns,pt lret lods ljmp dec mov fldt jp and push pavgw loopne add hlt sti sahf insb jecxz jno push mov cmpsl enter lods xchg mov dec push outsb ss nop (bad) cmc jge,pt push add arpl xchg addr16 repz pop pop (bad) cmp sti fs sub hlt dec (bad) ret adc pusha repnz gs test xor add mov jo xlat dec das xor repz test fdecstp jne repz iret sarb out and aaa jg dec jp inc sti adc mov xchg repz push pop dec push mov jge movsb je dec mov cld ficompl or inc adc xchg adc cmpsb jne cmp sub xchg inc cmp scas push test and or mov jnp sbb in jb stc loopne adc mov pop repz inc ret test jg cs jne cmp out inc xchg icebp jecxz push test sub fnsave push negl push daa push repz sbb lods pusha int3 jbe aaa nop mov add out xchg test jo lret jo loop in rolb mov xchg sub sbb add push mov data16 mov cwtl int adc mov pop lods aaa scas sti mov sbbl adc mov test mov or aas insl aas jne clc scas stc out dec out push push xor mov rcll inc mov pop pusha xchg jns lock (bad) jmp mov movsl mov stos jns mov jne mov sbb push into in xchg repz inc out sbb pop stos jmp xchg (bad) and mov fimull subl inc mov mov std mov cmp scas dec xchg pop cli out cld aad adc cmovns cmp mov push outsb and push xor or cld in mov je cmp cmp xor inc movsb arpl arpl pushl shrb mov or inc sub or mov xchg dec cli fnstenv or cld mov mov notl adc loop jg sbb fbstp xor (bad) fiadd (bad) repnz fwait dec mov (bad) cmp jnp hlt push xchg jbe xchg stos aaa inc aad pushf inc and push mov add addr16 rcl inc xchg push jle rcl mov lcall xchg ficompl xchg cmp mov sub pop je sub adc test in pop pop pop cli mov xor push sub or ret xor lret sub mov dec inc outsb xchg push and imul pop inc and sbb stos cmp mov nop mov enter repz leave mov insb out fiadd stos (bad) das jb bound sahf pusha in dec ss pop in adc pop inc jo aam sub sarl int inc jmp cmovae orl add mov notl sub jnp mov xor ret mov mov loop fwait fs jg mov dec cmc mov jge pop (bad) cmc ljmp push nop pop out and int xchg (bad) in or dec mov push xor outsl jg xchg je int loop mov loopne repz das popa pop jne xchg lods ficom push dec pop fstl lret mov dec (bad) scas nop xchg inc cmc aam xor cmp push clc mov pop jge xor sub mov or xlat and jbe pushf mov inc lahf fidivr (bad) jo pop dec dec pop popa (bad) or cmc push scas jecxz dec and sub (bad) hlt aad push pop out stos mov push inc xor repnz ret jns lret push (bad) imulb pop jbe xchg jp hlt int (bad) jne sti in scas psubusb aam sarl mul movsb jmp push lret xchg incb cmp jb daa push mov mov pop in dec lahf dec push mov inc sti and and enter jo movsb jno jo jne mov out mov push jmp dec or add sub in mov or mov fpatan push xchg add ret cmp test xchg jb,pn jo (bad) repnz sbb hlt pop or aam call popf and rorl js mov mov cwtl repz push loope push jmp and sub sub movsb rorl jnp popf jbe or scas popa (bad) mov iret sbb mov imul pushf add lahf insb popa add arpl push push mov xor inc mov cld xchg arpl leave sarl and push movsb es cmp sub inc jle sub mov popf pop push aad add rcl pop jae jge aaa inc sti xlat cmpsb bound push or mov jnp in push xorl jnp push stos shll shrl inc (bad) dec lcall push add outsb stc lahf cmc add gs adc out fcoml lret mov lahf dec mov insl (bad) in pop sub mov cmp into xor pop xor lods outsl mov push inc sub push mov aad insl cmpsb aas aaa cmpsb cmc xchg and sbb inc ds (bad) outsb fistpll icebp (bad) jae or (bad) sub adc cs jmp leave xor mov daa iret inc and sbb pop cmc add daa sarb mov dec add pop in or xor mov fisubr xchg jge mov sub fcomps iret pop adc dec arpl repnz mov emms cmp mov fimull insl jg enter iret pusha inc inc cltd xor mov mov in push adc inc push adc cmp movsb inc movsl jg or negl scas mov arpl mov push rep sub and pop or and movsb js cmpsl dec imul or out jbe cmp jle roll in and movsb sub out cmp push lods std sahf xchg add adc push outsb or dec mov mov rcrb inc mov xchg adc sbb push sub cld pusha mov fdivl outsl popa cmp fnop daa jne movsb (bad) xor inc jg or scas or leave push arpl orb mov fcoms in push sti jecxz sbb pop inc iret shlb out cmp pop test inc adc fisttpl sbb or mov in lods dec aad ret ret clc fisubrl clc sbb cld je popa cmc fnsave ret ret (bad) sbb enter call hlt (bad) cs push inc mov loopne lods mov cmp and add sbb adc movsl rcrb iret stos sbb (bad) mov imul mov (bad) lret das push add xor mov and mov not das jmp test fiadd popa cmpsl nop int mov (bad) inc shr imul adc sbb repz fnstcw rcrl cli push mov inc add inc (bad) dec fiadd rorl dec jbe or ficoml sbb dec adc out mov in mov dec pop outsl mov adc and mov jbe out stos call jne jns pop jg mov rol dec inc int3 adc test or mov sahf pminsw or cmpb cmc js jns xor stc xor lret xchg and insb jbe dec ds negl addr16 push nop xchg cs sbb pop mov mov jecxz out mov dec in sub test xor mov (bad) mov and call jns push inc dec dec lock mov inc pop loop cmp sub or jns insb int3 dec fnstsw jnp push xlat cmpsl out sub dec (bad) outsl addl repz sbb iret xor xor xlat bnd sti push xor mov sub test sbb dec popa test xchg addr16 lahf lods pop xchg js rcll mov frstor (bad) mov stc jne in or and negl pop xor mov inc mov inc or mov pop mov and xor xchg push adc adc sub daa xchg pushf iret cmp pop mov in mov or xchg and mov push ret fldln2 cmpsl push sub mov push out push cmpsl mov or inc pop jecxz pop in bound ljmp mov fsts js je pop sbb sub je arpl rorl cmp (bad) lods in bound cmp xchg cmp jns shrb out (bad) cmp xchg cmp xchg push mov leave adc pop hlt and loope jns dec push arpl cwtl flds push inc and ficomp jno data16 xlat mov rcrl push lds (bad) push jg mov fdivr dec xchg mov stc loop rcll mov pushf insb adc pop lods in fxam test ss lods aaa insl or pop (bad) push pop sbb sub out lcall addr16 aaa or xor fcmovnbe mov pop jbe arpl jl xor fldl ljmp fistl jae push flds cmc sub xchg adc or sbb ror lcall or in sub movsl xchg aas hlt stc inc inc (bad) test cs popf arpl push test sti add jae push xor repz mov flds or mov xchg sahf jg std jg inc adc adc dec cltd cmp fldl sarl xchg inc popf xchg and addr16 sbb mov xchg aad xor mov mov mov cs (bad) loope add adc movsl jmp or fwait cmc dec in sub fwait jmp js fdivrs fidivrl mov imul pop fist lret call int3 inc stos rclb fmull adc push lds leave stc rclb aam jae cmp jns inc jecxz data16 jp out mov adc cld xchg cmc (bad) mov daa pop xchg ret fnstsw push fwait mov mov aam dec and lods ja loope aam (bad) in cmp xor shll inc lock cmp stc sbb loopne cmp std and adc clc repnz (bad) cmc scas (bad) aaa rol loope pop cmpsb push test (bad) and notl in push scas cmp test fisttpll in loop (bad) lret cmp nop cmp push sbb cld dec sti stos adc add out outsb dec jle adc aaa js negl je add adc enter mov sbb int3 ret mulb inc mov ret xchg push scas inc jns in xor out frstor pushf sbb cmpsl sbb inc push mov test addr16 add mov loopne xchg xchg and dec gs sbb mov rol jns or loop mov dec lds outsl or sub lea out lahf subl push out out cmpl notl icebp pop daa jg loop mov sub pop mov int test aas mov sbb cli jl addl inc sti pushl pop (bad) xchg es retw mov sbb (bad) mov jno and std dec lock repz (bad) mov sub pushw and (bad) xor lret mov subl push mov pop in cmp je jne jae bound add inc dec inc mov push mov dec or add sti ja lea das negb (bad) imul and je fldt dec xor cmc in and inc mov movb xor bound jg sbb cmp pop mov xchg hlt inc pop inc sub pop jb push cmc push insb mov (bad) int sbb stos std int (bad) loopne ja popf push rcrl mov mov iret imul insl cmp rol xchg push clc mov fmuls mov cs xor xlat mov push sub adc loopne sub xchg iret std std (bad) sbb into rcr mov insl mov mov cmp hlt cmp push rolb test les pop nop scas fisttpl add xchg mov (bad) sbb and lret ret xor icebp lods lcall push jg push xchg ja xchg push mov (bad) mov dec fldenv movsl mov xor repnz sub pop or lcall imul xchg jnp inc mov test (bad) je inc out repnz fldl (bad) mov stos push out (bad) icebp data16 ret es jecxz imul and sbb fld dec cmp xor cmpl inc pop jne jns cmp cmpsl adc (bad) ds clc dec push inc lahf pop cwtl fisub notb (bad) push pop out and cmc les xchg (bad) adc jge adc stos cli cmp (bad) (bad) jbe push fcoms lret and inc mov pop xor les xchg push outsb push mov add pop push pushl (bad) dec lret movsb stos push jp mov int inc push cli sar adc (bad) mov and cmp sbb ret mov bound push xlat jns (bad) imull je jle scas xchg mov iret lods mov in pusha or mov popa shrl dec pop inc mov mov popf fidivr dec adcl cmp lods rorb cmpsl fisubrl imul movsl xor stos mov scas leave aas in fisttpl and inc fsubs cli pop mov add push lock push mov mov (bad) mov mov jmp popa ljmp push inc jnp sub pop inc enter inc ret adc aad mov xchg dec sbb pop mov out xor mov aam xor xor nop or sub in push je mov jle pop clc and in ja push push sbb dec (bad) jne xor add or dec inc add jbe sbb js xlat xchg push jns push sub inc inc rcr push mov rolb xor lret and test ljmp mov mov adc imul and push ret push mov mov popa (bad) dec mov pop mov xchg mov dec lahf sbb sarb cld add mov push ds dec jno cmp mov clc inc mov test imul push mov cmp jg scas mov jns ret mov jl xchg sub pop inc push dec mov add pop in and add fnstsw rclb mov and movsb mov arpl and mov es mov in push inc inc movsl and xchg cmpsb cli mov sbb push pop pop popf call loopne cmp sub pop and lahf jmp cltd idivb repnz sub lahf xchg adcb lods push loopne or loopne icebp daa les mov add mov les mov int3 ja fwait test cld int add xchg pop sbb pop and insb loope jae sti push (bad) fbstp sbbl roll mov dec dec ret mov add (bad) jne pop dec pop sbb jl pop mov jnp inc jb jae and mov cmp jl sub bound pushl insb dec jae cmpsl inc jno mov inc mov dec jge mov sub mov in incb pop dec jp scas call dec mov xchg pop or or (bad) push mov mov inc jecxz popf mov fbld inc cmpsb add pop jl movsb dec cmp cmpsl iret repz lock dec sub mov (bad) jbe mov pop jno movntq out cmp xchg out divb xor mov fdiv add out data16 jbe push dec jle xchg or push sahf (bad) adc leave xor xor dec mov (bad) xchg pop pop ljmp jle pop clc aas add fwait push nop test mov push addr16 mov (bad) rclb sbb dec add mov out push fisub das jmp or popf pusha dec push push xchg loop xchg divb mov (bad) scas sbb cmpsb (bad) loope movsb xor unpcklps scas adc iret push ret aas out xchg test dec xor pop orl mov dec jg repnz inc lods imul out adc adc jae or out inc add nop inc enter aaa add into pop enter jp loopne dec shrl loopne jno (bad) jno or iret or adc icebp mov mov push cli (bad) jne or xor mov cli ja and ret loope pop jmp sti cmc adc adc sbb push push cltd mov (bad) rorb cli xor push mov jo call mov lahf add (bad) dec fs orl dec mov or ljmp or pop or pop or in ret outsl sahf xor add or movsb mov add xor or xor dec cmc sahf mov mov sub mov cs cmp ret test cmp jbe stc icebp fsub fiaddl idivl inc push xlat in mov in mov cwtl pop test cmp out sbb cmp jmp push lock mov mov test jbe mov sbb pop ljmp or sti cmp test clc jecxz sub into pusha (bad) jp adc sub mov mov mov xor imul popa (bad) (bad) jl mov cmp mov mov in bsf sub ret mov mov test out adc push push pop es daa sbb cmp mov shlb mov rcll loop xchg popa clc outsl xchg dec push and add push mov and cli in or jl or call mov in mov std add (bad) jb divl lret ret jo popf jnp lea mov je outsl fild inc push test xor int3 aaa loopne and popl out lret leave mov xchg sub (bad) dec sahf fcomip cmpsb sub int3 mov push push fs sbb xchg xorl cli mov xor addl cwtl (bad) popf xor push bound ret inc pop imul arpl fadds mov scas mov mov frstor dec sbbl aam insb out out sub (bad) push aas lea in insb lret inc scas adc ljmp inc leave pop push in lock push out dec fcmovnb jb fnstenv push fisubrl orb (bad) cmp mov or sub xchg test sbb iret jbe (bad) mov jo push and xchg les add fidivl cmp js mov in mov lret push mov repz rol leavew in jbe aas push pmuludq pop je fnstenv fs adc cmp lret in shrl inc cmpsl sbb aam lret push xor aam insb jne rol sub icebp xor into jnp dec add call mov cs leave ds pop xor sahf mov insl jp in mov jbe pop (bad) adc xor fldz mov sbb or adc std sbb popa out pop add enter inc repz rorb ds jmp mov mov (bad) outsl add aaa in fwait mov ljmp into xchg daa bound dec insl (bad) pop repnz and push out push push inc outsb mov mov pop cmp call int lret popf cs and aad cli outsb lock out inc jo daa mov cmp int3 sbb aaa cltd movsl cmc pop push (bad) mov call dec or inc push mov scas add outsb xchg sti es addr16 sub mov js push lds into pop fidivl sbb lret jle inc mov xchg (bad) jb fistp dec fstpl addl xchg sbb sbb inc add inc inc outsb mov es dec js je and scas jl cmp rcl xchg dec dec lds out xchg aas mov pop aam sar sahf dec ja (bad) jns fcoml nop iret push mov call (bad) jno test or (bad) dec pop fbstp loop mov jp dec daa aam fdivrs data16 insl and jb loop jb dec scas jmp lahf push mov mov fnstsw or lods (bad) mov inc cs adc cmc inc scas dec scas xor push sbb or loopne dec and pop (bad) std lahf scas std (bad) std mov jnp lods jb jmp xor xchg adc (bad) jne cmp fldt xchg fs out aad in cmc test fdivrl hlt test test sub bnd push cmpsl cld sbb or jnp nop mov out adc scas adc xchg push out test ja movsb fs jno shrl pop inc lock data16 cmp lods xchg pop scas aam and adc loop dec jns xlat xchg xchg cmp data16 dec jne inc push cmp mov or test jbe adc mov pop sti fistpll lret fcmovb push pop push jnp in sub mov fsubrl mov mov mov test (bad) ss push jnp rcrl pop xchg lock fcompl xchg xor icebp pop push addr16 push loopne mov ds retw add dec mov fldcw dec sti pop cmp (bad) ficompl push dec cs (bad) faddl idiv or out xor es lcall mov push iret add mov fidivrl mov std sbb stos loop stos jns xor xor push xor fidiv ucomiss loope test daa mov loopne repz jge out jl mov lahf aaa arpl push sbb push adc jns out les push pop push adc lock mov inc scas pop pop insb pop ret sahf sub and lea (bad) push sub outsl fistpl cmp xor pop gs xor (bad) mov js aam lods adc xor adc pop mov sbb fwait int ret xor data16 mov mov dec adcl push xor outsb xchg dec or ret bound xlat push rorl lret mov push jno mov call hlt sub and mov xchg and or inc push lods mov notl add lods or (bad) sbb ss xor mov pop (bad) xor stos or dec add out je xor nop (bad) adc jo out inc mov jae notl mov stos bound jae mov dec idivb jecxz xlat stos xor pop push mov fsub call scas rorb fnop pop xor call icebp hlt fidivrl add fucomi insb fistpl dec sbb mov and or sbb pop mul lcall into insl xchg nop clc imul outsl fadd and andl jae mov bound push inc int test clc in sub pop xor imulb mov lock cwtl lret pop movsl mov cmp push mov in push inc pushf and push sub out adc iret pop mov inc scas sub adc push lret stos pop mov mov dec fmull aaa ja add jle add stc stos jmp sar mov rcrb xlat or xor push pop mov lea pop mov and pop andl addr16 int inc mov xlat xor jmp cli push cmp xchg dec ss sarl mov imul cwtl jne fnstsw fnstenv jbe and stc sub mov in (bad) data16 imul pop ret dec lea dec xchg mov jmp mov out jnp cmpsb jo (bad) sub jmp cmp xchg clc lds xor jmp mov out adc in lahf dec push sub pop addl imul scas mov dec mov sti push jne push xor (bad) cld mov mov mov jecxz fsubrp data16 aaa mov pop pushf scas sbb (bad) jmp outsb mov scas test cmp je sarl xchg mov jo xchg mov jg iret mov inc jnp add cmp leave or add inc push maskmovq idivl dec jecxz pop xor dec pop cmp lret pusha cmpsb xchg wbinvd popf or sbb mov pop int sub iret nop pop xlat cld xor dec xor jo inc mov xor loop lret shll cmp push mov dec push imul xchg mov fsubrs mov lea gs xor mov (bad) sub add in sub adc xchg sub call aad repz pop sub rcl jecxz inc and push inc inc inc repz push rol fldenv shrb push push xor mov mov mov stc in mov test or in cmpsb popf xchg call cmp out out inc mov out dec fs (bad) cwtl mov fisubr aaa xorl mov xchg stos mull dec ja add jmp push inc xchg icebp repz sbb dec sbb cmc in pop jl,pn outsb push and je mov cwtl aad or or or lcall insb data16 addr16 add push dec mov pop push insl test repz and pop aad bound xor addr16 mov inc lcall mov std inc push adc movsl xchg enter jge and push js mov aaa loop cmpsl icebp jle cltd cmp or pop push outsb push cmp cld (bad) (bad) fdivrl sub pop (bad) cld loop sbb or mov int3 jecxz sub lret fist (bad) xchg mov adc jmp xchg add jb jmp pop adc popf adc gs sbb bound arpl leave mov mov mov cmp adc fsubrs (bad) repz insb shrl jecxz mov mov adc imul lcall hlt mov jo lahf ss mov rcll test push cwtl add sub fldt push hlt and pop xor sbb adc jb pusha mov pop (bad) mov mov leave bound jmp stos xchg cltd dec push push add pop adc jne cmp mov (bad) (bad) cli movsl push or jb sub or adc jb shlb int dec insl xchg jb stos pop or sbb or pop subl or cmpsl sbb sub divl push and mov sarl dec fcoms int3 cmpsb add push and pop cmp sbbl mov aad jge mov bound cwtl sahf mov mov push push mov out mov popa ljmp adc jle xchg cmp imul fwait leave out fs cwtl fisttpll cmp lods aas test clc cmp xchg mov ret mov sub and scas cmp mov inc lret xchg outsl adc (bad) push jmp push sarl pop inc cli (bad) or lahf ljmp clc mov data16 add add jns jg into xchg and ret dec add push movsl decb lock mov lret repnz in mov cmc fldl (bad) call lret push dec sbb insl test (bad) iret in out cmpsb ret sub mov and jle xorb enter sbbb push outsb jp xchg mov lahf or mov push cmc add jmp sbb adc scas dec test jnp unpcklps aam fiaddl ret sbb jge fwait xchg jmp xchg and bound fiaddl sarb dec int3 loop mov (bad) adc icebp push mov jmp xor enter push mov mov sbb fcomip mov push sbb fstl push ret dec push push mov inc (bad) int3 mov inc sub adc push scas in fstpl jp jmp cmp scas push cmc add push scas outsb nop fs jo in icebp fnsetpm(287 pop lds fnsave cli not xchg push movsb repz loop iret enter imul test mov clc pop rolb ficomp (bad) mov jne mov outsl mov jae or push pop lds adc fidivrl jae cs addr16 out mov fld lea mov roll adc (bad) sub dec push push mov pop xchg nop daa es and mov and pop push fcoms das pushf in xor jp ja mov inc or jge roll int3 sbb int scas xchg xor add fwait cli or divb (bad) push and fcmovnbe stos popa lahf mov lahf jb fsubrl idivb loopne mulb jb mov jg leave fistpll push mov int sbb cmpsl mov sbb cmpsl loope mov cmp lea mov int3 jbe divl xchg hlt int3 mov data16 sbb or es outsl fldt (bad) shrd stos sub sub ljmp insb mov ret jbe pop mov or outsl mov into xchg inc push push cmpsl rorl rcrb dec sbbl mov or or (bad) popf stos mov negl fsts in push call in mov jmp popa dec pushf cmp aam imul push inc idivb pushf or sti ds xor lahf cmp (bad) scas mov jmp cmp cmp rcrb ficoml jge (bad) ja,pn pop into mov cld cmp adc adc push push bound rep leave outsb (bad) fsubrl sub mov jge lret add stos pop (bad) dec or sub add insb push hlt (bad) or fmul mov enter mov movsb in and js or sbb ljmp pop insl aam pop mov dec adc insl push mov loope mov jne pushf push xchg push dec fiadd imul jae aas pop inc movsl pushf mov cmp mov ds and lret jno hlt xlat mov jg out dec mov testb in mov push lret pop cmpsl dec lret cs adc sub adc cwtl push dec enter lods xor mov paddq test push hlt jle sub iret cmp jle mov xor orb mov xlat aas in inc jae (bad) enter sub fimul xor push adc iret mov scas in sbb and cltd jno mov (bad) enter cmc fcoml divb mov call jg cmp enter fidiv or pop sbb xor (bad) scas xchg or jmp lret popa mov push adc dec jp sub fisttp or sar fsub cmc (bad) mov std outsl inc movsb mov jnp jne inc adc xchg dec cmpsb pop xor inc inc into jne mov or ret adc cs sub jecxz dec pop popf (bad) mov pop cmp push insb or cmp mov sub or pop stos (bad) rep inc sub leave out inc xchg (bad) add cmc test rolb into (bad) xchg enter mov sbb ja xor (bad) mov push dec insb xlat adcl cmpsl int imul fbld je (bad) xor popf movsb pop std dec push or in inc dec icebp lea jg add mov test sub push fimul fmull popa adc or sub mov lea add cmp pop push push add jb cmp mov and fwait ja fdivr idiv and mov jno cltd test mov adc cmc xorb push sbb pop aas test xor add add xchg cmpsb mov movsl mov cmpsl lds mov mov adc test inc outsb push int3 ja int3 sub pusha push outsl and mov jl test dec das fwait fwait jmp sbb gs out je (bad) fistpl outsb push cmc (bad) sub rclb push rcll mov jb dec inc ret mov pop mov lds mov inc ljmp jp push add mov mov pop (bad) popf xlat in and mov test popf jg sub pop mov (bad) jne cmp cltd setnp dec sti sti xor or mov cmp jno movsb jns movsl das lea sbb xchg loope jge inc sahf std cmpsl out push into popa cmpsl and mov sbb mov mov mov dec adc (bad) adc sbb and push outsl in xchg or mov jp in xchg addr16 js adc les call inc shr cmp insl bound sub adc fiadd jge (bad) in call dec sub call repnz (bad) rorb push jecxz lret xor and push jnp mov lods dec dec jl xor pusha or mov sahf shrb sahf and fcmovne lcall aaa lret jae push cmp mov fidivl mov or jg repnz aad push sub xor push cmp es shll inc push loopne loope sbb pslld mov loope (bad) pop push outsb jl (bad) aam loopne hlt inc ds ret mov jecxz jb roll sub pop jb cmpsl ror lret ret xor inc fmul cs (bad) (bad) pushf cs dec imul push cmp inc mov sub pushf in push ds sbb fwait push cltd mov aam mov movsl sub sbb xor iret lods push int3 faddl outsl mov and out movsw divl xor sbb adc push jl decl das adc mov bound sbb mov lret ret push pop mov inc ss iret stos scas mov pushf repz sub in addr16 mov cmc inc leave mov cmp inc or ljmp xor mov xchg (bad) or ds dec movsb inc jb in in pop test cmpsb pop inc (bad) scas loope inc sbb and pop stc mov mov fisubrl lds or fwait mov aad adc (bad) fist or xor cli cmp in adc lods rorb rcl or xor sub imul pop adc loopne rorl imul pop jnp mov in push jl pop leave aad in inc push and fidivrl fisubrl xchg inc scas jle cmp mov xchg into out mov jns (bad) lods test das out mov lock imul decl aaa sbb idivb cmp icebp mov mov adc xor xchg sub jbe (bad) shrb mov leave pop pop shlb cmpsl lods shrb (bad) loopne push mov fisttp cvttps2pi sub adc xor lcallw cwtl in xor mov insb push push and mov fdivl and outsb push mov or sti test push xchg mov loop mov lret push jb xchg lock push jle aas push inc xlat movsb lods adc jl mov sbb jb popf call loopne sub add sub xchg ss xchg fld add inc push sub xchg sub jbe insb push jnp cmp lods jge in dec cmp (bad) arpl xlat mov sar sub insl and push xlat pusha push inc sarb sub jge dec add stc les outsb stos mov sbb lret (bad) cmc pop jmp cmpsl pop stos push cmp inc mov push ljmp jmp addr16 jl adc pushl pop fwait test int3 fisttpll dec add les scas dec dec push push dec add mov sti ljmp pop hlt ret lret movb xlat and ret jl movb jnp and hlt fmuls xchg dec loop dec inc xchg int xor and push xor mov cmp cmp dec daa pop (bad) add loop fs aad mov sub dec nop sub mov clc out and rclb pop inc pop movb in aaa cwtl adc xor sbb cmp push jle lods mov jmp mov or xor xor aaa and (bad) mov pop push jae test inc push cmp fs test cmpsl stc or mov dec push fs insb adc pushf xchg pop push jle (bad) xchg rorl push (bad) faddl pop (bad) sub popf lock clc loop mov mov lods fcomip cmp daa adc lahf rorl xchg sub in and mov iret mov push push sub push sbb fs outsl ficom mov out roll loope xchg cmp mov scas int3 push jae xor jle and ja push loopne sbb push data16 add ret fiaddl adc jno sbb out xor push inc ljmp and add sbbb dec roll xchg test xchg jecxz not imul push xchg loope mov pushf jmp iret or popa mov aas mov rcll shrb and jecxz add inc inc dec movsl movsb aaa in pop aam or inc mov nop push ja test testb xchg cwtl (bad) xor pop pop adc ss mov push cmp (bad) adc dec andl and test push test mov mov fisubl add add sbb (bad) cmp gs sub jmp pusha pop out cmp jge cld xor sbb lret stc popf dec loope out xchg lods sub mov dec pop mov push push adc fmull aad je jae jecxz push (bad) mov cmp ljmp fwait lock dec pop in lahf lahf push negl popf neg push sub cmpsl pop or sahf mov es cli js cmp icebp and popa stos fcomip movl dec (bad) sbb xchg lods dec dec mov or cmp mov es xor xor enter sti fisubl pop hlt lret fsub jb inc das je test in pop repz es dec and data16 ja rcl arpl add sbb (bad) int3 pop shlb adc mov mov push pop mov pop pop test mov jno xchg dec inc cmp test jle pop push outsb mov cmp rorb push cltd addr16 push adc xchg lret lret mov prefetchwt1 or not cmp js lea hlt sbb mov enter fildll sub or leave xchg jo mov pop sbb movsl movsb (bad) add lret test xlat nop bound mov cmp fsubrl orl rorb imul adc sub lods and test xchg xchg adc xchg scas add pop pop mov and hlt and ss nop jg fimul addr16 cmp mov cmp inc jb mov repz xlat in adc out xor fcoms fcmovb mov mov mov bound lea fisub inc push fucom (bad) pop push arpl popf dec test inc test pop mov pop add pop mov mov cmp jbe mov loopne fs inc or inc into xor enter sub enter push push es inc xchg (bad) and sahf mov scas cltd addl std rcrl pop (bad) adc sub lahf mov ficom les (bad) cli movsl js xor add sub sbb xchg insl shrl sbb aad pop popa das sub xor cld clc mov out or sub jecxz sub movsl push mov xchg and sarl mov push mov or lock rcrl insl push lahf dec jecxz fucomi (bad) stc mov pop adc loope sub aaa addr16 test loop push repnz mov sub lahf out dec cmp add test aas sub mov pop adc inc mov scas ret into push js addb es sbb mov adc sbb arpl pop pop cmc sub and mov loop and xchg inc data16 push out (bad) jo out jo repz outsl cltd jle pushf adc inc pop (bad) (bad) (bad) cltd and mov push mov in fadds lock push or cwtl xchg cmp jbe insb pop aad or inc cli pop outsl in rolb mov mov pop sbb lods xor in hlt mov jg fldcw mov sub pop rcr ficoml jo,pt ret jae lock imul out mov into mul dec pop mov and cli incb test jns loopne into test test stos cmp ret test test add enter (bad) cmpsl outsl outsb jl jmp mov fstp gs push dec jmp (bad) cmp sub fnsave adc jecxz dec mov lea (bad) inc mov pop in jmp jo or (bad) xchg lcall js cmp cmpb add ds inc and (bad) test and adc mov jg mov xchg (bad) push imul je push insb cmpsl xor add xchg shll inc mov dec jae adc jg adcl call jl adc mov insb ss ret cltd (bad) out mov sub dec sar mov lock xor add leave xrelease inc jmp add fcmovnu jecxz sub movsl mov xlat loope mov rorl mov stos hlt lds jl push (bad) jecxz lcall je ljmp mov pop sub rorl pusha in jp fisttpll inc fistpl mov sub or push xor and xchg adc stos loope sbb add fdivrp lcall xchg dec aad aam cmp (bad) xlat popa bound sbb rorb jg mov roll addr16 adc inc sub into xor xchg jmp jg inc dec jno (bad) sbb sub repnz rcll sub add and mov fldenv je fdivrs push fsubs mov mov mov je,pn jp pop mov outsb (bad) mov shrl pop mov or ds (bad) pop ss lds in dec insl cltd shrl pop lods and sbb jnp pop xlat fs fdivs sbb and frstor lock sub jne mov cmp int push pop inc sbb pop mov sbb mov mov jo,pn test aaa adc jmp push pop add push sti push mov mov fs jb mov jo and jns leave sar xchg lods in cmp xor adc imul lods xchg fidivl jle xchg mov lds sbbl aam pusha jns sub pusha fcmovu in inc mov stos cli lret fcoml les fs xchg dec adc jns (bad) lret jg add dec add push mov mov lret mov inc sub and mov xor sbb shlb xor adc and sub rcll push mov lods adc lcall mov inc call xchg jg inc mov loop mov push mov (bad) jo lock stos add dec sbb mov flds rcl imulb mov test sti push adc notl fldt sub mov cmp enter cmp push add enter repnz (bad) cmpsl xlat mov sarb test fsubrs (bad) icebp iret rcl or jae sub stos pop addr16 jecxz add sbb movsl adc cmpsb xchg xchg mov push adc addr16 dec xchg pop in mov adc scas ror and fisttpll clc adc push aaa lea js xor (bad) jns (bad) jne leave sub insb rcll add mov xor inc dec dec pushl in fidivr loope push das or ljmp jl sbb movsl aaa test fndisi(8087 push dec (bad) rcrl in testb call idivl enter repnz pusha loopne adc xor pop push cld loop jmp sahf adcl (bad) loope sbb daa fs negb inc daa pop bound push or arpl enter inc xor mov xchg pop and ret int (bad) jb arpl cmc and jle pusha xchg sub insl sbb orl lret outsl adc (bad) lret mov ja pop push fisttp mov (bad) stos inc push popf insb xchg fxch jmp lods imul out jle movb or cmpsl push icebp or stos cmpsl xchg cwtl xorps bound nop lock ss mov cmp lods pop or xlat int3 ret and pop ds dec lea lock (bad) es out out xchg push push dec lods jle das push (bad) push xchg std iret dec mov pop popa push and mov mov (bad) push push cmc cmp mov mov das je int3 (bad) lahf inc xchg xor jae cmp jnp push fsubrs insl add push add repz scas pop pop mov out push imul inc mov imul movsl inc mov push clc fwait pop adc arpl stos and das mov shl fdivrs push cmc mov test insl aas test sbb pop dec jecxz stc adc les push push xchg xchg lret push (bad) fdivs in stos and fs aam call xchg and inc mov lods pop add jnp dec movsb ret xor xor cli ljmp xchg ljmp pushl cmp (bad) fildl scas jge xor mov push shlb pusha aaa inc sahf or rolb add (bad) mov xor sbb pop mov sub call mov nop sub js and lret clc xor adc and push push test shlb pop sahf or fs push or push (bad) test sarl mov inc divb add lods imul mov xor ret ljmp adcl pop out cmp shrb cs mov jns push (bad) inc loop loopne stos add sub gs pusha cmp (bad) insb jne repz mov mov mov lea mov loope inc es imul jo lea pop imul test cmp fcmovne dec aas in movsb mov lds (bad) jp push dec xchg inc inc sarb je cmp push or xor mov orl cld pop lahf leave ret sub lahf lock fwait jmp and push pop and inc (bad) hlt (bad) jmp push sub scas aad push sub jmp insl (bad) lret fs add xchg jnp fildll stos add stc test hlt mov mov xor mov bound dec jg aas das scas mov cmc push sbb or fidivrl enter sbb sahf xor mov or out stos xor lods std jb pop push mov (bad) mov sub jne in add adc dec add stos cltd cmp jge pop pop sbb xchg pop pushl bnd cmc data16 cld sbb inc outsl mov xor mov test xor mov xchg sub mull inc xor xchg jmp mov push into sbb sub cmp in loope cmp push jns inc inc enter addb icebp jb jns loopne mov out gs out add leave imul dec leave js loop mov jle into movsb inc sub push jge std leave push in cmpsl jb out pop jmp xchg aam test cmp sub bound (bad) inc cmpsb inc loope mov notl lea fsubl mov xchg nop push test shr inc scas (bad) mov in mov repnz into push ffreep xor dec or pop mov or mov cli pop popf fidivr sbb je and aaa adc fbstp rcl je jmp popf js (bad) dec inc xlat add hlt mov in dec test sub mov loop iret insb add fidivr dec sbb mov clc or inc inc pop je inc xor lret inc xchg es scas insl sub mov out pop mov repnz mov lcall bound inc jns ret test sbb dec int mov inc fcmovnbe fwait aaa pop pop aam leave vpshaq or or xchg fisub sbb repnz add sahf rcl or add lea flds or je daa rorl inc jle pop pop push ds mov xchg (bad) je xorb cltd cs or jg jbe pop ja pop lock jg inc (bad) mov mov fsts test test rcr sub cltd inc popf add push inc ds cmp scas fwait mov (bad) xorl stc adc pop mov xor xor cli cld arpl popf mov out xchg mov testb outsb loop idivb push and (bad) icebp loope repz lods test jmp fmull mov xchg cmp push cmpsl xor xor (bad) (bad) mov mov (bad) in cmpsl push into pop in xor inc xchg pop xor pop mov mov adc fcomp in sahf mov cmp jb mov sub (bad) arpl fisttp xor imul lock inc loopne cli loop loop sbb xor adc add inc mov adc sub mov enter daa dec pushfw fidiv fprem1 stos xchg xor sbb mov leave sti ret mov xlat cmc dec push pop shlb stc dec jmp adc int3 std jae push push mov and (bad) sub in cli mov dec mov lret lds push ret mov or test inc adc (bad) cmp mov xor repnz aam fisttpl stc les mov cmp cmpsl test (bad) mov cmp add mov lret icebp stos xchg push mov insl jno cmp sub in jne jbe mov in jb or popa and xor sbb sbb and sub pop push mov and call pop add and xchg (bad) or jmp ds (bad) or adc ret sbb dec fwait mov jp mov rclb ds cmpsb ljmp add cmp and pop stos sbb icebp mov test call lods aam shrl lret les das push cs scas dec cli movsb stos in mov aad icebp fimull fnstcw or or out sub add test push pop xor lcall cwtl and sbb fistp mov mov push aad cltd cmp push int3 push (bad) lock sbb mov jb fild sti xchg rcrl pop ljmp add xor fs lret dec call sbb push aad movsw sti adc popa lock leave and test pop and mov mov sbbb and push lods cmp sbb rcr mov lea lods sbb dec (bad) out pop cld rcll inc xor and xor icebp stc dec test mov ds sarb sbb data16 sub mov mov mov cs out push int pop arpl ret mov pop fisubl mov push in pop lock jnp in lcall stos add and enter mov (bad) mov aas or (bad) in aaa aas pop mov in mov xchg inc push cwtl repnz lea mov jp dec lods xchg sub ret lret movsl cmp cmp sub cmc lods out popf push mov mov clc and iret push outsl lahf cli push cwtl test les add push aas je jns and xlat push leave fnsave repnz jmp jl cmp push add and movsl incl je test xchg jns xchg arpl mov inc repnz adc dec icebp push cmpsl jo icebp pop inc add outsl call xchg inc sbb xor jne in nop or inc push mov mov cmp data16 sbb jmp sub loopne hlt ret stos lcall outsb adc dec pop sub clc cmpsb and pop jns cmp sub divl xchg pop ss adc push mov ret xor outsl pop (bad) icebp adc aas sbb mov mov cmpsb xor inc pop sub xchg stc xchg js adc rcrb xchg xchg outsb outsl cld mov sub adc fbld cmp mov imul jb cmpsl adc sub lahf mov inc mov or push push jle mov mov sbb jl je inc insb push in cltd dec push movsb cwtl pcmpgtw lds int inc xchg jno fyl2xp1 dec jle bnd or xor push outsl mov ret cmp add jno and xor xor popa movsb mov ss push jne hlt fsubs dec lock sub dec sbb mov xchg orb dec add dec (bad) dec std mov lea mov mov xchg jge inc mov add pop mov movl fimul or sub add ds sar push test mov mov jae scas lret movsb mov or dec cmp cmp addb pop jae mov repnz xchg mov in repz repz and sbb add pop data16 clc arpl repnz jno and outsl cmpsl inc jle sub sub ret xor iret int3 jge mov add outsl stos fnsave aad mov loope sub bound sbb in mov shrb (bad) pop cmpsb pop fs test testl mov mov push lahf pop push nop loope test add or add lds (bad) sbb adc shrl and in fmuls pushf add outsb lret pop push cmp push jb rolb rorb sarb or das push adc in push xchg (bad) stc aaa mov int3 push cwtl fiaddl pavgb rorl xchg pop jecxz xor inc sbb lret cmc or lret repnz dec outsb das fsubrs pop xor lret cmpsl nop popf popf pop outsl mov push mov mov int3 sahf cmpsb push in pop mov cltd loop lock dec dec and out mov push jg pushf mov sarb enter idivb add mov xchg pop pop add dec adc cmp js push data16 cmp mov pop leave cmp or cmp mov sub fs das jnp or rolb (bad) xchg xchg loope daa in push jecxz int3 fwait xorl test loopne dec push cli cmp dec js mov out lods pusha pop leave negl pop popa int3 std fstpt daa pop pop mov cmp int3 (bad) mov adc insb pop push inc sbb addr16 cmp stos inc fdivp mov cmp fsub cmc jbe andl nop test inc lods push leave and repz jbe aam push or shrb (bad) sbb (bad) push push jo pop jmp adc enter roll xor cmpl in test (bad) or sbbl dec pavgb xor std fstl popa or adc loopne xchg aam sbb ds rcr dec pusha and les and mov xchg stos pop or fsts clc push mov sbb pop mov inc jns insl push notl mov push sub idivb dec mov jge and sbb sbb icebp sub call in cli jns lret shll pop in jno mov (bad) and and jp cmc mov aas sbb lods mov jbe cli and movsl mov push imul mov pop jle popa xchg inc push in loope push stos popa jmp xchg das (bad) stos decb das inc inc pop cmpsl mov push or ret fldenv sbb xchg sub repnz add pop dec xchg enter mov push and add (bad) xor adc mov or fs inc xchg and insb cli cwtl jae push jmp inc pop outsl mov cmpsl sbb inc or les inc cmp xlat (bad) mov in xor cli outsb jle pop imul adc hlt mov sub sahf clc int3 rcl or push fmuls push pop jecxz push divb fs hlt mov enter in out push sub cltd cmp pop jns sbb inc dec push lret in imulb mov pusha dec aas mov stos adc cld (bad) dec pop xor (bad) int adc and scas push inc dec xor cmp fwait das lcall aaa pop insb (bad) cmc and fild in sub add xor (bad) shlb pop outsl into loop add dec xchg jne lds cmp jnp out enter jo sbb icebp stos ret sub mov dec add xchg in std pop jge jns insl xchg loope dec inc and dec jb movsl jae movsb outsb mov push mov sbb ret inc int inc dec sti (bad) and mov dec and push pop push popf in jnp fnstsw xlat dec insb mov jge fildll push insl nop inc mov (bad) insl or push sub sbb lock das push push push cmp (bad) dec lahf (bad) cmp xchg addr16 cmpsl std jmp jns jne pop fucom sbb mov add fwait aas jg lahf adc in subl and push movsb push call into pusha pop mov out add gs fldcw ja enter sub mov inc mov addl insl mov inc inc notl dec fcompl dec xchg mov adc nop icebp cwtl lahf das lret and icebp jnp add jp jo loope and dec pop inc dec mov repz sti or and iret arpl outsl loop fs fdivr sub mov or jnp jecxz sbb add adc std cmpsl jns cld cmp xlat inc add mov pop out mulb or lds fisttpll inc fcom stos iret notb sub in andl data16 mov roll icebp jmp cli xor mov mov (bad) lods scas aaa jno dec decl dec rcrl sbb loop or mov aad jns jmp and add fnstcw leave push or pop jo cmpsl jmp xchg sbb mov xchg sahf dec sti rcll (bad) adc ja aam subl insb data16 sbb mov imul shr xor xchg cmp pop jg inc sub sbb bound xor cmpsb cwtl shll je lds xor pusha jae (bad) and mov gs lds jae inc adc mov repz push jp and mov jnp outsb imul adc mov jl mov sbb ljmp lahf jbe in adc sub push mov push push mov mov repz inc adc loop xchg cmp leave sub push jl mov cmp into jmp mov cld ret mov bound ljmp test pmaxub orb mov (bad) hlt jg inc cmp mov pop outsl mov inc xor xchg sahf imul pushf lock enter pop xchg mov ret push aam nop xchg pop clc sbb dec adc cwtl hlt mov lods (bad) insl cld cwtl dec jb sub sahf push pop ds out inc fxch sti push rcll xchg lds sbb dec adc mov mov decb adc lret push cmp mov out xchg sahf out add push adc pop dec xchg fiadd bound aas cmpsl das lcall rcrb scas push mov je dec lcall inc mov int3 sub test pop add repnz sub jmp mov negb fnstenv out cld test out in lahf cmp (bad) mov cs out pop fs adc push jecxz leave movsbl imul xchg or fwait jge popl aad push pop aas stos fwait mov inc dec adc jmp jbe sub sub push rcrl inc dec imul cmpsb dec stos push xchg sub bound mov daa adc leave int add lods or jp bound es orl inc fstpl push ret or sbb or call adc jp xor imul clc faddl jl and insl mov sti jmp mov push fcoml jne aaa add nop ja jo aas (bad) jnp add sti jnp push test gs dec cmp into dec movsb sub xchg sub pop mov outsl shrl das adc shll (bad) xor stos addr16 mov sti inc fidivrl and push int3 mov pushf add mov shrl jl jecxz fst push sbb jbe add xor outsb push sbb xor xor add push scas xchg fistp adc sub mov lods xor jnp lods test sub test loopne scas xchg mov add in fwait push pusha clc adc mov xchg fcoml cmpsb movsb jl stos xor add push imul fisttpll lock mov pop roll mov aad aad ja xchg jge lea mov js sahf aam jp mov fisub mov dec test sbb into cltd inc mov xchg mov (bad) movsb out fidivr lahf xlat jbe mov or cwtl xchg jnp jae pusha inc and mov jg out xor addr16 pop aaa push cmpsb mov mov bound mov xor test pushfw hlt cmp push add subb dec out pop xchg jecxz lahf aam mov adc stc push pop sub mov addr16 dec adcb in out int3 mov lock mov pop inc dec xchg and mov icebp aad jo (bad) insl push xlat or out aas jo mov orb mov jae scas in or scas xchg lods xchg push or js sbb mov mov outsb cltd (bad) push pop jbe mov lret xchg push (bad) out jecxz mov xor in fidivr testb xchg sbb out mov ljmp sbb aas inc mov lret sahf add pop mov dec fldt push add push or (bad) push mov (bad) and adc call or inc ret les pop (bad) sub dec mov fcmovb xlat fist imull dec dec cmp mov dec hlt jl,pt je stos (bad) sbb insl sti nop in mov fildl add jns jae add inc sbb hlt add xchg pop stos and adc mov lea mov jmp in mov push int3 pop stc leave call pop and push lds or das and out push cmp jle xor inc dec pop pusha dec shl pop dec mov lock xchg je pop pusha cltd push sbb jecxz sub daa adc add imul (bad) lods dec (bad) xor or das sbb testl in jmp cmp adc dec push ja mov push xchg pop lcall xor pop push ss int3 or mov adc mov and xchg xor iret je inc movsl jle mull cltd adcl mov into popa es or mov mov sbb sub es fcoml (bad) and cmc icebp xchg sub and in and sbb mov ljmp sbb xchg mov cmp in sbb repz push mov mov pop imul sbb cmp xor pop hlt dec jl std mov mov stc pop ljmp push mov fcmovnu sbb mov jecxz push push daa jle scas dec (bad) push mov xor sarl fidivl hlt mov fucomi adc cmp jb jg adc aaa mov inc cld adc ret cmpsl mov ret faddp stc lea iret loope das hlt dec je enter jne mov sbb cmp add xor das movsb push add out popf jmp jecxz adc ss inc push not inc sbb xor mov pop xor mov loop je jbe pop push stc mov inc dec jg cmpsl cmp mov push incl je mov dec mov sti pop lret insb ret adc ror inc push into and jns or ljmp ss jne out xchg pop mov (bad) xor jo or cld iret push daa aas (bad) dec fdivs into enter in orl test dec and pusha inc sub add lods jne push std inc sar sub scas sub cmp sbb mov popa dec imull addr16 jne cli divl adc (bad) (bad) int inc arpl pop js ss dec in jmp je mov inc ret xchg dec stos ret push insb xchg mov add xchg data16 xadd add jl xchg cmp insb xchg cmp mov sti jle sub or mov mov mov mov cld add cli lret xchg arpl mov sub or gs or fs out mov ret xchg pop cmc aas scas scas lret adc lahf sarl and dec lods jge xor mov fisubrl (bad) out xor mov pop sub ljmp lds cli sub sub mov or dec repnz adc sub lock fs fmull lods sbb cmp repnz lock repz fisttpll orb xlat shrb push inc rorl in outsl fidiv in push adc clc in push xchg push xchg pop xchg xchg fs push xlat pop pop push cmp jp adc test push fldenv je popa lahf sbb mov fs xchg jge icebp pop sbb pop dec mov nop arpl cmc fcoml jp pushf fdivs repnz cltd cmpsl cld inc aam outsl push jo xor ss loop aaa (bad) jno mov aas mov adc lock dec adc lea stos xorl nop or arpl dec add hlt jbe (bad) or pushf lret imul js ds sub cmp pminub enter mov (bad) dec cwtl nop or (bad) jge addb stos xor mov daa arpl sbb push jns or push cmp (bad) inc jb cmp enter mov je,pn cmp outsb push dec std jmp scas sbb loope and fldt sbb push test sub cmp or stos repnz movb shrb cld ds mov rol aas imul (bad) xchg cmp cmp std js mov jns push xchg ljmp lret insl mov movsb ret mov cmc (bad) xor jns mov jle gs inc icebp add jo loope mov cs sub push cld scas xchg jae xchg bound pop imulb push or fdivs add lcall xorb push mov or or and pop pop inc push cmp jo rolb inc xchg scas and and push loope cli add cmp test test shlb sub push push mov rcll fldl push pop xlat daa cmp shrb ret lret or cli dec fiadd test mov out xchg dec movsl adc jns mov or stos aam test inc pop jb mov iret mov das sub jbe add cmp dec pop cwtl mov xchg (bad) xor (bad) aas mov mov icebp add and leave pop ss out pop pop fwait and cmp aas in mov pop test popa push mov lods cmpsl add inc int dec orl int je scas xchg stos dec popa cli popf loopne lea inc out aam pop pop jp adc push insl jp adc adc outsb sti push mov pop test je mov inc push idiv stos adc inc pop in jg stc scas and push sub orl adc xchg jecxz js aaa mov xor inc dec stos test das sub push inc clc shrb leave or sbb out mov mov outsb call (bad) (bad) stos (bad) repz js frstor insl shlb cld sbb or xchg mov mov aas and mov mov xchg imul scas stc addb xchg rclb pop andl in test dec adc fstpt xlat (bad) shrb insl jp mov mov and xchg push pusha mov or inc sti or in pop inc fstps ret jno sub sbb pop ja pop fs mov aad sbb aas xchg loope and mov mov mov pop mov cmp xor mov mov je dec mov cmp sbb ret leave adc mov popa mov sub pop movb sub icebp cld sbb pop pop push movsl jg mov pop dec mov outsb dec sbb mov cmp (bad) fnstcw push ficompl sbb fisubr push es mov mov sbb clc adc mov rcrb xchg xor mov push ret iret add mov outsb sarl (bad) mov push and dec jle aad mov gs cmpsb mov (bad) pop sbb add rcrb jb pop test in pop xchg mov pushf cltd pop push int3 (bad) mov andb ljmp lahf mov out fistp movsb pop mov and push rorl mov je xchg pop mov es sub push push and shrb jp ja movsl mov mov lahf jo fcomps (bad) pop icebp mov fwait cltd adc test test movsl xchg sbb jne jb add dec mov ret popa (bad) mov enter clc inc outsl jno inc push lea shlb pop cli sbb shrb mov xchg test xor lds sbb jae jo sub rorl xchg push cmp mov xor mov xchg enter pusha fldcw push in (bad) jne mov lock enter xor xor sub outsb sbb lcall stc cmc adc scas mov clc lcall lds inc xor ljmp outsb test dec sahf mov and push notl das stos mov and lahf leave cmp loop int3 inc inc mov pop (bad) loope ret sub jle pop push jno mov mov lods sbb pop test cmpsl cwtl loopne or adc aaa out fisub cmpsb mov cli sub push int movsbl xlat daa mov push mov ret enter jb and test stos sub lcall ss pop gs int nop aad ja dec push pop outsb mov mov dec inc shll jle xor sub xor clc ret cmp adc sti hlt adc mov loopne mov js cli out xor call dec pop outsb cmp xchg mov or gs in scas push push xor fadds sbb mov pop xchg aas fcomps mov dec mov push sub sbb jl sbb int3 xor in xor push repz lock and fcoml insl scas cld cmp inc cltd jmp insb xor imul int xor and out sub pop cmc (bad) mov dec cld xchg xchg inc dec mov mov or pop test scas into sub xor sarb push pop sbb lock add mov mov popa (bad) xor out pop push outsb hlt int emms cmp sub push push addr16 jns mov gs and test lret inc imul test rep popl and inc pop sub inc mov mov adc mov mov xchg cmp test lods imul cwtl or fidivrl cs (bad) rclb (bad) dec adc or aam xor push dec xor pop xrelease add mov inc cltd adc add push jp call jmp mov or pop cs jns lret idiv lods sbb push adc jnp pop pop add inc pop push int3 jbe push ds lret inc cwtl sbb cld dec rcr mov mov iret std jle adc add inc outsb outsl in cmp cmp (bad) mov pop sbb or mov cs ret xchg mov mov adcb loopne (bad) pop xchg jns pop xor cmp insl adc xor les ja inc mov pop loope leave pop int xchg fwait test adc mov repz fdivrl xchg inc jbe inc int3 sub rorb pushf aaa int sub cmp ret repnz rclb std (bad) cmp pop xchg xorl mov push dec jb inc gs push jmp outsb xchg xchg mov sbb add adc xchg adc pop fs push inc int3 lret cmp loope and jl xchg test xor mov aam sbb enter jle outsb sub dec jle insl cmp jge or pop jne mov mov mov movsb gs out push jg int mov add shrb outsl push outsl mov or jb cmp rep push cmp sub sahf cmp lods push sbbb sahf addr16 push xchg iret push cmp mov mov jmp movsb mov jge enter xor mov out sbb fsubl ret dec mov cld cmp fcompl out push or jns push lea or divb in mov xchg mov pop (bad) lcall test gs lret movsb mov outsb out push call mov sahf fidivl cwtl mov cld (bad) mov xchg xchg and mov or lods xor mov lcall dec jmp mov pop enter lret lods (bad) clc mov cltd mov push pop mov jg mov inc mov pop std cmp sarl and into mov imul arpl loope (bad) cmpsb scas pop pop sbb xor stos test and pop scas sub ja add repz and mov dec pop push lock bswap test imul pop icebp outsl pop hlt mov lods in in loope jns ror movsl imul mov or scas std push cmp sub push xorl jp aad push (bad) leave (bad) fisubrl sub sub imul popa je xchg subb sbb xchg int out add dec cmpsb loope inc sub or inc mov sbb jnp mov addr16 lret (bad) mov dec dec mov push subl xlat mov push adc cmp mov out call data16 lahf stos jp cmp sbb test jmp fcomps or push cltd lcall jle jmp cmpsb jo mov adc push push adc jmp fcomp bound sbb mov scas jo sbb outsb js pop ja or mov mov inc in cmp (bad) out xor and cltd sbb mov xor imul adc xlat enter or push and mov cwtl push aad xchg mov sti or xor xchg mov xchg cmp std cmp dec or cmp and dec out lock fwait xor int3 bound in xchg out loopne fwait xor inc lock jp bound dec lock adc cltd sbb and scas or push push dec leave ret mov fldt push jmp movsl addr16 mov hlt lret (bad) loop addr16 jnp jno xchg cmp or push xorb jb push and stos enter imul cmp pushf es pop mov jle jmp add movsl std push pushl stc mov loopne sub lods cltd sbb ds fcoml or add repz lods gs jecxz fildll stos sub negb mulb enter or (bad) mov and adc dec xor fcoms repz lahf or inc xor add and rcrl push add aas add or dec rorl outsb pop mov (bad) adc push mov jnp sub mov (bad) movsb mov adc and aam lahf test dec je push out push loope frstor mov mov les and lods stos pop dec and xor add pop insb mov sub add xor inc mov cmpsl rolb aam jle cmp push dec fcomps out or mov push pushf hlt into mov and push lret leave pop adc mov xchg cld test into pop loope add cli int3 mov mov sub scas xor pushf xchg jg fcmovnbe inc mov fxch pop inc dec xor cmp mov pop addl sbb push or std pop pop arpl ficomp ljmp outsl pop inc iret mov (bad) jle adcl fcmovnb pushf icebp sub push cmp mov rcrl inc add loop pop aad in bound lret mov call sub push jbe mov subl ljmp jo add ret fild sbb and clc cmp pop push mov ss jp iret pop xchg sarl push test push add sbb outsl sub (bad) jno xor (bad) jnp adc mov out in mov icebp and pushl jne xor mov mov mov jb and fnstsw cli mov or and daa addr16 pop fmull out sbb inc sub mov push loop add pop sub jmp fwait and sti push pop scas add dec pop sub in mov je xor push in int into pop int (bad) int sub mov loopne ljmp or popf jns das add gs and movsl out and lods inc rcl cs push add nop (bad) fucomi fs push fmuls mov sbb mov dec jo jbe addr16 jbe insl mov movsl inc adc aad dec inc frstor add daa outsl or push xor and sbb shll jg cmp sti enter gs and mov mov add lds or addr16 loop mov lods adc mov and rcr pop pop pop sbb or xor mov jo nop cli mov push fwait loopne pop cmp add cwtl pop add or xor push mov xor xchg fistpl xchg loope lods and cltd ret pop mov ret mov push add sub insb mov nop pop dec cmc xchg jmp fnstsw adc lods xor xor cmpsb push push dec test and loopne loop fnsetpm(287 mov insb out cmc std jmp hlt fldenv cwtl lods stc cs push ja sahf xor div mov inc push sub sbb fsubs test pop insl dec stos in scas loopne sbb and int3 mov jmp fcmovu clc mov pop (bad) or cmp repnz jmp js aam mov fwait cwtl pop xchg adc test mov push je or pop cmpsb fwait lcall or add xor push lret adc jg mov xchg inc je fnstcw add sbb jmp cltd scas cs das call pop pop push lds sub loopne pop push pop xor mov lret or cmp ljmp adc xchg (bad) hlt rcll push outsb mov sub mov sub dec cltd add test cmp daa and into push mov xchg add push icebp cmpb icebp mov push out (bad) or sub jmp stos push mov scas or jbe jno cmp repz or test lds sbb mov rcrl lock jle adc mov sbb frstor in sbb cmpsl ja jmp imul mov add push fldenv in (bad) cmc xchg dec jecxz (bad) jb lds ret push lahf in sub call xor cmp insl mov cmp adc adc shlb adc loopne hlt pop cmp jmp xlat sub cmovbe (bad) dec cmp andl or add and xchg ja sbb mov roll or bound xchg inc xchg sbb cmc outsl cmp hlt lea incl arpl dec fstps pushf insl popa ljmp inc xchg jecxz fildll lcall xchg ret enter inc inc imul scas loop std or cmp and sahf sub pop cmp es (bad) jmp (bad) add fisub adc dec daa cld dec or xor arpl leave sbb outsl cmp daa bound pushf cmp sbb add insl in add mov push sahf pop dec dec inc les mov push add in cltd sbb popf pop mov fimull add fisubrl cmp mov dec aad inc xor sub shlb test fistl ljmp out negl stos dec repz int ljmp inc iret adc sub mov inc outsb dec jle movsb in xchg call aaa pop (bad) es or dec dec mov adc inc xchg call mov mov es add in xor (bad) (bad) dec mov push test and sbbb jle inc cwtl sbb sub dec insl adc repnz incb je and pop and ret sti pop addr16 aaa (bad) cmpsb out pusha add pop mov leave mov (bad) xlat fs loop xor inc sbb pop roll (bad) out xor outsb jecxz dec out mov adc sub scas inc aaa push add push insb out sub xorl or ljmp mov sub sbb pop xor stc repz subb cmpsl rorl lcall jno mov mov adc scas push sbb lods jnp xor add pop (bad) cmc movsb ja and inc out adc fnstsw push sub or jge out icebp lods mov imul popf mov (bad) lods nop xchg mov lcall or jae movd fisttpll test icebp xchg adc sub enter xchg jbe or mov icebp sub (bad) xor js (bad) imul mov int jecxz mov in cmp xor lods push pop out mov add loope leave gs scas and pop xor xlat (bad) xor xchg cltd pop lret or cmp fldcw icebp aam jnp out sbb enter sbb je xor mov xchg in push mov jge insb lcall test jnp notl ss adc sbb cmc js (bad) dec inc orb add xchg sarb test fnsave adc inc pop ds outsl add pop std mov inc pop sbb sub jne dec ljmp fwait into ja dec rorl enter lret (bad) aad sarb int3 negl call rcr rcll inc pop add sbb sbb dec xchg in (bad) mov test fisttpll or jbe je jae add inc je xor jecxz cmpsb add mov push pop incl or punpcklbw and scas sub ret mov mov and (bad) adc sbb scas sbb pop cmpsb sub dec arpl (bad) shrb imul js js stos sub inc test fisubr ss jp and xchg out cmp jb mov dec xchg aas test pop dec xor mov xchg or cmc add dec xchg outsb in sar pop inc leave mov aad fimull dec daa mov or es xchg cltd dec aam out (bad) lret enter sbb sbb cld dec pop call lods lods mov add mov fisubl into inc loope mov xor sar popa aam inc mov and sub les mov idiv push leavew (bad) pop adc loopne mov fldl xor mov ljmp pop xchg (bad) popa push dec inc push popf (bad) cmp (bad) scas xchg inc adc pop inc xor mov enter and jp xchg xchg and (bad) imul data16 or sbb ds cmp jnp mov mov outsl push cmpsl (bad) push je fdivs leave push push cltd std mov int3 xchg (bad) cmc aas insl mov jg sub dec or xchg cmp loop loop sbb pusha push mov pop cmp mov divps fs in mov in xchg jl jecxz mov fdivrs outsb push sub jecxz imul lods and pop xor jge in out fistpl mov adc sbb mov push sar inc cmp and in stos xor ss popa jnp and and cwtl xor cs gs jge mov or sub adc cmpsl mov or dec cmp mov mov (bad) aad int repz pop mov xchg in xor mov mov movsl add mov popf add enter movsb xchg mov xchg jge pop sub dec pop test sbb mov sub out popf outsb je cmp fistpll mov lcall cmp pop (bad) adc or loopne xor ret add mov sbb out mov fsubs jecxz leave fildll add mov cmp inc pop lahf jg push sub das aam lds adc mov popf sbb daa daa rcrl int3 sub mov pop mov repz insl rcl mov das lods lods mov daa stc mov sbb inc (bad) out xchg sub inc aaa xchg adc dec cli pop adc pop scas (bad) jmp jle dec mov mov pop in and push scas mov in dec insl xor fwait xor cmp leave xor test lods ret into stos or cmp dec es ret in pusha lret push add stos jp xorl jmp (bad) ret in sub jns movsb ljmp mov jns adc shl dec ret ja pop int popf jne xor mov jmp and sbb and pop push add fwait sub shl cmp lcall mov pop xor jbe inc mov aas add mov xchg pop add and or icebp das stos sub cmp dec test leave in xor (bad) je xchg jg pushf mov data16 stc xor pop cmp out mov xchg arpl pop inc (bad) repz scas jg jnp sbb mov lods mov rcrb out (bad) add data16 std mov test sub out or mull mov lahf pop sahf sub dec or xor push lock cli icebp mov pop push or daa insb inc pop push and xchg jl aas aaa mov leave mov xchg test pop cmp xchg clc jno inc and jecxz scas mov incl pop inc dec (bad) lock cmp jns fstpt lods jmp ljmp mov and (bad) or popf mov jp sti loop and adc or test adc jb push pop aaa (bad) dec hlt adc arpl push xchg push mov add xchg or sub out test jp cmp mov pop sbb mov jecxz enter mov out stos dec pop and add ljmp jo jecxz (bad) insb or bound mov adc xchg inc ljmp inc or dec jns lock xchg mov sub out mov jge mov xlat add test sbb mov mov out cmpl mov in cmpsl enter enter pop rcrl jns loopne mov and jl dec rcl leave iret xchg call data16 xor out mov lahf xorb out hlt cwtl (bad) xor sbb cmp scas inc mov (bad) add (bad) xor mov mov les pop jo mov aas clc rcr push stc inc jp or pop fsubl mov out cmp push mull out sbb xchg sub mov iret mov in in sbb mov into inc icebp sbb push int aam out adc jno jecxz or inc cmp addl inc push fstps fstpt mov sbb jnp cltd and ljmp mov outsb ret inc xor or cmp add rclb (bad) jmp fidivrl rolb push mov add fwait inc dec fcomp fsts fadds mov loope push into pop lods xchg push std imul (bad) frstor or push or call adc mov cmpps sbb ror out sti lahf sub cmp mov mov mov xchg mov scas cmp mov fsubs (bad) or mov in in aad mov sarl test aas sahf sub mov push lcall in dec or (bad) call mov jo in in dec mov dec ror imul call add dec cmp mov jmp mov div ret in lods cmp push movsl jns (bad) push mov out pop inc cmc adc out inc int3 and outsb sbb stos pop lock lds pop or stos mov cltd cmp xchg xchg dec repz int3 jle test pusha movsb xchg and jns enter dec pop dec pop aad jge in jb loope pusha lock push out dec movsl in push mov mov fs (bad) jns or les xor or and push xchg stc mov stc pop pop ja stc adc dec add sub jns ret lret lahf repz dec ss xchg or popa in or push in std adc mov xchg sub push repnz mov cmp push add jecxz pusha mov cs mov or lds syscall out mov mov cmp sbb adc divb add imul enterw das xchg int3 cli xor stos je stos sub adc ret xor sbb or rolb mov jmp inc aad fwait dec dec loop xlat loope daa std sbb inc std jg or xor test je cmp nop cltd cs sub inc and imul sahf hlt cmpb or scas mov cmc push sbb repnz mov or dec sbb lret mov test pop fsubl rclb jg adc fadd mov test sti and insb jmp adc cmp cmp cmp rcrl sub add push fmull enter loop push outsl in stos into lock cmpsb into rcll in pop lock ret inc test jae push and (bad) xor adc mov mov mov repnz sbb adc js push cmp gs pop insb andl subb stos in ret aad sub cs out xchg push (bad) outsb sbbl xor sub push aad lea mov orps or mov or sub pop movsl popa or add pop sti mov pop or (bad) out aam stos int3 neg xchg popa lea pop sbb pop mov and dec cmp in (bad) cmp mov pop lea rcr mov sbb sbb inc scas and cmpsb jnp cld das jp sub in xchg add leave cwtl push sahf push cmp out stos sarl clc jnp jge repz push and sbb lods pop ds clc in pop les enter push mov adc sub (bad) dec pop mov stos push xchg sbb mov mov xchg lock inc pop in pop cmp inc push shr and in inc inc xchg jbe icebp add dec iret xor add mov sub xor jnp xchg ret mov sub jae push jmp xor mov mov push int3 cld mov lods lahf dec pop adc stos inc jno mov add aaa jnp test out popf leave mov mov lret mov xor pop scas and mov adc ffreep jp fldt sub ja mov imul aad mov and add movsl nop jne mov cwtl inc gs (bad) mull lret dec cmp add jbe dec sbb xor mov sbb repz push mov (bad) test ss inc cmp sub mov adc mov inc popa mov jne dec lret push jb xchg mov pop cmpsb mov pop sub xchg lahf jb adc jmp repz mov sbb leave es xor push dec or push push into jge in sti lods imul cmp pop jno push mov push mov xor xchg insb into jb ud2 ljmp mov sub arpl je inc int jns and xchg aam dec icebp das imul adc mov lods mov mov mov leave outsl xchg (bad) jl (bad) and jbe loope (bad) mov lea loop sbb push out hlt ss es fcmovne ljmp movsl mov das arpl add (bad) (bad) sub mov mov cmp sub pop aam adc xorl lods mov int3 and add ret xor pop mov das pop cmp shr (bad) jge xor (bad) movsb pop cmc ret adc xor lock lcall lea (bad) movsb fisttpll clc test and shrb repz hlt mov daa add xor sbb sub in loopne iret mov add movsb push fcomip push (bad) jns bound dec in or in lods lock sahf jae xchg adc push clc nop shl mov daa mov arpl dec adc inc arpl adc (bad) push in cmpsl fldcw scas add jo inc mov rcrb cmpsl imul sub dec addr16 xchg in xchg fidiv sahf popf pop push roll pusha xchg mov add mov and test popf pushl mov push cmp ret addr16 jbe cltd jge jae sbb and out dec push dec daa stos std lea les arpl punpcklbw push ds in xchg xchg pop lods test pushf sbb inc cmp ret sub jl pop lret mov push call ljmp mov adc pop pop ret sbb sbb mov pusha jo shrb push xchg leave imul mov and push cmpsl mov push std pop cld mov stos cmp insl jnp jp jno (bad) push dec jp sub rcll adc dec jecxz mov out ljmp mov test out mov test loope fwait outsl mov mov adc or pop xorl inc test jp je pop dec mov pop mov adc push shl mov mov mov out mov sub imul vpmullw push rclb xor out jbe pop sbb bound (bad) pop or inc pop jmp test xor (bad) pop repnz mov in aaa add gs push mov dec cmpsb data16 ret inc std ss mov (bad) or aaa dec out cmc les lods out dec jne outsb jl sarb data16 test inc lods adc mov mov xchg test jbe enter dec dec lret jo mov (bad) or lods sbb shl or sbb push rorb jge sbb mov sbb mov call xlat popa xor jbe jbe ljmp scas stos fs dec or adc (bad) or decb mov sub aaa out pop xchg movsl mov jmp or scas xlat or repnz push sbb mov or dec sub pop inc dec xor inc repnz mov adc fldlg2 (bad) arpl outsb ret (bad) out fisubrl mov aam pop sahf and xchg dec jg imul sub push mov adc mov cli (bad) aaa out je jle xor data16 je aaa adc inc mov cmp popa inc cltd cmp (bad) mov (bad) mov call mov je iret jecxz xor fistpll push loop sbb jno mov cltd jbe adc lahf icebp sbb xchg out outsb in cli pop pushl sub int3 or cwtl pop adc cmp xlat out in leave mov mov jnp out sub mov and aaa adc rorb and sbb sbb dec push lea cmpb and out scas xchg dec mov mov cmp jo popf inc loope add jb cmp sbb jnp int3 sub xchg les xor dec dec divb dec das (bad) stos pop shl outsb jno lahf mov inc mov adc add push xchg add divb hlt std rol mov mov (bad) aaa std repz cmp xor insl mov mov fistl stos mov daa or pop stos sbb mov or mov pop push add repz sub nop cmpsb pop les inc ror (bad) int mov (bad) mov lods hlt jbe mov mov lods mov cmp adc addr16 adc ljmp push add adc pushf ficom in xchg cmp cld (bad) push dec test or dec ljmp out cld mov pop pop mov xor out (bad) mov inc sahf loopne push in fldpi (bad) stos nop shr fdivs and pop (bad) mov imul mov lds sub iret cmpsb es imul dec push push xor cmp imul mov movsl call or clc pop jle jno xlat mov subl xchg pop xor cmc in sbb sti (bad) mov lret mov sub sub jge adc cwtl pop int dec sub mov xor lcall xchg je sahf movsb les or or mov xor add out rclb pushf dec dec out sub xor int3 iret loope cmp stc dec push ret adc iret push cs pop fcomps dec lods pop lea sbbb sub xor sarb cmp xchg (bad) push pop aaa mov lds outsl aas add int3 jmp repnz xchg repz ljmp push sub sub imulb jg movsl dec add add ljmp push push in cs (bad) outsb push aas cmp test movsl out push mov mov push hlt lds arpl ja dec insb nop and cmp xor addr16 lods fstpl and xor cmp ret xchg jb add xchg cmp outsb lods and into mov sub fstpt xchg rolb adc xor push mov dec jo je repnz in pop test mov push push sbb addr16 lcall sbb (bad) xor cmp fidivrl out rolb out and cmpsl or hlt jecxz inc mov adc add out arpl insl iret daa and fdiv dec aaa stos xor inc mov sub and (bad) (bad) push jp sbb lret pop (bad) pop mov mov sub or ret mov adc or jmp aad bound mov cmp into add out inc pop adc or jb repz stc imul nop insl mov loop outsl lret out hlt pusha std loope cld and xchg inc inc pop in sbb or xlat (bad) rclb adc jne xchg in test mov and adc push push arpl insl pop jge mov movsl in outsl int in add cld test imulb sahf fstpt fist cli lcall inc cmp ret in repnz (bad) pusha jl mov (bad) mov sbb movsl cmp or and or pop sahf cltd jp vpsrlq int add into cmp fs dec out je and mov sub mov lods je (bad) movsb cmpsl mov pop sbb xor ja or and repnz aas (bad) pop xor faddl sub mov xchg and or loop loopne jge jo jl xchg mov push (bad) jne cld popa push int iret xchg fsubr movsb mov sub ret in nop or or (bad) push pop xorl mov xor mov sbb mov push jmp sarb aam mov divl mov mov mov les cmpsb les or jle (bad) lahf call mov lock push (bad) push loopne mov repz ds fsubs push inc out sbb push movsb push sbb inc fnstsw jno int pop orl cld inc in jo mov pop lods mov push pop jo movsb push gs es inc xor fmuls test and aad xchg push adc out cmp xchg into lret or aad sub sub lods mov (bad) addb cmp inc mov xadd cmpsb lds nop sub jno outsb or in sub notb sbb mov xchg sbb (bad) fisubrl in inc imull rcll into das test fcomip popa pop stos stos add xchg je push imul fldl psubb cmc dec aas xchg imul adc push jl lcall test out mov add repz mov mov in inc mov imul bound push (bad) mov int gs dec in cli jbe mov sbb lds loop (bad) mov not clc and inc sbb xchg loopne fstps out cld pop sarl fidivl pop int mov ret push in js fildll mov xor repz xchg adc cmp dec out jbe xchg mov (bad) jae mul cltd lods test lds push xor mov sar mov sub mov cli xchg adc push or inc dec and adc xorb dec xchg (bad) xchg sbb pop pusha push in in sub test sahf inc pop and adc pop leave (bad) xlat sbb nop inc into xchg gs pop fs mov mov fdivl cmc inc loop mov pop push pop ds ja xchg pushf sub out xlat into sub adc mov cmc add sbb inc aaa inc jg cmp mov jno lods mov movsb das cmpsb xchg dec fsub (bad) jg imul lahf sub sub lret xor and dec stc out dec or outsb rcrb jp xchg in sti imul stos imul sbb data16 push js ret sub in lock add in mov hlt insl cmp mov mov jbe push add pop arpl jb push adc jb (bad) clc mov and xor sub xchg popl das push mov aaa mov int xor mov icebp test adc int push fs cmp test loop sub or bound outsb imul push dec pop inc pop jle xchg out mov add or sub in jmp cltd add xor mov mov xchg lret outsb aaa push sbb and jg sbb inc jae and lods push sub ja (bad) jmp inc out adc cmpsl and pop xor ja xchg movsl inc jno out mov loopne mov ret mov lretw mov inc clc mov xchg dec pop sbb and jg pop xchg (bad) movsb aas jmp jl add hlt cmp push fs movsl xlat test ds fisub add out mov inc rcl out stc rcrb and lcall mov addr16 enter jecxz mov ret xor pushf das jbe mov popa sbbb jns cmp pop adc lahf jecxz (bad) imul pop cmp push (bad) cld or push (bad) in nop xchg inc mov fnsave lret xor fmull pop arpl xchg lods add cmp inc jne gs push popf fcmovb shrb aad jnp mov and ds cmp mov adc mov jecxz lea pop pusha mov pop fsubr sti fstps repz mov in repnz add arpl and or push ficom shll mov and out or out pop xchg jae push jbe sbb mov lods pop cmp push add dec mov cltd inc in lods mov mov int movsl dec and xchg imul or mov cmpsl add and leave hlt xor call call ljmp and xchg in int (bad) lret inc adc jg inc popf mov and inc xchg dec sub push mov push int mov mov dec ljmp mov int3 mov mov mov sbb repz lock add in inc inc inc (bad) je ds pop (bad) xchg mov in (bad) sbb pop sub inc dec fprem1 and lods orb cwtl xchg imul shl xchg jle jl inc add divb mov jl mov ret jb mov add sub ds cmp inc pop lret inc xchg repnz stos addr16 sub pop pop add xchg imul dec arpl jmp lock movsb aad or mov je push leave push and xchg xchg push mov (bad) xchg mov lds outsl adc cli je je pop (bad) popf stos loop dec xchg mov mov mov sbb mov cmp int3 jecxz jne divl push fdiv std inc scas add dec fildl mov test jmp test icebp jecxz mov aam cmpsl pop ficom xor repz push add mov jle jbe adc add fucomp pop inc pop push outsb sbb addr16 push adc insb frstor (bad) jle mov ds mov mov add push into xor jnp mov jl sub pop stos inc push sbb mov cmp mov or fistpl or fistpl add xchg rcll lcall xor andl sbbl cmp lret jp rcll (bad) decb repz add adc mov jl add push das push lret cmp jl int3 and jb xlat icebp (bad) je jnp push ja (bad) push inc mov cmp sub out push xchg loop pop sbb fldcw add iret push inc or xchg lock push aaa out testl ja ja pushf adc cmp push test sub add loopne cmp sbb lret push dec mov addr16 outsl and sub sub mov pop adc inc dec loope lret cmp sub test adc (bad) loopne popa testb sub and adcl mov pop sub rclb push shrl in test scas inc (bad) mov test mov (bad) mov jle scas icebp or cmp lret data16 xor or add and je out je mov dec jbe insb test or icebp stc sbbl mov out ret jne ljmp ror mov mov pop int jmp inc out jbe call enter jg outsl or push push inc mov daa les in sbb push outsb loop test pushl xchg mov cmp sub ror cmp lds icebp mov outsb pop xchg cld or inc hlt imul jbe dec out xor jg lds push mov sti (bad) lret or cmp daa (bad) daa pop xor test int3 cmp ss imul call push fsubrs lcall mov fsubr imul pop xchg out dec xor adc jl and sub push loop cmpsl int sub fsubs leave jmp dec pop in lcall mov or push scas jb dec jge sbb dec sysret and push or movsl (bad) cmp mov in push loopne cli cmpsb enter inc ror cmovb inc cmpsl mov ret test sub adcl sbb fwait mov cwtl xchg mov into mov push int scas mov inc cmp inc xorl popa mov repnz lods fisub xor jbe test mov rorb mov pop int addr16 adc mov bound sbb xchg daa fnstenv inc sub push cmp punpcklwd mov repz xchg xor cmpb and add xlat cmp dec ret pop push hlt xor pop es sbb pop movsl sbb xchg lea dec stc (bad) aaa push aad dec add cmp fstpl aad jmp mov and dec pop leave sbb sub mov sub dec xor pusha cld xor pop inc je test mov pop cmp es fbstp aad aaa sbb (bad) stos jno fisttp xor out sbb mov loopne ret movsl push and pop aaa mov lea mov adc out sub jo sub mov jp sub ja xchg test pushf loop ret pop jns (bad) xlat jo pop mov popf xchg sub int3 and pop jp addb in inc xor cmc dec adc cmp cmp push fcmovbe scas pop sbb mov (bad) jno insb jg cmp scas add daa push mov dec inc rorl xor jge aad pop sub and popa es jp mul cmpl es push jg mov inc jns aaa xlat xlat push lcall mov out mov fwait xlat in fldt cmp and adc in hlt int xor and sarb js,pt int3 sbb addr16 repnz add cmp xchg roll adc adc jg mov cmpl cmp mov nop mov ljmp cmp pop (bad) hlt mov and (bad) mov lcall xor negl test mov or movsl ret mov icebp add scas fwait mov scas fidiv out ds push xlat xchg pop xor nop and out adc nop (bad) out shlb fmull cmp fldenv cmp mov and stos adc adc inc mov lahf pop movsl ror daa ret (bad) pop out pop adc sub cmp (bad) jl xchg jnp push xchg es jmp dec add popf pop clc xor push mov sarl cmp test mov pop mov xlat mov loopne sub push xchg inc push cmpsb xchg aad mov shl icebp bound lret mov lea sbb sub pop les imul mov insl sub mov loope xchg in xchg mov lret mov inc stos mov int3 and jecxz cmp popf fnstsw aam mov pop push negb bound test movsl xchg test dec push push sbb movsl fstps fs je dec push jae ss jge lea mov out iret inc movsb push inc jne push scas pop test push add lea inc cmp and mov test push cmp cltd xchg sbb sbb lods inc sbb and pop (bad) cmpsl fistpll ljmp pop mov clc xor push jne test push into push in mov inc lock inc mov xchg ss mov xchg leave add rcrl xchg leave sti shll test dec aam mov enter aaa (bad) repz mov push loopne xchg pop jmp jo pop cmp and repnz sbb push and mov arpl mov in dec std jl xchg sbb imul dec or pop or scas jmp ja sahf sub dec outsl sub mov inc imul in xchg shll inc notl outsb (bad) mov clc jle push adc aaa test lock test push fsubrl mov ret inc mov stos xchg test or dec cmp cmc enter jo pop push mov in imul cwtl ja push xchg mov xchg mov loope lock push sbb out pinsrw les cmc inc dec shrb fyl2x lret test jp (bad) jns mov mov sti movsb rorl ret popl in mov rcll push mov popf sub repz xchg (bad) aaa pop sub cmpl xchg mov (bad) dec movsl fwait outsl mov add xchg cmp pop icebp inc mov fisubl (bad) mov pop cmp jnp loope inc nop shl lods add xchg fcoms dec and iret mov ljmp inc and out mov aam xchg test mov cwtl in inc (bad) mov les push call adc std fmull leave jae add jge push pop cltd fsubl stos es sti push and les pushl jg test xchg jecxz insl mov xor mov mov stos lret out repnz xchg (bad) pop cwtl mov js movsb lahf xchg rcll pop ja aad (bad) jae push lret test rcr adc mov call sub mov mov outsb cwtl iret into outsl dec dec mov scas fwait or fmull jbe and aam jl or inc push mov mov lock sbb bound pop cmp icebp jl cmovnp mov sub mov sbb arpl push jbe xor dec inc xchg ljmp adc mov mov int3 shlb inc xor add ja mov xchg icebp incl (bad) xchg shlb push jle xchg mov ljmp mov cmp repnz push pop daa push or sbb jbe inc adc jnp lods lods xacquire call cld dec cmp test decl mov mov push sub imul rcrl sub fwait loopne dec pop dec cltd push adc ljmp pop push or or (bad) repz lods adc stos push fiadd xchg mov stc out (bad) ficompl stc aam xchg cld inc inc cld inc pop loop pop icebp loopne and int3 rcrl enter mov test add fwait mov in in imul push push sub out mov mov push add in fisttpll fisubl push dec dec pop sbb add in (bad) and mov loopne iret jbe add scas in cli add sarb adc jbe aaa in dec hlt addr16 cltd add adc push repnz cltd mov hlt shll sbb mov push jmp inc mov jnp pop scas xchg xchg pop push enter je xor xchg je ja enter or out push mov pop dec mov jmp idivl jge fldenv mov sti pushf roll cmp pop jge out adc ror push dec bound scas cwtl in orl (bad) cmc (bad) lock pop sub rolb cmp mov in sub repnz pop aaa or ljmp pop nop ljmp fwait add fs ja jecxz enter rorl (bad) popf hlt stos cs dec push mov push shrb repnz dec stos cs dec cmpsb testb je leave rcl inc jp out pusha add dec or push orl jle mov cs push addl dec or mul jle addr16 mov imul xchg mov xchg rclb stos mov mov insb pusha xchg (bad) decl aad out adc xchg xchg mov inc pop addl addl inc add jns sbb test mov add (bad) pop loope sub hlt lahf (bad) hlt outsl pop sti mov mov (bad) stc mov imul mov into movsl cmp mov sub cmp mov leave fisubr loope das rorb cmpsb dec fs xchg popa bt (bad) jns mov jb push sti mov hlt push push lock jle das inc or mov loope ret push nop mov pusha imul jecxz sbb rcr jae and mov sub and cmp dec mov push aam pop sahf jne and mov dec inc mov nop jle xorb xor xor xchg jmp sub and or push add lods push pop push bound sbb inc mov lcall movsb push adc fimul jge stos insb mov (bad) xor lcall insb cmp add pop and push jne loopne int3 mov sbbl push sub imul call imul cmpsl cmpsb mov sahf jmp orl divl shlb cmpsb lock pop mov ss mov roll pop jge jle mov jecxz icebp xchg jbe fnstcw or repz jge pop call push push sbb xor mov repnz (bad) push push xor mov mov je push push cmp mov jae lds mov dec mov shrb rcll push scas ret mov cmp popa movsl cmp out or test cmp outsb test mov lea inc in sti outsb fmull cmpsl add iret inc mov stos (bad) daa jmp and in jb hlt push test mov add xorl pop add out jno mov hlt (bad) hlt push xchg leave pop ret sahf call sub sub (bad) cmpsl and jge js loope xchg push cmp cld xor (bad) xor adc push shll sbb inc dec out xchg jno fcmovnu scas add loopne cmp out adc aam mov xor mov xor sti jo in mov and sub adc gs xchg mov cwtl stc xlat insl push (bad) sbb mov or xor sahf data16 sti imul test sub lcall jb jecxz arpl adc pop push cmpsl imulb xor fs mov inc sub js popf into add insb mov lods dec inc xchg jp lds test add push jecxz pop add dec insl push scas (bad) dec fisubl in stos leave fwait jns mov sbb call inc aad movl jnp iret mov or sbb adc sahf add pop inc mov out xor add popf enter lcall push cmpsb push sub stos icebp push pusha inc arpl inc arpl xchg cmp xchg test and imul push sub mov and clc mov and mov jne jnp or incb mov sbb lret icebp xchg dec pop xchg pop dec sbb adc jle movsl jle test mov jecxz mov insl fs pop mov nop jns aam scas cltd in sub or xchg xchg adc fstpt or mov xchg ret and sub insl xor inc iret out sub pop fs jne scas movsb and jno mov rcr xchg jecxz pop dec stos add aas pop mov outsl mov cmp cwtl (bad) cmc movsb jg test vcvtsd2ss out push popf test mov je pop insb jge xlat or pop xor sahf cmp mov xor loopne sbb mov mov cmp divb or push pop dec bnd adc cwtl lret test dec nop or adc shll jbe or jae dec lds sti aam nop push enter pop cmp jne fcmovnbe add cmp (bad) in jbe inc xor (bad) jl mov andl rorb out pop mov lret loope mov or mov add aad jg pushf sub mov lods ljmp lods fwait push aaa dec pop pop inc inc or mov jno mov jns pop inc insb cld daa cmc mov cmpsl int cltd addr16 (bad) jae icebp (bad) imul and sahf inc stc ds xchg jge mov mov cld xor adc add push stos mov push ret lret cmp mov mov dec int3 ret inc cs adc pop xchg scas imul pop cmc incb pop cmpsb xchg inc mov sub jp popf mov push lea cmc ss insb shr (bad) sub ja or xor icebp (bad) stc jle dec mov clc mov or sub sub add cmp push sar loop and mov outsb call adc mov sarl jg push iret addr16 mov lcall rcl fcmovb xchg cwtl cmp lahf outsl ljmp pop pop loopne xor ja lret (bad) jbe gs sbb cmc hlt push test mov push int mov pushf movsb sub inc push add or and add (bad) negl insl jno inc (bad) orb out jle daa mov into push or mov mov es xchg inc dec decb lods stos dec test dec fwait scas dec adcl shrb aas sbb adc push je ds cmp inc ds icebp std pusha xor xor int3 mov test pop pop jbe mov push cltd mov adc sbb push jne xor jmp adc or jmp loope test out mov add (bad) fmuls mov into stos sub fsubs fucomip inc movsl adc sarl pushf mov xor stos mov pop add mov jnp or push inc mov push ret jle xchg mov fildl cmp and mov push mov and rorb sbb scas in data16 aam out mov fs les or hlt xchg (bad) clc mov mov pop jo push (bad) imul stos inc outsl cmpsl cmp lds pop aam jno inc inc mov lcall enter cmp (bad) mov ret int adc dec mov push push (bad) ss aam push mov jmp sub (bad) aad pushf jl inc dec les sbb push adc sahf mov int pop fwait and sbb int xchg pop xorl test js repz cmp cmp push fiaddl gs scas lcall xor push lock stos mov or jp adcl jp mov inc add hlt or icebp mov add mov inc lods push cmpsl push test pusha je std mov pop sbb lcall mov fsubrs cmc adc and and aad aas jecxz int fs in cs js xor data16 sub xchg adc push (bad) ret repnz cmp mov faddl fistp ljmp mov adc jge jnp (bad) mov sbb movsb pop sub push adc (bad) jne add or dec fldt cmp xor shlb fbstp pop mov sbb out into mov in call dec mov data16 push push mov subl insl or fistpll sub pop xchg xchg mov fnclex lret push pop movsb adc jbe stc jns push sbb (bad) cmp xor fcmovb fildl nop test jbe and mov ja lcall in bound adc shl test out dec jecxz and cmp in and icebp aam mov jnp out mov pop jbe or inc dec (bad) or aad in data16 sub das aaa cli int aam pop (bad) arpl ret sbb stos mov dec jnp mov aam (bad) int3 fs outsb add fild pop sub mov icebp ds cmp mov loop lods aam push sbb xchg or mov jmp in or clc sub scas (bad) jne jg fs mov loop mov (bad) fldl decb jecxz and std mov pushf jne pop add xchg jne icebp add lret xchg incb mov outsb lea or push (bad) shll cs cld xor or adc fcomps jb movsb call add cmp push scas mov lcall daa jae push xor pop or mov repnz cmpsl pop aaa sub push mov lret call mull mov sub adcb cmc jb jbe pop roll add sbb test xor pop mov cmpsb test test lret pop and or aas ss nop inc jnp adcl int3 outsl cwtl ret or in and mov or jb jge fdivrl jl icebp mov mov jo cwtd dec (bad) mov xchg bound push mov pop mov push std xlat enter push adc jne cmp mov test js jae call push (bad) push jns mov imul rcr and cmp sub andl jmp call pop ljmp lods test dec and add pop mov xor xor jbe nop fnop outsb mov outsl std out mov xor iret out cmp xor pop insb aad int3 mov int3 cs cmp dec outsb cmp and dec fs jle cmp add mov and and mov and stos dec stc dec jge cmpsl jae sub inc add int3 push or xlat mov insb inc stos cmpsl sbb xor icebp mov adc jne and adc xchg or loopne out adc hlt bswap into adc cmp add jns xorl push into sbb fldt mov sub lds (bad) dec jb (bad) pop sbb jae jmp fldt xor mov mov sub or sbb gs push xor adc pushf cwtl inc std (bad) or add and pop lds xchg ficompl (bad) mov (bad) in jnp mov shrl pop imul jg mov cmpb xor outsb arpl cmp mov mov mov xor fs lret lods pop les push vmovaps fistpl push mov xchg pop jl (bad) icebp push (bad) or or lcall ss push push shrl and add jle repnz fwait in ss out lea sbb cmp pop cmp adcb xchg xchg pop daa lcall nop jns iret es stos lret push loop push clc mov adc (bad) cmc fistp mov imul push loope cs hlt ljmp pop fcoms xchg fist push add xor arpl push or mov dec or or pop jbe and mov sub sbb imul push sbbb arpl sti stc stos mov adc test (bad) xchg rclb pop mov (bad) jmp int mov xchg jae pop jmp or sbb xor xchg push sub ljmp add mov stos dec sahf inc sti in (bad) and shrb xor mov les imul ret in mov test lods xor inc sbb sub mov (bad) lret int3 mov add scas outsl dec (bad) roll test int and jnp pop pop pop (bad) dec sti add out (bad) sbb xchg xor jle ret push inc xchg jecxz xchg int3 fistpl data16 bound add mov scas inc mov sti int mov dec xchg je shrb adc pop pop repz outsl lret ret push add enter call xor jnp std jmp adc mov ds cltd mov dec test pop dec jo lahf jp stos cld ficoml (bad) jbe cmp scas dec xor xchg or or (bad) mov aam lods cmp push imul scas push and pop sub adc push jl ljmp cmp out in inc or cmc jmp sbb fs xor cmp jecxz out pop lds sbb call stos jmp lea cwtl scas cmp jmp sub mov inc imul rcrb sbb rcrl into push cmp adc out dec jbe pop (bad) icebp popa adc gs pop lfs cmc popa popf push sahf int3 add call mov sub cld add or push push sub cltd repnz repz dec ret or nop imul adc enter jae ss lea cltd push sbb sub sub shlb aas inc add jae pop movsb push movsb call mov stos pop cli or jmp js subl and cld lock (bad) pop sub (bad) cmpsl dec pusha xor stos loop sahf int3 aas jp jp (bad) test (bad) pushf (bad) xchg mov and sbb jp jmp cmp and push or loopne pop je aad (bad) xor push pop movsl mov dec mov (bad) adc adc xchg pop adc dec or (bad) xchg mov jp aas mov fldt in movsl push push in pop dec fnop mov inc icebp add lahf movsl or in inc pop ja mov imul lock xchg mov and xor scas ds push push incb iret lahf or ja stos fwait sbb mov xchg dec (bad) ljmp ss sarb xchg inc push pop outsb daa sub push pushf sub cmp ret xor pop pop cmp lds lcall ret mov loopw test arpl mov outsl shrl mov sahf aam lret pop in pushf daa sub push pop or inc popf addr16 mov mov insb jno inc stc push sbb dec loop (bad) movsb cmp jb out testb hlt fs ljmp mov jno and je xor inc bound aam pusha xchg xor roll jb push sub mov data16 jmp sub inc mov sti push sub xchg out add add mov xchg or sbb in mov stos inc fisttpll das xchg xchg aad data16 xchg repnz es xor in movsb nop jns fnop ss outsl mov pushf xor movsl sub fwait outsb inc dec mul cld push scas jle jno push stos sti mov dec sbb sbb int dec adc mov sub xchg in or jl jg dec aas adc stos ret adc push xchg ja fidiv push add (bad) add lods insb scas xor dec mov lret push mov mov icebp sub push sub out jp fidivrl addr16 push test stos dec fimull notb repnz cltd dec lods mov fstenv pop shll jmp pushl xchg iret jp cmpsl bound (bad) ja jmp cmpsb inc aaa test inc sbb (bad) mov repnz sub mov addr16 fs ret xor mov pop (bad) stc mov dec jno inc loopne ret push shrb sbb (bad) pop inc xchg pushf jno ret popa and std sbb repz fimull decl aaa adc pop sbb sahf mov jno je,pn lahf test mov and and cmc xor jnp xchg mov adc and sarb out pop sbb mov arpl mov pop addb mov inc enter mov insb cmp leave shl scas pop pop bound cmp and mov xlat clc fistp xchg xor lods lds dec xchg cld mov add stos cmp xchg cli push gs mov jo adc xchg inc rcrb into cmp sbb jp jecxz rorb sub rcr mov mov jbe mov add loop pop ljmp arpl push popa nop stos test pop out pop sub test jae push sbb (bad) jmp sub outsl inc jmp stos mov lret cltd sbb pop and lea daa jno or cwtl leave rol jo idiv es fisubl ja aaa outsl stos lds mov mov test repz add fwait scas mov push sbb dec jmp mov mov lret ucomiss in idivb (bad) imul pop fistp nop push addr16 adc cmp xchg mov sbb js in ja or or repz or sub sahf (bad) xchg addl cwtl fdivs fsubrl popf das cmp xchg bound enter inc push dec pop mov scas inc popf adc js call jnp loop push insl jne push lock rcl lods in inc out (bad) cmp adc js jmp mov dec imul test lcall cmpsl adc pushf adc int and mov push jb out scas test push jnp test loope push rcll ret add jg imul push int3 inc xor popf movsb sbb xor cs and das nop adc dec push fwait enter outsb ljmp jp lea fadds aam out xchg loopne sub faddp mov add addr16 sub rep or and in add maxps jecxz adc or pusha pop xchg push adc push repz test sub in mov mov mov mov (bad) fidivrl adc pop aad shll inc push (bad) (bad) rcll cltd adc pop std jg jo sbb xor (bad) or xchg testl jbe mov (bad) dec aaa dec leave add mov repnz dec and in sahf and push das rorl or shr jb test in dec mov mov call lea dec lea jl test and sub jecxz xor fcompl dec das dec lahf ds mov adc xchg add in les test mov mov fcoms ss ret cmp jmp jbe je jmp or into lods fidivl fiadd and insb xchg lods sbb out loopne fist pop pop sub lock adc cmp shl and push sbb insl jle lahf mov dec xchg fwait sbb push fcoml push das cmpsl scas mov cmpsb sbb mov push cmpsb jns (bad) cmc xchg repz push int jb jle subb xor jo int3 pushf sbb mov mov xchg into aaa test inc sub inc or test dec cmp jb jge jl stos iret cmp xchg mov lahf stos xchg test push jmp add or xchg pop scas dec lods inc mov lods pop movsb lret jns push notl jmp add fisub inc fwait orb xor fldcw sbb data16 jl mov icebp mov shll cli imul aas call add in jns les sub sbb shrb ror ljmp mov jne add or inc fiadd fmull push lcall jmp cmp add xor jnp dec lds lahf pop pop dec and cmpsb dec test lret add xor fwait clc loopne pop cltd jecxz loopne mov arpl sub sbbl jle roll loopne out sbb fimull stos cwtl dec push cmp dec xor xchg jbe movsb ret in adc cmp pop gs mov test sub in scas xchg sub xor push sar jge push aaa ficom sbb ret sub or push and movl xchg lds dec fisttpll sbb movsb aam sbb xor sarl mov sub dec aad cs cld daa mov fs fidiv mov mov jo cmp sarb xor pop (bad) jne mov dec outsl pop fisubrl push js loope xor aam adc lret or dec dec repz outsl out inc cltd das jno pop js in cli fldt data16 mov out push jno ljmp cmc push fstp test sbb lds jbe mov scas xchg xchg push cltd (bad) mov push inc push daa mov jne sbb add and jle add test cmp adc add mov stos add xor jmp mov lock jbe push call (bad) stc push test out ret lods or push mov cmc inc adc rcl orl fdecstp rcr xor test lods pop lahf rclb sbb daa aaa jnp pop fwait clc push jo xor xchg xchg pop test test dec and fwait pop cmp push fnstenv (bad) les xchg inc loopne (bad) test arpl icebp pop xor lret rcrb mov push insl imull xchg rclb mov lahf mov push mov jno or cli xor (bad) loopne or adc wbinvd sub test sbb and imul or or xchg mov cwtl shl dec push mov cmpsb (bad) mov testb idivb cltd pop clc cmp push xchg mov sbb lock fwait ror xlat pop xchg add and add in outsb push cmp xor ljmp push add lea pop adc cltd mov jge push and in repnz mov xlat adcl lock mov mov cs push dec into jecxz cmp outsl adc je rol mov jnp cwtl (bad) mov xlat add cmp fwait add push lock xchg lea push in cld push movsl loope xor (bad) sub pop loop mov pop push adc push shrb out stos push mov cmpsl pop dec inc pop test or or imul mov cmp dec xor push in inc lcall and setl adc mov aad and addr16 aaa inc pop aas jecxz in outsl mov shr cmp popa js pop dec cmp cwtl cmpsl pop incl inc add jecxz into scas mov pusha sbb sbb outsb xchg test loope mov data16 fucomi xchg add push dec daa sub cs repnz pushf or jns inc subl adc jecxz sub sub inc pusha mov inc xor mov push repz (bad) cli lods rcll stos (bad) and test mov sbb icebp xchg cmp or mov lds cmp aad fimul lds pusha inc mov pusha daa and mov jle mov xchg aad repnz push popf sub and jnp lea push cld in xor outsl jae jbe jo dec xchg adc les outsb daa gs sub sub mov pop sbb mov repnz pop insb insl insb and xor jmp leave int flds (bad) xor xchg pop lea add pop movsl into pop scas mov fxch add or xor push sbb push ds and rorl mov clc mov enter push sbb ss imul xor dec push gs fsts push stos fs dec popa movsb adc push pushf test adc sbb xor stos les cld sahf adc aam (bad) pushl inc aaa jecxz movsl stos pop mov xchg xchg mov jb inc test push data16 add pop adc pop leave pop in addl lods (bad) pop push sti ljmp sti or movsl mov inc add pop fcoml loopne push xor push test int xor lea ret cmp pusha sti lods aas loopne lea shufps ds inc jns scas xchg fstpt inc stc je push xchg inc fisubl xchg pop ja mov imul mov sbb jecxz jmp hlt mov hlt loopne ficoml cmp or sbb dec dec lea (bad) mov out in roll (bad) hlt jbe lods mov rorb andb mov xor inc or cmp ret mov mov adc rolb or or mov sarb in push adc (bad) jae jg lret sub push and mov lret cs pushf dec test outsl shl mov jl std jnp mov adc mov cmp mov sbb (bad) sub cmc dec mov inc jmp or adc pop xchg cmp test sub gs loope insb insl add fldt xor pop pop xor loop inc shll std cmp sbb mov lods movsl cwtl das aad sbb jne jp push inc add (bad) daa xchg iret nop jnp,pt dec jae xchg out sbb jo fiaddl mov fdivl clc pop stc pop pop lods stos rorl les pop icebp lds loop jb movsb lea mov pop mov (bad) repnz xor call dec jge push (bad) nop andb sub loop cltd dec stos lods insl (bad) jae in inc xchg lods inc out or and ja or inc jg push clc push xchg (bad) idivl push jmp cmc stos mov adc and jecxz pop int3 scas cs test dec popf dec dec iret fldenv fistpl iret xchg ret not add mov jp xchg fcmovnb xor pop pop pusha jmp adc jo aas add pushf getsec sub daa negl lret adc push xchg out test sbb stos dec testb mov nop in sub test jge mov rcl addl inc popa lcall std rclb push mov jp xorl xchg pop addr16 test pop jbe pop hlt ja cwtl push ljmp enter xor (bad) mov stos leave loope inc push mov popa int3 lods test xchg addr16 xor dec fs xor dec jecxz xor mov repz dec test mov rol mov ds fnstsw sti pop mov adc (bad) xor xor loop adc dec jmp push jmp out movsl in test pop push icebp (bad) jge jb xchg inc daa add icebp iret scas or pop cld mov dec mov dec push repnz enter inc mov cld mov sub ljmp mov data16 test cmp jne xchg mov inc xor fidiv fnsave adc imul inc icebp out or fadds pop adc stc subl imul out and (bad) adc jns pop (bad) out cmpsl aam int3 fs cmp sbb xchg push bound push movsl sub cmp and push mov mov dec call xor fnsave pop popa imul mov ljmp mov je xor jbe js pop test and add out clc sarl sub fwait add ljmp add pop dec dec fcoms int3 repz fs (bad) push repz js jmp scas lret jmp (bad) jne mov cmp or dec cmp jbe and popf mov in xor xor cmpsb and (bad) fs xor xchg xchg inc ds add and push js loope lds xchg inc icebp jecxz jmp enter xchg call pop push iret (bad) adc sbb inc and lea arpl push adc push (bad) xor sbb mov mov mov ja mov les in fldz pushf adc (bad) fwait xchg add out (bad) jmp push (bad) arpl shll insb cltd jbe lret (bad) cmp mov xchg xchg addl scas add in xor enter js add insb pop clc pop pop xor scas push shll test lods mov pop (bad) xchg inc mov mov lret std in enter rorl lods and ret jl daa outsl mov push mov xchg cmp ja ret aam jbe fninit sahf inc mov xchg mov mov mov repnz or pushf cmc mov outsb adc dec inc stc mov das cld stos cmp ljmp clc mov lahf cmc dec mov fs jmp ficompl call cmc jg jbe add fs push into fadds push jle in pop jg (bad) jns mov testb mov ffreep ret jns ljmp sarb push clc stos cltd imul shrb sarl clc movsb sub mov test ret mov dec call (bad) inc ja push (bad) repz xchg mov and sbb dec pop xchg cli sbb dec dec jl out mov ljmp dec push mov jl or mov pop je push roll (bad) mov mov xchg xor mov pop sub inc (bad) or popa pop fdivrl out pop mov loop jl lea and sbb push fisub mov loopne xor lods and mov pop test jno cmpsl dec fbstp inc adc cmp push mov flds out mov frstor adc lods jb lcall pop and pop insl or inc push movb out ss jbe cmpsb and (bad) fwait push mov xchg jmp push xor adc hlt and mov or push adc ljmp xor xchg cmp es iret or in out cmp repnz popl lcall add stos shlb inc jbe mov sbb or and pop mov xchg xor jne das mov jno in dec insl cld mov lea sub fistl cmp xchg xchg mov loop ret aaa ret loope movb dec or imul mov mov pop cmp ret lcall push push cltd lahf outsl loop lds sub xchg pop fnop cmp jl lods mov mov sbb cmp int jb repz addb icebp mov ss rorl jg xor fnsave xor inc add cmp or pop jmp push jb icebp cmp mov jne jbe jmp addl xchg jl mov out mov and push loope rorb mov mov push xor dec push rol lea jl fistpl sbb fs inc xchg mov pop test icebp and aad inc jp mov cmp stos mov mov (bad) loope mov (bad) and and fdivl enter xchg xchg (bad) xchg shl int3 fwait mov xlat std mov fucomi mov and loope pop hlt push (bad) jge add aam lahf mov cli clc jb adc fidivrl (bad) js push pop push mov test cwtl cmp xchg addb sub jno repnz cmc repz mov cmc daa mov fimull lret xchg add out adc arpl xor push sbb clc neg adc pop aas stos adc adc inc movsb mov lock daa inc pop push mov xor insb pushf mov ja (bad) stos sub cmc dec leave mov cmpl int jb into push pop incl outsb out push repnz push or in mov dec lcall rcrl inc cmc in xor in arpl (bad) lret jecxz mov or adc outsb jle xor inc and adc ret jg in xchg and mov mov add popa (bad) fsubrl push push stc mov dec sub std cmp (bad) in icebp pop int mov push pushf dec mov and pop ss adc mov cli addb inc in pop mov stos (bad) jl and xchg mov (bad) scas out cltd (bad) int3 xchg out fs repnz adc pop fistl xchg adc into lods push hlt lret sbb mov aad xchg std add fcmovnbe mull adc xlat test cwtl repnz out mov xlat pop and test loope cmpsl mov xlat stos in loopne out aas adc mov aas cli sub xchg push sub add or mov enter (bad) adc push sbb pop push sbb ljmp push stos or xlat outsl xlat nop mov mov pop mov addr16 and mov dec dec ret sbb out (bad) adc push lea sbb xchg (bad) xchg rcrl and jb jmp rcl jecxz lahf or xchg fldcw pop or jns call (bad) xor andb pop data16 rorb push popa mov push adc sar push sub jne aam xorl cmp dec adcl dec add mov lret jecxz sub pop adc arpl outsl inc icebp lcall or or push insb divb mov jp test imul lods inc popf mov loop mov mov sbbl or jl pop sbb jne or aas fisubrl xchg fs sub mov pop push fldl push rcr lds jo sahf push or (bad) cs inc mov jle divb test and cmp adc das sub mov xor lret push adc sub jl jnp fmulp in daa cwtl packsswb dec insb push mov jecxz outsb push aad xor jge scas shrb es add and adc mov stos cmp fcom mov (bad) jno xor orl mov pop in mov dec hlt mov adc lret dec fsubl inc push imul inc lcall or push je sub ss fwait and mov add cmc (bad) inc aad lahf stos divl push mov (bad) mov in fidivrl loop inc mov jmp roll mov add rcll lods xchg lea xor (bad) ljmp out fsubrs nop cmp in mov jae and push inc movb fidivr push xchg sbb push andb int3 es movsl add in push imul inc mov mov sub inc pusha ds repz xor dec subl loop pop lret out mov mov data16 push mov mov and adc sti out pop jg ret push lret insb mov nopl aam ja adc repnz into or rolb jg inc pop xchg into inc repz adc int3 into mov (bad) (bad) lcall mov loopew (bad) add gs xor push mov cli pop das add sahf outsb gs aam and neg push add sbbl test and aas (bad) mov push push mov sbb adc (bad) daa in imul cli adc cmp inc sbb int mov dec xor pop outsb push lods mov loopne mov push rclb pop les mov mov imul bnd and (bad) repz imul in jne mov mov pop scas adc cmpsb (bad) rcrl jmp pop push cmc popa or add push dec add mov sbb fidivr js xchg add pushf aad cmp push mov sub adc mov lods sub mov or (bad) pop andb jmp cmc cmp popa jle ror pop adc cli inc fadds loop dec enter and mov adc jno stos xor in lods xor pop adc pop add loope js xchg inc push pop ljmp sbb add and xchg inc test sbb fneni(8087 cmpsb nop or xchg pop aad out int3 shrl adc mov into xchg mov push in in jp cltd mov dec push out js fs xchg repz dec sahf jmp stc cmp (bad) popa cmp inc jno xor push aam dec push jae mov movsl fwait mov or movsb mov ss dec push fdiv sahf add insb inc jae pavgb aam fldenv mov mov jne cmp imul lret lea add mov lret (bad) jge jle test out or lods leave stc sbb mov shll fwait pop inc cmp insb fdivl and jae xchg push inc cmp xor jb aad gs loopne sbb aam mov imul repnz xor ror sub pandn insb adc and insl push movsb icebp push nop mov ficom stos mov jne mov out in xor xchg in enterw cmp icebp lock inc pop aas dec outsl jb add ljmp shlb loopne sahf in adc xchg mov bound fsubp loop loopne jne idiv mov and pop pop pop xlat ret push loope push push out outsb jns mov mov xor call jl push cwtl sub jno mov push divl inc ret arpl add rcrl cli jp add cmp xor mov mov out les mov (bad) stos test xor mov arpl js fs (bad) mov enter outsl mov arpl mov sbb insb mov (bad) (bad) sub pushf pop popa adc nop loop in mov jge push loop out sti jmp inc fdivs fadds dec jnp inc ror jecxz xchg test ss lret xor mov dec repz jecxz inc aas loope cmp push or xchg mov in dec test in sbbl pushf mov lea push xchg dec pusha mov scas xor cmc clc ret mov inc out jmp outsb popf cli xchg int3 push jl daa xor mov rcll lcall imul pop popa (bad) in fidivrl push les inc test fstpt (bad) pop jae sub rcrb sbb lods mov test xor push ret outsb scas arpl mov add add sub repnz popf ljmp mov mov push hlt mov and mov push dec imul in aas iret ror stc lods sti jne cwtl and insl push imul in inc outsb push (bad) push xchg xor cltd jle sbb cld dec aas push push scas in fsubrl mov xchg xor sbb pop mov xchg xor cli mov dec rorb sarb nop in jb sub xchg pop sub int shrl cld xchg je adc cltd xchg mov lcall xchg hlt mov sbb push into push jle pop fstpl dec repnz mov clc pop cmp scas push cmp push push (bad) pop cmp sbb cmp fldcw jbe xor icebp lods push sbb popf add mov scas inc mov stos jb jne cmp mov jo and cltd push or and mov pop sahf fs xor mov call out mov jns,pt lods stos jnp les add adc dec adc (bad) and push stos stos mov sbb mov cld mov outsl divl and pusha lods cli out lret stc fldl outsb cmpsl push je stos aaa mov negb dec (bad) and sub int ret xor shlb pop stos das popl or cmp nop sahf stos dec sub subl loopne int3 adc xor ljmp inc or lret movsb (bad) xor pop push scas ret mov rcll jg fs jne,pt jecxz push lret or xchg in dec les scas lret clc mov sub ret push out xor or pushf push pusha sahf pushf inc cs jmp rorl popa dec xchg mov das mov out xor aas inc push and mov mov mov aas ja in cs mov mov or push gs jmp enter push push jo ljmp mov pop andl mov icebp dec jne or fimull dec (bad) mov xchg popa (bad) insb js pop pop lcall test xor lret adc dec data16 mov movsl and mov aad or adc sub dec push cmp test inc fcmove rcl push movsl cmp pop or adc mov push push faddp add pusha cmp (bad) outsb test sarl or and push sbb out movsb push daa aas xchg adc xchg lods pop scas in addr16 xchg cmc push into jo addr16 test das push cmp incl xlat (bad) and cmpsb sub movsb adc aam prefetcht0 mov das sub data16 adc jno (bad) or mov push (bad) sbb xchg dec fadd shll sbb outsb dec mov sbb xor and dec inc inc mov push sti inc fwait sub jnp orl (bad) sub sbb mov in add fildl call cmp adc sbb lcall popa das nop in es jge arpl cs jg enter stos sbb lcall in in mov xlat mov xchg stc aam cltd xchg dec jno fcmovnu pop cmpsb ljmp lods out cs adc cmpsl jp (bad) mov rclb and cmp xchg clc or insl icebp (bad) jno fwait aaa enter loop mov nop stc fsts mov popl push fwait out mov rcrl data16 jb xor test pushf shll mov cmp jecxz add cmp (bad) mull pop push mov pop sub jb or add mov mov loop ror gs adc jnp cltd fldenv and adc lahf xor test lahf test jl jnp add ljmp xchg inc adc jno scas out dec pusha mov mov (bad) push jecxz (bad) pop mov addl mov test xor adc cwtl sub adc aaa stos scas or mov mov es cmc xor sahf (bad) loope insl push adcb scas dec (bad) sbb mov int3 popf arpl nop cmp imul lea out fs jl xor dec cmp and mov push add sub out dec lcall test push add mov or js (bad) in dec push fcmove mov pusha cli (bad) push rcrb rclb data16 mov sub mov rorl cmp rclb push mov dec test popa inc jecxz mov fstl sub rcl xor (bad) cmp repnz push outsb in (bad) push xchg mov loop xchg xchg outsl sub sub hlt inc jmp ret js mov fwait (bad) lcall fdivrl sahf pop or aad lcall (bad) push and stos mov arpl mov mov in cmpsl call ss arpl jae dec mov dec in fisttpl (bad) imull dec adc dec fdivr int jo add xlat lcall outsb xchg call mov inc lret mov mov pop cs push cmp repnz push dec out ret jg mov xor or xchg mov jae out and mov sbb gs popa fisttpl push out mov cltd ja and ds cld out call pop cltd inc test and popa insl ljmp inc into push inc jae mov pop (bad) ret icebp jge jle (bad) aaa pushl out jb and data16 jb,pt out jl mov cltd cmpsl out adc jp mov (bad) jb and mov xor dec jno loopne or add dec fcoml jb mov adc bound (bad) into das mov pop (bad) sbb je add ja mov outsl cmp test push ja incb stos dec jno mov (bad) mov inc mov sbb out pop sbb add sbb fistp imul jl push mov adc les mov shr jle inc jno lcall add ror dec xlat in daa mov mov hlt icebp rorl arpl fstl stos adc imul mov fnstcw int (bad) push sbb jb xlat (bad) jae into jge test xchg addl (bad) movsl push outsb cmp and jmp xchg dec or mov add je add inc pop mov jnp flds popa in mov (bad) xchg in sbb pop arpl jo,pn cmp xchg sub in mov lds xchg pusha and int3 mov lock jnp inc mov insb xor dec add dec (bad) rol inc fist pop pop mov aas or and mov movsb lea (bad) lock popf fisub xchg in fstpl sahf iret sbbl mov dec dec es (bad) adcl push pop into mov mov (bad) fcoml movl cmpsl dec ret add push jno in sbb or in push add fisubr outsl fisubr add in mov add dec jnp push sbb leave stc ljmp data16 cmpsb jp sbb sub pop push xchg inc jg (bad) ss mov pop add (bad) out jae insb sub jb or (bad) mov inc pop or enter lods (bad) fcmovu stos mov imul jb daa repz xor push stos stos xchg inc ss xchg ret jge fdivs sbb scas outsb mov jmp xor aad xchg sub mov scas cmpl pushf mov pop outsb push jne sub lods mov mov or mov jnp pop xchg inc lds fs inc adc clc dec push or adc sub mov cld sbb push cltd int3 repnz inc fidiv mov jo in popf sbb orb pushf movsl nop movsl sti add jmp sahf popf jae xor aas cmp outsb and ficomp jbe adc mov inc mov cs mov (bad) in (bad) mov in dec sub add jae in (bad) je dec xor hlt dec or cs test mov adc jl mov jbe inc xor xchg push xchg aad jne (bad) and pushf ds (bad) jns lds idiv inc mov dec cmp or xchg (bad) div in cmpsb in xorb or sbb dec jno fcmove fwait mov xor fildl mov dec mov in pop mov (bad) in enter mov in pop push jmp (bad) popf (bad) and push lods hlt pop sbb sbb jl aad sti xchg push mov mov jmp (bad) mov js test gs adc jg add cmp xchg jb mov adc push mov scas or pop (bad) push push lods xor inc aam mov pop gs popf lea (bad) sub mov xchg int3 mov cmpsb xor das (bad) xchg xchg lods pop dec js and out sarl push jecxz aam sbb sub clc leave outsb mov adc sub mov outsb sbb loopne sub and mov je dec (bad) sahf out xor (bad) cmpsb (bad) mov ja or sbb shl mov jnp test cmp lcall sub jle rol mov adc sbbl mov sbb scas sub mov inc sahf idivl ficoml (bad) dec mov inc mov mov sti sub pop mov cmc outsl pop push movsb lcall mov jmp push sbb mov repz xchg mov xchg addr16 test sahf xchg mov or cmpsl sub test sub add shll xor xor adc sub into mov (bad) adcb sbb push sub cmpsl out jno xchg jo mov out outsb mov jge popl leave dec data16 jns in push jnp lods ret aam test outsl mov xchg int3 dec adc pop and inc mov mov pop pop imull fucomp ds daa arpl fiaddl es rep movsb ficompl movsl sbb jg mov nop mov (bad) xchg jns inc or cltd and mov aad repnz or in in clc mov fwait daa loope pop inc push negb xor fadds out bound xchg push pop mov jmp jno mov jmp popf (bad) out mov stos add inc or sbb sbb fldl movsl sub dec cli or inc rol xchg inc shl ljmp aam sub ja hlt or jl aad mov gs jg dec xchg xor cmp lret test pop lret cltd mov arpl outsl jno sub push mov jg scas or daa stos in jl call rorb pop inc add sub ja (bad) out rorl pop dec and adc lea stos outsl mov outsl sarl shll xchg sbb scas cmp (bad) insb jae lahf pop aad dec sub xchg leave xchg cmp outsb add ja int push loope je mov sbbl sar imul cld jge push adc aaa xchg stc gs add xchg adc (bad) cmpsl ja cmpsl add int3 and fdivl jb inc mov or fild mov fnstsw jb pop es (bad) pop and fiaddl arpl sbb push add movdqu mov cmpsl sub addr16 test pop push sbb loopne ds cltd lret jg xchg je pop test cmp aam or push lock into cs xchg pop data16 xor mov push add hlt scas sub lods mov dec movsb push test cmp ret xchg cmc cmp sub stos std lods mov ret mov push add (bad) or add leave or jo dec movsl dec mov fmuls xchg (bad) int3 dec idivb ss ret es ljmp jmp push in xor mov (bad) jnp out cwtl mov lahf or ljmp ds rol xor xor std fiadd xor push jl dec push fwait test shrb aad clts (bad) addr16 mov mov icebp mov loopne mov fs rcll loopne push lcall aas out (bad) shl (bad) negl mov int sti push lret out dec clc lret mov outsl mov fistpll aam xchg xor loopne (bad) aad (bad) lret dec jecxz outsb xor popf dec or aam xor daa lahf jg popf pop lret lds sbb lret cmpsb sbb mov stos loop mov adc inc sbb add cmp scas (bad) inc iret xor ret mov jl sub inc dec push loope insl repnz pop inc stos mov and push and add push mov arpl dec mov and insl pop notb mov mov sbb and ja push mov inc test cmp jbe xor pop test ficoml dec (bad) or daa enter ret idivl imul mov adc mov jbe scas lcall lods enter fwait xchg fiaddl into rcr leave cltd sbb mov jecxz xor xchg insb mov add mov dec xchg push jecxz mov stc mov pop fdivrl xchg dec add rorb xchg fs pop jnp push out push or mov dec (bad) push in cld aas (bad) daa xor fcomps jnp mov fwait ja pop mov cmpsb push xor xchg std idivb sub lret mov stos loop xor inc push mov add dec dec into les xor (bad) call xchg dec std sbb lds cmpsb je pop stos js mov mov ds sub add lcall push inc pop add ds push ret dec jmp mov stc bound push jnp mov and icebp mov dec mov or sbb push sarl inc push out shrl nop dec jne es and ss adc cmp dec mov adc dec in lret xorb lock cmp jno shrb dec xor jbe pop or stos cmp jle data16 data16 sub enter xchg stc sbb sbbl repz adc xor xchg mov rcrb xchg jmp cmpsl cmpl and sbb aas (bad) mov jbe jmp and es jl add lds fiaddl sub jb or xor insb mov fcomps or popa dec mov xlat jp mov dec daa adc jg mov mov xchg popa mov xor enter loopne nop scas cs cmp add pop gs roll (bad) jne cld lahf mov addr16 pop xor pop mov sti das ss or dec (bad) or adc stos pushf dec inc mov mov mov or mov sbb inc mov das jbe std sbb in test xchg scas xchg mov mov cmp insl movsl dec scas dec sub or out xchg mov cmp ret pushf sarl repnz mov dec xchg lock into sbb repz inc dec inc mov std pop clc test jae ret jg pusha imul and lock xor sarl in jp xchg test sbb jp push inc (bad) cmc sbb insb stc xchg xor sub jno ds mov iret sub sbb mov xchg iret mov (bad) popa test scas mov fucomip inc lods mov lret add ljmp orb aaa or shrb and (bad) addr16 xor js repz jno xchg xchg xchg jecxz ja adc mov xor push xor mov push ja rep jge shrl push in fldenv ds cmpsl push pop mov push xor leave in insb push jns int3 dec sbb mov mov fsqrt insl inc lret mov outsl jns enter jle ss addr16 lret mov ds mov mov lahf aaa hlt mov iret cli cmp mov lods (bad) ljmp and addr16 mov adc stos sahf inc int out int3 rcrb cmp mov out (bad) mov outsb jns xchg sbb cwtl mov xor or cmp mov jbe addr16 or pop leave sahf push out in fsubr test daa push sbb scas test loopne inc push jb daa xchg xor cli dec xchg and jg enter aaa rcll fimul dec pop fisubl sahf pop sub jno (bad) clc xchg rcl loopne or js in and (bad) mov dec mov jb mov jnp jnp adc gs jp dec imul (bad) lods (bad) jnp or inc jle je ja out push icebp add mov test out inc (bad) push adc adc add adcl shrl inc pop cli pop (bad) movsb sbb (bad) hlt jns xchg mov das into movsl sbb stc mov das scas (bad) adc (bad) jne pop insb pop jg mov dec cld cmp iret xor inc mov pop mov jbe dec xchg add movsl cmp daa cmp cmp loope (bad) mov ret jno xor xorb inc xor xlat cmp repz pop fnstsw cmpsl and outsl movsl mov mov js out stos mov dec add lods lret out daa xor pop cs std loope mov je adc lahf cmpsb movsl bound adc inc jge or data16 sbb sbbb or cltd mov adc sub test or xchg jb outsb mov pop pop mov xor (bad) rcll clc adc stos ret jmp cs and gs mov mov mov arpl jnp rorl adc ja xor and test sahf and cmp jno jae outsl jle cli mov loope in add in pop loop mov jp,pn mov jp stc aam sbb das ljmp sub jb int sub or lds ss lret or rcrl lahf rcrl (bad) jl mov jbe pop sub xor pop ds scas insl cs fs popa mov cwtl icebp (bad) fldl mov pop jle inc in pop (bad) mov jmp mov and popf in test (bad) ret xor out data16 cmp dec out add inc cmp icebp cs cmp pushf std sub mov pop jg sbb mov pop aad insl cltd cmp aas sbb repnz mov mov sysenter lret inc imul push adc push test icebp sub aaa sbb int js xlat test stos adc subl push aad sbb lahf mov mov sbb add aas addr16 and jne imul js dec and or sarb push cld push and rol imul dec xor jno cmp push push cmp (bad) mov fnstenv out mov ja sub sbb jae push icebp call nop outsb xchg gs pop cmp sbb xchg jp mul ljmp or mov lock xor push adc pop (bad) (bad) ja fsubrl stos (bad) lret jle gs cli out les adc lret aad sub mov addr16 mov sub les leave dec test mov and jo test push pop repnz push repz mov mov jle fistpl pop popa sbb push push xchg cli xor cli jbe inc xchg adc loope stc push ljmp lods mov mov push inc shlb into inc xchg mov pop les pop insb sbb mov jne dec insl push inc popa cmpsl (bad) add mov pop push hlt (bad) mov fnstcw repz cmp and xor jge xor push adc and popa add jge jecxz xchg icebp ss xor jl push imul cmp cltd and sbb jl into fdivl int3 into in and rcl push fistp push pop and insb jecxz pop xchg push into icebp jb or sbb test ds std popf imul inc push jb or and cwtl ja frstor mov xor (bad) mov push fmuls orl or inc imul sbb xor push lds in jl xchg loop sub or cltd int cltd mov imul jmp test sub cmp mov roll mov lds pop lret cmp add std and and nop pop push repnz inc ss sbb andl lret dec jae adc (bad) mov lods cs daa js pop xchg push mov dec fwait sub sub (bad) cwtl clc pop dec leave out pop sbb mov fidivrl inc dec cmpsl mov jne repnz in (bad) lods sbb inc test ss aaa mov sbb cmp pop mov mov push into push adc dec inc mov sahf inc rcrb dec mov push test (bad) loope pop idiv roll mov sbb pop test add aaa popa sub inc push sub stos pop int in out fisttpl lcall lret imul out outsb loope stos sbb mov in push test jecxz in daa mov aas addl add popf (bad) mov mov xchg pop mov xor jmp or and xchg icebp test pusha pop mov jmp mov leave test icebp rcrb jle pop jg (bad) and or inc (bad) cld scas cmp adc aaa das xchg jbe ficoml (bad) in lret push cmp in mov pushf roll fstpt test les dec jp insb mov sub jle add in leave pushf cmp (bad) cmpsb jne pop lods and es sahf inc sub lds insb arpl shll cmp frstor cwtl xor ss mov xor adc stos push xchg inc lods clc jp pop lods aaa sti aas mov into or pop sbb inc adc sbb sbb stos repz ljmp cmp shl mov cwtl imul jecxz stc push stos sbb cmp call add (bad) pop in les lret jbe jmp cld (bad) xor leave mov xlat movsl lcall xchg ficompl lahf js fdivs mov add icebp xchg jle sarb xchg jp call (bad) int inc int mov jmp aas add jmp pushf fwait lcall xor jle ds push into enter push es fmull stc mov or jmp jle lds mov mov sub jb sub inc inc push lea xlat xchg fistp jmp mov pop aad mov cmp cmpsb or ss xor xchg out out mov cmp mov jns cmp shrb gs ljmp and mov dec xorl fwait jae sbb int push stc pop push adc mov mov in jne xchg insl dec fsubrl sub ss mov pop imull cmpsl jae or cwtl pop movsl sahf stc and movsl add es pop rolb inc les fisubrl int3 daa (bad) xchg sbb ret daa cmp lahf jmp andb pop inc sub push pop and call movsb cld fisttp pop add and jns repnz fisubrl std xor push outsb jbe cmp pop adc mov test xor mov pushf or cmpsl pop ret sub test jne add daa inc insl addr16 mov mov hlt cld push inc push xchg std xor ja leave cs repz rolb sbb sub lods stos es push fwait and jb sub cmp (bad) mov (bad) lock roll xor and sub das (bad) ss gs scas inc mov repnz fwait xchg stos mov adc mov iret mov xchg hlt std fwait adc out mov mov pop aad dec xchg addr16 rcrb xchg push add jg jb jg inc test movsb and and fldenv xchg pop push mov mov mov ja pusha lods lahf pushf mov mov fidivr fist add repnz mov or cmp mov mov (bad) xor loop and lret mov lahf es negl repz stc gs xchg jne (bad) fadds dec insb mov adc jl add add and jp add push mov dec out (bad) adcl ss push mov xor jge rcrl inc out ret jp gs pop nop insl bound jmp pop cmp lcall adc lods in lods jbe mov icebp cli ja dec ret cmp sbb xchg lods mov leave push std jo,pn cmp mov (bad) xor inc mov xchg xlat pushf sub xchg xor dec push (bad) stc (bad) (bad) adc sti mul jne loopne scas mov aad mov xorl icebp dec (bad) adc adc xor adc jl jae jae cmp aad jge fstpl sbb (bad) out fsub stos imul lock mov inc out out and ficompl out outsb in punpcklbw rcr mov cmc and dec ds cmp hlt pop add (bad) icebp cmp sub cs mov push rorl js adc xchg add inc les add jle es loop outsb dec mov pushf mov mov dec (bad) nop xchg cmp sub or repz adc data16 mov mov mov jb push inc (bad) jecxz nop mov dec gs xor or dec jl insb xchg inc jb sbb dec dec inc and pop xchg outsl cmpsl ja lcall cld pop cmp mov nop addr16 pop push or cmpsb pusha inc cs nop jl shlb js (bad) ss fadds outsb (bad) cmc rclb sti in stos movhps inc dec arpl sub inc sub repz mov and and je sar sarb cmpsb push mov inc es and xchg cmp das mov inc insb sbb cmp xlat clc pop sbb xchg (bad) pop ja mov jmp loopne movl je mov pop sbb bound add loope push ljmp adc movsl dec add xchg int3 negb cmp ljmp ficom sbb lret es mov pop test (bad) lret movsl push push inc lods loopne mov insb iret fst dec or mov jae scas jge xlat test cmpsl call xchg lret gs mov mov mov call mov rolb xchg sub repnz (bad) out sub add (bad) jge fwait and scas loop or in xor je sub sbb loope sub ds dec adc iret add cs js mov dec sub aam mov sub fbld (bad) xchg fisttpl jbe inc les cmpsb lret lahf pop ret in cmc bound cmp inc xchg pushf in sub mov lcall int scas inc enter into mov and in (bad) pop sti je and xlat xchg je stc loope mov xchg (bad) mov das sub shrb movsb stos xor dec test int test movsl leave inc mov aas add inc cmp add sbb test lods lea dec sti jns add adc mov mov mov mov mov aaa add fcmovne cmpl xchg sbb mov add bound fadds cld fistp or lahf sbb outsl lods push xor dec add pop jno mov xchg je or pop scas lds cmp push es add out cli sub es and push sbb shrl cli mov pop pop ljmp negl lods movsl sub ss mov cmc add cmp fimul fiadd int inc and sub insl and push xor lds nop push push sub ja mov mov adc adc ret cli push lea jno push ss lods dec sahf xchg cmp xor stos push jnp aam aas enter (bad) fucomip add arpl add icebp xor cmp push ret inc imul mov adc adc fnstenv and or js push jae insl mov add sbb stos adc jo and mov push sti (bad) in sbb mov push sub shl inc xor add sbb cmpsl mov aaa dec inc lret fwait pop mov mov add push scas xor cmc arpl jb (bad) xchg in mov inc xchg jae (bad) lcall out je mov mov xor imul mov cwtl push inc (bad) fs lods sub mov es aaa and idivl inc add mov pop cmp sub inc and inc les aam push push mov xor hlt mov lcall push cmpsb lret scas mov mov dec mov fcmovne jp push add cmp sub in lahf pop and test push or dec pop add add mov aaa in mov sub test rol popa (bad) movsb cwtl lcall out andl (bad) jmp shrb popf mov insb mov fistpl cmp xor fildl rorl cmpsl xchg xchg sahf sub add pop ret bound cmpsb (bad) jecxz sub enter sub xor clc aas push test repnz push popa ja in jne xchg sub (bad) lock pop shrl and nop out (bad) hlt cmp imull stos out adc inc jb jg adc mov jne shrl xchg cltd pop or or sahf sbb jmp lret std loop jp enter rolb xor xor loopne and jl cmpsl mov mov into cmp rorb inc icebp cmp mov int imul mov cmp sahf and mov sbb pushf (bad) pop jns mov push mov (bad) cli mov lea mov sbb rclb nop (bad) fildl clc sub dec scas mov imul jp sahf cmpsb es ja (bad) in test (bad) pop insl out pop add nop mov fcoml stos push jns dec and sbb lods lcall jg push mov clc cwtl insl push mov and lock inc and dec jbe or stc inc push pop imul out pusha repnz mov jo orb imul and jb outsl roll ss add inc (bad) enter (bad) int3 mov xchg lds fdiv push jl arpl enter mov push daa adc (bad) repz aad cmpsb xchg mov and add movl xchg inc cmpsl cmp mov push jl adc pusha pushf pop ret ds pop rcll stos mov mov mov jg aaa xor arpl fisttpl fdivrs cld cs out xchg inc xorb int and and js in xor sahf cmp insb scas mov stos pause sub add int3 sub xchg popf inc mov incb mov outsl xchg js mov test pop lods (bad) arpl arpl mov mov xchg in inc xchg mov decb mov mov mov (bad) jbe std movsl arpl out (bad) scas fiaddl jecxz repz jae cs xchg cmp js add lret and sbb sahf xchg sbb repz pop fidiv pushf push inc fldcw jae mov adc jae repz jp in call push or lret or jp jne lds jnp repnz sbb add and loopne xor clc xor leave daa test xchg or xlat je xchg inc dec test and or xor lahf xchg xor int sbb xor and lcall decb pop jle pushf mov mov or aaa pop xchg mov (bad) and cs (bad) push cmpsl cmpsb pop mov fbstp ja xchg xor cwtl xor jp jno jecxz mov in dec in fs mov inc ds ss pop sub repz insb sub dec in into adc cs xchg add ret (bad) jmp jl das call call cltd sti hlt cmpsl mov sar xchg ficoml fwait repz in cli pop add dec mov loop push fnsave ficomp cmpsb lcall add nop inc xor jno stos outsl popf mov lahf xor ds aas push imul (bad) fistl cmp mov sub mov mov mov jmp push jae negl add movsb imul mov xor xchg cmpsb or outsb ljmp mov rclb mov test rclb out int adc lahf cltd aam cli (bad) sub pop mov in jnp push aas stos cltd ss xchg rol js ret rclb lahf sbb loope dec cmp sarl clc jle pop push inc pushf les or mov shrb dec dec lods ja xchg sub sbb ds out xlat adc inc mov pop pop mov mov push in cmc xor inc (bad) imull push cltd pop in insl mov std fwait pop xlat movsb shl adc test dec sbb xchg cmc or mov lods mull loope xchg fwait and pop aaa and (bad) aam nop call push push mov mov push icebp bound or fdivrl imul inc rolb or call imul and add aas xchg add ljmp sbb ret mov das cwtl aad cwtl loop jle pop stc cwtl ljmp leave (bad) call repz stos ja fdivr adc in notb pop aaa jne and scas dec sub inc pop (bad) fmull xchg jbe daa jecxz jne and mov push pop es inc adc movl (bad) movsl pop jns mov outsl sub icebp in iret popa sti daa lock aam dec rolb repnz (bad) aad or fldl adc xor test mov mov inc je out add xchg inc (bad) jmp fist test jecxz add pop sbb in stos jecxz into mov js mov ds and sarb push and mov inc add clc fldt mov mov and les inc js and std xor adc jnp dec pop dec jb jmp sbb mov shrl pop sahf popa imul sbb imul mov xor inc mov into je aad loope sbb cmp aaa dec cli inc xlat jb pusha shrb xchg jbe enter mov lods mov xor add repnz cmpsl push push or jecxz movsl rorl xor aas jbe pop push int3 sub jecxz dec lret popf clc in insb (bad) or pop sti lcall dec sub or (bad) (bad) sti add (bad) jne into xorb fsubs sbb (bad) jb jo mov sbb xchg jg into xchg imul sar cmpsl in mov loop sub movsl pop mov xchg aad outsb fcmovb jae xor test loopne mov jmp ljmp cmpsb sub std mov fmuls lret enter push xorl outsb sbb dec fadd shl aas divb enter rolb loopne inc mov in jno ret adc sbbl call jnp in out adc jne imul aaa or test sub sbb out pop in xlat je lock lahf ljmp inc lods cmp inc lcall inc (bad) out jg out dec (bad) or cld fisubrl mov jp out cltd cmp mov mov loop sbb sub mov lret mov loopne out sbb aaa pop rolb inc mov or mov mov out (bad) xor movsb pop xchg cltd and repz ja and xchg pop (bad) jno out gs out cld adc mov cmp and js jns decl aas hlt sahf out imul arpl aaa sbb jmp pop sbbl ss pop pop sub iret lcall push jecxz mov xor cmp fs movsb jg lods cmp pop xchg lahf dec sub push dec dec pop fistl dec test pop dec jle pusha stc sti mov stos icebp aas pop mov lret mov iret enter sbb lcall std lahf out pop ja mov pop inc repnz les pop out xchg push lods repnz sub mov cs mov rolb idivl mov jmp mov mov ficompl es inc inc fisubrl loop jb lahf jmp hlt mov dec xchg sub xchg lods in mov mov sbb push adc pop arpl add mov cmp scas dec mov call iret inc mov cwtl jl add adc xor inc daa cmp or adc sbb scas and mov mov cli or pop sub lret pushl push pop shrl cmp cmpsb jl add js fimull stos mov cmp lds stos inc pop fadds (bad) call lahf mov pushf in add leave lds outsb mov pop in sub sahf and jl adc sbbl lods cmc leave popf popa mov cs dec pop shll jp fcom gs fsubrs inc loop divl cmpsl stc xor mov movsl jmp or add (bad) fisttp xor movsb cmp xlat stc repz xchg xchg dec (bad) test sub shr inc mov out push inc adc mov inc add push jne push mov xchg mov rolb ja nop mov mov (bad) jo scas add sti shrb and xlat adc push jb fisubl psrlq push ret aad cwtl mov mov cmc cmp jge (bad) (bad) push outsb xchg popa or ljmp and pop jbe cs mov jp pop jo jp jae push les ds push stos cmp rcrl sti and xchg adc sbb vpcmpeqb cld push lcall (bad) shl aam pop jmp test les ds cmp pop addl lret rcrl and call sub in cmp vunpcklps inc into ja aaa imul or mov popa push cwtl es jecxz fnsave div jb dec les add push or aam push mov and ljmp call icebp mov lcall xchg xor arpl adc popf fsubrs jno push es sarb lret cli out or lret mov (bad) das add enter and stos repnz adc or adc addl adc xchg add sub pusha inc dec out mov aad outsl pusha or mov or out loop add je in clc fs into call xchg pop mov enter and sub mov inc daa js mov into mov dec sbb push cmpsb rol lahf and xor mov mov inc fxch ret mov jnp push clc inc mov clc lods sbb lea daa pop xchg sbb aad pusha mov push inc xchg mov mov sbb push outsb movsl insl (bad) popa push pop mov lret (bad) ds imul jge sarb xor and and mov mov cmp xor cmp mov push in test outsb andl loopne repz mov fistp imul ret mov push daa loopne add mov sub cld repnz iret jmp mov push in (bad) push push loopne push jb jns cli dec mov shr add out jno imul sti clc fisubr push jmp sbb popa push fldt std orl sub fwait ret scas mov xchg aad popa jmp lret cmp ds xor shr pop jb and sub and jbe aaa popf int3 mov mov imul pop das imul aam jae xchg int (bad) jp sub and mov fdivrl hlt cmp push adc aad mov stc sahf fldcw ficom movsl dec dec adc sub push inc jb pop jb push std loopne aad or jne adc cli push jle in in jg inc jae cmp mov testb out leave xlat jbe test mov (bad) mov sub (bad) pushf mov jo out lret loop cwtl rcrb bound jg stos dec sbb movsl push scas (bad) icebp jbe xchg mov xchg jb rclb xchg jno test mov xor gs xor mov add jecxz and mov ffree sbb int3 lods sbb xor shll das dec (bad) jne outsl lods push scas and sahf dec bound rep mov adc dec imull leave ds outsl pop push mov and mov xor test add lock push in mov mov push xor xor ror mov (bad) cmp (bad) stos xor push pop cmp and dec leave sbb out adc xlat pushf in mov mov sti mov jecxz xchg cltd mov shr lods outsl xor aaa repnz adc pop dec fisttpll mov cwtl insl cmp adc and mov adc int3 out roll cmpsb cli pushf aas dec add test inc mov mov jb xchg and pusha sti jge xchg push sbb and iret sub pop inc cmp mov add mov sbb lret jg lcall iret aad sub stc fisttpll sub pop std mov pushf ficom in and xlat sbb mov mov faddl jnp xchg leave in push pusha xor cmpsb jl and adc lret jg in (bad) dec pop cli jmp xor cli inc push cmp out jo loope push mov fbstp add loop mov jae push sub call int3 rcrb inc out sbb pop aas lea pop xchg lods mov push inc lahf or and add dec jmp call mov lock and test outsb sbb scas xchg xchg add idiv add sti inc mov lret in (bad) mov inc (bad) icebp sub loope adc scas lcall or mov mov sub stc jae jmp imul insb cltd popa push fwait cmp fucomip cmp pusha push dec (bad) push sbb cltd subb nop sub bound push jmp fldl xlat cld or dec ffreep test xor adc cli push cmp mov sub in sub lods xor ror jmp lods (bad) aam xor lret inc cmpsb xchg iret xchg js and les or stos test rclb bound in idivl cmp fcoml jecxz in push mov inc and js mov rcrl stc dec sti mov shrb test xor rcrb (bad) lock ljmp lcall lret inc fnstenv adc cmp mov rcll xchg inc dec pusha push xlat shlb in or pop mov add fisttpl ss sbbl adc fucomi sbb sti arpl inc mov inc inc push popf in jp lret or inc jg aad aas mov mov das aad add test pop add sbb addr16 xchg mov sbb mov icebp das in shl sub test pop ret aam cmp adc (bad) push sub mov inc cmp test sbb (bad) les aas mov movsl dec jbe in lret movsl scas es xchg (bad) mov mov push adcl mov push fxch fisub arpl insl or outsb mov hlt sbb cmp xor lret pop lret or in inc push das cs enter cmp mov cmp or iret aad es add inc push enter mov push cld or das rcll mov dec ja push lock xchg inc cmp out mov out repz xchg scas (bad) jne fisttp adc enter dec xchg cs xchg xchg mov scas mov jp ret add jp sbb stos ljmp (bad) sub mov in loope scas mov mov xchg xchg add mov pop sbbl dec sub (bad) aam lea loopne (bad) pop dec popf dec pop stos popf enter and adc fsubs pop xor jg adc leave fbstp xchg inc iret jle sub aad mov out nop push xor movsb aam subl out test fsubs cmp push testl add movsb (bad) mov leave push sahf mov sub pusha andl and leave data16 cwtl mov std pop test out and daa decl or out imul mov add add repz jg (bad) xor fs push rolb test fdivl ror and test jnp inc (bad) mov jp and pop cwtl inc hlt jnp and (bad) adc callw data16 sub jb push addr16 pop pusha push dec sbb mov pop pop loop pop stc (bad) fsubr add fild out test mov xchg cli stos push pop add cltd dec or pop fcompl sub ret add aaa repnz and fsubr xchg jo mov adc int cmp inc lret pop sbb orl das (bad) and (bad) jne (bad) xchg jmp jb cli test adc popf inc jne ficomp lret adc pop pop pop lret add mov fsubr (bad) testb pop mov pop in roll xor mov sahf jae lock dec mov ja sub movsb sub test daa push xor push (bad) jb pop sbb inc divl sbb lret add or int iret push pop dec out aad cs arpl stos inc test xor out xlat neg scas imull ret ret push mov add ljmp enter xchg int3 xchg (bad) xlat or jmp or push ret pusha xchg sbb sbb movsl rcrl dec cltd subl jge insl mov (bad) jnp (bad) xor mov (bad) mov cmp js mov (bad) fwait lods jbe xchg dec mov jo add push xlat pop jecxz andl mov sub cmpsb (bad) fcomp or inc int3 xor in int3 xor addr16 cld icebp addr16 dec mov inc mov lret sub jmp mov stos imul add mov rdmsr sahf popa in dec out jmp hlt cmp lcall loope and inc push scas ss dec int3 movsb test jae adc mov cs add lock gs dec cmc and sub icebp dec stc mov push or jno,pn fwait out addr16 aas in stos push sbb push lcall mov data16 xchg xchg adc out scas mov dec mov enter repnz fbstp aam (bad) aad call ss lret rolb out fprem1 call jbe push stos dec imul mov sarb jbe dec mov fcomps inc fcomp (bad) cld mov sub sbb sbb sub pusha xchg fistp push mov int mov nop mov stos jns jg jg stos loop fistpll ljmp enter sarl in bound add mull scas in dec jmp hlt imul add pop cli xchg lea mov fcmove test addl jp xor std out or jl jge dec sbb stos mov ja jbe sbb frstor sbb cmp push jns test sbb test cld sbb pushf sub mov mov ljmp sti cmp (bad) sbb das sbb lahf xor pushf or inc xor and (bad) pop xor arpl mov popl inc xchg iret mov movb or xchg mov dec dec test add mov adc jb aaa in and and divl lret and insl xor aas push (bad) cli ljmp adc and stos xlat lahf in and scas fbld popf cmp mov arpl inc dec mov jno xchg subl rorb aam addr16 xchg mov inc fstpt jo fwait push in xchg jp adc pfcmpgt adc mov push add sbb loopne jns (bad) cmp aad xchg nop adc int push insb nop hlt dec lret adc sbb inc add pop dec cli in sti int out jns popa mov std cmovb mov push out int3 out add (bad) mov or inc daa in in inc push dec repnz pop stos fisubr enter mov fisttp ffreep dec daa jle aas pop push mov mov icebp (bad) pop ljmp popa cmp insl push mov je (bad) mov adc mov xchg enter dec in ret fimull imul movsb jns divb outsb push mov mov pushf mov mov and arpl loope aas mov aas sub enter pusha push ret movsl or imul scas ljmp inc cli add in inc xchg ja cmp lods stos les lret jns or dec inc mov or adc adc ret mov pushf mov pop (bad) xor sbb xor cmp push lret mull sub scas icebp (bad) xchg loope jno icebp out cli and fldcw push outsl fiaddl jne xchg inc sar sub fstp adc adc subb aas out fidivr jle dec and adc inc mov and jge sbb cmpsl lret arpl jle pop dec jne outsb cmpsl add mov fnstcw fstpl icebp sbb inc mov ja cmp in outsb jecxz cmpsb mov ds fwait pop xchg xchg sbb into sub repz ljmp les aas lcall pop sbb iret xlat (bad) insb (bad) pop imul sbb scas bound cmc mov out cmp data16 repz mov fcomps jl roll adc xlat xor jge (bad) (bad) adc mov shlb aaa and mov inc call and outsl roll xor jne adc cmp lods mov xchg pushf and cmp out stos test cltd inc push xchg push aad push mov push daa (bad) xor fisubr xchg mov cmp adc inc push jecxz push fs jl xchg pushf inc sarl cmpsl daa (bad) dec dec outsl lods cmpsb xchg int3 addr16 cmc imul sti fwait xchg gs xchg fdivr cltd add negb and mov scas adcl sub mov int3 sahf mov push inc cmp pop sbb xchg cmpsb pop call dec (bad) cmp dec lods xchg pop mov inc xor or arpl cmpsb addr16 stos movsb pusha xchg xchg inc sbb jnp out jmp aam sbb and inc xchg cmpl inc or xchg popf cmp lcall js adc sbb push pop cwtl sahf stc lret adc cmpsl xor stos jae shrb ret sub das enter inc inc pop test les sbb or lret jns push mov loope lds mov orl out xor js pop add repnz jae insl cmp les jle out mov es push inc or nop inc lods repz xor (bad) jnp js fwait aam dec stos das jmp sbb add fsubs inc pop sub pop xchg (bad) mov dec inc xchg int3 xor dec icebp outsl mov dec mov sub sub adc into lods test jne jne adc decb stc sub jle jno icebp xchg cmovo popa mov lahf movlps ret popl pop imul (bad) in xor mov xor mov popa bound dec mull add jp mov xor or stos stos aaa ror jecxz inc ljmp bnd add or sahf (bad) jmp lock sub jle or mov xchg icebp cmp and fldenv adc dec cmc lods mov fs xchg dec xchg push xor sub popa jg loope mull aaa int ror leave lret adc pop insl mov sbb rcrl or push sbb (bad) (bad) mov imul inc leave mov pop push sbb cmc sahf invd fstps bound mov bound xchg pop pop inc (bad) pop pop jbe xchg sub addr16 insl pop adc adc sbb xor pop or cwtl movsl aas rclb mov clc lret (bad) stc or push out jg das xchg daa insl in inc push popf clc mov cmp lds jns push cmc pop mov sub lret xchg xchg int aas ja mov (bad) out mov cmp call int imul lods mov jnp mov fstl add adc clc out xchg adc push test fwait mov loope dec test fild fs mov cwtl cmp dec xor jmp gs scas cmp xchg push imul sbb jl ret push pop hlt leave int3 outsb aaa add fdivs sbb xor mov test fwait (bad) fist ljmp cmpsb xchg (bad) pop ja insb (bad) jbe out push std pop adcl dec movsb cmp insb das in mov and fnsave xor mov insl pushf mov cmpsl mov sbb div js icebp into mull inc mov xlat cli fwait sarb xchg cmp xchg jmp xor sub arpl inc fldt inc aaa imul or sbb xlat or arpl mov inc adc push ljmp (bad) xor es cmpsl or xlat pop xchg dec add jns rcrb inc mov jmp mov int je jg aad lods mov call fs testb add sbbb in test daa loope into mov push scas push mov mov or outsl sub sarb or and std cwtl jo inc stos jbe fisubr xchg test xchg add jle inc mov int3 movsl push pop dec cmp jle fucompp adc mov xchg jo data16 inc popf addb in mov pop sbb in sti cmc fstps sub (bad) and pop mov sbb sti ds and dec and pop inc adc add xor addl aad iret lods mov push sarb ja jmp cwtl xchg sub insb cmp aad (bad) xor sub or pusha xchg fisttpl popa js push sbb sbb sti rcl out les (bad) add jb int and or das inc pop shlb sbb pop jo ss int xor mov push cmp dec dec push dec jp mov xchg insl (bad) daa pop sub stos push mov xor inc outsb out push mov sbb inc add dec daa sub xor ja hlt push add jmp sbb add repnz and rclb es nop xor xlat mov fidiv cmc lds enter pop dec adc jecxz pop mov imul mov dec pop stos and std fisttpl and push je mov cmpsb push adc mov ss xchg pop mov push (bad) jge mov dec repz or arpl stos jnp sti jecxz lods xchg test insb hlt cmp xchg sbb gs pop mov mov jo inc mov adc xor adc pop push or sbb or push shl andl xchg and jle mov sub into sbb adcb mov lds inc xor jg xor push inc stc push lret outsb addl or xchg scas ficom iret (bad) jle or mov js stc sub es add or cmpsb adc jl call and inc sarb mov cmp mov cmp xchg lods test mov adc push dec pop sarb mov sub js cmp insb or stos ret cmp fistl clc arpl pushf jbe inc sub add xor movsb xchg or pop test push sub addl int3 mov inc mov inc mov sbb and decb or push or xchg xor mov and add les add mov imul imul jmp notl movsl lret loop call stc dec add push popf je mov es lea jl sbb mov mov sub jmp jl add mov aaa aad cmp push jae push ljmp insb inc jno xor pushf mov int3 add cmc cmpsl sbb sarl fimul scas sbb fidivrl inc (bad) enter xchg inc lock ss pusha add add add clc ret (bad) lret cmc inc ret sub mov repz inc mov fstl into jmp and sahf xchg jge sbb ss push cmp inc sahf sub push (bad) jae sub inc sbb sbb mov rcll push scas (bad) inc xchg dec adc xchg push mov jl jnp and pop add xchg loopne pop mov pop js push cwtl pop adc cmp jne inc test (bad) lcall out insl inc xor sub add push leave (bad) (bad) (bad) mov inc (bad) mov sarb aaa shrb divb mov mov push mov sbb adc xor popa cld pop popf jo ret fnstsw push (bad) ficom fisubl ret fnop sub jo inc je cwtl or or mov xor fsubrs jns pop aam sub xchg inc (bad) ss jne bound ja fnsave push jmp dec and bound lret xchg cli mov test repnz imul dec or les imul xor mov sbb pop scas add clc xor fcmovbe lahf mov add mov add cmp fnstsw cmp sbbb mov mov adc adc nop shl jns adc imul jge pop sub loope andl lods scas loop ljmp cmp jne or fnstsw ret fldcw xlat insb (bad) xor lods xchg push sbb out push arpl xchg rclb jb sub movsl lods daa psubusb orl popl jle mov and xchg xor lds test dec lcall out dec adc bound es icebp adc add loope xlat hlt sbb fisubr pusha cli add mov je ret mov sbb outsb scas xorl sbb and jns push movsb in jnp ret inc mov push mov push pop mov jl testb repz xchg jp dec je pop (bad) out mov cmp xor inc add dec div xchg or fucomip sbb mov popf ror pop loop add sbbl pop popw (bad) push mov pop inc scas fwait sub call test insb cmp std out ror addl inc rcrb loope sbb fnsave jle sub sub push gs mov cli mov ljmp pushf cmp je and scas (bad) je inc pop pop stos mov mov pop leave cmp xchg repnz jo sub (bad) popf cmp sti adc jns cmc dec add jmp dec push aad dec ret sbb and jge cmc jne je cmp das mov pandn fimull sub add into mov lret nop mov test ftst bound ficompl loop jmp mov sbbb push imul out mov mov cltd loop and lods roll fidivr aaa leave dec mov adc push xor lret lret lahf jns mov sbbl add cli rclb mov push std aad repnz pop pusha xor dec scas mov adc sbb mov and or sbb mov movsl insl xchg clc popf mov enter cmp call xchg leave sub aad jb lahf (bad) fwait sbb (bad) addr16 repz inc inc lods pushf mov addr16 cmp in pop mov movsl cwtl stc cs and xor or stc or inc mov clc dec xor xchg cmp aas pusha sti gs mov inc mov push mov stc push rorl addr16 pop cmpsl test lods fs jmp xchg mov mov imul dec (bad) (bad) ds push cmp mov mov cltd (bad) mov sub jbe cld ljmp repz inc jle cmp mov in push jae cld push jmp push jne test xor mov cmc cld mov nop rcrb mov nop cmp jmp mov xor push jnp in imul cmp push mov push mov lcall (bad) lock sub dec sahf repz xor inc push fnstsw gs cmp mov pop testb fisubrl mov test popa add rol stc test add push sub nopl sbb add mov push rolb stos jecxz (bad) ss and es notl shr lds mov orl fdivrs stos mov mov test or jl movsl jl dec fistpll jmp mov inc mov mov mov inc mov cmp mov pop (bad) fwait cwtl out stc pushf sbb (bad) pushf shll mov (bad) fmulp pop mov add ljmp sbb loop aad jg sarl das mov fldenv lea sarb js sbb adc mov push sbb push cmp fnsave add insb shlb mov jge mov lahf jnp inc popf and (bad) hlt cmpsl orl cmp jp inc inc xor pushf or call mov je xor sbb cmp mov and fstps xor rolb add mov stos sbb daa pop pop insl add xchg xchg js scas add xor mov pop sbb lcall (bad) (bad) mov mov or clc pushf repz mov call outsl add pop mov mov cli jne scas adc lret mov mov fldenv movsl pop mov adcl cwtl loopne dec adc sub je xchg adc or mov mov mov rclb inc push sub xor dec cs and xchg gs pop sub fs imul hlt fidiv cmpsb push int loopne int3 push adc in sub test cmp fimull repnz lcall xchg out and daa leave pop push or int3 inc stc outsl pop add xchg push mov mov jne add jge push aad cltd jmp mov jecxz push addr16 loopne xchg xor pop cmp sbb fs push lods pop and dec iret sti jge ret push or xchg bound push jg pusha push fsubs push ret ljmp ljmp fdivs std mov or inc pop loop sub pop dec (bad) xor dec pop les das mov jne cli subl shll sub daa movsl mov or pusha mov mov xor sbb cmp out ss clc bound cmp pusha sarb scas pop lret loope cmp mov add cmp xor (bad) push js jp sbb leave leave sub dec pop cmp popa or add mov xchg (bad) movsl sub xchg insl cmpsb jp xor lock mov scas sbb xor and sahf mov subl into cmc popa push scas push ss jns popf test inc mov andl or pushf jo enter sub inc arpl mov adc pop bound and fmull mov lock xchg pop loop std int3 pop jo out aaa fsubs fidivl lock inc sub add mov jne adc fxch out loopnew or je mull in pushf dec jno push jo shll mov xor repz jo icebp js sbb cmp dec cmp xor adc mov pop lahf out outsb jb enter pop mov lods or (bad) sub test dec mov adc push leave sbb xchg jmp rcrl out sbb ds test movsb test inc or lods shll cmp lods rorb les imul outsl xor cwtl out add xchg test inc stos mov loopne push rolb jg shrl add sub and dec fs loop inc push divl jns and fwait mov int push scas iret pushf ja sbb gs adc add rcll mov xchg test out dec mov lcall pop (bad) or add sbb mov imul in repz mov or xchg xor sbb cwtl in movsl mov xlat and fnstsw in sbbb mov in inc imul shlb inc fs mov loopne sahf xchg inc add (bad) loopne pop inc mov loope pop sub sbb cmp sub (bad) sub int3 mov test std imul push jbe in cmpl sub imul (bad) rcrb push xchg adc sub mov add xor sti dec and sti iret xchg bound frstor push int3 in out adc fildl arpl mov in (bad) lods rcrb std push stc dec jmp or inc cmc iret loopne xor cmpb sbb sbb xchg iret (bad) cmp pop push addr16 movsb push in pop test divb std daa fcmove or loope gs fimul pop cltd jecxz jge mov sbb cld mov repz xor shrb into enter pop push jno or mov or mov mov push xor cld rcl stos mov pusha xchg adc jne mov sbb in push sub mov push pop roll mov lcall mov cmpsb jl mov add out leave imul stos xor (bad) jae add add or xchg ret in or add xlat mov xor lahf js fmull jbe pop pop xor push inc std and mov fstpt xchg and sub xchg jb or adc mov sub sbb inc dec push jle cmpsl out jno adc inc inc leave pop lcall push mov pop adc push add pop cmp icebp stos mov ds js test ret xor jl insb out jbe data16 mov or cmp lret (bad) mov js lahf pop sbb shl notb mov or push mov mov jno int mov bound jae aad (bad) inc push inc dec adc dec adc adc cmp sub sbb in jbe mov das clc fs movq sar inc fstps push mov cwtl mov lahf (bad) pop sub dec jp in loop dec sbb xchg leave jle push sub mov aad outsl pop pop jecxz inc and icebp inc test imul (bad) je into daa sbb and add int3 sbb xchg cs in (bad) sub leave and cmp (bad) mov mov cmp dec push ficompl jg lods lods xlat adc (bad) leave mov dec lods xchg bound sbb (bad) lahf add ss ss adc push aam sti data16 (bad) jge push xor lcall fcoms mov mov add ljmp cmp dec test cmp xchg icebp addr16 pop pop mov sub nop pop add inc jne arpl add push jno inc testl (bad) jg mov sahf dec aad movsb jp dec add xor stos push fwait jb push mov notl sbb sbb bound push cmpsb xor iret add add test insl in jnp out cmp arpl out imul xchg push push fidivl pop js mov xchg push jne mov stos insl add test jb cli lcall test mov push pop pushf les sbb dec dec pop cmpsl ficom push outsl mov dec inc enter cwtl rcrl ds stc outsb sub fldt sahf adc dec and fild jbe loopne shrb and jmp cld notl arpl xor stc inc ja std std adc shrb adc mov mov cli jno add repnz sbb xchg and movsb sbb mov sub jno cwtl das nop in push jl push jmp cmp leave push jae jle or mov out lods push psraw fisubr xchg lcall lret nop push adc dec test ficomp xlat push inc jle mov outsl adc xor or daa sub adc adc pop jmp stos aas xchg (bad) mov pop js add lea stos jbe inc pop mov sub sbb jae mov jmp sbb lea mov mov fs and popf push push cld push (bad) dec mov lea out cmc das mov push rcl lret sbb rol mov xor into mov adc xchg int pop test adc mov inc lds cmp stc mov sub stos test adc or cmp pop mov ljmp inc sub xor bound pop (bad) adc add push lcall bound iret in sub gs pop loopne xchg aad call push jno and js sub push adc scas stc jg popa cmp daa mov or lods fcmovne jg fsubr mov cmpb lock jmp push and jecxz push out or ja mov pop pusha xchg les and pop notb adc pushf aam sub stc decl sbb mov cmc cmp push mov aam mov ret fmulp xor lock je lahf pop push test xor push mov shrl or xor xor mov andps pop (bad) xchg pop jns xchg cwtl jo cli or fmuls sub notb out xchg or jge daa mull xchg lds jmp sub sti int dec fistp divb and cmc dec pop xchg ret enter pop mov sbb rcrb fldt lcall int push add fisttpll je push adc dec aaa and push std (bad) fldcw test incl iret adc jae les inc lret adc pushf sub xor cmpsb pop rclb or pop mov div push sbbl jno sub inc pushf add pop pop mov sub lret sub mov test cmc nop jecxz cli xchg pop and jne fadd adc xchg mov dec movsb inc push adc push cli xor jge add int3 repz xor add inc rcl jo mov in gs inc (bad) in and xchg and or lahf cmp lods jne fxch jae push inc mov stc jno mov repnz jge adcb int3 test out or jmp push xchg ficoml popa sbb gs xor xor mov int popf sarb lods popa cld add js cmp and adcb add sbb jge dec or pusha hlt sti mov mov mov pop mov mov fs jecxz loope fisub or fsubrs setnp repnz push mov sahf jge jmp sti add in and sub mov (bad) xchg add popf xlat std aas mov fisub mov push push fwait mov ret mov inc mov mov lock jge inc mov jns mov loop incb out jl std popa and aaa popa mov nop (bad) divb add int lock xchg dec sub call sbbl cld rcrl add sub xchg adc bound adc xchg mov repz cmpsl dec cmp adc push mov sub je push popa push aaa into sub xchg and and xchg inc xor add or outsb inc xchg std jg mov call or xlat sub mov mov fwait jne jecxz or mov loope and adc sub mov rolb inc out push mov sbb imul outsb mov xchg popa xchg adc in inc mov mov cmp push sub sub jne sbb jg push leave add (bad) shlb pop push shrl sub fsubr dec (bad) fnop and out and add mov hlt inc and jecxz xlat lret pushf ljmp xchg stos cmp inc fldcw inc and (bad) leave addr16 shll lret into push daa sbb inc fsubs (bad) (bad) jo (bad) push sub lods add and (bad) cmp jo fcoms inc pop push fbstp pop cmp mov push int3 xchg out xchg pop mov inc ret mov jne add out mov (bad) sti add es adc insb and (bad) push mov test pushf fldl arpl jns rclb cld (bad) or sub inc (bad) cmp stos (bad) repz dec (bad) push sub sbb jbe (bad) call xchg mov xchg mov faddp dec out adc dec repnz or adc movsl dec and adc stc lock dec dec fsubr and inc mov nop mov (bad) cli mull rorb jne mov ret in popa inc xchg insl jg out les cmc ja stos cwtl add mov lahf jno jb mov jns push rorb inc xchg adc leave mov in loop std sub and add push or mov jnp out jg enter test and jp int jne imul std mov inc and hlt scas test inc jno push and imul ds daa pop inc xor cld inc test or bound xor cmpb mov mov dec scas cmpsb and mov adc or fsubs jns fmul mov fmul xorl mov cmp pop push sub sbb cmp cwtl and cmp mov int lcall call add icebp mov push pop nop or fsubp jecxz in pop jne pop rorl lods push push outsb (bad) ja repnz lods push pop xor movsl xor enter pop outsb pop cwtl (bad) nop jge pop sbb mov mov mov add fldl ficoml test pop cmp insb sub dec mov fsubrl push sub js js clc addl mov sub fnstenv mov mov mov imul lret scas test sarb mov (bad) cwtl aaa (bad) cmp pop cmp fdiv dec xchg xor mov shll out (bad) fcompl out daa cmp and lea repz lret xchg cmc negb cld sarb sbb mov subb loope add das xor pop in cmpsb fldenv mov stc sub ds pop sub pop dec sti push pop inc mov mov jl xchg das repnz cltd mov lds popf imul adc xchg push lds mov into lods and jge xchg cmpl mov lahf lds bound (bad) sub and xchg mov icebp pushf mov and repz mov xor mov cmp push jmp ret into fcomp inc scas outsl cmpsl test xor outsb imul xchg mov shrb xchg jg pop loopne test inc mov ror into out jl mov or cld pop jl pop aam pop addl roll mov dec cmpsb dec mov sbb fiaddl shr jns add flds push xchg pop je sub fwait jne sub inc jecxz and xor sbb mov repz mov stos in jb dec cmp push imul push pusha mov repnz int3 sub cmpl pop arpl loopne mov fnop adc xor cmp sub div ja cmpsb dec pop xor or iret sbb cmp into leave and loop out clc and pop imul jge movsl and sub sahf jecxz ss (bad) cmc std mov and cmp dec mov test pop dec xor cmp xchg imul lods and xor je nop hlt push mov inc fs pop mov add loopne lods lea and jge sub dec inc je incb dec or iret push push sbb (bad) insb push xchg inc mov push shlb xor jno inc test cmp cmpsb nop add add add out add jbe mov jg push pop mov and dec cmpb xor stos mov movsl cmp mov sbb cwtl call js xor pop (bad) jg je mov jle add cmpl rcrl dec (bad) jae ret or es ret repz mov fisubrl mov in cld mov sub jge out mov ret and (bad) movsl hlt ret mov dec jb stc sbb add cmp ret adc pusha pop or adc scas xchg add push xchg lcall outsb cltd sbb pop aad mov scas jae or and xor pop jnp insl dec and (bad) out test pop xchg xchg sbb mov popf out mov ja mov stos sub and or ds repz cmp xor inc test cmp adc in mov (bad) and sbb idivb pop out dec cmp push aas enter mov push jg add fldt dec jge mov and pop mov cmp push xchg inc jp (bad) cmc mov add (bad) lcall xor fistpll jmp jno jae cmc mov lods pop outsl fcomi sbb sbb stos mov dec push push dec mov jle adc xlat xor adc add xchg add dec push mov cld xchg pop and xor fwait es xor inc cmp lret inc sarb dec cmp mov js (bad) xlat mov mov out jmp sbb push fsubr dec aam inc sbb iret ljmp pop stos push mov clc test mov push pop leave xchg mov call pop or addr16 mov or jl sahf lds mov lods and push les sub les mov fsubrs shr inc cmp mov pop les pop xchg shr dec movsb out push mov inc inc jecxz test enter xlat (bad) dec push pop push cmpsb jge mov cmp and mov dec jne movsl (bad) loope push xchg sub outsl pop leave and fcmovne int3 es jg mov dec les xorb inc push in push pop xchg pop mov sbb popf into push and dec fcompl fs add fstl mov dec je or insl or adc js fcomps in mov insl test mov jmp (bad) out inc mov xchg fiaddl pop les iret cld clc ret out scas ret add jbe ret scas leave popa adc imul pop es add mov jae imul clc popf mov push (bad) push out test test inc xlat rep cmp inc push adc cli test ja shrb popf mov mov pop (bad) jno inc mov scas jge mov push inc jo cmpb aaa sub pop es loopne,pn adc test sti cltd fwait jnp mov push ds sbb adc imul (bad) jne push repz xor add popa aaa push pop data16 scas jbe insl mov (bad) clc (bad) lods jnp sub jle add add cld adc and add sub insb sub pop adc out orb mov add hlt cmp cli mov std ljmp sarl cmpsb ja imul icebp cwtl mov or in mov push lods (bad) fwait xchg xchg test cmp imul sub daa (bad) cmpsl add dec ja mov lds scas mov lret mov push popl enter and je and addl push add cwtl js pop fldl pop (bad) pop dec sbb subps neg (bad) pop adc mov lahf add (bad) in xor (bad) adc inc cmpsb adc cmpsb (bad) into and mov dec jge dec fmuls lds dec das xchg imul or or mov xchg lods rolb sbb dec mov cmp xor enter into cmc cmp sgdtl jbe sub cmp sbb or sbb arpl jle push adc sbb mov mov lcall nop (bad) mov or rclb pop xchg sbb les das xchg xchg mov (bad) ds add dec jg rep call pop mov andl loopne out sbb test pop pop cmpsl out and xor ret xchg pop or push ljmp arpl inc movsb fwait scas test mov loop imul jno lea inc arpl stos mov sbb cmp (bad) push insl out jg sti adc fucom scas test cmp add shrb inc inc popf ret and jbe movsb repnz cmp (bad) sub or push add jmp (bad) inc adc subl cld and fwait (bad) mov dec inc (bad) cld lea lea sbb mov outsb mov fs idivb mov setle mov mov jae mov sti adc adc (bad) fcoml and pop push push arpl mov or jg mov lcall scas cmpsb mov mov push cmpsb cmp aas (bad) mov ja arpl xchg jne jl sbb push cltd arpl stos mov xor sub gs (bad) in mov fisttpl mov imul addr16 or xchg xchg bswap xor pop pop jmp ret mov pop mov subl outsl pop fldl2e mov clc pushf (bad) lcall mov js gs lea mov fs sarb mov mov (bad) mov iret jmp push lahf add ss fs pop mov fs leave outsb pop (bad) into sub inc add xor or insb cmpsl scas sahf fcomps or mov push mov hlt nop int3 cltd cwtl cmc insb sub imul stc insb cmp push mov or insb xor sbb push jmp sub stc imul add out dec cmp inc add mov scas mulb jge fidivl es dec popa fdivs inc dec sbb jne mov xchg add push out pop or mov enter jno inc fidivl mov adc inc add and mov jp mov repnz pop add je or cmpsb outsb mov daa jnp call mov fdivrl or lock lods in mov test aas push sahf das (bad) mov aam adc xchg mov jb test cmpsb or adc fwait out popl movsb fwait sbb jge sbb sub add rcr (bad) adc push inc fwait test aam test adc dec daa inc unpckhps ja aam push sub sarb sub mov cwtl rcrl in ja cmp mov shll fs jae pop sbb imul push inc push loop sub (bad) xchg adc or sub dec jmp (bad) sbb cmp mov je mov repz sbb int3 data16 pop cmp mov cmp bound in loope add rcll insb lds xor dec fnstcw push js fs push sbb jae movsb int3 pop pop mov inc inc ljmp cmc push enter dec into enter or insb jne ficompl xor incl xor add lahf cs cwtl push ss or mov xor cmp scas cs out pop xor mov daa ret cwtl mov pop jns add ljmp cmpsb (bad) sbb and dec push adc lds popf xor adc dec mov scas iret ret mov test shr cmpsb adc test (bad) jecxz push clc mov pusha dec push xchg fwait popf int3 xor dec lret cwtl (bad) flds sbb jle out mov pop mov inc bound xor mov les pop daa (bad) or ss lret sbb add imul in out mov mov lahf mov cmp xchg cltd jge sub sub add leave lea pop pusha dec dec sub (bad) adc mov insl pusha mov popa mov inc lret mov leave sti in xchg mov or cmp push and add fmuls and cmp mov (bad) js jae fidivl es or pop out or push jno lods addr16 xchg xchg in sahf xor fimull sub jno es stc jno mov cld imul js cli mov xchg int push xor cmp mov fwait pop addr16 aad in adc mov dec xchg xchg jmp xchg add (bad) notl sbb jns psrlw xchg movb rcl ds jae sbb or inc and fcoml jno inc dec xor inc sar jae lcall fbld or test loopne mov stos cs pop fcomps fldt aam inc mov jno xchg or jecxz lds into popf dec ret mov (bad) insl fnstenv imulb aad movsl xchg (bad) and mov idivl mov push jb (bad) xchg or mov je mov adc push jl inc rcrl data16 (bad) mov aad shll mov stos sbb mov mov test jmp stc mov lcall add or sysret pop mov iret or xchg lods jmp or and outsl aad (bad) aaa push and adc (bad) jbe aam xchg inc scas jmp scas lret (bad) sbb sub pop pop mov adc fcomps or xchg mul pop (bad) fldl es sbb push (bad) sub pop test (bad) lret jbe inc aas pop mov jg lret dec imul sub add push addr16 stos inc jb pop js out xchg sub or out pmuludq mov out pop inc pop sbb mov cltd pop mov pushf inc mov stos dec lret jnp inc (bad) insb int3 mov js pop and or es jo jbe jg mov xchg sub (bad) fdivr (bad) ljmp sub loope cli sub repnz mov (bad) fbld or pop adc jb test push sbb pop sahf lret stos sbb sub popf pusha or jno jns aam or test sub subb cmp push test daa sub jmp mov mov iret inc sahf mov loop movsb pop cmpsl mov test inc xlat push cli add xlat rorb aas lret ds fcom sahf outsl dec imul notl test pop push sarb iret xor ljmp mov stc fwait xlat std xor pushf lods fucomi pop inc mov jl pcmpeqb xchg and mov stc pop cmc imul or push push push lret add pop lret push push fstpl rcrl inc pop and mov push xchg cmp and lcall add (bad) xchg mov sbb test mov jl sub (bad) addr16 push lret cmpsl mov mov jb stos test push mov mov out push scas mov popa repnz fidivl enter movsl inc xchg ret (bad) fimull leave pcmpgtd inc dec sub lret inc add mov inc sub adc repnz inc and aam add mov push aas cmp xchg data16 cmp fisttpl mov test nop xor in add mov cwtl ret out std inc testb mov jae push sub mov or dec jne div rolb mov (bad) cmp sbb xchg push dec div sbb mov rol pushl mov add scas xor test je dec nop and mov xor cmp lahf aam dec add mov loop sub push loope rol cmp pop ret rcll xlat std adc lea mov leave push sbb (bad) arpl mov inc dec in faddp insl stos xchg js mov fdivrp xchg dec test stos mov add lea in (bad) jmp cmp cmpl ffree push adc jle push scas sbb cs jae cwtl dec insb loop jb or stc or les fidiv sub or icebp nop push sub std and push shrl (bad) fisttp mov xchg cmpsl pop mov fmuls push mov adc xor cmpsb mov jg daa adc das push mov xor bound sub arpl push data16 xor mov stc jmp push out push adc in cmp lahf xchg or int3 test ds fistp xchg ret push ja jmp jmp inc jo cmp and pop rcrb or xchg jno fisubl and stos lea pop lock outsl pop pop xchg (bad) (bad) xlat and xor inc mov sub arpl push rcrb pop add sahf pop jae mov aas fcmovne xchg ljmp inc in adc mov pop or call mov int3 imul ret xchg xor xchg sbb dec pop lcall dec sub adc xor orl stc dec sbb or pushf lea sbb pop mov mov fbstp data16 hlt mov pop (bad) notb negl stos and test (bad) nop dec sub mov (bad) or sbb hlt xor dec lret std push inc scas dec adc or and vcvttss2si xlat mov movsl mov test loop jns mov arpl dec jmp stos stos scas mov imul pop mov outsl mov iret add mov loop add pop pop xchg rcrl dec adc sub jmp adc mov jne rolb enter push ja and xchg and mov cltd (bad) jp out jmp mov aam pusha jno stc inc int bswap push inc pushf or push push in aam dec sbbl mov fbld cmp minps dec dec stc dec mov sbb (bad) dec cwtl xlat daa pop or lods fiadd cmc cmp and movsl fwait movsb jns hlt sahf cmp lahf and aas cld inc lret dec stos lock push (bad) cli in dec pop outsl sti dec aaa xchg dec sub out push sarb rcrl (bad) inc fcoms std pop and and sub and mov xor adc bnd sbb ljmp jle xchg pop outsb aaa cld mov scas and cmc test int3 rcr repz and (bad) (bad) mov sub loope test loopne mov mov cmp scas jmp xchg inc pop scas adc inc jae rclb daa jb lds xchg xchg inc movsb mov xchg std in or mov repnz test pushl clc push nop repnz adc pop pop aam call add sub lret inc mov sbb ljmp sub xchg push inc (bad) aam loope add pop jnp push shll fcmovb loope ja inc mov xor lret jo stc xchg dec xchg loope aam movsb addr16 fwait ds mov xchg cmp (bad) aaa sbb je pop dec adc fcompl xchg test repnz pop sbb pop adc (bad) sbb mov aas add addl pop dec xchg mov lcall adc mov mov push sub jle push mov and xchg mov stc scas fmull dec int add mov outsl out push incb test sub dec or pop ret stos and popf inc dec mov sbb fdivrs sub inc orb in jl mov fsubr repz xchg sbb ja adc push inc mov sbb clc pop and xor xor out xor push pop ja mov fcmove pop dec dec out in mov into sbbb jae dec or or ljmp or repz xor dec popf int add sbb sbb jne ret push mov cmp fisttpll fwait push xor (bad) bnd mov hlt and mov dec dec adc insb ret (bad) cmc or or les xor fs and out test adc cmpsl xor sub cmp enter inc mov enter je sub rclb aaa dec rorl fisubrl sub cld (bad) adc mov test dec lret jecxz cmp cmp mov xchg aam fcmovnb dec jne (bad) std mov daa dec mov add mov pop adc fwait shl xorl cmpsb std push int3 lret mov test mul movsb test stc lret mov lea fucomi cmp dec int jae ljmp jl adc cmc rorl imul loope stc push insl jne aad outsl scas cmp and cld jo movsb mov or ret ss sbb cmp dec xchg cmp mov fildll jnp jnp outsb movsl xor mov fidiv mov pop mov dec push cs pop insl mov dec dec pop push inc mov call cmp sarb xor loopne jb fstl push icebp jg dec les mov push out std ljmp push sbb cmpsb mov shlb std xchg andb cmp xlat inc loop call xor shld int mov in inc push ds jp fimul movsb les xchg push bound fldcw nop bound mov and inc add (bad) mov mov sbb (bad) jns mov fadds das mov add fbld movsl repnz or sub sub repnz or push mov inc sbb es and lea faddp jle lods shrl (bad) xor es cmp es jmp push mov pop and cmp mov into cli fist and cmp mov lods dec and out pop ja pushf cs movsl mov jo sub sbb in mov das pop daa mov lds xchg adc in rcll jnp out xor adc int xchg mov push add test cmp mov mov inc lret repz movsb sbb std arpl xorb int cwtl cmp mov push insl cmpsb jo xor js mov cmpsl xchg or je lcallw mov pop fucom movsb add bound addr16 xor cmp pop (bad) (bad) addr16 fsts test icebp pop jbe pop (bad) inc lret mov inc (bad) inc cmp stos daa dec in mov and push cmp fstl jo fisttpll add lods out das loop sub jl and or xchg push js insl (bad) push mov push push aam repnz fstpt fwait (bad) mov dec adc mov push mov js mov and pushl adcl cmp mov jmp xchg aam cld cs push popa fistpl aam push dec inc incb cmp gs pop addr16 (bad) movsl xchg sbb call insb mov pop mov cmp es ret jae je sub mov iret cmpsb dec (bad) cmc imul add xchg or adc (bad) mov stos ss or push inc mov arpl out cltd lea lods mov fsubrl push loopne xor jnp add inc repnz stos mov out test shr ss dec (bad) xor xchg pop add and push fsubr mov addr16 test clc push das outsl and mov cmp fbstp dec pop clc into pop mov test shl mov lock pushf adc cmp xchg xchg cmpsl idivl lds test dec adc shlb sbb lahf adc cmpsl cmp loope adc and add pop mov sub inc dec mov mov call and jnp leave pop addr16 xchg mov jge push pop jmp cs inc push or and push call jg lock mov lcall call mov cmp inc or jno mov inc mov pop repz shlb and scas jmp pop sbb loop and sub mov test bswap lods sbb xadd ret into int3 xor mov pop mov jns,pt scas xchg mov inc insb mov jmp sarb popa xchg push jns cmp sar ds push out adc aas push lret ficomp jne sub (bad) pop push sbb addb enter idivb mov imul mov lahf ja les jle (bad) popa inc push adc xchg and sahf sub jbe jl gs jmp imulb adc and adc icebp xor cmp jns push mov jnp jne mov (bad) mov ds pop fldenv gs scas sbb movb bound imul adc arpl ret aam mov add loop dec into enter (bad) lret jne add int xor aam aad notl adc bound rcrl rcl sti mov lahf test shr cmp mov push or or popa jle stos mov (bad) jmp addb jns ss mov call push int3 jbe aam cwtl scas push loop xchg in cmp fwait addr16 xor add (bad) mov imul rorl sbb imul add pop mov aam idivl (bad) mov adc inc (bad) je mov sar mov xor fnstsw dec outsb dec sahf movb (bad) xchg aaa fbstp scas out cmpl add sbb xor sub imul mov sub lods (bad) fcomip lret loop js mov mov loopne sub mov test orl dec xchg sub lcall mov mov orb pop loop push dec test xchg mov loop dec push nop xlat jp sub mov iret in dec ds lret rcrl mov xchg and add imul jle inc ret movsb sub sahf out cmp jmp aaa and loope dec pop push add push mov data16 daa mov adc or xchg pop in sbb adc fstpl jge adc rol jo cmp pop cli hlt mov push (bad) rol loope or push mov out popf loop cli mov pop mov add push cli pop fcomi xor fisubrl mov sbbl cmp stos iret jno,pn sub loopne xchg inc lahf mov (bad) fisttp sti sub cmp jno or mov xchg jb arpl arpl pushf cmpl testb push scas fiadd es pop insl mov std push sbb jno mov divb sub sbb in dec shrl (bad) xor popf mov out (bad) adc add inc cmpsl adc jnp inc out push jge fistp mov sbb das add inc (bad) mov sbb dec mov pop xchg out iret das test jl sub decb adc and test jnp cmp and xchg imull jp jmp (bad) push push stc xchg cmp inc paddsw in call (bad) xchg sbb hlt mov mov loop leave mov mov daa in push mov stos fstps jl aam adc (bad) fwait aaa jb (bad) cmpsb outsl push mov mov aaa mov jp in in cltd dec stc pop popf push mov sub shll (bad) (bad) cmp pop test rcrb cmp push adc jnp dec ja ret test ret mov aam jl clc lods jmp and imul cwtl sub jo xor cmp sbb adc adc jo pop out xchg cmpsb jnp test arpl movsl push gs jne movsl xor xchg mov push int and or adc mov ja sbb adc xor pushf imul mov ret iret cmp and out ficompl inc jae enter push daa and movsl mov pusha movsb pop pop pop mov and and lret mov mov xor jmp dec cmpsl mov (bad) mov xor lahf jno aas mov add inc add rcrb iret cltd test je mov (bad) cmp rorb aaa adc out iret scas loope push fdivrp outsl faddl icebp xor loope push clc cs dec daa and xor cld (bad) dec out mov (bad) negb fnsave xchg sub sbb push addl popa aad popf mov mov stos push mov mov jg inc cmp cmp lret (bad) xchg xchg mov repnz imul mov mov insb or lret xor iret inc (bad) jbe rorl pop push loope dec xor or and loopne neg enter (bad) sub xor dec popa or in popf and mov xchg add add push sub mov jae cld pop test push rorl (bad) jmp push lods pop xor cmpsb or scas xchg add leave or adc das scas inc inc pop dec mov mov out sti pushf mov cltd push ss enter popa shrb hlt mov dec fistpl dec ficompl mov mov in dec jnp sub pop mov mov xchg jl push (bad) dec imul lods out mov pusha ss js or jle push mov and lds das xor sbb push mov clc push fisttp (bad) lret pop shll je (bad) cmp add scas subb cltd jle inc fcmovne in (bad) dec mov in fldenv inc or addr16 (bad) loop add stos stc jecxz stc (bad) xor mov call sbb sub pop stos xor dec rorb cld mull and loopne js rorb stos mov test push xor (bad) or and cmpsl lds pop sub ret sbb xlat adc clc outsl sub pop std iret outsl shlb test int (bad) cmp pop scas mov jo clc and xor pop aas sub in cli adc rorl lret dec sti iret adc add scas pop ret int cli lcall or pop (bad) addr16 mov subb (bad) inc mov inc int3 pop xchg out mov in add mov jae xchg ret je pop push dec aad cmp scas loopne dec or scas sub adcl enter xchg mov cmp mov mov nop sbb (bad) mov lock loopne pop sbb movsb and ljmp sbb xchg jecxz inc xchg inc dec dec dec addb (bad) mov daa jbe fisubl push lret adc dec cmp xor repnz xchg in mov or and jg mulb movsb mov jb pop scas cmp cltd movsb movsl mov into jae enter jmp cld dec or mov idivb mov outsl clc imul inc push in fstpl ljmp jo push dec xor int3 push pop (bad) (bad) dec sbb cmp popa test xor cltd mov cmp jmp jns imul pop test xor ja rcrb sbb jb movsl lods jne push mov jle adc lcall mov add add sub sahf (bad) fsub xor sub sahf (bad) cwtl sub push sub das dec or lret stos dec out ds roll and mov mov mov mov fidivl out mov cltd shrl pop sbb fs jmp jbe arpl lods push pop jge popf daa hlt imul scas pop sbb mov cmp add fcmovnu inc xchg test push xchg or gs stos mov into add scas mov (bad) fs (bad) dec pop das sub pop mov pushf imul sbb dec xor in mov or push pop (bad) fwait pop dec push les cs cmp lcall sub nop fisubr jae mov nop push es (bad) roll jle stos xchg cmp pop loope xlat mov mov jo je insl dec bound jbe and xchg sub fs cmpsl lods pop pop cwtl aad inc cmp mov mov pop fisubrl xor dec std pop jo sbb dec cmp mov lds lea pavgb fmul lret lds cmp lret inc in jmp loop (bad) enter addr16 dec and cld lods pop lods jl and xchg nop fcmovnu mov xchg sub push sbb or xlat adc pusha int push xchg mov out outsb adc sub in mov pushf jmp xor or sub mov jns pop scas idivb fwait loopne sub jo outsl repnz addr16 lret inc jno or mov into push pop xchg pop stos jns jns dec loopne pop fcomi and cmp out pop cld jno pop in xor jne mov mov mov clc lea das sbb cs add sub pop adc js loope sti add (bad) xor sub out std loope ljmp and mov jge jl insl mov push sahf push mov es cmp pusha out push and ret insl rcrl mov incl test sub je add test adc and lret and addr16 icebp mov std stos (bad) lods mov addl sbb mov sbb mov sbb pushf mov add inc mov xor (bad) aad mov stos cwtl outsl mov sar aas and in xor mov add cmp and sbb and mov push jmp dec stos lea sub pop xor lcall cmpsl inc pop xor das mov or (bad) mov sbb mov xlat int int3 imul in daa addr16 xchg enter scas adc movsb push mov push mov sti (bad) lcall mov mov dec hlt ds xchg cmp stos sub add xor lcall jle repz push push sub pop pop adc sarl sbb cmc leave fimull or ret out lock push fdivrl push outsl pop clc pop lret push add xlat jmp sbb movsl test clc mov in cli arpl adc sub (bad) xor inc mov cwtl ja inc jmp lret xor push jmp pop test xor sbb fdivs jle ds mov lcall pop (bad) or insb adc sbb je or aam sbb xchg divb in adc fwait and dec iret adc jle jmp pop or mov push inc in int fistp dec ds sbb inc adc out imul rclb test stc mov and push add xor adc mov mov add (bad) mov sbb mov xchg dec adc mov sbb iret roll xchg pop aaa push popa mov ret scas xchg push mov adc inc fs call xchg orl mov in andl fistl xchg mov cmp mov (bad) xchg or loopne imul push or leave lds (bad) stos inc outsl or sub push in mov loopne sbb mov mov cmc mov mov idivl std dec fldcw cmp sarb pop xchg mov inc imul and (bad) test add add mov jb mov imul je push (bad) icebp adc outsl (bad) add pop out sahf imul jl dec enter imul rol inc and shll mov ljmp xchg jae mov fstpt arpl ljmp inc ss dec daa repz fcoml clc insl and mov lahf push sahf inc sub lcall mov lret dec aad repnz xchg and adc cmp inc mov std out cmp xor dec pop jb stc or lock sub mov push cs mov enter xchg or and sbb jae ljmp pop sub adc jmp inc inc sub pop pop mov sti test into pop xchg sub mov in xlat pop and push lods add add mov or xlat jp iret and mov sub pop dec (bad) dec (bad) int3 jg dec jne pop fcmovne sti clc aad jge mov push mov jl adc mov xor loopne add pop pop push gs (bad) clc cmp roll pusha push cmpsl dec lea or adc or (bad) into inc push in cld ret dec sbb dec xor (bad) cmp lds xchg xor pop xor pop mov mulb nop push inc mov add adc (bad) mov sub test mov jno (bad) cmp mov (bad) loop (bad) pop adc sbb dec cltd lcall push dec sti lea add push xchg es mov add lret push xchg jno push and mov xor imul xchg (bad) out lret pop mov lods mov add stos andl int pop jmp pop push cmp xchg jns mov leave lods cmp add fbld dec arpl lea mov es pop push bound xchg adc scas or daa (bad) jbe (bad) cld ret inc ds daa push mov adc mov mov divb mov pop mov xorb (bad) sub les inc inc pop lods lds jmp sub push jle int ss push push shll cmpsl outsl mov in mov xor sub mov outsb adc cmp mov lods mov adcl shlb icebp xchg cmp sbb mov or xchg aas cmp mov jmp pop out cmpsb dec insl xchg xchg fstpt sbb or dec jmp pop jo pop lds push std dec addr16 jmp outsl mov dec in pop roll imul push mov outsl mov gs dec mov mov sti icebp push ljmp dec xor fdivr test and mov jne imul repz jbe push xor inc aas push in jp xchg and lret push mov cmp js dec and mov out in xchg fdivrs xchg pop and out xchg jg pushf clc dec push shlb sub enter jno cmp mov inc sbb mov ja mov daa call cmpl in es pop test jg mov push add pusha mov and mov paddusw subl add pop mov icebp test das lock jbe jp mov xor sbb sbb in insl call dec cmpsb daa (bad) adcl daa xchg stos fild rolb xchg imulb pop xchg (bad) xlat add lock ret pop cmp cwtl lods sbbb jo adc fildll jge jae repz fldenv pop push (bad) lret adc shrl rol ret cmpsb pop in aam xchg in cmp push push xor addr16 ljmp aam mov inc mov mov mov adc sti cltd push test jecxz pop xlat mov ss fidivl pop pop icebp mov popa mov xor mov adc fwait cwtl xor fbld inc nop lock xchg add aam pop sbb cmp ss iret mov push das loop or and jnp sub into pop jg add cmp lock js out popf loop (bad) iret dec and jne cmp flds popf and or stos or and lret pop inc sbb je mov pusha xor adc call shll stos decl in enter int pop cmp xor push adc mov add cwtl test (bad) jo nop cmp dec je sbb rcl dec ss pop cltd movsb dec pop jmp repz cld hlt pop lods dec inc movsl fs fsubrp and fisubr and mov repz mov jae xor dec xor push and push push shrb arpl fldcw mov xor int outsb test clc inc sub jl sub jg leave imul lret mov lock loopne js jecxz mov inc jmp and in cmpsb mov in sbb cltd push ficomp sub aaa adc dec loopne xchg bound jmp stos pop int3 mov pop into ds mov imul aaa pop mov mov movsb mov data16 or dec adc push (bad) jmp std dec sahf dec lret cmpsl stos add int sbb lock mov adc jmp sbb xchg fwait int sbb xor rorb cltd dec bound fnstsw cmpsl call rcr les jp and iret daa inc inc sbbb pop mov roll sub or and fisttp stos aam add xor fisttp fimull cmpsl mov jns sub out sbb pop jecxz cmp mov sbb adc sub std jg aas and mov sub inc in or cwtl xchg mov pop sub inc cltd insb movsb push lret jns ret inc add aaa sar mov fisubr add mov mov shll lds xor push bound add out or jg sub fildl push adc js push loop mov cmovle ret rolb mov lea out into adc and lcall nop test aam jo and jns (bad) shll (bad) in jmp out (bad) enter push add jne jbe inc daa xor cmp mov xor xchg pop inc mov xchg ret cwtl in bound mov bound psubsw jge or or push adc fwait mov sarb push xor xchg xchg aas cld imul cmpsl push outsb push imul popf jne fcomps mov adc fcmovne xor ljmp jp loope push enter outsb xor pop mov jbe cmpsb mov jbe pop push jnp cwtl and shlb mov dec mov mov bswap push mov pop popa lods fcomps shr mov (bad) mov pop arpl xlat inc and outsl movsl adc sbb shll push mov cmp pop sahf je test test mov sahf out mov (bad) aam test loope jg aad dec xor xchg clc test arpl insb fwait sub data16 aaa and push jg sbb popa mov shrl jbe mov adc jg xor mov jno lret mov scas lods or inc jnp jmp test inc sbb int3 xchg pop inc and mov std sub shrb push xchg pop les lahf cld jo jge out xchg push into es js sahf daa flds inc test sahf stc cmpsl insb roll and shl xchg dec aas sub lahf inc pushf push pop int3 aas or stc xor push mov std les call in cwtl popa push mov sbb inc nop add push lods sbb or insl push add das xchg mov fdivl in mov sbb jmp jmp jecxz mov or fstps (bad) mov call xor popf into cmc arpl mov pop test insb push or or insb xor adc fisttp shrb push das mov rorb add adc in jmp dec adc pop repz jo push adc mov (bad) in mov out fsubrl pusha outsl gs aam dec stc lret xlat xchg loope mov clc sub loope hlt dec call mov imul pop or icebp movsl cmp jbe nop mov popa scas pop or sbb fidivrl inc ja aad data16 mov cli dec or lea or sub fsubrl outsl pusha cmc jne dec cmc nop cwtl xchg scas ljmp stos ds sarl jmp addr16 leave fsubrs ds mov fcmovnu push pop scas sti dec push out cmp mov pop repz sbb cltd sbb fistp push cmp cld push mov jg scas dec adc cmpsl roll fsub mov xlat pusha sti inc or sbb jo jb add movsb pop inc jmp cmp out aas lods adc sub push mov xchg push repnz and pop or sub push xchg fs or and jl jp cli xor xchg lcall xchg popa xor (bad) ljmp addr16 mov or cmp xchg xchg lock and (bad) xchg fwait mov shrb push mov mov sub shrb bound cli mov insb pop mov push cmc aad push jne loope cmc jmp pop in push push push jb jl jbe push or jmp ffree mov mov fwait jnp loopne jno mov push dec jo mov and out mov mov cmp data16 dec mov mov js jno adc or jno sbb cld lds jp or aaa xchg in stc fdivr or push and imul pop fstl mov orb cmp push cvtpi2ps dec inc mov call sbb ss adc cwtl sbb add push test xchg dec ss xchg stos mulb hlt xchg push mov add xor lahf mov les inc insl js loope aaa in fcomps push lea jmp sbbl add rcll jl push push ret int adc aas sbb jno mov push adc push loope sub xor dec xchg (bad) xor lahf jne test jb mov inc jno mov push xchg insb and jmp pop cltd fsubrs sub adc fsts aaa addr16 add addr16 fsubrs xchg insl xor test dec and scas ficom or movsl or adc into xorb fidivr (bad) in mov mov insb cmp mov xchg jns arpl mov sub out fisttpl nop dec popa out (bad) jecxz loopne rol xor cltd mov and pop xor adc out or fwait and andb add (bad) xlat stc sbb and fistpll sbb or call cmpsl call dec scas (bad) or bound mov loopne inc and aam rcr pop rorl xor ret jl push inc pushf inc jb loop fcoml pop std inc stos xor loope jg jne inc in lods jge aam or pusha pop cltd xchg pop cmp mov (bad) mov sbb mov lret add xchg int es ljmp pop icebp cs dec (bad) mov adc scas pop in lea jb aam mov movsb push std xor dec mov dec cmpsb jg dec add mov mov fisubrl and jecxz in out stc fisttpll (bad) or test fsub xchg push std or cmc inc int lods jmp inc ljmp lods jae sub insl xor pop mov xchg pop int xor pop idiv pop call or xchg rol dec (bad) clc decl mov cmp in pop mov sbb int sbbl push (bad) push call loopne scas scas icebp pushf lret and int3 mov dec cli stc jae mov xlat inc outsb ss fldcw bound test jno jmp mov pop popa cmc faddp mov dec ds cmp adc xchg pop mov jo std add xor bound mov lcall add mov push xchg inc ret test movsb xor xchg loope decb dec clc (bad) pop or sbb mov and mull dec or das xchg leave lahf test out gs sbb fwait sbb out ret movq fsts stc add xchg xor lret xor loope or mov loop pop fcomi in jbe jl (bad) sti mov (bad) in add pop jecxz dec pop pandn aas push jp jne (bad) inc pop or sar cmp rclb xchg push rclb push push jae addl lds lret scas lea hlt daa mov arpl inc scas mov insb lret xchg popf jns (bad) daa in cmp fcomps pop repnz aas jle cmp into push cltd int3 mov cmp xchg jns int3 sbb adc test lock pop xchg ja outsl call push test addl fldcw and xchg jb dec add (bad) jge imul pop dec dec (bad) pop mov popa repz xlat adc aad loopw push adc jb stos test pop loop or inc (bad) xor andl jge mov xor jmp lock ljmp dec push icebp pop sahf xchg std ret rcll dec push xchg andb addr16 mov cmp test mov btcl outsb inc rorl inc cmp out mov mov std push jmp jmp add pop jnp ret ror mov sbb stc sub cld sbb dec mov xor push jmp inc mov cmpsl inc xor cltd fistl mov cmp pop aam stos leave dec pushf fsubrs je sub pop scas or aad mov mov fidivr or mov xchg jnp ja xor pop mov add add and mov push sub (bad) or or push xor sub push jle stos dec and dec jo xchg mov arpl cmp add mov (bad) jge add rol pop adcl xchg test mov nop loopne mov adc xor dec clc xor and fdivs push adc jge mov or add mov jmp jae adc mov fcoms xor sbb repnz cs push insl jne jno cmc jge jno mov scas loope rorb nop jecxz jbe lods mov fdivrp pop pop cmp and test mov je ds and scas mov rorb push xor in fnstcw in pop mov adc mov ds jne insb inc out push lcall jecxz outsl icebp (bad) fwait in lahf ljmp mov lods (bad) fcomps cmc idivb cwtl and or cmp test imul add lret hlt lcall inc lret mov int3 inc out jmp mov stos cmp stos cmp ficomp mov ficomp jbe xchg push int3 lret insb and add test sti leave outsb jp (bad) mov mov movb ss movsl mov dec push cmp mov scas lcall mov inc fist cmc cmp adc sub xor insl lret fbstp xor mov adcb push repnz sub (bad) fdiv or add (bad) aad sbb mov mov ret (bad) mov sbb nopl lret dec push (bad) aaa xor stos and fmul mov shlb adcl xchg mov jnp dec cmp hlt xchg cmp test (bad) stc icebp arpl inc cmpl in xchg dec pop ljmp lcall fildll jo push jmp lods mov push jp gs lret xor (bad) pop call jo shll aad test mov sbb pop mov imul or mov imul test fsts fadds jge xchg lods stos in out movsb mov mov scas or sbbb sti roll in daa mov ret jg ja dec (bad) outsb test xchg cmpb (bad) pop sub mov fwait and nop shlb popf cmp daa add sub bound fcmovnb jno adcb jl loope sub addl popa iret xlat aas jbe aam leave and or mov popa and imul cmpsb xchg (bad) rcr jnp shlb (bad) jp fsubrs gs nop xlat mov in fisub push arpl pop notb out adc mov std adc mov push js sahf (bad) fsubrl data16 mov insl sbb jbe jb dec jae into sub push loopne or jl lods fistl jo sti push sbb ret pop or xor (bad) aas or (bad) or popa xor push in les sub lock push stc adc jmp xor dec iret sbb (bad) (bad) cmp jne (bad) cli add jge,pn jg xor dec int3 push jno arpl ja repz pushf add xlat neg idivl xchg (bad) dec xchg push mov or mov loopne or lds inc outsb cmpsb cmpsb cmpsb cli hlt in add lahf lcall ret popf int3 outsl push xchg ret push xchg push arpl inc dec insb pop test iret xchg test mov xor fcomip pop adc cs cmpsb ja jne pop mov pop ret sbb jmp mov jecxz mov and mov icebp fldenv jg xchg (bad) xor cli jnp sarb dec (bad) mov mov std pop cs (bad) mov or mov cmp stos fdiv jns (bad) and inc mov and shll xchg cmp jbe fnstenv mov sub inc mov cmc xchg sahf inc mov sbb mov pop or int3 pop mov adc frstor repnz cmp mov sbb nop lahf mov mov add ss pop mov jbe prefetcht1 (bad) repnz inc roll jno cmpsb add rolb insl add movsb lea cmp adc adc pop out mov mov mov inc add insb outsb jbe xor sub cmp xchg mov rclb mov shr push setb jo into adc dec daa js push xchg dec adc loope mov xchg sub insl es xor rclb js sub xchg popw jl int (bad) cmp and push jb xor jge repz xchg mov xchg cmp (bad) pop cwtl mov mov (bad) cmp insb insb lcall aad rcrl push xor adc sar pop jae stc push push mov push push (bad) insb or mov lock add sub mov sub sub imul pop push gs aaa jae sbb xchg push inc jl mov js xchg cwtl scas sub ja test sbb and dec repnz iret int xchg dec xor jnp pop mov scas and mov add ficom std stos pop cs icebp int imul dec push mov xor sub stos les daa rol lea adc (bad) test mov lcall mov dec gs inc sub (bad) call pop aaa jle iret test mov movsl and mov repz fistpll aaa dec loope scas cli push add movsb fs std mov cmc push call sbb (bad) sti rcrl jmp movsl test cwtl cmp ss je pop lret push cli lea in or inc push cmp mov out test inc cli idivl out hlt cmp jbe jne repz repz jno dec shll inc push into sbb fsubl lods sub ret jb or gs or mov test rorl mov mov scas arpl int mov xchg pop into data16 ret add jns sti fwait add cmp out mov (bad) testb jl jnp repz out jbe lods (bad) icebp mov loopne fcoms (bad) mov jno fsubrl inc movsl xchg xchg loope inc sbb popa test imul stc (bad) addr16 cmc push ljmp push mov and mov movsl add les pushf (bad) adc adc into cmpl dec mov lahf and xor dec ret mov jb fildl les incl outsl repz adc fistp jge pop stos iret aad test int3 jg push repnz faddl and ja mov in test lret nop dec (bad) jbe sbb dec pop jg ret mov cli js adc xchg mov and sbb xchg jbe vphaddwq dec inc cmpsl inc adc call jge call ss jne popa incb mov lods dec stc je xchg or cmc fstps (bad) (bad) iret aas out jl in jnp pop fisub dec jmp sub mov js and push sbb xchg or cmpsl xor lock pop sub xchg xor dec sub mov pop xor gs dec dec xor shl fistp (bad) in jge roll jae aam imul and hlt std xor xor ffree pushf mov inc cmpsb and jb jmp popa jnp (bad) testb in sbb int mov mov or pushf bound add mov mov nop sbb gs ja loope pop adc cmp mov clc lds xlat fdivl loopne sahf or (bad) cmp mov test lods mov (bad) in jnp int3 into aaa dec pop inc es in xchg pop cmp push cmpsl daa jb nop and das cmc out rorb push in sub int (bad) push adc in pop jmp gs sub mov outsb adc pop adc adc and fnstenv adc lahf aam pop frstor (bad) hlt mov cli outsl cmpsl adc (bad) mov pop out pop imul pop pop cmp mov add loope sbb xchg add mov pop dec pop lock es jle mov dec inc jnp dec jg jle xchg mov dec xchg mov jae lcall cmp into out adc jbe nop pop mov test mov cmpsb jl pop repnz xor lahf aad mov xchg mov mov pop cmp int (bad) inc pop lock stos jg fs std and decl fsts sub cmp mov sbb push popa or outsl out call int3 xchg pop jle inc pop sbb inc mov pop nop pop cmp arpl xchg dec xor adc imul push leave dec imul lock mov lret lods xchg gs push shll push loope arpl sarb orl cmpsb shrb fidivrl (bad) ljmp cmp test imul xor add insb jecxz inc dec push outsb or fcoms or call push xor insl test lcall cmp sub jmp out les jp addl sti or ret inc push mov xchg fildll test sub fcoml or mov fsubrl mov push jns ret test adc das jle fild cltd adc daa and mov mov xlat out movsl xchg push mov cmp loopne inc into flds xchg pop xchg mov xchg push xchg fwait adc out sub lods jmp subl aad cmpsl pushf cmp aam pop int3 std mov mov fidiv cmp add aaa mov push lock or ret and dec mov mov loop sub push imul call nop data16 push and int3 inc mov jp iret popa int mov nop sbb and xor stos (bad) imulb mov jb cmpsl movsb pop push mov xchg out cmp clc xor loope pop test ss and cmpl pop loopne xchg popf push cmp xchg cwtl xchg sbb pop dec das sub fsubp mov mov aam decb (bad) ds mov out mov jge sbb mov stc mov scas jg imul sub dec jno lds mov adc lcall push jle sar pusha hlt mov cmp outsb cmp lods shlb outsl push add pop sbb push pop movsb cmp push push out inc imul ret xor jecxz jmp mov sar aas jmp xchg lods mov and xchg push add mov jne hlt add or mov jl insl int add or adc lahf adc mov mov dec fmul push imul mov icebp pop cwtl ljmp pop jae iret pop pop out je mov out cld xor push mov dec jmp pop push jnp or sahf xchg xor popf or mov inc or lret sbb fidivr push xchg push sub or imul es out adc push ficompl pop pop ret ss es adcl cwtl in popa mov push repnz fscale xchg and stc xor xchg insl mov fisubr jge in mov lock mov push aas push js stos jo jbe mov (bad) pop mov mov jmp (bad) (bad) stos push out clc push cli outsb xor movsl stc js dec add mov dec int arpl push daa dec and push mov loop sarb out into jp mov scas scas push lods cmp nop repnz xchg pop fildll xor cmp add pop sub cli stos sti cmp inc (bad) xor fildl sub shlb mov xchg mov xor jle xchg loop inc push xchg das aas divb stos jns sub mov loope jge or fsubl int in or cmp push leave and fld cmp jle stc cmp jp xchg xchg lcall dec lods inc es shrb push test cmp xchg xchg jo cmc sbb and sub in test or mov mov pushl rcrl push sub ss stos cmp fldenv (bad) dec adc push mov dec pushf fsub sbb xor fsubrl push lock push loop in push adc sub leave out sub or xchg xor int3 into daa mov aas push add insb mov jo fld mov pop stos cmp stos jmp push stos xchg fist push xor mov jmp test sub mov pop cmp (bad) lods xchg mov outsb cmpsl mov dec gs push mov iret sub push pop inc out cli sub (bad) hlt xchg and sub leave popf (bad) and pop (bad) int3 push mov pop cmpsb aad (bad) scas mov mov and dec pop pushf cmc dec fcompl iret jmp fild popf push mov cmp ficom push out ficom out cmc aaa mov iret cli lret addr16 sub push nop mov add and push inc cs test lcall add jnp rcrl sub daa jmp test and test and mov mov hlt pop js pusha sub subb mov jg arpl jbe pop xchg pop repz adc inc xchg sub cld out loopne push shlb ljmp cwtl push faddl and jge fs mov mov (bad) mov cmp icebp mov adc loop movsl scas lods lods cwtl ljmpw fild sub mov test shlb lock or push dec and push dec mov and push adc mov lock fdivrl sbb dec in mov sbb adc xchg int3 mov lods je jg (bad) mov aad pop pop stc xor lahf jnp dec imul dec add jnp sbb aaa mov pop jle add lahf cmc xchg mov repnz in es push mov inc jmp sub test pusha (bad) dec mov xchg and xor scas out xchg in ja and xchg mov sti or mov es pop int3 dec pop pop cmp adc notb pop shlb push int iret and call fwait sub sbb movsl icebp xchg rcrl fiadd ljmp mov sbb repz xlat add pop aaa jmp jbe dec xor orl out sbb (bad) pop mov and push sbb xchg dec pop xchg (bad) cmp (bad) xlat fdivs pop pop dec ret mov stc mov mov mov xchg mov push leave or or data16 scas ds pop sar inc jp bound dec mov mov cmpsb xchg out mov lods out dec popf (bad) mov (bad) sbb mov imul mov aam xchg and or or jle iret push pop xchg or loopne mov cwtl pop fdivrl arpl jmp outsl mov fsub insl inc lea push les decb add mov movsl sub sbb dec push mov std iret es lods fsubl push loop cmpsb xor je adc sahf xchg or xlat pop sbb mov into or mov lods (bad) mov test sub fisttp out popf cmp dec mov inc jle dec outsb and loop out sub fldt mov push inc movsl lods (bad) clc adc xor in pop mov push imul dec cmp mov leave lcall call jo mov scas ret into mov shlb into popf xchg lahf pop add out lahf mov int test cs push mov popf mov cmc lea or jmp into out sbb cmpsb pop cs ljmp dec inc jle sahf fist in sahf das or bound dec lock jmp jg (bad) fs lret aam (bad) dec pop mov add insb cmp dec mov inc sarb mov xchg cmpl data16 arpl idiv stos sub in sub jnp adc ja jp,pt cmpl xor popf pop lock xor scas faddp push mov lahf add adc jae mov cmp gs pushf lock xchg outsl dec add jecxz mov subl xchg (bad) dec rolb in cli jg or and lods mov jl adc cmp aaa sysret sbb mov and fidivrl out jecxz cmp inc inc pop mov xchg cmpsl sbb lahf aam shll add cli nop jmp pop push push xchg out adc imul cld out adc mov mov sahf and (bad) inc cwtl popa push outsl fs mov int scas jg sarl les dec mov adc rclb jecxz sub cmp xchg sbb ds or inc ds mov or push mov je cmp imull mov and daa stc shrl out push inc (bad) leave outsl stc jge xor xchg inc stos pushf jb pop roll sarb stc sub inc (bad) jo insl mov mov fidivrl lret xchg mov mov ja je outsl leave insb rcrl pop (bad) hlt xor insb xor mov stos sub adc orb mov jnp mov fdivrl fistl jne lret inc movsb mov (bad) mov out pop ss mov in sub mov scas leave jl out inc inc out or and imul je cld cld cwtl repz or loopne mov loopne pop xor adc flds xor or enter add movsl add pushf cli (bad) int3 inc and pop pop lahf sarl (bad) dec xchg mov pop (bad) and je movsb out imul mov add mov clc test aas xor or out mov sub sbb pop inc xor or test push pushf das sub in fnstcw fs xchg sub mov js lcall stc cs lds add push addr16 in js js insb or pop add sbb cmp fcmovne mov pop pop repz or adc movsb repnz xor sbb in arpl sub push repnz pop (bad) mov pop push cmpsb int3 push int3 leave add lcall (bad) xor mov (bad) add enter sub xchg dec or loopne mov or in (bad) lahf pop lahf mov flds sub xchg hlt adc mov mov or xor popa mov jge xor movb pop pop test cmpsl jo mov jne inc lods cmp rorl jge jp push cmp and dec ljmp lcall dec lods fistpll or scas movsb mov js inc fwait sub clc push add pop test mov and outsl fs xor cmp mov (bad) or adc adc pop push aam (bad) cwtl cmc ficomp fdivrp cmp fistp frstor lds pop (bad) fyl2xp1 mov sbb sbb movsb stc int insl mov movsl xchg test xchg ret dec std loope ss inc movsb mov lods (bad) xchg call inc xor push mov adc push cwtl ja shrl xchg enter pop ret inc mov xchg shr mov mov sbb mov incl cmp cli jmp adc adc aad repz and pusha jns call adc push (bad) aas pop sbb ret add inc jne mov and or push nop sub ret jl and mov or adc jle inc lds fldl fcompl push xor add adc rcr add mov mov jg jle inc xchg repnz lcall rorl (bad) sbb sub jp adc xor xchg dec sub push lret cmp pop push push xor roll cmp adc std (bad) js or push mov aas dec cmp sbb rorb cmp pop test jb cmpl dec mov mov shlb pop and insl frstor arpl mov push outsb and cmpsl dec and add out xor xchg mov push test pop cmc jno and out ss fimull xchg popa mov lahf push adc push dec out or jnp push push cs test repz lock cmpsl xor pushf jae aaa pop or cwtl mov xor push push add dec mov jle jecxz scas (bad) xor push cs aad xchg out imul dec lock mov pop adc pop sbb int3 repnz xor mov dec mov bound call out mov les cmpsb and fildl fwait xor sbb adc lock imul jno jnp adc push in cltd xchg loopne (bad) mov lea xchg (bad) pop pop mov sbb jp hlt cmp push jo mov mov cltd jge sar mov and cmp xchg out jl mov outsb xlat ljmp xor mov jl push test sbb fidivrl jo in or cmp cmp sbb out (bad) xor (bad) popa pushf (bad) jo iret or or sarl outsb jge cmp xchg sbb mov jge pop xor pop add ret dec mov and pushf (bad) pop sbb add out xchg andl (bad) enter out sahf sbb sub push rorl fisttpl lock lods cmpsl jnp in mov ljmp subl aad sub scas sub sarb pop xor xor mov xchg mov and mov add fisubr mov stc mov movsb cli lods or testb (bad) mov sub test xchg je enter in adc std seto mov (bad) pop adc nop sub insb fs addr16 shr mov add outsl ficoml and jb mov mov push int outsb xor call (bad) imulb cs leave nop push aam mov ja int sub jb dec push jmp ss or mov scas push mov sarb sbb xor inc lock add adc out inc jge xor adc stos sbb lret mov (bad) lret push fsubrp (bad) lods push gs into xchg popa int3 push or cmpsl stos mov mov pop lret and insl dec sub xor mov push sbb mov divl dec (bad) lcall push lods in fidiv xchg inc dec push ret mov jae lock mov psubw inc dec and mov ficompl ret (bad) in cmpsl push adc xlat mov lret mov or or jno loopne sti pop pop dec xchg es push add and lea clc push (bad) cwtl into (bad) fidivrl scas add mov jp or mov push xchg sarl fldcw insb nop lret xchg (bad) cmc xor push jnp mov dec mov jbe aas test push (bad) cs insb cmpsb in lret pop mov es cmp xchg add fstps roll imul ja js stos mov arpl (bad) (bad) pop repz cmp loopne xchg (bad) jbe xchg pop scas dec xor test divl or xor mov mov sbb popa fidivrl and or fimul movsb cmc pop das xchg repnz data16 stc gs xor fistpl ficoml bound iret cli jecxz lret nop add jg mov sbb insb push jl and pop fdivr je les jg cmpsb data16 mov sbb jmp pushf mov mov push add inc mov cmp jne add mov outsb lds sub fisttp test lret fdivr push xor pop push sub jle aam shlb cld xorl lret inc push daa test es push mov xor push jns dec les inc cmp sbb ret ret xchg mov inc xor adc push ss sub pop lock cs mov scas pop or stc pusha clc int idivl mov test out jne push loope mov bnd mov in sub punpckhdq cmp cltd push pusha xchg call iret xor aaa gs rorl (bad) jb test mov inc inc pop sqrtps jmp mov cmp push xchg xchg adc add add pop pop enter or loop jae cmc adc lahf (bad) adc mov push sub mov rcl cmpsb cmp pop (bad) out test cmp jns ret jle cmp outsb aaa call jb into jnp movsl loope lock clc pusha xor sub adcl jo rcrl dec sbb pop and sbb test add jno popf mov pop jl dec lret mov test jne,pt not cmp ljmp jnp sub inc pop loope andb (bad) je iret out jecxz add mov pusha mov or les or xor push es or (bad) or push jnp jg mov idivb pop xor incl mov mov movsl xor jno xchg mov add (bad) ss lcall inc out fstl sub outsl xor cmc movsb les nopl je mov fldcw cltd push stos (bad) call cmpsb xsha256 sub inc xor mov ficompl es xchg out fimull hlt xor lock leave adc loop mov xchg cmp mov sbb outsl and add fildl xchg or test pop icebp cltd xchg dec mov test pop out pop in test xchg inc dec out sub cmp or xchg and fwait xor and cmp jne xchg push cmp or icebp (bad) ficompl movsl hlt jg sbb fnsave inc inc inc pop xor fisubr into daa (bad) mov sahf push or cmp jbe mov add push xchg push and scas ror mov iret push mov mov dec xchg and cmpl jle or pop imul gs mov sbb inc out out ljmp out jg sbb jb xchg mov and lcall jp push (bad) int fisttpl jle cld mov inc jae push imul xor stc pop arpl pop pushf nop jmp dec adc or popf jmp dec pop jns inc int push mov imul cltd inc dec and cmp mov dec cmp mov jae cmp aad adc xchg lret pop cs sbb or mov aaa ss mov jle pop fs shrl in push dec add push cli sbb dec jl xchg jg jae add mov add std pop int mov push test cmp xchg pop adc roll repz fiaddl jns jecxz jp js pop mov aaa std and fs mov xchg aam sbb lods mov cwtl movsb repnz notb test inc in cmp cmpb inc add andl xor jne xorl cwtl mov aaa loop (bad) mov xlat fs add les aam xchg mov (bad) lret out pop dec xchg ret neg xchg bound je jno pusha int3 jns pop add addr16 insl sub icebp mov mov in pop out andl mov adc or andb push (bad) push outsb inc mov mov dec push ret mov push ror ficoml xor xchg jmp jo lret cwtl mov mov fistl mov mov test sahf xlat movsl fcompl push inc jnp xor and pop jl adc cmp lock addr16 data16 mov pop jbe js divl rolb push jp loop jecxz push sahf xor in inc lock int push cmp ss (bad) xchg out sysexit inc (bad) mov inc xlat addr16 push stos jbe fcoml sub fs sbb xlat sub or xor push pop std mov ret ret xchg add dec addl mov mov adc hlt xor mov dec xor je mov in stos xchg sub sub daa lock repnz pop adc jnp and and mov mov sbb jne cltd xchg out pop add sbb stc imul and xchg mov or xchg pop dec xchg adc lcall imul mov mov (bad) lods sub sbb pop mov cmp cli xchg test mov sub ret and mov xchg jno scas inc sar mov lret movsb push pop xor pop and in mov mov jae (bad) lods or xchg stc xor jp cmp cmp push add xor (bad) jb and and inc imul or mov fcomps lods lods lcall cmp and xchg or nop ljmp stos push gs pop shll test push add movsb jle out xchg pop jmp popf cmpsl adcl lods pop jmp or hlt pop imul mov xchg setbe cmpsb fildll aas or shlb jb jnp push stos outsb dec insb mov in jmp and out fs push cmp dec gs fldt in ljmp push and mov mov aaa fs std test jo test call jg int cmp pop push mov and or dec int3 imul xor dec pop fucom pop test and push inc inc inc ljmp add xlat aaa or cltd xor mov jge cmc sbb aad mov repnz ds sbb insb sub das jne sbb in sub sub popf cmp movsl lahf pop fadd inc lret mov push xor xchg adc push pop and shrb jne mov (bad) lret cs xchg (bad) enter add pop pop loop stos adc dec adc add test push jb out cs ret and hlt dec jg int add mov fwait or inc nop loopne or mov not pushf divb rorb jmp sbb (bad) mov mov cmpsl xchg stos fldcw mov sahf lods push leave dec mov popf lock push imul inc sbb push mov push out sbb (bad) leave nop out (bad) roll push imul ja add push ja test jno roll scas lret in or (bad) pop cld lods xor pop sub ret cwtl mov (bad) ds in fisttpll xor mov add xchg js test stos out fmull gs les pop data16 mov cmpsb and add test xor mov or or cli out adc bound mov xchg lret loopne and in test add sarl shl test mov dec jle test lods shrb mov jne mov icebp mov jecxz and pop int3 repnz hlt les pop adc mov test mov jb cmpsl sbb into dec pushl aaa xchg sub sbb mov inc enter cmp arpl fs mov mov scas lahf or pop xchg mov mov add jp mov sub cltd adc sub out pop jle enter clc cmp es fimull sahf rcrl outsb sub inc ja aas add insb outsl test mov std test test insl cli mov pop cs test daa mov pop sbb std into sahf jecxz add lea je add ret in and outsl cmp jmp jb shrl mov mov xchg aad pop jae repnz lret jbe in xchg sub movsl test dec movsl pop cmp repnz pop mov into mov sub pop out push inc (bad) xchg out cmpsb mov sbb ret adc pusha add jmp outsl lock sub inc add cmpsl ret rclb popaw (bad) rolb loopne sub dec cmp jle inc in inc xchg push bound sahf inc scas pop xchg stc mov out stc sbbl pusha and pop jmp or rorl in mov fwait leave lods (bad) jno jg mov cmp cwtl mov (bad) sahf adc lods mov xor xor mov ret dec mov in dec movsb xchg inc enter mov add pop pop std pop jmp ja fistpl fiaddl mov fs sub mov mov xchg pushf data16 int lcall jns in mov fs inc mov insb fistpl jge jo push xchg jp mov lods sbb cltd mov test pop sub inc xchg cwtl dec xor test jmp test idivl int3 jle and insb xor add mov xor sbb rorl mov and dec mov push xchg imul mov das sbb jno mov xor (bad) cmc pop pop loop bound push cld push adc push das and push add xorb loop sub and ss scas adc xorl (bad) mov or adc mov jge (bad) daa push push setno lods xor dec push jmp das lret push and fstps gs fsubrs xchg xlat fs cs inc mov int mov push dec popf xchg cmp movsb outsb frstor sbb inc dec cmp addr16 in or test sbb clc push scas pop into and add lock rorl ret fdivrl push pop or ljmp push test adc into or jge or jnp and lods dec pop pop sub mov pop adc lds mov inc adc ljmp js mov (bad) sbb xchg push dec out scas sub jnp rol enter or lods daa loope add je mov sbbl pushf jnp mov mov sub repz push fdivl lahf or sahf inc iret lods in dec dec sub mov cwtl mov psubusw cltd scas cmp fidivrl ret rcll xchg pop (bad) mov ret dec xchg cmp and xor das inc rol int3 and loop xlat jg mov popf ja xchg adc test mov mov in inc daa std (bad) inc xlat pop aam xor out mov add test sbb fdivs cli dec adc mov inc enter mov xor stos mov and movsb jno mov sub icebp mov aaa xlat adc sbb fisubl dec out sub es in dec arpl mov cld popf ss fadd cli imul sbb data16 icebp pop xrelease ja xor sbb xor lods mov push (bad) inc into pop mov adc cmp or xchg xchg xchg adc dec mov bound gs sarb adcl sub sti outsl (bad) aaa push jecxz and cmpb push mov jo jno push adc fildll out (bad) jo mov loope popf push sub xor ret stc sub jne sarb lret mov frstor push and cmp cmp push add ret lods popa leave pushf jp lahf mov mov test cmpsl ret pop xchg inc mov gs aas (bad) jne dec cmpsl mov mov push orl leave xchg daa lods sub jo push add push scas cmc cs imul push mov adc add xor outsb push sub outsl test in sbbb dec roll or jns adc lock out mov push jl std into sub adc ret into jnp loop mov inc movsb aam inc jae (bad) (bad) out push pop stos push subl fild xor stos loopw dec icebp dec jecxz fwait movsl inc mov mov lock push sbb pop pop test mov cwtl cs and shrb jecxz mov sub es lcall dec sbb or mov std inc push fist data16 (bad) push dec jno repnz dec in mov xchg or cmp hlt movsb xchg xchg inc cmp pop (bad) mov mov add test and pop sbb repz imul adc dec dec dec adc adcb cmp outsl inc sbb scas add jbe leave mov repz mov xchg fsubrs outsl outsb sahf fs jne mov roll xchg sub jbe and cpuid mov std rcrl mov adc es xchg xor jle fstps xor cmp mov xor hlt mov pop pusha push frstor fildll shrl aaa cmpl (bad) mov cmp incb and aam inc test jno (bad) in push push adc push aaa test loope lea mov mov inc aas loopne jnp sti std sarb and and stos mov jb push sbb mov stos mov or pop pop daa js pop cmp lcall xchg and in dec adc popa js aam ret mov xchg aam cmpsb mov hlt call aad scas fwait add repz push (bad) (bad) and cmpl pop xacquire fwait outsb adc xor imul dec pop push sub lds orb sbb dec mov mov jno lcall mov fstpt in adc jg fucom lods jle push outsl fisttpll insl inc ja ds out fwait bound xchg dec (bad) and cld mov inc sub xchg sub or xchg xor mov popf mov mov xor mov push (bad) sub mov dec imul inc test and xchg sub sub cmp test pop and aad loopne andb jne fimull ret xchg fdivrp sbb fsubrs (bad) mov testl pushf scas ss out or loopne xchg jne cmp jle (bad) cmc test sub rorb mov mov call mov jo aaa repnz mov lcall push or inc adc stos jecxz sub add sbb inc mov push add xchg fs ficomp popl rorb sbbb cmpsl adc sbb lahf ret add sbb jns add xlat mov jmp sub fucomi test rcrb mov mov dec stc add (bad) iret data16 xchg sahf pusha or rcll (bad) js adc setb xchg adc (bad) cmp jge jecxz or sti xchg jbe clc cmp outsl imul aam loope adc aas or andl push and and stos dec inc ret lea imul flds or stos test pop push test test mov fwait lods mov arpl movsb lds inc cmp sbbl inc pushf sub or jns mov test call add (bad) xchg cltd pop dec adc push nop repz xor bswap into mov lcall fxch in sbb (bad) stc loop leave stc jmp (bad) jmp jge imul mov aas mov aas push and (bad) sbb sbb insb and adcl (bad) mov das cmp ja sbb dec sbb jge jp scas push cltd outsb clc inc xchg out push jge fdiv pop and sarl sub in cmp (bad) repnz push andb dec (bad) xchg repz adc call out subb dec insl loope add popf jmp sbb movsb repnz cltd mov jno rsqrtps cs jne push mov (bad) aad js int ret or stos gs mov push pusha mov int3 cs fnstcw pop call inc mov mov or or xor inc dec dec xchg adc xchg jg stc (bad) addr16 mov sar jmp cmp mov ret dec fstpl aam outsb cmp dec pop add cmp sbbl jb xor jmp sbb mov imull push or dec inc push dec inc cmpsb in scas mov (bad) jne jecxz sbb mov (bad) adc or pop imul int3 mov movsl cmp jo rcll (bad) mov push aam out lret fistpl jg cmp xchg mov dec cmpsl ss jg repz sub jbe jp fnstsw shrl jno (bad) push jae mov cmc int3 jns pop jmp mov aaa fnsave in repz inc jp sbb gs popl xor and (bad) mov ror jg mov pop sbb aas popf ja adc (bad) leave push sar fwait xchg test sub mov push fisubrl xor and pushf int pop xlat imul bound or pop out test out xlat mov pop or mov std (bad) (bad) icebp jns mov ss pop loopne mov movsl inc sti jg jo mov dec xchg jecxz notl sub popa fldt add iret into in xor leave outsb inc stc inc and dec mov mov les pop bound cmp sub lods insl divl data16 xor iret push dec pop nop cmp fiadd lret push aaa in cli cmpsb stos mov push stos loop sbb pop cmp test cmpsb cltd and xchg push jl lret xchg lret arpl mov sub leave xor les sahf inc in (bad) movsl dec add mov add jnp imul (bad) adc int3 inc sbb and mov jnp mov jnp test dec and orl (bad) insl cmpl fldl movsl jno push insb nop repnz aad adc pop dec imul out and and lea xchg xor xorl dec xor jecxz repz push clc fidivl pop loope aam shrl les mov movsl add inc xchg stc mov mov sbbl lcall cwtl sbb pushf cmp outsb dec repnz jae xchg jno push test (bad) movsb mov dec xor sub fsubrs (bad) (bad) nop fbstp jo mov pop mov and adc (bad) fmulp mov stos sub sti jmp fsubrp cmp mov (bad) jbe inc inc sub call out loopne ret push xchg mov arpl mov jge xchg mov (bad) pop int3 mov mov pop or in jl std and fistl repnz testb adcl dec fwait adc jbe mov call cli xacquire mov jmp push cmpsl sub xlat push lret fsubl or aad leave std mov or rolb arpl in jae subb pop mov dec movsb push test jns sbb mov js test inc xlat test push div stc andl pop pop clc mov xchg pop data16 inc inc xor fsubl lock sti push push dec pop inc pop mov aad aas adc fsubrs clc adc rcl xor orl mov mov push dec xchg mov sahf dec xchg fisttpl adc outsb xchg outsl or jo inc sub mov mov push jg and mov cli and dec test imul mov aaa and xor dec rolb xor jp sbb mov inc in pop inc clc sahf cmp mov fsts push jmp jl add xor jp add hlt xor pop sbb (bad) sbb ds movsb nop hlt in addb jge test and (bad) shll sub (bad) mov gs aam sub stc aad loope dec out dec lods jnp (bad) cmc lahf dec hlt xchg pop or cs jge rcrb cmp dec lcall push shlb or and inc negb push xchg outsb xchg cld insb leave xor lahf int outsb shrb les (bad) enter (bad) cmp xor push leave orb icebp mov xor mov and fs mov pop inc and xchg stc sbb xchg popa mov (bad) je aas (bad) push icebp rcrb ffreep lods push (bad) addr16 fisub pop or insb dec mov das or mov push mov cmp push sub gs cwtl xchg add (bad) xor add pop and cld adc arpl decl and fstps and push add or jo push mov iret sti fwait imul pop sbb and stc stos mov iret dec sub in add test xchg jmp dec sbb inc or ja sahf mov iret adcl lds xor mov mov ss pop mov (bad) mov push pushl arpl loope and pop das in imul dec insb addr16 insb jnp inc jo jp (bad) xor jmp mov fbstp pop dec add movsb dec out mov sarb adc dec mov aaa or movsl fwait pop push (bad) sarb mov mov das sarl popa xchg imul repnz es mov xor push leave (bad) xchg dec sub data16 orl push lea pop test xor xchg sub adc lahf sbb jb shrb add cli push mov dec jb or jne daa daa ljmp jg fstpl mov mov add mov jle aad aam mov adc lods pop and sarl repnz in fs inc dec (bad) (bad) mov stos or jge popa and cmc xor xchg inc loope sahf pusha test lret shl push jne gs icebp xor aam xchg pop sbb lret xchg adc test jnp inc (bad) xor adc push fdivp push icebp aaa dec mov subps js inc pop xlat mov cmp add dec in (bad) movsb or pop int3 scas movsl sahf pop js stc push test int pusha incb call pop mov sub out xor mov in mov ljmp push sbb xor bound into cmp cmp jae fadd ja jmp jp fs sub sbb ja daa cmp movsl dec or mov inc dec dec pop fdivrs test pop push cmp adc std ret pop stos bound xchg push jle sahf ret cmpsb fcmovnbe lds movsl out jno mov push xor and sub stos bound repz iret ror sbb call insl sbb stos out mov divl dec jb outsl xchg mov mov leave push xchg add or or loop pop pop jge cwtl loopne pop mov faddl inc out push cmp jnp push stc xrelease inc cmp sub add pop inc jne setg push adc pop fimul jecxz clc cmpsl lds push mov xor int cmp lods imul inc ret xchg loope or loopne push mov (bad) into add jl out aad stos sti test icebp inc jb pop lret aas stc mov xchg dec test pusha adc mov insb dec xadd dec sbb out and inc adc pop push xchg call push fwait std leave subl jg sub push jo nop sbb cmpsl or sub jne inc cmp inc cmc xor inc iret add leave pusha fucomip cmp movsb push adc dec or push fs mov leave sub fstpl icebp mov push sub loopne mov xchg xor push in cwtl adc cli aas stos cmp mov or push fwait jne jbe cmp sbb mov sub mov out jo and (bad) (bad) cmp fwait push fcom loope xor push fistl fiaddl les pop jae gs cmp add (bad) cmp fsubr xor xchg hlt les and nop jo cmp mov mov sub test dec int push push sub jge scas loopne mov jne cli or add xchg or sbb push int3 push aad sub addr16 cmp and and sarl (bad) cmpsl sub cmp (bad) jae enter adc dec xor jge lcall mov sbb out iret sub push fwait cmpsl push inc mov fcomps repnz add push testb in and enter stos outsl jo push cmp fsubs or mov mov push in test cmp repz outsb add sub add lds out or mov into dec cmpsl das xor aaa sub dec dec fsts out les dec shrl stos or and mov cmp out mov outsl xchg test sub mov icebp loopne cmp sub jge jo xor rorl pop lret xor dec aaa ret dec mov push lret stos pop out dec cs outsl icebp sbb xor ret jo cmp out inc adc loope jecxz int3 fisttpll and cwtl add fildl in inc repz cmp jns insl outsb loop sbb push xor outsl (bad) movsl mov popa popf sbb mov push iret sub das iret (bad) stos insl push jecxz ficomp les inc pop mov shrl jmp imul outsl mov sub jb stos sti stos cmpl push adc cmp cs rcl sbb push sbb and fldl2t lret aas bound movsl mov hlt adc xor (bad) xchg std inc pushl sub (bad) imul leave mov loop add mov pop cmpsl jmp insl fwait or cmpl jne ret xchg stc fisttpl bswap sub loop rorl arpl xchg rcrl in inc xchg jns add stos dec inc fiadd je scas rep pop mov cld mov mov jge enter pop call sub mov imul mov movsl push sub fnstsw adc and inc xlat sub iret (bad) insb js lds mov rclb mov mov loop and loope loopne lahf daa test jg mov enter loopne into ds mov mov fcmove rcll or push pop es or sub rorl jge dec push xor xor aas mov out and sub (bad) (bad) or cli ret cli mov pop inc sbb lret ret jbe pushf imul loop (bad) enter sbb loop pop sub push dec (bad) and adc insl push and movsl jl imul mov lcall int3 and mov mov adc xor cltd or and push ja scas cmc dec jno pop ret repz rol fsubl rolb arpl sub mov or dec jle adc out scas test mov xor daa inc cmpsb adc notb adc dec xlat (bad) dec int cltd jbe cmp movsl test cmpsb mov cld or mov jle and mov enter sbb jb jne mov loop fidivrl cmp lods inc loope xor loop fistpl mov mov out mov (bad) jnp push xlat sub ja stos fs jg adcb mov push stc lds es test fs std or jmp sub adc inc (bad) mov into cmp clc fstps push imul out jmp push in scas in inc out mov xchg mov xchg insb pop add (bad) xor ja jns cmp lret jbe dec sbb rcr dec cmp sbb pusha sbb lods cmc in dec shlb or scas insl mov mov mov push in in psrlq dec mov push rcrb cmpsl add xchg fdivr adc hlt mov jae jl jo (bad) (bad) xor push push (bad) mov push jne jb ret cmp xor shll jnp dec mov jne outsl adc out fsubr lcall push mov pop stc mov cmp mov dec or cmp sbb or sub mov cwtl sbb enter dec sub xchg ss pop sbb (bad) adc sbb mov (bad) loopne mov int3 push or enter pop mov dec xchg xor mov outsl jb adc xor adc (bad) xor add sbb stos or jae leave mov xchg dec leave (bad) xor xchg aas fstl jo fwait cs push mov (bad) js fwait push cwtl jg dec or (bad) mov or cmc ss sub pop jle xchg mov vpsubd fisubrl pop mov inc pop xchg sbb pop cs cwtl pop in stos lcall sbb and lock lahf fcomip les dec or add pop (bad) test fdiv (bad) sbb fldl insb xchg addr16 (bad) mov mov adc lods mov adc sub fwait mov fldenv cmp sbb sub imul mov xlat jb mov into or je or adc cmp bnd pusha addr16 push xchg push mov cmp xlat push push or aam std insb pop test cmpsl mov ds gs push pop push cmpl jle clc xor sbb outsl push xchg popf add xchg mov in (bad) jecxz aaa and gs mov sti jp sbb jae mov push iret jp cli xchg jne adc mov sbb inc jle jl sub add pop (bad) xor push outsl mov add mov nop pop stos test push pop inc fdivr (bad) lods add (bad) fildl call cs repnz insl cmp jno repnz mov sbb or stos adc sub (bad) rolb inc pop adc or xlat jmp cmpxchg mov xor addl sti add cmc in stos jp mov cwtl loopne mov dec xchg scas jbe fnsave or loope push repnz stc (bad) scas mov add sahf jmp pop cmp jb push or (bad) iret sbb imul adc mov xor inc cwtl push aam fisubrl mov xor cwtl (bad) fimul bound ret push sbb fisubrl push es pop jno repz mov repnz xchg out jge test cmp rolb xor jae (bad) xchg mov repz push (bad) jge mov lock in clc jo push adc hlt sub mov or pop cmc stos fs je js lods mov sub out rcll mov int3 or ja pop imul cmp jno addps outsl js das punpckldq sbb stos cmpsb add xchg push or jge rcl js mov add fldcw inc xor dec js jns adc rorl lret inc and jl lret test bound bnd sbb add sub push pop jge inc xor movsl dec mov lcall mov sbb std cmova imul jecxz inc or pop fcomps push adc push pop lods adc mov in xor mov and (bad) (bad) mov or aam ret mov nop js pop sub push out lock ffree scas push add mov xor add mov je cmpsl loope imul call icebp sub dec push xchg cmp repnz ret or int mov pop jle out jge stos inc lods adc rcll scas adc sbb jae cld das cld mov hlt push dec lock mov cld clc inc data16 dec mov cmp rcrb mov mov jp ds push jb and in test inc stos dec push aaa xchg out hlt fwait pusha stos adc and jbe fdivrs xor and xor test out jne frstor or add and rcr sbb lret xor adc mov outsl jle mov fistpl cwtl or sbb clc inc movsb (bad) (bad) mov jns lods jne sub fwait push inc dec ja cmp push push sub add pop xchg push stos push inc add and push pop push enter push pop lcall int xchg aad addl imull inc adc ds arpl mov (bad) mov mov push into push sbb std mov scas mov or lahf icebp pop stos iret jnp xchg stos lret mov xchg in call mov out (bad) inc lock sbb data16 xor ds inc mov popa push bound test push movsl bound jns or fwait jg addr16 addl int3 hlt xor popf inc fs or xor ficomp repz xchg out jno ja or in lret adc and push and pop gs or adc xor add into xor or jns shlb sbb xchg into mov iret or xor cmp and cmpsb ret cmpl pop stc lds mov pop btr lahf jno pop mov push pop cmp (bad) mov out ja xchg push mov jecxz sub xchg std cmp jno ffreep stos js lods jge mov insl add fwait xor call mov pop icebp pop scas mov xorl clc (bad) mov push ror arpl xchg orl pop mov popa jecxz sub mov or pop inc dec inc mov js out and jne and imul int dec dec int3 mov xchg daa sarb and dec clc test fdivrp inc jp or add insb add sahf fnstsw scas fistl jecxz cs stc inc mov cmc cwtl cmp push xor xor xchg mov adc rclb cmc inc in call mov mov or (bad) movsl cmp je dec push scas subl adc stos jb arpl adc popa jl xchg sbb lret sub stc xor lock xchg adc mov push in rcrb push add mov out arpl sub pop add and and inc cmp mov add or mov mov ljmp xchg nop imul cmp out cltd mov and xorl pshufw test in inc add inc out add jne (bad) ja,pn stos sbb add sub inc enter pop xor pop xchg ds rorb clc lahf mov add into sub cmpsb cmp test test xchg popa push xchg xchg and movsb dec xchg pusha or fcompl dec jbe inc cmp fsub pop sahf stos sub lock and aad cmp popf outsb outsb iret movsb arpl arpl ja ljmp in movsl lahf scas aaa stos js add mov jbe (bad) mov mov dec and es icebp mov movsl stos out scas sahf xchg cmpsb movsl jno repz push ja adc stos jb pusha aaa test xchg iret cmpsb (bad) jmp push cmpsl add daa xchg lods fdivl jp mov jecxz sub mov mov xor mov add sub into test cs jmp push ljmp jge loop sub (bad) repz push mov xor jbe lods stos mov sarl xor sub or inc push test dec add mov pop or push loop das in rcl mov pushf or adc jbe aas mov int3 cmpsb lcall out cmpsb ljmp cmp and mov cs mov loop ret pop ret mov (bad) fcoms push mov aam shl movsb push and or daa sbb xlat cmp push cmp (bad) mov pop mov loop cmp inc jecxz adc or add addr16 add sbb cmp aam cli std pushf xchg mov mov insb nop incb bound rcrb pop dec fsubl mov sbb dec mov push fist inc lret jg out inc or andl ja cli (bad) mov pop leave loopne push aaa loop mov insb xchg in inc jbe imul stos aas mov xchg xchg push in pop xchg push cmp cltd xchg daa xchg push or pop out int3 adc subps pop jno (bad) lret inc (bad) cwtl adc out inc repnz pop push push xchg jp mov mov hlt cmp je push loopne cmp cli stos mov xor js xchg lcall out mov or xchg sbb lret dec sub (bad) mov or inc mov mov dec pop mov inc mov clc sbb mov adc mov and mov jnp sbb push pop jne insb pop and and xchg pop add sbb nop out xor stos repz jp sub imul xchg xor add pop dec out repz push pushf rcl dec xor dec xlat mov mov adc ja push imul aaa xchg sbb repnz test pusha mov mov pop xchg jb ret cmpsl mov into jg inc xchg lods fs sbb pop sub jmp cmc and xchg mov jl int stos add add jp orl nop mov (bad) inc je add int mov and aad fnstenv test imul jle fsubrs movsl sbbl xchg xor mov test dec lcall jne xor (bad) out lahf or out and cmp push cmp enter jmp mov bound adc sub sar or jmp xchg push fadd adc lock pop push xlat clc sub add jmp xchg adc loopne flds pop (bad) cli lcall mov adc dec das mov jne js lods aad fiadd cmp rcrl xorl stc add aad int3 or xor es nop (bad) jl cmc insl mov fcoml mov sbb mov stc dec lret ss in mov movsl push pop push dec or test pop mov int pop sti ljmp icebp pop mov sbb fidivr pop call adc or add sbb shrb or push pop or and or popa dec mov iret iret ss test or pop mov sub jmp adc cmp pop addr16 (bad) in rol in inc aad sub roll xlat inc mov int3 adc sbb add mov into mov xlat fstl xor cltd xor jb xchg insb xchg aam es push mov std fcoml outsl (bad) adc jp dec mov adc dec mov pushf aas pop jle divb and addl scas clc jo push sahf out je cwtl xchg mov enter test pop loopne mov aam pop test loopne sbb (bad) inc pop mov pop in and lods repz add xchg xchg iret xor test lock int3 sub push cmpsl rol (bad) lcall mov icebp dec loopne rcrb icebp insl sti in cmp scas mov jo push arpl and mov mov xchg call mov xor jmp lods je outsb xor lcall xor inc adc xchg in xchg sbbl (bad) sbb mov pushf leave mov jmp cld fs es push mov or ljmp in pop lods and idivl out xlat (bad) and and pop gs je (bad) test (bad) jo repnz enter outsb pop adc mov add outsb xor es xchg pop or nop int3 into fiadd sti mov stos cmp cli out jge shll aad insl cmp dec lret pushf adc jbe out js dec inc mov mov xor fist fmuls clc mov adcb test popf mov inc dec out mov adc mov data16 inc jbe xchg lahf fisubr mov pop xor sub enter mov add enter scas aas xchg or push jbe mov jbe sub add ljmp (bad) jecxz pop pop scas popf test push mov mov (bad) and push into lret lods push fbld insb xchg insl cs sbb lret pop repz mov call fwait mov daa notb scas sub and (bad) iret cs fldenv jge inc (bad) sbb shrl push sbb fs popa in xchg lds mov mov and aad in aaa fs dec mov (bad) mov and dec rolb sub jo sbb pop es lods sbb cmpsb call push ret das dec add les notl call mov mov (bad) out sbb stc sbb dec jge jg test pop mov mov sbb xor cmp aas fmul inc pop outsl sub jae mov inc and cmp test add call dec push (bad) movsl lcall dec jb cld add xlat pop mov stc jg mov daa adc pop scas inc outsl xchg cwtl aas pop cmpsl mov es (bad) (bad) dec mov add into ss jb in adc arpl in pop jmp mov jnp xchg and aam jns sub xchg fdivrl test out js arpl orl stos adc rcrl add sub cmc lods aaa rol (bad) mov stc test mov mov ret cmp (bad) inc mov push mov dec jl mov (bad) push test dec jbe (bad) push push sub fisttp nop ret fdivrs aas lret sbb in inc mov repz into push mov cwtl sub jbe ja ja pushf insl jg xchg or pop fnstsw xor mov mov and or divb int3 jecxz sbb or mov jl insb out cmp jecxz cmpsb pop les jmp xor pop mov (bad) iret jmp test inc sbb ds mov je lcall push xchg cwtl push js and mov xchg enter xor cmpsl adc mov fstpt add cmp insb cmpsb adc sahf addl lcall fisub je ss lods pop or pusha and ret pop addl xchg jae xor inc lods push jb jg mov xchg add mov mov dec cmp shll negb cmp adc xor nop cmpsb fimull les inc test mov jl dec aam (bad) cli adc pop ret mov sbb push pop sub add clc add test stc in scas ds xchg idivb (bad) lret notb mov sbb popa aas mov sub repnz xlat xchg and xchg movb rcrl repnz std push fnop repnz test mov sub xchg mov mov addl imull sahf cmpsl adc mov lret push pop dec xorl test mov rclb cltd inc dec insl dec pop mov sbb mov jge mov repnz mov inc adcl push out mov adc adc into (bad) push addb aam pop test cmp cmp mov xchg add pop fiadd push sbb mov mov push xchg xor jge mov mov arpl adc xchg dec loopne mov loopne or cmp xchg mov bound dec mov mov pop ja ljmp push fyl2xp1 inc push cmp mov incl dec or addr16 xchg js movsl push mov test gs js push push nop dec outsb inc xchg jl daa (bad) inc movsl or or sbb jno add mov stc fdivl stos cli fimul ja idivb popa mov jno pop pusha mov cbtw repnz movsb sub dec aaa xlat lods pop cmp lret mov fidivrl push outsl int3 (bad) dec das sbb shrb cmp xor ja imul sbb in lahf mov jbe inc insl push cmp adc test jecxz (bad) data16 xor and outsl dec mov mov lahf push xchg lds fwait aad imul stc adc sbb adc xor mov push jge push outsb cld gs cmp or dec aad push rorb xlat xor inc test jecxz (bad) lcall lock and pop retw push adc add add jo add jmp std push xor cltd (bad) sub scas mov push add rcrl sub out inc scas adc ret adc lahf lcall jp mov shrl and push sub fcmovne imulb rolb cmp (bad) sub lret jbe add mov and mov ret mov test and mov ss jo,pt imul inc or push stc mov out cmp lcall rcrb dec leave pop enter push adc cmp data16 movsl cld mov lcall mov xchg mov or and pop leave jp dec repnz insb rcrl in sbb inc sbb (bad) adc in adc insb aas cltd bound sub out cmp sub mov mov sub insl (bad) jo fldcw push imull sahf inc push push pushw sub and and mov mov mov inc jno pushf mov data16 data16 sub roll clc (bad) adc stc popa fs std ss insl push rcrl sub xchg test aas fmulp jmp insl add ljmp add loope mov bound (bad) jge sub cmp sbb inc sub dec jbe or sub lcall mov pop jo jns or xor or shrl mulb (bad) sub mov fstpt adc ljmp js dec mov dec imul xchg push cmpsb stos cmp sbb int xchg jno decl jb (bad) and icebp lods (bad) and ficoml (bad) scas pop mov pusha mov xchg (bad) add out cmp cwtl cmpsb (bad) jae roll int push lock scas divl adc clc pusha dec push push or xchg cltd imul cwtl adc daa imul leave or push pop cmp (bad) mov or push jp cwtl movsb and and aam inc lret sbb mov ja mov adc adc sub stos xor pusha imul cld ja hlt push (bad) loope push rcr in bound cmp out jo test fsubrp inc (bad) jno lock bound mov sbbb push rcrb jge pop lret pop shl pop pushf inc (bad) outsb out idivb xchg lods loope inc rolb int jmp xor lret ljmp sbb aaa in insl lret std adc sbb addb jb sbb insl in jns push in in inc test in imul fldl add (bad) leave mov stos mov lret sub imul cs out or subl or lods (bad) xor inc xor push jmp sti bound fisub and cmp lahf in cs add push loope pusha jecxz out jmp mov push mov shrl inc and add mov nop mov test icebp enter imul mov pop xchg pop (bad) (bad) lret pop push movsb dec xchg std adc mov mov pop mov mov cmp pop mov (bad) mov daa xchg jp add pop add or inc sub mov (bad) dec pop rcrl xor popf daa xchg call bound or lret jg inc pushf lds sub add dec jle inc jp mov xlat pop pop mov dec int3 pushf pop or inc jl inc sub push das mov mov xchg jl in aas sub dec hlt jb dec or fscale add xchg fs loope bswap outsl addr16 rclb xchg cwtl jecxz mov (bad) loop std out sarb lea xchg jns cmpsb mov (bad) mov andb xchg fisub divl shlb adc jne xor cmp pop add insb das mov fnstsw pushf pop dec dec mov inc je (bad) aad xchg sub pop mov cmp inc gs jnp adcb jle (bad) mov and cmp (bad) pushf mov sub negl scas enter pop imulb jmp push push sub xchg loope sbb cmpsb mov rcrb mov test lret test sub and cltd and repz mov xor out jle fsubr pushf int3 and xchg mov das ds int dec rol out jo adc push pop pop inc ret lock aad testl inc mov jbe popf push add pop add inc mov push jg jnp and ja mov je and aas cmpl je aaa addr16 sub xor or stos or sbb mov jp adc js in rclb inc call inc mov or cmp lock into (bad) dec mov arpl cwtl push dec inc das ds outsl das add dec jns inc xchg cld xor mov sbb in shl jecxz jle fstpl mov sbb add inc or sbb cmp xor test add outsb mov inc dec arpl fldenv jo mov leave lods popa (bad) das sbb test inc xor sbb sub inc sub mov addr16 xchg add and (bad) cmc js push mov dec jo mov mov xor sbb add cmpsb lret in push mov enter mov sbbb jecxz jecxz (bad) stc shrl or jno add xchg cmp shr inc ja loope movsb fidivl dec push xor xor fs insl inc xchg and scas (bad) sarb lcall pop lret dec sub xlat add jle fsub mov fdivrl stc mov pop pop sub dec iret js lea mov jbe pop sub push cld incl cmc imul and xchg shrb mov xchg fsubl dec push sub mov inc mov mov xor pop js push push int aam mov pop jbe pop push pushf ret popa aad cltd sub shlb stos push dec pop movq xchg pop inc adc inc insl imul cli fstpl xchg xchg ljmp cltd jl sub dec cltd jb ljmp push popa data16 ret add jae insl test popa jne test fist loop es test pushl mov pop das cld cmpl fldl lret sbb lcall lods in mov (bad) mov inc aad call pusha pusha (bad) push mov dec pop xor inc mov and add xchg mov sub jb ja imul xchg mov xchg xchg int test int pushf push outsl popa push inc test je fadds fidivl gs int3 push cwtl shr aas dec sbb data16 lret cmp cmc movsl mov mov imul sahf (bad) jge push rcr stos les adc out clc pop xchg out xor mov daa sub (bad) ljmp add mov fwait mov enter mov push sbb ficomp cltd dec jmp (bad) adc push jnp hlt cwtl cmp xor outsb xor jns popa inc add cltd inc mov fst inc xchg rol jno bound divb pop fstp cmp popa dec clc push jno jmp add cmp cmpsb stos nop in xchg jno (bad) xchg lcall test lock dec (bad) mov loop push lods pop dec push loope mov push call cmpsb pushl pop das mov push jg mov frstor (bad) enter enter adc pop and fwait fs mov push mov cmpsl adc scas dec dec push push (bad) lcall dec inc add push fnstcw int test fwait add fbstp sub stc addr16 shlb sarb jns in divl rcll aad pushf xchg jb imul aad aas adc add sbbl mov pop mov push jae jne,pt jbe cmp shrb mov add sbb or das (bad) shl push test mov call mov cmpsb jp cmpsb sub ficom sti jmp stos push daa jle sbb xor sarl mov fcompl jp pop push push xchg roll mov orl test mov sbb mov popa or xchg faddl lahf pop scas andl addr16 popf sbb xchg xchg dec adc fcmove sub ja add icebp repnz ret std and inc push roll push dec clc nop pop push mov ljmp inc add add xchg stos mov movsb lahf ret aam insl xchg adc sbb mov ret and mul or xchg cmp jl pop daa push cmp arpl or sbb sti test dec sub aad fimull add mov fwait jg in fadd mov push lcall inc notl out sbb push insl rorl lahf mov imul xor sbb je mov adcb dec (bad) sti or addr16 arpl xchg jle aaa in push cs enter mov imul sbb mulb push (bad) les mov xor xchg testl bound or mov lock cmpsb pop xorl lods cs push sti xlat popa dec mov add hlt into jae lods sbb loope mov fist out imul je push dec mov aad mov lret adc aaa mov enter mov lret mov add push fistpll (bad) mov clc ss jmp jecxz aad in pop stc inc lods push imul xorl ljmp aaa add pop xchg jg lods lcall subl cmp clc inc in sub aad sbb xchg aad jns mov les dec imul jno call in sbb aad lods cmc movsl mov popf mov sub sahf fwait insb fsubrl movsb cmp loopne add jl mov hlt popa adc or xchg int3 lcall outsb es fisttpl mov es xchg (bad) xor and ljmp lods test adc jo (bad) ja push adc bound dec repnz ret movsl add mov mov mov mov shll insb into dec test les cmp sbb ret scas enter dec outsb ret loope addr16 xor mov jmp icebp insb scas rclb gs es xchg ljmp fisubr jno adc aad pop mov sti pop adc push (bad) hlt hlt lds dec xchg add xor and loopne mov cmp dec int3 add adc lahf sub xor cmp or (bad) pop cmp mov jo mov aad or mov ds xor xlat sbb jns repz out lret jae repnz daa (bad) cmp inc dec add cmp sbb enter jmp popa out and lods pop loopne cmc and cmpl or and mov or adc outsl jecxz lahf jge inc pop cmpsl jecxz stos jp cmp jne rcr popa gs mov xor sarb pmaxsw mov lahf lahf mov cmp sub fidivl shrl add pop movsb xchg lret sub out jp stc push hlt fist test inc mov fwait push xorl (bad) repz cs out add or add js jb adc ret push pop ret xchg out cmp jmpw jno out roll inc adc cmpsb push sbb or jp inc aaa pop sub xchg (bad) mov xchg popa out es and xchg pop or into cmp jno adc mulb inc cwtl lock (bad) outsl jnp sbb loope xor leave movsb fbstp dec mov outsl andl (bad) gs push mov add out jbe mov push int3 leave push leave loop push or push sub in mov ljmp adc mov mov hlt mov push and lods hlt add xchg mov mov outsl dec dec sbb sub inc pop les cmc pop (bad) int3 cmp cli push repz je cmp push out orl sarl sub aas cmc push imul mov mov pop jle fimull pop pop add dec add xchg xor test (bad) or pushf adc add shl jl push jecxz popf inc xor into jmp movsb jno sbb rorb xor and dec push fwait mov push divb sbb sbb inc sub sbb sub fstl or push cmp jns pop dec int3 adc stos mov icebp add shrl iret cli push xor cmp movsb jl cmpsb or pop enter mov xchg inc sti ss test xor jl sbbl xor repnz sub (bad) shl xchg lret pop cmc aad imul cmp loope mov loopne mov jnp sub xor inc loope aaa jge out xor test test inc scas out cmp add pop cwtl jns scas and mov or rcrb dec hlt inc (bad) in (bad) cmpsl lock adc and out popf jmp jecxz out dec test (bad) mov das inc dec xor and add cli (bad) push or cltd adc xor fimull xor mov icebp scas ret push add cmp ror popa mov jmp movhlps cs mov jno fistpl dec fcmovb dec (bad) cld in leave dec lods mov or aas xchg loop stos cmp popf push fdivrl jns fwait inc mov push mov frstor lea pop xor pop js inc sahf leave cmp shl aam ret jb pop jge (bad) mov cmp xorl adc add sahf das cltd push xchg jb dec lcall (bad) test out data16 es lock loop rcrb movsb mov xor mov test or es mov sub sahf jmp push push in mov xor mov int aaa xor xchg ds shrb (bad) stos dec outsl je xlat push lret xlat jmp adc add or outsb sbb sti clc inc jbe inc inc (bad) cmp push frstor or add jmp (bad) ret dec xlat cltd xor movsb repz cld cmc bound pop pop and and cmp push stc out push cmpsl mov aas inc in sti aam (bad) fstps adc xchg mov enter pop mov (bad) push (bad) pusha sub dec xor xor xchg jp popf or (bad) jo jns (bad) and out (bad) push pop push pop popf repnz std pop fiaddl movsl cmp pop mov or jne xchg or jns call (bad) push int jmp out nop imul jp addr16 cmc xor lds mov pop mov lds mov or push cmp ljmp leave or jp inc and pop cmc (bad) negb mov (bad) ret or insb or out divl sbb pop pop pop jne xchg (bad) xor add jl insb sbb inc (bad) in cmp int3 pop popf sbb sub mov bound (bad) cmpsb test sbb sbb es andl push es clc mov pop mov ljmp and sub mov jne addr16 xchg test repnz pop (bad) and mov fs aaa ja frndint cwtl fistp cmp test pop jle cltd cwtl jmp testl jp in sbb jnp adc jecxz inc xchg pop add int3 pop sbb rol outsl sub por hlt loop movsb mov sbb push jns scas xchg das sar xchg je insb enter fidiv icebp pop cld enter xor and cmp and push loopne xor push cli push movsb jl inc or inc out ds hlt dec and mov inc sbb sub xor (bad) sbb adc adc or xor aas mov rorb or fistp inc push fstpl xchg cltd mov xchg jge fimull dec add xor test out mov inc ret or sub dec jmp (bad) xor daa xchg fisub sub fildll lea mov inc neg sub (bad) fist arpl push out movsl xchg adc mov ds ljmp or popa pushf mov pop pusha stos adc call mov call sub mov popa loopne mov lods int3 ljmp lds jo jecxz sub mov orb cmp cwtl pop mov and dec out into lock (bad) adc lret jnp icebp stos xor rclb mov cmp stos push mov pop cmp jb dec push loopne jns inc popa push mov sub or mov cmp mov cmp aas rorl ljmp xchg jae enter out push js mov cmp stos pusha in icebp push mov xor cmpsl pop stos movsb push dec adc arpl insl iret cltd leave mov pop mov outsl add imul hlt mov pop sbb mov adc mov sbb inc sbb aam push fbld mov mov jbe and stc idivl lcall lea jge fwait pop hlt push adc xor pusha cmp pusha arpl outsb and mov int3 les and int adc lcall and movsl lods loop inc cwtl jle push leave loop mov xchg out inc in repz push dec mov jns leave inc jg pushf fsub adc jmp mov or enter out xor enter lods out jae xlat add ljmp (bad) jae and cld and inc push stc dec les imul dec jo lret and (bad) incb xchg mov dec lahf push dec pop sbb mov mov fld std push dec dec adc inc push aaa push xchg in mov pop xchg mov aam ja ret pop or mov rcl push lods sbb mov pop cmpsb adc inc cltd xchg jns into mov add das lahf ljmp js mov (bad) je mov fisttpl popa jp mov bound arpl lods pop mov mov inc push jp jmp mov add add lods sbb leave inc xchg mov jno mov mov dec nop inc sbb add pop cmp outsb nop push mov js pop aad xchg xchg test push mov mov push into icebp movsl sub imul pusha lahf push lods cmc xchg inc int xor lods xchg xor and mov sub sti lea repnz xchg mov pop adc mov (bad) idivb loope pop repnz imul fwait mov (bad) (bad) mov int pop fnop jne push fnop repz shll pushf sbb push push ret fnsave leave sarb jmp sbb (bad) dec or mov ljmp jae loop hlt in mov stc popa xor or add xchg das mov add push xlat dec mov bound push mov sarb cmp (bad) dec jle sti and jg aaa test pop cmp xor sbb test mov repz imul or in and aaa mov sub into iret xor dec in mov (bad) cli in push stc adc xor dec add inc nop (bad) adc lret jg mov ss test sbb imul pop xor mov pusha inc addb mov mov or insb lret sub lock mov mov movsb (bad) xor enter xchg inc dec fmul sbb call dec fldcw repz xchg sbb jg jno (bad) outsl sbb stc push mov ficomp into in fldl jecxz sbb add sbb aam push mov sub adc loopnew sub xor jb and mov pop pop outsl test cmpsl mov jmp cmp pop and in push repnz push popa add push ljmp sbb push mov mov sti jmp push xchg cmc push insb sahf in cld ficom ror pop stc sbb pop mov bound stc into push xchg insl sbb std or (bad) cmpsb popf inc jecxz inc inc sub jnp lss push sbb sub test call add mov pop or fwait mov cmpsl pop sub jp mov dec mov push mov xor and hlt int3 das (bad) mov enter call inc data16 stos sub add stc call sbbb jge jp insb xor cmp iret mov cmpsb test or inc negb jg in scas sub mov mov adc add enter xchg sbb std mov mov inc mov lods and sub xchg adc (bad) stos xor mov jnp aaa mov dec and ss imulb fs enter cmp cmp mov loop fdivrl adc mov or mov adc adcb sahf mov jle jne add mov jmp pushf iret push (bad) loop adc movsl int and test aam pop pop sbb mov data16 cwtl mov dec lea hlt or in cmp clc xorl ret in or call enter cltd js fucomp test out xor or push xchg inc add movsl in subl lea bound xchg push push andl xor jae call xchg rorl stc shll jmp ss popf adc jbe test shrb ret push xchg dec mov aam movsl leave loope xchg int3 sahf aaa inc and mov out cmpsl adcl into sub dec adc dec jno mov push ss loop push xor loopne mov stos movsl into fcmovne sti iret lods mov loopne xchg in cwtl enter enter (bad) lods dec fldz push test inc (bad) xor movsb call cmp sub mov (bad) adc int adc dec out pop repz adc lods xor popa add lock pop loop pushf inc adc (bad) fcomps imul add lock mov loope mov icebp inc add or lcall pop repz adc inc add lock cld mov push mov fs push pop in andl adc sbb je and xchg or fimull sbb jbe lahf nop sbb lahf stos leave (bad) inc adc shrl pop pop ja xchg pop movsl test pop add test dec (bad) or mov out repnz pop addr16 mov mov pushf or pop and fsubrl ds (bad) mov mov rclb add xchg loopne or insb mov add inc jmp bound lock fildll mov cmc xchg mov cmpsl fiaddl pop or push jp test lret pop bound arpl ljmp mov sti jge addr16 mov sbb mov jg pushf movsb cmp xor dec sbb scas sub add pop gs jb jg aad mov clc jge test not into dec dec lods xlat into jmp mov mov mov add rorl jo xchg and add mov xor mov sub out fistpl inc cmp xor xchg out jns outsl dec or xor cmp push push sahf out or dec lea cmc enter xor negb mov clc fsubs pop lea (bad) cmp bound notb mov push cld rorb mov cs dec adc or (bad) and (bad) outsb cmp cmp xor mov mov (bad) (bad) dec adc xor mov popl xchg cmc lcall mov cli lea push loopne adc adc jmp insl mov lret jne mov pop hlt add mov xor sub sahf adc repnz ja xor and sbb and lods stos sti mov imul jae jns movsb test mov ficompl (bad) xor ret mov xchg je mov sbb push movsb jecxz ljmp mov mov pushf lods das add add test ds dec adc sahf lret adc push cmp and inc fistpl inc rcll cmp ret repz mov xchg xchg adc popa shrb clc jns cltd insb cld mov pushf test cwtl or ja insl mov (bad) xor sub xor adcl (bad) icebp dec jns adc xor popa mov push roll shrl dec and idivb mov sub insb inc (bad) jmp pop decb push push rorb rclb or out cmp xchg sub imul adc pop dec cmp add fcomi and call rorl mov xor dec dec ss adc jne xor ss lret dec rorl add push (bad) jb adc add jne shll push cmpl push scas push ret cld push bound jne mov scas pusha push bound adc inc mov pushf mov or lea int push jmp outsb push ss or cmpsl js push loopne inc xor ror dec les push repnz mov xchg popa mov jge push es (bad) int3 dec cmpsl or jno mov add and jp jb addr16 ss add xor aaa lock lahf adc ret sub mov push add and std je insb dec cmc test inc int3 and xor mov cmp aas mov hlt sahf repnz and or test add js push dec mov add push addl mov aaa iret xchg dec (bad) mov enter jp add and adc and inc jnp lock lcall or imul gs cmc pop fs sbb mov ret xchg je push enter inc push les xchg icebp ficompl roll push dec sbbl inc icebp in test mov cs dec jp ja dec popa pop out leave sbb mov mov sub push cmp dec rorb popf std and or dec adc lds pop pop jbe add jle adc sub hlt sarb (bad) out xchg lahf jle nop out out enter jns enter cmp hlt mov add stc inc ror icebp iret xor test lret xor pop adc adc jl and xorb (bad) mov rcll popa sbbl mov mov sbb dec mov movl clc mov test leave outsl mov jp mov mov xor fiaddl pop pop mov dec or mov pop mov jbe scas push fsubs push mov lods mov int3 push add adc outsl pop and jbe popf movsb xchg sbb sub adc and sarl (bad) lret pop push xchg movsb mov sbb aad aaa stos dec (bad) dec xor leave (bad) test dec stc jecxz test sbb enter xor int push adc clc stc jo imul sbb enter dec aaa adcb test jg lret jb push gs test int adc ljmp jg inc in cwtl aam ja inc lret sbb loopne push xchg jl (bad) xor inc cwtl mov pusha add (bad) xchg inc inc or xchg inc pop jle daa pop pop icebp push mov xchg add cmp repnz daa stos fs jl jl jo cmpsb add or sub lock inc int into movsl sti fistpll fildl cmp mov pop mov mov out stos je jnp inc xor mov popa or inc test xchg pop mov es insb data16 lds shr jle gs mov xor xchg jae rcrl and cmp out push cld and push mov gs les add jns xchg lds fcoml and outsl add xchg jnp fwait ret mov les mov pop adc mov xchg fildll xchg and cmp arpl sbb int mov sarl cmp sbb sub out sub jg or les mov dec rolb movsl lcall dec leave mov adc sub lret lcall lret pop fild inc in or mov lahf in shr icebp jno and pop push add push test insl aad mov push int3 mov or movsl cwtl popa stos scas adc or pushf std or leave jb push pop orl sub std js xlat xor ret popa or (bad) jmp or aam daa cmp jecxz sub jnp call popa mov inc push aaa dec (bad) (bad) lret add jo push ds aaa pop pop test pop in andl xchg xchg ljmp cltd cwtl sbb jecxz mov adc fildl sub aam mov into adc negl sahf scas cmpl dec pushf inc xor std clc push adc scas mov hlt (bad) notl fdivl pop shl jg mov add ror sbb mov mov (bad) (bad) outsb outsl (bad) xchg (bad) xor push rorl lea inc das je es lods jne jecxz out xchg cs pushf xor sbb jbe push mov push inc adc lods mov xor call mov push pop dec xor push mov sbb pop xchg mov cmpsl scas nop lds add addr16 add mov addr16 xchg mov cmp mov adc ret clc or (bad) lret xchg push mov in aas idiv hlt xor jp fisubrl notb dec xchg xor test movsb cltd fist cld roll adc cmc test push sti cltd cld or aad in jb cmpsl push rclb test cmp jg sub mov shr sub iret push sbb xchg cmp jnp dec aam insb cmp fistp nop or jecxz int3 sub mov es mov cs test add outsl jne,pn or adc pop mov je leave and idiv sub test jne loop mov aas shrb aad fstpt push dec and fdivs and sarl movsl mov (bad) mov sub cmp out lret mov por sti call imul jnp xor fs mov sub jl pop movsl cmpsl push cmp or sti push loop scas push cmp jmp insl bt stos dec adc dec cmp sub rclb into add and inc (bad) fiadd xchg push jb stos fstl sbb sbb cltd pop out pop inc enter add lea xor js sbb bound mov xchg decl shrb jae add in push stc dec pop pop xchg xchg in and movsb int3 arpl xor lahf push popa xor add mov mov add repnz pop jmp arpl int enter jecxz mov leave int (bad) lret sahf mov jge mov jle adc pop hlt jb inc cmp cmp (bad) in or testl pop xor mov pusha leave add inc fwait rorl sub push in (bad) cmp lcall mov punpckldq test (bad) mov push mov sub cld (bad) jbe in mov jnp mov rcr rcll jns and and (bad) jp mov test ljmp mov pop pop out lcall lods mov lcall xchg push xlat jae lods mov xchg fistpl inc fimull mov icebp popf inc fidivl xchg in arpl dec dec sbb cmp lea sbb mov cmovno outsl dec mov sub (bad) xor test mov fnsave sbbb fldl jmp in sbb mov push mov movsb lret or mov push bound fdivrs inc inc xor jne (bad) sahf aad fwait sub nop add mov mov insl shrl in mulb mov scas fdivr push cmp xchg push enter pop gs (bad) mov or xor xor pop insb cmp (bad) ja pop fidivrl nop popa push inc test in jle cli sbb repz hlt leave pop add sub pop lods out mov das and (bad) es addr16 mov xor cmpsl xor dec xor sbb push in push jmp sbb out and adc ret ss aad pop out shr or std mov sarb pop cmc fsubl (bad) popf stos xlat outsb pop mov jno dec scas jmp jmp das mov inc imul shrb inc test sub nop add mov sbb mov je outsb mov mov lret adc test aas xchg stos add and push xchg pop fdivrl jae jp cltd arpl fnop sbbl adc push push mov ljmp stc sbb xchg pop ds and dec lahf fs aam mov lret mov gs movsl jp movsb (bad) rorl jne hlt mov inc (bad) stos dec sahf out xchg mov mov rolb lret mov movsb es out es pop and push (bad) iret adc xchg scas mov sbb repz adc dec outsl sub ljmp xchg cwtl mov cmpsb mov rolb fwait jbe pop xchg jecxz shll sbb xchg fwait shll scas jecxz ss jnp xchg (bad) push ds aad or add sbb or mov les jae dec fidivrl pusha xor into insb and hlt fistp adc iret dec fcom jmp pop (bad) in (bad) jo cmpl and (bad) mov leave inc aaa loopne mov mov xor je fistpll popf cmpb in cmpsl xchg lcall in das into adc (bad) je loop fcompl ffreep xor or jno sbb xchg pop data16 jo (bad) ss push xchg ret jge push imul push jmp aad mov pop pop iret idivb rcrl pop fisttpl imul pop loope inc mov xor iret fsubrl inc popf scas jb pop fwait jl idiv xor int3 (bad) test lret mov inc mov lds xor dec inc sub jo dec push jo aam jge mov push fstpl out popa mov cmpsb or fcompl into loopne and clc in cs into mov xchg aaa push xlat (bad) inc movsb push push scas sub xchg xor sbb xchg in je popa xlat scas sbb (bad) push sub jmp push inc xor sahf cmpsb sub iret mov or lcall fbld mov push sub (bad) mov sbb aas xchg lcall sub adc movsl clc or (bad) mov jge (bad) xchg pop pop pusha popf divl jg daa js call mov jno (bad) mov xchg xchg rorl notb mov nop cwtl lods dec jno sub jo repz push js iret je adc xchg pop (bad) data16 jecxz ja pop sbb mov cmc scas out jmp je jbe sub mov ss data16 test aad cmpsb mov das or test mov ja frstor bound les incb jae adc add mov xchg xchg imul int pushf sbb and cld int dec out pop mov ret ds out hlt adc inc xor out mov lock mov out imul or aas ret sub xor xor xor mov push sahf xlat add fwait outsl cwtl cmp inc daa mov push aam jae sbb and push xchg in fucomi lret or arpl jge or int mov jmp pop shlb or les outsb xchg dec push mov mov and jge (bad) lea cs xchg roll pop fisubrl or fmul lcall jnp sbb ret leave jbe aas lcall push or inc out cld les sbb addr16 (bad) sbb ror stc fucomp xor stos push insl cmp popa jecxz mov inc stc or int jle xchg inc mov enter repnz dec cltd jl stc mov call je (bad) in xchg cmp or shll or pusha les xor xchg lret sbb lds test les push jge shll ds lods sbb test mov jle jle jae mov popa mov mov or jle sub pop pop popw rcr lret sub jnp cmp and movsl and mov arpl or aad dec (bad) lahf sub fcmovnbe leave daa inc fsts jo push shlb sbb sbb (bad) lcall pop inc adcl fs outsl (bad) push and adc pop adc outsb in arpl stc outsl pop pop xchg mov out sbb push jmp xchg out mov ljmp sbb jae andl sub pushf cld push mov (bad) xor addr16 imul jnp in jg lds jne das mov and imul xchg mov aaa mov data16 jb pop (bad) mov xchg mov lcall cmp cmp adc xor pop (bad) rolb sub lods cltd sub fisttpl cs hlt adc sbb jns sti and mov mov aaa inc jmp push cwtl outsl adc sti cmpsl push les push mov cld daa loopne mov or loope jle or inc fs and xor ds imul jecxz cmp adc leave cmp mov aaa push and sbb rorb icebp in loope fmull jg and cli f2xm1 aad iret mov or or lods aam sbbb pop cli cld mov jo mov and sti lret fdivr cmp jb fidiv xor pusha xchg jecxz mov jmp xor mov insb ficompl mov cmp mov adc mov jae or and mov icebp icebp adc (bad) xor pop sbb out adc dec and dec (bad) aam ret lods retw cwtl shrb dec gs pop mov jmp out sbb mov cli mov jmp mov popa aas cmp lret ja push add mov xchg insl std cmp testl test fwait mov sbb cld loope inc mov popf sbb mov ret pop adc cli xor movsl inc jmp jb test mov je test out (bad) xlat jg call notl and loope xor sub mov ret sahf push mov test sub push mov repnz and dec imul (bad) mov add popa pop aas leave rcrl pop inc call dec insb dec push jae push fcompl lock lods add or lret mov arpl in lods negb sarl je and jns orb scas pop int3 and and mov cwtl mov insl sub jge xchg lods lret mov xchg shll mov mov xchg (bad) pop hlt ljmp loope (bad) sub push hlt xchg add loop mov lock adc dec maskmovq idivl add push fidiv push mov jecxz push aas repz movsb sbb ds pop dec xchg aad sbb sub cmp mov lahf or imul (bad) popa push dec xlat (bad) sub add mov push (bad) xor stc lds rorb mov sbb xor push (bad) into add xor shl arpl mov jmp hlt lods or aam add adc mov sub sbb xchg xchg pop andl ret mov push nop out or and jg jge (bad) xor inc test gs outsb int inc aad sbb xchg sbb out dec and mulb movsb std jle lret push mov icebp xchg (bad) mov test nop fist (bad) stc imull lret shll mulb iret in cmp push ljmp mov mov xchg js cmp pop mov mov psubusb mov push inc pusha xchg adc push xchg jecxz or (bad) jae push jmp jmp outsl inc fsubrl xor popf adc (bad) xchg out addr16 shrb pusha cwtl and insl jmp ret adc push ds movl jno jl jne xchg fwait and stos out xor jg jg xchg arpl pop stos xor mov cmp cmc xchg jecxz (bad) pop notl in loop fldenv mov (bad) pop in sub pop mov mov mov adc lahf popf into xchg dec fbld dec nop (bad) push out add inc ret insb test push pop xlat sub cli mov lds cmpb jle push adc ret out jno jl push jae lock mov sub fcmovnu xor aas mov xor cs loope inc pop rcrl addb push inc (bad) rolb les or and cwtl cmc push push pop xchg sub and mov int3 mov (bad) adc outsl test sub mov inc sbb xchg cmpsl sti lahf das sub and mov xchg sarl pop dec icebp dec pusha out jge or (bad) movlps or cmpsl xor add (bad) jb mov das add inc dec push mov jno jle lea repnz inc lods jp pop hlt add jg (bad) bound sub xchg ficom push mov add inc xlat out into pop aad das sub mov xchg movsw sbb es xor data16 loop push clc add shrl cmp and jge pop push je (bad) ret adc pop add jp scas dec xchg scas adc mov out xchg cmp dec idiv push scas mov dec pop stos gs xchg mov sub movl in bnd in das dec (bad) pop sub xor int aaa (bad) (bad) das mov fcomip cmp xor mov cwtl jne sbb aas lahf imull cli mov mov xor test pop fmull or mov dec or xor lds ja (bad) jmp nop das stc (bad) xchg push aad mov sub mov jmp push push xchg push js xor mov xor pop pop aam mov ja int3 mov pop or leave movsb testb push jbe and pop cmc mov pop lods stos push out jge aas ljmp mov jg gs pop imul fcmovu push mov test xchg mov hlt test sbb jg xchg xor adc gs mov mov clc ss mull mov ret adc sub gs mov imul dec ds add mov push mov enter sti sub lds or cltd mov dec lods push adc add cmc adc js pop mov lods sbb mov xor (bad) push jmp sbb nop lods dec aam add in pop push pushf ficom lret out mov cwtl lock add je or mov sub or sarb fidivr xor push xchg cwtl sbbb aam clc mov cwtl sbb push mov movsl adc inc pop sub daa pop sub cli mov imul popa loope sahf negb sbb dec dec mov push cmp push pop or mov jg adc dec cmpsl ret add in sub (bad) insb out adc insl jbe inc pushf lret dec adc aam pop pop xchg (bad) pop rol cmpsl les out mov push repnz or fwait out and jge push add push push xor aad aad sahf or jl stos cmp test pop jecxz fcomps xchg loop inc mov mov mov jmp rcll sbb test and xor addr16 (bad) imul ja jb test ss push (bad) jbe ret stos pop (bad) pop faddl ja push jnp int3 arpl sbb pop sbb imulb andb ret popf pop gs out jecxz push inc ds inc cmp pop jbe cmp inc or dec sahf pop loopne jb and dec sub vmwrite sub int3 mov nop pusha call lods xchg std mov pop int aaa out mov xchg les mov outsb sbb adc push add sub jns push mov xor (bad) mov mov mov adc pop add dec or dec pop je dec xchg mov push pop push imul and adcl or or sub (bad) lock das iret (bad) pushf clc shrl shlb icebp xor stc sbb out mov adc cmp cmp in push pop mov or fisttpl dec lret mov cmp xor cmpsb xchg nop inc inc xchg loope inc jno in sbb outsl and xor out arpl outsl push pop jle (bad) out add pop inc fadds dec outsb pop lds or mov jle in cmpsb add popa sbb add push lock or dec xchg (bad) and inc inc adc push add add xor mov (bad) insb iret dec pushf sbb cltd into fdecstp cmpsl (bad) jecxz cmp mov add lret int sub in pop pusha or aaa xor test sbb mov scas mov dec mov dec mov dec mov push imul cwtl in outsl leave fisttp xchg dec repz jecxz daa fisttpll movsb mov lods ds call hlt jne (bad) lods pusha mov imul mov es xchg mov add dec sahf sub in adc sti mov mov and lea out stos sbb sti xchg add push aaa jno or mov fild push frstor les sub pop and add push mov jne test pushf push mov das or jp test in arpl dec fdiv loopne andb mov not push cmp lds xchg repnz imul jl,pt mov mov fadds inc xchg mov (bad) loop xchg dec les jae fisttpll pop push rorb andps jbe lock fs popa jb cld sarb cltd pop mov test mov dec movl mov sub clc cmp dec xchg aam fisttpl in sti rclb pusha mov jecxz pop and xchg add cmp cmpsl gs lea cwtl pop mov adc jo aas dec xchg insl leave dec adc cmpsb es mov mov cmc sbb jbe mov or ret pop cmp inc jbe into cld jno or push inc sbb ja imul mov adc push mov sbb sahf (bad) cmp fistpll mov enter int lahf sahf repnz fistpl xchg jle dec insl test scas fildll repnz xchg xchg jg sbb adc mov stc (bad) and aam or dec fldenv lds mov push loopne sub mov mov mov iret lods fcompl insl mov fildll ds mov rclb pop cmpsl sti cs xchg rcrl sub inc in xchg cmc ss shll pop xorb popf jb pusha adc ffreep adc adc pop sahf xchg mov lock push jae repz (bad) rolb cmpsb jg add push jns xor lcall (bad) aaa out (bad) cmp xor dec jns jb daa push and jbe rolb pop jecxz or lds mov movsl jb aaa inc push add cld xorl lock jp pop mov add mov pop lods loope sti das adc add pop and lea sub ds push (bad) cltd xor sbb push loop push sarl test sahf scas outsb clc out sub idivl clc fcmovu adc pop mov hlt cmpsb push ret std or sbb scas aad lret scas mov mov inc push push inc test pop or push and insb aad jp dec les imul xor in push jnp cmp mov push push xchg dec in inc dec enter sub je mov clc lods mov in mov xor mov insl lahf sbb inc stos std lcall cmc fisttpll pop xchg pop push rcrb jmp mov xor xchg jb ja xchg jp and and (bad) ret jnp daa std lods dec pop iret push and stos mov cmc frstor xlat mov mov data16 es dec sarb push cmc imul mov pop xlat leave hlt gs ljmp arpl dec mov fiadd cmp (bad) aad vsubpd dec cmp mov (bad) lret jne sti out out jb jnp cmpsl in dec shrl mov out inc sbb cli jbe and test enter mov mov into jo adc fidivl ss sti div lret popf mul jbe mov dec pop int push mov adc cld pop xor lret (bad) jecxz sub (bad) into movb sub cmp cmc adc sbb mov add fmull mov xlat lods lock mov outsl (bad) push sbb mov in fsubl sbb cmp mov movsl mov push dec pushf fwait mov leave cli add pop movsl mov inc push inc aas inc pushl mov lcall pop jp mov (bad) repz subl fldt dec (bad) sbb subl into fnsave lahf lds sbb jecxz ficoml cwtl movsl xor popf push cmpsl leave dec mov mov push xor sub mov cmp add out sub sub mov inc pop int xchg pop jne outsb sbb and je mov inc jp test and popf xchg adc out insl inc (bad) ja loope aam jg push roll dec cli push sti repz add or dec sbb adc sub cmp sbb shrb cld mov push adc push (bad) mov sbb jecxz or push loop xchg jo pop xchg add mov ja jo mov or jp and pop insb insl das mov pusha mov in mov push push cld arpl jb mov pop aad faddl jle xor fisubrl add sub push mov sbb int3 mov mov cmp das rcrl dec cwtl repz jecxz aam mov arpl sbb and mov dec daa dec psubsw pop dec dec nop cwtl mov lahf scas gs mov pushf sub jno push lods fildll mov jns out lcall pusha sbb cld mov ljmp cmpsb xchg cmp lods pop mov ret addb inc jge sub in adc mov pop data16 in xchg dec jnp arpl adcl mov repz ret xor and sarb jo or and dec cmp pop push andl popa iret xor mov jle ficom orl push and xor push out imul pop jno clc jnp std lock stc add inc or repz sbb mov pushf lret pop sub cmc jae sbb push rol xchg movsl adc (bad) nopl (bad) repnz test push scas and cmp out hlt mov subl repz jo stos push dec dec push int test inc imul xchg outsb jl ret cmp lret inc jnp fcoml jp pmulhw aaa leave int in fst sarb sub push in test (bad) lds or gs fcomps hlt shlb lahf and gs jge push xchg dec loopne stos loopne in mov sahf mov cld xor dec jnp dec enter insl loop ja mov scas (bad) (bad) div inc pop mov loope hlt xor jl (bad) jcxz pop inc outsb dec imul xor shll ret adc aam aam gs mov in adc fbld xchg leave sbb (bad) add imul cltd out add cmp insl add mov loope mov xor jb test mov pop push push iret les push sub rorb mov mov idivl clc insb call aas js adc xor xchg cmpsb pop (bad) stos fucomi mov add push ret aad or mov jns lret inc pop das ljmp scas out dec pushf mov cltd xlat cmp jecxz hlt mov outsb jmp mov (bad) test loop arpl repnz inc jb cmp push push cmpsl push sbb lahf fcompl mov inc fist mov sbb or inc fsubs pushf addr16 sbb inc rcl push xchg inc sbb pop pop leave (bad) jmp insb jns hlt int3 mov into or jl add push dec stc jne mov pushf out cwtl xchg pop pop pop pmuludq inc lahf sbb in pop (bad) fimull cmc pop xlat sub add lcall aas cmp pop push add sub dec das fbld cmp popf inc bound push xor popa sub adcl int3 addb sahf int3 pop push jnp jb cmp in int3 sbb xchg jne les cmp pop call jb daa insb pop mov pop gs and jmp adcb inc mov ds in scas cltd out leave loope pop jmp xchg jae les dec push notl out dec fcmovne lcall or xchg or cld pushf inc mov push adc fnstcw push lock pop pop outsl js cld xchg sub add lret loopne dec ds or loope (bad) aaa call xor pop xchg and out sahf sub cmp (bad) int add mov xor sub bound or les mov jg out pop test aaa add insb scas mov push outsb mov movsb inc cmp jo stc xchg mov inc mov cmp xchg jns (bad) out out dec and leave icebp jecxz fist mov mov ror (bad) je jle ss jbe mov jp xchg fstpl (bad) rcl sbb jle pop call leave stos cmp lret dec shr xchg call push dec outsb dec lock pop pop inc int3 imul push bound ss call testb push sbb adc int3 jp std and dec sub in or fnstsw in xchg jae xchg sbb loop add cmpsl dec mulb mov lahf aad scas and mov or sub shlb mov das inc mov and cwtl rcrb mov xor or repnz movb xchg arpl incl dec out outsl rol pop adc mov push push sbb sbb add pop inc scas popa out dec pop xor fsubs push stos add add lock (bad) sbb iret test lahf call lret adcb sarl aam js fisubl imul xchg data16 rorb sysret sbb (bad) pop incl xchg jbe cmp (bad) adc stc xchg (bad) ss sub aad cmc loope stos push inc sbb nop jnp push sbb cmp pop or test mov cmp and mov add jle nop pop jo outsl adc or insb mov mov adc rolb jb movsl pop push test pop cli fldt popl push xor mull movsl cmp pop in jecxz stc xchg ja pop prefetchnta mov adc add pushf xchg mov sbb icebp sbb fxch lahf pop lds (bad) mov cmp mov sbb jl arpl hlt dec aaa out sub or popa mov gs (bad) icebp sub out jne sbb arpl dec jp in mov lret test xchg out pop jl enter out fisubl cmpl cltd (bad) lcall pop jmp inc fistpl mov test lods data16 mov stos xchg mov push push push outsl pusha mov add add lcall cmp push loop pop nop sbb cmc shlb pop jecxz iret push or dec pusha (bad) jo pop inc decb sbb ds lret pusha (bad) lock pop mov cmp mov (bad) pop ret mov adc ljmp inc data16 in add lcall adc js push movsb xchg pop ret call mov mov sbb cmp insb sub out (bad) sub pop cmp xchg out pop mov das ja jge (bad) outsb ss loope imull pop mov adc ds cld sub scas sub rol rcrb dec jge and lahf jns add int pushf iret out sub mov std fist pop or xchg jecxz stos outsb pop dec lea jp fiaddl adc pop inc test lret incb jle jg mov xor push fprem1 pop aad les aam jmp (bad) out pop fdivs arpl xchg in loop popa cvtps2pi andl jnp loopne cmovs push lahf in out pop jp mov mov aam (bad) aaa (bad) pop sahf aas adc xor adcl dec arpl fdiv stos arpl pop dec xchg cld in in mov fldl2t (bad) fsubl mov cld and ret add xchg xorl pop cmpsl pop lret xor mov mov cwtl adc scas jp mov jnp arpl cs cmp mov pop dec mov int3 enter aas popf hlt fisub jo xorl mov mov jne jbe and and mov sub mov into mov sub or cmp push (bad) or in les lahf test inc cmp sti jecxz mov mov bound jge rcrl repnz in pop adc cmpsl xor xchg into je mov or lret stc dec std sub mov lret (bad) sbb sub ret jne cmc aam sbb scas cmpsl out pop xchg sub (bad) dec jle pop xor adc xchg mov pop pop das mov or out dec cli xlat inc mov inc imul jle in les push in xor jle leave lods and movsl test push andb insb push scas shrb xchg call iret insb pop addl mov out in jae js or (bad) and sti icebp je pop sub mov or les adc add ja outsb lahf pop sti xchg aaa fdivrp leave xchg les inc stc and fsts jno ljmp mov mov std lods dec negb push cmc test jge cmp xor pushf jecxz add inc xor push fbstp js xor test and and scas ss int sub (bad) xor or lret and inc imul lahf push cmp popf fisubrl xor mov mov arpl push xchg mov mov push pop inc pop dec jbe xchg jl cli mov dec sub enter icebp mov psllw sarb dec jmp mov sub jl mov (bad) pop iret ficom rcr pushf push repnz stc mov iret ss (bad) repz lahf mov adc mov push icebp mov (bad) mov jp testl jnp lret outsl fsubl inc cmp push imul inc mov push jns ljmp inc mov test aad jp add test out ficoml shrl aaa aad xor (bad) ficom shll add xor leave cmc mov add dec mov mov outsb fs lds es jbe lahf dec sarb or cs jo mov or clc call xchg cmp xlat lods insl jns xor sahf or lock repz cld pop mov jl jecxz sti pop rep out or mov es cltd jp cmp push xor mov (bad) lcall (bad) icebp arpl incb mov imul jns fwait push xchg fimul icebp repnz adc lcall or push test pop mov jle (bad) jb and in dec popf cmc jecxz xchg imul push mov bound scas mov mov cmp sahf push pusha mov aad adc lods xchg mov (bad) dec sub in mov fsubl xchg inc xlat pop mov push mov insb ret cmpsb add in ret pop xchg sbb movsb push leave ret push mov repz lea jnp aam lea ficomp xor dec js push stc jo rcll cmp popa stos mov imul (bad) out pop gs bound and test aam inc test loop cmp push dec pop scas cmp mov mov xchg inc xor cs pop jae ficompl adc xchg mov gs aam mov lret (bad) lds mov and lret pop fwait add sbb pushf cmp xchg stos lahf adc repz (bad) fisttpll orb push daa hlt fsubr pop (bad) cs cmp mov xchg daa pop ret std inc pop fwait lods ret mov jns cmp add pop (bad) fstp aam ficom out xor dec push pop pop fcoml or pop or xor xorb repnz inc add test sub xchg pop shll lods pop xor inc push xchg dec lahf push jge adc jle (bad) mov int3 inc repz or or clc lcall (bad) je jns aam adc adc dec or loop adc fs scas add test cltd imul daa (bad) test arpl xchg jne in pop push push or mov mov popf pop mov ljmp cmpl pop imul js shll xchg xchg fmull cmpsl cmc mov xchg push or in test icebp pusha addr16 sub sbb insl mov aaa or or sub data16 pop and je fwait pop in es sub pop add stos cld dec adc (bad) in sbb pop or sub and jae or sahf adc lds into xor mov cmp or les adc xchg loopne add xor repnz notl mov pop ret imul and (bad) mov nop and xchg mov movsb sbb dec xorl out xchg sub je dec xor and jmp fisttpll adc mulb loopne inc pop ss mov sub iret push jne je xor adc loop dec mov in ret jmp stos push out or aad lock and pop imul ss sti popf sbbl movd adc jb jmp mov push cs mov aad loope popf mov aaa stc mov sub clc jae sahf int sbb out (bad) cwtl popl ds imul leave push xor push andl jge mov mov xor inc lods negb inc and cmc scas repz mov in sub add add cmp push jne loopne pop loop (bad) mov ret pop sub subl jns jo sarl icebp pop xor aam jecxz fisttpl jno push out push mov jle and mov fcoms xor leave and call cmp jmp enter push out into push xchg push aad test adc push mov (bad) or mov add sarb (bad) xor xor sub decl push les jp add fisttpl andl ja lcall scas add pusha je aam mov dec lock mov inc das insl bound loopne or mov fs aaa pop pop repnz std and mov inc sub ljmp loop cmp add outsl inc inc sbb mov out lods daa rorb std std add addr16 mov outsl ret mov cmpsb push outsl repnz stos aam jbe lea cmc mov bound pop leave jne dec icebp shl call ficoml movsb mov jb dec xor lds dec add adc sub call xor inc cmc push jl into shll cs cmp (bad) out jl out iret ds repz cmp sbb cmc or rcrb in add test mov push pushf dec pop or nop imul cmp mov aad pop repnz pop divl mov lea pop sub jae bound test fistpll dec insb imul or or jg nop push dec mov pshufw in mov jl ja lds aad mov pop scas inc jne or xchg xchg dec enter pop push sbbl mov ret sub mov xor jecxz aas fs xorl mov sbb mov inc jne in testl dec dec test mov faddp out dec mov js jecxz fistpl push stc jb push ret loope mov and sub adc sbb jle mov jno sti out add popa lret push cmp cmp jle dec rorl cld add aaa shrb test aaa or dec sub inc movsl fmuls and scas or push into test lcall adc (bad) mov jl fdiv outsl add inc (bad) in xchg or mov xor pop pop xchg fstl stos shrl push push xor jle xor out pop mov sbb (bad) mov imul clc dec adc leave in test inc imul and fcmovnbe xchg or into xchg pop and or mov jp jle dec je negl movsl (bad) leave xchg xlat int daa cmp sub push (bad) cld es cwtl add dec aaa xor insb add push clc lods xchg int3 and js xchg inc sar xor pop and ja adc jecxz or stos sub ficoml jae in fsubr xchg adc sbb xchg imul outsl (bad) cmpl pop add fiadd scas stc or push xor push mov (bad) mov es xchg and xchg sub xchg imul outsl mov push fbstp xor cmp out rorl dec sbb mov iret adc sbb js fcmovnb and daa and lock jp test adc or mov ds inc inc test or scas andl adc in add cld gs jmp daa lea dec dec pop jp or xor mov push mov xlat add scas int in aam and or mov pop pusha insl xor pop mov push mov pop (bad) or xchg pop in jbe or cmc xchg leave jne gs xchg pushf shr xchg test mov xchg lods lcall test imul and sbb cmp push or pop lea pop ficompl aam xchg pop and jo dec sbb or add dec or sbb cwtl test or fiadd call fwait xchg jns test adc insl (bad) ret dec and jge ret xor push add ror mov cmp inc loopne lret int3 scas movsb xchg shll pusha sbbl test pop addr16 adc jecxz fcmovne xor pop and pop xchg out jmp sbb mov sub pop (bad) int3 fstpt mov xchg fstps into clc pusha adc test js cli std cmp incb (bad) pop in inc popa sbb lahf cmp imul sti (bad) adc adc test mov xor jge je mov cmc sbb bound out xchg jae sti and xchg push cmp mov pop sbb out orl (bad) in inc sbb cmp aad sub leave icebp scas sub mov xor push and aas add mull xchg out push mov sbbl rcr and xchg or (bad) dec aad ret fstps push subl sbbl mov dec or sbb push push sbb repnz pop mov pop mov ljmp std mov aas mov mov fucom xchg inc xor dec mov aam or jmp dec mov adc (bad) ljmp add (bad) push fcoml push loopne cs incb lret cmp in dec jp pushf movsl push xchg jmp mov and mov inc (bad) and outsl movb sbb (bad) sarl xchg mov das pop sbb cmp jg xchg fistpl data16 ljmp iret gs out jmp jne addl or cld xchg mov xchg sbb les or dec adc dec xchg push repz enter and push sub adc fbld push pop jmp sub (bad) jne out or inc iret lret cmp dec pop or inc and pop inc inc fcmovbe or push and sbb scas decl mov sbb add dec sbb (bad) jb in arpl test les mov pushf ljmp push inc outsl push push cmc fiadd mov (bad) stos call cmp stc pop stc xchg and sbb int push jmp push lods mov dec jb adc or clc sub dec pop push imul sbbb mov or cs icebp cmp push fdivl lods mov popfw out jle mov add mov and lret xlat stos or (bad) aas jo rcrb pop insl mov std xor shll jb inc pusha xlat dec jbe jne int push cmpsl sbb pop dec fdivs adc js lock jle pop fsubr mov adc mov mov adc ljmp stos sub sbb jecxz pop hlt add or push jle movsb sbb adc call lret pop (bad) and inc add in hlt push inc jno fs pop push xchg jecxz setae sbb cmpsb ret push adc sub pusha fistl jno out jl dec leave add sbb ficom and mov mov mov pushf leave pop jge adc cmp and or pop lahf sbb adc mov mov mov jl adc xor xor mov mov cmpsl xchg pop in nop pusha stos lcall ja xchg call inc mov mov cwtl push ret enter cltd ja xchg lret ret jge repz dec dec jb push sarb and pop mov fidivl inc pusha or lods call xchg push cwtl pop mov xor cmp push mov or sar sbb push ret (bad) and add aam push sbb popf jb (bad) pushf mov bound icebp jge in out bndldx mov push push iret jmp pushf mov inc addr16 pop in mov pop scas and mov push cmp add movsl sbb mov mov pusha fs shll (bad) scas (bad) aam enter mov cmp xchg loopne aaa pop push pop cmp inc dec mov movsb add pop lods push add clc inc jne test fmul fcoml movsl pop insb stc mov imul es jns popl cmp pop shrl mov stos inc in repnz mov push jg mov cmpsb test dec push dec and (bad) or xor add lods lods js cltd xor shl cmp push inc mov faddp int movsl cmp sbb je out mov fwait loop cmp (bad) mov jb or adc push push icebp adc pop mov mov pop repnz sbb popf xchg fisubl test and jmp inc test je out push sbb mov pop push jl jmp jmp inc leave jno mov movsb dec or (bad) pop push repnz test popf add ret loope ds push ljmp insl sbb cwtl lea dec mov push push fs fisttp std jne inc lea pushf add inc test popa fcmovnu scas std or inc jl pop jecxz hlt jecxz in push adc pushf cs jp scas fwait imul xchg pushf in cmp loopne mov pusha pop popa icebp push imul sbbb and add xchg ret fsts xor push stc aas int3 icebp adcl adc sub pop push out pop cmpsl mov test add icebp lret cmp pop in int3 dec fisubrl push pop movsb add jge jg pushf lret jnp dec mov dec incl inc mov (bad) out mov cmp xor mov fst fldcw out stc push inc aaa enter lds jge (bad) jae popa pop adc lods adc xchg scas addr16 or cld loop insb jo outsl mov mov lcall orb xchg dec out pusha arpl mov rcr dec mov iret cwtl pushf adc xor (bad) cmp mov pop xor mov fwait pop sbb xchg mov mull lahf (bad) rorb mov hlt in aam xchg adc out sarb sti mov jmp inc cmpps (bad) cmpsb jb xchg lret lods adc pop push pop movsl testb loope mov (bad) pxor jmp xor dec inc xor push sub lds mov sub rcrl adc arpl ret mov jmp ror std outsb rclb hlt adc fadd xlat dec shl adc ficompl dec lods pop xor cmpl inc mov push (bad) iret jle loope jp mov dec roll dec push add sub mov stc sub je pop jo (bad) adc stc call cli aas sub into jge imul sqrtps xor pop loop,pn fiaddl inc movsb mov add cmp sub (bad) (bad) or loopne js pop xchg movsl sub lock xchg js leave sub and iret jmp mov xchg or lahf xor xchg fwait xchg cmp mov test and adc pushf addr16 cmp inc jmp subl pop inc scas pop dec cmp ret sbb push mov push and hlt jno push or scas dec dec mov sub or or xor hlt inc stc (bad) lahf xor and and xchg add test push sbb call adc push out mov jmp lahf fcomps mov daa (bad) sbb pusha rclb andl jae pop push xchg movsl into outsb insb scas (bad) dec popa nop mul sbb in or fmuls jecxz outsb jge ret sbb hlt std xchg repz stos (bad) jl es sbb (bad) cmp mov sub pop clc adc push adc (bad) ss in dec sahf leave jnp jne int3 in adc incl es out mov popf (bad) jle sbb sub push movsb (bad) xor jne out mov mov xchg jno mov pop xlat cmp ljmp inc fistp sub jecxz jb push jo int3 mov dec inc or xchg jle dec (bad) and movsb arpl push cli loope and imul arpl mov push xchg xor sbb and pop mov fldcw mov fdivrs dec xor in jl mov mov jmp bound pop sub repnz bnd jmp data16 lods into enter mov mov mov pop fcompl pushf cmpsl loop adc inc push ret mov mov mov pop xor mov mov dec inc xchg daa cmp mul pop cmp inc push xor cmp adc inc cmp lcall ret or cli sbb (bad) pushf insb jecxz pop scas je push outsl out dec in subl sub aam pushf fmul movsb pop sbb and (bad) push orl and cmp js repz xor dec loop sub mov into push pop lcall stc jne int pop push test fisttp xor out pop fsubl cwtl adc popa xor jnp rcll mov aam jae fidivl (bad) or mov jmp push scas xchg fist ret mov inc pop adc jge int3 dec push cld mov sbb sbb addl add sbb mov loop mov or xchg ss mov sbb sub aas lods dec xor dec iret xchg out xchg out jecxz outsl movsl ret es mov or mov mov add lods daa (bad) cmpsb inc arpl and dec cmp pop inc lods mov sbb rorb int3 sub sbb lret aam mov fdivl xchg and int3 or or inc sub pop lods push addr16 fild add push pop jmp rcll repz cmp jae and fisttpl loopne and jmp (bad) add adc shrl mov jb movsb cltd insl pop lret fndisi(8087 adc test clc rcrl xchg push repz das pop sub push add xchg push cmp mov and mov and xor sub xor dec pop xchg sbb frstor mov pushf xchg arpl mov out adc cmp push xchg push iret push das mov cmc xor adc lahf mov iret loopne mov jo or push addr16 xor dec mov mov lds out push sbb pop sbb fcmovu and ds xchg inc xor adc inc xchg dec jmp out adc or enter sub js inc lods ret mov (bad) pop inc mov stc xorl ljmp pop iret push aad inc scas pop sub push sbb jb sbbl xchg or jnp mov gs xlat ds stos mov jl sbb push aad cmp pop es push push std out sarl or stos pop push (bad) push add jne ret push push fyl2x mov lds mov inc jno (bad) push push lcall xor sub ret pop mov dec dec jbe js or mov jne,pn mov cmp jecxz icebp es dec nop fild dec mov sbb push sbb ljmp lds popf mov mov dec idivb clc sub pop lds jmp mov xchg rcl loopne add mov imull sbb adc mov mov (bad) cmpsl and (bad) int pop addb sbb or mov or xchg mov sbb arpl dec add jp and inc fs adc sbb popf mov sahf fisubl aaa lret (bad) mov clc add push int3 imul punpcklwd (bad) and test xchg mov or or fdivl clc inc sub dec test dec (bad) push cltd dec lock sbb sbb lods jl aas push push lock xor aas sub xor shl cli mov mov enter jle lret jge std dec test cmp push or addr16 inc mov in lret leave push gs dec mov push loopne enter cmp mov repz mov mov int repnz outsl add xchg (bad) mulb mov in data16 (bad) loopne (bad) out xchg xchg xchg cmp arpl jo in and out std fildll push pop movsb clc and ret inc pop jmp icebp jle push inc test out xchg mov (bad) cmp sbb fstps aas mov cmp xor icebp aas cmp popa mov push enter (bad) dec nop (bad) out sub dec and stos mov pusha or out lods enter inc jge jg int xor adc (bad) outsl ret dec mov xchg inc aam xor movb or outsl add popa mov mov jmp inc in adc pop cmc or inc or out jns std cli cs or xlat mov imul xor pop fild push sub pop aaa imul and pop jmp test cs movsb cltd cli add popa test xlat mov or (bad) jo pop mov popa sbb push mov push ja and scas imul xchg mov aad jo pop xchg icebp imull call or fild mov fdivl mov stos push leave xor cmp ret adc subl dec cld dec pop aaa les jmp ljmp (bad) es in jb mov jp push xor and test fstps pop xor xor adc ljmp and mov adc (bad) adc (bad) aam push jmp xchg insl imul sbbl (bad) lods cmpl insb aam iret hlt push sbb clc dec repz cmp xor fcmovu push test scas add test cmp jge movsl (bad) bound cmc jbe mov mov inc movsl mov sub mov jne sar or or push lock jmp sbb mov or adc jne les push jae adc cmp push or in mov sbb dec clc and flds stc lret jo sub mov decb iret xchg mov cmp sarl mov insl aas loop cmp push imul lea fdivp sbb mov jno ja and xor std (bad) push lret dec push xor jmp xchg imul rclb mov daa inc xchg cmp lret push cmp cmpl dec (bad) loopne xor mov or popf fldenv dec jne cmp mov xchg in (bad) mov sub adc sub sub fidivl dec fld1 sbb sar jb mov shrl loop enter sub pop cmp sahf jo xor lods inc dec sub mov test dec rorb push movsb repnz jne push ljmp add push cltd sbb push clc xor xor sub stos inc popf ret push jmp hlt xor shr fs inc mov pop out cltd scas push xchg int3 sub mov push and push inc fist dec cmpsb or push dec adc xchg mov and jb cmp sub gs xor pop and sbb or cmpsl mov or or out sub sbb test and sub outsl mov out sahf in gs js insb mov sub fdivs call roll mov inc mov ds cmp and test cmp incb push pop dec sti adc imul mov cwtl or dec push mov inc ret lods add jecxz adc fmul jle xor jo jle adc jb jg xchg sub pop (bad) adc cmp daa jl (bad) in mov pop popf das push xor ret pop ror call lret push dec aaa lcall push dec arpl mov and mov cmc lcall push rolb sti adc or or fidivr or cs xchg push lea mov shrb hlt push sub sti ficom jp loope sbb jl int3 loope in inc popa fistpll xchg mov push leave leave xbegin js in xlat cmp lea mov xchg test pop jne (bad) pop add sub cmp push (bad) jne enter rclb ja lods dec pushf add imul dec mov mov outsb shlb and xchg (bad) lret pop hlt lods cmp dec outsl mov xchg pop and mov pop xor dec imul cmp pop xchg les jnp sti into cld or int3 add pop mov mov std dec sahf pop fmuls pop jb es fistp mov pop mov pop test arpl mov test mov addr16 mov js jle ror mov in jb lcall pop imul pop push jo cltd decl test push repz sbb cld push or add xchg and icebp fldenv push mov jae dec inc xor (bad) pop dec js insl fstpl stos jns loop aaa push mov mov pop sbb and stos jb push lods popf sar push xchg mov (bad) cmp xchg and mov inc cmp push (bad) xor fcmovb cmc incl lret dec arpl scas cmpsb push or xlat fcoms decl xchg sbb ret or sahf dec movsl andl dec add jb call sub mov adc gs addl popf in movsb cmpsl je jecxz aaa xor push dec pop mov fwait incb lret and mov push inc sub pop add (bad) push lods aad inc cmp and push sbb sub jbe fsubrs mov push popf sub cltd lret iret xor and or jbe lret and (bad) es cmc repz es popa iret sbb or adc fnop push xchg outsb mov adc jae pop dec lods nop mov sub pushf cld stos dec outsb xchg (bad) adc mov movntq out gs xchg sub scas xchg scas cmp test out stos mov fmuls lret push fdivl adc (bad) xor sbb pop (bad) cwtl mov es mov xor add mov inc sub (bad) enter dec and insl push imul mov je pop fsubs xchg add lret in rcl push loop (bad) sbb fdivrp fildll inc mov aas jp pop push mov aaa mov outsl mov dec add xchg cmp sub lcall test fldcw pop mov mov out xchg sbb xchg pop mov fnsave xor mov mov out test jno sub (bad) cltd (bad) aaa (bad) pop push js sub cmp sbb (bad) imul and enter inc mov (bad) sbb xchg or addr16 in in (bad) cmpsl mov mov lret fmull and pop mov and and sub dec adc hlt or cmpsb cld call fwait cmp imul icebp icebp dec mov lea or lahf inc cmp cmp dec adc ljmp lahf clc fcmovu stos xchg push or ss scas fistp aad mov fstpl enter rcr fs scas xchg jbe imul test lock orl lock pop jmp je and sbb jno,pt jne sub test lcall clc gs pop fwait pop push pop ret popa std notb add into sbb sub push stos mov into add out pop in outsl test lret sbb sahf sub jmp push mov pop test pop cmpsl (bad) dec sbb imul pop xor iret sti jmp jl mov lods jmp jo mov rcll or mov inc or push sti repz arpl fwait jecxz cmp out and stos inc xorl mov jp mov add stos sbb xchg testl out lods pop mov sub mov fnsave pop xor (bad) or xor jo inc sahf imul hlt mov mov dec fs loop outsb sarb sbb movsb lods pop icebp cmp jnp enter push or ljmp pop jne dec xor bound iret lcall jp pcmpeqd fwait adc notb aam or xor mov xchg jnp inc xchg mov cwtl sub (bad) mov push sub pop fdivs in lret mov shlb mov dec rorb scas pop sbb sub inc cmpb lock (bad) loop and enter cmpsl mov pop cmpsb rorl data16 pop adc jbe jnp loopne inc mov push pop es movsb inc pop cmp loop fcmovne outsl add push mov add push sti pop (bad) arpl add lods lcall add jg js sub push mov adc jb pusha xchg sti push push xchg stc and movsl and pop cmpsl xor aad adc push dec sarl xchg sub int xchg imul sti jno outsl fmull in fcmovnu ret xchg xor jle stos cmp out pop mov (bad) (bad) lcall pop jno mov subl mov aaa js cmpsl enter dec (bad) push in test dec arpl jle mov loop (bad) in push fsubp add mov jge imul push adc lods xor addr16 mov mov and dec cmpsb fistpl test push fdivrs inc adc lock das mov sub add lods mov jo ret loope xchg sub aas cmp imul inc or add mov adc into pop incb in xor dec add popf (bad) fildll xchg add ret inc mov mov (bad) push inc mov push or test (bad) (bad) js jge mov scas sub ja rorl ret push cli dec lods mov mov push test push aam repnz out mov jne lahf loop jle in roll or mov mov jae fdivr shrl in xlat xchg mov orb sarl mov sub sub cmp aas push mov cwtl jnp,pt xchg cmp add out adc xor (bad) stc and ret es ds jns or adc xchg lock or pop (bad) dec push pop pusha imul cmp das repz mov mov adc rorb cld sti push popf negl rcll jnp stos and dec push call fbld cmp outsb pop sub add hlt cmp pop add mov out stos fstpt cmpsb dec mov ds popa int clc fs fdivrl data16 loopne adc jbe out daa sub lock push outsl movl popa jbe mov pop sub pushf gs mov mov ret cmp int3 int3 scas test loop or loop xchg sub and mov adc sti or movsb mov fldenv test xchg inc lahf push cmp mov mov stc dec es cs cltd mov cltd inc ret mov andl or add ss ja pushf icebp pop and pop xchg mov data16 add add mov aad jp nop inc and ss mov pop mov cmp in mov out sbb aaa subb int3 (bad) xor in mov sub push mov xor inc je dec cld jae in int3 stos aam ss cltd dec idivb int3 dec add jp int dec mov (bad) aaa fnsave mov push push or cmpsl inc clc (bad) xchg stos int3 sbb and xchg dec xor insl bound sub fistl fsubr data16 out sub adc js and ss jmp aaa push jns inc jo ja cmp xlat fistpll ret dec lods pushf (bad) pop lcall sahf or push popa mov adc cmp inc shrb iret xchg push lret divb xchg aad cli pop cli adc imul xor and std xchg icebp push xlat lock stos adc pop movsb aaa ss int3 add and sub dec xor dec addr16 adc mov in push mov jl mov jl rclb sub pusha or inc and and pop testl push xor loopne leave iret lahf jecxz movl or popf orb pop out rolb out sub jp stos int3 jl cwtl sub add repnz mov mov decl popa ljmp movsb mov test andl int adc mov jnp adc jg add sbb bound mov xchg cs frstor jg mov stos (bad) stc sbb push outsb jl mov and int3 mov jae repz inc fisub sub enter sbb jge imul (bad) (bad) jns add je pop or pop pop ja jmp adc mov mov mov scas das push fstpl mov das out jae fwait push add std sbb jnp pop dec lock aad cmpsl (bad) negl mov adc xor lcall popa bound stos or (bad) jo or adc dec pop (bad) std ds notl jmp jne xchg xchg pop stc cs dec and pushf cmp shrl xchg sbbl push sub xorl test pop pusha rol iret jecxz cltd and xor fdivrs sarb jmp pop mov mov cmpsb lret mov int mov mov daa cltd out mov (bad) into mov fs add mov int3 lods pop dec adc ficoml adcl xor adc pop test decl xchg pop lods cmpsb jns or decl call negl int lods push inc mov mov ja and xchg mov mov lods pop in sub and sub pop mov jae loope xchg arpl xchg stc push jbe jp inc mov xor xor jne std xchg enter xchg mov cmp cltd xchg push mov leave sbb push or mov repnz into popa xchg push jecxz lock jl aam aam imul jo aaa mov jne into ss jo pop cld int3 inc lcall out jae flds pop repz pusha jb das push xchg aaa in loop popa jp or dec mov or frstor out pop out mov pop sbb arpl jne fnsave iret aas pop dec sbb les cmc movsl dec rcl imul mov xor dec loop (bad) stos add lods test jo push mov sub or cmp push cmp jle loope sbb ret lds jne mov ljmp and sbb lret jg mov outsl cmpsb xchg mov jmp jae mov (bad) push cmpsl push push dec xchg sub (bad) push mov sub sub test xchg dec add dec xor cmp cmpsb divl xchg jmp xor lret or je push sub das push dec subb clc fcoml into xor in mov lock stos cmpsb enter cmpsb xchg sbb js and (bad) mov imul dec dec bound add cmp add test mov jle icebp jp pop loopne stos adc ljmp dec loopne mov fcoms movsb test lcall fwait adc lret pop cmp fstpt aaa xor ja les lahf test mov fiaddl loop add cmpsl out pop dec mov lahf imull jle mov fsubr movsl roll cmp pop ja leave mov sub clc mov out and repz adc jp pop shll stos jge jno cmp leave imul cmpsl fdiv hlt mov stos cwtl xor enter pop xchg int3 mov cmc test stos xchg mov orl cwtl loop sub repz js sub aad cmp pushf adc mov lret mov enter fs pop xor xlat dec sub jne xor adc sbbb movsb push dec in cli rcl xor enter push nop push and push xchg inc mov loop in in out cmp mov repnz fs iret mov dec mov fidivrl loop in (bad) aas xchg mov aad nop mov in and cmpsb shlb push dec and pop xchg cmp mov dec jne gs add mov loop clc push cmp sahf adc pop sub and xchg mov neg movsb lods adc and popl mov jo xchg outsl arpl data16 (bad) bnd jb movsl mov test adc pushf inc insb pop out ljmp fmull sub push ds jo lahf mov xor es dec mov xor mov stos xchg push pop and into (bad) cmc ret mov cmp leave outsl subb sbb lods lods in je,pn and icebp xchg and (bad) lret lcall sbb stos adc or mov outsl jno xchg jne fs mov std stos sbb packssdw (bad) cmp xor test jne (bad) daa fistl jle sbb loop push add sbb jmp adc dec mov lock js popa xor enter dec add cmp mov sub out (bad) in shll shrl scas fsts jae aad jle pushl add push mov loope mov (bad) xchg mov jmp int3 neg pop mov cmpsl in mov lahf sbb and lahf sti jmp mov pushf push cmovp mov cli inc and or xchg push xchg xchg in sbb and adc push lock andl sub adc mov test mov (bad) insl mov test jp cmpsb pop mov mov stos js xor popa sahf sarb xlat stc push and js lret inc add scas jns nop hlt add mov jge mov sub test adc sbb icebp pop mov dec leave (bad) inc imull push fcompl test and repnz dec fisttpl int xlat hlt push test outsl insb mov daa pushf cmpsl ret stc outsl sahf fidiv jno cmp pop cwtl ja jo aas pop add pop (bad) fdivrl push dec jo fs fldenv and fidivr inc les cmp and mov push lahf dec stc jmp mov add xorl ficomp sbb decl push clc test aam cmp mov push mov jl mov push nop rcrl (bad) les sbb movsl push mov movsl sti push pop cmp mov or mov ficomp popa cmpl adcl mov leave into add inc cltd push xor cmpsl jb sub xor jae pusha fsubp lea xor in mov sub mov mov mov aad (bad) (bad) sub or add jp dec adc mov or cmp jp inc adc mov lods inc (bad) mov sbb cli sahf lock out ljmp (bad) mov sbb in mov push lds data16 lret outsl jns fstpt add mov ret cmp mov aam out adc mov (bad) sbb daa add sarb mov jg pop or das sub adc out scas sub sbb sub jge xchg or in push mov cmp jge std cltd idivw or and mov push (bad) push xor fstpl mov es shrl repz (bad) leave mov out dec out xor mov testl sarb loope test call enter in push sbb sbb jnp rol inc mov push mov mov jo jbe cmp clc (bad) in pop fucom pop sbb (bad) mov xor mov loopne sub gs push jecxz fwait mov in adc and popf dec rcr jp (bad) xor repz xor add cli adc cmp dec adcl sub adc mov arpl jb (bad) fcoml xchg arpl (bad) enter inc ja ja xor jle lret mov jecxz jmp jle dec jecxz adc pop push (bad) and ror mov xchg loopne enter mov cmp sbb jmp inc jg sbb inc rclb sub jnp sbb pop stos pop pop comiss scas stos pop ret mov and test mov loope stos dec sbb (bad) test lret movsl cmp xchg xor mov icebp stos cwtl add push fs lret mov clc mov stos xor into scas aad scas (bad) roll push ficomp mov sub call bndldx pop pop imul xchg jb lret dec stos (bad) sub (bad) mov mov lods out or lods add lret divl outsl scas std sbb jo test ljmp (bad) mov mov add leave fmuls dec dec and (bad) movsb or pop mov jmp pop mov jp (bad) pop dec adc icebp xorl mov and notb stos mov in mov jb xor xchg dec sbb inc mov inc push push push lahf and sbb aad or push (bad) mov xchg mov pop jae fldcw ss and mov and aad push cltd cmp data16 dec xchg add mov dec cmp mov jle ljmp mov lods lret ljmp enter aad je add dec fstps sbb pcmpgtb adc xchg rorl fstl call lret test out repnz enter sub pop bound dec dec sarl mov loopne mov inc or dec sub jae sbb inc scas pusha mov jge and repz in sahf stos push cmpsb faddp cmpsl dec cmpsb xchg sbb mov out push mov jo ss popf pop fwait and ror sbb jns xor lea test and dec cmpsl push vpsrad arpl rcr andb cmp xchg sub lret push fdivs loop imul xchg imul scas lea lods inc add add or (bad) dec incl cmpsl push nop cmp data16 arpl cld bound int3 arpl xor and pop pushf iret and sbb jp dec mov sbb aad mov in (bad) jbe mov rcll cmp cmp lods mov es pop cmp movsl jmp push (bad) and hlt fildl cmp (bad) (bad) mov shlb add jecxz outsb xor mov sbb fsubl mov shrl dec hlt loop in mov mov repz pop xor rorl outsl push mov mov mov xchg shrb dec enter pop inc and jae cmpsl or lock std imul test out adc jg imul pusha xchg leave jnp jg dec mov pop jae out or mov fs test pop faddl js sti mov jnp,pt cld lds enter sbb sub aas subl xor cmc mov fdivp inc out sub sub dec inc adcl ss pcmpgtw mov ss mov pusha sbb xlat or jae addr16 out test cmp pop mov (bad) cs xor (bad) sub enter or push shll lret cmpsb push add xchg enter pop rolb mov nop push sahf jp xchg add mov jae sbb aad xor mov or dec repnz mov push cli call pop pop mov iret sub pop cmpsb pop adc (bad) mov mov sbb jns jno jb ret in leave fist cmp lret std inc add data16 inc cmpsl outsb dec adc sbb jb into sbb xchg jb jno les sti xor pop hlt adc sub bsr icebp cwtl dec stc dec mov mov fldenv pop sub ja adc or js inc movsl add push ret dec mov push xchg xchg cmp cmp stos sub aam jo enter inc repz or mov push xchg jecxz xor or loop fistl mov mov fs pop rclb xchg out loopne or loopne (bad) jbe loopne mov pop popl lods cmp xchg test fwait scas dec addr16 mov mov cli cmpsl (bad) testb lock loopne fisub ret jle inc xor mov and std int3 stos inc inc pop push lods sbb jbe fldenv xlat mov inc dec xor add jae xchg xor jle daa mov and sbb mov mov bound mov out dec add and pop and ss or flds les cmpsl lretw loop sbb arpl lea jg (bad) addr16 sbb mov bound (bad) and cld fldpi popa and nop out dec pop jb inc fwait or mov or in mov insl push xchg sti cltd jbe or mov xchg push mov push cmp in add pop dec scas hlt push bound push mov pop dec test cs xchg push fs xlat scas int3 and ds lahf loope xchg dec mov sbb imul adc push mov ficompl aaa aas jmp and mov hlt jb xor xchg jbe cmp xor adc mov clc pop hlt sub or lret mov (bad) fistpl loope (bad) (bad) pop cmc in jg das or popf inc fbstp jne adc orb inc lahf ljmp xchg mov popf adc xor mov jle cmp cmp loop call cmp stos mov (bad) mov xor lret mov jg pop ret jnp inc aas (bad) (bad) cmp sub daa xchg into pop jnp cmp pusha in and insb dec sub ret sbb gs and and pop adc xchg and mov push and jns insb cmpsl gs push add mov and movsb pusha pop inc cmp or mov xchg jb push hlt sbb int inc repz popf popa call stc push mov jmp mov out and ficom and pusha add jg sbb push clc dec jmp push insl sbb int3 jg lcall or pop lds pop rcrl (bad) imul pop lea test jg data16 movsl cmp jno test mov int3 faddl loopne xor test inc pop mov fldenv cmp fistp iret sub adc fnstsw daa insb jo mov (bad) out adc leave (bad) (bad) sti lods (bad) xor nop sub (bad) cmp js inc jl pusha les sbb lds pop ds push scas and pop mov pop push fisttp bound in inc rcll cmp jmp xor push or daa mov into je out xor and xor icebp push xchg sbb aam inc cmc (bad) notl out rclb cmp or outsl fwait xchg ja cmp data16 inc sub addr16 mov cmp jns push ljmp mov and dec int3 jl inc cmp (bad) mov pop pop data16 xchg aaa push mov fcoms popf jb inc or sub jle inc jp sub stos add inc mov xor xor jne xlat inc jmp es (bad) pop jns xlat fstps daa popa mov out pop xlat mov fwait in (bad) pusha mov push mov sahf mov push xor dec pop push imul pop lcall dec pop pop dec xor sti ds sub push dec pop out mov ficoml sub add ss sbb sbb es sbb add jge sub pop (bad) and mov movsb test cld cmc mov lret (bad) loop test test cmc xor push and (bad) dec or jle dec int3 cmp out and ja outsb mov cmp pop rcl sti pusha mov lods in mov jno mov pop outsb jecxz test lock stos in inc sbb xor imul idivb sbb out pop pop enter ljmp out add into adc inc fcmovbe mov loopw add ss sub test push lock ss imul push dec pop jge xor (bad) jae adc xorb mov (bad) fistpll nop movsb popf add mov and clc int test pop inc ds push mov mov fmulp ret lret nop (bad) push mov push test sub fsubp push cmp aaa adcl ret ja add pop xchg dec fwait jbe xor adc push xchg inc andl jmp int3 test popa rcl add inc decb gs nop daa xchg mov test sbb sbb sbb add inc dec or hlt mov and sub xor (bad) iret dec xor ret fdivrl pop mov out das sti insl (bad) into cltd sub imul or repz cmp icebp shl mov xor mov imul xchg (bad) pop xchg sbb cmp inc dec mov mov outsb data16 push push lret inc or lret rorb js out jnp ret (bad) (bad) fstl sbb (bad) xor aam mov xor clc call repz fs mov call mov mov push xchg jecxz dec stos das or ds xor cmp jle ljmp (bad) leave inc or sbb lds out (bad) sub mov nop adc test (bad) call call cld das push cmc mov xor popa (bad) xor pop sbb pop in shll dec pop dec dec dec lock or and xchg pop ljmp nop jnp add lods or adc inc int ss sarl push jmp xchg ret mov mov mov popl push adc mov push mov pusha inc mov cmp dec dec dec adc js xchg inc fisub push mov mov cmpsl addr16 pop push dec pop jecxz xchg push test xchg add sub adc and in es lds fwait pushf insb jo cmpsb push mov sbb sbb scas xor mov call stos outsl xor imul pop inc pop pop push cmp mov xchg xchg or ds xchg lret (bad) push lcall out in cs pop jae push sbb mov cltd sbb and cmp dec xchg jae lods pop inc push cmc insb cmp cmpsb enter xchg adc test jnp adc rorb add pop jb xrelease ljmp shll test stc add fnstcw add lret (bad) cmp and stos in push insl xchg sbb out or pop loope out fimul in push pop cwtl out sub loope int3 fiaddl int3 aam inc adc shlb or (bad) cmc push dec mov add mov jne sub mov sub aad adc jns rorb jle jge push hlt lods lock gs push rorb fidiv mov dec (bad) stc mov iret cmp imul ss lea pop jg jno cmp dec jb cwtl (bad) imulb insl daa push enter adc cmp loope push and lock sub mov adc js ss jne dec call cmp loope loop inc dec pop mov pop jae les jno das cld inc push pop dec jp daa mov xlat adc xchg int3 jecxz push (bad) sbb xor cmp mov arpl dec add xchg jg xchg jne push test (bad) dec jnp xor imul pop mov loop dec fsubs jae pop lcall jmp lret xor jecxz rcrl repnz cmpsb outsb addr16 scas jl (bad) popf aad jecxz imul in cld loopne ja in lret loopne lcall and mov lods dec stc mov add xor inc pusha scas xor xchg add test test jg dec push sbbl jecxz mov push into fisub fcompl jbe xchg and insl mov mov rcrl test push (bad) (bad) sub and addr16 adc ds leave mov insl mov xlat sub in xchg outsb adc cwtl stos (bad) repnz or call xchg sub mov out pop dec pushf inc adc sbb fs int3 ror enter stc pop out mov inc sub mov xchg sbb (bad) loopne push addr16 xrelease (bad) iret sub in xchg repz test adc loope pushf fs and mov jge and jg jg jbe cmpsl out mov xchg jno outsb notb cli mov in andl xor in xor (bad) and sub pop jno (bad) aas sti pop mov inc movsb jmp pop fwait leave decb mov arpl jle or mov rcll dec xorl cmp sub gs dec mov testl (bad) xor adc ljmp xorl mov add cli mov testb cld jge add dec shll sar mov mov lcall push testw xchg jne sub xor mov into cmp and mov rcr cwtl popf aas push jp incb sbb shrb pop daa sbb nop mov enter jge mov lds jge and xchg dec xor fistpl pop fwait (bad) imul xor int3 mov push fidiv add cmp add enter jbe pushf xor (bad) mov dec add dec and adc pop mov aas in mov (bad) sub mov outsl mov or ror jmp or fdivrl test testb push and pop jbe leave xor mov scas dec movb cmpsl dec xchg push in and mov clc psubw rcrl daa and jmp mov sub mov jecxz jno mov push mov xchg (bad) hlt sub mov call popa mov loopne pop xchg mov mov pop push dec (bad) stos (bad) loopne sahf lahf aaa stc dec xor xor mov adc cmc pop pop test add (bad) sti fbstp mov mov add test movsb jmp xor xchg std xchg (bad) pop loope fs dec sbb and sbb cltd lret adc sub mov fs jae mov pushf cmp and test cmp pop adc add push xor std stos adc xor add mov cltd out lcall out push es insl add adc xchg push mov in or cwtl shll std and mov mov out cmpsl loope push xchg fistp pop js gs out hlt mov cmp pushf insb mov and mov imul adc mov int3 pop cmp mov (bad) fsubl adc fildl cltd outsb mov pop arpl sub int3 ja icebp test into push sti icebp daa pusha (bad) fnstenv clc out sub test inc dec sub and (bad) xlat int in insb add clc inc xchg sub test xchg (bad) adc hlt adcb iret add pop das aaa adc cmp rcl adc mov popa rolb fldenv clc loopne enter mov xchg mov dec mov fwait adcl data16 pusha cs add mov sahf xlat pop rol adc xor mov cmp or xor or (bad) mov fnstenv and mov push cld out pop jg addr16 dec mov add add mov add push imul mov push cmpsb mov sbb add jge mov js sbb pop add mov xchg shl popf and cltd imul push pop push aam mov adc aam jae lds mov push loopne pushf sbb les cmp idivl sbb pop ljmp dec dec lret imul fcoml icebp cmp cmpsl test popf cwtl adc or jge xor mov cmp jmp pop add adcb sub xchg sbb jnp cmp cmp inc inc xchg cmp call in lods cmpsb shr aas push in or imul mov repnz aaa test mov xor pop mov (bad) xor sbb or lea push push push cmp inc mov loop enter sub loop add dec ljmp (bad) lock iret mov arpl sbb jmp or les xor or mov (bad) cs add dec xchg mov jecxz (bad) jae (bad) aam sarl add jp or stos lods lret or fnstcw add fcomps (bad) idivb (bad) ds pop jmp mov pusha cmpsb mov jecxz das dec adc cmc out lds inc sub mov mov pushf inc inc inc mov push sbb stc pop or repz aaa lods aaa or add sbb xchg pushf int mov adc in cmp (bad) jg pusha les pavgw push jecxz push lret mov and int3 fnstcw sbbl nop sbb jb sbb jg xor shrl mov popf (bad) jb int inc dec xor fsubp mov sti into or scas inc xchg aaa rclb jecxz loope into or xor xchg fidivr mov push lds pop in xchg push (bad) pop je pop lret jno (bad) loope jns ja cltd sub jle jno sub mov pop inc jp fstps xor or push outsb mov aad mov out in aad int mov push or sbb jns dec cs int jno or add mov push mov pop sub out faddl fwait mov push repz fcomps (bad) fadds inc cmp xorl imul dec add jne xchg arpl jmp mov jb dec jecxz loope data16 jge test std and mov jge rcrl aam sub sar adc cmpsl push fdiv movsl dec and (bad) into lods and or inc shlb decb xor aas jl mov jp in (bad) sar outsb pop jns push in pop jne (bad) data16 stos lret dec icebp dec test and dec and add xor mov sbb aad test test aas pop cld aaa pop xor das jb push in mov xchg pop lahf xor push test mov sub adc das (bad) dec stos xchg repnz dec sub lret test xchg xchg mov push js orl pop jg jge xchg ja xchg sub mov mov xor ror inc push repz idivb inc mov mov pop push inc test jge cli mov xor cmp test test adc ds pop xchg sti jae outsl and push addr16 push inc aaa imul dec sub ficompl inc repz addr16 test loopne sub jns xor jae jbe ret enter sub cmp xlat popa cs push fadd jp stc sbb dec pop xchg mov test jo das jle and sarb add jle xchg sub mov (bad) mov push jge clc cmp jb cmp movsb rol sub insl rolb gs in jmp jb dec push fwait jmp jo daa (bad) das loope out scas pop jb push dec cmp mulb (bad) add dec in pushf or fwait stc mov jno push ret loope leave jbe mov lods (bad) nop push pop mov test ja imul bound adc sbb popa insb (bad) push cld pushf pop out adc sub call inc mov and jbe sub mov jae lret xchg out cmp mov push not lds (bad) fcmovb sub dec mov sahf xor pop push in and roll mov mov les std add xchg mov xor call (bad) dec push popf inc (bad) cmp lods stos imul cmpsl imul push int sbb loop lahf jecxz leave orl mov mov cmp mov jb dec inc xchg in cld sub ds inc adc cmpsb ret ffree xchg out loop test add and addr16 cwtl fs mov push (bad) xor insl xor mov aas jo jo icebp push push aad xchg inc pop mov rorb mov jmp adc adc or xor jne popl add mov mov ja jns (bad) jnp push xchg aaa xor dec ja aam cmp mov mov sbb pop movb fbstp sbb add ret inc mov inc xchg sub negl scas ss mov cltd fdivrl icebp and dec cmp adc adc aad lds inc and lahf xor mov test iret int3 inc (bad) lock cs cmpl add inc cltd (bad) movsl pop inc dec ror inc adc in add push xchg cltd cwtl mov ja sub mov popa gs add les and mov xor movsb push jg imul out dec cmpsb cmp in inc pushf jmp jb es popf fimull xchg push pop and out jg repnz insb cmc shll mov data16 push lea fdivrs adc mov adc negb xor (bad) xlat jne push aam mov and adc and in jno mov std dec jp outsb lret xor fisubrl (bad) je icebp dec pop or adc imul rol repnz xchg ljmp data16 cwtl mov cmp add sbb push in add jae adc jge push iret inc dec clc cmpsl push push lahf cld outsl test mov sahf out aaa aaa movsl pop sub adc je mov sub inc gs mov cmpsl and (bad) jns mov jge add clc ja mov mov dec jne inc mov loopne add jb (bad) lods mov stc lea xchg lea movsb xor xchg jle dec pop mov xor cmpsl cmc repz xchg and push adc int3 lret or jmp jg movsl mov outsb iret test push into insl or out repz popa add (bad) mov or loopne cld adc cs xchg push (bad) movsb (bad) popf lcall cmp int3 ss sti xchg into xor push flds lret and je loopne xchg pop adc pop outsb lds dec sbb into mov iret jnp dec js negl outsl mov decb xchg cmp rorl mov aad mov and push mov xor mov xchg cltd sti idivb add sub bound sub mov cmp lods jmp scas movsb mov cmp pop bound out and jmp push pusha lock outsb ja incl sub enter iret pop sub sti xchg stos lods lea mov adc jle test mov test adc add rol cmp pop int adcl bnd xor mov lods jecxz flds or movsb push pop add and adc mov mov js inc mov ret xor and or inc emms mov jo jbe pop mov cli movsl xchg loope je in xchg adc pop sbb push sbb enter je push cmpsl push ss inc mov jnp xor ljmp gs lods and xor lret cmp mov inc ja mov fmul lods jbe xchg test int3 push fmull call ret xchg jp xchg aas in sub cwtl popa arpl test or aaa arpl mov jecxz dec cmp and dec fcompl mov stos push xlat push lds sub or mov sbb das pop adc fsin push hlt fisub shrb inc jne mov xchg xor xchg pop pop lret jmp sbb jno xchg push adc dec adc jp adc (bad) jb fcompl mov push xchg jb (bad) icebp lds addl lods ret xor enter adc xor add ror xor adcl add pop insl std mov push std xchg mov movsl loop (bad) aas enter (bad) and outsl and mov lret jns mov outsl call nop add sti push mov addr16 mov cmc (bad) fbld insl imul icebp sahf cmp and aam dec aaa fistl leave in nop outsb jecxz and xor aad popa lcall pushf ljmp ja xchg xor in xor sbb dec leave je adc arpl cmpsb (bad) fisttpll or push xor and jbe dec movsl xor mov jae dec sti cmp jg call decl push ja dec hlt push adc cld cmc mov xor adc sub mov das lock inc test sbb lods in push or cs fildl sti imul shlb pop jne xchg push jle fcom testl nop inc pop and mov ljmp sarl add loope cmpsl xchg adc sub lds mov inc mov jge,pn push add sbb or mov sub xchg xchg mov mov ljmp mov les orl jmp dec outsb push adc mov sahf lret xchg sti outsl jge (bad) gs push jo xor sbb mov ret rcl fbld xorb out mov outsb mov or scas aam mov icebp dec and jmp jecxz mov pushf in fildll inc lret pop jp or dec ss xor test sub scas sbb icebp jnp es scas test pop out mov sbb mov orb pop xor mov mov add inc mov rcl xor sbb int3 sub scas jge mov (bad) pop inc incl sub in pop ja mov into icebp (bad) es pop sub clc ds sbb xor xor arpl inc dec push inc aaa or movntps test xorl movsl pop xor dec mov sbb push mov push push test hlt xchg test sub or or notb lret xchg or inc iret movsl lret hlt rorb adc sarb out popf (bad) leave xor cmpl jmp sub adc jb dec lods ss xchg and lahf mov cmc scas sahf xchg dec imul jle je inc (bad) cmp mov fstl push xchg jmp xor dec popf lods pop mov xchg push cmc cmc push js sbb xchg jp jl rol out push not mov xor mov mov arpl ffreep cltd mov push cmp sbbb mov stos pop jno mov mov stos scas ljmp sbb push sub outsb test push mov inc cli into and (bad) lods in fsubs adc push push sarl mov push and push inc pop dec stos jmp js mov cli or or or stc subl add ror cmc leave loop pushf xor mov mov negw or inc out cmp ret shrb scas mov idivb jb or cwtl in dec xchg clc daa sarl loopne rcl push jmp or mov sub js fwait cltd insb pop aas pop dec in push mov cmpsb sub repz mov aad leave into mov (bad) jmp lcall mov fstl lcall fwait adc mov adc pop jae aaa mov js xchg (bad) xor push jl mov mov pop mov cs (bad) insb pop in lcall xor jg push daa mov add or and sub sbb pop sub mov std in mov xchg jmp xor int3 loopne mov rcr lret jne enter push test nop jge fadds lds in mov lea sbb mov add loopne pusha xchg addb jmp jb push xchg lcall mov add roll sub dec add dec adc push and xor std inc dec push outsl out fild std adc dec bound iret jecxz xchg leave or xlat fimull test and cmp sti enter jg gs mov adc jbe lahf idiv push test add outsb or fistpll add (bad) aaa ds sub inc jmp cmc idivl (bad) fistpll fldt ljmp adc ja data16 xor cmpsb aam xchg shrb jl push (bad) dec fstpt enter push nop mov jne repnz sarl loopne clc outsb loopne mov popf mov rclb jnp mov or inc pop xchg sub sub jo adc jmp adc mov mov (bad) inc je sub push and sbb jg xor xchg inc and push test loope push lret mov inc and xor in or mov fsts enter jp rclb dec adc adc push inc movsl pop jb fdivrl jns and in les xor xor sub jb adc pop ss lcall ret std mov call push push inc mov jno add arpl in outsl rcrl fstpl loop das aaa test shrb push cmp jb mov mov pop iret cmp mov dec hlt stos (bad) out fstl push pop (bad) out xchg jne movl shl or or mov dec rol xchg scas out jmp out xor xor shl js mov push ljmp dec ret and sbb and dec pusha and push mov mov dec sbb pushf sub scas rclb ret or or shrb sbb insl fwait or loope movsb shrl inc lods ror and xchg das jnp jns jle dec and daa xchg das dec mov sbb jae mov cltd js lcall lahf or sti repz lret or bound aam push inc scas mov mov adc jo sub pushf testl arpl jmp adc (bad) into push loope ret cmpsb aad xchg sbbl addl insb sub inc movsl repnz adc xlat push sub inc push push cli test pop pop push ret push and xchg push push dec arpl mov sbb mov or lea orl xchg scas cmp mov lock int3 mov xor stos lret loope inc gs jle (bad) sbb fldenv add ss das and xorb mov mov sub in fild pusha or mov xchg sbb inc dec pop xor outsb dec mov sub nop xor pop push xchg push sbb hlt (bad) adc pop dec add push cmc inc loopne popf pop mov sti inc lcall xor ds cmpb xor sbb loopne pop gs repz cmp les pushf test pop cmp mov inc pop cltd inc das push add lcall jmp and mov xlat int mov xlat cli or jne xchg cmp or dec xchg xor jg nop fisttpl inc cmp out aad sarl into sub jns xor mov iret lods lret xchg cmp idivl push mov adc mov pop (bad) dec sub jp cmp fistp push lods rcrl and and fidivrl divb jno cmp sti lahf (bad) stos test add ffree jb lahf mov add xchg adc push loopne movsb int3 or adc inc cmp adc pop inc mov dec imul aam xor (bad) ss mov (bad) mov test fucom xchg add mov sbb (bad) mov or mov pop or xchg or cltd inc sub pop insb jno scas repnz sbb cmp pop rol cmp fwait cmp inc adc std iret das inc adc andl (bad) xchg mov cmp sahf push or mov add stos les sub or popf test add int imul and (bad) outsl popa mov dec jb xor scas push fcmovnu test lret lcall std movbe cmp rorl or inc lea cld fcompl int fwait nop popf in repz arpl mov pop outsb into or in fcomip mov sub jecxz add xor in xchg mov inc adc notb fisubr add sbb sahf add cli push add in mov jl iret mov sbb mov inc jae jo add add aam dec into jns (bad) arpl mov jmp lcall cli jnp sub jb jmp sub mov lret push das mov (bad) mov nop sbb (bad) or insl lret test dec add or mov pop add mov popf lea mov jge,pt test mov inc mov in push cmpsl dec and push jl mov lods xor xchg jb rcrb pusha in push push xchg in mov pusha ss mov jp aas sbb dec push dec or xchg and xchg ss cmp jmp and scas mulb sti cmp int3 inc jae jb fidivl insb loopne stc popa or les shrb divb es jmp dec daa (bad) cmpsl andb addr16 sbb das int lods and and pop fisttp cmpsl cmp or jb imul cmp xor push and daa test bound jno pop dec pop test cmp adc dec cs push and push dec sbb test sbb mov rcll outsl and (bad) aas sub fdivs ja enter js ljmp hlt mov add push ds xchg dec je inc mov sub jb test mov fistp jp adc test inc jne add (bad) sbb fcompl mov fiaddl std dec and fwait adc or scas dec jle jo iret gs andb push cmp sti and icebp mov xchg sbb push movsl sbb ret sub push cmp test fisttpll pop or pushf js cmp jmp loopne daa dec push add inc (bad) pop js lahf sbb inc out and rcr fldt jge lcall xchg aad sbb nop mov cmp das pop enter mov push mov (bad) jno inc pop or mov push cmp xchg repz cwtl xorb mov jmp and (bad) stc test xchg test inc bnd jnp repz lock ret xchg scas sbb mov pop cs outsb lock sub mov (bad) mov in scas adc movsl mov pop push scas push mov or cld stc xor mov testl sub imul sbb jecxz call xor jp inc xchg clc fucomip and dec pop int sub shll sahf sbb cmp icebp jns mov mov adc gs fs adc mov jmp daa insl xor cmp sbb test and je add jl add dec rep lea and pop pop in and xchg imul ficompl mov pop inc icebp sub cs hlt inc pop shrl lock dec dec sti aad push test pusha add scas adc pop jnp and or mov shr mov jl cmp dec cmp (bad) insl pusha adcb mov test pop and lods mov popf bound jno rcll stos fsubl mov movsb aam pop mov jg push xchg lea pushf mov push stos lret ljmp sub pop (bad) mov jnp xchg cs add lcall iret sti stos scas xlat jge push push dec inc pusha sub pop lret stc xchg pop pop popa insl fsubp sub insl xchg cmp arpl xchg inc test adc jbe mov jg jbe movsb (bad) mov nop cmc sarl or sub fistpl das lret xchg cmp insb cmp cmp fistpll mov dec inc test xchg pushf pop shlb imul cmp xchg enter add imul dec xchg xchg ds aas pushf dec ss aaa mov push ds repnz aad arpl icebp daa mov or icebp mov jle arpl push stc aam jl cld push dec pop mov mov push insb mov fidivr xor or iret icebp imul test push add inc dec cltd (bad) xchg pop es js call ret pop outsb fdivs ret movsb or cli push cmp sub gs and jmp shr add xchg icebp in lods in sbbb mov lcall arpl aam inc mov mov push ret adc aaa dec icebp cs dec lods outsl (bad) xor adcl scas or rorb sti in and xor xchg cmp sahf (bad) sahf insb loope jge daa sahf cwtl sti mov sahf in pop stc jl push mov icebp xchg add jmp stos ret lret lds lds mov outsl lcall mov mov repnz dec mov les push or xor inc js ret (bad) mov push dec pop push inc lods dec call insl fsubl shlb push inc pop movsl xchg adc dec gs mov ret outsl sbb xchg lcall and jecxz cmp or mov mov mov ficomp mov jnp push mov ret or clc test fisttpl lret js dec mov int3 test push or adc hlt pop or mov mov jge nop cmp rcrb icebp dec pop test pop push std (bad) and or inc in jge dec mov push sbb push mov push push (bad) out jecxz mov inc cmc cmpsl fisubl fdivs xor imul cmp js ds push insl dec lods adc jmp jecxz test imul xor xchg aaa rcrb add adc fs xor loope mov inc addr16 in lret and mov inc (bad) (bad) je jmp or mov jecxz inc popa mov arpl pop jecxz dec fidivl fdivrs push sahf in ljmp push fs dec push or inc adc mov fildll out mov test and scas dec ret inc or iret ljmp (bad) in sbb and fcmovne pop inc (bad) addr16 inc pusha pop lcall aad test or or cmp das push (bad) jecxz in sub loopne (bad) in test sub lret dec in cwtl loop rcrl call mov cld ljmp ret iret out mov adc mov jbe mov cmp inc xorl adc daa cli inc stos (bad) outsb mov mov pop xor add loopne (bad) mov mov cmp mov lret sbb jae mov mov and inc or sub gs mul xchg test mulb jmp sbb js inc sbb insl jo jmp mov inc push insl popf xor jae mov xchg dec daa mov sahf mov adc add cmpsb fisttp sbb and movsb adc push jecxz dec fldl (bad) jle test xchg jb movsb mov (bad) sar imul dec or out cmp cld mov call ja adc shrl notl imul fnstenv pop pop add gs and les movsl sbb setp hlt or mov ss lahf jge imul xchg mov pop cmp (bad) es addr16 dec jl daa aam sbb inc (bad) jno push and add sbb push sarb push jae enter into dec ret lods pop and cmp (bad) cmc xor push jl sub clc mov pop scas std (bad) mov out ljmp rclb xchg mov add adc mov ds pop gs ss hlt pop int daa jne add (bad) jle mov in jae and subb enter inc pop out jp sbbl das add ja cmpsb pop inc xor lcall sti dec pop out mov push out adc enter sub call dec pop movsl dec pusha rorl cld xchg sbb add dec cmp mov add cmp adc and xchg cmp sub shr pushf (bad) xchg push test ret stos mov rorl sub mov divb insb pop ljmp stos in cli pushf fsts (bad) mov dec and mov pop sbb cli notl (bad) jb xchg add and xchg incb popf cmp mov pop inc xor ret fldt xchg rolb pop jle out cltd push int3 mov xor rcrl push pop daa lods ds out (bad) mov lods loope insb sbb and (bad) jns sti dec (bad) test outsl jae mov leave add sub mov aam or fisubr add fs stc dec push hlt mov leave scas cmpl mov sub adc call es nop fcomp movsb imulb faddl in (bad) std call daa (bad) xlat pmaxsw mov (bad) mov stc in ss js inc jnp sub jno fstl cwtl sti scas add inc cmp orb aam pop inc push cmp adc lock arpl and adc pop dec mov adc ficom pop (bad) repz pop inc lock add jb setg xorl divb fbstp insb jne cmpsl in mov xor loope sub sti daa push inc and xchg in pusha int push jo add pop xchg push cltd inc out dec or clc and in (bad) jo lock enterw xchg sbb sub fwait dec sbbl xchg jl in add cli cmp or imul pop mov cmp test adc cmp arpl pop cmp test sub sbb mov jg jbe cmp testl push and (bad) cli inc jecxz into mov adc loopne bound adc (bad) arpl push jo push push mov ljmp lds xlat clc cltd out repz fmul cmpsb pop xchg lret out jno lods xor jbe das jns push lahf fwait hlt push sarb xor pop test fnstcw ficomp enter jle add shrl xor imul lahf in and adc jo or fisub jae add mov mov sub sbb pop scas jb lods or mov ljmp push pop fdivr repnz lea adc mov fidiv imul bound sti sub popl pop in int3 lods mov jle mov ljmp shrb fs push mov inc jle pop imul adc push inc out push pushf faddl data16 into jmp outsl pop mov xchg lock out subl dec jg mov stos adc (bad) jo sbb ljmp xor mov xor sub sbb call (bad) xor dec pop int3 mov jnp imul je and inc sbb in mov stos ljmp sub mov fldenv adc in daa mov fwait dec aam cmpsl xchg adc adc sub or outsl pushf sub je jno data16 stos and das dec aam jns jmp subl pop cs in push addr16 jbe sar hlt pop jb adcl fwait (bad) or dec or inc or push fwait pop push cmpl jmp mov out jno repz mov dec es and mov add scas mov fsubl (bad) mov adc inc jle pop lds xchg sbb and mov iret inc stos loopne cmc in (bad) cltd pop adc xor outsb ror test xchg out adc cmp pop ljmp ljmp inc out outsb push js insl inc lods or out pop push ljmp lret and cmc in pop inc fs shl inc aam cmp cmc mov lods (bad) stos cmp mov clc push cld sahf outsl cwtl mov arpl push mov in mov jecxz movsl adcl sbb testl mov pop sbb stos add lods xchg gs negl mov cmc aas ds loope sub jno jns ss test push popa sub lods mov paddsw dec mov xor cmp (bad) mov mov pop popf and mov sar pop mov mov push ds cs add test scas mov arpl idivb inc inc xor inc fdivs add jnp sub mov and (bad) jg and xchg gs pushf das stc mov pushf xchg sbb (bad) rolb sbb lahf (bad) mov lds sbb lds fisttp dec pop mov xor cltd (bad) pop test sbb sbb fisttpl inc xor (bad) or mov jo rorb mov pop stos or insl movsl clc sarb mov rcll fs sbb inc mov repz (bad) mov aas dec leave cltd adc dec leave xchg lods cmpsl mov inc jae cli and dec or jnp cmp xchg xchg mov xchg adc sbb and sbb adc (bad) dec jmp or push or mov rolb sbb je shr push out loop pop lea dec sub inc lret cld add ja or mov xor mov arpl lahf arpl cmpl dec mov jmp mov push popf jno test fsubrl bound jnp pop sbb lret mov insl mov (bad) mov push out jne sub dec and js lahf mov and mov sub or mov movsb mov xor jg add cmp es cld ffree mov es jp repnz pop push loope lods sbb push cmp jecxz mov mov sahf outsb addr16 and cltd nopl mov scas dec js iret mov pop cli jnp xorl mov mov jae adc fstps loopne loop (bad) xor dec pop cs jmp adc add cmp (bad) in cmp lods xchg push jecxz (bad) sbb and enter fsubrs mov mov rorl ljmp dec sbb mov sbbb and adcl push ds ljmp push call shlb js pop test xchg lret mov fidiv fdivl mov dec push mov in (bad) mov sbb cmp jg mov sbb cmp push out (bad) mov enter pop adc push andl outsl lret mov xlat call ret nop lods je cmc push adc ds repz cmp mov mov xchg mov in ret adc out fsts dec daa repz mov ss xchg cli cmp inc adc aad and test shrb mov cmpsl push mov ja or (bad) push mov cmp xor jge in add ss popf test in adc in movsl pop mov mov jecxz out push repnz in pop insl mov sbb in jnp pop das aaa loopne pop inc dec or cmp mov mov inc aas jae sbb mov push and push and dec jae mov int sub iret fcmovne jecxz (bad) mov fstl xlat jnp,pt pop jecxz (bad) sub cmp or push mov out add cmp adc mov inc ja lods aad or jbe pop sbb jnp adc mov pop xor mov es test out mov aam mov ss cmpsl fisttp data16 out lcall push (bad) mov jns adcl hlt mov sub fild daa lret xchg imul mov ja sti lret stos push movsb ret in inc xor push stos pop mov and dec int3 and pop push (bad) jae pop fistpl jg test and push mov sbb loop adc jae (bad) adc lcall aam cmp mov add mov loop push out ja mov shl mov and js insb mov mov fsubs jne xchg cmp test hlt leave push mov enter push jle popf or push or subl xchg imull jnp mov inc je fiadd mov fldcw and dec and adc mov decl push mov sti sbb push nop testl ljmp std jle gs imul divb mov or and sbb xorl popf pop and in test cwtl xor jbe pusha (bad) ret and push push loopne fs or jo jo cld dec rcrl mov jnp cwtl inc lods dec call ljmp flds push (bad) movsb and rcl dec insl push jp sbb outsl cltd rorb add xor iret or dec push aaa pop jmp faddp jae lret movsl loop imul mov cmp inc in in mov aas mov loope ret test mov inc mov arpl xor xor lret or fadds pop icebp jbe dec mov mov rcl jbe and jmp mov sbb mov push sahf sarl mov mov pop push ret adc fisubrl jmp mov out lcall dec xlat mov popa aas das pop outsb movsl push cmp in adcl leave fdecstp gs rorl lea std test pushf or and and call into loopne sub xchg xor test repz xor ret dec out mov xchg movsl lea jg rcll mov jae adc stos out int3 add xor fsubp fstl or gs jb cmp push cwtl (bad) cli and fmull jne mov test outsb mov xor and and or stos ret popf ja cmpsl sub mov int3 scas adc jns or rorb shrl inc fbstp jno fnstenv int test cmp inc add int imul xor push fildll mov cld roll lret pop adc xchg dec xor jl (bad) iret mov mov mov push pop jae (bad) repnz cmpsl adc adc mov inc leave add push mov mov mov int xchg dec pop cmp jns data16 jb pusha push xlat rorb js inc adc mov pop mov xchg add push fsubrl shrb cmp or add mov lcall and push sahf lret scas pop gs faddl ficomp dec jo mov mull out mov lahf push in pushf outsb in sub mov or cmpsl fsubrp cs roll lcall insl insl ja mov lds sbb mov mov sbb or sbb cwtl sbbl mov push or sbb push loope mov mov fisub push lcall cmpsl cwtl push sbb ds (bad) lods mov pop or (bad) sub mov mov push pusha (bad) popa sub es inc cli shll xor div sti int3 lds mov test jp cmp imul xor ficompl fcoml iret add mov insb jle or je clc mov sub daa jo pop insl jp inc mov insl xchg vpcmpeqb enter push fistpl and dec nop push iret cwtl mov ret xchg (bad) or iret out xchg mov push dec fcompl mov sbb les pop adc sbb cwtl mov inc rolb dec repz std pop pop (bad) fsubrl sub pop mov orl xor (bad) bound insl leave pusha fisubl fdivrl add lcall rorl sbbl jae push addr16 pop inc or test jge dec das cmp pop fcoms jnp fidivl or add cs adc mov aad rcrb in aaa or insb xchg mov enter inc das and cltd cltd test jne popf nop jp lods sbb push dec out or mov lahf (bad) pop mov ret jg push icebp or pop add test addr16 repnz xchg ret dec mov add push sub (bad) push pop pop iret lret pop mov jno sbb sbb daa xor into scas divb ljmp jne push leave push adc imul push add sub cwtl insb jle mov movsb and cs test stos adc adc jp sbb loop das fldcw and adc dec cli dec out mov sbb xlat jno addb pop xor cmp mov jl jecxz cmp sarl je mov js bound repz addr16 mov mov lahf or inc stc jo add sub int3 adc scas (bad) in inc fisubr in pop xchg arpl or push pop pop int3 xchg negb lcall rolb mov int push sbb fisttpll push mov xchg scas aaa aas in cltd sbb inc adc or mov push adc sahf pop jle mov and jle lods sbb cmp or outsl inc dec fstps sbb repnz mov fidivrl sbb xchg loope adc adc iret push faddl and xchg ficom mov push push (bad) in dec daa jae sub cmc fist lock dec fstps test lcall (bad) jmp ljmp fnstsw xchg aaa lock bound insb out popf pop push sub aam sarl fldcw pop lea iret and bound jecxz pushf mov dec int3 add subb add xchg test (bad) or sub mov mov lcall dec fs sbb pushl dec mov jae and dec lock in mov cltd jecxz lcall incb fmuls clc (bad) adcb movsb xor loop xor mov push and inc fist shll (bad) mov test call push sbb hlt sbb scas pop or push (bad) std mov push cmp and imul and repnz push add hlt sahf in xchg test lea pop add lret adc adc push lea xor jo dec shrb cltd jnp jbe ror xor sahf out gs inc inc ret mov out xor sbb cmpsb mov gs lcall pop pop rclb or mov adc nop ret or lret jle push pop xchg mov (bad) sub insl bound arpl leave mov pushf (bad) jl inc mov and jl xchg sbb dec sub sub (bad) xor popa xorb adc es xchg imul cmc in pop add push outsl lahf rorb sub aas jo sbb lahf xor fs xor add arpl sarl outsb (bad) lret outsb add xor and mov cmp repnz test or push push cmc je push cmpsl fdivs sbb sub xlat ljmp in sbb jl repz sub pusha addr16 push ss push std xchg mov mov ret imull inc xor outsl rcr jbe (bad) mov cmp jno subl js int3 mov xorl ljmp (bad) xchg cmc lods xchg xor cmc (bad) ss pop xchg in dec imul lods push std or aas fnstsw popf jge cmp push inc jg test fcoms (bad) adc and leave rorb leave cmp mov xchg in hlt (bad) sub nop popa add mov into leave clc mov mov mov mov stc or mov (bad) imul lock xor xor xchg or mov (bad) xor xchg aad jmp loop loop test int3 ficom sbb and adc rorb mov cwtl and mov jmp mov or imull std inc inc sub sbb pop cltd test call jo pusha xchg ljmp mov jle sbb sbb jp stos jns push jp add loope pop sub mov push mov cld shll mov rolb xchg or sbb add add les xor aaa xor loope (bad) scas lods mov sub into in sbb jg sbb call out stos lods xlat test adc or or inc sub (bad) push int3 movb dec push test fsts fstpt add add xor outsl xchg ret clc mov cltd cmp fmull mov ljmp insl dec jns sub pop and xchg icebp (bad) or inc dec inc sbb mov loope mov ljmp mov mov mov subl cmpsl imul scas ja adc or inc cmc mov pop into sub lock sub imul push pandn mov sbb push lock aad mov add cmp into ficompl adc shll xor jo fadds cmovs lods repz imul push jmp and xlat jb orl cmc lahf movsl jl ja xor fsin rcrb loopne cmpsb lfs xor rcr pop pop in outsl out dec or (bad) mov mov pushl and jmp jne jge jns ret mov fnstenv mov xor call jmp xchg jmp pop or out vandps stos mov call jl cmp sbb popf repnz ficoml out loope clc scas inc leave xchg je (bad) push stos add jmp rol pop inc aad add sub movb (bad) jb in push mov sub aaa test mov das adc iret push cmp fisttp mov mov mov lock dec sub adc nop push cmp (bad) lahf dec stos push mov popa aas xchg xor xor popf cmc insb andl subb xchg add cltd pushw aaa es inc (bad) test in adc mov int inc insl daa or in inc (bad) mov and outsl ljmp js loopne sbb out jmp add (bad) out or fdivs xlat push push insl mov pusha adc cmpsl xchg jo ss cs in jecxz mov bts mov mov in push xor xchg lret add pop add iret and dec adc and lahf lods shll sbb xor loop imul adc out fst out xor sti xor ja or ret jnp fwait push out lods jne cmc imul cwtl mov loope sbb sbb mov into cmc ss or or rcl and movsl (bad) jo js mov sti mov and int3 enter pop es pop push bswap ficompl add cwtl inc pop push or sub jp mov mov sbb fldt (bad) mov adcl in stos or ffree in in shrl dec mov pop xlat out mov and push mov mov mov jne repz cmp mov inc lea dec in testb push arpl mov les xor inc cs xchg mov jae inc out lret inc mov pop dec xchg or in sub push sbb enter add outsl out cld addr16 jnp and fmul mov shrb inc xchg sti lcall nop gs fdiv ss pop iret xchg mov scas sub in lahf js repnz ss jle sub (bad) lods push lock (bad) jb push lret jecxz fidivr and fildll pushf jle pushf andl or and pop cwtl ret stos mov in and dec or dec stos mov imul andl adc lods shrb (bad) es std cmp mov xchg dec aad imul cmp xchg push push ror push xchg outsl daa iret icebp pusha sub xor mov or sbb jg (bad) push les rorb lods loop fnsave sarb in test fs mov xor pop call ret mov aad mov rolb mov cmp mov hlt mov loop inc stc lcall insl in push aas sbb mov inc fisubl frstor (bad) mov xchg pop inc cmp push pop outsl iret aaa incl mov inc xor (bad) xchg nop (bad) aaa test rcr xchg movsl aad or inc xchg cmp add xlat push push xor jle pop ror cwtl shl fcomps insl lods pop lret jno imulb mov jg adc in xchg data16 arpl bound aam cmpsl pop test cld mov jbe aam sub mov (bad) call out sbb movsb loopne (bad) or jb rorl addl push jg sbb dec (bad) icebp icebp sbb xchg add push insl lret mov out loopne jmp insl ret lcall jns (bad) push rcr jecxz and dec inc outsl insl xchg (bad) aaa sub loopne inc test adc mov int3 cmp push es lea dec adc dec cmp clc or (bad) notb mov inc cmp sbb pop mov fldcw jp xor ljmp mov mov lea jge pop fdivl pop adc xchg rcrl add adcb and je push xor inc cmp aaa push mov loopne mov aad into bound test in mov mov sbb in cltd mov cmpsb mov ss xor (bad) sti or mov test fwait movsl jo lods pusha cmp and shll sub outsl xchg mov into mov pop repz push or lds push aam sub sbb jge je jo aaa (bad) sbb xor andl fsub es and adc cld lods (bad) adc outsl rcrb pop mov sbb mov jmp shrb loopne sbb out or int lea mov outsl and jne mov and xor popf inc dec push push clc fldt pop (bad) in jg aaa aad addr16 mov and faddl ds addr16 sahf cmp dec fisubrl jo push sub cmp repnz mov bswap adc in fldt les xchg mov ja outsb pop push test cmp jle fnstenv gs fimul xor lcall pop push adc dec dec dec jecxz inc out lock mov pop mov jne (bad) sub test push rcll movsl pop lcall mov mov js xor mov imul mov pop jae scas cmp popf fisubr ss inc lret scas mov (bad) (bad) sub inc (bad) xchg inc push jg pop mov adcl adc or inc lahf mov pushf cs (bad) push out jae leave lret out gs adc in sahf enter int3 cltd push mov dec popa (bad) in rclb mov dec pop stos add fcompl aad pop and mov test xchg test fisubr out lock and or rorl je sbb push jae out out popf adc popa es loope jns loop test cli nop mov aas xlat and sbb xor pop fwait push inc imull xchg jb mov ds xchg (bad) fsubr push out cmp dec jbe pop clc cmp (bad) sbb or fsubrs ja int3 out pop enter cmc xchg sub xor mov leave mov (bad) jne mov and out fdiv push xchg pop test inc pusha cmp inc pop and xor sti xchg in mov fs scas mov (bad) aad push add (bad) adc mov ljmp es js repnz notb bound sub adc jmp ja nop cmp and fsubr dec xchg adc jb subb nop addr16 arpl loopne fwait decl ret jge rol insl das (bad) iret xor adc in xlat sub pusha push mov push je fnstenv xor adc push lods inc rorl (bad) jo daa xchg ja hlt mov imul pop (bad) ror jo scas lods mov inc outsl mov adc nop mov mulb inc sbb scas lods mov cmpsb insl and jl or shrl push (bad) ja dec lahf adc mov out and lcall mov test into icebp rclb and mov pop mov mov xor addl aas dec mov iret push dec or iret cmc int3 call lods stc pop mov je and stos jmp dec xchg or movsb push add test popa inc pop xor lahf xchg adc xlat test scas lock mov nop arpl xchg jno int3 mov pop xor inc repnz inc into fsubs rorb dec sarl add dec push cmp mov mov test push xchg cmp dec jns or push pop (bad) (bad) repz sbb mov xchg inc (bad) frstpm(287 (bad) or cmp ret or outsb cmp imul or push loopne imull or (bad) fwait das leave push lock mov xor (bad) add cmpsb test jle mov cmp adc arpl pop aam test mov arpl aam orl pop es out into movsl mov inc xchg sti xchg das cltd or push aaa pop stc stos pop cmp fmul or lds or das nop adcl cmpsl sub je xor cmp sbb insb pusha xchg xor jp (bad) sbb xchg test jbe cwtl push cmpb mov test mov add rcrb fcoms ret repz jl mov fdivrs push es outsb icebp add sbb mov std mov dec out dec sub repnz sarb sub mov sub dec clc xchg scas int and imul repnz jmp (bad) jb lea xchg nop in add fistpll rcll out dec push fisubr jg jae shrl cltd mov lret sbb les addb jmp mov lcall lods mov ret push rorb shll sub pop or mov aaa sub sub mov sbb inc mov pop addb das or adc xlat xor (bad) imul popa (bad) push adc and (bad) push xchg jno,pt dec lods mov into mov test les push inc add add sub pusha loop or mov inc into das mov jecxz out pop divb adc stos adc push sbb movsl jle lds push es and pusha push sub pop xchg mov pop stc push pop mov push dec mov push jl mov jnp adc dec lahf loope sbb sub dec dec nop add repnz mov jmp test pop push pushf cld cmp (bad) jb jl in mov or mov push dec jmp inc adc xor adc jmp insb mov mov pop imul jne arpl or xchg in ljmp scas nop cmc mov mov fcoml dec imul test mov jae cli scas call or shld sub pop orl add mov clc ds adc mov (bad) pop mov out pop (bad) in and loop jne sub sbb sbb rcll scas sbb ljmp das adc and lock add xchg subb (bad) cmp cmpsb mov repz insb pop shl cmp imul mov jle scas stos jge xor jge sbb and je mov aaa hlt xchg cmc enter jbe into jb out sar cmpsb int int dec ljmp jg mov xchg addr16 int3 clc push push int call cmpsb cmc aas xlat mov leave fdivrs pop outsb and push mov fcos fcmovnbe sub sbb outsb in inc ds imul xchg mov sarl fsubp scas xor mov mov xor jo or mov mov iret push cmp icebp int jae fwait mov in std and sbb jge or mov or movsb xchg mov sbb cli ds stc sahf mov test dec jns jne test cmp leave push fmuls mov in andl data16 imull sub pop mov rcll shr sahf int3 fnstsw sahf ret (bad) xor lcall stc test pushl xor xor (bad) inc sbb dec loope mov (bad) jb pop shll jns mov test js stc outsl jno out ss ds pop sub pop jns loop (bad) iret (bad) mov mov in ret dec rorb sbb in adc jmp push pop cmc dec jmp push fnstcw xchg andl jne scas push movb xor das ret aam hlt repz hlt ss in test mov or jnp jmp push pushf xchg fadds (bad) cmp xchg subl test mov fwait push pop and add js jp (bad) mov sub test jp cli (bad) xchg scas cltd jmp (bad) jmp push stos and push outsb data16 sub fldl mov xchg xor inc mov sbb mov xor pop std (bad) fwait pop or rclb test jns notl inc mov push xchg outsl cmpsb lret fsts arpl (bad) xchg pop mov js jbe xchg aaa mov inc mov or dec pusha and cmp sar inc test push shrl push mov cld jne mov bsr pop add mov mov and jg dec inc dec sub addl adc fnop push add adc add adc movsl mov sub fsubrl xor jecxz jnp (bad) js das test sbb mov jne sub (bad) fcompl pop mov jle pop int outsl jo fwait sahf pop sarb aas xor mov cwtl dec adc test push dec ja hlt inc pop cmpsb mov call movsl stc and mov (bad) sti daa hlt aad shl dec repz aam xchg (bad) mov icebp (bad) fildl add out jo push sub in xlat push loopne addr16 dec xor mov call xor dec (bad) mov add rcl js push pop mov or outsb jno inc daa xchg jl jns xlat and jp loop jecxz adc fs pop cmp lods pusha cs test adc es xor cmp fistpll ret outsb push mov push mov movsb push xor lock lcall push (bad) mov hlt adc xchg ret aas fnsave xor ds mov or or mov or mov mov dec scas sti orb push lds sti lret loopne jl lcall mov mov push jmp out inc dec into cld fcmovnu cmp xor inc fldcw dec mov mov cmp imul out pop pop xchg xor int loope and out (bad) jno mov push and mov sahf es les pop mov mov or dec jp out das dec adc pusha lock adc shrl cmp push daa cld sub mov lret jne dec mov jg jo cmp outsl mov (bad) out aam ds dec pop clc jo shr xlat (bad) cmp int3 jno add cmp push std cmc xor sub (bad) add add mov add arpl les or add iret int3 or mov imul das push sbb jecxz inc or adc or push push (bad) and je cmp lods dec jo ss stc fadds sub into mov mov and popa push xorl sti cmp inc lcall loop es jne stos test ret mov dec cmp and int3 sbb aaa (bad) div adc stos cmpsb jecxz sub jmp mov xchg sbb mov outsl mov clc int3 out loopne inc dec ds ffreep mov in xchg lahf xchg dec stos inc pop inc jecxz jns pop jbe add lods cli out pushf sbb cmc adcb loope test rolb aad pop or es shrl push outsl cld loopne sbb and mov mov enter jae in adc xlat test mov fwait and movsb and dec fcomps sub aas repz arpl or lds mov mov fbstp xor sahf inc insl lret xor adc lahf cmpl cmp mov sub repnz lods popf je sbb dec dec jb (bad) in and xchg int3 pop test nop mov mov push xchg or aas cld out mov aad pushf popf test enter cs data16 fmull dec stos insb cmp cmpsb and stos popf mov cmp fcoms pop pop mov lods cld icebp push imul pop xor cmp (bad) lcall mov jl mov cmp cmp pop in sbb movsb mov sbb lea ret push aaa in add dec (bad) mov dec inc jno push out inc mul push test pop or xor out push rcrb dec loop mov aad clc mov cli add les pushf push sbb fstpl inc rolb mulb jecxz out lahf xchg cltd jge push jle ret pop sbb adc xor jb inc xor and mov sub push dec popa inc mov dec push outsb cmp jae aas add out push dec inc ds rolb xchg aad sub ss lods cmp add cwtl loope mov push push mov sbb inc and mov inc ret pop jle cmpsl push pop imulb and les dec sbb jp jmp add in and decl shl arpl jne leave pop push add aad dec mov pop jp jp mov xor stos xchg jb push repnz push dec push scas sahf cmp cmp jbe mov (bad) mov push inc mov xchg imul pop push push inc sbb xchg out iret (bad) fnstsw mov xchg mov rcr lods dec cmpsb sub sub mov sbb mov (bad) std cmp ret xchg pop ss dec mov sub pushw cs mov repnz jne aaa arpl in test mov push mov inc mov cld and fidivl inc pushf test popf andl (bad) jae adc xor es cmp xor ljmp pop cmpsl arpl sub push dec jmp repnz lds daa mov lret push mov jb xchg jno inc push in and inc bound (bad) movsl jp add in idivl xchg outsb imul cmp mov lea sub test pushf jo add and or push popf cmpl xor push pop aaa inc mov dec sbb mov sbb aam addr16 fnop fisubr testl popa enter fnstsw and mov cmp sub cli call push mov ja sbb push sbb sbb push cmp cwtl into nop daa jmp inc cmp pop repz insl cs inc jg es mov ficompl sub into and sbb push and mov or or fcoml xchg out inc (bad) dec mov cmc bound sub loopne (bad) roll clc loop mov jae iret lcall outsb das or mov int aas dec adc mov mov pop fs or or and (bad) cmpl or loope mov add push jle push jnp pop mov sbb outsb push xchg stc mov je adc mov pop push push pop out pushf fucom sbb repnz repz sbb sti inc cs sarw lock mov dec inc sarb clc cld xchg push lods and sbb xor scas cli cmp shlb cld and mov jns int fs sbb fnstcw lea or fwait xchg (bad) cmp stc notl idivb mov inc add push push inc in jb cld (bad) in out sbb inc and cmpsb movsl dec jg jbe ret int3 inc lods lods movsl fdiv cmpb mov test dec lods test pop arpl mov adc pop (bad) aas xchg stos mov cltd cwtl xor sbb cltd arpl (bad) adc rcr jmp (bad) jge mov out movsl divb gs popa mov inc inc mov pop sar sub add mov cmp aas lea cmpsl ljmp outsb psubusw repz mov pop push (bad) std out jo movsl pop lea (bad) xor sub inc and (bad) movsb (bad) lock hlt cmp test neg cmp and pop xor test (bad) jl xor cmp sub cmp pop sub clc or fisttp push jp xor test cmp xchg adc cmp leave adc test aad xchg sub cmc dec mov and aam sbb mov fimull cmp jge call push xchg (bad) xor mov mov dec sub cmp out cmp cltd lock test daa icebp mull dec in roll mull push popa cld jae and inc in stos mov aam fist adc mov and mov mov imul mov hlt cmpsl mov inc clc arpl aas inc push leave enter and outsb sti sub xor sbb push xchg cs jbe rcr jae mov xchg push jo test xor scas inc dec push lret and movsl pop pop das push dec stos mov inc scas in push lods inc hlt sbb ret push add mov cmc insl out sti in out (bad) (bad) inc mov js mov xchg adc movsl scas test daa or inc lea mov cmpsb repz inc pop ret mov punpckhbw pushf cmp (bad) loopne sub push icebp (bad) popf int lcall lods clc push cli mov lahf jl add popa sbb push jmp cmpsb mov ljmp test adc sahf sbb ret xlat xchg call or mov dec sbb or jg push jne gs (bad) pop or icebp add in pop enter ret sub clc ss push mov push sub add sbb nop ret sbb jno insl cmp repz aas call rolb lret sbb enter mov vcvtps2dq fwait call and lds add and pop mov cmp cltd mov int3 aad fidivl in mov lret push rol movsl and xchg add cmp sti dec cmc lahf pop jns xchg gs jmp inc xor push mov shrl xor add sub cmp pop lahf (bad) imulb jge mov sahf mov out xor ja (bad) mov mov nop xchg mov jmp ret lock sbb pop or popf push jg sbb out imul movhps sub mov mov ret push sub xor sbb adc jnp adc pop mov pop scas loop outsl fidiv enter push lret xchg iret movsl mov mov sub jecxz es sub push (bad) lods addr16 fsts jb dec and fldl dec shrb ret ljmp pop shlb add scas loope aam and pop fs movsb sub or gs fsubrp or jle mov fbld inc jns inc pop out scas mov cs cmc or adc sub hlt fisttpl inc add jp sbb in movsb and clc sub inc adc sub lret pop in sbb xchg cli (bad) rol ret adc inc pop push sahf and pusha or repnz cmp mov push mov pop and push fistp cmc pop paddw add es jne daa sub lahf pop adc lock adc dec cmp add add sahf add pop xchg mov gs mov sarl ret pop (bad) (bad) out sub es (bad) ss push xchg das sub movsl inc repz enter nop pop cmpb mov sbb xor pop stos adc inc dec (bad) mov mov inc mov mov sti xchg inc std push repnz push xchg adc (bad) sub mov out das fcomi xor pop fmulp mov mov cmp mov call add scas dec pop jecxz sub xor mov and xchg bound mov faddl icebp ja movsl fistpl rol ja dec or and push fxch dec fs lods xor cmp fdivl xchg lods fdivl add adc adc mov xor das pop icebp xor fcompl mov fwait and insl jg adc and push inc (bad) imul loopne clc push xchg cmp xchg in scas pop push mov jmp lds cwtl jg xor mov mov call fidivr mov scas into mov inc sti sub cmp jmp cmp aam (bad) ret aas int3 xor imul out std dec outsl enter pushw aas bound xchg lret inc pop cwtl in cs xor jb cmp mov sbb pop adc or lret aas add aad sub jae xor push jo popa clc jb or cmp mov fstl rcrl cwtl jle inc sbb pop nop lods cli push xor mov cs xor sbb (bad) mov mov outsl xchg lods or mov std (bad) outsb iret sbb mov adcl pop imul or xor xchg ljmp popf jo in pusha nop out ret cld push enter aam mov es mov inc stc loop pop adc or mov mov dec sbb fdivs mov sbb out ret ror sub mov xchg sub call add adc mov cmp inc aas gs in mov push in inc test sbb xor jns int3 (bad) pop mov std ss mov or addr16 pop outsb (bad) dec inc cld clc mov insb (bad) sti lar bswap rcr jle aas lcall xor pop xchg jmp aad cs pop clc test stos mov cmpsb adc add xchg popf (bad) mov dec push pop add es and dec dec imul push ret cmp (bad) repnz imul imulb mov jbe and fimull imul inc add push xorb pop test lods loop push repnz fisubr or mov aas adc lahf lcall push cmp int cmp sub enter rcr mov dec ret loope xchg ror pop mov cmc rcrl pop mov cmp push cmp (bad) je sbb and or insl jbe (bad) cmc in xchg sarl jge push out mov iret push out dec mov mov test or cmp push inc movsl icebp push adc lea xchg push pushf outsl outsl xchg lret jge insb ljmp fildl cmpsl push fs fsts push jg cmp adc push pop mov sbb test inc out mov jbe push ljmp adc jmp and lods repz add loop sub jnp (bad) ss data16 jge (bad) into push repz cmp lods in sbb mov les pop shrl cmp bound (bad) imul add push cmp test in jmp (bad) cmp stos xchg cs inc stos xor pop (bad) dec sub lods sub sbb add (bad) push lea pushf mov nop xchg sbb or push xchg imul inc pop (bad) pop lock cld (bad) lock pop fwait add push dec fucomip pop pop xor pop adc lods mov stos lret pop jecxz ds push (bad) mov clc inc (bad) adc push out push sbb aam lcall xchg dec shlb jle cmp and repnz nop xlat or sarl (bad) (bad) or mov xchg pop fdivr das sbb pop out add dec pop les rcll orb daa xor jle imul xchg fdivs jecxz fildl xor les mov lock int3 jb call pusha or inc movsb dec ss mov push cs fimull mov lods or jg mov mov pop xorb insl inc stos (bad) pop test mov data16 loope mov fldlg2 stc aam mov sub dec call jo mov dec jae addr16 inc out jne mov sub xor inc ret mov ljmp push sbb ficoml fisub dec lret mov pusha stos es rcrl stos pop and mov or push sub xlat das jno mov cmp adc jecxz lret cmpsl repz mov mov daa mov mov jge (bad) xor xor jmp cmp test ficompl push into dec cmpsb outsl pusha pop andb add es and jno add outsl in push and inc pop push int3 jo idiv aas idivb sub sti shl mov sbb lds (bad) jne sbb mov decl cld xchg cmp pop push pop lcall fmull lea sti or inc mov xor test add sub add fwait rorl lods pop mov xchg iret imul cmp and pop nop (bad) ret out loopne pop and mov inc mov inc int repnz mov lret stos (bad) ljmp bound dec lods movsb das in sti cmc dec dec fiaddl lcall popa inc inc frstor cmp aad cwtl (bad) fwait fs mov mov pop push out pop leave stc lea cli cs xchg imul xor mov mov movsl jbe pop cmp std shl scas add in enter enter xor bound shlb mov or out push jmp loopne xor jb pop mov jbe movsb dec cli xlat xlat (bad) les pop roll xor add div test pop or call jno jge xchg inc jmp mov cmp (bad) in out sub inc sbb xor fidiv (bad) cld add push xchg pop sub (bad) or adc push mov mov push mov mov mov cmpsb loop cmp mov popf cwtl cmp repz xchg (bad) xor pop nop inc fistpll mov aam shll fildl hlt arpl roll pop dec and jmp pop (bad) xor jmp xor scas or jns,pn jl cli arpl sub mov cmp iret mov je jle stc movsl stos popf push sub mov push scas inc push or and inc mov ljmp sub push std pop mov idivl movsl dec jnp sub jno jecxz or sti cld cmp push cmp and pop xor sub xor mov or cs (bad) mov mov movsl hlt mov lea xor pusha test cmp or jnp push test arpl loopne fcoms add cmp lcall mov jg nop sbb or fdivrs jmp xchg sbb dec fildl inc sti sub or inc mov mov xchg aad loope adc sarb and stos dec push mov jne mov sarl dec repz mov xor jns inc in mov or push push sahf fdivp fchs jge fwait js stos inc mov or iret aad lahf xchg in pop mov lahf jg fisttp inc sbb pop std dec cli clc jbe push mov cmc add pop les ja jl icebp cmpsb jge rclb lods and cltd push inc (bad) pusha dec mov mov aas (bad) enter inc sbbl inc cwtl and out fcmovu (bad) mov das push mov out ficompl mov inc repnz sbb gs lea push insb adc cli xlat int mov lock mov in (bad) cmpsl pop add aad (bad) aaa (bad) (bad) mov rorl lret movsb rorb int3 (bad) mov add mov es jle mov ja nop loopne xchg sahf rorl cmpsl fwait pusha mov clc (bad) aad ja int3 loopne push cltd testb addr16 cmp pop pusha js push out xchg sti das gs and mov or (bad) mov pop orl push push shlb test mov (bad) mov test jecxz fimul inc xchg test (bad) imul mov mov cmpsl pop les push xor inc outsl dec mov (bad) jecxz test add dec push int3 repnz stos xchg cmp daa add jl pushf outsb fcmovnb sahf es cmp fdivrs arpl sarb inc adcl loopne jp jmp and sub sbb inc jp inc mov in add or sbb mov cmpsl add cld pop dec arpl movsb jecxz loope mov mov pusha push lods and push jnp pop cmp dec je mov icebp dec pop or push and mov imul sahf sub mov sub push jns pop ja xor xlat jecxz lret xchg sub push and loopne sub ss push jne mov dec fstpl outsl cmp scas popa pop push ds and cs mov mov in daa rcrl stc pushf xchg sbbl pusha cld mov push sub dec test xchg jmp int3 xchg ss mov mov sbb cmpsl popf push nop xor arpl jg aad dec mov (bad) stc mov mov sub dec imul jecxz in jb jbe mov sub sub lret negl and int3 cmp (bad) cmp xchg sub sub jl movsb imul repnz (bad) jg gs pop dec sub mov jmp mov sub mov call or mov popf daa sarl sub add xchg xchg aas mov bound push (bad) adcl dec mov inc push or loop sub movntq (bad) sbb stos push sub jbe add push jle insl and lea cmp push (bad) cld rcrl push imul or div int inc loopne je decl hlt push in sbb cmovs dec dec mov mov in inc mov jbe loopne push xchg or (bad) call rcl sahf arpl sub mov mov push push adcl add jnp,pn shll xor pop xor or xor mov sub and lock addr16 mov out sbb jno xchg cli and insl inc sub insb and in and jb mov hlt pushl dec fisub lods xchg cmp (bad) hlt dec je fsubs orl icebp cltd push jle lret loope stc or adc call xor and fiaddl repnz and int js fstl sub clc mov aas adc xor (bad) mov cmp lock push ds mov pushf dec cmpsl add pop and aad test js mov lea aaa addb cs pop mov adc xor push ljmp inc fs cltd mov aas mov inc and out sar iret mov xor or inc push mov or mov add lea lods out and ficompl sahf fld nop add or fisttpll jecxz flds pop repnz jecxz push add fist dec and push jbe ds and push dec jp push jo add inc jge cmpsb outsl mov popf scas int3 (bad) or cld (bad) aam adc arpl or add push or mov (bad) xor pop pop fsubrs push loop aam iret mov fcmovb xchg repnz mov or push shll out mov sahf data16 lea mov cmpsb movb icebp or test test aaa xchg inc or adc clc push (bad) sbb mov or mov lret push lret pop cmp shrb lcall jno cmp (bad) in imul mov dec sbb or imul push (bad) mov lahf out pop daa insl dec lahf imul fwait rclb dec dec out jnp ja lea dec jno add pop add push inc sub mov lock repnz push pop test dec push xor mov cmc lahf push loope inc mov es repz pop iret in pushf jmp popa and fiadd inc mov jne adc and lahf hlt mov add (bad) call ror (bad) lods arpl sub ss test dec jb mov int3 sarb mov or mov imull arpl cmc adc push dec imul imul sbb mov test jno and js mov inc sbb add arpl push push adc add rorb (bad) jge or (bad) cmc fdiv pop ja call daa mov test das mov (bad) push xchg or adc stc dec xor fdivr mov test les mov test (bad) xchg or pop adc ss lcall imul lcall push sub lock mov divb xchg fstpl in adc fcoml into addr16 or xchg cmpsb loop (bad) push dec call push test jmp mov jmp ss xchg dec sub ss mov or xchg sub aam je fbstp cmpsl repnz mov lds rcrb nop jp cwtl outsb movsb ljmp popa aas aam jno pop adc xorb mov add arpl sbb pop inc xor push push inc mull jp adcl sbb adc xor insb test add sub fwait xchg adc das (bad) xchg mov mov mov push decb mov sbb pusha mov dec adc insb and in adc and icebp add out sub pop test ds les inc push xchg int insb lret or sbb sub mov iret xchg pop or je cmpsb icebp ljmp mov imul mov pop sbb (bad) and loopne daa das and insb jge fiadd aas jo scas and cmp shll lea in pop inc pop stos test xor jo xchg sub add xor mov and into repz call xchg in outsb inc lds hlt xchg mov mov insl cli push test pop call cltd mull sbb xchg dec sbb negl mov lahf (bad) cmp out dec pop cmpsb mov sub mov (bad) jp mov push sbb push or cs adc scas (bad) test cli adcb mov lret mov pop inc popa sub out cld push neg mov mov xor hlt or inc into in pusha into push fldl2e adc cmp into xchg mov lock ret (bad) xchg sbb scas mov aad mov clc mov aaa out mov mov sahf jo,pt mov mov dec sti pop and test lea push rolb les sub aam jle mov mov pop fidivrl in stc stos idivb pop add mov jmp mov cwtl add dec cli pop jns mov add rcll cltd jecxz nop xchg add adc loop (bad) or mov mov pop fsubrs mov pop mov lods and imul insb inc shlb dec xor (bad) call (bad) icebp mov sbb das push sub subl icebp jns lds cmp cmpl sbb cld add loope es cmp pop inc jnp dec flds mov sub rorb sbb scas leave popf popa mov rolb es bound iret xchg or mov ds dec dec fistpl and xchg cmpsb fstl fbld ljmp xor xchg sbb loop int3 leave out and ret (bad) popf sbb ret push nop xor adc xchg shrb xchg jae (bad) sub and test cltd ret inc cmp xor pop cld cmpsl mov pop packssdw sti dec popf push cmc mul dec loop fs les jp insl data16 fdiv int sbb or mov push in dec imul es push popf je nop leave lods push subl pop loop addl out inc insl pop adc or cmpsb jle inc loop inc or mov jge stc dec or clc lods fwait mov mov jb add pusha sub mov pusha mov or xchg (bad) psraw divb mov mov add test shl nop xchg jmp add (bad) enter movsl inc or test push lret push repz cwtl push mov mov inc push pop mov sbb adc lods cli and sub add mulb or xor fmulp movsl sub call (bad) cmp mov and dec call pusha mov push push lfs lea (bad) mov sbbl sti dec stc pop lret ljmp xchg daa aam or adc ds ljmp jo rorb push in add push cmp sub (bad) int test cs (bad) dec addr16 fcompl xor repnz mov je (bad) std mov fnsave or pop inc pop std stos cmp inc neg icebp lds fstpl add jg pop sub cwtl cmp seta xchg mov mov pop gs leave cs jae sub mov xor and inc lods int mov lret mov loop push mov lds jno pop push add pushf mov sub out sub loope rolb jb (bad) popf popa mov mov cmp js dec into inc cmp jp gs pushf inc idiv pop and popf xchg adc cwtl insl inc push mov stos fimull xchg fldl add and (bad) cld dec leave fwait cmp (bad) insb dec stos xchg aad lea mov mov pop cltd ljmp jae pop mov enter jnp add jp outsb push adc adc push or icebp ffreep sub jmp jno out mov not test mov pushf jl movsl (bad) lods out push pop sti call pop pop nop sarl aas xor scas pop pop xlat xchg inc sub cmc pop sbbl xchg inc inc add mov mov sbb cmp dec dec dec testb mov test mov stos push movsb or arpl je pushf loop sbb hlt adc pop dec mov icebp cmp call popf (bad) push cmp push adc cmpsb enter and mov movsl ds test adc mov jo cmc leave cmpsl or das adc xchg or icebp add jns aas out push repnz das in movsb sbb pop jg mov jmp sbb jo ljmp xchg jno xchg inc sti aad push inc mov shrl das xor arpl in fimull insl or outsb lods ret dec cmp mov mov sti call loop (bad) int3 pop pushf mov lahf sub jge dec (bad) sarb insl add jl stos or mov fs das popf pop fucomip jne ret or and xor sti sub stos (bad) lea mov inc inc cmp or inc inc inc push sub jne mov and adc nop dec push nop jo cld out aaa das cwtl pop mov mov aad aad jae mov push pop inc pusha mov outsb int3 stos or xchg hlt xorl xchg mov out mov popf jns stos hlt bsr lea add fnsave xor xor adc jnp sbb sti ss shr mov mov bnd cmpsb dec daa rcr pop mov je jno sbb and cmpsb out mov lea mov test mov xchg sub jge,pt lods and (bad) sbb cltd decl shrl sub dec out daa scas push roll and lretw inc mov dec test mov das icebp jne push or push jne aam jp mov inc or dec jne xor cmp and and xor mov and dec std xor pusha jp into add xor outsb andnps add dec xchg ljmp clc repz xchg loop or push cld cmp cmp push call daa pop and xchg movsb pushf push sub xchg push mov cmp sub xlat push rcll fwait jo push cld outsl mov sub push pop loop movsl xchg mov dec mov jecxz mov cmp cmpsl pop adc pop leave add popf mov cli std cld sbb inc sahf stos ja daa repnz mov push jp in sub push dec xor add xlat pop dec xor push sbb xor (bad) mov insl adc inc push adc sbb mov dec (bad) loope (bad) out mov inc push ret mov xor addr16 push popf mov mov (bad) cmp test icebp mov mov pop repz mov inc mov adc fstpt jp sub and out xchg popf and add enter mov stos es sbb xor scas imul and jns ret aad xchg sub mov ss (bad) ljmp (bad) mov jae (bad) movsl call adc add and outsl hlt ret inc aam dec and in sub jne xor and pop mov repz push adc pop pop imul insl push pop jp pop inc inc in repz xchg mov mov mov movsb cltd push aam cmpsb sub movsl lcall xchg bound cmp cmpl es xchg test leave retw fildl lock mov and jno pop aam and jbe push stc cmpsl add lret and int3 mov cmp outsb imul fildll pop les rol outsl imul in test into push mov mov loope and dec int pop pop out inc fildl add outsl out fsubrs push mov (bad) mov test sbb inc jmp js and cmpsb fs pop xor push arpl add leave fstpt push xor inc mov out insb enter stc popf nop aam enter ljmp cmpsl mov add fwait sub es in out or mov sbb and arpl dec aad xorb or mov mov and je lea pop fwait cmp adc lea test jnp stos out sbb or nop mov push ljmp or ss jg add ja jecxz lahf (bad) lcall lret les cmp sbb mov cs mov mov cli movsl jno arpl test arpl aas push add adc jbe sbb movsbl mov inc dec sarl dec icebp mov insl jnp les mov cmp pop xor add incl mov call cld mov ret icebp setbe mov sbb add lods mov push repz and jge jge xchg mov inc push mov aas cmpl sub mov dec shl mov xchg mov adc dec cmp sub ss mov sbb mov sbb pop icebp sub jge mov into js movsb ficoml imull mov jo push cmp out fimull pop inc gs pop pop pop stos inc inc lcall cmp hlt ret and gs fidivr ja sbb and das xchg repnz roll pop ja xchg nop mov pop mov xchg lret jb enter jg enter fstl popa pop xchg mov bound sbb mov in stc fsts aas mov adc inc (bad) xlat lret jo jge cmp jae push push jb inc push loopne fistpl int3 fistpll daa jns and (bad) xor dec mov push or mov mov aad lods sbb jge and loope imulb fisttp popf xchg scas lock outsl and aas push cmpsl inc cli iret cmpsl test jno lods fldenv hlt mov or repnz xor lds lahf fildll divl imul or inc xchg and inc icebp imul mov adc mov fnstcw mov iret jp loopne xrelease data16 push call jne or add cs cs (bad) sub or sbb mov call mov dec movsl push xchg pop add inc dec xchg aad dec shl jmp xor cld mov jo aad mov xchg xchg xor fdivs or rol jl aam (bad) loopne mov rol dec insb mov (bad) std insb fs cmp lret popa pop insb std xor outsl stos sahf push mov jmp repnz nop adc test cmpsb movsb fstl insl add inc js jecxz int rolb mov scas jle shlb push test je aam fcomps xchg xor das loopne mov out adc in push pop cltd mov repnz hlt dec add fs and sbb ja xor cli push push ja mov arpl cmc dec setns sbb cmp mov mov (bad) cmp xchg in int3 jnp mov ret jp or in xorl shlb xchg insl jge stos dec jecxz xchg test dec xchg jp push cmpsb js or mov sbb int3 mov mov mov cld bound loope cs ret insl shlb push adc cmp cmp push ja xchg mov mov bndstx outsl insb mov or mov into ss cmp adc enter or xchg xor mov (bad) jecxz add lods sahf push add aam stos inc in push shl (bad) call jg inc cmpsb flds or je pop xchg mov shrl (bad) cmpsb loop dec push dec cmp pop sbb (bad) mov mov add fnsave adc cmp jns (bad) ss in cmp lds sbb outsb lcall sbb orl repz cmpsb es hlt xlat in sbb pushf sbb imul test sbb jmp cwtl loopne inc push es repz or mov insb cmpsl std stos fwait aas es add inc sbb fmulp lods add aad cs sub ljmp xor cmpsb mov xor out or shll loopne and in xor or outsl fldl rcll (bad) xor jg stc pop fsubrl mov pop in cmp dec jns daa mov repnz adc (bad) sbb imul into cmp dec cwtl mov inc cld xor movsl popa xor lock sbb xor imul push (bad) lea inc (bad) aas (bad) sub in das pop lea pop adc arpl addr16 mov (bad) arpl stos mov aas xchg dec fild sub mov push loope jnp adc jmp loop lret div and pcmpgtw dec out mov test test int stos pushf inc xchg dec mov call and imul xor cld sahf lea (bad) enter add xchg popa stos xor cmpsb add fcoml imul xor pop xchg pop inc pop jns pop loopne push test lock mov add outsb shl sti imul insb mov dec pop aad lock dec and cmc jp push xor test mov xchg jmp mov aad mov loope dec jp mov shr fcomps sahf mov lahf mov and mov lds insl push out xor std adc push ss dec adcl xor xchg fcomps cmp fmull inc shll lret movsb sbb (bad) pop push data16 incl pop mov adc enter jb mov sub and add xchg test je (bad) xor push cmpsb dec int out dec in in out decb mov in bound loope lret jno (bad) idivb lahf cmpsb sub cmp jge inc ja xchg mov sarl cmp popf push ljmp sbb scas out lock ja (bad) jmp sar jo lods dec lea int3 pop adc nop stc push sub insb sub and xor jbe mov push lret xor sahf out test out js pop sbb fsubrl aas (bad) aaa mov inc arpl loope inc adcl mov ja ret xor ret mov cmc (bad) out dec cmpsl jae lcall push sbb stos (bad) bnd dec xor dec mov add inc fsubrs inc mov lock xchg dec fisubrl inc dec mov xchg mov jnp dec inc bound dec push out pop (bad) lock imulb mov imulb cmp lahf test std mov mov push (bad) ljmp testl cli xor negb outsb mov mov pusha jno jo dec or in test mov add inc test out push cmpsl ljmp dec add xor iret push int3 adc xchg push jno cmp cmp jnp dec lret inc adc mov enter dec mov lds icebp push and dec aad ss fwait dec mov xor sub popf jmp cmp and fstpt push insb rolb fcomip pop sub push push arpl andl adc push lock and mov xor outsb fistpl jb sarl decb imulb ljmp lcall mov ljmp dec ss sar jb in cs orb loope pop movsb cli pop push mov enter adc stos jecxz icebp xchg add xchg je inc inc call js push inc or push scas adc sub cmc in cli out pop add pop xchg push push out inc mov adc outsl adc and jnp pop mov xor frstor dec dec adc ret pop pop fsubrs js jp (bad) sbb push jmp jbe adc clc ja add and cmp icebp xchg lds test fwait cmp add xchg scas out cmpsb or icebp stc cmpsl cmpsl dec into cs sub or stc and pop jne pop ja pusha in in cld lcall inc pop inc addr16 in fisubl (bad) mov mov sub mov adc ja jnp pop fwait arpl push std pusha lahf sub fxch cmp insb rcll in and fiadd ljmp sub (bad) lods xor ret cmp mov pop (bad) cs es adc inc mov mov hlt lods mov gs jo cmp pop mov scas iret push adc popf test fidivl inc and mov aam pop mov jbe xchg xor xchg xchg aam xlat add in mov mov iret sbb icebp shrb pop jg xor dec push sbb mov or mov dec ret stc and cmpsl lock cli mov leave loope jb mov jle sub loopne mov inc xor clc xchg fistl movb leave scas ljmp sub mov pusha push clc cltd mov dec mov cmpsb outsl out (bad) pusha out pop mov push xor dec test (bad) (bad) dec imul test aaa add sbb imul cwtl sbb jge mov pushf inc lahf lahf xchg nop cmp mov out and out jmp cmp cltd mov nop in inc inc outsl insl clc lds loopne cs sbb pop repz fisttpll cli test scas xor jnp mov test cli test jno cld ss popa into fdivrs jns mov sub (bad) jg cmpsb mov pop sub fidiv loope dec push or mov inc rorl xchg loopne add pop mov mov adc add test xchg dec (bad) (bad) mov std and sub cmp enter mov or push dec aad xorw jb xchg inc gs or cmp dec imul clc mov mov jb rcl cltd lret or ret push pop or pop loop pop and pop das mov iret cmpsb shll inc pop inc jo sub jle test cli mov pop mov xchg jmp data16 js stos sub mov push mov sub cmp sub sub scas push cmc orl and rcll adc pop push add push mov adc jb pop and xchg or or fistp xlat outsb stc jne inc xor fstps test (bad) ja jo push lret vmread pop daa loope (bad) js nop ret mov (bad) ja out sarb repz (bad) enter inc fiaddl or cmc cmp mov mov lahf (bad) adc jmp mov repz sbb insb outsl inc (bad) sahf inc push stos mov test jno pop xor leave push mov add xor sub in cmpsb lea mov mov loopne and jns cmpsb sub mov pop enter xchg or sahf sub mov daa popa inc sti rorl movsb jno and lds iret dec xor cltd ds adc add fldz (bad) push dec mov xchg aad fidivr jne imul mov mov dec or pop (bad) mov outsb fldcw mov bound jnp aam mov jae push ret test inc iret cmp xor inc jb fwait inc sbbl dec lahf dec xchg sbb xchg notl push jmp xor into xor js ljmp test pop or sub jbe jo out mov push dec loop insl or jns or sub ds mov arpl loope jg jno xchg das fsubrs sub shrl xor subl fild movsl adc insl xchg cmp aas mov (bad) push lods cmpsb les sub mov in lret push inc jl inc int push (bad) popf jmp push stos dec cmp or jns aas int jle ja and or fs mov aam jge jmp jmp push rcrb pop push test push bound clc mov sbb dec sbbl or fwait jle xchg les sub pop mov insl pop lcall outsl sub dec sub adc xchg sub aas aad pop push xor scas in mov adc fsubl cmp mov xor sbb jno add icebp (bad) scas xchg test fcmove mov or pop dec or std clc iret sub dec adc fdivr (bad) adc adc imul push inc sub test pop enter or (bad) xor (bad) lea xchg in fstpl stc loopne cwtl (bad) xor hlt mov (bad) pop ret adc jo sub jle outsb adc mov push (bad) scas push mov std test das sub or inc xchg mov je or cmp pop adc xchg xchg push lret pushf pop int3 bound int3 es add pop (bad) arpl hlt outsl inc ljmp mov mov jg mov int3 mov (bad) jns mov arpl movsl xchg mov mov test sub addr16 out test out mov bound inc test je imul ret outsl mov fsts xchg dec mov fs mov in or outsb mov dec xchg hlt lods out mov xchg dec mov fwait int jbe add mov sbb jl cvtps2pi push decb sahf jge sbb je popa lret cmpsl insl out scas lret test adc ljmp sbb lock pushf stos push add mov push jb adc sub movsb xchg xlat jecxz pop fcom pop in aaa (bad) xchg int xor (bad) sbb lock push nop cltd aas xor jo sbbl xor rcll lahf push pop test inc in cmp and mov test adc std arpl and aas movl cmp inc mov shl lds xlat jo mov xor add pop add push imul sub mov stc jnp lahf cmp (bad) fsubr test mov mov sbb je daa add ret nop pop mov xchg out jno lock or mov imul repnz push cmp int3 or inc cld sub clc pop out cmp jl xlat divl pop cli mov cmp loopne stc (bad) addl xor xchg sbb in push xchg sbb push fs xorb inc and scas out cli mov aaa ficomp xor cmp cmc inc pushf rorl mov cli dec ja pop dec sub mov test popf test cmc int sbb in sahf aaa xchg jle stos xor gs hlt adc lods test add aad repnz sub or push dec mov cmp sbb ds and mov push into lock test add out jno movsb mov repz sbb fisub jmp daa ja fisubr mov cld je or mov ret mov and (bad) stos adc sti jmp lret int3 adc xor mov mov mov mov xchg lcall int3 push movsb xchg xchg xchg or daa mov cmp sbb data16 dec cs jnp push push push push jecxz aaa pop adcb pop sbb jg scas sbb jp inc aad pop jae nop pop ret or sbb scas das push lcall jl mov sub xchg cmp jbe and addb or ficom and leave incl fwait and sub popa adc cli push (bad) jb jbe aad jbe (bad) cmp hlt cltd mov fdivl dec fucomp dec add jecxz jnp push or push mov pop add sbb test sub icebp inc fistpl pushf and sub add (bad) mov loopne push pop jg adc inc push shrl add cmp xor jne test mov cli test (bad) pop xchg fwait out inc cmovs lock (bad) add loopne daa movsb dec sbb xor roll pop mov mov inc icebp scas ljmp stos iret xlat outsl lret and fmuls popl mov cmp or push mov cltd jne aam neg push xor jg cld push push cwtl es pop mov xchg rcrb enter test daa out push xchg xchg mov (bad) outsl aad adc js mov xor pop (bad) and sub mov pop popa movsl dec mov xchg lret mov jg cmpsl sub pop pop mov pop sbb sti mov js repnz mov clc addr16 inc inc jne decb push or xorl sub pushf mov xchg test insl pusha push add js (bad) or enter pop and and rorb jl sbb cmp popf xchg or enter imul outsb aad add mov test notb mov mov (bad) aaa fs insb mov cmp inc test and cmp mov pop fwait dec or push stos dec dec lret sti (bad) nop enter add (bad) out lcall mov push xchg stos cmp push adc lahf rcrl ret repz stos fistpll push add inc les push das repnz sbb add ret out es push mov rclb sbb (bad) jl cld hlt mov es jae repnz dec aam mov inc dec jl xor and jbe mov rcrl sbb jge loop xchg aaa jae fimul sbb nop dec dec cs stc fbld mov mov in ljmp popf jne cmp inc into cmp sti xchg je push jo jbe aaa push sub push in aas lock xchg stc and push adc pop inc sti add lret lods cmp add ret inc aaa or es movl fdivs mov pushl mov dec mov dec cmp stos mov jmp inc add add in push lods jg lods (bad) cmp out aaa xchg or loopne inc out sbb cmc inc pop (bad) lcall xor or xor add (bad) gs dec mov and xchg les stc adc hlt mov sub mov xchg sbb push setns pop (bad) cmp imul dec inc daa jbe mov ja ss loopne sarl movsl jmp push mov cwtl popa lret push sbb jmp daa add pop mov mov iret repnz test jp outsb mov std loop mov jno fstpt lods inc and xor push adc sub adc add cmc rcll sahf mov xchg xor pop mov mov xor movsb inc stos scas ja andl mov mov pusha mov enter xchg pop mov stos jg nop inc call out aas mov enter mov mov shll out lea (bad) sbb idivl fwait enter push cmp scas push addr16 xchg roll fstpt mov pusha inc mov rol push outsb jne outsb shr or xor outsb mov idivl add bound inc pop push insl (bad) (bad) fisub push xor dec xchg push pop sahf inc xchg inc xchg (bad) cmp jecxz bound ss sbb mov or ds push jne sbb aam gs jae xchg xor int3 movsb clc loope scas add out ja and xor jle mov pop nop pop rcrb and movl sahf add lcall mov pop mov call call repz lods sub mov mov ds or push rorl adc mov sbb rcl dec test nop pop addr16 mov and movsb xor dec and cmp ret lret les and cmovbe sbb fldenv (bad) inc pop lods xchg xchg mov mov sub repnz mov lcall outsl or jns xchg or (bad) add insb stos push das xchg sarl mov out inc mov scas negl inc push or sbb jno xor xchg add (bad) out add daa push repnz lods pop test sbb push ret xor jno xchg mov mov xchg dec and lock seta and repz int push xchg mov pop in jg inc add lret scas loopne lods and mov shrl adc fwait sbb or jno in (bad) mov (bad) mov aad xor je roll stos leave lods lds cmp push and les data16 aad dec jo lret mov les push loope call mov sbbb rolb xchg add (bad) pop inc jmp mov (bad) ja add stos ficompl jne mov imul pushf cmp inc rcll lret xchg ja in ljmp inc dec shrb lret mov mov mov outsb cmpsb scas or fisubrl arpl jb loop push adcl sub inc aas jne mov cwtl popf add adc (bad) add test jmp sub gs inc lods add aaa mov xchg lahf xchg and jne int3 mov jns fs add out aas sbb mov jo vmovntps cs inc gs push inc mov or int3 cwtl add movsl jbe push movsl fimull inc push (bad) jno sub movsb mov mov dec xor rorb add push es sbbb int3 fcoms dec cmc pop push or pop mov mov loopne fcoms loopne test mov cs push xchg lods pusha dec sbb mov aaa dec sar fcmovb mov pop fcmove pop dec mov ss (bad) push jmp int3 aad cwtl jg inc adcb inc dec mov loop pop and stos packssdw mov insb jne popa and and push leave loopne js sarb lret cmpsl and dec sti and lahf dec fnstenv int3 loop (bad) daa and test lods or in sub and (bad) mov pop cmpsb movsl sub adc and cli pop push shll cwtl push add cld fildll sarl outsl push out cmp mov mov sbb inc mulb in (bad) stos aad adc hlt xor fbld das sahf sbb (bad) icebp mov popa push sub aaa call fcmovnbe jg cmp scas scas (bad) sub mov in push pusha mov jno push or xchg sub mov push iret call out icebp mov stos mov icebp jge sub dec (bad) cwtl jae sbb pop mov dec loopne mov (bad) or clc mov mov pop sub flds mov mov mov pop push (bad) or sti pushf outsl jae das insl pop sbb fsubr stos adc push xchg cltd mov add dec aas sub inc clc mov xchg call sbb and cmpsb push sbb sub es add add loop xor dec in int3 int3 and scas fldt aam push stos scas inc pushf sbb inc test xchg ficom inc cmp jno outsl mov lret mov mov jb mov cwtl stos (bad) mov xchg ljmp nop stos js or inc (bad) sbb mov ss inc pop ja inc stos add dec imul (bad) xor jmp pop cmp mov orb jp pop gs mov lods aad add xor add cmpb test inc mov cmpsb inc insb adc popa shlb js cld jno in add int fisttpll inc add push arpl mov sahf in fwait mov mov adc mov jo fwait les (bad) neg lret sbb push pop mov xchg inc aas jp jl and mov (bad) test push cmp mov fistl adc in mov jmp push jge fiadd cmpsl xchg outsb arpl repnz xchg mov icebp jnp add pop popf or ds push enter hlt mov lret pop nop jae jmp push push xor inc push ds push add push pop or jne mov je cmp js sub ficoml loop jge mov xchg aad cmc xor mov aas mov (bad) jg pushf mov mov jl dec aad push enter sub lods loopne nop imul push jg push add sbb push mov pop add and pushf popa adc in mov mov mov pop xor out mov dec mov outsb cld fcompl adc (bad) int3 mov xchg call mov mov adc imul sub push jmp inc sbb imul lret addl in sbbl lret push fdiv pop es shrb cwtl inc add mov call (bad) sub out adc cmc out (bad) mov sub popf or hlt ficompl cltd push sbb jge jne sti sub pusha add jmp (bad) cmpsb in test xor lret enter mov orl inc xchg cltd mov mov lea xchg xlat cli jns mov inc pop movsb mov jp mov ss movsb cmp scas (bad) into mov clc loop sbb rcrl sbb mov out cld sub mov pop dec cmp cmp cmpsb mov shll (bad) jo,pt scas xor imul sbb mov and (bad) adc scas loope shrb call cmp push sbb lods (bad) mov cwtl xor das sub cmc adc xor sub lds cltd gs add mov and negl push xchg jbe mov popa sbb stc popa loopne (bad) hlt pusha cmp sbb jle (bad) scas xchg aad dec cmp mov fcoms inc inc stc mov ja mov xchg mov or jmp jns mov jl sub push mov ljmp sbb mov (bad) out push jns lock aas cmc adc xchg scas cld std cmp dec mov xorl out mov rcrb cmpsl dec xchg sub fildl cli xchg pushf xchg jo pop pop in xchg cwtl xchg mov xchg icebp xchg sbb lcall and mov rcl push aas add and and jmp lods or or out aaa je add test jl inc (bad) push cmc pop repnz das lock push mov fnop sbb insl xor imul aaa jne push xor aaa in jbe outsb inc cwtl cmp sti sarb lea outsb addb (bad) sti rcrl insl mov cmp push dec mov mov fcmovbe stc inc sarl cmp cmp mov push out jg test jo mov cmp mov sbb in and aad push mov mov jns mov rolb (bad) jmp mov jecxz sub mov add add fildl and inc and mov scas xlat add hlt push imul ficoml test (bad) aaa (bad) sti outsl outsl loope enter cmp mov or (bad) sub repnz pop adc ret or mov jnp mov sbbb insb sbb lea jle int in js mov fwait scas adc out arpl sub nop pusha lods xchg push (bad) xlat cmp fidivl cmp mov in into pop outsl sub ret push add adc pop adc xor sti cs and cmp movb cmp push add idivl dec or cmc cltd dec adc stc addb jo pop adc pusha cli xor inc mov mov popf aad sub cmp add mov test cmp add test and mov jb (bad) sub fadd lds daa lret push inc push pusha xchg cmp lods icebp out xchg scas scas out cwtl xor clc push xor jmp xor sub xchg dec fisub cmp negl mov cltd mov out pop dec and loopne sti mov (bad) fstps insl and sarb mov (bad) loop and mov leave js lock inc loop stc cmp mov ror aas lret mov outsb inc and jne add daa adc cmp mov xchg repnz xchg lcall cmp es jmp scas xor in mov and imul push fsubrl out mov adc sub inc push in pop jmp dec inc insl xlat jle lea dec pop in loopne repz lds add cmp sbb push push xor sbb adc in and bound aad stos lock scas and dec sahf mov dec in loope mov arpl xor andl (bad) jne stos frstor repz repz sbb sti or insl out shlb es mov cmp adc jo push and and inc stos mov adc pop xchg xorl in cmp movsb mov mov push loope fldt iret xchg cwtl jge sbb push shrl cld mov out mov jnp dec jg cmpsl loop push mov xlat jns out xor adc in test fidivrl movsb loope fcomps or dec out ret jl notl cmp sbb (bad) sarb add push cmp gs jnp mov push sub (bad) clc fcmovbe xor or lods or jg test sub testl stos mov mov flds aas mov sbb rol js std aam scas sbb dec imul ror lock stos (bad) (bad) ret adc ss push lock fdivp and rol (bad) mov xor leave into imul push lods pusha adc mov movsl xor xchg (bad) je mov icebp out push adc sbbl iret (bad) xor in aas pushf push add push mov je push repz and jns mov outsl subb int push scas and (bad) mov sub inc jge shrl mov aaa add jnp mov mov pop sbb xor or dec add xchg adc lret lcall push add push inc mov pop nop pusha sub xchg push pop sbb das cmp in push xchg repnz enter xchg fcomps repnz rcl push cmp add pushf pop bound xchg lds cs add mov rcl fildl cmp repnz enter or addl imul sub jge aas or fidivrl sahf and in into inc (bad) fsubl add int3 lds xchg arpl test cmp fdivl jnp aaa test xchg jl pushf fcmove push repz iret and sub es sahf gs jg popa fwait aaa daa mov and or insl std jns int aaa pop popf sbb push shl test inc xchg mov out pop jns xchg packuswb xchg cli (bad) ficoml mov jmp lret dec jle stc adc mov adc das mov aad inc pop aaa ret dec popf scas jp jecxz xor aam icebp or into and cs jo and push pusha or daa fcmovb insb pop and sbb or lock lcall jg (bad) ljmp add fistp jge shrb mov push in add jae jecxz xor lods aam push sbb push mov cmp nop test nop ror mov adc scas inc add inc mov test in in jge in push test lret cltd in in aas shlb add mov in mov lret popa push inc jo cmpsl mov xchg adc dec mov and jp push imul pop or cmp das fildl loop push add sbb or jmp shrl sub std sbb lods mov cmp mov pop xchg mov mov cmp add rcrb lret lods aaa add subb pop mov jg xchg test (bad) adc pop mov push aaa xchg movsb inc dec or push loope int mov movsb mov outsl inc xor xchg or nop mov mov mov lods xor mov jb mov xchg aam xchg gs mov xlat inc leave xchg jp cld ja jp movsl stos incl (bad) setns adc or mov gs into jne movsb in mov add (bad) xor out fs outsl dec inc jg sbb bound and inc cli or int mov mov and fldcw push outsb jge dec loopne repz adc loop mov popa pop xchg cmp pop and (bad) (bad) int repz loopne or fistp add add mov add into mov pop data16 pusha add scas pop or movsl lods sbb sti pop mov scas into add negb in mov mov frstor xor sub outsl xchg pop int mov xchg fild (bad) mov js cli inc ret in pushf call xchg inc pop sbb pop or roll in enter cwtl push push cltd push mov (bad) je mov loope dec cmp test fldcw push lods std dec sub and mov popa sbb fsts test cmp sbb mov xchg bound aad (bad) lods stos push movsb pop lahf cmp loopne sub scas int3 stos notb jb dec or or cltd roll imul inc and and push lea xchg or lret mov cmp or push add popa (bad) sbb sbb (bad) loopne pop fldl add dec push push push xor iret mov fmul aad jbe inc pusha pop inc mov (bad) jle hlt ds out inc jmp pop call cmp push mov dec rcl into fwait pusha into adc orb push mov loopne cmpsb mov mov das cltd xor lret xchg in imul arpl outsl mov cmpl ret addr16 scas inc pop lods jne adc adc (bad) mov pop sar sub aaa aas fnstsw adc push and adc and dec jbe decb in mul jne int js (bad) sti lods lahf pop fsubrs and push dec pop ja rolb clc sub xchg (bad) aas add push jecxz mov push out jmp push push add mov stc cmp (bad) add lret stos repz out jns mov sbb xchg jno jl out (bad) inc mov rolb outsb cmpsl call movsb add pop out push dec pop push sbb hlt mov sti inc cmp stc and mov daa mov pop add icebp push mov ljmp stos sbb xchg inc loop lock pop mov scas mov stos sub popf xorb sti std shlb mov pop (bad) jp repnz adc inc in cmp xor and and and arpl sub lret dec jecxz add pop adc mov test fs out test int or and nop xlat sub or or xchg push test cmp pop sub das cmp (bad) cmc xor aad outsb push out push adc rcrl dec jno xchg and jecxz (bad) dec mov fdivrs lcall mov and push (bad) js inc (bad) jl sub or lods in fadd push cmp mov adc sahf das mov (bad) loope sub fstps lcall push lret (bad) stos rcrl cli add xchg inc dec sub ljmp movsb or push push pop (bad) clc mov pop (bad) sar pop and mov enter xchg push xchg frstor in icebp es sub cmp out imul and mov scas aas inc push fmuls mov dec xchg arpl outsl and cli xchg fdivr inc popa push mov xor mov lcall comiss sbb outsl addr16 pop stos in sub aam imul cmpsl dec insl pop xor mov andl aas pop movsb (bad) cmp pop ret mov jle fstpt int int adc pop mov mov lock aaa pop insb aam jo popa add or out insl push sub mov aaa mov xor fcoms sub inc pop ljmp fwait xorl add loopne mov out loopne adc adc rorb cld xchg fidivr xchg push in inc add jno lock fldenv mov es pop and xor pshufw mov sub mov fs or pop jg xor sbb bnd loopne sub cs daa xor lods pop cwtl clc add arpl ja sbb mov (bad) test fidivl stc xchg adc test iret mov test addr16 jg sbb sarb jne xor cwtl je fisub es jno jg mov imul inc xor ds xchg inc push and push jb ja ficoml jo adc mov mov add (bad) imul popf lret insb push cltd (bad) push push ficomp sub daa xor mov sub dec cmpsb in push test pushf pop or cmpsb popf mov push out data16 xchg push fwait and and and (bad) (bad) int3 in movsb (bad) fwait inc sbb mov movsb xchg cmp fcompl xchg cs and loop mov imul mov scas pusha outsl dec jb mov mov push fstpl mov pop (bad) jnp xlat out dec imul fmul inc mov imulb cmp sbb mov movb sub in or bound cld (bad) in inc sbb mov stc into lret cmc mov icebp pop inc xchg (bad) in insb sub jge push test add sahf fild push push jg push jecxz aaa insl ja pop es dec mov cld int bound mov xor lds push jns or mov lahf jbe jecxz inc insb mov fwait jecxz jp add mov and jbe push mov (bad) stos adc mov inc fsts cli arpl and jmp daa stos gs hlt ja,pn xor fwait test out mov leave mov pop lret cwtl pushaw or hlt push insl add mov (bad) fs or pop out inc adc lahf dec sub dec mov mov sbb sub jns out add int3 (bad) push (bad) icebp adc xchg and out and or pop icebp sub sbb lret pop cmp mov dec fldenv (bad) lea jne adc inc in leave jmp imul add pushl jle dec dec mov cmp jb cli or outsl xorb out pop cmp test adc bound mov mov adc sbb mov inc iret mov sarb scas adcl out loope cmp and mov dec xor in (bad) xlat or push gs mov dec addr16 and sub (bad) aam cmpl outsb repnz test mov fistl and sbb and pop xor adc out mov fidiv fistpl inc loop xchg inc leave imulb out imul add adc pusha jg outsl rorb xor daa fwait (bad) mov push iret jmp and mov pop pop cmpsl or notl mov and dec inc out test push (bad) dec out in push pop lods scas cwtl inc out xlat dec lea sahf std xchg pop mov incb push cli xchg cld addr16 inc xor (bad) sbb dec aam rorb xor subb jnp or lcall cmpsb add jecxz enter fsubs leave sub mov popf mov lods jns iret pop jbe lret pop pushf add mov (bad) scas jne lret sub nop dec xchg fs pop lods jg add pop and sub jne add xor (bad) push pusha xchg into cmp push out js jb movsl cmp (bad) xlat push adc xchg imul adc outsl jb jo in repz fidivrl push call outsl sub test mov or popa pop inc sub adc sbb xor divb jns pop xchg xor mov (bad) cmp testb jae jg daa or xchg (bad) fsubr jbe push push mov test cmc lahf pop adc pop jl sub pop and lret ret sub std jno push adc ficomp adc or push inc (bad) (bad) or sbb mov test adc xchg sahf cmp ret sahf fsubrp dec in scas jb fisub add (bad) (bad) pop cmp outsb dec adc add idivb mov add jne mov sti shlb cmpsl xchg leave cmp stc nop mov cld in movsb cmp sbb sub lret jge cld sub sbb adc clc fsubs or scas dec aad sub sbb jl fstps bound mov adc or and loope dec jne or ds je mov fildl insb jecxz add sbb popf jg out les je loop loop inc inc pop cmp std lods mul adc test loopne push out mov out push imul int mov data16 jne das mov paddb push jns std mov xor fidivl in inc cwtl scas xchg inc out repnz mov lock xchg or (bad) sahf and stos inc sbb idivl pop loope dec test dec mov aaa push lods sub push hlt in xchg fsubrl add jecxz xchg mov in add orb adc mov cmp data16 inc xor xor (bad) and jg cs pop into mov (bad) negb addr16 and push mov fiaddl pop int cmp iret data16 rorb int adc ret push cmc lods fadds or mov addr16 xchg in adc int sbb xchg aas or lret rcrb aaa movb sub mov sbb xchg loope jl adc cmpsb mov sarl imull loopne mov adc inc dec inc and sub mov imul sbb lods push mov pop inc jo icebp xor xchg rcrb push sub adc sub out pusha inc rclb setns pop sbb cli imul out fs or push rorl outsl in std bound data16 pop arpl (bad) fimul hlt mov outsb push and adc jl test dec sti add (bad) ds xchg xor pop cmp inc mov outsb sahf dec mov jbe sub sbb jp mov fisubrl and syscall daa or xchg addr16 lret stc pop pusha sub xor ljmp ss mov das outsb sbb call sbb nop (bad) xchg adc outsb (bad) pop fcomps scas into aam push push mov aam jb cltd and (bad) lahf lock in popf stos les pop scas sub xlat outsl xor outsl xor jp mov cmp jo add jp pop sti inc add xor lods mov rorb jmp pop xchg mov inc cld sbb sub adcl imul ja mov popf push jnp mov dec sub jge rorb sub jecxz cli aas es roll xchg mov insb jae xchg lea insb test nop mov aam arpl inc arpl in and int cmpsb in ljmp fadds adc mov rcl inc in pop push idivb dec jnp pop iret mov les inc sbbl or les incb movsb dec (bad) scas mov mov popa push xor xchg adc or push stos inc stos shrl or ds add push xchg add (bad) fcmovne lds out xchg mov addl and gs pop imul fdivr sub daa xchg (bad) bound ss (bad) dec out dec xor push bound lret add xor adc aas adc sub xchg add xchg sub xlat scas sub push pop jnp mov jge scas (bad) xchg or popf jg inc adc inc jmp and outsb movsb dec (bad) cmp push std pop int3 pop rcrb adc in dec push mov xor inc xor mov and test lods cltd movsl or ljmp ja mov or mov xchg inc mov push inc jne cmp xchg mov scas iret insb sub sti dec jns jns jge sub sub or test add lcall push xchg ds pop insb adc in mov lahf mov mov adc insl jb leave push jp sub push mov icebp xor xor sbb jmp gs xor jno mov push jg cwtl dec adc mov sarb mov cmp ds aaa xchg lods dec rorb in out nop inc test and ja repnz mov mov addl jbe addl lods test ss cmp inc sub out outsl and fdivr lods mov xchg sub out jo (bad) in mov xor push xchg push insl in mov std jecxz inc imul pop dec mov inc out adc (bad) aam ficomp push cmpsb dec popf jp and jae pop sub adc inc pusha cmp jg cwtl mov jbe inc fimull cmp mov divb aam xchg mov sub ss jbe dec mov test popf add and push pop popa and (bad) outsb loope xor xchg (bad) mov sub pushf mov sti sti add jbe imul pop xlat sarb out add jne push out (bad) jns cmp pop nop jle outsb jne fstpt iret mov sbb int3 ja lds fdivrs xchg jbe ja xchg jae cmp ja loop mov push push outsb mov dec pusha les into sbb je jnp gs or adc mov inc mov ret pop adc jb or imul stc movsb scas hlt movsb dec inc mov xor inc add xchg (bad) stc add iret cltd pop daa push jno cmp mov bound loop push ds scas xor pusha daa xor ljmp in int3 loop mov and xchg rclb sub hlt or xchg mov or pop cmc or lods mov inc lock adc (bad) jb stc cmpsb ja cmp jb das (bad) mov hlt fisubl divb cmc mov dec push mov inc sub cltd inc outsl mov into pop mov outsl push in repz or push js dec test divl xor call std mov and fsts lret fstpt int3 sahf xchg and bnd mov mov das daa adc rcrb stc imul pop pop fs sbb and push cmpl and xchg cmp test adc sbb cs test bound or sahf fildll mov jp lds mov test cmp (bad) call (bad) cmp gs push xchg mov jno jl jnp je xchg sub sub jecxz mov push mov popf popf add adc mov sub sub inc push les dec mov xchg sahf or add in rorl mov nop aad push jle aam xchg aaa imul push popf shl push inc aam test mov adc outsl lret cmpsb scas jbe adc lea test lcall (bad) mov add jnp daa mov insl hlt add and cmc sub and or aam sub and in mov nop xlat mov xchg xchg or xor cmpsb push inc xor pop xchg xor arpl sbb es dec mov (bad) mov adc push ret inc jae sbb imul pop ret pushf loope sbb ret and push mov inc xor fs cmp mov out jae fidivrl imul aad inc (bad) inc loop stc pop pop lods push and jb or scas test dec mov imul fstl shrl xor addr16 gs shrb clc or arpl test ja adc andl (bad) xor mov data16 cmp mov cld push inc mov test ss xor sbb inc inc addr16 sub mov aaa cmp aad cmp fdivr adc icebp lea mov push rcr vpminub aad clc adc add jne pop stc les push mov jmp (bad) ficompl loopne mov adc scas cmp and add addr16 movsl dec repz cmpsb xchg xor in xchg push mov (bad) mov les fcoml sbb mov dec and inc and mov nop xor stc lods jb push rorl adc mov (bad) fstpt test js fidivr (bad) call mov (bad) mov add imul mov add loop aas or push add mov js es sub pop out ja xchg addr16 and pand rorl inc ret pop adc (bad) (bad) out cli out and jbe xor jae testl mov fidiv insl xor lahf mov pop sub jecxz jmp dec popa mov xor mov addr16 cltd std push pop xlat sahf out ljmp mov hlt jle add mov bound rclb xchg fisttpll ffreep rclb fstpt and inc sub fxam fcoms out mov adc test dec loop mov popa pop mov loope sbb cmp loop mov sub test jno inc or sub imul sbb xchg (bad) jns push lret push inc xor out jecxz bound push mov daa pop imul scas (bad) test lods popa aas inc xor arpl adc mov js aad sub jecxz or (bad) aad push dec pushf in mov pop adc mov jmp xchg repnz mov xchg aas inc dec int3 xlat inc mov jl imulb adc das push loop stc fild mov lods adcb icebp push les test int fwait leave sub adc jg mov pop and xchg ror xchg nop xchg inc jo mov cmpsb hlt (bad) add into inc jbe imul pop stos cmp and mov lahf dec cs adc test push repz xchg xor stc mov xchg imul in mov in jp pop sbb mov ja adc sub popf push ljmp sarl cmp mov lahf dec sub sti (bad) mov jge adc inc pavgb aad add inc sub jmp xchg (bad) mov jecxz cltd out or (bad) (bad) and out add inc out mov popa icebp push and dec imul adc xchg mov outsb jle sbb scas sub or paddd xlat inc shr out cld ficoml cmp insb sbb xor push clc pop push cmc rcr in cmp sbb mov daa cli mov in pop invlpg rclb xlat lds loopne mov sahf shll ljmp adc popa (bad) insb mov sbb cmp lahf lea clc pop insb jne outsb cwtl enter clc pop jp (bad) popf jl lds adc cwtl fcmovnbe xchg cli shr mov sarb (bad) jo icebp sahf mov xor xchg sbb push fstl popl sub inc icebp ret adc ds lcall outsb out pop push cmp or fisubr push cmp cltd adc adc xchg mov div sub cmc mov (bad) cmp popa jmp pushf sub rolb add push add mov xchg jbe mov jb sub xchg mov xlat gs flds testl (bad) (bad) jecxz mov adc repnz jg push jae xchg negl enter std sub inc mov or xor add xchg inc xchg (bad) ljmp fwait xor (bad) jne out add inc cld or add pop ret ror iret pop loope je sub ss xchg inc jp loopne scas sarb pop insb inc pop lock xchg rolb xor (bad) sbb cltd mov orb fdivl xor cmp scas jecxz add add mov push std stos inc mov pushf push clc ljmp and lret scas cmp inc (bad) ficom xchg cmc daa jb dec pop mov mov fidivl scas jno xchg and mov pop mov add popf int3 adc loope or jp mov adc xchg pop inc fdivrs push or loop push rcr dec mov cmp jg sbb lret aad fbstp in add mov add test ror movsb stc mov push mov push jmp and push loope sbb jecxz rclb pusha jmp repnz cli cmp sbb mov (bad) sbb repnz cmp or mov mov dec xchg mov test mov popa push fstp push ss add sbb inc pop mov pop xor sbb pusha mov in je cmp lea into das inc (bad) lret in cmp fcoml push push xor js mov mov popf insb inc repnz mov mov jp in (bad) cwtl mov jns mov lea repnz iret cli out subl mov clc mov int xchg mov jbe jle imul scas add aaa pop (bad) xor insl or or sti movsb mov (bad) in in pop shrb or sbb lods mov jb or insb mov sti (bad) xor cmpsb pop inc sbb inc push jg repz push imull xchg icebp inc jp fadds popf and sbb and lret push cmp inc mov add sbb incl cmp je das mov cmp es out test out in or sbb push pop jae add cli idivb fcoml sub jecxz xor push jbe addr16 sub mov scas mov sbb test scas cmp gs adc inc scas cli xchg movsb loopne popf jne mov nop cmc arpl cltd or (bad) ds out fcompl cld mov sub push ds push (bad) cld add outsb loopne dec orl push mov cmpsb ja test cmp imul jecxz lcall inc divb jle mov int3 sub pushf jmp arpl push lods das or stos movsb hlt (bad) cmp cmp out jp dec icebp repnz stc loopne sbb outsl out (bad) dec jecxz aaa inc cld pop or mov sahf push xchg pop loop pop jg nop jb inc jge add or mov xlat inc clc xor ja,pt loope in loop pop push jle call jns and push addr16 lds out jb pop adc mov adc mov lock or pop xchg pop inc jecxz mov add xchg les sbb jp jge mov add or mov push cmp cmpl mov lea ljmp jo pop dec sbb mov jmp push and or int xchg cli inc pop xlat adc mov aas or cmpsb push fdivr insb or lods outsl push or cmp mov punpckhbw cmp xor xor mov (bad) lock test jns mov adc mov dec add lea cmpsb es sbb rcl call xchg mov test pop sub call movsl scas int3 jmp xor xchg push xchg adc lea dec enter xlat pushf adc int3 jbe mov fildll dec rolb sbb testb jg dec cli adc sahf ljmp mov nop mov dec adc mov outsb imul repnz xor mov orb lea mov (bad) sub mov sub add sbb sbb aam sub in add cli (bad) scas fcom pop jne xchg mov inc or clc add sarl jno pushf jmp popf call pop ss lcall imul imul mov xchg ret les mov mov and mov cmp cld jp add divb (bad) jmp xor in sbb xor bts push push test aam negb repz sub mov fucom ss leave fcompp stos iret leave push push and pop add mov int cltd test cmp push movsl cmc aam test sbb pop xchg lods dec mov mov loop pushw jo lahf adc jmp aam inc (bad) addb repz or adc xor dec hlt sahf inc rolb cmp les imul clc sbb dec pop mov dec mov jg pop push inc out mov aaa aad jbe mov push jns sar cmp fstp test or inc pusha cwtl mov aas jnp test verw (bad) push mov xchg mov push test pop cmpsl test test xlat dec cmpsl imul dec mov sub es insb lret fistpl lods dec hlt aaa hlt pushf cwtl push sahf ja scas out jl mov outsl mov ljmp ja mov adc mov ret aaa jns cmp and das stos movsb fdivr out mov sub mov or sub outsl inc orb insb mov dec inc sub jbe adcl popa test xchg jb mov sarl mov sar and fadds (bad) inc dec mov mov fnop call in les jno movnti js test or mov adc aam pop jo imul mov sti lods cmp mov aad pushf rorl js fdivl dec imul jl dec jae add fnstsw jp loope cli mov out jno ljmp ljmp aad insb ljmp push jle arpl jl (bad) loopne lods dec add stc sbb or pushf jecxz mov sahf xchg repz push (bad) push sbb add ficompl dec out jmp ret ds sub jp imul or pop fwait and sub fstpl pop std pop out jg (bad) dec test movsb mov xor out xchg or rep mov mov inc imul outsb lock mov pushf sub dec xchg into insb mov aam cmp fistpll xor out popa popf or adc mov push inc movsl adc clc pop xchg addr16 xor cmp sbb mov es notl daa mov stos (bad) xchg or cmp cwtl lea sbb cltd in test jnp pusha (bad) (bad) mov cltd cmpl iret stos imul pop dec out ret jg cmpb pusha xchg (bad) repz stos movsb sbb stc je daa addr16 pop push pop lock xchg aas std xchg jmp xchg push outsl dec fdivrs xlat cmp sbb pop repnz call xchg jp test insb mov pusha ret inc movsb and pop clc jle sbb push insl mov imul pop add push cmp or mov mov adc insl xchg mov leave ja and push scas in pusha cmp sbb mov mov adc (bad) cmpb cmpb lahf pop and xchg pop lods aam fistp add (bad) mov in ret (bad) aad cmp jg out xor cltd jae mov inc aaa push sub dec mov repz insl inc cmpsb test xchg outsb mov add jecxz xchg ljmp gs jo ja mov arpl dec orl leave dec push sbb mov pop addr16 mov cmp (bad) inc bound dec xor xor add das push aas jb popa sub outsb rcr lods or inc jnp xchg pusha lret pop fucom add fdivrs mov sbb and pop pop and test into faddl xchg cmpsb jmp mov and jle inc mov (bad) pop rcr add jbe push cli mov cwtl xchg mov aas repnz fadds sahf xor cmp pop xchg xor rorb mov fstl push mov adc sbb inc ret mov inc movsb xor rorb loopne (bad) jae icebp pusha rorl pop les pop jg jp or loop and mov sub daa xchg jne mov movd and pushf (bad) loopne popa test cmp xchg pop bound into xor jno cmp out pop subb or enter pop mov ret cli sub and and push mov cs loopne adc mov add mov sbb push pop mov adc imulb sbb js,pt xchg push and ja push stos dec imul loopne pop cmp sbbl scas test lahf dec xorb mov out adc call push ret pusha lahf call mov and lahf jg adc push adc sarb cmpsb sub jae (bad) mov outsb out inc data16 xchg outsb and (bad) fsubr das mov xchg pop cmpsb dec jae sti mov xchg popl movsb out daa adc movsl pop or add xchg rorl jnp jbe mov cmp decb push mov jo sbb or bound clc or xor pop xor push push add or jge sub inc in int leave dec adc insl cmp xchg add outsl cmp call cmp adc insb xchg jnp nop sbb pop loopne dec movsb jnp je or sub outsl ds jno xchg fstps jmp fs test iret scas cmp jg fstps outsl push mov enter dec lret or rcrl xor loope mov insl sbb sub xchg daa cmp fisubr sbb inc leave sarb mov es lahf cs dec adc jge mov inc inc in adc xor mov shrl lock lahf addr16 jne daa cmp pop xor pop xor and stc (bad) xchg adc repnz bndstx aad adc icebp cmp or loope fs dec (bad) and jp sub std mov xchg cmpb xor outsb nop lret inc rorl pop loopne rolb lea jns fcompl imul divb mov hlt cmp out jg daa stos lahf idivb lds addr16 cmp mov and ficomp sub idiv mov pop xchg aaa jg aad push js testb xlat sub lret jg sahf xchg mov ds test cmp cmc outsb and into cmc movsb mov ds pop cld lock popf jb xchg add jmp sbb (bad) mov bound adc inc clc fdivr mov inc mov xchg lods rorl cmp cmp test imul in ds scas mov fstl xor pop mov push or or (bad) xor test and xor xchg sbb dec adc das inc js xchg repz jb jbe mov cmpsb pusha inc movsl mov ss ljmp mov and cmp test xor stc mov mov call mov daa sbb jbe ds jmp out mov cmp fmulp mov and mov sub js jnp pop movb xchg jne mov call sahf aad add jb or xor enter rcrl pop xchg jno subb jmp push inc jbe mov push push lcall cmc lds push sub mov notl repnz push ret sbb pop jns arpl sbb jp jnp cwtl ret jmp xchg insl push cli jb sub test push push repnz sbb sbb pusha and xchg sub and xorb mov inc mov shrb rorl xor ffree adc adc les mov sub mov jns xchg aas push mov pushf cld mov std pushf lahf add imul js mov sub cmp setp xor imul or (bad) sbb (bad) sbb stos push (bad) imul cmp push setge jbe dec push pop dec lahf inc xchg push icebp and push aas inc jb ret xchg mov and jmp mov inc lretw sbb dec fs popf scas jbe add mov in out jb fwait je xchg fistl jno bnd jl push mov mov sub adc out imul icebp cmp add aad inc cmc jg xlat adc adc fnstenv xor (bad) mov stos mov fwait pop dec dec bsf fimull inc xchg xchg push in sub push mov js aad rolb loope xchg test (bad) test call inc or pop cltd xor jp call adc stos pop or cwtl mov sbb xchg das inc lods cwtl xchg lea addl sbb jmp popa push and sub pop inc jb ds fwait inc inc stc xor mov add or js lcall dec test xor fimull dec hlt adc cmp and mov pop add lret lock push sahf wrmsr jecxz xchg iret mov or or lea jg ficomp jns in das dec aad (bad) ret aad lahf call pop fcomi sub hlt push lods mov leave test xchg jmp and test add push add pop call mov jl dec pop cmpsb (bad) icebp pop aad lret lods jb inc sub push xor push cmp mov jne leave lcall pop aas (bad) or cmc cld loopne outsb roll lea jae sub or imul and push data16 inc pop negb gs call pop pop jp mov nop pop inc adc inc mov jne idivb sub mov insl insl sbb cmp addr16 push inc xchg push adc mov nop aad jne push in and fnsave mov pop add dec cmp sub pusha test mov mov xchg fisubrl addr16 jno pusha sti inc pop aad gs lods cmp mov cltd or sub or and xchg jp jp pop fwait rol div outsl mov push sub mov lock mov mov and rcl inc inc inc cli test testl mov rdtsc add popa push movsl dec outsb xor ss aad jl adc cmp gs mov pop lret pop push test lds or add int3 ljmp cmp scas movsl imul push shrl scas mov jge mov ja out jo int3 sbb jle dec mov cltd mov es pop nopl dec pop sub out jp aas mov (bad) mov (bad) pop je pop addr16 sahf mov movl mov out inc inc ret inc pop cmpl flds add popf mov (bad) pushf mov xor and jp add hlt push (bad) cmp lods das adcl push push ss (bad) cmp loope jecxz scas dec cmpsb addl sub xchg jne aad in je mov jg jp in sbb imul stos stc stc sub inc sub sub push es das pop mov iret mov push in push stos xchg fimull pop jl (bad) repz sbb mov adc xlat or test pushf mov in stos (bad) inc ljmp (bad) addr16 repz test and insb mov in sbb mov sub dec xor xchg enter sub push add cmp mov mov sub xchg push dec xor aam inc sbb nop les mov jo fistp xchg (bad) xchg test sbb xchg fstl jnp dec adc cli arpl inc mov add movsl ds cld std ljmp xchg and xor push mov call lahf aaa out dec add aas loopne test stos js out sbb lret pop inc xchg and andb mov lahf (bad) ja out sub test (bad) add mov adc fwait loope xchg push imulb and int adc jno xor dec and les ss hlt pop sti add mov movsl popf mov mov mov xor into dec inc inc jg mov pop pop inc fbld add adc or popf fisttp addr16 mov test pop repnz stos sbb clc rcrl xor mov and fdivl mov xor sub movsl sbb xchg push ffreep lret les ret popa mov data16 fimull sbb cmp data16 lret pushf jmp sub movsl push mov mov movsl add adcl sub rolb sbb movsl xor test push mov stc cmpsl jbe mov call (bad) loop inc fmull lods leave leave xor add in dec or add (bad) cmp jge adc ret clc add push xchg xor test cmpsb push pop mov popa loopne or outsb in les out divl pushl jae out in inc hlt pop or repz iret dec cmpl cmp (bad) bnd fisubr popf cmp inc or in es lock cmpsl sbb cmp dec or add stos sub dec mov in lods mov lea push lods xchg inc lahf sti fmuls jns or or mov test imul imul inc ds push ds pop push push push out (bad) sahf pop jne jle push std cmpsb mov fsubs sbbl mov fwait push cmp mov xchg mov xchg sub pop (bad) xor push xchg mov pusha xor push ret insb push pop push pop dec leave stos scas push xchg dec push dec test sarl sti sbb shl clc cwtl push jge push ljmp jbe xchg push dec cmp (bad) adc cltd bound jno je xor cmp clc sub dec sbb fisub pop andl fistp sbbl adcl mov pop inc mov in js inc scas sub mov jg (bad) or test in add add jecxz push imul or pop popf mov push pop jnp lock sbb lret mov int call mov ja sub mov (bad) je xor and scas popaw inc cmpsl scas mov pop js (bad) dec divl jge and push fwait (bad) in pusha or mov fstl jl mov mov or nop mov sub ret dec pop divl ret leave jae data16 mov mov outsb loope arpl sbb loope movsl xlat fdivrp ss ds mov jmp arpl mov or pushf int3 inc jnp stos mov xor cmc dec mov mov popf scas xchg xchg decb mov inc fdivp mov out dec ret or push arpl addr16 loopne or xchg sbb cwtl xor inc cwtl cmp fcompl xor (bad) jb jno mov bound rcrl inc push pop rcrl jo outsl xchg jmp inc pop mov mov pop xchg cmp jle (bad) and repnz ss dec stos clc (bad) mov dec xchg mov push imul movsl mov dec or arpl mov sbbl popf dec hlt popa adc mov add jp stos lcall push fstl hlt mov inc adc icebp xlat adc aaa std cld xchg inc fwait sbb xchg popa xchg and dec fsubrl pop or jne xor adc int fidivrl dec add cmp push rolb dec push jge mov dec imul std dec movsl jno and push xor in sub mov push lds sub push adc call push (bad) mov add push movsb out mov rolb cs enter sbb and and sbb int3 movzbl aad clc xlat xchg addr16 cmp push test dec jle jmp or dec cmp imul cwtl fstl dec push sbb or repz jmp xor test pop out and nop add loope in pop xchg clc dec insl pushf lods fxch push jp mov xor push in jae add inc sub inc push test mov mov divb fdivr iret pop outsb (bad) cmp dec jne aas aaa lds (bad) dec sub fisttp test clc push sbb into fisub inc in push cmc pop xchg xchg shrb or mov cmp inc aam in mov ljmp sub cmp loope jp,pt out test pop jns pusha nop cmovae pop fs mov clc sub pop mov je repnz sub adc push jle dec or scas dec sub (bad) (bad) xor dec dec popf xchg test cmc dec lahf mov shll decl in fnsave mov pop fistpl sub jmp add cmp mov pusha mov pop pop lret mov pop sub movsl mov push ret lods sbb int dec push in dec mov jae xchg jb cmp (bad) sar loope daa dec daa add incb mov or jb lret cwtl stc xchg jae push sub std aam popf adc cmpsl lcall lret in and addr16 in xchg insb push rcrb aad sahf ret lret adc push xchg or sub inc into (bad) cmp dec int lods iret addb neg lock mov jmp dec pop adc lret popa inc hlt mov das orl lock aaa jmp cmp lcall (bad) movsl aas movsl dec nop sub in bound jg pop push jmp outsb jb jne mov (bad) adc adc imul test dec pushl sub sub pop and fisttpl (bad) (bad) loope test test fucomi dec jg pop lcall addl (bad) xlat xor leave push movsl pusha test js insl dec dec pop mov addr16 jge cmp imul cmp inc (bad) incl out sub mov dec cmp rcrb push sti add jns mov push mov insb shl leave stc mov mov xor lret cwtl sbb cmpsl xchg dec fdivr ja movsb cmp xlat inc push rolb mov testl sti fs push mov mov add cs dec lret cmp aam stos (bad) sbb icebp jmp iret mov mov dec lea push (bad) dec jns mov nop add outsl fimul xchg fnstsw adc test movl mov jb cmpsb jg xchg pop pop inc xor mov cld mov pop cmc test (bad) (bad) int pop xchg vpaddsb shr (bad) pop lea pop cmp push jbe pop jne ret pop sbb outsb xchg dec into jmp sahf cld negb cmp mov inc divl xlat pushf mov push mov es cmp cmc out ljmp adc add or test (bad) fimull out clc adc test mov fsts pushf rorl inc xlat insl dec lret icebp rorl xchg cltd jae out out jmp push dec mov fbstp pop fistp mov lock rcrl or test out xor insb add push pop push jnp jne add lods sbb aam in dec jg cmc out or inc aas xor (bad) lret mov inc inc data16 aaa pop pop shrl cwtl lret and pop jl pop push cli push lods jg nop add (bad) adc dec jno repnz adc xchg xlat push xchg jle push sub lcall imul (bad) shlb fsts lret cmp int cmp mov (bad) or dec out leave repz dec xchg jl sub jg mov test lret xor outsb imul negb out sahf int3 push push mov daa in into mov cmp and das movsl lock scas fs xchg outsb out in (bad) (bad) push cltd mov mov mov fcom aaa adc jno dec or std repz jge jle cmp int3 inc int3 adc lcall daa (bad) shll xchg sub lcall in rcl fs in mov pop inc and test pop sahf test dec dec out dec pop dec sbb jecxz cmp or ficom lcall inc ss inc xor xchg test push add shrb lods les xchg mov xor lret mov jge cmpsb pop loopne incb (bad) cmp daa cmpsl in in cwtl mov cwtl add jae insb in loop insl bound add lods lcall dec test bound or ss cld mov push sti repnz fwait movsl cmp jbe cmp push mov xchg mov js dec pop mov hlt cmpsb loop xor movsl adc add pop fsubs fild or std (bad) jmp fistpll or lds sti pop mov outsl lcall jmp bound wbinvd push nop pop dec cmp sbb mov test xor dec (bad) in int3 test (bad) fild lahf xor cltd jo addr16 into push jmp or jno cmp jo mov (bad) jnp mov and gs or shrb jbe arpl mov stos popa dec mov daa (bad) pop add push jo mov cmp jge dec xor inc inc sub scas push mov jge pop pushf scas test (bad) push jbe loope xor mov inc add xor inc inc mov lea sbb mov iret adc inc mov pusha rolb rcrl push mov xchg xchg lock add or add add ret mov aaa pusha out stos or mov add dec fcompl outsb out iret pop or or sub jg xchg pop mov call les add sub dec daa mov add dec test rolb test fsubrp scas bound iret sbb and pop jnp mov popf lret or out int aad and mov push add (bad) pop lods lret mov mov adc dec pusha push cmpsl push mov sahf jns movsl in lcall (bad) incl es ds lock dec jge add cmp push pop jge outsb push mov push fidiv lods jg repz xlat push orl rcr add xor adc mov mov stos lods sbb shrl jnp push stc dec adc cmp xor (bad) scas insl test push sti cmpl in mov addb sub (bad) ljmp and loop push loop add (bad) fmul fidiv mov jo xor pop xor data16 ds aaa lods stos fcom out push mov repz stos add inc icebp clc cmp sub loopne and mov mov scas and xlat iret inc stc outsl outsl jne je add sub out add lahf pop dec xchg ret and sub es mov dec sar and pop push jp sbb xchg pop jge ret pop shlb (bad) pop lcall push xchg fs add in aaa iret jmp and addl jl clc fwait pop cmp add sbb push add (bad) negb push push cwtl dec xchg (bad) hlt mov and dec js add hlt outsl xor mov and mov stc vpextrw lds sbb in adc cmp sub addr16 jmp inc ljmp push mov addb lret sbb popf pop cmp push outsb pop and sti movsb push xchg xchg popf jno in push clc das loop insb push fs repnz gs xlat and loope rorb adc dec stos jmp cltd (bad) inc das mov repz dec jle xor add leave test fcomp push int nop jle sub adc add ret movsb push (bad) cmpsb stos (bad) push adc add push out pop call das std cmpl divb sbb daa stc divb mov in gs mov aas xor (bad) jo adc and out dec sbb out push mov inc push sub lock pop xchg addr16 jecxz or and insb ja mov jl push fwait les xchg sub xchg xor lahf pop mov dec hlt push stos fs cmpsl arpl (bad) add gs mov jp jns ja cmp imul add flds out (bad) mov rorl xor push xchg das push pop dec and mov push mov mov adc outsl push adc mov push push shr push push ljmp lea mov push mov sub std mov cmpsb dec push loopne lods jne lods adc push jne pop lods add inc pop dec inc nop or pop sahf xchg xchg rclb dec fimull test fmuls or (bad) sbb fs mov push out andl ja mov addr16 aaa xor orb in insl add jge cmp mov push push adc dec and fwait pop jb pop enter out negb dec jl xchg dec xor out fcomps add cli xchg xchg pushf (bad) mov outsb cmp or popf addr16 ljmp and mov sti aad fistpl aam test adc sub mov mov xchg out addl rcl lret enter pop icebp and leave lahf (bad) pop mov xchg dec aad jecxz mov mov mov push dec lds shl xchg xor mov js xchg aas xchg jmp jge mov cmp js jb jmp mov mov sub daa out push imul add fist mov sbb xlat ja and pushf mov (bad) sbb mov mov mov out push sbb push jl mov push jo push movsl stos rorl scas push jns xchg arpl sbb into cmp sub test push je insb jmp pop insl daa loopne dec mov cmp lret jmp (bad) call aam outsb mov (bad) ja lock pop jmp jecxz ljmp jecxz xorl dec xchg inc mov and adc lea addr16 inc mov cmc stos or push or mov scas rcrb xchg jne and push js fidivr sbb dec mov xor or enter xorl popa push xchg ror pop hlt lret pop or and adc int jne cmp ja aad addr16 addr16 push outsl pop jmp mov movsl stos push int3 out (bad) gs push (bad) aad out and xchg in mov xor push hlt negl fdivp int3 pushf insl jmp scas mov es xchg roll mov lea jmp push shr sub test pusha cmc push mov mov stos cmp addl adc or dec repnz call cmp or mov cmpsl mov nop cmpsb mov and sbb cli fimull and push ja divb test xchg fimull hlt inc lock adc aas xorb cmc out jge ret sbb pop test cmp add hlt pusha xor out imul bound jnp push aaa repz lret dec lods mov movsb stos pop leave sub push popa cmp or dec dec sbb lret out in cmp adc inc xchg xchg push push or mov or mov jae out inc mov aas jmp pop call andl push cltd mov loopne ret subl call push loope pop pop or mov mov inc sub ds out fdivl std dec mov int3 mov cmpl xchg fwait mov paddsw or jle jns js lods test dec mov lock lret dec jnp je inc xchg or ret cli (bad) jnp sbbl rorb data16 xchg fcmovnu dec sti mov mov mov ret adc xchg mov repz insb ret sub js sub jae call sbb aas jecxz and les mov adc mov sahf sbb lret jmp add lds push sbb sub outsl or mov imul and cmpsb insl jp std cmp jmp fsubrl jb push mov dec inc fildll ret inc adc gs in add pop int3 ja outsl sub xor jne add (bad) jmp lcall push cwtl push jno pop and test inc (bad) cld imul cltd cmp jbe out xlat out sub mov shrb mov pop addr16 stos cmpsb (bad) addr16 scas mov add in roll and aaa mov xchg pop xchg ja sub mov mov int3 mov inc mov repnz mov (bad) addr16 int xchg xchg je adc outsl mov repnz sbb pop pushf movsl xor xchg lds in pop push jp out fs pop dec push jmp (bad) (bad) xlat dec cmpsb aam push dec pop inc push out cli frstor add in dec movsl ret fildl in push in loope dec sub arpl (bad) mov push (bad) in lock sarl out (bad) xchg lret movsl jo (bad) aad inc mov sbb fcomps xor xor jmp jae adc (bad) lock lea or pop adc insl adc pop xchg mov jmp repz push lea pop mov or xchg mov pop ds dec bound les movsl (bad) mov jmp or mov call je dec jp lods jnp xchg out (bad) fdiv and in xlat (bad) mov outsl lret push jo (bad) in cmp repz inc data16 out xor (bad) mov (bad) popa dec jl std bound (bad) sub mov dec sub xor fidivrl or out hlt cmpsb rcrl push mov xchg ja mov mov mov jle ds lock mov and pop add (bad) negl jo repz mov inc add std lahf cmp aad nop mov sbb inc loopne lock lock movsb add test and ja adc sub cld test xlat mov pop and dec fimul pop adc in xchg push xchg or cmp out (bad) mov sub cmp nop roll orl pop dec test sarl sbb mov sub fidiv mov stc test fcompl in pop mov pop (bad) bound std test xchg rcrw sbb xchg inc mov inc mov outsb cmc add rcrb push insb add mov and pop out inc push cmp cmpsb cwtl mov mov and jmp inc lahf shrl (bad) mov push ss stos test enter lret adc insl sub iret cmp fsubr addb inc loopne push sub cwtl push test mov mov add pop sbb aas insb dec lahf push inc inc idiv daa pushf ret xorb std call out add sbbb xchg inc call cmc enter or pop lea int lds mov xor sarb or cmpsl fucom xor scas ds add adc jb adc pop xchg fxch fistpll cmp jb lret scas loopne jae cli ja ret test pop movl shrl ljmp jmp out lret xchg add pop ja loop or jg fadds pop in into test sub push scas adc mov xchg stc pop dec fs mov aaa outsb fwait in bound or push lds test inc xchg jge inc mov rclb mov or mov mov out scas mov fstps and aaa mov imul (bad) jae int3 or fistpl (bad) xor mov push push inc fnstsw push int mov xor ss lds nop dec mov ljmp aam lds cli jae stos dec rcrb inc push jns popa fwait insl push iret push inc roll mov adc lods sub mov outsb push jl clc (bad) popf push jbe add ficomp call or jmp enter hlt pushf pop mov xor out cli adc mov (bad) mov aad xor lods cs inc pop fisttpll mov dec fsubl inc cmp jecxz sar rcrl ret stos mov mov jo repnz xchg test pop gs push int3 lock xor (bad) out mov adc and jmp cli push adc dec outsl jl test clc mov mov leave mov add mov divb sti enter mov (bad) out xor test jge jmp call or jo add sbb mov sub ficom push inc pop sub out mov push mov outsb or std cmpl jbe push jp aaa call adc iret (bad) jg stos scas push and fdivrp jae scas cs xor dec xchg or out sub (bad) push sti dec push loop lret scas ds cmp fdivp fisubrl or mov mov imul ss jecxz push fisubrl mov jle cmp push lcall adc dec push cmp outsl push sbb mov ficoml into popa jne lahf loope push jge xchg and ret xor or repz loopne sub push pop lods mov mov outsb (bad) fistp inc sbb add xor mov int lret push rcrl mov or sub inc pop imul bound mov (bad) sbb mov and xchg ret add sarl push lods lods adcl adc jns cmp mov fnstcw into inc pop lahf push sub call sub pop sahf lret repz test pop loope sbb inc pop enter andl mov in adc (bad) push mov or (bad) ljmp ffree dec adc lds (bad) lret ret scas scas dec aad inc fdivr call scas mov stos test push inc cld shl inc xor pushf scas push ret clc inc iret (bad) das push rcll ja push push icebp and lock (bad) cmc loopne call ljmp push adc scas jb (bad) das add loop idiv in jbe loopne notb insl mov fs xor xor adc repz test (bad) sahf jo mov sbb es mov pop dec xchg sar inc int mov and arpl lcall lahf and mov push les test sbb aad iret or push and mov movsl pop pop shlb repnz cltd mov cmp or es fwait (bad) je hlt lret (bad) push mov inc push fsubrl dec jp aas aaa adc loop ds jb xchg dec mov mov fmull mov hlt lcall stc mov (bad) mov xchg minps pop xchg fs imul jne push mov (bad) and pop (bad) call mov pop sbb daa push es dec daa in inc sub xlat ds or dec mov cmpsb movsb sbb mov out int3 and jmp xchg ficoml enter sbb popa or and xor sbb xchg push dec inc and adc movsl lret pop les decb inc or lcall add jnp mov and xchg clc (bad) sarl iret dec cmp dec push in pop push es dec enter add std and pop mov xchg inc (bad) repnz cmpsl jbe cld sbb jp or addr16 push adc hlt mov sbb repz cmp adc ret push mov rolb push movsb loope mov pop gs xchg mov push jnp sub mov and ret pop movsb outsl jg das pop mov int3 aad data16 jnp (bad) arpl mov push cltd xchg stos jae pop or dec loope loop test lret shlb (bad) mov addr16 stc sahf jle dec imul or fucomi pusha push mov (bad) in outsl mov jmp mov sub push in jo arpl xchg pop pop mov xor test lea mov shll insb dec pop dec int add mov lahf movl mov lahf aad (bad) fistp rcl sahf fstps cmp pop lods loop sub adc (bad) jl call sbb mov dec add pop aas popa dec cmpsb and aas mov cwtl inc test lock nop jecxz xor out rorl lods in into jno cmp pop jnp insl repz mov jno jl iret mov cmp lret add jge cmp dec (bad) fisubl mov adc mov lret sub push mov popf cmp pop (bad) pop sbb push out inc adc rcrb daa inc clc jbe test test mov mov sbb cmpsb shlb leave push add adc lds ljmp scas mov lret mov jae (bad) adc mov addr16 fstps in (bad) sbb pushf (bad) xlat into inc mov xchg iret xchg dec imul jmp pop and (bad) outsl pop mov daa adc inc popa cmpsb in sarl test cmp imul add cmp fs xlat xor lds pop (bad) mov lret fistpll arpl gs lds test (bad) imul (bad) add jmp movsl push and jno movsb mov mov shr xchg jno xchg (bad) fisubl push fisub push cltd push pop dec fcompl mov mov fisttpll inc or iret aam lahf pop sbb mov sub pop or scas push sub lods dec clc cld in mov js pushf cmp (bad) mov and (bad) jne lcall jnp mov pop (bad) jo pushf out jbe mov mov call cmpsb xor dec loop dec popf mov adc and cmp pop (bad) mov sbb hlt xchg lahf mov xchg sub cli inc xchg movsb dec mov cmpsl push (bad) (bad) jp (bad) push xlat insb jmp mov rcll fmuls int sub inc je cmpsl mov test pop mov les xor sub dec subb stos cmpsb loopw mov xchg and pop mov jo xchg xor inc cltd inc outsb bound sbb out push dec jb xchg push dec push xorl jo sbb lea xor int3 icebp dec sbb lods aad mov xchg jge ja subl test daa cmpsb xor mov outsl jle clc xchg xor mov nop xchg add inc cwtl fs and sub xor xchg das sbb mov sbb mov jnp std (bad) ds les iret out mov xlat (bad) in loop xchg aaa mov mov aad push adc out sbb fild or mov scas add stc jae xchg mov push stos fucomip xchg out sbb adc icebp imul daa fcoml outsl jp cltd repz scas (bad) hlt or dec js stos bound inc int3 mov mov lret vandpd jle addr16 dec jge mov adc lods test fs cmpxchg leave jne aas xchg fwait jnp mov push rolb enter push jg jl add jl (bad) (bad) or mov gs iret xlat push add xor pop les aam mov sbb mov mov in lods incl mov jno and push fldenv lret fidivr shll das (bad) mov xchg sbb mov add cltd data16 add lret mov in jo mov add into mov jbe enter ss in lcall push movsl pop cwtl xorl testl xor sub jle divl pop cmp cmp fldt cs lods fisttp mov pushf mov loop lds pop fcoms arpl pop loope pop push jnp xor cmpb adc nop or js pop cmp fcomi xchg cs outsb lods flds mov dec sbb xchg xchg xor sahf pop and sbb adc push xchg dec stc cmp dec stos dec cltd fstpt jo add inc rcr xor cmp mov loope fiaddl push pop adc xchg popa daa jmp (bad) clc fcom out jmp sub pushf jl xor jmp or push scas mov mov idivb adc sbb cli dec imul je repnz ljmp pop stos ret out mov scas fstpt lret ljmp call jo cmp jnp mov fld1 push imul lock (bad) jae cmp push (bad) das sbb adc cwtl push sub mov cli xor icebp mov add ljmp push pop imul fwait cmp cmp mov loope clc cmp rorb xchg mov push jae (bad) int3 in bound cwtl lahf outsb pop jnp mov lea mov into out pop das (bad) and leave (bad) mov push and ss mov cli jl (bad) ja xlat cmpsl imul xchg ljmp and mov outsb nop mov cmpsl jmp inc adc cmp insb dec push sub mov mov (bad) push mov cltd dec xlat enter iret mov aas inc sub and jecxz mov sub and lods ljmp xor sahf das xchg or push push pop mov push pop mov loope mov jns (bad) push mov push stos (bad) sub in bound sbb dec xor and es (bad) pop push sub push add xchg stos bound adc dec cmc and (bad) fcmovne xor mov inc mov inc dec pop enter out jb add add icebp popf mov mov pop pop cli dec add xchg ss dec imul mov lahf push loope cmpsb push or mov loop mov stos mov xor dec (bad) sub (bad) gs cmp mov test scas repz cmp xor or xor arpl lcall popa scas cld jl test lock scas mov (bad) sahf mov in pop enter and enter mov pop xchg cmp xchg out xor jbe in lods test aad push push push or vcvtps2pd cmc cltd push rcl rorl inc sub jbe cmp and dec insl jg stos outsl dec mov dec scas push fcom insb xorl dec (bad) pop mov cmp adc lods mov loope (bad) fidivl fisttp lock xorb (bad) aam cwtl movsb fistl in enter (bad) repz jns (bad) iret fdivr jo lock cs sbb rcrb rcrl add xor jmp inc je mov push cmp push add outsb in aas aaa fbld cld pop xchg popf xor (bad) aas mov push mov cld mov mov insl ficompl test ss sbb popa ficompl and aam mov mov cli cmpsl mov out push inc cmp fisttpll lea jge lret or call mov mov sub cmp jl enter out lcall rclb mov std aaa and icebp sti das jl xor sbb insb mov test pop fistpll (bad) (bad) popa inc (bad) mov test mov xchg mov cli test idiv aas inc cmp xchg mov leavew xlat pop jno cmp (bad) mov cltd out fs daa aas out js rorl nop outsl ss push rolb pop jae jns fmul mov or xor sub and mov imul in mov stos fimul lahf inc cmpsb push jl js fcoms pop mov nop das mov jns xchg pop (bad) lret stc inc lret xor mov add int3 lcall or adc cs leave movsb loopne inc sub out and xor xor jecxz inc daa jmp fwait xchg pop mov mov xchg (bad) icebp std dec sbb cmp bound pop data16 xchg stos (bad) push cmpsl sub and xchg (bad) adc mov in repnz (bad) movsl pop mov (bad) cld add mov test mov imul aas fist xchg mov mov divl adc mov xor les sbb jbe pop (bad) rcl (bad) cmpl test jbe jecxz fs jns mov pop leave jge or jmp incl sbb movsb push ficom mov out xchg or aam sti mov mov cmpb lds repz push push cmpsb jno mov pop ds sub push inc or sub mov add scas leave xchg lods loope lcall inc cld sar lret aad mov scas sub scas mov clc stc negb cmp lret divl dec inc pop fistpll push shrb lds leave fimull adc or scas cmp (bad) aam sub aaa movsl outsl inc inc popa pushf mov cwtl jbe jecxz inc movsb cmpsw xor mov or mov sahf and fisubl push test iret push cwtl sbb or ljmp sub jecxz sbb pop scas pop arpl dec push rorb xchg sub sub pop push jb in test and jno test arpl jo outsl outsl sub push testl mov xchg inc lret mov pop int push mov and mov call add jmp inc fdivl push and repnz mov dec (bad) je ja shlb pop pop lods jo xchg mov push inc pop idivl mov xchg mov inc sub pushl add pop xor pusha cmp adc xchg sub ss sarb xchg movsb inc sbb leave or (bad) xchg cli pop (bad) jb aas fwait ret mov mov add mov cld roll std sbb xchg inc dec xor fimul loop fidivl jle mov cmp xchg (bad) dec jmp pop fsub out xorb jmp dec jecxz sub pop (bad) icebp xchg xor jnp arpl es inc xchg test add add jbe mov insl pop pop jmp adc and xor lea or in dec inc es leave jle xor and mov lds push das xchg jge mov adc mov xor xlat mov mov xchg movsl jae std cli mov (bad) push pop xor popf or xor stos ja lock je cmp xchg rol xor add dec cmp lock fnstcw mov shrb fistpll (bad) add adc push movsl lods add mov jne mov nop adc pop popf pusha and xor jo mov cltd mov sub add push ss mov adc fldt stos add (bad) movsl in xor aad lcall mov dec fscale outsl daa mov fstl cmp inc pushw das pop xor and pop ds mov andl add lods sub xor in fwait mov or adc stos fisttpll out mov push es push jg pusha fistpll out mov (bad) push aaa push pop lods mov inc push arpl aad mov lret (bad) cltd add mov out lods add into pop push mov cmc mov call arpl xor arpl mov (bad) ja and mov mov shl push pop (bad) or mov pop dec push dec fs push test jg ds pop cmp stc out fdivs sub in pop bswap jmp outsl insl (bad) (bad) lcall mov (bad) popa mov rcl xor (bad) loopne in scas mov jbe xchg or inc std mov arpl and xchg or mov daa rep imul outsl xor add std rorb jmp fnop jge pop inc push cs scas in lret imul dec cltd inc inc (bad) mov mov in mov repnz lods cmp test in rcll xchg jne jne out mov imull push mov xor jns or sub pop sbb xor sti std inc xchg sbbl clc int3 dec sub ret mov outsb cmp jge hlt jne adc sbb dec insb pusha std push inc jmp mov lret adc shrl int3 scas jae repz xor mov sbb inc pop add xchg sbb cmp (bad) pop std clc nop es sbb xlat stos xchg pusha mov int3 push sub jmp out jl sub cmc or scas or data16 inc mov frstor pop cmp loopne popa daa mov fimul outsb sub mov into pop fucomip mov push xor test (bad) cmp test inc frstor mov mov in push fldl xor test test sbbb shlb xor and sub sub push xor lret movsl add mov xlat (bad) or repz mov or lret in ja adc fnsave mov cmp lock cmp pop (bad) pop mov ljmp out inc mov or xlat lahf jns inc scas mov int mov xor jnp mov outsl push es les mov bound (bad) pop (bad) xor mov and ja sahf lods (bad) jbe sub xchg imul pusha fdivrs and dec sbb fdivs mov not mov mov clc cltd shlb divb out dec (bad) std stos dec out add test cmp ds push scas dec mov mov jmp mov hlt dec iret mov outsl and lods loopne mov leave (bad) sbb stos push mov outsb outsl push aas mov test jge call addr16 mov mov xor pop mov sbb fstl adc ja inc sbb or sub sbb mov fcomi test inc outsl inc mov leave decl sarb ret mov sub mov cmpsl pop imul and or loopne fwait loope cmp xor std lret mov add mov or fldt xchg mov movb lea push sbb inc inc pop jge xor test into dec xorb and mov cmpsl out pop adcl out pop push setp xchg mov dec imul inc xchg subl repz add fdiv ucomiss test cmp cmp xlat dec pop xor outsl lret xchg mov (bad) hlt dec inc repz sub xchg daa test in in cmp out mov mov pop adc and jnp mov xchg stos ds (bad) push mov xor lds cmp lcall icebp or inc ds int call movsb sub pop iret into sti in sahf jns jg ret rorb xor and xor hlt aas sub pop jl mov fnstcw dec data16 repnz mov mov imul (bad) mov or xor test jnp loopne cmp js cwtl ret xchg xor or or out xchg movsl outsb xchg push mov sub pop arpl aam mov push xchg xlat lahf insl jae pop lds cli cmpsl iret pop test lods aaa inc dec or mov scas fisttpl and cs lea push cmp mov or dec adc fsts and jb pusha add adc lods dec mov rorb (bad) fisttpll movsl jb mov sbb fbld leave imul fisttp sahf fcmovnbe sub (bad) loopne lea mov cmp pop dec lds xor jmp and and (bad) cmp lock pop pushf cmpsl fmuls and outsb xlat fisttp or xchg imul cmp out add dec popa movsb lret pop push jbe sbb mov js,pn inc mov push inc cmc popf sti cmp fs jmp and out incl pop in pop push mov xor jbe push (bad) mov jmp ljmp aam xorl sar outsl gs adc mov xchg jno stos jle mov push push and fidivr ret loop cltd fsubp inc dec out sbb lret jnp push sahf les das pop push repz (bad) sub popf movsb popl ss ja and scas cmp xchg pop roll jl icebp dec xchg push dec add aas cmp fsts xchg iret fdivr inc out adc rcl mov jb inc lods mov (bad) or int pop inc push dec adc add cmpl inc cltd push call mov in jno scas adc push jno dec and call sub cmp outsl ficompl ficoml push jle push lret je mov lahf (bad) xchg dec xor cmp or cmpsl jecxz fstl add sbb xor fsubrs bound fistpl adc or in subps add mov (bad) push xor add xlat out mov sub fcomi cmp and test jmp cmpsl sahf fsubl mov lret mov imul dec push enter (bad) cltd call dec rcr pushf or push xchg loopne add ja in popf mov xor ds xchg sub pop imul sub call and (bad) mov push cmp lahf pop orl aam dec subl inc das jg pop fldl idivb adc or insb (bad) cli add mov jle orl stc and mov (bad) cld push ja aad or es inc enter mov jge xchg mov cmp pop jo data16 jp dec xor xor and cmp sbb jbe add pop fsub pop lods movsb or push mov add push hlt mov loope dec sub jbe es loop jne (bad) out idivl or and daa inc push shll and shrb (bad) repnz fildll adc decb fsubrl push mov rcrl sbb outsb in (bad) fwait cmp push jge or dec push mov mov (bad) jb int3 xor dec lods mov iret out sbb push push scas aaa jg inc jae cs mov jo xchg imull inc mov aas ret dec mov enter inc mov cmpsb xchg and rcr and xchg movsl inc inc (bad) fcmovnbe lods push (bad) (bad) sbb xchg sbb push sarl xor outsb fs lea inc sub xchg insb (bad) (bad) adc xchg sub add sub gs lds mov jae fild in fldl xchg xor cmpl ja js scas jns pop test enter push pop inc or ret das cmp xor jns pop aas fisttpl mov in mov sti lods jp cs push xor inc scas mov mov fsubs inc movsb xor ror push repnz pop leave loope test or aas xor inc push ret inc mov jae,pt jle dec dec loopne mov shrb loop adc mov sbbl repnz inc test es insl dec bound inc sbb mov ss mov jno inc ds out loop lret sub dec test pop mov sbb hlt (bad) cld and loop cmc (bad) mov mov ds inc mov inc push mov or (bad) dec dec stos xrelease (bad) cmpsb jnp pusha out pop aas cmp pop lcall mov sub (bad) sbb jmp fs sahf stc fmuls cwtl nop cmp sub jg in push into dec push adc lahf scas mov and (bad) adcb (bad) xchg fisttpl int3 div adc xchg pop lcall iret dec (bad) mov lret in xchg js jns loop mov cmp popa enter mov and arpl incl mov xorl jle test lret mov in push xchg vpunpckhbw or in mov and gs hlt repnz dec daa notb and fstl add mov mov stos ds rcrl dec xchg sarb sbb cmpsb (bad) outsb cvtpi2ps lcall call add push mov jbe push (bad) pop in bnd mov xchg (bad) or push out mov aaa adc mov jno lods or lcall aam adc inc lods in inc or scas mov mov js pop mov outsb push das mov hlt ja dec mov fildll addl adc pop imul mov dec push shll fs xchg int sti pop jo mov mov jbe push xor pop xchg insb das fucompp add pusha daa movsb mov mov pop jb adc mov fidiv ljmp aad in fwait dec and push xchg pop xchg (bad) ja jno xlat xchg std (bad) sbbl rcrb adc int cld adc xlat addr16 xchg mov rorl aas ja imul push xor cmp int3 clc fcomip mov sbb pop hlt sub jnp addb pop clc roll sbb test icebp (bad) cmp mov fcmove cli (bad) leave (bad) (bad) imul outsb movsb (bad) fcomps (bad) jo xchg pop sbb pop push lds lahf fbld popf mov xorl sbb inc jle mov daa insb popl mov xor xor (bad) cmp push insb in clc lock mov and adc add inc jnp cli lods and cwtl (bad) fildl outsb mov jp (bad) addr16 scas testb (bad) cld ret dec xlat imul fsubrl daa sbbb xor cwtl dec bound add inc aam sub xor push lods jbe std fucomip inc pop sbb cmp cmp sbb mov movsl xlat scas jbe mov subl dec mov add fstl sbb jbe out sbb out rolb push push rorb and repz jne nop jae sbb sarb or or dec pop lret jg mov jne jns popa pusha mov pop mov and orl shlb inc mov and pop sub mov rol mov fstl and mov mov call mov jg popf lock stc add push cmp lods sahf cltd mov popf popa lds shlb jb lock xchg in or xor jmp mov or fisubrl mov lea sarl movsl adc (bad) scas test aam fwait clc sbb and ret pop lret addb iret or xchg test or push add sbb ficom es pushf es inc sbb or inc jnp dec fwait xchg mov mov mov adc call pop andl add push outsb out scas add fist pop out cwtl xlat sub aas jmp nop xchg sbb cli add mov cwtl lock push scas or repz mov push jmp or sbb adc sub ds jecxz test mov leave jge das scas jne mov add ss test cmp dec xor xor pop test or loopne dec and add movsl out lahf mov fsts ljmp and mov mov iret popf pop enter test cmpl iret sub mov lods sbb fisttpll pushf jge cmp scas xchg push mov inc mov enter sub ss pop jne test imul adc std leave imul dec adc lea inc ret stos or popf bnd jp jge insb fs inc outsb xchg sbb ds das mov (bad) mov icebp jmp movsb pop gs stc test (bad) icebp mov mov cmp imul mov loop ds jmp jmp add push insl pop mov in stc in jno sahf xchg inc jns cmc rorb mov and dec mov mov sbb into dec lahf sub hlt fimull dec xor add dec bt or cli clc cli add test mov push or mov push lods leave cs fnstenv cs ja inc xchg push ret mov or jo push lret divb xchg in mov xchg sub mov mov jge sub mov cmpsl loop call inc xchg jb ljmp sub xor sub pop hlt (bad) xor xchg xor pop xor cmpsb or sbb das xor jge int gs add jno movsb cmpsl ja dec mov adc jle loopne pop daa mov cmp push mov fildl add mov lds faddp jns and cltd push cmp and pop stc xchg arpl js in xchg leave test shrb sbb test aam out nop (bad) jnp div jns lar and fs cltd mov bound sbb pop es jge mov jmp out sbb mov jp ud1 mov add cmp jmp (bad) je xchg sbb roll (bad) movsb int3 sbb mov out les add dec test inc shl lock xor mov in sub add aas mov fcmovb popf sahf sub mov sbb (bad) mov fisubrl pop std jns pop ja dec fwait das icebp in (bad) int outsl fiaddl test inc in lock lea dec mov jo cmpsb movl and jae daa hlt sub into arpl xor dec in cmp cmp add addb xchg inc in xchg dec sub test xor repnz movsb notl pop dec sbb inc add sbb test ret sbb cmp mov sahf mov int or mov (bad) pop or movsb pusha or mov testb orl sti add inc sarb lret in fsubl fdivrs imul sub lea sbb xlat (bad) scas push pop loop (bad) sbb cmp adc add xor mov and sub lds xchg orl sub sbb and add xchg jl mov sub push pop pop sub add xchg jle and inc int3 mov fistl or pop insb mov xor mov inc fs decb (bad) push inc cmpsb push sbb fldz inc jmp xchg loope ja mov xchg test into movsb mov sub scas fidiv jo mov push xlat xchg es divb sbb push stos xor lods das ret mov in cmp cmp push cmpsl leave bound sub lds push es or adc popf jb leave lods in pop jnp ds adc imul push mov out clc sar mov stos jnp jl (bad) add inc cmc imul sub loope xor mov fcomps repnz mov addl iret lods (bad) fwait popf mov jle das jb and pop or cmp sub std jmp insb dec push insb fs iret aad movb push imul mov xor call lods imul scas push (bad) mov push out jp dec (bad) or addl sbb jge add inc sti sub xor test cmp mov and nop icebp jbe gs es sbb fwait jg (bad) xor add add dec std gs repnz das push xchg mov fs sub xchg (bad) xchg cmp mov incl xlat int3 cmpsl test inc mov enter pop sbb (bad) push insb inc or insb add iret mov cmp mov or cmp insl mov jp inc je add push mov cmp adc test ja lahf ret nop fwait testb das jmp jecxz dec and lds sub fadds xor add adc mulb in lret adc ficomp fmuls sbb movsl mov cmp leave add jge add sarl ror lods inc ljmp pop fldl mov je cmpl cs pop push jg imul (bad) addr16 push out mov mov lea adc dec xchg push in arpl int out test sub fldcw nop lods xcrypt-ecb cmpsl lret sbb adc loope inc inc fwait lock pusha lock xor xchg xchg dec xchg dec mov push mov (bad) sub movsb xor stos jp or cs jno popf adc mov dec push cs xor push inc jp cmpsb mov ja pop mov cltd xlat xor pop fcoml xor stc in inc in sbb imul push mov lock insb add mov jbe aaa test pop orl rolb push lods ret fisubrl adc daa pushf leave xor push sub adc loopne sarl adcl aad fistp sahf or fisubl pop cltd cmpsl fimul stos stos mov stos push int3 nop sub mov push cld nop add rcrl jg dec mov jno sub addr16 cmpsl and push call jle adc add sub mov (bad) mov mov mov mov or gs lea xchg mov movl add inc jbe xchg or mov sub pop shrb mov lahf push pop and cltd xor push add add psllq jmp mov add int pop imul push rorb cwtl jmp mov jnp adc shll repnz mov in sbb stos mov xor xchg call sub dec add std daa int3 sub xchg sbb cmpsb inc jno jmp push mov popl stc shlb push or outsl mov push adc jge ss xor inc xchg pop inc sarb rcl sub jge shlb int mull xchg scas xor mov dec and sub lahf mov xchg add mov (bad) mov aaa roll mov cld xchg arpl xor dec (bad) mov rcr clc push xor jns or mov add inc sar aaa push rcr scas and sarb lea mov in test stos xor adc imul shr test addr16 push dec popa fdivs divb xchg and imul rcll out frstor ja mov loopne sub lahf mov xchg ja cmp insl je,pt mov rcll xor dec cltd outsl bound daa or leave pop adcb enter jno or jnp mov mov in sub add andb jl lods pop stc xchg mov stos pop jecxz (bad) cmp cmpsb xchg and shrl dec mov mull jl or xchg add and int sahf movsb pusha xchg push jne mov mov dec fbld (bad) lods pop scas int3 adc (bad) jae mov test mov or xchg or jb shlb aad ljmp mov (bad) xchg in cwtl pop adc mov (bad) jle jne addr16 cmpsl inc jg jge add loope aad xor mov adc xchg les push sbb inc ret push pop cmpsl pop inc adc or or cmp sub push fldl2t pop out push push mov loop fnclex cwtl mov xor aad mov mov ss sbb (bad) fistp push into pop sub dec push or fnsave scas pop adcl sahf sub jnp mov sbb fld sbb adc clc and inc sbb dec cltd fistpll inc (bad) pop lret ret cld fiaddl in div movsl mov daa xor insb mov stos xor scas out mov nop push out inc cmp out jno xor test xor int icebp sub push scas test mov fmull lods push and mov das fimull pop jno out popa xor in not test xor out cli or add cmc or int3 mov (bad) shll sub pop scas loop fbld dec xchg xchg mov cmpsl sbb sub je mov inc sarl lock int3 loop or loope cmp adc shrb nop movsl inc jmp jle add loopne cmpsl popa repnz testb push out nop cwtl mov test cltd rcrl cmp das sahf rol or mov insl pop adc mov adc xchg xchg loope add popa xchg cmp mov je xor outsl addr16 xchg idiv clc cmp and into adc addr16 xchg pop adc pusha aas movsb pushf out push adc movsb out mov xor jne pop sub (bad) jb sub and pop out fs lret adcl or ficomp test lds xor es mov add mov (bad) (bad) pop push jmp aad pop sbb push jle ret popf push xchg add lods testl cmpsb stos xchg sti in ret rol movsl (bad) jne xchg pop dec stos rorb sub ljmp in subl jae sbb outsb push popf ficomp adc sbb jge adc fisub shll popf or das xchg in rcrl jp add lcall cmp dec pop aas jp rorl jecxz arpl add dec insl out cmp sbb int dec mov hlt mov mov test out and loopne out cli in imul mov mov (bad) in stos scas xchg mov aam pop aam sub fnstenv adc es pop pop mov adc or cmpl les mov and mov push push adc sbb pop test aam mov jo or icebp and test test pop xchg fsubl pusha sahf in (bad) repz sub lea js dec pop test sbb mov sub jno (bad) mov cmp icebp scas gs adc in pop and dec pushf insb imul lahf or xor lds xchg sar sub or js pop ror mov lcall rolb sub adc sbb mov add out movsl and sbb lahf pop push lcall xor lds dec xor cmp into rcl mov mov adc test or stc add sub xor pop notl jae sub rorb repnz das (bad) outsb push mov (bad) cmpsb xor xor push das sbb sbb inc (bad) xchg adc pop repnz or inc ja (bad) push pusha push movsb add jno insb lret (bad) mov jmp lcall sub and in xchg dec xchg popf xlat mov pop or cmp pop int or cmp adc mov push adc popa sbb mov add loopne adc outsb ret je mov lock sarb sti pcmpgtd jno leave mov nop (bad) xor es push lret lahf add aad pop inc and fsts jge sahf in popf mov push inc xchg gs insb cmp inc mov adc jae fistp stos jl cmc dec sub jg mov push std cmp lods jmp push stc icebp pop mov xchg movsb sbb adc stos lret push sub jle mov imul rol ss cwtl jle jle push pop popf mov jae fiadd pop inc in add mov leave (bad) nop xor js add and and movsl and xchg mov xor pop cmpsl bound stos (bad) mov cmp ret and mov notl push cmp arpl fs (bad) out dec jecxz or btr outsl aad leave push xor shrl mov shrl mov mov int mov arpl imul (bad) (bad) jne cs stos ret repnz rcrl pop or hlt scas jbe cmp imul adc mov xor push jns lock sub mov fs in mov xor jnp pop nop/reserved shrb inc imul mov stos push xor sbb cld popf pop std jle in xchg aas (bad) icebp imul lds ret repz fs sbb jecxz jns sbb push cmc pop sbb cmp aaa sub cld loopne pop pop adc aaa idivl dec cltd mov and fs test inc gs pop xchg cmp sub xchg pop jl (bad) mov jg dec cmc fimull xchg popf push jge mov sub ljmp xor fwait aad lahf jl dec xor and in sub add mov sarb out js sbb loope or addr16 arpl add ljmp fbld loopne pop sbb into xor movsb popa leave (bad) lcall cmp inc xor loop cmpl dec adc jmp aas add inc jge aaa aam into jg inc std dec (bad) daa dec xchg cmpsl cmp out mov int xchg xor or adc mov faddl adc push inc and imul loope cltd cs xor movsl mov ds pop sub pop mov fstpl dec aaa adc hlt mov movsb adc dec ss hlt repz inc test mov cli cmp dec pop sub dec mov cmovns xor pop fwait xchg cmc and mov mov or dec push xchg outsb add leave es aaa pop xchg xor mov lcall subl lcall jg lods es outsl fisttp (bad) jp mov xorl sti push mov jecxz cmp (bad) (bad) pop cmp add xchg mov addb mov jp aad test pop cmp pushf in mov add cmp das in cmc and dec push ds mov and arpl sub fidivrl pop int jl sbb sbb inc dec clc jne (bad) mov push mov int mov cmpl popa hlt pop sub mov ret jg movsl push sub idiv sbb into inc push xchg frstor imul nop pop cs mov icebp aaa movsb outsl sub js mov popa mov sbb es or dec inc in mov (bad) adc scas jmp jecxz pushf and bound or loope sbb pop scas popf mov outsl jl outsb jne xor mov cmp cld cmpsb xchg lds cmc mov fwait jns sub xlat push pop dec nop pop int and les into aaa into faddl (bad) gs das ret jne fistpll pop or cltd scas aam jbe mov loop jbe sub mov sbb add mov andl pop iret nop mov mov xchg dec cmp loopne jbe jmp cwtl xchg inc add divb div push (bad) aad sbb dec add daa cltd pop sti cwtl scas jae push pop adc add scas aas mov cmp mov fild xor aam ds lret xor sub dec inc mov movsl cmp cli dec jg cwtl mov pop lret (bad) xlat arpl jnp fwait pop scas daa aaa mov jecxz jno pop (bad) push test dec pop jg push push mov (bad) or dec push sti mov (bad) mov int cli (bad) inc into fisub nop sbb jle push xor or and outsl flds jl pop ds ja sbb lea lds add outsl mov out xchg or xor incl inc pop (bad) shr loopne ja ret fwait jecxz sub xchg push dec mov mov and mov lods jne dec dec insl mov enter sahf xchg dec cmpsl repnz loop sub popf jbe pop fucom ret aas les sbbb xor ss jno inc push sub ret xor sbb lock iret lds insb sti cmc flds loop test jp and lods or push sub in cmpsl mov lds mov mov call ja test cmp inc jno cmpsb loope pop aad sbbb sbb push stc loop sub test outsb adc fadds loopne dec xchg jl fadd lea mov icebp cmpsl (bad) leave sbb cmp in sub popa xor mov jp jnp add (bad) jnp adc push in adc test and aam in cmp xchg shrb (bad) or (bad) push inc mov outsl movsl inc push jo cmp pmulhw jb scas cmp xor jno cmp cmp (bad) jae bound clc push in cmp mov xchg jg arpl aam adc pop js imul icebp aad bound decl ret mov dec es iret mov xchg lods mov or popf xchg es or mov fsubrl (bad) jp shll mov aaa add mov push cmp inc xor mov push lea popf (bad) dec ja mov adc mov dec hlt imul int mov mov push call or and dec repz lock addr16 mov lret ds flds (bad) call and outsb roll inc push insb pop (bad) push dec ja jne pushf xlat pop mov scas in add stos sbb (bad) sub mov lods aaa mov ss adc inc cwtl jg and mov lahf (bad) xor jmp mov mov repnz jnp lretw dec dec adc adc adc scas iret mov movsb test adc mov sti (bad) mov (bad) mov push popa sub add xchg cmc les and push add push and ror jecxz sahf pop popf and out scas lds sub arpl pop adc sbb push or jbe aaa sub mov dec jnp scas gs xchg cmpsl pop inc mov movsl xchg stc imul (bad) int3 dec mov jecxz (bad) pop cmpsl fldcw adc cmpsl lahf dec imull ret repz jbe outsl icebp ds mov mov jne es ret xor xchg repnz icebp xchg sbb aaa mov cmp adc push stc movsb sub push mov aas adc (bad) ret xchg adc add in es sahf or xorl insl sub cmc lret jl jge or jecxz int3 iret cwtl test iret imulb nop and sbb add ljmp fcmovnbe rcrl das pop inc jecxz es insl jecxz push pop xor sbb mov lods cmp sbb push aaa pop mov or jns xchg es addb sub out ret insl push add cmc and ret sub in (bad) (bad) or or mov shlb jno adc fidivrl push push pop pop pop movsb lahf std in xchg mov or cli out leave sti mov out out and mov test (bad) and push sbb js shrb push out and jl sbb bound mov xchg xor jg or dec mov lods and cwtl xlat ds inc movb lret test in dec pusha mov ds dec aas or out shl mov in mov xchg sub push xchg mov mov dec aaa sub shrl push clc ret sbb mov sti pop cmp mov lock fcomps aad fs mov cmc test in loopne pop les sub loop fidivr and inc mov in jb fdivrs lods mov push aad mov ret daa fisttpll add adc mull xor jae mov xchg outsl mov lret call outsl sbb mov pop mov iret xchg and lods dec dec pop jne cmp popa cmp xchg mov ds xchg imul jne aaa pop fistl sarb push popf leave cmp jae imul and dec adc inc cmp daa push (bad) mov arpl loopne lfs jno fs roll push dec and sub (bad) xor add (bad) sti jnp in cmp fild xchg push inc push adc inc xor sbb xor ds xchg repnz out jno aas lret enter dec movsb and mov xorb ja pusha mov in sti add jae lods in add add addb sub xchg test sub mov ja jmp aaa scas cmp cli pop popf dec push mov test push inc cmpsl es mov xor or std push sbb scas add push popa nop popa sub mov orb and pop fisttpll fstp aad ja push push mov fstps pop sbb test in push and inc jl lret mov xor mov sub bswap sub (bad) or add addr16 cmp test push or cwtl rcrl mov mov mov push cmp lea xchg or adc and xor and inc sub cmpsl test movsb dec scas cwtl daa aam xchg mov cli or and flds and pushf adc xchg (bad) push jg aad fidivrl inc jle jnp mov sub iret dec xchg mov (bad) out and lret inc (bad) xor fstl movl (bad) test fidivl push add jnp shrb loop inc sub cmp mov xchg xchg sbb pop js mov push mov jmp pop mov imul or or pop pop jae rcl xchg insb jp dec inc mov (bad) call loop aaa ds sub and mov dec out (bad) shll int3 jb or xor or int3 (bad) sarl pop es cmpsl adc and jne adc jle mov or mov pop add movsb xchg mov dec (bad) (bad) jmp in inc pop push xor mov cmc test data16 (bad) addr16 loop aas jl mov or jmp fidivl fimul (bad) cmpsl fwait aam int or cs jle enter out sub ljmp xor bnd pop mov add out or push mov or dec fcoms pop stc (bad) sub stos sub loopne sbb pop mov outsl push sub insl inc lods fsubrl inc lods in mov pop sti adc stc insb dec mov pop adc (bad) sub (bad) test ficomp imul js (bad) mov sbb cli and (bad) in mov pusha subl pop fcomp push loop push ret fnstsw (bad) je xor dec jge or jecxz movsl sbb mov daa mov cmp jl mov jmp cmp icebp inc iret outsb faddl add cwtl shrb mov jne inc pushf ror negb mov push scas inc or test xchg dec outsl imul in lcall mov inc inc mov cmp stos into in add gs bnd jns sbb lahf ss test mov inc jae pop out out es aam loope xchg repz pop cmc imul or adc push js movsb mov icebp icebp inc inc cmp inc (bad) aaa jl imul stos add xchg insl dec and iret mov test inc out stos mov xor das fs xchg or lock pop ret ficoml hlt cmp mov int js xchg push cmc dec rcrb jle sti mov imul sbb sbb inc and cmpsb dec orb pop dec inc and iret movsl push xchg sahf enter fstpt sub scas push push mov unpcklps outsb orl pop test sahf lret pop xchg mov inc repz int3 std enter das pop inc pop (bad) jae stc loop and int3 scas ret shrl ljmp enter lret test lret dec test into lret jge ret inc lods sub nop sub xor inc fs pop cmp fidivrl jecxz cmp and stc popf adc push add imul dec mov arpl fsubl lahf pop jg mov enter ds xlat mov enter pop stos repnz pop in sub mov mov mov adc and pop or mov scas mov jb fwait jmp movsb (bad) jg push loopne sbb ds pop sub mov ret cltd jecxz cmp mov icebp dec lock (bad) hlt inc jns pop lret fimull int jns pop mov xor fcompp dec icebp sbb add inc arpl mov inc mov lcall addl pop jmp push or movsl insb mov or std mov inc push loop dec into scas into dec fisttp shll lods sub (bad) xor push jnp aaa sub cmp mov inc inc add mov xor sbb imul ds nop mov (bad) cmpsl pop insl pop push cmpsb fidivrl cld setb leave inc rclb (bad) cs loopne movsl cmp cli pushf xchg (bad) fldenv pop xchg rclb xchg inc ljmp adc cmp jae jno in roll mov enter subl cmc fwait enter int3 lcall or xchg lds imul jb cmpsb mov mov adc dec sarb xchg gs iret add lods pop bnd (bad) addr16 lret add mov out adc arpl aam push adcb push outsb icebp xchg aas mov xor and push mov jb ficom insb cmpsl in adc movsl rorl shl push stos (bad) cltd mov xchg shr jg aas frstor mov jl lret mov push (bad) push pop sub cwtl jg push out cmp cmp jecxz lock jl cltd dec mov pop nop clc jle add lods and lds pop hlt mov inc das lret out clc fcoml pop shll cwtl mov add jns xchg insl push addr16 mov sub sub (bad) std (bad) in pop xor addr16 jnp (bad) cmp jle arpl dec ljmp add lea pop pop pop js sbb add cmp ljmp or jmp fsubp inc out lahf push and (bad) lods lahf subb in adc lret int3 pop (bad) icebp mov jnp push outsl js cmp lods push dec loopne into mov cmp jnp add clc adc xchg pusha jmp jp jno lods inc arpl icebp xchg out mov mov mov shl test clc fisubl dec (bad) xor clc out pop stc ret push inc sti int3 cs in and imul sub mov pop sub xchg dec fldt mul push test jb or lea movsl xchg mov add cmpsl push in adc negb adc xorl imul xchg and popa pop movl pushf cs pop mov pop cmp (bad) and into inc cmp scas pop jp mov ret lds (bad) jecxz rorl xchg xchg xor mov ret lea int3 dec pusha xchg jb (bad) shll mov sahf lods popf movsb xlat xor je aad loop pop imul test movsl xchg aam pushl lock popa subl or pop sbb mov cmp add leave inc mov or mov jno in roll xchg scas cli push adc xchg popa or pushf add (bad) mov cli cld loop in sub cltd lods in mov push rcrl cli fsub pop mov push lods jbe mov into fs (bad) (bad) jg fwait pop adc and adc out jns mov lahf dec xlat mov add mov gs mov int and ret cmpl aad testb nop in icebp cs jge ljmp leave adc inc dec dec adc cltd outsb popa (bad) scas inc or inc fildll sarl dec inc call pop andb pop push dec xchg das add mov arpl xor (bad) jne out imul sbb sub dec cld nop insb push dec int jge jne pop insb loope in mov ss popa xchg fsubrl lret mov nop fldenv rcrl rorb add xchg fdivr mov adc xchg popa daa pop gs xlat aam jne sub aam fcomps in aaa (bad) sub push in or lret dec sbb call xchg enter and pop inc xchg hlt into cs int3 (bad) fcmovnb cmp mov or push pop xchg out ffreep add jo ret add movsl test inc out in jecxz repnz imul jnp aas jmp pop add test sbb add jno cmpsl in movb cmp out cmpsl lods xchg adc (bad) mov dec mov in pop out jl xor mov xor scas push jb imul mov (bad) fwait push dec push in and cld fisttp adc xchg push jns cmc sub lods push jbe fisub sub out inc in enter xchg lds jmp sub mov mov push outsb loop ret mov xchg mov ljmp inc mov call jns push dec mov sbb push cmpsb jge or dec push xchg fistpl mov int3 sbb pmullw xor mov js cld adc cli jp test pop sub mov (bad) testb adc inc mov xor pop inc int sahf mov js add sahf arpl sbb lods and lods cltd sbbb decb addr16 add mov leave push fmul sub (bad) xor stos arpl (bad) mov mov les mov (bad) sbb jae mov and push and js cmp inc xor stos or pop add inc xchg jmp mov adc out fildl (bad) sbb out scas ljmp out cmp sbb or popf mov dec scas pop and pop aas push xor in mov addr16 rcr hlt add sti jle bound insl inc hlt mov jne sub into int lret mov jbe lods sbb stos lcall jg andl dec adc dec ret sub mov adc adc adc or add in sub sub stc daa in xor cmc sub test pop (bad) clc mov adc adc mov mov rcrl adc xor and and mov sahf aas stos insl add cli jl inc mov cs repz ficomp add movsl mov roll push mov mov lds fisubrl jns cmp mov pop scas jno fadds call push cmc sub jp es mov popa outsl pop sub add js adc cmp mov mov pushf add (bad) lods xor and sarb xchg cmpl movsb jle cs sti lret cmp int aad lods cli mov dec jmp sub jp pop inc cltd xchg outsb cmp in jle jae xor (bad) xchg jg mov inc jecxz sbb add mov mov xchg xchg or sbb cli xchg out mov add xchg fdivrs lahf (bad) jb push insl mov arpl xchg mov or and int orl mov insb mov and xor test out je push pop add or xchg jl in (bad) push or adc xchg cli rol sub xor ja jae or nop or jae xchg inc pop jb push sub daa in outsb push mov cmp scas lds (bad) icebp sub mov inc or out push movsl xchg adc and out push fidivl cmp (bad) adc mov dec push ffreep faddl mulb aas push pusha fsubl push cmpss xchg mov loopne ja out mov clc lock pop (bad) int push mov loopne xchg mov and cmp insl test cmp cmpl pop lock inc repz hlt jge mov mov dec pop imul (bad) aam mov rcl inc jp mov add and rcrb xor mov int shl jb jge popa fcoml cmpsb mov sahf sub jbe shrb mov mov sahf ficompl js mov mov (bad) out (bad) mov dec pusha add cmp jmp out xor pop or mov mov inc jb and test cmp sbb add xlat aaa cmp iretw sbb pop (bad) sbb shlb sbb add adc (bad) dec data16 test sub mov (bad) sub imul inc ffree cld mov aas lea sbb cld sub fsubl enter jbe andl scas lods sub inc adc scas adc fisttp lds cs add outsl ret into mov int3 sahf adc femms enter (bad) int3 loope imul mov add shrb fidiv sub pop or (bad) lret jmp dec loope push xchg push int3 roll and in out dec push jmp mov xor xor or xchg sbb aas dec xor or addr16 jnp test pop ret xchg in jl and mov lods les xchg mov fstl and fimull mov cmpsl dec stc sub xor jl aas sub mov mov movsl jl push sbb mov stos mov pop adc and xchg and lock int3 mov inc xchg inc into adc into dec leave cmpsl popa push sub loope mov sbb fcomps test ss add repnz out aas xchg repz shrb scas popa fwait jge insb arpl inc (bad) mov cmp and sub lret pop pop stc je subb dec or insl stc inc pushf inc push jp dec cmc push jae cwtl mov loop in in ljmp and popf xchg (bad) cmp popa outsl (bad) xchg xchg divl xchg imul data16 jle js call add jo rorl add loope dec mov test sub int3 jmp (bad) mov jne clc paddw mov sbb hlt lock fisttp (bad) sbb faddl or mov jge lea xchg mov hlt cmp gs leave into mov push bound mov aaa pop popa adc jge rorb adc rcrb js out cmp dec int3 ja sub (bad) int imul and mov jnp sbb add inc adc stc rorl xchg push and or inc roll sahf cmpsl xor sti push jns jae jne pop mov movsl lcall je cmp hlt outsl ja lret ja test jle popa iret ret into je jae out cmp add les inc sub push pushf push in out (bad) sahf stos jb mov repz (bad) lods popa cmp outsl popf and and hlt rorb dec dec cli enter fimull pop out scas xlat pop jne fxch sbb in jno fildl push add sbb call mov push push (bad) clc sub xchg in mov pop or push in push ja pop outsb lgdtl dec dec fisubl mov inc sarl test mov xchg mov mov and push lea push dec (bad) lods mov je add hlt es stos fwait incb mov dec ret cmp testl jecxz lcall dec xor cmc or in negl xchg mov add or push and fs jecxz xchg sti (bad) lret jb pop lahf cmp jp pop jmp in jbe cld int jp nop xor jno mov enter jne shlb pop lcall (bad) test jne cmp lret jecxz cmp sbb mov xor add fwait fwait or sub insl mov les js and inc ds push inc inc pop ja lret (bad) ds mov jbe bswap xor cld gs insl inc cmpsb jecxz push arpl decb cmpsb cwtl pushf inc jg lahf pop test push adc fcomip cmp mov pop daa push rorb add cmp xchg stos mov clc je xor mov pop xchg jbe sbbb test aaa push adc call inc mov leave or aas imul mov or push cmp mov xchg cwtl jg push clc ret sahf insb push loop and (bad) or or xor xlat mov pop xchg pop xorl insl shl xor sbb out cmp inc or dec rorb mov xchg pop mov and jns scas inc nop xchg imul add pop js cmpsb movsl leave movsl dec cmc adc mov push out mov add or jno imul pop notb inc mov stos std stos sub or mov lret push rorl xchg aas fwait cmpsb mov dec fnstenv (bad) lcall sbbb dec hlt and test pop jbe cmp addl mov pop mov rorl xor add fs mov mov outsl aas mov pop out mov cmp mov mov test push shlb jecxz icebp frstor pop xlat icebp adc stc punpckhbw jbe js jb lcall sarl inc dec jnp jne sbb cld nop push ss dec les js lods push or xchg jbe mov xchg or je int3 jg fnop js cmp cmp mov xchg sub mov mov fwait or mov ljmp cmp mov cmpsl rorl movsb aad ret or cmpsb pop push xor in aad inc sub lods enter and jg xchg or sub dec test cld test jns out inc mov dec shrb mov push sahf adc push fnstcw nop pop mov int3 cs cmp adc adc repnz inc mov rolb aad (bad) adc stos mov inc (bad) mul pop push adc mov icebp insl cltd push pop bound (bad) sub sub mov inc pop adc or stos fldcw aad pop xor test test mov aas xlat pop pop enter int or xchg add cmp xor pop dec sub push movsb cmp mov jl arpl arpl mov push cmc pop sbb dec sub inc ja sbb popa int3 pop jmp stos lods inc stc push ljmp adc out and jmp cmp sbb sti (bad) mov pop (bad) (bad) cmp cmp scas out ret insb sbb jge inc (bad) mov add dec in scas daa ret pop out xchg adc lcall sub mov add hlt aaa and cltd pusha std dec stos and adc mov inc or xchg pop pop (bad) jb mov (bad) call (bad) je cmp cmp rcrl bound cltd scas iret inc leave test pop icebp push jl dec add cmp dec mov cmc repnz adc xchg lret aad xchg lods sete ret outsl in inc or inc loopne in mov inc xor test and or or xchg add movsb in sub rcrb mov jp inc jmp add xchg add cmpsl jle xor fdivrs xchg or (bad) lahf outsb shll sub fldt adc cmp test pop lahf test xchg cmpsl rcll iret cmp pextrw xor aam or adc mov xor jp pop xchg ljmp jge jb dec xchg fs mov lds or cmp sbb adc es rolb mov mov xor xchg lds addr16 push lea arpl fisttpll insb push aad sbbb or pop imul xchg (bad) jmp lret into mov shll int3 outsb in jle push cmp lret je mov out sbb jno sbb out pop in in out in outsb sti std sbb jge iret test (bad) push outsl push jge ljmp sub dec mov mov or daa movsb xor add sub adc lret cwtl outsb dec dec int3 sub sbb mov std add test xchg ficompl mov pop adc sub jle add repz lea lcall enter insl popf jl fadd xor test pop mov inc stos mov std in jp lahf fidivl inc mov inc push imull into imul call xchg (bad) cli xchg cli pop pop in inc mov lcall sbb pusha add loop xchg fcmovnb pushf aam pop pop out add and add push or pop push mov adc cwtl and cwtl and sub into dec incl aaa push adc xor xlat and or ss mov add rcrb fldt jp (bad) sbb pop mul aas push sahf or adc jns std dec lods or fistpll (bad) fbld xchg xchg (bad) dec stc int3 dec mov pop int3 inc movsl dec arpl adc inc push adc cmp jnp mov mov mov dec push mov or or outsl pop outsb jae xor or and out xchg jae add andl ja pop bound adc mov pop jne jle pusha sbb cmp push sbb mov dec int (bad) out int3 je xchg mov mov into cmp (bad) (bad) adc push push xor push xlat loopne mov sbb psubsb push inc int3 inc dec cmpsl bound ret loop mov into fs jp xlat or aad nop repz inc push dec pop incl and shrl xchg sub flds or les or cmp enter jns sub jecxz mov push fidivr push and cmp mov pop pop jb jecxz insb (bad) repz lea xchg mov push repnz xchg movsb jae dec jns or iret hlt sub fsubrp fild in pop and idivb mov outsl mov je xchg sub cmp jb iret ljmp notl int3 (bad) hlt dec and mov cli ret mov jae outsb psraw orl addr16 mov and and add pop xlat jae fwait push jnp mov add mov mov push cmpsl mov sbb push clc jmp xor fcoml pushl adc add movsb call lods (bad) aas repz push or ds and dec outsb push xlat leave ja jns sti mov push imul cltd and xchg pop enter push jae mov dec xchg loopne aad or jnp cld es outsl ficom sbb stos pop jo incb div push enter (bad) xchg idivb in mov scas mov mov mov nop loope push jns sti and jo in sub inc or jl xchg pop lea ret or and xchg and std cmp adc shl mov in sbb push inc in leave lret cmp xchg (bad) dec cmp jg arpl fisub movq hlt dec xchg movsl cmc fbstp jns sarb jo (bad) sarb or int3 mov clc push in jle mov mov push outsl fldcw mov fiaddl jo mov adc repz xchg push jge arpl pop out xor ds into les js repz xchg lcall shl mov mov mov sbb insl or and test sbb fcomip das xchg and mov sbb mov fldt nop in push xor gs push pop bound push fs hlt inc push test data16 ss mov jnp les cs fadd es mov call push (bad) mov ljmp pop mov sti adc bound dec cmpsb (bad) in jg lcall pop rcrl jo iret cmp pop push and add xlat pushl enter sub mov jl push dec mov (bad) and push int aas cmp lahf sbb stos mov mov dec lods and jmp add xor pop sbb and test fistl jp and add pop rcrb orb int3 mov xor xor outsb pop inc push sahf imul and ljmp pop cmp cmp scas daa les imul and sbb sub jo (bad) push mov pop cmc loope jmp ret loopne,pn and or xchg mov outsl cmp xchg std (bad) mov mov pop cwtl test bound sbb inc movl int3 inc mov les pop aam cwtl sbb mov push or xor mov cmp jg (bad) repz movsb les sub mov add push cld lds push lahf pop cli and (bad) (bad) mov push addr16 jns repnz dec jnp fstl adc sbb fdivr repnz sar push pushf dec cltd (bad) jns cmpsl in push iret fcoms pop push in imul pushf outsl lahf addr16 cmp dec inc int3 test lret (bad) mov jle int (bad) mov push push cld pop dec xchg jnp enter pop lea push add cwtl jle or pop and movsb jne lods cwtl (bad) test outsl or inc rorl adc push clc idivb mov outsl inc je dec inc adc (bad) fiaddl lods test adc pop (bad) jne cmp xor inc inc and add xor xchg arpl fidivrl mov xchg mov adc enter or add js in mov and hlt push push xchg pop inc cli rolb insl movsb push xor pop jge mov call daa jle push mov lods dec cmpsl aaa sub in xchg mov mov jo rorb std inc pushf clc mov (bad) mov daa aam das divl xchg mov fistl jae fcompl or out test mov add cli aas das mov sub mov in movsl adc pusha fild jge and cs sbb xlat dec gs mov xchg insb xchg (bad) addr16 leave jecxz nop nop leave and (bad) test mov (bad) movsl cmp je jl cmpsb js sub in pop in outsl je push adc mov xchg xchg jnp inc pop xor adc stos fsubl inc pop inc repz mov mov pusha push dec pop arpl loop leave mov clc jno (bad) mov movsb leave mov mov ds xor sub stc pop sub test imul stos clc frstor outsb fldl adc pop stc dec mov dec mov sarl mov iret pop sbb mov dec sbb adc rep pusha sbbl loope push aad sub sahf mov lret movsl (bad) xor insb cmp pop sub or cli outsl jnp xor cld lret and dec (bad) into int mov mov aad jo add pop jmp (bad) sahf adcb lea pop jo rcrl jns stc or test dec lcall pusha movsl cmp xchg in inc bound xchg test push test cmpsb add shrl scas mov pop mov mov inc mov dec lret inc xlat ficom pop jns ds imul xor add sub xor mov ljmp fdivl and clc jae enter dec xchg or push aad dec mov sub xchg movsl ficompl rcr push sahf lcall faddp cmp sbbl ret mov xor dec (bad) mov enter push fidiv xor shr push push sbb and test mov push add sub dec mov dec xor decb mov or inc sbb cmc es xchg jl stc and in sbb (bad) outsw xchg xor cmp pop or sub lahf shll and nop mov iret add (bad) in imul mov loop in stc cmp test sahf stc dec ds cmc jge cmp jnp push scas cwtl lahf lds cli out (bad) add rclb push inc das movsb mov int3 pop or imul inc mov (bad) cs pop adc xchg push jnp pop cltd idivb or mov loop movd cmp stos aaa hlt test push push std sub jns icebp mov dec addps mov popa jg inc sub ss cltd sub outsl jne mov and cmp mov shrb mov fiaddl xor imulb inc fwait cli cli (bad) enter cmp fwait mov xor hlt pop adcb xchg xchg aas mov and stos jb icebp jg in adc dec and pushf and xchg fcoms test mov inc mov vpaddw pop or mov mov outsl jge jne popf jecxz das into xchg pop xor jg sarb or sub mov or add mov xor (bad) xor loop mov cmpsb bound inc scas pop mov cld lods xchg imul jle out cmp push dec data16 mov cmp xor adc mov xchg jae enter les sbb dec (bad) ss cmp mov pop mov call inc imulb jle in fldenv lcall rorl lods aas fdivl xchg (bad) icebp nop push stos scas mov in xchg pop cmp (bad) stc icebp jecxz cltd aaa mov (bad) mov enter inc pop mov xchg stos push loopne mov cmp jl lahf ds pop jecxz pop ds xor js mov mov test push mov ret mov mov scas lods ret push dec loope pushf dec sub shl push ds mov xor in inc cmc mov shll mov movsl popa (bad) (bad) mov cmp mov sahf sub push sbb push ds inc mov aaa pusha cmp scas adc jne xchg push icebp sahf test shrb (bad) jge mov (bad) scas hlt push bound inc add roll cmc sub pushf pop sbb mov xchg mov sbb (bad) jne cmp xchg mov pushf (bad) cmp mov stos adc shl pop das dec cmp ss jmp stos fnstenv or insl pop movl sti jl scas mov push add mov push mov sahf jl xchg cli xchg fisub push and pushf loop stos inc add push add xor fldt xchg fwait sub (bad) adc cltd push lahf outsb mov mov aaa inc arpl ja cmp pop loop aad or sub cwtl and (bad) lahf lret pop insl sub mov cmp stos test (bad) jb sbb xchg leave lds rcrl sbb and jno mov mov repnz or add mov iret and ret les sbb int3 mov sbb js out xchg jnp dec in mov ret aas scas add ds sbb mov sbb stc sarl cmc xchg pop (bad) iret inc sar cwtl cmp int or stos mov out xchg (bad) adc xchg fidivl sarl pop ss mov inc arpl dec pop mov sarb das (bad) mov jecxz cld mov dec push out jb mov in mov les fdivr xchg pop sub lret xor mov daa lock scas dec mov sub cmp inc ficomp outsl or (bad) divl push cmp xor push fidivl mov dec (bad) sub pop cli fdiv push mov add push cwtl push mov add (bad) jmp aas (bad) ds inc in mov (bad) jns and inc mov fwait mov mov cs test mov adc rcrb sahf iret fadd ja ret add mov pop cli add mov movsb movb ljmp adc pushf sbb shl sub mov jg roll imul jmp (bad) out shr push (bad) adc sbb or les jb loop and rcrl daa jb xchg add repnz movlps inc out add in lret cld inc push jecxz sub pop aam mov es fcmove inc (bad) loop pop or mov xor pusha (bad) repz ljmp test ret loopne push cld sub (bad) and setne push (bad) stos popa cmovno mov inc sub (bad) stc imul aaa dec shlb movsl imul (bad) mov push mov (bad) frstor adc jp cli imul jnp pop cmp int3 push adc pop pusha pop mov shl adc xor push mov mov pop gs xor sbb push rorb inc shrl mov (bad) jmp mov iret in popa mov dec (bad) push jnp or push mov push call push mov sub sub in jno adc arpl jg lock jecxz movsb push sbb xor xor adc xchg cmp in mov add xchg shll loope rorb call xor mov test lahf fs cmp jae,pt adc sar mov push clc subb jne mov mov imul add push or cmp inc xchg orb rorb sbbb pop and mov adc fs flds pop sti popl insb xchg stc (bad) pop inc cmc lods test loopne stc stos and das jmp and jge jmp pushl (bad) loopne dec jl idiv xlat sub xorb pop add sar repz mov ret daa ss sbb jmp movsl pop stc jne mov jb sub enter cwtl mov cltd or jo arpl hlt and pop gs sbb hlt xchg lret mov lcall ss cmp and repnz xchg pop test xchg push xor xor jbe xor std leave insl jb test xor (bad) mov ret aaa test jno mov gs add std jb (bad) dec jns jle xor aas movsl je and rorl or dec cmpsl and repz ljmp sub add fwait lret adc sbb cmp pop cmc mov mov int3 jns es xor add xchg loop cwtl and dec add dec (bad) pushw pop pop dec jmp in dec (bad) js inc cmpsl mov push mov xchg imul in inc stc adc xor ret mov inc data16 mov add xchg fstpl push shrl fist jl outsl sti inc jb lea (bad) or fs or popa adcl ja enter add pop jl fwait in mov (bad) ret outsl daa cmp pop data16 std sbb fsubrl xor xchg std xchg jae (bad) out jae int sub jl (bad) fstps xchg mov clc mov mov pop jmp adc add das shlb mov xchg dec jecxz mov xchg cmp jge das enter ja sub xchg ljmp sub or fs push sub push sbb lods (bad) push xor mov xchg lret xchg fsubrl out cld xchg bound xchg inc pop xchg jl cmp mov fcomp jae ret xchg jecxz or pop adc (bad) movb into test or adc sub mov mov cmp sub cmp sub sbb cmpl adc xchg mov adc leave xchg adc adc dec or shrl xor hlt dec out popf jae scas sub inc test fwait inc fadds in mov jge pop nop xchg sbbl and mov iret rorl push and push test mov jno hlt jmp into sti and push mov loope stos std and and pop scas add xchg dec adc xchg (bad) rclb cmpl out sarl mov mov sbb jns dec fistpll mov int add fcomip adc pop fisttpll adc aam xorl andl repnz pop cs fistpl cmc mov inc into and mov push sbb int in jb (bad) or dec insl pop jge mov dec fistpll cwtl and mov jg in cmc jne dec fs jmp pop int3 push cmpsb xchg out adc scas jge cld jg movl mov xor cmc cmpsb mov add (bad) hlt mov lcall cs int dec (bad) leave jle sbb in mov or out xchg and push je adc stos imul dec shlb and ficoml scas in outsl aas mov add mov and pusha xor jo pop mov sub lea daa rorl es mov push repnz push add mov aas sub mov cmc mov roll and out dec xchg jns xor xchg jl inc inc mov iret mov dec dec hlt fldl push and (bad) insb mov fbld stc lea sbb insb xchg aam push pusha mov mov leave ja inc mov mov fs imul xlat mov cmpsl mov push imul clc (bad) and aam xchg jb hlt (bad) xchg scas sbb in or push arpl pop movsb out jns (bad) sub hlt inc lods dec add aas push clc dec out jmp push dec and xor test adc push sub das cmp or bound push in flds or movsl lahf or xor push mov (bad) adc mov fcmovb jg sub pop mov adc pop xor push xor push cmp in lods mov sahf add adc and mov mov pop pop fidiv adc push mov jb xchg cltd and jl xchg (bad) repz ss pop test ss cmp xor adc inc sub jle inc or xor sbb fwait xchg mov sub aas pop imul or sub pushf ds (bad) (bad) clc mov jnp pop mov scas daa jl (bad) xchg (bad) (bad) jp lds sbb ffreep lods xchg subb and sbb mov std in jecxz std out add in push fmuls mov mov xchg and sub mov add insl mov mov out sub or movsb mov das mov pop and mov insb (bad) mulb xchg addr16 pop sbb aaa leave or sbb jl insl xor cmp mov jg mov or pop sub ljmp sbb push movsl mov in jmp jecxz fnsave cmp jmp push outsb xor daa jbe gs scas dec jno cmc inc pop pop or jle adc out loopne pop xor sbb and mov sub (bad) push pop insb fcoms dec inc roll cmp xchg cmp sub mov test pop and or xor les rorl pop movups fdivs lahf sbb and enter add or and fisubr cli mov mov pop fdivs sbb pusha test pop mov testl mov das rcr insl jb sub ss inc in movsb or (bad) pusha fisttp lcall jno subb add and cmp scas jle or sub xchg aaa lods lret movsl xor push dec xor and push std jb mov ds inc dec adc mov lret lahf pusha sub push fdivs movsb jne push and mov or jge aad dec popf pop gs adc mov mov clc jecxz pop dec outsb (bad) pop pusha (bad) int or in pop in psubsb cmpsl xlat and pop and or outsl int3 out stc daa arpl add dec test lock push dec add inc lret cmp testb mov inc cmp daa stos aas pusha sbbl adc fisttpl mov xchg jge mov sar lea dec icebp push jae fs add icebp jg sbb add sbb mov cmp inc rorl das sarb inc jle sub stos sub cmp imul inc lret add dec icebp mov cltd pop pop sbb fldl jno xor adc (bad) jg mov fs jne in jle out inc jnp mov inc stos imull bound cwtl adc fidivr cmp sbb adc lret lods jp (bad) mov lret inc jl shr dec xor mov mov cmp popa das mov push inc fimull push dec adcl aas push aam scas lahf movb leave lret ds cmpsl cld aas clc add rcll popf popf sub dec dec ja enter mov push jo stos sub aas pop out push mov out jnp in or scas push orl xor xor insb adc out mov adc call sub mov lret es xor sbb inc hlt cmp and cmp adc jo xchg movsl sbb repz mov mov iret (bad) cmp popf cmpsl jmp push xchg inc call push mov testl lock jmp inc dec sbb (bad) add adc fisubrl push insl aad xchg test sub mov or test xchg cmp jb sub cmpsb (bad) mov inc mov jge insb or pop pop jbe fcmovb jmp mov div adc mov lahf test out inc dec jmp mov mov cmp xchg and add ret scas out or adc in rorb mov movsb push gs aaa icebp gs ljmp sub adc xorl adc cmp dec pop inc int gs jl mov cmp bound ss add inc xor and push cmp push inc mov test mov cmpsl xchg or cmpsb ljmp lahf mov dec gs adc lods push xlat mov cwtl ds aas mov add fisubr ficom loope mov rcrl arpl (bad) mov aaa fildll ljmp jl (bad) sub add sub data16 mov int3 xor dec outsb fmull adc pusha outsb xor ret or into int3 mov mov jecxz sub add pop insb sbb pop and inc xchg pusha mov mov bound or loope add mov test xchg dec mov aam cmp mov or pushf out fcmovnu fildll roll sub pop dec imul fdiv lret xor adc hlt sti in repnz mov or xchg (bad) stos sbbl adc xor mov (bad) hlt clc dec test push xchg mov je mov imulb push jmp mov scas xor aaa cwtl pusha mov inc cmc xchg mov mov (bad) cmc enter or fwait iret mov sbb xchg jmp js shrl pop jmp pop hlt js and xchg jg and enter jg loopne sbb xchg cli call cmpsb es mov xlat push jg pop push or add cld jnp outsl sti and cwtl enter cmp push mov ret test jno cmpsl inc aad pop mov jecxz cmpsl div je (bad) movsl lss cli rol popa jns ljmp iret lods (bad) add pop or add fsubs push lea pop stos and scas popf insl or push je imul and leave inc mov enter xor pop dec jecxz (bad) jmp or push mov fwait data16 jae dec jl mov xchg aam ror lds out data16 and fisubrl int pop leave loope mov (bad) ss xor mov jnp pop ficomp push inc enter in or inc sub repnz (bad) hlt rolb (bad) mov out mov cwtl lock sbb (bad) jno into xor adc mov (bad) repz pop fcmovu adc shll add aad fsts dec nop dec nop xchg cmp pop dec adc fistl fmulp sub (bad) and negl shrd xor pop idivl mov mul int test pop pop jp inc xor into test ret std pusha jns sub pop lock or mov mov xor cmpsl pop loop leave adc iret imull cmpsb cmp sbb popf call add fwait cld fs mov stc out lea pop fiadd popf inc (bad) stc pushf data16 jbe (bad) pop jg dec sbb in or adc inc xor sub push fnstsw lock pop ret aaa clc rcl push jae test mov sub pop push es (bad) inc mov les out arpl add (bad) sub lea jle sbb inc aam jecxz xchg (bad) sbb stos and mov pop dec cmpsl xchg push int3 stos mov mov mov push je xor mov jg or mov lahf int3 aas lds and sbb (bad) xchg sbb and (bad) lods ficomp sarb pop adc fcmove adc mov lods xchg add aas stos xchg test test xor in sbb xor andl aaa xchg mov rcrl pusha hlt sbb xchg jmp mov ret or cmp push imul dec dec push test sbb mov lea mov jo pop cltd push imul cli xchg xor sbb jns cmp xchg push push cmp icebp (bad) pop adc in call stos cmp inc popa pop dec jbe mov je xor xor and pop sbb hlt popf pop divb stos push mov pop sub sub pop push movsb bswap mov cmp and inc mov or (bad) dec in xor fdivp movsb popf and lds mov fs jno or pop inc cmp cld sbb lcall ss push repnz (bad) and lods push insl in cmp sbb aas xchg lret cli (bad) mov mov cmp enter pop inc stos pushf inc adc mov jp mov inc lret loope xor inc mov loope jmp enter mov jmp mov pushf and repz nop sbb xchg mov inc sub out in inc jecxz pushf cbtw mov jae repnz and fild js pop sub add int ja or xchg cmpsl loopne loop test push or enter fsub jbe cmpsl push add mov rol mov xchg dec aad mov xor lcall sbb push out pop (bad) (bad) or jp loope pusha xor pop xor lods imul adc imul (bad) push ret nop rcr popf jle loopne and sbb popf je mov repz fidivrl das add arpl dec lods ja lcall and push pop addr16 jns popa aas mov and xorl int out stos shr add stc adc sbb aam jle mov push and pop dec jg sub xor or das or pusha outsl push (bad) in inc pop test clc daa call cmp cmp push (bad) repz (bad) shrb jne cmp pusha sbb rcrl mov insl sbb mov push or js lea aam imul or cmp ret mov mov dec ret daa imul fnstenv and pop inc sbb xor fldenv push xchg (bad) jmp andl lods scas ds cmpsb sbb pop stos pop icebp pusha mov xrelease daa cmp xorl pop sarl lahf jo push jb repnz inc sti or push sbbl cmc and fstpt mov test push scas lahf lret lcall daa cmpsl push movb pushf cmpsl (bad) mov pop or lea sbb and mov mov adc xchg cltd mov std add mov cltd xchg jb push (bad) ror (bad) mov lods mov sub jmp lea mov stc xchg ljmp in adc pop inc cwtl insl aas stc hlt iret mov xor lea divl push in add cmp cmp and pop cld daa mov inc fisub jecxz inc insb daa cld jo pusha mov add cmpxchg mov cmp pushf mov cmp xor adc gs xchg adc mov jmp imul and stc fistl mov aas rorb dec pop lahf cmp add mov test outsb sub in subps stos shrl cltd popa push in or fwait inc push fs mov and sbb adc cs inc jl or (bad) jne mov cmc lcall pop jp mov add sarb push push cmp mov lods xchg inc cmpsb push xchg cmp mov stos es inc mov and cmc imul (bad) mov xchg cwtl ja and ja outsb (bad) adc inc mov jecxz scas push adc in or nop out sub scas rcrl inc pushaw rcrb popa jo imul out add add push cs cmp pusha data16 rcrl xchg movntq push arpl push mov loopne repz inc out je clc jecxz dec mov (bad) in les dec add add push and outsl or mov call out test push and mov mov lods das aas mov leave icebp inc or insl sub sub (bad) mov fdivrs negl push stos mov mov (bad) xchg repz sbb mov pop lahf fcomps or pusha test sbb daa fisttpl or in into mulb or movsb add aad movb mov xchg stos in pop add ja (bad) fild and and dec cmp jo pop mov xor mov paddq cmp ja fsubl gs add inc push lds shll inc ja inc xchg sub daa jae insl mov pop je je add das sub out aam cmpsl in fs (bad) pop rorl fwait pop push lods sub test fwait outsl test test sub test loopne aaa pop sub cmp insl pusha add fwait cmpsb inc das xor out jmp mov (bad) imul cmc fs mov xchg outsb xchg (bad) mov and xchg or loope inc xchg jecxz addb (bad) mov adc or cmpsb sbb fadd xor mov sbb imul pop jl out in movsl xchg and cmc push mov add jb aaa cmp lret lret sub or mov addr16 notl (bad) mov in sbb lods push gs shll mov les lds shr xor push adc jns pushf out andb jp pop leave mov sbbl repz popf test jo ljmp int or ss (bad) repnz (bad) mov mov lock and stos and cs cmp lods ficom dec das mov notl pop mov lret mov pop lcall push lds pop pop xor pop ljmp xchg (bad) cmpsb mov push ds cmpsb repnz lock lahf inc inc jns out cmp call stos sub push mov push in sub sbb leave and lret cli jmp aaa daa fbld add leave data16 test enter and jmp movl dec or push pop jbe cmpsl sbb mov cld loopne lds xor rcrb jne cmpsb test rclb push cmpsb cs test push and out mov and stos scas test jp dec cli cmp fwait negl jmp es cmpsb mov in int3 and lretw jge mov stos xchg scas movsb adc jnp jg sbb lret jmp loop cmp pop sub pop cmc les sub mov sub pop aad popf fdivr (bad) fsub mov jo sahf frstor fbld jmp fsubrs fsubr push inc lcall lds (bad) nop mov or mov popa jne lcall mov xchg pop mov pop hlt popf jnp vhsubpd pop movsbl fmull nop add out mov out pop pop xor add pop mov dec popa enter jo aas insb mov fwait lock lcall push je inc mov cltd in pop and push mov add push js xchg andl push test adc lods int3 pop sbb aas fsubs out jo jno cmp fistl and test cld gs stos les dec push in fsubrl in cmp xchg jmp xor fcompl outsb add fwait enter push loop daa push pop repnz sbb fldt int loop sub mov jle pushf adc jp scas arpl jo jbe mov pop inc push daa nop mov fs mov push xchg mov xor push (bad) clc sbb insb test (bad) push scas movsb insb arpl cwtl cmp cmp loope (bad) iret cwtl scas xor mov and lods fs xor pop xor xor sbb out mov add es (bad) scas (bad) out pop js lods out fisttp je push adc or rcrb pop sbbl (bad) lock inc (bad) bound insl insb scas test sbb and neg pusha call fild cmpsb jecxz arpl ss pop jne lods xor mov push je and and sti xchg hlt pop jae xchg mov cmp or push mov push jb sahf cmp xchg loop loope daa xchg fcompl (bad) xor movsb sarl pop int mov inc aas xchg pop adc repnz xchg push outsl adc sti idivl add adc add insb pusha repz ss add popf jae shll mov xchg (bad) cmp xor cwtl pushf mov push mov xchg or inc jmp lock push mov dec call push sub ret pop jmp lods inc dec and cltd adc pop dec clc int3 call imul xchg jp xchg popf je push cmpsl add push in add push pop imul cltd inc jp ds ss insb xchg clc jge sahf pop adc iret insl loopne ss mov push nop enter and push test push push fcomps dec js dec sbb jl push rcl pop and lods shlb xchg xchg pop stc addr16 inc pop aam mov pop mov shl aas (bad) and insb arpl jle add jl cmp cmp jnp adc adc push icebp hlt adc adc mov sub mov sahf pop insb ret lret sub mov mov jp sub aaa imul cld add loope inc sahf cmpsl frndint push gs js inc add jge or or loop xlat in pop loopne popf xchg insl lods repz lock mov repnz dec inc stos pop sbb scas cmp js (bad) cmp mov sub sub popf repnz inc jle and rep xchg inc inc and inc add jno mov imul arpl bound jp outsl pop outsb pop ficompl adc aas inc inc icebp push aaa jo lock clc test lods outsl adc adc xchg or xchg sbb mov jmp jno aas scas (bad) fsub cmp inc hlt icebp fidivrl or aaa call mov sahf dec and cmp mov sub call pop outsb sbb xor xchg pushf rcrb pop push mov cltd xchg lods and nop shrb mov aam inc jb cmpsl in jbe (bad) (bad) leave repz sub pop jns push sub xlat psubsb mov arpl add jecxz jp push mov shl fmull xor call dec andl push daa lock aaa pop pop pop dec or push jl cwtl (bad) jbe movsb pop dec xor inc outsb cmp xor mov pop cmc push ret jo (bad) inc insl jne ljmp inc out mov push mov dec out cmp mov mov pop sbb mov ret push and das push lock cs icebp dec test pop sbb cmpsb sub inc jmp clc cmc sub loop push ja rol aam lret repz out and lods jae in cmp pop test mov jmp mov push cmpsl gs pusha std fisttp shll mov shll lods fisubrl (bad) sub push xchg and mov out mov stos cmp sub sbb sub in popa (bad) mov outsb (bad) rolb mov cmpsb lds or mov fnclex int aad cmp jb or insb adc (bad) aam outsl ficoml daa bound inc mov dec push sahf xchg aad add pusha (bad) aad (bad) jne rclb orb mov cmp dec test repz sti jecxz mov sub out xchg push xchg dec jnp int3 (bad) cs mov in aad scas divl mov cmp inc add call popf outsb dec xor push loop aad mov cli sub inc insl lret xchg js and xchg or aas lods xchg ljmp and xlat mov and leave je fucomip nop push xor call and arpl dec jno sub fwait and lods lret ljmp lahf lods es push push cmp dec scas imull cmp pop call dec pop pop jmp icebp adc jecxz adc test and rcl aad js call fcoml pop dec adc xchg cmpsb test lea cld cmpsb push cltd fsubrs sahf pop inc icebp dec dec lods fisubr mov mov cmp mov add mov lock cmp cs mov into arpl pop lcall fwait (bad) and mov or (bad) pop and out pop fwait movsb mov movswl sti mov testb test sbb cld movsb xchg dec add in test jb pop test (bad) dec add shrb and cld clc fildl pop inc imul dec es (bad) daa lods (bad) or sbb ja daa cmp aad pushl popf inc push sub mov mov push sahf scas push mov outsl dec movsl xchg add pop fdivr rcr lret mov (bad) out rorl insb mov (bad) rcl addr16 pop (bad) pop sub ljmp mov (bad) xor sti xchg sub (bad) mov mull sub rcr incb out lcall jmp lock pop in add mov (bad) jae iret mov movsb and jge push sub push (bad) cmpsb hlt incl push int adc jle hlt add loop adc icebp mov xchg cmpsl push jge popa inc adc xchg movsl or div outsb jp xlat xor inc das repnz adc (bad) outsb xchg inc add inc popa and outsl daa clc scas jo rcr (bad) in pusha push sbbb xor push outsl test int lret std call sbb scas mov mov in cmp push sub mov mov loop xor xor call adc aad xchg dec loopne (bad) mov ret cmp aad leave push lret or pop in pusha add fistl xor imul jmp psubusb std pushf jge inc mov aam push fwait sbb inc inc fs ret jp xchg sbb out mov adc rcl leave mov dec fnstsw scas (bad) mov adc jg sbb inc loop cmp repz pop mov cmp xor out ret and mov mov push jae or cld lock jl sbb aas add cmpsl inc or fnstsw mov mov push (bad) sbb fwait (bad) mov and adc dec scas pusha mov shll mov jecxz mov lods movsb jbe pause lods jnp xchg push jge adc and jne xor stc test loopne push lock lock cmpb inc sub fcomip mov jnp inc pop mov lds inc push mov push (bad) (bad) xor or mov pop sub les loopne mov push and mov pop sahf xchg or bound and jnp or lea imul push cmp dec sub test fildll add in and pop xchg sbb adcb inc loope popf out hlt jle and xor fiadd mov pop out leave xchg sbb xchg cmpsl test sahf inc cltd adc call sub lcall xchg scas cltd orl pop xor (bad) pusha pop jl jne scas faddl lods cmc xchg lahf das enter and adc and push jge dec pop cmp pushf jecxz (bad) lods push xchg data16 mov decb shlb out push sahf sub or out out pushf arpl xlat repz mov mov jnp push fs (bad) xchg and fiadd cmpsb (bad) xchg mov mov sahf inc adc cmp mov adc adc adc cmp pop jns aas inc sub push sub into jge je (bad) mov daa xchg mov xor jg inc lahf movsb insb sub icebp add sar cmp inc adc pop jmp inc (bad) les aaa mov and rcl pusha iret in decb pusha xchg out jge (bad) push gs fs adc pop popa xchg lds cmp hlt ja repnz xor scas or add in xor cld jo xor and int insl pop insb in sub and xchg cmp ds xlat push mov sub lret cmp icebp xchg fnop push dec (bad) aam and cmc jns cmpsb dec std xor inc jp scas cwtl push cmp xor lahf sbb push je pop push ljmp (bad) scas or movsl ja,pt rcrl popf mov sbb inc xchg sub sbb xchg loopne repz les std loope fbstp bound pop and sub jno mov or jb jae repz jo mov jo mov xchg stc xchg (bad) mov mov (bad) leave dec push mov pop cltd jp push push lods sub leave jmp mov ret jge scas lock fildll dec push push mov mov xor cld cmpsb xchg jnp fcomps insb gs xor sbb jns adc flds out jecxz ds lcall push (bad) mov push in in gs dec (bad) ds jo cmp push push mov les xchg jp out or out mov mov imul rorb aad out aad jg pop mov loope mov lret xchg jo xchg xchg fdivrl stos test adc pop and lods movsl aas mov dec (bad) adc mov enter into pop ds push lahf lock std and adc push xor call je into iret js loop pop push test rolb (bad) jb push stc mov imul int3 mov popf bnd sbb imul mov fistp icebp jne push jno insl and push lock sbb cli cmp sbbb out push pop int (bad) in icebp mov repnz push cmpsl inc int3 jnp lea mov cmc scas jmp mov scas sub mov test jne push and xor cmp imull in test scas jb xchg int pop push test cmc out ret js xor xor and fsubrl push pop insl jecxz iret movsb sbb call lods fldenv add fcomps (bad) mov in pushf dec je push mov loopne push jno lcall ljmp push popf sub lret mov test jbe mov enter lods inc and cmp arpl push loope xchg sub lret daa mov adc fist pop xchg xchg orb outsl lret scas mov aad popa pop out mov repnz dec (bad) aad sub push xor cld mov leave cwtl ficom xchg xchg lret mov fcoml jge insl in lret pop cs jae cli and imul loope in rclb cmp sub (bad) iret ret push jecxz fistpll jnp out adc jle mov int3 fs add adc sbb mov jns,pt movsb push fcmovu jle lret jnp sub stc pop dec mov daa in adc or adc cwtl pop pop pop mov les mov xchg sub rolb sub dec arpl cli ret iret inc jnp push inc add mov xor sub cmp sahf test movsl lock lret mov pop sbb adc addl (bad) roll xor jns aam jge das jb pop das pop push pop nop sub mov dec adc adc lcall add sbb cmp imul mov addr16 shrb lods enter xor out jnp test idivb (bad) ljmp pop push push mov pusha mov dec jno push mulb xor jae xchg pop dec stos outsb cld sarb arpl inc ss xchg mov mov jb outsl pop ljmp fdivs xchg out ds mov and mov pop lahf xor ret pop test fistpll push aas imul inc clc xchg mov hlt pop cmp jl push pop jmp (bad) loopne add fstps clc and jb push mov ret mov jne loopne adc mov mov jecxz ljmp lret sub test loope push cltd ljmp js add adc fwait dec movsb push ret dec xor push popf out sub cs fdivs sti jge xor iret pop orb sub roll mov inc (bad) and negl sarb fiaddl clc jmp ljmp cmp inc jge fs push mov sub arpl xchg sbb clc mov popa pop xor mov adc iret xor push sub mov das mov pushf stc fstps dec inc test xchg ljmp out fistpl mov adc mov xor int xor xchg and sbb mov in mov movsb cli leave int3 and scas imul in hlt and sub popf add mov jp inc icebp (bad) std pop mov adc push cmp (bad) cmp jl sub movsl inc and mov jno push mov and mov repz cmp jmp jge rcl test inc inc movb arpl stc mov pop mov insl mov int3 imul out xlat sub cmp mov and push lret (bad) and push cli push lds popf imul test pop sub jg je jle mov fdiv pop push movsb pop in lock inc pop (bad) lahf sub dec cmp lock xchg or subl lock cmpsb lcall cwtl push pop cmpsl xchg push sbb inc mov mov fucomip mov ss outsb and clc jmp ja loope fdivrs mov and stos adc mov xchg push ret cwtl (bad) jne scas (bad) nop test (bad) xchg in popl mov (bad) (bad) repz adc insl popf insb xchg and fisubr imul stos in outsl (bad) xor xchg dec xchg stc idivl fs jne xchg (bad) mov stc mov jo cmp adc lds mov mov shlb test data16 out icebp pushl xor (bad) dec lods repnz pop cmp sub in stc ficom lcall xlat rolb inc aas jae rolb pusha repz aam lahf aam pop mov test jmp sarl fcmovu fstl jecxz call lods (bad) pop add (bad) sub cli jnp addl cltd cltd sarl or push (bad) pop pop adc pusha or pop add int or cmp lea push fidivr or push movsl iret adc jno clc aam and mov add pop lods out fucomp push mov (bad) fiadd pop and inc (bad) dec (bad) xlat add dec mov push mov jae ret popa shrl add and dec mov nop fidivr mov rcrb ja pop lods cmp (bad) jecxz js imul push jns push jnp mov aaa decl and mov (bad) addr16 pop hlt cmp fwait rcll push mov mulb lahf push scas push cltd inc imulb xor inc mov aaa jecxz loope cld cmpsl jle out sub sub jle cld jbe test arpl cltd outsb inc pop mov add push ret bound mov (bad) dec push lock lret rolb lret jecxz ficompl mov sub mov push cmp sbb cmp shl cmpsb lahf out mov pop jae mov xchg adc insl fmulp jle std push sub loop popa mov jg scas sbb mov or jg ret iret jg push std std fstpt mov imul mov cmp lcall arpl aad sub mov dec inc jno push push insb icebp ljmp imul adc mov push pusha xchg mov or fcmovnb shl sub cmp mov pop lods test iret out loope lret mov (bad) push sarb outsb sbb stos or xchg test (bad) mov xchg xchg aad enter int3 je pop test pop mov pop leave in cmp mov dec pop cld xchg xchg (bad) mov stos outsb inc ds and push shlb fisttpl ljmp das xor addr16 pop test dec push dec sbb call icebp mov and clc mov and sbbl insb sbb fnstenv mov enter (bad) and in mov lods add mov daa repnz or sub jnp negl mov push mov sub jg xchg loop lds mov into push mov cmp mov shll adc int lock dec push sbb push fidivr out cs (bad) sub sub aaa (bad) jo inc pop sub inc aad (bad) lods (bad) popa push jge outsl add jecxz adc or fwait (bad) lds push adc add pop push outsl (bad) pusha jge data16 xor and int3 cmp dec or jmp sbb cmp jno mov xchg ds push adc pop xchg imul fcomps sbb xchg sub mov call pop cld (bad) sub or push loope pushf mov pop stos mov inc mov (bad) fsubrs pop inc and add jge sbb mov outsb out in cli inc dec xchg aaa movb jno punpcklwd or loope ret stos pop pop stc lret lret sbb pop lock pusha jo pop xchg dec adc sbb adc mov dec loop loope orl cmpsb insl negl push sbb adc es adc pop nop jp popf sti jb pop push je shl movsl out jp and inc cmc push notl dec nop stc (bad) cmc and xchg (bad) sbb in orl stos push (bad) fisubl inc and xchg jmp inc add jecxz mov sbb mov cwtl jne lds cs sub pop shll (bad) push pop std mov inc out dec pop aam fistpl clc leave mov hlt movsl dec push dec dec (bad) mov adc mov and out aaa mov sahf or cltd (bad) cmp push (bad) leave mov cld inc inc or jns aad push jb mov test sub push xchg mov xchg pop push test dec pop fcoml out pop std sahf mov inc mov rol add scas jle popa rcrb rorl popl cmpsb dec jmp fmuls mov fsubs xchg sbb jnp jg ja push repz add jecxz dec sbb push and or loopne in andl lahf ds xor cmp fstpl fcoml sbb jecxz into sub insl pop popa and xchg xchg (bad) mov addb pop lods jp sti jb jmp in lock not mov sub out and dec xor fs cmp jo (bad) (bad) sbb push push jecxz xchg mov mov nop lahf jmp and lea or sbb sbb mov xor sub test cltd cmpsb lock or add mov mov cmp js xor lods sbb push add cli jbe test out mov ds shll (bad) mov mov out out lcall out fwait addr16 sbb popa adcl out push and cltd pop lahf ficom addr16 fsubrl in xor jp xor divl std xor inc pop sahf sbb mov inc mov sub dec roll fisttp jbe mov inc pop in push int loopne adc xchg (bad) dec out (bad) pop pop (bad) rolb das outsb movl jo cmp rolb (bad) mov nop fs sti popf mov daa gs insl lds insb std and mov movsb cmpsl lods sbb aam (bad) ljmp movsb jl pop adc out clts cmp (bad) divb ffreep cmpsb sbb jns sub out mov data16 cmpsb iret fidivrl pop push nop loope call test mov or mov adc outsl jge push mov jmp sbb int xchg inc lock jecxz movsl xchg jmp call rcrl hlt imul dec add mov mov pop sti sbb in sbb pop or xchg mov rclb or adc push fwait into pop aam je daa out repz and jmp in ret lret dec xor out sbb (bad) xor clc rorb incb xchg or xchg sbb push push (bad) or xor lret sbb insl test repnz xlat sbb rcll jno xchg pushf fs jg test jne fcoms mov repnz loope (bad) push mov je lret inc cmp sahf repnz out insb cmp jmp cmp je sub sbb jb imul jnp mov aas xlat fsubr rcll and and lret ss xlat (bad) in pop sub std outsb das hlt jne in in fidivl mov and and inc jns xor mov stos fstpt pop pop push mov in xchg fdivl loopne jnp mov sub add add sti out xor out and add je cltd repz fstpt adc ds cmp lea jge mov outsl aas test mov int3 xchg jnp aam test dec inc jle aas sbb xchg inc (bad) xor fnstenv roll push ljmp fisttp je mov lock testl mov cmp lahf mov movsl scas insl adc aad dec notl push adc push jne jae push mov hlt icebp pop sahf mov test ret shrb cmp pop and ret mov test cmp mov jb mov in lock cltd adc cmc sar sub cmpb fcmovne fwait aam xor lret andl and mov cmp pop scas out cld mov cmc lds cltd sub (bad) jl aaa psubusw jae cmpsb insl subl mov mov push xchg jmp mov mov jg sub push addr16 mov out lret and in inc inc xor jns mov inc daa (bad) icebp pop dec push out shrl lods jb insb mov dec ret scas push xor pusha sub lret mov xor js repnz push jo fisubr clc (bad) enter pop test add mov lahf inc stos andl pop pop (bad) adc jl lret (bad) sbb pop enter nop xchg or mov sbb aaa setp popf iret rcrl pop mov cmp lret dec enter into add loopne repz mov pop xchg push test rorb xlat (bad) ja inc cmpsl (bad) sbb imul mov outsl pop icebp add adc sbb inc mov push dec dec mov mov jmp sub fs add dec or jmp adc push pop lret add xchg and xor and ljmp iret xorl mov out xchg fs push stc inc subl cwtl ret mov out adc adc cmpsl int mov mov xor xchg mov and xor mov mov and sbb clc ret aam xchg cmp cmp fdivl hlt jge movsb stc pusha and and xor cltd jo mov and add mov mov pop dec out imul hlt fidiv xchg ret inc add sub cmp cmp mov (bad) xor das mov (bad) xor or mov mov push ljmp jmp adc out sti pusha les mov adc out in push xor sbb xrelease mov push das in jb push jge sbb repz ds pop test mov mov adc aas test outsl lret xlat popf inc add sti jne jge ja (bad) lock stc repz or (bad) sub and rcrl push push cltd adc jnp add lahf xchg ljmp decl xor pop push push sub (bad) jmp mov loopne jle ljmp scas lods jge sbb inc jbe sub movsl test lret cmp sahf iret popf inc inc add out sub imul xlat outsl xchg in and ret scas in scas xor out push ja mov rol outsb mov addl dec lahf push lock fdivrl in roll pop stc jecxz stos sahf cld add jae (bad) loopne das lods push fldl in xchg mov cli jp cmp or xchg lcall mov (bad) or or testb and fdivs xchg xchg std cli adc movsb pusha icebp xchg fucompp xor jo dec xlat pmulhw int3 je cmc ds inc fsubr push dec rcrb xchg sub push cmp ljmp cmpsl popa xor jge mull ja xor inc les mov push aaa jmp inc adc ja cmpsb mov arpl mov aad repnz push xorb jp in cs sbb in mov ret imul push mov lods dec pop xor rcrl xchg add cmpl sub in push in push repnz xchg sbb xchg popa push dec aaa push imul and loope std xor xor and cmp mov call fst dec sahf (bad) aaa fisttpll xlat shrb jno mov jns sahf mov jle cmp insl fcompl jle jmp lahf faddl jnp cmpsl and jbe arpl inc mov cmp sbb out daa js mov (bad) adc cld cmp cmp add adc inc loop fwait mov arpl add and or outsb pop xchg push push xor repz xchg pop mov jns mov dec sahf fidivrl ja iret sub or or jbe mov loopne rcrl fst sub icebp cmc xchg cmp jne push cmp or (bad) lods aad mov adc jge xchg pop (bad) adc test xchg adc lahf out inc insl nop jne mov pop add sub repnz and sbb jmp pushf daa aam mov adc rcrl cltd sub inc xor loopne or adc cmpsb dec mov xor les dec test sbb mov lret into pop push and mov mov pop addr16 fsubl jl in push fstps pop or xchg dec cltd jnp cmpsl push push adcl xor cli pusha pushf mov hlt sub mov arpl pop test and xor jg sub jnp and xchg or xor xchg lea lods ds std jecxz add pop nop in call in ljmp and sbb pop nop test sub mov int3 xor inc cmc mov test pop mov std xchg dec mov mov push dec mov sbb pushf jbe (bad) fadd ja jmp fcomp shl jge push adc stc pusha xchg dec push xor xchg outsb rcrl in mov pop and into jo pop sbb aas cmp cmp (bad) cmc xor jno sbb test mov or popa mov (bad) call push add (bad) out repnz pop clc jmp (bad) cwtl in jnp icebp js dec lds jp in mov adc lods and aas and mov xchg mov sbb sub adc mov stos sbb fs xor ss cmc ljmp fneni(8087 cmp xchg adc das ljmp dec loop dec add mov mov popf (bad) (bad) mov insb mov jb aaa adc icebp lahf cli ret push push push sbb jle shrl inc jbe adc mov mov (bad) xchg leave push lea subb push (bad) cs mov or decl pop outsl xchg sub sti in cld or lret sbb and pushf addl outsl jns test cld ljmp cmp repz pushf jmp and jle test (bad) test xchg mov enter int sahf clc mov lahf mov lahf inc cld lret popf imul lds inc sub sbb cmp bound xor in and pushl pop pop push dec mov add cmp cmp sub insb and mov push fwait aam jnp je dec setno stos xor fsubrp jb es mov xor mov std push pushf pop dec sahf sti stos js inc adc mov pusha (bad) jo cmp mov lret int3 sbb (bad) repz mov mov inc and popf jg dec cmp pop push cmp push popf in cli into inc int push negl sub jmp xchg pusha add and rcrl mov mov sub sub fmuls pop cld xor ja ret push cmp insb imul jns outsb jp icebp stc jmp mov (bad) (bad) in mov add outsb xchg push sub shll loope mov pop sub jo xchg mov add mov stos xchg mov or mov xchg push or sar mov xchg call cmp imul (bad) and mov jecxz push lea jb stos (bad) mov movsb int3 pop cmc (bad) jne frstor add hlt adc push xchg push xor pop ljmp xor lock (bad) lret xchg loope inc mov dec add adc xchg fsubl clc (bad) jp fstpt push daa push cmpsb insb jle (bad) or incl fcoml xchg ss add bound daa imul in pop dec cs ret ret cmpsb out dec rorb adc xor test mov push subl das insl scas lods popa lea sbb fnsave call pop repz mov adc or pop cmpsl inc rclb pop dec push cmpsb jmp ss mov mov addr16 sbb addr16 cli sbb and adc in pop (bad) mov (bad) dec add push fdivrs pusha fdivl mov stos shr push dec inc orb cld sub sub xor adc push push mov and lret pop and sub addl lods icebp loope fwait lock out jg pop mov dec loopne negl sbb xor lret mov sub push les js mov cmp xor push popf js test ss je mov aam js mov jl mov stos cmp add (bad) push notl xor out repz add pop fildll or sti and mov pop mov mov mov sub sbb imul in nop xchg cmp hlt loop jb ja and nop push pop jecxz jmp hlt dec pusha xorl add cmp sub push out (bad) pusha add cmp mov fcoms nop fidivl daa sbb push cmp jg sbb mov mov ret adc xchg jno lret fisubrl data16 in jp jae je jae xor (bad) popf and sarl jl mov fsubrl imul repnz lahf enter xchg js inc loope or lods ljmp mov lea jae xor xchg pop pusha addr16 out sub sbb pop fst mov xchg adc mov add cmpsb push xor jo cli imul mov jae enter std mov cmp bound outsb lods out jmp push in mov xor push icebp inc icebp add sbb test pop add mov dec mov lcall (bad) mov clc in fstpl sub lahf mov adc cmp sarl sbb stc rolb push imul lock rcl pop sahf rorl popa pop mov nop insl rclb arpl (bad) dec es lea adc aam and sub (bad) fsubrl cmp out sbb dec data16 je out cmc (bad) mov pop mov test pop cmp paddsw lods sbb popa rcl push add (bad) hlt adc dec inc xchg (bad) mov outsb mov xchg cmpsb sbbl adc and fwait adc enter cmp sbb pop sbb xchg xchg fwait addr16 out pop pop hlt out cmp mov (bad) mov dec or cmp (bad) imull adc sbb push (bad) sbb out push je (bad) push and inc rcrl pop mov pop push cvttps2pi fcomps ds in mov jp push jno sbb stc int3 daa pop lods daa cmp xchg add sbb sti push cmp push popa call mov out pop inc or stos pop scas cmp push jne fisttpl ficompl adc loop fcomps lods inc jg jno js xchg sub sub and lock add imulb sbb xor shlb xchg leave (bad) popa mov dec inc sub dec add stos pop push cmp loop sbb (bad) jmp aaa aaa inc sti add sbb xor cmpsl incb add mov fstpt insl lahf or mov sbb test out ljmp pop rolb int3 aas lock sub jp pop jo aaa jmp mov add repnz loope cli add fcomps mov lret mov sbb sbb fdivrl jb xor (bad) and mov and (bad) fildl pop stc outsl test jns rolb jae dec lods push ret pop inc enter lret add xchg clc dec sahf mov mov inc mov jno sbb pushf sub pop cmp (bad) testb insl in dec dec arpl stc sbb mov sti add js sbb pop adc mov inc stos cli adc xor push adc xchg stos leave ret xchg add in push pop jae mov loopne sub scas pop mov dec mov nop addr16 ret push and cmpsb or aaa xor sub cmp jns push sarl xor ret or jp je and jle daa out loope lret outsb sub cltd cwtl (bad) pushf int3 lock leave sbb (bad) and daa cld dec and fisub mov pop cmp xchg mov ret mov adc movsb pop xor (bad) mov sub add in es mov dec xchg repz into cmp adc pop mov lock popf fwait cmp out pop (bad) dec dec out mov subl es sbb mov mov pop pushf xor xchg mov pop xor fs data16 push push inc pop pop cmc ja stos in into mov cli repz ljmp cmp jmp das icebp repnz sub pop sahf cmp or inc mov ljmp daa mov sbb aaa jne jge outsb adc leave mov add jmp imul mov cmp mov hlt push pop jmp sbb std or ss xchg pop cmp test cmpsl fdivrs out cld fnstcw jb inc inc jmp lret mov addr16 dec int std jle and or mov imul sub ficompl outsb test inc sub cmpsb pop cmpsl cmp dec and ficom mov and aas push sbb mov xchg cmp add das mov push jno mov dec adc shll sbb mov or ljmp or stos jg,pn sbb sbb mov jne imul dec xchg inc and mov ss dec mov mov arpl xchg mov aad loope xor sbbl out sub pop imul int3 mov (bad) push shld aam sub xor cs imul cmp cmp lahf lret ret sbb add cmp aaa sar inc jns sbb jl pop aad xchg data16 int push pop lret ds cmp ja sbb adc orb out shl or jb jns dec xor xchg rcl push in mov neg sub add jbe cmp movsb das xchg aas imul ret lock call sbb out test cmp in adc fbstp cmp cmp in popl fisttp pop push popa fnsave lods aaa jnp iret lret lcall pop divl mov sbb fdivrs sub cmp sbb jae ror scas stos ss mov jge and pop pop (bad) push addr16 imul out mov jmp (bad) repnz jp mov dec out push insl add push pop xor push cmp stos pusha mov mov fcmovu pop inc hlt cltd push mov ljmp push loope loop xchg mov adc imul pop fs (bad) aas adc test ret xor push mov mov push out stc stos push jge xor ds (bad) xchg adc mov inc (bad) add nop ja rcrb add inc or pusha repnz sub and ljmp cltd pop xchg (bad) xlat ds pop pop gs push dec dec mov into mov scas cmp sbb jo inc adc pop out push mov data16 mov xchg in xchg mov rorb push mov push popa jae (bad) stos dec pop mov (bad) jmp fs data16 add sbb mov inc add repnz xchg es xorl jge cmp xor mov mov push pop loope ja xor and negb aam push mov maxps fild movl push or jge xor and jmp (bad) scas ret iret xchg xchg call mov dec add mov imul or cs sub sahf mov push in and outsl inc push or lods insl sub fildl jl sbb stos add push test mov cmp in xor mov aas xchg mov iret mov push mov stc dec lcall daa cmpsl clc push xor cmp imul sbb pushl jno pop pop sbb stos daa stos cs negl xchg into ret cmp add fadd jne lea inc (bad) sti pop mov jmp add fs (bad) jb push mov daa lret inc mov add push cwtl (bad) aam xor or es fwait (bad) std sub mov ret xlat sbb ficompl je pop mov or dec adc loopne push dec sub adc fs sub mov mov dec adc adc pop int pushf aaa unpckhps shl xor pop mov lds jne aas cmp cmp mov mov aas pop push and add add and add dec and jle clc xchg es cmp dec roll xor jmp gs ja lods in push jl cld jns mov sub dec repnz dec xchg xchg xchg or mov data16 cs aas ret pushw dec xorb out lods ret out adc cmc xlat ror rcll repnz inc xchg inc lahf adc repz or sub sbb cmp outsb mov je ljmp fsubrs push (bad) stos idivl lret fbld push sti std mov hlt dec add sbb fmuls mov jnp scas inc push mov (bad) imul jno mov std test cmp outsl mov sbb or push adc mov das fisubr lods iret and sahf stc int3 mov sbb dec in jb aaa ss cmp xchg sub clc pop xchg adc mov sbb loop sbb loop xor jb pop fwait mov jg outsb fwait or pop enter cld pusha mov loopne xchg icebp sbb das adcl cmp xor sbb (bad) push cmp mov fdivs pop cltd lcall (bad) jmp in mov call inc push stos adc inc flds add aad cld jnp lock ret xchg push mov push jp rcrl (bad) (bad) or das repz or mov das fsubrs xor mov into cmp mov push jbe das dec insl das or outsb popf rol mov das pop jae int3 adc (bad) add pop xor mov out and jnp (bad) loop push mov (bad) fsubl int3 daa xchg test sub mov insb shll enter push ja in adc icebp or sti fcmovnb push jb hlt xor lahf add cmp jge repnz (bad) (bad) inc push mov xchg (bad) call bound mov dec addr16 cmp inc js mov lret mov inc (bad) mov dec sub sbb test cmc mov andl or sub cmp xchg sub sarl and xor cmp push repnz in test pusha sbb and out cmpsl or rcrl cmp jle pop mov imulb push jo sub (bad) (bad) cmp mov in out lods int3 aaa lds jmp shr test cmp xchg fiadd push mov lock mov sub pop aad mov fdivrs mov (bad) xor pusha ljmp or push jb jle jne or pop pop add idivb nop ss xchg sub push lods movsb imul xor rorb sub pop loopne cli movsl pushf clc ljmp dec pop jns fstl add adc sub ret push dec jecxz sub jne,pt test test fcomi fwait mov scas cld sbbb mov test ret jnp or push sub or jecxz loop jmp scas clc lds popf pop daa xchg push fisubr cs jae imul (bad) pop jmp int3 mov mov mov add pop in cmp gs lahf sbb stos inc push sbb dec js jmp xchg push adc sti outsb ret fstps fsubrl pop rcrl cmp jmp or imul dec sahf push js (bad) mov fdivs test mov mov cmp adc sbb lock test js mov js fidiv mov jae roll jno or xchg xor xchg (bad) cmp xchg lret inc shr outsl insl mov mov inc repz ficoml mov dec adc inc outsl insb inc sub pop xchg mov adc dec lock lds xchg cmc jne mov pop insl lret xchg out cltd push xor or pop pop in icebp add lahf xchg stos loop,pt xchg mov testl xor in (bad) outsl fidivr push popa testl fisttpll mov add aas cli inc jg mov push movsl fistp nop fist cld push mov test outsl cld jle outsb sub pop les movsl mov call mov adc xchg out push push and mov xor push rorl and leave outsb sbb aam lcall test scas loope pop int xor sbb push mov shlb mov (bad) in dec repnz sub ds mov lcall jb and jae js shrb call cld popa push sbb cltd adc mov je xlat fstl cmp xchg mov mov xor test cmp jl mov mov add (bad) hlt repz clc inc xor cltd push jnp sbb fstl sub aas daa pop rorl mov dec jne jmp (bad) ljmp add jge cltd aam lea sbb loopne cmpsb repnz int3 shrb pop cmpsl xchg outsb dec sbb sub cltd adc mov out sub pusha or cmp dec out lret es jb mov sbb adc in jp inc xchg popf pop add out mov cmpsl call push jne lahf jbe mov out mov jg mov sub mov and lcall or sbb jecxz std cmpsl sbb xor push or jns push pop lods and ret repz cmp mov ds (bad) dec lcall fidivr adc inc int3 mov jnp test xorl cmp pop out dec shll aaa fadds and (bad) std bound cmp test sbb es mov jbe mov xchg mov addr16 and jp or rolb sbb dec iret cs xchg mov add xor or in sarl hlt cld jle adc push lods adc jl pop mov fcompl adc and inc fist xchg jl clc mov lahf data16 loopne sbb arpl pop push mov lret (bad) mov xor fnop jns ds repnz jge add imul mov cs jecxz lods shrl lock pop (bad) mov imul aaa popf mov cmp jnp,pn and insl jne lea push inc (bad) jp pop mov mov inc cli or bound je lods or mov sbb das enter (bad) mov xor popa in xchg inc dec add xor inc inc push jae loopne xor add jb push int lret ror sbb pop xor insb add or ficom add popa jae or mov scas pop lcallw lods (bad) aam mov subl mov mov mov add lods call mov movsb xor push clc cmc mov std sub sbb add js lret mov mov pop mov dec loop cmc je and adc push mov sbb fbstp or adc inc mov mov aaa sbb pop and daa pop inc pushf divb or xchg mov in out or nop pusha out xor jns xor xor xchg sbb jmp xchg test in mov xchg mov sub mov lock or test or cltd scas jo leave mov sub and in push dec psrlw ret xor andb (bad) mov (bad) addr16 inc in andl xlat sbb aad cmp js test mov clc stos (bad) cmp out add mov add pusha and aaa adc or test mov adc and dec test inc jmp mov call dec data16 aad push sub cwtl in mov enter arpl mov jecxz inc xor xor xlat jo and fildl nop int (bad) fldt jecxz mov and es lods out (bad) xor das fucomp out jmp fs xor sahf loope mov sbb inc nop cmp gs stos pop adc lods cs cwtl insl dec outsb enter jl inc pop sbb dec pop inc adc pop or xchg xchg lock mov mov out add sbb mov dec jo pop jne mov pop pop dec mov pop xchg jno pop sub int sub mov imul sbb mov mov daa orl roll dec xchg call jp mov test jnp push inc jmp mov dec xchg cli stos sahf jno pushf test mov jns xchg ds jle ficompl std stos xchg add ficompl jge mov lods cmp shl push mov outsb mov bound (bad) jmp fistpll fstl xchg stos mov icebp mov les cmp mov fcoml cmp insb out out pop add xor xchg cmp cltd pminsw js in fcomp jno aad xchg addr16 mov aam scas fadds out addr16 xor nop mov cltd adc jmp rclb adc mov push cmc mov jbe in pop aad int3 or sub mov cmp mov out mov pop out jmp push inc lcall cmp sub jmp mov nop popf and xchg loope aam shrl mov in mov mov (bad) push mov xchg mov (bad) dec pop jnp pop or test or (bad) lret sahf inc or push sub push leave in jne pop and frstor and mov xlat enter push ret inc mov popf fscale and in xchg push gs (bad) xor out dec mov idivb out fimul hlt mov inc into outsl repz jl les add and pusha or fcomps adc sub bound pop loopne mov ds pop mov jne loop adc sarb out daa fwait out aas adc or lahf jns fadds bound adc movsl adc xor mov shrb scas imul mov test dec inc in xor mov test enter popa loopne push or adc fsubs sbb sub push mov xchg jge pop mov push shrl aas sub (bad) or test inc mov add out xor xchg xchg out add sub pusha mov pop or sahf jg adc cmp mov sub dec inc notl sbb cltd stos pusha push cld out sbb xor jle das enter or mov in push jmp push (bad) sub out xchg cmpsl cld and mov jb lock jp (bad) or stos loop jmp pop cwtl mov xchg cs push mov (bad) out pop mov popf out fisubl cmp ja dec xchg lds mov or sub ds dec or fnop inc push repz out mov cmp dec mov out jne jg cltd jnp pop inc (bad) movsb inc test imul sbb mov jge loope inc sub inc sar add pop dec imul sbb push (bad) repz call (bad) dec or cmp xor jecxz lods std ret fwait pop incb fistl sub inc cmp cmp push xchg mov xchg sbb mov cmp mov scas lret out fistpll and test data16 fimul fmul (bad) daa sub push push lahf (bad) loop jnp xor aad push ret ret mov test aam adc aad push stos mov rolb lahf sbb push incl mov js jmp or mov jg mov rorb inc roll outsl push ret enter rorb mov rcrb iret lods jmp cmc jge insl pusha inc pop testl je sbb ljmp nopl sarb jns cmp hlt data16 push repnz mov aaa pop fistl scas pushf or cmp mov push jmp rcll adc and lock adc pop inc stc xchg mov gs pop mov xor mov das sti pop cltd mov sbb and stos lahf or inc fcompl ficompl sub inc xchg add outsb pusha popf jns add add (bad) inc mov les mov jecxz push lcall leave jle vshufps jle mov mov ret xchg xchg mov leave cmc cmc stc adc movsl sub sti stos cmp push dec jmp push setns sahf jno movsb sti sahf sbb ljmp pop mov sub xor and push aam pop stc jge addb xchg out (bad) sub xchg mov xor push addl inc sbb (bad) loope dec cmp jg out cs push in in in imul in sahf xchg mov pop xor bound lea fs ja mov mov std and lea test in je cmp inc jb adc xchg jle lea lock imul test ljmp jno ja aam stos arpl movb enter and jno jo dec mov sub fwait popf jb test cld (bad) and clc movsl aad adcl xchg push cwtl mov mov xchg cltd or test sub mov inc inc pop cltd add jns dec popf ss cmpsl (bad) in fstpl push out add jae lcall jb popf mov out stos xlat aas adc lods jmp mov xchg push lahf ja nop scas mov mov sbb sub xchg lret cmp test pushf fnstenv add ficompl mov xchg enter mov jge xorb iret mov (bad) loopne push inc sbb or loop cltd cmp movsl push cmp std jo jbe lods xor ja stos gs mov adc mov dec (bad) into ss aas dec (bad) xchg dec adc mov pop in add cmp and insb lcall xor lods sub pop sbb shll sahf pop das dec imul mov das sar stos loopne out push cli mov ss iret das push iret (bad) dec cmp es fnstsw movsl add test cltd and mov lods mov (bad) jne ror je lods pop xchg icebp cwtl pushf xchg xchg mov imul add daa imul out mov mov or cmp cmc sahf (bad) repnz fwait or movsb cmp xor push xchg dec int push jbe inc sbb popa repnz icebp inc in (bad) (bad) mov pop adc test repz sub pop push sbb jns fisubrl xlat push out jmp aad repz push xor das adc and or movsb push popa sub xchg push push or div xchg sti popf sahf mov sub push inc jl mov (bad) mov cmp addr16 in aam out inc sub push icebp (bad) adc leave sar ds and mov pop bound jecxz outsb jmp dec pop das pop enter sbb xor int3 ficomp aam inc loop jo lock test ret jbe int data16 incb jmp sub imul xchg lods sbbb mov pop add adcb inc push in fnstcw hlt data16 dec inc aaa cmp setnp int3 ss aam sti movsb fild mov imul xor jl inc pop mov pop push push dec (bad) sbb jb or jb dec xor mov xchg cmp push mov sub ret mov in jns movsl cld dec dec sbb push dec push rorb mov jl movsl adc test or jno mov clc xor sub dec sahf je es in aaa sbb repnz out fwait movsb pushf xor pop shrb pop rcrl jmp push jmp in shr daa dec jo sbb pop jae notl cmc mov imul cltd mov dec push pop int3 mov push imul sbbb loop push add jne dec or mov insl adc mov adc jne in mov out mov sub push stos sub xchg sahf loope aaa leave mov mov test pop mov jbe sbb in negl pop aaa dec in push jb lods fsubs pop dec adc daa frstor icebp clc jmp dec (bad) cmpsl mov fisubr lret add (bad) adc cmp dec push frstor ja push gs push xor (bad) or xchg stc lods ss pusha sbb jl cmp icebp mov rolb or adc popa pop das adc dec idiv neg int out mov loop negb inc xchg out insl mov adc add push mov mov das cltd mov addb sub mov (bad) and mov sbb dec lods mov adc (bad) xor inc adc pushw push ret xchg xchg or mov cmpsb dec pop cwtl add test mov or icebp mov pop cltd lods shll adc push int3 inc cmpsb jb sbb call mov ja fidivl xlat divb in shrb fdivrs push sti push dec (bad) adc jg sbb arpl jl push xor mov or fmull stos arpl xchg jle mov and adc addr16 in add inc call icebp lcall loopne pop inc push sarl dec into or pop mov addr16 cmp imul stc sbb fwait bnd out bound cmp fwait sbb adc test pop insl loop dec lds jae mov or (bad) ss or pop add adc xchg rcrb cmp mov mov insl mov les cltd sub sub and and jp mov fist (bad) outsl and rclb or fsubr lret and jecxz sbb insb das cmp sub subb dec xor cwtl jmp adc imul ss std out addr16 out xchg testl ffree movsl cmp adc cltd pop jnp xchg push push sti mov dec dec dec shrl ds sub movsb push out andl mov and jmp or dec (bad) adc movb lods and pop dec mov aam and dec bound xor popa add (bad) mov out (bad) cmpsb ja in sub fistpll pusha lahf aas xor std push out cmpl cmp out fwait mov push call scas sarb sub aas jge xchg popf add cmp fs dec dec cmp movsb fcoms mov push ficomp push ljmp popa stos or mov jno sbb inc xchg or or xor xor pop mov mov stc adc jge mov stos repz lods cwtl push aas mov xchg xor sbb jns sti popa mov (bad) loope sahf iret movsb sahf xchg xorb movsl sub imul lds xchg pusha ds and inc mov or push test cmp pop les lret (bad) in pop sub mov (bad) out inc sarb inc ret movsl shll add mov add insl mov fstps sub lahf mov (bad) call je jns sbb es daa cmpsb int3 sbb pop sub iret add (bad) call pop fstl sub rolb mov mov jnp leave outsb sbb sti and mov pop test push jne mov mov mov lret xchg jecxz or fadds pop gs push lret neg scas imul insl jle test fstps push mov inc (bad) mov or adc dec ret sub cmpsl lahf push sub das cwtl iret lds mov in inc call xchg mov es sbb stc in fstl lods sub sub fadds aam nop fcoms subl sbb sbb pop cltd dec loop movsl movsb pop nop push push mov or daa adc lcall xor dec adc (bad) xor movsl fcom (bad) or mov adc sub mov mov sub xchg and inc add repnz (bad) mov mov frstor popf or jae je adc out mov pushf sbb stc ret je or mov faddl subl mov (bad) xor cmp mov cmc mov dec adc add inc aas lods test cmp lods lea pushf std or repz (bad) adc icebp mov mov test mov push aaa jecxz inc dec repz xchg frstor jle imul test sub cmp sar test and icebp loope outsb xchg rcll jbe xor cmc cmovs int mov (bad) addl push xor add add mov jne xor pop push dec out addr16 push mov hlt xchg pop pop subl xchg lock and pop sti inc popf jg lahf test sbb mov pop adc movl das dec or loopne ret xor jg movsb cmp lods xchg sub test pop pop push cmpsl xor push in iret and (bad) fs mov push popa or push mov loope addl hlt loop repz push ljmp push cwtl lods jl inc movl or pop cmpsb outsb dec lea addr16 cltd mov (bad) push aad iret jnp or clc pop mov pop fildll data16 adc mov clc lret int cmp rorl roll inc outsb adc lcall icebp addr16 popf loopne jge xor (bad) push es out test aaa mov and leave fnstcw in cld add dec insb movsb add mov repz lahf and mov push jge pop clc jb sbb mov sbb jmp xchg push call jmp cmp cld gs rolb mov stos (bad) mov rcl (bad) int xchg add ja ret repz sub xor dec and jl adc hlt (bad) sarb out lds aaa push daa cmc jo loop mov cmp fistpll (bad) pop sub push rol mov ljmp insl push arpl lret mov sbb fdivrl hlt or rcl adc in pop adc mov outsb mov push movb add bound pop outsl pusha aas shlb lock xor outsl push je mov (bad) sahf mov mov xor xchg inc lods and xor xor outsl and cltd (bad) dec sub adc int sbb xor test adc add sahf sub pop pop inc adc ret ljmp pusha sahf push (bad) rclb sbb pop push jg or insb mov jp mov fisub loopne add push in mov cmpsb or in test push sbb aaa jnp add mov jns jmp movsl ret push jmp ret pop pop cwtl sub ljmp les aad ret fs icebp mov addr16 orps and or in mov or and mov pop lods inc (bad) cli push dec fdivrs push xchg inc mov dec sbb imul imul lcall sbb mov lcall mov in pop dec mov push lods repz mov cltd pop movsb adc and cwtl repz lret jp ret scas imul xchg scas bswap popa sahf push dec mov xor out jbe rcr adc fnsave jno movq stc loop jl adc pop or pop xchg push or inc dec mov lods dec in jno testb mov cld push test mov jb sbb push sub ds inc fnsave lcall loope js lods dec lcall shll aam repz popf popa sub xchg sahf arpl inc pop in in xchg and aas daa xchg push ret je test inc mov fildll mov lret lahf sub inc inc aas icebp add cld lahf and sahf sahf ret hlt addr16 push test test pop dec dec add pop hlt (bad) ss decl adc or test cmp xor xor lock faddl icebp inc insl mov (bad) js push rcrl jg sub ja addr16 mov and mov lcall fstl outsl mov xor gs out jb fdiv data16 mov cmp inc (bad) ret ja lret mov add (bad) cli xlat cwtl xor inc fmull sbb testb fwait (bad) lock add pop and and sarl pop xor push or (bad) aad ss fist or repnz dec pushf pop dec cmp imul and test xchg ror mov aad pusha in dec xchg xlat ret mov push xor lret cs xchg imul pop ljmp xor insl out xchg xor or xor std and enter sub adc test and iret adc push loopne pop ljmp addr16 fisub aas or cmp repnz rcrb mov jbe xor or mov inc add mov clc lock pmaxsw mov cmp repnz int (bad) in inc push xor jp and xchg inc mov lret push jp push test pop pop repnz push gs mov popf or xchg mov xchg add data16 imul jle pop popf (bad) mov mov nop xor mov inc mov enter inc sbb cmc jle je jns cmp lret mov aas test pop inc leave clc aas and pop mov push in test scas movsb push pop rcrl xor decl cmp (bad) bound mov es fnop enter scas scas xor sbbl loop inc (bad) mov loope sbb rcrl jnp dec pop xchg icebp js mov or sub arpl cmp into outsl aaa mov pop xchg inc aad jmp pop orl ja lock or jnp push (bad) xbegin inc enter xchg (bad) mov movsl jnp daa push and jmp inc icebp jns ret pushf jno (bad) scas mov stc xor inc or xor push call push lods push lcall insb sub je xchg in in cmp adc pop and outsl xchg mov pop jg negl scas (bad) ds cmp in and pop pop jae stos pushf xor gs jl sbb cltd test mov sbb int leave xor inc push cmpsb cmc pop repnz mov scas push or ja test repnz mov loop jle lds add xor xor js enter adc cmp or pushf inc shrl loopne insl (bad) insl clc (bad) repnz mov mov imul xchg xor push (bad) inc out clc rol mov out cmp nop and and push jb cmc out sarb mov sbb inc and (bad) movsl mov (bad) leave dec mov cmpsb fwait jns inc repnz adc add clc popa xchg mov pusha xchg sahf cmp movhps pop dec dec sbb bound dec jmp or mov pop mov push inc xlat and mov cld sbb jl or cmp inc insb pop pop (bad) jmp aam imul mov daa push mov push push jl cmp push sbb sub push push out xor das sub scas loop ds push scas jecxz and sbb insl xor lret xor fnstsw adc insl mov jae in mov ret lret cmp dec out pop dec xor outsb test jae cld push mov outsl ficom xorl or and mov das mov mov arpl xchg (bad) add jge push mov mov ljmp popa out add mov stos (bad) pop clc aas loope push xchg add xchg sar cs mul pop mov data16 jl insb push sub shrl jg inc mov or inc cs pop jmp dec clc mov jb or pop push cmp inc xchg es jno cmc imul mov xchg mov (bad) (bad) mov daa fisttpl jno outsl lret or adc (bad) out adc inc in test mov mov out fsubs leave cmp add xchg xchg sahf nopl out push xchg adc mov fwait sub fwait insl add aam lds push sar cwtl xor insb add dec or mov mov fs cmpsb enter xor xor push in adc lods in xor add imul cmp xor push sub dec in out sbb aad mov sbb sub mov (bad) enter mov scas ret mov push std and mov mov or lret shlb pop pop gs in mov xchg jo mull inc aam mov (bad) adc jp mov xchg add insb sub cmc cmp rcr mov mov jbe dec leave sarb xor jne (bad) roll xor push push loope xchg int3 (bad) outsl loopne or pop je inc xor orps fs mov push jp adc enter cmp xor xor xchg add lahf xchg ret push pop outsl push lea insb mov dec pop inc sbb pop pushl iret mov push in (bad) adc mov mov ss ret mov shr mov dec into idivb clc jns rcrl rol mov mov xchg pop inc imul imul nop dec mov adc pop (bad) mov mov sub pop (bad) incb out (bad) scas arpl pusha cmp outsl mov je pop jmp mov cltd add push pop mov sub and int pop pop ljmp fistpl cmp rorb (bad) dec das outsb xchg adc xor test repnz nop mov jl outsb sub cwtl mov mov outsb and adc lods lock inc jecxz cmp and pop int lods ret pop movsb adc addb sbb jp pop jmp cmp mov mov sub ss lds xchg mov sub inc enterw insl mov int3 mov movsl pop jns loopne int3 xor clc xchg mov mov fadd mov dec jmp shlb xor xchg in cmp adc mov jb insb sub add imul je lcall inc lret and pop rcrl lahf sbb mov enter in and lock jle xchg xor sti jnp mov sub addr16 mov cmp movsb xchg mov pop (bad) lods stos fwait pusha push and pop push outsb je dec lods into adc jl sbb arpl repz mov clc aas aaa ljmp cli jb xchg in adc das in ja pop roll sbb add pop cmp cld sti aaa push pop stc stc ljmp in sti bound fxch ret xor outsb test push pop push inc pop adc sbb rolb lahf push shll mov in xchg mov lcall in xor adc cmp push faddl sub inc cmpsl xor outsl mov push leave jae jmp movsb fs shrl pop sysret xlat pusha test aad dec pusha jbe xchg push repz jp mov addb ljmp xor (bad) mov cltd pop arpl ficom and inc (bad) add out and dec cld add (bad) insl cmpsl pop xor pop or aam mov (bad) xor jne pop dec lods inc stos sarb push and pop mov push insl mov fisubr pop push sbb into xor ljmp in cmp enter repnz mov cmpsl fadds sub into mov mov dec dec jge sti das xchg inc mov pop test imul fneni(8087 push mov xchg pop push aad int fsts cli loopne adc test sti ss sub or popf mov daa bound iret mov pushf xchg xchg repnz pop fiadd adc outsl xchg sub in fistl addr16 add cmp fiaddl (bad) repz int jbe sub pop and repnz call shrl sbb ds fsubrs (bad) fcompl pop sub inc push or das (bad) adc hlt aas dec cltd jl pusha dec adc stos xchg cmc daa jl mov dec in inc setge bound cmp sub in jge arpl stos mov sbb out inc loope rclb pop push pop lock mov rolb xchg orl cmp out and clc push push lods fwait xor movsl out movsb mov jb mov dec ds test mov inc jecxz mov push pop push sub scas xor mov aaa or and test dec cld jae jo out insl jbe push gs fisub sti aas sarl sub dec sbb add jecxz int3 loope (bad) push xchg mov loope push movsl mov lret sub enter sbb xor push lods stos xchg xchg stos les loopne inc xlat jl cs scas je (bad) and mov fcomps mov xor stos cmp push aad sub mov push mov popf repnz loopne sahf fcoml adc push xor mov add hlt adc pop mov aas mov std pop imul push adc and int cwtl stos jbe in jnp sbb insl outsl adc popa xchg sti xchg pop cmp inc dec inc (bad) loope and out arpl push pop jno loope mov xor cwtl rclb sbb dec or insb jne xor enter mov loop add dec dec test xchg fimull out push movsl mov (bad) xchg stos push jo aaa cmc xchg push clc aad cmp leave int3 dec fisubrl mov hlt inc out pop lea jae jns xor dec ret ljmp push adc pop repz xchg cmpsl leave out mov xor xchg push arpl into roll push mov mov cmp add mov jnp arpl stos ss nop jne jne inc sbb adc lds cli or lods jl push scas adc xchg mov test pop jle jns and in push mov jbe add jg popf dec pushf cmp (bad) xchg mov sub jae dec shl pushf (bad) scas dec std (bad) stos and xlat outsb sbb aad cmp jne out rcrb mov scas jle xchg cmpsb insl aaa inc push es push das inc push sbb dec int3 jmp lret icebp pushf repnz jecxz jno (bad) int mov (bad) push sub mov jle repz jns and fs mov sahf pushf sbb mov inc mov xor add adc pop mov leave in jb inc pushf out in push pop shr mov clc sbb xor dec dec push add pop cmpsb xchg fadds push insl mov ret (bad) call adc dec mov push arpl push iret lahf mov mov or repnz push sbb aas stos xor add popf pop std scas or inc incb rolb test cld inc out pop cld mov test rcrb fild sub int (bad) in test stos insb xor cmp mov cmp pop ss adc fstl sub scas incl int pushl or sub jmp sti or ja jmp mov xor fucom repnz pop (bad) xor cld adc aam inc aas push sbb ljmp cmp xor pop pop fs cli jle adc push je out mov and cld loope loop add andl xor mov jl fisttpll cli mov in xor ret inc push jle dec mov xlat and rcrl movsb out push pop cmp sbbl add or lds int3 js cs out xor test outsb clc inc sub ret cmp jge in jb addl xor (bad) cli and mov push xor adc mov cltd test bound sub test sbb ret arpl jne cmpsb ds (bad) into cmp xchg inc sbb xchg leave loop fnsave adc inc insl xchg orl sub into stos pusha fadd ret or in fidivl dec jo fadd leave add mov or out dec js js mov sti cmp lods ret cs jge cmp int3 leave and mov jns push scas popa push add cmc push mov xor sub iret loopne xchg lahf data16 fs into or es fcmovnb jnp xor fcmovu (bad) xchg arpl insb cmp aad fwait outsb cmp pop and jle arpl xor mov lods insl mov iret ja pusha hlt and push mulb xor mov or mov dec xor dec les jle push hlt icebp xchg bound jge push adc cwtl sbb adc add sub cmp or xor sub mov test xchg pop mov jno xlat test push (bad) mov xor sub popf mov inc add xorl test lahf lods mov popf mov aam cmp pop adc pop je jp xchg jmp pushf pop stc rol xchg jmp cld push cmp gs bound sbb outsb mov mov stos mov aaa or or adc and push loopne test in pop push and cs mov out int (bad) ds pop in add adc cmp jae int lods xchg in clc xor loop shll mov jae lods mov jno leave mov sub clc jns imul fildll xchg cmp xchg lahf pop jne jle fimull nop jne xchg mov std push sub das inc jne or cmp sti mov lahf sbb dec dec cld lcall (bad) mov out lahf sub push jno outsb xchg cmpsb sub fstps rclb pop jns cs std add (bad) insl dec scas stos mov scas dec xchg xchg sub sub mov jno fbstp sbb fsubrl xor sub mov xchg mov add lahf mov mov fbld push lret cs adc cld push dec xchg xchg mov mov jge mov les insl cmp int3 test push aad fst or dec xor or in imul (bad) cmp out add cmp hlt and mov sbb sahf cmp cmpsl mov es cmpsb lret dec fildll mov inc aam scas jns fbld dec fdiv adc push (bad) shlb int3 cmp sbb dec push cs inc pop fcoml in or cmp and xchg in jp cmp sub sub xchg dec dec mov xchg int3 arpl insl jno inc in jb dec out or les mov xchg xchg adc sub cmp lahf xor jge jbe adc jnp out mov pop xchg jle (bad) jae cmpsb les cmp xorl xor out xor faddp call das inc cltd fs hlt adc adc aaa mov fnsave hlt rdtsc xchg and mov jl cmpsb dec stos clc mov fsubrs cmp insb orl sahf jbe mov jae xor push xor and xchg ds mov mov cmpsb mov push inc pop popa pop lcall popa xchg leave mov mov jo jle cmp imul nop fucomi mov (bad) rcl cli jmp sbb stos xchg add addr16 pop mov outsb or mov or sub aas gs mov icebp jg adc outsl insl (bad) mulb int3 mov ficomp (bad) roll adc test test into lock cmc cmp nop mov adc out push pop xor enter fidivrl adc lret shrl sub cmp xor mov movsb mov out jns mov out jbe mov mov loope test daa jp jl push push inc inc cli mov icebp mov gs (bad) sbb imul fisttpl insl xlat or jmp dec (bad) xchg inc dec into xchg sbb cmp cmp push iret negl sahf jle cwtl xchg jno icebp loop dec cmp int3 jo push jge jmp or in pop das inc add int3 xchg js jg mov aad pusha pop or and insl add pop mov scas adc repz xchg mov mov jbe fildll loope test (bad) shlb add pop mov xchg leave push and dec dec xchg xchg mov dec mov insb mov push pop test or rcll or or pop imul push loope pop sbb or fldcw (bad) jb clc push pop mov jge mov addr16 mov push out xchg enter mov or mov cmp out and mov incb iret roll into outsb aas jnp outsl sahf int3 add adc les pop xchg mov stos inc sub dec mov sahf rcrl (bad) cmc inc jb ljmp jo (bad) push and lods sub or fiaddl xor test mov jge (bad) or or or stos adc mov dec mov mov push mov xorl cltd and mov int3 sub jg adc test int3 dec mov stos ja jns test and outsl lret dec out jne and out mov cmpsl mov insl jae xchg or loope cmpsb lods dec aad ret mov mov and inc mov pop loope out lock imul inc or push adc fmulp mov adc inc aad push das adc inc pop outsb push xchg inc ljmp inc ja ja mov jne mov sub lcall mov fucomp test jns cmpb add test cmp mov or icebp or mov cwtl popa sbb mov cmp flds (bad) push jne fucomip mov inc and rcrl stos push mov cmp (bad) stc pusha leave xor xchg cmp jmp repnz dec push shrl push insb inc addr16 sub xor in mov (bad) xor mov push int3 inc pop movsb int3 jne dec adc cmp mov pop nop cld or fwait mov mov cmp lcall scas mov dec mov dec pop daa or scas xor lods inc cmp into (bad) xor popl and push pop mov out cli mov mov and cli jge inc outsb adc lcall rolb jbe bound or dec loopne fwait rorl xchg mov scas insb inc out or mov pop insl lods mov loopne mov mov cld movsl pop mov sub call mov dec shlb xchg sbb mov inc push or inc push repz (bad) dec sbb mov cmp push movsl xor mov sbb jmp rcrl int3 fsubrl dec pop in xchg (bad) leave popa xchg jnp fs or icebp push rolb jbe xor push clc loopne popa pop mov loop (bad) enter icebp (bad) lock mov lods bound xlat out pop lret popa loope sub in or and mov lcall inc outsl popa mov mov xlat adc leave dec inc scas repnz or fildl rolb loopne std insb loope popa pop sbbb add mov jno mov cmp (bad) in xlat test rorl sub out mov (bad) repz fsubl xor (bad) pop cmp add adc mov or mov and push inc sbb movsl add jo mov iret in and and push lret xor push dec arpl xchg pop pop jbe push popf sbb movsl (bad) xchg jmp dec scas loop add add push xlat sbbl dec dec jge add adc push xor push sub cld xor leave rclb out fwait xor js and repz or pop sbbl cmpsl pop jne jae cmp js pop sub inc xor xchg jl cmpsl pop js fdivs cltd inc push jno mov pop sub adc orl mov imul sub pop sub mov lods or jae jg fistp inc aam lock and imul aad shrl lea imul mov pop mov xor sbbb mov loop stc cmpsl (bad) dec mov mov add mov cltd jp in mov push pop outsb inc cmp lea pop xor ja dec fistp ljmp fdivrp mov mov cmp addl add push in je imul jns adc sub sub adc inc ret (bad) mov or push mov push lahf xchg cmp cli addr16 mov lret sbb xor push popa pop pop mov push pop dec pop popa dec cltd jo pop stos jecxz bound add push add jns sub sub insb das divb sub lods dec jns stos (bad) iret adc jo movsl imul inc dec add aam test inc rdmsr lods xor gs mov cwtl xchg push add and pop inc mov jbe dec sti negl pusha mov leave and mov arpl inc das in pop fildll mov and (bad) sbbb roll xchg and dec roll cmp scas stc (bad) aam into or hlt mov in mov das pop loop push fcom adc ror imul adc lods subl dec pop mov lret adc push (bad) push (bad) xor jbe loopne push (bad) xchg (bad) and gs dec out mov adc push fcoml jne push std jbe mov xor inc scas and or decl loopne data16 mov or insb jbe je mov pop or jmp in out dec es sti aas dec out mov insl mov jb out pop fdivl mov pop repnz pop outsl sub xchg pop xchg mov xor or inc (bad) push xchg addr16 and sbb int3 sbb xor in les xchg cmp lods or jge incb cwtl and mov xchg stos in scas fs stos insl mov ljmp stos dec imul ss pop shl cmpsb jmp push mov jno dec (bad) shlb sub sub mov loop stc jno loopne aas mov dec and inc cmp fisubrl dec jnp pop jne das test aas mov (bad) aaa rorl and cwtl pop or sbb in loope xchg imul adcb icebp lods cmp or mov jle jmp xor das sbb cli sub out sysenter (bad) fadd cwtl repnz scas movsb push dec jne pushl cmp fwait and jne aas xchg pusha lret nop pop (bad) in orb (bad) mov aaa lods sub jmp jne hlt out or js add orl cmp outsl mov test (bad) sbb dec xor mov daa js inc lock stos xchg je cmp and in inc adc xchg add cmc xor hlt push and std outsl xlat dec xor popf or push push out or push int3 adc sbb loope add and dec es lds lock adc imul clc push push mov jecxz sub inc rorb stc jmp repnz dec xor cmp lods gs nop (bad) je addr16 testb scas push out add or mov outsl dec push fadds jb mov fsubs dec push pop jbe jns xchg mov out das mov cmc shll in and stos cld pop inc adc jns adc inc cmp in pop fbld jns sahf mov aam repnz ret add icebp repnz mov push push jecxz mov jge pop lahf vcvtps2dq cmpsb sub adc mul stos pusha jnp imul sub roll adc insl xchg add ret fwait loopne push mov pop mov jmp mov (bad) call xlat or les xor out rcll add (bad) int3 push fsubrs xchg rcrl push jne arpl jg pop xchg std out add cmp pop out jbe sub mov or mov rorl aad sahf mov jg lret cld xchg pusha jmp dec dec fdivl adc (bad) into fsubrs into cld xlat jmp jbe mov fincstp mov insl mov sub arpl push pop clc cmc jle lahf stc es sahf pop jg call pop cltd fisttpll sbb imul or dec xchg dec push sbb hlt cmp (bad) mov pop (bad) dec test or fldenv popa mov xor mov (bad) xor and inc add jnp stos out fimul in in push jae adc push sub fwait mov xchg xchg push out mov lea add rorb mov xor inc (bad) stc xchg testb cmp out xor inc jb in fimul test inc jp fmul aaa and das cmp loope push aaa jne add ljmp outsl sarb fbstp scas cwtl push pop add push rcrb push icebp stos mov and das or sub (bad) sahf mov stos gs xchg inc lcall test mov in sub rcl or cmp sbb pop test dec mov test sar shlb xchg jno lods icebp lahf add movsl xor lret cwtl into sbb loope iret sub adc jecxz int pop out fiadd popl jp and hlt push repz bound mov mov loop dec (bad) sbb pop pushf (bad) iret mov ss out mov dec and lods scas jg outsb inc xlat lods lcall roll dec mov (bad) cmpsl aam mov pop das adc out notb arpl xor mov bound loope loope sbb pop fwait and jl int3 inc clc lods xchg adc inc mov sub stos push sub imul sti arpl (bad) jbe test fisttpll mov sbb sbb lahf (bad) xchg sub pop mov iret push out jmp je bound iret in jne (bad) enter adc sbb adc dec inc mov mov xor jl mov xchg jle pusha loop sub icebp lods stc mov mov push sub ja test cltd mov sbb add jb repz or or mov mov fs stos pop mov les test popa fildl adc cmp rorl lds mov in popa sbbb inc xor add leave insb sub xchg fistpll dec rcl cwtl lret jb insl in (bad) sti mov jg lea adc adcl jbe ja jmp pop cmp mov cmp mov es and ss xchg (bad) ret popa lds cmp imul (bad) xlat push adc xor cmc (bad) cwtl sub inc (bad) cmp sbb inc es pop push pop add orl sub inc movsl gs icebp fimull xor mov fldenv mov rorb ds sub mov pop push xchg jae inc xchg (bad) add and jnp mov dec push mov add nop push (bad) in or sbb rorb xchg (bad) movsb clc pop mov inc aad sbb leave xor pop inc rorb xchg ret adc insl (bad) mov sub (bad) insl adc repz (bad) pusha call icebp xor test ret mov test cmp xor xor mov mov xchg loop hlt xchg mov icebp fwait ja (bad) fldenv xlat int3 jmp adc fidivr repz ds sbb sbbl cmp xchg inc cs mov pop mov shr repz pop adc adc pop faddl sbb je fdivrp jns jo icebp inc (bad) cmp mov pop fld xchg in aas lahf sub (bad) jne pusha inc hlt bound inc (bad) push test (bad) flds jnp xor and cmpb pop pusha aas xchg xor mov insb movsl ret fsubrp or and jo xor lods xor push jne call sub into (bad) lds test lds push fidivrl scas icebp into in dec adc pop test or gs insb insl xlat jo ds jg std xor push dec sub (bad) dec mov leave (bad) idiv fwait dec (bad) dec outsb fistp fdivrs sub aas idiv adc fdivrs dec outsl stc xchg stc shll dec push movsl roll or jno pop jmp add ss push pop sbb jmp xor mull add sbb mov and loop sub mov xchg jg cmp lret and push aaa out std mov sbb mov data16 ja cld in loope xchg xchg jp enter inc xchg pop or cmpsb dec fwait push das jmp cmp cmp rcl int3 stos popl pop stc adc enter mov addr16 pop cmp out scas mov cmp mov push (bad) mov aad mov test pop xchg inc add (bad) sbb and arpl mov jmp sub out mov (bad) rcrl mov or add inc inc pop leave mov inc lods xor inc (bad) test adc icebp fdivp mov adc xchg pop mov fwait aaa ss lods int dec (bad) inc out data16 push sub sti mov jl in jne loop (bad) sub add push ja xchg test push in xor cld (bad) mov mov sbb pop add imulb (bad) (bad) js add enter lcall pop inc cmc add mov arpl (bad) fcompl or cmp clc dec pushf push pop and std repnz lods adc inc stos inc sub jns or jbe pushf lret mov leave pop xor jno jmp ss xchg into cmpsl adc push outsl mov enter in mov outsl mov movsb and loope insb aam jl lock je cmp fidivr xchg mov shrl sahf cmp sub mov xchg lods decl pop in pop mov shll xchg adc xchg (bad) arpl cmc jle repz mov mov lret add dec adc sbb movsl xchg stos fs stc lds bound aas lcall ljmp sub cmp mov stos or sbb or sbb jle test addr16 andb mov inc aad es lock pop fstps lcall dec jo push mov lock dec out mov sbb cmp mov nop cmp scas jmp test outsl cmpl outsb iret inc mov in push (bad) adc xchg test mov mov test mov ret movsb repnz mov sarb jmp jl mov (bad) xor add sbb ret sbb mov mov pop mulb scas mov repz mov and movsb adc xchg sub aas sub jmp or sub adc adc lea add cmp repz imul xchg and xchg jp leave aam imull nop clc pop cmp xchg imul jecxz jg inc push xor pop xchg push clc jl xor aas (bad) jne inc sub mov jp clc sbb pop imul xor adc xchg lods dec test xchg dec adc mov adc hlt sar mov stos jbe into ffree int daa enter lret sahf aas dec (bad) mov mov cmp inc stos dec pop arpl xchg data16 insl pop repz insl sbb mov addr16 icebp xor push std lcall imul daa and mov cmc in (bad) lods fcmovb push sti jecxz and jmp lcall insb je cmp mov or sub aad int3 mov pop subl add test adcl mov jno test push xchg sub pop aad dec mov fisubr add mov mov pop adc popa xchg fsub insl out mov mov xor xchg inc push add nop push into mov fwait lcall xchg fnsave lcall cltd (bad) test test and dec loope xchg bswap sbb xchg dec adc fnstcw test test mov insb repnz imul push mov (bad) push jmp jg mov decb sub mov pop lods jnp jle cltd out mov xor imulb mov aad sbbl int pop or dec ja add or and icebp ja sub add xor les stos cmp xor lahf iret push ret push push data16 nopl jg pushf mov sub xlat ss cmp push jecxz push or lahf push pop test lock mov xchg icebp outsb jbe popa or lret push cmp push inc (bad) push and fidivl arpl inc sub xor mov fbld dec aas outsb xchg adc sub (bad) mov sahf add pop push int3 data16 stc jbe mov push nop inc xor jmp push xor xlat push sahf jne sub daa fistpl dec cmpsl or or xor es push lahf cmpsb xchg pop adc popa xor xor ja cmp pushf sub jno jp lret mov push loop add stos in stos pop sbb out mov cld data16 (bad) popa sbb sub sahf pusha aad rorl mov push jnp iret xchg fdivrl mov mov frstor enter mov int lret push pop cli xor mov dec inc les cmp or dec inc fsubrs ds mov xor mov (bad) adc pop dec xchg loopne enter rol js insl inc scas pop sbb js stc shrl leave mov leave cmc cmp leave lock das aas xchg cmp add loop popf movhlps mov push inc pop pop es imul mov call (bad) xchg mov mov push sbb stos jno lods in das pop into aaa sub frstor sbb push fmul mov aaa push push xchg xor cmp sarb jne es jecxz jg dec rcr or js jl push orb jne enter pop stos xchg cmp dec pop sbb lret adc xchg or in in jmp dec fstps pop shrb sarb push inc pop imul into inc mov xchg mov pop jmp mov xchg lock cmp loope xchg (bad) out fisttpll and push (bad) sbb pop dec cs stos popa data16 cmp lock test sub push dec testl cmc or ret xor cli or dec jno cli dec ret scas mov leave jne jns xlat arpl loopne mov aad bound jno repnz ficomp cmpsb popf pop mov popa fucomip jnp clc aaa (bad) push mov and iret fmulp jnp inc pushf mov out inc lods movsb mov jbe add in xchg aam divl stos incb jb cmp xor cmp cmp jns mov pop popf test pop xlat int3 and popf push add outsb adc loop sarl dec sbbl int3 in mov cmpsb cli sub mov adc rclb scas jl mov mov or mov add or stos scas std or popa sub sbb cmpl push sti cwtl jge stos clc add add ljmp movsb cmp loope mov stos push xchg rcr and (bad) cld or test jae lcall cwtl pop stc hlt mov data16 adc cmp les cli mov cwtd mov xchg mov jnp jne lock push icebp jmp lret dec sbbb je cmc lret ja es pop movsl mov enter mov and outsl xchg loope mov dec dec lcall sbb and cld jle je and cmp xchg dec and mov add pop cmc push movsb dec sti out mov dec sbb popa or xor outsb pop sti lcall inc jg add mov add aad push mov testb fmull or add pop sar (bad) (bad) data16 fdivrs pushf mov mov loopne pop jecxz jge das lcall lahf inc lds stos sub lret mov dec (bad) into in nop stos ljmp addr16 cmpsb push mov push ds push push sti push outsb mov inc jno fdivrs and mov subl cltd test inc ret adc data16 notb adc mov popf mov xor inc inc jecxz fcmovnu aaa fwait and inc cmp das mov movsl lea iret (bad) jle mov dec fild xchg push and bound or (bad) mov pop jo inc popf inc inc xlat mov (bad) sbb call test lahf mov pop lods mov cltd cmp mov scas ds movsl xchg addr16 movsl mov neg popl in jbe dec push add xor pop pop xchg sbb addr16 int3 xor sub in add or lds jns addl subl mov cmp push (bad) addl add sbb pop fs inc push aas cwtl push icebp test imul xor fxch lock pop dec sarb arpl pop fwait mov jo (bad) fs mov lret sub int3 jno mov (bad) iret mov inc repnz jle repz (bad) mov mov pop inc or cmp outsb test arpl loop lahf inc and (bad) ficomp in and jno jle in jnp fimul mov (bad) imul push flds mov inc lret lahf mov fmull bound and jae mov or (bad) xchg dec out jge test lods xchg imulb pop test add lods cmp cmpsl nop adc ds inc push mov pop xchg inc mov je cmp push iret loop sbb jecxz mov std push cwtl and sub jo push inc aaa das mov cmp mov mov hlt call sahf fmuls movsb inc pusha or clc test pop ljmp in push jno in scas push sbb (bad) mov adc add sub aaa sbb cmpsb mov push mov adc inc sub arpl push or daa inc addr16 adc js addl dec les out test orl fild push dec test jmp les dec or sahf jg out fstps sbb test or sbb (bad) mov out cmc jb jno mov mov sahf nop jl scas (bad) jecxz dec mov das in jnp push mov stos sarl nop dec xchg sbb lea fsubs test hlt les or cli daa loop cmc inc xor push mov into push daa pop or bound fs (bad) cmc xchg (bad) mov xchg int3 in (bad) cli sti cwtl cmpsb dec push fnsave inc scas push jns enter or out fldenv add out dec add and repz shll mov outsb lahf fst ljmp mov andps ds sahf adc push dec adc sbb cmp push pop cwtl ret clc negl sti test push mov mov cmc xor pop adc inc push stos add fbstp inc xor sbb es ja cmp adc pusha adc addr16 or add movsb cld (bad) and and lcall cmc mov (bad) or push xor pop lods and outsb rorl add gs daa mov cmp popf pop or and lret out xchg pop (bad) sub inc jl imul jmp cmp dec sbb push lret push pop fsubp sbb in sbb add sbb insl xchg or stc test icebp frstor cs lods lods out orb dec jge,pt xor arpl pop lods lahf push loop mov gs ljmp sbb (bad) nop mov (bad) pop jl mov lock insl push mov cmpl xor fimull push mov into shll dec cmc aad add lcall imul sbb in push test in xchg outsb jo hlt pusha adc and adc dec pusha lea repz test pop mov mov cmp sbb sbb ljmp pushf mov (bad) cmp call dec push in mov (bad) (bad) aas xor sub pop test jp js jae or insb dec mov jge dec xor mov and hlt stc jb loop xchg push icebp clc xchg push push jmp enter add fistl and pop mov push or popa mov add cmp sub stos imul int xor es sarb cwtl dec fnop mov adc sbb (bad) inc sar jg mov int3 call insb ret lods cmc stc mov ja int add lea inc call lock and and rsm push xor xor inc (bad) fldcw xor cmpsb inc xchg push cmpsl shl test clc or push fdivr inc fldenv lret pop mov xchg dec lds xor stc lods mov ret pop sahf push jge imul lock jne into xchg jle (bad) jae fisubl ret push mov roll pusha xchg jb fsubs pop add cmp mov int3 push adc sti aad pop (bad) mov lods test jecxz fcomp inc subl jnp imul jbe lock loope out fcoms ret mov inc repnz mov cmp mov adc loop jne mov sbb xor sbb in ja ret loopne push lea inc loopne (bad) jecxz cmp out adc xchg ficoml test inc cmp shll movsb pop jecxz jb mov add rcrl pop or jl stc out imul inc mov lahf test mov dec pop sub sbb mov negb mov movsl jmp mov pop xor mov frstor fldl pop faddl popf push xlat adc jb push or fimul adc scas or js scas mov cmpsl sub pop pop sbb xchg mov xchg fs pop ret xor popa mov ret cld fadd leave test fcoml int sub pop add mov or add inc xor sbb das sub fnsave lods aad sarb and or movsb jge push mov scas xchg mov push imul adc movsb aaa aas ret jns mov pushf iret imul lods hlt movsl scas sbbb insb in mov js xor stos push ja in jle jo mov adc int3 push mov push add sti int3 adc mov movsl add sub sahf movsl ja jns ljmp jne add ss cmp mov mov jmp lret sub pop lock fdivl imul or lods xchg mov std fdivrs std fstpt lds and jmp xor repnz aas hlt out test or pop pop lea cmp (bad) frstor push dec sbb pop sub popf xchg lods adc and or aam fmulp mov dec push out xchg xchg enter (bad) xor jno push xchg pop jp aad pop outsl push mov sub loop cmp ret sub sbbl sbb into or push in sbb mov pop in mov pcmpgtb and mov jge (bad) mov ds js lods mov ja pushl aas and icebp cmc sti xchg ss fstpl xor jo inc or mov or sbb outsl or mov xchg (bad) jecxz js,pn sbb in call in push jmp inc imul xorb lods add stc adc test jmp xchg jp cmc fsubrs (bad) adc std jge sarb sbb cwtl dec inc outsb jb xchg test xor (bad) std push cld sahf leave pop xor jnp cmpsb jg pop mov inc mov sbb xor cmpsl repnz repz mov arpl roll enter nop jmp pop cmpsb mov push (bad) outsb mov jnp pop mov push xchg add xor lods mov and or inc mov sub dec mov hlt fs cmp or xor les out scas mov and sti mov lds mov xchg out (bad) mov inc xor dec xor and arpl cmp stos das sarb push je ljmpw ret ss xchg imul mov jle jns inc add (bad) sbb enter inc cmpb dec and inc scas repnz push leave cmp cltd mov (bad) pusha mov adc iret add fadds dec or adc fcompl mov jns je outsb xchg aas mov into roll jno xchg popa pop int push xorl cmp inc mov stc fwait pop mov mov or inc iret ds in cmp inc dec flds jns rcr in sub sbb mov push icebp mov xor xchg cmp aaa andl inc add xchg inc sar xchg cwtl (bad) hlt out push stos pop call mov jl push mov mov daa into inc mov dec test pusha pop scas imul aas pusha pusha cmc pop adc scas xor rorl xchg dec mov das add fldl xchg xchg test or dec rclb sub lds dec arpl aam scas insl cmpsl xor shrb xchg test mov ds cs or rcl out outsl ds jb std lods and push cld std iret mov push xor mov jo push or in xchg dec hlt loopne jmp mov mov push xchg out movsl and jb add aaa es (bad) out xchg test lock push and lea mov and icebp mov lahf les mov inc add aad adc xchg ret jns cld das dec stos adc nop add pop jbe adc insb sub mov xchg xchg adc adc cmpsl outsl gs xchg out lret mov add fwait aas and sub int3 mov leave scas pop cs xor leave sbb pop inc sbb outsl es xchg jae (bad) xchg xlat aas jb (bad) mov out pop lret je repz stos cltd dec and and rcll xor fimul jp bnd movsl cmp scas push popf adc aad (bad) mov cmc out pop or imul aad push push lcall fwait insb hlt lea push xlat ficomp (bad) mov mov and imul sbb xchg flds push jg cmp sub mov roll sbb loopne xor fcoml pop out xor push jns stos lret or cmp in jecxz fistpl mov mov or movsl fmulp xchg fmuls pop (bad) dec in aad mov stos xor or jg dec popf push ret movsb fiadd arpl popf push mov (bad) ss ficom dec inc cmp jle xor jmp jae adc dec test and push fwait xor adc lods xchg sbb dec and inc test push sahf dec in or mov repnz lods push fwait scas popl fcomip xor scas lods mov cmpsb xor jo lret in shll cmpsl rol adc and mov mov loope frstor clc cmp test adc test jne lea dec sub jmp popa sbb movsb jge inc (bad) repnz adc aaa push adc (bad) imul lock cmpsb add outsb or and insl lea push adc sahf andb jg movsb jns fidivl add cmp xchg push or xchg push std push movsl nopl arpl mov imul inc xor cld pop jo iret push inc movb notl xor mov pop idivl repz sbb sbb mov push cmpl pop inc js adc fldenv inc imul mov fsqrt je (bad) icebp dec cmp xor aas jo movsb cli push cmp push adcl inc mov fsubl push sub aas mov aaa and ljmp sub xchg insl inc cmp in out fisubl xchg xor test inc and lcall adc lret or sbb dec fild arpl loope ss xor in aad les lret int3 aas imul loope out outsl cld sbb xor (bad) dec sbb in or pop fsts leave and maxps (bad) movsl in jmp in inc adc out jbe rcrb mov aad mov aaa sub or dec test sub nop cmp dec inc loope jnp inc lcall mov out mov mov add fcomps scas jle inc fdivrl pop push jo jae sub sub jo jge xchg scas xchg gs pop pop lods lret jnp add mov add push scas or (bad) pushf (bad) faddl or je negl inc xchg stos xchg dec pusha out or cmp (bad) in push (bad) mov (bad) iret out call dec mov fdivrp jecxz lea lret (bad) jbe mov add xor hlt sbb jb or inc sarl addr16 cmp into mov or sbb mov cmpsl pop mov mov nop pop adc insl (bad) jecxz pop mov (bad) dec xor call and xchg jmp sub mov (bad) scas dec or (bad) jmp aaa add and pop inc (bad) mov and test (bad) in xor dec pop xchg sub lret cmp mov fwait out or lods and fdivrs sbb xor jl lret mov xorl mov cld mov js call jecxz cmp xor out int3 mov cltd mov insb xchg mov xchg xchg pop adc cmc and lods adc jmp int loop je push je and cmpxchg daa stc fiadd push imul scas xchg xor jnp xor pop ret leave inc pop ret dec mov jae lahf in inc inc les pop cmp sarb mov ret outsb sub fmull xchg adc out sub fist adc jno dec and jno xchg scas sub mov push sbb jg mov imul xchg or push loope aad or jo add and pop nop push icebp jno (bad) imul and fisubr leave fwait pop add dec xchg mov loop mov adc mov push out loope insl imul sub in stos add (bad) push push and mov call aaa adc sub jge fbstp ljmp addb ret pop dec imul in stos daa pop sub xchg or leave cmpsb mov in scas pop std decb dec ficom and cmpsl sbb mov pop scas jge mov rcrl lret fcompl faddp (bad) jo not aas jge lret in jns and test or mov xor fcmovnbe scas pop sub push pop lods orl push lods add mov and and push pop aas inc fcomi cmpsl imul enter std enter imul movsb call sub lret pop mov shrb rorl (bad) popa cmc xor dec xchg test mov jbe push jp pop add pop incl dec or clc xchg lods cld aas sarb fucom mov pushf sub fstps pop movsb sbb cmp xor xor aaa sub jge sbb (bad) ss push hlt or mov cmc dec movl fsts loopne jo sbb dec bound test inc stos jle stos dec dec jge pop shlb inc sbb mov pop jno pop test adc xchg imul arpl jle test push inc mov and mov fnstsw (bad) in sub daa mov push cmpsl jle cmp jmp adc out sbb call icebp push fcompl and adc sbb jle mov (bad) pop iret xchg mov and mov cwtl sub push nop int3 repnz adc scas out push fcoms arpl or mov mov (bad) mov adc in test jo cmpsb lahf sbb in lea int3 icebp subb mov and push mov stos sbb inc sub mov or in sub rcll fucomi rorl mov add mov cmpsl xor push ljmp loop push mov lret mov sbb rcll mov adc push fldl loop mov sub dec inc shrb fidivl cmp fdivrl incb cmp test ja or mov int cli sub (bad) lea cmp iret push pop mov leave cmp jge pop insb (bad) mov cli dec adc je lea sub out (bad) adc cmpsl mov mov test aam xor outsl inc rorl (bad) fcmovnu les xchg add cld out push js outsb es jmp (bad) ja loop mov sbb and les lods testb fs loope mov pushf ficompl xor faddl sbb fild sar cmp roll xor cmp jecxz inc idivb lret adc pop push imul or xor cmc lock stos pop (bad) ds dec adc sarl inc mov jo insl jecxz in fnsave sbb add pop cmp sbb imul nop xlat jbe pop cli or mov pop leave inc and inc mov inc movsl jg jmp add cmp mov ja mov sbb mov (bad) mov pop aad xor insl jns xor ret into xlat or jo aaa and dec movsl mov rcrb sbb or lea xchg pop in jb std add int adc sub jnp mov ret popl test clc test movsb cmp sbb add nop mov imul fimull or jno sub push jns or pop out push add mov fmull add cmp aaa adc dec xchg dec adc enter pop sbbl daa inc add mov repnz in push pop xchg add sbb mov jb adc divb cmpsb addb sti mov cli jns push pop mov mov cmp lret mov notl jmp dec sub fs sub cwtl (bad) lret xchg pusha jbe andb add fs sbb sub mov fwait inc cld shrl adc jne aad lock inc outsl std mov test repnz lods sub lret cld adc sahf (bad) bound imul outsl xor out dec inc mov adc int pop arpl pop fstps ljmp xor (bad) leave pushf add push sub out lds or or mov inc ds xchg mov sbb push ss or fcom cwtl xor pop mov and add push xor mov (bad) pop (bad) into jecxz fisubr cs sub or jl pusha dec pop mov leave jle sbb adc ja push repz lcall and lods mov sub sbb test aas add fcmovne xchg dec push dec fimull orps fisub in add mov fstpl jmp sti xor movsb ljmp (bad) sub lcall loope or mov add mov adc pop fwait repnz jne ret or or xchg and adc push adc ds and dec jnp int3 les stos nop repz popf mov fsubs (bad) mov in pop sahf mov and pop jnp inc jnp (bad) daa cmp pusha fcmovbe lret xor xor cmp pushf std (bad) jo pop jl ljmp push cmc sub movb mov mov insb inc xchg fwait icebp xchg push insl (bad) push cld (bad) xor pop mov in inc push add or dec lret jnp xchg mov loop in cld loop and add inc push push mov loope int3 fs mov jb,pt inc insl adc sahf mov jmp or hlt popf push pop les and adc mov mov enter lea shrl les dec cmc mov out jns jne ja inc cmc mov jge push andb int3 fsts test inc pop icebp adc push aas add jl sub cmp test adc cld outsl push fs or xor mov lock push frstor sub popf sarb add push jp jae inc dec jns or mov lea pop clc int das in and mov dec sub out ficomp ret mov stos loope add cmp jp fsubp test ret out pop (bad) push outsl les jo sbbl xor mov jo dec pop repz icebp popa pop xor mov outsl sahf jnp jecxz sub fistpll sbb push call jecxz (bad) push add lahf adc pop daa fstpl scas into xchg lock jnp mov push or pop sbb ret inc mov and cli jmp lahf lds loope inc pop xchg sub pop push or xchg in jmp jge inc les repnz xor fstpt daa mov fcom adc sub les lds push dec pop or adc or sbb loopne xchg ljmp push cmp sbb xchg (bad) xor aaa lahf sub (bad) jmp cmp pop mov inc hlt mov decb mov jmp loopne call popf add cwtl sub outsl jns out lcall mov jg fildl pop mov fwait inc add dec dec insb mov dec in mov sub int mov adcl xlat out nop mov cmp repz dec sbbb test stos hlt pop jecxz test and lret pop (bad) addr16 sub imull mov (bad) mov pop std cld lods cmpsb push push xor mov lcall mov xor add jae cmp fadds in mov and mov push pop adc (bad) repnz and stos and les mov js or aad push cmp sbb js push xchg (bad) in leave xchg jb mov xchg cmp shrb push ja adc jns sub lret ss xchg push mov ljmp cmpl xlat mov idiv imul cmpsb mov fbstp jns mov flds xchg fistl pushf (bad) jae xor cmp xchg testb pop inc test mov icebp icebp pop lds inc mov inc test pop (bad) jb icebp cltd pop arpl int inc fwait test and adc dec mov lock cmp inc (bad) fildl adc and mov pop adc scas and xchg adc and les add push sbb (bad) xor (bad) sti into (bad) mov xchg xor lret xchg pop and pop pop or mov or enter xor mov mov jp pop jno inc das sub add jbe pop pop jb or insb (bad) pushf pop push sahf test les cmp pusha mov push inc push sub pop mov aad mov xchg push pop call mov or loope scas jo dec shlb scas popf cmp ret lret xchg dec movsl or aad mov sub (bad) ja adc sub icebp scas mov jo outsb out mov lods xlat sub aaa repnz mov dec lcall cmc mov add add nop cwtl dec push scas dec pop jae cltd mov adc fwait xchg lcall cmp fist pushf xchg mov mov sbb xchg lock hlt pop fdivrs cs adc mul fwait (bad) mov dec shr jl or cmpsl mov enter push lock jae push xor mov fs adc mov pop push mov ret sbb add gs enter ljmp je pop mov (bad) stc outsb cmp xchg push sub std movsb cmpsb xchg mov ret in pop cmp fadds loopne pop push jecxz xchg pop inc ss mov std jbe xchg xchg mov add cli or or xchg cs pop push inc fwait and int3 shrl add popf sub mov aam (bad) xchg stos pop pop mov sbb jecxz test int3 inc mov mov mov daa mov push ret gs repz fs mov aas fistl sarb dec insb ljmp mov add rorb scas mov lds mov mov insl dec xchg fimul int3 inc das ret scas insl insb (bad) jb push (bad) push sub mov push repz jbe call rolb stc imul push stos int cmp pop pop xchg dec cmpb or (bad) jmp je icebp xor enter mov ret mov pop dec fidivr fist rclb popf loope lods dec dec ret es jne xchg js shr into outsl cli push mov and leave test xchg sbb aam sub rorl push rcrb mov mov mov pop gs loopne xchg sbb (bad) pop stos iret xchg (bad) in outsl xchg adc sbb xchg sub pop sub out mov ss mov fs cmp sbb ja pop pop aad sub dec mov fisttp sbb mov xchg xor fwait outsl fcoml mov cmp rclb sub (bad) in dec jno roll xchg cmc wrmsr xor outsl test lea jge andl mov insb test int push (bad) repnz add fisubrl cltd jae in imul push sub push add push les sbb inc push rol jl fmul or jge (bad) es in (bad) adc pop fsubr jp (bad) es mov mov xlat mov outsb inc push int3 and adc (bad) bswap pusha cmp jne xchg cmpsb dec (bad) ljmp inc sbb sti add testl mov iret or mov and cmp push sbb aaa int3 push dec jns xchg pop loop pusha xchg movsb mov jmp or ds (bad) imul cmp xor ljmp ja inc mov mov loope mov ret mov xor js push push bound movsl insl aas push xor ret xchg mov (bad) rcl fistp icebp fldt mov pusha add test das jecxz mov stos sbb cmp aam mov inc pusha test pop sub cld push sub jb lds mov and scas xor scas ret aad rcrb test xchg xchg pop sbb mulps mov cld outsl push ficoml imul jbe dec push sti je (bad) lret out loop mov push sbb or (bad) jp scas jo outsl iret ret fcom jle inc pop mov jle fdivrs ss and out rcll clc rcrl shrb lea loope inc daa je aaa outsb add test sbb mov sbb xchg (bad) ucomiss xchg inc out sbb mov int xor pop inc sub ffreep or out adc mov icebp inc push sbb jp mov push mov adc cld aad sbb adc inc adc cmp add shl jecxz mov mov in lods enter addr16 mov pop in sub adc push int or jle adc add or insl mov std xlat xor arpl cmp mov loop rolb mov and mov (bad) in je sub fstpl xchg push dec dec fiaddl test xlat and repz mov scas int3 in adc mov mov adcb lock mov push into das mov mov push sub lock add cld jecxz fwait dec inc clc sarb nop inc lret (bad) insb (bad) xor jns and sbb inc icebp popf divl cmp jb cld cmpsl push idivl mov dec bound adc or adc popf ds pop add test jnp sbb inc (bad) das mov push pusha (bad) gs imul shr add cmp and sub add ret scas ljmp sarl and ljmp cmp push shl loopne pop mov fadds call push (bad) xor fisubrl aad push js sbb sub sub xor movsb push int3 mov add popf loopne subl mov lret cli dec imul xchg cmp (bad) xor fdivrs lret xchg pop jecxz jne lea hlt push mov mov inc fidivrl leave inc movsl sbb fsts imul and popa pop jae out xchg (bad) lcall call adc jl incl xchg jns js adc popa push xchg jecxz xor outsb ljmp and std lret push xchg mov dec shr sub stos in push cmc lods and add outsb jb divb ss adc movsl sub test out or lret cmp ret and lea mov or call jbe pop stc fiadd fcom idivl rsqrtps lret adc push ljmp outsb in jge pop lods inc mov or inc fcmovb sub sub mov cmp (bad) jb in icebp mov aas js xchg xor xor cli mov sbb mov add adc sbb fldln2 and mov mov add icebp mov inc enter xor xor (bad) xor fiaddl xchg roll add pusha sbb inc xchg pop shrd imul or aaa jno aas lcall xor pop sbb jmp imul nop inc dec hlt inc imul or sub xor inc fwait data16 lret jns jg scas dec dec or in xchg pop int pop scas cmp (bad) std pop sti cmp mov dec (bad) pusha cmp mov movzbl xchg lods mov iret lret (bad) or sarb xchg pushf jmp imul fistp xchg pop (bad) mov dec jbe mov inc mov jl add xchg mov cs repnz sub jo xor movsb push sbb mov mov gs out fisttpll popf jecxz outsl push repz stos ss add add add int3 arpl sahf push xchg lcall stc mov ss adc mov and sbb mov adc out movsl stc mov addr16 sbbb push or push dec jbe push sbb lret jno sbb dec int3 jo es jg loop sbb or call inc mov stos (bad) fdivs je and mov xor mov xor enter test divb cmp push dec insl jmp mov dec xchg into arpl (bad) xor xchg mov (bad) sub push pop sub test (bad) xchg or mov rol xchg jmp out xchg mov imul xor sbb shrb pushf and stos jge out (bad) or xor cmpsl sbbl ljmp test or push sbb xchg pop push in mov and and repnz lret shr push in mov cmpsb xchg pop es fildl or loope pop dec mov inc fidivrl push mov clc insl mov nop sub cmpsl mov loope inc push pop sahf imul jmp inc mov cli mov cmp ret sub out aam repz pop movsl pusha dec mov loope cmp dec jno pop mov pop leave scas hlt imul enter push outsb sub cs mov out cld cltd hlt int mov adc out movsb xor in sysret fcmove push fwait and cmp jl mov dec dec sub (bad) std popf xchg popa cs dec into push cmp jbe push outsb sub psllw mov sbb into jg data16 xlat mov xchg inc mov mov cmc pop out in jae cmp das test sbb jo jge stos pop mov daa incl movsl jb (bad) jbe cmc lock cmpsb cmpsl das push pop int or decb std int insb mov xor jo mov test pop sbb xor stos mov lahf add rorl or loop lret xlat (bad) (bad) fsubp cmp push das fldcw jge xor push das lea popa inc cmpsb (bad) ds jge insb out call sub ret in addl mov nop dec loop xchg add mul sbb xchg fistp icebp aaa mov repz sbb adc popf inc mov pushf jecxz or inc lcall xlat pop outsl and sar popf mov jle push stc mov (bad) cld out pusha pop xchg lock add mov jp xor add jb cs aas (bad) jp mov fnstsw outsb (bad) in insl mov mov pop ficomp cmp cmp lcall shlb mov xchg das stos mov push ja jo dec inc xor xor add lahf mov lcall pop inc inc aaa lods outsl adc or in enter add test inc mov js mov jle cmp pop sbb test imul stc adc dec xor bound push das push and call fisubrl jge data16 push jl je mov push adc sbbl iret pushf push pop jno add fcomps push aas or (bad) cmpsl (bad) sbb and mov int mov lods fildl bndldx roll leave xchg pop scas lahf movsl movsl inc fcoms scas add (bad) and jne,pt mov xor mov mov cmp lods mov insb jp stos lret pop movsb jo repz and outsl push pop les pop test mov xor sub fnstsw (bad) sbb inc xor jl cwtl push or loopne or shll mov jne jmp mov sub call hlt push imul imul fdivrl xor pushl dec (bad) mov shll in addr16 fcoms sahf inc test push popf std adc sbb shlb mov xchg pusha cmpsb or fucomp in sub jle mov push loopne jbe fwait mov call aam mov jp rcrl xor xchg outsl lcall rcl push out add aad pop and bound lock leave popf ds add sub jb movsb xchg arpl mov xchg cld jo sub (bad) (bad) or aam mov stos mov adc push pop (bad) lret or stc pushl jno outsb jmp mov ret mov aam xlat cmpl xchg mov mov lcall sbb and sti xchg xchg mov out add inc clc scas sti xor imul mov fsubl popa (bad) repz fistpll lods out inc add push mov outsl and (bad) jo (bad) pop hlt jb scas insl stos pop push icebp jno into jno push lcall nop cmp sbb rol and sub ss xchg aam std push outsl rcll jl dec fimul cmp int3 imul imul push cmp mov aad mov stc cmp jg jns out std dec cli fiaddl cmp pop xlat sbb les add nop rolb out mov dec jne dec adc or dec (bad) iret and sbb std jecxz in inc and dec into mov lahf cmpsb xchg mov outsb xor xchg dec loop test push call or pop and insb inc lea xchg or in push and ja dec cwtl inc push sub add inc sti hlt bound mov dec repz lock xchg mov mov and in das jge mov jmp mov ret jb lock and inc ret ss mov mov xchg test inc pop test jge push mov jle or je mov int sbb insb mov repz scas (bad) lods mov mov out sbb pop dec xchg je lret and xlat sbb movsb cmc dec insl or popa dec dec shll sbb pop jno jp fiadd and push bound gs cmp or shlb imul cmp add sbb and (bad) xchg rclb mov loop mov adc repz lcall jns repz sbb mov ds cmp (bad) cld scas dec mov (bad) repnz (bad) in pop nop sub pop stos mov adc xchg in (bad) (bad) cwtl and hlt push cmp inc es out lods je inc jns sahf xor rorb jb xchg jne pushf mov sbb shrb mov mov lock ljmp test xchg decb sbb push add int3 and cltd mov or mov mov mov nop pop jb and (bad) dec fcos insl pushf cmc ret test xor mov test mov add push mov gs rcrb fdiv inc xor push jbe pusha mov loope dec stos xor mov ficoml icebp add sub out mov pop out mov mov repnz mov popa imul into mov or out jl xor add sbb mov (bad) les aaa jns loope arpl les (bad) jns insl inc mov xor xlat aas or add sub (bad) adc dec dec xchg dec std mov lret lret dec inc xchg jmp sbb mov cli add lods adc and or xor fdivr rcrb jo in lods aam jmp jge push inc sbb jl daa adc cwtl out lea dec xor or mov and cmp pushf iret xor ss xor insb lahf xchg or add add sbb repnz fisttpl les popa jb insb outsl ss dec mov jb mov cld jecxz adc outsb or nop cmc and push cmp inc scas pop insl out cs mov mov fistp (bad) cmp inc mov lds stos in mov xchg stc imul push cmpsl ja aaa sub into dec mov insb jne popa std mov aaa mov dec mov test int roll arpl and sti bound andl add incb rol push push pop push lret cmp lods mov sbb pop fcmovb jg inc mov call and stos sbb out mov add in ds mov leave inc clc negl fimul and test add sti (bad) cmp les xchg test out xor mov outsl out mov jo (bad) mov mov cmpsl repz or mov imul outsl push (bad) data16 pop mov insl decl popa jp lcall cmp rcrl jbe xchg gs ja aas sbb std out repnz int cmp and mov lret dec push jl pop jbe jmp popf mov inc (bad) aaa imul ds pop mov mov aam iret pushf adc int aam negl cmpsb or jp inc inc leave inc and push out mov popf push sub jl pop rclb jmp push mov enter dec dec test sbb mov adc xor push ret ss jp popa popa lret (bad) sub call push stc sbb add icebp mov cmp out mov push adc add (bad) out dec lds sti orb (bad) xor movsl ljmp add jl and jne sbb mov dec push ds fldl add push jnp sti and cmp mov cltd and aaa add rcll pushf push popa add ds pop mov adcl and xchg adc adc or cmp cmp sub sub adc sbb cwtl jno clc xlat sbb xor jae sub vmovupd cmp shll fldenv loopne xor (bad) ja jb pop xlat sbb sahf xchg mov enter jb in sub sbb insl adc enter mov pop mov leave push sub and push fwait mov test sbb lea (bad) cmp mov and add dec leave jns test cli in or mov push dec mov lcall pop mov sti scas mov sbb mov ret stos mov adc (bad) xor sti jne mov fsubs lcall stc push aad into roll in rcll clc mov das push or xchg adc mov add movsl repz and loop sbb rcrb cmc xchg shrb popa fisubr add arpl popf adc mov xor sub pop in aaa mov pop cmp dec xchg cs bound mov cmp notb mov dec add in ret fldenv sbb sbbb sbb std mov mov aas and lcall outsb cli jmp subl adc ret push and and jg mov pop stos inc repnz pop dec cmp adcl testb out pop rcr stos push xchg in jg clc pop sarl movsb hlt fistpll mov int lret nop inc dec sub (bad) in mov mov push mov cmp (bad) xor xchg (bad) mov jge dec sbbl add repz ret jne orl pop mov jno fs cmc enter add mov cmp mov push lret (bad) add cwtl mov pop adc enter xchg sti push cmc mov add scas dec ret and lret out push sub xchg mov pop jecxz js cmp mov cmp sub add dec out in pushf subl cmp mov movsb stos std push nop lcall dec push push jmp inc pop ret adc inc inc push mov pop loopne stc lods repz loopne out adcl sub out es inc pop es ljmp adc fnstcw pop leave cmp fmull or std (bad) jge scas (bad) nop jnp inc lods xchg or adcl mov arpl mov sbb imul sbb aas pop repnz ror fwait jl scas ret mov loope lahf inc mov push lds add mov inc sub pop dec aam aas xorl push pop pop es std popf mov ds jns subl in mov sahf jb and shr xchg and sub mov mov mov pusha jl cmpsb fstpt (bad) daa xchg stos imul outsl lea dec xlat xchg jno cmpsb int (bad) jne stc add popa out mov aas mov dec (bad) rcrl rclb or xlat ljmp test repz js pop dec mov push cmp cmc push jle add inc add sbb add clc push imul or adc add mov mov popl rcrb sub clc mov jp shl xchg fcoms nop/reserved repz xorb roll mov in mov aaa popf ja stos sbb stc and or fcompl rorl ja push xchg xor ret andb mov outsl sti out push in mov rolb cli mov push lock cld mov push sub bound ret das inc sbb jp std rorl adc lcall not enter sub inc data16 add sub scas xor sub ljmp pop cmc jnp dec aaa xor pop into mov sbb xchg (bad) jo mov xchg scas jbe or jg dec mov jnp ja lret jns sbb (bad) jae sbb xchg sub sbb push xchg cli or add inc fwait inc xchg aaa dec xchg (bad) (bad) aam add test (bad) jbe sti repnz mov sub sbb cs (bad) mov movsl mov xchg jo mov pusha dec mov sarb or jne push vmovhpd in jmp lods loope cld jns inc out or inc adc push xchg or pop sbb lret add mov dec mov and jp xchg jmp pop or pusha cmp in sub xor push xor dec and push pop jo mov lret js jle push jl loope jle xor (bad) sub sti xchg dec stos roll sarb imul test mov bound dec bound ficoml push lods pop aaa scas out fdivrl outsl add mov xchg cmpsb mov xor int pop xor adc pop fs jl jp out cwtl enter mov push add mov xchg fisub (bad) adc popa sbb (bad) mov leave mov cwtl xlat xchg rcrb xor mov adc mov jle add cld les ret sub add xor mov sub push js cmp jmp or (bad) std cmp in add popa adc les into insb fnsave inc pop xchg cli scas loopne jle mov mov repnz cmpsb or inc movsb out mov sbb mov insb movsb cmp add stos das out and (bad) fcompl rorb fnstsw out aaa bound push (bad) pop mov add cmp or rclb ret cmc or dec daa push fnstcw mov pop leave mov lret add fnstsw data16 mov (bad) jae pop lret pop icebp mov xchg into jo dec jae cwtl dec sbbl mov out dec xlat push pop shrl and mov lock sub mov arpl mov cmp mov test (bad) lahf xor mov (bad) jmp cmpsb jb mov arpl loopne fwait (bad) mov dec outsl push push or test insl mov into and sub leave cmp mov dec pop cmp ja stos aas insb push loope cmp cli jmp scas dec cmp test sub fs sbb and ja add imul mov cltd cmp adc (bad) push rcr lea and jnp aas aad sbb mov (bad) jae add pusha int3 jbe fadd aas lds lods add outsb mov push arpl testb jle,pt (bad) pop cmp gs imul (bad) pop sub mov out push stc cmpsb cmp inc ficoml outsl adc xor in stc xchg rdtsc dec call jno sbb test xor pop dec push in clc daa call imul mov iret movsb arpl (bad) rcr jmp jl mov mov push or lods dec sbb mov out nop inc jne,pt sub jno rorl cli or fadds jge mov add repz push cmp and insb punpckldq les add fs rcrb adc xchg or rclb adc push loopne cmp mov call inc push push cmpsl mov ds imulb cwtl ja push jmp mov mov sti inc or push cmc pop test dec div int or stos sti in hlt add dec rcl pop xchg cltd push and lea stos and fist xor shrb push push adc cwtl imul test mov mov xchg push and and mov in mov cmp mov mov add rcl mov mov (bad) xor mov gs jecxz jns setg popa xchg sbb inc scas hlt sbb mov add outsb sbb jo push inc mov imul push hlt mov jge hlt cli lea das xor loopne jecxz je push jmp sub mov sub or or xchg cltd sbb cmp inc (bad) out pusha mov mov mov sbb xor mov pop mov das ret mov pop xor fs jecxz pop cmp jle pusha pop fsubr and pop imul cmc push (bad) mov mov (bad) outsl mov push sbb in mov mov std mov lods sarl inc loope js pop or adc xchg mov cmpsb inc ret xchg fstps push mov jne jns ds add call repnz sbb rcll clc sbb mov push fcmove mov sbb push jo dec xlat pop xchg das cmpsl loopne push inc push into xchg cmpsb call jl scas sub mov xor mov xlat iret mov dec push cltd es lahf jnp scas lock or (bad) sub push lcall adc je (bad) into sbb and cs outsl popa or xchg imul clc sub xchg xchg adc in mov xchg out cmc test mov aaa out adcl loopne daa cs ljmp test lcall adc test cltd icebp pop jae push outsl push xchg repnz test pop ja repz sub dec cld scas push mov or out jno or adc test dec cwtl decl fldt sub loope sarl call xchg push cmpsb leave xchg addr16 inc popf mov mov mov xchg adc mov mov pop mov daa mov in stc rorl mov pop xor adc fnsave cmp inc cmpsl (bad) (bad) mov ret push les insl sbb call pop rolb (bad) popf xchg cs pop scas addr16 sbb dec loopne or cmpsb xor icebp test (bad) dec pop mov fdivl xchg jge dec jl fidivr inc outsb cvtps2pd ret inc repz adcl push lods push mov outsl outsb outsl sbb fstpl lock adc popf push push or push pop popf xlat xor jecxz lahf xchg movsl sub jnp jno lcall test and or xchg jge insl loop cmp xor aad pop push popa int3 insb pop mov leave out xchg imul cwtl mov arpl inc shrl jae xchg in das arpl cmpsl int inc xchg push dec pop (bad) fdivp pushw outsb sbb loope fildl hlt daa stos repz push push movsb fcom push inc xchg adc pop clc popa pop (bad) cld nop in sub in imul cmp jecxz jg dec mov insl fs mov jmp mov xchg push xchg xor (bad) repz push lods pop mov int cltd (bad) ss movsb cld div push in in iret (bad) jne loop jne mov or adc mov sbb add cmp jnp js dec adc incl (bad) mov or adc sub add pop scas pop or lods adc shll and jne sbb repz xor cli mov pop je xchg jae lds xorl or add in adc or stc mov jmp mov sub pushf push std icebp add or or in mov dec sahf sub es cli xchg mov xor inc sub cmpsb cpuid sti aas xorl lret fistpll lea sub les adc add mov cmpsl and jp jns xchg push lock cmp and or inc sarl dec lods sahf je leave stc pop mov cmp sub sub leave arpl icebp mov lods cltd (bad) rol out and cmpsb and test in and loop jmp and pop jbe sahf jecxz das inc insb in xchg mov loop mov jo call mov movsb bound (bad) je dec jp cmc rcrl fsubrl sarl cmp push inc mov scas jae insb xlat (bad) mov mov movb inc or insb mov xchg and push pop sbb pop (bad) sub lret movsb flds dec imul (bad) int rorl (bad) dec das sbb ljmp lahf lds push unpckhps jecxz insb sbb cmpb cmp roll daa jecxz mov iret mov ja pop lods cmp loope,pn js mov popf loopne and sbb dec mov xchg inc into arpl xchg inc sbb adc pop aaa xchg adc push dec rcrl mov (bad) fisubr jns push (bad) cmpsb inc jg insl movsl xchg mov ret (bad) leave mov xor aaa add fcoml push scas and addr16 push xor jle push mov stos mov jecxz mov imul daa fstps add mov rcll mov ret and push test add push xchg mov mov pushf cmpb mov pushl lea jne lahf aas rcl test xor bt sets mov not (bad) lock jmp cmp pusha pusha pushf lea ja mov lea pop jmp fcoml out mov adc imul fimul jb js test movsb xor xchg add cmc xor iret jge testb cmp or mov call inc xor (bad) fiaddl scas int3 pop xchg dec dec inc cmp adc mov in test stc adc mov fmuls fldt lea inc les inc les fistp and test xor push cmpsb xor sahf movsb jg and (bad) push mov repz rcr popf jno jmp insb mov sub inc mov and mov lahf insb mov cmp data16 enter xor lods pusha inc loop cld in jns mov xchg ljmp pop loope dec inc (bad) fisttpl xchg mov or (bad) es popa or xor adcl adc mov in into js xchg sub mov arpl cltd xorl xor cmp push add insl mov scas test fisttp ret outsb push mov loopne jns jbe mov mov mov xor cli outsb lcall ss cwtl mov cmp dec je jo (bad) xor shrb xchg cld jl cld jge push divb fistl outsl sahf mov pop xchg jnp inc or ljmp rolb nop jae jge pop mov push loop push fistp nop mov icebp loope stos fs aad and arpl adcb push mov cmpsl movsl out ljmp cmp xor jle mov adc pop lods loope and jne xchg in adc inc dec push rcr jl ficomp sahf ret or jnp addb jne movsl ljmp fnsave mov mov adc test insb js fdivl mov shll aam ds jno or cmc inc inc ret or mov (bad) fdivr push loope pop rclb xchg mov pop ljmp repz jae xor ds mov add jecxz xchg (bad) repnz sar add fldenv sarl cmp fstpl add mov xchg cmp enter cmp or sbb dec inc cli push cmp add inc nop lds addr16 add cltd gs xchg jno adc xor (bad) movb stc dec jg inc es jo daa cwtl cmc sub mov push lret inc adc pop outsb movsb sbb cmc inc clc in sub lret adc mov xchg cmc lahf inc add jae jno jns cmp pop sti sbb jb bt cmc sub call btc pop cmp pop inc rcr dec pop shr shr pushf mov bts rcr shld rcr add call movb pushf sbb call lea rep setae not lea mov push lods call pusha cmpb jmp jo icebp lods adc scas out or mul test (bad) imul pop out fstpt icebp lods adc outsb cmp les inc ret (bad) jae xor mov xor xlat (bad) in addr16 xor and jg pop into add push add dec mov mov ret sub jno and jne stos mov sbb loopne out ret (bad) sbb rol pushf or jo in mov pop push add inc jecxz hlt or ret pushf adc pop (bad) repz mov rol icebp add jb pop xchg add ret not mov setnp pusha setg mov lahf pushf lea jmp cmpl call pushf call push lea je clc cmp jmp add mov call add pop ret call rcll aam lds inc pop movsl (bad) mov icebp cmp cmp mov mov fild jecxz in mov repnz iret (bad) mov mov fisttpl dec mov stos and je loope xchg das xchg inc movsb jns je xor jmp iret bnd je lea (bad) dec popf mov jg and mov jmp mov sub xchg decl (bad) cmp movsb imul in shrl in pop mov aad mov jbe lret aas jne ja lea adc es or add pushf lea jae test call call test stos aas movb pusha or jnp out aaa addr16 rep adc frstor in add pop aad lods sub enter rolb mov cmp das popa (bad) jl popf (bad) add sahf push lahf (bad) out out add jno (bad) inc in outsl lret push or in push lock xorb push sub inc repnz popa mov mov mov cmp aad mov pop repz ret aad xor or loop pop stos nop in jmp aam xchg imul ljmp push test adc inc loop jle mov inc and pop movw lea call pusha mov push lea jmp lea jle inc push ror jmp xchg adc movl outsb test add out push pop lcall push lret mov add js fdivs xor pop mov push sahf push dec fwait ja push cmpsl push xchg mov stc push jbe mov aaa pop mov cmp inc es cld cmc adc mov adc (bad) flds dec sbb scas cltd xchg jl shll lods rclb in lds push loope cmp cmp jecxz les loope cmp (bad) outsb mov stos sub add es cmpsb fidivr push lret inc scas xor xor fs xor and ja add aam jnp mov pusha sahf jg mov push add push out cmp sti xchg dec stc insl int3 push js (bad) jns in push sahf xchg test pusha into push adc test dec pop std and xchg push lds jg popa rolb dec and shlb call scas es mov bound mov mov insl push xor out je ret and rolb icebp or enter enter xor push ret push cwtl push adc sahf xchg pop adc lahf in dec jno sbb jp inc divb mov cmc and adc and cmp arpl hlt inc js xchg int3 inc lea test popa sub xchg ss mov fcoms lret imul dec or hlt cmpsb mov and inc lret and sarl lds jnp dec mov jge adcb pop jb (bad) jp iret insb imul mov movl inc das rorl les push mov lods sub add and push loope mov mov jecxz pop xor sarl icebp sbb sub (bad) mov bswap mov jmp lea jb rol bts cmp shr mov pusha (bad) testb and sbb mov and xor and add call add push lea jp bswap lea jmp and or pushf push lea jne sbb mov btr pusha lea adc mov rol pushl rcl pusha xor add mov bswap setns mov bsr clc bswap mov call lea call call lea call jmp sbb movb lea pushl pushf lea jmp jmp test pushf movb lea je bts shld rcr jmp bswap lea bswap movsbw mov mov push lea ja jmp lea je push pusha pushf add jmp xadd lea btr mov push shr rcr stc not call dec mov mov add shll fwait push outsl cmp shr sub xchg daa ja pop sub aad sbb xor push rcl pop (bad) imul int3 sub loop xchg imul icebp dec mov mov sahf mov mov push mov dec jbe xchg cmp sub push cmp icebp sbb adc fucompp lret push add lret mov xchg outsl fbld rcl scas loope jo fucomp movl icebp and cmpsl das repz sub imul dec lds dec (bad) mov jnp imul cld call fdiv out movl das fistp inc cmpsl jecxz add (bad) cmp mov jns inc (bad) mov mov jbe arpl (bad) pushl jl dec aas rol jge mov stc add or nop mov fisubl aas shlb cmp dec cwtl aas inc jae iret add ljmp aas (bad) mov inc jnp addb loope add jnp lret js std scas gs icebp mov icebp ljmp mov sub int3 add icebp sub adc iret xchg push xchg mov in xchg dec cmp enter fiaddl (bad) ja pop aad (bad) or inc mov push or inc (bad) lahf mov push leave fs sysret push dec (bad) insl repnz lret xorl pop movsb and dec decb cmp add mov push div pop aad es mov mov rclb cmpsl xchg cmp add aaa push lea jne sbb mov bswap and and xadd mov movsbw sub clc shld xchg mov xor mov test inc mov and dec rcl sbb mov dec mov and xor rcl mov sbb shl sub cmc shl mov test mov pusha not sub aad aaa cmp and test mov push clc test shl call pusha lea jb bts bswap rcl aaa mov pusha cmp cmc cmp sub movb pusha mov pushf call mov add push mov pusha cmp sahf push les int3 and mov sub jnp subl bound shrl push mov out cli adc test xor mov loope pop fstpt pop in jno jbe pop push imul in aad xchg xchg pop out aas (bad) aam mov jle xorl adc ss mov sub dec add int and jnp negl nop lahf sahf fisub aad out mov xchg sub or xor out into add dec inc mov lret fwait test or leave iret pop out mov lahf decl in mov fdivl xor xor std cmp adc mov mov and nop lods pop dec outsl orl out not call adc inc lds xchg out in jp xchg pushf sahf pushf lret pop adc rcrb leave mov or fcompl (bad) or cmp jle repz cmp mov sarb and inc fistl cmp scas push add adc xchg enter cmpb std gs cld mov (bad) ss repz xorl pop adc pushf mov pop stc sbb aas fsubrs in mov add jb jmp popf cmp sub jmp pop roll pusha cwtl movsb inc jge add add aas xchg sarl push cmpsb cmp adc xchg das add add pusha jmp call bt cmp jmp jmp mov add mov push insb jo popf in and pop insb mul js push jle xchg loop xor aad lcall xchg xchg test repnz aam add add jae inc shr fwait inc imul adc inc aaa mov loop xor fsub push inc cs inc js aaa scas adc pop xchg mov xchg mov or or aaa int3 in in jmp cmp (bad) adc cmp add cli and lret mull sbb xchg cmp inc das xor (bad) cs std sbb arpl dec (bad) push mov aaa inc add fisttp xlat push sbb in inc movsl in xchg lds sbb lods xchg cltd jne push movsb rorl sbb add adc out mov add jnp xchg jno xor xchg insb xor jae (bad) (bad) push sahf lahf xor aas ret out ret xchg ljmp mov mov xchg ds ficoml mov stos lahf or add insl lods push stos jnp dec (bad) jp xchg sbb pusha cs adc js push movsb jge inc xchg push add jge cwtl cmpsl mov out jnp mov lods adc insl xchg outsb cmp fadds mov (bad) aaa in mov (bad) mov lods (bad) cmp sub xor iret inc fnsave mov pop fbld xlat test icebp xor cld adc aam sbb jns int3 xchg dec mov (bad) lock jg mov and xor push je int inc mov pop test nop in pop inc mov or jg dec mov inc stc push pop subl fs aam jl add fwait mov int xchg lock jne repz mov inc xchg mov addb pop outsl (bad) ud2 fcmovnbe sub out adc in pop pop jl lods push dec scas test repz hlt lret fmul and mov push bound sbb pop popf adc gs lea pop das lcall dec and repz jbe in pop push pop jmp out ret xor sub pop jne cmp xlat add jb divl mov cli (bad) jnp inc lcall dec in aad and cmpsl jecxz pop sbb mov pop sbb or es mov loopne fadds adc fmul add xorl scas mov scas xchg cmp or mov inc setle lods pop in lea xchg push push into rcrl daa les test dec ss sbb pop xlat dec push divb gs sub fdivrs inc cmpsb mov pop xor rcrb cmp aaa or cmpsb fisub stos rolb and push jno or cmpl mov jae push test fs imul xor sub xchg (bad) and adc pop sarb pushf loopne test aas insb and les mov sldt bt jmp stos pushf pushf movb lea jmp arpl sbb lret add lods andl ja daa mov in or (bad) aaa pop sbb adc into sub push dec add adc jmp mov cwtl pop je loopne jp mov movl dec xor xchg icebp push pop clc into pusha mov cmp sub adc in inc push fildll andl rorb mov stos fwait in test stc inc inc out mov cmp adc sbb pop cwtl xchg fdivrl movsb aaa cli ljmp sbb pop xchg fistp loopne lods shr sbb add push push xchg aam inc enter ret cmp mov fistl in pop leave jmp jmp out fldcw cmp mov cmpsb popa mov mov dec push pop and into ds push popf and dec out xchg outsb lods lea dec (bad) pop xor ds xor call dec aaa arpl jo sbb outsl mov arpl test push cld scas mov adc push or out pop enter mov mov in add inc gs outsb jo je je je add shlb mov lea jb cmc pusha clc xor pusha jmp pushf pusha lea mov lea call cmp add jmp ljmp mov idiv mov mov push test or scas hlt push add add stos fnsave xor rcll cmpsl sahf dec sbb int jno pop daa lcall mov dec frstor fistl lds mov dec xchg scas cmp sub mov lock notb xor push adc (bad) pop scas addr16 sub rorl test inc adc pop sub shlb inc scas push int3 mov (bad) mov out gs bound fisttpll jle jle mov data16 or mov jecxz xchg arpl sbb push ficom in mov mov aas or or xlat mov add and adc lea call push jmp add add add add or pop xor xchg xor xor cltd xor xor xor xor xor mov pop and jo stos ss push cmp cmpl sahf cmp cmp cmp cmp cmp stos cmp cmp cmp cmp cmp cmp fidivr clc cmp or push sbb and sub das ds ds ds ds ds ds ds jp,pt jg test mov xchg ds mov ds mov ds ds fidivr jecxz call ds ds aas or adc sbb pop aas and cs xor cmp inc aas inc aas dec aas push aas pop aas pusha aas push outsl aas je jle cmpl aas xchg aas xchg aas pushf aas cmpsb aas stos aas mov mov aas into aas sarl fdivrs loop out in aas idivb sti aas add add add pushf add add xor xor xor push xor xor xor xor xor inc xor push xor xor xor xor xor xor xor xor xor xor pop xor jge xchg xor xor xor xor xor xor xor xor xor xor xor cltd xor lods xor int3 xor sbb xchg cmp or cs inc aas pop aas push jo (bad) aas mov xchg aas loope jmp add add add cmp add cmp scas xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor test mov enter and cmp inc xor data16 scas xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor mov push xorb ss ss fidivl fbstp out ss aaa sub jae js mov mov mov aaa iret aaa cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and inc cmp cmp cmp lret cmp cmp cmp mov cmp les fnstcw out cmp add ds ds dec ds ds ds jb ja jle xchg ds mov or adc xchg sahf aas (bad) aas lret aas loop add add add xor xor xor xor pop xor xchg xor xor dec xor xor xor scas xor xor xor xor fnsave in cli ss cmp xor dec cmp push cmp jnp add add xor xor xor xor xor xor xor xor xor xor push mov popf ss ss add or and xor ds dec aaa pop aaa popa aaa jo jl mov lods aaa mov aaa in aaa push cmp mov cmp cmp jb jge mov ret cmp cmp cmp cmp cmp cmp cmp cmp cmp xor gs add add add add add insl xor xor sub mov ds popa aas insb aas (bad) aas fidivr add add add add jl xchg xor xor pushl sbb xor xor xor cmp cmp inc xor xor xor xor cmp cmp pop xor xor xor xor xor xor xor xor xor xor xor xor cmp cwtl xor xor xor xor xor xor xorb ss push ss ss jnp xchg inc cmp pop cmp jo fdivrl loop mov cmp cmp cmp xchg cmp cmp cmp pusha cmp cmp cmp pop cmp xchg pushf cmp mov cmp xor dec add add add dec xor pop xor xor xor xor xor mov popf xor xor xor cmp jae mov cwtl mov ss aaa test cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp imul cmp cmp cmp cmp cmp cmp cmp cmp in hlt aas add add add sub dec xor xor xor xchg xor xor xor adc dec aaa mov xlat aaa cli aaa cmpsl cmp cmp cmp cmp cmpsl cmp sub ds ds ds or es cmpb aas sarb add add add adc and mov xor xor xor xor fidiv or xor cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp outsl cmp sbb add mov xor mov fdivl loopne in add add pop add add xor xor xor xor adc adc push xor xor xor xor or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp sarb add add int3 add add cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp or loopne add mov mov xor in xor or sbb sbb and cmp dec ss ss mov ss mov ss or sub dec aaa push aaa test les enter or adc xor cmp pop cmp cmp cmp cmp cmp inc cmp cmpb cmp cmp cmp cmp cmp dec cmp add add sbb add add sbb inc xor xor or or adc adc sbb sbb and and xor xor inc xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov (bad) aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp cmp cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call ds add add add add or push add adc add imul add add add add add inc xor xor adc push cmp cmp cmp cmp mov lret ds loop,pt add add add add outsl xor xor (bad) xor xor fs cmp cmp imul push cmp cmp cmp cmp cmp xchg lret add addb inc add add movsl xor xor xor xor lret xor push xor sub loope mov sbb icebp cmp cmp mov cmp cmp cmp add add add add scas xor xor xor xor xor xor xor pop ss ss adc cmp sbb cmp cmp cmp mov aas ret aas add add adc xor xor xor xchg xor xor xor xor xor (bad) cmp cmp mov cmp cmp inc aas add add add push xor pop xor xor xor mov xor xor ss mov aaa sub dec cmp cmp cmp push cmp cmp cmp cmp xor add add add inc add add xorl xor xor xor sbb xor xor xor mov add jbe ret cmp cmp cmp cmp pop ds dec aas stos aas out add add push add add xor xor ljmp xor xor xor (bad) aaa fnstenv daa cmp mov in cmp cmp cmp cmp add adc out or cmp cmp cmp outsb ds xor popf aas add add xor add and dec xor xor xor xor mov xor pop aaa fwait aaa jl mov cmp add and add add dec sarb aas xor addr16 sarb add add dec add add xor xor xor bound repnz xor xor xor xor push ss ss aaa or and jg (bad) cmp cmp lcall cmp dec ds inc add dec add add xor xor xor pop xor xor cmp jns xlat or lahf aaa ljmp cmp cmp cmp fwait cmp cmp cmp cmp cmp push out add add add add xor xor xor xor xor in add outsb aaa int3 aaa and outsb cmp cmp cmp cmp cmp cmp cmp nop jg,pt add aad setne movsbw ror push pushf and shld lea cmp sub movzbw not push movsbw push not mov movzbw push movzbw push mov lahf bswap movzbw lahf push movsbl movsbl call jnp push rcr add mov adc bound outsl mov pavgw aam lock push mov in fcom pop pop xchg movsl jne mov sub pop into mov rorb xchg loop fstpt pop popa cmpsb in into lock inc out insb push (bad) push sti xor mov daa shll daa insb int sahf xchg mov dec and fs aam mov push outsb ja sbb dec into push aad jmp enterw (bad) push sub roll cltd sarb dec imul in aam cmpsl cmc xor ror xor hlt das inc popf xsaveopt jge (bad) xor add test mov sub jmp movb sub cld add cmp btc dec pusha mov shl bsr add add jmp bound inc sarb xchg rcll pop shl or shr xchg push sub int add popf xor or jmp dec mov xchg xchg mov mov je jae mov xchg mov mov sar dec adc xor (bad) into adc adc outsl lcall je push add call push adc sub outsl cwtl xlat inc add roll fcoms leave jecxz adc dec pop outsb pop push mov and mov pop movsl jnp sub lods je dec jecxz dec inc dec dec xor cs insb add ret stos loope lcall add bt mov pusha bswap bsf mov clc jmp mov clc movzbl bsf pusha mov not pushf mov push pop clc test mov test inc mov rcl lea bsf stc sub pop setae setle mov xor pushl sar rcr mov rcr btc push bt sub aad bsr and btr das daa lahf mov stc shl pushl pushf pushf test add call add inc gs outsl fs gs imul add test pushf pushf lea call push pushf push pushl lea jb lea add adc cmp inc dec bswap cwtl sbb lea mov push lea lea jae pusha pusha mov push not mov mov pushf mov mov stos pushf mov push lea jmp ror mov lea lea bsr rol mov btr sub xadd test mov shrd bswap ror btc mov xor shrd add push mov push mov pushl ret mov push movl pusha pushf push pushf lea jmp jmp mov xor out inc mov fadds test lock mov loopne mov jl,pn (bad) imul inc sub dec outsb mov sbb std adc add push add (bad) mov sbb jmp outsb out and ss dec adc and jg dec push adc mov out mov inc xlat cmp jbe lcall in sbbl (bad) jmp aas das out xchg in cs mov cmp jmp pop push sbbl fsub cmp imul aaa xor rcrl inc sub dec and xor cli adc je dec lock mov cwtl ds aam loopne fidivl jl (bad) jno jl push jmp push popf adc and inc xchg sarl outsl outsb jno mov push lahf out or in xlat clc ljmp xchg fwait xchg or (bad) out (bad) xchg mov lods add sbb rcrb cmp ss sbb out into cltd (bad) popf pop mov push stc dec add sub iret in cmp xchg adc cmp xor push jmp imul mov bound enter mov leave xchg mov cmp rcl cmpl mov nop pop (bad) add inc xor fcompl pusha mov fldl mov cmp and sbb insl xchg mov pushf add les or in pushf xchg gs jno ret xchg and lret ret add push lahf pop jle scas xchg outsl sub ss sti push jg mov cmp inc mov repz cmp (bad) pop mov or repnz jno inc (bad) pop subl push pop sahf or iret push or add push lods jp dec push es cmpps xchg jns in mov jbe mov shr imul cmp jae mov mov sub shr add call clc pop ret mov push pusha lea jmp lcall and jo mov dec xchg pop int mov xor mulb jno cli iret sub push test (bad) ss jbe aad or ret inc xchg push or push adc (bad) xor clc (bad) mov les mov xchg xchg and push mov or inc push clc push imul add mov fndisi(8087 add jg popf mov sti and mov cmpsl lsl out aas jg pushl (bad) mov outsb test popf xchg movsl jno push dec in es aam enter mov sbb aaa ret and int xchg jmp in mov ss (bad) (bad) loopne jb aad sti xchg stos sbb xor aaa dec arpl inc fstpt cmpsb xchg (bad) (bad) xor mov arpl jbe (bad) adc lock inc sbb scas add int out push faddl xchg push pop add push je movsl roll jge adc movzwl lea test clc cmp mov pushf cmp cmc add test mov cmp bt mov stc movb test jmp mov pusha call movl mov call dec adc inc add add cmp cmpsl or inc add cli and daa and pusha das es add add mov sub add call insb adc inc add cld inc jg sbb add add movsl (bad) ss jmp das inc add out repnz cmp add add jp jne push wrmsr inc add (bad) imul inc add imul pop xchg out pusha dec xor add sub and sub mov lock sub add call pop add inc add mov pop cmp xor add imul pop xor add icebp add sub add call lock inc add add loopne nop xor add jae das inc add (bad) stc fsubrl mull outsl das inc add fsubrl insb movsb sub add clc fstpl scas dec clc xor inc add (bad) pop outsb dec mov inc add add sub add inc add idivb shrb inc add push rcr sub mov sub add in add mov call mov das inc add loop (bad) rcl pushf into pop xor add sub std sub das inc add (bad) mov add sub add call (bad) daa xor add xchg mov bound add call test es add (bad) out sbb lock movsb sub add call mov xor add sub fsubrl inc add mov shlb xor add clc inc addr16 (bad) adc inc add ljmp sub inc add add and xor add lret mov inc stos dec jno push mov sarb stc adc icebp jae test inc mov gs and cmp sbb jno pop popf and addr16 push scas cmp int3 imul sbb mov sbb xchg iret sub and adc xchg or js es mov push adc jg popf jmp cmpsl out jne sbb cmc add lret mov cmp add icebp insl pop jp cld bound es jecxz ds and test xor imul xor je ja in lock sbb ror push mov dec mov mov repnz inc out inc stos (bad) dec xchg (bad) sub inc jno arpl stc fs lret or mov cld push and or inc sgdtl inc movb inc sub jmp pusha movl pushf pusha movw lea jmp pusha movl jmp cmp movb pushf mov pusha lea ja pusha call rcll aam in add movsl repz in xor and jge push cmp (bad) xor out das adc pop mov das out test arpl push sub pop (bad) ja jbe dec sub testl push leave xor and push pop fidiv mov (bad) dec push jge pop dec push lods aaa xchg xorl adc inc mov lret mov mov aaa call mulb rol dec fidivrl or sbb nop clc cs or std inc pop cld sbb int or mov cmp mov xlat inc (bad) jmp dec insb fsubrs mov popa sbb jbe data16 inc (bad) (bad) scas xor push pop fildll popf mov and and add jns arpl or into mov shl pushw mov ret in sbb sbb (bad) push (bad) dec lret jmp push loope mov daa pop ds mov push test and sbb pop loopne lods ds in daa iret cwtl scas in sbb add scas ja pop in cmc jne add sbb daa push data16 sahf jns lret bound repz lret mov pop imul out ja lea push fstpt hlt setge add xchg push jo (bad) lea aaa out aaa ja addr16 push in xchg xor imul fsts cmp adc mov mov and bound hlt or dec add adc fdivrs in pop fild loop push clc scas pop or movsb jp xchg and xor stos or movsl mov cmp jnp xchg xor push je pop dec (bad) pop dec mov jmp aam fwait mov cmp inc mov jp fsubl lods push sahf pop arpl dec aaa paddw mov xchg mov push pusha sti push inc popf and xchg xor sbb xor or rclb mov push stos cmp shld xor pop neg bswap inc ror jmp push int3 int3 stos or mov test push call (bad) mov cmp mov xchg ret and popa sub insb int3 int3 ljmp mov std lods inc mov imul rcl cmp and inc xor mov adc mov (bad) pop test pop sub leave xorb lahf mov mov insl aam push mov xorl inc addr16 mov pusha or fadds in out or jp bound mov push add mov jp push lahf jae adc and fldt lods rcrb add scas jg sbb (bad) xchg jmp stos push push mov in jecxz cmpl mov push in (bad) popf add cmpsl xchg xchg lock pop jl ljmp shlb inc call sub lret push xchg or rcrl ljmp iret or mov into push hlt movsl cmp mov imul mov pusha mov inc xorb pop ljmp imul or jl cmpsb and lds xor pop data16 or enter or das mov clc and cmovno xor push xchg sub fistpll out test mov pop mov adc fildl fs call pusha call mov add and jae jmp lahf jae xor jns stc mov sbb jle sbb jecxz sub insb testl mov inc lock adc jmp pop insb dec bound jns lock jg iret insl mov cld cli sub pop lods sub mov ret (bad) aaa mov push sahf adc loop pop mov inc idiv jmp repnz xor ljmp insb repnz (bad) mov dec (bad) mov jg sbb push data16 (bad) in dec cmpsb es jg mov loop inc mov fsub out mov out fwait cmpl mov sbb pop and or loopne divb inc push pop in insb lahf std inc test dec cltd pop xor lea call push jmp mov add call movb pop outsb mov mov aam pushf lock pop mov jbe lret pop bound dec sar ja mov ja dec push gs xor shrb fwait repz daa jecxz mov pop ret roll ret arpl scas lret sub in repnz jo add lahf iret (bad) jo xchg cwtl inc adc mov fnsave dec mov adc xchg in push repnz adc xchg and aas mov adc and push dec cmp incl mov jmp inc mov call (bad) push push xchg out daa outsl lahf popl loope repz pop mov iret xchg addr16 sbb clc cmp clc pop lea mov jbe cmp mov cs xorl inc jns les call pop push or or jle mov in data16 xor xchg sti inc mov jae sub divb ja sbb in imul cld arpl dec test push imul insb cmp fwait sub push and cmpsl rorl jo inc mov rep movsbw jmp lea call pushf pushf lea jb daa bsr movzbl bt lea adc btr shr call mov jmp add cwtl bswap lea setb movsbw pushl pop lea pushf mov lea call pushf mov adc pusha pushf pushf lea jb cmc xor call shld movsbl xor xor jmp test setbe mov pushl movb jmp call lea je pusha pushf cmp movw call ss jne cmc add jge stos arpl pop and aas out lods in or in jmp dec loopne popa xor jb mov pusha fnstcw mov fsubrl (bad) xor pop or lods cmpl ficom out and pop xor mov lea mov imul das insl pop stos cld insb xchg xlat sub imul xor or sbb aaa jge and aas add and (bad) jl lods daa mov adc mov inc popa fiadd loope out push stc ja mov out outsl lods or mov sar movsl and movsb adc inc pushf or cs add pop mov (bad) mov xchg adc js outsb pop xor jl and jg mov push mov pop out jg ret xor push scas lds sbb cli add sarl jg or repnz pop jb push or mov rcrl insl mov sub mov jmp (bad) out imul adc dec stos dec call mov lret add push mov movsb fdivl dec mov inc mov push fwait add jns adc or push les mov roll adc add ret fmul int3 in dec xor jmp mov lea pushf jmp mov add sub mov pop sbb ja push aad (bad) aas fdivrl shll sahf dec in enter (bad) push lea lock (bad) xor cwtl mov ror bound or (bad) cmp jb pop mov jp pop push inc add (bad) lods dec test cmpsb imul mov xchg (bad) out aas and push push mov adc test (bad) cs addr16 clc push jb in xchg loopne adc testl sub jl loopne or aam scas jmp mov clc icebp sub sub or xchg movsl dec (bad) push jge jmp maskmovq idivl dec cmp mov cmp icebp sbb std dec mov and addr16 jno push lods pop push jo pop jmp push adc jae xor mov xchg movsb les outsb roll mov cmp pop repz cmp lret and mov inc movsb and int3 push mov mov movsb aaa testl mov movsb popf cmp xchg aas lret add inc test mov sarb (bad) jns,pt bound sahf cmc cmp fildll popa dec mov pushf lock jno add adcl jmp jmp popf xor dec jae fwait fwait ret das mov test call sbb out test xchg cmp xchg nop sti negl push sub mov push cli sarb push dec es popl fs data16 mov aam fstpt gs xchg aas cli jae mov add outsb je cli and dec mov mov gs data16 adc das mov fdivl jg int3 lret mov add jg mov jb add es (bad) scas sbb xchg sbb stc inc movsl push lea jb test call btr inc sets movzbl push sbb bsr xadd mov mov btr xor and (bad) notb bswap push btc cmc lea bts push rcr (bad) notb aad push cmp mov mov mov or dec rcl movzbl mov test call pushf bt cmp pushf jmp call call add inc js je jb arpl jae test pushf lea jne pusha pushf movb push mov jmp pushf jmp loopne and imul sub cs fcomps ds enter mov push inc sbb bsf push cmp jb and fdivrl pop loope xor mov loopne sbb sub lds lcall iret leave or fsubrl (bad) jns xchg dec jne test icebp lahf (bad) push mov push mov out and inc mov xchg cmp or xor (bad) lods push push mov enter pop jle insb mov xchg fwait pusha xchg repnz fstpl call jno adc out out dec mov imul popf pop sub push int3 push (bad) repnz jmp inc ret xchg flds adc mov sar jmp idivl push data16 xchg dec cmc lods call popa add inc or test sarl cmp and aam (bad) jb icebp cmp insb xchg sbb jl cmp popa mov rorb rcrl imul sub es repz push mov mov mov sub fsubrl mov fsub sub xor fstl sub xor push flds test mov (bad) pop cwtl outsb into cltd cwtl lahf fsubl lret push repz ret adc repz (bad) pop mov mov loop in loopne js cld jno fcmovnb stos push cmpsl pop push pop daa gs mov ja pop push jno enter fwait add int3 shrb mov enter push insb inc dec stos mov push cmp bound adc xor sbb sahf and cmp scas xchg xchg lods fs aaa int3 fcomp mov push mov test ret movsl cli cmpsb cmc adc cmp movsl xorl shr ss xchg cs js sub add fildll lods adc push and mov shrl (bad) out jbe movsbl push cmc fist dec shll ret int3 loop lea xchg aaa add dec outsl popa fs imul add add or add popa jno das out stc sub mov mov popa mov and add inc jg jo mov outsb inc daa xor mov cmp sti jno scas les cmp insb insb sbb xchg add sub lods decl test inc stc ret pop and cs and aas (bad) test jnp sub js fadds fldenv fildl les mov mov push in test sbb fdivs ljmp mov cmp pop call jns mov pushf movl pushf cwtl lea pushf pusha movl push pushl popl pushl mov pushf mov pushl ret lea jb (bad) repnz bts inc not mov add sar or and mov call bt test clc shl stc bt add jmp stos imul add pop mov leave adc fistl out mov mov and sbb push sbb inc mov mov jp out gs sbb xchg ds push xchg push arpl insb xlat xor mov pop hlt mov dec ss jne hlt pop enter cmc stc arpl or aam add repz xchg lahf cmp movl cmp jp mov jg (bad) sbb xor cmpsb (bad) insl (bad) cmpsb in inc scas sub fiaddl ret rcll je leave pusha mov push pushf push lea jmp mov mov pushf movb pushl ret not pop lea lea jnp call pusha adc jmp inc sub inc cmc push sahf mov nop cmp add mov mov ja jbe test dec dec jne hlt cmc stos das mov xchg insb adc es int3 xor dec call fsubrl cmpsl xchg and sqrtps mov in push pop sarb cmp mov movsl sub push mov outsl sahf jge in (bad) push sarl call frstor cld add add pushf pushl pushf push mov mov movl movb movw lea jmp adc add add movsl mov cmova sbb jae mulps in cld mov cs scas and ret mov pop inc dec jbe ds mov clc nop xchg mov insb enter or jae (bad) and cmp loopne xor rcl push adc xor mov or mov dec mov push leave cmp fistpl cs xchg inc test jl sete cltd lea or fmulp out iret data16 jno out sahf cmp inc cli jb aas and lods pop shr xchg (bad) fnstenv push imul add test fistp movsl mull mov pop popf lods out and xchg iret inc mov movsb dec rcrb adc xchg inc or (bad) jne sub ret dec pusha in add fisubr push mov sti addb inc les adc pop inc mov insl add fwait sub sbb mov nop mov ss fisubl cmpsl and je mov lea fs xchg clc cmp aaa enter das lcall push cs cmp je stos xor add push jo (bad) leave (bad) jmp add mov stos mov mov pushf mov pushl push lea jmp sbbl lahf xchg push cmpsb dec pop cmp xor pushf (bad) add icebp pop imul xchg adc push sti mov sahf mov or xchg cmp jecxz pop cmpsl pop nop cmpsl scas jo cwtl or mov shr arpl xlat sbb inc pop in sub (bad) pop xor xor xchg sti (bad) pop mov push inc push lds adc in adc xor dec dec push add xchg cmp repnz rorl mov cmc jnp int3 flds pop sahf shlb loopne pop out inc push in pop xlat xor dec cli leave jns xor inc push test or in imul or push cmc jae add cmp cltd test bound push sbb push xlat and or or dec mov pop sbbl ja pop mov mov mov xchg int mov fisub dec xchg (bad) nop insl cmp xor dec jbe mov push mov jne outsl add clc inc data16 test (bad) enter dec aam lods add scas int sbb xor rcrl movsl mov movsl popw repnz dec scas scas inc add sbb fisttpl ds std out mov in add in iret jo rorl mov jae add sbb sub hlt loopne shl popf add jb and jmp shr xor push push push outsb ficomp fstl mov mov out jecxz mov or cmp (bad) (bad) out je jnp out stos lret cmpsb jle cs pop xchg mov movsl mov loopne test fsub sub dec outsl mov notl hlt popf and push and out pushf xor cmc or and lods adc push pop push xor mov and lock idivl (bad) inc nop fbld add mov in sbbl push sub mov and jne int lcall sarb jnp mov cmp movsb int3 pop sarl mov repz inc data16 adc sub and xlat fwait pop inc sbb mov dec mov scas jbe xchg add cmp dec push push cmp dec sbb cli in stos (bad) in push mov dec and hlt xchg pusha test addr16 daa adc and in mov jge cli jbe and cmpsb insb icebp mov xchg xchg xor and jbe push or adcl jns pop mov cmp pop xor loope sbb dec test or loope jb int3 and xor out cmpsb movsb mov inc push or (bad) adc sahf jo fmull dec (bad) fcmovne jle jge lcall mov outsb ds xchg (bad) outsl imul mov sbbl sub scas adc pop jno ret daa inc stos lcall daa pop push sbb (bad) add lret jne push (bad) std or mov xor ds add mov dec leave dec (bad) out test jbe push xchg pop (bad) int jecxz das xorb fiaddl loop ret and dec add iret push sbb pusha sbb or aad stos mov mov jl sbb or adc clc inc dec mov out fsts stos insb add mov adc jmp lds iret dec cmp push or int flds sub outsb out dec and sub push and jg jg mov das movsb pop mov cmp inc (bad) stos je lahf mov mov cmp xor sbb adc mov les cmpl pop inc aad sahf dec das loope push fdivrs cmp std sub adc add adc loope dec movsl pusha inc inc jl aaa popa icebp (bad) push sub push inc std lds sti mov adc add fadds jae jbe dec (bad) jbe popl bnd fwait (bad) ja or cld xchg or or dec add pop fadd idivl inc stc testb gs (bad) in and mov leave in xor lock push lods push daa aaa loopew inc test adc es icebp outsl fimull xchg jp ret mov xor inc std stos fisttp cli jecxz xlat mov mov xchg mov xor orl pop sbb mov xchg addr16 pop cmpsb push lods cmpsb fs push imul adc jge jbe dec pop dec aad shlb cmpsl pop mov cmp pop fs or ret fdivs outsb ss push adc sbbl ret ror push (bad) mov mov (bad) adc daa sub dec inc cmp movsl leave imul xchg sbb dec jo adc addr16 mov rorl je (bad) fidiv test xor push push (bad) sahf xchg xor cmp xchg pop aam test int3 mov push add cmc repnz jo dec add test sub (bad) fisubl and jle sub imul out cmpsb psubusw inc mov sarl pop or int3 mov pushf sbb cmp mov sub in jbe lret pop push nop aaa insb or mov jge imul hlt shl rcrl push pop push insb leave rorb adc pop lahf ja jne mov mov in cmpsl cmp pshufw pop push (bad) gs lods xor inc cmp negl xor pop and cmpsl mov xor es into dec cmpsl outsb ss xor pop dec mov cltd and jle ss mov sbb arpl jne clc jmp inc pop mov inc mov jbe ljmp cwtl sub adcl outsb adc pop sub xor mov int andl mov push mov adc call mov sub mov movl pop (bad) sub cmp outsl pushf sub je mov mov mov push sbb outsb inc push inc mov ss dec mov jp inc cltd movsl inc xor jnp mov cld aad inc or jns fidivr xor scas cmpsb ja mov scas dec sbb cmp push fwait movsb pop hlt cli call imul das stos inc sbb out mov xchg inc xor push pusha (bad) ljmp jo push mov stos jnp inc jge ds aam push jno (bad) pop jb xchg mov movsl xchg inc stos fs and and cltd push mov mov inc les and pop add mov mov sub out push dec push aaa negb out sbb xor call mov xchg add cmp cmp iret xchg fwait xchg mov dec mov push and test rcr cmpsl push xchg scas idivl sbb insb out outsl or cmp icebp pop out lahf sti out sub sahf (bad) (bad) (bad) push jns,pn jge aas es jmp jo scas pop jns dec adc sti or sub clc push sub movsb jns sarl pop sub pusha fs sbb ret fsin or (bad) outsl push loop clc mov sbb xorl or mov ss cs lahf test int (bad) sbb sbb stc xlat sti insb lahf bound sbb lds popf je dec notb or jmp mov xor into mov or sarb mov add sub iret (bad) mov es in fidivl inc (bad) fisttpll rcrb lods into add ficom test int3 in aad or xchg mov mov stos xor in dec movsb ret fidiv je test mov dec out dec ret push xchg call pop and push out aad gs and dec push xchg fdivrl int3 mov test daa and sbb mov pop sti aad lock sbb dec jne mov mov adc jmp lcall jp cld push mov out and cmp das or xor xchg jo (bad) cmp arpl mov mull or lds sar insl xchg mov pop mov imul roll mov lret mov mov aam (bad) mov jb sbb xchg sbb (bad) mov mov lods or jo cmp pop mov movsb pusha sub int cld jbe aad out cmp xchg mov adc xchg add push or sbb adc jp pop div cwtl inc mov lcall add in fs cmpsb sbb xchg mov ret cld fsubr mov repz cmp mov hlt loopne mov cld sbb mov das sbb dec stos jmp cld daa sbb cs mov pop nop inc ds lds or js repz xor jge cli outsb cmp jns sub push and inc stos jo out and les jne sub test mov or mov mov mov insb pushf inc inc xor in stos int jae (bad) xor negl je pop aaa inc jge scas pop fwait lds push mov mov mov test fsubrs rclb jbe mov roll push jnp xchg stc cld loopne rol mov inc xor fidiv pop pop sub mov arpl imul lcall (bad) fs loop (bad) repz into add and add push jnp stos mov push inc and divb push fidivr test fisubrl (bad) xrelease mov jp sti jl mov pop hlt jno push and push insb jae mov pop shlb jne pop inc xchg jg out sbb (bad) addr16 jge add mov lods ljmp lcall mov xlat in inc mov sbb out adcl rol outsb sbb cli xchg jb inc mov out mov adc cwtl pop xchg ffreep test std xchg adc mov jecxz dec addl adc dec shr jmp adc es outsb addr16 icebp sub pop sbb jl mov sbb stos dec lcall xlat fcomps and mov sub hlt (bad) fbstp sub inc cmpsb test lods mov aam add lods sub adc ss movl scas cmc inc mov adc pop stc mov repnz push xor sbb into repz inc sarl addr16 jg mov fldenv add add inc sub hlt popf and xor or adc sbb push cmp gs arpl sti clc xor (bad) aad or adc mov js (bad) mov dec stos jbe or aam lcall out lea (bad) mov sbb clc nop jne jp (bad) ret xchg insl ds inc inc shr sub add fs mov and jae mov inc push fstpl js js or cmpsl sbb xchg dec enter or incb sub sbb push in jae xchg (bad) mov imul mov push loop inc push test idivl cmpsl nop cmp test daa pop xor push scas shrl xor stc out mov pop jae loop loopne lahf xchg scas gs test ljmp add aaa mov into and dec add xor push inc (bad) fsub rolb mov int mov mov jnp jb aad cmc sub imulb pop (bad) or iret (bad) xchg popw inc repnz xor cmc sarl test adc sub xchg mov pop sub daa mov ret divl fwait push jl sarb cmp push xchg lret and push sub mov xchg enter cltd iret jmp lahf jo loopne jno negl sbb mov ror std xchg add lret jo test mov push xchg jb mov das aad mov fidiv push (bad) mov push ficompl cwtl jb sub or in xchg mov sbb cs les popa out mov pop outsb pop pop ds pop push int mov add int3 mov mov dec js sbb pop scas addr16 pop aad call sub lahf adc je cmpsl lea sbb sub xor mov sub (bad) cli pop (bad) cmp jecxz sbb jle pusha rcrb call rorl sti adc bound imul pop (bad) rcr push out andl js das test jge stos push adc fidivr sub mov xlat and adc fwait pushf push mov int in jb adc xor das loopne test cwtl stc push adc jns aad scas lea (bad) aas mov xchg jo aaa out sub pop test sahf jno jl or mov push xor stos pop fsubrl js (bad) ja sahf dec (bad) mov es int dec inc cs inc adc cmp js pop loop jge xchg push lcall fwait mov jns out jno popa bound xchg jg inc fcoml scas out lods test mov popa xor jmp (bad) push stos in add ljmp sbb shll mov sbb btr pop fsubs cmc fcomps sub mov inc xchg (bad) push fstpt or out sti popa jl decb sub inc repz jns pop stos ljmp cmpsl test cmp ret insb stos outsb xlat dec out shlb popa mov xchg inc cltd add pop negb push mov les (bad) xchg in jne xchg rolb inc and aas add and loop xchg mov xor xchg push xchg cmp das cld jle outsl xchg inc adc mov (bad) mov dec jnp dec mov mov push cmc popa (bad) stos jecxz leave push jl inc push cli dec xor inc dec std out add push stos pop cmp jbe enter nop cwtl lret or in mov push xchg (bad) pop jl adc inc mov mov adc ret rclb sub lea push mov outsb aas sti mov jno loop mov (bad) push fldl (bad) lock in add push push gs ja xor loop popf insb mov hlt dec cmp xlat mov xchg popf sbb lcall adc cmp jge daa fmull out or push fmuls add sbb fdivrp sub imul or mov push int mov inc call je (bad) gs shlb and cmp insl inc mov dec pop rorb and bound push adc (bad) mov outsb cmc and inc and shr push imul out fstpt xor ja xchg jo inc mov xchg in inc nop insl iret in xchg sti or (bad) cwtl sbb loope (bad) shrb xor repz xchg rorl icebp insb mov xchg (bad) sub ds adc pop add sbb sub mov cld dec leave mov sti dec pop bound cmp inc out pop xchg and pop (bad) icebp sub cmp mov insb jo xchg dec cmp dec insb pop pop data16 mov mov xchg inc xor gs push mov pop adc gs pop pop shll sbb insl push mov fisttp ljmp mov mov lods adc orl adc jae cmpsl imul xor loop lds dec stos (bad) frstor andl jg in pop fsubl ret add xchg fisttp and cwtl (bad) jbe test outsl lahf roll xor mov aad pushf pop lds cmpsb fldl out repnz cmp mov fs jmp xchg sub push das push sti cli icebp mov inc add inc aad out std out fiaddl stos inc xchg pop es pop adc fwait jbe push push iret fwait cltd cmp lods imul and dec adc mov push jg (bad) mov cwtl or xor mov jb leave lods lea adc fsubp cwtl adc fidivrl lea or sbb enter insb sarb adc cmp out rorl adc xor fdivrl addr16 push stc rcrl imul in mov aas test xor lock jno xlat xchg (bad) (bad) stc sahf fstpt popf mov cmp mov test lods sbb dec or mov (bad) ret mov jno jo std out sbb add pop dec call dec push add loop xchg insb ret pop xor dec subl test pop push repz xchg xor aas sahf sahf xor jle push fwait testl jg fnsave push add je out add mov lods add in sbb pop test jno sbb jmp inc movsb xchg xchg popa ficoml movups mov push sub je sub ret mov in add mov jbe mov xor add or pop xchg cmpsb cmp loopne loope int3 fildll jge ret push jecxz in iret pop jno cmp cmp iret pop fdivrs out ds jge inc js inc dec clc sbb movsb and inc (bad) push sbb push mov push mov aam addr16 mov orb sub aam mov dec dec and jmp dec xchg cmp mov mov test (bad) mov pop cmpsb movl lods mov leave mov jmp dec xchg pop aas mov cmc cmp loope inc jbe mov (bad) lock lcall das lret ljmp int3 xlat icebp jbe je dec and insb mov pop xlat out enter lods adc imul aas ret daa mov mov cmpsl fisub fisttp cmp shll cld sub sti into lods sbb mov bound (bad) (bad) fwait dec lret inc adc cmp out sbb and jnp nop xchg ja inc push pop push sbb or and clc push sahf loope mov pop push gs or stos gs fwait mov pop cmp push nop mov in cld push fdivrs out xor pop roll repnz dec pop xabort inc adc or push sbb aam lock imul and imul (bad) push es mov add mov sbb inc ret inc jb stos pop pop sbb jo mov push xor inc fwait test sar test rcll in push cmp dec fildl andl xchg test pop xor xor mov mov xor loop sub pop (bad) dec cmp xchg daa and or jmp enter or cmp jnp movsl mov dec rcll rorl inc in jecxz sarl test mov or in jecxz mov int adc loop mull movsb stos and (bad) call fldenv daa mov lcall mov jne leave sbb xchg and push ja xor fildl sub in jp push lret fst std shll dec mov imul ljmp sbb mov adc sub inc mov popa jae inc push pop inc fdivl iret pop into cmp push or movsl jbe movsl (bad) xor fidivrl mov out scas add and mov mov mov iret adc es (bad) int3 in (bad) in xor fs add dec fld1 fs mov outsl jno add bound int3 xchg mov imull inc mov jle mov cltd ror xchg fildll xor leave out mov or sbb push popa fcmovnbe and cmp fdivl xchg jbe in push pusha jl (bad) or push adc jmp mov jns xor pop dec clc aas push fsubrl xlat ret fnsave mov jle adc cmpsb inc pop lock dec out sbb rcrl aas out imul cmp mov dec push pop mov sbb adc stc or jl mov jb les fstpt movsl int jle nop jp aas int3 push pusha mov cmp pusha pop subb dec add ja (bad) xor fistpll loop dec call pop jge repnz ss test stos and xor mov lret adc sbb push in es jbe and xor adc lock clc adc mov cmp jae (bad) pop je add fistpl scas push lret cmpsl outsl cmp popf mov insb jl add adc aaa cwtl (bad) enter or outsb (bad) sub mov adc daa (bad) out push ss adc int sbb hlt cmc or (bad) or in mov pop pop adc aas in bound or (bad) ret sub mov inc loopne mov aaa bound mov ljmp or mov fwait add jl fistl sarb xlat dec pop mov mov inc push mov loop repnz fsubl push stos dec mov and mov add fwait lods mov pushf cmpl imul push mov pop fstpl aaa icebp and sbb mov pop (bad) jb push lods sbb (bad) jg clc cwtl xlat cwtl jo mov push push mov add jg sbb enter pusha inc mov ror pushf adc (bad) outsl or sahf sbb int cmp jae es fisttpl sbb movsb adc push pushf stos mov sub mov add addb imul imul push pop jns sub cmp jmp sahf cmp pop roll inc decb ss mov scas jo sbb stos fldcw je loopnew rclw xor adc mov jp xor dec mov or jbe lock movsb mov sti jg cmp mov sbb cltd lds dec ffree je cmc jbe sub popa lods cmpb loope mov test fwait jnp lcall dec adc mov int3 sbbl je loopne dec jb pusha dec or push enter (bad) arpl cli ret mov outsl dec (bad) movsl mov mov dec pusha xchg or fwait cli xor cs (bad) cmpsb mov or stos out push repnz js jb ja,pt loope pop lods loope hlt sub repz bound lret add jnp fbstp sub ret movsl push cltd sbb cmp inc in push popa xchg dec testl in xchg sub hlt ljmp lods ds mov lods ret movsl mov xchg lods sub xchg dec lret add mov or sbb pop and lods sbb ficomp jns fadds or fisttpl lods lock arpl out pop adc (bad) jb idivl mov push dec test sbb push jmp add dec push jne sbb (bad) ret or jecxz mov sub push mov xor adc cmpsb insl or sbb int push rcr int3 sub lret and mov iret cmp repnz sub or shl push (bad) and shl pop stc sarb (bad) xchg daa movsb cld or or cmpsl mov repz mov mov cmpsb in scas scas out aad mov in add in movsb aaa xlat xchg pushf and repnz ficoml mov enter lret cmp jl mov repz push xor dec rolb out sahf mov add in inc dec xor pop fs fstpt jnp negb jg test mov dec dec xchg xchg jecxz fsubrl sar push and mov mov jbe dec stos out aad cld push mov add mov sub adc cli fcomps mov mov fisubl fsubrs push xor push inc cmpl cwtl not sti sti fidiv test cltd adc push insb dec mov call (bad) xlat sub push pop out (bad) loop mov (bad) dec mov adc xchg jnp mov fbstp jp out out mov lcall and mov repnz add or inc sarl pop xchg push cmpsl jp add andl pop add and fiadd mulb sub addr16 fdivs in inc lods pop xor out in xchg xchg lret cmpsb mov and sbb loopne stos repz shll pop stos cmp fwait inc xor repz stos (bad) in or pushf (bad) mov cmpsl lret in popa test pop xchg mov divl mov jmp mov xchg rorb xchg mov (bad) pusha cmp cmpsb push insl clc es inc mov mov out and loope jbe xchg and add scas rolb or sub test pop mov (bad) repnz push (bad) or addr16 adc pop dec sub or push sub aas push inc or mov push jne ret push jecxz jecxz xchg sub fstpt or mov inc mov sahf repz insl xchg hlt fs data16 inc aaa jg test bound xchg xlat in fsub push inc insl xchg push dec cmp mov push pop lea subl fisttpl mov xor pmaddwd pusha lahf add add movsl jo dec shr mov jbe pop addr16 inc push and inc outsb jmp imul pop sub imul mov sbb xor scas (bad) fs (bad) dec mov (bad) xor sbb (bad) loopne shrl jbe mov lods inc kmovb test mov das popf loopne fimull jp icebp aad ficompl cmpsl ficoml sub pop push fwait push xchg cmp sbb int rcll push std jo call push dec enter mov into test std xchg add push and add in sbb jmp enter mov lea andl mov fiadd xchg out test loopne jbe cmp cltd lock cs je imul mov sbb push sti sbb push xchg cmpsb pusha call je pop jmp and sarl cmp sub lahf add fistl pop cmp and xlat jg,pn sub in add push lahf mov rcrb mov enter mov push or xchg popf dec xchg clc lahf pop fistl jno loopne push mov out data16 add mov incb add jno icebp xchg dec clc cmp mov ja xor addb test mov pushf push (bad) push stos and setns rcrb ds loopne popl inc mov sub pushf push sub in call push add bound fldz mov mov mov pop mov popf lock les xor jle pop imulb test ficomp ffreep mov imul call mov pop mov rcrb adc les or sbb lahf fldenv sub push in andb push sbb and mov pop jb fcompl loop cld push or pop fcompl stos cmpsb imul out orl repz add jns pop movsl icebp sbb xchg arpl sbb daa pusha dec xchg xchg or pop mov cld xor pop mov xor mov fadds and adc pop sbb jae in xchg pop insl sbb popf cmp add addb push inc outsb clc add shrb vcvttpd2uqq sbb movsl clc jb and lock lock sub repnz add and jnp movsl jp dec or std mov pop cwtl mov out cmp out (bad) pop mull lcall testb jecxz (bad) xchg cmp stos jp or sbb push mov adc pop xor or scas and loope pop mov xlat popf and in outsb push mov inc mov jl popf add shll test xchg scas jge mov and out add insl adc sbb and lods ficompl ret sub inc mov cld push out das cmp sub out xchg (bad) or sub fcmovnbe rcr test ss add mov mov fdivl lret dec jnp add mov addl cmp pop push hlt pop in fwait or addb dec sub rorl xchg addr16 or xlat push jae arpl cmpsb and sub (bad) aas and xchg insb or inc orl cltd mov add (bad) jp mov push mov es cltd push xor cmpsb jns in je popa (bad) mov test addr16 (bad) mov pop adc add mov out out push push packuswb add sbbl xor leave cwtl aad and inc popa sub fcmovbe push jge adc xor mov aam adc xor or xor es insl lds jmp push jbe sub nop cld add test movsb cmc dec mov subl xor popa cmp imul in sub cltd xchg and pop mov arpl popa dec bound ret mov jns (bad) jno dec es (bad) mov mov dec push neg mov inc test mov sub or std js add iret ror cs push xor inc test jne insb lcall add mov mov or sub jae bound sahf jnp pusha sub sahf mov sbb push mov in mov xor cmp inc xor mov push out cmpsl jnp not push stos pop push lret cltd sbb mov imul jnp xchg dec push inc or dec pop fisubrl div in xchg lcall lahf dec cmp mov shrl xor sbb push stos fistpll lcall int xorl lahf dec das out mov popf inc stos push xor je cld lahf popa stos out adcb sbb cmpsb in mov sbb (bad) fsts sahf or or and xchg mov inc outsb lahf xor mov out xchg cwtl mov pop push sbb xor jno icebp mov lret sub rcll add ja stos jecxz adc (bad) inc mov jmp cs ret sbbl and dec bound push aam dec sti fadds nop mov cwtl cmpsb mov mov adc enter mov sub cltd cmp shlb or pop ljmp sbb xchg fs sub enter movsl sti and test popa gs jns fcompl jbe pop sbb push push xlat repz add out ds or mov jecxz mov or sahf add push jle addr16 jns push sbbl or insb xchg jge sbb sbb rcll (bad) inc push ret sub pop add out int3 stos xor addl inc inc xlat sbb out jb scas adc jge mov movsb shrb dec sarb inc push ret mov mov dec dec pop jb cmp cmp orl sbb sub and or jp cmp inc jle pop cmpsl mov inc repnz xor repnz lock mov adcl (bad) dec (bad) lahf dec xchg xor mov fldenv daa in ljmp add lcall sbb fcompl jmp dec subl rorl or inc (bad) ds push loopne js shlb mov push mov ja dec movsb cmp cmpsb xorl test outsl dec xor jp mov fbld xchg cmp pop leave mov push dec or sbb je fcoml inc fucomip pop adc and mov loope push and mov and cmp stc loope test test imul add push lods imul or mov mov pop aaa fs xchg pop test mov test divb inc loop mov loopne test stos jns pop add int3 into rorb test jl sbb lock inc jg sbb or push call cmp rol xor imul sbb iret lret cmp negb daa lods mov insb rep outsb push inc inc outsl add mov pop leave flds mov cs je mov add and add dec and aaa test and sbb jbe or mov cmpsl clc sub add movsl or sbb fldt (bad) push lock in sbb scas pop (bad) mull cmp lock cmp mov ds or ficomp jae mov pop rcll adc xchg in test push push std decb mov push cmp inc xor push xor cli cmp test or es mov xorl dec adc and and lahf int3 gs mov dec and jg sbb and int add stos imul push push pop and pop push dec mov in and pop imul mov shrb cs push adc and clc ret mov jle into lret lods lods imul pop cli push fs sbb sbb notb or sti data16 sub sub out leave int mov lock dec in shl into fucom jno and aam mov mov fidivr lret sbb inc fbstp fsubs fisttpll sahf sbb mov pop push push dec in das inc mov (bad) xor mov adc xchg sahf jo outsb sbb lock inc lods and inc cwtl cli lea mov sar sub push push add xlat rclb or insb sub add out ret mov cmp sbb ljmp xchg inc es js jg cwtl xor jno nop inc inc xor ja,pn cltd mov mov xchg push mov shrl push popf imull add or shll mov jb inc mov xor sub rcrl and dec cs (bad) hlt xor lods repz fdivl dec fcmovnb mov insb outsl (bad) jg mov xor mov (bad) xlat outsb icebp cmp scas pop xor fisubr out xchg jge out (bad) int in (bad) dec mov push xchg fsubrl adc lahf mov in imul stos dec fcomps paddusb aam push iret push adc (bad) xor (bad) dec stos (bad) repz sbb fucomp xchg adc stc jmp fsubrs lcall jnp ret or fcoml mov push repnz and fwait dec int3 dec arpl dec xlat mov fstp pop sbb or faddl xor pop adc inc inc dec add loope ja daa enter jg mov and js dec movsl or (bad) adc popf imul push lock mov sbb or in es pop dec xchg jge pop inc (bad) inc gs dec in hlt popf subl (bad) lea lods or out data16 dec pop pop mov int sub add loop imul mov into mov aas loopne fisubrl test dec xchg imul ficompl sub sbb mov out jnp ds inc adc push mov pusha (bad) fwait cmp pop cld dec out mov dec movsb dec dec ret mov pop cmp dec cmp xchg insb (bad) inc js out ss inc sarl add jge jecxz cli ds (bad) repnz lss and adc sub std add out add in xor negb mov and roll scas mov ret roll cs aas ljmp mov inc ret out xchg and and insl shrb pusha in push int3 xchg popa pop jo dec or and jge xchg int3 das and pop stos fidiv ljmp cmpsb sub cmp int3 popf jg in jecxz xchg je sahf mov fmuls fcmovnu push cmp insb lahf fistp xchg stc cmpsb aam sub (bad) int3 js push popa adc fsts lahf ljmp jb push sub lcall outsb add mov xchg fiaddl adc out lods inc sub and int3 nop adc out loope dec mov cmpsl push stos call ljmp push addl push jb add add xchg popf test ss mov push (bad) pop loopne dec adc add loop (bad) cmp out mov shrl xor mov fadds push and test xchg push lret xor repz aaa repnz mov inc sub jae push imul shr dec ja cmp mov xchg jnp mov pop in xor inc bound loopne sub in out or xchg andl or push in push dec loopne cmp (bad) cmpsb adc test xchg mov mov pop addl stos adc inc cmp scas nopl js notb gs cmp lret mov mov cmc jb (bad) and in mulb test out stc ljmp jne imul lahf pop sarb pop cmp cwtl sahf arpl mov jo mov push imul sar and cmp aas jae and dec movsl test roll stos stc adc rcl pop inc cmpsl fsubl test fxsave int pusha mov bound cmpb jmp mov scas subl mov jbe pop bound cmp adc (bad) cltd xor lret cmp jno xchg dec shrl pop dec imul dec mov adc or pop (bad) fyl2x lret dec cld ss call cmp mov and xor jb ja shrl cmp or cmp push roll mov pop (bad) dec jno ret fdiv adc cld jl mov scas aam iret pop push icebp cmp fiaddl gs imul sbb iret std scas lods out xchg ss stc ret or mov inc xchg sbb push roll mov stc cmp xchg mov ja rorb pop and sti stc outsl dec cld fdivl push xor leave mov pop call sub rcl xor adc neg out int3 push js sar and in not shll fwait sbb or mov out mov mov insb push xchg sub mov mov push sbb or mov lods push push orb mov pop das sub out sub test enter pcmpeqw dec test sahf ljmp push mov adc ret xchg inc jns fcompl movsl call enter or mov (bad) push mov pop fisttpl mov cltd pop jp mov rclb nop repz add pop jg,pn hlt adc and pushw sar adc fwait add and mov xor mov outsl add imul lcall cli pusha push (bad) call das and xchg ss cmpsl dec push push xor add aas dec xchg cmp test push cwtl cltd xchg test lods mov push sbb cli lea push sub hlt outsl xchg (bad) loopne mov std add push sbb fwait aam stos ja jns add pop mov xchg add pushf dec inc out test insl push (bad) fbld mov sub xchg idivl sbb mov sbb imulb adc in aas push adc and sub and add mov test in xchg cld out sbb data16 mov jne mov loopne sarb pop push push ds xchg cli rcl daa pop lods rcl aad cmp mov cmp and data16 adc in incb mov cli and or adc mov not cltd sub inc jno cltd subb stos into jns arpl dec adc addr16 adc add scas mov fldt xchg cmpsb (bad) xlat add (bad) lahf (bad) jge cwtl adc inc mov xchg adc (bad) sub jg and jge (bad) lock cmpsb or ja push jmp dec xchg paddsb push or push adc stos push dec dec data16 and mov ficom jns scas out rcl inc fbstp mov mov ss aaa gs shlb (bad) (bad) dec (bad) pusha dec dec push sub out sbbl or jmp lret sbb jnp fisttp xchg sbb mov dec shlb xchg outsb add out or adc pop into nop (bad) dec gs stos lds and mov mov adc jl pop cmpsb jge inc outsb mov cmp aas popf fcomi (bad) xchg sub cwtl test aad add lahf addb push mov int3 inc inc jae int3 cmpsl testl push cmpsb (bad) jl hlt cmp out dec add stos and les pushf arpl (bad) repz fdecstp inc inc cmp lock lock add rcrl adc sbb (bad) xor xor mov insb lods sbb push movsl mov loope lock dec sbb inc sbb dec loop test and add sbb aas jnp test ret fldt aam sbb xor stos in lahf cli xchg pusha fldl sub jae and sbb xlat xlat cmpsb idivb mov or cmpsb bound pop xor (bad) mov test aam cmpb sti ds inc mov loopne jo mov push nop cmpsl inc (bad) outsb push mov jl mov leave (bad) je inc xchg mov add lds frstors sub xchg imul (bad) jnp lds mov pop mov (bad) mov cmp in (bad) and lahf sarb loop dec scas mov inc sbb out mov inc cs dec add xlat inc pop loope and stos leave pop lock adc mov add mov pop mov dec (bad) mov xchg adc xor leave leave inc dec pop cmp xchg or mov and mov inc mov shrb fwait aaa or dec nop mov push sbb cmpsl mov jl out pusha cltd add in and add lods enter lock pop pop jnp repz repnz jnp jo pop mov fimul xchg lea push pop js out iret lcall cli xlat push sub inc sub jg lods shl ret (bad) cmp in sti xchg lods negl jmp shl jb les adcb jno scas into enter addr16 in enter jne (bad) dec sti imul imul cmp clc pop gs test mov push or or (bad) dec push inc mov ljmp dec and xlat (bad) js movsb add imul cli lcall pop mov sbb cld pop push push pop jne cmc pop jns fadds push movsl mov lret sub mov movsl loope repnz xchg and dec pusha cmp cmp add fsubrs inc test fdivs mov sub mov cmp sti icebp lds fldt mov fbld fisub call pop mov inc daa imul xchg fwait inc ljmp in sbb scas std inc add mov pop jl mov inc lahf mov push iret and push lods xor inc push pop inc in aaa xchg cmp clc lods xor mov sub loopne cmp push xor mov imul das push push mov stos adc jnp test clc and pop pop call aaa mov int pop sbb and push das mov jbe cmpsb sbb dec pop mov cli or mov lret pop cmp jle daa mov fisttpl int3 fisttpl xchg xchg or adc (bad) or fcoms cmp xor (bad) test jb out pop mov jno js js jbe mov loopne push inc xchg test shl sub fdivl cmpsl clc adc in jbe dec dec push and jbe fs pop repz loopne xor call pop sbb mov add xor repnz push popf inc mov mov sub dec mov add adc rol cltd xor inc test or add sahf mov sub imul dec xchg cmp cmovb out pop jbe flds enter divl push mov outsl inc pusha xchg bound jnp jns addl imul fstps jnp (bad) and int sar fdivrl arpl icebp mov mov pop push xchg jmp adc sub movsl cmpsl inc stc cmc jecxz sti and (bad) mov and mov jnp stos pusha mov or mov gs dec mov stos loop loop or cmp add xchg jnp lahf in sub cvtpi2ps aam dec add adc les mov popa inc test addr16 mov mov push out call add mov out (bad) dec (bad) pop scas jl shrl lods clc mov lahf adc sub inc fcompl data16 sbbb cmp adc cmp inc cs push xor pop lods or jl (bad) enter sub inc xor jne xchg fcompl bound (bad) (bad) das outsl dec cmp or fwait cmp (bad) (bad) repnz (bad) dec cwtl mov icebp dec out dec je jp ret xlat xchg xchg sbb loope sbb jnp sub std lret sbb daa inc pop jns sti adc push and lret or loop shl xorb dec into sub sbb or popl ss ror les sub (bad) outsl xor add andl icebp mov jne mov les lea pop or sbb push dec out and push int3 ret popf mov cli imul fsubrs xchg mov sbb stc pop negl (bad) jmp mov outsb adc std int3 add roll test ds flds imul jbe and cmc scas mov rcl dec icebp lret sbb sub cld push cmp pop and lret dec xchg das mov rol lea shr mov mov adc sub sbbl push dec or pop outsl stos jecxz movsb aas sbb sti pop lret mov les fbld enter movsb call add out iret shr pop mov (bad) push or es xchg push gs mov movsl xchg push xor mov xor pop jnp (bad) cwtl inc cmp pop jmp mov xor push icebp popa std pop sbb insl loope std aaa adc jno mov mov sbb inc in push fiadd adc je sub xchg or push add add lds popf mov in pop dec (bad) repz movsl pop (bad) dec cmc sbb (bad) sbb mov sar fwait les mov mov jns aad inc adc inc sbb dec jnp sahf add lea lods sbb cmpsb push hlt popf inc pop add inc mov ljmp cmp mov aam loopne sbb cmpsl and sub jbe gs xchg mov mov xor jle adcl xchg fsubrs jg stc jo pop push mov xor dec pop mov xchg xor incl push jecxz gs pop aaa daa inc dec sti in jae lea add fwait (bad) dec dec sub loope loop cmp push (bad) cmpsl cmp in mov jno shrl int mov pop or jl xchg pop icebp call jno pop or das stos mov (bad) cmp sub cmp mov dec lret cmpsl ss dec sbb in shll cmp dec insb outsb movsl jb (bad) push mov inc cmp pop xor outsl (bad) je mov leave pushf sbb or fwait inc inc in dec cs adc in mov jbe pop std jae in leave test jmp lcall popa jae movsb aad mov shrb sub mov mov call ja mov dec (bad) adc sahf inc roll out cmp mov mov imul insl (bad) push adc sbb dec mov leave sbb cmc dec push adc dec je sahf sbb nop sub test inc xlat fidivr adc pop and popf data16 (bad) iret std stc out jmp fwait je fwait icebp ret and cmp push lds mov sahf cmp fistpl fidiv arpl out xor adc lahf dec aas xor xchg aam mov pop pmulhuw mov push sti add pushf and adc lcall call xor cmpsb sub inc scas jp cwtl xchg mov pop cmp xor fdivrl fimul xchg outsl sbbl (bad) hlt xlat hlt mov ljmp jbe mov cli sub (bad) bound xchg mov andnps mov adc insb mov cmc jo xor jno xabort sar mov push popa clc pushl shll popf loope nop movsl mov and pop adc pop push ret sub lea jb mov mov cmp mov cmp push jl lret push and imul loope inc ret mov rcll in xchg scas jne xchg adc inc cmp sub pop inc xor sub fcomps pop xlat dec fwait sbbl subl fistpl gs xchg mov data16 cmp das (bad) into push mov push jb dec cmpsb adc adc sub in (bad) movsl inc jmp jg outsb mov push mov add cmp fs push movsb mov mov pop sbb and cwtl outsb ret in loopne mov cmpsb and enter dec and inc repz inc sub push loopne jbe rcll jge dec in je xchg addb cmpsb mov repnz call mov in mov aam lahf push jl pop mov xchg dec cs sub and movsl or inc ja or push dec lds orl sub daa mov pop add sti out in aam les cmp fbstp jns jae mov stos cmp sub inc jno int xorb mov aam xor sbb and in mov std loop push and jo sbb fildll pop frstor (bad) sbb dec loope flds out and inc cmp dec out fmuls out scas cmpsb aaa loop mov mov mov dec lds xchg shlb in pop aas cmp jle mov cmp xchg lcall arpl test psubsw cmp xchg and dec push xchg test (bad) jae loop sub adc loope cltd lret test dec and lcall jb daa dec pop xor ficomp mov add xor mov inc in nop xor pop (bad) ljmp xchg inc push test or mov fwait xchg test out (bad) sub aam lcall jne or add cmc add arpl adc push in xchg mov scas rorb xchg clc sahf mov adc fildll jl or mov or insl dec mov stos cmp push adc lds popf js jo add aad sbb cld and rol int3 fucomi addl addr16 or mov ljmp int3 icebp mov sahf (bad) cltd xchg fldcw into out lret rcr add ljmp ror xor es out push fsubrl int3 lds (bad) xor adc and mov mov stos lret xor sti or push inc icebp (bad) aas or roll (bad) xor sbb rol cld lock (bad) lret mov cmpsl lcall lret jmp add add aas mov lret gs or test enter or fidivl mov test or nop test xlat aaa test pop sub stc cwtl jne sub or (bad) rcrb pop rorl or cmpl dec add lcall and jl and or scas sbb mov clc jnp jecxz jae daa clc fisub push and repz jnp es repz cwtl int stos inc (bad) cmp cltd fcoml movsb js ss and js mov enter loope pop ret and iret call mov xor in les or stos pusha notl aam les add push adc jge dec inc (bad) (bad) mov mov cld xchg insb nop das mov test (bad) ficomp jmp aad adc out jge sti fisttpl int rcrl jmp jbe push xchg adc out dec bound push sub add idivb xchg cmp mov (bad) and cwtl xor enter mov test or cmp or xchg scas dec int adc jle xchg lock pop lret fstl insl jmp jle pop jbe dec cmp pop push inc sbb dec inc loope lcall adc pop dec addr16 mov pop pop fadds sub inc mov ficompl cld pop ret shrb rorl aaa jbe ucomiss dec inc dec mov sub ror xor test adc aam adc pop jl out insb or clc mov jecxz icebp test xchg addr16 into out jo xchg pop xor mov bound jne mov lds (bad) xor jg or div sub sub inc into mov popa (bad) ja daa aad mov xchg sti add fsub push in mov daa sub pop cmp and cmpsb in int3 ss and mov aam mov push push add pusha addr16 push imul int3 fcmovnu into mov add lods xchg imul cmp xor jecxz push sahf add push pop sub loop pop mov mov adc xor pop imul insl repz das fstps mov push fucomi mov and cld aaa mov mov lcall arpl xor loopne push cld and jecxz jo movsl inc mov or xchg out fstl les pop pop (bad) rcrl lahf jns inc (bad) jnp mov or imul rcr fwait rcrl clc dec jmp fcomps ja or and int3 lret std adc add mov add sbb fstpl or aas and add sbb mov inc das pop pushf mov jmp jne pop add mov mov hlt std cmp inc inc fist popa pop push rorl push lods leave pop adc adc (bad) xor loop pop cmp mov xor fldt lret sbb cmp sbb std mov ds shlb pop (bad) mov jmp xchg jp je test lods mov push fstl dec pop lret inc cmp mov aam pop inc adc stc or (bad) dec dec mov mov les mov lahf xchg pop add xchg call adc cli add inc sahf or mov adc addr16 inc adc nop scas xor mov out daa sar or stc sbb push arpl xor mov out mov inc scas add xor cmpsl push add rcll pop nop mov ds sub movsb popa xchg xlat sub (bad) std pop loope jnp movsl adc xchg lods fcoml fdivr imul lea je pop cld das (bad) sbb adc xor movsb hlt push rorb add mov mov shrb cld fcoms decl and or in hlt sub orl rclb or lahf mov sbb mov and iret add xchg mov mov out ret mov icebp or into or push test sbb movsb sbbl cmp mov faddl cmp adc inc daa jnp and or (bad) pop pop stc mov dec int cmp mov std data16 push sbb fdivrp fnstsw rorb inc adc lret add fst fildl (bad) push cmp mov push pop (bad) jae pop insl imul mov stc in aaa cltd adc mov jno out and sbb ret in pop adc ss (bad) push es inc xchg ljmp push fwait in inc or rorb mov push xchg mov call sub push sti add aam push sbb ret sbb push xor (bad) jp cmp cld fbld rcll and lods cld sti mov xlat les pop mov test sub in gs push icebp movsl sbb dec xchg jge pop jb add das ss enter lret inc std mov xor aas xor aaa mov arpl mov stos mov push je ljmp cmp test push fisttp push imul pop jl rcll mov jl mov xchg in pop aad ret in imul cltd stos fildll mov ja int3 sbb mov pushf lcall inc or rclb sub and movsl add and mov ret nop inc cmp mov lahf (bad) ss ds xchg out dec inc test mov mov imul mov push lret nop push (bad) dec out lds push clc movb (bad) cld stos ss lret xlat adc psubsw adc adc xor jo es bound cmp (bad) jne sarl cmpsl cmc adc test push mov pop mov out mov mov lods inc add lds rclb pop sbb pop dec mov movsb xchg enter pop daa movsl (bad) (bad) mov dec jns mov out or rcll (bad) mov push cmp and scas xchg popa (bad) fucomp cmpsb dec mov mov pop enter nop data16 inc movsb cltd dec jmp testl push icebp fs adc push add add out popa iret push push xor jmp daa (bad) (bad) jmp ret push dec pop into or dec cmp mov mov xchg mov bound or push out cmpsl out mov fisubrl xlat pop ret aam fdiv data16 sbb dec push mov jg xchg mov jnp cmpsb (bad) int3 sbb jno outsl outsb xchg pop inc std rol pop dec pushf add test cltd mov push loope cmp mov insl inc sbb mov ljmp orb call mov jno mov dec jmp cwtl fs add mov mov (bad) pop subb aas lock dec push jecxz cmp cli mov movsb in push cmc push movsl scas dec jns xchg adc xor movsl mov or outsl xor aaa lcall xchg jno out ror push sbb xchg lock movsb push hlt into push cmp add mov clc inc cmpsl and mov mov rcrl pop into icebp dec scas mov ret push icebp out sbb (bad) ret leave push lock and movl scas ret dec iret xchg (bad) hlt mov mov pushf xchg jae outsb pop (bad) adc mov negl ss (bad) imul mov jecxz sbb xchg je bound xor lods lea std jg es bound das add mov scas and mov mov lahf fisttp cmc stos iret mov (bad) test adc sbb fcoml insb lahf ficomp xchg cmpsl and pop sub jnp xlat mov mov jae fwait dec lods sub scas sub push (bad) lods push cmp lahf adc push negl ds mov sub push sbbb mov pop pop cmp int sub add in test nop and mov add xlat xchg pop daa jge pop add adc pop sub push int3 push mov pop xchg out inc sbb mov fs adc loopne faddp (bad) cmp pop pop fdiv adc insl sahf frstor dec adc sbb add or push add aaa loope mov jnp mov sbb or jmp push pop dec add cs add add lahf (bad) lret leave dec stos adcl je shrl xchg mov (bad) ss cwtl leave jo and (bad) imull mov jne xchg sbb mov fdivl repz push lret adc mov push (bad) scas adc bnd push lds mov xor sbb fwait clc pop scas and loope xchg nop fcomi fs jno fsubp sbbl mov dec or (bad) je dec mov pop xorb lret fistl dec mov and mov mov sbb inc test (bad) dec dec rcrb stos pop jne inc mov mov mov jp out sub add mov mov aam jecxz inc or dec mov test in adc dec pop sahf repnz jne sub inc push sub lcall imul mov inc mov das subl ds aad icebp and add (bad) xor cs pusha mov mov xchg inc fwait cmp push sub mov lock das xchg orl jb cwtl outsb lods shll push push leave addr16 stos mov jp or insl daa fcoms into pop mov test pop adc fist lock xor int3 inc rorb test (bad) sbb cmp ret addr16 pmullw xchg ss lcall lock aam push lret ret sub cld test lcall (bad) cmp hlt in outsb xchg mov ds mov pop push push mov pop pushf (bad) jecxz fcompl jno inc add xor into (bad) mov or add shrl pop pop and push aad clc jecxz jb clc jb lret jecxz pushf aas lods popa mov lea jb daa jae adc or sti dec sub jp push xor push in fildll mov js sub or in cmp pusha adc out sbb (bad) sbb imul pop outsl pop push lahf scas jns inc fcompl xchg push jmp std mov roll xor jg scas mov stos sahf test js push rcrl add inc push icebp xchg xlat xchg outsl loopne icebp insb jns cltd pushf lea pop fisttpll scas fiaddl push inc ret inc subl push mov sbb fmull outsl pop out movsl cmp addr16 pop mov or loopne dec cli or (bad) movsl adcb xor fwait outsb xchg jno lods lret mov fdivr push repnz mov (bad) (bad) xlat pop push js xlat inc gs jo mov in sub jg out cmc cmp sbb nop ds addr16 loopne or sahf pushf sbb imul jg pop inc pop cmp push inc lods push pop subl jnp mov push andl xor jnp mov imul sbb hlt dec shrl test push sub (bad) fcoml xchg push fdivs mov in push ret push and movsb (bad) std jnp mov fcomip adc mov aam inc mov pop stos insl mov aas flds (bad) pop fdivrs imul push jae lcall lock and fisubrl lret loopne cmp jecxz pop cmp and aam mov mov outsl (bad) das xchg cmc pushf aad sub call int cltd into cltd mov (bad) sbb imul pop dec xchg sub xor dec (bad) nop lret fdivrs jno mov jns cmp xchg shlb push xlat ret xor push shl or cmpsb cld and xlat dec stos jp pushf mov fwait jno sbb ret xor cmp test fidivl (bad) inc inc popf pop daa adc dec in sub push push fidivr jp aaa jg sub daa aad mov imul jne jnp pop lods iret cmp mov lcall (bad) sub daa and sub pop or pushf and int3 jg mov pop sar cmp sbb mov add xor int adc neg xor rorl pushl pop fiadd sbbb cmpsb sub mov fildl inc xchg mov adc push mov jnp jne imul hlt cmp ss mov xchg jae outsl dec cs mov adc fsubrs cs cwtl iret xchg inc cmp mov push stos sbb movsl gs add mov sub xchg insb jp xor pop jmp mov inc mov (bad) nop adc cmc inc aam mov je adc je xor nop dec xor xorb sti or roll sub jge dec shl pop (bad) lret stc xchg clc in loope mov setp (bad) loope loopne mov inc jge,pt push xlat sub popa in lods repz cs mov and and insl outsb add push mov cli repnz aad mov mov fxch (bad) xor lock ds add sbb iret lcall mov add pop push cmc push mov inc xchg push dec int3 (bad) scas inc iret pop or xchg sub sbb test lret push mov inc sbb mov mov icebp dec andl clc jl pushf cltd and arpl mov dec mov in js xchg aaa jb lods cwtl mov sbb scas stos mov jmp xchg (bad) out cltd in jns ds and rcrl inc sahf lds mov xchg xor pop add jg xchg push loop loop clc rolb mov xor sub cmp lcall into mov adc repnz out mov movsl mov sub cltd jge dec mov cld dec scas inc loope outsl or imul sub stos push daa imull push fisubrl mov fnop leave cmp lahf sti push test dec xchg pop xchg sbb dec iret sti push cltd aaa push imul shlb rolb jnp mov (bad) into inc jbe pop pop ret rcll sti in adc inc or mov mov jmp imul inc add movhps pop insb insl pminsw jb test or xorl xchg scas inc push sub ss dec out xor jle fs subl dec mov orl les sbb add pop xor cli stos push lock stos pop (bad) movsl or cmp repnz outsl mov xlat das mov js pusha aaa dec and fistpl mov ja les (bad) lcall lock ss push jne inc cmpxchg in cltd addr16 mov xlat pop mov jmp jno lds fildl cmp insb or xchg ret dec js xor cmc jns test sar fucomi test ss cmpsl jp bnd rcll sub aad pop push in (bad) gs xchg xor dec cmpsb movsb int inc push lods cmp sbb adc es daa sbb adc add (bad) cmc pusha fsubl push fidivr es andps movsb ret dec idivb or mov push daa adc or push out repnz xor jge mov jp int iret dec pop fdivrl inc mov jp mov inc pop pop out pusha insl mov pop (bad) enter (bad) or rcll mov jecxz xor sbb mov and pop nop mov adc fwait (bad) dec movl jns xor xlat xor es mov aad dec ret dec mov rcr sub lods jp test dec cwtl leave mov and out jge push mov cltd push or inc adc aam rcl inc dec push adc cli push fwait jnp stc cmp jb outsb imul mov dec xchg cli mov pushf (bad) les ljmp fidivr pop fsub xchg (bad) bound ss adc inc (bad) inc popf (bad) iret push shr mov mov aas aad in aas imulb popl xchg or mov xorl add sahf dec inc sbbl nop sbb test andl sbb inc cmp or mov dec push stos jg add and in xor fistpll fs sub jae enter inc aaa jb negb ficoml ror add out fnstcw add adc cmpsb jp aam lcall mov (bad) push das cmpsl cmpsb mov lea and push fidivrl int adc inc adc jecxz xor insb movl lods (bad) sub fisub adc inc fwait mov repz sahf in lahf jno mov out or enter ret das rolb fdivrl xchg inc notb gs rcll push fadds cmpsl arpl jnp bnd jle sub mov lahf push push loopne adc adc test rcrl mov into pop sub rolb sub ljmp rorb sahf cli or out or gs push lds push inc into stos sarl test lahf (bad) or jl outsl push cwtl jbe and ficomp out and lea sub subl xchg test gs cmp ret popa adc imul cld adc testl imul mov lret cmpsl cmpsl mov gs roll loopne repnz xchg and repnz pop decb in pop dec mov lcall add insl sar into imul push in dec dec int3 clc fldenv mov loope mov or aad and test cmpsl mov and pop int3 mov mov (bad) lock insl jle (bad) mov in sbb imul pop cmc (bad) xor lods enter aam outsl neg repnz shrl aaa push (bad) adc sarb sub scas fsubl mov sub jecxz pop push fisttp pusha dec repz addr16 dec ds mov imul jmp adc xchg or inc pop cmpsb xor xchg stos lds mov gs cli sub cs in sub jle and pushf xor cli inc lahf sbb arpl xchg xchg out fs sbb push pop push mov pop sub cmp or inc (bad) lock les jb pop add push ds mov xor adc mov xchg sbb dec ja sbb out xor jnp dec ret mov sub jge bound and push mov dec fisubr addl dec add shrb dec aad lods lods or inc pop into jo out cmp pop fdivs mov xchg stos mov sarb jno sbb lock cli jl aas loop pop notb jg adc iret sti das cmpl jle xchg imul stos inc dec aam stos ficompl (bad) mov stos sub hlt adc push aas push and stc or rcr sub sbb mov popa sahf sub add in int xchg mov cmp fdivs inc out inc inc xor push shrl cmpsb (bad) divb push dec icebp std xor (bad) cld xchg fwait cmp stos xchg or xor push xchg test inc sbb add jmp pop (bad) mov inc int xlat cmpsl push jmp pop xlat lcall mov imull in fisubr btc aas xchg aaa xchg leave adc scas mov (bad) lcall shrl xor mov jns or lock ret adc sub inc lods dec add and ljmp pop in jbe js mov cmp (bad) mov adc roll and pop (bad) loope lahf rcll insb insb aam (bad) ret arpl pop ficompl ljmp and scas xchg leave dec lea out xor pop fcoms inc sbb (bad) sti sbb enter test cltd icebp out dec pushf sbb pop cs inc add mov dec sarb aam loop push pop push fnop mov push pushf hlt push and enter sub mov inc mov xchg xchg push push ret ja stos (bad) cmp xchg cltd sub pushf cmp and lods es scas mov pop mov in mov loop mov mov inc xlat scas mov mov jmp rcrb and lcall fstps cmp aam in dec push push jne shrl and cmpsb (bad) pop aam scas cmp push xlat add cmp jmp sub mov cld nop out inc mov es adc lods je sub xor and inc fwait pushf and mov mov jae pusha push xor sbb inc cmp loope jo sarb mov cmp mov push pop mov in adc push (bad) sub loop jno xchg fidivr and rcl jb xor sub shl je fwait incb add dec cmp xchg fisubrl fcmovnbe pop add mov repnz out and push (bad) mov or into adc mov fsubs or cmp adc in xchg cli mov sar add (bad) jb pop mov lret arpl test sub mov bnd jge jb push sub and jo out (bad) pop or out cmp cmp push or les (bad) push jnp ds bnd cmpsl and imul aad aad lahf dec pusha sbb xchg sbb nop popa (bad) dec (bad) xchg dec mov mov popf push jle fstpl out or jp (bad) lea jbe lea inc icebp pop jno xchg test cmpsb popa fwait int jl jnp mov sbb push sti mov xor sbb push ja roll (bad) icebp arpl mov xchg jge pop jo dec out mov or mov (bad) fild jb and ret cwtl out dec lods cmp int3 jle call sbb add les jnp cmc cmpsl sbb shr add int xchg cwtl adc leave inc mov orl fmulp pop sbb mov enter xchg push mov xlat sbb (bad) cltd pop fcompl outsb adc jle jo mov xchg into ffree inc mov xchg jmp xchg (bad) cmp push bound mov mov mov sub inc jbe mov hlt xchg fistp adc das mov push in xor rolb push pop lea and sub (bad) fistl int jle ret push fidiv push mov inc push mov int3 clc xor inc (bad) mov sbb cmpsl push iret cmp ja repnz lahf mov mov adc andl sub mov bnd sub jl mov and and pop adc add push hlt mov mov (bad) jae test jne (bad) enter xlat pop aad fdivrl cld je bound push mov sbb push incb adc mov lods (bad) sbb lret test sbb inc pop pop popa (bad) push cs cs rclb dec dec sbb and cmp aaa mov mov sub fwait mov dec and add mov mov mov les in mov sarb cmp mov and in ja enter sbb nop shrb adc inc jno push mov mov jnp cmp xchg fisttp mov adc call inc (bad) sbb fisubl jb mov push xchg xchg jge add (bad) out mov pop xlat pop add inc cli sbb or dec mov or out fwait mov push pop (bad) push cmp sahf (bad) sbb out popf mov fild push movsb jbe add jp jg push mov dec loope scas shrb (bad) std adc lret repz cmp cmp testb xchg sub add sahf dec push dec cmp aas mov mov lods nop arpl int imull fwait mov or mov lods xor loope dec (bad) pushf xrelease push adc adc and mov push hlt mov and daa mov fisubr jb ljmp push sti xlat mov and xchg push sub mov aam cltd inc mov xor push jnp inc scas xchg lret adc mov cmp xchg scas push aam adc repz inc jbe (bad) sbb jb jmp repnz xchg mov out jns mov sbb push pop lods inc xor and push ret jl sub js outsl in inc pop mov test jl push xor xor idiv xchg movsl repnz call inc xorl addr16 inc fucomi pop adc cltd lret inc (bad) push cs mov pop pop (bad) jae icebp ljmp (bad) fdivl push jmp lahf data16 or dec xchg rolb mov enter (bad) sub or xor push int3 add nop xchg adc dec daa int3 pop cld ljmp add testb dec loopne push push lods pop jp ficompl (bad) (bad) lret test xor dec jmp aaa and xor lret xor push fmul or and (bad) repz dec ds push jo and pusha lcall call loop cs aam pop aas sbb iret cltd ja aad fdivp test add add rclb and inc inc add (bad) push inc mov jnp push pop push (bad) jae addr16 lock mov and mov cltd xor (bad) and jle enter sbb (bad) or rcll das jle mov fbld inc in inc (bad) repnz insb and cmp mov out lret jg or out push dec mov sub cltd jb sub and (bad) aam mov xor mov push mov imul shll aas (bad) ffreep je cmpsl inc pop clc outsb cmp pop and pop sbb cwtl or lods scas movsl into fmull enter mov (bad) jle fwait pop or (bad) ds mov jle je stc mov into mov add and les hlt pop sbb mov aam or lret (bad) aad pop push cmc mov call add cli lods add xor test dec and loope sbb mov imul inc fdivrl sub xchg mov jg push inc or push fadd jmp lock (bad) jmp mov fdivr mov hlt das and inc les pop ds scas adc mov cli push clc dec into push push (bad) pop in pop pop mov je xchg sbb xchg push divl icebp lahf pushf addr16 jno popaw fildll es push jge xchg sbb js xchg lods mov push cmp icebp iret inc in ss cwtl mov jg xlat icebp (bad) dec outsl ja xor mov sbb rclb fcmovnu jo add cltd fdivrl mov mov and ret out dec xchg jns mov sbb sbb stos fcoml push fmuls mov (bad) fsubl mov dec xor jbe push sahf inc scas cs mull sbb mov dec cmpsl mov int fiaddl cmp outsb fdivs stos fwait push fwait mov xchg mov cmp cmp jle dec jge enter add test pop lcall dec ss into dec lods xchg arpl push aad pop adc and lds mov jae les out inc sbb push push outsb mov test dec (bad) xor rolb test daa push mov cltd jo loope enter mov push mov nop movsb test mov sbb lea stc (bad) std mov or dec push imul adc stc (bad) repz push aas jmp cmp iret adcb push jne ret enter mov push popa pusha add or xchg gs lock fbld test sub add (bad) xchg add das in dec adcb scas mov push pop add das aad dec inc mov push adc aam lods mov incl add mov sub (bad) repz cs xchg test lods push sbb call jmp (bad) leave imul jae inc push push lds jno cmp dec push (bad) mov (bad) scas jmp cmp push not add test dec push inc gs mov data16 fwait cmp scas push sub int dec push (bad) test cmpsl es sbbl sbb xchg rcrb push out fcmovbe addr16 jecxz movsl mov pop gs adcb and xor xchg lcall and and negl fstpl add rorb and lock incb push cmpsl hlt (bad) push lahf dec ds add add (bad) fmull aaa cwtl sbb cmp sahf mov xor lods xchg xor lahf cmpb lret scas and push dec lds shr xchg sbb shr scas and add mov jb push sbb xor shll sbb jno or inc jno cmc cmpsb add jnp popf cmpsl pop fmuls ljmp pop jg push push roll xchg fucomip fdivs push rolb imul cmpsl xor addl les add push push sub fstps fwait mov (bad) (bad) gs inc dec seto (bad) push rolb pop jmp dec iret (bad) aaa or mov push loope ds ret aam sbb in inc mov addl into jge push test adc int mov xor sbb mov popa cmp sub fdivl push pop inc stos push in xchg (bad) push push cmc bound pmaxsw lret fldt inc stos addl inc je cmp sbb outsb pop and xchg popa out es sbb xchg jecxz sub add orb fidivrl cmp sub pop loopne out pop jg add cmpsl (bad) jge mov push adc gs sbb cmp adc subb fidivrl (bad) jp into std jl dec sbb cmove sbb inc push xchg arpl fldenv (bad) jae fs add jle and lods sbb (bad) xchg mov imul jge fisttp ja pop pop jae mov sbb xor (bad) insl sbb sub dec dec js into hlt cmp movsb lret clc lahf pusha out sub lret scas bnd push dec leave pop xchg jo clc and cmpsb mov or jmp add decb aas repz or scas push scas dec adc cli inc movsb xchg sarl adcl jo xchg rcl loopne fmuls cmp lock push sbb movsl (bad) adc jecxz je jecxz loopne jg xchg sti ficomp mov sbb lcall xchg lahf rorb icebp push dec push adc sub xor mov adc mov mov es ret es lret jnp adc fidivrl fmuls dec cmp enter pop mov lods and (bad) xchg rcl cmp dec aas jge dec push data16 mov xor stc sbb repz mov xchg jg mov mov and xor ljmp decl xlat push inc mov xchg add xchg cld mov rclb aam mov or xchg pop lahf imul push js jp sbb out icebp in orl (bad) enter shrb fdiv call popf jge call inc test pop out cmpsl test lods xor enter popa sahf inc xor repnz into sahf or mov or cs hlt mov or or push scas sahf mov sbb pusha aas vcvtps2pd (bad) and pop mov jp xchg fs mov mov cmp pop add jmp cmpsb loop push imul int3 ss sbbb andb pop and mov lods cld dec std test std daa and fsubrl push into aas sub test sbb jne ss adc dec fnstsw push fdiv push add out sub fmul dec and in aad push and outsl aaa xor ret lods es in xchg ret fstpl imul clc or bound ret pop cmp sub jbe ret out cmp pop pop mov lds add sbb fwait push inc cwtl lea insl dec adc mov push scas or fucomip movsb ss es mov sub pop popa enter mov in lods mov sub dec out add or mov or shll pop (bad) nop (bad) cmovs aad (bad) jmp jbe dec popf jge js cld stc xchg push test push xchg and (bad) xlat addr16 dec je fnstcw ds mov roll cmp or in xor (bad) sbb cmp es aas sub jbe lcall add (bad) adc fwait fwait sub loope loop lcall xlat mov out mov sub add lahf mov daa xchg and lods xchg cmp mov loop fs stos out int cmp jns adc int3 popf mov dec imul ss jb add sbb nop fdivs cmc pop idivb push adc outsl cmp faddl inc ljmp aaa add dec das popa push int3 mov xor adc dec ficompl xlat mov inc inc inc mov aaa repnz pop scas mov add jne leave ret dec (bad) adc ret push inc mov outsl or enter xchg in push sub add orl jle in sbb sbb frstpm(287 push aam ficompl jae cld testb mov push push add mov xchg or test out mov call test push imul xor loope xor aad out (bad) es ljmp repnz fs xor jmp nop and iret negl mov jmp aas sub mov fistpll xchg mov pop dec or shll and data16 int3 sub add lahf and inc push mov add xchg mov xchg stos movsl sbb or cmp lods xchg pushf xchg cmp les add push pusha push adc rcr dec insl or flds cmp xchg js push icebp dec std pop and xlat mov mov adc push mov pop adc stos call jle test popa push inc xorl sarl add lret sub aam insl outsl inc cmp pop daa not mov pop mov mov test call dec lods xorps loopne xor daa movsb mov xor push xchg shr and daa cli insl mov movsb inc out cmp jnp cs pop mov loopne pop (bad) push dec fisttpl data16 rcl push cmp push jbe add fisttpl mov imul fs dec push mov aas ffree mov shll push idivb push movsb push hlt xor sub mov movsl in add stos jge xor mov aad inc mov pop inc cld sbb inc rcr sbb push cmp fisttpl jne inc push mov mov data16 or gs xor jno and stc adcl or dec or scas pop (bad) (bad) xchg data16 xor adc stos mov fcomps cmpsl bound in rcl repnz fwait adc inc lcall xor xchg ficoml insb cmp dec adc and aaa or push sub pop fdiv test lea jle fs (bad) add hlt push pushfw push movl push sub shrb lret neg pop cltd daa fcmovnb xlat jg cwtl pop daa adc ss insb dec push cs cmp push (bad) std mov test ja xor and shlb pop cmp iret mov cmpsb xchg sub xor mov test flds test neg push adc mov ja fs cld xor cmp addr16 xchg cmpsb mov push (bad) adc mov push fdivs loope imul movsb inc and (bad) jmp xor mov dec popf cmp mov xchg and scas jg adcl jp jle cltd or add mov scas mov pop or (bad) std inc xor mov cmp and sbb in push loop cmp add xchg je sbb dec inc mov cli lods dec fs repnz inc sub inc adc int3 cmc in add cmp jp call pop sbb dec mov cmpsb leave sub jecxz mov out mov sub sub outsl sbb and cmp cmpsb aad jmp pop sbb loop fs xchg cwtl notb push pop add fcomps fs mov mov fmuls and repz or pop addr16 clc jecxz gs pop cmc cmpsb mov mov jle stos jecxz into pop add gs mov incl fisttpl sub jp add sti xor jp inc in cmpsl outsl jb inc or mov int lea mov iret imul cmp cltd inc mov fnop enter or push dec push mov pushf mov cmp lea sti mov or fist and sti gs sbb inc in out or insb xchg pop cs cli xchg mov xchg fsubrl push jl mov jmp stc add xor in add pop in or insl leave and xor scas push cmp dec in cmp or (bad) and or out (bad) xor (bad) imul push pop add xor xchg cmp ficompl cmpsb jmp adc push lahf icebp dec lahf xchg add cmp in jno iret clc and into int3 out enter add push decl add aad in xchg test mov sbb jp popf divb clc out test lret sbb xchg add inc pop lret push and jg adc push sbb fsubr cmc cmpsl add out xchg xor jnp in ret mov mov inc fsub into inc std mov add mov xchg movsl out mov mov xor dec out or push xchg gs xor data16 popf mov jbe dec push fs jp cmpsb repz insb into mov mov fstl push movsb cmp lret dec mov pusha out dec push iret outsl cmp xlat push jb inc loope cmp adc int add dec inc jge lcall int xor mov push pop pop test sbb dec sbb sbb push inc pop loope into xchg sahf test lret pop sub dec push mov adc pusha ss rcll pop and out xchg mov cmp xchg dec popf lds mov add sub les xor cmc push std imul dec cmp xor (bad) or dec inc repnz push and push or inc insl pop aas (bad) daa or outsl jbe push ret inc sub rcrb hlt mov cmpsb js mov sbb (bad) lret or mov push xlat adc or mov sub jge cmc adc sub adc outsl clc push mov lret push sbb rol or jecxz lods mov (bad) aaa icebp xor ret call daa jl sbb movsb aaa jb movsl mov push inc inc push mov push lea data16 test sub push sbb inc cmp imul loop jo (bad) push adc outsb xchg sbb pop call movsl mov jl or dec inc stos lock lds (bad) sbb pop push lret or xlat mov jno push cmp mov (bad) and jge outsb dec test or adcb jg mov pop setae idivb iret sbb mov stos rorl sbb and (bad) adc pop xor test jp push loope cmp (bad) fisubl jo mov or sbb clc jmp loope mov xor inc les fsts cmpsl ds dec push inc xchg (bad) int3 stc xchg les in mov lahf jmp push sub sub cmp cld xor mov pusha push ja cmc sbb dec inc push or jge mov mov add mov and add (bad) repnz inc cmc scas dec inc mov pop out ja sahf or les lret das xchg jae adc xchg ret outsb pop inc mov cmp mov fisubrl mov out add xor std fwait xchg cmpsb jle std cmc inc jno sub stc outsb test push je jno and ss mov inc add push adc mov mov fcoml push sbb cmp out stos pop mov lahf adc mov fidivrl movsb test dec mov push push pop adc ss lods (bad) popa adc sti and inc add xor ret mov mov (bad) cmp pop mov mov cmpsl outsl xor dec xchg (bad) xchg lcall sub je ret das sub aad fmull xchg int xor sub movsl cmc popa pop add aaa aad or mov sub jl insl jp orb push jnp sti mov popa test test cmc xor jl cld in ljmp (bad) aad out add push jp jg insl xor xor das xor (bad) or add xor out (bad) pop out stc movsl aad scas mov mov lods into in out sub fwait mov pop cmp mov addr16 insb sub mov sub xchg ficom scas lcall cmp mov and add xchg inc cmp xlat mov rorb xchg pushf in jl push mov dec ret pusha xchg jl cmp jae mov xchg dec fildl add cmp dec popa out (bad) jle mov adc or mov add cs iret pop and and data16 or or pop scas fsubrs adc pop jno jne mov or sbb jcxz ja call inc sahf (bad) jb and test imulb (bad) in mov fldt mov pop xchg sbb adc jo jl pop js or getsec (bad) xchg sbb (bad) sti movsl imul jp sub incb sub divb inc and in test mov dec mov icebp push sar jno icebp int add in inc mov push sub repnz jns pusha or enter ds push mov sbb sbb sbb divb jo fidivr xor addb mov dec insb sahf fild and mov mov or push loopne push dec xchg mov mov xchg jno dec loop cmp mov mov and cmpsl cmc lahf mov mov add dec ljmp mov push int and jnp pop add xor xchg in jo outsb outsb mov sub and dec add cs jns mov mov jmp xor (bad) icebp imul in ss addr16 fsubs adc repnz cmp andb int xor ss stc lcall lds mov xlat stc jns mov inc ljmp push mov mov lock mov lcall and mov ret dec mov jno xchg lea or push out sbb sub mov fisttpll js ret adcl sbb lods nop pop inc push and adcb loopne mov xor cmpsb mov jb fcom xorb imul lods frstor and or mov fadds jp mov aaa fsubs xor dec push dec xchg rolb mov xchg pushf cltd pop flds mov mov xor mov mov push jmp ret mov lods dec outsl add jp fbld fcompl push (bad) es xor int3 sbb stos negl pusha aas sbb mov mov mov mov hlt das loopne xor mov add imul xlat xor cltd and dec (bad) (bad) int (bad) cmp pop mov pushf sbb sub or mov adc mov or jmp loopne addr16 cmp mov lcall jae pop pop or push das sbbl daa sbb nop cltd dec push mov sarl lcall (bad) lahf adc sub jle test out pop dec mov stos lret frstor add adc jl addr16 sub insb rol in in std mov (bad) rcr xlat sarb (bad) bound xchg in icebp test mov loope fucomi repz or fbstp int out mov inc lods movsw lret lock or ja dec daa out mov idivl das test fdivs and call fsubl stos mov test ror loop movsl and jg movl mov lea hlt inc mov pushaw icebp jl jns les dec lret xchg fwait jae add loope and push gs loop and cmp xchg shll ljmp rol jl cmp push mov add mov (bad) sbb push out add dec sbb xor or xchg mov mov pop jecxz cmpsl sbb mov push lock pop jns in insb dec mov adc clc mov sbb mov push lods cmp (bad) addb sbb push inc mov in mov sbb rcll stos pop mov jmp mov loope insb (bad) cli inc daa and mov xor lock sahf jns dec insl jge sbb out aad push mov push jp mov in in push lds pushf int decb int jle ljmp sarl add ljmp rorl (bad) push or in (bad) (bad) jo jns push push pop in out aad dec arpl das inc sar and ljmp xchg inc mov push js das and jb test mov pop or test cmp dec jns mov inc (bad) jle adc fstpt adc ret testl sub jg xor lds out iret xchg mov jecxz imul push in jg repz mov dec mov mov jmp jle,pn sbb test cmpsl xchg mov pop roll xchg sub jmp stos dec (bad) out mov loop hlt cmp xorl outsb jae inc inc loopne cli test xchg jp cltd or push mov jmp fidivl sub pop mov std pop test (bad) icebp (bad) ja pop movsl movsl mov loopne sbbb in cmp test sbb inc shrl sbb mov mov (bad) mov test aaa std sub loop loop or add std jns inc sbb push test scas arpl lock sbb std xlat (bad) repz and or lods cmc sbb dec dec ja mov xor cli xchg xchg icebp xchg jge repnz dec das fst pop (bad) lds xchg push or mov rorb sbb dec scas or jb out ret movsb shl add and out stc std cmpsl sbb dec dec adc xor sbb mov in dec nop imul xor mov mov out das daa loopne pop inc jb cltd pop push and inc push fs xchg add popf dec lret cmp add (bad) jb pushf stc xlat dec dec ljmp sahf jl bound popf mov cltd in lock ljmp mov mov fstl out adc mov sbb or inc mov leave jp out and bound je inc pop jmp test ret jle mov jae pop sub in push mov gs bound xor add and mov dec (bad) sbb cmp mov xchg sbb pop repnz add xchg outsl arpl adc and cltd push cmp or mov jp sub jle add xchg lea repz ja cmp dec sub sub and adc div insb xchg or or and push cmp pop enter aad std sub sub movsb xor movsl lods insl mov daa lret cmp mov cmp sti lea xchg loopne lcall jnp xchg cmpsl push mov and adc call or xor out es sti xor sbb in mov push or adc movl ret sbbb mov insl out int3 jnp sbb fbstp xor jp push (bad) out cmp (bad) out xor pop xchg push repnz repz push cmc loop pop jno into insb loop (bad) cmp pop inc lret mov xlat (bad) ficomp sub movsb cltd movsl and mov std sub sbb xor (bad) call cmp dec sbb sub xchg and nop sbb fmulp (bad) fsubl inc add jne cmp jg xor add cmpsb pop xchg mov mov pop and lds out adc mov add pop loope stos push adc jbe and pop pop fwait mov mov mov jns mov dec cmovb adc ret add test jmp out sub popf mov sbb xchg adc pop jp adcb pop mov (bad) jl fsubs ljmp jge sbb scas cmp decl add push and pop jno inc in lret insl jo jl jge out std jo,pt push push jae xchg pop aad mov inc dec add rcr daa mov mov or cmc jo rclb jl xchg cmp inc pop mov mov jo cwtl test push or jecxz sub push inc add nop out fldt cltd push add inc daa lods jecxz pop fs ret lods jne push bound iret fisttpll pop xor fidiv and mov dec xor push or inc push xchg pop lcall adc test cmp out (bad) notl sbb push into dec adc pop jmp lods and adc int3 xor mov les push inc mov dec fwait repnz sub mov inc call dec subl lret xor ljmp pop scas adc lahf inc xchg inc int cwtl sub fcompl inc mov dec or (bad) mov rcrl nop divl add pop fucomi mov aad jmp jg mov sbb xchg insl popa hlt (bad) fistl mov xor xor stos push mov cmp inc adc inc mov adc lcall popa xor adc jg addr16 jo push fcompl jns ljmp pop xor (bad) (bad) push mov sub (bad) sub push and (bad) (bad) je mov (bad) jns js stos push sub in (bad) push pop jmp jle sti es jae sub outsb adc mov mov test add imul stos jb subl or rcll out or xchg xchg lds inc or stc xchg cltd dec pop mov mov lock (bad) (bad) fstpl out push fstpt jp xor sbb mov icebp ss dec dec popf inc pop ror push dec ja jno adc sbb mov ret lret (bad) jg jl aam fsubrp jmp jg enter pop pushf rolb in fxch test cld fucomp (bad) movsl xchg push sahf dec cld dec gs arpl push aad test xor call out adc lahf sub int3 test mov dec ss and scas dec lds jmp mov jno in adc add xor mov sbb jl push mov (bad) mov jb mov inc mov or ljmp inc inc jge dec mov pcmpeqd sub cmp pop add je sti sbb test mov add movsl jae,pn jp and (bad) rol sub es dec test ret cmp aad test push mov scas jo adc fsubrl (bad) jl cwtl adc stos pop test nop fdivrp push jb fmuls add jne fnsave into mov add out sbb aas mov clc sub dec mov daa push fist sbb adc push cmp pop jmp or cmp push push lea out adc pop popf add sub leave ret sbb scas inc loopne clc sub clc ds mov xchg add sbb sti jno aam mov sbb sub push out inc gs in hlt and or das mov hlt pop jb mov lods dec sub dec loopne lcall add inc mov sarb fwait pop call pop fsubr or push or fstpt std iret mov mov adc dec and lret sbb push into and or xchg pop enter fnop int3 xchg jb insb lds pop test mov pop add add nop lods xor mov mov push push pop stos hlt outsl mov in xchg movsl pop push loop lcall mov sub xorl jnp jo mov xlat mov loope add sub das rcrl mov pop icebp adc dec cmp push stos fcmovne iret fldl2e push sbb lock rclb decl stos jle (bad) mov outsb mov xor cmp scas lods and cmp xor xchg add icebp ljmp push pop (bad) enter (bad) popl adc and xor (bad) jnp stos ds out xlat add sbb pusha pop cli jae cwtl jle test in roll push or jae push fwait push cs cmp cld pop imul inc mov dec sbb sub popf fnstcw lea loopne mov stos cli dec mov add xlat jnp fstpl and loop sub dec int3 pushf lret pop repnz enter sbb dec and mov xor ljmp rcr lret jo push mov fcmove out cld add int outsl and loop or push xor fwait cli mov mov sbb les hlt out loop add ss (bad) xchg push mov cmpsl aam add sub sbb maskmovq idivl lret sahf jae mov add int3 out cld loopne adc mov pusha ja mov cmp and dec inc cmpsl pusha aad ss sbb xor dec ja add into aaa ret fist mov jno inc ds jne push outsl sbb fistl loope pop add push test push roll add mov xchg xchg or shll mov lret cld mov decl mov or xchg pop idivl std iret jb (bad) and int (bad) (bad) cmp pop and mov pop xchg (bad) adc clc loopne das inc divl sbb dec mov arpl or pop ds popa (bad) loope mov inc or dec into mov add sub icebp cmpsl mov mov inc push mov dec sub sbb or in dec xor and mov scas and push cmp in or inc mov xor xor xchg cmp push popa jnp pushf sbb fidiv sub add mov and dec mov or sbb int ljmp push aam cmpsb xchg pop fsubl mov into ss fwait iret jg dec and fwait popa arpl es or sti dec scas jle inc inc mov cmp (bad) push clc js push test inc (bad) cltd movsl mov push ljmp xchg mov (bad) cmp clc inc pop inc ds xchg (bad) insb ljmp sub pop pusha idivl subb ljmp rcrl jmp ljmp push out mov cli and mul push xchg lods pop sarl and xchg lock inc xchg sarl xchg sbb jns mov mov dec vandps mov inc bound push int (bad) fcmovu inc mov fs imul inc push mov adc shrb std fmuls out out xchg (bad) pop mov and sarl cmp loop mov pushw aas xchg push (bad) lcall divl mov in (bad) jge cmp (bad) into ds adc jbe in dec fwait hlt cwtl enter or xchg add xchg inc or cs incl insb cli dec inc pop sbb in jge rol fldenv adc frstor cmpsl popa ret pop sub loopne scas xchg iret add mov lods xchg and arpl pop shufps clc mov push cmp xlat xor lea sbb add cmp fsubl dec xchg lds addr16 fild push mov sbb lods iret dec ret out xchg in dec cmp jmp hlt popa sub lds mov lret rclb push mov xor aam push sbb push test imul jp mov sbb jns lret cmc xchg mov data16 sahf lcall adc fildl or and jnp outsb fmull test sub jno sahf mov pop (bad) xor ljmp mov inc ror push mov pop (bad) lret bound aad stc pop out add data16 leave and cs sub jl and and mov jle scas mov jne sbb pop inc jg repz adc inc ljmp js in mov mov xchg icebp push cmp mov seta mov cli cmpsb rcr push dec stos lods insb scas jno add cmp imul sbb jecxz mov xlat insl mov fisttpl adc or xchg ds jg mov inc xor in ficomp mov or rclb adc cld jl jo sti sbb aam cmpsl sub add stos add ss insl int movsl jne in inc xchg lods sbb mov (bad) gs sahf inc iret stc adc ret movsb push cld sbb into arpl dec mov (bad) sub das dec das cmp push cmp inc ror cmp jge cmp mov push lea fwait and data16 pop sbb mov inc data16 and pop jae out mov add cli adc adc inc push dec dec push je pop lods (bad) xchg clc js loope out cld xor and mov mov jl in jno inc push mov nop mov stos loop and cmc or xchg stc rcrl imul outsl sbb mov (bad) and adc mov push aam fdivp dec mov addr16 daa scas loopne mov and data16 jbe mov lret fiadd popf add pop dec dec pop pop lods cld test mov xor popa cmp ds imul add jae aaa or pop movsb or push clc imul inc or ss jp loopne xchg jle push mov pop lea jb pop push scas cmp lcall cmp cmc mov sahf movsl xchg ret push and outsb push dec cmp mov imul adc cs fcompp call addr16 stc xor sub fldenv push stos xchg mov xor stos push cli js pop in cwtl adc jl jg in aam sti cmp or fsubr dec pusha jg pop (bad) cli mov repnz movsl insl insl sub push outsl sbb gs dec xor out ret scas xchg and insb scas cmc xor jno cmp lea mov push (bad) fldl mov lret inc mov inc xchg (bad) mov js xchg nop lret loope insb fnop and outsb jbe xchg or push mov test (bad) mov or push iret mov dec inc pop lahf ds les iret jnp xor sarl mov sub out pop mov cmp sub inc inc rorb jns stc jne sarl pusha dec cld out bound jp sbb cmpsl jb std incb mov mov push dec push add push (bad) shrl inc jb pop add add and or cwtl fwait (bad) clc inc sbb lcall adc fsts sahf inc dec mov push inc add or mov or aad push sbb iret cmp jb mov adc or xchg add mov mov jmp inc cmc call clc out test in lea pop jae xorl adc push push scas xchg test inc (bad) cld pop add shrl mov sub add std adc fstpl jnp mov mov mov test fistpll pmaddwd and mov roll and xchg xor and sub mov test imul xchg adc fisubl cmpsb add decl cld jmp xchg sahf repz mov lahf cld or (bad) jge das and out mov adc mov mov gs movsb mov jecxz xor fwait repz (bad) in xchg jl arpl (bad) adc xchg roll mov xor cmp jno lea call addr16 fdivl aad cmp lcall xor cs cld push int cli add imul mov fdivrs shrl dec mov mov ss or push cmp mov and xchg pop or inc pop add pop mov or pop cmp bound sub sbb cmp fwait addb or rcl lahf pop sub mov out out gs aas jge sub ja xchg test jg mov dec pop inc sub fcmovnbe lock inc lods fiadd pop je ret cwtl add stc push test fist mov les imulb sub sbb mov push mov test cmpsl repz fs sub push sbb add das loop push loop outsl xchg cs pop jne mov jmp mov movsl outsb and push cmp nop sbb test lock mov pop sti push or xchg sbb and out loope xor sbb (bad) sbb dec mov or lahf mov jg ja xchg test mov xor adc addr16 cmc cs (bad) xor inc (bad) aam mov xchg sub inc xor mov jle xchg add cld pop stos sarb inc ljmp add lea push sub mov mov jnp (bad) sti mov test mov dec cs std jp shlb mov mov xor stos mov sbb (bad) ljmp arpl push test cmp pop xor jbe sbb jmp bound enter ljmp aaa lcall mov rcrl push adc out fistl mov pushf jae pop nop (bad) xlat mov int ljmp js fisubl arpl cmp dec roll (bad) in in fbstp mov ss or mov imul mov cs pop rorb mov incl daa dec jo jno fisttpl lret cld pop inc ds mov sbb insl imul xchg fs shlb stos out les fidivr adc pop push imul scas shrl mov pop das push sbb sbb out mov test sbb in mov fisttp insb jle mov push (bad) pusha flds inc adc pop lods push jns (bad) cmp sbb pop mov fcomps fistp jmp pop sub xor jo mov sub nop mov inc mov jl mov stos push dec iret insb push (bad) xchg sub mov mov aas xchg leave (bad) lods sbb sbb and call pop (bad) cmp mov imul test mov js push popa pop scas mov enter push (bad) cmp jo aam and rcrl jnp xchg ds (bad) mov test sub sub out sub mov mov (bad) mov jmp (bad) jns popf int3 mov pushf push imul jo sbb pop std data16 cmp inc inc dec sbb add pop pop and movsl in and and rclb xchg cmp scas lds mov fs imul sub movsb xor imul lea mov lods hlt xor cmp rorl mov push je sbb jbe mov in sbb gs dec push mov mov xchg icebp popa lret out cmp nop xor cli mov stos movsl mulps pop xchg add mov mov ss mov cmp es xlat enter mov aas movsl arpl cmp lock (bad) outsb jo inc jne insb sub das pop es mov test push cmp push imull (bad) pop daa test sbb jae lds dec adc and mov sbb sbb stos sbb cmpsl and out xor popa xor mov pop aad lds sbb add sbb push mov jne sub xchg dec jmp jge xchg loop cld insb pop inc loopne xchg xor xor add cli lahf pop stos xchg test sub dec stc in lahf out mov cmp popf inc push inc mov ds popf jo xchg pop mov cld stos jmp out and sub cs add xchg (bad) fwait push outsl push adc xor (bad) mov sub lcall add aaa add movsl jbe (bad) dec insb jae ja into mov cltd insb (bad) popf js xchg cld in or loope lcall mov push sbb sbb jnp add adc mov push pop test ss inc inc ss push xor push je out mov jge cmp jne sar loopne in outsl and push inc repz cld (bad) mov mov dec xchg es bound mov mov loop mov sbb addr16 pop xor arpl pusha dec sti (bad) lahf adc mov (bad) (bad) jo mov popf fldenv dec les out test imul pushf add insb push or adc pop pop mov das inc pushl pop jae push dec cmp test inc int3 sub repnz fldl loope aas in pop pop push data16 subb repz dec (bad) jno popa cwtl test lcall inc dec add das jl stos fidivrl jg stc aas lock pop sbb rcr xor add sbb mov adc out push inc sbb mov int3 out xor lea int3 std dec jae sub pop pop pop (bad) sbb add arpl mov imul loop adc out and aaa jnp lock int xor sub out in addr16 lock pop jecxz (bad) insl pop mov mov inc fs ljmp les cmp add stos adc addr16 mov ss aad mov cwtl xor mov push adc int3 pop pop mov dec cmc jg aas lds pop push xor mov or pop outsl addr16 mov addb inc clc cli loopne fisttpl aas test mov ja jbe cltd mov add pop icebp inc movsl rcrb xchg sbb and adc rol mov ret add adc popfw cmp pop push cmp cmp jns sbb nop mov cmc mov push enter rcrb mov stos test insl out sbb push mov sbb subl cmc stos vcomisd dec repz inc xchg rcll mov jmp insl pusha push outsb inc divb mov pop stc sub insb shrb repz es xchg inc js inc stos call mov aaa cmp push faddl or js mov gs outsl aam ja adc lahf jbe inc push mov pop mov int push fwait jne jle imul inc mov dec or aaa data16 ss (bad) (bad) outsb pop add movsb popa xchg sub xchg jmp adc cmp jle pusha or bound inc push icebp into es sub in and dec repnz mov mov inc mov dec jecxz addl call fwait sbb pop inc outsb add cld xor xlat fmuls add and mov pop add mov aad xor xor dec pop mov stos rcrb cmp mov push (bad) in jl inc inc (bad) (bad) pop (bad) mulb shr adc lahf xor rcl mov lcall xchg pushl loope or jp mov (bad) add sub pop hlt ja push aam pop cmpsl push jne aad scas rcrl das out subl sub adc jg (bad) xorl jbe movsl test cmpsb or scas fadd lds test test xor inc int3 mov fs test pop xchg mulb (bad) in lock add sbb mov aam or in cmp inc add js add or cmp sub outsb into jae xchg xchg test stos xchg test jg lret stc cmpsb ds cmp lcall jecxz sub mov dec ret cld fwait inc xlat clc or mov (bad) push fisubrl loope mov and and mov xchg add jb pop rcll mov sub and add test dec cmpsl shrb roll mov pop push add sub insb adc sbb xor xor out (bad) sbb xorl adc stos int mov loope dec ficom mov pop insl pop (bad) aad ret movsl (bad) das je sub mov adc and in stc jmp shlb ret loopnew (bad) pop orl mov (bad) (bad) nop inc adc jl idivb inc or cwtl push mov sbb xor cmpsb cmp fidivl sub movsb xor mov add ret dec shrb push cmp and addr16 flds sub out inc xchg std pusha je dec es add test cwtl out aaa out ja xchg lods inc inc inc test ror fcompl sbb xchg stos pop or dec out arpl inc les sahf fsubp xchg enter cli xchg sub test add (bad) push push adc rol jne fidivl scas mov pop dec repnz out or sbb mov mov cmp mov or dec or out mov scas mov (bad) xor dec push cmp and inc mov mov pop fidiv pushf stos adc (bad) (bad) push (bad) je adc mov test or in stos ja mov ds push cmp loop movsl mov (bad) jbe xchg mov arpl inc inc lahf xchg cltd dec add (bad) outsl mov mov push add sbb and int pop and outsl sbb repnz test add mov mov push xchg add int dec inc ja call mov push mov lods out pop fbstp push pop dec popl fadd dec addr16 pushf (bad) mov adc divl pusha test out mov sub fs (bad) outsl add add out mov out fldl in repz dec les inc push addr16 cltd (bad) (bad) dec popa popa fiadd add sub leave xor mov mov out cld repz popa jmp ss push jbe mov sub ja and scas lret cmp stos xor push or xor outsl add push sbb inc pop mov jle mov repnz mov out inc jns test pop outsb inc in int fisubl jnp inc fidivr fbld dec stos ret (bad) jmp add or jne fdiv or lock sbb xor movd ds mov icebp xchg iret imul push fcompl jle subl lret je mov (bad) fstl jge dec repz mov mov stos test inc pushf dec cmp adc fs shl inc inc xchg nop imul xlat mov sub (bad) lea xlat hlt mov std push jmp jp xor mov xchg arpl out test pop movsl scas sti xor pop in gs mov mov mov mov jp aas mov sbb xor in cmp iret adc ret gs push add sti push int3 sarb xor jo insb ja jne lods or pusha mov dec dec add pop jae popf shrl mov push jmp loope sti out jno xor jp push and (bad) mov xor icebp cwtl pop testl push mov mov cltd push mov push mov sarb incl in rcr fidivrl inc inc jecxz leave lods (bad) mov cmp push push std xchg inc les and xchg inc adc mov sbb sub adc cmp (bad) and and insb sbb loopne adc hlt xlat mov xchg mov inc adc jle mov cmp mov mov xor cwtl repz cmp adc push rorl les push inc push mov in cli push es lcall pop lea or inc push xorl cmp pop or lea pop testb mov enter and icebp push adc sub inc int xor pop xchg dec rcrl mov cli fmul sub fyl2x popa mov pop (bad) jmp dec je push (bad) mov icebp lret rep (bad) (bad) xor pusha inc cmp or fisubl movsl xlat cmp and sarb daa xor aaa mov inc xchg push push mov push jg mov ljmp jl mov sbb jmp popf or popa mov insb sub jne cmp lret push jne enter push xlat pop mov frstor sarl inc arpl xor push sbb mov cs jb xlat scas aad inc (bad) cld inc xlat lcall jecxz add pusha mov mov dec aad lds pop in jecxz fnstsw add aaa lock cli pop mov lds adc mov imul lds xor jmp scas test (bad) mov cmp lock data16 mov lcall aaa xorl mov inc xchg push pushw xor frstor dec das (bad) mov cmpsb jecxz shrb mov xorps pop jmp xchg mov notl cmp mov jne rorl or sbb daa mov xchg scas inc sti sub mov pop mov in scas add out test leave in push cld xchg ret in sti xchg lcall cwtl cmp aam mov lods inc das mov fbstp cmpl insb imulb jl sub pop fwait jle inc cltd mov jmp dec (bad) sub add js ljmp add pusha fwait mov jp fwait jno mov cmp sub or dec dec sub inc jge xor imul xor loope int in xorb jp inc jae jo jp outsl and mov sbb mov rclb cld jmp xchg dec fs push (bad) mov xchg xchg (bad) invd lods lock stc push sbb pop imul push repnz sbb (bad) lock imul daa pushf cmpsl or lcall mov push bound movsb icebp mov xchg add cmc dec mov cmc xor mov xchg test jae jb in xchg mov pop (bad) call scas ljmp inc loopne mov jmp insl (bad) lea addr16 xchg and popa mov call add jg scas lea ss inc inc xchg mov xchg pop aas pop xchg inc xor add adc xchg lea xchg push mov xor or cmpsl push mov push jge (bad) icebp mov adc leave insb xchg lcall in (bad) jmp cmpsl mov xor fsubrl add add xchg shrb inc insb xor cmp push idivb bound aas push xor mov outsb outsl lcall or es mov lods insb loop dec pop ss clc inc jmp xor mov lock cltd insb mov inc pop inc push dec add test addr16 (bad) or test std xchg sub cmp sub cli out dec nop jge outsl mov add add or pop gs cmp mov cmc mov fmul add es jnp cmp stos imul aaa scas shll (bad) hlt inc mov xlat xchg (bad) in xor add or aaa test xor mov dec inc les sub aad sub mov sbb jp dec jl addb mov int mov push imul (bad) aam leave mulb add jg ss jne add movsl clc jno xor mov fdivrl jg adc fcompl push sub mov shrl std cltd push mov into pushf fbstp jg lds pop clc fdivrl cmpsb mov mov xor mov fiaddl xchg and mov test test xchg mov scas jp mov dec fmul addr16 ljmp test sbb dec icebp jle pop movl xchg stc xchg dec mov push imul xor pusha test sub icebp cmpsl scas out mov pop les arpl xor (bad) insl add (bad) mov addr16 xchg cmpsb mov sub ja or cmpsb popa movsl je je pop leave lcall xor cmp int lock or test add fsubr cmpsb pusha fimul in stos fiaddl mov stos fcompl aad idivb mov (bad) pop xchg push je insb mov lods andb push cmp dec mov out pushf mov jb out jae push mov mov xchg ljmp add cmp pop inc cmpsl cmp pusha faddl adc test jl hlt movsl gs loop dec inc insl jno stos test repz jg cmpsb lods enter jp mov xor arpl pushf mov mov out sarb icebp xlat loope aaa inc nop mov xchg jbe cwtl mov scas psrlq sbb insb push sbbb jns xor push and arpl mov dec pop bound mov cmpsl stos xor mov jge (bad) (bad) pop loopne jno sbb dec repz and cmpsl aaa xorl movsb xor int3 dec mov jmp xchg imul mov fcompl int3 dec inc push jnp fistpl adc push cs mov xor jecxz or dec int dec and lods push out iret sahf in (bad) jmp js fisttp test mov push jne sub xor mov cwtl adc mov fcomp loopne xor sbb and push mov and sub or jns repnz jno add sti adc stc mov lcall push mov dec out add daa test mov jbe fbstp movb mov lret add aad xor sub movsb enter stos jle xlat xchg jmp loopne loopne xor adc adc mov popf push and dec add (bad) test aam push enter or clc sub cmc push mov (bad) leave mov sahf out lock (bad) test push clc clc addr16 sbb fimul insb test push cmp or call rolb sbb ds adc loop out or sub sbbl adc cmpsb sub push std cmpsl push and mov pop sbb hlt adc leave jno aas inc hlt (bad) jp mov lcall pop cmpsl jno (bad) jmp push aas add out ss sub sub add sarl inc mov jb cmp push lods pop dec out push loope mov pop sar mov jge aam xchg mov out leave es add cmp rcrb lods inc enter arpl insb idivb mov repz popf and push scas sub pop into scas cmp fucompp or loope das rdpmc rcl gs addb lahf cmpb push xchg outsb and into dec sbb leave sub cmp ss loop sub lods jne lret in cmpsw pop cmp jmp and std enter xchg idivb and pop cmc sbb test pop (bad) pop xor fsubrs fadds (bad) out pop mov dec ret loope dec jns nop nop xlat (bad) arpl outsb cwtl rcll clc rcrl pop inc int cmpsb clc mov mov movsl jae adc ss call rorb scas xchg cltd pop xor adc lret dec adc adc stos test jge mov sub or xchg cld adc es icebp mov stos xor inc push imul sti pusha loope hlt mov shrb loop add jmp pop aas (bad) xchg (bad) jno push (bad) pusha insl dec ret test sti lret loopne or push xchg cmp outsl jns inc mov add (bad) dec or into xor xorl xchg xchg imul mov lods and (bad) adc js int3 pop aam ja xchg mov hlt mov aam pop ss mov mov mov xchg jb xor mov fwait int sub hlt inc les sbb stos and adc inc gs push mov mov out xchg xor ret jno xchg pushf cs (bad) sub loopne sbb sbb pop inc jb cmp pop insb (bad) in push mov nop ret repnz jle and and insb int out add mov xchg lret (bad) mov cmp jb mov mov push dec or repnz leave js push or adc xchg or mov pop lcall rorl ret inc popa add cmovb jge fdivrl sbb shrb fldpi lret (bad) xchg sti das cmpsb fsubs int3 rorb adc aaa jno outsl or lds and xor mov or out push popf mov mov pop cvtpi2ps in add out jle push xor dec loope sarl xchg jnp in xchg jnp sub movb dec repnz add (bad) pop mov mov imul pushf inc repz cld ret bound aam sub jl clc flds out popa incb or jmp sbb (bad) sbbl or inc in inc daa fsubs sahf aas push mov loop push sub (bad) dec je jp mov and lahf scas mov push popa jae sbb sub psubb mov in hlt enter push (bad) shl and cmc xchg test pusha cmpsl loope aam and mov je int3 fstl fild cli loop jge jnp cli ret jge xchg incl pusha int mov adc cmp push je add in push sarl hlt sub sahf cld xchg fcompl add lds je insl setae dec test ffree (bad) daa cli sub fisttpll test and and sti jge mov sub pop add loope mov dec lods fnstcw (bad) repnz xchg hlt imul out scas loopne call jns test push rcll popa jnp jp push cmp cmpsl xchg movsl mov out sub inc xchg movsl jecxz sbb jnp bound in pop jmp daa sbb jge mov xor ljmp push out rcr jnp mov rclb imul mov (bad) pop jg aas inc push mov leave jmp loope addb aaa sti (bad) aas fs in lret js jg pusha pushf inc (bad) movsb dec mov enter mov fs pop adc jae fsts mov mov lock jmp outsl ljmp xchg in and dec out mov pop ret mov add fidivrl cmp push lret test aad out adc and add xchg pop cmp jmp dec jp fs xchg sub pop xor idivl data16 cmp mov add ss mov xacquire out and adc push loopne cmp into adc sub sbb xchg jae fdivl push mov leave jns or and movsl dec and mov adc arpl lods xchg lret adc jle ss aam inc push arpl mov inc icebp mov push loopne xchg push push dec mov mov adc fs out push push pusha clc int mov (bad) xor cmp (bad) nop loope mov pop add movsb ljmp pushf ficomp mov stos jno movsl xor mov mov mov in add adc (bad) mov and xor fucomp movsl notb aam cmc xorl sarb and (bad) mov bound mov sbb movsl bound pop scas stos insb adc (bad) mov out les adc call sub das lds leave int add (bad) in cmp stos lret mov int insl jecxz push push jnp lea inc (bad) xchg dec sbbb mov aas pop clc lcall or icebp jno push in mov inc adc adcl mov jle js mov adc call decb and rcrb or ljmp jmp sub cwtl dec pop pop fcoml stos adc push push sbb dec pop (bad) aam mov sbb loopne stos sbbb imul repz test lea negl mov lret pop imul lds fistpll fcmovb ficompl pop mov ja push inc rorb (bad) ret add mov mov data16 lahf pusha leave sub sbb or mov jns sarb sub add (bad) mov int arpl sarb daa lods xchg in push sub stos inc lock jp mov mov pop faddl and pop pop mov enter inc imul mov add jnp insl jne sub adc mov xor outsl cli pushf mov dec cmp repz pop and mov stos xchg das xchg inc ficompl pop leave (bad) adc mov enter dec pop push in xor test or jmp pop push jge sbb popl stc in sub inc addr16 push loopne add arpl or bound pop iret and cmpsl loopne loope cmp (bad) std int add jnp ret hlt lds push pusha mov adc inc jnp ret bound lock adc int3 jmp fdivr pop dec leave push cmp ret rol rcrb sti nop xchg sti adc out rol mov lock ja lahf and push cmp (bad) outsb cmc stos test pop aad lock stc sti add stos xchg push mov push mov cmp rolb add in lret dec ficoml jmp mov adc sbb jnp les ret js les lods std addr16 add lcall jle lods mov lahf out ds nop push iret icebp or cltd lcall pop je ucomiss fcoms dec sub into movsl pop leave push iret cwtl sbb jnp scas mov mov out mov movsl jo dec push incb sub repz test lock mov mov mov test jecxz mov in and repnz mov in call cmpb and insb inc or and sbb mov jg repnz data16 in adc push mov call test mov popa into mov jl pop loopne addr16 mov or lcall (bad) call popa sub sarb mov jb fwait or and pop push int3 push pop test scas cmp (bad) sahf mov xchg dec aas add shrb mov lret cli ja mov je jo (bad) mov xor jo notl scas mulb jae gs jp repnz xchg rolb sbb or or divl fwait push sbb cmp cld ja fcmovbe jle fwait je decl fcmovu out jecxz xor into jb (bad) jb push jp jl lock sbb push (bad) xchg arpl and push pop in xchg loopne mov push sub sbb sub xchg fstl (bad) (bad) cli dec lods xor cmp xor popa enter aas mov pop cmp or lahf add subl mov loopne jae out (bad) adc mov int3 xchg sub sahf inc pop fldenv rorl jb leave fildl inc daa mov jge pushf in lea lahf and jle adc and scas cltd dec xor add jg jp ficoml addr16 adc out inc sub push and mov jnp dec xlat cmp dec and fiaddl shlb insb or sub jo (bad) ljmp mov mov sbb test addl cmp add jbe inc push out mov ret mov jno outsb imul mov (bad) push push nop cmp sbb jecxz jge cmc xchg adc out mov ret adc test dec ret sti cmp pop lcall out ja sbbl sub cli add push push adc into ss adc sbb (bad) fcompl mov (bad) (bad) call out test outsb xchg (bad) or mov push or dec cwtl and dec mov es xchg sti pop imul jle mov fisubl lcall stos sbb push imul mov mov pop cltd cmp stos push push cs mov pop out dec xchg imul bound sbb mov fidivl push or divb ljmp pop les loopne jp out cltd sub leave cmpsl ljmp rcll sarb push dec lock cmc and mov add jne das cmc outsl test aas pop fstl xchg mov popf adc mov adc push jo and clc imul and fimul mov cwtl adc cmp pop push lds nop popf and sbb add pop dec fs pop pop (bad) adc scas sub sub xchg outsb shrb push pop jbe pop mov popf cmpsb pusha adc shlb xlat sbb (bad) and cmp arpl pop inc add shlb nop (bad) fadds lock sahf sub movsb stos test test mov xchg addr16 imul repnz push aas loopne push stc movsl mov aam add rolb xor shrb adc mov lods xchg or rcrb ret jmp adc cmp addr16 adc pop pop cltd cwtl imul out out imul inc sub xchg loope in jb xchg jns out cmc loopne sbb fstps cmp sbb push sub movsl push lock dec sahf jb data16 adc ja (bad) cld mov cmp iret xchg mov out mov mov lcall push shlb cmc sahf pop lods or mov (bad) imull enter sub pop pusha and mov (bad) ret stc add jb lock scas (bad) or or xchg popa and sahf adc loopne inc rclb jne adc push jp mov out cmp aam movsb xor mov jo push sub or fdivp mov dec xchg push inc mov fdivr jge xchg sarb mul dec dec (bad) sub test inc cmp ret jns mov enter imull pop cmc jo adc and mov fistp in pop rorb xor stos popa pusha das xchg cmpsb lea mov (bad) sbb loop pop adc out cmp or shlb fs data16 push dec lock and (bad) in mov repz mov mov mov push loope add in fsubr call push pushf cmp mov inc lret std push fwait cmp mov mov fstl dec xlat cltd cmc mov or sbb add cmc and hlt dec adc into mov mov push lahf sub xlat addr16 mov mov icebp xor xchg mov bound (bad) xchg mov loope mov mov cmp test jp mov ret cld stos cmc jb jl add std push jl dec pop pop sub in call fidivrl or xchg jo call or dec lock pop sbb or cmp popf sbb outsl imul push mov lds aam or mov popa mov loop mov lock (bad) push inc and popa mov sahf shrb (bad) xor push and sub xchg jo xor mov outsl push testl insb xor inc loop add pop xor cmpsb push adc mov xchg arpl adc mov and leave adc sbb les lret mov jp stc je rclb ficompl dec (bad) pop push decb std push addr16 rcrl sub inc (bad) sub mov mov and xor test push xor push lock repz adc sarb adc sbb or xor ss outsb (bad) jns pop (bad) xlat add imul into or mov xor fnstcw lcall pushf mov pushf hlt in xchg mov outsl iret pop xchg cmp jno mov (bad) cwtl cmpsl jne mov ret mov je mov mov lods mov jle pop xor pop (bad) pop mov popf sbb insb mov dec and and jb,pn add xchg test mov imul aam dec xor add or out fldln2 ljmp stos mov pushf insl xchg sarb iret push add mov lret stos and inc jno lods (bad) rclb mov out test scas stos jns lret lods iret cmpsl mov test push mov jge mov pusha fiaddl iret addl inc sbbl add dec lods lock iret iret add cld sub xor push notl push cwtl and xor jb andb add mov jae daa jbe rorl xor xchg adc push imull push adc pop pop push pop cmc movsl dec mov int3 adc mov outsl rcrl fldt dec mov sbb out arpl dec (bad) sti mov sub loopne call adc mov leave add loope adc mov aad fistpl lret dec xchg (bad) cmp out sub adc out arpl pop pop clc mov mov stc test iret push dec mov adc fs xchg rorl jmp pop or sub fcoml mov jne lods add test sub push add movsb xchg inc add adc sbb (bad) stos and loopne and fimull jbe adc cmpl and dec roll push xor mov jmp pusha push (bad) popa cs pop sti push mov pop jnp mov sub sbb test movsl pop xor mov fldz sbb cld xor pushf sub dec scas (bad) dec mov scas adc bound add push and pop sub adc xchg fbld xchg xchg out push dec enter dec lods dec mov nop sbb cmpb fstl xor (bad) xrelease in loope (bad) (bad) aam jns dec test push (bad) (bad) xor push push mov cwtl jns push lahf and xor fcmove cmpsb dec sbbl jns je movb js xchg lock subb imul pop scas inc std int3 lods mov lods lcall mov movsl cli jge dec adc les xchg and and aad push imul lret xchg mov sub mov mov or notb lds dec dec inc mov mov sarb popf addr16 bswap icebp cmc repz xchg call adc jg inc inc pop fdivrl imul push jle push cmp xchg lcall sub xchg dec aam mov sub bound lret mov sub pop fmul mov cmp dec adc pusha jo dec inc sbb push dec mov and adc sbb es inc mov jmp xor insb mov xchg xchg outsl and not ret cmpsl imul les mov push cld push or push jne (bad) pop ja lods in dec imul out dec test test hlt or xacquire ds jb in ds call pop test or cmovp ljmp inc jno or xor icebp dec int3 loope dec jmp stos test clc jle ret pushf cmc ljmp mov sbb inc jle jae (bad) pushl int3 test popa cmp cmp outsb roll mov fwait adc inc loop pusha es popf xor adc mov mov add pop mov popf push or push mull push (bad) mov aas loop shlb inc push lret pop aam mov loop xor loopne mov push cmc jo dec inc loopne push fisttp test rcr sti int3 rcr mov clc and add pop sub pop (bad) ljmp jge dec enter sahf sbb repnz into adc cmpsb jnp dec mov call lahf andnps aad mov sbb in push push sbb sti inc sub enter (bad) loope push or stos jmp push loope push push push xchg mov es pop jo jg jecxz add sbb fld cwtl (bad) cmp jno fsubl cmp mov xchg jb roll add pop pop stos add adc xchg repnz out xchg add add jg mov mov inc fadds sbb repnz hlt mov inc xchg (bad) dec icebp dec xlat loope jg sub lret mov popf sti or sbb jb fisttpll cmpsl out mov sbb repnz sub inc fistl cltd pop xor scas ret xchg fld out shll fsubrl ror fisttp lcall mov cmp jnp add mov pop sbb pop sbb inc mov ds xlat sub test inc adc or bound loope and rcr cmc inc mov dec iret cmp in outsb in in push pop jecxz push pop push cmp or adc ljmp int jns ss fwait leave scas jl add xor xchg cmpsb fdivrp jp test call rcrb notl jo or jmp addr16 lods sbb jne fidivl mov add in outsb in iret mov add mov (bad) call mov rcrl pop pop cmp cmp push test stos call jne add (bad) dec (bad) xor cld xchg xchg insl gs rol lock jne add xor sbb (bad) icebp mov ja roll or repnz scas je mov mov test inc ret mov ret or xchg push mov fdivl bnd jne xlat sti movsb add add lods mov mov ja mov jmp add and sbb imul rcrl subl mov into dec or cmp popa sbb (bad) sub (bad) loope cmpsl leave js inc xchg (bad) pop in push mov lcall popa popa cs ja xor mov cmpsb cld pop pop call jno rcl das jae pop je popf les int in sbb clc shll pusha or push mov inc fadds call aas push inc inc addr16 mov mov mov xor jmp cld inc jmp fdivp mov ret jl push adc pushf xor mov jp xchg pop pop xor aas mov adc inc xchg push out lods dec mov push mov mov pop mov jae xchg clc or sub es insb adc lretw std xlat or inc cli pop jmp dec sub shlb ss scas test loop test push sub cmp mov cmp (bad) mov mov adc das mov xchg jmp stos cmp ss mov push stc sbb lcall sub imul adc inc mov adc pop mov jg xor push pop inc rcrl fbld pop in cwtl inc pop pop pop and addr16 pop and xor pop arpl aam cld adc mov xor sub loopne and mov aaa adc in or lds push cmc cmp sbb jmp popf repnz rolb stos popf inc push arpl outsl test sub fucomi jne xor insl stos (bad) flds sub sbb inc dec mov or pop scas jbe gs mov xor xchg xchg js ja sbb push mov xchg xor in lcall in sub repz std lcall jp leave (bad) lock jl icebp adc pop rcll add xor cmp and pop sti cmp (bad) jmp inc ret cmp push lods sub sbb mov fidiv xchg (bad) sbb incb aaa dec pop leave fisubl aam out sub sub ja leave addb popf pushf pop mov xchg adc into leave pop xor mov push fcomps pop fimull rcrb push push jb adc and pop push and and push jmp push dec ds ret js mov mov test cmp insb stos or xchg movd sbb das int3 and fdivr mull (bad) jno adc inc xor ljmp mov jne adc adc add and lods push sbb sahf push jo test push cmp adc into inc xor mov dec loopne lahf cmpsl sub mov fstl aad dec icebp xchg fdivr sbb jmp push mov xor pop sbb pop pop jb hlt lds testl jecxz loopne push inc jp js ret and adcl cmpsl call mov mov idivb and dec fsts cmp add jo jo add into mov xchg jl add lea dec (bad) ja int3 and jb push stc add daa add notl push xlat mov mov aam pop mov (bad) cmc cli pop cmc sbb jp push lret cld outsl and or jecxz insb lods xor or pop je add outsl cmp inc xchg daa lods xor push fwait add shr mov and loope or inc xor cmp fcomps test sbb fcompl imul mov lods ret or int fildl std jmp sbb mov lret xchg pop lods pop sub (bad) nop cmc adc add stc stos xor dec into jb imul outsb sub arpl or dec mov jle cmp sub xor mov lods stos mov or cmp and mov loope int pop inc rcrl lds test test pushl dec jmp push pop jle jae pop jl pop jl sbb nop mov pop cmp cmp xor adc xor cmp test clc es lahf add pop inc pop push pop stos cld lret cmp out jae mov data16 mov insl dec mov adc sbb insl test cld dec lea lods cmp movsl cmp test and cmpsl clc add aaa movsl xor pushf cmp sahf cltd xchg mov rclb gs sub lahf loope loop jo pop mov cltd (bad) adc cld inc mov cmp push sub sahf adc sub sbb sub pop dec mov mov inc mov cwtl ret sbbl ret cmp jnp push fisttpll loope cltd xor repz sbb pop dec inc test push cld push jmp cmp mov fcmove xor pop mulb cmp and pushf shr (bad) push add je imul or cmp aaa data16 jle inc cs mov add mov sub (bad) daa push movsl mov pop imul fiadd icebp fisubrl mov pop cmp push fild add das repz cmp xchg enter out sbb inc dec les pusha out out push out sbbw xor je cmp cwtl xchg xor inc adc and push scas pop xchg mov incb lods inc inc rorb mov (bad) xchg dec sbb mov aam mov outsl add inc mov jmp stos add dec cmpsl ds sub xor dec xor int3 xchg enter pop xor xor vorps lret dec add in and fs and js mov (bad) mov dec cld loope mov ds (bad) push clc in inc (bad) pop cld jbe shr cmp cmc adc xchg xor and pushf mov out sub pop scas divl sbb or jg sarl test ret adc dec gs stos mov bound pop fisttp out out jae cs cvtpi2ps inc daa dec pusha jp jp mov sbb test xor mov dec or loop jg dec cmp int into rolb insl cld mov jg pusha pop add fucom aad mov and cmpsb mov stos xor sbb imul sti mov fadd lods mov lds xchg pusha pushf mov push movl call pushl pushf push lea mov pushl movb lea call pushf lea jb setle rdtsc movzbl movzbw mov lea shr bt movzbw imul rcl lea ror not (bad) repnz push adc push movzbl bt cmp mov mov shld test mov test bt pusha pusha cmp jmp stos pushf push mov pushl lea jmp push clc roll inc xlat dec mov lods mov mov cmp ror cmp ja xchg test mov jb std and dec ja loope mov sarb mov dec je stos push adc jle stos popa adc inc cld and and incl jle ret in or or out scas jle push ds add divl andb ljmp stc xor xlat test inc insl push scas test or out push into divb rol pop sbb mov outsl inc fwait out fstps out inc push jb push mov inc test cmpsl cmp pusha mov mov test mov pop or adc outsb je outsl insb push gs imul fs jne add inc rcl mov cmp jmp jmp repnz gs or cmp shr aas out add push lods xchg cmp sar rol pop inc in push jp mov enter sub arpl (bad) cld (bad) vpunpckhbw adc mov (bad) inc or mov (bad) mov pop cli and adc in mov or push leave enter addr16 roll test scas cli out sarl pop aad ljmp aas jno (bad) scas cmp lahf or mov mov and sbb ja push add loope push test pushf fldenv call or fisub pop pop xorl inc adc mov sub sub ret ds cmp xchg test mov sbb pop repnz cmpsb (bad) (bad) fadds jno mov mov aaa xchg xchg sub mov cs pushf div incb lods pop or sbb (bad) cmp dec in outsl pop jp test (bad) mov mov loopne pop sarb fdivl xchg into xor outsl mov adc pop and mov mov jnp sub or push stc xchg jbe pop and cltd push test xchg sub mov mov xchg (bad) in adc icebp or out jnp aaa sub (bad) negl mov add das and jge cmc push jl pop fildll xchg dec xchg push int3 stos jno xchg mov (bad) jmp stc sub (bad) lea test and ret repz dec xor lcall cmp xchg cli popa test fstps jmp andb enter add dec sbb dec xchg leave or test out dec mov sbb and lret (bad) mov or pusha adc push sbb sub and outsb subb stos inc iret sub cmpl adc mov adc (bad) (bad) in inc imul lods movsb loop popa pop inc cld mov sbbl rcr push std xor or lds shrl inc shl (bad) mov mov and bound cmp outsl out dec out icebp or adc pop loope sub cmc and jg or ret inc lret aad ret fdivs sbb sub dec fmulp aaa cmpsl arpl adc fsubl rcrb jno in lcall cmpsb scas cmp xor xchg mov jb insb sub (bad) (bad) and popf lods xchg frstor sub negl sbb sub jbe setae mov cmp (bad) cmc xchg cltd leave push jnp add and jnp popf pop pop outsb mov and int3 dec daa out xchg mov daa xchg xor and dec ja or lret sahf gs mov out mov mov or mov cmpb enter add test repnz or lock decl imul popa xor arpl add adc subb jo pop sbb fs scas dec xor sub popf sub das adc (bad) cwtl call test and (bad) clc imul jnp push jne or jo repnz push rorb jl imul xchg push into movsl lret jecxz inc cld repnz (bad) jo scas (bad) cmp xchg (bad) adc inc push cs (bad) cmp lods fwait popa add (bad) jge or adc loope mov cmp (bad) add int3 sub stc (bad) jmp jp lods js or xchg lret test add stos (bad) xor sub cmp dec push ret cmpsb push xor xchg or mov ficomp add and inc push add xchg pop push and dec std test jmp mov sbb les cltd xor xchg jl adc xchg addr16 test jmp mov adc test int or fidivrl push sbb iret pusha fs in stc pop cmpsl out ss fstps cli dec mov jg es xchg movsl fisttpll mov cmp shl movb call movb call mov push movb lea call call jmp movb dec call push movb add call call call xchg call lea jae pusha lea jmp pop int arpl or cmp mov fcmovne jne insl xor jmp rep add sahf mov es pop adc outsl jae ret js mov xchg pusha pusha (bad) cmp or sub xchg sahf add les into cmp in jo push mov xlat cmp mov popf ret orl add mov icebp lahf jnp fimull jns or lds push mov lods psubsb mov fnstenv xchg insb sub adc xchg pop mov inc adc dec inc repnz xor loopne cmp push imul jp or loop int outsb les and or mov pop mov mov ljmp test jge sub pop inc sbb sub and and sub lods push lods lea dec out out popa stos push and mov xor jno sub cwtl popf mov into es jo inc xchg pop into push lods sbb cmp stos (bad) dec cltd js aad pop xchg aaa mov push inc xchg dec stos (bad) aas mov insl notl nop xchg and es or lods (bad) push xchg arpl das lea (bad) inc (bad) mov mov bound push xchg dec addr16 mov (bad) sarl int dec pop out mov lcall rorl scas pop and xlat xchg stos scas fldl xor pop cmp adc je or xor add ljmp add into aas xchg loop,pn lret lock lcall lods jno mov push test dec add insb xchg retw sbb sbb je or xor pushf shl pushl clc cmp clc add jmp movzbw lea jmp pushf lea jmp jmp movb push lea jb push shl mov rcl not sub sbb not mov shr add pusha pushf movzbw setb pop call jb pushf dec xlat or push in (bad) pxor pop shrl andb pop inc push mov cs lret aam xor xlat es (bad) xor sub pushf pop pop (bad) in jp jno into clc addb jp jo insb fnstsw push je out inc scas outsl cmp dec lock mov movsb xchg div and push mov mov pop ljmp xchg push cmp xchg jge dec (bad) out inc add push clc inc cmpb xlat mov in sbb daa or xchg or jnp fcomip cmpsb fisttpl sbb not pop int frstor cmc ss js std mov jo movsb adc cmp shrl enter rorb xchg dec xor outsb pushf (bad) fidivl xor add lock das mov sbb jp (bad) (bad) fs sub or push sbb lret add push mov or cld gs mov fsubrs push repnz rclb mov mov insl out jecxz test sub dec and mov in das add roll pop in adc leave sub lock mov mov int in xchg cmpsb scas (bad) push add sub xor test repnz (bad) xchg push es adc push test sub mov and test add stc pushf pusha bt cmp pusha movb pushf lea je pushf lea jmp sbb or cltd rcrb cmpb mov push mov outsl sub stos aad ss dec sub lds or sub xlat daa push repz push add jecxz lahf add add jns ja mov mov packssdw push pop ret js and (bad) push pushf sarl cmp xor jno push clc fidivrl les test pop push or loopne fmulp xchg jg sti sbb (bad) adc aaa xchg push fcomip push mov sub sahf mov push jbe inc cmc lea shr bsf rcl movsbw mov stc call out and adc or dec and repnz (bad) push mov jge fwait mov scas jmp es jmp xlat mov sbb adc cli js sub and jne,pt in xor mov mov call in mov or cwtl iret (bad) call sub insb mov ret mov sbb sarb push hlt jp pop mov sub push sbb xor pop aad xchg mov pop (bad) ficoml xchg sbb mov lds push push cwtl cmp subl push stos dec mov (bad) (bad) jmp bswap push lahf call cwtl push lea pushf push pushf pusha lea call call pushf lea jae bswap lahf lahf call stc cmp jmp jne adc rorl lcall cmc adc and mov dec cmp lcall adc icebp and jnp aaa push and add clc add je xor dec dec gs mov test int cmpsl addr16 cmc xor insb push adc push inc dec movsl pusha negb sub lds fs out (bad) clc xchg push or lcall xchg data16 (bad) lret add fist inc pop mov test pop sub frstor loope sbb (bad) bound lock in or cmpsl lods or cwtl mov sbb mov roll cltd sbb cld add lea movb lea call jmp dec btc dec dec clc xor not mov bswap mov lea not lods bt stc pushf neg jmp iret pop jae fmull mov push daa lahf jnp push jnp addr16 pop lcall or arpl and xchg ds fmull repz xor push adc out sahf xor sub or sti sub into cmp or fdivl je fistpll leave sub cli jno xlat es jnp sub jg out je xor popf lahf lds sti xchg push cmp adc or mov (bad) (bad) out push inc ficoml notl cwtl mov mov movl jmp jle mov push lea jmp pusha movl pushf pushf pushl movl pusha mov movb lea jmp lea jae bswap xchg jmp lea jmp bts mov clc rcr mov push rcr mov stc pushf cmc mov cmc bt pushf sub call jmp and add pop sar push je test in cmp mov cmpsb into mov xor dec mov pop stos jmp out xchg jge leave cmp out stos mov sub cs cwtl int pop (bad) jnp inc mov push daa sub add stos loopne push fistpl andb stos je xlat jle sub pop ljmp mov out adc mov fbld out jge mov xor push jno push or stc jae pop loope imulb int3 (bad) aad cld aas mov addr16 xchg call sete add cmc add add pusha mov bt rol (bad) lock pushf jmp jmp mov pusha pushf pushf cmp call mov or test adc lret fstl dec mov imul orb in lret jbe or sbb mov (bad) mov repnz adc cmp addr16 sbb cmpsw fs lods sbb lock mov inc call inc iret js inc sbb gs inc cs adc repnz in out cmp and add loopne fmuls shl scas mov mov icebp in lods out movsb leave inc sbb outsl in bound popa push pop or mov jo cwtl mov out jl push pop sub pusha scas (bad) ficom cmp xor cmpsb cmp add fmuls push xlat jp imul mov std cs add xor push sti ss bt cmp shl cmc test bt add mov jmp bsr shrd shrd sub pop movsbw movsbw call call push lea jb bsr sar cmp lahf pushf sbb lahf not push lea cwtl mov jmp pushf lea mov jmp lea jle movzbw rep pusha pushl call movzbl lahf sete lea ja call call mov mov lea je aad sub rol mov bsr bsr or bt mov shld shr btr mov pushf lea jp or call scas and fmuls cmpsb lods out dec ja jae call push es cmp push adc jb add bound pop (bad) jg aad xlat jmp fnstenv ret lds mov push lods out pop test es and push in loopne fmull push dec inc roll scas loop push fxch (bad) cmp and fdivl mov xchg sti xchg fcmovnb sbb inc xchg aas jp inc (bad) xchg into xchg fildl push xchg clc adc fistpll lds (bad) dec and test sub es ficompl (bad) mov pop mov icebp rcll push sbb xor and ficoml int fstpl or inc mov loop lds cmpsl pop jnp mov jp adc divb mov les fadds fbld adc mov xlat or xchg ja jmp imul das repnz fisubr mov pusha mov mov and addr16 and cmp adc lea xchg cs mov lret pop inc jnp dec popf mov in les cmp jge mov jo std cmp mov push stos inc in inc mov (bad) push sbb ret jb (bad) hlt cli das es mov jg,pn jle nop scas jle adc push mov sti bound push lock xlat jns inc sub or jge mov pop (bad) pop lahf scas add jbe dec cld pop lock xchg add cmc jmp xor pop jo or jl lret and jmp dec pop add push subl js push lods data16 push pusha sub cmp adc push pop aam jecxz add (bad) push test pop cmpsb (bad) lock push out cmp das lea out adc insl ror and mov mov xchg cmp cmp bound push sub int3 aaa or mov ja ja mov cld pop in sub push push popf xor dec xchg ret jo add stc inc lcall jge inc mov dec dec and popa rolb mov outsb xchg stc add xlat mov mulb les insb test xchg xor xor outsl mov add ror sti data16 mov add or in arpl aas out lsl jecxz dec scas mov pusha mov mov jno ret iret sub push loop jg arpl xchg lods mov sub xchg push inc xchg mov shll xor pop daa lea pop fst inc dec mov dec dec mov xor push cltd aas inc outsb dec in pop test lods nop jle xor in clc lret insb aaa loop and jae pop cmpsl mov movsl pushf cmpsb push jno fsubrl leave jb imul mov cmp sub mov inc cmp dec cwtl sbb sbbb sub xchg clc stc xchg push fsubs jns inc xchg cmp pusha jmp mov mov in inc jg sub cmpsb hlt in out in sub sub and cs into pop (bad) in cld shl inc lods ret fwait ror xchg xchg or dec (bad) mov push mov pop adc movsb push or mov lock pminsw nop gs lods xchg push in and fnstenv fwait outsb xchg inc mov loopne push and les push repnz mov fs push cltd mov (bad) (bad) add jnp cltd mov sar scas test xchg stos (bad) cld mov push jle and mov adc loop xchg imul test test jb sahf adc cmp lds in inc sbb (bad) leave sub test mov xchg xchg pop dec repz shrl outsl xchg jp and fistpl mov scas jae inc fldl2t rcrl xchg mov clc jle,pt push xchg push mov int3 inc inc test loop rcll and cmp lds push hlt mov sub ljmp push outsl lret mov ret sub add movsl scas lds roll and lea jae lahf not movsbl lea push jmp test mul or sbb into rcl in es push mov xor lret in roll inc dec pop pop outsl xchg je ja sarl mov ds inc pop mov dec imul outsb jne mov int mov dec mov sbb lods adc mov lock mov mov fbld bound mov mov jg adc xor dec leave add pop push scas push jecxz sti in loop ret scas out clc or mov je repz mov out les ljmp (bad) mov add mov ja adc adc es loopne mov data16 pop fcmovnb lret loope xor shrl xchg hlt mov ds scas sahf pop fsts mov pop xor jge clc cli mov imul (bad) cmp mov jb xor lea push loop mov jno popa enter sbb mov stos ds sbb xor (bad) je jb jl rdtsc lock cltd pop and ljmp fwait xchg and repz dec jge sarb into insl testl push sbb lahf lret (bad) mov (bad) or in add dec and adc cltd mov adc sbb pop jbe pop test aad stc inc mov inc fcomps sub out loopne cmp mov loope loop mov int3 int clc add pop out gs fs lret inc xchg cs lock fs in cs pop mov push mov (bad) out pop out es jne xchg jecxz sbb incl mov and jecxz sub mov in xchg push nop cmp into aaa mov (bad) sbb sub and outsl aad movsl insl mov test jecxz mov (bad) jo add jl les mov ja (bad) mov or ret data16 adc cmp movsb lea dec jecxz lahf aad xchg jp xchg xlat pop idivb fs dec repnz mov or enter mov add repnz int3 loopne inc fcoms mov cmpsb js data16 push cmp cs lret ds pop loop imul adc xchg inc ljmp pop mov adc push lea add arpl (bad) aad pop lods cmp push push iret xchg stos xor fs shrb lret mov sarl adc sbb pop cmc ds (bad) jno lock pop xor sbb adc stos jmp mov or gs dec mov lods dec ret xor xor push pushl ret movb lea call bt mov test test test clc cmp pushf jmp cmp adcl or dec inc andl xor add rcrl push jge test rol xor inc xchg pop gs xor xchg in push in adc ljmp xchg clc mov cmp int addr16 push mov je and sub cmp aas mov nop lahf push int3 mov cmpsb movsb lods cwtl cmc sub data16 jle stos cmp cmc test or outsb cmp cmp adc push mov jl (bad) and jo enter (bad) imul inc mov cmpsl in and mov data16 in mov sub (bad) ljmp jno mov or das sti push push jmp lea popf cmp or mov imul xor in addb aam pop (bad) mov push pop cmp mov mov pop jo fwait ret jno insl mov dec aas pusha sarl cmc sahf nop scas dec pop xor cs mov mov push fwait mov nop jbe push lods inc mov ss and jno std scas sub cmp sub aas jle shrl inc aam mov sub out dec mov push fnstenv aas xor mov loopne cmpsl insl gs jns shl lcall sub out jg or lods add (bad) iret and fldt jmp notl adc cmp jecxz lods xor sub sbb adc xor sbb dec dec sti push jecxz (bad) push test scas dec adc fwait push lret iret dec or mov or jecxz inc leave subb cwtl mov mov cld dec sahf stos stc adc xchg cmp mov testb movsl fstpt xchg mov push push adc shrb pop fiaddl lea inc (bad) stc ffree sbb (bad) pop lods xlat sahf outsl std lret std nop jle cmp aaa dec ljmp int int3 mov fwait dec and insb idiv ud2 or aad cli ja mov cmp loope cmp fsts mov lret lods subl repz lods lea fldpi mov js aad jge mov adc addr16 pop popa rorb les push add data16 es mov inc or xor hlt pop add pop std std adcl addr16 mov ret jne xchg insl int (bad) lods sub rcrl pop mov xor or sub rorl push aam pop lret add in sub cwtl cwtl ss test int and outsb loope enter push sub in xchg push cmpsl les xchg mov enter aam call rcr mov btc or mov dec mov neg mov (bad) imulb sbb push dec not mov neg lahf bsf bts mov bts inc sar sub pushl and shrd bsr mov or mov jmp movzbw mov pop push mov mov pop pushf pushf pushf pusha pushl ret sub stc bt cmp call mov cltd sbb or popl in xorb push inc repnz add icebp cli push (bad) push (bad) mov inc adc test sbb or movsl mov aas neg outsl shr pop lret out jle ds pop pop gs xor mov bound xchg mov punpckldq dec cmp daa pop mov ljmp in dec jmp aam ja pop fwait notb jle sar fcmovnbe xor call lds sub es ja icebp pusha mov adcl es hlt aam std mov aas cmpsl lds int3 dec fmuls jg mov pushl push dec aaa cld lahf push call aad add mov adc xor hlt lahf ljmp out dec mov lret jns test pushf xchg push test stc xchg fs int3 ret push mov xchg popf xchg scas enter jmp mov xor lea or sub pop add push jp movb into push notl lods insl pushf jg adc pmaxsw sbb xor lods add pop inc cmp cwtl bound je xchg mov repnz pop fcom cmp push xchg inc into push xor lea sbb push pushf xor scas aaa dec mov mov mov xchg movsb loope mov and mov add call cmp mov push test or pushf std pop sbb push (bad) test mov subl pop insb jne test (bad) mov sbb inc pop bound mov fsub stos imul xor jns repz aad add aad decb aam xor cmp aas out xor mov addr16 dec push mov arpl in stos aad sar out xchg ret adc cmpsl push cmc jge sti push push mov add aad comiss jnp dec and inc lret lret or xor popf xor cwtl cmp ljmp test inc notl rolb hlt sub aaa dec xchg lea je movsbw pusha lea lea jmp call pushf push push adc mov lea jb pusha call dec call pushf jmp jmp push inc push push dec dec dec cs insb add out cld (bad) inc fildl cmp rol mov cmc test jmp cmp cmp not cmc test cmp clc add stc cmc cmp jmp mov pushf pusha pushf pop mov lahf lahf mov not mov pop call repnz scas sbb ja adc dec (bad) xor inc push lds das xchg cmpsb bound dec loop loop jl add mov jmp pop movsl pop push out mov test mov cmc inc es push popf jg and or and and mov aad push jmp lcall xor xor push notl shl inc std in xor jmp movsb dec fcompl mov movsb data16 in cmp (bad) (bad) and push mov popa test lds aad sti sahf int3 mov dec jo dec int3 bound jl push test fild insb add scas sahf test adc push fidivl movsbl test ret add inc xchg jno fwait iret imul adc adc (bad) rcrl fnstcw dec and push int mov cmpsl (bad) push enter inc inc imull ficoml ficompl int lret jae dec iret imul adc or or mov fbld xlat push mov fistl ja add xor std mov rclb xchg lret mov ss cmp pop decb mov ffreep rol mov and jge lods jl jp pop pushf dec cmp (bad) repz rcrl mov cmp in mov mov sub ret sbbb inc test xor mov pop mov and (bad) ds and cltd fwait or inc (bad) xor std jmp inc pop jb (bad) and xlat pop push push lock add mov mov or mov (bad) push leave adc mov inc movsb inc jns add scas or dec mov mov outsb mov (bad) cmpsl xlat and insb mov sub sub ret dec xor add rcr in (bad) icebp xchg jns push cmp addr16 mov in pop adc rsm xchg or lcall add aas lcall push punpckldq inc push push out aad call cmp ljmp cltd fdivrl fs (bad) inc idivl test sbb cwtl add movsb aam jmp popa and add pop mov fsub jg ja sbb jae lds je cwtl cld pop test xchg mov sbb adc repz xchg pop pushf mov call add inc gs imul outsl outsb dec outsb outsw push imul dec popa imul jb inc imul jns popa je inc js jae jae mov or jns push mov add test adc mov into fimull fsubs enter popa pop cld hlt dec rorl test das xor pop in pop sbb xchg es test int xorb (bad) add cwtl out dec pop push pop mov jne xchg sbb sbb mov fwait or dec jmp jle pop aas jecxz adc lcall mov mov bound (bad) bound mov mov daa gs adc into fsubrs aam xchg mov lret ds xor fs imul pop test bound sub hlt or push sbb das out das repz imul xor das lahf pop cmc inc mov jmp out insb mov lods daa stos xlat mov sub sbb lods pop int3 or jo jge mov sub push inc push dec inc xchg jl pop ret sub in lret ss xchg jecxz out jl and prefetch movsb cltd pop scas cmp js jbe push insb cmp iret ja movb lods sar inc add mov arpl stos push stos add inc (bad) inc jb ja rcll cli cmc or movsl into pop dec data16 xchg add pop mov fnstenv fisttpll (bad) out cltd and push movl mov mov mov lods add jp dec es scas xchg push add xor mov cmp dec mov hlt add mov ffreep sbbb jb sti jae int3 sti push jg lock dec cmpsb sbb or adc dec add jmp mov cmp sub dec stos sbb xchg fldt cwtl lea ret lcall adc loopne mov scas push iret dec test jg push add add cld ret mov fbld imul pop test (bad) xchg push out jns inc inc out jnp (bad) xor pop in pop pop shlb pop aas out das xor jo in inc enter push xchg je push jp rcr pop insl lock adc pop and clc pushf adc cmp aam pop adc and adc xor fisttpl push jmp mov mov cmp jmp pop inc leave sbb or mov loope mov push addr16 sbb aas push gs add mov push test leave pop lret out mov jno out js xchg and mov or (bad) daa rolb int ds mov cmp mov (bad) push add xlat cmp mul push sarb mov aam fbstp adc sub sub fcmove xchg sbb jg inc fmul mov mov dec out cmpsl push nop ds jae mov pop and mov jno mov jmp (bad) jbe les hlt jge pusha xlat outsb sbb jbe jecxz inc or fcmovb loop scas push push pop adc (bad) or cmp cmp pop jb cmp bound push pop insb sbb jp cmp xor push mov cmp out iret pop (bad) mov pop out xor push es (bad) sbb sub pop or pop fsubl js cmpsl xchg in decl adc jl sbb pusha std add imul lret xchg in popf inc mov sbb or adc fsubl insb adc push and stos jnp call pop add pusha xchg stc xor fdivs pusha jmp nop daa scas pop flds push cmc shrb or negb pop mov or (bad) insl jnp dec cmc adc inc aad stc mov jmp cmc sub jno imul xor jae idiv xchg fwait ja (bad) add inc mov pop lcall dec scas arpl mov mov dec sbb inc inc push push mov pop sub scas sahf mov js mov mov insb inc hlt or jns mov push pop cld ja in imul xchg aas ret push push icebp jo jmp or xchg sub pop inc pop pop mov mov add out insl out repnz mov xor cs insb add (bad) dec out call roll movzbl cmc movzbw shr mov bts imul shld test lea bts push rcl push ror pusha mov not shrd jmp cmp inc enter adc add adc inc fabs sbb ja add inc mov or (bad) push adc test cli sub jo mov mov mov xchg scas imul xor lds cmp sub dec add js das and scas movsb divl out stos daa pop sahf mov or ja mov mov pushf cwtl adc or cmc fistpll jg iret dec in orl movsb test in das in out ja into notb xor daa lcall lret xchg imul nop jns test mov loope call pusha cmp cmpl movb lea jne movsbw bswap movzbw pushf mov call mov jmp and adc dec mov lea mov fucomi push test pop xor sbb lea adc leave mov pusha xor ret mov negl xor loope mov das out push dec je pop ret or dec mov and mov call subl mov punpcklwd loop (bad) cld xchg mov sub test xchg xor (bad) mov cmpsl pop (bad) (bad) iret cmpsb xor inc mov push xchg xor dec cltd cwtl and add sbb cmp ljmp adc jge inc xchg push xor imul daa xchg lahf mov inc movsl into cmp rclb xor stos add (bad) xchg mov rcr jno pop push jnp cmc jo dec push ret icebp in or imul stos cmp das movsl jns movsl aam inc lods gs xor fildll push and lret jnp push mov (bad) lret sbb bound test fabs (bad) dec stos or dec cltd jb outsb mov sbb test or lock rol push lret mov scas test sbb pop dec movsl adc adc sub push jbe daa pop add sub mov or pop pushf mov push (bad) xor fwait in aad xor lahf or std xor cmpsb sbb mov xlat push or aam test or jl xor fs mov xchg data16 std pop dec add or (bad) push loopne jl add inc sub or adc cs (bad) fidivl push psadbw aas mov mov xor (bad) notb adc jecxz lahf lcall mov jge sub cltd jg pop lea (bad) adc int jne fsubl in cmpsb call pushf test sub pushf stc call lea je call pusha mov pushf lea jmp lea jge mov pusha lea jmp mov (bad) idiv or pusha imul imul pop rolb negb jbe (bad) cmp jo adc or ja mov outsb mov je cmpsl mov scas cs (bad) aam test push sub aas (bad) aam inc andl sbb mov insb sbb add push divl inc arpl jnp xchg mov lods out (bad) jne data16 add and jno aad cmp sub dec ljmp int3 lret jmp mov and push mov inc clc dec xchg stc jmp out xchg mov mov std or cld jae add pop sub sbbl inc mov out push ret test aam pop jge jne pop xor iret push lds loop int3 adc fnstcw mov scas mov mov (bad) and aam mov mov xor nop xchg xor xlat sub mov mov xchg je pop dec stc or arpl add addr16 std adc fwait stos mov icebp sub adc jg rorb mov scas addb and out orb fs adc sbb xor xchg cwtl fcoml loope aam fistl mov or decb hlt (bad) in inc jno std add mov iret fildll divl xchg pushf and nop xchg pop (bad) inc lret je scas adc cmp push out pop mov jae pop mov xchg inc xchg mov scas push sbb or sub cmp sub mov mov (bad) sub pusha cmp sbb sbb add inc movsb sub imul stos mov (bad) push test jbe push mov fildl or xchg dec call and idiv or pusha imul insl test dec add mov lods pop adc mov mov gs movsl std std or xchg xlat dec out mov or fwait imul mov inc cmpb mov cmp scas sub push xchg xor loope adcl or mov leave and pop mov (bad) jns mov jno test adc outsl xchg lahf push sbb rcrb and sub call jb mov ror cmp mov pushf clc push shl pushf cmp cmc add pushf lea pushf movw pushf jmp jmp imul push mov clc sbb push adc insl popf cmp push int lahf pushf fdivs lret (bad) pop mov stc and or xlat xchg int pop addr16 test ret adc push (bad) jne dec jno jmp sbb add jle bound dec test sahf shr cmp lock sbb test mov dec fmul mov xchg or repz xor jmp add test push fwait lock ss fisttpl fidivrl sub push and loope insb testl rcrb icebp fs outsb mov inc test rol mov imul inc push pop idivl cmp shrl inc imul and mov pop mov add test mov inc jmp test sbb (bad) lea fcomi in inc shrl pushf mov fbld push test fbld cwtl jno into pmuludq and cmp arpl add outsb insl outsl movsl add cmc jmp inc scas ja sub pop dec pusha jbe pushf out or push loopne sbb cmpsb insb jb inc jnp das dec add incb loope data16 and sarb add mov call sub dec fist out cmp shr mov cmp jmp jmp pushf jmp call sub or mov test fwait mov popa mov add imul out mov aas fistpll ret pop fcoms dec cld and pop push inc test lods aam pop mov mov test jl clc hlt rclb mov mov fildl aad je and jne adc stos (bad) mov imul data16 sbb jb stos xor push mov call pop pop push in hlt push lret lret rcrl (bad) (bad) cmp ss sarb xor fs loopne push cli or mov xor shlb mov je push call adc scas add cmc add mov jns fmuls add sahf in je push and add mov jbe jmp pusha push shlb mov mov popa pop cld or fs sub les dec jecxz jbe jb pop (bad) lea pop add cmpsl test or movsl (bad) or pop out cmpsl xor xchg and jecxz gs or jno (bad) cmp add call xchg lods clc mov pop push mov mov jp iret push mov and into mov loop cltd sti push xchg push (bad) jmp push push pop ret adc mul in xchg cwtl xor outsl xor and cmpsb jbe jae push mov sub inc xchg xchg fldcw push pop xchg ds shlb mov (bad) xor jne dec adc or cli push fstpt ljmp pop mov rcll dec dec xchg sbb sub lods sbb sarl mov or ds fnop out scas (bad) mov das jns aam fs je adc dec lea add shr test ror bswap sub neg and shr neg bsf mov pushf add jmp sbb add add roll add add add add add add inc or add add mov add add add add add add addb cmp add add push rorl add pop add cmc pop add add add loope xor rcrb jb mov pushl in sbb xor rcrb (bad) fmul dec push sub hlt dec mov inc pop sbb lahf inc fidivr dec popf loope sub (bad) push xchg arpl out mov xor xor iret mov jecxz push mov mov in stos rol inc xchg sub push dec push or int3 and pusha push xor inc xchg movsb jno repz push mov int outsl jecxz movsl and cmc out xor popf sahf add in scas pop sub lock mov mov scas int mov lods (bad) sub cmp sbb xchg into out cmp divb mov xchg dec push scas lods sub (bad) (bad) fsubl icebp jl clc leave push repz mov xlat and out mov popa or adc sub xor mov dec stos add mov js lret ja cmp xor aaa dec aad and and pop movsl (bad) es clc pushf and lea stos ss mov xor xor jge push pop insb cmc inc xor sbb dec and or test mov cmp mov test movsb pop arpl and out jb adc sub shlb ret inc add jo mov xlat std sub mov inc push jecxz cmp jno adc mov movsb mov or pop cli pop cs mov aam dec cli test ret iret test jg ljmp flds lds aam aam dec push lret mov rclb and lock cmp jmp dec cs mov je dec movups push js lods loop aas xchg adc add test or je adc ja in pop mov add lahf fisubl sub adc in dec fwait dec scas xor mov push leave xchg cmp push fisubl test jge lret xlat adc fisubrl cmp mov or sbb sbb or int3 mov fldl sarl add pop jae mov imul cmp xor jl and fwait mov daa mov shrb je loope mov aad ja out test xchg push test adc inc push sahf in mov stos mov addr16 (bad) push mov lods imul fbstp and pop aaa push and mov insb pop or (bad) adc pop sbb inc add (bad) stc icebp xchg shrb stc dec sbb cmp xlat jg mov xor jle inc sub mov out test ljmp test push sub hlt adc in iret add roll ljmp pop hlt ljmp mov dec inc push xor sbb and lods push cmp xchg fidiv xchg add mov aas dec xchg mov testb push lret dec ret inc call push ror add push test lcall out adc adc cmp rolb jle iret cmc (bad) xchg dec add sahf call arpl adc jg push inc cmp (bad) iret adc dec iret lret or inc rcll mov (bad) pop mov lods mov dec dec cmp sub cltd lret mov mov fs jmp pusha sub push dec inc test jnp or shrl insl pusha mov push lret movsb jnp cmc clc ja pop pop or call xor sbb mov or xchg mov push ja test dec or mov je insl mov xlat aam loop inc sub sarb test aas out jge push test in cwtl jbe cmpl leave sbb bound (bad) notl mov mov xchg aaa jno ret or lea xorl inc loop jne lods ss xchg pop push sub cmp loop (bad) popa mov outsb es hlt nop sbb inc pusha and ja dec (bad) jae cs dec gs sub mov cmp and cmc negb xlat xchg mov loop mov imul dec mov lods xor xor sub push das popf mov int3 pop lahf jge lods cmp xchg in (bad) mov cli mov mov dec inc dec or cmpsb push push mov std jl add fwait add sub and adc into pop (bad) push mov mov xor fbstp je push lret cld dec (bad) jecxz mov sbb push jecxz jp sahf cmp loop pop inc mov sub (bad) dec push or mov out dec or mov hlt cmp sub push adc fnsave or leave fwait push pop idivb int3 test insl and dec cld mov cwtl pop pop jno call cmp adc je inc jmp push cmp lods arpl pop pop (bad) pop das mov or xor call push xor mov adc stc gs ja leave pusha inc sub dec push cld sahf incl adc je or push ret dec xlat push jmp push pop fcoms and loopne aad xlat xchg (bad) and sahf mov push sarb mov insb out mov or (bad) out in fsubs adc int3 or test data16 adc (bad) mov mov dec (bad) or (bad) lea stos push push push xor out or push add out push sub roll hlt stos jnp mov and inc add jecxz jge mov push cmp add mov loop sub mov lret mov sbb mov mov aam dec and mov int sub jp mov xor push jge push mov int push pop mov repnz gs mov lds push push in adc ret (bad) repnz rcl popf in mov pop inc mov xchg stos daa lods xchg fadd std xchg rcrb jg sbb mov inc lret add pop sbb xor ljmp iret sbb add sbb iret jp push test lds movsl fisubr mov cmp jp pop jne mov and cs adc sarb or test (bad) xor pavgb fdivl pusha mov in push aam popa bound push cmp out xlat sbb adc mov (bad) cmp in stc pop test push xchg pop rcrb push in cmc stos (bad) cwtl xchg inc xchg mov in scas and xchg xor push adc lods xlat (bad) ja pop leave sub dec sub pop mov repz rcll dec pop movsb (bad) out adc jg (bad) jmp loop adc fldl mov mov mov lcall das lds mov xchg cmp repz jne inc adc andl or push xchg add je popf (bad) ss cmp jo andl or fcom dec hlt fs mov sahf cmp frndint je add and sbbb lcall cmpsl and (bad) ss out dec adc mov (bad) out aad mov pop add enter fisubl cli jb rep xchg pop mov (bad) in cmp fs scas dec mov sub jo loopne test dec test cmp cmp sbb adc mov gs neg loope mov sarb sbb jmp aaa ja dec jge movsb mov out pop mov pop aas sbb mov pop sbb aad imul dec and aaa ret jbe pop jns jbe scas or mov icebp pusha add mov repz pop and lret jl xor sbb lret dec push sbb mov stos push int mov jnp out and adc jno push (bad) mov ret sti lods xlat and xchg lcall stos repnz xchg mov sub mov jno and sbb sub sub mov sbb ss jle inc popa inc out (bad) bound lahf lods and into imul nop pop xlat lods stc dec (bad) lea (bad) out in sbb loop enter gs push jle dec lea movsb and pushl in mov outsl pop jmpw xchg test lahf cmp jo rcrb sbb push int3 mov mov jo sbbb xchg imul ljmp fistpll xchg test shr jp ret outsb pop mov pusha sub imul mov das mov push xchg and inc or aas ret stos lret jmp sbb fisttpll aaa sbb out mov das les lea mov fs movsl cs nop jns mov jae jp outsb sbb mov mov call in movsb imull dec (bad) sub sarb leave repnz (bad) pop sub call (bad) pop mov mov xor add fucomp int pop mov (bad) or jae or or push add sbb mov or or insb xchg ja or cmpsb test and movsb ljmp xchg push mov xchg aas pusha jne rcrb cli scas inc xor add jo cli or cmp int3 cltd mov int3 popf (bad) mov das jbe sbb push cld test cmp xchg scas fldcw jle adc pop lahf test jp dec mov add (bad) jg push xor mov dec insb pushf xchg and dec into test sbb lcall xlat sarl xchg and add mov aad and gs cwtl shll xchg jae xchg mov leave pop inc (bad) rcrl mov push pop inc jp push test das aas mov mov cli push faddl loopne dec or lcall xor data16 cli je sahf gs jmp jmp jns ret fnstcw es mov and fcoms in cmp les lret sbb sub mov adc and or arpl iret gs lods outsb push leave or cwtl test sti dec pop addr16 mov loop and mov imul dec cmp mov aam js aam loopne outsl sub adc xorl pop je test mov pop int3 mov sbb jge decl cs mov fldl in cmp sahf scas jbe imul xor xor sbb out das pop and sub jb roll sbb inc sbb jmp out dec sub fstpl hlt dec jecxz ret rorb mov jne mov or or inc dec pop cmc jno jb xchg sbb sub add insl les cmpsb sahf mov dec arpl sub xlat popf aas outsb dec das inc mov test adcl xchg jns push lock pop dec add jmp pop and dec (bad) fcomps xlat sbb xchg shrb pop fdivrl or cmpl addr16 in push cmpsb dec pop in out dec or mov jmp add test jae dec es jb and xor mov in dec sub jne xor dec add out and xor ljmp push mov jp adc or mov enter sub fidivrl test ret dec dec ss xchg dec push addr16 and es fnstenv and jl xchg jne add cwtl or (bad) movsb int3 pop insl jne jecxz cli (bad) mov mov lcall aam fidiv dec cld lahf pop and lods xchg sub cmc push mov icebp ror mov vpsubusb mov rorb movsb fidivl inc test dec push mov aaa mov inc mov mov cltd (bad) mov (bad) jne fldenv push into addb movsl cwtl jnp xchg testb jnp das xchg imul push xchg sbb test idiv add int pop push push mov xor cmp push dec xchg lock jge out sub inc rcl push jne lea nop pop stc sahf lcall arpl cmp hlt jne xor dec fwait xchg popf push aas sarb push and je dec jns push out xchg stos shrl test and mov sub aas pop jmp jne stos mov dec jp cmp dec sub sbb push ds and add jns xchg inc and inc push mov in sbb cs and pop xor inc ljmp cli loopne loop cmpsl inc jecxz cmp sar fisttp xchg shlb sarb add mov adc cmp inc fisub mov jne dec pushf out mov mov lock outsb test loopne and incl cmp or jbe jp clc daa hlt lahf imul push and fimull shll or into dec por iret clc cmpsl jb imul push push adc mov xchg mov fstpt xor outsb scas fist out jne mov push pushf xchg stos std mov mov (bad) push movsl add xchg inc and sbb inc dec jb adc fidivr test mov stc call mov or fsubrl push jnp sub jae outsl out fildll stc jnp jmp popf das xchg push testb mov push pusha add xchg in or jne outsl mov xor xor int3 jmp fistpl inc jae les and popf into lcall lret int3 xchg mov adc scas rep jp (bad) int mov sahf inc lret adc lahf jle call cmp sub mov jno add xchg ss and jo aas sahf (bad) hlt sub adc xchg outsb adc in dec push (bad) not jmp xor or xor cld ret adc (bad) sbb lods nop mov les insl dec or inc fwait and int cmp das lcall cs sub add sub add rol outsb push mov cmc std jge scas cltd pushf mov orb add popa ret lcall mov mov adc mov movl int (bad) xchg sbbl das aaa gs mov mov add add ret xor mov mov loopne and and in jae jg push xor cmp add sub push jmp mov imul jmp xor shrl add mov sub jb mov add call sub jne ret mov lea movzbw mov pop pusha mov push mov pushl ret pushf mov jmp lea call lea push mov pushf pushl pusha jmp sbb add add roll add add add add add add inc or add add mov add add add add add add addb cmp add add push rorl add pop add cmc pop add add add js daa or adc or ljmp sbb shll sbb aad jg lcall mov push rclb jl int fmuls sbbl xor cmp xchg push shrl xor adc pop ficomp je inc sub lods cmp repnz outsb xor mov mov cmp stc push adcl ljmp mov mov or jle jp cmc sub xchg test les push jp mov faddl loopne in (bad) repnz lds fistpll popa jl (bad) mov inc mov sub push push movsb push inc es in or loope leave popa xor jge insb add xchg adc push pop push xchg fstl movsl enter es repz cpuid stc sbb push ret flds push xchg fs xor mov mov cmpsb les movsl push xor dec loopne add adc jmp and ret in ret cmpsl inc das fldt cmp mov (bad) xor xor jmp xchg or pop rcll dec ret mov roll mov clc jge mov jp lods shrl sub sub ja sbb mov push aas cs lds mov icebp pop insl push push shrb push mov mov xchg mov lcall jl jb addl mov pop sti (bad) scas jo test aaa sbb in lods in inc bound aaa mov push lods add imul xchg ss sbb jae xor ret nop sub int3 jno mov push mov addl sahf sbb lods fstpt daa sahf mov imul pushf rol clc mov pushf stc call mov push call outsb bound mov or sbb push mov loopne dec int3 rorb and cmp mulb pop ret cmp cli fwait inc (bad) movsb test sub popa scas nop sub lods jecxz ja nop mov fcmovnbe rorb push push add pop mov xchg loopne out js push add sub repz sti lock insl sbb jns pop mov pause fsubl jg loopne mov push dec pop pop pop dec jl notb cmp aaa test dec fbld leave sbb inc jmp test xchg mov repnz mov xchg sbb push cmc ljmp mov es mov (bad) xchg and out inc lcall xchg out cwtl fwait loop insb and pusha pushf lea jae sar sar adc mov xor mov bt mov pusha sub stc clc repnz jmp lea call call imul repz les pusha je pop add xchg jo push bound pushf and jl adc jnp rorb mov cltd je mov repnz out mov dec insl mov ret out jle xchg mov jl cmp imul and imul add inc aam mov lahf sub gs ret jbe inc or mov sub mov lcall insl mov out or es dec mov lds fwait lock inc jge fcoml jae or dec (bad) aad icebp fsts daa inc fucomi daa outsl xchg pop jmp pop mov and (bad) repz inc jne sbb mov dec ds adc in and push xchg push arpl or push in inc cmp cmc sbb dec mov xor jnp aam imul adc mov leave daa pop pop xlat or mov dec cmc add (bad) xor (bad) mov ss mov sbb shrl cmc cmp test mov icebp sub fstpt mov dec ret int jbe xchg xlat lods adc and pop cmpsl push cmc loopne aaa mov (bad) mov pop divl and fsubrl pop js or lahf fldl rorl sahf aad xchg leave roll lahf out test inc jnp arpl push nop xchg ret (bad) jle adc and aas (bad) in xchg pushf xor test jg pop pushf cmp aaa into xor cmp jne adc mov sti or test pop pop add ja test add loopne rcl sar mov pushf jmp cmp call lea jnp lea pushf lea call call in out xor mov daa aaa test inc test dec mov out mov add adc mov inc xchg jecxz cmp or (bad) inc and (bad) jmp fsubr scas pop pusha mov daa pop int3 xor (bad) ds cmpsl icebp pop rcrl jg hlt aam push daa mov loopne icebp pushf mov je push leave push dec xchg inc push insl adc shll clc insl sbb and push cmp mov (bad) push mov cmpsl adc int3 jecxz iret stos rcr ffree sbb out jl (bad) lret sub lds movsb add or out aas inc test push push ficom push add dec movb call movb lea jb xadd pusha bsf add mov (bad) testb not lea rcl (bad) icebp rcl bt mov shld call inc lea movsbw inc clc pop movzbw ror pushl not push call daa enter or in add lock loopne mov stos insb mov pop cwtl daa pop mov lahf adc inc scas adc cwtl stos into in push mov pop outsl stos fidivl ret jne pop (bad) cmp ja andl add push jnp push push or pop pop inc out sbb dec inc fld or lea mov mov sub push mov cli mov fcoms in arpl je lcall sbb (bad) outsl inc jl inc mov cld mov in push mov test jno xchg sbb mov daa insl aam out or inc aam adc sub pop xchg push pushl lea jae jmp pushf pusha xchg call clc shl pusha bt add call push lret push das or clc mov mov mov call cmp pushf clc inc push loope (bad) xor in ljmp fidiv mov inc xchg sbb add into mov xlat cmpl cmp loopne rcrb and aad ljmp mov (bad) pop mov js notl dec fs mov mov cwtl mov pop and pop aam jp pop jmp jp inc les cmc popf mov daa jle enter sbb cmp sub std pop xorb cmp ss stos xor ss lret jmp add jmp aaa ret js sub insl daa xchg mov flds test out xchg addr16 cmpsl out inc jge popf icebp cmp add push into int and and dec mov cmpl cmpsb xchg sbb or addr16 inc jno cli lahf ret inc pop lret lock pop jl shlb fsubrs mov in mov push or jmp pushw std sbb mov clc pop mov jmp push out enter xchg fs cmp or ret mov xor xchg call in jbe sbb dec add inc gs outsl fs gs imul add sub mov jmp shl add mov mov lea pusha jmp push push mov mov mov shl lea call adc sub jne mov sub pop pop ret push mov call loope lret or cmp mov xchg lods jge pop cmp jno sbb insl mov lock or fxch loopne sarb ror pop pop andl or jge adc insl xor aam inc jo,pn push es add jecxz scas mov inc mov push repz (bad) jno mov test int3 or jge dec push jns inc inc sbb sarl and fildll or insb leave dec in push mov inc (bad) pop cli cmp cmp cli add mov or push mov sub aas xlat das lahf jae das rcr jecxz subl and insl pop aam cltd or xor xchg test data16 lret cs mov pop add xchg (bad) fcmove xchg fmull les inc leave jp sbb rcr fucomip inc cmpsl or add push jno (bad) dec and or ds xchg xchg mov xor in mov cltd add and xchg subb inc mov jmp or push ljmp jbe adc stos sub jle test insb mov xor iret pop (bad) mov mov or stc add leave stos and sti (bad) mov jle dec cmp sbb cmpsl add adc xchg xchg lcall js rcl or cmp dec mov (bad) pop ss xor (bad) adc dec or roll dec mov dec mov imul xor cmp push lea je ror add cmc setno lea sub dec rcl and xor shr cmc xadd stc sbb mov sbb neg add xor mov bsr sbb add inc bts mov test cmp call movb cmp mov mov jmp pusha mov pushf push mov mov pushl ret dec clc add jmp jnp dec popf xor inc ret or addb or outsb cs mov mov push ss xor (bad) sub rorb cmpsb repz int daa out sbb sbbl call xor xchg repnz fimul cmpsl jg sbb lahf mov lret adc or (bad) lcall adc push inc stc call xchg aad jb nop (bad) sub test cmp sbb lods pop pop and jge xchg mov mov aaa pop faddl ret push xor (bad) xchg das inc enter adc mov ret ficompl addr16 notb pop lret xor mov inc push jge adc add cltd cmp xlat inc mov adc sbb sbb pop popf and das (bad) (bad) xchg xor xor test lea dec (bad) mov mov popf push imul lret fistpl or loope jb test cwtl jb xchg push fildl popa inc mov mov addl int3 sub ss nop jno (bad) mov cmc pop jg repz inc adc pusha and out (bad) dec adc cltd cmp addr16 xor cmp xor pop aam insb std mov scas mov push icebp lcall sysexit or mov sbb decl stc std xchg push pushl ficom inc pushf fldenv add loope (bad) cltd in sti fwait sub xor cmp pop inc mov sub in fsubrs in mov cltd insb (bad) (bad) jno fucomp cmp jecxz inc das add jecxz mov (bad) or add pushf rorb leave (bad) jo jmp push lret out ds loopne cwtl jb xchg mov cmc pop inc or (bad) ds xchg (bad) adc inc mov cld lods sti sub or in in push repz aas dec ss notb mov fiaddl push add aas ss pop lods or sbb das xlat xchg mov jae jg add pop aaa fistp (bad) cmp das jae mov (bad) xor rcll jle int3 sub cmpb mov out int inc aam mov clc fbstp (bad) jp inc mov int mov adc dec fdivs bound data16 call pinsrw subl push rorl stos and mov repz fcmovu xor cmp rcrb mov sbb mov in add push cmc sbb jge pop roll and push add pop test pop mov or into fimul sbb inc repz push lret cmpsb jnp mov add mov push lds xlat lods int dec rcrl (bad) sarl pop jae cmp and fcomps cmp add scas dec loopne andb nop std xor mov fcoms repnz stc add adc jno out push (bad) mov ljmp aas popf jecxz fs jns xchg pop loop les push insl or or in pop (bad) push xor sarl in pop pop cld adc sbbl ds and adc and data16 daa lock sub sarb dec mov stos sub out lea mov push ret movb (bad) pop enter daa push add cltd mov bswap lahf call push mov pushf pushl popl pushl pushl pushl ret pusha lea movl lea jmp idiv xor xor jmp and out scas mov out jnp out sti push add push xchg add les mov sub data16 add jo adc push cli and andl shl je ss jp movsl pop jg ret pop fidivr sub mov dec jno add pop pusha dec xlat xchg sahf out dec lret imul and andl sbb adcl test pop jg or repnz jecxz pop shr rclb push cmp jecxz dec mov lds xor (bad) dec fwait dec inc mov cmpsl lds scas jnp lea test cwtl fmuls ds call xor rclb add call jb mov shl lea call add pop ret lea call shl bsr clc rcl add clc cmc pop and aam (bad) lock pop cmc cmp bt bt cmp push mov pusha call push inc bt stc ror pusha jmp lea mov call js dec sahf xor pop insl adc mov out cmpsl xlat sbb mov (bad) jnp inc mov and mov (bad) jno xchg add hlt and movsl push fildl jo jl push shlb push aas into out cmp lahf outsl stos mov inc sbb push mov fistpll mov jl xchg out pop mov or clc dec sahf daa loop lret in out xchg cld dec aam mov xor dec popa in dec jl xor loop pop iret or mov lahf and js ret fidivrl ret or jge test pop daa in xor inc push fidivl bound push (bad) mov inc xchg adc push pop pop daa out dec outsl out push xchg jno rclb mov add jp adc (bad) repz mov int bound or gs push cmp xchg sbb mov xor xchg fcompl sahf sahf divb outsl mov pusha jmp aaa lods sbb (bad) pop stos sub pop idivl insl stc pop cld or cld xchg loopne or movsl cmp shl mov mov mov loop sbb mov lods pushf jns std test mov xor imulb dec leave aad adc push mov nop shrb mov cs push xor mov enter push mov inc lods xor push or fcoml cmpsb mov push addl and inc mov xchg inc xlat lds jp daa rolb push jno mov push dec add add clc xor mov push sarl xor add int3 sub sub cld cmp xchg xchg or les jno fnsave ret xchg adc arpl sub loopne pop pop (bad) int3 jecxz scas lods add inc push insl movsl leave loopne fsubl inc scas scas adc aad mov or fldenv loope and jmp loope ret pop inc insl lea dec arpl inc push jmp scas pop jmp int mov adc arpl fsubr pop fs mov lods xor pop (bad) cmp cwtl adc loope lods rorb insb insb fnsave fcoms jecxz push movsb add adc and inc sub into pop push mov fwait jge fs adc mov loop and jmp (bad) mov sub or mov inc jb rcr pusha fwait std pop out sbb pusha add add shr (bad) incl lahf pop cmp loope or add fldl sub cltd popa leave inc sbb sub cld or push ljmp stos adc xor mov enter cld or cmp sbb pop mov cwtl lahf sub int jo int3 pop (bad) push pushf mov cmc dec push jno je lahf jmp (bad) lods aaa sub push mov sbb jnp iret dec out adc xchg (bad) es stos push aas or jo movsl add xchg (bad) sti test sbb mov jp jne sbb js adc lock aad hlt in push cvtps2pi push cmpsb adc fisttpl push es jp dec pop movzbl jmp call std jnp xchg ds imul (bad) roll jmp add sbb mov mov push roll push dec rcrl or jecxz stc int and jno jge jns push jmp jmp popa ret outsl cmp mov iret push mov inc pop and cmp bound outsl (bad) addr16 sbb add ljmp in ljmp imul mov push jge cmc xchg shll xlat sub push sub mov sarl addb inc (bad) xchg xor test pop adc or jmp pushf lea jne movzbw mov mov not shr bt and mov setb rcr btr sub and mov pusha shl bswap mov call movb stos jmp add dec outsl jbe inc imul adc add cmc clc cmc cmp add pushf mov pusha push dec push call jmp outsb mov ss pushf pop clc cli nop (bad) sub jp pushf push jne fisttpll in decb adc inc ds mov dec inc jb pop pop les jo add ljmp fiaddl mov sbb mov out repnz jb popa scas ret mov inc push sub aas (bad) pslld fsubs cli inc mov sbb movsb mov addr16 and cmpsl (bad) adc or push jns (bad) aas or ss inc ret mov xor inc (bad) adc inc jp sub or arpl in jbe cmp daa sahf jne scas sub dec aad add inc adc adc pop fbstp jno lods push outsl xchg into (bad) xchg call push cld ret jmp lea mov enter jp outsb xor nop popf pushf addr16 iret (bad) test out test jns enter add sti inc mov xor negb xchg xchg jo adc jne sub cld call inc (bad) lret add hlt pusha lea jmp lods cmp add clc clc push ror cmp jmp pushf call push pusha movw pusha movl push movb movl pushf lea jmp pusha or movl pusha lea je call lea ja call push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret cmp insl mov mov scas out sub test (bad) cmpsb and in lret push fsubrl pop (bad) (bad) xchg lds inc iret push mov rclb add mov enter fs sub rcrb enter mov addr16 pop mov or je push mov out mov bound shrb mov and gs mov xchg sub sbb out inc rolb cmp mov fisubr xorl sahf mov xor jo mov (bad) mov sbb imul stc pop mov movl jmp in sub cmp incb inc mov push in mov ljmp push test xor adc mov and fwait (bad) xor out xor sub push idivb imul and pop outsb fndisi(8087 mov pusha es fcmovu xchg je and stos xchg lcall fs cvttps2pi inc mov inc sub outsb push pop jno mov lcall rol dec test jnp adc cs int mov nop jb push cwtl lock xor jge adc dec xchg inc mov in inc fnstcw or pop pushf movsbw mov bswap call add jno cmp pop inc xchg pop pop inc add das iret loope pop dec iret lahf in dec mov icebp or inc testb sub jnp les xor rcrb in ss jnp sub jno mov dec add inc ja mov and ja inc sahf clc bound pop jo aas lods jns fwait bound mov test outsb or and xor sub stos lcall cld pop aad out scas in mov mov adc shll and ficom pusha mov mov sbb add add movb movl pusha push mov lea jmp mov bound or dec leave cltd (bad) popf in or mov aas adc (bad) pop outsl mov loopne mov pop (bad) mov pop adc in dec or and xor (bad) mov cmp sbb notb jmp int3 cmc call cmpsl and mov mov pop call cld add scas jbe jle loope pop xchg push mov mov push mov imul adc scas mov inc push aam lea jne sub bsf and mov cmc add test call pushf jmp movzbl mov mov pushl pushl ret add push push js arpl gs js add mov add pushf push pushf push lea jmp lea call clc test stc jmp insb (bad) arpl inc or jo in mov out dec inc pop popf cli cmp mov push incb adc int push mov mul in sub sub pop mov push sub enter mov jmp push loopne or movb push imul cli pop imul adc sbb mov xchg or (bad) xlat (bad) sbb lret repz mov decb and icebp push cmp mov cmp fcomps fs in xchg mov int fdivl xchg std into mov sarb mov movsl ret sub adc sbb pop (bad) push mov jmp jg lea xorl lea mov jne pop inc or add xchg and ds add jle jle push jp leave push dec sbb xchg pusha outsl and (bad) fdivl jno inc mov outsb dec jbe insb popa mov aad insl js add enter adc pop movsb xor sub roll loope in dec sbb sub inc or hlt call not push jmp lahf jmp call sbb jb or jp movsb sar incb loopne,pt push es jb jg popf imul iret daa (bad) jne cwtl pop (bad) dec xchg mov dec stos and jno,pt dec out inc cmp mov inc sbb or inc outsl call or add sbb mov mov dec out fimul aad stc data16 pusha insb clc xor dec mov loope mov sub icebp push cmp dec es adc (bad) sub sar sbbb (bad) cmp and jbe neg cmp shr sub call movb pushf jmp scas leave ficomp or jge shll pop je ror icebp out leave ret or xchg inc aam pushf cmp fdivrs cwtl cmp dec dec jno xor insl sbb push mov dec mov dec mov fmull inc or repz inc push pop mov xlat sub mov insl insl outsl sub aam pushf lds xor call dec push jg out and test inc (bad) inc push inc mov out cwtl pop lea inc cmp leave cmp fimul aam pushf sbb or mov jl sbb pop addr16 xor in and xchg add leave cltd sbb push or ds jmp mov pop imul mov lods push xor mov scas out mov mov inc mov mov sbb inc stc iret and repz xchg xor fsubr insb stos nop cmp lea inc inc mulb mov mov add test add or jno cmp incb or fs add and andl into inc cs mov and cli arpl xor mov jb loopne adc mov adc sub sbb pop xchg mov push pop jo loop mov mov push hlt (bad) out in xchg cmp inc daa (bad) cld std mov fcoml dec (bad) mov inc pop cmp push and das iret mov cli and popf outsl scas mov mov bound push and cli dec mov dec push cmpsb je push dec adc sbbl or out adc sub xchg xor fidivrl test rorl lds mov inc mov mov pop int3 jb jmp lret repz push (bad) adc test pop and xchg pop (bad) pop (bad) hlt (bad) ss mov jecxz mov enter push inc xlat push xorl xor cmp jg insl scas mov stos jbe sti mov or push or cltd inc and rcl lods aas dec jle mov dec xor xchg xchg (bad) (bad) cmp sbb mov cld pop cmp sub (bad) jno lahf or movsb fst pop fisub pavgb addr16 pop fnsave sahf pop test sbb loop orl repnz mov jl gs jl xor push pop adc faddl fbstp jge sub mov push dec pop jecxz mov fcmovnu test fisttpll push xor pop push ret mov dec jne and (bad) mov mov (bad) or xchg cmp pop lret cmp fs lret pop pop jmp push int xchg cmp pop mov and in sbb (bad) repnz andb out adc scas xchg push fild mov out cld je into add push iret cmp xchg add pop or mov jno xor mov cmp rcl adcl inc mov (bad) je xchg xor pop cmp and pop pop push fsubl mov movb test mov adc pop xor in call lret lcall outsl push xchg xor push add ss loop test sub jg and pop and xor pusha push fwait sarb mov adc fistl in cld jns imulb cmp lea out xor mov in cmp sbb shrl pusha and ss and push sub xchg jmp add or mov bt clc or call test jecxz inc or add stos inc cmp pop ficoml jge dec mov call movsl jmp adc jecxz orl adc cmp cmp imul add jno popf adc je ja sub sbb jbe (bad) pop fisubrl xchg xor out mov notl inc xchg loop jne xor aaa xchg cmp or jno lds addl xchg ss push push scas xor xor mov jno xchg out mov movsb loop iret push lcall or dec or mulb mov sbb fsubr sbb xchg test sbb jmp rorb pop repnz aam pop mov sbb loop sbb mov lock and orl inc pop in or leave sbb cs adc ret cmp mov jge and jnp call or xor sub mov and test das aas and dec clc pop jp xor call lds test mov mov sub decl add push push pushf lea call jmp bt call mov call call fdivs outsb xchg jmp mov or pop cli add mov sbb add loopne nopl out xchg js fsubl popa enter sbb pop in int fbld push mov mov stc scas add jge,pn sbb mov xor and inc pop dec shll ljmp clc scas pop inc and repz mov out jno mov push in and mov mov stos arpl fcmove adc test loopne adc push xchg dec decl aad test pop dec out sbb jno enter scas dec mov mov or fldenv xchg mov sarl jnp cmp roll mov insb pop movsb les enter xor push mov pop out fs xor add mov adc inc inc (bad) mov pop or ljmp dec mov mov nop sti das fwait jecxz stos pop pop lds movsb cltd bound sub sqrtps stos dec (bad) xor dec jmp xor sub addr16 out adc inc dec inc fcomp ds push data16 cli sub hlt dec sahf mov push xor jae inc or js lahf xchg cld sub inc mov les dec test sub mov cmp cmp mov and scas lock in movsb sbb fildl xchg sub push cmc inc (bad) aaa sbb lea inc sub insb rolb jns stos jp (bad) or mov mov lds andl adc sub shl sub and xchg inc pop cmp out cmpsb sub jno data16 mov sarl das lcall add sarl std (bad) imull adcl jae movsbw xchg movsbw movzbw mov not xchg cltd movzbl pop bswap call lea je pushf lea jmp pushf lea je stc cmc push movb cmp push jmp jne (bad) add inc xchg fisttp cltd outsb int3 pop inc (bad) xlat in mov or cmc scas dec popa lret and mov jmp lds out sub rorb xor dec loopne aam ret add (bad) jg into cmp loopne hlt dec pop popf dec xchg nop dec cltd xchg loop aas sbb or (bad) cmp mov push mov mov mov leave add add sbb inc inc call fwait xchg mov dec (bad) (bad) jmp jae lods (bad) dec popf js call sbb add fcmove inc xchg cmp mov dec or div inc mov ljmp dec scas das out das roll daa xlat (bad) roll aas in into jne sub dec sub cmp pop cwtl pop cmp pop push xor rolb cwtl clc mov test fsts mov cmp jmp sbb ja fisttp loope in sub cld dec jbe test adc aas movsl fcmovbe push je mov adc push sub insl mov fcom sub jge sbb xor fbld movsl or mov cmp rol push sbb pop out push adc lea jae jmp lea jb lea lahf lahf mov pushf pushf jmp call jne pmullw inc mov cmp xor or std test pop xor gs aas lcall and fs mov out test push lret push imull xchg xor nop add into jb lahf outsl movd in repnz mov adcl hlt dec addr16 dec outsl out ss enter jmp ja add adc popa or insb out repz push fistpll lahf arpl and int in jge in sbb mov mov adc idivl or mov sub icebp and dec pop xor ret sub jmp jp cltd lahf push in sbb mov paddsb aad repnz pop hlt or icebp movsb sbbl mov loopne jae (bad) push xchg cld dec loopne pop inc sub pop sub movsb outsl fisubl popf sbb or call push data16 and adc ljmp lds bound add mov into lret pop cmp fsubp pop xlat jb out es jp pop mov mov sub and fnstcw cmp jae stc pushf cmp sub push bswap movzbw pusha lea pushf call aaa fist or imul ret adc xchg cmpl popf in xorl cmc test cltd int3 or pop fidiv push inc (bad) int in pop ret xlat cmp push jbe aas cmpsl call cli test outsb mov jecxz or addr16 data16 loope pop xor adc cmp xchg adc (bad) mov pop (bad) or mov dec clc decb cmp repnz mov out lahf repnz test ljmp outsl jae push adc es subb mov (bad) mov pop stos jae or iret bound add ljmp push test xor pop loop frstpm(287 xchg xchg pop repnz jne in mov mov mov sbb sub jns (bad) iret rclb lds jg or stos cmc in jecxz flds add and iret int mull arpl imull push adc sub sti mov fldenv rcrl lret shrb inc push enter inc add cmc sbb cmp negb sub jecxz (bad) fisubr setl hlt inc fmuls loopne loopne pop sahf adc (bad) div push sbb xrelease ds lock int3 inc out insl lock icebp push mov mov scas cmp pop lock (bad) lods cmp repz dec cltd push or arpl xchg xorl add push pop push adc rcrb sbb std or inc dec rcrl stc rcl cmp xchg sbb sub movsl mov popf repz xchg mov adc dec pop popf cmp cli or add push xchg cwtl adc mov mov scas xor inc push insb in hlt add daa fsubrl cmp aad mov ljmp mov test cmp call or or popa xchg or sub add xor in or (bad) je xor mov jp xor and aas mov dec adc xchg ja inc data16 mov mov cli (bad) (bad) mov mov and andb out fstp xor add (bad) mov stc and fiaddl inc mov iret fxch adc xchg sbb inc pop mov jg push mov popa push or adc imul push ss sub or inc lock pop pop xor lods push or push mov pop xchg jg fist arpl cmp add aad arpl adc pop das rcrb (bad) hlt ja addr16 pop stos xchg push dec inc mov sahf and pop aad mov mov push sti into pop stos dec cli sub pop jecxz adc push adc jp aad add cmp push mov push cli push jns notb dec shlb dec dec jl xlat push or scas mov int push addr16 xchg pop pop cmp mov fsubrl xlat mov stos dec adcl aas push push adc or jmp and mov (bad) inc adc adc mov adc movsb (bad) mov xchg lret pop dec lock xor idiv dec pop mov inc xor add add ret xchg (bad) adcl clc icebp fnstcw pop sarl push adc adc lahf or push mov push lock stc xor fidivrl inc orl ret stos ret dec cltd cmp cwtl data16 (bad) mov outsb in dec jb adc xor test insl lock out push aas cmpsb xor xchg push lea mov mov test xor xchg push or sub xchg mov xor jnp push sub push (bad) fdivs test and mov repz hlt add fucom aad imul mov data16 in sbbl lahf ljmp setne push clc xchg inc cld dec pusha testl lea fwait dec inc adc roll cmpsb scas insl mov popf push cmp mov xor movsb rolb xor and out push adc (bad) jb out stos aam and fsubrs int3 ja mov jmp repnz lahf nop xchg push mov lock movsb and ss adc xorb lcall dec neg pop (bad) sub or pop ret cmpsb jbe sbb sub push outsb data16 dec imul sub cmpsl out (bad) subb sahf xchg lea sahf mov jecxz dec push sti test and cld cmpsb das fs mov and sbb lahf repnz xchg mov sub mov pop lea (bad) stos add adc repnz mov jb sbb add add je adc loopne cmp stc add jmp add leave dec push or test mov ljmp out cli stos rcrb pop ret movsb pop jns lcall fsubrs dec fs add jl cmc icebp xchg pop push and or cltd mov mov dec lret scas fcomps jp ficomp test mov pop in mov cmpsl cmpsb pop dec mov push dec inc in les xchg adcb aam mov jno sbb lods cltd hlt and out add and mov lret mov out or fisttp sahf add jae idivb or (bad) xlat and ds jecxz dec xor sub xor je push push inc push xor cs insb add test aam lcall xchg mov push lea jmp cmc clc test pushf lea je cmp test stc mov sbb sar shr add shr mov clc jmp push call add pusha sbb btr mov mov bt pushl stc clc shr pushf clc cmc cmp call stc clc shr call jmp movsl dec push les inc fwait and sahf push mov push pop ss jle dec rcrb or (bad) or mov pop ja mov pop insb pop in hlt lods add fld dec xor unpcklps add mov sub adc ss gs xlat mov test jns sbb jbe sbb pop mov adc ret add test int3 lret jo or movsl sub enter pushf pushf lret dec data16 push cmpsl xor cmp (bad) je pop mov sti pusha scas (bad) cmp fs jb not movzbl sub btc neg clc shr pushf movsbw bswap imul sub pop bts lea neg rcl push xor push cmp bts movzbw push mov ror push pop shrd mov stc cmp pushf jmp push nop xor jl outsb mov or lods repnz cwtl outsb push test jb push in test cmp jb fcmovbe sbb cmp lds xchg xorl movsl push sbb data16 mov inc mov test sbb mov popa xchg push dec bound or jo fdivs jge roll (bad) cmp insl xchg cltd cmpsb in jg pop faddl jne push nop xor pushf into inc (bad) lods pop fdivrl sub mov or mov mov fs test lahf xchg popf (bad) je daa inc mov lods mov xchg jae imul xchg dec out sbb rorl jg jne mov add push (bad) inc subl sub mov call stos lret loopne mov jns mov inc dec pop scas cmp sbb add and sarl or mov sbb imul xchg lcall sub xor loope sub add pop rol (bad) (bad) mov pop std test movsb inc push inc outsb roll cmp inc mov in out mov stos fsubr sbb outsb jmp movsl (bad) xchg jne,pt push outsl neg cmp jg sarl scas push push or lret jp sbb ret or hlt test sbb pop cmp push push repnz push dec out das xor mov sbbl dec cli decl movsl fildll jne dec ja mov push jb mov mov fdivs dec shrb jp orb xlat test pop orps sbb xor cli cwtl fdivs testl pop fwait scas ret inc jl pop mov jg aam mov xlat inc inc nop mov (bad) aad out mov aas rcrl in leave addr16 in add aas lods push repz cmc adc xor test pop scas push mov sbb sbb sbb xor xchg (bad) roll mov ds and xor add cli adc xor sahf pushf dec ret xchg mov fisubrl mov dec je xchg cmp jge mov pop cmp mov js sub rcrl mov or nop cmpl ds fildl (bad) pop fldl jp (bad) (bad) cld aaa jne push pop xor fnstsw push mov outsl pop add adc pusha dec push shl push push add cmp sub call pushf pusha pushf call mov call sahf je mov pop jb sbb push (bad) xor movsb rclb ret inc (bad) out pop sbb (bad) xchg mov xchg xchg (bad) movsb mov xor sahf movsb add or enter clc xchg hlt lea je dec (bad) jo mov std mov mov jne add inc ja add jb sti call pop add das xchg jae add adc aam dec jmp jp jge inc and inc (bad) cmpsb jg jnp ljmp fucomip add enter ror sub lret mov sub aaa sahf hlt cltd lea add jle or or or adc fnstcw mov xor xor pushl fmulp cmp stos sbb pop ret xor sbb outsb pop testb sbb ljmp cli mov cmp mov mov rcrb mov dec test stos ret mov push xor pop sub in mov mov repz dec xor jo aas sti leave inc enter cld (bad) xlat jle xor ret adc sarb adc jns jl jg idiv adc mov test inc fadd add inc mov mov push mov cmp xor cld stos loopne fs mov sub jmp ror jmp call subl mov xchg dec pop push ja bound pop test icebp sbbb leave insb mov mov rcll add jp dec push jge into add and out xchg sub xchg push sahf cld cli repz orl in les adc sub mov rcrb stc ret xchg mov sbb mov stos sahf mov or mov rclb xchg aam stos in cmc xor aas test das aas push insb push aam lret (bad) jp cli (bad) leave jae insl or bound jle das into (bad) push lds bound inc fistpll mov cwtl add bound out stos (bad) dec sbb insb stc cmpsb das cs ljmp jge aaa ds pop xor pushf lret xlat and call push adc in repz mov and movsb mov aaa push pop mov inc inc shrl and adc cmp pop mov mov das int dec vcvttss2si xlat jg (bad) mov dec je jp xchg add mov and cld call ret (bad) jo xorb adc push adc cmp inc or inc push sti cs lahf xchg xchg int3 sub insl mov mov inc cmpsb negl ret je js cltd pop sbb rep fistpl sbb jbe cmp mov pop xorl xchg mov dec aas mov mov mov xchg rorl adc pop (bad) fldenv mov sub aam adc add mov icebp mov iret ss addr16 clc fcmovnbe test (bad) mov dec repz cmc push push dec and jecxz stos stc push mov daa sbb loope mov sbb inc fsubrs mov mov push test arpl iret dec pop or mov and test das xor lret jp (bad) hlt negb int3 xlat xlat inc xchg xor stos adc cli dec or adc les pop inc adc test lret cld lret mov jnp cwtl cli mov jle mov and test and push mov cmpsl lret xchg xchg adc dec push add (bad) mov sbb jle inc loop cltd data16 xchg adc sub inc and movsb push subl pop add lods insb sbb dec fistl jne sub cli out mov pop dec lcall fsubrp mov pop mov test je jns sub div stc and cmp out loop pop mov sbb push ja,pn inc sbbb mov cwtl sub push pop (bad) mov mov jle pop scas sub imul rol rcrl mov lahf iret lcall pop (bad) ret jmp std into dec mov cld incb or jp into xor mov out and jne or fstps jae insl and pop (bad) sub mov (bad) aaa insl sbb mov (bad) fwait xchg adc cmp out cli add sub loopne mov popl aam dec addr16 in and or outsb push aaa in jae and xchg jl sub jecxz orb cmc scas fdivs lret rolb dec mov push out mov pop mov jle sbb adc jp lret rol dec repnz jl dec hlt cmp lea push fwait dec add fwait icebp out mov pop (bad) push out rcrl mov mov xlat push or ja lods cld cmp ja aad cli or call ds xor test pusha pusha mov popf mov dec scas pop mov lret fnstsw dec cmp shr fidivl (bad) lea cmp and mov pop js in sbb mov jle in (bad) in mov xor cmp sahf xchg hlt inc mov fcoml scas cmpsl (bad) popa pop xchg lret sbb orl jb push jle loopne ss sub push dec cmp insl imulb insb mov daa pop sub or pop pop in sbb adc loope sahf xchg and add cmp pop leave push jb mov and stos into ds pusha jo xchg push pop jb popa in xor shrl imulb cld pop or pop xlat das xchg aaa jbe (bad) dec aas mov xlat cmp mov or mov fdivl jl pop mov test popa mov push sub cmp bound dec and in das add mov test adc mov rcrb or ljmp adc jg lret mov push test sti dec repz jbe stc pop aaa imul push adc sbb add xor sub sarl scas fdivrs push idiv xchg jle iret xchg jae or fs inc add jmp sub fs inc fwait std int3 mov jno mov in inc fs (bad) inc loope jns jno (bad) stc push arpl loope out fsubrl repnz pop dec bound and sub shrl jns imul mov push pop dec mov mov push adcl pop add add lahf lcall enter test mov push cltd push sarl out shrb and inc js pop adc ficomp es fidivl push les sub or stc icebp repnz sbb or js pop cli push push aas jecxz jae ljmp lret jae dec dec xchg push inc mov push inc call (bad) mov xor aaa xchg fbstp mov jns push out das xor mov std dec or (bad) jae leave mov sbb jno push push mov add jne inc loope leave jl pusha pop in lahf pop cwtl cmp pop dec jp fdiv xchg popa dec mov adc xlat (bad) add mov xlat mov test sub mov insl dec repz out cli inc mov das aam sub push cmpsl hlt adc int3 in and test lods dec dec inc xor (bad) sbb jmp mov mov xchg out out pusha fldt movsl sbb mov cmp sub movsl or or sbb rcrl mov xor faddl and shlb aaa movb es aas (bad) or adc sarb sarl jecxz lret (bad) leave add inc lcall adc xor dec cs sub and xor (bad) loopne and pop repnz jne sub jbe xor and and sbb mov mov loopne aam cld push push sub sti push lods gs sub js arpl mov fwait mov popa or lods dec adc hlt test pop cmp pusha mov not stos sahf pusha pop mov pop push lret lock fildll mov adc insl sbb pop mov pop cmp pusha (bad) jno ret and aad icebp out inc mov xchg fs mov addl ds dec lods (bad) xlat cli xor inc xor mov mov das mov jg xor add fstl xchg jae xchg imul mov insb into (bad) enter push push cli mov scas mov push inc xor sub xchg (bad) mov push lret mov inc mov push (bad) sub aas xor pushf adc in jb mov lcall xor push cmp es mov fmulp clc push das jae sub mov inc lret fwait ss insb or loope mov xor cmp add data16 and cld push cmpsl out in pop cmpl or js mov mov movsb sbb sbb in roll popa dec repz jl mov stos adc aas inc pop cld nopl lds (bad) jno add icebp cltd pop add sub jb pop inc sbb aam outsb dec mov repz fistp xchg popa fldl jle mov je dec or pop loop enter or push ret sbb iret aad or andb stos stc jmp mov inc (bad) jbe test inc push cmp mov mov jle and aas es adc xlat les lock aad xchg sub adc scas mov pop jmp fs stos pcmpeqd mov push (bad) mov dec sub lea jp aaa inc fisubrl and popf or insb and or xor mov mov test adc fs jns (bad) (bad) lock mov add fdivrl and push sub push jmp outsb cmp jg cmp ljmp pop imul push cmp mov fist and push fistpll repnz or push cmp ja pop mov ljmp bound inc mov mov sbb popf iret adc lea adc cld mov test stc xchg imull add daa push xchg jne (bad) fmull imul pop jns in mov insb pop in dec and ret mov add and jge out mov jg loope cmp inc inc fildll lods negl dec rcl lahf test hlt sar sbb data16 push mov in jp stos inc mov mov dec (bad) mov fcomp lods cmp das pop lahf mov mov cmp push roll cmpsl loope imul iret mov add sbb xor fchs das jae mov les aad inc inc adc icebp fsubr or jns jecxz test daa sub pushf lcall sub repz hlt ja dec cwtl aaa jne subb xor mov dec loopne (bad) pop xor and xchg dec ds mov jb loopne int3 mov xchg dec movsb gs mov (bad) or mov hlt add xor and loop pop mov jge das sub movsb jo pop subl push call mov imul push jae mov mov mov cmpsl dec scas cmpsb mov cmc and aaa inc rcrb iret mov rcrb out loop adc push sbb ljmp cs sahf jbe pop (bad) cs cmc int3 test lds sbb in push shrb sub cmp lea xchg pop std or leave loop xor or fucomip (bad) iret and lock ret pop imul xor scas shrl out subl cltd cmp inc push jge adc repz ficomp pop push or add mov jb add and sahf insb test push pop sub jp xchg mov pop add jg scas or adc cli adc mov pop mov lds jl pushf push jmp mov rcr popf sub aaa enter xchg ret mov xor and cmp fnop call add jne dec mov and hlt sub add xchg xor lods mov add mov sbb frstor iret enter and push inc add ljmp push xor repz aad fidivr hlt mov mov pop out pop cmpl jno (bad) stos sub cltd stos jbe xor pop fwait mov or loope mov shrl mov arpl int jbe mov into or and mov adc lods out roll push or mov add jge jle data16 xchg pop or mov mov sbb mov fildl mov jno jb (bad) mov gs push inc sahf push jb addl mov jo movsl xchg sub pop scas xor xor cld mov or dec pop scas mov cmpsl div (bad) aas adc ljmp mov add lds push shll mov jb mov addl mov pop mov pop ret out mov and scas dec mov mov ffreep jge arpl mov jl cs push aas (bad) ds fs mov adc or jns sbb movsb fldt (bad) jecxz fistp lods and xchg and leave cmpsl or adc loope push (bad) repz in dec sbb and xchg insl (bad) (bad) sbb dec repz ljmp mov sub movsl pop inc mov das fistl cld mov xchg ja pop aam cmp movsl dec pop and cs jl sbb cmp push jns xor sbb aad into es mov mov pop in lds dec das into or xor and jmp hlt mov and jle adc (bad) stos sbb arpl add adc inc rcrl pop xor dec xchg cs push pop subl stos and xor add (bad) sbb stos mov ja push push jp fimull push ret pop pop movsb xchg dec ret sub aam movsb sbb lret fdiv pop xchg (bad) rclb outsb pop lds sbb push je xor int3 popf imul dec jecxz arpl (bad) repnz adc dec mov sub (bad) (bad) adc cli dec sub test in (bad) cmc popl jp jecxz or cmp clc addr16 lret dec (bad) hlt dec lahf fsubr push xchg into sbb fisttp aas mov add pop ret dec jmp fistpll std cld dec add mov pop dec popw cwtl xor test lock out push inc dec (bad) out jo pop sbb jp mov (bad) mov ret sarl test push test stc sub mov hlt mov sub pop ficomp jp les xchg pop xchg les lods xchg cmp jp xchg bound push pushf outsb std (bad) int3 call add mov sub es pushf add sbb js mov xchg cmp cmp mov mov mov (bad) repz jecxz mov ss and dec (bad) pop mov out xor mov xor les ljmp mov inc aaa scas js repz fsub (bad) mov cmp sarl ja xor sbb out movsb mov mov scas cltd jp add jno fucom xor pushf in leave scas sub xchg out or pushf test push cli adc nop mov adc lret scas in sbb jle je ss jnp sub hlt sti add or sbb (bad) (bad) mov repz or inc popf fs clc pop dec rolb sub dec repnz int3 dec and mov fnop pusha addl je mov outsl jb arpl daa mov aaa outsl in sahf jnp inc fcmovbe outsl lea lret hlt push dec data16 sbb dec outsb fwait icebp insl mov outsl jecxz (bad) xchg (bad) dec imul pop daa mov xor cli imulb xchg fs mov cld call insb or iret inc fiadd cltd push push sub ficomp std xor js lods push nop dec xchg push jmp cld sub inc mov dec sti out or sbb pushf test aam pop xor int xchg cltd cmp ja add add arpl lds or cmp outsb push inc fnop ret int lea (bad) fstp sti xchg push lcall out or shll xor and out test mov cmc imul cmp cmp popa cmp (bad) sahf adc dec jmp pop clc inc mov xchg push fiaddl and clc in cltd jge aaa pop push adc sub test adc push dec mov fldl icebp add aaa repnz scas (bad) les gs fimull (bad) xor adcb es and cwtl gs (bad) sahf stos mov je mov ror in dec pushf call xchg fsts ja imul and std aas sbb dec inc dec (bad) mov inc xor gs add or jmp (bad) sbb dec es sub inc out cld insl xor mov lods rorb xor pop push add stos inc insl and ds out xchg inc mov inc movsl mov and mov adc push bound imul rol imul aam fisubr bnd inc mov lods mov pushw pop adc fwait jmp pop pop sbb aas insb add mov inc cmovo jns lock xchg adc outsl xorl jge mov or pop xchg cmp xchg lods mov or cmp xor or mov ja icebp scas in jp shl jg mov sbb ss add xor jmp push pop ret or pop inc cli mov mov pop xchg mov push (bad) nop fld add stos aad outsl push or popf cs aas add lock aad in mov or dec (bad) jmp lret lods sub xchg dec mov enter pop jo into imul mov ja sbb sbb loope cwtl xchg mov cmp ja sub lcall std out sbb mulb mov or add adc in jge sti pop jnp lods test fsubl outsl mov bswap jge sub jno (bad) fcmovne data16 lea jmp out xchg in jnp insb mov in stc ljmp mov xchg dec dec inc inc cld mov dec dec dec mov mov cld jge jg iret xor push in sbb fistp insl iret aas and insb arpl pop mov push jb test push repz inc pop iret sbb lods ja test lods cld pop (bad) das iret mov and mov jne cli mov int3 mov aaa rcr sarl push les push inc movsl push or or repz jb outsl repz cmp mov xor aaa jg sbb jo push push sbb pop stos in mov mov sub sbb jae push test xor les jle or in add xchg mov cmp push add inc inc mov lcall fwait movsb insl sbb dec bound mov jae out mov adc sarb push call sahf mov and stos shl adc and inc sbb sbb cmpsb jbe mov nop push inc movsl data16 fcoms xchg fisttp xchg mov adc scas movsl add scas push outsl push mov xor or lods loopne inc popf push pusha or rcrb push gs sahf push jecxz bound mov lcall frstor cltd sub loope inc mov adc dec mov out pop mov into xor out (bad) jecxz es sub cmpsl (bad) into add mov jmp jne rorl pop jge and (bad) cmc insb dec mov sti pushf fbstp dec leave xchg out sahf add roll in xchg pop sbb loop cwtl imul outsl push or enter lods pop add in (bad) xor xor inc jbe fist sub xchg hlt xchg pop sarl cmpsb fidiv mov xor stos sub mov fs sbb js dec stos out shrl lds push (bad) outsl sub cs push insb (bad) ljmp mov test or xor xor fdivl pop or jmp mov lahf or mov icebp fnstcw lret sub popa dec sub into adc dec mov int and mov mov (bad) push fldenv mov je mov mov jecxz push add xor inc aad jb push loopne rcrl (bad) ret outsb loopne pop insb movsb rcrl sub int3 out ja jmp hlt xchg int int call in pop fistp xchg je or jp lret lcall sbb and in dec cmc inc sub xchg ret xchg dec leave loope leave jmp out mov enter and insl sbb popf insb or add and clc ret hlt pop pop (bad) inc negl xchg mov push aaa movsl pop les popa icebp fldt (bad) into div (bad) (bad) adc in sar (bad) in sbb pop hlt jg sbb jp out test sub xchg mov sbb fild cli scas sub aas in adc outsl mov movsb cs mov sub jg pop and mov mov adc sbb fdivl and repnz sbb mov cmc jg les jno mov out jmp mov push outsl scas ja adc adc movsl shlb add rcrb test push pop sbb mov aad cltd mov push xchg inc repnz mov or mov in cmp outsb pop addb mov inc xchg xor jge notl dec inc icebp rolb cmp inc jge push cmp rolb push (bad) repz jl int sbb mov pop push das jne cwtl mov mov (bad) cli jns cmp mov inc pop gs dec mov jp insb pop mov lea aad fist jecxz jg dec in dec cli in pop mov js arpl mov movsb (bad) mov xorl nop cmp jg imul xlat sub jp jo rcr cmp sbb mulb xchg daa orb hlt out dec repnz js adc jnp js adc dec lods pop imul in push ss mov test pop mov and adc mov call fldl jbe mov pushf movsb jno pusha or mov lahf mov pushf into ljmp dec (bad) dec pushf ss push data16 fcompl stc fs popa jne mov out or fcoms xchg jo roll lods repnz fcomp clc jnp jae sub mov add jae test mov dec cmp popf mov aas xor push push xor (bad) aaa stc (bad) cmp pop mov sub lahf outsl jbe xchg in lods pop (bad) cld cld dec and dec in clc xchg in xchg xor jno popf movsb mov mov in cmp enter aad jge xor (bad) push out test loop insl mov fld stos mov xor (bad) mov dec jp adc repnz mov and es loop mov pop aam aaa repz (bad) repnz repnz push inc out push shl in cmpsl (bad) imul cmpsb aas fidiv lcall fimull cmovnp subl vcvtsd2ss inc int xchg aas (bad) jns pusha outsb mov add cmp adc fwait sbb xor dec decl dec and jge inc push rorb pop bnd and xlat sbb xchg enter fmuls lods xor mov jecxz ret js mov dec push nop mov adc clc ds push je pop insb push insl in inc inc and lods mov sbb sub adc mov cmp mov movsb push lret pushf inc mov fistl or clc mov mov cmp mov xchg xchg push inc add das pop flds mov das pop add cmp movsl inc aad jecxz sub xor jbe mov and mov push dec cmp push ds mov mov mov movsl aaa pop ret call mov (bad) lock jo add test gs pop scas aas push add jnp inc inc repnz fisttpl push mov adc scas call sti popf aas aas outsl (bad) and mov dec dec push cmp push ds dec adc cmp daa push and push ret scas ret lcall inc rcl adc push pop (bad) imul push jbe sub cmp cmpsb (bad) mov inc cmp sahf popf popf ss jge jbe jb int3 scas xchg cs mov fsubrs mov int3 aam (bad) adc inc cmc lcall xchg movsb mov mov mov sub mov pop inc pop pop lds mov add mov xchg fist imul in push loop lret push scas mov insl pop (bad) jb xchg pop in int or stc lods xchg dec jp fiadd mull dec orb repnz mov mov test movsl push (bad) dec hlt ljmp fstpl jmp sbb sub test xor lea inc pop dec pusha loope mov adc and xor repnz aad (bad) fimul sub cli repnz inc lret jl aas or movsl jg push add push mov pushf rol bound mov adc repnz push and cmc outsl jp xor mov and fldl sahf int3 test not dec icebp jl xlat sahf popa std bound sbb sarl xchg jecxz test aam jnp jmp mov mov cmpsl add sub inc mov rorb in adc sub insb mov daa lock ret cs je incb cwtl cmp xor pop test jecxz mov jns (bad) pop mov inc pop adc xchg repnz imul push push and xchg (bad) mov cmp jl xchg or mov sahf loopne fdivrl jmp mov pop rolb imul inc or xchg jp sub push xor mov out lret fwait les sub cltd dec scas mov in lret sbb inc and mov sub add sub pop arpl pop arpl sub adc (bad) ljmp insl xchg mov iret mov mov inc push sti out push aad (bad) adc stos pop and pop mov mov push mov sbb cmpsl outsl add in movsl repz lret std or push jbe in jno push call dec push xchg sub sub mov and push push jo cmp fwait cmpsl jnp adc sarb sarl ljmp sbb (bad) scas outsl outsb xor imulb sub push xchg pushl or push (bad) fs call (bad) cmp imul int3 daa mov je cmp push xchg fisubl jg push mov xor or jmp test push out rcrb adc into int3 push and jmp and cmp lods test pop je mov cmc addr16 xor cmpsb dec jns popf adc in pop ss leave inc out cmp call sbb mov push and pop dec mov loopne sbb add cmp insb add mov mov jle inc subb or int3 mov xorl push push iret dec call cwtl icebp xchg xor inc cmp repz xchg jae lock je fcoml sub (bad) cmpsl and cmp nop jnp push ret fsubl push pop (bad) inc loopne das (bad) mov lret mov ja push xchg adc pusha or sahf loope popf xor xchg sub or es lea cmp xor (bad) mov inc out int jg inc int xor sbb fdivrp xlat dec sbbl push cmpsb popl mov fsub lods sub adc dec cwtl or xchg repz (bad) (bad) sbb mov mov fisubr popf mov inc loopne push jb icebp test cmp jecxz jecxz sub push mov pop jg insl pop cmp ljmp (bad) adc inc aaa mov out pop inc fcompl out lea in and xchg ret mov mov mov cmp sahf insb out bound cmp aas jne mov loop xchg movsb cwtl iret inc xchg xchg push and fistpl mov xor push jbe lds mov out cmp imul lea les imul sub pop add sbb add cmp pop movsb lea or add jne (bad) aaa xorl lahf add fwait push int3 movsb sbb les ja pop cli push hlt cld std cmp sub lcall xchg jmp je inc or or mov int3 loopne,pt sub jnp adc outsl das (bad) test es push andb imul js (bad) lods or fsts push popa daa sbb das jp xor mov mov dec repnz movsb pop inc and lahf jno pop mov call fcoml mov adc popa mov fstpt mov push outsb xor ret sub xchg das push loopne cltd int lea push xchg sub enter add int3 lret adc ret pop mov in mov stc dec inc idivb push jbe sbb pop rorb dec pop call lods inc cwtl push cltd inc push xchg sahf dec mov inc push mov cli cmp icebp pop loopne jbe mov xor stos outsl sub jbe lcall rcll (bad) push (bad) mov cltd pop fsts pop std aas mov adc xor xchg xorb movsl fsts mov js je jns repz fcomps add mov and sbb stos sub mov aad dec inc or lds out fstpt test pop (bad) push mov and and decl mov dec ficom mov push popf cmp rcll push adcb imul and cmp dec lds or call lds mov adc imul add fistpl lcall inc loope push cmp and or or sbb inc jp sub stc add mov icebp jo jae insl or andl jg xor int mov (bad) dec adc pushf cli test (bad) pop xchg orb jl,pn inc sub mov fsubp lds popf mov test mov xchg sbb sub jbe fwait loop mov stc xor movsl cwtl lcall jb nop insb sbb imul mov int3 inc fs xor adcb xchg fcmovnb mov pop mov addr16 es test xlat enter jmp push ret lret call das jo jb adc pop in cwtl xor mov adc out roll (bad) inc xchg or sub mov sbb xchg cmpsl xor or icebp lds or loope xor xor lds sub jno jmp test sbb (bad) (bad) out aas lods adc mov cmp nop inc jbe fsubl fnsave scas lods jno fnstcw mov mov sub lahf repz int xchg inc mov jmp or out jo bound cmp adc rclb xchg jecxz aam lahf inc lea mov sbbl jle ss xor loop xor (bad) mov test push add and imul imul and pop pop dec mov mov push jne mov xor mov ret fwait repz add iret or xor pop xchg sub aas rcll lock (bad) das mov in fild outsb mov fimul lea test add and mov push iret lods dec rcrb and xchg mov or inc cld sbb insb cmp dec xchg add (bad) fisubl xchg pop je out jb insb insl lret inc (bad) clc arpl or dec cmp dec push gs dec shrl scas roll scas nop in push out loopne cmp or mov dec rorl dec inc xchg into outsb pop repz push mov scas addr16 dec adc scas scas imul push int3 scas cmp cmc lret mov mov add sti xchg dec mov lock fisttp xor or push mov pop jns dec enter nop loope xchg dec push sub inc dec xor arpl xor sub push ljmp inc cmp movsb add xor xchg popf mov inc mov sub les xor or mov dec mov ror inc repnz sbb stos in mov mov loop push outsb mov idiv pop dec mov popa lods lds int shll es lahf jecxz dec test cmpsl hlt addr16 clc dec (bad) mov ja ficom rclb sahf pushl lods jbe loop je cmp cmp out bound int xchg or and into mov ja xchg ds aas mov lods jp inc (bad) mov aad mov (bad) and mov int xor data16 xchg icebp or lcall mov out daa imul arpl imul inc in ror fnstsw and xor out xor jno mov insl cld mov cs xor add jne rcl add stc sub add push les lcall mov lock (bad) cmp pop loop cltd pop push popf fistp pushf dec xchg mov sub inc push mov adc mov inc adc scas inc repz pusha movd inc add out pop (bad) imul pop rorl jmp xor daa adc in cmp push loope mov jmp (bad) jbe aad icebp movsl mov orps or sub push in sub fstp pop stc sti and out inc (bad) mov int addb popa mov inc or test pusha (bad) lcall gs addl mov je jnp (bad) xor add fs pop div pop cmpsl cs loope outsl pop popf in int3 xlat jg cmpsb dec lods xchg ja fistl mov fs test sbb push mov dec cmp push in gs dec inc dec rol data16 xchg fistp rcll add (bad) aam in fcompl jbe pop mov test mov cmp pushf jle icebp (bad) cwtl mov xchg jecxz xor cmpsb jae adc outsb mov int idiv repz outsb mov cmc insb mov jle xor scas mov adc bound add xor mov inc adc pop dec push roll jmp cmp data16 adc int3 xor repnz pop loopne sub jbe arpl stos ss scas out imul adc cwtl push pop pop (bad) (bad) gs repz push cmp pop mov jp test call push es mov sub pop mov jo popf rorb test mov jl into add adc xor push subl pop adc je lahf imul (bad) outsl or (bad) cmp stos rcll push xchg push repz lcall mov dec jbe xchg (bad) popf sar and inc pop xchg pop or and xor mov lret adc jp js sahf dec gs inc sahf shr test sub aam cli dec xchg xlat cmp ja jmp mov add test test sti je out (bad) jns push inc test sti aas test cmpsb sub adc mov pop push jo outsb xchg (bad) pop sti shrl aad mov scas jmp in adc fisttp in fbstp inc mov jge dec adc inc imul adc cmp xor ja mov movsl add inc lods in pop and or lds out push mov or ret jmp cmp inc pop xchg addr16 lret mov stos aaa cmp jne leave sub cwtl frstor cmpsl xor ss cmpl xor push mov xchg icebp sti adc (bad) out pop (bad) adc adc movsb sub stos xor arpl insl iret or jmp jbe (bad) gs inc clc dec decl in lret negl int std push push sub push adc pop fistp pop ficomp (bad) and adc popf adc mov dec mov imul (bad) stc or sbb faddp mov mov xchg (bad) xchg sbb fisubl pop mov jne and unpcklps insb outsb add dec xchg imul sbb push sbb arpl pop cmp in inc popa add (bad) cmc stos mov mov cwtl xor test in fcmovb icebp mov xor test es js xchg dec push je int3 roll lret test adc lret sbb sbb (bad) movsb or adc out mov xchg dec push pop pop mov xor mov push int or outsb and pop fsubs mov cmp dec popf mov sbb or cmpb push movsb mov imul push add push adc or or sti negb push ja leave scas sub icebp inc sbb sarl movsl insl test sarl in mov and das sbb or pop verw in (bad) dec push call mov aaa sbb inc xor inc push jle lock add mov fdivrl pop fildl mov call int mov enter mov ret clc lcall pop bound mov mov push jbe dec dec adc dec aam mov push test ret (bad) (bad) jno add adc or pop push lret pop in pop outsl push mov gs movl jg leave aad in (bad) daa push xor in push jmp aad sarb imul fucomi les push inc aaa addl outsb or adc jns outsb loop cmpsl dec inc cmp adc fadds and (bad) lret out and adc cmp cwtl pop mov push (bad) ja adc lret (bad) jle dec sbb arpl gs in insl sbb mov lods cmc insl (bad) jae add into mov sub imul aad push mov sahf jp ljmp out sub sub mov push rorb add repz in xorb and adc lret imul adc xchg dec jg bnd inc push out xchg pusha dec pcmpgtw imulb out fistpl cmp stc inc dec sbb cld xchg lods cltd xchg add pop or pusha fiaddl lods pop stos (bad) mov ds xchg xchg (bad) idiv xor sbb bound lods dec mov pop ficompl fdivp mov jl lret lods jle rol mov mov lods fnstcw add xchg stos out mov addr16 xor cltd push inc test inc jle add mov inc lds (bad) push (bad) or cmpsl xor lods loopne jle pop cmc mov int testb dec and int3 (bad) aad adc mov xlat push lcall cltd push push fucomp adc popf ret enter les pop or fadd imul mov mov mov or in ds xchg stc fs jmp scas movsb sar mov mov jbe jg cmp out push inc lods popa aam or xchg push ss imul or pusha mov dec push lea add jecxz mov ret jno into stos xchg arpl adcb cmp pop dec mov into add pop mov ss jo movsb mov out pop push fs jle orb (bad) stc rorl push (bad) in dec test call push add ret jge sbb pop fiaddl mov lds in cmp movsl pop ja test nop add cmp and cmpsl ret lods movsl leave dec movsl lahf mov rclb cmp or push and lods xchg out in shrl adc sbb sti popa jmp neg or xor pop pop lret popa add shlb lds adc xor arpl cmp dec and stc and enter insb jno popa dec and mov shr ret inc mov jle xchg inc leave daa popf mov addr16 (bad) (bad) loopne pusha je (bad) pop (bad) aad adc (bad) cmc rcrl dec mov dec insl ror xchg repnz mov adc sub mov fistpl lods rclb lret shlb mov jbe jl xor ss mov jbe mov ss jl movsl rolb addr16 add xor sbb test test aam push jno daa cmpsb jecxz stos inc or push ret cld ret movsb (bad) mov movb ljmp sub into scas jge aam cmpsl popa js and sbb sbb testb jl and cmpsl mov inc mov dec cmc sub sub scas ljmp xchg (bad) or hlt xchg sbb icebp popa jno cs jne jno pusha or in pop lds mov mov movsl ficom mov (bad) popa cmp push data16 imul addr16 out sub cs fxch mov inc rcrl ret pop xor add sbb sysexit (bad) je xor pop loopne sub or ja and mov in clc sbb dec cmp popf jns adc or jne cmc and cs cmp scas xchg mov push movsl jns cmp imul xchg addl push adc stos push insl lods ret push sahf mov pop (bad) fs scas clc jb scas cs sub arpl stos mov jmp popf outsb push and xchg xchg pop add mov imulb scas pusha pop nop mov adc loop xor (bad) (bad) jmp jnp in out lret inc pushf cmpsb inc or sbb aad mov dec cltd mov inc out inc pop or repz sbb subb or sbb adc or mov cwtl hlt add (bad) jle adc pushl mov cs sub sub test mov (bad) (bad) push adc ret xor loope xor cmp aas fistpl imul popf movsl xchg mov mov push incl jge mov aas xchg outsb (bad) xor lret lret sarl inc mov sub leave xor sub pusha push sbb or dec sbb decl cmpl jecxz xor and (bad) (bad) mov pop pop (bad) icebp add xor call fistpl push or int lds test push inc out das hlt xchg cmp add or xchg inc arpl and mov mov packssdw xchg test push inc ret mov pusha sahf stos stos mov repnz inc add push or js inc movsl ret and xor mov mov mov dec mov (bad) jge and ja and (bad) xchg sub cmpsb out fadds ja pop cli add adc sbb mov aam cltd xor cmc in pop lcall push dec fisttpll jae idivl dec cmp xor mov addr16 xchg test les pop or js (bad) popl orl ss push fstpl lret movsl mov pushf lea sahf daa xchg insl cmpsb jne jecxz mov push push es or stos dec call lret icebp push aaa xor (bad) lret insl mov xor lahf pop cmp test cmp inc mov incb mov mov mov xchg pushf sub inc ret sbb xchg fistp scas jb and arpl out dec mov jmp jno dec xor out shrl pop leave xchg mov jecxz (bad) push mov test sub fimull mov dec fildll jl sbb xor into sub hlt pushf hlt push mov push or adc lahf repnz sub dec outsb or ss jbe das inc jnp fdivrl (bad) aaa mov push out and popf add push mov sbb out adc push (bad) into out (bad) ffree inc adc das fbstp in enter add mov dec fnstcw sbb adc xchg sbb sbb add cmc pushf out xchg in test scas popa stos lret lock andl lods jmp xlat cmp lock negb fistpl ss pop cld out or push push insb pop fdivs pop push (bad) (bad) or or je mov sbb push stos out rcrl push fimul xchg je loopne sbb cmpsb lret xchg mov pop xor insb push ret add lret in pop jo das or push mov faddl movsl rorl or mov and enter sbb sub mul jg std (bad) or insl ljmp dec enter aad leave adc outsb addr16 push and pusha int3 inc lock jb in (bad) pop incl adc in xchg mov lds imul xchg ja cmp fisttpll cmp fdivs ss or jecxz jp mov scas and in cmpsb dec jecxz jbe lods add xchg dec fdivl cli xchg (bad) xor je adc and xchg xor cmpsl cmp aaa out mov sub xchg sub ret insb ret or pop mov pop loop cltd (bad) sarb loop jne push neg inc mov cltd loopne sbb adc sbb mov jle stc adc sub or xchg enter enter lret mov add mov mov cld inc inc insb xchg sbb cmp (bad) lock xchg jnp loop pushf push sub imul dec int3 or test nop scas lcall cmp pop popa or jl cld xor fnstenv out pop inc add sub cmpsl sbb mov scas gs movaps xchg inc push pop pop mov mov cmp and and dec pop (bad) sbb push inc jb xchg sbb jmp cmp sub cmpsl daa repz fwait test (bad) dec adc push push sbb jo sarb dec les notl jo sbb jmp push and subps aas lret mov adc fbld enter pusha bound xchg add mov mull (bad) pop outsl aas push inc lea shll ficompl add insl mov scas pop xchg xor test jno loopne scas mov je cwtl arpl jae imull test push (bad) cmp xlat lock fcmovu cmp cmpsb loop outsl in xchg bound test pop xchg arpl xchg loopne (bad) inc test outsl lret cmpsb repnz push jmp syscall jae repz or (bad) dec or sbb mov bnd sbb jns push fwait hlt insb fdivs xchg inc sub xchg dec sub sub sub ja dec xchg inc dec ret jbe push pop push mull mov adc clc adc sti push lds jl stos add popa xchg (bad) (bad) paddusw cmp test fwait push lcall or add dec push fidiv aas sub sbb mov out aad jmp pop adc rclb jne fwait mov cmp ja gs cmpsl out xchg lods mov popf and fldl pusha in fistl scas inc jnp mov rorl xor enter stc jmp jo dec push push ret lea push fnstenv cs adc fucomip pop cltd add push imul push out popa add push into xor inc rcrl fwait mov jg les arpl xor call jecxz push sbb adc sub and fstpl xor ljmp push jmp test ret inc cld (bad) jmp cld stos sbb sub loopne scas in pop outsl dec lods enter lods cmp lea add addl and lea cld stos sub insb into mov mov test xchg lds rcrb call pop (bad) ja iret mov jl xchg (bad) repz movsl inc inc clc inc cli imul pop imul jbe jecxz add in das jae xchg xor mov les xor dec inc cmc out (bad) fdivl ja xchg lods jnp in push imul call dec dec (bad) imul mov nop jmp (bad) into adc out fsubs add jmp imul pop jb xchg iret cmp or movsb xchg inc lock lea aad xchg data16 and inc mov xor xchg hlt into scas dec inc sbb adc xchg popf mov daa sbb and xor hlt mov pop (bad) mov add daa jle int stc inc imul out popa jo inc xor mov sub sbb outsl pop jbe sbb out arpl dec pop mov mov xchg lcall lret mov push mov stc fnstsw add add into (bad) clc movsb or rcll push movsb (bad) adc xlat dec aam mov pop inc repz sub sbb test ljmp in inc ss and push push pop jbe jne int3 cmc fldenv fimull mov outsb adc mov inc cmp fwait xchg out adc pop sti loop mov and ja fcmovbe movsl sbb stos testl sbb aaa insb mov jle sub and cmp cmpsb mov push pop jl dec mov jno ret int push pop daa inc out nop scas lcall in jno lods pop lods scas mov test loope cmp lea jo lock add callw aaa jne jle sbb cs sub pop jmp dec add mov or ja mov popa jl jl es jge xchg inc mov dec adc fmuls into pop out loopne jb out js push idivb loopne popf adc ljmp xor fdivl insb leave add addr16 sbb xchg test inc dec inc out pusha cmp adc fwait push mov in fisubl xor mov dec aam xor jg pop pop add stos pushf movsl inc iret imul in iret fs xchg fwait pop sub arpl add movsb adc dec sub xor outsb jl aaa sbb popa adc push call gs rcr in fdivs scas cwtl jmp pop shrb push jmp fnstcw scas scas mov dec fdivs sub jg sbb lahf push aaa mov cmp fiaddl jb pop (bad) mov orb lds lret xor xor push arpl sbb loope (bad) add push out stos mov movsl sub inc ss (bad) mov pusha repz dec std cmp xchg jbe jg push mov adc dec jbe hlt mov das loop lea mov repnz xor mov mov ss sbb es pop push inc stos pop lret lret lcall es or lret jb rorl test adc cli test push lret scas cmpl loop or sub or mov cmp outsl push inc movsl aas or test fs jp xor pop inc pop insb fnstenv roll inc mov insl (bad) mov push jp les cli add xlat and aaa daa xor mov cmp dec data16 test sbb mov ret les dec jge rolb test test fdivp push std and enter hlt aaa iret push and xor jle insl cmp adcb in aas ret stc xchg cwtl ljmp sub (bad) pusha nop and adc push stos mov ret (bad) cmp sbb out sbb (bad) les mov mov or clc sub lahf mov mov adc loop and dec xor fistpll pushf mov outsb arpl xor outsb mov push repz xchg pusha jo jae add sahf pop es idiv mov lods jnp lods sub xchg mov std test sbb packsswb (bad) jl scas (bad) cmp inc push xchg out lods pop setp xor inc mov add push and repnz push dec lds ret fnsave adc into xchg xor inc inc adc shr cmpsl xor push xor cs dec ds lods and inc jp push mov jne mov movsl and push pop and mov mov dec xor dec sbb rorl cmp fstpt je sub inc clc rolb fwait addr16 sub or xchg decl int3 test test int3 cltd outsb xchg mov dec cmp fdivr (bad) sti cmp and addr16 (bad) dec decb in leave test jo lcall cmp outsb fbstp xchg cmp push lahf dec adc insl into xlat mov sbb cmp fimull xchg out popf ss outsl lds aaa push in ret addb cmp or bound dec sbb inc mov popf xchg mov adc push js rol insb fimull push rcr xchg mov daa int pushf aam scas jecxz or xchg mov or aam mov data16 xor insl and ret popa pop test (bad) out mov adc cmp inc in scas jno mov (bad) mov lahf fildll adc push addr16 aaa pop sub stos int3 jmp shrl pop adc mov in ljmp loopne cmc sub sub xchg ja std mov (bad) sbb out inc imul pop in dec popa mov icebp gs vmovapd add mov mov or cli lcall inc rcrb inc mov dec mov mov nop cmp mov dec cmp mov sbbl mov decl push daa add inc rorl iret call (bad) and lock jne pop aam mov jg outsb ja outsl mov sbb mov ret rcrb jmp mov push cs test mov nop inc cli (bad) (bad) test mov aad xchg loopne mov sbb xchg call in hlt cmp adc adc dec test mov and call (bad) push xor aam test rcrl adc fimul xchg les mov test jp rol add lea xor fstpt mov hlt pop lock stos mov jecxz loopne pop adc (bad) xchg rcll stos ret push or dec dec adc rolb ss adcl inc insb ds sbb xchg (bad) adc jae push and jmp arpl push sbb (bad) repz rcl pop push hlt ret pop arpl xorl pop adc inc mov data16 addr16 lahf or outsb jnp xchg std xchg mov push xchg sub mov mov ret fsubr mov (bad) lret jb popf push rolb pop ds jne mov ret test sub addb lea mov mov test push inc inc cli dec cmp ss push mov xchg mov scas popa add mov push sub stc arpl jne inc pop aaa hlt jns decb hlt add (bad) cli xchg dec cs mov sub ljmp lea in cmp inc cli repz mov lret mov xchg (bad) jb fwait mov add aaa daa fldl inc (bad) xor (bad) pop mov add add or sbb and sbb or insl cmc mov imul sub lods ljmp fwait or adc fcompl pop cs pop (bad) push test popa lahf int lret adc pop add mov scas xchg and test and push mov idivl mov dec xor cmp mov scas (bad) hlt xor jb loopne orl (bad) cld fdivl jno test xor or outsb lds into xchg mov jns adc outsl jbe dec xchg push idiv ja sub xorb bound lods (bad) cmp (bad) aaa daa in pusha ss xlat test sar and inc cmp adc inc mov enter test inc into sbb imul push js and insl adcl add inc stos idivb add mov xor in cmp lods cmp fcompl call sub adc das jne mov fs dec cmp imul test js repnz lret pop in xchg jmp xor mov repnz ljmp (bad) cs dec jl jge movsl or mov or imul inc xchg push sbb test in insl (bad) cmp scas mov xor shl inc loop sbb jge sbb push mov fdiv jecxz mov lret rclb mov cmp (bad) lret add xchg ljmp mov cmp sub cli cmp pop xchg pop pcmpgtw xchg and lods rorl adc jb sub push sbb xchg xchg test mov adc cmpsl jo push (bad) (bad) iret fs dec jo mov adc dec les add cwtl xchg push bound dec insb dec xor fistp (bad) dec pop test dec scas dec inc out bound std jae sbb scas out jb enter sahf mov xchg inc pop push popa in nop mov mov mov (bad) push scas (bad) mov inc shlb mov sub adc scas lds pop mov fdivs cmc cmp sub rorb mov xor sbb inc lods xlat dec sbb gs dec cld mov inc xchg lods arpl stc sub out inc repnz loopne cmp sti adc xor lock xor sar inc xor cli das dec (bad) daa push (bad) stc and pop push rorb mov sub aaa repnz hlt mov shr clc or bound or jmp js jo jne aad mov div lahf jo sub shrl jbe mov adc cmp cli out or mov call lret ret cmp jno jnp out mov sbb jno mov cld cmp aam mov add cmp je nop nop lahf lea jo ja push lds jg jbe sub sbb sbb dec dec fwait add not ja fwait cmp cwtl into test inc fsubs ljmp into int3 ret jl cltd add and xlat mov aaa rcrb mov frstor jmp ja lcall jecxz imul push push xor out mov gs pop push xchg out cld mov or (bad) dec mov (bad) xadd aas xchg mov cmp ds mov cmp icebp jle loopne repz mov and xor std lret nop mov pop fild mov xchg scas insb pop test push inc icebp jp sarl pop xor push movsl andb or xchg inc je push sbb aaa addr16 test icebp lret int3 pop sarb jge push dec cltd (bad) pop pop in ss mov cmp ljmp pop xchg test arpl mov jne jo scas stc push sub sbb pop das enter sbbb mov arpl lcall mov mov and fisub lock out pop sbb jmp fsubl or push das ret arpl inc sbb outsb jno ds inc (bad) fwait or fwait nop (bad) iret mov push xlat into push outsl sbb popf mov mov sub mov inc stos sbbl push hlt mov arpl cmp xor and xchg int cld incl fsubs mov push push imulb popf jb sbb jp rcrl xchg fistp out jg fdivrl mov imull daa push push jmp test sub add mov cwtl push push mov xor cmp sub inc enter cmpsl pminub inc adc mov or dec into jae sub (bad) xchg fwait (bad) mov sbb jns dec mov (bad) jbe lea push fs addr16 or arpl pop hlt out loope and dec mov sub repnz pop (bad) cltd ss dec jle xor dec mov (bad) jns out stos jns mov arpl xchg cld iret pop cmpsb jno or sub int xor cmpsb jg mov mov stc push mov es int dec sarb ficomp rcr push test push push aad loopne xchg inc dec (bad) xor pop adc jb push dec mov dec lods std push dec sub dec jnp push ds sub lods lret ret pop subl test jecxz mov and cmc out div sbb mov sub xchg or lahf adc mull jp jb scas fsts or and lret test push mov pop xchg add push js xlat inc jo sub add (bad) sbb pop dec out jo dec loope cmp and dec nop (bad) pop outsl fistl repnz xchg jns in lahf add popf sbb (bad) pop jle add xchg adc (bad) dec mov lea int mov push sub mull movsl pop (bad) and in cmpsl cmp repz (bad) pusha add popf (bad) dec inc inc insb (bad) adc jae outsl and or pop enter mov mov pop and push push cmpsb cmpsb xor pop jecxz pop jnp jae repnz xor les or mov jp fldenv in xchg mov xor cld mov push imul mov jmp jp clc stos push pop sub adc or sub lahf cmp out lahf fmul in dec mov mull (bad) and lcall jb pushf add jb cmp sbb pop cmp (bad) lret lcall (bad) mov jecxz ja fildl shlb sbb in (bad) mov (bad) js push or sub cli jno js movsb cld pop (bad) negb push sub xchg add cmc out xchg sbb data16 ja dec test mov mov sub xchg inc and mov into cmp xchg fucom jmp lods les dec and mov cli inc or jnp mov jle les ljmp inc outsl pop stc (bad) sub mov (bad) aad repnz mov dec add cmp or xchg sbb cmpb add xor outsb push jmp sarb andb sub rorl mov sbb cmp xor mov inc int add lds js pop les (bad) xchg inc outsb or add mov lret add add add push mov lods cmp nop lods popf mov mov cmp mov movw rolb imul (bad) je movsb sub sti or es xlat pop loop adc mov inc into push sti push dec pop in mov bound flds mov or mul (bad) mov sarb aaa in xchg mov nop mov es push stos divb orl dec xchg in or stc dec mov ret outsl jns xchg sub int jns jg cmp or (bad) pushf (bad) repz into in cmpsb jns sti sahf mov pusha or adc push jl jecxz psubusw xor std push ret cmp jnp mov xlat sub in das arpl inc movsb mov push jae out divl dec dec mov pusha push mov inc xchg (bad) adc mov testl jb popf jns dec or jmp arpl aas out jl jne mov fidivl cmp mov or iret xor jnp push inc push cwtl call and or lret jbe daa mov (bad) mov inc inc fisubr shr mov pusha loope andl nop push add (bad) into sub xlat lds xor pop fnstcw push jecxz cmpsl daa loopne dec jge lret mov push sbb jns jo lods addl repz aas daa mov dec (bad) dec imul icebp adc xchg cmp xorl sahf inc clc mov dec jnp fsubs sub jb adc mov pop pop dec mov bnd (bad) fstpt push js lds or dec xorl outsb sbb inc cli orl inc pop lea fbld cli add mov dec mov pushf jle inc icebp ds nop cltd sub std test cmp negl lods jb imul adc push xor rol inc sarb int mov arpl mov hlt pop jecxz fisubl add pop sub das mov into add in and in (bad) xor out push sarb push pop inc in out lods out mov out (bad) jno push jecxz jg scas pop mov aas push loopne (bad) or mov aad not (bad) addb or or push and jbe lahf push xchg decl jle lea and ds ljmp enter xchg adc mov cmpsl add (bad) jae push imull mov add adc mov fistp cmp stos stos divl js dec rorb cmpsl adc push daa sbb in mov fstps sbb in mov pop and xor mov iret ljmp sbb outsl imul jno in repz xor add push pop mov lahf lahf icebp stc cmp repz pop fiaddl in push lret or add sbb pusha sub and movsl sub xchg and outsl popf pop pop mov mov gs adc dec pop adc pop sub ficomp data16 leave repz push je clc imul mov mov add mov sbb push pop xor adc lcall sbb out mov cmp mov pop fmull xor push cmp pop jne fs loopne repnz (bad) cmpsb js push pop pop inc je cmp pushl sti jb mov or cwtl sti inc hlt mov mov test es orb add xchg inc adc sub sub pop and and (bad) (bad) in jnp sub ljmp mov jns shrd mov jno pop jg int3 ss aam arpl and nop rcrl mov and call sub jg push cmp lods int3 adc cli sub jl out jne mov into mov adc mov imul addr16 mov cmpb loop mov out loope xchg push or jg adc mov (bad) dec notl imul ret mov mov rorb repz in cmp dec mov mov repz mov (bad) cmp xchg mov lahf mov rclb push add xor scas xor imull (bad) les add (bad) and les cwtl mov push sbb xor and sub popl lcall mov dec or and stos push push ljmp push iret dec popa ja repnz push fstps push bound push mov leave std ja int mov gs add test dec adc insb mov fadd adc pop and mov int pop pop and or ss cmp clc inc cmpsl fstps (bad) ljmp xchg inc cmp sti int pop mov (bad) and dec insb cli jmp (bad) sub pop stos (bad) lea pop jbe ja pop jmp push adc scas xchg xor ljmp pop push mov lret je lea or jle lret lds fsubl lods push add sbb xchg mov ret out mov ja push jne (bad) fndisi(8087 mov (bad) mov fstl mov jge repnz rcll leave xlat gs and sarb mov cs jle insl xchg xorl int3 and stos mov stc call lret int3 test mov std mov imul (bad) pushf sbb cmp cmp pop mov xor std xor rcrb addr16 in and xchg lea xor or mov lcall push mov fcoml and xchg push add inc ljmp (bad) adc mov leave sub cwtl mov push test push fiaddl sahf repnz push loopne rep daa ret mov jle in sbb scas jne mov rol jbe cmp jne fdivl inc repnz or call scas xchg int movsl fistp add jle outsb cmp mov pop test (bad) xchg sbb dec negb jg jbe xchg (bad) (bad) jne mov daa imul popa ss inc jnp lret inc jnp aam mov mov push mov mov sbbl das push push or (bad) push xor (bad) xor in or int in fsubrs int jo push int3 dec mov sahf sub jmp xchg insb ss or or into ret popl fstl add xchg xchg cmp movsb insl sahf insb adc (bad) popa rcl push fildl imulb fs mov and mov adc adc mov xchg inc outsl ds sbb dec mov ret jnp rcll pusha xchg hlt rdpmc xor cwtl and ss adc pusha icebp (bad) jno lahf mov addl mov jne insl sbb xchg arpl inc jne xchg inc repz inc xor sahf bound clc leave mov mov jle je mov mov (bad) cmc xchg xlat (bad) inc add and or loopne fwait or xor mov insb iret sahf or pop ret divps jmp data16 cmp icebp std into scas cmp mov mov lret fidivrl in ljmp cmp mov mov loop push (bad) out cmp xor jae adc cmp inc pop mov cli (bad) mov and inc push xchg sub faddl push je dec xchg pop loop sub (bad) lock and fldenv xchg cwtl cmpsl cvtdq2ps popf pop (bad) mov fdivl outsl sub add and push mov push das stc xor xchg cmc lahf sahf mov gs jmp test lods sbb xchg lods out xor sahf pushl (bad) mov inc pop scas mov pushf add into (bad) adc (bad) sbb xchg mov cmp mov and sbb pushf mov dec cwtl jp sbb pop in shrl int cmp ficomp inc sbb ret mov mov add jecxz add xlat cmp or ret aad fdivp xchg stos popa mov imul addr16 push dec cmpsl or pop cmc cmp jns int3 jno repnz inc cmpsl sub sub iret mov sbb shrb xchg cltd sti lods lahf dec mov sbb roll jp jmp xor mov icebp xor lcall jmp adc dec aad lret dec inc inc data16 das cmp mov mov imul push dec arpl (bad) fistl imul push loop dec jle hlt dec int3 pop mov pop mov lahf in mov mov mov jo out jns fimul adc xor repz fimul push call mov adc out mov mov ss mov mov and push push inc and xor jp (bad) lret xor jle push imul cmp aad pushf lcall popa arpl cltd adcb mov jge inc xchg dec pop mov and fnstcw mov push bound ret sahf loope mov mov cmp push scas pop or mov mov test and dec test test xchg push jns cmp in lds mov repz or int jl jae out or adc mov out jns arpl mov add int3 push jae addr16 mov push jmp or cmc repnz ja jne sbb (bad) dec mov mov cmc push mov adc outsb mov dec ret bound push outsl mov push negl push (bad) lcall and dec fbld test xchg les mov aam shrl push test (bad) je jo and pop cwtl aas or mov je mov lcall cmpsb sub cmc rcr ret roll add or test idiv cwtl iret dec ficom dec mov cwtl adc lods popf insb sbb pop test leave or inc pusha sarb xorb fcoms imul mov aad cld stc (bad) scas icebp xchg pusha xlat cmpl or xor xchg push dec inc icebp sub cmpb in push mov dec scas xlat mov mov xchg ss jmp xlat mov pop xchg daa add jno jmp popf push into or sub cmp in cld jl mov mov sub xor pop mov out enter imul mov cwtl imul xchg shl data16 fistpl jno mov inc or lods ss xchg pop mov adc and push adc pushf icebp mov dec and pop sbb add bound out iret mov pop mov mov js push jmp outsl sub xor cmpsl push ljmp fidivr mov in shll loope and xchg out or fcmovbe and shll pushf and cmp push (bad) cmpsl and xchg mov mov lcall in and bnd enter dec mov loope push sub inc (bad) and dec add sbb add stc (bad) imul repnz aaa pop and mov or dec cmp mov mov fs jae jmp jno mov dec cltd sub out mov sub fsubl pop adc mov and inc inc cmpsb push push (bad) (bad) (bad) pcmpgtb xlat xchg lds jb inc xchg pop cmp les push sub aaa popa adc btr or jns sub mov mov inc fiadd sub push mov (bad) cmp aas fsubl cmp aad mov aam cli dec xchg lahf add hlt cltd lds out cmp or dec insb daa cmp lea roll stc je mov or (bad) lret enter xor xor pop test insl cmp imul cmp dec pop sbb movsb push insl cmp nop fwait add xchg bound cwtl cmp mov (bad) mov mov mov xlat fcoms loop lret xchg cmpsl fsubp out jno scas push outsl jle out mov repnz cld cmpsb ret (bad) pop sahf out jle push jg testb and cmpsb fdivrl cmp clc sarb lds cmp xchg xchg xchg inc xchg or jo jg leave (bad) pop lret mov mov rorl dec jmp stos inc pop in push mov jbe sub cmp cs cmp out dec jecxz je xchg push mov decl inc dec adc mov sub xchg icebp leave fldt fsubr aas aad movsl jb ret arpl movsb and pop cltd inc outsl insb jne imul adc dec fs test das ret cmp roll ljmp mov mov mov dec in cmp insl sub dec mov out dec in (bad) int (bad) bound repnz push add xor enter ficoml outsl fistpl xor sub (bad) jne out pop lcall dec add inc cmc les jb jmp test mov pusha mov call lea jmp movzbl and mov cmp push sar mov rcl pushf shld shl mov rcl sub inc mov lea das btc mov aaa sub sar btc rcl and cwtl neg mov push shl pusha pushl bt cmp add call (bad) jns xchg mov ja xchg pop out sbb mov (bad) testl in in dec mov icebp sbb and adc mov pushf jecxz (bad) xchg jbe sub cld stc xchg ss negl inc add enter mov (bad) stos das mov pop in ss add pop negl adc sbb into mov xor inc cmp dec adc sub pop daa negl dec rorl movsb fldl xchg xor call (bad) lea mov (bad) int (bad) out gs or in pop or cltd xlat leave xor lods lcall pop movsb hlt add jp push sub dec mov xchg jg xorl cwtl cmp std xor imul pop arpl stos push ds sbb jo push jmp jg mov decb je dec sub ds fild pop mov mov sbb popf lahf xchg in cmpl push movsb add je cli vmwrite cmpsb inc push add arpl mov call les test addl mov jp xchg xchg or and and xchg push mov add jae movsb mov repz push out xchg jmp mov fucomp outsb pop out fucomip inc inc movsl in dec in dec jb sbb stos bound jmp xlat scas and iret inc xchg addr16 mov call shrb jmp cmp int sub fildll movsb pop cmp mov push or ljmp or mov and jb into in inc loopne ds jl into jns mov mov adc jmp dec (bad) or lock mov out dec push stos out insb push scas (bad) sub inc int3 (bad) into cmpsl sub cmpsl or dec xor jo adc add push dec daa icebp fucomi xor leave inc dec xor xlat fstpl bound inc loopne mov (bad) jp sbb push adcl addl sub mov sbb js push stc dec or cmpsl out sbb lock push mov je clc push stos push scas fisubr loopne orl (bad) pop (bad) incl shlb ljmp mov mov dec btc rcl shl mov rcr sub xadd adc push test mov sete rcl xchg rcr mov dec sbb cmp mov push btr ror mov rcl mov movsbw pusha mov rcl sub shld btr pushl cmp mov not bsf das mov test cmp clc sub setb and pushf call or mov lds cmp xor cwtl nop cmpsb decb (bad) mov or or leave or in add jl lock in lret jmp inc fisubl es adc (bad) jecxz outsb xchg cs adc ficoml test pop pop icebp dec cmp mov mov enter push fbld push movsb leave sub loopne mov data16 sub js jg (bad) test cltd push pop sbb or js ss pop repz inc mov sbb xchg sbb push pop adc xchg rcr insb push je loope call in push dec in ja cmp jne mov imull push mov lods xchg dec sbb (bad) call push not pushl movw inc clc pushf not push test push stc sub cmc pushf pushl mov rol stc jmp cmpb jne shll shll push lods neg inc ror dec mov pop ret mov xchg mov repz cmp push fisubrl repnz (bad) pop sub cmp rorb mov jg pop xor loope lahf push js outsb pop out mov add jae bound cmp sub inc stos test lock pop add cmp out dec dec addr16 sbb pop flds push jecxz or clc add dec daa jg int3 dec jp movsb std fild sbb (bad) scas inc push jnp aaa pop add loopne loop cmovle sub mov int mov cld mov (bad) sbbl push fldenv cmpsb mov in xchg cmp jb out std mov fcmovb fnsave loope dec in xchg adc cs (bad) or jge loopne mov nop sahf out mov pushw insb lcall lret adc inc cld fmull and ret nop push fwait cmpsb fldenv and jmp fcmovnb (bad) ja (bad) imul xorl lea (bad) out inc stc pop fistpl loop sbbl mov mov jo inc imul test xor out mov jne xchg and push stos xchg into mov (bad) xor jmp stos mov stos mov sbb cmp cmp add jecxz or push mov call cs aaa jo lcall js cmp or xchg mov cld jb into cmp data16 push push lock pushf repnz ljmp iret push push sbb pop mov sub pop (bad) out adc pushf leave jp mov push (bad) sti rcll mov xor mov test push in or enter loop xorb cmpsl lds xor (bad) ljmp adc add pusha stos push movsl loopne shll (bad) mov jle orl cli cmp gs cmc or xorb addl je gs pop push stos or sbb imul js mov test movw lea sub cmp push stc adc jmp and or pop inc mov xor lcall push (bad) lock clc jl push inc mov add dec mov hlt sbbb xor and inc lds cmp inc mov movsb bound inc push dec xlat in test pushl or sbb inc in ffree popf xchg rcrl cltd out adc inc inc stos jo fcompl movsl ds enter jno mov inc icebp pop cmp push outsl cmpsl lret lret jp inc movsl lock test sub pushl imul dec sti cmpsl int3 (bad) mov sti pop cs and lea jne bswap lahf push mov cwtl push mov pusha mov lea mov mov lahf call cmp mov ret es xor (bad) nop movsl repz repnz pop inc ss sbb gs leave mov jp adc inc pop adc inc test lret cmp bswap (bad) stos in loope pop das outsl insl cmpsb sbb call sub sub fcoms or in and lcall pop fst xchg lret lods lods mov ss ljmp ss fistl enter icebp jecxz jg jg fisub dec mov cltd aad ss in add lds push xchg push lds test xor test cli sub sub jae push mov mov dec mov inc fiadd sti or lods jb push mov mov and mov jbe repnz mov xchg dec popf xchg je jmp mov lods fdivrs lret loope mov iret ror push roll push into bound jb outsl pop popf sbb cltd fs loope into pop pop out (bad) into adc and mov pop dec xchg mov sbb cmp ret dec cld mov je loopne jmp fistp lods addr16 cmp sbb orb pop cld adc and ror fildl sub sti inc aas out loop idiv adc pop lret ret or pop scas xchg or jmp and jmp xchg imul cmpsb or ja mov inc mov lret or and ljmp pop daa rolb pushf ret jg mov fnop and jnp roll push lock std fdivl cmpl lods cmpsl out clc jg jge sahf xor jp mov mov lock xchg dec icebp cwtl hlt arpl mov imul or pop and push mov mov inc and call out xor int3 or mov (bad) in rcrb ds scas push mov and out mov bnd popa mov shrb jb (bad) fiadd into sbb pmuludq xchg adc ss mov out sub enter cmp pop inc mov rcrl lods mov jbe hlt jg jae icebp inc cmp jg add jns lock and ljmp fcoml sbb fsubrs adc (bad) stos xchg sub jns cmp ljmp adc icebp (bad) scas mov sbb shl lea call pop ret movsl jecxz xor or xor push sbb mov pop rcrb and pop lods lcall hlt fs movsl or pop mov add pop (bad) mov lock sub lea xor sbb push (bad) gs mov jae fwait pusha jge shrl inc pop stos xchg (bad) fstps and mov add sbb shrl sarl fiadd insb xchg outsl cmpsl in fdivrs out out int push insl push jecxz orl inc pop movsl pop push jb pop daa iret push adc out outsb cmc aas xchg (bad) xor outsl repnz dec sti jb or mov push aam arpl (bad) repz fcmovb lods mov shl cmc shrd rcl xor movw or inc btc mov btc call sbb stc bt lea mov mov and adc shld cmp mov call call sub sub mov shr sub call stc pop ret and mov rorb jo jbe jb pop scas xchg add add loopne ljmp imul sub mov push xlat jbe push mov sarb mov std cltd jp adc cltd inc pusha leave nop sarb lret adc pop jge insb loop (bad) pop int3 test negb push int popa pop adc jno mov sahf dec jmp push pop cmp nop hlt inc dec out add add xchg mov repnz outsb adc dec imul inc ljmp pop mov imul in dec or cld pop sbb out lock cmp test and jmp xchg in ret or xchg dec hlt or push sub leave xchg imull fistpl out inc out ret cmp inc cmc or inc mov bndldx jge xchg and cmp mov lock xor or rcrb lock movsl leave mov (bad) std jmp push xchg enter leave test xchg shrl jb add pop arpl cmp enter (bad) dec hlt js sub sub pop shl out out pop adc cmp inc rolb pusha mov xchg lods pop ss adc sbb pshufw (bad) cs mov xchg cli xor leave movsbw sub lea pushf pusha mov lea movsbw lea mov mov call inc inc push inc push dec xor cs insb add clc movb mov jmp cwtl lea pusha lea call jmp jns xchg add or sbb ror out movsb cwtl xchg ficoml jge add jns sti cs int mov lods imul push jge mov push enter add ret inc push push outsb in sub push jns addr16 sbb orl inc and into fstl (bad) lods scas dec and push das fisubrl les dec (bad) stos dec aas arpl dec std dec mov out jnp loopne dec (bad) pop push xor stos pop xchg pop outsl ljmp add mov cmp aas xor pop jns xchg lret inc adc mov pop mov dec or mov push pop scas push mov and mov outsb add aam fs lret mov pop push dec jae cmpsl mov xchg or xchg push int cwtl mov add outsb cmc aas (bad) ljmp mov mov iret enter mov and js or inc xor leave or sahf cwtl cmpsb js cmp sbb hlt loop js (bad) mov ljmp movsl xor inc fisubr mov mov lock jmp (bad) sub mov bound daa test (bad) mov push dec mov idiv jb (bad) mov and jne cwtl push hlt cltd test pop insb sti cmp sbb jne std push fstps imul or fidiv es popa jb sub insb xor push incb std sbb adc lahf lcall jl inc inc and mov loop stc or or add pushf pusha jmp movl sub pushf pushf jmp add rcl mov stc test pusha pushf lea je pushf jmp fdivrl jo lret jb and sbb dec stos and push jae push decl mov lds mov lea add add sbb jae or mov (bad) (bad) je add dec movl sbb bound mov push xchg out push ljmp and lods or mov push sub dec lahf sub push arpl in js mov and aad fdivs cmp jg daa xchg sbb and xor aaa xchg icebp jb lret or mov pusha mov xor jns std mov ret sarl and negb in pusha test and loope (bad) fs into sub lcall and xchg das fwait in addr16 pop jge hlt xchg mov jge jno stos inc mov dec adc adc iret push popa jnp es (bad) lret popf leave pop movl xor cltd cmp add and and (bad) sbb jbe inc cmp or jle mov adc rorb movsb bound movsb mov inc aaa mov (bad) push inc pop shrb lock in xchg add jbe lret xchg outsl nop mov lock lea fist (bad) gs pop add xchg sbb arpl jbe fs jp jb loope dec sbb push gs jle mov sahf gs pop mov in adcl in std jl addr16 fimul clc sahf add enter cmp rolb sub or or popa xorb pop xor adc dec dec loopne xorl xchg out mov and or sbb add and pop push sbb inc or xor sbb fisubr inc scas in lock jae fwait or (bad) fiadd jge,pt jecxz insb (bad) outsb and es shlb fdivrl lret sbb sub fstl mov sbb cmp repz fldl arpl inc jb gs inc and inc pushf not pushf pushl push jmp imul jo fs insb add cmp addr16 inc cmp xor dec aas cmp cmp aas (bad) mov cmp rolb aad insl inc cmpsl (bad) lods pop fldt data16 push (bad) cmp xor push cmp inc jp xchg push fdivrl sahf test cmp (bad) sub and xlat movsb adc in outsb pushf aad push mov cmpsb or pop xchg rclb fimull loope ljmp enter cld sub sbb pop (bad) dec mov mov mov in pop mov cmp in jl mov jb movsl sub jne nop sti jne mov push fildl bound xchg lods cmp es cmp lds pop jmp cmp mov call not pusha mov lea jmp lea jmp movzbl movb movsbw mov pushf bswap pushf lea pushf pusha mov jmp not pushf pushf movb push lea jmp push sub push (bad) or pop outsb or push cs mov js pop dec xor dec sub mov outsb out sbb (bad) pop sahf and icebp jae jecxz cld mov arpl xchg js ficompl (bad) pop mov out imul xchg andl mov sbb push stos xchg loop cmpsl jnp jecxz jno sub fcmovu dec (bad) call arpl fs mov fs movsb inc lret adc mov sbbb mov xchg pop jno and xor loopne or clc jb loope lea mov into dec outsl ja loopne or mov xor jp cmpsb in pop mov add pop push xchg das add sahf mov jb xchg push ds cli push mov shrb pusha icebp mov fsubl inc ljmp (bad) dec mov jno jno sub jecxz loopne mov jg rolb adc div mov das pop jo adc add adc push enter fdivl adcb jp shlb add sbb pop add xchg das add sbb pusha aam mov add stc bt add push pushf lea jmp call sbb nop rorb xor jb,pt pop adc subb dec ret xorl (bad) loope jo mov sub lret jne mov adc push (bad) inc push cli jbe add fsubr dec loope ret cs cmp xor frstpm(287 dec mov sbb sbb cmp push repnz dec sti test test sub xchg sub adc inc ret jle push cmp lret dec in negb cld test (bad) shrb pop push pop ret sub cmp mov adc fisubrl jb mov push push adc xchg adc mov orl ljmp cli dec add push ljmp and test adc cld arpl add decl test sbb jmp lods stc pushf shrd mov btr bsf bsf sub dec shr lea lea test sub pushf test push cmp pushl popl cmc bt cmp movw jmp jmp or dec rorb and cmpsb pop std fisttpll cmp add jmp lret cli sub out ds (bad) adc into push cmpsb add pop mov addb les xchg int3 dec jle mov in pusha inc xchg sbb fisttp mov ret cmp repnz into lods adc push int xor xlat in mov scas loopne pop sbb mov jae dec push push fnstenv test push and jb shll ja push (bad) pop adc mov rcll loop in inc sbb repz dec ja in lcall or and mov testl mov negl fs int3 jnp or and mov call shlb mov stc cmp shl test call jnp rclb or inc mov inc mov mov xchg cs in sar dec into pop adc xchg rorb (bad) (bad) movq iret dec (bad) lahf dec inc mov scas or adc jle adc mov mov arpl int in imul leave ret xor sahf cwtl leave mov push inc ja sbbl cmpsl ucomiss (bad) cmp sub lret mov mov sub or xor jmp push sub xchg add mov mov mov xor push dec ret pop fisttpl je sub fs dec test push stos and aas sub (bad) rorl popl jno inc dec xchg gs xor aas fstpt shrl pop lcall mov jmp rol mov and ret icebp fcoms je (bad) adc loopne (bad) loopne jb aaa sbb mov push mov das mov jmp sub adc mov push jno dec inc sbb jo and mov fdivl inc push fild mov mov fbstp add xlat jnp inc and imul jp and jecxz mov jae gs daa sbb xchg push jae sbb std inc and jmp mov pop mov mov xor scas (bad) inc mov adc fidivl test xor aam dec addr16 xor out mov inc sahf mov lret fcomip rcll sub mov fldenv sbb out fwait rorl inc cmpsl push fldl subw sbb adc mov and popa or jmp hlt js in in or ret fist hlt or repnz cmp test (bad) lahf aaa push mov addb faddl js call dec fistp mov inc sti in addr16 addr16 fwait adc xchg mov aad rep adc test dec push mov push loopne pop sti and push in xchg push test scas push aas shrl mov rorb cwtl shrb and js push movb pushf inc pusha push pushf stc ror pushf pushf pushf jmp xor cmc call adc movl pushf pushf mov lea jae bswap pop test movsbl xor pop clc neg mov daa sbb xor cmp pusha bswap not pushl mov call mov clc pushl cmc cmp add pushf pushf pusha lea jmp mov push pushl mov pusha mov push jmp jmp xchg mov sbb mov inc add (bad) out or jmp adc decl adc incl pop mov dec push mov sbb mov sti and incl mov call sbb pushl mov scas sbb (bad) jg mov addr16 mov mov sbb mov and mov jecxz mov mov mov inc pop mov out mov and mov or mov add mov mov mov dec push mov inc add jmp pop mov dec push mov jecxz mov mov adc ljmp and lcall push mov sbbl call push mov dec push mov into sbb decl jmp pop mov xchg sbb decl push mov cmp mov sti and dec add (bad) in adc lcall or incl mov mov pop mov mov adc (bad) cmp mov dec push mov inc pop mov inc add lcall push mov in adc jmp adc call add mov and mov adc mov into sbb jmp mov test mov imul incl mov adc mov push or call pop mov jg mov push push mov mov mov and mov lcall mov and mov and mov adc mov out or (bad) cmp mov sti and decl mov jecxz mov sbbl pushl mov push push mov mov mov adc mov into sbb pushl mov orl inc adc mov mov mov adc mov mov mov imul lcall or jmp mov sti and (bad) in adc incl mov or mov jecxz mov mov pop mov call sbb call add decl mov call add ljmp mov fwait or decl and ljmp add decl add mov push or ljmp push mov into sbb incl add decl mov mov adc ljmp mov dec push mov addr16 mov mov and decl push mov push push mov sti and pushl mov cmp mov xchg push mov lcall mov dec pop mov xchg mov enter pop sbb call mov scas sbb lcall push mov sbb mov add mov add mov xchg sbb incl mov dec push mov inc add decl adc (bad) jg mov imul pushl jmp mov icebp movzbl jg mov icebp movzbl jg mov mov mov xchg push mov sti and (bad) lcall mov and mov push push mov or mov mov mov and mov and mov inc pop mov inc add (bad) lcall mov adc (bad) out or lcall or (bad) in adc ljmp adc mov dec push mov out mov add mov and lea jno push movb pushf mov call neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call movl jmp call call jmp sub jmp pushl popl pushf push lea jmp cmc cmp add call push pushf mov pushf pushl ret pushl popl push pushl lea jmp cmc jl daa not notl aas mov push stc test sub jmp mov jmp jmp pushf pushf mov pushf lea jmp pushf movb mov movb pushl lea jmp call call mov jmp call call shld mov jmp movb mov pusha push lea jmp mov pushf mov mov jmp pusha mov call cmc cmc add call call pushf lea jnp push pusha pushl push pushl ret push mov mov mov pushf mov pushf mov call push pushf push pushf pushl popl pusha pushf pushf lea jmp pushf popl jmp add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call divl push mov push mov push jmp call push pusha mov pushl mov pusha mov jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp pushf mov jmp add movw pushf pushf pushf popl pushf movw call pushl add pushf lea jo push pushf mov mov lea jmp cmc movb rol push call stc mov pusha call mov pushf lea jmp pushl mov pushf mov mov jmp movb mov jmp call pushf mov movb pushl pushf lea jmp pushf mov jmp mov push push jmp mov mov push pushf lea jmp pushf popl pusha mov pushl popl push push push pushf lea jmp jmp cmp sub call jmp push call mov pusha jmp pusha mov call mov pushf lea jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp push mov pushf pushl mov pushf pushf movb lea jmp jmp btc mov call shld mov movzbl mov bt stc pushf call call call jmp cmp sub call jmp pushf lea jmp pusha pusha lea movl jmp xchg cld pop mov pushf cld lea call pushf mov push lea jmp jmp cmp stc add pusha jmp push pushl mov pushl pushl pusha pushl ret inc push push mov pushf lea jmp jmp jmp pushf pushf mov pushf push push lea jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp movb pusha jmp mov mov pusha mov push mov mov pushf mov call mov jmp pushf push pushl popl pushf mov movb lea jmp pusha mov push mov lea jmp movl jmp sub stc sub jo push mov shr pusha call pushl push movw pushl popl mov movb lea jmp mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call inc pushf clc bt add jmp pusha mov pushl jmp push pushl popl movb pushf movl push lea jmp jmp call push mov pushf call jmp mov pushf pushf mov pushf pushf mov lea jmp call call pushf jmp mov push call jmp mov call mov push mov pushf lea jmp mov mov push pushl movb lea jmp push call mov cld call call push mov pushf pushl mov mov pusha pushf mov mov push jmp movl mov call jmp bt shl sub mov add shr add mov cmc call mov call neg shrd movzbl shrd sub jmp pushl popl pushf pushf lea jmp jmp jmp daa mov dec mov pusha jmp pushl popl movw lea jmp mov jmp pushf mov pusha jmp inc clc shr mov sbb call xchg stc clc cmp mov bt movw pushf sub pushf mov jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp shl pusha mov push mov mov call call call jmp pushf mov pushl pushf popl pusha jmp pushf pushl popl pusha pushf push lea jmp add push push pushf call jmp pushf popl jmp pushf lea jo popl pushf pusha movw lea jmp pusha mov call pushf pusha mov movl push movw lea jmp call mov push push lea jmp mov not mov pusha mov jmp jmp jmp push jmp push lea jp pushf pushf pushf pusha jmp jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call push mov push mov lea jmp push mov pushf mov call movb jmp inc dec movsbw lea xor movzbl stc bt pusha call bt bswap lea jae stc xor bt pushf sub jmp mov push push mov movb lea jmp call push rol mov cmp cmc mov pushl call clc add push pushf clc neg call mov pushf mov lea jmp jmp call lea jo push pushf mov jmp push mov call call rcl rol or mov bt pusha add mov pushf sub cmc pusha call pushf neg cmc call push jmp mov push call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp mov pushl pushl jmp adc push jmp pushf mov pusha pusha mov lea jmp pushf push pushl jmp jmp pushf call pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp call btr daa mov sub shr rcl mov call movb mov pusha pushl mov pushf call push movsbw pop lea push jmp pushf pushl call call pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp pushf mov jmp shl bt shr pushf pushf bt call xor neg movzbl cmc call mov pushl mov push pushf mov push pusha lea jmp mov push movb lea jmp add cmp cmc std pushl popf push lea jmp pushl popl push pusha push movw lea jmp bts shr pusha mov cmc bt sub mov test clc call mov call movw mov pushf pushf pushf popl jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp shrd not mov stc bt stc add pushf mov jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp movw movw mov call lea jge push mov mov jmp mov pushl mov mov pushf mov pushf lea jmp pushf jmp bswap add lea push pusha cmp jmp ror add pusha mov mov call cmc pushl popl test call jmp call bswap mov neg adc sbb mov pusha shr dec call movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call mov movb push push pushf lea jmp call pusha pushf pusha pushf popl call mov pushf jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call bt xor movl jmp cmp sub call lea jbe mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp cmp mov cmp add stc clc stc movl mov movb sub call stc bt sub jmp mov call movw pusha mov pushl movw movb lea jmp lea jne or jmp mov mov movb pushf jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp pushf popl pushf pushl popl pushl lea jmp mov pushf jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp not clc bt not test pusha cmp and pushf movl jmp push mov pusha mov push jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call pusha pusha pushl popl push movw movw lea jmp call mov push mov lea jmp clc test btr rdtsc call mov pusha push lea jmp push pushf mov pusha pushf mov jmp mov mov pushf mov pusha mov pushf pushf jmp mov inc clc pushf neg call push push movb movb mov pushl mov push jmp pushf jmp test stc bt sub call mov call jmp call pushf mov pusha lea jmp cmp sub pushl cmp push cmc sub call not pusha cmp not push cmc sub jmp cmp neg neg add sets xor rcr add rol dec add jmp bsr inc mov test add pusha pushf pusha lea jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call movb jmp call movw movb movl pusha jmp mov call mov call jne push mov pushf lea jnp pusha movb mov mov jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp push push movb pushf mov lea ja pushf mov pushf push jmp mov pushf pushf push lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp movw jmp pushf jmp add pusha movb pushf lea jmp pushf pushl popl movl pushf movw pushl lea jmp pusha clc mov bt clc clc push add movb call pushl popl push pushf lea jmp movsbw mov pusha pushf mov jmp push pushf pushf push mov pushl ret add add pusha mov call push push mov push pushf lea jmp pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call sar add xor bswap rol movzbw mov call aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov mov pusha pushf pushl ret xor cmp xor call pushf pusha mov mov pushf pushf lea jmp push mov jmp mov call push pushf popl pusha mov mov pushl popl push lea jmp shrd inc mov jmp movw pusha pushl popl push movw lea jmp shld aam call mov pushl call mov push pushl ret movsbw bswap mov lea mov js pusha lea jmp mov call call add clc clc pusha shrd pushl mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pushf inc pusha decl movw pushf pushl jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp ror aad xadd ror mov adc bts jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf mov call lea jne stc push stc sub pushf call test pushf cmc jmp lea jne push push mov pushl push pushf lea jmp test xor test sub movb mov pushl movb lea jmp call cmc xor stc stc mov bt test stc add pusha jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp xchg jmp pushl popl pushf pusha push pushf lea jmp mov pusha movb mov pushf pushf mov call btr dec shl bt mov stc test add call stc add lea jno mov pushf lea jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp jmp bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp call ror clc clc call pushl lea jge push mov call or mov push pusha lea je call mov jmp mov movw pushf lea jmp bt clc test xchg cmp mov call clc lea jno add pusha jmp pusha pushl mov jmp push push pusha pusha call dec stc rcr ror btr lea jmp jmp das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf popl push jmp add call pushf stc sub call mov mov ror (bad) repnz call mov pusha jmp sub cmc add jmp add pushf mov mov pushl lea jmp bswap call mov pushf lea jns push jmp push pushf pusha jmp jmp call mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp lea pushf movb pushl push mov pushl mov lea jmp mov call jmp mov stc call mov movb push pushl pusha lea jmp btc btr cltd mov btc pop inc jmp mov mov pushf mov pushl push pushl lea jmp mov pushf lea jmp jmp pushf jmp mov call clc pushf clc add jmp mov jmp pushf popl call mov pushf pusha pushf pushf popl movb jmp bt xor mov push bt cmp bt sub jmp call pusha mov movb mov mov pushf lea jmp jmp movl mov jp pushf mov pusha jmp stc cmp mov sub jmp bt add mov push pushl movl mov push pushf mov lea jmp pushf pushf popl pushf jmp call stc sub cmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp movb call push mov pushf push push mov call cmp shr pushf movb mov push pushf popl call cmp bt sub push push jmp mov movb push lea jmp inc setno neg pushf pusha ror call mov call lea jns pushf mov call mov pushf jmp pushf jmp ror movb jmp mov pusha push push pushf mov call sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp movl pushl popl pusha pushf push lea jmp clc pushf ror push mov lea mov call push xchg lea mov mov jmp inc neg mov cmp clc add push pushf pusha jmp call mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call mov pushf lea jmp call pushf mov mov mov pusha mov call lea jne call stc call bt xor push jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp test movzbl call movw mov pushl mov pushl lea jmp pusha xchg call pusha mov mov call mov pushl lea jmp pushf popl call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call pushf pushl pusha mov jmp sub call lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp mov push push movb lea jmp push push push pusha mov movb pusha lea jmp mov pushf jmp jmp pusha push movl call pushf xchg jmp call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp call mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret bsf bts rol mov jmp pushf pusha movw mov push mov jmp call bsr neg adc notl dec mov cmc call movzbl lahf lahf mov call push push inc jmp bt sub mov mov mov mov mov push pushf lea jmp dec btc or mov push add mov clc add jmp or call pusha push pushf mov mov push call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call pushl popl mov pushf pushf lea jmp add pusha pushf mov movl call stc clc ror stc sub jae sub test pusha stc xor mov sub jmp cmc cmp shr jmp mov pusha call movb call mov push movb push lea jmp movzbw mov cmc (bad) icebp add loope dec add mov cli (bad) decl pushl pusha pushl lea jmp call call rol movzbl push add pusha pushl inc call mov pusha pushf movw pushf lea jmp mov pusha mov jmp push movb call pusha mov jmp call jmp or movl stc xor lea jae pushf inc call mov pushf lea jmp add dec add add add add pusha inc add adc .byte .byte pushf 