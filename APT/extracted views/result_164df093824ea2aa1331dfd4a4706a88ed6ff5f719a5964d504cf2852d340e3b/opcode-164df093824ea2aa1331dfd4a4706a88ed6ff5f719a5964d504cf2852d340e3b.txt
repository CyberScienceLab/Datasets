shrl add add add add add add add add add add cmp add push pusha add inc lret adc add add add add add sub add adc add pop add add add adc sub add xor add add adc sub add or sub add push sub add adc add sldt add add adc add add add cli sub cmc add xor mov add add add push decb loopne insb add add cmp add add add add insb add add insl add add outsb add add add add push add cmp add push cmp add cmp add xor add add jge add add pop add or sub add add add sahf and add sahf or push sub inc mov adc gs inc push add add (bad) (bad) incl add add add int3 add add add cmp add add pop jnp add add sbb add je add sbb add or jnp add add sub add push sbb sbb pop pop push adc (bad) pop and rcrb sub or add push das or inc mov sub jo je and (bad) pushl add push addb add mov pusha (bad) (bad) incl jnp add add add add or jnp add add sub incb adc add jae add or add add add sbb add sbb sub and adc ljmp push and push sub (bad) (bad) lcall cmp ljmp or mov (bad) pushl add push cmp cmp cmp cmp add or mov (bad) ljmp sbb xchg (bad) incl cmp cmp sbb add push add add add adc fildl add cmp add add in add cmp add add out add add jb sub and repz cmp xchg add add cmpsb inc push mov (bad) and or rcrb and jg or jae test pop sub popa and sbb add add mov (bad) incl add add add and add sub add pop or add add or jae add or add or call xchg adc sub add or jns and leave and repz and push sub (bad) lcall sub fisub or decl cmp (bad) decl mov (bad) ljmp and add sub push add sbb add or sub cmp add cmp (bad) (bad) ljmp and add cmp (bad) (bad) ljmp add add cmp (bad) (bad) ljmp add or or (bad) decl cmp (bad) (bad) incl add adc add add add add add xor add add adc or pavgb je add cmp add push push and fistl out outsl add add rclb rclb add add outsl add add and push cmp add cmp add sbb push cmp add add push mov ret add add pop add add lcall out push popa gs adc inc loopne pop and push pop push cmp add add add add add add add sahf add add add add add stos (bad) (bad) incl add cmp add add push pop push push adc or and std cmc and add (bad) push push pop dec pop outsl adc push push pop push push pop dec pop pop push and les decl push sbb pop outsl adc push sbb sbb pop pop push and pop or cmp (bad) incl push pop dec pop adc or jge jae and push and inc ds and (bad) incl sbb pop and or insb add mov mov ret sub cmp (bad) (bad) incl dec jae add push or cmp (bad) (bad) lcall adc or mov and cmp (bad) (bad) (bad) jle add add outsl sbb add jle add add outsl sbb add pop sub sub cmp cmp cmp adc add cmp mov (bad) decl xchg (bad) (bad) incl cmp add call add incl add xor add decb loopne enter cmp add add lret add cmp add add sbb cmp add add enter cmp add add sbb enter push sub add add push push sbb push sub xor popf or data16 mov test and xchg popa mov and add add lret decl add add add add add dec push push dec pop push sbb xchg push sbb push pop pop pop pop bound push sbb sbb pop pop push push cmp (bad) jmp adc mov sbb or adc and sbb push (bad) (bad) (bad) cmp dec sub cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) ljmp add or sub cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) ljmp add or cs (bad) incl cmp (bad) (bad) incl sbb add add add add adc add add or inc add add cmp add cmp cmp add add add push add add adc add jle add add sldt add add add stos add add cmp es add add sldt add add add mov test add cmp sub add push pop sbb or add popa lea add add or or add es add add outsl and add jle add add sbb sub pop xor pop adc enter and sub adc gs add add sbb add add add sar (bad) ljmp sbb push push sub (bad) (bad) decl and fistpl repnz and fmul mull mov add push cmp (bad) ljmp add push cmp (bad) ljmp add push cmp (bad) ljmp add push cmp (bad) incl cmp (bad) jmp jle add add outsl and add fiadd adc sub add or out (bad) (bad) ficomp sub add or call cmp (bad) (bad) call add push or add outsl and add fsubrl outsl sub add cmp cmp add inc xor add add add add add add add add add add add add add add add add add add push add add add add xor rolb add add adc add add addl xor je sub sub add and adc push and scas sbb push pop pop pop and lods daa enter jb pop pop push sub cmp pop inc add add sbb add add add mov (bad) ljmp sbb pop add add aas and bound pop push sub outsb popf popa sub add add add add and daa sub xor sbb jne (bad) decl cmp (bad) incl cmp (bad) decl sub push add push sub sub add push sub outsl pop add push sub fiadd sub adc add add add add adc add sldt add add adc add add add outsl and clc add xor add add add add adc add sub add sub add adc add or add add add sub jp sub add sub add adc add or add add add sub jp sub add sub add adc add aad add pop add adc sub cmp mov add and popl add cmp push sub and data16 pop and (bad) cmp pop inc add add dec add add add add (bad) (bad) ljmp add add dec cmp add jnp add add or es mov and fs aas and sub and popa sub dec jnp add add dec push and movsb or shlb and jmp jp (bad) incl add add add sub cmp (bad) decl cmp (bad) incl cmp (bad) decl cmp (bad) incl cmp sub or scas add scas outsl and add sub xor add add add add adc fldl add cmp add add add add fiadd add cmp add add add add fild add cmp add add add add loopne add cmp add add add add loope add sub add add add add or xchg add add add or add or jnp add add add add das add or jnp add add push add add sbb add or add or jnp add add sub add or jnp add add adc add xor add add add add outsl xor add add add add incb or add jae add or add or jnp add add or or sub add or jnp add add and add das add or jnp add add push add add sbb xor add outsl xor add add add add sub xor add add add add xor add xor add add add add outsl xor add add add add incb push add push jae add or add or jnp add add or jae,pn add or add or jnp add add pop add jo das add or jnp add add push add add pop jae add or add or jnp add add sub or jnp add add outsl aaa add or jnp add add jno add xor add add add add or mov add jae add or add or jnp add add outsl cmp add add add add xchg add jo das add or jnp add add push add add fild add jae add or add or jnp add add outsl xor add add add add mov xor add add add rolb add jae add or cmp add add sub add or sub add outsl cmp and add and xor add sub add or sub add or jnp add add inc add or sub add or jnp add add inc add or sub add or jnp add add inc add or sub add or jnp add add inc add or jb add jo add add push sbb jae add or add or pop sub add add add jo das add or jb add jo xor add add incb add add jae add or inc add or push sub add add inc add or add sbb inc add or sbb (bad) incl cmp add or pop std (bad) incl cmp std (bad) pushl add or push std (bad) incl cmp std (bad) pushl add or adc cmp std (bad) call xor add add add add adc add add xor add add add add adc sub add sub adc add and add or add push and add loopne add cmp out mov add and leave andb sbb add add leave lret and xchg mov pop push movsb pop pop pop sbb cmpsb add add cmp pop inc push add add add add add cmpsb (bad) (bad) lcall add sbb add add jp add cmp pop cmp pop cmp sub sub sub cmp scas cltd outsb sbbl stos push cli popa cmp (bad) (bad) cmp add cmp add mov or out mov sbb fidivr and cmp (bad) incl push xchg add add add xchg xor and pop sub and mov cmp (bad) call sub cmp (bad) (bad) decl and (bad) decl cmp cmp (bad) incl cmp (bad) decl cmp incl cmp (bad) incl cmp cmp add xor add add adc sub add add jae add or add add add add add dec add or (bad) (bad) incl pop or sbb add add add jnp add add dec add or or add and xor sub add adc add sbb add add add sub jnp add add or add add pop shrb add out outsl dec add or out add xor adc add add add add dec add or add add sub add sub add xor add add add add adc or add add push sub sub sub add imull add or repnz add xor add add add add adc or add add push sub sub sub add imull add or repnz add xor sub add add add sub jnp add add or adc add in outsl push add or in add jmp sub outsl push add or call add add add add adc jae add or add add sbb jge add add sub add add add push jge add add jae add or add add jnp add add outsl push add or jnp add add and outsl push add or jnp add add adc outsl push add or adc add sbb add add add sub jnp add add sub sub sub sub add imull add or repnz adc add sbb add add add sub jnp add add sub sub sub sub add imull add or repnz adc add sbb add add add sub or add sub adc add add icebp outsl push add or repnz add adc add adc or add add sub add hlt outsl push add or cmc add add xor add add add add adc or add add sub repz clc add adc add lcall adc jbe push add add lcall scas inc sub add add add sbb or lea and outsl fistpll popa popa pop gs in sub pop push sub add sbb add add add mov sbb push sub gs jg pop push sub or popa sub add lcall sbb add test (bad) decl cmp xchg (bad) (bad) decl sub sub jae add push sub add adc add mov add adc jbe pop and cmp add cmp add and adc loopne sbb adc add sub sub sbb add add mov add add add add sub inc and aas (bad) pop push sub (bad) dec popa sub add add sub add sub sub add or add test (bad) decl cmp mov (bad) decl cmp sub sub add aam sbb add sub add xor add add adc or add add sub add hlt outsl push add or cmc add add xor add add adc or add add sub add hlt outsl push add or cmc add add xor add add add add adc pop sub sub sub sub add push sub outsl sub add sub add adc add adc add add add sub add stc sub add sub adc add pop add add add adc sub add add add jp add add add add xor pushf add add add adc pop add add add add add pushf sub cmp add and mov add and ja frstor pop aas icebp pop popa pop and push leave inc gs pop and add or or add repnz add add add add add add add (bad) (bad) jmp add cmp add add cmp add sbb and and inc (bad) popa sub add add add pop out sub and cmp (bad) (bad) cmp add add add add (bad) add add sbb xor add out xor and movsl or (bad) incl jne add add or sub and cmp movsl inc add add pop add or push and add pop pop and (bad) shll jmp add (bad) incl jne add add lcall xor and (bad) (bad) (bad) cmp (bad) (bad) lcall adc jne add add add or push and ds and cmp dec add or add popf (bad) (bad) decl cmp cmp cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) ljmp add or and (bad) incl cmp (bad) (bad) lcall xor add add or add cmp add add or add jnp add add add or add cmp cmp add add inc add mov add std add add cmp add add and add cmp and add add sar incl add add add add and flds add cmp add add sub jg add sti pop and jno pop popa sub adc add add sub add push movsl inc add add daa add push fiadd add add add push and inc xsha256 cmpsb adc adc push sub and inc add (bad) (bad) ljmp add add add sbb add add add sub pop or add or add js and mov or mov mov (bad) jmp push scas or pop or push jnp aad movsb pop sub cmp (bad) (bad) incl cmp (bad) (bad) ljmp daa add push cmp (bad) (bad) decl cmp (bad) (bad) call push cmp (bad) (bad) call push cmp (bad) (bad) call add pushl add or sbb cmp (bad) incl add adc add add add add add xor add add add add adc push rorb add sub sub sub sbb add out sub add sub outsl pop add or ljmp in pop add or loopne adc add popf add add add adc xor push add adc add incb or add jae add push push sub es add add incb or add jae add push sub adc add incb push add push jae add push sub jle add add incb pop add push jae add push sub jle add add incb or add jae add push sub sub add push cmp xor add sub push sub push sub push sub outsl xor add sub add add xor add add add add adc cmp (bad) adc mov mov add cmp sub and and out jo pop sbb jecxz cmp pcmpgtw test xchg cmp pop inc add add add add add add add add sub ja add jle add add jae add xor push sub aas mov xor or sbb es sub (bad) (bad) jle add add push sub sub add push push pop pop or push xchg sbb data16 (bad) incl and and cmp call or inc (bad) (bad) decl dec (bad) (bad) decl cmp (bad) decl cmp (bad) incl cmp pusha add or cmp incl sub popa add or mov add add adc add add add icebp add add add adc add pop add add add adc sub add sub adc add and add add add sub sub sub adc adc sub sub add repnz add sub add in sub add sub out adc add pop add add add adc sub add sub adc add sldt add add adc push adcb add jae add or repz xor push add add add adc decb loopne sgdtl add adc add mov add sbb add add pop add add or add cmp mov add add add add gs add add push cmp push add add add add add add add add (bad) (bad) (bad) cmp (bad) add add xlat add add pop push push sbb adc add dec pop pop outsl add or sbb outsl data16 or sub pop push sbb pop push dec outsl data16 or add or push dec or add or sub and insl (bad) (bad) call sub push and cmp (bad) (bad) cmp (bad) incl dec pop xor and add and mov cmp (bad) (bad) pushl add or and push xchg mov cmp (bad) (bad) lcall lret mov sbb (bad) incl movsl or add sub cmp (bad) (bad) incl cmp (bad) (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) call add cli (bad) (bad) call add clc (bad) (bad) decl incl cmp (bad) incl cmp (bad) (bad) call xor add add add add cmp sub add cmp cmp dec ljmp add sahf add add sti push loopne pop and push pop and add pop push sub add sar (bad) add add add add add add add sub jb add cmp add xor and test and push and sbb push sub sub pop sahf pop pop pop or pusha push test cmp and and sub popa cmp (bad) incl sub cmp (bad) decl cmp (bad) decl cmp (bad) decl decl cmp decl imul mov (bad) incl cmp sub xor movsl add add add adc sub sub sbb pop and icebp xchg or imul add insb add add or mov mov cmp gs and aaa jbe pop and aad push pop and sub and add add mov add add sub ss cmp xchg mov add loopne jnp adc add sub xchg sub pop xchg sub sub cmp cmp cmp sub or ret push sub add aad sub outsl imul or roll add sbb add fild add or movsb add add test stos add add stos add add pop cmp scas add add mov add cmp add add xchg lds sarl add add cmp icebp add add stos int mov pop pop and sbb test out pop popa data16 and inc push add add add add add add add add mov outsl insb add or or add insl add or les push and inc stos test (bad) call add insl add or add or or add sub add or (bad) adc xchg sub and sub mov and cmpsb arpl pop popa cmp (bad) incl adc sub add movsl or add outsl outsl add or add data16 mov pop and testb popa cmp (bad) incl outsl jo add sub flds xchg lds shll (bad) fidivr add call add lcall sub pop jne add add inc ficom dec adc int mov pop pop and sbb test out pop popa data16 and sub pop push sub adc add add add add add add sbb outsl and add adc sub cmp pop and cmp push sub add or push (bad) (bad) decl cmp (bad) incl cmp (bad) incl cmp (bad) ljmp add or dec (bad) (bad) ljmp add or inc (bad) (bad) decl cmp (bad) incl inc sbb add add add add add add add add add add adc add lods add add add adc sub sub or jb add cmp add sub and add add outsb add add xor mov and sub popa and pop push and dec mov pop popa pop gs sbb add add mov add add add add sbb inc sub sbb sub fstpt fadds shll cmpsb jae add or cmp mov (bad) incl cmp cmp cmp test jne add sub xor add add add add adc or sub adc push sub jbe add sub sub add sub jae add push sub sub add sub add adc add pop add add add adc sub add sub adc add mov add adc add add insb sbb and icebp (bad) push sub cmp add and dec mov sub data16 and push sbb add add sub add add (bad) (bad) call sub fildl add push add add xor sub adcb add cmp mov xchg pop add popa cmp sarb add add or xchg (bad) (bad) incl sub pop add or enter add sub jae add or mov xor add add add add adc add add add adc add or add add add sub adcb add add testl push add add add adc add add add adc add pop add add add adc sub add sub adc add sbb add adc or add add sub add push sub sub or out add push add adc inc push dec inc add add add add or add jbe xor xor add add add add add mov or add push je imul add sbb add add add push push add sbb add add add inc push dec inc add add sbb add inc insb outsl bound add add add add add push push mov add push add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add inc add add xor push add jp push add add add add or xor inc add add add push add xor push add xor push add imul xchg add add add add add add add add add add add add add add add xor push add mov add add add add add add add add add dec add push cmpsb add add add add add out cmpsb add add add sbb cmpsb add add push popl sub push add jns push add add add push adc push adc pop xor push add pop xor or aas pop inc add add add push add xor push add add add add pop xor adc add hlt pop adc pop or pop or inc or push add xor or lea inc add add add add or adc (bad) or pop mov add add hlt pop adc inc or pop adc push or pop or jnp inc add add jecxz imul xor push add or add add xor push add sub push add add add or add add or add add or or add or or add or add add cmpsb add add or add sbb push add add add or add add or push add or add add add add add add add add add add add add add add or add add add add add add add add add add add or or adc add adc push add or or push add add add push add add sbb add adc pop add or adc add add add pop add add add add add add add add add add add inc add add add add add add add add add add or adc cmp add adc inc add or adc cmp add adc xchg add add add add add add add add add add add add add add add add sbb add push add add add add add add add add add add add add add add add add push add add add add add add add push add add add adc push add add add add add add adc push add and add add add add add add xchg add insb add add add add add add add add add addl add jo add add xchg add add add pushf and add add add add add add add add add add add add add add add add add add add add add add add add add addl or push add add add or dec sub add add add subb sbb add or nop sub xchg add insb add movsb sub addl add add add xchg add mov or add add add add add add add add add add add add xchg pop add das add add xchg push add das add add xchg add insb add add add add add add xchg pop add xor add add add add xor add add add add add add xchg push add xor add add add int3 xor add add add jl add add xchg pop add xor add add add add add add add add add add add add add add add add xor add add add add add add xchg push add add add add add add add aaa add add xchg add add add add add add xchg add insb add add add add add add add add add add add add add add add add add add add add add add add add fildl sbb add add add add add add add xchg sbb add pop add add add add add add xchg add add add add cmp add add add add xchg add add add add xchg add add add insb add add xchg add add and add add add add add add add add add add add add add add add add add add add xchg sbb add es aas add add push sbb add add add add add add inc add add add add add inc add add add add add inc add add add add add inc add add add add add inc add add add add add pop add add add add add add add add pop add add add add add pop add add add add add pop add add add add add add add add pop add add add add add pop add add add add add add add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add add add pop add add add sbb push add add add add leave add add roll add dec add add add add add add stc add add add add and or add and adc add and sbb add and and add and sub add jle xor add insb add add add add add insb add add insb add add test or add insb add add add add add add pop pop add xor add add int adc cmp jae jno inc pop jge popa add addl xchg add xor add popa pop lahf add push lods add add add xchg pop mov pop loop cltd add add lahf add pop lods add xchg pop mov add add pop sbb add pop insb add add add or jno push or mov add es add xor add add or mov add add add add ja cmp add add add add flds mov add or jmp add add or sbb adc xor add or icebp add push add jno pop or add addl mov cmp add mov add add add add add add add add add add or add add add or or or or add add add add add or stos add add or add add add add mov or add add add add add or add add or add add or add or ret add adc mov or xor add add insb add add insb add scas or add add or add pop add ret add add insb add add scas or add pop add add add add add add add add add add add add or mov in or mov decl push or add jae addl xor add insb add add cmp add add add add add add add add add add add jg add mov add mov add inc add add inc add add jg add ret add add inc add add add add mov add add add add add add add add jecxz addl add add add push adc cmp add add add add add add add add add add add add add add popa add push add add add add add add add add add add add add add add cmp add pop add add add add add add add or add cmp add add add add add add add arpl insb add add add add add add add add add or add add add add add add add add add add add add add add xor add add add add sbb add add add add add add add add add add push add mov add add push add add add or or add add imul add outsl add add push add mov push add jo outsl je inc inc cs add outsl je inc inc add gs add arpl insb imul imul jns je insl add push arpl add jae gs cs imul inc outsl jb jae inc outsl jb add add dec jne je arpl je gs gs je add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push gs imul outsl je inc inc cs jb jo jb imul insb imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add ja jb fs jns je jb bound add popa jb inc jae gs bound inc je jb bound gs dec inc outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add je outsl outsb add outsl jne inc outsl js push gs inc outsl js push jb imul add outsb outsl insl add insl insl gs imul imul je insl cs arpl imul je addr16 jo jns dec gs outsl jb push je gs insl add jae gs cs dec add jae insl bound push jns je insl cs gs arpl outsb add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add arpl outsl jb arpl add outsb je jb jae push je gs insl add jne add jbe imul imul add jae outsb arpl jae insb je inc jae outsb arpl insb insb bound imul popa insb insb bound imul bound arpl outsb fs outsb jbe imul gs insb je loop scas loop mov subl stos loop scas loop mov subb stos loop scas loop mov orb stos loop (bad) loop lods loop lods loop mov orb loop mov subl (bad) loop scas loop stos loop scas loop scas loop stos loop scas loop stos loop stos loop lods loop (bad) loop mov subb subl mov subb stos loop lods loop mov orb lods loop stos loop mov subb scas loop (bad) loop mov orb loop lods loop mov subb stos loop stos loop mov subl loop mov orb loop lods loop stos loop lods loop scas add subb scas loop stos loop stos loop scas loop stos loop (bad) loop scas loop (bad) loop lods loop lods loop lods loop (bad) loop stos loop lods loop lods loop stos loop scas loop lods loop stos loop stos loop mov subl loop stos loop lods loop (bad) loop stos loop (bad) loop scas loop stos loop stos loop scas loop mov subl scas add orb stos loop scas loop stos loop mov orb loop mov subl mov subb mov orb lods loop lods loop lods loop stos loop lods loop lods loop mov subl lods loop mov subb scas loop stos loop stos loop stos loop mov orb scas add popa jne je inc imul push outsb jbe jb imul inc outsl fs je jb bound add jae gs cs arpl imul insl bound gs jb jo imul imul jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae inc outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jae insl bound imul imul jne fs je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul jae insl bound imul outsl outsb inc je jb bound add jae insl bound jb fs popa jb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add insl push imul je jb bound add insl jo insb gs outsb gs je fs je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc bound addr16 outsl outsb push jae jb outsl fs je jb bound add inc push push inc je jb bound add imul jae bound je jb bound add imul jae bound je je add add jb jae jne arpl add addr16 cmp ss dec xor and jl sub push xor outsl jne arpl add je xor inc jb popa jns inc insb outsl outsb add add imul outsb je outsl insb add je push gs add jb add jne gs je jb dec outsl jbe dec gs add je inc jne jb outsb je dec inc imul insb add je inc jne jb outsb je jne je jb add je outsb jne gs je jb inc jns add imul gs imul add je insl jo gs outsb je fs js gs imul imul je inc js je push jne jo outsb fs popa jns jne add jae gs cs jb ja outsb add imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs add je outsl outsb inc popa jae add je push jae push imul jns gs popa arpl outsl insb outsl jb inc jbe outsb je popa outsb fs gs popa fs inc insb imul pop push popa bound outsl jo push gs inc outsl js popa jae add je dec jne je insb imul gs add outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs insb outsl jb addr16 push push jae je inc popa arpl outsl insb outsl jb jae je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add outsb je inc outsl outsb je je insb add popa jo imul add je inc outsl outsb je jae je inc outsl jb inc outsl jb gs je insb add jb inc outsl jb gs je insb add fs dec outsl popa add jae insl gs popa jns jne add jb outsl jb dec popa jns jne add js add push fs gs add gs je add je dec gs jae je dec push add gs je inc arpl jo outsl jb dec inc jb jo outsl push jb outsb jae outsl jb add outsb jae outsl jb inc imul arpl jae je dec je insl add je dec je insl add addr16 outsb je jne insb inc js gs imul arpl jae outsl jae fs js gs imul jne gs popa outsb fs add outsb je insl gs gs jo jb add outsb dec outsl fs gs outsl outsb jae jb arpl add je dec outsl fs gs popa outsb fs add je outsl popa fs outsl fs gs inc js gs imul jb jae data16 push imul jae arpl dec outsb outsw jb popa je outsl outsb add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add je inc popa jo arpl jns addr16 inc outsl jne je dec dec imul je insl cs outsl insb insb arpl outsb jae dec inc outsl insb insb arpl outsb add je jne jo jb gs js gs imul popa insb imul inc jb je jb popa inc js gs imul jne gs je jb inc imul jb inc outsb je jns addr16 push popa insb jne add je jns add je gs jne arpl gs push gs jne arpl gs dec inc imul jb inc outsb jne gs je jb inc outsl jb popa je js gs imul add jo imul add popa bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add je inc jae gs bound push gs imul add outsb arpl outsl outsb imul bound jne je je outsl add xor add inc add insl add and dec add add punpckldq jne je je outsl add xor add push add add je and jo push add inc add and inc add add outsl add add add outsl add jo inc add js xor add inc add add outsl add and push add je je imul jae add je add je inc add js xor add xor xor xor xor add add add add dec add or outsl add insl add add pshufw add je outsl add add pop add add add add ret push adc pushf xchg insl mov inc add mov pop push sbb mov adc sub push adc push adc add adc add sbb adc push adc add or push adc adc push adc cmp push sbb sbb push adc add adc push adc push adc add add and add and add dec push add or dec or add add or add or and add sbb sbb and add add add cmp and add or add push adc and or or sbb and adc pop sbb and add push add sub adc add add add or or adc inc adc add adc adc add adc add add inc add add cmp and add add add adc or adc or adc add add add add insl or add add add add add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add jo outsl je inc inc add sub add popa arpl xor aaa bound sub sub sub xor arpl add pop xor xor xor xor add add push inc outsl jo jb addr16 outsl je inc inc and xor aaa add daa add and ja jb and and popa jb inc jae gs bound ss xor xor xor add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add add imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add and add subb test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add pop add add add adc and sbb sbb add add adc or and add add and push add add push push pop pop lgdtl adc or add adc cmp adc sbb adc add add adc and adc adc or cmpb or or push lgdtl adc add pop and or adc or pop add add adc adc sysret add add cmp dec sbb pop add or add or mov pop jg aad cmp or and add adc and add sbb and add and and add push and add sub and add xor add adc add xor and adc add cmpb or addl push and add cmp and add orl or add add or or adcl add push and add adc add or add add sbbl add adc adc push adc pop sbb adc adc or or add subl add add sub push add add or add add sbb pop add xor pop add or or add or sub add add and adc add push adc push adc add adcl rorl add adc add add add add or cmp push adc sbbl add mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add inc push inc inc push sbb cmpl andl add add adc add add add jo add imul add jo inc add add xor xor xor pop add add add add jo insb add xor je js inc add add bound push add inc add ja push add aaa add cmp inc add insb add lods add add aaa add add jns jbe xor ja aaa add add cmp inc add movsl lret add sbb add dec add jno push xor bound data16 add xor sub add add outsb ss inc outsb xor bound xor push js cmp dec push outsb dec outsl inc fs jbe xor jo inc jns xor xor xor arpl xor xor jns dec xor inc ja jae data16 push jae xor ss js dec ss aaa jo inc aaa jp push inc pop inc insl pop aaa insl inc xor pop push jae xor inc dec ss pop fs dec ja inc jp inc dec push ss dec xor imul pop ja push cmp jp popaw push jns xor inc xor dec cmp push dec insl xor jns xor jne xor push push push inc inc inc xor push xor dec aaa xor or cmp ss outsl imul push xor xor jae dec pop xor dec xor outsb xor dec xor push push dec addr16 dec js dec aaa jno xor inc addr16 aaa pop outsl cmp push xor pop outsb inc ja xor dec dec pop aaa inc jno xor push dec push cmp xor or insb push xor outsl xor dec dec push push dec imul push push dec xor pop aaa xor dec push arpl cmp dec or xor push inc inc push xor jno xor jae push xor dec xor inc inc cmp or jns insb xor pop inc js dec xor data16 push jno jbe xor arpl aaa jbe bound push push ss push cmp outsb inc inc jb push gs js or cmp dec inc push push fs arpl insl inc pop xor xor push pop xor push inc xor imul xor push jae addr16 xor xor pop je push jae cmp dec push or dec inc gs cmp jo push jb pop jbe xor inc outsb dec pop pop outsb or xor cmp xor outsl push xor gs xor push jp jbe push pop xor push js dec outsb addr16 addr16 aaa push or inc inc push pop xor outsl jns dec outsb insl dec gs insl dec xor push xor xor jo inc dec xor arpl push jae push xor xor jbe js dec dec xor popa insb or dec push je xor push dec insl xor dec ss jns push xor or xor outsb xor imul popa xor addr16 jno outsb jns cmp cmp push xor outsb inc dec gs insb inc xor jo push push jne xor inc xor insb pop jns inc dec je xor xor cmp arpl jo push dec inc ss xor cmp inc jb inc cmp imul dec ja js cmp ss fs dec xor dec push inc outsl xor arpl dec jne je or dec dec jns dec imul inc xor pop xor dec push push inc push xor jo dec dec ja je outsb inc inc jno arpl push or inc xor cmp xor xor outsl dec xor push dec inc push insl xor or hlt movl inc or add or add add add add or add add push jnp add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add jmp js and out in (bad) fisttpll (bad) fbstp mov inc mov mov stos sub or cmpb and mov mov fldenv insl push ret out fbstp push pop gs add cld pushf repz xorl cmc jg lahf (bad) icebp mov lahf jmp jmp iret lahf ljmp mov dec mov jg repnz lods and push xor jns sbb push cmpsl bnd frstor mov cld xchg movsb jg fucomp (bad) loope (bad) js lahf out jg pop cld ret mov out aaa rcrl in aas mov jnp mov mov jge rcrb notl (bad) xchg leave mov (bad) inc lret fcmove and test aam stos cwtl pop jae bound andl fmul fidiv scas mov aad jg into aas cmp pop sbb out cwtl (bad) aaa cmp mov pop aam and mov out push or test ss pop inc popa xchg adc cmp call pop hlt loopne clc cmp popf pop in jge ja or mov in inc pop insb aam (bad) mov or (bad) sahf imul rclb push jge stc inc push pop imul stos sahf cs repz xchg dec out imul mov test add aaa push cld fldt das stos stc mov mov test jmp test cmpsl jno out or lret lahf jbe mov repnz icebp push xchg dec adc les add lahf pop dec insb xchg sahf cmp inc xorl imull dec jb mov mov dec outsb cmc sahf mov mov pop mov iret sarb pop mov jmp mov xchg lahf xchg stc lods sbb subb iret inc enter sbb inc push xchg mov aas xor pop jge sti jg lds imul pop ja,pn xchg imul ljmp jg std lret lahf scas jg ds stc sar jbe ds sti in pop mov mov jb push pusha stos inc push roll test outsb gs xchg xchg shr aas std sub xchg push push ret hlt mov repnz lods repnz jno mov (bad) into dec pop repnz sub insl lds negl pushf in sub jg pushf mov imulb jle lods jge movsl sahf sbb mov lods xor fiaddl xor inc pop dec jno push outsb fidivl add and (bad) mov fdivr add fistpll cli push mov adc (bad) repnz aad ror push cmp pusha pop push cmpsl jno les test xchg push daa cmp xchg push push test sahf hlt int3 sbb mov (bad) or adc fnsave adc mov jno cmc adcl mov push xchg in mov iret xchg mov mov scas aas inc in inc cld fstpt not cld lahf test lahf test lahf xchg aad adc aaa inc cld inc adc icebp stos cmp push mov lods jg test lea dec mov xchg inc sbb and pop mov (bad) test push mov loope out imul lahf out lcall cltd jne sahf lods jns inc stc sbbl in xor xor icebp xlat out jl pop mov adc jge outsb xchg std mov push mov mov bound lcall icebp mov pop mov mov stc (bad) xchg in (bad) dec xchg jecxz sti lock (bad) mov sti mov (bad) xchg mov jbe cmc cmc cmpsl jge ds std cmp into xchg jnp cmc (bad) dec stc rcl add xor adc push out fdivrl fdivr cld (bad) icebp sti lahf out jnp cld ror lret aas mov jp jl aam xlat lock fidivrl movsb aas mov imul jbe in movsl in pop sbb loop or icebp lahf adc xlat (bad) cli movsl mov and and push jge js push mov out insl jnp call jp imul sarb mov sbb mov clc addr16 fucom ljmp dec jns lret sbb push or iret push scas mov jno subb push mov test test xchg and xor cmp pop mov rcrl (bad) sub push imul xor mov leave shrl mull mov fistp in jnp or int int3 cs test jo pop sub scas ret xlat mov lds cmc dec xchg aas mov mov repnz nop fistp pop fs mov arpl and push aam mov aad add inc adc xlat outsb push jecxz fs in loop rclb xor mov and cltd cmp inc cmc push sub cmp sarb scas mov std push add test int mov das fwait sbb xchg leave dec test iret inc sbb cs and aad sub jno sub rcrb xchg (bad) push cmc shll stc mov in xor incl lret lahf ja ds mov sahf mov call cmpsl cmpsb push mov aad inc jp xchg mov mov aad xor fs int3 lods fldt jnp jge div (bad) out mov outsb test outsl ss negl stos lea mov aas mov push jne mov jbe popa call pop in ljmp xchg clc sub or mov inc je rcl add js mov pop aam insb pop cmp (bad) into sbb cmp mov pop dec (bad) aad decl lea fdivrl in lcall cwtl mov rcr popa psrad into or call xor daa stos xor mov xor mov out pop sub out push fmull mov test bound sbb jbe add or into dec jp in dec push repnz cmovne mov xchg insl sti mov scas jge stos mov push repz pop xchg out jns cmc sub (bad) int aaa mov jmp pop (bad) cmp scas mov mov das out xchg cli outsb stos mov jp call sub dec scas push gs add int3 repnz mov jmp faddl fimul mov in addps pop dec scas cmp lea mov mov hlt mov out lcall xlat fisttpll int3 scas aaa jbe ret les or dec sub mov jl lahf jbe stos repnz lahf mov loope fmuls lret cmp and jg repz xlat hlt clc test out sbb ja test out add jmp cmp push test mov cmp xor or fisttp fmulp fidivr (bad) or lret mov xchg add fstps mov jecxz lds lods fdivl inc rcrb mov sbb iret xor fadd and push cmc stos cwtl call pop jne push rcl das outsb js rcll or shr in mov into xor popa fdivrl repnz (bad) fwait mov stos pop mov sahf fsubrl mov test inc push test push cmp pop sarb xchg xor bound in adc iret test pop hlt shll (bad) jmp cli inc dec insl sub add in mov dec jle cli dec cmp in das dec dec jle shlb sbb dec push iret xorl enter stc inc pushf sahf ss mov pop popf insb pop je mov (bad) (bad) repnz cmp xor xor fldenv or leave push pop push aad rcll and and inc ljmp pop dec mov mulb fsts adc pop push or clc xor aas jnp pop int3 fbld hlt cmpsb shlb int pop lods ljmp mov sbb shrb jno fdivl xchg data16 pop (bad) (bad) ds jmp xchg sbb addr16 lcall test cmp hlt jns xchg add sub das cmp fnstenv xchg jmp and push test es xor jg imul mov dec es inc jne adc sbb push or mov shr xor (bad) mov cli scas aad sbb fucomp (bad) cmp js mov adc (bad) icebp dec cmpb push mov mov sbb xchg inc add (bad) jno imul insl sahf jmp leave adc stos ljmp stos in jge loope inc inc lret pop dec mov arpl cmc aaa mov data16 jae push or test inc dec nop cli mov hlt xor (bad) arpl outsb adc sub popa sbb arpl inc pusha mov lcall dec notb mov fistl sahf or jo leave and cmc in dec mov and dec shlb gs mov xchg daa cmp cwtl ja jns pop testl inc ret (bad) ljmp push imul sbb inc mov mov mov pop jge fwait or mov and dec test stos mov test ss mov fadd fiadd push movsl and xor mov mov jne sbb mov push int3 mov aaa inc mov repnz rcrb ss xor jne dec icebp shl iret xchg cmc or and jl or and (bad) mov repnz (bad) push fldcw bound mov roll fildll out outsl push outsl pop out stos lds cltd enter xchg mov mov mov int scas or mov into stos dec imul push insl sbb insb pop jb ret xor (bad) pop inc jb inc cmp jno xchg (bad) mov ja mov in push push xchg popf imul jbe cmp out cmp sub outsb (bad) sub jg hlt mov jge in and and cltd push stc inc inc xchg xchg cmp iret adc cltd repz idivb aam mov jmp test (bad) mov mov mov imul int xor mov shrd aam mov mov jg iret xlat call in rol pop adc pop es xchg xchg ja imul xchg into xchg jbe mov push popf cld cwtl leave mov pop stos adc xor (bad) sarl lahf (bad) sbb jbe inc imul add sub out ds (bad) pop in jmp lds lods jbe mov xor xor dec pop mov ror pop es cltd loop xchg fwait mov xchg xor sbb outsb mov mov out (bad) call xchg xor add pop (bad) add sti xor das or mov mov and jbe aam stos out xor lahf cmpsb ret gs pop dec mov in push (bad) sub daa lret jle and mov (bad) testb aas jno add popa inc dec mov lds mov add fs mov std testb pop fisttp les (bad) pop xchg inc dec dec insl nop (bad) in and or hlt popf mov aad rorb sub je adc js or add scas sub popa jg (bad) inc adc cmp mov or push das dec jbe cmpsb lds jle cli jns addr16 push inc pop js inc (bad) clc cmp jae movsl iret mov mov adc aad pop push imull mov fdivrs cltd into mov lcall out mov inc push jae push cwtl push add push hlt ljmp das sbb ds shl popf jmp push insl je div (bad) sarb rcll inc cmp push cwtl xchg inc mov jp scas out mov aad lcall clc (bad) clc xchg jae arpl into sbbb push sahf addr16 or pop cwtl add sahf or xor pushf (bad) rcrb test les mov std sbb ds vdivpd pop or stos add sub inc sub xor mov scas insb mov insb out xchg inc ret aas or pop adc mov push test ss mov lods aas cltd fiaddl mov ret jno mov mov jne fsubrl test push fnstsw jbe push sbb ret mov inc into pop or xchg xchg xchg inc pop dec and (bad) adc inc adc add cmp (bad) or outsb lods cmp ljmp mov sub mov lods and test lea push iret jns outsl cld jp xchg jnp sahf dec jp clc test sbb and mov movsl test fbld insb inc mov dec aam jno inc test data16 (bad) popa adc mov (bad) mov (bad) sub xchg (bad) repnz mov fdivr adc pop or xchg pop push add xchg shrl jb cmp push fcoml pop gs adc xor add (bad) mov rcl scas inc mov xchg jne cwtl add clc lar test aaa out jge sahf ret inc or mov inc bound inc jl or sub mov das jmp mov pop out sbb pop clc xor cmp test negb ret imul cmp hlt jnp dec nop mov rolb mov inc ret or push loope call arpl out lcall bound stos sub icebp insb sub (bad) test push clc pop sbb jne adc stos into out xor ret lea mov jge jnp inc mov and sub ds xchg cmp dec les xor int stos ficoml iret fisubrl sub xchg jo das iret out loope out mov mov jecxz or rorl and aaa jmp adc movsb jns cmpsl test fwait outsb addr16 pop or mov std (bad) ja lock push cltd lret imul stos in dec mov insb loopne add leave lcall movsl or add xor mov inc out lods jne xchg or sahf push mov daa xchg les fnstenv inc sbb inc add push adc lods stos dec out sub or and jecxz lds or mov and outsw inc jecxz pop das dec jecxz xabort xor shll clc xchg orl test fiaddl cmpsl rolb hlt and mov sbb sbb jo daa mov xchg leave cmp out dec hlt test ror push shlb xor mov or aaa pop out mov push shll ds out sarl mov cli push or dec add imul (bad) addr16 jnp (bad) lods or sbb and adc add jge sbb movsb mov fwait inc outsl arpl or inc ja push (bad) paddd (bad) cmp icebp mov mov mov xchg push es sub and push xor fldcw adc inc enter andl data16 or xchg (bad) push sbb into addl mov inc dec fistp fdivrs scas ret cli jb pop push inc xlat or xchg adc lcall sbb loopne mov mov je ss cmp jbe push stos jns xchg mov enter mov adc rolb mov sub and xchg icebp addr16 enter aaa out inc stos sbb and jle icebp push jecxz aad jae pop mov sahf xor cmp pushf leave xchg adc mov sbb loope and insl inc mov (bad) mov dec imul or aam pop stos xchg dec cmpb (bad) repz xchg ret shll dec scas fistl (bad) push aaa mov cmp mov add xor xor mov ret sbb mov scas jecxz out or or jmp (bad) adc and xchg sbb mov imul cs cli xor sahf sti fsub and add and mov je ror movsl imul mov fidiv mov scas inc cmp mov jnp clc movsb hlt push (bad) jge mov and test dec xlat dec cmp ljmp fimull cmp dec xor fwait enter xchg clc mov dec dec addr16 pop adc test or and mov cltd imul rolb popa iret ret rorl mov or loop or shrl popf jo or lea adc outsl hlt aaa cmp jns mov dec inc mov out sbb xor mov mov adc loop cmp push std add push shll pop jns sbb mov adc xor adc push and insl (bad) xor insl cli aam out sbb fbld inc roll in xchg dec lds popf xchg popf cmc jl and mov jnp fmuls sub (bad) or xchg aam and stc imul iret push cmp (bad) mov push ficoml pop xor mov sub insl call sbb ja add push jmp scas and pushf or lods mov psubusb ja and mov imulb clc pop xchg xchg fimul jecxz or adc lret cmp or les inc push push jge jmp mov sarb or jmp mov mov and lret loopne or mov das sub lret movsb xchg scas popf bound pop add stos push mov xlat inc dec loopne fidivl out and inc loope push push popa movsb rcrb (bad) lret xor pusha cwtl and jecxz (bad) pop loopne cmp insl xchg sahf loop adc sarb jnp xchg adc test pop mov mov cmp scas xchg fisttpl jae push int3 xlat mov mov mov push jmp mov into (bad) and imul add jnp cmp lods inc jb or int popa pop adc inc or sub add and ds sbb sub adc push push xor sbbl jge test hlt faddl aam pop dec push mov (bad) mov mov adc ja arpl int3 fchs insb push xchg mov fmulp divb pop addr16 xor xlat dec cmpsb (bad) movsl in adc xchg xchg jne mov jecxz adc loopne cli movl mov inc jbe push iret fs arpl sub (bad) xor xor (bad) repnz sbb jp xchg mov (bad) sub mov out outsl fnstsw mov invd dec pop ja pushf push loopne jl jp dec rcrb pop xlat mov push out out add push xor mov (bad) shrb jp call mov pop jbe push adc in dec cmpsb insl imul pop sub movsl movsl andps clc (bad) ds popf (bad) jo bound mov mov and pop jo leave mov (bad) les pop jo mov inc adcl ss sbb das adc cmp jp and repz loop mov cmpsl xor jmp mov lock les jb dec outsl pop mov inc pop xor xchg sbb data16 dec mov cmp lret adc ds mov popf movsl mull push and adc scas aad test lock fcomip test jno outsl and mov int3 pop jl in aaa adc pushf pop jl jnp cmp dec mov push (bad) popl pop in loop mov orb rcl mov cmp test ud1 xor aad pop rolb fldcw in cmpsb call mov loope xchg jb dec rsm adcl loop movsb inc push mov bound mov and xchg cmpsl pushw xor fstl push sbb push dec cwtl fwait arpl sbbb mov jae sbb push stos jnp test inc cmpsl xchg mov pop xchg xchg sub push jo lahf push and cmpb adc xchg cmp pop or cmpsl outsb push xchg sub lret mov hlt mov jp xchg lret mov push xor arpl (bad) mov imul and add ss ret adc dec mov lea push fwait cmp adc mov xor push push mov cmpsb adc jmp push xor pop mov stos and push (bad) test push dec icebp dec ret xchg dec mov push aam icebp dec out push and cmp push adc pop cmpsb pop stos lock loope sub mov popl mov add pusha outsb adc outsb pop pop jns (bad) (bad) and and mov mov cltd sub fidivr scas jns xor xchg push xchg jnp int3 fcomp lea outsl xchg sarl ljmp push mov (bad) sub arpl arpl mov adc outsl lcall or add ret daa adc (bad) (bad) jae aas jmp pop ficomp cmpl jle lcall pusha ret mov pop dec loop pop cs je xadd push in push pop call pop sub mov pop xchg es cld lods iret xchg fldl xor pop adc enter in pop adc js cmc inc aaa adc mov jns int3 xor push int pop jle xchg push inc inc lea imul into aas enter mov xchg xchg xchg hlt outsl addr16 aam movsb ds subl movsl es bound push add icebp daa gs pop out pop or leave adc data16 mov cmc rcll pop in leave or jae jecxz data16 cmp xchg sbb xchg dec repnz lods loop lcall xchg dec aam push fnstsw cmpsl xlat mov fcoml pushf fcmovnb add test je mov data16 movsb cmpsb jecxz push pop and int jno xor pop scas pop xor jno xlat pop (bad) aad lret dec stc pop stos jecxz popf ljmp lcall xchg clc push lea shrl mov mov add sbb xchg and mov push add mov decl mov in repz out xchg mov lret xor orl rcr in sub sub xor (bad) jo int adc ss inc cld sbb sbb jno pop ljmp dec mov mov mov sarl popf sbb das jns loope sahf lcall movb fidivl dec es ret mov xchg aad sarl push xchg dec ret jp push xor pop icebp dec fs sub sub stc incb pop (bad) jne cltd jb arpl and or mov jbe aad mov out imul cwtl fldenv and rorl into mov out add jno or jns ds lret aas add inc sub xchg in cltd dec cld lds mov enter fsts shrl lahf push leave sub lahf cs push pop jo or sbb push subl cmp jae mov out push push shr mov imul mov jnp movsb outsb sub mov adc ss add dec mov sbb pop arpl rolb jno ljmp testb mov fidiv cli push out mov sti and in pop sbb mov dec pop mov and mov adc jns stc push in sti cmp push mov mov aas nop lds cld lahf push cmc mull clc sbb fcmovnu stos bound add or shll xchg loope adc cs leave pop sub xor or fdivs arpl and jle faddl addr16 arpl xchg mov mov ja jo mov scas fnstsw mov jecxz and push test (bad) push imul xor shlb adc popa inc out out in sub jb xchg outsb xor mov loop inc or push test sub cmp scas popa dec in add cmp es cmpb out (bad) fstps inc test fstpl xchg mov cmpsl mov sbb imul sub ljmp repz lds sub mov mov std adc packsswb (bad) stos (bad) insb cmp popa push cmp jmp test jnp and repnz mov cmp inc loopne jge hlt push xor push xchg mov adc push lods inc or jns and adc scas mov jp dec int lods xlat lods mov scas ret jbe mov ret jp jmp enter ret cmpsl fcomps add mov rcll movsl jb icebp lods xchg xchg lods dec sar xchg adc xchg cmpsl lret jl test lods leave lcall push int dec (bad) lods aas out lds mov jnp sub mov cmp mov sbb das sub cmp je cmp cwtl dec cmp jl inc inc xchg xchg pusha gs mov xchg jg push pop idivl xor cmp (bad) fchs mov and nop mov pusha xchg sbb imul cmpsl loope cmp lods jmp push jbe xchg stos popa scas xchg les (bad) push fidiv (bad) fbld rcrb movsl popf addr16 mov in mov (bad) lods inc repz popf aas push cmpb setbe or or pop sub aaa or jle mov dec loop scas and pop mov or xchg fadd dec out jmp xlat sub in or (bad) mov mov addr16 lods sbb xchg insl adc adc push jne lcall cmp mov incl outsl fmul adc xchg mov notl mov lods pop lods stos sti dec jns les xor jg les jne mov fbstp lds fisub sbb sbb bound sbb add or dec mov arpl pusha push pop stos sbb repnz rorl jbe int3 mov pop xor mov call push and outsb cmp xchg mov or mov nop sub insb xor daa dec fnsave neg idivb (bad) jmp je in cmpsl add xchg push cmp (bad) std jne jle (bad) iret jae hlt test cmpsl sarb mov enter enter test mov dec adc imul (bad) lahf pop fcoml jo sub mov pusha mov inc add cmp push out loope mov ljmp inc and mov sbb loope (bad) jns mov push xchg jnp jp (bad) xchg jg jmp fwait iret mov pop xchg bound xchg aaa xchg popf adc cmpsb inc pushf fwait rcl xchg add nop aad mov cmc jle mov cld jbe fmulp out mov cmp (bad) dec and xor add or inc adc push hlt faddl mov loope aas in (bad) jae push mov lods les sbb es sbb push adc sbb jecxz icebp cmp jns dec or hlt inc fsts incl mov (bad) out jae dec ret jl int3 cmpsl icebp insb inc out cmp cmp stos data16 enter sub nop adc ds inc std push movsb (bad) dec xor cld jns inc std dec adc add leave clc negb dec cmp dec push mov cmpsb add clc sub cmp loope mov jnp cmp jmp cmp mov jmp pop mov inc movsl or test movsl (bad) mov and cltd imul xchg and (bad) mov lcall stos pusha fnsave imul lahf mov gs popf pop mull lahf imul lods pop out pop daa jmp jne out mov inc sbb dec test jbe pushf xlat fnstsw (bad) push sub push xor ret pop outsl (bad) mov arpl int3 and add push test stos mov and dec daa sub cmp in mov cs test loop lds add sub cmp ret repz ja ljmp mov leave das cmp pop sbb inc ss mov cmp cmpsl stos mov test or xchg aaa sarb das movsl mov fisubr ja mov das dec sub mov cmp test mov jne icebp mov pop iret in (bad) xor cld test mov add inc mov mov cmp push (bad) sti cwtl je int lea adc inc popf cwtl rorl fdivrl sub lahf inc hlt lods jns adc xchg jb pop cmpsb repz (bad) mov repz ds sbb sahf pop dec sub stc (bad) xchg ja repz out outsl loop xor inc mov sbb flds pop add je,pt (bad) lods adc (bad) jae (bad) fnstcw xor push adc cmp push mov out or mov aas sbb inc fstps push inc outsl imul lods xchg pop popf sbbl push push jmp (bad) sbb out out xor adc ss (bad) cwtl or jnp fmuls iret dec mov push (bad) jns xor xor mov push std arpl mov mov js push rorb push inc and cmp imul into and mov jno test clc stc cmp inc push push and adc pop xorl mov sbb jnp sahf es jl insb push pop jne xchg ss push fbstp (bad) mov cmp push aas in loope adc xlat jnp jne ss mov push xchg aas xchg mov ljmp mov push lret lret push daa sub push pop mov ljmp aad push adc loop jbe mov repnz xchg outsb gs sub adc dec insb xor icebp out fisub mov stc repnz jl ss imul jae or pop push cmp outsb fs xchg fwait mov adc jecxz mov jno jge out push xchg inc xor push cli sbb gs lret (bad) mov lahf in mov push stos push mov dec cmpsb (bad) ret mov mov neg (bad) mov mov outsl test cmp adc ja jg mov dec pop cmp or push sub outsl (bad) inc test imul mov mov add push fsubrl sub ljmp dec add xchg stos jge or fadds mov cmp lods and mov cmp enter dec jp mov (bad) cmp cmpsl jl mov mov flds scas mov nop mov stos xchg gs into mov cs add cmp lock scas adc push pop sub jecxz xchg add into inc outsb stos xchg sub xchg jns dec movq data16 xchg (bad) movsl xchg cmp lock lock pop xor dec inc cmp push jmp jmp mov insl push sahf xchg adc adc sbb js (bad) repz (bad) sub xor jg shrl sti sub outsl mov xor adcl (bad) jb scas and movsb add xor dec pop imul mov cmc lods mov xor dec adc mov (bad) repnz adc not jns push aas push ljmp stos jge push (bad) je mov fsts and stos and in jns mov adc pop mov orl adc inc fcomps jnp enter arpl out movsl and adc lahf push xor icebp stos aam push pop mov sbb push cli fs fisttpll sti and fstp mov insl jp lret das ja stc jno push movl sbb int jno xchg inc push les xor and push mov call mov jge push rol and cmp pop ljmp xchg mov push jg test arpl add test jae pop test jle gs outsl cmpb mov dec jae mov and add sbb nop out jle ja into cli pop mov dec xchg mov xchg xor repz sbb ret (bad) out daa jp push arpl ss inc dec andb push aaa and stos rcrl pop sarl mov (bad) jecxz daa cmp adcl dec push inc cmp stos cmp aad pop ds pusha push add std sub (bad) test mov sbb dec pushf das jae rcl in outsb jbe jp aam es push cmc cmp pop adc xor scas mov imul cmp mov je cmp (bad) mov sbb mov pusha (bad) push into fidivr repz fwait mov dec add mov fist js xchg lods ds scas in xchg jle in and jnp (bad) cli mov jp pop mov scas ja (bad) in loopne and cmp fstpl add xor shrl cmp add sahf push movsb dec fdivrl jp lods andl stos xor sbb jp or fimull outsb xchg (bad) mov mov xor cmp jno push xlat mov mov ds push jmp or into pushf dec jae jns (bad) dec mov loopne movb lea mov loopne xor push into aad push mov mov imul xor aad adc pushf pop (bad) mov cmp notl jae jge lods out sbb sub sbb xchg jo inc xchg mov loop cmp pop loop (bad) lods sti xor mov jbe iret inc in fisubl rcrb enter and push mov pop int js jns loope in and shlb xchg adc (bad) pop scas mov xchg fidivr int3 fiadd inc xor push cmp aad adc push mov sub jecxz push pinsrw xchg push and xor mov xchg xor push xchg loope adc xlat push mov mov int xor jecxz shlb aas std adc pop inc call (bad) xchg cltd pop mov add pop cs cmc inc xchg les and lcall pop fnop fldcw mov jno mov in mov dec adc fcmovnb mov je and mov aad repz jmp loope stos into lret stos les mov shrl daa enter frstor xchg sub sbb mov mov jge testl test and ja outsb dec mov lret jno mov xor shr clc gs cmpsb jle or rcr (bad) dec or push pop aaa into mov cld gs aas dec loope xorl inc xchg into clc (bad) repnz fwait mov rol scas pop sbb andl les and xor fnstcw pop pop push loopne bound pop cmc push loop xor enter dec int3 (bad) subl je in mov lods lods data16 fmul pusha jnp sbb jbe repnz xor adc mov scas loope out loop adc mov xchg popa xor pop jbe aam inc and mov adc xlat mov push ljmp ja cli pop push outsl lods push rol dec sbb mov lret dec xchg loop dec outsl pop jl inc push dec xchg (bad) pop jne mov pop jae sarl mov xchg enter sbb (bad) push int3 and jns repz mov out mov loop push sbb imul aaa mov je inc cli mov ds psllw into rcrl mov cs sub lret sub (bad) inc mov and adc mov cld jae cli mov dec inc in mov xor sqrtps adc sbb out sbb les pushf push popa (bad) (bad) out cmp loop xchg scas jno lock add and sarl repnz mov jns test push es jp pop ja cmp and jp scas pop mov pop loope lahf fstps (bad) mov out outsl ss dec pusha jg rcr data16 les xchg imul ja test mov add add adc addr16 notb mov test jmp shrl in xchg sbb cmpsl inc mov outsb (bad) xchg (bad) xlat xchg loope aam xchg sbb xor jns icebp xor adc je xchg or or push inc push insb xchg cmpb add gs inc pop jae (bad) pushf adc adc xlat cmc xorl dec mov or adc test mov xchg xor and cmpsl xor test mov xchg jp push pop mov and and loop fimul data16 dec je or push stos or loop loopne push xor mov jmp add lea sbb lods (bad) sbb and cmp sbb popa cmp and sbb inc mov fbstp mov lods sbb ss pop mov es (bad) fdivl jnp jle outsb outsl loope shr inc jmp mov outsl test mov ds lahf loop mov inc jmp pop mov popl loop (bad) and xor fistpll cmc leave sub pop aad imul clc mov mov cmp js mov jmp push arpl js mov mov dec sbb int3 pop fnstsw push inc mov dec jg push cld ret xchg cld std cwtl pushl cli pop popf call jns out ljmp aas int3 fnstenv pop sbb inc sub xchg xor (bad) enter jge or sbb jno jnp ret cmp cmp jo sarb cltd mov mov loopne (bad) and push decb aas cmpsl (bad) (bad) fdivrl in sub or mov testb inc insl loope fs lcall dec scas jp les xor push cmp daa jno push jo mov jae iret and inc and pop xchg pusha add and addr16 ja xor movsl sbb testb stc negb (bad) dec cmp in push stos jnp call jmp aaa psubsb cmpsl jecxz daa leave dec aaa inc fwait rcrb cwtl aaa and aad hlt mov pop lret jmp imul xchg xor sub (bad) lock and fwait mov xchg dec mov xor ret aaa dec xchg mov mov mov push int out shr ret cmp mov and xchg sarl push das stos je lea jo xchg dec test adc cmpb inc je ret mull addr16 cmp out fs les daa mov mov stos jnp adc jne xor xor mov std mov cwtl es xor add gs dec add xchg pop sub popf rcrb rcl mov jecxz pop ljmp incl stos call jmp push jg out lcall cmp jle (bad) je data16 mov add cmp imul cmp jne (bad) xor add mov (bad) mov fwait xchg es xchg shrb test xchg push jb mov and pop out dec add pop (bad) sub dec push fild (bad) ficompl add sub pop popf in rclb ja pop repz add adc or int jno xor call cmp mov rcrl lcall in mov push inc mov lds in and leave ret hlt out xchg aaa mov inc push mov fildll pushf push sbb push dec push pop test (bad) fsts xor or cmp cmp push iret int3 push jle (bad) xor enter test pop pop sbb daa dec dec stc clc fist sbb ljmp inc aam insl pop push je arpl insb (bad) call fs mov sbb xchg lcall test ret lods repnz sub dec mov cmc cmp cltd rcll push fdivl addr16 add insb jg fistl fdivrs pop ret leave insb jbe pop lods std jl shrb mov int3 lcall leave adc (bad) dec xor fisttpll or repz xchg popl imul cmp stc sbbl (bad) jl cmp (bad) dec fistpl ret addr16 xchg jle je insl jbe sbb (bad) aad ljmp jg mov inc cmc xor iret jmp nop rcrl (bad) sbb mov cwtl es cmpsb jmp sbb xchg push sbb push push cltd arpl pop pushf imul jne fdivrs aad dec pop inc mov xor repz mov cmp xor inc iret jmp adc loope je lods or lret into or cmp ss aam mov fcompl aas jp inc xor jbe push fwait cwtl mov scas jbe mov loope xchg mov sub or xor pop inc ja inc icebp mov mov jns mov fwait in mov int3 cmpsb xor add jae push mov sbb push xor jbe into add rorb inc xor (bad) mov fwait jmp pop xor fadds ja js cld imul shl or (bad) rcl insl std ljmp jg or and sbb fsubs inc sub lods mov out imul insl jg popf mov dec and mov xor adc and mov popf int lret das sbb addr16 stos scas xchg jne outsl mov movsb decl movsb aaa popf cwtl push lret and out mov pop (bad) ss sbb insb and arpl enter xchg jnp or movsb mul and ret nop push ds sbb aam inc mull call jb xchg hlt jns jge ja popa mov sarb cli bts mov bts push xor lods test int3 mov push mov insl aad aam mov in sub mov dec cmp and fcoml sahf jp ficoml jmp imul test sub (bad) lcall mov pop cmp dec inc pop inc dec and jns enter mov (bad) gs pop cmp jo push or in or ret ret mov sahf pushf add in andl out movb int adc shlb xchg out xor cwtl imul sub movsl (bad) lahf in jg fisttp cmp js jl push push jne pop dec (bad) enter cwtl or or jne aam add sbb lret cmp xor xlat hlt mov fisttpl into pop ds fidivr incb cmp xor test jae insl sub (bad) jnp push iret or adc pop cmp xor xor push (bad) in scas jge fcomp popf jbe out std push lret cld inc xchg mov lods dec and fmul imulb daa push mov xor mov aaa popa mov cli adc lahf clc (bad) cltd push into into outsb push fstpt and cmp jne scas add and into (bad) icebp and leave cmp jo sbb push xchg jnp mov xchg pop movsl icebp adc jge call (bad) dec daa iret inc lock inc pop push jle jbe std adc pop fsubr fwait pop jge aad pop push inc aad aad xor (bad) ja xlat scas pushf adc mov leave and jae int scas add rcrb movsb xor push in xchg lea mull mov adcb push inc lods ret pop ret mov ja test (bad) pop push in or pop data16 adc daa sbb data16 sub sbb sub call add mov mov xchg push jmp jg fsts add sbb insl push inc inc mov aam inc movb pop jl dec ja repnz (bad) loopne cmc addr16 je jnp xor roll mov subb cmp cmp into push push inc mov push fdivrs cmc cmp fsubl enter fcmovb (bad) jbe pop adc inc stc dec add mov cld je cli cmpsl nop pop jl jae and (bad) mov stos lcall jmp (bad) adc mov push insl cmp pop aaa xchg ljmp aas xchg jmp mov loop push sub sub rclb cmp int3 add pop jns pop mov scas ret fs dec adc hlt and cmpsb (bad) call ds lahf stos gs ror mov and push xlat dec dec push in xchg bound sub cmp cwtl and dec xor sub mov xchg dec and lret ljmp sar clc mov add cltd gs fiaddl lds out and sbb push mov fsubrl add loop jbe leave dec add mov xchg mov jmp insl mov lret mov xchg lret inc enter sbb dec push and cmp shr pop xlat repnz pop add adc fs outsl jl and mov mov sub dec mov mov jns es shlb (bad) xchg lea sub inc jg mov aas pop in fistpl dec or lret sbb hlt in pop dec push dec mov mov xchg jo xchg outsb addr16 mov mov imul pop pop mov pop sbb fs push jp cmp lret scas enter dec lea mov xlat stos adc dec pusha mov lock jl test (bad) out mov div mov sti pushf (bad) scas loopne mov loopne sub push push fstps je add push adc push mov cmp comiss std xchg mov jl test mov and test aam mov mov inc push lret push sub out mov cwtl pushf jo mov insl push das or cmpsb mov jmp int3 out and popf inc mov mov dec sbb mov and addr16 or sub scas dec pushf imul int fisubr movsb dec pop sub ss rsm cli mov das or ss xchg test lahf iret mov sub imul push jb shrl jne test jno enter pop adc xorl ljmp movsb pop addr16 gs adc in and adc push in sub inc pusha mov sbb push je mov sbb out mov push pop adc scas mov fs mov jnp popf and pop mov mov pop sahf inc hlt movsb jp adc dec push cli or mov int (bad) lcall push insl jo aam mov or fstps rcrb hlt mov enter push inc dec and mov jmp xchg xorb lods rorl or in adc pop adc mov mov (bad) loop fimul mov fistpll cld test test xor lock ss enter sahf fwait ret jmp ror ret pop (bad) adc stos dec or lods mov cmpsl push test mov cmc in push mov push sub (bad) jmp js test dec xor sahf lret push adc gs outsl mov sbb lahf or adc inc push sub cmp xlat sbb mov push xchg es icebp sub xor bound xor mov pushf add mov aad popa js dec push xchg sbb aam (bad) dec xchg pop (bad) int arpl or pop arpl push pop jle vaddsd sbb sbb add mov push mov lods ljmp mov cmp test inc and xorb jbe imul stos repnz repz mov dec jmp and mov cmpsb sbb jl mov loope jb outsl add mov jl mov jnp push mov scas test and fstpt test lret idivl lea dec scas bound fstpl out lret lcall notl xor fcompl popf test inc mov cmpsl fcoms cld (bad) into cmc addr16 fbld cmp xchg and int aam (bad) frstor sbb rorl sbb out fldenv mov and ret inc and cmp loop cltd jge adcb ds xchg sti mov mov sub jp mov mov insb mov imul inc imul aad push sti (bad) cmp lret jl xlat lahf sbb dec popa jl aad push jge loop or cmp jmp stos and aaa or xor push fs sbb mov cmpsb sbb in mov out jnp cli (bad) pop xchg xchg cmp daa sarl out rorl je jno roll sbb fs cmp pop or push push mov fs mov pop (bad) lahf lods mov cmc std lret jb adc dec mov popf (bad) dec fidiv repnz mov xchg lea ss or outsb adc sub shrl leave dec dec jne sbb arpl mov sbb adc adc scas dec repz mov cs mov push rcr test sub jnp ds fidiv scas push (bad) jp xchg cmp inc mov into add pop rcrl out pushf mov push clc mov adc out jne pusha cmp xor int3 lods sub imul mov repnz nop pushf xchg (bad) jbe out loope (bad) xchg push loopne test pop adc out sub jmp push outsb insb sti mov fistp les aaa rclb jmp jnp int jns lods inc insl mov imul push les pop (bad) push test leave mov into pop ds fwait jae in jae dec mov push sub inc xor ret pop lds cli outsl sub les jmp int push add gs enter add xor and out jge cmc xor pop (bad) scas add (bad) cmp dec das jg mov mov adc or push and rcll inc (bad) pop push jns out xor sub cmc nop lret jbe out adc addr16 mov xchg aad ds jne mov ja push movsb xor pop loopne pop divl push push int3 mov das or sbb xor xor push or scas fstpt gs mov inc std icebp cmp dec (bad) stc pop clc stc cmp jge aas int fldl pop daa pop xchg lcall pop data16 mov mov dec jne sbb push jae or add sbb add adc mov (bad) xchg push jnp ds mov repz mov xor pop push jmp cld outsb lea je out and inc dec in shrb (bad) dec test clc (bad) arpl add or test int mov (bad) cmc insl cmpsb ja push push cmp mov stc dec dec imul test fsubrs mov ds hlt pop cmc out push ss imul inc outsb sbb dec test mov in in bswap out sarl xchg test out sub adc and repz sbb loop pop pushf mov cs ja pop push mov push xchg mov movsb push mov inc jae jnp mov clc adc jae dec in cmc fiadd mov xor push fisub repnz push mov addr16 mov push lods movzwl in insl add out mov mulb pop or andl jbe sbb xor mov cmp lcall cwtl push xchg xchg xor push insl pop popa ja outsl iret jb inc aad sub gs mov roll sbb jmp lock pop add lcall inc fsqrt lcall mov push ret inc fisubr shr into ljmp sti jecxz xcrypt-ctr cmpsl fwait test repnz adc ds push es mov (bad) add add inc adc push loopne in sbb add xchg push mov bound fdivrs lea cs mov testb jbe cmc stc mov out push ret mov or divl mov (bad) iret xor decl pusha add mov cmp les sahf call add add test dec sahf pop jge popl xor pop mov and addr16 sahf insb in push clc call (bad) push xor ret mov or (bad) lock movd aas adc in mov lock sub int scas dec adc xor leave cmpl fbstp xchg mov negl cmp out insl not fs cmp pop and pop mov sahf out jne lods std mov outsl outsl arpl push mov ret pop and mov inc movsb or jbe mov xor call fldl push andb mov pop in fsubrp ja jns cmp std sbb iret sahf jne repnz mov push mov dec sub xor mov dec fisubrl outsb fldt cmp and cmp leave fcmovnb data16 stos fadds push push inc xchg aad fsubs test adc pushl pop xchg push (bad) call xor push sbb and jbe pusha lea fwait in xchg movl mov pxor mov xor push test xchg (bad) in lret xor mov mov xchg mov int3 mov sub loop iret sbb mov or ds ficoml ss xlat jecxz or stos imulb jp mov pop (bad) jmp xchg pop mov out push (bad) iret push sti sti cltd cmc jecxz mov sahf dec (bad) aam xchg fcomps pop pop mov addr16 adc xlat jb outsl stos out (bad) mov (bad) cmp jo mov push fidiv stos lods leave popa pop jp out sti jno shll jno aam fiadd pop fwait dec movsl cmp (bad) sub jbe mov cmp jbe pusha xchg cmovle aam xor fwait incl jnp out push lahf into push lret dec jbe xor rol jno pop inc jle stc pop das mov add lea dec outsb stos in or or pop (bad) (bad) stc pop stos rcll movsb ljmp jne sub aad xlat mov xor mov xchg push dec push jmp mov stc insb movl push fild stos mov jno (bad) pop (bad) xchg ret mov mov pop leave stos fidivl sarb push jae fs popa lcall sbb popf jmp xchg push push adc imul cwtl inc pop mov dec (bad) pop adc pop ljmp or jge sbb imul lods push pop xor sbb xchg pusha adc sub dec pop xor pop in pop sub xor cld scas lcall cmpsl mov mov jae xchg jl pop sahf fdivl and sbb jecxz xor xlat cltd jmp (bad) insb imul xchg iret aaa inc mov jmp mov (bad) out pop mov fcmovb inc aas aad cs stos dec popa loope loop leave mov lods out cmpsb cli rcpps std add out shll pop popa insl mov test es mov push leave loop sbb adc mov lret lea dec fsubrl push in (bad) ret sub dec stc loopne add lods test aad ss inc std lret push out (bad) js pop gs sbb and stos cmc sti fistp aaa bnd aaa push jecxz (bad) fidivrl fidiv mov (bad) call neg stc (bad) xor (bad) xor push outsb push cmp (bad) negl ss fisub insl xchg repz xor push addr16 sbb xchg add push into pushf pop or adc les xlat or mov cmp test popf jecxz pop scas div fcomps dec jbe lret je test xchg rorb jns pop mov sbb xchg xchg xchg fcoml sbb dec lods mov and into in mov xlat stos jne xchg mov subl lahf mov inc inc imul ror mov or and inc mov in cld jb sub jecxz push out sbb insl sub xor jge,pn jge (bad) (bad) stc dec out lret ja loop mov das add lock mov push jp sbb cmpsl mov test sti and lahf (bad) cmc mov mov div inc mov mov jbe or clc mov out inc push les imulb or jo pop inc lods xchg mov sbb jle sbb out xor xchg test dec push pop imul test or adc xchg rcrl mov mov fdivrs ret addr16 xchg mov sbb sub mov jp xchg jns inc insl sbb sub xor xchg adc xchg pushf add sbb cmp dec mul ljmp icebp lahf mov sbb pop fcomps jle sar std adc xor inc xchg xchg xor lret xlat xchg adc cld push add jle imulb js sbb jno push popf ds or insl in clc lock out scas sbb sbb and inc (bad) pusha addl sub push jp out add ja js jecxz adc (bad) shrb xor mov xchg shl pop cwtl jb in mov jg fwait sub scas sahf adc sti push adc mov mov add cld ret or gs xchg popf fbstp (bad) cwtl gs (bad) fs sbb cltd jns sbb lret push inc push xchg or sub icebp fdiv mov cmp daa nop fwait test sti dec mov repnz hlt out sti call cltd fmulp rorl push pop test inc gs mov (bad) jp sbb adc jae (bad) cmp je sahf scas (bad) repz jns sub out loope js iret xchg rcr fisubr cmp lcall mov add cwtl lods cmp xchg jns (bad) call mov sbb test mov sbb jmp adc mov or scas pop outsl sbbl es xor jne (bad) dec mov mul (bad) mov mov pop sub fadds xchg pop push decl dec sub call (bad) aam pop and add std mov repz gs jge fucom into (bad) movsl std mov idiv fdivrp ds jle int rcrb mov stc jnp jg std fwait cmpb jbe inc cmpsl dec jp pop mov jns mov leave les or push mov cmpsw pop lea dec mov sub fdiv ret mov or and aad cmpsl popfw push xchg bound sbb sarb daa scas out sbb mov cmc mov sti mov mov inc cli movd rorl nop push push faddp push test int3 test pop push faddp in pop mov fs push pop roll fdivl xchg mov repz adc xor fistpll and out sub mov out (bad) sti inc stc cs jle fdivr call jmp pop cmc (bad) dec test test stos idivb sbb xchg mov mov mov js scas xlat push push cmc cmp pop pop mul sti ret jns pop xchg in imul data16 cli mov (bad) mov stos mov xchg es int ret jnp mov outsl push out sub popf pusha cmp aad mov xorb add pop sub lret mov add (bad) popf adc mov mov xor hlt clc (bad) mov pop cmp mov movsl cmpsl pop pop repnz and dec out leave mov sahf dec mulb add fnsave out mov cmp lret mov pop stos jno cmpsb (bad) inc insl mov lret rcrb jbe jne cmp pop adc jbe sbb ficomp les sbb mov ss je and fildl je enter push (bad) mulb test xchg push dec and movsb (bad) icebp jmp fcmovnbe and inc leave mov sbb (bad) icebp popa adc xchg insb lea mov mov cmp and sbb pushf insl or cmp mov test addr16 cmp sti cmp mov int3 stos mov lea jp out test inc fwait push scas pop pop pop and push mov in xchg int3 sbb aam mov cmp out mov inc sub aaa sbb xor fisttpl xchg cmc arpl roll sub push ret jb pop enter adc scas and sahf lret je mov jmp dec cmpsl repz je push sahf push jbe ja jmp imulb lahf aaa fisttpl sbb or xor jmp repz out xor (bad) dec stos test (bad) std outsb arpl mov ror mov mov flds imul pop je adc jbe (bad) fmull nop lods adc rcrl mov hlt push fucomp hlt insb outsl (bad) out daa dec sti loopne pop jle cli out jp aas insl stc xchg xchg jge cld (bad) xchg jg (bad) xchg adc daa fwait pop adc stc pushw lods andl dec lock push cld loope leave fs aam adc call loope push and mov idivl push add les pop or add cmc outsb jne leave adc mov dec sub push dec cmp xchg xchg add sbb sbb fwait aad lret aaa inc sub xchg mov in and mov int3 mov mov leave fmulp push cwtl push jp imul adc add inc popl xor addr16 mov in mov pop adc aad or and mov aaa push insb test pusha setne rorb mov or and mov loop sbb mov gs bnd cs mov push cmp jge out lcall nop xor repz push mov scas lds lret sti inc sbb mov xchg mov arpl lret push mov mov jge (bad) shr mov loope sbb loope jno mov lahf aaa sti outsb cld jbe lea push gs jne jmp xlat les loope movsl xor and xchg adc add inc xor in mov push andl aad sbb pop mov cli push ret add popf push mov push orl insb push cmp rcll push out mov jg mov jle inc pop mov xchg sub adc rorl push cmp adc outsl mov sti out lcall and add rcrb pop fdivrs mov js xchg jg or out movsl negl jle ss jne mov fisubl fwait outsb mov xlat lret add mov pop add push mov xchg mov fwait inc insb lcall pop mov dec shrb imul cs jnp xchg mov pop faddl repnz sub test ret push popf stc push repnz ret fmull cmp push pop icebp and xchg and mov aaa sbb inc fildl call xor xchg xchg imul (bad) pop hlt arpl loopne mov xchg dec dec jnp push gs insb or test dec jle movsl aaa push je mov int3 jle lods push push adc int3 push insl aam xchg fisttpl dec (bad) xchg cmp mov sbb movsb xchg mov insb cmp mov dec (bad) iret stos jecxz cmp imul es (bad) xlat jns (bad) in imul mov xchg jl shrl push loope mov mov dec mov xchg mov leave xchg subl adc cmp jnp roll ficomp dec ljmp imul fistpll cs ljmp ja dec dec aas clc in int3 addl jecxz adc mov jle adc repnz pop jbe xor aam mov sbb adc jae push dec ror pop mov cld inc aam mov insl pop adcb in cmp ja inc xor push enter xor test test mov xchg (bad) mov loope fisttpl sub test outsb mov adc ds stos popa call jge adc pushf inc aaa les mov clc and mov cld fimull jb sti cmpsb jmp fdivl mov (bad) cmp jecxz test mov push imul rcrb insl dec push jl mov leave dec sub pop repnz sub mov rcl fmull std jne inc push mov cmp lret jecxz adc dec and sub mov mov ss xchg (bad) insb sub arpl aas inc jno and pop (bad) inc push test mov lret mov ret cltd inc stos lea dec cmp aad scas pop mov mov xchg std jne cmp inc jmp and aam pop ret or mov mov xchg stc add and push mov mov (bad) sub fs adc xor inc and fs jns rcll cmp scas push mov js pusha pop pop fnstsw mov popa add sub addr16 mov jl xlat das fcomi mov pop jg add xchg jae in inc xor cmp adc outsb mov mov dec xlat push inc sub inc cmp adc mov and cmpsl scas mov (bad) call test cmp inc das mov cmp pop (bad) stos (bad) ljmp mov push lcall push add and cs jecxz movsl out mov enter test and mov push and cmp jmp (bad) ja push add pop and sbb add xchg fsubrs ret les dec mov movsb mov lods mov (bad) sub xchg jp jbe outsb (bad) cmc sbb popf mov push loope inc push daa and cmp popa lea push loop and inc xchg sub adc bnd xchg jnp jmp int dec xchg add bound outsb out xor mov mov into xchg and push inc mov xor (bad) lret jge out (bad) mov xchg adc daa sbb cltd subl fs mov sti sar mov inc inc in int3 mov aad adc add fsubrs adc je repnz adc sub add adc mov subb mov xor popa cltd mov daa adc lods adc fdivrs (bad) dec or mov jnp cmp das lods lret (bad) sahf push decb dec (bad) loope cmp mov icebp xchg jl cli dec cmp mov ja insb mov xchg jb div xchg pushl (bad) neg pop popa push mov ret sub les pop fwait popf mov enter daa out cmp add or mov mov shll fs out out jge ret stos out mov sbb inc sbb mov data16 add dec sbb mov pop int add dec pop cmp mov xchg sahf lahf mov in nop mov lret jge mov jmp xor mov sub cwtl in in mov fdivl sub push ss mov lahf (bad) out daa movsl std cmpsb ljmp pop int3 pop loop outsl push scas aam pop outsb cmp (bad) leave movsl mov cmp and pop fwait inc mov ficompl xor mov addr16 mov dec cmpsb mov adc lret out mov jbe mov sub mov adc inc sbb sub xchg xchg stos (bad) xor (bad) popf sub decb data16 punpckhwd pop (bad) (bad) sti (bad) mov pushf cmp nop ljmp in push xchg jne xor dec sbb lea into add jnp repz rorb adc or sbb pop test xchg push push pop daa inc adc jo in out int jnp jnp and inc fisttpll je mov cmpsl cltd jns fcoms jl xchg dec mov ret jo fimul in pop (bad) into jae lahf jae lea pusha cmp out lret fisttpl outsl (bad) push stc lahf outsl lret and test jo ret jnp push aam pop pop (bad) xor in (bad) xor sub xor out fldt (bad) es add push test sti adc mov add dec and and sbb xor cmpsl sub jnp lahf lods hlt push sub mov icebp pop js xchg out popa jnp jbe call cld push xor fist sahf daa ret push mov sbb and and lea cmp mov movsl arpl inc mov lods dec push in ret pop add mov xlat das mov jge fsubl xor lds or (bad) fdivs je mov fcoms push push outsb xlat mov push aaa lret cmpsb pop xor fsubrs in in sub daa test mov lcall inc dec push lds add mov pop ss dec and mov sbb test xchg cmc in dec paddusw push stos mov mov push inc arpl pusha inc inc pop xor sub sbb cmp jle sbb jo adc lcall je fdivr dec pop out cltd cmpsb jge pop mov rorl sbb dec jns sbb popl frstor pop int3 jbe stc popa mov mov (bad) iret jns (bad) xchg imul pop push (bad) jae sahf or repnz xor stos push and int repnz loopne js fisubr ss in mov aad inc rcrl fisubrl jo adc icebp (bad) inc mov lds push andl enter int aaa hlt leave jno and mov rcrl enter imul dec incl fimull repnz jp rcrb shrl jnp (bad) dec lods dec lods (bad) mov fiadd inc sahf push add popa arpl mov or mov stc shlb rolb loope in or cmp movl xor mov jecxz xchg pop mov inc mov mov sbb aam shlb cltd movsb dec int3 sti test xchg frstor pop in jae or fidivl je sbbl pop jge mov jb into jg sub add inc rolb xchg into mov (bad) xor xchg cltd scas (bad) cmp push loope (bad) testl push cmpsl pop fnstenv inc push outsb lea push aad add mov cmp (bad) test fcmovu bound pushf adc inc cmpsb gs add (bad) mov dec mov or xchg (bad) pop enter mov jbe xor xorb push lods push cli vpcmpeqd sub mov xchg fldcw inc int pusha jb mov aad mov (bad) daa divl popf jbe mov cmp (bad) stos ficompl cmp scas rcr aam fcomps cld mov aas into popf inc leave fstpl sbb jno add xchg mov (bad) (bad) cmp xchg stc es pop cmc cwtl jmp pop mov lods loopne lock add push pop insl (bad) adc cmp in dec adc push mov jbe jmp sti outsl mov mov decb mov sti xchg xchg mov cmp jne aaa (bad) fbld jmp mov push loopne loope and mov mov inc mov insb add (bad) xchg jno adc test push xchg (bad) out shl js jns daa fistl pop mov mov or push lods into inc fisttpl and ss jg cmp (bad) mov clc js test call rcl mov or xchg dec xchg push cmpsl push fsubrs xor push iret scas inc lock dec outsb mov (bad) (bad) mov ljmp xor jge push addr16 fucomi xchg (bad) call scas cmovge mov rcl mov cli jo push dec shl les in cmc cmp aaa test push (bad) jb inc sbb mov addb into sbb and sbb sbb cli imul adcl sbb xchg cltd sti sarb out ds (bad) ljmp jns lods out into stos jle std pop cmp ds jg push out lcall stc test fist inc cmpsl or push cld lret (bad) adc fdivr push aas xor popf fidivrl jb lret lods test mov mov adc pop jg jle sub lods lods test xchg nop jno pop xchg mov (bad) pop ja xor adc adc push mov outsb mov clc (bad) lock es xchg in or outsl mov jb and push inc rcrl xchg pushf hlt (bad) xlat sub lods stc cld insb cmp shl dec jle lea mov or xchg cld aam and rcrb out push or mov push in and inc xchg ret sub repnz int rcr dec push mov mov sbb dec sub bound lret addr16 pop outsl mov fucomip dec outsl cwtl pop pop inc cmp mov sub mov psubq int push cmp inc popf adc divb dec mov in push xor sbb cmp jp leave adc mov pop mov push cmp sti dec sbb inc cltd xchg dec inc (bad) fcoml cmp clc rcrl add test mov fnstsw jnp and je push push add lds (bad) push mov fisubr push cltd rcl pop dec jle inc iret insl cmp stos mov inc mov fcmove aaa idivb loop add lcall (bad) sub ret cld not cli cmp jle push aas push jmp xor mov stc and mov (bad) mov sub repnz and arpl imul subl dec cld out mov mov xchg cltd mov or jp iret int push add in pop lahf jmp lcall sub sub movsl stc xor daa popa cmp ret sti bound xor push popf mul pop add jns push fcomi jle cmp aad iret mov loopne sbb (bad) sbb std ljmp adc mov addr16 nopl in sub dec test jne (bad) icebp mov pop shr sub mov or int stos sbb aaa jne jg xlat (bad) leave push mov adc lods jle repnz repz mov sbb push cltd push push mov movsl inc xchg add inc sbb xchg insl push out mov test add jb sub (bad) or (bad) fiaddl and mov roll xchg addr16 incb push pop pop mov pop fildll mov hlt sub cmp jns and jge add test arpl (bad) (bad) jbe iret pop mov jecxz sub lods jp push addr16 push loopne loop fs adc cwtl add sbb push push data16 call mov mov xor adc sbb jmp mov sbb sahf adc jne xchg aas sub add inc icebp xchg pop mov icebp (bad) dec (bad) sahf push jae xor mov (bad) lret and inc or inc movsl roll lods fwait (bad) fmul push sub (bad) (bad) mov jg sti js pop addr16 mov push jno adc in inc movsl daa mov mov push les insl lea push pop ds inc adc jecxz jmp std orps shrl jle mov xchg jle aad push and cmpsl inc cli jp mov xchg das sar arpl pop subl push push (bad) bound pop lahf xorl or and push dec mov js notl and add inc xor dec dec pop lahf lock sbb and scas iret xor popf mov mov popf mov pop xor ja sbb sub in mov fwait in outsb xchg jl cmpsb xchg xchg cwtl call lcall popa xchg mov add movsl test cmpsl lahf (bad) mov rol aas loopne sub mov pop jbe jge and (bad) mov popf addr16 add inc inc sbb or dec (bad) xlat push xor dec imul inc pop cmp jp cmpsb sarl icebp mov lock shl sbb jae xor xchg mov push and adc lret adc mov call sub sbb dec out mov std mov aas jo (bad) sahf cmc jge (bad) xchg sub es cltd aas cmp fistpll xor mov mov sbb cltd push or push mov inc xchg lret jno pop cmp stc out (bad) clc std fistpl (bad) (bad) das aaa jae push dec (bad) xor call or mov clc loop mov push jmp daa mov mov (bad) scas fwait push pop testl pop cli mov in or fs daa fsubr pushf shrl mov (bad) xchg pop mov ds sahf xchg out repz sub sbb lahf call mov mov pop and pop data16 add hlt adc stos push stos pop dec pop and cltd cmp clc dec ja adc (bad) icebp mov ss loop out fsubr (bad) fs cwtl hlt sub pushf fs repnz dec pop in cld or inc xchg adc inc andl aaa mov adc mov xchg or lret shr mov push es and cli lock inc lods mov jmp xchg stos xlat inc jecxz sub mov into push or adc sahf fstpt stos enter mov mov ficomp gs leave mov adc inc jo (bad) jbe in mov scas (bad) (bad) bound sbb cmp sti inc rol iret mov pop cmpsb std movsb jmp repz mov mov hlt cmp mov xor aad inc mov xlat mov push test pop data16 cld cmc (bad) and push push xchg fsubrs lret arpl data16 scas js dec mov sahf mov hlt ss and (bad) int3 ja mov mov cmp (bad) xor rcrl pop pop mov inc mov dec jmp pop pop mov cmpsb inc cmp out aas fdivrl jl mov mov jmp in (bad) arpl imul sbb xchg adc loop dec out dec out and mov outsl pop scas mov sarb sti cmp push rcrl lahf in outsb jbe daa iret in in mov cmp pop jbe rcr cmp divb mov pop jae shrl int add mov mov faddl mov lea add je xlat mov inc out add xchg enter xchg (bad) xchg push mov daa jnp mov pop pusha (bad) bound test xor mov sbbb add movsb das (bad) insl sbb push and xor push inc push adc sub (bad) jno loopne mov aaa and xchg mov pop sbb addr16 jge xchg dec xor mov in movl push sbb xchg sbb dec push sarb iret or push loopne xchg std lret sub outsl push pop and mov cmp jbe call pop into pop outsl in lods mov mov test pop push (bad) mov mov (bad) mov xor xor fwait inc addb test (bad) les dec pop inc cld jl mov into xlat push mov xchg dec loope out lcall sbb adc sti push aaa call mov sbbl les mov out leave xor xlat inc js out jb psllw int aas scas xchg fildll les (bad) sbb push rcl xor (bad) aam iret mov xchg stc mov mov or mov lods xchg mov outsb hlt sub mov outsl cmpsl xchg icebp pop aas pop repz push mov inc inc (bad) insb pop mov lret and sbb mov cltd outsb and enter gs lret ds (bad) jbe loope inc add scas lods dec push (bad) lret jb insb bound push leave push inc ret push (bad) jnp insl dec jb in hlt iret outsb sti loop iret push jge stos fucomp inc mov jo ret jp cmp xchg cld out mov jmp xlat pop jno and idivb xlat sbb adc inc push add add push pop daa xor scas pop sahf add xlat sti fidivr arpl (bad) jg (bad) jae xchg and xchg push (bad) fldl2t sahf es xor pop xchg xchg add cmp mov push xchg push data16 dec add clc and (bad) lahf ret sahf dec lock rorl leave das push popa mov clc movsl xchg push adc loopne popl loope jg into out es cs lods (bad) mov push movsl mov jbe popa mov add mov push mov adc xlat mov fstpt inc enter jns loop es and test inc xchg inc bound xchg test mov movsb (bad) push mov imul addr16 in enter mov jbe mov js mov pop rcr xor jbe mov xor aam mov (bad) mov test scas in iret nop pop stos out ljmp or add test je dec (bad) psllw and insl clc mov mov dec mov fcompl xchg ret fs enter add in data16 sub inc int sub inc insl jge pop ja cmp mov push fcmovu sub lods popf (bad) (bad) push xchg mov push and lods jo add ja fsubrl arpl cmp cmp ret jmp push bound lods es pop pop stos dec fidiv mov jo mov test shll mov jbe push call and jb inc add cmp imul mov in pop lret mov cmp std cmp stc mov xchg jae loopne lcall add or sahf (bad) xor (bad) jge leave cltd out push insl inc (bad) movsl push lahf mov out lcall repnz ljmp jg out mov std mov das mov cmp push jmp push mov or mov daa insb add (bad) jno lcall xor cmp ret mov sbb add rolb in lcall nop inc xor mov shrb add push test imul out (bad) ss (bad) xor aad mov push pop popa mov daa mov or inc xchg jmp sahf lods bound sbb ret jp lret pop xor xlat scas pop fnstcw out pop mov sbb ret int pushf cwtl and stos fs in push jl or mov lcall pop stos clc mov mov xchg lods push push lret push xor xchg insb xor xchg cmp mov mov ds out push xor mov gs sbb in xor les sarl jg sbb cmp inc sub xchg popf sbb dec (bad) or scas (bad) jo call jb,pt aas or jecxz sarl arpl aam mov int sarb jnp push inc ja mov fsubrp rcr cmc (bad) call nop pop push push out pop add jno in push cmp pusha popf mov dec push pop xchg cwtd pop dec mov sub jecxz lret adc lock adc mov mov daa hlt mov in xor loope pop xchg sub mov and out lcall in nop jle cld aas xor dec int pop sbb mov cld mov imul fstl inc pop call and add cli (bad) movsl sbb mov jmp cmovs inc or lahf les or sbb jo fmul rolb dec pop sbb mov mov fldcw std es loope dec dec sbb inc jl movsl ret push jecxz inc inc sub stos and (bad) notl ja cmp lods mov bound sahf or push in jnp sbb inc sarl xchg cs push out (bad) lret icebp mov pusha stc call cltd outsb popa (bad) lret sahf push pop xchg iret pop mov call enter pop cmpl or pop iret jmp jecxz sbb dec bound mov (bad) push lods xchg ret push (bad) loope jmp pop xor mov or lret push dec xchg sub mov mov mov ret in pusha add xlat (bad) movsb inc xchg push fwait xor inc movsl arpl jnp mov mov pop dec mov mov xchg dec xchg inc or fsubrp add or into jecxz jle sbb xorl fcmovnbe enter dec insb scas or jp cs dec dec in cmp sahf mov mov pop insl push mov jne lret dec pushf es test add fs cmp dec inc mov jns rorl and dec (bad) loope xchg gs outsl repz insl (bad) (bad) pcmpgtw xor mov incl call cmpl ja stc mov popf cmc fwait aad push jbe ja push jg ss icebp addl cmp inc xor or dec call mov pop dec out sbb mov sbb or fwait push mov xchg cmpsl fucomp aam (bad) stc jae mov out shrl add cmp or or lcall (bad) enter cmp push repz xor and (bad) (bad) mov clc in repz jns out xor mov out movsl inc scas jbe inc scas sub push mov xchg out mov pop sahf cld ja cmp sbb xor fidivr (bad) push jne or sbb mov stos inc mov popl lods xchg mov aam pop lods fdivrl xchg sbb inc mov add aaa incb sbb jg std jmp jg aam push sub mov int in iret inc repz jbe cmc fisubl lods int3 sbb int3 fldln2 sbb sub inc xchg in cmpsb iret cmp push (bad) jne aam add hlt movsb in fdivr (bad) jp fcomps aaa out scas aas outsb int3 inc insl push mov xchg scas jbe mov xlat test in lea ret mov gs mov jl mov sbb popa cmp ds ret rcrb loop xchg inc mov xchg mov cld mov sub aam fdivl mov outsb jmp stos cld sbb mov std push (bad) (bad) fisttpl mov out dec icebp jno push data16 ds pop insl sub mov les adc loope (bad) rolb add xchg jmp mov sbb xor pop fwait mov cltd xor inc fisub xchg cmpsl pop jno in xchg push push push jg push lahf sti in mov lea add cwtl pop fcomps mov popf mov xor pop popf cmpsb bound (bad) ds mov ds outsl push push scas aas jle sti neg (bad) imull mov jbe inc lcall inc fcmovnbe jmp loop jnp cli div cmpsl pop loop lahf call insl dec push mov sti inc sbb in sbb addr16 jg dec call nop sub jmp fmuls movsl mov int3 or xchg xor lea mov inc mov mov inc imul fldt adc xor mov cmp sbbl jmp outsl out pop lea dec lea push jp inc es fs and xchg push outsb sbb int mov mov inc or pop lahf push jae mov pushf xor pop jae (bad) call outsb (bad) mov (bad) lods in inc push push (bad) frstor mov daa insb sbb popf dec fwait mov mov dec mov lcall cmp pop sbb sbb jecxz or ss jne out repnz cmpsb jns ljmp (bad) negb fucomip out mov test punpckhdq das lcall cli (bad) in and mov cwtl inc enter (bad) sbb rclb push or cmpsl xor cmp movl sbbl pusha flds mov lods in lods mov test xor iret movsl repz ds cli icebp sarb cmc out out mov mov outsb repnz pop out mov loop inc or xchg mov scas jne or push arpl into add xchg (bad) sub les push lret mov push and xor das jecxz mov cmp pop cmp iret xlat (bad) clc (bad) (bad) jp sbb inc sbb pushf mov cmp cmc lahf (bad) popf (bad) cmc psllw das in add dec arpl (bad) (bad) jecxz jno (bad) addr16 aad jg das ficomp lcall outsl cmp lcall mov int3 gs dec jae jo,pt add add xchg mov es jne jne mov sti fs mov cmp dec inc sub (bad) stos pop mov movsb sti daa xlat fstpl test inc add fwait jnp mov mov push data16 xor dec int3 mov cmp shlb gs adc int3 fcoml jge movsl xchg cltd hlt sub jbe xor movsb jecxz and pop test mov mov rolb scas cmp xor jmp adc jbe add pusha addb cmp cmc dec scas roll (bad) out cld lock les lahf (bad) imul fild or out jo sbb in outsb outsl (bad) (bad) aam jmp xchg stos dec lods and addl mov xor dec in push test inc push out cmpsb pop popa ret ss xchg dec xlat inc fidiv faddl mov mov xlat adc int push xchg jne lret cli push sbb ds imul cmc icebp pushf jg es imul arpl mov fsubrs jl dec mov dec cwtl cltd test ss (bad) xchg call mov out dec jecxz int dec xchg (bad) xcrypt-cbc cmpsl rcl ret cmpsl jmp pop pop ds cmc jg (bad) cmc dec clc daa mov inc jae shll test frstor clc test fcomip stos jg jg push cli xchg aas lds pop (bad) outsb sbb sarb popf dec fdivr add int3 lods mov in cmp lds in xor (bad) cmpsl arpl pop mov and ret dec sub scas adc mov into in push aad nop fldl stos cwtl adc jne pop daa fwait fwait mov es xchg add or mov jp in popf cli test cmp jbe fwait je mov push xlat sub inc xchg jnp pop ret fld pop int push pop add hlt push xor cmpsl jmp outsb cwtl subb (bad) sbb lock sahf adc (bad) mov shrl pop cld movsb mov outsl dec rolb sub lods adc roll into lds ljmp das pop adc js sbb shl or and pop loope or mov inc sbb loop cltd jge mov dec cmc movsl fidivr mov adc mov stc jle aaa cmp cmc sub mov int3 inc cwtl jno or shll movsl loope push or ret in xchg adc cmp pop xchg push push sahf aas ss jmp sahf sbb xor inc in xchg aas out xlat fnop fdivrl lahf mov arpl jl lret lock mov ret lock jns jecxz pushf push and mov cmpsb cmp jp lods add inc pop inc jo push outsb sub (bad) jb dec push gs mov jecxz je xor cld jno repnz ja cld jmp pop jno add push mov test xchg pop push xchg scas call sar dec push mov cmc xor inc xchg rclb in push pushf sub dec scas loopnew push jg pop mov mov mov push sub add mov lds (bad) mov lret add addr16 mov pop mov mov dec ss mov fstpt xchg push sbbl pop mov lret push packssdw push cwtl pop out xor push negl mov lcall inc and sub inc fisubrl push xchg inc mov mov mov adc int3 jnp leave push rcrb jnp cld and add sarl pushf daa loop inc into push fldl stos movsl xchg or pop mov popa subl sub popf jp mov dec dec push test fnstcw jo out or (bad) ljmp add fs jae jg mov dec stc movsl fnstsw das jmp call jg sarb ja int3 int daa dec pop and lret icebp jne xlat sub cmp enter iret (bad) add stos rorb or inc sarl mov lea scas jne fiadd or loopne or pop outsb lds jge aam mov test cs negl in sbb repz or loop xchg adc scas fstpl jbe mov or jge in xchg insb fwait aad (bad) xchg mov mov cltd pop push repz in loope (bad) repz clc in pop (bad) stc mov cld sbb movsb rcll incl decl pop cld repz (bad) in sbb adc jnp jnp (bad) lock sarb imul jnp inc sahf fnstsw push pop push pop rorb popf (bad) in ret aaa xor dec clc xchg inc out jno addr16 mov es xchg icebp sub inc jno or cltd lahf sub popa sbb dec push mov inc jge jne sahf movsl xchg jecxz or enter push sbb mov jns ss sub lds dec lods push das pop xchg inc dec and pop mov mov pop mov pop push ja stos lods mov in popa adc into enter jbe je fmulp or add movups ret adc int xor ljmp adc pop in gs sarb int3 scas push jno xchg jmp sub sub and xchg and fstpt mov aad movsl cmp out arpl gs mov cmc rol pop add dec cwtl (bad) xor js (bad) enter jge (bad) jb stos lea adc data16 jle mov js xor bound xor lret mov pop jnp movsl xchg push cli xchg sub mov loop jecxz enter shll cld bnd div jae push xor pmulhuw mov mov lods mov cld mov sbb fwait cmp inc pop shll popa sub push (bad) out shll stc pop scas xor jbe fld1 mov inc adc shrl xchg mov das mov jg mov roll je mov push shrl mov sbb into mov xor cmp ret jecxz ss lods (bad) xor add mov mov fcmovb pop xchg mov scas mov test das aad pop add sub pop aad stos push cmp mov inc xchg test xchg mov mov xor test mov ja jp jmp aam mul in and xchg pop cwtl icebp dec or mov mov fsts rcrl inc mov repz aaa or mov sbb imul lcall (bad) push push mov pop cltd mov (bad) mov pop inc cmpsb mov mov insb add and cmp inc ljmp repz inc stc xchg xchg lea popa mov cld (bad) fsub sub xchg gs fwait notb jg (bad) iret in divb dec lcall sub mov push cltd loopne jbe lock fdivp dec (bad) or adc (bad) lret sub sarl jb movsl les jg or inc test idivl pusha popa add adc sarl mov xchg loope je mov ret cmp inc std jbe mov std pushf loop adc sub popa mov xchg mov mov popa pmulhuw cmp pop xchg pop jne (bad) dec rolb sub xor sbb jge,pt std clc icebp lret sub fwait cmpsb jl in pop add and sub incl pop fdivr pop pop (bad) pop (bad) (bad) pop cld ret outsl cld ret adc xchg push aad fdivrs insb (bad) aaa xchg fidiv ds jnp jp out inc fs repz cs insl stos fwait int3 xor jnp jp xor pop mov inc loop lahf pop jns popf lcall mov xchg fdivrl dec dec mov lahf imul lahf mov scas sub mov jne scas arpl sub xor mov test pop mov sub pop lds in xor mov jae test inc push xchg jns xchg (bad) nop out mov into lcall cld jno pop xchg fidiv arpl cltd cltd push cmp test rcl mov push mov pushf addr16 mov push stos mov sub mov lea movsb mov pop cmp std xorb fildl add or pop jl sub lret ljmp fistp stos repnz xchg mov mov fcmovnb and outsb lcall sarl xor lods loope dec mov add cs mov add mov aam xchg lret mov sub inc gs pop xchg sbb mov outsb int test into jmp out mov in pop mov xchg imul out and sbb mov inc lods mov pop clc mov loope add mov das inc fiadd pusha and xor iret faddl push jnp icebp jecxz (bad) mov scas (bad) idivl pop aas push in mov jl clc aaa xchg cld fldl push pushf jg in js pop sbb sbb movsb push jge int aam test icebp outsb pop imul jb cmpsl mov int3 call sbb sub dec lret ss mov ffreep lock scas xor lock pop icebp js leave mov fwait movsl fs xchg push inc outsl adc adc pop dec and adc gs cs or cmpsl imul sbb repz add fisubrl jne inc in dec cwtl and jns iret jecxz or and and jns xchg shll rcrb and (bad) repz fimull cmp mov test sbb sbb jne mov cmp nop fistl ret xchg loop mov ret xchg xchg pop fst repnz cltd xchg sub sarl pop pusha clc (bad) cmp cmc mov out mov leave shrb repz xchg mov sbb ret ss push pop test or in in jl inc jbe cmp in push rcrb pop ljmp in test adc or pop jbe cmp xchg test xchg stos pop and pop imul adc jns mov outsl out mov hlt sub mov jb test nop stos cld int3 fs inc das mov or cs push arpl add push dec das xchg shrl ljmp repnz out push xchg stos mov rclb cld out ret stc int jg into out scas cli stos mov or pop mov xchg es pop les cmpsb lock xorb jl inc sub pop cmp loop repnz and movsl scas (bad) push mov testb lahf jb mov jmp pop vhsubpd icebp rcl dec adc out push xchg jns out xchg mov ret pop pcmpeqw inc adc int jae mov sbb outsl repz (bad) leave sub push in and add or aas mov or jae,pn addr16 ret fidivrl jecxz push inc xor push mov sbb push cwtl mov adc movsl adc daa imul out jae jp stos jnp iret pusha jle loopne in pop push ret cmp fimul (bad) sbb fildll lret jbe mov jns add sbb sub loop (bad) mov repz aas jbe test xorl mov js out adc add push negl push lea mov jne pop pop aad mov add lcall gs cltd jecxz stos xchg sub ja mov lock lea stc mov mov mov sub and mull and les adc add inc and push push mov imul std cmp jne out divl sub mov push mov jg in stos xchg scas loope xchg sub sbb out out mov scas jge and cltd or xchg push mov sbb popa pusha movsb mov fildl insb (bad) push pop (bad) cli and and pop push imul fdivrs das push mov sub jecxz int3 repnz ret sbb int xor and push cmpsb mov xor add loopne xchg rcr aam push insb hlt mov mov and xchg mov add iret (bad) adc sub mov test jmp mov push mov mov dec jns jns sbb insb adc (bad) pop adc fnop test add dec frstor dec dec rolb or jns loopne mov jbe add arpl nop xor push adc and pop shrb add sub pop mov hlt imul stos xchg mov mov mov inc xchg aas xchg loopne rcrb mov pop xchg pushf pusha sub out sub aam test inc xchg popf imull cmp push push dec (bad) xor pop mov int jne jbe jmp fildl negb mov ds inc insb cmp inc mov out (bad) adc in and or or pusha and rol mov les mov imulb ljmp cmp xchg hlt pop in fist out jne aaa int jno test dec cmpsb cmp sub fiadd ficomp mov inc js test shl sub mov ficoml push sahf sub push cltd sahf cmpsl inc adc inc call mov push mov lret aam mov jge in (bad) out mov add clc lods add int insb xchg xchg and and shrl mov dec mov xchg push xorl mov or jno clc xor mov inc mov out push jg (bad) (bad) leave adc mov in shlb xchg stos mov or cmpsl call scas ret lods ljmp pop push xor cmpsl fmull xchg jo adc inc xchg dec popf or fdivrl sub inc movsb rcr or insl cmp inc sahf xchg arpl jb push dec hlt push aam jno pop jecxz sahf nop push mov lds stos test mov insb dec lret fsubrl and mov insl xchg (bad) js ss out ss cli repnz xchg fdivrs pop xchg das cmp cmp movsb std mov (bad) pop xor lds jae bound lods mov xchg lret cmpsl outsl in ja,pt aam and cmpsb lcall imul int fs out imul cmc jmp imul and fs test daa fstpt call lret daa push pushf out xchg loope icebp push scas lcall test and or test xchg mov jp rolb lock (bad) repnz jle jecxz fst fwait aad fdivrl dec pusha scas clc mov push sbb (bad) mov insl test pushf call sub mov lock iret cmc mov inc nop sbb aad (bad) inc pop fwait inc gs mov addl and inc dec sbb imul mov mov or push push icebp shrl sub mov ljmp and lods call cmp imulb dec ds sahf pop mov loope loopne sbb lcall xchg lods fmuls jle dec test and adc test jle movsl jns lds lret and sbb xor inc loop pusha push movsb wbinvd xor lret sub jno adc xchg movsb mov jmp gs ss ss rol mov xor mov mov or and xchg mov out stos pop mov and jle xchg loope sub pop in pushf movsb push stos jp stos movl mov jl xor mov fidiv les aam ret es js fwait lahf mov movsl mov insl (bad) icebp add pusha sahf dec mov pop nop aam ss cmp mov adc nop (bad) lret add dec cmpsb mov push mov ss das mov stc push aas jge mov sti (bad) cmpsl not loope out xchg mov les xor mov js fcomps inc scas and int xchg xor cwtl xchg ret pop les sbbl lret in fst jmp cmp cmp js stc and popa imul xchg cwtl cmp or mov dec mov divl sbb add jo (bad) leave adc cmpl pop cmp test cmp xchg (bad) pop ljmp mov mov cmp popf int das push stos das sbb (bad) mov xchg sbb hlt mov adc lret in pop out mov adc xor lods scas jns lock test adc mov jl nop mov popa xchg sbb in sbb mov clc fwait pop pop gs xchg cmpsb sbb xchg scas mov popf pop insl pop ret dec dec jb fcomps fimull mov fs or lea lock outsb jbe outsb lahf jle lcall inc jb sub (bad) rcll sti mov fmulp xor cli adc pop enter sahf (bad) repnz out pop or pop pop jbe xchg cmpsb push shrl cli scas mov add movsl xchg subl inc scas adc in jg aad pop cli cmp (bad) insb rolb out jnp hlt push mov push push (bad) mov ret jbe jmp or out mov imul inc rcll pop test dec jge mov clc dec outsl mov ja (bad) jne cld push fstp jp pushf es int3 aam leave test lods mov mov outsl movsl idivb aaa cmp clc pop ret jne into adc icebp fbld lea jg mov (bad) fidivrl out mov mov loop or sub dec int push push sub inc sub xlat cmc inc xor add jae push fnstcw out adc inc repz adc pop aaa in imul mov sahf (bad) leave adc jnp lock jge call mov pop cmp stc divb pop mov shll addr16 xor cld movsl loope je stos sbb pop sbb adc add push adc and in xorl ds mov ljmp adc mov (bad) cmp inc icebp and sub jmp scas lret mov stos pop (bad) mov fildl jmp subl push xchg dec xchg lods xchg dec gs lods clc loope inc xor iret sbb neg movsl fnstcw lea aaa jge pop xor (bad) icebp iret lock mov (bad) ret pop mov or inc jmp rclb movsb jl jmp fs call mov xchg mov push mov mov pop lcall xchg data16 dec jne stos loopne or and jg mov jle bnd jae pop (bad) push adc mov outsb pusha mov mov repz or (bad) cmp in jae fldt xlat fldcw mov decb es push push movsb xchg mov sbb sub push scas inc mov int idivl mov mov stos xor popa mov das and ficom fadd repz into push adc loopne (bad) (bad) int push scas sub cwtl mov ljmp push inc das mov xor arpl xchg popf pop out leave mov xchg mov jnp sbb lret leave arpl cwtl and xchg adc jge out out aam lock or cmp call lret aaa mov pop dec or aaa popf test sub int (bad) ret xlat jecxz int3 and enter repnz xchg add cltd xor mov push ficom xor sbb inc clc sbbl mov and je pop shl push aaa loopne scas fisubl cmpsl mov fiadd (bad) lret sbb inc test mov jl test sahf jmp aaa mov int3 pop sbb fdivl jmp fistpl jl cmp (bad) outsb and xor call inc mov pop std into in loope pop dec mov sub push popf shr mov push fstl xchg sbb xchg push in (bad) mov repz and aas sbb iret and sbb lret lock ss out mov mov sbb jnp xchg jge jne pop inc jns adc adc push pop dec xchg xor into add or ror lock test leave stos mov sbb mov mov push stos push lods xchg jl xor jle pop insb scas xchg (bad) sbb ja ss push fcompl addr16 push adc mov add push pushf push jo inc xchg fcompl dec fisttpll push fcmovnu fsub (bad) cmp mov cmpsb insl adc pop sbb dec cmpsb cmpsl test lahf outsl clc movsb icebp cmpsb cltd mov jne pop push outsl and movb pushf jae inc cmp insb and push call mov mov sar cmpsl or imul jg push notl fwait pop into push pop shlb sbb mov (bad) cmpsb sub mov mov dec lcall in mov aad imul push les push gs push add out aas xchg mov pcmpgtw ret stos insl push insb xchg push (bad) dec push ja fcmovnb sti xor stos push in dec sub into xor (bad) dec aaa add ret jnp addr16 xor data16 cmp (bad) gs imul fwait outsl (bad) out push mov out lahf dec not outsl sahf inc mov push xchg mov add repz (bad) outsl cmp jb sbb pusha jns rcrb and sarl fildl jae or (bad) xor xlat out fs shrl adcl jmp int3 xor sub push push cmp pop xor lea or fist pop pop loop adc adc fs or mov insl fild into cmpsl out add inc xorb daa pop (bad) jge ljmp jecxz adc dec lods faddl loopne mov mov js mov std or arpl mov outsb inc (bad) mov inc mov dec aaa xor add lock ret out jle in push fidiv sbb gs and int3 syscall cmp loopne test popf jne push aam xchg mov pop pop xor mov push in movsb dec inc and mov enter mov repnz sub jno pop jecxz push mov (bad) vsqrtps lahf adc dec fs jmp push dec xchg into imul movb cmpsb bound jmp js arpl fcmovnbe cmc mov test in sbb push jo loopne cmovle icebp ror jno dec ficompl je insb std push outsl push iret (bad) xchg or mov repnz push hlt popa flds jne mov xchg data16 sbb dec cmc and test test pop adc je scas test jle or mov jmp inc data16 add adc daa std movsl xchg dec adcb insl cli adc and inc cmp adc nop lds mulb in aad push lret test cmp pop call jo lods cld negl add inc aaa cmp cmpsb inc and bound sti lret test push adc rol in xchg pop sub sub stc sti and ror push jle mov mov mov xor lock inc movsl outsb addr16 cmp mov ds push xchg repnz adc push dec sub ss lock lods cmp inc dec out xlat movsl fcmovnbe push mov push cmp inc lret cli pop aam xchg pop or fdivs fucom xorl cli mov mov xor jbe fs adc js pushf and insl dec pop cli je scas out sub add and ljmp push in outsl xor pushf cli (bad) mov push mov pop pop jnp jnp pop and rcl xchg cmpsb mov sbb add sbb mov stos repnz fnstsw aad jae popf mov xchg sub rcll cmpsl mov mov enter out cld ljmp xchg cmpsl (bad) fbstp lods sub out or jle mov mov adc test test push je cs mov lods mov mov cmp mov aam shrb fstpl mov fs ds (bad) sub mov lea clc add iret (bad) stc mov push popa out arpl test mov cs sbb jno inc insl movsl scas cmpsl ljmp adc test subl mov sub push and scas pop cmp xchg adc daa push sbb mov mov cwtl xor sbb out add inc sub sub xchg add mov inc imul push pop popa push mov jae and mov aaa xchg push jae mov xchg stos lret rolb popf ja mov push cwtl in xchg push and lods mov ss mov mov mov cmpsl jnp,pt and outsl ds push bound cmpsl fldt fmull repz mov sbb lock movsl mov dec and mov (bad) or dec add and cmp inc leave inc call jmp pushf mov push notb (bad) out jge dec loope mov inc inc fadds pop xchg jne cmc push insl mov notl and pop roll fwait push fnop in daa daa push pushf jno and cltd xchg movd push pop ret out push push xor ret jne pushf cmpsb and xchg enter push in mov push sahf adc movsb jns fimull pop mov xor xchg push lret mov pop in dec gs cmc std (bad) das ss mov std inc dec testl lds push lds push (bad) ds pop inc push mov xchg imul in jae aas (bad) jle mov dec pop cmp movsl mov cli xor (bad) rcrb lea pusha mov adc pop scas or pop dec adc xchg or sbb icebp sbb push mov add and xchg loope add or pop xchg int3 cltd nop push popa insl jl fnstcw sahf sbb sbb push scas sub jecxz jecxz arpl (bad) dec mov ss mov pop push inc cmp lret dec insl jne push test movsb scas ds and xor aad push (bad) neg lcall jecxz (bad) insb pushl imull push xchg cmp loope dec mov cmp shl and mov loope mov bound cs inc jmp je sti and xchg pushf divl cmp out adc ds mov xchg fimull fs call hlt (bad) pandn add adc xor movsb or fbld dec mov movsl fwait out jp dec aad push insb or mov sbb cmp hlt adc mov mov addr16 push ds mov push xor xor loopne xchg jge mov js cli sbb mov movsb rcll test scas xlat push popf jp or dec pop out xchg vmulpd lds cmp mov or aas cmp jbe jmp pop mov push mov jo loop inc cmp aad cmp rorl jg fiaddl test imul xor loop pop test int imul (bad) int3 mov push movsb fincstp mov in adc stos ret pop cs sub pop jl shr mov icebp push movb insl mov js mov pushf xchg andb push jb dec cld xchg and xchg ffreep shll sbb andl std push clc movsl in popa hlt inc roll lret gs mov push outsb and jae leave mov inc jmp inc add adc cmp repz cltd xchg add push and lret aas (bad) (bad) xlat lret xchg outsl sub btc mulb jg xchg pop pop hlt adc and pop lcall push mov je gs pop pop inc es fwait mov sbb loope aam push imul mov daa test cmp push sahf sbb lcall mov inc and jl and add jl jbe inc xchg (bad) sti adc cmp mov popf in xchg push mov xchg in std mov imul and clc xor ds cwtl jnp loopne ds mov jno bound add es mov push imul jmp sub lahf cmp mov xor in xor iret cmp out pop and movsb stos inc fidivrl jmp and xchg mov sub loop mov push cmp cli pop stos jge out or xchg and push enter iret mov imul sub dec ret mov sbb outsb add jb bound rorl bound xor je in push mov cmp lock sbb lret mov sub sub daa cmp or or push insl (bad) mov cld push out mov int3 pop sub sub cmp and jbe mov jg jecxz movsl cmp insl divb xchg jno xchg jns xchg sub rorl std sub jle repz (bad) arpl hlt nop push fdivr xor repnz lret in iret mov imul (bad) jmp mov ret addr16 mov cwtl faddl sbb in jl (bad) ja rol out add divl jp mov rcl xchg lods cmp xlat add outsb push xor icebp and lret (bad) dec pop outsb mov or pushf out std cli mov repnz push mov mov stos xor sbb sbb (bad) cs (bad) nop out dec aam mov (bad) ficoml lret test xor movsl scas add scas dec mov push jl inc jg stc and sub js das outsb mov dec push push and mov pop mov jecxz ret mov popf aas pop (bad) adc cmpsl dec icebp pusha add js (bad) arpl outsl inc sbb push mov mov fild xchg pop test leave aaa push mov push xchg xor les mov jo xchg xchg cs dec inc je xlat xor pop (bad) test mov pusha push in dec add adc fsubrs mov mov aad aaa aad dec cmpsb push jo and shrb es xchg shrb scas fisubl lahf jns add mov dec stos insb push inc repz leave cs or (bad) in scas popl cltd popf mov push sub mov xor jb and out data16 adc imul xchg sarl inc pop (bad) cltd pop jg lahf aas mov inc lock lret (bad) xor xchg scas dec test sub push jne lret mov xlat fcomp or inc mov mov nop pop xor sub cli popa lret push jmp es in cmpsb jecxz lret or or ret fwait sbb xor push xchg push cmp cltd sbb pop mov out pop enter inc in jge inc shl push push aam adc loop cmp sbb repnz push outsb (bad) dec imul pop scas add push jbe imul sub ret out jb push and lock push pop (bad) cld icebp adc sbb cs in pop fcmove (bad) cmp lahf (bad) (bad) mov pop xor in pop out in add mov repz subb add xchg jbe pop pushf lods clc add loope cmpsl dec stc sbb mov or cmp mov jns arpl sbb xchg jmp scas ja xchg cmp mov leave pop call pop repnz lds leave iret and adc fldcw orl je sub push add aam or aad aam out jbe in ds mov pop rcll xlat lods test (bad) jl jne ficoml push ss lret xchg mov pop or xchg lea aaa push cmp cld (bad) fdivrl dec out shrl in xchg cwtl or je hlt and xchg in xchg (bad) aas mov lahf test inc clc lock jmp (bad) jp ds and iret fdivl fisub sub leave stos je xchg pop imul adc sub mov jp loopne dec adc xor sbb dec je cmc sbbl (bad) divb test je push pop mov (bad) sbbb dec mov popa mov sti xchg xorb cmc fstpl test popa sbb insl repz int3 adc xchg scas je push cmpl push ss add mov mov xor rorl lret and bound pop call stc (bad) fmull popf pushw mov scas out jle popf (bad) cld popa lea xchg jns pop inc pop and cmpsb lea je mov insl adc xchg les xchg sahf adc clc (bad) dec test add mov inc sarl mov scas aaa loop or xor sbb sbb push sarl xchg or (bad) xor sub mov jp or test sbb shlb and out push aaa cmpsl out cli xchg (bad) mov movsb arpl pop adc movsl out stos mov pop pop repnz rolb aam cmp mov mov jne imul xchg loope iret aaa push adc scas xor pusha mov xchg cmp call xor in out jle das pop cld aas aas (bad) jg sti das hlt repnz clc neg (bad) std mov fsubrl movsl and xchg (bad) outsl adc stos adc aad pop arpl dec arpl jmp (bad) ja sub dec add jae xchg scas xchg mov sbb dec pop dec or (bad) pop (bad) mov or dec lahf pop in icebp leave fwait sahf shl out mov xchg sub aaa inc popa xchg xorl adc or push fcomip inc popa out fidivl (bad) push sbb aad sub mov mov sbb mov repz adc cmp popa ret mov or pop and jns bound imul js loope xchg std mov mov insb cld and insb popf adc mov popa jmp dec and in cmp gs loope sbbl fsubrl les add ret ret dec or imul mov dec sbb mov es cmpl ret es mov xlat add adc xchg in mov inc scas xchg or scas or in gs adc lods data16 xor add imul xlat rclb cmpsl inc out push inc mov js cmp cmp scas pop stos shll sahf negb mov fldt fyl2xp1 mulb ss mov (bad) pop cmp loopne popf pop sub pop mov mov cs stos lods mov sbb or fcmovbe jae stos cmp in or sbb ljmp inc cli dec cwtl decl insb ljmp cmc ja (bad) push jecxz pop stc mov stc jecxz mov mov (bad) adc adc dec ficom push lods mov stos movsl test jle inc mov mov jge mov or adc inc insb inc pop mov mov lret fwait cmp fwait lret inc ja in pop mov xorb fsubs sub jmp cmp sbb xchg lcall test mov and dec mov pop lds cmp and xchg int sbb dec js mov mov push xor enter pop (bad) loope imul sub jb xor mov out mov cltd mov mov cmp pop mov dec insb jecxz cmp or mov popf jmp gs test add loop sub push cmpsl xchg cmp jge inc outsl fnop jne mov mov sbb scas sbb jecxz push test mov les mov dec add es and jae sub mov pop out into mov mov aam mov jb imul in outsl push setg int adc add dec xor popf les jno int sahf mov lea inc dec mov aam int sub jecxz sub xchg lds add pushf pushf in xchg push std mov mov jecxz cmc (bad) mov jg jmp sbb scas mov aad lods and idivl and xchg pop and push cmp push or je mov hlt std and ss mov jl mov imull shll push sub rcll in (bad) sahf mov (bad) out (bad) pop mov loopne pusha cmp add cwtl sbbb pop and xchg add dec dec scas sar insb (bad) test movsl (bad) mov das lods jb push dec nop das pop mov and xchg test and dec (bad) gs adc adc adc mov push or insb lret test loopne lods fimul aaa fxch push cmp sub mov mov xor or ror cmp dec push jp (bad) cmc sub mov xor adc add xchg add test movsb mov sbb jg mov nop aaa mov ds ret push in xchg xor jne imul xchg dec push push dec or or cwtl and or (bad) test aam push cli rcll sub mov jl enter ret inc test and dec call push ljmp mov xchg ficompl repz or or ret xchg push lods jp in in aaa xchg inc or lods cwtl xchg loope push call xchg adc scas mov or pushf sbb movsb jnp xor mov push lahf jg fistpll jg sbb push pop sahf les xchg sub cmp cmp mov push xor xchg pop sbb int xchg xchg sahf push xor roll xor and ds inc pop ret aam add adc sub (bad) loopne rorb xchg insl xor jno (bad) stc popa push iret lcall shr imul in or mov callw push int cmp sbb movsl pushf jp ljmp xchg cmp jl or fxch push jbe hlt repnz mov mov sahf subl and bound jmp mov push iret xor mov push pop fst aaa xlat mov sbb mov cmp jb push test add mov daa stos dec mov or das hlt dec xor jno inc aas mov ja test rcr rorb mov rcl lahf pop test sti xchg mov lahf and push push test stos push push fistpl cmp aad (bad) icebp cmp or (bad) fldenv xor in aam sar (bad) push push cli orl cmp jmp jge mov mov sbb mov test sar adc lahf pop cmp movd pop and std and dec jmp xchg int sub pop lods in insb add lcall jb stos jge,pn jo pop adc sub pop in push mov mov test cmpl jle sahf mov (bad) js (bad) mov jg out les pushf inc add or loopne add xchg js stos es (bad) cmc insb pop lret (bad) int3 cmp inc cmp rsqrtps inc or pop inc add cltd jnp push imul loope or cmp cs out mov pop jle mov gs out cmpsb insb stos mov fucom jo inc inc ret in adc jbe pusha imul push mov (bad) into and push scas in lret mov and add mov mov leave push push and insb les int add jecxz ljmp les mov (bad) leave popf pop fmul ficompl xor cmp jl dec sbb mov add or cld (bad) pop lods dec cmp out jne add cmc add sbb ds cmp adc flds (bad) js mov gs scas in gs cmpsb mov jge jmp pop push sub insb push jp xchg shll xor imul push cmp inc repz les mov fbld lock pop out inc std and repnz iret jns fadds jp gs mov sbb or and inc mov push fwait xlat inc jae ss lahf mov or es mov and and and cltd cmpsb (bad) xchg aaa cwtl test out icebp jle,pn test push mov out sbb fsubrs (bad) lret iret dec mov (bad) clc and or stos nopl fiaddl jnp (bad) jbe mov nop rcrb jae scas push jne fdivp (bad) mov cmpsl sbb jae inc test pushf jo jo inc inc dec xorl dec or fmul arpl dec xor inc out pop insl lret jle aad push jae (bad) xchg mov imul sub adc mov cmp pop or dec xchg rorb xchg (bad) fs adc leave lret jp push xor mov sbb xchg xor and jb shll aas sbbl push pop js mov dec rcll jmp std jl ja mov ds cmpsl lds xchg pop stos rcl jae movb pop int3 inc or mov mov (bad) (bad) sbb mov cmp rcl mov (bad) (bad) mov add adc mov push popf mov mov add orb (bad) je xchg in jbe (bad) or sub test fidiv sbb jo mov and out addr16 sahf jge fincstp ds jecxz pop jge xchg pop mov xor push lods push dec and jle ljmp stos call jne pop push cmp xor lret sti mov icebp mov mov pop pusha movsb jnp adc xchg jl ret sbb jle test add pushf push xlat ljmp clc aam mov shrl hlt jnp cld xor xchg (bad) pop (bad) in insb push fwait mov add or cltd mov cmp sahf sbb in (bad) repnz mov mov adc jecxz mov xor ds adc or jb movsb ja jp and mov test push fmull jo xor sbb push jg mov in fs shrl std mov push shrl push push movsl lcall stos in inc ja jmp and jo mov nop nop adc sub ret jp in enter pop xchg xchg pop sbb cwtl cltd scas mov (bad) mov sti sarl jp mov jmp imul sahf in jns notb mov mov mov mov fnstcw cmp cmp and inc popa stc int3 add mov mov jae stos mov lods and mov aaa push push and int fldt push inc and mov jmp and push fs lret ljmp cli inc jmp out push mov mov sbb (bad) icebp (bad) les (bad) fisttpl insl xchg insl push outsl mov jb mov cmp push das xlat add xchg cmpsb imul std push insb das xlat sbb rorl cmpsl dec lcall adc test pop lcall sub (bad) hlt rorb hlt adc mov in xor push mov cld or adc daa xorl pusha les or lret lods mov popf fsubr sub ss push gs or cmp adc test in mov cmp and dec into lret pop insb lcall push int inc push mov jle rclb andw dec mov xor loopne xor arpl fs pop lret out popf lods jge xchg ja repnz lods fbstp lret fldcw mov inc and pop ss out add sbb pop and push pop xor insb test inc fwait or or dec add fs test jl or scas push dec aaa fwait out (bad) idiv sti sti xchg (bad) icebp jle mov mov add xchg jmp or js stc sbb in lea fsubs mov mov xor pop xchg out lea ficom cld or or out push push call adc movsb ret pop rcrb icebp dec sarl das lods (bad) in movsl xchg pop in xchg cltd outsb and pop test pop fsubrp insl outsl outsb iret decw scas xor inc enter cmp add mov jge lods pop xlat mov push icebp adc mov jbe insl jbe fucomip ljmp dec in push or ret bound addr16 (bad) insb fidivrl insl mov mov cs mov dec repz das imul andl sbbb inc xchg jb,pt call lahf jg jecxz leave clc dec xor sub (bad) in add xlat cmp sub je mov dec cmc cmp xchg ret pop cmc test dec jbe mov pop (bad) aas push in dec imul rorb add les fidiv xchg orl mov mov inc xlat repz mov out fwait xor movsb add add cwtl ds fcoml jns add push enter jge sub jmp cs lds popf fs jne push push xor (bad) lret shlb xchg push xor sub dec or cmp push cmp pop ljmp xor addr16 sbbl mov (bad) mov leave icebp mov divb push cmp scas mov or (bad) repnz int3 and fcmove push pop sbb je or and les iret push out int sti add jb lret (bad) loopne adc xchg out sub push nop add add push push fistp jo jnp (bad) lret aad adc push jne test scas push movsb repnz into sbb cmp ret dec mov incl ret sti (bad) in xchg mov out cmp pop mov mov vmwrite rcl cmpsl arpl dec aas std push mov and negb mov pop out idiv jbe jbe mov mov outsl bound loop bound push cmp fnop inc inc mov sub cmp lds movsb and int outsl ds in pop jl shrl insb cld loop cmp in cmpb (bad) jg jo (bad) xchg in inc inc pop push ljmp xchg pop jg jmp movsb inc mov adc fcompl iret pushf inc push aad cmp inc and inc mov lcall cmp add xchg or jle scas jne or (bad) adc cmc enter popf (bad) sti loope repnz mov mov stc iret out hlt sub jns push mov mov cmpsl sahf ds fnstenv pop add add imul dec pop jmp pop push scas pop dec aaa leave and fsts xor ret push scas xlat jb pop insb (bad) sarl fcomps aaa xlat mov jp fisubr mov jo xor mov insl mov faddl mov data16 stos xchg jecxz inc ret daa dec pop sbb negl scas sar dec ljmp stos aam or or insb xor cld mov xorb mov ja aaa lea scas xchg pop pop mov cmp aas jmp rep enter inc mov je cltd sub jge push pop mov fdivrs cmp xchg xchg xchg clc xlat aas repnz lcall mov les lret push jbe adc insl mov outsb ljmp and (bad) int3 imull mov sbb addl sbb adcl pop inc in add enter pop jnp add ja xor rclb adc imul mov cld shll hlt cld mov xor insb out movsl and mov jnp cmp dec in adc cmp pop mov push psllq aas daa adc xchg (bad) inc xchg negb fistp negb scas or repz xchg xor sahf pop (bad) in mov or jns imul cmp pop cltd mov leave cwtl dec adc mov test lods jae mov popa jp test rol mov movsb mov out sbb fwait (bad) rolb adc imul or fcoml pop outsb pop stos jle push out scas in adcl data16 sub jnp jg add mov je aam and sub sub mov or cmp push out jg lock push xchg cltd aas or inc mov push (bad) cmc (bad) mov push mov inc adc pop jnp enter xchg xchg test adcb sub in or pop jecxz xchg daa into lahf test ljmp repnz mov mov pop jo loop iret and shlb cld testb xchg add mov sti imul call push cmpsl inc cmp hlt push jnp fisubr popl sar push add sbb andb jno add int imul pop push cmp rcl sahf outsl lods sti (bad) mov pop gs cmp pop pop push dec jbe xchg mov mov xchg mov cmp dec mov repz xchg cld push mov negb popl mov xor nop aad fdivr insb dec xchg or lods shrl and sahf sbb xchg jle mov les lods sti rclb fmul fsts dec bnd dec push jb fsubr shr pop addr16 mov jle fdivrl icebp adc insb ds adc es sub lods pop jnp fldenv dec xor rorb inc xchg push push insl sbb jp jne ljmp movsb imul push jb jle das sbb mov in and cmc out lods scas int adcl xchg and inc bound mov pop cmp popa rorb mov push sahf cmp in insl inc jecxz mov or out mov mov add sbb fildll add iret dec stc inc push and cltd mov in xor mov mov sub cmp lods mov push dec mov lock jae lds or sbb xor neg fildl xchg mov ret stc cmpsl jo sub lds push pop scas push push jnp lret cmp push mov mov (bad) dec loop (bad) hlt xchg mov outsl inc mov or in outsb pop roll fwait mov pop (bad) dec aad mov mov mov cmp leave or nop cmp mov pop int3 and xchg sbb mov adc xor push sbb mov jo das arpl jmp outsb imul lods inc out imul dec lahf out rorl call (bad) pop jne leave je (bad) cmp movl (bad) fwait xor and call dec sub adc fdivl outsl xor in cmp lds in xchg push (bad) mov movsb xchg push leave lods pop push (bad) aam lret sub pop lock call ja pop mov popf sti cltd cmp lock clc sub test sbb xor aaa pop mov leave push movsl rclb adc int3 movsw inc xor add incl xchg add add adc pop dec xchg lret dec sub ss cmp lret cli es out mov cmpsb call jp jmp pop sbb js mov xor mov push loop mov imul clc mov fstpl incl and xlat je add leave mov rcl xor xor cmc and dec or xchg xchg push (bad) cmc out jne das mov retw test or pop mov pop xchg adc dec int mov fprem cwtl sub imul jle xchg mov add push insb dec rcl xchg in xchg inc fbld cmp inc jecxz or aas insb pop pop mov mov jecxz sbb mov test cmp leave or sub aaa sbb test popf inc xchg mov jnp shrb test jnp gs pushf or in test repz add adc pop cli mov lea out sub xchg hlt js fimul loope xchg loope inc fildll repz mov out inc imul cmp mov sbb aaa dec mov (bad) or jns movsb mov xchg cmp cmpsb push bound das jmpw pop outsb mov das aaa stc mov mov ficomp mov std add cmp cmp mov je push test pop stc add cmpsb or insb cmpsl or xor icebp aam add fcomps sarb or adc gs aam leave movsl mov cmc js movsl adc gs jnp mov stc push popl cmp mov out cmp pop outsl stos pop push arpl dec xchg pop mov data16 jecxz sarb pushf xlat inc jp cmpsl mov mov push pop enter fistpll add mov sbb mov mov add lods fbld jne imul sbb push lods xor sub sbb xchg pop sub lds sti jb hlt push jp clc mov mov ss test mov pop jmp push push mov adc (bad) loopne sub roll mov sti ss in in pop jecxz pushf jmp dec data16 and push push in mov pop loopw loop loope movsl test shrb pusha fs das jecxz movsb add add ljmp sbb inc sbb imul xor outsb lcall data16 ror jns lret fwait cmc and outsl mov fstl mov adc cmpsb hlt out dec xor sbb adc (bad) (bad) movsb push inc lret dec orl das loopne sbb (bad) sarl mov insb adc into jecxz mov aam mov aas inc rolb mov adc addr16 sbb rcrb add mov xlat clc sbb adc testb add cmp push push rolb inc xor or sub adcl rcrl lds iret ret sbb mov xchg and xlat mov mov popa push (bad) or adc xchg dec mov mov icebp cmp cmpsl jno lahf inc mull mov and sarl jns (bad) out std icebp pop xor add outsb lods mov fs scas outsl cmp pop jbe xor test mov pop in mov mov xchg dec adc inc ljmp jno imul mov push rep pop adc pushf outsb in mov xlat jle cmpsl (bad) push mov js sbbl sbb fnstcw jmp lock fisttpl rorb outsl jns repnz daa daa fsubr lods xchg jno test test mov or xor js mov add dec mov imul mov stos and sbb dec dec pop add mov nop dec pop add adc mov ds repz aad inc inc mov outsl mov sbb rcrb dec mov mov cmp adc cmp movl call in jbe fmull lods xchg (bad) (bad) sarl fwait xor and xor or out mov (bad) xor je mov jmp ds cmpsb movsb lock nop jae sbb and daa out pusha fldcw sub ret xchg inc adc push cltd leave jne sub pop inc movl popa fwait test pushf divl dec mov in aam jl add push inc sub es cmp testl or loopne icebp out leave push mov or inc mov call push mov mov mov sbb mov xlat ret inc stos ds jbe out je pop cli call in mov test scas lock or imul jle loope test jno mov cmp mov dec dec xor xchg mov xchg rorl adc lcall test jno pop inc (bad) outsl or ljmp mov cmp in test push jae mov add push adc push loopne or adc xor jmp nop imul cmpsb xchg cmpsb jbe cmp pop xchg icebp pop movsl or mov xor sahf and nop psubq cmpsl cli popa ss addr16 repnz scas insb sti fidivl and movb mov (bad) sarb aam xor out adc push sbb call jl (bad) xlat jp addr16 ja lcall fsubl addl jge sub or or cmp sbb jae fdiv sub imul adc sub fdivl jns xor lret cs pop andl add mov lcall in mov in cmp cld cwtl sbb adc xchg test pushf inc (bad) xor mov fwait cwtl sahf push pushf and jae lea cmc scas sbb cmpsb daa xchg lods daa insl je mov mov adc inc insb jle daa ja je into addr16 pop cltd cmp or aam xchg movsl inc or and dec fucom cli and sub jecxz push fcomip fcmove pop std cmpsl fidivr xchg fildl mov xchg (bad) jne arpl aas aad push rolb push scas mov ficoml pop mov js stos or pop frstor (bad) cmp out mov aam xor shrb mov lods fstl mov mov push addr16 xchg daa mov int3 aaa out pop popa push (bad) mov add mov out popa mov lea jp (bad) and and sub aam outsb or insb or mov scas pusha (bad) roll (bad) hlt arpl xchg ja dec cmp jmp out sub repnz cmp or sbb add addr16 lret mov mov xor aaa ss mov outsl adc xchg sub xchg and adc or mov add push (bad) xchg insb xchg aad fs aaa mov sbb xadd xor das pop mov xchg pushf pusha add movsl adc dec test xchg jnp outsl push shl jbe dec pop mov popa dec int mov adc jb jne insb cmpsl (bad) hlt ficoml mov rorb aaa jne mov jge cmp lea inc outsl imul daa jecxz mov fwait out in jae dec sbb jnp lcall and mov popa stos push mov cmpsb lret sub xchg iret or ss int mov lea icebp into pop push sub pop sbb jbe mov lods mov mov xlat cmp gs (bad) daa or test dec mov xor fisubl push xlat lcall dec and push jb aam jbe ljmp jecxz adc inc dec sbb mov out outsb xchg mov lods (bad) mov mov aam pop int lret add xor jae pop and mov adc (bad) sti lea fstpl xchg fadds (bad) sub test (bad) mov xor out inc adc inc repz mov xor pop sub jmp rcrl mov mov jbe rcl pop or stos dec jle fsubrs mov stos test or stos mov pop andl in mov das add and ja js fsubrs pop inc out xor mov pushf lods mov sbb add jle clc pusha dec jne push andl lock xor pushf pminsw dec pop xchg stos dec mov bound shlb or cmp into cltd mov outsb xor dec push pop mov data16 jo cmp mov jo jb inc push jb sbb ss rclb mov aas sub test rorl push in dec ret (bad) sub int3 lcall das push and dec pop inc lret imul xchg push je xchg sbb mov sbb mov push mov jle repz cmpl inc (bad) pop mov ljmp sub lds dec xchg xor fcompl mov nop xchg repnz test outsl jae push stos je (bad) jmp (bad) pop popa je mov jp jmp lods xor lea fs jbe fs (bad) sti sub imul lods xchg outsl jns pop sub repnz enter cmp fcom dec ss loop into movd mov loopne mov lret jns sub jge out dec jle repz out stos cmp mov push sub mov jp int fptan lret call pop ljmp stc pushl jg (bad) (bad) clc lea (bad) popf js xor and cwtl xor and test shll and (bad) enter jge fnstenv scas jae in mov sbb ja cld (bad) (bad) jle shrl and sbb je int3 sub addr16 loop in add cmp scas cmpsb movaps xor cmp out popf push aaa xchg fmuls out pop rcr and int3 pop add adc (bad) mov popl fwait pop out and (bad) cmp cmp mov inc mov mov test aaa mov mov mov mov push push imul movsl add dec add mov mov loop inc and bound (bad) leave stos (bad) ss xchg inc test pop jo mov pop jb mov mov mov fsub aaa adc out jnp (bad) inc dec lea sub sbb sbb push pop mov sub lods in (bad) lcall cmc xchg mov test jge mov je (bad) jmp push sbb mov insw stos lea imulb aas scas rcll cmp dec mov inc mov jbe fs fwait (bad) mov leave (bad) (bad) addps clc add (bad) lds and mov push mov inc push xchg sarl sbb scas pop mov inc mov pop dec jecxz ds push leave loop dec xlat cmpsb jns pop outsl adc jne cld (bad) cmp aas sub pop cmp insl push and cmovnp js xchg leave imul cmp out test push hlt cmp xor push arpl push mov sbb mov mov inc test notb push xchg dec lret xchg add and push pop xchg out loopne cmpsb pop jns in mov mov lret inc jmp addr16 inc adc lock cwtl jle mov mov pop xchg xorl call push mov loope loopne insb nop jmp (bad) fmull cmpl adc sarl xor fiadd cmp sbb lea dec dec mov sub in jb xchg push cmp pusha scas hlt dec sbb dec shll sub mov mov adc jg add or pop sbb bound pop sbb add xchg call pop pop jb mov fsubrl into dec gs shl jg sbbl mov jb call jbe shll mov lret pop xor in push out jno pop xchg call in pop cmp stos in movsb cs cmp repnz notb mov push xchg out sub mov jnp jle (bad) xor incb jne test lcall into popf out in stc (bad) sahf outsb lods push cmpsl ljmp or fwait lds js movsb cmove inc and repz das mov scas stos clc mov js push imull jo hlt fmul inc popf in xchg (bad) cs mov (bad) jmp and xchg sub or out dec inc ds jge jg lds xchg mov sbb cmp imul out mov pop xchg xlat sahf das cmp icebp loopne stc cmp and sub add push into (bad) jne lods lret cmc inc jp stc daa mov cmp sbb std iret or std jge ja movsl scas dec jbe shrb aaa and push sbb pop and add mov rolb cwtl add mov inc dec js imul inc mov or les mov mov in inc adc hlt jb cmc stos lds lahf sub dec pushf mov sub mov cmpsb lret cltd add inc out inc jo inc addl dec outsb bound inc ljmp je in mov pusha pop subl cltd fwait (bad) int3 mov mov lock hlt ljmp dec xor xchg dec fchs ja mov lods and add icebp jno pop data16 cmpsl xor int iret mov popa fsubrl xor adc dec idivb out lahf in xchg pop pop xchg notb bt dec push sub mov setb push popa push mov hlt xorl (bad) pop inc in xchg push aaa (bad) or adc push in cmp in jnp pop cltd in mov pushf std mov jg fs (bad) (bad) leave scas pusha xor lretw mov out mov mov lods pop dec in sahf cs jb scas out fadds cmp fidivl out inc xor imul sahf mov dec out pop pushf push inc xchg or test shrb mov lods push mov push cmp ss xchg sarl xchg movb pop sub cmc cmpsb pop mov (bad) pushf mov mov aaa (bad) (bad) sahf push mov clc xchg cmpsb (bad) push mov inc in pop push xchg jns adc stc pop addl out or and pusha scas call test daa js inc jge mov (bad) jbe push stos inc mov push jae dec adc xor rcll dec fnop lret mov jg xlat (bad) int3 fimull shl mov scas jle push dec (bad) ljmp test fcoml cmp pop xchg pop dec jp mov and iret cmp mov mov push add xor xor test fidivr (bad) mov clc mov in xchg movsb dec xchg mov aaa mov cld xor mov pushf in mov (bad) mov out repz sahf out cmpsb pusha aas nop lahf mov pop mov mov xchg gs out fwait mov or lcall jle scas add inc mov lods lods insw adc cltd rorl sub ja jno enter xchg pop outsl mov data16 fmulp fildll (bad) inc stos ds mov fldl jno movsl fsubrl xchg fsubl lods mov dec jns sub insb xor out xor lcall adc xor push mov jo mov and inc imul add pushf pop leave lret jmp bound popa pop daa imul xor pop arpl pushf leave movl outsb aas xchg in ja (bad) cmp (bad) cmp jg loop push jg stos xchg (bad) gs sbb in imul and aaa xchg cmp mov sbb in test cltd push js and in pop mov cmc mov in sub nop ret dec ret and jno inc out cli xchg lea int jne imul stc xor or xchg (bad) mov aas outsl jmp out in lahf ja pop xchg xchg outsb jne,pt test (bad) movsl pop xchg outsb xchg xchg xor (bad) roll lds add cmpsb pop test ss js imul test arpl ljmp std movsl mov jb cmpsl xchg sbb mov leave repnz and mov hlt xor lahf and das les repnz jbe js add dec cmp negb mov ret and mov and jae jno adc xchg enter jmp in xor movsl jl nop jno fidiv cmc (bad) xlat fiadd out (bad) int ljmp push out mov jnp lcall imul fs jg out xchg fnop inc (bad) std ret inc ficoml or ss cli sub jns xchg and (bad) and inc cmp mov loopne sub or add and push cs and mov sbb sti push or movsl jne mov out sub out fst fisubrl in sahf shr sbb cld mov decl idiv adc push ljmp mov out xchg scas or pop scas out mov jbe fdivs adc dec or jge and out pop push mov loop lahf imulb mov aas dec fistpl shll and (bad) mov test in (bad) aad xchg jnp mov pusha cmc xchg pop out insb ss repz push lahf cli repnz je push push inc fcmovnbe cmp bound xchg cltd push jb lods mov mov loop mov mov test xchg pop xor add add xchg aaa es clc jle pop std scas outsl mov cmp fbstp push mov testb dec fldt lods (bad) cld cli xor leave adc pop inc pop adc mov jle fnstenv xchg cmp out xchg mov (bad) divb pop cmpsl mov inc (bad) xor xor dec clc ljmp mov inc out jno rcrb sbb xchg and mov push test pop push mov arpl shrl jp xor in (bad) lods jae jb scas int3 repz mov fmuls cld sub fstpt (bad) jb out movsb jo mov sarl sub cli and mov fidiv xchg and add icebp rorl addl (bad) mov xchg bound sbb dec jbe hlt sub lahf int xor sahf cmp and xadd mov pop jnp fidivl popf arpl push ret in pop jl add dec push jmp xchg out pop jl pop mov xchg aaa das gs push xchg pcmpgtw lret inc inc jae jmp insb xor mov sub pushf lds and lret cmp add pop and scas mov jmp fstpt out rcr push sar push sub mov and and xchg and loope sub mov jns ss mov jge cmc xchg jl adc mov bound and cmp data16 ja or cmp add or pop xor add inc clc pusha clc outsl mov xor pop and mov cmpsl stc fwait pop pop addr16 (bad) xor push lods fbld (bad) sub test test daa xchg fs push std stos cli pop mov (bad) lock (bad) int outsb out insb xchg test mov loop setno shr idivl dec sbb dec les inc sbb imul fisubrl das sub lea mov lds jns mov and mov pop (bad) loope rclb push jns movsl scas lods (bad) mov js cmp popf out jae pushf ficomp cwtl addb (bad) jbe lret outsb xor neg adc loopne and int gs int ja (bad) dec jmp sub mov mov ja cmp ljmp add adc adc sub push movsl es push movsl xchg pop (bad) leave sarl cli mov xor ret movb outsb pop test dec (bad) (bad) push aas or aaa jnp cmp sti sbb (bad) jmp pop movsb decl jecxz mov jae sbb and xorl in jo daa push (bad) out mov pushf inc xor nop mov pop test popf mov push cld mov pop xchg ljmp stc inc imul push repnz mov insb and jle movsl cmpsl mov jae jle xchg out popf clc jbe pop into (bad) repz outsb punpcklbw test iret test arpl andb lcall mov push mov pop cmp xchg sbb mov adc lcall decb imull (bad) cmc gs data16 cmpsl push mov pushf movsb cmovge xchg (bad) insl fucomp (bad) jb add gs fisubrl push jns leave sbbl aas fldpi gs xchg fldl sbb mov cmc cmp xor and jb xor push in lods push inc loope jmp clc and xor cmc aad out cmpsb mov (bad) divl (bad) fnstsw jecxz (bad) jp jge jns in xor mov xor xchg xchg push ljmp xchg dec mov sub (bad) mov aam mov lock mov sub je push or fadd fimull mov dec (bad) aam mov adc popa pop sbb dec mov gs dec aas sbb (bad) in test push aam push mov lods add mov hlt mov dec mov jb outsl mov outsb xchg pushl seto mov scas test dec shll aas bnd aam pop daa push adc mov lock lret jae out js lock inc lret pusha (bad) lea (bad) mov out jl in sbb popa repz aad ja sti push lret aas jnp sbb sbb sub lret das and stos pop scas stos gs cwtl mov nopl pop fisttp cmp mov inc das fnstcw and xchg jo in sbb (bad) insl jge mov sarb loopne std and aam cltd xchg in mov and ds mov xlat cmc mov cmp clc scas (bad) shr lea dec add jbe es and push pop ds iret mov push in into lods lods xor (bad) or fcmovne dec sbb popa fistl pop ljmp and pop je mov repz in ret in xor sbb popf cmp gs cmpl sub dec sbb mov lret (bad) ljmp dec (bad) fldenv mov or test imul lahf lea push mov push mov push sub or addr16 mov sbb repnz repnz lcall inc cmp or div aad (bad) cs std mov lock sub in into pushl inc jle daa out test ror cmp lea rorl mov add xor fdivs mov lods repnz dec xchg and stos cmp repnz cltd or inc rorb xchg mov aad push insl jbe jne adc (bad) stc cmpsb and jbe (bad) xor push xchg cmp leave std xchg jnp outsb pop mov push jae or repnz in mov push sub stos pushf std inc cs stos and mov out data16 push testb xor dec jns xchg push iret imul sub ja or mov adc xchg incl das jp stos sahf jl lret pop aas in dec xchg push dec adc ds xchg test and mov or pop xchg in push ja push jmp push cld pop sbb fisubl mov jb pop cmp lods cwtl rorl and lcall adc lret lea mov ret outsb sbb xchg inc mov rcr sbb aas mov call repnz pop (bad) jecxz xchg cli dec pop jl cmpsb add test loopne dec xchg mov sahf ljmp jno cltd jnp dec fdivl push xchg adc mov xor push insb les xchg inc movsb testl push mov pop lret add or mov insl out aad (bad) sub sub popa movsl mov xor test xor sub in push (bad) xlat in push mov (bad) addr16 jns es jno enter test push fdivl ret pusha mov add sub (bad) or ljmp (bad) cltd push and add outsb cli cltd mov out sbb out frstor stos mov insb push faddl xchg mov popa mov lcall mulb cmp mov dec xor adcl mov pop cmp ja repz sub pop in push bound repnz int pop inc jg fsubrs hlt pop into jle mov pop incb jmp mov icebp scas rorl cmp fdivs mul and insb push sarl jae dec insl and lahf into sub jge enter aaa fsts jl mov sbb sub ret out aam arpl dec test cmpsl dec repnz insl mov ljmp (bad) into sti mov iret jnp fadd jbe xchg dec lcall test xchg sub aam jae jns push jge and fadds repz shrb push mov faddl scas lcall xlat ja clc scas jmp jl jle repnz dec xor es push hlt adc arpl jae push lret stos int sub xchg dec dec daa push add add and and jno mov lahf mov outsb xor leave mov sbbl lret dec pop int3 jge sbb push adc pop addr16 bound movsb sub lods push inc aaa jbe aam push inc loope loope pop or mov dec sub mov call arpl cmp enter xor fld rorb push es sbb cmp popa enter or test imul in sbb adc push adc sub fistl sbb dec out insl sub or mov int3 mov xchg out bound cmp imul and cmp call pop lcall mov mov cld mov fild ljmp inc jg stc cmpsl adc call lock xor outsl inc rcrl push push loop push lret clc xchg add inc inc daa sub test sbb sub xlat popa lods nop dec lds inc mov push negb mov cli xor xlat (bad) jns mov push ss adc pop sbb adc fnstenv popa (bad) xlat mov xchg int3 (bad) in test shrb repz cmp add push outsl dec (bad) jmp mov push add jecxz xchg fsubl or leave sub lahf pop icebp nop push inc push xchg pop cwtl xor insb and mov adc ja icebp add push sub int3 ljmp (bad) jnp jmp scas xchg fwait ror adc or dec (bad) sub xchg repz sbb test shlb iret jg pop pop cmpsl xchg lret add mov push dec jne push in xlat mov insl les sub loopne test mov xor rcl mov and fcoml (bad) out jecxz add adc fstps fwait clc sahf inc dec cwtl cmp cltd xchg lock mov and lret push sub jmp stos mov scas loope es push mov sub pop adc fcomp (bad) fdivl int3 jp mov divl jbe mov sbb mov jo outsb push mov rcrl out fst test jns mov clc mov mov out fsubrl cmp fnsave shr cmp pop pop ror int cmp in cmpsb jmp sbb arpl push fidivrl sbb fsubs (bad) mov sbb (bad) repz adc nop leave and pop lea (bad) loopne mov subb push pop dec popf mov sub push push addb (bad) cmc add (bad) pusha mov out insl shrl dec xchg mov enter pop sbb mov mov (bad) mull cld fistpll (bad) lock cli aas mov pop mov clc dec aaa (bad) repz dec in test daa xor mov xchg (bad) add ficom imul mov adc notl out add sti daa insl jl mov ret in push imul adc ret mov sub test data16 mov xor inc xchg or shlb cmpsb dec cltd scas jno inc or cmp mov mov pop mov pop in sub movsb ljmp sub cmp and ss pop ds xor adc mov out pop jb xchg pushf rcrb sub imul inc dec mov adc xchg andl fcoml mov jge int pop cmp pop call jo fnstsw outsb jge loope add inc cmp fs lahf cltd sti movsl repz iret jmp mov mov push popf jp pushf sbb jg cli sti rcr (bad) push xor dec psrad dec jp ljmp mov push sub mov xlat adc xor or add xchg dec jo push and and repz mov sarb push cmp pop into or ds into out (bad) pop sbb icebp push cmp jmp mov inc cwtl add mov jno mov (bad) out int mov sub negl lahf fnstenv leave fwait sbb or sub cltd scas test mov lcall pop (bad) jg inc call test test iret js sarl mov adcl sub xchg mov (bad) movsb sbb mov imul pusha (bad) jmp push push dec pop stc out dec jge (bad) dec cmp loop movsb cmp pop dec outsl dec (bad) pushf sarl dec sub inc sub sub shll xor cmp xor loopne pusha inc dec push push and xlat or pusha xchg arpl cmp jno enter xchg int3 insb adc add cwtl add les popa inc ret hlt dec pop jns es movsl jecxz xchg jg push push loopne fsubrl test jbe insb int3 push jb rcrl dec out or lods push xor pop mov (bad) mov mov movsl lahf hlt and jae adc clc adc ss mov or sub cmp test sbb mov popf loope je in sub fs mov sarl cld dec lea lods call mov mov imul loopne mov js aas cmp daa sub mov pop xlat test mov push fidivl or adc ret inc or loop xchg out pop jecxz push xchg pop pop cmp cmpsl dec jg aam test jo jno or cmp jne (bad) mov jae fistp mov inc push enter mov jns mov outsb int3 inc push mov adc mov and pop cmpsb repz sar adc (bad) jmp clc add jle (bad) into js divl mov cmp ret (bad) push cmc mov cmp inc out clc xor sbb fisttp sub push fstpt imul aad aaa stc jo push inc jecxz mov or (bad) xor adc dec pop (bad) cmp dec dec bound es sub sub enter dec xchg inc inc or add mov and loope dec cltd pop daa dec xchg sbb xor pop inc inc adc fadds out (bad) mulb xchg (bad) sahf int3 pop sub (bad) cmp test test mov out lcall fxch inc push inc dec xchg pop dec repnz dec mov mov xchg cmp repnz andb dec in (bad) lea addr16 dec scas imul jecxz xorl pop jns xchg mov mov imul fisttpl mov fnstsw hlt jns cmpsl lea mov mov pop xchg mov movsb xchg xchg inc lret popf scas sbb xor hlt fcoms push fwait dec sbb sbb and aad bound fs pop sahf (bad) lret pop out pop in pop and pop fsubs scas nop movb mov (bad) xor dec hlt sub imul int jbe xlat das mov pop mov movsb xor mov pop xor or imul xchg repz pop mov jmp fnstsw sar das xor sbb and mov xchg or mov push mov jb dec lret (bad) jne fldl in mov loopne inc ret mov mov ljmp pop xchg frstor ret rcrl dec cmp add inc bswap pop add and (bad) sbb sub push push pusha mov jl popa add jne jne (bad) icebp shlb fcompl jb sub mov popa mov xlat xor jmp sarb cmpl insl es jmp mov insl mov call add mov rcll sub push sub sub push test test add pop xchg lahf xor lock sbb xchg sub sti mov push pop aam sub mov mov into xlat inc cwtl imul pop lret rol xchg push test mov shr push pop notb push cmp inc pop loop ret shr mov aad scas jecxz mov test jp aam lods cmp push mov (bad) daa test xchg push pop push jb add xchg push cwtl and scas cmp lcall push insb pop jo es or in int3 xchg insl es int3 pop test jecxz lcall jnp xchg lahf xchg fwait push in mov mov mov inc inc lcall pop pushf ja clc out lods leave stc sub repnz sarb and aas in (bad) mov scas in push adc xchg sub xor pusha push inc add adc jecxz push mov aam jge notl iret fstps insl lahf inc jp mov mov or mov xorl mov dec cld jge jbe mov adc mov mov arpl int3 lcall sbb adc adc jne and mov push sahf mov lock inc xchg jge add sbb and loop lds xchg movsb dec leave and dec or aad dec jae adc pop outsb out orl xchg pushf (bad) push cwtl shrb dec sbb aad cmpsl xor (bad) (bad) leave cmc out xor test cwtl lret inc in adc push jmp in sub or fnclex popa dec ljmp subb xchg (bad) lret cmc or xchg sarb xorb jae ficomp cli mov (bad) je ja out dec shr inc addr16 jp je cli push outsl lret (bad) and repnz jne cmpsl test out aam in jge jmp cmp mov cmp xor cmpsl xorb cmpsb inc inc lea mov aam and xorl fcomps mov inc sub shrb outsl push pushf jnp loop test scas popf rcrl sub lret mov or push adc repnz int3 adcl bound or jae lds imul call lcall ret pop cmp daa xor nop shll enter test jne fistpll je es and (bad) xor mov fbld fcomp jecxz push pop int3 (bad) pusha aad insb push fcoms xchg imul add sbb and xor mov xchg pop push adc xor cwtl js stc ret xlat mov mov in (bad) call sub aad ljmp out shl jge testl shlb daa sbb or fisubl fcompl mov xchg nop mov mov mov adc push sbb or movsl or mov jo cs xchg jns adc xor sbb leave mov jge cmp loopne xor je and or mov xor (bad) push mov fsubrp out xor (bad) xor jmp (bad) lods jmp mov inc push cltd out insl mov push mov cltd nop push mov jbe in es sub out imul sbb dec cld xor stos rcr bound push (bad) push loopne pushf sti push add lcall dec or insb pop add ds xor mov ficoml imul repz mov (bad) cmpsb int3 mul jge das dec jecxz lahf push push xchg mov dec and scas push cwtl dec push andl mov idiv jb pop mov andl into popf push sub push dec add notb inc pop aas adc mov dec ret js in (bad) mov jg rcll push bound adc lahf xchg push fnstenv addr16 cmp mov mov lcall push int3 sbb or es dec mov or push arpl inc movaps adc pop sbb dec aad mov into mov jne stos sarl pop add fsubrs jbe jae fisubrl mov mov gs mov (bad) xor inc pop inc xchg in mov sub sbb fwait adc xchg test movsl lea int3 push es mov inc je add negb inc int xor pop xor int3 xor out xchg dec pop lcall out pop lods jl test sub nop fdivrs push dec xlat insl int sub or arpl imul sbb cmp jae lods loope scas aad mov js jecxz hlt sub sbb addl sahf xchg lcall subl pop jl out and adc test enter (bad) sbb and nop push inc pop mov pusha fwait (bad) sub mov sub clc js pop jle jns mul lods xchg dec out jno insb jmp inc adc fsqrt scas leave fist dec fucomi in push jmp dec push mov fadds out xchg call mov dec mov (bad) ss sub ja movsb cmp ljmp (bad) mov cmp neg add adc addr16 xlat mov jae mov pop and mov dec popf jns mov mov add xor inc mov jns xchg sub pop adc and or inc cmpsl pop outsb inc pop arpl ljmp pop jmp addl lahf (bad) mov ljmp sbb mov adc push pop adc daa or data16 xor xchg popa push out ja loope mov stos fldenv jno dec or int3 xchg add mov dec mov push push pushf adc call out cld in mov insl test jle cltd pop push jge jae jne ss jl xchg pop fadds into divl pop jbe test push stos mov mov pop and add es add clc mov out cmp add cmpb (bad) aam ljmp or insb push fwait jbe sbb jp (bad) adc lahf inc mull inc cmp loopne xor and push jle out cmp pop xchg icebp cmp sub or loop (bad) mov (bad) les pop xchg outsl call or imul xor cltd mov jno inc mov loopne and daa pop mov std bound push jge aam das ss lret popf jmp push test mov mov into xor sub xchg or imul and js cmp mull inc add dec fxch push inc push jecxz xchg adc call int jnp das psadbw mul outsl sub adc outsb pop pop xchg scas movsl mov fwait push in and pop fsubl adc outsl adc enter test sarl xor xchg xor jne (bad) cld jnp int3 mov fnsave mov mov in out jl sub mov aam mov sahf daa and mov jl or mov bound cli and ja ja pop sbb test popw mov adc shrb nop (bad) xor and add sti fs movsl loope add imul xor inc xchg mov mov les mov std cmpsb inc and mov in int3 jge cmp in sbb in xchg sahf inc cmpsl add es xor (bad) imull pop and adc add pop mov (bad) jo loop test inc mov lods test into imul push cmp in inc int3 outsb mov insb jnp push (bad) leave outsb adc xchg pop dec jmp cmp mulb ja (bad) mov pusha dec pushf dec add adc sub xor and add in pop insl xor xor mov sbb gs xchg out mov shll clc aad pop pop clc int fild clc notb mov push mov pop xchg fisub push inc out and or cmpsb mov lods insl imul xchg scas leave cli fisttpll sahf ffreep cmc cmp inc cmpsb or xchg cltd cmpsl push push mov clc mov std arpl (bad) mov jae dec xchg adc jae inc jge or rcll adc in dec jno out mov push add loope add iret lahf and rcrb or xor jnp fstl bound dec dec push mov int xor out adc cltd mov inc je outsl sub adc inc test xchg iret xchg je les cmc jno add mov xchg stos (bad) fs xchg popa mov dec mov (bad) xor inc mov sbb push call enter sbb rclb push cmovp xlat (bad) pop rorl ror mov mov xor (bad) leave pusha hlt movsl mov lret jge adc jo stos imul inc sub outsl dec sub push cmpsl adc lahf inc adc sub and insl mov iret scas mov aam pop jns lret sahf and push lods ja cmpsb imul mov adc inc dec jp enter mov pushf sahf roll cmp fsubp ds pop push push mov push test push nop lods mov or jp call push mov ja jp fmuls les cli out scas nop jl call ficom jbe cmpsb push test sub int in mov cmp push loope jne popa cmp cmpl mov jmp jno xlat mov pop xor sbb push gs lock mov negl pop sti inc mov shl inc pusha sar mov push xchg adc mov (bad) jle arpl lea push inc dec jmp shrl adc mov pop popa sti sbb mov cwtl jns dec pop cmp add sbb fist sub jg mov mov push inc xchg fnsave lahf lea mov nop jns gs mov aaa (bad) sti xchg sbb sti pop scas jnp mov jne rcrb ss adc cmp inc mov dec in enter leave frstor mov outsb xor rcrl pop cmp pusha arpl fiadd ljmp gs xchg mov mov and into movsl mov sub aaa xchg imul jns push test sarl mov xchg adc add mov orl mov lods bound in xlat sbb xchg sub pop jne pop aaa xor scas popf mov test scas xchg stc xchg cmp mov repnz inc dec nop aad fwait rclb cli (bad) enter xor mov jnp ret cli outsb mov lods ja fnsave mov mov add adc test out add dec lods or scas and sbb in iret mov es scas cmp mov pop mov fdivr cmp xchg imul movl fwait adc nop aas cmp dec leave mov mov (bad) xlat mov jnp jle hlt adc cmp hlt and mov ljmp sti jbe in push sbb mov add (bad) xchg lret repz aad outsl jnp sbb js movsl insl pop pop repnz sub adc add mov jmp addr16 or movsl mov sub fwait andl inc sbb imul mov jp cmpl stos ret faddl in lret inc xor movsb mov pop mov sub dec or push cwtl jmp test push lcall cs mov icebp idivl push (bad) cltd cmp xchg lods repnz mov sbbl in or pop xchg xchg or add cmp ja andps outsb add scas ret frstor cmp xor xor jno inc add mov aaa jge pop mov mov mov shrb sub and xor jecxz dec mov and mov and std (bad) aam xchg out mov xchg push mov inc out test outsb mul aad pop xchg ret jge and mov jge,pt rorl cmpsl sarb sahf fwait jge push mov mov fisubrl outsb jecxz xor push sbb push imul xor push stos cs (bad) mov icebp in mov aaa leave jb sub mov call adc mov outsb cmc aas outsl lea mov mov notl imul ss cmc lods mov cmp cmp shrb fstpt cmc ficom push rorl cmpsb sti mov dec xchg fcmovbe stos jbe stos mov fidivl outsb nop and (bad) loope sbb xchg enter mov ja adc dec inc xchg inc insl jmp sbb lock sub mov das lret dec (bad) push js popf jno cli shrl xchg mov xor (bad) mov arpl sarl xchg pop leave movsb mov sub mov mov mov pop in mov or movsl mov sbb pop jp les mov popf dec or xor pop jb xchg out add and mov inc ror cmc push aaa sub sub sub leave dec sahf and xchg xor and mov xor xchg jmp hlt mov mov (bad) mov xor and pushf push jle cmpl sub leave arpl add (bad) xor std xchg sbb idiv inc out (bad) (bad) push dec je enter (bad) imul mov mov mov repz ds jnp mov cmp push lods lret push jae insb pushf into xchg pop outsl pop nop mov mov or sub andl and cmp dec psadbw scas cli jmp ljmp push cmpsb or xor fnop ret out jns cmc out mov sub cmp add es (bad) jmp push jbe mov test iret in repnz int insb jno jmp pop cmpsb lret adc sub (bad) hlt es orl and mov ljmp pusha jge mulb mov xchg push clc and or mov aaa push rcll xor mov add int3 stos and js test inc cltd test jmp imul je cld fsubl (bad) and or call push sub xchg orb dec mov mov insl lcall fldcw lods cvtps2pd or cmp arpl push stos ds lret mov lcall daa hlt xor mov outsb adc pop jnp shrb xlat test dec addr16 sbb add or mov addr16 xor int push fnstcw in iret jg,pt in rcll rclb cmpsl repz movsb cld mov scas repz push jne sti mov push push mul mov ds mov arpl bt jp sbb xchg or xor xchg in jnp sbb mov fsts sub xlat inc pop dec cmc and jle pop out loop xor inc xor sti pusha dec mov mov lods out mov xchg or mov inc mov fiadd push leave adc and xchg mov jle (bad) pop cmp fdiv xchg aaa cmc aad mov push sbb imul xchg jp fucom pop lcall and mov jbe stc dec mov jne das fwait push pop bswap jp out push scas outsl neg aad mov jecxz arpl lods xchg cltd pushf jl jmp jnp or mov fidivrl into mov sar movsb incb popl (bad) stos cltd mov mov pop leave shrl mov cmp mov xlat xor pop fidivl repz inc (bad) frstor mov fmul bound and mov push rorb lcall xchg das stos jmp lods ljmp fsts js bound outsl mov sbb cmpsl push jge xchg pop movsb mov inc icebp mov fwait add out rcll test xchg or sbb mov aas out int3 and stos push sub out pop outsb (bad) push aam lds in das jg,pn lock mov jl xor js or hlt ss inc jl lcall pop or loopne add adcl inc lcall imul jo adc (bad) iret mov push mov stos ror push xor out cmp mov xchg ror and pop add jb das sbb xchg sti cmpsb mov mov adc mov add jbe xchg mov mov mov mov divb (bad) jmp fcomps ljmp aam cltd int fwait call rol arpl shld nop sbb stc push js sub int xchg pop and cmp pop pop xor fwait mov jmp stc mov je ds out mov xchg xchg pop (bad) mov xchg lea jge push icebp add mov outsl cld jmp push or pop jl adc push gs fwait (bad) or lods mov mov adc or pushf mov icebp or cwtl xor lods mov adc add je out lahf add test test (bad) call fisubl mov mov pop dec sbb pop cmp hlt mov test movsl rorb cs inc push loopne repz xorb fwait dec lcall mov mov rorb cmp push lea inc pop dec pop es dec sub xchg push ja ss fcompl ss loopne sub cli push and xor mov rorl jle inc xor je movsl adcl jae cmp mov sub mov jae jg repz jge mov (bad) pop jbe add cld loopne cmp jmp std dec in stc daa div xor jb aas iret fldenv mov lock outsl jmp imul mov or push push inc lds or jnp fisub ret ss cmpsl push out ret mov mov pop in cld sbb cmp and (bad) fsubs fstpt decb dec imul (bad) lahf daa xchg gs fcoml in gs pop push int jp jecxz std sarl cld mov ds loop push int imul xlat add adc sub mov aas dec in gs jge and out leave ljmp mov mov push push adc cli jnp ds adc lahf jl xor jge icebp sub pop push fs ds lret xchg jmp fstpt in jae call xchg push mov mov cmp adc (bad) pop fnstcw rcr push test femms cmp push imul add mov jbe aam inc and mov or mov leave jb int aad (bad) das push inc popa repz (bad) scas mov dec add mov cmp rcrb xor bound mov jo iret adc ja xor ljmp movsb cmp int je cltd (bad) mov jbe mov inc and popf rep dec ljmp lea jbe call push lds sub jbe js cli aaa sarb lds iret sti repnz push fucomi mov add sbb bound lcall jl cltd jg loopne (bad) out ds mov mov fsubl push cltd push jmp aad inc lea lcall and pop sar icebp jmp jg sarb cmp jb ret dec jbe fmulp jle mov mov ss popa pushf inc push adc jnp lea fmul shll add or push inc sub jnp xor dec stc sub push or rorb arpl jno pop ja mov mov sbb imul jle ret clc mov cmpsl and cli sbb jg ret scas cmpb mov stos lcall xor rorl aas cmc std int3 xchg loope sbb dec jp mov sub cmpsl fwait push xlat mov sbb loope cmpsb insl jnp or (bad) or outsl dec sti add aam pop fidivr adc push mov cmpl or dec pop js jp btr mov out mov dec mov xor cmp mov (bad) ss or push lret push pop enter mov outsb add adc or add int3 mov jbe mov pop push jecxz lcall lods imul mov popa push sub nop gs push data16 push and movsb and cmc cmp out pop push (bad) mov push imul jle sbb mov (bad) xchg iret pop xor iret (bad) mov call ds jmp mov adc imul xchg sub mov sbb and cmp jns sbbl lods cld clc fimul scas or pop clc (bad) cmp out (bad) imul sti stc jnp std int3 mov push into js inc mov shlb push inc push add mov fiaddl mov pop cs push sub jb mov push jae adc mov xchg cmpsb stc inc sar fsubs xabort arpl adc mov pop in cs hlt int and lahf xor mov pop scas (bad) mov fwait sbb mov call adc aaa neg int3 add repz mov js,pn test cli pop addr16 lea pop jl andb loop xchg xchg mov inc mov outsl enter fbld mov push ret (bad) out fdivl hlt repnz push lahf push sbb (bad) push mov mov lret insl adc or fildl jge xlat lds mov cld mov pop ja lret (bad) ljmp (bad) inc aad fldcw xor mov inc mov pop loopne or inc mov jl in movsb adc push mov cmc test pop dec fucomp push imul mov pop or dec stos (bad) cltd mov xchg mov cmp sub int3 imul les stos cmp sti pusha cmp push dec stc mov mov sbb inc xchg pusha fwait (bad) xor dec (bad) loope and in outsl mov fildll aas iret ret clc and pop push insl int3 jne lods jb cmpsb mov repz sub test jp int3 and inc mov cmc sub jo jnp ljmp out pop aam inc stos mov mov xor sub add xchg and and adc sbbb mov lds pop xchg jo loop push lods (bad) jb aaa mov mov jle lcall mov scas jecxz xchg mov or cmp call pop cwtl mov cld (bad) or fbstp and add mov jp inc xchg push xchg or mov sbb mov sarb cmpsl lcall ljmp jmp test (bad) add outsl inc mov loop fildll mov (bad) xchg mov jmp xchg in aas out das in dec cmp je xchg and cltd mov cltd lahf fwait loop pop fisub pop sub jle stc mov cmp cli sub push inc lds clc fnstcw cwtl (bad) xchg das mov in pop dec sbbl bound mov mov or arpl pusha out mov test je add jb sbb add xor push or xor mov push jp lods sbb pop xchg loop lret mov in sbb fistpll pop out adc sub jns enter xlat jne xlat gs out repnz or (bad) xchg dec dec dec mov mov cmc test jns mov cmp ret cld xor ret dec adc and adc push insl jle out popa jno fwait stos mov dec stos fwait and mov test ret inc xchg stos inc nop add (bad) fmuls inc push mov inc int3 jecxz fs cmp mov xor (bad) lds lods out (bad) ljmp aaa aas push (bad) clc aam mov js test cmc adc rcrl inc jo test dec cld xchg mov stc in pop cmp inc (bad) (bad) and ja xor jmp test add mov xor sahf push dec adc push pop lock sbb cmp jnp (bad) xchg ja cwtl jl push mov cmpl outsb subb lcall out add aad jle in aas mov fldl int rorl testb dec pop and cwtl mov ret (bad) mov fistp pop aaa outsl imul (bad) mov cmp cmp or data16 sub xchg in jne pop ficomp pop lret xchg push xchg mov in push cmpsb xlat pop jbe stc imul fcompl popf insl cs pop andl push push out ret stos movsl mov sbb mov scas cltd xchg sbb or jecxz imul inc pop dec insb and jae dec xchg pop add xchg pusha fs xchg gs mov dec pop mov xchg insl mov lods stc pop loope inc ret cmp sbb mov inc xchg pop push and jmp push mov cmc lds inc insl sbb mov inc pop (bad) mov dec lcall call add (bad) xor dec mov imul es ficom (bad) xor (bad) in push (bad) and adc and cmp dec or adc mov xor dec les pop repz stos jnp into (bad) cli es aas push stc in jecxz pop out loop adc insl push xchg ljmp negl mov std call popl adcl loop cmp int jns cmp ret push in repz xor ljmp out pop and push push push outsb pop add xor dec insl mov xor ljmp (bad) fadd mov sub mov jl (bad) insb hlt int pop lods lock pop xchg mov push push gs testl xchg xlat scas cld push mov int3 scas and hlt or lcall pop sub in pop fisttpll mulb mov jne das push aaa data16 xchg mov pop imul sti lret insb push test mov push sbb outsb sbb cmp (bad) jo jae mov sub lods add pop xor daa pop fwait add and cmp inc cltd repnz pop cmp cmp inc sub inc mov push fwait shrl rolb lret pop fs iret or cs std divb aaa mov jb jae addr16 sahf sbb lret cmp jecxz call jae jne mov xchg les push and dec mov test push movsb ja (bad) jno dec mov fldcw out out mov push insl or xchg andl daa (bad) gs inc xor xchg popa and xchg fs push fs sub sbb pop sub int3 mov jge fisubl sarb xchg mov ficomp movb cwtl jg icebp xor mov jg lret aas lret xchg in cmp pop adc gs mov int mov fwait scas call insl fbstp push jno test loope push lods (bad) mov mov sbb dec dec loop mov cmp negb aas mov pop jae stos sti cmpsb sti mov mov punpcklwd xchg insl fidiv cmp xchg out sar (bad) xchg jg lcall cmp aas (bad) push xor sub lea lds hlt ret outsb mov out mov mov scas cmp int xchg lods (bad) sarl sbb xchg gs jns dec mov inc dec imul add repz xchg call scas add or inc outsl jp jbe scas fdivrl and dec icebp sahf cli (bad) enter adc push add popa out test dec or push pushf (bad) adc sbb add lds outsb mov out xchg jbe fimull xchg lock fidivrl jecxz adc int (bad) jmp sahf adc pushf insb and xchg loop pop adc and lock push addr16 jns popf and jg jnp,pt pop pushf outsb mov pop jns xchg (bad) dec aaa enter mov xchg cmp dec pop in mov inc cmp add cmp imul or test sbb and add imulb insb insb inc stos (bad) mov out cmp pop and (bad) mov aas sbb (bad) pop clc mov aas mov lahf push frstor test mov jl and ret outsb mov sti insl icebp xor popl jmp popa test cmpsb leave lret ret or xchg dec mov sbbb cs pop (bad) xchg jmp subb mov in ds ficomp int sahf inc jbe jmp ljmp (bad) loope mov sub ljmp or mov cmp into mov and push fnstsw insl es pop jne jne nop mov adc xor iret mov mov (bad) sub aas dec ror mov mov repz test dec insb mov sbb xchg fs cltd xchg cmp or dec int3 push push jbe or popf inc xchg and cmp addb inc cmp add sbbl enter or insb xchg or aam clc imul jecxz inc dec pushw pop sbb push psadbw xchg push jnp movsb and push or rcr into push (bad) xlat daa xchg dec pusha jnp movsl pusha int push (bad) les ljmp xchg xchg les fidivr jns jle jg,pt lahf out stos jecxz ds push push push arpl cltd test lods pop pop mov mov inc fmul mov push test cltd mov jne push hlt dec je add cmp fldt push cs (bad) shr mov xchg leave mov insl arpl mov clc sub lahf (bad) call sbb scas (bad) lahf mov std int pushf lods imull icebp mov test sub sti repnz lahf (bad) shl jecxz lods sub int3 mov mov int3 inc mov and subl fnstenv push lods push jno int jmp and xor sti mov cmc insb xlat xchg cs dec xor daa dec dec jo pusha xchg mov and scas int dec cltd rol mov fwait jne sbb insb lods push mov xor push xchg mov test ds lahf (bad) dec cli pusha lcall daa repnz mov loope and cmp jnp adc inc xchg lret pop push ljmp aam int3 mov roll jecxz aad mov sti add mov lcall jbe sti mov sub leave mov cli std ficomp inc sub mov stc mov (bad) and loopne cmpsl enter sbb xchg into lods mov xchg and adc out add mov in lds push or mov out (bad) nop mov ljmp sbb add xchg je mov sbb sub std cmp mull ja lcall adc push lock jnp fadds ret ficomp mov lret fsub je jo mov adc fstpl ljmp cmpl aas outsl lcall std (bad) jecxz idivb mov xchg in in sub lahf adc pop cmp mov pop (bad) mov mov fwait mov adcl stos pop scas push inc mov cwtl fsubrs cld add or int3 xchg mov mov mov lods jne leave scas loope mov xor cmp incb (bad) icebp xor mov sbb cmp repnz sub cs lcall sub add push movsb or (bad) pop imul xchg mov cmpsb mov inc ss push pop lods test fldl2e cli push sti push mov mov jae movsl or pop sub test or rcrl decb push in push push movsl repz push popa cmp pop xor repz add push xor repz pop jle loop sahf jle int3 icebp inc out add pusha and mov xlat stos dec sub cmp cld cmpsb fstp cmp mov in movsb fcompl hlt pop outsl scas dec mov push mov outsl sbb dec sub add add lahf push sbb sbb lcall mov out ds inc jecxz insl data16 bound clc push cmp (bad) (bad) lret lahf or loopne or fsubs dec mov test ds pop jp xchg mov mov pop in (bad) mov mov jnp cmp (bad) (bad) ja xchg das xorl cmp mov add and mov inc aaa and mov jg loop ss jp cwtl pop jg jnp jo mov das jae dec add mov aad sbb repnz insl idivb movsb lahf jmp mov lahf push jb lock (bad) cmp aaa (bad) out jp and xor adc jge dec loopne xor in sbb push cltd jae shl and sahf adc push call sti inc enter pop mov xor imul mov repz and inc aaa mov test mov test mov cmc in pop cmc ret (bad) mov or sub lret lea outsb dec mov jo pop jge fistp xlat pop int inc pop mov lret sahf or xor je popf (bad) xor push movsl add mov push cmpsl fidivl inc adc cmp mov or jnp in scas pop adc xor xor fcoml inc push inc jno les sbb les repnz mov fwait mov mov inc movb push xor xchg sub flds pop xor fs gs iret mov dec inc xchg xchg or (bad) mov fild int3 fdivrp push fdivr push adc xchg test test outsb cmp sti add cmp (bad) cli mov jge test (bad) (bad) mov sub xor push jns push push (bad) lds jno inc dec sbb insl fisttpl mov (bad) mov mov xchg aas jl mov into push cmpl mov ljmp enter pop fildll sbb fucom fisubrl add insb fnsave inc shlb pop add aaa repz mov icebp or xorl push cld mov sub jecxz fs pop mov ffreep in mov pop repnz cmp inc adc mov pop je bound lea outsl cwtl sub lcall outsl das pop std push ljmp pop clc movsb scas lods test repnz mov je cmp int3 xor ret pop mov mov mov mov loope fbld push sub mov fidiv mov push jae xor mov daa jnp je sub enter lret sub push imul insb movsb mov cmp or push lret jecxz ds outsb jge dec mov pop add mov (bad) jno push out sti adc insb outsb loope inc xchg sbb adc adc inc movsb loopne xchg mov cmp les aaa pop fisubr xor mov stos and (bad) cmp inc out adc stc pusha jo out movsb sub ret outsb ret mov mov mov mov call push push sub in (bad) xor lods mov xor or shlb mov inc sbb jb ret xchg adc and xlat loop mov cld xor mov mov ja mov movsb in scas sbb and (bad) xchg add dec cmp sub sub lea pop cmpsb movsl pop adc ljmp lret jo mov vorps mov js ret aaa or clc fs mov or daa fnstcw jmp jl and fwait aam sbb in in mov mov (bad) cmp out outsl mov sub xor aad push daa movsl ss push cmp add rcl addr16 popf arpl aaa jae pop fldcw push outsb outsl in int arpl xchg mov (bad) push adc dec push cli inc push mov test rorl mov push push sarb pusha je fldl push and dec cmpsb push push cmp xor jnp jbe out pop mov ficomp dec dec and inc mov add in cmp lret ret (bad) lods jnp dec push push pop cmp xor mov (bad) mov push frndint xchg testl in insl lret or sub adc or sbb mov insb subb dec movsl push or movsb push fcmovnbe cmc push pop insl fist jecxz push jo (bad) in popf shll push fsubs sbb push pop xchg jge aad pop mov ja notb mov jo cmp fcoms int mov jecxz xor mov cld loopne shl aam cs jae adc enter imul movsl leave cmpsb and push and xlat jmp (bad) in sti int inc cmc fisttpl dec or sub stc cmp cmpsb cmc enter sbb addr16 mov pop stos push stos pop stos sub cltd dec push fdivl les (bad) mov sub dec add fistpll inc xchg outsb jb movsb repz dec out inc arpl mov mov dec cmp mov mov mov and fbstp (bad) aaa or pop sti fiadd adc stos das inc insl int leave aaa iret sti out bswap rclb adc (bad) push mov out push push dec dec pop fldz push add dec sub (bad) xchg and and sbb rcll lods dec push and int3 sub imul push test xchg imul fisub (bad) mov (bad) pop xchg dec mov mov and ja add lods (bad) cmc loopne sbb inc xor lods loope jmp scas mov fdivr fsubrs dec scas je (bad) pusha data16 lds mov or int3 aad xor mov mov adc test xchg dec pop xor xor xor outsb and push je std enter mov push daa xor mov mov aad sub sub (bad) jle jbe jns pop adc lods clc sub add jmp mov lods mov cmp push flds out jbe testl xor sbb xor test jmp test movsl das lahf hlt aas fild or and stos cmp lret mov mov dec dec popf in xchg sbb sbb jle xor mov les lock lgs data16 leave jae mov pop mov test leave mov cli add inc xchg mov aas sbb inc ret popf xchg cld cmp pop sbb js and lea and hlt push rcrb mov mov dec int3 dec cmp mov arpl push je,pn xlat push fnsave adc push xchg lods test loopne (bad) xchg xchg or push push (bad) push sbb cmp and add cmpsl mov xchg int3 lret sbb and sahf rcrb aad mov inc test adc shrl dec mov sbb scas (bad) outsb xor gs mov pop stos mov mov out lret (bad) xchg leave in mov sub push daa sbb xlat jg mov xchg pop test dec mov pop inc insl rcr hlt js xchg push xor cmpsb test or out inc add sbb jbe or xor jl out (bad) jne ss push adc ljmp movsb mov push and pusha (bad) xlat addr16 xchg adc movsl es in mov icebp adc push pushf dec jge in (bad) xor xchg jno dec je dec loop sahf and dec sbb fyl2x (bad) (bad) sub repnz pminub call popa scas sub enter mov (bad) cltd push adc mov ljmp outsb mov xlat or mov scas sbb mov (bad) idivl sbb hlt or dec ret jp cmpsl idivl lods adc add je mov (bad) out jo out lret and loopne lcall aad pop nop in movsl lods scas insb inc testb jnp fs int3 flds mov les jge adc mov adc lret inc xor xor jne jmp scas adc pop movsl ret lea jne push mov out (bad) cld adc (bad) cmc adc mov dec (bad) rorb aaa or ret mov jp insl scas jnp mov in mov push sbb cmp dec dec dec pop loope imul mov sbbl cs popa repnz repz mov rcll jns pop pop sarl dec mov pop scas cltd xchg iret insb ficompl out std test xchg popf or stc nop jns push jno into sub push rcrb xor pop lods aad ja nop into iret std nop daa lcall mov insl mov lret pop pop xchg repnz jecxz or mov inc icebp and and cmp popf cwtl cmp mov cmp xchg hlt sub pop pop cmc les lock jmp mov dec mov add into sti and mov int sub xchg (bad) div sub outsl mov outsl dec lock mov sub (bad) jno out sbb push mov jnp or movsl lret mov pop fst and jb lods out mov int3 repz sbb sub mov scas iret lds mov ret test and imul into jnp and aas repz dec hlt daa out jl aam outsl mov mov sbb dec mov out cmp das (bad) gs xchg call in rolb xchg pop push daa and and dec add mov xchg mov push xor scas sub les add shrl lods divl sbb test jecxz leave push daa sbb cld divl push enter aam or lret dec xchg cld ds adc mov in push jp jecxz subl push insl test lds sub mov cmp lcall dec and inc shr and test test adc mov mov sar mov mov mov jmp int3 ret lea cmp scas xchg xchg add out add int3 push adc xor rclb lds add cmp or add mov insl fmull leave xor mov fisubl push mov xor rorl adc add and or pop insb inc add or mov rorb pop pushf in dec cli ret mov xchg ja mov dec popf daa jp and hlt std test out inc je fldt icebp (bad) repnz jg mov stos hlt sub movups push cwtl xchg adc out adc mov sub loope shrl clc sahf mov or loop and loope xchg xchg mov fcmovu lods cmp (bad) or xchg mov into push gs test mov scas jge xlat lock (bad) jg cmp fdivrp sbb mov (bad) push mov mov push and bound push cmp stos xor cmc pop in rcl les inc test mov jns dec ret push adc mov lret inc loopne std mov cmp jmp add xchg movsl xchg xchg sbb add cmpsl inc out in subl xor mov les outsb mov xor daa push sahf push mov jecxz dec scas inc cld xchg mov in jle out js mov ja jle lods ss pop stc sbb pop (bad) dec (bad) inc or xor pop inc push add rorl lcallw jle and dec out jp fmull xor test popa sbb xor leave adc xchg pushf shll popf jmp mov pushf sbb mov adc (bad) xor outsl cwtl mov gs push push jmp mov adc stc out call and ja cmc sbbb mov (bad) jae adc jne scas and ret and fucom out cli in jle xchg adc loop sub adc and mov xor dec xchg sub jge fbld cld sbb mov sub imul aam in imul jo push jmp mov addr16 xor sbb ja sbb daa clc pop repnz lods outsl rcr mov clc pop lahf dec iret jmp imul jns cmpsl mov and cld pop and or add adc divl dec ljmp pop bound rcrb mov inc (bad) cld xchg ret pop xlat (bad) test js cmpsb jl std mov popf aaa out push xchg pop jbe sbb sbb mov lret and (bad) (bad) in jae sub xor mov inc xor cld pop rclb push push mov leave cmp push adc jnp or xchg push sahf xor ss pop les lcall or pop inc popf rcrb int xor dec int push mov mov popl inc push inc dec loopne mov jge jmp fiadd test rclb fwait rorl cmpsl mov lods jae (bad) ljmp push jno outsl dec xor rcrl mov xlat xor rcrb jo push pop add test mov mov into dec jno shlb hlt stc les aas ds imul or test mov mov iret stos jae cltd pop pop mov leave mov push adc push sbbl pop cli pusha mov pop leave icebp inc xor xor pop mov fmull sbb movsl adc jbe rol inc cmp add lods sbb lcall push (bad) lods adc (bad) clc cmp push das std fnstsw std adc call mov sahf int pop push mov in sub sub out popa clc push dec fbld mov push mov insl bound sbb dec pop fwait lods mov jns and mov fwait cmp fbstp test arpl fcomps insb arpl or imul mov dec mov mov into dec stos int jno insl mov mov in push or or pop inc lods lret leave mov (bad) ficom insl in aad insb inc cmp insb and push (bad) mov enter pusha mov scas loopne scas inc je std jns add dec psrlq sbb ficoml jb xlat repnz fwait sub mov adc push in sbb inc push cltd pop movsb jbe xchg mov fild push in jae add pushf cmc (bad) sahf stos fcmovbe mov cs or pop mov jae fcomp and call jae inc aad push syscall adc mov out xor ja rcrb int lods ret cmp popl lahf jmp pushf movsb aaa (bad) inc pop inc mov rcl xlat pop mov xor sub repz xchg cmp test scas (bad) jl stc mov in inc xlat outsb and test and and into xorb mov pop fldenv jnp orb adc sbb pop aam (bad) jp dec xchg fisub xor and sbb sarb pop ret loope stos jg jmp sub push in pop fst (bad) push dec jle rorl call or ljmp cwtl cmpsb jno repnz mulb jns mov sub cmp les or popf ljmp ljmp pop push mov sbb pop push jmp mov cmpl fisttp stos lds insb out mov jb dec push sub pop push data16 push xrelease cmp pop in xor mov fsub and mov sbb sbb test bound pop or pop xchg or push aaa push inc movsb arpl mov and mov int nop movsl popa push cmpsl inc fwait mov cltd (bad) sub xor sahf mov jno test sub cmpsb pusha test ja std int3 mov ss mov (bad) jns in pop xchg add dec in adc sarl inc inc lods ss mov jmp push adc pop sub (bad) in add flds movsl sbb imul fldt push decl out mov popf test ret ret mov cmpsb es fcmovbe into and xchg mov test inc jae push cmpsl mov mov add xor in pop push mov jge jecxz sbb adc popf enter sarl imul mov scas jae dec xchg sbb fwait push adc sub add push call inc push fistpl push mov mov xor movsb xchg enter ja mov jle loop pop popf jecxz insb int cmc push lods out pop or cmc clc inc sar mov push jecxz aas out icebp std push outsl inc cmpsb dec jp daa and xchg jmp fimul mov (bad) stc add adc mov mov outsb adc mov stos pop sub mov sbb stc xchg iret inc mov fcomp cmp pop call cmp popf ror cld inc and ljmp cmp hlt mov adc mov outsl push and xchg insl jne dec cmp mov push or cmp mov xchg xorl enter (bad) xor iret movsl sbb test popa sub and jns adc xchg mov dec sbb pusha xchg mov arpl pop mov cmc sbb inc pop out ret out mov cmp xchg bound adc pop arpl test pusha ss push dec pop sbb xchg push cmpsb mov gs out in push fwait xorl xchg rorl je xchg cmpsl movsb cli lcall cmp pusha mov int xor mov or mov push inc lret stos pop xchg mov aam pop dec es adc or mov insl cs push lock jne,pn aaa je fcoms js cmpl xchg out jp inc mov in pop ja mov xchg cmp test test or nop pusha pushf add repz out xchg rolb icebp cli int3 insl pop cmp or sub mov pop cwtl pop mov mov mov mov scas mov test cmp cwtl xchg lahf lcall out mov cmp lea ss cmp mov jge dec popa adc das (bad) xor xor test jno in outsb mov pop jb mov sbb test std ljmp mov pop in pop out xchg jne icebp xor ret (bad) adc pop push ror iret jae adc inc popf dec push fwait outsb jne sub adc xor push out cmp cmp in into cmpb sbb jb ss insl mov (bad) leave adc iret int imul ja sbb loopne inc mov sbb sbb add sub fdivrl fstpt cmp jmp out adc inc sahf fistpl insb and sub out jp int3 aaa je xorl es rorl and mov pop repnz (bad) push or dec ja int int3 or or add andl inc in mov sbb ficomp sbb push mov dec pop lods fstps sbb add add mull notl jns cmp test mov test pusha lret fsubrl je in daa mov mov inc (bad) aad faddl ss repz sbb cmpsl and lcall adc mov jecxz pop out enter push push xlat lcall (bad) js mov xor insb inc jge cmpsb shl int3 inc mov fs or jge out cmpsb lahf mov (bad) xchg int push pop jl clc in mov call adc in insb loop ficomp outsl cmpl cmp popa pop fs in int3 pop xchg movsl mov fist inc iret jns mov cmovno sti add mov fcomps mov push cmpsb mov in inc outsb sbb xor sbbl mov lods dec xchg mov in lret dec dec pop mov fs xchg pop mov pop mov test sbb push lock inc jne add sub dec fldt arpl lahf shr inc lret insl push jne iret mov popa cwtl loop sahf xchg cmpsl adc xchg adc pop out ret scas mov dec loopne or jb test nop outsb dec push inc roll jns pop nop mov mov gs in cmpsl mov ret jb int cmpsb inc into xchg pushf push div or pushf sub fcomp roll rcrl pushf movsl in lods insb pop inc xchg imul lods out mov inc out ja fs add subb adc lods shll pop out bound xor mov fstps in or push out and xor stos mov push xchg aam sub pop sub push mov in add jno jecxz or jne lret loopne (bad) jne in aam (bad) lods push js mov jns jns lahf pmuludq fdivp ficom (bad) xchg xchg sbb dec ljmp mov jge or (bad) btr je pop ds sti sub inc sbbl fs pushf xchg dec test xchg int pop mov mov mov dec ljmp sti loop dec dec push jbe loop das mov les xchg add gs cli mov push out lods sbb popa or (bad) push mov cmc xor jbe std cs pop mov fs rorb push jl xchg adc mov fwait mov (bad) mov pop int pop aas dec addb in push mov (bad) cmc xlat or cwtl mov lods icebp xchg pop das jno adc and and cmp and mov mov lods (bad) cmc outsl cmp push fincstp fcomps xor adc mov xchg dec push inc test loopne (bad) popl sbb adc mov imul mov stc mov arpl xlat jo movsb inc dec mov rcrl into pop repz sahf and cwtl sbb xchg xor fistp (bad) mov movsl cs adc fstps xchg dec es aad inc xchg push popa mov lahf mov jne lea inc out jno cmp mov shl jnp lea (bad) jo imul pop (bad) xchg add or xchg test cmp ficoml pop lods pop mov jbe cmp loopne iret cmp lret stos hlt sti ss jb pop imul xchg mov push sub and ja fcoms and data16 sub pop aas ds (bad) out repnz inc xor int push lcall (bad) fisubrl in mov pop lods lret dec test mov (bad) jbe pop ds mov push mov adc push shlb xchg cmpsb add addb sbb pusha lock sbb js jp mov fucomp mov mov nop fstpl frstor imul jmp inc lds (bad) mov add mov push mov pop test fimull bound dec out cld fucomp mov mov arpl movsb lahf shr int3 add push xchg repz int dec xchg int3 or dec mov gs add push test mov mov scas in dec lock cmp dec push aam js mov fcoms stos test mov popaw fsubrs dec sbb call pusha sbb inc sbb ja faddl mov cltd into mov pop pusha adc push testb xlat xchg xchg xor fucom fnstcw xchg xchg mov mov std outsl (bad) stc lret mov data16 imul in pushf jbe inc pop adc cmp int daa test mov xchg sbb adc popa pop dec xchg cmp subl in lea dec pusha addr16 pop add xchg lock mov (bad) jmp cli jle fbstp fcompl pop scas adc mov lds jbe inc js out movsl mov (bad) xchg aas pop test mov lea jae ja dec (bad) xor scas rorb mov xor cmpsb ljmp lcall (bad) mov inc scas xchg cmp ret mov lahf (bad) mov movsb enter popf mov fcompl data16 ret insl aas pop cmpsb int test inc dec fist dec push fsubrs (bad) clc mov sarl (bad) in movsl clc push outsl dec icebp loop mov test fisttpl cmp fwait movl xchg push pushf xchg test sub pop test cmp push jne sbb lret jmp daa iret clc adc lahf or mov push or mov push cs or push push xchg add loopne psubd jle push jmp mov xor or jbe mov mov dec loope (bad) adc lret mov imul in lret lods into adc lods int std mov push arpl (bad) outsb mov int3 jns mov ljmp jne lret outsl mov inc rcrb mov stc or adc mov repz lahf mov mov xchg mov pop jl daa mov mov xor pop aaa gs lahf pop rclb test std mov insb sbb dec mov push ret dec (bad) xchg mov inc neg push jg (bad) test int3 push mov shll test loopne xor ds xchg cmp sub push dec in fidivrl jo aaa imul fdivl xor mov fdivl movsl jne movsb gs mov ljmp inc in adc fdivl (bad) mov cmc sub les stc in and xchg mov (bad) sti mov iret mov rcrl mov fisub xchg loope mov jg scas gs std mov lcall pushl lcall jle mov data16 inc sub push fmuls cmp sti rep sti imul imul push push inc mov adcb fs push mov xor (bad) mov pop into iret pop sti test (bad) push mov push sbb sbb fiadd mov dec or in movsl mov pushf xchg sub test rcll cmpsl icebp icebp sub mov repz sahf push (bad) jno hlt dec mov jo fs push or xchg sbb inc in sub es sub outsb push pop and sbb hlt loop xchg frstor jecxz cmp mov push outsl (bad) out mov cld out cmp xor mov imul mov dec mov mov (bad) (bad) cmp cmp jmp shrl das ja mov call imul push (bad) mov int pop or pop pop lock sahf cld (bad) shrl lods mov dec pause dec push mov mov push xor repz das inc cmc icebp pop push sahf xlat leave imul xchg in leave and nop push sbb dec clc dec pop xchg cmp xchg (bad) cs sti xchg inc dec lret or test push bound (bad) loop movsl pop movsb in dec mov add add add ret xchg dec inc xor js xchg loope sbb xor in pop addr16 jecxz xor int xor testb orl dec in jb xchg xchg pop xchg icebp pop out jmp int jg mov and xchg aaa xor add ficompl out in sarl imul sti sbb in mov inc and lods add test or fcomps (bad) jge sub jl jge call dec out bswap movl out gs mov fcoml fdivl aas cwtl and std and adc mov dec arpl push mov xchg xor jb mov jnp xlat frstpm(287 cmpsb pop scas xchg mov outsb hlt inc je aad mov lahf lock repz cmp rolb test (bad) dec xchg or pop sub and xor mov mov mov sbbl xor ret jg loopne and aas mov fildll fbld out xchg repz in outsb cld xchg imul mov jno lret jp ret sub popf mov push insl pop jmp mov and idivl and loope repz neg (bad) pop in lods add std pop dec scas int3 cmp push iret iret jne cmp in in lods jns sbb mull xor inc mov mov inc xor push mov inc aam rcrl jecxz out sub sbb and call push ffreep dec push mov inc push inc rol add test out and mov sbb stos mov (bad) in jmp js scas xchg mov test pushf xchg adc mov mov fxch jmp mov cmc xchg (bad) std mov cmc ss jbe mov cld les xchg pop push jo ja aaa lret mov imul aas (bad) cmp or inc add je pop or roll and push adc out mov testl dec jmp inc std stc inc mov mov dec push popl inc adc push inc lret inc lret fcoml arpl mov xchg popf inc cli and cmp jmp (bad) stc into jl mov jae pop insl mov cmp mov xor (bad) mov enter and xor data16 sbb dec push aas test aam mov xchg jnp pop jecxz sub ret ljmp mov mov pushf jne mov and decl call dec lods jg ljmp or and in in scas pop arpl mov mov push mov ds ret dec js int pop lret ljmp cwtl je xchg (bad) adc aas sub fdivrs cmc pop push jecxz (bad) stc and sub cmp sub fcompl sub cmpsl mov jge mov jbe xor mov cwtl mov or ss push jg dec fldenv adc dec (bad) adc or iret test test jo mov dec je xchg outsb repz es and js add leave inc iret (bad) adc xor sub fstpt into fstpt ljmp das ljmp scas repz pushf jle les sub aam arpl xchg jp lret adc cli mov fildll mov (bad) (bad) jl fild mov gs aas cs popa dec mov pusha jg outsl aas sub iret (bad) negl fistpll add es and lods movsl push dec mov cmp and inc push cmpsb ja mov imul leave cld hlt lds mov pop pop jns popf addr16 jp inc call mov sbb dec mov ds sbb push adcl jecxz mov xchg cmp xor ja movsl push xlat cltd mov lods into lock xchg in pop fisubl fwait xchg pop xchg in fwait insb pop xchg arpl adc mov out push js les lret mov test lret bound into clc fiadd insb sbb push xchg incl decl sar ljmp into mov jge loopne jne or jns movsl lcall mov inc popf add cmp sti pop repnz ds out loopne ret movsb lods pop xchg movb insb dec cld cs dec jge lret mov dec aam jno xor cmpxchg cmp or pop hlt lods push fcmovnbe push add sbb xchg enter ret jae leave jp and xchg xchg pop pop hlt jno movsb aad xchg add xchg aaa adc loop cmpsl aam mov jl xchg not xchg mov pop (bad) icebp lcall mov icebp inc in imul fucomp in imul ret add xor insb mov shrb cltd xor xchg gs movsl andb xorl loop dec (bad) dec clc jo pop scas call addr16 cld cmpl fdiv (bad) imul out cmpsl imul fmuls popf arpl adc or mov es xchg enter in dec out (bad) lock outsb aas sti mov loopne cmp cld loop scas cmpsb jb int3 xlat jp ficom inc pop int3 mov out or add (bad) insb cmp jne push xor (bad) jno or cltd stc jo sbb hlt mov mov js test push fisubl push (bad) pop popf out sti je dec push popf adc add mov adc push jns push mov jo mov mov jnp in adc leave outsl push lock cmp pop cmp mov fidivr fidivr dec hlt aaa pop jge std das xor jp in out js cmc jle push (bad) push jno fwait mov or lea repz shrb insl fnstenv scas and add inc inc dec lods push sub add adc lods insl test mov test rolb push daa imul lahf mov lds lahf mov pop in pop ds adc lret jb jno nop push inc rorb andl dec ret jb mov cmp outsl ror ss shlb leave out loop push daa imul das rcr mov pop insb jnp loopne mov js adc fnstenv jp call adc out pop mov cltd jmp mov cmp sti adc out mov jecxz lea div lock sahf aas mov pop leave loope loopne addr16 rorb pop jg lcall dec out mov lahf ds cmc (bad) jp rolb test cld fdivr int fsubs sbb subl jne or push leave repnz dec cld push enter sub jg mov fistpll mov pop or fcomp and cli jns mov inc cs mov popa outsl rcr and cmp push outsl pop fcmovb fsubr (bad) jbe jmp and push test add sarl mov stos lret mov push lcall xchg sahf sbb lret cwtl fist or bound (bad) ret push push adc add aad dec mov std lahf fucom mov clc outsl sbb fwait sbb inc and jno jl or lret inc insl jnp fisttpl push int3 pop mov clc jo (bad) pextrw add movl nop loop push push xchg dec jl lock fcoml mov xor pop jbe out inc add sub ret inc sub mov mov xchg sbb hlt leave sub out sbb fcom push sahf out into inc mov test xor mov mov in andb (bad) xor jbe dec jns push xor push jge aam jno dec mov out pusha mov sahf mov rorb and popa in rorl nop stc (bad) xchg pop mov cs push idivb test mov out add xor sbb lea ljmp fidivrl (bad) in cmp add pop loopne inc hlt lock mov pop mov adc sbb xor repz std add nop (bad) ja pusha push dec lods mov jge enter dec mov or cs sub cmc xor pop adc jae cmp jge test xor loopne or repnz fs (bad) hlt das pop stos test cmp add mov pop mov jae cmp cmpsl sub or test inc sbb mov scas ljmp mov inc xchg sbb mov and in sbb sub push cli imul mov mov adc pop sub mov mov stc jne (bad) mov push sbb das xchg stc lds pop xorb sub dec and pushf jp mov jp push mov mov mov in jns mull divl sbb rclb shr mov fcoms adc push adc mov arpl mov jmp sbb movsl loopne cmp stos fdivrl xchg outsb iret ljmp arpl pop fisttpl imul mov xchg jne mov lret (bad) dec cmpsl fcoml mov mov mov gs hlt (bad) dec mov mov leave and leave out cmp pop dec insl mov les cltd movsl lretw lods xchg cmpb insl outsl xlat lods xlat mov pop pushf divl fs xor sub dec mov push mov clc (bad) jmp push jmp hlt jmp dec aas sbb lock (bad) int and mov lods test (bad) aaa into jp sbb adc push mov push aam push mov iret jecxz ret add jge and sahf out int3 adc fist imull jge cld push loop es hlt (bad) or sbb pop mov pop enter mov test (bad) cltd test cmp icebp sub sbb or std jae dec sub mov out fadds test jno,pt sbb iret rep lods stos jl cmpsb xchg mov jecxz and aad sub cmp sbb test jne push sbb sbb push lock jmp lock sbb sub iret lret hlt jmp (bad) jl ds enter inc ss stos (bad) xchg movsl outsb mov jno inc stos sbb test les scas leave (bad) mov imul sbb movsb or test pop jo adc sbb and sub sub into lea xchg ret jns inc lahf shrb aas (bad) clc sbb lods jge int dec push mov out repz daa xchg push jge jle cmp sbb push cltd pop gs out mov daa xor imul jb fwait out out repz mov lock mov sbb jbe iret push stc dec addr16 inc mov fcoml mov dec in es or lcall loope lds loopne repnz cltd push jg sti aas pop int int3 jmp aas cwtl fstpt mov sub cmpb insb cwtl popa inc repnz mov xchg cmp push push push scas jl mov les mov outsb pop xchg fs loop (bad) pop (bad) cli lcall sbb rcrb mov bound into sahf loopne xchg lahf clc imul sbb popf repnz aaa xchg cwtl and push fwait push rdpmc insb mov inc (bad) gs into xchg sub sub push scas bound lea (bad) mov repnz lahf cmpsl lret sub push adc stos ds insl jg mov sbb inc leave add and jge cmp into jno mov jae lea cmp in daa xchg aas call push in sub mov jmp mov aas test jmp and subl cmp mulb stc test imul mov roll add dec inc or nopl cld out sub pop xchg sbb xchg and xor (bad) in dec iret xlat pop ja xchg inc es test scas mov pop loopne mov push push push aad pop insl imul int3 das pop (bad) lcall movsb mov out mov movsl sub sbb repz gs test mov insl movsl mov fcmovnb out mov cmp enter inc mov stc shrb pop jmp rorl or lods call dec test mov cmp fisttp jmp xor push xchg cld cmp jecxz aaa sub movsb and mov xor xor xor dec xor jge pop ja insb jl (bad) xchg xchg mov fistpl jb xchg fmul inc mov gs test dec roll dec xor jb mov aas mov (bad) pop divl orl xchg daa test jns mov fistpl enter (bad) les dec test jp cmp test repz mov (bad) dec adc movsb jno xchg enter or xlat jne push add push gs (bad) sub jbe test inc shl mov int3 les inc sub adc jne adc (bad) adc jp negb orb addr16 pusha push push mov sti sub push lcall sbb fimull or shr push test scas clc pusha lds sub fs call lods xor loop xchg insl ja outsl test adc mov fnstcw push ret lret pop aas sub xchg loope push lock inc push repnz dec inc add sti icebp adc and int mov xor sub movsl push mov mov inc scas or mov cmp out add mul fdivs jb jne fldl2e dec das aad fisubl pop roll xchg jg loop sbb enter repz bnd or jle cmp in cwtl ja fistl inc mov shll test (bad) bound lret jl push out jno addr16 jns push in mov fdivs xchg jecxz sbbb lods lret adc push sbb cmp or inc icebp popa xchg jge and pop mov es and jb repz bound lret jae dec pop sub xor enter and mov or inc dec daa cmp jmp push xchg push sbb pop fiadd push mov pop sub mov jae dec call bound adc sti inc pop loopne mov sub aas mov inc mov mov push lods cmp cmp imul mov mov bound ret mov rolb (bad) fisub xchg orb cs ds push jno xchg xor adc mov xchg (bad) js jmp (bad) lcall cmp or imul sub insb push xchg (bad) fmull pushf or je mov (bad) int pop in inc fs mov sub dec cltd stos repnz push xchg stos ret pop sahf outsb inc (bad) lea xor cmp gs int3 fmuls in cmp enter imul xchg es inc in (bad) roll ja pop popa popa movsb lea bound in mov xor adc xchg sub push in pop out sub mov shll aaa repz pop mov mov pop addr16 pop sarl mov and sar sarl mov fxch repz mov lea mov jo out mov push adc arpl fsubl mov aaa out (bad) adc dec cwtl jg fnop imul push stos inc sub and jb das repz cmp ds sub pop stos push jno dec lret xor mov cltd pop sbb lret daa pop sbb cmp or lods and loop (bad) jb push nop lods mov popf leave fwait inc fildll jge insl sbb out pop add mov lret cmp mov mov das je mov rcrl in jmp mov je xchg xor mov or in (bad) mov pop (bad) cmc and jo outsb xor fild mov aas aam out sbb inc cmc pop dec push in in addr16 gs mov inc push mov push lret mov inc dec sbb xchg mov lods stos test bnd sub push xchg cmp aaa sbb fidivl mov ret bound push jne dec push push inc shll mov xchg int3 cltd mov dec dec mov (bad) jne cmp dec aam push (bad) or mov mov pop js mov lcall cmove mov sub push test adc test pop cmp mov movsl sarl fcmovb sbb xchg fist (bad) adc pop push or scas push jno lods ljmp inc mov pushf test ret push (bad) xor push cmpsl aad push cmp xchg xchg mov gs xor add pop cmpsb aaa call push fmul fdivrs stc xor (bad) repz (bad) divb nop sahf add adc jge inc jno inc mov push jb mov and dec push pop pop (bad) int3 je cmp test stos pop mov sub sub movsb imul jae in mov jo pusha add stos mov ret sub jl movsb mov popf xchg gs push ret dec mov (bad) into add jne addr16 insb imul sbb mov cvtps2pi mov fcoms pop lret aam mov loopne pop mov mov and push outsb cmp mov mov pop insb jle idivl jbe pmullw push jnp mov push stc sub das pop je xchg into ret and push mov aad scas (bad) psllq jl gs mov pop or jp pusha and xchg add mov fistl mov add xor add dec in mov scas pop xchg stc sub xchg jecxz cmpsb scas cltd mov lods pop arpl fwait dec adc lahf insl or enter adcb inc sarl jmp push stos or inc mov imul pop push test pop dec jl and (bad) pushf and cwtl mov inc (bad) (bad) outsb arpl xchg or adc daa sbbl pop mov bnd lods cmpsb movsb jl pop out mov jo xorl mov les push (bad) cmp pop icebp hlt sub dec div push cmp push jns mov aad aam pop in (bad) (bad) pop mov mov ds lock pop repnz push push (bad) aaa adc lods cmp mov ret int mov lret push pop scas std je adc inc mov mov test xor xlat dec pop or (bad) cmp gs mov fmuls and push lods sbb push lods popf scas fnstsw inc xchg adc jne cwtl jge pop (bad) (bad) xor inc (bad) or or enter int3 out cltd mov inc inc mov mov mov cmpsl lds jb mov into lods push sub aas test outsl clc xchg out (bad) hlt cmp mov inc sbb mov sbb divl cld mov cld fcomps sarl and imul ret gs mov sahf fstp shll fdivs dec mov shlb push mov xchg jne loopne mov out mov dec (bad) in sahf call int3 and mov or xor outsl and or cmpsl movsb mov push outsb je nop lds cltd and es sub jo jmp or imul sub movsl mov adc cwtl sub adc push mov fdivl fistp mov dec push dec test pop insb std mov shlb cltd add sub cmp jge lock lds jecxz mov mov jecxz hlt stc addr16 or pop mov push pop mov loop or push (bad) je mov clc es jg aad jo sbb icebp jbe outsl in imul sub inc adc sub mov adc xchg das mov xchg and adc jno imul mov leave (bad) out sbb lds cli pop jg lods sub or mov sub mov (bad) imul or adc iret inc jl int (bad) std loop das mov sub aaa imul (bad) add push stos or pop cmpxchg insb out jmp xchg dec and stos ljmp push ljmp call jle imul (bad) div inc jg test data16 jmp fcompl aaa jb stos es jge out outsl test sbb outsb stos push cmp push mov xchg gs mov cmp jno adc inc mov jmp sbb popf or and inc push icebp xlat es addr16 mov loope popf dec in push mov dec cltd mov push js dec loopne leave sub or cmp fmuls mov sub popl into js cmp xchg (bad) dec jne outsb jbe mov cs out sarb fstl inc push xchg jnp mov sub and (bad) xchg mov fs (bad) jmp mov iret in jmp jle (bad) iret aaa push inc sti data16 mov fisubl cmpsl xchg inc (bad) rclb xchg ljmp iret mov xchg jecxz shr loope lds cwtl jecxz repnz sub cmp out ss xor add dec xchg pushf push dec inc movsb or shlb gs fucom cmpsl lds outsb gs jno imul pop faddl or pop add mov int imul icebp stc das inc lcall ficompl out icebp sahf adc push imul xchg gs dec jbe add rorl shlb lods rcrb insl aad and (bad) xor shrl push mov cmp loop,pn (bad) jg,pt mov outsl dec aas je pop lcall dec sbbl imul aam lods jp xchg divb gs cltd dec test xlat sub lret xchg sub dec sti xor stos in jne sbb popa cmp int3 fiaddl stc pusha mov sub xor mov jbe rorb fidivl pop pusha dec adc fldenv xchg lds test mov sbb mov lcall sbb stos push popf fcoml adc cltd arpl xor inc sub cli mov into pushf jge in jae (bad) ret sub push call or jl sarb xchg mov pop sarl mov aas test in loope jbe and das lahf sar out push dec dec gs push andl out cmc in cmp jnp (bad) or xchg inc das mov ljmp ss shll sbb mov cmpsl (bad) push lock xchg fcmovb jmp pop xchg shll (bad) andl dec xor adc jge cvtps2pd mov cld jl mov jge cmp icebp inc shr stos orb pusha cmpsl sahf xchg sub sub pop fs add sbb push sbb ljmp insb shrl notl sub lods mov ficoml sbb enter xlat ss xor lods pop sbb movsl cmc mov inc in loopne add push xor rcrl movsb push mov mov repz jle cld jns (bad) push out (bad) fistpl lret ror loope add mov sti lret push mov mov (bad) sbb and push add (bad) fcmovbe sbb mov cwtl xor (bad) push sbb dec push test (bad) fidivl inc fildll dec lret enter inc pop je xchg pop sbb js in dec mov in and stos lock addr16 (bad) push pop mov stc rclb gs jb add lds dec jmp and daa movsl cmp aam and test (bad) testl movsl pop xor test gs sub push insb sbb jnp cwtl add push pop pop pop xor sub jp cli iret jne jns std mov pushl and (bad) loopne loopne addr16 jecxz negl fdivrl out in mov out mull lods jmp (bad) shrb xchg aad in mov into sbb mov mov out adc adc jo mov dec and mov xor sub mov or sbb popa lahf xchg sub leave xchg mov lock mov fistl gs add sub dec pop mov jns iret jb (bad) lock das ss fstl adc imul out fnstenv mov mov mov mov inc push mov scas test jmp mov push fmull push aad loop cltd mov push out mov xchg mov sub cwtl cli jno lahf (bad) fucomp mov out sti leave fisttp (bad) notb xchg pop imul sub cmp out fdiv fisubr out dec mov pop cmp rorb rorl stos mov mov dec adcb push cwtl imul jbe fisubr jp fldenv lahf insb jl addl push pop dec fisubr loop adc mov adc push push rorl pop aas mov mov je pop inc xchg pop divb pop test mov imul stos in or sub mov push adc popa es jne pusha xchg sub cmpsb (bad) mov cs sar push inc sahf in sbb lret mov scas ljmp dec cli minps repz repz sti popa mov adc fild dec ja cmp notb movsb sub repnz stos dec mov ds xchg std loop xor sbb sbb loopne test sti jnp jge mov fistpl call out cmpsb movsl lea push in and lret push mov xchg jmp push fistpll mov and xor xor fdiv outsl in xlat cli ret mov cmp push aad sahf frstor je sub sub lods xor rorl adc adc add mov leave incb inc int3 fistpll fisttpll push mov and cltd mov inc xchg in fdivs mov adc cmp xor pop push imul (bad) pop dec pop inc add in (bad) lock xchg lret add insb push push mov fldl int3 (bad) aad je lea fcmovbe mov push sbb cmp push add fldt gs repz jb jecxz test outsb xchg psllq dec sbb xor lret pop sub pop cmpsb xor or lcall xor js mov cwtl rorl pop insl xor outsl push mov jle pop mov mov out out cwtl lock mov pop jbe loop daa gs testb xor mov xor push bound cltd sub sbb cmc nop test sub loop pop jns ficoml insl inc dec pop add loopne push rclb leave pop mov hlt loop je repz jge shll out testb or push je (bad) jnp ljmp xchg pop pop imulb jle cs sti in mov sbb sbb outsl movsl mull iret mov scas pusha xchg mov out (bad) je jb dec out adc fldt pushf repnz add mov fidivrl jmp xor fidivr adc in loope mov stos das mov jbe jo (bad) push scas push mov js or xor push movsl cwtl jecxz mov hlt cltd out mov aaa cmp mov inc stc sub sbb out mov sti lret aaa stos lods xor arpl aaa inc cld push sub in sbb mov in sbb mov (bad) mov inc mov sbb push scas fwait xlat mov jbe xor cs cmp adc sub sub jnp or arpl and stc loope rolb lcall clc jb adc stc sbb add cmpsb xchg lods xchg outsl lods inc adcl inc jbe (bad) sub test jg mov frstor pop dec std je jne rol mov jl mov sbb movsl mov imulb repnz dec ds xchg fstp cmp pushf ret fsubrp cmp xor push push jbe cmp out dec add mov xor push outsb and leave fwait inc sub push aam lret and nop xchg insb insl mov pop mov (bad) cmc pop jg arpl imul fsubrs sub dec loope and push (bad) pop add adc xorl div rcll rcll out test sub ds jmp sub ret dec call pop imul cltd or clc inc in sbb dec or aam enter xor (bad) cmp cmp scas ffree pop push aas mov xchg int3 mov negl mov ds shl inc fs mov jae inc stos lds out jns jge in cmp mov jg test test sub mov popf pop je (bad) cwtl jns movsl enter cmp (bad) xor aad sub ror lahf clc or xor adc mov icebp mov sbb popa jecxz xchg dec xor (bad) ljmp push add xchg bound sbb lcall xor (bad) testl xor push adc cmc sub insb addr16 jne cmp and mov sbb push iret ja (bad) and mov push or xor ret mov ret mov xchg cs sub sbb jns fmulp aaa dec mov cmpsb aad sbb or xor cmpsb cwtl aad fnstenv sub mov imul (bad) push or popf cmp push mov enter jge add push repnz scas bound loop sub jl xchg cmp aas dec fiadd out cmp int3 cli (bad) jmp mov jne mov (bad) cmc out (bad) fist jno mov inc xchg mov dec ss mov jns test cmp ja ficom xor mov xchg add rorb test xor mov sub movsl sub pop js test (bad) insb sbb cmp mov jmp push (bad) cmp in jno out scas vmaxsd jmp lods dec test dec sub sub mov inc outsl mov shr (bad) cmpsl ljmp inc clc sbb jb inc cmp bnd push sbb fwait jne out xchg aad adc add sub movsb jmp ret fcompl jp sub cwtl shll jo cmpsl and popf mov adc add arpl adc push mov cltd mov andb popa imul lret and cmp in xor inc mov sub aad push sbb lods hlt int (bad) push dec loope and imul faddp mov jno jns xor or ret addr16 scas mov mov fstpt xor pushf mov pop cmp test lods mov adc cli pop (bad) ljmp ret (bad) gs jb lret adc sub lret jl adc push inc cs sbb enter in inc mov jb addr16 fdiv into fs mov rorl es xor mulb sti adc into lcall shll sub shlb (bad) (bad) jns loop mov les cmp (bad) or or lods push pop dec cmc sub notb (bad) mov mulb pop clc inc add bound les push rolb lods xchg je fs nop int3 andl xor jo xchg outsl xchg lds outsl inc jmp jg (bad) pop sbb test lret jmp lods nop adc fs xchg jns lods add or or xor in std lret mov dec js cwtl (bad) jb push fisttpll sbb imul aam test sub push lcall inc mov and jne xlat cmovle xchg add dec stos and mov ds sbb pop iret or fwait mov mov mov mov push enter (bad) out or jae scas andb push hlt push (bad) pop dec (bad) push jo rcll mov jmp push out lea adc lsl pop shl adc rcl xchg push dec andb or jnp push push scas push movsb pop adc iret (bad) pop sub and movsl mov call fildl in adc js and mov xchg dec jle xchg pushf and fwait inc stos sub std and repnz mov add mov dec or inc ds mov mov divb xchg push (bad) mov (bad) lods imul and dec push in pusha rcl mov dec popa jg in push loop dec push lods scas adcb sbb mov xorl push or dec adc sub mov popl or dec int lods add lods iret outsb push mov movsb inc in ds iret pop aaa mov mov out in call imul or or adc bound into lds xchg mov hlt xchg gs ja fnsave imul (bad) cmp sbb push rcl push jno sbb je xchg es or fcompl xor dec inc cmp xor xchg call cltd mov adc sub xchg mov push mov mov sbb mov or imul psubusb rolb push pop xor lods jae fcompl mov and mov dec cmc push outsl dec das popl pop sbb jmp addr16 mov js push fs mov push push lcall xor add or push xchg imul pop cmp (bad) pusha pushf fidivr dec mov push inc mov stos push push mov test cmp inc mov inc subl pop lock dec cmpl call loope repz aas mov pop sub pop xchg (bad) (bad) sub outsb data16 jle enter pushf jp cmc and rorl sar xchg je sarb pop rolb mov cmpsb and jne insb mov cmp mov lea fildl mov or pop insb in push cmp jne xchg test fisub cmp xor inc xchg sub int3 and and pop jbe in ljmp (bad) mov jg loopne loope pop jge mov aaa mov mov jl inc das xor arpl adc mov psrlw sub push roll insb fildll std mov imul clc mov bound inc mov xor ror lods jmp inc or sahf in scas mov aas mov test cmc xchg sub cs xor mov subl inc sub mov aad (bad) pop je imul mov scas lds arpl addl cltd bound test rolb pop (bad) inc aaa mov insl outsb pop mov rolb mov sbb rorl scas add mov ret loopne pop adc stos or adc add add pop mov loop pop bound imul pop add add pop jno out jnp je pop cltd sub pop addl mov and sub pop sbb pop (bad) push jbe mov dec push add rcrb inc stc out jle mov and cmp xchg mov fcmove loop mov data16 cmp and add nop aad push mov sbbl call jne adcl ja aad inc shr inc scas lds arpl add fs pop nop mov pusha mov les mov mov (bad) and andb sbb jne sti mov into stc in arpl jge cwtl push and test nop scas add (bad) out push inc push inc cld push inc cmpsb cmp out and mov stos pop in out sarl jno iret xacquire aas rolb iret movb mov shlb insl insl aam xlat fdivrl add push adc neg mov mov das aad xchg cmp pop mov push (bad) mov mov fisubrl das stos pop dec jnp lds lea sbb cmp lret push rcrl (bad) cltd outsl lods mov mov mov xchg jne mov lods sahf js iret sub (bad) (bad) out mov iret cld shrb call xor dec xrelease cmovne (bad) loope xchg dec (bad) xor xchg xor rol rorb add bound xchg mov pop rcl add pop daa xlat jnp (bad) out pop repnz aaa pushl in jle fistl mov pushf test in pop or in xchg xor aad scas or push bound sbb clc dec and mov mov mov aas sub cmpsl mov (bad) push sahf add adc jae cmpsl cltd mov data16 out stc cmpsb dec sub orb mov jmp sahf pop inc xor js lock jle sti cmp clc call mov push adc sub aaa popf pushf push xor xor cmp mov xchg (bad) push dec into dec pop nop mov add and movsl divb cmp (bad) xor cmp pop fidivrl loope add int3 imul fstpt jns fsubrl adc dec dec mov cmpsb jnp popl in jmp stc and or ret rolb pop fldenv (bad) lret in xchg ds movsb out mov fs or add ret sarb clc into xor rol mov and mov xchg sub add pop outsb push xchg pop lds rcrb push ljmp aad xor sub mov mov add push rolb sub int mov fst addl pop inc jl mov inc jmp icebp and in insl mov xlat dec and cmp rolb pop sbb call adc pop stos inc add push inc mov (bad) push add sarb jp stos xchg cld add aas jns lahf (bad) idivb (bad) shll xchg mov dec add inc fs mov mov sub jns cmp inc test pop leave (bad) mov je test cmp movsb cmp movsl push mov or fwait jmp add rcl inc dec jl push mov mov inc mov fisub add add push jbe jno iret xlat sbb jmp insb dec cmp sahf xor ret and fcoms dec in xchg sti xchg jl test cmp fisttp or mov mov aaa (bad) lods ret je fsubs mov insb ljmp or adc mov enter pop pop cmp rcll dec pop loop inc into sti cmp js pop das arpl cmp cmovae dec sub xchg mov sbb sbb sub sbb pop mov fimull sub pop (bad) or jp jecxz mov push push sbb std push push (bad) mov jmp jmp addl mov push mov sub push and dec arpl cmp aam xchg sahf inc cmc test das jl test sbb ficompl sbbb (bad) lahf xor bound xchg sub shrl out xor sub cmp pop add adc and scas int sub leave das mov std add outsl into loope in or lret orb out pop subl pop stc cmp mov (bad) sarb push test lcall xor (bad) sub in aas push ljmp lret mov icebp lcall (bad) repz aaa mov mov add jb loopne adc push push lahf pop cli es or push xchg jmp or scas pushf sti pop (bad) lea aam inc cmp or pop dec xor (bad) movl pop (bad) push sbb gs fiaddl mov cmp rol stos sub dec lret (bad) xchg jp cltd (bad) mov push add xor sbb mov fiaddl jbe jmp sbb dec pop sub or fbld dec xchg cmp ljmp adc sbbb lcall test lcall mov dec add test push inc arpl test popa push stc inc add add xor adc pop push popa daa dec push pop es lret dec scas push adc xor repz and pop lahf aas mov jne mov jge pushf mov test negb mov aad cli xor pop imul mov inc push push out lcall jl cmpsl das ret pop cmp fsubrl das inc hlt mov mov inc movsl dec adc (bad) xchg rcrb pop mov mov dec xor lods ljmp leave xor mov xchg sbb ret (bad) call ret pop nop pushf mov add push pushl setge xor and add ret or adc and xorl int3 cmp mov jl lods pop and xorl cmp lods cmp xor loop sub push sub and testl mov stos cmp stos fldt pop and stc push lock jecxz mov lods mov mov aad inc and or fdivp sbb lock fldcw enter mov xchg dec mov movsl lahf sbb or mov iret scas jg icebp xor das (bad) arpl divl aaa and dec dec xor fcomp mov lret aad add jb xchg out inc popa push cmp std fadd mov rcr pushf pop aaa ss icebp sub pop push inc xor pop push mov ss js inc movsl xchg out sahf andl sti aam in sub mov insl adc xchg pop dec hlt jl adc mov hlt cmp sar (bad) jecxz imul cmpsb dec sahf lock cmpsb jns add (bad) (bad) ficom push or inc movl bound or inc pushf mov std mov jge call sarb (bad) jbe cmp sub xchg test pop das push jp (bad) notl jae enter push movsl test jmp pop loopne sub push and xorl dec xchg cmp lret sub fs cmp icebp out negb mov lea adc push sbb and subb inc mov sbb cmp andl fdivl mov lcall into dec jae imul mov test sahf dec bound adc lcall bound dec xor (bad) jne scas xor loop js aaa adc push mov add fmulp adcb add es xchg movsl mov loopne add adc inc insb xor xchg imul sub pop dec bound into mov andl xchg movsb push push sub lret xchg cpuid mov mov pop in inc or iret leave xchg xchg loop out or pop jnp pop imul out cmp popa xchg inc or loope push (bad) fs adc and mov (bad) mov xchg int fs stos mov out lods ret mov cmp in popf aaa push fstps ljmp mov popf stos leave inc dec cmpsl pop cmp jp sarl sbb daa xchg jnp in int push fstl sbb je mov jbe imul iret (bad) mov rorl dec int3 in pop mov movsb iret iret lret pop jg fsubrs repnz pop pop pushf loopne mov push addr16 insb sub xchg push stos in addr16 sub aas lret ret mov xor mov cltd adcb and xchg (bad) dec cmp mov jae addr16 xchg xchg xlat cmp es das cld push fistpl cmp testb mov dec cmp (bad) push stos inc mov jno add sti jmp imul dec fnstenv mov mov cmp cld lods (bad) sub push int mov ljmp mov push cmc xor cmpsl jle inc dec add call lret popl lods loopne les sahf lcall sti lahf or loope repnz sbb cmp testl mov mov sbb jae inc push jne aaa gs push dec inc push dec dec repnz fcoml cmpsl lcall mov jmp lds push repnz sub sub inc cmp je pop or xor and pop adc jns ret sarl jecxz repnz ja cmp bound push ja fcmovb in inc inc xor cmp (bad) int3 jnp fldt inc insl cmp lret jne dec arpl int mov xor xchg push je lods mov push sub jg loopne push push int3 (bad) jae les pop jg lods inc fidivrl scas popf jle pop imul stos sub scas out lcall mov fldenv mov cld ret mov clc test cmp mov mov dec stc mov mov push nop inc pop stos sarb pop mov sub out inc idivb sbb outsl dec cmpsl (bad) ret int3 jle ret xor lods aas pop add adc gs cwtl cltd popa push xchg adc dec push movsl inc xchg adc sbb fwait mov nop jle nop mov xor sub xchg xor mov push dec nop cmp push push rcrb adc cwtl pop icebp jp inc push push jns aam pop mull jno mov push jmp mov fisttpl (bad) shlb mov pop sub rcrb add lds or jae pop xor (bad) jle call mov out mov add mov stos mov pop adc pop ret jne cmp dec popf mov into shll adc and dec dec scas dec mov inc lret xchg repz lcall mov jp (bad) xchg mov or daa jb fildl pushf inc lahf mov pop and call mov xor icebp and xor mov repz cmp stc cbtw push jmp mov push fisttpl icebp dec sbb mov in hlt jl add xor dec mov push movsb imul sub xchg es push int ljmp dec cmovbe arpl repnz sub daa dec ds outsb test sbb and push or fwait in mov out jp repz aam in cmc dec pop imul fwait jns movsl xlat jle out mov xor sbb iret and les inc (bad) mov imul int3 (bad) out imul adc lret ficomp xor xchg add cwtl pop push stos xorl jne push inc mov inc stos push cmp icebp js mov es xchg int js movsb jl mov enter xchg xchg mov std imul cmp call xor mov jmp scas arpl outsb fnstenv mov call loop in in daa pop sbb mov repnz in data16 inc and (bad) sub dec jle loope mov cmp stos call lods subb push mov inc stos push xlat dec mov inc lds movsb mov push dec push mov xchg rcrb nop out xchg in jno pop (bad) fwait lret divl sti sti xor jmp mov inc mov jo and nop repnz fisubl pushf adc jp sub iret jns add xchg out lods jl out xor fs add and cli inc cmp inc xchg pop je push cmc push adc adc fidivl dec xchg sbb and and or jl xor jb mov movb xor mov outsl movsl leave push sbb jge mov ds cmpsl or xchg adc push and and arpl adc xchg sub pop push jecxz dec insb lea jge cltd aaa mov test iret mov xorl pop push rol xor add fs cmpsb mov ret inc jmp out or sbb sbb fidiv movsb fnstenv stos jae setb iret aad gs or test mov jmp pop aam sub es inc cmp xchg sub adc daa popa hlt pop sbb fwait add or shrb mov pop sbb les inc lret mov pop mov das les mov cwtl ds mov mov push insl mov mov mov xchg in xor push dec cmp dec jae fldl xchg cwtl mov ret lods adc mov fndisi(8087 addr16 call fs mov ss hlt nop mov negl push push inc push pop mov (bad) fwait xlat faddl (bad) add sub lcall out pop and mov jg pop push mov into (bad) mov hlt stos sbb cmc and dec sbb dec movsl push sbb fldenv or mov cmp add stc mov clc rorb adc les sub pop (bad) push mov ret gs jg mov jle xchg mov jae cmp stos in dec outsl mov xchg pop xor ss shr and scas push in lods pop jl pop rclb lret push xor push aam inc jne sbb add mov gs sbb enter xor cmp or push in sbb mov (bad) aaa push mov pop fwait aas sti into pop fs aam mov jo repnz xchg in dec mov pop out (bad) mov data16 ds repz xchg inc push mov aad dec stos push pop loopne and (bad) cmc sub adc mov in movsl arpl inc inc mov lea xor jp mov mov pop or enter scas and xor aad push mov dec stos cs jns add add push mov cmp mov in mov mov cltd in fcompl jge push rcrl fsubl aaa js adc (bad) add adc adc xor sbb shrl mov adc pop or jne xor pop subl loope data16 loop rcr lahf sti icebp test testl mov (bad) cmp jae mov ss pop adc daa imul and xchg jmp aaa mov (bad) mov mov add cmp push dec mov jge outsb adc add sahf dec (bad) je in imul imul pop mov mov mov ljmp ss xchg cld loopne jae cmpsl xchg or nop pop and fisubl fwait pop jmp and adcl repnz jbe add enter loop pop jge mov push xchg mov sub mov arpl divl dec sub les scas inc addr16 pop and arpl es pop inc and mov sti mov sbb inc out add mov inc xchg (bad) pop mov mov ss fmul jl or add and or insb fbstp mov and cmp xchg call in mov enter les lods out aam mov push movsb mov dec lret or mov pop xor fwait dec test mov movsb lods out pushf sub test mov movsl mov fidivrl or pop repz mov repnz push push mov repz dec and or lret xchg mov pop (bad) (bad) aaa sbb lods jl sbb sbb dec cmc or mov bound andl shll jbe ret xor pop mov and pop fisttp bound xor push dec or sbb xchg rcrb iret xorl pop xchg push in or lcall and or test cmp ja iret outsb jb addr16 clc mov (bad) pop jge adc jae sub sbb pop nop inc or xchg mov movsl adc inc mov ror mov push and add in lret sarl insb jbe or push movsl xlat mov popf xchg inc pop dec push jp mov jnp mov fiadd ss pop fldl or inc js xchg pop lea xchg push repz sub mov cs ja aaa dec lods push sub daa pop mov ja test in insb int3 and dec lock inc mov iret mov cmc lods pop rol fdivs mov aad jmp les mov sub mov xchg and xchg call xchg call mov mov xchg gs sbb or lret mov movsb ds lret dec cmp or test scas add (bad) and and push stc push sbb dec cmpl ljmp cmp loop xchg das xchg (bad) adc and jge cmp add es or fcoml (bad) jne pop rolb push movb xor inc mov or (bad) ret stos add out out in int in in sbb inc push lcall dec sbb int3 in es jmp push mov pop push icebp jb int3 push lret repnz loopne xlat or cmpsb cmc push clc addr16 jle inc out popa xor fdivrl in ja mov pop inc insl add mov sahf or pop sbb into and push test cli mov or mov lea call sbb lock ret notl pushf jb lcall xchg cltd inc jns sub sub cmpsb pusha test in cmpsb fisubl in out (bad) xor je jno stos sbb jecxz fsts faddp xchg adc aaa dec or xorb lret xchg imul sub pop pusha sbb out xor out mov in jns mov addr16 mov push cmp rol jbe fnop stos xchg pop (bad) repnz cmp mov test xchg enter imul dec mov inc inc and mov pop sbb xchg enter test lea je push xor push fadds and psubsw aad inc cs mov fcoms sarl and mov cmp pop dec xorl je mov dec sbb dec lea xchg dec rclb push insb lahf add xchg sub scas xchg mov add mov popa mov xor pop mov fwait aaa out mov popf xor hlt cmp xchg (bad) out mov push int and pop (bad) mulb cmpsl ds pop xchg cmp jnp mov sbb inc mov in and les fistp addl ret pop mov mov lahf inc jp movsl xor dec lret inc int mov jl fsts or dec mov mov loop push shrl jb (bad) xor cld fcomps fnsave add fs subb loopne imull pop lods cmp dec xchg xchg mov sub arpl aam out sub mov lock jnp vaddsd mov enter xchg push scas fwait mov fs pop andl scas and bound outsb das mov test mov popf jmp sub mov in mov sahf sbb jl popl in bound lret stos ficoml xchg imul pop push adc cwtl sub push or lea push sbb in call mov xchg shlb bts insb xor ret leave and inc pop cmp fwait jmp push (bad) xchg jne daa (bad) hlt sbb xchg int3 nop xchg push lcall lods call out insb dec addl pop popaw mov mov mov cmp js mov (bad) or call lods int jo orps data16 jecxz ret sbb pop xor loop pop lahf fisubr lahf mov ss push arpl scas pop lahf loop or mov test daa loope add jnp mov xchg in lahf insb cli fisub sub inc push cmp adc and loope test cmp pop pop std pusha loope mov and mov sbb push mov (bad) fs or xchg adc sbbb sbb inc fstp rclb imul add mov xchg (bad) test fcmovnb push notl pusha sbb jno jp jae mov lahf pop lahf xor jnp add mov sahf sub cmp movsb mov dec mulb dec lods mov fwait xor push nop jno xchg aad incb bound adc mov jmp adc jae das xor enter pop gs into bts jle insl out outsl lret popa cmp fwait roll js xchg jecxz sahf xchg ljmp rcr pop imul leave mov mov mov jno leave (bad) mov test pop inc fldt arpl cmp (bad) push xchg fwait jne push xchg sahf mov push and inc xchg sub sub dec sub ficom inc lods bound mov pop pop ret xchg pushf jno ret rcrl jp mov es or insb leave (bad) mov in rolb mov stc xlat testb mov mov je int adc repnz mov push lret mov mov nop sbb xor inc dec (bad) pop mov aaa out push pop neg arpl fdivl or cwtl sub lcall adc ficom jle xchg (bad) push mov hlt mov add popa inc stc cmp or jge rolb leave jno mov nop loopne lahf and sub jno es xchg sbb mov xor or xchg test out imul cmp out pop sti push stc push (bad) lea negb das es adc xchg (bad) test push mov icebp cmpsb inc icebp push mov cmp (bad) roll push xor mov sahf adc bnd je fucomi push xchg data16 pop lods mov sti out addr16 fist pushf inc fldenv adc (bad) mov xchg dec lcall jnp imul push or jp mov int ja ljmp inc in mov sub test mov and ret xchg cmp mov lods lea rcrb lods enter adc loope xor outsb js cmp sub mov (bad) jbe int3 dec push call ret fsubrl cmp push or pop xchg js add dec lret jbe mov jmp cmpsb mov cmp push and inc xchg cmp hlt fs insb and in pop outsb repnz stos hlt push cmpl addr16 pop cmp add mov loop mov les mov fdivrs pusha stos (bad) jb sbb xor inc ficom pop xchg out and cs ret xchg jae cmp outsb scas insl sbb mov jl psrlq pop hlt xchg cwtl imul aad cmp mov imul sbb lea mov add iret lcall std xchg fldl jmp cmp es xchg dec scas add gs cwtl test and cs mov jle sti icebp push mov gs rorl je nop dec out cwtl leave scas popf orb bound mov adc cwtl rcll cmpsl loope lcall dec outsl push sub fimul mov jle (bad) pop stos leave xlat insb stc xchg mov bound repnz jae inc fmul and xlat mov and pop insb gs lcall dec pop test cmpsb popa xlat sub fwait mov lea xchg xchg mov cmp or jns scas jg in lods add test and lods jmp aam mov imul repnz push xchg dec in push jnp sub dec cmp iret fwait test inc dec add fmull sub fnstsw rcll mov push iret sbb arpl sbb xor mov lods imul or movsl jbe,pn in movsb mov repnz jl add and mov and jne push push sbb push dec lods cmp fcmovnu aas and in xlat cmp mov cmp jo dec mov pop mov xchg int3 sti sarb lret push aas push lods in push fdivs int3 mov pop mov dec xor mov mov std push lcall bound divl pop es fs mov scas cmp mov movsb add xor sahf xor mov mov push jg mov jae sub xchg and sbb fsubrs jnp jns loop push fcoms out jno test flds sbb int mov mov fsts sub add je xchg les adc xchg cmp inc push (bad) adc ljmp arpl dec rol ret out js mov cld (bad) jg fidivrl mov repnz sub xor adc pop loopne push icebp dec sbb sbb insl xchg (bad) inc pop pop or cmpsb and add scas stc jne push fwait stc mov pop cmp in das pop or dec mov out pop sbb sub xlat outsb sbb jecxz rcll stos inc leave sub push xchg inc mov dec xchg movb push aam popf jle test cwtl sbb fadds xlat dec xor popa jmp nop or add fdivs outsb mov fiaddl (bad) fbld xlat mov lret mov or dec outsb dec jp jl out cs in fwait jge or (bad) stc and or js stos cmp cmp add pop pop xchg mov repz (bad) mov mov loopne das jb enter movsb lret hlt leave pop ds pop dec jecxz xchg negb mov in mov cld sub decl mov mov jmp (bad) stc aam int rcr cwtl mov ret (bad) in push and cmp icebp xor mov or mov xor fistp test (bad) test ss jg loope inc fcmovne fcomip jle add and cltd gs int3 clc (bad) fsubrp xlat aaa sti jmp mov mov sub mov mov cmpsb jo or cld adc scas les cmp out push (bad) fwait xchg fldl fldl cmp add inc add leave (bad) xlat push popa xchg cmpsl xlat lods into xor rep insl shrb movsl push adc loope shl mov ljmp aaa push mov adc in test sub mov inc icebp inc cli sbb lahf sbb mov dec cmpsb xor ret cmp dec pop dec rcr shlb sbb insb push out push pop lods out cmpsl push mov adc inc xchg lahf sub sub data16 jo xchg adc (bad) jl push mov mov mov xchg push imul adc push je xor cli adc mov sti fdivrp jl outsb sahf loope imull cmp out fcoms and lock mov sbb mov push add popa jb stc xor cmp pusha mov pop push (bad) mov lods imul stc push jge jl or sbb mov int3 mov jmp lock push add into sbb adcl push pusha das xchg mov push or push sbb mov les outsb pop mov lcall push sub and mov movsl cmp add adc mov js or mov shl cli out mov je cs mov xor adc (bad) sub popa push cmp jmp lahf mov pop inc xchg push cmp sub aad repz xchg in maxps pop pop stos (bad) dec fldcw scas pop sub dec cmp dec (bad) es xor inc push data16 mov mov push dec insl (bad) movsl sbb xchg repz dec inc js fmuls mov dec mov add cmp nop aaa jno pop and cmpsl cltd push movsb pop jne sub mov add cld call jmp xor pop mov repz imul mov xchg out sub add xchg adc sub jecxz or adc addr16 inc add in pop mov fildl insb cmp cwtl movsbl rcr fnsave mov mov stc imul ss cmpsb cmc ret or inc push lea adc xlat mov js push ss jns fildl mov fwait test rorl inc jne (bad) mov adc pop cltd mov ja rcr scas (bad) ljmp divb pop mov xchg aas xchg fldcw push (bad) mov (bad) mov fisttp in out cmp fcomps fsts jns addr16 (bad) cmp mov (bad) mov xor mov mov inc sub pop ljmp and and vpshlq mov iret mov (bad) pop pop imul jge movsl outsb pop mov xlat aad and cmpsl or (bad) lds sub adc mov int xchg inc pushf mov mov fdivl pop cli jg sar icebp lods sti cmpsl out std mov cmp push inc mov mov mov pop pop xor xor mov out andl xchg sbb (bad) inc mov loope mov test xor xor cs (bad) pop cmp data16 mov (bad) pop daa dec imul mov (bad) mov cmc fidiv in cli rcr jae dec adc sbb inc or stos sbb xchg rolb xchg mov inc xchg add cwtl fidivr jge pop jl bound cmpsl sbb das mov mov rcrb loope cli add (bad) xchg lods movsl popa mov les mov ljmp sarl push add xchg sub movl mov rcrb pop rcrb mov push (bad) cmp or mov int3 adc les notl repnz mov daa std cmpsl aas ljmp insb adc inc cmp fdivl jnp std push das mov loope dec stos push jle test cli or iret mov adc flds dec mov xor mov push lret mov mulb loop cltd xor aad loope push lahf mov pop inc movsl popf dec push or sti lret and mov test outsb negb pop pop repz (bad) mov sbb icebp push out and arpl int imul add (bad) lahf mov push cmpl jl imul xrelease popl mov int sbb movb cmpsb stos lcall int lods (bad) mov push jo and sub mov sbb xchg daa jge lods xchg adc aad bound jbe pop sti lods cmp lds iret push popa adc testb pavgb jge xrelease cmpsl xor andl repz push dec popf jp push dec cmp lahf xor push or add leave mov adc jbe mov xchg pop clc adc xchg or push jne xorl and inc mov lds push pop (bad) and jbe outsl push cs mov into mov jecxz lea imul lcall rcrb mov jmp repnz dec dec jl roll hlt mov sbb or int mov xchg sti loope fdivrl cld popa std (bad) jnp pushf jae inc ljmp jbe jg test mov lcall in fwait push push dec push mov adc jb xor cld cmp aas inc in push (bad) xchg mov js jbe rcrl and inc xor ret adc cmp fldl xchg leave lock and repz sbb insl add cltd fcmovne insb jae fisttp clc xchg jne cmp fwait mov es mov jge mov xorb inc rol je jle lret dec out push jecxz call out mov aaa push pushf aas clc decb sub pop inc or and clc xchg std hlt cmp xchg in popl pop ja je hlt ja jnp mov inc leave and jne mov mov in dec pop cmpl mov pushf push leave jge out arpl aas xor jno fdecstp (bad) dec mov mov test inc sbb fsubrl push pop fwait mov inc out sar nop in inc jnp out inc in pushf push inc cmp faddp and add sbb das fstl roll popa push scas sub jne mov mull scas push mov jge mov mov and lock sub xchg mov push xchg mov daa push sbb pop xor jbe mov xor fldt scas lock push push ret xor sub clc pop xor cmpsl push pop divl pop std loop (bad) repnz push push mov and fmuls gs aam out mov (bad) repz mov cmpsl jb cmp push outsl aaa lret dec test pop mov (bad) mov sti int mov dec xor mov xor inc aas test (bad) mov xor aam push enter sbb int aas sbb xchg cmpl int3 push xor mov insl and and push push pop fwait push mov cmp and xor cmpsb push scas xor ret movsl shrl inc inc stc add cli inc add and mov pop arpl std and int3 add cmpl add cwtl mul loope jg mov out repz jecxz pushl cld push es (bad) jbe jbe jo pushf daa into js in inc adc pop in mov enter divb or sahf fs pop jno mov popa xor out cmpsb bnd hlt jg lea test aas and addr16 pop mov fnsave lods xor mov xor negb movsbl sub ds (bad) ljmpw out stos das mov rol fbstp cmp std inc push sub in cmp xchg add or int xor stos jb in cmp fisubl pop in imul out mov popf pop lea addl mov mov add (bad) fs inc test cmpsl xor das (bad) repz jne aad jno mov xchg or xchg push adcl mov fbstp (bad) jecxz jle ret pop jno stos std xchg aam adc cmp pop add mov xor fsubrl (bad) clc icebp (bad) js (bad) sbb jmp xor sub and cltd ss out xchg pop push shlb insb imul clc and decb out (bad) hlt mov (bad) pop cmp inc jae call cmp inc ljmp repnz dec fwait divb (bad) test repz dec xor cmpsl push in cmp mov or cmp lret cmp ret cmp (bad) mov push mov add ss lods icebp xchg pop stos leave pop add pop inc in hlt pop mov out cmp mov jge aas jl jg mov fnop out or out jg aad outsb cmpsb into jns cmp cmp clc leave dec push (bad) aaa jne adc (bad) xor roll push ja lods bound mov and enter scas loopne mov (bad) sar arpl ret dec pop xor sub adc xchg mov push inc bound pop addl sbb jl lcall sar jb cld jbe jg test sbb inc push sbb cmp outsl cli rolb xor ss or lods les int mov mov push and out aam inc dec scas adc mov and adc dec add rcll add js cmpsb xor loope lahf push adc cmpsb stos sub adc jno adc xchg xlat jb dec pop sbb mov push and int3 cmpsb push sahf cmp sub lahf lods out movsl sti xlat pop ds xor jle lcall mov bswap pop outsl (bad) (bad) in out (bad) out mov call sub mov jecxz sub mov leave into mov jecxz hlt je out pop fiaddl pop mov mov lock (bad) int movsb mov dec jl or sbb pusha imul inc mov sub mov lods imul popf cmp andb cmp mov mov pop out movsb fmuls xchg hlt or push xchg lods daa add adc push sub movsb push pop stc cmpb mov movsl xor xor adc test ret pop add rcrb (bad) in jle xchg aas cmp cmpsl push mov fdivrl fsubrl pop push (bad) jg mov jb negb push jns aaa (bad) mov ss inc push adc gs lcall and std dec add jge sarl pop pop inc fisubrl jg in push in xor inc inc sahf cmpb cmp aaa cmpsl dec in xchg add ljmp outsl stos je les dec push mov je dec sbb pop push adc (bad) jmp xor dec js or adc pop dec add or pop sub data16 or frstor jnp cltd dec push pop inc cltd or fs push sub scas aad push icebp and es ftst into or sarb jmp sub or jge fistl mov mov insb sub push lcall xor std xor jecxz jg cld clc and or mov mov dec mov sub jmp iret leave rorl mov adc sti lret cmp std add push mov fnstsw or inc pushf pop sub lcall pop mov (bad) and push jl and xchg call sbb jns lods or pop fmuls adcl inc fmuls xorl out aad mov repnz mov negb rcrb stc (bad) pop and push stos cmpsl fidivr outsl fstl pop add dec mov (bad) fcmovbe and repz xor mov daa cli out mov out push psllw jmp jg movsl dec insl inc cltd pop fidivrl out xor pop imul nop adc push push loope or dec in es lret push mov and sbb jae mov sbb and dec jecxz ljmp inc jnp,pt into (bad) cmp into pop das push (bad) xor aaa dec mov lahf lret mov in aaa in outsl rcr (bad) leave xlat jne mov xchg mov cltd cmp pushf stos inc sub xchg nop inc jp mov adc aas imul mov bswap out sahf lret xor jge cmc pop loopne or dec and (bad) in xor addl fdivrl xchg lcall mov outsb jne mov sbb xchg push pop mov mov xchg ficoml test xchg addr16 movsb popf push jne stos and dec sbb scas data16 pop cli (bad) fwait ja out and xchg enter sbb mov scas imul in sbbb mov xchg lea bound dec out jae outsl jns,pt iret outsb cmp hlt pushf mov add adc das je add mov insb ret xor push push mov xchg pop and and test es mov les cmp jb add sarb dec addr16 popf outsb xchg jno (bad) adc pop cltd out js out xbegin loope mov test divps divl sbb inc or or lret inc lock push test cmc xor xor mov cld pop mov cmp (bad) fidiv or xchg mov popa xlat popl popaw xchg xchg pusha sbb cmpl lcall loop adc js imul vmaxss sarb mov out mov inc or out or mov cmp inc leave xlat xchg xlat jno lret cmp inc xchg daa cmpsb fmuls adc (bad) test xchg sub rcll rorl push pop (bad) jne dec shll pop cmp mov pushl les aaa js rclb iret add fwait aam jae daa sbb (bad) or xor in jns rolb lds arpl xor (bad) xrelease mov pushf gs pop ret in push lcall inc pop fwait push adc pop fdivrs stc les mov lock sarb dec adcl leave cs negl fsubrp loope or dec jb repz ds and push in jns xlat (bad) jae push and cmpsb push mov sbb imul pop daa repz test xor dec pusha test stos mov add mov dec pushf in mov xor insl nop mov bound push fidivr jecxz cmp mov mov cmp jbe fwait mov fdivrs stc aaa dec cld add mov lods mov mov (bad) xchg in mov jmp mov and mov out jbe xchg sub mov adc mov imul add cwtl mov jmp push xchg push adcl imul xor xchg or inc push (bad) clc dec (bad) mov ret push jle rorb mov add cmp sub inc (bad) nop add sbbl dec repnz pushf fsubs and in ds pop adc pop mov xchg lcall adc stos scas sub push cli lcall fistpll cwtl sub sbb jle adc cmp jo and je mov sbb mov xor and cmp push les lcall inc jmp cwtl imul mov imul into in fistpll push stos sti int3 fsts push (bad) xor sbb xor jl and push insl pop push stos clc mov addr16 (bad) mov xchg (bad) xor ret cmp cmp shrl clc xor into mov lea fnstsw aad mov out push jp call lea (bad) adc push int cmp jb addr16 dec add jo inc sub dec lds test mov bound mov mov or mov int call xchg in data16 mov jmp jb lock inc pop or dec loop popa addr16 sbb aas loopne adcb sub rol or xchg aaa daa pushf lret and sub xor int3 xchg push je (bad) outsb test and xchg cmp sub enter (bad) fdivs (bad) mov ss jg leave push daa (bad) push adc cmp mov mov ja cltd cmpsl gs out or (bad) (bad) mov test add cmp sahf movsb in enter cmpsb cli mov xchg sbb mov (bad) je jno arpl push mov out loop fidivrl mov mov es pop test push push inc mov sub pushaw mov divl fcoml (bad) aad jb repnz into movsb ds cmp stos pop sub dec sti xchg pop xchg jae pop mov cmpsl sub aad (bad) jae scas adc in jb imul pop loopne inc inc loop mov orl or jo sar sarl movsl lods pop fwait jge popf repz xchg pop mov or jle sbb clc cld mov push popf mov in inc dec jbe aaa mov aaa pop mov ja pop sbb xchg out adc cli pop sub int3 in sbb xchg cld mov fist dec pop adc ljmp push or js,pn xchg std push dec push cmp aam in cmp mul cmp fisttpll mov xchg (bad) xor out cmpl fistp pop push jecxz mov sbb jg shrl cltd imull mov lea lcall pop repnz or and fisttpll mov into imul fsubrs mov dec cmp ret scas xchg loop or sub pop leave mov cli fisubrl sub mov or adc cmp adc dec mov clc lds jg leave pop mov lods and cs repnz cltd sbb xlat jo inc fsubrs out cmp aas ljmp push lret mov or jl stos jne lods xchg xchg sub lods int es shll sub dec fdivrl dec mov add or cmc insl adc cmp mov (bad) into cmp lods in push fcomi repnz push mov ror dec inc scas ljmp test (bad) pop lods pop lcall cmpsl or js mov mov (bad) outsl xchg je add insb dec idivl fdivs pushf cmp xor hlt sbb push inc lds cld pop lahf pushl out jo jbe pusha jae mov mov sub clc pushf push out lret fsts inc sub data16 mov fist outsb rcr inc fxsave fwait nop in ret xchg insl mov out adc pop fldenv ret mov xchg (bad) into push xchg mov adc xchg daa sbbl inc js shlb (bad) mov leave in movl sbb (bad) leave outsl ss mov incl movsl cld pop movsl std cmpsl push push icebp pop (bad) dec mov pop call mov ret push cs and xchg sub arpl imull aam inc dec dec (bad) rorb sub adc pop rorb add or cmp fwait lea push notb xchg and out fwait add xchg and mov (bad) notb andl xchg (bad) and pop mov cmp xchg aaa inc pop adc gs xchg xor and movsl pop or cs fdivrl popa stos push fnstenv mov fsubr int3 cs lahf inc fnstcw int xchg mov mov mov and leave pop sbb jb mov ja shrl inc les ret (bad) ds test mov dec mov stos pop pmulhw ds mov mov cmp push lret sub xor xor sub out stos hlt xchg add mov mov (bad) outsb daa xchg pop mov and jae mov ficom test xchg push jno xchg mov outsb mov inc aad mov (bad) mov jbe xchg mov mov sbb pop push mov mov mov mov je sub or or mov pop arpl out test popa cltd inc push push or test int3 adc mov clc xor call insl jp enter pop cmp lcall jmp dec (bad) mov clc outsl push (bad) pop add push cmp (bad) scas mov es fdivs mov xchg xchg lret cmpsl int3 bound adc cld and insb push rolb inc dec insb mov popf sub jns xchg adcl push test mov icebp lret jns mov mov popa out mov jge add fimul dec cwtl mov (bad) push cmpsl mov jg mov popa (bad) in lods push in mov mov mov jnp ljmp inc mov push in adcl inc and and push xchg or (bad) iret mov adc fstps ret or cmc into mov test sub add stos jmp shll imulb sbb cmp out arpl mov push lods lea jmp mov fstl jp mov push pop cmp mov rolb mov fwait jge fstpl cld push inc (bad) adc lds or sbb lock lds sbb sub xor xchg inc mov jnp outsl lcall jnp fsubrs xchg sbb in sub insl mov movsb stos push xchg dec dec lret popa data16 mov clc pop push mov lret jne dec mov shrl scas call sub shlb into mov lods or dec mov pop and jo pop fsubrs fidivr sbb xchg and out nop les cmpsb jmp lock (bad) ljmp repz mov mov (bad) pop insl (bad) fild pmulhuw cmp call das cs mov pop aas adc jo es test mov imul sahf pop push jmp mov nop pop and jb adc sahf xlat data16 lcall push je push mov lret into or (bad) in dec push aas rorb mov outsl inc sbb mov cld in dec pushf mov sti sbb pushf jp push pop cwtl xor sbb dec fistpll int into sahf lods loopne inc fist push mov dec insl aaa xor (bad) mov adc test insb movsb adc cltd push icebp and int3 loopne dec adc mov jmp sbb and addr16 or mov popa sbb mov fstps mov adc loope pusha nop popf add ror and test push inc pop xor or jno sub cmpsb fmulp int stos aaa movsb aas mov fnsave test mov mov pop and cmpsb ret mov push dec xor mov mov ds shr mov mov lahf imul push mov repz ds shrl int insb ficom push xchg repz cmp lods divb sbb test pop and dec shrb repz in mov mov sub bound lret movsb sub je fist movsl xchg pop in jns (bad) or adc sbb cmp mov (bad) daa inc push in cld hlt (bad) mov loopne push out mov sbb jae (bad) scas xchg cmc aas pop out adc decl enter mov cli pop imul pop jl lret xlat cwtl cmp jno xchg ljmp int3 gs ds popf inc xlat sub sbb jp pop xlat jae sbb ss pop pop add jmp imul xor out mov test dec push or dec loopne xor mov cmp jge push sbb fucomi jmp test cmc push mov mov je outsl lcall std dec sub ss xor or scas mov push cmp paddusb push das cltd or fcoms lret into dec cwtl imul lret add rorl data16 xor cmc inc in aad and mov cmp aam dec imul insb inc rorb adc adc in lods int jne imul xchg data16 iret aaa cmp mull fwait dec fnstcw dec jle shrl fnstcw int dec cwtl push mov int push mov ficom imul cmp mov shll pushf (bad) out xchg lods ja mov out mov inc lret xor dec mov int3 dec stos dec lods sbb fwait mov mov jecxz lock mov adc mov je push (bad) test sub stos sbb add or into xor insb ja cmpsb int xor loop gs jb insl xchg (bad) ss cmpl (bad) (bad) pusha jmp (bad) cli pop or mov jmp jne aas sub fildll mul das (bad) cld aaa jae stos cmp test push ljmp cmp fcoms pop push cmpb loope jmp ljmp dec in inc pop in jne push outsb inc or mov (bad) std pop pushl sti push testl lret add jb insb (bad) pusha jecxz pop pushf in dec mov dec out mov push shlb loope cmp mov (bad) lock mov out es syscall (bad) mov mov cmp cmpb xchg jae fwait mov push mov nop cwtl add inc jae addr16 dec ret popf test inc andl jecxz mov sbb les push mov xor jbe xchg repnz mov clc stos add mov or mov out pop lret movsb cmpsb stos lea jp push sti mov push pop mov loope sbb clc mov jnp mov jno sbb sub divb and cmpl inc dec imull mov (bad) mov dec or adc rorb jae pop cmpsb pop sbb imul push sub xchg adc lds test pop mov dec pop sub pop rorb fidivrl int3 fidivl movsb sub nop push test or fist jb out mov enter jle xchg mov sbb lock mov ss jne lcall ljmp decb cld lds sbb push cs xor or pop in mov xor test imul xchg mov outsl mov dec push clc jns loopne add or cmp (bad) mov (bad) xor lock jge xchg xorl sub sbb jno xchg movsb mov fmul mov aad jns xchg jo inc xchg xchg in lods mov fist das mov das xchg cld cmpsl xchg lcall fidivl hlt lea push mov sub je sub pop mov cwtl jo xchg adc cmp and add imul xor lods js mov add jbe mov sub stos adc in sahf in test sub es imul mov mov int3 xor xor add arpl stos ljmp xchg pop shll jp mov mov out lcall popf ss sbb pop fdiv cmp lds fdivl stos xorl loope mov xchg je fsubrs aaa icebp and rcrl scas jmp dec xchg jne sarl push xchg pop addr16 mov ficom cmp xchg js cli pushf out jmp jb aam jb dec dec and aam xor mov xchg jne fimul mov shrb (bad) out imul cmp jp outsl mov shrb ja idivl xlat test insl scas (bad) mov jle call or imul aas out cmpsb push fwait ljmp fidivrl test xor (bad) jbe pusha ss fistpll push sub aaa pop int mov xchg test mov or or inc repnz mov idivl cmpl jb lock dec nop mov das mov les addr16 sbb cmp push in cmpsl pop iret arpl adc and sbb imul xchg (bad) incb std mov jl (bad) jge leave push (bad) nop jo inc mov xor js cmp loopne xchg pop lods xchg jb es push repz adc ficompl lods ror mov ja jns mov cmpsb sbb inc xchg xchg sbb jnp add sarb mov and or imul mov fidivrl xor enter popa lahf lea cmp cmp test sub jg mov jnp mov push mov mov outsl mov outsl lods sti lea aaa mov or hlt dec jl outsl xor daa lret jns sarb andl cmp out jge dec fisubl je pop sti out out push push pop popf jno mov sbb cmp or mov push inc or addr16 (bad) loopne int jne add in and and out inc cmp clc mov ficomp mov push aam push addr16 xor sahf outsl mov mov xchg xchg icebp jg,pn setg dec xchg movl (bad) ja hlt dec sahf jge xchg pop popf cmc sub iret cltd pop out xor scas adc (bad) fdivl or mov sbb or push aam popa fwait movb mov ds mov popa jge cmp xchg pushf (bad) push daa (bad) cli jo cltd arpl dec sbb pusha sbb inc sbb in sbb jns movsb scas cmp lods adc dec and (bad) scas shrl cmpsl push std pop mov mov inc dec decb decb jmp lahf pop aad dec cmp mov mov es xor nop mov mov dec xchg mov les hlt sbb push push (bad) jb mov in mov sub je lret shl in nop pop xchg test mov (bad) addr16 test test ljmp adc mov fsubp add mov push jmp sbb mov (bad) es (bad) iret mov sarb lods (bad) dec ds fsubl cmp (bad) std fsubrl mov into movsl pop or movaps dec jmp jle ficompl arpl arpl cmp pop pop push scas repz negl mov fisub lds das fldenv nop aam mov cltd push push lret dec dec sub ret fisubl lret inc sbb cmp in or dec cld loopne daa inc inc or add icebp cld aam push aaa push pushf out xor mov lods cs testl ja mov outsb ja insl out xchg in add mov jno pop popf jcxz stc call lret daa xchg jle mov aaa sbb sbb cs in add and xor push es lcall ss aam outsb fwait cmp pusha push bound sbb out lea xlat xor bound or mov adc inc outsb xchg (bad) cmp repz mov xchg dec pop mov inc xor stc jg cli into cmp pop (bad) mov in jnp sub push fldcw jp dec add fistl dec stos (bad) imul adc adc popf sarb pop ds xchg or ja decl (bad) stos in jg fistpll sbb sbb mov mov add loop mov arpl push mov cld test cwtl or lret out dec mov lods stos sub xor jae jae and mov pop js inc lahf movsb hlt cltd dec aas sub pop xor mov pop bound pop leave xchg (bad) (bad) fisubrl jne sarl push call or lea (bad) rol fnsave push cmp lret (bad) jbe mov test into push lods push ds fcmovu sarb aas hlt out out jno push in scas lea nop loop lret (bad) mov stos imul lahf push jmp fs and jno bound sub mov push sub inc lcall dec jo or xchg sbb repz nop test sti (bad) jno push pop stc jmp hlt test cmp jg sti pop jo and (bad) testb pop lods fwait mov pop pop pop stc movsl xchg lea out scas (bad) mov fwait pop mov fnstsw pop xor and in or or loop inc dec xchg sbb subl shrb pop (bad) fwait cmp add fisubrl pop pop push dec xchg ljmp push imul fmuls daa (bad) jno or ret cs mov pop xchg or test cmc pop dec fsubl icebp fcom out stos ljmp out sub mov mov std daa dec ljmp jg jbe int cmp mov jne push inc repnz pushf js push adc inc xchg jb mov subl cld xchg xor push (bad) xchg cli mov mov sbb fs icebp shrl int out cmc jns jge cs scas mov and sbb ljmp pop aam rcll test push and xor add xchg pop xor rol ja jo add cmp ret aaa and xchg lcall sub rolb jp imul lods testl lods scas aas push jmp rolb mov loop repnz dec pop cli cs scas insl je test xor xchg dec into test cmp dec xor mov and push imul scas xchg jno popl mov adc enter xchg iret aaa cwtl scas cmpsl adc sub fwait xor adc mov and fnsave xor outsb mov mov std jne mov in lea dec je add loop push jns in das cmpsl fucomi in mov orl jmp dec dec pop xor push push clc inc inc xchg xchg push cmp lods enter repnz shlb sti and jns push (bad) fnsave les fldt push daa mov jns (bad) int ret adc dec or pop and xchg ret push insl push xor mov jae xchg push fndisi(8087 cmp iret jl xchg repz pop icebp idivl and incb out lods int jo mov sub ds insb inc mov int cmp cmp clc xchg adc mov mov adc int pop cltd lock pop sub test stos sub (bad) lock push mov mov popa push jg mov mov sarl into aaa int iret (bad) lods jge dec pop mov popl mov cmp arpl cmp add mov and popf inc leave divb mov push adc jbe and fisubl pop mov push test fwait pop or sti clc int cli and out jb mov fwait stos notl inc push mov adc pop icebp sahf and (bad) in sub push mov ficompl gs jne das add mov fcmovb test mov fistl in lret push sub lret xor push add inc mov push xchg pop addl adc or mov pop sub cltd mov rcll int pop outsl mov into mov fcmovnu insb jmp ds pop adc mov cld dec xor cmp fstpt inc cmp pushf add and mov hlt and (bad) sub mov pop adc xor movsb lret dec mov daa je rolb insl push call dec and dec mov dec xor sahf cmp movsl ret iret aad xor fisttp ja dec out and test outsl sbb or in and outsl xchg fnstenv (bad) mov jg lock push clc or mov scas icebp pop mov xchg rcrl push jl testl (bad) lock push dec cmpsb push xor xchg ljmp mov add push lret jg insl sahf cmpsb mov fldenv mov fcompl xchg (bad) pop lds sub add mov ret sahf pusha push push push add xchg mov push pop jnp mov stos sbb addr16 dec mov mov jnp push pushf fist std scas (bad) (bad) stos (bad) jae rcl pop adc mov sub sub repnz adc and lret xor nop xchg int3 mov faddp cmp rolb faddp repnz popf in (bad) sbb (bad) imul dec out les cmp mov push bound xchg and lcall dec push push pop push cmpsl imul mov lods mov lea (bad) cmp addr16 add add push ss pop lret lds test dec cmpsl nop fimull repz (bad) test push and inc dec mov pusha xor stc insl lcall dec ror leave mov fdivrl das idivl pop mov mov shrb pop ror imul mov push scas (bad) mov xchg sti pushf movsl push (bad) idivb xchg mov cltd mov popa or mov (bad) mov jmp xchg das jbe orb xchg idivb dec and sbbl mov xor sub lret test pop jno int3 and sub test inc mov rcrb neg imulb mov mov mov das cmp mov pushf pop inc dec xor push sub cmp xchg push sub adc cmpsb or jb sahf mov mov into arpl dec push adc cmp dec sbb scas mov pushf mov ss cmp sbb lahf aas in pop jl aad out fdiv xorb mov ljmp jle (bad) repnz pop pushf call mulb jae inc xor in cltd arpl (bad) mov and sbb test pop jl mov (bad) out ja jbe loope dec aaa ss jg daa (bad) xor into mov cmp aam pop bound in mov int lods jg xlat sbb dec xchg add mov addr16 (bad) xchg mov cmp call dec mov add mov cmpsb data16 pop test sahf js (bad) leave mov cmp dec xchg nop push out repz stos pop pop js into mov mov pop pop insb in add sub xlat mov js or loopne cmp xchg int3 repnz popa lods inc mov fdivrl movsb jmp dec mov dec inc ljmp mov sub xor icebp xchg fistpll das int3 clc mov and jbe (bad) cmpsb or and test pop test and inc fist add cmp push mov jo push xor (bad) jle add ud1 sub adc push pop cltd subl aaa dec ficomp in inc fsubr mov cmpsb fwait cmc push scas shrl dec fs dec adc or mov les pop (bad) pop adc sbb les push sti nop loop inc dec mov call (bad) loop dec jp cmp repnz add push sbb push fbld mov out loope das mov cmp aam inc fbld jbe inc stc sub dec ja mov inc cld push inc aas mov daa into fdivs mov ret sbb push or pop cltd hlt pop sbb lds mov push jmp cmpsl es or xchg add mov inc inc mov mov xchg jnp hlt scas (bad) jp arpl leave and dec bound adc jge xor int3 cltd cmp or pop clc and jno test mov sub test pop test fcoml sarl dec js mov das repz shrb (bad) (bad) add jno push and cmp inc xor pop push inc xor imul aad lea gs pop jne xor fnsave cli add pop into mov xchg jns mov hlt cli nop sub jl jo jnp je das pop sahf (bad) sbb cwtl push mov int push iret insb rcl je mov add je mov fs mov pop cltd xor xchg sbb clc inc xchg and dec je lcall fidiv outsl mov dec adc adc and mov add and adc fiaddl pusha aam pop inc xor push sahf cmp clc sub adc lods pop adc add cmp inc adc in push jns add xchg mov jae (bad) lahf pop cld stc aas mov out push sbb push std icebp dec leave mov cmp jmp (bad) xor jp fnstcw mov mov mov add dec aaa out das imul mov add out mov pop repnz rcrb mov into sbb cmp push stos cmp dec jb push loop cwtl mov in (bad) xor es cmp pushf outsl in in clc sbb xlat js in and lods lods or or mov sub les cli inc sbb clc dec (bad) mov leave scas sub iret or xchg or in mov cmp pop push js popa ret push ljmp pop scas sbbl jne sbb mov pushf insb sarb icebp pusha insb mov insl fs (bad) mov outsb mov stos pop scas pusha movl test (bad) jne add dec mov loop jmp in mov or inc subl adc xor arpl nop into add pop push xor insb clc xchg in jns dec lret js cli ret push pop mov sub scas rclb nop (bad) insl xchg add out pushf lods (bad) loopne popf mov cmp sbb rol jne mov (bad) out mov leave mov xor sbb sub loopne int3 imul dec sarb fadd call call loopne sbb ljmp (bad) cli loop ljmp (bad) jl cmp cmc fidiv jecxz fs int push mov scas cmp or cmpb dec add or jle les fidivr jg (bad) insl outsw xlat jo out xchg iret xor ljmp sbb andl cmp orw movsl push pop sub movsl cwtl jle mov cmp push in inc sub xchg rorl fisubrl lods mov and or and inc arpl mov or pop (bad) ljmp or jge push lret inc push (bad) xor push and mov mov xchg ds sub ja pop cmpsl (bad) jbe enter lods xor test dec cltd les je or adc or add mov add inc fs fldenv or cmp repz adc or inc mov cwtl dec push rcl jo fdivrs movsl hlt and dec jmp mov push inc sub cmp sub pop sub lods bound push and xor clc push push dec leave dec push dec mov pop sub test cmp adc sub scas in cwtl subl gs mov imul pusha sbb mov ret cmpsl dec sbb jecxz push insb sub in pop (bad) xor rol mov adc mov or cmp clc push lds dec jle cmp movsl lds insb ja jae adc fisttp lods push jo dec xlat and or lahf pop stc or aas cmp andl insb push push lret pop lcall mov mov cmp outsb and push lret std shrl aas push out xchg ss pushf test sbb inc and or shrl pop sub hlt mov mov repz and test popa stos pushf insl xchg repz fldcw lods lds xchg arpl push add inc sbb adc iret je aaa aad xor sbb fadds xor int3 cmp xor insl cwtl aas add jno daa mov sub cwtl jbe jnp (bad) or test xor mov fstpl (bad) sbb xor xor movsb cmpsb fsubrl dec cmpsl imul xchg xchg jne push repnz popa push jbe push ja fstps (bad) xor pop mov mov lret inc dec mov test je inc mov (bad) xchg into mov cltd pop and stos inc pop je fmuls jp mov and rclb jns lock mov cltd inc out and mov stc dec pusha call loop punpckhdq test test inc dec (bad) pop adc loope pop fistl and cmc push out aaa in dec rcl mov sbb pushf clc cmp push and jo sbb pop imul in push fnsave out xor clc (bad) incl xor mov aad mov cmp addr16 fidivrl mov stos es call int3 movsl adc loope mov ds xor hlt mov cmc out add xor das push sub adc adc push mov cmp sbb fucomi sete scas pop xlat cld fisttpl imul shll fninit mov mov das xlat in inc xor push cmp push push mov rorb je mov sub subl test cltd xchg jbe mov cmc cmp xor sub lds call (bad) dec repz jbe dec mov xchg insb cmp mov movsb sub stc or (bad) xlat (bad) sbb dec out cmp fidivr (bad) lret push test cmpsb and sub call cld loopne mov sub xchg add mov lret lods adc aam and pop adc aad cmp lahf aam je pop out movsl in xchg sti movsl pop jb test lods adc cmpsb push inc add or pop xor or add mov inc fiadd jecxz orb and sub mov add adcl cmpsb dec idivb cmp mov xchg fdivrp rcll into jo popa xchg (bad) xor mov shll aas stc adc pop mov jae outsb mov ffree movsb pop xor sahf dec pushf jle bound and int3 lea jl cmpsl jg addr16 xchg pop fsubr pop mov ja cmp xchg mov mov rclb stos les inc inc lret jns shrl cmp mov xchg mov pusha cmp jnp sbb divl ret out xor and or aaa dec mov mov fwait stc inc sbb in std in xchg ljmp xchg (bad) repnz inc pop mov fs cs inc sub push dec adc outsb clc xor xchg aam jae and mov loop repnz lea xchg cmp push sbb push (bad) ja jns in daa push jge shrb repnz mov push or shrl xor mov rcrb dec leave cmpsl pop mov (bad) sub push push (bad) sbb mov or adc fdiv xorb nop bound sahf push sub push adc je fwait out ds call mov arpl cmc shrb or fwait jnp enter call in mov (bad) mov ficomp popa mov xor xor (bad) and inc mov lea cwtl pop cwtl inc pop and test cmp rcrl imul fnstenv jle lahf xchg outsl push add mov lcall idivb jmp ret pusha lret xchg cmpsl add (bad) insl ficom push mov pop pusha lock inc hlt xor cmpsl insl lock out push jo cmc lds cmpsl dec out lcall inc enter ljmp adc mov int mov and sub pop in xchg jp dec lods loop xchg mov ror test js les dec in or sub jno xchg loopne cmp inc sti lahf xchg cld mov icebp jmp clc sbb and and cmp iret movsb pop xor int3 fwait (bad) pop lods sbb mov mov xchg adc push push stos call xchg adc mov sub mov lret vmwrite jae mov inc lds cpuid lods (bad) repz xchg mov (bad) (bad) pop test sbb jl stos std stos enter arpl push fisubr nop faddp xchg dec mov mov xchg je sbb aam inc into xor daa lods data16 xor mov adc enter jns imul push cwtl or mov ret aaa lcall cwtl (bad) add jae push lods push shrl dec icebp mov into lods lock cmc fucomip fisubr (bad) insl or mov jmp jp das mov ret pop addr16 daa mov rclb test push add lahf adc lea or jo inc dec or lods mov dec scas mov std stos mov imul jns dec and sub stos cmpsb pop outsl stos int fnstcw aas test pop (bad) (bad) push push and sbb mov cld cs cwtl out test insb lcall iret pop lock mov stos sti iret das (bad) hlt es test sbb jg mov es std pop mov lea mov jne xchg test sbb push pusha sbb xor ret gs pop jle nop mov adc dec test dec rorl sub rcl inc sub xor inc int3 test push fstpl cli sbb cmp pop pop adc cs (bad) mov push repz movsb lds imul push aas inc jmp xor mov mov and xchg fdivrs adc pop dec xchg fsts mov push popfw cltd or fwait jmp enter test fisubr fnstsw outsb mov (bad) (bad) lret int fld inc ds mov cwtl int3 push sbbl iret (bad) xchg je ret notb fimull aaa mov mov dec pop jg jecxz popl pop mov std mov lods std xor dec pusha divps jne cmpsb fdivr out mov pop aad add nop cmp pushf dec jno mov adc jo aaa cmp xchg add neg and notl xchg (bad) mov out outsl (bad) pop outsb inc scas xchg push lds jnp loop sbb and nop adc and aam cmpsl mov mov or pop das testb mov adc sbb jl jle orb js cmpsb out aas ds ret (bad) dec stos lods into jmp insb out stos repnz dec out xor stc sti enter dec xor in lods mov shrl aaa add mov push stc add mov jg loop pop sti movzwl out lahf outsb mov cld loop push mov pusha push test inc mov jg mov mov out leave stc jge (bad) addr16 imul sub aaa adc push mov insb inc daa cmp lret xchg push arpl xor lret adc cmp adc adc mov inc or adc loopne push ret pop lahf pop xchg scas ds dec lea scas les rcr xchg loop pop sahf leave cld mov cmpsb jo mov stos push scas lcall add push mov adc mov cmp jb cmp mov or push pminsw js inc test push jb xchg stos cmp dec dec xchg dec (bad) rorl cmp mov in and push jno (bad) xlat and (bad) push xchg das lret call sti adc (bad) mov sbb inc xchg fcoms lea inc gs xchg jne aaa jle (bad) xor insb push push inc mov das xchg in xor iret out lret xchg jo imul mov xchg pop mov inc ja mov mov imul adc jae dec sarb push adc adc aas adc popl pop cmp fwait imul sub push je stos leave lcall and leave adc dec sbbb push or push xchg cld mov fldl mov mull mov cltd xor mov cmp fistl jo mov icebp pop or mov dec mov mov xchg dec fdivr cmp (bad) (bad) clc jmp jg in aaa xor cmp push fsubrl cltd sti mov (bad) mov jg (bad) jae (bad) xchg jle lds in and cmpsb sub mov (bad) scas sbb xchg sbb push pop sub inc jbe adc xchg dec das lea pop pop jns xor lcall mov repz xorl xor addr16 leave dec clc out jl cs rep (bad) mov add mov loope,pt dec sub test into in es fdiv movsl scas (bad) out sub cltd mov sbb jge ja xor js fdivrs inc sbb cmpsb sbb mov mov stc mov cmp cld and ss mov cmp add int3 or stos repz in jo,pn mov or pop cmp and cwtl or xchg or lcall xchg insl sub add inc add sbb in and out jmp jmp out popf fstpl iret clc int data16 and add and fwait mov push rorb mov gs jl or cmc arpl dec rcll xchg ja push xchg add enter mov pop push mov daa imul and jnp mov stc iret xchg mov mov inc jno mov call xchg call xchg dec frstor jo rcll push in dec mov addr16 or mov mov imul mov std in hlt xchg iret scas (bad) cld cld outsl jg cli loop int sub sti jecxz clc sarl (bad) mov call fdivrl pop jb in xor cs stos mov or and mov pop cs sbb das lods xchg and int adc or jl (bad) xchg cmp leave xchg and push or add cmp imul mulb ficomp cmpsl bnd das es xor adc lcall in rorl push divb xor sbb lret cmp ljmp movsl pop insl popa cld sbb push hlt push mov push mov imul in int test icebp (bad) outsb cld xchg jae jle loopne cmc (bad) stos lods pop push in dec push imul js adc in sbb iret int dec imul bound lods cmp mov and pop cmp loop enter scas popa mov and push mov das outsb cs push rorl je nop ja jp fwait xlat dec dec jmp mov out aaa xchg int lods xchg (bad) repnz sub ret and xchg or ret aad dec js repz test push mov push movb push cmpsb cbtw mov bound mov aad pop stos out push js (bad) or enter lcall rcr xchg (bad) divl jge jg jnp bound xlat lcall mov cmpl pop and rolb jne push popa mov adc xchg ret loop fistl cmp sub (bad) cld in jecxz mov lahf (bad) out fistpll std (bad) mov mov lock jecxz fisttp (bad) jnp cld jae call add fnstsw mov push jae push pop push or adc stos repz into cmpsl pusha xor jae fs (bad) cmp mov repnz test lea lods fldl push inc cmp lea and xchg cmc mov jno insl je fisubr aaa div pop gs out retw xor cltd push push bound mov bound push mov xor outsb imul push push jo ja jnp repnz pop mov adc dec cmp lret das sti out out jne xchg cld scas aad pop repnz and test pop push ret lahf enter mov dec and inc ljmp inc fwait push fcompl mov lret jmp push pop pushf cmp jg mov pop cld mov add out and pop movsl mov sub dec jno sub pop fs pop cmc fiadd cmp outsl popa call outsl fistp lcall loopne mov adc pop shl jg mov or popa mov push sub adc xor js mov push xor popa add lods adc sub enter imul cltd xor lods wbinvd jl test cmpsl leave scas repnz sub mov xchg movl lcall xor jns jae enter iret (bad) xor pop push push pop cmpl mov ror mov movsb sbb (bad) repnz data16 mov aas std jecxz scas (bad) (bad) in cld xlat mov push mov scas scas in in add add dec inc dec inc scas inc pusha (bad) and dec inc cmp popa inc add add add add add data16 cltd add int3 add incl sub add xor sub sub sub add add add add add add add add add add add add add add aad add data16 cltd add int3 add incl incl add xor jmp lcall (bad) pushl add xor xor add add add xor add sub xor xor cltd xor int3 xor pushl push add push xor push xor xor xor xor xor xor xor xor xor xor add aad xor xor cltd xor int3 xor pushl incl xor xor jmp lcall (bad) jmp add xor data16 add sub sub sub sub sub push add xor data16 cltd push int3 push jmp add xor data16 jmp add xor data16 cltd data16 int3 data16 jmp add xor data16 data16 data16 incw pushw jmpw lcall (bad) lcall xor cltd cltd add cltd add cltd sub cltd sub cltd sub sub sub cltd push add cwtd push cltd cltd push int3 cltd push lcall xor cltd cltd or cmp stos add cwtd stos cltd cltd stos int3 cltd stos lcall xor cltd cltd aad cltd aad cltd incl cltd pushl cltd jmp lcall (bad) dec add int3 add int3 add add add int3 sub int3 sub int3 sub sub sub int3 push add push xor push data16 push cltd int3 push int3 int3 push dec addb xorb andb cltd int3 or cmp stos add stos xor stos data16 stos cltd int3 stos int3 int3 stos dec aad int3 aad int3 aad int3 aad int3 aad int3 aad int3 incl int3 pushl int3 jmp lcall (bad) (bad) incl add add incl incw cltd incl int3 incl (bad) ljmp add sub ljmp ljmpw cltd ljmp int3 ljmp (bad) call call call call call call incl incl incl ljmp ljmp ljmp call add aad call callw cltd call int3 call (bad) (bad) incl (bad) pushl (bad) jmp lcall (bad) incl add add stc add add cld add add add xchg add or add adc cltd fisub pop cwtl mov cmpsb xor and and push daa dec lcall inc inc test shll es dec lret xchg and add mov inc xchg sarl dec jno lds mov sbb push test dec les mov mov sub sub xor outsb pushf cmp rclb push icebp popa inc xor push dec sbb lock gs mov push fcompl test cmpsb dec push js dec popf push jns and inc ror lcall addr16 sub and cltd sbb fmull jecxz sbb js dec pop adc (bad) mov test or sbb repz rcll mov or arpl push fbld call sub iret ljmp mov (bad) ret push jp lcall movsl pop cmp cltd xchg pop jae pop xor sbb ds inc leave dec xor fdivs movsl sbb sahf jne or sub test leave notl pop and pop cwtl xlat addr16 in push jns adc jno imul push aam inc arpl mov das movsl mov push adc mov push inc push jno sahf mov es inc inc adc dec sbb lods sub xchg mov jns movsl lea bound loopne insb jns movsb cwtl sbb cltd and rorb fs mov lcall sbbl bound adc jb cmpsb and leave mov jnp popa xchg lahf jbe push call addr16 fwait xor cmc lret xchg nop inc or mov arpl test daa movsl aam test pop in and stc ljmp sub sbb loop cltd jle (bad) push shlb dec lds mov sub icebp lret lea pop mov mov (bad) (bad) shll sahf inc push jns inc mov sbb (bad) push xchg mov mov push and mov les xchg cmp fistpl fnsave cli push push cmpsl arpl imul and and (bad) mov data16 mov and lods insb repnz xchg xchg xchg xor jne fnstenv gs (bad) test pop inc inc (bad) cwtl daa pop or dec sub and mov popa adc xchg popa adc adc hlt xchg in push xchg rclb in insl mov pop (bad) leave lods js loopne hlt sbb in loope pop lods aad xchg rcr adcb inc mov dec jne push gs out cwtl xor push mov jb loop jnp mov pop push test ss cwtl fs ja and or cmp jne inc outsl push out sbb sub jnp je pop sahf dec inc cs mov mov pop sub xchg (bad) xchg sbb xchg in fmuls pop cld xlat xchg cli lea jbe nop push outsl push and scas mov (bad) mov sbb lods les aad enter lcall mov mov sub mov sbb adc xor icebp fnop push clc xor or pop jmp pop xchg sbb push inc cld jb lea addr16 lret lret or and int3 xchg add jmp jecxz jb loopne push add and push (bad) mov clc mov sbb inc cmp bound je scas lea adc in sahf in mov mov test add es inc lret mov imul iret adc and add cmp and inc push mov add mov dec mov xchg or lock dec push sbb jno outsl cmp push and (bad) jae int3 movsb es adc repz dec dec lods gs ja movsl and (bad) outsl jno leave dec sbb fs fdiv in jle pushf mov jmp sbb shrl lret lret or es and mov inc xor into lock pop xor iret push sbb (bad) dec inc mov inc or add mov hlt push pusha cmp sahf inc xor dec mov (bad) or sbb call and mov cwtl or addr16 cs sbb lock inc (bad) cli push inc push pop push sub adc inc popa test xchg stos xchg inc lret cld call dec dec addr16 sub repz jmp push inc cld and bound lcall nop sub sbb (bad) adc sbb into stc rclb cmpsb xor adc sbb mov fdivr push pop jp mov sbb mov loop in cli push xor cmp sarb scas jbe push add mov lret fldenv mov in xchg or adc leave outsb in pop mov and jae and xchg push mov aaa inc outsl mov popf jbe and dec jnp daa and xchg lea xor mov xor fsubs pop out (bad) mov or in cs stos cld mov movsb xchg mov xor jecxz or popa mov pop and push movsb add ret push test xor popa inc mov cld jno das sub movsl push js test daa or sbb faddl pop adcl dec loope repnz xor cwtl popf mov sub pop lret (bad) xor cmpsb sbb sbb mov loop test (bad) aad imulb in leave roll mov inc mov xor pop aad data16 imul sub mov push push inc mov adc aad xor int3 pushf mov cmp mov jbe test pop cmp add and fdivrs push inc sub pop mov mov inc mov mov test mov mov jl or inc or and xor (bad) cmc fbld pushf scas dec outsb or enter rclb popa xchg fimull dec xchg dec xchg xor les lret lcall aas xor lods lds in lcall cmp (bad) jns sbb mov xchg push fnsave call mov rol decb mov mov loop pop es fwait xchg and ret lds js sbb (bad) lret clc inc shr xchg jmp mov fsubr sub cmp fnop cmpb in shll js mov stos pop mov push mov jbe dec dec push in int3 shrl dec addr16 test xor sub lss fisttpl (bad) das int3 rorb jecxz stos push sbb test jmp leave inc push cmp pop mov (bad) arpl ljmp stc xor and cmp fxch mov es adc call xchg xor and insl jecxz addb sahf push loop out int3 pop mov mov add jbe popf leave lods pop andl (bad) xor sbb mov sbb push sub xchg stc subl push pop out inc jg adc dec xchg jl inc (bad) lock movsb adc (bad) icebp jle cmpsl pop (bad) ds xor jae in xor xor and xchg addb mov bound enter icebp cmp les out ja xor es test and in push clc adc sub cmp mov mov hlt ret mov xchg cmp orl enter addr16 push das shrl xchg xor popf ret or cmp jne (bad) out mov pop cmp inc int pop adc sbb mov or cmp push mov arpl inc lahf out outsl sub adc lds add or (bad) or jno,pn xchg rorb rorb lock divl hlt xor fst xchg pop adc cmp sbb adc or cmp out (bad) xchg xor and adcl rorb mov mov push mov inc mov inc xor jle push dec pop inc cmp pop sub or enter cmp and add pop ret js (bad) es in mov clc pop mov nop cmp push sub and sbb xor inc add daa ret jo push mov outsl into and push mov sub and and or add push adc mov icebp xchg cmp aam push inc iret xor rcrl xor sub mov push xor xor andl popa pop ja imul xor or add jg pop sub xchg pop mov and inc ret add int3 icebp sub xor and xor pusha div cmp test insl ds xchg dec fs cmpsb xor (bad) adc xor (bad) and push push pop pop mov adc es xor mov aas add cmp and (bad) xor xor imulb pop mov test pusha jp jno push daa adc daa adc dec and aam aaa xor cmp push adc icebp cltd xor xchg pop cmp test pop call dec into xchg das das sarl adc movsb inc pop mov ret push adc xchg adc shll fwait jne pushf cltd and lret incl dec adc push popf das ret and xchg jge aas (bad) sarl rcll sti mov dec jno mov insb loop nop (bad) lahf jb inc enter add mov cmp popa jae popa cmp mov negl stc inc fs gs cmp mov add mov (bad) fwait bound rol mov xchg sahf pop aaa xor mov adc aas sbb cmc stc push mov sub add push push inc jb popa adc mov xchg popf sti fcoms bound aam sub push mov cmp shll scas mov sbb outsb jb push aaa pop and sub mov jbe sub pusha aaa mov loope adc and push adc sbb sbbl divb sar sbb mov mov cmp loope cmp mov ja or dec call sub inc ror mov adc and push xor test out xor xchg inc dec xchg mov daa push mov fprem1 sbb jb sbb push xor jmp dec iret (bad) xor loope ss mov adc inc es pop sbb push pop cmp lcall je inc cmp and and pop iret icebp pop data16 adc dec adc dec dec andl xchg (bad) pop (bad) lea adc push xlat cmp or or stos sbb outsb jbe inc mov pop jbe adc inc fwait inc inc lods add cltd pop and mov test inc fisubl add xchg inc mov pop mov sub adc sbb xchg jo daa cmp movsl dec sbb xchg cmp cmp push adc stos shrl add out test leave aas pop (bad) adc and dec pop xchg pushf cmc add mov lods (bad) (bad) xor (bad) mov pushw jno xchg or ret add jbe jg fs cmp jno js ret or (bad) pop daa (bad) icebp das aaa xchg mov adc add or xchg mov or call and fwait inc jp cs sub xchg pushf mov xchg jns aaa inc and mov sub loop outsb shlb loope or lret (bad) rcll jbe mov sub mov cmp lds mov mov xor packuswb jnp pushl cmovno push xlat cmp jle rcrl data16 mov (bad) xor mov sahf out push testb roll lret movsl aam jnp push push cmp mov popf lcall cmc push cmp arpl dec mulb mov inc push or mov lds inc jp aaa sbb jb sbb xchg push pop inc inc cs and push inc (bad) loope adc cmp jbe or std xchg xchg rcrl popa movsb sub mov pop daa or pop sti cltd adc (bad) xchg je das adc (bad) xor outsb jno adc adc push adc inc int3 dec in cmp push sbb pop mov sub inc dec sbb mov arpl sbbl outsb and imul mov ds ja daa and adc mov lock inc sbb xchg or mov xor cltd xchg test cmpsb mov pop inc mov mov imul adc sbb dec scas sub sahf and or mov push nop andl cmp mov test inc inc lods jbe mov xchg mov adc and sahf fidivl push and js ret sarl sub (bad) repnz xchg stc daa inc ret add dec mov rcll bound xor pop mov fisubl jmp and aad lea iret lds cmp sub xchg xor fwait jmp scas outsl adc fwait lcall enter test insb xchg sub sbb xchg or push rcrl pop jge popa ret sar fsubs sub ss and xor mov dec cmp adc and hlt rclb push inc ja scas xchg dec lea jne adc daa push add and call cmp cmp ljmp jp loop jns jp scas lods jnp push mov xor sbb (bad) push jns enter jle in (bad) xchg cmpsl imul mov mov or sub movsb js mov sub xor (bad) std add sarl ret mov ss mov jmp dec or ss lods lret cltd ror pop xacquire sbb (bad) lret adc and (bad) cmpsb and iret aas out fsubl add jle push repnz test fadds inc push ds in xchg sbb call push and inc adc cld fldl pusha lods inc jno cmp rorl xor repnz ret nop and fistpl xlat adc push in stc test dec hlt mov add mov push mov or (bad) cmp mov pop ljmp push xor mov inc aad pusha mov add dec push mov sub jns xchg mov and in push popf clc sbb lea inc mov mov test inc or xor ljmp je inc scas or dec lock jge ret divl aam sub mov shlb (bad) cld (bad) je incl adc mov ficom cmp mov (bad) mov mov cmpsb stc xor add mov xor arpl push push and dec push in mov mov jbe into jnp fs popf dec jbe hlt push call push scas test insl jns push pop cli leave orb jp inc pop xchg cli jg icebp cltd cmc repz push pop call adc cld nop leave lods pop jae push cli push je pushf iret xchg xlat xchg cmpsb jl push pushf sub call and cmp out (bad) scas lcall jb mov sbb stc scas xchg in xor int push mov xor in lds pop mov sbb mov adc jae add mov sub or and push cltd mov (bad) icebp mov sub cmpsb pop dec dec cli mov xchg ljmp addr16 (bad) shr mov or mov jno add pop imul mov or fcmovnu jno or inc pop orl icebp cmp insl scas mov xor shrb inc inc inc pusha pop xlat das pop sub mov and mov sub push dec (bad) or faddl push cmc cwtl jb mov les les pusha out clc jne add lcall ret inc xchg xlat sbb mov (bad) fstpl adc add loope mov lea ds push push lahf (bad) fldcw (bad) icebp mov movzbl mov push pop ret lock fbld dec addr16 addr16 pop cltd push enter mov mov sarl inc in jge mov cmp (bad) loop lock mov sub and jno stos push sub int mov xor pop lret sub loope aam bound xor xor push sub stc xor cmpsl fnstcw cmp cmp jbe add or into inc cwtl cmp and inc adc lahf xchg js outsl sub xchg add mov ds dec divb jae mov dec pop jp test cmp sbb cmpsb dec cltd dec dec mov mov iret or push es jae pop mov cmpsl pop js and and jnp cltd xchg cmc or sbb push jge jae andb mov mov int3 fiaddl push fidivr jmp xor rclb ljmp jb cld pop divb (bad) mov sub gs sub into ds xchg imul stos inc out aaa arpl andl ja mov xchg lods mov push sub jo daa jmp sahf iret cmp and cld fwait pop add sti imul test subb test inc shrl mov mov xchg sub mov fdivrs lahf or inc iret ja add lret mov (bad) lods pop and cld je cs inc sub out jnp add xor adcb sarl mov pop popa fs xchg (bad) (bad) movups ja push call sbb sarl insb aam xor jecxz movl xchg andb mov aad jbe aam ret das xor ss negb jge rcl je xchg cmp ret leave and ds cmp add mov movsb pop mov icebp or dec mov lret movsl bswap das mov scas cmp std loope sar enter lock inc push orl xor sbb movsb jl pop cmp lds test mov clc jnp aaa sbb or repz movsl loope cmp ret stc iret xchg xchg adc pop jmp push ja adc pop mov fwait push mov icebp in mov jg js push sbb cmp push jbe mov xor inc adc inc orb sub test pushf jns xor pop mov stc xchg cs test insl cmp mov adc and or jnp inc in mov mov jbe pop xlat mov loopne xor std sti idiv cmp divb adc movsb cwtl shll es jp mov push (bad) cli cmpsb pop lret daa mov add orl dec xlat cld and cmpsl test mov adc in les cld pop je cs jle lea cwtl mov ret outsb fldt test sbb add (bad) shl shlb loopne aaa daa xchg loop and imul test aaa int3 or aaa jne push inc lods push daa fdiv out scas imul std je aaa sub push and ret jno aam pop add stos lcall xor inc outsb ds push pop aaa push jbe xchg mov jnp test imul data16 iret pop dec mov fdivl push rorl fsts push fisttp in js leave stc jl cmpsb jne xor out mov cs mov arpl lret in aaa push cs (bad) repz fidivl sbb and cmp pop cmp jl clc repnz test dec inc jb add mov test cmpl lods fisttpl aaa loope mov adc or mov jae fwait cmp (bad) or aam mov pop jl lcall neg cli into aam mov mov xor mov xor dec repnz cmp sub xchg fisubrl bound mov mov xor mov xchg mov lods sbb mov cmpsw fcoml ja clc push and (bad) rcrb push xor adc cmp mov fcoms jbe jbe pop push mov stos jmp mov sub es (bad) xor fstpl stc cmp inc xchg popa xor sbb (bad) inc les jb sub and or add jecxz pop test lods (bad) jg xchg lods cmc mov push call and xor outsb add push mov icebp and adc add mul dec pop mov frstor mov insl repnz lahf mov out aad iret pusha push bnd pusha push daa dec xchg add mov pop sbb hlt sbb arpl mov mov pop popf mov jne jns xchg xor mov mov arpl pop cmp sub cli test inc mov mov lcall mov cld adc scas lock cmc dec pop lock mov push insb stos (bad) aas xchg mov lock aaa dec lds aam std sar test mov fxch adc cmp mov sub pop jmp and xchg mov jb out lret rorb scas cmc addr16 gs in mov jmp js jg scas cmp cmpsb popf mov fiaddl icebp adc aaa mov pop or sahf lgs push xor xor inc sub out in nop inc stc out jb and addr16 mov loop adc jo lret out dec push xor mov out leave mov clc cmp daa dec lret movntps stos inc add push mov rcll lock push mov push adc js mov jge inc (bad) mov test loope mov nop add insb inc mov push repz lret cmp test inc mov stos and xor cmp cld jmp ror inc mov mov pop loopne xchg out lret push iret dec test dec sub rep and insb sti std js das ror jnp call sbb sub lcall push push sub push xchg aad xchg loop push adc test inc xchg jg and adc and mov cld data16 push cld (bad) loopne fnstenv insl repnz mov sbb add rcrl inc out ffreep add loop mov cmp add push inc pop inc pop xchg inc jmp jge mov cmp sarl sbb mul xchg (bad) mov orl xchg jbe mov pop mov and inc mov (bad) and (bad) jmp sub das pop push popa add je jge jg adc xchg cmpsb shll jmp std push jmp cmpsl xor mov imul sbb cmp in xchg sahf (bad) loope hlt pop push (bad) out aam fnstsw xchg and ljmp sbb inc add loop pusha sbb xor in mov xchg xchg mov add pop out adc cld xchg xchg js add dec and jb adc inc dec xchg adc mov push rcrb test and daa sub mov fwait adc loope mov inc and fistp mov cmp xchg cmpps mov fadd cmp add lds mov clc mov mov adc mov mov mov icebp aad pop or clc dec push xchg add enter add mov (bad) dec push lret mov push inc cmp push es xor mov scas jbe (bad) jne sbb inc ja adc cltd sbb (bad) mull cmp jae mov aam push add popa mov sbb adc les pop nop mov pop cmpl inc loopne lock mov mov mov mov xor mov sub jecxz dec cmp out bound movsb (bad) enter sbb push fist mull sub mov xchg jg pushf jae int3 lahf push jae xor jo repz pop fild xchg (bad) mov mov push dec icebp dec dec or pop push mov sahf leave lret cwtl lret into add rolb stos xchg mov outsl cli ret outsb ja xorb daa mov loop (bad) cli test pop addr16 clc adc cltd aam jmp mov loop ret jne or sub pusha aaa aas cmp test sarl cwtl dec lret and cmpsl jmp data16 mov cmpsb and fwait pop es into insb jp sub (bad) mov push mov pop lds insl loop cwtl stos insl push mov clc sub push (bad) mov insl mov aaa je notb push out stc add inc sbb stc mov mov inc xchg lds and sub jl and push fs mov aam add aaa clc jmp (bad) fisubl lret sahf adc clc pop fcompl or pop cmp jno xchg mov ficomp lds mov pop inc mov xor pusha cmp sbb es nop into xchg mov rolb xchg outsb sbb xlat fdivrs push lret xor pop mov inc inc mov sbbl aad test push sbb pop stos out popl outsl and idivl push pop mov cmp in aad repnz dec and fimul loopne xchg sub dec shr bound lcall js mov cmp add clc inc or xchg loope (bad) iret fxtract fnstcw pop loope (bad) shll add (bad) dec enter xlat mov in das ret sub es lret rolb repnz fist or es enter stc push sub adc xchg jl sub xor lcall rcr sbb cwtl fisttpll cwtl loop mov xorl lret int3 xchg adc mul mov pop cmp add arpl sbb in addr16 (bad) icebp je xchg xor inc icebp mov je mov es fisttpll lret jns xor mov and rcrb sbb ss mov or push push lcall lahf cmpsb dec test mov je lods fimul mov leave sub mov jbe out cmp push and ljmp jp out xchg addb xchg adc mov hlt xchg sub cmp adc and sti outsb dec cltd adc bound jbe jmp push push push mov jle pop sbb icebp gs (bad) add sbb jne (bad) idiv (bad) jae jp stos push arpl sub lds out mov xor mov push push pop popa sti jae jne adc push int pop and pop rorl inc jb movsb sub jecxz fs and or add into or lret scas inc xchg cmp inc mov cld xchg out inc or or loop popf xor sbb out inc pop push negb push mov sar pop pop mov xor rorl hlt jne mov jno in lods jbe push adc inc addr16 js jns lret push lea lcall pop lcall addr16 mov xchg mov ja out dec popa lock out sub les cmp push gs sub test leave out aaa jns (bad) jbe nop enter test sub sbb xchg unpcklps icebp je (bad) stos outsb hlt push subl and mov sbb cmpsl dec (bad) mov pop pop daa xor cmp das lret pop xorl aam repnz lea or sbb sub and xor xchg rcrb sbb shll test in outsb sbb mov push and push sub lods xor xlat pushf sub cltd jge (bad) aas lods cli cmp jle and es mov dec or (bad) adc lcall inc fwait jg repz testl sub mov add mov sbb mov lods xlat or sbb cltd sbb or movsl call cmpsb jmp mov inc loope mov mov sbb adc cs pop cs jp gs adc mov pop rclb mov mov mov xchg dec xchg inc push rcrb cli je call call ds (bad) out jbe aad fldln2 fmull mov xor jg int fstl inc xchg jge flds pop and or xor sbbl jg daa push ljmp cs pop mov (bad) mull enter test cmp pop daa daa out mov xor rcl ss and xchg pusha pop mov xorl in jp ret fsub xchg mov popf lock (bad) push jnp cmp (bad) and sub movsb lret pop sbb out sub dec arpl sbb (bad) (bad) fnstsw sarb adc jle lea mov mov les mov mov pop pop xorl (bad) push in adc inc sbb mov in in stc mov dec test push jae imul xchg lock xor mov cmp cmpsb rclb cwtl (bad) mov push outsb pop hlt mov pop sbb inc sbb add in xchg mov dec fnop dec subb rcl mov rdpmc mov movsb in test lret sbb je lea push add aas (bad) pop pop pusha and shlb mov pop test in add sub fsubp stos mov jmp fidiv lret ljmp ljmp int3 inc mov pop stc mov pop xor out inc jmp inc mov cwtl cwtl outsl sub mov sti cmpsb fscale daa dec pop dec loopne adc imul dec lods mov into sub sub xchg das cmp jo outsb pop pop add (bad) movsl push outsl arpl sub fcmovb lock fildll into dec (bad) mov scas add sub xchg xchg add pop incb ss xchg mov out jg mov mov push push loopne inc mov dec or jmp jno xchg xor push in out jbe adc sbbl enter pop negl and xor in or insl mov adc ljmp mov push (bad) pop int3 sbb push adc push js or inc pop mov insl mov enter mov sbb scas lahf and xor xor adc jae add jmp push arpl adc adc dec inc pop and push push mov cmp nop jo clc add jbe push leave mov mov addl lea jp xor insb orb add cmp jno jg jp xchg cmpsl and or mov xor and test clc push xlat inc pop jge aad pop imul xor or imul pop pop xchg mov xchg cltd xchg or xchg inc sbb cmpsl mov push lea cltd enter xor fcoml loop fistl stos jmp cli jecxz mov in out rclb dec stos sbb fidivr nop ret lock divb mov xor inc push lret sub sbb jb out addb adc mov stos (bad) sub aam xor dec xchg ds lock das outsl (bad) imul jge xor pop xlat aas sahf stos push lcall in ret push mov add sahf (bad) divb imul push lret jle xlat xchg gs sbb mov xor xor outsl jo ds je lcall pop push ret shlb fs imul sub xchg sub pop (bad) fnstenv sarb mov mov cli xor negl cmpsb int3 inc sub nop stc (bad) out jo sbb xchg imul inc rcl ja je inc sbb push push aam rol push ret xchg test mov fxch or xor popa loop popf fiaddl and inc pop test movsb fstpt negb xor push push or gs cmp xor jbe imul addl sub jae pop test pop cmp mov dec mov xor add popa test pop push push dec loope lds (bad) xchg push hlt and jge push pop sub inc adc or sbb mulb pop pushf push or xchg scas loope data16 inc int3 (bad) jae lods and loopne or push push add add or test les in mov sub pop notb jo pop mov mov cmp (bad) xchg and daa push or adc (bad) fnstenv es sub xor push xor ss leave cli sub or inc pop jge loop or pushf insl es mov cmp push repnz movsl or and pop push mov fmul xlat sub lods ret push lahf mov cmp dec popa mov add push imul push add push in sbb out push dec decl in rolb cmp sbb xor or push jmp cmc jns out mov aas loopne push cmp dec incb dec xchg dec hlt ret cmp mov xchg mov outsl xor out imul movb mov fucomi fild mov outsb jne pop lahf rcrl push movsb hlt cmp (bad) mov out pop and cmp pusha xchg push js movsb in cmpl ret insb popf jb pop popf in ljmp std push jmp mov push pop jns add sub sbb lock sar and clc sbb and in lea mov cmpsb (bad) xchg dec cmp dec sar pop in mov and dec bound ret test (bad) pop leave ret lock loopne sbb ljmp push add movsl push stos or xchg add push sub pushf notl xor orb stos mov push inc add cli dec in stc add pushf cld (bad) mov addr16 xchg pop call outsl xchg jno add xchg inc dec lea xchg dec data16 push pop pop sbb mov aaa enter adc cld cltd push pop (bad) mov pushw ljmp sbb mov (bad) test out inc pop test mov pop cld sbb pop mov fsubr cmp addr16 lods inc lods pop int3 mov sub scas add jo ldmxcsr mov or cmp out ds icebp aad pop push mov xchg ds push lds or repnz ficompl adc push lahf inc mov jmp sub out and repnz (bad) in fiadd pop and jne mov aaa cmpsl xor sbb sti mov pop inc rorb xchg (bad) aas roll popa aam add ljmp fistpll mov ficoml jg aaa lds mov fmul popf push mov jge into adcl loop fist test jb mov jbe inc sbb cmp dec cmp xor push and into inc mov es inc out add push fs xor loope pop mov mov sub dec sub pop frstor idivl mov test repnz shlb arpl test sbb ljmp mov sub test mov push mov mov out shrl ljmp loope jl xor mov xchg sub outsl add and xor call dec lods in jmp pop leave das shll mov in mov dec repnz push call add roll int jnp push or ret cmp addb jo sub cltd add pop dec fiaddl fsubl clc or ret into sbb std shrl pop inc pop adc imull (bad) out pushf out aam nop mov cmp push hlt mov pop imul xor outsb stos mov stos les aaa dec clc sti push mov mov fsubs (bad) fiadd rcrw jae das ficompl fnstsw or loope (bad) sub push popa xchg dec mov addr16 adc inc lods adc outsb cltd sbb sub (bad) (bad) outsl daa mov je std imul imul syscall sbb adc or movsb inc fs insb rcrb sbb imul hlt dec pop inc adc loope cmpsb in or dec enter or xchg enter xor in sti mov loop pop fstpl (bad) mov jmp hlt in (bad) pop and sbb mov int3 cmp xor adc mov lcall int3 adc mov mov mov shrl or push or lret ss test jno jl cwtl xor inc xor xor cmp aaa orb push shrb cmp (bad) fiadd pop inc clc dec xchg lahf ds fwait cvtdq2ps jne xlat pushf adc je ja test mov jae addr16 pop jae sbb stos jb enter imul outsb sbb ljmp outsb (bad) stos fst int3 shl cmp and scas pop cltd inc (bad) icebp loope loope stc fisubr je pop mov mov dec aaa (bad) (bad) jnp and push decb fiadd hlt ds hlt cwtl dec imul jo fs subl outsl and test add jne lods negb (bad) notl insl (bad) lahf pop in push les arpl jnp jge inc lods cmc ret mov (bad) lahf push push add cmp in or add xchg bound (bad) jle into lret fidivr (bad) (bad) xor repz cwtl test stc shl jbe idiv ss cltd mov cmp mov lea (bad) popf push aad mov lea outsb ja mov push jbe out out call aam (bad) std loop or cmp ffree movsb pop sarb mov fisubl les and inc push stc or js adc adc lahf fwait (bad) loopne shl loopne push lahf xchg add (bad) sbb daa orb test add cmp mov pop imul das mov inc subl ja lret sbb push loopne pop xor push (bad) clc ret scas fisttpll lock adcb adcl pop jmp push rcll xchg inc mov jecxz lret (bad) mov loope pop cmc nop xor fcoms (bad) fcomi lcall mov mov aas (bad) test mov and add in jno inc test out movsl stos popa or clc lahf adc mov loopne pushf xor mov dec loop arpl sbb xchg xchg lcall cmpsl inc repz pushf pop add out cld inc push test pop mov sbb (bad) (bad) lret les mov lods lock add or cmp add push sbbb mov push cmpsl pop inc icebp or or (bad) leave daa rorb outsl jl daa mov cmp push push test vmovapd sub pop inc arpl pusha dec and fcoms fs outsl icebp sbb lds cmp outsl in xchg push je inc shufps fnclex push inc ss hlt test pop cmpb push fdivrs loop cs xor dec (bad) cmp mov push and arpl pusha or cmp lret mov fcoms in enter add adc pop movb dec out das in arpl inc fiadd xchg jo cltd fs into insb adc rcr jg (bad) xchg in dec (bad) cli sub pushf stos pop mov (bad) stos adc jp mov inc repnz lret sub sub mov jp inc cmpsl inc lock (bad) cli mov in aam stos dec sub or andl ljmp fimull push (bad) je sub add add mov movsb repnz pop pusha cmp dec lods imul fdivl xchg push jae mov sahf and cmp cmpsb mov push jle push mov mov mov jns (bad) mov rcr sbb cmp dec ss divl lcall subl xor push stos push pop pop loope mov and cmp mov sahf mov out mov xor repnz xor arpl cmp jns aad push cmp or add bound pop test sub pusha int pop iret jecxz adc lds addr16 xchg push mov xchg nop (bad) jmp arpl mov test sbb xchg lods jne and out inc loop mov dec inc xchg decb jmp repnz sbb adc insb roll cld and jbe cmpsb xor mov mov cli scas mov test mov outsb in dec push sbb cmp mov add mov inc and mov cmp test std push fiadd fimul mov dec arpl mov xchg out pusha adcl fldln2 pop xor fstps scas mul dec mov (bad) push dec xor inc dec adc push ja cli testb add push out jp mov mov ret xchg popa test mov mov in mov xchg int3 adc cmc in nop test push push xor adc dec mov xlat lcall mov and and aaa dec es je test lds out (bad) addr16 cli js and jg inc lcall and mov and push pop sbb ret daa (bad) or cmp inc out in es je pushf sti (bad) sbb cli (bad) ret dec push jbe sahf jo jno xchg fistp xchg push mov adc clc stos mov push xor loop lahf jnp push and call sub (bad) jle aad cmp mov lock out insl mov aas mov je inc push in test fstp xchg (bad) mov cli push enter jp testl jns mov mov mov nop fsubrs negl gs adc pushf push sub mov cli daa adc xchg inc jl ds cwtl mov jno adc pop pusha lcall or add sbb xor fldenv xor fcoms cmp roll push push mov sti mov add mov or mov or aam (bad) mov jg xchg xlat sbb pop loope or fs inc inc pushf clc mov xchg jno inc xchg adc add jl jp jmp aad clc mov jne imul or rcrb pop or mov nop inc sub gs fwait adc xchg sbb out mov fs daa jb (bad) lods xchg stos and add aas inc adc sbb cwtl pop jmp int3 ds fstpt loopne shl ret pushf xchg nop movsb mov movsl pushf mov repz int cmp fist test xor call mov pop clc adc dec test pop xorl ret stc cmp clc movsl or loope fld test or (bad) lret sub xchg out pop outsl xchg das das mov (bad) sbb or and jmp fldt pop clc add push scas cmpsl ljmp js iret dec inc lahf xlat mov out xor pop loop or mov (bad) in push xor pop fs out in xchg push enter and pop and mov xchg inc aam or xchg pop and stos jecxz fwait dec aam mov cwtl sbb addl ret jmp lahf pop dec hlt sarl xor stos in push push pop fsts pop mov cmp outsb push or mov popf outsb int sub push or imul mov shll das js test add fistl jecxz pop mov movl mov (bad) inc imul pushf mov call lods mov fcomp push aas shll cmp inc add out enter out cmp aad pop arpl dec stc lcall sbb push pop mov xor movsw fs (bad) mov mov outsb movsl pop jne jecxz call inc mov xor sbbl lea mov dec mov fistpll ret (bad) notb lahf ljmp add mov jb iret jge (bad) push dec std cltd push sbb push loope lret mov dec push jle cli lahf lock insb scas or lahf fistpll adc xchg leave dec rcrl in sub and dec jne sbb scas mov xor and repz sub cltd fstl mov cs nop pop js sbbl mov lcall test add movsb mov push inc adc xchg pop mov adc mov lds sti push ret pop cmpps in or inc and mov dec popf lret xchg push pop (bad) pop jg inc mov pop arpl jne add adc (bad) dec into mov (bad) mov pminsw push mov scas cmp jno cmpb imul inc mov jle cmp mov fildl out push push push mov push pop pushf xchg sub stc dec fistl push fstl mov or and aam jo test loopne jae imul call xchg cmpsl push or and int3 xchg add add nop fnstsw push add mov mov mov push int enter or adc movsl adc push aad xchg repz out jge testb mov pop jmp repz scas add and dec inc movsb out fcmovb (bad) mov data16 lcall inc scas hlt mov stos repnz jae jg ja imul lret push in xchg (bad) lods scas mov loope mov mov out add inc cltd add push outsb nop push adc or icebp xchg pop dec cmc (bad) dec scas jb adc sub leave pop imulb sub lods mov or cmpsb (bad) push xor repnz cltd aad cli iret add mov mov mov mov outsl jnp pushf jne cmp (bad) aad lock mov fisub cmp add dec or xor mov xor inc and sub cmp mov aad cmpsb ffreep int3 mov inc xchg inc cmp cmp xor fdivrs push jl cmp push mov add or test out and (bad) aaa scas xchg aad xchg xchg arpl dec sub inc cmpsl es outsl movsl pop adc adc or imul or (bad) out add ja cmp loop or add out push pop pusha add leave push jl fstpl imulb negl ficoml sub lds inc nop popl mov xchg xor cmp push and js push sub jne jne mov cmpsl push test nop dec cmpsb sbb and negb fdivrs ficompl fsubrs adcb cmc xlat lcall mov xor iret jmp jmp in adc rcll loope xchg xchg mov test mov (bad) inc inc push ret jle bound pop xchg lods push push and mov jl dec push test adc pop and cmc lods xchg sti dec push insb inc loopne leave jmp sbb cmpb xchg mov cmp fildl test dec pop lods cmpsb mov out jle or cmp js pop out add scas push loopne pop add sub pop enter fwait push and dec shr push insl xchg stc lcall xchg sbb inc jge into mov adc or fisttpl movsl pop dec add add ds fcoms enter call xchg xor sarl cmpsb xor and movl cmp ja cmc mov xor mov insl addps int3 lock pop xchg add dec xchg jno jno jnp out and int cltd dec cmp fistp sub push fdivrs xlat xchg testb sti or jbe cmp inc lock xchg ja jl xor aad stos cli mov sti push jb or lods (bad) jo subb (bad) and (bad) jle inc jp,pt sarb dec rcl hlt loope pop dec rorb mov adc repnz pop mov push int addr16 xor insl mov das movb lock iret sbb cmpb mov js and ret cmpsl push sarl cmp jb movsb daa mov adc jg cmp out roll add xor cltd cmp sti sub std jae xor pop cmp and ret ret icebp inc jo mov lock mov fdivs inc (bad) mov xor lock aas leave jmp test out mov push (bad) xor mov sbb popf xchg lea jmp frstor lea or int3 push inc push pushf cmp fidivrl mov pop xor xor lret jnp das aaa lret pop cli dec dec xchg mov pop dec sub and aas ret rorl sub stos pop push mov xchg xor inc call xor and lds mov jbe aam (bad) stos mov pop cmp cltd inc add fcomip daa les scas loop (bad) jbe adc out push mov mov xor sub in int add xchg out sti cld std lret shl ret mov into jno movsl jnp push push out cld jge add mov scas in mov mov (bad) fidiv daa cmp es xchg in cmp ljmp push mov ret (bad) loopne lods add xlat or jecxz shlb mulb insb rcrl xor test cltd xchg lock into push lret adc xchg js into (bad) ds adc in fistl mov leave ljmp enter xor dec jmp push pop mov gs arpl inc outsb cmpsl mov inc cs (bad) lods jbe pop mov push sub repz outsl addr16 or dec sbb or push cmc es jecxz mov and xchg jne mov jns jl outsl xchg lds fidivrl xor out test popa jo xchg lea (bad) sbb inc dec out pusha call rolb insl stos sbb mov lcall (bad) ja frstor loopne sub xchg in pop call enter sbb ror and data16 and bnd mov push fstps mov popa and loop pop lret push jns pop jne and jo test mov in jno push jp int enter scas cs enter jecxz inc dec fstpl mov rclb mov fcoml mov push add mov popf jge xchg stos adc and push pop adc sub and es rorb addr16 mov cmp adc cmpsl and xchg push inc push push into xchg cmpsb lods mov xchg stos nop add (bad) icebp mov test jmp or sbb adc fdivrl pop iret push jb fwait mov arpl ljmp jae dec jg sbb repz bnd data16 adc and scas xchg leave (bad) dec sub mov sub stc icebp add aas gs inc imul in movsb aas sbb and push pushf scas shll sti jbe (bad) inc jbe push mov adc mov fimull mov push xchg loope jnp cld mov mov xor dec ljmp inc dec mov cmp dec mov mov addr16 mov sbb push pop lret lods pop jbe aam pop pop mov loop pop les push pop cmp aaa out adc or icebp sbb cs scas cmp addb cmc imulb push adc popf fnop and insb clc sbb test aam push leave sbbl jo and in fyl2x and fdivs xor add (bad) orl popf mov std mov or pop (bad) cmp pop lock arpl lret jge or cmp test out push out fs mov or cmp andl mov test sub add mov inc gs xchg or adc out mov sbb or pop je xchg or pusha and cld add push dec mov pop outsb pop inc cmp xchg push push scas sub out imul xchg outsb or sub (bad) bound daa les icebp add and xor adc data16 push inc popf mov and pushf ljmp nop into and ret jmp fcmovbe cwtl adc lea or (bad) std mov sub and xchg sbb int orl xchg sub insl add vaddsubpd insb insl pusha sbb es (bad) ljmp test daa push loope fldenv mov jnp push push hlt enter lds mov movsb lahf and daa aad dec insb fld fnstsw movb loope stc mov xchg popa dec or in push nop pop add popa int and dec mov add xchg jl mov mov imul push sub jl aas inc movb stos fidivr and push iret ds hlt out add out data16 shlb iret repnz bnd dec mov call loop jle fmuls push jae or cmp (bad) out sbb adc jecxz jne mov cmp stos cmp out cmp jnp iret mov mov lcall loope ljmp jge xchg jecxz daa push inc movsl jo aad arpl adc iret xchg subb (bad) test mov or and repnz mov or mov add repz pop flds sub mov cmp push adc andl mov sahf sbb mov ret xchg in fstps pop fiaddl mov add and outsb mov mov cmp mov push jmp xlat jbe and dec pop icebp rorb mov or ss xchg sbb arpl or sbb or mov mov addr16 pop gs fisubl jl (bad) push nop add aaa fcomip scas push mov int push mov les jo pop out loop stos xchg popa cmpsb call out test into outsl xor xchg lods cmp out subl sbb inc pop (bad) loope in jle xchg sub mov fwait mov in xchg mov iret stos hlt push mov add push lods push dec es cmp cld rcr mov cmp adc fs xor adc sbb repnz push push ret cld in add mov cmc push jp ret loope push add (bad) test fildll scas sarb sarl sub sbb inc out aas (bad) je jmp ds or or mov inc or mov in sbb ja inc es mov fs pop mov ss in dec mov or mov test pop in int sti (bad) or dec out fwait push pushf mov pop or pop (bad) faddl in int3 lret popa aaa aas (bad) jecxz lret xlat out ljmp xor inc in aad mov pop xor mov dec xchg push gs aaa arpl or enter inc leave ds mov lret aaa aas daa (bad) or out and into movsw inc xchg (bad) (bad) into cmp or dec dec adc mov xorb cli lds out jmp (bad) into dec pop add xchg push mov cmp xor mov aad mov hlt mov push lea mov cltd sbb cmpsl mov xchg pop jno dec pop adc das jno push arpl inc (bad) out nop xchg and adc shlb daa inc xor mov adc sub and push dec shrb icebp lcall pop push daa out daa dec add sub mov push sahf inc push inc and pop sahf (bad) notb in xchg mov cli inc cmp outsb (bad) std je adc int3 dec push das dec sarb push or and bound fcmovnb out ret jle sub cld iret mov call scas sbb cmpsl jmp and xlat dec cld shrl dec in mov xor jb out mov mov sub mov sub mov loop leave mov aam andb adc cwtl bound fsubrl mov daa xchg fcmovnu mov sbb push mov out shrb movsl (bad) adc sub mov sub lret cwtl (bad) lds fidivr or cmp mov test pop pushf xor sub fucom not jmp icebp cltd rolb xor stc and fs dec hlt fs pop xchg push fist out imul push jmp inc stos hlt lds jbe nop outsb dec insb cmp outsl jecxz insb mov cmpsb fsubs dec sbb int3 jb sub push push fucom popa cmp (bad) mov xlat into mov aas in popf push outsl sbb xchg (bad) repz dec iret divb xchg cmp xchg add lods (bad) mov cmp sbbb mov mov adc ja lods sbb je hlt mov inc outsl data16 cmp or mov sbb mov xchg sub scas adc cmp call test xchg lock fisub loopne mov cld pushw mov mov das xchg test lds popa mov jbe lret ja cli cs int3 sbb int3 push or jns repz push das ret mov das pop pop mov inc cltd inc push sub adc mov inc jbe fidiv sub leave outsl add jne fiadd cli (bad) scas jo xchg outsl or lods fsubrs aaa pop mov jmp repnz ljmp ljmp inc jns mov arpl sbb xchg and push dec inc addr16 into mov mov mov pop enter adcl or xchg or (bad) nop push mov data16 fsts jns dec (bad) nop in loop movsb pop hlt mov add (bad) fadd or outsb leave adc (bad) jno sub mov xchg jno out xlat sbb ja ljmp cwtl cld push out add dec or ljmp icebp popa mov dec addr16 lret fildll jbe,pn cwtl cmp rolb cmp mov jno adc mov sbb jg clc xor insb outsb xor or addr16 xchg inc mov lret repz push jbe mov pop dec push es xchg mov cmpsb dec adcl cmc fcomps adcl push sarb jmp lds add das jbe mov jo inc shl cmp ja aad sbb addr16 fs dec jbe or inc jecxz jbe push call stc lods stos sbb pusha nop dec xorb dec jecxz mov push inc int push add jae pop push or sbbl lahf sarb inc inc scas orl fiadd xchg or repz fldl push push jo imul mov mov pop test adc xchg or inc (bad) push and push sub cmpsl cwtl int3 (bad) nop jmp addb dec (bad) mov add sti fcmovu jbe sbb add sub in xchg inc dec jmp in and fisttpl xchg cwtl inc cld dec int dec lea inc xchg or cmpsl testb push (bad) jo out ror mov inc add push inc sbb dec das dec mov adc adc cmp les mov icebp shrl mov test fisubrl mov inc ret test xor (bad) mov jge mov mov scas mov insb push dec or outsb fsubl xchg jg insl xchg cld pop inc (bad) cld or xor fnsave sahf ret or mov ss pop mov std adc push lcall cmpsb xor fstps stos push pop lods jmp ret and adc cmc stos dec inc jns push fildll das cmp sub aam cli and dec sahf sub jne cmp fildl xchg clc mov fdivrl sub pop pop pop mov data16 sub ja mov push xchg xchg jae mov mov xor and push cmp inc adc int dec push adc les or test xor mov xor scas jecxz and pop inc or test mov push mov scas add and add test pop inc xchg out dec mov out lock jp test add mov mov rcll add lcall xchg aam sahf mov cld inc ljmp jns (bad) movsb pop xor testl jmp inc roll add aam add add sub pop hlt or push pop out clc jecxz rclb push mov adc jae (bad) enter stc mov ret push mov and addr16 sub js add jnp nop pop jb insl cltd jno fist adc and stos or jmp sbb out pop push sub inc push lds fnsave pop add push aas fstp lds jle pop clc adc adc arpl (bad) push and imul jnp leave test cmp cmp scas movsl lea divb flds and imul or repnz loopne pop mov sbb js das sti leave jno fisub mov mov test mov outsb inc adc imul cmp sub mov loopne mov fwait out mov push out jmp jne jle mov mov push dec mov push popf mov loopne pushw adc sbb adc imul outsb (bad) and in mov inc mov fstps or mov into scas fmuls test inc (bad) lret cs mov pop add popf std push stc ja imul sub sbb movsb jnp cwtl aam sbb es add and push lds aad pushf aaa stos dec in ja and mov cmp insb and lods xchg or mov aam lret lods popa fstps mov in or cmpsl lds jo loope mov lcall mov push aam inc je mov inc lods xchg lret leave mov cmpsl test add mov ja stc fwait jbe stos add mov adc jne js push xchg pop adc cmp out adc ja out das mov xor inc sub or pop push aas arpl outsl sbb mov fistp adc leave and lock jecxz cmp and fstpl popf xorb int mov xor rorb push mov fnstcw xor sahf cmpsb cltd lods xor xor jnp out xlat clc popf cmp cmpsb cmpsb jmp lock movsb mov xchg and mov ss jmp sahf mov mov xor lock jmp mov mov pop xor push pop mov inc movsl out lcall jae cmpsb dec or jnp inc stos in pop out neg ret cmp and in (bad) nopl jb lcall je outsb xchg arpl push jl ret data16 add cmp or mov or jmp outsl out pop mov push andl aas dec sahf scas sarb in sti cmp mov fst pop push bound nop or mov (bad) (bad) fnop out int3 lcall lods popf fdivrs sbb out cmp int3 sbb adc ja pop movsl out out test ss insl idivl mov cld pop xchg jl jne je pop xor cmp add cmp or or cmpsb insl rclb iret icebp cmpsb test cs or cli stos adc pop in aad and pop push pop inc aas insb and (bad) mov nop (bad) sub repz shr btr insb fidivl pop mov inc shr adc dec add mov xchg (bad) cmp add pop pop adc xchg mov pop pop daa aaa scas out sub pop shr vpsrld jae mov lods and cvtpi2ps dec scas stos loop lea daa fstpl add mov test arpl dec (bad) or int3 push shr mov xchg mov adc ret cli int3 divb (bad) xor loope mov icebp sti in movl xor dec jns insb add rolb inc rcll stos fwait fwait or icebp sbb pop cld mov push push mov das ffreep loop lahf and popa stos push jno jp add addr16 sub lret in push add jns pop out nop lock and add xlat pop mov pop jb aaa (bad) cmp jb sub push adc (bad) movsb push orl sbb or mov lods (bad) xor xor fnstcw in cmp push jne add mov adc mov jnp lock push xor mov ds pop lcall xchg aas pushl add (bad) sbb lods ret movsb movsl leave fs mov sub xchg add jno fldt js or rcll sbb lods rolb mov outsb pop inc adc xchg inc inc shll push push popa dec or dec insl pop cmp cmpsl mov mov jge lea pop xchg cmp adc sbb int xchg sahf insb insb imul and adcl mov dec jecxz and clc (bad) (bad) stos aad adc jge and popa sahf ss dec in das pop stc mov cmp jb ret mov es mov inc mov in addr16 mov imul mov cmp insb and inc pop rcrl aam add iret mov sub ljmp js sub xchg arpl daa dec sbb pop push push movsb mov cltd cmp add pop mov xor xchg je in ss adc jo adc shlb xor inc int3 int xchg icebp cs xchg mov rorb mov (bad) jo sub sbb push cmovle cmp push push dec mov add lods inc mov mov scas or call loop jne inc data16 scas xor and xlat push jne out and mov cmp movl inc mov mov lods mov daa idivb jbe adc hlt push mov ficoml xchg mov inc aam leave cmpsl mov (bad) addr16 cmpb jbe mov test jp (bad) sub jge or mov shl gs pusha inc mov and rcrb fld ret nop inc mov mov xchg mov xchg repz xchg dec scas dec (bad) jmp jmp std jae out xor dec push icebp inc push and add or loope fldcw cmp mov movsl push xlat add js xchg std xor scas cltd iret bound jp jle pop lea inc sub cmp pop fadds movsb dec adc inc add push adc sub cli (bad) insl push jg and mov sub push cmp test inc add insb sbb dec inc push and jno jbe pop ss mov mov cli push insb notl repz xchg mov popf mov sbb call push mov scas mov das pop or loope xor pop (bad) jbe jmp repz sbb je in mov aam dec iret (bad) ja jecxz push jno fwait cmp inc add or inc xchg mov sbb bound imul fs (bad) mov stos aad jp add mov ret (bad) mov es cld pop adc mov daa xchg rcll mov divl xlat sahf cmpsl mov ljmp pop (bad) leave cli and push sub sub pop sti mov in and test das adc (bad) sbb test out stc test push sub outsl stos push sbb push pop clc scas roll sahf dec pop pop cmp stos int add repz std jg lret pop movb out sbb mov or lods pop in movsb inc sub xlat les push cld mov or outsb mov or inc xor stos or xor fsts mov sbb cltd pop dec push int mov sub or and xchg out xor aam movsb xchg in sub imul dec sub (bad) inc sbb ret xor fadd cmp dec dec and dec (bad) insb lcall fmuls push mov jp add in mov cli mov (bad) xor repnz movsl dec jp dec mov dec lods or xchg adc (bad) loopw in push sbb out popf xor pusha fdivr push or xchg mov push xchg xor movsl in fmuls jl mov roll dec add and in pop incl cwtl divb andl mov mov dec ficom and pop push sbb mov ljmp jnp lods cmp and inc fst mov xchg pusha push test jb adc (bad) fwait sub scas fdivrp pop (bad) sub inc insb add add aad add fstpl test aad adc sbb repnz fdivrl push push inc push addr16 mov fs aaa scas jge mull repnz inc (bad) inc jb inc test lds cli jp and push aas (bad) pop aad les scas dec add sbb out and jg cmp jo cmpsb js pop dec xor lret pop dec add sahf cmp es adc jae inc cmpsb xchg in fmull pop dec and jns lcall sub in test xlat stos push rcrl jne imul sub imul jmp mov xor hlt (bad) or xchg dec movsb jl (bad) xchg sub mov dec cmp mov lods (bad) mov inc jl add xchg push hlt pushf and fldl dec mov std sub jmp sahf sahf inc jbe int3 sahf and fldt lods movsl pop pop add pop push int3 test cmp (bad) push je and ljmp and add imul cltd clc repnz push cmc neg cmpsl lock mov imull mov insl and insb mov adc (bad) idivb add stc shrl in stos push (bad) xchg jns inc mov jno fadd cmp inc lods cmpsb inc nop cmp lahf jae and or movsb push jge scas add aaa loop adc fdiv adc cmp lret jno lea lcall xchg cmp add and fisttpll hlt adc xchg shlb and icebp push push iret add (bad) out sbb (bad) mov idivl xor xchg xchg lahf lcall jl addr16 mov sbb jp or mov lret mov cltd cwtl mov in xlat xor iret mov mov jg (bad) and cmpsl jge test jae popf mov hlt insb lmsw clc lret xchg leave push cld push sub test jge lods xchg nop scas enter push jl inc pop out sbb gs sbb je cmp fwait jmp js into out mov (bad) ja ss sub into lods fstpt int3 repnz lods cmp xchg sub int3 cmpsl test into add pop mov push mov lret cmpsl (bad) idivl arpl sbb arpl jbe mov xchg int xor xchg fldcw xchg mov add pop fidivr popf push fidivrl sub repnz add sub cmp sbb mov das mov mov lcall dec pushf incb cmp push hlt push or enter popf xorl or jg aam iret mov push and pop gs scas adc pop push pushf mov ret jge (bad) push fs cld scas popf cmp jl xchg lods lods cmp dec push cmp outsl adc adc or xchg scas loope cwtl xor xor int nop cmc pop or cmp mov lods inc rcrb sub mov lahf sub mov xor xor or (bad) (bad) into insl lock rcr xchg aas mov das ret cmp lret cltd hlt in in fs shrb cld mov jae lret pop pop and xor addr16 fdivr imul scas jp mov xchg sub les jmp jecxz call push addr16 addr16 cmpsb pop mov call sub ss sbb imul imul xchg scas scas push pop mov sbb push add or or (bad) jno test sbb jbe lret iret jae mov mov jecxz fld insl ret jae inc fistpll xchg frstor addl push xor jmp mov pop jbe pushf cmp (bad) movsl and mov sbb dec add loopne into lret mov lods sbb movsl dec sbb mov jnp hlt fs add jbe and cmp nop lret rorl mov (bad) mov fisubr jle nop nop pop (bad) stos cmc inc add aaa sarb sti inc mov adc mov (bad) nop pop notb xlat pop jecxz mov mov mov push aaa out dec cmp jns or sbb xor jmp push jbe dec roll lret iret fild aam adc fwait insl das cld xor push out mov push les ret jb nop stc movsb std arpl ret push test jns push mov or cmp faddp push jmp cmp add ret push js jmp xlat cmp xchg dec dec (bad) xor sub mov dec xchg pop jno mov mov popf jl jne icebp push test outsb movsl pop xor mov push xor mov mov adc jp jb and and adc add out data16 inc iret or xor xchg xor test xchg cmp jns sub in xor (bad) mov mov in xchg scas test push lret xor inc push or cmc movsb push insl xchg cmp dec inc mov dec pop fcomip dec mov cld mov xchg sub xchg pop mov pop xchg (bad) lock jmp test cmc push pop cmpsb and jg dec jg sbb sub in idivl push or inc jns sti lods jns dec out jle push or das sub movsb add cltd sub and pop push inc nop push aad aas loope cmp and lds adc inc inc outsb out daa hlt subl xchg fadds enter dec push in (bad) lahf dec xor push pop add in dec test daa (bad) cmp jne xchg push add add int out movsl pop loop outsl out dec loope push dec repz cmp jnp push mov stc fcmovnu dec mov or xchg insl xchg push lret cmp icebp add pusha dec lea clc sub jge and addr16 push xor shrb inc push cmpsb mov lods adcl lods jns icebp inc int sbb push push dec fs inc mov pop jecxz inc bound pusha jnp popf or push inc jle fs xor xor mov loop mov mov xor pop mov addr16 gs inc (bad) arpl mov andl pushf xlat ds ret pop jo,pt cmp addr16 xor lock clc ret aam movsl mov mov cmp popf mov ss pop pop sbb pop test add push (bad) sbb inc pop or int pop jae mov repz or and popa jl lret ja mov jecxz rcrb push aam (bad) sub cmp daa sbb sbb jg dec lock inc push lds inc push pop (bad) aam popa ja aaa sub imul fwait ds orl pop divl pushf jle ja jns inc push mov lret (bad) sbb xchg imul pop ja cmp stos mov push mov mov jmp cs cs fs pop adc sti add xlat xor or dec out dec xchg es mov sbbl stos push std fistp mov sbb jl outsb (bad) ss (bad) dec and pop aas add xchg mov andl xchg sub popf or shl imul icebp loopne lds dec (bad) sbb or push js nop or push inc dec xor fbld adc push mov in stc lret int dec dec aam fistpl cltd mov xchg (bad) ja xchg sbb jl xchg shlb lcall out push lcall inc cltd jp cmp mov ljmp pop cmp and and pop sub lea cmp in aas outsb pop jne inc addl xor js add jns jo rcll cmp sub sbb je pop sub dec dec movsb dec dec mov std insl fsubs cmp mov loope test push or push or vmovd mov sub cmp lods push xchg hlt loopne dec cmp xlat arpl sub pop call sub mov addl and insb add push xchg and lcall insl sub xchg rcrl ret or dec scas loop leave dec in lret xor mov mov hlt ja (bad) leave inc std xchg daa push pop push xchg out mov fcmovne dec jnp decl je lock xchg fsubrl cmp push or popl aad ds fs ret icebp sbb dec (bad) jmp aaa cmpsl or daa and (bad) cli imul pusha add sbb fimul xchg scas js add xchg dec les push push sbb cwtl arpl cmp xchg daa jmp stc (bad) lahf add sbb sub fidiv pop fisubl adc jmp xor mov leave int mov mov dec cmp mov mov pop xchg std ja jl mov fisttp int cmc test (bad) jne inc push das inc mov scas ret mov aad loope les xchg popf adc mov pop imulb sub mov mov push cwtl push rorl movsb jge dec mov mov sbb imul lret mov scas push hlt and and std sbb in adc mov adc out mov mov arpl (bad) repnz inc cwtl (bad) out rclb mov int3 out xchg sbb xor (bad) xchg mov mull in movsb sbb pop mov xchg in in sbb pop jae mov fmulp (bad) ja jmp xor xchg fldcw inc (bad) fadd or jmp ficom aad mov aaa pop cmp (bad) repnz sti ret sti in ljmp sub and jmp pop pop into cmpsl pop loop fisttpl dec xor lahf orl lds dec push mov lds xchg mov adc push data16 cmp pop push jle push jecxz (bad) sti cmp jns lret mov add jecxz adc or jb mov scas pop cmp xor mov mov jnp sub pop pop jg std and lcall cmc inc mov add in sbb test or adc cltd lock mov fld jge pop xchg rolb cmp lahf dec mov inc jmp cmc scas and jb addr16 cmp stos in popf pop pushf and (bad) ja push xchg push xchg sub mov xor rolb sub lock decb sarb (bad) ss jb icebp std popf inc mov push sbb insl push and cmp mov scas ret sub mov push sub icebp push adc aas fldl mov dec jl adc cld (bad) mov jnp stc std cmp add xchg fsubrl and push sub rol daa pop fs inc (bad) sub cwtl and int3 outsb (bad) divl cs and xchg aam pop mov dec cmp cltd pushf stc xchg test test mov outsb mov cmpsl outsb imul jmp daa fisubl sub aam sub pop je sub out add lahf (bad) inc xchg cwtl je aas sbb jp sub ljmp popa cwtl (bad) mov loopne adc jmp fmuls call inc vpsadbw ds rclb and adc fdivrs movups fiadd push ret rcr xor lcall addl test enter sub and ds xchg (bad) outsb hlt aam aaa mov shrl jo pop push jmp add das mov or (bad) mov pop cwtl xchg lcall les loopne movsb sub mov nop xchg xchg (bad) roll lret dec imulb inc inc sbb cmp mov (bad) mov cld xor or packsswb bound andb cmp (bad) or andl scas push (bad) lret mov cmp xor in xchg dec jl (bad) negb icebp enterw or xchg fdivr mov mov mov (bad) push fisttpl push cmp scas cmp mov mov adc je in push pop lret pop (bad) dec mov stc imul or movsb jno lock jbe inc inc loopne adc das fist nop and frstor jns loop pop mov mov fwait lea repnz push jb cmpsl or jns in pop addl pextrw dec sbb stos (bad) jmp jnp jl or (bad) dec aas rcll or mov les int stos jg xchg popa sbb data16 mov in lods jb or adc sahf repnz sbb inc dec sbb push cmp mov ds mov add inc xchg lea cld loop mov mov sub (bad) jb inc fidiv ret int3 ss aam jmp dec (bad) dec mov mov fldl cmpsl xor cmpsl jmp pop rcll jmp jnp lahf xor les das std push addb loope (bad) jae adc icebp jno push or lods cmp jge je repnz movsl add xchg arpl adc mov pop cld add xlat xor lea cmp rcrb cltd hlt fisubl mov call lea add inc cs js mov push ja push jb and es (bad) cmp and jp fwait leave cmp sbb insl dec inc xor sub push jge sbb xor or aad and sbb pop add jl enter stos arpl ret pop movsb neg lods int pop adc pop dec mov (bad) shrl ret popa lahf scas enter inc push push ret ret mov roll pop mov xor jle jno out and daa dec add cwtl inc jp lret pushf add inc mov outsb xor mov (bad) xchg loopne push pop add jle bswap push fsubp ss push and testb add enter nop addb push lcall fsts mov movsb pop push shlb movsb inc pop xor xchg dec inc mov movsb es xor xchg outsl mov sbb or cld subb rcrb rorb push aaa cmp jo js pop dec push outsb mov adc cld sub cmp pop and dec jbe mov lock fwait ret mov xor lds incl adc jae out sub imul outsl or outsb jno,pn popa xchg pusha mov sbb inc cmp inc mov mov push stos out mov mov sti mov sbb add ds mov cmp insl mov xchg test sub adc loopne,pn jno jb fild inc jp sub xchg jno sub test adc cmc subb sbb xchg jbe rorb dec jmp xchg (bad) push and cmp nop xor jecxz mov xlat lcall push (bad) (bad) int loopne jg cmp jle sbb dec sbb aas adc dec cmpsl test ficoml fdivl push sbb inc std mov popa pop mov jecxz mov pop (bad) jae dec push shll int3 gs cmp int idivb dec pop movsl xlat inc cmp (bad) repz xchg dec inc sbb mov mov and int3 mov add jno insl xor mov mov inc lods rcrl bound cld pop or js subl sub inc push push add and je push add fcomps (bad) dec (bad) sti insb mov ret push sar in rcrl imul icebp add mov sbb inc insl sbb movb cmpl adc sub xlat sub movsl std lds inc lret cmc cmp popf sbb negb insl out pop and lock fcoml nop ret fldl or sub cmpl push vunpckhps cmp cmc imul xchg popf cmpsb push imul pop out gs mov out inc push out dec xor fs or mov sbb dec xor push xor sub add sub (bad) xorb jo call repnz loop xor pop (bad) clc insl loope and sbb fs push mov mov pop or mov mov dec adc mov addl pop movsb mov loopne mov (bad) xor js jnp push fwait pop xchg jnp aas inc cmp (bad) jp xor cmpsl repz push leave or jg pop sub mov xor adc mov jl loope inc sub or (bad) jmp call and movsb scas mov (bad) xor add add adc xor fildl mov stc cmp push cmp outsl ret (bad) mov mov inc ret imul lret pop fadds mov shr (bad) int3 idivl dec shlb adc lret repnz pop sub call push insl sbb ds fnstenv inc je pop (bad) or pop cmpsl ficomp xchg xor arpl or push cmp pop push add jne in call lret adc idiv hlt and pop jne xchg sub cmpsl daa dec sub sub into push hlt fistp mov xor cmc mov mov xchg xchg sub in cmp mov jl pushl jg dec pop aaa push pop mov cmpsl mov es pop leave and scas aaa dec xchg out repz aaa push in ss sti pop sbb gs cltd sub outsl in loopne jecxz inc rol sbb adc mov into inc and xchg xchg adc sbb add fistpl jb pop adc sahf sarl lret or mov sbb and xor xor dec (bad) incb sbb dec dec mov ss mov xchg jo bound adc xor into push sbb cli leave pushf and hlt xchg pusha in data16 inc faddl and pop gs cmp pop arpl movsb adc sbb rol lods or jb int repz mov cmp shrb (bad) adc repz jp add cmpsl jns sbb shr mov fnstcw inc pop cwtl lret mov fidivl pushf inc in adc rcrb dec sbb and pop adc push inc push pop add mov inc insl (bad) ja int3 cmpsb fs jne sbb jmp inc push nop aad scas loopne xor dec dec clc or or gs pusha dec sbb (bad) gs (bad) cld jno mov push adc mov jns fwait aaa outsb out xor scas jge pop (bad) or (bad) jecxz mull (bad) and ret xor mov adc dec mov (bad) inc mov out add dec fnstcw loopne mov jp cli lods jg and mov dec pusha mov aam ss mov inc cmp cmpsb sbb mov sahf lods sub push mov (bad) repnz je stc test rcrb jl hlt rep mov xchg test arpl mov rcrl mov cmp push add mov inc sub sar inc addr16 scas pop daa mov dec (bad) call es mov xchg pop cmp mov mov cmp add (bad) ja dec push cmc in scas sub scas pop jb leave or xor dec cmp inc iret (bad) xchg leave jg mov daa jne adc add (bad) loop leave fnsave mov jp not jno dec loope stc gs in nop push cmp lcall jle ret fstpt arpl outsb pushf mov sub xorb xchg mov sub cs jge pmulhw out loop cltd xchg cli and mov sub (bad) mov lock jns insl sub xor rol das cmpsb jl sbb or jbe and add inc bound adc movsb dec xchg gs rorl pop and (bad) xor adc mov dec fwait add dec shrl lods add and cltd aas xor (bad) ljmp loop shl enter cmp call jmp sbb (bad) movsb stc inc bound lock dec xchg insl rol stos dec adc push sub pop inc repnz mov test mov jns mov lret jg sbb inc out mov xchg inc popa cmpsl jae ja xchg daa imul and mov (bad) int3 mov shrb and adc push dec xchg orl xlat dec (bad) xor test ret xor pop call andl mov dec rcrb xchg mov pop inc les cmp jmp mov xchg xor iret movl movsb dec (bad) mov in mov inc not push cmpsl or fsubrs adc (bad) ret xor scas pop rolb mov or cmp sub addl rol sarb or push cmp icebp das enter push mov in jns (bad) out shl test pushf test jbe push pop xchg mov fistp jne jbe dec icebp imul js repz mov icebp jle enter dec dec sti push ss in jmp sub add int aad mov jp dec movsb add pop push xor sbb xor mov fnop push adc hlt cmp (bad) sbb out je mov xor rorb push (bad) jp in or dec jle cmc test in scas inc push pop jecxz sbb mov or xchg pop decb xlat or push jp loope xchg xchg pop mov pop stos (bad) cmpsb (bad) call dec int outsl andl xchg jl jge ret pop add push lret add sub xor fistp cli clc std sti cmp push lds push sahf lcall sub int sub sarb stc test jle shrl xor xchg or jl sub movb inc test cmp lea cli xchg mov shrb dec ss shl hlt dec cmc push sbb dec push cmovle adc adc bound faddl push xor sahf insb xor or mov pop repnz lock inc push sub and ret adc out xchg in int pusha je imulb pop sbb inc lds mov pop test pop or sub dec mov outsb popf xor gs cld (bad) sbb push xchg push push call nop (bad) aam fstps in push xchg sbb pushf xor mov test popa int3 mov arpl enter mov je jne pop jmp mov enter jno jo dec bound mov in sub jg lcall repnz push sub into inc iret pop jno in dec or sti or or adc jl lret clc or sbb pop cmp sbbl jno fisubrl or insl mov dec push cmp add imul mov jns mov (bad) mov mov insl (bad) repnz in sbb jecxz or lcall movsl stos sbb add mov pop push fxch lahf pop pop mov and lods outsb pop daa and (bad) lea adc jecxz adc xor (bad) and xchg dec xchg ret movups push fstp add mov push lods (bad) (bad) and push and xor inc jl adc adc jmp adc cmp mov fstl sbb or xchg out cmpsb xchg xchg inc mov mov mov loopne sub xor gs and jo or jb pop mov cmp xor add xchg xlat mov test xor std push aad push int3 mov cmp dec clc inc adc outsl fwait lods stos xor mov sbb or push lret add lods xchg roll inc push arpl add loopne cmp lea iret cmpsb push inc cmp mov nop repnz repnz cmpsb jb outsb movsl out test adcl fsubrl jmp inc int in jecxz xor outsl ret mov adc add pop (bad) jbe popf fscale hlt es (bad) dec sbb xor cli es inc shrl lret fcom mov adc push xor jbe test outsb scas int3 mov mov xchg push sarb xchg push fnstenv sbb xor test adc test dec fldenv or mov setle icebp xchg or push mov push stos arpl add jnp out mov jbe hlt xchg mov insb movsb iret xor cmp (bad) sahf push icebp mov sbb cwtl lock pop dec push mov int3 or dec imul xor and imul js repnz loope adc dec jecxz (bad) mov mov mov sbb xchg sub call sbb (bad) mov add and mov mov insl jno lds mov mov outsl push iret lret mov or jecxz repnz and adc adc mov cmp xchg out xchg sti and test sub roll aad call jno push cs mov jp imul mov in jns xchg aaa sub int (bad) mov or bound stos movsl jno in imul add (bad) outsb shlb inc mov out sbb xchg insb mov or es out clc lock jns fs outsb dec add movsb and out jge xchg or fadd popf or pusha fildll push lods jns std add or cwtl insb andl fcoms or rorb test jnp mov jp push cmp push cli mov xor imul (bad) xor xchg ljmp jle outsl sub rol jle repz adc cwtl dec add sbb push (bad) mov or popw jb mov ret and popa adc pushf jne std (bad) aad mov push mov xor lods (bad) pop repz nop lock out push dec jle jnp xchg test decl imul outsl add lods adc and add stos in xlat popl mov or fwait cmp cltd cmp popa in movsl hlt dec (bad) call mov pop das mov cmp add xchg test jge hlt stos js push adc adc pop mov scas fwait sti stos inc fdecstp std arpl ljmp imul cmp (bad) jae ret shrb (bad) cmp (bad) cs push loopne ljmp in push mov in sub and adc scas cltd cwtl push fistpl jae loope xchg sbb push ja js rcll inc add pop das or repz xchg out es sti shl aam sbb xchg shlb in aad add push and adc stos dec mov pop push repnz jecxz std hlt hlt ja and mov mov and addr16 mov xchg cmp hlt inc add sub cmc jmp adc add push adc sub movsb insb nop out fcoms (bad) aaa push sbb jae xor lds mov imull or test xor test lcall jl inc lock cld int dec mov add sub dec sbb stos sub out repz sub pop mov jp leave ds and test cmc loopne (bad) sbb dec popa fs mov lcall into fisubl mov imul addr16 mov pop sub icebp mov roll aas fldcw pop outsb push fisubr push je pop jbe dec sub or add mov or dec paddq jecxz icebp pushf mov xor stc inc xchg lahf in jl adc mov aaa cmp lret test adc out add nop inc scas int xor and (bad) mov clc mov out lods and aad sti arpl adc jbe insb ss sbb outsl dec xchg cs scas mov sbb je loopne lock pushf fs xchg popa (bad) pop inc and test (bad) pusha jo stos insb testb jl jns mov repnz pop jno adc cwtl add jp dec sbb ss xor mov out not sahf jns fdiv das pusha sbb icebp xchg imul pop loop inc adc popa lahf pop sbb outsb pop jns ret xchg js sbb (bad) dec (bad) mov (bad) lock inc stos cmc mov pop leave mov roll int3 jmp in hlt mov mov mov cld gs sub push aaa in bound dec lea jl jl cmp lods arpl and xor pop mov movsb mov out test mov mov xchg jp addr16 and mov hlt cmp push movsb inc int3 loop jb push adc in pop cltd (bad) xor loop cmp adc test out rcll int sbb push flds pop rcrl mov xlat mov pop (bad) popa test sub xchg cwtl popa mov repz popf xlat push xor push push sbb leavew and mov cmp jge pop adc xchg aaa (bad) mov cld pop mov aas lcall mov ret jecxz xor cli sarb mov rorl mov andl mov test xchg jl adc gs inc add inc or dec gs sbb jle and add loop cmpsl (bad) pop (bad) xor fnstsw in pop movl push lcall inc sti dec mov push mov stos cmpsl jecxz add mov pop and dec mov add pop mov (bad) out push mov sbb jb outsl adc jl fcmovb or mov sub and xor (bad) aam movsb mov fild sbb push and insl mov dec sbb pop push add xchg jno dec mov pop and mov jb mov aad rolb (bad) test pop xchg sahf clc add aad push jbe cld fsqrt fs movsl xchg mov sbb add xor inc pop xlat dec in imul mov xchg imul lock and xchg shl fnstenv add sub out jl adc in mov fdivp jecxz sbb push dec mov mov push mov aas and or jb pop push mov adc or inc pusha lock cmp jp imul jno lods sarb mov imul lods popa adc push sar bound cmp jno hlt pop fiaddl stc add jge adc push arpl testl xchg pop fs std sbb les mov std sbb mov jbe ja popa xor gs or mov popf xchg mov pusha loope xor xor aas mov push (bad) shlb lret mov imul int3 xchg push inc and jg lahf cld stc es sahf jle dec xor sub nop adc cmc jg push mov into (bad) xor push jecxz out push faddl or int dec stc mov jmp sbb sub es and repz lds das call mov xor sbb push sti cmp scas cmpl clc outsl ljmp xor hlt int lods fwait sbb push push insl and cmpsl jle ret (bad) dec rorl add int mov jl lret push leave and mov xchg push or mov js (bad) push xchg jno sub mov hlt aam fcmovb xchg mov addl out xor test je add xchg xchg frstor mov ret rcrb pop rcll sub jg dec adc enter hlt jbe movsl jo (bad) mov outsb or loope iret fwait (bad) mov daa fist jne popf pop pusha leave adc push mov xchg pop pop addr16 jp push loop inc jp or cld cmp loop xor cltd jns outsl or movsl push mov jo mov and rorl insl dec adc mov dec and sub push (bad) repnz aas inc lea jg pop ja jecxz cld test or jmp push pusha fiadd cmp out sbb push pop mov imul cmp mov fwait lret sti sahf mov fistpll popl idivl jg cmp shl sti insb add cwtl test adc xchg xchg dec or mov fld1 out add sbb inc mov movsb sub movsl (bad) mov xchg or shrb mov mov or std repnz sbb jbe push roll cmpsb ljmp in and mov addr16 pusha xchg mov jo daa sbb daa xor xor nop data16 push hlt push lds xchg scas loope push (bad) dec mov cmp imul mov mov pop iret inc das cs cmp inc insb lahf rorl (bad) ret enter ret out std cmpsl inc push pop nop sub pushf jne sbb adc jge xchg mul pop add add sarl fisttpl in mov int3 push bound in fmuls jbe loope mov pushf lds cld or in loop pop ret gs aam push repnz push lock adc push push or outsl and loopne leave test clc inc imul mov jmp leave xchg cmc out inc jae rcl push pop mov mov jge inc mov ds sub out lcall rclb xchg sbb loopne sbb pop test (bad) jp jle adc rorb adc sub in leave adc adcl or test enter mov sub sarb loopne in mov or jge jnp ror xchg outsb outsb sub xchg fildll (bad) mov mov mov inc sarl iret in jecxz (bad) out push lods lods sub std jae xor adc xor jno mov pushf pop and stos (bad) iret cmp mov push leave cmc out xor js sahf in icebp or inc test xchg jb scas insl pop cmp push ss xor cmp inc mov insb jae mov xchg or add sbb or popf nop cmp dec lahf fadd xor inc xchg xchg into sub ja mov std enter pop scas int and dec or dec and xor adc movb xor pop mov inc and loop push mull or aad into std mov mov and fisubrl movsl rorb sub outsl inc aaa in repz dec and mov lahf ss adc loope or test mov cltd les repnz (bad) add mov xor imull (bad) mov jno and jecxz jl sub and pop jae sub cmp add add adc pop scas dec sahf (bad) test rcll aas hlt mov dec sbb pop sbb in scas add mov mov cld psubsb scas push rolb add notb outsl movsl lcall sbb xchg lds mov adc cmp in push mov repnz outsl mov outsl sbb mov test sti push push int lock test ljmp add pop mov inc call subl cmpsb adc rolb mov outsl daa add xchg insb arpl loopne ficoml add sbb sbb (bad) outsb cmp pop mov sti jecxz xor xchg cmp call jns andb fcoml cmpsl lret push add pushf inc push call dec adc std dec cmpsb iret sbb inc int mov imul inc mov lahf mov inc testl dec jae (bad) mov ret (bad) out mov jae inc push pop cli pop ja ss hlt (bad) jle pop dec jno in nop mov jge (bad) fsubrl mov int3 enter xchg mov aad sbb fildll mov jl pop pusha mov xor cld xchg ja pop js sti lods sub cmpsb inc pop or mov out push and sbb xchg fstl mov sbb dec xchg int3 mull rcrb loop xorl mov sbb sub incb xor or inc add mov test call mov clc xchg cmpsb addl ret add ja iret push xchg inc pushf xchg stos ret xchg fiaddl (bad) sti or mov sub or push (bad) div dec out jmp mov std out test jae xchg dec or lea push mov sbb or push (bad) lock fsub rsqrtps inc fnstenv push imul inc ljmp data16 add push mov mov mov inc fisub movsb cmp jns (bad) rcl test add push in std (bad) or insb lods sti push sub mov jo in lods push xchg lods cmp jae fistl sbb arpl cs lahf mov mov mov fistl mov jmp jns or dec mov pop push mov mov aam out testb xchg mov xchg (bad) inc mov xor jle,pt sahf jle xor mov ret mov jne mov or mov push stos and inc jne mov imul and mov in push je sub jo push out rclb jbe mov orl sbb iret cmpsb data16 cmp mov repnz aaa push sub imul insb pop inc test pop inc mov and and or rcrb aas cmc sbb into jmp jns add daa sbb out inc dec call dec push stos xlat push xchg fiaddl out loopne sub mov outsl inc mov sub fcoml jp,pt int3 les inc (bad) mov std jp pushf sti fcomp jg xchg push scas and popa mov or mov imul lret mov inc cmpl not and rcl and loop xor je or aam cwtl pop inc push daa jae or test pop xor lock ss adc icebp inc mov xchg fwait xchg adc lcall push adc xchg mov and scas dec imul cmp xchg jge cmp lcall xor inc test cwtl ljmp nop pushf shl push xor push mov inc add dec pop fucomip shrb jb or cmp mov enter jge push js and lds movsb adc imull in cmp pop sbb mov mov cmpsl xor xor dec (bad) inc mov mov jl stos jnp out and mov ss push fdivs push (bad) jbe ljmp xchg add sahf (bad) int pop pop icebp mov lahf mov iret add jb fsubs lcall inc dec cmp ds dec pusha lea pop jbe movsl sub (bad) mov hlt pop lret push jne sbb adc mov cli jmp dec clc lea xchg hlt mov out gs js lods popa and aaa or xor dec out jl cltd jno ss lret jns mov popa mov addr16 inc adc outsl rcl mov pop idivl mov mov mov loop adcl jecxz push add insl orl scas iret inc pminsw cltd mov mov imul mov xchg mov test ret cwtl adc test or push xchg xchg scas repz push xor jo (bad) add cmp (bad) xchg mov (bad) pop dec mov pop dec sti popa test adc push sbb ret add and aam stos pop dec aaa add sub jbe or jl xchg repz sbb cmp push cltd pop cmp mov or inc pushf add test shll adcl cli jp pusha lcall cli cmp sub pop pop scas stos add push ja jno ds pusha xchg rcrl adc mov call xchg adc ja lcall stos sti adc or or cmpsl jne xchg fidivr xor scas mov pand pop xchg mov cmp ret popa (bad) ds cmp rclb push cli xor jnp lods pop dec dec jo pushf inc sbb mov xchg in mov or and cmp or sbb aad or or ja mov jo icebp ss inc pop dec mov inc outsl bnd xor add mov cmp adc mov dec sub adcl test cld (bad) mov push js add xchg sub or shlb mov out and mov pop popa fdivrs mov push cmp mov cmp mov and cmp adcb jb add sub frstor test sbbb mov test jae insl dec aad push pusha cmp push aas mov add sbb repnz (bad) dec sbb push mov xor jae arpl lret mov add je add pop push jle int xor mov sbb and xor cmp xchg pop mov ret jl rorl ja xor push jge dec inc test push ret and sbb aad jmp sub inc jecxz xchg ljmp icebp mov or leave dec xlat pusha roll jo dec mov xor sbb mov cmp test addr16 scas aaa sub daa or in push cmp clc mov sbb xor cmp pop imul lds jbe pop rol pop in pop sub sbb rcll imul xchg jb dec pop lods sub cmpb mov ss jns cmpsl sbb jg stos mov pop insb jb out jae lret (bad) das movsb sbb sti aad dec into icebp imul outsb out xchg sub cli int xor lods mov iret dec mov ret xchg adc xchg jo inc dec sbb imul iret xchg lea out adc aas mov data16 sarl ja fdivrp movsl xor add xchg sub cmp pop inc pop fsubs push or imul mov rcrb jae fistp out sahf pop ja and mov pop js pop dec sbb mov cmp and test cltd out in mov test sub or xchg pop add or sub pop fwait push iret sbb call imul lret mov sub xchg cltd mov stos cmp and mov mov inc je sbb jbe push fstl (bad) pop mov roll add and sub mov mov loope push sbb gs popl (bad) inc push lcall imul jbe lcall shr sbb fld lods nop or add push mov ja cmpsb cltd xor xchg insb call mov repnz or data16 and sbb std xor xor jno ret xchg pop sbb out stos dec fnop lret mov mov inc mov inc test mov ljmp aaa adc push dec push cmp repnz or (bad) mov sbb cmpsl hlt rorb popa rol cltd nop ret std jb lods mov push jbe mov fidivrl adc mov cmpsl push imul adc dec jne repnz (bad) rcl and lods and movl sbb and fdivrp leave test inc pop ja adc mov out std in aam scas push lea xchg or aad jg fistl jecxz ror jecxz stos sbb cmc test pop or dec inc (bad) repz clc cmp adc aad imul es fbstp jl and (bad) movsl jnp clc and dec sahf xlat push dec fstpl frstor mov xchg and xchg sbb icebp sub jmp xchg cmp jge fnstcw push adc fldenv mov out sbb ss lret (bad) and pop xor jp xor test cmp pusha sub cmp cltd es pop pop inc daa popa fbld jge imul sub xor sbb fwait jb cmp (bad) je scas movsb cwtl jl ss xchg jmp aaa into aaa fisttpl xchg cmp sub data16 mov add into and add pop test fisttpll jne xchg daa or pop loop or movsb adc adc lods (bad) test cs dec pusha stos mov je jne cs les mov push mov inc cmpsl repnz cwtl sbb push cmp fdivs mov push fwait dec add leave gs push and mov jg (bad) xchg hlt lea jle cmp add lock je out enter lret loop jl fs cmp enter ret scas pop sbb jge jnp (bad) pop ljmp or inc sbb jbe inc sbb push out pop mov mov and mov clc xlat xor das in insl pop (bad) mov mov ret popf jmp clc jnp mov cmp dec or mov aaa mov (bad) iret loop clc sti push push sub ljmp mov add sbb mov xor dec fs inc xor pop lret jb test in sbb fcomp inc fwait lret ja push xchg (bad) or xchg sarl jb fucomp pop xor xor cmpsl adc scas inc jo mov rorl adc out scas (bad) dec jnp (bad) mov pusha push arpl (bad) (bad) jecxz (bad) call sbb aaa add pop es sub cmp in les push les icebp and push xor dec cmp add pushf lret aam sbb lcall scas adc nop (bad) pop es cmp clc jno test xor roll xor je out mov add daa ret cltd enter xchg mov jae ficomp in iret iret inc rcrb inc push pop int3 push imul or mov cmp jecxz leave or ss or mov inc popa push clc adc lcall push daa cwtl (bad) mov push aam inc xchg movsb pop cs pop (bad) fisubrl or and push frndint jbe insb pop mov inc jp mov scas (bad) (bad) outsl push std mov jge movsb stos pmulhuw sub in out pop sbb inc pushl add push or mov scas decb lea mov add push in addr16 adc push std or pop sarl inc iret pusha xchg ljmp dec add or aad sub pop gs mov in mov leave std movsl pop jo jae inc jecxz xchg pop mov jg add mov js daa jle js pop (bad) mov in adc or inc icebp (bad) adc mov shrb aas pop add aas mov pop cmp sub xchg sbb dec out xchg ficompl xchg outsl es call loop cld scas jl jmp sbb call outsl cmc stos (bad) jb std cs mov (bad) fdivl fstpt xchg xchg jecxz cmp fwait mov xchg inc sbb jns mov out sub scas push mov xchg mov mov sbb sbb or pop stos jae arpl sbb push push jle fildl addr16 je jg sahf xor popf and inc (bad) pushf test lcall mov jae std sbb das js jno sbb roll mov in fistpl into sbb jbe sub jl and dec inc imul pushf (bad) loope mov dec cmp popf xchg sbb mov ret push rclb xchg ljmp sub mov hlt or subw xchg push sub clc fisubr xchg ds in xchg jmp jns xchg cmp sbb mov je xchg adc mov xchg data16 push inc or mov aad mov xor sar and inc push cmp add lret out sbb push xor mov or (bad) mov imul sbb mov test (bad) push and push test dec loopne or addr16 sbbl mov mov dec js int3 inc cwtl mov cmpsl fstps jl inc ja jmp mov stc pusha push pop testb hlt mov push insb cmp xchg fdivs or jns xchg mov add (bad) clc call jl ret into pop cwtl dec (bad) xchg icebp shrl sti iret jbe mov sbb jecxz fucom stc mov mov enter jp das aad jp jecxz xchg test and or sub mov es bound push fbld out addr16 and mov shl pusha jno loope int3 pop repnz cmc push sbb (bad) lods (bad) mov arpl aaa xchg call fldenv dec xchg lds xchg (bad) cmp lret stc test insl cmp bound xchg clc dec mov lods cmpsb aam pop aam mov jp jns jnp aas testb sbb lods stc push (bad) mull pusha shl popf mov hlt mov jb movsb cmc daa insl (bad) xor das xchg and xor adcl imul mov mov (bad) fsubrs mov pop dec pop ljmp xor (bad) jmp loopne outsl push subl jmp fwait mov ds push inc add pop lock jnp fisubl push pop cld and imul call jle in mov test jecxz orl jb xorl pop mov mov adc leave js dec and sub cmovp add lea inc (bad) sarb (bad) je xchg movsb imul adc dec jo adc push xchg arpl stos jbe jne mov cmp jns pop fldt push das and lods jmp sub outsb fidivrl (bad) fidiv pop shl mov inc ret xor addr16 jns fsubs sahf xor cmp sbb xchg mov call xor test and aad call adc inc hlt cmp stos in sahf push fucomi inc sub push jge cwtl and dec xchg mov mov popa ljmp frstor (bad) dec in je jbe ja sbb cmp dec nop cmp dec and fcomps je sbb and in cmpsl push xchg sahf adc fwait loop cmp pop fdivs push jno ds sbb dec jge xchg sub adc add and jne jp out jmp cmp pop imul (bad) adc push in (bad) cmp push data16 and lods mov adc scas out mov fimul jmp (bad) xor repnz push mov ja xor pop push or mov lds (bad) dec cmc dec ds mull enter dec leave add sbb pop inc es cld outsb jne lods pop or jae cmpl and or fs sub pop xchg call loopne sbb (bad) mov fwait lea mov (bad) movsl rclb mov sub lret ja pop pop pop sub inc inc iret inc xchg adc ret sar mov ss clc clc mov out add push cmp sbb or pop fsub sub popf jp cmovns push or js (bad) inc push jecxz loope roll int adc sbb adc (bad) ds iret ds hlt (bad) call aam fdivr test xor xchg mov sub enter aam mov jge (bad) mov pusha inc mov mov xchg sub xor loope pushf stos inc popa mov push mov and mov insl xor and rcrl pop in je inc out fsts loope mov pop mov repz jmp cmc int3 test call adc push imul addb js or dec flds iret repz mov ja and mov popa js pop xor imul orl ja ds and cld sub lret mov mov loope jne adc cmp ja xor adc push mov sti mov leave sbb lcall (bad) sahf mov loop push es adc jg (bad) mov jecxz out lret push test jp in fisubrl cld repnz pusha into pop cmp (bad) in mov mov mov fistp sub call mov (bad) sub xor into pop icebp sbb and inc stos push stc (bad) in adc xchg jp ret push bound jle scas push mov adc shl jo lret lcall sbb insb mov cmpsb test (bad) cli mov push add xlat push pusha dec dec jge push jecxz lret xor mov leave mov inc shrb es dec (bad) outsb push mov lods icebp mov stos aas loope jnp rep dec fmuls mov cmp push js icebp mov fist add daa push movsl and out sbb adc popf xlat rcll jnp out fucomp jmp rclb fsubrs scas xchg jmp jle or (bad) bound lock dec inc movsl fisttpl sbb fsubrs outsl jbe dec jne daa je mov stc jb scas lahf pop outsb cmpsb enter clc xchg cmc xor imul ljmp jge outsl (bad) mov mov je das xor mov fldl les and xor inc mov scas insl xor jmp int3 mov xor int3 sbb adcb xchg jb movl fistp pop inc mov mov das jno fwait data16 leave mov sbb aaa roll fsubrl repz out sbb add sub sub es jns xchg mov mov cwtl cmp mov mov inc mov jb mov aas enter mov leave ljmp or icebp dec and repnz icebp mov loope xor xchg mov bound xlat add fiaddl mov popf mov jmp pop fidiv adc jecxz out int3 cmpsl nop push mov xchg out aad cld fnop lahf jl or inc and sbb mov push xor fisubl dec fcomps idivb cmc scas clc cmc movsl mov cmpsb pop or inc and mov cmpsl xchg lret or pop loop jae push xchg xchg xor pop mov in test fimull int add lcall or daa and insl popa sbbl roll xlat shl gs cltd mov out aas (bad) cmp notl cmp mov mov int3 aam jecxz mov inc and adc xor lea and repz or jp (bad) movl mov xchg adcl outsl add mov mov repz fbld inc cltd call das (bad) (bad) call and sbb das ret jbe mov adc inc jg,pn pop jmp fiaddl inc hlt xchg (bad) mov dec pop mov push in iret idivb cmp sbb mov jg (bad) stos bnd mov jge int3 in enter into orl inc mov and inc fs daa std lods ficom mov in (bad) fldcw adc push xchg or jae mov fimull and adc fadds lcall pop outsl imulb loope stc cmp sub xor xchg imul mov outsb cmc xchg dec (bad) mov test lret mov mov jecxz dec xchg mov stos das pop inc mov xchg test js and rclb mov dec push icebp dec sub xchg dec or jge xor sbb test jle add push into jmp jmp mov push push cmpsb push lahf ja stos movsb push mov dec js and stos rcll test test sti scas adc insb icebp sub (bad) and clc fdivrl adc lcall test daa mov test and sub outsl popf or jae lahf (bad) repnz jb (bad) (bad) and pop and inc pop mov adc bound cmp cld out hlt add cmp pushf and imul paddd inc data16 sbb sbb jb arpl mov mov sbb mov int int3 aaa lret scas mov sbb or inc cs mov xor jo mov dec int3 sbb adc ret lods in insl mov sbb cmp and mov hlt jmp (bad) rclb out or icebp inc addr16 fcmovb jnp pop pop insl sbb pushf sbb out (bad) int3 mov cwtl and in (bad) fmull out jl dec pushf (bad) xchg mov inc lds dec mov jmp or clc jg lret popa cmp push lea inc mov outsb divl out sub push fcompl adc pop dec loope dec and and xlat mov push mov rclb xchg and and test pop mov jno,pt add xchg (bad) scas jae jbe enter aas in in push loopne jns stc or lods dec mov and aaa out mov adc (bad) dec xabort xchg and ja xchg jmp mov xchg outsl aaa mov fistl enter cmp cli std in addr16 (bad) je cwtl cmp add jne jnp aaa cmp sbb xchg and push add mov hlt xchg pop mov (bad) mov jl lock dec cltd pop pop xchg stc test adc mov (bad) (bad) mov inc mov (bad) mov ret clc pop enter std out ja pop fsubrl mov aaa out xchg pop sti sti add add inc aad xor jbe jge stos push shrb inc mov in sub mov or dec mov xlat (bad) mov scas (bad) push lock cmp or and popl out lea test (bad) mov inc sti repz pushf jnp stos push dec fiaddl and mov daa mov mov inc fimul imul jmp mov sbb mov push pxor inc jp ffreep aad orb jns or sahf mov test dec jno pop nop divl popa (bad) push test xchg das mov push nop popa pop xchg jo push lods bound jo clc int repnz xchg sbb jne push lahf addr16 mov cmpsl ficoml cmpsl inc test xor mov inc sar shrb adc test loop (bad) lret aam cwtl sbb das cmpb sub inc xchg fdivs xchg hlt lret test xchg pop mov adc sub mov and add (bad) insl adc bound pushf cmp mov aam jb jg hlt jg push and mov bound lods dec ss cs mov and pop sub mov push loopne imul add or into test mov andb inc xchg xor ds cmp popa or roll xchg movsb dec inc rolb pop inc loope lods out repnz std xlat mov cmp and sbb dec loope test push imul inc push clc jle popf in mov int roll push ret pop dec cmp js mov arpl xor inc and sub mov in inc xchg sub aaa mov mov cmp ret aad cmp or xlat inc adc test or sar mov pop (bad) inc orl lock push outsb das adc outsl lahf push jmp movsl add mov pop out sti out hlt sbb mov dec cld out mov hlt sub out mov setnp aam or adc cltd and and popa jg push fwait inc hlt jp lahf pop rcrl icebp mov inc mov or js pop je aas fcompl jmp fwait add pop sub mov ret and xchg or repnz mov or mov or dec (bad) test (bad) fistp rclb mov sbb dec mov jne jno (bad) mov outsl orl rcrl ret xor decl push xor data16 jl lods movsl mov outsb sub arpl imul jo mov xchg aad lret dec call (bad) ja test push (bad) push test cwtl ret gs leave lock mov dec xlat les lea lods pop (bad) mov dec (bad) int3 pushf xor and fwait orb pop sahf jmp test adc cmpsl add pavgw sbb adc fbstp mov setl aad cmpsl jmp ret imul in pop xor fs fs lds and je mov xor data16 jmp pop sub dec xchg out (bad) fistl rclb pop sbb lcall test xchg pop inc dec mov sbb fsubrl sti pop (bad) xchg sub lret popa (bad) xchg orb mov lods out add js sbb or mov outsb xor mov sub mov xchg loope sub inc pop pop fstps loope mov or out addr16 push clc jns add dec dec and jle fisttpll mov sbbl (bad) mov hlt dec les cwtl jge sub leavew icebp (bad) fs push dec add (bad) dec mov inc inc popf sbb lahf mov cmpsl fmul inc das cld xchg cli aaa (bad) cs loopne or je xchg jg dec ds sbb jnp leave sub cmpsl pop ds movsl fsubrp daa enter adc lods mov hlt xor aam dec sub adc fldl push test xchg ds mov int3 out jae mov std sub (bad) inc lods gs xchg movsl sub fimull push inc mov mov movl pop mov fcmovnb push into mull or arpl cmp mov inc out dec idiv add (bad) test das jo xchg lret jb xchg adc shrb mov push inc leave push sub and stos in (bad) mov bound into adc pop cmpsl repz popa out jo out xchg pop xor psubq (bad) and movsb (bad) scas popf mov lahf daa out add pop pop (bad) repz inc adc mov add mov xchg cld fs mov inc clc xlat hlt call scas mov inc fcomip pop out fcomi and or mov add dec stc frstor (bad) adc mov xchg imul mov stos cmc push xor add jo test arpl out push lods lret sub test cmp lods in rcrb stos adc repz int3 test stos jb xchg lfs gs ret (bad) (bad) jmp lahf popf repz (bad) das cmp into ficomp (bad) dec insb loopne cld int roll jae mov adc add push les aas mov push popa inc lret add jg pop lods mov sti push sbb inc call cmpsb lcall jecxz stos inc lret imul jmp add dec mov lods adc movb push data16 lahf ljmp xchg sbb or popa test (bad) jecxz add in outsl ljmp sbb adc pop sbb push push insl test xchg fs push jns cmp jp (bad) pop fs push ds sbb in cmp loopne mov jecxz sbb jp data16 js test outsl mov mov pop dec sti push in shrb or adc add add xchg sub mov stos sub lods in pop push es mov mov adc es push cmp adc outsb lret lea stos rcrl in loope inc push fistp out pop lcall pop loop sbb fdivrl fldenv sub cmp inc daa outsb mov je sub out add lret (bad) rcll cli aas xchg inc mov xchg call jg cmp sub ljmp pushl enter push (bad) jmp pop mov std dec pop cmp xchg sti mov cltd mov sbb mov mov xor cmp mov xchg or std into xor mov mov push fldl jb movsb mov loopne mov push les out sub imull test add je dec mov call test loop fldt jae xchg adc push xchg out mov aad pop mov stc lock clc ret out shll adc sbb jmp loopne push scas xchg jge adc imul mov xlat jno fdivp sub push xor adc fdiv daa repnz cltd xchg cmp xor push icebp lcall cmpsb or fisttpll insb jbe mov enter and and fistl push int adc adc aaa outsb mov cmc inc out push ljmp cmc mov xor mov shr popa movsb mov add addr16 push jne push inc mov inc add fidivrl push cld sbb xor cmp in scas xchg jg pushf xlat aas aaa adc je out mov pushf cmp cmp push cmp pop adc lock cmc (bad) xor mov push ret popl add int (bad) mov shl (bad) xchg add dec sahf sar (bad) decl cmp inc adc xchg pop cld mov test iret insl daa add fsubl pop popf pop sbb pop pop lds das nop sbb les sti movsl (bad) cmpb loope popa sbb xor imul inc aas int3 mov pop mov or sti stos jae push incl out xlat jbe stos sbb xchg dec dec repz inc pop mov in jecxz adc (bad) enter mov das cmpsb sahf pop sbb (bad) sub add mov xor push ja lods imul xor adc dec aad dec fs flds fisubr das sbb hlt jecxz and movsl sahf int inc bound push movsb stc lret cli dec inc jne rolb xchg repz sbb sub lock in xor mov push adc jecxz mov insb mov sbb or out cwtl enter (bad) and jns sbb lds (bad) pop roll cmovl mov (bad) jl (bad) jecxz lods mov fs sbb inc sbb and mov mov mov jecxz sub out and (bad) imul mov xor ss iret pusha mov sub data16 cs js sahf in repnz mov je mov inc (bad) mov scas test jle arpl lea sub adc add hlt clc adc inc (bad) and (bad) je jle xlat cltd add gs xor push out aad (bad) sub adc sub rorl mov and stc stos sbb inc cs pushf and (bad) pop pop jge neg and aam dec (bad) xor cmp push popf inc xchg iret add xchg xchg add cwtl cli mov loop and adc fstps andl lret fst push inc dec jne mov add pop mov fnstenv out cltd hlt jg cmp xor subb rorb dec xorb lahf leave and mov cwtl int3 mov mov and mov out push neg repz pop aaa push in data16 stos or (bad) push adc ficom (bad) sbb mov jbe (bad) xchg ret push adc incl dec push mov mov lret xchg jbe adc pusha mov inc xor push xor mov mov call cli mov out add jmp (bad) (bad) sub outsb inc dec push dec push cmp push gs outsb and adc stos fnstsw test insl mov mov push pop mov mov das aas adc jb dec aas xchg rep add xor jmp pop stos mov sahf test sti movsl mov xchg push pop jmp aas fidivl add cs jae add cltd inc hlt inc pop (bad) fidivl leave int3 inc js lods test out cli stc ds out es cmp cmp inc xor sbb xor jbe outsb mov (bad) (bad) xor enter aam stc mov jne stc icebp in cmp dec jnp clc sub push daa (bad) repz mov dec cmpsb fldt fisttpll push sbb loopne mov insl xor lods stos in xchg xor adc insb push inc (bad) je jge pop imul ljmp add scas sub cmp mov imul cmpsb stos scas inc adc sbb mov subl mov mov orl xor pop push or pop add shll jo cmp sub jo call sub adc aam push xor dec push xchg push mov adc mov test rorb popa dec add pop jmp dec xor push mov iret xchg dec cmpsb inc fs nop les data16 shl (bad) stos lds cmc repnz add sub mov fs into int pop jl jp and ljmp mov mov test adc mov jmp jle fldcw out in mov push das or push aaa cltd adc or (bad) and xchg cmp and lahf mov mov sbb push popa mov pop pop ret mov stc mov in mov ret clc dec icebp adc cmc inc mov (bad) xor out es lea out (bad) int es or fisttpll ror push jp pop jno les fcmovnu push dec cld adc insl mov mov sub inc jne sub or outsb or xor mov std xor sbb sbb stos cmpsl pusha (bad) mov mov jne push push ds fildl cmp shl cmpsl sbb mov enter mov and out scas mov jno (bad) and xor and push ret push scas adc jmp adc (bad) scas push lods jmp pop or inc push sbb mov lcall dec ljmp into sub mov fldcw or push test cld pushl cs lock lock mov insl mov fdivs xlat aaa js stos mov and and push (bad) jae xchg div es xchg movsl lcall adc iret or xor xchg lahf mov test inc pop xchg in jmp clc cli xchg aaa popf cmp cmp movsb pop push mov hlt adc rcrb xor sbb fldcw mov pop push (bad) mov and cmpsb jmp mov mov adc cmpsb and loopne (bad) mov fwait sub xchg mov jp mov and inc out add sbb or in movl push int3 enter icebp (bad) out sub cltd sub dec push dec stos jg imul imul es stc gs cwtl pop ljmp add fidivr adc inc int3 sahf lret jl and scas iret movsb adc ret and test or add loop sbb add xlat push sahf jns clc dec inc xchg push add cmpsb mov mov cmpsb mov cltd mov lds and mov shr leave (bad) mov push sub xchg fldt pushf mov cmpsl (bad) leave sub mov jo aaa icebp icebp rcll pop add clc insl (bad) xor loop call int rcll sub xorl shl stos int3 jns dec into jg jnp,pn adc in outsb dec lcall cli lcall xor lea cmp (bad) (bad) push mov mov sti xor or sub mull fwait jl mov xor add xchg lods push mov sti insb test mov fmul scas add push nop adc ds adc ljmp fnstenv (bad) ljmp pop push pusha repnz je out out jno mov pop cs data16 insl cs das add pop jo xchg mov fs mov mov push mov fwait mov inc mov cmp or cld mov das mulb fsubrs mov loopne adc xchg into lock fninit jnp inc jb push mov (bad) out push push pop push mov sahf push ret pop pop fstpt movsl stc xchg adc jb ds pop mov cmp mov or sub aas lret push fs fucom push lahf mov aas cmp scas mov rclb sbb sar imul in push mov inc mov or inc adc sarl gs inc scas inc out push hlt mov mov xor push sub arpl bnd aas punpcklbw je test inc jg fldt sub mov pop cmp or sub fcmovne mov mov or lret pop pop int3 push xchg mov xchg loop outsb stos sti adc jl fwait jnp fcomi dec aad and pop lock popa inc xor jg lahf mov lret popf pop test pop pushf ljmp ljmp mov pop pop mov dec cmp xchg repz das adcb cmpsl ds jno sub jp xor dec test movsl shll inc cmpsl add cmpb xchg fistl sub rorl push insl nop adc test push dec adc hlt in idivl in icebp jnp xchg xor cmp icebp es loope xor pop adc outsb in mov and pusha aam sbb fidiv cli adcl cld call jne leave or add cmp push push bnd add sub xor mov movq adc jg (bad) in lods xor js (bad) ljmp or std mov in sbb (bad) jecxz and jb sbb imull xchg sub imul aaa lds jecxz pop fdiv mov jns (bad) rorl jns xor inc (bad) and xor cmp insl mov add out or inc idivb rcrl mov fiaddl mov add fiadd push fisubrl dec imul dec js jle mov lods mov xor jp rcl dec add add fsubrs mov out ficompl sbb mov mov mov adc sbb mov xchg bound sbb jl cmpsl mov cmp addr16 fwait mov xchg dec stc int mov pop xchg mull and (bad) add pop add stos sub int pop rcrb outsb sti xchg xor divl lahf stc rcrl jno pop enter pop pop (bad) jno cmpsb xor in sub fs loopne add mov popf iret int jns insb pop adc adc scas add pop mov mov mov adc into aas fcmovu (bad) mov jnp lahf cmp push jl pop fidivl lds loop push pop roll ret sub push movsl xor dec jge or enter push ficom out hlt adc bound aas (bad) in cltd mov jne test adc stc add pop scas xchg (bad) cmpsb mov inc dec and xor jecxz sarb push pop es jno mov out mov jmp cmpl call push and dec adc dec test sub add sbb dec pop inc push sub repz je cltd mov or bound pop cmp mov inc (bad) (bad) fcmovnbe mov jl movsl inc jle (bad) jnp pop jbe arpl add dec jmp mov adc imul arpl push push pop ljmp sub in leave out adc je imul mov sub fdiv hlt or popa pop dec dec jbe xlat cs cmp push push push mov mov mov xchg mov movsb lock pusha push cmpsb push push adc jno and (bad) outsl iret sbb imul or scas or pop cmp sbb aad adc lods mov mov jecxz pop adc negl pop xchg rcll aad out es mov pop cmp stos jae lds dec jg inc mov loop xor add pop or sub div xchg dec aad mov test xor test xchg dec aaa xchg jo ja imul mov adc xchg dec js hlt test call shlb cmp push lods enter mov mov cmp pop push mov jg dec push mov sub lret into bound ret scas sbb push cmpsb lea jecxz mov xor dec imul out jns dec inc fcomi daa rclb sahf push test lds push int loopne or fwait stos cltd ret jae je gs cmp and add xchg rcrb pop push jecxz mov rorb dec mov push push sub in (bad) dec pushf pop mov popa lods add in or dec sahf or aas pop lcall fidivr fwait sub (bad) fidivrl repz arpl cmp ret lock mov js cmp add sahf cmp fmull (bad) push dec jle popa into add popa (bad) dec mov push adc adc pop stos xor pop or adc push adc dec imul leave out or mov cwtl or dec stos leave sahf movsb and lock stc pop mov fiaddl in and dec imul stos ret and mov mov out pop and jl mov mov add push pop push cmp gs cld cmpsb inc (bad) lea xor imul fisubr flds adc jge data16 scas fsubl jl aam mov mov incb out roll fistl mov jb das test fmuls pushl xchg inc push xor xchg xor outsb fist faddp mov lock sti scas daa jae ss ret cmpl mov test mov rolb xor mov insb hlt ja (bad) mov mov in jbe jns dec mov and sbb pop mov jns sbb mov mov push dec or inc cmp int3 mov sbb enter hlt imul adc popf mov cmpsl mov or cltd lods mov mov xchg (bad) out adc mov pop popa mull clc xchg icebp fsubrs outsb sub lcall xor loopne add push cltd sbb mov dec cmp scas je sbb jge loopne cmp leave test lea cmc and add mov jne insl fstps je test (bad) fcoms pause popa pop dec add xlat push xor cmc (bad) movsl push sub add inc and pop into mov jp xlat mov jno fild in cwtl or mov imulb (bad) push repz pop lea fwait add int3 lret aam mov sub adc sbb cmp add push push fnstcw cmp mov clc pushl and xchg ret cltd fsts pop leave push cld mov pop mov sbb xor jl dec stos sbb sbb sbb insb call cmpsl push sar mov jbe push jns cld scas push loopne cmp xor outsl xor sub fistl test inc mov xchg fmul repz rorl arpl fcmovu int dec mov mov adc in cmc jl add aaa inc nop pop pop pop jnp mov cmpsl add mov mov es ret push scas mov mov mov hlt les or cmp clc clc adc sbb push and mov adc jo fildll aas mov cmp cs mov gs hlt mov rcl cmp and out fld push xor xor decb mov or sahf jne jbe mov mov (bad) aad aad call xchg (bad) xchg push pop pop push lcall pop gs fwait inc xor (bad) mov idivb push sbb adc adc (bad) xlat (bad) aaa dec das lret aam cmp mov xor mov dec cmp cmpsl (bad) jecxz arpl xchg clc push inc xchg xorl neg in mov repz aam out stc int adc test jnp adc shl mov push ret sub xchg dec sub (bad) inc iret dec jp pop pop mulb inc mov inc shll jno jle ss mov fmull xchg add pushf mov rcll std dec pop loope test mov js pop pop xor dec scas and xchg push lods (bad) fdivrp cmpl add cli in pop or and cmc sahf fwait ret pop cmp jecxz cmp leave xchg adc jl leave testl mov push shl stos rcrb mov stc fidivr test mov mov jo push mov in rorl movsb lds push iret sub ficom sub rcrb loope xchg mov xchg loope out cmp push dec dec stos or cmp dec popf out (bad) push add sub mov cmp mov in or adc pop gs inc shrl je xchg dec pusha inc je push movsl pop out mov lahf divl fisubl aas hlt mov jmp ret and sub call or dec mov scas icebp lret icebp jl pop add and test mov movsl loope inc xor sbb adc mov clc sbb stc dec push xor and mov enter mov inc push cmpsb (bad) insb cmp int3 aam fcomps jno out and ljmp leave push js push push jno stos inc lods mov scas call stc push mov out shlb xor pop push addr16 adc add repz sbb stos insb push push adc aaa sti dec enter xor mov icebp mov lods (bad) push xchg mov mov clc push jbe push sahf sub push lods cmp mov imul jns jnp roll bound scas pop out fistl push cmp adc lahf inc and mov cmp push (bad) ss enter fbld xchg fucomi xchg lock lock scas sub inc sub ss int push cmpsb popa not xorl aas sbb mov mov jb pop and and scas sbb inc xor mulb xchg and mov and push adc adc sarb repnz js pusha iret jno lahf cmpsl push sub and pop mov push or push xor or push mov xor push out and or out rorl mov and (bad) out jge test dec mov loop mov fsts stos inc jnp dec push das movsl mov les cmp test daa mov push mov rorb lea jmp sub in mov repz sub in int3 xchg xchg fdivr xor sub mov dec clc inc xor imul push mov pop pop hlt dec outsl mov lahf jp push mul xor movsb xor cltd dec (bad) cmp test (bad) cld lock xchg pop loopne out dec mov and out mov imul pushf fildll jge pop aas push or aad movsb pop fildll and sbb cmc orl dec inc sbb mov adc jne cmp mov mov xor lret (bad) mov repnz sub push sbb pop or enter lods dec dec cmpsb fbld xchg sub daa mov lcall scas pop cmp (bad) push aad fwait push xchg sub push fnstcw ja jne xlat push lea lock mov or inc test cli mov mov inc int3 stos lds lods mov les addr16 (bad) jae aas sbb and insb stc arpl stos sbb xchg out (bad) out cmp dec inc fldcw mov push or pop push jg xchg fistp mov fdivrs mov stos dec push loop aam into sbb dec imul cmpsb popa push cld mov insl jb das repz mov mov ja lret jne rcl add test test or loopne push jnp in mov and add mov cli cld cmp pushf sub (bad) and adc (bad) pop jo (bad) cwtl mov sub scas imul jecxz dec cltd lahf jmp aad fist rcll sbb push jle out xchg fidivr iret roll rclb mov jmp outsl cmpb mov xor mov mov insl ljmp fwait mov pusha pop jo mov out iret ror jge mov mov xchg cld mov jle sbb sbb sub hlt scas call add fdivrl cmp pop mov push pushf js in (bad) add push push stc mov fsubrl jno (bad) sbb inc lock xlat or push bnd mov fcmovne mov enter mov xor movsb and adc mov push mov xor iret sahf push mov xor cmpsb sti cwtl or stc data16 dec push rolb lahf cmp sub mov fisttpl test pop test mov cmp outsb inc or enter cltd jmp cmp mov icebp sub mov out inc pop jcxz arpl movsl test or xlat or ss ja cmpsb jns push mov scas xchg outsl cmp aad or xor xor test pop pop fsubrl push inc mov push dec mov loopne or dec and or outsb adc push xor fbstp pop in in jne,pn ds xor stc xchg mov aad pop adcl gs sub sahf popf mov hlt ja in pop lods adc cli divl fdivrp dec test in jo dec dec push test xchg int into push out mov inc lret xor in mov push xor sbb (bad) div repnz stc pop lret lods add lret push daa popa xchg in pusha push and push inc push xor pop lret sti push jmp ret into data16 aas loop adc js es mov (bad) mov stos testb cmovo xchg ja (bad) adc xchg out xchg mov rclb pushw pop xchg dec das leave cmp insl popf ja or gs lcall cmc adc leave fisubr inc dec jle ljmp mov lret jbe leave mov sub arpl repz fwait jno rcr loopne and mov mov into push cwtl push lock ja mov std push fstl mov jg (bad) mov loopne push lds dec and lcall sub nop xchg cmp (bad) xchg stos mov loop lods std cmpsb jae fcomps and inc fcomip gs sub inc adc daa leave sbb vsqrtpd mov lea add test inc lock xor jmp pop cmp add xor pop nop sub dec fwait rorl add push jne mov les iret lock insb mov loop cmp mov add jmp rcll imul push push pop bound xor mov sbb xor adcb (bad) jno mov mov ret repnz movsl out mov sub adc ret cmc jmp roll inc repnz xchg (bad) (bad) pop sti ja jle aas cld mov push movsl or push adc xor cmpsl push push sti push lds mov scas inc xchg into test cmpsl xchg testl repz push and sbb sub xor and stc lcall mov stos jns fbld pop cmpsb pop xor stc or add xor lods in mov repz mov (bad) cmp mov test mov outsb sbb cltd stc lds pop int inc jo inc mov inc mov lcall dec add cmp and inc mov jge xor pop (bad) cli push sahf enter mov movsl decb scas ss xchg icebp mov sti sbb cmp adcl out scas add pop (bad) dec push jne into mov jg pop pushf mov data16 pop xor inc adc mov mov inc fiaddl push jl mov adc push ja (bad) repz mov xchg lahf lret dec fild divl fs lret adc mov mov iret loope push pop push cs jo das mov int in inc dec cmpsb cmpsb pop divl mov mov fidivr push add dec andb roll jg gs mov subl movsb xchg mov jge or lcall adc pop or pop scas mov rcrb push ljmp sub sahf lcall shl mov xor push (bad) mov jp and mov xorl daa mov jg sub xchg add sbb jne in inc imul xor xor ret sahf movsl pusha xor lcall (bad) popf sarb sub adc iret sub dec aam nop adc stc fcoml lods pop mov cmp add aad inc cmp movsl fcomp pop int jle push pushw cli out stos addb push loope (bad) fist mov leave inc adc inc cli and jmp mov and ljmp mov fisubr ds adc xor mov cmp aaa xor popf sbb paddb cmp jp cmp jns mov jb jb data16 icebp mov lcall dec jp mov test push ret stos hlt in jecxz int3 sbb lods pop hlt adc fs ret js mov aas pop sub push ds pop movlps jb ja push add sbb aad mov mov sbb mov mov faddp dec and aaa std ds mov xchg or jle test or rcr loope mov fiaddl jg jno test pop (bad) xor adc push mov push cld data16 push insl pop (bad) es and pop fbstp leave mov xor xchg sti sub push lcall notl jnp adc ja inc mov xor push lea pop outsl push add jp dec insl mov lock subl xor and push insl cmpsb pop pop mov mov mov jbe sahf mov arpl mov iret and mov ret push fwait test (bad) insb das inc fdivr xchg test jno mov jae loopne sub jae aam mov into stos add mov out ficom pop sbb aaa sub fildl xchg insl sbb and sbb jp push jnp icebp jecxz les jno fcoml cmp cmp outsb iret (bad) sbb xchg push xchg pop mov leave out push pop insl dec enter sarb mov aad adc inc test pushl xlat imul inc popf inc push mov loopw xlat jb ret mov into shll xlat out es xlat xlat mov push (bad) or push out leave or in js (bad) pop sbb mov (bad) int adc mov js je mov cmp jmp sbb (bad) or inc fbld inc imul xor test pushf adc cmp push loope in push push jl mov outsb sti testl sti (bad) sti add xchg data16 ljmp rorl xchg push lods push mov mov (bad) hlt and loopne and setp mov cmp gs fisub inc outsl or repz (bad) mov les mov ds and cmpsb out les sbbl sbb cmpsl mov cmp gs test add jle cld dec (bad) push adc and aas cmp push test mov adc jnp les push fwait repz and jmp cld push xchg push xlat xchg sbb xchg pop mov nop aaa into and push pusha (bad) mov jp loopne and xchg xor cmp negb stc test lods push pop adc fstp icebp aad pushf mov jns or jp mov ret or insb xchg (bad) cld sbb cld lahf adc xor movsb or test test pop push inc (bad) inc insl jbe dec pop mov jb jecxz movsl hlt insl fcoml sahf jle ret jo dec test daa mov aam (bad) adc push jge scas mov push fsubp or xlat push (bad) aam and adc jbe push lods ljmp fdivs lret daa add xchg jp (bad) xchg and (bad) and adc push pop (bad) fs stc cmp jns mov sbb push sbb mov shlb lcall and cmpsb mov std cmp loopne rorb jo sbb movsb inc jg test adc push cmove dec dec cmc inc mov movsl fistpll cmpsb notl dec arpl loop repz faddl or shll jecxz test je add mov xchg out cmpsb adc or loopne mov movb data16 lcall loop sbb adc outsl mov into lods cwtl and push cmp outsl (bad) gs test fs hlt mov add mov fimull daa mov or jle mov xorl and mov scas das cmc ja fdivl out (bad) jno (bad) xchg leave add insb mov xor call sbb sbb or ja mov loope clc sbb add lahf fsubrs cmp or por insl mov sub mov gs and in xor imull cmp xor sbb (bad) dec cmp test or dec dec mov int sbb inc jno in dec dec push sbb aad loope dec xor dec inc push and popf decl inc adc std mov inc cmp int3 pop xchg inc xchg fcompl jecxz mov pop data16 sub sub mov push mov loop add stc lods xor je push mov test call sub test or jmp aam mov movsb sub or add xor pop sbb pushl sahf jo sarb or loopne test lds imul in aad push mov pop push mov call (bad) cld stc scas mov adc lret sbb ss pushf arpl (bad) xor dec adc jnp mov sbb mov fadds ss repz push cmc lock outsb or (bad) not and mov pusha sbb push fadd xchg fdivrl mov pop push inc (bad) pop sbb stos fwait mov lcall xor sub push (bad) and push mov and sbb ret sbb sub std fsubrl sbb pop sbb je ja dec pop mov sarb ret (bad) lret adc test dec lret sahf and (bad) fisubl sbb mov and ljmp fldenv cltd pxor cmp mov sbb fs fmuls aaa push into xor test adc xchg leave mov rorb mov sub movsb inc negb inc fdivs pop or les hlt xchg popf xchg add clc jl pop push xchg insb repnz lods jge or sbb pushf lds cwtl bound sbb (bad) or xchg push lcall jl imul into xchg les dec sub aam scas cmp add or es lret out jmp jg jb mov jmp add fisttpll mov repz rcrl mov (bad) in (bad) test xchg push cli test push jo mov popf lods xor xchg jecxz and incl dec orb pop mov and lock (bad) mov pop arpl out mov jns (bad) in or imul jmp ss rorb sbb xor gs add movsb mov xor dec addl sub lock in or cmp pop mov cmp adc addb aaa inc sbb sbb lds loope mov ret mov mov inc (bad) sarl cmpsl icebp fmuls jge in cmpsl or sbb repnz bound stc ljmp mov jb push push dec mov (bad) iret stos scas in push dec ret test cmpb mov fwait aad sbb cmpsl std rorb mov popf loope jp enter fucomi scas or out int3 int icebp cli pop popf lea stos sbb inc adc stos mov test push push popf ljmp xorb ljmp scas inc pop jne fbld inc in adc pop dec mov and test setbe or xor outsl add outsb (bad) cmp adc and rcll in xorl mov mov cmp cmp xchg mov jge scas popa lea mov mov jae jge data16 and xchg adc cmpl test mov xlat rolb jp cmp loop sbb les sub aam icebp xchg es xlat dec lods notl jae mov mov pop movsb shrl stc adc pop (bad) sbb fild mov shr out mov mov sbb ret js ja lods mov iret shrb xor cmc push es add lea sub sbb loopne std loopne or fwait cwtl scas jbe inc (bad) mov xchg inc sbb insl cmp push sub sbb dec inc out data16 and dec scas (bad) fucom lods jns outsb aam fiaddl add nop cmp xchg xchg mov stos out mov loopne ljmp sub push inc sbb jno fs or cltd xor rorb ret cmp in cltd test scas subl insl stos in adc mov sub xorl fldcw jbe (bad) dec mov cmpsl imul push fstp sarb push sbb cmpsb pop xchg enter (bad) or popf push jbe movsb jbe dec cld sub inc jmp and (bad) ja mov xchg push andb jl out jp push rcll bound xchg stos (bad) (bad) adc cmp aad sbb or sub (bad) lahf mov push addr16 xchg (bad) in dec cmpsl xlat dec test jae pop sahf and loop mov mov inc das lds and lahf cmc dec mov xchg mov mov insl idivb ret mov gs int add fisubrl fldt leave aas jmp and loop pop insl push pop pop and mov mov out ljmp sbb pusha stos adc inc and jge mov xchg adc jne pusha lock add or mov xor imul sbb pop mov hlt jnp and dec cs es addr16 clc push mov mov (bad) flds pop lret xchg mov std cmpps push xor adc rcll ret into and sub imul das out fs mov push popa addr16 sbb imul hlt dec lret push js xor mov sub inc in push jle xor mov dec xchg cs dec sbb cli test or ret push xor inc jp popa add mov pop (bad) stc pop xchg sub loop push xchg sub sub in shrb cld shr dec cmp imul enter xchg imul push fadds pop (bad) dec sub mov ss cs pushf daa sub cld ss test imul movsb or push dec cmp faddl sub sbb push sbb es or cld add sbbl cmpl adc lods adcb loop pushf lret loopne call sti jmp inc cmpsl sub jle in mov inc movsb sub sub and nop sub aad push and xchg (bad) xor popa int pop xor and or xchg sub adcl pop fwait sbb addl lods test adc icebp into or sahf sbb mov insl inc imul and sub mov push mov cmp cld cwtl lock ljmp or movsb add test enter xchg sbb add inc out (bad) pop lods ret mov sar push and iret jbe cmp xor push mov jecxz adc fwait (bad) outsl das cmpsb xchg mov cltd mov xor mov das inc xchg in xchg xor pop or je sub xchg movsb xchg dec adc xor enter pop jbe xchg gs inc lcall xor push pop (bad) lods dec aas mov jnp fldenv (bad) pop sbb sub mov test add (bad) out dec lods lret fwait push jmp cmpsb mov and lret sub rcll addr16 les pop fnstcw pop (bad) addr16 mov jo mov jo xor xchg mov icebp or inc pop dec jg push pop sbb lods je dec addl inc popf adc and cmpsl rolb or hlt jo sbb ror insb push pop (bad) xchg pusha jl xchg dec mov cmp scas nop dec aaa sbb xchg repz sti mov lock lret enter divb addr16 js xchg aad daa push lret push test mov or (bad) movsb out in sbb rol adc imul jno loopne test add push push adc rcrl enter cli icebp pop cmp cmp outsl sub add dec mov xchg inc icebp fcompl mov dec cmpsl lods fisttp in cmpsb and aam loopne xchg pop fsub inc mov hlt sub test push test mov ds bswap leave jmp mov and mov (bad) mov fdivs push push push mov movsl mov cmp add xorl insb sub xchg lahf sbb add sbb dec mov call or jnp xor xchg rcrl gs aas sbb and xor push stc (bad) push out cltd gs and pop jne mov test inc sub ret mov add loop push sub cmp ret aas dec cmp or popf jecxz adc ret push lods cmp sahf lods outsb repnz insb jecxz popf mov push pop jbe and clc jb dec dec (bad) dec xchg mov dec jmp jns leave incl divb jp push add rclb fimul mov (bad) ret push rol fcmove adc or or loop stos adc xorl loop popa xchg rclb adc dec aam (bad) mov mov loope push out lock adc and add dec setno sti xchg mov scas in (bad) test call or lahf addr16 and popf sbb shlb out out jnp loopne loop pop imul insl pushf mov lret inc in mov cmp in dec push sti clc lea pop (bad) mov dec mov out jo js ds sbb bound and stc xor in pusha (bad) fsts nop sub xchg test inc ss repnz and (bad) inc lods mov inc roll ljmp (bad) daa mov fs movsb (bad) pop aam mov cmp data16 lds xor mov xor mov inc lods mov mov push movsb icebp pop mul imul dec cmpsb cmp sub outsb sub push daa sub jae data16 movsb jno ljmp mov sbb pop cmpl subb shl dec and inc adc (bad) daa ss or fcmovbe and cmpl push sbb std mov mov xchg jno mov sbb cmp xchg xchg (bad) push cmc mov rorl outsb pop nop mov jne sbbl lods mov push push mov pop fxch pop insb push popf movsb (bad) icebp (bad) xor loopne repnz pop (bad) leave sbb add test mov repz pop add mov mov js mov (bad) adc jl xchg sub cmp mov fbld jmp jmp test sahf fldenv pop push push aaa movsb inc cmpsb and out (bad) xchg std pop jecxz das jmp xorb in and inc dec xlat sbb mov dec popf fwait fxsave cmpsl xor into (bad) fwait sbb insw jnp aad aam sub idivl scas je call cmp test ss push mov bound es jae mov ja mov into mov mov jnp xchg mov cmp ljmp jns test mov popl push dec nop insb inc push stc sbb xor cltd mov sub insl mov sbb int pop sbb xor push shlb out aad pop std (bad) ljmp cmp clc (bad) mov jnp std xchg mov push pop lahf jae xlat pop js and cld pop add movsb mov fstl dec or imul xchg adc mov mov inc jbe sahf dec xor in cmp mov test xlat imull pop movsl ds add dec rorl stc and testl sub icebp cmp or adc jmp sbb cmp xchg cmp movsb js cmp rolb out call roll push xchg pop xor in out xchg ret cmp dec adc mov dec aam icebp push dec jo cmp lret cmc xchg sub mov pushf in movsb in and test frstor lcall mov mov and xchg clc js adc push in mov mov stc cmp xor dec pop stos push call (bad) insb push mov pop clc and sub cmpsb xchg outsb pop push aas mov mov rep mov xorb pop movsl sti sbb (bad) lcall shrl mov xchg dec adc jmp push lods test data16 adc mov mov mull mov jle test (bad) push cli xchg (bad) mov push fs xchg into jmp and repz es mov sti loop xchg ljmp out les inc jb lret push mov hlt xor (bad) loopne fcomp jl cmp jecxz fcmovu dec sti xchg push ds mov mov inc popa (bad) mov mov mov xor pop push inc jl stos or les xchg jl sbb dec lret pop push mov dec mov mov cmp inc sbb mov jno push aam popl push cld rorb fcomps xor push hlt jle ret arpl xchg mov xlat fcoml icebp andb fmuls xor hlt push cltd in jbe,pt jge mov sbb leave mov xlat jmp push adc mov in aam xchg xchg sbb mov mov ss sub mov jle add xor sti sbb movsb rcl mov lcall pop jp push pop int3 xor (bad) add push pushw dec movsl fucomp push add lods addr16 into pop ja jb push (bad) icebp and rcr fwait xchg xchg imul mov outsb cmp inc push subl stos fucomip add dec hlt xchg xchg das mov sahf inc mov push icebp mov imul imul imul fist mov mov sub inc fiaddl insl js push xor mov cmpsb jecxz mov push jno mov test mov outsb in inc imul mov xor push cltd adc mov inc sbb dec xchg (bad) leave xor adc or pusha enter inc sub or xchg cmp dec gs ds dec pop (bad) mov dec dec inc ds mov fs cwtl shll dec addr16 cli arpl xchg outsb mov xchg ss add icebp sbbl jne jno sub xchg mov mov xlat pop inc sbb das jb test hlt (bad) fistpl iret pop stos addr16 cmpsb mov sbb insl mov pop aad pop push add inc xor mov stos loopne,pt (bad) stos popf ds loop lds mov repz out test mull imul adc adc mov adc je movsb in ffree fldl fdivl iret inc xchg mov cmc mov fsubrs sub cli adcl add test xchg sti inc sub inc mov push sahf or loope sub pop push cmp (bad) jmp cmp pop adc femms popf inc sub imul cwtl mov mov mov sbb ss or aad and dec mov cwtl pop inc push xchg rol imul xorb in cmc sub pop pop adc xlat pop sub ja daa std nop in stos cli bound add inc push imul sbb adc pop push push pop ficompl add cld sbb clc push stos xchg jb jo out push out xchg ss aaa mov cmc xchg (bad) mulb cmp mov add pop dec inc popa mov or std je inc jp (bad) mov pushf fwait pop xchg mov int std mov jmp pop test sbb fldenv scas or jno (bad) fnstenv iret push leave out out inc stos js add clc xchg jo fs (bad) mov and jmp scas add mov aaa dec test pushf pop xlat insl lcall outsl outsb xchg adc je mov sub aas or jge xor inc test adc dec push lret (bad) pushf or incb add cmp push add dec lock mov sbb ja xchg (bad) sbb scas sub decb rcll xchg cmpsb inc jo xor (bad) mov adc popl jl add imul out sub xor sahf xchg (bad) cmp pop mov pushf xchg lcall fcoms mov (bad) sbb inc addr16 push movsb fstps aaa adc mov es lods stc push negl out xchg jl ret dec mov (bad) mov sbb or mov insb add aad dec mov inc lcall lock std and pop xchg mov sbb pop ss sbb loope sub xor aaa jge mov mov sbb cmp push sbb inc pop aas sub (bad) imul fidivr mov cmp mov (bad) xchg jae mov (bad) xchg test outsl repz das mov xor lods ss je xchg mov xor jge xchg adc dec xchg jmp mov out stos jl mov dec jmp pusha mov int3 scas in or push lret jl outsb bswap mov aas in scas adc mov and xchg xor (bad) repz js push xchg (bad) push pop push movsl pop cmpsb clc add imull push mov xchg xor bound pop sub ret cmp int xor mov sub mov or inc (bad) cmpxchg js,pn xchg xchg stos movsb or mov out movb js dec mov pop fidivrl mov mov cmpsb clc xchg sub xchg test in cmpsb fstps fimul pop test xchg outsl out mov mov xchg daa jl pop mov mov mov test jg xchg inc loop or mov mov std mov insb in arpl push into ja jo fiaddl arpl movsb sub (bad) ljmp movsl testb xor arpl and and (bad) xor (bad) dec out xchg xchg xchg addr16 jb adc stos inc sbb imulb and (bad) (bad) and cmp lret scas stos lock insl int dec xchg aam ret jae (bad) or inc push enter or sar sti test push xchg mov cli push enter push call addr16 dec (bad) mov arpl sub inc enter push adc daa cmp and lahf xor dec sbb inc lods test sahf adc add xchg mov je (bad) jae and loopne pop sub xor sub xor aad outsb sti out fstpl jns mov mov imul out aaa adc xor loope scas or cmp and jbe xor add and psubsw sbb xor push mov inc fcomp stc mov jbe iret fsts jecxz mov dec out ret lock (bad) shrb cmc sbb mov jge stos pusha jmp scas cmp inc cmp bound cmp incb mov aas cmp (bad) sbb xor pop jno inc sbb div cmp movsb out or mov ret rcrb mov fsubl rorl mov jl push xchg js xchg adc add xchg adc sub into inc pop add fisttpll popf mov dec sahf cmp pop outsl aad add scas inc pop mov icebp xor xchg insl popa in sub ret xor jl push es xor dec outsl dec test cmp loopne aam int3 adc movl stos clc mov xor inc xor ljmp fisubrl push add ljmp or push xor in cld cmp fmul xchg hlt stc pop lods je jne cmp cmpsb xchg dec mov (bad) jmp sbb jge and xlat pop ret or and pop faddp and mov push mov ljmp push and movsb sahf and aas xor push testb pop scas adc mov and or pop int or cmp insb mov ja sbb adc pop dec (bad) in sbb cmp imul mov adc jns lock jmp push (bad) add adc clc lods xor adc jl push outsb dec adc pop push mov xchg inc jge adc add dec data16 inc fcmovu (bad) inc or std pop jge popf sbb xlat ret sbb jg xor loop inc jbe lods jp (bad) aaa mov into sbb lock pop std cmc push mov lea jmp add out sarb cwtl (bad) xor xor loope (bad) lods jno (bad) and jge mov and jae jmp pop lock in pop loope push sub adc mov scas stos fsubrl (bad) cmc adc (bad) decl pop push mov jp push mov jmp jne cmpsl fidivr mov enter or adc adc outsl and aad push cs cld mov lds xchg pop fs pusha pop pop scas inc fist sbb mov jp dec clc nop (bad) cmpsb in inc rcrl imul stos pop int3 test sbb xor imul xor or stc stos dec jecxz push cmp inc std (bad) icebp sbb (bad) dec mov ss mov jle xor xor int cmp mov loope (bad) push movsl adc jl cli fsubr out shll jne repnz jl jo mov cmp fimul and hlt mov add repnz push mov sbb movb and sbb mov dec cwtl dec push divl xor xchg push dec dec out lea xchg lods mov aas fidivr cmc dec jecxz int3 mov repz jo pop adc outsb in jnp test je arpl movsb pop mov xchg xor lret mov rcl and push arpl push fldl inc xchg sub cmp cmp repz adc stos sub (bad) or add pop fistl mov sti movl or cwtl sbb repnz lcall jg xor mov data16 loopne jecxz int3 (bad) cwtl mov sub mov xlat popf jns jno ss lahf xor ficompl test add or aam jmp outsb imul pusha xchg ficom mov mov sub stos jl rorl out decl in cmp mov add shrb mov int3 (bad) or xchg pop fdivr stos dec and sbb jnp aad mov mov add dec test dec lods add fnstenv add movsb in inc test notl out fisubl loope cmp mov jno out cmp test popf sbb mov dec sub cmpsl aaa aaa mov pop cltd push mov push data16 adc inc cmp mov push pop addr16 add popf cmp cltd out inc jo in pop data16 (bad) xchg addb cmpsl adc pop sti or xor enter cltd sub dec out rolb ljmp std gs mov (bad) ror lods jbe mov es adc and nop movsb (bad) xor ljmp fadds mov out call mov and aam jbe imul jecxz sti add movsb pop bound xchg jo sbb jbe aad fdivr insb mov and jno movsb mov aaa push inc cli adcl movsb cmp push add int3 nop xchg cwtl ja pop imul xchg lcall ja add and cwtl sub cmpsl pushf popf add mov (bad) iret add mov cmp jecxz jl ret cld scas inc loope and add lahf inc xor mov xor xchg add cmp sti popa mov and aam xor jge enter bound roll aad (bad) push sub add cld cwtl dec sbb scas lcall fisttpll inc mov jmp std sbb test push pop subl or pushf mov shll loop outsb jg loopne jns mov fcoms sahf cmp xlat in stc mov adc mov hlt mov arpl rclb jle or arpl adc (bad) sub js mov xchg mov roll pop (bad) (bad) inc vpshufhw fcomps push xor add dec and jbe xor mov scas pop sbb in mov mov (bad) movsl mov outsb cmp aaa cmp adc dec aaa aad push mov or insb idiv push inc jp aad pop iret subl mov xor fisubr xor fisttpl push add pop lea xchg hlt mov or mov (bad) push jp loopne inc (bad) (bad) lret jg aam pop xchg push fs pop xchg cmp or xor pop test shll cli pop mov (bad) decb inc adc and pop or lret cmpsb das jecxz add insb outsb (bad) fdivs js pop lock lea std arpl sbb test fwait sub shrl dec mov sbb xor bound (bad) call or push pop sub or scas push mov gs in js icebp add es hlt pop mov scas pop and repz push mov mov jo push jnp jno jecxz sbb and push jns loop xchg lcall sbb mov xchg imul jns into rcll dec dec dec fwait mov mov lods adc pop inc (bad) adc aam dec jbe xor (bad) aaa mov rcr mov insl mov push cltd fcoml mov rolb push fwait test insb pop daa ret adc pop in xchg outsb es dec ret sub test push movsl out jo lahf lds outsb sub (bad) sahf xchg xchg push pop aam loope (bad) popa repnz cld (bad) mov fimul mov push mov xor test and sbb daa and dec xchg (bad) cld in cwtl fdivl lods inc pop push lea push out jecxz add fild cmpsb repz or jne jge mov sub mov pop mov push pusha lea pop out popa or add icebp mov icebp sbb add movsb add leave jbe add sbb and fisubr inc xchg pop sbb aaa lock jg insl cld iret popf xchg mov mov xor jne jns imul jp stos (bad) imul (bad) hlt dec lahf addl inc sub adc std dec adc (bad) arpl into pop daa pop fwait and mov adc xchg pop insb (bad) fwait xor push jge outsb jp stc shll dec mov sbb lods xchg and sub and jle and stos shl push cld cmp mov inc data16 push dec lods fs mov fldcw lahf pop (bad) call dec ljmp lea popa pop mov popa xchg int xor loop mul push negl insl pop test lds cwtl sbb jns cmpsb fxtract pop push sarl pushl mov mov push inc ret xchg jns cmp push dec jl lods push ja int and arpl xchg adc data16 jg repnz xchg xor push in js jp lods mov and ret sub inc out mov loop fistpll hlt dec dec imul ret mov (bad) cmp inc (bad) cmpsl add jae lods repnz hlt fcmovne imul or mov sub pop dec (bad) or das (bad) stos dec loope ljmp push mov pop test mov inc es stos stos sub outsb aaa stc out inc fidivr cmp xor jge aaa or jns and in subl cmp pop mov int3 stos stos push lds sti pop dec xor ds rol push test mov pop cmp sbb repnz mov (bad) aad pop jb push in ficomp pop icebp jo pop mov dec dec (bad) icebp cmp negl pusha lret sub jae aam (bad) or int leave (bad) sub loop hlt mov in rcrl dec mov pop push lret jae sub addl inc lcall cmc sub lds in dec fbld fs xor (bad) jmp fistl fdiv into cwtl mov dec fs push add outsb lahf sub out mov pop push int (bad) insb mov or cmp jp pop and mov mov adcb insl je stos mov iret loop inc pop lret repnz push jp xor push push (bad) bnd dec and and and out icebp push ljmp loop (bad) sahf lods test mov add insl xchg sub jg daa jmp cmpsb loope movsb xchg divb sbb sbb xchg shufps fbstp add xchg jecxz bound or and outsb sbb dec dec fisubl mov jb xor bound push movsb push loop mov cmp int3 xchg out cmp sub xchg imul js adc lret int3 imul aas sbb cs lcall jnp mull dec sub outsb sbb mov adc dec imul lods and mov popa int3 dec sub aam cmp das xchg xor xchg in inc lret push imulb or lock mov mov je es push scas mov jge xor or cmp or mov push sbb in mov fbstp fbld push lret imul fistp cmp inc sbb pusha sbb and jno dec pop dec stos mov jb outsl mov mov adc add imul aas pop mov mov push xorl dec mov cs lods sbb mov pop fldenv or xchg lods lret mov cmc mov push and pop (bad) push clc mov test cltd ljmp mov add xchg insl cmp movsb pop cmp mov lds outsb mov int3 into push std mov data16 movb call adc push inc fistpll test xchg adc sarb dec mov adc jmp hlt bound sbb xor or mov pop loop and loopne (bad) pushf mov fcoms leave scas movsb test xchg dec or inc push sub mov insb test sub xchg xorl cmp in das ret and in enter out jl js adcl pop gs hlt mov pop push fs test insb fs js out pminsw jecxz dec adc xchg rclb and mov and (bad) sub mov cli pop cwtl or sahf js shrb push iret ljmp jmp jge lods int cmp stos mov sub pop loope jg mov fstp push adc (bad) mov push rclb imul repz stos xor push mov xchg jne call xchg push push lcall pop mov xchg repnz in xor out lods cmp or dec xor in and and imul (bad) inc insb cmp (bad) dec bound cli mov adc inc out cs add push (bad) push dec hlt and jbe fnstcw cwtl lahf dec cwtl lcall pop fldenv cmp ja fadds aaa xchg in (bad) stos cmpsb xor out pushf fdiv mov leave jp mov nop negl push cli shlb dec mov or jp xchg loopne bound (bad) jg cmp enter mul bound movsb into out leave inc dec mov xchg or pop jg cwtl icebp dec and sbb or stos cmp (bad) imul xchg insl xchg add jne faddp arpl sahf test mov inc (bad) mov dec pop xchg bound es hlt (bad) into cmp adc in andps addr16 (bad) xor sbb out jg sbb scas pusha sbb cld and add rorb scas dec hlt dec or sub movsl mov sub mov pop pop sti fdivrs xor cmp iret mov xchg xchg cmp in push sub imul mov sbb sub sub or sbb adc xor stc divb pop or lahf dec aad mov stos cld lock mov fisub push and pusha adc inc mov xchg jno aam fnstsw cmp sbb mov scas stos xor pushf jnp mov jnp dec ljmp mov bound jl adc or out sub mov cmp sbbl das jae mov inc stos enter push inc mov jecxz (bad) push mov fsubr insb push dec cli push fidivrl rep loop ja inc shr or xchg push scas nop and xchg js (bad) xor paddsb mov imul fs orb cmp data16 ret mov xor or popa in push cmp or and shrl push test push push xchg lcall push inc aaa sub fist pop fisubrl out xor dec je or push sarl test add stos test push or popa aaa push push int3 adcl mov mov outsb clc sbb das lods ljmp pop xor imul sub and mov add lahf cmp lock xor xor and push sbb (bad) shrb xorb xor in push outsb lea ret sub dec push fsubl imul and pusha inc or and mov push xchg ret lock test insl and test scas xor divl stos adc xor mov movsl leave div subl mov jae mov push mov test jle push cltd in icebp scas xchg push mov pop lret add stos xlat xchg loope lods addr16 ret push inc lahf xchg add jmp inc ss mov into xor push ret xchg out lods jle xchg mov dec push addr16 pop sub sub sub push pop jmp mov inc adc mov aam addl psadbw inc push inc xchg repnz dec push popa or cmc outsl sub xor jl mov shlb push inc mov xor cs pop lcall xchg adc sbb adc mov jae popf cmc mov mov ret stos movsl sbb dec cli out test cli sti inc adc bound mov pop repnz pusha inc or (bad) int push lcall outsb push lea mov jmp mov test test add or loop lret or and adcl or mov jno mov cmp lahf sbb mov pusha bound repz daa (bad) mov lret mov rcrb xor xor add mov aam jae and mov mov fyl2x mov fisubr push and cmp and fsubs cmc xchg ror loopne mov xor xchg sbb mov das cmp sub clc jb push daa std ret ds test loope lods cmp sti lods xchg cmpsl (bad) pop stc stos mov faddl jge sbb fistpll (bad) xlat jp lahf push movsl and mov pusha inc popa lret add pop ljmp iret aam push xor jle pop stos pop adc lcall les mov fs rcll xchg xchg pop outsl fsubrl adc rcrl push inc shrl cmpsl or je add lds jmp dec outsl idivl sbb repz aam adc sbb cs nop add add push mov fcompl push hlt push iret mov xchg stos mov inc ret or xchg inc push shlb dec jg push mov in mov scas insl inc aam shlb push ret fildl sub loope mov in xchg loope fwait hlt pop fnstenv cmpl lahf jo in mov xchg and mov mov sbb push in cltd (bad) dec jbe inc lock xor (bad) aam push add lods (bad) mov (bad) mov sub or ret mov cmp negb pop lds fidiv mov xchg add dec movsl xor sub loop jge pop sub sub jmp and push jno sub cwtl ljmp movsl data16 repz lods cmp int3 and add mov push jg fcoms mov jbe sub repz into push jmp icebp enter pushf lods jl inc adc sbb cmpsl sub insl gs add cmc rclb lock out jle cmp or mov xor cmpsb roll pop fcmovnb jae mov xchg push pop sahf rol push push push push insb (bad) mov gs xlat xchg lea sbb or leave pop xor mov out xor adc push in out clc push xchg sbb or cs mov sbb and push mov into scas or cmpl push lret xchg push (bad) mov mov pop push cltd lea push cmpsl outsb aam negl (bad) fcom xchg jle sub pop imul push add cmp outsb cmpsl fcmove hlt roll je sbb pop lods add stos imulb push iret pop jge jle mov push sti xchg es outsl and jb add jle aam xchg xchg push xchg dec ds cmp mov stc mov loopne push sahf stos mov out mov mov push pop pop loope xchg into mov int3 and inc imul inc clc fcoml sub cmp jae sub test enter and cmp mov mov jecxz xor push fnstenv dec sbb pop bound outsl mov sbbb push mov scas jae fimul mov mov xchg and shll jne jnp inc clc test lods addr16 inc sti (bad) mov jg cmp add jb jbe xchg out test loopne aam stos lcall dec cmp mov and iret cld push dec loopne loopnew fiaddl mov dec in into in testl in sahf cs push rcrl push mov mov add divl jl in sub into inc jo idiv test push xlat or ja les push push sbb movsl addr16 cmpsl jle mov jmp mov mov arpl xchg push sti pushf fmuls xchg (bad) mov movsb sbb data16 jae push dec mov popf xorl ja inc add icebp or inc aam fmull in add out ret fldl das insl in xchg push dec xor mov lret pop push adc mov pop lret js mov push lods outsl mov jne and push sahf pop cwtl pop push jmp cmp inc jne or das cwtl pushf ret xor sub dec push inc clc push mov pop loop mov fstl ret dec test add fnstcw iret inc (bad) jmp dec add push pop mov inc ljmp (bad) mov cmp mov mov repnz pop or cs aam jns (bad) mov pop (bad) (bad) add (bad) or lret xchg sub sub (bad) shll mov int3 xchg outsl cwtl adc imul pop push dec sti sbb pop test (bad) in jl shll cwtl xor adc pushf sbb imul mov push jns fwait orl ss jbe cmp (bad) jg pop mov insb mov jo cmpsl shr sub mov aaa push xchg push loop or push int3 imul fs sahf sbb jg mov pop adc add add fs sti jbe push mov mov xchg fiadd mov push jle les fadds clc lret mov icebp fwait scas sub sub adc inc dec sahf daa cmp xchg adc pop add mov mov in inc xchg test arpl sub dec adc mov cmpl icebp in call fs imul daa scas pop jge xlat rcrl mov pop push adc pop pop xchg popf bound push cmp lds fdecstp cmpsb push sub dec sarl std xor jmp jb rcll and lret int3 inc pop lods std roll mul xchg ss xor stos and push fidivrl cld (bad) fistp arpl aaa mov outsb push sub mov dec and or dec pusha xchg mov jle orl mov jb push addb lock jae (bad) xor mov lods pop inc fild sbb cs cld xchg sahf adc sub ret cs (bad) mov xchg sbb lcall cld jmp popf sbb sahf pop jmp pop and mov icebp add mov paddb movsl push pop cmc loope out jge pop cltd sahf dec adc mov fs (bad) in sbb mov cltd les inc (bad) loope jo shll or mov (bad) test leave cmp mov imul orps inc stc push xchg sahf mov decl sub fs (bad) xor fmuls stos lret iret mov dec add mov enter shll mov xchg (bad) je dec lods mov lahf jmp arpl andl add mov adc mov jle cmp pop sub mov add fsub dec push dec cmp push loopne (bad) and imul cmpl mov test fwait aas (bad) ja repnz test dec pop xor std inc imul nop icebp faddp xor mov push bound dec jmp les pop mov xlat xchg cmpsl and test pop push in and add push add ficompl cmpsl cmp adc icebp jo jae xor int3 test xor gs jb cmp jae std movsb cwtl aas movsb mull cmp jns xor mov clc mov out int3 push fcompl jge mov (bad) out adc in mov stos pop das std dec adcl mov jl aas rorl dec push daa inc or mov les ljmp pop insb push inc sarb jns mov pop or mov and stos in daa mov mov fs enter push js or movsb jl or (bad) inc mov pusha pop cs and fs cli jmp jo lds xchg outsl push lods sub daa dec push or inc jns push cmp jl sub jp fsubp sub mov dec (bad) xchg pop enter movsb xchg push (bad) xor int loope or mov sub scas fidivr (bad) pushf test dec pop jp add xchg or movsl add movsl push pop inc mov jno popf lret rorl cmp (bad) jbe ja push vpunpckhqdq add stc cmp lahf add cmp lahf and fsubs (bad) pop dec fistp hlt pop push push faddl inc push pop test lret jecxz lcall out mov cltd das insl pop imul jge,pt push out pusha mov bound sub dec and in adc inc push add xchg xchg dec ret xchg mov mov xchg (bad) repz xchg arpl jae or sarl aad mov lods xchg add dec (bad) adc dec cmp sbb or mov mov inc scas dec mov scas add inc push adcl jmp mov std mov mov jl negb inc loopne jnp or jae aad xchg (bad) sbbl xchg or in inc inc hlt test xchg outsb mov fadds gs fiadd mov das repnz push mov fcoms pop push pop xor mov mov sbb out pop aad sbb push aaa mov mov xchg mov push mov loopne pop push sbbl xor and add scas fistpll sahf imul lret mov jmp adc outsb test cld inc mulb inc (bad) push push cmpsb jl sbb jbe outsl fwait aad add js fmul jge pop gs test mov lea mov test out mov xlat pop jmp mov insl pop dec js sub mov mov lcall xor repz stos out inc xor js jo,pn push (bad) adc and sub lcall std inc pop loop jg cld loope pushf add lods push mov sahf (bad) inc sub add jne jne xchg inc bound mov mov jb es xlat es pop push mov pop fwait dec (bad) sbb mov lret push popf fcoml add and add daa jl addb adc mov and cmpsl dec jb mov xchg lahf sarl fwait cmc fdivr frstor xchg xor jmp or loopne jl mov jae test ret js push jno pop popf dec pop mov and mov insb add jl inc shrb daa xlat imul sbb jne mov mov jns cltd or lret rcr push (bad) mov int3 add mov xchg test (bad) incl push cmpsb rcr push inc cmp insb repnz stc in sahf movsb xchg cmpsb data16 inc jmp cltd sub or (bad) and lock push xor push xchg dec mov mov inc xchg mov out dec push pop gs xchg cmp out xchg bound pushf enter bound cli call mov xchg ffree mov je cmp leave cmpsl dec add sub xchg jle pop jno mov jp fstpt out and mov inc icebp sub cwtl sbb fsubrp mov test xor mov push insb aas sbb hlt bound jmp ret pop (bad) and cmp jnp xor add xchg dec subl (bad) aaa add mov insl sbb pushf sub sub jbe pusha xchg insl in pop test add jl imul mov popa scas addl pop jp in xchg movsb or cwtl gs pop stos outsl jno mov in adc pop cmpsb adc aad fs and fnsave jp inc lcall fstpl pop push into les mov mov inc sbb sbb dec mov and add mov sub cmp cmp imul js scas aad lods insl fs jle mov (bad) xchg jl pop leave out mov push adc xor insb cmpsl loope ljmp pop loope loop adc xchg or jmp push cmp mov push flds mov jb test stos sar cmp push (bad) push dec add xchg pop push mov leave enter outsb fadds iret mov ljmp sbb and lret add mov add (bad) mov or ret add inc pop or add jbe bsr xchg cmc sub fadds sti dec xchg aas mov sbb cmp pop mov rcrb pop xchg xchg mov and rep or outsb imul mov pop adc mov adc iret push or xchg pcmpgtb icebp xor shlb pop jl int rcl stc inc pop push push or cltd test adc repnz fcomip fdivrs mov jge push lds test pcmpeqw ficompl sub loope xchg out mov push or test cs lahf insl pop out mov stc pop mov dec test jge dec outsb mov ficom push inc sub dec jae shlb sti mov mov (bad) mov jnp ret add and mov sbb pop lea call test scas mov mov or mov cmp sub cli lahf outsl stos mov adc xchg sub popa mov test jecxz or sarl pop adc adc das jo cmp lea push lds push xor mov mov (bad) cmp scas jne inc pop in loope inc mov add out fisub mov jae push lcall pop jbe mov pop enter into (bad) jno xbegin fwait lods push push mov lea sbb jecxz aas xchg or cmp mov xchg ds jmp cmp add in xorl jge add add int3 mov xchg pop cmp mov sub push imul insl (bad) out adc adc nop pop out cmc add popa out ret sbb fidivr jl icebp andnps pop pop jnp xor adc pop mov mov and das mov lea push dec adc repnz mov (bad) pop ss sbb (bad) aaa dec and sub mov aad test sbb pop jge mov outsl pop pop mov pop add cmp aaa mov out in notb adc sub fildll lret push pop aaa push popa aam and inc jnp int mov bound ret sbb mov stc add add insl jl push sub sbb out cmp mov clc popf inc sbb push jecxz lcall mov cmpsl inc and stc cmpb xor and test and jo add or mov (bad) push out lcall mov frstor in aas sahf or fmulp or sbbl inc jl movsl bound popf (bad) aas jp dec sbb repz xchg xchg add xor outsl mov repz push fisubl aas fs test inc mov inc add push push insb mov pop push loopne cwtl xchg outsl xor lods mov cmc fcmovnbe push sbb cmp cwtl cmp in cmpsl add shl das popf inc mov jmp adc iret jnp and pushf sub add inc (bad) in push lds lods pop fisttpl andl pop xor push jne lock repz adc lea les hlt mov daa adc out adc and cmc adc (bad) insb in out mov and out jb pusha adc arpl jge les test popa pushf negl xchg mov pusha adc cmpsl pusha ret mov cmp aad mov mov clc inc dec std xor lods es jo in fnstenv mov pop dec call inc (bad) gs (bad) les bound inc xchg fmull outsb xor push inc sub mov icebp push dec ret fmull mov mov push das sbb xchg popf (bad) sbb insl iret fidivrl jnp xor xlat ss (bad) popa sub dec std lret mov daa or mov xor and dec sbb les jne mov mov test push imul loop xchg int (bad) andps add sub mov clc adc lea jecxz lret (bad) bound or movl inc bound mov xor sub dec xor xor mov sub mov fistl jge push add les fdivr cmp xchg sub xor mov stos imul sub lret (bad) jno in jmp outsl cs daa sahf aad jle xor sti push sbb lret aas stos mov lods xlat cmp cmp push (bad) aam and jno cmpsb dec pop lcall or or xor adc inc xchg stos ds pop loope insl sbb pop mov hlt pop rol test leave scas cmpsb dec sub cmp fmull flds fcomps out addr16 out addr16 pop jp cmp das jecxz bound xchg jge xlat mov mov and pop sub xchg sub lds and inc mov pop jns out call popa daa daa stc sub lcall adc and xorl cmp xchg push inc sbb icebp out addl js sbb pusha jp leave adc clc lret cmp jl hlt inc cmp cld and test lret mov cmpsl lret xor loopne or xor cwtl setns mov (bad) ror cmc cmp xlat pushf mov fs out add jns cli sub pop movsb push (bad) or cmp les mov jecxz dec std aad xor pusha mov test jnp and loopne cmpsl sti mov lcall cmpsl and ja inc ret movb jnp pop popa xchg lea sbb mov sbb sub mov sti (bad) cltd in dec dec xchg jo sbb in mov outsb inc mov and or lods sbb fldcw lret inc (bad) mov cmp sbb sbb cmp add sub mov add add mov inc push cmc mov mov insb dec jne xor mov mov jecxz pop xor sti mov nop xlat out mov mov mov loope push (bad) xor repz jmp pusha aam insb mov pop divps out jmp fld cs sub mov adc cld cmpsb pop sub sysexit add pop jecxz mov mov dec dec inc mov or mov insl rclb sti mov fist add cld mov stos add cmp adc push or push adc je mov rol mov lock jg jbe pop popa in (bad) les jb (bad) loope jae jge mov cmc mov es dec or aam cmc push add enter push lretw xchg int3 mov push push jae es push jnp lahf outsb adc push push xchg xor sarl in mov pop or hlt fwait or mov sub aaa lret pop push add adc in and call pusha je nop push and pusha and test into sti ljmp rcrb and dec scas pop test js popa xchg in add push adc stos mov xlat xlat nop cld in add mov iret mov mov pop lds ja or incl sti pop insl (bad) xor xchg insb mov rcl pop (bad) int insl bound gs inc push sbb aad fisubr decl and out push mov in jns mov sti fdivrl sub xor shl cltd lea shlb scas inc jne sub push in adc or push sub or scas daa ret adc xor shl movq adc dec movsl out jo mov outsb jne inc gs jecxz or ljmp fimul pop or rcrb jnp (bad) in and je shl cmp (bad) jae mov cmpl push cmpsb pop pop ret stc sbb aas outsb outsl sbb xor stos dec inc sub mov idiv imul pop mov in xchg dec fbld push (bad) scas sar adc lcall (bad) (bad) push scas mov push push (bad) adc (bad) outsb and cltd jb mov xor push cli xor aas cmp test push sub les xor mov add xor rol fnsetpm(287 lods mov es in xchg push adc mov push sub or ja xor enter and push leave mov mov out sub xchg inc (bad) sahf inc out or sub add mov push in mov popl fiaddl insl xor and adc jmp jbe jl xor push jmp cld lcall mov lret rcrb xor test mulb mov add push add inc pop aam fwait sbb dec mov inc (bad) cmp mov sbb fwait push sub (bad) insb add inc fadds je cmp int3 and add mov pop pop scas push pop ja push lods and (bad) mov (bad) je cli gs das cld movsb mov pop std and ffreep cwtl pop ljmp test cmp xor gs jle inc les jl pop sti adc rorb sar or cmp loop out daa int lock shr aad mov dec sbb stos jno in ret sub subl push das jbe call xchg adc (bad) mov rcrb pop cmp ret mov fs aam dec jle add dec dec or fbld jne iret notb inc push push popa in mov daa xchg loop lds mov lret addr16 cmp adc xor testl ret stc mov (bad) inc or xchg lea jnp (bad) push arpl jmp lods mov fiaddl sub xor lea icebp push inc idivl nop fisttpll into loopne and gs mov add aad xchg das mov dec xchg add (bad) push ds cli fdivr xchg (bad) push cmp pushf and cmpsb clc or out in scas call jno repz in adc popf aaa call mov jecxz cmp popa push or call loop jecxz lret scas out (bad) sbb or js aad push (bad) leave cmc inc je mov mov xlat xlat sub jo xor in mov push add flds mov (bad) mov lahf lahf xchg cltd std pop cmp sbb push lods popf (bad) sbb mov lods scas pop in jg inc call test cmp dec adc and outsb adc dec cmc or pop and mov in xor nop fldcw pop loope (bad) aaa sbb mov dec pop iret test cmp inc testl fisttp add pop inc sub pop mov inc jnp sbb cltd mov jle mov pop aad int out add xchg leave in loopne test mull mov out cmp xchg cmpsb in mov pop hlt sahf (bad) repz inc jb sub lahf rcrl (bad) out outsb shrb ret sbb js (bad) xor (bad) push (bad) mov (bad) imul mov push shrl (bad) jp,pn sbb adc dec push ds test lret call dec imul hlt out dec jns dec in sub jl jecxz popa shrb add jge mov dec stc mov in jo loopne mov gs sbbl out mov push push pop stos lds jecxz daa movsl rclb cmc sbb jb (bad) (bad) mov push out add xchg push arpl nop push cmp jns mov xor jbe fadd push fnop clc jns pop movsb and mov mov xchg (bad) dec add test loope add aam cmc imul ja inc stos xor (bad) ret fidivrl cmp sub in aam mov clc push sub push aas mov mov orb sbb mov push push scas inc xor mov out rclb (bad) or aam jnp or ds sbb paddsw xchg pop mov xor pop popa test jmp fbstp sbbb pop and outsb jl inc ficomp in aad pop push in fcomps dec jb sti (bad) outsl mov out out lret fidiv sub cli ret xchg mov js into jne mov mov movsl mull mov icebp cmp push outsl and inc mov in lea ret sub (bad) add xchg cmp in inc dec scas adc shll xor pop adc pop mov sarb mov mov or ja and dec imul sar mov inc xor mov in psubb add jmp imul or inc lret dec sub decb ds push fild push ret movsl cmp (bad) mov sub iret sub pop lods sub jp cmc hlt xchg lods and push aaa out fnsave outsb pusha xchg mov push add out cmp lret or imul jp xchg sub dec test jne dec push movsb (bad) call xchg mov les ljmp and push daa sub jg (bad) aad nop/reserved es mov addb loope stc jb sbb std roll xchg call cmp jmp popf ret lea fadds repnz add xchg clc les sbb imul mov mov dec sub out mov xor adc ss mov leave dec or js fmulp fdivrs xchg push push rcrl pushf mov cmp push ret jl leave lock mov jp jmp mov cmp xchg mov sub jnp cs fs cmc stos test imull pavgw xchg mov ja inc cs stc addl jae jmp mov xchg les jmp and jmp mov add in dec jns lret or (bad) xor stc adc es sub push sub pusha mov fmuls (bad) jmp pop pop push (bad) sub ljmp and mov sar repnz ret fcoml es pop and adc fildll xor ds sbb outsb mov pop lcall (bad) fidivrl inc mov stc xlat bound in mov pop or or fwait pop loopne inc mov mov int3 in xor inc movl paddb adc lds aad scas pushf xor add sub add fmul xchg in mov sub mov mov dec sbb mov xchg mov jno fadds lods inc jno and stos cmp add test sub data16 je push push lea cmpsl pushf cmp dec push scas adc add xchg iret mov daa sbb mov dec (bad) or aam mov or pop and gs daa adc sbb fdivr push add shr hlt rolb adc aad mov and cs jns stos xor into int3 movsb hlt push mov and jg movsb jp jl mov jmp push mov adc lret (bad) or ljmp dec gs push mov inc lcall into mov sub ds ss push jg push (bad) pop movl imul in shlb inc lock pop mov xlat test adc fiadd lds mov sar mov mov cld fs icebp add inc pop in add lea sub sti push mov loope ss scas cmp add ror aam mov xor jp aad sub add jne sahf inc push inc mov mov cmp enter scas cmc mov je sbb jge sbb shlb aaa shlb test pop scas js sub scas loop push roll jecxz sahf push mov pop stc gs mov (bad) xor mov mov mov je jg xchg insl mov aad into pop sbb in lcall shrb das push fdivrs sbb and push loopne add (bad) fcoms sbb aas loop mov inc ret jnp fs or mov add dec push ss lds sbb and pop xchg xlat test popa push and stos rcll clc lock (bad) lds in leave push dec mov fnstenv les push repnz mov je leave fst stos add cmp mov xchg sahf sub sbb imulb mov fisttpll mov dec push jae pop adc std fistp mov test cmpsl popa hlt (bad) (bad) jle out dec stc mov adc repnz pop ret scas cli mov cmp dec or shlb pop push decl cmpsb int3 xchg pop and in push out les dec fwait fwait xchg adc popa je dec xor jmp mov lods cmpl pop mov lods out or adc fs scas subb mov sbb scas xchg sarb xchg mov cmp dec ja xchg dec rorb add dec or pop (bad) xchg fprem iret sbb gs ja rol lods push xchg das and imul stos lock cmp cmpsb inc adc inc push es scas (bad) mov push scas dec push jae rorl xchg fldenv sub popf out sbb sbb mov imul cmp cmp dec dec js das or pusha fnstcw fnop mov mov jmp aad or mov imul mov pop and out out addr16 rcrb inc popa fbstp movsl xlat loopne and dec push sti pop pop dec popf ret out dec mov pop mov mov data16 adc or sti push movsl mov or repnz in fldt inc adc adc add adc rcr xor out and push stos pop xchg push sbb ret out rcl or pop sub mov scas aam outsb sahf or push add and cmp and pop and inc pop jp mov fwait xor push stos mov fucomi in std mov push (bad) mov xchg push fldl2e mov (bad) (bad) push outsb mov cwtl and add out and loopne popa ret out mul ljmp push data16 inc fisttpll loopne nop (bad) push jp aad fidiv inc jns add inc loopne call adc iret in mov addr16 ja push in je in mov dec aad call lcall insl icebp ds and insb outsb icebp sarb dec fistp xor cmp cmpsl xchg xchg and dec adc iret mov popa inc mov stos mov leave repz cwtl pop hlt pop inc xor outsb and pop arpl jno rcl mov dec popf (bad) movsb mov push dec lcall inc mov lret jg mov pusha xchg mov push fildl lods adc fwait fs jmp sbb or and mov daa mov dec ja push xor test xchg adc mov push and aad ds or mov icebp pop pop mov loope or or push icebp add mull je dec xchg dec pop pop imul inc add add rol fsubrl xor ret inc ret sub xchg mov loope sub push adc xor cmp mov cmpl xchg jecxz aad lods in in clc dec mov fisubl sbb push xchg inc push and movsl sub divl jns (bad) jbe sbb (bad) (bad) mov loopne testb cmp adc (bad) clc dec push rorl out imul cmp push and in cmp cmp sbb pop adc stos xor jns je lods loopne dec jo mov fwait sub jp and inc xlat xor xchg and mov scas scas sub pop push push mov mov stos aad loope sbb xchg outsb jns dec je adc test adc and cmp mov test out out pusha mov sub cmp xchg inc test and cmp and fildll xchg subl pop pop mov pop xchg sbb les scas xor pop out push mov jecxz xchg adc outsl pop push jne adc pop jmp pop addr16 lea mov adc and push or lahf jecxz iret lock stos (bad) mov adc dec shrb mov fs xchg ljmp out enter inc aam or pop movb fs stc ja pop sbb xchg popf hlt jb cmp pop xor mov into and (bad) xchg mov mov mov push xchg mov loop push sbb sbb movsb sbb adc test xchg and push and aad mov xchg jbe mov mov cmpsb adc ror hlt xchg pop jo pop jle mov cmp mov js call xchg xchg dec cmp pop mov (bad) fldt insl cmp comiss xor scas rclb les mov sub call adc clc loope popf push pop sub push lock pop addr16 movsl bound aas icebp fdivrs cwtl lea jp,pt ret pop sbb into fsubl test xlat and sti inc mov test lcall mov jno and or shll mov outsl sub fimul imul sbb shr mov aam dec inc mov xchg jne and nop inc xlat push inc scas mov js sti cmp inc stos inc cmp cmp sub (bad) inc fdivrl in stos mov ret sub mov fucomip jbe mov jbe scas (bad) lret push and in in push sbb loope xor sbb inc out mov sti insb or das cmp xchg and dec iret or push sub push fsubrp fisubrl add adc cltd icebp push jno fs inc shr fstl xchg push (bad) mov mov aam inc jbe jo push or push cmpsl iret nop cltd push add xchg fwait cmp arpl lds adc js jge cmpsb mov cmp xchg jp lea and mov mov push rcll sahf in xor mov enter addb cmp imul mov sub lcall sub mov cmc in and or sub adc sub xchg jae mov outsb mov dec rolb inc stos mov or test mov add cmp (bad) ds pop ret in push clc js das ret push movb push es add cwtl and xor arpl mov dec jg (bad) pop rcl pop into cs enter outsl jmp lret adc fwait jae mov rcr xchg in mov pop push fs mov mov movsl or push xlat in icebp push movsl push pop or push mov sbb add imul push mov xchg imulb xor jp or (bad) pop jb (bad) jg xchg cmpsl mov cli sub mov cmp mov or cmpsb xchg cmc jmp test mov shrb fdivl or ret (bad) lret cmp jmp je add mov frstor shr lcall aaa pop pop test popa pop stc xor js inc push adc mov (bad) xor fmul rcpps sbb xor cs cmpsl sbbb jle loopne pushf je lret aas jmp mov sbb xor mov fimull xor sub fwait pop pop lds andl add ret mov xchg inc lock and jo fsubr movsl dec pop ss jg seta or mov imul mov dec jle xchg ja ds jns sti jbe in testb cmp push sti adc cld push push jecxz add repnz add (bad) mov into push jae nop sbb xchg aaa mov fwait sub sahf pop stos (bad) fiadd jp inc mov pusha js mov xchg lahf lods inc loope dec push jb add sub lods fcmovbe pop dec push cwtl mulb pop xchg inc mov push (bad) test pusha icebp shlb push sub test inc popf jecxz fadds sbb jno dec (bad) dec add data16 fstps jecxz clc pop (bad) pop xchg cld sub push sbb (bad) jae mov pop pop jmp xchg mov cs (bad) mov icebp adc arpl (bad) sub push xor loope,pt lret pop test (bad) mov rcl fiadd cmp or xchg and xor xchg dec jmp pop push std mov xor hlt jnp jne pop pop cli dec dec inc (bad) dec pop xchg (bad) jne js adc stc mov in inc dec test mov dec jb sub and or cmp inc add cmp ret (bad) lock int3 xchg in xor pop mov movsb jae out fldl aas push lods stos mov mov lahf notb cmp les xchg sbb pop lret fs mov imul lret pop pop test jno scas mov rorb pushl call movsl sub es and dec ja daa sarb stos jle push xchg push push sbb dec js xchg mov dec jne jle xchg cmp push sbbb pop movsb sub es sub adc push add add cltd push xor and mov cmpsl arpl mov add mov orl and (bad) (bad) xor ret add int3 ror mov (bad) mov (bad) ja jne into jb dec fwait mov push insl sbb pop sub popf cli in and push dec lahf cmpsb adc stos daa or add call sub cs lods push stc rcrl fidivr pop or inc rol fwait jge fldl or xor subl ror push push xor sti dec pop call push aad imul into mov pop scas pop scas imul push pop inc (bad) lea enter fistpl dec out push call das aaa lods dec aad daa dec pop mov mov push aaa cmp stc (bad) imul std push mov pop mov mov xchg adc adc mov stc (bad) push (bad) icebp ja sbb mov adc sub nop xchg enter sbb pop pop shlb ret or jae and push pop dec mov rcrl pop test mov popf decl push loop cmp ja pushf inc cmp fnop sbb cmp push pop xor in fiaddl mov (bad) xor push cmp sti adc or rolb xchg adc pusha sahf push xor scas fldcw insl popa das adc push test cmc push mov xor dec pop ja sbb and mov inc inc dec pusha xchg cmpsb test push in cmp cmpsl sub aad cli cmpsb xchg icebp or mov out dec and sahf mov aam jns addl xlat add or out pushf lds cmp sub mov adc adc les (bad) bound cmp sbb push push dec (bad) dec sub xor sahf mov movsl fldcw sbb jb pop and add sub stos add push pop dec add (bad) ja jg loope inc inc cmp das loopne jle je xchg xor scas push (bad) jecxz repz mov jmp inc out test xor stos outsb mov cmp mov es jnp pop push test or arpl btc adc jecxz les xor sub sbb mov cmp (bad) stos lea cmp stos adc jle or pop ror daa add push ss push orl adc mov (bad) mov lods insl or xor gs pop jecxz sahf subl imul pop inc push jmp fxch sbb pop add ficom pop ja iret stos xchg imull adc imul (bad) test jno in ljmp pop jg inc jo pop sti xchg imul sbb sbb test adc cmp rolb xchg or push push jg in cmpsb lods sbbl out add mov ja push test xor sti or fimul outsb add out aam xchg roll fs (bad) jae jge mov adc dec adc mov dec repz pop jns sbbl add aas mov (bad) mov mov xlat (bad) cld aas add ss add pop in mull (bad) xor jge pop push mov pop movsb xchg in sub mov or and pushf and lret lods loope std and js outsb subl inc adc cmp mov cmp lods push dec adc rcl mov in lret movsb lret add mov popa xchg jecxz mov jle stc (bad) cmp mov scas int3 movsb xchg and cmpsb fcos mov mov mov stos arpl pusha in popa cld lock adc sbb mov sbb jno out jno movl movsl push pop mov outsl inc je popf mov imul in mov jb daa mov pusha imul pop lcall cmc jge ss pop stc pop aas adc ret jne add mov clc cmpsb sbb mov das push mov cli idivb xor sbb add lret outsl stos jo push scas repnz and scas dec mov imul xchg inc add mov and les jnp repnz mov in sbb jnp aaa dec add movsl adc inc fwait (bad) aam xchg push lcall dec dec mov jb xor ds out in rolb out add cld or and fldl rcrb fnsave and xchg mov add jo das cmp addr16 out jbe iret fiadd cmc pop mov lcall inc or mov fdivs sub stos fucomi lret lcall loop rcrb rcll call into dec lea mov lcall and sub aad aaa mov mov rcr add sarb xor insb sub (bad) adc les pusha cmp dec loope or shrl ficompl lods fild sbb dec sti int3 pop xchg cmp jg push repz dec gs cli mov add (bad) lcall xor adc (bad) cmpsb gs cwtl aam scas sbb mov sarb lret push mov sub jb mov in pusha loopne out xchg sbb mov sbb sar sub call out push cld ja pop lea sti dec (bad) pushf fiaddl dec ja add or push cmp xor or sbb mov mov pop jge dec test cltd xor jmp mov stc mov push dec sub (bad) fstps xchg in pop out xchg ret or imul leave out repz movsl mov xchg dec jo lock mov into lds mov mov sub cmp mov xor dec jb lahf imul cmp inc rep cs mov or (bad) (bad) or pop xchg aam mov lock in lds fist push push lar rol xor fistpll arpl scas add fldcw dec iret add push or pop pop push sub pop sub popf push js ljmp mov mov adc lods xor mov insb (bad) arpl xor cmovbe inc jecxz out adc xor jae test push (bad) sarl sbb add mov push ljmp mov xchg sub test cmpsb sub popf mov int3 add enter out lea movsb push inc scas lahf nop lcall inc bound gs add push push and decl pop std add push pop or push sub and stos or fistl ljmp test and and lcall push push push daa insl add mov jnp icebp mov cmp mov out jmp dec mov hlt aaa push jecxz daa mov out xchg stos adc add icebp fidivrl call hlt aad (bad) mov loopne mov jno nop mov push daa xlat stc mov dec push gs pushf mov fcoml (bad) and mov in mov js stc fld stc sarl fidivrl mov fsub stos mov mov sbb xchg pop cmp xor pop jae cmpsl dec lea cld (bad) mov push xchg cld stos mov add ret ret aas out loope jbe and fldt jp add mul hlt or gs and and scas sub lea and sub xchg xchg outsb push dec addl rcl aam push jbe,pt xchg in pop pop mov in dec push iret lret pop test jmp sub mov jecxz jecxz out inc dec push aaa and jl cmc adc stos int3 enter aam mov fnsave lret or (bad) repnz add mov xchg fistpll ficoml mov cmp xchg and ja pop dec fldl2e mov loopne imul cmpsb mov movsb imul nop int adc push ret mov or mov (bad) rcrb loop jl lods sbb cmp ljmp mov sbb popa dec pushf mov pop mov sbb push mov js shl mov cmp mov adc sbb dec (bad) bound dec iret add fcmovnb cmp gs dec (bad) out pushf jno or pusha ret sbb adc cmp mov inc test inc call fistp notl dec xor mov xor ficomp mov lret ror out jbe jle mov xchg mov xor std sub pusha push imul push in (bad) les pop in test test cmp push xor sbb pop sbb jb mov dec pusha pop sbb imull in mov loopne cmp lea xchg xchg (bad) aaa dec push (bad) xlat xchg inc inc cltd push push xchg outsb loope pop sub pop jmp dec pop leave cmp bound cli fistp jnp idivb mov lahf imul cmpsl js sub xchg stos cmpsl mov out lods push mov pop insl xchg push mov cwtl dec push push or in xchg mov inc testb in lahf (bad) fmuls rcll jmp cmpsb jns loope cmp sbb cmp adc sub adc (bad) fs mull sbb adc adc jecxz int3 push xor js sbb ffreep xchg mov mov dec je loop addr16 inc jge mov loopne bnd or sub sbb cs movl loope test mov into mov in rcr jnp adc ret fildll int mov (bad) and jne,pt inc dec and jns push ret subb push or lock pop addb sub jne popa ret pop pop mov sbb in (bad) (bad) sub mov cmp jno inc into ss cmc mov mov and or popa ret jae and clc decl xchg imul hlt or int3 stos jp je mov push or and xchg sbb and xchg and dec inc xchg jae push jno sub push sbb scas xchg push push dec mov mov fsts or fnstenv jge mov sahf (bad) mov fwait mov clc outsl pop add ljmp inc adc ljmp repnz mov xor out out (bad) mov imul clc (bad) xchg push xchg pop call push fcompl rolb in repnz and add adc mov arpl bound les ds push ja jbe cs idivl jbe out lcall cmpsl dec mov nop or sub mov adc add cmovg (bad) cmp adc mov pop inc enter hlt cmc (bad) lret dec scas mov outsb outsl push and sub xor (bad) fisub bswap jae add push cmp (bad) seto out pop mov push jl mov int3 (bad) daa dec repz mov xchg fbstp subl lea outsl bound popf push jecxz ss pop mov adc mov es push pop lods sub pop ret cmp out sbb push lds outsl loop fadd test fs lret push in out lods xchg pop xchg xchg int mov in push leave inc jbe mov (bad) pop js enter add repnz sub mov pusha adc jns jp jno and aaa jne nop jbe (bad) mov mov and inc stc bound adc push lods sbb fwait lock rol jmp scas mov mov test fwait cld push jge mov pusha cmpl fwait test std leave mov (bad) mov gs mov cwtl xor xchg inc xchg sub out mov xor out sbb mov pop fstps aas outsb dec push xor test mov cli jp clc sbbl dec adc sub xchg lahf push imul xchg inc pop push mov test insl outsl push mov push out inc js out ljmp stos cs push push je (bad) in adc daa icebp jp push gs mov push lahf test xor adc aas pop add xchg imul inc sbb xchg push jbe mov push repnz es subl aam pushf mov icebp cmp mov lret iret rcrb ss cmp iret repz gs pop xlat pop into push xchg mov xchg inc cs adc push add fistl test das sub out call add dec mov and popf cmc push repz cmpsb inc pop mov ficompl cmp leave lret jge cmp lds mov or mov pop jle sub lahf xchg xchg push lds sub sub nop mov and ljmp xlat adc mov movsb inc scas je mov out clc jg (bad) xchg mov lret mov lcall loopne pop dec repz mov add lea outsb adc cmp pop test and and pop icebp inc mov mov xchg addr16 mov xor out (bad) mov sti or lcall mov sbb sahf into cld sbb add pop fisttpll cmp xchg pop cld and and movsb push push push pop and outsb add cmp mov fidivrl out pop cmp (bad) mov int3 push mov cld adc in adc cld xor lret push xchg es sub mov ja xor scas lcall fldcw mov ja adc into adc faddl imulb push and aad mov pusha in je mov pop xchg or sub dec sub or lock jl push pop xor movsb adc pop cld lret xor imul cli xchg sub adc das imul xlat imull pop and scas stc fwait cwtl xor adc lahf rcrl inc andl inc pushf sub push sbb xchg add sti icebp lret mov movsl adc mov addr16 imul mov jge sub mov bound cwtl and out mov movsl insb in bound arpl or rolb daa roll insb and add dec mov and js or push adc scas fisubl adcl cmp mov (bad) int3 inc adc or inc lods add in xchg xchg inc fwait pop or movsb in nop icebp cmp (bad) into sbb ret jecxz or stc mov cmpl call sbb mov cltd or insb pop jnp icebp mov insb lcall inc out fdivrl push pusha js and pop movsb add jnp push adc mov mov fstpt mov clc ljmp andl das sub test jo lret push out jb mov std xor ficom jno (bad) or in mov and dec lock rorb fs movsl xchg mov iret test jge pop cmp movsb add mov (bad) hlt push inc mov mov aas ret aas fadd mov addr16 mov inc pop dec xor dec cmp xchg sub push add imul inc dec aas cmp mov roll loop xor ja aaa es lds pusha cmpsl push enter xchg mov push nop sti and inc dec cmp xchg xchg pop adc xchg int3 sub imul or aas (bad) xor inc lahf push shll (bad) popf mov push dec or test push sub out (bad) repz scas loopne mov lcall lcall lea insb sti sbb lods fimull out test or sbb add (bad) push sti jg ja push in push sbb and lret js push loopne in sub (bad) mov push out mov dec jae jnp dec cmpsl test cld jp icebp pop pop (bad) or in ficoml inc das addr16 dec and nop shlb inc cmp jns jecxz xchg mov in es repnz bound rcrb lock (bad) fstps in frstor or (bad) call or orb lods or lea jns cmp imul xchg and mov imul movsb mov imul repnz pop mov mov je je adc jg test add cld mov loopne sub mov int3 int3 lods or out inc ljmp xchg jmp inc dec jns dec sub push cs movsl (bad) sbb cmpsb sub (bad) test dec stc pop mov out xchg mov push push sbb cmp mov sbb mov push push sbb (bad) inc jge inc jle cmp xchg enter sub popf out xchg (bad) ds jo inc xchg add pxor and pop or in lcall jb ss outsl ja scas adc sub cld roll (bad) outsl insl mov jbe mov shr das jbe or (bad) aas pop pop fcompl fbstp add outsb fcmovnbe mov mov std arpl mov andb pop dec arpl les movq cwtl sub inc es pusha jg and (bad) addl or push loope out (bad) lods lcall or cltd push std push jnp or rcrl sbb rcrb or adc rcr ret sbb sbb jmp fnop (bad) sahf or (bad) pop loopne jne pop inc or mov sbb sub sub jbe inc push sarl rcrb aam adc xchg out jge sub xchg dec stc add cwtl cmpsb outsb jg cmpsl fs fbstp imul and movsb jns jae or mov push or jmp cmp lahf sbb insl sbb (bad) (bad) mov jae imul into pop xchg cli mov jbe repnz xchg sti cli pop fdivrp pop inc neg lret mov (bad) dec lret mov cmp jae js add xor lods js inc cmpsl and and (bad) icebp push or and inc (bad) hlt inc sub pop idiv addr16 fs adc inc insb aas pop mov adc adc jg jb ret out inc push or mov or pop (bad) lods pop cltd mov mov xchg push (bad) xchg push sub jnp outsb arpl andb adc loope sbb sbbl pop add add ss daa xor fs test data16 push jmp sub xor jne push adc cwtl add dec mov into cmc imul sbb cmp xor decb or setp aaa adc xchg push adc icebp and aam jle jne mov dec add push out rorl (bad) insl bound and out lret pop loop movb cmp ret jecxz dec js mov stos mov adc stc jo add paddb pop mov leave inc repz mov mov mov addr16 in jo sbb (bad) adc adc push push pop push (bad) and movsb inc insb sti stos lret int and xchg push aad cmc adc mov aaa movsl iret cwtl dec popa dec cmp idivb or clc stc mov lock cmp adc mov push lods out push cmpsb mov cmp pop fcmove gs inc (bad) out movsb sub daa cmp or ja jg mov pop push cmp negl inc push je das aas add lahf test jle xor sti lret dec xor insb adc lea int jo mov (bad) cli dec xchg fidivl sti pop es out sub cld ja mov jnp mov (bad) xchg xor mov jp xor pop out mov xor ljmp pop ret das in pop dec jno xchg stc (bad) and adc xlat push fsubrs cli sarl data16 ficoml or idivl in call xor insb dec shl jmp cmovge lcall push sub adc insl inc lock or icebp push loopne andb jl cmp pop (bad) xchg mov (bad) sarl push stos sbb xchg lret sbb mov adc std cltd fisttp aaa js insb stos jg mov or je pop stos pop int3 sti bnd inc lock mov or or data16 adc xor jae sbb mov sub add out mov push push pop mull jbe pop int pop out cld sub je lcall out xchg mov push push push lea dec xorb movsl mov lock mov jl xchg (bad) mov cltd fidivr xchg cmpsb ss sbb xor lahf and mov mov popa mov loopne cmc mov inc mov pushf shrb imul and rclb xor test int jo scas (bad) fsubr cld fdiv sub bound test adc ds or movsb pop jne mov (bad) push push imul movsl cmc js sbb ja test mul dec push mov mov in mov dec xchg (bad) daa add push jo,pn leave lret out mov stos pop shlb (bad) mov cmpb out cmp mov mov lret ja pop pusha mov pop sbb loope cli and push insl mov add adc xor daa stc (bad) dec outsl fmul pop scas mov sbb sub mov jns jp jg adc fimul adc icebp mov inc pop outsb jae cmp jo jl push mov xchg or fisttpll xlat sbb aas mov sub adc push addr16 push and mov sub pusha mov ljmp or inc mov ret xchg stc in sub mov scas add nop push into notl ret inc push aas mov dec loope popf fwait leave fdivrs clc adc icebp stc jg lret insl sahf jae dec (bad) insl jge sbb mov mov outsb shrb sahf fadds sti pop pop or and fldcw dec hlt lea mov mov pop fnstsw push xor stc or pop xor dec scas sub lcall pop and mov push pop push stc rcll cwtl addl incl inc xlat mov lcall pop gs test sbb int3 cmc inc ror xchg xor out aaa (bad) aaa xor mov lods jle je cmp mov lock (bad) cmp fcomi fdivrl mov fcompl sub xor push shll sbb cmp shlb sub sbb aad dec cmc xchg sbb aaa mov cli rorl xchg scas ds mov nop aaa add (bad) outsl push hlt jnp in push hlt adc add mov addl xchg imul or mov sbb mov jb mov enter mov out pop test lret shrl or (bad) push loope pop int3 xor ljmp adc sbb dec mov adcb mov push push outsl test jbe dec dec arpl sbb sbb pushf mov call popf mov and in xor repnz sar push call stos aad out push dec sub popa add mov add addl test decl sbb dec dec mov test push mov xchg test ja pushf push sbb addl sahf mov inc push (bad) rorb adc and mov push xor pop into sbbl add push cld xor mov mov enter ss jbe jecxz mov out outsb lret out jno sub mov mov in xchg push rol (bad) in sti fidivl pop ret jle (bad) cmp jl adc stos cmp xchg popa sub adc retw inc dec sbb stos xchg loopne add icebp mov popl hlt inc popa add insl add or push cli js mov lock insl (bad) pop div add fsubs in loope dec fnstenv or (bad) lret inc insb imul jbe shr pusha inc pop jecxz cmp iret xor cltd dec xchg fidivrl stos xor scas xor and xor jne add outsb das cmp xor lock outsl xor xchg out insb cmp ja aad es (bad) fsubl mov sahf or add test and rcrl inc in popa stos hlt sub mov rolb aam mov inc loop cli into cmp setg hlt xor outsb pop pop loopne xchg xor daa fwait out and vcvtsi2ssl pop dec dec sub mov movsl push sbb xor mov daa nop arpl mov jo add aas push mov in or inc adc es lret iret enter pop jl aam popa ja cmpsb shr dec jle in push mov and test clc sub out pusha sbb jo aas idivb cmp sub add bound (bad) jb test mov jb sbb push dec mov xchg cmp mov out xorb and arpl pop and push mov adc pop xchg adc dec cld popa (bad) imul es xchg pop bound data16 pusha cmp mov cmp out daa xchg sti gs xor jnp dec mov (bad) mov pop insb fcmovnb xlat cwtl daa fs ss jecxz or in sub push fist cmc add mov sub (bad) sub mov dec cmpsl sub jp cmp rcrb out (bad) lock enter mov adc inc popa mov xchg pop mov adc (bad) cld or push (bad) pushf cwtl (bad) adc jle mov jmp push popl test pop jo xor dec scas add popf cmpsl mov pop sub mov xchg inc dec xchg lret rol dec aaa aaa mov jmp add mov gs sahf mov leave mov mov lcall cli repnz dec popf xchg stc mov jl out jo and sbb mov inc jl mov iret push and in ja lods adc push sbb pop mov xchg cmpsb clc sub mov sub dec adcl aaa push fisubrl fstl push cmc loope,pt and push sbb (bad) scas data16 xchg adc and gs fistp outsb push xor mov gs or rclb das adc sbb out movsb out jb or call and ss bound jecxz repnz mov iret xchg call (bad) dec inc xor pop adc pop test mov shrd inc in clc adc or push arpl push xchg fwait test lock rorl loop test ficompl jle xlat and vmwrite bound in xchg repnz adc pusha and orl imul inc mov sub inc push js add mov inc insb adc nop arpl xchg fsubrs push mov push lods stos sbb adc inc popa pop lret mov mov or (bad) mov insl lret jae out lret pop addr16 lahf addl lods mov and dec push repnz or dec jecxz xor aad imull xchg add dec jno lods push (bad) xor je wrmsr mov fldl xor dec jle movsb lds (bad) jl imul or push xor xor adc outsl cs je xor outsb mov or in mov dec xlat mov push xchg repz and sti sub mov aaa in pop mov push cmp sub cmp dec in int mov lret cmp imulb ret push or mov jle jle mov pusha sub sub sbb cmp xchg (bad) mov dec in sub mov prefetcht1 and iret mov sbb inc fnstenv into andl test xlat imul mov in (bad) lret pop (bad) flds int3 test xchg fimull adc fstpl dec in int mov lret inc push dec add nop mov inc ret fsubrs sbb adc aas and fwait (bad) out ss push dec lods jecxz leave mov xchg mov fs sahf scas sub lea ret cmp and movsb insl out mov hlt mov or xor inc int adc rcrl sub adc lods push jmp mov mov mov clc mov add scas icebp adc (bad) aad stc add or xchg xchg ljmp sbb (bad) push mov mov add rolb cmpl scas dec adc push sarl popf add adc pop sub jno xchg xor imul rcl jmp insb sub stos cld sbb scas loope pop outsb lcall sbb push xchg lahf clc cmp addr16 lock mov mov mov pop test jns inc out mov jne dec repz mov xchg cli sti cmc mov adc mov cmp pop pop lods rcrb pop dec cli movsl push inc pop stc push or ss sbb in dec dec gs ja in dec dec rorb mov addl xor fisttp fs sbb fwait ret mov lret sbb ja mov ds mov mov xor iret and mov test lret xchg and fimull xchg add shrl cwtl out ss lret mov clc sbb sub inc mov (bad) xchg ret dec scas (bad) mov test fstps add dec insl mov pop jb push add mov insb mov in xchg inc dec xchg jl sbbl stos or fsubl dec daa sbb sbb sti pop adc mov ret lcall cwtl push iret mov test jno aaa std nop push shl fdivr jbe pop movsl repz test (bad) cmc jbe dec mov add and mov or pop test xor sbb js and stos cmc mov int3 push cmp push xchg sarb jae scas lahf adc mov mov sbb repz jg mov or jl push sub dec cmc and mov jle cmp adc xor clc push push or std mov dec imul inc jl imul sti xchg inc or fidiv (bad) push push mov sbb out (bad) je pop leave nop imul or rolb das loope mov in pushf mov mov out int3 (bad) mov push nop jno movsb and dec mov adcl popa (bad) iret (bad) ret jns inc movsb push sub ss pushf cmc mov sub rcrb pop mov rolb and into sahf adc jecxz lea xor adc mov mov cmc scas lods mov push insb in fcmovnu stos cmp mov sti scas fdivr dec jmp hlt loop or sub jb xchg cltd xlat push pop scas push or js xor mov daa and xchg sbb ret jmp push and push add enter lahf dec or add sarb pushf or stos (bad) push std and push cmovb lret sbbl xchg sahf iret iret mov iret pop dec (bad) (bad) dec mov loope pop or mov jnp or xor ficoml mov cmpsl inc mov (bad) mov sub aad into push xor ja inc xor iret adc push pop es xchg jb adcl fisttpll lods pop loope cmc iret xchg fdivp adc cmp xchg pop js jne lods mov jecxz sub sbb or inc in jns jmp fisub fimul in add or stos aaa xchg outsl stos addr16 jae scas jp cli in adc bound nop jb es bound mov decb ret jns shlb scas scas xor mov arpl xor cmp cltd cmpsl dec mov icebp xor addr16 jae (bad) add xor jle push xor (bad) fwait add repnz hlt cmp push jo pop xchg inc int pop cmp clc mov adc popf hlt jl into stc xchg sbb cmp dec scas (bad) repz scas cmp dec incb popa and (bad) hlt xchg or push cmp adc mov cld xchg loope inc stos mov cwtl call pushf lds push fdiv popf sbb mov pusha les xchg push ds pop scas mov mov rcl aam sahf xchg mov test sub inc xchg loope or pop fs jmp mov movb loopne pop push fldl or scas addl sub xchg int ret ja xor dec jmp push cli fs xchg mov mov std xchg js mov sar dec (bad) dec adc lods stos ficomp popa add ret paddb fwait mov lock jle test stos mov mov in dec stc leave jg sbb pop out sub xor outsl cmp adc sbb testb sbb popf leave movsl add dec gs pop icebp outsl shll jo mov mov or or pop push fiaddl xchg jae ficompl sahf imul jle pusha mov sbb push dec fsubrs add adc cmpsl cmpsb outsl sub in push jmp mov sbb mov stos mov xchg adc push dec ja jmp xchg frstor mov jl mov aaa jno inc and sahf js loop jge lcall icebp loope inc cmpsb push pop insl test sub jl dec xchg inc xchg cli notl dec inc pusha out dec mov adc bound out outsb mov out pop sbb (bad) mov aam js mov push add out repz jae int3 push cmpsb cmpsl inc jnp cwtl sbb lds xchg sti inc stos lret mov xor jo dec dec test or mov pushf divl aad or scas cli mov je imul xchg repnz and jb les sub cmp dec loopne jle daa pop test outsl add test aaa mov aad mov ficom rolb jl mov push mull push jae sbb add adc inc (bad) stos sbb jnp rcr lods sarb jl and xor rol dec lcall add or pusha test sub or or pop adc jg pop adc jne lods cmp jg adc cmp rolb shrb xor shr lea jne leave xor add mov push pop adc pop xor xor cmp mov mov xor outsb insl arpl mov scas mov test rclb pop pop clc popf adc insl arpl xor cli ljmp push mov popf nop mov movsl (bad) clc call adc push js mov jp loop cmp sub cmp ds jp xchg insl push pushw cmp add xchg in xor andl and (bad) and (bad) push adc stos iret sbb andl insl sub jmp or clc cmp fldl cmp pop addr16 das cwtl mov xchg dec nop push mov cli adc es pop loopne and das xor je dec in push popa jle pop (bad) jbe call pop mov bound dec jecxz shrb int pop dec scas pop push pop and cmp inc aad test push sub xchg jg mov jmp or jp dec int3 mov xchg scas (bad) ljmp shrl sub ret xchg add pop test xchg cld mov or xor adc loop sbb mov scas jecxz add xchg mov mov jae rorb lcall lret adc pop inc (bad) dec adc lret sti cmpsl mov mov aaa push mov push xor or push xchg ret cmpsl xchg inc push mov cmp push mov fwait out bnd cwtl add in and dec jo pop fbld pop jge pop shlb inc xlat (bad) stos int mov ja cmp movsb mov push and (bad) mov fwait nop jg and (bad) push (bad) in stos imul dec pop sti jb das push out or insl in scas test mov pop sbbl jb ljmp mov les addr16 mov ret mov lock cmp stos push or lcall nop jno sbbb xlat lret cmp push stos cmpsb rol and jno inc ljmp xchg ja push lret in adc std inc outsl sub test add (bad) jns mov xor stos adc ret or mov jge fnstsw outsb add inc mov out movsb or add cld cmp loop std sbb inc push cmp icebp bound adc dec jle cld cs loop stos xor sbb in psubsw fwait in enter and xchg xor insb dec daa dec test repnz adc shrl and mov leave cmpsl dec jbe push xor (bad) lret mov movsb insb mov inc jno (bad) icebp inc inc out ja pop leave jne fstps out cmp cmp push fnsave rcr dec adc xchg dec xchg in mov sub mov fld cmp repz pop cmp pop shl out mov cmp ret or and sub mov outsb pop push pop cmp loope adc push and fistpl push sbb cltd insb out dec inc fxch push std insb xchg mov cmc icebp shl cwtl popa add call or loopne mov dec cwtl sub adcl mov or inc in cmpsl and rcl in inc mov lret test rcll mov mov pop ja arpl sub mov sbb cmp icebp adc sub lds in int mov dec cli jle xchg stc sbb mov jp movsb insb icebp aad daa call mov xor mov xchg mov adc cmpsl mov into outsl pop mov test push in cmp subl sbb sub adc pusha fistpl sahf fsubp pop scas dec jmp leave and mov ja aas int3 xor rclb mov push cli movsb in jge xor mov inc mov jae sbb pop shlb mov push push push pop aam jno imul (bad) pusha lcall stos push adc shr into or iret and cmp jbe sub mov push ja cmc shrl sbb dec sbb imul int ss xor pop cld sbb (bad) icebp dec sbb and imul mov mov dec add arpl adc and in adc jecxz test (bad) fnstenv adcl adc inc mov rolb pop in pop mov jmp pop and dec iret or leave jb sbb mov movsb imul jle jbe add jl xor les lahf pop clc push ljmp pop sub xchg sbb out iret arpl or add mov int3 xor outsl out ja and or dec sbb aas sbb sub out mov test cmp movsb pop sbb int3 push and or mov nop scas mov push xor mov cwtl (bad) cmp dec cmp push pop pop xor jbe mov js sbb mov (bad) jb scas ret out xchg bound xchg lods sub out xchg jp pop push pop ret popf fcoms add cmp icebp (bad) fstl cmp (bad) xor sbbb test lahf dec divb lods dec ja loopne pop sbbl js pop pusha jmp push and test push sahf pushf add sti lock call inc dec pop mov enter push pop aaa out jmp and push pop cmpsl arpl mov xor (bad) xchg (bad) inc fwait xchg push clc pushf fwait or stc cmp mov inc ret adc fbstp popa mov add cmc push lods popa nop inc sbb aam rcrl inc out ss jl mov mov cmpsl pop and jecxz (bad) xlat jns sub sbb out ficom sbb xchg insb insl pop ljmp sti mov xchg push (bad) jb cs ds add or out dec adc jne mov add in mov mov popa pop insl push dec lds movsl xchg call adc fdivs imul test mov cwtl push and jb sub outsl ds xor (bad) mov leave mov dec dec js mov scas xor jo xlat inc test xchg comiss mov sbb inc dec ds mov cmc and aas jl jp mov rcrl out pushf xor adc mov dec idivb idivl mov call out xchg cmp fsubl mov dec push add push xchg pop dec daa cmpsb movsl cli pop xor in push in dec popf mov fdivrs shl dec in pop inc aam jbe add (bad) and cmp cmp jecxz and rolb add push push mov (bad) out ljmp or xor push sub lods (bad) insb push xchg dec mov movsb mov fisubl xor mov sub xor mov xchg fimull mov aam inc lods dec movsb push mov (bad) and repz pop sbb stos mov sbb lcall sub shl aam push stos loopne mov mov (bad) push mov dec adc lret imul rcrl ljmp push or cs call push mov ret test add xor mov jnp push (bad) pop in xor add xchg push aas xchg test and pop pop and cltd orb je out fsubrs sti lock pop or pop xor pop loop jbe jns xchg cmpl pop out xchg loope jmp test sub arpl lea fistl ficoml aad pop inc jns,pt js sub lcall or gs pushf test mov mov push mov popa push jns scas mov dec bound mov xchg out shlb adc lcall popf dec sub add mov adc dec jb hlt (bad) int dec (bad) loop dec fst xchg dec bound xor xchg jo xchg dec fsubl adc rclb xor ret ss jmp (bad) xor movntq aas inc clc lcall or dec xchg mov mov les out push mov mov mov mov adcb push mov push leave sub (bad) xor fadds mov lcall mov rorb jb jge mov pop test fadd std jecxz je mov fcmovnbe in mov movsl xchg into outsb jbe sbb idiv inc jg xor rcrl sub jmp lret int3 subl push pop daa sub add and and fsubl xchg jge in pop dec pop mov pop and jp movsb ss repnz jle add pop xchg dec imul aam and popa and pop bound sbb dec cmp aad lock scas add mov dec cmp add jg lods or adc and mov mov xor call xor dec nop mov push call jl mov pushf pop pop pusha (bad) and in mov (bad) icebp adc lea loop sti cmp lods addr16 (bad) push cmp push test into inc sti sub xlat lds mov or and gs push xlat es sub clc sahf adc stc fwait pop pop mov xchg sbb jl (bad) test call cwtl fwait (bad) push loope iret push es test sarb cmp or ret in adc cmc iret xchg lahf ljmp aad cmp (bad) jg int lea inc cmpsl add imul pop subl inc mov (bad) mov push jecxz (bad) clc enter test adcb out arpl jb inc insb push shll jle adc cld aam add cmp cmc lahf adc sub adc fbld cltd fs into jmp lret pusha dec mov push and aam jbe push push lret imul (bad) xchg mov pop cli inc inc push aad and rorl mov pop and add out imul lods mov dec dec push lods cmp lahf inc mov jne adc xchg repz int3 movsl inc mov mov xlat add lods jmp test sbb test imul or pushf mov stos mov outsb cmp jle inc data16 adc jbe icebp out push std ljmp dec mov mov jg es and sub bound imul mov in jecxz adc mov push mov cld faddp or shl and inc dec mov jp outsb outsb push and dec pusha rorl nop inc inc push stc and jae repnz lea jmp mov adc mov sti bound or int3 lea ja pop lock inc out sbb or daa push cltd mov mov into out inc or mov mov mov jg js and cmp mov adc out (bad) in cmp ljmp mov mov (bad) adc pop mov (bad) xor addr16 fbstp loope add sahf mov mov or pusha addr16 sbb mov dec and adc sbb int loopne sub (bad) aad push cmp ror mov fcoml xchg gs clc dec push xor lods and in or sub loopne jge sub inc sbb cmp and push push dec cli test hlt test ja sahf or repnz add js mov sbb stc fldcw mov sbb cmp out out adc pop dec mov sub adcl fcoms push mov arpl and enter negl xchg jg push rcrl js (bad) adc push dec xchg in les push enter sahf xor test mov and mov lods adc cmc sbb fnop jp push movsl xor shrb jg shrd fs mov push inc dec dec cli pop sub adcl push pushf xchg cmp ss xor je pop jle adc fmull inc xchg mov (bad) adc clc jmp inc push cmp (bad) movsl imul pop inc and cwtl aad dec daa (bad) or rcl int incb (bad) jo insb push stos call inc stos or mov push inc orb pop mov sub jp cld loope in mov adc lock mov bnd out sub clc (bad) aas arpl and in fcmovbe insl mov jmp mov cmp mov xor aaa out inc int sarb (bad) mov adc dec mov adc loopne mov adc (bad) in jmp mov movsb pminsw jp dec adc data16 aad mov dec xor cli lea push pushf xchg sub mov xchg push scas add js das adc fldcw (bad) lret xchg out inc lahf (bad) pop gs dec adc jle push jmp in das cli add aas test (bad) int cmp push push or call lret cld aam and decl pop js ds loopne movsb fidivr dec cld pop push or leave add mov mov and shr inc lcall scas xor push jne shrl clc push (bad) faddl cmp pop or test incb jo xchg add or inc jp movsb or aam and or fimul iret jmp mov xor and mov loope add inc push movsl rorb scas mov mov aaa mov pop leave add push mov fidivl movsl dec adc dec je jecxz and mov cmpsb rcrl in mov aad xchg and jb sbb loop cli ror mov mov sahf mov jo repz mov dec lods sbb xor insb scas out cmc mov cli fsubrl jg xor push push mov jns stos fcompl repnz lock xchg or or aad cmp imul lods mov daa pop fsubs loopne lret add in cmp pop cmc bound in rcr (bad) es data16 lock inc in xchg scas xor in mov sub cld aaa sbb lahf jp adc xor hlt push sbb nop iret sbb dec pop adc lahf pop mov cmp or or lahf sbb dec out fstpt adc les sbb shrb sahf scas into pusha jle outsb inc pop push jmp dec test mov push mov add jmp mov cmp jne mov loopne rolb inc mov adc adc shlb dec xchg mov or adc adc sarb insl xchg add inc test and imul xor out pop cmp ds stc (bad) addb mov push sub pop fcmovnu cld jnp push loop jmp dec aaa mov loope xchg inc mov jns and jo shll xor mov (bad) jnp adc movl xor push sar test out aaa stos enter pushf test sahf stos (bad) xlat les mov mov int mov inc rcll loop cmc cmp jae int mov repnz mov pushf icebp xor loope and fnstenv ficompl in xchg cmc mov mov loopne lcall cltd sbb xchg scas loop mov push add sbb pushf (bad) pop lds clc jb iret and insl jecxz out xchg xchg cld test repz sbb stc jno lock mov and test mov pop ds xor xchg rolb imul jns sahf out sarl jno lods jp mov fild add xlat in fstpl sti xor xor add cmc fdivrs call in and iret int xor or sbb mov xchg inc mov lds fs les in mov mov (bad) fistpll test flds fdivl sub iret test jp push subl in rolb sbb mov aad es xor outsb or sub out pushf lret (bad) popa push cmc or (bad) stc mov push (bad) ljmp or fnstenv mov in test jg mov add cld mov jae lcall sub jns xchg push pop repnz pop cltd insl jno dec mov mov sahf inc out (bad) or mov pop clc lods sub shrl call jbe leave ret out push jne cmpsl inc ss pop sbb add adc xor jo lahf iret ljmp inc dec test les lret pop and sub jge cmp orb pop push (bad) dec mov ds dec lcall mov pop stos add je stc jo xchg stos (bad) mov out mov dec flds fcomps fmull pop imul repz mov clc cmpsl and mov push mov push sahf lds sub ret or dec dec shlb js mov inc rcrl push sub pop xor inc pop or loop jb bound cld jnp pop sub and jle mov push mov pop das jbe or or in fldpi push loope cmp test fnstsw add pop sub jge divb pop enter jp mov xchg cmp movsb daa or dec mov mov mov in adcl imul xchg inc adc jae cmc xchg mov add leave lea add fisttpl or pop ret dec cld push jg cmc gs out pop rep scas lods or mov push nop sub inc pusha icebp sbb mov mov daa addr16 in mov sbb sti (bad) mov sbb push pop cs dec ds mov jns inc cmp lret or cmpsb adc aad cli loop mov push and mov push std xor xor or fsubl cwtl push in pop mov mov (bad) mov jmp std jecxz call daa cltd sbb bound jp rcrl mov mov adc rcr aaa out aaa js pop jg data16 (bad) pop add and mov fild lcall aas pushw push imul mov repz mov xchg xchg cs cmpsl mov insl das inc xchg ret jae fwait pop or out movsl sbb xor sbbl inc fcomp cmp mov lahf out and daa (bad) mov mov dec into aad loope ja mov sub sub ds pop xor xchg rcrl out iret fbld sub mov enter dec (bad) (bad) fistpl add mul aaa popf cwtl add xor mov lds mov out sbb flds ret mov inc push stc out jnp mov (bad) ss and es or dec add and sbb push jge (bad) in push rorb cmp and cld daa aas jle in aam out mov dec mov repnz lret sarb bnd dec lea xchg cmp out mov pushf jg sub mov dec mov lock cmpsl ret and push or or jle sub hlt or inc scas push jne add nop daa ret js jo vpackuswb sub cs mov pushf stc adc les into or and pushf test xchg shrd iret add inc dec bound int imul or repz add shll xor das test ret push or stc or and cmp inc mov arpl mov push mov pop add or mov out push add das mov sbb lret loopne cmp ds sbb daa fmul insb fldcw inc pop outsl push les xlat pushf dec xor or outsb ret pop push xchg fucomi push pop jbe xchg xchg pushf pop cmc movsb sub icebp clc ss lock xor aaa mov or xor xor cmpsb stc (bad) cli sbb mov cmp cmp fimull sbb mov pop stc (bad) mov shr inc hlt sbb mov xchg and movsw xchg push imul subl xchg jecxz clc and lods int3 push into adc xchg push push and xorl call hlt outsl pop push fld jo daa movsl mov sbb ds sbb movsl pop mov fstpt jl mov sbb lods int3 mov lret jo bound cmp xchg popf or mov fild mov xor out dec push inc xorl pop mov inc or or ja mov fcoml pop lret adc dec or fldl loop jp iret xchg inc and mov or pop clc push xorl mov xor shlb inc inc pop repz jo test int outsl lea popa (bad) xor scas ret mov push fwait nop mov add mov imulb mov test fucomip movsb pop sub mov jo add subb popa mov cmp aaa add dec lahf (bad) mov jl out scas fst jne lods nop icebp inc mov test (bad) subl je sahf jecxz push in outsb ds or in add lock and (bad) cmp stos addr16 sbb mov mov add jl arpl aaa sbb xor pop mov lret inc cwtl mov dec sbb jo das out in mov movsl mov inc je outsl cmc fldt popf outsl sbb mov mov push pushaw (bad) sub jle or or push adc in add pop add pushf aaa mov jl popa icebp jl rcr xor cmpsl add rcrl hlt push pop and mov aad mov and jl test lods jb sub pop xchg leave imul movsb xchg pop int test xchg push xlat (bad) jne xor fiaddl ljmp pop shll aam xor mov and inc sahf sub sub pop adc aaa in adc jl sub mov push je insb pop push in or push (bad) cltd (bad) movsl jae std imul fistp (bad) jb ljmp das pop cmpsl mov pushf inc cld add scas repnz dec (bad) or out cwtl xchg insl cmp lret add push (bad) pop repnz jmp sbb xlat sub sub jbe ret and mov stos stos loopne pop call test add movb xor lcall in fwait push mov mov (bad) fs ds mov int3 cmpb pop imul fwait dec lret xor mov aas xor mov je dec or popf test xchg js int arpl je (bad) jle fldl (bad) sbb ds enter cwtl rolb or pop imul in orb push mov aas inc fadds cli adc jg and rcll inc pushl das add icebp lret xchg popf inc and imul (bad) (bad) outsb or mov adc push aas clc cmp and je xor aad inc pop adc xchg mov sti lods add out adc into loop xchg js mov pop and outsl addr16 mov add cmpsb or pop fsubrl pop hlt sar cmpsl sub mov xchg jo and pop mov pop pop jl in jmp jecxz and add jns mov xchg mov and int pop mov fmull lcall mov je adc push ror cltd loope aam push xchg jo (bad) pop loope inc cs and icebp loop nopl adc jo add jbe adc cli (bad) ret mov mov and adc add jns xor daa shrb or gs adc mov cmpsl addr16 pop jp out cmp cmp xorl mov pop jge mov sub and jns rcl jb pop shll mov test bound adc ja insb movaps pop (bad) bts (bad) cli xorb mov jge divb or addr16 cmp pop pushl push push and pushf cmp xchg cmp cmp jae fs imul xchg ret (bad) push sbb es call (bad) sbb out dec mov (bad) out xchg jae (bad) xor dec insl mov mov jne xor add mov in xchg jae sbb mull mov or pop jb int data16 add jo add mov jne inc xchg movsb testb jo clc idiv stc das add in fmuls imul into daa xchg sub jmp add int inc push adc bound jl mov clc or call lret in or jmp mul (bad) cwtl rcll or sub imul adc and repz push sbb iret cltd cltd iret xchg icebp out xchg das fild sbbb or xchg lock inc sarl stos xor sbbl scas outsb cmp mov es repz jae outsl icebp pop mov adc js dec mov pop shll jne xchg sub push or or out daa dec call fdivrs les push outsl dec pop lea sub aam ret out fistp cli adc sbb rcll xchg scas movl jo ret xchg or inc cmpsb es cmp mov pop mov fmull adc mov (bad) loopne mov mov mov in dec pop mov lret or mov mov jg xchg or loopne xchg cld dec dec les call repnz add inc lahf sub aam jae fldenv mov icebp inc xor jo lock add (bad) loop cli sbb jne cmp xor fnsave add leave outsl gs or xor mov dec mov xchg out mov jp pop mov (bad) jo jl cmc aam mov nop push ret sbb lahf cmp ret int3 lret push fisubr shr xchg add aaa enter test dec sub dec lds arpl ret pop sub cli std and pop mov xchg or cmp jb into flds sub ss pop arpl xor mov hlt mov mov push push sub pushf ds hlt and mov mov bound das fisttpll and mov loopne std pop mov dec nop inc pop outsb fadds int3 jp rorl lcall aad sbb xchg push mov cltd lret and jb or or pop dec ret xor clc (bad) dec add cmp lahf fdivl js rorl xchg jg or psubusw frstor popa push xor ficoml and mov loopne adc mov cld or jl mov bound dec jbe and imul dec mov mov out mov outsb cltd mov mov idivb pop sbb imul cli jecxz js stos daa orl dec rcrb ret cli adc push xchg xor mov je fcompl mov inc jns adc outsb pop bound mov jne out sbb dec sbb ja mov xchg sub push stos pop pop cmp pop rcrl push adc cmp mov ret cmp sbbl imul sar dec and sub or mov jg push (bad) xchg cli adc xlat xchg cmp mov and push push lea stos jl das jae cli les data16 mov push xchg jp sbb fdivrs add pop adc mov inc stos andl cld loopne fsubrl add ret mov out (bad) mov test adc xor ljmp mov ret call cmp loop pop push scas xchg (bad) adc cmp jmp nop int3 movsb mov in mov loope pop jp jmp sbb test jne sbb inc ds pop mov push dec jmp dec jmp mov js inc sbb iret inc addl mov jne mov sbb in pop in xchg bound outsb mov add js adc cmp insl loop and enter xchg test addr16 bound jno stos pop add loop xor test cmc test inc aam lds mov add add fs xchg les adc add shll lcall idivb outsb fwait dec or stc add fisubr imul lcall out mov sub jns push mov pop test ficompl inc pop pop jmp sub add hlt std dec pop cld lds enter std shlb mov call or pop fcoml cmp push fsubrl sub cmpsl imul jmp test inc jp arpl mov shr lret xor call and cli repz daa cmpsb mov iret pcmpeqd mov inc cmpsb sbb movsl fimul das jmp xor in push cli fsubrl mov (bad) clc jo ss jge movsb pop jae and sbb mov mov pop mov pop ret out xor jns mov mov pop js rorb sub jge fisttpll jb cltd pop pop icebp imul mov jnp dec mov popa int dec push jmp or adc (bad) cmpsb leave test mov das inc (bad) xor stos or mov add xorl cltd jge repz add sti mov ds sub in mov rclb aaa sub push push push push cmpsb jge dec xchg xlat add cs sar loopne mov cltd sbb mov aaa and sbb js ds (bad) xor clc inc cmp and loop fs ret daa out and jle add cmp repz cmp mov sub xor das leave fldl aaa mov rorl and shld cmpsb lcall ljmp jne jmp mov cmp sahf xchg jns mov push and mov fiadd out (bad) loop int3 lahf cmpsb cmp push inc incl and and push push cmc lea mov ljmp out push repnz xchg inc std cltd ja js ds add in ja sbb xlat pop lcall ja lds dec into xchg scas scas jb jo hlt inc nop mov push in xchg mov cltd inc lock add cs mov jl sti sahf popf xlat add test gs jnp xchg cli push or xor mov movsl mov mov leave in push jge inc and sbb inc pop cld pusha or cmp notl cltd or lret cld pop mov clc lock dec imulb jge and sarl push xchg int3 xchg arpl (bad) cld aad jg jo pop out xchg cmp ja popl cmp int3 dec repz test dec or fist xor sub inc jmp cmpsb push and mov xorl adc out pop mov lds fbld xor sbb cmpsl jecxz into aaa mov ss loope jecxz pop inc (bad) stos or push sbb cwtl jns mov jl sub push leave xchg xchg dec mov adc mov push out xchg xor push sbb sarl inc dec jp iret adc xchg stos and cmp ja push dec push lock iret adc jge fdivrl test inc pause dec cmp pop pushf adc push aam (bad) xor (bad) dec and nop add dec in lahf or fisubr fldpi sub nop push dec jno jne jecxz inc popa pop clc pop loopne vcvtsi2ssl push adc arpl ficoml fs int3 inc xchg out enter push dec inc (bad) fsubp pop outsb sbb leave in jno cmpsl xor cld in test mov push jp stos mov xor inc (bad) sti pop push call jp imul xorl sub jno and sbb mov repnz sub loope in insb pop inc lds mov push cli inc clc stos lods mov cmpsl cli jo mov pushf add std scas (bad) daa jl and jne cmp ffreep int3 outsl or sbb fistpl jmp in jg test (bad) insl mov xchg mov sub push xchg call std inc inc pop inc sbb popf push jecxz call sub imul xor imul push sub out xor lods addr16 leave and sub jp sub insb jl aam test pop cli test or cmp fstpl fcoms inc leave xchg push and insb sbb cmpsb push outsl pushf outsl fild ss sub shrb in ror pop cmp fiadd in decl nop test aaa push sub das fsubl cwtl mov dec popf xor lahf dec cmpl inc (bad) rol and pop sbb inc stos push je (bad) mov jp (bad) negl shrl and cmc or sbb cmp daa mov xchg cli push mov mov ror imul adc fwait sbb imul xor xor stos fcomp (bad) cmp mov cmp inc xor add pop pop add dec sbb imul dec jbe nop pushf imul stc push push lret int3 pop mov mov jbe scas fmull or test cli fstpl jae push jmp inc xor xchg push mov sbb sbb aaa sbb movsb mov test or push pop sub fdivp insb (bad) mov daa mov out imull in jbe push sahf push call push mov add loop mov into inc xor xor mov push shlb psrad aaa cmp sbb add rorb cmpsb cltd adc mov iret sub jae inc mov and or or mov loope add cwtl scas jbe cld hlt xchg xor jle inc jns sbb in (bad) stc in or shr cmc jnp lock in mov mov or mov cs adc loope cmp outsl fisubrl jns xorb ss and mov lock lea leave mov fcoml xor add or jo loope int out es pop out mov arpl add fimull mov or jecxz sbb int3 xor mov xchg out aas mov jne stos popf lret sbb lods inc ljmp mov dec pushf mov ret push outsl mov pusha jnp push mov cs pop xchg aad lret sbb add mov sahf push call pop ret in rcll cltd cld sbb mov inc (bad) test fistpl xlat (bad) adc bound jl mov jns mov lea jno fldl2e mov inc sub pop daa out mov xor dec or push xor scas lret or inc ljmp sbb mov inc mov mov lods push dec push iret and mov in mov mov je int3 ljmp imul fldpi scas mov mov test out dec jmp xchg nop xchg dec sub iret sbb cs sbb jbe sbb ja dec push jecxz outsb shr lahf ret push mov cmp scas aam clc xchg mov sub sbb cmc or push and mov scas loop lret lds and push or jo iret push mov pop stc mov ret jbe lcall out xchg or (bad) std or mov pop and mov and pushf inc jnp (bad) pushf enter sub fs push sbb popa pop mov popf insb push xchg add ret cmp xchg loop xchg add inc inc or jno adc jg inc daa sub mov cmp clc outsl sub push and mov cmpl ljmp jge popf cmpsb push sbb in addr16 mov push mov ljmp jb movsl sbb or inc out repz inc and cmp outsl push sub dec enter stos or lahf pusha sbb rcrb ds lds sbb (bad) ja mov fdivrl ss pop aam fiadd (bad) pop sti xchg icebp das loop fsubrs pusha sbb in push inc loope push in adc jnp cmp cld rorb xchg sbb jne push jno ja xchg sbb mov fs mov inc adc movsl mov lods jle push lret xchg lcall dec ja jecxz push sub leave cmp inc fs mov lods mov pushf dec icebp add sarl xor (bad) cmp pop xor lock mov mov dec scas es in mov ja lret xor cmc push in and shll adc mov mov adc cmp pop pop mov xchg mov ds sbb outsb cld mov jnp mov cmp jle arpl jo nop lock fisttpll sbb dec fcoms or push rorl mov (bad) aam rol jmp imulb xchg into xchg add adc sub rcr mov sub cmc mov mov scas aam push mov mov movsb enter mov dec sub add mov adcl jp pop enter std pop jecxz std push fwait mov and xlat aad mov lea push or lock push jecxz movsb xor into pop ljmpw xchg sub dec stos xor loop mov xchg fdivl mov daa push outsb adc (bad) out jle pextrw mov or xlat adc add xchg add lahf mov aas lcall pop xor ds aaa js aad xchg cmp sub sub pop lahf std pop (bad) popa push out mov das xchg push jge jg stc dec fiadd aad xor jne push mov popa mov xchg mov cmc icebp and mov jp inc xor inc mov out and cmp or cmpb jmp jnp mov lret movsb jne popa sub cs shrb jo sbb std mov ljmp sti clc lret pop lods movsl mov pusha cmp in mov jg lcall fs and movsb or cmp sub or adc mov mov lret scas ret push lods jg lret add add ja cmpsl xor sahf loope jae mov mov popa (bad) repnz loopne jno dec mov sub cmc xlat iret jne arpl test ja inc push mov push dec push push jp mov jl adc pop push call stos sbb ret inc jns or dec enter mov adc mov or sbb push or jge or dec lcall mov and and sub fmulp movsl jg mov (bad) data16 lcall sub dec and jle mov jae pop dec test adc shrb es dec jbe cmp xchg ret scas loope fist sbb sti out xor sub xor fdivr jmp pop in stc out (bad) mov dec xchg idiv repz cwtl mov fistpl cmp xchg adc cmpsb insb mov cli jl adc aaa hlt push push loop lods loop pop in in out repnz mov push inc mov cmp dec cmp lock inc into mov aas or sbb add jl dec xchg cwtl arpl addr16 push pop jnp inc xor pop xlat pop sti sub pop pop sbb or and loope (bad) ja sti in cmp lods cmp dec cltd inc pop cmp sahf and mov cmpsl and ret xor adc cmp lret xchg sti inc fadds aam sub xchg lret js (bad) in les in subb pop shrl lds leave xchg jbe dec sbb and mov mov mov in dec (bad) data16 addr16 cs arpl pop ret jmp ret cmpsl out lods push mov imul jne pusha xor push wbinvd imul xor in mov sbbb mov and lds cld xchg rclb cwtl out jle add xchg xchg aad ljmp stos test flds or or out movsb lods mov adcl or lret adc into push (bad) aad ficoml adc daa scas and daa xor cmp fist jno sbb ja aas sti sub cmc inc int3 pusha (bad) aas leave add add lcall loopw jns scas cmp enter cmp mov dec sbb mov dec mov jle mov pop sbb adc mov dec push pop call mov inc sbb aaa push mov and std mov sahf push cwtl jmp sbb (bad) out add sbb mov or pop (bad) mov (bad) movb pop mov cmp push lds in mov pop fwait push rcrl mov testl inc cld push pop mov les leave inc mov aaa aam mov roll lea lahf pop icebp cmp jle incb sub in sub lds sub mov (bad) call rcr mov sbb pusha mov loop mov xchg or push pop fs inc xor mov inc and stc push adc enter aad fisub mov mov add popa push pop ljmp sub sti add rolb or xchg xchg cli adc mov xor cmp mov push pop out lods push push and jbe add sahf ja sbb stos stc push mov push imul adc mov and push (bad) or ss push mov inc stos xor pop scas aas sub sub mov gs aaa lds lret movsb leave das jo cld std mov dec mov iret sbb inc hlt sti fwait enter push cmpsl in sbb (bad) mov ret sbb mov (bad) mov enter or mov fwait mov arpl cmp inc mov cmc mov adc outsb mov adc xchg movsl xchg mov nop add cmpsl lods jecxz jb sahf or pop cmpl add mov pop data16 into lods jg inc xchg iret in jae xor inc movd push dec or inc xchg mov mov adc cwtl addr16 popf icebp out sbb fs jb popa mov shlb and mov sarb push xchg jle and dec push ss lret push add mov mov sub xchg cmp fnstsw fdivs mov push or mov add scas dec jae push (bad) jo sub sub sub das out push and pushf sarb out mov mov ds mov rcrl push dec dec jge sub inc sub loopne aas mov popa out in pop imul test lds xchg test push lods fbld dec mov cmp or pusha mov lds push pop or pop ret shl adc jb dec outsl and rcll dec ret out aas mov push pop xchg cmc cs stc push iret lock inc lock cld add mov fnstenv xchg cld mov inc jl pop fisubl xor or xchg jecxz xor inc repz insl setnp add sub xor adc ljmp (bad) mov imul sbb mov (bad) std jg aad push dec or mov jns jg aaa lock dec push ret pop xchg hlt insb dec add push or push jge scas mov add (bad) es dec mov aad push movsb xchg xlat jg inc mov push cmp inc sbb cmpsl call movsb cwtl inc mov or push xor popf mov xor pop mov jge inc xor inc cld cwtl je or lcall xor (bad) js pushf xchg jns cmp shrb adc stc cmp int pop cmpsb mov xchg inc mov pusha fldenv popf xchg ret and scas loopne mov dec jne jns or dec adc jmp push das dec mov push popf std adc (bad) xchg ss push call in jb cmpsl cmp xor mov sbb xor mov add (bad) mov lock adc jb (bad) (bad) pop adcl in xor jge setbe cmp xchg iret je dec aaa mov ljmp xchg cltd jo fstp cmp sbb push fdivrl test lahf lods adc cmc fadds aaa cwtl adc jae pop in push pop sub sbb shr mov push cwtl jmp cmc pop sbb lds fbstp js cmp adc pop mov push xchg arpl inc iret mov or inc jl sbb jae xor out cmp mov jge lods pop mov dec cmp mov inc adc lock xor mov mov jge mov dec insb lahf adc (bad) bound lods xor mov (bad) jae jg sbb sbb dec or out mov fimull pop ja clc inc xchg add rorb aas mov lds imul iret push stos int adc pop sub push mov push into je inc cli fild sbb movsl cmp mov outsb (bad) xchg xor addl pop cmp insb push cltd int push rclb adc cltd cmp rorl (bad) mov dec das jl clc mov std loopne lea mov lods loop hlt cmp xor cs scas mov sub inc add popa sbb int3 test pop pop mulb imul push nop mov jns pop (bad) clc jg movsl (bad) decl dec xor les push (bad) js or push rclb mov xor sbb or xchg cmpsb mov lds mov mov pop lea aas imul cmp xchg xor mov pop cld cmp mov add push cmp jg movsb jbe pop xchg stos mov in (bad) push sbb fisttpl pop int pop mov fs push mov out lods cmpsl add dec push mov stos test testb ret imul icebp push call fisubr xchg fs push out jg cmp and movsb ret rcrl mov sbb mov pop xchg cmp dec fwait (bad) add fsubl jo cmp pop pop jbe test pop mov inc test pop mov sbb test sti ljmp sub mov xor xchg out mov je push mull lahf pop pop (bad) dec cmp sbb xchg add in insl out (bad) adc les xchg xchg cmpb dec jecxz cs shrl jmp jae mov movsl outsb and push imul cmpsl mov sbb shll inc mov dec imull shlb mov sub lods sbb ds mov cmp pusha dec pop negb les pcmpeqd inc push iret cmpsl jne rorb push jecxz ja shrl mov inc mov movsb cli int3 (bad) cs nop rorb imul stos or stc adc mov pop outsl (bad) std iret and adc mov sub sub sub cmp imul mov outsb fcmovbe or (bad) jne imul stc sbb test pop jne outsb rorl in iret sbb js xchg fiadd in dec push or mov mov insb das outsb pop scas je push idiv jp movsl mov (bad) popa add shlb fmul popa and pop xlat pushf je in xchg inc lcall add mov loope (bad) je imul jae movsl adc or xchg push loope mov xor mov pop fist fdivs cmp sbb dec push in and (bad) mov inc imul jecxz in mov mov mov mov or dec push sahf bound lret cmpsb or mov jmp jge and jne aas (bad) les sbb mov sbb mov lret insb dec ljmp icebp cmovl mov (bad) adc aas and mov test cmp (bad) xor cmpsb pop mov dec jbe,pn divb xor cmp ja mov add test shl (bad) mov sahf (bad) imul mov adc push push sbb mov leave sub scas mov jg nop xor mov lahf int push sti outsl push jge icebp cmp lahf add stos test jge repnz in and sahf outsb mov stos fiaddl fidiv mov in hlt xlat sub in iret xchg mov cmp pop and mov push aaa xchg push stos push fsubrs push jmp ljmp jg xor xor push ds pop outsl (bad) into push lods add pop add ds fistp xchg ud2 js jne push repnz inc pushf pop movsl in mov and dec insb out hlt movsl es xchg insb mov lods mov insl sub adc xor xchg sbb imul adc sub xor rol lea jge outsb out jne (bad) cmpsb pop push add jmp jo inc or imul pushf rorb aaa bound test push xor xchg push mov leave (bad) lods ss cld and orb vmovdqa or enter pop push cltd dec sub sub inc insb call scas pop cmp pop out push hlt js xor outsl push push cmp mov adc lea mov hlt (bad) stos fs clc sbb cmpsb setae sbb jns imul test mov int lods inc mov cvtpi2ps sub out mov cld dec scas sbb enter daa in push fwait sub cmp sbb repz aam xor and inc or cmp pop xchg outsb loope ds scas rcrl xor popa mov int3 push dec aaa int jae stos mov sahf (bad) pop aam cmpsl (bad) mov sarb xor add dec inc jg out dec ja xor push inc dec adc and aas mov adc cmp mov jns arpl inc aas mov rclb (bad) es std dec fcomps and repnz mov jb (bad) fisubrl sub in (bad) out incb and mov mov jns lods xorl add fsubrs mov test imul push jne leave push lea in jno add fsubrl xchg aaa xor (bad) out div loopne inc jle icebp mov outsl loopne enter nop pushw pusha dec push arpl movsl mov aam sbb outsb (bad) lods clc add mov lea popa pop inc mov outsl stc aas jnp lret adcb mov xchg mov push negb inc ljmp es pop lret mov in xchg add mov jle (bad) notb sbb js xor mov cwtl xor xchg je cmp xchg push push test push inc (bad) aas jb inc pop adc and xchg sti mov cmc loope dec aad pop movsl fmull loopne jge jae xor ljmp jmp mov xor xchg pop mov xchg imul mov inc sub outsb adc daa mov jnp add push adc call mov test mov lds jb fisubl sbb iretw or mov int out insb xchg call stc mov cmp dec inc add rolb adc aas and or stc ret mov mov mov add cwtl mov cli ja inc or bnd or stc aas and insl mov jno adc mov test push sbb push rcl ret pusha stc stos xchg mov push int3 pusha xor mov aaa fsts insb stos cmp jae or daa repnz aaa sub lret dec pop pop incb out push test movsb add into or sub jl xor mov pop outsl push jb lahf leave push fnstsw sahf clc in add jns stos sub divl sarb mov dec sub push inc cmp jae pop and sub hlt cli out add adc pop fcoml loope outsl dec or adc xchg cmpsl mov or cmp movsb fimul add pop fwait mov cmp lret aad dec outsb jmp pop testl xor and xorl leave ljmp test push insb sti mov mov mov sti aaa das adc push add insl (bad) hlt pop iret cltd xor cmp pop inc test popa mov (bad) push (bad) mov dec rcl jg loope cmpsb cltd mov xchg test add pop mov pop rclb jmp lds mov (bad) rorl stos shlb mov int lret sbb dec cmp in pop mov jb mov pusha xchg jne (bad) adc add pop rcrb test ja inc outsb and (bad) repz and je add dec in fnop xchg cmp int3 dec pop out pusha inc fbld negb cmpsl loopne cld push mov cs jb push (bad) mov lods test lret mov insb jmp or mov into jne jae dec mov outsb xchg mov xor insl (bad) xor addb dec out mov jl (bad) icebp push int3 inc cmpsl cmp cltd fildll sub fbstp or dec dec mov clc inc or je mov and xchg jle xor jo sbb jmp (bad) arpl in add or pop (bad) lods inc push sub pop shll std ja jg or pop (bad) rep or movsl cli test dec dec or lods in mov mov push pop push mov or pushf subl pop mov sti test popa sti jp add mov lods test mov add or adc mov inc inc movsl rorb and (bad) cwtl lds sbb pop pop jne mov mov (bad) repz outsb and das nop mov mov add dec dec mov shlb or and ja dec lcall lea lds push adc sbbl xchg and cmpsl faddl loope inc fs in loope or sub lock and mov lret mov gs imul sub cwtl fildll stos sbb jl sub jne je fcom jge (bad) in scas movsl sbb je hlt icebp mov or mov jo sahf inc mov das out cmpsl add jbe rol push pop (bad) pop or cmp cmp sub popl icebp lcall cmp sbb sti sub sub pop pop sbb dec fiadd sub (bad) add mov sub pop test (bad) into or sahf xchg push in lock and (bad) xchg pop out pop mov rcll enter mov inc xor xor outsl es pusha pusha cli fs cmp and add add cld fwait sbb jle leave mov popa push inc mov dec imul push out popa jo (bad) xlat fstpl out das inc cli in ret sbb cmp cmp mov lods loopne les and add enter pop sbb aas push mov dec lahf das stos sbb xchg dec scas mov insb pop dec es pusha mov fcomps mov xchg mov push call (bad) scas jp push pushf iret dec ljmp cmpsb lock cs fisub shll or scas sbb (bad) test xlat andl sub push cmp add popf and sahf dec int3 pop jae push mov push int3 sub add pushl cmp popf (bad) nop sub mov dec enter add push mov mov xor mov bound mov movsl xchg mov mov and jb mov jne repnz xchg lcall mov out jne sbb sbb mov mov les push push pop push in dec rol es popf adc fidiv dec loope bound pop sub subl movsl mov pop fimull xor or mov xchg mov int inc sbb push xchg ds aad mov mov fldl dec adcb dec sub clc sysret arpl ljmp mov (bad) cs mov sub loopne sub push mov (bad) into dec into jns lea xor inc andl jnp push dec jns movsb in call cmp enter sbb mov cmp nop mov mov rcrb push ret mov pop out xchg sbb hlt jns pushf inc xor dec enter aaa pop jne jae popa mov adcl jp daa out sub pop das sub xchg in stc dec jle mov sub loopne or jecxz pop push arpl jno jbe dec sarl leave and push ja mov mov insl mov mov fbstp int (bad) ja,pt addb idiv arpl lea mov jbe (bad) (bad) icebp lret sarl loopne fisttpll cmpsb dec (bad) push scas mov sti pop or or sbb in out pop xchg test xorb and pop inc ja int jg je push and pop xchg imul mov cs and mov out adc xor bound cmp movsl cmp in ljmp icebp pop inc push ljmp in addr16 adc stc es and sbb (bad) in cli popf call push cmc mov add out adc call stos inc jns movsb pop divb testb lcall xchg aad lret push lock jge aad adc dec shlb loop add iret mov pop ljmp lods or imul mov sahf mov int3 stos adc das xchg mov add out rol movsl mov adc movsb push rcrl mov aad movsl mov dec (bad) outsb sub sbb loope add or and xchg inc push adc inc je push loope xor js je fs in imul cmp mov (bad) xchg add mov sbb (bad) nop imul imul inc pop stc popa pop dec pop push xor ret xor out cmp dec xchg sahf jmp test and mov pop mov test adc push inc mov mov mov cmp sub loop jae mov xchg pushf inc add outsl xchg jle not cmp nop rolb (bad) dec cmp adc into cmp push pop push pusha pop jg jo imul pop mov push mov mov jnp outsl jnp out pop sbb mov xchg jmp adc loop std loope loopne lret xor fdivl xor imul inc daa xchg inc push pop pop or data16 lods sbb cs mov pop push push mov icebp aad mov mov adc cmp js mov jle sub and push scas mov fdivrs push loopne movsb cltd push jb sbb mov movsb cmp pop sahf stc cs fidivr mov outsb pop fcmovb insb sub dec insb rorl cmp dec mov fdiv inc pop frstor xchg mov push lods flds lret jg shrb aas and das test mov cmp push jp push mov mov mov (bad) lahf sub pop mov inc gs xor enter mov aam mov sahf cwtl cmpsb jns push dec push dec enter and fistl (bad) insb sti mov das sbb mov pop dec add test into dec mov out (bad) bound lock sub lret pop into mov daa (bad) mov mov dec push mov (bad) mov jo cmp sub xor jns insb js fsubrs ja inc dec cmp repnz iret jp cmp clc imul xchg push sbb xchg pop jmp fiaddl or pop rol jl sbb clc loope nop in cwtl dec insl movsl jb cld cmp sub ss dec mov adc stos dec iret xor xchg leave sbb out mov imul pop (bad) xchg xor stos add jg mov stos adc xor or and push mov cli xlat test int3 call xchg arpl push xor jge push lea les (bad) andl int pusha mov cld add gs ret lcall jl sub (bad) xlat fcoml insl int mov loopne js pusha popa popf repnz add mov sbb fcmovnbe jp add aas lret inc inc xchg aaa add cmp rorb outsb mov xchg push andb inc pop pop xchg dec lret scas lret xchg xor mov mov test loop dec cmp addr16 jge out sarl cmp adc outsb aas ret xchg push sub push ret int pop rorb fdivrl push add loop movsl cmpsl mov mov xor (bad) dec push fnsave sbb xor and dec or ja push mov or fldl mov (bad) push adc mov ja out push mov loop inc push add pop inc stc xor and mov enter xorl (bad) jle ret jnp (bad) jmp xlat hlt pop sbb lds jae iret cli inc (bad) xor push inc add cmp arpl xor ret hlt inc push es cmp ljmp dec xor frstor xor mov mov xor stos lea mov dec daa cld ja cmp (bad) pop inc bound jo jle inc cs jmp pushf xchg or mov cld je imul sbb std mov mov or mov fnstenv enter fistpll out inc or inc sbb push cmpsb pop cmp mov cmp and ret jp bound dec es push sbb lods int3 repz mov dec out orl loope clc fwait iret popf xchg test aaa jo and fs inc mov cmpsb lods pusha arpl (bad) sbb inc add into rclb fdivp jne sbb and sub dec lret imul scas mov cmp cmp into pcmpeqb inc cmp psubw jno lods xchg rol je sbb or add or push gs jecxz ret dec xchg jmp (bad) jp popf cmp lock stc ja mov hlt adc and pop rorl dec xor rolb add inc fldt cmp push pop out pop xchg or fucomi popa dec es push jg inc in inc out outsb stc pop in xor je sub xor push adc dec scas fbstp (bad) shlb div jmp fcmovnb sahf push jae push flds enter mov dec test out cmc pop repz je fs lock pop adc aad nop adc sub (bad) add leave or arpl push stos int cmp pop es in (bad) (bad) mulb xlat lret mov mov sub loopne outsb xchg adc (bad) mov movl push repnz shll cmp xchg push fcmovb cmp fistp cmp sub dec out dec mov pop fiadd fcmovb ss (bad) dec pop in xchg pop orl jno lds pop dec mov cwtl fmuls scas mov push xor scas (bad) mov arpl cmpsl push movsl sti mov dec cwtl xchg mov (bad) dec insl lea jl cmp cmpsb pusha inc xchg pcmpgtb cmp into mov or call lret or out shll movsl and loopne mov jne out jb call lret mov mull outsl out cmc adc mov (bad) cmc in (bad) xchg (bad) jb jge mov add gs mov adc inc loop stos aam mov jg adc mov (bad) repnz push cmpsl (bad) scas xchg clc mov cmpl mov add ret insb movsb pop cltd cmp pop hlt movsb js outsb sub dec add sbb xchg movsb outsb sbb mov outsl mov out gs or or leave sbb push lret cmp mov es call aas rorb xchg jle mov stc shl ljmp and jp jmp lsl adc jecxz,pn xor test add out pop dec aaa negb xchg dec scas clc dec fs mov push push aaa icebp jne test sub fsubrl and test (bad) mov mov jb sub xchg sarb daa mov fstps mov mov cli jae push nop pop push clc jnp and push and sub dec sub inc xchg xlat or call mov xor sti int lods fnsave lret (bad) sub fmulp xor mov pusha fisttpll stos dec add mov mov nop fidivr pop lods pushl icebp pop or sbb jo (bad) into push enter fwait ds xor push lds push mov inc add jnp rcr lds pop sbb subl dec cs cmp mov sbbb lock or ds (bad) xor dec fldt (bad) das in stos add stc mov mov cs outsl dec xor push cmp ja ror sbb das cmp lea mov cmp adc push inc jns dec xor jg sahf pop or cmc aam repz xor mov lods mov sbbl fdivrl and ja or jl inc push jge fstl mov jg daa les outsb std sub lret fist sub mov aad mov push xchg mov mov out orl insb push fistpll jno and dec jg mov sbb lcall xor int mov mov push call push inc repnz push pusha insl pop xor aas adc push hlt push jecxz,pt push jl xor xchg rcr das mov sub or xor roll pop pop xchg mov sub push push jne jae and mov mov xor sub punpckhwd sahf mov das (bad) pushf mov nop mov and test pop mov jno add rclb je jg cmp mov mov inc dec mov jae sbb call dec inc add dec sbb cld adc pop jne stc xchg int3 std dec pop adc sbb out lahf data16 mov fdivs or jle jle clc add std cltd es dec movsl add jle dec insl jb cmc jl (bad) cmc rcl pop in sbb lcall push jae inc add push not bnd pop pop test push xchg lret sbb icebp cmpsl jmp dec mov push int inc clc pop outsb nop and cmc and jp or and mov (bad) lock movsb leave nop inc (bad) lock and dec ss in lcall arpl jmp enter pop add adc cmp inc push dec push or push and add (bad) or mov dec mov (bad) sub sbb movsl cltd mov mov mov add xchg xchg fmul push fsubl mov jb adc mov in stos jb xchg xor ja mov xor mov sbb (bad) fst int3 hlt jbe out push in pop jge sub ret dec mov add jge dec cmpsb scas scas leave cwtl (bad) jecxz pop rorb and out data16 pop add aad call hlt leave mov add or cmpsl sti adc ss mov dec mov jbe sbb push jge lret and insl pop mov out stos mov loopne add in inc mov and add mov stc (bad) mov shr pop adc jne pop mov outsl or mov sti negb push inc ja and fs call sahf mov stos inc inc cmc push cli xchg stos pop jg pop imul int3 outsb jnp xchg fdiv or or pop fstpl pop ret adc and les shr push jbe imul in jge loope lods stc lds hlt daa mov data16 mov xor push enter pop mov ljmp pop ret insb (bad) cmp sti adc sti mov adcb rcll cltd dec jg es enter and cwtl das jae fwait repnz scas jbe sub sbb xchg mov (bad) fs mov loope cmp fwait mov pop inc sub stos xchg enter fcos stc (bad) push xchg dec jl notl inc dec xor aad adc pop lret xchg xchg (bad) aaa stos push mov xchg sbb dec scas out bound insl fisubl insb jne ret push jmp clc xchg pop sar sbb pop cmp pop sbb jo js adc sbb gs nop sub push push dec stc inc das ss sbb mov jmp sbb jne xchg sbb mov (bad) sbb pop jnp js and arpl mov outsl or and push mov add jb loopne xchg jne imul sub popf movsl jle daa jge fistpll mov lods push inc jecxz incl mov int add lods sbb (bad) pop add xor pop sbb sub loop iret jne imul inc pushf test loop jecxz popf aas xchg jp xchg dec pushf jno xchg xor sarl pusha mov fnstenv (bad) movsl out pop cmpsb imul mov out (bad) daa dec scas sbb xlat aas shll in jmp sahf cmp iret add mov popf pop sub push fidivr sbb out push cmp js and ficomp push idivb xor sub mov outsb loope pop in xor jns popa inc cs sahf dec data16 mov inc jno mov lahf cmp mov mov sub iret sahf mov lcall or bound mov or (bad) call mov loope push popf std mov jmp cs mov xchg in clc add push sbb jnp inc dec mov out call add fucom cmp dec pop sti mov inc mov cmpsl leave and xor cmp xchg sub outsb sub lods out popa or cli lods rol stc xchg push movsl or push pushl inc lret adc inc in dec add dec aam push dec fisttpl cmp sbb in xchg push sbb sbb mov sub adc xchg xchg ja ds lds iret out sti mov mov clc loopne push ds jl shll popa jbe jno insl loope inc dec pop mov fxch xchg or insl or mov mov sbb xor mov jne sbb out out cld rcrb mov inc ss lods leave jb es adc imul (bad) adc fildll insb xor jbe dec xchg adc mov add flds sub pop lds out sbb xchg jb imul lret cmp adc cmp jbe cmpsl outsb aaa cli dec sbb jmp into data16 gs (bad) inc jecxz cmp and clc enter inc mov pusha les xchg dec or in fldl (bad) repnz xchg xchg adc out (bad) sub mov mov add testb gs adc xchg jbe jmp addr16 mov rcll stos lea jl stos cs call fisttpl sub dec test or push cmpsl mov ss movsb dec cltd rcll sti (bad) dec in jns ss and call (bad) mov sub pop lods lret cmpl add and add jp inc mov dec scas lds clc pop outsl mov pop mov hlt stos rcrl jmp pusha out jg popf (bad) mov imul jp fldl or mov out popa dec lahf pop and xlat loope shrl add cmc lret je and jo es fwait cmp test cmp addl inc lods stos fwait lahf inc iret in and ret sbb xchg sub and fnstenv fcomps inc icebp inc arpl add dec pop or (bad) (bad) mov ljmp imul add jnp mov (bad) stos lock pop sbb int3 mov popa (bad) sbb mov test popa sbb inc (bad) or sub dec or mov mov sub in cmpsb xchg movsb in fisttp ds push lret ljmp aaa sti cli adc repnz jbe adc mov inc mov cmp adc dec ss (bad) sbb inc or or cmc dec aad mov and out loope sbb lcall adc xchg aam inc leave insl mov fnstenv shrl xchg outsl mov ja xchg fildll cmc sahf movsl jb xchg add mov ljmp mov out dec push in sub pusha int3 mov mov mov or aas sahf fdiv jne sti lock (bad) mov or and push inc cs mov jae mov inc jl jb mov jns dec pop jmp sbb rclb xor pop xor imul mov sahf (bad) sbb mov jl sub repz add out xlat fistl lcall jecxz ljmp pop pop shll and push dec popa sbb mov push jl movsl pop inc dec or xchg das sub rcrb js es nop ret cmp cmc scas pop leave mov dec pushf push inc jmp jnp and icebp adc jae out adc inc (bad) loope movsl adc movb or and insl test call daa les test in repz pop cli scas cmp jp les aam dec icebp pop mov sub sbb cwtl (bad) lahf ja fsubp scas push pushf ffree daa addr16 mov sbb dec mov (bad) mov xchg ljmp mov inc pop mov mov mov xor jne pop jl and mov add xor push sbb jne rcl jns cs add pop jle mov enter inc data16 aam mov xorl pusha rcr adc pushf mov fstl and mov push push and jae cld movsb cli lahf jecxz lahf pop mov adc pop data16 outsb adc imul test cmpsl push xor sbb aas dec es fnsave popa xchg jecxz push inc in ja rcrl test xorl pop cmpsl repnz push popa cmp xchg icebp cmpsb in and (bad) mov fsubp add xchg pop push xor cltd test fwait dec xchg cmpsl push push xchg pushf lahf gs sub push add xchg imul fdivrl xchg in dec sub push mov gs pop dec imul nop mov das push imul jne dec iret push cmp imull jne into fwait lods jge mov mov adc mov sub int fisubl pusha popa (bad) ljmp pop lahf dec pop mov sub pop int mov inc xor es pop sbb neg outsl and jg adc pop sar lds rcrl sbb (bad) cld enter xchg sbb jl jnp in mov in jecxz mov loop subl xchg lods pusha imul pop popa pusha add (bad) xor in icebp mov in sbbl frstor out into jecxz mov (bad) rcrb and imul out ds fldenv roll rorl xor cs cltd push lods pop fwait or aam xchg pop fidivrl jecxz cmc xchg sbb adc scas leave test mov stos nop push jp mov inc sub sbb cld test flds push and or (bad) jg or pop idiv pushw stc sub lret and cmp das inc pop stos scas and or adc jne cmpsl jmp not mov mov xchg lret xchg mov and jle outsl stc or dec loope cs es ljmp out pop lret pusha rcl push mov imul pop xchg loope rcrb test in and popf sbb jge out jp arpl in mov xor push lret loop pop cmp inc mov fisttp inc (bad) xchg fdivl (bad) test daa sub ja std xor jmp adc lock lods jp stos les jmp daa mov xchg (bad) std imul mov sbb (bad) dec cltd (bad) sbb add hlt jge xor mov push pop mov clc call inc (bad) pop dec push out mov dec xchg inc ja jge leave pop daa jne xchg mov mov repz in (bad) bound fmuls shr jmp lret leave xor xchg data16 popa adc push das or xor mov pop loop pop lahf mov scas jnp mov outsl mov xor hlt fbld pop fnstsw and or lea dec (bad) mov pop (bad) out jo sub jle xorb out das jnp ds mov hlt xchg xchg jge cmpl mov lods test inc xor arpl int3 stc nop mov dec and int3 inc xor das push cmp cld inc iret gs out cmp sub pop add inc mov adc aaa inc inc jl mov test mov mov pop xchg xchg xchg icebp aaa test ljmp mov dec mov mov test (bad) mov daa mov inc push cmp mov arpl lahf imul aam xchg push adc leave dec cmpsl mov (bad) xor add enter dec out mov pop jbe je xchg scas (bad) testb lea sti mov in dec insb insb bnd lcall push xchg clc in in pop xlat sahf test std sahf int daa sub mov (bad) scas mov in fsubrs mov outsl mov and cmc dec xchg scas mov adc push test lods push xor mov jae pop xlat hlt stos imul dec (bad) (bad) rclb mov rclb ficoml into clc push or inc xchg lcall in sti popf push stc or inc push mov lods mov sbb stc lods test dec dec stc in xchg shrb add mull out cmc or std loopne (bad) jmp test mov (bad) xor sbb jle pop lods repz ret icebp fs or xor inc mov and sub and icebp and (bad) sbb insl in into add mov inc mov push mov ret std lds (bad) repnz mov jle pop adc mov cmp mov add dec fistl test (bad) xor xor pop ss adc jbe mov sti mov sbb cmc test push fwait cmp xchg in xchg bnd ret shll ss lds daa fbld xor lret xor xor jno cmp pop dec add or je xor push shr xchg adc jmp mov icebp add cmpsl mov mov sbb aam cwtl (bad) inc xchg out icebp (bad) xchg fisub les ljmp jae test in xor xor xchg xor aad aam inc in add mov (bad) icebp aam jns sbb daa add dec lods fisubr or mov mov cs pop movsl pusha test fisttpl or or pop mov sbb jp inc arpl mov add pop mov dec xchg sbb mov inc subb pop jmp shrb addr16 cmpsb std aad push call outsl imul adc insb repz cmp add push pop and xor mul insb ss es fstl xor data16 cmpsl int3 ljmp sahf xchg ljmp pusha outsb fidivrl mov out popf adc int3 rcll scas and xorl test push and jle and mov mov dec sub mov ja xor nop pop iret xchg sub push mov pusha sti sar int3 jge pop faddl mov daa or or test cs adc jg mov jmp ljmp push xor and lcall fs xchg adcl std push adc addr16 mov pop sub imul lock into inc push or lods into adc pop push mov repz pushl add scas mov sbb ljmp into jp lahf xchg pop insl repz das push push adcl push xchg add ljmp aam pop paddusb xchg or imul in cmpsb lcall xor mov jg,pt int3 push lea bnd sub jnp lds mov imul stos jns mov dec ret cli imul std fwait adc pop fidiv ror and sub ss inc and mov sbb sahf fdivrs cli test fsubs leave insb lcall mov xor xor push rclb roll pop sbb inc cmp inc jae outsb nop outsl aaa movsl repz dec push xor dec popa (bad) jno test sbb mov ret loopne dec stos pushf pop stos xchg lea fwait dec xor dec fcompp repnz pop mov jge sahf lods enter (bad) ljmp test jo add hlt push gs mov mov mov xchg mov or dec call ds and adc hlt dec mov rorb mov pushf (bad) int cmp jge or push and gs mov call xor sbb ds mov jg inc iret pop jg push xchg mov mov je sub pop and cltd aam lds (bad) test andl pop fnstsw imul xchg (bad) repnz mov jae inc mov push add push jl fimull into mov inc push push lret jae xchg inc movsl cs push stos and mov fisubl in iret insl adc shrb xchg sbb xchg or out pop jb arpl jg or insb fimull stos cmpsb pop jle (bad) rclb and outsl xor aas test cmpsb sub cmp pusha sub xchg sti push leave xor sbb mov sub cs mov mov addr16 rcll mov shll popl xor push pop shrb (bad) dec mov cs lock ror clc aas jg cmpsb cwtl fcomps lret aas mov add adc fsubrl imul lds ret mov inc std add (bad) or jns lods pushf insb scas mov add push hlt repz je mov mov pop mov inc (bad) idivb inc fstl or into arpl test push adc (bad) add mov sahf fisubl fidivr jmp pop mov idivb dec in aad outsl outsl sub mov sbb inc dec jns lret add outsb dec mov bound jl mov push jae pop into cmp rolb dec aad add pop pushf cmp out xor ds outsb lret sbbl xor push imul fwait add pushf xor test call lret out xchg fldcw jns test (bad) lcall dec inc xor jb fwait push jnp fldl lea jno scas fsubl inc cmp orb sbb pushf add (bad) pop jp mov in mov mov pop test jns enter sub bound mov mov and dec pop dec dec fwait pushf nop and add incb cltd insb hlt js xchg arpl out subl iret xor ja dec mov adc ljmp lcall mov lea cmpsb mov mov dec xor aaa shrl mov lods add mov aaa mov adc in ret lock xchg inc mov inc loope adc sub jmp rcrl fist jae pop (bad) mov idivl adc and pop mov js jmp movsl mov in in xorl mov xchg in push mov test jg les in jae daa adc push out push lret sbb js ja inc cmp and jecxz mov mov incl aad xor fsubrs js ret shll lret pop cmpsb mov leave je cmp popf push dec arpl cli mov jle xor pop mov sub jbe mov insb xchg imul add cli call inc push fmull jnp,pn mov sub pop mov rol ret adc jns and fs int3 pusha stos push (bad) movsb dec sbb lret inc (bad) jo std outsb xchg dec arpl iret adc outsb cltd inc ja in repnz or rorl ret jbe pusha add lods imul mov add mov or fwait mov xchg mov das in mov xchg mov pop call int3 jg jecxz out enter jo push ds mov popf (bad) cld and (bad) cmp sub cmp cli xchg push mov cld cmpsb stos mov add jl mov sub push xchg and xchg sub xchg mov mov jmp pushf (bad) js popl enter or or mov xchg add push mov cwtl nop mov xchg fiadd fcmovu lahf mov popa sahf das sub cmp adcl dec dec inc dec test cwtl les and enter shrb mov mov sub fldz push das rcll mov jecxz jns xor mov jns pop add dec inc add push cld movsb xor push pmaxsw jl sub adc mov jecxz cs (bad) fstl inc (bad) movsl sub enter push loope andl xor (bad) cmc fbld mov std xlat stos jo repnz jb test gs lock movsb sbb icebp xor jbe fwait mov mov fwait mov xlat or ja lods scas pop movsl cld xlat arpl sahf mov jmp (bad) repnz out add (bad) jecxz sahf xchg movsl into test inc call loop sahf sarb pop mov ja in adc js fisub sub and jbe push xchg jle fdivrs jno aas sbb lret push enter je mov jne repz aas out add adc (bad) mov cmp mov ja mov push inc aas xor shrd jmp sub push adc push push adc data16 popa repnz out push outsl (bad) loope mov out sbb cmp inc gs mov jg shr mov (bad) mov lret hlt fadds xor cmp out fnstsw cmp adc push icebp and mov inc int3 xchg popa loope daa inc cli adc or aas or iret (bad) movsl shr sarb jl mov jg mov cmpsl stos outsb add stc in ja sbb and fbstp lahf popl fcmovne stos aas adc jge lcall lcall add (bad) sahf imulb sti mov (bad) jbe outsb jle hlt scas or aas pop ss sarl pop int push xor shll sbb jb fwait shll leave addr16 xor mov push pop xor adc cltd mov mov pushf mov mov cltd lds test loop jae es test out fsts stos imul or sbb fisubl flds lea rolb pop enter idivb or dec insb insb iret les (bad) dec or sti jne and sti mov sbb repz (bad) lods in fs scas jnp xchg fistpll sbb pusha xchg pop (bad) fildl arpl pop jge cmp bound sbb arpl push vmwrite jo out outsb pop fs xor enter push int3 inc jno out in test loopne,pt pop xor mov mov mov addb cmc fidivrl and lods out aas or and jo bound out jnp loopne gs (bad) in jno,pn mov cmp (bad) jne in xchg sub mov adc xor adc mov cmp or pop popf mov inc sbb mov das inc in adc pop lods pop mov je stos jmp je (bad) push add andl adc cmp mov aam cli xchg sub ljmp outsb push idivl inc cld dec (bad) jne (bad) pop aas push aaa cwtl in mov out shrb dec ljmp dec jbe dec jl sub cmpl aam mov sub (bad) repz (bad) cli adc stc adc sub sbb lret sbb das ss (bad) daa jbe mov repz mov pop shrl outsl fldl test outsl adc negl mov add xchg gs in pop jno inc add mov mov mov push pop roll sbb and outsb push pop jg imul sbb dec xchg mov sahf (bad) jp cli xor cmp (bad) cwtl das xor es enter clc das lds dec jecxz push sahf and cs add xor call call imul sbb xchg lret sub int3 ljmp roll pushf xor add jmp add les ljmp pop mov and or xchg pop cs ss ljmp sahf adc in sbb js imul testl mov in sbb scas xchg xchg enter imul or mov loope addl ftst mov mov (bad) pop gs ljmp sub jbe pushf lea lret push cld fs sbb xchg fwait pop bound fwait roll gs dec lret stc lds mov cmp mov arpl ficompl jnp inc mov adc sarl ja bound or ja daa lahf ds fstl ficom xchg (bad) jge xchg push dec pop inc sbb adc (bad) mov ret test les (bad) push cmp sub stos stc xor es jmp jmp lcall xchg cmp push inc xchg loop testb movsb movb dec dec cmpsb cli xor jne in add adc cmp mov out adc add pop and sbb mov mov push clc int jnp or push cwtl jns xchg in push scas jbe mov enter idivb mov sub iret xchg cwtl jl sub mov add pop pop xor inc pop psubd cld mov out mov icebp lds jmp mov icebp or dec stos push jo fimul cmpl or hlt mov adc pop xchg xchg loop les sbbb out outsb jge popf sbb pop insl fwait inc push fisttp dec mov ds clc mov call mov (bad) loop xchg pop xchg dec mov cmpsl push rcrb fwait mov adc movsl cmp push xor pop xchg mov pushf push push (bad) hlt inc push enter lea adc pop (bad) xor mov xor popl test pop (bad) or pop and jmp cmpsl stos or in scas or stos cmp mov cmpsb and dec add daa hlt xlat popl scas jns or jge stos cli test or cmp pop sbb ss int mov fstpl xorl xor push mov mov cmpsb cmp mov aas xor mov cmp fdivs mov fnstcw pop xchg outsl xor inc (bad) rorb das (bad) je xor nop mov push adc (bad) sbb mov fwait sbb repz sub int3 mov cmp ljmp dec xor sub xor or aad jo inc ret mov xor sbb mov je xor movsl loopne scas pop mov or and aas push xchg xchg push push lea adc mov xchg popf mov arpl ret insl mov mov jl mov (bad) inc and fcoml and mov sub and (bad) adc cmc push xor xor mov or xchg dec dec lcall dec cmp mov jge jle jmp mov ret loop aaa sbb dec or push inc adcl pop sbb testl ss scas cmp xor jmp addb jg mov adc fwait mov into push sub fs mov xchg pop adc ljmp jmp or mov aam mov inc test dec pop fwait sbb sbb pop sti (bad) jo fidiv or mov gs xor inc (bad) mov movsl dec push dec and sub lcall inc clc cmp ljmp jne fisubrl ret fstpt inc and jmp movsl cmpsl outsl inc sub loope ja pop out sbb cmp nop cmp stc jmp cmp out xchg in out adc sar or clc sub sbb xchg sbb inc pushf loopne inc loope fisttp lock out bound inc not rolb xchg mov mov cli ja push push hlt sub mov adc in push and clc mov aaa sub pushf pop aas jb (bad) jns lea sub insb icebp mov xchg movsb inc dec mov imul mov jno adc xor stos loope add lret (bad) add sarb or rol adc or dec push or cwtl sub mov xorb pop ret xor (bad) lret or test out imul daa and cwtl xor ffree mov push ficompl rclb push xchg adc test int bound mov adc pop test jl add sbb outsl sarl push cmp cmp call xchg inc push adc xchg js jnp fisttp enter mov pop aaa cmp mov xchg js test stc repnz pop pop mov test and sbb xchg fstl lahf inc inc ljmp mov dec (bad) xor lds adc idivb sti cltd rcl mov (bad) jg out je cmp push leave fist cmp (bad) dec adc push ret push mov mov not shlb dec adc test mov nop aad inc pop xor mov fnstcw les xlat data16 les adc pop lea cmpsb loope rcrb clc lock dec mov dec jp mov fucomp clc cwtl push flds sti fildl xchg std stos cmc pop imul sti adc jbe push test fs push into inc ret mov inc js xlat mov cwtl add cmp lret mov jp mov inc or mov fldl2e mov mov popa test cs lods pop dec out push and insb call and mov mov and fistp fldenv cwtl outsl sub sub mov ret cld fwait push hlt sub jae jno loop lret sbb lret sbb push dec fsts xchg jbe push lret xchg pop popf mov mov arpl jle out mov fildl stos cmp fs sbb mov insb int inc pop stc push or loop test push jle dec fwait sbb and or cmovl icebp mov pop jno inc jbe and adcl nop aad or jnp daa and leave addr16 gs sbb sahf ret shr pop imul aas scas dec jecxz fnsave push xchg mov cmp lods icebp movsl lcall cmp jo sub dec and fimull or mov movsl les jns bound fdivs ret dec movsb cmc mov push hlt fild aaa fistl shrl stos fsubl sbb push push xchg aam and imul sbb pop sub inc push pop xchg xor cmovb pop dec mov in addr16 mov or cwtl sub push jne xor out test rcrb sbb cs fildll dec adc aam loopne call sub and adcl call inc shll loope jb jns adc jb or lret xchg sbb std adc mov push es add aam pop (bad) mov cmp mov mov (bad) push add add dec dec mov cmp and mov cli push not mov and pop mov sub std test (bad) icebp pop (bad) sbb mov lods das daa xchg frstor fs pusha out xor xor fiaddl sub cwtl xchg cli (bad) in xchg mov insb xchg adc xchg jle mov fidivr fwait sbb insl rcr cmp dec mov push dec xchg int fdivr xchg and notl mov (bad) or pop lret mov lock adc xchg sub shll lods cs adc (bad) stc push mov pop mov (bad) xorl or pop rcr loope ret enter xchg or fbstp mov push sti add mov andb cmpsb dec test fwait push out sbb test rclb loop inc in xlat repnz or xor cs in inc lods into (bad) xlat pop xlat lock mov lcall jbe mov mov test or repz das xor lods xor outsl push sub out lahf inc aas (bad) xor inc jle inc or pusha push lret ja jp xor pop dec test clc js push std xchg iret das mov inc aaa push out pop xchg shrd and xchg arpl pop sbbl dec sbb ljmp int3 inc xchg xorl cmp xchg addl mov push mov or pop xchg fnstenv push stos pop jns es cmp push sub cmp aad sahf mov or add (bad) pop movsl inc iret mov in es cmc cmp lods in pop push nop das dec sbb test jg adc push jb aad mov out cli mov sahf fbstp sbb mov cmp lds pop js cmp push push cli adc add push push add mov pop (bad) xchg movsl dec scas dec mov lret mov add cmpsl cs xchg adc rorw rcrb insb cmp ss add sbbl mov xor sbb push dec mov lcall movl stc sbb push imul mov push cmpsl std cs jne cld jle arpl jbe sub sub mov cmpsb stc lock cmpsb xchg xor leave out push xchg movsl stos js je mov ds add (bad) and arpl xor push push test sbb push sbb and push mov mov aas movsl xor mov cmp arpl sub xlat add push jbe mov aaa shrl imul push movsl test dec sbbl popa in jecxz jnp push test loope xlat iret popa in outsl popf addl mov into pop push leave xor pop push pop clc jle pop mov loope fiadd cmp leave jbe (bad) push fdivs popf mov jp adc pop cmp test popf inc xor pushf pop or and cmp dec outsl adc jb pop push dec dec mov (bad) cld jle nop dec mov jnp and js call xchg shrl dec stos xor push gs test insl sbb mov ret sbb jbe xor dec out es (bad) xor aam dec ret jae fsts jo jne leave cmc out mov rolb into je dec cmpsl int fistpll jecxz or fnop jae pop outsl add mov xor push xlat mov (bad) ds jne ja add fwait and dec mov testb adc jmp cltd push adc loopne push jno aaa or gs (bad) aam add jo outsl add and mov sbb or cmp out lea or scas mov out pop test out adc and xchg loope cs jbe fsubs jle sub or mov das mov add push insl jno sub xchg in jecxz push cmp in dec mov loope fdivs out pop jle mov cmp mov pop jecxz push mov fprem1 push flds repnz cmp xchg lcall scas inc (bad) pop test (bad) outsl mov (bad) xor push popa cli jp mov insl cmp sbb push jbe popa repz punpcklwd (bad) enter mov insl bound sbb sti pop cmpsb rorl xor outsb add xchg xchg or lea mov jns inc je mov aad inc repnz mov mov cltd inc push pop rolb or mov incl pop out decl cld mov cmp mov xchg or pop mov cmp data16 (bad) xchg dec lods push push scas pop pop push pop or cs and outsb hlt lret adc imul ljmp adc xchg mov push (bad) or out jle dec cmpsb cmp das mov push sub es xlat adc sbb rorl mov rcl jp sub xchg push lret jbe push pop push cld and pop jns pop dec mov cmp repnz cmp rol add movb push xchg lods inc sti arpl ficomp xor and aam jnp or cwtl cmpsb sbb lds pop mov data16 inc fisub aas cmc clc mov xchg cmpl mov mov mov mov insb inc mov cmc shrl bound sbb xchg dec mov daa pop xor xor and lods lea mov push push pop test loope loop (bad) clc cmc sbb cmp jp jmp xchg lret jmp (bad) out in ljmp repnz ja add daa or cmp and xor jl lahf mov std int3 jl mov push enter mov jmp adc and fwait in in xorl or pop sub mov xchg mov inc fstpt cs xlat loope pop std inc (bad) loope inc cwtl fwait test mov ret pop xorl leave adc push add mov push rcrb and jo cwtl jns adc mov mov imul (bad) pusha lods jno inc mov push js adc mov data16 jg les mov mov adc adc (bad) xor mov sub dec push in lea cmp popf and sbb sub dec out pop pop sub repz mov xor mov popa incb into push imul adc jl add in lret inc or loop fisttpll mov xchg movsl inc arpl inc xor mov (bad) jno pusha inc and movsb mov and out ja jl jb mov adc and jb ss lret mov je pop rorl addr16 pop xchg push push imul sarl jae ja ftst push push pop popa (bad) pusha sti add sbb test lods addr16 lahf mov inc jno into dec sub fcoms in fwait loope stos (bad) fiaddl pusha aaa scas lahf mov gs sbb decl sbb ljmp dec xor arpl int scas std and cs ja xor mov xchg inc loope in rorl data16 aad std lods inc inc push into or sub rolb imul sbb and arpl rclb inc sbb insb xor int aam lea push insl push ss push mov call mov sbb adc rorb mov push jae xchg pop int mov xchg mov mov movsb icebp xor push fistpll add and outsl pop dec lret add mov popf inc out xchg mov pop mov jno adc dec cltd pusha inc lret adcl popa out adc jo push pop ror sub adc pop nop push int3 aam push movsb and dec (bad) sbb sbbb (bad) js mov (bad) cmp sar jno,pt insb pop lahf add fstps gs (bad) stos adc cmp sbb fs mov stos or lds push dec jns adc push push test sub jb arpl sarl fcompl lock cs cmp loope mov mov test mov movsb and and mov pop jno dec xchg daa fld repz adc push sbb pushf stos jge push movsl sub ss lahf mov fs xchg dec dec movb pop jae cmp insb je arpl jge adc pushf and cmpsl fnstcw leave aaa fidivrl rorl aas cmp and outsl pop ds pop aaa and adc fs push push sbb cmp xchg sub popf test mov cmp pusha mov push es mov mov dec out lds pop (bad) jns mov jb xchg jp push stc loope ss adc insb stos std xor or or int3 repnz jo sub xor mov pop push repz pop orl stos inc mov mov repnz or cli in push (bad) into outsl inc xor mov stos aas fisubrl out repnz je dec xor xchg dec stc or jo mov es or loopne mov int push (bad) dec int repz shrl fbld mov mov fs add (bad) (bad) sbb fiaddl shrb mov xor inc mov fs push test pop rcrl sarb pop and sub orb sarl or sbb in pop pop pop xor mov jecxz sbb fsub stos cmpsb mov std addr16 pop int std iret xchg sbb and mov rcrl shrl mov lds mov cmpsl inc cmp add dec sub and imul adc gs sub xchg fwait jmp ljmp lods mov jg xchg lcall xor rcrb pop lcall inc mov push jnp push lret fadds dec sub ja ljmp sub mov (bad) out js lds push pop loop das sub cli out outsl daa push sub ljmp pusha xchg and fistpll jle lret or adc subl mov add ds sub movsb add lcall push (bad) push xchg pop ljmp xchg popf mov mov mov sbb in xchg xchg imul inc sub das or dec add les iret jle mull mov xor jecxz xchg rcrb and push ret out sbb mov cli aam adc adc sub jns cmp fsubl sbb jno or (bad) lods imul cmp mov lds jae clc popf jge mov inc out addr16 push pop jl push repnz lret push hlt inc mov sbb cli add nop xor mov jmp dec pop enter push daa jmp fcoms mov jmp in cmp aad (bad) mov ds xchg gs pop ds cmp lret jg add or mov push (bad) adc outsb and sti aad outsb push icebp push mov test pop push pushf jg mov loop daa or call pop xor fild sbb insb and jb lods enter ds in or inc mov lcall loop cltd xchg jge or adc stos pusha adc sub js les xor pop mov push inc outsb test xor loop subb rcrl jbe testl ja es jmp in fwait push or mov dec ss mov mov pop cmp dec sbb mov imulb gs and or out xor in mov cmpb and cmp and (bad) pop mov iret cmp (bad) int lock mov xchg push inc out lret sub sub jecxz add pop push ret mov ss push in or adc and icebp jle ret bts cmp add aam call mov inc ljmp mov push inc cltd insl clc (bad) pop inc lds adc aad sar pop lahf jge or aad sbb push cmp sbb dec lds jo test (bad) (bad) aaa xlat push sbb push nop mov jb dec push jle mov ds adc lret les cmp push cwtl incb dec faddp mov (bad) in in push xchg out mov sub pop xchg pop int3 mulb adc enter sbbb jmp jge cmp mov or popa sbb jmp push push clc sbb (bad) sbbl out (bad) jae jb loop cmp (bad) loope mov gs ds jp fnsave add jecxz rclb es cmp pop push inc lret mov daa pop and jg (bad) jo loope out mov mov pop stos dec jecxz hlt imul jg xchg es xchg lods mov xor dec daa sti adc aas jmp jge leave jmp test mov push dec dec jmp insl addr16 cmp mov popf xorl mov push ljmp adc mov push jno mov xchg xlat dec adc fistpl add sub mov nop popa jge cld sub push pop dec lds pop sbb jp sub imul iret jecxz jl mov mov imul mov iret adc and stc jo sbb bound fild or or cwtl loopne loopne outsl lahf testb cwtl daa xchg rclb push mov movl pop fs nop sub pop stc inc ja cmp cmpsb jo dec pusha into xor and frstor loope dec test adc loopne jae xchg cmp and in (bad) pop jg adc out data16 dec push jb xchg pop popf orl test jnp cwtl mov xor sub pop xchg cmp jnp mov (bad) jno lea cmp and in or mov ljmp xor mov add or fwait mov or clc jge or cs ja cli dec stos and je xchg mov (bad) xor loopne jns mov nop insl enter mov xor jo jg cmpsl shlb push mov pop dec das mov add cmp sbb les mov sbb dec je mov cwtl les cmc pop and xchg cs int movsl xchg notl js js sub sbb add mov push push push jl jmp scas fisttp and jne jns stos mov jno aas clc roll mov mov je lret push cmp scas sub sbb cmp jbe ret enter cmp push pop or and xchg ljmp sbb outsb sub std jmp fistpll callw inc aad outsb jmp mov nop add lret and nop stos fidivrl jp movsl decb pop nop cmp test insl pop (bad) mov ds push int3 outsb pop dec xor add push (bad) jb and push adc daa mov ja aas cmp jbe in mov or popf pop into addr16 push je dec add fs flds mov add (bad) fwait aam and sub mov mov popa scas push or mov or mov add fiaddl hlt (bad) ss xchg shrb push lds mov outsl dec pop inc pop fldl fldt push cmp mov sub call add movsl pop test (bad) faddl mov adc je push mov jecxz mov in scas cmp push inc push ss xor stc stc (bad) ds in xor enter adc daa std je xor xchg stc in pop fstpt xchg cmp sbb and aas pop fwait iret test mov inc push xchg mov push sub cwtl pmulhw daa inc xor rcr addr16 dec mov test jecxz or fidivl movsl pop mov add mov (bad) mov add pop ljmp push fdivrl das in call jbe pop mov das stc cmp mov or rorl lods cwtl and mov mov mov push mov out cmp lods inc cmpsb gs pop pop pop or mov clc js clc pop adc or enter xchg mov mov (bad) xor daa xchg sbb (bad) jmp int mov test lock xchg jne or sub inc lods pusha test ret ret mov push test lock das aam xchg je pop jno out dec fwait inc jmp es xorl arpl ss add scas test add (bad) pcmpeqb ja mov mov jb inc (bad) dec cmp shlb rclb xor mov dec call popf pop inc scas or add rorb fstpl lea fst inc stc fsubrs test (bad) not decl js mov sub loop push cmp imul xor push inc sub mov add pop mov and ret insl pop fwait sqrtps ret push mov adc cmp imul std pop (bad) jo and xor dec mov and mov jp cmc popa mov push in xor sbb fdivs dec mov xchg xor int3 mov xchg in sub lahf push frstor xchg lods test jge lahf ljmp es inc cmp ja jl notb adcl dec and sarl test in ja flds inc mov and stc sahf xlat adc mov arpl jmp mov addr16 in (bad) cmp push xor mov cmp inc mov or sub cmp cwtl inc test hlt add sub xor dec (bad) test lcall and and gs mov out dec inc iret imul cmp xchg insl test cltd sbb mov jns ss cs sbb mov addb inc fimull outsl aaa jl sbb clc stc test test jne lret push adc (bad) int3 (bad) jmp imul stos or inc jb mov push or test insl push dec jbe adc xor xchg pop popa repz ja scas xlat gs mov jle es les pop cmpsl cld fildll dec xor insb xor lock icebp mov cmc popl adc mov sub loope jae push lods les mov loope or cli fsubrl ret mov sub xlat and xor mov lcall test negl or or fnstenv test hlt xchg mov fdivp push push jnp push xchg scas sub (bad) add add aaa xchg mov imul in rep loopne xchg pop not jo or adc jno push in sub outsl xchg sar stos xchg mov push jbe shlb fnsave mov es mov fnstsw in add aad pop mov ficoml out push in sbb pop add dec loop notl bound mov add in xchg cmp ljmp lea daa adc add rorl mov les js loop popa mov std inc sbb push cmp jb (bad) or movsb xchg lret cmpsb pushf cli and loop das loopne mov inc mov ds ds jno and add int3 cmpsl leave add adc jecxz or lods inc arpl leave add jecxz scas jge daa negl jae fnop aas test add mov mov (bad) icebp sub cmp xor xchg and ret xor sti push inc mov mov mov pop push adcb stos int3 cmc or push pop pop (bad) aam das scas (bad) dec fs cmp add rcrb insl dec jmp push cmp or mov pop sbb cld cmp fdivs jp mov xchg imul mov push push pop test mov enter sub xchg jne jle cs lret and jb divb fsubp inc mov sahf xor inc add sub push scas adcl testl sbb jnp rol mov cmpsb xchg movsb push or (bad) mov dec jns cmc int jno mov in jb in (bad) jb cli sbb xor pop (bad) mov orb xchg out sbb cltd lret or cmp cwtl xchg stos mov or ja adc out sbb sub jb addl jge sahf cmp jge bound out push jnp xor dec pop imul jp cmp mov inc inc in dec xchg xchg insl cld aaa dec ja imul jno lret (bad) ret and mov cmp fildl push mov sbb xor dec adc mov outsb daa hlt gs or in add adc xor pop int pop pop push (bad) cmp pop ds inc adc mov mov arpl js aaa jg jmp repz push inc leave push cmp pop adc ljmp xor push push rclb stc push and (bad) loope xchg (bad) call (bad) add push dec icebp dec shll ja sbb loopne in aam sub push pusha cwtl loope push sub xor pop lock in xlat aas xchg inc push lods jno jmp or mov bound fdivrl arpl cli jle pop je xor mov add jns,pt push lods out pop out mov mov enter pop stos mov adc add push hlt mov imul sub mov daa or sub test push nop cld pop adc hlt inc adc mulb cmc mov lahf cs daa cmpsb data16 adc sub dec cs mull (bad) push pop adc jns ret xlat addr16 mov scas cmp lock cli or xor adc (bad) mov ljmp rclb test aas push pushf add push dec push lea pop aam add (bad) (bad) fwait dec mov sbb and (bad) out mov in fs andl pop adcb popa mov clc adc sbb (bad) je mov mov test mov mov cmp pause out (bad) and push call imul or inc inc add clc sub das mov imul inc inc xor imull pop mov std or jbe mov xlat int3 loope fs and lods lods fs cwtl sbb xor insb xchg push jb das jnp es aam lret std and loopne test lock sub aam pop loope aaa sti mov es aaa xchg xchg (bad) mov flds pop xor stc inc mov jg push inc mov dec lret and in (bad) cltd xchg push inc nopl mov (bad) lret test cli pop mov mulb sbb out mov sub stos pop inc jns cmpsb mov (bad) fistpll jbe or push push or (bad) subl cmpsl pop rcll dec xchg (bad) imul fiaddl test pcmpgtd mov jge xchg movsb aam sbb push mov movsb or ja dec movsl xor hlt cs push mov out xchg in dec lods lock stos xor xor (bad) jp loop mov lds push mov in fistp mov test sbb add xor inc xor iret or dec mov decb lock xor lret push cmpsb inc and add ret xchg aas mov adc mov stc jne or mov inc outsb jmp int3 jg pusha jl popf es jns leave fild pop mov in in jg sarl xchg enter pop mov cmpsb stos xchg icebp or xorl jmp fs inc dec mov pusha mov mull movsb and mov fstpl les icebp adc rcr gs dec pop adc pop xchg jp jecxz add xor adc icebp mov jp imul mov push mov int3 out add sub mov pop pop in xchg xchg cmp mov (bad) scas cld cmp mov es test icebp pop cmpsb or addl outsl popf jbe cwtl mov push pop xlat into mov push movsb psrld cmp and jp repnz xchg cmpsl ror mov sbb mov push sub (bad) out mov xor add add pusha test add mov subb mov movsl mov jge inc pop jne add pushf xor jmp lahf cmp jmp push sub push lods fisubrl popa dec jae ret or daa xchg xor sti pop add call imul cmp push cmp jle xor push jp aad mov pop es push imul (bad) jb mov andb fsubrl std outsb jmp pop movsl sub mov add xchg xchg hlt inc inc xchg fucomi dec cmp lock outsl cwtl test or mov scas pushl cmpsl sub mov arpl mov (bad) and das call pop mov roll xchg inc adc push mov dec imul (bad) mov sub mov jl ret jmp dec push jnp xor (bad) (bad) mov push mov pop gs loopne or sbb xchg nop dec addl je adc repz jae nop pop and push ljmp xchg and leave hlt repz (bad) lret notl aas fwait xchg add (bad) stc add ljmp out add and mov xorl sub ss pop iret fsubr mov xchg mov aaa rcr cmpl cmp scas mov movsb dec xchg insb sub or jo ds loop into scas pop cmpsb pop fisub bound mov in bound xchg sbb divl imul in add (bad) arpl lea inc fwait push mov inc and (bad) sbb test push push pushf mov (bad) and pop mov icebp lods (bad) xchg insb cmp pusha push mov cltd (bad) mov mov jnp mov push inc lcall dec dec add shl adc xchg pop mov jmp push sbb and jecxz test (bad) rcr push (bad) mov adc leave sarl jle xchg les jns xchg inc sarl loop bound lods fwait aad push in repz jmp cltd (bad) addb sub dec dec xor (bad) cmp ret pop jns inc jge push outsl or and xchg test clc clc lds xor dec inc jns inc stos mov dec mov jp cmc sahf and test dec pop mov sub repnz push stc into int3 add jnp mov bound in mov imul xor sbb and cmpsl clc fnstsw cmpsb (bad) mov mov xchg xchg xor movsb icebp imul insl dec andl aas sbb les fucomi pop cmpsl (bad) pop lea gs cmp cmp dec mov sahf hlt loop shl into stos fistl ja pop mov xchg push in arpl popf popa daa cmpsb lods (bad) loop or add loop call cmpb pop int3 jns call mov fdivrl jb xchg mov sbb xchg cs jmp arpl adc cmpsl pop mov inc enter xchg pusha mov pop (bad) xor addr16 or mov popf mov xor je cli lods mov dec aaa fisubrl sbb ror ss jb pop daa push inc lods popa sahf push int3 mov jg int3 aas dec mov ds clc fnstsw and mov cmpsl addr16 xor mov push pop mov push or xor adc pop inc xlat std std dec add cmpb pop (bad) xchg dec sub enter add sbb call (bad) mov iret stos xor push mov sahf into jmp adc and mov std and mov xchg inc test (bad) clc outsl lcall mov push sbb or mov fs sti out xchg pop lods inc xor into sub xchg jnp loop xor inc push in les mov call fiaddl lea test outsb fdivl and mov adc or ss xchg and scas ja xor mov xor addr16 add aad or je fstpl repnz hlt inc push lret dec lock add pushf mov outsb or stos xor sbb lcall mov xchg repnz out test push cmp fcmovne out xchg loop ret lock sub pop (bad) aaa mov lret inc sti icebp ret sub pusha (bad) and mov loope test pop jle hlt out stos push into cmc enter cmp lods out lods out pop adc xor (bad) mov popa aas mov loop and dec movsb in sbb or jo ret jbe mov cmpsb or fcompl (bad) stc sti (bad) pop mov cltd stc xor adc dec std imul dec mov or adc inc aad sub mov xor mov sbb pop mov add xchg aam dec dec (bad) gs and inc sar xor xor imul sti jae in icebp popa in xor or fcomps fnstcw xchg pop cmpsl movsb jecxz cmpsl dec pop push or xor cmp clc inc lretw (bad) (bad) mov sahf sarb fildll add jno div jo aam sbb std popa push pop dec inc jmp scas sub mov cwtl push sbbb xlat sahf lret pop xchg bound pop (bad) pop cmp fsts xchg or in and int fcomps loope or loope cmp stos add outsl nop ss (bad) (bad) mov into dec scas loop scas dec gs into dec sbbl sub jnp insl or in lret jne dec push (bad) and ss pop mov int cli cwtl xor loope mov mov pop cmp push and test jmp lea test push mov and (bad) pop add pop faddp es mov add pop xchg pop and pop enter dec sahf jbe fisttpl jae out mov gs adc pop mov je xchg jmp scas pop pop mov or pop in fimul mov sbb xchg sub (bad) call push inc out add inc jge xor xor dec mov fnsave sub nop and cmp fdivrp or insb and jmp fcompl in outsb pushl cmp push push mov xor imul adc jge test mov cmp aaa ds inc inc imul dec pop mov jle fcomip (bad) mov bound sub sbb pop fistl test dec dec sub pushf movsl data16 (bad) lret xchg arpl lods nop inc pop ret xchg jnp mov in or xchg je push ret cmc lods dec imul jo jmp sub daa xor ficomp cmp mulb jb stos or xchg (bad) push mov incb cmc stos mov mov add mov sbb fmuls jge aaa pop leave lret jmp push mov xchg mov mov subb xchg rcrb cmp dec out fs cltd js loop andl pop fwait out jno mov cmp mov loop sbb push std int3 enter cmp fcmovnb call cmp scas (bad) call mov add mov enter mov inc adc push mov pusha or mov xchg mov outsb cli testl mov xchg push iret rcll sub mov xacquire jp (bad) (bad) insb jge and mov or add fnstsw gs and lahf repz data16 fsubl lret sub fsub lcall scas mov (bad) icebp in mov int3 mov imul shrb mov stc ret add sbb add push mov pop popf sub addr16 leave ss jo mull aaa mov cwtl mov mov pop iret inc dec dec and mov aam pop movsb popa loopne out dec pusha cwtl out mov daa loopne or adc rol push aad (bad) orl daa cmc sub movsl inc mov in jae shll arpl gs daa pop cmp push and (bad) lret and and mov movsb dec es fwait test or mov (bad) cmc mov dec lret mov lds dec outsl movsb js push sahf xor ficompl ret fistpll jge sti decb imul sbb leave mov stos (bad) rcll mov lret pop xchg orl dec pop je mov cmc test clc and mov pop cmp pop std xchg fmull push (bad) (bad) ljmp lret add xchg sar shr iret js (bad) sub cmp mov add and push pop cs vcmpss sub ret adc cmp lods push aaa imul jne or push adc aad imul rcrl push test sbb fbstp jae daa inc sbb fs jp sahf mov jns sar pop loope pop or cmpl adc push loopne and pop xor push imull cltd aaa mov jae adc sub jae or add shl dec and cmpl lea push in fistl push (bad) jno sbb sbbb inc daa cmp xchg icebp xor inc fwait lret dec jo out push dec mov mov add ds ret mov jae daa in cmpsl shrl inc add xchg sti cltd loop cmp mov mov mov dec imul cli xlat sbb dec cmp adc pop xor pushf mov push out popf pop push or add rorl pop dec dec movsb mov xor xchg cli es mov xchg xchg fmuls test sub in xchg test lock pop lret add imul adc cmp push cs cmpsb push test out gs lods and cmp pop mov cmc jmp mull sbb loope aam insl sarl pop add rclb jg or pop lods cli paddusb insb pop xchg sbb inc call mov test add imul (bad) mov xor pop les jecxz mov pop push cmp add push setns lahf clc cmp add (bad) xor fucomip mov js sub inc das test or add sub icebp les pop out add dec imul dec dec mov add xor push and stc mov out lret clc xor sbb or mov nop jmp insb cmp (bad) stos testl jle sbb (bad) push out pop mov addr16 in inc xchg nop mov add insl cmpsl rorl jle,pt aad push (bad) insb jmp pop xor push (bad) cmp out adc mov cmp in into dec insb pop icebp xor dec pop xor pushf adc popa cli xchg roll push push dec xor ja jnp nop xlat fmulp (bad) shll icebp lock enter pop xchg inc push mov jle scas sbb imul cmc fwait idivl aaa lret test inc (bad) in leave (bad) call lcall test and cmp inc xor fwait out int xlat fs pop mov pop lret clc mov fdivr and repz (bad) fldl2e loope xor inc sbb push dec insl imul lds pop cld mov and dec sbb mov shl out aam pop enter out je aam ja jmp pop xchg push xlat int3 sub xor inc mov inc jmp add add int3 out aaa insl sbb andl mov fcmovbe sub mov inc dec jmp xchg and adc push inc mov push aas add test mov xchg fdivrs mov test movsl push jbe pop jecxz arpl fdivl pop pop addr16 xchg cmp pop xchg loope mov mov add push sbb or pop test rorl cmp adc inc aaa gs dec sbb scas inc adc cld insb insl aas push adcl cmpsl lods orl dec in xor sub aad test call sub push out fdivl jp xor je mov std cmc sbb int3 xlat pop cli mov jae,pn fstps mov jo insb dec sbb gs loope jmp loopne add rcrl leave es mov lods popf mov movsl mov pusha xchg (bad) loopne dec dec cltd lcall sub add clc (bad) and out adc xchg fcompl dec pop inc adcb fcmovne xchg test fmulp ja int ljmp mov sub mov mov push stos sarb mov sbbl hlt nop jp sub subps xor jecxz pop sbb cs mov push popf cli inc sahf inc mov jns arpl fisub cmc pop mull test cmpsl cmp inc xlat mov js pop mov cwtl jl push aas or flds and and imul (bad) loopne lcall sbb sbb mov loopne shll pop inc push into xor dec fcmove out enter imul jbe inc mov je (bad) and nop jmp mov jo xchg stos jp fwait in pop lahf inc repnz int3 cmp out xchg cs data16 fdivrs shrb test inc ljmp or in push push cmp sbb xor or xchg or in push mov in fnstcw adc push push mov ret cltd fbstp insb cmp jp arpl stos adc lret imul mov jbe and cmp int negl dec push cmpsb jmp (bad) call test bnd mov dec fnstenv mov pop inc and push insl addr16 sbb outsb ja cli xchg insl in ret pop and xlat rolb add pushl popa mov jnp adc or or inc inc cld sbb (bad) jno dec cmc push clc lds test or int ljmp inc fildl mov cmp (bad) call inc xchg out mov xchg sti fcomi cltd xor push cltd int jns dec pop lods sub sarb ja xchg sbb cmp mov hlt clc out cmp mov fisubr push fcmovb out mov movsb out inc imul fcompl pushf mov mov arpl ret inc psllw lret dec fisttpll rcr cmpsl movsb mov std xlat push and xorb cmpsl gs stos xor pushf iret inc sbb or pop sbb jns aam sbb out mov lea cltd (bad) push cmpsb add cmc cltd push ljmp pop sub fistl inc stos and into jo in into dec or int3 and iret push adc xchg xchg cmp adc add pop idiv pop pop inc pop adc add xchg lea loop and push cwtl push nop mov pop xor adc clc xlat cmp or loop in lods das push add xlat cltd rcrb xchg daa add dec fs xor cmpsb inc (bad) fistl pop idivb (bad) pop jne ret notb sbb in pop mov shr push sbb jge addr16 ja sub (bad) imul das inc insb xor jbe fdivs sub leave enter mov in adc sbb js shll sub push jmp cwtl insl sbb call push jae xchg jne and push jo xchg fcompl pop data16 fldenv mov cmp (bad) or or adc add aaa push dec sub inc outsb jecxz xchg mov js stc cmc or sbbl shlb mov push xor lods lds xor push xor int3 add cs out ret lds sub pop pop ret jge add jp mov lods (bad) xchg sti ljmp and rolb adc dec push sub add or push int3 lods mov fsubr cmp int3 xor out test xchg mov xchg xor in pop xchg pop sub out and or loopne sahf adc xor jnp insl mov mov push dec mov jge or int3 ds add xchg inc test ja test push enter arpl rcrl inc add nop xor fsubrl je fsts xorl inc mov push push daa adc jge ljmp icebp add xor mov mov dec mov adc cmp cli jp cmp push jmp fstl xor fdivrl mov xor (bad) mov dec xor jno loope cmc push xchg test insb adc pop cmp add jmp mov push dec push sub jne mov or sar scas add adc mov js fsubrp pop jnp sub cmp in (bad) cmp adc ret or xchg sub lea je and xchg mov sub lret out bound or and ficom dec mov (bad) outsl outsl rcll mov and inc sub sbb xor enter call testl test imul sbb testl add add aam and pop cwtl mov (bad) pop xorl jns lds push rcrl cmpsl insl ljmp loopne imul jb xor jnp pop inc cmp iret sub and sbb sub and je lock shrl jl push dec int dec mov sub mov shr push dec xor rorl arpl (bad) adc push in dec mov xor sahf addr16 sbb pushl inc dec dec sub sti mov jo cltd jecxz sub mov clc mov lods ret ljmp inc inc cltd and and data16 pop mov push sbb inc pop sbb shlb inc dec or mov mov dec lds jno cmc add cmp inc fldcw adc nop mov dec sbb (bad) int3 dec dec or xor cmpsb roll or mov add mov loop mov cld cltd sahf mov lock pop adc mov add xchg mov inc mov pop xchg fild xor out pushf fisubr test adc sbb shl mov mov or fdivrl inc jb push adc mov cmc mov bswap loope jge ret dec lds xchg (bad) lock cmpsl adc clc mov cmp add xchg es pop xor mov jecxz cmpsb lcall sbb loopne xchg fistpl pop (bad) aam mov dec xorb sub adc inc xchg out sub gs aas cltd sub in jl loop pop xchg outsl inc (bad) lret adc push daa das aad jecxz mov mov test jecxz adc out jle and push jb inc daa movsb jnp xchg jge in or cmc insl xchg sub aaa rcr cmp push ret fistp addl jae lahf adc subl and jle daa outsl insb dec repz jne mov stos sub pop imul push repnz mov aaa loopne into clc jg xor cmpsl mov inc adc mov fisttpll lods push fs mov jge rorl inc sbb cmp jnp sbb pop pop push pop sbb add cmc dec fisttp mov sahf pushf add (bad) cmpsw or and (bad) rcrb cld jle es popa sub out test int stos mulb adc nop and jle inc repnz ja jecxz jp sub mov andb adc lret sub dec inc xchg or fistl mov jbe jl and push movsl xchg add bound test jns push jns mov and cmpsl jno addr16 jle icebp push jns loope stc add ds (bad) sti out jge push call les loop outsl xor mov stos mov cmpsl adc fcmovu cmp cwtl cmp pop dec dec lahf mov test push xchg mov mov iret jo (bad) or divb sub dec cmc (bad) xor cmp dec into fcomp lods dec insl fild mov fld sti rorl mov jp mov daa ljmp fs outsl loopne (bad) fldt and push xor add out iret and rolb js dec pusha ret push (bad) push inc mov ss or int3 pop fisub insl and cmp into leave cltd adc pusha (bad) pop test sub jg mov in in outsl gs jnp jo aam jmp push loopne mov fnsave sbb pushf inc mov das mov ret xor arpl adcl sar loope (bad) push inc dec mov adc rcrl lea xor ja outsb xchg fisubr int ss push iret out mov pop push je jb mov xor inc and lcall insb dec stos jl pop arpl fisubl jns cmp mov (bad) xor (bad) pusha mov cmp cmc loope xor mov or jmp pusha inc loope xchg and mov les and mov addr16 dec push mov jne push imul and and dec push enter add dec mov arpl cli xlat shr xor je (bad) adc loopne lock push stc add pop arpl cmc xor dec cltd add int3 int3 mov fwait mov cmpsb in or orl xchg jb jge jecxz movsl pop ljmp ja add std xor loope jle push and mov mov mov adc jbe mov push insl cmp jbe jbe push pusha or out cmp inc (bad) (bad) clc fsubrs add mov (bad) pop lahf sbb popf out leave je sub arpl sub or cli sbb repz adc clc sub xchg inc (bad) loope jbe ss xor xor (bad) je inc cld jecxz jecxz sti dec cltd outsb lds push mov dec call jnp sub fild das jb pop sarl cld pop pop iret and arpl xchg inc cwtl fcomp sub out sub sar sub ss out mov cmp sbb fcomip js pop ret cmp dec push adc adc jp cmp testl inc btr mov jge arpl jmp adc fnsave mov ret or push imul cli mov mov push enter xchg mov mov mov fstl sbb mov in mov mov cwtl loop cmp in mov ds out fsubrs xchg jns stos in in add (bad) fbld pop pop imul lea cltd sub movsb xchg adc out pushf jnp shlb mov (bad) add cwtl mov mov cmp dec ds inc jb pop push rcl (bad) bound push lahf addl enter mov imul out cmp movsb sahf or aas cmp xlat ja or insb mov mov insb sbb mov mov jae inc sub leave iret jle rcl outsl push add inc es jbe addr16 xchg inc frstor inc xorl loope xchg stos pushf fcoml push mov cmp imul out cmpsw fbld xor fist inc mov pop add push imulb lret or lock push outsb sti sti ret pop pop dec sti pop outsb adc (bad) xor (bad) (bad) cli xor jl sub lods adc mov and iret cwtl hlt push pop push pop outsl add mov cli std fmull icebp and subb in add adc sub sahf out loope ret out pop xor pushf cmp (bad) psubsb clc pop mov mov movsb dec xchg mov leave jns inc pop and xor movsb jb push loopne shr or rolb xchg mov gs or xchg push push loopne test sahf sbb loop (bad) lock or gs fwait push or imul jae adc and std sbb clc or cmp cli scas fidivl inc scas push adc jns imul ss xlat add fnstenv in nop xor in aas lcall jnp bound cmp rclb (bad) daa ror mov jecxz (bad) pop hlt iret imul das fnstsw jno xadd fstp pop xchg sbb divb mov pusha fidivrl inc push pushf pop mov push cmp les cmpsl sub enter inc in loop outsl (bad) fnstsw lret cmp or bound fldenv flds clc xchg shr cli xor push push adc aad adc or ret repz pushf popa xorl fldcw xchg aad mov ljmp xor adc cltd (bad) out jle fdivrp push loop das add push xor pop fidivr rcrb dec push pop adc adc adc mov jecxz or insb stos stos stos dec dec outsl (bad) jp cli jp iret xchg gs aam (bad) mov push aas arpl dec loop add loope test or xor mov outsl push popa cmp test mov popf and clc and and sbb call xchg ficoml jbe test push or xchg ret jp,pn adc and test stos fsts iret int xchg dec lds sub inc xor clc fmul sub pop mov rcrb movsl xor cld pusha mov xchg xchg inc insb xchg inc cmp divl aas cmpsb xchg stc jo mov rcr lock cmpsl cmp aad shll mov inc ja ljmp mov mov inc xor mov scas and xchg jl xlat (bad) scas aas int or fnstcw mov fadd rolb sbb push fcoms jecxz nop les pop jmp sbb adc cmp pop mov mov insl xchg mov sti cwtl in les jl push sbb inc mov pop xor push mov xor cld and icebp mov mov mov jmp mov lret jg mov sub mov stc jns mov mov mov out fild rcrl push fisttpll add or adc addl xchg out mov rcl mov sbb xor inc stc cs cmp out inc loop loopne es adc push cltd loopw sbb cwtl mov cmp xchg sub pop loope or jbe cmp mov dec js loop add sbb jle pop fisttpll push push or sti dec test mov inc aam mov iret movsl jne adc xchg push push cli insb sbb mov daa (bad) jnp inc add imul cmp dec fstps test jl (bad) mov test ret xor lock mov inc cmp sub jmp sub mov pop jge cld adc push outsl clc scas mov mov and cmpsl cmpsb pop (bad) and cwtl cmp and popf sub push and aaa dec push jns jl adc bound jecxz xchg loopne popa in sub cmp dec pop adc sub ret xchg scas xchg pop xor cmp and push jb inc mov test inc mov out imul sbb mov xchg dec enter jmp (bad) push mov and ss jo lret push sub rorb xchg sbb push shll out adc jno hlt add shll mov cmp lock std lret mov fmulp (bad) shll and scas loopne mov cmp in fsubl loopne push lret push fwait ret push and push mov scas cmp pop sub les adc jnp packsswb loopne dec and dec stc push pop inc inc fistpll or sbb insb sbb jne or dec ljmp jl (bad) push repnz cs hlt mov (bad) inc xor jg int3 aam sbb ficomp add lahf dec rol sbb sbb push (bad) jmp bswap xchg or notb sub or and lea repz int3 (bad) fwait pop int adc pushf xchg xchg cmpsb lret inc cmp jbe into or (bad) dec ficomp cmp mov or insl call fild cmpsl mov imul cwtl mov pop xlat fdivs call fstl adcl (bad) in push xchg cs gs jp mov sti sub sbb stos inc xchg les (bad) sub jecxz jecxz inc fxam add lcall add and xchg xor aas push push sub push add add inc jmp pop dec mov mulb and fnstcw pop jl stos mov push jle test dec jnp cmpsl mov notl dec das cltd sbb fucomip dec fstps enter andl ret (bad) inc add push xor jb mov ficom fistl pusha mov adc gs in (bad) or or sub sbb and shl mov and sbb nop and inc int mov int pop pop sti push ss inc (bad) mov adc sub adc jne lret cmc (bad) shrl sub inc cmp ss mov jo and xchg mov mov cmp jbe in neg xor popf jl test cmpsl daa movsl mov fdivs push xor jb jo (bad) xchg je cli mov fisttpll sub (bad) loope cmp out ds pop sbb mov ret xchg jbe test ja (bad) idivl mov jne ds insb or and test cmpsb jne lods sahf cwtl push (bad) sbb mov mov insb xchg inc sub and sbb nop flds jae nop jbe sbb mov pop jge push mov mov je jno pop into sub cmp int lcall repnz adc jno xor cld dec mov shrl jecxz dec stc mov arpl mov dec mov cs in xchg sub adc sti pusha and sti iret push mov add add jl out and les cmp out mov xchg cld push fadds lahf cmp pop scas pop mov popa movsb mov mov mov xor push xchg cmp mov aas aaa ss push pop dec add lea xchg push adc dec xor jecxz repnz fsubs ret add inc sub cmpsl rcrl cmp inc lret jnp pop sub fsub mov xor and pop xorb out dec or in xchg fwait sahf or inc call mov in adc pusha mov xor stos mov fiadd stos xor out mov negb arpl (bad) pop dec xchg je jno lcall in xchg movsl sub dec std push mov dec stos adc addr16 popf aas std lret push xchg imulb push jb mov mov sbb jmp outsl mov lods mov mov repnz movsl es mov dec xchg jmp add inc cmp roll loop adc mov stos repnz or test inc mov (bad) lods fisubl ffreep mov mulb fwait in pusha cmp add inc movsl (bad) jnp es dec jns mov push rcr (bad) push fld ret aam mov aas (bad) pop add pop pushf mov pop jnp (bad) iret icebp insl inc loopne inc insl stc das cmp popa cmpsb (bad) lret push jb push sbb or sahf push lods push sbb or pop loop ret jmp stc subl ja sti scas dec andb dec mov mov or pop ljmp jecxz (bad) popf mov dec xchg mov inc fisttpll and aaa sbb pop outsl sbb lcall fidivrl pop iret fcomps xchg das sarl mov ret (bad) lret out mov mov xchg adc inc mov add sahf aad repz jmp fsub ret loop fmuls in sbb mov int3 test inc dec xchg fdivrs xchg inc xchg sbb ret cmp add fwait (bad) cmp ja inc (bad) (bad) outsl dec sub (bad) or mov rolb sub add xor push pop adc bound out dec aas dec fxch cli loopne shrb arpl pop mov aaa (bad) cs (bad) dec std sahf lret imul out push imul nop popa mov pushf xchg lea add pop xchg push nop rcrl and ss sahf repz aam stos cld icebp gs mov push imul pop cwtl enter mov sarb (bad) or sub jns inc js scas jecxz lock (bad) cli out daa repz imul iret add xor (bad) out mov fnsave fwait sbb cmp and dec icebp imulb fisubrl sub xor test into add mov add outsb push sub ss (bad) jne xchg adc inc jbe arpl push iret push in mov pop xchg add xlat push sub popf pop lock sbbl js mov mov jae or lret mov stc pop pop sbb bound xchg mov scas fcomp push ljmp push mov mov cld shlb xchg push cmp sub inc jae out ffree mov dec hlt es icebp cmp dec insl daa ljmp push sbb push sub add js mov shrb inc test mov add and or dec inc push lret xor lahf xor movsl fiadd test adc xor mov sahf mov (bad) outsl add inc xor pop adc ljmp and inc jo into aas ss mov or into jb xchg int3 sahf push push je lods popa xchg and inc adc jns and adc fldenv jnp stos xor int ret inc lahf or icebp mov mov test push pop cmp mov and sub inc cmc dec add dec or cmpl adc mov nop pop or out pusha gs pushf pop inc rcr cmp insb test lret int3 stos aad add movsb je dec pop cmc jbe fwait push fnop cmp mov lret sub icebp out inc lods mov mov mov popa rdtsc inc mov in sbb add sbb mov jbe ss cli out outsl push push leave jne jbe in add push daa lahf xlat inc cmc movsl es mov mov fcmovb test dec into sbb in xchg rclb sbb pop or pusha fsubs pop (bad) enter xchg divl sbb icebp sti cmc cmc subb mov movsb mov mov bound mov in or xorb scas cmpsl push jl or outsl mov mov ds push insl cmc mov sbb mov jae mov xchg (bad) adc add pop arpl xchg fs mov fsub or mov push xor mov pop push test push and mov mov imul fs das imul cs jnp jmp xchg adc fidivr mov out push daa in mov or or xlat ficoml (bad) xor sbb pop jne inc sbb pop lods xchg push fbstp inc insb gs inc popf fidivrl mov xor fldl sub mov dec pop mov xor ja scas enter (bad) int3 sbb dec or adc psubusw pop stos fisttpl or xchg and rorb pushf (bad) mov push mov aad stc fnstenv adc ret and push fisttpll cmpl add xor mov js adc push ljmp sti aas gs jp and aad ljmp mov pop cld loope arpl rolb repnz cmp addl aad subl dec addr16 fsts push out int3 jae in jmp dec xchg inc and (bad) out mov cmpsl cmp mov loop aad or jno fisttpll mov inc cmp mov iret loop xchg out and and mov movsl cli pop inc adc movsb adc (bad) jne or mov cmpl jo push in jp,pn (bad) adc xchg es jbe and addr16 (bad) lods (bad) jo sub data16 or ficompl loop rol rcrb fsubr cmpb incl cltd or int jne mov les and fmulp push and xchg mov out mov sub inc push les ret dec repnz incl repz loop inc (bad) std mov jl fwait xlat scas (bad) mov fwait inc test sub xor aaa adc jge imul movsl mov mov mov push pop and daa cwtl sbb arpl xor add lods inc mov dec xor inc les mov mov add jns mov dec fistl dec in aas (bad) and ja dec mov xor aad jnp inc jl xor lods clc adc sub mov pushf int3 (bad) mov inc dec cmp or push inc aam inc imul mov cld addb xor add call push xor lret cs mov sbb notl pop outsl jbe fiaddl fwait int3 jl cmpsb out stos jl xor jl insl inc xor das push repz enter xchg insl mov pop call outsl jo scas mov push mov in mov add mov pop cmp daa test inc add add mov sub or mov or dec fcomps pop xor call cmc imul inc into mov or es outsl rcrl mov jns js add mov ljmp iret sahf and cmp insl (bad) or clc aad cmp daa push jg xchg sub (bad) std flds rcrb mov cmp xor push aad fsts jecxz push pop scas cmpsl push repnz push pop push add scas out jl pushf (bad) mov cltd (bad) and push outsl mov sub test mov push mov sbb in mov loopne lret jae popf inc sub xchg in shrw (bad) icebp cs outsb push lret cli flds out (bad) cmp int3 mov lods je xor fdiv stos push jbe aas xchg pop adc lret jb push xor or mov sub enter es leave pop in xchg inc sbb cld pop sarl mov lock mov test fstpt sbb lret mov add mov sbb dec add or js in lahf imul inc or mov add push jbe mov dec xor jne mov insb shrb or cltd mov push xorb ret dec or rorl mov mov adc mov inc vminsd push lahf xchg xor fsubs int inc sub (bad) jno ds aam push jb hlt mov jmp incb xor popf xor imull xchg or sub sbb addr16 inc (bad) or inc cmp fmul cld push and adc push xchg mov or jae std jb or sbb xor mov das out test xchg psubusb cmpsl pushl jg inc sub cmp ss sub push xor fwait cmp mov pop dec xor int jle gs push push dec cmp mov push pop jno dec nop dec push jge pop or nop jge jle pop fldt pop cld jne add mov (bad) ljmp dec sbb push fwait cmpb add cmpsb ljmp and inc cmpsb inc (bad) mov jge jnp dec or xor ficompl jbe int3 sbb rcll jge inc clc mov xchg sbb stos dec mov sub and mov dec dec jecxz (bad) testb aad jge fstl enter and out in xchg fiadd mov pusha push push je and rcll sahf mov fmull and dec aaa mov imul mov fidiv push fisttpl inc shll sbb scas cmp and sti push popa and movsb es hlt insl jmpw and mov mov push or scas rorl push push fisubl sbb cmp fbld js sub mov std sbb jne sbb xor jg xorb lahf dec jb (bad) add mov cmpl jp data16 fwait ja jns cli dec pop inc pop andl push hlt cmpsl cmp push inc mov inc add push addb inc stc mov nop (bad) movsl in push loop negl fdecstp sub pop rcll dec dec push fcmove or adc sbb mul mov push mov push mov dec lahf add sbb aam xchg inc clc adc jg push inc sub xor cmp movsl push retw mov push xor vdivps fildl push mov in sub mov jne jle xor dec fidiv mov insb xor push adc push dec push cmp xchg cmpsl lcall xor divb inc divb aam rcrb dec push in cli sbb js sbb xchg push aad cmpsl xor xchg data16 sbb push ja jns cmp inc out and dec dec out aaa in cwtl mov fdivr cltd adc pop mov hlt adc and and fs (bad) (bad) or pop xchg mov cmp inc xor mov scas xchg and pusha mov pop mov insb adc dec int mov gs pop imul jg cmp rorb movsb daa jp push and rorb and std mov lock mov or cmova jp (bad) aaa aad (bad) in fsubrs add mov xor insb adc (bad) aas add adc mov jns and gs js mov pop push dec mov ds mov je ja (bad) jns insl in test and sub jae pop rcrl arpl je and dec xchg aaa pop mov fisubr and mov mov call lret xchg rorl adc je test arpl aaa and push es imul pop add push insl jns int loop cli lods cmpsl in jb and jne subl jne (bad) sub or adc fwait dec jecxz out cmp inc sub orb sub xor stc or add popf mov insb inc mov movsl jb mov sbb (bad) clc add and dec sub cmc jae pop pop sub xchg pop or jns in stos jns mov test adcl mov pusha out scas fs cmp inc outsl out pop push bound or adc pusha test jle pop (bad) sbb mov xchg movsb push xor pop inc jecxz xor sbb push fstpl jmp xlat iret xchg jae xchg sbb neg xchg ret sti cmp stos frstor jmp sbb shl fisub dec and xor (bad) or daa addl sarb inc inc lcall insl sub stos mov xor js dec jo in xchg ljmp in or sbb and leave jne sbb mov mov dec daa sti dec mov ja addr16 cld adc pop into rcll into xchg push fimul mov push pop adc enter jo icebp jne je (bad) sub mov or xchg cmp cmp hlt xlat into cli push cmp jne,pt subb push jmp xor cmc (bad) lock xor incb mov insl mov mov add out jae pushf mov sub lret cmp popa icebp clc iret ret sbb inc sub inc xor xchg or sahf add lret and cwtl call adc sub mov (bad) (bad) jno mov subl bound inc mov add test cld pop (bad) inc lahf inc and mov out jbe (bad) fsubrl je push movsb and sbb iret push mov cmc or roll xchg iret jo mov mov cmpsl (bad) adc push data16 pop rcr lret icebp fsts lds movsl loop fwait aas idivb enter sub mov push cmp mov inc sti test sub push rcrl mov dec or cmc inc xchg bound adc xor cmp inc loope xchg push pop mov mov ljmp je dec sub dec mov out push pushfw cmpsb jne fcoml adc xor push sub dec call or mov xchg sbb cli not jnp or dec xchg jne stos mov push aad stos fwait pop das adc fs hlt push arpl pushf adc icebp (bad) sbb (bad) pop imul and jno fs add or adc push jmp dec ud2 jne pop mov push xor lods scas inc add mov test and lret pop xor dec cmpsb fdivrl inc fstps mov or xchg out push hlt lret mov (bad) cmpsl popf inc imul lcall pop aad cmp das fucomi adc jl and daa call rcll cmpsb mov pop or sbb and int3 cs (bad) lock xchg addl fadd xor pushf test outsb insw insb aas lods lock sub daa xchg fmul inc dec pop mov inc loopne mov sbb push (bad) and and fucomi xchg fisttp (bad) ficomp inc mov sub (bad) sub jae dec xchg mov dec sub lcall jae dec jg jge (bad) push out jle loope or enter hlt outsb jns lds stos test out jbe inc aas dec cli adc lods or jne sbb xchg fstps (bad) insb lcall (bad) ror jge in or lods and mov mov xchg mov mov xor mov xor daa sbb flds (bad) scas inc sub cmp or ds dec inc fmuls mov outsb ds lret lock push pushf jp mov jp data16 and ja xor xor xchg or push pop ljmp cmp inc xchg mov movsl sub ret jae mov add push orb daa dec xor and xor jmp sbb cmp in push push push inc mov inc sbb pop add (bad) pop mov and in pop lock cltd jnp test adc sti out lods inc cmovae jle mov sahf daa push stos xchg dec jns add sbb mov inc call (bad) mov mov cltd sahf dec xchg push adc mov (bad) mov fstpl mov ret push xchg inc cmp jbe or sub test mov outsl mov imul hlt ret test push out or mov add sub pop push xchg cmpl add sbb push cmp cmc push rolb rorl lret jge int3 scas push sti cmp xchg dec add daa loopne and pop and fiaddl xchg data16 (bad) pop add mov dec int3 fwait pop mov cli add js lret add cmpsb lock xchg mov xchg xlat mov push adc cmp iret movsb pop test mov punpcklwd xor jo jne jge test add dec repnz ret cmpsb pop int3 adc add in ret jp pop push add jne xor xor xor dec stos mov jmp scas loope cmp xor or adc xchg inc inc hlt sbb test push add mov push inc inc std rol test in inc lcall insb and (bad) jnp sub sub clc popf jp fsubs xchg das cmp pop lock call pop cmp mov push (bad) or lock fs push leave jge lods shr mov xorb push aad or ljmp dec fistp popf scas add cwtl fisub loop jp xor push mov xor mov pop lahf mov out xchg or push xchg (bad) mov pop mov dec (bad) xor mov cmp mov cmpsl mov adc add push mov xchg enter xchg adc fistp inc nop jbe fbstp sbb nop in in cmc sub sub sub cmp dec push fisub mov inc pop imul adc adcl push cmp sub push js cmpb push rcrl push mov sub loope lcall pop pop xor mov mov divl fldenv sbb adc mov out cmpsb test clc inc cmp dec pop and xchg or divl pop mov or cmp jmp imul push add or jg pop popf or xchg scas dec rcr lret mov adc sahf adc inc mov sub sbb lea sti adc (bad) loop bound or mov and sbb or ds sbb rcr fnstsw fucomp fucom das ds cld mov inc repz inc mov mov dec cmc dec sarb outsb lds and sbb cmp or dec add sbb mov xchg pop (bad) cltd mov jg inc stos lds jne jne mov bound or mov adc aas sbb stc cmpsb adc sub jns sub jbe movsb push xor loopne lret mov mov (bad) icebp cld shlb sbb cmp das rcll mov mov xchg js pushf int3 leave dec sbb add (bad) enter aam adc enter movsl negl jecxz out pop dec dec mov into scas not push xchg or int3 inc mov mov adc loope jns push mov sarb cmp jle mov cmpsl pop out sbb sbb inc divb loop mov icebp pop rcll mov fdivs fist cltd xor xor ss inc std fisubrl je (bad) es arpl add andb jg pop out stos xchg push push push add inc fs pop int aaa xchg cmp pop test hlt in mov imul push (bad) fneni(8087 sbb add pop cltd and push ljmp dec imul xchg push sbb xor cli pushf push outsb lock fwait (bad) cmp sub mov jl sub lods setbe ds stc (bad) dec insl xchg cmc inc inc jecxz imul popa or pop mov cmpsb xor fmuls addr16 cmp push jg (bad) cmc insl sarl lret (bad) dec push xchg mov jmp pop daa pop jecxz movsl mov sti mov add cmp pop pop mov push fdivrl lahf fcoml xchg and sub data16 mov call ficom and and call inc aas pop ds or scas ja adcl dec fisttpl jecxz xchg push stos cld jge mov xor dec loopne mov sbb cmp fchs inc xor inc cmpsb or jg adc lea pop (bad) fiadd pop lret fiadd test sbb mov sbb aad in pop push mov cmpsl mov push repnz mov les inc lods sbb pushf adc aas cmp mov fs dec xchg sarb sbb xchg repz in mov leave jge data16 sbb pop (bad) cli popf dec scas jmp adc and push aam out pop mov xor frstor das rcrb in out mov aam xor mov (bad) cmp mov jnp outsb mov leave fnstenv adcb (bad) ja dec movsb aaa fistpll pop paddsb mov js mov nop repz out in fistl loopne mov aaa mov in (bad) ret push lcall push int3 mov out (bad) aaa add sbb test lret movl stc xchg (bad) sti test or sbb daa loopne or (bad) (bad) loope mov inc push mov pop mov leave movsb iret add sbb xor mov xchg ret rcrl sub cmp push xchg jle les mov aaa cmp rcll dec dec and sub jg mov fwait loop mov repz jbe xchg pop cmp ds pop scas adc jns xor je divl ja cmc stos xchg sbb aam imul jp push mov jo and cltd cmp add scas idivl sub fdivl push or xchg sub or sub je shll mov fidivl mov mov mov pop push fmull jmp and imul movsl cmp pop nopl inc push mov insb les mov mov enter xchg loop fwait sbb inc xor sub out xor jp cmpsl cltd pop (bad) jg dec pop push jae popa cmp (bad) fwait int3 mov nop das bound sarb aad cmp xor in xor adc scas or stc outsl cld cmp or fbstp in fbld mov aaa rcll addr16 dec fistpl xor stos int pop fimull movl sbb pusha mov pop push stos sbb dec out mov sub ds arpl sub sub (bad) cmp xchg mov shll mov out mov cmpsl or fdivr fmul sti rcrl scas add xchg cld mov jge aad mov or stos subl sub out jg xor mov cmp mov std mov aas lea pop sbb xor sbb test pusha sbb xor push lods mov xorl nop or xchg je push test push js sbb dec cmp call cli (bad) fstps mov add fcmovne jne inc jnp sbb mov int ffree arpl or xor in daa mov lods xor dec pop dec hlt inc repnz pop fsts ja imul jbe outsb add xor bound xchg and xor scas stos lods xacquire mov int jl (bad) cmp ret inc lds (bad) jb dec dec push jge xchg mov push sbb add xchg cmp sahf cli add sahf cmp enter cmp in xchg mov insb movsl dec jmp mov mul ret jb sub cld lods mov adc mov loopne test or jl repz xor das mov fsubs add mov jb jle clc in xlat pop and dec cltd fdivr push out jl lods jae adc sub mov and fidiv rcr fnop repnz loopne mov mov sti jo fs je mov outsb (bad) mov lahf push adc fnsave jl out adc stc fisubrl imul and into and jg adc fwait pop pop mov lcall test fwait xchg mov dec xor (bad) xor pusha mov sbbb lret das adcb sbb popa test arpl faddl pop test add push sti cs mov push in add adc mov mov lret cmc mov jo sub (bad) or xchg insb mov inc xor lahf push subl sub imul ja es adc js jmp (bad) mov sub imul leave in sbb add cmp mov dec xor cltd icebp mov xchg cmp mov fsubr cmp jae mov adc mov in add loope jo in (bad) shr movsl xor mov out jecxz pop pop lahf popa cmpsl out pop bound loop into pop add dec stos jae xor movsl enter jg cs xor jnp inc fmull mov xchg data16 cmc push pop xor movsb mov mov or outsl xchg jecxz dec and rolb sub inc dec pop ror add cmpsb movl (bad) aaa or xor lock mov cmp cmp mov outsb inc je sub xchg xchg addr16 or xor xlat lds dec hlt rcrl (bad) rcll icebp ljmp hlt std push lock mov js jns push jp add jmp loop mov (bad) imul and jae mov and movsb scas push shrl pcmpeqd lret mov repz in mov in call push popf leave mov lahf imul dec jno ret add and lds es cmpsl imul and ja adc pop mov mov fcmove mov out mov jne jg pop ljmp cmp or and (bad) jno int3 sub push and xor adc pop xchg cmpsb mov das bound add xchg icebp mov rcll add (bad) dec fdivrs dec sbb cmpsl cltd mov adc ss mov out cmp out int3 or ret fildl ja into je icebp sub dec sub sbb or mov lods (bad) out xchg mov or add push push stc nop mov ljmp lcall pop out out dec sub adc popf std push (bad) or inc enter lock outsl cmp in add jg push sbb stc test pop ja cmc pop pop mov adc insb pop bound mov fldenv cltd pop call jae aad (bad) negb popa icebp imul or cmpsl int pop mov stos mov aam lcall dec arpl in clc idiv std out cmp pop into inc pop int3 mov imul in jbe or outsl push mov sub loopne leave and push mov push popa adc iret xor jns mov (bad) into fs jmp shr sarl cmp aam daa jp pop das sbb subb (bad) into adc add scas or lret cmp bound cmp ljmp dec or addl rorl cwtl nop inc inc cmp mov cltd sbb enter mov aad pusha jnp push cmp inc sub add jmp dec hlt inc inc ljmp cmp dec jae sub into lret (bad) (bad) (bad) (bad) cmp or outsl insb inc or loopne in aad sub lahf push sbb adc dec icebp and testl fst daa cmpsl xchg test add adc aas repz in dec mov leave pusha sbb inc lods into sub sbb rorb add sbb inc add imul push arpl pop or (bad) mov or (bad) lret or test push xchg rorb sarl and mov fdivl mov outsl or leave jno (bad) in test mov imul inc pop add call in les clc push dec adc jns inc fidivr into sbb int3 imul popf xlat mov adc inc pushf xchg xchg mov mov sbb imul mov out mov clts addr16 loop jb int imul inc loope or maxps pop ret xorl mov rol xchg or push andb cwtl xor jle xor jmp (bad) or lret insb sbb adc iret mov dec jge jno or rorb iret mov mov pop add stc mov pop mov js daa fldpi xor fwait test jns popf loope push and mov xchg in insb pop mov lods jmp push sbb aas hlt jg mulb lods stc sahf in and ret test outsb (bad) and jmp jb pop and inc adc jbe xor add cmp mov loopne pop roll test xor ss xchg mov push (bad) push sbb sbb mov mov mov xchg fxch xchg push or xor lods loope adc adc push mov jne das jl jg icebp adc mov mov mov in clc imul pop imul ret lret jnp fs mov mov inc dec push int xchg dec jmp lods ds adc jge adcl add scas stc pop loop (bad) mov add mov loope add jmp mov jns jno dec jg jne loope aas and cmp jo xlat imul ljmp enter arpl and xchg notb ds je cmpsb mov cmp push mov pushf dec pop divb cli (bad) jno insl mov push adcl outsb cmovs sub xchg lcall xchg fstl lret out push adc int3 leave pop fisub fisttpll dec mov repz imul xchg mov cmpsb in adc sub insl sbb cs adc (bad) fisubl dec (bad) cmp mov jle mov hlt (bad) cmc nop inc fisttpl lods cmp ret push inc adc jge sub add sub and lea aad aam sbb cmp loop dec loopne fistpll mov fisttpll and fdivl rcrb addr16 mov dec pusha dec fmuls sub lea sarl aaa lret pop in adc js stos mov mov mov lret push mov insl mov std dec cmp dec cltd ficoml iret inc sahf or out (bad) flds xchg jecxz mov imul cmp (bad) xchg push movsb aas arpl daa fmull popf inc mov test pushf imul stos mov pop enter sbb in add les loop xchg imul mov cs inc push push movl popf test in push xchg dec test movsl xor adc inc and imul mov mov push push jle sub leave add mov mov lret cmp and icebp push lds pusha and lds cmp das jae xor xchg or in xchg mov outsl mov and mov das mov je int cmpsb popa data16 in cmpsb stc in mov add pop lods outsl pop dec jns fs mov pusha fisubr cs lds sbb sub sbb cmpsl fcmovu cmpsl pop adc xchg or dec mov jns (bad) scas cmovs add mov insb push xor inc pop push data16 in out ss fimull sub and jl out test shl xchg add cmp rorb sbb xor lea cmp (bad) jnp xchg sbb and mov and fisubl ret repz jl addr16 jo addr16 call mov jp js test inc xchg jbe pop mov cmpsl mov imulb pop rsqrtps and push scas roll mov adc mov add or (bad) mov nop pmulhw data16 sbb loopne in lret xor ficoml imul xor das leave push aam scas adc pushf pop jns out je shrl imul push add ret jns imul and sub lret ja bound out sub aas sub ss jb in sub stos test repnz imull call das dec jp inc cmpsb jecxz and in out jecxz jg xchg dec nop shlb dec leave mov mov sahf cmpb jae push sub cmp pushf aad mov mov jnp bound jo addl outsb jge hlt (bad) hlt repnz pop ret mov adc int push (bad) icebp xor cmp in dec dec shrb pop jp jbe popf pop push sub xor popa push xor adc idivb sbb gs mov fsubrp xchg xlat scas outsl (bad) jns add or sbb lret mov es stos dec sbb push jo xlat xor xor stos stos inc mov jnp fwait xchg xchg hlt mov or sti pop inc add fs lock or xchg mov cli mov test pop xchg jmp std jns movsb ss mov jbe aad xchg movsb pop scas lea into xchg push lea popa test jo add adc repnz daa xor mov mov jg sub mov rcr sbb aas mov fisubl addb popf jecxz int add pop fldl xchg push xor xlat mov ds lcall je add pop xor mov xchg outsb xor push jge testl sbb sbb fnstsw ljmp rolb pop jg nop (bad) iret inc inc fs jmp and lret adc inc jp mov imull outsl mov ficoml sub cmpsl xor inc ljmp xrelease inc or popf mov das jmp pop mov jae mov in cmc cmp and adc inc aas clc mov pop adc add xchg mov mov cmpsb adcl outsl cmp push add rolb jmp add dec not enter lret out andl push fs mov mov adc movsl test movsl aaa mov fs dec ljmp dec push popf push mov sbb ds pop add ret mov loopne fstp stos push inc jbe add xor inc mov and mov bndmov cmp ds std xchg xor jecxz cwtl mov pop out (bad) popf inc mov (bad) jecxz xor pop leave ds ror pop inc enter mov mov cld lahf xor mov push mov nop lcall pop pop xchg nop or sub and dec in cmpsb (bad) in mov popf jnp xchg addr16 xor repz popa mov scas repz jmp add (bad) dec cmpsl outsb aam jmp fdiv or fcmovbe fnop lods test cli or pop jns xor cs mov bound xchg or add push or aam addl adcl adc loop jae lock gs lock imul dec sub rcr leave xlat es xchg cmp or hlt pop or dec xor enter shll int addl mov cmp in leave bswap out xor xor iret pop pushf add xor mov mov (bad) jo mov std das clc mov jae xchg (bad) mov mov hlt loope,pn sbb xor js in in inc sahf dec mov outsl enter mov sub and pop adc out mov and xchg cmp xor pop ret xor cltd orl and inc arpl sahf lret jl and push adc cmp mov (bad) pop and cmpsb enter sbb push lret outsb xchg mov jle jmp dec pop add add ret sub (bad) cmp and jg xor stc dec push dec dec js insl adc into inc inc pusha bound arpl cmp xor xor and or mov aam outsl jge or mov int3 in sbb mov xchg and fs sbb mov xor sub dec movb mov fwait call sbb stos sbb int3 and adc adc aad out ficompl mov std das mov mov not sbb jns iret push lock jo cmp out imul cltd enter inc pop mov icebp ret jns es cmpsl ja out cmc inc aas push lods mov cli cli or fldenv pop test fstps rcrb cmp add jns jae push mov jmp adc imul loop repnz (bad) jnp pop (bad) jbe push add repz jg idivb lds inc jg bound push insl push mov es jae pop inc dec dec or fcomps cmp mov inc mul adc lret and dec mov test dec cld mov hlt js xchg sbb lods pop sub daa mov add shlb stos add pop mov pop aas mov clc pop adc xorb xchg add or mov mov daa ret stc inc imul add out rcl in loope dec jo sub jno cltd cmp hlt mov mov jne stos add test insl fadds mov sbb xchg xchg cmp subb pop icebp loope test sub jmp fisttpll sbb pushf mov dec pop push fdivs sub icebp xor out pop insl mov and sub sub andl cmpsb lock adc cmp nop cmpsl (bad) in es cld push push jg test idivl jp (bad) hlt pop xchg dec mov xlat sarl dec add std adc cmp sub xor mov call cmpsb push push or xchg jecxz lret enter jg mov or jge pop push int pop push xchg out cmp sbb faddl jecxz lods inc pusha out mov rclb dec daa inc mov cmp xor mov and push mov lods xor andl notb in mov pusha xchg and movsb pop test sub cmpsl sti hlt mov cmp aaa js cmpsb insb dec in sbb mov push div cmpsb inc lds mov and mov xchg cmpsl pop imul add into mov ret outsb imul lds jmp fidivrl (bad) sarl mov jae xchg mov push dec (bad) mov adc fldcw xchg fbld adc xor ror js popa xor scas pop pop mov push insl mov aaa enter xor adc jnp jle punpckldq pop push sarb dec inc pusha jg loopne arpl fldl fistpl and (bad) adc imul aam icebp (bad) ja xor cmp (bad) jns mov das xchg inc movsl fs das mov fwait (bad) dec xlat cltd stos fwait aad mov (bad) mov mov ss pop sbb fidivr cmp mov decb gs sbb imul mov push cs sub ds sbb cmp in or cmpsl (bad) std outsb mov mov test mov and sbb dec out add lcall arpl inc mov add dec fidiv xchg xchg mov jmp jno rolb aaa xchg xor rcrb and add mov add sub xchg in push ffree sti mov (bad) (bad) mov and add jmp xor mov inc sbb aaa push jmp loopne sarb faddl ret adc fst pop sbb stos jmp xchg mov mov sub mov addl into dec dec jnp mov sub add xchg sbb dec leave andb mov movsl ficompl pavgb aam mov jg mov addr16 js xchg jecxz adc xor push push push and mov and or rcl mov outsb (bad) pushf mov mov pop sub mov ljmp and xor lret mov (bad) mov pop inc xor lahf shrl xor outsl fwait clc xchg sbb push or scas mov jge pop dec je jo (bad) cmpsl roll insb xor fildll mov out std and leave cmp xchg loop pop add xor mov mov notb lret mov pop std (bad) (bad) cmc (bad) insl mov and aas stos sahf pop mov push mov jns sbb je (bad) push mov xchg jns fcoml in hlt sbb cmpsb ret pop or sti push (bad) call sub call out adc in mov mov xchg mov roll arpl mov das cmp cs sbb out xor bound popf out (bad) mov aas cmovno push lret cmpsl jnp pop jnp inc imul ret inc sti lds aas jp ret xlat fldenv ret and and lahf sahf sbb mov dec inc imul scas sbb stos sub xchg or cmp roll ret in (bad) rcl sar frstor (bad) repnz in (bad) xor rorl xor and lock xchg cmp mov and mov jp in sub add clc lahf pusha popa push je fnstcw or and out loop xor inc mov or js imul mov ss jg mov adc mov add les shrl xlat fs or xor mov test jmp test enter adc loopne jmp loope data16 jae lret out out mov push sbb inc lods push add iret testb cmp lods movsb and inc mov mov add (bad) and cmpl test repnz pop mov daa out lock ret push pop xchg sbb imul pop mov xchg cwtl ljmp mov mov and or or hlt jge mov lds mov das in pushf xchg addl sub push dec leave add mov ds fistp and lods scas adc xor int aam imul push scas mov and ljmp cmp insl or adc arpl (bad) aam call (bad) xchg imul dec rcr rol or lds inc mov into icebp cmp (bad) aad sti mov or pop sbb jne rcl fcoml repnz jbe push mov inc push and lods mov dec cmp stos ljmp cwtl pop cmp push push sub dec mov xchg lcall repz cmp imul addr16 cmpsb popf jbe repz mov cmp fwait or (bad) (bad) cmc pusha aam outsb push icebp fdivr mov rcrb rol stos imul mov xor cli cmpsb (bad) xor push leave fimull mov shrb inc daa divb mov decl (bad) fnop dec dec push mov sbb mov mov dec mov mov xor inc dec mov push jae loop rcrl popa lahf movsb lahf loop fsubrl cltd cmpsl mov jns test es mov mov xchg mov xchg pop data16 pop add add sub (bad) sahf (bad) insl push jns jl negb xchg and in aas push sub xchg xlat mov xor inc cmp out inc xchg cmp movsl sbb in shrb push test adc repz ss xchg addr16 out popa or ret push push mov arpl or mov repnz mov hlt sbb lock mov loope lds stos dec leave repnz jae call fiadd lea pop movsl movsl mov lret fnstcw in and mov pushf (bad) in pop pop pop movsl sub outsl jno xchg insb jo dec sarb mov cmp nop and push out jnp fs bound xchg les pop outsl in mov push (bad) (bad) idivb sbb mov sahf dec inc popf xchg xchg and or pop loopne lods out clc outsl push fidivrl fistl mov cld push dec ffreep and sub mov inc addr16 imul outsl mov outsl out or decl xchg stc sub jecxz push mov pop jl fbstp adcl dec je dec (bad) subb add js imul lret nop outsb sub push mov cltd push dec push test jecxz xor call fmulp push dec xchg jo mov mov fisubrl sub fcoml sti add and pop mov xlat stos pop mov fidivr int3 adc mov push aad rclb in pop call into sub mov (bad) fwait jge cli (bad) in (bad) test imul adc mov (bad) repz xor pop mov enter insl xor btcl or rol cmpsl jb inc mov mov push (bad) out insl sub and adc sbb adc push jae inc mov mov jo fsubrl or cmp mov sub jge or les repnz push cltd outsb push fsubs (bad) or xchg in imul inc sbb nop push imul add xchg adc aam or ret (bad) int mov rorl out add mov and loope xor lret and jge int das add lods add icebp das shll sub andl sub pop push iret repnz xchg sbb gs rclb or and mov push xor or pop push (bad) cmpsb (bad) add ds or mov push xchg xchg inc ljmp andl pop pop jle pop mov adc mulb (bad) pop sub cmc lret adc jo ds (bad) jg jmp and stc xor mov sbb cld add or movsl fs or inc mov lock pop pop pop mov call scas inc or test scas test gs orl mov fs pop repz dec add sbb (bad) les stc dec mov jnp cmpsl mov test es cmc mov xchg lea lea repnz (bad) inc lea dec inc xlat sub add daa dec lea js push sbb sub and jae (bad) cmp sti mov cli in cld hlt jns sub sbb fwait test jo pop (bad) pop xchg insl push cs xchg in pop push cmc and mov mov sbb pushf and cmp call jl mov pop push lea lret cmp ficompl mov push jb dec insb imul pop jns push and pop int3 enter scas mov sub pop test add or lods xlat outsb imul mov loopne clc dec sbbl or and pop xlat std test std push ljmp jb ss sub addr16 jbe cwtl icebp cmpsb fisub nop xlat cmc int sub repz xor gs jp mov (bad) js fs fisubl les or inc je stos jae inc pusha cs cmc jecxz and mov dec add add iret fldt aaa scas inc or js and xchg nop or imul aas (bad) cs ud2 cmovbe pop mov mov jge cwtl fisubl leave repnz in iret mov xor les fs decb xchg mov insb adc enter mov int xor in cli idivb mov ret lret fldl2t mov andb xchg push ljmp mov mov sahf stos xor pop jns pop cwtl xor inc jbe (bad) repz int ljmp dec jle mov (bad) push and sbb repz pop xor sub (bad) sub stc mov sub daa jecxz push jae cmp cwtl cmp xchg stos fistl pop out xor push stos dec and cmc sbb imul (bad) stc adcl xor gs mov jle jb jns adc insl and incb and inc je mov and in aad es scas pop cli addr16 sbb mov bnd sahf xchg lods or pop cmp aad lret mov fucom test dec into test pop mov (bad) mov push popa sub outsb mov daa dec mov pop pushf inc (bad) scas std push jp leave cmpsb leave mov pop icebp repz int sbb es dec pushf adc hlt cmp mov cmp xchg fs sahf ret fsubl sahf (bad) fnop sub nop push movsl loopne sbb inc xchg in pop test aad mov into shlb adc cltd sbbl nop add mov push test mov xor fmuls lods jae fwait pop push push jl mov push cmp pop add add ret pop test mov aam jne popl mov mov jecxz sub cmp aam outsb or cmp or stc icebp xchg mov leave scas aas jp ja out out nop cld pusha insb inc popl push sbb mov pop cli push leave adc hlt add adc dec jo cmc jg dec sbb movsl jl pusha lods pop fild out es jmp inc insb mov cli dec xchg push sub or or mov adc roll out inc outsb jno jge test xor in fisubl out aad lock pop push jns mov aas jae push pushf pushf test mov lret jmp xor lock out push dec outsb or xor aas arpl repnz (bad) ss sysret xchg push or lcall mov cltd mov adc and push popa ss push mov push mov loopne xchg fwait aad xchg gs xchg xchg vmread imul repnz mov push cli or dec mov push call push xchg loope inc or scas push negl dec into dec xchg rol mov js or or add stos pop out xchg (bad) fcoms enter mov cmp pop bnd data16 stos cmp mov dec test fwait jno es dec cmp test push dec sub pushf (bad) mov jg lret fiadd adc jl (bad) lods adc lret and pop push jnp mov xchg scas adc test fistpll cmc mov jmp xchg jecxz scas mov dec pop sbbl test xor add inc sbb (bad) mov mov ret int and faddl pop push mov push dec das add mov dec cmp lcall ja loope push out es cmp mov and lcall pushf lahf or xchg pop jle adc lods mov hlt add lock jns mov ss aad (bad) or cmp mov stos xchg mov pop cmp outsb or stos or xchg push xor mov lret xchg mov sbb xchg call test mov clc repz jbe pop jmp mov cmpsl sub aaa inc mov test push subl inc mov into mov pop lret dec out movsb fidiv xchg hlt int3 stos inc ret mov in dec sbb jmp out sahf jno dec (bad) pop sbb sub lods call pop mov sti (bad) fisttpll and popa lods xor sub aam mov aad mov stc pop dec jo sti xor sub sbb sub push enter push adc xchg test sub xor and cmp ja xor mov mov push xchg jo arpl scas push dec add dec scas iret cmp es frstor dec mov cmp data16 out pop mov inc and jnp cmp or inc lds mov pop jnp cli in xchg iret add add repz je and rcl mov push push inc dec inc pop mov (bad) jl mov inc mov call mov xchg dec movsl jne addr16 jno push and sbb xchg les rorl out mov imul push mov mov jge push mov jp repnz xor je data16 xchg mov ret xor imul or imul or fisubl loop std shlb loop call stc pop lea cmp mov mov xchg jno addl xchg lods insl lret lock jns and mov or test xor (bad) adc mov cltd pusha movsl jle fbld out daa xchg popa gs cmp fwait jno lret sti outsb lock lret call imul push pop sub scas movsb rcrb pushf lcall mov mov outsl jg add xchg daa pop lret xchg mov inc mov jns pcmpgtb es xchg fist xchg test inc jge insb (bad) aad test adc or pop mul leave push fsubl std lds push push or adc or outsl inc cmp jno hlt cli dec pop sbb mov mov cmpsb lret imul mov cmp cmp lds ljmpw xor mov sbb cwtl add ret rolb mov lds jp test out push andb fcmovb mov (bad) mov xor ss es inc and dec and push scas mov add or int3 into mov inc shll inc dec jae dec mov rcrb jne insl push pop cmp inc (bad) loope inc pop and sub adc lods push sub pop push push pop out push mov rorb adc mov and lret jg iret scas in mov cmpsl jmp daa cmpsl dec clc lret cmp (bad) out fnstcw nop pop lret pop scas pusha clc xchg fistpll jb cmp adc mov or jmp outsl jnp dec lcall movsl fsubr pop adc xor and cmp test mov push cmp inc movsb aaa add (bad) loope mov and stc dec and es dec (bad) pop push fimul popf sub or and mov jle mov mov (bad) adc xchg and mov enter js test stos sahf cmpsb mov lahf les popf xchg lods int3 mov scas dec sub rolb xchg mov sbb sbb icebp aam xchg push enter mov adc pop mov adc rcll cwtl sub inc pop mov dec test xor jb fcomi jo inc dec mov test adc pop stc push jecxz lret fmull bound ss sti out xchg pop mov jle pop xchg jb pop (bad) (bad) push or movsb movsb repnz cmpsb lock mov inc mull ljmp mov inc or stos pushf or andb rolb stos mov aas movd ret arpl mov pop rorl push daa xchg std or aam mov out fsts mov mov dec inc into lods fs inc and xor cmp cmp dec add lds mov and and inc dec pop in jp mov test pushf movsl dec out sti test dec xchg mov mov mov adc add jns jle fwait jge add jle int3 push mov sub and xor xor int3 stos or (bad) dec pop pusha sbb loop mov mov xchg sti push xlat mov xlat repz xchg dec cld mov lcall ss push test jle inc mov sarb inc enter int sub xchg daa inc sbb out test popa (bad) stos sub fsub fimull clc lret test imul psubsw int outsl mov out inc ret cltd mov add les xchg aaa dec mov mov cli xor in hlt std and rcrl (bad) test cli pusha push pushf loop push or mov push mov jmp fwait xchg lods dec scas das pop adc int jmp xor popf inc bsf cmp popf xchg js faddp adc or mov push pop nop fwait sbb push push mov pop popa and add pusha (bad) mov in sahf jae out cmp orl cmpsb add nop mov pop (bad) push les loop sar add ss hlt aad fsubl push aaa (bad) cltd pop mov lahf loope xor pop jns push out cli stos cs fisubr imul push or or or pusha movsb es notl jg pop push or sub jle scas imul xchg cltd and jae test addr16 test push cs int inc lods jnp enter inc (bad) (bad) dec or int fwait xrelease fwait jmp sub push ss jns push in (bad) pusha xchg dec mov aam inc cmp imul les in or insl mov jp test mov sbb ret sub xchg lret (bad) fs adc pop fadds fimull popa push sub pop and aad ja js aaa icebp mov cmp (bad) call mov xchg and sbb mov or ja pop lret les andb cmpsb sbb mov add jl stos sbb cmpsl pusha push fwait loopne dec sbb mov jmp into cmp test xchg add aas pop cmpb cmpsl and xchg in cmp jae xor stos push (bad) icebp sbb mov clc call fdivl jne xor daa cmp sub hlt clc cmp xchg outsb in repz push jge andps pop jp or add arpl fdivs push jo repz dec mov and test adc shrb hlt rolb or cwtl mov jge xchg xor iret mov loopne lods mov cmpsb arpl es imul jne mov xlat fs xor xchg add into dec lret or movsl sub cmp es pop sub iret out aam test mov jne rcrb shrl xchg fldl xor aad lret daa insl lcall inc mov xor mov jb fiaddl js cmp mov jmp add mov sub repz scas xchg gs loop in sbb loopne jno lock jecxz lahf in mov xor mov cli pop mov adc in dec je pop sbb add adc mov inc adc and roll cs mov insb inc adcl jmp inc or push jl jo insb sbb mov xor and je or cwtl pop int xor xor cld sbb popa mov and add in add jo ljmp add xchg cs test pop sarb pop bound aas mov jge cltd inc popa in push int mov mov fwait sti lret jae cwtl mov je push ret mov mov mov repnz scas int3 mov mov (bad) xchg add adc inc (bad) and jecxz and and pop out sti lahf or mov fwait mov shr pop xchg add ds fpatan divb aad popf xor mov cmp imul cmp fcmovne clc mov clc jbe and sti jp mov lret push ret bound xchg fist dec mov sub mov ror fsubrs dec xlat imul popl lea call pop stc lcall lods sbb pop xlat into (bad) or fiadd mov cld xor mov shl xchg movsl dec js jns push jge stos dec pop xor push jbe mov mov lcall add or sbb sbb adc inc xchg jge jmp xchg mov xchg push jle lods into mov mov push test xor jmp or fmuls pop rclb enter test cld call push daa cs cmp aaa sub and clc out jecxz mov push dec lcall lea insl js xchg outsl xchg mov add gs sahf mov or repnz stos daa sbb (bad) int (bad) cmp sbb loop push into or cld movsl leave hlt mov fdiv xor scas out ds mov add repnz lods push xor loop mov lock xchg mov ja clc dec test lcall repz sbb popf dec test pusha fidiv and mov std imul jns jb movsl dec push add pop fiadd jnp inc sbb (bad) je jnp fisttpl push ret movsb sub test sahf jp scas sbb cld cmp add adc mov int sbb add xlat sbb fstl std push test push cwtl leave insl mov mov jl sub push in js test adc (bad) jo fcomp push outsl cmp stos iret popa data16 mov cmpsl mov and sti add cmp jle push pop incb jle mov push (bad) jne pop (bad) mov out mov cwtl inc xor or xor adc es add or jp hlt and pop mov sub add mov mov sub sbb bnd (bad) mov cltd sub divb push or add fwait lods mov and hlt cmp in inc mov stc push (bad) das jb inc pop mov daa ds stos add pop ret jecxz lock mov mov mov aad daa out jae (bad) xchg dec dec popa loop pusha insb jmp lock scas xlat cmc popa call inc pusha clc push jge push data16 sub jns (bad) call pop cmc pop xchg aaa lret mov inc pop inc lret adc dec sbb fdivs or inc mov push rcll daa mov or xor popa ljmp into mov mov xchg sub mov mov in adc push (bad) pop lret add jle mov lcall lock pop test dec sbb sub and xchg mov inc std lds push ljmp jmp xchg daa inc sub std cwtl cmp test xor push mov dec in pushf pop (bad) pop dec into enter fnop mov pop jnp int repz out sbb push and es mov push stc jp movb nop inc sbb mov push es or xchg sub push add jg aam out jo xor jge test push mov push inc fs ljmp adc repz mov push aam test fcmove ja fistpll sti iret jb,pn jae (bad) ficomp inc fist fiaddl imul stos (bad) and mov pusha sbb push jmp push lret (bad) dec dec stc push sbb cmp or es mov push dec sbb and push mov icebp shrb (bad) cmp adc movsl ss mov ret (bad) scas fsts (bad) clc rcl daa (bad) xor xor pop out push lcall (bad) dec mov mov hlt lock sahf lret sahf mov pop fwait xchg and ret imul in and sahf jo sbb pop inc dec out js sbb aam mov push xchg push insb jge mov inc fs int lock pop (bad) in mov sti jge test inc adcl mov jle jmp push addr16 ss addl push mov ja stos notb outsl push mov dec sbb adc bnd jl cwtl sub push inc shrb dec add ret xchg (bad) sbb ret xchg lods jo mov mov test in pushf sti jo lods std aam and outsb orb and add mov lods scas sub jnp gs lds shlb or sub stc nop push cs scas inc mov sbb adc popf add or bound xchg dec pop sbbl jnp pop movsw ret stc and or cli xlat ret ror lods xchg aas xchg xchg adc cmpsb pop sub push popf push inc ljmp jo inc je push (bad) mov push (bad) push lods mov cmp xchg inc cmpsb add in test cmpsb das pop push xor dec or fsubrl loopne mov sbb xor cmc xchg cli test insb clc mov xor push inc mov adc inc enter in addl ffree sub mov repz icebp adc imul into fcmovu cwtl dec std xchg dec and cltd dec insl lods test dec test mov mov or hlt push cmp imul sub pop cltd (bad) popf sub push les xchg pop je inc (bad) jo shrb mov (bad) jmp cld mov out test stos pusha imul xor dec add pop mov bound pop or lahf popa test mov xor aam sbb jge bound mov (bad) pop rol jg loope push pop js dec xchg aad jo xchg enter jnp movsl jp push xor mov test inc jecxz insb mov add lods (bad) adc jge sbb and clc test dec lds inc xor cld and test sub mov inc add pop dec dec ja sub inc mov (bad) ss mov nopl fidivl test fdivrl inc inc dec std sbb clc sub idivb push cmp add jo (bad) insb fbld sub repz jmp jle stc lock adc jnp cmp ret pop aas dec mov out shrb inc ret jl mov pop mov (bad) shrl fidivrl (bad) pop popa and imul (bad) cmpsb or lods push sbb (bad) imulb push adc movsb inc jl inc bswap dec and push fs scas add and cmp dec xor movsb adc test icebp dec fwait mov xchg negl push dec iret mov aad xchg int3 cld xor dec adc mov into xchg imul outsl out cmpsl cmp inc test nop into les mov (bad) xlat nop and outsl dec not mov mov sti mov sub and xchg pop inc faddp aaa add jbe cmc or imulb (bad) loope or test scas mov push pop add pop xorb sbb add loop push repz fs jb out adc lock lea sbb ret jp push daa xor cwtl (bad) xor in (bad) call and lret push add inc and mov add pop sti mov sti out fbstp (bad) push pop and dec in sub xor scas inc and lock adc xor loop mov push adc fucom nop int enter int3 or mov fimul hlt cmp fiadd adc xchg mov xchg adc iret lea bound sbb iret sub sbb sbb dec enter stos std or decb arpl xor xor (bad) lods hlt push fstpl adc cmpsl outsb out nop dec fs in fimul cmpsb jno stos mov and jp xchg int xor xlat (bad) pop fwait les mov mov pushf cld loope push mov cmc cs out arpl fs insl sbb bound cmp push jae out xor xorb pop add stc scas cmp mov ja movsb push jno add sbb jp fnop cmp inc push add in addl adcl pop cwtl jge dec (bad) push or xchg in sarb cmp pop imul cmp xchg and xchg pusha (bad) cmpsl or dec xchg cs xchg (bad) xor test outsl jg flds fisubr test je les cld cmpsb test sbb icebp inc mov rolb add aaa jb cmp push or cmpsl push movsl dec xor mov lahf fstl outsb or dec repnz cwtl dec addr16 enter push decl cld gs fiaddl xchg orl leave or push inc out add std test aaa push outsb sbb dec insl scas test xor js dec mov push orl xchg adc or or loopne sub ds int adc loope sbb rcr (bad) and adc sub stos out iret and dec lods push cmpb lods mov hlt mov cld sahf push pop cmc dec push (bad) in mov jmp and or jne dec adc clc lods aam mov mov (bad) xor hlt in mov mov pop int3 subl add (bad) lock jg adc jle mov test jp dec shl push or adc les mov sbb mov std jno and imul loop mov sahf out jmp pop mov (bad) push sub in or mov lcall xchg aaa inc (bad) dec cwtl pop loopne pop out mov inc repnz bound out sbb and mov imul hlt xor dec movsb (bad) inc bound std outsl mov mov notb push je fnstenv add fistl cli pop out add enter je outsl push stos daa popf cmp inc mov jne mov mov in jmp rcll in jno xchg push rol pop jecxz repnz push inc push adc (bad) clc jno bound xchg lcall add das mov pusha adc and in faddl xor or into je enter test movsb rcrl xchg push into lds xchg addr16 dec xchg jmp cmp out cli ret sub repnz xchg inc inc add push cmp push and in mov pop and mov in dec rclb sub jbe fmulp insb fwait lock orb test lret or fildl lods jae mov xorl cs lret lahf sub out (bad) fdivl (bad) js mov inc jecxz int3 sub lods add dec fbld outsl jbe das adc inc addr16 push inc loopne in sahf pop ds pop testb sbb sbb in fst xor jl mov aas inc mov jge fistp aas cmp (bad) jmp pop (bad) adc (bad) cmp sbb daa sbb mov (bad) sbb xchg sbb adc cmp rol jae daa fadd inc jge cld insl imul movsl pop stos dec xlat or lret clc addl gs pop sub jle fdivr es in aad mov xor les int3 pop mov sub push enter in loopne nop pusha sub dec out fisttpll hlt mov or movsb push jp nop jge stc push sbb stc stos push es push jns sbb or and xor fsub das (bad) ja and or ss push rol lods dec stc sti cmp fs xchg add and jb leave (bad) mov sbb or js fisttp stos pop nop sub inc arpl mov ret dec (bad) mov je dec push loopne xor nop lds decb sub pushf mov cmc lcall cwtl mov push sub iret jbe or aas sub into mov mov in xchg cwtl insb mov dec sub std sbb pop nop lret popa and popl push push lea in push (bad) aad push scas insl lret cmp inc adc pop xor or divl xor cli push icebp mov movsb jmp aas in mov pop into ljmp inc inc add mov mov jnp stos mov (bad) testb out sbb ja adc mov jae fidivrl fisubl inc inc xchg push lock push cmp loop push loope jecxz pop jbe inc adc or inc push clc insb add cld lret ss pop js aas and ljmp (bad) out add popa sub push xor cmp inc out xchg insb pop (bad) jo jl push es out mov dec (bad) jae push push fdiv xchg or test les out loope inc mov pop mov dec cmp or cmp popa in adc sarb push dec imul and xchg jecxz in fwait loop push sarb sub repz ja mov xchg arpl mov add bnd jno data16 ret sub roll lea mov cmpsb and mov mov and mov lock pop (bad) pop daa adc inc pop lods or inc dec pop jns lock stc mov or lock outsb pop dec inc daa jb mov or imull addl add int3 mov push xorl sub rorl movsb push mov mov loopne sub cmp mov push outsl push mov (bad) mov lea mov and xor pop sub mov fwait mov jb test or aaa std sub jle lret and imul push mov xchg lret push push jmp je lcall inc sub push inc inc inc imul and loop loopne nop jl ret idivl dec pop in pop aas mov outsb adc je xor push movsl xchg ds mov push pop call bnd in mov inc subb int3 xor (bad) pop in sahf inc fiaddl iret dec rclb iret (bad) sub hlt xchg mov insb std (bad) pop popa sub jg fldl jb and jge pop mov into lcall mov loopne xor push cli dec jg lret popa clc adc push rol jne arpl inc fs fstpl jno sub xor jle in gs add push sbb jp cmc jp cmp inc mov jne shrb mov fdivrl repnz int3 ret aam rorb xchg clc adc cmp aaa lcall gs es into push jns icebp sbb and pop rorb enter data16 mov mov fstp je pop lods mov inc or out xchg xchg lds les pop je aam xor mov jp jb mov popa mov cmp sub sahf cmp sbb scas pop or rorb mov inc push aam sub out xor cmp sbb rcll (bad) clc mov loop sub fcmovnu dec cmpsl inc jo lea mov xor inc aam pop movsl add enter inc fldt pop adc jmp movl or (bad) mov xchg sarl mov and jne fcompl hlt subl inc and mov dec push data16 or nop inc push mov jns scas (bad) mov jns mov cmp test movsb shll add call lcall ficom mov enter insl adc jge (bad) ja ficom leave or and cmp imul mov orl xor aad cmp in inc lock fs dec pop bound fsubr out aaa stc cmp loop shrb push sbb xchg mov repnz clc mov sub test incl sbb dec xchg xchg add test pop das addr16 in in sub dec scas sub jmp loop adc mov mov stos jno aas mov inc jmp push add (bad) add addr16 js,pt jae icebp jle inc lods bound ficom cmpl mov sub push inc push mov fpatan imul test add (bad) aam leave in sahf cmp jl icebp jl dec inc out fwait addr16 cmpsl mov cmp scas adc js sub (bad) mov xchg (bad) cmpsl mov jecxz in mov lods jmp popa (bad) repz sbb sub fcmove sbb sbb test cmpsl xchg notb and jae outsl jns imull xchg sbb pop movsl mov (bad) cmp and in pop std add jl lods xchg jne dec dec test xor cwtl cmpsb inc jl arpl lcall inc xchg xchg add add lcall sub xchg aaa cmp subl (bad) add aam stos pop lds xchg fcos in mov shlb push jge cmp jg sub imull sub loop movsl fnop icebp inc jecxz and fsubrl adc lret lret cmc sub and adc or out dec mov aas out mov int pop pop dec sub push add mov jb enter aas push int3 adc je xor mov scas sub mov lret inc cmp cli je int3 mov adc cld lds lds inc roll les ret and loope or push sub pop bound jmp aaa pop inc xchg jno out sub mov inc sub push jbe (bad) cmp dec ds inc sbb mov mov jae xorb dec (bad) into aaa out ds jg cld (bad) movsb (bad) loope xchg (bad) mov leave repz pop mov dec (bad) scas jns (bad) mov xor xchg lcall cltd push cltd push push scas sub lahf mov insl cmp sub jg sbb (bad) sbb xor mov aaa sbb inc mov mov mov int stos push aas loope sub dec mov dec hlt jge stc fisttpll jecxz into out push inc jbe mov mov dec (bad) sub mov dec cmp push rorl pop xor lea adc fisttp cmp ss int3 sbb icebp and stos pop sub cmc xor and dec jbe popa lahf xor mov aas push mov cmp xor mov cmp lods xlat or outsb push jl or fs pop mov ficompl test xchg imul pushf adc lds adc adc xchg jbe lea repnz push rolb sub aad cli push repz and xchg lock inc ror dec mov jno mov jge or mov dec cld sbb cmp nop test and mov iret gs xor cmp nop ret ffree movsb pop ds mov mulb or rol pop (bad) stc add nop dec jb popf sbb insl sahf add outsb cmp enter fidiv js pop push cltd in pop and push pop pop outsb xlat sbb rcll loope cmp fsubrl std push daa inc enter rcrl push adc imul adc fidivl pop jl dec xchg xchg and sub or and push push lods jge xchg jb dec sbb push sub sbb jbe dec iret (bad) cmpsl adc sub sbbb cltd nop lahf mov sbb dec cmp pop cmp movsb (bad) mov mov aaa inc and lds sarl xchg pop xchg in sbb sub dec inc cmp scas das cmp (bad) mov add out sbb jno mov adc loopne xlat cld test jl lahf test dec in popf and pop imul add sbb (bad) (bad) mov mov mov or jge jb es iret negb adc push arpl pop scas fucom fcmovnu fistp xorl push mov mov bound dec cmc bound push imul dec test in loope scas inc mov outsb test cltd jge jp push jae lret adc pop pushf add divb cmp xchg mov lods ja es add dec push movsl adc pop inc pop loope cli add or push sub cmp lds or scas jo xchg shrl rcr and rorb and add stos sub fcmovbe jno pop das mov inc mov push or rolb xchg arpl push xchg les inc sbb ds das cmc jg outsl aad stos mov sbb or fmull mov adc mov lods out mov pop pushf inc jg jge or inc inc test dec jbe hlt xchg and js ljmp (bad) out dec pop mov test mov arpl ds lds push or mov cmc std subb data16 dec pop mov scas push sahf xor scas lods pop data16 stos imull adc lahf sub dec inc outsl je dec dec mov dec das xor and and cmp fstl lcall add ret leave sub pop daa adc bound or cmp xlat and shll add sub inc sbb mov scas cmp subl xor outsl or xchg (bad) xchg mov pop xchg mov in pop icebp arpl lods xor rcr mov dec pushf sub aas jle sbb mov mov jmp mov sub add mov adc mov test sub jno lock xchg popa jae stos mov xor push xchg std pop mov jg jno jge int pop mov std int3 inc xor cmp push aad push test sbb xor xchg sub sahf jb pop cmc in mov mov loopne outsl js mov mov sbb std ret pop ss pop movsb scas dec sub mov (bad) imul aam adc (bad) jmp jns xor dec pusha sbb (bad) dec (bad) cltd sbb dec sub pop insl les (bad) fsubrs divb xchg (bad) xor test test out add xchg das fsubrl inc sbb mov inc cs sahf pop cs inc cli inc out ljmp or cmp xchg sbb fisub (bad) and push mov jnp loop fisub stc outsl jne jecxz push arpl inc (bad) mov mov lods shlb (bad) out jmp or imul and xchg ljmp xor fiadd inc (bad) jge push movsb adc jno jb inc out xor fwait mov push int3 in mov xchg mov sub push or mov popf xor int lock arpl cwtl cmpsb jmp jle cmp jge ret push fsubl mov leave and adc cmpsl repz divl dec xchg xor xor inc push pushf sarb cmp push sti lahf shrb loope push (bad) cmp (bad) mov dec mov test into das (bad) jne lods fsubrp xor cwtl mov xchg xchg incl mov and imul mov inc pop lock in adcl addl test cmp xchg (bad) dec pusha jo add outsb push stos les (bad) mov out arpl sti gs idiv or nop inc loope cmp out mov jl cli aas in fxch xchg aaa out popf pop push (bad) mov jecxz push sub into into gs or or adc jns aam sub fsubrl and jns sub loop scas (bad) ficom cmp addr16 into mov insb cmp es ret aaa outsb push fisttpll inc pusha xchg inc out pop imul sbb ret cmpsb inc (bad) cmpsl cmpsb adc jo mov jno pop mov sbb out sub outsl das ret jl pop int3 pop jbe mov mov cltd adc sahf in xor int3 cmp sub and shll cld aas pop repz rcll xchg aad inc fucomip iret jns int roll insl bound jl and mov or sbb pop mov std lods lds push cmc cmp cltd fistpl int addr16 push sub insb adc pusha mov add sbb pop push out loope push ss fsubrl push xor aad push sbb outsl jg insb inc stc dec cmp add hlt adc jg fsts or xchg rorb push sti mov xchg (bad) incl into loop cwtl xchg ds add adc pop push mov xchg xor lds test addr16 es dec cltd jnp into pop (bad) hlt xchg mov cmp pop adc add mov push pop mov fwait cmp mov popa and cmc push mov aas xchg ds les daa scas sub mov ret ja aaa cld sub jg jmp loopne xor add and inc push nop xor mov das sub stc test pop test js add pop stos jmp stos inc mov mov jge and in sub jle test dec adc and sbb jge sbb das test adc push jns xor stos dec testb mov js inc aaa fisttp jg (bad) pusha jae sbb test xor inc xor jbe mov ds add mov cmpsb test and inc insb mov xor xchg sub sub push (bad) xor out inc loope or scas out jne adc shll test das cmpsb orl inc mov aaa imul fwait sahf lcall mov addl scas jge int push mov mov push push cmp xchg mov dec je xor nop jmp and mov ror or dec test mov in cmp cmpsb adc adc lahf test push dec xor adc pop lcall movl mov push adc xchg mov mov xor (bad) rcrb push add cli cwtl fdivrp mov scas xor aaa sub jnp cvtpi2ps data16 ja adc pop stos lahf or fwait adc jle subl or outsl xor or sahf cltd clc pop mov push sub out cmp mov adcl xor cmp dec ljmp aad xchg pop in test jns lods sbb dec lcall push mov dec (bad) rcr nop stos cld sub lock sub incl lea stos aaa pop or lods dec xor inc push aaa jnp mov (bad) xor sarl (bad) in xchg add xchg cmp sub xchg sti push lods pop jno jle inc pusha jb mov test (bad) repnz (bad) loop sahf add rcrb xchg insl es repnz and aad fistpll ljmp pop dec or rorb je push jno in scas push js inc stos adc flds in mov sbb or rorb (bad) and push and clc sahf cld sub ret icebp js sti push pushf mov jmp push data16 adc subl and cli pextrw xchg jne jno sti loope inc movsl mov push mov xor (bad) lret jecxz popf test inc pop lods dec rolb and and add icebp rorb push das jg jp cwtl cmp and xlat sub repnz xchg inc jecxz add cmp or fnstenv insl sbb stos cs xchg pop push xor lds inc into out or (bad) xchg loopne lcall jno mov adc mov cmp out jbe out pop fs nop iret clc xchg jg cmp arpl sarb sbb inc iret repnz mov jp sbb push sarl ljmp pop clflush popa shr or fdivl dec outsb sub cmp shr fcomps dec jge and (bad) lcall cli sub clc push xor hlt and sub test (bad) call dec jb inc xchg dec nop adc or dec scas test outsb mov testl xor fbstp xchg xchg jecxz sub std in sbb sbb mov aam stc je mov or ss ja add cmp sbbb jmp cmp xor push pop lods in mov mov lods out cmp arpl xor xor push push (bad) in xchg movsb mov xor popa and lock cmp in outsl les mov sub (bad) fsubl mov inc or sub inc test jbe aam dec jp nop ror jecxz (bad) rcl insl push cmpsb dec dec add aam data16 push sub push push mov aad (bad) jl les bound pop mov push jne mov cmp or stc cmp or cmp fisttpl sbb adc das and and lret mov jnp call bound or jmp or dec pop int pop orl cmp mov hlt stos ret ss pop aas test out arpl jmp lret das repz mov inc test ds lahf mov (bad) or mov sbb out mov imul mov mov js dec imul outsb dec pushf rol inc (bad) adc inc pop jno mov cmp imul in in jecxz dec pusha adc adc sbb pushf fcoms pop xor movsl fst mulb push cmp (bad) scas xor ret fbld push in mov add pop leave mov adc outsb orb lock or sub stc pop jmp ljmp or leave gs mov push arpl mov rcll inc sub cmpsb push popa lea pop inc repz out repnz fnstcw cli imull std sub loope and xchg lahf add pop sub in jo xlat xor jns sbb shlb pop rorb jg out movsb (bad) or inc dec mov rorb xchg aas mov push jecxz inc std xor push sahf cmp outsb movsl movsl out xchg subl cmp fwait sbb add or (bad) scas ja xchg movsl and movl popa pop xchg in jp je xchg in (bad) icebp push inc lahf sbb mov add or cltd mov sahf in test icebp sarb popa adc lea addr16 popf ret xchg adc adc dec adc nop jbe scas ss push jns xchg xor cmp dec push pop dec addr16 ss jge outsb push scas adc ljmp mov xor fsubp xchg cmc int bound and sbb lcall js push lcall and xor cmp inc rorl push inc mov outsb les aas pusha aam loope test daa add jo inc shl fwait iret push out add out adc pushf jg jle add test xchg xchg push sti sbb push xor xchg jmp push cmp fldl (bad) cltd dec mov ds sub push popa xor mov in movsl or mov cmpsl push mov push sbb mov and aad out xchg out test (bad) mov in pop jp adc icebp push stc jne push lret imul mov cmp and xor shlb mov dec outsb in pop pop into les pop cmc push int3 mov rclb cwtl jae cmc je vandnpd dec and xchg add pop mov cli ljmp inc jge test jmp inc stos pop add hlt sbb pop dec push jg std ljmp (bad) repz and pop cli xor loop adc xchg push cs jbe outsl out sbb dec push idivl out adc pop repnz aam loopne pcmpgtb lahf sarb fldcw cmovs into push movsl aas (bad) (bad) call mov jg in in (bad) mov aam add sbb mov orb dec jnp rcrb sbb icebp cwtl push movsb decl icebp movsl movsl enter jno inc cmpsl jb incb or push sahf and aaa mov iret lods push cwtl jbe mov sbb call popa fcomps fnsave or ret pop lock lahf push or adc xchg mov pop jl mov movsl and cltd popf je push xchg pusha and inc sbb lret jbe insl addr16 test xchg iret mov inc fimull rclb sbb lods loop outsb jmp into mov inc shufps pusha or ja stos jg or jl sahf xor int lock ss jge (bad) iret popa ja jnp ret push sbb loopne ror dec push loopne mov loopne mov dec dec push imul rorb add sbb xchg push and pop test repz fcoms out lahf shlb aas lcall ja push pop stos jl scas add test push lock sub int sti hlt stos int fldcw popa sub ljmp jle xchg ficomp mov sub sub fnstcw icebp stc sbb cmp push (bad) mov addr16 (bad) push mov push imul mov mov pop mov sti push lret push mov insl adc inc pushf stos jg ss mov jno mov mov inc daa dec and dec fbld jbe ficomp (bad) cmp das mov icebp outsl fcmovnb cwtl stc dec cltd daa sbb jo lret dec aad mov jnp rcrl push dec jmp rorb mov sbb pop pushf mov cmc cmp cmp (bad) sbb pop lods mov pusha les sub inc xor nop dec lods mov cmp test dec (bad) loop iret push ror repz xor jmp mov ljmp fwait mov mov cmp add sbb (bad) jecxz xor mov add shlb ljmp jno mov (bad) or push aad mov lea jmp lea pop (bad) mov push enter push jno inc rorl sbb pop mov mov jmp ss mov mov pushf (bad) int jge and jecxz push xor push push dec mov xchg dec and cld pop movsl and out bound data16 lahf jb call mov jmp xchg add jns (bad) (bad) xor pop inc popf into adc pop add out enter es sub dec jnp (bad) adc ljmp push test add dec add cltd cmp sub mulb loop add inc push and xchg stos stos lds xchg ret xchg shlb movsl pop xchg and fdivrs lods adc das sub lahf xor rolb pop test cwtd cmc pop (bad) add add insb stos adc das iret cmc xchg test lret sub sar data16 das jp mov pop jp mov cmp mov popf pop lahf imul adc sbb lret je and inc fwait in out call into icebp cs jl stc mov insl or (bad) push dec and fwait sub mov aad pop dec jnp xor outsb orb mov jmp repz movsl xchg add push pop sub jg lcall inc push and mov std test das insl xchg jmp xchg push loope cmpsl outsb addr16 mov out sub mov stos inc push stc sahf mov nop dec mov sbb test sub lret push arpl and pop sub popf and sub cmpb inc sbb scas jne stos sbb inc dec cmp push mov mov xchg jno sub fidivr std es add sub fmul mov (bad) pop aas int pop fbld dec pop cmpsb pop and punpcklbw dec (bad) or sub test xchg jg ret and cmp mov and imul or cmp mov loope pop lret or or lods cmp xor lods int3 jnp cmc in or test push pop sub inc push xor sbb adc push iret cmpsb js (bad) scas xor dec jp mov and add insl out mov stc xchg mov inc push (bad) jbe sbb outsb in mov adc aad fs ficoml ret aam add jns adc repnz or bound das cwtl gs push mov jecxz adc jecxz mov adc fmul aam imul dec fimul push mov lea xor adc cmpsb stos cmp jge pop sub test clc xor bswap pop mov jge lock push jle inc in mov xchg fsubr cmp (bad) mov call pop and cs ret push xchg lods dec push mov cmpsl sbb call aaa iret push or pusha mov jb nop pop leave imul pop xor push fdiv (bad) insb pop incb hlt or push push jecxz push pop movsb outsb mov call sub mov es mov and inc mov lret mov inc pop flds jb fs lret inc je cmp sahf adc pop jge int ret pushf test lret jg pop (bad) mov mov jno jno out mov in ret test fadds add lods je jecxz push test clc ljmp cmp addb ds or test cmc daa daa movl imul fsubrp pusha sti jmp and (bad) (bad) jmp add add (bad) stos pop std push test push xchg movsl fcmovnu jns xor jbe (bad) ljmp nop mov sarl sbb sbb pop pop testl mov icebp mov push cmp addr16 bnd out pop xchg add cmp pop incl mov sub movnti or or dec sub dec mov mov sbb imul adc gs fldcw cltd sub outsb mov loop mov xchg xchg sub push jle inc lock fidivl push pop lods daa pop nop fldt xor imul mov lret rolb stc adc mov inc dec aas aam (bad) arpl sub lods pop cmp adc fs sub cmp jbe jmp fcompl mulb mov btr push push outsb inc ret add movsb dec mov fcompl sbbl test cli jle inc inc sbb mov leave fisttpll (bad) rcrl sub sbb lods je sbb (bad) jo mov jb mov sub lods sub mov mov imul mov jle mov dec pop ret daa push sbb xchg ss and sbb xchg subl cmpsl mov mov mov inc mov fwait (bad) mov jbe faddl dec (bad) sub inc and (bad) lcall sti pop xchg lds add out cwtl es imul inc hlt inc das rcrb cli cld ror flds xor imul xchg out inc cmc lcall and mov mov mov ret (bad) movsl les aad shrb dec mov nop loopne popa mov jecxz or mov mov movsl daa in push or es ret int dec sahf out fmuls mov adc cmp lcall daa mov push cmp mov fidivl push inc movsl mov push mov inc or jbe ja cltd movsb push out add test sbb pushf test pop movsl lahf sbb imul xor aad lods pop stc imul daa pusha lock es xor push jle repnz and addl lret xchg sub jp jl fistpll jl fstpt loop movsb jbe enter pop cltd ret popf out rolb in (bad) cmp mov neg sbb xor movsl scas xor cmp pop andl fs push xchg lret sbb pop aas std and pop mov loope lahf inc mov xor sub jnp xor and inc push xlat add jae gs sub mov out test pop cmp aaa sar cli mov and addr16 insl inc into sbb cmpsb mov mov mov fiaddl and and scas cmp cld fst rclb adc sub add pop movsb sbb mov fmul push xchg loop jmp pop iret js in or mov push mov ret hlt mov pop into and pop sbb enter add dec out daa pushl (bad) loope pusha mov clc sbb sub (bad) scas pop dec int lret cmp jg das (bad) sub push cmp repz xchg cmc fsubl jne std ljmp int mov jnp ljmp pushf xor xchg (bad) orl mov cmp pop xor rep es push xchg pop pop pop inc rcll sub fistpll adc jp into repz mov sbb js dec sbb sub mov (bad) and mov out insl imul cmpsl inc lcall repz lods andl mov sahf mov inc sub cli adc outsb clc cmpsl int decl cld pop ss lock and dec xchg xor sti ret xor in cmpsb dec jo mov test xchg sub push push addr16 cmp mov arpl xor mov pop cmp mov clc or mov js movsl punpckhdq in pop sti sub inc xchg test shrl push insb divb xchg pop test push movsb push mov xor jae adc lcall pop movsb pop push iret lock clc fdivs sub stos mov loop fiaddl jg subl aaa movsb mov mov sub jg add pop mov es and xor fs dec mov cmpsl mov jle inc into addr16 xchg jns mov popf push xor inc call dec push dec xlat notb test les and adc repnz in mov aaa (bad) xor fdivs fbstp dec pop push push push imul leave out pop xchg iret imul out sub insl lock inc pusha xor jge pusha mov (bad) cmp imul jno lcall jnp sahf sahf adc nop cmp icebp aaa mov mov jbe inc and xor pushl lods jne sti mov jo xorl in scas inc out int dec cs shrb jo sub scas lcall orb add sub loop imul xor cmp adc ljmp dec (bad) pop imul loopne,pn push out stos mov sarl inc (bad) mov stc clc adcb xchg ret (bad) fwait push orb pop loopne scas aaa sti enter xlat aam inc jns fidivr lock add xchg and xchg push in jae arpl popf outsl nop outsb xlat fs rclb mov test sbb mov jge call mov les xchg xor ret ror sti mov add ljmp mov (bad) into push xor pushf sbb add mov rclb insl testl cwtl ljmp add push aas dec stc nop inc ret xor idiv and repnz mov mov xchg sub daa sbb (bad) mov mov cld fsubrl movq mov pop or (bad) mov mov inc add stc push dec mov flds cmp jnp int add std dec outsb outsb sub popa xchg pop (bad) push bound add aas add lods out inc (bad) jbe inc mov and sbb flds adc je sub dec ret mov mov mov ret push jae fsubs aas cwtl leave ret jns (bad) in pop je inc cmp push fisubr xchg arpl pop aad dec fs sbb sub imul (bad) fs rol inc loop pop push or lret lods fcmovnb imul push js,pt inc scas aas bound int jnp or push inc lds dec xchg cs adc push xchg leave mov insl testb lret adc pop aaa sub out aas das mov sub dec mov out leave mov jae ljmp icebp adc scas sub aam rcl jb into dec fcompl xchg xchg dec pop cmp sub add inc out in xchg adc cmp adc push rorb adc xchg jmp push addl inc jp push sub test fsubrs xchg mov icebp cmpsl inc lods lahf jge lds mov add push or xor aam sbb sbb fldenv mov movsl insb add xchg movl pushf scas sahf sti sbb je fiadd jo cwtl xor dec repnz out and les push ds push and mov pop mov mov push adc cs mov sub push sbbb (bad) dec stc cmp pop stc xor inc clc pop and call cmp push popf push std sub xchg sub movsb jno lcall xchg bound mov xchg rorb sbb mov aam bound iret dec call sub popf loopne lahf add rcll inc jge aaa out inc pop out dec test jnp lods insl add int3 xchg add ljmp test cmp sub sub xor sbb test fdivrp jne mov add and pop ss lea mov lea sub gs sbb pushl push jnp jmp popf adc xor (bad) mov dec enter push call in cs cmp sub dec mov pop in inc mov jne adc jo cld jg fiadd mov hlt loop lods xchg inc ficompl stos dec out das int sub jnp pop (bad) jno mov test push mov cltd (bad) dec jne cs sub cmp js mov dec dec enter pop ret add cmp jo or pop push dec mov lds fildll aam cmc out scas adc mov mov out xor call mov mov lds push (bad) (bad) aaa loope (bad) pop dec jnp push (bad) (bad) in lods arpl gs sub pop xlat xlat jo pop les mov cli jmp ret test and out (bad) pop push repnz or jbe (bad) pop jge xchg cmpsl mov mov ret (bad) lock mov xor cli out in mov push mov int3 aaa xchg jecxz fwait xlat repz (bad) add dec cmc cli mov in js mov mov pusha subb jne xor movsb add fadd push mov pop dec mull je outsl mov jge or mov cmpsl (bad) ja stc add cli movsb inc repz dec xchg fistpll (bad) aad lret xchg fs ja int3 xchg push add pop pop (bad) pop jo push loope xchg dec mov mov inc test mov adc and push jbe cmc pusha inc jb jnp jo inc cmp ljmp jns out mov jb fcoml scas and sahf orb mov aam dec lret out add cld inc out jne jle (bad) jno xor (bad) push int (bad) mov inc mov sub adc fcoms (bad) fmuls add out fimul out mov mov mov insl movsb stc fstps mov shll xchg data16 jl push test push pop inc (bad) mov adc add (bad) mov andl mov mov (bad) icebp mov adc sbb repz sub jns int3 xchg popf das xchg xchg outsl sub cmpsb jle push mov push adc lret jmp (bad) jecxz stc stos add mov fidivl scas inc cltd lock data16 mov rorl pop mov das pshufw mov sar jmp aas fstpl sub insl jns and notl mov xchg inc push repz pop pop test cmp iret pop fdivrs fidiv cwtl or mov jmp (bad) jne imul stos das rol adc inc aas aaa sahf popl cmpb test nop mov call push xchg jae push mov inc sahf cmp (bad) xchg dec mov push addr16 fsubrs mov push xchg jg ja adc fdivs ljmp mov mov daa outsl out or mov fsts cs pop aaa adc pop xchg outsl cmp jnp mov or ja outsl push inc (bad) mov stos scas cmc iret mov or push (bad) pop popa sbb mov bound mov (bad) mov sub aam aas mov (bad) add jmp push mov jo cmp add mov push jge pop jmp pop jbe add mov add and fisttpl mov push sbb mov cmpsb clc fstpl xor xor pop out push push aam sbb or mov push ljmp lds aas ret sub or mov sbb push testb test (bad) xor push mov jns xchg xchg mov xchg xchg fdivs mov lcall xor shll pop xchg cmp adcl mov pop pop cmp out aam std into xor dec gs mov cwtl stos outsb ljmp mov pop into jb and jnp out mov test xchg into pop imul int3 push and sub (bad) xchg pop pop stos ret repz (bad) out lahf aaa repnz xchg jns dec jns cmp push sar iret or int and pop dec cmp mov jp je pop aam sbb out in sub sbb aam inc inc jno test xorl test mov ret (bad) xor movl int push (bad) in outsl scas cmp in or xchg xchg fidivr stc or adc scas jl xchg pop or fnstsw cli dec cmp push jbe adc dec int mov cltd pop repz popf cmpsl insl jns lcall cmc sar sub jb push inc pop pop xor ljmp jge sub cmpsl sub aam sahf cltd push aas mov push insl movsb dec cwtl push add xchg add ss mov mov cmp add inc repnz jp mov xchg clc sub mov sbb xchg (bad) pop mov imul sub cmp inc cli or andl mov sbb out rol cmp sbb sub or add das (bad) aad dec add lret sbb test es iret pop push lea negl xchg xchg mov adc adc or sbb stos adc fdivrs pop xor sbb movl lcall cmp push ss add mov nop int and movsl mov lret or cltd cmp pusha jnp inc sbb mov mov and jns ret jo jo or inc sbb add negl sub rcll cmp out loop xchg pop and sbbl xchg (bad) insl push imul mov mov negb pop movsb mov fstpt push aam shlb pop sbb jle pop dec ss or inc add pop mov icebp inc dec inc hlt mov movsl out lea imul mov repz cmpsl (bad) data16 lret stc dec mov mov test jp jnp sbb and add push mov push jge cs push (bad) imul test xor ret and xor sarb push (bad) je bound jae test movb lret movsl insl scas je (bad) (bad) inc das dec mov adc insb mov insl push stos jle stc loopne into add leave pop out (bad) scas ret jl pop mov je popf push adc inc mov mov cmc mov or pop fcmovne mov scas xchg iret ss lods xchg adc cmpsl test out pop fwait lds sub stc lcall lods add inc outsb mov test pop pop es push popa (bad) ljmp sub pop subb jbe fsubrs scas (bad) (bad) sarb adc mov mov cli aaa xchg or adc sti les and outsb jae popf inc loope and sbb (bad) adc push jnp pusha (bad) jge into mov cmp iret xchg enter rolb jmp cmc das adc incl adc fisttpll push divb and and push jbe leave mov pop inc push aad add rcr in repnz sahf mov stos xor jle xor lahf inc xchg inc dec sbb xchg loope clc add adc loope sub cmpsb int sbb (bad) test inc idivb pop sbb popa pop inc mov jne xchg aad fs cmp lods out jge add dec arpl mov hlt fcmovne dec (bad) sti push xchg outsb add jbe dec lods ljmp lret xchg shrl loopne mov shll cltd dec jle mov mov repz xchg cmp push adcl push sbb lds dec addr16 cmp inc mov imul mov adc xor je push bound mov cmp hlt jo outsb lret test aas sub call mov mov ja arpl (bad) and add fdiv mov push rcl enter jo jmp push and out je and xor sub sub repnz push sbb add mov scas sbb mov int3 (bad) xlat (bad) (bad) mov mov repz repnz adc (bad) mov sti and enter mov out (bad) sbb sbb xlat add (bad) aas popf fs movsl out sub jl jl pop and jl fdivr xlat mov loopne (bad) lea jae jmp lds repnz ljmp push fidiv inc push dec iret push dec stc mov les add mov xchg arpl cmpsb mov push leave imul mov mov xchg add jb cmc aam je and xchg mov lods arpl push clc xlat bound les pushf jmp and cmp ljmp xchg sub inc sbb mov lea incb enter das cmp sub mov add push push pushf insb adc cmp dec xor ficom mov sbb or mov fildl sahf mov sbb dec add xchg in add gs xor xchg mov mov mov push in (bad) jnp fistl out dec jb mov sub mov orb (bad) out pusha mov fistl push mov xchg cmp inc cmp or or xchg sub xor sub daa js jmp stc mov popa sub loopne mov xchg push (bad) loope popa pop cmp leave in or cmpsl mov testb sbb dec cmp dec adc push push sahf cmpb inc scas lds stos push pop mov mov sarb scas repnz neg mov or js pop pop and inc xchg mov dec test lods pop mov mov xchg nop fdivrs notl scas fwait sti dec pop aam dec dec div push pop icebp dec pusha scas je popl dec xor lahf mov jae and mov pop adc xchg gs aam ret mov cltd sub jle out (bad) mov and mov xlat pop inc dec lea push xchg mov nop out push scas (bad) jle push fsubl jb xor aaa push push cmc lret movsl inc add or inc lret mov icebp pop mov xchg gs pusha mov ficompl xchg ret cmp jg add lcall cmp push dec insl or rclb dec push loop shll enter and ret and xor lcall push fildl mov cmp mov mov int sti or rorl sbb add (bad) or (bad) xchg inc das ret lods push sub jb sub rolb lret mov scas push mov pop pop insb imul shrl (bad) or jg sbb das pop mov andps mov mov adc mov or pop mov pusha aas mov push jno inc xchg add push pop mov add fadds loopne out (bad) xchg loopne mov mov call andb loopne pop (bad) idivb pop in ljmp stos bound ss mov into sti push aas int into rcrl inc dec call je in xchg xor jnp loop rclb (bad) les adc and xor popa popa pop mov neg hlt push mov test movsl mov cs jl adc bound mov out pop sub xchg lret dec int3 cmpsb or pop mov mov xchg leave jb pop ficoml lea xor inc jb and scas xor lret pop push xor shrl lods ret enter adc push cmp lock stos mov adc sbb test jne cmpsl mov ss call outsl sbb in ret mov ljmp test pushf add dec mov xlat push fstps test out mov clc and xchg push stc push lahf sub fistp ja mov dec sbb fsubrs imul fwait popf push cmp adc pop lods cmp cld xor dec push dec insb std adc sub (bad) int3 mov in jns sti mov insl not or inc push sbb lock es daa es loope lods outsb xchg lcall cmp jge sbb loope and fistpll roll add add mov jnp cmpl aaa stos cld and in loopne imul mov mov dec mov xor dec rorl jecxz or pop movsl into and and (bad) pop push lock sub adc sbb std and jb in (bad) mov in icebp cmp dec dec pop leave sub mov or inc adc in push loopne mov sub push int mov out data16 mov loop mov mov sub ja (bad) aaa and pop stos stc push popa cmp inc add cmpl aad or leave adc (bad) pusha shr mov pop push push push lods (bad) pop ret mov sbb das aad dec rcll cmp xchg pop sbb xor jl pop mov dec cli lahf mov xchg pop inc add push cmp sahf loopne addr16 inc sbb rorb pop (bad) aam push inc sbb loopne movl loop xchg insb inc push flds sbb outsl jne in fldenv pop mov testb in popf mov sbb xor imul loope push fwait outsb mov aam sub cmp sarl cs mov push cmp jge bound add push lret adc mov icebp hlt ljmp lods ljmp add orl xor enter (bad) xor pop test outsl add imul out sbb lds adc push insb or jb in lret andl mov and fwait sub jmp or add sub adc sbb inc in loop test pop ja push inc push dec das push loop jb rcll xor rclb mov sbb sbb aaa add adc mov aad mov push dec pop or bound fwait mov pop sbb shrb int insl sti cltd adc sbb push hlt addr16 or adc jne push sahf adc add neg cmpsb jne mov mov pop mov lcall insb daa mov imul adc pop and adc nop xor out shl jno sbb push (bad) (bad) (bad) jo (bad) mov lods or jno or lcall je sub addl bound xchg ret mov fidiv test movsb ret mov jnp push in inc pop aas mov sbb in xor xor push ficom and int mov lret movsl stos es test loopne pop mov jnp hlt imul mov xchg or in mov and lods cmp cs out dec rcrl mov std outsl xchg sub (bad) les ret pop add cmpsl leave aam divb jmp xor xchg fildl pop inc fnstsw movb insb dec (bad) mov in mov jp mov fstpt (bad) loope push and mov adc mov popf add add jecxz mov jbe xchg pop in adc repz adc jb and repnz psubq xchg lret push jge into test mov (bad) in sbb jmp in outsb fsubrs push cwtl js and lahf mov lahf sbbl sbb rcrb pushl fptan jo fidiv mov inc (bad) rol mov imul mov addr16 cmp rcr imul and mov leave into lock sub test stc push aaa push (bad) (bad) xor mov jae xlat repz inc sub std jle adc je dec or sub sub mov bound mov (bad) push cli cmp rorl leave adc cwtl mov adc out hlt nop fxam dec (bad) clc incb das push arpl mov ja out iret and int fildll mov add mov xchg in inc daa into jns mov pop fwait enter cmp scas mov in lock jp pop incl lahf cmc or inc xchg jp fistpll cs fadds mov mov push push dec mov cltd mov and pop xchg (bad) enter cld lcall std inc cli mov jnp fucomi popa mov aas imul sbb shrl aam ljmp adc xchg sahf inc cmp js add and xor xchg loope gs fstl mov imul movsb mov sub xor ja movsl std xchg insb test repz loop test out int3 cltd mov data16 inc dec ss push test loopne lock push popf or std push les mov pop xchg xor out mov inc inc and add inc push insb loope lcall push and cmp (bad) mov and rorl (bad) xchg hlt mov rol xchg add inc or or mov (bad) ficomp inc mov popa daa mov aas or int3 insl imul out hlt xchg mov lock sbb loope or in mov mov cmpsl out dec fnstcw pop shrb jbe (bad) arpl rolb xchg test jb mov jo adc test sbbl addr16 lock inc in adc push (bad) xor lcall test or jno sbb add xchg (bad) xor test mov clc (bad) ds in push loopne iret cmp (bad) push in jmp xchg adc fsubr popa jmp movq mov insb icebp pop pushl mov add inc jmp xor push movsb xchg fstps adc (bad) int pop int (bad) ret into jg nop rol mov insl and stc dec dec pop add aaa xor pop inc icebp jns xchg and mov xchg add cmpsb in mov cmpsl stc std inc idiv mov adc mov into bnd cmp lea cmpsl sub lods iret shl rorl add add lret clc mov xchg outsl xchg sub ficoml sbb imul mov and mov or push push je mov xchg dec ret mov cmp in in js test sbb stc pop push sbb mov mov jl lock and or lcall dec jmp inc mov adc faddl lea xor xchg out outsl enter pushf push mov (bad) jge cmp js jmp sti xor mov ss jp push ss and jg inc idivl fidivr ja push aas inc xlat std cmp scas popf incb push fcompl scas es jns xlat sbb fimull popf lds out sahf pop stc pushf sbb sbb in movsl lods aad mov arpl repnz mov push push pop cmp lods inc mov jno js lret pop sbb loopne (bad) push sahf sbb pop inc movsb sbb cmp stos test js jg imul pop or test nop mov ret mov add test xchg leave xor mov int dec pop outsb mov jnp scas mov jecxz cmp inc fs or test cmp mov aaa loopne pop adc (bad) sbb mov popa rcrb and leave js lods and and push sbb pushf inc int jp mov cld sbb or scas cli imul add jno test aas leave sbb jo test leave mov add (bad) xchg ret dec mov inc lods lock mov lds and adc cmp ja insb mov gs and sub test or mov dec mov loop rcrb les and sub (bad) rcrl negl scas push and inc rcl dec ret or clc in ss adc or in addl pop cli arpl sub pop xchg lods ljmp mov mov and pop clc out cmp sub mov xor pop cld outsl mov movsl fsubl jae adc push in or xor (bad) outsl (bad) xor (bad) cmp or or mov push mov add mov pop outsl xchg mov mov in sub jbe jb dec in jecxz and xor stc call out mov jno cld and dec jmp rol add xor jecxz push adcb mov dec mov (bad) mov gs insl mov in lcall (bad) jge rcr enter lea mov ja mov loopne cltd pop js aas test jae dec mov adc pusha xlat pop mov jnp out fstpl (bad) and jae push inc sub loopne es out lahf movsb cmpsl fidivl enter xor jne sub fucomi xor xor cmpsb lods jno loopne cs lret or fistl (bad) mov jno mov out xchg dec andl jecxz mov push lahf call mov xor push imul (bad) repz (bad) jae andb ljmp mov ss int3 fisttpll dec leave ret (bad) lahf xlat test sub js xor pop push (bad) mov mov es aas roll mov int3 cltd xchg (bad) mov insl xlat fadd cwtl js pop add add pushf fwait pop or ficom out enter or or shlb xchg aas cmp addr16 and (bad) and popf movsl cwtl pop mov mov cmp je add sti sub or in rorl push dec mov jns lret cmp rcll dec mov cs aad cli call adc mov mov loope icebp inc pop pop jno and test push mov outsl push (bad) rolb inc pusha xor arpl icebp or mov xchg sbb nop pop adc sbb adc cmpsb pop loop jno pop push inc faddl jmp loop xor jnp jno xchg mov stc fsubr repz jae pop fcomip pop decb into sbb jb cltd mov jp arpl outsb sbb (bad) push jmp xor push push test imul mov and mov jp frstpm(287 push sub stos sbb or subl mov in sub nop out pop pop mov in fsubrp lret imul and pop dec add push cs push cmp pop dec xchg add addr16 or dec fistl push or fs xchg mov cmpsb rcrb ljmp not out enter jecxz stc sbb sbb adcb add (bad) mov inc cmp mov paddq insb stos cmc loop jbe or pushf stos enter mov lret jecxz cmc iret xchg in ror loopne pop push xlat daa stos adc pop pop (bad) (bad) (bad) xor pop adc test ret mov ud2 and push jp xchg sub push outsl pop lret xchg roll cmp in out pop or pop adc fimul adc adc test xchg adc popa push sub adc insb jo lahf sahf je jecxz sub scas jmp in jmp push sarl pusha pop lahf cld mov jne shr loopne enterw mov adc dec outsb mov inc aam cli sti sar jmp fiaddl movsl sub mov push mov jg or inc jae fist xchg push mov mov inc loope cltd test (bad) cwtl cmpsl test test cmp es sqrtps xor mov rorl ja mov xor sub and pop in push out out (bad) mov cmpsl adc jmp hlt mov popa mov inc cmpsl cmpsl push insl movsb aas outsb pop into pushl orb add iret aad lea adc adc sub push repz mov bound sbb pop xlat fcmovbe add xchg out push inc aas imul icebp mov mov stos movsb icebp sbb inc movsl rolb pop xchg call rcrl mov jecxz shll dec or cmp mov sub xor lcall mov push mov call mov pop lock sub sub or jbe repnz aam jmp insb (bad) les lea movsl push mov jo inc mov push inc jecxz xchg dec inc pop movsl mov sbb xor mov mov lock and jg test pop or stos mov jae (bad) fimull pop in and stos ss or jle mov inc scas shll push dec inc pop fiaddl lahf in sub cmpb mov xlat mov std xchg sti mov jo (bad) inc lret inc adc sbb ret pop mov aaa rolb mov cmc (bad) into xor int popa or push movsl mov (bad) int3 mov sub aaa adc mov lods xchg movsb and adc mov aaa dec inc and adc mov leave mov mov xlat jp sbb push and cmc fistpl ljmp mov mov frstor test (bad) lahf (bad) xor adc stc fs inc cmpsb rcl cmp gs cmp dec lods add jge scas cmpb inc mov sbb mov addr16 repz dec fstps (bad) lfs and inc mov jl mov cmp xchg lret out (bad) nop push cmp sub sub add popa cld and je enter test jb je loopne mov xchg and push xchg test popa shl (bad) and jae cwtl fsubrl jmp xchg leave stos insb add int3 cld pop lock pop and movsb insb rcrl or imul sub insb mov or sbb xchg sarl add jns inc jp cli xchg lods mov into mov inc add push mov leave fstpt gs in push dec mov leave lret popf in int inc adc xchg dec fdivl push repz cmpsb dec adc fmuls test push and movsl xchg dec mov cwtl xor push sahf cmp aas ds jecxz add mov into mov in lcall dec inc and icebp mov mov sar popa and add rol es in pop push xor sub stos xor mov jo imul jg icebp jo sti (bad) pusha jg inc sti and (bad) fldl pop pop push xchg ret (bad) push loop rorb dec mov push jno mov and jge dec pop outsb popa inc cmpsb mov lcall inc repnz insb cmp jbe pop cmp sbb inc cmp aad ja or xor xor cmpsb cmc fwait lcall pop jp dec shrb adc notb jns push out and lret mov js jns pop sbb lods and xlat and out mulb add mov jb lret sbb jo fistl (bad) in push cs cmp in insb mov mov adc jle adcl push jbe cmpsl notl fisubrl int (bad) mov jno sbb enter dec out sub adc pop stos (bad) mov cs (bad) loop xor jge mov das mov addr16 fs mov and stc lea or xor add jle add sub jb push rcrb pop sub and and mov (bad) (bad) lret js cwtl (bad) mov push xchg insl and sbb jae xchg or nop out jno mov xchg outsb mov clc xor lcall adc xchg pop inc mov mov jmp dec rcll je sbb add daa mov orb pop pop (bad) xchg jp movl mov pop fdivrl sub jp jge lret movsb jmp fsubl pop out cs mov push or outsl inc xchg pop inc insb lcall popa cld orl pop jg es addr16 call pop and cmp repz mov mov leave loop leave (bad) sub call push mov inc les ret and iret ljmp sbb or sub cmpsb dec jg outsb push adc push mov pop bound add sub sbbb mov leave cmpsb dec adc mov or push fwait and push and insb push imul push fimull adc dec lods adc mov sbb adc push fadds lret and cmp es sahf jl out sub inc call cwtl lcall cli outsb (bad) inc and push iret mov cli mov repnz in or imul jns sbb or test imul xor fdivrl xchg and in mov push (bad) mov push sub fwait mov mov lret inc add call cli or in sbbl dec cmp adc cmp pop shl xchg enter stos cmc push loope (bad) xor jne imul mov dec cld or xchg arpl movsl push inc dec lcall sbb cwtl or sbb pop int cwtl xchg mov imul mov mov inc mov jl cli lcall or or adc aas leave cmp push hlt scas xorb jg dec das lods mov iret inc xchg fwait cmpsb jl cli subb and and cmp sbb mov loope lods inc dec mov sub ret mull js (bad) outsb out sbb rol dec lds ds mov jne (bad) int cmp xchg out test push bswap add and sarl jns sbb call adc and arpl cmp addr16 sub inc mov fwait jns lret mov xchg sub in shll adc fsub js int pop xchg push xor test jns xor fstp inc jno fnstsw call sub outsb cmp or or (bad) stos shlb and fadds lock daa inc scas scas aam sbb (bad) into xlat aam and (bad) cmpsb enter sbb push inc sbb xchg mov aaa cmpsl push cs in pop mov jne xor icebp jae jle mov pop and idivb shr jb mov push test push (bad) repz push xlat mov mov insl mov dec jecxz lahf pop mov cmpsb inc daa pusha mov jmp mov arpl adc aaa hlt push mov daa mov adc sbbl jecxz mov outsl cmp outsb fildll loop pop adc scas loopne adc xchg xchg lock popa lods pop lods gs mov scas fwait cltd inc and xor daa mov add inc aaa (bad) sub (bad) in add test push flds mov sar out pop xchg jne push notb leave outsl lea inc test inc push jne mov data16 jl cmp stos lea and sub mov daa dec out and loopne add repnz clc sbb or jbe xor and es je push cmp loopne mov push xchg push and pop jecxz sbb repnz lock xlat xchg xor jo push add ja insl xchg sbb orl pop dec dec sarl out mov mov adcb das mov popa cld rcrb pushf call xor xor jns repnz outsl xor mov lods call push xor or test and xor push bswap mov push and pushf ja ret icebp sub or mov adc mov inc or mov jb inc in and or lret (bad) xchg mov rolb test mov out add loopne outsl adc jae cmp sub cmp stos sbb test sahf int mov sbb sub sub sbb iret sarb fmul js (bad) xlat mov lock mov repnz iret divl xlat pop pusha inc imul cli jae mov dec (bad) nop dec fdivl dec clc inc xor xor in add ja loope test mov add bound inc inc into sbb sti daa and cmp mov les popa mov aas call or mov jmp orb ljmp lcall jae movsb sub dec scas in pop pop adc nop frstor sub xor inc adc adc pop into cli mov bts push jo test add xchg sub inc fstps sbb loop fsubs pop mov sub ds mov fisubr pop ret fmulp mov pushw fsub push cld sub (bad) es repz movsb arpl xchg (bad) daa lret test roll cmp sbb adc pop push ret xlat jmp and push and pop out insl inc cltd insb or add xor icebp bound sbb jmp pop mov dec sar add ss fs ss or in pop cmpsb icebp jb ret sti rolb or sbb pop push mov iret jnp loop mov and xor mov lock mov jns scas roll and cld cmpsl jp fisttpll leave sub push cwtl cmpsb add xor mov cld pop dec (bad) jo and lahf inc aad frstor not andl sub inc lahf xchg jno adc cs addr16 xor stos xchg cmpsb inc mov inc test cmpsl jle push jecxz mov mov push cld sub in xchg cmp sub lods or mov pop xor outsb in and adc xlat fwait mov inc push pushf mov dec sub mov test mov pop insl xlat dec stc out inc loop jge mov jge mov and repnz shrb ficompl sahf in push push arpl roll mov shlb cmp popf push or call mov in push adc xor push dec adc (bad) shlb lea add scas out dec sub insl add ret xchg dec stos rcrl mov xchg pop hlt scas adc lret in and imull and xchg mov fadds pop insl mov fmuls sbb xor fcoml dec push push arpl push test cld mov adc sarl lret mov inc add shlb fildll popl ss xchg push jo loop cmp out sahf cmc fistpl sbb mov inc insb mov rolb dec test xor fist fmulp add push sbb aad in movsb sub xchg lods inc insl fisttpl je jmp mov push ja das hlt addr16 sarb stos cmp aas stos dec in stos fwait dec jns mov push sti test lea pop lret add cwtl lret out or inc mov addr16 sub mov lods imul mov xchg (bad) or idivl test shr cmp das push xchg cmc and (bad) mov cmp pop repz mov push addb pop out inc inc inc cmpsl mov pushf aaa ljmp out sbb call int or xor ret sub nop pushf in (bad) mov out sub pop ret fwait jmp lock (bad) cli aad pop jnp out mov jne pusha pop ret aad cmp jb fs insl push or xlat lcall pop imul test inc (bad) lea mov sbb test sar cli imul xchg mov loope mov xchg mov and fsubrl lcall push xchg mov push out (bad) int or lea outsl insb in aas add ror cld stos sub outsb lret test xor mov movb (bad) jg fbstp mov push cs sbb mov loope mov mov (bad) insl cmp push lock notl shrl lret jecxz sub ficoml insb int3 mov or jbe inc cwtl pop push test cmpsl cld sbb sub xor jbe clc sbb iret hlt pop xor jns mov out sub mov jmp (bad) cmp (bad) or jecxz jo xor pop in jp push jmp es push stos sub adc aam pop test mov aas ljmp enter push or or push xchg popa cmpl das cmp push stos or (bad) xchg xlat test das (bad) clc jl pop mov pusha fnstcw nop scas arpl outsb call dec sub js add push pusha xor roll int3 lods lods out cmp adcb jbe pop aam sub fldcw jecxz adc pusha jbe mov into popf dec (bad) je loope imul and test jbe lea sub loopne add nop aam pop jcxz xchg pop enter push outsb sbb cmp addr16 xor lds jo,pn cli pop jmp adc push adcl and mov scas cmp xor sahf pop pop out popa cmp dec or mov sarl sahf adc bt popa (bad) repz dec je nop cmp push lret or arpl mov movsb scas loope add std and mov (bad) fimull sub mov mov push push fsubl sub stos shll jmp pop add movsl xor mov sbb push notl mov cmpsl push incb mov cmpsb out push fcmove loope cmpsl or fnstcw aaa icebp aaa add gs xchg sti jl xor jbe imul mov scas jno xchg (bad) (bad) xor xchg imul and xor dec leave inc add mov into sbb movsb repz (bad) movsb mov mov xor pop cmp mov cltd pushf sbb and hlt xchg mov mov (bad) mov and cs mov js lahf lahf dec ficom orl xor call adc pushf cltd pop dec int3 int sahf sub pop jne fisubl and pop jmp mov or inc adc jno xor push arpl pop cmp mov inc fnop out pop stos add ret mov push xlat xor shrl dec fs lds pop pop xlat jae lahf out (bad) adc lret (bad) es (bad) roll xor xor es mov cmpsl lods test (bad) aam cmp push insl lahf imul or pusha jo fwait push mov loopne loopne dec imul sbb popf xchg jnp in lods mov cwtl bound mul insb jmp (bad) pop notb lods (bad) (bad) mov bound out cld or push or push or outsb jnp lods mov mov cwtl insl jo pop and stc fiaddl jl cmp lahf popf push mov fwait sbb (bad) cmp enter out and pop push inc xchg push jl cmp shrb arpl sbb fpatan gs test ret outsb adc movsb test lock inc dec sti xchg mov sub jge xchg mov call jmp hlt aad xor add lods dec jbe lods mov xor cs andl out or cmp adc loop out cwtl addr16 adc fdiv out out sbb dec jg popf pop faddl adcl inc decb aad cmp mov push je xchg fadds adc pushf mov std cmp or bound xor mov loope sbb sbb xor xchg cmp movsb sbbl pop sub test faddp inc fwait in ja int test push aas mov jge sub (bad) rorl add jmp popf mov jecxz nop cmp aaa jae enter sub or sub bound dec es jo xchg xorb (bad) mov pop ret subl iret test movsb stos loopne jae les xor sbb ds repnz les jle aad hlt sbb sbb adc test jns das out sub test inc je arpl inc adc mov dec sbb lock mov and jae inc xchg (bad) aad ret mov mov cwtl sbb cs ret dec push mov pop xor loope or add and out inc mov rcll in (bad) and push test sbb inc dec inc iret repz xor divb aas inc test dec cltd cmp out pop stos xchg ret fistl inc cmp insb (bad) clc mov mov sbb fistp out lcall mov sub jecxz pusha subl aaa mov push dec sub nop jo lods push imul mov mull xlat sub lahf add xchg cld test jns jae dec clc cmp mov jmp dec cs mov jne mov in cs jnp in mov subl hlt add lcall cmpsb and xchg jno (bad) xor int data16 push rsqrtps pop dec pop sbb jb sub test cmp hlt es sahf test and jo gs push push push inc out subl mov movsl mov out (bad) or ret xchg in imul mov stos call clc mov fs shr xchg loopne inc sub testl inc or in (bad) sub adc (bad) sub mov mov and jmp mov hlt xorb jne es addr16 sbb inc xlat mov cli je lret and mov pop jg in xchg cli pusha mov sub pop mov add mov jno adc dec dec dec popf mov mov push (bad) cmp cltd cmpsl jmp cltd adc mov in sti std dec leave inc xchg sub aas cmp lret (bad) jae mov or fidiv outsb pop jae mov push pop (bad) mov pop sub jb sbb xchg jb jecxz or hlt or add inc and fldl2t dec (bad) test das add insb iret adc and sub sahf stos mov call xor or and test arpl mov scas xchg sbb xchg in arpl daa std adc cld cmpsb mov inc std lods lea add adc or cmp fdivrp sbb aad movsb scas jl inc jb aad (bad) sbb inc dec and mov mov mov mov cmpsl daa repz mov inc adc xor dec mov sbb xchg jp adc repnz mov dec dec adc adc adc jp fist (bad) mov or pop sub add xchg xchg js push add push mov jp mov push insb and push cltd mov push inc push inc out in aas and sub xchg sbb push adc add dec adc or lcall pop inc mov and mov xchg fdivs push push mov in popf sub cmpsl push mov (bad) dec gs and mov (bad) fsubl sbb sbb stc sub adc xor jae daa shrb repnz inc jmp rcrb push sbb add jbe outsl push in jo push inc mov cmp inc es test popf jmp jns insl cmpsl leave mov sbb xorl sbb das mov adc xor dec test mov test mov xchg dec icebp jae add inc enter movsl dec es out inc cltd (bad) pop js fsubrs flds xchg add sub int stos cmp xor mov mov addb sar call xchg sarl jno xor (bad) xlat mov scas mov lods adc lock mov mov cld in jg lods sub cs sbb fsubrs int3 push fsubs lods out scas shll lods nop mov fnop xchg les lds inc sub inc mov push jg popa shr mov mov add mov aaa cmpsl lahf or cmc mov popa rcrb xor or jge cmpsb cmp mov sysret arpl bound arpl insl stos arpl xchg cmp addr16 daa adc cmp lret aad push sbb ja lahf cmp and in loope mov sbb dec and stos sub jae into std jge mov into xor xlat lret test and jp (bad) cmp fcmovb out xchg outsl push dec sbbl cmpsl sub mov popa cmpsl pop shll (bad) addr16 xor in popa enter jae fcoms xchg push jge repz mov imul and dec pop push stos out push sbb add movsb jbe sti mull lea cmp rclb sub xchg int aas stc inc outsl cwtl insb andl push push int std nop xchg in pushf xor dec incl xchg cmp xchg dec int3 rolb and popf pusha inc and add cltd imul push adc push outsl dec and inc out push push (bad) inc shrb cmpsl loope fisub and int3 jg (bad) sub mov and orl fldt mov jo lcall orl stos es int or lret dec loop push (bad) leave jmp sbb test mov paddsw and cmpsl mov or fisttpll mov xchg push addl cmp adc rorl out outsb adc leave int shlb xchg leave lret test (bad) int3 xchg sar incl lea lret test lock mov cmp cs jmp lret xlat mov jb and fimul sbb outsb jmp (bad) aaa (bad) movsl adc mov ss fisubr lahf jne dec arpl push cltd mov insl xchg arpl jne xchg fcoml jo sub cwtl rcll pop push mov (bad) pop xor mov out xchg mov sahf xor push jns xchg push enter or test push popf in and loopne and pop imul xor or add ret enter sbb lcall cmp iret movsb leave xchg xchg dec and mov fsubrl data16 mov sahf fsts aam sbb popa mov lsl scas insl cmc cmc out adc mov pusha scas les emms inc les stos pop aam ds das and pop pop popl loopne lahf cmp ja push mov sbb sub add mov push loope push rolb std cltd decb lock mov inc dec or sbb (bad) jb inc mov call fs data16 push or pop shrl dec dec daa xor sbb bound data16 mov mov (bad) test mov mov in cmp and icebp imul push xchg jns cli dec outsb loopne jne push jno mov in push add jbe enter mov out nop stos cmc fdivl es outsb jmp or or ffree ror loop scas outsb cmp decl imul jae mov jnp mov cli sub scas scas fwait lret mov xor test lock jo xor sarl cmp aam mov and inc sbb adc xor into clc scas stos pushf popa pop aas lret scas fsubs stos pop fistl mov jnp (bad) jns ds mov xor repz icebp data16 jg and cmp cltd xorl test xchg push push mov push dec mov int3 sbb push pusha cmp inc fistpll fisubrl jo (bad) jbe hlt in push aam sub add push jle imul adc lea or dec (bad) ss mov (bad) in mov fcmovbe aad fnstenv cmp push fcomip (bad) lea pop pop jnp movsl data16 mov fnstsw sbbl mov pop (bad) cmpsw push push adc fldenv int3 push int3 mov dec out call add or jo sarb (bad) cmpsb jle aas xchg or jg imul leave mov sti movsb repnz xor add cli push xor mov ds enter outsb aad mov fldcw subl or cmpsb outsl adc sti and insl xor sbb cmp sbb sbb test scas sbb mov (bad) out mov sti data16 jbe push outsl xchg insb lret (bad) inc sub mov sbb icebp jb sub dec and push mov sarb lret and sbb pop or mov test and pusha pusha add mov jno cmp push aaa push mov mov inc mov xchg mov cs mov and or jne mov call push jb jmp and cmp clc push mov mov jb mov and mov mov iret xchg add addr16 mov mov int push or or idivl stos movsl loop rcrb add mov cmpsl adc dec loop daa sub daa insl aas push insb (bad) cmc xor push mul sahf sti cltd cmp xchg sahf and pop jbe int negl cmp mov xor sub popf mov adc jecxz addr16 pop enter stos les sbb (bad) orb (bad) cmpsl popf loop xchg pop xchg pop lret out sbb lods fwait addr16 ss xor mov mov sbb mov ret popf aad out inc mov pop pushf xor dec push mov jmp popf pop push xor mov mov and xchg daa shlb js pop fdivl lahf lods ds cwtl xor xor sub lock inc je mov cmp inc mov mov xchg mov inc mov popa (bad) sbb test jno call stc cmpsl in adc lea jle adc test add cwtl add add ljmp mov push jecxz xchg fwait inc inc stos in dec shr repnz test push (bad) dec bound mov inc xor adc sbb and xchg into lock cwtl cli sub loop ljmp into dec cmpsl mov imul cmp das mov push or lods inc clc pop sahf jg insb ss inc stos push test cmc nop adc cmp adc push (bad) push inc push scas inc pop pop in idivl in add popf xchg loop popa ret rcl rcll (bad) mov insl bswap add xchg fsubl add dec nop aam lea sub sarl div orl push add ljmp arpl mov add mov mov int3 sbb mov push push mov (bad) jb icebp jmp and lret sub enter mov mov fsubs fidivr call cmp ss pop xor ljmp inc push push pop push cmpsl pop in popl divl xchg jbe or into jno or (bad) hlt out dec adc js pop mov push ljmp mov pusha inc (bad) xor mov mov das sub cmpsl out adc add fdivp ja (bad) pushl cmp inc jns mov enter sub es cmp inc mov sbb xchg lea js cmp xchg fistl icebp xchg push inc inc inc (bad) ja jne or dec mov rcrl rcr js mov dec aad movsl test loope mov jno sub or dec loop xor in aaa inc (bad) jno xor lods repnz add xchg xchg leave mov adc sti subl rcrl add and imul lahf mov cmp xor xor fs loope xchg sub mov adc dec es add sub push les movsb out leave mov mov adc xor xor pop test pusha sub dec popa leave iret mov jne stc dec pop mov adc pop dec lcall push lods pop pop xchg decl cmpsl cmp repz cmp push mov ret jmp loop mov and or test jno popa push jmp pop jae add imul pop and mov pop xchg test pop dec add inc (bad) fistp and stc arpl pop test push xlat dec pop mov movsb and in rolb stos cli pop xabort arpl lds lret push lock add and (bad) lahf jecxz jb into xor out mov pop mov pop mov into mov push pop clc inc add push fst mov and lds mov push lea (bad) xor mov mov sub pop jecxz xchg stos push testl push cmpl push mov push and data16 sub cmpsb push xchg push cs iret and jns cmp sbbb push pop out dec (bad) mov pushl sub ss js ret scas mov loop jmp (bad) mov inc xor jbe ss dec rcl pop mov ss ljmp cld lock fdivrl push add add (bad) and xchg cmp sbb jae in push popf lods repnz inc cmp pop dec lret rol xlat sub rclb imul pop in push roll pop and sahf jmp pop rcrl sbb icebp pop in (bad) das push cmp movsb rclb aad push test test outsb daa aam cmp in bound test lahf (bad) jge mov insb arpl imul out imul (bad) and xchg and dec mov push mov jle add rcrl inc cmpsl dec cmp movsb push enter and fpatan mov cmp popa jecxz mov or aam dec cmpsb inc daa adc adc insb mov inc cmpsb jle fwait arpl xor aam mov int3 inc pcmpeqb lods or lcall loope pop mov xchg sbb push aad xchg fs outsb or cmp setl test lahf and dec inc (bad) and mov sbb and inc mov sbb cli icebp jl ljmp (bad) mov insw or sub mov mov outsl mov arpl fisttp daa (bad) loop inc rolb mov mov dec mov xchg cld fwait or cs adc (bad) jb jne rorl scas out lods test pop mov cmp jecxz pushf or fwait pop lahf fnstsw ret mov mov push pusha ss icebp xchg inc jbe mov mov insl cmp pop and sbb mov das cmp cmp inc mov dec lods xor iret sbb adc fld xor xchg push lock in mov imul pop test loop insb je cmc sub mov lahf insl sbb xchg imul out ret bound test test xchg cmc cwtl and adc push sbb movsb (bad) roll cli or divl scas stos in xorl xchg daa xchg mov repnz push mov stos dec fldcw enter cmp sbb push (bad) fidiv inc (bad) imul outsl inc cmp leave inc dec call (bad) sarb (bad) push mov js fcomip mov sub aaa icebp pop lock cmp (bad) pop imull mov fsubs ja ds mov cwtl mov or fs jno (bad) cltd sub into (bad) xchg xor jo stc fldt test leave jp xor push jnp pop or std loop xchg dec outsl test aam pusha add clc mov loope sbb outsb imul jg jo sub cmp or int sbb jae outsl inc popa hlt xor ljmp xchg xchg mov add xlat cmp lret and repz sar xor mov lods orb push pop int3 rorl imul xor mov sahf push arpl movsb pop pusha movsl je push or xor push mov pop cmpl mov xchg mov clc or mov stc mov outsl jmp incb leave dec inc into inc out or int3 or push (bad) insl stc cltd sub inc sti xchg scas mov push std lods pop (bad) scas fistp rolb xor add cmp out pusha mov pop xchg aas pusha imul ficompl sbb or xorl cmp mov lock push (bad) or mov and out jp xlat pop or es pop mov sbb arpl test add (bad) sub decl test mov shl pop jecxz insb ds sub jmp pop adc mov pop repz mov mov std sub dec xchg mov dec xor jp pushf insb jnp mov add nop popf out mov adc jo pop push jb fisubrl (bad) pop jae fs je addr16 (bad) add enter flds add adc inc mov call cmp gs in int out pop mov loope jge leave dec repz das idiv mov arpl push enter add mov sub gs shrd push or push cmp iret lahf jo aad fs icebp imul ds jae in aas loopne icebp leave mov lret (bad) mov cmp inc xchg add lea dec aas arpl push test hlt (bad) iret push add arpl fldl out aaa and lcall add loope mov jne jg cs cmp adc lods add aaa cwtl or int3 jno lods push ja,pn mov rorl mov push nop and pop subl lahf xchg xchg sahf (bad) stc pop ja inc insb add arpl xchg dec lds push stos jmp in out movsb mov ss outsb cmp pop xor mov jno loop loope pop jp int3 lret popf jmp and adc rorb adc sub and mov subb and add or movsl out fwait int stc push repz aam add xor cmc and adc and xchg adc cmpsb lea rcrb adc in push std or insb loopne cmpb test xchg sbb push ja dec mov adc mov jo out sbb mov add sbb sub idivb pop sbb mov fnstsw mov mov iret stc (bad) or jmp aad call inc and sbb inc jb outsl pop mov inc xchg je pop rcr test add or jae maskmovq mull mov mov repz lods inc jmp add xchg stos jg adc lahf addl and (bad) in (bad) xchg pop mov dec leave into mov xchg stos stc mov sarb in mov inc dec xchg sub repnz lcall daa or test lea cmpsb aaa and fnsave pop cli je cmpsl stc js cmpsb dec pop push jnp jge in sub lcall mov jecxz mov sbb inc jmp out xor and mov test ljmp dec xor stos adc jo push out mov loope (bad) jecxz adc cmp inc nop hlt mov mov adc and add or ret mov push pushf mov mov xchg adc mov loop mov cmp inc xor ljmp pop shrl and jl sbb push repz mov mov inc cmp inc cmpb add mov add lds repnz mov jo decb mov add lcall jmp cmpsb add pushw pusha fstp (bad) lock inc mov dec xchg sbb rolb ficoml dec adc cli and call dec jle lds push inc mov sub (bad) mov pushf push in arpl outsl pushf in test cmpsl cmp insb mov loopne mov insl stos idivl lret mov leave push jmp sbb gs mov pushf push sbb cmp sbb mov adc orl mov fwait xchg dec outsl ret or clc ljmp insl decl or sub pop mov lock mov movsl adc adc repz fnstcw jge arpl xor xor jl dec inc xchg or loopne outsb mov repnz lds ja fimull dec jg xlat adc leave ficompl sbb inc out cmp pop or push xor std cli sbb sahf rclb and dec cld cwtl fsubr insb cmpsb aam and pop and and add sub stos jecxz,pn pop and sub stc das jl push scas (bad) pshufw les imul or (bad) lahf mov ret test cmp and test mov repnz push adc and das and sbb insl daa xchg mov adc or aam lret mov imull shlb jnp jnp out ud2 pop adc enter pop fmuls cmp inc sbb cmp (bad) (bad) cmp dec inc jae in insl push jge aas mov xchg add mov pop inc or or and jne add mov jmpw enter sti loope xchg pop stos stc push adc cmp and insl cmpsb sarb pop cli lds mov insb fwait adc jl push xor imul jge mov and push push add adc push add sbb stos int3 sbb sbb add addr16 sbb sbbl push rclb cmp sahf imul mov insb out mov sub lods jecxz in cs jg lods iret xchg push clc inc je shrd nop pop and jp jecxz add sbb pop xor rolb cli pop xor sahf jge adc adc in fwait aaa xchg add mov dec and dec cmp icebp cmp mov push xchg dec and add stos ja cmp movsl out je mov jmp adc fbld fcmovu push lock aam push mov bound fs adc stc pop lahf cmp movsl mov out sbb movsl jmp adc xor dec addr16 sub out fbld push test jmp pop call into je push pop in das movsb or push lea inc mov sbb data16 shlb xor or add dec mov xor dec aas mov sub pop push xor push das inc mov sub out and aam add or xor aaa call sahf push sbb out scas xor and scas push add scas (bad) fcompl out inc mov cmp jmp gs add dec push add mov nop cmp lahf hlt push dec xlat adc mov pop repz mov (bad) movl (bad) mov xorb mov aaa pusha vmovaps ret stc jl leave das insb call in mov push sti jne pop int sub cmp and daa aas aam dec inc cmp pop div lods test xchg pop lods pusha pop or or cli cmc xchg in dec mov mov pop (bad) jecxz adc repz inc xchg jg and out mov ds jmp cs xchg and (bad) aaa mov fadds popf cmc icebp gs xchg dec push stos (bad) fdivrl xor sub mov add push xchg jae nop add aaa sti test and (bad) in js test int mov cmp dec pop fwait mov in lahf aam jns in mov lea add repz clc jnp push fmuls lds cmp pop std sub or jns ret sbb lods lods pop mov add mov inc std ss mov enter out dec shr rol xlat push cli int3 or or cwtl add push test pop fistl mov leave push mov nop sbb pop movsb scas dec (bad) pop imul pop ds pop mov pop mov mov jnp stos pop jmp push or jne loope push add cmp (bad) mov and aaa and mov xchg adc pop xor cmpsl clc loopne daa mov pop in pop jbe (bad) imull jnp imul jns (bad) cmc dec mov mov jle pop (bad) jmp jmp cld sub adc inc dec mov lods int jl pop jns jo (bad) cld divl ljmp fcomp mov lret pop mov jp or push fcompl outsl cmp push les incb fist in jno mov push cmp cmp mov dec std mov sub movsl jnp push mov push and out inc (bad) in inc mov lcall (bad) add fbstp fidiv adc add fidivrl push jle stos outsl adc mov movsl stc imul outsb xor add fwait pusha hlt ja or shlb (bad) (bad) mov mov push dec mov pop inc pop in fcoms pop repnz cmp pop mov jle (bad) lcall push sub scas xor aaa pop xchg enter dec push (bad) dec add leave lret int3 dec push in cmp imul or inc pop cld adc rolb xor stos clc jb inc pop addr16 mov push or (bad) scas outsb cli sti pop cld adc adc lret jecxz jmp loopne adc pop push rolb (bad) dec sti sbb (bad) (bad) push fwait dec inc jecxz adc push es mov inc jo pop xchg add xor sub cmp dec add xor add and push jge out lahf cmp pop mov push dec pop fistl lret mov or cvtdq2ps and popa and mov cld leave shr or mov mov fimull adc mov ja data16 (bad) nop shrl sub (bad) cmp lods call mov jecxz or gs sbb movsb jecxz cmp jo jg dec pop adc jmp jns rcrl xor pushf stc out push adc adc add xor stc shll add test fidivrl inc mov aam push mov dec jae cmc pop fcmovnb aam push repnz add mov pop pop push into in cltd mov push mov pop mov mov data16 imul or imul xchg repnz adc pop cmpsl ret dec (bad) enter sahf sbb cmp scas jnp lcall push sub daa sbb (bad) sub cmpsb lret xlat or mov jnp ret push mov add and cltd xor lods sbb nop leave outsb cld mov rcl sbb (bad) hlt out lods (bad) jo stos in and in cmpsb mov fidivrl pop pop fmull (bad) into sbb shrb inc xchg add hlt lods pop loope loopne addl pop mov arpl loope dec inc in xor movsb movsb lcall push je into xchg (bad) cmpsb mov mov mov into clc sarb jbe in cld and ja pop mov jb sub mov fildl lods pop pop sub jnp popa inc sbb or push inc adcl imul movsl sbb stos xchg jmp ret xchg inc pop dec fisubrl (bad) fidivrl imul clc lcall (bad) lret mov ret mov stos jp popf xorl jbe cmp cli xor test xchg out popa push int xchg cmpsl (bad) sarb pop jns jns dec or push xchg mov inc hlt xchg mov jns mov scas das or aad imul mov add pop lods pusha mov jns xchg jne fcompl xchg leave stos fs out adc push fistl mov sub sti in in out mov pop pop lods pop add push mov jmp sahf add dec and popf push out push lahf lcall loope add xchg ret mov insb inc addr16 inc repnz adc dec mov pop xor push dec lds je and stos sbb push inc fwait cmp jge cwtl ljmp cmp aaa push adc push adc xor dec xchg push dec nopl pushf dec fistl jne xchg aam call mov add xor sub ret sub jbe add sub in adc cwtl sti cltd cli push mov cmp in dec mov xor shrb add xor mov pop dec sbb xor add sbb repz mov sub sbb inc dec or dec add push mov test pop mov add pushf aas dec lea das xchg add rcrl nop and lahf cltd mov push cmp mov pop adc xchg les aaa popf xor mov add xor icebp mov movsl mov mov ja shlb shll js mov pop sbb cmp mov xor mov stos sbb inc mov sbb mov xchg bnd lock push loopne jno xchg fsts cmp (bad) (bad) cltd mov add cwtl inc or pop and sub adc jnp fildll call jmp or sbb fiaddl ljmp rolb les xor cmp xor arpl or js loop pop insl and mov cmpsl enter mov sahf adc add fldenv scas xor mov pushl outsl jg jb push nop sbb sub sahf and lds shrl test pop ret iret insb or andl jmp push push sub cld lret repz push int mov pushf xchg add cwtl adc leave jg mov leave ljmp pop cmp gs cs or inc clc fs std fdivrs lea fs sbb push test add or cmp sahf scas cwtl int mov inc lret lcall cmpsb ds adc push loopne fdivrp (bad) dec sbb test scas sub loope mov test mov into fnop sti inc aad js sub psllq enter sbb xchg push mov dec jge cmp mov (bad) push pop loope and mov and push or or (bad) (bad) ss sub lahf inc loope test cmc leave cmp adc adc adc cld cmp mov roll cmpsb imul aaa pushf dec (bad) jmp cmp xor insl push mov sbb cmc cld mov int3 jle dec adc scas mov xlat sub sbb in mov xchg lods mov xchg push (bad) push and cmp fsubs push xchg cmp mov jl and adc mov inc push aaa mov mov jmp cmp loopne loop mov pop push ja or add mov enter enter mov clc (bad) xor mov adc (bad) repz xchg cmpsb sbb cmpsb push xchg pop or xor push ss xor lods out or mov mov movsb test xchg jnp in mov std jg iret adc jne jmp sub (bad) pop xchg inc mov jnp mov mov scas out int3 cmp aam ljmp push jp pop jb lcall xchg push pop or incl pop inc (bad) mov fnsave cmpsb xor (bad) ret cld fmulp and ds adc lods add les sti sub adc out add ds ss test xchg fs mov mov mov int jle scas sbb lock xchg sbb loop add lcall cmc mov bound mov loop pop xor dec (bad) xor pop push mov fwait lahf std lods pop bound fwait adc rolb ds push cmp sub out adc inc hlt or mov idivb fisttpll push mov mov sbb mov sub mov mov lods ret inc dec jns ds dec in push fs xchg mov daa test xor (bad) stos stos (bad) xor xchg pop and das and vprotb rorb js lods xor fstps scas pop xor adc stc and lret jns sbb xchg mov dec leave data16 jg sub outsl inc int3 adc jecxz sub stc xchg mov in cmp cmc (bad) and add or sbb sub cld call daa test lret aam adc or adc adc (bad) xor stos loopne scas fldcw mov and int pop pop outsb dec sarb aam nop mov sti jg nop orb mov xchg sahf je sub sbb aas lret aas and test pop sbb xchg loopne fs sub adc push ljmp mov mov in xchg jns,pt push jecxz (bad) jbe and and in fwait mov (bad) dec push (bad) repnz jbe or dec inc mov inc fwait mov adc aaa ret sub pop clc imul popa add loopne lea jle lahf jo fildl inc xorl popa lock int3 out pushl xchg popa jecxz lahf fidiv aad aad test xchg push test loopne jge or inc roll pusha outsl mov les cmpsb scas jg movsl xchg mov jnp mov cmp arpl repnz (bad) sub jmp mov mov cmp sub mov test sub dec out pop loop pusha fldt nop in push mov outsl es sbb add mov repz sbb into pop pop fsubs add xor inc xor add mov cmp sub mov insl push and lahf cltd push call pop les test dec (bad) and ja cs or inc fildl add cmpsb je push push sbb jmp cmp jge mov fwait pop test aas iret popa or push in jbe xchg sti sbb aas sub loopne cmp shrl fbstp mov lcall int3 mov dec or push nop in popa sarl addr16 sbb in dec jb inc add es hlt adc add (bad) nop pushf push cmp mov push sti loopne (bad) add ss mov add into repnz add (bad) aas test pop ror movsl addb pop mov xchg xchg test ret cld sar std push cmp xor or mov cmpsb or xchg mov sub sub out addl pop mov lock adc sbb test sub sbb popf mov fidivr inc xchg lds xchg mov push das (bad) into sbb int3 mov dec jge push lret jae sbb inc add push int3 mov enter push pop mov jmp out mov mov mov loope out mov xchg fistp nop cmp testb and adcl mov fisttp imul sub or sbb test cmp roll sbb sarb push icebp mov jnp mov inc shlb std add sarb dec roll sbb fwait and sub or sub cltd loope cmp js dec mov mov (bad) mov scas add push pop std (bad) imul jecxz popf fidivrl mov push mov aaa cltd into xchg lea (bad) mov ret cmp dec jg jno clc mov insb adc sub enter leave mov rorl (bad) jmp gs and pusha cs pushf xor pusha inc sbbl mov fistl fistpll xchg and mov jne cmpsl mov insb ss (bad) ljmp pop test dec fbstp or outsb push lds and mov (bad) mov lock addr16 mov mov cmpsb popa xchg xlat mov adc sarb add mov out or rcrl push mov xor pop icebp in and dec pop jmp mov int daa out push int3 sahf out ret int rcll fmul lea je inc cld mov cmp xor adcl xor stos fs push add ss shlb call test pop lods fwait push test fucom pop sar decl jno adc inc in movsl sub jg xlat add xchg fnsave push adc push jmp push ss inc or pushf sti cs pop je push sbb loope test mov ret data16 adc jecxz sub insl lret fnstenv jnp (bad) and lods mov and push add (bad) mov pop pop les adc inc imul or int3 js sub jnp or inc add subl xchg jp mov inc sbb fdivrl push out cmc add mov jge data16 call inc sbb add sub inc xor outsl scas lahf jo pop xor adcl shrb mov pushf fwait dec imul sub data16 jl sbb pop xor rorl je and ljmp adc pop in ret jge movsl test lods jbe jle les pop adc inc mov pop fstpl sbb mov arpl stos test mov mov scas sbb sbb adcl ret movsl lret pusha lds fimull cli dec imul add xchg cmp in sahf and jae insb lahf sbb push rorb xchg inc inc mov (bad) sbb pop fsub fsubr mov ja mov jb call cmp out push sbb popf rclb in pop mov mov outsl push dec in fisub adc and stos push dec mov aad add roll or or mov mov cmp xor or or dec mov sbb mov fstps inc cli and dec jl push scas loop and or mov inc mov push xor (bad) lahf push and cs sub push and out loope bnd (bad) fnstsw scas dec mov sub movsb pop mov out fdivrl mov jl xor loop icebp sub data16 fistpl push loopne lds stos ds shl add mov dec movsb std bound arpl jbe scas cmp push out xor jo inc mov ret insb imul inc or or dec aaa aas sub ljmp fcomps mov stc cwtl test pop cmpsb imul mov mov insb movsb cmp insl and add out (bad) out dec inc jno mov (bad) pop sti in gs into (bad) es in out arpl mov das cld sub pop xchg pop push push xor push repz leave inc int3 add aas in lcall (bad) jns (bad) divl push or dec repz test xchg mov fildll jbe loopne push mov dec bound xchg lock fstps movsl inc dec aam stos inc (bad) add (bad) jb inc (bad) fcom fs mov inc push and or mov in sub js mov movsb loope jno cmp xchg es sub cwtl inc (bad) mov (bad) or fs pop push and mov cmp es adc notl sbb jnp dec inc sahf dec mov aas jbe xchg pop pop aad (bad) fsubrl mov mov xchg or add mov mov xor jno ss repz cmp cld fwait lea jnp divb add xchg mov mov xor xlat iret fsubl scas ds loopne out mov xchg scas pop cwtl insl and or aaa xchg sbb sub push loopne xchg jecxz jmp push jnp mov inc rep xor sbb (bad) idivl cmpsl adc mov cld lahf push xchg and outsb push test inc adc int3 xlat xchg pop dec adc (bad) mov jmp adc push mov adc push jl jns jne addl sbb popw rorb dec fs mov notb xchg movsb pop out mov sub clc cmp hlt and lahf mov xor sbb testl dec movl jge hlt jge xchg jg jo,pt inc sub sahf jl adc pop mov push lret ret test test mov push ficoml or ljmp jo xor aaa push add xchg (bad) sbb daa cmp push pop shlb pop leave cmpb sub dec stos cmp adc ja loop rcll mov fwait rcrb repnz and icebp push in jns or fs repz cltd add ja fsubp add or fldcw dec aas in jnp cmc popf data16 outsl les pushf cmp in in in sbb xchg inc cmp (bad) dec cltd clc sub and in sbb jmp pop and push or sbb add mulb pop popf jge add stos push (bad) or into sub inc test dec mov sbb and shll or xchg adc fdivl inc push in adc push fsubrl jp stos cwtl scas inc arpl xor cmpsb add sub lods ret pop in insl push sub pop cmc or lods mov in cs call imul shll mov sbb outsb cmp pusha lcall icebp inc (bad) (bad) lret lahf popa sbb orl fstp mov or mov push mov sbb jl xchg insl frstor outsb cwtl movsl addr16 shlb gs call daa xor inc popa aaa cmp pushl jl popf aam pop std jae in cmp gs sbb sub push test sbb fincstp dec in inc jecxz and push push dec subl push cs (bad) es xor loopne push pop (bad) out pop pop divb lret mov ret popf xchg fldl pop sbb mov (bad) push lret push inc imul xor mov jmp mov mov sbb sub sub and sbb push ror fistpl stos pusha adc repz and jmp in inc lds xchg dec pop ret ja adc xchg mov xchg cltd cmc test mov mov (bad) fiadd xorb adc lods mov lret inc xchg lods je cmp cli pop xor popf dec xor xor or rclb ja in or mov out cmpsl xor or pop dec (bad) sub out pop insl in xor mov scas mov jbe lods lret push cli testb repnz stos sub enter inc pop test push scas xchg ds mov fdivrl (bad) clc mov daa push icebp lea imull test inc test lods push and adc loope cmp or xchg jns mov pop orb pushf mov adc stos or imul pop dec mov dec outsb inc xlat push sbb or je jo in aas loopne (bad) imul cmp xchg pop inc enter add in push push scas std test (bad) frstor sub adc jae idivb pop adc cmpl shlb jb adc dec cmp adc push mov sub repnz int fdivp jbe outsb add les mov mov cmpsb movsl iret pop pushf (bad) mov xchg dec (bad) test jne ret cmp mov (bad) cmp inc jle mov mov mov jecxz cmp mov (bad) or fninit push pusha jp sub sub push stos scas sub mov rcrb sub leave push (bad) pop aad out loopne sbb xor pop test mov adc sub jmp mov mov cmp inc pop adc inc out xchg bnd lods (bad) push or cmp inc scas aas repnz jne pop (bad) mov out and fistp pop cmp xorb lcall mov nop jecxz movsb dec mov in out pop xchg add pushf mov out inc push pop cmc out repz ret lret jnp iret inc cwtl flds movsb sub inc mov sbbl jl jb cmp push fidivl cmp adc cmc insb add push hlt push jl mov sub add out push mov push mov sbb push adc and sbb cmpsl test dec adc mov aas adc (bad) pop dec insb das mov nop aam loopne xchg ja and push add lret (bad) dec cmp int xor enter push lea mov dec mov scas fmul cmc out loop lods sub mov loop mov and dec fnop mov sbb pop outsb nop jle int inc jnp mov xchg popf dec mov mov push xchg cmp int leave mov lods mov inc fsubl and inc jl fstl pop (bad) stos out arpl inc fcomp int fbstp xor out pop stos push je scas jnp mov lods pop fisub clc or lret scas hlt pop fsubs pop test fdivr mov fsts mov rcll jnp adc mov lock or pop (bad) sbb jge mov lahf cltd pop mov movsl inc cmp xchg add push and jbe mov dec sub lods insl or testl popa or (bad) xor xchg cs lret add push xor dec shll std int3 fisubl imul lret outsl inc clc sbb pop pop aad and fs bound rolb jno scas cwtl cwtl push dec (bad) xor mov inc mov jmp inc jae jl in jns loopne or mov stc div aam add or int mov arpl in xchg jae ret dec stos sub sbb cmpsb gs adc inc cmc (bad) pop fldl movsl xor mov cmp add rorl les out and push sbb pop (bad) fldenv je rcrb adc jle mov jbe push es es add jmp mov cmp pop mov cld adc adc xchg mov cmc xor and push imull dec (bad) jae loopne sarl dec dec ret fsubrl xlat shrb aad xchg mov and clc sub mov jl in push mov call pushf dec mov addr16 sbb lods popa mov scas inc dec gs mov adc pop aaa daa mov adc fistl int3 stc fwait adc cmp mov jmp lret xor mov mov push mov mov mov (bad) into test lahf data16 popa fs popa dec push out ja cmp hlt out mov jnp mov sub cmp lods loope scas cmp jle sub sbb sub into push ret stos ss test fsubrs fisttp in pop push add mov add in dec (bad) stc fs push jne insb clc jae sti push shll sbb jge movsl pop pop fbstp ss call push add xchg lods hlt mov (bad) mov xchg jnp mov or cmpsb add js and jb test in ret cwtl stos fldenv push push mov sub inc jne and add negl mov and into xchg std lods xor xchg shrb imulb mov pop xor fidivl dec mov dec mov jecxz adc push jnp rcr insb xor jp fisttpll xor movsb imul inc mov push and lret lock iretw fcoml pop mov imul mov and mov popa sub daa sbb push loopne into mov ret push adc call add mov lock mov jp jp sub mov sar hlt rcl dec lret dec movsl pop cs pop gs push push xchg and outsb jmp hlt push js adc ret stos lret scas jb das xor xor std pop insb out ss les cmp mov nop sub mov neg es repnz test ret popa lock ljmp orb divl fistp pop xchg test sbb push aaa mov je sub or stos fs or lea xchg fsubrs add pop mov (bad) or (bad) mov push mov nop fiaddl or or clc and clc mov cmp jle lea inc mov and (bad) lret dec data16 sahf adc sub adc mov cmp (bad) cltd fidivl adc ja inc mov dec push imulb xchg adc adc popa jnp push mov pop mov inc loopne push pop push sahf les cmp arpl jb notb loopne mov push or pop bound test aad add mov mov in into mov aas and bnd jae shll add mov or (bad) cmpsb sub xchg sahf aaa cmpsb jg sub xchg mov imul pop sti es mov lret adc in and inc lds rorb mov and mov xchg arpl jnp mov jle xchg xchg (bad) pop pop ds clc sbb push out xor sti leave push or hlt sub push out push stc loope test jecxz push inc or mov adc mov enter pusha les fucomi pop gs rolb dec outsl mov in pop mov mov shlb fwait mov outsl inc or rcrb sbb hlt or in jge add add scas fs xchg into push jg dec fistpll int3 (bad) ss in xchg aas adc lahf sub adc in hlt insb repz ljmp jge or or movsb arpl dec inc fcoms outsl mov mov clc lea mov lock jecxz stos (bad) sti fidivl sub aad inc mov xor push js addr16 sub add xor cmp push int3 fidivrl mov repz push sbb cs jmp ficomp out xchg mov std imul jno push in sbb push in xor or xchg test xchg jns inc xor lret fadds mov outsl xor xor jbe ret sar fstpl jecxz push xchg cmc pushf inc cmc or (bad) and mov xchg enter sub push lock and cmp push mov sub cmp dec fisubl add xor pusha pop add fcoml mov iret mov das pop mov fld or lods outsb push std pop or push xchg sti xchg mov ret mov clc ds push imul int dec mov sahf push movsb outsb pop lea push inc pop adc inc test xchg aaa in repnz movsl xchg sub push adc push pop mov mov insl pop imul sti add jno push sbb sbb fsubrl mov in (bad) fnstenv mov in fs push xchg mov xor ret les xor hlt push cld (bad) sbb xchg movsb jmp outsb mov cs mov sarl xchg jle mov int mov ja or add add adc xchg push cmp add mov rcrl popf sbb int cmp push xlat mov orb xchg dec enter std shll and pop inc rcl inc dec test pop imul in fisttp movsb ja jns xchg cmpsb imul and fwait sub or xchg push add inc pop (bad) aam (bad) cmp sbb int setns mov test sub mov fsts outsl hlt aam add movsl adc fadds dec cmp pop aad xor inc push xchg sub xorb out jle lahf jo call mov xor ret cmp std push outsb add fs pop adc lds sub cmpsl dec rorb cmpsl jp inc (bad) (bad) mov inc xor mulb mov lea xchg push outsl mov push lret pop push ja mov imul or movsl push into mov lods idiv fadds xchg mov cs mov mov ret pop push sti popf outsl daa test pop push cmp lods and sbbl jle fwait inc sub sub mov pop stc lahf insb and fucomi push mov mov sub push cmp adc push mov dec dec jecxz dec dec into add and test cld push pop add mov adc ljmp (bad) lock (bad) xchg mov and imul push popa ja daa iret sub (bad) out push out cmp imul sub sub insb daa mov or (bad) jae push clc popa call mov fisubr sub inc test fsubrl add mov pop inc inc outsb cmpsl cli xor je xchg jbe dec cld jle lods push jb mov loopne pop xor lahf pop jo test jmp add cmc jnp negl pop mov ss add jg and jo and xor lret cs cmp into or lahf out scas shrl hlt push xchg out clc sub insl clc add inc xchg mov adc jnp leave lods dec into jmp push push call (bad) push mov add or das lea stos push pop pop add xlat fstps rcrl push cmp decl (bad) inc or popf xor sbb stos mov test rol icebp lock xchg shrb cmp (bad) xchg jno aam (bad) cmpsl xor repnz es scas ljmp sub push or loop shrb adc into idivb into data16 add fwait or xrelease adc and push sbbl xchg mov xor jnp push cmp ds xchg rolb xchg and andl popl fcomps lock lods jae push ja push pushf or jb sub ficomp int push (bad) neg push mov mov jg lods int3 imul mov and aam enter sub (bad) jge cli mov sbb add (bad) out repz add js jno (bad) in jb lret mov mov jae inc sbb push aas mov call push mov mov xlat mov push popa adc int3 outsl push cmp mov movsl xchg mov iret imul cld add faddp mov cmp dec pop pop jne or pusha mov loope (bad) push mov fbld leave sbb jp or dec outsl (bad) xlat int3 cwtl pop xchg sti mov gs or adc dec sbb insb push data16 cmp icebp lock fstpt pop lcall sarb pushf sub or vmovq mov jnp lock sbb hlt cltd adc rcll aam pop (bad) test jge,pt cli mov xchg xlat pop enter mov push xor sbb mov cmp mov sti rcrl dec dec mov push push cmp inc rclb inc ficomp cltd mov out sbb dec mov ds addr16 mov adc or push jnp (bad) cmpsb leave fcoml and or mov out scas scas xor xchg into push and jnp int3 mov outsb sbb (bad) ds push (bad) and sub ret xor lock fwait imulb fdivr fdivs loopne dec jl xchg idivb mov sub hlt stc loopne add inc jb sub push rorb dec jl sbb jae faddp sbb aaa fiadd cmp sti outsb or scas xor and add out and scas pop adc or fisttpll dec das mov pop fwait xor (bad) lock add mov cwtl loopne add jne stos nop fsts mov fild pop (bad) mov push js jl es arpl and pushf mov test or xor jmp pop aaa xchg gs pushf ret mov test pop push and addr16 add ds sub or (bad) mov xchg pop mov mov (bad) sti lahf popf inc mov lahf xor imulb jnp xchg in (bad) jg fcmovnu cmpsb mov add (bad) push or mov mov roll xchg cmpsb lahf xchg inc inc pop repnz out stos paddb insb xchg pushf jnp aad movsl (bad) cmc into popa jecxz jge jp jle xor les mov in or cmp sbb scas orl mov daa (bad) (bad) sbb lds inc cmp (bad) (bad) push lcall or cmp add sub pusha in (bad) icebp dec fstps push loop leave fwait jnp rcrl (bad) cmp mov roll xchg fmulp repnz adcl test dec dec cmpsb js out ret push aas dec fwait adc mov pop jle pop es ljmp sbb scas ja nop cltd icebp fdivrs pop (bad) repnz pop sbb xchg out (bad) or cmp mov sub adc jge pushf mov pop jbe mulb push icebp inc cld loop imul inc out xor pause cmpsb fimul jno xchg (bad) repnz and pop pop out mov (bad) je lret pushf add scas aas mov add jmp (bad) lods arpl ds loope cmc aam mov rcll (bad) hlt lea into mov xchg mov out cmpsl and jmp adc pop popf mov jbe cmp in jnp jecxz stos and xchg insb (bad) or xor push fisttpll jmp imul fisubrl sbb add cmp les xor int3 insb push pop (bad) test jne push lea sbbl push pop std ljmp popf xchg pushf jle cld ret cs mov push mov or in xor mov shrl bound sbb outsb pop mov jmp mov movsl push loopne jo cmp jne ret mov shrl mov movsb ret clc jg and and adc (bad) fistl insb fwait lods push aad xchg gs pop cmp jge sub fistp push loop,pt lret int xchg push mov xor out lock pop addb xor imul mov sbb pushf pop sar inc push (bad) xchg int3 mov popa es movsb xchg dec cmp adc jecxz dec loope popl cmpsb dec dec push fdivs jle adc sahf aad xor into mov jbe fimul xchg mov daa push fisttpll mov mov movsb arpl sub test aaa gs mov (bad) mov aad ljmp lods inc cmp inc dec in lea scas mov out push xchg insb sbb cmp cld and negl pop orb pop aaa cld add lods out in pop mov inc push adc inc add out xchg xchg sub sub outsb jg (bad) dec pop mov ret cli inc push call adc jmp in xchg into jmp mov inc lods sub jle cltd or xchg insl or lcallw lea test outsb icebp sub addr16 mov pushf mov insl xchg sbb repz xor fisttpll (bad) setb cmp cmpsl test add mov dec dec rclb jl cmp and xchg repz pop ljmp lds out lahf mull stos lahf data16 leave (bad) rcrb data16 push mov aam cmp std mov sub aad sub (bad) mov push stc cs cmp cltd pop (bad) xor jecxz test ret push out sbb imul mov lcall mov mov push cwtl leave xchg fildl je lea rclb sub mov inc scas jmp jle js mov jp sbb cmp stc out stos cmp test add sbb (bad) aaa frstor movsb jne mov mov dec int3 adc cld mov adc js mov xchg in enter or jo out pop in push cmp add push pop test pop mov adc jo add pop and adc popfw scas and push xor jns mov decb repz lock pushw data16 in in mov rcr push push mov dec scas mov aam out mov js sub cmp icebp pop fincstp fstpt xor adcl ret mov and mov lds or push fldenv cmpsl das adc sbb es pop addr16 add lret sbb push jne lock lods into sbb aaa pushf push fildll sbbl sbb jbe out ret mov lds or into jge cmp jmp (bad) mov out inc pop fcompl jbe jbe xlat xchg jle add fsubp or cmc insb cmp dec push insl (bad) jnp test hlt push inc sbb mov pop outsl and imul out xchg sbb icebp push or pop shlb leave daa cmp mov push mov dec xor add and les or cmp jmp xchg push dec add icebp xor (bad) int3 add push sbb xchg adc enter repnz hlt dec push inc mov xchg adc loope (bad) ds roll subb outsl (bad) or adc icebp jmp sahf es mov aam jo xchg ss adc aas xor xor mov push adcl sarl cmp das lcall sti jbe xor scas mov popa push into pop subb out xchg repz or lret in inc sbb ficoml xchg scas inc adc ds push test dec (bad) scas aad xlat pop push addr16 mov fild ljmp bound cmp loope hlt adc mov std leave in mov push aad scas dec daa xchg arpl add out aaa hlt cmpsb or jno pop or adc ficompl mov imul (bad) iret jmp fld ror insb orl xchg sahf fdivr lods push push popf pop out sbb enter jge bound js pop sub rclb jl faddl mov lret mov les out les cmpsb scas loope jo pop xchg inc push int jge test (bad) lret dec int sbb cmp and inc cmp mov pop test mov push jbe leave cmp addl inc xchg push cld cmp out (bad) (bad) mov icebp xchg pop sub cltd cs shlb repz lea aad sub fwait mov xchg cmc dec je sahf sbb js negb (bad) xor add loop mov (bad) mov lds pop pop jb les jns jo out add (bad) repnz repz mov mov push dec xchg test dec rcll mov adc cmp imul or (bad) mov ds mov xor cltd jne xchg pop data16 test adc or cmp ret pop mov push xlat pop std fildll stc mov movsl or pop mov xchg jmp aaa mov adc iret sbb jp jno dec sbb and mov loopne cs pop stos and (bad) scas cmpsb xor inc lret aad xchg popf pop mov fucom in frstor push (bad) je sub push mov and test jp mov inc mov clc repnz iret repz into mov xchg sahf ds lea ja xor jg fistpll push outsb (bad) dec adc arpl fbstp (bad) xor ljmp mov and mov fistp test jo mov mov and enter sub test out mov jmp jg aad dec mov cmp lret push cwtl dec add xlat mov lret cld cltd and test mov inc (bad) (bad) push ds pop sub in jecxz cs cmp stos pop xlat ds jno xchg xor inc inc insl (bad) out loopne stos stos pop or inc jmp decb out andl enter (bad) xorl xchg xor sub lret and mov mov testl push pop add std jb jmp add lahf mov icebp nop push xor cmpl fisttpll rcl insl dec and mov repz mov lods mov pop inc xchg and test jmp out pop xchg aad stos (bad) aas into out popf add addr16 fldenv lret inc adcl aaa dec pop shll mov ljmp data16 test sub testb jge xchg and les int3 cmp sub mov fdivrs pushf ret mov ror enter incl mov sbb jbe pop mov call mov into mov fnsave jae add das hlt lods mov call cmp movsb imul cmc fwait mov repnz pop fldcw lret or xor sub mov sub lea in fcoml jle (bad) je jno popf cmp mov test ss sbb mov and sub push sbb pop jmp push and enter aaa push mov loop insb (bad) jb mov ret fs push pop jo add add ljmp cltd or insb jnp mov sahf push int out leave add xchg addl ret mov mov dec or sbb pop adc xchg ret js (bad) mov lahf and dec hlt push pop insl jnp leave pop sbb idiv sbbb dec jmp ds dec es cwtl lcall cwtl inc fildl jl sub add mov repnz push xorl mov jge shlb cmpsb or sbb mov dec inc dec roll dec push dec pop lret sbb adc mov inc mov add std inc pop test xchg gs fs arpl imul sbb and stos pusha cmpsb sarl or adc movsb add mov xchg or mov aad mov pop xchg test ret push loope insb or lret test mov out sbb mov add inc or add mov ret loop cld bound popa js shl push xor addr16 cmpsl inc pop out inc aam mov dec outsl daa xor stos xchg int3 push ret scas add cmp movsl jecxz mov stos adc das xchg inc cld xchg ficom das inc sub (bad) jp xchg shl mov mov ret xchg xor into lods enter mov jne push inc test mov jne ret outsl push jns (bad) in xlat dec cmc lea movl imul call pusha or lds cmc addl mov sbb push sbb dec cmpl sbb sub rorl mov mov scas mov out push popf pop xchg shll jle,pn cmpsl lea int3 xchg insl rcrb (bad) adc addr16 imul int3 cmc ds mov inc adc ret mov lock iret aas scas add jo std outsl ret rorl mov insb push addr16 (bad) call out dec fcompl out add mov and and cmp mov (bad) (bad) sbb shlb cli fwait pop out inc ret xor adc mov or ret jg lock cmp arpl sbb xchg lret or sub aad mov into jne pop dec lds pop pop scas scas nop adc rolb cld inc or mov push push inc sub gs or insl cmp push aam xchg mov adc loopne mov jae (bad) xlat pop pop pop std pop dec jp add sub int3 cmp jb std fcoml dec mov mov clc jg,pn xor gs mov call lods push pop add xor pop mov sub sbb or mov mov sub pop ja pushl cmp flds jp lock mov orl fiadd mov addr16 xor push ret ret push sbb sub (bad) movsl out and jae xlat je dec loope int3 es inc cmp test jg rorb xchg lahf popf insl sub mov jle mov sbb bound dec xchg add ret popa (bad) xor and cmpl sbb add sub sti repz gs lret cmp pop scas roll (bad) lods or imul pop lods sahf xchg arpl push xor mov outsl clc addr16 mov xchg popf cmp out sbb mov rol stc lods jb ficoml repz insl inc insb stos add lods pushf add ret push mov xor xchg push jno enter test sub dec ja adc cld fcmovnbe sub or insl push inc jne ror jecxz push lcall fwait sbb mov xchg sub xor insb adc (bad) sbb dec add insl jno pop and bound mov pop dec aad stos jbe and jl mov fist imul mov (bad) and xchg aas inc mov jg (bad) out (bad) jle jnp jmp fs std sbb cli dec add dec arpl adc inc in jge in dec pop (bad) iret cwtl mov xor jo push pop jbe and or outsb cwtl adc lret outsb inc cmp sub aam int3 loop mov mov mov mov out push pop pop mov mov ja push (bad) push ss (bad) push roll xor neg std leave jmp pop leave or repz sub arpl xor shll xor pop jge jno or mov rorl xchg push clc int3 jmp sbb jecxz arpl jns lock xchg mov push (bad) sti inc fcoml push mov push nop cld mov and outsl leave sbb push mov (bad) jno mov xchg mov fimul mov ljmp mov gs mov lea mov clc cmpsb jae and loope mov pop addr16 scas (bad) sbbl ret stos add gs mov fcoml add push js push sub pop xchg mov jecxz iret push test mov adc mov test xor popf mov shlb testb stos inc ret add mov cld sbb mov or stc outsb (bad) imul push sbb jne test fist dec mov fnsave or pop or incb sti fcoms inc jge cmc add pusha mov mov jb (bad) inc insb je jns sub mov and sarl or addr16 loope add daa mov jne or lea push cmp movb sbb jne xor jbe aam jne add movsl sbb ret roll pop jge adc fcoms sahf pop test stc popf rclb lret hlt mov test cmpsb sbb int3 call pop insb add inc repnz lret jnp jle stos sub in and cli into insb movsl mov or xchg xor pop stos daa test imull dec icebp push imul mov sbb mov mov addr16 arpl lock push les (bad) xor movsb mov or rorl out mov adc inc fwait (bad) fidivl movsb add sub or jge push ja mov mov scas andl mull iret test lret lcall es das mov (bad) mov dec ftst mov cmc pop lods adc mov jnp pop adc out test lods or rolb subl pop inc push jmp xor cmc xor fisub iret hlt js and imul imul pop xchg ja scas movb push repnz add loop sbbl fcomip pop push cmp push add fildl in enter popf adc pop xchg cmp xor pop sbb mov push mov lret cmpsl cmp pop jl pop push cltd test outsl fs pop dec scas push data16 jmp (bad) cli lds je mov mov ljmp lret pop or mov push or mov aaa rcrb xchg (bad) call (bad) or sub adc inc push imul clc fsubs dec daa cmp cli paddsb mov jb js dec xchg enter imul out fwait jns out xchg sbb insl repz inc sbb dec xchg jb scas cs mov outsl bound call lcall cld lcall sti out inc in inc add dec dec fidiv push cmp clc add adc popa rol nop ffreep cwtl push sbb pop in dec pop iret in sbb pop sbb outsb (bad) push sbb movsb or sub call out adc gs (bad) push cs and sub ja into mov sbb test add mov loop xchg and iret push mov sbb (bad) fcoml (bad) pop pop popl sub mov mov lods adc adc inc ss xchg test mov inc lea ret mov dec pop shrl jl dec in pop ret dec je inc add ret mov mov insb int mov and in (bad) (bad) dec cmpb mov pop cmp imul (bad) xor xchg push stos imul mov outsl (bad) stos lds xor xchg jb xchg stc mov sbb rclb mov sbb movsb test js sub inc jle add repnz inc mov scas inc icebp xchg lds imul xchg int3 aad cmp popf mov push repnz (bad) or test pop jae test lock fstp (bad) fisttp mov mov pusha push movsl stos adc mov sbb sahf (bad) add inc or lock xchg out (bad) mov pop push xchg fwait lods call mov mov jl and arpl add sub cmp (bad) es xchg lds negl mov or or ljmp jp add jbe in lret out or fwait in jo sub push repz inc push jbe push mov (bad) out push xchg mov inc cmp jle (bad) shll sti aad into pop push and cmpsl iret cmpsl xchg or enter sbb adc inc ja cmp cltd idivl inc into mov pop adc jge and das add movsb inc test cmpsb jge mov inc inc push cmpsl dec sbb push int3 or (bad) push andl gs cmp rolb call fdivp xor add jo mul cmp jp or clc lahf loopne,pn imul push mov add push mov subl dec lock pcmpeqb xchg hlt mov cmpsl call in dec and dec test je cmp mov fnstsw jne jo out lock loopne xchg xor adc push loop dec pop fisttpl fwait mov mov clc jmp lea nop je or push mov xor cmp inc adc (bad) in or adc arpl out data16 icebp dec test add pop add dec fnstsw xchg dec cltd mov insb mov pop (bad) fldenv iret xchg popa xor sbb stos arpl jge clc ret xor inc repz inc cld mov test loop ja xor in repnz sbbl xor sbbl mov jne lea dec and and je jecxz arpl jmp mov mov inc or addr16 ds js ds mov les and push sub pushf cld es xchg jnp push outsb ljmp or mov les dec and es push testb add stos add sub mov ja push jl sub ret push mov adcb gs movsb mov enter add loopne std sbb lret jmp mov push mov lret inc xchg out xchg cmc out movsb mov mov mov iret sub and mov sub mov imulb jb cmpb lcall imul lock dec cmpsb or push sbb mov push sbb mov jg (bad) xor (bad) (bad) push or mov les jo (bad) in shrb sahf jo ficomp movsl insl and fwait lcall and mov pop repz cwtl mov test movsb dec inc fbstp xchg xor or sbb add jb jbe cmp divl cli out ficomp cmp inc inc xor mov (bad) jl pop fisub inc pop pop jne dec inc jns cltd dec cmp into cmp push push mov cltd (bad) cli mov jecxz lret scas add or push (bad) (bad) dec addr16 imul jne mov add fildll adc daa or adc loop xlat add in and or aas dec das inc (bad) ficomp dec mov (bad) cmp into mov loop xor es in sub push pop dec icebp jp ficomp or in adc pop sub stos sub push and mov cs jne jbe pop into sbb jl stc fs loopne inc jmp test mov ret inc imul dec pop add adc pop pop fildl sub mov inc xorl mov scas hlt and xor adc imul pop push cmc jno ret xchg pop (bad) daa sbb aas incl mov popf jp xor test push push aas xchg sbb cmp fwait add sbb add jo std inc adc dec nop (bad) mov jne or jle inc aaa mov and pop movsl jle sahf test aam test push pop mov pushl add cmp int3 addr16 loopne sbb or scas or (bad) ds ret jp lds pop mov xchg cwtl jl mov xchg mov inc pop mov jge aam inc in cli ret jne popa inc push enter inc fsubs adc rcl arpl daa mov inc scas jge adc sub call dec les lods les int in enter jo push add add push out and pop out roll std push sbb loopne inc push test push out jmp or adc mov mov jo push in aad test cld add push pop cmp loop and adc loope or mov js fidivr xlat outsb int3 dec in inc test lock mov sbb loop loopne ja mov fstl sbb push das cmp lret pop fdivrl push shrb pop pushf xor inc push into mov jae daa sbb cwtl adc fwait pop addr16 dec xchg call inc push jno lods jp jge lock adc pop push push andl dec xor data16 outsl out call outsl dec loopne push mov dec rol mov cmpl andl hlt cli decl data16 mov mov inc xchg mov jg in arpl fldcw ret aas mov cli dec xor sbb enter lret sbb test (bad) lods repz inc jmp sarl add and fldcw push std cld stos hlt aas dec sub int ljmp fisubrl sub add cmp loopne pop adc xchg add lock lahf inc cmp inc mov incb xchg inc push scas (bad) sahf stos or js (bad) enter cmp dec js (bad) scas sub sbb dec mov mov push (bad) mov (bad) ja gs sub dec sub cld jecxz cmpsl push cs mov lcall stc xchg lret cld push pop (bad) int3 pop mov jmp das or jmp cmpsl adc jne aam mov mov xor jmp inc cmpsb movsl push test in lods fadds push in test popa adc (bad) cmp arpl scas inc popf push mov (bad) jmp ror stc jb insl lea pop movsl shl aad das in call mov in mov xchg mov cli push mov test out in lds ss adc push in pushf test fs pop movsb mov hlt cltd in sbb mov (bad) enter (bad) lret pop mov sbb dec mov gs es mov lret jge fdivl mov pop lods pop mov xlat inc sub pop pop pop aam xor and add mov pop faddl movsb data16 outsb adc xchg (bad) jmp adc mulb bnd adc xchg fiaddl mov lods adc (bad) xor lcall stos test or adc mov push mov dec into pop dec fstl in dec pop leave fild jecxz shlb int3 (bad) bnd dec mov inc stos inc iret sub xchg outsb jmp sbb mov xor pop fcom pop sbb in enter mov cltd inc cwtl cwtl bound in cmp lret adc negb inc mov mov mov sub (bad) xor leave cld adc add fwait insl xorl jecxz fsubp ljmp insl mov push sub mov or push xchg jns cs mov clc mov pop divb aad mov pop sub or sub (bad) repz dec je or push mov out leave stos lret lods loop or cmpsl mov cli in jnp jbe push mov nop cli mov inc out loop xchg mov sbb insb dec test jbe (bad) aaa push xlat fsubr imulb xchg (bad) cmc jg (bad) and mov call adc dec in dec sahf jg sub ljmp pop imul loop and xor add iret hlt adc push imul and aaa insl js (bad) cli jl jge mov xchg cwtl push cmp movsb sbb or mov test scas std pop sub dec out sbb inc cmpsb mov pop fstpl aas test ja sbb jno in sbb and js rolb add xor and mov loop jle loope ss sub or sbb mov mov (bad) xor push pop xor out xchg movsl call in movsl jbe sub mov or cmpsb stc mov cmp pop mov jmp lret (bad) jo push and sbb xchg jno mov aad sti mov fisttpl outsl out ret fmull lods shl push loope insb adc repz or mov cld or es popa add call (bad) fbstp jmp out pop add jbe jge (bad) stos push mov pop sbb pop in mov repnz int cmp cs daa add cmp lret stc ljmp inc pop orb lds xor xor call mov jl test mov ljmp push pop sub shrl mov jmp loopne xor cmpsb jne orl add testb cmp inc mov or insb push fbld mov adc out pop xor dec jg push xor jmp cli js push scas jmp fisubrl mov lret or insl pcmpgtb iret inc clc inc (bad) daa pop cmp pusha (bad) lret jnp add cs dec into sub imul pop les mov adc icebp pop (bad) xor push xor pop cmc cld mov das sub rolb xlat push xor dec pushl mov adc mov sbb pop xchg and sbb bnd std arpl xchg xlat or shrb clc adc out aaa sahf pop push dec outsb push nop fldt xor jle mov imul sub insb mov jle inc shr cld dec fdivs aam fcmovbe ljmp popa mov lret dec int3 pop jns je int in jno (bad) mov pop test xor xchg jne xchg scas fildl mov ret sbb pusha adc mov xlat push stc clc sti inc (bad) or (bad) fstl cld imull lcall cli aas popf test pop pushf push push ds mov in push and add dec bound sbb lret aas (bad) loopne (bad) mov addl xor or mov xlat hlt inc test cmp (bad) sbb pop mov xchg push pop push xchg test (bad) stc mov cmp mov (bad) fnstenv and cmp es cld ljmp adc imul dec sbb mov dec es and push dec inc bound mov call push push insl add je jno xchg int cli xchg cmpsl xchg iret jno inc pop sti (bad) cmp mov aaa les pop bound enter pop stc sbb cmp adc jb mov jno subl pop pop xchg insl in insl clc (bad) jo add lods cld pop xchg jle xor adc mov dec xor (bad) push cmp clc out push mov (bad) cmp repz repnz roll xchg mov jecxz push jmp xchg pop daa ss push inc repz call or mov movsb ja int3 loop adcl jbe adc cmpl mov inc pop mov ja xor dec cmp aad jne ljmp js (bad) pusha mov lds sbbl xchg or add sub andl aaa icebp jbe es push test mov std mov xor mov fidivl jp pop mov aam loopne stos sub push or and lock mov lcall push inc push mov dec notl (bad) notb cmpsl fcoml lods and icebp mov jge pop adc test cmp xchg ret mov pop mov ret lcall cli (bad) mov dec in out fldenv sub fwait jb jg mov cwtl mov pop jns test jmp push (bad) arpl xlat cmpl ja inc sbb pop in test clc inc fdivrl sahf push inc je aaa or aaa dec or into mov inc xchg adc add dec jne mov in sbb jmp sub xor sbb cmpsb dec (bad) lods sbb imul addr16 fs or jecxz int3 scas out push pop add push pop cmp adc jns add pop loope jns mov or mov aas and mov ljmp out popa inc loop repnz sbb mov aad jns (bad) jmp fimull cbtw (bad) jmp scas dec shlb jns iret mov jae scas lds out mov sbb jne mov xor in cs lea xchg add lea daa imul popa rcrb xlat int xor out test pop push xchg mov dec outsl add addb push call rol es je mov mov (bad) std cmp push int3 imul (bad) loop aad adc xor sahf sub bound and dec adc into aam pop lods fsubs mov lods cmp cmp jnp loop mov fiadd imul mov or addr16 std in push movsb mov mov ljmp inc mov fldenv mov add std add cld adc loope (bad) jae lods jnp into ret in and or adc jl pop cwtl sbb out cmp jns adc xor jae fbstp push mov fmul ds add scas push jl jg sub (bad) mov sbb push jnp into loopne jmp in sub mov fs aaa and pop aaa xchg inc bound test mov cs mov xchg sub sub jmp loopne fdivp gs or bound mov popa shll in cs gs jo sahf fstps dec cmpsb mov or and add mov add in mov push dec sarb pushf aam clc fs into outsl mov sbb cmpsl out js add (bad) mov xchg jno aaa stos (bad) jne sub ja fstl sar jb (bad) mov into outsb pop cmpsb jle popf (bad) cmpsb mov xor cli imul insl test dec or insb xor in add xchg pop push cmp or ret aaa ja and fldt out aam lods jo cld rcrb sahf or (bad) jbe imulb sub fwait mov push pop stc (bad) aam stos cltd (bad) or push adc xchg and dec ret pop dec (bad) adc in pop cltd scas fisubl stc repnz fistp push jo les cmp mov nop dec cwtl out mov cmp ljmp push insb mov (bad) push mov mov mov aaa sub les int push loopne ljmp dec clc jecxz push lock lods dec push mov xor cmp arpl aad loope outsb sbb mov cwtl push into mov jmp gs stos inc mov mov popa es sbb sbb sbbb cli and lret cmp dec xor adc sti in fcoms xor test divl imul jl inc es push mov push jbe scas nop lahf decb jge icebp pop cmp std and js mov sbb lods mov sbb sub jns fistp sar cmpsl push aam pop loopne jno xchg and mov cmp insl fsubrl push mov dec popf addr16 mov jmp test inc sbb int3 orb xor jge nop cmpsl dec mov (bad) nop sbb pop jmp pop les jo mov add push out in addr16 (bad) (bad) mov inc icebp cwtl inc (bad) jbe adc mov sbb jae cmp pop jge mov rorl push insl in jle cmp ret pusha lods sub out sub cld inc daa mov xlat jbe cmp jae pop jmp ja cmp int push popa iret lcall int mov fnop test cmp loope lods pushf inc pop int3 jg pop test mov das inc fisubrl push add test cs adc jge scas insb xchg and mov mov xchg pushf push jbe xchg js int insb loope push sahf fsubrl mov mov push cmp mov xchg xchg cs fiadd jmp daa push sub cld fcoms sub inc jmp sarb pop sbb push bound je pop xchg fistp push dec adc js xchg sub fbld mov mov repnz adc fmuls mull insb push xchg ljmp pop or loopne xchg aam pop addb pushf inc cmp jne out push iret pop ss xrstors jbe mov or or int3 push sar fnstenv pop sbb cmpsl push cltd loopne scas xchg push jno xchg inc (bad) int3 pusha pop xchg repz (bad) pop or cltd scas push nop or stos mov int3 jne adc or (bad) sub inc sub leave xor sbb aam push (bad) jmp pop jb imul clc pop es pop xchg mov sub jbe mov js dec lret (bad) jb cmp and and push hlt (bad) xlat push dec or fistl pop jne add aaa ljmp stc (bad) (bad) mov pop dec pop mov xor xor add sub xchg popf sarb dec into jcxz jbe scas dec jp inc cmc aam mov aas (bad) push push lods daa or sarl jge,pn ds icebp mov jge and popf pop data16 jne,pt mov sbb sub push lret adc and jns xor ffree sub push fs cmp add insb daa popa jl fcoms enter adc mov in xor mov cmp push out lea xchg icebp mov mov xorl stos cmp xor jns out dec jp lcall aas popf lea pop pop inc pop lret icebp arpl clc jmp inc xchg test xchg push lea mov sub xchg ja cli movsl aas mov and add dec pushf into (bad) mov xchg mov and out mov fcomps adc cli inc sbbl leave xor lock fistl inc aas or mov lcall (bad) dec ss pop loope in mov and stos test mov jae jbe test inc xor adc test fbstp inc push sbb pop pop mov popf push out inc shlb xlat pop pop cwtl (bad) es out cwtl mov inc stos jmp orb lret das pop xor cmc out sub test imul imul jo sbb lock mov rclb call in (bad) test movsb mov cmp jo mov pop or imul hlt pop nop stos jb or push into shlb scas jae add popa insl stos iret adcl scas sub pop fistp dec int fwait push push out arpl pop sub push popf cmp push mov dec insb push rcr imul adc lea jns in ja and sbb fdivl mov ss jbe xchg jge jns test sbb into inc or notl cld push add sbb adc jmp sbb js xchg aad (bad) lcall fstps pop add adc pop arpl jnp or aas nop ds js dec mov out test mov sti mov inc pop jp orl inc push addl pop enter pusha sub sbb push dec adc std arpl push popa or je out pop push sub jge adc out pop jge loopne lods push mov nop push xchg pop inc adc push sub and dec pushl inc inc leave or add testl rcrl pusha dec xchg dec fwait adc js pushf insb xor icebp imul bound (bad) nop xchg cmpsb add lods sbb xor adc xlat inc movsl adc mov dec pushf xchg pop imul lret dec sti dec repz repz fistpl sub push push cmp ja jl mov sti cwtl dec push or mov mov and jbe and les aas cmpsl cmp pop push lea push or outsl outsb sbb dec push data16 loope sbb lock cld mov rcll dec xchg push std push lcall sub outsl cld dec jge jl movsl xchg nop fs rol add je and xchg std cld aam cltd fisttpll mov pop xor loopne stos push mov jmp jns inc push inc jnp out push dec inc popf lret mov push (bad) mull int3 adc xor lahf sub pop jp dec call mov test and mov cs dec mov das ror jo stos outsb ror pop pop out jmp outsl outsl aas fsubrs int3 addr16 pop mov les sub xchg mull pop insl addr16 jb ja push dec js inc sbb in push lods (bad) cli push rcl add fcomp push cmp fistp or pop int fisttpl shll or hlt pop addl sub push sub mov and sub dec and jns lods popa sbb inc adc push jnp dec jne xchg mov cmp mov add sahf mov std mov cwtl ret mov fstpl push mov xchg cmp sub and pop ds aad insl inc sub mov pop inc ss pop insl mov mov (bad) (bad) out (bad) ss sar sub cvtdq2ps or loop cmp pop fist lea xchg js movsl pushf pushf fnsave aas clc clc ja movsl lods jle push push cld mov popf leave add sbb mov leave in inc cs in mov dec dec sti cwtl lds aas jae (bad) push pushf pop and adc mov fsubrs cs push imul sbb and negl iret push xchg psllw das inc out sarl cmp push imul fdivrs sbb inc sbb insb inc pop mov dec stos jae mov in dec and aas add dec sub sahf mov sarb adc in or shl mov das in cmp adc test mov jmp insl popf dec mov jns pop jecxz add mov lret int jp shrl das mov test jnp xchg and loope scas push test incl mov ret and add and cmp dec sarb ljmp repz popf and adc adc dec pop mov xor mov xchg loope dec rcl cwtl lock icebp cmp (bad) loope sub movsb jmp mov jne out pop adc add imul rcrb fstpl lret stos mov mov adcl test mov pop std jmp lds push mov loope push daa movsb enter push mov xchg jb sahf push cwtl negl std sbb gs cli dec data16 cmp pop mov xor sub push push pusha movsb xchg stos and and xor xchg jle mov ljmp sub (bad) jo mov dec mov xor clts aaa loope fdivr xchg (bad) cmp mov (bad) sti leave ficom inc mov cs push daa xchg inc push mov xchg pop gs fldlg2 sti incb push pop jg dec lahf pusha mov (bad) movsl sbb and rol mov into ret and jl test mov dec test mov mov cmp imul test inc jmp mov data16 jae inc jp push jns cmp icebp inc inc inc (bad) sub fwait cmpsl cmp imul std je mov dec xchg sub push and cs (bad) je jmp hlt sub imul dec inc mov ds jne daa js hlt jb add and movsb sub popl adc mov outsb cmp and adc pop (bad) ret dec mov ss test daa repnz mov clc aas adc popa dec test or jne in rol sbb call push xor xor pop push mov fs into push xchg mov adc mov cmpsb adc dec xlat orl mov les inc imul lea dec jle aam inc jno inc cltd sub imul into xor dec loop push scas mov fistpl popf sti push aas fwait pop sub or pop jb xor inc in pushf test mov sub jl lock adc test add pop mov jmp scas cmp add loope fcmovne cs sub lods dec sbb rorb pop sbb incb mov jmp fcomp (bad) (bad) into test sti add sbb jne xchg mov loope je inc adc add jp fimull stos inc sub adc cmp mov arpl pop sub sbb int3 cmp pop andl pop mov cmp jmp ja sbb in and aam sbb xor inc stos fsubrs scas je add fmul js aas icebp push in mov jg sbb insb push addl push inc fidiv lahf inc lret es repnz ja mov les sbb cmc dec push cltd cld xchg lret data16 scas cs and das je daa jns jg bound aaa inc lds decb ret jnp outsl adc cmpsl or push out mov imul int3 mov sarl out nop sbb mov mov cld jnp cwtl cmpsl test (bad) repnz add or sbb lods jnp aas int3 cwtl divl jb push mov cmp (bad) mov fisubr mov xor cwtl lock mov and mov hlt xchg (bad) ds sbb cmp and sti push and jmp push adc fisttpl xchg lds mov das or xor iret dec sahf lods out sti xor sbb jnp data16 and lods fisubrl jo pop lret adc pop hlt mov (bad) iret rcll cmpsl shrl lods test pop jecxz das pop pop movsl mov insl lods mov jle cld cmpsl je cmc ljmp imull test lods adcl (bad) jb xor sbb xchg xor pushf addl dec dec fs mov pop push xchg add xchg cmp push jnp repnz or arpl scas clc test mov loope xchg xchg jne pop out mov imul mov push inc push inc xor jo inc imul in xchg push movsl lods leave stc lds jmp cmpsb sbb movsb cli dec scas lret cmp add push outsb mov mov aas int and mov add rol dec cmpsl aad stos add inc push fisttpll es fbld dec and pop inc (bad) scas cli es mov and jne jmp nop pusha das jle (bad) push hlt and or dec mov dec pop push jae out sti fstpt (bad) xchg sub fidivr mov pop pop or fsubrp mov sub inc pop aaa leave jb (bad) pop in (bad) loope sub (bad) ficoml mov (bad) popa sbb xchg push push lock repz test pushf pop mov jno pop les stos inc or (bad) mov and cmp sub inc pushf addr16 push push sub (bad) ss lahf cmp or bound xor (bad) (bad) push xchg fsubl rol movsb pop push cmp dec mov mov rcrb cmp inc inc cmp mov dec mov mov bound mov jecxz je cmpsb sbb rcl push jne jae mov xsavec xor movsl (bad) fcoml les mov inc mov imull mov cld xlat and cmp xchg mov mov dec dec xchg arpl add cltd cld xor sub adc mov out lods loopne sbb and rcll mov in cmpsl inc mov and hlt add sbb inc imul js test fsubrs mov inc dec cmpl outsb jns add dec insl mov in aaa addr16 repz out int3 mov push mov int sbb and aaa adc xchg sbb mov push dec fcompl rcll jns dec aam pop jne in jbe call pop pop dec mov and dec mov mov mov loopne imul add mov or dec leave sbb scas por dec lea fcmovu test pop scas fstps pop jb adc xor outsl fcmovb xchg test cmpsl shrl and js aam xor sbb sbb bound mov aaa inc stos pop jnp dec cwtl mov xchg dec xor scas sub add por sub and repnz lret jp jnp mov pop and jbe lcall ds ss jmp mov mov stos mov xorl outsb pop cmp pop cli push (bad) jnp out mov call mov popl pop jmp lock push (bad) cld add mov scas pushf fisttp ss lea (bad) xchg cltd es in mov aad add pop lock call (bad) xor or push mov stc sti adc adc xor sub mov and stos insb js imul repnz cwtl mov jle mov dec jge dec and test lods jbe adcl (bad) inc rolb pop mov or dec outsl scas xchg xor mov (bad) stc dec iret rcrl ss test cmc mov cmp cmc and push repnz ds jle pop aad pop pop shll in mov in xor popf add adc fsts aaa sub int3 mov or add pop sub push sub pop inc mov cmp add test xchg out jmp repz pushf sbb idivb (bad) jbe xchg movsb stos imulb (bad) dec (bad) movsl addr16 inc outsb xchg repz sbb sub push sub fistpll adc and or lret adc dec popa inc orl repz mov je dec iret xlat lret mov cli add in adc mov push jp jp cmpsl roll xchg lock xchg jbe (bad) fistpll shlb cmp pop sub and std movsb mov cs mov bound out pop loop (bad) push test add cmp test ja repz lds pop popf movsb jnp sti out gs clc imul (bad) xor lds push fsub test xor (bad) lock sahf push pushf xchg mov cmp ficomp test sub gs sbb dec cmpsl push jbe cmp lret xor sub cmp pop xlat dec rcl mov and jo rorb jb imul jp inc nop mov push mov int loopew out sbb notb sub rcr push sbb decb inc sub dec add sub add sbb jle int3 dec xor dec aaa mov enter cmp or xchg push rorl xor idiv dec test enter ja jb adc outsl out call mov xchg fild les xorb mov addb std sti jl out sub int test mov fnstsw adc cmp cmp mov xor jae stos push stos adcl lods mov mov adcb mov cwtl cmp clc test or cltd cmp push sbb cmp stos pop mov mov dec aam fisttpll fisubrl dec test jnp repnz push adc sti pop inc mov rcr sub lods cmp bound aam sbb adc add aam mov xlat gs out in leave int pop or shlb jns ret mov out inc sub imul inc and jp sbb test sbb adc ficoml and ret (bad) jbe xchg pop push cmp (bad) sub icebp mov jb xor popf xchg ret pop imul and dec mov dec adc fcoms adc jne xor push pop sbb jns sbbl out test adc mov push xor mov xchg jg ja ret or mov dec or push mov das xor mov cmp lea adc pop adc ret sbb sarb hlt (bad) imul sbb cmpsb inc wrmsr inc pop xchg adc inc mov pop mov int3 pmaddwd test xchg jmp push sbb dec or or mov repnz inc and flds lock and dec xlat pop call arpl mov jp push enter mov xor hlt addl test aas clc push jge sbb xchg adc mov push mov adc sarl and sti loop or mov mov mov xchg xchg push sub ret mov sarl sbb scas push lods and lahf jae call aad fimul sub mov mov cli jbe (bad) data16 insl ds lahf mov popa test pop mov jnp mov dec cld xchg rorl cwtl push mov orb test pop sub jg lods movsl repz push inc ljmp lahf and xlat idivb inc icebp jp bound movsb or jp pop and inc pop mov xchg in dec adc xcrypt-cbc cmpsl shl lds (bad) dec mov fcoms mov out enter scas aaa sbb hlt xor push outsb mov std and imul inc mulb les int3 mov daa sarb ljmp ja or cmp aam insl cmc pop sub mov inc jb xor mov xchg nop loopne add in popf movsl xchg dec stos xor xchg or test repnz shrl mov push scas out sub pusha loopne mov cmpsl adc lods or mov aaa ds cwtl das sub inc stos xchg jnp add out jo pop push cmp xchg adc arpl mov mov sbb mov mov das es stos xchg outsb pop (bad) pusha loopne xor push insb jno xor jle imul jb shr lcall mov (bad) mov das imul loop adc pop xor loope mov add jae call jg fsubrs add mov repnz pop cmp mov lea jecxz popf push push (bad) (bad) ret cmpsl (bad) loop jno fsts mov sbb (bad) cli inc add inc cmpsb out add gs lcall adc popf lret iret ret adc sbb sbb scas rclb sub jns pop je cmp test sub (bad) jmp jo stos rcrb int3 adc add rclb jne enter adc test xor jbe pusha arpl ss cmp pop xor bound mov jnp mov into popf dec mov jg (bad) or lret sub cmp dec dec das fs insl adc push aas or dec pop mov add mov cmp pop pop rcl popf leave out push out dec mov mov stos popf shlb or test addr16 cmpsb lcall sar mov xor jns xor adc stos jmp aam dec add icebp xchg adc int3 jo dec sar dec mov adc flds mov es push mov imul pop (bad) js cmpsl mov mov jp sub dec stos lret (bad) or stos mov xor jg sbb and fsubrs inc jecxz inc sub sbb inc xlat rep or addr16 pop mov js push test sub push pop inc in add cmp fcomps sbb jp mov stos outsb enter lds in aaa sbb insl leave imul adc xor rcl jno data16 shl (bad) bound sub stc (bad) stc divps pop sbb decb push adc outsb jecxz or enter mov call pop lcall cmpsl sub cmp out adc in inc sar (bad) inc imul dec cli lret cmp aad sub popf or lcall push stos xor in lds fnsave push mov adc cltd pusha push add sub add shlb mov mov stos andl icebp xchg inc push cmpsb (bad) in pop ficoml jo es push outsl jl pop mov in sbb das lret mov jge pop movl or (bad) sbb and in dec sar (bad) shlb add and lods dec push xchg cmp dec in lahf arpl cmp loop jle pop inc je mov int and icebp (bad) je test insb adcl fstpl (bad) mov dec neg int3 dec gs outsb xor pop add pop les and mov scas jns int ljmp mov mov pop push inc in cmp ljmp lods add push daa es addr16 lds outsb leave sbbb lds push movsl add pop mov pop movsb mov repz stos xchg fild xchg or sahf add add ljmp jg mov add or add ret into mov add lods add push dec (bad) fucom dec push pop in pop adc faddl lahf aad dec lods add dec jmp xchg cwtl mov inc outsb mov fcoml add dec jne mov out fsubs movsl cltd cmp inc mov mov loope lock mul icebp (bad) ret and roll mov push lahf pushf repz sub cmp xlat insb pop dec arpl in es cs outsl aad dec xor sti loop sti inc fisub lock inc add lea and test js notb mov cmp or pop mov stos inc inc and sarl adc xchg and and (bad) adc jl mov cmp sub sbb ss jo xor je and or mov dec in jae xor push mov push jne fsubrs jne clc in out je fbld push mov inc add popf xor mov add dec push aaa add push sub leave push stc scas cmc lock and lods push jecxz outsb out lock aam dec leave and fnop cli scas xor cmpl mov bound out jmp mov push mov and mov adc xor rclb mov lods clc mov rcl pop pop cs mov pusha mov push nop mov leave movsb lcall movsl jae xor (bad) mov dec xlat arpl and add push pop dec mov test cmpl sub loop test xor jl sbb cmp mov adc mov aas sub cltd and mov cmp cmp sbb cli sbb mov inc (bad) mov iret add lcall push push movsl jmp pusha fdiv aaa mov xor or cmp insl sahf jle inc lock push sarl aaa mov cld gs emms adc pusha sbb ret xlat enter notb push adc test mov out in test mulb sub out or (bad) sub repnz (bad) inc insl mov mov mov lret mov dec sub mov repnz add iret mov inc inc int movsl mov pop movsl pop pop leave dec sub loopne sub mov push test jp pushf mov andl mov enter inc adc in adc sub daa sbb add daa push out negb mov dec pop xchg or cmp in sbb call xlat gs cmp fdivrl into sbb mov mov sub mov test dec test dec imul xor mov mov pop add clc and icebp fisubr stos nop lcall fdivr push icebp test loop ffreep nop sbb inc cmpsb mov rcrb jg cmpsl dec inc mov xor ja xchg repz bound aaa dec gs mov push test sbb aad adcl fwait dec sarb orb and mov jl sbb (bad) jne mov pop scas outsl mov sbb sti ret jmp mov arpl xchg rcrb enter or adc pop push pop fbld or into bnd jl iret pop cwtl cmpsb inc (bad) negb shl aam faddl dec push shlb (bad) sub sbb pop pop adcl push adc inc je cmp icebp sub pusha fsubl pop push sbb dec push ljmp adc fnsave lock and repnz loop jno add mov jge test ja lcall cli andl push jno mov aad or push out sbb aas jle popa dec xchg push movl sub stc lahf cmp icebp das (bad) push push sub push push mov repnz stos ret mov daa lcall outsb xchg xor pop test das pop stos pop push xor push pop ss cmp push call push jg dec sbb jecxz pop scas mov addb stos gs shrl pop (bad) test mov ret js dec jbe cmp inc jge outsl (bad) (bad) rcrl ret out push mov fwait cmc inc cmpsl stos imulb imul cmp in jno lret (bad) mov sbb pop es xor cs ret add lret mov sub sub mov test push push cmp cmpl pop lods push imul fadds and push lret jne scas daa repz push or inc fiaddl dec mov outsb adcb mov mov out jge xor cmc leave jmp cmp in adc aaa bound icebp pop sahf iret jbe mov push jb enter and fbld cmp jbe lock push aam cmp insb mov lret in lret xlat outsb lret test xlat in cmp (bad) sub mov dec sub xor stos out and mov pop jl pop jmp sbbl cmp and cmc cld jb into insb jg cmpl sbb pop pop out sbb mov (bad) xchg mov inc aaa movl mov and xchg out pusha aad movsl xor aam adc or sub mov xchg jo testl xlat es (bad) ret add xor sub pusha les pop lods pop mov lret push adc fimull or jno mov mov aas inc xor xchg dec bound jo add je shrl push (bad) cmp cmp push fistpll inc stos icebp mov and outsb push adcb xchg or dec pushf dec int3 mov mov xor sub in notb push push repnz cmp lahf call or lcall aaa lcall jg jmp ret or or out imul cmp dec adc test sub int3 push int3 (bad) jl mov mov dec (bad) cmp lret xchg or outsl andl out icebp mov mov cmp adc adc mov cmp lcall out inc pop fwait and dec pop dec and xor jecxz negl sub or push test (bad) into stc popa out out (bad) lret inc dec sbb push push (bad) sbb test sbb pop xchg mov mov push mov mov cmp add das xlat (bad) xor cmpsl push jg xchg sub out mov das lret lcall test mov dec adc lret or xor pop lds jo aam fwait lods insl pop popa lahf pop xor outsl (bad) push and xor pusha stc cwtl stos clc mov and ret sti movl pop lds jo xchg lds sbb inc inc mov mov cmpsl movsl nop or data16 sub dec mul adc xchg les clc mov push jg mov adc fucomip xchg mov fcom cmp jge jb lods mov jbe inc push movsb mov mov mov mov push mov aam fstl push stc cmp inc (bad) and retw mov mov popl inc (bad) fdivs jo stc adc bound dec scas and sbb pop outsl popa adc imul fisubl inc in cmpl stos aaa sub cmpsb mov xchg cmc add fdivrs cmp xchg mov xchg mov and xlat xchg inc fisttpll sbb cld addr16 lock cmp jg pop lea cmp repz adc enter push (bad) cmp cmp negl stos mov adc sub cltd push in das fbld sub pop aad repz (bad) into stos outsl daa mov xchg adc add mov add xlat aaa pop jo mov mov test cmpsb out sub sbb sub or jecxz mov (bad) mov sbb inc cld add add xchg push mov psrad push mov loopne dec scas insb pop (bad) sbb sbb adc nop cmpsl push push es inc pop test clc in sbb fldcw adc or sub mov xchg cmp cmp arpl inc icebp xchg in faddp rorb lret mov repnz mov (bad) stc les clc ds js push cmp (bad) adc dec dec inc pop xorl roll inc lret subb es mov ffreep mov mov roll (bad) ds mov pop pop jp push mov les into dec sbb adc or push xor push push call test xchg and inc ret sbb in dec xor pop arpl fmuls sbb adc cmp mov out pop mov mov stos pop aam (bad) jp push xchg out sub jno pop xor mov jae inc cvtps2pi std scas fsubr mov mov pop push pop fldcw lahf dec jnp jnp sub xor idivb imull insl orl pop sub repnz xchg lret aam test rolb pop dec ret (bad) (bad) mov dec xor cltd test sbb dec repz fistpl leave cmpsb sub adc pop cmp cmp fisttpl rcr push push xor xchg adc addr16 mov std push mov mov or xlat mov cmc inc cltd insl mov insl loope jp sti adc in add xor lock sub stos pushf scas fcoms lods push xchg cmp es sbbl frstor jno mov (bad) mov sti inc movsb xchg jo outsb movsb mov add dec xor or movsl and bound xchg pop adc sub (bad) pop mov lock or adc je lods or and scas or dec sub cmp push in out test dec inc or (bad) popf test (bad) dec push jno (bad) addb mov (bad) jo and fdivrs movsb in xor push ret je loope xor mov pop out and addr16 mov and loope xchg cwtl cmp stos sbb mov mov das pop sbb ds pop inc idivb sbb adc in aaa adc cli pop mov dec mov xor mov fdiv and xlat xchg jl adc stc lock xlat repnz lods out fistl sbb jmp inc add addr16 shrl aas and repz hlt and dec mulb inc push fsub push mov test stos repz pushf mov push adc cmp insb dec fldenv add push je pop adc adc push xchg jns mov in scas (bad) lock mov cltd repnz icebp adc rol mov repz mov out mov (bad) jle in cmp stos mov frstor push outsb fild fwait fwait test loope sahf inc mov cwtl adc pop or sysenter movsl (bad) xor push and int3 and loope ja cwtl jle pop lods inc adc pop mov cmp int mov addr16 xchg js insb rcl xchg (bad) pop lods aad stc sbb iret jo std and aas into pop stos decb fwait sub aad cmp (bad) popa jl mov lret stc xchg ret fadds fisubr cmpsl std or sti xor mov fisubl ja dec arpl pushl xchg inc xlat pop mov xlat xchg cmp adc xchg mov lods in xchg hlt mov or and push leave jl cmp (bad) in int3 push sbb fidivrl sti sahf in movsl lcall lds mov mov inc shll push add enter add add inc cltd cmp push jae in outsb xchg fild lret pop mov mov mov or repz in cld inc push inc ret popf dec (bad) or into adc cmp mov mov jne pop inc adc jb jae shrl enter fidiv mov push shlb dec dec pop cmpsb enter and jno (bad) fldcw xchg xchg and mov push jnp rcll or dec add loop pop inc out sbb sbb cmp loopne sbb les out xor lcall and xor shll xor (bad) sbb or and sub lods dec dec jne (bad) jmp push lds mov (bad) cmc lcall daa sti cs jbe inc fstpt push ljmp (bad) xor lahf out jge into jmp ljmp out sar pop mov in pop mov shlb hlt jns icebp (bad) mov fdivr popf xor in test mov pop mov jae sbb pop daa jbe cmp enter add mov push sahf les add dec scas popf fsts shl inc add (bad) and lods adc and out insl lock cmp dec xchg inc es arpl imul js sahf xchg mov jmp and inc hlt aas inc into dec stos adc sbb ret jg iret xor jae rcr mov jl cld mov test cwtl or out fcmovnbe daa dec dec adc push dec aaa mov lds in jmp fst mov mov mov mov cmpsb out and iret lret js dec and or pop or out sti psubusw sbb add les fs jg ss aas add push push xor hlt pushf xlat xor add dec mov xor outsl push repnz pop fimull lds push push icebp (bad) push cld sub or repz xor call outsl add popa jmp call fdivl test jecxz sub repnz mov lret mov aas mov pusha or loop add int sub loope cld sub mov xchg mov mov shll pop inc push adc sub adc cmpsb test insl push out dec stc cmp pop das (bad) iret adc dec mov mov lret dec in cmpsl push mov dec js jecxz jns dec sahf dec sbb adc (bad) push inc mov mov pminsw sbb fnstenv push xlat jg or pop mov mov inc sub call mov insb xor nop aas cltd jae push scas loop xlat xorl cmp scas ljmp jl (bad) cmp mov push or sub fildl pop test xor testl mov jecxz lock cmp je jmp sub and mov jne stos inc pop gs xlat pop push xor dec mov and aas gs aad rolb lcall lcall xchg rorl sub fldcw mov lea pop mov mov jb mov pop add popa pop aad cltd push and sub ds je fmull jp or loope in (bad) mov les add (bad) and xchg in push daa xchg push sbb cmp and cwtl inc rcr bnd jo jmp rcrb push arpl push jle mov cmp pop insb stos add (bad) cmc stos ds xchg cmp xor out subl jae lds pop xor out mov jno adc cli aam movsl ret xchg ret cmp push sub mov or push mov out ds or cmpsb in (bad) pushl into cld inc shr mov mov mov xchg xchg imul cmpsl in insl sub push rcrl (bad) jno mov sub ss (bad) mov out or aam fimul loop cmpsl dec dec in xchg ja into or aaa push dec (bad) ds and sbb and dec cmpsb xchg add jbe and adc into mov mov popa cwtl (bad) mov xchg fwait test dec repz mov pop sar mov imul aaa imul lods cld and mov add xchg test mov std fistpll ret cli pop jmp bound cmp out mov jg scas push popa lea je rorl js adc sub aas cmpsb imul add pusha xor nop out pop push cli scas (bad) dec mov out aad fwait mov test js push or popa xor cmp ret push insb xlat push xor sbb sub sbb daa dec sub mov addr16 lahf decb adc cmc cwtl jb daa mov icebp pushf push or pop aas push push cmp or in xlat cmovbe out mov jl daa in and popa pop or mov mov cmc (bad) lock clc xor je xchg jmp mov std pop dec mov push (bad) sub xchg cwtl test sbb clc inc stc xor mov xchg cmp mov flds or sub scas sahf dec imul mov pop xchg sarl sub mov push cmp nop sub sub add cli gs decl (bad) ss pop pop xor (bad) lea idivl mov sti xor mov cmp aad notb test nop test stos test jmp jnp sbb (bad) clc (bad) jb lret inc push xor in iret iret out pop stos mov les cmp pop sbb mov popf in dec (bad) movsb mov repz lret sti dec pop add fsubrl push mov ret push dec scas repz xchg or jo or mov xor inc fdivrl fcmove test and mov clc outsl gs push xor cwtl xchg lea fild pop mov cmpsb jns addr16 push mov inc jae cmp dec decl jmp and ljmp inc movsl lds mov aaa js mov and leave push jo call jmp or adc xor xlat ret inc out imul jne cmp sbb xchg add fs or mov mov mov (bad) in and (bad) shrb lods into dec or mov fmull sub sub sbb push inc daa sub ds ljmp xchg stc insl and xor stos mov mov cmp (bad) pop cmp (bad) in iret xlat lock movb repz jmp inc xor (bad) sub call inc mov dec sub jp pop jg dec inc cmp loopne pop mov mov mov push add leave orl sub jns (bad) xor cmp les addl fild jp add sbb or lds (bad) push insl adc jae inc cwtl pop sub das push out jns sbb scas inc fs lahf xchg mov cmp arpl xor adc push mov cmpb inc in aas jb adc fiadd mov fdivp inc (bad) mov bound (bad) dec xor pop jmp sahf add xchg ja lock jecxz lcall cmp dec bound fdiv adc icebp or add pop or inc lret adc pop dec fist mov fiadd and add or or push nop adc sub popf add cmp fwait out cmp sbb cmpsl sbb jnp sbb mov int3 push bound push jb lret mov and loopne mov pop jl cmpsb mov addr16 jo xchg sahf stos mov sub mov btr lods inc adc pop dec sti mov cmp add je dec and fs js dec leave pushf and xchg insb mov inc mov jno sub ret or ljmp fs jbe imul fwait idiv (bad) mov pop mov vcmpsd lahf xlat stos mov dec roll cld jmp sti fdivrs shrl inc negb xchg cltd hlt jecxz test push push xor cmpsl pop into and jns mov inc (bad) jge xor cwtl pop jge jne inc clc fldl inc das les test ds lock cvtpi2ps cld movsl fs subl jle inc xchg mov (bad) inc imul mov add xchg lahf out incb mov in jnp imul je test add loop in out inc aas mov adc repnz pop inc jp pusha inc repnz or ss pop clc jecxz insb jl cmp stos cltd mov xchg sub pusha mov aad roll in jne cmp inc nop in xchg into repz inc and add popf popa sbb dec dec ffree hlt cmp sarl inc ret cmpsb mov mov stos jge insb jno xor flds mov mov fistp fcomi add adc fcomip mov sti stos enter push push stos mov in inc test (bad) sub add add lahf jle push pop cmp pop imul xor mov in sbb subl lret mov sub fcmovu cld xchg sti inc pop mov adc pusha dec fwait and push iret (bad) or xchg xor fidivl cwtl pop fild inc pop xchg adc je xor nop mov inc jp xor mov push dec or mov mov lcall enterw les pop push jne push stos (bad) test ljmp mov inc jmp fs dec cmpsb flds mov enter aam shll cwtl (bad) cwtl pop scas test sbb mov or enter out jbe fildl mov jle repz scas loope les cs or xchg adc or jbe jge xchg pop and add fdivs test out pop sbb cwtl repnz call jnp std mov divb cs lods cltd call sbb sbb jmp dec push lds call ficom mov (bad) cvtdq2ps push sti push cmp push inc pop sbb inc pushf subl push stos je fcompl mov lret stos cmc out sub dec sbb sti fs out sub xchg pop pop xchg rorl fsub sti push sbb dec mov or movsb push lds sbbl aam jae pop xchg je popf imul jbe test (bad) mov sub fisubl push inc out adc (bad) cmc insb jae (bad) in inc js repz cli mov std stos test imul or out nop imul push lret outsl adc fildll xchg xchg sub (bad) fwait loop stc push shll cli out js push cmpsb mov add pop mov jbe dec mov sbb lds js jl fadds outsb push movsb push push pop aas jo add xlat pop add xor cltd ds adc mov sbb ljmp cmp aam frstor test xlat dec imul xor xchg add imul into imul in jne push hlt sbb cmc dec pop xchg adc sub (bad) inc mov lret inc (bad) adc in dec ret jecxz or (bad) in ds inc outsb xor push mov jmp sbb dec in pop cmpb inc roll jge sub cmp or or lret add or adc and ss ss ret or (bad) cs out shlb dec sbb mov cmpsl adc and cwtl sarb inc ljmp movl push mov mov push mov outsb push or in pop outsb xchg mov mov imul in iret cwtl mov jb outsb orl mov popa xor pop das jl rcl mov cmp dec outsl inc mov cs mov test mov lods push jae adc movsl scas imulb dec cltd xorl xchg cmpsb test xor lods dec push push mov sub jnp or cmp test dec iret leave jmp loopne sarb sub xor mov inc push inc xor iret mov lcall mov push xor pmovmskb out push pop push flds adc rcr sub add add repz fwait add fs adc sub jb sti sbb loop push dec sti mov addr16 mov cmp inc and jmp repnz mov xlat adc pop loopne pop cltd mov (bad) mov sub push std cmp cmp lret push int jle mov scas (bad) cwtl sbbb cld je je xor push inc jmp add and xchg jmp fxch or jno mov pop lock ss sti and add (bad) add inc jo loopne dec xor xorb xchg fcomi int push or lcall sub ja push mov jmp insb scas mov cmp mov push fldl aad pop xchg add movsb push in jb xchg fxch jbe fiadd popf pop push out pop int nop add test and mov mov add loop sub push hlt (bad) mov ds mov clc cltd cmp lahf cmp add repnz pop xor jne mov xlat jl jge (bad) lret mov push test lock add or ljmp into add int mov js xor out out cs (bad) rcr js cmp pop pop mov xor mov lea std movsl movsb inc push mov jge test and mov lods clc setge aam inc repz cmpl mov inc dec add lret mov inc fiaddl push bound sub jnp stos mov (bad) xor xchg or aas pop push test adc adc dec jbe sbb mov (bad) push push rorb cmp push jecxz xchg push fidivr fimul sti fmull cmp dec pop cltd mov cmc imul loopne xchg xor push subl pop mov out and aaa ficompl mov mov sub xchg mov repnz dec pusha ret push push jmp xlat or popa mov mov fisubl push pushf imul mov jmp mov pop jl add mov dec sti or push fnop dec xchg inc sbb out xor sub stos mov nop xchg outsl and loope test push (bad) addr16 lea sub and iret mov mov iret sti jmp mov mov jae adc loop lret test add (bad) xchg adc addr16 in xor dec adc sarb out pusha mov pop enter sub popa (bad) pop and lret mov xchg lea sub adc ja pop lock jno outsl mov adc scas sub (bad) aaa jecxz (bad) inc dec nop into adc mov ficompl xchg mov ret push xor push xlat loop int3 fs or jbe or inc loopne loop out jbe jae lret add je in or lret xchg adc mov fildl stc fnsave mov push rorb fmulp xchg call push sub inc popa cmpsb inc cmp pop dec xor mov aam jg stos loop ds mov lahf pminub xlat inc nop int3 imul mov (bad) out das nop popa (bad) push aad test mov jne xchg pop lret jl pop fiadd and cmp js jecxz push xchg add inc and inc gs cld inc pop (bad) jbe out sub lock ds sahf aam std sub cmp lods (bad) (bad) mov (bad) mov int sub cli cmp pop inc in pop jbe into (bad) cmp jno jge negb repz lret dec mov sub pop dec (bad) loopne popf es std inc mov mov fidivr aam stos xchg outsl sahf in ret aam or sbb test test jge lret les aad call mov leave xchg cmpsl mov (bad) in (bad) lock mov jecxz push mov mov or jb mov adc js test ffree ror dec movsl stos jp mov mov mov rclb xchg cmp pop popf lret (bad) sbb pop sbb mov imul push add or arpl push (bad) imul cltd es mov aas repnz mov sub inc cmpsl orb xor lock adc loop out xchg push sub int3 rorl ret add cmp insb push inc int ja push mov insb mov js cmc pop int xchg xor lcall jecxz inc push lret movsl xchg das pusha fstl movsl out rorb dec inc mov jns das dec out jns inc and push inc outsl insb sub loop inc push dec push cmp hlt mulb das adc sbb lret mov (bad) pushf pop lret (bad) sbb scas dec pop mov push cmp cmp sarl cmp fstpt pop inc or cld add xchg mov gs jbe pop sbb into mov decb lock out inc mov and arpl loopne fs jbe jnp mov mov fldenv aam pop sbb movsl add xchg or add xor cwtl inc mov cwtl xlat adc loop fs jbe bound inc fisttpl cmp jp xchg mov xor mov das data16 mov fucomi in shrb jmp mov mov clc clc mov adc cmp cmp xor (bad) sbb lret pop jp iret sub aaa mov incb mov loopne es mov sti or xchg push (bad) rclb mov cmc xor jge mov xor fidivl dec jns dec call jp (bad) rclb mov roll imul in mov scas fbld adc sti xchg xor repnz push dec fs in or stos ljmp sub push xor push cmpsb outsb or cmc cmc jge ss cmp lcall fisubrl fist mov adc and pop add pop or loopne scas push xor or jae add adc jae sub fsubrs xchg cmp mov jns mov pop dec sti pop dec push mov sub aaa jle push adc push es adc jl mov push subl jnp add scas xchg decb mov and inc mov ds test rcl lods jns jl and xchg lds fadds lock and loope out xor (bad) (bad) lret mov mov mov sbb mov test push xor inc test imul xor dec imul leave pop ja test or or mov enter xor sbb loop and push insb (bad) add jns inc pop mov xchg jl jns push repz cld mov dec ljmp jns add sub into dec cld sbb stc cmc icebp and jbe lea cmp loopne jmp mov jl sub push test sub xor stos dec scas mov adc ss mov sub add add sub fbstp pop mov insl mov push dec test and ret shrl jnp xor pop insb es mov loope mov xor dec xor ja mov pushf cmp inc mov push mov mov jle cmpl jl (bad) xor fdivr mov or push or imulb jl inc lods into sub dec sbb dec or (bad) push or xlat xor stos dec xchg inc pop mov xchg rcll inc es mov push nop mov and mov lcall testb out in sti lret mov out pop fnstsw cmp mov addr16 les xchg ficompl dec sbb lock push pop pushl sbb fsubl mov out xchg adc stos jp dec xor inc mov jg jae dec loope decb mov test jp test inc and dec adc ja test mov adc adc insl or in push dec test adc cmpsl mov xor les sbb add aaa xor subb add loopne inc jo jp mov arpl outsb dec lds roll (bad) mov (bad) xchg and mov mov std xor pop mov or cmpsl jle out dec mov ljmp push dec push orl mov mov rclb fnsave mov in mov push xor or notb add repnz mov xchg jle push leave pop cmpsb or out push mov lea ficomp jge movsl fisub imul and cld test pop mov movsl subb mov cmpsl addr16 repnz stos pushf inc dec sbb mov add and mov ds out outsb (bad) iret jns mov int lds jnp lcall lock icebp fmuls sarl adc mov fwait enter push mov movsb jae pop loope mov loopne fstpl fmul xchg arpl pop adc inc mov mov js jg (bad) xor dec (bad) pop mov into cld clc fdivl out sub push enter mov (bad) xor mov insb adcl dec cmp dec xchg push inc repz sub cmp mov flds (bad) repz nop into in jno push scas pop cmp aad sub adc mov xor pop mov test adc dec adc mov daa jb icebp (bad) aaa mov adc add out mov call sub jl inc je scas subb int3 aaa imul pop push lods dec sub dec pop pop add shr and fmuls movsl push cmpsb cld out test jne cs push dec adcl xchg and mov addb pop mov mov in ja je movsb clc test sbb pop inc loopne out repz cmpsl inc adc daa (bad) xor cmp pop mov push decb icebp scas hlt cwtl sub bound (bad) test aas out sbb sti roll xlat js aaa and adc call xchg push inc arpl xchg shl imul pop pop xor test (bad) cmpsl stos sub mov sbb xor push orl xor test sti loop inc cwtl or add lods rolb fcomps sub sub clc jecxz mov jmp pop dec pop cmp add stos sbb arpl add pop sti (bad) repz fldenv lock adc sub nop cmp or mov stos movsl jnp xchg dec mov sub mov js mov neg pop and mov popf test dec inc enter push outsl (bad) testb xor dec das jmp adc es outsb xor jmp ss add outsl fsubl test loopne jp and jle enter (bad) mov movsb scas inc ja push add push push stos push fnstenv test jmp inc push jae out lcall and sub push mov je or int sbb jb rol sbb fstpl mov (bad) in cmp pop cltd cmp je inc jmp stos add popf fstl sub push fwait adc mov mov jo push push je adc (bad) ljmp add inc cld fdivrl int sub push loop sbb inc lea addl bound (bad) shrl mov stos xor jecxz out rcl ret out mov jecxz sbb push xchg mov push loop pop cmp popf push and add push inc mov and js les cmp lret and pop leave ds pop push mov adc aaa xor mov add (bad) mov xchg (bad) sti stos enter popf (bad) js add pop cs sub pop xchg pop mov lcall insb dec mov push mov inc or das mov aaa addr16 data16 repnz pop pop sbb pop imul leave int3 and sub arpl add add lods xchg scas repz ret inc mov hlt or mov (bad) repz mov push enter mov and (bad) (bad) (bad) push push out outsb fdiv pop sub ret nop and mov lahf pop cli jmp mov sbb ds lcall hlt dec popf xor xor push ljmp mov cmp mov xlat bsf lcall sbb cmp xchg or xchg xor adc clc imul inc sub into pop jp sub fs mov imul or fwait subl sbb lds into lods lret jmp (bad) int (bad) jge loopne xchg xchg call (bad) sub int3 ror into (bad) js inc lock or mov add xchg xor adc enter imul ret leave add (bad) test cmp sbb jg imul mov test xchg comiss nop mov mov jg insb test popa popa (bad) jg xchg mov cmp rcrb ds or mov inc mov jle or sbb movsl xchg (bad) lcall ret test test hlt and and cltd sub push aad mov jecxz lar int test jne xchg sbb pop push sbb loop cmpsb dec lock xchg or aas in rclb mov pop xchg cmp and pop ljmp mov add das in push dec cld xchg das movsb pop icebp lds xor sbb leave imul cmp daa cmp mov loop or outsl test iret pop aaa sbb outsb dec in or imul push dec cmp and sub (bad) xchg test adc insl enter fwait dec negl ret jecxz mov push iret hlt daa ficomp pop dec mov xchg cli jno push jg icebp xor mov stos jmp rcll mov fs adc jb push mov fdivrs les dec movsl ja (bad) jo (bad) xchg cs or and mov pcmpeqd cmp cmp push in sahf idiv mov and adc jp stc clc fldcw addr16 adc add pushf jmp popf and xor lret adc scas and stos frstor call scas jle jmp enter inc shrl and or mov jns mov push rcrb arpl cmp mov dec test out sti pop add inc jb jg jp fildl xlat hlt nop sub lret and pop push or pop mov test or adc pop movsl imul or jo cmp push cltd daa insb scas push out mov ljmp stos fsts mov pushf icebp xchg add dec xchg pop movsl test mov lock iret push mov in stos xchg inc xchg pop mov or add cmp or sub mov adc cmp or sub out jmp pop nop imul sahf mov jmp stos sub xchg push pop xchg int3 inc ret stc adc outsl lods jae dec lock addr16 adc jno out in mov mov xor push mov push call add jg (bad) aam jl dec jp mov add cmp sbbl cli pusha jecxz xor je out lcall adc sahf mov xor std mov and incb cwtl add adc (bad) cld sbb mov mov push jo inc cmp xor dec in mov jns int lods cltd inc imul dec ret xor pop popa adc add aas jb and (bad) jecxz xor or mov dec mov adc inc outsb push sub xchg sbb (bad) xchg sub mov mov loopne jae bound and mov aad fs or jo cld idivl or xchg out js jg lcall sub imul mov orb pop push loope mov repz loope loope fstps mov jg (bad) bound sub cmp adc out xor pushl fucomi dec inc cmp int3 cmpsl fidivr and xchg ljmp scas mov (bad) pop stos mull lret sub mov (bad) mov cmp pop mov pop popa jo add scas jne sbb push mov pushf xlat mov cmp out fs imul mov lcall mov scas (bad) sub cmp jns les (bad) push sub leave dec or pop mov dec mov mov push cmpsb test jg mov mov incl mov inc xor pushf loope es jns cs inc pop mov sub inc cmp jnp cmp add dec mov or inc gs inc (bad) mov mov fsubl jae pop fwait mov push lcall lds popa dec dec add cmp xlat jge adc scas clc xor shlb cltd push mov lcall stos push xchg rclb or ljmp jns mov add push mov mov imul addb fcom cmp jb push cmp inc mov push mov inc dec les and sbb loope sbb addr16 pusha mov jecxz js push sub loop and pushf xlat dec jp dec out sti insb xor loopne adc dec pop sbb cs lret lods mov int mov ret lret cmp cmp js aaa xor sbbl fs popa xchg sub mov cmpsl jmp add test pusha cwtl shrb cmpsb xchg inc jle mov lods dec lret shlb outsb adc push mov dec int scas jno xchg jmp enter or ds or ds xor fwait dec (bad) xor jle jno sbb clc lods cs mov aam sbb mov repnz call sub or roll dec loope out imul pop fldenv sub fimull in popa sbb aad fldt xchg dec or orl or std add repz and fistpll pop adc and out jmp sbbb ja mov sbb cwtl mov call ja dec stos fbld mov dec mov leave hlt or adc xchg xor (bad) sub pop movsl ss lods mov mov dec cmpsl add ficom and hlt add fnstsw jecxz add jno xor loope push xchg cmp sub ret gs repz outsl xchg lock jl faddl icebp test inc jp cltd fs aam pop sar push ss ljmp pop repnz arpl adc mov lret aas sbb jne inc lds adc mov lahf adc js mulb push fcmove or sub mov data16 gs outsb mov push in sbb mov popa xchg inc add lret scas cmp pop dec test popa das jmp lods leave arpl in mov rol out (bad) jl decb iret cmpsl sti fsubl iret sub ljmp scas pop dec aas (bad) sti inc rclb jnp loopne je push cmp (bad) test in aas enter sub test arpl call push mov aad dec push pop lods fildll xor pop outsb adc xchg xchg xor xlat rclb push pop sub fldl and mov push mov add inc pop negb fs andl call adc or adc cld (bad) xorb cli popl loope sbb push arpl xchg mov or rcrl jne mov sbb xchg stos xchg into xor gs pop dec adc mov imul xchg add mov push mov es push add gs call inc mov dec jp dec gs fnstsw mov mov push adc xchg loop ds fdivs rol xchg inc lret and mov jmp cmp lahf jbe mov aam cmpsl jge jb xor test icebp cmpl cmp cmp mov cli test imulb clc cmp iret sub mov sahf loopne pop jle out ret lret std sub or push (bad) ja pop lret mov sti repz mov mov cld fcoms sbb movsb hlt and jg lret cmp div insl addr16 fchs adc mov mov mov mov scas mov movsl mov mov aas nop test int3 xchg adc fisttp fsub dec jns rclb and mov push push movsb sub xchg xchg icebp sbb or std test imul cli call or cs shrb mov inc or aam fwait cli aas mov in cmc add adc (bad) or pop popf or addl push call sub mov jg (bad) dec pop cs (bad) xchg popa int cmp mov mov mov mov xor push sub cmp mov mov rsm adc pop cmp adc rorb arpl bound xlat push icebp mov cli cmp jecxz (bad) xchg sbbl decb adc stc call cmpsb call iret test add sbb push push fisubrl aas xchg adc sbb push aad adc je (bad) dec mov xor and hlt push mov in enter nop jmp in dec jb dec cli or mov push cmpsb adc push pop je cmpsl jp std mov pop mov rcl pop or sub adc lcall sub out pop clc sub sub push push popa and je (bad) mov call lock mov add jp sbb in sub sar or cmpsl fwait loope,pt or int3 jl or ljmp clc lahf inc xchg or dec sahf icebp popf bound adc push push insl adc bound cmp imul (bad) cwtl data16 call lcall addr16 push adc aad (bad) cltd divl dec xchg adc sahf call shlb les cmp mov int3 ja dec pop mov in or push daa test add popf push xor dec xchg stos mov and sbb sub or cli cmp xor loopne xor (bad) mov cmpsl and sbb jecxz ja in add lds jno mov out or mov jle sbb push add clc (bad) idivb stc test rolb stos scas ds cmp push xchg xor out arpl scas js pop xor lods shrb mov out jle jns notl mov jbe mov or insl push dec mov sbb jle call shrl mov pusha outsl and lds (bad) std and fwait inc mov imul xchg adc sar xor scas addl in jl cs aam xlat jecxz shr stos sbb and mov cs or xor mov test inc inc (bad) jns xchg pusha pushf flds aad (bad) or jge or inc (bad) adc insl (bad) lahf cld cmpsl dec lcall insl add jae xlat hlt negb movsb js push jmp rorb or cmp jmp sbb das sbb pop pop adc mov xchg add data16 leave sti mov cmp (bad) cmp rcr cltd jmp in outsl std mov push jg pop mov push (bad) call nop and sub in mov adc hlt adc dec es imul cmpsb enter addr16 (bad) fisttpl mov xchg fisubr fs jmp or dec js test (bad) mov inc dec movsl das sub jo lcall mov jecxz cmp jbe mov xchg inc js int3 jno cmp lret (bad) jle leave and sbb push pop lea stos xchg imul (bad) lods scas inc and dec test cwtl ds dec fstpl adc pop cmp and dec es sub pop sub icebp cmc cld pop pop sub inc mov mov out test adc test and xchg cmpsb shrl std (bad) out push mov sti jl in cmp aad push (bad) rcl mov das xor sbb cmp jo xchg and cmp xor (bad) sbb inc mov bound (bad) push ljmp cmp dec mov lret adc mov pop inc sub repnz (bad) repnz sbb (bad) jb out xchg xchg icebp mov dec out inc mov pusha inc adc pushf cmpb dec aaa add leave clc test xor or xchg stos lods les in xor int leave push mov or rolb push adc add test pop xchg nop push jns jae adc cmp test sbb xor push push imul repz rcll (bad) jp cmp and mov xor pop push adc xor std popf pop sub sbb ds mov fmull fmul div lret mov inc mov inc xchg faddl push mov repz pop jge pop lret mov adc dec inc lea in mov rcll mov sahf movb aaa hlt out sti push gs sti in pop sbb (bad) fisttpll fldl push sub mov mov push into je test mov mov push xor sahf dec rolb sbb jne add or ss into frstor ret add shlb inc jmp mov ret push dec rcrl or mov cs dec int mov mov mov hlt iret jecxz xor iret push add les push (bad) sbb mov test push insl loop sbb imulb jns mov cmp pop push mov (bad) sub jno std inc inc (bad) jns inc mov xchg xchg (bad) aad call sub test (bad) aas jns push or pop lock pop repz xchg sbb lock fsubrl jle test fadds in jp sub outsl push pop scas and adc int3 in (bad) aam imul leave push xchg pusha mov pop out mov pop test sti jne jg enter sub orl xchg imul or adc insl daa fimul sbb or orl adc insb lea cmc (bad) movl sub imul mov and leave out xchg iret xchg lds decb cmc add (bad) xor inc lahf add xchg adc into adc test mov pop repnz pop push mov stc gs dec insl daa mov xchg cmp and ret repz out popa jl lock cmp mov jns jb cmc xor daa pop push scas xchg je call (bad) roll cwtl ret dec pop push mov test sbb jp sub push sub outsb loopne test mov ficompl adc outsb cwtl or mov mov adc jns (bad) fcomip sar sbb dec or push mov inc inc repnz xchg hlt dec and negb adc pop inc ds scas inc or pop insb or cltd ret nop lea mov and sti iret sub push in fidivr jb clc in fistpl pop pusha fwait call add wbinvd rcl (bad) (bad) call mov jle sbb jmp out push adc add mov sub dec dec pop jb das or inc aaa mov rcrb dec pop sbb out sbb inc xchg jle les sbb (bad) sbb cltd add (bad) mov inc sbb mov mov xchg adc adc (bad) jae data16 das sbb inc mov std movsb mov push xchg jmp push lcall stc dec and mov pusha bound mov mov pushf dec fldln2 mov jge xor cltd pop ret jae inc clc cmp xchg pop aas inc push sbbl mov cmpsb pop pushf mov dec dec xchg dec push scas mov mov pop and and xor inc test dec mov movsb shr aad int3 mov jo sub (bad) sti jb jns punpckhbw lods push jae shrl cmpsl sti inc push mov push test loope les fnsave pushf outsl and push sbb xchg xor xor cmp mov fnstenv pop test insl cli das repz push out fdiv es fstps je adc mov cmp test mov aas jns mov and daa mov inc lret adc lret push dec insb mov add mov jl daa scas sbb sbb mov push xchg loope push mov roll outsl pop jge imul pop mov inc mov scas jmp adc scas in lock pusha push push por aaa dec and add test (bad) cs into push cld je cmp std mov inc adc xor insb fdivrl mov popa mov aas or dec orb mov adcl sbbb popf inc imul test inc lods rcrl dec shl mov jns test push or and lods mov cmpsb cwtl aam push stos pushf mov pop cmc inc add cmp loopne and push pop mov test mov mov dec fmull sti out sbb mov fist add sarl mov or or lea push fscale lcall dec pop fbld cmp and mov dec mov jbe,pn andl mov enter inc sbb sahf cmp das fdivrl and aas insb incl xchg mov aad sbb les adc les cmp cmp sbb shlb shr leave add lret sbb mov mov div testl loopne insb int3 adc adc adc js inc subb sub cmpb stc imul clc jmp xor adc xchg push gs std mov and push cmp add cmp lds sahf fdiv or adc pop insl and out mov in in xor adc popa fucomp mov loopne or or aaa (bad) stc jnp out lods test push rcll jno inc rcr xor int jns ficoml jno insb jne add jl lods mov stc pop mov pop lock mov ja scas jo xchg imul xor cltd mov pop jp ficomp sub call xchg pop mov xor mov cmp pushf mov mov cmpb mov gs (bad) adc leave es mov jns xchg js repnz pop (bad) jmp mov and outsb aas sbb jg inc pushf mov push pop (bad) cmp jnp mov out out cmp or jge daa aas jle fimul cwtl add push xor stos adc pop cs xor rcrb jno jb sub push inc movsb push inc xorl and push mov inc xor pop into cmp xchg mov outsb sub inc jge cmpsl clc push rcl lahf aam test cli mov rcrl sahf lcall imul insl das sbb jl loop in cwtl cmp movlps ja rcrl jne movsl xchg daa dec dec pop push mov insl adc mov mov mov cmpsb shrb cld sbb cmp loope mov xor outsl movb (bad) ss jmp (bad) adc add sbb add lret aas sub test lds cmpsl cmp sbb (bad) lock push sarl idivl test dec insl jmp mov mov push stc inc mov and sbb and push lock push loop js sahf and xchg push outsb ficom xor stos mov jb xchg dec (bad) lret sbb xor movsb stc and mov pushl lret adc pop cltd rcrb mov imul or ss rorl ljmp sarl add ror jbe (bad) mov iret loope and cli sbb jo int enter xchg push addl push (bad) (bad) and cmp push mov xor pop mov insb lahf sti xlat mov aaa or (bad) and ds mov mov daa out icebp add fldl or mov ret mov (bad) jb xor jbe mov enter outsl xchg fdivrp lock ja out ds jl mov in lahf pop rcr mov and mov mov xor xor ss adc cli and sub andb or sbb and cli cmp nop mov jb out loopne pop cmp jl imul sbb adc inc test adc pop inc in and jmp sbb mov xchg mov push dec lea jmp int (bad) incb enter fs mov or jo pop pop in ret mov add pusha jl pop cld mov xlat push dec inc adc lock testl adc add pop pop stos inc and mov add ja cltd mov lret jnp push movsl sbb ret sbb stos jle mov ret sub popa lock daa push sbb xor inc jle xor dec scas cmc cltd repnz mov pop cmpsb xchg sub lea in inc fucom (bad) icebp into or aad sar mov std outsl cmc push lret dec pop arpl and rorb sub mov hlt inc or cmc decl loopne fnclex mov jmp push xchg xchg iret jnp jns dec xor push dec ds cld sti mov fcomps sub or (bad) sub adc cmp push xor daa and dec imul std hlt mov divl insb xchg xchg inc loop stc cltd cmp in cs add push push aaa adc inc jne into mov mov add push (bad) out (bad) pop xor xchg arpl je (bad) hlt jl mov cwtl aas (bad) daa xor fisubrl sti loop ficoml rorb pop movsl or mov sub movsb sahf push mov xor xchg aam push psllw aam popa imul mov icebp jbe mov lods (bad) testl pop pop aam loope sbbl leave add jnp pop mov push aas out pop push lods xor out into mov lret cmc neg aaa pop ss or in int cmc pop out test and inc sbb mov sub daa stos xor sub cmp movsl arpl push out jnp jge (bad) imul imul out icebp stc ret fisttpl push pop sub pop add fs fs mov or inc outsb mov pop jp push icebp add lahf loopne mov movsb dec jecxz mov mov cmpl push sub lcall push pop mov jp sbb fstps sarb dec sti (bad) lahf pop outsl or mov stc daa xchg jb sbb pusha andb dec ljmp fist dec in (bad) push hlt xor cmp push jp adcb pop clc test dec xchg addr16 dec dec jne inc lock dec cmp xlat inc add add mov aas mov aad xor sbb test ja addr16 int3 mov aam fcmovnbe jle xchg subl sar out pop cmp dec addr16 xchg fldt clc sti int3 jp pop jno aam pop jb pop xchg jae mov mov inc (bad) add imul jl xchg enter packuswb mov mov mov lods loopne mov xlat xchg jnp imul mov fidivr sub rclb mov pop insb xor xor lea ret mov repnz test ret fiaddl stc loopne push pop dec mov add inc ret jns sbb dec adc rorl cmpsl cmp adc jl cmc sti mov push test adc cmp mov sbb in mov xchg sbb andl rcll inc or push aam sub inc es aam jmp add xchg insb mov mov icebp cld xor cmp fwait test push cltd loopne mov fldl jae js pop mov sarb xorb xchg sub idiv dec mov (bad) rclb sbb mov or (bad) mov jge inc dec add popf inc mov lods inc out das das xor push mov add stos push dec lods dec test push ret jnp sub jecxz imul les cmpsb xchg sbb ret outsl scas dec push adc imul gs divb mov arpl aam inc into mov nop mov fidivl dec sbb rcll roll loop adc outsl out xchg xchg mov and insl jmp sti xchg pop loope pushf ret test pop loope enter adc mov jno adc sub (bad) lods mov mov push iret xchg adc imul adc push add lret jbe cmpb sbb fiadd stc fadd jp mull fmull loopne rcr dec ret jns sub ljmp imul sub adc cmp sbb iret aad stc pop cwtl mov push movsl (bad) pop in mov xor pop imull lcall iret dec test arpl jbe cvtps2pi jns jo mov pop jo outsb xor mov pusha sahf sub add loop xchg or incl pop xor add lahf aad adc rcrb dec movsl pusha sahf dec lods mov and mov jmp push cmp adc lret inc testb jmp cmovns std mov loope jae lcall addl icebp sbb sar cmp es mov adc lcall enter cmpb cmp jp dec lock push fsubr mov jg fs push mov inc inc adc pop bound dec xchg jnp int sar mov pushf nop push lcall outsb xor (bad) and pusha rcrl mov pop or sarb leave imul mov imulb fs xchg jae inc mov aam iret adc sub xor jae sub sbb (bad) dec mov push push jp dec or lds xor ret push mov add and jmp loope push dec jecxz mov push xor push jbe mov (bad) xor jge mov sbb lds mov mov pop lods loopne pusha (bad) gs (bad) xor add xor add in loope fisubr jge nop mov sbb and push push in pop push movsl fwait sub mov xor test cmc xorl inc js adc in mov (bad) push mov mov mov adc out test clc pop (bad) in cmp xorl ja or and adc xchg sbb cs icebp cmpsl mov loopne loopne fwait lods adc jne repz nop repz in (bad) mov fistpl dec insl sti inc sbb out into jns dec jecxz push lcall fwait sbb pop add cld in xor popf fstps jns sti sbb out mov aam mov aas adc lahf and adc cmc scas fsubl push shrl insb add sub (bad) test jo addr16 and lret sub inc sbb mov inc mul mov mov xor adc fwait pushl mov in and ss sub sahf xchg mov clc fisub pushf lock test pushf sti sub xlat add cld cmp das sbb dec cmpl cli ja (bad) jb notb in jae (bad) outsl inc incb jle cld cs sbb movsl push fwait cli mov shrl aam mov clc int3 pushf mov adc push lods aaa add sbb into jmp and dec gs lea lret xor (bad) jb in sub fildl sahf ja mov insb xchg jae jmp mov ficompl inc inc lods xchg mov (bad) or jb ret arpl repz imul orl in xchg std xor loop iret insl mov cmp sub dec pop lods mov mov mov loope inc imul out aas shrl add mov sub jae cwtl mov pusha mov mov or rdtsc dec ss and repz jge push test daa daa stc push imul out sbb pop pop popf pop jae mov fsubrl ljmp xchg dec and lock and pop xor push das push xchg inc sahf push push test pushf jns shrl cmp or cmp mov sbb inc add popf lahf js inc inc je xor test push sub movsl outsb push pop insb mov jmp mov jb sub pop das test sti roll mov scas std add add mov sbb or mov test jmp jmp std test fprem or inc sub jnp mov pop push jae mov lock sbb cmp pushf push call pusha scas jbe mov jp cmp pop push cwtl mov pop push push push repnz jecxz jmp dec sbb jle fldcw insb scas dec jns nop add stos and inc sbb jecxz es pop inc push cld dec sbb push stc lods sarb push dec lods insb push fist lods test es push sub loopne pop inc insl arpl in mov enter push lea mov xor into mov pop out loop inc lcall int jp ljmp out push add mov outsb iret inc daa pop loopne xchg push push xor inc adc dec xchg (bad) cmc arpl mov mov dec popa cmp push dec fwait sub sub sub or insl mov mov nop bound dec addl sub clc insl and fidiv insl push jne pusha mov inc lock int aam or and sub test ja hlt mov and and js sbb lcall mov lock mov nop push and cmpsl out iret inc cwtl fcomp mov insl sub mov movsb push lret pop lock mov inc outsl sub push data16 adc sbb dec add xor out mov sub std xor push jbe mov sbb lock jbe lcall movsb push adc jge dec es clc lods push adc or pop in iret cld sbb scas inc cmpsl xchg stos jnp mov incl and maxps insb sti fisubrl pushf sti lahf cmp popa xchg sbb mulb nop lods sub cmpsb xor aas shrl das sbb in and sti fmull js or add out push inc test jne bound xchg fiadd outsl call jg adc dec and mov sarb jl jl clc and and (bad) popa cs outsb adc mov cmp dec loop clc aas ret mov movsl push push or fbld shr fiaddl fcoml stc cmp lret call insl dec xchg popf icebp xor or pop mov addr16 shlb imul and mov adc in fs repnz insl aas xchg int3 scas ss pop jmp fs xchg sbb mov dec shrl arpl jmp call dec sub sbb insb and mov insl nop inc rorb push jmp int jnp inc inc (bad) leave sub (bad) jl fsubrl imull stos jl push lds popa or add or jg adc roll movsl xor jl mov xchg aam push lods sbb bound int les movsl adc cmp add or call repz jmp fs test dec sti test loop call jb push mov cmp fdivrl and sub inc adc mov fs orb jmp shr insb jne sarl xchg dec ds dec repz jns jle xchg xlat cld mov aaa mov pop lret test sbb sti (bad) xor or jne push xor xchg pop (bad) and xchg cwtl imul xor insl inc test rcrb or imul ds (bad) into dec lds sub xchg mov sahf int and in push outsl lds loopne adc scas jne call push bsf loopne mov rorl rolb fwait xor cmp repnz jnp rorb inc test not sbb mov bound xchg jl scas pop pop ret rorb aas sub push sub cmp jle xchg and repz insl jmp repz mov inc push jle push sti rcll test inc test xchg frstor sub or iret sub (bad) insl pop sbbl or sbb imul xchg lcall pop sahf xchg push inc pop pop loop int3 ds mov cmp push inc imul lahf (bad) addr16 fcmovbe (bad) pop aaa and aam pop dec or pop je std cltd push pop inc int cmp stos cli add insb jns push and call test and push cs idivb mov xchg aas sbb jl (bad) sbb test pop add in repnz xor (bad) or cmc subl icebp xchg subl ja js mov inc pop lock mov cwtl into adc (bad) jne mov and int sbb xor and (bad) repnz mov lods adc outsb call push push popl cmp pop arpl pop push aad xchg push push inc push mov pop pushf insb sti decb mov imul jae popf pop mov movsl jg (bad) xchg mov int3 bound pushf lcall lret inc push mov push inc inc sahf pop mov sub dec dec dec jge (bad) ja,pt movsl or or inc jae int3 lock bound push ds fdiv xchg fwait xor mull mov jnp and ss mov pushf mov push adc cld cmp pop xchg mov jle inc sub adc pop mov js or mov adc cmp stos rol icebp dec push dec aam enter adc jg lcall pop adc lahf inc sbb xor out sbb push adc pop sbb adc dec inc fwait jno cwtl cpuid icebp jnp icebp into les mov aad and popf stos jle add add pop arpl out or dec sub aad push cmp mov mov mov (bad) xchg insb and jns dec or lret xor andl pusha repz push das inc and add xor push inc popf sbb mov xchg sti xchg int sbb xchg or (bad) and loopne cmp pop sti cmpsl mov xor mov decb inc or adc mov or sbb add js mov in mov lock fild pop cmp rorl cmp add ljmp push subl mov loop insl scas sbb add or or pop repnz arpl pop push xchg loopne mov int3 jnp inc inc in int test nop add jo push sub mov fcomps scas pop fs outsb (bad) mov pop xor decb (bad) cmp lods push inc pusha popl and sub jno mov jae xor mov jne (bad) and loope (bad) in idivl pop pushf or dec int3 mov jno aaa scas cmpsl jno inc fldt roll das and outsb clc push movsl in dec insl test outsl xlat or jecxz pop push scas cmp movsb sbb test ret and out in cmpsl lcall (bad) push aas xor (bad) jns xchg pop pushf lahf mov fsts cmp mov pop fidivl idiv pop loop cltd mov popf stos sub mov pop inc test xlat fdivrl mov lret ss (bad) aam std fisttp out push iret pop mov inc leave in xor pusha push mov dec mov sbb sbbl rcrl cmp mov jo add adc pop sub mov jo loop sub decb xor out jl scas xchg int xlat in cltd into cld imul fwait cmc jb jo push js ja push xor xchg mov jns pushf jae dec outsl dec mov and ret lods out inc negl imul jns push pop mov dec mov addr16 mov adc ret pushf nop or orl mov jl mov sbb cmp stc rol sti test xchg roll notb mov cmc test sbbl push push pushf stos shrl dec inc sbbl fistpl or jg fldl repnz ja push shr (bad) iret aaa xor test push sub into mov sbb lock dec (bad) jle inc push or lods aam dec ret pusha cld push in xchg outsl sti repz addr16 fbstp ss inc ljmp je xor in mov jo flds inc stos (bad) push jl das push rcrb adc int3 imul out pop cmp mov xor (bad) push aaa dec add add xchg jae inc mov roll adc imul add pop cmp fsub mov inc mov pop out repnz push jl jnp inc fiadd loop adc (bad) mov push sbb ret mov sbb (bad) aaa dec fsts in popa jo aaa adc dec inc or xchg sbbl and mov out adcl cmpw mov mov dec xchg repz (bad) pop or inc push clc sub jne js js mov mov jnp or test cltd pop and xor cmp imul lcall inc sti push push cmp mov and das (bad) lcall stos pushf dec xchg ja sbb dec stos addr16 loopne jg inc inc sub mov inc push clc loopne sarb mov push pop add scas mov inc inc jmp jno sbb lcall xchg addl cld lret das push leave dec or pop addr16 bound add mov stc cli cmc jge push jmp push add sbb or inc mov or ljmp in (bad) jns lds stos (bad) (bad) jmp movsl push xchg fwait jmp dec stos popa mov or adc call repz sbb push test outsl in enter test or pop mov xor pop out scas lcall pop adc (bad) xor neg (bad) jmp aam arpl out mov adc imul lret fnstenv dec add mov xchg xor mov fisub out sbb push imul inc push jmp push inc dec out push rolb dec jle fsubs stos out movsb loop (bad) jmp inc addr16 (bad) adc pop (bad) jmp sub outsb mov cld js push in fistl fldenv xchg into xchg or fcomip ret pop rcr and fcmovnb adc xchg loopne mov int pop test sti add sbb push enter pop mov mov jae test (bad) in and pop sbb and cmp fsts sbb xchg cltd jne cli inc dec adc jl movsl mov imul xor mov imul test cmc xlat sub cmp test pop xchg pushf adc mov ljmp std mov popf outsl mov or fld out push aaa enter out push xchg inc aas cli jae pop fstp bound shr and xlat scas adc (bad) mov push inc cmp add jns push push jae add popl adc lods test outsb ffree mov call test xor and adc aam xor adc dec data16 (bad) cmpsl pusha imul gs js,pt cmp insb jnp sbb insb mov ja rcll mov add sub or mov xor cmp mov jge aas gs mov dec (bad) decl aas cli cwtl pusha cli ss aam inc push cmc pop repz cli pop push test rorl sbb mov test sbb in mov push inc jge pop bound adc jbe push test orb xor addr16 sbb sbb mov (bad) adc jne cmp xchg pushf or xchg mov jo (bad) insl jo in rorb and ret cmp push sub faddl dec loope push jmp mov mov int sbb js add mov lahf mov push jnp cld push into mov mov cmp ss jns ljmp icebp insl mov push je lock jge push lods sahf maxps xchg je cmpsb outsb mov and lea lock push dec (bad) add sbb push roll lds push imulb xchg (bad) push outsb jns clc cmc ljmp cli inc jp iret and pop stc push jge out fdivl xchg mov daa adc mov scas mov lock ljmp cli roll or jo mov push int das push cmc xchg aaa mov jne insl and pop cmc (bad) ret xchg xor sahf xor pop test pop jl xlat push movsl sbb iret cltd fldcw xor push iret add mov les mov jo xchg lods mov mov enter mov mov xchg shl xor mov sti neg pop add loop mov gs mov adc adc push lea push push js fistp div icebp sbb leave frndint and cmc in pop xchg push jae pop lods daa sub fucomip dec jecxz mov jns test (bad) into sbb nop (bad) push sbb testb insb push ja push arpl cmp fsubrs xor cmp push jl (bad) comiss dec push call cld dec push xchg mov lret pusha xchg das in data16 lcall mov mov (bad) pop bound pop loope ja xchg sbb and jl and stos test shrb mov fldt mov mov mov bound inc cmp or movsb jp dec push fnstsw inc jp mov lahf dec neg pop ljmp jge inc test inc (bad) mov fwait pusha ret in cmp fdivrs es add ss fisttp xor movb sbbb (bad) insl outsl pop std loope test and jecxz jmp pop mul or or jp pop dec jp mov jo movsl mov cli or mov adc cmp das dec ja jl into sub xchg mov orb icebp push decb lret or nop aas xor scas xchg imul clc std movsl (bad) jno mov cld push dec mov add cmp addr16 cli (bad) xor rorl push and and into sub mov xchg jp fdivl xchg int3 out bswap pop cmpsb aam push or mov xchg (bad) jmp lods jp push data16 xchg sub (bad) fisubrl test (bad) push add mov popf push shll fcoml dec push mov cld mov mov repz test jb mov (bad) xchg mov mov sarb sub xchg rorl xchg jl movsl mov test loopne pop lret cmp mov adc inc hlt or ss or mov mov dec les mov jb xor cmpsl rorl into cltd mov ret jne sbb xchg fstps daa (bad) mov dec sbbb test in iret (bad) sarb or xchg add stc pop mov jns shrl in ja imul jno add rorb inc mov (bad) enter jns cli pop jmp popa es jmp add arpl push (bad) das mov cmp mov movsl add sub inc in loopne mov test jp or sahf int3 loope outsl mov push xchg push lods repz inc mov mov mov inc and cs jmp jge test pop cli jbe and fiadd (bad) pusha push cli jp int adc mov mov cmpsl push fs daa xchg clc add sbb clc (bad) mov scas inc aas ret pop test push in or pop xor xchg loop mov push xchg xor push sbb shr enter push mov aam int pop push cmp clc ficomp xchg jecxz add jge icebp pop fidivr mov lds sub stos std (bad) xor mov into jp in add stc fs andl mov aad outsb jmp imul or and jmp mov ja test pop dec pop scas inc aam jle insl test mov popl roll cwtl in xor rolb and repz lds (bad) push jmp stos pusha aad push jbe cmpsb push das enter fnop sub ret je pop shlb mov bound mov (bad) dec add jns jnp jg rol adc xor (bad) cmp neg ss sub pop xor in sbb call or mov in arpl clc cmc std aad repz xchg mov gs mov out inc addr16 outsb xlat sub pop and iret xor (bad) jge or sbb inc push fwait xor sub push je addr16 xchg addb imul or jnp lret mov icebp ljmp or into into sub dec cltd (bad) sti inc and fs testb push mov sbb ret loopne,pn dec inc inc test adc sub jne cmc cmp mov or push push mov std dec push cmc ds (bad) ss rcll movsb jle dec in cli or insl loope es add packuswb sti or not repnz and lea push mov sub bound in dec push adc clc int das testb call sub icebp rcll lcall push mov adc mov das and mov std daa popf in push pop mov add sbb adc leave mov std lods sbb dec in cmp cmp (bad) fisttpl mov jle cld sub xlat mov add and xor cmc jg add jae cmp aad lret adc xchg mov adc xlat addr16 cli xchg mov aam rol je adc es call cmp (bad) mov dec mov ljmp shrb lods pop dec ljmp fisubr sahf xchg mov xchg fistpll (bad) aas in dec lcall mov js in repnz xchg subl xchg sar out push push scas imul mov pop ret int3 xchg xor aaa repz inc das jecxz jnp inc outsb lds ja stos xor mov pusha mov jns add dec lods rcrb out dec popf push mov sbb loopne addr16 sbb sub cmc pop pushl jmp mov movsl jns cltd xlat cltd cld pop dec ljmp sahf lret std jmp cmp out cmp sbb or in subl ror outsl xor pusha mov cs inc stc enter lahf les dec sbb adc pop lahf cs jmp add lods fldcw repz (bad) and xchg call (bad) fldcw lret ljmp jl or outsb pop int mov gs jle je cmp xchg or lds add lret mov pop push and bound mov mov xchg test lret inc rcl std pop fild ja adc xor daa push iret push mov sbb pop fisubl xchg hlt inc (bad) pop inc sbb mov xlat es adc pushf fldt inc imul dec xchg inc xor push outsb mov mov fnop push fsubrl fidivl out jo mov out sbb xchg xchg push jbe inc pushf dec stos stos in shrl fistp mov inc (bad) bound movsb jne or adc leave sahf sbb adc cvtps2pd test imul sti pop icebp lcall (bad) jg or les sub hlt sbb push sub pop push shrl inc xor pop stc cmp add rcrl dec jo ds mov int3 sub sti xor mov inc jo sub out or movhps mov mov mov cmpsl mov out inc insb roll jmp xor flds in adc iret mov mov stos aam inc lock popa xchg mov xor xchg (bad) mov aaa aad (bad) cmc inc pop out jb cmpsl call jl aam mov in arpl rcll iret ficoml xchg push sub xchg lods sbb xchg andl (bad) mov sbb adc mov inc pop dec lret popf dec out adc xchg cwtl aam add (bad) hlt fsubs sahf fnstcw cmpsb jae adc jg and sar adc add dec insb sub add jmp test inc and test scas loope int push xchg sbb xchg inc push lahf mov dec inc add xor ljmp and fisubl dec xchg jno fistp stos scas fidivrl and xchg cmc xor dec popa mov sbb push jmp lock scas dec movsb insl jnp negb loopne stos xor adc xor push dec mov hlt fstpt pop sub pusha gs jns add pop cmp lock sub mov cwtl ficompl pop pop and cld int or push stc xor jl cmp xor fsubrs ret jge shrl repz jbe fiadd mov cli xchg adc gs out les outsb mul jb push push jp fisttpll inc push (bad) push ret aam jmp pop fpatan xchg jmp into pushf test mov in inc dec xlat push add add cs dec xlat add push loop push mov xchg adc lret dec sbb adc cmp gs pop inc mov push cs ror pop rep adc push gs push lock aam adc sub xchg lock repz in jne ss addl sub mov imul mov insl out call sbb xchg leave inc lret ljmp out in dec inc cmp mov f2xm1 aaa mov insl cmp sub jae,pt cmp decl loop sahf pop icebp leave rcrl into push loop xor addr16 pop ljmp sbb cmc int3 fwait xchg cld mov xchg push shll cmp loopne andl in jecxz jle and enter in xchg mov xchg jne adc mov fs xor adc xchg (bad) add aad sbb scas int3 lahf stos lds popf pop jns bound dec jmp jo inc mov or sti push les jns cld add dec lods inc (bad) jmp cmp pop pop hlt xchg xchg loope insb push and lret lret stos pop test xchg mov or mov ret adc mov cmc sub int3 push aas cmp and xor pop stos les or push push cmp cmp insb cltd les xchg xor stos mov sub lret xor cmp fldenv dec int fbstp insl xor cmp push lret and mov pop sbb lods xchg mov pushf pop cmp inc push stc mov popa std (bad) lods xchg mov mov rol xor ds cmp pop fwait xorl fwait jo sub push iret sub lds push stos sub jbe ret push mov rcrl xchg (bad) mov mov sbb and rcrl test cmp lods in mov bound not push je adcb pop mov sti insl test call popa xlat outsl cwtl sub repz mov jg jo loop and pop addr16 add lods xchg or in popa pop and push sub xchg pop mov test test fdivrs push ret or push pop mov push add xchg jns ret xlat fwait push daa fcoml cmp clc in js iret lahf or out inc or fildll pop sahf mov adc push sbbb push shrl icebp in sbb pop (bad) or outsb jno scas xor pop test cli scas icebp into subb push cmpsl push and jnp jge inc es rol mov ss mov adc call orl add xor inc je inc in adc adcl mov xchg arpl mov or dec lfs call xor pop xchg dec scas js scas call sub call xlat cld lods push je scas subl aam ja movsb (bad) clc ja gs cmpsb lea fdivs pop and jns das gs (bad) hlt mov sbb ret jl cmc (bad) repnz lods xor aam and leave in pop mov inc add inc xlat test cmp mov add nop jmp aad (bad) decl sbb adc cmc loopne jne xchg jge test add or jo in aaa and add push or mov xchg fiaddl cmp inc notl jg dec or pop inc std adc js push lcall or pop mov adc ror out xchg fldcw repnz or fcmovnbe cmpsb mov xchg inc (bad) and and pop (bad) fchs sti aaa add fwait dec leave daa xorl mov push arpl aad addr16 adc loope push sbb andl cmpsb sbb jecxz das jg cmpsl mov push cmp out mov pop cwtl es or mov fildl mulb fs adc test jne addr16 (bad) out dec cmpl shlb push fsts or idivl xchg mov jg rol push add or push and aam xchg jg xor js (bad) fwait pusha push cmp mov pop test jne into stc or fld (bad) movsb jb or enter (bad) hlt jmp sbb mov imul jne sbb or lcall (bad) cmp push data16 and hlt adc jmp jecxz test ret cmpsb jne lcall xor (bad) (bad) movsb sbb dec xor pop sti adc imul adc imul (bad) ficomp or xorl int3 testb inc fs out sbbl pop mov subb sbb adc inc cmp dec or or adc out push push cs aad dec cltd push and dec insb out dec add test adc mov mov sbb mov adc gs pushf mov into push ss push call les and xor fmull jge popa data16 fcoms and popf dec pop arpl cltd push and cld xor pushl xor (bad) xor cld and dec in mov mov add inc adc (bad) add fwait (bad) cmp call sub jns and (bad) push push inc (bad) mov and (bad) jbe jo int3 or mov das inc out mov (bad) out or or jb xchg dec sbb sbb inc dec test push xor pop mov sbb pop popa mov mov jb jg sub lahf cmp pop or in sbb push mov ljmp push jg and push adc add movsl cmc push insl es push pop loopne (bad) (bad) iret push sarb sbb jmp js loop pushf daa or xchg jne jns add fstl mov add and add test xchg xorb daa popf outsl sub mov add icebp cs daa ficom addl jbe lahf mov add mov mov push mov or and cwtl jnp in cmp or loopne aam testl pop mov pop xchg repz jae dec adc xlat imul adc es cmc nop repz scas es test (bad) cld sahf or or push cmp jno int3 add adc imul (bad) cmpsb imul insl pop scas addb fwait xchg shl stos stos sub cmp sahf out inc dec mov les sub cmp pop leave fadds negl mov pop mov aas (bad) cltd insb xlat or (bad) xlat loope ljmpw xchg sub jbe mov xchg iret popa xchg xor fisub mulb lock mov insl sbb xchg cmp ret iret xor loopne push add mov cmp mov lret iret xchg or cmp bound sub pop scas inc out mov pop frstor jb add pusha push xor ds push mov adc sar push lock jnp test pop mov (bad) scas in mov xchg ds mov (bad) jbe sahf (bad) mov pop int3 push fs pop inc jns sahf movsb add das mov pusha out or dec std and dec (bad) push xchg jb and dec push je mov leave jmp loop sbb ds dec das out xchg sub dec push in lret xchg jmp push shll cmp adc sub es cld int and jecxz xorb subb mov mov (bad) negl out xor fimull and arpl sarb out nop xor and repz pop js push lds movsb sti leave cmp xchg mov jnp shlb popf push add push ss sbb fwait mov xchg dec iret xor jae jecxz aam push (bad) mov cmp or lods dec push xor adc aaa imul imul je jns fcoml (bad) in loop int js ror es xlat rorb lcall shrl inc loope movsbl mov je mov lcall mov cmp mov pusha and mov pop leave cmpsb adc insl cwtl push out adc out dec jne xchg fndisi(8087 add out jp call sahf inc mov mov xor out push jmp mov scas xchg lret jae test insb scas and popf adc aam out mov add mov push flds mov test jno sub fild mov movsl push hlt pop das sarb popw popa fadds push push in arpl lret aaa inc add outsb imul inc xchg js jge and mulb outsl lea inc mov mov sub mov adc cltd or jnp repnz pusha dec jbe adc ja (bad) out push fcompl repz and jnp sub mov sbb pop fcmovu arpl aas inc push into int3 sbb clc dec mov xlat add or sbb ss and pop test std add enter jl xchg push hlt sti xor nop fldcw mul sbb jg and or xchg jae test pop push jg addr16 call mov cmp push hlt rcl (bad) mov std and out xor mov loop dec dec leave push test mov lock fs fisttp dec fs mov fwait into and out push insl das sbb jp les scas fwait repnz mov fildl xchg popf jnp push dec repnz jns push das test loopne pop add inc add loope lock add loopne hlt call in repz (bad) (bad) ss jle lret lcall sbb pusha push mov jns push lods roll jo mov jnp lods (bad) repnz arpl ss mov js jb clc dec ljmp pushf cmp pop push pushf aas aad fs ret mov leave dec jmp add push sti mov lock adc icebp ljmp dec test sub or push aam sbb dec cmp cmpsl pop sarl dec jg dec in lcall (bad) pop xchg and inc lea fiadd xor insb inc lea adc sub push cwtl ja cltd or pop or iret or cli sub (bad) dec add or pop push cmp daa ja pop jmp and fsubs jmp mov or mov daa repnz out adc sub jl ret int3 aas mov sbb pop jp pop popa sbb loop jnp cltd idiv bound xchg pop xchg push mov jp insl lret (bad) (bad) inc inc jl cli test or xchg mov popf xchg shlb pop loope and rolb lahf pusha lahf stos and aas mov push jmp jecxz jg mov push jne addr16 push out jo or and aaa or loop cwtl jb mov mov test imul cli gs int3 aas add add int int cmp inc cmp inc iret lahf es cmp push jbe sub out xchg add ret inc xchg outsl xchg aad mov push lret outsl xchg push jge or bound clc jge sbb mov sti insb out in add jmp fiadd fs cli std push xchg push jae (bad) xor mov push pop data16 ret pop enter fdivs mov dec xor fstl ret pop out dec (bad) int3 dec adc adc inc sbb ja or push adc adc dec push jnp pop inc cmp push xor ficomp neg inc pop xchg insb fldt daa (bad) fldcw ret pop push sbb xchg push int3 mov shlb jo lods xor cwtl jo ret jmp push sub cli aad jae out pushf out sbb imul mov inc xchg les dec jbe mov adc pop fadds inc icebp out cmp or and cld mov inc mov adc mov rorl (bad) popa lock insb mov fcoms add out clc dec cmp in xor sti (bad) (bad) jmp and inc push dec divb dec test in mov push stos xchg aaa nop inc or pop fist dec cmp lahf popa into imul out movsb loope std test push add sbb xchg into in cmp jb push bound mov dec pop ret sub xor stc (bad) iret ljmp pusha pop repz cmp arpl andl and cltd xchg dec and popa xchg cmpsb repz or in hlt mov (bad) int3 mov sub pop mov ljmp in mov cmp jnp fwait mov cltd sbb add fwait sbb push cltd (bad) flds rcll push xor movsl mov scas enter pop or icebp push inc mov stos lock dec push shll jae stc mov stos insb stos add pop mov mov mov lea and sahf imul or movb sub sbb xor pusha jbe (bad) mov adc stos mov push sub add xchg jl mov sub mov outsl nop fwait cmp cltd mov fs pop fs lods pop loope mov (bad) rorb mov ret add into or xor jp pop mov xchg inc or jns inc lods xlat jns mov push mov or xchg aam int3 out xor sahf into adc inc xchg mov jp xor jne adc cmpsb mov and jno mov dec xlat stc mov or adc nop pop sbb mov lahf and mov xchg mov inc fistl sbbl push and ss jecxz aas pop es xchg loopne hlt out sahf push inc ret lret stos jle aad pop jo in xor sbb hlt mov imul pusha pop dec push push in pop adc lea mov out or rep adcb jle scas (bad) mov scas mov xchg pop fbld ljmp add adc in xchg pop test insl daa mov shll iret ds inc paddsb add xchg aad cld ss std mov movsl jecxz in jle jo sbb mov ja add jecxz adc inc xchg ss cmp enter shrb inc sub stc daa mov jae dec xchg mov cmc pop rcll in push fidivrl mov pop mov xchg (bad) ss ja in sub xor pop dec hlt scas xchg jo stos scas lcall sub cmp lock and test jecxz dec daa repz sbb (bad) into adc inc loop cmp jecxz xchg pop insl push sub jmp add sub popf iret out jns lret cli lcall or test mov and ljmp push pop in push cmpb fnstsw xor test pop add cli out mov divl mov outsl icebp aaa movsl aad rorl mov jae adc adc xchg gs in bound addr16 hlt adc mov mov cmp jnp or add push mov fdivr addr16 cmpsb push xor loope shr cmc in dec xchg jne push push nop xor (bad) out xor jmp xor (bad) xor and jl aas sbb or jo jns fistp fcmovnu ficoml js xor sbb inc push outsl sbb and lock jo data16 aam (bad) cmp addb setno push stos jb jp dec je inc xchg mov fistp push cld das adc popl test xor int3 dec fs mov adc cwtl push cmp cwtl and stc push pop xor ret jp xor movsb sub mov xchg push cmc (bad) dec sbb add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add mov add add add add sub add and add sub add add add add outsl jb js dec popa imul jb gs insb add and 