(bad) (bad) call in push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call addb add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret insl fstpt push lea push mov (bad) or add adc (bad) jne push paddusb push mov pop lods push push xor sub std scas loopne push call push ret dec sub je jg test cld (bad) call or push push cmp push or addr16 dec adcb cmp adc fimul pop mov popa out push push lcall or or mov sti jmp xor mov cmp push mov sti jne mov dec sub outsb outsl pushl jnp sbb sarb je push push aad daa xchg je (bad) mov jmp rcrb jmp sub in je or test cmp jae mov xchg jmp aam inc and add push out (bad) xor adc add neg sbb inc mov test leave or cmp ja jl and xor mov adc rolb std mov std or add mov and (bad) data16 movl and push es mov pop xor mov mov dec mov jge sub pop cli loope pushl sbb aas mov mov outsl fnop std lea mov pop or imul cmp sti in or jae push push jmp gs push mov mov add (bad) notb pop sub lea push cmp fnstsw jne inc mov sahf or mov jmp inc and es out (bad) arpl clc add or mov test cmp lea cmp enter into or and add push mov aas jbe jp pushl mov push pop add inc and xor push in les fucomip insl arpl pop mov add lret (bad) and fmull rorl and xor fwait in jge sub push fadds nop push inc push fldcw int inc fdivrs cmp rol shrl icebp fisttpll cmpl xor push scas mov je ret mov decb (bad) hlt push lea push push push bnd (bad) (bad) out or xchg add push out ficom jns inc addl out pop jg lock leave mov push outsl insb (bad) in inc push add leave adc push or mov test push mov cmpl pop push hlt mov mov or inc adc sbb add xchg ja insl add xor lea mov add xor mov adc xchg fistp lock (bad) xor jg ja mov push sub cmp adc movsl dec in repz xchg cmp in outsl add shufps adc inc lahf imul out push push jns data16 cmp fmull xchg insl mov adc les test pop popf sbb fdivl clc or sbb push sbb insl mov dec test mov jge ja jbe outsl int3 mov lock jae cmp mov fsubr adc pop (bad) or stos sti jb dec enter cmpb sarb xchg inc in jne push adc add or xor sub bound dec or ficompl or push jnp frstor cmp cmpsl and sub pop jmp lea xchg divb ja decl mov cmp jle cmp pop mov inc add inc jb sub jl leave js xchg xchg or nop adc lret mov (bad) xor jge lahf fdivrs lcall mov lret in jg pop jno add add mov mov ret push jmp in mov in (bad) sub or mov mov mov add in mov sub mov imul mov (bad) decb leave mov push xchg cmp pop leave cmp push movb add or aas test mov xchg bound dec mov push enter movsb and inc dec jb and and and mov je mov inc movsl movsb pop push adc test (bad) loope push inc xchg push enter mov (bad) (bad) fstl adc push and repnz imul add add add mov inc add pcmpgtb ret cli cmp cli lods fisubr imul movsl fnsave (bad) or or cmp dec inc or pop jecxz pop jae push fbstp add (bad) notb call push jle or (bad) mov add xlat mov sub ret outsb (bad) bound mov add (bad) cs mov or inc idivb add mov aam cmp jae cmp je popa ljmp cmp jl sub xor (bad) jmp mov or hlt adc lock or sbb cmp push push and cmpsl or mov ret cwtl adc mov fwait imul daa sub or out sarl and clc xchg loop add jg mov push shr push clc ja mov mov nop mov add das cld pop cmp lea cmp or (bad) lea sbb mov sti cmp ljmp pop and dec cmpb rol sti or jle xor push loopne push add dec dec mull sub mov mov adc outsl mov decb mov lea lea cmp js loope cs jns adc lea push orb pop in add pop pop add adc out mov pop push orb imul jle bound inc and in hlt movb pushw pop adcl xor sub rclb test xor xor sbb int pop (bad) mov and push pop sbb cwtl pusha and adc xchg adc mov in mov andl and add or movsl cmp and in push sub or (bad) or cmp or jnp mov sub outsl sbb adc outsb mov inc or insb je inc ja push aas test bound pop popf mov cmp xor rcrb loope decl sbb insl inc mov popf (bad) mov xchg dec sub add mov adcl repz arpl dec je (bad) out mov loopne incb adc add testb enter sbb mov andl mov (bad) testl xor lea aam sbb jle mov xor sbb mov add sbb or mov jl ds ja lret mov or dec mov jecxz (bad) in test scas int3 imul pusha pop fs push push jle lea (bad) cmovb cmp insl or pop push and and jae add mov ja adc les repnz test sub mov shlb xor cmp sbb lret jne add mov sarl mov xchg ja mov je int3 adc ds adcl or out cmpsb xor sbb push and addl push mov push add jnp fmuls mov mov in xchg push iret cmp in add fsubl (bad) es pop push fildl pop jne popw loopne or push xlat mov mov (bad) jb mov ret ja andl and xor imul rcll (bad) pop inc push cmp in mov add fstpl mov pop pop jmp out ja addr16 dec sub sbb loop out pop leave inc icebp dec push jne jge push mov mov add push mov xchg push xor cwtl stos sbb subb or adc xor pop ret adc std mov mov (bad) jmp xor insb push daa pop jmp jo sub cld adc cwtl push pop push push rcll (bad) push mov and cli sbbl cmp enter mul push cmp mov out testb adc sbb enter push mov push cmp dec lock jb imul and pop rorb adc nop andl push clc and cmpsb repz mov pop mov jmp jmp sbb sbb mov mov fadd pop inc lea lock add int3 cmp stos fdivs adc dec (bad) cmp cmp pop out fiaddl cli mov mov pop test mov stc mov push movsl add fmuls mov (bad) in sbb or cmpsb imul pop or or gs sbb popf cvtdq2ps pusha xor inc cmpl or ret inc sbb ret test add cli mov xchg fimull sbb decb hlt inc pop cwtl fstps adc (bad) bound jbe mov adc push repz sbb bound fs push sbb out stc add daa push fnsave sub jmp cwtl fcoms lods or mov test pusha xlat add and xchg fsubs xlat rcll cmp je cvtps2pd movsb out or xor (bad) mov sbbb out and mov popf nop adc push fldcw arpl push pop mov adc mov pop test pop pop push push jbe or xor jmp rol (bad) out sbb push push xor js dec lods mov mov adc (bad) out (bad) or add fcomps and or mov lods les popa sub les push mov cmp cmpsb sub sbb pop fs inc push push mov mov in adc insb pop lahf mov mov push jne mov mov das jecxz inc and and push imul mov sbb cmpl out push clc fucom cmp sbb lods rol inc xor jmp es cmp icebp sti inc lea shr jns mov lods and add scas mov mov cmp xchg pusha sub sub pusha aad daa jb jns sbb pop pop js fsubrl (bad) icebp in fsubrs lret sbb insl fwait clc outsl jne or jne insl ds daa cmp mov push fdivrs clc rol repz push hlt sub sbb mov fstpt cmpb or out inc test je mov outsl adc arpl jne mov scas add pop push int3 icebp inc adc push inc jbe,pn imul xchg pop push movsl inc mov mov jb aas pop jo fistpl adc stos add push inc je push mov inc ret je add lods cmp add or jne add mov addl fbstp movb add mov in cmp je add jbe push mov imul jg jb adc add mov or pusha mov sete add sbb pop push call sti inc nopl rcrl mov inc xchg mov cld stc daa xchg test adc dec mov sti mov cld and pusha inc mov std imul ret jl gs out sti mov and and leave xchg sub push ds fwait jne sub jno jo dec clc inc out in push sbb ss add cld pop stos mov or push dec js and pusha je push inc dec mov adc dec mov ljmp mov mov leave mov push mov bound enter pop xor stos mov inc push inc or cmp pop jmp push aaa inc int test lods js insl mov jg ret push pushf and inc in stc in mov and jae shrb and (bad) mov aam or inc cmp cmc sti add sbb sbb pop (bad) addl push sub pop xchg add lock aaa sbb sub mov movsb xchg sarl pushf sbb call call xchg cwtl add outsb push in inc mov xor add je mov (bad) and (bad) xor out mov shrb or rep cmp mov loop cmp mov mov sub jge add ret data16 js outsb int3 inc and push push imul pusha pop adc jle jmp pop (bad) jle mov testb outsl add orl loop mov aad sub mov out insb sti pushl js std cltd pop idiv push pop add lea cltd or pop (bad) jmp call ficompl pushf aam repnz push lahf push jae fldt or adc fsubl xlat scas shll pop stos sub sbb mov adc pop insl sbb das jmp push or sbb jo mov sub das dec or mov fistl nop or insb jae ja jo mulb or adc pop je and aas jb push lea add dec or jle addb mov aaa inc jmp subb or inc cmp pop inc jmpw jmp adc xor (bad) repnz mov xor jo add addl sti cmp (bad) dec xor mov in inc pop ficompl dec inc push fldenv mov inc add cmp jg loop ffree lgdtl maxps subl add dec daa pop pushf xorps clc idivl or adc cmp push push mov cmpsb push lea mov test mov fstpt pcmpeqb lahf scas lock aas je add jne inc rol or lods mov adc aad dec mov adc and push and scas inc cs jmp inc mov hlt aaa mov bsf jl inc add or xchg pop add xor add mov inc or inc xorl into pop insb mov push cli ret stc (bad) mov mov ss mov (bad) lea fldl idivl jmp test notl pushl loopne or iret and test jne dec cmp out push ret fstpt std jbe mov ja popl mov mov mov cmc mov cmp jne cmp jne jl (bad) cmp jb cmp jbe cmp pop sahf jbe cmp (bad) jbe cmp fild fnop jbe (bad) inc push cwtl xchg adc pop sbb popf lret jno insl pop sbb and push push mov or or pop sbb ret ss pop and sbbl or cmp sbb or jne aam or (bad) pop (bad) mov xchg pop cmp cmp inc lea ja add mov xor or adc mov loopne push pop es adc jne add andl mov add mov ds loopne and out iret push pop lea (bad) or add insl add mov adc shrb jne or insb xchg fs adc adc or adc dec loopne mov nop xchg adc fsubrs and add ficom cmpsb in inc adc fldl lret out sbb or outsl push andb push mov push push ficoml and inc sbb cwtl or xchg mov adc dec and ret add (bad) sub pop push or aam push pop push jl mov sarl sbb lods in dec lea jbe loopne push test insl and je addl scas and push sub nop xchg nop mov push stos clc rcr xchg push mov mov dec and cmc cs sub je mov mov andl dec sub jp push or cmp es adc sub into push in loopne push into xchg into jmp jne (bad) xor and adc lock (bad) xor jmp jo mov sub jp mov sti pop mov pop jle in cltd or jno jge loopne sbb mov sub (bad) lea lock test or push push (bad) pop mov std xchg jle cmp cli sbb pushf push cltd pop idiv test or ss and jle lods jbe inc lea mov loopne jg andl mov sub jge loopne mov cmp jl sbb lret ret outsl pop aas rcll sub (bad) mov mov push punpcklwd push adc scas and faddl roll jns add aas pushf cmp call add sub incl incb adc lock push sub xchg enter lret test in xchg and js push mov gs pop (bad) sbb sbb inc add mov enter imul adc shlb sub sub dec es cwtl and clc or cmp xchg leave cs cmp cs jge inc push ret test cwtl and sub (bad) iret xchg add outsl jno incb pushl call pop test adc mov repnz push hlt mov ja pop mov dec add mov inc rorb push xor ss lret or adc or (bad) cmp int3 add cmp test pop lret test add add sbb enter xor (bad) arpl push pop add sahf fwait jle jecxz bound loopne hlt jg adc cs rolb push lcall fcomp fsts mov cmp and hlt lds enter es mov enter jb repnz mov int3 adc inc dec clc push jge iret push mov push int3 mov iret push popa pop sahf sbb or add sbb nop fisubr nop gs pop les fbstp lock hlt cli rcl mov add cmc sub or or aam pop inc push lock pop xchg push cmovno scas push jmp lea fistl pushf pop cmp adc xchg sub call (bad) jne,pt jmp adc dec xor cmp and xchg mov adc jne fneni(8087 imulb sub je dec je add divb pop inc or sbb hlt or dec roll adcb iret or add push push add mov ret aaa push push outsl pop in inc push (bad) out (bad) pop sub adc push sbb jge push mov cs sbb and and push popf and sahf pusha sarl ret cli jbe pop in and outsb sbb mov std mov das add je cmp jb push sbb and jbe mov mov mulb (bad) rorl sbb or mov in mov push in mov xor or insl dec push sti sbb (bad) fcoms pop pop je push mov pop pop lods lea cli mov mov pop mov xor and in push push hlt dec pop and add pop xor dec cmp mov or push sbb inc dec add cmp cs dec xchg mov add gs add pop mov pop xchg push ljmp mov adc xor add shll push inc mov mov repz mov mov je push push and push dec stos out push mov jnp push push jno and mov aaa inc cmp leave xor push testl (bad) (bad) adc push xchg insl cmp xlat xchg mov xchg adc xor adc es jmp test (bad) xchg and jmp jg adc out pusha xor dec pop dec into sbb ljmp loopne xlat lea mov in imul add fldl add jg (bad) lcall adc push push cmp leave bound aad cmp mov in out inc xchg cmp aam or leave xor pop int3 sub dec push or ficomp test pop sarb mov sti xchg pop adc insb add xor shll inc pop cmp das jo (bad) pop (bad) cmp fldl xchg sub pop pushf gs push mov push xchg or mov lcall lock xchg push mov pop mov sbb or divb pop push mov or jge cmp or sub cli mov imul fstpl (bad) or and or outsl daa and adc push insb mov (bad) cmpsb fadds je aad int3 add fstps mov xor adc push or or pusha in ja mov cmp and call or sbb and cwtl mov or pop lods pop mov or pop jmp movsl rcrl out dec and mov pushf push pop aaa les mov mov aad xlat fadd inc flds adc xor inc or lods dec cmpl clc frstor add mov add sahf and je jbe or inc sar adc not push push mov push push mov pop fcoml add inc or push sti sbb jle add (bad) fisubr push mov aaa fs cmp movl push cmpsb cld es js inc jo enter je adc push lcall jne cmpsl arpl push push icebp loopne push mov out in dec sub insl mov lret cmp add in in popf outsb adc sti mov jbe inc jne and lods jo sub lea add push mov push aam insl dec fldcw les shrb and jbe icebp (bad) and aam ja sti rcl push sub mov xor push and scas jb sbb int3 and fdivrl popa sub ffree movl out out enter enter iret dec sahf loopne ret inc int3 push cmp xchg cmp out mov and andl mov (bad) or addl push scas pushf sub cmp push shlb push pop mov push or pop sbb and ja xchg dec jge jne inc imul and xor xlat add ss cmp ja push stos out pushl xlat sub dec fsts sbb push cmp rcrb dec cmpsb in jnp incl test inc sub movsb and sub push xor negl cmp push jne mov sbb es adc cltd and loope loopne add aas sar inc shl xlat or xchg ljmp cmp jg cmp jne push mov push mov xor jmp sbb out xor addb adc pop jp xchg add or cmpsl pop and mov lret test sti jl stos (bad) dec cmp add push push rolb cmp dec dec sahf push int3 jg mov jle adc adc ret into inc adc or xchg outsb lock arpl inc cli pop mov ljmp sbb insb jl xor push push push mov rorl insl push insl dec repnz lock sbb inc inc push adc lock lods mov pop cwtl aaa sub and aad cmp pop and push loope sbb movb test inc clc ss ss sbbl jbe jns in addl and push push mov push xchg test adc pop adc clc mov inc add add (bad) fisttpll dec cld mov add or fbld dec or inc push xor int mov adc or or mov sbb dec adc dec add sbb jo inc ja lea sub adc push push push lds push repnz pop add es ret push sub pop sub scas add or loopne xchg add dec xor adc mov mov sahf xchg setne and (bad) cli scas adcl incl movsl aas fstps cltd inc jmp or fidivl int3 (bad) adc adc arpl fidivrl sub add add cmp ja sub mov adc sub xor imul adc and sbb int3 sbb cltd sub push sar push lds inc and popa loopne shr lret loopne mov or push dec xlat popa add push fisttp xchg or xor cmp je insb aaa or adc icebp adc add ret jbe dec adc sbb jne push push xchg fsubrl in cmp jbe adc (bad) mov or mov jno pop or clc add cmp xorb jl cmp (bad) decl test mov cmpsb mov pop int mov dec adc adc xchg jg cmpl ja pushf addl lock or js mov pop arpl mov insb push leave mov iret (bad) jmp add mov add dec (bad) or push insb or fildl xlat mov jo inc sbb fcoml and stos dec adc mov cmpsb push push mov fildl test cs pop and enter and test xchg outsb scas out push outsl mov ss inc xor adc sbb mov mov mov lea push (bad) (bad) pop mov clc or adc sub addr16 clc mov and inc inc xchg and sub push pop jp pop test pop jmp mov jmp push jmp cmp scas mov add and add add or add ss pop lar add nop movsl in scas add add add add ja out add test xor jnp addr16 xorl dec leave push push nopl imul call pop cltd lods sub ljmp pop mov xor (bad) xor inc or xchg rorl mov xchg adcb and inc inc data16 cld xchg adc outsb in call adc out ds mov cmp ja or cmp sub cmp fdiv jnp sbb inc cmp es mov fild or jmp cmp dec mov jg push cmp sbb add adc and push loope inc pop in test mov clc sti or fdivs movsl lcall cld add out jge push inc addl js xor push sti push xchg add fisttpl push xchg stos popa or inc divb add jo loopne or rcrb pop adc test pop repz test inc or adc add inc jl add fcomip cmp clc mov add (bad) pop dec and inc or inc cmp je adc idiv sbb loope adc clc test (bad) adc jge repz stos adc sbb repz lea jbe mov aas cmp push nop inc sub les add inc outsb (bad) mov sub adc cmpb je jmp jne and jmp movl cmp cmp pop loopne cmpb mov push push inc and xor push fldl jp loopne mov xchg and add mov add add xor inc or add je cmp inc push enter clc sbb jb sarb and repz jmp mov arpl jne ret add mov cmpsl mov in out (bad) imull cmp jge mov stos lods sti (bad) pop or xchg sbb jmp fidivl push ret sub adc movsb pop adc add (bad) push in adc pop push add mov je and pop pop jbe inc jno or mov inc fwait cs lret inc mov fwait rorb and mov icebp in je jne pop dec inc insb je sarl add pushf ds or add push je cmp jle pusha dec jno push pop mov dec push or xor or adc mov pop and sub sahf sbb adc mov push lods xor aad jne sbb push fsubl imul push cmp int3 out (bad) xchg jb sub pop jne cmpl orb add jmp jne cmp mov jmp add test je ss fdivrs popf sbb jo jecxz js or push stos pop mov add push and cmp iret xchg or imul dec pop loop add test xchg mov dec or push pusha cld les cmp out in add pop adc ss sbb jb push outsb mov inc xor jne dec cmp xor int3 xor inc (bad) push jge mov ret push movsl fisttp push push adc in add aas and add je jae lcall test cmp or ja mov int sbb jp push or push push bound cmp (bad) sub inc adc or push sbb aas adc cmp test sti in pop aad jl push jmp mov stos pop push scas push adc xor lcall or pushl call lret aad pop lds or cmp lods aas rclb call std push jne and outsl inc call or cmp test lods adc cmpsl cmp ret ss sub add pusha frstor lds mov pop (bad) (bad) lcall movsb and and clc mov gs mov test in sub (bad) in sub mov negb mov and or cmc inc mov inc outsw push sti add mov enter jno std les ret dec sbb cltd mov mov and pusha inc inc push xchg pop adcl leave dec mov adc push pop pop xor pop cld inc aas inc cmc inc cmpb and xchg jg push lret loop call mov xchg in and inc pop add cmp mov mov push and dec jmp or push and sbb push jmp adc out ss or sbb shlb xchg mov push inc cmc inc jl in pop push ja cwtl mov and push inc (bad) rep add push add (bad) divb and push add (bad) fisttpll adc mov push lea xor aam fs mov jbe mov es cmp mov out and imul push pop jb cmp add fadd lods (bad) xchg (bad) ss or jns adc add and mov clc and (bad) scas loopne cmp fdiv push outsb or push adc movd inc add or xorl fdivl xor rorb cmp mov cmp test pop call push imul aad xchg jg sarb fsubs lahf dec jle push roll dec jns ds je pop and sub outsl inc push in push movb cmp sub je add gs je cmp je pop (bad) jmp test cmp mov dec dec jg sub frstor push and jle sbb enter cmp ja mov push lock shrl add add sar pop cmc aas mov add cmp jg or mov sbb add adc dec dec imul push inc mov jmp andl jae test sbb sbb loop inc int and rclb sti xchg fnstenv mov test (bad) ljmp xor xchg add mov enter and xchg cmp cmp addr16 and cmpsb cmp sbb repz adc sbb adc cmp sbb add inc and dec push push push (bad) sbb movsl out arpl sbb mov add pop in fcoms in jo mov das xchg movsb or sub mov jae out mov and test cmc inc jl mov and inc inc loop sub mov cmp loopne icebp or cmpsb mov ljmp xchg jo cltd xorl jne int3 cmp nop sahf dec jo fs (bad) lock push sub call test sub pop cwtl push scas adc pop pop jp ja ja cmp push push inc sub sub rorl jo mov mov jl mov or mov sbb movsb decl enter call flds push sbb xchg lock mov push mov mov push add xchg and jp cld rsqrtps cmp push scas pusha lret insl sbb (bad) (bad) sub hlt sbb sbb sbb call loopne and out add loopne aaa push sbb jge (bad) nop shlb push sbb outsb fcoms cmp push arpl imul push mov xchg dec sub xchg jp sbb mov sti push push and adc jne push sbb and dec adc push sub ffreep adc xor adc in jne add push push test out cmp mov cmp jne push cltd sarb loope push sub inc add mov leave jae pop cmp inc lret xchg fbld rolb cmp or out ja (bad) adc and adc lcall sbb ja faddl movsl and pusha pusha lea (bad) pop pop test cmp push add or xor pusha fwait mov cmp cmp and rcrl adc aad sub push fnsave push rcrb test scas enter cmp add shr fildl mov push je inc loopew cmp mov hlt xchg out push add adc (bad) cli adc sub insb push test (bad) es dec stos sbb mov or sbb dec mov add in sbb rolb pop std and sbb scas add push mov mov pop fidiv shl push insb push adc push or (bad) jnp pop cli jmp cmpl add add lods xor test sub pop xlat ds or jmp xchg iret sub jbe xchg cmp push jecxz sbb mov int imul cmp or jge pop adc add push std mov clc push mov add xlat xor sub sbb push jge xor push jmp adc subl xor cmp shlb test push xchg add mov push mov mul push call jl cmp cmpb nop scas sbb popa sub imul cld dec call or mov cs xor pop or sbb push mov mov cs pop enter into sub jecxz hlt paddq jbe mov pop rcl add push (bad) mov int3 adc sbb fdivl lock out testl mov loop sbb pop mov ss or sar cmp ljmp or mov cmp pop mov mov mov sbb addb clc add (bad) ljmp nop shr sub mov out int3 hlt addr16 sub jne xchg les dec stos mov xchg mov pop in inc insl pop adc push sbb adc and inc mov leave or mov or cmp or mov mov push mov xchg add inc and fnstenv or push pusha cld jne push inc dec leave cld pop xchg ds mov sarl testl das adc ds add xor or inc pop and cwtl je mov push inc test insl mov pop jmp repnz sarl leave cmp data16 je and and in xor aaa pavgb aas ja addr16 ds jbe or pushl push xor notl rcrb or orb cmc pop push sarb dec push int in lret mov add in dec loope add push add push cmp (bad) (bad) sbb push push push mov popf shrb cmp in cmp mov inc scas roll pop dec or jp add sbb xor sahf inc lock jo je aam jle xchg xchg jbe mov adc sbb mov dec jmp sub mov int3 sub jge test add mov insb les sbb decl sbb inc (bad) fwait inc xlat cs jl add mov push cmp push add in pop repnz and mov cmp je or mov add stos add mov xchg pop mov hlt xor mov cmp js jae or dec jo cmp fsubl inc dec adc shll xchg add fadds and cmpb mov push mov or mov aaa rorb cmp mov mov and outsb inc add push and adc push push or nop mov orl jmp mov aaa inc xor cmp jb add (bad) imul cs jg mov adc insl cmp xchg inc or pop cmp and subb push inc adc sbb mov stos fnop cmp pop jne mov sti mov popa (bad) cmp jl sbb adc jae jbe test pop fucomi push mov or or mov mov mov mov fs enter (bad) (bad) in adc lret inc es add lcall sbb inc pop jne xor pop or mov cltd xor das loope dec xor mov or push cli rorb pop rorb pop mov rcrl or adc add rcrl fstpt lcall push sbb icebp pop sub add sarb lock cwtl pop mov fs loop sbb mov test add jno pusha inc sub mov sub clc pop xor and add xchg dec xchg imul fcomps loope je in inc or clc xor sub lea dec and (bad) dec push cmp pop dec pop repnz pop pop or leave sbb in clc sub push in enter pop pop pop jns xchg and inc cmp jge adc cmp xchg mov xchg adc insb adc inc out mov daa pop or push adc scas (bad) lahf pusha lock lea (bad) or les add daa xchg or push mov pusha inc sub inc ja push cmpsb inc inc scas js inc push (bad) adc xor and adc ret xchg fwait jne movsl jmp push mov loopne pop jbe cmp int3 add mov sbb in cmp or sub outsb cmp add je movsbl adc mov lcall jle and jo ljmp outsb and jno (bad) cmp jb pop adc inc sub push add dec xchg pop insl inc js and cld orl sbb int3 lods or mov cmp ds xor push adc mov lock xor mov adcb jnp mov pop in jno sbb dec mov or mov fs rcrb test xor push sbb sbb adc inc pop out (bad) inc icebp aas insb xor lods (bad) loope adc cmp sub inc insb xchg or mov push mov insl out mov mov movsb out inc sbb mov arpl inc add inc bound pop inc cmp into clc push pop sbb test inc cmpsb mov add sub xchg xchg and cmp and orl shlb sbb pop sbb outsb cmp add mov or xchg shlb je add insb xchg and (bad) aaa test pushf adc sarb sub and cltd push sbb adc add ret inc frstor add jmp cltd fsubs ds dec fsubs jl ss lea std popl mov mov es push jnp pop add mov and adc mov inc pusha inc mov mov add movsb mov lock push sub mov add mov push or mov sbb int3 sbb add test pop mov jb jp push (bad) mov sbbl cmp in jmp sub or add fimul fiaddl push je cmp sub in sbb adc nop adc inc jno sub mov sub fisttp pop (bad) aad mov inc pop sub adc imul adc sbb add dec push inc push pop jnp xor lea add mov lea add out xchg sub mov dec fcoms inc xor add add inc and out inc les push or out test mov push inc stos shl adc icebp hlt push push or inc movsb pop out data16 adc xchg push add adc jo push sbb ret cmp lret xor add cmp add mov fstl push pusha push xor sbb (bad) jo xchg push fimull inc and cmp mov mov imul cs mov or mov (bad) nop insb fldenv push pushf test cmp dec mov push pop push test pop push add lea call add and or fs xor sbb cmp ds dec jge prefetchw inc or mov add (bad) mov scas fs aam test inc push aam notb fisubl (bad) or out add adc ss add and adc dec add mov sbb arpl pop adc push (bad) push sbb neg int and (bad) cmc nop mov dec movsb mov aam add inc and mov push pusha xchg imul adc push mov mov pop scas add std (bad) adc dec push and hlt imul insl push sti inc inc movsb mov jnp mov push shrb lea bound dec push pop inc add sbb pop xor dec sub leave jae das lea push add or bound pop push inc fdivrl and push pop rcrl pop clc cmp sbb mov adc and fadds push xor roll pop enter mov adc inc dec add pushf iret and mov xchg fs xchg dec mov mov adcl jp (bad) jnp push aaa cmp (bad) (bad) jmp sti mov sub add and push cwtl xchg lods jne ds mov sub push addr16 or sub (bad) jne cwtl add push lods stos sub inc and pop sahf mov mov hlt mov adc push je cmp jl push call mov cmp (bad) aam (bad) xor dec push shll jnp cli and and mov or push mov call mov lock daa mov or sub cmp imul adcl mov sar dec inc pushf and testb inc push add push mov adc loopne xor mov js add add fwait push xor pop dec mov cs fs push adc mov add sbb and cmp pop inc out sbb sbb sbb out add sub inc into and mov or push ror cmp push mov jno,pn int addr16 into nop or pusha fldl popf jo popa in bound shrd popl push in xchg xorl xor ret inc add call sbb push adc cmp clc mov les push inc sub pop xor ss in adc push adc aaa (bad) or movups or push stc dec repnz mov aam flds cmp sbb adc outsb push clc adc adc or arpl mov and sub loop or aas test mov pusha mov xor cmp sbb les or stos mov or shrb sub adc out pusha jnp daa insb adc scas jg aaa dec add call add adc (bad) pop out pop out imul mov (bad) pop cmp add mov push movsb pop inc loope icebp push adc adc jmp decl or addb inc test and and sub xor sbb flds mov jg xlat sti les scas ja push jbe pushf and cwtl sub jge adc mov notb popa je imul iret mov push add lret lods lods sub imul mov mov xchg xor pop or fbld pop (bad) loopne add sbbb mov lock clc mov xor in and pop das sbb push adc aaa sbb sub sub pop sbb jae xchg inc sbb mov xchg aam mov dec inc jne es rcl neg mov add fldt test push push push sub push dec sub sub add mov jns push adc sbb dec jns adc test mov sbb sbb sub sbb xchg add andl pop xor adc mov (bad) jmp mov and and popa rcll push dec rcrb in sbb (bad) adc adc xchg pusha shll push (bad) ja and jne mov pushf cmc sarb add mov jecxz dec je adc pop xor inc and cld mov sub fnop or daa adc xor call xor mov push lret cmc add jle call add push insb adc inc xor dec pop dec inc xchg orb adc jb or mov sbb sub and add jne dec mov mov lock imulb cmp fimull xchg pop sub dec xlat (bad) add aaa push cmc aam xlat inc je (bad) mov ret push dec push push fadds jge mov adc xchg decb fistpll add adc push pusha add cld imul pop ret mov call push sbb add mov adc sbb fisubrl and movsbw cld xchg mov mov and (bad) fisttp pop mov mov sub fwait loop inc sub call sub test jbe mov xor add (bad) (bad) mov and pop push fneni(8087 mov inc cmp push addl jmp js push jge lock rolb add push lock pop and aas xor in rcrl pop in and cli sbb cmpw je inc inc sbb (bad) or jle inc mov mov mov dec pushl mov sub call push push dec cs aam sub je inc cmp ja mov jnp or xor inc jmp inc push add xchg inc cmp inc sbb int3 mov pop sbb and xor xor ret fisttpl (bad) xchg pop fs mov imul imul (bad) jne lret adc xchg add (bad) jg fisubr fiadd scas dec fcoms clc (bad) fcomp inc sub cld jge in inc stos sbb and dec testb adc and (bad) inc mov add pop ds cmp mov inc jbe jle mov inc mov xor mov sbb testl jb inc scas pop and out add js into ficoml loopne gs dec mov cmp pop enter movsb xchg jo bound and mov fcompl add xchg mov mov fsubl push mov jo rcll pusha push mov ret es nop xor or pop fadds test dec mov mov outsb pop jge add test fcompl push mov add push lret sub int3 in xchg outsb pcmpeqb dec lods mov add test mov xchg xor mov movsb imul lods lods fnstcw jne aaa mov mov popf mov mov mov and pop mov fsubl shrb loopne mov mov push push fsubp fist sbb pusha push loopne adc sbb pop loopne in add cmp cwtl clc pusha cmp dec mov int3 ret push xchg and sti pop cmp stc add test xor push aaa xchg xchg mov push cmp add dec or mov je jmp (bad) mov psadbw call jbe gs je xor lcall in jmp cmpl xor add les sub fnsave cmp pop xchg out and or xor xor mov jl in gs js inc xchg orb or or aam jo and add les sub cmp and ja adc loopne sub scas and cmpsb adc sbb repz sbb inc or into repz insl icebp adc and test jo rcrb in arpl inc push push sbb adc xor sbb ss push inc fildl in jle or fsubrs xor insl or xor ja mov popa adc jl mov xchg cmp sbb push (bad) jae dec add rorb inc mov lods push add jo jne push and insl push push cwtl inc inc das movsb mov arpl or pop andl or mov or xchg dec push mov add int jge call fsubrl call int xor pushl jne inc in into dec or add dec inc (bad) pop pushl adc movsl fadds dec jnp cwtl dec call bnd in loopne pop dec clc sbb push jge enter or ret inc add (bad) dec cmp call mov cmp mov jge adc jp pushf sbb mov fdivrs mov divl cmp sbb scas mov arpl xor loope inc xchg rorl mov mov push jbe outsb les call fmuls sbb loop in adcb sub push scas subl loopne (bad) ret and cltd stos mov inc add sahf lea enter push je xor je cld xchg clc jl xchg ret push jb mov stc push dec xor add xor mov test xor ret jne incl jmp push push xor xor rolb push and add lahf pusha push mov hlt mov dec test pop cmpsl sbb dec mov xor adc pop xor pusha sub mov xor or arpl jge adc mov adc mov (bad) (bad) jne inc ljmp addl orb je loopne cmp scas (bad) push or fisubrl pop push cmp or push (bad) xchg mov pusha (bad) push pusha jns inc mov fadds stos add jbe je push cmc test dec fs icebp in or pusha add popf mov add test fs inc insl sbb inc daa shrb inc inc adc addr16 bound (bad) clc xchg mov mov outsl inc adc stc jle jmp sbb sbb cmp add js pushl je mov addr16 test movsl lret jbe jbe jae ja or jmp push xchg mov adc or inc rcr cmp xlat mov leave fcoms inc xchg mov (bad) jne movsl ret insb lret dec outsl cwtl fimull mov call sbb and cld sti jne adc lret (bad) int xchg cmp cmp icebp or fwait cmp sub negl in jno nop sub adc iret sbb rorl push jg mov addl pop je mov ss bound movsl into push add jns push fwait ret dec add sbb push mov mov clc jne sub xor mov call adc jg ds jmp mov mov sub outsb movsb xor fcmovne dec fwait push test stos push and ljmp aad and sbb adc mov push add jb and mov or cld lret movsb xchg lds les pop mov (bad) sbb push xor jl scas pushl sub js and lea mov push or push inc orl xor insb mov sub or roll or inc dec cmp sub pop mov sbb adc sbb lods xchg adc cli gs pop dec lock inc push sub mov (bad) add testb pop add pop fbstp ficompl add repnz insb cs ret or ljmp mov cli mov adc (bad) mov (bad) push dec inc dec je jno cmp jl jmp push pusha stos push add add hlt in sarl push dec jb add lea clc scas pop fnop testl jbe add push mov mov scas dec push (bad) fisttpl push add push push mov mov (bad) frstor (bad) mov aad add insl xor adc pop or std mov rcrb sub mov bound push cli and cs mov rolb insl imul aam jno sbbl sub jno stos mov cmp movd pop add fwait sbb (bad) je sbb jo jle (bad) and add rcrl mov stos fidivrl sbb or dec rorl and mov mov mov mov pop (bad) jo sub aas fsubrl push cmc inc push add mov mov pusha sbb popa cmc sub mov lcall inc add hlt (bad) fcomps fstl pop loopne lcall xor sub jmp fs leave loop mov out jne add xorb scas or inc sub pop dec inc lods daa inc or dec mov push sub movsb call jl out scas mov push dec or jnp fdivrs push mov pop add adc mov insl or (bad) pop adcl pop sbb inc pop xor mov xor xor xor sbb addb insl sbb xor dec adc rcrb add adc cwtl es adc fdivs jo inc ret adc and or stc out add mov stos out xor add sub repz and test pushl or aam add mov sbb cmp jg lea push je rcrl dec add lahf and push lcall push lea or out sbb push xor and ds cwtl insl add pop pop ret (bad) insb sbb add push and and adc inc inc and in loopne inc mov subb iret jmp and push pop sbb daa sub shr pop pusha add and sbbb add ret adcb jg add mov dec add dec push sbb ss lds dec mov mov inc pop add xor sbb add inc xor cmp jb cmp insb or dec rorl adc mov xchg das nop add dec xchg add js jb,pn or add push sar movsb or fsubrl xor roll mov add pop jo jo pusha mov inc add add fs int popf jo,pt sub inc or dec cmp add mov pop mov push or sbb cmp add cmp xor xchg or cmpl (bad) add and add fnstsw and frstor add bswap and addb pop push and adc add inc xlat dec imul sbb add or lods and and pop mov jbe aad popa popf shlb push mov sub xchg jo outsb xor popf or sub xor addl sbb jb stos sub das repnz xor xchg mov pop dec add cmpb stos xlat rcl cmc in add cs jmp xor cmp sti push dec pop leave and mov jmp in xchg dec cs leave add adc push push inc es cmp xchg mov ljmp cmpsb or cmp sbb mov mov or cmp pop jnp lods dec test out jns push outsb add jg int3 mov adc mov ja xchg adc mov popf sbb scas mov ret jg aaa mov xchg nop add fwait mov mov sub fadds push fildl mov movsb sbb mov lods sbb push pop pushf cld sub cwtl lahf lods lods dec adc pop fsubs push in insb fmul into mov and nop add xor cmp je jmp in notb lret lods push adc or add or neg sbb push and xor inc xchg adc mov cmp mov add nop add or inc push je dec and leave je push cmp jmp xlat push mov movsl mov aas push and movl sub lods pop push adc or adc rorl rcrl insl add dec insb or (bad) sub mov cmp or loopne inc jnp sub out pop scas mov outsl push and sarb sbb (bad) dec mov (bad) mov adc mov mov iret mov or or neg movl jl mov pop idiv movq mov dec adc push or ret in push ficompl rclb rolb push push xor out inc dec push cmp jne pop xor mov outsb pop outsl es push sbb fistl sbb push jo sbb mov push push adc ret adc shrb sarl add lods jecxz adc adc and cli add sub setne dec mov xor adc xor xchg (bad) enter xchg bound mov push dec inc or mov mov add sub xor push cs sbbl mov je movl pop fdivrl mov push adc jmp in outsb outsb jbe and add cltd push pop add mov fisubr xor mov or mov or jecxz (bad) xor stos incl shl add div out in or push xchg rcr lea cs xor shll or add and es in mov push push ljmp rcrb jne mov outsb add add sub insl imul xchg and dec inc add mov (bad) call dec push scas adc or xchg insl ret mov fmuls or jecxz jae cwtl cmp in loope out mov loope pop or jp mov add xor cmp (bad) and push cmp nop orl mov or leave and push xor je xor out xor xor mov and loope inc fs adc stos xor add mov mov je push pop sahf adc push and add push dec inc or or xchg and push add pop or rclb mov and sbb in test in push js mov repz ret pop and pop sub or pop add das ss in ljmp outsb jmp daa test stos enter ss stos (bad) jne (bad) xor icebp sub mov mov fadds scas push or ret insb sbb add popf sub lret adc andl stos rcrl in push xor fcomi mov add or add add call rcrb cmp push sbb xchg push sahf in pop ret push inc add mov jne mov out cmp jge mov in push loopne sarl jg arpl jne cmp jl add xchg jne test sbb (bad) adc (bad) dec mov cltd push cmp lods add repz pop mov ja outsb sbb lret shl bound ljmp mov xchg dec pop and pop add sbb call and sub sub mov or xor stos add loope ljmp dec sub push cmp icebp sub outsl jae out push push cmovle sqrtps or push push dec adc scas fildl xchg fwait push das sub or rolb test or cmpsl push xor dec push cmp mov inc cmp xchg cmp mov sbb add mov ficomp xlat sub mov arpl clc inc dec jl fiaddl mov or sbb into cmp xchg clc addps leave cmp push je mov icebp je push fucomi pop cmp push add and call mov lret pop dec adc mov popa push lock or or adc inc add sbb xor xchg or fisttp (bad) mov inc add (bad) or test jnp mov jbe add insb cmp add sbb in jl adc cmp loopne adc xchg pop dec sbb or das icebp adc leave jne mov inc ficompl xor pop mov scas push imul outsb and dec cld push mov or enter dec shll outsl lock pop jbe mov enter insb sbb leave enter inc movsl pop cmpsl flds mov iret push adc into std ljmp sub xor push inc mov aam and inc add shlb push mov lods sahf rolb xorl (bad) jo stos out in cmp adc sbb adc rorb and dec add xchg fstpl push or insl call push adc stos sub mov jb (bad) call inc sub pop cmpsb pop bswap jmp jnp pop sub lds add cmp jne fadd pushf mov mov shr or es mov pop fcmovu dec (bad) push add ret pop test mov and rep push test inc push stc pop adc cmp xor cmp inc mov adc xor push test and mov (bad) push inc movsl ret pop adc in and popl je lret pusha cmp rcl mov jo mov mov inc adc and sub fisttpl sbb mov adc ja ret das xchg cmpsb data16 adc fsubrs xor pop mov lret inc pop test jo or movsl sahf push rep sbb push mov jno repnz std outsb mov add pop pop js adc xchg fcmovu lcall sbb (bad) movsb mov or pop mov push xchg in or cmp ljmp je add xchg (bad) jno ss inc test or sub add mov inc cmp mov andl repz mov aaa push (bad) or xor insl sbb jmp imul std pop ret pop push pop lock mov mov shl out fildll inc inc xor cmp mov adc pop add or fnstenv in fiaddl stos and mov or cwtl dec js arpl jp or mov and mov jb add xchg pop insb mov inc (bad) insl mov jo pop pop scas add mov loopne cmc sar ret xchg mov lods mov xor scas push ja movsl mov shlb cmp adc push into ret insb aad push lods stos insl popa push and inc (bad) mov std (bad) jb sub mov push insb jl mov fisub push stos push fisttpll cld mov (bad) sbb fs and aam sar adc mov stc pop mov and shrl cs jb inc enter (bad) (bad) dec push push pushf rcrl lea dec push jae ljmp js cmp std rorb rcrb ret pusha into rclb fsts xchg cli icebp das aaa adc sbbl mov pop pop pop and cmp or insb jnp or mov (bad) push std dec insb adc punpckhbw mov jo dec mov mov pop mov lds cli or jb mov int jb or jae es std pop push inc push sub sub mov mov mov mov fist add lds add in dec jne call mov cmc pop push inc adc stos lea push push into and sbb in adc mov mov mov incb jb push xchg sub cmp mov jg jbe mov dec add rcll (bad) jno mov mov inc loope decb sub jmp mov xchg jge fmull cmp pusha or frstor push sub mov sbb mov xor or aad push (bad) mov fcomps ror pop push sarl and inc in lret divb or sub movsb push nop push psrlw rcrb out cmp orl repz in push daa push jg push jb and inc arpl jle add pop rclb jo dec or and or adc cmp sub cmp ret pop mov push mov daa lock arpl pop add clc outsb mov xchg adc ficoml pop and (bad) dec enter sti rolb scas push mov dec inc jmp inc push adc push and daa add sbbl and or jp xchg dec sbb mov jbe test cmp inc loop mov jae neg mov stos inc mov jmp adc roll in mov xchg xor mov mov fstpt mov mov mov cld test rorb pop cmp sar ret inc sbb inc sub or cmp or inc dec inc pop int3 mov dec inc (bad) jo inc cli mov mov dec jne fnop xor fistpl enter mov arpl mov mov push mov adc outsb test mov add test pop and js push ljmp fcmovb ret or cmp (bad) std push lods sub out scas imull cmp jno mov sti or addb mov or pop lods jbe xchg xchg je sbb jno cmpsl jbe outsb mov fwait cmc loopne aam pop movsl jne loopne pop dec push or imul inc shlb adc sbb adc or insl outsl ja inc jb cmp pusha jae insb ret push xchg jp cltd lea loop mov (bad) add jg sbb incl push sub lea add mov adc push nop xchg jecxz cmp cmp jb rcll ljmp sbb add fadds (bad) cmp push movsl dec adc inc sub or xlat add lea inc add inc or fcomi das or add or adc jne or xchg cmp sub push or in jb add sub ja lock fcmovnb cmp jle cmp jge sbb fsubrs or aam inc sub push mov inc mov stos push cli push push cmp jbe pushf dec test add fildl add inc mov lds cmpsb (bad) jne or mov mov pop (bad) movsl mov adc rclb sbb dec add jp mov xor fisttpl ret movsl test mov or push out test pop je pop loop clc enter dec mov aam jge mov add pop (bad) hlt xchg adc (bad) fcmovu cmpsb sub pop sub jnp jne insb cmp xchg insl in dec ljmp jo sahf pushf lea lcall mov xor adc push clc sahf sbb test fs sbb mov arpl test sar or push push xor pop mov cwtl cmp insl (bad) loope push jne nopl pusha test test dec bound leave (bad) push imul insl adc push pop mov cltd sbb inc mov int (bad) cmp lock push lss add sub repnz or adc mov inc sub daa (bad) jne adc push inc dec mov push pusha jecxz adcl cmp dec sbb fs int3 in lret (bad) je shld subl or cmp and mov or inc mov dec mov inc mov rolb mov or je das push push pop adc sbbl aad lret lahf xor mov mov and es jne mov scas sbb inc sub roll call push jle push jo out or fiaddl mov repnz xchg loopne inc and je and ljmp inc xor movsl mov jns push xor (bad) adc aad lock or aas dec sub js out hlt or cmp jmp adcl xor sub xchg stc inc push push push sub popf jne imul sub push les sub xlat jmp or cmp stos js mov test and cmpsb cmp pop mov mov mov mov xor xor push ret dec sbb inc jae mov or in inc sub es in cmp mov xor add maskmovq imull push pop cmp jmp pxor pop testl add out or inc xor mov jmp aaa mov mov rolb sti jle pop sbb xchg arpl in add add inc int sbb shr shr sub aas lret mov (bad) jne adc jl sbbl dec xor xlat lock push rorb mov push or cmp (bad) fcomps xchg das pop mov imul pop adc call dec andb jae mov in or idivl mov dec repz out mov jb mov mov not mov adc jecxz xor add in negl dec in int3 dec sub pshufw jb jb jmp dec hlt sub ljmp adc roll jne mov jae sub bound xchg push jg xlat adcb xor push push rclb cmpsb fiaddl mov test fwait sbb xor xor cmp mov jne push lock (bad) imul repnz mov push sbb insb mov mov loope in mov sarl popf jb push xor pop ss mov dec and cmp and or push ret loope sub dec xchg inc push sub add fbstp cs push jae mov mov cmpsb cltd ds dec ret outsb gs xchg and add movsl mov pop sbb lods insl mov cmc jg ja jge sar loopne cmp xchg xorb add and pop fildl add pop (bad) mov sarb add out (bad) in push movl out or rorl mov or outsb push jl sarl adc cmpsl push lcall sahf mov arpl lret mov fbld push (bad) or mov shrl dec or sbb jnp sub add xor fnclex mov adc adc xor xor int and or push lea inc adc jmp sub or push movl shlb fadds imul call push popa shrb sub loop inc enter cmp (bad) ficoml jae divb cmp cld push in or data16 mov fisttpll add sub xor and adc jno pop dec scas push rcl push sub push inc inc int3 clc add xor or sub mov mov jnp cmp int add icebp fsub lea jo into pop outsb jne pop shlb or rorb jae sbb nop ret sahf adc mov jb,pt (bad) lret idiv fstpl or scas and add push adc lret jecxz (bad) loop pop in cmpl cmp loope mov popa std jb xchg pop and push sub jbe adc ret mov adc (bad) ja ss leave jmp ja cmp (bad) loope jne lcall cmp mov and push insb pusha push push push inc lea or and stc jbe sbb add (bad) (bad) fstl inc or or push sbb sbb clc (bad) sarb mov cmpsl dec push xchg sub mov andb lock and sub mov mov xor sub mov (bad) mov dec pop push mov inc jno fcmovnu adc or cli shrl and jb and push loop mov adc dec or dec cmp repnz cmpsb nop clc ljmp xchg shl fsubrs push mov lcall cmpsl push xchg lret hlt dec push push inc adc mov mov loopne repnz ret fdivl adc inc es iret xchg mov ret inc push push cmp (bad) mov leave outsl xchg leave or sbb repnz dec fwait (bad) inc das sbb push xchg sub ljmp dec leave xor inc outsl fisttpl shrb (bad) mov fstpl mov jge mov test push inc sbb dec inc inc dec dec xor inc inc sbb mov and cmp rcll fcoml dec push lret outsl push enter push popf xor inc das jge inc mov fmulp int icebp mov inc clc fisttpl push push push adc int shrl lds aad roll lods out mov xor push pop jg mov push mov or test dec iret cwtl (bad) sbb shll push xchg lods in lock push aam push leave aad scas std xor orl (bad) push push pop cmpsl ja add add mov push imul test test inc and xor mov aaa dec movl ds scas sub xchg (bad) jl jecxz movsl xchg xchg ljmp push cmp dec or push and in nop mov ret les rcll xchg adc dec push sub or fistl adc jmp aas int3 xlat mov mov jl mov pushf (bad) je mov mov ljmp sub mov inc outsb out push push data16 adc or or adcl aaa vaddsubpd or nop xchg xor mov add mov mov push inc dec push xorl mov cmp dec add fldt dec (bad) cmc faddp xor enter int sbb add pop fsubrs or push jl sbb push inc sub push and or test push jle xor add aas xchg and addl pop ret imul cmp fistpll insl ret jb mov jl incb aad fcmovb loop aam inc sub mov cmpsb aaa or sbb enter repnz jb and and and std cmpsb mov enter dec xlat and push xchg pushf insl add mov inc adc hlt dec mov fdiv div cmp div (bad) insl mov inc cli xchg or mov pop or mov fiadd adc adcb ljmp loopne mov mov nop jns ficom outsl mov je sub sarb sbb mov xlat insl outsb nop sbb (bad) add mov data16 push xor xchg call mov jbe dec pop iret push mov inc jp sbb mov add jne push mov ds ret mov movsb xchg mov jbe mov dec lcall ret pushl xor bound outsl jl push arpl shl push push or out out mov adc cwtl or js fstpt adc push mov dec adc mov outsl mov outsl or adc into mov mov ljmp popf nop inc (bad) mov out jmp popa mov add (bad) or (bad) push icebp or mov rcr sets lock mov popa jecxz adc or and add mov jne or mov or mov lea push movsb rolb xchg mov and stc sahf mov jle adc adc sub enter adc pop test clc shl xchg mov xor cmp mov loope fcmovb mov push xchg cmp push cmp jmp daa sbb imul js and (bad) fldlg2 xchg mov push dec nop add cmp jge adc and sub mov add movl xchg fildl scas jp adc push push arpl inc adc add cmp dec lcall push pextrw mov push mov lret mov inc mov jbe or cs faddl cmpsb add cmp ja jmp lea cmp jge cmp ja sahf je cmp push push cmc jmp lods iret cs sti adc loopne int enter jle loope sbb loope loop xchg push adc push inc mov aas xchg enter ret adc xor add or xor push js push aad sarl add insb sub jecxz xchg out or or inc mov lret pop repnz negb lret jbe insb pop push ret (bad) sahf push loop mov or or xchg pop inc push jge sbbl int lea push stos pusha andl add loop add jmp dec and lea test sbb cmp xor (bad) ljmp insb adc inc fidiv adc shrb sbb add ljmp cmp xor sbb insb mov mov mov mov pusha pop mov mov push push add mov testl add jle cmp std add inc mov inc inc add inc movsb push push dec pop xchg push (bad) lods add add ret pop pop jl mov rcll add mov sar xchg cmc push or sbb or out aam lea inc in add mov pop stos cmp mov adc inc xchg jbe (bad) adc mov mov mov (bad) or mov (bad) or push mov adc sbb pop std sti sti adc mov push cmp jb mov ret xor jmp es cmp rolb test and aaa dec scas add jb mov add fwait jne loop lcall add sub lods jnp ss dec cmpsl mov and testl or add adc cmp push (bad) xchg inc das add mov insl sub mov adcl jge mov jns ss and or test cmp jb jne mov (bad) ja popa pop roll adc popf pushf sub das jne sub jbe push scas sub cmpsb shl mov jns test mov (bad) jne push (bad) fldenv seto (bad) mov push pop sbb loop in dec adc mov push push loopne jo pop xor shll inc or test insb mov mov fimull cmp insl mov (bad) push mov mov xchg xlat test add mov ret mov or aad fcomp inc cmp inc cmp jle mov lds push jl pop cmp jg mov inc xor mov mov sub sub adc pop cld push or orl movb push sbb and mov or pop add adc scas sub or mov faddp add add pop hlt pop loopne lods push imul mov push or test mov insl imul dec adc je (bad) adc adc (bad) mov inc jg test mov cli cli dec adc lods pop popf fwait inc and bound adc cld dec or ret shrd cmp aas xor cmp fsubr sub or iret inc in cmp mov add fimul jne fstl pop hlt test push jae push nop jge orb dec or or fs mov clc sub push mov fidiv clc shr (bad) dec arpl jne data16 xor lea sub sti rorl leave je pop push dec or sahf fcomp mov inc push sub call leavew dec jne pop pop lcall xchg js mull cltd or scas jmp sbb cmpsb and bound js sbb and movl mov or mov jbe jne add aam dec or out xlat inc aad dec loopne add (bad) cmp push push mov mov add js mov mov or inc or mov pop add es pop adc lahf adc imul call push jl dec pushl mov je cmp jge add xlat jmp pop cmp mov mov pop xorl cmp jg or flds icebp pusha xor cwtl mov jmp rorl or mov add sbb sbb subb pop fcoml push mov mov push add xor xchg adc daa xchg es jle (bad) icebp mov lds xchg cmp pop lea cmc mov mov pop pop xchg pop pop xchg aam xor add adc pop aad adcb sbbb or das add cld jle adcb dec call scas nop hlt add xor and test or insb mov mov leave inc push xchg pop sbb fstl sbb and xchg push test daa lea mov (bad) daa cltd call insb mov xorl sbb lahf xor inc pop push movsb inc sub arpl push mov mov mov push inc cmp mov add jl stc jmp cld adc inc dec pop cmp ja jge cmp push pop push or mov add lods inc test frstor mov (bad) push jle push pop jge xchg dec andl inc mov imul js pop adc mov or adc xor icebp or inc mov push xchg mov fs into or outsl and dec mov pop add aam rol add out je xor mov lahf inc cmpl jo and push jle ret pop xor div in add ds repnz and mov mov add movsl cmp sub add xor mov xor jb dec add add nop add adc add or add notl lcall jb sbb jp mov add outsb fucomi sarl jecxz pavgw add add rolb aaa and mov les cli jmp sarl clc in mov push cld adc outsl push sbb mov (bad) or xor bound add mov sub xor mov cmp mov or insb test mov js mov adc je inc (bad) shl push dec inc inc das nop push mov push mov mov nop xor pop out cwtl cmp sub inc popf test cmp addl data16 iret jbe iret mov lcall lar popf push sbb push mov int jno inc add add cwtl fiadd popf push mov loopne inc aam out xchg pop pop mov cmpsb cwtl int out lret pop stos jnp mov or mov jo (bad) fldt sub test or adc test xor lods adc dec xchg or lock push mov mov cmp mov lods lret xor pusha dec cmp adc dec cmp sahf jae fistp lods jmp mov shr push cltd test outsl nop push jno mov adcb jp lahf push and popf (bad) fidivl inc mov mov sbb les dec ret and scas inc scas je and pop repnz mov and nop loopne push mov jbe xchg push lock xchg xor add adc cmp add les inc mov stos test and test adc jmp pop cmp mov cmp lea inc lret xor rclb or pop jmp xchg popf add dec jne jge fcomi push sbb in sarl ss sub cmp mov test mov sub inc xor mov insl cmp pop setbe mov sub and into (bad) cld mov push lret out or shr shl dec rorb in lock pop pop push pop xchg cmp push xorl mov leave rcr or fisttp xor rcr add inc mov or je clc cmp les fild fimul or dec (bad) mov mov mov cmpsl xor sub mov inc aas sbb inc cmp mov sbb adc inc and fnstenv xchg aad sub sbb rcll mov inc not gs sbb adc not push inc mov mov enter push and test lea in (bad) push cmp add clc ljmp push push dec ret add fsub jbe sbb mov or mov cltd data16 stos and in jno inc and sbbl inc rcl sbb add lods mov adc mov js mov add orl mov pop flds push or inc or fmuls subb or dec (bad) mov inc je mov sbb mov mov push mov add mov push cmp sbb js xor inc mov sti std test sbb push and pusha sub fcompl sbb push movsl mov dec mov inc sub sar sbb lahf xchg add aaa mov lock cmp or fdivrs push push idivl mov mov or inc rorb (bad) loopne (bad) jae jmp out ljmp or sub or repnz aam fistp leave push mov and loopne sub fdivs dec pushf adc dec push mov jle aas push lods test je fucom mov adc movsb hlt dec add lcall inc jne cmp dec lea dec repz inc faddl mov pop pop lahf xrelease sti add jmp adc jl enter je pop add sbb sub adc jb,pt mov test lahf pop nop and mov sub and push imul and das neg adc loope iret fbstp sbb dec pop (bad) jb mov inc xchg adc cmp mov jne fiaddl and xor adc bound fwait cmp dec lahf or outsl arpl mov cmp or xor pop push or or xor mov aaa cmpsb add sbb mov mov mov adc mov dec pop or pop jne pop sbb pop add push or cmp jp daa (bad) mov ljmp (bad) ffreep pop (bad) popl movl cwtl or inc outsl (bad) adc test push inc pop mov add inc or jecxz ret inc dec int3 inc push shll bound addl push dec push add fdivrs das push mov dec mov mov mov push cmp cmp inc cmp mov lret sub aaa mov pop data16 (bad) int lret pop or fstps fucomp or add add fstps push sbb aaa dec dec and fsubrs bound ss in and jmp addl pop out mov pop inc repnz add jg cmp cmp adcb and sbb push insl adc push mov neg mov adc ret sbb or mov sbb dec adc push loopne sub mov pop xor jl in push sub inc sub aaa mov sub mov lret pop dec push sti je jmp jge or or inc push push push sub jno aad cmp insl popa dec mov call mov cmpsb imul imul dec div push test ret nop pop add ljmp add mov jne cmp pop cli and xlat jge test insb loope sub add sbb mov add add popa sbb lods add jbe and dec out push push (bad) hlt lock cmc pop fldt mov cmp jne dec sub xchg jne cmp fwait mov jbe add pushf sub in inc shl repz lea sub js push ret add adc repnz insl sbb pop or dec add flds jns fadds jge shll sbb outsb out mov fildl dec sbb dec in sbb jne or rol pop out pop in jo lock mov je adc in push stos cmp mov mov push bound and fnstenv arpl (bad) inc xchg or mov je adc std mov nop cmp in jne fwait push aam sbb cmp push cltd add jmp in push add jmp mov add and inc inc add jne mov pop mov pusha inc cwtl addb sbb shlb mov int push xor cmp add push xor lret nop out cs fs sub sub xlat (bad) mov loop (bad) jle add scas mov adc and sub adc in mov popa and push outsl add imul out xor push add outsl (bad) fcmovnb lea icebp inc dec mov je sbb fistpl je,pt mov lret mov and xchg dec push and dec xor (bad) sti mov xor fcompl (bad) icebp sarl mov je jmp test add aad mov adc (bad) cmc test rcrb sub mov xor mov xchg frstor es ljmp sbb ja xor icebp jae dec sbb and add xor jmp or scas imul push shl mov xor inc adc or xor and lcall pop push mov lret mov jne push xchg and sbb pop sub mov lea loope sub test push jo std je xor shr pop jne cmp sub fwait push adc mov lea push dec dec and (bad) je repnz sub sub movl lds inc call (bad) je popa mov pop and bound inc mov js enter andb rol sbb js loop mov stos mov add bnd outsl js pop dec shrb inc sub add sub fcmovb add push scas adc add push sbb cmpsb sbb pop lahf pop je xor mov push push fist or add push orb mov test inc cmpl push or add inc xchg dec cmp dec dec jl ljmp or push push dec jne daa out ja adc popf cmp shlb lea pop subl sub inc sbb hlt inc ds push mov sti jne mov and pop stos bound cwtl adc mov push pop push sub push shlb sub mov icebp pop loop or jne mov lret adc pusha adc out movl or inc add mov mov add std xchg add dec (bad) jbe adc outsl mov stos in je mov test shll and enter inc cmp (bad) mov ja mov aam ljmp cmc mov pop dec sub or mov mov in add cmp mov add mov (bad) and mov jb lret inc push push inc xor bound (bad) (bad) rorl loopne jmp xchg mov es loop and or xor pop mov jg or xor push inc jge jl ret dec jno dec jns push inc sbb (bad) aaa push fist and sub dec shr or dec mov sbb adc push or and sbb dec fist or mov enter (bad) mov push jb mov out and call sbb lea je sti cmpsl mov add ljmp jne add pop sub (bad) dec jnp popf nop add ss cmp (bad) call jecxz add (bad) mov imul xchg movsl mov xchg pop mov movsl inc mov xor sub push ss iret jp and es in or (bad) arpl ret jg fimull mov and add mov jecxz cmc lcall add repz mov sub jmp clc (bad) mov cli mov out cmp jbe sub mov mov inc inc dec jne jae fcmovnbe je jbe cmovns push dec shrl mov adc ret sbb loop rcrb mov push inc xchg xor cmp push in js les je mov adc loopne add jmp dec push mov mov mov mov mov push fdivs or jp push (bad) mov adc dec aaa bound push fwait inc or push xchg mov mov jnp and add mov je push enter (bad) pop fnsetpm(287 and pop jb sub out cmc (bad) es push aad imul pop push sub mov inc add ss mov push call pop mov shr mov (bad) jbe cmp (bad) movsb xchg cmp std jb cmpl lods cmc (bad) (bad) and out (bad) pop pop xchg daa ljmp imull mov pusha stos shl mov add sub and add mov add or loopne enter add add je jne out pop pop clc add in or rorl mov add add pop mov int3 gs (bad) dec sub xchg add cmpsb andl push in fstps sbb imul sub cwtl cmpsb and pop mov dec (bad) xor (bad) in call xor (bad) xor hlt hlt clc clc dec mov sar cld push lea add insb mov hlt jl mov inc inc leave xchg mov ss adc and sub jnp and and std jecxz lock jg neg imul sub cltd scas sti inc sub adc cmp pusha and insl add outsl push out cmp and mov fsubl mov dec jo sbb (bad) xlat sbb sub xor ja pop mov mov xor rcl fsub imull mov mov pop sbb imul imul or adc add mov mov push xchg in inc add and es jbe mov xchg enter imul insl popa push jno dec lods pop gs add inc mov cltd sub test jb mov ljmp pop mov stc or movsl neg push adc dec je rep pop or dec push je ljmp dec add push pushl sbb in inc lret insb or jo push fcoms pop pop sbb decb fildll fimul jle push sbb pop mov cmc pop jae mov mov sub jb push pop push insb adc and jne je test aas push inc std fisttpll sti lock push adc test ja ret push mov sbb imulb popa xchg push fsubl dec adc mov rolb cli mov jne push pop jmp out negl xorb or push in jecxz push shll test clc and pop sbb jb add (bad) arpl hlt mov (bad) imull sub ret pop add mov cmp movb imul add jg jnp insb mov add int cmp fildll pushf sub out mov scas fild add fcomps mov pop or jo outsb sti inc push testb jne adcl mov pop and (bad) movsb jbe push prefetcht1 dec pushf popa mov (bad) jecxz push pop or push mov cmpl add adc pop add push pop xor push xchg mov mov insb pop out push movups scas mov xchg cmpb je jbe std push and ret adc push mov pusha jnp mov sbb clc mov push pusha jae push adc pop out push (bad) push push jns std movb mov mov pusha movl mov xor std iret push add rolb jo push clc push push fcmovnu ret push (bad) jo das xor xchg inc and inc or clc or cmpsb fucomi or clc or cmpsb dec dec scas mov enter xlat inc inc in adc sbb imul pop in cmc bound mov or add jle add (bad) int3 jmp ret lock xchg xor incl inc ret push and nop mov in or jmp out pop pop sub or nop inc and xchg or or push js lcall pop push pop add cmpsb dec das insb insb mov lods add add xor loopne jle dec and xchg sub inc inc adc nop das adc or xor xor lcall in add cld adc or adc or jmp sbb and dec add les sbb add in mov cwtl or mov fcmovb pop mov or add jp or mov adc imul movl jp ss leave aaa jl inc push lods mov fistp test sbb scas jmp addr16 or pop pop push push mov pop xor movl subl cmp in mov push inc adc pop jnp pushl pop or lret fcomps sbb mov cmpl push push xchg stos dec pop jno imul das sbb iret movsb sti pop roll mov jl mov jge movzwl data16 pop shrl ret or sbb adc je pop add in sbb add sub jp inc cmp in adc push pop inc inc mov cltd fsubs loope loopne popa adc rolb movl dec push int dec mov cmp mov pushf add xchg add cmp je mov push lods mov add mov fcmovnu loopne inc rcrl jbe rorl add pop add and leave add add dec rcrl push lock mov push pop je sub je daa mov dec flds add xor xor pop (bad) mov add or sub movsb cmp and inc lcall lods cmp (bad) lea loop or or or nop outsb in mov add es push push cmpsb mov fs jg inc adc pop adc adc jne adc adc and dec jae or adc cwtl ret add adc xchg cmp adc cltd adc movsb adc cmp popl xchg sub sbb sbb fs sub dec or and daa nop sbb add sbb xor jmp add je sub fldl movsl movsb sbb jge sbb sbb rcrl inc pop pop adcl incb and ret sub out addl push iret cmp push incb fisubl sub aad xchg add mov cmp je dec repnz aas (bad) push rol lea push nop scas jmp aad in in lcall out or imul or jge test fucom and js jmp dec and leave add jmp mov fs out in in in dec dec aaa jb mov xorl push pop jae jge out mov xchg lock add popf dec xor and pushf sarb out std out (bad) mov repz std mov popf xchg hlt hlt push add dec mov es out jg negb or div (bad) cmp cmp dec daa nop out fs and lock xor iret sahf push pop jae sti mov dec pop cld je cld sub xchg je pop dec ss std sbb adc xor sbb (bad) adc outsb stc add ret inc test sub or mov outsb push lahf shrl mov fsubs sub adc test jecxz jecxz push movsb xchg adc sti in and nop es fdivr and cld push fstps out out ret rorb or xchg pushf dec sti sub mov pop pusha mov jmp sbb sbbl ret cli popf cli jns pusha or add fs out dec push push jb jmp add cli jns and jmp in repz xchg call pusha or dec stc mov div outsb imul add dec xor add push jb adc out clc in andl sti push sti dec mov cld add andl and pop fdivs dec add inc adc jle fist fsubs fnclex mov loop icebp leave sub testl (bad) mov out out or add sub in jb mull notl sti imul ljmp (bad) or and repnz (bad) mov fs out cmp pop inc mulb and divb (bad) repnz mov cmp sub xchg sub pop inc pop jae mov arpl idivb adc sub in jne add clc xor cmpsl mov enter xor mov cli cli push cmp dec enter and sub hlt outsb fldl data16 (bad) lretw lds hlt decb inc pop cmp lcall ss mov outsb incb or push loope imul test loop in jb scas repz ss and in push inc pop in jns and repz inc push gs push mov sahf pop (bad) jmp pop jns bnd cmp repnz pop pusha mov in push das mov jns bnd sub push add inc loope repnz icebp icebp or xor push dec xchg push pop xchg xchg inc jb or xchg pop adc push xchg icebp jp lock scas sub and iret or mov xchg jns cmp lock das mov sbb lock lock sbb adc mov lret xor outsl fisttpl add push sub jae mov mov in cltd (bad) jbe pop inc pop push add int3 xchg or aad mov add mov mov mov inc dec pop rorb push mov jmp inc and jmp cmpsb jp (bad) mov mov add imul sbb lcall fldt (bad) pop add cvttps2pi fldt (bad) sbb popf pop inc rorl loopne sub push insb sbb or (bad) minps add adc sub into sbb sbb xchg rdpmc aas pusha ja mov rclb add cmpl roll jne call arpl (bad) mov cmp incl and shlb cmp xor jbe cmpl ja mov pop cmpl push mov call je shrb ret push push push and lea add pop pushl or push pushf sbb fbstp call push fs adc xchg jns sbb loopne aaa adc mov aad xchg outsb sub sbb or sub add xchg std pop cltd jle and sub xchg cmp or movsl loopne pusha rcr push fdivs xor add or push mov test out fildl or pop jg push pushf add mov adc inc mov dec js sbb sbb dec dec (bad) out push or jl mov adc fs fldenv and jle mov adc jae gs push mov mov mov jg jmp push pop push push push push sarb js jge mov and add jmp push mov inc sub cld mov pop mov mov aam ljmp mov and or adc and inc test push or decl adc (bad) cmp jbe push pop pop xlat inc xchg sbb sbb pop lods or add jle fnsave rolb imul icebp mov push add fwait mov iret xchg (bad) loopne imul orb (bad) fdivp and jecxz or fsts aaa push inc (bad) pop add add dec or pop les push jmp add jne ja pop inc fisubl mov adc mov cmp push push lret sbb adcl cmp push or push push mov imul pop loope addl adc ret daa mov call adc test enter sub push inc cld mov in adc or sub pop mov outsl fsubs adc pop mov xor dec adc std out or mov or jnp in and sub mov adc push stc push daa int3 mov test add and adc xor rolb add jmp lea movdqa add int dec adc and jg add ja fsts jg jg outsl inc add push fldlg2 mov jo adc jg mov jg lea jne add fsubl push push test fcmovnbe popa pop adc ret cltd mov sbb lret outsb outsl test clc xor mov push push mov or jne stos movsl lods sbb call inc adc icebp push push push sbb add movsl push jecxz dec fisttp ljmp mov fsubrs fldcw adc (bad) fucomp lock movsb sub push jecxz xor xor jnp in in into in (bad) lea add cmp mov inc sub push jno cmp mov or leave out xchg (bad) stc loop andl mov fnstenv (bad) testb pop or out add lea loope push inc inc inc jge push adcl inc inc inc push rorb in sbb xorl jmp sahf cmp and push hlt jge fsubs xor xor mov push (bad) mov faddl ljmp shr sti dec hlt rep jmp neg add lock out or push imul enter clc lock add sbb or jmp or or add inc frstor add inc loopne fiaddl sti insb mov lock add outsl cmovbe and sbb mov jle cmp push inc mov cmp jb sub mov sub and mov dec mov and or pop push sbb rolb inc mov mov jmp push (bad) and pop and cmp cwtl test add aad and and mov or subl xchg jbe inc scas inc shlb xor loop in ret jbe adc lea xor lock and cmp imul or pop and pop fucomp fiaddl or mov or dec nop pop inc pop enter inc loope insl mov into xorb jne sbb or add jbe movups je fwait pop inc push dec add push pop add or mov mov test out fild jbe push sub ss xchg loop sbb cmp pop sub ret sbb (bad) aaa dec push popf push cs popw adc add push pusha sbb sbb and stos ds and add scas roll fsubrp or inc test cmp adc lahf sahf mov gs cmc pop mov push lds test and dec or xor or or cmp or or insb xchg pusha push mov jp push sbb dec cwtl push sbb jg scas add sub or outsb dec iret adc test pop or sarb sbb inc inc es or add fwait jne xor ja (bad) mov adc andl cwtl pop je je xor dec push lea mov xor dec scas inc fs and cmp push adc and je or add push sbb dec arpl add add dec xchg bound or test mov and jge dec test adc sbb sbb xor mov add pop pop and test cld insb adc xor add pop sarb les nop add popa adc push jmp addr16 push push int3 mov push inc sub pusha dec add pop mov add add aaa push and (bad) jl leave push add add aas mov rorb xchg inc rol mov push imull (bad) sub mov lods je mov test in (bad) mov (bad) lods xor loopne aad inc pop inc (bad) ret or push movsl pop push test xchg jae stos push ljmp xchg jp test mov inc cmp test scas scas cmp js xor (bad) loope inc mov (bad) icebp or push fldl push xor jo dec push push rol inc and je stos in or into ds or fstl sbb push cmp inc jne ja movb jb pop add cmpl jecxz psubb jmp dec pop rorl jmp es cmp cmp add cmp xchg loope push pop jbe fmull mov (bad) ss (bad) adc pop sbb lret mov mov jnp push inc and jo push mov fist es pop pop push in xor movsb jmp push push les jne push mov testb mov idivl test push inc add lock cltd jnp sbb inc ss inc pop fistp lock sarl add (bad) pop mov call pop or adc xor cwtl cwtl lahf mov add cmp or fcompl jb test ds push sar and cmp je push int3 jmp loopne fild fcmovnb mov push or jb xchg mov inc in sub into adc push je sbb add pop dec idiv add add insb inc push in and add iret out sbb inc rolb mov jmp pop add sub out out xor and add dec add xor xor and ret lea sub push loopne fsubrs insb je push pop lock push inc jne mov (bad) out adc mov test test pop cmp push outsl mov add (bad) push icebp jae xor loopne movsl clc dec aad dec adc lea (bad) jbe adc add xor test inc or add movsl sbb jae cmpsl push jno out test add adc (bad) sar (bad) stos ret push cld je lea sbb adc lea (bad) fldl aam adc xlat inc pop inc jbe lock jl jg or loopne xchg test mov je xchg xchg loop push mov mov fcmovnb push cmpl (bad) pushf sub push push (bad) in ret je sbb call inc mov ret mov push jge mov pop nop call inc mov push (bad) ja mov cmovnp out cmp jnp decb mov xchg push lret mov negl and sub into je cmpsb outsl mov add or je cmpl or or xchg ja push shrb jmp sbb add and add (bad) aam test add sub jp mov or lea stos cmp inc dec adc sarb fs lea xor add add outsl les mov rorb jbe dec adc ds add pushl or and pop mov sbb mov add cmp ja sub cmc xchg add sbb push loop sbb add add inc or cwtl rolb fcmovnu push lea imul add fcoml adc ret push push xor inc push xor mov add and stos movzwl (bad) mov jg add orb mov add jne adc mov bound jmp movb cmp sbbb (bad) or push adc and dec push sahf in push out pop roll cli adc and mov mov inc adc mov cmp adc pop fimul loope jecxz pop xor pusha sbb out clc mov sub je cmpl enter mov ja rolb add and mov xor push mov add (bad) mov sub sbb sub push push pushf pusha sub jmp dec xor mov lea add incb push xor ret cmp inc add adc pop adc imul and jmp in mov add jmp cmp mov (bad) pop leave jns push or jnp inc and movsl fisttp loopne push jg jge jne fsubl xchg mov fmull fistpll icebp ja (bad) xor and std shll (bad) jmp mov dec mov pop iret xor movsb pop adc repnz jle lea (bad) rolb mov call or mov clc movsb jge push iret sti inc fstpt jne mov test or adc add adc inc cmpsb cmp imul sub sub mov add test mov lock loopne andb in and inc jbe mov inc inc cmpb mov mov (bad) mov and or ja push cmp inc jb mov xchg movl pop and push cvtdq2ps fstpl lea inc sti decb inc sub inc dec jne mov and lahf jne mov add negb add xor cs mov loopne or jne mov push push rolb push mov dec mov mov in add pop add cltd pop pop cld pop inc mov testb mov cli in sbb sbbl mov inc push jl add fsubs add push rcrl jmp mov mov push mov call push (bad) cmp std sbb sbb adc jl (bad) cmp js dec add pop mov push fadds xchg enter test xchg jbe mov mov rolb mov rorb inc sub mov mov (bad) mov cmp dec sbb mov aad dec add pop movsb iret mov mov aam and push mov daa jmp jmp mov fstl xor mov and loopne or cmp hlt push sahf push adc addb add adc mov loopne lds outsl cmp xchg mov push cmp jne or cmp adc pop outsl addb and jae fwait pop (bad) mov or mov movsb rolb sub inc lcall les (bad) adc or dec rcrb mov call xchg mov mov divb jae jg push arpl cmpl add insl cmp cmp nop pop push sahf inc add and add push js arpl aas push push call xor sbb and lea pop add in cmpl cld iret pop add movnti or ficoml add cmp add push adc cwtl jg mov loope push mov aaa fstp mov xor imul push mov (bad) punpcklbw pop pop jge sub test and xchg or push sarb mov lock bound xchg inc loop sbb jo inc aad jle nop lea mov clc adcl sbb shll sbb xor mov sbb adc adc mov mov sbb in add cmp mov inc push jmp inc sbb cmp and outsl mov adc xchg mov adc aaa inc repz jle inc adc add cmp sub lret jne or and push cmp js inc mov pusha jmp and pop mov cmp cmpsl pop clc pusha adc bound inc and mov sub mov xchg rolb lds mov test outsl lock mov jle push out pop div pop jb mov (bad) movsl ljmp stc xor jle lods mov cmp imul mov aas adc or ret or push aad cmp mov pusha and cmp cmp dec les push imul xor adc jbe xchg icebp les testw sub dec add cmp inc push xchg sbb xor sahf mov adc mov sub push hlt (bad) add push push mov je mov inc adc pop add jae ret mov add jmp call sub sbb (bad) test inc clc mov pop sub or mov pop mov orl cmc lods test aam lods lret sub pop jmp pop mov fildl sbb repz fcom inc and dec inc sti xchg adc sbb inc inc clc in cmpsl imulb ja add adc stos loopne movsb ffree pop adc xbegin add ss mov add fwait (bad) sub into cltd mov mov add add cmp mov add in sub rorl push cmpsl and mov inc sbb (bad) push daa (bad) (bad) fistpl sub push pop inc int3 int int3 sub int3 push or imul imul sbb iret pop sub leave lcall add add nop sti inc cmp jb lea pop mov inc stos adc jns and xchg lock inc insb ret add cmp (bad) or add iret fldl sbb and add popa nop or pop add cwtl mov enter and imul mov add add pcmpeqb add pop jmp leave clc mov mov and inc cli or ret mov jl add sub mov inc pusha sbb (bad) xchg bound dec insb adc sub add shlb movsl mov lods out shlb add dec ljmp das mov sub bound fisubr or inc js dec add pushl jo sbb adc and mov jmp pop std int3 push scas test add jl jbe test cs scas jne or cmp and jle (bad) sbb jne adc sub inc inc sub lods add inc inc sbb jo addl nop (bad) shl std adc add inc sbb mov add sub xor pop add jmp mull adc aam mov xor sbb mov lods mov rclb fisubr ss mov xor inc mov pop and pop popa dec ss sbb cmp rolb adcb mov xor ja and push pop and xlat cwtl or adc sbb mov das add cmp dec popf mov lods inc cmp ss cmp addl mov and cmc cmp andb xor test xchg and (bad) lret xchg add xchg movsl pop aam cmp sub inc test dec fldl insl push cmp pop adc mov fistl jmp sbb push outsl pop cmp mov into mov jae sti rcrl cmp loopne fbstp inc lret sub in cmp std pop ret and jae inc enter xor add and add dec adc pop lds push add jg push mov mov add cmpl ljmp inc fwait mov mov outsl and adc loopne and lea gs or inc add fs cld cmp pop cmp add push js jg sbb cmp je cmp and pop xchg cmp test and mov loopne dec inc xor push adc jne fcoml lcall push call jb add cmp push push ja push ds mov xor mov push (bad) fs in push test push iret or (bad) mov lods adc push mov scas and add inc add mov add addl movb inc loop push sbb mov add push inc bsf add aaa jl mov std fnstenv or out cmp (bad) stos mov ja xlat mov sub push das pop mov sub testb push pop in sub pushl push add fsubrl inc and insl xor mov call xchg fscale out and or adc push pushl mov adc add inc inc mov jp hlt inc push test jne push lcall sbb adc or std xchg mov sub pop pop lret cmp mov imul sahf or ficoml push sbb mov and sbb (bad) scas (bad) inc loopne pop sub inc add push ficoml test jecxz je xor inc xchg push ficoml and add or or cmc call add xlat jge imul mov sarb fs lock out jmp inc add nop cmp jl mov add mov xorl cmp sbb xor ds xchg push mov popl push js mov lods (bad) jecxz das in roll loop or inc pusha sub cmp mov sbb rcrb add or jmp mov and call cs and and and adc out outsl test dec faddp test ljmp insl mov xor out aad xchg pop gs mov leave inc (bad) mov (bad) testb cmp cmp cmp sub inc pop mov inc icebp ljmp sbb sbb cmp (bad) fldenv push jmp xor mov mov das sub cmp sub xchg inc cli je push push push cmpsb pop std pop add (bad) cmc cmp jne decl out sbb movsl cltd add push mov mov loop jl inc in dec scas mov or mov inc and stc movl xor mov or out ss mov adc cmp pop fistpl insb add ss es push dec ret push inc dec adc imul inc jb jl sub (bad) (bad) fisttp mov andl je mov or fadd inc incl or xchg loop mov pop test mov cmp push xchg repz jmp ret jecxz lahf lds js mov (bad) fildl push test inc and lods es mov int cmp inc xchg or arpl fidivrl jmp add (bad) pop inc ror jne lret std je mov je dec je jl dec jbe add mov or sub fdivrl aaa pop and sbb sub mov (bad) daa cmp mov xor adc leave sub mulb out add and sti js mov dec adc sbb pop mov xor cwtl pop pop hlt push sub mov pop cmp xor stc pop insb cmp cmp xor aas test or jae call les lock lea xor ss mov popa and ds into inc loopne jle dec mov (bad) jmp cmp es jecxz and mov xchg jp and mov push aaa add sub movups add and and adc jle int mov xchg shrb (bad) arpl cmp sbb push (bad) add add stc push aaa cmp mov (bad) push sub vpsubb add cmp jmp push (bad) or (bad) lock or or xlat xchg push and loop xchg enter and jmp mov xor add inc and dec fsubrs sbb fldl (bad) pop insb jne add js imul or in lret xor inc mov push push xlat adc mov std add ja push push push push cmp pop push sbb lret (bad) or fiaddl rorb xchg fisttp xor subl add jne aad cli add std or cmp xor mov jge dec (bad) ss jge rcl push repnz lea or hlt pop add jl or xchg pop cmp test mov or cmpb lea adc lods andb (bad) ds test add inc mov cmp inc or pusha pop xchg jle mov ds push add je mov test addl or adc mov call add fdivrp add idivb add jg mov push mul jg pop jg in pusha sti testb pushf inc loopne subl jge addb inc xor inc mov int3 les orb jmp (bad) dec sbbl negb ret pusha icebp or cmc push inc mov lods sar xchg das inc push aas push fwait push loop dec xor ds cmpsl incb jmp sub or je xchg pop daa movl inc icebp jl xchg dec add adc jae lock pop mov sbb mov leave imull push mov push out push cmc push add jno repnz adc pusha gs sbb add jo cs jge jb scas (bad) roll add add mov mov mov add and aam xchg jnp daa mov mov push pusha adc dec sbb js push movups inc icebp mov (bad) and push mov out in ljmp or sub shlb fbstp (bad) mov push sub or lock jo adc sbb dec adc inc hlt mov lock mov test (bad) lea adc lock pusha std jmp clc pop pop pop mov mov xchg sub pop push push cmc nop or cmp xor pushl call add cmp jl into rolb test arpl mov inc insb sub adc insl shll int xchg ret cmp sub or xor adc add mov rcr test and ret inc test jl test xchg das pop mov or outsb push orb wbinvd les add jmp push inc mov sub cmc and or jne push outsb adc inc push xchg inc sub jmp inc xchg or push andb fcom mov clc push sub or sbb add ss pop pop or loopne mov and pop lock or icebp inc dec or popf add nop add mov jo outsb jecxz xchg addb adc in fwait cld add fadd mov add adc pop mov inc stc add test (bad) sub cmp rclb test cmc or xchg pop clc (bad) (bad) (bad) sub lret cld shr iret imul sub mov dec icebp adc or mov stos hlt arpl push add inc sar fcomi ret or je cli add cmp add and cmp add adc inc mov xorb (bad) call call add shll pop push (bad) mull jp andb jmp lea sbb js sbb pop cli mov push cmpsb pop add jle push mov (bad) push or jne outsb orl hlt stos mov out dec clc add jne adc sti add mov dec pop fistl cmp (bad) fiadd xor mov cmp je dec jno fcomps add and mov lods out jg mov scas dec add fwait lea dec loopne mov sbb push stos mov repnz dec or adc jbe sbb add adc fidivl fcompl adc dec pop jmp mov (bad) je (bad) add cmp je fcomip jne mov dec paddd inc mov jae pop add jge push dec mov or push xor (bad) dec faddl inc cmpsl or stos and (bad) mov sbb arpl mov ljmp roll sub mov ficomp xchg orb fmul add xor test sub shl dec je add push mov mov pop or push xchg cwtl mov mov add loop out adc dec adc push loopne fsts addl (bad) mov pushl push or (bad) adc adc in dec mov (bad) sub cmp pop lea pop imul int3 mov jmp sub insl or add scas mov and call mov imul xor jg push xchg mov aad js jg dec inc lcall mov add xor test add ss cmp xchg fiaddl sbb pop fsubrs inc adc jbe push in jmp addl aam push add xchg xchg rolb mov push mov lods jno jno and xor jge jecxz jmp ret test std and sbbl stc rorb jne push sti sub popf iret stc push (bad) mov jns jp mov cli push movsl mov inc or push icebp inc adc dec fildl sub fwait cld push mov pop out mov inc cld lock push add sub cmpsb dec std jge add icebp loope add dec (bad) xor mov lahf mov inc icebp mov outsb mov enter test dec inc push add or pusha ds and sub fdiv ret rorl pop mov mov xlat or jb sub pop shr inc mov cld sub cmp mov mov adc xor test pop inc push sbb flds (bad) cmp mov sub or push dec pop imul pop dec stc (bad) arpl test fcoml es add pushf in jne lods nop fisttp dec mov add jns sub add popf ss and movsl test sar add adc inc mov cld ljmp mov mov scas (bad) andb mov fisttpll add inc pop adc pop sbb adc mov mov jmp sbb nop mov lret test dec aas cmp insl mov cld xor or mov jnp or clc cmp add inc push rsqrtps das inc fidiv pop dec and pop xor pop mov incb pushf push sbb (bad) clc out rcrb inc cld stos xchg inc aas push sbb dec repnz dec dec out xchg shll dec outsl push dec dec xchg or push insb pop or jbe sbb or mov not add loope or mov dec add or push cwtl movd xchg mov push bswap mov and cmp push into adc lods popf setns push pop push push fs inc les inc sbb push and fidiv cli xor add pop push pop and lcall pushf and jge into mov lea mov subl or inc sub xchg dec (bad) icebp ftst pop and test cmp adc (bad) lock stos mov jb push jne mov cmpb jne jmp add nop outsb xorl or insb or xor loopne shrl dec jae adc (bad) dec fs out adc in adc sub or pop in sbb cli jmp or je je mov mov push cmc ja dec (bad) iret jne movsb ss mov dec pop cmp cmp xchg sarl out jbe mov pusha sbb jne pop push push pop xor into inc stos or xor ret call mov sub icebp pushf loope jp and popf (bad) fcmovnb inc std dec decl pop cmp and je out es mov jno and mov decb jne div and cltd jmp mov imul mov pop xor sub pop and addr16 jp mov mov xchg mov adc and insb cmp mov or into xchg or mov mov or mov arpl and jmp insl repnz mov aaa (bad) pop fiaddl das mov repnz popf faddp or add aad xor inc (bad) mov jo sbb sbb or and sbb orb (bad) cli inc add loop ret xlat mov call sub movsb adc imull test push ja jl js je mov cli push lea jo inc insb gs test aam inc lea sbb xorl mov push pop inc lock inc or or test inc mov mov test jb dec mov (bad) and gs pop and inc cltd jae lds or add xor xor clc fistl cmp pop and or pop clc test add loopne push sub cmc dec xorb movapd (bad) stos jno add (bad) pop add (bad) or test cs sbb push mov inc hlt and pop mov loop pop (bad) or lods popf pushf pop sub je push popf pop adc movsl shll add add clc pop testl push in bound jo gs push or leave jbe pop rolb cmp mov sbb adc jle fnstenv lods pop fstl cmp adc es add pop mov nop mov push adc rclb rorl aad arpl add lods movsl sub jo dec ljmp mov negl dec insl mov pop sbb jns daa mov inc lods dec inc call push fimul and dec adc push or xor push push push imul adc or sub mov cmpsl test sbb xor insb mov clc push jmp cmp insb and push jbe jno addb add xor sbb and int push loopne ss adc dec test sub fcmovbe shll mov sbb outsb orl sub rcrl cmpw iret adc test lret cmpl insl adc js or adc mov loopne add and call add ljmp jbe dec insb test ffreep cmp jb jmp sti jb clc movsl cs ret sub (bad) jb and or int3 add jb out (bad) push add add xchg adc clc lar sub mov pop sub adc push or dec cmpsl orb mov cmp xchg inc and insl add shr (bad) push add push push ret movsb test add mov ret and pop mov (bad) rep mov mov xchg push pop adc mov mov cwtl icebp mov add pop push mov movsl scas add cwtl fidiv and leave nop lahf push push or insl shlb and or nop xchg cmpsb mov and or lea fs mov mov pop dec mov pusha pushl sbb call daa pop popa stos insl arpl inc je rclb sub sbb out xchg sbb or sti (bad) mov push mov or cmc (bad) shrb insl or jp pop xor addb cmp mov addb js ljmp mov xor xlat or sbb aas sti add sbb cli test inc pusha pop cld dec jbe lock inc fs add add adc jecxz lret jge add push pop out cs jnp mov push pop pop adc loope push fs push movsl jmp aaa add pop and movsb je push sub lods add cwtl sub popa or or arpl mov pushf cli shll jnp test lods movsb addl out adc out jne and pushl push push mov push mov pop xor or es cld adc mov and push arpl push inc add jmp std pop stos roll das sbb and cmp sbb jge movaps andb cwtl (bad) loopne mov (bad) aam pushf jne repz push and lea mov xchg xor ljmp and dec add inc cs shll adc jo test (bad) mov test jbe lea int push fidivl push adc add int3 mov (bad) pusha scas test xor rorb adc jl mov (bad) ds (bad) cli arpl testl pusha mov pop mov add xor sbb test stos adc in bound pop and mov mov les incl sbb sbb sub push adc ljmp (bad) idiv rcrl or gs mov mov leave pop sbb pop jb xor cld adc mov aad jecxz push jns adc push dec test and mov add add cmp xchg cmp xor mov in mov xor mov dec inc insb insb mov iret xchg out xchg add add add dec sub mov xchg sbb sub mov pop adc in lret inc sbb lock jg xor and notb sti imul fstpt outsl push imul ficom lds arpl negb adc sbb leave pushl adc bound pop pop inc cmp rclb inc push push adc fist sub mov xor mov xor adc push inc gs test dec and inc add pop cmpsl arpl mov cmc mov push and pop or sbbl push and enter sub enter xor addr16 orl cmp insl or inc pop dec and push orl pop pop pusha fs enter jo enter js (bad) mov mov andb or mov cs pushf mov movsb test add add xor pop add or and lods adc mov das mov gs jle add fldcw adc mov in sbb sbb pop cs enter inc xchg and pop adc scas aas (bad) cmp sbb cmp xchg inc dec jne test aaa out je mov mov or xchg test sbb jb add sub or pop bts jmp jbe jo adc call or mov jae add pop adc les pop push jg sub pop adc outsb xchg adc adc pop xor aas jge (bad) cmp iret aad int3 push jmp test cmp or dec mov jne mov mov inc inc rcrl sbb adc or dec clc mov cmp out mov jne (bad) push stos jge push mov pop add lcall (bad) fbld fdivr mov clc or mov inc (bad) stc (bad) add gs pop sub push enter (bad) pop sub or sub jg xchg xor insl add adc mov or lds mov dec int3 das loopne and fadds aam sub cs push push adcl ds je push adc adc add aam or inc add sub icebp cmp pop cmp inc fwait jle cmp push pop ss lret test add es sub cmp or adc mov ret in xchg test inc (bad) jnp push (bad) fsubs or pop cwtl andl push rorl test lods jg int3 add push or sbb es imul dec aam adc and loopne add xchg jne inc and leave jo xor pushf mov push jmp test cltd mov sahf (bad) adc rclb (bad) aas mov (bad) jg mov add sbb or bound xchg insl mov push scas scas adc testb mov popf std jle or pop and lret add adc adc stos ljmp mov inc adc dec push xor int3 or dec cltd (bad) mov ljmp mov adc sub adc jo stc inc adc jns pushf ror inc mov rorb add leave (bad) cs rclb dec sbb leave sbb mov icebp adc pop lock rolb add nop data16 out lcall pop adc jo add jle cmp xorb inc orl orl mov jne imul or test add mov lcall jmp or stc sahf mov jb orl pop jmp sub cmp mov es add inc les jne fadds xor mov add lods adcb movsl pop sbb jle stc add fsubs ret push mov sarb sub mov test hlt mov test jne (bad) adcl and xor mov adc add ds into out and add mov mov add jne sbb cld cmp jnp lods push adc sbb clc dec mov add in repz and add sbb out add packssdw leave std adc add sbb or adc add or fldt fdivs mov add fdivl out mov push sub (bad) xchg and cmpl add push inc sbb shlb mov pop and xor xorl dec testb cmp test push add (bad) out and adc scas (bad) add mov push or lock ret insb ja adc mov ret inc adc dec mov push sub mov add dec mov jo push adc dec jl lds inc mov xor fiadd mov fisttpl sbbb sbb movq push cmpl bound cmp jne add add hlt ds or aam mov inc jl sbb aaa pop pop pop pop pop adc adc subl imul mov add test xchg popf rolb and popa sub or pop add add icebp mov jmp cld lcall loope fwait and mov inc pop sub ret mull loope add sub jo sub cmpsb and xchg and shr rcr or jne idiv divl cmp out jb cmp sub jge or cmp jbe dec sub sbb push mov sbb and outsl mov ret btc add lcall mull and cmpsb push or loope shll adc hlt pop adc push shr mov scas jne jmp add push pop test or push add sub fwait mov out hlt movsl sbb out int mov add push icebp mulb ret mov mov mov add mov mov subl aas test inc je xchg pusha mov insl adc mov and inc (bad) out push add movl add imull jne adc (bad) sahf push jne dec nop test and (bad) sti inc rorb sub ljmp lea pop cmp xor js cmp adc and mov in jo mov adc inc and test inc bound push sbb int lret iret or test mov movsbl xor mov adc mov andb mov jmp push ja sbb add outsb je cmp jae mov dec je add push add sub sbb xor das add pop rolb imul ja fldt test mov fadds xorl lds loop pop addb cld jbe popf ret imul pushf and daa sub popa cld decl adc idivb and add xchg mov nop adc int inc add popa mov inc jmp and fldcw xorl ds popa gs push enter pop push cmp jne add jns mov inc mov mov xchg es insb je mov and cmp jb cmp ja add cmp or (bad) cmp es adc or mov jb idiv rcrl outsl and add aas shr adc test test jp push cmpsl cltd test pop je jo dec mov test outsl insl dec fdivr ret shl push or test pop nop divl lret jne cmc lea adc xor inc push ljmp js paddq or jl jne fcmovnu inc cld pop fldt mov shl fwait mov cmp or adc faddl aam xchg sub faddl aaa push std cld jmp or inc cmp loopne sbb mov mov xor pop inc xor mov es test xor xchg fiaddl push mov sub sub mov jae or gs jle or lret (bad) sbb pop test imul ja dec pop jl pop pop pop sbb add test cmp lods mov or dec fnsave mov push imul dec incl std cmp push mov mov loopne stos ja insl mov add orl mov jle imul adc pop push shrb mov xor sbb int3 add sbb add or add push add inc mov adcl mov cltd fs pop loopne aad mov test mov lahf mov xor ret bound cmp pushf insl cmpb (bad) shlb loopne mov ss xchg inc and xor xor mov pop pop (bad) test add repz call mov dec mov mov das cmp adc add mov cld adc dec loopne sbb push in xchg push sbb and lcall dec popf into cmp mov mov test jno sub inc ret cmp push cmp rclb jmp aam nop addb add mov loope sub and dec mov inc push iret inc push in cmpsb sub xor lods imul hlt xor in mov mov mov stos fwait loopne add scas inc dec test dec mov fcom into addb aam ret push mov push aam dec lret ret pop (bad) xor mov mov add pop sahf push add cld adc (bad) lret mov inc or je sbb inc and mov sub jmp jmp fiadd adc fndisi(8087 sbb or inc inc sbb imul pushf ret incb jne mov add clc push or pop jecxz xor lods mov inc int3 arpl imul and (bad) fadds jb pusha ja mov jmp xchg push adc mov jo dec sarl or fucomip jge cmp jle and decl fcoms jge lds add mov cmp (bad) insl mov add jbe inc cmpsl sbb pop fmull pop mov push data16 push xchg xorl pusha jg (bad) pop ret sbb sbb cmp or jge and and xor lea jne adc mov mov cmp bound pushf js icebp pop jmp pop sub jns push xlat adc call rol outsb mov push hlt fiaddl push mov popa insb stos add (bad) or arpl and addl push outsl pop mov and dec pop or push dec dec clc adc (bad) pop mov loopne movsl pop ljmp jo or add out and add or xchg fisub lahf fcmovnb or add shld shl xchg loope sbb and shl aaa pop cmp (bad) mov cmpl pusha inc lcall in push xchg inc or or sub into mov call dec push lea outsb test sub lds or je in add pop xchg icebp push or adc push push jle shll je subb pop idiv aaa sub and sub and or fstpt add inc mov and addb js sub nop xor pop loop stc push in out adc xchg out hlt movsl add mov daa push add xlat push mov (bad) push sbb fstpt lret icebp ljmp jae sbbl add rolb inc fstl (bad) jbe push nop lods xadd cmp jb jb outsl or pop mulb mov lea sbb rcr mov cmc aam pop loopne jle add push imul push test test push stos in inc inc insl push ret lds addb push inc jne add sahf add mov test bound cmp mov xor or sub sbb push jl bnd mov add out lret ss (bad) or add pop sbb sbb pop or aas adc mov mov cmp jle loop add bound jno add leave cmp add sbb and inc sub xor adcl mov mov shlb jne (bad) sub or movl or mov cmp adc cmp je gs loopne jne cmp je dec aaa and pop aam jp in push popf rorl nop test mov andb push (bad) std mov xorl push pusha xlat cmp inc sbb pop (bad) mov rolb je mov dec add add mov cld (bad) or sbb jg jne mov popa ret out add mov fistp mov lock cmc js mov outsl xlat xlat lock cld ljmp or and mov adc sub jo jmp jno or jg mov fmuls addb ret sub je test push push cs and testb incb add inc pop in jecxz pop add and mov outsl inc dec dec inc or loopne cmp cmp mov adc (bad) mov add inc mov cwtl out jge lock cmpl jae fidiv and in push adc xor add cmp mov inc dec (bad) cs or xor sub inc push mov pop xor push into push mov inc cmp rcrl js pop add into mov cld add inc ror xchg addr16 jne sub add dec sub jo sbb (bad) cmp cmpl adc and bound data16 and adc dec test call and mov and push std into mov cld jno outsl and and inc cmp xchg shl sbb out and ret add and lds push cmpsb mov mov sar jne bound aas add ss fnstcw out mov inc mov add jo jle loop add push (bad) insl loope insb jno push push jg sbb test push js mov and jmp loopne test into roll jl fcomps ss btr jl loope enter jg lds adc xor sahf add pop push cmp jb mov lock out cmp jge cs aad jnp in int3 add mov sbb and jno repz data16 sbb inc xchg mov mov outsl add adc lret sub imul imul jb loope xchg mov pushf xchg (bad) outsb jnp out xchg adc cmpl dec dec pop pop adc cmp jae sub push adc insl jg orl cmpsb dec rol push push or add in js popf popa sbb mov inc mov jge cmpsl pop pop push dec adc mov xchg sar jb pop fcmovnbe jmp rcrb cmpl cmp loopne mov push pop sbb push pop test sbbl jno cmp nop adc loope and fwait adc fwait push clc call pop lods cmp imul or dec jno adc add mov test sub jo inc pop sbb inc push repnz ljmp scas pushl test mov push movsb imul sub loope mov (bad) in stc jp sub roll inc jle inc adc pop mov mov stos and rcll sub push add sub les push pop jmp (bad) or pushf cmp (bad) cmp popa dec fiaddl fsubr and jmp and mov sub aaa sbb adc in pop push rcrl (bad) mov push jno inc jge fmuls add imul ljmp xorl dec or sahf jno fistpl dec adc push repz pusha adc jl dec and movsl mov push inc or ja lea jge sbb inc mov fs cwtl rclb pop sub jo,pt aas arpl sarb subb inc mov push adc roll sub aaa adc push in cmc popa jno shlb inc pop mov scas dec or jnp inc rolb out sub iret outsb hlt sbb sbb es iret add movb adc aas or inc mov pop je cs pusha adc push xor std push dec loopne push hlt sti mov mov inc xor aas push xchg and test push loope and cmpl push cmp jl iret jg inc outsb addb dec hlt add testb push cmpb sub inc hlt pop pusha mov inc or push subl dec or nop (bad) pop jb add pop adc loope jmp mov (bad) outsl add es ds enter mov mov jmp add repnz dec adc mov adc daa adc add jmp shrb push and or mov bound push (bad) sub pop mov xchg mov imul pop or sub pop mov ret or inc add jp test gs fcomps icebp pop jle inc dec add adc decb mov mov ret adc test add cwtl jle aaa int3 or cli mov pushf dec test add add roll xor rorb leave cmp xchg and pop add add (bad) cmp fsub jae push repz jg cmc cmp jg inc push inc xor jg xchg add jle ror and clc sbb jbe and mov push hlt mov xchg jbe mov push and jg or lcall and (bad) hlt xorl leave sbb jns or or ja add enter sub add arpl (bad) cmc sbb mov and dec (bad) and adc ret push pushf dec add or adc push push imulb and sbb push movsl xor sbb add add add mov gs rcrl test clc push aam xor les test ljmp jp adc push push sub loope inc mov mov mov jg (bad) call cmp je cmp and mov push adc and mov testb lcall sbb in scas jne outsb (bad) shlb jbe push imul add pop push je mov test lea je sub pop adc daa in loop or push inc (bad) je fs xor sbb notl shr jmp frstor push in add es sub call push sub pop push xor insl mov push mov pop adc (bad) int cs lods push mov mov add push adc and sub adc mov adc es push inc xchg add ret push add loope dec cld add sbb jle out outsl jge adc popa lea adc cmp sub out sub (bad) mov jnp leave sub test mov and xor cwtl lock mov lea ja daa xchg mov push jnp mov int3 ljmp sub cwtl mov xchg dec mov mov enter pop rol bound shrb sbb mov xchg insl inc xchg cmp or dec imul mov sub js fcoms insb in mulb push cmp fsubrl mov cld in mov or inc loopne jbe leave sahf mov fildll cmp mov xchg pop aam inc sbb mov fist les pop xchg rolb add jb add adc and pop sbb or add lea dec in add arpl ret push test (bad) and mov mov push jno adc pop ret in xor push add or in nop push add mov mov lret adc sbb add push add cmp and xor or or adc shlb sbb mov and pop cmp pop bound jo jmp out push cmp cmp mov adcb test fsts xor ss pusha out movb sub mov cmp add xchg (bad) cmp cmp mov pop mov push test dec and xor or add mov lods xchg cmp cmp or int out movl inc cs inc lock sahf out add xor mov (bad) or add imul (bad) pop jmp in addl adc add push and jo jnp xchg sbb test std mov cmp mov adc inc negb sti add aas das cmp mov or add or sbb or adc xor (bad) mov cwtl cmp or add sub jge or or cmp out and jle movl add sub push mov in and dec xchg js push inc adc or pop jns and sub and cwtl xchg or jo xchg ss jle inc mov xchg dec mov xchg sti jle add add or push shlb xchg or rclb insb xchg fildll repnz add mov cli cmp and cmp scas test shrb lods xchg jnp int3 xor dec mov jo push push insb or push movsb mov adc mov mov adc loope popa (bad) push (bad) dec add add lcall cwtl add xchg xor mov iret or xor rorl lcall outsb js int imul dec (bad) xor xchg stos rcl push dec shr imulb mov pushf inc xchg or or sub add test (bad) dec inc xlat in (bad) dec inc dec aaa cmp mov jb imul jg ljmp inc popa push or scas int adc loop and imulb lret lfs add das inc (bad) (bad) adc mov sbbl scas cmp outsl pushl add insb popa je and add inc outsl jo jb addr16 outsl (bad) cmp and popa outsb sub and loop std popa imul jg add or scas or jo or or push stc rorl add add add add popa mov mov or push or add or sahf scas int add adc test lods jmp adc adc add add or sub or mov add sub add adc and xchg and add xchg add arpl and push inc push add and and or test enter std jmp outsl jnp adc pop or or or cmpsb imul lcall sbb pop imul imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul rcrl adc add (bad) xor push rcl xor mov dec (bad) xor jae repz xor rorl or xor dec lret lret sub stos xor (bad) xor imul (bad) xor rcrl sbb xor pop fcmovnu cmp mov mov (bad) xor roll pop xchg dec inc mov dec (bad) xor addr16 (bad) xor rcll pop xchg xchg push dec (bad) xor push xlat xlat aaa aaa mov dec (bad) xor ja div (bad) xor rorl jg xor dec iret iret das das scas xor (bad) xor outsl outsl out out (bad) xor rcrl pop lahf lahf pop dec (bad) xor pop (bad) aas aas mov mov imul cmpsb imul imul cmpsb imul imul inc addl cmpsb imul inc add ja add addl add cmpsb imul cmpsb imul negl or dec rcll or pop pop sti lods mov add add nop cmpsb pop or or sbb xchg mov push mov adc adc sbb sbb fs sbb test sub sbb inc test sbb ret popa pop icebp fnsave pop adc adc xor or adc inc xor push pop sbb xchg or sbb pop sbb sbb mov pop mov cmpsl or jnp adc pop cmp dec sub xor repz sbb add mov ret loopne jae roll push imul pop roll insb xor dec sarb add outsb sub popa jb and insb gs wbinvd adc push test sarl adc pop sbb and sbb shrl xor stos outsb xor arpl jae imul jp jae add into popa mov mov and add paddusw aam or xor inc popa add aas add add add add imul add push fwait xchg add pusha pop mov loop fiadd add jecxz (bad) jg sub push outsb imul outsb and arpl je incl fcmovnu outsl outsb daa cs imul push pushl lea dec jb dec inc push dec inc dec xor cs dec fistpll mov pop inc insb jae jb gs push clc orb jne inc inc insb insb outsl (bad) in mov jb js je jb gs es je insl jae cmp xchg insb adc push mov lods stos movsb lgs add pop push lret sbb and and es sub sub sub cs xor (bad) (bad) pushl xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push rorl dec or pop pop pop pop pop pop pusha popa bound adc clc (bad) mov insl add jb je jbe js jp jl jle add fwait jb fsubrl dec loopne fwait jge push sub push push adc pop add (bad) jmp dec inc push pop dec dec mov adc xor jo insb imul imul popa jae insl popa mov je pop sub (bad) and and pop push push inc and bound jns pop xor je jns or mov (bad) pop inc sbb and je imul pusha pop daa pop jae push sbb insl and insl fs insl pop ss insl and lahf xor adc jne dec fmull pop mov mov imul loopne bound jne dec and jbe mov paddq imul or fs cmp bound in add mov outsl cmp jae inc jae lahf xchg imul mov fcmovnu lods ret outsl pop push insb mov (bad) std insb popa outsb xchg sub or in das daa sub arpl sahf sub or mov cmpsl popa xchg outsb push inc pop in insb xlat sbb outsl jb inc dec ljmp (bad) stc data16 divl add ret (bad) add push cs adc es subl insl ret push push outsl or cmp setnp jnp xor lahf pusha fs (bad) cli into insb gs (bad) int or jecxz nop lock ja outsl mov or in push fs mov sti or jo std jbe xorb in mov mov (bad) mov popa pop pop sub das and imul push fsub pop or shlb add xchg sub or andl movsb popf and insl push push fistpl jne mov xor rolb cs fadds jno jae xor (bad) hlt sub enter jo jge je out nop ds ficompl inc ja repnz nop pop and xor mov mov xchg gs sub xchg addr16 jae imul mov fs fimull mov js roll mov sub imul outsl fnsave imul sub jo scas loopne addr16 and jne mov ret ds xor and into cmp dec adc jb mov mov jae jo inc outsl cmp jne add mov lock xor test cltd fs add and add test addl add (bad) add nop add cmp add (bad) and push add add test add add xchg sub xor sub incl adc adc add add xchg mov add adc decl jo adc lods addb xchg mov (bad) nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test (bad) (bad) ljmp scas scas mov mov mov mov mov mov ret (bad) enter dec lret int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call jmp out out lock repnz cmc div clc stc cli sti cld std (bad) call push push stos lock xchg and nop stos adc xorb mov add dec cmp test add add or mov fnstsw add das das or dec sub pop fstps add jbe xchg loopne xor jno mov push in push imul dec ja pop mov lds pop pop inc out imul adc imul dec sbb fidivr cmp inc inc mov fsubrp aaa jns aas cmp and fsubs popa inc inc pop push fistpl lds movsl adc push addr16 imul or fdivs jne inc mov aaa das daa and push mov fwait cmpsl add bound mov andb inc insb in imulb and cmc sarl mov inc pop mov push pop inc fisub mov fildl and adc nop mov adcl cmp pusha mov andb sbb (bad) sub pusha insl xchg jae pop add ja cwtl inc fmuls or dec jo and je jb fsubs bound dec fs push sub jns mov mov in push mov dec inc and pop adc sbb mov (bad) rclb and fs ret aaa dec xchg stos clc sbb dec add pop sub pop imul sbb push jg push jae testl xchg ja pop (bad) dec xchg mov jbe ja rsqrtps jnp dec add shrb (bad) jns add fs xchg adc inc ret xlat gs test and imul add xchg cmp and add insb xor jb dec adc arpl add mov jg fwait mov or sub fsubs outsl inc sbb (bad) fsts or mov add cmp add jmp add sub sahf imul xor jle out fldt add xor ds hlt dec xlat mov add sub lods jmp sbb sub sub fiadd cmpsl cmpsl and jbe jmp cmp ds push das inc lret daa pop pop shrb pop loope push or sti je adc notb jo ss fptan fisubrl or adc or and pop into nop cli loopne ds ja sub imul cmpsb imul jne test mov ret lcall jl je cmpsb jmp jo insb add lcall dec dec inc imul negl dec add xor (bad) xor adc add lcall hlt lock imul imul cmpsb imul adc mov lods xor (bad) xor insb dec and (bad) xor fnop les in fdivrl mov xchg js xor ret jae cwtl je or clc aaa fadd push pop xor hlt inc gs push outsl mov lock outsb pop push cmpsl jb pop xchg test dec lods jae push insb call arpl push imul jo cmovbe rorl outsl js push inc push lcall dec cwtl xor add adc lods mov cs (bad) push sbb and xor loope inc inc dec push pop add into jbe cli outsl arpl push sub add pop (bad) incl rcll push adc cwtl sbb add adc fnstsw dec add push add jmp inc cmovb popf push arpl adc jns mov insl jne scas pop imul adc jne (bad) add rcpps sub dec pushf xchg mov jbe insb adc jmp inc xor or call outsl insb jmp (bad) data16 mov bound mov adc push dec jnp jns mov scas sbb fs add pop pop outsl jb lret sahf jmp gs out clc add pop sub or jo loope lods sbb xchg das or xlat inc add pop into push sub scas pop ret xor push mov insl add mull inc and cmp dec add sahf jmp out pop ja xchg daa dec and push in scas arpl outsl add adc mov outsl daa jae (bad) push adc sbb xor jne inc fsubrs outsl add cmpsl jo outsl (bad) sub mov jb ja jae fnstenv rcll sbb inc addr16 insb scas sbb pop sub popa fwait cmove and add jecxz mov push clc faddl inc and xorl jo and lea push (bad) dec (bad) fisttp add adc adc pop inc cmp shll aaa jo sarb or mov sahf fisttpl or inc xlat je xor inc and sub pop flds sbb in scas jmp xor xor ss xor or xor add sbb push popa insb (bad) das jne xchg pop or jae js movsb out roll inc push fldt sbb addr16 xchg scas and mov or daa ja pop sti push outsb insb mov sub sub jne add adc nop jge clc mov lcall nop or and push push push add add pop jecxz jl call dec and out sbb sub mov test dec ja out push add or or sbb add notl xchg and (bad) lret imul jo fadd xchg aas adc push push fsubrs add and xchg lods push push sub cmp xor leave ljmp add or insb ret or lea insb mov iret and add push add push leave inc add mov sub sarb fildll imul ret add (bad) xchg push jns pop shll (bad) or dec divl pop or mov inc and jne inc dec pop popa cmp pop je icebp insb add sbb jne fcoml adc pop xlat mov inc sbb sub push and inc jecxz fild sbb popa lds jmp dec jae das inc pop push xor inc (bad) insb fnstenv push sub mov mov js pop (bad) ja cmp pop imul test pop cmpsl mov icebp pusha xchg fwait popa lods mov mov pop inc adc popa adc imul push inc ljmp std outsb lods imul add inc lea outsl mov xor sub scas inc cmp mov sbb movsl imul das xchg test inc jae daa mov xchg pop adc xor adc inc insl mov aas insl loope inc nop mov sti inc popa and and insl pop lea pop inc bound sub xlat das jns push xor fdivl xchg insb std pop dec pop pusha rcrl jbe test in push pop test add ret xchg cmp das dec adc inc mov jmp sub inc ret sub xor push jmp jo or lret bound nop addr16 jne or pop add add dec fadds sub xchg or add adc and inc lods mov or add xchg mov or popa test notl dec loope mov xchg (bad) dec movsb add xchg roll and out in or addr16 add andl adc ror das cmpl sub xor gs in outsl popa inc sbb gs jbe xchg dec xchg dec stos jns fimul sub jae or adc ret pop (bad) (bad) pushl xor cmp cmp aaa sub sub (bad) std (bad) cmp xor bound data16 outsl cmp inc inc xor and fcmovnu (bad) inc inc inc daa aaa xor ss xor xor inc aaa aaa cmp (bad) jb fs outsb loopne aaa test lds add loope inc inc jl imul inc lds je fisttpl push mov je dec shrb test aaa cmp adc adc and pop (bad) jge and or mov push insl lea fadds inc rcll push (bad) mov mov mov outsb arpl pop je arpl add or dec jb dec orb mov test and inc inc and pop or inc add (bad) jae (bad) push push dec and mov dec xor aas add dec jge and add cmp fbld sub jge mov aaa outsl xor sbbl out jnp mov popa add or jmp in or pop pop jae cli push (bad) negl mov test popa add mov arpl push (bad) rolb mov and cmp xchg imul iret xor daa add xor orl xchg into adc (bad) add in in inc jecxz std enter xchg (bad) incl sub push push inc push xchg jmp test aas mov push sbb jp cmp jbe pop out notb sub bound push sbb inc outsl je jo bound add mov ret inc push mov pmuludq pop fsubs xor and sbb lock jae adc mov add movsb sbb add dec shlb sti add daa mov xor fdiv inc scas fwait jecxz push mov pusha xor xor jg or jg xchg in sbb and dec adc dec pop add or and cld mov sbbl pop psubb add push fadds sbb lahf or andl ret and pop jg push leave test and mov jnp or daa fldenv pop fdivrs inc pop lds xchg mov pop int3 das mov fxch cmp sbb test pop popa out inc sbb ja sbb inc pop cmpsl inc pop fldln2 sbbb sbb aas add pop bound sub inc inc bound fs sbb sub add adc or and negl jmp inc arpl sbb stos and sbb loop cmc lret or das sbb or add nop roll pop aas jo inc sub pop orb enter imul jg orl add ja mov out sub nop mov add sbb call or pop jl fadd inc pop add and inc mov aas negl or enter leave dec pop leave lret jmp sub and ret aas inc arpl sbbb je cmpxchg test xor int3 mov fsubrl repnz adc xor cs add mov nop mov lds sub (bad) fnop leave add dec out sbb mov xchg dec data16 nop push je jbe adc xor inc inc enter add mov or cmp lret stos and sub fsubs nop pop cwtl stos mov test inc mov outsl nop sub outsl and in hlt in push ss or fucomi xor mov xor xor push sub xchg addr16 sbb pusha xchg sti push mov (bad) (bad) jg xor mov inc cmpsb xchg daa or add cmp cmp dec insb sarb xchg jg mov pop dec mov sub jbe mov xor inc outsl lods adc mov in and in out (bad) cld movl mov or aaa outsl mov and mov mov rcrb pop xacquire pop push dec js out fstpt push fldcw inc add stos stos fs sbb xor add sbb outsb gs jno shll sbb add (bad) (bad) mov or pop or fs (bad) lods inc mov jbe inc ja push rorl and add push jno xchg and aad insl gs outsl or xchg in dec adc bound insb pop add in outsb sbb es (bad) je in inc shrl outsb jns sub imul std jns bound jae push outsl jb bound das jae add sbb pusha and mov fucomp mov pusha add xor testb popa push out mov (bad) pop jbe mov mull data16 add pop jo aaa imul xor cltd mov das xor sub outsb sqrtps sub mov ret push add mov sbb push add cwtl pop or jmp adc pop out sub cwtl add mov add insb das push jne xlat lea pusha inc add or pop adc push pop roll lcall pop pusha pop xlat popf xor push push pop or orl pop mov enter inc pop loopne fsubs aas push pop pop pop sbb lds fimull push jne or cmp rolb push pusha orl pop sub orl mov or mov fsubs lock pop push or adc push pop jecxz sub fsubs pop je xor enter orl pop rorl ss pop test sbb pop call ret pusha addl pop cwtl xchg push sbb pop jl cmp fcomps insb mov lahf pop pop insb pop sub fs push mov mov push sbb jg pop inc push sbb adc mov and jb xor les insb mov decl pop bound and fs push movsb lar (bad) mov push sbb in pop pop roll insb pop pop sbb xchg incl sbb pop jp cmp aam insb mov call pop push sub jbe roll setg or add ss pop push push (bad) mov roll pushl pop jbe ss roll insb int3 decl pop popw xchg insb mov pop lods pandn pop inc pop in jg fsubs pop pop pop push pop pushf (bad) fsubs or ds pusha orl outsb pop orl femms pop mov pop cld decl xor push pop adc cmp pusha orl pushl fsubs popa pop and mov or pop fcoms pop sbb or (bad) jns cmp sar imul pusha pop mov pop mov imul outsl mov pop adc shlb pop jne xor fsubs gs and mov or pop inc pop sbb ljmp sbb pop cmp pop (bad) insl pop sbb pop mov shlb pop dec pop cli decl test addr16 ret call pop xor (bad) (bad) fsubs adc roll sub addl pop mov xchg pop insb mov imul sbb ljmp sub fsubs push mov lahf mov ss ss pop idiv push pop orl pop aaa pusha inc shlb into jmp push or fsubs pop scas pandn pop inc pop out decl insb mov pop pop pop sahf call pop aas pop fdivrp mov push sbb das pop mov pop lahf popl dec pop (bad) push xor rorl leave push xor inc icebp leave push xor inc leave cltd fnstcw stc lds in xor inc leave mov int xchg or lods in and fstl or std inc leave push xor mov and leave push mov xchg or inc lret stos inc leave push xor (bad) xchg or mov push (bad) cmpsl xchg or inc out inc leave push xor mov or inc and xor inc fistpll (bad) jg lahf push pop out adc pop movups add mov add jnp cmp bound add lahf add mov pop rorb xor pusha addr16 add sbb xchg cmp aas add add push cmp xor or out dec inc push mov jno and mov xchg aad pop jne add test bound fs dec xchg lds inc jb inc je and lds leave adc je mov or fbstp cmp add and icebp js sbb pop incl dec mov int add decl add aas loop push aaa jg add lret jbe xlat mov or aas inc push gs mov test gs inc pop add push je sub out xor adc pop add add mov push lds add push or arpl out jp push rorl movsb xchg jns aas jns mov pop cmpsb fild mov cld test aas inc jle test shll fldenv cmp fimul mov iret mov sti lods mov pop pop jle or outsl jmp mov pop pop fisubrl xor sahf pop sbbb fsubp mov jle sub add inc stos adc pop test mov in add add mov cmp sub test inc das pop stos or ret ja loop test pop fistpl add loop pop add mov mov push fs pop or or testb push adc insb adc or push sbb xor sbb xor push sbb pop push pop pop jnp rorl jo fsubs xlat jb push das xorb pop (bad) pop sub push test add sahf cmpxchg push sbb pop inc push sbb into pop xlat dec dec inc aad pop invd lahf (bad) std or mov cld mov pop xchg push test pop or adc mov jnp faddl test mov pop pop sbb in mov sti sti ret les push mov jae pop (bad) pop faddl adc cmp inc jmp pop jns ret imul cld cmp inc test xchg pop orl or sbb add nop add nop xchg xchg aas lock sbb mov orb xchg add fmuls insb xor pop mov ret add add add jbe add sub cmp push add sub ja (bad) xor push add dec inc inc xor (bad) xor xor sbb dec out rorl cld rcr hlt lock (bad) xor call xor rcr aam int3 les dec mov add nop test dec (bad) xor pusha pop push cmp or cmp and sub mov add and pop jae cs xchg add daa cmc lock fsts push cmpsl pop mov aas sbb inc mov inc and or stos add adc or das mov je inc cwtl aam adc xor dec sbb fldt xor cmpsl ja fstl daa daa roll repnz cmpsb jmp das add inc push inc mov das lock (bad) ljmp xor je adc je cmp das xor xor cs cld fild xor js jb jo,pn push adc mov inc repz sti scas ret push dec insb jmp dec push push push inc push add pop sub dec add sub dec ss stos inc mov outsb outsb dec inc sub gs and or ds add outsl jp popa das xor jg sub xor and dec imul cmp or mov inc push jb cmp mov push outsl das sbb aas xor xor dec jne (bad) fnstsw push or and (bad) ja push xchg das xor sub jo sub jp push sub jae add xor push out je insl insb sub sub stos cmovnp sub out mov pshufw push cmp insl insl adc dec fdivs sub inc push sti (bad) mov sub sub je or fcmovu loope aaa sub aaa inc push add inc cmp mov push mov ja leave sbb dec or jo mov ljmp pop cmp rorb lcall popa loope aaa rclb mov inc fildll fistpl cmpsb jae mov lock add call dec push xchg inc clc fimull push adc aam sarl sbb xlat push add and (bad) mov pop push ss adc jecxz inc (bad) ret and add dec xor add xor loope test dec dec movaps (bad) push test popa cmpsl dec mov sbb jbe lods inc pop imul imul sbbb or bound adc xlat and mov jb jae imul gs rolb add inc xor add rorl je inc mov inc pop inc (bad) xor add mov add js in push pop push shlb sarl jp cli push insl int (bad) (bad) (bad) ljmp fisubl lcall ficompl ficomp out mov test (bad) aaa sub jmp and ds loop enter fs (bad) (bad) ljmp loop add test jo pop jne cmp pop jge fsubrs jl sti popf out ljmp (bad) cld into ja repz out adcl test and jne les jnp das cld (bad) (bad) cmp lret (bad) or out sub movsl push and loop (bad) (bad) jmp arpl and popf or jns jmp mov xor imul mov jmp inc dec scas std aam cwtl sub ss mov out ss jecxz insl aaa insb cmp (bad) std jbe push hlt add push js rorl aam push mov (bad) leave cmp push mov inc sbb sbb mov mov cwtl paddb adcb (bad) (bad) call cmc dec mov inc pop xor pop adc int push mov dec xchg push (bad) incl jns test jae cmp les out push test (bad) (bad) call pop xchg out cmp nop jge (bad) nop test jg fistl xchg sbb (bad) incl stc inc stos repz fdivp and push insb push insl mov pusha sarl popf (bad) pushl and mov mov fcompl ret inc inc repnz lods clc (bad) (bad) jmp sub mov xchg in ss sub addl push out mov neg lods and lock adc (bad) (bad) mov iret dec pop loope mov push (bad) js mov mov adc (bad) (bad) (bad) (bad) cli mov js mov lock mov (bad) clc or push adc dec test hlt pop loope jmp std (bad) decl aad or jecxz divl rcl gs push inc int sbb xchg lcall add cmp repnz fistl fldcw cmp mov and leave cmp out in jl (bad) (bad) (bad) (bad) ljmp orl dec repnz scas xchg loopne,pt pop sbb aaa lock outsb xchg daa loopne sar mov mov es sub (bad) push push outsl mov fsubr stc (bad) (bad) (bad) decl ja jg (bad) aam adc add fild imul jne xchg sub xor ret ja insl fwait cmpsl ret push jle mull or (bad) (bad) (bad) call sbbl or inc mov xchg xchg add mov pop (bad) or pushl jns enter test dec inc sbb or fsts test hlt dec nop sub icebp push (bad) (bad) jmp mov in (bad) jnp enter push xchg sub dec jae into cmpsl adc insl add sub cmp fsubr (bad) (bad) push icebp fsubrl rcl stos xor inc inc mov push sbb push xor mov (bad) (bad) decl popf icebp pop sahf ljmp outsl jecxz test sub cmc movsl sub pop gs insb push (bad) (bad) (bad) pushl jns xor xchg (bad) or jle mov popa add cli and (bad) (bad) (bad) (bad) out inc daa out add mov daa inc icebp xchg in jbe popa dec dec and test xchg (bad) (bad) (bad) cmp ljmp icebp push insb mov test inc loopne jle dec cmpsl movsl mov xchg (bad) lcall dec leave mov in add sub cmp (bad) xchg repnz pushl and dec mov loope dec dec enter sub scas xor movsl inc incl mull xchg lods push in inc cli or lcall loope scas (bad) int3 (bad) sti jg,pn mov mov (bad) (bad) incl aad sub (bad) fs or push call mov roll (bad) (bad) pushl stc mov xchg (bad) enter repnz pushf jl mov leave scas in jb push cmc decl mov adc cmp jnp (bad) (bad) (bad) call hlt sbb push cltd push insl cli cs mov xchg mov fsubl lock ss mov mov in sub mov pusha iret mov pusha mov mov adc push mov xchg pop icebp dec push and add pop or xchg or xor jb negl flds add das xchg jo lahf mov and negb mov and and push and and mov das das jns push pop push and push dec dec push sub xor pop jo mov dec int push and inc gs mov jae ds cmp pop sub or mov out xor xor insl test or jae loop mov push pop sti sub outsl je mov push aaa and or in or cmp arpl jo push adc out pushw subl fwait inc je pop add pop in add add jno stos and in push jecxz insb mov add insl inc fs iret subl insb pop push xchg daa jb jbe cmp mov scas ja pusha frstor adc arpl pop sti sbb insl fldenv add adc add daa outsl jns imul xchg out mov jp arpl inc xor outsb jg add scas scas scas or nop imul jne dec add pop insl push mov inc xchg push push inc push push push xor xchg xchg xor ja push out mov cld (bad) lcall les (bad) hlt push xor xchg fs xor sbb (bad) (bad) (bad) (bad) jmp rclb mov sub mov sbb dec (bad) (bad) (bad) pushl repz test ficompl jmp (bad) mov hlt movl imul hlt (bad) stc (bad) std in leave mov add pop mov psubd add or adc (bad) (bad) (bad) jmp jb addr16 add aam dec std test movsl cli test xor (bad) leave (bad) (bad) (bad) (bad) mov lods jecxz fdivs jne fild or shrl cmp ficom push jmp push popa sarb and mov cltd jo shld incl mov (bad) and or dec push sar push lods cmp jbe jno add aad cmc call decl mov push lret xor mov js or sbb xchg sbb jg ljmp sub insb fs add out push imul insb sbb xor dec (bad) (bad) decl lahf repnz xchg push insb jnp add (bad) hlt or (bad) fnstenv adc (bad) (bad) (bad) ljmp cld fistp ficoml gs aam pop popa mov into mov pop pop sub (bad) mov aam movsl fisttp xchg fsubs sar (bad) (bad) jmp jmp outsb xor mov sarb add in add pop dec or (bad) (bad) ljmp cmp add daa adc or and test cld pop cld jg aam mov push stc ficomp fldcw and mov pop cmp cmp lods insb mov (bad) incl mov add insl ljmp (bad) (bad) (bad) (bad) fildl push fdivl or test fs ds or or push in decl xchg daa scas (bad) (bad) call cmpsb mov pop jge xchg (bad) shlb add inc push imul (bad) (bad) lret mov sbb push imul aam loopne sbb dec pop jp int3 dec ffree (bad) (bad) (bad) (bad) fistpll mov mov aad mov call xchg shll push repnz (bad) (bad) push addr16 cmpsb fldl mov dec ss fisubrl or scas (bad) dec add pusha jp inc (bad) (bad) (bad) inc out pusha fist addr16 mov jns imul andl shrb ss push (bad) (bad) jg xchg mov add mov das es lds or (bad) lcall sub mov cmpsl call ret (bad) mov sahf fldcw ret es pushf (bad) (bad) jmp insl add ss jmp addr16 jb push add (bad) (bad) (bad) call mov jnp sbb xchg or out fdivrl fisttpl aam roll inc loop icebp clc mov push int mov mul ja icebp (bad) (bad) fnop inc mov out jge push dec cmp pop or adc sahf gs scas (bad) clc mov lcall fwait js or call or dec ret cmp cmpsl notl pusha rorb imul jno push scas fcompl fldenv fild (bad) pushl mov fidivr mov jmp repnz (bad) (bad) decl xchg mov cmpsb mov sarb sub push mov jp (bad) (bad) jmp mov sbb xchg sub aaa mov or sbb add sub fwait incl imul push popa mov add (bad) or push xchg or sbb add iret add sbb push flds push xor push inc push xchg mov xchg push push push push leave test stos stos sub push push push xchg mov xchg push push and stos stos fs sbb xor dec inc push mov xchg inc adc dec or inc add xchg xlat or or ss cmp adc inc push adc inc sti push add add and js push inc jne jns push iret fiaddl or mov jp je pop outsl insl and or or insb pop push mov insl insb cmp push imul push outsl cmp jns fstpt imul insl inc inc xchg imul or add jns xchg sub push jmp jns or mulb addl in (bad) jle cmpsl push imul inc push or roll fs in pop fwait sbb push outsl insb jne dec dec add mov sahf fstl jae dec outsl sbb sub inc fcmove sub push inc cmp cmp inc loope vpunpckhwd leave push pop push sub push int sub imul idivb subl imulb fsubs dec push and jae and dec or or xchg aaa outsl sbb mov gs sub sub pop and pop jmp adc call gs jo popa inc jbe push gs mov dec push dec jo aam lcall cmp lock push in dec dec popa mov jbe or imul push (bad) xchg inc cmp xor into fdivs jo push outsb xchg jae outsl je adc enter jbe or enter shl jbe test pop mov or inc inc fs pop fsubs pushf dec (bad) xor xor inc out cmp sbb movsb dec cmp inc push fldenv roll mov loopne or sub dec jg arpl sub push outsb push movsb or push xor or cmpsb subb mov popa push add aas lds push inc mov test jne mov mov pop and mov rcrb outsb addr16 int3 and dec add push pop test insb or push das movsb popa or dec push xor mov loope fsts je cmp inc and dec push pop fildl mov fdivl and outsl js popa push add push adc or cmp inc jae vmovaps aaa dec jbe push add ss add jge fnop xor dec inc movq inc js push ret int3 add xor fdivrs cmc inc sbb add adc inc cmp dec lods sbb popa xor push push loope sbb adc lcall sub push pop insb inc pop sbb mov outsb je dec fs pop ret sub aaa mov (bad) cmp add sbb xchg mov into popa jle and jo mov sbb dec jo push adc inc test (bad) xor lods or add xorl lcall pop sahf or inc or mov adc pop add mov mov push or xchg pop jae push jge adc sub je sub (bad) inc jmp adc testb (bad) jno inc or daa add out add lock mov jb adc inc popa inc insb ret xor push jae adc jecxz dec xchg cltd jb imul hlt imul fildl jne inc (bad) in iret (bad) (bad) dec gs pop int3 lds or sub mov mov aaa sbb mov inc addb (bad) sbb dec pusha and or fldt push jae pop or pop pop imul fs push inc push add cmpl call add push inc ret test adc dec mov lret in ret (bad) sub xor push push push adc jo mov sub jo sub daa lods add push dec xchg push inc jecxz mov pushf jg add add int dec insb gs lds inc sub adc jns push push call xor std outsl jbe sub cmp and jae stos adc inc mov add jbe xchg add push inc dec adc add cli (bad) lret je mov fild (bad) xlat push inc push mov std xchg test push outsl cwtl push or out add and xchg add popa faddl sbb les out dec das jno and rolb daa sbb push bound jb or sti popa jns cmp imul jo xor addr16 and xor or (bad) jo je lcall xor popl gs and xor and and insl je hlt and outsl jmp cs call add outsl adc inc pop xchg insl adc jae or xchg mov mov popf and cmp push push push mov push in xchg mov xchg xor mov sub dec add lods push dec insl mov inc or or or jmp adc and adc mov xchg popf add adc xchg lock add pusha sysret fdivrl out dec sub loopne mov add inc (bad) add dec fildl sub cs outsb popa pop nop add push in jb,pn add sti insl pop test add jnp add stc inc pop daa mov insb pop rorb add jmp sub test sub inc sbb add sarb cli in or add jmp add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add add addb add add add xor add add add sbb add add pop adc add add pusha loopne add xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add add add add add add add mov add add push add add outsb add inc add insb add dec add data16 add xchg add add add add add add add add bound xor add inc add add add outsl add jo popa add jns dec add insl add add add dec add arpl jb outsl add outsl add je and inc add jb jo add add and add inc add insb add inc add jae arpl jb imul imul add add dec add and push add outsb add add jae and inc add outsb add add je and push add imul push add insb add add add add add add add imul push add jb jae imul add add add and xor sub and xor sub and xor add add bound and add dec add je add outsb add insb add popa add add add push add add imul outsl add jae and inc add outsb add add je and push add imul push add insb add add add add dec add add add add popa add add jo jns jb imul je add inc add jo jns jb imul je and sub inc add add add add add add add daa add add add popa add add popa add add popa add imul add add add imul outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add outsl add je add je and dec add and inc add add outsb add add add or add push add outsl add add je dec add insl add add add dec add push add dec add add push add add cmp or add push add outsl add add je push add jb jae imul add add and xor sub and xor sub and xor add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add add mov fs add jno add cld adc add add add add mov add xchg adc add mov adc add scas adc add mov adc add ret adc add iret adc add fistl add out add dec adc add repnz add std adc add or add sbb add sub add cmp add inc push add push push add add add bound add add add insb push add add add jl add add add mov add add add sbb add pushf push add add add mov add add add mov add add push add add add call add add push add add add adc add adc add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add push imul outsl insb xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc push push xor fs insb add arpl xor cs insb add inc dec dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add xor xor fs insb add push inc push dec xor cs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add inc jb gs imul je jo outsb push je jb add add je fs jo gs dec outsb outsw add add dec outsb imul add inc gs outsl fs gs imul js add push jne fs jb popa je add inc gs outsl insl jo je jb bound arpl insl gs add push dec inc gs outsl insb fs popa je push add ja jo imul add je jb gs gs outsl outsb outsb arpl push je je add add push inc jb gs gs outsl jb (bad) (bad) call in push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call addb add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret insl fstpt push lea push mov (bad) or add adc (bad) jne push paddusb push mov pop lods push push xor sub std scas loopne push call push ret dec sub je jg test cld (bad) call or push push cmp push or addr16 dec adcb cmp adc fimul pop mov popa out push push lcall or or mov sti jmp xor mov cmp push mov sti jne mov dec sub outsb outsl pushl jnp sbb sarb je push push aad daa xchg je (bad) mov jmp rcrb jmp sub in je or test cmp jae mov xchg jmp aam inc and add push out (bad) xor adc add neg sbb inc mov test leave or cmp ja jl and xor mov adc rolb std mov std or add mov and (bad) data16 movl and push es mov pop xor mov mov dec mov jge sub pop cli loope pushl sbb aas mov mov outsl fnop std lea mov pop or imul cmp sti in or jae push push jmp gs push mov mov add (bad) notb pop sub lea push cmp fnstsw jne inc mov sahf or mov jmp inc and es out (bad) arpl clc add or mov test cmp lea cmp enter into or and add push mov aas jbe jp pushl mov push pop add inc and xor push in les fucomip insl arpl pop mov add lret (bad) and fmull rorl and xor fwait in jge sub push fadds nop push inc push fldcw int inc fdivrs cmp rol shrl icebp fisttpll cmpl xor push scas mov je ret mov decb (bad) hlt push lea push push push bnd (bad) (bad) out or xchg add push out ficom jns inc addl out pop jg lock leave mov push outsl insb (bad) in inc push add leave adc push or mov test push mov cmpl pop push hlt mov mov or inc adc sbb add xchg ja insl add xor lea mov add xor mov adc xchg fistp lock (bad) xor jg ja mov push sub cmp adc movsl dec in repz xchg cmp in outsl add shufps adc inc lahf imul out push push jns data16 cmp fmull xchg insl mov adc les test pop popf sbb fdivl clc or sbb push sbb insl mov dec test mov jge ja jbe outsl int3 mov lock jae cmp mov fsubr adc pop (bad) or stos sti jb dec enter cmpb sarb xchg inc in jne push adc add or xor sub bound dec or ficompl or push jnp frstor cmp cmpsl and sub pop jmp lea xchg divb ja decl mov cmp jle cmp pop mov inc add inc jb sub jl leave js xchg xchg or nop adc lret mov (bad) xor jge lahf fdivrs lcall mov lret in jg pop jno add add mov mov ret push jmp in mov in (bad) sub or mov mov mov add in mov sub mov imul mov (bad) decb leave mov push xchg cmp pop leave cmp push movb add or aas test mov xchg bound dec mov push enter movsb and inc dec jb and and and mov je mov inc movsl movsb pop push adc test (bad) loope push inc xchg push enter mov (bad) (bad) fstl adc push and repnz imul add add add mov inc add pcmpgtb ret cli cmp cli lods fisubr imul movsl fnsave (bad) or or cmp dec inc or pop jecxz pop jae push fbstp add (bad) notb call push jle or (bad) mov add xlat mov sub ret outsb (bad) bound mov add (bad) cs mov or inc idivb add mov aam cmp jae cmp je popa ljmp cmp jl sub xor (bad) jmp mov or hlt adc lock or sbb cmp push push and cmpsl or mov ret cwtl adc mov fwait imul daa sub or out sarl and clc xchg loop add jg mov push shr push clc ja mov mov nop mov add das cld pop cmp lea cmp or (bad) lea sbb mov sti cmp ljmp pop and dec cmpb rol sti or jle xor push loopne push add dec dec mull sub mov mov adc outsl mov decb mov lea lea cmp js loope cs jns adc lea push orb pop in add pop pop add adc out mov pop push orb imul jle bound inc and in hlt movb pushw pop adcl xor sub rclb test xor xor sbb int pop (bad) mov and push pop sbb cwtl pusha and adc xchg adc mov in mov andl and add or movsl cmp and in push sub or (bad) or cmp or jnp mov sub outsl sbb adc outsb mov inc or insb je inc ja push aas test bound pop popf mov cmp xor rcrb loope decl sbb insl inc mov popf (bad) mov xchg dec sub add mov adcl repz arpl dec je (bad) out mov loopne incb adc add testb enter sbb mov andl mov (bad) testl xor lea aam sbb jle mov xor sbb mov add sbb or mov jl ds ja lret mov or dec mov jecxz (bad) in test scas int3 imul pusha pop fs push push jle lea (bad) cmovb cmp insl or pop push and and jae add mov ja adc les repnz test sub mov shlb xor cmp sbb lret jne add mov sarl mov xchg ja mov je int3 adc ds adcl or out cmpsb xor sbb push and addl push mov push add jnp fmuls mov mov in xchg push iret cmp in add fsubl (bad) es pop push fildl pop jne popw loopne or push xlat mov mov (bad) jb mov ret ja andl and xor imul rcll (bad) pop inc push cmp in mov add fstpl mov pop pop jmp out ja addr16 dec sub sbb loop out pop leave inc icebp dec push jne jge push mov mov add push mov xchg push xor cwtl stos sbb subb or adc xor pop ret adc std mov mov (bad) jmp xor insb push daa pop jmp jo sub cld adc cwtl push pop push push rcll (bad) push mov and cli sbbl cmp enter mul push cmp mov out testb adc sbb enter push mov push cmp dec lock jb imul and pop rorb adc nop andl push clc and cmpsb repz mov pop mov jmp jmp sbb sbb mov mov fadd pop inc lea lock add int3 cmp stos fdivs adc dec (bad) cmp cmp pop out fiaddl cli mov mov pop test mov stc mov push movsl add fmuls mov (bad) in sbb or cmpsb imul pop or or gs sbb popf cvtdq2ps pusha xor inc cmpl or ret inc sbb ret test add cli mov xchg fimull sbb decb hlt inc pop cwtl fstps adc (bad) bound jbe mov adc push repz sbb bound fs push sbb out stc add daa push fnsave sub jmp cwtl fcoms lods or mov test pusha xlat add and xchg fsubs xlat rcll cmp je cvtps2pd movsb out or xor (bad) mov sbbb out and mov popf nop adc push fldcw arpl push pop mov adc mov pop test pop pop push push jbe or xor jmp rol (bad) out sbb push push xor js dec lods mov mov adc (bad) out (bad) or add fcomps and or mov lods les popa sub les push mov cmp cmpsb sub sbb pop fs inc push push mov mov in adc insb pop lahf mov mov push jne mov mov das jecxz inc and and push imul mov sbb cmpl out push clc fucom cmp sbb lods rol inc xor jmp es cmp icebp sti inc lea shr jns mov lods and add scas mov mov cmp xchg pusha sub sub pusha aad daa jb jns sbb pop pop js fsubrl (bad) icebp in fsubrs lret sbb insl fwait clc outsl jne or jne insl ds daa cmp mov push fdivrs clc rol repz push hlt sub sbb mov fstpt cmpb or out inc test je mov outsl adc arpl jne mov scas add pop push int3 icebp inc adc push inc jbe,pn imul xchg pop push movsl inc mov mov jb aas pop jo fistpl adc stos add push inc je push mov inc ret je add lods cmp add or jne add mov addl fbstp movb add mov in cmp je add jbe push mov imul jg jb adc add mov or pusha mov sete add sbb pop push call sti inc nopl rcrl mov inc xchg mov cld stc daa xchg test adc dec mov sti mov cld and pusha inc mov std imul ret jl gs out sti mov and and leave xchg sub push ds fwait jne sub jno jo dec clc inc out in push sbb ss add cld pop stos mov or push dec js and pusha je push inc dec mov adc dec mov ljmp mov mov leave mov push mov bound enter pop xor stos mov inc push inc or cmp pop jmp push aaa inc int test lods js insl mov jg ret push pushf and inc in stc in mov and jae shrb and (bad) mov aam or inc cmp cmc sti add sbb sbb pop (bad) addl push sub pop xchg add lock aaa sbb sub mov movsb xchg sarl pushf sbb call call xchg cwtl add outsb push in inc mov xor add je mov (bad) and (bad) xor out mov shrb or rep cmp mov loop cmp mov mov sub jge add ret data16 js outsb int3 inc and push push imul pusha pop adc jle jmp pop (bad) jle mov testb outsl add orl loop mov aad sub mov out insb sti pushl js std cltd pop idiv push pop add lea cltd or pop (bad) jmp call ficompl pushf aam repnz push lahf push jae fldt or adc fsubl xlat scas shll pop stos sub sbb mov adc pop insl sbb das jmp push or sbb jo mov sub das dec or mov fistl nop or insb jae ja jo mulb or adc pop je and aas jb push lea add dec or jle addb mov aaa inc jmp subb or inc cmp pop inc jmpw jmp adc xor (bad) repnz mov xor jo add addl sti cmp (bad) dec xor mov in inc pop ficompl dec inc push fldenv mov inc add cmp jg loop ffree lgdtl maxps subl add dec daa pop pushf xorps clc idivl or adc cmp push push mov cmpsb push lea mov test mov fstpt pcmpeqb lahf scas lock aas je add jne inc rol or lods mov adc aad dec mov adc and push and scas inc cs jmp inc mov hlt aaa mov bsf jl inc add or xchg pop add xor add mov inc or inc xorl into pop insb mov push cli ret stc (bad) mov mov ss mov (bad) lea fldl idivl jmp test notl pushl loopne or iret and test jne dec cmp out push ret fstpt std jbe mov ja popl mov mov mov cmc mov cmp jne cmp jne jl (bad) cmp jb cmp jbe cmp pop sahf jbe cmp (bad) jbe cmp fild fnop jbe (bad) inc push cwtl xchg adc pop sbb popf lret jno insl pop sbb and push push mov or or pop sbb ret ss pop and sbbl or cmp sbb or jne aam or (bad) pop (bad) mov xchg pop cmp cmp inc lea ja add mov xor or adc mov loopne push pop es adc jne add andl mov add mov ds loopne and out iret push pop lea (bad) or add insl add mov adc shrb jne or insb xchg fs adc adc or adc dec loopne mov nop xchg adc fsubrs and add ficom cmpsb in inc adc fldl lret out sbb or outsl push andb push mov push push ficoml and inc sbb cwtl or xchg mov adc dec and ret add (bad) sub pop push or aam push pop push jl mov sarl sbb lods in dec lea jbe loopne push test insl and je addl scas and push sub nop xchg nop mov push stos clc rcr xchg push mov mov dec and cmc cs sub je mov mov andl dec sub jp push or cmp es adc sub into push in loopne push into xchg into jmp jne (bad) xor and adc lock (bad) xor jmp jo mov sub jp mov sti pop mov pop jle in cltd or jno jge loopne sbb mov sub (bad) lea lock test or push push (bad) pop mov std xchg jle cmp cli sbb pushf push cltd pop idiv test or ss and jle lods jbe inc lea mov loopne jg andl mov sub jge loopne mov cmp jl sbb lret ret outsl pop aas rcll sub (bad) mov mov push punpcklwd push adc scas and faddl roll jns add aas pushf cmp call add sub incl incb adc lock push sub xchg enter lret test in xchg and js push mov gs pop (bad) sbb sbb inc add mov enter imul adc shlb sub sub dec es cwtl and clc or cmp xchg leave cs cmp cs jge inc push ret test cwtl and sub (bad) iret xchg add outsl jno incb pushl call pop test adc mov repnz push hlt mov ja pop mov dec add mov inc rorb push xor ss lret or adc or (bad) cmp int3 add cmp test pop lret test add add sbb enter xor (bad) arpl push pop add sahf fwait jle jecxz bound loopne hlt jg adc cs rolb push lcall fcomp fsts mov cmp and hlt lds enter es mov enter jb repnz mov int3 adc inc dec clc push jge iret push mov push int3 mov iret push popa pop sahf sbb or add sbb nop fisubr nop gs pop les fbstp lock hlt cli rcl mov add cmc sub or or aam pop inc push lock pop xchg push cmovno scas push jmp lea fistl pushf pop cmp adc xchg sub call (bad) jne,pt jmp adc dec xor cmp and xchg mov adc jne fneni(8087 imulb sub je dec je add divb pop inc or sbb hlt or dec roll adcb iret or add push push add mov ret aaa push push outsl pop in inc push (bad) out (bad) pop sub adc push sbb jge push mov cs sbb and and push popf and sahf pusha sarl ret cli jbe pop in and outsb sbb mov std mov das add je cmp jb push sbb and jbe mov mov mulb (bad) rorl sbb or mov in mov push in mov xor or insl dec push sti sbb (bad) fcoms pop pop je push mov pop pop lods lea cli mov mov pop mov xor and in push push hlt dec pop and add pop xor dec cmp mov or push sbb inc dec add cmp cs dec xchg mov add gs add pop mov pop xchg push ljmp mov adc xor add shll push inc mov mov repz mov mov je push push and push dec stos out push mov jnp push push jno and mov aaa inc cmp leave xor push testl (bad) (bad) adc push xchg insl cmp xlat xchg mov xchg adc xor adc es jmp test (bad) xchg and jmp jg adc out pusha xor dec pop dec into sbb ljmp loopne xlat lea mov in imul add fldl add jg (bad) lcall adc push push cmp leave bound aad cmp mov in out inc xchg cmp aam or leave xor pop int3 sub dec push or ficomp test pop sarb mov sti xchg pop adc insb add xor shll inc pop cmp das jo (bad) pop (bad) cmp fldl xchg sub pop pushf gs push mov push xchg or mov lcall lock xchg push mov pop mov sbb or divb pop push mov or jge cmp or sub cli mov imul fstpl (bad) or and or outsl daa and adc push insb mov (bad) cmpsb fadds je aad int3 add fstps mov xor adc push or or pusha in ja mov cmp and call or sbb and cwtl mov or pop lods pop mov or pop jmp movsl rcrl out dec and mov pushf push pop aaa les mov mov aad xlat fadd inc flds adc xor inc or lods dec cmpl clc frstor add mov add sahf and je jbe or inc sar adc not push push mov push push mov pop fcoml add inc or push sti sbb jle add (bad) fisubr push mov aaa fs cmp movl push cmpsb cld es js inc jo enter je adc push lcall jne cmpsl arpl push push icebp loopne push mov out in dec sub insl mov lret cmp add in in popf outsb adc sti mov jbe inc jne and lods jo sub lea add push mov push aam insl dec fldcw les shrb and jbe icebp (bad) and aam ja sti rcl push sub mov xor push and scas jb sbb int3 and fdivrl popa sub ffree movl out out enter enter iret dec sahf loopne ret inc int3 push cmp xchg cmp out mov and andl mov (bad) or addl push scas pushf sub cmp push shlb push pop mov push or pop sbb and ja xchg dec jge jne inc imul and xor xlat add ss cmp ja push stos out pushl xlat sub dec fsts sbb push cmp rcrb dec cmpsb in jnp incl test inc sub movsb and sub push xor negl cmp push jne mov sbb es adc cltd and loope loopne add aas sar inc shl xlat or xchg ljmp cmp jg cmp jne push mov push mov xor jmp sbb out xor addb adc pop jp xchg add or cmpsl pop and mov lret test sti jl stos (bad) dec cmp add push push rolb cmp dec dec sahf push int3 jg mov jle adc adc ret into inc adc or xchg outsb lock arpl inc cli pop mov ljmp sbb insb jl xor push push push mov rorl insl push insl dec repnz lock sbb inc inc push adc lock lods mov pop cwtl aaa sub and aad cmp pop and push loope sbb movb test inc clc ss ss sbbl jbe jns in addl and push push mov push xchg test adc pop adc clc mov inc add add (bad) fisttpll dec cld mov add or fbld dec or inc push xor int mov adc or or mov sbb dec adc dec add sbb jo inc ja lea sub adc push push push lds push repnz pop add es ret push sub pop sub scas add or loopne xchg add dec xor adc mov mov sahf xchg setne and (bad) cli scas adcl incl movsl aas fstps cltd inc jmp or fidivl int3 (bad) adc adc arpl fidivrl sub add add cmp ja sub mov adc sub xor imul adc and sbb int3 sbb cltd sub push sar push lds inc and popa loopne shr lret loopne mov or push dec xlat popa add push fisttp xchg or xor cmp je insb aaa or adc icebp adc add ret jbe dec adc sbb jne push push xchg fsubrl in cmp jbe adc (bad) mov or mov jno pop or clc add cmp xorb jl cmp (bad) decl test mov cmpsb mov pop int mov dec adc adc xchg jg cmpl ja pushf addl lock or js mov pop arpl mov insb push leave mov iret (bad) jmp add mov add dec (bad) or push insb or fildl xlat mov jo inc sbb fcoml and stos dec adc mov cmpsb push push mov fildl test cs pop and enter and test xchg outsb scas out push outsl mov ss inc xor adc sbb mov mov mov lea push (bad) (bad) pop mov clc or adc sub addr16 clc mov and inc inc xchg and sub push pop jp pop test pop jmp mov jmp push jmp cmp scas mov add and add add or add ss pop lar add nop movsl in scas add add add add ja out add test xor jnp addr16 xorl dec leave push push nopl imul call pop cltd lods sub ljmp pop mov xor (bad) xor inc or xchg rorl mov xchg adcb and inc inc data16 cld xchg adc outsb in call adc out ds mov cmp ja or cmp sub cmp fdiv jnp sbb inc cmp es mov fild or jmp cmp dec mov jg push cmp sbb add adc and push loope inc pop in test mov clc sti or fdivs movsl lcall cld add out jge push inc addl js xor push sti push xchg add fisttpl push xchg stos popa or inc divb add jo loopne or rcrb pop adc test pop repz test inc or adc add inc jl add fcomip cmp clc mov add (bad) pop dec and inc or inc cmp je adc idiv sbb loope adc clc test (bad) adc jge repz stos adc sbb repz lea jbe mov aas cmp push nop inc sub les add inc outsb (bad) mov sub adc cmpb je jmp jne and jmp movl cmp cmp pop loopne cmpb mov push push inc and xor push fldl jp loopne mov xchg and add mov add add xor inc or add je cmp inc push enter clc sbb jb sarb and repz jmp mov arpl jne ret add mov cmpsl mov in out (bad) imull cmp jge mov stos lods sti (bad) pop or xchg sbb jmp fidivl push ret sub adc movsb pop adc add (bad) push in adc pop push add mov je and pop pop jbe inc jno or mov inc fwait cs lret inc mov fwait rorb and mov icebp in je jne pop dec inc insb je sarl add pushf ds or add push je cmp jle pusha dec jno push pop mov dec push or xor or adc mov pop and sub sahf sbb adc mov push lods xor aad jne sbb push fsubl imul push cmp int3 out (bad) xchg jb sub pop jne cmpl orb add jmp jne cmp mov jmp add test je ss fdivrs popf sbb jo jecxz js or push stos pop mov add push and cmp iret xchg or imul dec pop loop add test xchg mov dec or push pusha cld les cmp out in add pop adc ss sbb jb push outsb mov inc xor jne dec cmp xor int3 xor inc (bad) push jge mov ret push movsl fisttp push push adc in add aas and add je jae lcall test cmp or ja mov int sbb jp push or push push bound cmp (bad) sub inc adc or push sbb aas adc cmp test sti in pop aad jl push jmp mov stos pop push scas push adc xor lcall or pushl call lret aad pop lds or cmp lods aas rclb call std push jne and outsl inc call or cmp test lods adc cmpsl cmp ret ss sub add pusha frstor lds mov pop (bad) (bad) lcall movsb and and clc mov gs mov test in sub (bad) in sub mov negb mov and or cmc inc mov inc outsw push sti add mov enter jno std les ret dec sbb cltd mov mov and pusha inc inc push xchg pop adcl leave dec mov adc push pop pop xor pop cld inc aas inc cmc inc cmpb and xchg jg push lret loop call mov xchg in and inc pop add cmp mov mov push and dec jmp or push and sbb push jmp adc out ss or sbb shlb xchg mov push inc cmc inc jl in pop push ja cwtl mov and push inc (bad) rep add push add (bad) divb and push add (bad) fisttpll adc mov push lea xor aam fs mov jbe mov es cmp mov out and imul push pop jb cmp add fadd lods (bad) xchg (bad) ss or jns adc add and mov clc and (bad) scas loopne cmp fdiv push outsb or push adc movd inc add or xorl fdivl xor rorb cmp mov cmp test pop call push imul aad xchg jg sarb fsubs lahf dec jle push roll dec jns ds je pop and sub outsl inc push in push movb cmp sub je add gs je cmp je pop (bad) jmp test cmp mov dec dec jg sub frstor push and jle sbb enter cmp ja mov push lock shrl add add sar pop cmc aas mov add cmp jg or mov sbb add adc dec dec imul push inc mov jmp andl jae test sbb sbb loop inc int and rclb sti xchg fnstenv mov test (bad) ljmp xor xchg add mov enter and xchg cmp cmp addr16 and cmpsb cmp sbb repz adc sbb adc cmp sbb add inc and dec push push push (bad) sbb movsl out arpl sbb mov add pop in fcoms in jo mov das xchg movsb or sub mov jae out mov and test cmc inc jl mov and inc inc loop sub mov cmp loopne icebp or cmpsb mov ljmp xchg jo cltd xorl jne int3 cmp nop sahf dec jo fs (bad) lock push sub call test sub pop cwtl push scas adc pop pop jp ja ja cmp push push inc sub sub rorl jo mov mov jl mov or mov sbb movsb decl enter call flds push sbb xchg lock mov push mov mov push add xchg and jp cld rsqrtps cmp push scas pusha lret insl sbb (bad) (bad) sub hlt sbb sbb sbb call loopne and out add loopne aaa push sbb jge (bad) nop shlb push sbb outsb fcoms cmp push arpl imul push mov xchg dec sub xchg jp sbb mov sti push push and adc jne push sbb and dec adc push sub ffreep adc xor adc in jne add push push test out cmp mov cmp jne push cltd sarb loope push sub inc add mov leave jae pop cmp inc lret xchg fbld rolb cmp or out ja (bad) adc and adc lcall sbb ja faddl movsl and pusha pusha lea (bad) pop pop test cmp push add or xor pusha fwait mov cmp cmp and rcrl adc aad sub push fnsave push rcrb test scas enter cmp add shr fildl mov push je inc loopew cmp mov hlt xchg out push add adc (bad) cli adc sub insb push test (bad) es dec stos sbb mov or sbb dec mov add in sbb rolb pop std and sbb scas add push mov mov pop fidiv shl push insb push adc push or (bad) jnp pop cli jmp cmpl add add lods xor test sub pop xlat ds or jmp xchg iret sub jbe xchg cmp push jecxz sbb mov int imul cmp or jge pop adc add push std mov clc push mov add xlat xor sub sbb push jge xor push jmp adc subl xor cmp shlb test push xchg add mov push mov mul push call jl cmp cmpb nop scas sbb popa sub imul cld dec call or mov cs xor pop or sbb push mov mov cs pop enter into sub jecxz hlt paddq jbe mov pop rcl add push (bad) mov int3 adc sbb fdivl lock out testl mov loop sbb pop mov ss or sar cmp ljmp or mov cmp pop mov mov mov sbb addb clc add (bad) ljmp nop shr sub mov out int3 hlt addr16 sub jne xchg les dec stos mov xchg mov pop in inc insl pop adc push sbb adc and inc mov leave or mov or cmp or mov mov push mov xchg add inc and fnstenv or push pusha cld jne push inc dec leave cld pop xchg ds mov sarl testl das adc ds add xor or inc pop and cwtl je mov push inc test insl mov pop jmp repnz sarl leave cmp data16 je and and in xor aaa pavgb aas ja addr16 ds jbe or pushl push xor notl rcrb or orb cmc pop push sarb dec push int in lret mov add in dec loope add push add push cmp (bad) (bad) sbb push push push mov popf shrb cmp in cmp mov inc scas roll pop dec or jp add sbb xor sahf inc lock jo je aam jle xchg xchg jbe mov adc sbb mov dec jmp sub mov int3 sub jge test add mov insb les sbb decl sbb inc (bad) fwait inc xlat cs jl add mov push cmp push add in pop repnz and mov cmp je or mov add stos add mov xchg pop mov hlt xor mov cmp js jae or dec jo cmp fsubl inc dec adc shll xchg add fadds and cmpb mov push mov or mov aaa rorb cmp mov mov and outsb inc add push and adc push push or nop mov orl jmp mov aaa inc xor cmp jb add (bad) imul cs jg mov adc insl cmp xchg inc or pop cmp and subb push inc adc sbb mov stos fnop cmp pop jne mov sti mov popa (bad) cmp jl sbb adc jae jbe test pop fucomi push mov or or mov mov mov mov fs enter (bad) (bad) in adc lret inc es add lcall sbb inc pop jne xor pop or mov cltd xor das loope dec xor mov or push cli rorb pop rorb pop mov rcrl or adc add rcrl fstpt lcall push sbb icebp pop sub add sarb lock cwtl pop mov fs loop sbb mov test add jno pusha inc sub mov sub clc pop xor and add xchg dec xchg imul fcomps loope je in inc or clc xor sub lea dec and (bad) dec push cmp pop dec pop repnz pop pop or leave sbb in clc sub push in enter pop pop pop jns xchg and inc cmp jge adc cmp xchg mov xchg adc insb adc inc out mov daa pop or push adc scas (bad) lahf pusha lock lea (bad) or les add daa xchg or push mov pusha inc sub inc ja push cmpsb inc inc scas js inc push (bad) adc xor and adc ret xchg fwait jne movsl jmp push mov loopne pop jbe cmp int3 add mov sbb in cmp or sub outsb cmp add je movsbl adc mov lcall jle and jo ljmp outsb and jno (bad) cmp jb pop adc inc sub push add dec xchg pop insl inc js and cld orl sbb int3 lods or mov cmp ds xor push adc mov lock xor mov adcb jnp mov pop in jno sbb dec mov or mov fs rcrb test xor push sbb sbb adc inc pop out (bad) inc icebp aas insb xor lods (bad) loope adc cmp sub inc insb xchg or mov push mov insl out mov mov movsb out inc sbb mov arpl inc add inc bound pop inc cmp into clc push pop sbb test inc cmpsb mov add sub xchg xchg and cmp and orl shlb sbb pop sbb outsb cmp add mov or xchg shlb je add insb xchg and (bad) aaa test pushf adc sarb sub and cltd push sbb adc add ret inc frstor add jmp cltd fsubs ds dec fsubs jl ss lea std popl mov mov es push jnp pop add mov and adc mov inc pusha inc mov mov add movsb mov lock push sub mov add mov push or mov sbb int3 sbb add test pop mov jb jp push (bad) mov sbbl cmp in jmp sub or add fimul fiaddl push je cmp sub in sbb adc nop adc inc jno sub mov sub fisttp pop (bad) aad mov inc pop sub adc imul adc sbb add dec push inc push pop jnp xor lea add mov lea add out xchg sub mov dec fcoms inc xor add add inc and out inc les push or out test mov push inc stos shl adc icebp hlt push push or inc movsb pop out data16 adc xchg push add adc jo push sbb ret cmp lret xor add cmp add mov fstl push pusha push xor sbb (bad) jo xchg push fimull inc and cmp mov mov imul cs mov or mov (bad) nop insb fldenv push pushf test cmp dec mov push pop push test pop push add lea call add and or fs xor sbb cmp ds dec jge prefetchw inc or mov add (bad) mov scas fs aam test inc push aam notb fisubl (bad) or out add adc ss add and adc dec add mov sbb arpl pop adc push (bad) push sbb neg int and (bad) cmc nop mov dec movsb mov aam add inc and mov push pusha xchg imul adc push mov mov pop scas add std (bad) adc dec push and hlt imul insl push sti inc inc movsb mov jnp mov push shrb lea bound dec push pop inc add sbb pop xor dec sub leave jae das lea push add or bound pop push inc fdivrl and push pop rcrl pop clc cmp sbb mov adc and fadds push xor roll pop enter mov adc inc dec add pushf iret and mov xchg fs xchg dec mov mov adcl jp (bad) jnp push aaa cmp (bad) (bad) jmp sti mov sub add and push cwtl xchg lods jne ds mov sub push addr16 or sub (bad) jne cwtl add push lods stos sub inc and pop sahf mov mov hlt mov adc push je cmp jl push call mov cmp (bad) aam (bad) xor dec push shll jnp cli and and mov or push mov call mov lock daa mov or sub cmp imul adcl mov sar dec inc pushf and testb inc push add push mov adc loopne xor mov js add add fwait push xor pop dec mov cs fs push adc mov add sbb and cmp pop inc out sbb sbb sbb out add sub inc into and mov or push ror cmp push mov jno,pn int addr16 into nop or pusha fldl popf jo popa in bound shrd popl push in xchg xorl xor ret inc add call sbb push adc cmp clc mov les push inc sub pop xor ss in adc push adc aaa (bad) or movups or push stc dec repnz mov aam flds cmp sbb adc outsb push clc adc adc or arpl mov and sub loop or aas test mov pusha mov xor cmp sbb les or stos mov or shrb sub adc out pusha jnp daa insb adc scas jg aaa dec add call add adc (bad) pop out pop out imul mov (bad) pop cmp add mov push movsb pop inc loope icebp push adc adc jmp decl or addb inc test and and sub xor sbb flds mov jg xlat sti les scas ja push jbe pushf and cwtl sub jge adc mov notb popa je imul iret mov push add lret lods lods sub imul mov mov xchg xor pop or fbld pop (bad) loopne add sbbb mov lock clc mov xor in and pop das sbb push adc aaa sbb sub sub pop sbb jae xchg inc sbb mov xchg aam mov dec inc jne es rcl neg mov add fldt test push push push sub push dec sub sub add mov jns push adc sbb dec jns adc test mov sbb sbb sub sbb xchg add andl pop xor adc mov (bad) jmp mov and and popa rcll push dec rcrb in sbb (bad) adc adc xchg pusha shll push (bad) ja and jne mov pushf cmc sarb add mov jecxz dec je adc pop xor inc and cld mov sub fnop or daa adc xor call xor mov push lret cmc add jle call add push insb adc inc xor dec pop dec inc xchg orb adc jb or mov sbb sub and add jne dec mov mov lock imulb cmp fimull xchg pop sub dec xlat (bad) add aaa push cmc aam xlat inc je (bad) mov ret push dec push push fadds jge mov adc xchg decb fistpll add adc push pusha add cld imul pop ret mov call push sbb add mov adc sbb fisubrl and movsbw cld xchg mov mov and (bad) fisttp pop mov mov sub fwait loop inc sub call sub test jbe mov xor add (bad) (bad) mov and pop push fneni(8087 mov inc cmp push addl jmp js push jge lock rolb add push lock pop and aas xor in rcrl pop in and cli sbb cmpw je inc inc sbb (bad) or jle inc mov mov mov dec pushl mov sub call push push dec cs aam sub je inc cmp ja mov jnp or xor inc jmp inc push add xchg inc cmp inc sbb int3 mov pop sbb and xor xor ret fisttpl (bad) xchg pop fs mov imul imul (bad) jne lret adc xchg add (bad) jg fisubr fiadd scas dec fcoms clc (bad) fcomp inc sub cld jge in inc stos sbb and dec testb adc and (bad) inc mov add pop ds cmp mov inc jbe jle mov inc mov xor mov sbb testl jb inc scas pop and out add js into ficoml loopne gs dec mov cmp pop enter movsb xchg jo bound and mov fcompl add xchg mov mov fsubl push mov jo rcll pusha push mov ret es nop xor or pop fadds test dec mov mov outsb pop jge add test fcompl push mov add push lret sub int3 in xchg outsb pcmpeqb dec lods mov add test mov xchg xor mov movsb imul lods lods fnstcw jne aaa mov mov popf mov mov mov and pop mov fsubl shrb loopne mov mov push push fsubp fist sbb pusha push loopne adc sbb pop loopne in add cmp cwtl clc pusha cmp dec mov int3 ret push xchg and sti pop cmp stc add test xor push aaa xchg xchg mov push cmp add dec or mov je jmp (bad) mov psadbw call jbe gs je xor lcall in jmp cmpl xor add les sub fnsave cmp pop xchg out and or xor xor mov jl in gs js inc xchg orb or or aam jo and add les sub cmp and ja adc loopne sub scas and cmpsb adc sbb repz sbb inc or into repz insl icebp adc and test jo rcrb in arpl inc push push sbb adc xor sbb ss push inc fildl in jle or fsubrs xor insl or xor ja mov popa adc jl mov xchg cmp sbb push (bad) jae dec add rorb inc mov lods push add jo jne push and insl push push cwtl inc inc das movsb mov arpl or pop andl or mov or xchg dec push mov add int jge call fsubrl call int xor pushl jne inc in into dec or add dec inc (bad) pop pushl adc movsl fadds dec jnp cwtl dec call bnd in loopne pop dec clc sbb push jge enter or ret inc add (bad) dec cmp call mov cmp mov jge adc jp pushf sbb mov fdivrs mov divl cmp sbb scas mov arpl xor loope inc xchg rorl mov mov push jbe outsb les call fmuls sbb loop in adcb sub push scas subl loopne (bad) ret and cltd stos mov inc add sahf lea enter push je xor je cld xchg clc jl xchg ret push jb mov stc push dec xor add xor mov test xor ret jne incl jmp push push xor xor rolb push and add lahf pusha push mov hlt mov dec test pop cmpsl sbb dec mov xor adc pop xor pusha sub mov xor or arpl jge adc mov adc mov (bad) (bad) jne inc ljmp addl orb je loopne cmp scas (bad) push or fisubrl pop push cmp or push (bad) xchg mov pusha (bad) push pusha jns inc mov fadds stos add jbe je push cmc test dec fs icebp in or pusha add popf mov add test fs inc insl sbb inc daa shrb inc inc adc addr16 bound (bad) clc xchg mov mov outsl inc adc stc jle jmp sbb sbb cmp add js pushl je mov addr16 test movsl lret jbe jbe jae ja or jmp push xchg mov adc or inc rcr cmp xlat mov leave fcoms inc xchg mov (bad) jne movsl ret insb lret dec outsl cwtl fimull mov call sbb and cld sti jne adc lret (bad) int xchg cmp cmp icebp or fwait cmp sub negl in jno nop sub adc iret sbb rorl push jg mov addl pop je mov ss bound movsl into push add jns push fwait ret dec add sbb push mov mov clc jne sub xor mov call adc jg ds jmp mov mov sub outsb movsb xor fcmovne dec fwait push test stos push and ljmp aad and sbb adc mov push add jb and mov or cld lret movsb xchg lds les pop mov (bad) sbb push xor jl scas pushl sub js and lea mov push or push inc orl xor insb mov sub or roll or inc dec cmp sub pop mov sbb adc sbb lods xchg adc cli gs pop dec lock inc push sub mov (bad) add testb pop add pop fbstp ficompl add repnz insb cs ret or ljmp mov cli mov adc (bad) mov (bad) push dec inc dec je jno cmp jl jmp push pusha stos push add add hlt in sarl push dec jb add lea clc scas pop fnop testl jbe add push mov mov scas dec push (bad) fisttpl push add push push mov mov (bad) frstor (bad) mov aad add insl xor adc pop or std mov rcrb sub mov bound push cli and cs mov rolb insl imul aam jno sbbl sub jno stos mov cmp movd pop add fwait sbb (bad) je sbb jo jle (bad) and add rcrl mov stos fidivrl sbb or dec rorl and mov mov mov mov pop (bad) jo sub aas fsubrl push cmc inc push add mov mov pusha sbb popa cmc sub mov lcall inc add hlt (bad) fcomps fstl pop loopne lcall xor sub jmp fs leave loop mov out jne add xorb scas or inc sub pop dec inc lods daa inc or dec mov push sub movsb call jl out scas mov push dec or jnp fdivrs push mov pop add adc mov insl or (bad) pop adcl pop sbb inc pop xor mov xor xor xor sbb addb insl sbb xor dec adc rcrb add adc cwtl es adc fdivs jo inc ret adc and or stc out add mov stos out xor add sub repz and test pushl or aam add mov sbb cmp jg lea push je rcrl dec add lahf and push lcall push lea or out sbb push xor and ds cwtl insl add pop pop ret (bad) insb sbb add push and and adc inc inc and in loopne inc mov subb iret jmp and push pop sbb daa sub shr pop pusha add and sbbb add ret adcb jg add mov dec add dec push sbb ss lds dec mov mov inc pop add xor sbb add inc xor cmp jb cmp insb or dec rorl adc mov xchg das nop add dec xchg add js jb,pn or add push sar movsb or fsubrl xor roll mov add pop jo jo pusha mov inc add add fs int popf jo,pt sub inc or dec cmp add mov pop mov push or sbb cmp add cmp xor xchg or cmpl (bad) add and add fnstsw and frstor add bswap and addb pop push and adc add inc xlat dec imul sbb add or lods and and pop mov jbe aad popa popf shlb push mov sub xchg jo outsb xor popf or sub xor addl sbb jb stos sub das repnz xor xchg mov pop dec add cmpb stos xlat rcl cmc in add cs jmp xor cmp sti push dec pop leave and mov jmp in xchg dec cs leave add adc push push inc es cmp xchg mov ljmp cmpsb or cmp sbb mov mov or cmp pop jnp lods dec test out jns push outsb add jg int3 mov adc mov ja xchg adc mov popf sbb scas mov ret jg aaa mov xchg nop add fwait mov mov sub fadds push fildl mov movsb sbb mov lods sbb push pop pushf cld sub cwtl lahf lods lods dec adc pop fsubs push in insb fmul into mov and nop add xor cmp je jmp in notb lret lods push adc or add or neg sbb push and xor inc xchg adc mov cmp mov add nop add or inc push je dec and leave je push cmp jmp xlat push mov movsl mov aas push and movl sub lods pop push adc or adc rorl rcrl insl add dec insb or (bad) sub mov cmp or loopne inc jnp sub out pop scas mov outsl push and sarb sbb (bad) dec mov (bad) mov adc mov mov iret mov or or neg movl jl mov pop idiv movq mov dec adc push or ret in push ficompl rclb rolb push push xor out inc dec push cmp jne pop xor mov outsb pop outsl es push sbb fistl sbb push jo sbb mov push push adc ret adc shrb sarl add lods jecxz adc adc and cli add sub setne dec mov xor adc xor xchg (bad) enter xchg bound mov push dec inc or mov mov add sub xor push cs sbbl mov je movl pop fdivrl mov push adc jmp in outsb outsb jbe and add cltd push pop add mov fisubr xor mov or mov or jecxz (bad) xor stos incl shl add div out in or push xchg rcr lea cs xor shll or add and es in mov push push ljmp rcrb jne mov outsb add add sub insl imul xchg and dec inc add mov (bad) call dec push scas adc or xchg insl ret mov fmuls or jecxz jae cwtl cmp in loope out mov loope pop or jp mov add xor cmp (bad) and push cmp nop orl mov or leave and push xor je xor out xor xor mov and loope inc fs adc stos xor add mov mov je push pop sahf adc push and add push dec inc or or xchg and push add pop or rclb mov and sbb in test in push js mov repz ret pop and pop sub or pop add das ss in ljmp outsb jmp daa test stos enter ss stos (bad) jne (bad) xor icebp sub mov mov fadds scas push or ret insb sbb add popf sub lret adc andl stos rcrl in push xor fcomi mov add or add add call rcrb cmp push sbb xchg push sahf in pop ret push inc add mov jne mov out cmp jge mov in push loopne sarl jg arpl jne cmp jl add xchg jne test sbb (bad) adc (bad) dec mov cltd push cmp lods add repz pop mov ja outsb sbb lret shl bound ljmp mov xchg dec pop and pop add sbb call and sub sub mov or xor stos add loope ljmp dec sub push cmp icebp sub outsl jae out push push cmovle sqrtps or push push dec adc scas fildl xchg fwait push das sub or rolb test or cmpsl push xor dec push cmp mov inc cmp xchg cmp mov sbb add mov ficomp xlat sub mov arpl clc inc dec jl fiaddl mov or sbb into cmp xchg clc addps leave cmp push je mov icebp je push fucomi pop cmp push add and call mov lret pop dec adc mov popa push lock or or adc inc add sbb xor xchg or fisttp (bad) mov inc add (bad) or test jnp mov jbe add insb cmp add sbb in jl adc cmp loopne adc xchg pop dec sbb or das icebp adc leave jne mov inc ficompl xor pop mov scas push imul outsb and dec cld push mov or enter dec shll outsl lock pop jbe mov enter insb sbb leave enter inc movsl pop cmpsl flds mov iret push adc into std ljmp sub xor push inc mov aam and inc add shlb push mov lods sahf rolb xorl (bad) jo stos out in cmp adc sbb adc rorb and dec add xchg fstpl push or insl call push adc stos sub mov jb (bad) call inc sub pop cmpsb pop bswap jmp jnp pop sub lds add cmp jne fadd pushf mov mov shr or es mov pop fcmovu dec (bad) push add ret pop test mov and rep push test inc push stc pop adc cmp xor cmp inc mov adc xor push test and mov (bad) push inc movsl ret pop adc in and popl je lret pusha cmp rcl mov jo mov mov inc adc and sub fisttpl sbb mov adc ja ret das xchg cmpsb data16 adc fsubrs xor pop mov lret inc pop test jo or movsl sahf push rep sbb push mov jno repnz std outsb mov add pop pop js adc xchg fcmovu lcall sbb (bad) movsb mov or pop mov push xchg in or cmp ljmp je add xchg (bad) jno ss inc test or sub add mov inc cmp mov andl repz mov aaa push (bad) or xor insl sbb jmp imul std pop ret pop push pop lock mov mov shl out fildll inc inc xor cmp mov adc pop add or fnstenv in fiaddl stos and mov or cwtl dec js arpl jp or mov and mov jb add xchg pop insb mov inc (bad) insl mov jo pop pop scas add mov loopne cmc sar ret xchg mov lods mov xor scas push ja movsl mov shlb cmp adc push into ret insb aad push lods stos insl popa push and inc (bad) mov std (bad) jb sub mov push insb jl mov fisub push stos push fisttpll cld mov (bad) sbb fs and aam sar adc mov stc pop mov and shrl cs jb inc enter (bad) (bad) dec push push pushf rcrl lea dec push jae ljmp js cmp std rorb rcrb ret pusha into rclb fsts xchg cli icebp das aaa adc sbbl mov pop pop pop and cmp or insb jnp or mov (bad) push std dec insb adc punpckhbw mov jo dec mov mov pop mov lds cli or jb mov int jb or jae es std pop push inc push sub sub mov mov mov mov fist add lds add in dec jne call mov cmc pop push inc adc stos lea push push into and sbb in adc mov mov mov incb jb push xchg sub cmp mov jg jbe mov dec add rcll (bad) jno mov mov inc loope decb sub jmp mov xchg jge fmull cmp pusha or frstor push sub mov sbb mov xor or aad push (bad) mov fcomps ror pop push sarl and inc in lret divb or sub movsb push nop push psrlw rcrb out cmp orl repz in push daa push jg push jb and inc arpl jle add pop rclb jo dec or and or adc cmp sub cmp ret pop mov push mov daa lock arpl pop add clc outsb mov xchg adc ficoml pop and (bad) dec enter sti rolb scas push mov dec inc jmp inc push adc push and daa add sbbl and or jp xchg dec sbb mov jbe test cmp inc loop mov jae neg mov stos inc mov jmp adc roll in mov xchg xor mov mov fstpt mov mov mov cld test rorb pop cmp sar ret inc sbb inc sub or cmp or inc dec inc pop int3 mov dec inc (bad) jo inc cli mov mov dec jne fnop xor fistpl enter mov arpl mov mov push mov adc outsb test mov add test pop and js push ljmp fcmovb ret or cmp (bad) std push lods sub out scas imull cmp jno mov sti or addb mov or pop lods jbe xchg xchg je sbb jno cmpsl jbe outsb mov fwait cmc loopne aam pop movsl jne loopne pop dec push or imul inc shlb adc sbb adc or insl outsl ja inc jb cmp pusha jae insb ret push xchg jp cltd lea loop mov (bad) add jg sbb incl push sub lea add mov adc push nop xchg jecxz cmp cmp jb rcll ljmp sbb add fadds (bad) cmp push movsl dec adc inc sub or xlat add lea inc add inc or fcomi das or add or adc jne or xchg cmp sub push or in jb add sub ja lock fcmovnb cmp jle cmp jge sbb fsubrs or aam inc sub push mov inc mov stos push cli push push cmp jbe pushf dec test add fildl add inc mov lds cmpsb (bad) jne or mov mov pop (bad) movsl mov adc rclb sbb dec add jp mov xor fisttpl ret movsl test mov or push out test pop je pop loop clc enter dec mov aam jge mov add pop (bad) hlt xchg adc (bad) fcmovu cmpsb sub pop sub jnp jne insb cmp xchg insl in dec ljmp jo sahf pushf lea lcall mov xor adc push clc sahf sbb test fs sbb mov arpl test sar or push push xor pop mov cwtl cmp insl (bad) loope push jne nopl pusha test test dec bound leave (bad) push imul insl adc push pop mov cltd sbb inc mov int (bad) cmp lock push lss add sub repnz or adc mov inc sub daa (bad) jne adc push inc dec mov push pusha jecxz adcl cmp dec sbb fs int3 in lret (bad) je shld subl or cmp and mov or inc mov dec mov inc mov rolb mov or je das push push pop adc sbbl aad lret lahf xor mov mov and es jne mov scas sbb inc sub roll call push jle push jo out or fiaddl mov repnz xchg loopne inc and je and ljmp inc xor movsl mov jns push xor (bad) adc aad lock or aas dec sub js out hlt or cmp jmp adcl xor sub xchg stc inc push push push sub popf jne imul sub push les sub xlat jmp or cmp stos js mov test and cmpsb cmp pop mov mov mov mov xor xor push ret dec sbb inc jae mov or in inc sub es in cmp mov xor add maskmovq imull push pop cmp jmp pxor pop testl add out or inc xor mov jmp aaa mov mov rolb sti jle pop sbb xchg arpl in add add inc int sbb shr shr sub aas lret mov (bad) jne adc jl sbbl dec xor xlat lock push rorb mov push or cmp (bad) fcomps xchg das pop mov imul pop adc call dec andb jae mov in or idivl mov dec repz out mov jb mov mov not mov adc jecxz xor add in negl dec in int3 dec sub pshufw jb jb jmp dec hlt sub ljmp adc roll jne mov jae sub bound xchg push jg xlat adcb xor push push rclb cmpsb fiaddl mov test fwait sbb xor xor cmp mov jne push lock (bad) imul repnz mov push sbb insb mov mov loope in mov sarl popf jb push xor pop ss mov dec and cmp and or push ret loope sub dec xchg inc push sub add fbstp cs push jae mov mov cmpsb cltd ds dec ret outsb gs xchg and add movsl mov pop sbb lods insl mov cmc jg ja jge sar loopne cmp xchg xorb add and pop fildl add pop (bad) mov sarb add out (bad) in push movl out or rorl mov or outsb push jl sarl adc cmpsl push lcall sahf mov arpl lret mov fbld push (bad) or mov shrl dec or sbb jnp sub add xor fnclex mov adc adc xor xor int and or push lea inc adc jmp sub or push movl shlb fadds imul call push popa shrb sub loop inc enter cmp (bad) ficoml jae divb cmp cld push in or data16 mov fisttpll add sub xor and adc jno pop dec scas push rcl push sub push inc inc int3 clc add xor or sub mov mov jnp cmp int add icebp fsub lea jo into pop outsb jne pop shlb or rorb jae sbb nop ret sahf adc mov jb,pt (bad) lret idiv fstpl or scas and add push adc lret jecxz (bad) loop pop in cmpl cmp loope mov popa std jb xchg pop and push sub jbe adc ret mov adc (bad) ja ss leave jmp ja cmp (bad) loope jne lcall cmp mov and push insb pusha push push push inc lea or and stc jbe sbb add (bad) (bad) fstl inc or or push sbb sbb clc (bad) sarb mov cmpsl dec push xchg sub mov andb lock and sub mov mov xor sub mov (bad) mov dec pop push mov inc jno fcmovnu adc or cli shrl and jb and push loop mov adc dec or dec cmp repnz cmpsb nop clc ljmp xchg shl fsubrs push mov lcall cmpsl push xchg lret hlt dec push push inc adc mov mov loopne repnz ret fdivl adc inc es iret xchg mov ret inc push push cmp (bad) mov leave outsl xchg leave or sbb repnz dec fwait (bad) inc das sbb push xchg sub ljmp dec leave xor inc outsl fisttpl shrb (bad) mov fstpl mov jge mov test push inc sbb dec inc inc dec dec xor inc inc sbb mov and cmp rcll fcoml dec push lret outsl push enter push popf xor inc das jge inc mov fmulp int icebp mov inc clc fisttpl push push push adc int shrl lds aad roll lods out mov xor push pop jg mov push mov or test dec iret cwtl (bad) sbb shll push xchg lods in lock push aam push leave aad scas std xor orl (bad) push push pop cmpsl ja add add mov push imul test test inc and xor mov aaa dec movl ds scas sub xchg (bad) jl jecxz movsl xchg xchg ljmp push cmp dec or push and in nop mov ret les rcll xchg adc dec push sub or fistl adc jmp aas int3 xlat mov mov jl mov pushf (bad) je mov mov ljmp sub mov inc outsb out push push data16 adc or or adcl aaa vaddsubpd or nop xchg xor mov add mov mov push inc dec push xorl mov cmp dec add fldt dec (bad) cmc faddp xor enter int sbb add pop fsubrs or push jl sbb push inc sub push and or test push jle xor add aas xchg and addl pop ret imul cmp fistpll insl ret jb mov jl incb aad fcmovb loop aam inc sub mov cmpsb aaa or sbb enter repnz jb and and and std cmpsb mov enter dec xlat and push xchg pushf insl add mov inc adc hlt dec mov fdiv div cmp div (bad) insl mov inc cli xchg or mov pop or mov fiadd adc adcb ljmp loopne mov mov nop jns ficom outsl mov je sub sarb sbb mov xlat insl outsb nop sbb (bad) add mov data16 push xor xchg call mov jbe dec pop iret push mov inc jp sbb mov add jne push mov ds ret mov movsb xchg mov jbe mov dec lcall ret pushl xor bound outsl jl push arpl shl push push or out out mov adc cwtl or js fstpt adc push mov dec adc mov outsl mov outsl or adc into mov mov ljmp popf nop inc (bad) mov out jmp popa mov add (bad) or (bad) push icebp or mov rcr sets lock mov popa jecxz adc or and add mov jne or mov or mov lea push movsb rolb xchg mov and stc sahf mov jle adc adc sub enter adc pop test clc shl xchg mov xor cmp mov loope fcmovb mov push xchg cmp push cmp jmp daa sbb imul js and (bad) fldlg2 xchg mov push dec nop add cmp jge adc and sub mov add movl xchg fildl scas jp adc push push arpl inc adc add cmp dec lcall push pextrw mov push mov lret mov inc mov jbe or cs faddl cmpsb add cmp ja jmp lea cmp jge cmp ja sahf je cmp push push cmc jmp lods iret cs sti adc loopne int enter jle loope sbb loope loop xchg push adc push inc mov aas xchg enter ret adc xor add or xor push js push aad sarl add insb sub jecxz xchg out or or inc mov lret pop repnz negb lret jbe insb pop push ret (bad) sahf push loop mov or or xchg pop inc push jge sbbl int lea push stos pusha andl add loop add jmp dec and lea test sbb cmp xor (bad) ljmp insb adc inc fidiv adc shrb sbb add ljmp cmp xor sbb insb mov mov mov mov pusha pop mov mov push push add mov testl add jle cmp std add inc mov inc inc add inc movsb push push dec pop xchg push (bad) lods add add ret pop pop jl mov rcll add mov sar xchg cmc push or sbb or out aam lea inc in add mov pop stos cmp mov adc inc xchg jbe (bad) adc mov mov mov (bad) or mov (bad) or push mov adc sbb pop std sti sti adc mov push cmp jb mov ret xor jmp es cmp rolb test and aaa dec scas add jb mov add fwait jne loop lcall add sub lods jnp ss dec cmpsl mov and testl or add adc cmp push (bad) xchg inc das add mov insl sub mov adcl jge mov jns ss and or test cmp jb jne mov (bad) ja popa pop roll adc popf pushf sub das jne sub jbe push scas sub cmpsb shl mov jns test mov (bad) jne push (bad) fldenv seto (bad) mov push pop sbb loop in dec adc mov push push loopne jo pop xor shll inc or test insb mov mov fimull cmp insl mov (bad) push mov mov xchg xlat test add mov ret mov or aad fcomp inc cmp inc cmp jle mov lds push jl pop cmp jg mov inc xor mov mov sub sub adc pop cld push or orl movb push sbb and mov or pop add adc scas sub or mov faddp add add pop hlt pop loopne lods push imul mov push or test mov insl imul dec adc je (bad) adc adc (bad) mov inc jg test mov cli cli dec adc lods pop popf fwait inc and bound adc cld dec or ret shrd cmp aas xor cmp fsubr sub or iret inc in cmp mov add fimul jne fstl pop hlt test push jae push nop jge orb dec or or fs mov clc sub push mov fidiv clc shr (bad) dec arpl jne data16 xor lea sub sti rorl leave je pop push dec or sahf fcomp mov inc push sub call leavew dec jne pop pop lcall xchg js mull cltd or scas jmp sbb cmpsb and bound js sbb and movl mov or mov jbe jne add aam dec or out xlat inc aad dec loopne add (bad) cmp push push mov mov add js mov mov or inc or mov pop add es pop adc lahf adc imul call push jl dec pushl mov je cmp jge add xlat jmp pop cmp mov mov pop xorl cmp jg or flds icebp pusha xor cwtl mov jmp rorl or mov add sbb sbb subb pop fcoml push mov mov push add xor xchg adc daa xchg es jle (bad) icebp mov lds xchg cmp pop lea cmc mov mov pop pop xchg pop pop xchg aam xor add adc pop aad adcb sbbb or das add cld jle adcb dec call scas nop hlt add xor and test or insb mov mov leave inc push xchg pop sbb fstl sbb and xchg push test daa lea mov (bad) daa cltd call insb mov xorl sbb lahf xor inc pop push movsb inc sub arpl push mov mov mov push inc cmp mov add jl stc jmp cld adc inc dec pop cmp ja jge cmp push pop push or mov add lods inc test frstor mov (bad) push jle push pop jge xchg dec andl inc mov imul js pop adc mov or adc xor icebp or inc mov push xchg mov fs into or outsl and dec mov pop add aam rol add out je xor mov lahf inc cmpl jo and push jle ret pop xor div in add ds repnz and mov mov add movsl cmp sub add xor mov xor jb dec add add nop add adc add or add notl lcall jb sbb jp mov add outsb fucomi sarl jecxz pavgw add add rolb aaa and mov les cli jmp sarl clc in mov push cld adc outsl push sbb mov (bad) or xor bound add mov sub xor mov cmp mov or insb test mov js mov adc je inc (bad) shl push dec inc inc das nop push mov push mov mov nop xor pop out cwtl cmp sub inc popf test cmp addl data16 iret jbe iret mov lcall lar popf push sbb push mov int jno inc add add cwtl fiadd popf push mov loopne inc aam out xchg pop pop mov cmpsb cwtl int out lret pop stos jnp mov or mov jo (bad) fldt sub test or adc test xor lods adc dec xchg or lock push mov mov cmp mov lods lret xor pusha dec cmp adc dec cmp sahf jae fistp lods jmp mov shr push cltd test outsl nop push jno mov adcb jp lahf push and popf (bad) fidivl inc mov mov sbb les dec ret and scas inc scas je and pop repnz mov and nop loopne push mov jbe xchg push lock xchg xor add adc cmp add les inc mov stos test and test adc jmp pop cmp mov cmp lea inc lret xor rclb or pop jmp xchg popf add dec jne jge fcomi push sbb in sarl ss sub cmp mov test mov sub inc xor mov insl cmp pop setbe mov sub and into (bad) cld mov push lret out or shr shl dec rorb in lock pop pop push pop xchg cmp push xorl mov leave rcr or fisttp xor rcr add inc mov or je clc cmp les fild fimul or dec (bad) mov mov mov cmpsl xor sub mov inc aas sbb inc cmp mov sbb adc inc and fnstenv xchg aad sub sbb rcll mov inc not gs sbb adc not push inc mov mov enter push and test lea in (bad) push cmp add clc ljmp push push dec ret add fsub jbe sbb mov or mov cltd data16 stos and in jno inc and sbbl inc rcl sbb add lods mov adc mov js mov add orl mov pop flds push or inc or fmuls subb or dec (bad) mov inc je mov sbb mov mov push mov add mov push cmp sbb js xor inc mov sti std test sbb push and pusha sub fcompl sbb push movsl mov dec mov inc sub sar sbb lahf xchg add aaa mov lock cmp or fdivrs push push idivl mov mov or inc rorb (bad) loopne (bad) jae jmp out ljmp or sub or repnz aam fistp leave push mov and loopne sub fdivs dec pushf adc dec push mov jle aas push lods test je fucom mov adc movsb hlt dec add lcall inc jne cmp dec lea dec repz inc faddl mov pop pop lahf xrelease sti add jmp adc jl enter je pop add sbb sub adc jb,pt mov test lahf pop nop and mov sub and push imul and das neg adc loope iret fbstp sbb dec pop (bad) jb mov inc xchg adc cmp mov jne fiaddl and xor adc bound fwait cmp dec lahf or outsl arpl mov cmp or xor pop push or or xor mov aaa cmpsb add sbb mov mov mov adc mov dec pop or pop jne pop sbb pop add push or cmp jp daa (bad) mov ljmp (bad) ffreep pop (bad) popl movl cwtl or inc outsl (bad) adc test push inc pop mov add inc or jecxz ret inc dec int3 inc push shll bound addl push dec push add fdivrs das push mov dec mov mov mov push cmp cmp inc cmp mov lret sub aaa mov pop data16 (bad) int lret pop or fstps fucomp or add add fstps push sbb aaa dec dec and fsubrs bound ss in and jmp addl pop out mov pop inc repnz add jg cmp cmp adcb and sbb push insl adc push mov neg mov adc ret sbb or mov sbb dec adc push loopne sub mov pop xor jl in push sub inc sub aaa mov sub mov lret pop dec push sti je jmp jge or or inc push push push sub jno aad cmp insl popa dec mov call mov cmpsb imul imul dec div push test ret nop pop add ljmp add mov jne cmp pop cli and xlat jge test insb loope sub add sbb mov add add popa sbb lods add jbe and dec out push push (bad) hlt lock cmc pop fldt mov cmp jne dec sub xchg jne cmp fwait mov jbe add pushf sub in inc shl repz lea sub js push ret add adc repnz insl sbb pop or dec add flds jns fadds jge shll sbb outsb out mov fildl dec sbb dec in sbb jne or rol pop out pop in jo lock mov je adc in push stos cmp mov mov push bound and fnstenv arpl (bad) inc xchg or mov je adc std mov nop cmp in jne fwait push aam sbb cmp push cltd add jmp in push add jmp mov add and inc inc add jne mov pop mov pusha inc cwtl addb sbb shlb mov int push xor cmp add push xor lret nop out cs fs sub sub xlat (bad) mov loop (bad) jle add scas mov adc and sub adc in mov popa and push outsl add imul out xor push add outsl (bad) fcmovnb lea icebp inc dec mov je sbb fistpl je,pt mov lret mov and xchg dec push and dec xor (bad) sti mov xor fcompl (bad) icebp sarl mov je jmp test add aad mov adc (bad) cmc test rcrb sub mov xor mov xchg frstor es ljmp sbb ja xor icebp jae dec sbb and add xor jmp or scas imul push shl mov xor inc adc or xor and lcall pop push mov lret mov jne push xchg and sbb pop sub mov lea loope sub test push jo std je xor shr pop jne cmp sub fwait push adc mov lea push dec dec and (bad) je repnz sub sub movl lds inc call (bad) je popa mov pop and bound inc mov js enter andb rol sbb js loop mov stos mov add bnd outsl js pop dec shrb inc sub add sub fcmovb add push scas adc add push sbb cmpsb sbb pop lahf pop je xor mov push push fist or add push orb mov test inc cmpl push or add inc xchg dec cmp dec dec jl ljmp or push push dec jne daa out ja adc popf cmp shlb lea pop subl sub inc sbb hlt inc ds push mov sti jne mov and pop stos bound cwtl adc mov push pop push sub push shlb sub mov icebp pop loop or jne mov lret adc pusha adc out movl or inc add mov mov add std xchg add dec (bad) jbe adc outsl mov stos in je mov test shll and enter inc cmp (bad) mov ja mov aam ljmp cmc mov pop dec sub or mov mov in add cmp mov add mov (bad) and mov jb lret inc push push inc xor bound (bad) (bad) rorl loopne jmp xchg mov es loop and or xor pop mov jg or xor push inc jge jl ret dec jno dec jns push inc sbb (bad) aaa push fist and sub dec shr or dec mov sbb adc push or and sbb dec fist or mov enter (bad) mov push jb mov out and call sbb lea je sti cmpsl mov add ljmp jne add pop sub (bad) dec jnp popf nop add ss cmp (bad) call jecxz add (bad) mov imul xchg movsl mov xchg pop mov movsl inc mov xor sub push ss iret jp and es in or (bad) arpl ret jg fimull mov and add mov jecxz cmc lcall add repz mov sub jmp clc (bad) mov cli mov out cmp jbe sub mov mov inc inc dec jne jae fcmovnbe je jbe cmovns push dec shrl mov adc ret sbb loop rcrb mov push inc xchg xor cmp push in js les je mov adc loopne add jmp dec push mov mov mov mov mov push fdivs or jp push (bad) mov adc dec aaa bound push fwait inc or push xchg mov mov jnp and add mov je push enter (bad) pop fnsetpm(287 and pop jb sub out cmc (bad) es push aad imul pop push sub mov inc add ss mov push call pop mov shr mov (bad) jbe cmp (bad) movsb xchg cmp std jb cmpl lods cmc (bad) (bad) and out (bad) pop pop xchg daa ljmp imull mov pusha stos shl mov add sub and add mov add or loopne enter add add je jne out pop pop clc add in or rorl mov add add pop mov int3 gs (bad) dec sub xchg add cmpsb andl push in fstps sbb imul sub cwtl cmpsb and pop mov dec (bad) xor (bad) in call xor (bad) xor hlt hlt clc clc dec mov sar cld push lea add insb mov hlt jl mov inc inc leave xchg mov ss adc and sub jnp and and std jecxz lock jg neg imul sub cltd scas sti inc sub adc cmp pusha and insl add outsl push out cmp and mov fsubl mov dec jo sbb (bad) xlat sbb sub xor ja pop mov mov xor rcl fsub imull mov mov pop sbb imul imul or adc add mov mov push xchg in inc add and es jbe mov xchg enter imul insl popa push jno dec lods pop gs add inc mov cltd sub test jb mov ljmp pop mov stc or movsl neg push adc dec je rep pop or dec push je ljmp dec add push pushl sbb in inc lret insb or jo push fcoms pop pop sbb decb fildll fimul jle push sbb pop mov cmc pop jae mov mov sub jb push pop push insb adc and jne je test aas push inc std fisttpll sti lock push adc test ja ret push mov sbb imulb popa xchg push fsubl dec adc mov rolb cli mov jne push pop jmp out negl xorb or push in jecxz push shll test clc and pop sbb jb add (bad) arpl hlt mov (bad) imull sub ret pop add mov cmp movb imul add jg jnp insb mov add int cmp fildll pushf sub out mov scas fild add fcomps mov pop or jo outsb sti inc push testb jne adcl mov pop and (bad) movsb jbe push prefetcht1 dec pushf popa mov (bad) jecxz push pop or push mov cmpl add adc pop add push pop xor push xchg mov mov insb pop out push movups scas mov xchg cmpb je jbe std push and ret adc push mov pusha jnp mov sbb clc mov push pusha jae push adc pop out push (bad) push push jns std movb mov mov pusha movl mov xor std iret push add rolb jo push clc push push fcmovnu ret push (bad) jo das xor xchg inc and inc or clc or cmpsb fucomi or clc or cmpsb dec dec scas mov enter xlat inc inc in adc sbb imul pop in cmc bound mov or add jle add (bad) int3 jmp ret lock xchg xor incl inc ret push and nop mov in or jmp out pop pop sub or nop inc and xchg or or push js lcall pop push pop add cmpsb dec das insb insb mov lods add add xor loopne jle dec and xchg sub inc inc adc nop das adc or xor xor lcall in add cld adc or adc or jmp sbb and dec add les sbb add in mov cwtl or mov fcmovb pop mov or add jp or mov adc imul movl jp ss leave aaa jl inc push lods mov fistp test sbb scas jmp addr16 or pop pop push push mov pop xor movl subl cmp in mov push inc adc pop jnp pushl pop or lret fcomps sbb mov cmpl push push xchg stos dec pop jno imul das sbb iret movsb sti pop roll mov jl mov jge movzwl data16 pop shrl ret or sbb adc je pop add in sbb add sub jp inc cmp in adc push pop inc inc mov cltd fsubs loope loopne popa adc rolb movl dec push int dec mov cmp mov pushf add xchg add cmp je mov push lods mov add mov fcmovnu loopne inc rcrl jbe rorl add pop add and leave add add dec rcrl push lock mov push pop je sub je daa mov dec flds add xor xor pop (bad) mov add or sub movsb cmp and inc lcall lods cmp (bad) lea loop or or or nop outsb in mov add es push push cmpsb mov fs jg inc adc pop adc adc jne adc adc and dec jae or adc cwtl ret add adc xchg cmp adc cltd adc movsb adc cmp popl xchg sub sbb sbb fs sub dec or and daa nop sbb add sbb xor jmp add je sub fldl movsl movsb sbb jge sbb sbb rcrl inc pop pop adcl incb and ret sub out addl push iret cmp push incb fisubl sub aad xchg add mov cmp je dec repnz aas (bad) push rol lea push nop scas jmp aad in in lcall out or imul or jge test fucom and js jmp dec and leave add jmp mov fs out in in in dec dec aaa jb mov xorl push pop jae jge out mov xchg lock add popf dec xor and pushf sarb out std out (bad) mov repz std mov popf xchg hlt hlt push add dec mov es out jg negb or div (bad) cmp cmp dec daa nop out fs and lock xor iret sahf push pop jae sti mov dec pop cld je cld sub xchg je pop dec ss std sbb adc xor sbb (bad) adc outsb stc add ret inc test sub or mov outsb push lahf shrl mov fsubs sub adc test jecxz jecxz push movsb xchg adc sti in and nop es fdivr and cld push fstps out out ret rorb or xchg pushf dec sti sub mov pop pusha mov jmp sbb sbbl ret cli popf cli jns pusha or add fs out dec push push jb jmp add cli jns and jmp in repz xchg call pusha or dec stc mov div outsb imul add dec xor add push jb adc out clc in andl sti push sti dec mov cld add andl and pop fdivs dec add inc adc jle fist fsubs fnclex mov loop icebp leave sub testl (bad) mov out out or add sub in jb mull notl sti imul ljmp (bad) or and repnz (bad) mov fs out cmp pop inc mulb and divb (bad) repnz mov cmp sub xchg sub pop inc pop jae mov arpl idivb adc sub in jne add clc xor cmpsl mov enter xor mov cli cli push cmp dec enter and sub hlt outsb fldl data16 (bad) lretw lds hlt decb inc pop cmp lcall ss mov outsb incb or push loope imul test loop in jb scas repz ss and in push inc pop in jns and repz inc push gs push mov sahf pop (bad) jmp pop jns bnd cmp repnz pop pusha mov in push das mov jns bnd sub push add inc loope repnz icebp icebp or xor push dec xchg push pop xchg xchg inc jb or xchg pop adc push xchg icebp jp lock scas sub and iret or mov xchg jns cmp lock das mov sbb lock lock sbb adc mov lret xor outsl fisttpl add push sub jae mov mov in cltd (bad) jbe pop inc pop push add int3 xchg or aad mov add mov mov mov inc dec pop rorb push mov jmp inc and jmp cmpsb jp (bad) mov mov add imul sbb lcall fldt (bad) pop add cvttps2pi fldt (bad) sbb popf pop inc rorl loopne sub push insb sbb or (bad) minps add adc sub into sbb sbb xchg rdpmc aas pusha ja mov rclb add cmpl roll jne call arpl (bad) mov cmp incl and shlb cmp xor jbe cmpl ja mov pop cmpl push mov call je shrb ret push push push and lea add pop pushl or push pushf sbb fbstp call push fs adc xchg jns sbb loopne aaa adc mov aad xchg outsb sub sbb or sub add xchg std pop cltd jle and sub xchg cmp or movsl loopne pusha rcr push fdivs xor add or push mov test out fildl or pop jg push pushf add mov adc inc mov dec js sbb sbb dec dec (bad) out push or jl mov adc fs fldenv and jle mov adc jae gs push mov mov mov jg jmp push pop push push push push sarb js jge mov and add jmp push mov inc sub cld mov pop mov mov aam ljmp mov and or adc and inc test push or decl adc (bad) cmp jbe push pop pop xlat inc xchg sbb sbb pop lods or add jle fnsave rolb imul icebp mov push add fwait mov iret xchg (bad) loopne imul orb (bad) fdivp and jecxz or fsts aaa push inc (bad) pop add add dec or pop les push jmp add jne ja pop inc fisubl mov adc mov cmp push push lret sbb adcl cmp push or push push mov imul pop loope addl adc ret daa mov call adc test enter sub push inc cld mov in adc or sub pop mov outsl fsubs adc pop mov xor dec adc std out or mov or jnp in and sub mov adc push stc push daa int3 mov test add and adc xor rolb add jmp lea movdqa add int dec adc and jg add ja fsts jg jg outsl inc add push fldlg2 mov jo adc jg mov jg lea jne add fsubl push push test fcmovnbe popa pop adc ret cltd mov sbb lret outsb outsl test clc xor mov push push mov or jne stos movsl lods sbb call inc adc icebp push push push sbb add movsl push jecxz dec fisttp ljmp mov fsubrs fldcw adc (bad) fucomp lock movsb sub push jecxz xor xor jnp in in into in (bad) lea add cmp mov inc sub push jno cmp mov or leave out xchg (bad) stc loop andl mov fnstenv (bad) testb pop or out add lea loope push inc inc inc jge push adcl inc inc inc push rorb in sbb xorl jmp sahf cmp and push hlt jge fsubs xor xor mov push (bad) mov faddl ljmp shr sti dec hlt rep jmp neg add lock out or push imul enter clc lock add sbb or jmp or or add inc frstor add inc loopne fiaddl sti insb mov lock add outsl cmovbe and sbb mov jle cmp push inc mov cmp jb sub mov sub and mov dec mov and or pop push sbb rolb inc mov mov jmp push (bad) and pop and cmp cwtl test add aad and and mov or subl xchg jbe inc scas inc shlb xor loop in ret jbe adc lea xor lock and cmp imul or pop and pop fucomp fiaddl or mov or dec nop pop inc pop enter inc loope insl mov into xorb jne sbb or add jbe movups je fwait pop inc push dec add push pop add or mov mov test out fild jbe push sub ss xchg loop sbb cmp pop sub ret sbb (bad) aaa dec push popf push cs popw adc add push pusha sbb sbb and stos ds and add scas roll fsubrp or inc test cmp adc lahf sahf mov gs cmc pop mov push lds test and dec or xor or or cmp or or insb xchg pusha push mov jp push sbb dec cwtl push sbb jg scas add sub or outsb dec iret adc test pop or sarb sbb inc inc es or add fwait jne xor ja (bad) mov adc andl cwtl pop je je xor dec push lea mov xor dec scas inc fs and cmp push adc and je or add push sbb dec arpl add add dec xchg bound or test mov and jge dec test adc sbb sbb xor mov add pop pop and test cld insb adc xor add pop sarb les nop add popa adc push jmp addr16 push push int3 mov push inc sub pusha dec add pop mov add add aaa push and (bad) jl leave push add add aas mov rorb xchg inc rol mov push imull (bad) sub mov lods je mov test in (bad) mov (bad) lods xor loopne aad inc pop inc (bad) ret or push movsl pop push test xchg jae stos push ljmp xchg jp test mov inc cmp test scas scas cmp js xor (bad) loope inc mov (bad) icebp or push fldl push xor jo dec push push rol inc and je stos in or into ds or fstl sbb push cmp inc jne ja movb jb pop add cmpl jecxz psubb jmp dec pop rorl jmp es cmp cmp add cmp xchg loope push pop jbe fmull mov (bad) ss (bad) adc pop sbb lret mov mov jnp push inc and jo push mov fist es pop pop push in xor movsb jmp push push les jne push mov testb mov idivl test push inc add lock cltd jnp sbb inc ss inc pop fistp lock sarl add (bad) pop mov call pop or adc xor cwtl cwtl lahf mov add cmp or fcompl jb test ds push sar and cmp je push int3 jmp loopne fild fcmovnb mov push or jb xchg mov inc in sub into adc push je sbb add pop dec idiv add add insb inc push in and add iret out sbb inc rolb mov jmp pop add sub out out xor and add dec add xor xor and ret lea sub push loopne fsubrs insb je push pop lock push inc jne mov (bad) out adc mov test test pop cmp push outsl mov add (bad) push icebp jae xor loopne movsl clc dec aad dec adc lea (bad) jbe adc add xor test inc or add movsl sbb jae cmpsl push jno out test add adc (bad) sar (bad) stos ret push cld je lea sbb adc lea (bad) fldl aam adc xlat inc pop inc jbe lock jl jg or loopne xchg test mov je xchg xchg loop push mov mov fcmovnb push cmpl (bad) pushf sub push push (bad) in ret je sbb call inc mov ret mov push jge mov pop nop call inc mov push (bad) ja mov cmovnp out cmp jnp decb mov xchg push lret mov negl and sub into je cmpsb outsl mov add or je cmpl or or xchg ja push shrb jmp sbb add and add (bad) aam test add sub jp mov or lea stos cmp inc dec adc sarb fs lea xor add add outsl les mov rorb jbe dec adc ds add pushl or and pop mov sbb mov add cmp ja sub cmc xchg add sbb push loop sbb add add inc or cwtl rolb fcmovnu push lea imul add fcoml adc ret push push xor inc push xor mov add and stos movzwl (bad) mov jg add orb mov add jne adc mov bound jmp movb cmp sbbb (bad) or push adc and dec push sahf in push out pop roll cli adc and mov mov inc adc mov cmp adc pop fimul loope jecxz pop xor pusha sbb out clc mov sub je cmpl enter mov ja rolb add and mov xor push mov add (bad) mov sub sbb sub push push pushf pusha sub jmp dec xor mov lea add incb push xor ret cmp inc add adc pop adc imul and jmp in mov add jmp cmp mov (bad) pop leave jns push or jnp inc and movsl fisttp loopne push jg jge jne fsubl xchg mov fmull fistpll icebp ja (bad) xor and std shll (bad) jmp mov dec mov pop iret xor movsb pop adc repnz jle lea (bad) rolb mov call or mov clc movsb jge push iret sti inc fstpt jne mov test or adc add adc inc cmpsb cmp imul sub sub mov add test mov lock loopne andb in and inc jbe mov inc inc cmpb mov mov (bad) mov and or ja push cmp inc jb mov xchg movl pop and push cvtdq2ps fstpl lea inc sti decb inc sub inc dec jne mov and lahf jne mov add negb add xor cs mov loopne or jne mov push push rolb push mov dec mov mov in add pop add cltd pop pop cld pop inc mov testb mov cli in sbb sbbl mov inc push jl add fsubs add push rcrl jmp mov mov push mov call push (bad) cmp std sbb sbb adc jl (bad) cmp js dec add pop mov push fadds xchg enter test xchg jbe mov mov rolb mov rorb inc sub mov mov (bad) mov cmp dec sbb mov aad dec add pop movsb iret mov mov aam and push mov daa jmp jmp mov fstl xor mov and loopne or cmp hlt push sahf push adc addb add adc mov loopne lds outsl cmp xchg mov push cmp jne or cmp adc pop outsl addb and jae fwait pop (bad) mov or mov movsb rolb sub inc lcall les (bad) adc or dec rcrb mov call xchg mov mov divb jae jg push arpl cmpl add insl cmp cmp nop pop push sahf inc add and add push js arpl aas push push call xor sbb and lea pop add in cmpl cld iret pop add movnti or ficoml add cmp add push adc cwtl jg mov loope push mov aaa fstp mov xor imul push mov (bad) punpcklbw pop pop jge sub test and xchg or push sarb mov lock bound xchg inc loop sbb jo inc aad jle nop lea mov clc adcl sbb shll sbb xor mov sbb adc adc mov mov sbb in add cmp mov inc push jmp inc sbb cmp and outsl mov adc xchg mov adc aaa inc repz jle inc adc add cmp sub lret jne or and push cmp js inc mov pusha jmp and pop mov cmp cmpsl pop clc pusha adc bound inc and mov sub mov xchg rolb lds mov test outsl lock mov jle push out pop div pop jb mov (bad) movsl ljmp stc xor jle lods mov cmp imul mov aas adc or ret or push aad cmp mov pusha and cmp cmp dec les push imul xor adc jbe xchg icebp les testw sub dec add cmp inc push xchg sbb xor sahf mov adc mov sub push hlt (bad) add push push mov je mov inc adc pop add jae ret mov add jmp call sub sbb (bad) test inc clc mov pop sub or mov pop mov orl cmc lods test aam lods lret sub pop jmp pop mov fildl sbb repz fcom inc and dec inc sti xchg adc sbb inc inc clc in cmpsl imulb ja add adc stos loopne movsb ffree pop adc xbegin add ss mov add fwait (bad) sub into cltd mov mov add add cmp mov add in sub rorl push cmpsl and mov inc sbb (bad) push daa (bad) (bad) fistpl sub push pop inc int3 int int3 sub int3 push or imul imul sbb iret pop sub leave lcall add add nop sti inc cmp jb lea pop mov inc stos adc jns and xchg lock inc insb ret add cmp (bad) or add iret fldl sbb and add popa nop or pop add cwtl mov enter and imul mov add add pcmpeqb add pop jmp leave clc mov mov and inc cli or ret mov jl add sub mov inc pusha sbb (bad) xchg bound dec insb adc sub add shlb movsl mov lods out shlb add dec ljmp das mov sub bound fisubr or inc js dec add pushl jo sbb adc and mov jmp pop std int3 push scas test add jl jbe test cs scas jne or cmp and jle (bad) sbb jne adc sub inc inc sub lods add inc inc sbb jo addl nop (bad) shl std adc add inc sbb mov add sub xor pop add jmp mull adc aam mov xor sbb mov lods mov rclb fisubr ss mov xor inc mov pop and pop popa dec ss sbb cmp rolb adcb mov xor ja and push pop and xlat cwtl or adc sbb mov das add cmp dec popf mov lods inc cmp ss cmp addl mov and cmc cmp andb xor test xchg and (bad) lret xchg add xchg movsl pop aam cmp sub inc test dec fldl insl push cmp pop adc mov fistl jmp sbb push outsl pop cmp mov into mov jae sti rcrl cmp loopne fbstp inc lret sub in cmp std pop ret and jae inc enter xor add and add dec adc pop lds push add jg push mov mov add cmpl ljmp inc fwait mov mov outsl and adc loopne and lea gs or inc add fs cld cmp pop cmp add push js jg sbb cmp je cmp and pop xchg cmp test and mov loopne dec inc xor push adc jne fcoml lcall push call jb add cmp push push ja push ds mov xor mov push (bad) fs in push test push iret or (bad) mov lods adc push mov scas and add inc add mov add addl movb inc loop push sbb mov add push inc bsf add aaa jl mov std fnstenv or out cmp (bad) stos mov ja xlat mov sub push das pop mov sub testb push pop in sub pushl push add fsubrl inc and insl xor mov call xchg fscale out and or adc push pushl mov adc add inc inc mov jp hlt inc push test jne push lcall sbb adc or std xchg mov sub pop pop lret cmp mov imul sahf or ficoml push sbb mov and sbb (bad) scas (bad) inc loopne pop sub inc add push ficoml test jecxz je xor inc xchg push ficoml and add or or cmc call add xlat jge imul mov sarb fs lock out jmp inc add nop cmp jl mov add mov xorl cmp sbb xor ds xchg push mov popl push js mov lods (bad) jecxz das in roll loop or inc pusha sub cmp mov sbb rcrb add or jmp mov and call cs and and and adc out outsl test dec faddp test ljmp insl mov xor out aad xchg pop gs mov leave inc (bad) mov (bad) testb cmp cmp cmp sub inc pop mov inc icebp ljmp sbb sbb cmp (bad) fldenv push jmp xor mov mov das sub cmp sub xchg inc cli je push push push cmpsb pop std pop add (bad) cmc cmp jne decl out sbb movsl cltd add push mov mov loop jl inc in dec scas mov or mov inc and stc movl xor mov or out ss mov adc cmp pop fistpl insb add ss es push dec ret push inc dec adc imul inc jb jl sub (bad) (bad) fisttp mov andl je mov or fadd inc incl or xchg loop mov pop test mov cmp push xchg repz jmp ret jecxz lahf lds js mov (bad) fildl push test inc and lods es mov int cmp inc xchg or arpl fidivrl jmp add (bad) pop inc ror jne lret std je mov je dec je jl dec jbe add mov or sub fdivrl aaa pop and sbb sub mov (bad) daa cmp mov xor adc leave sub mulb out add and sti js mov dec adc sbb pop mov xor cwtl pop pop hlt push sub mov pop cmp xor stc pop insb cmp cmp xor aas test or jae call les lock lea xor ss mov popa and ds into inc loopne jle dec mov (bad) jmp cmp es jecxz and mov xchg jp and mov push aaa add sub movups add and and adc jle int mov xchg shrb (bad) arpl cmp sbb push (bad) add add stc push aaa cmp mov (bad) push sub vpsubb add cmp jmp push (bad) or (bad) lock or or xlat xchg push and loop xchg enter and jmp mov xor add inc and dec fsubrs sbb fldl (bad) pop insb jne add js imul or in lret xor inc mov push push xlat adc mov std add ja push push push push cmp pop push sbb lret (bad) or fiaddl rorb xchg fisttp xor subl add jne aad cli add std or cmp xor mov jge dec (bad) ss jge rcl push repnz lea or hlt pop add jl or xchg pop cmp test mov or cmpb lea adc lods andb (bad) ds test add inc mov cmp inc or pusha pop xchg jle mov ds push add je mov test addl or adc mov call add fdivrp add idivb add jg mov push mul jg pop jg in pusha sti testb pushf inc loopne subl jge addb inc xor inc mov int3 les orb jmp (bad) dec sbbl negb ret pusha icebp or cmc push inc mov lods sar xchg das inc push aas push fwait push loop dec xor ds cmpsl incb jmp sub or je xchg pop daa movl inc icebp jl xchg dec add adc jae lock pop mov sbb mov leave imull push mov push out push cmc push add jno repnz adc pusha gs sbb add jo cs jge jb scas (bad) roll add add mov mov mov add and aam xchg jnp daa mov mov push pusha adc dec sbb js push movups inc icebp mov (bad) and push mov out in ljmp or sub shlb fbstp (bad) mov push sub or lock jo adc sbb dec adc inc hlt mov lock mov test (bad) lea adc lock pusha std jmp clc pop pop pop mov mov xchg sub pop push push cmc nop or cmp xor pushl call add cmp jl into rolb test arpl mov inc insb sub adc insl shll int xchg ret cmp sub or xor adc add mov rcr test and ret inc test jl test xchg das pop mov or outsb push orb wbinvd les add jmp push inc mov sub cmc and or jne push outsb adc inc push xchg inc sub jmp inc xchg or push andb fcom mov clc push sub or sbb add ss pop pop or loopne mov and pop lock or icebp inc dec or popf add nop add mov jo outsb jecxz xchg addb adc in fwait cld add fadd mov add adc pop mov inc stc add test (bad) sub cmp rclb test cmc or xchg pop clc (bad) (bad) (bad) sub lret cld shr iret imul sub mov dec icebp adc or mov stos hlt arpl push add inc sar fcomi ret or je cli add cmp add and cmp add adc inc mov xorb (bad) call call add shll pop push (bad) mull jp andb jmp lea sbb js sbb pop cli mov push cmpsb pop add jle push mov (bad) push or jne outsb orl hlt stos mov out dec clc add jne adc sti add mov dec pop fistl cmp (bad) fiadd xor mov cmp je dec jno fcomps add and mov lods out jg mov scas dec add fwait lea dec loopne mov sbb push stos mov repnz dec or adc jbe sbb add adc fidivl fcompl adc dec pop jmp mov (bad) je (bad) add cmp je fcomip jne mov dec paddd inc mov jae pop add jge push dec mov or push xor (bad) dec faddl inc cmpsl or stos and (bad) mov sbb arpl mov ljmp roll sub mov ficomp xchg orb fmul add xor test sub shl dec je add push mov mov pop or push xchg cwtl mov mov add loop out adc dec adc push loopne fsts addl (bad) mov pushl push or (bad) adc adc in dec mov (bad) sub cmp pop lea pop imul int3 mov jmp sub insl or add scas mov and call mov imul xor jg push xchg mov aad js jg dec inc lcall mov add xor test add ss cmp xchg fiaddl sbb pop fsubrs inc adc jbe push in jmp addl aam push add xchg xchg rolb mov push mov lods jno jno and xor jge jecxz jmp ret test std and sbbl stc rorb jne push sti sub popf iret stc push (bad) mov jns jp mov cli push movsl mov inc or push icebp inc adc dec fildl sub fwait cld push mov pop out mov inc cld lock push add sub cmpsb dec std jge add icebp loope add dec (bad) xor mov lahf mov inc icebp mov outsb mov enter test dec inc push add or pusha ds and sub fdiv ret rorl pop mov mov xlat or jb sub pop shr inc mov cld sub cmp mov mov adc xor test pop inc push sbb flds (bad) cmp mov sub or push dec pop imul pop dec stc (bad) arpl test fcoml es add pushf in jne lods nop fisttp dec mov add jns sub add popf ss and movsl test sar add adc inc mov cld ljmp mov mov scas (bad) andb mov fisttpll add inc pop adc pop sbb adc mov mov jmp sbb nop mov lret test dec aas cmp insl mov cld xor or mov jnp or clc cmp add inc push rsqrtps das inc fidiv pop dec and pop xor pop mov incb pushf push sbb (bad) clc out rcrb inc cld stos xchg inc aas push sbb dec repnz dec dec out xchg shll dec outsl push dec dec xchg or push insb pop or jbe sbb or mov not add loope or mov dec add or push cwtl movd xchg mov push bswap mov and cmp push into adc lods popf setns push pop push push fs inc les inc sbb push and fidiv cli xor add pop push pop and lcall pushf and jge into mov lea mov subl or inc sub xchg dec (bad) icebp ftst pop and test cmp adc (bad) lock stos mov jb push jne mov cmpb jne jmp add nop outsb xorl or insb or xor loopne shrl dec jae adc (bad) dec fs out adc in adc sub or pop in sbb cli jmp or je je mov mov push cmc ja dec (bad) iret jne movsb ss mov dec pop cmp cmp xchg sarl out jbe mov pusha sbb jne pop push push pop xor into inc stos or xor ret call mov sub icebp pushf loope jp and popf (bad) fcmovnb inc std dec decl pop cmp and je out es mov jno and mov decb jne div and cltd jmp mov imul mov pop xor sub pop and addr16 jp mov mov xchg mov adc and insb cmp mov or into xchg or mov mov or mov arpl and jmp insl repnz mov aaa (bad) pop fiaddl das mov repnz popf faddp or add aad xor inc (bad) mov jo sbb sbb or and sbb orb (bad) cli inc add loop ret xlat mov call sub movsb adc imull test push ja jl js je mov cli push lea jo inc insb gs test aam inc lea sbb xorl mov push pop inc lock inc or or test inc mov mov test jb dec mov (bad) and gs pop and inc cltd jae lds or add xor xor clc fistl cmp pop and or pop clc test add loopne push sub cmc dec xorb movapd (bad) stos jno add (bad) pop add (bad) or test cs sbb push mov inc hlt and pop mov loop pop (bad) or lods popf pushf pop sub je push popf pop adc movsl shll add add clc pop testl push in bound jo gs push or leave jbe pop rolb cmp mov sbb adc jle fnstenv lods pop fstl cmp adc es add pop mov nop mov push adc rclb rorl aad arpl add lods movsl sub jo dec ljmp mov negl dec insl mov pop sbb jns daa mov inc lods dec inc call push fimul and dec adc push or xor push push push imul adc or sub mov cmpsl test sbb xor insb mov clc push jmp cmp insb and push jbe jno addb add xor sbb and int push loopne ss adc dec test sub fcmovbe shll mov sbb outsb orl sub rcrl cmpw iret adc test lret cmpl insl adc js or adc mov loopne add and call add ljmp jbe dec insb test ffreep cmp jb jmp sti jb clc movsl cs ret sub (bad) jb and or int3 add jb out (bad) push add add xchg adc clc lar sub mov pop sub adc push or dec cmpsl orb mov cmp xchg inc and insl add shr (bad) push add push push ret movsb test add mov ret and pop mov (bad) rep mov mov xchg push pop adc mov mov cwtl icebp mov add pop push mov movsl scas add cwtl fidiv and leave nop lahf push push or insl shlb and or nop xchg cmpsb mov and or lea fs mov mov pop dec mov pusha pushl sbb call daa pop popa stos insl arpl inc je rclb sub sbb out xchg sbb or sti (bad) mov push mov or cmc (bad) shrb insl or jp pop xor addb cmp mov addb js ljmp mov xor xlat or sbb aas sti add sbb cli test inc pusha pop cld dec jbe lock inc fs add add adc jecxz lret jge add push pop out cs jnp mov push pop pop adc loope push fs push movsl jmp aaa add pop and movsb je push sub lods add cwtl sub popa or or arpl mov pushf cli shll jnp test lods movsb addl out adc out jne and pushl push push mov push mov pop xor or es cld adc mov and push arpl push inc add jmp std pop stos roll das sbb and cmp sbb jge movaps andb cwtl (bad) loopne mov (bad) aam pushf jne repz push and lea mov xchg xor ljmp and dec add inc cs shll adc jo test (bad) mov test jbe lea int push fidivl push adc add int3 mov (bad) pusha scas test xor rorb adc jl mov (bad) ds (bad) cli arpl testl pusha mov pop mov add xor sbb test stos adc in bound pop and mov mov les incl sbb sbb sub push adc ljmp (bad) idiv rcrl or gs mov mov leave pop sbb pop jb xor cld adc mov aad jecxz push jns adc push dec test and mov add add cmp xchg cmp xor mov in mov xor mov dec inc insb insb mov iret xchg out xchg add add add dec sub mov xchg sbb sub mov pop adc in lret inc sbb lock jg xor and notb sti imul fstpt outsl push imul ficom lds arpl negb adc sbb leave pushl adc bound pop pop inc cmp rclb inc push push adc fist sub mov xor mov xor adc push inc gs test dec and inc add pop cmpsl arpl mov cmc mov push and pop or sbbl push and enter sub enter xor addr16 orl cmp insl or inc pop dec and push orl pop pop pusha fs enter jo enter js (bad) mov mov andb or mov cs pushf mov movsb test add add xor pop add or and lods adc mov das mov gs jle add fldcw adc mov in sbb sbb pop cs enter inc xchg and pop adc scas aas (bad) cmp sbb cmp xchg inc dec jne test aaa out je mov mov or xchg test sbb jb add sub or pop bts jmp jbe jo adc call or mov jae add pop adc les pop push jg sub pop adc outsb xchg adc adc pop xor aas jge (bad) cmp iret aad int3 push jmp test cmp or dec mov jne mov mov inc inc rcrl sbb adc or dec clc mov cmp out mov jne (bad) push stos jge push mov pop add lcall (bad) fbld fdivr mov clc or mov inc (bad) stc (bad) add gs pop sub push enter (bad) pop sub or sub jg xchg xor insl add adc mov or lds mov dec int3 das loopne and fadds aam sub cs push push adcl ds je push adc adc add aam or inc add sub icebp cmp pop cmp inc fwait jle cmp push pop ss lret test add es sub cmp or adc mov ret in xchg test inc (bad) jnp push (bad) fsubs or pop cwtl andl push rorl test lods jg int3 add push or sbb es imul dec aam adc and loopne add xchg jne inc and leave jo xor pushf mov push jmp test cltd mov sahf (bad) adc rclb (bad) aas mov (bad) jg mov add sbb or bound xchg insl mov push scas scas adc testb mov popf std jle or pop and lret add adc adc stos ljmp mov inc adc dec push xor int3 or dec cltd (bad) mov ljmp mov adc sub adc jo stc inc adc jns pushf ror inc mov rorb add leave (bad) cs rclb dec sbb leave sbb mov icebp adc pop lock rolb add nop data16 out lcall pop adc jo add jle cmp xorb inc orl orl mov jne imul or test add mov lcall jmp or stc sahf mov jb orl pop jmp sub cmp mov es add inc les jne fadds xor mov add lods adcb movsl pop sbb jle stc add fsubs ret push mov sarb sub mov test hlt mov test jne (bad) adcl and xor mov adc add ds into out and add mov mov add jne sbb cld cmp jnp lods push adc sbb clc dec mov add in repz and add sbb out add packssdw leave std adc add sbb or adc add or fldt fdivs mov add fdivl out mov push sub (bad) xchg and cmpl add push inc sbb shlb mov pop and xor xorl dec testb cmp test push add (bad) out and adc scas (bad) add mov push or lock ret insb ja adc mov ret inc adc dec mov push sub mov add dec mov jo push adc dec jl lds inc mov xor fiadd mov fisttpl sbbb sbb movq push cmpl bound cmp jne add add hlt ds or aam mov inc jl sbb aaa pop pop pop pop pop adc adc subl imul mov add test xchg popf rolb and popa sub or pop add add icebp mov jmp cld lcall loope fwait and mov inc pop sub ret mull loope add sub jo sub cmpsb and xchg and shr rcr or jne idiv divl cmp out jb cmp sub jge or cmp jbe dec sub sbb push mov sbb and outsl mov ret btc add lcall mull and cmpsb push or loope shll adc hlt pop adc push shr mov scas jne jmp add push pop test or push add sub fwait mov out hlt movsl sbb out int mov add push icebp mulb ret mov mov mov add mov mov subl aas test inc je xchg pusha mov insl adc mov and inc (bad) out push add movl add imull jne adc (bad) sahf push jne dec nop test and (bad) sti inc rorb sub ljmp lea pop cmp xor js cmp adc and mov in jo mov adc inc and test inc bound push sbb int lret iret or test mov movsbl xor mov adc mov andb mov jmp push ja sbb add outsb je cmp jae mov dec je add push add sub sbb xor das add pop rolb imul ja fldt test mov fadds xorl lds loop pop addb cld jbe popf ret imul pushf and daa sub popa cld decl adc idivb and add xchg mov nop adc int inc add popa mov inc jmp and fldcw xorl ds popa gs push enter pop push cmp jne add jns mov inc mov mov xchg es insb je mov and cmp jb cmp ja add cmp or (bad) cmp es adc or mov jb idiv rcrl outsl and add aas shr adc test test jp push cmpsl cltd test pop je jo dec mov test outsl insl dec fdivr ret shl push or test pop nop divl lret jne cmc lea adc xor inc push ljmp js paddq or jl jne fcmovnu inc cld pop fldt mov shl fwait mov cmp or adc faddl aam xchg sub faddl aaa push std cld jmp or inc cmp loopne sbb mov mov xor pop inc xor mov es test xor xchg fiaddl push mov sub sub mov jae or gs jle or lret (bad) sbb pop test imul ja dec pop jl pop pop pop sbb add test cmp lods mov or dec fnsave mov push imul dec incl std cmp push mov mov loopne stos ja insl mov add orl mov jle imul adc pop push shrb mov xor sbb int3 add sbb add or add push add inc mov adcl mov cltd fs pop loopne aad mov test mov lahf mov xor ret bound cmp pushf insl cmpb (bad) shlb loopne mov ss xchg inc and xor xor mov pop pop (bad) test add repz call mov dec mov mov das cmp adc add mov cld adc dec loopne sbb push in xchg push sbb and lcall dec popf into cmp mov mov test jno sub inc ret cmp push cmp rclb jmp aam nop addb add mov loope sub and dec mov inc push iret inc push in cmpsb sub xor lods imul hlt xor in mov mov mov stos fwait loopne add scas inc dec test dec mov fcom into addb aam ret push mov push aam dec lret ret pop (bad) xor mov mov add pop sahf push add cld adc (bad) lret mov inc or je sbb inc and mov sub jmp jmp fiadd adc fndisi(8087 sbb or inc inc sbb imul pushf ret incb jne mov add clc push or pop jecxz xor lods mov inc int3 arpl imul and (bad) fadds jb pusha ja mov jmp xchg push adc mov jo dec sarl or fucomip jge cmp jle and decl fcoms jge lds add mov cmp (bad) insl mov add jbe inc cmpsl sbb pop fmull pop mov push data16 push xchg xorl pusha jg (bad) pop ret sbb sbb cmp or jge and and xor lea jne adc mov mov cmp bound pushf js icebp pop jmp pop sub jns push xlat adc call rol outsb mov push hlt fiaddl push mov popa insb stos add (bad) or arpl and addl push outsl pop mov and dec pop or push dec dec clc adc (bad) pop mov loopne movsl pop ljmp jo or add out and add or xchg fisub lahf fcmovnb or add shld shl xchg loope sbb and shl aaa pop cmp (bad) mov cmpl pusha inc lcall in push xchg inc or or sub into mov call dec push lea outsb test sub lds or je in add pop xchg icebp push or adc push push jle shll je subb pop idiv aaa sub and sub and or fstpt add inc mov and addb js sub nop xor pop loop stc push in out adc xchg out hlt movsl add mov daa push add xlat push mov (bad) push sbb fstpt lret icebp ljmp jae sbbl add rolb inc fstl (bad) jbe push nop lods xadd cmp jb jb outsl or pop mulb mov lea sbb rcr mov cmc aam pop loopne jle add push imul push test test push stos in inc inc insl push ret lds addb push inc jne add sahf add mov test bound cmp mov xor or sub sbb push jl bnd mov add out lret ss (bad) or add pop sbb sbb pop or aas adc mov mov cmp jle loop add bound jno add leave cmp add sbb and inc sub xor adcl mov mov shlb jne (bad) sub or movl or mov cmp adc cmp je gs loopne jne cmp je dec aaa and pop aam jp in push popf rorl nop test mov andb push (bad) std mov xorl push pusha xlat cmp inc sbb pop (bad) mov rolb je mov dec add add mov cld (bad) or sbb jg jne mov popa ret out add mov fistp mov lock cmc js mov outsl xlat xlat lock cld ljmp or and mov adc sub jo jmp jno or jg mov fmuls addb ret sub je test push push cs and testb incb add inc pop in jecxz pop add and mov outsl inc dec dec inc or loopne cmp cmp mov adc (bad) mov add inc mov cwtl out jge lock cmpl jae fidiv and in push adc xor add cmp mov inc dec (bad) cs or xor sub inc push mov pop xor push into push mov inc cmp rcrl js pop add into mov cld add inc ror xchg addr16 jne sub add dec sub jo sbb (bad) cmp cmpl adc and bound data16 and adc dec test call and mov and push std into mov cld jno outsl and and inc cmp xchg shl sbb out and ret add and lds push cmpsb mov mov sar jne bound aas add ss fnstcw out mov inc mov add jo jle loop add push (bad) insl loope insb jno push push jg sbb test push js mov and jmp loopne test into roll jl fcomps ss btr jl loope enter jg lds adc xor sahf add pop push cmp jb mov lock out cmp jge cs aad jnp in int3 add mov sbb and jno repz data16 sbb inc xchg mov mov outsl add adc lret sub imul imul jb loope xchg mov pushf xchg (bad) outsb jnp out xchg adc cmpl dec dec pop pop adc cmp jae sub push adc insl jg orl cmpsb dec rol push push or add in js popf popa sbb mov inc mov jge cmpsl pop pop push dec adc mov xchg sar jb pop fcmovnbe jmp rcrb cmpl cmp loopne mov push pop sbb push pop test sbbl jno cmp nop adc loope and fwait adc fwait push clc call pop lods cmp imul or dec jno adc add mov test sub jo inc pop sbb inc push repnz ljmp scas pushl test mov push movsb imul sub loope mov (bad) in stc jp sub roll inc jle inc adc pop mov mov stos and rcll sub push add sub les push pop jmp (bad) or pushf cmp (bad) cmp popa dec fiaddl fsubr and jmp and mov sub aaa sbb adc in pop push rcrl (bad) mov push jno inc jge fmuls add imul ljmp xorl dec or sahf jno fistpl dec adc push repz pusha adc jl dec and movsl mov push inc or ja lea jge sbb inc mov fs cwtl rclb pop sub jo,pt aas arpl sarb subb inc mov push adc roll sub aaa adc push in cmc popa jno shlb inc pop mov scas dec or jnp inc rolb out sub iret outsb hlt sbb sbb es iret add movb adc aas or inc mov pop je cs pusha adc push xor std push dec loopne push hlt sti mov mov inc xor aas push xchg and test push loope and cmpl push cmp jl iret jg inc outsb addb dec hlt add testb push cmpb sub inc hlt pop pusha mov inc or push subl dec or nop (bad) pop jb add pop adc loope jmp mov (bad) outsl add es ds enter mov mov jmp add repnz dec adc mov adc daa adc add jmp shrb push and or mov bound push (bad) sub pop mov xchg mov imul pop or sub pop mov ret or inc add jp test gs fcomps icebp pop jle inc dec add adc decb mov mov ret adc test add cwtl jle aaa int3 or cli mov pushf dec test add add roll xor rorb leave cmp xchg and pop add add (bad) cmp fsub jae push repz jg cmc cmp jg inc push inc xor jg xchg add jle ror and clc sbb jbe and mov push hlt mov xchg jbe mov push and jg or lcall and (bad) hlt xorl leave sbb jns or or ja add enter sub add arpl (bad) cmc sbb mov and dec (bad) and adc ret push pushf dec add or adc push push imulb and sbb push movsl xor sbb add add add mov gs rcrl test clc push aam xor les test ljmp jp adc push push sub loope inc mov mov mov jg (bad) call cmp je cmp and mov push adc and mov testb lcall sbb in scas jne outsb (bad) shlb jbe push imul add pop push je mov test lea je sub pop adc daa in loop or push inc (bad) je fs xor sbb notl shr jmp frstor push in add es sub call push sub pop push xor insl mov push mov pop adc (bad) int cs lods push mov mov add push adc and sub adc mov adc es push inc xchg add ret push add loope dec cld add sbb jle out outsl jge adc popa lea adc cmp sub out sub (bad) mov jnp leave sub test mov and xor cwtl lock mov lea ja daa xchg mov push jnp mov int3 ljmp sub cwtl mov xchg dec mov mov enter pop rol bound shrb sbb mov xchg insl inc xchg cmp or dec imul mov sub js fcoms insb in mulb push cmp fsubrl mov cld in mov or inc loopne jbe leave sahf mov fildll cmp mov xchg pop aam inc sbb mov fist les pop xchg rolb add jb add adc and pop sbb or add lea dec in add arpl ret push test (bad) and mov mov push jno adc pop ret in xor push add or in nop push add mov mov lret adc sbb add push add cmp and xor or or adc shlb sbb mov and pop cmp pop bound jo jmp out push cmp cmp mov adcb test fsts xor ss pusha out movb sub mov cmp add xchg (bad) cmp cmp mov pop mov push test dec and xor or add mov lods xchg cmp cmp or int out movl inc cs inc lock sahf out add xor mov (bad) or add imul (bad) pop jmp in addl adc add push and jo jnp xchg sbb test std mov cmp mov adc inc negb sti add aas das cmp mov or add or sbb or adc xor (bad) mov cwtl cmp or add sub jge or or cmp out and jle movl add sub push mov in and dec xchg js push inc adc or pop jns and sub and cwtl xchg or jo xchg ss jle inc mov xchg dec mov xchg sti jle add add or push shlb xchg or rclb insb xchg fildll repnz add mov cli cmp and cmp scas test shrb lods xchg jnp int3 xor dec mov jo push push insb or push movsb mov adc mov mov adc loope popa (bad) push (bad) dec add add lcall cwtl add xchg xor mov iret or xor rorl lcall outsb js int imul dec (bad) xor xchg stos rcl push dec shr imulb mov pushf inc xchg or or sub add test (bad) dec inc xlat in (bad) dec inc dec aaa cmp mov jb imul jg ljmp inc popa push or scas int adc loop and imulb lret lfs add das inc (bad) (bad) adc mov sbbl scas cmp outsl pushl add insb popa je and add inc outsl jo jb addr16 outsl (bad) cmp and popa outsb sub and loop std popa imul jg add or scas or jo or or push stc rorl add add add add popa mov mov or push or add or sahf scas int add adc test lods jmp adc adc add add or sub or mov add sub add adc and xchg and add xchg add arpl and push inc push add and and or test enter std jmp outsl jnp adc pop or or or cmpsb imul lcall sbb pop imul imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul rcrl adc add (bad) xor push rcl xor mov dec (bad) xor jae repz xor rorl or xor dec lret lret sub stos xor (bad) xor imul (bad) xor rcrl sbb xor pop fcmovnu cmp mov mov (bad) xor roll pop xchg dec inc mov dec (bad) xor addr16 (bad) xor rcll pop xchg xchg push dec (bad) xor push xlat xlat aaa aaa mov dec (bad) xor ja div (bad) xor rorl jg xor dec iret iret das das scas xor (bad) xor outsl outsl out out (bad) xor rcrl pop lahf lahf pop dec (bad) xor pop (bad) aas aas mov mov imul cmpsb imul imul cmpsb imul imul inc addl cmpsb imul inc add ja add addl add cmpsb imul cmpsb imul negl or dec rcll or pop pop sti lods mov add add nop cmpsb pop or or sbb xchg mov push mov adc adc sbb sbb fs sbb test sub sbb inc test sbb ret popa pop icebp fnsave pop adc adc xor or adc inc xor push pop sbb xchg or sbb pop sbb sbb mov pop mov cmpsl or jnp adc pop cmp dec sub xor repz sbb add mov ret loopne jae roll push imul pop roll insb xor dec sarb add outsb sub popa jb and insb gs wbinvd adc push test sarl adc pop sbb and sbb shrl xor stos outsb xor arpl jae imul jp jae add into popa mov mov and add paddusw aam or xor inc popa add aas add add add add imul add push fwait xchg add pusha pop mov loop fiadd add jecxz (bad) jg sub push outsb imul outsb and arpl je incl fcmovnu outsl outsb daa cs imul push pushl lea dec jb dec inc push dec inc dec xor cs dec fistpll mov pop inc insb jae jb gs push clc orb jne inc inc insb insb outsl (bad) in mov jb js je jb gs es je insl jae cmp xchg insb adc push mov lods stos movsb lgs add pop push lret sbb and and es sub sub sub cs xor (bad) (bad) pushl xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push rorl dec or pop pop pop pop pop pop pusha popa bound adc clc (bad) mov insl add jb je jbe js jp jl jle add fwait jb fsubrl dec loopne fwait jge push sub push push adc pop add (bad) jmp dec inc push pop dec dec mov adc xor jo insb imul imul popa jae insl popa mov je pop sub (bad) and and pop push push inc and bound jns pop xor je jns or mov (bad) pop inc sbb and je imul pusha pop daa pop jae push sbb insl and insl fs insl pop ss insl and lahf xor adc jne dec fmull pop mov mov imul loopne bound jne dec and jbe mov paddq imul or fs cmp bound in add mov outsl cmp jae inc jae lahf xchg imul mov fcmovnu lods ret outsl pop push insb mov (bad) std insb popa outsb xchg sub or in das daa sub arpl sahf sub or mov cmpsl popa xchg outsb push inc pop in insb xlat sbb outsl jb inc dec ljmp (bad) stc data16 divl add ret (bad) add push cs adc es subl insl ret push push outsl or cmp setnp jnp xor lahf pusha fs (bad) cli into insb gs (bad) int or jecxz nop lock ja outsl mov or in push fs mov sti or jo std jbe xorb in mov mov (bad) mov popa pop pop sub das and imul push fsub pop or shlb add xchg sub or andl movsb popf and insl push push fistpl jne mov xor rolb cs fadds jno jae xor (bad) hlt sub enter jo jge je out nop ds ficompl inc ja repnz nop pop and xor mov mov xchg gs sub xchg addr16 jae imul mov fs fimull mov js roll mov sub imul outsl fnsave imul sub jo scas loopne addr16 and jne mov ret ds xor and into cmp dec adc jb mov mov jae jo inc outsl cmp jne add mov lock xor test cltd fs add and add test addl add (bad) add nop add cmp add (bad) and push add add test add add xchg sub xor sub incl adc adc add add xchg mov add adc decl jo adc lods addb xchg mov (bad) nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test (bad) (bad) ljmp scas scas mov mov mov mov mov mov ret (bad) enter dec lret int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call jmp out out lock repnz cmc div clc stc cli sti cld std (bad) call push push stos lock xchg and nop stos adc xorb mov add dec cmp test add add or mov fnstsw add das das or dec sub pop fstps add jbe xchg loopne xor jno mov push in push imul dec ja pop mov lds pop pop inc out imul adc imul dec sbb fidivr cmp inc inc mov fsubrp aaa jns aas cmp and fsubs popa inc inc pop push fistpl lds movsl adc push addr16 imul or fdivs jne inc mov aaa das daa and push mov fwait cmpsl add bound mov andb inc insb in imulb and cmc sarl mov inc pop mov push pop inc fisub mov fildl and adc nop mov adcl cmp pusha mov andb sbb (bad) sub pusha insl xchg jae pop add ja cwtl inc fmuls or dec jo and je jb fsubs bound dec fs push sub jns mov mov in push mov dec inc and pop adc sbb mov (bad) rclb and fs ret aaa dec xchg stos clc sbb dec add pop sub pop imul sbb push jg push jae testl xchg ja pop (bad) dec xchg mov jbe ja rsqrtps jnp dec add shrb (bad) jns add fs xchg adc inc ret xlat gs test and imul add xchg cmp and add insb xor jb dec adc arpl add mov jg fwait mov or sub fsubs outsl inc sbb (bad) fsts or mov add cmp add jmp add sub sahf imul xor jle out fldt add xor ds hlt dec xlat mov add sub lods jmp sbb sub sub fiadd cmpsl cmpsl and jbe jmp cmp ds push das inc lret daa pop pop shrb pop loope push or sti je adc notb jo ss fptan fisubrl or adc or and pop into nop cli loopne ds ja sub imul cmpsb imul jne test mov ret lcall jl je cmpsb jmp jo insb add lcall dec dec inc imul negl dec add xor (bad) xor adc add lcall hlt lock imul imul cmpsb imul adc mov lods xor (bad) xor insb dec and (bad) xor fnop les in fdivrl mov xchg js xor ret jae cwtl je or clc aaa fadd push pop xor hlt inc gs push outsl mov lock outsb pop push cmpsl jb pop xchg test dec lods jae push insb call arpl push imul jo cmovbe rorl outsl js push inc push lcall dec cwtl xor add adc lods mov cs (bad) push sbb and xor loope inc inc dec push pop add into jbe cli outsl arpl push sub add pop (bad) incl rcll push adc cwtl sbb add adc fnstsw dec add push add jmp inc cmovb popf push arpl adc jns mov insl jne scas pop imul adc jne (bad) add rcpps sub dec pushf xchg mov jbe insb adc jmp inc xor or call outsl insb jmp (bad) data16 mov bound mov adc push dec jnp jns mov scas sbb fs add pop pop outsl jb lret sahf jmp gs out clc add pop sub or jo loope lods sbb xchg das or xlat inc add pop into push sub scas pop ret xor push mov insl add mull inc and cmp dec add sahf jmp out pop ja xchg daa dec and push in scas arpl outsl add adc mov outsl daa jae (bad) push adc sbb xor jne inc fsubrs outsl add cmpsl jo outsl (bad) sub mov jb ja jae fnstenv rcll sbb inc addr16 insb scas sbb pop sub popa fwait cmove and add jecxz mov push clc faddl inc and xorl jo and lea push (bad) dec (bad) fisttp add adc adc pop inc cmp shll aaa jo sarb or mov sahf fisttpl or inc xlat je xor inc and sub pop flds sbb in scas jmp xor xor ss xor or xor add sbb push popa insb (bad) das jne xchg pop or jae js movsb out roll inc push fldt sbb addr16 xchg scas and mov or daa ja pop sti push outsb insb mov sub sub jne add adc nop jge clc mov lcall nop or and push push push add add pop jecxz jl call dec and out sbb sub mov test dec ja out push add or or sbb add notl xchg and (bad) lret imul jo fadd xchg aas adc push push fsubrs add and xchg lods push push sub cmp xor leave ljmp add or insb ret or lea insb mov iret and add push add push leave inc add mov sub sarb fildll imul ret add (bad) xchg push jns pop shll (bad) or dec divl pop or mov inc and jne inc dec pop popa cmp pop je icebp insb add sbb jne fcoml adc pop xlat mov inc sbb sub push and inc jecxz fild sbb popa lds jmp dec jae das inc pop push xor inc (bad) insb fnstenv push sub mov mov js pop (bad) ja cmp pop imul test pop cmpsl mov icebp pusha xchg fwait popa lods mov mov pop inc adc popa adc imul push inc ljmp std outsb lods imul add inc lea outsl mov xor sub scas inc cmp mov sbb movsl imul das xchg test inc jae daa mov xchg pop adc xor adc inc insl mov aas insl loope inc nop mov sti inc popa and and insl pop lea pop inc bound sub xlat das jns push xor fdivl xchg insb std pop dec pop pusha rcrl jbe test in push pop test add ret xchg cmp das dec adc inc mov jmp sub inc ret sub xor push jmp jo or lret bound nop addr16 jne or pop add add dec fadds sub xchg or add adc and inc lods mov or add xchg mov or popa test notl dec loope mov xchg (bad) dec movsb add xchg roll and out in or addr16 add andl adc ror das cmpl sub xor gs in outsl popa inc sbb gs jbe xchg dec xchg dec stos jns fimul sub jae or adc ret pop (bad) (bad) pushl xor cmp cmp aaa sub sub (bad) std (bad) cmp xor bound data16 outsl cmp inc inc xor and fcmovnu (bad) inc inc inc daa aaa xor ss xor xor inc aaa aaa cmp (bad) jb fs outsb loopne aaa test lds add loope inc inc jl imul inc lds je fisttpl push mov je dec shrb test aaa cmp adc adc and pop (bad) jge and or mov push insl lea fadds inc rcll push (bad) mov mov mov outsb arpl pop je arpl add or dec jb dec orb mov test and inc inc and pop or inc add (bad) jae (bad) push push dec and mov dec xor aas add dec jge and add cmp fbld sub jge mov aaa outsl xor sbbl out jnp mov popa add or jmp in or pop pop jae cli push (bad) negl mov test popa add mov arpl push (bad) rolb mov and cmp xchg imul iret xor daa add xor orl xchg into adc (bad) add in in inc jecxz std enter xchg (bad) incl sub push push inc push xchg jmp test aas mov push sbb jp cmp jbe pop out notb sub bound push sbb inc outsl je jo bound add mov ret inc push mov pmuludq pop fsubs xor and sbb lock jae adc mov add movsb sbb add dec shlb sti add daa mov xor fdiv inc scas fwait jecxz push mov pusha xor xor jg or jg xchg in sbb and dec adc dec pop add or and cld mov sbbl pop psubb add push fadds sbb lahf or andl ret and pop jg push leave test and mov jnp or daa fldenv pop fdivrs inc pop lds xchg mov pop int3 das mov fxch cmp sbb test pop popa out inc sbb ja sbb inc pop cmpsl inc pop fldln2 sbbb sbb aas add pop bound sub inc inc bound fs sbb sub add adc or and negl jmp inc arpl sbb stos and sbb loop cmc lret or das sbb or add nop roll pop aas jo inc sub pop orb enter imul jg orl add ja mov out sub nop mov add sbb call or pop jl fadd inc pop add and inc mov aas negl or enter leave dec pop leave lret jmp sub and ret aas inc arpl sbbb je cmpxchg test xor int3 mov fsubrl repnz adc xor cs add mov nop mov lds sub (bad) fnop leave add dec out sbb mov xchg dec data16 nop push je jbe adc xor inc inc enter add mov or cmp lret stos and sub fsubs nop pop cwtl stos mov test inc mov outsl nop sub outsl and in hlt in push ss or fucomi xor mov xor xor push sub xchg addr16 sbb pusha xchg sti push mov (bad) (bad) jg xor mov inc cmpsb xchg daa or add cmp cmp dec insb sarb xchg jg mov pop dec mov sub jbe mov xor inc outsl lods adc mov in and in out (bad) cld movl mov or aaa outsl mov and mov mov rcrb pop xacquire pop push dec js out fstpt push fldcw inc add stos stos fs sbb xor add sbb outsb gs jno shll sbb add (bad) (bad) mov or pop or fs (bad) lods inc mov jbe inc ja push rorl and add push jno xchg and aad insl gs outsl or xchg in dec adc bound insb pop add in outsb sbb es (bad) je in inc shrl outsb jns sub imul std jns bound jae push outsl jb bound das jae add sbb pusha and mov fucomp mov pusha add xor testb popa push out mov (bad) pop jbe mov mull data16 add pop jo aaa imul xor cltd mov das xor sub outsb sqrtps sub mov ret push add mov sbb push add cwtl pop or jmp adc pop out sub cwtl add mov add insb das push jne xlat lea pusha inc add or pop adc push pop roll lcall pop pusha pop xlat popf xor push push pop or orl pop mov enter inc pop loopne fsubs aas push pop pop pop sbb lds fimull push jne or cmp rolb push pusha orl pop sub orl mov or mov fsubs lock pop push or adc push pop jecxz sub fsubs pop je xor enter orl pop rorl ss pop test sbb pop call ret pusha addl pop cwtl xchg push sbb pop jl cmp fcomps insb mov lahf pop pop insb pop sub fs push mov mov push sbb jg pop inc push sbb adc mov and jb xor les insb mov decl pop bound and fs push movsb lar (bad) mov push sbb in pop pop roll insb pop pop sbb xchg incl sbb pop jp cmp aam insb mov call pop push sub jbe roll setg or add ss pop push push (bad) mov roll pushl pop jbe ss roll insb int3 decl pop popw xchg insb mov pop lods pandn pop inc pop in jg fsubs pop pop pop push pop pushf (bad) fsubs or ds pusha orl outsb pop orl femms pop mov pop cld decl xor push pop adc cmp pusha orl pushl fsubs popa pop and mov or pop fcoms pop sbb or (bad) jns cmp sar imul pusha pop mov pop mov imul outsl mov pop adc shlb pop jne xor fsubs gs and mov or pop inc pop sbb ljmp sbb pop cmp pop (bad) insl pop sbb pop mov shlb pop dec pop cli decl test addr16 ret call pop xor (bad) (bad) fsubs adc roll sub addl pop mov xchg pop insb mov imul sbb ljmp sub fsubs push mov lahf mov ss ss pop idiv push pop orl pop aaa pusha inc shlb into jmp push or fsubs pop scas pandn pop inc pop out decl insb mov pop pop pop sahf call pop aas pop fdivrp mov push sbb das pop mov pop lahf popl dec pop (bad) push xor rorl leave push xor inc icebp leave push xor inc leave cltd fnstcw stc lds in xor inc leave mov int xchg or lods in and fstl or std inc leave push xor mov and leave push mov xchg or inc lret stos inc leave push xor (bad) xchg or mov push (bad) cmpsl xchg or inc out inc leave push xor mov or inc and xor inc fistpll (bad) jg lahf push pop out adc pop movups add mov add jnp cmp bound add lahf add mov pop rorb xor pusha addr16 add sbb xchg cmp aas add add push cmp xor or out dec inc push mov jno and mov xchg aad pop jne add test bound fs dec xchg lds inc jb inc je and lds leave adc je mov or fbstp cmp add and icebp js sbb pop incl dec mov int add decl add aas loop push aaa jg add lret jbe xlat mov or aas inc push gs mov test gs inc pop add push je sub out xor adc pop add add mov push lds add push or arpl out jp push rorl movsb xchg jns aas jns mov pop cmpsb fild mov cld test aas inc jle test shll fldenv cmp fimul mov iret mov sti lods mov pop pop jle or outsl jmp mov pop pop fisubrl xor sahf pop sbbb fsubp mov jle sub add inc stos adc pop test mov in add add mov cmp sub test inc das pop stos or ret ja loop test pop fistpl add loop pop add mov mov push fs pop or or testb push adc insb adc or push sbb xor sbb xor push sbb pop push pop pop jnp rorl jo fsubs xlat jb push das xorb pop (bad) pop sub push test add sahf cmpxchg push sbb pop inc push sbb into pop xlat dec dec inc aad pop invd lahf (bad) std or mov cld mov pop xchg push test pop or adc mov jnp faddl test mov pop pop sbb in mov sti sti ret les push mov jae pop (bad) pop faddl adc cmp inc jmp pop jns ret imul cld cmp inc test xchg pop orl or sbb add nop add nop xchg xchg aas lock sbb mov orb xchg add fmuls insb xor pop mov ret add add add jbe add sub cmp push add sub ja (bad) xor push add dec inc inc xor (bad) xor xor sbb dec out rorl cld rcr hlt lock (bad) xor call xor rcr aam int3 les dec mov add nop test dec (bad) xor pusha pop push cmp or cmp and sub mov add and pop jae cs xchg add daa cmc lock fsts push cmpsl pop mov aas sbb inc mov inc and or stos add adc or das mov je inc cwtl aam adc xor dec sbb fldt xor cmpsl ja fstl daa daa roll repnz cmpsb jmp das add inc push inc mov das lock (bad) ljmp xor je adc je cmp das xor xor cs cld fild xor js jb jo,pn push adc mov inc repz sti scas ret push dec insb jmp dec push push push inc push add pop sub dec add sub dec ss stos inc mov outsb outsb dec inc sub gs and or ds add outsl jp popa das xor jg sub xor and dec imul cmp or mov inc push jb cmp mov push outsl das sbb aas xor xor dec jne (bad) fnstsw push or and (bad) ja push xchg das xor sub jo sub jp push sub jae add xor push out je insl insb sub sub stos cmovnp sub out mov pshufw push cmp insl insl adc dec fdivs sub inc push sti (bad) mov sub sub je or fcmovu loope aaa sub aaa inc push add inc cmp mov push mov ja leave sbb dec or jo mov ljmp pop cmp rorb lcall popa loope aaa rclb mov inc fildll fistpl cmpsb jae mov lock add call dec push xchg inc clc fimull push adc aam sarl sbb xlat push add and (bad) mov pop push ss adc jecxz inc (bad) ret and add dec xor add xor loope test dec dec movaps (bad) push test popa cmpsl dec mov sbb jbe lods inc pop imul imul sbbb or bound adc xlat and mov jb jae imul gs rolb add inc xor add rorl je inc mov inc pop inc (bad) xor add mov add js in push pop push shlb sarl jp cli push insl int (bad) (bad) (bad) ljmp fisubl lcall ficompl ficomp out mov test (bad) aaa sub jmp and ds loop enter fs (bad) (bad) ljmp loop add test jo pop jne cmp pop jge fsubrs jl sti popf out ljmp (bad) cld into ja repz out adcl test and jne les jnp das cld (bad) (bad) cmp lret (bad) or out sub movsl push and loop (bad) (bad) jmp arpl and popf or jns jmp mov xor imul mov jmp inc dec scas std aam cwtl sub ss mov out ss jecxz insl aaa insb cmp (bad) std jbe push hlt add push js rorl aam push mov (bad) leave cmp push mov inc sbb sbb mov mov cwtl paddb adcb (bad) (bad) call cmc dec mov inc pop xor pop adc int push mov dec xchg push (bad) incl jns test jae cmp les out push test (bad) (bad) call pop xchg out cmp nop jge (bad) nop test jg fistl xchg sbb (bad) incl stc inc stos repz fdivp and push insb push insl mov pusha sarl popf (bad) pushl and mov mov fcompl ret inc inc repnz lods clc (bad) (bad) jmp sub mov xchg in ss sub addl push out mov neg lods and lock adc (bad) (bad) mov iret dec pop loope mov push (bad) js mov mov adc (bad) (bad) (bad) (bad) cli mov js mov lock mov (bad) clc or push adc dec test hlt pop loope jmp std (bad) decl aad or jecxz divl rcl gs push inc int sbb xchg lcall add cmp repnz fistl fldcw cmp mov and leave cmp out in jl (bad) (bad) (bad) (bad) ljmp orl dec repnz scas xchg loopne,pt pop sbb aaa lock outsb xchg daa loopne sar mov mov es sub (bad) push push outsl mov fsubr stc (bad) (bad) (bad) decl ja jg (bad) aam adc add fild imul jne xchg sub xor ret ja insl fwait cmpsl ret push jle mull or (bad) (bad) (bad) call sbbl or inc mov xchg xchg add mov pop (bad) or pushl jns enter test dec inc sbb or fsts test hlt dec nop sub icebp push (bad) (bad) jmp mov in (bad) jnp enter push xchg sub dec jae into cmpsl adc insl add sub cmp fsubr (bad) (bad) push icebp fsubrl rcl stos xor inc inc mov push sbb push xor mov (bad) (bad) decl popf icebp pop sahf ljmp outsl jecxz test sub cmc movsl sub pop gs insb push (bad) (bad) (bad) pushl jns xor xchg (bad) or jle mov popa add cli and (bad) (bad) (bad) (bad) out inc daa out add mov daa inc icebp xchg in jbe popa dec dec and test xchg (bad) (bad) (bad) cmp ljmp icebp push insb mov test inc loopne jle dec cmpsl movsl mov xchg (bad) lcall dec leave mov in add sub cmp (bad) xchg repnz pushl and dec mov loope dec dec enter sub scas xor movsl inc incl mull xchg lods push in inc cli or lcall loope scas (bad) int3 (bad) sti jg,pn mov mov (bad) (bad) incl aad sub (bad) fs or push call mov roll (bad) (bad) pushl stc mov xchg (bad) enter repnz pushf jl mov leave scas in jb push cmc decl mov adc cmp jnp (bad) (bad) (bad) call hlt sbb push cltd push insl cli cs mov xchg mov fsubl lock ss mov mov in sub mov pusha iret mov pusha mov mov adc push mov xchg pop icebp dec push and add pop or xchg or xor jb negl flds add das xchg jo lahf mov and negb mov and and push and and mov das das jns push pop push and push dec dec push sub xor pop jo mov dec int push and inc gs mov jae ds cmp pop sub or mov out xor xor insl test or jae loop mov push pop sti sub outsl je mov push aaa and or in or cmp arpl jo push adc out pushw subl fwait inc je pop add pop in add add jno stos and in push jecxz insb mov add insl inc fs iret subl insb pop push xchg daa jb jbe cmp mov scas ja pusha frstor adc arpl pop sti sbb insl fldenv add adc add daa outsl jns imul xchg out mov jp arpl inc xor outsb jg add scas scas scas or nop imul jne dec add pop insl push mov inc xchg push push inc push push push xor xchg xchg xor ja push out mov cld (bad) lcall les (bad) hlt push xor xchg fs xor sbb (bad) (bad) (bad) (bad) jmp rclb mov sub mov sbb dec (bad) (bad) (bad) pushl repz test ficompl jmp (bad) mov hlt movl imul hlt (bad) stc (bad) std in leave mov add pop mov psubd add or adc (bad) (bad) (bad) jmp jb addr16 add aam dec std test movsl cli test xor (bad) leave (bad) (bad) (bad) (bad) mov lods jecxz fdivs jne fild or shrl cmp ficom push jmp push popa sarb and mov cltd jo shld incl mov (bad) and or dec push sar push lods cmp jbe jno add aad cmc call decl mov push lret xor mov js or sbb xchg sbb jg ljmp sub insb fs add out push imul insb sbb xor dec (bad) (bad) decl lahf repnz xchg push insb jnp add (bad) hlt or (bad) fnstenv adc (bad) (bad) (bad) ljmp cld fistp ficoml gs aam pop popa mov into mov pop pop sub (bad) mov aam movsl fisttp xchg fsubs sar (bad) (bad) jmp jmp outsb xor mov sarb add in add pop dec or (bad) (bad) ljmp cmp add daa adc or and test cld pop cld jg aam mov push stc ficomp fldcw and mov pop cmp cmp lods insb mov (bad) incl mov add insl ljmp (bad) (bad) (bad) (bad) fildl push fdivl or test fs ds or or push in decl xchg daa scas (bad) (bad) call cmpsb mov pop jge xchg (bad) shlb add inc push imul (bad) (bad) lret mov sbb push imul aam loopne sbb dec pop jp int3 dec ffree (bad) (bad) (bad) (bad) fistpll mov mov aad mov call xchg shll push repnz (bad) (bad) push addr16 cmpsb fldl mov dec ss fisubrl or scas (bad) dec add pusha jp inc (bad) (bad) (bad) inc out pusha fist addr16 mov jns imul andl shrb ss push (bad) (bad) jg xchg mov add mov das es lds or (bad) lcall sub mov cmpsl call ret (bad) mov sahf fldcw ret es pushf (bad) (bad) jmp insl add ss jmp addr16 jb push add (bad) (bad) (bad) call mov jnp sbb xchg or out fdivrl fisttpl aam roll inc loop icebp clc mov push int mov mul ja icebp (bad) (bad) fnop inc mov out jge push dec cmp pop or adc sahf gs scas (bad) clc mov lcall fwait js or call or dec ret cmp cmpsl notl pusha rorb imul jno push scas fcompl fldenv fild (bad) pushl mov fidivr mov jmp repnz (bad) (bad) decl xchg mov cmpsb mov sarb sub push mov jp (bad) (bad) jmp mov sbb xchg sub aaa mov or sbb add sub fwait incl imul push popa mov add (bad) or push xchg or sbb add iret add sbb push flds push xor push inc push xchg mov xchg push push push push leave test stos stos sub push push push xchg mov xchg push push and stos stos fs sbb xor dec inc push mov xchg inc adc dec or inc add xchg xlat or or ss cmp adc inc push adc inc sti push add add and js push inc jne jns push iret fiaddl or mov jp je pop outsl insl and or or insb pop push mov insl insb cmp push imul push outsl cmp jns fstpt imul insl inc inc xchg imul or add jns xchg sub push jmp jns or mulb addl in (bad) jle cmpsl push imul inc push or roll fs in pop fwait sbb push outsl insb jne dec dec add mov sahf fstl jae dec outsl sbb sub inc fcmove sub push inc cmp cmp inc loope vpunpckhwd leave push pop push sub push int sub imul idivb subl imulb fsubs dec push and jae and dec or or xchg aaa outsl sbb mov gs sub sub pop and pop jmp adc call gs jo popa inc jbe push gs mov dec push dec jo aam lcall cmp lock push in dec dec popa mov jbe or imul push (bad) xchg inc cmp xor into fdivs jo push outsb xchg jae outsl je adc enter jbe or enter shl jbe test pop mov or inc inc fs pop fsubs pushf dec (bad) xor xor inc out cmp sbb movsb dec cmp inc push fldenv roll mov loopne or sub dec jg arpl sub push outsb push movsb or push xor or cmpsb subb mov popa push add aas lds push inc mov test jne mov mov pop and mov rcrb outsb addr16 int3 and dec add push pop test insb or push das movsb popa or dec push xor mov loope fsts je cmp inc and dec push pop fildl mov fdivl and outsl js popa push add push adc or cmp inc jae vmovaps aaa dec jbe push add ss add jge fnop xor dec inc movq inc js push ret int3 add xor fdivrs cmc inc sbb add adc inc cmp dec lods sbb popa xor push push loope sbb adc lcall sub push pop insb inc pop sbb mov outsb je dec fs pop ret sub aaa mov (bad) cmp add sbb xchg mov into popa jle and jo mov sbb dec jo push adc inc test (bad) xor lods or add xorl lcall pop sahf or inc or mov adc pop add mov mov push or xchg pop jae push jge adc sub je sub (bad) inc jmp adc testb (bad) jno inc or daa add out add lock mov jb adc inc popa inc insb ret xor push jae adc jecxz dec xchg cltd jb imul hlt imul fildl jne inc (bad) in iret (bad) (bad) dec gs pop int3 lds or sub mov mov aaa sbb mov inc addb (bad) sbb dec pusha and or fldt push jae pop or pop pop imul fs push inc push add cmpl call add push inc ret test adc dec mov lret in ret (bad) sub xor push push push adc jo mov sub jo sub daa lods add push dec xchg push inc jecxz mov pushf jg add add int dec insb gs lds inc sub adc jns push push call xor std outsl jbe sub cmp and jae stos adc inc mov add jbe xchg add push inc dec adc add cli (bad) lret je mov fild (bad) xlat push inc push mov std xchg test push outsl cwtl push or out add and xchg add popa faddl sbb les out dec das jno and rolb daa sbb push bound jb or sti popa jns cmp imul jo xor addr16 and xor or (bad) jo je lcall xor popl gs and xor and and insl je hlt and outsl jmp cs call add outsl adc inc pop xchg insl adc jae or xchg mov mov popf and cmp push push push mov push in xchg mov xchg xor mov sub dec add lods push dec insl mov inc or or or jmp adc and adc mov xchg popf add adc xchg lock add pusha sysret fdivrl out dec sub loopne mov add inc (bad) add dec fildl sub cs outsb popa pop nop add push in jb,pn add sti insl pop test add jnp add stc inc pop daa mov insb pop rorb add jmp sub test sub inc sbb add sarb cli in or add jmp add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 