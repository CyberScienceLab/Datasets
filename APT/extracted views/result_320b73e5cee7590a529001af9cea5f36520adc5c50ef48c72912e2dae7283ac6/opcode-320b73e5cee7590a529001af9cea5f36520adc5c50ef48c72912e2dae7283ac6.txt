push (bad) pop (bad) mov (bad) rex.XB cmpsb cmpsb int3 outsl (bad) (bad) lea (bad) mov adc or fdecstp lret out rex.W xor (bad) cmc movabs rcr jp movabs leaveq sbb fdivrs (bad) ficom push and push add (bad) mov cmp (bad) mov adcl xor idivl scas js out pushq xor mov sub movsb fadd cmpsb test int3 cmc jmpq pop in xchg cmp mov mov xchg jp xchg adc lret iret add (bad) and xchg pop cli xchg ds xchg sahf (bad) pop adc jp mov add adc xchg sub xchg hlt add movsb mov sbb adc (bad) xchg adc jns lods sbb jo mov outsl jno or adc add out (bad) mov adc (bad) repz retq mov loope retq push or (bad) xor xor (bad) out test xor (bad) and cmpsb cs add (bad) lahf adc xor (bad) cmpsl js sub insl fidivl cmp sbb jle xor nop rex.RXB ds jb lahf rex.WRXB rex.WXB xor stos mov retq xchg jmpq jo shlb loope sarb add (bad) (bad) test (bad) (bad) (bad) (bad) sti mov or (bad) xchg stc cmpsb cmp addr32 es xorb cmp xor add repnz fmulp mul in int jns and sub or cmpsb loope add xor mov jb (bad) pop cmc test lahf mov rex.W clc rol xchg mov pop sbb movabs fwait mov movabs adc std cmp (bad) adc rex.WRXB addr32 sahf hlt mov mov (bad) xchg imul sub and (bad) (bad) gs out jmp mov lret rex.WRXB movsb lahf (bad) push insb cmpsb (bad) cs add xchg fwait rex.XB jge mov out scas mov (bad) pushq stos rex.B add xchg mov and lock xor popq insl rex.B (bad) or and xchg pop pushq xor jmp xor pop jge xchg loope pop (bad) (bad) (bad) cld callq (bad) (bad) (bad) std and jge xchg test add in rex.WX or in pop sbb (bad) ja (bad) outsl retq outsl sbb (bad) sbb (bad) retq movabs sbb pop adc xchg outsl test (bad) jl cmpsl sub ss pop cmp scas (bad) (bad) (bad) inc in enterq (bad) pushq or pop popfq std push sbb sub jmpq xor outsl (bad) sahf out leaveq adc add (bad) imul xor leaveq jp cld popfq cmp mov outsl popfq scas rex.B je fcmovbe js (bad) fildl div lock adc data16 jno (bad) add add xchg notl (bad) js and cmp (bad) mov and jmpq jb cmp jmpq inc clc jmpq test cmp not movzbl lea not lea sete movzbq pop jle jmpq jmpq out add cmpsl test lea rex.WB pop scas rex.W stos rex.WB push mov mov cmp rex.XB xchg icebp stos xor (bad) icebp sub jg adc jge mov fdivrl (bad) xor (bad) and or lahf cmp jp jbe or and cmpsl adc (bad) std sub (bad) inc (bad) lock adc in rcll xchg scas jrcxz mov mov outsl clc lods roll fnsave cmp (bad) sbb in mov rex.WRB adc es jmpq outsb loopne xor push mov and or mov data16 test (bad) mov rex.WRX mov rex.B rcll test or mov cmp (bad) imul xor pop nop in pop xor rex.XB gs (bad) (bad) (bad) sti shrb icebp (bad) (bad) (bad) (bad) popfq (bad) or push mov sub retq retq mov stos xor (bad) callq add pop sti enterq fnop xchg rex.WRXB (bad) (bad) shll push mov rex.WRXB adc or out mov mov mov push cld loopne loopne (bad) test (bad) movabs test mov xchg adcl movabs jo mov add sahf roll cmc fidiv pushq mov and xchg scas stos sub sbb mov xor in nop cwtl pop and (bad) (bad) (bad) sti adc test (bad) fwait pop out rex.WRX push popfq (bad) (bad) (bad) std out out (bad) (bad) js es mov jp xchg sub or (bad) adc (bad) pushq cli mov and xor (bad) and repnz jae addr32 sahf lret jns (bad) and jmpq rex.WRX rex.XB outsl rex.R movabs (bad) popfq mov test pop cmp mov xchg sti sub out sbb cmp jg adc sub cmpsb jmpq cmp jno (bad) cs repz fdivrs (bad) popq insl and and xchg sbb or (bad) movsl callq leaveq rex.WRXB xchg (bad) xor imul (bad) rex.B rex.B or clc fild repnz loopne and mov (bad) jl rex.W rex rex.X data16 add in pop cmc (bad) adc mov mov sti shll xor (bad) (bad) (bad) sahf jnp sbb (bad) cmp ljmp retq jmpq add je mov sar retq adc jae jae cli stos xchg (bad) cli mov jae mov add leavew pop int3 (bad) lods lods (bad) mov imul lret sbb leaveq adc ja adc (bad) and insb rex.RXB rex.W lods add movsb int (bad) pop xchg add mov loope shl mov sbb cltd decl test out xchg rex.RXB rex.WRB ss (bad) es xchg (bad) (bad) mov cld xchg rex.WR adc lods adc sahf retq shrb jrcxz (bad) mov rex.WRXB mov (bad) adc nop mov (bad) roll int3 (bad) (bad) (bad) cli (bad) cmp movsb (bad) (bad) (bad) std mov ja adc (bad) mov retq (bad) xchg fmuls adcl jnp test test (bad) mov mov mov (bad) mov retq rex.X sbb outsb lret (bad) rclb movabs in fdivs clc callq mov rolb mov sub cmp xchg retq cmc not rcr bt mov bt bt bt ror jmpq es or and sub outsb push mov fsubs in movsb mov scas adc loop xchg movabs xchg js cmp rex.R rex.R fisubrl xchg ds pop cmp out sbb jmp gs cltd ss or pop hlt test callq rex.WB fs rex.X and shrl (bad) sti fstps (bad) decb mov data16 lods add jne (bad) in cwtl pushq mov lock (bad) (bad) rex.X add xor mov std hlt movsl enterq lahf sub mov add or pop adc or or push (bad) (bad) push mov cmp scas test mov sub rex.B je bt cmc cmp jmpq clc cmp movzwl test shld mov bt bt test bt add cmp mov clc bt stc clc test jmpq cmc bt cmp cmpb jmpq icebp push push sub stos int3 cld rex.WRXB (bad) mov scas idivb rex.WX cmp or movabs movabs ja jle fidivrl mov cwtl (bad) imul lahf int3 mov sbb ficoml (bad) (bad) (bad) sti push (bad) push mov (bad) (bad) (bad) (bad) xor adc jo xchg adc rex.WRX cmp adc cli movabs mov mov loop rex.X outsl (bad) test mov pop rex.X xchg test (bad) ds mov subl lahf xor loope and (bad) pop rex.RXB pushq adc ss jge add bt bt cmc cmp add jmpq sbb pop (bad) jbe mov mov imull or fdiv and mov jb rex.WRB stos rex iret lret (bad) movslq cmpsl movabs mov push cmpsl retq mov rex.WR xchg xchg jmpq mov lret imul (bad) cmc push sbb in sbb mov sub jle movabs lods fstpl pop (bad) mov (bad) (bad) decb (bad) (bad) (bad) inc rex.WX (bad) (bad) xor or mov and pop xchg sub lret mov outsb retq cmpsb sub jbe nop rex.WRB stos adc cmp (bad) callq cmp gs pop pop sti and xor in hlt xchg ffreep lahf mov add popfq xchg pop mov rex.WRXB rex.R sbb rex.WRXB ds and rex.R rex sbb fisttp mov sub xor movsb cmp pushq andl mov cmc lods and jrcxz lahf fist xor adc loop rcl xchg scas adc (bad) cmp (bad) add (bad) mov rex.RX pop cmp jbe adc lretw jg cltd out retq mov xor jp pop sahf sbb rex.WRXB rcll icebp jp je (bad) (bad) (bad) decb (bad) (bad) (bad) inc pop (bad) mov fstpt mov xor sarb rex.WRXB insb leaveq sbb xchg mov xchg (bad) sub xor (bad) iret cmp sbb outsb rex.WXB sbb sbb mov mov imul (bad) push rex.RXB sub movabs (bad) (bad) jbe jns repz and popfq xchg (bad) xor fs cmp sbb rex.WR xchg jae rex.WRX rex.W callq mov sbb mov (bad) (bad) (bad) decb sub ss mov xlat jl std rex.RX clc xchg mov imul (bad) insb stc xchg cmc adc rex.WXB (bad) xchg (bad) pushq rex pushq (bad) rex.WB loop rex.XB cmp cmpsl xchg out js or sbb and xchg adc jno push mov not mov lea mov retq jmpq pop retq jmpq pushq jmpq rex.WX movabs cmpsb enterq (bad) cli loopne rex.X mov pushfq rex.WB movabs int3 repnz (bad) cmp add mov popfq stc jmp out jae jb loope out adc push rex.WRB sbb and adc jmpq cmp lret (bad) jno stc loop loope fcos (bad) (bad) std sub or add or cmc push fmull (bad) cmp add cmp add (bad) es (bad) add (bad) ja insb adc sub movabs xchg xchg test add bts bts bsr xor not shrd mov not or mov btc shr btc mov stc bt or jmpq jmpq jmpq jg mov jmpq jne jmpq pushq jmpq je jmpq pop pop (bad) out out test mov mov cmpsb int repnz cmp enterq mov push rex.WRX sbb fnop (bad) sub test test xor (bad) int3 mov or push (bad) mov cmpsl and cwtl scas and lahf es mov mov (bad) (bad) mov or mov xchg int3 rex.WRXB (bad) pop (bad) (bad) (bad) (bad) cld andl cmp (bad) xlat cmp and lret imul shlb jbe es rex.XB (bad) cmp push movabs ds xchg pop lret mov (bad) rex.X add add out mov and mov mov jno outsl pop (bad) push ss test push cmp xchg nop in push (bad) push pushq (bad) test sub stos mov or movsb mov in adc fwait (bad) sub jb bt cmp jmpq jl jb stc cmp cmpb jmpq jmpq jmpq jno jne setge movsbw lea mov jmpq clc clc add stc stc bt clc cmp jmpq je test stc bt add test jmpq jmpq jmpq ja jmpq jmpq jb jmpq clc shl jmpq je jmpq jb test clc cmp jmpq jmpq test jmpq jmpq (bad) (bad) xchg lret mov sub xor mov (bad) sarb mov sbb add mov rex.X es and push jle xchg stc (bad) lea gs ja stos enterq pop push insl (bad) (bad) xor or sar and adc (bad) (bad) (bad) and test pop cmpsl or sub (bad) xchg rex.WRX stos (bad) lret sbb and lock (bad) (bad) cld adc je (bad) (bad) (bad) (bad) lock adc adc enterq pop xchg (bad) mov test jo movabs sub scas cmc jmpq gs cwtl (bad) jbe scas pop icebp jmp rex.RXB sahf (bad) mov cmp rex.WXB rex.WR mov xor (bad) cmp cli not jae test bt cmp xor stc cmp jmpq jne shrd jmpq sub cmp leaveq repz add lods adc (bad) cmp jne rex.XB imul push sub sti movabs xchg rex.B pop jne mov stc xchg jnp cmp lods sar (bad) xchg cwtl (bad) push andb cmp lret jmp movabs mov pop push sbb lods shr mov rex.WRB (bad) sub pop mov (bad) (bad) (bad) sti retq xor (bad) jne in mov lea rex.X (bad) int jbe (bad) (bad) push std (bad) leaveq mov pop cld test mov (bad) movsb adc pop (bad) xchg (bad) and jmpq rex jns jns xor rex.B int3 lods sbb mov xor int3 sti nop pop andb ja sub ds enterq sbb repz push cmp (bad) scas movsb sbb retq xor rex.WXB in (bad) push in movabs mov fidivrl int3 outsb and and jae mov sahf (bad) ror lahf xor jae adc pop jb pop retq sub xchg outsb mov cmc mov (bad) lock lods test sbbl (bad) lret add mov std and (bad) (bad) (bad) cld jbe out jae (bad) (bad) (bad) callq fsubs mov lods cmpl fstp xor in add add or lcall int3 (bad) (bad) or and add int fidiv retq jmpq rex.RB rex.XB jns xor sbb nopl pop pushq gs lret (bad) sub mov xor adc cmp jmpq jle jle out fdivrl and (bad) mov add push mov rex.RB cltd xchg push movabs add sbbb sub and callq jg push rex.XB or rcrb and and movabs lcall xchg (bad) sahf add xchg jge rorl rex.R xchg (bad) scas callq pushfq or sub rex.RB test xchg mov mov fwait shrb (bad) mov cwtl sbb add cwtl in rex.RXB scas (bad) imulb fstl push out mov jp mov xor jmpq cmp out mov movabs rcrb hlt (bad) mov xor mov rex.WRX popq stos cwtl mov lods test cmpsl leaveq and rex.WRB rex.RXB jno jmpq (bad) cs cld xor andb jmpq movsl (bad) mov xor retq fmuls rcl cmc rex.RX icebp movsb cld mov insl cmpl lret push movabs retq repz jrcxz int3 movabs retq add nop push mov addl decb rex.RB rex.RB rex.WXB callq rex.WX and addr32 cmp jnp imul (bad) rex.WB rclb mov rex.RX repz rex.WR mov out xlat xor (bad) xor mov (bad) (bad) icebp rex.WXB (bad) sub xor fimull test jb add test add jmpq fcmovnbe adc fcomp jbe data16 or rex.RX lret sub lods and lahf rolb (bad) movsb rex.WRXB data16 int xchg rex.WXB rol cmpsl leaveq sbb imul (bad) jae stos mov cltd mov icebp jrcxz rex.XB (bad) cmp mov sub sar (bad) (bad) sti mov and sti (bad) (bad) (bad) (bad) xchg push fisttp (bad) test test rex.WB rex.RX mov cmovle jae or std out rex.WB (bad) mov icebp pushq add cmc (bad) add out (bad) jnp mov imul rex.RXB sbb pushq (bad) hlt xor cmpsb (bad) (bad) rex.WXB rex.WRX fisubr movsl lret movsl (bad) loopne fs (bad) mov (bad) fcomip in xchg mov jae mov shld bsf sub rol jmpq rex.XB repnz loopne es add (bad) mov add adcl fadds (bad) (bad) scas rex.RX (bad) sbb cmp sahf insl pushq push pushq cwtl (bad) sbb (bad) movabs jnp mov movabs fnstcw push sti push cli pushq movabs rex.WR outsb (bad) mulb rex.RB adc jg out (bad) (bad) rex.RB movslq stos in cmp movabs movabs std movzbl pop retq jb test bt bt cmpb jmpq jne bsr rol mov cmc bt add test movzwl cmp mov bt add cmp mov cmp bt test jmpq jne bswap mov bts movzbl sub bsr cmc shr rcl mov cmp test cmc sub bt cmp clc cmp pushq cmp cmp jmpq stc add jmpq lock fcomps int add mov adc lods (bad) loope je shl movsb lret xchg sbb (bad) adcb andb rcl add pushq add repnz sub (bad) (bad) pop pushq jbe cli rcr (bad) rex.WRB sbb (bad) enterq mov mov callq jmp xchg movabs (bad) mov in rex.WRX retq push cmp sub sti movabs jg adc out sub retq sbb (bad) (bad) mov imul (bad) and pushq sbb adc rex.WR mov testl (bad) mov imul js movabs negl rex.WR sbb rex.WRX push (bad) mov cmp push (bad) xor rex.RB xor cs insb add je mov movsb cmp ds movabs (bad) jns (bad) and mov mov ficompl jnp and fimul je iret or rex.WB cmp cltd xchg sti xadd xor adc imul lret (bad) (bad) (bad) (bad) sarb out bswap (bad) sbb pop int3 lahf cmp fistpll (bad) rex.WRXB rex.WR sub lcall mov cmp int3 jns je jmpq test cmp jmpq test test bt neg test test not cmc cmc cmp jmpq cmp jmpq ja jmpq je clc stc cmp bt sub jmpq outsb (bad) (bad) mov cmp loope test jmp scas int rex.WX stc cmp cltd add and test xor int test movsb mov push out mov xor xchg adc pop pop jnp push stos out (bad) stc pop pushq rex.RXB int out xchg (bad) cli fstl callq xchg rex.RB loop adc int3 (bad) push cmp rex.R outsb (bad) (bad) (bad) decb (bad) (bad) (bad) callq adc pop icebp cmp outsl (bad) je gs and mov (bad) xchg movabs (bad) rex.RX scas (bad) push pop or rex.WRX push (bad) add in mov sahf xor lock data16 movabs sbb std jmpq repz (bad) pop (bad) push jge rex.RXB xorb out rex.W rex fmuls push push cs mov (bad) sub hlt adcb pushq (bad) stos xor imul movabs (bad) (bad) mov pushfq cld push sub or roll (bad) movabs (bad) decb pop (bad) cmc push lahf sub jge jl (bad) mov xchg add loop adc hlt rex.XB rex.X loope (bad) out out pop lock outsb cld adc stos test lret jns rex.WR adc jmpq int3 pop loopne cli ficom adc xor pop sti jmpq jne stc movb cmc test test jmpq inc clc cmp neg jmpq jmpq jmpq jl mov cltd xchg retq insl adc xchg pushq rex.W test cmpsb repz movsb rex.WXB movabs fsubrp jl xor pushq add xlat sbb sub xchg add roll jg or xchg out fcmovb pop xchg xchg (bad) sub divb fdecstp jmp subl pushq adc in insl lret shrb mov (bad) sbb (bad) (bad) clc fdivrs sti xchg mov scas sbb (bad) (bad) (bad) outsl std add mov xor lea rex.WXB and (bad) (bad) (bad) push add jns imul pop rex.WX repz (bad) push je (bad) cmp popfq cld jae push fildll cltd mov pop (bad) and add or insl movsl lea mov cmp jmpq jne shr movzbl ror mov clc cmc stc cmc add jmpq add add add sub add add or add add (bad) mov add sbb or sub (bad) sub adc add add add add add sub sub (bad) cmpsl sbb ss (bad) add test add sbb rex.XB add add add push mov add add add add add add add add sub add add rex.RX add add add add mov add add rex rex.R ja push lahf (bad) or out mov rex.WR pop pop jp or in sub jmpq push (bad) xchg rex.RXB rex.RXB mov and jmp jp mov rex.B out orb pop je pop in (bad) icebp (bad) push in sub test (bad) rex.WRB or lods xlat push shrl or mov rex.WX and xchg rex.X (bad) ds (bad) lea (bad) lods movslq cmpsl mov test (bad) insl cltd (bad) (bad) test rex.WXB rex.WRX rex.X push movsb cmp gs subl sub pushq push scas mov cmp (bad) hlt mov int adc xor sti sbb add gs jl rex.RX in cmp push mov sbb (bad) sti mov iret xor es sub sti xor rex.WB xchg mov (bad) xor shll movsl xchg mov (bad) por scas pushq subb or (bad) mov scas xchg (bad) (bad) lods pop ss scas rex.W lods insl jge cltd out xchg ja adc mov ds mov mov fnop mov sbb out loopne test cltd lahf (bad) fisttp stc mov sbb or rex.B or mov cmp or lods (bad) js outsl (bad) popq sbb jnp sti sub jl (bad) adc xchg out ss or sti ss in pop andl (bad) (bad) in add or js (bad) pushq vhaddps shrl pop cld data16 sbb pop in (bad) and (bad) cmc (bad) pop fnstenv mov jmp rorl subb (bad) or add es add xor (bad) jnp rorl loope (bad) and jb and mov (bad) (bad) jle movabs (bad) or shrb pushq sbb mov out loope int je xchg mov test stc scas int data16 fcoms pushfq fwait (bad) insl (bad) push and add nop sbb jae test mov test sub jo pop loopne mov roll or movabs xor stc std add sti adc mov push mov fimull (bad) mov leaveq repnz sbb cli mov out rcr (bad) out add (bad) in iret leaveq rex.RX sbb adc retq lods (bad) (bad) (bad) and cmp jmpq add xchg (bad) fucomip retq icebp lods jl (bad) push jb movabs mov shrb xchg ja jp sbb rex.WR outsb repz (bad) test push rex sbb (bad) decl add or pop adc int3 xlat sbb hlt push pop cmc scas leaveq xchg (bad) ds iret js addr32 or mov jge out jbe lods mov jge add fs cmp stos mov outsb mov test xor movslq loope test rex.RX sub add loope mov rex.WRXB xadd xchg cmpsb sub int rex repz sarb movabs pushq icebp decb mov rex.WRX loopne int (bad) rex.WXB (bad) lret fwait xor (bad) xchg hlt pop out (bad) jle mov jo cs repnz cli (bad) add mov pop ljmp jmp faddl (bad) sbb cmp mov (bad) push mov rex.WXB xor (bad) sub pop sub popfq repz xor jle roll (bad) (bad) sbb cs rcl adc rcrl (bad) rex.RB fdivl mov or push add xchg test imul xchg rex.XB jmpq out fwait jp stc xor retq cmpl jno lahf adc xchg sahf mov sub sbb mov jns movl or outsl mov xchg cli or add adc std mov adc lods mov cs in lahf cmp (bad) loope loopne mov rex.WB rex.WB cmp add nop xchg lock mov pop (bad) js (bad) ud1 andb xchg push insb (bad) pop rex.RXB pop or lock ss push test sahf imul push jrcxz insb and jp (bad) push std sub insb mov ja add xchg je xchg movabs sbb jo mov xor mov scas nop (bad) loop (bad) sbb lods (bad) add sub cmpsl rex.W jge sbb nop xor (bad) shl adc adc (bad) (bad) in rex.B (bad) js,pt xchg retq mov mov (bad) xor or (bad) push lods jrcxz cmp movsb jno xchg shll sub rex.WRX sub shr (bad) adc movsb jge cmp shlb repnz jmp movslq or fwait movslq rex.RXB sti repz (bad) ficompl outsl jmp push hlt mov xchg rex.WX movslq rex.WXB mov (bad) mov mov xor test and rex.WB mov fldenv jge push sbb or xlat xor insl adc rex.WXB xlat rex (bad) (bad) pmaxub (bad) xor movslq (bad) lea ds (bad) out or pop in jp xorl lea jmp movsb jle (bad) push (bad) or fs sti (bad) push cltd sarb xchg rex.WRB rex.WRB jbe out jb wbinvd (bad) pop jbe sarl cmp retq mov rex int3 movabs mov loopne xchg mov sub xor out pop test out fimul outsl and lock repz rex.XB pop es and lret lea or in sub cmpsb ss jo push jno callq cmp movabs and jg nop push cli scas add shl xchg cmp adc (bad) fsubl mov (bad) repz or movabs clc jbe mov rcll es and outsb (bad) and xchg mov xchg (bad) leaveq pop push out mov rcrb mov push pop clc xchg (bad) lods fs xchg movabs push or xor jl (bad) (bad) testl push mov rex.RXB lahf mov rex.WRXB cmp jnp lock add rex.WR pop rorl sarb (bad) in (bad) cli rex.XB and movslq adc sbb mov rex.WRB movslq invd mull leaveq or xor mov lahf adc pop cli sub mov cli outsl (bad) lret (bad) adc pop int sbb popfq rex.WX lret rex.WB lods mov xlat or ss fwait lock (bad) jo retq or mov leaveq scas es pop sub (bad) fmull test mov pop lret lret sbb (bad) or lods cltd mov enterq xchg pop adc lahf sub add test mov jo push rex.RB rcrb or (bad) (bad) or xchg movabs in pop pop loope lea mov lock movabs cmp push jmp imull xor out jo loop andb xor fcmove in sarb push enterq (bad) mov add js stos cmp notl gs movabs and sbb movabs movabs (bad) xchg lods xchg jle xchg jmp mov iret jae cs fwait lods jmpq jge gs lods sub mov loopne pop cmp (bad) add cmpsb vrsqrtss repnz imul (bad) jne retq stos mov adc icebp shr imul in lahf (bad) cmpps cmp mov rex.WRB repz cmp imull or and add repz roll sub mov mov push pushfq imulb mov data16 ds negb int3 shlb std xchg movabs xor or fnstcw repz or or fsubrs sarl lods ja imul testl and push sub movsb jno nopl mov addr32 (bad) leaveq rex.WR test xlat (bad) jmpq and rex.WRB movabs and sarl fcompl fimul pushq repz (bad) pminub xchg out lock (bad) sub pushfq and (bad) (bad) jae scas sub fidivrl scas cmp scas push and mov pop pop (bad) mov fisttpl sahf pop push pushq (bad) sub fs in pop stos retq int3 add incw cmpsb (bad) out ja jne (bad) mov add rex.W or lahf fstpl gs mov fisttp roll ja lret in and sub (bad) push mov or loop adc movslq pop movabs (bad) fadds rex.WR jmp (bad) loop jge stc pop mov jp icebp rex.WXB jmp add adc mov fistpll and sbb rex.WX rex.RB movabs cltd adc mov cld mov sbb stos xor retq enterq (bad) cmp (bad) mov (bad) sub adc adc lret iret rex.B (bad) push mov (bad) (bad) rex.RX addr32 gs stos movabs rex.WX ss mov mov fbld mov rcrl (bad) fsubrl mov sahf mov xchg cmpsl jp jb jo xor mov enterq mov movsb fstpt xorl (bad) lock (bad) xor rex.XB adc (bad) int jns cmp cs test jbe outsl in imul fs adc fcmovne (bad) (bad) js sub vmovaps xchg push callq jle jb rex.W (bad) jo mov push sub cpuid (bad) emms xor xchg jnp std pop jge (bad) (bad) xchg or fisub adc mov and (bad) (bad) adc (bad) rex.RB mov adc (bad) test cmp fnop (bad) jl push outsb lods phadduwd icebp test fucomp sarb (bad) jle jg rex.WB and outsb int sbb mov cli fldl shrb (bad) addr32 movsl jmpq pop (bad) insb rex.B (bad) jge mov mov push rex.RX mov lahf int3 (bad) or cmp mov push insl xor rex.WR rex.RX loope or push rclb xor and (bad) js sub adc (bad) jmp sbb adc (bad) mov xchg sbb rex.RXB rex.WB rex.R rex.WR ss (bad) jmpq (bad) pushfq pop add stos pop and cmp push out js mov jl cmp jl out jns js (bad) adc add (bad) or push rcr xchg lods fsubr (bad) movabs xchg jg mov outsl imul out lock rex.WRB repz repz mov (bad) cld out addr32 add outsl adc (bad) movslq or mov and adc mov jmp callq jae xor cmpb (bad) sbb fisubl out jrcxz pop (bad) cmc or mov mov rex.RXB mov add cltd jmp imul mov ficomp pop cmp frstor push xchg jmp insl js sub sub push xchg adc sbb add cmp cmp retq ds lret in mov xlat rolb rex.R rex.RB fs (bad) (bad) jbe sbb orb idivl movabs xor xchg (bad) cmc test out cmp rclq adc (bad) sbb testb int3 adc (bad) mov cmp and mov neg addr32 rcrb rex.WRXB rex mov xor pop (bad) rex.XB xor adc adc rex.WXB jo rex.WRX or movabs cmp icebp (bad) jnp (bad) jge add add (bad) int3 adc lea loopne push inc add mov loop repnz push mov sbb adc (bad) jae add movabs rex.WB sub xchg xor ss push (bad) mov cmc adc cwtl loop (bad) push sub repnz ds nop mov lock xor pop rcll add (bad) (bad) std (bad) lahf rex.XB sub jmpq mov fnsave xor cmp (bad) incl rex.RXB sub rex.WX fwait cwtl rex.XB rex.XB fmuls movslq pop and loop jrcxz rorl imul jo (bad) movabs scas xchg (bad) mov (bad) (bad) mov in ja pushq jge pushq jmpq je test clc cmc add cmc cmp jmpq jae cmc stc cmp jmpq jne movzbw or mov stc cmc cmc cmc add bt movzwl lea bswap cmc mov cmc add bt stc bt mov bt clc cmc cmp test jmpq rep not pop jmpq test bt test jmpq mov fldcw stos pop (bad) js movabs es (bad) xchg movabs out mov jl mov rex.WR rex.WXB mov adc sub ds mov out sub loop enterq mov movabs movabs push shrb decb (bad) (bad) (bad) inc pop fst jnp fldcw sbb rex test (bad) (bad) movabs jg loop movsl mov sbb fidivl in rex.WR push hlt loopne or repz pop fdivrs add repz adc clc push add roll pop pop leaveq jae sub imul jmp mov cvttps2pi movslq mov xorl push (bad) pop xor (bad) lahf jbe movsbw xor clc mov ror bswap sbb xchg add or xor shrd mov bswap add shl add mov mov movl rcl adc add cmc mov cmc bt stc cmp jmpq jne rcr not bsf mov bt clc stc clc or jmpq cmc clc jmpq mov in mov mov push jae adc xchg (bad) cs test rex.WXB cld lods mov xchg ficoml (bad) rcr add xchg sbb xlat xchg loopne hlt sbb mov rex.WX sub (bad) adc in rex.WRX jmp mov out es repnz xor xor outsl sarl mov and mov hlt add jns xor (bad) sti mov pushq pop (bad) (bad) (bad) (bad) xchg jle adc (bad) loopne mov add (bad) pushq add add adc sbb es or rex.WRB or stos leaveq and out fcomp rex.W mov (bad) insl movsl lea and (bad) lock xor xchg rex.WX lret mov add fstpt (bad) addr32 repz (bad) packssdw mov push xor (bad) int mov movabs and repnz out lods sbb rex.R je callq add frstor or outsl test jle xor mov mov cmp ja jnp shll rex.XB movabs lods (bad) ds shr pop lods sbb mov (bad) fnstcw cmp or pop pop xchg imul pop jmp mov xchg fdivr (bad) (bad) std sub jmpq add or adc cmp pop jge movabs rex.X insl sbb sbb test jno (bad) ss (bad) adc rex.WRB mov test (bad) out je bt adc not push data16 icebp btr or mov mov cmc cmp sub jmpq stc add stc cmc cmp jmpq (bad) movabs outsl pop jl adc (bad) jne mov and gs (bad) or mov cmp jmp ja xchg notl loopne (bad) xlat adc fsubr (bad) mov push cmp xchg out mov xlat ja jo adc sbbb addr32 (bad) (bad) cld sbbb (bad) lcall pop rex.WRXB mov mov jno jb movabs and rex.W movsb js (bad) xor test rex.WRXB mov mov xor (bad) sub xchg (bad) ja add add rex jns sub fwait sub xor jo pop cmp stos movabs (bad) xchg std sub insl or add jge in (bad) (bad) jl xor push rex.X fs mov (bad) (bad) cltd add cmp push (bad) push jmp adc add insl rex.B (bad) je lret repz rex.WXB (bad) jp or fcmovnu sarl cmp iret mov mov in imul cmpsb sbb sbb or (bad) (bad) (bad) xor pushfq jne cmp sub (bad) rex lret xchg jns mul sbb (bad) (bad) sti cmpsl cmp adc test rex.X fcomp fwait mov add xlat movabs sbb movslq sub xchg mov rex.XB addr32 pushq sub push rex.X or stc movsl test out decb add jmp (bad) callq jmpq xor cltd mov jnp or rex.R mov cmp outsl pop rex cmp add jb scas mov xchg jl xor jl add mov in (bad) mov ja (bad) loope rex.R test cs pushq mov pushfq hlt stc rex.WR xor mov and sub sbbl out movsb lods mov repz repz sbb (bad) mov adc jbe rex.RB (bad) (bad) std sub fsubs add pushfq mov sti fwait sbb jp movabs rex.WRXB add sahf mov cmc pop rex.WRXB out jrcxz out xchg (bad) mov pushq jmpq je test bt stc add bt stc cmp jmpq add rex.WR rex.RX gs gs jb rex.X data16 cmp clc jmpq in iret notb (bad) jae ds sbb int3 xchg hlt outsb and add imul mov in ficoml xchg push imul outsb (bad) imul fcomps mov fs mov lret and pushq xchg insl and xor jbe xor fisttpll outsb lock sarb mov jl cmp sub retq loop (bad) xor rex.XB fwait (bad) (bad) (bad) sti (bad) sub retq (bad) (bad) (bad) (bad) movabs add lock add and movslq pushq xor mov lret bnd movsb fidivrl (bad) sub test cmpsb mov loopne out mov pop lret pop rcrl out jg jne test bsf btc mov clc jmpq dec bt mov jmpq dec cmp bt mov jmpq jmpq test mov stc test test mov xor shrd rol bts mov setae mov adc push and mov and test push shr bsf test bsr push sub mov push jmpq fisubrl nop push movabs std pushfq rex.WB pushq scas rex.WXB mov pushq mov out sbb scas roll mov (bad) movabs add pop (bad) movabs push (bad) pop movsb cld rex.WRX rex.R scas cli xor push (bad) insb rex.W or mov scas callq (bad) (bad) std fsubl add add sti jne push pop icebp xchg cmp fnstenv (bad) sahf mov pushq enterq sbb adc nop mov mov sbb or sbb imulb add movsbw rol mov rcl mov cmp and rcr rcl push or shld movsbl mov sub shl sub shr movsbq shl push stc btr movzbw test push cmp adc push bts rcr push bsf mov clc jmpq je cmc cmp test add jmpq jmpq nop adc rex.WRX mov xor in fs adc jb sbb and add jb icebp loope clc cltd sub and leaveq rex.R xor stos jg pushfq sub cmp adc icebp mov rcrl rex.WXB lock pop pushfq (bad) adc cmpsl test xor (bad) retq push rex.WB fcomip cmp rex.RX rex.X movsl rex.WRX rex.RXB (bad) in es loope pop (bad) (bad) (bad) sti rex.WXB fdivrs xchg (bad) (bad) (bad) sub pop adc (bad) (bad) mov jg jle div (bad) (bad) (bad) ljmp mov xchg xchg fstpl (bad) rex.RX movabs and test mov and and nopl mov int3 movabs mov rol push (bad) nop/reserved je bnd nop rex.XB push cmp jl mov (bad) movabs jne (bad) out add je xor movl rex.WRB cs jo movabs adc loope jbe test push or sub sub mov out (bad) (bad) (bad) sti stos popfq rex.WRB (bad) (bad) incb movl and cmp scas add add (bad) hlt (bad) scas iret cmpsl sbb xor add es lret add out rex.RXB jbe xor mov mov sub insb mov pushq fwait lods int3 sbb mov jbe xchg scas mov sti (bad) jae or (bad) test movabs xor cmp sbb (bad) rex.WRB jmp cmp rolb rex.WRXB ds test mov sub xor jnp adc xlat sub mov rex.WRB pushq retq js in jns movabs sti xchg or movslq push lea ss adc (bad) (bad) jmpq movsb insb outsb sub leaveq ds or jmpq lret (bad) rex.WXB in ja xor rex.WR fwait mov rex.WX fs mov (bad) (bad) add xor es rex.R mov jg and and jo adc (bad) lock movabs (bad) mov sub stos push pop cmp stos rex.WRB rex.WXB adc out roll in or mov (bad) (bad) (bad) adc test sub cmc sbb mov push outsl sti rex fs in iret adc sbb retq (bad) sti mov cmp fldenv and (bad) sub xor fist out (bad) (bad) incb push (bad) movabs cli xor retq movabs stos xchg (bad) frndint jmp xchg or pop sbb out xlat jns and jle rex.XB (bad) fs adc (bad) imul mul and (bad) stc (bad) insl int out roll loope jl jrcxz add rex.X movabs (bad) add in loope adc cwtl scas std movabs movzbw jmpq pop and insl fadd adc jns cltd sbb mov (bad) sub (bad) test sti (bad) or sbb movsl (bad) mov mov lret push (bad) (bad) and adc movabs pop mov mov outsb rcll (bad) and test mov addl lret (bad) ja jnp mov (bad) (bad) sti and mov add jg jne sbb xor (bad) push xchg sub out sbb (bad) (bad) callq push xchg mul outsl rex.X cmp shrl je je sub andb xchg lahf mov (bad) (bad) mov xor sarb mov push (bad) jle rex.RB insl pop out fsts add push push xor cs insb add test sar bt movb cmc test test jmpq jmpq loop sub mov (bad) test sti movabs add jge cltd pushq cltd incb outsl xor sahf rex.X movslq or mov es xchg insb ds xor xchg add (bad) push iret rex push push fnop out sub rex.RB (bad) (bad) cli rcll jmpq std scas lods retq int movabs sbb fisubrl sbb mov or (bad) insl rex add (bad) rex.B (bad) (bad) callq (bad) pop xchg jmpq cli out (bad) repz lods insl or pushq test rex.WRX nop idiv lods and xor lock rex.WXB cmp jo shrb mov outsb pop jno add test add cmp add not push adc or btr mov jmpq ss or and (bad) popfq mov cmp and shrl jg xchg pop ss xor jl add int xchg xchg (bad) cmp (bad) (bad) (bad) imul adc movabs cmp or sbb (bad) jl and (bad) loope jle (bad) (bad) (bad) std (bad) lock jne add add push in xchg rex.WB rex.WX data16 mov insb mov out pop jg (bad) imul repz or in stos (bad) add rex.WRX cmp rex.R (bad) mov shrl xchg data16 mov outsl mov jg je jmpq stc cmp jmpq jg pushq jmpq jmpq ja rcr jl cmc cmp sub bswap sbb shrd rcl add sbb add mov movzbw mov add (bad) lock mov bt bt clc stc repnz jmpq lret es mov enterq addr32 pushq jb pushq mov subl scas mov rcl lock lahf jmpq pop (bad) pop push (bad) push add (bad) sub mov lock push movslq mov adc mov fcompl xchg (bad) std pop cmp rex.B jmp out push jmp outsb movabs gs movabs add (bad) (bad) (bad) xor sahf mov pop (bad) cld mov (bad) lahf rex.WRB (bad) (bad) pushq (bad) (bad) int and (bad) fidiv mov push rex.WRX ffree push insb enterq xor sbb rex.W mov and sub ds cmp add adc add bt jmpq jmpq inc bt test cmc cmp xor bt shr jmpq adc jmpq jmpq jae movsbw data16 icebp and shr mov and mov movzbw clc mov test test test jmpq ja rol add inc add sar setg or xchg bswap mov test clc cmc mov bt bt test jmpq rex.RX cmp movsl mov scas mov jbe test (bad) (bad) movabs sub pushfq ficoml loope shrl stos sbb (bad) faddl pop rex cmpsl icebp push rex.WR pop hlt je gs cmp rcr mov xor sub icebp popfq (bad) or adc in add ds (bad) movabs jge ror (bad) (bad) (bad) inc push cwtl adc int out mov movabs rex jb xor and jl jrcxz movsl enterq (bad) in movabs or mov jbe and rol out mov js jrcxz cld or mov jmpq or (bad) cs test add and jp adc jp cs mov (bad) pop lret pop (bad) pop pcmpeqw adc mov mov jne callq jmpq rolb (bad) (bad) (bad) jmp rcl jmpq jle mov adc or pop and cwtl rex.WXB cmp (bad) mov xchg cmp cmp (bad) push imul mov xchg pushq (bad) sbb (bad) (bad) ds mov rol (bad) rex.WX movabs or (bad) std (bad) pop fs lea mov fld1 movabs and (bad) xchg rex.XB jle fsubs push push cmp idiv imul push (bad) (bad) (bad) decl jge or sbb stos mov pop rex.R mov adc mov or cmp xchg mov mov mov ja repnz mov adc ds sbb and out cmp sub rex.RX pop mov flds adc mov adc mov out pop repz shrb (bad) repz lret fcos jrcxz (bad) outsl pop xchg movabs (bad) mov (bad) cmp rol rex.WRX lods retq and je sub movabs sbb testl xchg addr32 movabs iret enterq (bad) je (bad) or and xchg jg cmp callq push mov repnz callq mov push mov xor imul sti out movl test mov add out subl callq jns imul bt or jmpq jne clc cmc bt add clc jmpq jmpq movsbw movsbl lea jmpq callq jmpq jmpq rcrl adc stos insb (bad) xchg imul loopne out in rex.XB js (bad) (bad) sub (bad) movabs adc mov and cli out cmp (bad) hlt (bad) xchg stos in mov jnp fnstsw fs pushq mov (bad) js out cmp (bad) push movabs sti sub (bad) data16 (bad) (bad) (bad) incb movabs rorl iret rorl loope (bad) push xchg js andb or sbb mov xchg (bad) or xchg std (bad) (bad) (bad) callq (bad) decl (bad) lahf movabs push idiv (bad) decl sbb (bad) sbb (bad) and es movsb rclb pop lock rex.X (bad) sbb sbb stos or (bad) mov jbe mov adc mov mov adc push enterq test mulb add mov stc fistpll andl (bad) push sub mov cltd mov iret pushfq out sbb movabs leaveq pop movabs jbe sti movabs sbb add push or xchg test (bad) cmp xchg rex.WRX mov js ss (bad) (bad) (bad) std cli retq div iret add repnz jbe push adc sub sub rex.WR pop jo or or repnz jmp sbb (bad) jae je xlat push loop repz or (bad) stos mov imul (bad) hlt loope jge retq or (bad) scas mov rex.WX rex.R or (bad) xchg adc and push jg and lret (bad) sbb in add xchg mov jbe cmp adc pop pop adc add mov gs xchg shl loope rcll shr sbb push mov or in jrcxz clc insb loopne roll (bad) (bad) (bad) adc cmp enterq (bad) pop or fisubl lock stc jbe cmp shr std add adc rex.WRX cmp (bad) (bad) (bad) std pushq add (bad) lcall rcr sbb out pop lock xchg test xlat out pushq js,pt cli movabs adc adc scas pushfq iret out (bad) sbb pushq adc and add je stc clc test test jmpq sub test repnz jmpq (bad) pop push test jns push popfq sbb jp xchg pop je or (bad) stos lret cmc cmp rex.X insl (bad) (bad) and (bad) sub repnz loopne loope (bad) adc mov pushq add loope mov ds add xchg jae cltd iret or cs pop cli movabs mov pop xor and shlb fistp andb mov jae mov add enterq in xchg es (bad) push iret push cmp (bad) hlt (bad) and mov rex.WR mov ds cli insb sbb cmp lods scas cmp rcrb sti (bad) (bad) pop and in fwait mov and sbb pushfq xchg cli loope rex.RB js jmp sbb add jg sub loopne xchg xchg test lahf int jg (bad) std rex.WRX rex.WX lods (bad) (bad) rex.WRB sbb mov jns xchg or cmc cmp movb test test jmpq (bad) xor rex.WR xor (bad) push (bad) lret (bad) lods imul xchg rex adc mov jno push test movabs icebp nop add outsl push andl cs (bad) mulb xchg xchg cltd vpsubb xchg (bad) shrl jle (bad) test rex.XB rclb (bad) pop push jae mov es (bad) (bad) je (bad) (bad) (bad) sti jl fs adc (bad) (bad) (bad) pop push (bad) mov leaveq rol (bad) xchg movsb add outsl in (bad) (bad) (bad) (bad) ficoml in retq jbe mov and mov mov popfq incb mov out rcrb (bad) adc mov mov icebp movabs fldcw mov (bad) jmpq movabs add fucomi add push lock std std mov xchg outsl mov faddp (bad) leaveq retq and or ss icebp paddsb add rex.WRX xchg and (bad) push pop retq in fisubl adc test or lahf xchg add add lret xor xchg mov in xchg (bad) movabs sbb jmpq jmp (bad) fild adc cmc test cmc add bt cmp sub jmpq clc bt test jmpq stc xor jmpq mov lock cwtl cltd add pushq or outsl insb rex.WXB sbb movabs add xlat and retq (bad) (bad) cmpsl lock std (bad) (bad) hlt jmpq pop adc scas push nop movabs iret ffree xchg and sub (bad) rolb fisttpll cmp imul int3 gs (bad) ffreep stos hlt mov mov adc (bad) rex.WXB or in cmc jbe and in (bad) (bad) (bad) sti in pop flds dec stos insl cmp loope pop (bad) ja retq push movslq add add rex.WX nop jb sahf (bad) roll add cmpsl out sarl fstpt imul sub fiadd cs retq pop sbb xor stc xor mov jnp mov outsl and fucomp pop lods stos mov jnp test cld jrcxz sbb pop xchg loopne mov adc lock sub fmulp lock fdiv fs xchg jg xchg rex.WXB cmp scas sbb mov jmp (bad) (bad) (bad) (bad) sti mov mov (bad) (bad) xchg movabs out rex.W rex.WR js (bad) fsts push (bad) pop sti lods mov js leaveq jb (bad) ja adc test fnop add (bad) jbe fdecstp cmpsl cltd add rex.WRXB add jge fild movslq xlat stos cmp cmp push rex.X icebp rex jo (bad) (bad) pop cli rol (bad) mov imul sahf cmpsl xchg mov pop movabs add pop jmpq jmpq push bt bsr cmp mov cmp jle sub jmpq test dec mov inc neg adc mov cmc xor xchg not not lods rcr rcl ror dec jmpq add in fiaddl adc int push flds nop sti and adc lret add sub fs iret jne cmpl mov retq mov or adc icebp xchg cmp int3 jp jmp jo mov (bad) (bad) (bad) (bad) (bad) (bad) sti in (bad) push push insl (bad) (bad) (bad) dec fnstcw fnop js mull xor (bad) cmpsb cld sub or popfq rex.RXB (bad) fdivrs pushfq (bad) lods or push repz (bad) jnp (bad) fnstenv in sahf cltd rex.WXB lahf fidivrl jge push add add add xchg (bad) pop mov ss (bad) xor adc xchg add or movabs (bad) adc cltd ss jl pushq sub sbb outsb ja std movabs adc outsl add (bad) jmpq ja dec rcr shl add sub lea bsf shld ror add mov mov cmp add ror ror mov cmc jmpq test mov neg and neg rol sub rcr sbb bsf shr mov bt cmc clc stc sub cmp cmp stc pushq jmpq jmpq (bad) rcrl decb movabs callq mov cmp lea cmpsl rex.WRXB ss xor jo xchg and cwtl mov sub (bad) clc sub ficomp rex.XB fldcw cltd loopne (bad) (bad) or data16 (bad) (bad) (bad) sti adc (bad) (bad) std lock and (bad) rex.RX rex.RX jns fstpt rex.XB rex.WB sub in cwtl mov sbb sub addl (bad) fsubrs scas insb nop (bad) stos rex.WXB xchg sub rex.XB fsubrl or (bad) sarb sbb fucom jne sub (bad) jle ja xor rol fbstp test xchg sarb jo adc (bad) lock cmp rorb sbbl movslq retq imul (bad) rol mov icebp (bad) cmp stc xlat add nop (bad) sahf out (bad) lock out movabs jl and shrl (bad) clc jo cmp callq enterq mov int3 sarl (bad) (bad) (bad) (bad) sti int mov loopne (bad) (bad) (bad) stos mov movabs cmp (bad) sti rex.WX add add sub adc (bad) outsl mulb sub lea sbb cmpsl adc sbb cmp (bad) movabs adc outsl gs jle notl (bad) pop (bad) cmpsl xlat mov sub mov mov mov (bad) xchg mov mov es roll pop or jnp rex.RB xor mov mov lret sub (bad) xchg stc out sarb (bad) rclb ficom jl enterq cmpsl xlat callq cltd mov frstor cli movabs retq rex.WRXB jmp (bad) jb xor mov rorb outsl or jmpq (bad) (bad) (bad) sti push or addr32 (bad) (bad) (bad) (bad) (bad) movslq stos pop movabs xor scas (bad) sahf (bad) (bad) (bad) ljmp lcall add jmpq cli lods in (bad) test sub and (bad) sub data16 xlat lods (bad) or rex.WRXB (bad) pop cmp enterq jno or jmpq btr btr btr mov jmpq jmpq jrcxz jno (bad) fbld and and mov insb xchg xor sub out sahf std rex.W push xchg xor or in mov cmc (bad) cmp insb (bad) mov movsl addr32 jrcxz jae cmpsb callq and (bad) (bad) (bad) xchg add jp int xchg mov rex.XB and cmp orl mov outsb sub add int3 pop push test movabs je (bad) rex fcomps (bad) loop cmp lea mov (bad) and pop cld cmp jmpq in mov fnop sub mov xor cmc repz in and xor fiadd imul (bad) xor or leaveq (bad) (bad) (bad) decb fisttpl sub in faddl sahf cmc loopne xchg mov rex.WX in sti cltd (bad) mov out sub movabs rex.W rex.WRB mov add (bad) (bad) (bad) std fs xor (bad) (bad) stc and pushq out enterq sti sahf add mov lahf add jnp jnp and (bad) insl cli out in js jns mull movabs sub mov adc (bad) mov andl test jo jmpq adc cmovae jge mov push jne sbb sub mov cmp lret pushq jp (bad) (bad) or (bad) lock adc (bad) rex.B jrcxz cltd jmp leaveq (bad) sbb iret xchg cwtl sub shll sub (bad) and sub scas roll push sbb in movabs add sbb push (bad) jnp pop (bad) imul xchg or mov pushq (bad) sti fimull fwait cmp (bad) (bad) decb sbb add add or rex.RX in mov rex.RB add int3 (bad) pop add (bad) repz callq push js pop repnz and jns sarq shrl rex.X (bad) mov adcl (bad) adc scas test stos mov sub in (bad) cmp fist xor xchg rex.WRXB lahf mov hlt repz pushfq std fadd mov (bad) sbbb add std add jge rex.R add lods mov adc sti imul jmpq sbb jle xchg mov xlat and jb xchg iret movabs (bad) std or (bad) movabs or (bad) adc cmpsb sbb cmp add add jp sahf sub pushfq rex.B idivl mov mov (bad) and jmp sbb rex.XB sub (bad) xchg clc adc adc cld icebp andq xor jg xor andb shr cmpsl (bad) movslq imul test mov mov mov not bswap pop retq sub jmpq (bad) mov (bad) sub push nop (bad) (bad) out sahf rclb jbe add pop rex.B sub xchg rex.W data16 sbb mov je jp jbe sbb je ss cmpsb and and xchg in mov and and mov mov sub (bad) (bad) (bad) (bad) std xchg lods cs in popfq cli or mov add add (bad) add in rcrb repnz xchg outsl retq movd or retq outsb (bad) mov jbe jrcxz sub or jmpq movabs sub hlt jbe shll lods jbe rcll (bad) xlat jns enterq mov mov cmpsb scas push add cmpsl (bad) or div (bad) (bad) callq sbb adc lahf mov test lods sar out js roll jo in cli jns sarb (bad) push sub jp (bad) sbb xchg jnp shll rorl test es (bad) (bad) cmp fisttp rol adc rex jb (bad) out (bad) fnstenv (bad) retq rex.XB fprem1 cli lods jb jb repnz int3 mov or roll rcl jle (bad) (bad) (bad) movslq cmp jl int3 jp xchg pop cmp gs (bad) xchg pop in iret imul mov fs and (bad) lret pop jge int mov fstpt mov rol adc mov cmpsl push rex.WRB fsubs lods orl xchg jge jne xlat cwtl lea lret add adcb xchg fwait (bad) adc jnp mov jns and (bad) mov es fwait (bad) adc sub mov test jg xlat test adc jle xchg (bad) lock and xorl (bad) lock cmp mov jae sarb xchg cld add rex.WR cmc enterq (bad) lret (bad) je sbb push push or callq in gs add (bad) popfq flds mov (bad) shrl or sti in rex mov cld retq mov fcmovbe mov jg xchg xorl fsubl movslq rex.RX mov adc cmp pushq xlat mov data16 (bad) pop (bad) or negl (bad) (bad) (bad) xor out or scas jg (bad) test push hlt cmp or out jrcxz (bad) out stos rex.WRXB sbb movsl jmp mov (bad) (bad) (bad) mov imul rorb mov mov movsb adc and add jl rcrl or xor pop adc lret push movabs pop xor int3 cld icebp (bad) movabs mov (bad) pushfq js mov fisubr cmp insl sub xchg mov pushfq int3 (bad) jrcxz mov and jmp pop sti cmp std (bad) int rex.RB mov (bad) xor hlt (bad) mov pop insb movslq jno xor (bad) roll cmpsb (bad) (bad) (bad) sti rex.WB cmp (bad) (bad) (bad) cmpsl movsb sbb jne repnz sbb adc movabs (bad) (bad) (bad) in scas add andl (bad) xor push cwtl mov or (bad) push div pop jns stos mov jp sarl xchg mov (bad) rex.WRX rex.R fidivrl pop mov xor ja add inc clc xor jmpq jmpq jmpq je jmpq pushq sub (bad) add jrcxz mov je imul cmpsl rex.WRB imul sar jrcxz (bad) rex.WRXB sbb in (bad) rex.WRX sbb rcrb rex.XB fs cltd out (bad) fsubs movsb adc lods sti fidivrl movsb mov lods test sbb (bad) insb jo int xchg adc cltd mov or mov push (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) inc push add (bad) rcrb test add mov test jnp cmp gs jmp (bad) outsl pushq loope mov (bad) jno and movsl leaveq movsb orl lahf pop (bad) icebp xor jg (bad) fwait in movabs movabs jne fstpt (bad) jae mov rex.WX sub and mov insl mov movabs jb movabs or (bad) adc rex.RXB mov mov fwait sbb cld test mov mov sub mov xor insb xor (bad) (bad) decb in add jno jae (bad) jno (bad) jrcxz (bad) (bad) inc pop (bad) jl pop cmp rex.WX (bad) cmp mov xchg test or pop rex.WR lret fiaddl (bad) stc sbb push xor (bad) je add imul cmp rex.WRX push sahf cmc add mov adc test mov cmp stc add stc cmc test movzwl not movsbw cmc mov clc bt cmp add test cmc stc mov jmpq add leaveq mov stos movabs add insl insb pushq rcr nop retq repnz mov rorl jo and mov cmp (bad) test vpunpckldq sub xlat pop insb xchg xchg (bad) fs mov rex.XB rex.WR mov js outsl lahf adc scas sbb jmpq test add int3 push mov push cwtl (bad) (bad) faddl rex.WR retq rex.RX (bad) (bad) cld popfq imul (bad) (bad) jp rex.R retq nop add (bad) cmc (bad) test rex.RX add (bad) in lret loope shrl mov int3 (bad) pushq rex.WR jmp mov (bad) mov rex.WRXB cs jg,pn add rex.WRX push (bad) repnz or adc (bad) (bad) jge mov mov mov vmovddup lea jmpq stc add jmpq ja bt add (bad) repz adc adc inc xor xchg bsr btr rol mov sbb mov cmc cmc cmc clc push not mov clc sub jmpq jne movzbl mov jmpq jmpq sbb push pushfq xchg sbb popfq (bad) pop (bad) xchg sbb (bad) mov (bad) cwtl xchg negl and sbb xchg mov cmp (bad) mov cmp mov clc xor stos xor test mov leaveq outsb sahf test mov (bad) pop or mov push mov xor rcl int (bad) rex.WRXB rex.RXB lret cli push mov (bad) (bad) (bad) mov test fcomip popfq mov sbb sbb mov cmp movsl and stos scas sub popfq cwtl lret pop sahf xchg rcll in and (bad) mov xchg in sbb int3 cltd jae push or hlt scas cmc movslq jno jmp fs cmp xor test sti sub sub (bad) cmpsl sub stos sub es cmpsb (bad) lahf and cmp (bad) mov mov mov xor (bad) scas xor popfq enterq loop stos fsubrl stos cmp popfq xchg xchg int sbb (bad) mov (bad) jae xchg rex.WR rex.WRX pop push jmp fstl (bad) sub add cmp pop mov (bad) rex.RX push (bad) (bad) jnp in mov out xor pop rorl xor ficompl lock sti xor insb test (bad) bnd fildl int callq xchg insb pushq mov test add mov xchg in fcomip add xchg icebp fidivrl repz std in sti movsb roll xchg (bad) retq or int lret movsb iret add xchg movabs movsb mov mov mov (bad) decl xchg in xchg and jb out xchg cmp xchg insb pop lret or (bad) (bad) out xchg div in mull fidivrl lret or cmpsl push mov mov add xchg movabs in jmp out add xchg neg (bad) mov jae rex.WRB adc imull add fbstp jmpq rep movl jmpq mov cltd mov lret pop mov retq push gs xor fmul movabs movslq cmp pop stos adc or xchg or imul movslq out sbb (bad) in add mov in sbb push pushfq in add and pop loope sbb xchg not fwait in movsb jrcxz mov mov or (bad) out shrl xor movsb jg cmpl scas pushfq sbb movsl cmpsl rex.WX movabs movsb sub xor sub xchg (bad) and cmpsl pushfq (bad) je movabs movsb or add and xchg pushfq scas sbb movabs mov adc rex.X fwait mov movabs movabs and adc mov add test (bad) lods and mov mov mov ficom movsb mov mov mov and mov sub cmpl loop mov (bad) mov xor rex.X mov mov lea movabs iret jmpq sbb add out (bad) out fidivrl mov or (bad) in mov or or iret in xlat movsb lahf add mov adcl mov xor (bad) xchg movabs (bad) pop xchg insb xchg out or notl out jnp mov (bad) loope popq xchg sbb mov sti pop sub mov pushfq (bad) mov insb loopne sbb or cltd sub jge sbb fcmovnbe or xchg mov fstps test cli pop cld jne fisttpl sbb push sub repz (bad) outsb nop fidivrl adc fbld (bad) ja cmp (bad) rex.WXB pushq xchg and and movslq adc (bad) jmp pushq rclb rcrl ltr movabs (bad) push (bad) imul fwait stc in or pop mov enterq insl jle movabs insb mov ds jg (bad) (bad) sbb lret adc mov xchg es fdivrp cmpsb js cmp push add (bad) mov loopne outsb xor jle cmp rcl mov out jrcxz mov mov flds sub je pop mov out (bad) xor fwait jno enterq cmovae fldt fwait mov pushfq mov std (bad) es test popfq mov add add (bad) (bad) mov add sbb pop data16 jne fwait cs scas (bad) rex.RXB fcomip (bad) sbb leaveq jle (bad) fistpll test (bad) fisubr add outsb jbe (bad) rex.XB cld (bad) cli sub adc (bad) stc rex.WB fisttpl mov std retq out js (bad) sti xor jp pop rorb repnz rcl (bad) ds rex.R fisttpl loop sbb pop movabs sbb ja or sbb (bad) mov pushq and mov and fwait rex.WR shrl ss sub mov (bad) pop movslq iret loopne adc add leaveq sbbl jmp fwait ja icebp xlat scas xchg adc insl fmulp sbb mov es jno sbbb and hlt or rcrl retq lock in cmpsl (bad) adc rex.WRXB mov fwait (bad) cmp or lret sti pop xor cld and (bad) xchg shrb xlat mov push addl mov jmp rex.WXB sahf (bad) and repnz push cli hlt negl cwtl rorl fxch add sub lock addl test xchg incl or lods sub (bad) decl jle test and jnp out fidivrl sti mov fldl xchg clc sbb movabs sbb push sbb iret fs adc sbb adc je cmpsb test (bad) test cmp (bad) xor xchg xchg mov xchg adc mov cmp (bad) movabs mov cmp push stos (bad) mov (bad) xchg cwtl xchg lods (bad) mov or xor xchg (bad) fidivrl xchg cmpsl fidivrl xchg retq xchg rex or clc jrcxz in popfq movsb mov xchg adc fistl movsl in test fidivrl lea fnop mov fistl (bad) mov xchg movabs movsb test (bad) xchg xor (bad) mov in sbb setnp movsb in test fidivrl mov fsubr mov movsb mov nop xchg (bad) fidivrl cmp div in adc xchg (bad) cwtl or in (bad) movsb mov xchg xchg sti stos mov movsb cmpsb add fwait push sbb scas in mov fidivrl mov or shr sub xchg icebp fidivrl adc shr movsb fiaddl mov in xor adc fwait xor in add cld pop push sub or int3 movsb sbb pop xchg cmp (bad) in divl in adc add sub or pop fidivrl cmp (bad) lea fidivrl (bad) or (bad) add xchg (bad) fidivrl pop or xor adc testl fidivrl or pop in cmp adc fwait (bad) and in add stos (bad) pop or fwait xor (bad) adc add notb or (bad) in sbb pop push (bad) notl movabs add xchg lret (bad) or (bad) (bad) xor mull in add or sbb pop movsb cmp loop fwait loop jl adc insb loop push in add fs (bad) js (bad) rex.W pushq jo rex in (bad) and jle (bad) rex.WRX add jbe in rex.RX in add push pop in jb or in add insl pop in push and mull push jns rex.WB in imul adc rex.B (bad) loope pop in rex.WRXB divl (bad) rex.RXB add jnp or notl (bad) jae add mov sub leaveq jnp xchg lods mov fstl std xor mov xchg xor mov sbb pop mov or mov mov mov (bad) mov jmpq stos int (bad) pushfq fisttpl popq cwtl or test sbb lods sbb outsl adc retq (bad) xlat jp (bad) movabs cs jmp (bad) add (bad) xchg jb mov repz lret sub idivl (bad) push (bad) (bad) and sbb fwait cmp sub sub shlb lods add pushq out (bad) fnstcw xchg and or lea popfq (bad) and xchg jg mov and or mov cmp (bad) xor es std xchg pushq and xchg cmp xchg stos out jmpq sub jle jmpq mov rex.WRX js jmp and jae mov test (bad) cmp (bad) push xchg or xchg sbb lea imul jg cmpsb cmpsl xchg gs xor movsl outsl jb out xchg pushfq popfq xchg mov push stos add add pop test (bad) lea or insb mov (bad) stos sbb mov mov cmp lea cmp (bad) jmpq cmp mov notl rex.X (bad) sub (bad) rcrl mov sahf cmp (bad) xor push cmp xchg (bad) xor (bad) (bad) jp adc (bad) and rex.WRX (bad) cltd (bad) lea cmp scas or mov lea es ja lods sub (bad) or jmp movsl and rcll rex.WRB sub push sbb (bad) cmp and fisubr rex.X sbb mov jle sub sbb (bad) sub jno sbb orb mov sbb (bad) callq mov jle (bad) js mov mov add cmp or cmc lock xchg sbb or add rcr lods mov rex.RX sbb cmpl mov imul mov fstps movabs movslq push sub adc cmp lahf pop rex.RB mov movabs lea in (bad) es movabs icebp add jns or lea fadds lea sub lods test loop lea mov (bad) lods lea ds cwtl xchg rcrl lods frstor cmp icebp adc cmpl pushq (bad) (bad) cwtl mov rcll int addr32 mov and cmp and xor cwtl (bad) jle mov loope cmpsb xor cwtl mov rex.X cmpsb mov lea bnd test push sub mov (bad) or mov jl sbb (bad) xor cltd pop lea stos jle lock negl (bad) (bad) pop add sub xchg push add xchg cltd xchg lea movabs mov (bad) adc mov sbb sub push (bad) rcll xor movabs leaveq push insl xchg movabs sarl xchg xchg rcrb or movsl push jne or xchg test cmc jmp stc push mov (bad) lock (bad) sub cmp nop and jns mov add mov adc cmp sar xchg xchg lea push mov push test cli cwtl adc or cmp mov js test sub lods mov mov lea sub test stc adc mov or (bad) lods out (bad) adc pushfq and lods cmp mov sbb or cs push mov cmp cwtl shrb test cmp and mov sub cmp rex.WRX es (bad) sarl (bad) cmp and int3 mov xchg mov popfq mov push (bad) or mov rex.WRB movsl insb rex.RX xchg (bad) or loope and mov xchg out sub fisubl shrl sahf pop sub rex.X pushq andl xchg xchg fistpll out div in mov stos out lret test out gs sbb mov ficomp pop lahf fwait (bad) (bad) movabs adc rex.WRB xor push (bad) (bad) lret and jo or movabs mov pop (bad) xor lret xchg sbb movabs lret hlt mov rex rex.RXB rex.RXB rex.WRXB xchg (bad) (bad) (bad) mov (bad) add push fwait cwtl add (bad) xchg (bad) sub js pop (bad) or cwtl repnz fwait mov (bad) sahf mov fld lea (bad) lods jae cltd push pop lahf add or sahf andb (bad) pop imul or mov imul negb sbb sti mov xchg movsb xorl nop rcrb ficomp (bad) (bad) cmpsl add push rex.W pop popfq rex.WB fcompl add or fwait xchg sub sbb and add in (bad) sub adcq sub testb movsw jnp cmp fwait add rex.B fwait cmp and adc mov xchg mov (bad) out popq (bad) fidivrl rex.WRXB fadds xor ss jns rex.R retq (bad) movabs movslq repz xor lock (bad) fwait (bad) jno lea (bad) stos in mov adc rex.RX fwait adc (bad) xor test sub cwtl rex.WX (bad) sarl (bad) stos push mov mov mov lahf mov fwait add xlat (bad) or (bad) cmpl adc in jae je outsl out add and jle outsb fwait js (bad) (bad) sub imul rex.WRB cmpsb rex.WXB add push loop movabs fidivrl in outsb fwait rex.R xor ds gs movabs jle movsb shll callq callq mov sbb iret movsb out rex.RX repz fwait xchg jno jne sahf fcmovu fwait data16 fildll test movabs in fwait (bad) mov vmaxps cmp push gs mov repz xchg movabs (bad) out std add fwait pushq jo jb cmp jrcxz test and fcmovnb movslq add lahf fistl sbb sbb (bad) sbb (bad) mov fisubr rex.WX mov rex.X fwait pushq (bad) cmpb lea sti sbb (bad) sarb (bad) fistp push (bad) mov xor adc je movabs std imul stos fwait int3 cmp rex.WX in iret fwait pop in push push (bad) int3 orl add jae add jnp jrcxz or fstpl jmpq (bad) rcl rex.WRX lahf repz (bad) stos movabs fildl (bad) (bad) fwait mov in (bad) fs fwait (bad) repz std add xchg fwait and xor fwait loop push pushfq insb (bad) push int jle repnz add mov test pop sbb adc jrcxz xlat in and cmp and adc es jl in sbb fwait push (bad) movabs cmpsb in mulb retq fwait sub (bad) jmpq pop rex.XB pop leaveq fwait repnz xchg xchg mov rex.WXB fwait int3 movslq test (bad) cmpsl sbb callq (bad) sbb pop retq rex.WXB jp fwait pushfq adc (bad) mov and outsb ja and cmpsl pop push and lret imul rex.WRX jrcxz cmp mov or out sahf je in (bad) mov addr32 imul fwait xlat lcall ficomp jmp jbe (bad) outsl lahf in fwait or retq lret (bad) mov mov push pop push push fwait xchg rex.B mov fwait enterq retq fistpl insb repnz pop lea xor add es lretq rex.XB fwait rex.WRXB sub fdivrl lahf scas (bad) movsb pop in imul (bad) fistp jrcxz rex.WRXB (bad) repnz (bad) hlt xor movabs jbe es adc rol nop shrl (bad) mov mov leaveq loopne mov fldenv sbb xlat fwait pop stos (bad) in fwait adc cmp fwait loopne (bad) jmpq add (bad) (bad) sbb xor movabs push jmpq rex.WRB rex.WRB rex.W loopne (bad) popfq jnp mov (bad) out xor lods and xchg cmp xchg pop (bad) retq xchg cmp adc lret fwait (bad) cmpsl (bad) fldt (bad) stos out fwait xor jle negb (bad) mov jrcxz jg ja pop sbb mov outsb sub mov cmp sti (bad) mov and pushfq jae ror pop ss lea fwait pminsw rex.WRX lods fwait push jg adc ss rex.WX xor jmp repz fwait jo add adc push cld pop add (bad) mov mov rex.B out sbb jge mov (bad) cmc cmpsb (bad) imul rex.WX xchg insb fwait out and jbe xor fwait (bad) cwtl (bad) (bad) mov fisubl (bad) xor and fwait es mov jge add pushq retq sbb sbb (bad) mov testl (bad) cmp rex.B gs movslq (bad) sti ficomp imul fwait push shll push subl push fwait movsl xchg fiaddl lods xchg (bad) stos sahf in cmp insb mov and jmp fwait (bad) (bad) pop mov sbb mov (bad) mov mov pushq or cmc imul fwait (bad) mov rex.RB jmp and fwait movl fwait rex.WRXB cmp and (bad) rex.X push mov (bad) imul sub (bad) (bad) stos nop push rex.WRX jmpq movabs fucomi js sbb mov rex.XB rex.RB (bad) ja outsb out xchg push stos test pop sub adc jb loopne adc rcr movslq add rex.WX repz loop (bad) jbe jmpq lock (bad) fidivrl pop fwait test stc (bad) imul (bad) rex.WX movabs (bad) xor (bad) (bad) (bad) negl sub jp in rex.WB cli jge sbb lret js sub or rex.RXB mov (bad) jp ds sbb cmpb mov fwait orl mov mov (bad) xchg pop enterq lahf jne loop cmpsl mov out int3 (bad) in push jns lods pextrw fwait movsb sti jnp add stos (bad) fwait movabs rex.WRB callq mov out adc xor mov rex fwait mov cmp sbb (bad) (bad) out mov mov and fsts fsubr xchg fs jae addl stos popfq jge imul (bad) push movabs cmp (bad) sub rex.RX rex.RX rex.R push push neg movabs mov or sbb sbb adc add (bad) lahf fwait movabs int3 mov insb in and fwait nop cwtl lods (bad) test (bad) add fwait jno jae iret push cs fstpl fdivrp hlt rex.XB rex.R mov fwait lret push rex.WRXB out cld fwait xor std (bad) xchg cmp add lods mov push fwait jae jo sub jno sbb movabs fwait (bad) incb (bad) test out (bad) lahf add int3 pushfq rex.XB fwait or icebp imul mov mov mov pop callq fwait jae cmp rex.WX add or sti xor out pushq (bad) and sub cmpsq mov scas (bad) (bad) jl xchg rcl roll callq sbb cmp jg xchg fcmovnb pop (bad) add push fwait adc sti jmp sub sbb sbb retq stos (bad) jns rex.B fwait jle pop cmp cli mov fwait sbb pop imul fwait in (bad) (bad) popfq jle and sbb std data16 jg adc xchg jne (bad) (bad) pop mov lahf (bad) (bad) in (bad) jmp stos xorl lcall mov xchg lods std mov sti stc xor mov jrcxz (bad) mov xchg cmc rex.WR rex (bad) sub int (bad) out mov (bad) fwait or div xor mov fdivr xchg retq and pushq fdivrs and lea leaveq pop (bad) (bad) lock adc adc jrcxz adc (bad) mov (bad) mov adc cmc mov outsb jle int3 mov insb sahf fwait mov (bad) stc mov adc test xor out movabs fwait movsb roll negl rex.RXB (bad) cwtl rex.R int insl (bad) add xor (bad) rex.X xor (bad) sbb imulb out mov stc in (bad) fwait (bad) xchg jrcxz (bad) movslq outsb fwait retq fcmovnb mov icebp hlt test mov shll sub repz lock fiaddl xor fwait rex.XB scas loopne fwait mov mov retq fwait rorb out xchg or lret cwtl insb add fistl rex.X icebp fwait sbb push jle scas in rcr adc mov (bad) in es sbb rex.WB rex.R rex.W outsl adc pushq rex.WRX and rex.W in rex.X repz rex.WXB xchg sbb adc cmc retq jmp mov (bad) cmp rex.WXB (bad) push fwait (bad) rex.WX rex.XB jae fwait hlt (bad) fldt fwait sub xchg xor iret cmpsb fsts sbb sbb pushq sbb (bad) in gs pop (bad) xchg fwait add retq (bad) movabs jno fwait xor out outsb lret (bad) test shrb in (bad) jno loopne and fwait testb (bad) cltd gs fwait cmp (bad) cmpsl rex.RX es sub js sbb mov (bad) mov (bad) sti jae fwait mov inc xchg pop adc jmp (bad) insb jge push pushfq jp or (bad) cmpsb jmp jbe fwait push mov lea out mov xor test sar rcll rex.WB cmp xchg fistpl and fwait add test movabs rex.WX movsl fsubrp xor mov and out sub ss sarl (bad) movabs (bad) in (bad) adc js loop mov jrcxz (bad) test rex.RXB movabs sub sbb (bad) stc loope cltd xchg adc jl xor fimul insb or std (bad) xchg cmp loopne pop (bad) add or scas xor fwait rex.XB sti jne loopne (bad) mov es mov mov out (bad) (bad) fs movsl ss rex.R (bad) vpcomuw xor sbb jno (bad) int3 in shrb (bad) scas and mov rex.W fwait repz fwait (bad) add mov out fwait test or nop cmpsb rex.WXB fldcw mov jg jo xchg ds mov xchg icebp test pop cmp mov and fldenv out sbbl jrcxz fwait rex.WRXB (bad) jnp sbb loopne in and js (bad) in fwait cmp sbb mov (bad) fwait jo mov xchg (bad) cltd mov int3 movabs add adc out fwait loop jae mov push jp icebp callq xlat add adc xchg jb insb jl int3 or enterq sti fwait movsl (bad) sub and mov (bad) and (bad) sbb (bad) mov sahf (bad) (bad) push repnz divl movsb in sbb push mov fwait imul adc pushq jl fucomi jp fwait sub or lods push fstl out in (bad) rex.XB fwait cmp (bad) mov es rex.RB movsl jg mov rex.WXB test shl cmp nop movabs fwait add in lods cmp lahf fwait pop xor fbld clc test lret fwait or jmpq or rex.WRX insb sbb cmpsl or xchg popfq jno rex.WR mov and repnz es add jmpq sub lcall fistl fistp jo (bad) ds (bad) rex.X and movsl test fdivrs sbb cmp rex.RX cwtl addb xor xchg nop fwait xchg rex.WR xchg (bad) lahf stos xor push jg adc or or (bad) xchg adc lea (bad) sub outsb adc add rex.RX std (bad) fwait ds test jb fwait rcll mov fwait mov (bad) (bad) sbb xchg or and push popq callq jmp retq icebp (bad) xlat fwait xchg (bad) jne shll enterq jmpq mov rex.WRXB rex.WRB sbb retq add (bad) ficom lret adc xchg and stos fwait jno sbb sbb mov mov fwait mov mov (bad) divb clc rex.WR ss (bad) fwait rex.WX repnz scas push xchg fwait push movsb and in insb (bad) xchg xchg cmp sti divl imul pop movabs add jne mov rex ss pushq mov cmpsb xor (bad) movabs or jmpq in iret rex.WRB es retq xor loope rcrl adc sub rex.WB imul xor nop sbb mov fwait lahf jb loope mov fwait jmp xor mov jg movabs addl in fwait jb cs test fwait cmp movabs pop retq and jrcxz pop fwait mov shrl (bad) (bad) shll and in ficompl or int (bad) pop (bad) rex.B and push sbb xchg cmpsb cmp test lret in icebp sub add (bad) cmp in lock push rorb fs xchg (bad) mov fwait and popfq fnstcw xchg xchg fwait lret add fbstp push (bad) add push cmpsb rex.RB adc and repnz (bad) loope jmp jge stos and rex.WR (bad) pop jne add data16 addr32 lea negl scas sbb jge shrl data16 bnd repnz sbb fdivrs pushq cmp push lods pop and jge movslq mov std mov (bad) mov rex.B sub sti mov mov sbb cmp scas (bad) or cmp mov pushfq mov fwait xchg add rex.WRX rex.RX (bad) rolb in mov xchg clc scas push (bad) icebp mov flds movabs sbb mov (bad) sbb sub jo add rex.WX fwait sub add (bad) mov loopne push mov test sbb xchg int xor rex.WX push out add sbb enterq pushq ja movabs es jnp sub (bad) mov xor mov ja (bad) pop pop lods es loope xchg rex.RB and testl rex mov lret sub xchg mov rex.WXB scas sub xor (bad) xchg rex.RX movslq and sub mov (bad) out test cmpsl rex.WX stos mov sti sarb mov xchg in out mov (bad) mov je adc (bad) lea jl xchg (bad) xchg (bad) sub cs and cmp mov sub scas fbld (bad) (bad) dec lret mov xlat sbb popfq xor adc mov (bad) cmp (bad) or stos fwait je cmc cmp jmpq sbb in cltd in sbb xor mov rex.WRB ja,pn push rex (bad) mov or sarl subl pop test (bad) sbb cmp insl lret sarb (bad) or testl mov cmc stos std std xor (bad) (bad) (bad) std (bad) gs imul add adc loopne (bad) sub es loop pop xchg mov retq pop adc retq or jrcxz mov insl and stos pushfq mov lret pop sub jge add pop xor xchg sahf push (bad) mov mov mov leaveq addr32 out rex.WRXB retq (bad) adc cmpsl cltd adc jmpq flds and cltd fwait (bad) jmpq in pushfq out cmp ss fwait (bad) rex.WR sub rex.R rex.R rex.WB sub movsl mov popfq or jbe movslq movsl jl pushfq insl fisubrl pop (bad) jae sahf push mov out sahf rex.WRB rex.X and jge xchg and je xlat sahf stc mov movabs movabs push sbb stos jae (bad) or insl jnp (bad) mov pshufw push (bad) mov rex.WRB mov xlat (bad) pop mov ds push orl xchg jmp pop in (bad) icebp and outsb rex.B loop and fistl jbe movabs xor movabs pop rex.WX jp rex.RX mov movabs fwait cmp rex.RX rex.R rex.WRB pop movsl xchg addr32 andl (bad) rex.RB enterq push (bad) add pop mov rcrl xchg mov fldcw rolb lret addl rex.WRB je xchg pop xchg sub test sahf or mov test in fidivl out imul cltd mov add test or fidiv movabs int mov retq sub fidivr or in repz sarl (bad) xorl jle,pt mov test adc decb rex fldl rex.W sbb cmp cmp and add enterq lock adc hlt cwtl pop jg add add insl push mov jmpq xchg sub mov (bad) xchg mov xor (bad) (bad) (bad) cli (bad) in cmpsb sbb (bad) (bad) std movsl pop (bad) (bad) pop xlat pop (bad) movsb stc ja push or sbb in out pop cli (bad) xchg adc rex.WR repz and pop out or cmp cs and (bad) (bad) jmpq sub jge jle rorb sub stos rex pop loop outsb sahf rex.X (bad) adc enterq sub fwait rcrl cmpsl test lret jnp xchg adc xacquire in scas (bad) (bad) mov rex.XB adc jmpq xchg rorb adc xor btc shld add cmc shr mov and not cmc rcl mov bt bt jmpq jmpq jb jmpq mov sti xchg (bad) rex.W pop cwtl outsb clc mov movabs imul movabs insl jnp sbb sbb lods int repz rex.WRB and mov mov movsb cld loopne xor lods rex.RXB sbb add sarb ss js xor or cli mov (bad) (bad) (bad) std xchg jb movabs movsl rex.WR (bad) jrcxz es mov jle or jl out xchg rex.XB (bad) rex.RXB sub leaveq cmc (bad) (bad) (bad) incl rex.WRXB (bad) fcoms int rex.RB scas mov push retq (bad) jbe xor fsub (bad) sti nop cmpsl (bad) loopne retq xchg cmp pop pop sti out mov imul sub adc jae std pop jbe btr movsbl movsbw sub rcr rol or mov stc bsr mov movzbw rcl rcr and add cmp shr btc mov ror add not lea movzbl mov jmpq jmpq add add jmpq jmpq jmpq (bad) mov pushq in (bad) cmp rex.WRXB and int lahf clc (bad) mov iret mov imul cltd xor add and es mov rex.WR or adc cmpl cmp loope in movabs sub and (bad) addr32 vpsrlw (bad) (bad) sti shrb enterq (bad) (bad) popfq movabs imul outsl xchg xchg mov (bad) int add add lods (bad) and sub xlat mov mov rex.RB (bad) cmp rol in rex pop (bad) cli pop rex.WR rex.WR mov ja mov rex.X jmpq fidivr loop mov mov mov rex.RB jne rex.R gs je jo imul jmpq sub movabs (bad) loopne xchg xchg insb (bad) push pop sub cmp popfq int and xchg insb jbe mov movsl sbb jg jl rex.WB xchg sbb iret imul pushq std rex.X rex.WRX ds adc icebp mov insb out sub in imul (bad) decb movabs lock jns (bad) sbb mov or cmp data16 lret adc callq mov stos and pushq (bad) ljmp test decl (bad) (bad) or push clc pushq cmp xchg mov xor imul push ss xlat xor or push out pop adc cmpsl (bad) es add int notb jle lea (bad) sub mov mov mov stos sbb mov xor add pop imull mov (bad) movsl (bad) xor pushq jmpq rex.RX adc in xchg mov push cmp enterq add fisttp (bad) cmp xor (bad) int3 push sbb add mov (bad) sbb push and out (bad) sub (bad) push mov movslq mov icebp movabs (bad) push rex.WR adc outsl (bad) in (bad) and in jrcxz adc (bad) (bad) sti test (bad) (bad) (bad) loop and (bad) jbe movabs int3 xchg (bad) (bad) (bad) jmpq loop stc push jns or (bad) cs in punpcklwd cmc sbb loope rex.RXB mov iret imul mov (bad) int rolb (bad) loopne pop rex.X repnz mov (bad) ss sbb jbe cmc xchg mov xchg in fmull sbb mov test repnz enterq scas pop push (bad) jno test xor mov std (bad) (bad) mov add fldcw pushq adc movabs or nop sbb rorb outsb addr32 mov or (bad) xor pop sbb pop mov push stc out or xchg pop jns (bad) (bad) (bad) sti ss (bad) (bad) (bad) adc xor movabs (bad) (bad) (bad) callq mov or (bad) rex.WRB enterq lods (bad) push ss pop (bad) cmp (bad) xchg sahf sarb outsb enterq enterq cwtl mov out xchg xchg add rex.W repnz mov add add pushq jmpq add rex.RXB gs gs imul jb je bt cmp jp je test test clc cmp jmpq lea bswap mov jmpq jae imul cmpsb xchg (bad) mov push sbb stos movsl fsubr xlat xor (bad) (bad) out pop xchg mov imul rex.WXB and (bad) jbe jo cmp out rex.WR jns xchg ficom fdivl data16 rex.R cmp jbe jrcxz pushq imul push test fnstcw (bad) (bad) decb (bad) (bad) (bad) inc pop jmpq mov movsl hlt movabs (bad) mov fistpl push cmp xor fisubrl movabs push cltd xor add lahf pop mov imul mov add adc jae movabs mov (bad) mov rex.WRX adc jmpq lods or scas (bad) (bad) jno (bad) mov and sbb mov (bad) movsl jo mov int3 add movsb fiaddl cmpsb (bad) mov pop out mov pop xorl xchg adc rex.WRB and jge je (bad) mov cmpsl pushfq cmp cmp jnp mov mov jne push (bad) (bad) (bad) (bad) xchg cmpl rex.XB add add adc enterq cmp jge rex.W icebp xor ss mov orl rorb (bad) cmp lea jae jp cwtl cli (bad) notb mull in in cmp adc insb std enterq lret enterq imul ja sbb addr32 xor jle vpmaddwd movabs (bad) int or fisttpl adc jmp insb (bad) xor or mov pushfq ja mov rex.WRB in jno mov (bad) pop mov out clc imul (bad) xor and cmp mov (bad) (bad) (bad) (bad) xor int clc pop (bad) mov (bad) movslq (bad) (bad) (bad) mov xor rex.WRXB pop rex.RB loopne (bad) jp sahf rol int3 stos adc sub sub jrcxz cmpsl (bad) (bad) jl test or sub gs xchg add sbb stos sarl std mov ficoml vpaddusb cld (bad) cmpsb (bad) pop sub cmp mov mov (bad) (bad) jno sbb mov jne rex.B rex.WRB sub jae (bad) mov (bad) (bad) cltd incl fsqrt sub add lods stc (bad) loope decb addr32 mov (bad) gs pop (bad) or (bad) movabs pushq rex.WRX int3 test iret stc sbb (bad) scas rex.R (bad) jle pop (bad) scas mov setle mov jno in jle cwtl nopl xor sbb (bad) xor mov and cmpsb mov mov jae callq fs popfq xchg (bad) pop test jmpq rex.WB jns out mov jno rex.WRB mov out out rex.WXB test or (bad) test and mov jb,pn pop cmp (bad) je (bad) jo adc xor fldenv jrcxz movsl (bad) (bad) xor gs xchg rex.WRB jge repz fs fldcw rex.WRB in loopne shrb fidivr movabs xchg fsub loope and scas cvttps2pi int3 mov rex.W (bad) (bad) (bad) cld add rex.WXB (bad) (bad) (bad) (bad) (bad) loop rex.R pop hlt scas mov addr32 add add (bad) rorb movabs sbb and in xchg xor or ja cwtl cmc (bad) adc pop icebp lock xchg hlt cmpsl icebp push sub or bt jmpq lea pop jmpq cmpsb cmpsl (bad) add add add sub add add or add add (bad) mov add sbb or sub (bad) sub adc add add add add add sub sub (bad) cmpsl sbb ss (bad) add test add sbb rex.XB add add add push mov add add add add add add add add sub add add rex.RX add add add add mov add add rex mov jmpq rex sbb sbbl jmpq (bad) and sti lods or test pop add jl adc fstpl movabs pop cmp pop (bad) andl ss mov add add push nopl xchg (bad) mov sbbb pop xchg mov and jp mul lods sub or sbbb or sbb ss (bad) mov pop pop iret adc (bad) and rex.X (bad) and rex.XB adc (bad) movslq adc rex.WRX out jmpq enterq mov (bad) adc retq pop xchg mov addr32 clc cwtl cmpl loope pop std xorl add enterq pop jmpq (bad) jmp movabs mov xchg cs rex.R add adc (bad) test lret pushfq sbb or nop xchg (bad) out lret sbb sub nop cmp adc and rex.WRX jge push repnz xchg orl out cs pushfq movslq (bad) jno rex.W fld (bad) add adc pop std jg out pop sbb mov xchg (bad) ss xor rcrl fisttpl pushq cld mov hlt (bad) jl (bad) or movsl (bad) or lods mov adc pop xchg nop lock insb sbb (bad) (bad) scas shrl xchg mov adc or xchg rex.R test sbb out leaveq xchg movsl mov sbb mov cmpsl stos mov (bad) jg movsb xor jbe retq cld out pushq imul cwtl (bad) out scas rex.WRXB scas movslq cmp push lahf and or xlat xor popfq (bad) xchg jae (bad) rex.RX imul jo lret mov cld jge fmull sub sti fcoms xor jrcxz stos pop scas rcrb mov fisub pop xlat mov orl pop xchg xchg sub xchg ja idivb mov push sahf ds cltd js movabs sar fs adc mov ja add pop roll jbe leaveq mov movabs mov (bad) xchg jo ja fdivs out jns push push out test shrb test repz push iret (bad) movabs mov sbb lahf test jne jge sbb fstp mov xor sbb (bad) insb iret movabs idivl gs and in mov cltd pushfq cwtl jp xlat xchg rex.WR xchg pushfq std imulb jns test dec jne notl xchg loope adc movb pushq out lahf leaveq cmp mov xchg xchg test (bad) lock mov fst (bad) movabs mov cmpsl mov (bad) xchg scas pop stos jg leaveq mov scas fbld add xlat fucomp out push js jle cld (bad) rex (bad) adc rex.WX (bad) (bad) adc scas cmp xor shrb movslq test ds push xchg test in (bad) (bad) movabs sbb loop (bad) movabs (bad) (bad) test sbb cmpsl xchg (bad) jb mov clc rorl xchg scas std xchg (bad) jne mov push mov rex.WRB mov push (bad) add rex.RB xlat insl xor mov test mov int3 movabs or out stos cwtl lods (bad) test mov cs fld callq (bad) scas cltd jae imull mov int xor in cltd jge movsbl out or xor int3 lods xor cmp mov xchg jno adc cmp sbb or fldpi popfq pop xlat out mov or movl fisttpl xchg and sahf mov sbb movsl jno mov es (bad) out rex movabs mov retq mov mov nop mulb mov mov lods rcrl out nop cltd popfq add outsb adc sub (bad) rex.RXB mov lods adc ss outsl rex.WX cmp sarb cmp pop movabs jns xchg pushfq pushq std scas in clc adc mov or adc fstpt out mov sbb in sub sbb jl xchg scas sti (bad) sahf sbb xchg or cmp mov (bad) (bad) out repz sub rex.R xchg scas mov mov hlt rex.RXB (bad) movsl or mov repnz add movabs or (bad) fisub in pop int mov adc lods or mov out push push out pop jrcxz xchg outsl cmp cmp (bad) rex.WRXB rex.RX rex.RB cmp rcll addl cmp stos out pushq jmp movabs pushq nop cmc je pop in callq mov or scas out je cltd jge jo (bad) lods (bad) pop push sub jrcxz add sahf xchg ds ss xchg imul test (bad) sub adc rcll (bad) mov cmp sbb out movabs mov ds mov (bad) add (bad) cmp mov cmp rex.RXB std mov xchg cs mov retq or stos xor nop and or adc out mov mov adc jmpq (bad) xchg lock (bad) std fwait (bad) lahf ja fucom jp add cmp mov and adc loopne nop cld push mov mov xchg rex.W cmpsl jae rex.R sarl jnp mov pop adc add jg mov out jbe mov nop xchg pushq out mov movabs xor pop mov fdivrs adc fisubrl adc rex.WRX mov cwtl xchg mov cmp mov movsl cmp jmpq xchg (bad) loopnel xor (bad) movabs imul shr sahf xchg rex popfq es rex.WX mov (bad) xchg rex lret sub mov rclb jl sbb (bad) cmp es rex.WB adc mov cmp mov push xchg fmuls pushfq mov (bad) mov fldcw cmc fist xchg xchg std rex.WXB xchg push shrb sbb rex or (bad) jno sbb xchg adc xor lret hlt (bad) test adc out (bad) pushfq fcmovu xchg je pushfq adc (bad) out xchg es fcomps int or lods and movabs mov (bad) std lahf sbb stos sarl fisttpl adc js jmpq movslq scas popfq in incl rex.RXB iret cmp je scas lahf movabs mov popfq jmpq jl fwait push movabs and sbb sahf (bad) gs std mov or xchg mov jmp add cwtl xchg repz fldenv in movabs fldl2t retq pushq xchg or lods pop out or lret sbb mov (bad) sub jmpq std cmc adc mov gs rex.WX sbb mov cvtdq2ps fcmovnu (bad) out rol ror (bad) mov (bad) (bad) movsl (bad) rorl cmp or cmp (bad) ss rcl lea mov popfq xor cmp pop and and xlat movabs clc cmp (bad) rcrl rex.WRB add rcrl jnp mov adc (bad) js xchg mov cmp jrcxz xchg xchg xchg (bad) scas (bad) jbe fwait (bad) xchg outsl mov retq sahf (bad) negb out sub jnp repz jbe in xor push in xchg lret mov mov mov fstps lea jrcxz lods cmp pandn lods cmpl jp mov in mov mov clc fdivr add pushq in xchg sbb pop repz xlat xor (bad) and cmp mov xchg cld int sub cmp xchg rex.XB fucomp cli xchg (bad) jmp fidivr or sbb adc or sbb jo xchg int cmp or adc adc outsb sbb mov xor sbb and or adc xchg mov ss sbb imull lea in pop repz (bad) fbld gs cmpsb lods cmp push xchg movabs xchg data16 rcrb js sbb mov (bad) mov mov cmp jg or adc pop (bad) test (bad) xor pop roll or cmp sbb outsl test (bad) outsl sbb xor and jb or (bad) (bad) xchg sar test int or jmpq pushfq fcoms lahf insl xchg fdivrl rorb int xor pop pop pop sti iret pop mov (bad) sahf leaveq out hlt cs rcl xor xor sti sbb mov adc fs ja repz outsl pop jne xor sub (bad) in jmpq adc pushfq cmp insb ss shrb xor mov lret out fsubrl adc pop fbstp (bad) stos sbb adc mov retq jnp xchg pop jg mov insl retq jns and subl xchg (bad) mov jb xchg std jl loope movabs out mov stos ss scas xchg sub mov pushfq lods xlat cmp jrcxz (bad) (bad) stos (bad) xor stos jrcxz (bad) addr32 xchg vpminsw pop rcl cmp retq cmp push adc lret sbb cwtl jle mov ror cmp sub imul sub pushq mov jg fistpl xchg mov sbb rex.WR fmul mov (bad) xchg mov jne mov and xchg pop ds (bad) cwtl test cmp mov out out xchg in rex.RXB sbb stc pop fcmovne add xchg lea retq pop fsts sbb xchg xlat mov jrcxz push insl xchg push int mov movabs sahf clc or sti mov mov cltd xorl in (bad) ja add rex.WR lods mov (bad) insb jge add sbb mov pop (bad) pop xchg pop fdivl (bad) (bad) movsb enterq and adc sub cmp jle leaveq cld divb cmp sbb mov xor mov rex.R ss movabs callq rex.WXB sbb (bad) jl rex.WRXB xor xchg (bad) (bad) hlt jle mov orl mov xchg stc xchg (bad) or (bad) mov sti xchg fdivl out lret (bad) (bad) (bad) xchg cmp rclb jbe cltd pop jrcxz xchg (bad) (bad) movsl xchg rol mov xchg push cmp popfq addr32 out sbb mov out stos movabs pop nop rex.X rex.WRXB clc xchg and jge mov add cmp std cli (bad) xchg cmp mov push rex.WRX sahf pushq shl adc pop pop pop mov pushq mov and repz adc mov (bad) mov xchg adc jg cwtl js idivl mov sahf sbb mov mov sub (bad) pushq sbb repz cmp (bad) pop ds cmc and test mov mov mov callq cld movabs push andl push lahf sar mov stos stc (bad) xor or (bad) adc mov movabs (bad) lea rex.XB movabs pop (bad) xchg rorl jno (bad) out cmp movslq out (bad) vpshufhw rex.XB mov push (bad) cmpsb (bad) (bad) sbb cmp rcl enterq out rorb out (bad) pop rex.WB rex rex.X (bad) add jb popfq push mov out cwtl rclb xchg sub mov mov adc out (bad) adc xchg ror rex.WX rex.XB mov xchg xlat (bad) jno adc mov mov shll jo rex.XB xor (bad) movsb sar mov sbb movslq (bad) out fnstsw sbb jrcxz adc rex.X rex.RX xchg xchg mov jne data16 lahf loope xchg movabs mov fs popfq rex.W out gs xchg repz jne mov xlat cltd nop movabs add sti scas out xchg (bad) adc pop or movsl mov (bad) retq std retq (bad) rcll push movabs retq pushq jbe outsb movabs mov (bad) mov add mov xchg cmp adc add fs out (bad) xchg fimull (bad) xchg xchg (bad) fnstsw mov and (bad) movabs xchg push cli push test rex.R (bad) js sbb (bad) mov out pushfq rex (bad) fstpt pop jb or cmp movslq icebp int3 lahf (bad) mov add jge retq cmp out mov (bad) jg cs rex.X ds rex.W pushq xchg rex.WRX cmp add lret out sets roll fdivrl mov pushq mov roll add mov (bad) xchg movabs add jrcxz idivb (bad) pushq hlt cld pushfq pop std mov jge sti cmp mov add mov movl cmp jbe lea xor (bad) pavgb jmpq cmp rolb or scas movslq xor int (bad) jns sbb (bad) outsb rex.WRXB cmc repz rex.WRXB negb hlt push (bad) fmull cmp rex.RX repz (bad) mov (bad) ficomp (bad) xchg xor fsubrs notl rex.WX jmpq fnstsw lods mov xchg push test pop (bad) rex.WRB sbb mov adc and sub sbb insb es cmpl mov xchg mov pop mov (bad) add fst sub adc out pop stos divb xchg out (bad) sbb ds (bad) adc xchg xor stos and or (bad) pop mov jns out pop xchg es in cmp gs mov rex.RX adc int test jns adc cmp add xor sub repnz stc mov adc jmpq cmp repz cld cmp and scas (bad) xor in (bad) (bad) gs cmp xchg pop (bad) mov pop outsl mov test (bad) getsec xchg gs cmpl sbb cmpsb cmp or gs push (bad) push rex.R int3 push fst jg scas rex.WRX (bad) cld out subl mov (bad) (bad) imul cmp adc xchg test or cld lods mov jmpq cmp neg out mov (bad) mov out mov mov mov pop lret push js (bad) sbb fstpt insl je or cmp (bad) xchg adcl sbb (bad) (bad) pop and decl and jp fwait lock loop (bad) push (bad) add test fdivl and rcrl mov cmpsb sbb cmp cmp (bad) int jge mov sbb decl mov mov sub xor lahf fsubl pop or add jnp in mov rex.X shll xchg mov imul xor rex.X jrcxz pop xchg div pop jne sbb repnz sti and mov cwtl fisttpll jle out rex.WRB std movabs lods rex.WRX (bad) lret pushfq mov lods js adc or rex.WRB lret mov (bad) add cltd callq std jbe retq rex.WXB (bad) ljmp movsl (bad) rex.WRXB or mov (bad) clc (bad) lock cltd fnstcw movabs xchg icebp rex.WRXB (bad) jmp (bad) fsubr mov add xchg mov mov mov (bad) sbb cs mov cmp sbb pop sar js jl jo push and add out in sti mov mov cmp out xchg fisttpll in (bad) rex.RX ss xchg or std (bad) mov lods (bad) lea mov mov fnstsw sbb lcall mov imul insl jge addr32 (bad) pop mov xchg (bad) imul xchg xor mov pop movsl test mov cmp std cmp idivb iret (bad) jrcxz fmulp (bad) int3 ds jmp push outsl retq mov mov popfq (bad) jle cmp mov retq sbb (bad) adc xor scas xlat (bad) (bad) xchg repz xchg scas ja sbb leaveq rex.R fs cmp movsl out xchg sbb mov (bad) out (bad) adc mov (bad) sbb fistp (bad) push push or xchg sti push int3 sbb ds retq mov rex (bad) sub adc stos rex.WRB add or leaveq or (bad) imul sbb jge lahf (bad) lea outsl fdivs fnstcw in imul icebp scas xor and mov mov cmp cwtl jmp rex.W ja data16 sub push cmp sub push push rex.WRXB sti cmp sbb (bad) adc pop lahf sbb push cmp (bad) movslq callq retq xchg adc (bad) and sbb xchg mov xor adc jl out out add sti sub add sbb sbb (bad) jo mov cmp ss and xlat fistp or mov int3 xchg iret adc sbb andl (bad) stos mov (bad) jl add cmp (bad) xchg cmp outsb xchg rex.WX adc cmp mov outsb movsb movabs jp bnd mov xor js xor cmpsb int callq stos and cmp xchg jg mov gs mov add push lahf pushq pop cmp or shrl jp rex.WRXB (bad) test and mov xor insb repz sbb mov sub jne adc pushfq std xchg movb xor (bad) rex.X lret mov (bad) mov insl std cmp cltd sbb mov (bad) test (bad) mov int3 lods or mov repz xchg mov nop add sbbb movabs sarl sub jle movsb rex cli (bad) xor (bad) outsb movsl add mov push push lods lock lea jge (bad) retq (bad) rex.WRB (bad) out lret (bad) adc fimull int xchg cmpsl test mull mov add rcrb (bad) xlat cmpsl lahf push or ds (bad) mov mov (bad) jae jne rex push xor adc movabs fcompl sbb and sarl retq push leaveq add fnsave or lods push lea (bad) (bad) xchg jnp xor add adc xchg rex.RB or retq (bad) mov cmp xlat xlat (bad) iret xchg out scas pop cmp push sub leaveq ds and cs mov or mov mov mov xchg mov (bad) rex.RB jno movabs pop push lock jge retq int rex.RX xchg mov (bad) mov jae (bad) andl jl out test mov xor adc rex.RXB sahf (bad) mov jns fnstsw pop sti mov mov loope movsl (bad) imul lods repz cltd movabs lods repnz (bad) mov xchg rex.R lahf cmp xor pop adcl lods fistl cld rex.R cmp mov in retq mov (bad) es sub add jb cmp push cmp rex.WR push sbb out add (bad) pushq std mov sub xchg pop and jmp fst in retq mov test scas jmpq xchg movabs (bad) lret popfq iret callq int3 (bad) cmp fnstcw callq out xchg jns add rolb xchg jge cmp xor fstl jmpq push stos (bad) scas shrl sbb stc iret jne pop push pushfq pushq or cmp adc ds (bad) mov xchg rcrl pushfq mov mov xchg movb (bad) (bad) out add mov pop mov xchg in movslq xchg push and cmp ss scas push jl (bad) pop xchg cmp out xchg push jg xchg mov js rex.RX adc xchg cmp sbb add out adcl adc cwtl test (bad) cvttps2pi (bad) xchg sbb xchg int lret popfq sbb test (bad) or popfq (bad) (bad) out idiv orl mov repnz stc (bad) rex.XB cmp rex.WRXB and mov xchg mov rex.RX xor fisubrl xchg adc (bad) ds or mov movabs jbe out push movabs pushq andl retq xchg xchg cld es imul cld pop mov (bad) movabs or mov jne mov (bad) in (bad) mov sub xor rex.WRX imul out popfq sub out lock pop lahf mov jg imul (bad) push rex.W addb lods popfq mov mov pushfq ror out test jmp out xchg xor adc sbb test out test pand jg sbb rex.RX nop out cmp outsb cwtl mov retq or js shrb cmp stos rcll mov cli mov pop fnsave rex.XB mov jnp rex.WR mov cmp pop xchg (bad) (bad) pop or mov xlat cmpl xor jrcxz cwtl add jo (bad) mov popfq pop mov popfq ficoml rex.WRB sub sbb mov pop xchg rex.WB push lea or add (bad) test (bad) xchg (bad) jmpq mov or (bad) mov out xchg mov cmp cltd (bad) test mov or and movsb ds xchg int cmp mov jp mov adc imul jmp mov rex.WR in fsts mov jl je fistp mov loopne mov mov mov (bad) movabs movabs xchg mov je sahf fidivr (bad) (bad) or and mov xor lods xchg mov int lret mov mov (bad) xchg stos jrcxz mov or (bad) in addb jmp in sahf pushq out (bad) leaveq (bad) xchg sub mov ds scas xchg pop (bad) xlat and add or xchg cmp xor xor (bad) xor (bad) xlat lret out sbb sbb rex.WRX or rex.X rex.WR mov (bad) adc xchg mov jb sbb lea (bad) movabs xchg (bad) (bad) mov adc shrl stc insb mov clc rex.WR mov xlat (bad) popfq (bad) movabs push callq mov xor stos in imul in xor cltd sahf movabs rex.B (bad) pushq push push mov in orl pop fstpl retq jl pop pop (bad) enterq sub cmpb pop (bad) rorl xchg (bad) mov out rex.RX in mov (bad) fcompl mov clc sbb mov jp sahf xorl mov sahf pop ds fistl mov pop sahf mov (bad) cmp rex.WR or retq cmp outsl and xchg lret xchg lods xorl jo mov retq test or fsts jmp movabs cli negb mov sbb mov adc or sbb xchg mov jrcxz jle or lahf roll xor xchg jnp cwtl (bad) imul es rex.W out add xchg rex.WRB (bad) shr cwtl mov xchg jbe pop or retq (bad) lahf (bad) sbb push push rcll movabs test pop xchg je js test ficoml mov xchg movabs sahf out mov out rex.WRXB xchg pushq push pushq in pop lcall xlat xchg xor adc sbb test pop mov adc xor adc mov mov (bad) mov movsb ljmp movabs xchg cmp (bad) sbb xchg add jp fadds sub (bad) loop sbb (bad) movsl (bad) mov mov sub and popfq (bad) pop scas xchg sti jmp out or (bad) pop (bad) movsl sub mov mov lea pushq fucomi mov data16 mov cmpsb (bad) xor out pop movabs mov sahf lahf es fnstsw cld shr sub movslq or fcomp adc (bad) cltd jmp (bad) rex.WRX out jno test clc (bad) (bad) pop movabs (bad) scas cmp jnp out mov jge and cmpsl sub mov pushq or mov (bad) mov mov rex.WRB insb hlt adc xchg loopne and xchg (bad) loop lods ss (bad) ds lods xlat fs sbb adc stos scas or xchg pop std movabs rex.WRX (bad) in int3 test adc adc mov clc rex.WRXB cmp rorl out xchg shlb fdiv jle fs (bad) cmp retq or fist out xlat fstpl test mov (bad) add mov (bad) std jp push mov rex.RXB or cld pop (bad) adc scas xor (bad) repz ss xchg jmpq scas add iret (bad) jns (bad) (bad) adc scas (bad) cmp xlat mov and mov jg (bad) sub mov xor mov mov sbb xchg cmpl movsl imull mov out enterq stc or sbb loope pushfq (bad) mov cmp adc xchg flds out pop sbb int3 xor fistl sub data16 mov xor mov std fdivr cld (bad) cmp cmp bsr jg pop repz xchg mov mov imulb push movsl push push push (bad) in mov (bad) rep xor andl pop mov sub jge (bad) test (bad) fmull pop (bad) callq sbb cmp fist rcll mov mov pushq and sbb jge mov cmp lret repz rorl pushfq (bad) (bad) mov (bad) xchg jmpq mov mov xchg or xor sbb movabs push mov (bad) adc popq jrcxz test mov mov test mov sahf in sahf cmpl sub sbb add movabs scas xchg mov xchg jo (bad) cltd cltd cmp mov add sbb loopne fist rex.WR mov (bad) out rex.R rex rex.WB push mov fcoms js cmp sub push cld jnp movabs fnstcw out rex.WRB icebp push test lods sar std mov push jo sbb or (bad) adc lods cltd idivl repnz mov mov (bad) sbb jge and scas lods add mov test cltd mov mov (bad) fcmovnbe rex pushfq leaveq rcl in xorl mov xchg mov jge rex.WX scas fwait jp in lods and xchg lods mov (bad) mov push mov jle je (bad) mov (bad) out sbb fld1 pushfq cmpl (bad) mov fcoml movslq jge mov mov mov lahf xchg rcrl sbb xor pop cwtl loop pushq sub or icebp roll sti pop gs js cmpsb popfq test cld mov add rex.RX fstpt jge (bad) fisubl (bad) mov pop lcall idivb cmp jge xchg push push xchg sub cmp loope adc mov stos or (bad) sub adcb pop (bad) jmp (bad) je addl xor mov out mov leaveq jbe mov popfq (bad) movsl callq pop out or or or divb callq sub stos popfq ja shll idiv cmp adc cmp xor fstps and xchg out or (bad) sub or rex.WRB push xchg subl (bad) fcom and out mov mov pushfq adc int3 (bad) mov cmp cmp xchg shrl or pop add out adc roll push pushq mov (bad) and sub or fsubl adc fdivrs repnz push adc sbb xor add in add sub retq insb movabs xchg mov out or (bad) (bad) rex.R push lea cli cld (bad) out xchg (bad) fucom insl fiadd lea (bad) int fstpt add frstor pushq xorb (bad) pushq out ficoml rex.X pop fmuls and mov out cwtl cmp mov fsts fsts sub fdivp stos fstp pop (bad) mov xchg repz add test push xchg icebp add (bad) xchg pop sbb mov shll adc adc out retq sbb loope enterq mov or add jmp lret xchg ja movabs fimul ds decl mov fistl repz or mov int3 jl sub out jmp stc stos sbb sbb imull jb (bad) sbb (bad) cltd out pushfq out imul test es insb imul sbb fdivrp in rex.WR jle add lahf mov lods ja fbstp pop shl callq cmp mov (bad) mov jns and movabs rex.WX cmpsl in repz add xchg adc jns fcos jle rex.RX repnz rol (bad) jmp xchg lods movabs mov rex.WX nop adc rex.X leaveq xchg lret lock pushfq mov sbb xor jl xchg sub rcrl mov andb (bad) movslq sbb xchg rex.WR addb fwait js xchg add cli xlat gs jmpq in movabs push (bad) pop jg push fdivrl (bad) movabs xchg lock incb (bad) mov push or sub cmp pop pop add rex.XB neg xchg or out mov movabs or (bad) jnp shlb stos xlat fistpl insb adc xchg mov cmp int fwait sti pop (bad) fistl push sbb xor mov (bad) ja loope iret (bad) add cmpsb fsubs int xchg rex.W jl hlt movsb jg rclb cld out (bad) stos (bad) and or or xor (bad) int mov test (bad) mov sub rex.RXB sub mov xchg (bad) (bad) mov add cmp movabs fildl mov in jge add clc rex.W xor or mov mov sbb movslq lods cld (bad) rex.RXB xlat movabs sbb movsl sahf sbb and push cltd sub (bad) or or scas rex.WRB popfq mov pushfq (bad) movabs (bad) pop jmpq gs mov enterq fwait movsl or jl mull xchg out sub (bad) add cltd jl sbb sbb adc mov xor enterq cltd push jmpq pushq xor (bad) (bad) data16 pop (bad) mov rex.RXB xor (bad) std retq adc add fnstcw orl rex.RXB mov movabs insb mov mov movabs jo out cwtl sbb lret rcll jae imul (bad) stos (bad) push jmp or add jle adc fisttpll mov (bad) rex.WX (bad) (bad) rcll cwtl jg xchg lods (bad) xchg xchg add mov rex (bad) mov movabs mov or rex.WRX or mov test or ss rex.WRXB repnz fimul ja or out nop (bad) jns pop fisttpll int3 (bad) xchg loope sub movups cmp rex.W cmp (bad) mov pushfq sbb cwtl push sbb movslq stc mov xor or xor pop rex.X test push fistl push clc lret mov xchg (bad) fs sub mov fs jg pushfq es rex.WRX xchg repz and scas and pop (bad) xchg lods or fs mov mov popfq jmp push adc orl mov jnp mov hlt (bad) xchg mov or negb (bad) (bad) je imul repz in rex.WRB (bad) and or sbb int push sahf in lods rex.X pop xchg (bad) rex.RXB or movabs and pop rex.WX (bad) (bad) or (bad) adc outsb (bad) xlat or pop mov imulb sbb movabs mov pop mov push xlat je mov scas mov jno (bad) sbb pop (bad) jrcxz retq pushq push rex.W repz xor loope rex.WX cs imull add xchg in xor mov retq xor cwtl cmp mov pop adc (bad) mov test mov mov jae ds in xchg and sarl jno (bad) lods unpcklps mov pop gs js mov adc (bad) lret jl xchg mov stos je cmp in psrld jrcxz pop (bad) cmp xchg pushq and xchg in mov cmp repz xchg and cli out xchg cmpsl sbb adc nop (bad) out bsf mov mov test jne mov cwtl jns mov fist rex.WRB push mov popfq xlat out ljmp (bad) lea mov mov pop loope scas pop rorl cmpsl loopne (bad) push fnstsw cmp pop pushq xor out (bad) cwtl and mov xor jl in jbe jne cmp jmpq sahf (bad) jmpq xchg lock out xchg xchg pop std push imul in xchg push adc (bad) mov sbb jo movabs xchg xchg out rolb lods or sahf mov (bad) lea rex.B (bad) mov test mov (bad) repz and (bad) rex.RXB scas rex.WX cld cmp xor test xlat insb cltd add divl mov (bad) sbb in (bad) movsl mov jg jae xor xor scas (bad) sbb mov sub cmp and js (bad) or adc outsl xchg sbb sbb sti fisubr adc jno (bad) add icebp push stc fildl jae divb or pop sete xor mov notl sbb rex.WX sbb addl sbb xchg out (bad) shlb stc xchg and iret jns and and fwait cmp sub mov (bad) idiv pop jne fstpt mov icebp cltd fdivrl xchg enterq jmp retq retq test stos push mov jno fstpl (bad) cmp cmp mov xor and (bad) (bad) mov callq (bad) cmp icebp gs adc jrcxz roll fs xchg jbe test ss mov popfq test retq (bad) xor in cmp cwtl cmp push outsl data16 nop and jecxz pop (bad) mov imul rex.RXB gs mov shrb (bad) fstl jge fcompl xchg jmp and and add imul ss and sarl notl mov fstl jg mov orl adc or mov std mov (bad) adc xlat or push test movl (bad) imul fild xchg fdivl sbb shll jnp popfq push out mov fsts out sahf (bad) sbb (bad) movslq adc cmpsl xchg cmp adc outsl (bad) pushq punpcklbw test rex xor sbb and sub rcll rex.WXB rex.RB lock (bad) subl popfq insb movsl cmp movslq mov (bad) mov rex sbb pop hlt lahf add and mov retq rex.WRXB popfq out (bad) fisttpll sti rex.WRXB sbb mov fsubrl jnp ss js movsl ss sub (bad) movabs lods adc cld retq mov sti test imul retq rcrl pushfq rex.XB lahf or pop or int cwtl xchg xlat cltd xchg (bad) mov adcl and in rex.XB cmp xor mov and fldt and hlt adc xchg rex.WRX mov cmp mov sbbl mov xchg xchg pop jnp retq (bad) cltd movabs sbb (bad) fsub pop push testb sbb cmpsl sbb sahf rex.XB xor ds imul jg pop out (bad) xchg scas (bad) loope sarl sets out jl mov jle loope (bad) hlt xchg adc stc out mov pop std adcb scas jne xchg stc lahf rex.X cmpl sbb (bad) (bad) fsubrp jmpq scas add scas (bad) mov mov add or sti jrcxz lret mov push mov sbb (bad) push (bad) enterq in sbb scas bnd insl sbb cld adc jae cli loope es mov movslq xchg sbb scas je xchg repz lock roll stos clc xchg rex.B fsubp rex.W movslq mov mov xor lock cmp jge xchg sub sbb (bad) (bad) sbb or (bad) fisttp loopne jl adc sbb cwtl movslq pushq scas adc jrcxz pop sub movsl mull xchg jp (bad) repz hlt out adc mov imul xlat mov out (bad) outsb sahf mov cmp (bad) insb (bad) fstpt sbb cs sbb mov xor sysexit (bad) cmpsb mov mov add jne or or xor pop jne pop mov (bad) sub ss mov stc fs xor xchg rex.XB cltd jle (bad) push std (bad) fwait pop idiv std sbb mov mov pop pop scas pop pushq cmp rex.WRB cwtl xor or (bad) stos rex.RXB fs xchg loope cmc rex.X (bad) xchg cmp rex.WR mov lods add (bad) lret mov and movabs jle out cltd lret rex.RB nop xlat cmp add xchg jle lods clc add testl (bad) test cmpl mov sbb test lods mov icebp (bad) (bad) push mov sbb (bad) cli sbb clc mov push jl mov (bad) in (bad) rex sti (bad) out push pop pop jge sarl jle jb movslq (bad) outsl sahf (bad) jrcxz jne mov fwait retq pop retq (bad) incb (bad) jne (bad) ljmp jl test sbb addr32 enterq jrcxz hlt jg pop ds in or movabs push xchg insl rex.WRX and xchg iret xchg mov (bad) adc sbb mov xchg or xchg xchg (bad) (bad) (bad) mov std insl shrl pop add loop xchg (bad) xchg je fwait push jns sub rorb outsl sbb (bad) add push retq mov rex.WRB mov sbb movslq pushfq cwtl sub push cli xchg adc rex.B pop imul movabs sbb fcmovb test imul mov movslq or (bad) fwait sti imul jnp xchg int xchg loopne lods rex.WRXB negl (bad) (bad) callq int (bad) loop repz xchg pop es mov callq sbb gs out rex.WRX sti rex adcl xchg adc mov out sub out sbb pop rex.WXB seta xchg and cmp add (bad) adc sbb adc jrcxz mov sbb iret nop stc retq (bad) or pop rex.RXB repz jmp loopne cld cmpsb add fnop in or retq pushq andl pushq pushq adc push sbb out imul test mov push movabs rex.WR retq (bad) mov jl fistpl movabs mov (bad) scas push (bad) sub mov cltd jbe mov movabs int xchg (bad) rex.RX adc rex.XB pushq rex.RXB in (bad) mov and push hlt and cld cmp fbstp rex.WRB (bad) scas or mov loope push pop cltd sub jb mov sti test xchg mov fstps cmp xchg and push jge sti rex (bad) sarl pushq std xchg fistl (bad) push mov pop mov sbb sbb (bad) cltd rcrl xchg adc lret fstpt mov (bad) sar sbb xlat movslq sbb movabs xor lret testl cmp iret test (bad) add or (bad) int3 mov mov movabs pushq jo scas clc add push mov cmp xor xchg sbb jge adc out jno mov fnstsw sar out or xchg cmp xor int3 and push sub add push sbb mov (bad) mov movabs fidivr push (bad) ja pop out cli int3 out sbb std movabs pop pushq int out mov (bad) in lret int3 mov xchg pop addr32 xor mov (bad) sub mov movsl xchg adc (bad) (bad) rex.RX addr32 or or scas jge iret outsb cmpb jrcxz cltd out es (bad) mov retq jae mov (bad) xchg test xlat fstpl movslq stos movsb (bad) adc rex.W mov mov (bad) (bad) xlat pop jge pushfq retq cltd jnp jne (bad) add lahf cwtl decb insl lods (bad) (bad) lret cli rcll mov cmp fs pop sahf in rclb incl fstps pop outsb adc mov sbb outsb fisttpll xchg mov js mov pop hlt es or outsb subl loopne loope (bad) cmp sub notl rex.RX sbbl cmp cmp (bad) mov in add movsl cmp fdiv jl xchg mov cs mov lahf push jnp repnz or add xchg cmpsl fnstcw clc and mov cld movsl fnstcw int3 and xor (bad) or (bad) sub add lock xor or adc mov notl sti sub jl repz repnz lock (bad) mov pushq retq mov (bad) out cli (bad) movabs mov pop sahf mov mov (bad) retq mov jrcxz sbb pop add insl cmc out sar (bad) fist jge leaveq cmpsl movabs mov mov push fistl (bad) mov adc xchg cld retq rex.RXB repnz sahf ja (bad) xor sbbl cld div es xchg outsb adc pop stos rex.B stos push xchg pop cmp xlat push in int3 jae fprem1 icebp or mov (bad) mov xchg pushq sub add sub cmp mov iret mov jge outsl xchg (bad) mov test rex rex.WR mov pop stos rex.B xchg (bad) lods retq sub xchg cwtl sbb sbb mov sub movabs mov fisttpll fucomi retq or decb mov mov jne xchg movabs rex.RX lret pop add (bad) out (bad) sti or jae pop lock push test adc pop shlb xchg xchg rex.RX cmpsb xchg xor js adc rex adc jno rex.WRXB insb or leaveq repz (bad) jne push mov cmp movabs movsb add out xor xchg sar (bad) je rex.RX movslq (bad) cmp (bad) or mov (bad) (bad) xor adc jrcxz xchg loope rex.RXB and or (bad) rex.RB fmull jo sbb cmp pushfq nop add leaveq mov rex.WRB out adcl mov push stos jmpq in (bad) or frstor (bad) test cwtl push std xor out mov push pushfq lahf jg sti mov movsl js lret stc movabs in mov ds out xchg cmp rex.WRXB add jge,pt (bad) or icebp insb mov pop xor repnz movl mov in test cs movabs adc (bad) xchg jmpq stos xor add (bad) stos jg xchg incl (bad) insl cmpsl (bad) mov nop or sub outsl and test sti mov iret lret (bad) pushfq rcll mov xchg push sbb out rcll fsubr popfq movsl sub mov (bad) sbb push jo (bad) jnp mov lods pop (bad) push push jl out outsb rex.X push and addb or cmc mov sbb jmp mov and in (bad) pop pushq repnz (bad) cwtl mov xchg adc adc push (bad) cmp mov cmpsl rex.B loopne mov jg push cltd pushq movabs jg xchg movabs movsb lods pop mov (bad) or xchg cmp fistpll fwait cmp fwait cmpsl xchg in mov mov push rex.X cli cmp push callq (bad) sub addr32 and (bad) mov adc adc xchg pop pushq or jge xchg cltd cmp sahf movabs cltd or xchg jle push mov callq es (bad) jle (bad) testb movslq sbb (bad) xchg std mov lret adc (bad) ror push mull rex.X rex movsb retq cli (bad) mov (bad) xchg mov mov lea jg (bad) (bad) in mov add ds xchg jge movsb mov (bad) sbb stos out add js pop (bad) cmp loope cmp es icebp (bad) sub and test (bad) lea or es mov mov (bad) rex.WXB (bad) movslq in movsl (bad) orl (bad) stos sahf xchg sub push xchg and xor add (bad) or xchg push out jle sbb test iret ss cmp ficompl (bad) xchg sbb (bad) movabs leaveq mov imul mov push cwtl mov xchg sbb sti mov jo mov xchg (bad) hlt rex.WRB sbbl ds loope test bts mov mov fcompl mov popfq and xchg pop xchg mov fidiv (bad) xchg movsl cmp jne rex.WB (bad) jrcxz fbstp insb xor movabs pushfq pop ss cli mov mov data16 xlat jp shrl xchg test test rex.XB cmpl pop out in lss out xor rex.R cmp sbb xor leaveq xchg sbbl movslq rex.W cmp jnp lahf mov pop cwtl lods cltd jmpq roll xchg sbb lea cwtl mov movabs lods inc cwtl mov xchg js mov lret sbbl rcrb pushq (bad) jae or frstor sbb adc xchg es mov xor in fmull lock ss lods jbe and pop sbb pop movslq push or sbb outsb or sbb pop rcrl sbb xchg out movabs cmpsl fiadd (bad) movabs loop rex.R adc (bad) (bad) (bad) mov mov push pop cld jle rex.RB xlat orl cmp rex enterq pop lahf lret (bad) sub mov fldl (bad) xor pop lea and xor mov (bad) cmp jrcxz push cs pop pop (bad) sbb sbb pushfq xchg repz (bad) roll js xchg sbb adcb push sub gs pop out repnz imul out sbb in leaveq xor jrcxz cmp je sbb mov rex outsb movb (bad) movsl adc (bad) incb imul incb repz xlat or pop jnp xchg add (bad) je (bad) movabs mov loop lahf and mov mov out mov (bad) (bad) mov mov lahf sbb sbb es enterq xchg popfq cmp loope movabs outsb scas cmp cwtl xchg outsb nop add mov xchg mov fwait pop cmp sbb (bad) jl or movslq scas cmp std mov (bad) jbe popfq pushfq rex.W (bad) mov lea stos (bad) or jno rex.WXB popfq fistpl sti pop out movslq movsl (bad) mov sahf lahf add lods pop push out rex.WX stos xchg cmpsl fs sub push mov sbb and imul or cltd retq divl or sbb test cmp pushfq out test pushq xchg xchg (bad) (bad) (bad) sbb leaveq pop sbb pushfq jmp or sbb es xchg (bad) mov pushq mov rex.WR or rex.B enterq xchg rex.WR insb add data16 cmp cmpsb mov (bad) rex.RB rex.RB int (bad) xor cmp cmp (bad) lret jb cmp (bad) xchg mov (bad) mov pushq sub xchg mov (bad) (bad) (bad) fidivr add adc lock (bad) imul out jl xchg or sbb out (bad) lret mov and clc addr32 cwtl sbb (bad) mov fsubp and loopne rex.WRX std rex.WXB add cmp (bad) mov (bad) xor mov xchg cld out rcrb xor iret (bad) (bad) mov (bad) rex jns push (bad) (bad) cltd add sbb rorb je shl (bad) cmp addb add xchg sbb (bad) retq xchg scas (bad) pop retq sahf jp mov xchg xor sbb and mov int3 push rex.RB movsl stos jrcxz out (bad) cmp mov mov xchg or sub and xchg fstl push movabs test mov fldenv fisttpll adc cwtl mov mov lret push stos xor adc rex.RB testb mov xlat rex.WRX imul repz and pushq rcl mov fidivl fist mov (bad) sbb xor loop out mov jne rex.WRX iret fstps cmpsl in push add fdivrs xchg xchg outsb mov cltd test sbbl loopne rex.WX insb xchg mov pop add (bad) cld ss sbb rep repz int mov (bad) mov adc (bad) cmp and cmp rex.XB cmp pushfq imul or xchg lea (bad) cmpsb cmp cltd or xchg mov fisubr sbb sub addr32 stos sbb rex.RXB cmpsl out pushfq jg cmp fstl cmp sbb test pop (bad) xor adc shrl popfq pop popfq adc xchg pop mov fnstenv callq lods jnp push cmp mov cmp adc adc jle (bad) or ss cmpb (bad) outsl mov movsl cmp addr32 pop cld imul lret or pushfq (bad) xchg shl xchg rcrb sub (bad) mov or cmp sbb adc (bad) cld mov sbbb in adc mov sti xchg mov push cltd or mov xchg hlt rex.X xchg (bad) xchg clc push xor adc or push jl js add (bad) cmpsl roll push xchg movslq rex.WB (bad) in xchg (bad) rex.X mov xchg lods xchg sbb cmp xlat sbb jp (bad) (bad) mov test fsubrs sbb ds sbb out ldmxcsr movabs std rex.RXB clc xchg imul sarl jmp std cmp addr32 push and (bad) xchg loop jmpq rorl jo rex stc cmp lea sub jg add out imul int mov mov xlat xorl ja outsl mov imul sbb movsl add callq fstps sub cmp xor pop sti out (bad) (bad) xor repnz movabs cld xchg out jns callq sub or sbb jns pop adc mov xor xchg (bad) and loop cwtl movslq adc fisttpll push xor sub xlat (bad) jne xor (bad) or xchg jl mov xor sbb sub mov pushfq add bswap rex.W (bad) xor pop pop test scas sar fidivr std adc rex.RX adc insb nop rdtsc cli movabs mov jg push js,pt movsb out stos add mov (bad) mov pop and add test mov cmp data16 addr32 or mov callq rex.WB xchg fs orl push notb movabs int3 push imul jns insb mov xchg jl in sbb push pop sbb push movabs movsl mov cs mov cmp sbb cltd (bad) xchg movsb (bad) mov fs scas pop add rex.WRXB scas add xchg movabs sbb (bad) insl jae mov xor es movabs xor adc xlat test mov add in xchg xor cmp mov ror fsubs pop lods (bad) xchg jge andl rclb cmp in mov int mov add loop mov sbb sbb fild or out lods out mov sub cmp cmpsl movsl or jg rex.WX (bad) out (bad) rex.WB mov out xchg xlat lods sbb xor mov mov or add push and adc loope fmul or fcoms add mov lods addb (bad) (bad) int3 cmp cwtl mov cmp add push xchg adc xchg pop sub test xor outsl xchg lods fcomps jb fs pushq fldenv clc (bad) add retq lret xlat mov mov mov enterq mov jne sbb outsl callq clc pop xor callq (bad) clc pop out loopne lea enterq lea mov retq fisttpll in sahf rex.WB add ss retq (bad) jp add mull cmp enterq mov add (bad) sub adc xchg xchg mov clc xchg xor imul jle mov mov test add imul mov jp (bad) loope cs xchg pop or imul or and jrcxz xlat (bad) sub pushq enterq pop rex.WR out add xchg out sbb jrcxz vpmovsdb xchg outsb mov jns mov mov and pushq mov push (bad) icebp orl mov pushfq scas and cmp movslq xchg fistpll sub insb sbb test jmp xchg push sti sbbl (bad) add xchg fcmovnu sbb sbb in pop pop xor (bad) out faddl xor rex.WRXB mov rex.B rol mov outsb stos outsb repnz sub scas lret pop add nop rex.WX data16 ja in xchg in cs test pop outsl ficompl rex.XB je mov imul mov jnp fcmovne mov (bad) icebp mov sub xchg xchg or (bad) sub popfq movsl sbb mov sub (bad) mov rex.WX rex.X sbb rex.XB (bad) sub xchg loope out loop or lahf xchg sti imul (bad) adc (bad) sbb xchg mov rex.WRB rex.XB jns stos iret fidivr lods out out std (bad) (bad) mov and fldl mov sbb cmpsl pop or out test xor scas sbb (bad) adc mov lods cli (bad) push or movabs rex.WRX or xor cmpsb mov sbb lret movabs (bad) lahf xchg imul rex.RB or in int jnp lock frstor fwait out mov mov rex.R cmp (bad) sbb and ds int pop rex.WX mov mov (bad) (bad) mov mov xor jne adc lahf xor xchg insl xor shr ss rex.W (bad) pop lea data16 (bad) cmc add shrb (bad) and (bad) xor (bad) loope cs xchg adc cmp mov or add pop out out mov xchg sbb roll nop push (bad) (bad) cltd pop movabs pop rex mov js add mov xor imul or repz rex.WR fstl sbb ss lret lahf out mov pop (bad) es pushfq (bad) out jrcxz out mov (bad) xchg movsl cmp mov int cmp sub leaveq (bad) test (bad) pop sahf xor enterq cmp out outsb sub mov cmp or lret sbb fcomi xchg adcl lret cli test pop scas rclb cmp adc jl xchg mov gs push test cwtl popfq retq xchg sbb pushfq in push cmp insb xchg pop pop mov loop loopne jbe mov mov fldt lea loop mov fs rex.XB mov sti jle loopne roll sbb in sub jp and mov or sub imull notl out rex.XB cltd mov sub (bad) sbb test (bad) mov pop test movabs popfq cld mov fs out mov pop rcrl xchg notl cmpsb mov rex.R (bad) mov cmc cltd fisttp xchg fmull callq mov sbb stc cmp mov pushq pop mov rex.R rex.RB adc fadds (bad) (bad) mov jge cmpsl sub mov cmp retq jmpq jge sbb movsb loop leaveq adc lret pop (bad) jmp sbb in ljmp icebp push sub push sti rex.WX xchg rcll (bad) cmp idivb adc cltd shrl stos movabs pop xchg add fstpl (bad) (bad) (bad) movabs rex.XB adc mov std jns pop xor jmpq fadd (bad) lods xchg sbb out insb ljmp (bad) in xchg add cmpl sbb enterq in in mov pop cwtl gs mov xchg js pop mov jae mov pushfq rex.WRX rex.X (bad) mov (bad) in retq shll movabs mov ficomp rex.XB xor or adc mov jle push sbb mov mov mov outsb fdivl sub jns (bad) scas adcl (bad) addr32 add mov sar mov repnz fisttpl sub xchg jp or mov rcrb xchg sbb mov rex.B and or cli xchg sbb fistpll cmp mov mov (bad) scas je (bad) or adc sbb sub jl jg xchg mov pop shrl mov mov out stos rex.RX rex.WRX imul lods adc (bad) xchg xchg stos icebp add mov rex.W lods mov rdmsr lret sar mov sub (bad) sbb rex.WX loop xor outsb fbld pop out sti sub xor jbe clc jnp adc out mov divl mov rex.RXB xor xchg iret (bad) stos adc rex.WRXB add pushfq loopne (bad) subb jae add cltd fistpll xchg add clc fs rex.WXB pop stos imul popfq cmp mov xor je sub mov mov (bad) pushfq pushq xchg or add mov shrb scas (bad) push mov es xchg jmpq retq sbb xchg mov mov cmp sbb es adcb retq (bad) xor sub in sub pop add xor test push jnp xchg (bad) or imul fisttpll ds cli mov test (bad) cmpsl xor shlb fmull (bad) (bad) jl (bad) rex.XB rex.RXB or clc repz (bad) lea fisttpll pushfq imul pop mov mov (bad) (bad) sti es jne adc in test mov mov or mov retq (bad) mov movabs sahf xchg mov (bad) pop mov add (bad) jns sbb sub or test or (bad) and add adc jl ljmp xchg cmpl callq jp lea mov fstp data16 insb sub cmpsb je mov out lret shr or shl imul xchg pushq sbbb jmp sbbl outsl cwtl xchg (bad) repnz stos mov mov setge std test popfq loope adc (bad) (bad) and xlat shrb sbb (bad) movsb roll lods sbb std xor jmp pop test rex.X mov cld mov movabs cmp pop and xor cmpl andl sub mov sub sbb (bad) fldl cmp mov or sbbl cmpsb test or fistpll sete je rol (bad) jg (bad) std test fstpt push (bad) insb or sbb (bad) (bad) (bad) hlt movabs ja (bad) out movsl cltd lea mov test cltd sahf js cmpsl sbb jl scas mov mov jl nop lock fucom (bad) sbb js movsl int xchg pushfq scas rex.WB out cmpsb adc cmp sbb xor in imul (bad) mov movabs pop sub stos in xor rex.X rex.B xchg lret pushq or cltd xor (bad) mov or movabs sub pop mov pop xchg or loopne mov (bad) mov cmc es adc pop xchg cmp xor int movsl xchg fnsave add js mov mov movabs cmpl cld lock mov rex.RB (bad) lcall sbb popfq mov jne jmp fistp mov mov (bad) (bad) cmc fs mov add (bad) (bad) es (bad) add xchg cmpsl cmp (bad) mov cmp mov test scas fucom sbb cmp hlt (bad) movslq pop jbe mov xchg cmp pop loope xchg xchg addl lret mov mov xchg lea mov nop pop scas jg or pushq hlt movabs jns data16 adc sbb movabs (bad) fidivr icebp in xchg xchg add sbb fstpl adc adc fmuls out insb mov clc pop cmovl mov scas lret fs pushq push rex.WX push imul cmp xchg mov sub push jns stos pop cmp xchg xor es lahf push xchg callq xchg mov iret adc fadds jl or add sbb cmp (bad) add iret mov or (bad) (bad) (bad) jp fs adc mov add in mov (bad) xor popfq hlt es in cmp xchg cmp movl hlt and xchg je or cld imul jg pushq (bad) sahf cmp xor cmpsb or imul cltd cmp imul (bad) mov frstor movsl xor pop movabs adc je (bad) ss rex.WR stos rex.WR rex.WRB (bad) jmpq (bad) mov movabs mov fcoml xchg mov mov (bad) add movabs (bad) cmc fcomps nop adc adc xchg repnz (bad) jl,pt xchg repz jne adc ds add movabs rex.WRX sahf xlat xor movsl mov mov push cmp repz cmpsl push pop cwtl cmp mov mov psllq pop hlt test and (bad) cs xlat adc xchg adc (bad) idivl jrcxz callq test movsb repz or sti loop (bad) pop cmp hlt or add (bad) sub in adc sbb xchg pop (bad) subps mov lods mov add movabs lahf adcl cmp shlb sbb pushfq clc out nop sbb lods int3 popfq fnsave imul insl pop sbb (bad) in sti adc (bad) sbb mov mov and fnsave pop adc repnz cmp xor push lret mov int3 cmp pushq jrcxz or pushq jmp mov jmp (bad) sub rcrb (bad) (bad) cmp xor stos fdivrs sar xor out imul jbe cmpsl rex.WX (bad) loope fs xchg (bad) rex.WB not je (bad) (bad) or (bad) rex.WRX mov (bad) icebp cmp rex.R sar xchg es cld imul outsl cmp mov stos or (bad) jmp gs loopne icebp mov repz add xchg loop jmp jo pop cmp sbb out test (bad) ss adc adc (bad) rorl adc callq cmp (bad) cwtl mull rex.B add rex.WX sbb xchg rcr iret mov add (bad) jmp (bad) ficoml pop ljmp insl lods mov out sbb (bad) (bad) (bad) rex.RX add data16 mov stos sbb scas jo (bad) xchg and (bad) repz cmp mul and adc pushq pop js test xchg fs pushq pop xchg sahf in leaveq test jb jnp fcoms imul or mov test or je rex.WX out jle data16 testb mov mov jle mov enterq sarl pop enterq mov jo cmc out (bad) out rex.R (bad) pop movslq pop xor mov ja pop in pushfq pop adc mov (bad) jmpq xorb mov out lea (bad) (bad) loope (bad) rex.W mov fstps testb adc (bad) adc mov cli xor mov fmuls or out lods or jbe add or xor jle mov addr32 (bad) (bad) pushfq sbb mov jrcxz add add (bad) sbb insl sbb outsb xorb sbb xchg xorl cld xchg stmxcsr in (bad) (bad) (bad) or mov mov out movsl lods push outsb add jae or movabs mov jmp sub (bad) imul sbb shrb out rex.WR imul xchg ja test (bad) sub and pushq popfq insb jns,pt je cmp cmp scas ror rex.WRXB or mov mov imul out or mov stc pop mov xchg imul jbe (bad) adc repnz sbb cmp pushq (bad) push fs int3 (bad) add mov (bad) sub jge and loopne mov (bad) mov add lods and add lock cmpsb fdivrs add addb pop mov (bad) (bad) xlat out clc lahf sub jge mov test cmc stc rex.WX ss sbb mov sahf (bad) xchg jns xchg (bad) (bad) stc add jmp out (bad) pushfq movabs rorb pushfq out or loop and and xchg divl rol iret rex.WR pop add or (bad) lock ss push fucomi sub cmp mov stos or rex.WR push rol movabs imul mov pushq lea jg nop fisubr push mov movabs pop sbb pushfq outsl gs icebp xchg adc rex.W pop lods jno pop sbb mov movsb push movabs (bad) ja cli (bad) and movsl cmp icebp mov fwait jge test and or add mov sbb xor pushq movsb hlt sbb cwtl enterq push mov int3 sub xchg rex.XB xchg (bad) in mov xchg push (bad) or sub xchg push mul xchg data16 lods jbe stos ja (bad) fcomp mov cmc stos movabs or mov sbb and pushfq and (bad) pushfq mov (bad) jo and pop (bad) (bad) movabs adc imul fmuls or lahf rex.WX rex.RXB mov loope cmpsb sarl ss pop (bad) test (bad) (bad) rcrb (bad) adc imul (bad) clc sti rex.R cmp fmuls movslq (bad) rex.WRB (bad) mov xchg and (bad) (bad) mov jrcxz push (bad) xor loope adc fdivr rex movslq div (bad) mov std or rex.RXB retq (bad) loop jp ja adc js xchg movsb test int data16 (bad) mov mov cwtl cmpxchg8b (bad) mov xchg (bad) cmp jl pop repz test jb push loopne mov sub (bad) adc fistpl sti jmp out repz sbb or jo xlat cmp (bad) ss adc retq mov shrb sbb pop and jge repz mov jbe (bad) (bad) cmpl data16 jo sub mov mov movabs fwait cld adc (bad) callq idiv ja jrcxz or in jl mov jae cmp pop out xchg sbb sahf xchg int insb xchg sti pop je scas jg adc rclb push mov (bad) je (bad) mov scas mov xor pop mov sahf sub fstpl cwtl rex.WR std or and fwait or jmpq sbb rex.XB loop clc (bad) adc frstor mov fcomps add sahf rolb sbb sahf jg pop ss scas mov mov jns sbb cmp cmp sub movabs add scas cmpl shlb movabs (bad) rex.WR (bad) (bad) sbb jo xchg retq sbb or pushq lods add movsb mov mov mov popfq loop adc or adc iret pushq fucomi (bad) cwtl movabs jl adc subl sbb jae callq loope jno (bad) xchg sub imul scas lods xchg mov imul jb gs mov adc imul (bad) adc mov sub imul sub cltd mov test or or rex.W fs xchg mov fistp in fwait and xchg sbb retq mov jmp fwait mov movabs pushq pop fbld sbb movabs or and or movabs add in popfq popfq add and loope or rex.B rex.X xchg or xor adc shlb shl push mov (bad) (bad) movabs out rex.B rex rex.WXB jnp mov jns jmp fdiv out adc (bad) xchg rcr or rcl (bad) in (bad) fwait (bad) jmp mov cmp fist repz (bad) cmp mov jg pop jrcxz cmpsl jnp mov jns movabs loop xchg pop leaveq and adc mov and push pop out adc (bad) sbb jns mov cmp or pushfq cmpsb adc ss cli and rex.WRX cmc mov sub iret sbb (bad) (bad) popfq callq fidivrl and xchg rex cmp pop pop jo sbb jo xchg (bad) movabs xchg sti insb cmp xlat fs rex.WR pop data16 pop jae (bad) cmp jo xchg mov (bad) sbb (bad) push pop sbb lret mov xchg js adc (bad) xchg jmpq pop sbb pushq rex.WRX shrl subl xchg or cltd xchg scas push jrcxz cmpsb (bad) push nop adc cmp adc sbb mov or adc (bad) gs and cli (bad) retq fimul cmp jle cmp xchg retq push (bad) test sbb movabs out movabs (bad) mov mov stos rex.RB xchg (bad) and rex.W out repnz cmp callq rex.WRX fisttp (bad) sahf hlt jo rex.WR in and xor push jb mov leaveq mov mov rol xchg mov xchg pop mov pop mov scas lea or or xor out loope imul xor shrb pop es and ds mov mov popfq push ffreep test mov sub adc add cld mov jg cmp mov xchg out pop xor rorb mov or lahf fdivrl test adc mov mov movabs (bad) rorb cmpsb pop jg imul retq mov es mov loopne (bad) add pop fcmovnb sbbl mov in in lahf (bad) test sub (bad) rex ljmp insb xchg or xchg pop (bad) xchg jne adc (bad) mov mov (bad) and (bad) adc imul (bad) movabs (bad) cmp jle adc test mov fild mov sbb sub cmp repnz mov mov xor stc rex.XB xor movsl sub fsts rex.RXB xor lea pop retq mov xchg (bad) jmp es jbe (bad) mov mov mov xchg repnz div xlat lcall out or sbb (bad) sbb rex.XB add xor cmp test mov mov rex.X rex.WRX scas lret mov mov (bad) (bad) pop fldenv (bad) xlat xchg pop mov mov mov (bad) sbb ss pushq (bad) (bad) vpmullw (bad) fidivl lret pop xchg and push in scas jg mov repz jne add add pushq rorl jbe vmovmskps jrcxz jp rex.W rcll scas rex.RXB cwtl fnclex jmp jne retq and mov mov ss icebp test outsl jle sti xchg loopne mov movabs and (bad) adc (bad) or pop cmp (bad) sub lea pop pop xchg mov mov mov push rorb out or fistp retq lret add cmp cmp cmp stc jrcxz ss retq sbb xchg clc (bad) mov clc fildl add cltd fisttpll jrcxz,pt fdivrp mov (bad) sub or (bad) jge cmc mov test cmp mov lea (bad) rex.WX nop adc rorb loope cmp cmpl rex.RB cli mov pop mov adc ror ss sahf out mov sbb xor (bad) repz cltd paddd and ss mov xlat xchg cmp push rex.WX ds mov xchg jmp (bad) lret out std (bad) in add xchg cs (bad) pushq js icebp adc mov je cmp rex.RX (bad) adc movabs sbb fidiv jnp adc jp rex.RX mov and sub nop or icebp (bad) xchg mov lea idivl jmpq fdivrl jae (bad) pop (bad) outsb repz xchg out mov out rex.RX rex.X rex.X xor fcoml jb fsubrl rorl test in cmp fistp mov (bad) sbb (bad) movsb stos mov jp or mov negl mov iret gs jmpq (bad) and adc pop popfq xor int xchg rex.W rex.WR adc (bad) fs cmp sarb js iret mov add sbb and repnz rex.RB cmp repnz orb mov pop or rex.WRXB idivb mov rcr or roll (bad) add and push test movsl jle std movsl lret push addl sar pushfq cmp push rex.WRXB rex.W mov data16 or xor (bad) iret cmp adc repnz mov add jnp stc xchg sbbl jnp test pushq (bad) mov mov imulb xlat jne mov or sarb sub ds movabs enterq mov xchg movabs (bad) cmp (bad) cmp ficomp je std xlat push mov cs sarl int3 (bad) (bad) lret jae repnz sbb cmp add xor enterq movabs mov outsl lea or or lret xor add imulb xchg nop int3 jne or sub sbb scas jmpq sub (bad) lods fisttpl or lock popfq cmp js retq jb xchg xor insb jge sbb jo sbb sbb imul movsl movabs shrl rex.WR add mov fdivl cmp mov jb push and shl out (bad) popfq cld lret sbb (bad) (bad) (bad) cmpxchg mov (bad) cmp xchg sub (bad) sar cmovg push ds rex.XB mov mov sub ss fldt sarl mov lods push fpatan sbb cmp jg xlat adc cmp std (bad) pop pop sub pop rex.X (bad) ffree out test movsb retq adc cmpsb cmp test lea mov adc (bad) clc mov xchg (bad) lock (bad) (bad) cld xor in lods jmp (bad) mul mov sar js std (bad) pushq cld and out push int3 sbb rex.W (bad) (bad) imul or or lods rex.RXB rex.RB or xchg orl xchg sub jrcxz (bad) jl rex.WRXB pop loop in and (bad) mov jbe sub jno jp mov cld mov sbb add push addr32 jnp in sbb adc movsl mov or (bad) or (bad) sbb lahf retq scas (bad) xchg loop mov mov sahf cmp (bad) or sbb outsl callq jl jmpq movsl ss adc adc cmp adc mov rex.W orl test xchg mov rsqrtps add xchg (bad) ja pushq jmp xchg add xchg mov clc movabs lods rorb pushfq jmp mov and push stos cmp (bad) lea rex.WR or or pop movabs and xor push leaveq test cltd (bad) divb movsb movsb pop jns mov enterq cmp push movabs mov (bad) movabs (bad) cld sbb orl pushfq (bad) mov (bad) or rex.X xlat (bad) imul add fnop movsl js cmp fwait test mov xor std mov popfq (bad) roll (bad) rex.WXB loop cmpl rex.WR repnz xchg mov rex.WRX rex.WRB retw sub adc stc mov or (bad) mov xchg jbe stos fnstsw jge (bad) lret int ror xor movabs mov xlat sbb imul hlt mov mov jge (bad) and repnz in mov mov pop movabs (bad) cmp rex.RB rex.WX cmp adc mov mov xchg xlat pop sbb adc (bad) xchg rex.WXB jo in retq xor (bad) mov mov push (bad) insl cmp testl sbb pminsw jle cld lods add jge pushq decb cs xchg (bad) xchg sub sbb adc lea imul pop jle sub rex.WXB movsl rex.RX rcll sub mov or cld jo pushq and pushfq jns xchg sbb mov stc or or jp sub std mov subl out divb adc test gs (bad) adc push out sbb not jle std rex.WRXB out icebp mov mov shrl mov js fildll adc retq (bad) (bad) cmp jnp shlb (bad) or lea add (bad) (bad) xor fstl pushq mov rex.X (bad) mov movsl xor mov or and xchg std mov jg xchg cmp rex.X mov and sub clc mov mov jb jmpq (bad) or mov rex.B add decb push mov sbb mov sahf (bad) imul (bad) rex.RXB scas mov or pushq xorb pop xlat callq or xchg xchg stos mov push add pop (bad) sub push callq js test add jmpq mov fisttpll fildll push testl jns push push mov js or scas ds jns xchg sbb jns sbb mov (bad) iret mov enterq push xor pop mov jle add or sub lret stos out cmp (bad) roll (bad) lods int3 rex.XB cmp fs shll movslq frstor cmp jmpq je (bad) cltd lods in (bad) (bad) jnp fldcw fstl mov pushq and test (bad) out or cmpsl testb cltd test cmp fnstsw sbbl (bad) cmp movabs rex.WRB sbb in cmpsb mov loope (bad) mov outsb (bad) or adc movsl movsl sarl xchg gs (bad) fsubs (bad) (bad) xor add cmp (bad) sahf jp mov retq xchg (bad) (bad) rex.WRX mov mov mov lahf leaveq stos outsb (bad) pushq mov shr (bad) xchg rex.XB or or (bad) (bad) jmp std mov adc rex sti and xor (bad) cmp callq rex.WR mov (bad) jnp or add sbb test mov fs sbb cmp (bad) fdiv rex.X movabs (bad) repz sbb stos push je scas xchg jp jg sbb rex.R rex.WRXB (bad) or or and (bad) movabs xor or (bad) pop negl jg scas shlb test stos (bad) mov js (bad) mov lret (bad) out xor fdivs (bad) andl cmpsb rex.WRX (bad) sbb fmull sbb nop (bad) mov int adc or adc cli out (bad) push in and lock (bad) xchg jmpq int cmp rex.RX hlt movsl cmp fnop out push jb push mov enterq loope xchg fnstsw sbb rex.RX (bad) (bad) cs cmpsl lock pushq out mov (bad) iret (bad) add sub (bad) fsubrl add (bad) add sbb pop (bad) jnp xchg movslq lahf pop mov test mov adc in pop add (bad) and sbb rorb ss lea adc test lahf mov cld movabs cwtl jbe iret imul es popfq and xchg int icebp sbb jne xchg repz mov cli repz (bad) cmp retq cmp xchg (bad) adc mov xchg imul jp imul rex.RX (bad) scas (bad) push sbb mov mov mov (bad) mov add nop mov int3 xchg adc push cmp sbb and jmpq add mov rex.WRX and rex.WRXB mov (bad) pop sbb jo movabs xchg movabs xchg pushq loope rcl xor xchg test testb rex.W int sahf mov movabs adc (bad) movsl push rex.WR xchg xchg rex.X push test pushq mov and rex.WRX je rex.WRXB repnz pop jl (bad) out push (bad) mov push or leaveq rex.WX xor and rex.WXB mov pop andl adc in mov (bad) jae (bad) fimull cmpb mov rex.RXB mov (bad) rex.WRB mov mov mov stos lret add and xchg or xchg sbbb mov rex.R (bad) push mov add rolb adc movabs cmp mov cltd ss or push xlat jne mov outsb pop xlat cmc jmpq xor pop (bad) mov rex.R movabs sti (bad) out iret sbb adc testl pop rex.X lods nop mov out cmove xor pop sbb mov xchg mov (bad) rex.WR mov fnstsw pop (bad) add (bad) popfq lea mull jae mov imul or sbbl push xchg xchg (bad) lret or fbld adc (bad) (bad) jrcxz lea push js rcll lea lret pop cld clc lret (bad) xchg (bad) lret mov int3 lret lods (bad) rex.RXB push inc rex.XB jne mov or lret adc and jmp (bad) cltd pop stos xchg sbb add (bad) out lods rex.WXB xchg lret or rex.WXB lods xlat cwtl leaveq push mov imul mov sbb cmp pop (bad) outsb mov (bad) xchg (bad) mov or iret cmp lods repnz xlat scas or test leaveq test adc cmc pop cmp and rorb or out (bad) or rex.RXB fcoml addl cmpsb cvttps2pi jg mov xchg xchg retq sub int clc fnsave (bad) mov incb push nop pop xor add mov sahf xor (bad) cwtl je (bad) sbb outsb add cltd imul pushq jl and (bad) stos (bad) (bad) loope mov or repz stc sarl movslq fbld out scas popfq push stos jrcxz test (bad) rex.RX (bad) mov sbb xchg (bad) mov mov outsl rex lret pop movsb lods add lret jne and cwtl (bad) lret orl mov jb adc out mov (bad) or or xchg xchg adc xchg mov loop xchg sahf or sub mov adc jle pop (bad) mov movslq sbb fsubl test ss orl int3 rcrb xlat cmpsb sbb out or push rex.WRX rex.RXB cwtl (bad) xchg xor add ss cmp or sub xor xchg rex.WRX stos jp shl out cwtl mov add (bad) mov jne rex.WR rex.WXB scas dec pop (bad) jle (bad) jae xor jmp (bad) (bad) insb fisttpll jb fwait in (bad) fldcw rex.WRXB jbe mov retq pushq sbb adc adc es jne sbb lret sbb cmc xchg retq gs incb xchg jl insb nop pop out pop jo jnp out jo mov imul sbb sbb rex.B lea fbld xchg in add pop cli idivb (bad) add movabs adc out pushq lahf xchg cmp fnop andl addl cmp repz (bad) adc adc outsl rcll leaveq mov outsl ror stos cmp callq mov rex.RXB mov push sbb jg xchg outsl xchg cld fadds (bad) (bad) mov xchg mov pop roll (bad) adc test repz mov leaveq sbb jge (bad) fstpl popfq rex.WRB test sahf add divb rex.R ds cltd (bad) xchg mov int3 (bad) xor lahf callq loop test (bad) std retq mov rex.WRX iret xor sub cltd sbb jne mov loopne divl xor xchg lea adc bnd or pop fstpl rex.RB repz js fs jg cmp test sub xchg clc outsb (bad) xchg fist cmpsl rex.WRXB hlt sbb sub mov repnz cmp or xor or cqto out pop cli addl mov jo lret adc lea xor pop or sti push pop (bad) xchg movsb nop jns or (bad) add jno (bad) mov (bad) xlat and mov in (bad) movabs ss rex.RXB xor in cmpsb jle iret sti (bad) imul cmp or gs jbe pop (bad) or cltd outsl jrcxz jge add cld test insb mov enterq and (bad) mov (bad) in fdivrl sbb sahf sbb adc neg mov sbb push pop repz (bad) scas mov xchg (bad) push (bad) rex.B repz lea insb loopne sbb xchg adc mov insb xchg xchg jge sbb clc out jl ss (bad) (bad) (bad) (bad) jge je xchg (bad) (bad) sahf jns mov adc sbb cmp rcll sarl lods adc nop or int3 (bad) mov cltd sbb sahf add pop (bad) ds cltd adc xor (bad) fisttp out sahf jne (bad) jns rorb cmpl lahf test mov cmp jns (bad) sbb jge jp or mull sbb and retq (bad) xorl stos pushq adc mov jne in cmp cld cmp clc mov pop (bad) rex.X mov movsb rex.B stc sti popfq sub jmp (bad) sbb jge pop jrcxz rex.RX out jmp or fstl or xor pop rex.WX add idiv adcb or (bad) pop (bad) mov rex.WXB rolb callq mov sti xor cmp mov ss and stos xor cwtl mov fnstcw out (bad) adc lret ja sbb (bad) xchg adc xchg stc fidivr (bad) jl (bad) lock sahf and adc (bad) mov xchg cltd adc pop jo scas fisub cmp (bad) mov jbe cltd jge mov retq out adc (bad) (bad) out imul popq mov pushq xchg mov (bad) lret addr32 jle (bad) mov pop out cmp (bad) sub push imul scas add xchg mov fsubl rorl mov xchg (bad) fs movslq pop cmp out inc xchg movups scas pushq insl or int sahf or scas cmpsl mov or sahf sub xor ss nopl popfq stc test fldt cmp xchg push and emms add push rex.WRXB cmp lret jne lret xor rex.WRX xor mov sub xchg (bad) sbb js push hlt outsl add cmp rex.B mov sbb rex.RXB mov xchg (bad) ja callq cmp cld ja (bad) sub sub mov lods icebp rex.WRXB rex.X xchg (bad) int mov push cmpsb xor jne xchg jmpq fwait in rcrb push lret xchg rex.WRX pop jbe mov push test mov imull popfq orb outsl lret sahf hlt adc ficom push cmc lret xor ds xor mov test add and cmp or xchg rex.RX lock or loop jle rex.XB xchg mov xchg jmpq pop rcr (bad) out hlt movabs cltd cwtl jrcxz (bad) and lock xchg out cmp lea rex.WXB pushfq test je push mov subl push movabs imul cld retq fsts loop rex.R test fild mov lret sbb js movabs js add and (bad) lods (bad) (bad) mov test rex.B addl test sahf add movsl scas or lahf mov jae fcoml imul (bad) sbb jbe repz jmp (bad) and cli cmp (bad) out and repz (bad) mov or loopne mov callq (bad) jle mov or cmp xchg mov (bad) (bad) jmpq scas pop cmp (bad) rclb imul add (bad) repz (bad) fsubrs xchg jrcxz cmp insb cmp stc fdivrp sbb sbb or mov xchg jb xchg retq cwtl sbb cltd fsts add xchg adc mov movsb add sub pop xchg jp jae sbb test add fsub (bad) cs mov (bad) fiadd adc pop jnp test repz sbb movsl popfq movslq fisttpl es pop in test in test (bad) test loope insb sbb (bad) stc (bad) add mov jge jo pushq jl loopne (bad) cmp cs xchg and (bad) sbb lret ficompl jae pop mov pop iret xchg xchg rex.WRXB es jns xor int mov sub rex.XB (bad) pushq add xor movsl test ficomp jno sbb xchg rcrb xor loop incl push lods (bad) imul jrcxz xchg out je lods xor sbb cmp pop fsubrl jbe adc (bad) mov mov sbb sbb imul mov jmp sub push sbb ds xor sbb push popfq mov es and or movsl test rex.W imul rex.RXB mov (bad) (bad) jno (bad) mov cld or jno sahf rex.WRX rex.RB and (bad) push addr32 fwait (bad) xchg rex.RXB mov in (bad) sbb xor xchg pushq outsb jbe jrcxz icebp xor (bad) clc xchg sub xchg rorb int3 (bad) cmp orl cmp mov jns jge out fwait xchg fnstsw adc (bad) mov xlat cltd mov sahf pop loopne popfq movabs (bad) rex.WRB callq insl sbb rex.XB jae xor and sti rex.WXB scas roll rex.R mov mov or and out cmc jl fistl jg add test pop movsb (bad) jnp jg retq (bad) (bad) or loopne movabs xchg lahf popfq mov (bad) movslq popfq jb xchg jae (bad) or cmpl push push or sub int mov mov iret fnstsw lret xchg or hlt push xchg jl xchg lods (bad) xchg out fsubs iret xchg mov mov iret xchg ds leaveq (bad) pop rex.WR (bad) mov fwait sti (bad) out in rex.RX (bad) frstor adc lods add iret imul sbb sbb mov and xchg xor out movsb sbb mov fsubl fild stos loope (bad) (bad) nopl es rex.WRXB sub repnz (bad) sub cmp cmp (bad) xor cltd int3 (bad) mov ja pop rex.XB jne push retq mov rex.WR sbb stc xchg js jmpq (bad) cmp gs (bad) jnp rex.WR pushfq fxch sbb repnz fiaddl cmp pop xchg mov sub push fistpl mov mov cld xchg sti (bad) rex.RX adc xchg cwtl movabs repnz scas rex.WB lods stc rclb or (bad) scas fistpl (bad) nop popfq (bad) cmpsl clc push sub xchg ss outsl adc insl hlt adc (bad) mov xchg xchg jmp xchg xchg xlat rex.WR rex.WX jmp sbb fcompl ss pushq sub sti pushfq fucomip rex.WXB add adc mov or cltd push (bad) adc jmpq outsb rcrl rex.RX mov in or cmpsb mov xor loope sbb fdecstp mov mov push loope mov lods mov and mov std je scas pop lret mov outsl (bad) sbb ss loope fidivr popfq mov cld nop (bad) rex.WRXB movabs cwtl add xchg sbb jmpq jmp or pushfq test gs (bad) movabs test leaveq adc jl pop add in insb mov xchg xor jmp rex.XB insl mov or imul sarb pushq xchg (bad) adc nop mov nop ds imul xchg decl mov mov popfq sbb mov repz in jne mov shrl (bad) (bad) (bad) sbb jnp pop cmp cs loopne cwtl sbb (bad) adc test and movsb sbb xor xchg pop and rex.RX and int mov mov sub xchg sub rex.X fisubr ficomp rex.WR movsl scas fnsave sub setbe cmp (bad) cwtl or mov push xchg xchg or xor xchg cwtl int mov rex.XB (bad) jg (bad) orl cmp retq rex.WRX mov jae fidiv (bad) xchg popfq xlat std fs lods cmp (bad) scas (bad) movabs iret sub out or es and sub sbb rcr pop insb movabs (bad) je xchg shl sub leaveq pop sahf push sarb (bad) in jg rex.WRXB pushq out ds cmp imul movsl (bad) jo jbe jl add (bad) mov mov movsb (bad) sub rex adc xchg addr32 mov xchg pop mov out shlb add (bad) push (bad) callq jmp neg (bad) (bad) cmp adc mov sub xchg cwtl fmuls push pushq (bad) or js popfq int jl adc sbb adc (bad) jmpq gs xchg stc in and imul mov (bad) xchg dec or sarb mov (bad) stos rex.WRX ds pop nop movabs or rex.RX js pushq cwtl cs mov (bad) (bad) out outsl or sbb sub lahf movabs je (bad) cmp cwtl jne xchg xchg mov mov push or int sbb rex.RB mul or retq cmp test icebp sbb rex.WRX mov divb (bad) jb ror (bad) add (bad) stos lahf enterq stos xor loope cmp mov push mull repnz test sub cmp movsl jge (bad) imul jo cltd xlat sub xor ss rex.XB pop or imulb movabs fildll push add (bad) mov cld pushq pushfq data16 cmc (bad) movabs pop loopne rex.WR (bad) cwtl cmp (bad) jg cwtl in rex.X rex.WX in cmpsl xchg mov (bad) mov negl mov jp (bad) mov jne sub movsl (bad) add (bad) fist sbb mov mov in roll (bad) divl mov out lods retq pushq lods mov lfs adc out sbb mov scas repz mull or mov xchg loop clc adc mov stc (bad) leaveq retq lods lods sub pop pop jge sbb push mov jmpq sbb sbb adc imul ficomp cltd fsts xchg rex.RX data16 add adc sub or movsb xlat mov and adc lahf xlat xchg shll xlat (bad) fsub or adc push add xchg pop in xchg lock rex.WRXB fdivl retq (bad) loopne insb sahf stos sbb gs mov xchg orl sub cmpsl cwtl movabs xchg lret lea (bad) rex.WRXB movabs and sarl (bad) jle cld cmp mov movslq sbb (bad) lock movabs rex.WB add (bad) movsl push push push add (bad) stos sbb movsl stos popfq rex.RX mov pushq pop hlt scas sbb (bad) movsl lods push xchg push add fist xchg sbb sbb xor rex.XB loope mov cmpsl int3 pop mov rex.WB test int3 scas sbb hlt fnstsw int3 (bad) adc adcl pushq (bad) in lock and (bad) (bad) mov mov (bad) out sub ss mov mov insb in xchg (bad) add loope (bad) movabs add addr32 rorl int icebp mov cmp mov sub jo out mov movabs sbb mov sbb btc negb (bad) or rex.X or mov push adc test sbb cltd cmp int3 lret rex.WRXB or adc mov rex.WR adc mov rex.WRB adc mov or movabs xlat xlat mov pop dec (bad) xchg mov xchg ficom xlat repz leaveq pop mov and xchg jmpq rex.RX mov movsb pop sar sub movl test mov or cltd (bad) adc jne shl test lods rcrl (bad) loop push jle cmpsb rex.WX xlat rex.R and mov push (bad) movabs jrcxz xor cld in pushfq cmpl sub push fisttp bnd xor jmpq or mov mov adc clc xchg or xchg lahf mov jnp xchg mov pop gs (bad) add test int3 (bad) fisttpll pushq and rex.WR mov rex mov cmp cmp and sub (bad) rex.WXB cmp jle and xor (bad) out push sbb (bad) ja jae rex.WRX enterq cmp jae pop lea jns leaveq imul sbb sbb test lahf int3 xor scas scas xchg (bad) rex.WRXB or push lahf and ss fsubs fdiv jnp jl add pop sti rex.WB incb cmp pushfq sub jle loopne jne loop mov shl rex.WX (bad) rex.R cmp insb (bad) mov std rex.RB or xchg mov (bad) jo (bad) in ss mov fisttpl lret sbb insl mov int and pushq jle and mov mov sbb push (bad) fldl or (bad) movsl (bad) (bad) mov xchg add out vcvttpd2dq mov (bad) (bad) testb rorl es (bad) sub stc movsb mov paddd out rex.RX push rex.XB scas faddl (bad) pop test (bad) mov mov pop push mov jmpq pop retq pop cli sbb mov or push andl adc in in gs in lret in ss lret icebp rorl rex.WXB push mov add pushfq out (bad) fs mov lock pop (bad) or (bad) mov jo stos (bad) sub xchg rcrl (bad) cltd mov jl (bad) movabs mov (bad) add cmp cmc cmpsb and ds rex.WX (bad) rex.X decl lods in rex.XB movabs int add mov icebp in movsl mov scas mov cmp mov insb lret (bad) mov mov mov pop fsin gs mov lods sbb popfq (bad) mov mov xor fldt shll (bad) mov (bad) test xlat sarl lods and xchg in in rex.R rex.WXB push mov imul pop je rex.R stos mov cltd movl cmp jae lock xor sbb mov jne iret lods xchg in xchg (bad) xor mov (bad) in pop add cmpsb es int add mov gs add (bad) movq or mov mov (bad) cmp cwtl mov (bad) or push leaveq jmp stos or sub or test rex.WX jne mov xchg in mov mov out rol (bad) cmp and incl (bad) cmpsl lods xchg fidivr push lods cmovb and sub push jle xchg ds sbb mov jo or (bad) or movabs or rol add iret or jg jle,pt int xor stos or add push sub jae roll mov or or mov (bad) sub cmc js movslq loope cltd jle rex.WR mov push pop (bad) (bad) test jp out test mov adc (bad) ds std xor (bad) mov (bad) and xor add loope (bad) (bad) rex.RXB adc sub mov adcb shl ficoml adc mov adc mov lods mov movsb mov pop stos std or mov movslq jnp rorl nop jne cmpsl (bad) pop (bad) adc adc adc ds jns repz in push icebp adc fwait lods mov jo stos cmp xor fwait xlat add scas xchg stos xor xchg pushq lret fs or movabs rex.RXB mov scas or mov int xlat pop insb insb xchg cmp push out pop pushq out cmp jo ds add lock pop xor repz adc push push repnz jae xchg mov insl nop and lods (bad) (bad) and xchg and cld (bad) xchg add lcall stc push add sti movsl xchg mov (bad) scas jge movabs out notl scas xor repz lock (bad) retq mov mov or rorl retq or movslq movabs rex.WRX or (bad) add retq mov pop adc out cmpb add mov mov add movabs rex fs jmpq repz lods pop sub sbbb movabs (bad) cmp rorl sbb sub popq xor (bad) xchg ja rex.WRXB mov xor and faddl (bad) add xchg (bad) xor or flds pop clc cmp add mov jo out in or jrcxz jne push xchg xchg std (bad) xor stc sbbb xchg rex sbb int (bad) jae pop xlat jrcxz in cmp (bad) cmpsb mov jb fs mov insb in (bad) lret xchg stos (bad) jrcxz (bad) sar callq xchg or xor jle test mov nop xor (bad) int3 or stc stos (bad) xor scas lahf mov lods mov pop and sub mov rex.WXB repnz or pushfq pop fbstp or mov (bad) (bad) (bad) testb movabs pop loop xchg mov ljmp cmpb test jg (bad) sbb rcll (bad) sarl rol push movsl (bad) imul jl add mov jle (bad) or and outsl cmp js rolb fisttpl (bad) (bad) xchg out push sarl and movsl fnsave (bad) mov sarb jb loop (bad) mov sbb xchg test stos jbe mov xchg mov loop push adc sbb xchg adc nopl pushq pushfq cld jno xchg sbb jns sbb imul jg xchg rclb in push decl mov (bad) test sbb and iret add and xchg sbb mov roll (bad) scas mov cwtl mov movabs or mov imul (bad) sarb (bad) ja (bad) sbb sub movsl cmp lods mov xchg clc sti jmpq adc loope cmp outsl (bad) (bad) xchg add adc adc xchg or mov jo xchg or sti and xor and xor xchg pushq xchg movabs xor (bad) je add test callq pushfq or (bad) outsl xor adc test mov pushfq push imul push cmp add fwait xor sbb movabs stos stc cmp lods rex repnz out xor rex.WXB add jp hlt in add rex.RXB (bad) scas mov pop xchg stc imul mov lods add movabs lods sbb xchg test cli outsb xchg idivl int or and mov push cli xchg int3 xor fistpll pushq fidivrl sbb in xor fnstenv mov cltd add pushq in adc int3 andl lea in cmpsb mov (bad) je mov movabs rex.RX ds orl lods xor cmp adc lods jno push xor enterq mov xchg adc (bad) insl or insl out test fildl insb xchg sbb test add sbbl pop rex.B cmp pop in lods movabs movabs pop rex.WB and mov movabs mov retq jbe xchg jae add stos test (bad) imul rex.RB mov (bad) pop addl gs enterq jns cmp mov sahf incl sbb push es fs mov (bad) rex.RXB rex.WXB movabs fstl pop xor (bad) fistpl jge lret rex.WB test pop jo shll and mov (bad) xlat xchg rex.RX sbb (bad) adc iret push cmpsl mull xchg int cwtl add cld xchg movslq cli jne xchg cmpsl mov std rex.X movabs pushq xchg jrcxz pushq cmpsl jg mov rex.WRXB (bad) cmpsb es add sbb sbb jge lods rex.WR fs sahf or and (bad) es adc add cmpsb (bad) vpunpcklqdq js es (bad) movabs popfq hlt rclb or xor sti cli (bad) push (bad) fsts std stos loopne mov jmpq idiv cwtl push stos rex.WXB mov rex.WXB lahf rex.WB mov iret iret gs cmp rex.X adc js xchg (bad) push cmp pushq sbb (bad) xlat and adc pushq (bad) out fstpl cmp (bad) xlat iret push jge imul xchg mov hlt rex.RB mov rcl movslq or add xchg (bad) cmpsl loope mov sbb lret loope (bad) push mov movsb push rex.WX movabs or sub loope (bad) (bad) jmpq cmp or rex.WR out or lcall mov mov mov rex.WRXB fs lahf and rex.RX fidivl rex.X mov sub je mov (bad) popfq (bad) fbstp rex.RXB or cmp cld xchg (bad) fs loope cld pop scas xchg scas fadds imul (bad) mov cmpsl rex.RX (bad) jl rex.B test mov add add fildll push xchg pop (bad) (bad) decl add outsb mov fldcw cwtl stc test fs push sbb stc or rex.WRX repz rex.WB lock cmp cwtl (bad) jbe cmp and (bad) clc xchg pop mov (bad) mov (bad) scas jge fsqrt andl push callq (bad) negb cmp jb retq push out pop jo sbb cmp cmc sub mov nop or and fucom mov xchg adc cmc lahf jb (bad) (bad) lods cmpsl lods mov es ror mov (bad) fildll rex.RX movabs stc lret add xor (bad) mov (bad) (bad) imull imul (bad) xchg (bad) rex.X (bad) (bad) (bad) (bad) mov adc sahf fistp jl jb rex.RX jbe cmp cwtl sti out rorl xchg rex.WRXB rex cs sub mov add xlat (bad) or mov xchg add mov rcll sub sub je (bad) mov test movabs ds sbb in jmp movslq addr32 cmpsl out mov xor fsubp out rex.WX sbb (bad) jrcxz xchg mov scas sbb adc scas adc adc (bad) or hlt xchg pop fs movabs xor stos insb sbbl or imul pop out imul out cmp rex.RB repnz in cmovo sbb push std (bad) cltd fld (bad) cmpsl pop xchg rex.RB js push xchg es xor rex.WRXB add es imul pop movabs pushfq test rex.B rex.XB mov cs (bad) in mov in clc movabs mov mov mov lods jae or movslq sub jae loop movslq xchg negl scas (bad) adc add and mov mov sti and sub rorb pop fiadd sbb cld pop xor fisttp fimul xchg cmp xorb mov and scas int3 lret add pushq idivb addl mov push pop icebp jbe repz movsl cmp test xor nop fnstsw (bad) or xchg mov or sbb or xchg mov jrcxz out lods jo (bad) in fsts out push movslq test es jmp shrl testl adc add idivb (bad) sub ucomiss test lods or fsubl mov mov mov xchg pop lahf or rex.B or int3 (bad) and clc retq sbbl mov (bad) cmp (bad) test icebp fnstsw out (bad) mov movabs mov sbb data16 or (bad) add mov jbe or lahf adc mov (bad) repz js (bad) shr and push fldt mov sti or fdivrl pushq rcr imul add jg add in out (bad) (bad) sbb sbb loopne push add and (bad) test orl sub pand mov xor xchg pushfq xor ja decb add out xor jnp js clc push (bad) jnp lahf adc mov mov jmp mov cmp rex.XB cltd and cli (bad) cld std mov sti idivb sub movabs nop add fdivr out mov rex.X ds mov pop xchg jg sbb movabs jb lods in push jp pushq xor pop ss sub mov or in xlat pop (bad) mov cmp rorb jne int xchg (bad) xchg xchg out (bad) (bad) jge (bad) mov pop jge mov mov (bad) fnstenv (bad) xchg lahf loope movabs imul stos sbb lods mov shll rex.WRX jle pop stos sbb (bad) mov pushfq jp leaveq lea cmpsl jmpq pop popq pop push and movsl (bad) pop pmaddwd sbb movabs sbb lea movl pushfq icebp mov or or pcmpeqw xor (bad) or mov mov out mov flds rex.X rcrl iret push xchg lret jns out (bad) mov sub (bad) (bad) (bad) add out xchg xchg movabs fadds and sahf cltd (bad) push (bad) out mov sbb movsb ss mov (bad) pushfq mov jae (bad) iret and lods callq pop int out mov mov rex.B test cwtl rcr mov cmp movabs mov scas std in cltd xor and rex.W iret (bad) mov fs or xchg iret fwait mov (bad) (bad) (bad) jno loopne jmpq xchg loope (bad) pop xor adc rex.WR test sbb mov xor sub push mov mov push adc std outsb out movabs fmull loope mov sbb rcl int3 adc xchg xchg rolb enterq in (bad) mov rex.WR mov jmp test decl mov popq xchg (bad) rcll (bad) cmp xchg loope insl xchg mov retq adc popfq mov (bad) jno test test mov xchg add or fwait test (bad) (bad) lods pushfq sbb retq and xlat stos and (bad) roll xor sub insl sbb rex.RB mov mov jmpq jne pop (bad) fisttp iret cmpsb fwait retq pop pushq movslq add loope sbb mov jp mov adc xchg mov and and (bad) cli add mov mov cmpsl rex.RXB add nop add (bad) or (bad) (bad) movabs mov xlat mov (bad) test nop mov (bad) mov cwtl (bad) lret int3 ss sbb rex.WXB (bad) roll cmp sub mov xchg xor adc (bad) sbb mov in sbb lods jmpq shlb ds movslq xor cltd data16 xchg in cmp fcmovne add adc shr push out popfq cmp stos sub and mov setae sahf rex.R sbb addr32 (bad) xchg movabs cmc xchg movsb popfq loopne loopne and inc (bad) and data16 pushfq lods ss stc js jrcxz mov rex.RXB and mov roll retq test lea mov xchg clc mov (bad) mov pop (bad) xchg xchg fistl movsl mov pushq (bad) rex.RXB test rex.B rex.R scas mov fstl (bad) mov std lret add jmp out lea sub movsl pop mov (bad) add retq mov mov mov loope enterq movsl xchg (bad) sbb mov mov and mov or mov and in (bad) lods test adc xor sbb and movsl lods retq mov (bad) mov (bad) mov cmpsl pop sbb ss cmpsl fdivs xchg rex.X cli mov or xchg cmp xchg fldenv fcoml sub ss cld xor sbb mov push or out add sbb xorl (bad) movabs cmpsb mov in popfq (bad) lcall pushfq fldt pushq jae sbb rex.X push cmp cltd rex.WX rex.B nop cmp push rex.RB ss jmpq adc xchg icebp adc (bad) cmp hlt callq addl or fimul mov rex.WXB push cwtl lret cmp out test mov sub rex.XB stc (bad) push jg or mov sti sub jmp mov (bad) sub pop mov fcomi cli nop fidivrl mov xchg or fldl (bad) xor (bad) stos fdivp rex loope (bad) scas add cli fs vmaskmovdqu retq cltd mov fsubl stc retq out (bad) jb leaveq adc test scas pop (bad) xor add mov or rex.WX jne shrl push (bad) and xor mov lods loopne and orl mov sub ljmp adc popfq adc leaveq cmpsl xor (bad) mov rex.XB loope js repnz and lahf rol fwait pop (bad) add (bad) idivl stos mov idiv movsl cmp enterq sbb and pop cwtl retq xchg pushfq psrlq rorl pop (bad) xor and mov test retq fnstsw repnz rex.WRX lahf pushq out mov mov callq (bad) mov rex.WB (bad) adc mov rex.R sarl and mov hlt (bad) xchg mov mov pop xchg ficoml mov ds rex.WX mov xor stc popq shlb (bad) (bad) ds jae adc insb xchg mov (bad) scas (bad) lods mov (bad) mov push mov sbb (bad) push sub rex.WXB push push sub sbb mov jo mov enterq jl enterq mov xchg (bad) lods cmp add fwait enterq mov jmpq or fprem1 push xchg movabs imul (bad) movabs cmpsl mov mov sbb cltd movabs mov cmp lods movabs mov ss (bad) popfq pop (bad) test (bad) test loope sub xchg lret pop xchg and add mov xlat test sbb test jmpq and (bad) xor mov or pop mov xchg iret adc pop sbb jo mov jbe cmp icebp or rclb adc js adc rex.RX repz callq pop and rex.WR rex.WB mov popfq fldt push scas (bad) xor sbb jle out in mov jne rex.B xchg sbb sub outsb ds subb (bad) push pop xor ds retq (bad) shll lods cs cmpb xchg sbb je push mov mov stos imul pushq (bad) or (bad) xor mov cmpsl in lret push mov lea test in int3 mov test (bad) fsubp lods and icebp push (bad) test pop (bad) out rex.WB test mov sub or or insb scas (bad) mov push (bad) sbb or lods jo sbb and movslq and (bad) cwtl xchg xlat imul in push test fnstenv (bad) lea lea cmp or or (bad) loop mov (bad) cmpsl jns imul push pushfq push test mov mov (bad) mov (bad) movslq xchg or xlat iret or sbb rex xchg mov sub pop mov (bad) mov int3 mov cmpsl rex.WR nop or lea xchg xor out cltd movabs lret (bad) cltd add std ss rex.WXB loope repz or xchg rex.WXB in (bad) mov (bad) (bad) jrcxz fnstenv (bad) rex.X rolb adc xor test cmp cs cmp rcll addr32 fnsave mov jge (bad) xchg imul popfq fisttpll or nop (bad) or retq xchg push cli mov lods movsl js clc (bad) (bad) out sub cld xchg data16 (bad) pushq scas jns fidivr cltd push ficom int imul mov rcrl (bad) pop add popq mov lods and (bad) nop jmpq mov sbb fimul xchg cmp jmpq std stc sbb mov jmpq imul lods cs xor adc sahf mov enterq test rorb rex.RB or cmpsl mov cs lret mov pushfq cltd bsf jns and rex.W (bad) loop sub fs or data16 retq rex.W xor std or (bad) mov mov ds scas adc sbb cli pop jnp xchg (bad) sbb (bad) (bad) xor mov rex.XB out cmpsl fstl (bad) mov push out mov outsb pop mov rex.WXB pop hlt lahf add cmp adc scas clc and and callq imul or add je mov and adc out xor gs xchg (bad) or movsl xchg cmp pop jne rex.WRB or push or mov mov sbb jmp push and jns mov rex.B or xchg (bad) (bad) jo xlat rex.WRXB flds es out callq (bad) test cld sbb (bad) jb (bad) stos add xchg push ds adc (bad) ss adc enterq jl cmpsb shr jne xchg out (bad) push data16 xchg mov jns (bad) loop xor (bad) xchg movsl or push (bad) rex.WR or jle xor lcall mov lret or push stos cli and std movabs rex.WRB rex.WRX rex.WRXB rex.RX sbb pushq test movabs add iret adc stos xlat mov rex.WRXB (bad) movsb mov popfq movabs add rex.RX xchg out cmp rex.RX fidiv out js (bad) (bad) int xor and xchg es pushq mov jg push (bad) jno out or add hlt mov rex.WRX gs cmp mov cmp xchg (bad) or insb cltd movsl cmp mov int jge insl xchg int es test (bad) loopne js (bad) out stos mov out and lea test (bad) (bad) push cwtl (bad) rex.RXB rex.W xacquire stc mov and popfq sbb (bad) (bad) out mov rex.B rex frstor out mov (bad) add jae (bad) es pop adc jns test (bad) xchg std (bad) and (bad) mov hlt xchg mov sub mov or (bad) out repnz rorl rex.R and jno insl cmp jg movsl adc sbb xchg psadbw rep xchg sbb mov pushfq cltd pop add insl xchg lea mov mov out xor test xchg mov (bad) lea rex.X add fs bswap (bad) jo rex.WRX gs mov add jge cmp push movabs rex.W test push int fstl add sbb imul (bad) mov rol in mov js out jl xchg movabs add rorl (bad) and (bad) insb (bad) jo pop lahf jp (bad) mov push rex.WXB test sahf rex test xor or mov movsl mov jrcxz pop xor cmp xor outsb popfq outsl xchg movsb sti rclb adc mov rex.WRX pushq (bad) (bad) cwtl stos mov scas rex.WRXB add mov sbb and push vmovhps (bad) stc lock clc std jl xchg out cld xchg ud2 adc sub out int3 rex.R repnz test repnz mov movabs and mov xchg in test repnz adc or sbb rclb (bad) rex rex.WRX out fnstsw pushfq and pushfq adc cld loope push and mov mov xor mov push lahf xchg xchg test int fadds mov (bad) test mov int3 jns or (bad) fmul repnz enterq rex.XB (bad) (bad) mov rcrb push (bad) cwtl cmp orl mov rcrl stos in (bad) jmp iret xchg pop scas (bad) hlt push cmp xchg imul stos jbe mov cmp out out loope clc pop xchg mov (bad) insl sub fnstenv jp mov fs pop rex.WRXB sbb mov pop sbb cld rex.B ss push fs mov (bad) push xor sub movabs icebp jge jrcxz mov jns nop push movabs (bad) andl pushq setns xchg jge add push jg jmp jne test (bad) js (bad) in in orl jo,pn (bad) fcomip and jmp in int3 movabs and sbb hlt or adc rcll or jmpq addl jns xchg jmp push out xchg jge (bad) sti cmp pop mov movabs mov mov push (bad) loop push (bad) test (bad) (bad) scas loop rex.XB (bad) jrcxz push adc sbb std xchg lods popfq divl xlat callq and insb push (bad) out (bad) stc push movsl and sub rcl shll scas lods ja imul and adc jl ss or stos int xor xchg insb repz (bad) out sti sbb xchg xchg es push nop xor xor mov rex.X out scas sub adc (bad) mov xchg sbb jle cs imull sbb sbb or rex.WR mov cmp adc adc (bad) (bad) lea mov cmpsl (bad) fcomps iret (bad) test mov cld and and mov adc pop cmpsl mov and xlat xchg xor (bad) sbb jge mov stos push leaveq adc fcoml loop xor sbb out xor callq insb (bad) mov rex.WB (bad) xorl movslq sbb (bad) adcl mov icebp sbb xchg jmpq insb mov (bad) xchg xor (bad) xchg sbb sbbl std int3 ds test sbb jl callq cmp pop (bad) hlt es xor (bad) je sahf clc cmc mov lods ss rex.WRB lret fldt push mov sub add sbb es iret mov (bad) mov (bad) ja retq jmpq pushq mov mov or and int outsb jle mov std or rex.W shrb and adc mov xchg ss fcoms jnp mov xchg out stc and add (bad) inc and adcl test xchg mov mov in sbb add mov pop shrl jmp (bad) mov sar xchg fcmovbe leaveq rex.XB shrb cmpsb scas add jg cmpsb lods sbb rex.WRX mov (bad) nop mov xor fdivrl (bad) cmp pushq jbe cmp paddusw (bad) (bad) (bad) or xor push icebp mov and adc stos add rex.WRX (bad) mov fs or cmpsl xchg (bad) or rcl mov rex.W pop mov (bad) (bad) sub mov in mov fsubl xlat (bad) movabs loope imulb (bad) out lea movsb push or mov xchg push (bad) mov (bad) mov (bad) jb lods mov xchg sbb xchg jns xchg pop or adc retq cwtl jl fdivs frstor rex.WRX mov (bad) in pop xor (bad) imul pop sub jg add jb (bad) (bad) jmpq xor fnstsw jno mov mov jo rex.R add (bad) incl rex.RB adc cmp adc fistpll sbb add mov jmp (bad) enterq rcr (bad) mov sub fimul out xchg (bad) rex.X pop cld jrcxz mov rex.WR nop adc imul cli xchg rex.X (bad) cmp jge push fisttpl mov (bad) sbb out (bad) std (bad) fucomip xchg pop (bad) (bad) cmp jmpq mov mov hlt jns xor or and adc xchg (bad) mov repnz lret rex.XB adc xchg in cmp cli lea data16 imul clc cmpsl addr32 mov shl subb xchg out cmp (bad) xor jmp (bad) leaveq mov loope stos clc cmp add pop test movsl jae cld (bad) and or addr32 lea push rex.W mov insl xchg sub rcll mov adc sbb cld pushq xchg or (bad) je sarl mov subb mov (bad) in rex.WRB ss mov xor mov xor xchg push hlt (bad) pushq (bad) mov mov fnstcw mov int loope jle mov pushfq add ss xchg mov (bad) (bad) cmp sti fdivrp clc adc or mov (bad) movsb sbb fs sbb or add mov loopne xchg pop (bad) testl xchg std notl scas bsr jbe sbb mov (bad) out xchg and sbb shrl xchg sbb lret and loope rex.WB rcrb ja or jbe out pop lods retq or rex.WXB cmpsb or (bad) or and adc cs mov add xchg rex or fdiv stc cmp pop add out xchg cmpb rex.WXB cmp sbb popfq insb movabs mov xlat (bad) xchg xchg mov jl or stc addr32 mov add loope pop sub cmp movslq movsl lret (bad) sbb xchg and and js outsl adc jae (bad) rex shll fnstcw xchg adc pop mov int (bad) pop (bad) mov lret movabs jo test lret and xlat rex.W test xchg or fs rcrl cwtl sub movslq in adc cmp push cmc jrcxz es jae sbbl fdivrs cmc popfq out (bad) push movabs jae xchg out callq (bad) callq (bad) add fnsave sti (bad) out movsl int3 rex.WR xor mov cmpsl mov repz adc mov and es and movsl sbb cmp push icebp movsl test jmp xchg cli popfq mov popfq xchg movsb (bad) cmp push xchg sub mov adc in cmpsl and loop mov xlat xor jo out jb mov (bad) sbb or sbb movabs fimul jge push cmp (bad) out sbb sbb xor jns nop push movabs jp sarb mov jrcxz incl (bad) (bad) adc mov ffree or or in cli jo sbb stc (bad) pushq (bad) fildll ds add in xor (bad) lret in fnstenv retq fnstcw rex.X mov push ja mov cs rex.WRX (bad) xchg add int rex.RB cmp stc (bad) in adc sbb (bad) fbstp pop movslq fimul cmp and (bad) add ss push stos or mov addr32 mov xchg es out pop popfq mov faddl lods insl mov (bad) cmp xor fdivs rex.WB push (bad) mov and sbb (bad) out out xor xchg cmp cmp jo jg or sbb sub sbb pop cmp or (bad) std data16 push and xor data16 or mov mov mov xlat retq xchg scas mov mov add scas push xchg sub lahf cmpsl test nop xor out add add (bad) (bad) mov (bad) xchg mov scas jp or (bad) ss add pushfq (bad) (bad) ds pop push loop (bad) rex.WX push or jbe cmp pop cmp cltd xchg fisub and (bad) add shrb sahf rex.WRB mov add lea adc jns jae (bad) push int3 insl push xchg pop popfq (bad) mov scas (bad) fstpl sbb repz push imul loope rex.WX jp mov and mov pushfq or sbb (bad) popfq rex.RX (bad) sbb rex.RX xor mov adc or add xor clc shlb cltd mov js mulb or xor pop movabs cmp sarb cmp lods sub mov imul rex.X mov mov andl cltd xor pop repz add gs je iret repz hlt mov push cmp out adc (bad) add loop jmp sbb jo movslq pop jmp add movabs fnstenv and xor adc loop ficom movabs cmp sbb pushq ds xchg divl cwtl or xchg mov xchg add test std pop ss repz lock and mov lea sub add or push adc adc fdivrs add push cmp cmc out rex.WX cmp (bad) sub xor cmp xchg rex.B sbbl jle rex rex.RXB (bad) jge (bad) lret jbe mov (bad) mov rex.RXB cmp lods roll mov movslq push xchg cmpsl xor sbb jae scas fcmovne (bad) rex.XB outsb (bad) xchg cmc mov adc jno scas retq sarb jl rex.WRX xchg jg test rex.XB mov jmpq imul rex.XB cmp ja jae push xchg push mov out mov xchg cmp jns sub stos adc lods xor (bad) mov (bad) (bad) movabs xor xlat popfq or rex.WXB sub (bad) jg imul lock rex.WRXB add cmp and test data16 mov movabs xor fstpl mov stc pushfq cmp cmpsl mov test rex.WXB lods mov xor cmp addr32 mov (bad) mov in mov adc cmpsl xchg add (bad) sub movntq mov rex.WB xor and cmc stos mov and fstp sbb xlat or iret or push rcll (bad) sbb add or jnp or (bad) out in in mov (bad) callq or cmp stc add in cltd (bad) test scas (bad) fistpl lahf pop cmp rex.WRXB mov repnz imul rex.WRXB jnp callq fdiv xchg xchg pushq sbb (bad) or rolb rex and rclb xchg mov sub fnstsw jle clc xchg (bad) out jrcxz popfq loopne rex.WRB mov or (bad) js pop or cmpl xor imul adc ficoml mov and mov rex.WRX mov ss imul cwtl jae mov xchg pushfq retq out xchg retq rex.XB loopne fisttp fldt rex.WR movabs mov stos mov out clc js negb adc mov and mov xlat mov clc ficoml callq cmp jl xchg stos xchg rex.R movabs (bad) repnz rex.R movabs hlt jmp insb rex.RX hlt cmp repnz xlat (bad) loop (bad) movabs mov xchg (bad) movabs movslq xor shr and outsl cwtl fdivl jge sbb loop repz (bad) (bad) sub nop (bad) pop rex.WRXB rex.RXB mov std gs rorb cmp out sbb test (bad) popfq rex.X rex.RXB add (bad) or (bad) in (bad) or adc mov xor imul cmpsl out sbb sbb sbb sbb xor rex.WB fs rex.WRXB es pop xchg xchg fidiv add test shll insb (bad) mov mov xchg jge pop (bad) (bad) rex.WXB movabs xchg sbb jns mov mov sti cmp xor lods sbb lods push ja push cmc fwait xchg stos (bad) cs mov (bad) jo test lods mov xchg mov (bad) xchg rex.WRX mov sub (bad) xchg (bad) (bad) (bad) retq retq fistl lods mov xchg pop xchg rex enterq sahf add sub mov (bad) (bad) jmp ds jnp mov (bad) cltd cli rclb (bad) sbb imul (bad) adc decb cmpl xchg int mov sbb (bad) hlt (bad) cli mov (bad) sbb cltd je adc mov cmp movabs leaveq and sbb jae out xchg fidivl (bad) or pop es std cmp rex.WB lret mov lods cmp stos rex.WRB add (bad) movabs add mov (bad) mov adc rex test mov adc add pushq fsubrl and sbb mov (bad) (bad) mov push std movsb mov (bad) jg adc test fadd jl and push popfq rex.WXB cld adc or push rex.WXB rex.WX or fildll rep xchg (bad) mov add jnp out out cld jae fwait push (bad) rex.W pop pop lahf movslq add rex.WRXB fs sub xchg test xchg stc stos fist out test xlat sbb cmp adc pushfq popfq es sub (bad) (bad) ds addr32 nop popfq mulb cli fisubr mov (bad) push lods test test (bad) std outsb notl fsts (bad) sbb movsb xor movabs insl sbb pop js jbe std push rorl jl mov (bad) out rex.XB sub ds (bad) imul xlat ds sbb retq fldl mov xchg sbb mov out sarl pop cmp in test rclb sbb mov repz (bad) addr32 jrcxz pop callw in (bad) movabs loop je sbb mov (bad) lret scas xor or (bad) or xchg (bad) (bad) callq test (bad) es adc movsb faddl movabs xchg out (bad) jae lods imul jo jle imul jle mov adc or mov cs nop mov vpmacssww pushq insb (bad) scas pop mull sub pushq mov out mov jge test adc jg rex.W negl testb (bad) mov adc insl xchg fstl xor fcos pushfq pop add mov xchg psllq popfq roll xchg or std repnz (bad) add lods sub sbbl gs jle push (bad) cld rorl or rcll lods test mov lret add rclb fsts fmuls test mov mov xor std cmpsb (bad) mov sub (bad) rex.WB sub imul mov movabs xchg xchg cmp pop xchg xchg in adc xchg cs rex.XB loop (bad) loop out xor xor fs (bad) rex.WRXB sti (bad) xor xor (bad) or sbb sbb pop ja adc mov ss or repnz scas clc (bad) push or test add cld loopne addr32 (bad) xor movabs adc stc (bad) loope rex.X mov mov mov fstpl (bad) (bad) callq or xchg jno mov (bad) (bad) mov or out je push cwtl loop xlat xlat mov cmp (bad) mov jge or rex.WR sbb mov sti or mov cld es cmp sub pushq test in (bad) xchg (bad) fistl rorl out out and movslq rcll (bad) push or pushq lret rex.WR int push xor scas push addr32 rex.X rex.WX pop xchg push rex.RX std mov test out jbe add ds outsl jge int (bad) mov test sahf adc imul jae sub (bad) fistl movslq (bad) xchg rex.W sub jmp mov adc (bad) (bad) (bad) xor adc repnz adc out mov jmpq cmp add (bad) sahf adc ds cmp (bad) in scas xor loop (bad) and fst push (bad) xchg fwait cmpsb xchg xchg in testb rex.WB lods shrb mov mov (bad) sti rex outsl ja mov mov mov (bad) in mov or cmp cwtl frstor movsb pop pop xchg lods mov (bad) xchg out movsl movabs push mov hlt retq (bad) (bad) adc or adc xlat stos rex.W rex.B shrb gs (bad) mov in mov cltd or (bad) repnz cwtl popfq fistpll mov adc mov in rex.WXB jno rcrb mov sahf lret es mov add xchg jns insl xchg cld loope adc outsl ds xor (bad) adc loope cmp lods xchg sub stos leaveq lods or mov push mov int3 cmp jp (bad) mov sahf sub iret callq (bad) xchg js mov (bad) mov pushq mov cli mov je (bad) mov cmpsb cmp addr32 test and or push or add js sahf je test roll add adc adc mov rex.R xchg rex.RXB xorl xchg sbb mov cltd adc scas jrcxz (bad) movabs pop pop lods sbb gs mov jp pop gs ds jle and lock (bad) (bad) ficoml (bad) xchg lods scas shll rex.WRB sbb stc mov cwtl xchg iret pop or addr32 sti jbe xor fsubl (bad) cmpsb fs rex.X mov lret xor int mov jb sahf xchg adc out (bad) repnz sbb mov movabs xor mov push mov push xor pushq stc jge stos lahf imul sti lods shlb mov mov mov push jne rex.B fcoms pop addr32 fwait (bad) idivl (bad) ds push xchg ss lods jo pushfq std add adc xchg sbb decb stos mov retq xor pop pop sbb xchg movabs sbb cmp (bad) enterq cwtl sbb pop insb and jno mov xchg sbb (bad) rex.R rex.RX (bad) mov pop sbb cmp mov mov ficom (bad) out push adc push mov jmpq jg xchg imul sarl fidiv xor xor (bad) adc xchg xchg cwtl adc movabs xlat fstpl lods (bad) and pop mov mov (bad) negb (bad) add lret ds add out cltd (bad) xor cmpsb pop xchg rex.XB fistpl push in shrb jae,pt movabs cld movabs movabs pop push rex.RXB lret add movslq (bad) fstpt mov jp (bad) sbb or mull pop or pop sbb mov or xchg pop pop (bad) cmp jmpq clc retq cli mov addr32 test mov and sti push and lahf movabs add mov mov jp sub imul and (bad) ss (bad) fdivl (bad) jrcxz int xchg rex.X sub rex.RX and lods mov (bad) xchg mov (bad) or orl sbb adc sbb mov or out out mov test movabs jae fstpt popfq xor rex.WXB xor movabs nop movabs lea mov xchg mov retq push add pop adc rex.WR mov and and jmp pushq iret rex.WRXB gs rex.XB callq in xor idivb je pop mov sub (bad) rex.WXB rex.WRXB js sbb sub sar lahf jne add mov mov (bad) sub fidivr rex.WRB shrb jae rex.RB mov sahf mov mov xchg xchg adc add in (bad) movsl lock jmpq ds lods adc test mov adc fiadd add lock loope push fnsave jbe es cmpsl pushq or lods retq mov fst rclb pop jae xor fstpl xor outsl (bad) cmp xchg jnp jrcxz in or rex.WXB xor or movsb insl rorl mov jl mov popfq xchg cmp test sbb scas xchg mov movabs callq negl xchg pushfq imul jb (bad) imul (bad) (bad) rex.WXB xchg (bad) callq xlat pop (bad) fsubs std (bad) addr32 jrcxz sbb pop outsb fstpl add fnsave psllq jl stos shrl out scas (bad) sbb mov pop in repnz and test mov jrcxz movslq and (bad) rex.WRB rex.RXB loope xor mov lret sbb je sub rex.RB lret fidivr sarb sbb rex.WRXB movslq push (bad) rex.WR jge sti nop in sbb xor jae lods sub push (bad) and xchg pushq jmpq xchg imul iret xchg mov (bad) (bad) rex adc sub add pop pushfq mov movabs jo leaveq cmp lea cld or stos mov rex.RXB pop mov mov rex.WRXB fs rex.RXB sbb or (bad) test lock rex.WRX ss ficomp (bad) mov sbb lret stc movabs add and cmpl adc jnp cmp xchg fsubl (bad) mov sbb rex.RXB hlt mov movabs pushfq mov mov fwait mov mov insb add xchg sahf cltd ljmp test movslq pop (bad) movsl (bad) jmpq xor es sti cmp sbb (bad) cmpsl sbb rex.WRX xor fistl in orl lahf jne mov movabs (bad) mov out rex.WB rex.R xchg ds hlt imul ss fs sub add out cltd (bad) negl rex.RB rol rex.WRXB sub pop and test mov pushq (bad) cmc pop jns adc pushq add cmpsl pop xor xor cwtl xchg (bad) movsl popfq mov cmc icebp sbb rex.RXB jae divl roll xor (bad) mov cmp xor jle out sbb cltd lods mov rcl movabs fcoms sbb (bad) push std mov (bad) cli nop mov and (bad) xchg (bad) in mov mov loopne mov lods mov xchg or out mov lcall popfq pop sti (bad) test pushfq sub es add stos leaveq mov int out loope rcl fdiv sbbl fisubl (bad) xlat sarb (bad) loop rex.XB vmread adc pop jmp rol int3 (bad) jnp xchg (bad) scas lods movsl cmp xchg (bad) sub in mov (bad) sbbl rex.WB mov xor leaveq cmc stc adc sbb sub mov jmpq mov push and adc sbb sbb mov adc popfw fcompl mov mov lods rex.R test and es sbb loope imul sarl push lret and mov (bad) xor or movabs xor add fisubl sbb sbb add (bad) mov retq rex.WB push test insb mov adc mov movabs xchg int3 lret cmp lods xchg stos rex.WRB fwait push lret test mov fisttpl sub cmpsl pop mov out jmp mov fnsave mov and xchg movabs mov rex.RB (bad) outsl cld xchg sbb test cwtl jnp mov gs rex.X xchg push mov sbb mov (bad) or cs callq add jle mov and sub add push lods (bad) xor enterq popq cmpsb cmpsl sbb pop cmp test nop movabs and rex.WX sbb add mov pop mov xlat mov adc cmp mov sbb (bad) (bad) outsl iret cmpsb (bad) or rorl jge shrl pushq add sbb (bad) cmp mov jle cmc jo movsb fnstsw xchg callq rex.WRXB mov outsb pushq enterq lock add outsl in lea clc jbe xchg fldcw xchg sbb cmp xchg (bad) movslq rex.RB lret in gs mov add stos pop es sub (bad) imulb push mov mov out or adc addr32 add rex.WB cmc and ja pop jbe push adc sbb adc scas sbb sbb loope xchg push xchg imul rcl cld mov int3 test jg (bad) xor movslq popfq sbb or mov adc ja scas rex.B fistpl sbb xlat sub out mov sbb leaveq pushq add xor frstor adc add jnp (bad) cli pop adc cmp (bad) (bad) movsb mov sub ja rex.WXB push (bad) (bad) add rex.WRX frstor xor fistpl ljmp out pushq out adc lods std test sub rex.RB addr32 adc xor lahf mov sahf push adc mov (bad) imul xchg lock scas sub xor sub xbeginq adc jge xor cmp insb cmp jae (bad) jno mov cwtl (bad) out js pushq sbb mov movsl jle repz jne js stos xchg jae adc fisttp (bad) (bad) sub (bad) sbb retq movabs push je rex.X mov mov outsb (bad) jmp push and jl add xchg (bad) adc in mov mov insb iret add imul fisttpll movslq xchg movsl scas pop push or cmp outsl xlat sub out stc xchg (bad) rex.RX mov js iret mov (bad) lods sub (bad) (bad) xor adc (bad) sbb cltd and add adc rex.X sbb sar lock mov movabs xchg mov in int3 adc movabs jge adc sub xor (bad) rcll in insl push adc sub (bad) fiaddl (bad) xor (bad) cmp repz pop insl out movabs ja add mov and orb mov out pop mov xor adc mov mov adc lea mov lods fsub lahf (bad) mull sbb callq mov sub fcoml (bad) or movsb scas repnz lods sbb xchg mov ja mov cmc adc out xchg rex.WXB rex.WX jo (bad) in (bad) (bad) mov sbb popfq pop int3 xchg xchg movabs adc jg sub movsb push std in iret xor subl lahf cmp mulb imulb out mov (bad) imul add movsb mov cvtps2pi add (bad) addl adc cmp or shlb fnstcw imul lock movslq (bad) sahf lahf xchg movabs mov mov add movabs mov jo mov test jo push mov out mov insb or mov out test movabs (bad) notl sub fstp sahf out xor mov sbb or push outsl jg xor in adc xchg jno (bad) nop out or scas out adc xlat insb outsl xchg sarb movslq and (bad) cltd mov mov (bad) (bad) rorl cld movabs movabs sub push movabs (bad) xor pushfq (bad) rcl sbb test (bad) clc (bad) sbb (bad) xor sbb xor xor mov shlb ja sub (bad) adc adc xor adc sub and fs add fistl out jo and shr add mov fcoml or std rex.WB out callq gs rex.XB (bad) mov xor mov movslq sub callq fs sub adc jle fcoml hlt xchg mov mov in std xchg retq repnz fldt movabs fdivs or or xlat xor push dec in (bad) rex.WB fwait shll (bad) rex.X popfq adc in mov mov adc xor rex.WRX ss xchg rex.WXB movabs xchg fcoms and pop (bad) ss xor retq cmp in xchg popfq pop out sub (bad) or xchg jle mov jne icebp lods rex.XB (bad) cmpps lret xor je jnp adc cmp test xchg xchg pop xchg sub cmpsl test (bad) mov mov sbb idivl rex.WRB movsb fisttp ja (bad) clc movsb xchg ja (bad) adc sar iret (bad) in pop xlat rex.WR test stc or hlt and mov (bad) add add cmp or xchg out mov (bad) pop negl imul and fcmovu loop in es xor (bad) cmpl jg rex.WRB imul mov leaveq out or (bad) out mov neg test cwtl fcoml loope mov xor (bad) fnstsw int3 cli jg jno hlt out out repz popfq sbb int3 cmpsb and sbb or cmp pop pop sub mov movabs cmp pop sub xchg (bad) rex.WRXB (bad) movabs fwait cmp cli and and mov sub pop test cmp lods out test decl rex.X mov add sbb nop adc mov sub hlt movabs adc iret pushfq xchg es add pushq insb adc (bad) rex.WRXB pushfq sbb mov pop fistp cmp xor pushfq (bad) adc adc mov or in loopne lods cwtl or lods mov push out sub leaveq movabs sti jge pushfq es rex.WB xor lock push fucomi xor movabs add sbb fldcw (bad) sbb rex.W mov lea cltd (bad) mov adcl push xor imul movabs ds jl push shlb or outsb loop test mov or pop cmpsb mov adc and loope add callq movabs (bad) add jno (bad) sahf insb and (bad) mov nop (bad) imul mov and mov gs mov (bad) (bad) out rclb jns xor mov repnz pop mov add or jmp (bad) xchg rex.XB mov mov sarl rex.X xchg adc fwait hlt incb add push retq and (bad) pop mov cwtl push xor fwait (bad) jo adc rex jle sbb jmp (bad) enterq enterq popfq xchg cmp rolb psrad sbb (bad) lahf enterq ss in xlat out loop in pop jbe adc retq mov lahf enterq mov sbb adc mov pop shrl xor fldl add lahf movabs mov clc pop in out icebp lods xchg or cwtl rex.XB insb popfq rex.WRB xor rex.B rex.RX sub int xchg (bad) jnp rex.B and cwtl (bad) mov mov sub in in xchg and shll sbb retq add (bad) push jmpq (bad) repz cmp mov movabs pushfq push jo cmpsl (bad) (bad) mov jmpq mov adc mov rex.XB decl sbb and fidivr sarl ss sub in mov rex.B rex.WR cmp push mov xchg mov mov imull stos mov (bad) add cli push es xorl movabs push xor xchg xor addr32 xor out sub adc lret cmp imul pop (bad) xor push insl loop mov (bad) cwtl adc mov mov (bad) mov cmpl movabs mov rex.R jmp xor (bad) (bad) xchg add in mov push jo xchg (bad) ljmp pop xchg push or rex.WB sub cmp repz jmp mov (bad) (bad) (bad) adc mov jo mov (bad) rex.W and rex.WB xchg (bad) repnz cmc rex.WXB ffree mov jnp (bad) jbe cwtl mov cwtl pop xchg jl ss (bad) (bad) (bad) (bad) ds jge add cmpsl cmp or or mov jrcxz sub xor loopne push repz orb movsl (bad) adc rorb (bad) lea mov cmp jge sub mov (bad) adc mov sbb rex.RX bnd (bad) outsl mov xchg inc jp out pop push jrcxz enterq (bad) xor pop sbb mov retq mov xlat (bad) decl adcl mov test mov mov rex.XB adc cltd sbb mov lret nop or push mov xor sbb (bad) imul cmp jmpq in xlat xchg cld repz adc adc test mov pop jo jo or mov test (bad) fistpl movsb rex.RB and mov (bad) adc insl push idivb (bad) loopne fnclex jno outsb pushfq sbb icebp jns xchg test sbb xchg add callq mov rex.RB outsl mov (bad) mov or adc cmp jnp (bad) lods enterq (bad) (bad) jmp cmpsl (bad) rex.R rex.WRX ja (bad) mov adc lods popfq mov (bad) push sbb test xchg idivl mov mov pop (bad) fldenv fptan or mov test jle (bad) scas sbb xlat push in add xchg and mov lret rcrl movabs jrcxz mov lods xor mov movabs sbb push je mov retq repz cmp fisubrl (bad) jb mov sbb adc or mov (bad) js jmp nop sarl cmp xor out rex.WR in and mov in pushq cmp (bad) sbb out jo rex.XB mov rex.RX mov loop xchg scas xor (bad) pop and pop (bad) xor fstpl repnz mov jo add mov out mov int xor test or pop subl fisttpll xchg mov mov pop lret (bad) out push stos mov sub mov xchg (bad) or leaveq imulb pop pop jo adc in movslq out and push movabs xor jmp mov or xchg mov out jl cmp push leaveq mov addl xor jbe lods (bad) mov shr cmp in adc nop cwtl iret rex.X dec (bad) jmpq int3 (bad) and push (bad) (bad) (bad) cmpsl mov xchg (bad) jg lods mov xchg jae (bad) xchg (bad) (bad) mov rex.RB push in add scas push out sub push std xchg (bad) (bad) shld mov out sbbb add in push xchg pushfq adc fnstsw jne lods es pop jno or rex.WXB xchg or push lret jbe push js cmp (bad) xchg lret add (bad) scas (bad) rex.WR ds (bad) scas test rex cmp mov xor (bad) mov mov jl retq (bad) sbb pushfq iret js ja jrcxz sbb sahf mov sub lods imull movsb sbb bt adc pushq sub in push je fcomi sahf retq sub pop rex.XB scas andl imul sbb pop (bad) add (bad) xchg (bad) fsubp popfq cmp (bad) cltd pop insb sbb sub jge cmp sub imull sahf jl cmp nop callq in xor fist add sbb and cwtl repnz cmpsb jns xlat mov fsubs xchg cmp (bad) cmc pushfq rex.WR jbe sbb scas clc movsl jge jno sahf test adc pushfq rex.W mov xchg jge (bad) (bad) cmp push mov cmp adc cld mov xor and fistl pop adc movsb adc lcall xor out scas cmp push (bad) xchg cltd (bad) (bad) mov popfq cs cwtl mov rex.WRXB in lret rcrl js xchg rex.WRB sbb mov lret pushq add mov incl movabs movsl adc sbb sbb cmp leaveq push sti leaveq xchg fisubr mov je in pop pop adc imull loopne mov lret bswap movabs sbb pop popfq clc pushq mov adc pop pop mov or (bad) jmp fistpl jmpq mov cltd cmpsl sbb sbb rex.WRB (bad) outsl (bad) movsl sbb cwtl mov es lods cmp movslq iret std xchg cmp sti sbb callq mov js out clc repz (bad) loope jp sbb sub je sub sti jl adc adc ss sti mov xchg jl (bad) lea sbb int xor cmp adc popfq push or je pop movsb in cwtl (bad) or cmp negb retq sbb rex.WRB repz adc cltd testl js push retq (bad) in mov (bad) sbb cmp clc or popfq mov mov pop (bad) push (bad) cmp mov (bad) xchg rex.RX or mov movabs cmpsl or test and lret sahf jae ficomp out sarb lods cmpl fstl lods sub add (bad) pushq mov in fcmovne cmp outsl (bad) or lods rex.RXB subps pop cmc (bad) adc mov addr32 mov rcrl or out pop (bad) cltd ss sbb sub test pop fild sub movsb mov sbb jns cmp pop (bad) shll (bad) xchg cmc lret ficoml popfq fwait add sbb repz xchg or lea cwtl imul mov and or imul in cmpsl jns xchg and jg (bad) lret loopne cmpsb movabs xchg (bad) int3 pop sahf sub lods xchg mov sbb popfq fnstcw pop push lahf (bad) jmpq stos (bad) sbb sub cmp xchg sbb pop retq fcomps fnstsw cmp mov push loopne xchg push popfq (bad) or rex.RB rex.WRX xchg hlt rex.WB xchg imul (bad) cmp scas pushfq bndstx stos add test cmp fdivs test fidivr (bad) cmpsb sub cld popfq es movabs xchg cli divl xchg out idivl xchg in repnz out xchg (bad) xchg xchg sbb (bad) cld sbb cmc mov sub in xlat int3 sbb (bad) xchg sahf (bad) movabs (bad) (bad) xchg decl add xchg lods test xchg xchg pop (bad) xlat clc sti sahf push out test movabs pop negl jrcxz (bad) fisttpll cmpsl gs movd and jge mov shrb rex.WRX xchg out jg movabs cmp std mov jae xchg retq cmpsb sbb xchg mov jns or movsb idivb sti (bad) jl (bad) movsl xchg ja mov ja int jbe rcr pop push (bad) jge push xchg pop push cwtl lods add cmp mov xchg xlat mov adc fidivrl (bad) pinsrw movabs nop addl mov sti insb popfq mov (bad) (bad) mov xchg xchg movabs mov jb push stos fs push mov (bad) push rex.WRXB (bad) fisttp pushfq shr rorb (bad) imul xchg mov mov clc testb test pushfq xchg mov rex.WX rex.RXB cs lock mov fild (bad) hlt faddp (bad) (bad) movabs add lea shrb fadd adc repz cli pushfq cwtl (bad) (bad) fbstp ds js mov sbbb jo sahf fwait cs out movabs movslq movabs stos andb nop sbb mov add mov jmp fidivl mov mov movslq out rex.R lods lods adc scas iretq enterq pop popfq decb sbb (bad) cmp mov add repz or mov xor rex.W xor mov cmp xor jle sbb icebp (bad) mov pop (bad) rex.WB add lea jrcxz or fldenv rcr (bad) mov xor pop pop rex.WR addr32 xchg fdivp (bad) loopne retq sbb mov mov fnstcw push xchg mov cmp cmp fsubs cltd adc sbb xchg sbb hlt pushw pushq sbb rex fstl packssdw (bad) xchg ficompl xchg cltd adc mov mov enterq sbb adcl fsubrs sarl ficompl (bad) scas push (bad) nop mov cld jg mov rex.RX mov (bad) ja js (bad) (bad) frstor int movabs mov pushq movabs repz pushfq push rorb lret mov sbb (bad) leaveq xchg mov (bad) cli mov sub rex.WXB or (bad) mov (bad) mov movabs movsl xchg (bad) jnp mov (bad) lret push popfq push ds cwtl fcoml xchg stos jle (bad) jl int mov cmp cli rex.R mov rex.B jrcxz (bad) sub loope rex.RXB popfq rex.RB scas mov in loop push ja mov and out ja enterq (bad) (bad) xor add sbbb adc sbb mov mov es rex.WRB (bad) movsl in cmp pop mov cmp (bad) pushq rex add add test jne imul cmp jg movsl mov movabs add jne add cmp hlt push push push ja sbb xor (bad) jb mov mov cmp mov lret sub cmpsl or je or rex.RXB pushfq jne fbld mov (bad) lret xchg test mov packsswb add or mov pop loop pop loope rcrb mov lea int mov cmp mov in imul rex.WXB cmp mov push sub repnz cmpsl (bad) xor jge (bad) repz callq rex.WXB scas jmpq rex.RB mov (bad) lods pop (bad) xchg rex.B (bad) out rex.WRX lret xchg (bad) int3 sbb ficoml lret pop add lret xor rex.WR or ficomp xchg leaveq xor rex.RX imul xchg cmp jb scas rex.X pop or mov rex.R rex.WRX icebp sub jo xchg movsb mov (bad) mov retq mov cltd (bad) fnstsw (bad) pop std sbb (bad) mov and (bad) or xchg mov adc (bad) pushq or xchg rex.R push (bad) cwtl pushq cmp int mov mov (bad) rex.WR out mov (bad) (bad) cmp (bad) jp jge movabs mov cwtl and mov (bad) popfq pop add (bad) cmpsb sbb fisubr cltd pushq popq mov clc cmpsl sar cmp popfq push xchg loopne scas iret (bad) popfq pushq xchg push retq gs clc and mov mov xor out imul mov outsb (bad) mov or cmpsb mov cmp fs mov xorl cmp sbb int loope cmp insb rex mov cmp xchg sti and int out es pop imul rclb cmp mov repz adc stos xchg pop xchg loope (bad) sbb xchg (bad) push add rex.WXB leaveq xchg sbb sbb es xchg jbe jle mov sub mov xchg test mov (bad) mov (bad) push sbb jne lcall imul (bad) adc negl mov mov (bad) xlat ss sub cs jl sbb xor pop xchg ss xor pop jae in test (bad) loope in lret leaveq nopl movslq lock add add fdivp mov adc movslq jge rex.X repz rex.WB adc cwtl add (bad) popfq hlt adc adc movabs (bad) stos pop icebp cmc outsb jo rep rex.RX (bad) out lea (bad) mov (bad) rex.R mov mov out xlat mov pop or cmc pop stc mov cmp pop mov xchg callq ja pop popfq pop (bad) (bad) (bad) sahf or outsl (bad) cs mov pop cltd sbb xchg icebp rex.B (bad) xchg cmp xchg outsl cld cmpsb mov xor movabs sbbl jb xchg std cs movslq add rex.WRX xchg jb (bad) and add jae mov xor xchg movslq (bad) ja xchg cmp scas movslq add rex.XB cmp cli xchg (bad) sbb jl xchg mov mov xor repnz add rcrb sbb xor imul (bad) sub sbb fimull pop es rex.WB adc xchg int3 ds jp out xor xchg repnz add (bad) add vpshad jle loope sbb xchg xchg fldenv loop callq mov sub fldl mov jrcxz loop popfq push in lahf or loopne adc fmull negb cmp pop cmp xor (bad) insl adc sub rex.WRX rex.WX adc mov rex.RX hlt (bad) lea movsl lea cs xor out and popfq out (bad) cld jno sub (bad) and pop mov out insl popfq stos pop fild pop rex lret out stc xor or xchg fsubrp out rex.WR (bad) out repnz jbe cld ffreep (bad) xlat mov (bad) sbb (bad) (bad) sti mov adc push loope test divb xchg pushq fsubs sbb push sbb jmp and or (bad) rex.RXB add popfq andb rex.WRXB rex.B cwtl (bad) rex (bad) pop pushq pushq mov xor mov ja loopne (bad) xor cmp jo xchg (bad) add fmull movabs jl xchg (bad) cltd pop pop mov mov cmp mov (bad) cmp mov je imul clc pushfq jo cltd stos loopne (bad) jns (bad) (bad) retq je pop mull xor lods or xchg rex.XB rex.W sbb xchg adc cmp gs test std rex.RX mov jne rex.WRXB (bad) xor cmpb (bad) add pushfq (bad) cmp or adc or mov (bad) mov sub clc in (bad) sbb lods neg sarl mov pop addr32 pop rcrl ja or shlb sti push callq mov mov movabs rex.X stos adc sbb mov (bad) incb (bad) adc mov and (bad) sarl (bad) mov pop (bad) fild fsubs pushfq xchg xor pop retq jo sahf mov xchg or add jp adc cmp xorl pop out (bad) (bad) cld movsl and xorl js or int (bad) or cmp jns mov js mov or (bad) lret fsub pop xchg xchg rol hlt rex.R sbb loopne popfq callq cltd sub ss ja cmpsl rex.XB scas xchg pop mov in mov test adc loop movabs (bad) jge movl jae adc (bad) adc retq idiv scas nop mov sarl (bad) jae rex.WXB xor lret sbb xor (bad) pop mov sahf (bad) (bad) (bad) mov jnp pop jae rex.RXB mov (bad) sbb mov and mov (bad) lods in imul adcb rex.WRXB jno pop mov cli cmc and out pushq int scas cld ficomp (bad) fistl (bad) jl or stc stc adcl fucomi int3 xchg xor mov movslq add popfq pop rex retq repnz jl mov cmp sbb fimull mov divl sbb fisubl mov leaveq mov sub (bad) rex.WXB sbb fildll push (bad) js or test (bad) push rex.WRXB (bad) rex.B in imul push add insl xchg sbb and adc movsl enterq mov scas rex.WR push jbe std push movabs rcl rex.XB pop (bad) subb imul cmpsl pop cwtl push cmc xorb xchg sbb (bad) sbb lods test sbb jmpq mov and pop lret rex.XB xor rex.XB (bad) sbb mov mov or xchg lods adc (bad) roll mov mov leaveq jo mov and pop lahf jae (bad) push (bad) adc sbb (bad) push fstpt cmp int (bad) movabs (bad) lret pop movsb sub cmp pop repnz and and (bad) fadd mul (bad) mov lea fcompl push and or adc xchg jge fcomip (bad) sarl out (bad) (bad) cmp sti es pop (bad) rex.WR cmpsb incb (bad) push rex.WB or (bad) notl clc xchg push (bad) mov and retq sbb and or xor movabs xor nop (bad) rcrl (bad) popq outsb rex.RX push jrcxz mov (bad) cmp negb pop add mov fs roll jg js (bad) add add rex.RX sbb lods movsl mov mov outsl jg,pt fsts scas movabs and xchg fcmovnbe cmp jp (bad) mov or addr32 stc sbb jns rex.XB jb jmp out outsb imul cmp pop add mov (bad) (bad) jae retq enterq cmc (bad) lahf loop insl rex.XB pop sub stos repnz rex.R add sbb mov lahf mov adc fsub stos sbb cmp pop rex.RX retq (bad) xchg adc test sbb mov repnz (bad) sbb mov mov movabs jmp (bad) mov (bad) rex.WRX out (bad) pushfq cmp repnz mov pop push pushfq es adc pushfq or or rex rex.RB imul or lods sti jle rex.RB test lods mov retq mov sbbl jle int xlat xchg (bad) leaveq (bad) mov movslq sahf in sbb and xor scas pop cltd adc add (bad) ss sub mov fsubrl pop outsb data16 xor pop jge insb in mov xchg es fdivr mov xchg insb xchg hlt cmp (bad) (bad) rolb jo xor cmp xor xchg mov cltd callq pop mov add nop pushfq pop roll jns sar pop cmpsl xchg es jle std mov cs ss in pop cmp cmp (bad) xor scas in mov xlat mov int3 or nop sti jmp jno rex.X and cmp popfq xor jns in jnp mov movabs mov (bad) repz mov cmp ss push jmpq cmp cmp (bad) (bad) push sub loopne mov cmp in (bad) sub jne xor pop xchg xchg (bad) imul xorl loop mov ja fbld (bad) repz fsubrs cli mov rex.WB rex.X add mov ror rex.X and xchg sbb movabs cmp mov (bad) mov add adc push jo ds mov pop fnstcw sub (bad) cli (bad) mov (bad) xchg clc sub insl adc movabs jbe (bad) in mov fcomip push lret mov mov jp lahf rcll rex.WB rex.RB mov sbb jnp mov divb xchg jg xor adc hlt xchg mov cvttps2pi sbb mov (bad) lods mov mov or sbb mov mov sbb retq flds jrcxz sbb mov sub scas mov or mov cmp scas rex.WRXB out fimul and mov xchg rex.RX retq xor jne jo ljmp mov push xlat rex.WR ds mov test fsubl sbb jae jg xor (bad) xlat cmp mov lods sahf xchg (bad) mov mov lret sbb repz jne (bad) jmp mov mov movabs rex.WX xlat adc fldl push (bad) lret xor xchg retq mov (bad) pushfq movabs mov rorl in jle imul mov rex.WRX iret fwait jo (bad) sbb sbb iret fcompl push cmp and xchg sbb rex.XB jle out and xor pop leaveq (bad) pop sub movslq and retq fsubs scas pushfq (bad) cmp cltd sbb (bad) mov sahf mov mov and cld test pop jae xchg rex.R test cmp or repnz rex.WXB adc insb sbb movl xchg sbb adc xchg sbb retq and add (bad) adc int3 push outsl pop sub addr32 pop rex.W adc shl rsm rex.WRX mov xlat xchg add mov lcall rex.WX insb lods and pop fimul int3 fmulp rolb mov mov mov std rclb mov iret sbb fisttpll xchg sbb clc jge or (bad) sti stos xchg mov (bad) mov pushq (bad) (bad) hlt loope idivl sub test mov (bad) pop movsl stos mov imul pushfq shr mov add jns adc jge out adc (bad) mov mov ja rex.WX mov (bad) pushfq sub fs pop jb imul jo mov (bad) icebp callq insl jl lea push mov or rex.WRXB mov mov retq cmp (bad) mov enterq push cmpl cmpsb pop movabs adc jo (bad) (bad) int3 (bad) out sub add and insl rex.RX xchg jno pop (bad) imul lret cmpl adc icebp ss mov push rcrl jmpq adc rcr sub jae movabs fidivrl xchg mov sbb push adc jl out lock (bad) push jp repz negl lahf fs rex.WRX lock ds int3 lock mov pushq int3 (bad) xchg cmp add (bad) jns sbb mov ds xchg add fcoms es rex.XB outsb jg (bad) sub mov cmp int3 scas cld and rcr (bad) cmp adc (bad) ss (bad) or or cmpsb imul cmp mov rex.RX ss callq xor pop addr32 mov sti rex.WR sub in mov loop addb movsl mov out std pop rex.WR movabs hlt shlb sarb sti or xchg (bad) mov retq mov mov rex.R rex.WR sub jl lods (bad) add and test stos sbb fadd and sbb xor rex.W rex.W leaveq xchg lret cli pop (bad) xchg (bad) (bad) jb bnd mov mov sub mov movsb sbbl ss jrcxz,pn scas callq and sbb movslq pop rex.WRXB (bad) pop int lock cli lret pop (bad) push rex.WRB pop xor (bad) fist pop xchg mov lea pop fbld add incl (bad) jge rex.X rex.WRX adc pop cmpsb lret jge pop roll or mov fs stos pop (bad) rex.B lods lret lods adc movsb rorl mov jmpq test or test mov cmp xchg mov sbb mov fstpl xlat stc xchg (bad) ja or lea mov outsl rex.X mov icebp sub stc xor xor xchg sbb adc add pushfq rex.WRXB shrb (bad) sub mov popfq rcrb pop lock sbb pop cmp (bad) sub rex.WR ror negl rex.WRB rex.WRX (bad) pop adc mov lahf jge (bad) movabs xchg jmpq repz push stc mov adc (bad) add pushq fstpt out insb adc int3 lret int out lret xchg (bad) rex lods ror sbb sbb cmp or mov rex.WXB gs xchg cmp cmp lret out andl js jrcxz lods and rex.WR in icebp rolb mov jrcxz retq (bad) (bad) std jb outsl jg movabs push out (bad) fsts lods mov sahf push test (bad) (bad) loopne xchg out lock xchg popfq fistl cmpsl (bad) xchg sub stos jnp out js (bad) adc sub sahf repz sbb sbb andl mov retq jrcxz (bad) sbb (bad) mov push add (bad) nop popfq adc icebp xchg push (bad) pushfq rex.WR cmp sahf (bad) xchg mov push cltd push rex.W mov addr32 jmp (bad) pop ja retq hlt lahf rex.RXB mov rex.WXB lods out in xor movabs sti loop (bad) or bnd xchg rex.B jg imul test xchg or lea xchg adc fcmovbe adc mov or xchg lahf add mov mov jae callq lret addl sub jle movsb (bad) lods push imul clc (bad) movsb jnp and cs cmp (bad) test loopnel lret sub push mov in pop iret and push movabs jp mov mov xchg (bad) lea push test adc out adc (bad) lret sbbl mov pop add (bad) std cmp lea retq jae insb add mov push sti xlat pop lcall push and sub ss or lods out xchg mov popfq cmp cmp rex.RX out xchg callq (bad) (bad) cli and cmp lea addl sbb rex.X (bad) push cltd movntps or rex.WRB rex.W repnz int cmp (bad) sbb sbb cmp rex.WRX mov and xchg mov (bad) test xor pushq out adc adc sahf int3 mov in mov out lret lcall cmp out add es adc (bad) jb mov test retq mov nop jb cltd xlat fidivr repz xchg cmpsl (bad) cmpl xchg sbb imul jl pop sub push sahf movsl movabs mov jae stos mov push std or push sbb jmp (bad) outsb (bad) rex.B mov fmul popfq xchg mov jl jle popfq sti movabs imul xlat pop adc fwait in cmp jmpq push cmp out movabs or cmp es (bad) mov rex.RXB clc or pop adc rex.RX out cmp movsl jmp or rorb je xorl lods rex.WR lret jmp sbb movabs testl shr jns rex out nop lods fnstenv movabs pop out mov push xor pushfq movsl sbb rex.XB clc cmp (bad) lea imul rex.WRB mov stos jbe cmp (bad) rex.XB movabs xlat (bad) sbb ljmp ficompl insl (bad) xchg cmp cmp rex.RB and mov (bad) jbe mov cmp outsb leaveq (bad) subl and add es jle rex.RX callq (bad) cmpsb sub pop ja jmpq mov sbb push fwait xorb (bad) (bad) jmpq movsl jns add cmpsl fwait out adc jmp (bad) (bad) and xlat mov sbb pushq pop orl push jae mov lret pop pop jmp or stc xchg xchg or mov or sti push out lods sbb xchg movabs (bad) out in sbb leaveq clc pop cmp push xor imulb sub fdivrs rex.WRXB lock out pop (bad) or adcb adc pop callq fucom mov (bad) mov pop cld stos pop xchg mov (bad) movabs mov (bad) jrcxz mov (bad) cwtl cmp out cmp (bad) xor mov std pop cmp adc and mov (bad) (bad) or or jge ds or movabs bnd lahf mov add xor (bad) (bad) pop adc (bad) xor mov pop sub test movabs lods fistpl adc sbb pop cmpsl stos rex.WRX push xorl pop add test ss movabs mov or test (bad) adc rex.R (bad) lods sub loop xor pop (bad) cmp cli pushfq xchg out (bad) mov ds mov rex.XB sahf sbb out cwtl rex.RX xchg movabs loopne stc push and pop cmp or in jl mov mov (bad) jb imul sbb sbb jl xor stos sbb movabs sbb pop mov movsb lods rolb popfq outsb (bad) cld push adc sub in retq mov jp cmp mov add xchg mov or ds fldl2t idivb lret lods callq mov mov jo clc sbb (bad) xor or mov mov (bad) mov (bad) xchg jnp es out xor ja,pt sahf sub sbb (bad) out nop push add (bad) (bad) mov jno and test (bad) fucomp mov int3 xchg pushq (bad) cs out mov add (bad) movsl movsl rex.RX mov (bad) mov test and movabs cmpsl cmp mov test rex.RXB lods pushq mov mov xchg pushfq movsl test mov movabs mov rex.X cmpsb (bad) rex.X repnz js mov sbb mov mov retq (bad) mov adc cltd adc xchg mov out movabs loopne push stc fcmovbe jnp xchg (bad) add sbb (bad) xchg cmpsb (bad) mov mov add gs pop sub or adc sbb mov mov lahf mov adc jge xor mov jmp (bad) mov movabs cmpsl push (bad) (bad) cmp pop mov (bad) retq movabs mov xor mov rex.W pop jge mov cli lods or hlt adc (bad) testl xchg jo or rex.WRB pushfq kandb sti pop (bad) mov movabs mov int fmull pop xchg cmp xchg rex.WXB mov (bad) and adc push (bad) mov out in (bad) (bad) adc sub mov (bad) pop jo xchg jno mov mov (bad) jl mov (bad) sbb test mov movabs adc fsubrs test pop rex.XB add xchg mov rex.WR std add jp repnz or cmp mov jl orq pushq xor js (bad) (bad) xor add sbb and iret jrcxz test rex.WR (bad) addr32 (bad) rex.WX xchg (bad) rex.WB imulb movslq lea repz cmc out nop (bad) add sbb in push xchg rex.RB ds lret jmp mov jge fndisi(8087 (bad) (bad) test rex.WRX mov pop xchg clc and mov add rex.W push jl cmp cmp rex pushfq data16 jo rex.WXB out (bad) movabs or cvttps2pi fnsave test (bad) ss fstpt push jno and xchg and (bad) adc push pushfq jno out clc cmp ficom sub pop (bad) cmpsl and (bad) rex.WX in jmpq (bad) (bad) jno loop sub ja push rex.WRXB mov cmp imul sub mov (bad) popfq out mov mov out fsubl cwtl fnsave push jrcxz jle jo pop lods adcq cmpsl cmp xchg out rex.WB rex.WRXB or rex.WXB mov xor fwait xchg xor adc in jno rex.RXB rex.RXB callq (bad) fcomip popfq out rex.WB cmp mov out or xchg movabs (bad) add and addb mov ja mov retq fs outsb xchg mov addl rex.W rex.WXB jb pushfq pop (bad) out out pop xchg mov pop cmp (bad) subb in jp cltd sahf or cmpsl out xor stc repz or and fildll out or retq or mov add sub (bad) cld add sbb stc add ds clc (bad) je popfq sbb rex.WXB insl movabs adc int3 vpshufhw pop fnstenv shrl xchg iret lock sbb push lahf nop cs (bad) movsl and loopne lods push lock out enterq add lret pop xchg loopne mov fisttpl (bad) cmp cmc sarb mov out movsb add out fucomp in rclb fwait lea lods scas xchg ds (bad) xchg lea (bad) movabs fisttp sbb cli popfq jrcxz ja in (bad) mov push cltd (bad) popfq mov xchg stos rex.WB out push subl notl mov (bad) enterq xor and fnstcw mov jns mov lods (bad) jp adc nop xor or incl (bad) movsl xchg gs fildl mov (bad) rex.WXB fdivr add cld (bad) xor (bad) mov callq xchg adc mov (bad) ss lret sbb retq mov (bad) (bad) xchg xchg (bad) sar push fnsave retq add (bad) pop xchg mov mov popfq scas jne (bad) repz xchg jmp jle loopne fxch (bad) scas (bad) jnp xchg pushfq xor push xchg loopne hlt (bad) test movsl and ficoml std fs xor lea xchg rex.XB pop in sahf (bad) push rex.RX insl xor xchg mov jns or (bad) push jb xchg jl cmp add (bad) adc data16 ja cmpsb xchg rex.WRB rex.X (bad) cli mov rex.RX popfq lea movsl stos pop cmpsl movabs push cltd cmp or in in (bad) callq es rex.XB xlat jmpq xor cltd (bad) sbb (bad) imul popq cli (bad) ja pop push adc (bad) addr32 xchg outsb cmp pop jno sbbl sahf jge adc or or movabs xor insb jrcxz cltd outsl or popfq mov and out (bad) jo rex.WRB pop rex.RXB movabs (bad) (bad) mov xchg lods movslq (bad) jge pushfq xchg retq lock movsl adc xor cmp jrcxz adc loop test lret imull rex.WXB callq fstps adc mov int3 sbb fidivrl push retq cld (bad) (bad) (bad) xchg mov (bad) adc cld enterq adc gs orb imul sahf or fsts xchg iret loop int3 mov lods mov mov js repnz sbb cmp movabs pushfq sub fcoml ds loop adc retq or xor mov movsl and (bad) mov mov (bad) movsl rex.R add jle divb insl cmp add xor mov movabs roll loope (bad) fist sbb fstpl retq shr loope repz sbb fistp jmp jnp cmp cmp fstps insb or cmp add out pop test xchg (bad) in rorl ds or cmp and lret es mov mov jrcxz rex.X movabs pushq out lahf jmp (bad) negb cltd mov pop je adc add fucom or jle (bad) retq (bad) jno (bad) test adc test (bad) fsubrs mov (bad) std cmp sub cltd jl test and sbb jns cmpb (bad) rex.WB rex.RX ss mov pop cmp loop (bad) add mov icebp lods (bad) (bad) sbb ja js (bad) rex.WRB lea (bad) out sub sub (bad) fcomps fnstcw (bad) (bad) sbb (bad) mov pushq std xchg sbb cmc (bad) movntq add or rex.W pushfq jp or (bad) xchg (bad) pushq rex.RXB push lea push movabs scas cmp mov scas addr32 rcll flds es cmp out sub rex.WR scas imul (bad) pop and xor test lcall (bad) push xchg mov add cwtl xchg out xor ds cmpsl in sbb and fcoml mov rex.R xchg add cmp (bad) (bad) lret or add movabs and (bad) rex.WRB loopne negl lret movabs cld and fsubrl rex.WRB mov repz jp,pt sub callq mov xchg adc (bad) jmp sbb add sub sub adc insl mov nop test out fldl test lods mov lea cmp pop mov mov sub cmp mov rex.WRB stc loop mov jb cwtl sub movabs mov mov xor fistl nop cmpsl test pop rex.W out mov cmp xchg sbb loope push sub cmpsl jmp (bad) push push pop cmovs rex.R test (bad) mov sbb (bad) xchg fldcw ss sbb pop sbb and movabs (bad) (bad) pop mov and gs pushfq xor loope js out cmp bnd and jmp jnp (bad) mov movsl push mov lret out and push std loopne xor (bad) mov repz jnp and rex.WX ja scas (bad) pop stc negb add loope jnp push and jae mov retq jle sbb jg ficomp xchg mov and decl mov out fistp imul ror (bad) popfq add mov (bad) stos ficom fs es jns pop stos jo and orl (bad) rex mov xorl sub or in movabs xchg (bad) (bad) movabs pop push cmp pop sub (bad) mov mov shll jle (bad) data16 (bad) test negl mov (bad) cwtl fsubl mov shll mov cmc (bad) cmp shll movabs add sbb int3 notl adcb int3 mov int3 jmp leaveq fstpl fldt xor xchg rex.WX test xorl out int push mov cmpsb jae adc jmpq rex.WRX rex.WRX loopne imul mov mov mov (bad) (bad) (bad) jns xchg xchg or pushfq (bad) cltd lret out mov cmp jle xchg (bad) stc mov out cmpsl (bad) leaveq cltd fucomp sbbl xchg callq movabs jbe or sbb xor out outsb rex.X out jge rex.WR lret add xchg jle imul leaveq rex.RXB rex rex.WX sbb cmp imul adc (bad) adcl adc leaveq mov sub not or cmp cld stos pushfq add movabs js loope imul imul sub sbb out cmp mov hlt ds (bad) and jp (bad) test sarl rex.RB rex.WRB adc clc sbb sbb frstor xchg shr add xor loopne or out pop mov (bad) imul subl sbb push xor (bad) rex.RX xchg sbb fldenv movabs xchg (bad) std imul adc fist sub mov (bad) jmp rex.WB out (bad) jne movq xchg in rex.WX rex.RX jge jns fdivl adc (bad) cmp adc outsl lret data16 lahf mov fldl (bad) cltd out enterq bnd cs hlt (bad) imul ja cmp rcr (bad) rex.X jge out test rol pushfq mov lea rex.WR sub movabs pop xor jl repz int3 mov (bad) jae add xchg mov mov sbb in gs cmp out or std (bad) (bad) pop xchg loopne (bad) xchg cmp loop or out xor repz pop hlt movsl adc sti jle seto clc imul (bad) insb xchg adc fcmovnu test mov (bad) repz jl (bad) xchg cmp js and test xor mov es xchg pop cmp xchg mov repz sub rex movslq xor rex.WXB rex.WXB mov add rex.WR pop mov (bad) pop cwtl movsb (bad) imul sar loopne in fldl jp imul xor mov xor sbb fldl mov jg sbbl xchg fcmovnbe cwtl rex.WX xchg movabs sbb out adc (bad) mov cltd (bad) int adcb xchg mov jg out repnz (bad) lret mov stos cmp jrcxz cli or cltd pop or (bad) mov add scas mov cmp push cmp rex.RXB cmp pop popfq cmp (bad) (bad) (bad) add or pop jrcxz cmp cmp sbb insw pop pushq (bad) gs cli rex.WRX pushq std push popfq (bad) add cmp sarl je int3 mov and push xchg lods scas xor sbb xchg loope adc xchg fs adc movabs xchg push sahf cltd nop retq jrcxz xchg and test idivb add jp mov mov xchg xchg fdivrl mov nop out (bad) xchg jrcxz jle stos sbb mov xchg test xorl jl sbb mov mov mov or jno fwait fwait mov lret jo adc (bad) mov (bad) retq cltd fstps xor xlat sbb xorl cs xchg fistpl add or or xor lahf movabs (bad) xor cmp xchg data16 loope out add sbb mov out movabs fistp jle (bad) es cmp mov sub push jb repz scas xor pushfq push rex.WRB xchg mov sbb mov push xchg (bad) mov and (bad) jl add sbbl cmp test in xchg stos fiadd sbb cmp out xlat add jl cltd je negl movabs sahf mov fnstcw jmp cs mov cmp mov or and callq cmp sti sub adc pop repz xchg xlat iret and je (bad) xor xor (bad) mov lret xchg fcomi rex.WRX (bad) movabs add retq add (bad) (bad) test or (bad) outsb movsl hlt mov (bad) (bad) add es (bad) scas (bad) clc xchg (bad) (bad) pop movsl scas repnz cmpsb mov (bad) mov xchg pop movslq pushfq movsl (bad) cwtl sbb stos ss sbb mov jmpq (bad) retq lahf or fiaddl (bad) mov and mov mov xchg sub add cmp xchg jp (bad) stc mov mov and mov lea jnp scas xor lahf xchg out mov xor lods xchg (bad) xor movabs (bad) movabs (bad) xchg cmp (bad) sbb imul in add add (bad) rex.XB gs rex.X cld lods rex.R outsl (bad) cmp std push iret mov cmp pop loopne jp xchg lock popfq sbb cmpsb movslq sub sahf sbb (bad) fwait in pop and imul pop shrl push out pop movsb sbb movsl push fistpl add pop (bad) rcrb sti movabs not (bad) lods adc xchg rex.X popq imul jmpq movabs shr callq jbe xor pushfq movsb xor sbb movsb add sahf movsb or (bad) movsb (bad) mov (bad) (bad) mov negl mov je iret cmp andl stc rex.WRX repz (bad) and mov cmpsl rex.WRX fwait mov loope xchg cmp cltd movslq mov out cmp mov xchg movabs jl or rex sbb jmpq (bad) insb (bad) pushq addl (bad) mov pop mov adc es hlt je test (bad) pop jae rex.WRX (bad) cld cwtl rex.B fsub movabs mov add shrl pop xchg add or lahf js jg,pt cmp or ja cltd fstps movabs loop fld1 pushfq (bad) add popfq or (bad) in retq (bad) scas lahf pop test out sub lahf mov pop pushq scas mov outsl sbb pop movabs flds sbb xchg cltd sub jmp rex.RXB insl sub cmp stos xor pop hlt adc pop lahf mov (bad) data16 mov out in jns repnz mov icebp (bad) out mov sbb and xchg rex.WRX mov pop xchg and mov lods ss mov add cmpsl cmp jmp imul xchg pop (bad) div and rex.RB or shl movabs imul (bad) push rolb nop movabs xchg jbe repz or jle sbb mov stc mov pushq jae cmp mov xchg or or movsl sbb xchg mov push jmpq pop adc lahf insb je,pn scas or stos vpcmpeqd stc mov xchg jb mov fnop pop lea movabs lods xchg add rolb test (bad) (bad) cmpsb fsubs sbb movabs stos in mov add jnp or adc lods sbb ds (bad) (bad) sahf jp popfq rex.X xchg rex.WX ror fimull test test cmp or test mov lret xor in out jno std movabs mov (bad) mov xlat sbb sti jle sub xchg sbb out out mov adc sub mov test sti cltd jle fmull mov (bad) jl push mov push jae stos rex.WRX movabs js stos (bad) jrcxz xor cmp outsb retq sub movabs int rolb mov rex.RXB iret cmp cmp cmp jmpq sbb cmpsl fdiv lahf sti cmp or pop (bad) cmpsl sbb callq scas cmp movslq xchg (bad) pop stc cmp adc or stos xchg sar mov mull nop pop xor sub lret xchg add notb cmpsl test sub xchg xchg mov (bad) add (bad) pushfq rclb repnz lods popfq mov or sbb cmp (bad) fnstenv callq and mov fs rex.B mov (bad) mov sbb fdivs sub mov es mov divl add mov ss add loopne movabs cli (bad) shll lret mov (bad) mov or movabs pushq mov js lahf (bad) (bad) rex.WXB or xchg (bad) (bad) ds pop xchg xchg push push mov (bad) push test test xor mov nop ficoml xchg rex.W xor mov cmc sub retq cmp lods sbb mov (bad) (bad) rex.B add and cli (bad) (bad) movsl mov jle jb sub stos (bad) ljmp push or mov cltd (bad) mov (bad) jnp test jns (bad) mov mov mov cmpsl subb or sub (bad) fcompl ficom adc hlt rex.XB mov mov pop xchg (bad) cmp add scas xor push loope roll and cwtl mull (bad) imul jb mov mov add rex.WXB frstor fsubl orb cwtl or in jbe (bad) cbtw cmp sbb (bad) nop rex.RXB mov leaveq rex.X rex.RB add enterq movabs add int (bad) test ss mov (bad) popfq je mov fnsave fs movabs leaveq cmpsb push or rex.RB and movabs xchg int3 test jnp,pn dec and or vdivss mov lea add push lock xchg movslq rolb lods pop mov xlat xchg insl cmp pop cmp and mov (bad) sbb (bad) (bad) or xchg sub adc push mov data16 jle cmp add movsl xchg xlat mov rex.R mov ja out scas insl pop pushq pop lea (bad) stc leaveq fadds retq mov vprotd mov adc and movsl (bad) mov (bad) gs outsl rex.WRX cld jbe xor (bad) xlat (bad) mov (bad) pushq sub adc sbb adc pushq fildl hlt (bad) cmp mov pop (bad) mov xchg sub cli icebp jrcxz xor cmpsl fwait jne (bad) lcall mov xchg xor mov mov xor out adc sbb mov stos stc push sbb pop outsb movslq (bad) mov lret data16 mov in out cmp (bad) mov sahf adc divb sub (bad) int3 movabs (bad) nop cmp and xchg loope clc jne lods imul int3 or adc xor flds jle and jg lret (bad) mov jae xor xor and (bad) and retq xchg lret (bad) cmp xchg sahf mov xlat movabs shrb and (bad) movslq mov rex.WRX std rex.WRB pushfq sbb pop repz cmpsb push mov add stos iret fcmovu fucomi (bad) cld cmpl mull (bad) loop and lock rex.X fs pop (bad) in sti add pop std mov (bad) (bad) movsb jb or jl jmp sbb pushq lods sub sbb sbb (bad) rex.WRB (bad) jmpq adc add add add adc or imul xchg pop xchg xor mov std mov sbb popfq (bad) cmp and push cwtl lods xchg ds repnz (bad) lcall callq pop popfq xor mov mov jnp cmp (bad) or fistl or (bad) icebp mov rex.RXB addr32 cmp sbb xchg pop cmp (bad) mov lret (bad) imul mov mov xchg callq xchg mov lret (bad) cld xor mov mov add adcl (bad) mull (bad) jp jno jl retq movslq (bad) ja jbe add lret icebp ja mov pop scas adc add (bad) cli movabs stc sbb stos add fs std mov lods jne pop fnstsw or pop push (bad) lea leaveq cmpsl test rex.WR sub loop popfq (bad) jrcxz,pn pushq and (bad) sbb and loopne push stc iret jg pushfq sahf add (bad) pop sbb cwtl insl enterq imul sub sbb adcl (bad) lock (bad) (bad) hlt add repz es movabs int iret sbb cltd adc mov imul je ror pushq (bad) xchg add mov (bad) mov cmp idivl adc adc adc loop xchg mov pop (bad) xchg pushfq test adc rex.X rex.RB rex.RX scas (bad) vmovsd (bad) (bad) leaveq (bad) (bad) (bad) and rcrl insb mov cwtl xor scas cmp mov sbb (bad) (bad) lods lods xchg idivb test sti mov (bad) js xchg data16 pop xchg xlat mov push xchg movsb int (bad) pop (bad) adc retq rex.WR mov add lcall (bad) xchg cmp ss gs mov pushfq cmpsq cmp adc icebp movabs xlat (bad) mov (bad) xchg in adc add fldl pushq fstpt in mov (bad) mov cltd sar push sahf cs (bad) mov (bad) leaveq xor xchg xor pop std (bad) mov sbb cmpsl out and (bad) jns xchg gs fbld cltd mov or out sti xchg movsl popfq ds xchg cwtl lahf cmp setae (bad) sti fcmove test retq ss sub rex.WXB cmp loope pop leaveq xor mov movabs xchg int3 flds pop lea and sbb fcoml xor mov imul retq sti fcoml movslq add fwait jae sbb add jmpq cmpsb rex.WR movsb icebp or push and (bad) cmp (bad) retq mov stc pcmpeqd fwait cmpsl pop outsl adc mov pop jg and mov mov xor jg mov push push (bad) scas (bad) loopne (bad) stos shlb cld push and rex.WRX push rex.R mov xchg scas lret mov jo sbb or test and sbb rex.XB xchg cli div jne cmc adc cmp cs xchg cs and stos jl (bad) mov adc (bad) movabs insb xchg pop pop (bad) xlat callq and adc roll pop xchg mov cmp rclb movabs or mov fiaddl xchg xchg loope ds mov mov (bad) (bad) movabs lahf test xchg sub xchg pushfq adc repz mov or cmp (bad) add cwtl pop mov mov cmpl rex.X mov fnstenv xchg push orb (bad) (bad) fldt loop std xor lret cltd jp push ror (bad) mov mov (bad) adc or cmp ror xchg push xchg mov mov push xchg (bad) and mov outsb sbb and (bad) add xchg xor (bad) int3 (bad) or (bad) mov mov xchg pop fistpll cltd xchg rcr mov (bad) push lods sbb push fwait (bad) mov sbb cmpsl bswap (bad) clc int (bad) and ds and mov add jne xchg sub (bad) fsubs or fcoms rex.W rex.WXB rex.WXB rex.WR jnp cmp stos pushq lea cmp (bad) and mov xchg fchs add mov movsl mov sbb fstpt cltd xchg rex.WR movabs (bad) shll mov adc sbb xchg pushfq pushq out mov rex.WB or fsubl sbb retq sahf (bad) and (bad) sub jle sub callq jno movsb xchg rex.RX fildll mov sub cmpsl lods (bad) xchg movabs and (bad) (bad) callq rex.W pushq adcl cmp cmp test stos mov loopne (bad) xchg or movsl or pop adc xchg mov pop or mov (bad) cmp faddl popfq pop loop push xchg pop cmpb mov xchg (bad) lods adc cmp mov fsubl cmp mov (bad) mov sarb push sbb cltd andl cwtl push cmp cmp cmc cmpsb (bad) cmp (bad) (bad) (bad) repz cmp mov (bad) stc mov pushq mov (bad) iret or sbb pop jb adc adc pushfq add and out xor jnp jg jl (bad) hlt sbb out rex.RB mov loope lahf rex.X cmc adc cwtl pushfq sbb adc jnp sahf xchg pushq xchg mov xchg sbb and adc (bad) push (bad) xchg int3 cltd cld push add test fst xor pushq or mov rex.B clc jo xchg or jb mov sbb or add xorl xchg out mov adc mov or mov xchg and or pushfq idivb push pop or cmp mov mov fistpll xchg mov xchg movsb mov popfq enterq mov fidivl movabs mov (bad) mov nop (bad) (bad) jns adc cld movabs adc jns add movabs adc and mov (bad) movslq int push cs mov callq rex.WRX sahf out push movabs out jae movb (bad) mov mov (bad) rex.R leaveq rex.WRX rcrl int mov (bad) hlt push sbb (bad) rex.WB cli or (bad) jns sbb or (bad) (bad) xor test ror negb imul je mov je movb mov out shrl (bad) jge push pop jno mov sub (bad) (bad) sub pushq sbb and mov and mov iret mov sbb fnsave push and (bad) rex.W mov xlat add fstpt mov movsl or (bad) or sti sar push mov or scas jns lahf cwtd add ds xchg loope,pn or sahf adc adcl cmp std mov mov xchg mov sbb add jl cltd pop (bad) jnp mov cmpsl push int xchg (bad) cs push sbb and (bad) cli fwait xchg jge sub or in pop or jl mov pop adcl adc (bad) cmc (bad) (bad) btc (bad) stos out xchg sub cwtl pop imul hlt and adc stos int3 xlat cltd push imul cmpsb cmp (bad) scas mov rex.WR in sbb test hlt xchg callq and mov sbb movabs subl sub xor (bad) add xchg repnz callq rex.W jge,pt jp jb enterq add jrcxz ja and (bad) roll or jle pop push jge and fdivs sub roll adc movsl sar rex.WRB mov xor cmpsb xorb jrcxz lock cli retq jl int mov rex.WRX pop js es (bad) imul mulb rorl orl (bad) jo push or pop loope pushfq imul xor add jo cmpsl pushq xchg out icebp sbb cmp xchg and leaveq mov (bad) (bad) sbb pushfq pop popfq push decb mov sub xchg mov push data16 sbb cmp mov (bad) (bad) jge test cwtl add mov jne pop xor hlt loop repz pop outsl pushq jrcxz cltd (bad) mov addr32 jmp xchg jno adc mov in xor in (bad) or lahf and rex.RXB out xchg push and js jl callq mov add js (bad) (bad) repz (bad) out fbstp jbe movabs out lahf sbb stos icebp cwtl movabs scas cs (bad) (bad) (bad) fstl add or lea rex.RX stos imulb imul add pop (bad) xchg sbb xor xchg idiv (bad) jnp and sbb (bad) shrl (bad) cmp cld (bad) or adc clc mov cwtl out loop sub cmp (bad) sarl out push jmp je fisttp jg pop mov fisubl js mov xchg callq and rex.XB jo jno sbb fadds pop sbb lock mov adc adc xchg xchg (bad) or add fdivrp (bad) mov sbb sub or and pushq cmp popfq add xchg (bad) sbb sbb sub (bad) rex.RXB cmp push mov add or loop xor (bad) rclb mov sub rex.RX repnz addr32 je cmp cmp loop mov and pop mov out sti (bad) jo movsl lods adc xchg pushq mov pop ds out popfq rcr (bad) es cmp sbb sub (bad) std add cmp cmpsl pop lahf loopne xchg adc retq pop out outsb repz addr32 (bad) callq jne addr32 mov hlt and cltd idivl (bad) or xor sbb std cmc add jo nop shrb test jp mov movabs xor mov mov (bad) mov sbb xchg push cmp fdivp rex.W and (bad) adc insl fldl lock cwtl mov test jg mov popfq adc (bad) pop fsubs mov push mov test pop lea fcmovnbe movabs lret mov jne std cltd loopne sbb lods mov xor mov test jne imul cld pop push scas (bad) mov add rex.W test (bad) xchg push xlat xchg add mov fsts cmpl rcr movabs mov xchg pop out test add fsubrl pop out cmc and mov xchg adc push mov lods and or xor add es sbb mov ds lea fist nop mov in add jg sbb pop add out ds subl mov mov mov lahf scas lahf xor rex.XB lods sar test movsl movabs cmpsb jrcxz fs pop pushq mov xchg out cld gs mov hlt or (bad) rolb xor cwtl and outsb sbb adc mov pop jmp lock mov cwtl jmpq js cmp rorl cmp jnp adc mov or cld movsl mov xor (bad) in (bad) sti pop add xchg lea (bad) in (bad) negb jns imul pop xchg pop pop icebp rex.WR icebp cs jne jae (bad) mov rex.RB mov rex.WR fsubl xchg rex.WXB stos cmp ds loope add lahf pop xor rcrl fdivs mov xchg ds out insw jo cmp or adc jae movl (bad) lret addr32 sbb test xchg cmpsl movabs js jo loope mov xchg cmp pop or in sbb repz add ficoml lea jmp js and and mov sbb pushq mov mov pop xchg xchg pop mov (bad) pop hlt sbb clc lea rex.WX stos imul scas xlat cltd lea repnz jl jne mov pop mov (bad) push (bad) out movsl pop mov cmp mov xor (bad) adc mov pop xchg xchg cmpsb cmp data16 iret cmpb jge mov (bad) mov cmp sar shll sbbl (bad) (bad) xlat mov xlat fstl repz loop cmpsl mov and pop enterq xor mov mov callq and adc cmp movsb in leaveq cmp or cwtl fistpl jne adc mov or pop movsl adc xchg sti nop jnp fistpll insl pushq popfq sub (bad) lods adc mov rex.XB mov (bad) (bad) lahf push movabs xchg loopne cmpsb or (bad) sbb xchg xchg addl loopne,pn (bad) xchg hlt orl cmp loop mov jge stc fldenv pushq stos scas xchg lret or in adc xlat jns mov (bad) movabs (bad) sti (bad) imul xchg jl je (bad) jae cli mov cld cmp clc or callq cltd repnz xlat pop push rcll (bad) retq psrlw rcrl sbb pushq (bad) leaveq rex.XB fxch and (bad) xchg xor (bad) test popfq adc shlb (bad) and or sahf mov out pop cmpsb add imul xchg pop push jae mov xchg or adcl jrcxz xor jmp (bad) fstpt mov out sbb adc insl sbb xchg mov (bad) rex.XB (bad) scas xor add pop xor loope xor int3 (bad) (bad) or fcompl xor add rex.WRXB loopne (bad) adc cmp sub jo jle mov mov (bad) pop loopne cmpsb jg popfq (bad) mov rex.R bnd sbb (bad) rex.WR xchg (bad) rex.WR push (bad) sbb xlat stos cld rcrl fnstcw scas xchg xchg lods rex.RX cltd mov (bad) fstpt sbb mov xchg push retq cmp sub je in xchg and fdivrs xchg lret mov rol popfq rex.W jmpq rolb jrcxz or sub jmpq jle (bad) pop (bad) xchg ss lock adc and pop sbb xchg fstl cld sbb sbb es movsl js (bad) sbb push push lcall (bad) xchg (bad) sbb xor push scas mov lcall (bad) cmpsb fnstenv ds (bad) pop cmp fidivl (bad) xchg (bad) mov pop xchg jl (bad) jge sbb pop (bad) movsl lea (bad) cmp sub cmp xchg sub jno popfq rex.WR or rex (bad) (bad) xchg xchg cmpl jge mov add scas gs fcmovne push rex.RB fnstcw stos scas cmp mov pushfq ja iret pop (bad) movslq add pop sub and or mov or (bad) retq and pop (bad) cmp xchg rex.WX (bad) add adc mov adc movabs mov and in jge cwtl out fnstsw js movabs cmc add adcl addr32 out fldt stc adc sbb pop cmp add popfq jp or xorl sbb xchg mov or hlt rex.W movabs stos rclb xchg mov adc adc (bad) rex mov and mov jo (bad) jle loop mov cmp pop ror cmp movabs jrcxz add xchg mov divl mov movabs test xchg xlat (bad) scas (bad) pop mov shrb jge (bad) (bad) (bad) hlt xchg (bad) and add (bad) cmp in xor or or jo adc jne gs pop out pop loope (bad) xchg xchg movabs loop (bad) adc rcrl hlt hlt lahf orl test popfq xchg rex.WXB mov xchg rorl cmc or (bad) push mov pushq loope pushw pop test jrcxz add sbb or (bad) movabs test pop xchg pop jp movsb (bad) sub push lods mov sbb (bad) test retq clc lahf out xchg xchg fisubl (bad) adc (bad) mov fstl sbb (bad) add sub cmp movabs int and xor jmp imul movabs adc fimul xchg movslq pop rex.WRB js pushfq mov pop pushfq mov pop (bad) mov stos movabs cmpsb retq out stos rex.X fsts jns repnz imul pop mov shll (bad) xchg fsts (bad) rex.R and pop int or mov out loopne pop pop iret mov adc rex.B stos sar jns je mov cmpsl or test subb xchg (bad) icebp add fiadd and rex.X xor cmp fstl (bad) pushfq sahf cmpsb sar cwtl rex.WRXB jle jmp out mov xor mov xchg or mov ror out xchg loop movabs add scas (bad) (bad) cltd xor jmpq xchg fwait jge pushfq pop mov (bad) (bad) fistl jrcxz (bad) cmp repz stos mov sub pushfq ds (bad) push mov iret int adc out sbb rex.WRB scas leaveq mov ja js add repz popfq and movsl sub in sbb cmp imul jne xchg push in adc xchg xchg pop mov adc and adc xchg pop pop sbb lods pop sbb adc (bad) out xor lods je pop es add fbstp mov movsb iret rex.RX ss jge pop out pushq (bad) sbb xlat rex.WX stos xor add (bad) int3 test sbb es jrcxz xchg mov mov in rex.RXB int cld xchg rorb fstpl ds jrcxz jge add movabs xor rex.XB jne add sbb push mov xchg sbb popfq cwtl cli xchg mov cmp (bad) (bad) es xchg ss mov rex.RXB jrcxz mov fdivl je sbb (bad) je xor mov adc test mov sbb mov scas (bad) iret mov (bad) xchg or retq ds push repnz xchg sub vmovapd fwait pop negl (bad) movabs rex.B cs lahf pop pushq xor sbb jle and pop mov je push in js mov imul out sbb gs adc outsl pushfw sets and nop leaveq in pop sub movabs imul (bad) sbb fdivl jae sbb adc adc fidiv sbb cmp stc sbb loopne int mov pop cmp (bad) xchg int push xor sbb iret mov push (bad) pop scas cmp and adc cmpsl sbb xchg jo xlat mov mov jne retq cltd sbb (bad) (bad) es addr32 out (bad) fwait loopne and pop mov jge shll mov jmp movsl jo jo,pt (bad) ds rex.WRXB jmp pop (bad) sbb movslq pushfq pop sub xchg mov cmp in imul mov push or or test push mov stc int3 (bad) xor je scas or movabs xor jrcxz movabs xor movabs (bad) in ror xchg lahf mov xor (bad) adc (bad) pop cmp and test scas adc fstl jmpq xor test int3 (bad) rex.WB xchg (bad) in (bad) enterq pushq mov (bad) popfq fmull xchg popfq jns mov adc lret pushq and mov xchg lock ds rex.R rex.RXB ja mov idivl mov mov mov rcr stc sbb insb int iret hlt pop adc movsb hlt sahf cld in fcoml push movabs in js (bad) rex.XB rex.WR jne mov and out sahf std pop xchg push lcall sub and lods retq and add cwtl loope (bad) nop pop pop and rex out jmpq sbb je xchg imul jp sbb sarl out neg pushq je adc xlat xlat insb (bad) push cmp (bad) mov xchg rex.WB sbb (bad) xchg (bad) (bad) retq jrcxz pushq popfq (bad) mov cmp std scas (bad) negl jrcxz leaveq lret or adc or sub pushq push rex.WR rex.W movabs int imul xchg (bad) xor rex.WRB sbb rex.RX outsl repnz retq jo or cmp lods cmp xchg loopne adc xchg add mov sbb hlt movabs scas pop add xchg rex.WXB movslq mov fsub rex.RB pop jle mov loop por xchg sbb jl (bad) sub jge fwait add jne jge js push faddl sub pop ds (bad) pop jae mov in xchg cwtl in mov mov mov jae loope pushq iret int loope (bad) fwait sbb lea mov pop pushfq fmul or int xor fildll rex.WXB lret (bad) xor sti (bad) pop fisttpll cmp (bad) adc fnstenv sahf or rex.WRXB cmp push loope test pushfq fnstcw test insl cmp xchg movsl (bad) mov insl out and rex.XB in xchg lret (bad) jbe (bad) rex.WXB adc movsl fimull movslq mov lods adc cmc or push xchg and jl int cwtl notl cmpsl add jb shll test es push mov movsl mov (bad) add scas (bad) movabs (bad) xchg sti mov test cmpsb or retq lock rex.XB xchg enterq repnz add jmpq jp add pop idiv xchg leaveq pop push stc cmpsb in sub std pushq push sbb sbb fdivs xchg adc mov sbbl mov xchg sbb xor or retq pushfq repz mov out xchg pop mov ss jrcxz mov xchg fstpt (bad) repnz sarb je fwait add sbb sti xlat cmp adc hlt pop xor rex.WRX mov popfq sub mov (bad) xchg cmp (bad) (bad) sbb cmp std adc or xchg negl movabs push (bad) mov adcl in jge loope je lret (bad) repz hlt mov or jmp mov xchg push test cmpsb sbb icebp (bad) adcl mov lret cmp mov push mov mov xchg or (bad) jo lea cwtl lea leaveq (bad) (bad) mov popfq rex.WRXB (bad) mov addr32 repz cmp not rex.RXB (bad) iret (bad) pmulhuw movabs sub sbb out mov in push and popw out mov (bad) sahf popfq pop xchg adc lret jns (bad) xor mov (bad) cmp sbb (bad) cli out (bad) jl test sti mov in pop sub movslq rex.XB (bad) imul (bad) inc fisttpl movslq jmpq (bad) adc xchg mov movsl (bad) pushfq (bad) pop sub adc sbb mov ds ss mov nop sbb (bad) test sbb xorl mov leaveq cli mov retq jmp (bad) jmpq jle sbb pushfq add iret rex.RX rex.RXB mov mov and adc pop shrl xlat movabs mov movabs test (bad) mov movabs ds addr32 sbb pushfq rex.WRXB jmp ja rex.WRXB repnz retq mov jbe or add (bad) inc gs and cltd mov pop (bad) sbb int rex.X mov sbb push pop sub lret addr32 cmp or fldl (bad) and xchg retq mov (bad) movabs int adc push (bad) out or mov (bad) repz (bad) iret cmp xor (bad) mov xchg xor (bad) (bad) xchg push jge push lahf xchg fist fsubs push or mov pushq in mov adc ss addr32 int sbb addr32 (bad) sub or adc adc mov adc pop jne cmp lret mov rex.RX jbe or fwait pop jno xchg jrcxz cmp sub xchg mov mull sbb out mov scas mov pop mov cld sbb sti sbb mov pushq and (bad) cmp mov pop or shll gs push (bad) cmp movsl (bad) cltd lahf ficomp xlat test fsubrl mov movabs xchg mov int3 or cmc jmpq add (bad) jnp mov (bad) (bad) adc sahf pushq xchg movabs add cmc stos and rex.XB ds rex.RX add insl xchg pushq loopne rex.RX jp sbb stc lea (bad) scas push ja test xchg scas rex.B imul movabs sti (bad) insl movabs xor fcoms scas fstpl out (bad) (bad) mov mov gs jmp iret jle cmp xor adc (bad) adc stc (bad) stos jmpq mov jno mov insl and (bad) in sbb (bad) mov mov fild rex.B xchg cmpsl pop fs (bad) (bad) (bad) push jbe and enterq xlat sub cmp add and xchg rex.WRX xchg mov push xchg stc push sub xor mov rex.WRXB rex.WR (bad) mov insl movabs (bad) in rex.WRXB not outsb mov jp mov mov xchg push push leaveq fild jrcxz and mov movabs sub cli retq push (bad) mov (bad) adc lea mov (bad) insb (bad) loopne and lret pushq xchg xlat xchg lahf mov jmpq push movabs mov mov xchg cltd sbb imul test divb imul xchg (bad) rcl pushfq shrb lret rex.RX mov ds push cli fcmovne (bad) (bad) lods xchg out cmp mov xor sbbl mov outsb cltd adc xchg lock addr32 cwtl pop jmpq mov fstl (bad) lea cmpsl mov movabs mov out push mov movslq jns push mov rex.R mov cld mov movslq (bad) mov rex.X jmpq jle mov shlb mov push mov (bad) (bad) xchg mov mov (bad) xchg push mov test mov vhsubpd in rex.WRX callq rex.WXB rex.WX push (bad) fisttp rex.WXB clc stc enterq jb repz sbb out (bad) cli pop mov xchg add nop sti push sbb movabs add push in mov rex.XB or lods sbb cmp (bad) mov xchg jmp adc (bad) out xchg adc lret nop lahf sbb jo scas jnp pop es (bad) mov mov jnp retq in jae pushq mov test xor popfq es and (bad) xchg and (bad) movabs pop cmpsl iret sbb xor (bad) (bad) pushq imul mov fistpll xor lock rex.RX fldt imul add (bad) sbb pop (bad) ja xor adc fnsave ds std (bad) retq enterq mov jno xor js callq loopne or add shll mov pushq sbb rcr retq jb out jae (bad) xchg rex.RXB lock or (bad) jno mov out or (bad) cmp xchg punpckldq mov lock lods rex.RXB jrcxz and fimull sub je (bad) mov (bad) xchg (bad) (bad) xchg (bad) repz out jne add cmp jno xchg xlat test shl cltd adc add cmp imul jno jne rex.R movsl xchg add fldenv (bad) adc (bad) incl xchg mov pop mov rex.RB fstpt sbb mov xchg sbb movsl callq incb rex.RB jmp es (bad) mov pushfq leaveq (bad) or jno and sub leaveq jns in mov mov and xchg mov sahf cmp mov fbstp jo xchg (bad) nop out ds xchg fistl negl and mov in adc add movabs nop (bad) and loope adc int (bad) pushfq mov mov bt or and outsb push es mov sbb out (bad) sub repz xchg cmp add or mov pop mov lods nop test (bad) xor adcb cmpsb sbb clc jge es (bad) jb mov cwtl mov adc (bad) int fidiv cmpsl (bad) adc (bad) sub mov addr32 xchg push cmpb (bad) (bad) xor mov insl sub mov jp cmp mov movabs jrcxz (bad) jo jmp insb (bad) imul mov jnp jne mov addr32 mov xchg (bad) mov push xchg cmp jl or cmpsb (bad) xchg in out mov ss cmp popfq rex.WX mov xchg es push (bad) mov rex.WX pop xchg movabs (bad) mov jl out rex xchg mov (bad) stos (bad) mov lods sbb rorb or int3 fbld int mov movabs mov xchg mov out (bad) jge mov (bad) sbb loop mov je lods sahf (bad) xor jno jo rex.XB adc div add js xchg (bad) lods mov movslq (bad) ss sbb cmpl sar out xchg push xchg (bad) or test lods xchg addr32 (bad) xchg (bad) adc lea (bad) nop push pop outsl test mov add add cmpl cmp mov xchg jb lea (bad) mov xlat test sbb (bad) adc nop mov fdivs fnstsw (bad) push jle mov cltd xchg fwait mov out mov (bad) adc hlt or sbb adc mov push movabs lahf loop scas ss hlt (bad) repz lods test icebp (bad) (bad) pop cmp mov vmread jbe ficompl mov mov sub rex.WR jrcxz pop jns mov (bad) addr32 xor sbb mov push xchg mov sahf pop xor test jrcxz out cmp ficoml or rclb mov rex.WRXB cmp mov xor idivb add stos cltd mov mov adc out adc pop cmp addl mov pushq ja xchg or outsl xchg out imul xchg ss fucomp fistpll loop cmp out popfq mov (bad) retq xlat rorb xchg sub add (bad) mov imul outsl data16 (bad) js hlt (bad) (bad) (bad) popfq outsl loopne (bad) mov cmp xchg or pushq mov stc dec sti rex.WB (bad) xchg rex.WRX repz mov adc mov cli xor mov rex.B roll std cmp mov pushfq (bad) jl adc cld pop (bad) adc (bad) in (bad) rorb movsl cmp cltd repz (bad) cmp xchg xchg xchg sbb stc adc (bad) (bad) imul or rex.RB movsb sti rex.WR and add cmp es mov sbb lods or add xchg movabs (bad) jle (bad) in imul lea jg movabs (bad) (bad) hlt mov xchg movsl lods rex.XB sub in icebp adc or repz stos cmp sub and mov (bad) xchg rex.X popfq hlt (bad) (bad) fbld std mov adc callq (bad) sub out (bad) out fiaddl sbb loop jge (bad) sub cmp jb callq xor xchg rex.R sub jge (bad) rex.X add movabs leaveq (bad) js sbb mull shrl addr32 roll shld and sbb in out mov lret divb pop xchg loope adc mov fnsave (bad) mov xchg add add jge in mov popfq movabs (bad) jg xor je movabs (bad) sbb ds pop out mov xor in add outsl (bad) sbb pop stos mov cmp out lret (bad) mov adc mov (bad) mov xor rex.WX mov lret rex.RXB movabs mov mov add xor xlat adc in fbld fnstcw movsb int3 xor mov fadd xchg lea imul je mov cwtl std rorl mov sub cmp in xchg (bad) rex.RXB adcb sbb imul cmpsb sbb xchg (bad) mov and lods out rex.RXB rex.RX cmp (bad) xchg sub xchg mov cmp mov (bad) pop sbb ficompl out mov or adc mov push in movabs and jmp icebp loopne xchg imul jp sub cmc int cmpsl pushq (bad) (bad) xchg pop fcmovnu imul and rex.RB pop clc (bad) mov push xor rcr roll (bad) xor loop imul xchg jns popq (bad) cltd or cmc (bad) rol adc and jo xchg mov (bad) je rclb out jmp adc lea cld movabs or (bad) repz mov jno sub xor jns nop rex.WXB cs cld add push cmpsb add cli mov or shr frstor setg or fst and xchg retq enterq pop cmp sub or movslq (bad) sub bsf cmp hlt enterq loop loopne mov in and mov and (bad) sbbl xor test out adc (bad) cmp (bad) sahf mov add (bad) (bad) xor sarb stos sbb push je cmp (bad) xor repz (bad) cmpb mov mov adc jno jns (bad) push out rex.WB out mov je stc movabs mov (bad) movsl xchg mov adc sti mov lahf out subl fneni(8087 add cs test scas roll xlat sti fnsave fcomps retq (bad) rex.WX xchg (bad) sbb movslq jae mulb subl and mov add xchg pushq pop sbb jg rex.WRB (bad) mov cmp xchg xchg (bad) xchg pop sarl sti sbb sbb je add iret pop (bad) movabs rex.WXB bnd lgs std popfq imul push rex.R std mov iret lahf push and or pop and jmp mov retq clc (bad) cmp rex.B in pop (bad) and jnp (bad) jno hlt rex.WRX rex.B sarl mov xchg (bad) scas lahf (bad) xor retq pushfq pop (bad) or sbb pop sbb cld sub stos ds rex.XB movabs jns pop rex.XB (bad) callq sbbl and fnstsw xor rex.R movabs rex.RXB xchg mov mov sub jae (bad) andl jns and jbe jp insb pushq (bad) and mov and (bad) pop sub and pop imul lret jg icebp and rex.RXB cs mov xchg mov callq addq in scas rcrb adc test movabs sbb decb rex.WRXB xor outsl stc lea cmpsl cmp mov cltd push fcomps lea pmaxsw rex.XB fnstenv mov cmp or (bad) xor iret stos (bad) xor (bad) sahf cmp je leaveq jmp ss out clc adc cltd pop (bad) xchg rex.WRB (bad) adc cwtl push pushfq movabs loope movsl mov sahf cmp sbb out (bad) pop mov (bad) or xchg testl (bad) mov (bad) (bad) sbb (bad) adc leaveq xorb adc (bad) out sub mov loopne xor pop mov lock mov (bad) jrcxz mov cld lahf fidivr mov (bad) mov jae rex.WRB pop xchg rol lret ss rex.WB cmc int3 xchg shr mov in retq test in test rex.R add popfq movabs rcrb retq mov rex.XB in loopne cmp xor in lret rex.W sbb stos add push adc jl xchg scas addr32 rex.RB and add or xor roll cs movsl jmp cltd xchg rex.WX xlat (bad) cmp rex.WRXB xchg or rex jno out push sahf js sub repz ja jb out add (bad) out and sbb in or sub loopne cmp mov xchg js (bad) push cmp pop mov xor in (bad) (bad) mov iret icebp xlat (bad) (bad) cmp mov and or lods loope (bad) mov (bad) push mov and and mov mov scas adc int faddl (bad) ss (bad) pop fcomi divps lea sbb pop mov ficompl pushfq movsl adc xchg sbb (bad) fcompl out (bad) rex.WRX cwtl adc mov pop (bad) rol xchg sbb (bad) xchg jrcxz movsl and (bad) pop movabs int3 cli mov mov lret push add adc (bad) (bad) mov mov pop fidiv retq ss mov lods (bad) je xchg loopne (bad) adc mov mov movslq mov mov fwait mov mov adc fsub ffree adc xchg jl xchg test repz mov cmp xchg mov add sahf add (bad) mov and and or xchg (bad) icebp (bad) pushq (bad) (bad) pushq ja (bad) stc add adc xchg shrb scas mov (bad) lock xchg cmp mov out xchg sahf lods data16 add xchg (bad) push or outsb and mov sbb (bad) enterq (bad) andl mov sbb out and stos adc ds or xchg scas jbe outsl pushq jbe int xor (bad) xchg (bad) push mov in cli cmp stos rex.WR cwtl loopne js cwtl movabs sbb fs and decb add cwtl in imul rcl jg rcl rex.B xlat lret mov (bad) out xlat jae callq mull (bad) in add movsl or (bad) negl push ja xor and movsb xchg cli sbb pushq sbb mov movsl sbb (bad) int3 rex (bad) rex xchg sbb cmp jrcxz cmp mov xchg sub mov int or cli retq adc add fimul movabs movabs cli adc mov cmp rcr cmpsb stos add ficompl ss rex.WXB jmpq rcr or decb xlat imul jae cmp jns mov (bad) fstl jle cmc data16 rex.WRB fcoms rex.WXB (bad) (bad) rex.WRB lea outsb (bad) iret (bad) rclb cmpsb mov cmp xchg or (bad) or imul lea (bad) rex.WXB rex.X rex.W mov add and and loopne add fs push iret and jb pop cmp jno or rex.WRX in push gs test xchg lea orl cmp xchg xor addl sbb (bad) push push in cmp mov pop imul (bad) adc insl (bad) subl xor pop (bad) pushq ss pop pop adc pushfq rex.WX pop add sbb xor ficomp movslq adc (bad) nop sub cmp in sbb sahf adc lock (bad) cli mov sub movabs (bad) mov retq jl movabs es adc out (bad) jrcxz cmp std (bad) fildll add or or (bad) mull out imul (bad) rex.WB xchg sbb (bad) rcrb movslq lret sbb mov repz mov mov (bad) iret movsl js sti xchg test cmp xlat lea es (bad) mov mov mov mov fidivl (bad) or adc xchg js rolb (bad) repz scas adc mov adc (bad) imul fs cmp push xchg xchg jg adc cwtl xchg movsb sbb mov jge sbb (bad) lods ficom pop lods stc adc mov (bad) je mov or sbbl (bad) pop cmp xchg adc (bad) sahf mov pop jl mov (bad) (bad) cmp mov imul pop mov and mov fistp addr32 xchg (bad) cmp mov xchg cmp leaveq out cmp cmp add xchg cmp sbb (bad) mov hlt clc add mov jp mov or pop mov push imul rcrl (bad) push cmp popq popfq data16 scas or mov mov cmp mov xor mov sti jno callq (bad) jge xor pushfq add sbb push (bad) pushq fild sub pop mov sub cmp jle ss (bad) add cld pop sbb movsb mov lea mov (bad) nop stc xor movsb cmp movsl sbbl xchg (bad) rex.WRXB test std rex.WX in in xchg out (bad) cmovl pop cmp enterq push clc repnz out fisubr jge in jne pop mov mov jb sub rcrb pushfq rex.WRXB rex.X es (bad) and jle xlat mov lret or repz rex.R (bad) sahf clc sbb popfq icebp mov sbb cmpsl retq enterq jrcxz rex.R lret data16 int3 mov sub cmp (bad) xchg loop xor (bad) lods xchg pop jo (bad) je (bad) jrcxz insb (bad) mov xchg repnz loopne (bad) rorb stc rex.WRXB es scas cmp mov (bad) sarl cmp and (bad) mov imul sub es jns ss cmc sub popfq (bad) cs mov movabs repz fistl cmp out xlat (bad) out pop out cltd movsl jno loopne rex.RX (bad) jg push (bad) in mov jmpq out pushq out pop (bad) gs xlat mov mov lret pushq jbe sbb sbb (bad) xchg cwtl push (bad) sbb popfq cwtl hlt rex.W cmpsb movsl retq mov or xor movsl mov adc (bad) jg bnd (bad) or sbb cmp adc pop scas jmp jge jnp (bad) shlb jne and out (bad) sub (bad) cmp ds and xorb cmp jmp xor out cmpsb outsl mov in scas es jno adc out mov fistp pop loopne rex.WX rex.RX mov lret jo movabs jmpq mov cltd movabs xchg repnz cmp xchg (bad) mov push mov out scas push retq pop xchg in lea out sub mov fistpl cmp fwait out sbb sbb mov push or mov pushq rex.WRX rex.WR (bad) mov xlat mov addb sbb rex.WR rex.R sub mov jrcxz mov xchg mov cmp xchg xchg adc jbe push and jrcxz (bad) push lret mov fstpt rex.WRXB xchg jl mov rol xchg mov mov mov iret (bad) int3 mov rorb add adc lret je add add (bad) xor mov and (bad) rex.XB (bad) (bad) in sub cmp adc xor or sbb (bad) sub (bad) push mov pushq cld movsb xor and adc sbb add mov cmp add xor sbb xchg mov cmp je cltd out adc repz out mov cmc test (bad) loop loopne (bad) xchg fs xor pop out cmp pushq mov insb (bad) addr32 mov xchg mov hlt int3 mov pushq mov adc es sbb xchg (bad) scas pop (bad) cmp cwtl cld sbb mov adc (bad) jg in mov rex.WRXB out xor imul (bad) mov nop fildll xchg stos sbb (bad) pushfq out rex.WRB (bad) fnstenv jle jge fisttpll push (bad) int3 callq (bad) fwait pop js add adc xor imul test mov xchg mov sahf (bad) clc cmp or xchg (bad) xor mov int3 mov pop js out cmovne xchg cwtl pushq xor jg xor int3 xchg xor pop stos jl or jno int (bad) lret sbb add adc (bad) sbb (bad) fsubs mov pushq js pushq (bad) (bad) (bad) repnz cld fcomps loop (bad) mov clc xchg (bad) xchg xchg (bad) cmp je mov sub (bad) or fwait (bad) out fdiv pushfq hlt in mov repz (bad) (bad) xchg jrcxz sub lea mov hlt lods (bad) cwtl push testl jae fs mov sub fnstcw pushq mov push xor jl jmp rex.XB mov adc xchg (bad) mov rcrb xchg js jl ror (bad) mov rex.X fnstsw jge cmp xchg (bad) sub mov in hlt mov mov sub rex.XB jne or pop lahf xchg fdivrl cli out mov test cmp imul jmp out mov rex.RXB rex.XB lods lea adc jg push popfq (bad) (bad) lock cmp xchg jnp movabs cmp fiaddl rol mov (bad) test lret cltd rex.RXB rex.RB retq negb ja jmpq imul rex.WB gs rex.X pushfq mov (bad) jl (bad) sbb or movsl repz test out add rex.W and xchg lods fldenv stos (bad) cmp movsl (bad) (bad) jle (bad) adc out adc lret sahf lods cmp or movabs pop lea (bad) xorl sti retq flds enterq push fmull push movabs adc rorb and ds scas (bad) rex.WXB sbb imul xchg adc (bad) (bad) cmpsl rcll (bad) adc mov imul (bad) pop jno mov adc xlat (bad) mov retq (bad) (bad) jns mov xchg movabs in pushq adc sbb xchg xor in movabs cmpsb xchg rex.WRB mov movabs movsl xchg cmp lret mov leaveq mov mov out fs or sahf mov ds mov je push pushq (bad) mov hlt cmp cmp xchg or incl add jg cld add movsb out (bad) and adc movd xchg retq hlt stos popfq jbe and (bad) loop (bad) pop xor rex.RB mov xchg fidivl (bad) hlt test mulb adc jrcxz xlat mov stc adc imul outsb (bad) mov push xchg lea jge repnz push mov push (bad) std adc imul outsb ds fisubr rex.WRXB (bad) shl sbb imul fldt rex.WRX rex sbb stc xlat int ds fnsave mov cmp mov xlat and jle mov popfq mov cmp lret (bad) sbb pushq fwait movsl push pushfq sub div rex.XB xchg pushq repz fs or jle enterq sub push or cmp push rex.R rex.WB rex.W out rex.W es push (bad) push (bad) jmpq add orl jbe jbe sahf jne movabs mov mov cmp (bad) xor rex.WRX mov sarb (bad) (bad) jmp (bad) movabs (bad) sbb popfq sbb stos rex.WRX xchg or jbe cmp sbb jne jmpq (bad) repnz mov sti mov (bad) adc mov lods sub jns ss or imul mov sbb mov adc or enterq lods scas mov mov in cmp adc nop (bad) es js fadds hlt (bad) add add clc cmp adc jrcxz cltd cs pushfq fdivrl int xchg in rex.WR xchg sub mov fmuls jge xchg ss jmpq lods sbb (bad) loopne fs sbb icebp popfq xchg out pushq out xchg adc imul lcall movsb cld xor rex.WXB mov rex.W push movabs and adc fcoml outsb adc std iret and mov or push xor rol push xor cmpsb retq jbe in push cmc (bad) mov and jns mov xor fwait (bad) add (bad) out jmpq imull pushq out or lock stos out sub out pop fsub fisub sbbl std sub cwtl mov std mov jns retq jl (bad) icebp lods decb popfq xchg sbb hlt scas cmp jle lods and adc cmp mov mov (bad) mov mov (bad) (bad) insb mov js cltd sti out (bad) (bad) leaveq std or (bad) mov movabs in add adc (bad) jrcxz cmp lods mov or or jo (bad) fcompl xchg mov mov test rex.WX sub mov (bad) pop iret pop xchg mov xchg cmp nop rex.X std (bad) in pushq push pushq xchg cmp std movsl popfq (bad) jge in xchg rex.R movabs pop movsl (bad) mov or jrcxz pop mov pushq cmp in cmp cltd rex adc xchg jle pop mov sbb sbb xchg nop insl fsubl hlt fs es stos add (bad) pop jle shrl fwait add cmp sub or adc sbb iret mov (bad) jmp pushq shll out xchg pushq push callq pop cmpsb in loopne (bad) cld jns push pushq pop rex.W cmpsb lret adc mov popfq jmpq (bad) rex.RXB push pop mov mov xchg pop xchg sub jmpq pop sahf mov sti mov xor sarb xchg and or sbb xchg (bad) sbb jnp and (bad) movabs jae lahf (bad) jnp or (bad) (bad) push or (bad) out stos sbb (bad) jmp movsl adc lods movsb (bad) and pop lods xchg movslq adc sub xor lods adc and loopne (bad) mov (bad) lods decl insb jno fdivrs out rex.WRXB sbb in test and sub mov (bad) xlat fisttp xor xchg mov decl or mov ror (bad) fdivrs ja mov (bad) movsl or clc movabs fsubrl pop xchg jne (bad) adc sbb std pushq imul cli mov lods xchg adc push imul scas idiv cmp add out cmp xchg cld imul (bad) movabs in sbb (bad) adc movsl mov loope in divl pushq bswap cmpsb jne (bad) jl jle rex.XB clts xor icebp and int out fist (bad) lods out (bad) (bad) stos movabs outsl jle xlat rex.WXB sbb imul rex.R push jns int in and fidivr neg xlat adc rex.WXB jle imul lret (bad) js sub (bad) cmp (bad) mov xchg pop hlt and fmuls adc movzwl mov sub rcrl jrcxz lock shrb (bad) (bad) je (bad) xchg xor sub mov popfq jo jp pushfq loopne (bad) mov jmp imul lods cmpl jne sbb cltd pop out (bad) imul sbb repz (bad) stc jle (bad) push pushfq lahf pop out xchg mov pop rorl push xchg xchg cmc (bad) int3 int (bad) fadds mov (bad) rex.WRB (bad) test cmp movabs loope clc notl (bad) test or sarb xchg fdivrs rex.WR rex.R cmp xor loop mov movsb or xor pushfq sbb ss mov xadd xor orl mov lods mov hlt adc rex.WX rex.RX xchg mov add mov (bad) rcr cwtl pop movslq scas xchg lahf cmp cltd jo (bad) movabs mov or sbb hlt rex.RXB lock and sbb lea xchg or mov shlb push xor pushq sub sbb (bad) jg cli in pop jmp out lret subl mov cmp insl sar loopne pop sbb cmp jmpq xchg (bad) enterq rex.W sbb ss callq stos sub fsubl jrcxz mov push mov lock mov (bad) cmp pushq mov (bad) callq mov xor push js pop adc mov (bad) (bad) fmull jmp cmpsl imul out (bad) outsl lods mov insl lods (bad) xor cltd mov fwait stc add es out rex.RX (bad) movsl or pop imul xchg (bad) pushfq fist mov xor in hlt std xlat (bad) push add in xlat rex.WXB sbb xor pop movabs adc ja (bad) je mov mov push lods or jbe cmp ss adc cmc or insl mov int3 out pushq pop xchg je callq js jl sub jo rex.WX test js jnp retq out sbb shlb xchg (bad) movabs (bad) mov push test add or loop je in es out or subl mov adc (bad) jmp rex.X icebp in out rex.R int3 add and adc sub mov adc fnstsw mov cmc rex.R (bad) test push cli pop rex.RXB (bad) adc mov jrcxz (bad) (bad) rex mov sub insb pushq pop in sbb loopne xor sbb rex.RB add mov lods adc out xchg (bad) mov insl cmpsb adc xchg rcll (bad) mov callq test out sarb je add in callq mov in sbb pushfq xlat mov rex.WRB out mov xchg out jo adcl out mov orl mov xchg and shrl mov loopne sbb sub pop cwtl cltd xchg jrcxz pop or mov or xlat xchg sub xchg xchg lahf adc xchg ds sbb rex.RX (bad) pushq test xor scas lods nop (bad) push or cmp (bad) pop mov (bad) push add jrcxz retq or or jmp (bad) loope mov sbb sbb pop add jmpq (bad) add jl mov rex.WX pop (bad) rex.WX jnp add xchg xchg (bad) stos mov imul (bad) pop shlb fbld xchg sub xchg (bad) (bad) jmp pushq (bad) sbb insb mov jbe data16 stc lret mov push in ss mov test nop repz add addb pushfq (bad) cmp je (bad) pop pop (bad) push mov retq stc mov mov mov push push (bad) xchg adc leaveq sub pop xchg loop push (bad) (bad) add cltd push jmpq pop jle adc cmp jno nop adc in jne adc (bad) icebp (bad) (bad) mov ja in rclb rex.WX movsl xchg mov (bad) je or movabs rex.WRX mov xlat jns jg sbb mov rex.R rex.RX js and (bad) sarl sti mov (bad) mov xor rex.WRX or (bad) int3 fstp pop jl cmp fdivrs rolb (bad) jmp mov mov rex.WRXB rex.WRX stos push jmpq mov cmp leaveq mov scas ficomp push cmp mov (bad) (bad) fucom sbb roll scas test xchg cmc xor rex mov fidivrl sbb adc rex.X lret ja lahf (bad) shrl cmp out cmpsl rex.RXB add movabs mov pop rex.WRXB adc imul (bad) es mov add xchg xchg (bad) jnp or mov cmp xor pop rex.X icebp sbb test xor cmp test je mov lock mov imul sahf adc xchg xchg scas xchg stos lahf (bad) jb cmp add and test imul movabs (bad) mov cmp fadds (bad) (bad) outsb add movabs mov cmp cmc sbb imul push std lea push pop pushq (bad) adc movabs (bad) fsubrl (bad) in xorl xor xchg lahf (bad) (bad) fisttp add push adc (bad) sub cmp mov scas (bad) or pushfq out or or (bad) sub std rex.WX mov mov shrb pushq leaveq loopne mov push mov (bad) rex.WRX ss or decb cmc fbld in (bad) (bad) out (bad) sbb icebp negb jp (bad) xchg cmp xchg pop jns movsl popfq leaveq (bad) (bad) outsl ss (bad) or jmpq mov (bad) (bad) cmp out addl cltd sbb xchg mov adc (bad) loope mov movabs negb cmp add rex.R out sahf pop out je jg sbb push stc xor mov cmp or enterq negl sti jns adc movabs xchg repz lods sti out sbb mov out xor (bad) mov lock rex.X movsb lretq cmpsl lea xchg cmp pushq pushq iret push push popfq rcll mov xchg rcrb xor sub xor pop jnp rex.WRX rex.RXB mov pushq xchg fisttpl xor mull je sub movsl scas sahf sbb lret or pop gs clc mov cmp or or stos fcoml (bad) (bad) enterq outsl (bad) xchg or sbb fstps (bad) lea fsubrs mov mov mov ss (bad) fnsave jnp xor shl out mov adc cmp (bad) fwait jmp scas (bad) xchg cmp pop std mov xchg jno cmp callq cld sahf or (bad) xchg sub (bad) (bad) cwtl adcl jne jle dec (bad) clc xor pop movslq xchg movabs xchg fcomp or sahf xlat pop or (bad) lods hlt pop and pushfq jno mov (bad) sbb cmp xchg ds mov sbb scas or not mov (bad) (bad) in (bad) (bad) sub pushq pop sahf sub push mov scas jnp jno mov rex.XB shrb xchg push mov (bad) (bad) (bad) rcll (bad) mov adc outsb mov jl cmp jle mov idiv fildl ja mov out jl test ds pop pop sbb sub insb (bad) adc jo xchg pushq xorb mov sti xor (bad) shll jge (bad) ficom rex.WR adc xor pushq or pop pop jp adc jg out mov pop xchg pushfq adc sub fstps cs cwtl sub mov outsl clc retq int sub sub (bad) or jle (bad) lahf sahf js push or movslq (bad) mov or js (bad) cmpsl (bad) je or (bad) in adc out sbb adc mov sub mov and xchg int out mov lods loope int3 xchg mov mov xor mov (bad) in xchg jne cmp mov movslq mov (bad) push cmp out jrcxz cltd add xchg leaveq loope fstl pop (bad) imul or cwtl fsubrs lret fstpt push mov add mov mov fsubl mov xchg xchg (bad) sahf cmp pop cltd xchg (bad) sbb xchg push jnp xchg sbb and sbb (bad) (bad) cmp mov sahf rex.WR push (bad) xchg and cmp movslq insb and pop rex.WRXB adc cld rex.XB test add xlat jle sbb pop pop mov (bad) (bad) mov mov test (bad) sbb t1mskc cmpl (bad) stos add sbb mov stc (bad) fndisi(8087 (bad) js (bad) mov push add push fwait cmp jg movabs out sub adc ds lods stos mov movsb out xchg imul cwtl out fstpl sub stc lods out mov scas cwtl sbb jb xchg lahf (bad) stos test xchg rex.XB mov rex.B sbb sti add jns sarl scas add insb and jle iret rex pop gs mov in sbb xchg gs or xchg (bad) (bad) cmp and cmp (bad) or mov mov sbb sti stos add outsb xchg and or mov sbb push rex imul mov out repz (bad) lods fs rex.WB (bad) xchg cltd es enterq in jnp cmc mov fbld mov xchg (bad) cmp jo add or add (bad) sbb out xor or (bad) rep (bad) sub popfq mov mov orb (bad) cmp pushfq (bad) out movabs sbb xchg pop jb callq movabs imul lret jns mov mov (bad) pop out or rex.R rex.RX mov (bad) cwtl fadds cmp or sbb add (bad) jns mov pop (bad) (bad) fdivrl cmp (bad) negb xlat sbb pop rex.WR shrb js add mov (bad) cmp add cmpsl mov scas test es xchg iret nop (bad) ljmp sti xchg (bad) cltd imul fcompl mov push add fcoms addl (bad) movabs add mov lods test (bad) xchg mov sub fnstsw lahf push mov mov fsubrl (bad) stc (bad) pop xchg out sbbl adc mov test xchg fsub xchg add rex.WB xchg mov mov (bad) test or push ss pushfq loope (bad) cld mov (bad) (bad) mov xchg adc push cmp pop cltd rex.XB mov xchg sub nop lods (bad) xchg adc (bad) out scas mov imul adc (bad) popfq xchg sti (bad) movsb divb fnstcw adc add movsl mov or mov pushfq rcrb sarl cmp data16 and jmpq in int and rex.WR mov scas fstpl cli mov ja retq xor xchg lret jbe punpckhbw loopne adc sbb jge xchg lock vpmaxub (bad) xlat fbstp popfq fdivl rex.WRXB rex.RX pop sbb loop xchg xor stos (bad) (bad) movsl push mov mov (bad) idivb sbb cwtl push mov (bad) (bad) mulb xor popfq mov out stos sbb sbb jns mov pushfq cs push sbb lahf (bad) (bad) mov incl cmp stos and pop scas xor mov (bad) adc int imul mov (bad) fcmovb adc xchg mov pushq mov (bad) (bad) xchg adc sub rex.WR loope and lret hlt cs (bad) mov (bad) (bad) (bad) enterq pop (bad) cmp movslq lahf int movslq imul sub rclb iret xor xchg shll (bad) xchg mov (bad) pop std lret jle out pop fsts sbb loop stos cmp jo shl cmp and rex.R jns or adc cmp movabs imul and out out test or es (bad) ds rex.B addr32 jmpq jl (bad) mov sbb sub (bad) or fistl nop mov repz pop jmp add movabs shld cmp jle enterq movsb jmpq rex.X pop out cmpl movabs movabs sbb sbb adc es xlat (bad) push and sbb cmp cmpsl rex.WR (bad) test fstpl jrcxz movabs out or add pushq fdivr cmp (bad) in pop cmp stos add sar sbb pop or or jne insb mov ds add outsb (bad) jmpq loop in fcomps cmp jbe xchg popfq add (bad) jmpq (bad) repz vphsubwd sbb (bad) mov add (bad) out mov outsb push jge shl xor adc repnz int xor (bad) iret mov jns or movsb iret push scas xor icebp (bad) rex.WR and (bad) or jns xchg sbb shlb loope pop (bad) hlt rex.WB mov fcmovbe pop pop xor cld pushq mov (bad) pop and rex.RXB or sahf jae insl sub cltd fisubl sub add add rex.WX insb (bad) movabs jns add lret mov and (bad) xchg adc movabs sbb sarb mov mov out scas or (bad) xor sbb andl out xor xchg sbb jge data16 mov cwtl mov imul sbb and xchg cmp rex.WR popfq movabs mov xor sti es mov int movabs sar popfq pop pushfq rex.WB sarl movslq lret cmp cmp mov push jmpq repnz rcr jge xor or leaveq rex.WRB rex.WRX icebp hlt cmpsl (bad) lods cmp mov int jg mov cmp sbb mov add rex.WX adcl or imul out pop jge pop (bad) jns imull or (bad) cmp fs mov pop rex.X fsubrs cmp adc mov pop jle rex.WB rex.RB fnsave sti rex.WRB or mov or mov out cwtl jne xchg mov and lods repz sub scas adc jl imul jrcxz push mov adc lods jnp mov jrcxz sbb shl (bad) jmpq ja (bad) idiv mov ficomp addl test mov rex.WRX sbb xchg imul jns xchg cmp (bad) adc adc pushq mov fcomip (bad) xchg fistpl (bad) hlt jns cmpsb pop mov rex mov xchg movsl xor jb mov xchg adc jl push mov cmc mov es sub push (bad) fnstenv mov cmp in sub mov jp sbb (bad) jno jl loop push sbb mov pop pushq or (bad) rex.RXB lock push movd mov sub (bad) shr cmc xchg (bad) (bad) movsb pushq (bad) hlt sub or xor sbb outsl (bad) or fucomi push rex.R mov mov adc xor mov sbb add mov pop movabs (bad) sbb flds pop mov adc (bad) movsl or scas sbb cmc add add (bad) or rex.W adc (bad) cmc (bad) or es pushfq decl mov pop fistl xor pop pushq rcrb fsts (bad) movslq push jge nop mov adc cltd mov adc retq imul xchg movabs adc add sbb mov mov mull cmp xor cmp rex.X js (bad) movsl add xor jae xchg adc sti xrelease adc jb fcomps xchg sbb xchg callq rex.X callq es xor mov cmp mov pop imul fnop rex.RX cwtl fwait jae movslq nop mov jno fldenv loopne jl (bad) (bad) sub xchg cmp movabs push imul movsb loopne insl rex.WXB add push shll sub (bad) icebp mov mov pop pop sbbl xchg mov repz adc jrcxz xchg loope cmp lret in retq sbb xchg out es out fcmovne mov add lods (bad) movabs sarb test mov out xchg xchg (bad) mov cwtl neg mov cld sahf stos repz xor shrl pop pop out sbbb pushfq cmpsb loopne sbb cmp testl (bad) mov (bad) mov pop lcall adc mov xchg xchg nop cltd cltd pop (bad) xchg ja idivb rex.WRB loopne and pop adc sbb jmp lock (bad) adc sbb pop loopne adc mov xlat frstor orb pop movabs fnstsw adc pop sbb repnz clc push jne xchg sbb xchg adc add pushq pushfq imul (bad) xchg pushq jbe test push jge sbb sbb sarb mov (bad) (bad) rex out rex adc sbb xchg (bad) rex.WRB push or shll jg pop xchg xor (bad) lods sbb mov xlat (bad) adcl stc mov (bad) cmpsl or add (bad) mul lods pushfq stc lahf fucomip loope mov adc shrb mov stos negb shll fsub movslq shlb popfq (bad) or push in xchg popq rex.WR js cltd ficompl scas push sbb xchg rex.WRB xchg clc (bad) xchg jl (bad) push mov (bad) jo andl sbb jge jb mov rex.X sub lcall xor stos clc xchg sbbl adc outsl scas divl shll sarl data16 mov or in sub sbb fmuls xor pop (bad) loopne (bad) sub or xchg out adcl rex.XB jns (bad) jp mov mov (bad) movabs ror (bad) pop popfq nop pop rex (bad) xchg iret ss cmpsl or fmuls sbb pop retq (bad) sub (bad) mov mov mov (bad) jg mov rex.WR xchg cmp mov retq and rex.XB rex.B out lock enterq mov add lret decl add cmp rex.WX pop (bad) iret leaveq (bad) mov (bad) loop pop jge insl cmpsl scas lods out mov stc (bad) jg (bad) xchg (bad) (bad) out mov addl out scas (bad) je pop pop sti shrd out out mov stos out int movhps rcl jae repz xor xchg ds and mov rcrl lea xchg insb scas rex.WX cmp roll jno or (bad) insb pop sub jg mov rex.WRX pushq or callq sbb sub mov sub xlat iret pop (bad) jbe (bad) cmpsl mov jle mov adc (bad) out jrcxz (bad) shr (bad) rorl lods out jrcxz mov test xchg and fstpl mov cltd mov push sbb pushq or mov or mov fisub (bad) xchg repz (bad) (bad) fdivrl jrcxz xchg xor (bad) jmp push mov (bad) loope jle or sbb ds (bad) jl mov (bad) jbe ja push cmp xchg out (bad) xchg push rex.R sbb (bad) (bad) (bad) jo cmp hlt (bad) mov cmp (bad) mov (bad) (bad) fnstcw movabs loop fcomp adc jb lret mov cld jo iret jle rex.XB and lahf (bad) idivl subl jl out iret and push (bad) fmuls add incb loopne add lock rex.RB jg add (bad) (bad) pop add out mov mov jns idiv push cmpsb lahf hlt es movabs mov mov movsl cmp adc in or cld mov movslq fmulp jno cltd out sbb xor sbb sbb jl xor scas fistp pop mov idivl xchg and rex.RX push stc jg xor (bad) (bad) mov pop loope retq rex.RX and popfq and sub (bad) or rex.RX (bad) imul cmp xchg stos out xchg in in leaveq pop jae imul in rex.WRXB pop jo and andl adc fmuls ror jmp sbb pop xor mov (bad) push and pushq rex.X xchg movsl lods rcll popfq jns mov (bad) pop mov xchg repnz (bad) fmuls pop es sbb cli pushfq push sahf (bad) or mov (bad) sbb loopne fnstsw push cwtl (bad) out cmp xchg andl imul lahf clc cwtl scas xchg add test rex.X (bad) (bad) mov xchg xchg mov rex.X sub pushfq (bad) (bad) rorl lret xchg sub mov and rex.W mov insb stc movsl sbb subl pop jmp pop movsl mov rex.WR andl add sub fwait (bad) movsb mov popfq loope (bad) cmpsb xchg xchg and lods pop nop scas jae mov adcl sbb mov add (bad) lea in shrl cmp sbb sbbl (bad) rex.WR (bad) (bad) sbb or mov sbb movsl mov (bad) (bad) rex.RXB pushfq (bad) out adc addr32 cmp loope jo pop mov mov jg mov loop mov ss es cmpb rex.WRXB addl add sahf (bad) popfq loop (bad) mov xor fcomps sub mov (bad) mov or mov callq insb fstpl mov out rex push lods mov mov pop pushq enterq enterq pop enterq and mov nop pop lea mov rex.WX rex.WRB andps cmpsl xchg (bad) lret xor and loop (bad) jp (bad) (bad) (bad) int (bad) (bad) in (bad) mov testl lret (bad) push hlt xor push push fisubl rex push cmp addr32 add xor sbb nop xchg xchg pop mov imul adc adc and test (bad) lea (bad) rex.RB xchg add push jp mov jle adc xchg movabs xchg rex.WR fiadd test mov sub sbb mov mov fcomps sbb rex.WX or loop unpckhps rolb leaveq jle sahf mov rex.WX xchg movabs mul rex.WXB (bad) (bad) or insl mov (bad) (bad) sub push (bad) jno int out stos xchg pop xchg retq sub sub jne rex.WX fsubp (bad) xor (bad) pushfq jno frstor or and (bad) mov int mov decb mov mov rex.XB sub lock test mov repz xchg pushq out pop pop cwtl shrl movabs xor movabs notb in hlt rex.WB (bad) stos vpmaxsw mov movabs scas lea push (bad) jnp xor xchg and xchg test rex.XB (bad) pop fcoml out xchg stos sbb popfq pop cmp imul mov push ss jno (bad) mov mov movabs movabs add ja add (bad) stc movslq mov xchg lea jrcxz jmp divl push (bad) movabs sbb jmpq mull cmpsb push jno out imulb add mov rex.W rex.WX jmp mov cs mov adc gs fsubrl fstpl adc (bad) loope push es adc sub and rcr scas adc or fisubr cli (bad) ss repz xchg adc jnp retq xlat gs and es lret pop rex.X callq (bad) mov cmc (bad) (bad) (bad) movabs rcrl stos xor test rex.B je js and (bad) pushq (bad) mov sbb cmp stc cmp std test mov sbb lret xchg fdiv xchg sbb add in sub mov xchg (bad) popfq or (bad) mov retq test mov xchg incb push lods (bad) xchg pushq cltd xor rex.WX xchg fwait cmp (bad) mov jmp mov (bad) sbb or pop iret movabs movsb pushq popfq add and jo mov pushfq int or movabs iret cmp callq lods and je or repz xchg add movabs rcrb lea adc rex.WX fstpl callq rex.B out rex.RXB pop add mov pop xor pushfq fadds mov adc shrl (bad) jl repnz imul out sub sbb gs pop mov (bad) clc (bad) or mov push rcrl (bad) cmpsl mov (bad) lock cmpsl (bad) or add clc mov (bad) cli (bad) jg xorb pop mov (bad) shll sbb jne mov (bad) jrcxz cmpsb mov stos rex.WRB mov rex.WXB rex.RX (bad) mov out fiadd fmul imul movsb movabs es imul sbb mov adc callq xor incb (bad) mov lret mov mov retq movsl (bad) divl xchg xchg add (bad) fldcw (bad) push or cwtl push scas in cmp lock int rex.W sbb xchg mov adc xchg cmp jge (bad) rex.B adc xchg mov (bad) (bad) stc (bad) test hlt push lahf cmc fstpt cs rex.WRX sbb mov cmp xor cmp (bad) jbe out and cmp vpsraw mov icebp or (bad) mov iret fstp xchg negl mov xor cmp (bad) xchg xchg add (bad) popfq cmp addr32 insb jo (bad) pushq jge sub cmp mov (bad) repz add sbb hlt sbb cltd xchg pop cmp sbb mov pop rcrl and movabs mov sub jg add xlat pop pop add sub xchg xchg mov fsts push (bad) (bad) jp sub movl popfq (bad) rcrb mov sbb repz loop sbb nop cli cltd adc sbb test mov rex.R enterq movslq (bad) (bad) xchg or pushq cmpsb retq adc stos pushw ds cwtl sbb mov add cmpsb mov push cmp sti movsb (bad) ficomp or jl (bad) and pop (bad) (bad) sbb mov loopne rcll pushq repnz and jl insl popfq mov adc add rex.RX mov sub sbb sub outsb xchg cmp lahf pop mov cmpb mov cmp xchg mov loop test rex.WRXB (bad) int es xchg rex.WXB (bad) xor movsb rex.R jae (bad) cli pushq loope xor xlat popfq and paddusw mov shlb (bad) xlat adc mov shrl jle cmp clc or repz lret mov sub adc xchg lret rex.WR mov (bad) js cmp or pop lods xchg cmp mov jrcxz and loop fnstenv insb pop (bad) sub push add mov mov cwtl (bad) rex rex.X sahf loop (bad) test adc loopne cmp pushq push rorb sbbl movabs popfq or rex.X jmpq and (bad) and rex.X scas retq (bad) or sbb xchg mov adc add ror mov lret mov movabs sub (bad) and (bad) xor (bad) or nop add sbb cmpb mov addr32 (bad) (bad) xchg es jb cmp or in mov imul (bad) lret callw callq cmc stos xchg mov or movsl (bad) movabs lahf (bad) jns push rex.XB sub (bad) sub cmp movabs sub cmp hlt cmpsb rex.X movsl xor cli enterq scas ss rex.WRX (bad) ja add jns enterq jmp sqrtps rex.WRXB push pop fistl rex.RXB mov scas or outsb lods cltd cld mov cld imul clc and out rex.B ds imul jnp (bad) leaveq cmp xchg imul ss sub add cmp rex.WR mov (bad) or mov movsl (bad) cmp jne sub cmp repz (bad) (bad) pop (bad) or (bad) and mov or pmuludq add sbb mov xchg pop or rex.RB xor pop pop mov sub xchg (bad) stc sarb mov in (bad) ja mov int3 fcmovnbe (bad) xlat stos callq and xchg jg jbe cmp xchg (bad) repz (bad) out xchg frstor adc sti add push jmpq lret (bad) xchg rclb sub lock mov sahf fs sub fildl and xlat xor (bad) loope and pop xchg rclb cmp leaveq fcomps punpckhwd (bad) loopne clc (bad) xchg add pushfq divl retq mov adc loopne sub loopne cmp addl fistpll rex.RX sbb repz and cli out jno mov out test movabs roll fistl mov out imul fdivrs fildll ficom es xchg and sahf pop (bad) mov mov repz rex.WB ds adc or clc adcl add jle popfq cld xchg (bad) scas cmp callq or out sbb (bad) lods jns xor adc ficomp jno pushfq retq cmp es test xchg pop rex.RX or xorb sub (bad) ja mov movabs adc jbe pop insl hlt movslq mov sub mov rex.B cmpb fwait (bad) rex.RXB (bad) cmpsl mov (bad) (bad) rex jp adc (bad) out fstpt out or cmp push (bad) (bad) mov mov out rcrl stos and (bad) cmp mov rex.WRX sub in (bad) movabs xlat cmp jle mov cmp push stos cmp sbb imul xor adc adc sbb jle sbb mov (bad) mov ficom out mov sbb xchg sub loop cmp (bad) rex.WRB xor gs (bad) loope xchg or mov lods negl scas push mov (bad) (bad) add add enterq xchg shll cld (bad) sbb cmpsb stos or callq out or pop xlat movabs mov or cmc xchg out or and cli push xchg pushq push or xor xchg fcmovu fildl cmp ljmp out mov add clc pop out loope adc or xchg sub sbb (bad) rex.XB repnz lods lea jl loop mov pop xor and sbb cmp jb enterq js incl xchg pop mov mov out ss add pop ja mov (bad) xchg test lret jmpq xor or sbb popfq shlb mov mov add and pop xor xor retq mov pop pop cmp mov out mov (bad) jne hlt sbb fldcw cmp outsl xchg out (bad) push mov (bad) cmp mov jl add jle cmpl xchg jle mov data16 (bad) xchg mov cli jmp fmulp push jno pop std fisttp loop in outsb xchg cmp repz xchg lods int mov (bad) xchg out mov xchg hlt rex.WXB lock movabs nop es lods (bad) xchg testl lcall sbb xchg nop push rex.WB or ss hlt icebp mov cmp jl mov jmp mov cmp (bad) (bad) or rex.WR mov retq adc cltd (bad) jle movsl (bad) mov push (bad) (bad) mov pushfq scas mov fnstsw mov sbb sbb (bad) clc mov adc (bad) and sbb (bad) (bad) xchg cmp mov fnstsw out sub lret cmp mov mov mov pop notl rex.WXB sarl or mov jp retq fcmovbe pushfq movups mulb movsl jmp sbb rcr (bad) xchg jbe xchg push out cld sbb (bad) movabs in push xchg or fistp pop fcoms pop stos movabs shr mov jmp mov rex adc (bad) ja cmpsl cmpb movslq and or imul imul add sub adc fcmovu mov (bad) xchg (bad) movabs jrcxz xchg rex.XB (bad) out es push (bad) xchg popfq and (bad) jo jne jmp xchg cld ja rorb xor enterq (bad) mov xorl xchg rex.RXB pop pushq sbb rex.WRXB nop add xchg in jrcxz cwtl mov cmpsl mov cmp or adc mov ja add pushq jno leaveq repz fimul xchg xor retq mov cwtl out imul (bad) test cld sub jmp mov add add (bad) cmp (bad) cmp sbb mov lahf jmpq cld pushfq xor out leaveq adc rex.WRXB hlt (bad) mov stc or lahf pop test add fildll (bad) loop int3 (bad) cltd lea mov fdivl rex.WXB xor adc adc roll std (bad) cltd mov mov mov sbbb pop sub cwtl rex.X xchg (bad) and mov (bad) (bad) sub fildll rex.WRXB rex.WR (bad) sub (bad) mov add (bad) jge jnp adc push mov rex.R cmpsl movabs loop mov xor rex.WRX sbb (bad) cmpsb jmpq or out pushq fcoml sub or xchg out in adc btc xor push fstps fldln2 imul fwait (bad) (bad) movabs mov rex.WX mov pushq or stos mov xor mov xchg xchg outsl in jae (bad) (bad) cmc mov rex.X cmp fs fisttpl xchg cwtl outsb (bad) rex.WRB imul rex.WR cmp out retq mov add mov (bad) outsb rex.B mov pop mulps (bad) imul or xchg jno popfq out mov (bad) js and cwtl xor or andl cmp push xchg fcomp (bad) and jge mov sub out rorb lea insb or out push and (bad) sarb cs lods cmp push or sub pop imul int3 leaveq (bad) mov rex.X lods getsec stc jns mov push mov push (bad) nop (bad) xchg xor rex.R out or (bad) cmp rex.W xchg mov rex.RXB rex.WX add or push mov mov rex.RX mov stc (bad) pop sbb fnsave mov push emms xor adc cli xchg fcmovne sahf jae push sahf mov rex.RX rex.WRX fistpll mov adc (bad) xchg xor mov xchg (bad) lret ds push nop adc (bad) xchg rex.WB imul and xor rcrl movsb mov (bad) (bad) repnz cltd mov push iret cmpl xor insl (bad) movabs mov imul mov lea or sbb jge sbb sbb sbb jmp xchg mov nop add lret lods sbb sbb xchg rcrb pop test movsl cmp xchg (bad) adc sub (bad) (bad) and jmp sarb scas or jmpq xchg push lret xchg fmull or (bad) xchg neg mov jge pushq push (bad) mov (bad) xchg mov movsl lret cmp (bad) loope hlt jnp out popfq loopne ds mov ds and imul test mov retq pushq jmp xchg loop push and adc mov mov cltd out out cmp sub xor gs or leaveq xchg mov scas movsl sbb cmp jmp sbb movsl scas mov and sbb (bad) (bad) sub rex.WXB loopne rorl sbb out loopne movabs mov movsb out mov and pop xor es sbb xchg mov jle ds (bad) xor mov fist (bad) mov repz xchg clc mov sti ds xchg mov jmpq testl movabs addr32 (bad) pop sbb xchg stos sbb push and mov hlt rex.RX pop in movabs retq mov std out rclb mov sbb outsl mov jmp fistp pushfq movsb cmp int or rex.XB jb sbb mov (bad) adc mov (bad) rex.XB mov (bad) int3 movslq cmpsl out (bad) movsb xor rex.B xor pop mov (bad) xlat leaveq rclb mov in adc push jge fsubrl add (bad) mov cli sub out fstps jrcxz mov sahf fisttp movabs pop popfq std stc movabs (bad) sbb xchg fsubrl and cwtl movabs jmpq add or (bad) data16 cwtl push xchg or loope mov mov jno je sbb xchg fwait cmp rex.RX (bad) mov js fsubrs and (bad) fcomps or or sbbl add lea rcrl sbb fdivs jnp or icebp rclb out xor movsl (bad) hlt fwait rorl cli lods (bad) mov (bad) sbb loope (bad) std add xlat (bad) pop adc or in xlat sbb out (bad) push push fnsave test push mov and std pop jns retq stc mov mov stc enterq leaveq push xchg lret xor cmp cmp fildl mov js and fildll (bad) sub (bad) rex.WRX outsl (bad) popfq fcmovnb add xor or stc fs xor pop fs mov lods adc add and jae sub jae test cmp mov idivb test out push (bad) rex.WX adc lret pop jle mov xlat mov out cmp cmpsl cld pop mov fisubl rex.RB xchg mov (bad) rorl scas jmpq insb jmpq (bad) lea loop pushfq insb xchg (bad) or sbb pop sub sub rcll xchg lret mov retq mov cli out (bad) (bad) pop xor or xchg jle add (bad) sbb lahf icebp cmp (bad) push stos (bad) movabs jp sbb xchg xchg psubsb cld std sti xor imul jmp fstl rorb jmp movabs (bad) lods pop std sbb (bad) testl stos in xchg push stos fmuls pop popfq (bad) faddl cmp add lods test je loope (bad) in sub cs jg mov or sbb rex.XB (bad) out (bad) mov xchg rex.WR cltd cmp cmp loopne adc (bad) clc push adc jl cmpsl or mov (bad) (bad) jl jns incl sbb movabs test mov (bad) and cmp mov repz mov xchg adc (bad) mov mov lahf lods (bad) retq fdivl xchg jrcxz and cmp gs movsl in imul (bad) iret xchg mov cmp mov mov cmpsl mov pop jo test (bad) (bad) adc adc cmp and std lret rex.R shrl sub mov rex.RXB es lods mov (bad) fsubrs sbb jb mov int cmpl sub mov loop movabs imul mov imul retq rorl ds repz cmp add test fbstp pushq rex.WRB test and lahf (bad) lods andb subl (bad) je scas mov fnstsw nop in mov xchg enterq clc xlat pop (bad) pushq lret xchg mov es (bad) xor cmp sbb mov movabs movsl test mov pushq test mov mov xlat adc pop fsub (bad) js nop jo mov lods iret imul adc (bad) xchg negl (bad) stos rex.X loopne push push push sub pop or jrcxz int sub xchg lods sbb fiaddl mov (bad) rcr adc js test negl fcompl jrcxz out adc rorl add mov (bad) (bad) or (bad) (bad) retq and je add cmp or or jns xchg (bad) hlt mov int out fistl (bad) sarl imul xor xchg jnp mov rex.RXB sub (bad) xor add repnz mov lods ss (bad) outsb mov fstl xchg or loopne and and sbb xlat fs (bad) jne mov andb rex.X lret fisubl out push xchg fmull (bad) and rcrb xchg mov (bad) jne sbb push rex.RX lods (bad) sbb xor in sub rex.X (bad) out or movabs (bad) cmp sets loop cmpsl mulb rep (bad) popfq sbb fsubl fldl mov (bad) movabs mov scas movslq mov jg xor sub mov cmpsl out (bad) int outsl cmp and add xchg fsubrs jmpq pushq jmp xchg xchg mov or mov test sub jmp adc (bad) xchg repz rex.WRX (bad) rorb or or frstor add pushfq lret cmpsb fbld or mov divb jbe sbb shll sahf (bad) push add push xor test xlat popfq add je sbb push sbb or push cmp mov int testl rex.WB mov rex vsqrtsd xor sbb (bad) out out sbb sbb and es rex.RX lahf fsubl mov rex.R (bad) cmp loopne jg rex.X rex.WR pop jo push stc enterq ja adc jns sahf (bad) rcrl out pushq jnp movabs jrcxz sbb lea movslq sub or je mov xchg (bad) xor ror hlt cmp rex.RX fwait sbb mov jo adc mov je (bad) (bad) xor pushq fdivrs sahf ds xchg (bad) jno or outsb callq (bad) cld imul pop xor fstpt pushfq imul mov fnstcw movsb jb jl (bad) adcl pushq mov mov rex.XB and pushq push movsl add pushfq lock xchg (bad) fldt rex.R callq std fdivs test cmpsl mov out mov adc (bad) jle mov and imul int lret mov movsl cwtl lods movsb sbb out cmp mov mov mov rex.RB add xchg shrl movabs in sub mov (bad) sbb jmpq movabs (bad) pushfq int and xchg xor jl (bad) xchg clc pop jle mov nop imul pushq nop out test xlat pop and rex.XB mov jp pop push ds test in sbb pushfq gs sbb lahf mov leaveq sarl movabs cmp mov lods (bad) (bad) cmp loope out mov (bad) (bad) movslq mov xchg test (bad) sbb (bad) out in shrb rex.WX (bad) fdivr movsl mov adc lret fcompl retq pop mov or and mov int3 sbb push pop (bad) and (bad) adc mov xchg rex.WRB (bad) (bad) insl in lcall xorl pushq (bad) lea (bad) (bad) iret out int3 pop xchg movsl adc repnz insb (bad) xlat sbb push mov idivl jle clc enterq mov fisttpl and lret pushfq rolb xlat (bad) data16 xchg popq loopne cmp sbb pushq add sbb cmp sbb pushq std or sbb (bad) push push in stc jne rex.XB pop mov (bad) xlat cmp mov sbb movabs pushq pop stos rex.WR retq mov pop rex insb pushfq pop ljmp (bad) (bad) rcr iret sahf or or loopne js pop es outsb push andl lods outsl nopl adc pushq (bad) test pop sbb (bad) rex.XB (bad) gs scas sbb stos mov (bad) (bad) push jg pop outsl pushq out imul xchg gs (bad) xchg pop (bad) repz jae jns mov rex.WR int mov callq and rex.WRXB in gs pushq rcll pop jne cmp jo lcall lahf in repnz mov in adc jo xor cs push mov xchg es add je imul mov xchg mov loopne jl loop retq mov or xchg stos pop movsl (bad) rep rex.WXB repz (bad) out popq mov scas cmp loope sahf mov mov and repz mov int mov xchg test in pop adc (bad) sbb jae cmpsl imul sbb nop scas cwtl jo sbb push hlt fstp cmp mov or shrb or sbb adc loopne mov lahf jrcxz,pn (bad) sbb (bad) callq (bad) xorl movabs pop mull cmp (bad) xor nop test push (bad) sbb rex.WRXB in rex.WX rex.RX int sar pushq rex.XB adc and test lods jrcxz cwtl mov fdivp out or pop cltd (bad) mov (bad) mov push sub xor or pop movabs lods (bad) and rex.XB movsl (bad) rex.WXB rex.X rex.WRXB fs cmp iret jp (bad) cmp rex.WRB clc jb enterq out sbb lret in lods out xor pushfq pop mov jns lretw repz rex.WRX rex.XB (bad) ja fiadd loope mov mov js jb cmp xchg divb leaveq xor jae (bad) movabs or rex.W es (bad) jp sub or sbb je pop mov pushq out pop xchg movabs pop out mov xchg stc or and (bad) rex.RB andl cmp sbb rorl in rcrl out sahf (bad) out xor cmp (bad) or movabs push xlat lods xchg lods rex.RB retq jmpq mov out mov xor (bad) insb rex.W xchg lahf (bad) (bad) pop or xchg pop pop rex rex.XB sub jl sub mov mov xlat fwait xchg scas add mov (bad) pushfq jge pop loopne mov movsb outsb push icebp gs out (bad) push mov cmp in cmp adc xor cld ss and and mov jnp mov mov mov out and sbb fnstcw es jbe out xchg (bad) mov (bad) ror sub adc sbb (bad) fisttpl movabs int3 (bad) scas sub add mov cmc adc jmpq xchg jns (bad) (bad) adc pushfq lea and pop adc cltd xchg (bad) rcll (bad) rex.WR addr32 pop adc loope rex.WXB popfq xchg out rex.WXB xor rex.WRXB loop sti rex.RB test rex.X cld (bad) movsb xor retq pop loopne ficomp sbb pushq lret jbe sbb sahf jg cmp cmp retq rcrl mov or movabs mov cmp xorl add (bad) (bad) xchg xlat ficompl idivb cmp loop (bad) (bad) addr32 enterq add out (bad) or shrb hlt iret and sbbl out or lods push lock (bad) xchg and loop in pushq (bad) xchg (bad) movsl xchg test cwtl fcomps clc movsb (bad) xor mull or test (bad) lahf addr32 push (bad) ss cmp xchg cli (bad) test movsb movsb cltd (bad) pushq (bad) (bad) xchg pop xchg insb outsl and stos int3 insb jl or insb movsb adc sahf sbb orb std je (bad) or out cmp xor cwtl sub or (bad) sti (bad) out and (bad) (bad) jne xor xchg (bad) pushfq (bad) rex.XB cltd jmp cmp imul loope retq jp pop stos xchg lods jmpq (bad) or (bad) pop lods retq rex.XB test mov sbb or je (bad) xchg (bad) loopne mov rorl rex.WRX rex.WR ja jnp xchg add push adc pop add mov imul jp loope imul push mov stos and movsl cmp outsl or js (bad) rex.WRX in sti cwtl es sahf fildll test test (bad) xchg (bad) ds push xchg movabs rcrb sbb rex.WR pop cwtl rex.WRB ds int mov cmp sbb out in js imul mov jnp and add (bad) mov (bad) sbb pushq (bad) adc xchg fidivrl adc mov iret adc notb fcoml (bad) cmp loopne pop jnp push cmp xchg and rex.B fs rex.WB (bad) sbb push or cmp mov xchg mov mov sbb (bad) jo movabs cmp andl adc rex.WRB rex.WRXB mov sbb mov pop jmpq je movsb nop sahf mov and addr32 ss rex.X mov fildll (bad) jrcxz retq int3 (bad) movsl xchg scas jmp retq in (bad) add scas fmull in xor sub (bad) (bad) shll mov (bad) push rex.WX (bad) es mov sbb rex pop (bad) out jle lock sub adc cltd mov sahf ror cmp cmp xchg movsl rex.WRB or mov pop test pop lea (bad) test push xchg fistpll stc stos movabs sbb pop out (bad) divb lea sbb retq lahf mov mov add cli mov sarl cli movsb add lods (bad) mov sbb add mov sub xorl rex.RXB sub cmp mov push adc cltd (bad) rorl or xchg jge jnp cmp sbb addl lods pop push or sbb rcrb mov add (bad) out pop gs cltd mov sub or jne mov or xchg xlat push clc jge cmp loope (bad) cmp retq (bad) sti scas xchg lea (bad) scas nop loope (bad) cltd add xchg (bad) mov pop lea (bad) jl adc movabs (bad) (bad) addr32 lock clc out out mov callq lea movslq sti mov pop shl rex fld (bad) (bad) jmp push mov push test jl movabs out movaps mov ja stos (bad) enterq jle scas sbb add and sbb scas jg mov movsb sbb (bad) mov (bad) (bad) out out shrb scas scas (bad) mov mull add (bad) lods sbb test notl (bad) mov xchg adc mov add jns or faddl gs popfq (bad) and rex.XB mov xchg pop mov (bad) pop adc sbb xchg sbb or lods or rolb rex.WX js retq sub lahf rex.WX sbb or or cmp loop js rclb (bad) (bad) loop sub out pop cmp mov adc retq scas enterq sub andl sbb jle outsb gs out sbb cmpl and rcll rex.W adc int3 rex.W ds in (bad) in test std pop pop (bad) movabs add mov xor (bad) fwait pop cwtl fstpt movabs xchg pop addr32 out mov retq fistpll data16 cwtl mov movabs cmp jae iret push callq add mov sbbl sbb cmp xchg and sbb rex.WRXB ds pop lock imul popfq pop fimull pop sti jge (bad) mov xor fcompl or (bad) cwtl int3 rex.W movslq cld ror xlat and ss js xchg lcall movsb retq mov js (bad) pop push (bad) adc pop rex.XB jmpq adc mov cmp push jne fbld movabs pop add enterq (bad) shr rex.WRXB mov xchg idiv imul (bad) jg frstor xor pushfq mov rex.WRXB rex sbb sbb adc cwtl add adc jns sti pop out mov jo movabs xchg or orl mov jno jle jge in and out jae addr32 mov (bad) adc in adc repnz clc cmp jno mov movslq loop cmpsb cmpsb hlt leaveq rex mov pop mov mov movabs fs mov and pop pushq lahf add cmp (bad) loop fnstsw lret lea pushfq pop sub sub in sbb pop cmp (bad) (bad) out rex.W out (bad) mov mov pop imul add push mov movsb pop jo or decb std mov (bad) rex.RB (bad) mov mulb adc mov cmp pop addr32 in mov in lret xchg iret lret repz fildll movabs add mov or pushfq (bad) xchg xchg (bad) fistp xchg es (bad) stc pop cmp rex.RX sub ror mov callq stc (bad) mov lods mov jle jns lahf mov rep xchg mov fisubrl adc movsl sbb add (bad) movslq (bad) (bad) xchg or frstor xor (bad) movslq outsb sahf addr32 push adc mov or rex.B stc rex.R int pushq (bad) stc sahf insl negb pminub fcompl pop jp rex.WB ss iret movsl sbb and rex.B repz fstpt movsl sahf int out movl movl mov sbb (bad) mov pop mov jno rorb xor rex.W rex.RX rex.X xlat retq (bad) movslq xchg (bad) fsubrs std (bad) jge xor mov and repnz sbb sbb jrcxz (bad) pushfq (bad) pop jb (bad) (bad) sahf jns cmp shl mov fcomps rcll adc (bad) cwtl rol cmp mov xchg mov rex.RXB push movsb pavgw rex.B fmul mov rex.WR add icebp lret sbb test decb cmpsb jle mov jns shr jne ljmp mov pushfq clc xchg cmp rex.R jne mov (bad) scas or fldl (bad) (bad) sbb rcrb (bad) mov cmpsl xchg (bad) cmpsl imul iret (bad) maskmovq negl xchg or (bad) (bad) je (bad) jl add idivl cmc ds rex.WB adc mov mov (bad) loope cmp (bad) sbb (bad) scas sbb (bad) stc or mov xor rex.WRB sub xchg cmp out (bad) xchg jl cmp mov sbb sub (bad) jrcxz outsb andl addl rex.RXB and rex.WR std xorb out (bad) or or xor (bad) (bad) adc adc sub scas add and jle add callq sbb cmpsl mov popfq (bad) sbb in (bad) mov jns rcll mov jnp jmpq jmpq push clc xchg xor mov shrb movsb jns pop (bad) sbb mov xlat add add stc jmp sbbl xchg lock xchg cmp loope shll sahf sbb iret movsb cli cld or cltd fistpl cli iret (bad) lods or callq ja sbb jns xor jns pop jle xchg sbbl rex.RX lock (bad) mov cmp cmpsl mov cmp rcrb push sbb gs jo or (bad) jbe mov xchg or or insb pop es xchg insl icebp ss xlat lahf ss push mov fnstsw cwtl lret ss or cwtl xlat cmp icebp or sbb int adc out movabs rex.WRX hlt or stos sbb jns mov scas iret sbb (bad) movsb (bad) jp mov mov sbb push divl fnstsw jl loop cmp cld jle je cwtl fs test retq cmp int3 mov mov in fwait (bad) add jae sub sbb mov sbb xchg xchg mov rcl mov lahf mov mov or xchg rcll or mov adc sbb mov and fbld sbb out test (bad) pop (bad) (bad) pushq mov hlt lods xchg push imul fisttpll decb loop (bad) rolb rex.RXB int popq pop rex.WRX xchg sbb xchg jl nop mov cs nop stos test (bad) out sub movabs add or mov lods icebp (bad) lods xlat adc xor rex.RX cmpsl and int in add (bad) packsswb loop sub in xchg mov add xchg lea cltd jae imul (bad) scas xchg pop insl adc (bad) mov sub movsb movsb rcll mov ja push (bad) adc test xor repz movslq insl adc data16 pop or mov cmp outsb decb xchg outsb cmc div sub out mov pushq sbb cmc lea and sahf addr32 cwtl ficomp hlt mov repz xchg movmskps (bad) adc and rex.WX mov leaveq rex.WX lock xchg xor test add out hlt (bad) adc cmc cwtl ffree sub adc icebp xchg repnz pop out rex.XB cmp (bad) (bad) leaveq and push loope mov pop es jrcxz retq pop add fstps leaveq (bad) scas (bad) mull lock fsubs mov js and test rex.RB sahf ror movabs callq stos mov adc xlat enterq push loope popfq adc (bad) nop (bad) mov pop clc out xchg xchg (bad) (bad) movabs lahf pop (bad) cmp add xchg or lea jnp insl add (bad) (bad) xchg add xor test movabs fdivrs jge (bad) notb out rex.RXB (bad) jbe jmpq and fiadd retq je push mov cmpsl xor (bad) movabs mov or (bad) pop sbb mov scas rex or scas sbb or or xchg pop jno fstl in sub js sahf sbbl mov cmp and movabs pop (bad) push mov leaveq movabs xorl fstpl (bad) (bad) rex.RXB mov sub mov out movsl or data16 (bad) rex.WXB cmpsl (bad) pop xlat ss (bad) pushq sbb mov jrcxz push movsl outsl cmp pushfq or (bad) mov test in adc sbb jae and adc adc sbb push mov (bad) (bad) movabs sbb jmpq sbb out (bad) fsubl xor mov sbb and mov adc popfq (bad) in sbb push jl (bad) out mov rex.WXB loope sbb pop jns mov sbb add pop and xor push adc add adc outsb sub (bad) lock fsubl data16 rcrl (bad) sbb ss mov mov (bad) xchg sbb rex.WR in mov mov rex.WXB lods (bad) (bad) (bad) sub jg jmp adc je loop xchg nop scas (bad) movabs imul pushfq pop insb pop iret test mov mov sbb loope jnp fistpl pop out adc pop fnstenv rex.WB fwait out fdivrs fsubr test mov retq xchg (bad) rcl xchg xlat xor rex.WRB rex.RX or testb mov inc and js (bad) in loope mov jmp xchg jle sbb in jmpq loop cwtl in stos xchg sub add cli mov push mov mov adc mov sbb imull or out (bad) (bad) rex sbb in loope mov jne ficom pushq jl idivb addl xchg jg mov notl xchg mov adc xlat (bad) test xor pop mov rex.XB addr32 (bad) leaveq or pop add xor repz (bad) cwtl ljmp cmpsl loope test fist pop xchg mov mov movsb adc test adc rcrb cmp ds scas xlat or popfq divl ss fcomip (bad) pushq adc add jmpq test jle insl sbb (bad) data16 fistl pushfq xchg movsl (bad) (bad) retq sbb push sbb lods (bad) (bad) adc adc out (bad) in mov rex.WRX (bad) add sub nop imul jg xor leaveq rex retq xor and (bad) lods xchg stos mull (bad) jl (bad) rex.WX sbb ja int3 out rex.R mov or jp cltd in (bad) xchg out fcoml xchg add icebp movsl sub out pushq faddl nop (bad) scas cwtl jo mov int3 scas addr32 add and repnz popfq adc sbb add test jo scas (bad) jnp test mov f2xm1 (bad) push xchg jle sub xor adc pushfq jne mov int3 insl out out jns stos sbb pop je and or xor retq (bad) jns sbb jbe sbb mov popfq and xchg cmp sbb mov stos mov sbb (bad) mov sbb test pushq shrb rex.W ja out imul ja leaveq out (bad) pushfq sbb xchg jbe xchg add mov mov mov lock es repz (bad) sub je (bad) iret imulb add test andb (bad) ds es ss add sub decl rex.RX rex.WXB push add jge or popfq and insb fdivl mov push movabs pushq scas rclb cmp push (bad) stos adc (bad) and mov (bad) mov push fildl xchg push imul sbb sbb cmc outsb scas stos mov nop cmp fiadd popfq pushq xchg jb out fnstcw mov xchg push hlt adc (bad) sbb jbe popfq sbb int rex.WR rex.WXB sub add ja cld out sub pop rclq sub mov mov sbb lea rex.RX movabs movabs cltd xchg or (bad) lea (bad) out stos pushfq jle lea cmp jl (bad) cmp adc fmull cltd callq sbb xor xor sub retq (bad) xor fcomp movabs fist mov iret pop (bad) pushq fwait nop gs mov mov push rex.RXB movsb push scas (bad) (bad) adc or or mov (bad) callq mov rex.X (bad) jbe mov retq xchg add mov mov sahf addr32 or add or loopne xor (bad) mov push pushfq (bad) pop fbld push jge (bad) adc or push rex.RXB xor xchg (bad) add in (bad) mov push xor push scas cltd nop in int mov divps rex.WXB pop int out (bad) imul retq (bad) adc mov jg sbb divl test pop or jrcxz cmc lret fcomip cld in add (bad) movabs fcompl jg pushq ds sbb in sarb adc cmp rex.WRXB (bad) jns gs xchg mov imul loopne cltd movabs in xchg clc push sub adc (bad) rol add vmulps sub nop xchg retq cmp popfq add lret outsl rex.WRXB (bad) rclb (bad) rex.WRXB pop pop (bad) jb sbb xlat push (bad) sbb add mov mov add movabs (bad) out rex.WRXB sub movsl and and lret mov jno or scas xchg sub loop (bad) rex.WB mov (bad) sub jno mov fstpt (bad) xor leaveq jb imul sub ds mov mov enterq adc shrl stos rex.WRX movsl push cmpsb xchg xor sarl adc or movabs xchg es pop in mov mov imul jno xor xchg mov stos sbb xor nop xorl rex.WRX push adc (bad) mov mov movabs (bad) (bad) (bad) out sub jns out (bad) (bad) or rex mov jb and imul (bad) sbb pop orl imul movsl pop fwait xchg clc out sub addr32 mov pop cmp sbb subl pushq fistpl (bad) mov rex.WRB rex.RB imul out orl lea retq cld lret divb stc adc (bad) fadds cmp sbb adc std (bad) adc popfq pop xchg pushq stos adc (bad) pop sarl (bad) scas jb push ss lret pop jge sub int xlat rcrb cld jnp or and callq (bad) (bad) sub or xchg jl test and xor jae jno mov lahf push and std rex test xor xchg lods (bad) rex.WX hlt sbb rcl fs divb cmp xchg mov mov fisttp int pop xor fcom popfq jrcxz xor (bad) (bad) rex.WX pop xchg sub gs mov adc cmp int3 orl rex.RX (bad) mov xchg xor xchg push jne (bad) rex.W (bad) mov xchg mov cld (bad) or jmpq rex.W sbb sbb test ja rex.R push jrcxz lahf sub insb mov rex.WRB fnsave cmp xchg add (bad) rex.WRXB jne pop shll sbb mov jg mov mov sbb mov jae (bad) mov (bad) (bad) ds cmp rex.R mov sub jns fmull std and mov jp rex.WRB shll (bad) es cmp out xchg pushfq push mov fldcw (bad) clc add movsl lods pop fdivr rcll xchg push sub jmpq and xchg ja andl (bad) lea in (bad) sbb mov cwtl mov mov mov pop rex.RB pop and lods (bad) rolb (bad) cld xchg movsb fimul pushfq fistpll cld add rex.B adc xchg sbb xchg es (bad) jo push adc (bad) movabs fstp imul pop in adc pushfq pop xchg mov (bad) neg mov lcall mov ds mov sbb mov pop push rex.WRXB pushq iret clc imul adc mov rex.RX jl movsl pop and (bad) stos out int3 mov scas sbb test sbb push or addr32 jl xchg add push and sbb out insb (bad) (bad) fdiv (bad) jg xchg in rex.W (bad) cmp xor (bad) addr32 cltd xchg mov callq mov cmc clc xchg jge sub mov mov jo lea add fnsave adc (bad) icebp adc addr32 iret (bad) enterq (bad) cmpsb (bad) (bad) sub mov (bad) sub mov (bad) int mov test add mov cmp int3 ss and (bad) rex.WR cmp add sbb or sub in (bad) jne pop mov rex.W loope mov not std cmpsb pushfq push fs or sbb mov or jno,pn mov or (bad) out int xor and xchg (bad) mov xchg loop rex.WRXB imul leaveq jmp movslq mov orb jo and shrb jbe (bad) cmp (bad) (bad) (bad) cltd imul addr32 test callq xchg (bad) rex.WRX (bad) fistl fstpl mov sbb mov lods (bad) gs mov push (bad) xor pop pop jmp cwtl imul stc (bad) xchg repz stc test (bad) xor cmp (bad) lods pop sarb mov outsl push cmpsb ss (bad) mov out (bad) rol ss js cmp or rex.B rex.WXB adc cmp bswap mov rex.RXB rcr fldl lods fdivl mov push mov cmp movsb (bad) movabs js out jno sbbl retq out rcrb mov mull sub pop (bad) push (bad) mov or stos in mov or xor stos (bad) mov (bad) (bad) jmpq pop sbb stc sub mov and pushq xchg jg cmp imul xlat mov and es sbb and sbb mov scas push fcomps shll sbb in xchg cmpsl adc mov pop xlat mov push repz (bad) ror (bad) loop (bad) mov rex.XB pop repz mov push outsb cmc movabs mov mov lahf imul test movslq popfq sbb imul insl fwait (bad) rex.B repnz (bad) mov xlat (bad) loope and cmp loope mov xchg (bad) jnp fs lock iret xor loope xchg rex.R and sbb sbb pop jrcxz push repnz movsl adc pushq xchg movabs push ds rex.RXB ss or out xlat rex.B je xor sbb jmpq pop sti cmp ja idivl xchg pushq cmp jle lea sahf stos fist cmp divl js sub ficompl xchg test test adc cltd pop mov int3 (bad) popfq jg fldl pop jp outsb pushq adc adc cmp outsl jo push (bad) (bad) push pushq (bad) loopne jmp nop leaveq add and push add fisubrl (bad) (bad) fldcw movabs (bad) in (bad) mov mov jg (bad) out cs popfq sub (bad) xor adc out (bad) cmp mov in adc mov stc and adc mov sub sbb and mul adc rcl sub adc adc (bad) and stos or mov jbe pop (bad) (bad) xor cwtl sub (bad) cmpsb divb jne jrcxz add add pop pop pop subb sbb leaveq mov pop mov xor movabs mov shll mov movslq (bad) in sahf and movabs out sub sub (bad) xor movslq lret or sar pop movsb sbb mov xor popfq (bad) cmp mov pop in (bad) (bad) movsb pushq mov je or xor push xor xchg mov mov and fsubl cmp in loop xchg insb in cmpsl fsubl cmp jle loopne adc add movabs adc jmpq sbb out cs fwait idivb sbb outsb insb adc (bad) scas cmp cmp add add xchg adc rex.R ds sbb cmp (bad) xor in hlt push jae jmpq rex.X rorb mov xor faddl fcomps cmp jne mov fsub (bad) add fbstp sbb (bad) (bad) cmp xchg jp jrcxz imul mov cmp push jmp rex.WXB frstor mov xchg xor stos rex.WRX push in imul push mov loop (bad) adc or rex.WXB xor repnz icebp popfq mov lret mov pushq or mov (bad) (bad) fisttp cmp push add rex.WX ds sub xchg ss mov jbe cld or ror cmp pop test insb cmp mov (bad) pop test mov xchg xchg add (bad) mov xchg jne xlat test xchg (bad) push or pushq test xchg mov mov jne lods or mov mov cmp or outsl adc mov cmpsl je mov or dec rex.WB sbb insb lods lahf cmpsl sub outsl cwtl cmp mov mov or in add pop imul adc (bad) pop (bad) mov cmp or mov (bad) cli add (bad) mov mull div (bad) popfq (bad) lcall (bad) std insl adc cld std orb adc push mov int mov xor or lahf xor add xchg (bad) or nop sarl jno cmp mov testl lahf add sbb adc mov xchg or xchg add mov lret xchg push mov in int3 sbb hlt mov repz jp rex.WXB sub movabs xor cmp mov int3 pop push or sub lods push or sbb add fnstcw (bad) cmpsl mov mov (bad) test or retq in add sbb or std mov xlat or repz lret (bad) mov jge int idivb sbb or rex.RX rex.RB (bad) int3 and fidivrl sbb (bad) (bad) cmp mov std and fisttp mov (bad) pop mov (bad) out xor cmp xchg (bad) (bad) imul idiv std cmp xlat mov fcos cld testl es xchg lahf jno rex.WX mov mov outsl mov rex.WX mov movabs popq pop push movabs mov fcomi or mov cmp (bad) jno (bad) xor sarl or retq xor adc (bad) or cmpsb sub cmp or xor shr (bad) or jge or or ja xor shr jge je xlat in sbb cmp xlat (bad) cmp orl outsb rorb lahf sbb fcmovnb loope (bad) int and rex.WRB cs stos xor pop cmpsl xchg or add (bad) rcll (bad) fisttp or xchg std iret mov cmp jrcxz retq mov out (bad) sti fnstsw sti xlat repz (bad) (bad) jmp mov rorl adc xlat fistpll mov std xchg mov fnstcw or cmp xlat (bad) std decl fldenv cld add xchg in add (bad) decb adc xlat fstpt std (bad) rcr mov leaveq xlat cmpsl mov (bad) pop fnstsw movabs (bad) repz mov lods jmp test in adc (bad) jrcxz mov xchg rcll or fild (bad) (bad) fnstsw cmc xlat xchg rorl mov adc xlat mov fldcw fnstsw decb adc xlat lahf mov mov decl adc xlat iret mov xchg pop fnstsw loope lods mov jno ds and (bad) or sbbl or jge and lods es push mov popfq mov xchg cmc (bad) pop shll rex.WXB out jg stos int3 or cmpsl out add (bad) (bad) cmpsl xlat xchg scas out mov rex.W (bad) mov (bad) (bad) scas cli xlat sbbl sbb (bad) (bad) out mov adc xchg (bad) pop (bad) xchg fnstcw cwtl mov xor push rex.W out cmp or (bad) xchg mov add test add xchg es cwtl es push insb imul loope adc movabs stc out movabs std pushq (bad) xchg maskmovq idivl rex.XB stos rex.RB ds mov cwtl or rcrb add xchg test (bad) (bad) or (bad) add movabs scas xchg test (bad) jne mov mov xchg or (bad) cmp or xchg xchg sub rex.RB test cmp mov or mov jbe and stos mov sbb movsl xchg cmc xchg xchg (bad) xor add jrcxz pushq (bad) movabs movabs in sbb imul gs (bad) fsubrs rex.WRB pop movslq mov (bad) in insl fcomps (bad) (bad) (bad) notb xchg movabs (bad) or rex.WX lods push popfq xchg cs and (bad) pop lods lods and xchg sbb add (bad) adc out decl jp mov or lret (bad) (bad) mov xchg sbb sub leaveq mov jbe ja popfq sbb int push xchg repz ss mov xchg adcl cli je movl icebp in mov cmpsl or movabs std test pop lods or add (bad) movsl fnstcw (bad) shrl push (bad) and in (bad) rex.WX pop xor adc xchg lods and rex.RXB or callq (bad) rex.RXB or (bad) (bad) decb pushq mov movabs rex.W and or movabs enterq stos mov mov or rex.RXB sub ja nop mov (bad) mov rex.X cmp jg (bad) rex.RX xchg sbb shrb test xor rex.W (bad) pushq xchg enterq xor xchg mov in or retq pop push sbb mov or mov mov mov mov xchg mov jl lea pushfq je push mov stos (bad) sbb outsb cmp (bad) or xor sbb jmpq shrl pushq mov (bad) stos jrcxz xchg jo xchg push loop js cmp fistl mov or xor xchg cmc popfq or and sbb add sbb xchg repnz cmpl mov pop rex.R or pop (bad) (bad) or rex.W cld test fiadd imul in lea (bad) push adc frstor imul cmp sahf (bad) imul movabs (bad) cmp pushq rorl mov mov or mov mov (bad) cmc lods imul test cmp rex.WRXB leaveq imul (bad) lea rex.B movabs (bad) int or xchg rex.WX stc movabs addr32 sbb jl xchg addr32 rex.WXB (bad) jbe (bad) movabs (bad) add orb sbb lcall sarl pop out (bad) cmp xchg loopne (bad) jb and rex.RXB sbb out movsl data16 (bad) sub data16 loopne xchg cmp std rex.WB cld (bad) (bad) test in push in mov ss xor or xchg jp add int3 sbbl adc movsl (bad) cmp fwait adc mov out push sub imul sar lods lret imul popfq (bad) xchg pushq and xchg jns (bad) and pushq jmp mov (bad) adc fcomps lods es fsubs (bad) mov xchg movsl mov rclb ds mov retq es lods sahf rex.WX rex.WRXB jmpq movsl sahf sbb es fldt push xor add (bad) mov (bad) (bad) jp (bad) pop scas lods add mov (bad) fimull (bad) movslq hlt lret or xchg (bad) int3 sub xchg rex.WRXB out loope sbb cmp rex cmp xchg (bad) mov test jg xchg faddp xchg callq pushq mov repnz (bad) (bad) rorl fucom loop cmp push movsb xchg mov cltd fistp pop lods std and push or test rex.RXB mov (bad) and (bad) stc (bad) push cmp cmp in add popfq out js add imul loopne mov callq add jae cltd (bad) rex.WRX (bad) (bad) add retq rcll sbb lea popfq fs mov mov cltd vpaddsb xchg adc sbb (bad) cmp cs movabs sbb or out xchg (bad) frstor std xchg mov sbb sbb mov pop mov out iret xchg sbb ja stc in sbb in mov push callq xchg movsl lods rex.WR cmp xor popfq sahf fstl gs out mov test (bad) imul or repnz cmp adcb (bad) mov push gs or (bad) (bad) sub or adc push adc and sbb out in and add xchg cmp lea mov fcomps (bad) sti stos xor adc (bad) mov loope scas sbb pop xlat adc sarb or rcrl imul cwtl sbb cltd jp (bad) movsl (bad) xchg (bad) or (bad) insl (bad) rex.WRXB rex.WRXB (bad) xchg cltd xorl adc cmpsl stos jg int3 sahf (bad) sahf xor fldenv add or pop mov (bad) or adc jmp sub xchg fisub pop lods notl fs sahf sbb push mov mov (bad) rclb xchg popq xor jae sbb test movslq loopne out sbb sbb sbb rex.WRXB std or mov shrb fldcw (bad) sti xchg push mov xor cli sbbl imul add xor jmpq or (bad) negl push rorl push pop es outsb rex.B sbb or cld or rex cmp in cmp mov or (bad) out divl cltd jl out scas mov sbb cmp iret stc mov fldenv (bad) mov int3 (bad) jbe (bad) (bad) xor adc nop movsl rorl (bad) movslq (bad) std sbb and rex.R ficoml (bad) xor rex.WR rex.X push add or sbb mov test fbld loope (bad) lret (bad) (bad) xor (bad) mov (bad) xor add sbb movsb (bad) mov mov mov test and (bad) xor jmpq jp and rex.R rex.WB xlat sbb cmp jle cmpsb add cmp gs js add test cltd pop add cltd rcrb xchg sbb repnz cmp jb sub mov sbb sahf mov movabs xor cld add movsb cwtl data16 (bad) repz in xor xchg adc in lods add rex.X jne sarb sbb test mov jl xchg repz mov (bad) mov sbb jl adc repz mov leaveq in gs sub rcl xchg pop js cld jrcxz cmpsb rex.WRX or test loop fistl sub ja test xchg xchg (bad) (bad) jbe adc scas ss mov cmp callq scas in and std xchg mov cs mov imul int3 imul iret std jl push sub movsl (bad) callq jl jns imul (bad) (bad) pop adc fstl mov iret (bad) mov (bad) push pushfq adc (bad) sahf gs insl push mov loope sub and and jnp or mov scas rex.WRB movslq lahf push in in popfq fisttpll rcr out cmp rex.WXB jo lea pop xor and xor (bad) sub pop seta ss and push sub mov fidivr out xlat pop pop mov rex.WRB xlat sbb sbb or movabs add adc or sahf cmp pop or popfq jno int3 lahf sbb add movabs pop fisubl pushq in mov popfq (bad) xor imul popfq in sbb shll (bad) movslq icebp pop jno,pt lods icebp pop nop nop sub fs lods (bad) push (bad) (bad) int xlat lret ja out lock sub rcll insb sahf fmull pop pop cmc jae and sbb pop es mull shrl and fisubrl sbb add cmc push cmp and mov loop cwtl lret lock mov mov sarb mov idivb mov (bad) mov scas mov xor sti push xchg lahf rex.WB movsl (bad) push xchg sbb and out cltd (bad) pop popfq cli out mov xchg pop or and sub or mov mov (bad) test pop mov lea rex.WRX fldenv fldt mov (bad) movabs in xchg cltd cmp not jne mov sbb clc mov pop rex.X rex.B rex.XB bnd rex.R push cmc pop je fwait (bad) jge cli mov es push adc xchg test (bad) jnp (bad) push adc mov sahf (bad) (bad) xlat xor xchg ss pushq push mov mov test shr pop xchg iret mov rex.RB cltd (bad) pop (bad) (bad) (bad) (bad) pushq rep nop mov add mov cmp cs adc and adc loop cmp add (bad) (bad) (bad) js (bad) mov rex.WR (bad) mov test loopne adc mov repz (bad) mov mov out (bad) adc jns stos retq (bad) rex.RX int repz (bad) xchg lea mov adc xchg popfq cwtl xlat adc push mov pop jne (bad) cmp sbb cld cmp cmp lock pushfq cmp mov lret add fcomps mov add lret (bad) jo (bad) out cmpsl sbb sbb (bad) cld cmp cwtl xlat mov xchg shlb xchg jge pop stc lret (bad) ja out loopne fisub clc sbb cmp (bad) imul mov cmp xchg and (bad) mov in sbb sbb movsl rex.WRB mov adc sahf addr32 in js pop mov jg (bad) mov jge adc enterq imul pop (bad) sbbl jo rcll (bad) xchg sbb clc (bad) xchg xchg rex.RB movsl out (bad) repz (bad) jp (bad) popfq outsl retq sub xchg sbb leaveq mov js rcrb mov jo in movabs pop in (bad) jne (bad) xchg cld pushfq xchg pushfq xor movabs (bad) fdivl imul int3 shrl mov sub pushfq scas add pushq pushfq fistpl ficompl pop rex.RXB lods sbb cmp pushfq (bad) xlat idivl fimull push callq push test in data16 cmp adc pop insb rex.RX rex.WXB in mov iret sbb pushq mov leaveq sti shrl pop (bad) add (bad) out add rex.WX pushq movabs add (bad) xor or sbb out jmpq popfq add movsl clc imul outsl movabs nop xchg (bad) retq xchg test or in out cmpsl out repnz rex.WXB and (bad) jno shlb nop or (bad) mov sbb (bad) es (bad) test enterq xor lea pop leaveq clc mov pushq fxch pushfq sahf and rex.WXB popfq movsl ds mov jne rclb rex.R pushfw push fldcw push add test adc imul ficomp mov rex.WR nop or mov or sbb sbb (bad) hlt pop mov or jg loopne xor std popfq movabs movb fildll iret or mov sub sub cld imul add or jne (bad) mov (bad) (bad) jns or mov stos fsubs test outsb lods or es xor sbb add mov test push jae jnp out sarl mov lret adc adc mov stos xlat retq in sbbl sti sbb js std cmp (bad) (bad) xlat sub scas mov rex.WRX mov out (bad) xchg int xchg or and cld sub xchg or lods adc mov ss xor imul pushq or mov movsl mov fidivr (bad) add or adc push xor stos fild add insl fistpll rex.WRXB or sub fistp pop xor add jl sub (bad) icebp cmp adc mov (bad) xor sbb out movabs movsl sbb out (bad) xchg retq and cli sbb cmp xor pop rex.X pushq scas rex.WX (bad) imul hlt scas push mov and xchg loop out (bad) mov popfq or rex.XB cmpl sbb ss (bad) iret (bad) rex.WR rclb insl in cmp add out decl or lret adc test push mov mov sbb sarl sub and pop mov (bad) cwtl fdivrl xchg cmp lods sub sbb mov sbb fsubrl rex.R (bad) movsb mov mov rex.XB cmp fildl jl or clc cs cmp xor jle ss sbbl mov adc adc out jmpq mov push sbb (bad) mov jb mov fbld (bad) jmp (bad) add ror mov push (bad) mov callq (bad) (bad) clc jno mov sbb (bad) test fdivl fs jno add xor rex (bad) or fmuls xor in xchg mov mov mov mov xchg fist ds push movabs xchg mov (bad) sarl mov mov xlat leaveq mov jl pushq xchg lret scas loopne fbld sub xchg and rex.WXB cmp es lea cmp rex.WXB in sub mov insl xor jne cmp rorb fcoml (bad) add sar xchg (bad) out decl adc movslq xchg cmp imul sbb sbb std scas sbb sbb (bad) mov jbe mov out mov xchg fwait scas rcr sbb popfq cwtl cmp out rex.X sub adc (bad) sbb fs out jge sbb (bad) iret sarl pushfq movsl sub callq cmp loop add mov (bad) xchg rdpmc cmpsl add (bad) push lods mov ja cmpb and scas cmp mov mov (bad) add imul cltd adc sbb push sahf js data16 movabs popfq hlt xchg xchg (bad) mov sub mov callq sbb cld or cli mov (bad) lret insb (bad) mov jne fnstsw rcll fidivl add push (bad) sahf mov (bad) jl pushq (bad) push or mov mov cwtl sbb (bad) xchg cmp add and pop in popfq jrcxz xchg push sub sbb and outsb xchg add rex.WXB or jo cmpsb pop xlat (bad) nop mov (bad) lret adc sahf std pop mov adc scas (bad) mov insl movslq out imul fcoml setge push std push cmp push mov fistl sub xchg xlat ja std (bad) test xlat mov mov xlat adc adc pop rex.WR xor xchg in (bad) pop std xchg sub in sbb xchg loope (bad) sti sub leaveq (bad) in (bad) xchg sbb gs cltd out push outsl pop or cmc pop jne mov enterq out (bad) (bad) movslq rex.R cmp in jge (bad) (bad) or pop mov and mov jns mov sar xchg xchg out cltd scas jns push je cmp add movsl pushq lods xchg sbb jns test (bad) mov icebp (bad) (bad) movabs cmp xchg cmovb mov xor (bad) jrcxz (bad) mov imul cmp subb (bad) enterq imul rex.WXB (bad) in fsubs (bad) (bad) rex.WRX jns adc add (bad) rex.XB xchg cmp or jns (bad) insb sbb (bad) (bad) sbb add negb scas push and outsb rex.W mov rex.WX rorl cmpsb (bad) mov sub pop cltd jae mov sub xchg movabs push sti (bad) jg sbb fxtract retq adc int outsl push sub jrcxz mov and shld js xchg ror mov or pop enterq pushfq rex.RX rex.WRB jp enterq jo jmp jae pushfq popfq (bad) out movsl cmc pushfq cmp jo imul xchg fnclex xor mov or sbb sahf pushq mov mov add jbe es push (bad) sti je mov rex.XB loopne (bad) lock (bad) repz jbe test mov (bad) in test cli fdivp (bad) repnz (bad) out fstpl cltd jrcxz mov jl insl sahf mov pushfq xor rex.WR mov cwtl pop xchg mov push loope pop (bad) rex.WRX xor push scas (bad) mov jge (bad) xchg (bad) cmp in fstpl (bad) mov rex.R (bad) mov lods outsb fisttp out add xchg pop sbb mov out jge stc ss out movsl subl (bad) js scas add out pop (bad) movslq scas mov mov fstps cli rex.W add test notb mov (bad) or movslq (bad) pushfq adc cmp (bad) cwtl adc out sub pop adc xchg out mov or cmp or out (bad) cld xor (bad) mov (bad) cmpsl negl mull xchg jne,pn roll mov fs sub test (bad) fs subb xor pushq out xchg jno (bad) (bad) jrcxz rex.WX push rex.RX (bad) and sub adc (bad) xchg out fs add mov fnstcw cld test movabs lcall adc jge movabs stos xchg sub out xor (bad) mov rcl ficomp lret pushq repnz int cmpsl jle in or cmpsl (bad) movabs je mov decl mov fldl lahf mov cld cwtl sbb xchg xor imul out lret (bad) adc (bad) (bad) or fldenv repz cmp rorl xor rex.RX and cld out js rex.WRX sbb jp pushfq cltd popfq cmp pushfq (bad) out adc (bad) idiv (bad) rex.WRB mov xchg (bad) lea retq rex.X cli or mov (bad) mov (bad) pushq gs rex.RX rex.RB xchg mov rex.WB lret in leaveq fcmovne mull mov jl rex.RX data16 test jg ds (bad) mov pop and callq jmp ds jp add fistpll retq (bad) fiaddl fwait iret cmp out adc lea (bad) xchg sub adc jrcxz movsl addr32 and int (bad) sbb ds movsl sbb (bad) rex.XB fs push mov js mov iret cmp adc jmpq maxps (bad) lret or mov or rex jbe jrcxz adc frstor cmp cmp rex.WX pop es cmp mov pop pushq (bad) mov sbb add ja or imul cwtl jbe insb cwtl mov mov mov fdivs (bad) (bad) or movsl mov (bad) add std shrb xchg adc mov sahf xchg (bad) add mov in pop mov roll sub cld popfq xlat xchg rcr insb rex pop cmp cmp add movsl xchg fcomps xorb iret out mov cmpsl (bad) fistpl mov jmpq rex nop cmp (bad) xchg pop xchg popfq pop fmull out cltd and xchg adc adc iret adc cltd js je es xchg popfq push lods mov push add outsl (bad) pop jl iret orb mov cmp nop repz xor (bad) fildll sub out rex.WR xchg jl rex.WRX rex.RXB rex test cmpsl push es fstp lock xlat jle adc out cmp (bad) sbb insl rex.R ss (bad) movslq mov retq cmp push hlt rex.WRB out mov push imul xchg js ljmp popfq pushq (bad) (bad) (bad) cmp out push (bad) or movabs pop cmp rex.WRX test rex.W fwait pushfq xchg sbb imul movsb (bad) fstpt rex.RX push popfq mov jmp sbb test push pop or pushfq hlt xlat sub sahf mov ss jmpq fdivrs popfq xlat ds fdivl xor cmp movsw adc mov lea js (bad) stc mov adc (bad) rex.WR push fsubs fsts sub push out es sarb or mov xchg fisttpl add stc xor nop movsl jle mov pop out (bad) (bad) (bad) fmul mov rcl rex rex.XB imul out or sbb mov hlt (bad) ds cmp jo (bad) mov pushfq (bad) sub or adc es (bad) ds imul mov pushfq popfq in stos push js loope or and mov xchg retq insb push sub test hlt shlb (bad) push cmp or push cmp (bad) xchg cmp loope scas or lods (bad) xorl scas (bad) mov cmpsb mov mov leaveq out stc repz pushq int3 cltd and stc mov fsubrs (bad) lods (bad) stc loop (bad) out rclb test adc rex imul (bad) sbb adc pushfq stc add es (bad) fldl insb movsb addr32 (bad) pushq shll adc movabs mov cmp cli xchg push mov xchg (bad) imul loopne sbb xchg clc adc loop pop (bad) xchg jbe ror fidivr or jo es pushq ds sbb jne jrcxz (bad) lahf stc scas or (bad) xchg pop std pop (bad) mov jmpq (bad) (bad) movsl gs jae fsubrs scas (bad) sahf sbb in and push mov adc cltd (bad) sarb jl xchg sti jmp (bad) xchg mov cmc es jg jle fdivl (bad) movabs add out rex.WB (bad) lock (bad) jge pop lods fdivp ds adc or scas out fadds addr32 xchg add (bad) (bad) jrcxz icebp movabs sub xlat hlt pop sub sub mov (bad) mov cmp mov cltd (bad) pop or iret popfq cwtl pop rex.WR mov movabs mov mov movslq pop (bad) (bad) adc orl or sub movabs mov ja pushfq sbb fstl cwtl pop pushq hlt mov fs sahf out addr32 scas out add mov sbb pop mov sbb es js jmp out or icebp cwtl movsb movabs push movabs stos imul lock pop xchg rex.RX mov adc push rorl sub (bad) stos je out out xor imul movabs add test es in sti sbb movabs loop cli mov movabs (bad) addb jnp fnstsw push fcoml rex.WX rex.RX jle test rorl cmp cmp jl xchg sub repz xor xchg movsb cltd sbb (bad) xchg imul (bad) (bad) (bad) nop imul (bad) xlat cmp add (bad) sar ds movsl mov movabs scas jge (bad) xor scas rex.WRB xorl or xchg add out in sbb adc (bad) sbb xor or sbb adc add ds rex.R rex.RXB loop imul lods movslq in push pushfq loopne fdivs jno mov push jmp mov xchg rex.WB mov mov (bad) imul mov cmp jle (bad) (bad) mov (bad) adc jae mov sub sarb fnstsw xchg or stc pop (bad) (bad) adc sbb repz jno xchg shr test (bad) (bad) stc ss lahf (bad) push rex.WR movslq repnz repz fstpt mov or push adc (bad) test jbe loop jb cmpsl xchg iret push movslq lahf (bad) add insb and or cmpsb test lods mov iret movslq retw (bad) (bad) mov mov (bad) rex.WX sbb xchg adc rex adc cmc data16 add mov scas mov xchg sbb sbbb xchg or ja and (bad) loop add (bad) pop mov gs rex.WB lock rex.WB mov cmp adc pop pop movslq movl or rex.WB rex.WXB rolb mov mov (bad) callq lahf cltd sbb fistp add cld enterw int (bad) or (bad) mov imul mov popfq mov push (bad) (bad) xchg popfq enterq (bad) sahf (bad) pop movslq shrb add mov or pop js movabs mov cli lods xchg test (bad) negb add pop cmp xchg (bad) pushq sbb scas scas or mov hlt or xorb gs sbb rcrl xchg out rex in jnp jg roll lods mov negl (bad) pop xor retq paddq cld ss cmc movabs imull sub loopne jo adc (bad) sbb movabs (bad) sub jnp cmp pop add (bad) xchg jrcxz rex.WXB fist jp rorl int sbb int3 jnp cmp rex.WB rex.XB int sbb roll (bad) sarb adc out addr32 movsl pop callq sbb cmp fisttpll cmp test xchg or movsl cltd (bad) xchg fildl popfq sub adc rex.WRB add mov fdivl push pushfq cmp lret movabs je imul popfq (bad) xor jnp add sbb pop (bad) mov imul xchg pop pushq out (bad) push mov (bad) pushq rorb lahf cmp pushq frstor mov rex.RX (bad) repz in scas (bad) xchg mov mov pop xchg pop jl adc rex.RX stos sbbl cltd (bad) (bad) sti scas mov outsl (bad) movabs (bad) int3 imulb mov sbb loope shll loope xchg fxch (bad) mov jp add movabs cltd or mov pop (bad) push in mov or sbb sahf xor stc jle rclb mov (bad) cmp mov test test cli lahf in std cwtl rex adc es js movsl xchg sarl enterq and (bad) and (bad) mov pop (bad) mov (bad) or fidivrl sub (bad) sbb or (bad) (bad) out adc out lods in stos popfq and xor jns js in sahf cli jbe out ficomp mov jrcxz fwait xchg jne push movsl stos movsl push and mov retq imul xor (bad) popfq in imul retq xor rex.R fwait (bad) test and lods (bad) outsb cli pushfq or fs xor cmpl loope jge movsl repz movsl scas jrcxz loopne loop fsubr out push (bad) lahf mov andl mov mov mov jns xor in pop mov mov mov iret sub movsl jb (bad) stos push jge and jmpq sub (bad) mov cmp enterq rex.WX adc rex.RX push cmc sbb xor (bad) ja fwait rex.WXB jrcxz sbb mov outsb mov pushq (bad) movntq cwtl rclb stc or cmp and rex.WRXB rex.RX pop rolb and cmpsl xchg pop mov adc (bad) cmpsb popfq movsl or callq pop mov adc mov or stc std mov cmp mov adc (bad) sub loop je (bad) and clc (bad) (bad) imul jne fucom pushfq repnz movsl xchg movabs (bad) cmp mov (bad) (bad) xchg std mov rex.WRX sub (bad) out mov imulb shrl mov (bad) outsb add (bad) es sbb jrcxz and mov insl (bad) pushfq push in rcl add cmpsb (bad) mov insb jl mov fisubr or push sbb in sar adc out stc mov xchg add ja stc pop loopne cmpsb push sub (bad) sub pop cwtl cmpl cmp adc (bad) pushq sbb and add jle cmpsl mov pushq (bad) push test xchg lods cltd sahf sbb (bad) idivl movabs lret sub es mov popfq sbb imul cwtl mov rex.RXB adc imul or lret sub xchg pop mov xchg (bad) in mov (bad) out mov mov int3 jbe mov cmp pcmpgtb callq (bad) sbb (bad) (bad) add and (bad) or mov or push rex.WRB xor and in fidivrl xchg (bad) (bad) (bad) xchg sbb mov pop jrcxz mov pushq cmp pop add xchg loop stos insb (bad) or pop sbb rex.RX (bad) jp repnz sahf jge adc jbe faddl jg (bad) movabs movabs sbb (bad) sbb jg add cltd mov adc jp cmp push stos xchg fs sti sbb and and jbe cmp mov std mov mov pop cmp fsubl addr32 adc push (bad) (bad) out (bad) sub and or xchg fistl sbb (bad) jo pop xchg loopl mov addr32 mov (bad) repnz xchg cmp jae add mov lret mov xchg pushfq sti push mov retq je and (bad) mov pop mov (bad) cli xchg fstl mov fstpt testl pop or cltd sbb orl imul cltd mov movabs cmp lock sti (bad) ja lahf (bad) xor mov out in pop sbb xchg xor imul (bad) or push jo xchg sbb cmpsb mov js je sbb out movsb cwtl and xchg (bad) movslq mov mov loop sahf xor xchg jne pop pushq jg (bad) jo adcb pop add cmp mov xor (bad) lret (bad) mov mov lods ror (bad) outsl callq fdivl mov mov xchg std pushq outsb test in fsubrl cmp out out hlt retq shl pop or mov (bad) cmp (bad) loop pushq xchg out jg jns or rex.RXB xor sahf lea popfq movslq mov (bad) xchg mov xchg rex add (bad) sbb add fidivr out hlt test or movabs imul (bad) push idivl pop movabs movabs gs fwait sub jg adc js test pop xor mov pop (bad) fs movslq sbb jl popfq out test cmp pop mov xor in adcl pop or sbb mov (bad) xlat cmpsl add out mov and out mov add loopne (bad) shrl repz test (bad) mov or loop (bad) mov cmp vpavgb movabs (bad) (bad) sbb xor xor mov movslq and data16 (bad) (bad) (bad) cli insb mov loopne mov or cmp rex.XB rex.WXB and test and pop and adc faddl out and adc (bad) cs and sub or (bad) (bad) add mov cltd movslq (bad) add callq out fucomi pop jns,pt adc push jmpq cld rex lods nop cs loopne movabs cmpsb xchg (bad) mov cmp mov cltd sbb fildl and lods add xchg adc sub rex.RB sbb fistl mov fmull xor xchg sbb (bad) movslq lods scas lea (bad) xor xor mov jl or movslq add or (bad) adc rex.RB (bad) lea add scas leaveq mulb sbb clc adc hlt rcl mov cmp xchg and xchg (bad) out mull (bad) movsb jnp (bad) mov cmpsl mov fistp adc mov (bad) iret (bad) out cwtl callq (bad) lea (bad) fist fildl jg mov and adc (bad) (bad) mov xchg mov rex.WRX cltd rex.RX sbb rex.WRX jns (bad) rclb jrcxz xor fistpl stc push rorl mov insb mov sub repnz mov mov and push popfq xor pushfq out movslq mov mov cmp mov xor in cmp cwtl rcl or ss lods sub xor in push mov xchg (bad) test push fs sbb mov jae js mov adc (bad) imul sbb fisttp shr ficoml out pop mov (bad) outsl sub outsb (bad) loop cs (bad) jbe xchg mov cmp movabs clc jno (bad) sarb rex.B repz frstor cmp jne int3 fstl mov fimul sub (bad) push sub in mov lret mov sbb lods xchg mov sbb xor sub fcompl rex.WRB sbb repnz fwait (bad) cmpsl lods pop cwtl adc and or pop out sbb nop adc adc jmpq sbb xchg iret (bad) fnstcw fistp callq outsb (bad) cmp and (bad) or data16 pushq rex.XB rex.WR cmp mov mov sbb (bad) push mov sub pop sarl adc sub xchg lods (bad) jge add mov jmp jrcxz sbb sub add add add push lods sahf adc jg shll imul jge mov (bad) sub and fstps mov jge jnp rex.XB repz movslq jrcxz adc pop xchg xchg fisttpl (bad) (bad) jb rex.B sub or (bad) (bad) icebp push (bad) icebp add or (bad) xor je movabs loop rex.WX ss rex.WB mov cmp pushq adc subl (bad) or leaveq test xchg jne sub cld callq addr32 inc xlat es xchg adc bnd test mov and in rex.X sti pop xchg out rex.XB cmp xchg ss jns mov movabs xchg insb cmp pushq pushfq (bad) (bad) rex.WRXB es repz ds js pop notb decb mov (bad) cmpsl popfq mov cmp sarl scas jge adc mov sbb cmp or stos lret test fisttp cld adc out outsl cltd jl sbb sub (bad) repz retq lea mov add xchg (bad) mov nop add movslq shlb scas or mov rex.WXB rex.WRB imul cmp jo jrcxz sbb cmp js and jle pop movsq adc roll fst std mov out ds xchg imul jrcxz rex.XB rex.X movabs add mov js xor rex.WR xor insl enterq lods repz cmc push xor rex mov (bad) xchg lahf rex.RX jp add orb mov cmp loopne xchg rex.WX (bad) xchg out cld insl jge xchg adc sarl leaveq (bad) (bad) cmpsl rol movsl mov (bad) fsts mov cmp adc (bad) xor push orl mov movsb cmovno mov fs retq pop sbb push jl (bad) (bad) xchg mov clc sub mov jl adc movslq rex.B (bad) adc test fs cld pushq iret ficom scas clc sub in push push mov adc mov popfq adc popfq (bad) xchg movsb fnsave or sti insl xchg fcomps lret int lea mov sub (bad) mov xchg mov enterq (bad) movslq xor xchg (bad) or and popfw ss nop shlb cmp push movabs sbb jg push in and push pop in movabs nop int retq insl clc (bad) sbb xlat (bad) movabs popfq stc mov lret movsl mov rex.R in rex.WRB jmp mov sbb sub outsl (bad) lahf xor or lahf retq mov popfq (bad) jnp adc rex.XB mov (bad) cmp jns xor sahf lock or (bad) je push out fbld jbe push scas push (bad) (bad) xchg pushq (bad) sub (bad) outsl movslq mov (bad) je xor cmpsl mov pop (bad) rex.X ds mov rex.RB rcl test pushq sbbl shrl sub cwtl sbb mov loope rex.RXB adc pop mov xchg jmp lahf (bad) (bad) pop xchg popfq movabs (bad) adc cmp movabs sbb rex.WRB mov (bad) test (bad) shlb xchg or pop add fstps jp jl addr32 or jmpq sbb incb push pop xchg add (bad) (bad) pop ds rex.WR jne or rex.WXB (bad) jmp and mov loop rex.X mov add lods mov movabs mov push mov pop (bad) xchg jl sbb xlat rex.RX push int3 lea cltd or cmp (bad) (bad) jnp jns adc or and in sbb adc add subl jrcxz rcll sbb test out (bad) xchg (bad) imul (bad) mov lea retq movsl movabs repnz mov pop adc ds adc adc mov sbb jge jb sbb sbb popfq mov xchg jl sbb mov xchg sti push loop repz cmp jb sbb rex.B pop (bad) sbb xchg add xchg movabs sbb loopne adc (bad) outsl lret sbb push jb fcom xchg rex.WXB mov xor imul movabs sbb (bad) (bad) (bad) mov push lret int mov fistl std test (bad) sub fldenv hlt ds jne mov mov pop in fsubl mov jp mov cmp add stos mov scas loope (bad) fld popfq rex.WB (bad) out jle cmp in imul jo,pt cltd cltd pop in (bad) mov pop or mov mov mov fidivl xchg test sti adc cmpsl rex.X stc sbb pop xlat and rex.RXB std pushfq (bad) xlat mov pushfq shll jo movabs int3 sbb xchg repz mov mov cmp cmp mov lea cmp icebp mov or popfq lods pushfq add adc pop mov sub cwtl cwtl movabs iret sbb mov iret adcb sbb movabs pop leaveq cld rex.RX rcrl add pop pop mov sti out leaveq lea push or lods imul adc (bad) pushfq callq (bad) stos xor fistpl lret (bad) sbb mov jmp (bad) (bad) movabs (bad) pushq movabs (bad) adc mov sub mov (bad) fsubl (bad) mov push push add (bad) xchg xor xor pop jrcxz (bad) test sub adc xlat out mov mov sbb sti sbb and cmp (bad) sbb jbe xchg out (bad) rol lret lea in mov sarl cmp sbb xchg (bad) (bad) cmp jbe callq xchg sbb cltd cld xlat push pushfq (bad) scas adc (bad) sbb sbb jl push cmc push ffreep add push or or mov (bad) mov (bad) fnsave test jbe movabs lea xchg loope (bad) lea push xor xchg mov mov cltd pop (bad) fbstp mov (bad) (bad) (bad) out (bad) or pop scas rex.B ds pop sahf mov xchg mov xor lock fwait mov mov xchg jmp pop loopne iret flds xchg cmpsl lea loop sbb lret mov xlat add (bad) rcr mov mov rex.WX mov movabs lret pushq add rex.WXB pop jrcxz scas ds mov loope (bad) cld vmovmskps pop fs add out pop (bad) push mov add jmp callq rex.W xchg mov lock shl mov cltd movsl sets (bad) cmp sbb lea mov imul sbb push cli pop lret lods rex.WXB sbb lahf movabs pop mov push add movsl cmp mov pop (bad) lahf xchg test (bad) and test cltd mov jns,pn mov (bad) js scas xchg mov cmp (bad) add xor sbb mov pop jb xchg (bad) (bad) sbb scas test sub mov cwtl jrcxz rex.WRX out test mov lods adc sbb (bad) adc rex.X push rex.WRB mov rex.R add divl pop cmp and pop out jle,pn xor xchg mov sub xor mov xchg pop sbb andb mov cmpsb mov pop xchg jbe xor xor rex.WB pop callq sahf add sub (bad) or stos incl fistp mov push pop rex.X (bad) jnp mov sbb rex.RX rex.WRXB push xchg mov xor sub (bad) pop and imul sbb mov mov rorl adc movabs jge fstpt hlt and cmp mov sbb xor stos rex loop enterq movabs cmp add adc and movabs xchg imull jns rcll xor pushfq jrcxz fildl mov shrl mov or clc fdivrs es mov (bad) jle xor xchg js mov gs (bad) orl adc fwait mov adc movslq int outsb push (bad) adc push decl movsl sub test loopne add mov es mov and pop sbb pushq cmpsl mov test jge fisttpl out (bad) (bad) shrb jg lea rex.WRB xor pushq mov xchg xchg (bad) adc (bad) xlat (bad) (bad) movslq movsb and xor pop (bad) scas imul mov rorb notl fbld mov (bad) jg rex.X or pop (bad) rex.X add cmp jae (bad) mov xchg (bad) (bad) js mov movabs jbe repz or (bad) pop cmc mov sub (bad) lea mov callq jne and cmp (bad) sub fwait adc js add test outsb (bad) jnp movabs (bad) ja mov fdiv (bad) pushfq xchg xor adc ficomp imul or repnz test cmp movabs sahf xchg (bad) cmp jbe (bad) loopne pop cmp mov sbb in (bad) shrl xchg (bad) enterq mov push cld jbe or xor mov sbb or cmp in orl fwait push test and xchg mov movsl (bad) idivb popfq xchg adc js fisubr rex.WRB rex.WX sarb test xchg je mov mov mov adc pop and rex.WRXB xchg adc adc mov (bad) xchg faddp (bad) fistpll sub xlat in jo sbb std out loop mov pop movabs scas jno retq sbb mov adc sub pop cmp out (bad) test pop shll mov movabs xchg (bad) jne out hlt rex.R sbb mov rex.WXB (bad) callq lret ffreep xor xchg repz test addr32 rex.WB movabs cmp mov movslq xchg mov cmp jle adc mov or jl sbb (bad) ds rex.W cltd mov rex.X scas rol jp decb stos (bad) adc cmp outsl cmp rex.WXB out movabs and (bad) jae pop (bad) rex.W in mov movsb rex.X (bad) mov jg (bad) cmp (bad) out mov jge loop js sbb std cmp jl (bad) and fcomp loopne in sbb mov or jp mov repnz sub mov movabs mov movslq retq push (bad) out mov sbb divb lret xchg sar pop add lret movsl (bad) sbb mov stos divb mov cmp push jmp (bad) pop (bad) idivb (bad) pop or (bad) push mov mov pavgw ja popfq rex.WRXB adc out sub test cmpsl mov test popq xlat and push ficompl sbb rex.RB retq pushq retq out mov addr32 in rex.XB lock mov rex.B (bad) mov adc sahf loope sub mov adc cld mov mov xchg cmp test jae xlat and (bad) mov fwait sub adc xor add mov (bad) pop movslq or mov lret push mov pop rex.X movabs addr32 jnp rex.R mov mov and jmp es cltd mov cmp pop cmp shll mov (bad) pop cmp in and cmpl jmpq jl out rex.RX clc xchg (bad) pop (bad) movabs int3 sbb stos (bad) mov adc repnz movslq fstpt je (bad) sbb callq mov add cmp (bad) mov sahf xchg jo and pushfq pop pushq cwtl mov int xchg (bad) (bad) mov or add add pop xchg xchg pop cltd sahf sbb pop adc or cmp (bad) fcompl mov (bad) jmp popfq sti (bad) xchg rex ds movsl (bad) movslq adc imul xor rex.WRB rex.B lods (bad) lock mov lods popfq rex.X rex repnz rex.WRX ja iret xor sti in icebp adc cld enterq ss cmp (bad) out rex.WXB add mov orl test sbb xchg add sub jae jmp cmpsb scas (bad) mov lock (bad) andl retq cmpsb mov out mov (bad) cmp xchg cmpsb lahf add stos rex or cmpsb std jl cmp xchg std loope mov sahf stc rclb mov int (bad) add and adc sahf xchg cmpsl mov test in lea xor or jae mov iret pop (bad) std outsl sbb retq lods pop sbb (bad) (bad) cltd add adc (bad) mov nop mov (bad) popfq xchg sbb mov pop popfq out idiv xor pop cld imul (bad) (bad) mov out rex.WB adc js xchg stos or sbb (bad) lret (bad) xchg xchg adc loopne xor rex.XB pushfq movabs scas in mov stos decl mov (bad) or movslq movsb jp insl mov xorl xor (bad) push outsl push sub movslq xchg xchg mov mov (bad) out pop mov push or cmp mov rol (bad) mov mov and (bad) push (bad) movslq stos (bad) mov push pop sub or xor mov (bad) (bad) mov sub (bad) loop mov repz mov insb sbb (bad) rex.WXB pushq movslq retq xor jl and out add jns (bad) cwtl out cltd cltd (bad) fist or or lods pop fwait adc cmp enterq adc in mov sbb pop (bad) or idivb pop (bad) adc fsubs insb loopne (bad) xor lods xchg mov mov out mov addr32 adc loopne mov mov mov mov mov test cmpsl sbb xchg rex.RXB push repnz mov rex.RB xchg fisttp pop (bad) mov sub sub orl shll in fincstp (bad) xchg sbbl out cli sti pop mov adc adc xchg sahf test sub sti imul and mov mov sti xlat xchg callq jrcxz seto jb fbld outsl sti fadd movslq cltd pop (bad) cmp or pop jl in sbb out add test movabs xchg fs rex.RX jg test add (bad) hlt sbb shrl (bad) mov callq imul pop iret sub (bad) jno retq repnz xor (bad) rorb rex.X sahf pushq repz mov and mov (bad) cmp cs pop sub lods ds sub jl or (bad) movabs (bad) scas (bad) (bad) cmp out repz mov mov sbb rex rex.WRX test adc lahf bswap cmp (bad) xchg sbb test xchg adc idivl sar sbb (bad) iret and adc pop insl sahf mov jno mov (bad) out xor (bad) xchg add std (bad) mov sbb xchg add rex.RX cmp (bad) adc pop (bad) jae test retq push movslq fwait xchg mov xchg lahf stos inc loop movabs adc data16 pop mov or add movabs mov sbb jb add or pop cli addr32 mov or sub xchg std lods add stc rex.WXB xchg sub jrcxz mov xchg mov and sbb xor adc mov mov imul mov lock sbb test fnstsw mov add mov clc (bad) nop adc mov shlb (bad) cltd out adc xchg roll mov jg add movabs (bad) jno lock repnz sbb mov out xchg xchg sahf out xchg outsl outsb rex.W (bad) cwtl pushq rex.WXB sbb lret stos sbbb or gs pop xor rex.XB mov cmc fstps scas movsl sbb (bad) scas (bad) icebp cmp cmc js jns and and es or mov (bad) xchg test add iret test pushq popfq adc adc xchg add jge pop mov cmp rex.W std (bad) mov lret test (bad) fcmovne push (bad) sbb adc movsl xlat (bad) in cs decb ss cwtl push push adc (bad) xchg cmp movabs or adc divl lods movsb stc adc xchg rex.XB rex.WRXB xchg in notb sahf rdtsc mov push mov adc jo rex.WRB (bad) divb negl mov ds clc xchg jns je addl sbb mulb subl pop (bad) pushfq push and pop and or pushq sub sarb addr32 xchg (bad) jg cmp (bad) xchg (bad) retq clc (bad) test xchg adc pop rex.WR mov frstor scas (bad) rex js (bad) rcll xrelease in (bad) sbb rex.B or rcll rex.XB mov cmp sbb nop adc lahf loope and push sbb movslq stos cvttps2pi pushq in rex.XB pop cmp cmp imul sbb push stos or cld adc jno sbb hlt cmp out shrl push cmp sti or fildl xor (bad) xchg fdivl pop and (bad) jle loope mov (bad) sub test fstpl mov adcl xchg (bad) stos lea xchg retq imul lock (bad) stc xchg imul jns push add push mov add je movsl xchg mov (bad) lods std mov adc rex.W rex.X outsb and shlb xchg pushq jrcxz xor cmp data16 jrcxz add sbb adc rex.WB mov fwait popfq movabs stos rsqrtps and mov mov xchg shr xlat pop add mov sub orl int3 rex.RX enterq rex.WX retq cmp rex.WRB repz add je loope gs lods xchg or sahf sbb loop fadd movabs xor xlat adc fidivr adcl (bad) subl cld xchg es push push sbb and (bad) shrb fiadd xorb adc pop add imul rorb (bad) shrl mov test or sbb popfq leaveq imul mov lods adc pushfq fsubrs mov mov push sti orl push rex.XB pushq ss mov sub sti add clc cmc or add cmp fist (bad) movabs or clc repnz leaveq stos loope rex.W and movabs test retq xchg sub mov lea out lods jns and jbe orl loopne lea bnd (bad) mov (bad) rex.RXB push mov rex.WX sub xlat jbe pushq jmpq outsb stos in test rex.RX rex.W fwait pop and and pop pop cmp insb mov mov jp mov movabs rex.WRB rex.RXB (bad) (bad) sahf repnz xlat xchg (bad) in loop lods (bad) mov push xchg adc sbb xchg rex.B pushq test (bad) sub jle or or jge mov (bad) fs push hlt xchg popfq (bad) outsl loop xchg mov cmp loopne loopne (bad) hlt mov test scas (bad) cmpsb rcr mov sbb xor rex.R xor sub lret sub sbb mov jno (bad) cmpsl mov (bad) xchg pop add jrcxz xchg (bad) (bad) pushq sbb outsl std mov vmovd add ds mov jnp rex lea movabs pop jrcxz cmp pop movslq add push (bad) js retq fs mov or (bad) mov lret (bad) xor rex.W lods scas icebp sub (bad) mov (bad) es lock sahf (bad) outsb sub push in jb jrcxz,pt sahf mov xor xchg mov (bad) sbb clc add pushq fsts jle cmp pop test fisubl imul movabs out sbb sahf xor pop lea stos rex.WXB rex.RX sub mull test sub mov xchg mov sbb cmp mov pop mov sub repz hlt pop adc xor loopne push lret rex.RB stc out xchg rex.RXB pop cld xchg scas xchg rex.WXB mov outsb imul repnz (bad) jbe mulb lea (bad) push sbb cld sti jne jnp js (bad) loopne cmpsb sbb add cmp repnz adc cmp (bad) sbb and movabs jbe rex.WB xor js rcrl shll lret (bad) movslq sbb cwtl retq fldenv enterq push xor test xchg push movabs push (bad) pop jb sub stc cmp movsb movabs (bad) mov mov fstps add sub sahf mov xor xor nop (bad) xor bnd rex.WRX rex.W xchg mov (bad) retq push mov mov (bad) pop fs xchg mov xchg lods (bad) cmp mov callq cmp mov sub cltd mov xchg jl add push mov fistpll sarl mov movabs outsl mov lods cld mov hlt idivb jbe lods jae cmc push mov mov (bad) mov nop sub repnz add hlt jno mov and cmp loope movabs faddl sti cmp test mov xor movabs repnz jne int mov jp retq (bad) retq jbe movabs cmp (bad) add pushq movabs (bad) callq rorb dec fldcw rex.RX rex.RB rex.WR jmp rorl ss fistp xor in fcompl mov jg jp mov mov cmc fldcw xchg (bad) mov movsl callq add mov nop or cmp (bad) jnp xchg mov xor test (bad) mov pop rex or xor sbb cltd cmc (bad) rex.W mov sub xchg xchg cmp sub (bad) (bad) sub mov xchg or lea cltd mov lea jl sub mov (bad) retq xor mov (bad) test (bad) addr32 sbb js xchg pop rex.WB scas (bad) mov sub cmp out mov out outsl or jrcxz sub int (bad) enterq jrcxz stos imul mov (bad) push rex rex.WXB pop popfq (bad) pop pop xchg cltd (bad) rex.WRX or cmp pop in movabs cs (bad) push bts (bad) cmp test outsl imul lahf jo cmp loop lock stos rex.WRXB (bad) out (bad) sti test pop rex.WR adc int test mov js fdivl (bad) cltd jl lahf mov mov push sbb icebp scas rex.R es mov lods (bad) out mov (bad) add (bad) (bad) rex.WRB jnp ds (bad) iret xchg insb mov gs rex.WRX popfq test or movslq xchg jnp pop lret cmp mov cmp and std mov and rex.W mov xor cmp cld sbb lods int sbb add clc fucom (bad) leaveq mov lahf jnp leaveq enterq out rex.RXB (bad) cmp hlt jmpq add pushq fwait mov push callq xlat js jb xchg out (bad) loope hlt movsl (bad) cmp jl (bad) lcall (bad) shlb push jp test fsubl movabs js (bad) rex.WX sub mov movsl insb rex.RX addr32 mov mov adcl lock jrcxz rcrb (bad) pushq mov clc cmp (bad) (bad) cli rorb cld mov cs mov and (bad) mov cmp mov movabs mov xchg fbstp out in sub pop movsl or mov (bad) in cmp xchg rex.WRX mov pushfq mov mov jle fdivp rex.RXB stos mov outsl mov divb mov jnp mov (bad) rex.WB ds nop (bad) sbb xchg scas (bad) fisttpll movsl iret loope rcrb cmp pushq mov mov fstpt movabs popfq mov out pop pop (bad) (bad) mov push rex.WRX and cmpsl in mov mov rex.WRX (bad) pop movabs imul rex.WX scas add and adc or add (bad) faddl (bad) (bad) imul sub cmpsb xor mov mov decb add insl movsl jp in mov xor loop in loope jge scas sub lahf sbb rex.RX sub mov mov jge lods lret out (bad) iret mov (bad) rex.B rex.RB pop sbb sub data16 icebp mov sbb jb lods (bad) mov jrcxz rorl or (bad) xchg stos or pop rcl sub sbb rcrb movsl imul pop (bad) sbb xchg sbb adc decl lret mov sub add out jbe sar jmp iret (bad) pop rex.X (bad) out movabs loopne es rcl int3 mov mov cmp fwait xchg add (bad) mov (bad) jge fcmovnb xchg sarl (bad) cmp sub lea or cmp out movabs push or jo je push sahf cmp and and rex (bad) mov jmpq pop lret out mov mov imul repnz xchg rex lahf (bad) cmpsb mov sbb sarb movslq or sbb xchg movabs mov (bad) mov rex.WRB iret cmp mov (bad) pop add (bad) insb cld xchg imul and (bad) xchg int3 jp rex.WX rorl rex.RB int3 and mov ss lret mov (bad) xchg notl xchg fstpl rex.XB fs loopne gs add popfq addr32 movslq movsb or push je mov loopne sbb movabs mov lea adc data16 fsubp (bad) loop pop (bad) pop retq idivb (bad) mov jg mov mov sub js scas test movabs (bad) sbb add mov xchg lods (bad) lahf es sti adc cmc data16 movabs mov je or sbb (bad) mov js cmp and imul jp (bad) or fwait nop movslq mov adc xlat stos insb cmpsb adc outsl popfq scas or (bad) (bad) iret mov jmp pop stos test xchg mulb adc xchg or xchg cmp cmc pushq popfq lret fldcw lea xchg cmp (bad) lret test pushfq or mov test cmp ds (bad) (bad) mov out add sbb test pop xlat int scas out (bad) sbb leaveq ljmp rex repz mov and jl pop sbb (bad) (bad) fsts popfq add mov mov cwtl movabs rcrl jmp or sbb xchg std pushq xchg mov rex.WR callq (bad) sbb mov mov xchg mov adc add cmpb and lods and mov adc je sbb or leaveq mov stos in pop (bad) pop and fstpt sub mov (bad) mov out sub sbb xchg mov scas mov xor scas push loope stos rex.WRB pushq popfq (bad) (bad) xchg hlt loopne fnstenv enterq cmp cmp cmp adc mov pop xchg xchg mov mov pop xchg pop ds (bad) (bad) data16 (bad) mov jmpq pop icebp and xchg lea sbb mov (bad) mov rex add and imul xchg mov adc push adc movabs (bad) mov jg jnp cmp pushfq or cltd cmpb mov add (bad) xchg mov mov xor cli cmp rex.WRXB xor push jne mov mov subl and sub movsb in std sahf or (bad) mov sbb add adc mov or hlt movsl rex.WR mov adc cmp insb sub pop pop (bad) jrcxz retq and addr32 in (bad) jmp cmp push xchg rex.WRB je rex.B or (bad) fdivrs (bad) mov (bad) (bad) or lods ds pop test add fcmove fnstcw (bad) cmp rol test notb movabs rex.WRXB jns jle adc pushq mov (bad) add adc (bad) jmp andl movabs pop xchg pop and pop lret test xchg andl loope lods movabs rex.WRXB cmp pop in fnstcw mov mov rex.WRX (bad) xchg (bad) iret in sbb adc pop cmp sbb pop sub xchg clc xchg add movabs or test jb (bad) xchg int3 pop js fild rclq rex.WB fs (bad) in and rex.WRX pop xor (bad) sahf sub xlat push cwtl out stc (bad) popfq cmp xchg out fcompl sbb negl sbb xchg xchg sbb add adc (bad) cs xchg out jrcxz (bad) (bad) es cmp jns loopne or sub movsl or repnz (bad) adc stos fcoms pushfq add and repnz out jp out rcll pop xor in repnz js idivb outsl lahf lods cltd pushfq js adc jbe imul mov or mov (bad) mov push pop out test add push stos mov rex.X xchg fstps adc xchg push mov and or mov xor rex.WXB pushq sub fistpl sbb pushq int3 scas adc or movabs sub sub mov rex.XB scas std xor (bad) cli es rex.B sbb movabs sbb (bad) mov cmp fnop or mov adc adc idivb idivl clc (bad) fdiv sbb (bad) lea pushfq test xor jnp push andl sahf lea popfq std xchg mov cmp outsb xchg and or or or xchg mov fcmovbe cmp xchg pop popfq add mov (bad) out sar add loope xchg (bad) enterq xchg (bad) in (bad) fidiv xchg loopne icebp cli icebp push vsqrtsd (bad) sbb xchg sti push std rex.RB lods retq sbb scas sti xchg pop rex.R nop loopne iret rex.W rex.R (bad) cmp lahf xchg mov mov callq jle shll and xchg pop stos and mov adc (bad) lahf mov mov popfq adc stos nopl mov movabs fstpl fldt (bad) mov mov gs sub mov outsl (bad) pop mov repnz in sbb iret sbb rex.XB rex.WRX fnstsw icebp js mov je fldt jle xchg xchg fistp lea or imul (bad) sbb sbb xchg jmp sub cmpsl (bad) and (bad) lods (bad) rex.RXB addr32 pop pushq cmp cmp mov adc cmp mov (bad) rolb mov out (bad) pop mov or rex.RXB xchg add cmc js (bad) (bad) test mov movslq sbb lea fldcw cmc (bad) (bad) cmp int popfq (bad) cmp pushq rex.WRB loop int (bad) rex.WRX rorb add sub movslq cmp cmp mov push lahf mov cmp movl (bad) xlat xchg lods lahf sbb ficom (bad) jns movabs adc mov je mov sti (bad) lcall adc pop cmp enterq hlt in add xchg jae mov sub test mov or cltd (bad) cmc sbb sbb rex.XB jp cmp or or and lods loop mov lea rex.B (bad) std shll or mov movsq or xchg (bad) out pop loop repnz adc (bad) movabs out jp xor mull pop cli lock xchg mov (bad) (bad) (bad) fbld pop out js movslq (bad) in mov cld loopne fnstcw (bad) movslq mov sti hlt rclb mov xor pushfq cmp movabs movabs and jns addr32 sub mov (bad) xchg (bad) loopne mov jl rex.X je jne fstl movabs jrcxz or cmp or xchg rex.WRX ficomp out sbb in test stos or mov movslq (bad) lods mov push andl (bad) mov mov leaveq rex fs xchg (bad) (bad) adc int3 mov adc popq stos xor cmp in retq es (bad) xchg mov fcmovb xchg pop cwtl mov cmp rex.RB popfq jl fistl cmpl js (bad) rex.R cmp pop repz sbb push iret or push (bad) cmp mov mov sub add mov (bad) movsl adc and adc (bad) out jmpq mov retq xchg (bad) js jge int3 sbbl mov out sbb sub and fidivl int jne loopne cld mov rex.W mov cwtl sti xor (bad) retq or movabs or js in int jne in lret sbb sbb (bad) je lret add fldenv rex.XB gs mov pop and sub mov movsl or mov pop sbb nop cmp adc mov xchg (bad) (bad) (bad) (bad) test cmp retq sbb stos jbe or cltd test movabs cmp cmc add sbb rex rex.WR rcll mov clc push mov (bad) mov lea in mov jbe callq add sbb pop xchg inc (bad) js xchg (bad) in (bad) rcl mov (bad) jle ds addr32 (bad) cmp imulb mov test or orl cmp (bad) (bad) jrcxz,pt push xchg (bad) movabs jrcxz retq imul (bad) popfq cli es shr add (bad) popfq jrcxz stc push repnz (bad) push rex.X jl add shlb mov xor xchg loopne repz js jrcxz mov add and pop (bad) movslq fiadd stos jne int3 rex.RB cmp jne (bad) fidivl or or mov adc (bad) (bad) loopne jmpq push or mov pop mov ja rex.WR enterq jbe (bad) std enterq push or and (bad) loopne (bad) add test rex.RXB scas sbb xor push mov test (bad) xchg and adc cmpsl stos repz es or in cmp outsl xchg pop movslq popfq rex.W jo (bad) mov lcall (bad) push xchg jrcxz loopne addr32 xor callq fstp adc pop jne retq push rex.RX (bad) xorl mov or push xchg xchg or rex.R rex xlat fstpl cmp sahf xlat cld movabs (bad) jle,pt sub pushfq sub pop pushq push (bad) pop rex.WRX sti pop pushfq cmp in scas mov or insb lods lods vdivss cmc sub xor xorl mov push lea xchg mov movabs test and push mov (bad) (bad) fucomi jne out xor xchg ss mov xlat add hlt (bad) mov cs jmpq jns in fwait xchg (bad) sbb out out and or push mov add or leaveq xchg scas pop xor popfq mov add mov sbb pop and sub sbb cmp push cmp gs or sub and cli insl negb mov outsb (bad) xor (bad) scas jns (bad) mov adc or adc pushfq jp mov adc jo rolb gs push int3 (bad) (bad) mov jo lahf sub cmp jle js in or add (bad) push insb (bad) scas (bad) (bad) movabs mov pop mov imul lods (bad) mov (bad) cmc push xor xchg fstpl lret mov mov rcll xor mov xchg xchg (bad) sub mov rcll xor mov imul jrcxz and push (bad) cld rex.RB pushfq jmp callq xor in (bad) xchg sti std adc (bad) movabs pushq mov test retq shrl std (bad) (bad) mov xchg (bad) es cli sub push or (bad) xchg xchg loop xchg (bad) ja in mov rex.WXB xlat outsl pushq mov push adc mov jg jp,pt xchg fcoms and pop movabs mov movsl mov out or pushq rex.RB gs xor lods (bad) lahf jnp or rex movabs or out in movabs je out fnstcw ds sub sti int sub xchg movabs xchg in xchg mov fisubr stc (bad) ja jmpq xchg rol jnp stos pushq test ss hlt popfq out mov xchg sub cmp sub faddl mov cmpsl hlt pop movabs mov sub adc or ja or jmp (bad) sub (bad) xchg (bad) (bad) (bad) mov notb lock lret test mov (bad) sarb loopne xchg retq (bad) fiaddl pushq mov jmpq subl hlt push popfq int and loope rcrb jo mov cmpsl xor (bad) mov (bad) out js xor scas fistp cli xchg mov mov out rex.WRB mov sbb insb add add sbb jmp fisubrl mov in adc (bad) in sti lods out test cwtl idivl mov ffreep (bad) (bad) shl (bad) or mov in add mov adc cmp jl push jae sbb fstps test push cltd (bad) xchg mov pushfq cmp sar loope loope sbbl adc es lock cld cmpsb jmpq rex xchg (bad) sbb sbb ds or fild jrcxz push fistpll mov jns in es imul cltd mov (bad) pushfq mov sbb loop cltd loope mov mov sub sbb xchg add callq (bad) cmpsl (bad) movsb iret jmpq (bad) mov movabs jo xchg in push xor mov (bad) lods xchg or or (bad) mov and mov sbb (bad) rex.WRX mov fs jle jle rex.XB fildl (bad) sbb xchg pop pushfq retq adc lea test lea add lods mov sbb lods mov (bad) callq scas mov mov or lods mov mov shrl fidivl movsb pop shr cmp pop mov in lods out jmpq in (bad) fbstp loope pop pop ljmp pop mov lea std push pop and and and lahf or jbe cwtl jb stos shr imul sbb movabs (bad) leaveq push cmp (bad) andl push imul rex.RXB add xchg or xchg push push cmc xorps rex.XB (bad) lock jns lret cld and xor rex.WRB push lret in adc sbbl lea or (bad) xchg je rex.WRX lahf scas fnstenv mov adc xchg rcrl loope xchg (bad) movslq or pop (bad) push mov (bad) retq adc push pop int sbb xchg pushq xchg insb sahf pushq mov (bad) mov xchg (bad) fdivr xor repz lods movsl js cltd rex.WXB adc movsb jl (bad) mov xchg in fcoms xchg (bad) or xchg mov int xchg mov xchg in fdivrs xchg (bad) or xchg pushfq push mov adc sbbl or and mov mov mov shll movabs mov mov rex.R fnstsw or ds leaveq ds rex.WRB rex.R ds mov movabs mov xchg (bad) mov mov xchg rorl pop std std mov and sbb repz cmc in out (bad) cmp mov xchg out jmpq or and adc in loope movabs sbb xchg mov xchg in (bad) xchg xor or xor rex.R pop push add and xchg mov test loopne add rex.R ficom add (bad) xchg mov cmp xor push fcompl jmpq pushq xchg (bad) frstor or mov roll cltd int3 in out or mov fidivl sub int3 fist (bad) add loopne pop adc js shrl (bad) add push jmpq or rex.WRX sub adc mov test scas in xchg scas xchg (bad) pop std cmpsl add movabs xchg (bad) pop xor (bad) rex.RB xchg gs pop xchg addb sbbl push xchg mov adc movabs sub ljmp jle pop data16 xchg mov (bad) xchg mov int3 push test xor mov xchg scas (bad) adc retq movsl repnz (bad) int pop retq add jns cs lods sbb addr32 mov adc add add ja or out jmpq and stos xor push jns addr32 jle repnz jb mov pop enterq lret and sti sbb ds cmp mov imul sti jg add enterq sbb icebp in fldenv jmp pop iret jnp vpshlq push lret xchg adc jmpq scas (bad) movabs vpshaq jo lods cli lods cmp rex.WRX push test outsl mov idiv (bad) dec jp ror mov (bad) and (bad) scas mov adc stos pop cmpsb (bad) cmp cmp mov movabs retq pop pop xchg xor (bad) orl rex.RXB (bad) mov sbb add bswap popfq lods (bad) icebp push repz lahf adc and fwait imul lods push cmp jmp stos es negb adc (bad) mov push icebp rex xor cmp lahf movslq (bad) push pushq fldt scas (bad) jne and in idivl rex.RXB xor out loop clc std jg jge (bad) movsb movabs jne sub pushq ja (bad) mov add rex.WXB xchg imul pop pop xor lods int rex.WRB test sbb nopl (bad) repnz mov rcll (bad) rorl or fwait cmp mov test xchg fs cmp repz (bad) adc sub add std mov pop std (bad) cmp (bad) test cmp pop and pop andb jle add cli cmc imul shrb or cld jl hlt cs xlat and or xchg in sbb out hlt jno or out rex.WX and int3 cmc and stos imul lods or mov movabs xchg cmp out loope xchg sbb js mov test lods int test mov (bad) stos cmp rclb enterq mov cli lahf xchg and adc std add in nop cmp mov (bad) xchg push fnstenv cmp insb xlat cmovge pushq test hlt xor xchg lods mov mov insb pop popfq fildl sti je test rex.WR fstpl out add push fcompl (bad) nop add cltd xor push imul cmp jb mov (bad) jrcxz xor out (bad) lods (bad) mov rex.RXB lahf rex.WXB (bad) rex.WRXB mov loop mov and push rex.WXB rex.R rex.WRXB lahf mov (bad) fst repz add retq lock xchg jb movabs fcompl mov jo cmp rclb jb popfq sub (bad) nopl adc js mov mov out mov in test fldcw sbb hlt fwait (bad) lock (bad) flds xor mov in lea mov (bad) rex.WX pop (bad) xchg jns xor rex.WB test or and mov xchg push xor cmp rex.WRX cmpsl adc xor xor and mov cmp mov mov (bad) sub push add rex.WX mov sub rcrb or sahf insb ss stos shrb xchg (bad) cwtl pushq push mov jrcxz pushq movabs out cltd callq loop andl lods adc movabs push rex.W repz stos xchg and retq jo in (bad) cmp mov imul jrcxz insl in mov xlat jno rcl mov not xchg lahf mov pushfq movslq mov adc and scas in xor or movabs (bad) (bad) xor callq jle xchg push xchg (bad) in push icebp scas pushq cmp xchg jl sbb (bad) xor cli mov (bad) cld cs xchg xchg cltd ds mov out add xchg jg scas (bad) cltd push or mov insb xchg out ss push (bad) push (bad) gs (bad) xchg cltd xchg rcll mov cmp (bad) rex.RX lods mov lret cmp roll movslq adc or rex.WRX movsl repnz xor lret (bad) movslq lret push movabs lret (bad) or je (bad) sti rex jmpq add callq sahf (bad) xchg xrelease test cmp retq in out sub pushq outsl cmp sahf loopne (bad) (bad) fndisi(8087 xlat ds rcrl (bad) jnp jno (bad) lods add (bad) lock popfq pop sbb fs jle mov nop mov add pop sti mov callq rex.X movabs repz xchg mov retq enterq enterq rex.RX xchg fnstcw xchg xchg (bad) js push in fistpll imul and (bad) rex.XB mov loope cmp push movabs lcall rex.X movabs xchg push mov inc xlat mov (bad) xchg mov std in jmpq sub (bad) je je xor pop imul loop add shll in retq retq (bad) sti lods rex.WB mov in xlat jns int3 leaveq mov leaveq outsl xchg fcompl loope jle punpckhdq (bad) stos (bad) sahf sbb retq loopne (bad) mov mov sbb xchg pop (bad) sbb mov xor xchg sbb xor outsb (bad) loopne mov fnstcw jbe push push and sub shr sarb pop cmpsl mov insb mov test mov mov loop ficompl popfq cmp rex.W icebp sbb jl jns test sbb pop and loop sbb lods test pop movslq lods incl xor ss adc xchg jrcxz lods pushfq sbb cmp loope mov ss adc loope mov sub pop mov sbb lahf (bad) mov xorl in xor mov sbb cmc (bad) cmp sahf mov notl mov xor ds ficom (bad) sahf jae pop (bad) xchg std ja movabs (bad) iret lret mov sub and cmp cwtl or push xchg (bad) fidivr shlb (bad) pop xchg xor mov sbb movslq sahf mov fdivl fdecstp rex.WXB adc notb mov ss xor int3 (bad) xor sbb mov cmp lods xchg mov sub cmp rex.WRB (bad) (bad) jp mov popfq jnp rex.WRXB addr32 mov pop (bad) sub add push test gs callq and xchg rex.RX popfq pop test shl test adc out int lea push adc fild loop out lea sahf sbb sbb (bad) (bad) rex.X pop cmpsl ja es test stos pop mov lea pop mov (bad) and stc xchg cmp retq cmp mov test adc xchg loope or (bad) (bad) add (bad) out rex.WRX jl int je cmpl xchg movsl mov test xlat xor mov lock rex.WX rex.X jbe sbb sub adc mov cmp cmp xorb rex.X mov and adc outsl xor or and mov mov sbb (bad) add scas pop rex.WXB movabs repz shr pop add sbb add incb xchg (bad) (bad) (bad) fst sbb sbb fcoms movsl cwtl mov xor fsubl outsl ja xchg pop add cltd vpmacssdqh enterq (bad) jnp (bad) fstpl (bad) or fstl insl mov jb xor popfq add rcl add popfq push pop cltd push mov pushq fstp mov mov add push pop or imul nop retq (bad) xchg sbb (bad) adc je rex.WX mov cmp adc mov jns sbb icebp (bad) imul mov mov xor icebp rex.W (bad) mov push std pavgb rolb js callq cmp repnz nop (bad) mov (bad) mov and sub mov (bad) subb lods xchg push rex.WX icebp mov fcompl and nop lcall lea mov rex rex.XB scas pop cmpsl mov negl loope rcrl rex.WRB (bad) (bad) xor sbb xchg adc jl adc jge pop mov (bad) popfq callq jp js jg (bad) out or (bad) adc je rex.X adc (bad) jne xchg sti (bad) push push jp pop or js cmp cmpsl xchg stos rex.WRX cmp sbb cs xor cwtl and jne rex.WRX cli lods mov retq negb cmp movabs imul mov rex.WRX movslq sbb and sti in fnsave mov (bad) xchg mov rex.X cmpsb fstpl ds fstps mov cmp xchg lods (bad) adc nop pop inc out jrcxz sbb out popq push mov xchg xchg xor vpmadcsswd test cmpsb push mov ss (bad) cmp (bad) (bad) jnp mov mov lahf test js or (bad) retq mov outsb add rol in jrcxz or movabs (bad) gs mov loope mov xchg sub xor mov lret iret test xor clc repz pop stos cmpsb or movabs cmp (bad) mov jo retq mov push cmp test loop ja mov and outsb retq (bad) (bad) out or cmpsb jl (bad) xchg cmp and test lods add add mov (bad) mov in mov rex stos fistpl mov rcrb js xchg and test shll xchg movslq mull pop (bad) test fist addl cmp lea fdivl xchg hlt xchg jns mov xchg imul scas xor cmp loope sti mov movsl xor js movabs and shrb clc scas (bad) push cmp jo in sub push movabs sub loope retq sbb scas sub idivl in mov rex pushq ljmp jge (bad) mov pop rex.WR cli xlat insl fidivrl sbb lahf xor pop leaveq jle fucomp xor push (bad) out add xchg pop popfq movsl add cmp mov push je cmp rex.WRX iret jl mov sarl cmp clc or add and push (bad) insl mov movslq stos rex.WRB xlat (bad) pop xor movsl mov retq sbb and sbb and movsl ss rcrl int adc jb idivb pop rex.WR xchg add out cld add cltd movsl sbb es xchg icebp incl cmc mov xlat (bad) rex.WR test jmpq cwtl mov (bad) popfq sub (bad) (bad) or mov pop cmp fs addl pop cs shl or shlb sbb rex.WB rex.XB ds push shlb mov jo mov mov adc mov mov (bad) jnp cli scas and xchg xchg cmpl mov pop lock lcall in mov xchg (bad) icebp xor cmp and xchg (bad) (bad) fisubl mov rex.WXB push insb push xchg mov xchg (bad) sub mov (bad) cmp (bad) and lods (bad) (bad) (bad) xor cmp loope mov mov test pop jo (bad) mov adc mov int pop sub cmp in pushfq pop sub jg xchg pop cltd push sbb sbb cmp sbb lods enterq repnz fist xlat test loope and (bad) or incb (bad) cltd js and jle std sub or sarl (bad) rex.W andl (bad) jno cld xor lahf cwtl cmpsb rex.RB stos out fs cmpsl repz movsb and iret mov sub rex.XB cmpsl cwtl (bad) iret notb mov pop repz xlat movslq insb je add (bad) pop scas cmc mov pop ficoml movsl xchg (bad) out or xlat rex.RX ss push or sahf es (bad) gs stos and int sbb fldcw movabs adc (bad) cmp (bad) mulb mov nop movabs sbb (bad) xor and enterq adc clc sbbb cmp add out jg or xor and (bad) out mov mov cmp flds xchg cwtl loop or mov ds (bad) add nop add mov loop (bad) sbb xchg loope (bad) mov cmpsl (bad) adc pushq es rex xchg or adc imul adc movabs test enterq fs movabs ja movsb and stos (bad) sub cmp add mov retq (bad) (bad) mov add jrcxz sbb mov movsl adc movabs jl xchg adc rex.RX in retq xchg adc divps (bad) idivl xor imul (bad) stos pop rorl fstps mov lods mov mov lahf stos or sub shlb outsb xchg mov xchg mov test or mov addb mov rex.XB (bad) mov (bad) mov in xchg rex.X push jmp out (bad) cmp (bad) fucomi test in mov iret imul es imul or mov pushfq adc jae rcrb pop fbld (bad) (bad) sti std mov sbb sub cltd hlt cld (bad) cmp push and add add push callq cmp mov retq push loopne jbe leaveq js mov xchg (bad) fistp pop mov movsb movabs xchg xchg (bad) or (bad) rorl hlt mov retq xchg (bad) scas xchg sbb sbb mov test out cmp mov (bad) xlat cmp push rex.WRX jl rex.WR fisttp rex.W iret cwtl mov (bad) scas add or add jmpq in out mov cmpsl cmp jl mov xor mov (bad) addr32 test adc callq pop hlt (bad) cmpl sbb adc sub (bad) mov rex.RXB nop in xchg (bad) adc adc rex.WRB adc add sbb fimull rex.RX rex.WB callq cmp cmp pop popfq jp ds fild cmp (bad) iret xchg ds lcall mov (bad) stc nop mov sbb xor xchg es sbb rex.WXB (bad) cwtl (bad) or cmp jle scas outsb jmp test adc pop (bad) sbb lret mov pushq incl xchg (bad) xchg push int cmp jrcxz mul mov rex.WRX stos (bad) lret jnp cmp (bad) shll int3 fldcw xchg jns out jbe repz (bad) xor mov andb test add rex.W clc xchg xchg enterq enterq in push xor fldenv jmpq mov or (bad) mov rex.WR or lea push xchg or (bad) fcoml in mov (bad) hlt (bad) pop pop out mov (bad) adc int adc xor mov cmpsb ja sahf xchg jmp and mov mov movabs mov sbb xor fisttpll xchg adc sub rex.WR ss stc sbb mov (bad) enterq in cmp xchg stc xchg push int cmp movabs clc (bad) shlb push rex.RX sahf jae (bad) mov xchg add (bad) sbb rex.XB sahf mov push xor icebp lret mov in mov rex.WX es or jnp mov xchg int cmp cmp out retq movabs int insb xchg cwtl push fcmovnbe xchg imul jrcxz mov (bad) (bad) test pushfq in rex.WXB ss xchg adc out adc jl imul pop add mov callq xchg cmp lea mov sub pop mov jne xchg lret fistp xchg pushq jge (bad) xchg xchg sub js sub (bad) fistpll popfq (bad) repz (bad) rex scas adc (bad) je xchg xchg rex.X xchg mov sahf jl pushfq adc xor pop sub movabs mov in pushfq xchg xor lret (bad) sti (bad) decl in rcr cwtl es cmc (bad) test sbb mov sub and adc ja rex.WR or jno movabs mov (bad) sbb and out sub sbb jle xchg js cltd lret cmpsl hlt rex.WR pushq enterq cltd sbb rcrl sbb repz or sbb (bad) and xchg (bad) xchg xchg adc rex.RXB jle,pt cmp pop and shr and (bad) and rdmsr (bad) lods pop mov js popfq cmpl push xchg orl jnp in rcrl (bad) in mov or loopne ds adc retq pop cmp addl cmp pop (bad) ss test test pop xchg nop cmp (bad) cmpsb pop (bad) mov sbb (bad) fs rex.WRX mov jmp pushfq (bad) int3 mov or icebp cltd (bad) mov adc mov push mov xchg (bad) fcompl xor mov mov xchg mull cmp rex.WX outsl fnstsw xchg (bad) (bad) mov jno jne (bad) sbb add xchg xchg ss mov mov xchg (bad) rex.RB sbb cltd xchg loope push fnstsw cwtl repnz insl ds xlat sbb xlat mov adc pop movabs mov mov andl addl xchg or jmp insb xchg pushq mov cmp fnsave mov repnz (bad) lret or adc xlat mov rex.WRB mov ds outsl stos mov cmp (bad) stc xchg mov cmc xlat std mov rex.R callq mov out enterq mov mov jae jmp jrcxz rex.W rex.WB jmpq pop rex.B xchg sarl in pop lock (bad) sarl cmp jg ds xor jge mov rex.WX jmp cld jmpq in cmpsl push xchg in (bad) rex.WRX out xchg retq int clc es pop (bad) notb lods xor ss scas xchg or mulb xor mov in sub popfq jge jnp (bad) testl push lret mov mov callq xchg cmc imul xor pop shr or ror (bad) (bad) xchg shrl mov jne mov mov adcl clc xor movabs rex.WR rex.WX (bad) mov rex iret test mov add or and xchg mov pop xchg mov cmp xlat (bad) mov (bad) sbb cli adc xchg pushq mov xchg jae add scas (bad) xchg sbb leaveq mov iret iret sbb mov movb xchg add and xchg or ror sbb cltd cwtl adc mov std stc sbb pushq div adc push repz in (bad) xor xchg or lret add mov cwtl fcomip (bad) (bad) push xor mov sbb cwtl adc in ror xlat ljmp sbb and add sub xchg data16 jl,pn or fs icebp emms lods cmp add cmp sub or fisub mov cmp xor and lea rex.WB or (bad) xchg (bad) adc xor stos in ds xchg movsb fisub mov cmc xchg rex.RX xchg jge jle sub mov xchg je or int3 test rex.W test mov mov xchg callq sub add and adc cmp xchg xchg pop nop scas loopne cltd fstp cmp or icebp adc push sbb xchg adc cmc (bad) xor repz repz (bad) rex.WB xchg pop loop adc cwtl loop test sbb push insb adc in movabs rex.WRB rcrl adc callq (bad) xchg movabs data16 (bad) mov (bad) icebp movabs icebp (bad) fnstenv sbb sub jns fidiv push sbb adc add sbb pop roll lock mov out adc (bad) jle cwtl (bad) sti adc (bad) jae fisttp out mov sub enterq mov mov xchg xchg cwtl xor pushfq jmpq rex.WB mov fcom sbb push rex.X or int mov cmp pop outsl hlt test mov cmpsl (bad) test (bad) rex.W mov xor pop flds test sub cmp (bad) test add xlat (bad) lods rex.R ds sub sarb in shrb (bad) cmp (bad) mov rex.WR mov push fnstsw (bad) ds (bad) sbb (bad) je add mov (bad) mov mov rex.WR jae xlat mov mov mov std int icebp add mov (bad) xchg cmc rex.RX mov sub insl cmp (bad) rex.R (bad) mov sub pushq (bad) fdivs out lock or mov (bad) vmwrite adc mov std jmpq sarb enterq mov out push xor ds xchg mov loope icebp adc or xchg (bad) notl hlt xor (bad) or movsb stc loope imul (bad) int mov push mov out movups sub rex.RX sub scas fisttpll rex.WRX (bad) (bad) sub rex.W cli outsl xor insl cld (bad) retq (bad) sbb cmp lock sub and push jmpq lock outsl add in lret xchg and lea movsb mov (bad) sahf out (bad) movabs out stc mov mov loope or sub sbb out mov addl mov sarb xchg (bad) sti out (bad) push test add iret mov sahf loop or (bad) xchg pushq shlb mov loop pop jg ds xchg sbb frstor stos in xor outsl rorb mov lods jle (bad) imul (bad) insb xor outsl add and xchg cmc outsb clc or stos fnop movsb mov shll ss xor or jge and jle clc or sub negl test int3 or add roll or scas pop (bad) sub not clc pop (bad) mov and or fmuls mov cmpsl mov (bad) or in test mov cmp fisttpl fsubs ds (bad) mov cmpsb clc add mov mov jle pop clc (bad) outsl rex.WRB mov js (bad) or fs or rex.WR mul in stc mov push imulb pop out mov jle sbb (bad) cmp (bad) test rex.W push repnz loope mov mov (bad) (bad) lret divl (bad) xor push js ss bswap or jle mov shl (bad) add pop rex.R jmpq (bad) retq or sarl jo sub lods jnp mov jg xor cs mov movsb mov int3 repz mov movabs int jrcxz or test mov out lahf cltd stc outsl or mov test (bad) xchg int3 test or (bad) or mov leaveq (bad) pop xchg dec movabs cmpsl iret cmp pop mov test or out (bad) in mov (bad) iret jle callq or (bad) pop (bad) iret incl mov addl xor movabs (bad) pushq xchg out pop movabs (bad) fsubr (bad) or jmpq or ror enterq insl and sbb cmp leaveq push cli jo xchg nopl pop (bad) jb (bad) (bad) rex.WRB mov and or hlt jge xchg iret mov mov (bad) sub (bad) outsl cmp rex.W incb cmp (bad) jl and rex.RX fistl jge adc rex.WRXB add sbb mov (bad) pop stos (bad) in push movabs js (bad) out fidiv loop cmp pop imul mov mov mov xor jno out jl mov jg popq mov sub es jbe jmpq cmp (bad) jrcxz sahf pushq rcll jmpq rex.WB (bad) enterq ficomp (bad) jmpq stos cmp mov jle loop rex.RB movabs loop push adc out rex.WXB mov xchg fnstsw push cld sbb enterq (bad) cmp in adc (bad) lret xchg xor or cwtl xchg movabs add xchg idivb sbb icebp imul cwtl jle cmp jae cmp cmc rex.XB (bad) jp cli xchg xchg out (bad) xlat andl adc cmp lahf test mov xchg or js pushq xchg mov mov mov (bad) in and jb (bad) (bad) xchg jae add and (bad) out test std xchg add xchg cmp sub rex.WRB (bad) (bad) cwtl es (bad) adc out add (bad) jbe movslq mov jl (bad) out sahf xchg enterq scas jo jns outsl lea jo lret fs out sub movabs andl test jb jmpq sub cli and jbe sbb jne movl packuswb movsb and mov fs xor (bad) movsb adc lcall (bad) loope and movabs cld clc (bad) adc sarl jno xor callq negl fucomi mov (bad) pop or pop cmp xor (bad) sub xchg int3 out sbb std movsl movslq outsb (bad) rex.WRX (bad) callq jmp fidivr rex fcmovnb (bad) adc jne push jl repz imul stos or (bad) rcll movabs stc (bad) ds fldl cmp jns sbb movslq sti cmpsl movsb rex.WRX jae or pop and (bad) add mov mov xchg add negl loope add cmp pushq es pop mov sub rcll adc sahf cmp (bad) imul add sbb (bad) (bad) xchg jb out adc insb adc movabs add jge data16 outsb pop jge (bad) sbb pushfq (bad) lret mov xchg add movsb rex add (bad) (bad) fmull mov push mov movabs sub movabs xlat pop imul test mov movb add xchg (bad) ds rolb imul out mov mov movabs add sub rcll and lods mov add lret out (bad) ss or fidivrl or push mov popq cmc sbb rex.RX add sahf (bad) cmp movabs push mov cmp adc pop xchg ficomp xchg sahf scas sbb lret pop mov rex.WXB (bad) mov xlat (bad) mov movslq repz cmp push and and mov mov (bad) sbb push adc add jmpq add imul rex.WX xor jge mov cmpl cmp es repnz lahf mov lret push cmpsb setg in (bad) (bad) popfq sbb sbb jmpq jnp (bad) jnp jmp sbb push xchg jnp add movabs repz xchg jnp add mul addr32 cmp or stc ds pop add (bad) or or in mov mov or rex.W pop and popfq push mov lods xchg (bad) xor out loope cmp sahf imul jae add movabs (bad) cmp xor mov sbb add (bad) gs mov rex.WX icebp cmp add rolb xor fistp fsubs (bad) pop mov insb rex.RXB and movsl idivb fnstsw shl adc (bad) xchg mov lea cltd cwtl adc in cwtl movabs push movabs or jo pop sbb pushq mov xchg imul es jrcxz test xor fs sub mov jrcxz (bad) xlat sbb leaveq (bad) lahf mov loopne (bad) mov out out mov leaveq fucomip repnz movslq fnsave xor jbe jbe pminub cwtl xchg rex.WRX cs movabs xchg jrcxz mov pop sbbl xchg jge movabs rex.RB mov mov mov jns sub loop sar fnop ja (bad) cli out push es mov cmp xchg sbb imulb xchg rex.WB rex.WRX (bad) or popq imul mov movabs pushfq out test sub (bad) pop movsl cwtl mov pushfq sbb fucom popq cli add or scas jmp jbe andl add xor cmp mov adc repnz hlt adc mov repz cmp rex.WR mov (bad) movabs rex.WR pop out cltd sbb test sti mov out sub enterq add sbb pushq (bad) outsb cld hlt in popfq callq cwtl loope pop sbb add in add data16 mov xchg sub or cmpsl (bad) cmp mov sbb hlt jns,pt jg rex.WR mov cmp retq add pop push retq pop popfq cmp xor jne pushfq push repnz movslq pop cmpsb cltd mov add cmp rex.WRB addr32 xlat loop (bad) cmp fdivr sarl hlt rex.WR jmpq (bad) subb out int leaveq enterq clc nop mov pushfq mov jmp fs fisttpll leaveq out mov jrcxz mov ds mul jmpq and (bad) cmpsl std sarb and mov stos out xchg adc push (bad) sub sub rcl jb mov cmpsl pop movabs push mov add scas stos std jg (bad) push push notb add sub lea cmp jnp pushq add (bad) stos adc mov (bad) jp callq sti pushfq movsb icebp (bad) or shrl adc fildll cmp rol xorl rol (bad) mov pop mov jrcxz (bad) out or adc jle adc mov rex.W mov shll addr32 cmp pop (bad) add movabs xchg movsl lods xchg adc mov enterq pop (bad) (bad) loopne movabs xchg xor mov cmp lods adc jg sbb mov jge,pt outsl imul (bad) xchg (bad) rex.B idivl ffreep lahf lea add popfq (bad) push jg sub (bad) lret xchg pushq push cmp pushfq mov out or and rex.XB stos cmp mov push pop jmpq xor adc rex.XB cmp sub divl or xor (bad) (bad) xchg push es icebp pop mov out (bad) (bad) (bad) nop fisubrl jnp mov test xchg (bad) sbb jne pop adc mov (bad) adc (bad) (bad) push movabs xchg lods lea pop imul in sbb xlat movslq mov cmpsl enterq out (bad) (bad) xor push (bad) stos fdivr mov rex.WRX cs mov cmp rex.W imul add mov fidivrl leaveq out (bad) rex.WRX and mov fcomps pop addr32 jnp hlt loopne mov loop xchg cmp and (bad) (bad) xor rex.WRXB xchg sahf rex.RX mov cmp xchg cwtl (bad) imul sbb xchg push fistp gs xchg es add mov sbb lea xchg mov (bad) pop xor lahf loopne sub rex rex.RB mov mov xchg sub adc or or callq lea jae loop fxch pushq rex.RXB jo add loop push cmp push flds fistpll (bad) movabs jns rex.W jrcxz pop push cld mov scas mov fcomp adc mov or adc cltd adc sbb rex.WRX std sub add (bad) insl cmp mov or rex.WXB pop stos pop add fs jmp loopne (bad) int xchg imul subb rex rex.WB rex.R mov ss adc mov mov add adc pop mov lods in test xchg in mov (bad) and add std ss es test fs or pushq jp rex.WRXB movsl js jae pop rex.WRX std fucomp out (bad) jg mov add scas rex.WRXB movsl fnstsw mov or sub xchg add fisttp pushfq (bad) mov pop mov fst (bad) pop movsb addr32 mov pop (bad) cmp movabs adc xchg sub jmpq mov sub lret mov mov jl lahf xchg mov rex.WRX (bad) mov pushq pop sbb js scas sub loop adc sub movsl (bad) cltd rorl (bad) cmp andb cmpb jg cmp xchg fdivl mov mov rdpmc jg int sub (bad) lea repz cmpsl mov xor (bad) fild ds fstp je idivb mov mov mov shr loope cmp or add xchg (bad) add xor xchg adc in or mov or fsts (bad) pop cmp mov popfq cmp sbb xchg xchg push sbb pop cmp jg push xorl xchg adc int test stos hlt stc pop xor orl xchg pop (bad) (bad) cmp fstl cmp adc jmpq sbb rorl sub or mov xchg cwtl or fsubrl cmc jle (bad) pop or sbb je xchg movq insl (bad) cmp (bad) mov xchg andl push mov xlat pop rex.WR rex.WRXB stos add out out imul sbb push xchg idiv (bad) pop mov and pushfq mul (bad) (bad) loop es mov lret adc stc rcrb (bad) callq adc (bad) (bad) (bad) imul mov movsb adc cltd (bad) xor nop out (bad) and mov cvtdq2ps xchg sbb and mov callq gs (bad) sbb jg cmp cmp jp (bad) mov loop sbb clc sbb test xchg ss jrcxz loop or jnp xchg mov callq and pop loope sbb ja retq mov cmpsl (bad) sub (bad) xchg popfq sarl or and stos loope xchg pop cmp sbb (bad) out (bad) (bad) jbe cltd in (bad) (bad) sbb decb (bad) retq repz push mov mov nop pop rex.X stos sti and (bad) cli xchg xchg imul movsl (bad) pushfq mov sbb js cmp xor jno gs addl mov cmp jbe mov xor xchg mov mov nop xchg mov addr32 (bad) iret pushq pushq fnop rex.RXB rex.WR cld sbb sbb add and fwait retq repnz (bad) adc xchg test cmp sub push pushfq sbb mov jg mov mov xor cli rex in insl add movslq pushq mov pushq rex.W add repz fld cld sbb sub pop lea and (bad) xlat and (bad) add incl (bad) mov (bad) ss movsl movabs mov rex.R out sbb xchg stc leaveq (bad) movabs mov test pushq movabs or mov xchg fildl mov decl movsl cmpl jge cmpsb sbb icebp jb add sbb or jrcxz cwtl sbb rex.W cmp (bad) push cmp adc movabs (bad) jmp mov cmpb (bad) (bad) pop sub stc movslq (bad) rex.WR pop fisttp or in (bad) jns xchg sub (bad) shrb enterq int mov adc sub mov imul out outsl sub rex.WXB or cs jp mov movsl nop (bad) out cmp jl hlt sarb cwtl outsl lea sbb rex.R fldenv or xchg out (bad) jmpq xchg jo mov lret movsl sbbb push and gs or data16 rex.WRX stc xorb pop movslq xorl mov or adc fdivrs mov and cmp pop (bad) es sub mov push retq stos jp lret sbb sbb pushfq adc (bad) popfq ffree jl (bad) or xlat (bad) std and (bad) lcall fidivr adc (bad) clc lock xchg cmp (bad) cld movabs xchg (bad) sub imul or xchg (bad) rex.R mov mov ds out test adc lock fcompl add (bad) fisttpl fildl push xchg pop mul cmp mov jge imul sbb sbb pushfq and pushq in es xchg out (bad) loopne mov mov imul xorl cmp out pop sbb (bad) jl pop jne (bad) lret ja jns hlt (bad) sub out xchg sbb cmc (bad) mov cmpsb and rex.RB sbb sub and mov cmp add xchg jns cmp js test mov movabs imul lods cmp mov rex.RX int push popfq popfq cmp and rex.RB shr lock add mov xchg loope mov lea (bad) jns cs (bad) lret fsubrl or in adc movabs lods movabs fucomip pop xor or mov adc (bad) mov gs rex.RX sar jrcxz cmp imul jl movsb push out (bad) (bad) repz sbb xor mov out mov in sbb xchg addr32 jg push (bad) xchg imul or sbb retq rex.WRX add mov (bad) mov pop jnp rex.RX rex.X cmpsb jge mov adc and sbb rex.B cltd (bad) frstor push (bad) out std push (bad) jnp mov pushfq mov jmp fstl xor sub rex.WRB cmp mov add sbbb mov movabs fildl andl icebp lcall iret out xor mov and lods rex.WX rex.WXB mov xchg sbb pop or sub or mov jmpq cmp repz or (bad) jrcxz sbb icebp cwtl imul or retq xor stos (bad) lret mov cmp jb repnz pushq loop lea movslq mov shll rorb jb,pt test (bad) rex.WR pop xor ds mov (bad) push add xchg xchg and leaveq rex.RXB test cmp popfq mov sub mov mov (bad) lea and (bad) sbbb fsubl (bad) sbb je and iret mov jb fcmovnb sbb (bad) jle (bad) (bad) or mov xchg sub imul nop push (bad) movsl xor nop mov out push movabs rex.R jnp,pn ja (bad) decb sbb movabs subl or ficomp mov fldenv jae add cs or pop retq lods add cmc out lods loop (bad) mov cmp outsb xchg mov add sbb (bad) addr32 (bad) adc (bad) lods movabs fcoms sbb sarl xlat (bad) scas je or pushfq stos rorl jrcxz mov and adc add (bad) (bad) and pop pop (bad) xchg rex.RB rex.WRXB xchg rex.X push sbb ss pushq and ja shll in scas cld (bad) fs (bad) insl jns enterq pop mov (bad) jmpq add iret sbb pushq add clc jrcxz lock rex.X (bad) movabs or lea fldl cwtl cmp mov (bad) push fmull loope mov (bad) lea sti callq loope dec jrcxz sarb lods jne jnp xchg movabs mov ds std (bad) shl cmc adc or mov ja mov adc ss movsb retq cmp rex.WB leaveq out loop sbb rex.X out xchg rcrl sahf or lock outsl mov (bad) movntq sbb mov (bad) and cmp fdivrl cmp (bad) out sbb in mov mov jo sub repz cmc sbb xlat add fwait jo cltd out sbb rex.WRX (bad) (bad) sahf rex push pop adc sbbl fadds (bad) movslq push pushfq sub cli mov je imul rclb sbb test leaveq or and or movslq xor outsb jmpq nop js add jl xlat cmp and xchg addr32 jge xlat xchg xchg rcrb lods cmpsl jbe and (bad) movsl cmpl andl sbb sbb sub (bad) adc scas rex.WRB (bad) sbb (bad) pushq callq adc rex.XB (bad) pushfq jge (bad) adc movabs add xor orb out rex.W rex.WB fbld xchg (bad) imul sbb sub repz sub jge fdivrs or out (bad) sbb add xlat (bad) cmp test stc out test add and rcr lahf (bad) (bad) stc lods xchg mov (bad) sbb push (bad) negl stos (bad) (bad) cmp add push (bad) (bad) add adc imul jo jo test pop std iret mov in (bad) out add adc cmc rex subl hlt pop movslq or (bad) sti (bad) jmp movabs pop mov cmp lahf sbb pushfq imul ss adcl out lea addr32 std mov pushq out cld test add idivb xlat popfq sbb sub (bad) cmp enterq clc cmp fbld lea mov add je (bad) sahf divb add out xchg (bad) mov sbb movsb fcomps cmp jns cmp fistpll (bad) sub mov xchg rex.WRXB clc cmp xor mov jbe mov cli and (bad) popfq insl sbb or ds rex.WR (bad) callq xchg (bad) pushq iret repz adc cltd movsl pop repnz push movabs mov sub sbb repz sbb xchg cs xchg and rex.W pop movsb fs lock out xor mov (bad) lret adc rex.XB (bad) mov (bad) mov ds fidivrl rex.W outsb jnp mov cmp popfq jl and es hlt divl cmp imul xchg cmp xchg mulb (bad) lea shrb cmp jno hlt fsubs (bad) fcompl xor mov pop xchg mov adcl test test lock pop sbb jo xor (bad) sbb fnstenv xchg mov mov out cmp xor xchg scas sbb (bad) hlt lahf enterq out std xor add jnp xchg fisttp mov out stos (bad) cmp int3 cli sbb mov sub xchg cmp lods lea (bad) scas stos cmp hlt enterq sbb movsl sahf xchg (bad) sbb xor jle rex.WRX stos (bad) notl lret (bad) sbb jl (bad) movabs (bad) jmp xlat cmp mov xchg cli mov mov jle or int (bad) iret pop sub rorl rex.W sar cs (bad) lods (bad) scas fstl xlat mov mov gs adc jnp xchg cmpsl mov xlat lahf loop adcb pop mov sbb mov add xor movslq cltd cmp fs rex.WXB fwait leaveq in xchg out (bad) (bad) sti loope pushq rex.XB or cld mov jnp jle xchg roll and mov imul (bad) clc (bad) mov fstl popfq rex.RB fsubp mov cld jo xor cltd imul clc jmpq xchg sub out mov pop loop,pt rex.RXB mov stos rcll and or rex.R or movabs popfq lods adc add movslq sbb rex.WRXB repz (bad) (bad) out jrcxz sbb test insl xorl loop jbe xor movabs loopne sbb rex.WXB iret (bad) lods loope (bad) rex.B rex.WRX out and adc mov sbb xlat leaveq rex.RX rex.WX (bad) (bad) enterq cmp xchg push in rex.WRXB out sbb jle pop hlt jl fildl mov test mov movsb jrcxz jge fistp adc xchg in fbstp iret cmp rcrb (bad) movabs lea decl xor icebp rex.X pop ss cmp or (bad) fnop (bad) (bad) mov (bad) (bad) xchg jl std repz rex.WRB imul (bad) int3 sbb mov cltd out stos insl cld cwtl pushfq movsl adc imul pop cmp xlat repz loope xor and rex.WRB mov adc fwait idivb std xchg cmpsl nop (bad) adc or sub or cmc cltd ud1 sbb (bad) pop lock mov cmp insl cmp ds adc out mov iret sbb sti fild pop popfq jns sbb cmpsl cmp in adc cltd callq rex.XB add xlat xchg (bad) fimul movabs (bad) (bad) movabs pop incl movsl data16 movabs imul out mov xor cmp xchg insl (bad) (bad) mov or mov jge push mov add mov pushq out cld pop mov cmp rex.B jrcxz push rex.RXB repz fiadd cwtl lcall rolb imul sbb nop jg or cmpsl xchg jbe xor out lea fldt (bad) callq sahf and jmp pop mov rcrb retq clc jl test lock in (bad) or xor int3 jmpq sbb pop xor add and sub or (bad) rex.R cmp pop rcrl xor jrcxz pop mov loope movabs (bad) cmp cmp mov cmp out test iret fadds and rex.XB lods jne cmp xchg adc adc adc (bad) cmp (bad) add (bad) popfq (bad) ror loopne rex.B lret rex.WRB icebp movsl adc mov jg rex.XB jns xchg (bad) (bad) rex.WRX sbb xchg pushq rex.XB xchg cmp xchg add sub cmp (bad) or mov adc rex.WR imul (bad) rex.RX xchg add cmc jg cmpsl test (bad) movabs (bad) and fdivrl movabs fistp add popfq out movsl xchg push xchg sbb jno loop cwtl push (bad) xor (bad) hlt sbb sbb xchg push sbb ss mov cmp rex.RX popfq mov cmpsl jne vsqrtps or and xor movsl hlt push scas sbb jp fsubs movsb (bad) pop mov cmpsb int leaveq out mov mov cwtl or xchg push adc lea cmpsb nop add mov mov rex.RXB test (bad) mov movabs fcoml jns cmp repz cmp cltd (bad) mov or movabs loop or pop cmc jnp rex.X mov xor cmp popfq imul loop gs xor cs movslq xchg loopne mov or add sbb loopne and (bad) adc or mov mov (bad) icebp (bad) xor pushq xchg imulw jle (bad) imul xchg movabs std rex pushq in (bad) loopne mov or test add sti sub xchg (bad) (bad) mov jge pop cwtl fdivr fist (bad) rex.RXB hlt mov mov test jl mov jbe (bad) rex.WRXB lea (bad) sti adc rex.RB fcmove xchg or jmpq push ja sub ja pop in ljmp leaveq or loop mov add icebp data16 idivb mov lahf or jo xor insl je lods xchg sbb mov (bad) xor es jo sbb sbb fnsave movsl rorl fwait ja (bad) mov fs js (bad) or out rex.XB lods leaveq mov rex.R iret jbe rolb movabs (bad) sub mov fs mov (bad) xor fildl ds (bad) insb adc iret xor movsl stc mov icebp jle cmp xor rex add rol add loop jae popfq movabs ds movsl adc pop iret cli and loop mov mov retq leaveq ja rex.B jl insb mov (bad) rex.RB nop pop rex.WX lcall or in or shufps push and cmp and ss rex.WRX mov out adc leaveq xor (bad) stc (bad) xchg xlat es mov ds movabs popfq (bad) cmp (bad) cmp or es or jl xchg popfq and (bad) faddl cmp rex.WR jge mov (bad) addr32 add es rex.RX addr32 or insl jl sbb sbb sbb fxch cmp sub lods or push fcompl stos test and push sbb int3 fisubl test pop jbe (bad) in dec adc test xchg adc or pop sbb insl or cltd jmpq iret and sub cmpsb mov (bad) (bad) cmp imul pushfq (bad) sbbb add (bad) loop cmp cmp stc sub mov mov or jnp (bad) (bad) notl rex.WXB xlat (bad) mov mov adc loope mov push and out or je cs xchg repnz data16 jo (bad) mov sub cmp cmc in mov mov adc retq adc sbb xor mov jae cmp shlb (bad) loope insb mov rex.WRXB (bad) mov es sbb rex.WB jg mov cmp (bad) cmc cmp (bad) lret (bad) (bad) (bad) (bad) sbb mov sbb rex.RXB mov imul testl sahf pop outsl rex.WRX rorl imul cmc lods sbb and xchg (bad) iret (bad) in mov pop and sti lock movabs mov add movabs repz out cmp mov add stos std jae adc fcompl hlt iret sub hlt cmp imul or out repz jg fs (bad) (bad) (bad) xchg out cmp sbb mov (bad) pop cmp jrcxz (bad) cmp repz (bad) sahf mov imul fsubrl cmp mov int3 mov xor xchg fbld (bad) lahf imulb fwait mov push movabs and callq rex.RXB lahf (bad) int mov scas mov xor push jbe mov pop hlt add jo push cltd (bad) cmpsl clc sub jrcxz fimul and jnp mov in sti movslq test retq rex.WRXB sbb retq cld or stos adc fbld xchg push (bad) enterq mov sbb pop add nop or sti rcrl cmc or movsb loop cmp ficom xchg insb (bad) cmc xor mov mov xchg jne mov jne jge jp lods cmp xchg and push rex.WB add popfq mov insb sahf rex.WX ficom and jg addr32 add movabs jmp fcom iret xor rex.WB je repnz decb xor popfq cmp adc movabs js xchg jbe push enterq mov out push adc sub xor mov mov mov mov imul (bad) ficom (bad) je pushfq stos jb mov lods (bad) lret jnp sub cmp lods icebp xchg popfq xchg xchg mov movslq sbb (bad) pop jb push (bad) lods xchg jne push mov xchg testb mov (bad) shr es xor jle mov (bad) imul rcrb int3 adc sbb push (bad) mov mov sbb sub adc push adc and jp (bad) xchg add ror outsl push jnp mov and (bad) cmpsb lea lea sub rcrl ja rcr rex.RXB rex.X (bad) movabs imul pushq cwtl leaveq mov add rex.X icebp stc mov rex.WX rex.WRX cmp cmp xchg sarl adc pop ss in rex.B rex.WRB movsb clc popfq jo loopne fcomps out xorl movabs xor and sbb (bad) mov es mov mov imul rex.X xor je fsubs (bad) in stc xor pop loop pop cwtl (bad) lahf cltd lea sub jg xlat ja push xchg pop jae test or (bad) jg out xor sub adc (bad) adc rex.WRXB rex.WR or outsb in popfq (bad) (bad) movslq sub (bad) rex jne xor cmp je cmp cmc in mov iret rex.WRXB ss rcrl out mov rex.X (bad) (bad) ja cmpsb gs sub (bad) (bad) jns imul mov popfq mov (bad) mov movabs pop xchg sbb es movslq adcl pop nop xchg retq cs js jne fidivrl add ficoml enterq cmp rex.RX pushfq iret pop ss repnz repnz or loopne andl and pop sbb and cmp (bad) out xlat scas xchg xorb (bad) cmp icebp cwtl loop mov fstpt xchg (bad) movabs pop add pushq cmp jl sbb sbb cmpl imul jge jb sub mov cmp faddl test sti adc sbbl sbb jo jne (bad) xchg rex (bad) (bad) nop pushq xchg adc cmp js sarb xor sahf cld lret cmp rex.W mov (bad) mov cmp xor (bad) (bad) pushfq mov push xchg sbb sub fldenv mov fcomps frstor cmpsl adc cmp (bad) pushq mov mov movabs loope loop xchg cmp pop lods sahf (bad) ror (bad) movsl mov (bad) mov (bad) cwtl mov (bad) add pushfq (bad) movsl fdivrs pop scas push pop (bad) xchg mov cmp or cwtl cld (bad) xchg (bad) mov sbb add xchg imul sbb (bad) push (bad) cwtl push adc mov xchg mov mov out mov int3 pop imul loope xor cmp pop jge cmp rex.WRX sbbl adc incl pop (bad) cltd (bad) sbb cld stos movsl mov pop (bad) loop xchg andb leaveq push rcr sbb and imul sub xor adc mov cmp xor xor mov adc (bad) cmpsb push fsubs sbbl jl xchg lret (bad) je mov loopne iret cmp jne xor sbb in movabs (bad) gs rex.WR rex.XB out sbb pushfq addr32 icebp in es push (bad) add lock vsqrtss jns retq movabs or xchg pushfq retq push pushq stos push add mov xlat or pushfq test (bad) (bad) fstpl cmp ds out cmp push mov hlt xor xor jle adc jl es cmp sub mov pushfq pushfq mov cmp jo or mov jg andb xchg jle ss jl shll xor or nop sti stc rex.RXB js xor fistl scas cmp sub xchg (bad) movabs movabs push mov cld xchg movsb rcll push lods mov lods and xchg jl (bad) cltd rex.W jg mov test js mov jg xor mov outsl cmpb cwtl rex.XB sbb pop shll add or lret lret sbb xorb (bad) (bad) mov insl or test and ss mov hlt movabs mov cmp pop iret rex.RXB movabs idiv push mov add out fs pop add add repz cmp xchg rex.RB rex.RX imul or jb xchg flds and jbe idivb push sub jmpq rex.RXB loop or xor pop addl movabs rex.RB callq (bad) jns xchg lods retq push adc (bad) sbb in stos pop fldenv ss xchg mov jg mov mov lods rex.B and push xchg repz stos (bad) rex.WXB and (bad) or pushq push xchg imul xchg callq lret rex.RB es fidivl or fldenv rex.RB cs or imul mov jg xchg or movabs es (bad) rex.R rex.R mov mov scas rex.R mov sub jo (bad) sbb rex.RX mov cltd js xor xchg lea (bad) cltd rolb rcl rex.XB scas sub sbb test xchg adc je rex.X rex.RB jl js jl punpckhwd (bad) mov rex.XB mov pushq mov fidiv test movsl jle out imul lret and jne mov pop ja sbb xor add jmpq cltd ficom pop scas mov xchg (bad) sahf mov xchg lahf sahf (bad) xor lods jrcxz pop std mov rex.WRXB push (bad) movabs sbb outsl (bad) lods cs out jrcxz adc sbb jnp (bad) rex.WX sbb (bad) ja mov fcomp fisub mov or (bad) stos addr32 (bad) (bad) (bad) movslq add cmp cmp lods movsb movsl adc imul xchg int jnp xchg mov scas (bad) pop adc movabs xchg sub pushq loope test cmp mov sbb cli es fldenv movsl add movsb out xchg cmp push xadd jmpq clc mov rex.WXB retq push (bad) (bad) mov sub test push rex.W ds mov retq out push mov xlat xor pop mov (bad) notl xchg mov lret js sbb xchg xchg popq cmc (bad) rex.WRX rex.RB mov cltd decb pushq adc xchg mov movq rex.WRX pushq hlt (bad) mov (bad) stos xchg rcrl xchg (bad) sbb mov cmpsb jnp xchg cmp out (bad) popfq mov stos pop push and sub sbb hlt cmp fcmovu pushfq cltd pushq shr cs (bad) xchg mov popfq push addr32 subl and or rex.RXB iret rex.WXB repz scas imul mov xchg cmp sbb rex.WRXB mov ja imul lock es rex.WRX rex mov mov jns or (bad) mov xor jo (bad) jnp (bad) pushq sbb (bad) rolb jae cmp (bad) rex.X idivl push adc sub xchg jnp (bad) xchg xor (bad) adc mov xor mov adc (bad) jbe push jne pop jns (bad) movabs pop sub movsl leaveq mov push pop and lods popfq xchg cmp mov repnz sbb mov out nop popfq lea loop (bad) (bad) (bad) adc out (bad) (bad) (bad) jge outsb xchg movslq mov rex.WX and and mov pop (bad) rex.RXB xchg sbb out lea (bad) ja (bad) idivl js mov add adc repz jnp pushq add jns adc test fildl sub and xchg adc rcrl rex.WRB rex.WRB jmp xor movsl cwtl mov adc rex.WXB adc fcoml sbb xor movabs jge popfq cs xchg mov mov (bad) xchg cmp jl xchg mov mov jo xchg add cltq sub sub (bad) or insb test jb jge and jmpq shrl sti jb jae cltd jo repz xlat (bad) movsb scas sbb cmp rex.WXB test cmp pushq stc movsb outsl (bad) jno cltd pushq outsb mov cmp jno mov imul jle movabs sub jge (bad) xchg xchg push sub imul xor (bad) mov (bad) cld jmpq stc cmpsl clc mov stc rex.RX sbb pop xor mov add sbb mov xchg fidivr cld (bad) jnp xchg (bad) sub mov (bad) adc mov mov stos mov (bad) sbb sub (bad) cli popfq mov (bad) mov lods pushq mov add sub sahf sbb roll (bad) loop mov cmc add or jae adc movslq iret gs loope xchg (bad) mov adc (bad) xorb rex.WRXB lods imul sub pop xchg push (bad) (bad) mov std sub ss js sbb insb movabs hlt or sar (bad) stc lods sahf movabs and xor push rcrb cmp (bad) cmp cmp int3 ss sub mov idiv and sbb in std loopne cmp mov in std jae push or cli loop mull rex.WRX rol push sar add jnp pushq (bad) int sub xorl mov (bad) or jg adc repnz mov scas add lock scas mov lea repz mov mov adc cmpsl sarb icebp mov lret loop xchg btc rcr adc add adc pushfq mov in rex.WRX rex.WRXB rex.WR in (bad) mov mov (bad) (bad) (bad) xlat ss xor xor add and pop or and sbb ja and outsl repz test pushq (bad) xchg (bad) pop sahf js imul or (bad) or (bad) xchg mov jg test fbld adc lea nop mov sbb fstpt jl mov xchg pop lea fcomps cmpl jl sbbb stc js jle sbb cltd xchg add (bad) es mov cmpl xlat sub cmp pushfq cmp cmp int3 adc sbb sbb pop mov pop shrl sbbl ja (bad) cmp es adc adc callq (bad) int fcoml cmpsb ja (bad) or hlt (bad) xchg mov sti rcrl push xor xchg rex.WXB fs imull sbb fwait rex.WX rex.RB mov (bad) repz jg add movsb movsl lock (bad) icebp mov xchg mov in fsub jle xor movsb xchg or adc sar mov (bad) hlt and (bad) jle callq xchg mov popfq mov jge jge lahf add pop adc testl pop cmp xchg retq (bad) cmp cmp pop rex.RXB (bad) out xchg jge mov add (bad) xor rcll popfq (bad) adc rex.X fiadd mov add jno (bad) xchg (bad) sbb sbb sarl push push pushq fisttpll push (bad) retq test int mov cmp jmp pop mov cwtl ds hlt popfq xchg mov push pushq test in movslq js mov xchg xchg rex.W (bad) test mov (bad) mov insb stc (bad) mov leaveq mov pop (bad) out xor mov jp mov (bad) push idivl rex.WRB rex.WXB lret pop fstl (bad) push repz retq adc cwtl iret lock movsb nop push push cmp jno push jnp idivb hlt loop xchg movabs xchg (bad) not imul clc out pushq movsl data16 cvtps2pi fcomps mov popfq (bad) out stos cmpl jge rcll pushfq mov sbb lods mov xlat fdiv mov cld pop pushfq mov and stc push jno jns out cwtl push cli lret out pop mov in (bad) and movabs std fbld add cltd (bad) rex.X sbb and (bad) callq in retq (bad) and out hlt and in sti jp xchg (bad) fdivr (bad) movsl pop mov mov fsts xor mov mov pop (bad) sbb mov popfq mov fsubs add idivl xlat adc scas mov (bad) pushq cld leaveq mov ds fimul xlat loopne mov imul nop cmp out sbb and adc out mov cmpsb mov rorb repz out cmp add sbb rex.WRB xchg cmpsl cmp and add insb mov out (bad) add add xchg out mov xchg rex.R sbb cltd adc add pop rex.RX add std push shld xor fsubrs xor sub rex.RXB sub rex.R ds xchg clc imul sbb mov cmpsb js or icebp adc sbb movabs mov mov (bad) rex adc mov rex.W (bad) cmp or scas hlt (bad) rex.WR mov popq xchg test es rex.WRX mov movabs xchg stos cwtl out jl sub and cwtl xchg scas test out mov lods sbb sbb or jrcxz movabs and sbb xchg imul xor push pop xor mov outsb imul and rex.WRX xchg sbb fs out rex.WR push out jns scas movslq jae loopne roll mov xchg sti (bad) ds (bad) lea cmpsl sbb xchg (bad) add pop (bad) (bad) and iret mov cltd pop cmp xchg or or sbb mov pushq (bad) cmovae lods (bad) rex.RB xor xor xchg jg retq adc insl xchg lret (bad) jg push repz fidiv imul add repnz cmp pop out or fmuls xchg push testl roll and (bad) sti stos cmp std lea fistpll xchg fstpl mov (bad) xlat jrcxz out int mov mov xchg xor rex.RX popfq (bad) (bad) loop data16 lcall (bad) pushq xchg (bad) pushq retq (bad) callq pop out movabs adc (bad) cld add stc adc lret or add xchg mov xchg add xchg (bad) movabs or sar sub (bad) or mov stos bnd scas xchg (bad) xchg popq stos xchg sahf and leaveq (bad) lea nop fisttpll add nop jo outsb or (bad) rex.RB mov cmp or or retq cmp movslq cmp adc adc (bad) in (bad) (bad) add mov push add (bad) (bad) pop push or loope lods lahf mov sbbl add (bad) fiadd (bad) (bad) loop (bad) lock clc or movabs sbb int adc (bad) cwtl popfq rex.R jg xchg pop in (bad) rcll jl leaveq (bad) enterq sbb mov jae (bad) add rorb or or outsl push jb rolb mov lea jge mov adc sti rcll shrl xchg cmc retq std retq outsb test cmc retq or xchg callq int xor mov out mov xlat rex.WR (bad) sub retq stos xchg rex xchg xchg xlat xor rex.WRX mov rex.RXB pop cmp rex fnstcw out idivb (bad) mov movsl lods stos xchg ror lret (bad) mov stos hlt pop push mov (bad) rex.WRX rex.WR (bad) movabs (bad) (bad) mov retq (bad) test xchg xchg (bad) fwait sbb jne fwait in cmpsl and xchg cltd rex.WRX stos adc jrcxz xchg adc insl in repz xchg cmpsl add sti jnp lahf mov movslq adc test xchg xchg adc movslq (bad) sbb xchg (bad) xchg movsb xchg xchg (bad) sbb adc lock cmp loope sub xchg pop rex.RXB repnz sub rex.WX sti fs std sub gs xchg (bad) mov rex.X shll xchg mov (bad) (bad) adc mov mov in ficoml callq sbb jne (bad) xchg decl and jge (bad) addl out mov outsb (bad) pop fstpl fdivs mov rex.WB andl xchg cld fwait jge jrcxz leaveq out loop xchg mov cwtl xchg mov or xchg out xchg pop xchg int xchg movabs (bad) cmc xchg testl xchg xlat mov xor stos out stos mov mov mov add (bad) or cmpsl add cmp lea xlat mov fisttp out sub jrcxz out test lea jnp lods out retq fstl fistl (bad) rorl out test mov ficom jl or adc mov incb (bad) loopne,pt retq lret nop mov rex.WRX popfq movsl ja fsubs xchg enterq or out cwtl push sub (bad) (bad) cwtl or sbb add jmp out loope mov sub jb adcl lods in xorl xchg jle xchg stos ffree outsb push fwait movsb cmpsb ds sbb sbb rex.WRX callq pushfq jmp movsl outsb rex.WXB lods outsb sub sub data16 mov sub je mov xchg (bad) movabs pop add sbb mov cwtl add lcall mov rex.WXB in add (bad) in (bad) xchg and xor retq cmc vpextrw (bad) adc push xor xchg jae rex.WRX mov mov lahf xchg mov in mov (bad) loope (bad) (bad) pop jl sahf loope fistpl pushfq pop (bad) popfq (bad) sbb popfq jo jl mov ds pushq mov sbb lods mov jrcxz popfq jge andb scas pop sub adc (bad) xor repz xchg xchg lods mov mov (bad) ds xor or xchg and in icebp or in lods out mov (bad) xchg mov xlat outsl mov mov outsl mov mov cmc rex.WRX insb xchg std (bad) xchg fsubrp or sarl sti adc lods scas callq rol xor and or (bad) xchg add pushq lahf mov pop fsubr andb adc pushq sti ffree jmp mov loop mov mov xchg sub jmpw pushq mov (bad) or sahf pop (bad) cld adc sbb pop mov pop jge mov cmp stos cwtl out mov movsb addl sbb add xor test pop mov adc nop fwait cltd ss sbb (bad) mov mov rex.WB (bad) add (bad) (bad) mov xchg repz cmpsl mov out push ss cmp adc mov fnstsw xchg adc xchg std rex.X fnstcw rex.WRB divps icebp loop xchg (bad) (bad) jle xchg fnstcw outsb mov xchg lock jmp mov idivb pop adc (bad) (bad) xchg mov (bad) sbb add retq jnp (bad) scas xchg (bad) lret adc rex pop jg xchg jge add mov popq jmp mov (bad) cltd (bad) pushfq rex.X cmpsl (bad) lret add sbb xchg movsb sub nop (bad) out push leaveq out and adc cmp scas (bad) cmp jmpq rex.XB out mov std and sub (bad) add mov js jle push lcall jrcxz cvtps2pi mov (bad) sbb and or stc iret lods out shl cmp mov (bad) mov mov xor jmpq cwtl mov out data16 mov movabs xchg fmul test push sbbl or (bad) test (bad) (bad) push fcoml pushq xchg pop pushq hlt cwtl sbb in orl pop mov (bad) xor xchg sarl imul xor fcmovne mov cld adc rex.RXB mov cmp fildll mov add lret or jrcxz rex.R imul push rex.XB sbb mov rex.XB loope xor sbb cwtl movsb je (bad) pop or fistpl int je (bad) out jge (bad) out outsl push jo (bad) scas sti (bad) adc (bad) callq test outsl rex.RXB cli cld (bad) mov lock cs mov in sbb jg (bad) cld movsb (bad) (bad) rex.WX sbb xor (bad) movabs insb fucom in push xor mov cmp xchg jnp rex.WXB and cmp fs outsl rex.WXB adc ss push (bad) std outsl (bad) loop movabs (bad) (bad) std push clc and mov (bad) (bad) js cmp cmc (bad) jno in xchg (bad) test or pop (bad) sbb (bad) adc fdivs mov fdivs repz rex.WX adc repnz std mov xchg sub (bad) mov pop rex.XB or sahf and sbb scas es addr32 (bad) (bad) (bad) cwtl or test cmp (bad) add add (bad) cli lods adc pushfq (bad) add mov add int xor jg rolb xchg (bad) movslq rcrl jno sti pop rorl cmp cmp rex.R add scas (bad) pushq jmpq mov stos jmpq jmpq (bad) repnz (bad) repz rex.XB (bad) and xchg add push mov lret sub add loope and in (bad) (bad) mov retq jrcxz sarl rex.RX mov (bad) (bad) mov sub (bad) mov rex outsb (bad) (bad) (bad) (bad) test clc jnp rex.RB rex.WX fprem mov (bad) pushfq ds jnp rex.WB and sub sub xchg cmp gs scas negb rex.WRXB (bad) scas (bad) jmpq mov cmp cmp sub cmp je xor cmc jmpq jmpq jmpq jmpq bts shl mov jmpq test mov mov xor ffree rex.XB add rex.RX fs jle jp rex.WRB scas xor gs lahf mov or repz and in rcr add rex.WB addl xor xor sahf cmpsl (bad) rex.B pop shll (bad) out cmp stos (bad) (bad) (bad) cld (bad) rex.WRX rex.WXB (bad) (bad) (bad) callq (bad) (bad) pop rorb or cwtl xchg repz je and rcrl xor pushq (bad) xor adc and xor insl rex.XB sbb pop sbb (bad) jb xchg push adc fnstcw (bad) (bad) sub push cmp xor (bad) (bad) mov rorb (bad) cmp hlt movabs sbb loopne xchg mov packuswb rex (bad) pop rex.B pop ss mov stc incl (bad) outsl push xor cmpsb (bad) stc (bad) pop out xor subl jns sbb mov pop sbb icebp test nop subb jl scas sbb movabs mov cmp pushq (bad) lahf (bad) and fidivl (bad) (bad) (bad) sti sar lret xchg rex.B (bad) (bad) incb rex.XB add add add adc sub add and add in or rex.WR sbb pop (bad) sub (bad) out and jrcxz lret xchg add (bad) rex.WB (bad) (bad) stc mov ds sahf scas jmpq (bad) mov add pop (bad) movabs loop hlt fimull rex.WRXB cmp insb outsl add addr32 rex.X push or push stc int3 cmpsl cmp adc stos mov out cltd ja xchg cmp sbb fistpl push rex.WRB (bad) insl pop (bad) fildl jrcxz mov mov repz (bad) enterq sub add pop test insb cmpsb sub lea (bad) (bad) (bad) sti (bad) mov (bad) (bad) (bad) (bad) movabs (bad) mov (bad) js mov add add cmc and cmp mov cmp out jrcxz int fisttpl mov (bad) adc pop rex.R xchg pop out shlb imul rex.WR shlb orl (bad) sub add sarl rex.RB lock (bad) mov cmp adc mov mov rex.WXB rcll mov rex and in enterq shlb (bad) out mov cmp push xchg sbb lods sub test push lods rex.RB adc jle,pn xchg sbb pop outsb push mov xor imul enterq mov xchg test (bad) (bad) jo outsb movabs shrb jg (bad) (bad) (bad) sti cmpsl jmp rex.RXB (bad) (bad) incb movabs callq add add jge (bad) rex.RXB xchg rex.B rex.WX add (bad) mov rex.WB mov pop lock mov mov ja (bad) cmc sahf and in mov add pop pushq rex.R rex.XB rex rex.RB mov js jno or fs mov mov (bad) (bad) mov cld (bad) ss cld xchg rex.WXB test out (bad) cmp pop andl negl (bad) sub int3 jl rex.RXB rex.WR enterq outsl rex.WX jl data16 fsts (bad) (bad) (bad) cld mov cmp (bad) (bad) (bad) jmpq mov fimull jb (bad) lret (bad) mov nop rex.W (bad) fxch (bad) int3 adc jge xor pop rex.WRB mov or (bad) add pop mov add add push out xchg repz pushq push pop (bad) pop out push retq sub repz adc pop cli retq insl jge jmpq repnz cmpsl test sar pop loope rcrb pop xor fimull jne cmp or fstp in (bad) pop loopne rex.X pop sbb nop push (bad) test and lahf cmp ds mov (bad) adc or jae iret rcrl rex.XB fs insb (bad) imul jnp (bad) (bad) test cmp (bad) jg (bad) (bad) cld rex.B scas adc (bad) (bad) lcall xor enterq (bad) xchg jb iret jns rex.W sahf sbb mov mov lret jl sahf rex.R xchg mov and add add je rcrb enterq orb (bad) ror sub jns xchg test (bad) int3 scas mov int xchg test mov adc or xchg mov mov rex.XB je stc sub cmp cmc pushq bt test stc bt cmp jmpq or rex.RXB or loope lret adc push or (bad) push mov rex.B ror repnz lret test fiaddl es in cltd push pop repnz mov or ss std rex.RXB cld imul jp mov rex.RXB movabs (bad) mov addr32 loop rex.WXB retq rcrb adc out xchg mov jmp (bad) (bad) (bad) cld (bad) gs fucomi (bad) (bad) (bad) (bad) (bad) mov (bad) stos jle or pop sbb pushq ds (bad) xor fldl sbbl add mov outsb rex.B (bad) mov roll add adc movsl cmp (bad) loopne xchg (bad) cs cmc out mov outsl ja rex.WXB lock lret shll mov outsb lods int3 (bad) pushq callq pop leaveq rex.WR rex.XB mov and add push jmp mov cmc lods (bad) test movsl js stos mov cwtl and mov mov shrl (bad) pushfq hlt enterq sarb (bad) xchg adc je rex.R mov sbb jnp xchg adc add mov adc movslq in hlt negl or or ud2 imul jmpq and pop nop jo scas mov movabs cmp (bad) (bad) sti rex.W scas sbb (bad) (bad) (bad) and (bad) mov clc imul rex.RX (bad) (bad) jmpq (bad) (bad) (bad) sbb rcr lahf pop popfq loop vcvtdq2pd mov xor es sarb fdivr popfq sub cmp iret lods sbb (bad) insb stc int3 mov rex.R mov add bt cmp retq jmpq mov jmpq sbb test rex.X loopne and std rex.W jge add movabs pop sub idiv xchg (bad) mov and movabs (bad) and pop and push or (bad) add imul pop adc mov adc out cltd push push rex.WRXB jg hlt sub fldt movabs rex.RB mov cld push cmp bt cmp jmpq mov push (bad) xchg (bad) pop repz out stos loopne mov addr32 je movsl rex.XB in jrcxz fildll jle callq in (bad) in jo xchg lret (bad) push (bad) xchg loopne cmp out shl rex.W sbb imul push adc sbb cmpb (bad) (bad) and jge movsl (bad) out rex.RB add mov mov sahf sub or mov rex.RB outsl sbb add jmpq jmpq or (bad) movslq push (bad) add rex.WRX cmpsl pop (bad) outsb popfq in test (bad) push cmpb movsb pop sub mov movslq mov and test nop scas enterq sub movabs (bad) cmp rcrb jle pushq int add cli icebp xlat add (bad) (bad) (bad) (bad) std iret rex.WXB adc or push sub (bad) mov test mov mov (bad) (bad) sbb pushq icebp loop orb test adc (bad) (bad) ljmp (bad) mov pop or mov sbb pop repz xor adc (bad) xchg xchg (bad) mov retq fbstp outsb sub cwtl (bad) xor imul adc (bad) outsb mov rex.RXB jl,pn je sub shld shrd stc push ror mov bt bt sub jmpq cmp clc add stc test movzwl sub data16 mull out add out (bad) cmpsl mov test jmpq stc add jmpq test sub jmpq je jmpq jmpq jae sar rol rcr mov sub rol shr mov test clc bsr movzbl mov cmc stc xor cmp bt clc repnz jmpq rex.WRB jb mov adc (bad) lea sar in pop sbb (bad) leaveq cmp and loopne cmp stos movabs rex.RXB adc mov (bad) rex xchg rex.WRXB (bad) (bad) mov jge test mov push lods (bad) or jae mov (bad) or in pop mov loop sub retq (bad) (bad) (bad) sti fs mov mov (bad) (bad) incb int add (bad) cmp xor cmp xorl rcrl xchg notb rex.WX sbb jge cs scas ss outsb clc in mov data16 rex.RXB cmc push and (bad) cmp cld movabs loopne rex.WRX adc movabs jo (bad) not bswap mov mov movzbw not mov retq cmp mov (bad) jmpq and mov cli add mov rex.WXB jno (bad) jmpq out (bad) icebp lcall mov add add or callq (bad) (bad) jnp or (bad) cmp adc mov in gs (bad) adc scas subl rex sbb stos scas mov rex.R scas std jo pop repz movsb nopl rex add cmc add jmpq push push xor xor fs insb add adc add (bad) loope add bswap lea lea xchg pop xchg movsbq lea pop movsbl jp pop retq or hlt rex.XB movslq and movabs out insl cmp fistp movsl adc or clc repz pop test rex.WX lock push cmp (bad) add sbb mov jmpq roll jne sbb mov cmpsl rcrl ja pop add loopne fdivr enterq (bad) (bad) (bad) test rex.RXB subb rcl pop out in nop (bad) mov push fwait mov cwtl mov popfq adc (bad) jnp (bad) out std xchg (bad) mov rolb mov (bad) cltd push jl lahf mov jg clc mov mov pushq nop jnp pop mov rex.WX jmpq mov pop rex sbb add mov jmp (bad) mov outsl insb rex.X js pop ja sahf (bad) rcr xlat or xor mov scas pushq leaveq cli sbb test (bad) in (bad) in rex.WX rex.X lret and mov shr int3 test adc (bad) (bad) (bad) std jae mov add add or mov andl insl std test sbb imul push sub sub xor mov (bad) test iret mov rex.WX loope je (bad) icebp movsbw push bt cmc ror shr mov ror rcl sub lea not movzbw lea jmpq mov movsbw bswap pop jmpq pushq jmpq test sbb icebp sbb fwait xchg retq (bad) fcom nop fwait cmp movabs cmp mov fwait jge ja sbb rex.WRB fwait enterq repz fwait cmpsl cmpsb pushq subb (bad) xchg mov sbb (bad) sbb movabs fwait mov cld rex.WRXB addr32 loop jge (bad) sub or fadds lret jne jp (bad) insl rex.W mov and outsb push movabs retq and sbbl fwait push sarl scas jle outsl es and (bad) mov xchg loope movabs pop fbstp or callq xorl (bad) pushq jno xchg idivl add rex.B std mov (bad) xchg jg fwait fs jrcxz repnz rex.W (bad) cmp lret rex.WRX adc jp sub (bad) xor mov rex.B clc (bad) xlat lret fldt mov xorl sub jae and lret add and sbb repnz mov (bad) pop sub sbb push push lret je rex.WXB fwait retq int mov mov hlt (bad) xor out jg movsb out xchg test xor adc mov gs add scas jns jb xchg shll pushq adcl icebp xlat pop in je sbb decb fwait test repz xchg (bad) movabs rex.RXB lods rex.XB lret or sub (bad) sub retq sbb jnp lahf fistpl loopne movabs ds fnstenv pop (bad) int3 pop (bad) jae mov fldt mov xchg enterq jo int3 rex.WRB insb or (bad) stos jb leaveq sbb mov clc pop (bad) iret (bad) rex.WRXB mul cmp insl mov adc (bad) fwait rorl push rolb sub adc rex.WXB lret (bad) test and add shlb and in add jnp push mov fwait (bad) pushq mov fstl fwait sbb jns fwait sbb lret mov mov (bad) push fwait ss out jae cld (bad) fistp stos xlat or jbe and fwait jle rol ds xchg js repz rex.WR xor jb cs add pushq fcmovne fisub or add xchg fcompl rorl cmpsb jae fmul retq in sbbl (bad) rex.WX (bad) mov jns mov fwait stc in in cmpsl pop fwait roll sbb (bad) movsb sub fwait rex.WR (bad) or add xlat lcall cs mov push fwait jns cmp fwait retq fs (bad) addr32 scas sbb std xchg ss int sbb jge scas mov jo sbb rex.XB gs xor int (bad) (bad) pop add out xchg in pop jp mov fistpl (bad) gs sub out cmp sti rex.X (bad) add (bad) shll add shrl fisttpl mov (bad) fwait pop loope lods pushq rex.WRXB stc mov fwait imul adc rex.W stc cs mov xchg insl fidivrl add xor (bad) fistl (bad) scas xchg fwait jg xchg in sbb mov sti movsl fisttpl xchg fiaddl je (bad) push (bad) stc sub fwait iret (bad) add (bad) mov (bad) fwait lea sub fdivp movabs sahf lea xchg retq pop jnp xor movabs mov xchg lods fwait jne (bad) cmp push rcll mov xchg (bad) fdivl scas lahf adc and mov ss mov xchg (bad) out (bad) rcll xchg add or ds movabs pop fwait adc (bad) pushq rex push stos lods iret (bad) retq mov insl jns pushq out stos or sbb out cwtl out cmpsl in cmpsb out pop fwait cld imul xchg mov (bad) mov add mov icebp (bad) test fcmovne (bad) adc mov pushq jbe (bad) sub cmc sbb xor mov outsb sbb pushq rex.WR fwait or out sarb movsl fwait es jl rex.R (bad) or rex.W imul movabs mov or xchg sub fwait out rex.RB sub mov mov js sbb pop lret out std (bad) mov out pop jmp rex.X (bad) fwait iret (bad) mov (bad) (bad) out leaveq xchg sbb (bad) sti or fstl rex.X out xchg xchg clc lret xchg fwait (bad) adc callq rolb (bad) shlb mov rex.WRB rex.X adc or callq lods mov fwait add push push push rex.R mov (bad) mov out (bad) add mov retq xchg mov (bad) fstl (bad) fs (bad) cli fwait int3 (bad) insb cmp loop gs rex.B rex.WRX rex.XB (bad) fwait sarq rcll lahf adc mov adc lods pushq in fwait xorb icebp adc movslq xor int xor mov movabs pop callq fwait (bad) mov cmovb (bad) mov cld lea test rex.X int fwait mov push callq clc in (bad) fwait (bad) cmp xor xor pop jmpq fwait and loop int rex.WRX pop or cmc (bad) mov lods (bad) xor push retq callq adc push jle pop or xlat add (bad) pop (bad) sbb lods fidivr adc cli (bad) in stos loope sti add (bad) outsl cmp rex.RB cltd fwait or jno psubsw adc mov xchg mov sub movsb or (bad) mov fwait sub (bad) rex.WB xor mov xchg outsb insb rex.B cwtl or mov movabs jge lret jmpq loop ljmp add in jge push pushfq rex fwait sub insb cli sbb rex.B bnd movabs xchg cld push retq fwait cmp jp sbb xor (bad) je (bad) out adc movsl fcoml mov retq (bad) xchg pop callq sub insb rex.XB es icebp imul (bad) mov clc rex.WRXB mov int3 (bad) fdivrs movabs insl mov sbb outsl jge repz test sbb jae loope adc cwtl out xorb cmpsl or (bad) fdivrs sbb out sti test andl push idiv loop push int3 fwait sbb cmp jnp jrcxz loope js fwait lret int imul jmpq shrl cmp mov xor push (bad) pushq cmpsb push xchg xor icebp leaveq movabs fs xor lock rex.WRXB imul in je fwait (bad) cltd sub movabs mov push mov (bad) xor pop jl jb xchg pushq (bad) imul (bad) scas sbb rex.RXB cltd jmp ds cmp clc xor insl jne sbb mov lahf mov mov adc stos xlat imul and in loopne sbb rex.X (bad) lock cmp jno in fwait (bad) pushq and in mov rex.X fwait pop retq rex.WRXB xorl pushq stc lock rex.W (bad) sub xor (bad) sub and mov stos int pop stc retq mov fs (bad) mov or xor movsl adc setnp loope mov rex.WR (bad) sub add xchg or lret or fwait push rex.WX test (bad) shlb in (bad) (bad) (bad) jmp rcrl fwait rex.WRB jg movabs stos sbb sti popfq test sbb xchg mov jrcxz rex.XB out in in (bad) cmc retq add xchg repz jmp (bad) xorl rcll sbb int pushfq (bad) pop ror or lret sbb (bad) sbb xchg sbb fwait popfq adc adc xlat jmp sbb repnz (bad) out (bad) xor lret xor mov (bad) lods sub mov test pop (bad) mov jl jae xchg movabs sub pop mov lahf sub mov xor pop (bad) mov rcll es (bad) (bad) or mov fisubrl (bad) sahf adc xchg loopne (bad) popfq lods ds (bad) or or or (bad) xchg (bad) (bad) adcl push xchg and mov test movabs sbb (bad) xchg and orb lret or fdivrl push pushfq jbe xchg and pop mov or cmpsl xchg (bad) mov sbb lods sbb fsubl xor xor mov neg xchg sbb cltd mov mov xchg ljmp pop jp sub sub or cmpsl add lods (bad) es (bad) mov or idiv mov retq pop (bad) or mov mov xlat frstor fcmovne lods lahf lods cmpsl xchg mov rex.WR incl lods movabs mov rorb or rex.WRB mov lret fistpl cmp xchg xlat movsl lahf lods movabs push scas adc and sbb rex.WX and and or cs stos sub sub sub xor cmp (bad) (bad) and add fstpl test sub lods mov mov add mov fs mov mov mov fdivl mov andl lods jp mov cli sbb mov cs pop xchg adc mov (bad) (bad) cmp (bad) xchg xor xchg mov mov cmp test sub jrcxz popfq jmp (bad) push adc sbb fwait cmp sub cs rclb ror movslq (bad) mov lods xchg pushfq sbb cmp ds mov fdivrs mov mov or (bad) mov insb xor cmp ds (bad) xchg pop fistpl jmpq icebp sub (bad) sbb pop sahf xchg or repz add adc mov (bad) pushfq jrcxz fwait (bad) sahf (bad) xchg sbb (bad) sbb fwait (bad) xchg (bad) (bad) adc xchg adc fwait (bad) mov xchg mov mov add add (bad) incl addb fwait add cmp (bad) mov mov mov xor (bad) scas xor mov stos sub sub (bad) cmpsl sub stos sub add (bad) lahf sbb movabs cmpsl mov add movsb mov movsl lea out in or rcrl xchg cwtl movsb repz push add mov int (bad) xchg pushq imull movabs jmp jmp jmp je xchg xchg cmp hlt rorl mov xor cmc stc mov xchg scas mov sub cmpsl sahf sub cli xchg sub jle jo and xchg sahf out adc cltd sub lods cmpsb test mov push sub or mov (bad) mov jb (bad) test cmp cmp sub or nop mov xchg cli out rex.WR sub jle xchg mov mov sar movsb test in (bad) repz loopne enterq xchg lock or sub ja xor rex.XB es cs mov mov stos (bad) int mov rex.WR rex.WR test rex.WR subl cwtl (bad) mov movabs fsubr callq sub xchg rex.WRB (bad) lahf push cmp or test mov mov (bad) mov lods (bad) xchg callq js nop in lods mov cs (bad) mov xchg rex.W mov (bad) sub clc (bad) callq movabs movabs cmpsb movabs clc shll mov in leaveq mov lahf (bad) sarb mov adc sti movsb cmp add jrcxz xchg je fstpt sub xchg out fmul mov inc xor mov cltd (bad) movsl mov int xchg lahf mov pop in sub sahf mov fsubrs movsb cmp sub mov mov mov test xchg shrl retq push popfq add int sub sub popfq incl sub mov xchg fidivl (bad) stos test scas test cmc stos int3 (bad) push (bad) cltd movsl rex.WX lret and xor lods lea shrl fisttpl xchg sbb andb xchg (bad) xchg or sti outsl lods xchg add xchg or std adc mov movabs in fnstcw adc lret insl lods or retq insb fnstcw lahf or movabs fidivrl movslq loope mov movsl pop mov in (bad) xchg cmp xchg mov mov mov (bad) out cwtl (bad) mov pushfq adcl cmp scas movabs mov (bad) mov scas je lods out clc or (bad) mov in ds cmpsl (bad) (bad) ss or test mov mov xchg (bad) mov sbb and rorl pop xchg pop push (bad) pop (bad) (bad) (bad) notl adc cmpl in adc (bad) cmp sbb xchg (bad) (bad) movsl in nop pop pushfq punpckhbw xlat or xchg ljmp push mov rex.WRX outsl jne adc mov adcb (bad) lahf movabs sbb mov roll mov xchg jmpq je cmp xchg fcompl std mov pushfq (bad) mull pushfq sbb pushfq xchg pushfq rex.XB in and xchg xchg rex.WRXB addl gs or fistpl fstpl pop fcomps fwait pop ficompl push (bad) push (bad) fwait push (bad) push iret push rclb fwait push rclb rex.WR rex.WRB rex.WRX rex.WRXB rex.W rex.WX rex.R rex.RB movb rolb rex.X jl jge fwait jle jg js jns fwait jp jnp je jne fwait jbe ja jo jno fwait jb jae insb in insl in fwait outsb out outsl out callq (bad) imul in in data16 fbld (bad) loope (bad) movslq and mov and mov enterq in mov sub movabs test sub rep pmullw and movsb rex.RXB (bad) loop movabs cmp movsb mov and cmp (bad) in rorl adc cs mov sub (bad) pop cmpsl movsb fistp (bad) jge rex.RX stos sub in cs xchg xor jp stos lods fs sub mov in push xchg lods (bad) rorl retq and mov rex.WRB movabs sbb push and movabs rex.WRB orl xchg movsl xor cmp (bad) (bad) in add stos imul mov rex.WR rorl cmp (bad) nop sbb loop adc mov sub xchg xchg nop lods mov xchg mov cmp cwtl lods fadds mov lods rex lods insl stos fmuls xlat xor xor int cmpsl sub push cmp lods sbb in jnp hlt sub out int3 and test mov mov mov jae in add pop fisttpl lock pop lahf xor pushq fs stos addr32 ljmp lret (bad) (bad) scas xchg xchg mov test xchg cwtl (bad) insl push xchg (bad) adc push sbb mov mov cmp adc test movabs int3 cld xchg sbb xlat or xlat sbb mov leaveq mov cltd mov and (bad) fildll adcl or in movsw xchg (bad) cli xchg lods xchg xchg pop movsb adc sub cwtl xchg scas movabs sub sbb cmpsl stos adc and xchg push subl jge test adc cmp (bad) mov xlat test scas fidivrl mov callq xchg (bad) movsb xchg inc add (bad) movabs insb xlat jrcxz jmpq in xchg jmp (bad) icebp or std in sti movsb sar (bad) int xor xchg push retq (bad) leaveq in (bad) movsb int lret xchg rcr (bad) iret or fldln2 xlat movsb fldl jmpq xchg movsl fidivrl movabs movsb mov scas xchg mov (bad) mov callq mov xchg and (bad) (bad) jmp (bad) sti or stos push mov (bad) std rep retq add xchg cmpsl fidivrl scas or (bad) in xchg (bad) out out std out testl scas xchg sbb xchg jmp out mov in andl data16 test out incl (bad) mov lret mov sub lods sub sbb leaveq mov sub hlt cli mov pop sub xchg fs lock xor sub es or jne mov sub xor jp sbb (bad) test cmpsl sub pop cmpsl cwtl subl fisub mov add mov push in xchg fnstenv (bad) xchg es shrl jo (bad) cs hlt sbb scas scas (bad) mov movabs std je xchg (bad) jg movsb or and xchg (bad) out pop rex.WRB mov rclb int3 add and test xchg sub lods int or ja mov lods rex.WRB stos gs fisttp xor mov test lea (bad) movsb (bad) rex.WR xchg push or test nop lods test cmp (bad) insl test rex.WRX xchg xor movsl xchg sbb in xor or movsb sar outsb lret mov test push test sbb (bad) adc and push (bad) fistp mov clc cltd movabs sbb movsb sub adc lahf (bad) (bad) (bad) or adc push movabs xchg je cmpsb iret or cmpl enterq xchg pushq (bad) int3 mov cmp cmpsl pushfq xchg and mov xor xchg mov adc mov xchg xchg decl pushq lret rex.WX int3 je xchg int3 je xor mov sarb movsl cmp mov sub movsl sbb imull (bad) shr pushq (bad) repz in movl lods rex.WX xchg sub (bad) pop xchg and (bad) push ficomp fmuls insb (bad) nop or in adc sbb ds in mov notl add sbb xor mov shl (bad) cmp out cmp repz (bad) mov xor rcll mov xchg or cmp (bad) xor rex.WRB mov mov repz sti jle movsl xchg lods retq lret rex (bad) cltd rcrl retq (bad) notb mov jmp xchg add mov xchg (bad) repz xchg (bad) (bad) xchg xchg movsl xchg or xchg mov mov xchg notl xlat mov cltd lret rex.WX rcl rex.RXB scas repz leaveq stos mov mov mov mov mov cmp xchg out xchg xchg mov cltd sti pop rex out in mov out xor cltd movabs lods mov cmp mov mov divl sub movslq jmp mov repz xchg fpatan test mov jo int stos out shll clc mov loopne retq (bad) mov repz jne movabs (bad) xor lahf jne sub fsubs rex.R scas adc scas jmp rex.WX push mov in (bad) xchg (bad) xchg mov or push xchg cld mov mov stos lret or loop mov idiv mov cmp mov es (bad) cltd pop nop iret (bad) xchg xchg (bad) sbb adc cmp pop mov pushq sbb cs jmp sub xor add and std cmp adc sbb cmp cmpsb mov push movsl (bad) lea rex.RX (bad) fistpll xchg pop mov in mov callq (bad) mov scas sbb repz adc jmp mov out xor insb sbb adc cli and out subl xchg jrcxz,pt (bad) stc push xchg (bad) adc jmp mov or xchg fcomps sub lahf fcompl sub jmpq and insl mov clc mov cmpsl jbe mov mov iret sbb out scas ljmp fucomip fistl (bad) mov movabs leaveq push adc popfq pop mov out jrcxz xchg loope mov xchg test test add rcrl nop pop adcb movb mov xchg adc (bad) xchg mov (bad) mov test (bad) (bad) cmp mov mov xor and xchg cs mov xchg lea sub cmpsl or xchg xchg popfq pop xchg (bad) mov mov test mov mov mov sahf xor js test rex.RX xlat cmp xchg sbb (bad) pop mov or orl or out (bad) xchg or add sahf adc fwait and test xchg or (bad) mov jrcxz sbb and sbb addr32 (bad) mov (bad) movabs push (bad) movabs movabs movabs rex.WXB fwait sahf xchg cmp (bad) sub adc xchg mov or (bad) xchg je pushfq lea rex.RB (bad) (bad) rex.R stos (bad) repz cmp movabs callq xor jg adc and (bad) cs pop cmp insl out xchg mov hlt stc sub sbb or and push or mov ds adcl test movabs xorb lea movsb sub movsl fiaddl push rex.RB and sub (bad) lahf xchg sahf lock mov pop cmp sub sub mov mov (bad) js mov mov sub xchg lods rex.X stos mov xlat fildll pop mov insb mov retq push rex.W mov (bad) (bad) xlat (bad) sub lods sub adc lods lahf mov (bad) icebp and sbb mov shll rex.RXB adc pop jmp clc jbe pop sub test movabs adc mov push xlat ja out jg lods sub sarb test xchg sub mov cmp cmp js cmpsl mov pop mov or pop sub cmp (bad) mov (bad) xchg cmp test test (bad) cli cs pushfq xchg mov mov rex.WRX pop ficomp jno,pn icebp sub (bad) adc xor xchg or xor clc mov movabs and lea xor pop mov add jb xor cmp (bad) mov (bad) rex.WRB or cmp movsb pop cmpl fildl xlat (bad) mov and cwtl cmp mov mov xchg cmpsl lahf sbb sbb add mov rorb and in sbb (bad) xor push in rclb push enterq fdivl cmp sub mov xchg xor mov movsl (bad) (bad) (bad) icebp mov and or cld fchs (bad) clc (bad) test mov (bad) mov adc and sub add or sbb (bad) test popfq rex xchg mov movabs sub cs jb adc xor jo test lahf addr32 clc fdiv mov loope xchg cmpsl mov (bad) movabs sub push in movabs lret and rex.RXB repnz mov test in mov popfq decl ds cmp xlat in adc scas divb xchg mov cmp std and rex.R repz rorb push (bad) shlb sub movsl orl or cmp (bad) leaveq rex.WR or faddl add fist or mov xor mov xlat mov repz (bad) jne stos scas and push test (bad) (bad) mov (bad) mov es xchg xchg subb rex.WR xchg push adc xchg in movsb xor mov movslq jne xchg cmp mov dec (bad) sbb lea adc adc stos pushq rex.WRX (bad) adc scas (bad) push add scas movsb lods sub or push mov loopne rex.RXB rex.WRX mov mov (bad) pop loop jmpq in (bad) mov (bad) sub movabs rex.X (bad) xchg (bad) jne out out cli loopne xor js es sub add rex.B (bad) callq xchg mov sub movabs sarb jg orb mov (bad) sub and out out xor rex.WR leaveq movsb rex.RX rex.WR rex.WR or movsl mov stos or (bad) sub push mov mov testl in mov cmp rcr mov movabs lahf pop or (bad) mov cli movsb sbb adc leaveq rex.RB xor (bad) cmpsl add rex.R mov mov out jge sbb or (bad) out (bad) mov js cwtl in xor or xor pushq mov push shlb jmpq push (bad) and adc fisttp movabs jl leaveq push fwait test jo and jno ss sub rex.WX shll cli insl es sub add sbb jmp nop cmpsl (bad) (bad) jne (bad) sbb add and lea movabs outsb and (bad) pop sbb jae mov xchg cmp (bad) fisubl add xchg pop xchg lahf cs gs pop fcmovbe enterq repz cmp std sbb add subl (bad) cs movsl mov cmp sub scas rex.R rex.RX or jne rex.WRXB lea test (bad) adc lahf (bad) (bad) mov xor nop push adc stos pop cli scas cmp adc fisttpl frstor mov mov fstl (bad) divl cmp mov push orl mov and jp roll rex.R xor callq xchg xor xchg xchg sbb rolb mov add cld pop mov rorb adc mov lods int (bad) sbb rex.R sub fist lock and cmpsb sub push mov mov mov and jrcxz lock mov cmp fcoms jle retq xor out mov divl xlat repz and pushq sbb in xor (bad) xor (bad) mov stos mov loopne movabs popfq je gs movslq cmp ds js test cmc rcl lods push xchg js loopne xor xchg mov scas xor (bad) fbstp xchg adc (bad) (bad) mov mov sarl mov cmpsb cs lea pop rex.WRXB movsb test rex.WRB hlt in sub mov xchg xlat xor test push cld cmp (bad) testl lea pop cmp rex.RX leaveq in test mov or out and js (bad) xchg xor in vxorps mov out in (bad) mov (bad) (bad) pushfq pop xchg or lret add movsb stos add fisttp retq movsb movabs adc not in movabs (bad) fidivrl lahf or xchg in jmp add xchg retq fidivrl iret and (bad) scas or or mov xchg mov fist xlat out in iret movsb movabs mov (bad) imull (bad) jmp fnstcw mov testl lahf xchg scas fidivrl jmpq adc not in stos movsb mov adcl adc mull jmpq (bad) fnstcw (bad) or stos in mov incl xchg xchg out mov cmpsl idivl (bad) (bad) repz (bad) or mov xchg (bad) mov xlat push cmpsl divl jmpq adc stos push xchg jrcxz lods out add xchg iret fidivrl mov xchg xlat out adc retq (bad) out in stos movsb xchg fist sbb (bad) and sahf xchg std fildl adc jp add fidivrl movabs sbb pushfq iret rcrl xchg mov adc pop sbb (bad) (bad) out fnstenv add adcl xchg out (bad) mov (bad) pop xchg movabs leaveq xlat test (bad) stc int xchg sbb xchg xchg loope jle (bad) rcl push add adc (bad) xchg adc or iret jmpq lret and scas cltd push xor sahf test (bad) adc sbb lods cmpsl sbb rex.XB sbb xchg cmp mov lods xchg and mov xchg movabs jge mov mov sti xchg fmull (bad) adc sub xchg (bad) movabs (bad) mov xchg lods callq jrcxz add mov mov out clc sbb outsl in enterq imul rex.XB rex.WRXB sub mov movabs ss je mov mov cmc pop movsl cwtl sbb imul popfq (bad) ss xor or stos lahf push jno in sbb mov xor xchg xchg mov mov clc je cs cmc es mov movsl adc std mov (bad) rex.R ss sub adc in mov and mov jg fadds test sub xorl xlat pop fdivl movabs rorl mov lret mov rex.WRX mov mov mov test xchg push outsb xchg movsb sub js rex.B mov mov fmuls (bad) (bad) fldenv sub mov mov add mov push (bad) (bad) or pushq rex.XB rex.WX mov xchg cmpsl sti pushq js movsl callq sub push movabs rex.XB or fdivs xor ss jbe or pop iret stc jb rex.XB (bad) cmp mov (bad) mov cwtl adc sti add cmpsq rex.RXB xchg or int rex.WXB push add out rex.WRX xor mov sub insl test lods ror (bad) mov retq rex.WX sub pop or setb lahf jne insl shrd (bad) push addb fcmovnb cli sarl sbb xchg sub xchg subl push cmpsl mov (bad) (bad) (bad) movsb xor mov pop divl testb enterq loope,pt jo imull out sub mov mov mov cmp adc jg sbb or xor mov (bad) mov xor lea mov out cld xchg mov lods mov lret pop stos mov movsb mov or jns (bad) stos movabs mov out pushq add or (bad) scas mov xchg sbb mov jge test es pushfq (bad) xor mov repz mov cmp (bad) data16 test (bad) (bad) (bad) lret adc mov jp callq mov (bad) lea cmpsl sub xchg (bad) jne add cmp sub stos xchg mov cmp sub xor mov (bad) cmp and (bad) or xchg int3 jo pop cmc sub or mov sub scas fsubrs add shrl or sub loop popq (bad) pop mov cmp pop rex.W scas (bad) stc insb mov cmp mov rorl mov scas cmp mov mov mov addr32 fistpll cli scas loopne int3 (bad) popfq pop sbbb (bad) in cs sub mov addb callq and mov in and shlb lods rex.R jge jge rex.RX push sub add (bad) mov cmpsl lock cmpsl mov mov js add pop (bad) fldenv (bad) and sub cmpsb (bad) movsl cmp cs mov stc imul movsl cmpsl fs repnz lock jns mov mov pop adc mov movsb xlat lods xchg mov or int out or es xchg adc pop (bad) test jrcxz push orl pushfq xor mov xor cmpsb (bad) rex.WRXB and mov (bad) cmpsb test lods mov (bad) mov test (bad) sahf add adc add mov xor (bad) rex.RX or rex.WRX pushq xchg or (bad) (bad) cld in xor ss movl subb sbbl pop xchg stos (bad) mov rorl rex.WRXB add or fldl test xchg rex.R rex.RX mov (bad) lea and fsincos movb sbb (bad) insl cmp (bad) lods rex.WX rex.WRXB xlat lods and cmpsb mov pop rex.RB (bad) cmp mov in and xchg fidivl lret and mov retq rex.RB and mov cmpsl xor scas (bad) mov rex.WRXB jno pushq (bad) and and mov jrcxz rex.WR (bad) mov es (bad) cmpb cmpsl add cmp cmp in (bad) (bad) stc jg in icebp stos fs movabs mov jmp in adc mov ds movsl je rex.WR fstpt movabs (bad) cmp lgs rex.WXB xor cs (bad) cltd scas xchg and sub imul in insl (bad) ss stos xchg push (bad) rex.WRX adc sbb in adc rex.WRB rex.WR mov movsl rex.B cmp (bad) sub (bad) repnz mov or (bad) xor nop js imul fidivrl loopne lods add sbb (bad) cli cmp icebp xor (bad) cmp movabs sbb mov pushfq cmp sbb test test sbb (bad) lea lods xchg movsb vucomiss sbb add xor xchg movabs cmp mov mov fsubl mov repz test sub xchg int test mov push movabs sub out xor (bad) test stc pop (bad) mov or data16 negb adc cmp mov cmp or xor sub rex.WRX cmp (bad) test gs (bad) divl jrcxz lret jmpq sub pop imull rcll push seta in shll xchg outsb lret test (bad) movsl sub jmp (bad) sti or (bad) push stos fnop mov push rcll int or rex.WRX pushq sbb insb (bad) xchg rep movsb andl movsb fxch rex.WR insb xchg movabs xchg imull mov sub fistpll out orb fdivrs sub mov (bad) or mov sub outsb mov mov xchg stos xchg mull iret xchg xor jg mov xchg cmp lock movslq xor xchg scas cmp and adc (bad) mov retq ds xchg (bad) (bad) mov and leaveq xchg gs jne repz pushfq fsubl fcmovu add lret adc rex.WR lea hlt lea (bad) ds lcall xchg stos adc mov adc fimul movsb mov je rcl repz shll (bad) insb mov mov insb popfq mov mov xchg jno (bad) sub xchg (bad) xchg cmpsl xchg xchg rex.RXB movabs movsl enterq mov nop sbb jg pop mov xchg or (bad) rorl lods test movsl xchg xor repz movabs xor jb sqrtps out sahf repz (bad) rorl sbb or or (bad) adc je mov cmp xchg xor xchg cmpsl mov xchg mov mov fistl lret rex.WRB rex.X cmpsl mov mov sbb pop xchg clc pushfq mov xchg jne or push or mov xchg push insl sub (bad) pushq xor xchg js ficom rex.WR test push sbb cltd jge scas add rex.WR mov mov repz (bad) rex.RXB retq idivl (bad) cmc mov rex xchg rex.WRB int mov rex.WRX (bad) lock or push (bad) xchg or fcmovu mov mov sbb or test or (bad) lahf shll frstor callq lock cmc faddl (bad) hlt cmp mov lahf (bad) jae xchg fs cltd out (bad) xchg push pushfq in adcl pop decl data16 mov xchg jnp outsl cwtl add cmpsl xchg movsb adc cwtl stos cmp jmp sub (bad) mov rcl mov je repz int mov adc cmp adc xchg jle mov rex.RB pushq in xchg add int3 sub rex.WB in mov adc rex.RB (bad) scas fsubrs xchg ljmp in mov jae movabs lret shlb xchg sti (bad) or mov xchg (bad) or (bad) mov pushq xchg xor addl mov test mov xchg xor mov (bad) iret (bad) add mov test add (bad) andl cltd mov (bad) or sbb or xchg rex.RXB repz lods or xor xor sbb mov (bad) cmc jne and pop std mov (bad) mov loope in repz adc insb (bad) or sarb mov pop int mov fild loop sbb (bad) and callq xchg adc retq in push movabs out xor mov cmp mov in xor and lea repnz movabs (bad) or (bad) fild sbb sub (bad) adc or int (bad) adc (bad) cmp mov in xor movsb mov fldcw xchg js cwtl mov fcompl hlt or sbb cwtl sbb mov push (bad) int3 (bad) adc out pop (bad) (bad) test sbb (bad) iret xchg cwtl (bad) mov xor sub and xor push pop xchg movsl pop std xor in push movabs ds sbb adc mov mov lahf push xchg mov (bad) rclb hlt push (bad) cmp retq jo xor in ss jg rclb (bad) jno std xor in rex.R sub popfq push cmp adc (bad) jp jne fs mov fs adc out fs or int (bad) adc retq push movabs movsl adc pop clc sbb cs mov add cli insl (bad) (bad) cmp popfq decb mov divb push cwtl (bad) movabs sub xor adc retq jne adc (bad) mov insw mov fnsetpm(287 scas rclb (bad) xchg xor frstpm(287 mov in adc int3 mov (bad) retq fnsetpm(287 or in xor movslq ffreep loopne,pt and xor or rex.X rex.X mov ds hlt lea mov jbe movsl (bad) xchg shrl adc and sbb (bad) sbb sub adc (bad) sbb and or hlt lea xor ds and xor out push movabs ds and xor (bad) cmp sub cmp (bad) adc (bad) in hlt sub push movabs movsb callq stos mov sbb adc sbb mov sbb pop in xor in push cmp (bad) mov stc (bad) lock andb adc movsl or std xor pop in push movabs adc or or fmul add (bad) mov sarl xchg add push adc xchg xor insl push insb in cmp pop (bad) movabs sarl or and ja push mov or movabs pushfq mov je rex.WX fsubrs or cmpsl fsts mov cmp stc sub cmp icebp cmpsl (bad) cld lods cmp cmp out xor mov push xchg mov (bad) jrcxz ds mov (bad) rex.WB scas xchg rex.WRX add cmp mov iret (bad) cmp cmp neg or xchg repnz and or movsl add and rex.WR add and (bad) lods pop insb cmp pop cmp jae retq add xorl out jle (bad) adcb adc xor sub movabs cwtl xchg nop cltd adc mov icebp (bad) xchg lret or test xor xchg or scas rex.B ds (bad) jbe rex.WXB fs mov popfq (bad) test cltd scas outsb mov add popfq (bad) orl pop cmp xchg out movsb mov pushq ds pushfq sahf xorl (bad) (bad) std loope insl mov lock and addl scas sbb rex.RXB (bad) cwtl mov xchg sbb jl and fwait ja rex.RB addr32 xchg mov mov pop cmp sub pop xor sub (bad) mov mov jne xor mov iret sbb jmpq push lret push sub mov xchg mov movsl (bad) ja (bad) mov cmpsl cli mov xor jle,pt mov (bad) cli popq ja or roll mov add and mov xorl and fimul data16 cmp rex.WRB test xchg js ljmp mov xchg out fmuls in insb movsb test xchg (bad) or add xchg cmp add push (bad) push callq movabs movabs add xchg rex.WB fadds (bad) mov js mov movsb mov scas enterq or out movabs fwait sub loope rorl (bad) adc mov movsb mov add stos or xor or mov xchg mov mov rex.WRX xchg sbb repz rex.WRX adc notl cwtl in add mov push (bad) and mov add (bad) mov ds mov cmp (bad) loope rol push rcrb xorb test fistp and add rex.WRX roll hlt xor imul mov (bad) jp nop or cmp fidivl shrl xchg mov rex.XB push mov xor (bad) int3 ss psubb pop mov jnp push imul out loopne shr cltd fs (bad) (bad) and imul loop pushq fildll movsl mov adc lahf cmp add xor cmp mov xchg (bad) movsl orb rex.WXB jrcxz mov add lods or adc adc and sub jl mov in jmp hlt popfq and cmp (bad) enterq lods xchg cmp in add out mov (bad) push cmp movsb (bad) xchg retq es pushq add pop mov cmp cmp subb rex mov xchg jne mull mov adcb in mov mov fistpl cmpsl pop mov sbb gs jno pop mov add rex.R test jg and (bad) movsl orl stos add jb add cmc mov movabs add and mov and (bad) stos lods mov fdivr in push hlt and int sub (bad) push xchg test movabs (bad) mov mov or (bad) or in addr32 xchg int3 (bad) je cmp sahf je pop add gs sub mov (bad) scas fnsave add movabs hlt lahf sbb cmp rex.WRXB (bad) ds (bad) mov pop xor sub xchg test xchg pop (bad) in (bad) xchg movabs and push xchg sbb lahf mov test shrl out scas push cld and xchg mov fistpll sub xchg rex.WX fisttpl xor rex.WXB int es xchg rex.WRXB movsb in (bad) pop cmpsb mov or mov movabs cwtl test cmp rex.RX (bad) pushq mov cmp or adc mov out sbb mov push or sub (bad) lock xchg mov pushq cmp add xacquire cmp (bad) vdivpd mov pop (bad) sarb sar rex.W rex.WR (bad) pushq or test mov mov in fiaddl rex.RB rex.WRB in fwait push lahf pop cmp mov int jp mov sub xchg cmc mov je rex.R mov sarb mov sub (bad) (bad) cmp movabs (bad) icebp jo cltd xchg in cmpsl pushq xlat (bad) mov leaveq or cmpb in (bad) xor jle or xchg lahf lret xor mov mov sub jb out in cmp mov mov jrcxz mov fsubr cs cmpsl xor and mov (bad) and pop lods loop xor sub mov push mov xchg scas in jg and test rex.WRB mov sti test jp cmp xor xchg movsb test sbb add add lods mov or add test rex.X xchg xor (bad) insl rex.WRXB ds test (bad) rex.WX out mov or (bad) punpcklbw lret mov fucomp fisubl (bad) (bad) xlat es or add mov (bad) (bad) cmp sbb mov (bad) js or add orb out cmp (bad) add cmp mov (bad) ss rex.WR stos or movsb xchg repz mov rex.W rex.WXB testb xchg data16 pop (bad) push cmpsb retq sub adc movsb jge imul pushfq shrl (bad) (bad) (bad) movslq out sub in mov rex.XB popfq mov jo stos stc adc (bad) cltd test xchg and (bad) int3 and rex.RX retq cmp fwait mov out cmp cmp (bad) adc cmpsl imul (bad) cmp popfq (bad) pop push mov jbe mov movabs repz (bad) cmpsb jne rex.X stc (bad) adc or xor mov (bad) rex.XB or lret sub nop cmp cmp incl pushfq rex.R mov movslq (bad) fcoml xchg (bad) cmp pop mov in orl mov icebp adc (bad) fdiv sbb rex.RB rex.RX sarb icebp es (bad) sbb sarb outsb cmpsl xorl mov sbbl decl sub jne rex.RB (bad) mov xlat sti repz rex.RXB sub jmp jb xchg mov movabs sub rex.RB and cmc add (bad) mov cmpsl scas jp (bad) adc scas xor fsub push sbb adcl (bad) movabs lods mov adc out rex.RX test je mov mov sar rex.RXB in roll cmc rolb cmc and push xchg loop mov (bad) hlt lods jrcxz cmp and callq insw pushq sub lods (bad) xor and mov decl cmp xchg or add add add mov mov add (bad) int3 fwait xor rex.WB rex.WRB (bad) mov not (bad) hlt xchg mov hlt imul ljmp (bad) mov xchg (bad) loopne (bad) loope cmpsl in or sbb (bad) pushq jge mov pop mov (bad) rex.RX cmp jne jne rex.WRX (bad) mov rex.RX lea ucomiss scas fwait incl incl mov rex.RB xchg (bad) movabs rex.RX or insl cmp insl mov ja int3 out (bad) (bad) clc sub out mov sub xchg lahf cmc movsb cmpsb mov mov movabs rex.RXB mov (bad) jo push xlat adc stos stos test mov xor in out jle adc mov lods and rex.X rex.WRX fs pushq shl test rex.WB sub cmpsl xor (bad) loope lods (bad) add sbb rex.WXB and cmp test cmp test jg callq mov (bad) repnz add and rex.RX jns lods sub repnz mov movslq mov xchg repnz (bad) movabs (bad) callq int3 movsl cmp rex.WR test (bad) sti or int lea sub (bad) xchg adc clc and movslq icebp lods cwtl push mov mov rex.XB cmpsl or pushfq mov rex.X mov and lods rex.WXB notl mov mov lret rex.WRXB retq hlt sti callq stos out push and rex.WB or std mov xlat rex.WRX (bad) lret xor (bad) lea add push test (bad) (bad) add xchg cmp mov sti sbb sbb or or cld mov xlat (bad) (bad) cld xor xor jmpq stos (bad) cmp sarb push (bad) and jne xchg lods xchg add (bad) cmp loopne,pt mov (bad) (bad) sbb movsl and pop sub (bad) jnp lahf (bad) (bad) or hlt or test test rex.W rex.WRB (bad) rex.WB pop xor or mov (bad) test cmp mul (bad) sahf rex.WRX rex.WRX rex.WX fisttpll xchg mov movabs pop cmp lahf rolb cltd test scas mov add (bad) cmp popq testb fstl mov mov jrcxz movslq cld mov clc xor fdivs adc pop (bad) (bad) (bad) xchg fcoml sub notb sti jns pop mov mov mov mov sbb (bad) test sbb rex.W ja stc cmp (bad) hlt (bad) lods mov rorl movabs sbb data16 (bad) or push lods mov adcb enterq js sbb mov lea (bad) test pushq add mov add test lods jl and lods lods cltd cmp in xchg fstps movabs in mov jne mov add repz (bad) neg addr32 addr32 pop lods mov xchg mov imul ss push cwtl and mov push push xchg xchg xchg cmp mov sbb (bad) xor xchg test mov stc orb mov mov repnz xchg test movabs cmp adc sub xchg jno add xchg mov or insl mov insb jne xchg (bad) shll sub mov lods enterq push xchg sub sbb lods pushfq movabs sbb movslq xchg (bad) sbb popfq cltd sbb (bad) sbb (bad) xchg stos setle mov mov cwtl xchg sbb (bad) cltd or or cmp cmp mov pop stc xchg mov jmpq mov icebp xchg orl adc sbb int3 push lods mov mov xchg hlt lea in cwtl fcomps xchg clc lea mov mov xchg lock mov mov xchg decb scas mov mov xchg (bad) lea mov mov xchg cli lea mov mov xchg repnz mov mov xchg jl or rex.WR sub insb mov xchg je add rex.R and fs xchg js or pushq xor push and ds jle (bad) mov push mov (bad) push pop ss jbe (bad) mov push mov sbb cmp push sub xor push and sbb xchg push mov adc sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb sarb cwtl mov stos xchg pop mov orl mov scas xchg decl mov xchg pop mov test pop negl cmp mov (bad) rex.WB mov (bad) xchg test mov push xchg mov xchg xchg (bad) lea mov adc sbb xchg sbb (bad) (bad) xor xor add xchg cwtl pop push sbb cltd add (bad) pop (bad) sbb data16 pop xchg xchg (bad) fidivrl (bad) notl (bad) nop adc adc (bad) xchg loope pop loopne ds push jmpq (bad) or xchg in adc (bad) notl (bad) (bad) adc jbe movslq xchg cmp sti sbb add (bad) (bad) rex.WX stos stc sbbl rex.XB stos cmp sbb icebp pop fistl movabs (bad) (bad) cmp hlt cmp outsb test or add (bad) or or sub fidivr rex.X cmp sbb sti and xchg sbb (bad) mov mov xchg add push xor pop pop rex.WRB jge insl rex.XB add cli xchg shll (bad) setnp sbb push adc ljmp rex.WRB jl lahf (bad) mov pop (bad) sahf mov xchg xor (bad) addr32 mov or (bad) xchg mov xchg insb sub mov fcomps popfq add int3 retq push jo lods lods cs mov rex.XB mov mov addl xchg sbb jae sbb (bad) xchg xor roll xchg or sub add fsts popfq mov xchg pop mov (bad) sbbl mov (bad) sbb xor push adc sub pop in test (bad) rex.WRX lods rolb adc and jo push or movabs adc lods xchg cmpsb rex.RXB fwait in retq test and gs repnz frstor cmc lock sbb xor mul jg fwait jne mov test sub jmpq cmp lcall loopne sbb stos add in cmp jbe and int3 and cmpl pop fwait sbb sub rex.WRX callq (bad) mov (bad) mov repz test mov jae jnp div xor sbb rex.WB xorl sti repnz fistpl repz rex.RX (bad) std rex.RB push sbb jnp rex.WRX rex.X fwait xchg xlat (bad) xor jo (bad) fwait lea rex.R movabs adc fwait add scas (bad) sarl cmpsb fwait sahf and sbb mov iret sbb xchg jbe pop pop rex.R rex.RX fwait (bad) sahf rex.WRX rex.XB add int3 js lahf test sbb (bad) iret (bad) insb fwait sbb xchg fwait push test sub sub lods sub xchg out subl movabs and adc xchg fdivl std sbb jo retq cs rex.RXB callq movabs cmp lock gs fstps scas sub cmp movsl fwait rorl rex.B sbb rex.WRX ja out (bad) std je (bad) in fwait jne pushq stos fwait test mov or fwait add js sbb jb and mov cmp setae sbb js rex.RX sbb rex.RB sub push fwait in sub (bad) (bad) repnz (bad) js or ja jg add pop sbb mov fwait mov rex.RXB rex.WX pop mov rcrb fwait hlt rex.R add jbe rex.WXB fwait push (bad) mov pop xchg icebp fwait and fldl lods sbb (bad) test sbb mov movabs push bswap stos cmp (bad) and rex.WRB fwait pop cmpsl in xchg loop sahf fwait sub (bad) lods addr32 cs adc sub loop or mov movabs jae (bad) cmp iret rex.RXB jbe retq (bad) stos out (bad) mov fwait cld out pushq (bad) rex.B gs (bad) ror sahf rex.RX fwait xchg mov or out mov out sbb adc (bad) (bad) (bad) movabs flds jns fwait pop scas ror sub xchg (bad) cltd stc sbb rex pushfq mov fwait mov ss jle loop fwait (bad) (bad) mov or rex.WRXB add repz rex.RX (bad) jo adc repnz retq fwait lods push mov sub test cwtl push sub add (bad) xchg movsb adc mov movabs adc cltd push (bad) (bad) sbb imul or jae sbb insb jne mov fwait rex.RB stos pop lock xchg retq mov insb xchg (bad) retq sub (bad) out mov movabs scas mov sbb mov lret fbstp sub jle xchg lahf in cwtl fwait lret (bad) hlt sbb pop popfq fwait mov sub (bad) rex.WRXB rex.WRXB addr32 stos repz sub (bad) mov icebp mov jo sbb mov xor fwait rolb and (bad) pushq xchg in xlat fdivr shlb fwait push rex.RB (bad) (bad) xchg (bad) fwait sahf ja or repnz fwait (bad) jo mov mov cmpsl xor fwait or mov retq adc cltd jge jae mov imul movabs xchg (bad) (bad) shrl fwait iret rex.WRB rex.B sbb pop or or add (bad) mov xchg jrcxz fisttp rcrl fwait xlat sbb mov fwait (bad) js and faddl fwait jrcxz mov or pushfq mov sahf jle jno je cs test movabs shl sub jle ss (bad) mov mov (bad) push xchg stos xchg cmpsb scas jl pushq mov (bad) sbb fcomp add (bad) enterq rcrb addr32 popfq fstpl mov nop and outsl callq loopne add mov fwait pushq mov test push jno rex.RB fwait mov and adc (bad) cld rex.WXB or jns cli rex.X fwait movsl sbb fwait repz negl sub pop mov lret and pop fwait adc sbb (bad) sbb notl xlat adc adc push mov xchg fwait or or fs mov fwait stos movabs sbb or (bad) movabs rex.WXB rex.RB fwait rex.XB pop xchg push xchg out sti adc retq sti mov scas sbb rex.RXB rex.XB xchg jae rex.WRB sbb cmp sti or add sbb adc adc retq sbb (bad) sti xchg sbb (bad) or sub and pop jrcxz jg fldt (bad) repz lret stos repz sbb cmp jmp rex.WRB rex.WB fcomps stos mov rex.R fwait xchg sbb push iret rcr popfq and xlat cld jae popfq pop sti fwait out sub xchg (bad) or add lahf mov fwait (bad) cmp xchg xchg xchg (bad) fwait xchg jg push mov mov movslq pushfq rex.R addr32 popfq sbb mov rcll decl sbb mov mov mov lea cld in sbb or jmpq jno iret xchg stc (bad) out out adc notl xchg (bad) rex.W rex.WRB lea cs fwait and mov and push (bad) scas pop or sbb je test push rex.WRXB fwait int movsl rex.WX fwait (bad) (bad) (bad) movslq rex.WRXB negl mov lret (bad) jl rex.R (bad) xchg rex.WRB pushq add (bad) (bad) adc loope mov jns add pop xchg fwait xchg rex.W stos popfq mov (bad) popfq (bad) (bad) xchg shrl cmp (bad) movabs fwait add sbb fninit xchg jg mov xchg adc pushfq (bad) adc lods add xchg imul jnp jb mov movabs lret insb movsl sbb hlt scas stos rex.X rex.WR in xchg rex.XB test xorl fwait jns push xor xchg mov fwait fwait jne lret xchg mov fwait ja jnp rex.WRXB (bad) (bad) rex.WB mov xchg sti fistl add jrcxz cmp (bad) add push int xorl xor xchg sti mov adc lret xchg (bad) fistp and fwait imul add test (bad) (bad) sbb sub testl push xchg (bad) pop mov pop mov pop stos rcrb retq fwait mov xor jo mov rex.WXB or je sbb (bad) pop scas sti mov sbb mov cwtl fs outsl xchg rcrl fcmovnb add mov (bad) fdivrl rex.RXB sbb lahf mov mov pushq jbe (bad) fucomi push pushfq cmp sti cmp (bad) je loope xchg sbb xchg imul iret fwait sbb mov sbb addr32 rclb sbbl lahf xchg movsl pop stos xchg mov rex.RX repnz sbb (bad) rex.WRXB fwait repz pushfq xor in insl pop sti fwait rex.WRB xchg out sub mov fwait (bad) sbb sub lods (bad) jo test xor add icebp xchg data16 fdivs mov fwait jge jns jne lods lea pushq xchg sbb jg rex.RX xchg (bad) rex.W fwait (bad) mov xchg cmp (bad) pushfq popfq (bad) rex.WRXB adc andps lret mov fstpl fwait xchg sbb (bad) rex.WR repz sahf jmp iret pop in (bad) gs or (bad) mov fnstcw jmp add xor rex.RXB (bad) fildll and test fwait (bad) (bad) and fucomi xchg ss lahf xchg xchg (bad) push (bad) sbb jge cmp out push cmp pop out jae pushfq adc lods rex.WX cs insb fwait imul push je xor fwait adc jno mov insl std addr32 or test sub adc xchg es sti lret mov fwait (bad) cmp callq rex.WRXB loop cmc fwait xchg int3 test mov pushq mov and mov hlt negl rex.WRX rex.W rorl ja sub in lods (bad) xchg fwait adc int (bad) sbb fwait fwait push (bad) mov (bad) xor and xchg add (bad) fwait mov sbb fistl jnp (bad) cltd add mov (bad) int (bad) (bad) push sbb and xor loopne rex.WRXB jns mov sti sbb rex.WRX fistpl mov lods rex.RXB adc xlat rex.WR rex.RB xchg cs sub fwait ss int movabs (bad) (bad) pop xor rex.X xchg push shrl int3 lea fwait fwait jmp push rex.WRXB retq fwait stos xchg rcrb jg fwait (bad) jge (bad) or adc push popq adc enterq rex.XB addl fwait jle jae sub (bad) fwait adc mov shrl fwait ja push lret nop fwait leaveq pop out add rex.B sbb (bad) movabs in callq addl (bad) xchg and andl rex.WXB data16 ds stos divl and xchg orl fwait rex.RX xchg retq fwait mov sarb or (bad) adc insb movsl jbe fwait sbb rex.WRB loopne rex.RXB repz rol pop (bad) retq (bad) sbb rex.WXB mov sbb sarl sarb test outsl xor (bad) mov (bad) repz xor pushfq mov fldcw sub sub (bad) mov in sbb and jge (bad) cmp mov stos adc sub (bad) sbb pushfq cmp mov jno xchg fist xchg sbb repnz add fwait enterq hlt cmp mov mov (bad) or or cmp fwait rex.WRXB movsl (bad) add fidivl sub xor (bad) adc pop xchg push xchg stos fwait stos fwait movabs rex.RB (bad) fwait lret jns loope loop sbb icebp pop mulb outsl std popfq (bad) movsl push add (bad) mov add cmp rex.R loope mov in (bad) imul jne push mov test icebp mov (bad) sti rex.WXB xchg mov fwait in and xchg mov xor rex.WR push jmpq rex fstps (bad) mov out adc mov ds xchg fwait out xchg imul xor or rex.WXB mov (bad) (bad) adc lret fisttp xchg movslq pop fistl (bad) fisttp cmp (bad) sbb (bad) (bad) orl pop movsl in xchg sbb nop rex.WRXB pushq xchg add loopne rex.WB jne pop push pop mov es insl rex.B rex.B rex.WRB (bad) xor (bad) sbb (bad) fwait mov (bad) (bad) repz mov addr32 test sbb fwait (bad) xchg add rex.X mov por push pop js cmc mov pop popfq xor (bad) fwait jne rol sbb and pop fwait leaveq cmpsb movabs xor orl xchg adc sarb fisttpl int ja fistpl fwait cmp je (bad) fwait and fs mov (bad) pop mov fwait push pop rex.WXB jl xlat mov (bad) mov sti or fwait pop in fist mov fwait add mov xchg and fwait jge out movabs rex.WRXB xchg mov (bad) and xchg lock (bad) fwait jns imul add stos fwait repz fsubl jns (bad) xchg outsl (bad) pop jb cmpl imul stc jmpq es and and pop notl insl sbb fs btr fwait movabs pop sbb push sti (bad) and (bad) (bad) lods nop rex.RB xor or cmpb repnz fisttpl sub add (bad) stos fwait mov in fstpt sti rex.WRB in push add fwait (bad) (bad) add rcrl fisttpl cltd retq js mov movsb insb (bad) outsb rex.RXB rex.WRXB or pop (bad) mov and jrcxz movslq cmp sub xor lret mov leaveq or (bad) imul (bad) fs mov mov cltd jmp insl (bad) sbb loop jmp bnd push outsl cmp lret jrcxz or (bad) fwait cmp add push es jo (bad) fwait xor scas xchg rex.RB (bad) fdivl jns (bad) mov (bad) rex.WB (bad) cmp iret (bad) out fwait sbb mov mov (bad) fwait mov rex.B callq es ja fwait (bad) rex.R addr32 iret mov (bad) (bad) out int (bad) fsubrl sub jmp es cs fwait enterq loope ja (bad) pushq xor orl and sti xchg cmp std mov jle stos fwait sbb retq xlat lods (bad) or pushq (bad) retq movabs rex.WXB or sub sub pushq mov mov je (bad) (bad) xor fwait fwait out xor fwait (bad) lea mov jmpq gs xor rex.W xchg in outsl popfq mov sub (bad) (bad) (bad) rcrl xor rex.WRB rex.XB xchg xchg (bad) push js out or fwait xor icebp pushfq fs jge cwtl clc pushfq sub sub out fwait mov out fwait insl cmc addr32 (bad) pop jrcxz fwait xor out and rex.X fistpl pushq and stos fwait retq (bad) mov (bad) subl data16 jb fwait jne movabs pop fcomi sbb pop sub fwait cmpl jo mov pop outsl add cmp out cli lret (bad) fs movl (bad) rex.WB pushfq jo add fwait xchg and jne sbb repnz movabs lock sub mov fwait stc cmp lret rex.WR repnz in insb cs jrcxz sbb mov rorl xchg fwait mov es leaveq movabs movslq and movabs je xchg mov (bad) clc and jmp cmp sbb (bad) add test repz mov mov (bad) cmp mov jne rcll add (bad) xchg jg fwait sub (bad) sub jnp fwait enterq (bad) xor jae fimull fisub cmpsl (bad) sbb mov push fwait pushfq nop mov pop jrcxz in sbb mov sti movslq jnp sti mov and mov mov sbb adc fwait push movabs in mov and jns mov xchg (bad) movabs (bad) sbb cmp xchg sbb lahf (bad) (bad) mov and mov push mov cltd fwait int add retq lret sbb (bad) rorl sub (bad) fwait cld push (bad) out sti rex.WXB scas add (bad) rex.WRB (bad) clc retq movabs jbe fnstenv adc retq pop rex.RX fwait movl xchg sub negl jae fwait out pushq sti std (bad) rex movabs sbb (bad) movl in es (bad) push lret insb adc movslq hlt ror jmpq loopne (bad) imulb fwait and rex.R sub pushq fwait jb lret lock mov ja mov pushq pop repnz mov add (bad) sbb cli push fistl test cwtl rex.WB in pop mov and mov sub scas rex.XB fwait (bad) and movabs mov in scas sbb pcmpeqw test test lea mov rex.RB fwait mov and cmp mov rex.R fwait pop loop jg ficoml jrcxz fwait xchg xor (bad) mov js (bad) jb pushq sbb cmc rex.WR jmpq jnp and iret xor fisttpl add mov or test jrcxz cmp sbb adc xor mov mov fwait pop jne stos adc loopne fisttpll rex.RXB push jns mov sub int rex.WRX repnz sti mov jg mov xchg pop cltd lret jne sbb imul pop (bad) cmp roll rex.R fwait cwtl xchg mov lret mov xchg (bad) jae fwait fwait and cmp (bad) rex.RB xor mov (bad) jg jne jmpq scas mov fwait insl mov out xchg (bad) mov fwait (bad) or sbb (bad) (bad) (bad) (bad) je fwait xor xor and rex insl rex.WRXB stos outsl pop test mov movslq xlat mov gs rex.RB xchg sub pop test callq fwait xor sti lahf and jo lea sub push push (bad) fwait mov (bad) and insb xchg mov sti fwait adc cmp xor and movabs scas jmp fwait xor (bad) out pop mov test mov (bad) xlat (bad) fwait rex.W retq or sub loop (bad) sbb stos out mov mov fwait xchg add add lret lahf pop pop fcmovnu fwait cmp lret (bad) rex.WXB xchg cmp fwait repz cmpsl outsl rex.RXB xchg insb rex.XB fwait (bad) mov stos jae incl lods pop xor ja stc outsb fwait pushq movabs fwait adc pop or lahf pop sbb xchg push outsl and (bad) (bad) add mov rorb movabs jge icebp fisttp (bad) push mov rex.RXB sbb insl xlat or and fcomi mov xchg fwait pushq outsl mov sub pop fwait pop jmpq lods adc fistp push (bad) and (bad) notl mov stos and outsl xchg add xchg fisttp jno out push out (bad) repz sti mov (bad) jrcxz mov (bad) jmp xchg incb je movslq fwait xor jge fwait outsl mov out jp out negl rcrl mov rcrb fwait pop pop lods pop test and scas cmp jle sub cmpsb (bad) jmp push fistpl popfq jne outsl roll (bad) xor cmp scas mov (bad) pop or fwait gs jp fwait in xchg pushq negl repz (bad) scas (bad) jns (bad) mov sbb xchg hlt rcrl (bad) mov mov fldl sub and jbe fstpl push nop (bad) jge cwtl adc sbb mov rorb nop fnstsw lahf bnd sbb mov mov fwait sti or popfq repz sbb lret sbb lahf or in movsb repz stc pop jrcxz (bad) loopne shl sti (bad) repz mov lea fwait pop mov rex.WXB rex.RX enterq shlb sbbq test rex.WB repz mov push movabs fwait movabs (bad) lret jo rex.WR fwait mov fwait loop xor push fwait hlt jbe movsb pop movabs fwait xchg retq pop mov xlat xchg iret (bad) movabs fldt pop (bad) or fstpt (bad) mov and fstpt fistpl (bad) fwait xchg push sub mov (bad) (bad) sbb (bad) neg (bad) je mov fildl fistpl fldt pop (bad) in and or fwait and fwait ss callq enterq or push fistpl fwait sub xchg (bad) add fdivl mov mov adc adc cmp (bad) jmp cmc rex.WXB fwait xor xor scas sub retq mov add insl sbb rcll fwait rclb pushq xor lea mov fcmovnbe in mov fwait insb (bad) je outsl rex.XB insb (bad) mov xor cld (bad) xor push (bad) rex (bad) cmpq (bad) sar and push fwait xchg push clc cld or xorl (bad) enterq and (bad) imul adc add adc xchg fwait add or fwait icebp (bad) imul shrl jl fwait sti rex (bad) fwait (bad) or pushq pop or xchg sub fwait mov shrb mulb or mov stos mov lods shll insl retq cmp mov lods test stos scas (bad) movabs xchg (bad) fwait jne lock pop leaveq rcl rex.R rex.WB rex.X popfq rex.WRX sti fwait adc nop fwait shrl clc push insl imul in (bad) imul (bad) in jno,pt repnz (bad) out rex.WB in cli adc xchg js stc stos cld stos fwait mov lret enterq rex.RB addr32 sbb jno imul stos sbb movabs mov fwait sub movabs outsl fwait test adcb (bad) xchg cltd jae imul (bad) sub mov fwait mov cmp or adc cli fcomi lahf es in cld fwait sub clc notl out loop (bad) std fwait fwait jrcxz sti mov (bad) sub sbb xchg sbb adc hlt fidivrl rcrb loope,pn lock lea (bad) mov cmp mov jne fwait fwait cltd enterq sbb adc sub test sarl pop and fwait loopne jnp rex.RXB addl adc movabs movslq popfq and jb stc out sti (bad) fwait mul retq jp jrcxz out sbb mov fcomi xchg outsb xchg xchg or loope fneni(8087 xchg callq fimull mov popfq adc (bad) fisttpl movabs sbb (bad) jrcxz xor rex.X repz out cmp jrcxz jmp jmp xlat (bad) loopne retq rcrl mov and adc mov jge push fcmovnbe ljmp sbb pushq rcl (bad) iret (bad) stc fwait pushfq fisttp xor add add jrcxz fbstp cmp stos xlat (bad) (bad) cmpsb xchg mov mov pop add jbe fisub scas (bad) mov movabs movabs idivl fwait cld lret (bad) scas ds pushfq xchg nop (bad) adc gs xchg (bad) xchg (bad) (bad) jnp clc sbb pushq mov mov in xor add xchg xlat (bad) movabs xchg fwait or (bad) sti or adc sbb rcrb pop fwait cld out xor cmp adc jmp (bad) fwait mov fwait pop hlt iret jmpq mov andl sbb repz and fwait adc mov movsl jrcxz fwait (bad) push rcl iret stc (bad) int add fwait mov xor pop out test xor fistpll jmp iret adc xchg nop sbb movabs movabs jmp stos and sbb pop pop fwait xchg (bad) out sti (bad) neg mov (bad) fldt (bad) mov mov stc jrcxz add xchg fisttpl test movabs rorb testb (bad) xor movabs pop scas scas lahf loopne fwait fwait and mov xchg mull repz adc xchg jmp (bad) jrcxz loope outsl sbb out repz out mov (bad) mov sbbl fwait repz pushq imul jmpq mov out fwait jbe imul in cmp fwait sbb add sti jae jns shrl (bad) (bad) jmp ffree (bad) xor mov scas out out mov cmp movabs mov mov scas xchg stos adc subl rex.WX stc mov or subb cmp xchg (bad) out sti pop (bad) lret retq movabs rclb sbb mov ljmp xchg (bad) rex stc test fwait and xor lahf repz xor xchg movabs outsb fwait movsl mov mov sbb fwait cwtl sbb push xchg mov lret sbb (bad) jb ffree mov pushfq fwait cmp xor test add sti (bad) loop jns push add rex.XB adc and loope mov rcr cmp pushq in stos loopne mov stos jnp cmp fwait mov rex.XB and push rex.WRX rex.B fimul rcrb cmp (bad) (bad) (bad) xchg adc sbb imul (bad) jle fimull fstpl add (bad) (bad) xchg rex.R lahf mov xchg enterq xor repz sub jle rex.WR jno movslq jo mov scas xlat pushfq data16 push jmp sub je jge loope sbb (bad) pushfq mov leaveq adc xlat sbb icebp jmpw test fbstp xor test clc rex.X stc (bad) push (bad) fcomi in sbb fwait notb pop or lret pop rex.WRX jo sbb sarl sbb mov repz cmp push mov mov (bad) push add movabs popfq loopne cmpsl jg fcompl xlat (bad) retq xor add (bad) mov push out push mov xchg movsl (bad) fnstsw fnop loopne fwait xlat push push shrb sub lahf jb (bad) dec xchg test fwait xorb add lret sbb xor cmp xor fwait mov cs iret movsl fwait add mov and adc fwait or jrcxz leaveq fwait xchg pop sbb rex.XB sbb iret rex.RX fildll adc out jl xchg xchg (bad) out hlt (bad) testl shrb (bad) mov add or rex.WRX lock testl enterq or jae pushfq jnp xchg jb sarl jb cmc callq divb push test movabs add pop adc cmc rex.WX (bad) sarl leaveq cmpsl fwait pop mov (bad) sbbl out mov (bad) mov movabs add lods cltd cli sbb pop out mov lahf loopne int push xor cwtl btc pop test fwait leaveq loopne lods fcomip iret mov sub (bad) mull rex.RB push sub rex.B fwait loope (bad) movsl adcl add out rex.WR (bad) (bad) xchg loope sub jg jrcxz mov mov pop (bad) je pushq lods rex.W mov fwait js pushfq or sti (bad) cld adc movabs fld1 (bad) sbb lret fwait fs (bad) test (bad) ja xchg fwait jp xchg addr32 lods xchg mov test mov pop pop rcl enterq lods cmp (bad) xchg jb lret retq fistpl (bad) std jbe (bad) jb fwait push jrcxz sub fwait test scas test sbbb adc adc iret lea ficompl pushq iret int or mov or (bad) sbb mov and es rex.RXB pop xchg fcoms fwait callq rex.X rex.RB sbb int xchg add fwait out lret rex.WXB lahf adc cmpsl (bad) mov jrcxz pop es and sub test mov movsl xchg mov mov mov test and fwait mov (bad) or nop sbb (bad) xchg jp ja test (bad) repnz hlt jbe lret out (bad) stos pushq mov lods repz js enterq fwait jle sub mov or mov stc mov pop jmp rex.B rex.R rex.WXB rex.WX sbb xchg add nop pop (bad) adc negb jg fldt (bad) or cmp mov cmp xchg rex.W xor sti (bad) lret outsl and (bad) jp add cli mov mov movabs pop lret (bad) pop lret movabs jbe cs mov out sbb outsb add movabs loopne mov cmc fwait add and push ds jmpq sbb add xor adc mov rex.WR sti (bad) cld pop fwait push (bad) out sbb adc sbb adc fbld insb lods out movabs incb data16 jo cmpsb std fwait (bad) imul ficompl jmpq callq (bad) (bad) and lahf push xchg shll movsb in fwait pushq loopne pop std sahf data16 fisttpl stos mov jnp rorb icebp iret (bad) sub outsl sub (bad) fwait rex.WRXB and sub adcl mov or xchg hlt adc fwait addb lahf cmp lods cmpsl movabs incb add fstpt xchg fwait mov jmpq repz lods out fwait (bad) fs fistp shrl rex.WRXB rex.WRB movsl loopne pop mov fwait mov popfq and jnp sar jne sti cs icebp (bad) out xchg (bad) sbb adc adc movabs and and adcb lcall rex.W out out pop movabs (bad) xor xchg (bad) sub fwait or or jmp retq and lret fwait cmp lods (bad) sbb and xchg fwait jns adc mov jno fwait add rex.XB xor sbb ja callq out jrcxz pop fwait jae movslq (bad) ja or sbb pop cmpsl in xchg sbb or push mov enterq retq out jbe sahf cmc pushq in roll xor (bad) fisub es stc push nop xchg cld lcall sarl jae,pt cmp sub (bad) cltd sbb jae mov movabs out mov (bad) (bad) int xchg adc out (bad) pop push jle hlt xlat (bad) add jmp rex.WB rex.WRB pushq (bad) insb icebp leaveq enterq (bad) mov cmp fwait xchg mov (bad) mov add int3 jle and movabs sub repnz scas imul repz rex.X fwait fwait lret push movsl (bad) adcb mov rolb or neg push rcrb pop (bad) mov sub jrcxz xlat lahf (bad) fwait (bad) rex.WRB rex.WR repnz retq clc xlat mov ds mov mov sti and and sub mov sbb fwait mov (bad) movabs xor (bad) sbb pushq repz data16 fildl adc mov jmpq test loope rex.WX idivl jno iret (bad) pushfq test add in sbb sbb movabs fwait movl (bad) jno (bad) xor (bad) mov xor (bad) (bad) rex.RB movabs add jbe cmc mov lods not jl (bad) out jmpq fbld sbb push cmpsl lret mov jp add push sbb clc pop sti rex repnz push fwait test and sbbl fwait rex.WB rex.XB (bad) push pop mov test push adc or fwait cwtl mov movslq lods fwait rex push fnstsw cs add fwait lret mov (bad) adc iret cmp fwait mov xor sbb adc cmp add icebp in (bad) cwtl fwait outsl rex.WR out xor movabs std rex.RX rex.WRB ds sub or imul jb jl js (bad) jp xchg jle fwait mov rorb lods or pushfq cmp fsubl callq imul scas fwait jl es fwait cmp movabs xchg add mov mov in movsl lods fwait (bad) jmpq fnsave xor sub (bad) scas fisub fwait push sub test in fwait pop (bad) in mov xor or test jno hlt jo push (bad) (bad) jns loope loope xchg fwait loopne jge cmpsl cwtl xlat jmpq movabs xor sub (bad) adc mov pushq xchg cwtl loopne add adc and sub (bad) cs fwait jbe mov xchg xchg (bad) (bad) and and fwait pop push add leaveq push rex.XB shl sarb pop ds cmp fwait popfq push adc cwtl test fwait and add fwait cmp cld xchg lret (bad) ss add cltd (bad) cmp mov test or movabs or (bad) movabs (bad) movsb fwait sbb fistp callq (bad) push push jl movslq rex.WXB sbb mov fmull (bad) notl fwait ja jrcxz mov xor and lahf push mov rex.RX rex.WR repz jne (bad) addb fmull movabs (bad) out lret push xlat fcomp sub mov pop sbb cmpsl add fwait mov in fwait std mov ja rex.WB fwait rex.W (bad) nop fwait xor xor sub push add out icebp sbb fwait mov movabs and and fwait popfq mov pop jrcxz (bad) lock icebp jge xlat rex.X rex.R sbb mov fwait xor sub and jmpq sbb xorb cmp shlb push fwait (bad) mov (bad) adc fwait add xor or fwait js sbb xor adc mov and movabs enterq or (bad) (bad) movabs sbb fwait rex.WRX sbb xchg push out push pop outsb jp cli loop pushq jbe xor mov xchg or (bad) jmp pop fmul adc rex.WRB lods out movsb rex.WR sub push int3 fildl test sbb fwait lret jnp adc sub sbb mov or fwait or sbb xchg mov cmpl jne gs in nop (bad) je push xchg (bad) cli js rex.XB sub data16 movslq movsl jae mov (bad) jrcxz shll push in rex.RXB cld int (bad) fwait imul and rex.WRXB (bad) push mov movabs xchg rex.XB hlt fwait scas outsl sbb callq data16 mov jl jp jb fwait cmpsl xor movsb fwait rex.XB (bad) cmp out stos fwait rex mov fwait mov cmp fwait pop ss ja jae sbb (bad) test stos popfq lea jne mov icebp sub push (bad) test fistpll mov or mov sub repz sahf stos rex.R js mov mov rex.WX rcrb (bad) out rex.R fwait xlat cmpb decl add outsb mov (bad) cltd fcomps or mov enterq repnz (bad) cmc sbbl stos mov xor stc cwtl mov (bad) and pop in out rex.WB fwait cmc jb (bad) jrcxz shll fwait pop stos retq sub mov adc sti (bad) jmpq mov repnz xor fwait lret add pushq mov jg jo stc (bad) icebp fwait (bad) jrcxz (bad) xchg xor xor cmp movabs fwait in pop cmp gs fwait jbe in insl out divb (bad) (bad) jl (bad) jnp fildl fs retq lret loope scas rex.RXB mov mov outsb rex.WRXB (bad) xchg out fwait notb imul fcmovu jg lret in rorb rex.W fwait rex iret cmp movabs mov cmpsl fwait sub adc mov push movabs cmpsl out or adc adc ror or xchg jae (bad) (bad) xor (bad) mov fwait jrcxz rex.WRXB lock adc add out fwait xchg fnop sbb (bad) out (bad) sti lret xchg ficompl cmp rcr rex.WXB fwait xor (bad) fwait test add fcmovne sbb add jnp fwait (bad) or lret out fwait (bad) test sbb fwait xchg fisttpl lcall (bad) sti sbb (bad) xchg cmpsb stos (bad) sti jrcxz push movabs adc adcb fwait pop test rex.WR xchg jge (bad) pop in lea cld fwait outsb and pop fwait xor jle jae lret jbe out movabs sub fs fistp out rex.WX fwait int3 cli xchg cmp shll sbb rex.RXB ficoml fistp sub sti jmp data16 shlb rex.R cmp out idivb jno xchg rex.WX test and jl lea fist or (bad) ficompl pop or jne (bad) insl add sub fwait insl int ds or rex.RXB rex.RB test pop clc lahf and adc (bad) mov (bad) add rex.X rex adc rex.RXB cmp adc loopne in pop sbb add fistpl rex.WR xor xchg fwait sub (bad) in (bad) (bad) sub (bad) je bnd sti jmp cwtl (bad) and insl adc rex.WX (bad) rcl roll mov jmpq mov retq rex.RB loop movsl cmpsl fwait movsl in icebp scas jae jmpq vandnps rorl shlb jne jg jnp icebp sbb gs outsb and movabs loope pop xlat jbe sti and loope xchg sbbl mov (bad) or add fwait (bad) (bad) movslq mov (bad) mov iret or add out adc jo in loopne pop leaveq fwait pop (bad) push cmpsw adc adc fwait xchg sub and movabs imul icebp mov xchg pushfq cwtl mov stos movsl (bad) jge test repz fwait cmpsb in jno (bad) and fwait (bad) xchg mov cmp mov ss in fwait (bad) fldenv pop (bad) idivl (bad) imul out fdivs stc and push pop out ror (bad) addr32 xchg xor loopne mov ss rex.X rex.XB movabs jp movsl rex.WRB fsave jbe insb mov jno rex.RB repz fwait pop push jmp clc or cwtl xlat and mov lahf mov sub sub sti stos fwait pushq fildll fwait cmpsl sahf movabs and sbb out rex.WRXB cltd xor and and mov lods rex.W lret rex.WXB xchg pop add rex.WRB mov fwait int and adc test mov (bad) rex.B rex.WRX sti mov cwtl adc insb mov pushfq fist in jmpq sub sub mov iret fwait pushfq femms sub push cmp sbb mov (bad) fisttpl dec adc fcoml cwtl fildl (bad) and or cmpsl fwait (bad) in jne cmp (bad) (bad) fistpll (bad) sar fwait addl cli pop fwait sub add rcrl cmp imul test mov xchg rex.R fwait lods mov iret pop sbb rex.XB fwait mov jnp (bad) adc sub sbb xchg retq fwait mov fwait outsb xor in cltd fwait movabs cmp xchg (bad) (bad) outsl js in fwait or rcll sbb jrcxz pop fisttpl out rex.X mov stos pop lahf pop (bad) sahf push xor sbbl imull xchg fwait or callq repnz push sbb (bad) fwait or or stos adc sbb adc test (bad) rex.WX gs pushfq mov imul jnp jno (bad) loope sti fwait pop mov fcoml lret push cmp sub lea fwait push cmpsb mov (bad) sti loopne fwait retq jbe pop pop repnz adc jno fwait pop movslq rex.WB fs adc jnp stc (bad) jne movabs in (bad) jb jae mov fwait sbbl mov mov cmp lods test mov fstps sbb pop (bad) or (bad) cli icebp retq stos xor fwait movsb (bad) mov mov lods mov mov jns callq pop rex.R lret xlat sbb outsl jo,pn (bad) lods iret mov out rcrb gs outsb mov mov or xchg (bad) xor rex.RB rex.RB repz jle (bad) clc out fwait cmp loopne jge sti mov movsl rex.WRXB int3 adc sarl fwait pop mov rex.X insb xor rex.WX and gs pushq mov fdivs in xchg push mov movslq js pop xor mov fwait mov add fwait data16 rcrl add cs ds outsb movsl (bad) push (bad) rex fwait sti xchg and pop (bad) imul jl gs xlat rex.WRB and (bad) (bad) mov test pushfq and jmp (bad) mov xor add sub sbb in rex.B test int3 std sub pop sub xor imul sbbl addb fwait pop cs rex.WRXB (bad) fwait mov rex.WR rex.WXB sbb cltd andl push movsl push fwait and sbb retq out push movabs js mov (bad) jo rex.WB mov lahf jg jno ja (bad) mov xor sbb in fcmovnbe jle fwait (bad) and add add (bad) mov or shr pop jo fwait pushq iret outsl movslq fwait adc rclb rex.B (bad) mov ds mov fwait nop sbb cmp sub fldl callq cmc xor pop jnp add jl rex.WB fucompp sub callq mov (bad) fwait cmp adc push xchg fistp cltd movabs sti outsl test (bad) fwait ja int insb (bad) xchg and fwait rex.WRB pushq jno pop cmp add sbb data16 rex.RX mov cmpsb stc sti or cltd (bad) in add (bad) lret pushfq xor mov js movabs mov mov cmp cltd and (bad) jmp mov sbb adc (bad) and cmp mov ja movabs adc lock sti pop fwait stc iret rex.WRB bnd (bad) movslq adc sub pop xchg sbb (bad) ficomp out (bad) stc lret rex.RX rex.WB nop rex.RB fwait xorl jns (bad) rex.WRB sbb jno jmp rcll hlt fisub addr32 fwait mov not movabs sbb add add stos fwait xor fwait (bad) pop mov fwait loope or or or fwait es (bad) (bad) pushfq and jb jge popfq (bad) adc and and push cmp loope cwtl int lret js jns (bad) rex.WB rex.WR data16 leaveq stos fwait sarb mov sbb mov mov add sahf clc sbb loopne retq or mov and (bad) mov xor (bad) addr32 mov scas fwait mov add xchg xorb movsb sub xor push imul iret xlat callq rex.RXB idivb (bad) fwait orl jg lret shl jnp fwait movabs xchg push add (bad) leaveq jns fiadd callq imul in jmp iret (bad) callq mov (bad) cmc jnp fwait movabs fldt in (bad) fwait adc cmp repnz xchg sbb sbb gs push (bad) mov adc push mov adc int pop retq testl pop fwait (bad) sti jb (bad) (bad) rex.WXB fisub sbb push pushfq sbb stc jns mov test pop orl (bad) adc cli int ds neg (bad) fwait mov rex.WXB cmp (bad) movabs sbb fs lock mov mov (bad) xchg outsl fwait wrmsr iret mov push cli xor loopne out (bad) rex.XB mov (bad) rex.WXB or push pop repnz mov cs cli callq movabs and loop rex.WRX fdivs (bad) out jns mov and clc sbb add es rex.RXB fwait cmpsb ja xor mov mov hlt sbb ficom enterq idivl and xchg pushfq push (bad) push mov jge callq sub mov xor rex.RX pushq stc xor sbb sub lods mov push cld mov fwait adc in mov (bad) out out int fistpl outsb lret xor xchg fistl and add mov xchg cmc adc (bad) sub xor and mov sbb sbb test xchg pop mov scas or test mov loop rex.X sbb (bad) sbb pop sti rcrb imul fwait fwait outsb test (bad) (bad) in mov enterq rex.RX xlat (bad) rcr sti shrb (bad) mov sbb cs pop rex.XB fwait push push pop out clc addr32 sbb xchg js xlat mov jl jmp callq rex.W rex.W rex.WRXB mov cmpsl fwait enterq mov ds xchg (bad) movabs (bad) ja (bad) fnstcw fldenv test cmp xchg sbb jrcxz loope xlat sbb fwait stos imul cmp sbb movsl jns rex.R fwait add pop insb leaveq pop retq (bad) loopne fwait jg cmpsb out add (bad) gs sub mov xchg adc or loope adc xchg pop fildl push xchg sbb or fwait (bad) cmp and sbbl insl mov (bad) sahf movabs test pushfq cli xchg (bad) (bad) sbb ffreep jmp outsb callq jo xchg decb mov lret loop retq (bad) retq lret adc movabs andl rex fwait rex.WR (bad) hlt out jmp mov cmp rex.RB (bad) leaveq imul fwait add (bad) pop mov pmullw adc (bad) movabs out xchg rex.B sbb or out movslq and mov sub pop and jno mov lock movabs adc (bad) sti pushq lods xchg pushfq popfq xchg fildl test sbb loope jle imul rex.R pop (bad) fild sbb idivb pop xchg pop lea cmp popfq (bad) loop xchg lahf rcrb pop fwait jle cmp lods cmp xchg xor movsl (bad) movslq fwait and callq jns imul or jae rex.XB pop fwait (bad) (bad) (bad) push pop mov rex.WRX fwait jns xchg gs pop fldcw fwait add in stos fldt (bad) mov fwait (bad) cmp (bad) cmp sub rex.X pop (bad) mov jmpq sbb (bad) adc insb (bad) pop cmp cmp cs movsl (bad) (bad) sub mov and rex.R pop adc xor jae jmp mov out (bad) lods sbb and in jne or movabs pop cltd (bad) rex.B fwait push or jrcxz cli mov retq int3 loopne fcomps sbb sub mov lods (bad) and add jbe sti xchg fwait sahf leaveq sub mov (bad) fwait or xor cmp int out cmpsb in fwait outsl cmp mov stos sarl retq movabs (bad) fwait sti cwtl pop (bad) repz rex.RB xlat push sarl rex.RXB (bad) pop (bad) fimul sti jle stc and out retq rex.RXB (bad) and and rex.RB lret es fwait jno data16 fs loop adc pop add movabs clc (bad) negl fldt add fistpl js jge test adc sti xchg fwait loop jns push add cwtl fwait xlat rex.WRB or lods movabs fwait cmpsl jns jo sbb (bad) sbb sub repz rex.W add pop fwait adc out pop decb rex.X rex.R fwait or rex.WX sub (bad) lahf pop sahf push or fs fwait callq cwtl sub adc popfq rorb je repnz mov xor sub (bad) in fwait sbb add (bad) fwait loop out out (bad) adcb sbb callq popfq xchg fwait cmp add sbb (bad) ficomp and xchg (bad) (bad) sbb test fwait sbb jmp (bad) mov lock clc (bad) mov cltd int fist rex.XB sub jrcxz mov test mov sbb stc sub cs ds rorb (bad) fwait movabs cwtl cmp callq fwait jp xchg outsb mov pop (bad) xor and adc adc fwait push mov xchg mov sti mov hlt rex.WX insl (bad) fwait cmp xor sbb (bad) sbb xchg (bad) lahf mov push pop (bad) sbb subl nop pop jp stos (bad) mov pop pop add or and add iret pop lock adc cmp rex.WRX mov adc mov rcll movabs jo mov xor lea fs cmp in pushq lahf repz loopne or xchg mov sti stc cmp mov out jo fs retq movb stos fstpt rex.WXB rex.R insl fildll fwait out jae cltd mov imull sti pop push jns lret fs jbe rex.B push xchg fwait je jl icebp mov fisub ds adc fdivs jmp (bad) mov retq fwait js sub sbb mov sbb es mov mov pop cmpsl mov cmp jrcxz and (bad) fisub movabs (bad) rclb jrcxz (bad) int3 fwait xor xor mov sbb fisubrl iret (bad) movsb or xchg add xchg jo stc or fwait xchg lods pop adc (bad) (bad) lret mov add adc in (bad) insl mov rex.R fwait mov mulb mov pushq movsb (bad) mov sbb push lods (bad) pop (bad) scas jae fild imul adc (bad) add cmc movabs jmp insb test (bad) fwait (bad) pop ja int (bad) mov (bad) rex.RX (bad) fwait xchg (bad) xor pop mov fstpt fcoml outsl sub push cltd retq in push cmpl cmc mov sbb lret add push stos loop jp cli adc sub pushfq pushq rex.WR loopne xlat out pushq movsb movsb js pop (bad) pop lcall leaveq push mov mov jg mov cmp xor mov fimull icebp sti fstps mov ds fwait (bad) rolb fwait sbb or sbb xor retq mov out sbb shr pop push xor out in (bad) (bad) fwait popfq out scas adc (bad) rex.WRB add mov enterq iret mov cmp cltd scas imul (bad) repz movsb sub or (bad) jl sub sub jno (bad) and retq imul mov mov sub pushq cmp in loope and rex.WRB fwait (bad) pushfq push (bad) rcll xor pushq adc rcl imul push xor (bad) popfq mov cmp repz (bad) ss movslq (bad) push loope xor adc rex.WRXB rex.RB pop push sub xor lods movabs (bad) mov pop popfq xchg cs int xchg sub mov xor jns lods (bad) mov adc in loopne fdivrs add movabs movl pop movb xchg rorl test rex.XB mov add fwait movslq (bad) xchg cltd and xchg (bad) rcll movabs xor repnz xor insl mov mov mov sub cmpsl cmp lods push sbb imulb movsl orb mov rex.WRB fs rex.WX rex.XB movsl jo (bad) push imul or adc mov jb leaveq rex.X jne out pushq xchg repz pushq ja fwait rex.RXB clc rex.WRXB icebp rex.WRB rex.RXB pop (bad) mov callq mov sahf mov repnz popq in mull fs adc add insl xchg sbb sbb cs cs mov rex.WRX jae xor hlt mov imul (bad) xor sti fbld lods add mov mov sub fnstcw (bad) (bad) mov rex.WB mov rcr (bad) push jo cs rex.WB mov xor (bad) (bad) outsl rex.WRX rex.WRXB js rex.WX nop lahf adc cmp mov (bad) xchg test cmpsb adc jp or push mov enterq movabs mov xchg mov pop adc (bad) pop (bad) (bad) cs adc lret fucomp pop not enterq adc and (bad) rex.WXB cld xlat or mov mov lahf adc xor rex.XB sub out mov mov decb ds rex.WRX jbe adc rorl and mov jno stos jb cmpsl mov and cmp out rex.XB movabs (bad) cmpsl mov (bad) stc jle add and nop mov stos xor out cs (bad) lods (bad) movabs push mov cltd push xor mov mov stos movabs movsb lea xor (bad) lret adc or rex.RX sahf mov add rex.XB rex.WB pop cs imul adc xlat repz pushq (bad) lret (bad) fbld test jle push cmc cwtl adc or rex.WB add add outsb (bad) mov and sarl ss mov hlt enterq xchg or (bad) pop (bad) rex.RX mov xorb and jge lods xchg pushq mov fildll rex.WRXB cmp mov jns nop imul pop (bad) cmpsl adc jae fwait push add and xchg es (bad) jae add cmpsl and lods iret (bad) jne js xchg cld or push clc sub mov rclb or lea gs mov movslq rex rex.X xor scas int3 (bad) mov rex.WR movsb mov mov cmp and xchg lock cmp xchg rex.W rex.WR pushfq sub jp lods movabs jae and pop ja rex.WRX (bad) out mov (bad) cmovl iret mov test pop xchg mov cmpsb lock xor mov pop or (bad) mulb and mov and fsubr push mov sub rex mov out rex.XB fs mov neg xchg (bad) rex.RB xchg mov callq test movl (bad) sbb mov (bad) movabs xchg mov adc ror mov fsts out xchg std jmp stos movabs (bad) push xchg popfq mov (bad) fsubrs adc (bad) xor xlat sbb mov push mov test movsl or mov (bad) mov sti mov adc adc xchg (bad) lahf stos xor or push fcomi or or sbb mov std (bad) mov stos fld or rex.WRXB test sti mov sbb cmpl leaveq mov mov in cmp mov xchg (bad) pop (bad) xchg rex.R adc orl or (bad) or insb int and mov mov or sub or in or repnz xchg fist adc (bad) mov orl sbb loope xor fstp add retq xchg mov and (bad) and adc or test (bad) loope retq mov stos mov lahf (bad) (bad) xchg push xchg add jmp (bad) pop popfq incl sti cwtl lods incl lea lahf jmp js lahf sub shrl mov cmp sbb enterq mov lret pushfq mov movsb sub add xchg repz push (bad) xchg subl movsl adc mov xchg cmp fcmovnu lahf cmp xlat add sti std add jl pushfq scas cmp ds stos test in in xor sar mov and pop movabs in add in xor movabs mov sbb movabs jrcxz cmp cmp pushfq (bad) fild (bad) sti in mov mov test push retq mov fnstcw push retq (bad) mov cmp mov in movabs or xor (bad) sub cltd roll jrcxz mov fs (bad) mov rex.R xlat xchg pop xchg mov or sbb (bad) repz push retq pop mov xchg or subl and mov and xchg cmc or stos in mov orl pop (bad) mov mov xor xlat (bad) cmp cmp mov mov out cmp pushfq mov cmp (bad) rcl jmpq jae xchg sbb incl jp stos xor sbb test mov xorl sbb je fcmovne movabs orl jmp (bad) cmpl xchg mov jmp cld repz popfq fstpt iret rex.WRX or jrcxz push pop jle sub mov jmp pop out adc sbb jmpq xchg (bad) fnstenv popfq insb stos xchg mov mov movsl stos pop std lret cmp adc (bad) mov xchg in pop out repz sub in adc lahf sub cli cmp (bad) and or xorl iret fwait (bad) fcomi retq xlat xchg insl adc loope cmp ffreep pop in xchg insl (bad) adc mov movsl stos push fwait (bad) insl sbb mov fwait cmpsb pop xlat in stos push pushfq xchg in popfq out mov mov mov rex.W iretq xchg jrcxz in pop cli xchg (bad) adc cmp hlt rex.XB push popfq (bad) (bad) fcmovnu rcrl jmp sahf xchg push (bad) out in (bad) movabs xchg js xchg sub xchg mov sarl mov outsb icebp mov mov (bad) xchg out pop repz (bad) adcl fucomi lahf (bad) mov adc stos out icebp mov pop in popfq mov lahf mov (bad) push sbb fisttpll mov or mov cmp out xlat mov mov rol (bad) out movabs repz std xchg out cmp xlat (bad) (bad) sarl je fildll movabs xlat scas out scas jmp out cmp retq (bad) mul xor (bad) xlat push sti fs mov icebp xchg cmc add jae fsubs rex.WRXB notl xlat xchg xchg hlt test cmp rex.RXB nop mov mov (bad) lret imul (bad) lods popfq or or and movsb movabs fstpt mov adc iret push (bad) xchg cmpsl callq repz out sti cmp pushq adc test mov adc xor xor in push movabs cmc scas fcmovnu out callq jrcxz movsl testl mov (bad) xlat push (bad) xor scas rex.WRX mov mov je xor xlat out rex.W lret mov je rex.W mov sub mov pop mov adc popfq std pop out fdiv fcomip mov cmc (bad) sti push iret cmp repz out mov out mov xlat lret (bad) pop rex.WXB sub (bad) mov ds mov lahf pushq scas add cmpsl movsl push fiaddl adc (bad) xchg mov sbb rex.X iret lods sbb jmp sbb (bad) retq (bad) int3 (bad) fistpl stos cltd and test fwait test jrcxz jmp repz stos test ds (bad) jl mov sub adc movsl int pushfq fistl cwtl pop xchg loop (bad) sti rex.W (bad) pop xchg xlat stc lods (bad) stc xchg test scas xchg xlat cwtl ljmp in adc stos (bad) xlat sub and xor mov xchg jl fwait hlt xchg jrcxz jmp (bad) sti cltd movabs xchg lods adc test xchg jmp adc xchg sti sub mov mov jo popfq (bad) cmp adc icebp pushq sti shrb rex.WB add clc sbb retq out std adc pop mov cwtl movabs push pushfq mov popfq jrcxz adc adc (bad) jmp repz xchg sbb (bad) stos sahf mov out (bad) mov mov cmc mov mov cmp (bad) mov std sbb icebp (bad) jb sbb mov (bad) movslq add xchg (bad) rorb sbb xor rcrl subl and (bad) je fisttpll jge (bad) (bad) xchg rex.X ds fisttpl rex.WR sar cmp stos cltd xchg and mov adc and (bad) (bad) push lods xchg sbb sahf test (bad) adc fistpl insb mov test test adc scas movsl xchg xchg mov cmp jrcxz adc lahf (bad) xchg movsl rex.RX lods (bad) rex.RB jmp (bad) cmpl sbb icebp fbstp push sbb icebp std adc sbb add std sbb jmpq mov stos shll (bad) mov std adc cltd (bad) sbb mov sarl cmp sbb xchg lea clc sbb and test mov fnstcw (bad) jns outsb jge test xchg (bad) pop movsb sbb xchg incl and add lret mov cmpl jmpq (bad) movsl fisttp mov mul nop sub cwtl rex.XB rex.WR mov cli (bad) adc cmp sarl cli lret and movsb xchg jrcxz nop jmp repz sti lods cltd rorl xchg mov mov sbb rex.WB mov addr32 mov orl int rex.WRB adc (bad) orl xchg stos adc xchg xorl lods adc mov jnp (bad) iret int jrcxz jmp repz sti (bad) (bad) movabs push movabs mov xlat jge fadd or sbb jns sbb sar add sbb add rorl iret (bad) std adc hlt loope adc sbb mov mov cmp jrcxz jmp repz pushq lea xchg movsb mov mov mov jl xchg mov sbb cmp mov lea icebp stc mov std xchg test repz rcll (bad) popfq lret loop (bad) js outsb test stos (bad) jmpq (bad) push loopne xchg xchg icebp fstpt (bad) mov adc mov mov popfq (bad) cmp sbb xchg xchg insb mov scas (bad) test repnz (bad) stos movsl fstpl cltd sbb sbb fwait addl sbb loope mov or pop jmp repz mov mov nop mov lahf (bad) ja adc pop mov lea mov xchg mov test or (bad) xchg adc int3 and rex.WXB sbb mov movsl rex.R test cwtl push sbb adc mov sti xor xor test in je or mov loope icebp (bad) fucomp (bad) rcr cmp lods rex.R cmpsb ds (bad) jmpq push (bad) adc jmpq mov push mov xchg rex mov mov xchg rcrl rex cmp adc movabs jo stos sub xchg repz or pop repz jle sbb adc mov callq xchg adc rex.WR (bad) jmp fistp cld xchg mov jrcxz test adcl adc (bad) cmc xchg xchg sbb mov in (bad) loope movabs mov add lods mov mul sbb stos xchg movsb adc xlat adc adc in add movslq sti test jmp mov pop stc xchg lods movsl fcmovnu popfq fsts (bad) movabs xorl sbb adc add mov movabs mov movsl mov scas scas xor xchg std fucom cmp xchg (bad) ror mov xchg int mov rex.RB hlt xchg (bad) sbb mov in jrcxz loopne lahf (bad) retq shld add mov (bad) xchg mov iret sbb mov mov jle rex.WRXB sbb jmp fldl jno leaveq orl jmp mov ss scas movabs fcoms rex.WRX lods std mov mov xchg mov adc cmp popfq fistp cmp out rex.WRX mov (bad) rcrb fldlg2 push (bad) xchg (bad) adc incl sti stc cwtl mov mov test lods cmp push push mov stc mov jo mov sbb in xor xchg rorl andl or movsl cld ficomp mov xchg adc jmpq mov xchg (bad) (bad) sub rex.XB imul mov mov shl mov pop or ror xchg sbb movslq add (bad) jle sahf add mov repz cs loope std xchg rclb in mov xchg cmp sbb mov sbb (bad) fcomps and mov test stos (bad) sbb mov cmpl xchg fildl xchg rorb cmc xchg rclb mov (bad) test xchg roll sub movslq jle rex.RB mov rcrl rex.X in xor popfq add mov mov notl test sbb out or cmc cs sub adcl push or xchg (bad) cmpsb stos xlat test cli (bad) sbb mov (bad) outsl lea fisttpll sbb (bad) movsb pop fwait movsl test xor repnz nop orl ds mov mov jmp pop cld jg andl cmp imul lods mov nop mov jle xlat movslq sbb cmp xchg rolb add sti mov std cmp jnp ds sbb mov in sbb xor adc (bad) pop lock and or rolb xchg addr32 rcrl movabs retq lcall xchg cld adc sbb jmp repz sti movabs xlat rex int vminps sbb movabs sti or imulb (bad) sbb sbb jrcxz cmc push (bad) std adc lea cmpsl lea rex data16 (bad) jrcxz in out cltd retq mov in xlat xchg xchg sahf cltd pushfq lock test mov (bad) (bad) int fwait sbb pop sbb xchg jp negb sbb cmp (bad) (bad) push enterq xchg jmp repz (bad) mov (bad) cmc stc lahf jrcxz out (bad) rcrl std sbb sti je pushq push fs xchg rolb outsb cmp nop xchg mov mov xchg jrcxz sbb outsb sbb sbb idiv mov (bad) faddp loopne pop mov add xchg (bad) lods (bad) xlat xchg test or xor pushq adc std xlat rex (bad) test add pop mov repz leaveq lods jrcxz mov sub loop rol iret in mov xchg rcrl xor (bad) (bad) mov sbb mov jmpq add scas or jmpq mov sbb testl fldt push sbb loopne mov (bad) sbb pop xchg mov mov popfq fcmovnb mov or and sbbl push test adc mov (bad) lods sahf cltd push sbb xchg lret je xchg rex.WRXB insl mov xchg xchg push fadds (bad) cmp (bad) std xchg test cmpl out cli sbb in leaveq movsl mov xchg sbb flds rex.WRXB fild cli mov or cmpl jmp push movabs rex.WRXB rex.WRX repz (bad) retq xchg in fucomi (bad) popfq movsl sbb jrcxz lods (bad) repz sbb pushfq mov mov cmp (bad) xchg outsl (bad) fwait cmpsl movsb roll and sbb orl in subl std movabs xchg movl movabs rex.WRXB icebp and (bad) xor nop mov (bad) mov test in insl addl xchg or pop xchg xchg in jrcxz (bad) flds cmp cmc lret popfq xchg out xchg sbb out pop int3 adc xchg test and stos cmp (bad) jo cwtl (bad) in xchg xchg in adc mov (bad) xchg jrcxz mov callq mov adcl int (bad) (bad) xchg rcrl lods jno mov stc (bad) mov cmc (bad) (bad) orl pop push lods (bad) mov jl cmc sahf jo sbb (bad) jne or (bad) (bad) (bad) int3 cltd (bad) movsl sbb (bad) mov cmp xor stos xlat cmpl cltd (bad) popq cltd popfq test sbb popfq lea loope in (bad) cmc (bad) cmp shlb movsl cli sbb lret retq test sbb (bad) sarl lahf cmp mov xchg sti rol stos leaveq xchg jmpq jle cltd (bad) add in or jge xchg and out and (bad) sbb (bad) sbb rex.WRXB rex.WRX test mov leaveq (bad) pop rex.R sbb (bad) test std xchg (bad) (bad) movsb in or cmpsl lods repz xchg rcll cmpsb fstpt insb lods repz (bad) sbb int3 callq in xchg xchg std sub test cmp push (bad) stos repnz (bad) mov xchg lods jge mov xchg in icebp rex.R rex.X rex.RX mov adc sbb xchg in mov sbb mov movabs cwtl jmp repz in sbb in lods mov std mov mov insb fisttpl fisttp adc mov cltd mov (bad) in lret xchg stos (bad) xchg and (bad) (bad) pop sbb pop sbb xchg add cmp (bad) lahf stos push leaveq mov mov lods negl xor cmpsl in add in cld jrcxz sbb cmc (bad) lods pop icebp push xchg (bad) or sbb stos xchg out fist test test mov iret rex.WR (bad) movabs and stos rex.RXB push stc mov sbb push repnz mov movabs xchg (bad) fstpl mov fistpl es xchg (bad) adc rcll (bad) mov lret out mov jrcxz jmp repz pushq mov sbb (bad) xchg rex.B rex.WX xchg test (bad) jno mov add iret add xchg mov sarb fsub cltd jrcxz test cmpsl cld (bad) xor lret xchg mov mov mov movabs js sbb addl test xchg hlt (bad) mov (bad) cmc mov lods lods (bad) xchg (bad) (bad) (bad) test fstl xchg sub xchg sbb jmp imul sbb icebp mov xor xchg mov rcrl adc out fdivs lea (bad) cmpsl cmp adc in push mov xlat adc rcr in (bad) mov adc push std adc sarl stc int movabs test mov adc cmp (bad) xchg add je mov mov xchg push push lea in mov mov rol mov clc sub mov push lods or mov xor je mov or (bad) (bad) js jo mov (bad) mov fldenv (bad) sbb rep fs scas mov mov ss mov xchg mov ds add xor ficom mov sbb mov xchg adc movabs mov push (bad) sbb jmpq (bad) fistl xlat (bad) test xchg xchg int3 (bad) fxtract imull sbb out movsl callq adc and loope decl in rex xchg insl or mov popfq xorb in cmp sbb test cmp testl (bad) xchg jmp mov sbb (bad) (bad) xlat cmp add sbbl (bad) xor test mov mov (bad) pop mov imull lret mov fstps push xchg iret mov rcrl xchg stos cmp cmpsl movsl leaveq (bad) movups (bad) rcll jrcxz adc (bad) (bad) fcmovnu sbb cltd adc xchg out (bad) int3 repz std adc retq mull lea mov xchg iret jmp lods mov cmp test sbb sbb rcr xchg fistpl fistl and mov and adc clc adc add sbb mov ds or lahf repz mov movabs jmp repz xor lods (bad) xchg mov mov cmpsl rex.RXB mov sbb (bad) cmp iret add sbb pop xchg adc pop mov cmpsl and xchg fsubs xchg xchg mov je adc and jmp mov loope,pn in (bad) roll movsl mov mov pop frstor sbb popfq push (bad) xchg push pop sbb xchg and xchg fnstcw int std in add lea sub (bad) jmp (bad) xchg shrl jmp (bad) xor lods mov lods mov test xchg jbe xchg rex.WRX jmpq sub sti (bad) sbb test rex.RXB repz je pop jmp fincstp jrcxz adc rex.RB adc mov ficom (bad) mov test sbb push popfq xchg ljmp adc rex movsl sbbl xlat mov (bad) cmp mov mov cltd fstps (bad) xor rex.W mov mov lods mov rex.WXB cmp mov mov rex.B xchg fsubr (bad) std adc xchg fs push movabs rex.WRXB cmp in adc lock test xor hlt xchg fistl fcomps movabs shl mov in sub frstor retq movabs xchg mov test repz movabs mov incl mov xchg hlt jrcxz pop cltd leaveq sub xchg retq (bad) movabs fcos lret test push int cltd sti xchg sbb xchg xchg movsl popfq jmpq fisttpll (bad) jle rex.WX test (bad) mov mov push xchg rex.X (bad) mov stos (bad) mov xrelease xor cld xchg mov mov lods mov (bad) loope xor repnz xchg test hlt cmpsl add mov xlat mov ds mov popfq (bad) push mov push jg push xchg mov mov add add shrd or out jo lea (bad) cmp adc imul xchg xchg invd xchg xchg (bad) adc adc stos mov xchg mov (bad) jmpq adc cmpsl sahf xchg mov mov test imul xchg mov pop lret adc pop mov jo rex.WB hlt cld (bad) movabs cmpsl imul pop iret std in or or (bad) imul mov jmp sarl stc movsl pushfq (bad) iret rex.RXB mov xchg sbb scas loope pop sbb int xchg sub sub xor jmp js mov xchg lock stos je mov add in add push adc mov mov sub loope cmp cltd cmpsl xor xchg shrb xchg jns pop in mov cmp rex.X adcl mov test xchg int3 xchg xchg int sarl std sub xorl mov sti movabs (bad) or movsl rex.RB xchg sbb enterq movabs add mov mov adc scas (bad) (bad) mov mov fnstcw add or cmc lret cltd add add jle sbb (bad) in (bad) lods cmc cltd (bad) lods xchg mov leaveq mov push sti sti push xor jae fisttpll mov xchg sub sbbb sbb cwtl (bad) (bad) adc jmp (bad) rex.W mov lret jne in xchg bt cltd (bad) mov mov xchg (bad) lods in sbb nop cs or popfq movsb (bad) sti cmp add out (bad) stos (bad) cs sbb fwait (bad) xchg movsl mov fist adc movsl mov sbb popfq lret stos (bad) or (bad) test popfq push (bad) je cmc js js mov fistl xchg mov xchg or leaveq test or repz cli xchg test xchg sbb (bad) (bad) rex cmp cmpsl mov in in in lret hlt (bad) xchg repnz pushfq test adc (bad) push (bad) rex.RB mov orl lret xchg xorl jns cmp (bad) outsl add ss xchg push in (bad) rex.WRB rex.WR (bad) xchg mov mov rcrl xchg rex.R movsl adc (bad) mov outsl xchg (bad) (bad) push outsl movabs mov mov xor cmp mov test mov cmc cmp rex.W mov (bad) in lret movsb retq add adc cmc mov callq mov addl (bad) movabs repz or or xchg and mull add adc sbb lods rex.WR test mov pop rcrl (bad) xchg mov mov (bad) cmc callq pop jg (bad) jns out std popfq pop (bad) clc xchg loop (bad) pushq or push mov rorl stos xor mov (bad) (bad) std retq push cltd cld sbb xchg (bad) addl cltd orl popfq lods (bad) lret mov insb sbb (bad) fdivrs mov xchg in pop decl (bad) test ljmp mov addr32 test sti fcoml add std enterq sub lock xchg xchg nop stc std mov rcll cwtl adc sahf ljmp test adc js lahf movabs mov xchg incl in test xchg loope xchg xchg cltd cmpb std mov xchg (bad) cmpsb mov fmuls rex.WRX add mov adc sbb movabs xchg fcmovbe sti xchg mov (bad) lods test movabs xchg push jae xor (bad) in (bad) (bad) xchg fstpl pushq mov mov mov fcompl xchg rex.R lret test mov mov xchg in fidivrl adc jmp movsl xchg (bad) push cmc push fistl add mov mov int adc (bad) mov shrl pop sbb fisttpll repnz adc mov xchg repz mov pop mov xchg mov pushq stos xchg xchg adc fcoms ljmp (bad) test or xchg (bad) insb (bad) mov (bad) fstps xchg or xchg jne fisttpl xchg (bad) cltd mov (bad) mov js outsb iret fstl adc push leaveq lret rex.R lea add xchg xchg movabs cmpl adc jmp add hlt mov loope xchg nop fist sbb mov retq push lea (bad) xchg std movabs (bad) jne mov mov lods (bad) xchg mov divl mov mov fbstp sub adc xchg insl xchg movabs es leaveq sbb mov sbb (bad) int3 jrcxz mov fisttpl (bad) pop (bad) xchg add jb ja lcall jrcxz sets pushq add xchg mov sbb xchg movsl fucomi cltd rex.WB pop std cwtl mov mov outsl xchg adc (bad) movabs scas rex.WX mov sbb and movabs (bad) movabs jrcxz (bad) pop scas adc out (bad) xchg mov (bad) sti mov pop test es test (bad) rex.W jge push sub jb sub loope mov shl test gs adc and (bad) (bad) (bad) xchg lods popfq (bad) pushfq lods cltd (bad) (bad) fstpl lret (bad) add pop mov lods movabs shrl (bad) lret cmc xchg test xchg rex.WRXB rcll lods stos sbb sti imul adc jb xor lahf xchg notl test std lret (bad) xchg movabs jrcxz iret (bad) (bad) pop rex.RB fcomps xchg movabs movabs fstps sub mov add (bad) insl fldl (bad) xchg pop mov fldl js xor hlt (bad) (bad) jne fs cli ja fbld xor setb xchg sub mov loope (bad) (bad) adc push xor adc test mov (bad) mov test cltd mov cmp mov fldcw cltd add xor adc out (bad) cwtl pop mov xchg mov adc mov pop mov out adc xchg rex.W xchg cs or xchg mov lods (bad) mov adc scas test rex.RX test or movsl xchg cmp xchg mov mov and (bad) xchg popfq push out xorl sbb cmc cwtl sti sbb xchg lahf add xor rex.WRX or mov in rex fsubrp push decl cmc (bad) (bad) mov cmp (bad) out lret insb and scas mov es xlat movabs and retq sbb test out sbb and in (bad) jmpq loope movabs out loop (bad) (bad) or in stos icebp mov adc or adc ficom (bad) fst lea mov mov sub orl rclb xchg lods outsl movsb (bad) rex.R lea mov leaveq mov int (bad) xchg or or outsl retq mov cmpsl lea xchg (bad) mull xchg hlt pop (bad) or stos mov popfq fstpl (bad) jle pushq jg popfq lods sahf repz lods gs nop mov sub mov mov xor sbb (bad) stos jmp xchg paddw xor int enterq rorl callq or stc sbb js xlat sub outsb or xlat cmc lods out (bad) add adc (bad) adc sbb jmp repz sti (bad) movabs sar (bad) insl rex.WXB or (bad) icebp mov add sbb sbb mov mov (bad) xchg rex.WX cmc xchg cmp in or (bad) xor in (bad) out mov adc movabs jl adc xchg lods xchg xchg test or (bad) rcrl gs movsl or jns cmc push adc (bad) (bad) pop cmc xchg or out xchg mov fild sahf test fwait cmp xor sbb (bad) or popfq pop xchg fdivs mov retq int3 jrcxz lret sbb (bad) iret fisttp popq (bad) xchg (bad) jnp rcl adc not and (bad) lea fwait adc xchg stc lods xchg imul mov sahf (bad) jbe mov sub iret xchg pushfq xchg fstps mov fstps xchg xchg mov fistl adc shll (bad) xchg (bad) repz xlat retq jbe movabs sub std movabs mov pop rclb rex.R lods cld movsl mov scas mov mov iret mov fstpt mov cltd lods retq sbb pop xchg fdivs shr fcompl mov rex.WRXB adc cmpsl push std in fstl mov mov lods movsl vpaddw xchg (bad) xchg ds mov movabs retq outsb iret (bad) loopne xchg jle out rex.WRB (bad) push xchg mov xchg fxch mov adc xchg or mov test xchg cmp push jle stc or rex.WRB xchg xchg leaveq mov or cmc push sti mov test adc in mov repnz rcll lret xchg (bad) jle vmovd pop rolb sti xchg movsb pop xor mov movsl in add push (bad) mov or xchg in mov (bad) (bad) mov mov mulb jl (bad) faddl jb cwtl xchg out sub xchg ds sub int3 rex.RX cmpsl xchg and xchg decl jb (bad) lahf cmpsl push add rex.RX (bad) cmp fadds jmp in ja jle int out sub std cltd cmp lods js retq (bad) cltd jbe or sub (bad) xchg adc or cltd jmp push cmpsl adc adc rex.XB je frstor sti stos sbb cwtl insb jnp push out xlat mov test loop cmp mull shll lods test rcl push popfq mov repz mov rcll xlat and mov xchg mov movslq in (bad) cmpsl repz outsb rolb xchg mov sbb jrcxz xor adc add mov cmpsb movabs rcll xchg movsl xchg jmpq rex.RB sbb lods (bad) xchg mov xlat test rcll lods xor (bad) idivl mov gs cli lahf xchg rex.WRXB or (bad) sti stc or mov retq adcb mov sar mov int test xchg rex.RXB jmp mov out repz shl or and sbb (bad) out std rex.X lahf mov test rex.WRXB adc xchg xchg mov frstpm(287 (bad) xor sbb xchg (bad) xor test stos xchg add (bad) or adc cwtl insl add subl icebp sbb sbb xchg mov movabs xchg adc popfq (bad) mov roll orl sub xchg fwait sub or (bad) icebp rex.RX mov xor mov or rex.RX mov jge icebp sbb adc sbb xchg std xchg repz rex.WRX mov push (bad) cltd sub repz add xchg (bad) std adc nop in xchg push (bad) lahf fsts sbb mov xchg mov rex.XB sbb iret std seta pushfq test scas rex.W (bad) (bad) fstpt movsl loope cltd sbb and mov (bad) push test xchg rolb sti cld test stos scas insb or sbb pushfq (bad) mulb sti (bad) mov lahf test retq adc lea adc rcll iret addps and rex paddsw or mov loope xchg (bad) (bad) jmp xchg nop fcom sbb xchg mov jg add lret cld sbb sub adcl adc fldenv (bad) push mov movsl push sub (bad) jmpq movabs add cli xchg pop push xchg xchg sbb iret xchg cwtl jnp mov leaveq xchg (bad) sbb or pshufw nop sbb mov addl int lahf int cmpsl xor std cmpsl pop add jp (bad) mov cld sbb and in (bad) or leaveq bt mov mov notl movsb in xor xor sbbb lods sbbb (bad) adc outsl mov (bad) jrcxz jl xchg lahf rex.WRX or cmp xchg mov movsl push (bad) rclb jmpq cmc (bad) xchg mov (bad) notb adc rex.WXB sub (bad) rcrl test pop xchg fdivs lret sarl repnz jrcxz popfq stos rex.WB shll movabs es (bad) xchg xchg adc loope xlat cmpl sbb rex.WR lahf fstl cli xchg lret adc or adc scas jmp (bad) pop fs std fs xchg xchg (bad) add sbb orl js adc test (bad) sbb test rex.RXB mov (bad) lahf fisubl jnp adc and insb or mov jg xlat jg xlat jg xlat jle test add (bad) lcall mov popfq sbb jmpq rex.XB out mov mov (bad) adcl scas lahf leaveq fnstenv xor adc (bad) in andl push or int3 (bad) (bad) fcmovnbe cmpl xor xlat icebp mov scas or xchg mov xchg mov mov (bad) setl and pushq lahf shrl mov (bad) out xchg movabs loopne movabs mov lods xor leaveq pop xchg sbb (bad) leaveq pushfq int clc in sbb mov jl and jge mov lea mov (bad) mov (bad) in add xchg jrcxz sbb sbb lahf fimul sbb xchg xchg or in pop movsb sar xchg push fstps or adc mov lret lret enterq mov rex.WB sti (bad) stos cs icebp mov xchg stos out nop retq xchg xchg jmp int or sub xchg mov divl leaveq xchg test outsb jae mov int repz mov xlat mov xlat jg xlat jle test push mov fs xchg outsl (bad) lock rex.WX sbb xchg sarl test (bad) ds sub movabs (bad) push int retq xorb in repz movabs retq lret rex.X negl cmp lods stc jrcxz retq mov adcl int3 (bad) rex.WXB (bad) xchg lods ds cmpl rex movsl std outsb lods xlat mov mov mov mov cmpsl sbb xchg push rex.RB packssdw retq cmp (bad) xchg jle test push xchg fldt fdivr xorl mov pushq fidivl xchg jnp xchg or movsl jae jmpq push mov mov in mov xchg xor fs (bad) xor cmp (bad) and fnstcw jne or or movabs xlat stos neg lahf rex.R ja xchg (bad) or (bad) or xchg push sub movsb outsl add xchg mov mov mov fisttp sbb jg xlat std mov cmpsl out stc clc fucomi fdiv movsb mov in add mov out (bad) pushq (bad) test add repnz rex.R cltd mov sti or or cmp imul adc jno sbb test lods xchg clc loope lret ds lret mov mov xchg (bad) lret es out fs icebp (bad) adc rex repz lods xchg jmp xchg jrcxz mov mov hlt fs jb xchg or adc clc mov adc (bad) (bad) loopne rex.RB neg mov mov fcoml mov mov fnstsw test fst in fdivrs (bad) mov stos xlat retq leaveq int or rex.WX xchg retq xchg je cwtl xchg lret push fmuls rex.RX xlat decl leaveq repz icebp fdivs rex.W cmpsb in popfq popq icebp fsubl in mov (bad) mov (bad) in fisttpl (bad) icebp or xchg adc push mov mov fs pop fs repz xchg or rcll (bad) in stos iret lret push xchg fsin (bad) xchg (bad) jnp jo and in repz or repz test fwait out sbb sbb fdivl (bad) mull jrcxz ror xor xor jl (bad) xchg fs (bad) add mov cltd subl mov or fmuls jg pop (bad) fstps pop or fincstp xor xchg (bad) lods or rex.WXB sub sti sub int sub (bad) xchg mov movslq scas push stos popfq xchg movsb (bad) mov test cmp (bad) idivl xlat movabs (bad) or rcl jg xlat jnp in rex.X lods fucomip push xchg imul or jb fcmovnb jg fmul jrcxz ror xor xchg push retq mov scas (bad) adc ficomp (bad) push repz movabs stc cltd test (bad) hlt jmpq xor mov mov movsb mov and add shrl xchg fstps (bad) scas movl xchg hlt and rex.WRXB xchg adc push in rex.R rex.W hlt sar adc rex.X movabs scas sub xchg adc cmp or (bad) (bad) sbb popfq sbb xchg rex.WR divl (bad) jmp movabs mov movabs insb cltd or mov xchg test sbb int3 (bad) push mov and decl rex.X adc mov jmpq fs mov cmp mov scas adc mov (bad) mov stos scas lcall add mov shld (bad) iret lods xchg mov lahf xchg push pushq adc push callq mov clc jrcxz stos xchg retq pop mov mov xchg or sub cmp fdiv xchg lods adc mov ds addl fucomp push mov cmp fs scas adc xchg mov lods pushfq pop xchg retq lahf leaveq divl mov mov pop and xchg addr32 mov (bad) push add xchg in sbb int3 xchg mov mov imull push outsl lods push add andl pushq or (bad) mov loope xchg lods xlat adc leaveq repz add sti mov std xchg shld negl movzbl sub sti add insb sbb fstpl cmp stc mov xchg cmp andl jmp xchg mov or icebp (bad) cmp std jns movabs icebp mov adc mov rex.WRX mov mov and xlat (bad) mov add mov movabs int3 sbb cs mov (bad) sti mov jrcxz lahf adc or jo mov cmc cld xor push sbb mov add adc cmp nop (bad) xchg (bad) (bad) test std xchg fnstenv xchg movsl (bad) xor xchg stos sti andb xchg rcrl (bad) mov xchg (bad) (bad) cld or xorl xchg lods (bad) sbb adcl (bad) scas test mov jle or sbb mov movabs cld push mov pushfq xchg (bad) mov jmpq stos cs cwtl jle rorb pushfq mov jmp movabs (bad) xor cmc sbb sub movabs xchg mov xchg scas (bad) push repz mov (bad) rex.RXB or adc or pushfq scas sti xor mov push stos fldt xchg fmull pop adc (bad) mov sub sbb pushq repz rex.WRXB sbb and (bad) js fucomi (bad) mov fwait mov clc mov fwait xor lods rcrl xchg pop and (bad) sbb insl (bad) stos ja pushq repnz int rex.RB mov rex.RX fwait or xchg shrb jno stc and leaveq rorb fwait imul xorl push loopne test clc jno fwait data16 sbb test sbb sub sub addr32 and pop (bad) movabs fsubl jl lret cmp stos subl fisttp (bad) xchg jg jge pop (bad) stos test mov outsb (bad) xchg test or add xchg (bad) sub xchg (bad) orl and popfq sti mov mov and fwait movabs mov (bad) outsb fcomps and xchg lea cmc cmc xchg mov (bad) lods int3 push xchg mov or std callq xchg (bad) rorb mov (bad) movsb xchg xchg xchg loopne (bad) xor push mov movsb movabs xchg xlat loope std callq xchg retq fidivrl rorb mov mov xchg mov (bad) adc idiv in fsubl in or mov cltd xchg xchg ficompl jnp pop jrcxz mov or in mov mov clc idivl add xchg movsl fidivrl lods or sti rex.WRXB push adc popfq int mov sub repz icebp fidivrl jmpq xchg lods (bad) mov mov nop push popfq std in lods jmp (bad) mov xor push test movsb xchg lea adc movabs xchg iret (bad) xchg (bad) xlat or mov (bad) lret loopne lods mov mov adcb popfq (bad) (bad) lahf clc icebp xchg lods rep std add or xchg (bad) fstl movsb addb xchg nop fidivrl xchg adc sub jmp rep sti add xchg rcr (bad) fisttpll mov add loop adc std out lods icebp push xchg idivl (bad) or fucomp movsl movsb mov mov (bad) fidivrl mov loopne xlat in in mulb fidivrl fisttpl sub xchg mov (bad) mov std (bad) movsb in add xchg std fidivrl mov neg in movsl movsb stos add xchg adc stos xlat jrcxz lock stc add xchg leaveq fidivl mov or jle and (bad) movsb (bad) (bad) xchg rex.XB mov push iret neg in lahf movsb test xor (bad) jae in pop and push xchg xchg xchg cltd fimull (bad) (bad) (bad) adc mov xchg fwait out jmpq (bad) xor xchg fistl (bad) xchg sbb (bad) mov stc movabs leaveq callq cs xchg xchg clc loop lods mov out push xchg std mov mov fdiv sub movsb ficoml rclb or cltd scas lods mov xchg test int push mov mov mov adc sbb xor adc xchg por callq scas and xchg clc movabs jbe movabs mov in stos test fisubl xchg fistl xor (bad) movsl xchg notl add xchg sbb (bad) popfq or test (bad) movsb pushfq add xchg sbb (bad) xchg or add (bad) movsb cwtl add (bad) orl xchg rex.XB (bad) int clc sbb es movsl cmp stos xchg in sub (bad) mov lods (bad) mov out rex.RX fs leaveq mov ss iret (bad) mov fnstcw add nop (bad) movsl cltd push (bad) repnz xchg rex fwait movabs sti cld xchg movabs pop and iret xchg cwtl out cli rex.RB mov sub pop rex.WRXB sti test pop jl fwait sub (bad) lret cmpsb mov stc fwait hlt rdpmc movabs es fstps rex.WX rex.XB rex.X xchg or mov and outsb xchg fwait mov callq fwait xchg jb xor pushfq pushq push and movsb fwait mov xchg push imul xchg lods fwait sbb fwait sub in pop icebp (bad) cmp lcall je jb (bad) sbb sar retq adcb popfq sahf (bad) xor fucomi xchg and (bad) rex.WB fwait movabs mov (bad) sti cmpsb mov (bad) (bad) and rex.RX mov rex.X rex.WB fwait clc loopne nop cs rex.RB movabs lret (bad) cs lahf pushq fwait icebp mov (bad) popfq (bad) mov fcomip loop rex.RX sbb cmp iret fs cli cmpsb pop sbb jle xor lahf enterq in test (bad) add (bad) jmpq jo mov fldt fwait ja jl and add add fimul fwait sub adc fwait or jb ror pop cmc push mov (bad) (bad) (bad) sbb xor pop sbb pop rex.WRXB movslq stos jg (bad) negl xchg rex.WXB sbb xor jbe cmp (bad) (bad) rex.WRB sbb (bad) adc rolb sti pop jmp jle fcompl mov adc sbb je push out std adc fwait out pushq fstpt or mov fbld imul scas sbb pushq sti mov jnp sub (bad) or (bad) pushfq add int sbb xor callq movsl repz sti (bad) int3 xor xchg lret (bad) icebp fsubrl (bad) sbb test callq jmp (bad) je (bad) xchg loopne outsb insb push in fwait enterq rcr xchg mov movsb and sub out pushfq setg jae sti fsts and mov movsb sbb push retq (bad) scas pop and and rcrb nop (bad) jnp (bad) fcomps cmp sbb sub sub out sbb push stc fisttpl jmp sub std movabs (bad) rcrl mov fwait insl icebp (bad) adc sub fsubrp and vmovmskpd and push adc cmpsb xchg mov sbb xchg outsb fmull rex.B rolb cmp mov outsl ds (bad) (bad) (bad) cmp icebp mov adc add mov sbb sbb cmp xchg sub int3 leaveq xlat xchg add jno fnstenv sti js rex.WRB mov repnz xchg rex.RX (bad) add rex.XB scas lods jbe fwait fs jge (bad) jp sub jne or fdivrs or rex.WRXB (bad) adc stos mov rex.WR cs (bad) adc or sub (bad) sbb ss cs or out (bad) callq rex.WXB fstps lret cs cmp movabs scas jmp out fwait sub fidiv fwait pop sub sbb movabs mov sub rex.WXB add in (bad) clc adc loopne adc movsl loopne stos (bad) and lahf mov fwait out addl lods in add fidivrl (bad) (bad) div and xchg mov mov jne push (bad) jnp xchg js stos adc fwait scas enterq and lret (bad) pop iret mov ss fldt idivb fstl cmp sbb fwait movabs test jmpq rcrl movabs pop mov out stos ss std (bad) sbb xor xor fisubr (bad) (bad) in (bad) sbb (bad) imul mov sbb (bad) or fwait icebp and mov rex.RX rex.RX es leaveq (bad) retq fwait rcl movabs (bad) (bad) insb sbb push and mov rcrl sti lock push xchg sahf cld enterq (bad) sti vmwrite push push rex.WX rex.WX rex.R and rex.RXB fwait sbb imul lret gs pop lods bt fwait stos mov movabs (bad) rex.WRXB pop fistpl imul pop push or cmp mov rex.WRX mov cmp sbb and ficom sbb jmp fwait out jne xchg xchg push sbb add jno (bad) callq add fsubl push cmpsl fiaddl in ja mov add cltd push lahf jg jmp rcl fwait jne jne lea (bad) lods sbb repnz or icebp scas sbbl sbb cmp and flds lahf xor jrcxz sbb nop xor retq rcrl adc jb fwait sub jmp (bad) add (bad) fneni(8087 xchg lods sbb fwait rex (bad) repnz push add cltd sbb hlt (bad) shr mul mov rex.XB int es and orl sahf testb (bad) callq fwait sbb (bad) movabs (bad) loope rex.R fwait add xchg adc or push fwait addl idiv cmp ja in add pop mov fwait out or rex.RX sbb sahf movabs fldenv mov push insb adc mov shll cmp (bad) xchg hlt loope fsts jmpq rex.R cmp fsub sbb add sbb popfq outsl sti mov (bad) xor sbb movabs cltd (bad) (bad) (bad) sbb rex.XB or mov and rex.WRB fs clc sbb sbb mov (bad) rex.WRXB fwait and mov (bad) rex.X fwait xlat in imul cmc jl mov rcll pushq push shlb rex.WRX xlat mov retq sbb outsb rex.RXB outsl xlat sti scas (bad) cwtl rex.WRXB lret fwait xchg xchg lea rex.WX and in (bad) ljmp clc cmp mov stos cmpsl fwait cltd pop sbb testl adc rex jb (bad) pop callq push add push fnstcw mov gs mov jl (bad) retq popfq xchg ficompl lret (bad) (bad) jge xor ds nop pushq mov vhaddpd xor mov and (bad) fwait mov (bad) (bad) mov sti fwait hlt out imul (bad) imul mov mov push movslq test cmp out repz cld shrl fwait jo pop fstpt pop or xchg mov adc jmpq jp fwait and add rex.RXB push repz sbb mov and jmp fwait shrl mov lret add fisttpl pop (bad) fwait out mov int3 clc fwait loope rex.B jrcxz and cmpsb pop sbb rex.RX out rex.W and (bad) mov leaveq mov testl sahf retq stos in fwait mov repz cmpl cwtl adc or (bad) fwait push lods cmc rex.WB sbb ficomp xchg xlat mov and mov sub in adc xor sub sub lea stos movsb sbb (bad) cmp clc add mov sahf jae loop push mov sub jge mov mov imul iret leaveq fwait xchg xor add movabs fwait lock imul sbb retq addr32 or in pop push add (bad) nop cmpsb in (bad) fisubrl repz test xor insl add fcmovnb (bad) loopne pop pop stos movabs xchg and xor sbb (bad) sub add mov (bad) xor loop repz test push (bad) and (bad) cld sahf stos mov sbb hlt (bad) cmpsl repnz (bad) and loopne add rol push insb and movabs pop scas outsl cmpsb xor js adc mov mull iret or (bad) pushq callq mov fwait in sub (bad) fwait jmpq sub retq sub fistp insb rorb jmpq je mov push cmp jns lcall movabs cltd pushfq sub and xor (bad) cmp (bad) mov rex.R (bad) mov fwait rex.W fimul sbbl in rex.RXB (bad) rcl fstpt (bad) jrcxz rex.WXB sbb (bad) mov (bad) jmp rex.R fwait (bad) push sbb fwait mov xor retq (bad) and fwait (bad) jnp movabs cmp lods nop fwait add leaveq lret imul rex.WRB jmp fwait sub and xchg repz adc fwait (bad) movabs loop jrcxz rex.XB xchg mov pushq in retq fldcw sbb movslq adc and icebp sbb lock sbbl (bad) jmp int3 mov fild outsl and (bad) jmp fwait pop (bad) pop cmp addr32 xlat fwait fs and stos rex.WRB ja (bad) rex std jrcxz (bad) (bad) int movabs sub push andb addr32 ds (bad) movabs test (bad) int jmpq movsl sub (bad) (bad) rex.X rex.W fisubl pop retq add (bad) xor adc cmpsl fwait sarb add fild (bad) adc mov sti (bad) xor lock iret lcall add divl mov or out lock rex.WR mov fisttp (bad) pop idivb or or divl sti icebp push sbb pop jae fucomp sbb jb fwait (bad) movabs xlat mov stos in int3 fwait xchg (bad) (bad) jbe cmp outsl negl xchg fldl mov shl mov (bad) jno adc rex.WRB fwait movabs adc jno scas and mov mov cltd loop sbb mov out (bad) outsl fwait shrl stos jo pmullw rex.WXB sti cmp rex.WR fs (bad) xor test xlat xchg jbe rex.WB in (bad) lret mov cld in js es in (bad) rex.X lea movslq (bad) sub and lea popq xor fwait (bad) push retq out mov rol fwait cmp mov stc fwait (bad) pop lret (bad) cltd (bad) rex.WX fwait and sub callq mov jno mov loop sub out jmpq jmpq outsb mov or jne pop jo movabs jnp (bad) ja rex.X rex.XB out out fldenv popfq adc icebp xchg sbb ror fisttpl retq jrcxz lock rex.WRXB mov (bad) clc retq rcrb cmp add lahf sub fmul nop fwait (bad) mov scas loop fwait rex.WRX test rex.B pop nop cwtl jrcxz std fwait pop cltd sbb adc in cmp fsts pushq pop cmc rex.B xor rex.WRX outsl jle mov jg (bad) insb hlt scas iret popfq fwait mov mov repnz cmp cli fwait pop (bad) xorl cmp ss xchg outsb or (bad) fwait pop fisttp movslq lea mov clc push stos cld adc ds rex.WRXB sub add mov lock (bad) (bad) sbb flds rex test xlat xchg push or mov (bad) sub sbb (bad) fcmovnbe test mulb jmp push rex.WRB outsb mov out fistpll insl fistl mov xchg jb imul fcoms rex.WR jle rex callq fwait (bad) js xchg lods jns xchg (bad) cmp mov mov sub mov addr32 fdivrs and fwait xor pop test sbb sbb rex.RXB xor (bad) fwait xchg movabs rex.WXB rex.B jrcxz test movabs es (bad) jge fisub or pop movabs mov scas fwait xchg rex.R mov jae retq stc and fs sub jmpq xchg loop fucomp mov push addl bnd xor push in in sti add lea (bad) cltd or insb lret jrcxz mov fwait xor xchg push push (bad) rex.W je fwait xor jne (bad) sub xchg xor (bad) cmp cmp sti addr32 sti xchg lods add xchg (bad) xor (bad) mov callq sbb rcrl and lods xor callq cmp (bad) (bad) fsubs sub (bad) out fwait loop hlt in and (bad) fwait test mov ljmp and movabs jnp test jmpq loope sbb pop (bad) or or callq (bad) sub cmp cmp test fdivl push jmp loop fwait test ss retq sahf sbb push lea jb movsl pop mov fisubrl retq fwait in jns mov pushq fwait (bad) rex.WRB outsb lock jl test (bad) callq add pandn (bad) mov ss sbb out outsb mov xchg adc pop xchg (bad) mov retq xor (bad) cld jnp in jge and xchg (bad) cmc in sbb cmpb pop scas pushfq hlt sbb xchg movsb stos nop push je pushfq (bad) (bad) jne add icebp sbb xchg insb xor pop mov and lret fcmovb iret jae sbb fsubs (bad) (bad) mov jmpq jmp int3 fs leaveq sbb test and rcr (bad) xor cmpxchg add and adc rex.B mov imul fwait adc (bad) fisttpll mov mov fistl (bad) xchg (bad) fimull lcall rex.WX lods popfq fildll mov insl in fwait ljmp ds rol je mull mov fwait loope test mov mov adc sahf mov ficomp in mov sub fwait lahf adc loop (bad) sub adc cwtl repz sbb (bad) test mov int addr32 sbb in pop mov sbb nopl jmp xlat (bad) insl pop fwait movslq mov sub lock out fistpl jmp outsl cld out sbb scas out stos (bad) and fsts push rex.R mov mov stc fwait lods rex.W or loope push cmp out xchg or retq mov xor cltd push in (bad) (bad) jmpq rex fwait sub in rex.RX fwait cmpsl (bad) (bad) (bad) rol cmp and int lock (bad) test fwait imul xchg mov pushq (bad) data16 ss imul (bad) jl xchg or xchg mov and pop xor xchg mov mov rcrb cs cmc fisubrl fistl (bad) rex.WRX (bad) ss push lret retq jge lret fsubrs mov rex.W stos rex.RB (bad) icebp push retq int3 (bad) jno add sub or (bad) fwait mull mov (bad) add (bad) std fcomi jmpq movabs adc clc pop stos (bad) fwait mov (bad) cmp sbb pop sbb fidivl xchg std adc sub (bad) sbbl (bad) xchg jl mov (bad) fwait pop jmp ror rorb (bad) rex.WX mov fwait rcrl cmpsl adc (bad) mov notb mov addr32 rex.WRX fwait xchg jne mov xchg pop rcrl (bad) jg adc or fistp retq movabs bswap push data16 jo imul (bad) scas jb out popfq (bad) fwait mov (bad) add rex.WR adc rex fwait push (bad) shlb cmpsl jns fwait cmp sub push pushfq fstpt xchg mov adc icebp cmc loop rex.RB fwait shr mov jae mov shr (bad) and lods jbe fwait (bad) (bad) lock or rex.WRXB rex.WR sbbl mov callq movsl adc sub pop fwait xchg jrcxz sbb jae pop xchg cmpsl xchg mov rex.RXB mov mov (bad) fdivs cltd stc mov fidivl mov gs jns cs (bad) jl add stc jno xchg mov mov sti xchg stos add cmpb icebp mov xchg (bad) mov cs fwait lret jmpq (bad) (bad) fwait mov (bad) (bad) xchg and xor fcom fwait mov add sub stos in push mov ds rex.WRB push rex.WB fldt sbb sbb lret jne sub mov rex.RXB and adc fwait (bad) (bad) movslq (bad) pop repnz rorl xor data16 (bad) jmpq sti (bad) (bad) fwait xor mov rex.RXB or and mov sub jle (bad) mov cltd rex.XB (bad) stos fstps sub (bad) and rex.WR mov bnd fldt fiadd (bad) mov push fwait outsb xor in cld sbb or sub jle sbb movsb cwtl callq data16 movabs mull in scas add popfq (bad) sbb lahf and mov ja bndstx adc fwait mov jp fwait xlat int in (bad) rex.RX sub jmp sbb (bad) enterq fwait rex.R rex.WXB jle out fwait xlat mov sbb mov jmp jrcxz sarl scas fsubs (bad) fwait mov adc sub rex.WRB rex.XB sbb (bad) sub (bad) out insl cmp retq (bad) sti (bad) sbb push pop rex.W fwait pop out leaveq (bad) mov or retq movsl stos rex.X in (bad) movabs sbb jno (bad) js movslq ds jp in sub add callq mov add (bad) sub cmp pop inc iret xchg push in (bad) (bad) fwait xlat rex.B rex.WB push leaveq (bad) cmpsb ss cmp sbb (bad) (bad) hlt in jne lret test mov fwait (bad) idivl movslq (bad) (bad) ja adc and pop loopne (bad) jrcxz pushq data16 xchg sub jb xor push (bad) pop pushq rex push mov add xchg pushq mov jb js rex.W cwtl movsb sbb jle xchg je pop jg rex.WRB outsb adc retq rex.B ss xor shll out insb test (bad) (bad) (bad) mov stos sbb pushfq mov rolb mov rex.RX cmp rol (bad) shrl xor cmpsb push stc xor cwtl nop leaveq negl (bad) (bad) pushq lea sbbb in roll jle rex.RX sub rex.W es sbb sahf mov enterq push test lahf lods (bad) test jne xor imul xchg rex.RXB stos add add fcompl out sahf push (bad) movslq add sahf insl rex.R sbb adc adc out xchg pop rex.B fs outsb mov rex.WR rex.XB sbb jg cltd mov or adc in (bad) mov rex.WRB insl out subb (bad) sti icebp jge xor (bad) (bad) rex.XB sub movabs iret add add rex.WRX jbe cmp cwtl mov push movabs mov push jrcxz (bad) (bad) xor cmp mov (bad) (bad) test sarl adc cltd mov sub cmp movabs cwtl hlt rex.WX or (bad) out (bad) mov in minps and mov and mov jae xchg loope xchg mov jo mov sbb jne xor (bad) jb cmp fisubl cs vxorps in (bad) xor xchg lahf cmc mov scas rex.WRX push es rex.WRB jo adc pop std imul xor out scas rex.W (bad) (bad) (bad) std sub xor add add or loopne jrcxz (bad) movabs lods iret cwtl std xor fstpt imul (bad) lock test sbb sbb shll movabs decb rcl shl btc sub rol btr mov test add mov jmpq movzwl movzbl neg shld mov stc jmpq movsl fdivrp rex.RX xchg leaveq xlat cld cld sub sti mov repnz movsb (bad) movabs cmpsb mov scas roll rex.W std jle callq clc (bad) lock test mov out adc rex.XB rex.RX in pushq pop cltd sub (bad) (bad) (bad) (bad) cld jo (bad) cld (bad) (bad) (bad) lcall xor cltd or nop add test pop sub in cmp es xchg enterq (bad) sub cmpsl adc adc add add or xlat rex.WRX or add or mov roll mov in push mov lods add (bad) cmp retq sbb (bad) (bad) sub rex.WXB add jmpq xchg xchg mov enterq shlb or out rex.R rex.RX cs and jmpq je (bad) (bad) push push lods push jo jl pop cmp sar fildll movsl cltd idiv lods sub idivl mov enterq xchg (bad) (bad) pop push sahf push test mov int3 add outsl pop xor adc test mov rex.RB add adc add enterq (bad) (bad) sti stos cmpsl loop (bad) (bad) (bad) decb sti cmp jmpq add or outsl (bad) stos adc sbb int packssdw movslq push (bad) push loopne mov mov rex.WX cmp stos fistpll mov push rex.WXB sbb (bad) gs mov mov mov sub sub and xchg (bad) add test xchg add (bad) callq movsbl bsr sub shr bswap xor not mov cmp setg rol add cmp cmc xor mov stc test clc bt test jmpq jmpq add bt mov cmc cmp test jmpq mov pop xchg enterq and adc sub pop sub push sbb test (bad) push pop lea adc rex.WB (bad) add int3 icebp (bad) icebp mov sub in sub xlat out cmp rcll jg std push jrcxz sahf outsb pushq mov adc jmpq add movabs test (bad) (bad) pushq cmp mov in pop xor sbb mov insb jb xchg xlat xorl sbb xchg rex.RX sbb add add js mov negb leaveq negl or stos shlb or loop (bad) jb fwait sub (bad) shrb in (bad) (bad) fmuls (bad) rex.R sbb mov sub out jg (bad) sub jmpq jae btc rex.W (bad) cmovs mov adc mov rol mov jmpq bswap movzbw lea jmpq jae add (bad) rcrb and insl rex.WRXB repnz sbb div negb (bad) rolb lods mov (bad) jmpq xor mov in mov rex.WB rex.XB rex.WXB mov xor ja retq rex.RB (bad) (bad) sti fs in or mov cmp data16 cmp fdivs sub je iret scas (bad) xchg rex.WXB rcrb xchg mov push sub scas mov sbb dec pushfq and pushq adc add add add push test mov push (bad) stos (bad) sahf rex.RB js pushq insb outsb xor outsb imul outsb retq jg cli pop lret nop mov mov mov rorl xor xor repnz in mov rex.RXB adc in mov rcrb retq jno lret stos mov (bad) jno mov lret (bad) adc in (bad) lea or mov outsb pop mov loop xchg sti sbb out pushq or lret test pop outsl sarl push xchg bsf nop push or fstl (bad) xor retq loope push popfq sbb adc mov pushfq mov xchg ficom cmp rex.WRXB (bad) pop xlat mov movabs jle rex.WR lret movabs fdivr mov icebp cli push sub loop mov add (bad) rex.WXB xor adc jle rex.RXB mov rex.WXB fsts int3 ja add mov mov xor (bad) (bad) lock sub (bad) or test stc cmc movb cmc jge test jmpq clc test jmpq lea movsbw lea lea lea pop jmpq jne jmpq ja cmp jmpq cmp cmc sub test cmp jmpq or sbb push cmp sar mov jmpq rex.WXB add (bad) add mov rex.B push xor mov rclb mov fidiv cwtl pop scas (bad) lea mov out sub jl repz repnz rex.B lea cltd out rex.RB rex.WRXB movabs loopne (bad) add add stc out fdivrp (bad) (bad) cld rex.WRXB rex.WRX push jno (bad) (bad) ljmp icebp sarl cwtl int (bad) fs repz rex.RX and fwait adc (bad) in push or rex.RXB xlat jo cmp jne pushq mov pop rex.WRB push imul mov (bad) add add sub pop xor mov pop rex.WR icebp push ja stos and rolb es xchg cmp icebp movabs fidiv movabs int (bad) cmc mov (bad) lods cmp rol add movzbw xor rcr mov bt cmp bt cmpb jmpq add clc loopne andl xor xchg rex.RX adc (bad) cmp lea jmpq or cmp lods rex.WR (bad) jo xchg pushfq or sbb mov mov mov sbb xor js jmpq mov (bad) (bad) cld (bad) test xchg pop xor add push cwtl (bad) (bad) (bad) std sahf movabs movabs rex.W mov std jg pushq xor test sub fsubl ss jbe jp or xlat mov adc rex.WRX incl scas jns rex.XB cmp pop cld (bad) jno push cld sub xchg sub rex.WRXB gs leaveq out (bad) xor sbb movabs and (bad) and (bad) rorb jle xor stc add (bad) stos (bad) mov add jl adc test (bad) cs outsl fs popfq (bad) adc and mov xor (bad) (bad) mov add (bad) or add jmpq neg test bt cmc cmc not cmc cmp cmp movzbl movsbl lea lea movzbq lea bswap je pop jmpq cmc cmc cmp jmpq mov lods mov lods callq sbb mov and enterq or mov mov movsl test jbe jbe and movsl adc cmp sbb mov idivl cld rex.WX add sub loop scas imul fidivr rex.WR cld xor sbb mov or rex.R retq mov (bad) fdivrp jae pop (bad) ja pop xchg pop adc rex.R push mov adc negl js xchg fdivr mov jrcxz (bad) or (bad) (bad) decb (bad) (bad) (bad) (bad) cmp cs rex.B retq (bad) icebp and rex.XB rex.WR rex.R jb stos retq imul test cmpsl and pushq ja loope xlat lods jrcxz jmp (bad) rorl callq (bad) faddp sbb insl leaveq mov xchg popfq (bad) or mov mov xor rex.WRB cmp test add (bad) push (bad) roll cmp sub and xchg lret xor or sub push lods cwtl pop push or xchg xchg rex.WXB fwait adc outsl push mov and mov and rex.WRB cmpsl (bad) (bad) (bad) decb jp (bad) sahf jle adc rex.W (bad) movslq fcmovu push icebp popfq out (bad) or (bad) cwtl mov in imul (bad) je sahf mov mov push (bad) or sti sub ja in jae rex.XB repnz cmp insl mov pop notl rcrl or int loope mov test clc (bad) (bad) jne mov xor (bad) notb mov jmpq je neg test shld bsr push neg mov adc setns bts mov sub lea lea jmpq imul fiaddl adc xlat andl sbb pushq outsl (bad) fdivrs shrb test retq or int mov int mov mov (bad) repnz sub movabs push insb pop stos add rex.WXB out push (bad) and mov fwait add and sti fimull mov decb jbe out out add add or rex.WRX sahf out nop push (bad) adc xor mov cmp cwtl mov and pop pop cmp (bad) xor sbb mov xor jmpq jbe movsbl mov cmp add lea xadd mov xor add clc movl shld mov clc cmp jmpq jne bswap and add bsf mov cmc cmp bt add cmp cmc movzwl btc mov jmpq clc cmp jmpq clc jmpq xchg mov jo mov sbb or movsb and (bad) imul fidivl es mov int adc rolb cs test sbb mov movabs pop (bad) rex.WX pop out (bad) in jle (bad) mov movabs scas lods mov mov mov fisttpll mov pop imul rex.X sub cld adc movabs adc addr32 or fnstenv mov add hlt jmpq cmpsl imul jno cmc movsb movb mov sub add sbbw sbb sbb rex.X push pop test (bad) (bad) adc cmp jbe sbb enterq rex.WXB sbb leaveq adc out cmp test imul rex.RXB (bad) rex.RB (bad) in gs rex.R (bad) jl mov mov pop std loopne (bad) pop stc fmull xchg pop shrl (bad) push xor in xchg mov cmpsl mov mov mov adc or (bad) mov test (bad) in or jge outsb lret (bad) push xchg jne or lods incl sub nop sbb jb cmp xchg mov icebp leaveq (bad) (bad) (bad) decb (bad) (bad) (bad) lcall in xor add out rex.B (bad) mov cltd sub xor enterq and rex.WB mov cmp pop add retq add fidivr (bad) mov and (bad) callq xchg clc xchg test pop xor stos (bad) xor mov xor ror stc xchg cmp shrl (bad) fistp push and iret outsb sub (bad) mov punpcklwd andl out (bad) hlt idivb jo or add (bad) decb fcoms (bad) xchg test (bad) jae test jg movabs add rex.WXB pop jne pop xor mov fidivr jrcxz rex.WXB (bad) mov push mov fisttp lock lock pushfq shlb push ficom mov mov (bad) movslq nop mov stos ror xlat (bad) pop cli (bad) rex.B lret lret rex.WXB in pop stc movsb (bad) or and mov cwtl in rex.WX or movabs retq js and sbb xchg push xchg imul stos (bad) and mov test rex.WXB (bad) (bad) leaveq jo js pushfq mov fdivrl fwait cmc ja mov mov add adc cmp jbe jmpq mov mov xchg gs (bad) rex.B lret jg callq and jp rol mov in mov cmp adc loope jmpq push sbb iret out xchg stc sub mov cs test xorl add shll stc scas (bad) rex.XB fwait cmp out (bad) fstps (bad) adc test repnz (bad) subb xor repnz movsl adcl mov or fwait mov jnp jle in cmp int3 jp nop (bad) sar (bad) (bad) cld movabs jg mov push int3 js es mov sbb (bad) xchg add (bad) nopl add add or cmp add xchg (bad) movsb leaveq cmp test adc (bad) adc popfq (bad) jmp sti lret rclw test retq (bad) push or mov cmp retq cmp rex.WXB xor sub and xlat std in movabs scas rex.R (bad) cmpsb sub adc or xchg notb test cli push rex.WB sub rex.WXB pop movabs sub (bad) rex.RX rex.RXB movsb iret inc lods lahf sbb rex.WX pop mov loop std repz cmp xchg xor jmpq xchg xchg out push xor mov (bad) movsb movabs (bad) (bad) sti sub (bad) (bad) incb or xchg and add rex.WRXB (bad) (bad) incl (bad) in fwait movsb leaveq stc ja xchg pushfq mov (bad) adc push cmp fucomi rex.WRX sbb clc or (bad) jnp cmpsb sbb cmp xchg mov (bad) mov cmp fnop push xor xchg rcr add mov jmpq loope adc add gs cli int sti jrcxz adc xchg sbb mov xor movabs xchg cli movabs out mov jmp xor sbb rex add std mov sbb iret imul (bad) (bad) std cmp addb rcr (bad) pop xor cmpsl repnz jge (bad) xlat js lret in rex.WRX mov sahf mov sbb lea lods add jl imul test add rex.WR mov cmp clc sbb and pop or add loop (bad) mov mul sbb in or add add cmp int3 pushq and rex.B sahf push xorl out mov cli (bad) xor test jnp and test mov sahf lret mov and insl iret outsb movabs rex.WX adc jo fnsave (bad) (bad) sti mov sbb adc (bad) (bad) (bad) nop fwait sti ja (bad) ss data16 sub cmp add add adc mov sbb lahf in jmp movabs jb leaveq scas sub push and rex.R (bad) pop or sbb mov cmp jnp sbb sbb (bad) xchg jmp jne stc sar add test mov bts shld bts sub bts bswap shrd or mov cmc clc jmpq and test test jmpq movsb repnz (bad) stos rolb js and lea rorb mov cmp (bad) callq (bad) outsl js xchg jmp imul movabs cmpsl (bad) cmovae cld pop push or fisubl add (bad) pop (bad) xlat icebp cli mov movabs (bad) xchg (bad) (bad) or fidiv (bad) lret cli (bad) jnp (bad) stc in andps xchg rex.RXB rex.WRB rex.RX mov jnp jns (bad) retq sub leaveq mov sbb outsl shrl (bad) sti cmp int (bad) (bad) (bad) (bad) (bad) (bad) push xlat xchg or (bad) cltd (bad) (bad) adc mov loop jbe mov (bad) (bad) (bad) callq loop pushfq mov cli int sbb movsb (bad) adc rex.WR out xchg mov mov jns pushq fldenv or sub es add (bad) add bsr push stc mov bt bt jmpq je bswap movzbl shl shrd push inc mov bt sub jmpq rex.W sbb cs cmp (bad) push xchg mov insl adc xchg sbb fsub adc xchg lods loop or (bad) in sub fwait rex.WX pop (bad) mov jge (bad) mov xor (bad) movabs mov push mov mov add fwait (bad) (bad) (bad) cld rex.R movsb retq (bad) (bad) (bad) (bad) (bad) repz (bad) repz mov mov retq test movabs (bad) lea leaveq sbb repnz pop (bad) adc jmpq loope retq mov xor mov or add add js fistpll mov rex.RX jg (bad) mov xchg faddl add add cmp or mov pop loop mov (bad) sbb adc add int retq sbb (bad) mov (bad) (bad) cmpsl fdivl test je add mov xor sub shr shr or mov stc or rcl add mov mov mov jmpq add cmp clc cmp jmpq je bswap lea not xchg movzwl bswap not bswap lea movsbl movzbw mov jmpq jmpq test test clc cmp jnp ja adc sub lea bsf add bsr bswap mov sar add sar mov stc stc cmc repnz jmpq not jmpq callq clc jmpq inc cmc jmpq jmpq jmpq jmpq rex.RXB rex.R xor cs insb add cmp clc xor cmc jmpq jp jnp jne cltd insb lret (bad) sub cmpsl rex.RX nop rorl adc cltd xor jp push xchg mov rex.WXB addr32 rex.RXB cmp (bad) cmp mov cltd movabs in stos rex.WRX (bad) ljmp mov adc (bad) (bad) cld rex.RB cmp in loope xchg adc xchg push sbbl js (bad) xorl (bad) (bad) (bad) incl pop mov (bad) mov push hlt movabs sti jl mov rex.XB sbb loop add (bad) cmp cli lock mov scas out ficomp add add rex.RXB rex.R rcll and mov outsb js rex.X fs movb xchg movabs lods mov rex.WB roll out jns movabs xor jb callq xchg (bad) rex.WRXB jmpq jmpq je jmpq jmpq fnsave mov cmp (bad) sub sub (bad) test movabs sub stc xchg imul in repnz movabs mov cmp movabs xchg jo push sar mov mov jb in sub movabs jbe (bad) (bad) decl xchg xchg xchg fucomp jl std rex.RX out test pushq (bad) jo mov test jge xchg mov rorb mov movslq (bad) (bad) rex.WRB xor imul cmc jbe int3 (bad) (bad) (bad) fstps movabs jmpw (bad) add test sub add mov int xor movsl loope nop (bad) btc mov cmc jmpq jmpq jmpq jmpq callq stc cmp jmpq bt mov clc jmpq enterq movabs cwtl mov (bad) mov rex.RXB fs rcrl jp ds idivl mov cmp mov rex.XB fcmovnu sbb lods jg (bad) in fdivs ja fstpt adc sub out scas scas cld mov retq xchg mov rex.WB (bad) (bad) cld fs (bad) (bad) incl fdivrl in mov (bad) or sub (bad) (bad) shlb cmp sbb movsl test int3 cmp or sub cs adc sbb (bad) sti idivb sub cmp sbb pop sub cmp ja rex scas add rex.WRXB rex sbb cltd and ss movsl ds rex.WRXB (bad) add mov rex.X ficom (bad) sldt ja jmpq lods rex.RX (bad) mov xor bswap (bad) out rex.RXB test fs adc scas adc scas or rex.WX cltd sbb movq rex.WB (bad) add jne mov or pushq mov loop push add and xchg cmp fmuls negb xchg sbb test sarl cld add add test loopne mov adc lea (bad) (bad) add add (bad) jge add shlb cmp sub movslq (bad) cs retq lea addr32 cld pushq cmp test lods rcrb xor mov rex.XB mov jmpq imul adc mov movabs sbb jae fdivrs sub hlt mov (bad) rex.WRB enterq (bad) (bad) cmpsl fisttpll and pop (bad) rex.RB fs (bad) rex.RB (bad) std in scas jmp mov int mov mov sahf (bad) or cmp fcmove (bad) movslq sti repnz cmpsb pop cmp callq jae cmp js (bad) int3 stos (bad) rex.WX cmc (bad) add add (bad) or mov (bad) orl (bad) sti lahf test (bad) es (bad) out and adc push (bad) sbb cmp out (bad) pop fimul mov mov jbe (bad) add sbb rex.WRXB sbb (bad) mov ds mov jge retq sub imul cltd push (bad) lods jns rex mov enterq addl stos and cmc (bad) fist mov shll xchg ljmp sti push out xchg gs cmp jle out xchg push shlb mov or rex.B (bad) int3 pushq icebp fs cmpsl pop fsubs loopne xlat hlt pop xchg (bad) (bad) (bad) (bad) decb rex.RXB cmpl (bad) or jmpq (bad) (bad) (bad) inc rex.WRX repnz xlat mov xchg rex.X cli pop movabs mov movslq pop sbb (bad) rcrb pop push sub or mov repnz (bad) mov mov cmp add mov sbb (bad) (bad) cmp clc mov mov xor vsubsd mov sub add insb test pop sbb sub mov mov add (bad) shlb test pushq movabs xor (bad) mov sbb (bad) pushq jns fsub (bad) rex.R xor xchg jb and out cmc (bad) push xchg xor (bad) (bad) xor and nop mov push stos (bad) push hlt mov sub push mov xchg test mov and rex.WRX es orb in mov and mov popfq (bad) (bad) (bad) sti xor xchg xor (bad) (bad) decb fnstsw (bad) rex.WRX mov (bad) (bad) (bad) decl fistpll xor push popfq fimul (bad) out loop jb test sub js jns (bad) hlt fs rex.WRX cmp rex.RB rex.RX adc movzwl shld mov jmpq jmpq jmpq (bad) or jo scas jmpq mov rex.WRXB sub jb scas sbb test mov (bad) push pop (bad) cltd stc push jo mov rex.WX rex.WX rex.WXB notb sub rex.RB rex.WXB xor sbb (bad) (bad) sti test (bad) sbb (bad) (bad) (bad) xor jo xor pushq sbb or mov jmpq jp xor sub sbb (bad) mov retq nop jrcxz out loopne mov pushq adc gs xchg mov sbb cmpsb pop jp sub rex mov mov (bad) pushq sub sbb and callq rex.WB mov movsl rex.X scas mov test (bad) and ss sub xor insl lea fimull shl stos sarb stos jle ja icebp or or sub jbe mov or popfq jle adc int out jl iret movabs or (bad) cmp (bad) xchg add retq mov mov adc add add pop jg jle push xor in enterq xchg insb cmc add sub cltd fnstsw pop (bad) loop cmpsb int sub pop pmaxub (bad) jbe leaveq cld movabs scas rorb xchg add add clc test add sar cmp sbb bt mov stc jmpq jmpq jmpq or cmpl icebp jbe cmp outsl (bad) mov pushq movsb and xor sub mul fsts lea rex.WRXB adc mov xchg xchg add jmp (bad) stos cli lret xchg rex.WRX mov sub and (bad) xor adc pop xor pushfq and mov mov cmp rex.WR repz and out pop rex.WRXB loopne in rex.X (bad) or adc mov repz (bad) mov pop or pushq cmp rex.XB and (bad) (bad) std adc pop addl add and mov rex.X jl add js bnd std addr32 fcompl push movabs leaveq and (bad) (bad) (bad) (bad) pop (bad) cltd xchg cltd rex.WX pushfq cmc sbb mov or test sub xchg xchg fdivrs int3 cmp (bad) jae (bad) (bad) (bad) (bad) mov in rcr std (bad) outsl (bad) movsl (bad) jrcxz mov jnp cmp mov es movsl cwtl mov pop stc lods sarb (bad) xor loop mov movl (bad) loopne pushq insl (bad) cmp ja jb clc cmc jmpq jmpq jne xor xadd xchg xor mov btc not stc sub sub not rcl xor dec mov bt cmc stc cmp sub stc pushq cmc stc bt cmp jmpq jmpq test std push (bad) rex.WR sti pop andb (bad) loope xchg rex.WR mov ss (bad) (bad) gs or testb mov or lahf push push sub push xor (bad) mov enterq mov outsb pop (bad) retq (bad) mov rex.WRB icebp movabs repnz nop scas cmp hlt adc push (bad) sub sub enterq jp loope in (bad) adc add push vpsubb lock xchg movsl repz cmp sub add add cwtl cmpsb cli idivb xchg test rex.W xchg jmpq mov rex.WRB mov sub xor in rex.RXB insb std scas mov rex.WX callq mov out or (bad) sbb add rex.B add cmp (bad) xor push and jl jae lret or (bad) scas rex.WRX pop or lahf rex.WR (bad) mov addb xchg adc sub or fisttp jo and (bad) (bad) add pop (bad) scas movsb adc cmp lods loop (bad) (bad) imul cli fstpt rex.RX or push in divb cmp (bad) (bad) (bad) std mov lock (bad) adc sub repnz movsl (bad) or retq outsb repz out jne add fldl lret enterq jae adc std xor xor adc callq (bad) (bad) lcall xor pop int3 mov icebp sub movabs stos xor or (bad) push (bad) rex.WRX rex.RB xchg (bad) mov (bad) pushq rex.WXB (bad) (bad) sbb mov xor rex.RXB rex.WRX pop js sbb jmpq pop add cmp rex.W (bad) xchg xor fdivs mov mov add (bad) (bad) mov cmp out cmp scas pop imul es sub fisttpll mov out adc cmp gs jne test pop cwtl lods mov roll lret mov (bad) (bad) sti sub pop out (bad) (bad) (bad) incb jb shr (bad) clc pop or or mov push push (bad) cwtl pop addl sub scas iret pop hlt scas mov addr32 (bad) (bad) jmpq cmpsl (bad) jmp (bad) mov (bad) (bad) lock mov fimull adc mov xchg mov pop (bad) out fidivrl lea sbb sub mov cmp mov or je adc movzwl clc xor mov bt clc bt clc add test test mov bt test jmpq std in rex.WR (bad) adc mov iret mov rcr (bad) (bad) leaveq cld cmp in xor rex.W mov repnz xorl jmp jo rex.RB fs cmp test push out rex.WXB rex.WRB out movslq xchg es mov pop add lret (bad) (bad) sahf (bad) rex.WRX imul out fxtract and lods (bad) sbb loope rex.WRB (bad) (bad) (bad) sti add sub cmp rex rex.R orb jae mov mov (bad) and lea adc fdivr (bad) (bad) inc (bad) push rex.WRB sbb pop pushfq mov outsb (bad) incb lea roll ds mov roll subl fimull (bad) and movsl cmp sbb (bad) cmc stc cmc test neg jmpq jmpq repnz jmpq rex rex.X push (bad) clc imul movabs jle jle sub out xchg push cmpl pop gs adc nop or shr jb fidivr addr32 out rex.R cmpsb (bad) fs jbe mov cmpsb jmp fwait (bad) rex loop (bad) mov movabs retq add add xlat add pop add xor mov roll (bad) mov rex.RX int3 or in fucomip retq sbb shrl rex.RXB movabs fnsave sbb fstpl jnp cltd (bad) outsl mov outsl or sub (bad) xor pop idiv callq movabs xor mov stc (bad) xchg pushq lods fisttpll mov mov or xor mov ja hlt rex.XB (bad) or shrb loope or mov mov rex.WXB std addr32 (bad) xor rex.WX rex.RX (bad) mov jb in lea nop and insl mov (bad) outsl rolb (bad) push xchg cmpsb rex.WXB jns es add roll sbb cmp (bad) (bad) jmpq (bad) or or repnz clc mov adc sub repnz movabs pop lahf push movabs ficoml es (bad) (bad) incb rex.WRX and icebp test lret mov in (bad) (bad) (bad) incl mov cmpsb cli jge mov mov nop add pop add imul rex.WRB jno scas mov cld movabs sub mull (bad) mov push pushq (bad) jb jo or test leaveq sub ja sub sbb (bad) scas iret stc sti jrcxz retq xor xchg pop stos pop pushfq sub xchg sub pushq decb push cmc out xchg (bad) lret mov scas push cld jnp jp (bad) testb cwtl xlat pop sbbb xchg (bad) xor sarb notl scas test rex.W (bad) test cld in gs (bad) (bad) sti lret (bad) mov cmpsl data16 xor (bad) adc adc add add (bad) outsl (bad) loop (bad) not or (bad) out rex.X repz mov jne xchg mov and (bad) and sub mov or jnp cmpsb (bad) negl jne sub mov push and movb retq (bad) jrcxz test test jmpq pop jmpq xor (bad) lock cmpsl outsb xchg rolb fist test add (bad) int and shr flds cmpsb out repnz xchg lret or or pop mov mov movsb clc push lock rex.WXB (bad) add xor or (bad) add jne (bad) fs cmpsl popfq rex.B movabs push loope cltd mov pushq out sub jne outsb (bad) add clc jmpq add rex.RB je jb movslq jae jmpq (bad) rex.WX push sti fwait lret xor xchg add movabs in sub leaveq clc mov movabs callq rcl or mov mov pop adcb rcl xchg adc je sub xor in ja movslq pop rex.B pushfq scas cmp (bad) xchg xchg sbb (bad) (bad) sti (bad) and (bad) (bad) (bad) fistpl push rex.XB xor sub (bad) sub cmp xor cmp lock lods cmpsb add (bad) xlat add xchg loopne jae jle (bad) (bad) mov xor sahf lods and add add adc lock lret (bad) xchg xchg test push cld add sub clc (bad) push add repnz add adcb callq sti sub mull fdivl sbb pop or gs jo rex.X data16 jb add mov (bad) mov xor rex.WRX xor repnz rex.RX (bad) movsb (bad) ds mov rex.WRX and movsb rex.WRXB mov jbe shrl xorb gs mov icebp fcompl (bad) xor (bad) scas movabs test loope int lret add or stc mov (bad) (bad) (bad) sti rex.RB push jne (bad) (bad) (bad) and movsb out pop add repz (bad) jb rex.XB add pop (bad) (bad) (bad) jmpq cli add sahf scas (bad) movb push outsl addl lock rex.WX mov pushfq mov lret addr32 rex.R movabs test or mov push push in sbb (bad) push (bad) lret rex.RB sub or es xlat callq rex.WRX pop cmp test mov addr32 movl outsb jae lahf hlt in movabs or jo fisubrl mov fdivl cltd cltd (bad) (bad) or (bad) rex.B fstp sub xor pop fnsave rex.RB xchg mov sub rex.X (bad) (bad) sti mov (bad) (bad) (bad) (bad) popfq xor out cmc jrcxz mov out (bad) (bad) add retq mov adc add movslq mov jno,pt data16 push push cmp std sub mov cmp or rex.WRB outsb (bad) movsb xchg cli addr32 xchg data16 mov rex.WRB jnp cmp out callq sbb sbb (bad) stos jp push sarl rex.WXB mov (bad) mov repz sbb mov jo xchg mul (bad) xchg rex.RB sub (bad) fisubl jp shrl mov cmp lock rex.XB movabs fwait out rex.RXB iret (bad) leaveq je outsb (bad) pop fsubrs or jnp movl callq cmp scas in mov mov in (bad) sub lahf jb and (bad) nop lods mov insb mov ja sbb shrb mov adc (bad) rex.WRX (bad) adc (bad) (bad) (bad) (bad) std sub addr32 add add or loope xchg (bad) rex.WX scas mov mov and pop jno cmp mov int in mov int3 mov push in sub (bad) popfq pop lmsw xor (bad) and rex.X ds fwait add mov faddl rex.W jb pop or leaveq cmc negb sbb callq imul rex.RX icebp pop xlat push (bad) ss movabs in sbb fs cltd adc mov (bad) mov movabs sbb rex.X rex.X (bad) (bad) (bad) sti fimull lret (bad) fcos (bad) (bad) decb ja mov out add add or adc rex.XB cmp loope rex.WB (bad) pop lock cs sbb jmpq sub pop fnstcw rex.RX sub insl retq pop enterq shl mov (bad) lock push or (bad) xchg xchg or rex.WR outsl rex.B adc cli sbb movsb pushq movsb mov push popfq push push mov repnz mov jmp pushq rex.XB rex.X rex.W rex.RB xor sbb sub push jbe pop (bad) mov iret xchg (bad) rex.RX or roll jle fisttp xor sbb push movabs cmp mov mov mov rex.RB cs (bad) (bad) sti stos sbb insb push (bad) (bad) (bad) decb (bad) (bad) push out mov add add js (bad) fstl xor jbe cmpsb rolb (bad) ds fucomip nop rex.R pop in retq rex.RX adc cmc clc mov xchg movslq (bad) (bad) enterq jno rex.RX and and je sar xchg (bad) movabs sbb andb shrl jb (bad) rex.WRXB imul (bad) mov out xchg and outsb mov cs mov and movabs adc mov movsl (bad) jno sub cmp insb sub push (bad) cmp jmpq sub sti cltd sub shrl cmp scas mov movabs rex.XB cs push jg sub cmpl adc (bad) adc pop cmp rex.RXB pop adc mov jle (bad) mov sar (bad) and adc xchg jo sbb sbb pop je cmp stc jmpq mov mov movsb rex.WR rex.WRB insb rex.WRXB pop fs mov ja stos push xor scas add add cmp mov mov or (bad) sbb (bad) fistpll out jmpq mov xor push test mov or cld rex.WXB sbb xchg and rex sub rex.WXB in pushfq push (bad) mov mov insb (bad) or shrl xor mov add add and (bad) cmp sub jmpq lods nop movabs icebp movslq pop rex.RXB mov rex.WRX jns jb loopne fdivrs xlat jbe (bad) movups lret gs pushq push sbb (bad) psubusb (bad) (bad) add (bad) pop jmpq stc jmpq mov xchg bswap movsbw mov not mov retq jmpq and adc rorb xor mov and pop ds pop cmp or scas std (bad) xor data16 sbb retq pop mov stos sbb fs (bad) sbb and enterq fnsave (bad) mov lock cmp cld sub adc xchg rex.WRX divb movabs pushq (bad) (bad) cld rex.WRXB orb (bad) (bad) (bad) ljmp popfq or (bad) or repz setg mov (bad) scas mov xchg mov and xchg push add add or mov adc xchg add imul (bad) stos (bad) (bad) lods xor js fwait xor in in pop repnz adc mov rex.WB push clc rol fnstenv mov pop pop in rex.RB and (bad) leaveq movabs fldcw push adc cld cltd jo jp mov mov int out (bad) test je rex.RX in pop scas sub (bad) (bad) outsl (bad) mov jl mov (bad) jno int3 (bad) pop lods hlt pop rex.WRXB add rclb cmp xchg sub (bad) (bad) (bad) cld nop fimul (bad) ljmp adc rex.WRX rex.RB es (bad) push test std jae jmpq idivl sub cmp add add rex.X rex.W (bad) pop (bad) mov cmc or pop scas inc pushfq sarb clc cwtl or outsb rex.W (bad) or sbb (bad) rex.RX push (bad) jge enterq (bad) (bad) gs mov pop mov test (bad) (bad) add or retq jmp add ds xchg decl (bad) mov jo xor callq mov sbb ss popq pop jae cmp or cs add rex.WB stc rex.X xchg je (bad) mov decl lret xlat adc (bad) (bad) sti mov test (bad) (bad) (bad) pushq (bad) pop lret (bad) in fldt in shrb cmc rex.WB cmovns mov leaveq (bad) js outsl sbb xchg rex.XB (bad) (bad) incl iret xchg mov rex.RB jns sub retq mov sbb std and sbb cli lahf (bad) (bad) enterq out rex.W sub fdivr insb es sbb retq adc sbb pushq (bad) (bad) (bad) add jg jmpq jae jmpq jmpq je ror push sbb rcl sar mov bt cmc cmp sub jmpq jmpq jmpq push rcl mov test movzbw rcr sub jmpq jno (bad) fiaddl (bad) rex.WRX add sbb mov pop cmp gs loopne xchg jmp movabs movslq movabs xchg xor movabs lahf (bad) and push or pop pop (bad) (bad) (bad) (bad) sti retq (bad) mov movabs popfq adc loopne mov in push (bad) fistp (bad) fbld (bad) enterq xor cmc or (bad) (bad) (bad) (bad) and xchg movabs rex.X xor jrcxz add (bad) retq cmp es mov pop testb sub test and hlt movabs (bad) mov jmpq lea setnp movzbw mov mov jns mov mov lea mov movsbw jmpq jmpq (bad) rex.WX ja out rex.RX incl jb (bad) sti mov mov popfq rex.XB test fnstsw cmp leaveq cwtl add fdivs mov mov retq mov rex.WR movabs rex.WRXB (bad) (bad) and pop (bad) rex.RX rex.RXB test lret push or jp (bad) shll sbb icebp xchg cmp or out rex.W (bad) (bad) lock xchg out (bad) (bad) (bad) cld (bad) icebp or leaveq (bad) (bad) (bad) pushq pop rex.WRB push mov icebp mov add js scas (bad) mov (bad) imul adc rolb repz pushq mov rcr fwait mov nop enterq (bad) add (bad) or popq mov data16 mov xchg pop movabs jg xchg cld or popfq xchg std (bad) mov rex.WB rex.WXB jge (bad) adc sub sbb icebp xchg add jno push xor and jle rex.WRXB cmp pushfq xchg jmpq rex.XB imul cmpsl test jle xchg pushq sub (bad) (bad) (bad) sti movabs jge mov pushfq int3 (bad) out rex.WR ss jmp repnz rex.WRXB test rex.WRB jmp insl (bad) cwtl rex.B jle repz cmp retq fs sti (bad) clc cld out and popfq jbe cmp (bad) or xor (bad) cmp es push xor mov and mov (bad) (bad) dec (bad) push ja mov cmc push pop clc lret (bad) nop mov xchg vpsubd add sbb mov pop push hlt xlat ja sbb mov neg mov fcoms xor rex.WXB test imul or or xor je lcall fiaddl insb mov jl nop rex.XB test imul (bad) addr32 gs mov fsubrs add (bad) jne and pop xor std mov out jl push rex.W loop mov shrl fs fistp add xchg mov leaveq rex.WXB repnz pop cmp mov fsts sbb jae xchg xor mov rex.WRX cli jge adc (bad) decb (bad) (bad) (bad) (bad) out fimul xchg push cmp jno retq jge repz movsb sbb popfq ja rex.X (bad) jno mov sub es cmp (bad) (bad) gs jp jae (bad) insb mov jl jge stc pushq jge (bad) add nop (bad) mov (bad) fsubrs adc mov jmpq movabs push xor rex.X mov or xchg jae loope sub mov callq (bad) fcmovu (bad) xor sub adc jle cli sbb xor cli (bad) mov (bad) add or cmp push sbb (bad) mov icebp xchg iret cs imul stc sti mov xchg pop (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) lcall imul sbb rex.WB add sbb rex.WRXB movsl retq xchg iret scas and (bad) push movsl leaveq imul (bad) mull in test rol stos (bad) js fsubs pop (bad) sub or and xor or std mov (bad) add stos adc xchg jmpq int mov rex.WR fisubl hlt leaveq test mov mov rex.X rex.WX xchg mov rex.RB (bad) adc out fildll lret (bad) mov fcomip jmpq jb ss movabs nop in ss stc ffreep cmp lahf ror subl push (bad) pop hlt rol (bad) pop lret js mov rex.RXB leaveq movsb (bad) jns mov rex.XB stos jmp sbb (bad) push (bad) pop in xor cmp mov out idiv (bad) (bad) decb fisttp cmp outsb (bad) fmull add add mov popfq subl or int mov cwtl sti sub repz (bad) rex.WR (bad) negl adc add movsl mov pop sti hlt movsb (bad) adc xchg movabs rex.XB add push inc bsf xchg mov sbb shl sub sub bswap bswap lea jmpq xchg jmpq jne not bsf neg mov mov or bsr sub shld dec data16 (bad) or out sahf fdivrp (bad) jmpq rol pcmpgtd mov and rol test mov movabs sbb (bad) callq lock add outsb addr32 fisttpll or sub icebp movabs mov add callq icebp pop pop adc ds pop (bad) (bad) fisttpl out rex.WRX insl or (bad) in clc sub mov movabs (bad) (bad) out (bad) (bad) (bad) sti pop add push insb (bad) (bad) (bad) (bad) xor rex.XB jl cmpsl (bad) fdivr (bad) (bad) pushq retq insb loope in movabs leaveq (bad) jp (bad) sub rex.WR xor adc pushq je (bad) or xchg pop adc mov xor (bad) retq mov sbb jae outsl insb xor cs insb add mov (bad) jmpq jmpq jmpq jne test jmpq je cmc bt cmp jmpq (bad) (bad) movsl (bad) sub (bad) faddl (bad) imul movsl rex.WXB scas movabs int pop lods rex.B (bad) mov or in in sbb insl in and rex.RX subb and shlb cltd iret leaveq test adc mov (bad) (bad) cld rex.WB in (bad) (bad) (bad) jmpq enterq xchg (bad) (bad) rex.XB shr shrl push addb cmpb in pop mov rex.WX push retq mov and in jae jrcxz std rex.WB push out sbb sub loopne jnp jle pop mov lock cmpsb add add pop xchg (bad) push lret lock pop cld test mov (bad) cmpsl stc xchg cli loope sarb in push cmp mulb pushfq mov cmp sub jnp (bad) (bad) mov jmpw xor xor bsr cmc sar cmc add not mov cmc clc test cmpb jmpq icebp add xor mov cmp out cmp jle leaveq test cli stos or ja test mov rex.WB sbb movsb shr (bad) (bad) or (bad) mov xor add push movabs icebp out mov jnp clc jne xor rex mulb jmpq cli fsubs adc mov in mov fidivr (bad) xor mov test rclb xor in pop mov lret sti cmp stos (bad) retq (bad) mov adc int3 pushq cmp insl gs (bad) (bad) inc jbe in cwtl sbb xchg (bad) rex.WRX (bad) xchg push xchg (bad) fwait enterq insl mov jnp xor pushq pop fistl sub loopne stc insl pop ds mov jmp sbb sbb push cwtl mov rex.WRB movabs repz test cmp (bad) iret add lahf (bad) add dec repz movabs scas fiaddl push (bad) mov (bad) add insl (bad) xor (bad) mov mov pop (bad) icebp pop test push retq or rex.WRX addr32 mov pop je (bad) (bad) cmp (bad) (bad) mov jge fcomps mov iret fs in orl sti fidivrl mov (bad) (bad) (bad) imul pushq mov (bad) mov xor cmp jmpq out in add and test sub (bad) cmp movsl rcl js mov cld rex.B mov lock cltd movabs outsb shll pushfq mov pushq (bad) (bad) or mov xchg mov cld lret mov xor cmp lret enterq sub and cli (bad) sub xchg xor ja sbb scas xchg (bad) (bad) jg jb xchg in movabs mov rex.WRB adcl fwait movsl lods mov sti fwait lahf imull sub jnp out xor es out pop (bad) or sbb push or andb jle (bad) cltd std cmp test xor int3 in lea retq je addr32 rex.RX xor (bad) mov sbb mov pushq cmp xor bt neg stc cmc test not clc cmp jmpq cmp jmpq jae (bad) (bad) lods (bad) jno enterq sub jge (bad) (bad) (bad) xor movabs test rex.RXB rex.XB push testb scas (bad) jo movabs popfq push and addr32 (bad) cmp cmp out rex.WRX mov cmp test (bad) jae xor (bad) jg (bad) xor cmc fidivr ds jb (bad) fdivp xchg repnz movl (bad) (bad) sti stos sbb (bad) decb incl add add or (bad) jbe rex.WXB out rex.WXB rex.B mov add ss (bad) cmp mov pop xchg movabs rorb adc mov add cli mov addr32 add (bad) (bad) mov adc test fcoms xchg pushq (bad) cli mov add pop xchg (bad) jns (bad) jno nop lret (bad) jb (bad) add insl add out js loopne pop (bad) and fistl cmp pushq pop sbb add (bad) (bad) cmpsl movabs cmpl rex.XB mov gs js lret (bad) xor add in test (bad) (bad) (bad) sti rex.WXB test mov sub pop mov retq ds cmp lods mov test callq add sub mov fs cmp and movsl int3 mov pushq rex.WXB addl pushq rex lock jp scas mov mov push mov pushq cld sub test xor jmpq not jmpq not jmpq mov mov not movabs movzbw pop retq stc stc test cmp jmpq negb (bad) (bad) mov (bad) fsubrl rol (bad) cwtl push or lea lods rorl sub pop cmp rex.R (bad) cmp add push std mov test lock xor jns pop mov jge loop cwtl (bad) adc movabs (bad) (bad) decb rex.WRB (bad) cmp (bad) (bad) (bad) std cmpsb sbb xchg add add adc pop xor addl mov add (bad) jge and rex.XB adc sbb (bad) in push cmc fbstp test sub (bad) and test mov imul enterq clc xadd sub xadd mov jmpq cmp cmc cmp jmpq jmpq jae ror sets mov sub xadd mov dec dec jmpq jmpq je bt clc test cmp add bt jmpq je cmp bt mov add push not mov jmpq push (bad) cmp test fidiv mov cld or rex.WR rex.WR rex.RX xor leaveq lods insl (bad) add cmc popfq mov rex.WB fisubr stos pslld loope xchg sti imul rex.WX adc movslq retq std (bad) rex.XB jne (bad) or cmp cmp (bad) mov (bad) rex.XB mov rex.WR test mov stos (bad) cmc clc mov scas mov (bad) sti js movabs adc sub (bad) (bad) callq mov rex.WRXB addr32 push (bad) push jnp mov jmp pop rex.R fimull jg xchg out in nop hlt xchg je outsl (bad) (bad) mov test jbe mov callq sub jle xor (bad) out or mov insl push imul mov rex.R push xor cs insb add frstor lret movabs rex.WRB rex.WRXB gs test rex.WRX mov pop in sub leaveq stc (bad) retq test push jge in in rex.WRX cs fimul xor shr (bad) xchg in rex.B sbb pop xchg xchg clc push adc insl (bad) (bad) (bad) (bad) cli test test (bad) std test data16 rex.WX fwait mov mov mov xchg sbb mov push stos (bad) rex rex.WR addr32 xchg mov fstpt (bad) lcall xchg adc (bad) xor mov popfq rex.B add mull cmp (bad) cwtl movabs (bad) rex.RB rex.WRX mov mov outsb pop jmpq jmpq rorb mov mov mov movslq and (bad) lods xlat mov xchg popfq ds or adc (bad) (bad) xchg imul adc movslq xchg addr32 int3 xor in ja out rex.X (bad) popq in ficom or popfq add out rex.W out cli orb loop jl (bad) repz pop (bad) mov fistl xor movzbl xor scas or (bad) (bad) pop test jmp rcr imull (bad) mov (bad) (bad) (bad) decb (bad) (bad) (bad) inc pop rex.WX (bad) rex.WR jb callq (bad) (bad) lret push loop fisttpll pop jbe xor js pushfq mov mov add sbb (bad) imul movabs jns push (bad) jno negb movabs sub mov in fbstp cmpps jae mov and pushq xchg push rex.WRX stc (bad) or ficoml (bad) add lods leaveq movsl xchg lret jmpq adc jns addl and sub (bad) repz (bad) xor jle retq xor cmp pop (bad) lods fs add (bad) callq rex.WX push xchg mov xchg (bad) xchg rex.WRX jno sbb test mov xchg lret repz mov (bad) (bad) (bad) sti out idivb (bad) (bad) (bad) (bad) dec insb and in nop mov rex.WRB imul rex.WR data16 nop lods ss loopne jo push (bad) xchg (bad) js add sub xor out xchg sti (bad) rex.WR rex.RX out jrcxz fimull icebp stos test sbb cmpsb jnp jmpq or add icebp (bad) ja rex.RX test add sbb (bad) (bad) lret sbb fs stos fstl scas mov (bad) (bad) testl mov loopne pop (bad) jmp (bad) ja or (bad) (bad) adc sub push mov mov icebp scas sahf jne stc mov fst (bad) (bad) pop rex.RX out movslq lock or fisub (bad) and jno movabs add xchg sar (bad) (bad) cld sbb xchg enterq (bad) (bad) clc sbb pop clc jg enterq add add js lret pop rex.WRXB fldcw iret xchg orb jmp adc (bad) push pop out negb pop cmp fcmovb push or movabs imul notl adc jae (bad) popfq mov jno rex.RX rex.WRX mov addr32 xorb (bad) add sbb (bad) shl sahf mov sub popfq mov cmp rolb pop jle cs stc cmp cwtl rex.RXB iret add jbe mov fldenv retq cmp lcall mov and lea cmp loopne es test (bad) cld pop pushfq divl (bad) (bad) (bad) pushq mov rclb sti out (bad) push sbbb mov movsl movslq rex.WRX pop add rex.RX iret mov (bad) rex.WRX cwtl inc cmpsb cmpsb xchg imulb movabs jrcxz mov cwtl int xor (bad) out nop retq (bad) mov rex.WX xchg jge outsb and iret mov (bad) xor and (bad) mov addb xchg fidivrl mov jb (bad) movabs (bad) icebp data16 or push cmp jbe (bad) scas add mov push or (bad) jle test in (bad) retq movslq rex.WRB pop push rex.WRX push rex.XB lods jg scas fidivl insb pop movabs in mov (bad) outsb cmp fdivrs xor xchg (bad) mov cmp movsb lods jnp adc loope push pop lret int3 js mov (bad) (bad) (bad) sti outsb out ds movabs rex.WRXB xchg push rex.WRX pop mov jmpq cli push sbb add es outsl pushq xor xchg rex.WXB rex.WRX in movabs add cli pop fcoms xor fdivl cmp test jae hlt lods mov jp and mov mov rcr mov jmpq jmpq jmpq jmpq imul (bad) jo mov add adc clc (bad) mov rex.R (bad) mov lret (bad) in xor mov sub push push or rex.WRXB adc pop push out cmp xchg push cmpl retq jmp leaveq lods out out gs sub rex.XB test fiaddl adc popfq ds mov mov pop test (bad) cld (bad) int3 jbe test (bad) (bad) decl imul and sarl sub rex.XB xor sub rex.RB add add or in fwait add (bad) repz stos (bad) (bad) insb es jnp and sbb rex.R jbe,pn retq cmpsl (bad) in lock (bad) push movabs movabs sbb mov (bad) or cmpsl xlat mov (bad) (bad) xor sub scas fwait or (bad) out es test fnop sub je (bad) (bad) (bad) lret int out movabs xor xchg je push rex (bad) rex.WRXB movsb or or pop sbb fmull pop and in mov adc mov jae push and (bad) (bad) decb cmp xchg cli in enterq stos ja cmp mov mov insb jle jg in rex.RX jo (bad) rex.WX testl pushq fcoms (bad) (bad) (bad) inc pop rex.XB in cmp pushq callq (bad) rep lret mov or addr32 pop rex.XB retq pushfq fs in fdivrl (bad) retq mov jne andl mov es jbe iret push cmp push std stos xor xchg ficomp or xchg ficom hlt movsl (bad) outsb pop jo xchg or push pop lods rex.RX adc and lea jrcxz pushq in (bad) rex adc add push mov mov and add es in xchg (bad) test mov rex.WRXB gs imull push (bad) (bad) (bad) (bad) cld or in adc jl outsl lret insb push or pop mov jno add add imul pop adc xchg outsb sbb lahf (bad) mov xchg (bad) cmpsb (bad) jno and fbstp imul (bad) rex.WRB sub std adc mov jbe addb sub or fmul or movabs retq in vmovupd movabs rex.WR (bad) (bad) ljmp shr jrcxz cmp (bad) xor movabs sbb outsl rex.WB xchg sub (bad) xchg jrcxz stos rex.RB repz in movsb fxch adc mov sbb add xor (bad) (bad) cld rex.WXB mov (bad) (bad) (bad) ljmp rex.XB loopne pop (bad) outsl rex.XB sub in or shrb adc (bad) xchg add (bad) mov mov push stos movsb adc jo pop movabs nop cmp push icebp (bad) (bad) int add add mov movabs push rex.WR sbb stos jb rex.RB mov mov xchg jl scas lret iret pop fldcw add mov mov js xor je pop mov jno retq and cmp mov jmpq rex rex.WRX mov cld pop adc mov int fdivr push add mov sti rex.WRB adc fucomip fwait mov rex.RXB scas icebp xor cmp icebp je (bad) (bad) cld push clc jae,pn (bad) (bad) (bad) ljmp insl cmpsb jmpq clc outsl lahf repnz mov rex.RX mov and (bad) sti lret sbbb jb (bad) mov cli out rex.RB or xor (bad) in add push pop cmc enterq push xor movabs in xchg sbb ss push sbb or movabs movsb outsb mov stos (bad) (bad) iret std xchg push test xchg outsb rex.RB mov enterq repnz jns cltd test (bad) xor mov mov (bad) mov in loop movsb push mov xchg movq sbb xor add (bad) hlt cmpsb (bad) cmc lock sub pushfq mov rex.WR rex.W lcall (bad) sbb in rex.WXB ss push (bad) (bad) (bad) sti icebp rex.WXB (bad) dec mov (bad) rex.RXB in add add lods mov test cs cmp outsb lods adc mov in pop sub callq adc cmp mov xchg sbbl pop (bad) stc push (bad) and sub jo sbb stos and mov and in xchg xchg rex.RX mov negb cmpsb test mov faddl or out mov mov xor (bad) cmpsb and jge add repz pushfq rex.RX adc and jmpq cmp jle push rex.WXB and (bad) rex icebp pushfq cli sub (bad) (bad) (bad) (bad) cmp and jne (bad) (bad) std push mov add add cltd cmp mov movabs mov (bad) jae jae int test rex.R int3 pop cmp sti outsb sub jae (bad) jbe sahf fisubr mov jrcxz sbb (bad) mov repnz jg stos cltd mov pop rex.WRB jp xchg retq mov cld adc add movsl cmp add test add pushq jmpq jmpq cs clc in sbb shlb xchg ds rex.WX or pop pop lahf sbb mov (bad) mov pop or pop xchg mov rex.XB sahf (bad) jae cltd fbstp insl lret pop xor jbe lods lods mov out pushq mov (bad) jl callq int3 (bad) sahf cmpsl es or jl (bad) mov frstor rorb xorl ds lock sub std mov (bad) (bad) (bad) cld sbb loopne sbb stc (bad) jno mov sbb rex.WRB ds jns fwait ds (bad) cwtl add add jns rex.RX repz movsl leaveq or (bad) xor jge or (bad) repnz movsb leaveq sbb cmc xchg mov xor out xchg sarb jae pop cmp repz (bad) mov (bad) cwtl fstpt stc bt test jmpq clc sub stc cmc cmp cmp jmpq jmpq add cmc cmp test jmpq jmpq icebp rorb jmp loopne rex.WB and cmpsl (bad) sub fmuls sti or push rex.X rex.XB popfq retq or repz rex.RXB mov (bad) cmpsb callq movsl shrl push or movsl rcrb (bad) jne rex cmp insb imul jle sbb xor mov (bad) out nop xchg loope rex.RB rex.WX cmp lret sar (bad) (bad) std or mov std mov (bad) cmp movsb jle xor sub out ds and jo (bad) jb callq or adc rex.WR xorl pushq sarb outsb pushq xor (bad) outsl or rex.WXB rex.R rex.WRXB add movabs sahf fnstenv leaveq mov (bad) mov rolb bnd sub (bad) test fistpl cmp mov jge sub push jmpq jne bt clc movb jmpq xchg jmpq callq jl mov movsbq mov movsbw mov mov mov not movzbw pop xchg mov movsbw movsbw mov jmpq jmpq adc jmpq cmpb jmpq jmpq mov sbb fadds retq sbb js adc fwait push sbb or movabs hlt imul add rcrl or retq jle (bad) rex.WRX sub mov pop nop jo rex.WXB popfq lret retq (bad) int3 mov rex.WRX mov (bad) (bad) cld push fmul jns (bad) (bad) (bad) pushq xor rex.WRB cmpsb mov in add add cmp repnz pop sub stc mov mov or xchg fiadd mov std push cmp (bad) shlb movsb mov out pushfq shl (bad) cmpsb xchg movabs test mov sub gs mov jge and shlb fstpt loop add btr xor sbb mov test jmpq or xchg rex.R repnz or mov (bad) jo mov fcmovnbe adc jmp mov (bad) fild gs test jg rex.WX lahf add popfq test shlb movabs mov pop ss mov (bad) fidiv push rex.WXB imul retq (bad) lods (bad) (bad) and imul (bad) (bad) (bad) cld push stc (bad) or xor mov loope fmul cld (bad) cmp or rolb callq out rex.WB sub xor pop movabs sbb add add lods add stc mov sub lahf scas xor jne lods rex.RX mov xchg mov stos push std cmp scas mov jl and jno lar (bad) (bad) imul sbb sbb jmpq bts neg sub mov jmpq (bad) jb addr32 (bad) fisttpll lea leaveq (bad) sub adc sbb loop or scas rex.WRX enterq (bad) outsl and cmp retq gs test rex.R nop es sub (bad) nop cmp xchg rex.WRX outsl cmp jae movabs (bad) (bad) stc std xchg rex.RX push rex.XB pop leaveq data16 cs adc gs xchg int std xchg mov xchg add (bad) (bad) cld (bad) (bad) cltd cltd es (bad) (bad) (bad) in pop jne pushfq shll cmp xor out cld movabs push sub test or pop sub cmpsb (bad) (bad) in rcr (bad) mov fisubl push es mov fdivrs adc jno sub andl xor mov jg (bad) rex.WB rex.WRX and (bad) jnp sti sbb enterq jb rex adc jrcxz test addr32 (bad) mov adc mov add in out test mov (bad) fs mov xor jle lahf cltd (bad) int3 rex.XB lock lock (bad) (bad) decb cwtl rolb pop movabs add std movsb div adc rex.R imul (bad) xor xchg sbb repz (bad) mov adc sbb cmp retq fistpll movabs mov xorb mov jmpq je jmpq lea bswap mov bswap mov movsbw movsbw mov mov lea movzbw jmpq mov mov setno stc xor mov test clc cmp cmc cmp jmpq ja jmpq jmpq jmpq jmpq lods xchg or movsb mov fistpl or jno lea jp pop jge pop push cmp jno cmp cmp add popq loop test sub out or xchg xchg (bad) (bad) mov push loop imul movsl or mov in cmpsb xchg xor pop (bad) movabs movabs mov in fcos (bad) (bad) sti stos cwtl (bad) add in mov in mov (bad) (bad) (bad) decb (bad) push test add add outsb sub pop (bad) cmp jle xlat retq addr32 sbb out movabs out fwait divl retq fwait negl (bad) xor cmpsb (bad) leaveq test rex.WR mov sti jne mov int3 rex.WB rex.WRXB rex.W fidivr sub (bad) sbb es retq (bad) ljmp in (bad) mov (bad) fsubrs fisttpll (bad) fisttpl cmc stc cmpb jmpq jb jmpq callq test test cmp jmpq clc xor jmpq jne sbb sbb sub add not mov adc add rol shr rcr mov jmpq je cmp add lea shr bswap btr mov clc add jmpq push push push rex.WB cs rex.WR rex.WR fwait add add (bad) add rex.X push jne stc mov (bad) lock lea retq lock loop rex out adc in retq add mov adc (bad) (bad) insb pop adc xchg rex.WB adc cld and shrb cmp (bad) sub (bad) push es jnp rex.RX jnp scas (bad) cs mov sub xchg adc (bad) cwtl rex.XB cmpsb fs callq (bad) (bad) sti out xor cli (bad) (bad) (bad) inc cmp or adc add add rex.RB rex.WX repnz and adc (bad) incb pushq mov leaveq outsb mov rex.WRXB (bad) adc adc cmpsl adc movabs (bad) movslq enterq xchg scas pop repnz hlt add insb retq scas sti decl test cmp add add cmp cmp jmpq jmpq movzbl bswap lea jmpq adc adc frstor ja scas add jp fst adc outsb xchg insb xchg add xchg mov cld insl rex.B hlt xorl jge mov sub rex.WXB cmp fidivrl (bad) mov ja (bad) push xchg mov hlt mov xor imul pushfq mov leaveq mov pop cmp rex.WR (bad) (bad) sti lods and mov decb mov sbb pushq push jl add add jl and insl pop or mov xchg rex.WRB hlt fbld in rex.X sahf stc fisttp push lock retq xchg mov rol fbstp (bad) retq jge cmp orl xchg movslq adc shr fstpt enterq fsubs test mov jne sar jmp (bad) fnstenv rex.RB sbb push nop mov pop push movabs test popfq je in out sub je movabs adc pop pop sbbl xor sti retq xlat out mov popfq pop mov or xlat icebp stos jrcxz jmp jp cmp divb outsl iret sub (bad) decb in pushq (bad) fdivrs loop rex.RB xchg rex.W (bad) (bad) dec ss xchg rex.XB imul leaveq sahf cmp or adc std scas add mov (bad) sub in std repz mov lahf mov sti rex.WRXB jp and sbb clc cmp add jb je clc add jmpq rex.RXB rex.WX and movsl adc xchg mov enterq in retq orl mov (bad) jne push adc xchg rex.WRXB retq rorb push cmpsb mov in pop adc iret sub rex.RXB shll cltd addr32 jb mov scas xor imul (bad) (bad) (bad) cli (bad) xor test (bad) (bad) std scas stos pop jle xchg xor sbb retq leaveq pushq sbb in outsb adc jge (bad) (bad) mov mov push mov movslq pushq cwtl stos cmp cli ja gs sub (bad) pop or rex.WRX (bad) (bad) callq jle icebp sti movabs jb popfq mov (bad) push rex.B rex.WXB addr32 addr32 sahf sti out mov sub sbb pop (bad) addr32 rex.B adc mov rex.WR pushq push or rex xchg cli mov xchg jae jb xor fs insb add (bad) fnsetpm(287 jmpq jmpq jne btr rcl shrd bsf mov test clc jmpq (bad) (bad) (bad) xchg rex.RX popfq fildl jp sub cmp cmp fcomi icebp cmp mov jmp sbb mov stos push pop pop jle sarl ss rex.R shrb rex.WR or adc iret fcoml imul lret sub cld xchg push xchg adc sbb repz movabs adc mov imul mov js fwait addr32 and add (bad) test (bad) ss sub decl cmc out add add xor (bad) lods xchg cmp (bad) xor pop (bad) adc fstpt push rex.WXB (bad) lock or lock callq js (bad) jae notb ja mov sub mov xchg add clc jmpq sarb mov jmp scas push scas rex.RXB rex.WB xchg mov (bad) mov add sub (bad) xchg movsl shll or lahf cs xlat jo ss mov lods mov sti cmc mov (bad) jae rex.RXB stc (bad) xor rex.X retq test repnz and (bad) or cmp data16 in iret (bad) (bad) (bad) sti jmp (bad) (bad) (bad) (bad) (bad) lahf xor cmp add cmp or rex.X cmp (bad) stos xor nop (bad) lock ja push cmp test (bad) and (bad) shrb mov (bad) xchg mov sbb loopne mov pushq add decl test (bad) incl leaveq bsr mov bt cmc sub jmpq and mov jae insl popfq (bad) mov lods and mov imul rex imul iret adc rex.WXB jbe rex.WRB jg or rcll push repz xchg mov rex.WRB shl or rex.WX rex.X js add cli pop iret sahf hlt movsb fidivl (bad) or xchg cld pushq fwait (bad) mov push (bad) rex.R xor jge push mov adc (bad) sbb movabs xorl fwait push mov jns imul sbb mov mov mov repnz ja rex.WRXB iret outsb shlb mov jrcxz xor pop mov (bad) (bad) jecxz cli fldl cmp or outsl xchg test push rol and sarb rex.RX idiv xchg test xor sarl out (bad) stos std loopne or rorl cld cltd xchg rex.RX cwtl and mov jae cmp je ja jmpq jne neg mov ror rcr mov cmp adc stc movsbw sub xor shld mov cmc cmc test bt sub test cmc cmc pushq jo stc cmp jmpq sub rex.WB in (bad) outsb jno and fimul out (bad) rex.XB ds mov clc movabs (bad) out and lret jo (bad) es fnsave mov rex.X rex.B jmpq ds sub rorl add stos movsb stos cmp jrcxz (bad) (bad) (bad) sti movabs jg pop cmp jmp hlt (bad) cmp sbb rex.W mov push (bad) mov roll jno pop cmpb sbb mov fs add jmpq popfq int mov fild add data16 ja (bad) lret and lret rex.R std (bad) or xchg add (bad) (bad) iret jge pushq ss mov gs cmpsl test lret (bad) pushq jp gs outsl add repz sbb rol sbb xor xchg outsl xchg rex.WX (bad) fisub jle pushq adc or movabs insl iret mov in xchg imul mov cmpsl mov cmp js stos pop sbb or hlt out mov lea retq (bad) loope xor sub leaveq (bad) sarl add (bad) (bad) (bad) sti insl jg or (bad) (bad) (bad) (bad) sbb out (bad) mov jns adc (bad) (bad) (bad) lcall (bad) pop or push mov xlat sub jne (bad) fmuls (bad) movabs (bad) (bad) (bad) repz fbstp sbb retq or stc int3 mov mov jne mov add or orl lcall mov xchg mov add push adc (bad) (bad) rex.WRX xlat insb mov and (bad) pushq lret test (bad) fsubl jbe (bad) sar xlat in shll (bad) rex.WX (bad) mov sbb pop cmpsb iret and fcoms rex.R movabs (bad) (bad) cli mov (bad) in (bad) (bad) (bad) std popq xchg (bad) mov push cmc je rol pushq mov rex.RB add out addr32 xor fsts mov mov push es in xchg cmp cmpb jmpq popfq sbb mov pop (bad) test mov scas (bad) hlt int3 movsl rol xor rex.WX sbb cmp pushfq push test adc data16 (bad) (bad) xchg mov pop lods andl jl sbb ja jmpq sbb mov icebp mov in (bad) rex.WXB sti int3 mov lret add fsub (bad) test insl (bad) or lret leaveq notl add xchg sarb (bad) (bad) (bad) decb icebp in mov and mov xchg xor adc jp rex.WX es insb stc jp insb loop rex.RXB jmp (bad) (bad) (bad) std movslq (bad) (bad) clc mov std cwtl mov or ds xchg int3 add pushq orl rex.R rex.RXB rex.X adc negl xchg test sub imul push out and push mov pop mov lret psubusb push rex.XB in in push and retq movabs or mov sbb xor jge loopne jg (bad) xor mov xchg or cld (bad) adc jg xchg test xor notb test gs rex.W (bad) int3 lretq (bad) push adc (bad) fdivrp or cmc lods (bad) jmpq fcoml sahf mov (bad) push mov decb (bad) (bad) (bad) inc rex.WRX mov in insl adc jmp out xchg xchg test jl jl (bad) or adc jb cmp lods (bad) sbb (bad) (bad) mov jo jg cmp es jnp (bad) rex.R and sarl mov vprotq (bad) retq cltd sti callq rex.RX rcrb (bad) jbe rex.WB ja (bad) (bad) xchg sub out fidivl mov push (bad) and sahf scas adc sub xchg jb mov and xchg fistp rex.X int mov out xchg adcb clc out fistl pop and cmpsl (bad) scas stos sub rex.WRXB bnd sbb add js cmp xchg pop jae (bad) or es xchg test (bad) (bad) (bad) sti fimull jbe (bad) (bad) (bad) decb test lea or (bad) push in jmpq xor sub stos add rex.X repz pop clc xor orl push ss jno and (bad) rex.X xchg (bad) cmp mov nop movsl mov or add (bad) movsb clc cmpsl and adc decl lea fadd div callq or xor loop (bad) jg rex.WRX (bad) pop jrcxz insb hlt rex.WB pushq movabs mov sbb test push rex.WX int (bad) mov int3 mov je (bad) (bad) (bad) std stos or rex rex.WRX or cmp (bad) mov out push test mov repz jo mov mov jle rex.RX (bad) (bad) ljmp pop pop mov rolb adc mov push cmp loop mov in mov fcmovb repz (bad) xchg nop in pop sbb sbb fidiv gs (bad) jmpq not jmpq bt bt and jmpq (bad) insl and shrb jle rex.RB gs adcl pop rex fisttpll testl in mov fdivr test xor idivb int or (bad) xchg mov (bad) stc imul or push cmp add imul fcmovb cld icebp fisubl mov in test callq lret sarl js rex.WRXB push loope movabs (bad) (bad) mov (bad) (bad) (bad) cld and xor (bad) std mov jae mov add mov mov jp ja fdivs rex.WRX callq mov (bad) rorl mov (bad) add add nop mov or rex.WRXB pop adc ja sub xchg or rep psubq cwtl pop (bad) add sub (bad) ja mov mov pushfq push rex.WRX rex.W ss mov push cmpb push rex.WRXB pop sbb fcmovbe mov rcl add mov (bad) (bad) (bad) (bad) std push fldenv push jmp adc add sbb add (bad) (bad) std rex.X (bad) (bad) callq in movslq xchg lods mov rex.WRXB fimull or loop push fimul pop xor vcvttpd2dqy fmul imul (bad) jl xlat (bad) lock sub (bad) lock (bad) js mov mov gs (bad) sbb or repz stc push sti sbb lods rcrl xlat rex.X lea js rex.R (bad) xor pop stc (bad) scas sbb cli mov cmp (bad) mov pop rex or jl (bad) shr adc (bad) jle mov std mov mov adc cwtl push xchg (bad) mov int3 mov out or outsl xchg popfq xchg movsl (bad) (bad) (bad) sti sub sar (bad) (bad) decb stos pop mov rex.WXB fs (bad) sub rex.W mov lea jb in rclb lret nop (bad) pop cmp (bad) (bad) mov in in icebp out mov add pop leaveq jns xchg imul add movabs rcl mov xlat mov mov shlb (bad) fimull jo jg jmpq or xchg outsl xchg test js movabs (bad) int movabs out xchg (bad) push rex.RX xchg mov push out jo and lea cmp mov sub movslq (bad) addr32 stc rex.WXB adc pushq and push adcb fs clc jb cltd (bad) sbb int3 (bad) cs xchg rex.WR fwait and (bad) movabs (bad) cld add (bad) (bad) (bad) loope pop xlat loope (bad) pop rex.WR add (bad) adc adc rcr mov cmp in repz out ficom jb mov and negb ja fild jle int3 add scas push cli nop mov mulb sbb fstpt movabs out sub add lret pushfq (bad) cs adc xchg lock retq loope loope sub (bad) mov loopne fs xchg mov mov fmull ss jae pushq movabs in or ror xor rex.XB fwait xchg enterq neg rclb in rex movslq and cli stc int mov (bad) (bad) (bad) std xlat rex.X jp (bad) addr32 (bad) movslq int sbb xchg cmp pop cmp adc or rex.WX (bad) (bad) je (bad) (bad) (bad) push test xchg rex fisubr pop stos movslq (bad) xchg cmc push or je (bad) xchg clc adc imulb retq jrcxz mov xchg (bad) out (bad) cmp rcrb pop adc mov xchg (bad) fnstsw sub xor add out fisttpl add add je outsl fs rex.WB outsw jb (bad) je outsl outsb add sbbb ljmp (bad) add mov je lret mov jbe cmp mov xchg pop mov (bad) bnd push (bad) jmpq and test mov movsl adc jo add jo and jno xchg (bad) cmp test movslq movabs cltd and cmp gs cmpsb cld sahf out jmpq out lock mov repnz (bad) (bad) cld add (bad) (bad) (bad) ficom xor enterq gs or add addr32 (bad) mov cmc pushq pushfq xchg idivl sarl leaveq add nop test out add jmp imul and imul xchg mov xchg pop outsl (bad) loopne rex.WRB jmpq jne (bad) cmc neg mov sar sbb neg mov jmpq adc cltd faddl pop sub rex.WXB rex.RB rex.RXB (bad) jae sub sbb retq xchg rex.WXB sbb jg (bad) cmp xacquire (bad) andb jp,pn mov mov retq hlt outsb subl add push addr32 jg (bad) (bad) (bad) cld outsl jge mov decl test test movabs (bad) rex scas mov test lret xchg xchg lock (bad) test sti add add sub lock (bad) leaveq pop adc cltd rex.WR cmpb xor rcr (bad) int loopne pop adc mull test enterq (bad) jrcxz xor jbe sarl sub mov or xchg mov cwtl loopne hlt rex.WRXB jb cmc test test cmc cmpb jmpq (bad) rex.R sub xor cmp xchg retq (bad) retq and add cli bswap xchg push addb movabs test push or rex.WRXB loop sbb xchg (bad) push fwait shrb fs orb rex.WRXB data16 (bad) rex.WRX ja rex.WRX rclb cli cmc mov lods adc shrl lahf cmpsb sbb pushfq mov xchg (bad) (bad) sub fcom (bad) outsl (bad) (bad) cmpsb cwtl scas sub and test (bad) (bad) (bad) jmpq scas sbb loopne mov xchg movabs (bad) out rex.WX cltd scas xchg (bad) pop cmp lret (bad) (bad) pushq vpshufd and outsl (bad) rex.X mov hlt mov cltd popfq mov push rex.WXB rex.RB rex.WRX rex.RB xor cs insb add xchg cld (bad) jmpq xchg add pushq pop cmp mov (bad) cmp xlat fisubr ficompl scas (bad) and loopne cli add xchg pop (bad) cmp cwtl (bad) addr32 mov fstpt sub jge or jrcxz (bad) test cmp cmpsl cli mov stos sti jno and xchg imul fcoms cmp mov (bad) pop std repnz mov (bad) (bad) (bad) sti jle imul (bad) (bad) (bad) (bad) pop or rex.RX sbb movsl sbb (bad) xchg xchg and mov mov and mov pop and repnz pushq lcall stos test jmpq cwtl xchg jmpq (bad) (bad) fnstcw sbb rep lea pop jmpq jmpq mov xchg rex.WR popfq (bad) (bad) cmp (bad) fistpll mov add roll jo rex.WR rex.X rex rex.W (bad) sahf and stc lock movabs cli icebp fdivr leaveq out mov xchg (bad) mov movabs push mov in sub xchg mov (bad) (bad) (bad) (bad) sti add rex.WB std loope (bad) test jae mov stos cmpsb repz or idivb mov pop adc and lret std pushq adc sbb push or repnz (bad) (bad) (bad) fistl rex.WR lret rex.WR and cmpsl fwait callq push (bad) (bad) (bad) retq mov jbe add adc jo jp je mov or push ds mov pushfq and sub add xchg or xchg add mov jb push xchg mov pop cmp fidivl mov (bad) (bad) push sbb sub cld lock jns subl adc and and mov mov (bad) mov xchg cmpsb adc or out cs mov scas and cltd add repz or cmpsl mov pushq es push lock cmpl or push (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp sbb mov xor stc adc rex.WRXB cmp add in stc insl cmp (bad) jl repnz sbb sbbl (bad) mov lret imul (bad) mov cmp jl (bad) cmp add and and pop mov popfq (bad) cmpsl clc push jmpq jns and (bad) je rex.WXB rex.WX xor retq (bad) adc xlat test or sub rex.B cmp stos cmpsb fstpl sub adc not jae mov (bad) rex.B out sub retq jmp popfq cmpsl push xor (bad) mov lock xor add retq (bad) loopne cmp in mov ss loopne (bad) cmp movabs (bad) rex.WB es je mov rex.RB rolb std sub rclb add add or pop rex.RXB mov pop cmp rex.B in xlat mov sbb imul mov callq shr (bad) sub jmp shrd shld mov jmpq jmpq mov adc fwait add mov adc scas adc scas std jae sub nop mulb movsl fisttpll or cmp movabs notl lahf push push lods rex.RB sbb jl xor (bad) mov test (bad) movabs lahf mov jg rol out rex.RX jbe fistl data16 (bad) (bad) sti fwait (bad) pop xor (bad) (bad) (bad) (bad) jns (bad) mov rex.WRX push (bad) insl stc int3 (bad) (bad) (bad) (bad) stc cmp rex.R jae scas mov cmp cmp (bad) mov fwait mov hlt jmpq mov cmp (bad) rex.WRXB xchg cmp movsl lret stos out subb pop (bad) xor add in rcrb add mov sarl mov (bad) xor or hlt (bad) insl rex.B (bad) xlat outsb xchg lret outsb rex.RXB callq add pushq jno (bad) mov (bad) jno lock rex.XB cmc sar mov addr32 adcb (bad) (bad) (bad) sti lods adc push insb (bad) (bad) (bad) decb xor push test fisttpll cmp fidivr popfq loop rex.WR jge mov (bad) stc (bad) rex.WR lahf mov push rclb (bad) jne rex.WRX mov push add add jnp jg sti imul (bad) sub xchg (bad) jne or cmp push je in in in loopne xor fnstenv xor jne xor iret outsb roll (bad) push retq mov or (bad) and andl rol data16 testl cmovs shl test rol mov stc not rcr sub mov cmp xor test stc repnz jmpq jne adc mov rcr cmc sub and sub movsbw clc rol mov bt stc test bt sub jmpq jnp (bad) add lret mov fild pop jg stos push movabs clc or push adc add movslq fmuls jge div clc xchg pop lock adc rex.WB xchg movslq add ds hlt xor pop test mov js lahf (bad) lock rex incb rex.WR xchg and icebp enterq mov jne xor callq (bad) decb (bad) (bad) (bad) inc pop sbb pop adc mov std leaveq pop roll (bad) test out ss sub cmp insl (bad) xchg jbe jg in rex.WRB pop fs shrd scas mov (bad) (bad) lods pop pop jmpq add out ficompl (bad) and (bad) mov movabs imul test shlb movl pop nop sbb (bad) pop jle xchg and add (bad) cmp movabs (bad) js fistpll mov imul rex.WXB rex.WX in cmc or (bad) push std movabs movabs (bad) add (bad) std rclb int loope xchg jns and jrcxz jb rex.X rex.WRB push sahf jrcxz mov clc rex.RB ror cltd adc out cmp outsb (bad) jns sbb lret (bad) (bad) (bad) jmpq jle mov (bad) rorl (bad) add int xor or mov sbb or jnp movslq jge retq test sahf mov sub (bad) cmpsl sarl movabs add (bad) (bad) enterq nop cmp je scas (bad) sbb mov int3 faddl rex.B xor jle movsl sbb int pop es or sbb pop punpcklwd xchg or test push (bad) mov pop jp push cmp test sub (bad) pop int3 lahf and out retq scas (bad) cmp (bad) retq adc adc (bad) (bad) (bad) decb jae pushq xchg rex.RXB push sbb adc (bad) test data16 sbb cmc test or movabs andb mov (bad) (bad) (bad) xchg ljmp movabs fidiv fwait int jrcxz jae testb cltd add test and rex.RXB (bad) in rex.RB cmpsb (bad) mov callq xlat mov (bad) loope iret rex.RX rex.WR (bad) stos int fidiv ds movabs rex.WRX rex.X test xchg mov cld movabs movabs mov mov (bad) or int add jg xchg sbb movsl mov (bad) iret cltd test icebp in (bad) stos lret enterq push (bad) (bad) (bad) decb adc (bad) movabs scas (bad) add sub sbb xchg sbb lret or (bad) lret cld push xchg int cmc icebp js xor jle,pt xchg in xchg movabs mov xor mov test (bad) sti (bad) cmp cmc sub jmpq jae inc mov add jmpq bt test clc cmp jmpq adc (bad) (bad) (bad) (bad) add leaveq imul (bad) hlt and pushq mov jnp insl mov rex.B adc jae xor sbb lods (bad) mov xor fmull mov lods (bad) jge (bad) xor sbb (bad) push rcrl out (bad) stc sub adc ja clc int test mov outsb rex.WX (bad) (bad) (bad) sti or or std out ss std icebp (bad) (bad) mov fwait retq sbb outsb (bad) test jrcxz and sarl in (bad) (bad) (bad) (bad) decl cmp rex.RB test pop sbb sbb sub mull (bad) xor lea jmp repz rex.WXB (bad) or xor jp and (bad) mov movsb rclb jmpq scas xchg cmpl in and rex.WR xor in cmpsb (bad) test mov cmc orl outsb jbe cltd sbb enterq (bad) xlat xor notl (bad) hlt or mov rcrb mov out rex.WX movsl (bad) or js rex.RX xor (bad) cmp test cmp jmpq mov jrcxz or push sti in (bad) xor push out cmp (bad) (bad) (bad) std or xor (bad) std mov (bad) loopne pop (bad) ja or (bad) sub rolb add add jne sub cld (bad) rex.WRB fimul ss neg mov lahf add stc push (bad) rex push fisttpll imul mov add pop push out subl pop mov subl stos ds test rex.X movb sbb jmpq jmpq jmpq cmp add lock sub (bad) xor (bad) loopne repnz rex.RX mov sub lret or (bad) loope mov repz cli fidiv sub pop cld out orb rex.RX xor rex.XB fnsave rolb cmc (bad) (bad) movabs ficom mov mov mov mov hlt cmpb cli movsb fldenv xchg lea push rex.WR xor or nop (bad) (bad) (bad) cld movsb loopne cmp push ja movabs (bad) push mov rex.X movsl cmc add add add or jmp cmp mov in or jmp in rex.XB mov addr32 retq in sbb rex.RB lret cmpsb loop mull test (bad) decl andl add mov stc clc mov cmc clc neg mov and cmc shld mov clc sub cmc test test repnz jmpq jbe pushq jmpq jmpq jne jmpq cmp jmpq mov sbb add neg sbb mov test repnz jmpq (bad) pushfq sbb retq rex.WXB jrcxz stos nop rex.RXB and mov adc jno int in shlb std jrcxz add jle jne jnp add pushq fnstenv movsl fsubrs (bad) lret nop je sahf leaveq lahf hlt xchg out fnop and jle test mov pushfq (bad) es xor cmp push test (bad) (bad) (bad) sti pushq (bad) (bad) (bad) incb jp jne cmp and cltd rex.WXB (bad) (bad) inc stc cmp outsl xor or xchg movabs sub mov push sti popfq sarl mov sub enterq sub (bad) iret addr32 rex.X adc movabs cltd sub cmpl sti (bad) stc cmp clc cmp jmpq je setl or or xor push bswap bt mov jmpq jmpq (bad) sahf rex.W ss push or pop jg xor xchg mov movsl jge (bad) (bad) rclb (bad) and xchg add rex.RX (bad) test incl popfq cmp fiadd (bad) fwait jns (bad) adc (bad) (bad) out xchg pop lahf sub out rex.B leaveq sub rex pop (bad) (bad) (bad) sti add (bad) (bad) (bad) std jrcxz rorl rex.RXB lret or fnstenv xchg (bad) (bad) jle mov (bad) cmp ss xchg (bad) mov cmp imul adc fisub cmp out fcmovnb mov out mov movabs jb shlb fisttp (bad) mov (bad) sbb mov and xor rex.WB cltd imul or rex.W xor jp mov retq xchg jns mov rorl rex.RB rex.W pop addl imull int or or lret add movabs repz cmp movabs xchg xchg (bad) fs mov cmp std int clc movsb notb test (bad) jns push iret retq (bad) (bad) std test rex rex.W add cmp imul repz push jmpq sbb repnz and jo enterq mov cmp movsb mull sbb (bad) test mov test add or xchg xor orb loopne rex.WB icebp in lahf (bad) cmpsl sub movslq sub (bad) movabs adc mov mov sbb rorl (bad) sub (bad) jge (bad) adc rex.RXB movabs data16 mov enterq pushq (bad) (bad) (bad) sti fcmove pushfq int (bad) (bad) (bad) (bad) mov (bad) or icebp mulb cltd cmpsl adc rex.WX add add cmp out sbbb (bad) push rex.WR mov movsb enterq loope gs test pushq pushfq (bad) mov int pop (bad) pushfq dec popfq out rex.RB lock sbb xor or sub pop jg xchg jnp cmpsl (bad) rex.WX xchg mov mull fnstenv std sahf js cmpsl (bad) fsqrt jg xchg mov and push decb add outsl or add and (bad) cwtl sbb (bad) adc scas sbb lods rex.X or test rcll sub add enterq rex.X loope in test es sahf in (bad) push outsb cwtl sbb hlt pop push jmpq jmp (bad) (bad) sti (bad) (bad) rex.XB (bad) (bad) (bad) pop addl mov jo lret js fs mov (bad) (bad) (bad) (bad) (bad) fild sbb movabs (bad) repz rex.WR sub int3 pop or cmpsb cld sub jmpq mov jae jae xchg clc stc mov setl bsr sar mov test data16 icebp (bad) rol rcr mov cmc sub bt stc repnz jmpq rcrb (bad) fs or hlt fucomp (bad) leaveq lret repz mov mov rex.WXB mov and retq imul mov pop pop stos add xchg xor mov sub add pushq mov mov es mov sub push mov (bad) mov fs jb rex.W mov clc bnd cmpsb jne (bad) (bad) std or (bad) (bad) std (bad) or (bad) jbe jne (bad) adc lea push add (bad) out xchg test add add test in fdivl adc add cmp loope rex.RXB sti out mov cmp mov mov push or cwtl cmp and or adc (bad) jge test mov jmpq test (bad) jge mov lods leaveq pop xchg (bad) stos or (bad) push sbb cli out or (bad) (bad) cs jp popq jo rex.RB (bad) cmp retq add xor cmpsb retq and sahf jnp mov in subl callq (bad) rcrl (bad) (bad) adc xchg adc lods iret pushq es repnz (bad) pop cld cltd (bad) adc (bad) (bad) cld jo out in (bad) (bad) (bad) lcall callq mov jnp adc and push test pop out fistl or xor and out and mov stos (bad) pushfq int3 adc add add ja (bad) and gs lret mov xchg cmp rex.WXB gs jb callq mov xor rex.XB lret enterq int loope (bad) cwtl xchg notb xchg movsb mov mov scas xor movabs clc xor jmpq jb bt clc test cmp jmpq setle add not mov setne setne mov jmpq jmpq (bad) sbb (bad) (bad) lret jmpq jle cli out pop test (bad) clc scas mov imul mov cmp sbb or xchg sbb lock fcompl jl xor jno xlat jle cltd cmpsl test out (bad) cld cli divb pop (bad) push jo jrcxz rex.WRB push in or xchg out mov pop jle enterq (bad) adc movabs sub (bad) (bad) jno rex.WR insl fsubrs cmp insb sbb (bad) sbb icebp js scas stos fwait rex.RXB mov movabs rex.WRXB fdivl pop lret test (bad) xchg std rex.RX rex.WRB jns sbb rex.WRXB (bad) packssdw mov lahf sti rex.WRXB sbb jmpq add rex.RXB gs outsl fs imul add sub (bad) add iret mov data16 icebp shrd mov shr sbb xor mov test sub cmc cmc test repnz jmpq adc stos stos adc shlb cltd repz out iret jne pushfq rex.W (bad) jp movabs adc in rex.B (bad) sub jne scas push pop cmp mov and and (bad) xchg (bad) movabs (bad) rex.RB sbb lahf sub callq (bad) pop rcrb rex (bad) (bad) (bad) (bad) (bad) mov pop stc rol (bad) callq lahf lahf retq (bad) (bad) lcall jnp movsl stc adc (bad) rex.WRXB (bad) and mov cmp (bad) subl and (bad) stos (bad) out mov xor ficomp push cmp sbb pushq jmpq jmpq je stc cmc cmc cmc add jmpq jmpq jmpq jbe cmc clc cmpb jmpq cmp jge ja bt stc imul bt add jmpq bt test cmc sub jmpq lea mov movzbl pop jmpq and jb xor (bad) (bad) sub mov or sbb out cmp sarl cmp mov leaveq jmpq and or adc imull push rex.R outsl cmp and rex.WXB lods mov shlb add adc fnop nop rex.RB (bad) (bad) (bad) sti rex.X repnz in (bad) (bad) (bad) (bad) and or mov scas movabs mov mov ficom jb imul (bad) (bad) (bad) ficompl fbld int sbb pushfq stos in movabs fnstenv jae cs (bad) fwait mov xor (bad) rex.RXB jg xor mov rex.RB xchg (bad) pushq xchg lahf clc stc test jmpq pushq jmpq jb cmc cmp jmpq add push push push rex.RX gs gs outsl jb add xchg or (bad) jmpq (bad) adc out shrl adc test (bad) cwtl adc sub or cmp push add jns jge test mov int hlt repz xchg jno xchg jl fidivl bsf outsl xchg (bad) mov es movsb enterq rex.WR addl (bad) movsl fbstp lods rex.WB xchg (bad) jp (bad) push (bad) rex.RX cwtl rex.WR retq (bad) (bad) std or sub (bad) xchg adc xchg (bad) pop data16 and cmpsb out add add or jbe jp xchg lahf iret (bad) rex.RB enterw jl pop push add mov fsub (bad) std addr32 jns (bad) sarl jae jns,pt lods xchg or xchg not test rex.WRB rex.WRXB pop hlt int3 pop sbb (bad) mov adc iret fs mov in xchg stos out enterq xlat mov cmc mov adc clc bt mov cmc jmpq je jmpq (bad) icebp sahf and pop pushq fsubrs sbb add rclb xor sub xchg xchg or fimull push mov fdivs stos rex.WR xlat sub jmpq imul rex.RB lret jbe jne jrcxz or (bad) xchg sub (bad) (bad) decb sarl jno data16 clc in rex.WX pop out fstpt in (bad) rorl outsl adc rex.W (bad) xor rex.WXB movabs lods callq pop mov (bad) scas rex.R mov sbb jne adc movzbl not adc mov clc mov bt stc sub jmpq (bad) fimull iret (bad) and mov movabs ss rorb jne xor jp xor xorb cmp xchg scas fimull or (bad) and clc pop movabs add insb cmp out (bad) shrb rex.W clc pop sbb shlb (bad) xor pop movabs callq movabs loop (bad) sti pop sub mov movabs mov clc rex je (bad) rex.WRX xlat shll retq fs cli pop movabs (bad) rex.RX (bad) (bad) (bad) jmp jo and int test pushq imul xor (bad) (bad) in xchg rex.RXB or rex.R jl (bad) cli loopne hlt mov (bad) (bad) (bad) out (bad) jo stos and (bad) (bad) out xchg xor retq xchg pop rcrl test (bad) (bad) sarl (bad) (bad) push (bad) test xchg (bad) push xchg callq pop loop (bad) add xor pop js (bad) in pop xor cmp (bad) (bad) push (bad) int3 (bad) lret movabs movabs adc xchg (bad) adc (bad) or (bad) (bad) ror (bad) (bad) push (bad) cld movsl sub insl (bad) (bad) (bad) clc mov pop (bad) add (bad) adc movabs adc (bad) cli or rex rex.W pop or (bad) (bad) sti mov in jnp mov xorb (bad) cmp cmp addr32 (bad) (bad) (bad) std or rex.RXB (bad) decb (bad) and out fidivrl cwtl add rex.WRXB add add xchg jge fldenv rex.WX jo adc jns lods data16 pop adc movslq test jae push cmp (bad) (bad) retq mov (bad) rex.WRB jg rcll movabs cmc jmpq mov mov (bad) (bad) add lods (bad) (bad) add (bad) repz (bad) add cmp jmpq jae jmpq clc sub cmp cmp repnz jmpq (bad) fmull or (bad) (bad) sbb add cmpsb (bad) gs cmp stos push or (bad) xor mov rex.WRXB (bad) mul (bad) rex.WRX push or icebp stos hlt jb (bad) jb xor jno sub fcmovb add movsb movsb lret mov mov (bad) adc xor pop cwtl in callq sub iret (bad) scas in xorl and test jrcxz jnp rcrl mov retq mov cmc xchg outsb (bad) (bad) (bad) decb (bad) (bad) (bad) incl cmpsb movsl cmpsb rcl rex gs (bad) (bad) (bad) cmpsl jrcxz cmp sbb rex.RX jg (bad) mov stc add divl test sub sub jmpq subl mov rex.WB (bad) jns mov mov mov and insl adc pop rclb stos jbe mov pushfq rex.WX rex.WRB movabs cli andl and retq out insl (bad) rex.WXB cmp adc stos es mov xchg xchg int3 std mov pushq outsl pextrw sbb (bad) out push rex.WRB mov movabs imul (bad) fisttpl js xchg sti rex.WR lock sub (bad) (bad) (bad) sub mov (bad) scas mov jl movslq mov jge (bad) (bad) (bad) ljmp jge pop xor and jae nop add sub sbb cmpsl lret (bad) and test fidivl jne xor push insl rol (bad) rex.WRXB (bad) rex.WB notb movslq xor cs insb add bt movzwl jmpq jmpq jmpq cmp repnz jmpq hlt push pop sbbl rex mov pop or (bad) (bad) adc lea lock scas mov and pop or (bad) outsl (bad) (bad) idivb movabs insb icebp rex.WB lods cmpl (bad) cmc scas xchg jl pop (bad) push cmp (bad) frstor mov out ds mov xor cmp (bad) jl and iret mov mov xchg mov sarb (bad) jle (bad) (bad) (bad) sti insl jrcxz gs (bad) (bad) (bad) decb icebp cmpsb rex.RX push add (bad) (bad) dec rex.X or adc jbe ja jne lock test xor addr32 push jmpq push push stc in rex.RXB cld mov and lods xor or lret sahf mov mov add rex.R jae jb add sub xchg rex.WRX retq cmpsl pushq adc fidivl (bad) cli add insb and insl jp mov fisub repz rex.WRX (bad) movabs test ja ss out xor loope movabs jmp add lahf adc ja fimull cmpsb pushfq (bad) movsb sahf xchg lods xor callq out cmp (bad) (bad) (bad) sti scas adc (bad) (bad) decb adc (bad) or add add or adc mov jmpq mov in jle xor xchg mov iret (bad) test xor or (bad) mov adc fidiv loopne sub sub mov jne sbb mov stc stc cmc add bt cmc movzwl sar mov cmc cmc clc add clc jmpq jmpq sub pop out add jns sbb je xor roll pop cmp mov rex.WRB sub mov sbb negb std imull rcrb mov fsubrl xchg jg mov lret or rex.WX rol cmc movabs mov (bad) and (bad) lret (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq pop lahf retq push std rolb loope jne and callq jg (bad) xchg je xchg jge (bad) adc xchg cmp scas movslq pop cld xchg (bad) fsubrs cmp sti popfq sub andl addr32 (bad) cmp xor pushfq xchg xor xacquire mov (bad) mov and pop (bad) xchg mov push mov mov jne test clc movb cmp test cmp bt test jmpq pushq jmpq mov lods add rex.WX gs pop (bad) (bad) (bad) rex.X rex.WXB or lret jmpq lahf rex.RXB adc jbe adc clc repnz or (bad) out rex.X rex.WRXB mov or mov and pop movabs adc outsb rolb in pop addl (bad) (bad) sti sbb jp push (bad) (bad) (bad) std int3 sti and mov fwait imul movslq mov leaveq and and loop sbb (bad) cmpsl mov or (bad) (bad) decl adc loop shrl adc mov jrcxz leaveq (bad) out sarl retq rex.R test out rex.WX lret xchg loope icebp mov mov mov movzbw bswap mov test and test test test add jmpq cmpsl (bad) retq ss mov or rex.X fs repnz cmp sub outsb pushq mov (bad) int add xor sbb lahf divl and mov lock pushq out cmp xchg movabs (bad) (bad) shrl rex.RXB test mov jrcxz insb push mov insl movabs outsl xlat jmpq adc (bad) (bad) (bad) cld jl sbb (bad) (bad) (bad) (bad) lcall popfq movabs jbe or jno iretw std sahf (bad) sub repz add add xchg outsb xchg and (bad) or popfq lods leaveq orl cmp (bad) movabs mov and (bad) out rex.RXB addb insb (bad) or mov xchg add int3 ja out addr32 icebp mov mov rex.WRX rex.RB push xor cs insb add cmp adc test pop mov (bad) mov test test xchg adc jle jg data16 (bad) (bad) outsb fimull in fisttp jno push xchg jb (bad) sbb mov or xchg ds ss mov mov in andb (bad) cmp jb fs clc iret (bad) (bad) (bad) decb mov loop or rcll clc fbstp es (bad) push or callq (bad) pop cmc (bad) xchg cmp adc scas rex.WB mov (bad) (bad) inc pop sti (bad) rex retq pop adc test clc cwtl xchg notb and leaveq lods and (bad) out test insl adc fs mov mov push clc xchg sarb jmp out rex.RB (bad) (bad) sbbl sahf callq movsbw xchg mov setle bswap mov mov xchg mov pop jmpq jbe rcr xor rol btr mov movsbw rcr bts add and mov setnp jmpq bsf shrd neg mov test test stc sub cmp cmp jmpq je shld not push bts mov stc sub jmpq ja cmp test cmc sub sbb sar neg and add test rol sub data16 (bad) mov shr sub sub mov mov clc test test repnz jmpq ds (bad) or rex.RB jp (bad) icebp mov add or push (bad) pushq (bad) rex sbb movslq fisubr cli movabs test ds sub jmp decb (bad) scas rorl cli loopne (bad) xchg mov adc cmpsl decb lea repz mov stos jrcxz retq mov lahf fwait (bad) (bad) (bad) sti fyl2xp1 lea stos (bad) (bad) (bad) decb mov lea add or rex.WB outsl xchg xchg add add lahf jmpq pushq cmp fisttpll imul xchg or and pop out xchg ffree cmc pop in mov sbb sbb xor lock addr32 sbb pop rex.R mov int cs mov sbb popfq mov fldt jnp (bad) jp xchg rex.RX mov cmp out rex.W rex.WXB test jbe cld pop insb pop (bad) xchg xlat push subb jmpq cli pop lret and icebp (bad) (bad) (bad) cld icebp enterq (bad) jnp add rex.WRB mov jle jno cltd (bad) repz (bad) (bad) (bad) (bad) jno rex.RB out (bad) (bad) jb push mov xchg push sbb jbe and (bad) mov mov loop movabs or jns lret rex.WX test mov outsl xor movabs scas sub cmpsl repnz rex.B movabs fimull fmull sub movsl cvtps2pd mov rex.WR or stos xchg cmp (bad) (bad) push fist adc cmpsb and push mov (bad) rex.WX sub movsb leaveq push rex rex.W es (bad) pop xchg add (bad) push retq test rex.RXB mov lret outsb gs fild adc and push (bad) (bad) mov jbe sbb retq (bad) clc cmc stos add pop push xor lods sbb lods mov sub or fisubl jno mov scas push (bad) cmp in (bad) xlat cmp add add cltd rex.RX sbb test rex.WX cmpsb xchg xor std rex.RX adc push fmull cmpsb lret xchg jmpq (bad) adc add push jns mov sub add jrcxz stos xchg jo fnsave xor lods fnsave lock push cmpb mov pop cmp (bad) (bad) add movsb pop jbe outsb push jge rex.XB mov pushq iret or enterq (bad) jle sub cwtl lods push add mov fisttpl movsl (bad) jno pushq test (bad) (bad) cmp rex.WX fistp dec add pushq mov (bad) (bad) cld xchg and dec (bad) (bad) (bad) pushq mov cmpsl cmpl (bad) or test (bad) xchg adc xor lea pop testl loopne mov (bad) (bad) fcompl (bad) fiaddl add add sub rex.X xor movabs rex.WXB cmp xor loopne orl jrcxz fbstp sbb test (bad) shrb pushq stos mov retq push xchg enterq out enterq in xor adc jle (bad) pop add pop lea (bad) rex.XB lret (bad) outsb (bad) (bad) and outsb sti (bad) add bndstx sbb lahf idiv orb mov jb sub jl push rex or nop xorl mov es in cmpsb sbb jo enterq pop pop test rex.X adc pop or add rex.WRB sub (bad) (bad) sti stc rex.WXB (bad) (bad) (bad) rcrb lret loopne jnp adc (bad) xor add add push mov mov sbb bnd and (bad) pushfq int pop (bad) sbb je adc jnp jb (bad) (bad) enterq (bad) cmpsb sub jnp mov (bad) xlat jp inc sbb mov cmp add rex.RX push lods push cmp pushfq sub pop (bad) mov fstp (bad) xor icebp xlat or cmp xor test mov (bad) stc imul mov out in cs (bad) sbb sub mov (bad) (bad) cld sarb cmp scas (bad) fildll (bad) xchg jns rex.WR xchg (bad) fsubl popfq xchg rex.WR add (bad) sbb rex.WXB cli out movabs lahf mov sub xor ds xchg add cmp rex.WRXB retq sub cmp nop cli (bad) add rex.WR test (bad) xchg mov mov (bad) jae movabs (bad) (bad) out inc mov clc cmp jmpq jmpq add rex.RXB gs movslq imul imul movslq loopne (bad) decl imul xchg mov (bad) (bad) push and (bad) icebp mov mov test and mov push rex.WR pushq movabs rclb jl nopl mov sbb mov (bad) cld hlt (bad) xchg (bad) iret loope jns adc jg gs push test (bad) (bad) (bad) sti and xor ss (bad) (bad) std (bad) cmp insl mov mulb pop paddb sbb testl (bad) push cltd mov rex.RX rex.WRXB (bad) (bad) (bad) inc jbe push shlb mov (bad) cmpsl movabs insb xchg (bad) or mov jmp in in popq pop enterq sub (bad) rex.X movabs (bad) sbb imul cmc cmc imul cmp jmpq jmpq jmpq add rex.XB (bad) je rex.RB jbe jb outsb insl outsb je insb outsl movslq jmpq bt movb test test jle je btc push sub bts rcr shr mov stc stc sub jmpq callq jmpq (bad) test rex.RXB sbb xchg pop (bad) je in xchg incb xchg adc cli (bad) (bad) int3 cmc lods (bad) jl cmpsl lods loope loope mov test clc and mov sbb fs mov fimul (bad) (bad) (bad) out xchg rex.WR (bad) mov or cmc and rex.RX mov adc push fldl (bad) (bad) sti rcrb (bad) (bad) sahf adc addr32 jo jmp out rex.X add mov shlb add add xor jmpq icebp gs rex.RX mov xor (bad) push cld test rep mov (bad) jne pop lock (bad) ja fnstsw xchg cmpl loop ds rex.WRXB std movabs ja adc not not sub data16 not enterq (bad) add movabs lea mov stc mov test cmc clc repnz jl jne stc cmc movb jmpq cmc test jmpq xor mov (bad) fwait rex.WX (bad) pop sbbb and fcoms enterq (bad) jrcxz xchg hlt push push adc movabs out mov (bad) jo add mov in callq movabs fstl xor cltd rex.B mov pop jle xor and xor push jg adc jnp jbe (bad) (bad) sti cmp (bad) (bad) std out rex.RX out imul out callq jge icebp scas iret frstor add add add pop loop sarl jb rep movslq vmulss jmpq lahf int add gs jg loope ud2 (bad) repnz pop jo jae iret test cmpsl rolb (bad) sub lret lret mov jne jne test movabs add retq mov imul and sub leaveq jl and (bad) sub xchg rex.RB (bad) int3 lea lea jae sbb xor lret (bad) shl jnp jo pop add (bad) (bad) mov sub and mov jae xchg adc pop (bad) mov rex.X mov adc rex.WX and mov rex.WR cs xchg rex.XB fwait or notl xor sbb xlat pushq test cmp or jmpq jmpq cmc clc sub cmc test stc pushq cmp clc jmpq pop jge xor or roll (bad) add out pop (bad) jae mov rex.RX rex movsb mov out mov rex.RXB (bad) jae (bad) lea add (bad) iret (bad) mov repz pop mov (bad) cmp loop mov xlat (bad) test fimull push or lsl adc or decb cld movabs jle rex.WR push sbb int3 xchg popfq rex.WXB fadds rex.WB fistpll mov sbb repz or outsb add add and pop jmp xchg or push lock test je jrcxz iret imul mov or fimul es mov fnclex jae (bad) pop leaveq scas lret repz push cmp sbb lock jg add jmpq jnp loope (bad) (bad) pop xor pop jnp fistp (bad) sub nop out fcmove hlt retq add mov push adc cld xchg int pop rex.X or js loopne jle fisttp or xchg mov mov rex.WRX sub insb (bad) pop or (bad) jrcxz adc sahf mov or jno clc cltd (bad) (bad) (bad) std or pop imul (bad) std mov pop test mov movabs pop pcmpeqw xor cmc lret and add or rex.RX in js add rex.W mov jns jo es lahf (bad) jle mov mov outsl (bad) jne and std int3 cmpsb mov pop cld icebp lret (bad) (bad) (bad) out fsubr fnstsw jbe sti nop leaveq stos divl (bad) stos jg mov lret pushq rex.WRX test movslq (bad) jmpq adc retq jne or sub lea rcr mov xor or add not mov jmpq (bad) and leaveq decb push mov xor outsb push mov (bad) fildll jg sbb cltd rex.RX adc popfq movabs or mov leaveq jmp gs sub (bad) jns and fisttpl fdivs sbb pop nop sti scas popfq scas rex.WR outsb (bad) pop push fistl rorl retq xor lret ds mov outsl adc mov xlat xchg std mul xor jnp rex.X and jns (bad) (bad) or xor (bad) rex.R (bad) lret and (bad) (bad) (bad) (bad) std cmp (bad) (bad) mov mov rex.W pop ss pop pushfq (bad) adc (bad) or cmp cmp (bad) (bad) sti incl (bad) (bad) (bad) fdivr xchg rex.WR jl outsl popfq (bad) lret test clc loope mov xchg addr32 rex.WRB (bad) cmp hlt movabs test lret lea shrl clc jae rex.WB add or adc add push repnz cli test jmp loope add push or lods mov cmpsl clc and mov (bad) js mov (bad) shrl in rex.RXB or sahf out (bad) je sub (bad) stos test test movzwl clc shr mov bt cmp bt cmp add stc cmp test clc mov cmp bt bt clc test jmpq rolb cmp (bad) loop rex.WX sbb (bad) (bad) jmpq pushq insl andl mov movsl and cld mov cmc mov out loopne out stos gs mov xchg mov adc mov retq (bad) out scas test xor (bad) (bad) mov rep cld rex.WR fistpll fldenv push insl addl xor mov retq push (bad) cs (bad) retq (bad) sti rorb (bad) (bad) (bad) (bad) popfq rol mov or xlat mov jo sub add add out (bad) mov (bad) loop and outsb out jp rex.XB cmp xchg lock lret lods or sbb (bad) mov pop rorb mov test mov sbb enterq jmpq rorb xlat in test loop mov rex.XB stos rex.RXB lahf enterq sbb xor stos xchg sbb imull movabs sbb jo or mov xor mov mov rcl sbb loop mov sub cmp mov xor or mov stc xor (bad) mov rex.RX (bad) (bad) cld or sub (bad) out jne movabs je jo and add add cmpl rex.RXB in testb data16 int mov (bad) loope xchg int (bad) (bad) jl cld test loope (bad) icebp fmuls fs icebp fwait xor pop icebp movabs movsb ja decl scas (bad) xor (bad) sub (bad) cmc popfq lock retq jrcxz mov (bad) rex.WR rex.WRXB (bad) jrcxz out hlt callq jl pop (bad) xchg (bad) xchg (bad) repnz (bad) test adc jne cltd sbbl mov mov jle test in cltd loop or mov jns (bad) testb subl (bad) adc or add fsubrs (bad) fld mov (bad) fucomp js xor xor mov rex mov cmpsl (bad) (bad) (bad) sti pop movsl jb cmp sbb shl rex.R fldl (bad) (bad) mov pop cmp mov ss movabs mov in pop std fidiv shr adc cmp jge mov (bad) cmp or loop fdivrs mov shlb push rex.XB jmpq (bad) adc imul loop and mul fdivr loop xchg stos (bad) pop and xchg xor and (bad) pop adc pushq push (bad) mov xchg mov (bad) rex.XB and adc sbb (bad) mov cmp adc mov cmpsl and xchg stc add mov out js lods mov xor jg rex.R je mov ror pop movsb shr rex (bad) add sbb pop pop cmp adc mov push xor adc (bad) cmp adc movsb (bad) rclb rex.RX lock repnz (bad) cwtl sub mov (bad) fildll (bad) (bad) in adc in (bad) mov rex.W lock add js ss fisttp (bad) xchg iret hlt sub sbb shll (bad) insl add add jge mov jp enterq or in out in adc sbb (bad) (bad) std sub rex.WX add add or imul shrl stc push rex.X lods shrl lods add mov and and shll out test and gs xchg (bad) sub mov mov cmp cmp roll mov add movabs xchg mov cmpsl xor jrcxz mov or (bad) jp mov jne test testb mov adc xbeginq or outsl xchg xor jnp mov int3 add pushfq es xchg add stos (bad) movabs push push ffreep data16 test and test mov (bad) (bad) (bad) sti sub (bad) (bad) decb cli push enterq iret fistpll lock (bad) (bad) decl jb rex xchg std mov in fldenv jnp cmp loopne (bad) jo cwtl (bad) subl xchg adc adc movabs (bad) rex.WRB mov (bad) testb push rex.RB rex.WRX cs insb add (bad) add add jmpq mov pop adc mov add in pushq fwait repz int cwtl push push sub (bad) rex.XB or cmpsl rcrb sbb rex xor fs int3 je jb xchg cwtl (bad) push cmp rex.WXB adc (bad) cli in adc (bad) std leaveq xchg test icebp xchg neg or fnstcw shrb sub shll ror xor (bad) inc movsl mov cmp mov out xchg es fs rex.WR cmpsl (bad) xor mov shll lret mov or (bad) fs or sahf cmp or (bad) adc int add (bad) xchg mov xor push cmp (bad) mov lret loop enterq rex.XB cs lods xchg rex.RXB xor (bad) add mov (bad) in (bad) lods mov outsb push test (bad) and rex.XB mov mov cmp jmp or adc (bad) repnz fst sub (bad) (bad) (bad) cli std jmp (bad) xlat (bad) (bad) (bad) std fildl and cmp jnp out adcb imul in test insl pop lock cmp repnz mov adc xor js iret xchg sbb pushq jg rex.B cs add faddl pop add ja mov in mov rclb rex.W cs sti xchg mov (bad) insl data16 sbb movabs shl (bad) (bad) xor in cmp ja shr add ror test xor sbb add sub shr clc xchg xadd sar cmp mov mov mov cmp clc clc push jmpq dec neg (bad) lock sub sar add bts jmpq je clc cmp test bt sub jmpq jmpq or not mov and rol shr cmp mov cmp repnz jmpq xchg (bad) rorl (bad) (bad) movslq mov (bad) imul insl push xchg xchg pop jle scas xchg sbb std pop xchg jmpq test adc lret jno stos std in or je ds lock xor mov sbb jge and mov add movabs lock rex.R sub (bad) jle xchg (bad) cmpsl mov sub jp or rex.WR (bad) and cmpsl xchg (bad) (bad) (bad) decb (bad) (bad) (bad) inc pop (bad) xor sbb imul loop cmp retq pop fmull (bad) and xchg fstpt adc mov jbe mov pushfq push addb fldcw repnz sahf mov rex.RXB (bad) adc pop jl rex.RX xchg in (bad) mov (bad) lea outsb callq jmpq bt mov cmc test not test bt neg clc clc jmpq mov jmpq jno movabs out add xchg (bad) jge std mov sub mov xchg push cwtl movsl cmp popfq insb pop cmp cmp fiadd lea leaveq xchg pop (bad) pop js add (bad) sbb xchg mov mov (bad) pop mov fdivrs out jle mov fdivs (bad) (bad) mov and xor fldt mov pop jmp adc rcrl sbb mov (bad) ds sbb jmp mov (bad) icebp cmp xchg out cmp xor xchg pop movabs incl mov xlat stos xor scas mov cs (bad) mov cwtl add adc sub mov lahf ds in movsl xchg ficomp repz test pop adc imul mov mov rex.XB xchg lret xchg xchg loopne rcrl rex.RB (bad) rex.WXB lcall movsl out movslq repnz mov stos (bad) mov add sbb mov fdiv iret fcmovnu or or xchg cwtl add sbb sub cs xchg (bad) adc sbb sbb or popfq mov shr add fist es rex.W mov xchg fisttpl adc sarb adc addr32 roll movsl lods sbb nop pop xor rclb mov adc and push fs idivl add xchg xlat test push push jge sti (bad) out cmc (bad) and mov (bad) add (bad) retq sbb mov std xchg sub xor lea rex mov xlat retq popfq adc cmp xor (bad) lock std push mov (bad) iret pop rorl sbb rex.WRX mov jno (bad) add or insl std xchg frstor xorl sbb ds (bad) jl sbb in and jns xor adc mov xchg and jrcxz,pt mov cmpq je mov clc adc adc cmpl ror repz mov or ds rex mov lods xchg sbbb insb hlt jge movabs popfq je idiv fstpt cli (bad) int sub xor (bad) js cmp sbb (bad) cwtl (bad) (bad) test mov mov movslq fadds es pop lea push cwtl jle rex.X mov lea pushfq mov rex xchg mov jae push scas adc movsl sbb (bad) pop insb cwtl fist or xchg mov cmp (bad) jae xor jne fwait jo mov movabs (bad) adc out sahf stc pushq sbb xchg callq (bad) (bad) lods push add test mov iret mov (bad) sbb fldcw stc out sbb mov mov data16 cmp jl je adc rex.RB mov jno mov fcomi out nop cmp (bad) in or imul xchg jle xchg sbb jne jae in (bad) mov pop mov stos stc (bad) mov xchg xchg int3 movsl (bad) iret stc scas movslq divl fisubrl imul jg sbb test mov push (bad) cld push cmc mov xchg mov shl cmp xchg rcrb retq push or jge mov (bad) or rex.B rex.XB mov xchg clc rex.B repz xlat sarl mov xor xor push or (bad) xlat retq xchg pop test cltd rclb adc pushfq rex.WX test rep sarl retq xchg (bad) xchg test jne mov xchg lcall out jge test (bad) mov pop fidivr (bad) add pop sbb xchg out mov movsl imul mov fildll fsubrp (bad) lods cmp faddl rex.XB (bad) retq mov stc int3 mov sbb jmp pushq pop mov cmp movsb repnz std adc mov (bad) lret jmp add xor popfq xchg ss pop rcll je xchg test movabs rorb push mov je mov out scas mov pop add lods sahf jg repz mov jle (bad) gs movsl lods mov mov mov pop cmp adc sbb out loope scas (bad) cmpsl mov popfq movabs mov hlt imul pop mov rex rol mov sbb xchg sbb (bad) jge adc (bad) in in (bad) xchg xchg (bad) (bad) add (bad) repnz rcll popfq movabs rcrl xchg xor mov scas jo sub sbb movslq jl lods adc js cmp retq fsubrl rex.WRX in leaveq cmc pop sbb mov xchg mov mov sahf lea xchg nop enterq out out and pop mov pushq in pop imull rcrl sbb mov xchg mov rex.WX cmp xchg xor mov mov int ss stos push fistpll rex.WRB es mov movslq adc (bad) jp cltd repz xlat mov pushq mov lahf jg sbb mov imulb out adc out loopne add xor adc mov decb int cwtl pushq xor jrcxz leaveq (bad) movabs cld add jrcxz lock or repz cli add lret sbb mov rex.X std jg test rclb lea (bad) out xor cmpsb pushq pop push mov add std or lods jno cmpsl xor (bad) sub movslq rorl fistp imul cmp out jnp sarl lods movslq mov (bad) jns rcrl sahf fldl (bad) in and movsb (bad) adc push fldt add lahf mov and (bad) (bad) and lock pop movslq sub jmp mov iret add or xor fisttpll out sbb sbb rcr or retq adc movabs cltd xor or sbb (bad) rex.RXB pushq and adc xchg mov pop mov (bad) movslq cmp cmp cmpl rex.RX movabs mov mov sbb ror sarb mov and js cld popfq cld rclb rex.X (bad) (bad) mov xlat push scas sbb xchg cmp adc adc movabs mov xor retq mov cs pop mov retq movabs movsb (bad) sbb movabs xchg movabs stos jbe fistp movabs out pop mov or fisub jns (bad) mov sbb sbb sbb fwait pop pushq sahf (bad) sbb cmp xchg mov iret (bad) xor repnz sub jg andb sarb mov rex.W rex.WRX hlt sbbl imul sub es add stos addb test mov jg (bad) and nop or sbb (bad) rex.WR xchg sbb sarl sbb pop loopne orb (bad) cmc lahf sbb cmp mov retq jle sbb (bad) mov mov pop mov nop xchg movabs cmp xchg in rex.W xor xchg xchg xchg je (bad) in cltd xchg add xor (bad) mov mov jae cmp mov scas sbb jne jl sub xchg shl in ss xchg ljmp data16 scas popfq jle pushq mov movsb xchg movsl jge mov xchg out adc cld ja repz callq repz push sub mov pop mov mov (bad) sbb fcmovnb iret out jmp sbb rcrl scas addr32 add in pushq cmc sbb repz push (bad) insb pop scas cmp hlt rcrl pushfq pop (bad) (bad) mov sar loop lret adc insb popfq fstpl addr32 pop (bad) jmpq rex.WRB pushq sbb leaveq rex.RX mov lea and jrcxz popfq nop sbb (bad) out bnd cmc xchg mov callq (bad) or fdivr add flds xlat adc mov mov vfrczss in xchg out or xor in xor (bad) popfq loope (bad) std add adc mov (bad) adc mov (bad) or cld (bad) jge callq fs je mov movslq in mov stos rex.WX fnop mov stos mov sbb rex.WRX xchg sbb pop (bad) xor lret xchg fisttpll gs out fwait xor jne repnz sbb pushq movslq (bad) xchg orl (bad) mov mov fist std rex.WRX mov callq in lret jl imul jnp incb outsl hlt and loope int es mov (bad) mov mov out loop,pn rex.WRXB test sbb (bad) rolb (bad) outsw subl (bad) jle pushfq movabs mov (bad) pop fwait outsl shrl loope,pn notb adc iret sbb fisubrl adc xor lret (bad) mov adc adc xchg cmp nop adc pop movsl (bad) fstpl rcrl xchg ja or sbb cmpl mov adcb (bad) rex.WR movslq lods lods (bad) mov mov cmc mov xchg lret rex.WXB xchg xchg sti negl (bad) sub jle push cld popfq stos pop pop jne in (bad) mov rex.WRX lock rex.B out int jne (bad) int rex.X (bad) mov mov push shll fbld ds data16 sub cmovns nop lods cmp mov or outsl mov add prefetch repz int3 int popfq dec pushq (bad) (bad) (bad) popfq xchg xchg (bad) mov xchg iret (bad) loope outsb out (bad) xchg loopne scas mov (bad) test adc or sbb mov cmp sbb sub lea out adc repz rex.WXB cwtl mov shll jrcxz sub push lods fld adc add (bad) sbb pop ds inc mov movabs jg (bad) add (bad) (bad) (bad) rex.W (bad) fs pop mov mov rex.WR jne xchg movabs sbb sti mov or or nop lahf jno data16 jne or mov stos int3 sar pushq mov loope mov and lea std xor push mov setae sbb loop (bad) fnstcw pushfq jmpq lretw push jmp fistpll xchg add addl nop (bad) (bad) pop fdivrl fnsave jl stos test sub popfq push xchg push icebp xchg mov pushfq sbb mov cmp pop xor sbb xchg or xor sar fs stos loopne mov test addr32 xchg jg stos movslq mov insb mov sbb pop jb (bad) mov rcrl (bad) (bad) and out (bad) shl sub gs andl (bad) insb fisttp or mov xchg (bad) (bad) mov adc xchg push adc psllw movsb enterq xchg orl lret sbb mov mov sti (bad) ja adc or sbb in lods (bad) fcmovne (bad) rex.XB callq xchg and (bad) push mov mov add or hlt add push xor (bad) sbb xchg imul pop loope in shl rolb mov or (bad) bnd adc xorl mov mov jnp pop retq sbb (bad) (bad) rex.W rex.WXB mov mov xchg cwtl sbb cld xchg adc loopne jns (bad) mov rex.RB jae mov test sbb (bad) xor pushq or rex.WX rorl sub (bad) mov (bad) std lea pushq stos test rex.XB rex.X out sti jae push in mov int push mov lahf popfq rex.X in xchg xchg adcl jae cmp jg (bad) imul jp jl mov xor test rex.WRX push lea mov out test (bad) and xchg sub std sbb nop cltd callq adc xchg mov sbb fstpl (bad) cld fstpt cli xchg callq addr32 enterq repz mov outsl pushq movabs mov lret add xor xchg hlt out (bad) xor nop imul cmc cld sbb (bad) (bad) push psubusb fwait (bad) ss xchg (bad) (bad) fstp fwait rex.W cmp lahf cli (bad) mov jno or sahf sbb and sahf sub cs xor push jl xchg add stc pop mov push rex.W (bad) mov pushq mov mov sbb jne in movabs cmp pushq rex.XB (bad) xlat rex.R (bad) (bad) (bad) paddq xchg (bad) fsubs xchg mov pop lret cmpsl push (bad) jmp stos iret int sbb mov mov out jl pop mov xchg imul addr32 mov fistpl loopne imul mov hlt adc test mov sbb retq pop std pushq add add (bad) pop jge sbb (bad) (bad) rex.RB xchg (bad) rex.WRX cs cmc rex.WRXB mov (bad) mov mov mov retq xchg out (bad) rex.WX cmp (bad) mov jmp (bad) rex.WR add pushq cmc and mov (bad) in cld in jrcxz imul and cmpsb sub test rex.RX xchg sbb (bad) cmpsb mov sub rex.RX adc cltd mov retq rcl fcmovnbe mov ficompl or pushq and scas (bad) (bad) mov lea rex.B sbb jmp cli xchg or cmp sbb add stc addr32 or cmp loopne rorb jne xchg mov mov loopne fistpl (bad) stc xchg (bad) jnp icebp out stos std mov sbb (bad) repz iret out (bad) cmp cmpl out cltd movabs xchg cmpsl and sbb fdivrs fwait (bad) xchg fcomi add out jmpq repnz rex.RXB rep hlt jmp (bad) imul add cld xchg pop push movsl push cmp fisubr fdivl cmp std stos pushfq jl adc (bad) jrcxz jge shl (bad) xchg cmp jne mov pop mov fnstenv repz mov xchg rex.RX mov mov cmp sbb adc fnstcw mov (bad) jl lret out sbb repz sti pushq xlat fdivr mov add cmp jmp push rex.RB rex.WR cmp jo gs fistp jg (bad) in pop test (bad) fistp repz andl add adc (bad) leaveq jmp mov lea rcr and rex roll rorl xor faddl (bad) repz pop add cmp lret mov (bad) sbb fdivrp jmp insl sbb sarl icebp hlt xchg sahf sub lea mov cmp and mov sbb rex.WRX jl cs pushq jmp cltd fs xchg (bad) scas pop jge sbb stos rex.WRX repz or rex.X repnz stc xor rex.WB popq rex jl mov adc mov (bad) fstp fcmovnbe mov xchg push movsb retq int rex.RX test in and (bad) xor jmp (bad) movabs out rex.WRX sub sbb (bad) cmc or xlat add pop mov lea cwtl jl cltd mov sub xor cld pop scas xchg rex.RX lea leaveq lods xchg jrcxz icebp or adc stc lret (bad) mov int3 cmp test mov cmp adc insb mov or (bad) cwtl fisub (bad) (bad) movabs xchg icebp popfq popfq ljmp cmc fadd out retq (bad) sbb pop gs insl sbb stos pop mov pop (bad) sbb ss or js (bad) incb fisttpll xchg (bad) mov sub xor pushq cwtl sbb repnz movabs fldcw cmp (bad) loop loopne sbb cmp rex.WRB imul lock (bad) test in jo jp cmpsl sbb sahf scas (bad) nop mov (bad) cli pop (bad) ds (bad) orl (bad) data16 jbe or pop movabs jae (bad) cltd jmpq (bad) lret subb outsl jrcxz add loope mov iret mov pop lea cltd pop xchg out mov xor (bad) xchg rcrl clc fdivr cmp xor addr32 fcompl sbb xchg (bad) (bad) xchg out pop fwait out out (bad) pushq xchg test (bad) retq mov xor retq sbb jl jbe cmp pushq gs es mov cmpxchg (bad) mov mov xchg pop fneni(8087 loope rex.WB rex.WRB out outsb or add (bad) push rex.WX sti pop jrcxz mov jnp rex.WX lods or cmp cmpsl mov pushq sub movabs (bad) mov fwait sar mov sti retq leaveq in sbb repz repz (bad) fstp out mov lods rex.WR repz movabs retq (bad) (bad) test (bad) pushq enterq push std scas retq pushfw popfq sub (bad) rcrb mov rex sbb add cmpsb cmpsb (bad) movsb mov rex.X sbb cmp mov fwait mov sbb int rex.RB xchg cmp xchg xchg xchg cmp rex xlat (bad) (bad) adc fisttpl rcr sti (bad) fbstp out data16 outsl in sbb sbb mov lahf sbb fistl shl (bad) (bad) sbb cs rex.WRX sub out std mov int or adc sbb sbb xchg sbb cmp movabs out lret fbstp test pop outsb popfq fstl stc add sbb (bad) sub mov xchg mov (bad) data16 decl popfq nop pushq mov icebp cmp sahf push adc cmc int pushfq (bad) fbld pushq (bad) icebp sbb cs (bad) mov jge out push (bad) cmp cwtl (bad) jrcxz (bad) mov cld (bad) out pop cld mov shrl js or (bad) mov mov scas loopne repz pop cmpsb loop insl out mov insb adc enterq cmp mov cmpsl adc decb mov (bad) jg movabs lods hlt (bad) xchg icebp adc cs xlat xor lret mov (bad) fcmovne fisttpl retq fdivr cmc lahf xchg adc out mov hlt enterq sub rex sbb sbb (bad) xor mov sti mov cli or adc sbb (bad) (bad) test jns retq mov iret cmp pop pushfq adc rex.WRXB rex.WR xchg xor sbb fstpt mov cmpsb mov ja imul icebp or callq (bad) test sti pushfq cltd pop out push mov jns jb lock and sbb frstor and (bad) cmpsl (bad) rex.WRB int mov add jl pop out (bad) pop (bad) test xchg xchg sbb mov pop hlt cmc fcmovnbe (bad) cmp xchg mov test fcoml mov push mov (bad) repz add mov xchg cs test or fdivrs adc insl ljmp jnp (bad) (bad) adc outsl (bad) push orl popfq xor (bad) push leaveq (bad) pushq rex.X sbb mov in in jl stc (bad) (bad) adc pcmpeqw cmp fs or or pop mov pop (bad) push fnstsw mov scas xor xor (bad) (bad) lods popfq hlt (bad) loope rex.WRXB add icebp fwait scas (bad) or (bad) (bad) jmp mov (bad) pop (bad) (bad) in sbb fmuls xchg jne test pushq xchg pushfq mov cltd cld jb sbb mov or and (bad) (bad) je sbb xor (bad) test sub lret xchg and (bad) notb movslq popfq add in outsl lea lret (bad) (bad) jne cld movabs loope sub jae lret xor rex.WR cmp popq jrcxz sahf imul sub cmpsl testl cmp cmp sbb in (bad) iret sete sbb adc and fcoml ljmp or ja pop icebp fcoms xchg xor adc sbb (bad) test add push iret mov std add mov (bad) (bad) add es (bad) add and popfq iret leaveq jg mov shr lea lock sub sbb xchg outsb movslq (bad) mov adc test rex.W mov lock ss rorl adc (bad) (bad) mov rex.W sbb mulb test cmp mov (bad) pop nop lea jmpq jg sub mov rex.WB mov mov in je mov or mov push int3 add sbb xchg sub out add xchg mov add mov rex.RXB mov incl insb lea cmp or (bad) test rex.WR negb fistpl mov adc mov mov xor pushfq out (bad) rclb fld adc or xchg idivl sarb pushfq fsub adc scas xor push (bad) sahf cmpsl cmp cltd and or and push test cmp (bad) (bad) add scas (bad) test sbb jmpq mov mov sbb pop xor scas cmpsl sbb rex.WXB rex.WRXB xchg (bad) adc scas mov xchg or sub (bad) mov loopne (bad) push (bad) sbb cmp lea out ds adc mov mov (bad) xchg (bad) push repnz jbe shlb pop (bad) (bad) jae rex.WRX cwtd in xchg push sub cld (bad) adc mov (bad) xchg cmp stos (bad) data16 (bad) (bad) cmp cmp movabs mov mov shrl out rex.R (bad) cmp xchg (bad) loopne pop pop cmp (bad) mov rex.WX mov cmpl (bad) (bad) jae mov add or adc mov cmp mov and adc jmpq int3 pop movsb (bad) xlat gs rcrb fpatan xlat rcrl push jge xchg iret or rex.WRB sbb xor sbb in (bad) cmp cs fldcw xor mov cwtl push mov fildl std adc add movntq xchg in (bad) test mov sti std pop xchg adc mov pop in retq leaveq mov sbb roll jl (bad) jo fcomp scas rex.W sbb cs sub sbb (bad) rex.B scas mov lea mov (bad) loop je hlt rex.RX stc xchg scas sbb clc push imul cmp or (bad) sub jnp lret and ss sub popfq mov or out pop or xchg adc mov int out rorb sbb mov cmp rcrl cmp pop xchg mov (bad) mov imul pop (bad) popq xchg sbb xorb movslq orl (bad) sbb (bad) std iret xor add loop jo pushfq jo cwtl adc mov (bad) out add (bad) hlt push sahf mov stos lods mov mov ja int3 cmpsb mov rex.WRXB int rex.B jmpq mov sbb and rex.W out mov sbb pop cmp xchg retq (bad) iret sub pop mov mov mul (bad) xchg lret pop (bad) out jg or mov (bad) in stos mov sti mov fldt std or and cmpsb or lahf xchg jae (bad) (bad) xor add mov xchg add mov incl loop xchg pop in sub (bad) push movsl out (bad) push add stos sbb callq in adc or loopne or ja out stos data16 adc jo es fucom jo mov out rex.WXB loopne mov push pop xor push adc xchg movslq jnp in incl outsl (bad) imul and adc xchg jl pop in rex.WX sbb fsubl out fbld or jl pop sti sbb mov sti adc pop fsts rex.WRX fmull retq mov sbb jno sbb sbb or xchg rex.X rex.WRX sbb jns lea (bad) or data16 lock (bad) or adc imul fdivr sbb adc cltd sti in sahf pop jns out mov pop add leaveq fs and (bad) movslq cmpsl pop pop leaveq fs outsl jns mov (bad) fnstenv outsl (bad) xchg repz mov data16 or push ja (bad) cmp rex.WXB fdivl push lahf cwtl fcompl fdivrp (bad) xchg scas push and mov fsts and adc (bad) std (bad) clc iret xorb (bad) xor mov (bad) pushq or xchg imul fmuls data16 adc xchg xchg xchg xlat rex.R push xchg movsl and add repz outsl push add movslq pushfq (bad) cmp add sbb lods rex.W xlat or sub sub xchg sti std pushfq (bad) mov sub decq sbb loope pop cwtl (bad) cmpl cmp sahf iret sbb fsubs or testb notb xchg jge test jnp mov jg pushfq push rex.B adc or mov js mov repz pop (bad) stos cmp sbb ss pop push pushq pop insl jrcxz mov (bad) in (bad) xor pop rex.WR jmpq xlat imul cwtl movabs sahf orl (bad) pop cld loopne xchg mov out or test sti mov retq lret insl cld jmpq js (bad) jb xchg adc sbb mov xchg (bad) xchg es insl (bad) pop movabs sti rolb andl (bad) cltd movabs (bad) data16 mov fndisi(8087 sub jp (bad) and mov mov pushq cmpsl (bad) pop rcrl (bad) jb in xor sub adc shlb xor pushq fs jrcxz add mov mov loopne rex.W xor push popfq imul addr32 (bad) in cmp in jb adc loop out cld push rex.RX out adc out mov enterq insb lods add mov add (bad) jmp lock rex.WR insb sub (bad) mov fdivl (bad) std mov push sbb nop fstps jl int xchg push mov mov (bad) mov add pop movsb adc test std iret lods cmpl and mov ja in xchg std retq and (bad) loope enterq sbb pushq (bad) (bad) (bad) lods movsb sbb imul and test repnz scas jmp fucomi mov cmc insb rorb loopne mov adc mov fwait loopne loop out xchg stos fistp xchg (bad) or movabs (bad) retq scas leaveq or (bad) push cmp rex.RXB rep pop (bad) movabs data16 sub notb lock or (bad) scas or lods in pushq pop sbb xchg xchg (bad) loop pushq imul cmp xchg mov (bad) jg or fwait sbb (bad) lret mov mov std leaveq add jp and jne (bad) sbb mov pop clc xchg mov mov (bad) mov or mov in pop test pop pop or loope sbb (bad) out jb cwtl mov sbb scas sti negb mov adc icebp sbb pop fwait (bad) ja (bad) fnop xchg sbb (bad) je jge jl (bad) clc shlb pop in xchg cwtl loop fist jg pushq xchg xchg (bad) test jrcxz pushfq loop xchg sti mov movl sarl add (bad) loopne rex.W test insl adc fnsave rex.WRX lret retq pop add rex.XB fild cmp (bad) lods out adc rex.WRB xchg popfq lret (bad) scas cmc callq xor mov cmp lods sbb (bad) fldl or sar xor cmp rcrl jg sub cmp pop test add mov jmpq rorb add sar incb callq lea rex.WRXB (bad) mov adc pop lock mov xor pop and out pop hlt push (bad) add jne (bad) sub mov mov xchg push pop iret cld push (bad) mov jge or mov cld (bad) sbb cmp sahf add fsts mov repz cmpsb divb cld or jae rex.R cs out je mov (bad) pop mov sub and sbb pushq xchg jne negl test add out (bad) mov test add clc stc in push rex.R test pop push loopne mov imul mov mov (bad) rcr pop (bad) jbe insb cltd rcrl (bad) pop xchg in xchg add (bad) push xor (bad) fcoml mov popfq xor pop (bad) (bad) sbb cmpsb rex.R xchg pop push gs loop roll fnstcw ja sbb int and pop jle (bad) push xchg sbb or sbb sahf in pushfq (bad) adc cwtl add cltd jle (bad) add or andb xor cmp sbb fistl xchg jp add cmpsl jae,pt rex.WB adcl (bad) xchg adc xchg cltd (bad) insl mov adc pop xchg xor rex.WR xchg or pushq xchg retq pushfq mov loope int add adc movsl (bad) jne jmpq repz lock (bad) imul add fsubrl repz cmp imulb mov clc leaveq pushq cmp loop rex.WRB callq (bad) rcll sahf xchg out (bad) enterq cld (bad) jnp or mov rex.XB pop mov adc imul xchg int add std incl mov (bad) mov stc rex.X cld movsb sub sbb pop push leaveq jmpq mov jns mov xchg bnd insw pushq adc (bad) jo adc add jge cmp iret scas mov out xor (bad) movabs pop fs fisub gs sbb incb cmpl (bad) movabs sbb or (bad) std or sahf scas movsl pop push cmp rex.WR leaveq (bad) or or (bad) leaveq retq rex.X mov lods ljmp mov pop or fldt cmpsb sub movabs fnsave cltd xchg pushq cs pushq lea test pushq scas fidivl add addr32 sbb jl jp xlat in add rex.WRX imul je rex.WRX out mov or cmpsl mov gs (bad) push jo sbb incb lods addb lods lock (bad) callq adc enterq add (bad) xchg xchg xor jp cwtl outsl (bad) jns jrcxz add int movabs sti pop mov lock pop or mov rex.R jb mov sbb ss out sbb icebp loop lods adc jle jl adc lock in cmp neg mov mov pushq outsb mov rorb scas ja ficompl jo mov or (bad) rex.WRX insb or mov mov sti cwtl sbb pop pushq or adc pop cmp push fsubrs pop (bad) push scas cmp (bad) jno rex.RB loop mov fucom stc (bad) cs adc enterq fwait rcrl cmp add cwtd add in rcrb rex.WX adc pushfq cmpsl jmp sbb pop xchg rorl cmpsl (bad) cs rex.R int mov add fidivl adc js adc push rex.WRX repz rex.X hlt cmp cmp ffree or xchg pushq fidivrl lock lods retq sbb outsl cmp ds xchg cmp sbb sti (bad) (bad) (bad) stos mull mov (bad) insb cmp mov pop pushq mov pop mov fwait scas cmp rex repz pop mov cmp (bad) ss js add insb xchg loope fstpl rex.WB or pop mov sbb rex.RB movsl jnp rex.XB and sbb popfq mov sbb mov (bad) adc retq std fadds (bad) (bad) fildll lods (bad) xchg stc xchg rex.WX (bad) jno jrcxz int mov mov sbb (bad) mov or hlt push out or cmc (bad) xchg cld sbb xor divb (bad) in rorl rex.WRB adc sub (bad) mov loopne mov add callq mov jp push (bad) (bad) repz sbb jge rex.X data16 cltd xor push jo test ja xor sbb (bad) xor mov hlt in adc jge sbb fsubrl iret pop scas fisttpll jae cmp movabs sbb sub lods fwait sti pop cmp (bad) add mov pushq std sub mull xchg lods mov jns sbb sbb adc loopne mov in (bad) (bad) adc or jo xorl (bad) idivl push pushfq fcoms hlt sbb rex.R push callq decl fsubr jg (bad) rorb cld and mov sbb icebp movsl rcl jo icebp test sub mov pop push (bad) adc cmpsl hlt pushq push movabs (bad) mov mov movabs (bad) fs (bad) fsubrl adc sub rex.RX pop leaveq mov loope mov imul pop adc mov ds pushfq sub fnstcw (bad) add (bad) rex.WX pop insl push push cltd mov mov jl addl sti rcrl fildl mov jrcxz sbb or (bad) mov (bad) or (bad) jmpq mov sar mov data16 loopne push push rex.WRX rex.XB rol rex.XB mov lahf and (bad) mov rorl lahf cltd mov (bad) xor shll jne xchg pop pushfq sub stos outsb addr32 cmp mov (bad) je sbb cmp or add sbb sub mov xchg add jb (bad) lea std lods xor cmc jbe int sbb (bad) jmpq rex.WRX xor cltd sbb repnz (bad) push out out sub mov imul retq int fcmovbe sbb fsubrp mov jns adc leaveq (bad) callq jle (bad) fwait movabs jle outsb ds pop jbe push push loopne (bad) (bad) jb (bad) (bad) imul lret mov sti rex.WRXB sub in rex.XB pushq push adc retq fucomp (bad) jrcxz rex.XB adc and fsubrs out movslq xchg fs ss (bad) (bad) (bad) fbld or pmuludq sub pop sub mov (bad) (bad) add repz adc pushq pop sahf in icebp out xor jrcxz cmc (bad) mov (bad) jmp pop (bad) and (bad) fstpt cli xchg movsl fiaddl movabs sbb jbe push movabs adc addr32 or pop and xlat xlat (bad) repz clc rex.WR (bad) and fwait rex.WRX mov fnclex mov rex.X pushq (bad) (bad) (bad) in pop mov mov (bad) movabs add rex.W (bad) lods scas (bad) out (bad) xchg and (bad) mov mov fnsave mov insb pop sbb rex in xchg xor (bad) cmp fild (bad) rex.WRXB pop pop je cmp add stc imul pushfq sahf add retq imul jle (bad) in cltd loope rex.XB xor lea add negb (bad) pop fisttp jl pop imul notb pop in sahf hlt sbb (bad) icebp mov sbb repz xchg add data16 rex.WRXB mov imul scas (bad) fidivl (bad) sub test movsl pop ficomp mov jae rex.WX rex.B rex.XB add callq (bad) mov adc fist jmp pushq rex.WX rex.WB lock (bad) mov push or (bad) data16 in xchg add jmp hlt sti push pop jge (bad) (bad) mov jp (bad) cmp mov rcrl mov cli push cmp (bad) mov idivl pushq xor pop repz movsb sbb sub jb insb mov je fdivrl jmp rex.XB pushq xchg and adc jnp test xchg (bad) push nop xchg or movabs repz ljmp movsl leaveq fisubr (bad) pop rex.WRB data16 rcl jo or js stos sbb xor (bad) jmp (bad) adc mov sbb add mov icebp xor cmc sub mov pop fidivr push add jrcxz mov fisub jp mov cmc push clc stos mov mov cli insl mov loopne rex xchg fmull es cld mov (bad) fistp pushq scas (bad) rex.XB loop imul repz lods lea or imul sbb push adc cwtl cld movabs out (bad) jno loop icebp sbb addr32 movabs mov (bad) int loopne mov stc cmp icebp enterq mov (bad) enterq (bad) push (bad) mov frstor jae ja xor and mov push sub or sub push sbb in mov ds (bad) neg mov adc sbb or sbb (bad) (bad) jne jl cld rex.WX rex.RX pushfq repz xlat push in push adc (bad) pop adc test jne xlat mov pop push cmp and adc insb or roll xchg (bad) in jno mov lods js out mov (bad) pop rex.WRXB jo lods cwtl push in xor (bad) stc sbb pop movabs fistpl imul (bad) loope mov push movsl xchg rex.RX pop test pop rex.WB test and or sbb (bad) (bad) out push mov insl lea and sbb cli adc jp jge pop jmp and punpcklwd fs callq add fs je sahf and sbb xchg (bad) pushq (bad) insb or rex.RB shrb fndisi(8087 xor (bad) xor (bad) mov fistpl sti xchg imul scas adc test jmpq pushfq ljmp or shll add jns (bad) fidiv (bad) std stos lea icebp push lods (bad) lret (bad) fild adc adc lea imul xchg pop hlt sbb push push mov pop loop fistp (bad) fs mov not loopne adc xor in xchg xchg lock int repz div repnz cmc push andb xor imul cmp out test rex.WB mov jns std xchg cli rex.RB scas adc in xor mov js (bad) cmc iret or pop sub (bad) push mov movsl mov cwtl mov mov loop popfq or lret stc pop mov in and cmpsl roll jnp mov xchg add sub and test int3 (bad) rex.WRB xchg sbb int rex.WRB movsb pushq xchg jmp mov adc (bad) lock fdivrp or lret mov xchg pmuludq hlt lea sbb out mov (bad) cld push mov jne popq in adc (bad) jne fnstenv add movabs cmpsl mov fiaddl test rex.R (bad) in fwait xchg scas sbbl leaveq add sub cmpsl in or rol test xchg mov (bad) mov xchg sub movslq xor pushq push movabs cld sbb pushfq idiv movabs lret out pop jge (bad) insb cltd (bad) leaveq cs bt fcmovbe mov test ds (bad) jne adcl mov (bad) mov lret cli add cmp movabs mov mov out jrcxz hlt (bad) jbe jg mov jno or add lock movabs rex.RB in pop rex.X pop push rex.R pop fdivs fistp push adc stc loop sub adc mov (bad) sbb (bad) not insb add pop rex.WX mov mov or loop jbe mov mov lea jnp imul and maskmovq divl fistpll cs jge xchg or (bad) pop ja (bad) xlat mov cmp sar fdivl (bad) rex.WRB ljmp sbb cwtl jae fcomi rex.B in mov imul (bad) xor xor in push lret (bad) mov hlt gs sbb iretw (bad) xchg rex.WB rex.WR loope loop (bad) (bad) out jge (bad) btc vhsubpd insl (bad) pop fnsave hlt iret ds popfq xor mov jp jno pop mov jl popfq rex.RX xchg sbb fsubrp mov push movl and rolb gs (bad) or mov mov cld push xchg fbld cmp xchg adc lret jnp cwtl add rex.RB repz mov xor (bad) shl and fwait rex.WR out add int3 stos mov pop mov xlat xor sbb jl cmc lods fdivr mov data16 cmp retq xor pop callq mov clc sbb (bad) (bad) pushq jg and add bnd cmp mov or mov ss (bad) cmp pop testl scas repz or xchg rcll fs xor enterq (bad) in jmpq (bad) clc imul idivl out pop roll div loope,pn add xchg fimul (bad) pop popfq or retq movsl fistpll test cmp push jrcxz mov (bad) and mov (bad) jl sub callw xchg shrb fcompl xchg (bad) fwait lret add (bad) xchg (bad) fst mov pushfq (bad) jl mull pushfq rex.R jo pop pushfq (bad) out (bad) push shrl fnstenv rcll pop nop xchg rex or std jmp icebp push int jge and push jle fdivr sbb clc mov jrcxz lods sti (bad) pop loopne mov mov rex outsl push insl and cld mov push pushq (bad) (bad) rex.WX mov rex.WX sbb std divl fnstsw shll sbb xchg fucomi cmpsl pop mov jb out je divl pushfq imul (bad) xor pop pop sbb sbb (bad) sahf fstpl (bad) mov or je je imul push movabs mov rex.WX negb sbb je mov callq (bad) sub cltd cmp popfq sub cltd jg xchg (bad) ficompl and or sbb xchg jo mov mov test rex.XB pop fdivrs (bad) sbb out insb xchg rex.XB int3 mov (bad) (bad) sbb popfq xor cmp fldcw sub cs sahf sti (bad) pop movsb mov scas (bad) ss sahf rex.WXB or ja xchg pop fnstcw rex.RB sub xchg and adc movsl loopne and xor stos mov mov sti (bad) outsl jno (bad) mov pushfq mov xchg jg xchg push and xchg xchg pop xchg pop cmpsl sub movabs (bad) xor (bad) sbb pushq rex.R adc cmp pop push (bad) adc repz icebp clc leaveq movabs cwtl xchg cltd push idivl loope notb enterq sub sahf jg lods stos (bad) test lea test sbb loope adc pushq rex.WXB loope repz push movabs (bad) nop out xchg fist cld rcrl sbb cmc scas pushq jmp sbb rcrb movabs (bad) and mov jl rcrl mov cltd loop jmpq (bad) mov in cmp sbb pushq pushq xchg sbb mov adc lock jg cmp and xchg (bad) lret push add mov rex.WRX (bad) stc (bad) out xchg shr sub (bad) cmp (bad) rex.XB pop rex.XB fstps cld (bad) and sbb mov xchg sbb (bad) iret movabs xor (bad) xor xchg (bad) (bad) sahf rex.R paddb ss adc (bad) pop insl and (bad) and insb or xchg (bad) loope mov pushfq fistpl (bad) incl (bad) (bad) jmp fiadd imul mov cwtl fildl rex.WR test mov imul xchg out ss rex.X movabs mov xchg cwtl fistp or nop fnstenv jge int (bad) out test in fld rcrl sbb xor movabs leaveq add (bad) js fnstenv jl xlat sub rex.RXB (bad) push stc mov ds fdivrl jle pop push mov adc test cmp sahf xchg mov rex.WRB addr32 jnp add andb (bad) cmp std mov fisttpl (bad) mov pop repz lahf sbb rex.WXB std (bad) movabs cmp jle test cs xor or test jne jmpq cmp adc mov sbb push mov xchg insb gs ds sti (bad) adc (bad) (bad) mov xor sub (bad) lret sbb mov pop sbb cltd xchg jmp sub (bad) xchg faddl popfq (bad) sub mov (bad) std and (bad) orl and jl fildl or jrcxz sbb and push sbb je mov rex.WX jl popq add (bad) mov xchg mov (bad) in out jbe fstl fisttpll push xchg xor retq stc sub (bad) jmp int3 pop fisub cmpsl add sub outsb xchg mov fcoms xchg flds popfq movsb (bad) (bad) xor loop (bad) hlt xchg sbb movslq leaveq movabs sbb mov scas mov mov adc mov and callq out cmp or roll sbbb sbb or (bad) ficom rex (bad) lods push div cmpsb and mov xlat stos adc lea mov xlat pushq mov adc xlat (bad) icebp (bad) pop jae sbb (bad) mov (bad) mov (bad) clc xchg jmpq stos xchg iret (bad) (bad) (bad) (bad) sbb push xchg sbb (bad) lods (bad) outsl mov clc add push scas mov adc add lea (bad) cmpsb cli mov add (bad) (bad) cs movl rex insb jle xchg xchg clc test rex icebp pushq mov sbb sbb rex.WX test mov rex.WX mov movabs (bad) xchg popfq cs incb cs mov jl retq jo outsl shl (bad) jg mov pushfq lods (bad) rex.WXB mov pop rex.RXB mov retq sahf add mov sbb imul test mov jg adc xorl out nop pop cltd pop or (bad) test mov (bad) fs pushq sbb rex.W (bad) add sbb (bad) std stos (bad) stos mov xchg rex.WX fmul out and (bad) pop or add (bad) jle sbb cld pop mov (bad) and pop sub mov (bad) cli sahf adc adc fistl (bad) jnp jrcxz cltd (bad) add ds in mov fistl (bad) xchg rex.WRB (bad) xor (bad) and and xor cld or test (bad) sub jle cmp lahf ds imul fmull jmp cltd ss mov (bad) or (bad) mov imul stos (bad) rcr mov sub xchg xchg mov add jo mov mov xor ffree or lret and (bad) mov sahf adc (bad) (bad) testb push xchg rorb jmp mov mov (bad) insl xchg sbb sti add pop out mov leaveq jo sub rcrl cmp sbb test mov es xchg mov (bad) cld rex.R xchg sbb xchg test pop out rex.WX negb (bad) push rcll out (bad) mov icebp movabs xor jae rex.X (bad) cmpsl and push cmpsl mov (bad) mov je xchg mov fcmove (bad) xchg fildl adc in lret (bad) loopne sbb in cmp sbb (bad) mov clc (bad) (bad) mov or push adc in rex.XB sti pushq (bad) (bad) sub jl or rex.WX jge and rex.RB je pushq imul fnsave xchg sbb sbb push cld lret push ja (bad) xor add sbb (bad) xchg fistl mov fisttp in (bad) test sub cwtl mov movabs sbb fcom xchg movsl jrcxz pushfq cmpsb in rex.WRX rex.WRXB out rex fwait adc rex.RX int3 cwtl sar test mov (bad) cmc add sbb out pop mov sarl pop sti rcrl divl (bad) mov insb (bad) decl enterq (bad) mov mov test outsb sbb pop sub sbb sahf cli rex.R sar lret pop movabs js bnd jp adc pushq rex.WB (bad) jae faddl (bad) in (bad) shll mov (bad) push movabs negb mov or mov xchg or jle cwtl int3 mov movabs or pushq (bad) (bad) xor es adc lret sub (bad) clc in repz jmpq mov jge out xor sbb (bad) jrcxz lret lock mov jmp rex.WXB mov rex.WX mov fldt mov mull int3 xor add rex.W movabs mov (bad) (bad) fnsave pop adc cmp callq stos (bad) fmull mov not mov jg mov add sbb xchg in movabs pushfq (bad) scas xchg jp imul cltd data16 (bad) sbb push retq (bad) movabs mov mov push shrb icebp mov hlt je sbb jnp mov jnp pop movsb mov (bad) movabs (bad) sbb mov fmull std mov out jge cwtl (bad) pop (bad) add rex.R rex.WX pop fistl pop (bad) fs (bad) sbb mov cltd (bad) pop fidiv (bad) pushfq retq int pop movabs sbb push rcrb lock sarl (bad) fdiv pop or lods mov (bad) (bad) shrl cs cmp clc sbb gs mov cmp rex.WB cmc insb jmp sbb out adc out sbb pop rex.WRX (bad) or lods adc sbb ss xor mov rex.RXB pop gs cwtl out (bad) mov xchg xchg cmp insb je popfq adc rex.X sbbl fcmovne hlt jle (bad) in sbb xor cmpl jg incl pop jo xchg sbb rex.WRB (bad) std idiv neg pop out sahf out cmp (bad) js jnp (bad) adc xor sahf lods pop (bad) (bad) jp lret adc sti callq stos clc mov stc sbb lock test scas clc ficom jns movsl and adc mov xchg fucomp rex.X sbb push lods jmp lret hlt fwait mov add test ss cltd sub (bad) pushfq jnp adc int xchg popfq mov xchg or and sti ss std (bad) and sbb rex.RB mov fsts adc (bad) leaveq sbb pushfq cmpsb mov and lods orl push callq sbb rex.XB (bad) jrcxz stc in cmc lahf sahf jno (bad) (bad) cwtl xchg sbb mov fnstsw adc sbb add (bad) fs out scas mov clc outsl imul xchg sahf sub (bad) and (bad) in movslq lods rex.WRB fwait in mov (bad) rex.WXB adc cmp cmpsl (bad) fchs jmp cmp jns (bad) loop outsb std (bad) (bad) loope addr32 jp orl pop xchg xorl or movsl ja sahf xchg rolb (bad) xor mov xchg retq popfq pushfq jbe movslq or jg jrcxz (bad) sti adc lahf mov adc sbb outsl push and fdivl push adc cli mov mov stos xchg xchg test lock mov xor jno lods out rorl fwait lea imul rex.X (bad) stos xor stc adc push push adc in je adc add sbb (bad) jge jae (bad) mov xchg mov movabs sahf stos jmp (bad) faddp icebp (bad) xchg push addr32 cltd jl adc mov gs (bad) mov adc sub sbb and or scas mov (bad) adcl lea or sub rex.WRXB gs fdiv rex.WB sbb fildll sbb mov jae xchg movslq outsb add pushfq jmp movabs (bad) xlat (bad) movabs xchg cmc in sti orl es xchg test popfq jb mov loopne nop rolb in cltd mov retq rex.WRX jp negb imul mov mov rex.WRX (bad) (bad) mov rex.RX out xchg nop imul push pop test fwait mov xchg mov sbb stc adc je xchg fucomip push or xor (bad) pop hlt push fwait xchg (bad) popfq jns lods sti adc rex.RX rex.XB add int xor mov stos add (bad) mov xchg fwait xchg loopne rex.RB rex.WB jns xor rex.WRB (bad) in fwait loopne adc loope (bad) (bad) (bad) mov mov (bad) cmp (bad) mov xchg mov push (bad) rcrl adc sbb int xchg test (bad) mov loopne repz adc pop add (bad) pop jl loope xor mov push nop cld fcomps std add (bad) out in cmp shr ja adc mov fstpl sbb pop xor sbb icebp sar fistl cmp clc insl fwait shlb mov mov xor popq nop (bad) (bad) iret out (bad) negb leaveq out repnz or (bad) pop (bad) (bad) cld xchg (bad) mov mov insb sbb popfq (bad) insb sbb sbbb mov adc xchg push imul xchg (bad) sbb adc xchg sbb xchg sbb decb retq icebp or pop fidivrl and cmp sub xchg xor vsubps out andl insb mov lea rex.WX sar in fdivl pop fs cmpsl push lret xchg lods sbb cli mov mov jmpq cmp (bad) addr32 mov rex.R rex.RX push mov sbbb out (bad) nop mov stos or pop adc and cmpb xchg insl (bad) rex.RXB in xchg insl int3 (bad) popfq hlt mov lock mov (bad) ss out out sbb pushfq rex.WXB sbb pushq iret hlt sahf int3 lcall sbb rorb test test fmull std jrcxz rex.WRB push cmp xchg add pushq loop adc movabs (bad) xchg rex.B out mov sub retq (bad) iret idiv (bad) jl or jns (bad) cmpl loopne (bad) clc mov (bad) sbb std int mov movabs pop mov rex.WX test in int3 test rex.WR rex.X cmp adc mov stc jl sbb pop leaveq and (bad) rex.WB xchg and rex.W or (bad) mov pushfq scas fsubrl lret or roll loop (bad) pop rex.WRXB or xlat fildll or insl mov (bad) mov ss hlt (bad) rex.WRB xchg ds sbb stos or (bad) je lea cwtl pop icebp (bad) rolb fstp test cltd leaveq xor adc stos adc insb rex.WRB jmp subl pop push sub mov jnp stos int3 outsl movabs and jge rex.RB (bad) jno sbb mov add jae xor cltd sbb outsl mov callq (bad) gs rex.RXB stos leaveq (bad) pop pop loope (bad) je sub gs (bad) sub callq (bad) xlat in repnz adc adc pop fsubr or rex.XB imul repnz lods test mov push (bad) jmp xchg lock mov (bad) lea (bad) xor cltd retq pop cld loopne lret cmpsb jb mov push mov int3 fsubrl sub mov cmc pop es pushq and retq jg jnp cmc (bad) rex.W or cwtl cltd sbb insb lret jbe mov and sub cld cmp rcl fisttpl (bad) rex.WRX rex.R add (bad) pop mov sbb adc (bad) pushq adc int (bad) rex.RXB jle add cwtl fnop mov pop scas (bad) clc (bad) in repnz mov push jbe mov (bad) sub inc adc retq add retq mov mov xchg gs (bad) xchg lea xor push cmc (bad) mov mov negl cld ja mov mov hlt jns std (bad) fs out mov mov sarl xchg fstp xchg int movabs mov (bad) sar rex.WRX pop (bad) (bad) push xchg mov in sub xor lods push in cld xchg (bad) sti int3 jmpq popq out jmp xchg rcll cli popfq mov data16 stos flds pop adc xchg stos mov adcl shll cmp lret insb in xchg pop xlat fcomps (bad) xchg fistl icebp xchg xor mov (bad) push (bad) jne add scas retq mov sub adc in or xchg sti movabs outsb gs subl (bad) rcll movabs lods mov in xchg rorl mov int3 xchg rcll movabs mov cwtl fmuls repz add out lret jns movabs pop (bad) std lret fs addr32 mov pop mov (bad) out and xchg cmc jrcxz iret icebp cwtl movabs sbb ss adcl fstps sbb (bad) adc add lods sub cmp sti or (bad) jb (bad) fst fwait mov cmpsl js xchg out push xlat lods mov sarb (bad) not rex.WB sub xor (bad) xchg (bad) mov iret or movsb cmpsl pop lret out stos rex.B addr32 (bad) out jrcxz stos rex.WRXB xchg cmp rol mov xchg in mov fsub mov scas xchg rex.WRX adc xchg xlat cli fcomip xor mov mov sbbl xchg fbld xlat push pushq movabs lret jle mov fwait sub cmp loopne retq xchg fadd movb sbb and fbstp or leaveq lret or test scas (bad) out fistpll stos jmpq int3 lahf cmp or (bad) mov mov cmp int (bad) lahf lock xchg (bad) decl subl insb fcmovnu jrcxz out xchg fdivl sub movabs jrcxz jrcxz xlat (bad) jrcxz xchg jrcxz (bad) xchg out (bad) cmp mov mov iret in scas lret lock retq cmp mov in rcll adcl cmp fwait rex.WX fidivl rex.WR repnz push mov fwait outsl (bad) or cmpsl and movabs fimull fwait add pop or rex.X jb in repz insb sbb test cmp stc lret mov mov fnstcw retq out cmpsl (bad) cltd sub hlt sti (bad) scas or push fwait iret pop cmp mov lods ss mov popfq add mov xchg mov out iret jrcxz (bad) adc add movsl (bad) sbb mov or repz lret adc add add cmp sub negb add fwait (bad) jbe in rex.X (bad) jle callq movabs rex.R cltd cmp adc clc int3 cs in fwait roll xchg cmpsb xchg lahf lods cltd jrcxz cmp (bad) negb (bad) sarl sti nop js rex.W add popq rex pushfq movabs shll in mov fildl jo xchg ss xor xchg xchg jge stos (bad) cwtl stos es (bad) add pushq xlat mov nop and cmp rex.RB fisttp sub adc out and adc (bad) jmpq (bad) sub sbb popfq mov jl rex.WR neg mov adc jp outsb fwait jnp (bad) push test add jae adc orl jb or jl jmp nop (bad) icebp fidivrl mov (bad) cs push cmpsb in sti xor jo or mov in mov mul (bad) cmp pop mov fwait mov pop retq (bad) pushq adc adc movabs xchg insl mov fwait xchg gs sahf jle sub pop loop push loopne xchg sbb (bad) cmp mov sbb sub and push sarl fsubrs rex.RXB sbb or cs (bad) push rcr pushq add in sbb stos out add repnz (bad) rol sub mov mov sub sbb jg sti out nop fwait mov (bad) pop popfq lret (bad) cmp or mov scas fwait cmp or adc pop rex.B xchg out cmpsb (bad) mov adc out (bad) stc mull cmp negl (bad) rex.WRX (bad) (bad) sarb mov ud1 mov fcomps mov add lahf (bad) fwait sub (bad) adc (bad) insl lahf rex loopne icebp cli cmp adc mov sti xchg (bad) enterq fwait xorb test mov imul rcrl mov nop pop xchg rex.WRB fwait (bad) in xchg (bad) mov movabs sbb out (bad) (bad) repz jmp fwait cld mov push adc rex.RXB (bad) test adc sbb push mov mov mov push insl fwait (bad) cmpsb jno jb (bad) js xor and mov rex.WB (bad) rex.X cltd sti or (bad) fwait int mov rex.RX fwait popfq out sti out xor sbb std hlt mov out repz stc movabs mov (bad) (bad) test stos pushfq xchg iret rclb xchg movabs or mov data16 jnp in loop mov shlb fwait enterq int3 scas (bad) loop mov pop movslq sub rex cmp (bad) rex.WR fwait (bad) xor (bad) fwait icebp and xor jrcxz xchg mov mov pop pop xor mov mov movslq (bad) fwait and iret xchg andl std in (bad) icebp cwtl and fwait popfq callq rex.X or ss jle xchg negl add or rex.XB fcmovnu pushq push pushfq test ss rex.RB (bad) rex.WX (bad) mov movsl (bad) fwait cmp or fcomps jmpq (bad) or andl mov enterq rex.WRB shr ds rex.RX orb jb adc jns (bad) or fstpl adc and cwtl or (bad) jle in xchg jrcxz mov cmp jmpq mov and leaveq loop xchg repz pop movabs stos and pop push pushq pushfq (bad) sub jae and fwait add (bad) or jb xchg andl and fwait mov rcrl stc lret (bad) sub (bad) test jrcxz out fimull add adc push clc sahf enterq callq sbb shrd rex sub (bad) (bad) or (bad) cli mov rex.RX xorl (bad) rex.R fwait movsl rex.WB mov fwait cld (bad) adc xchg or loope and pushq rex.XB xor fwait (bad) mov imul enterq mov rex.RB fwait rex.WR in insl mov sub sbb rex.X stc loop xchg xchg xchg sti (bad) mov sahf mov add rex.WXB ror ja in adc (bad) outsl jbe xor sbb lods addr32 add enterq (bad) fwait (bad) data16 (bad) rex.RB (bad) xor clc xchg push mov rex std vunpcklps test (bad) cmpsl and sbb (bad) cmp enterq mov adc (bad) rex.WRB sbbb rex.WX popfq (bad) mov (bad) addr32 rclb pushfq (bad) mov rex.RB adc stc sub (bad) (bad) fwait or rex.RX jbe out sbb ja mov rex.WXB (bad) add fwait rex.X shll fs add cmp xchg add mov sbb test mov mov movabs mov sbbl movsb int3 (bad) loop add mov (bad) or mov neg (bad) mov insl out adc (bad) jb jns fwait adc pushq sahf (bad) mov or callq (bad) lret sub fucomp (bad) outsb out fwait or shufps sub (bad) ss andb faddl scas cmpsb lahf or scas movslq push ja sub cmp xor lock mov jmp or rex.WR lods cli jnp fwait mov (bad) rex.WRX mov repz cld fwait xor adc (bad) mov (bad) mov out xchg out push sbb ffreep int fwait (bad) adc add sbb mov jno sub fldt scas xor adc sbb and (bad) rex.RB mul jle fwait mov jbe sub rcrb (bad) lret movl push rcr jle out rex.WX popq (bad) rex.WRB fwait sub adc fwait cmp out out leaveq xchg sub xchg (bad) (bad) xchg sbb fwait movabs mov pop xor (bad) mov mov imul rex and pop sub (bad) jb adc xorl fwait enterq fs jne mov rex.W (bad) xor rex.WR mov xor cmp (bad) rcl sbb imul int pushq lret rex.WRX or or icebp decl jne imul adc fstp cmp push sub add sbb sbb repz (bad) stos or out (bad) fwait mov sarb xchg (bad) sub fwait ss push sbbb sti data16 xchg cs (bad) xor movsl xchg scas jmp (bad) cmp fcmovnu (bad) shll fistl jrcxz adcb addr32 outsb and callq (bad) and fwait clc pop xor fisttpl (bad) add loopne jp jg negb int fstp ss push sub lcall repnz fwait (bad) jnp loop adc xorl xchg outsb ds sbb cmp (bad) adc rorl xor push rex.B rex.X sbb or cld outsl (bad) hlt out rex.WB loopne adc loop js push jle push xchg and sbb sbb xchg sbb (bad) pushq rolb or mov xchg and add pop stc cmp shrl or pop sbb jbe (bad) mov sub sub sbb jl (bad) cmp xlat (bad) rex.WXB or (bad) xchg (bad) sub adc (bad) fcmovnbe (bad) mov sbb imul (bad) cmc and fistl (bad) xor movabs cs in (bad) outsb jnp sub xor xorl fstl fistl mov lahf jns (bad) jmp popfq (bad) movabs adc cltd cmp in fistpl scas enterq pushq sbb rcrb jnp cli (bad) fistp addr32 popfq pop in jmpq rolb jge mov cmc push addr32 adc fldl mov out fwait negl mov (bad) fwait imul cmp xchg enterq push fwait (bad) cmp rex.R jo adc pop jb enterq cli xchg hlt jle mov ja pop in fnstsw and hlt pushfq add test movabs stos pop adc adc test mov test addr32 lahf loop rex.WRXB fwait jg sub (bad) test rex.WRX fwait mov xchg or hlt jne xchg jae fcmovu in (bad) fwait test nop mov fwait test js fwait sbb lods add mov mov cmp (bad) rex.WRB pop fadds rex.WXB rex.X fwait test js jno fninit repnz loope pushfq rex.WX fwait cmp insl movabs cmp fwait iret adc pop out pushfq stc fistp je sub (bad) rex.WR xchg add imul mov add push jmpq (bad) mov movsb scas movsl fwait rex.WRX (bad) (bad) (bad) jne add addl fwait jno xor jnp movabs adc jmp sbb cwtl jno pop popfq imul nop (bad) fndisi(8087 retq jbe stc rcrl sub xchg mov (bad) xorl jno and sbb jl mov leaveq imul icebp (bad) pop push jrcxz movsb fwait lods test lock (bad) jp cmpsb and adc mov (bad) fwait lret pop xchg js sbb (bad) mov retq cwtl ds mov xchg pushq sbb cmp fistl jp xor cwtl test cltd xchg repz rex.WRX rorb out js (bad) jge pop mov cmp sbb imul pop fwait (bad) xor cwtl orb jg (bad) xchg sti mov insb rex.RB rex.XB rex.WR lock mov adc jrcxz stos repnz int3 scas sub imul push push (bad) fsubrs jg fwait out adc xor in mov fs mov jmpq and and movsb (bad) sti fwait xchg lcall lret pop rex.WR repnz repnz fildl cld push out fwait mov xchg lahf sbb (bad) sbb (bad) fwait jg push sbb rol fwait pop callw rcr mov bnd pushq mov fisubl psrlw jmpq stc imul rex.XB orl in (bad) mov jne rex.WXB sbb (bad) adc fwait jnp adc push push jnp rex.X movabs pushfq (bad) (bad) xchg sub test (bad) fwait (bad) sti sahf mov xchg lahf int xlat cmp jo xchg (bad) sti jmp rcl sbb jo (bad) (bad) fwait addr32 mov sbb (bad) and retq (bad) mov add (bad) mov imul outsb ds and cld sbb fucomi stos sub sbb test in retq or loope in and mov rex.W ss mov cmp cmp (bad) lods loope fstl sbb rex.WB fldenv xchg (bad) mov (bad) adc rex lret jns sbbb rex.XB int3 (bad) rex.WRX int shrl rex.W popfq lret rcrl pop lods jle mov add sahf (bad) sbb addr32 mov in sbb (bad) lret sub or stc (bad) movabs scas pop out sub sahf (bad) (bad) retq mov lods fiadd (bad) adc (bad) stc int3 movabs fwait jns outsl (bad) pushq xchg out (bad) add (bad) fwait addr32 ljmp adc mov scas mov jge xchg fnop fwait (bad) mov test fwait sbb movabs (bad) insl (bad) pop jrcxz adc add sub lock movabs in jmp jne push sbb mov mov in (bad) (bad) or and xor push xchg scas fisttpl pop loope cmpsb add movabs rex.RB sub sbb fs movabs cmpsl rex.WB rex.WB rex.XB fwait jbe and or popfq cld (bad) insb mov (bad) (bad) sbb retq repz add or rex.WRX fwait rex.WRB rex.WR fwait sbb add and lret and pushq pop fwait scas cli jge movabs rex.WRXB in sub and fwait gs rex.WRX cmp bnd outsl fwait stos test (bad) cmp clc sbb pushfq insl jl jno sbb outsl (bad) add (bad) outsb (bad) add mov or rex.RB fwait in (bad) rex.WXB ss cmpsb adc outsb rex.W mov sahf test lret mov jg cld pop lret xor cmp sahf rex.RX (bad) mov pushfq mov ds clc sti lahf lea jmp je insb push jae cmp jns ja lods repnz push fwait in retq rex.WB cltd fwait cmp push mov jmpq std (bad) je jne pushfq (bad) (bad) negl or and in jrcxz fwait imul fstpl adc scas push fwait out in rex.WR xor scas sbb pop jbe sub cmp adc xchg jns bnd lret loope rex.WXB movabs fwait sar fs (bad) rex.WRXB subb adc cmpsb nop jns sub out adc mov cmp jae lret cmp xchg mov add je,pn ss adc mov push fnstsw int rex.WX cltd rex.X fwait popfq cmpsb pushq xchg jmp (bad) rex.W outsb (bad) mov fwait or divl fstenv addr32 (bad) and out movabs hlt (bad) lods sahf fwait mov clc sti fildl int sarb icebp lea cmp icebp pop out (bad) cmp mov cwtl (bad) jrcxz pop (bad) pop movabs fwait insl out shll sub rex.WRX rex.RB fwait jg (bad) add (bad) (bad) mov mov push adc test in fwait push stc rex.WRX ss movabs xor fwait (bad) mov xchg jge (bad) mov andb (bad) push repnz xchg or loopne cmpsl sub sub fwait sarl (bad) pop rex.B (bad) sbb add stc rex.RX ss push mov (bad) movabs cwtl testl sbb and xchg (bad) push pushq push andl sub loopne xchg sbb cmp rex.WB add movabs (bad) fwait loop lret xlat jb xchg mov (bad) adc (bad) (bad) icebp mov callq ja nop (bad) pop xor ds enterq loopne or xchg mov imul int3 (bad) add fwait cltd xchg scas and and loope out (bad) iret (bad) pushfq out jnp cli lret gs fstpl icebp movabs leaveq rex.RB movabs jnp and in mov sub retq adc fwait add lods rex.RX ja xchg es insl mov and clc movslq sbbl mov mov xchg (bad) mov scas xchg sub icebp (bad) (bad) mov sbb je (bad) fistl xchg outsl jb mov add mov sbb pop jae adc cltd mov movabs rex.XB jrcxz (bad) cmp xchg xor imull add (bad) pushfq cwtl (bad) jb movabs sahf add xchg cmpsl fisub je out xlat fwait sbb out hlt (bad) push insl xchg jl (bad) pop adcl or rex.WR (bad) xchg (bad) jnp xchg lahf clc pushfq cltd sub jo pop jp cld add xchg rex.WRB retq (bad) fld (bad) sbb xor mov imul pushq scas loop insb cmp pop scas test mov (bad) (bad) jo movabs lret movb cltd loopne sbb popq in push in clc test mov cmpsl rcl lods incl mov rex.W addr32 movabs loopne adc jge push sti sti sti xchg iret mov sahf xchg fstps xchg add cld insl push gs cmp out (bad) movsb xchg sub retq movabs cli out (bad) xor or and popfq mov xor sarl jne (bad) push insb mov cmc mov movabs xor sub rex.RXB xlat rex.WRX adc (bad) cmpsb xchg or sahf and cmp and sbb cltd jle pop (bad) jbe fistpl push mov pushfq insl (bad) sbb rex cmp in cld pushq ss cmpsl pop ficom mov xchg (bad) callq jb fldl fwait retq (bad) jno sbb and mov rcll add adc add test mov scas xlat movsl pop sbb movabs lods (bad) je cs fwait rex.WRX and rex.WR (bad) mov ficompl cmp pop sub xlat movabs sbb movabs (bad) push fwait cs rex.XB jp fwait sarl xchg and adc add add in lret fmuls (bad) rex.XB fwait movslq mov sub movabs sbb rex.WRX std sub sbb rex.X mull addl test sti push (bad) or mov push (bad) and pop stos pop add sti (bad) and fwait neg test (bad) cmc adc (bad) test cmpsb (bad) stos (bad) add ja lods (bad) mov callq jl repz jg int sbb fwait add (bad) jp (bad) mov out (bad) (bad) in rolb push std stos adc add xchg idivl and js and add add mov ficomp xchg imul (bad) (bad) (bad) repnz adc clc jmpq (bad) out xchg popfq mov lahf in adc xchg xor cmp sub je fstpl xchg andb lea mov adc (bad) (bad) rex.WR mov xchg mov clc push mov fwait cmp mov fcomps (bad) fbld sti or cltd or adc fwait (bad) in in rex.RX lret mov test movslq data16 sarl imul std movsb rex.WB pop fdivrp ja (bad) (bad) insb cmp sub push retq pop iret add js mov sahf sbb sbb adc mov cmpsl (bad) fwait mov (bad) jge adc (bad) movabs fwait push jnp rex.XB insb add test scas sbb jno (bad) fisttpl mulb xchg fwait jmp ss fbld add jrcxz jae sahf sbb mov (bad) fwait adc pop (bad) sbb fwait icebp imul incl in cmp lea adc pushfq sbb or jae fwait mov loopne adc push test fistpll mov sahf pushfq fmull insl adc or cmpsl fwait rex.WR negb adc sub in repz cmpw popfq pushfq mov or rex.WR xor out fwait sub (bad) cmpsb (bad) jo cltd xchg jnp and (bad) fdivl loop rex.XB fstpt nop fnstsw out push rex.X shlb cmc cmp cmpsb jg fwait sub push fwait es (bad) or rex.WRB iret mov test sbb sub pushfq and test leaveq sti (bad) pop xchg fwait nop add jbe adc jo loopne scas push repz data16 clc fwait xchg int flds cli cmp repz rex.WXB (bad) insb stos mov (bad) and cmc lret jnp (bad) repnz retq (bad) fwait movabs mov mov fsubl fwait (bad) (bad) sub jmpq sub (bad) nopq pop sub mov mov js (bad) add adc stos fwait push rex.WR (bad) jbe es fwait mov add fwait mov pop rex.WRX (bad) fwait mov adc cmp btc jrcxz lret (bad) sbb jrcxz in adc fwait (bad) mov and fwait jnp (bad) test mov and (bad) and leaveq add (bad) shrb rcr rex.B fwait jmpq in cld or sarb fs stc fildll jl rex.R out rex.X push fist adc popfq cli rex.WRX rex.RX push lret repz (bad) sbb lret (bad) xchg sbb sarb (bad) push xchg pushq pop (bad) jle repz (bad) (bad) sti adc enterq mov mov (bad) xchg loope popfq sbb sub jp adc imul (bad) addr32 sahf pushq jne out pop mov xchg mov fistpl cmc mov xchg add rex.WX (bad) rex.RX add (bad) mul add mov sti pushq xcrypt-ctr cmpsl sbb cmp lods (bad) fstps callq mulb sti movabs stos mov movabs (bad) movabs ds add add pop callq or mov (bad) pushq popfq cmpsl repnz fwait test rex.WXB fwait rolb js xchg rex.B (bad) xor xchg pop rcrb (bad) xchg rex.WRXB add mov test int sbb pop (bad) sahf (bad) jns je add negl (bad) cmc sbb fwait movsl mov hlt rex.WRX jb mov cwtl (bad) (bad) mov add stc sahf repnz (bad) mov pushq and adc mov repz (bad) mov sbb leaveq sbb movabs sbb subl imul ficom rorb or add callq (bad) cwtl sub xchg (bad) loopne adcl fistpl and mov out and insl and mov rcrl (bad) pmullw jrcxz (bad) je fwait or sub add cltd lret rex.XB negb std adc ja loopne adc rex.WR cmc popfq add je push mov or (bad) leaveq movsb test fwait jne (bad) jbe mov es js je movslq mov cltd pop mov fwait cmp pushq push adc jbe pop sub scas stos rex.R fwait (bad) fdivrl out mov pop xchg outsl (bad) loopne shll mov test rcrb cmp add repnz mov xchg (bad) fs fwait (bad) sbb cmp movabs mov rol imul (bad) adc lret jno sbb cmpsb xchg sub adc retq stos adc mov (bad) callq jl cwtl fistpll pop (bad) add iret rex.WX mov (bad) movslq (bad) data16 jmp xor (bad) mov cltd cltd sub push mov mov or cwtl adc rex.WRX (bad) movabs lret adc sbb std (bad) insb cmp sub mov sti js cmpsb (bad) fwait mov pop (bad) sbb (bad) (bad) repz mov or outsl fwait mov enterq sbb add fidivl fcoml sub (bad) mov out insl fistpl or (bad) popq add movsl rex.WB fwait jg mov jb push addl rex.WB fwait imull mov sbb movsl mov jl xlat add jle sbb rcrb (bad) push or add xchg and movabs (bad) subl add fdivr mov xchg (bad) sbb rex.WRB fwait sbb rorl ds add or cld outsl mov rex.B push pop (bad) sbb rex mov sarb fwait pop (bad) movabs mov (bad) movabs adc (bad) lock (bad) cld fdiv jge (bad) pushq pushfq push xchg rex.RB (bad) (bad) (bad) xchg mov std add pop xchg (bad) pop xchg pop rex.WXB xlat (bad) (bad) cli repz sbb lret sbb sub popfq fcompl pop pop push movslq rex.WRXB mull fs and mov retq fisttpll loope mov sub xchg jb cmp std push enterq paddw xchg lea (bad) std (bad) std cmpsl sub scas (bad) mov fwait in mov xor test jne pushfq (bad) ror rex.WRB retq pop (bad) outsb mov out fisubl xor mov pushq sub fwait fs push sbb callq sbb scas rex.WRB mov sarl not mov xlat mov jae movabs cld scas jp xor pop sbb pop out cli fistp adc (bad) movsb sub scas movsl js xlat cmp rex jrcxz,pt mov (bad) rex.WRX xchg outsl imul (bad) fwait mov outsl cmp rex.WRB cs jnp lret xchg xlat pop mov rolb sbb pushfq xchg (bad) xchg jbe stos ss movsb adc jb js (bad) mov movabs movabs outsl (bad) xchg imul xchg (bad) xchg pop mov fcmovnbe lret sub rex.RX ror (bad) pop rex.WRB mov (bad) sub mov and fwait xchg and rex.WXB movsb idiv xchg (bad) icebp xor fwait sbb xor jg sub decl (bad) movsb cmpsl fildll adc rex.B retq pop mov pop rex.WX in lahf (bad) cli cwtl movabs imul pop rex.WX fdiv sub sti cmp mov callq and cmpsl movslq stc mov (bad) (bad) pop push and xchg cmp insb out (bad) callq sbb mov or xchg sbb rex.R jmp mov xchg incb or rex.B rex.RX lods mov clc sbb xchg addb cwtl sbb (bad) or lock xchg rex.RX adc outsl stos (bad) pushfq cmp fsubs fcoms pop clc pop mov stc data16 sub rex.WX pop jns rex.WX repz loopne xor mov fstl rex.RXB (bad) push rex.WXB jmp movabs or xor adc (bad) jrcxz (bad) jo sbb lahf lahf fistpl (bad) cmp movslq loope stos mov push and data16 cltd push jmp sub adc cmpsb (bad) (bad) jp xchg ss popfq (bad) xor cltd imul (bad) sbb push xchg (bad) (bad) (bad) imul hlt jo mov xlat js mov sbb fild rex.WR rex.WRXB ss rex.WXB xchg or push shll add xor (bad) adc mov add (bad) ds and rex.XB fcoml mov cwtl adc or sbb popfq sbb rex.WB repnz adc cld xor xor add fmull imul mov xchg cmp sbb sbb fdivp sub (bad) (bad) rex.R (bad) or and cmp in lret (bad) push sub in repnz (bad) ss jns test scas xchg (bad) test sbb (bad) movabs mov rex.WXB fwait add jb pop outsb (bad) js fnsave (bad) pushq jmp mov (bad) ficomp fmull cwtl sub outsb cmp fwait (bad) mov rex.XB fwait push rcrl rex.RXB cwtl and fwait sub jbe cmovl adc insl stc rex.R rex.R fs (bad) cli jl callq int3 cmpsl cld rex.WRX cmp (bad) fwait mov cltd add and test adc fisttpll mov xchg (bad) sub and fwait sbb ja xchg cli in (bad) popfq int3 rolb xlat sbb in adc mov fwait divl lahf je fadds fwait xchg add jno pushfq (bad) (bad) sbb and fwait stc cmpsl push (bad) mov or (bad) (bad) imul xor add fwait push xchg (bad) lret (bad) adc movsl fistpll sti xor test mov push sub je jno loope mov mov fwait rex.RX test and push adc fwait jne jmpq fwait mov out in and icebp test pushq xlat (bad) fsubp orl xchg scas mov (bad) enterq (bad) and sbb and jmp xor mov mov xchg repnz sahf scas int3 mov xchg lea pop cmp cmp stos rex.XB lret (bad) jle loopne fwait cmp enterq (bad) cld fwait rcrl mov jnp int3 mov (bad) movabs (bad) sti add std xlat mov (bad) pushfq jb,pn retq repz adc cmp std rex.WB (bad) rex.RXB xchg sbb pushfq je mov (bad) xchg (bad) (bad) (bad) sbb jl pop xchg lea push fs push cld rex.WRX add jge mov (bad) in (bad) movslq (bad) (bad) (bad) add ja jo repz jbe (bad) rex.RB mov sahf xchg test jp fucomi rex.XB xor push xchg movabs xchg (bad) push test jrcxz fsubp add or rex.RXB int3 mov fsubs (bad) sbb jns rex.XB rex.RB (bad) jp xor mov cmp (bad) sub (bad) mov fadd imul stos fwait popfq (bad) xchg rex cmp scas retq stos movabs (bad) cmc mov cmpsl cmp (bad) idiv mov push mov decb cmp mov (bad) adc xor test rex.X cs (bad) popfq (bad) cmp test pop cmp std rcr jmpq mov xchg sbb fldenv mov push cmp sbb rex.WR mov popfq rex.X xlat add mov and ds test scas out sub (bad) sti jge pop mov jnp insb jnp mov (bad) (bad) fsubr ja loop pushq (bad) cltd mov cmpsl mov jge pop std mov (bad) mov cld je andl or mov (bad) lock bnd ds add mov push movabs jne jp pop std outsb xor addr32 imul cmp add sbb pop in mov rex.XB ds sbbl divb add cli out (bad) mov jb pushfq pop icebp rex.RB lods cmp popfq stos retq jb mov hlt (bad) pop imul mov mov mov (bad) test pushq and sbb stc vcvtpd2psy sbb jbe cld push pop (bad) (bad) fcmovnu lret (bad) (bad) sbb fiaddl iret cmp push xchg sbb (bad) xor rex.B mov (bad) cmp jrcxz mov and movsb and xchg or mov jrcxz (bad) retq mov mov xchg movabs iret movabs jae loopne cmpsb adc stc cmp (bad) in sbb cmpsl add (bad) je xor std lcall (bad) or (bad) (bad) pop (bad) scas add movslq lods negb cltd rex.R addr32 imul and push in cltd fdivp out icebp rolb (bad) movabs mov xchg pop jns lret (bad) repz or stc jae (bad) rex.R xchg (bad) lret cmp out std adc sub push and (bad) cmp in xor out cli scas shlb mov sub fdivrs lahf (bad) lahf (bad) pop or rex.RB sbb and callq retq retq rex.WRB fcmove xor xor stc loop iret mov fs mov lods sbb sbb movabs sbb imul cltd popfq jae sub fwait (bad) adc (bad) rex.R xor rex.RXB cmp lods mov xchg fistl retq (bad) xor cmpsb (bad) rex.WRXB (bad) jmpq cmc loop xchg rex.WRX add cmpsl sbb rex.WRXB cmp rex.R cld jo rorb iret in rex.X xchg (bad) pushfq xchg jle (bad) movsb (bad) cmp adc xchg and xchg mov add cli mov movabs cwtl icebp rex.X nop insb add mov (bad) sbb adc push sub pushq (bad) (bad) iret xor sbb (bad) mov sbb movb mov mov popfq mov outsb shrb (bad) or mov lret sti rol loop jrcxz cwtl movabs mov int xchg push and ds (bad) xchg (bad) mov push (bad) rex.WRB mov pop ficoml lret imul sahf pop push xchg movabs sbb mov rex.W mov xchg jns movabs (bad) mov movabs (bad) sbb add xlat js cli pop hlt jl pop (bad) repz mov sbb lods rex.W rex.WRB and sahf (bad) loop xor cmp mov (bad) movabs add leaveq sbb mov retq (bad) push out loope sti mov rex mov loopne sbb (bad) pop hlt (bad) int3 jg sub (bad) (bad) jge mov js mov jg fs test xchg lfs data16 loopne push ds pushq sbb xchg sub jnp rex.WX hlt pushq (bad) rex.X test rex.WR out int3 or add (bad) out jle xor push js movabs jns pushq push (bad) test fnsave sub adc sbb mov xchg sbb rex.X mov push (bad) cmc mov out rex.XB fistp xor sbb sbb fcoml (bad) (bad) mov scas repnz mov xchg (bad) lods (bad) (bad) out push movabs (bad) jno rorl pushfq jle (bad) sahf addl popq sub push cmp rex.WRB (bad) pop or (bad) jmpq and cltd mov mov stc addl (bad) xchg lods push add addr32 cmpsb ds fildl add iret and (bad) (bad) js pop out pop mov sti mov adcl std pushq int3 xlat test sbb pushfq xor xchg mov mov jl pop (bad) sbb jg (bad) repnz (bad) xchg add pop fdivl (bad) imulb mov rolb movslq adc fs jno jo fmul mov faddl rex.WRB es fwait add stc xchg fwait and (bad) jno cld pushfq addr32 mov jbe (bad) loope pushfq adc pop cs xor add mov (bad) cmc mov cmp rex fwait jb (bad) (bad) xor fwait imul push lods clc rex.RXB fs adc rcrb jne jge cmpsl cmp add pushfq out jno shlb (bad) test movabs out xlat test adc pop adc xchg sbb cmp (bad) fisubrl (bad) out and fwait or push scas (bad) shrl adc mov mov lret rex.RX xchg push adc (bad) (bad) fistpl mov in push (bad) push (bad) (bad) sbb fisttpl rex.B leaveq scas sbb (bad) (bad) (bad) jp cmp adc (bad) add insb movabs mov fsubl rex.WX (bad) jrcxz (bad) rex.WRXB loopne push hlt mov cwtl add push mov clc mov js cmpsw rex.WRX sbb bt std (bad) xchg insb jge clc jge jrcxz cmp sbb lret sbb sbb add movslq xchg pushfq (bad) mov popfq lock scas sbb (bad) (bad) (bad) xchg movabs mov outsb scas mov js cltd push mov sub leaveq loope cmp test pushfq cld add xor pop sub pop cld xlat jae mov push adc and (bad) sbb insl adc sarb pushq sub int xchg push shrl scas rcr sbb pushfq pushfq mov test jl sbb (bad) (bad) or (bad) (bad) lea mov adc leaveq (bad) lahf enterq sub sbb cmpsl (bad) rex.WR int fcmovnbe rex.X cs cwtl (bad) rex.WRXB mov xchg (bad) jg (bad) loop rex.WRX sbb cli mov xor rcrl (bad) sub (bad) cli shll fwait mov rex.WXB sbb (bad) jae mov (bad) cwtl jne,pn cltd popfq xchg xlat in or xchg and sub (bad) jrcxz pop (bad) or int3 add mov movslq (bad) jmpq divps fcom sbb sub xchg cmp push cmp rorb (bad) out hlt and jle rex.WXB mov mov jle movabs or shrb mov pop sarl sbbb (bad) mov push lahf cmpxchg movhps fstpt cwtl icebp adc or cmp xorl lret mov fstl mov test movsb rex.WRXB sbb pop testb rex.WRX rex.RB ds sbb (bad) (bad) xchg pushfq adcl mov int3 callq fmul sub (bad) or sbb pushq push jle outsb cmp retq push cli jbe cli out mov fmuls cld in push xchg popfq cmpsl mov popfq sbb cltd xor cltd sbb fiaddl rex.WRXB je out es flds xor jmp mov mov push mov nop insl mov cmp cld cwtl jno je in rex.XB adc mov (bad) sbb mov adcl (bad) (bad) lods xchg rex.RB insl lods test rex.WXB mov xchg (bad) sahf add movsl rclb sbb xchg push movabs push xchg out cmp (bad) fdivrl mov (bad) jne out cmc push retq (bad) jns adcb cmp rex.R fwait jb mov jb cmp fs (bad) fstpt (bad) out pop (bad) push jp mov shlb pushfq push movslq jmp (bad) xchg sbb xorl movsb pop add std out xor rcr sbb cwtl (bad) popfq sbb pop pop pop and mov mov cld (bad) xchg std idivl lock out jge cmpsb cmp out mov add pop sbb jrcxz loopne mov xchg popfq movslq lret cmp popfq adc js mov cwtl push fs jp test ss mov sbb pop sahf xor mov sbb mov mov jb,pn and (bad) mov adc sti hlt cmc cmpsl xchg pushfq sbb fdivrp cmp rex.WRB fisttpll negq push xor fiadd rex.WX pushq and data16 pop hlt pushq addr32 jp clc mov push (bad) mov (bad) sub jrcxz xor mov lea xor pop repnz sbbl xor or sbb lret (bad) sti fcmovnb jl gs ds popfq sub je callq (bad) and sti mov lret jmp movb sbb popfq xor add (bad) pop adc mov test pop (bad) vinsertps (bad) mov pop xchg jl xchg cltd jno sub jl mov fwait xchg movabs outsb mov ror pushfq and sarb mov cwtl in int lods repz (bad) mov int rclb mov cmp mov pop cs negl fmuls mov sbb jg rex.WR add fistp ja add sub je push sbb repnz mov in or iret xchg rex.WX (bad) (bad) (bad) shl (bad) cmpsl mov sbb nop add clc sbb rorb retq xchg rex.WXB repz add mov out and fcomps jmp xchg scas pushfq pop js sbb or cmpsb (bad) sub rex.RXB rex.WX mov or xorl rex.WX movabs and (bad) leaveq notb mov stos mov (bad) jnp mov adc cmp jne add xor in mov xor (bad) mov fs (bad) imul jnp loopne jo add rex push or jp xchg jo pop lret insb push scas jl (bad) sub movsb shlb js insl adc or cli out sbb jrcxz sti movsl mov or jle lock scas jo fstpt ljmp cmpsl xchg pop out movsb cltd fist movabs cmp repz movabs callq mov jrcxz sbb sahf jmp cmp js out adc xor or outsl mov mov (bad) cmpl mov push divl fisttpll or lods pop mov scas mov sbb xor and shufps rex.R movabs adc popfq sbb (bad) (bad) cmc std cmp (bad) mov iret adc pop jg callq rex.WR fs push xor (bad) sbb push add mov icebp sbb mov cmp (bad) sub push (bad) es outsb (bad) xchg mov lret jg scas adc loopne xor mov test rex.X retq ss cld jrcxz sbbl and rex.WX fsubl pushfq (bad) add sbbb sbbb sbb and add pushq mov adc hlt sub pushfq mulb mov jl (bad) sbb pop sub jge fisttpll stc movslq (bad) sbb mov pop pushfq loop jo mov pushq jmpq xlat rex.WB pop enterq rex.B es add pop pop (bad) shll (bad) (bad) movabs pop iret mov sbb xchg rex.WRB sbb (bad) icebp in pop or mov fistpl rex.WRX rcrb out in (bad) fwait loope xchg or iret fwait cli (bad) xor sub fwait jge xchg xor sbb adc cmp fabs lret callq fstpt in cmp pushfq xchg fwait push lahf out outsl jp xor pushq jbe outsb (bad) stos fwait mov rex.WRB rex.WXB xor repz test fnop fistpl sub fwait and out scas xchg lods fwait (bad) cltd addr32 (bad) int pop xor in adc loop hlt fucom mov xchg andl rex.X rex.RB xchg out out (bad) out cmp data16 xor (bad) sbb push (bad) adc stc mov pop xchg mov hlt imul cmp pop sbb std jns movabs addl add js mov xchg xlat push callq (bad) push movabs mov sub xchg stos data16 fcompl (bad) mov hlt jae mov adcl xlat pushfq int3 hlt sbb movsb outsl sub int3 mov or push pop outsl jns shrb clc and movabs in rex.WR add lahf xchg xchg mov mov sbb (bad) shrl cmpsl int3 pop (bad) (bad) pushq mov adc rex.WRXB (bad) cltd jmpq fdivs (bad) (bad) pop cmp mov icebp data16 fs ja lods and leaveq xlat xchg iret sub (bad) pop fwait add repz sahf rex.RXB rex ja movabs sub jg mul xchg mov mov push (bad) outsl mov mov rex.W adc mov imul rex.WRX imul fwait (bad) pop xor sbb cmpsb xchg cwtl push sahf (bad) xchg fildll sahf icebp rex.WXB xchg ffreep fwait sub (bad) jle,pn sub clc (bad) or (bad) sti rex.RXB mov push xchg mov push xchg xlat gs sbbl rex.R push loope sti (bad) adc pushq fisubl test sbbl popfq (bad) fist sbb push test pop xchg adc (bad) rex.WRB rex.WB rex.R ja cmp adc movabs mov jno rex.WXB test sbb (bad) cmp xchg xchg lea jg jge lahf xchg jo lock flds movabs or std rex.R mov push mov jl (bad) cmc push or add icebp (bad) xor stos addr32 mov (bad) popfq cs lea packssdw xor jrcxz fwait rex.WR mov xchg addr32 push jge xlat xchg mov test sbb add imul loopne jmp sbbb jno or mov fwait scas mov (bad) adc (bad) fwait (bad) xchg rex.X rex fwait or adc (bad) lret rex.WRXB imul add lods int or push test lret mov data16 push and fwait in movabs (bad) (bad) fidiv cmpl rorb add iret jmpq rcrl (bad) sbb adc or fstpt enterq fwait out sbb sbb mov or (bad) data16 and mov imul repz fwait insl xlat movabs and fistp lahf movzwl test cmpsb int add pop add fwait outsl pop ds callq (bad) adc sbb sbb add rex.X cmp mov addr32 cmp rex.WB je int3 lods hlt mov add mov jge rex.RB xor sbb out (bad) pop push xchg sti cmp jnp (bad) and imul pop jrcxz xchg sbb pushq hlt xchg and ja cmp mov add in negb test jg fwait cmp data16 movsl sbb or movabs sarl (bad) and and cmp pop or sti cmp cmp out jb cli or sub retq rcll fwait test gs loop retq pop test rex.B sub xor fwait movabs pushq rex.WRB fistp and movslq (bad) in sbb movabs mov js lock (bad) fadds fwait sub (bad) or negl cmp out pop pop test and rex.RX sub add (bad) cmp xchg fwait insl (bad) xlat out xchg popq test adc push fwait cmp lret je (bad) jp fildll xor mov adc xor pop xchg movabs (bad) (bad) movsb add sub loope rep (bad) movsb jbe movsb mov (bad) xchg add movslq and callq mov xchg xorl and test lret scas rex.R fdivrl and cmp insl or fisttp xlat mov js,pt (bad) je cld pushq std or (bad) cmp rex.X sbb rex.WX ror sbb in loopne sahf lahf (bad) (bad) sbb pop sbbl fs fcomps insb rex jnp fwait mov enterq or (bad) repnz xchg adc cmp jbe adc std lret (bad) cmpsl fwait xor sbb jmp repnz xchg mov retq enterq out cmp lods mov fwait add rex.WRB sub add xor pop sub ss cmpsl xchg pushfq jle std sbb add popfq lea (bad) push fisttpl mov sub mov out in sti push fcos mov test mov mov adc (bad) xlat mov or callq fwait xchg and jb cltd out fcomi xchg pushfq jbe xchg adc jrcxz movabs fucomi pushfq ds shrb push jp xor repz mov pop std in sbb rex.R add es movabs test fwait lods xorb mov sbb (bad) mov pushfq (bad) xor xor addr32 sub adc pop push cs cmpsl and (bad) and (bad) fldenv ficomp movabs sbbl test xchg lods pop insb fwait jo or mov fwait cmpsb adc lock adc rex.R rex.X adc mov rex.WB js rex.WX leaveq sbb stc mov ror in in in sahf mov mov rex.RB cmp leaveq fcmovnu cmp fwait (bad) rex.WRB lahf mov cmp (bad) mov lock movabs rex.WX rex.WX rex.RB rex.WR test cmpsl (bad) or in int3 cmc fwait cli sti mov stc push insl fcompl (bad) insb pop sub rex.WXB xor sub pop jrcxz pop mov roll hlt fwait addr32 add fwait add in lock push and loopne scas (bad) leaveq mov lcall jp iret fnstenv mov (bad) or data16 outsl push mov scas cmp in in and unpckhps out data16 fstpt rex.WRX cmp xchg lret jmpq mov mov jbe loop or retq push (bad) cs pushq jo cmp rex.W setno lret xchg cltd in push int3 rex.WX mov (bad) int scas jnp fwait push and imul pop add movslq rol mov in out (bad) pushfq xchg fisttpl jnp pop mov xor repz repnz lock popfq test loope sub (bad) in jrcxz (bad) push fwait mov pop mov lods movabs fwait (bad) lahf sub (bad) orb fwait rolb (bad) rex.RXB push rex.RB iret (bad) roll outsl add or mov fwait pop rex.X rex.RX rex.XB jnp loope lret callq std fwait mov cmc sub cmp outsl lret jns (bad) (bad) loop out rex.XB cs (bad) or xchg xchg (bad) sbb movabs sub cmp mov rex.B (bad) mov cld xchg sti sbb setp fwait repz pop rex.WX sahf fcoml ja movabs sub nop lahf sti mov fwait adc js or fwait movsbl fidiv cmp je es (bad) enterq (bad) cltd or rex.R fcomp in and jle fdivrl fwait in loopne andl out fwait subb cmp (bad) es test in scas xchg jp adc adc pushfq sub test gs (bad) add rex.RX (bad) xchg mov (bad) movsl mov cli fdivrs and sbb lahf (bad) sti scas mov stos in add in fwait pop in cld mov es fwait xchg push xchg (bad) addl rcrb repnz mov (bad) push fwait test sarl (bad) (bad) mov pushfq pop mov xchg (bad) mov jmp mov cmp (bad) jnp in pop sbb rex.WRX (bad) xor fdivrs outsb loopne rex.RB (bad) fwait (bad) mov div rex.WRXB add rex.WRX rex.WXB cli movabs stos fwait cmp mov (bad) in and rex out fwait sub pop imul in add sbb stos movabs (bad) scas mov cwtl mov lods xor fwait xchg test je clc and roll and insb fwait (bad) orl (bad) add pop fisttp pop (bad) (bad) lahf jae fsubr sti cltd data16 cli loop sbb sbb fwait add mov mov stos sbb pop jae (bad) fwait test mov xor and and jl and fisttpl jp repz xor lock leaveq andl pop fwait repz repnz mov push fcomi xor jmp lods fadds fsubrl push xchg movsb push insb xchg fwait cmp jo int ss mov loopne sar stos and pop jl jb cmpl rolb fwait mov cmp sub rex.XB and fwait out or mov rex.WR roll xor stos leaveq (bad) lret fcomp (bad) fwait mov rex.WX scas sub add pushfq fwait loop rex.R movsb xchg movabs (bad) or mov retq fsubrp (bad) xchg fbld mull jl lahf sti rol (bad) es clc pop loop lret movsl rex.RB jmp stos rex.WRX pop movabs or outsl rcll negb rex mov mov mov fstps loop rcr push rex.W add imul (bad) sbb mov jmpq adc popq jno je (bad) (bad) (bad) rex.RXB loop add cmp fwait sub xchg sbb rex.X cs in enterq sahf mov fwait cmp jp (bad) or add and jge mov test and xchg fild (bad) pop mov fwait add fstl jmpq (bad) pushfq (bad) (bad) rcrl (bad) and fistpll mov rex.RB jrcxz xchg fwait mov mov loop add lea rex.WXB pushfq (bad) lret loope (bad) mov adc stos mov cmp mov mov (bad) in fwait xchg mov or or jno loop (bad) lahf lods add and rolb pop sub in adc test (bad) sub and rex pop idiv ds in mov mov rex.WRB xlat fisubr cltd (bad) addr32 (bad) popfq fwait sahf icebp leaveq and stc push add cmpsl add push (bad) and fistpl hlt adc rcl xorl push rex.RX xchg iret mov xor jge and cmp shrl mov movabs (bad) stos lret push cmp mov sbb insl mov fwait data16 andl jg sbb stc (bad) test lret rex.B stos fadds out rex.WRB (bad) pop test cmp idivl rex.W out jrcxz outsb fwait xchg jb xor sbb add leaveq jle shrl mov sbb test fistl mov xchg add fwait mov cmp adc rex.RB sub movabs test clc test xor test mov or sbb (bad) (bad) (bad) lret fwait cmp rex.XB fwait xor (bad) mov (bad) (bad) jle callq xor push fwait test jae (bad) (bad) xchg stos (bad) jmp or rcr jnp rex.WRX add out and xchg mov rex.RB adcl pushq jmp nop cmp sbbl or insl sti rex.WX in fistl (bad) data16 loope sti in lock movabs mov mov enterq cmp test (bad) scas retq stos xchg loop fwait mov sahf or push fmulp mov movabs jno sub in mov cld iret subl xchg mov cli fwait xor sti rex.R fldt rex.WRB (bad) sbb xor mov popfq cmp out add scas mov rex.WB xor imul (bad) enterq cmp clc lods push push pushfq test cmp in loopne pop add jge insl movabs sbb xchg (bad) or jae mov mov (bad) cmp mov loope cmpsb (bad) (bad) fistpl rex.WRB (bad) movsb test (bad) jne fwait leaveq cli icebp sarl adc sub movabs cld repz pop jg,pn addr32 (bad) (bad) fwait jp mov xchg mov loop stos iret (bad) xchg (bad) int3 push (bad) sub push sbb loope in and fwait xchg stc fcomip (bad) rex.R movsl fwait pop (bad) rex.WB rex.W add fstpl (bad) adc sti outsl (bad) and lods pop sbbb push je rcll (bad) and stc int pop pop fwait jmpq rex.XB fwait adc rex xor (bad) lods icebp fildl pop (bad) push (bad) fwait xchg (bad) adc sbb jb xor fstpl pop sarb sbb (bad) fwait stos (bad) sbb jae sub gs mov (bad) stos callq xchg sub loop fucomi lret jno (bad) sbb (bad) or movabs (bad) sbb stc lock and test in test fwait sahf movabs rex cmp xchg fs cld sbb lret sub xchg out stos movabs scas mov decl (bad) lods pop fwait repz xchg sti hlt iret divl fwait cmp mov (bad) fwait lcall (bad) rcll or sbbl mov retq mov lret mov ror cli sbb enterq sbb jmp loopne mov cld mov out and lods jg movabs mov jno push lahf rex mov js rex.WX popfq mov (bad) scas pop jae rex.WRXB pushq push sbb leaveq rcrb fcompl jb or rex.RX rex.WRB data16 cmp cmp gs pop imul nop pushq adc data16 xlat xor add hlt lods cmp rex.WXB xor es loope (bad) movabs mov repnz fwait sub cmp add hlt xchg mov sub pop push add pop cmpsb cmp sbb rex.WRB (bad) in jnp fstl (bad) scas cmc jns (bad) in jl jnp cmp sbb (bad) xchg lea pushfq (bad) pop (bad) cld loopne jns (bad) rclb lea leaveq mov movabs (bad) stc sahf push jns in (bad) (bad) fistpl rex.WXB xchg cmp or jle add (bad) or xlat test (bad) sbb xchg addb and (bad) (bad) adc in test popfq rex.WRX cwtl imul (bad) or fstps loope fucomip push js addr32 xlat cwtl xchg insb xchg mov cmc loope js mov pop imul xlat int adc and mov and sbb rex.X outsb fldl jns stc (bad) jno (bad) mov sub mov mov cmp adc mov retq int3 (bad) scas sbb insb rex.RX sti or hlt leaveq (bad) push xchg mov retq insb test (bad) jns sub lret rex.RX mov test scas (bad) mov or xchg addr32 sahf pushq mov repz mov (bad) add (bad) add cwtl or sahf (bad) sti adc add xlat push ds or (bad) callq in and (bad) mov rex.WRXB jp sbb imul fcoms mov push jle stc cmp sbb fstps andl imul outsb xor xchg pop lea sbb pushq and xor pushq iret cmpsl mov jl scas jmpq (bad) adc mov lea push mov pop mov jmpq xor xchg (bad) cmp sar mov rex xor imul mov rex.WXB insl stos in pop iret or (bad) cwtl adc (bad) pop and shll adc idivb mov loope data16 (bad) and jmpq rex.WRXB sub push js rex.RXB or (bad) loop (bad) xor xchg jae cmp push enterq (bad) xor mov repnz (bad) scas movsb mov rex.WRXB and cld rex.WX (bad) cmpsl ds ds (bad) in div (bad) rex.X popfq pushq cltd (bad) (bad) sub (bad) jb testb xchg mov (bad) pop lea mov fsub test mov mov pushfq ja mov xor (bad) mov pop sbb sub cmp adc mov imul fldcw (bad) sub pop fwait (bad) std push mov (bad) hlt movslq mov lods xor sub fwait adc pushq fwait or subb (bad) adc sbb pushq xchg popfq jbe retq fwait or (bad) sahf insb cmp rex.RX (bad) fbld jmpq mov sbb (bad) js (bad) pushq rex.WX in (bad) or add mov mov ja jge (bad) xchg (bad) shrl scas cltd mov xlat movslq repz add cmc mov xchg cmp gs (bad) rex.WR sbb or pop stos xor (bad) mov push imul pushq pushq rex.WR xchg popfq cmp xchg ss mov rex.RB pushq or fnstsw and or lahf jo clc jge pop xchg sub outsl cwtl stos int3 mov (bad) sub (bad) jae xchg (bad) fcompl ja (bad) rex.WRX add out mov rex imul movabs rex.B repz (bad) sti mull rex.X sbb or std xchg rex.WB (bad) jmp fistpl jmpq andl mov test outsb cwtl fcomi pushfq mov (bad) or sahf std outsb rex.RX enterq sbb fs fistl rol mov mov (bad) out (bad) popfq rex.XB (bad) addr32 adc shll cmp imulb cmp rex (bad) ds rex.XB and jae loope add imul mov mov sarl rex.WX jrcxz sub rex.R add xchg jmp shll jrcxz cwtl fs stos jbe fsubs pop jne sbb icebp sbb movabs in pop pop js jb jo (bad) mov popfq sub sahf sahf rex.R sbb pop lret mov rex.X fdivrl retq scas rex.XB xor je (bad) jg add cmc roll (bad) mov test ss out mov (bad) je jge lret test rex.WRX imul popfq cmp pop or lahf add gs (bad) xorb (bad) adcl mov ror xchg mull cltd test mov rex (bad) sbb sbb (bad) int3 (bad) jne in (bad) mov test and loopne (bad) repnz loop push add fwait jmp cwtl (bad) repz ds stos (bad) (bad) hlt (bad) and and add fwait rex cmpl or xchg mov and cs xor pop shl mov andl pop mov fistp fwait mov insb test mov pop sbbl xchg out test add (bad) (bad) js (bad) rorb and xchg rex.RX (bad) repz mov push test fwait sahf adc fcmovu (bad) rex.WR repz es rex.RXB fmull xchg (bad) clc icebp lahf je rex.WRB cwtl sbb push enterq (bad) xchg xor fwait or sbb movslq (bad) add jrcxz (bad) sub cmp loope and xor (bad) lcall fstl xchg fildl fistpl (bad) cmpsb fwait jae and push (bad) sub (bad) fwait out imul jno repnz sbb (bad) sbb out adc movabs sbb mov fdivl and iret movabs and sti rex.W out sbb fwait and pop rex.WRXB mov cmc callq xor je add xchg cli (bad) sahf fisubrl fwait jae cmpsb mov insb jg leaveq add lods lods fwait gs (bad) cmp (bad) xchg es fwait xor mov push (bad) xor mov mov mov (bad) in test fwait cli xchg (bad) cmpsl mov iret test clc (bad) out mov xchg fwait movabs jbe xchg cmpl push fwait mov jp test pop out cmpsl cwtl subl mov mov add test cmp out jmpq cli and (bad) and addr32 movslq mov int3 rex.WXB sbb movabs cmc (bad) sti in fstpl and jmpq jae sub (bad) fs cmc pop (bad) jbe jnp sbb shr ss xor jg es fwait xchg divl lea sbbb mov (bad) outsl imul add clc cmpxchg fwait lods cmp xchg cmpsl adc xchg sbb push (bad) jp mov fwait mov xor (bad) (bad) int fwait ss jnp movsl jae loop cmp mov (bad) jno (bad) mov cs or out add and cmp fwait cwtl mov xchg sbb add cmp imul iret xchg jae imul add xchg sahf cli fwait out xor (bad) cmpsb sub (bad) xchg (bad) or cmp adc cmp test sbb xchg add fwait sub pop mov rex.WB lock adc xchg cltd fwait add mov rex.RB cmp loope xchg adc out insb loopne enterq rex.XB fbstp repz mov fstpl add in adc movabs cmp sub or fistp push fidivl or push jl cmp stos cmp mov pop (bad) fistl cld adc mov (bad) out (bad) fs sbb mov fwait add sbb roll (bad) sub xchg pushfq adcl jmp outsl pop push jrcxz mov (bad) loopne rex.WXB pushfq fwait (bad) out retq jo cmp fwait (bad) or add pop fwait int push (bad) (bad) or sahf fwait xchg orl outsb adc fidiv mov fwait pop bnd rex.RX data16 fldcw (bad) mov movabs mov jmpq or out xchg mov add sbb out stos rex sbb je test and mov (bad) fwait or repz add and mov fwait popfq fistpl clc push jb (bad) pop cmc xchg (bad) add (bad) (bad) sub out mov (bad) jp fwait ja pop (bad) xchg or fistpl rex movsb testb (bad) fildl loop mov cld movslq in (bad) adcl adc xchg jle movabs ds fild addr32 rex.RX iret mov (bad) fwait and (bad) jge icebp scas xlat sti scas adc (bad) mov pop fwait (bad) push mov and (bad) (bad) pop push loope insb jge cmpsb jo or and mov xor jb mov (bad) adc (bad) js (bad) test mov push scas xchg cmp fadd test xor adc sub sub pushq lret (bad) mov test in rex.WXB orl xor push stc and push loope fcmovne rex.R imul sub push fwait cmc pushfq in adc in jns (bad) sbb cltd fwait (bad) jmpq add fwait mov push sbb clc xor rcrl jmp int3 jmpq stos add mov pop setnp pop test mov pop mov cltd pushfq ja clc rex.W sar data16 loop sbb add ds xchg mov adc (bad) mov movslq jmp fistpl (bad) and (bad) (bad) or push fs lret lods fwait cld lock icebp fwait repz (bad) movsb adc pushfq (bad) mov fwait jb jge stos movsl adc and mov and add sbb (bad) lea or imul (bad) (bad) xor lret loop fwait in imul lods add rex.WRXB cmc in fwait xlat xchg pop sub and je mov rex.R fwait mov xor sbb lock pushq out fwait mov jp int test sbb or fwait std sbb jae mov movabs repnz jp mov andb cmp loop cmp (bad) pop add fwait jb loope fiaddl icebp fwait insl fadds mov xchg test movsb lret fwait cmc or jg sbb sbb cmpsb pop out fwait adc mov mov sbb rcrl rex.XB pop push repz (bad) xor or fwait add rex.X retq addr32 out xlat lea cmpsl rorb testl adc insl fwait push add out pushq lods sub enterq xor scas cltd js mov cmp (bad) fsubrl rex.WRXB lret or fwait in push sbb mov fwait xor imul lods loope imul xchg rol lods mov pop fildl and or sti xchg jb (bad) fwait (bad) sbb ds fwait scas sub pushq rex.W cmp rex.XB (bad) jl test je cmp mov add rolb int3 pop addr32 cmpl or push in movsb jb loope xchg (bad) addr32 hlt fwait idiv pop fs sti xor cwtl retq out xlat cltd in cmp fisubl (bad) fadds rex.WXB fwait jmp (bad) mov rcrl fwait rex.WRB sub int and scas cmp xchg jrcxz nop pop cmp fidivrl divl loop movslq fwait and and sub rcl (bad) adc or rcrl push adc movabs fildl gs rex.B fdivr sbb add rex.WRB movabs (bad) insb stos mov add stos sub xchg (bad) sbbl insl xchg test mov out test cmc cli pop xor sahf mov sahf notb mov push fucomi or mov icebp callq rex.WRB jne rex.B lods cmpsl mov int fstpl and xchg and add mov fwait imul rex.WRB and jo (bad) (bad) mov fistpl xchg jle repnz mov movabs int (bad) sbb mov fwait rex.XB jbe mov std pop stos add sub cmp in stos fwait iret sbb xor int3 (bad) mov pop in sub retq adc stos sbb (bad) push enterq imul fwait clc rex.RXB add callq loope mov ss add sarb lahf sarb sahf in (bad) push pop (bad) leaveq add jrcxz fidivl (bad) fistpl xchg lret sti cmpsl sbb jge movslq fnstsw mov pop and cmp faddl rex.RB (bad) pop add lea mov jmpq mov rex.XB jne popfq es (bad) push std xchg (bad) and jae mov fwait callq adc cli rex iret in mov sbb (bad) out add fstpt adc xor adc jp add (bad) (bad) and xchg jns push iret data16 sub gs mov (bad) scas mov sbb fsubp sbb jp sbb sbb test jo mov out sar js (bad) xchg adc rex.WR (bad) lret stc loope rex.WB lods int3 nop sbb adc (bad) ror fwait or (bad) icebp and xchg test pop (bad) fildl movabs std sub lock rex.WXB adc jl fsts rolb sbb insb sub (bad) sbb notl ds callq (bad) (bad) insb (bad) fwait xchg rcl (bad) rex.RB add (bad) push jns sbbl add xor push pop idiv iret test xchg mov jg jrcxz push fwait push adc rex.WRB fwait (bad) sbb movabs jg or (bad) jge rex.R hlt adc js rex.WXB repnz jmp movslq rex.W cs mov xlat cmp fsubrs adc xor sbb add (bad) fnstenv popfq (bad) sti and out mov cmp movabs (bad) out sahf cltd movsb mov (bad) mov xchg sbb mov sbb pushfq movabs shl fwait adc xor jns mov (bad) sbb sub retq leaveq retq xchg cld fwait jg loop sbb cltd movsl xchg or (bad) callq or sbb insl pop fwait test cmp sbb addr32 (bad) hlt shr rcrl stos jnp adc mov movslq (bad) add fwait mov mov jrcxz mov add add adc cmc or or fwait (bad) xor cmp fwait sti movsl (bad) pushq mov sbb xor rolb mov fwait scas jae std lods imul (bad) (bad) mov (bad) stos nop push mov data16 retq mov xchg cs rex jne or or repz (bad) (bad) and lods rex.R repz pushfq scas icebp sbb (bad) (bad) or pop xor (bad) adc sbb fwait rex.WXB (bad) adc xchg fwait loope cmp fmull add or push lea (bad) pop rex.R fwait outsl (bad) or mov pop and fwait sub faddl push shr test pop (bad) fmuls std fstpt jne xor push fwait (bad) cs pushq jmpq (bad) jrcxz stos lret adc cmpsb test leaveq (bad) push (bad) mov (bad) lods sahf int (bad) (bad) push cmp (bad) or je mov and ficoml adc sahf pop pop imul jl ljmp fwait rex.WX nop jp rex.WR fwait retq or subl sahf (bad) sarb movsb fwait hlt lods imull (bad) movsl fwait adc callq sti sub sbb outsb sub (bad) fwait (bad) cmp insl adc out fwait imul retq (bad) sbb fwait retq insl fisubrl sbb mov (bad) sahf cmp (bad) mov lret sub fwait xor xor outsb fwait nop jge (bad) mov rex.WXB imul push (bad) xchg sbb fildl cmp and add pushq mov cmp movabs in sbb ja fild xor ss cmc xchg loopne out or add lods test (bad) movabs mov mov xor pop adc push ds fbstp mov fwait jge jg (bad) rolb fwait rex.WRX loop xchg mov (bad) testl gs lock (bad) rex.WRX cmp pushq mov mov clc xor jae callq lock (bad) loop mov cmpsb (bad) xor (bad) xor jae (bad) stos lods pop sti add pushfq xchg loopne (bad) fwait rex.WB fisubl xchg sbb add fdivr (bad) xchg pop retq fwait xor pop rorb (bad) and sbb fwait add xor (bad) rex.RXB fwait stc test mov sub jp,pn and fs fistpll push sub mov fdivs movabs push add repz fwait adc imul mov (bad) mov (bad) rex.X xchg xor lods sbb pop pushq pop movslq scas mov jl add pushq iret icebp add pop sti ds cmpsl push (bad) fistpl (bad) rex.W rcr xchg or and out sub rex.WR sbb rex.WX xlat mov jp xchg subl cltd cmp jmpq mov rex.B sbb fwait (bad) or sub sbb add sti pushfq stc test add fwait cltd fiaddl int (bad) adc retq test add push xor mov fwait sbb insb fwait rex.RX lea cmp es mov xchg add flds sbbl cmc sbb (bad) pop (bad) xchg movabs sti nop ljmp out cmp (bad) add es jge out lret sti stos rex.W cltd xchg (bad) adc (bad) sbb add (bad) movslq lea pushq jle (bad) pop pushq and adc nop scas or fwait mov scas (bad) leaveq fucomi nop pushfq add and mov sbb (bad) sbb fwait cmp out rex.WRXB sub rex.WXB fwait xor fdivr out fcom popfq pop out sahf adc jmp (bad) adc stc push (bad) sbb je mov (bad) adc lods (bad) loop subl test je movabs push fwait jl jne test (bad) mov in sbb sub std rex.RX fwait jnp nop rex.RXB mov pushq (bad) mov or mov add jmpq es mov rcl callq jo rex.WRXB sbb jp test js imul rex.R sbbl sbb sbb fdivr pop popfq adc (bad) mov xchg repz repz rex.WB rex jge neg pop movsl sbb sti xor sbb rcrb jrcxz or lret (bad) cwtl fwait mov jl rclb fwait pushq rorl rex.W add gs cmp imul fsubl int js loopne (bad) sbb pop ficomp rex.R stc xchg fwait push sub notl (bad) movsb mov (bad) (bad) out sbb fwait test imul loope out rex.WRX rex.R fwait cmp add sahf int sbb or adc adc (bad) (bad) fwait test rex.WXB mov push mov test xlat faddp jae repnz fstps adc xlat (bad) cli push loope test fwait mov xor cmpsb adc stos jle sub (bad) fwait cltd rex.WRXB (bad) mov decb xor adc rex.WR add fwait outsl pop jmp gs fwait xchg xor mov test movabs xlat jno (bad) lock jrcxz clc (bad) fwait stos fldt sub out (bad) or pop xor (bad) lock sti add mov jle or rcrb fisub (bad) (bad) psubq mov jns adc (bad) rcrl ja enterq sarb mulb (bad) fwait ss rex.WX (bad) sub jnp sti stc xchg jl out adc jmp xor int rcll (bad) add lock rex.WRB add xchg pop imul sbb jae out popfq rex.WR cltd mov fwait jl adc rex.WRX pop imul icebp movabs sbb rex.X xchg and imul rex.XB sahf fildl fimull (bad) (bad) mov xor repz cmp cwtl (bad) mov push cmp (bad) fsubl mov outsb cmp jbe xor pushq and sbb mov ficompl pop retq addl push int (bad) and ss sbb out pop xor xlat rex.RX retq sbb rex.WB insl loopne enterq push jnp (bad) xchg rex.RXB sahf fnstenv xor fbstp cmp jmpq or enterq (bad) fimull (bad) cmpsl xchg mov pop rex.XB cmp and mov lahf mov rex.B pushq pushq push sbb add (bad) cltd or push or sbb enterq ss mov xor (bad) scas loopne mov mov jns pop cmpsl stos rex.X mov mov cmp mov rex.RX mov and (bad) and out adc sbb (bad) pushq ficomp adc (bad) mov pushq jle add outsl or pushfq cltd and popfq xchg outsl xchg sbb pop loopne sahf pushq fcompl (bad) xchg (bad) rex.WR mov sbb test xchg rex.WXB (bad) pop sbb data16 push add and pop test sbb (bad) mov jge (bad) shl es sti mov rcrl or repz and cmp rex.RX (bad) add rex.WX sbb and cwtl js and idiv adc (bad) hlt xchg rex.R or sbb fstpl rol mov fiadd pop xor or pushq mov adc mov mov or (bad) pushfq rex fwait stc (bad) std imul (bad) rex.WRB adc mov jl movabs hlt pop sbb xor mov (bad) fiadd and mov and (bad) jmp jnp lret stos (bad) divb rex.R iret fwait xchg rex.RB push jp push (bad) sbb sbb stos rex.WRX or (bad) sahf lock (bad) adcb xchg mov mov ffree rex.RX cs sti (bad) or stc fwait shrl (bad) fwait cmp or xchg or stc add add xchg xor sbb fwait xorl cltd pop je retq fwait cmp test stos xor dec jae fwait mov movsb fwait xchg out adc leaveq rex.WRX es (bad) sahf clc mov add divl int3 enterq sbb loop cmp stos rex.X icebp rex.RB fwait push imul loope adc sbb fwait (bad) jns sbb add movslq fs movsl stc lret movabs cmp mov (bad) jl out and cltd add sbb pop jmpq add pop cld jo fwait mov jg or sub ds (bad) (bad) cmp fwait je push movabs sbb jg jmp push cltd (bad) pop in jrcxz hlt fwait js add in rex.B jb sub in rcrb adc rex.WRB in or and xchg mov mov jae or mov fisttpl mov jb in sbb mov shrl cmp sahf fsubs mov (bad) lea sbb adc mov test icebp jl hlt out (bad) sbb (bad) xor mov cld xchg xchg out or fwait outsb mov xchg scas add fwait mov and sti cmp mov mov adc adcl or lret and imul mov adc sub sahf cmpsl imul or mov mov subl sbb rex.R cwtl lods movsb fiadd mov adc jmp callq (bad) bnd jp (bad) xor test xor movabs (bad) enterq mov sub clc mov pop rex.WRB rex.WRXB rex.WRB rex.RB sub cmp fwait push rex.WRXB (bad) push mov (bad) popfq jo scas xor addl movabs (bad) adc test mov adc push pop jo and fwait mov (bad) sub (bad) rex.WX sbb add xchg fwait rex test pop or (bad) sub sbb mov (bad) pslld (bad) callq mull (bad) and (bad) mov (bad) (bad) mov adcl stos loop rex.WRX insb mov add mov sbb lret sti shlb adc rex.WRB mov testb scas mov (bad) (bad) popq leaveq (bad) sahf fwait mov (bad) lods xor (bad) (bad) fwait js icebp fidivrl (bad) lods adc nop clc popfq or mov ss rex.R loopne (bad) fsubrp sahf std or addl fwait movabs callq (bad) mov push sbb mov loopne fwait ja movsb lock hlt rex.XB fwait sarb and (bad) addr32 add movslq clc xchg xchg stc xor fwait (bad) lea push outsl or scas push adc xchg scas push data16 xor rcrl xchg movabs loop fwait mov cwtl cld in out rex.X repnz gs mov sbb stos out sub pop push mov pop rex.X and ficoml ficomp sbb std lock xor faddl popfq rex.X insl in insb sbb callq pop (bad) or sbb cmp (bad) scas sub rcrb je fwait xchg (bad) (bad) insb ror retq xchg fwait pop (bad) jnp jbe and adc add xlat jrcxz fwait neg rex.WRB movabs int loopne fwait (bad) (bad) ja push js imul add movabs (bad) or (bad) push (bad) fcoms mov xchg mov mov data16 pushfq nop (bad) fwait sarl fnop outsl xchg add pop jle or fstpt mov jbe js cltd iret sub add iret cld cs imul (bad) fwait push rex.RXB push rex.WRXB and adc xchg (bad) mov test iret sub (bad) stos lock rcrl (bad) movabs and mov (bad) mov mov or scas xchg fwait rorl hlt and (bad) fidivl jge jo xchg lea pop (bad) jmp jrcxz sbb (bad) sahf (bad) mov jno data16 outsb je fwait or mov cltd (bad) (bad) sub rcrb or fwait sub out (bad) mov adc fwait sub js pushfq (bad) xchg subl testb fs movabs cmp fwait and rex.WB in (bad) push jmpq stc (bad) hlt jmpq iret and je rorl mov mov add sbb callq pushfq std (bad) outsl cmp rex.RX rorl mov mov lock jrcxz rex.WRX fwait insl and or bswap (bad) mull mov rex.W lret (bad) mov test fldcw adc xor fisttp (bad) movabs lods mov insb cmp mov push cmpsb enterq rex.XB lahf mov add fsubl loopne retq cs (bad) fldt or xor cltd xor pop fucomp add fwait cli retq (bad) sub rex.XB stos jae jnp mov fisttp xor loopne movabs add ds ds hlt out pop imul add fbstp lret jo movsb cwtl stos fwait jg sbb and lock and or gs xor xchg (bad) fwait rex.RXB scas jmp rcll (bad) pop sahf sbb sub mov jle roll repz int jge lret repz pop adc cltd rex.XB mov mov movabs add rcr int3 mov (bad) jae xchg fwait sbbl fstps sti (bad) int cld mov pop add fild sbb outsb scas cmp rex.WXB and rex.WRXB lret sbb sti and adc test pushfq rex.RB fnop rex.RX es add ja jb rex.WX add sub pop insb cmp in incb sarl andl adc push rex.WRX mov fwait jge rorb fadd fwait pop rex.WR shll (bad) mov xor or fwait repz stc sbb xchg adc fwait and rex.R rex.RXB adc sahf insl push jge cmc add (bad) mov cmp pop int (bad) enterq (bad) mov sbb movabs sbb movsb sbb std mov repz fcompl jp (bad) xchg movabs test fwait pop stos fnstsw outsl ss fwait clc (bad) rex.WX fxam test hlt (bad) jne movslq fwait (bad) (bad) (bad) out rex pop retq pop rex.WRXB (bad) and add pop rex.WB fwait pushfq xchg stos insl xor fsub sbb (bad) es mov rex.RXB stos nop sub adc fwait or push sbb ds pop popfq adc pushfq sti mov rex.X (bad) sub movsl jge repz (bad) in (bad) fwait add lret fwait sbb rex.WB jp pushfq xor rex.WRXB mov adc xchg xchg stc jge cmp (bad) (bad) rex.WRX mov mov fistp test xor rex.RX sbb cmp rex.WR fwait (bad) lret stc rex.WRB sbb mov sbb rex fcompl sbb push fs mov pop (bad) pushfq xchg add (bad) sbb fwait cwtl shrb insb rex.WX fwait std lods mov fwait loope cmp movabs lods pushq popfq test lods sub (bad) or push fs std rex.WX xchg lgs popfq (bad) push push ficompl adc pop (bad) test movabs lret or (bad) adc mov xlat popq rex.WX fstpl cltd iret out cwtl sbb pop (bad) retq faddl push mov cwtl sahf and sbb cltd callq jle xor fidivl pop jnp xchg retq fisttpl or adc mov hlt pop movabs movabs xchg cli mov xlat pop pop xchg adc pushq fstpt stos cltd (bad) shr fstpl neg in idivb adc mov out jg and pop pop (bad) out rex.WRX sub mov pushq pop adc test xchg loope mov sub xlat sub je adc (bad) cltd xlat jne movabs js jae movabs add (bad) (bad) pushq rex.WRB xchg and or or cmp xor (bad) cli cwtl cmpsl or pop add mov mov scas fiaddl sub push (bad) sbb jle and jno rex.RB fwait sub add imul mov jbe sbb movabs outsb icebp shl push (bad) sbb jns rex.W cmp fistl sbb andl pop sti sti popfq (bad) cmp sbb (bad) (bad) add pushfq jle cmp xchg jae popfq cld in push je (bad) (bad) jp imul fwait cwtl out push addr32 mov push adc sbb xor sti stos rex.XB divb mov (bad) (bad) (bad) mov (bad) (bad) adc rex.WB outsl (bad) add (bad) lea (bad) (bad) rcr xor in loope fwait vandps movabs (bad) insl jge test sub cs orl (bad) stos cmp mov rex.WXB mov xor movabs outsb testl mov movsl sub movslq or xor and jmp sbb sbb cld mov fwait jbe scas sbb (bad) and xlat sub loop sbb ds mov popfq out movsb scas (bad) cmp rex fwait cld rcrl (bad) mov jmpq (bad) mov xchg stos gs add fwait mov pop (bad) rex.X pop fwait push sbb retq sub and jrcxz pushfq (bad) std xchg notl pcmpeqb cmp rex.X lods pop loopne mov push (bad) mov (bad) add (bad) mov sar jl (bad) or fistp mov mov cmp add pop pop popfq test push jl iret mov rex.WRX mov subl sbb mov lods mov (bad) clc outsl fisubr or sub popq rex.X cld sub outsb xchg rex.B repz lods mov (bad) mov mov mov and rex.WX adc push (bad) mov es mov adc mov mov cmp sbb dec cwtl loop xchg (bad) in or (bad) jle retq (bad) (bad) and sub (bad) rex.WX repnz fstl xor or xchg adc sbb or add (bad) addr32 stos divb outsb jns (bad) fstps imul mov pop push or mov pop rex.XB repnz (bad) pushq jae xor and rcrl cmpsl movabs rex.RXB sbb push sbb xchg pop adc out out or scas pop insl sub xchg movabs gs rep (bad) lea mov jns cmp mov fadd push sbb (bad) (bad) xor (bad) fnstsw adc cli or jrcxz (bad) pop mov xsha256 cmpsb xchg xor add leaveq adc cmpl pop xor pushq push lods xor ds test jns repnz sub mov sbb or push push add xchg sbb pushfq and cmp pop xchg and out xor add negb fwait xchg rex.WRXB jg fwait (bad) jmp add rex.WRB mov movsb test stos mov fwait out movslq xor sbb fwait std jnp (bad) jmpq outsb cli (bad) mov stos mov movabs (bad) lret ja xchg (bad) pop imul fwait push jae ja insb rex adc nop fstpl cwtl (bad) sbb fwait mov adc insl lods fwait sub pop rex.WRB xchg mov rcr rex.R in and nop and cmpsb std fwait jecxz adc rex.RX fwait insl mov (bad) xlat fwait movabs xchg fs nop jp xchg xchg lret (bad) jle xor movsb in iret (bad) scas pop in jmp (bad) (bad) sbb or mov lock lods xchg fwait iret mov nop (bad) movslq add cmpsl add xchg repnz sub int pop xchg push and in and out and imul mov push (bad) adc push popfq stc xor adc cmp out lock std and or out popfq scas idivl imul in test inc (bad) (bad) cmp fsubrs mov fwait push decl sbb cmp mov (bad) cmp insl loop and int3 iret jg or repz pushq (bad) movabs (bad) lods cmp fdivrl push add cltd std add sbb in iret int3 mov std xor divl rex.R cmp (bad) rex.R (bad) mov xchg (bad) pushfq push movabs rex.XB sbb cmc jne sbb (bad) icebp or add rex.WRB or popfq rex.WX xchg xchg sahf or fucomi (bad) lods and xlat (bad) test add pop mov sbb test (bad) fs mov and (bad) pop cld xchg xor fld1 (bad) repz adc fwait jae push insl jp jnp fwait and out fldenv sub sbb rex.WRB sub pop ja (bad) (bad) movsb adc int3 out movabs pushq outsb add pushq (bad) fcoml and es and pop (bad) sbb xor (bad) rcll fcmovnu mov ficompl (bad) jmpq (bad) rex.WXB jae (bad) repnz xchg jg push fwait jno (bad) (bad) lret mov sti sbb out (bad) (bad) lock movslq (bad) push rex.WRXB not (bad) xchg outsb cltd xchg test int and sub sub or mov fiaddl (bad) retq push mov outsl rex in adc fwait mov cltd nop (bad) xor ds (bad) xor add fsubs in xor jne adc pop push pushfq repz neg mov sbb xchg (bad) (bad) ds rex.WR rex.RB mov (bad) add xor fistl mov stos fwait jmp cltd cs idivb jl fwait out and add (bad) pop jrcxz (bad) jns adc and (bad) xor fwait int3 (bad) retq rex.WRB addr32 jrcxz xchg movslq sub sbb imul add pop fwait (bad) imul sbb and add icebp (bad) fistpl pop in mov callq sbb xor pop int leaveq jl rcr std lret flds sub add xchg mov jrcxz push (bad) rex.XB or add movabs (bad) pop and out fmul rex.RB and shll mov (bad) rex.WX jmpq sub pop mov jns cmp xor adc shll rex.RXB xor xor (bad) sbb adc xor fmulp repz lock or jo rol xchg cmp out xchg push movsl pop mov mov imul (bad) lret ss (bad) pop test mov sbb (bad) mov test cwtl movabs enterq (bad) xchg (bad) mov scas out fwait jg sbb popfq jrcxz mov sbb sub retq idiv cmp xchg adc fiadd (bad) cmp rex.XB data16 int3 jle mov lret out mov insb and mov cld test jrcxz pushq sarb es pop add mov movabs add (bad) push (bad) (bad) mov mov (bad) std ds rex.WX repnz (bad) stos cmpxchg testl add lahf pop and sbb pop jrcxz fildl and mov fucomp fwait lock notb int retq and lahf push mov jne loope hlt sbb (bad) sub mov jl mov sbb ss ffreep (bad) fcoms loope rex.WRX xor adc pop sbb movabs rex.WXB loop xchg mov xchg push rex.RX sti lock cmp (bad) sub pop adc fwait jo sub imul mov js pop outsl add xor fistp add mov scas sub enterq fstl jrcxz test movabs (bad) rcll fsts test ja in push movabs xor mov mov cmpsl nop popfq lret xor sbb adc (bad) pop or popfq cwtl popfq cwtl rex.B lret loopne bndstx jrcxz sub repnz nop sbb fcmovnbe mov pop pushfq mov rex.X fstp and out sub test (bad) (bad) jmpq jns adc sbb cmp sub (bad) cmc (bad) out sbb xchg in fwait adc cmp sub (bad) sbb out fcompp or xchg js mov xchg jg lods sahf jns xchg repnz sbb js push movabs int xor (bad) scas jl sbb pop int mov rcll (bad) mov lea mov (bad) (bad) rex.WRX xlat repnz jmp lahf (bad) (bad) (bad) rex.XB cs adc sub push pop adc xor fisubrl add lods insb cld repnz mov cwtl sbb (bad) xor movabs mov mov mov sub es adc mov mov rex.WX mov pop cmp fdivrl testb iret xchg (bad) adc rex.WB push (bad) fistpl jo mov fcomip pushfq mov (bad) repnz mov rex.RXB rex.WRB pop test (bad) sub pop mov mov fldenv loope rex.RXB data16 in (bad) and (bad) sbb ds mov in xor rex.WRB adc adc movslq add orl mov xchg or mov pop rcrb fcmovnbe hlt mov leaveq shrl mov jrcxz clc lods rcll push rex.WRX sbb xchg sub (bad) adc jge (bad) imul rex.RXB outsl jp sahf stos stc add mov (bad) cld movsb cli rex.WRB rex.WX mov sbb in insb adc xchg pushfq pop and jne (bad) (bad) jbe retq push xor loop iret add stos pop jrcxz movsb cmp or addr32 movabs int3 sahf sub jg orl fsubs fnstcw loopne xchg (bad) retq loope xlat sub xlat cwtl adc loopne rex rex.XB nop sub rex.WRXB fidivl (bad) mov rex.RXB xor xchg sbb sti mov jl sahf shll out rex.RB and test sahf loop (bad) xchg xchg sbb sbb mov pushfq jns xlat rex.W mov test mov (bad) cmp add pop rex.XB loopne movabs lea or add ss fcomps and push (bad) xor adc pushfq in jmp mov fnop iret (bad) pushfq mov fstl and sub sbb sti fstl fistp push rex.WRB mov fmuls test sub (bad) add push leaveq xchg mov xchg rex.XB ss pushfq sub xchg or xlat xor pop mov fidivr lea adc or fmull pop out popfq sbb rorb pushq enterq in in jg (bad) cwtl jnp loopne rex.WRB jns (bad) (bad) sbb sbb (bad) or (bad) jrcxz mov mov pushq popfq push push mov xchg mov sub (bad) mov jns ss fildl (bad) xor sar scas pop nop (bad) sbb (bad) mov lock sbb faddl (bad) in (bad) mov int je rcll xchg mov sahf add (bad) (bad) clts mov xchg adc push xchg rex.WRB pop insb or shrl (bad) mov xchg jne pop fldcw mov mov jo (bad) xor test out mov lret rex.WX cmpsl pop stc cmpsl rex.WRX (bad) rolb mov cmp pop jle mov (bad) add xchg lods sub sbb (bad) pop rex.WR lea sub push pavgw pushfq int3 cld sbb mov testl cmpsb mov fwait movabs movabs stos xchg xchg adc cltd fwait pushq sub pushfq xchg jl push pop (bad) ss (bad) xor (bad) gs jnp and mov lods rcrb stos scas jle retq (bad) (bad) sbb jmp ficomp cmpsl mov stos fwait add rex mov (bad) imul (bad) loopne sub hlt (bad) sbb lret stc loope (bad) sbb sub push repz mov xchg fbld je imul jne cmp (bad) fildl (bad) sbb fistpl cmpsb movabs fwait xor fistl cmp sub xor xlat rex.RXB repz fsubs mov movabs jae jo movabs fwait out xor in movslq fwait lahf rex.RX jle (bad) hlt test rol (bad) rex.WRXB test enterq roll rex.WR movabs (bad) mov add push (bad) js int pop mov sti fmull movabs and cmp rex.WB sbb rex.RB rex.WRXB jbe stc in nop adc push (bad) add rex.XB (bad) mov rex.WX enterq sbb or scas scas sbb cli data16 lret insl xchg xchg sub mov js idivl fwait xchg mov or rex rex.WB sub scas mov jb sbb retq jae mov stos or outsl rex.XB rex.WRX scas lret mov mov lret (bad) (bad) cmp lea (bad) cmp push xchg lock (bad) cli xchg pushq jae movswl adc rex.WXB (bad) rex.WX fwait mov xchg hlt movsb fwait cmp test sti add jne rex.B fidivl jg mov callq and data16 adc iret sub sbb push adc jl rex.WXB push mov jns jl lods imulb fwait rex.WX in fwait stos shrl adc mov repz fwait xchg push movabs xor (bad) sub ds (bad) mulb retq and pop (bad) adc add test mov rol cmp (bad) sbb sbb jmp (bad) test int3 jle (bad) (bad) orb fcomi pop (bad) rex.W rex.RX fwait test rex.WRX repz sbb xchg movabs fwait (bad) movsl icebp rex.WXB fwait cmp retq (bad) pushfq and xor fistl cmp movabs jrcxz adc scas callq (bad) fcoml sub repz rex loop in sbb rex.WRB (bad) fwait test cmp lcall retq jne lock cld fwait outsl xchg sub rex.RB enterq pop sbb mov out in cmc jno rcrl orl and negl mov mov adc cld rex.W sbbl mov (bad) jrcxz fwait pushq push cmpsb xlat or add sbbl rex.RXB cs push mov in out pushq push (bad) xchg rclb (bad) cwtl (bad) mov jns mov scas mov push cmp jl add cmp (bad) sbbl mov and imul test in sub xor jge stc cmp movabs stos stos sub adc popfq pop ja sahf fadd lods cltd pushq (bad) jae pushq add jl insl test jge pop jle rex.R int adc je pushfq jle sbb scas (bad) leaveq imul jmp (bad) and push (bad) mov (bad) orl cmp xor adc sbb sbb stos lea in movsb or scas xabort sbb xchg (bad) imul cld xchg and rex.WRXB mov sbb or movabs cmpsl (bad) cltd xchg jbe in sub outsb xlat out add cmp mov and jb (bad) mov outsl sbb int enterq and pop (bad) fiadd shrb (bad) loop adc cwtl xchg xor cmp int3 rex.WX lret rcrl xor add xchg pop movslq retq out pop sbb xchg cwtl movslq jrcxz (bad) pop frstor cmp (bad) xor (bad) fcompl lahf enterq ja pushfq (bad) (bad) pop mov sub (bad) retq cmp and mov pop ss sbb test sub xchg out xchg imul push xor imul mov imul jge pop movslq insb (bad) addr32 mov addr32 mov xor fldenv mov pushfq pop shl cwtl mov sub adc jp xlat iret clc pushfq mov (bad) and jns imul sete xor and xor or jle rex.RX sbb xor jbe xor sbb scas sahf xchg in cwtl sbb jmpq jbe xchg sub mov push or loopne mov je push mov sbb movabs xchg mov push sbb jno rex.WRB cmp shrb in pop mov (bad) lods mov (bad) (bad) or xchg fwait pop (bad) (bad) scas (bad) rex.WXB sbb int out xor test mov in std and xor outsb sbb pop int mov xchg fildl rex.WXB or adc icebp pop loope xorb (bad) scas cwtl jbe es xor cmp out fdivl jbe movslq jge add jbe icebp jns orps jle xchg xor or pushq xchg rex.XB jns (bad) adc mov push sub or mov int3 rex.XB jno cmp xchg int sahf cmp sbb pop push (bad) push rex.WRB (bad) in mov pop mov fcomps je cmp rex.W fwait mov (bad) outsb adc cmovge sbb pop movabs rex.XB stos xchg jbe mov rex.X ficom cwtl (bad) out push xor (bad) in cs gs ffree jo imul xchg cmpsl fcmovu sub (bad) rcl (bad) divb je add and ss sub pushq (bad) ficomp in xchg negb mov rex.RXB (bad) jb push cmp (bad) sbbl mov push (bad) mov rex.WRX es lret popfq (bad) xor icebp shll sub js ss push movabs iret test or sbb rex.B addl sbb loope add shll (bad) jb js mov rex.WRX fwait mov scas movabs xchg mov in je mov rex.WB fsubs fwait mov or fwait xchg sub or sub stos fsts adc (bad) mov (bad) jle fninit jge sarb popfq fwait mov mov fcompl adc (bad) or xchg roll cmpsl cmp fdivl orl xchg and sarl test (bad) rex.XB mov out and mov jne mov retq out fwait xor std fisttpl sbb and mov int adc fwait sbb (bad) xchg (bad) jrcxz fwait lock mov cs js xchg jae rcrb add out jmpq fwait int3 jns (bad) rex.WRB data16 xchg mov jmpq test xlat mov xor xchg pop (bad) xor mov cmp mov stc and movsl adc push movb mov (bad) retq gs xor (bad) mov xorl xor mov scas nop add hlt mov push rorb cmp xchg mov (bad) jb adcl je scas out adc pop icebp pop test retq int3 decb retq mov (bad) xor sbb movabs mov jnp test push lods cs adc mov adc sti cs mov test xor sbb mov mov rex.W pop nop data16 cmc cltd xchg (bad) psllw mov (bad) imul fistl cmp loope sub (bad) or (bad) (bad) mov fdivrp movabs mov in (bad) sub retq pushq ds xor sbb data16 pop callq push pushq movabs andb cmpl pushfq or sbb cmp push cmp sti (bad) pushfq jnp shrb sub jg out nop (bad) sbb rex.WB rex.WX addl stc (bad) push cmp movslq adc xchg (bad) sti movabs ja ds cmpsl (bad) jge out xor movsl imul push cld movabs sub hlt sub jne push jp adc shrl add rex.RX and add sbb lods (bad) pushfq and xchg xchg push sbb pop rex.B lea lods fstl sbb xor adc jle retq mov jb sub sbb mov cmp sbb mov xlat jge sbb rex.RB scas (bad) (bad) push std cmpsl clc pushq (bad) fldenv scas or mov pop rex.WB fwait cmpsl movabs mov (bad) xor (bad) push adc hlt sbb rorb lret roll loop mov sbb mov jl pushq jmpq scas (bad) fs and xlat jns pop xchg jle xchg js pcmpeqd in adc cmp push (bad) sub pop pop mov imull fcmove pushfq xchg loopne (bad) insl jmp enterq xchg xchg pushfq jo sbb retq sub rcl sahf rcrl pop lods (bad) sbb and ss cmc in lret add pop mov (bad) (bad) sub test mov mov adc retq cld or (bad) fdivs pop adc cmpsl leaveq mulb sbb iret sbb sub hlt mov sub (bad) xor movabs outsl jmp sbb adc mov rex.RB or jae insb jne (bad) jns mov pop and lea fbld (bad) (bad) xrelease mov rex.RXB mov (bad) xchg int3 sbb imul pop mov pop (bad) add repz jbe out mov rex movabs rex rex.XB rex.X or scas (bad) adc mov adc sub sti negl rex.R lods cmp scas test mov (bad) adc sahf sbb mov int fs mov push stos stos jnp or mov jl rex.B out out je xchg test ss repz (bad) adc rex.X fwait (bad) jg mov sbb and fwait xchg fmull xchg rex.WX sbb and clc std retq jmp scas andl mov fwait iret enterq sub fwait lods adc jno fwait pop fs outsl cmpl or xor jmp push insl fwait cmp rex.R test pop fmull in rex.XB fwait push pop sbb gs rex.WRX rex.W sbb rex xchg pop cwtl rex.B fwait (bad) (bad) pushq test (bad) pop fwait (bad) stos or adc cs xchg popfq mov (bad) callq cmp pushq (bad) sahf cmpsl sbb mov sub rorl mov mov sub movabs xor sbb bnd xchg mov stos sarb pushq lahf mov mov rcrb ja cmp rex.WRXB rex.WRX or mov andl push ds rex.WRX sbb (bad) mov xchg (bad) fcoml gs (bad) mov (bad) xor sub ja jbe nopl xchg loop xchg (bad) sbb outsl or iret rex.WB (bad) (bad) pop mov (bad) fdivp cmp lret rex fs rex.B rex.WRB pop out mov movslq shl retq retq mov mov or (bad) rex.WX in in mov adc (bad) clc adc rex.RB sub (bad) mov cmp mov leaveq lods jle sub out mov pushq xchg (bad) mov ds mov retq mov data16 push jne push stos data16 movslq push cli mov rex.RX es pushfq xchg jrcxz fdivrs mov xchg sti xchg idiv mov mov lods out insb adc adc pop mov mov mov jge lods cs pushq push (bad) adc movabs movabs adc cmpsl adcl adc imul fcomps jge data16 repz sub xor lret nop mov push movabs (bad) sbb mov mov pushfq pop sbb and pop pushfq or jb retq lahf mov in jl mov test (bad) mov imul sbb rex.WRB nop fcomps and cltd jo cmp fcomps hlt jmpq out mov test sti cld ficomp adc fnstcw xchg xchg sbb add rex.RB sbb pop (bad) shrl rex.WRX rex.WRB add nop cmpsl shll mov xor mov rex.WB idiv cmp xchg sbb notb pop movsb ss push (bad) retq add mov cmp jne push sbb mov pop shrb mov (bad) adc movabs fdivrl popfq lahf pop jmp es xor xchg sahf (bad) popfq ljmp sub (bad) cltd (bad) fsubrl add jg or xchg std mov imul mov (bad) xchg stos mov mov push adc xlat leaveq (bad) (bad) jnp rcll fdivrl imul (bad) mov int3 imul cmpsl jg rex.WRX popfq (bad) mov push jmpq cmp xchg popfq mov xchg iret xchg (bad) movslq pop stos (bad) test xchg xchg pop fistp mov xchg lret push xlat jl adcb rorl callq movabs or pop cmp (bad) adc repz mov hlt out rex.RX js xchg (bad) imul jrcxz rex.RXB fs mov xorl pushfq cmp sbb mov xor xchg mov lods pop rex.WXB xor (bad) out addr32 mov (bad) (bad) jge lods test jl rex.RX sahf rolb mov xlat adc mov cmp (bad) clc movsl lock in xchg fild rcrl xor bsr pop adc imul pop mov out pmullw mov cmc sub lea sbb mov pushfq movslq adc cmp (bad) mov retq or fmull (bad) je imul mov out jge movsl add jp (bad) loope (bad) jg out jne cs jne rex.XB push rolb mov pop xchg sbb movabs pop adc mov jns xor push add outsl divl mov adc cmp xchg (bad) movsl pop or sbb push (bad) (bad) in sahf xchg sbb (bad) nop pop (bad) (bad) sbb mov xchg adc mov xchg (bad) sub (bad) in lea adc (bad) clc mov test addl mov rex.W xchg ja mov mov adc sahf scas pop add xchg movabs int and push mov lea sahf cld movabs mov sbb pop push xchg cld sahf int3 test or mov adc cltd xchg cmp mov push add callq sbb sbb movabs stos pushq in loop add jo cmp mov xchg add jl add ss (bad) mov xchg mov sarl sbb fisttpll xchg mov jmp rex.R mov and jno xchg je jo callq pop rex.WRX pavgw lea xchg mov jg (bad) mov paddusb jmpq scas jge (bad) (bad) lock jnp (bad) fnstsw (bad) cmpl (bad) (bad) adc cmpsb cwtl (bad) (bad) fistl and cmp mov add rex.WRB mov push stos out cmp es (bad) movsl fstpt movabs xchg or adc mov rex.WB nop xor outsl (bad) push rex.WXB xchg add adc or add add sbbl cmp stos jrcxz lods xchg xchg sub sti jno pop adc scas (bad) mov add fucomp jmp icebp mov add imull adc xchg lods and mov jbe add enterq xchg out mov scas add xchg fdivr leaveq lods (bad) out (bad) movslq ljmp pushq fsub pop cmp pop (bad) out xchg js add (bad) in mov not mov subl stc pop js adc hlt sub movsl (bad) (bad) ss sbb (bad) mov movsb push fisttpll stos xchg insl (bad) jnp mov fadd mov lods pushfq cltd cld lret (bad) mov callq xchg sbb xor cmpsl pop add mov out adc mov or out rex.XB rex.R mov fsub adc mov cmp jl rcrb (bad) fildll repnz rex.WRXB adc xchg ss insl pushfq cmpsb push outsl xchg mov (bad) in sub fidivr vminps pop (bad) ja rex.B enterq (bad) rex.W es xchg addr32 cmp fstl sarb test int mov sub sbb cmp loope movabs xchg pop fldt mov rex.X ficompl (bad) scas in add mov subl add cmp add jrcxz retq xlat scas pop (bad) loop rex.W pushfq imul cs and adc mov sub sbb or movsb es (bad) subl sahf cmp xchg vucomisd push cmp in sub (bad) sahf in mov sarb cmp cmp (bad) mov cmpsb sbb pop mov mov sbb push js retq (bad) mov shld (bad) xchg (bad) sbb rex.WR cwtl stos icebp imul xchg sbb repnz movabs fildll mov push and sbb popfq adc mov andb xchg pop jmp jno pop movslq (bad) fs nopl loop or and xchg rcrb pushq jmpq and sbb sbb cmp rex.WRB fnsave cld lahf mov mov rcll sbb mov xor callq (bad) iret add rex.WRX mov mov mov or cmp repz fsubs push mov or mov adc movslq sbb (bad) (bad) xlat outsb sbb loopne rex.WB (bad) mov pop xchg lahf mov negl xchg fwait imul mov mov ds pushq in push sarl jle sahf mov in sbb rol nop push jrcxz int3 rex.WB xchg cld jge in fcoml xchg pop int decb jb mov cmp loope (bad) rex.R adc sub ficoml sbb mov fcomp cmp add shll xchg adcl sbb mov pop cltd (bad) (bad) rex.WRB xchg fisttpll mov sbb mov push add repnz rex.WXB ds sti cmc movsl sbb retq callq out ss movsl mov push sbb cmpl xlat stc and xchg (bad) shr add popfq sbb cmpsb xchg xchg add mov xchg xchg adc xor (bad) nopl (bad) adc movswl xchg xlat (bad) and push (bad) mov (bad) mov mov xchg mov and xchg insl add jge xlat pushq cs (bad) (bad) (bad) shll (bad) sbb cld (bad) add cmp or add mov adcl rorl adc in mov pop mov je fsubrl sarb mov xchg movsb sub out (bad) movsl xchg (bad) popfq cwtl cmp in test xchg cld out fldl cwtl out adc rorb (bad) es mov jb mov sub (bad) js jrcxz scas jmp jns mov fnstsw lret jne pop (bad) scas cmp lret scas (bad) rcrl xchg cmp sti jno mov mov xchg rex.WRXB (bad) sbb rex.X xor jp cwtl jrcxz xchg fild or rex.X es jno movabs loopne repz movsb rex.RX (bad) lret rex.RB movabs jmpq mov cltd movabs xchg rex.X xchg adc pop xchg mov mov xchg jmp out push jp (bad) xchg divl xchg lods jae or sbb mov push mov fwait jp cmp sbb sbb loopne rex.WRX rex.WR (bad) mov xlat mov addb sbb rex.WR rex.R sub mov jrcxz mov xchg mov cmp xchg iret (bad) mov push mull (bad) mov cs cmp fildl jl movabs xchg jmp data16 adc xchg repz (bad) xchg xchg fstp ror rex.WR addr32 adc lret mov mov out jmpq and xchg lea xchg out adc xchg in xor sub sbb (bad) sbb (bad) mov push cmp add sbb mov (bad) jns pop mov mov sbb (bad) mov sbb jno scas (bad) pushq orl add jle or movslq or (bad) jge sahf test sub lahf jne and sub jnp fsts imul mov adc mov scas jbe test jb in rex.WR in xchg repz hlt outsb jl push xchg jns movsl (bad) push jnp fistp (bad) mov (bad) lods movl pop sbb movsl pop pushq (bad) rcll stc enterq rol (bad) movsl xchg repz cmp rorb (bad) cmp insb xchg out xchg in int test xcrypt-ecb cmpsl leaveq cli or (bad) jmp sbb movsl (bad) xchg cmp je mov pop adc (bad) in jne fyl2xp1 out mov or xchg adc lea rex.RX (bad) cmp popfq xchg fist mov icebp fimull sub adc (bad) icebp jne (bad) fisub ja mov in fwait addr32 adc or rex.X xchg movabs divps lea je or pushfq xor (bad) cmp mov in test add lods lods lret jl ds cmp push (bad) cli (bad) scas lea or (bad) xchg in mov jl (bad) sbb (bad) sbb rorl sbb (bad) out (bad) push test pop sete sbb sbb or (bad) fcomip in ror leaveq pop mov repz add cwtl pop out ds rex jmpq xchg cmp cmp mov xchg xlat cltd scas andl add pushq jl adc (bad) (bad) movslq jo cmpsb je pop xor push sarb test xlat in jmpq adc pushq rcl shrl or xor popfq test sbb jmp int3 xor rclb xlat pushfq insb mov jge data16 xchg movabs add sbb cwtl sti mov adc xchg movabs cmpl pushfq psubusb stos add cltd pop xchg lcall cmp movabs (bad) xchg (bad) pop movabs repnz mov pop mov rex.W movabs icebp mov jmpq mov je cwtl push rorl push sahf cs xchg mov mov out xor xchg fcomp xchg movabs mov fisubl xlat pop xchg (bad) (bad) (bad) (bad) xchg movabs lret rex.WR rex.XB lret fdivrs rex.W sbb mov xchg rex.RXB rex.WR sub xchg (bad) push xchg mov mov xlat sbb jne insb mov mov mov lret or addps out sub rex.WB callq je mov sbb imul cwtl roll adc adc mov sbb pop sbb sbbb outsl div test movntq out in rex.X mov xchg add (bad) enterq std mov rep pop push (bad) flds xchg iret pushq ffree push cmp icebp loope std pop jo sbb outsl repz xor (bad) (bad) psrad rex.WR mov out in pop or lcall stos ds es xchg mov sbb lods imul xchg lock imul sbb (bad) callq out imul xchg (bad) mov mov mov in cmp repz cs sbb out or pushq cltd or jns mov sarb sarl incl sbb jmpq (bad) (bad) movsb divb out lods xchg fildll ss or outsl mov rex jrcxz mov (bad) cmp cmp mov movabs mov sbb pop mov lret (bad) stc movsl add xchg xchg mov add (bad) or rex.W adc cwtl popfq (bad) xchg cmc repnz pushfq decl mov (bad) idiv std stos pop mov int (bad) sbb rcrb xlat jmpq nop mov adc cltd xchg xchg adc pop pop imul push mov movabs jmp jmp adc adc xor rex.WRX lock test adc sbb rex.RB cmp add pop pop mull rex.RB add xor and repz xor jno test xchg sbb xchg sbb xor imul callq (bad) es cwtl xchg rorl pop mov pop imul xchg enterq pop rex.WR lret cwtl jmp cltd mov nop mov icebp (bad) fldenv loopne xlat stos rclb movabs sbb and pushq adc retq mov mov pand cmp test fs sbbl jo orl mov add jrcxz rex.R sti fucomip add pop sbb rex pop out loope mov jg movabs mov cmp mov cmp fcoml pop cmp testl (bad) scas insl ss data16 leaveq lods sysexit mov or mov (bad) mov (bad) test sub or rcrl leaveq pop (bad) mov (bad) notl mov pushfq and adc loope and mov mov scas xchg mov (bad) push mov or mov cmp fdivrs fucom lret (bad) mov (bad) mov and fstl roll or repnz in or jl lea adc nop sbb rex.WR out jmpq push out (bad) jae jle cmp int mov in mov fidivr shrl mov push mov imul retq rex.WRXB lret cld sub xchg xchg rex pop jp sbb sbb add std pop (bad) icebp gs rcrl rex.WB mov in (bad) (bad) add xchg sbb (bad) (bad) sub dec stos mov xchg pop mov adc mov (bad) rex.WB mov cmp fs (bad) or sub (bad) xlat mov scas ds out jae in and push mov mov popfq sbb lods adc xchg movabs or rex std sti pop iret push (bad) movabs jrcxz sahf insb (bad) or jrcxz xchg clc mov (bad) cwtl jg xchg push and rcrl nop rcrl jle mov mov rex.X (bad) adc data16 fdivs pop mov push (bad) in xchg movabs cltd popfq xchg cwtl hlt or lahf int pop mov and sti mov rex.WRB js fistl retq (bad) jae iret mov rex.WRB jrcxz sbb (bad) rex.WRX mov rex.WRX lock rex.WRX rex.WRX rex.R in cwtl jo cwtl mov rex.WRX xlat stos add (bad) lock pop sbb nop or mov add add cmp (bad) mov (bad) imul (bad) fimull pop movslq out test out and out xchg (bad) xchg retq rex.WXB mov int3 sbb sbb cwtl cmp (bad) xchg pop pop sti push ficom add xchg or pushq xchg xchg (bad) movabs xchg rex.WRB pop (bad) sbb fyl2x stos xchg idivb sti jge lods (bad) sbb push mov movabs (bad) cmp jno mov jns imul pop lret fstpl (bad) (bad) rex.WRX mov adc xor jb mov mov push pop icebp (bad) adc fcoms addr32 cld cld (bad) out add rex.WR ds mov cltd mov insb (bad) fldl pop int (bad) out lods xchg (bad) out xchg pop sub jb push rex.R gs xchg sbb sbb xchg movsl lods add (bad) rep mov push (bad) popfq push mov or cwtl cmp mov or shl enterq lret xchg lods xchg sbb out mov or lods mov (bad) mov cmp (bad) adc xlat scas cld in adc movabs (bad) mov test lret (bad) pop fidiv push orl pop (bad) (bad) int (bad) movsl ds sub icebp (bad) (bad) icebp fisubrl cltd sahf out and int lea cmp or xchg add movabs add add rex xchg ja cwtl add jns xor pop or cmp mov push jl lea sbb adc mov xchg in xor mov jns rex.WRB adc shl cmp jbe (bad) xchg (bad) add xor stos jge sub cmp pop (bad) pushq insb rex.WRB movzwl adcl std idivl icebp xchg test repz cmpsl xchg stc loope adc (bad) in jmpq loope sti and cs (bad) mov lods mov es sahf and add scas mov nop retq (bad) or jo pop cmc xchg mov in sbb faddl mov rcl sbb mov cmp fisttpl xchg (bad) mov iret loop jns addl (bad) iret adc xor pop jp test adc in cmp pop testb xor cltd cmp (bad) cmp js xchg out or mov stc sbb fs jne jl outsb rex.XB lahf add mov adc mov insb mov xchg xor mov jle rex.WRX (bad) cld xchg (bad) fdivrp sbb rex.WXB cmp retq stc adc shrb sbb andl lods movslq sbb and cmp jb cmpsl roll popfq xchg movabs lods xor pushfq movsb mov xchg fild jp (bad) mov and jrcxz mov in mov outsb sbb jg stc flds (bad) out sbb (bad) ja jo jg (bad) and (bad) adc or xchg mov mov (bad) mov sub repz cmp xchg xchg imul out (bad) rex.RB mov adc jrcxz add mov or lret mov (bad) shr and scas cmpl ds rex.RXB movslq pop in lahf mov in rcrl pushq divl fucom movabs xor xchg sub mov mov jg andl add (bad) sbb or sbbq sbb mov je cmp in insl int3 mov pop or sbb movsl add pop or adc lahf cli push mov xchg scas imul rex.WX rex.WXB (bad) in jrcxz push cmp mov mov (bad) mov adc (bad) addr32 outsl ficoml lock mov enterq rex.X xor sahf mov lods popfq (bad) cli fdiv add cmp shrl jg pop push adcl cmc mov and out rex.X pop mov (bad) js addr32 scas sti rex.WRB or movabs stos jns pop (bad) pushq push fsubl sti enterq xor in pop (bad) pop cmc js test jo cwtl stc and sbb (bad) imul push hlt in imul sbb cltd (bad) pop rex.WRXB xchg cmp es movslq jl pop xchg (bad) test popfq es xor (bad) adc lock xchg fsubrl sub popfq retq (bad) and rex.WX jo mov xchg out cmp mov pop xchg add pandn rcrl test (bad) mov cmpsl (bad) mov (bad) pop mov cmp sti mov (bad) pop test loopne cmp loope loopne sub cmp sbb jp jb (bad) insl jg mov mov xor jnp divl (bad) pushq fimul jrcxz (bad) fnstenv fucom mov cmp out (bad) lea mov (bad) pop mov (bad) cmp adc lret icebp and out (bad) lret xor movabs outsb (bad) adc movabs xchg (bad) jl cmp mov or cmpsb or xchg adc sahf mov pop jl (bad) fs xlat int xchg (bad) (bad) iret mov pop rex.X std out rex.W ss movabs loope push nop test rex.RXB xchg xchg hlt pop in cmpb mov mov nop testb and iret (bad) mov rolb pop pushfq out mov loope out cmc push xorb xchg xlat mov (bad) mov (bad) loopne test fild mov mov or movsl push imul xchg mov roll push rex.WB xor cmp (bad) je (bad) (bad) mov sbb pushq or mov mov pop nop rex.WB fs (bad) mov (bad) mov (bad) mov pop std fmuls imul rex.WRB mov pop mov xchg pop or (bad) push rex.RX xchg sub cmpsl cltd es callq mov or pause (bad) or fidivrl es push popfq sbb (bad) out movsb int sbb (bad) xor cmpsb push rcl mov rex.WX mov mov popfq jb and mov jns loopne out scas sub sbb mov (bad) test mov sbb push mov xchg push jnp imul stos rex.WR mov jg,pn (bad) (bad) pop nop sti adc cmp adc imul nop leaveq (bad) icebp jne xchg clc sahf xchg and xchg push jae mov cltd mov mov insl pop (bad) (bad) (bad) sbb mull mov adc (bad) ficompl nop or pushq adc jle in punpckhbw cmc cli incb or push imulb sbb imul or fs mov in mov out out movabs popfq mov lret out sahf jo (bad) sbb cwtl mov xchg (bad) lea movsb stc xchg (bad) out fistpl repz xchg cmc cmp xor mov mov (bad) mov jg (bad) (bad) jnp movabs movabs icebp sbb rex xor (bad) test pushq sbb or insl rex.RB lock lret sub or out sub mov std test (bad) jmp pop (bad) add incb xchg movsl sbb scas lret (bad) (bad) movsb sbb fcomip int3 (bad) (bad) or (bad) test movabs add in push frstor push mov rclb roll imul push in xchg mov push in fsubr jbe in fcoml insl movabs popfq xlat sbb or xchg test mov xchg add push (bad) mov add (bad) mov rex.WRB rex.WRXB (bad) add out mov rex.X movabs or add int lahf (bad) imul pop pop (bad) (bad) ja xor cmc retq push faddp cltd xlat mov (bad) cmp (bad) xchg out lods or or pop xchg repz test in jp decl pushq movabs mov add (bad) mov (bad) movabs fcomps cmp in (bad) or mov clc repnz addb mov test pushfq cltd in or ss (bad) int sbb mov fildll (bad) add jmp mov in js lret mov or mov mov (bad) cld push mov and (bad) or test rex.WX in xchg jb int leaveq mov test gs push scas push xchg cmp or sbb (bad) xchg sti enterq clc sarb xchg sbb (bad) mov pop rex scas addr32 mov es xchg sarl rex.B rex.WXB pop cltd pop mov iret lock push sbb mov add stos rex.XB movslq (bad) sbb mov jrcxz push cmpsb (bad) (bad) add movsl and insb js int3 cs movslq mov ficomp hlt movsl cmovge lret or xchg adc lea movsb sbb sbb mov loop cmpsb lret in pushfq pop sub (bad) (bad) (bad) rex.RX mov mov lods sbb sbbl xchg sub insb sbb or (bad) (bad) xchg pop stos mov mul mov (bad) and sbb rex.X mov push xchg in es in sahf cmp push mov insb (bad) xor imulb push (bad) std es cmc (bad) jp jle xchg (bad) jns rclb pop mov adc or jmpq mov xor pop cmp cmpsl or lret mov sbb (bad) iret (bad) sbb jae xor rex.W and in sbb sbb out cmp pop or fdivrl sub push xchg xor mov mov and mov or repz ja movsb adc lea loopne sti xchg jge nop imul rex.WR pop xchg (bad) mov sbb fcomps imul and ss (bad) add cs cmp scas xchg ss pushfq push jp push mov gs rex.WRB adc loop addr32 adc (bad) movsl cli repz out rex.XB (bad) adc fsubs mov mov pop rex je xchg (bad) xchg push rcrb xchg cmp mov add out add or mov cmp out sar jg push add sbb imul mov or insl cmpsl int3 mov out cmp (bad) sbb pushq rex.WRB mov jne lea xlat fldl lret and out hlt pop rex rex.WRB (bad) movabs mov or or mov sbb test xor int repnz (bad) rex.WXB rex adcl fdivrl pop sub stos mov xchg pop (bad) adc jle clc sbb out repz loop test es iret leaveq cmp mov mov mov sbb pushq movsb xchg mov mov cltd adc xchg xchg xchg mov add rex.WXB and jmp ficomp pop sub and sti insb sub cwtl jmpq mov outsb mov rex.X pop push adc out and retq pop jrcxz xor clc or rex.W std (bad) fsubrl add sub jle xchg cmp cmp imul fsubrl movabs cmp or xchg insb adc (bad) fistp in sub cmpsl sbb mov sbb pop xor iret scas mov (bad) dec (bad) xor xchg fadds lret adcb out (bad) loopne rex.WRB and adc pop test callq out enterq mov vcvtpd2dq jge pushq repnz imul mov mov movabs (bad) sbb movabs mov jo rex.R jp mov add outsl sub mov orl rex.WRX orl imul push je xchg stos (bad) jle jo (bad) fs neg rex.WR sbb cwtl (bad) xchg fdivp adc and pushq jmpq rex.WRX in xor rex.WX jo (bad) or cmp mov sbb mov rex.XB fdivrs imul cmp lock rex.WX (bad) movslq in or roll rex.RB in xor rex.XB (bad) mov cmp add movsl sarb out test hlt (bad) and scas ds fmull inc xchg pop cli movslq cmp push mull cmp push popfq popfq rol pop sbb cltd add cmp std scas sub data16 rex.W xchg fcomps (bad) pushfq (bad) mov je sbb sub sti cmp (bad) negl (bad) cmp fwait test imul sbb fist pop idivl pushfq pop pushq sbb rcrl int3 rex.XB adc sbb pop xchg cmp shll pop xor xlat cld rex rex.W rex.WB mov std mov test loop sbb xchg std lods (bad) xchg rex.B xor scas xchg (bad) pushfq cmp movsl mov (bad) mov sub lea ss xchg in sahf (bad) jb callq shrb pop (bad) (bad) (bad) scas popfq or mov fwait mov xchg popfq (bad) cld movsl jne scas adcl xchg jae enterq cmc push (bad) mov cld xorl imul cltd lods in mov adc jbe sub or (bad) xchg addr32 cmp imul (bad) sar (bad) mov adc jns imul adc int3 in insb (bad) gs or sbb frstor add add retq (bad) add push sub (bad) insl test (bad) movabs test push scas mov fidivr movsw (bad) xchg mov rex.WRXB mov lock (bad) ss movslq scas mov sti pop out mov sbb push imul fwait std in and rex.WB (bad) sbb popfq test cs rex.WXB gs add retq sbb or mov sbb fucom fldcw push in rex movsl lods stc cwtl and adc mov xchg rex.WXB mov fldcw mov (bad) rex.XB mov iret mov xchg (bad) adc sti sarl sub in je pushq rex.X mov pushq mov loop jbe cmpsl lret pop and push sub sbb hlt xchg mov mov cld sbb cmp add xchg or enterq cmpsl movabs movabs sbb and mov jp cmp xchg rex.XB (bad) mov sbb test adc pop movsl adc js cmp fidivrl fildll rex.RXB xchg adc or rex.WR or shll xchg ss callq push mov pop outsb rex.X mov add xchg addl out pop rex.XB add js clc cmp mov (bad) sahf add (bad) cmovno lods test fs popfq pop mov movabs imul lahf (bad) pop mov mov mov add pop sbb xlat iret (bad) mov neg mov or jae xlat (bad) pushq push cmp mov pop mov movabs xchg sahf fdivrl add lret (bad) hlt and pop pop movabs (bad) out push (bad) scas cmpl sub imul test (bad) fsts sbb loope out test mov in xor mov enterq repz jne fadds in rex.WX pop outsl mov adc adc movabs mov imul adc movsb mov jbe xchg es (bad) outsl scas xor out mov rex.X xor rex.WR movabs mov jno fistpl popfq pop lahf insb int imul mov xlat movabs cltd es (bad) mov (bad) (bad) jmp pop fmull xchg cmp mov or ja js mov rex.WXB scas sbb rex in (bad) push mov (bad) sbb jmp movabs mov outsb rex.WRXB movabs cli out add adc movabs xchg pop mov and pop sbb and mov (bad) pop clc movslq movabs or xchg addr32 push stos mov or movsl cs mov rex.WRB rex.RX (bad) mov xor mov (bad) gs cmp pushfq add xor mov jp rex.WRX loopne in fsubrs or pushq or clc mov (bad) mov rex pushfq scas mov scas mov jrcxz add cmp scas or cltd pushq xchg jrcxz hlt adc xchg pop std jae xchg icebp and lods pushq popq mov mov (bad) sub int3 lods adc xchg pop mov rex.W (bad) cld cmp rex.WRX mov cmp mov (bad) cmpsl jmpq (bad) cmp adc or pushq mov sub xchg or in (bad) sbb (bad) push mov pushq int rex.WX mov repz (bad) pushq mov sbb leaveq and (bad) int3 rex.WRXB ficom push adc mov xlat movl jge mov pop orb jg push or es rclb cmp sbb mov mov push ds mov cld (bad) callq push xchg or (bad) mov (bad) xchg stos cmp test movb pop jae or clc (bad) es xchg fnstcw adc mov rex.WRB rcll cmp addl jno xor clc (bad) (bad) stos or mov clc sbb pop stc ss xchg andb cld jge or xor stos sahf xchg (bad) xor (bad) mull ds (bad) sti (bad) negl in or enterq cmpsb xchg adc (bad) int3 (bad) xchg (bad) cwtl jmpq push (bad) mov mov icebp cltd xchg jl nop (bad) incl (bad) notl xchg (bad) mov (bad) mov or loop cwtl movsb (bad) xchg std repnz xlat sarb mov (bad) push xchg sets mov or movslq and mov push or stos mov lods lock cmp pushq sbb push and xchg jle add or xchg mov and movsb (bad) (bad) or sarl rorl hlt (bad) movl mov sbb pop ds adc addl xchg scas movsl adc sar pop (bad) and sahf jns jl int3 push xor movsl cmpsb push movsb fcomps cli out pushq or lea mov sbb nop add fiadd push (bad) sbb (bad) (bad) mull notl ss xchg and in movabs retq out cmp and out fnstsw mov sbb sbb sti mov nop fdivrl cmp mov pop lahf decl push (bad) sbb xlat push rep cli xor or rcr or repz mov out es retq lahf hlt (bad) xchg add cmp xchg xchg mov (bad) sti test fnsave and or xor mov mov (bad) (bad) out rex.RX int3 mov adc adc lcall sbb mov rex.XB sbb rex.RXB rcrl sub (bad) cwtl sbbl imul jo mov imull mov std out mov sti add pop (bad) (bad) add in sbb push movsl mov rol sub movsb movabs mov xchg int3 jne movabs scas fcompl sbb cmc rex.RB (bad) imul lret or (bad) rex.WRXB repnz and (bad) cmp sbb (bad) cld mov xchg jmpq jmpq callq jae xchg ds jmp lock (bad) (bad) mov repnz retq mov xchg enterq or insb mov pop sbb imul mov in or xchg sub hlt lods fisttp (bad) jo out (bad) xrelease out xor pop imul mov and out or out ficom stos (bad) sbb push add (bad) pop (bad) (bad) jne adc cltd out notl popfq mov gs jae adc xchg xchg add lcall pop (bad) fimull mov jp or (bad) lods jo pushq rex.W (bad) mov (bad) cwtl sub jle mov lea jle jbe rcr add sub imul cmp lahf rex.WXB xor add rex.W sbb mov out loopne cmpb pop ja jo (bad) xlat xchg mov push out xor mov mov faddl gs mov xchg pop mov xchg lods iret (bad) ficoml int or (bad) jns pop (bad) (bad) xchg and in imul pop pop (bad) sub retq (bad) shrb lret rex.WRX (bad) in out std (bad) (bad) test sub jbe rex.X (bad) out push (bad) stc out loope sub mov lret (bad) and and (bad) out and or clc sbb mov sub or cld movsb jge repnz rex.WRX lods addb (bad) xchg int mov sub xchg cmp add jmp add pop pop in xchg (bad) icebp out mov rex.RXB rex.R or sti ficompl sub popfq loop in add pop adc movabs sub sub (bad) (bad) rex.RXB (bad) or movslq insb or in repnz sarb (bad) cmp stos pop movl push sbb fsubrl cmp ds (bad) sti mov (bad) xchg loop rex out repz push cmp (bad) cmp std mov loop (bad) in adc sub scas fstpl sahf jl mov hlt lods negw rex.WB xchg ror test mov out lods test jbe (bad) sarl (bad) jle pushfq (bad) xchg add fdivrl cmp add sub jle mov (bad) mov add rex.W movabs rex.WRB xor vminpd out vmovdqa out scas pushfq rex.X cmp out mov rex.RX sub pop xchg add pushfq es mov xchg sbb out idivb xchg (bad) movslq mov mov jbe jl or add or xchg loop (bad) mov loop (bad) movsl in imul push (bad) and jbe or (bad) mov pop test jns sbb clc mov rex.WRB adc imul out sbb jbe jrcxz (bad) movsb repnz std sub rex.WX out rex popfq out movabs add divb rex.X adc stc mov xchg cmp add adc mov lret callq movabs scas sti scas movabs fstp addr32 cmp (bad) outsb cs int3 outsb push push sbb fildl sti xchg (bad) ds jge cmp push movsb xchg mov add (bad) test negl push jg cld fs insl (bad) mov sub int3 std jbe std (bad) out jge sbb pop adc and test xchg sbb push add mov cmp jnp xor mov (bad) cs jo sbb test hlt sub mov xchg xchg add es pop in and xchg (bad) fidiv mov mov xchg mov mov xchg pushq lods fwait and add shll rex.WX fnclex scas mov rex.WR (bad) push mov add (bad) ficom mov int jns cmp mov push cs sahf loop out pop maskmovq idivl movsl pop fwait xchg clc out sub fbstp cmp pop retq lret lea fidivr mov pushq js (bad) sahf (bad) (bad) mov rex.WRB rex.RB jmp imul out orl mov (bad) sbb (bad) divb jb jbe rex.W (bad) (bad) xchg icebp add std movsl repnz add (bad) cmp repz (bad) jg lea cmp scas mov xor mov mov movsb insl idiv (bad) rex.X rex.XB xor jge mov mov xchg sbb xor pop movabs movabs movabs rex.X sub hlt sbb adc fs retq (bad) (bad) movslq fldenv mov rex.R jns test popfq jrcxz mov rex.WRB (bad) lahf (bad) pushq pop cmp gs movabs mov adcb (bad) loope iret loopne pop jp (bad) in stos jle cmp pop lods mov (bad) stc test jle sahf lea mull decb out ss movabs cli pop fild (bad) movabs (bad) sarl jne pop xlat adc or rex.RB (bad) es xchg lcall scas (bad) xchg or je movslq fstpt faddl cltd pushq add jmpq mov in jrcxz rex.WRX cmp lods jl xchg roll retq rex ficompl mov fs in push (bad) popfq jne cltd lret and fsub popfq jg (bad) movl sub add ficoml (bad) (bad) in or push fistpll mov sbb stos addr32 push rex.WX xor je xor adc std cmp rex.RXB data16 stc cmp (bad) fldl mov movabs popfq cwtl in (bad) lods sub (bad) fwait add out (bad) sbb mov repz rex jbe pushq hlt jg test adc cwtl ror (bad) data16 cmpsb (bad) and out sar sub lods xchg rcl mov xchg cmpsl fistpll adc xchg xchg or int and sbb popfq scas test cmp lret icebp int3 movabs sahf add fucomi mov xchg pop cmp fdivrl or loope pop push rclb mov push rex.XB rex.WRX mov lret jbe cmp adc add and sub xchg stc bsf xchg pushq adc sahf jp (bad) (bad) or cmp popfq cmp mov cwtl jnp jns adc popfq cmp sub data16 cmp jle jl jo rex.WRXB (bad) adc je imul insb add xchg xchg in (bad) insb movsb (bad) jae and imul popfq pop or stos sbb mov imul rex.WRB lock pop sahf mov (bad) (bad) (bad) repz jle test movsb retq push rex.R add or sbb fistp xor lret (bad) in ficom add fadds xlat lret mov mov (bad) je add sbbl jl popfq retq imul icebp pushq and jne cli popfq cmp loope mov xchg es sbb loope (bad) int pushq repnz (bad) xlat rex.WB lret push xor (bad) in popfq mov (bad) xlat (bad) (bad) pop retq bndldx sbb mov mov jl (bad) pop int mov xchg fbstp jmpq movabs rex.B insl sbb mov xchg lods pop push sbb in pop mov fnstsw (bad) xchg xchg (bad) xlat cwtl std fdivrs pop push (bad) cwtl rex add repz mov adc jne sbb sti rex.XB cmp mov xor push test jle enterq out sbb xor push test int3 jae push sub or mov rex.RB addr32 repnz cwtl scas mov enterq add adc sub xchg (bad) cltd decb mov (bad) adc test cli sub cmp rex.RXB sub sbb loop imul popfq adc lret addr32 (bad) repz rex.WX sti fstpl retq add cld hlt in xor rex.WXB je mov jo insb popfq (bad) movsl sahf mov lods rex.WRX fbld or pop jmp jne pushq sbb rex.X mov (bad) in xor (bad) pmulhw loopne (bad) xlat adc (bad) std out js or xlat xchg (bad) addl xchg add xchg jmp sbb fbld out imul pushq (bad) xchg adc (bad) mov retq mov movslq movabs data16 insl fistpll xchg je cmp mov rex.RXB test addr32 leaveq xchg cs cmp push rex.WRXB cmp insl jmp cmp out (bad) sbb mov xchg iret mov nop add iret cmp push (bad) cmp ss add rex.XB cmp mov (bad) clc rex.WXB ds push mov xchg pushfq sbb adc sbb sbb pop (bad) sbb hlt sub jae rex.WRX push or jo push jnp mov loop xchg add rex.X xchg push pop js and sub fucomp insb mov jp rcll xchg lods pop es lock xchg movabs loope or hlt (bad) jrcxz scas flds ds js mov movabs cmpsl (bad) or xchg and xor (bad) lea in (bad) rex.RXB or xlat adc xchg out push (bad) int cld addr32 pop cmp imul mov outsb pop test mov fcomps fstps out mov rex.RXB test fildll pcmpgtd mov mov sahf ss leaveq pushfq mov out rex.RB mov mov (bad) jge xlat (bad) int movabs mov int hlt mov cs enterq and mov repz add mov (bad) stos rex.WB adc jp cs and jp cmp mov cmp xchg idivl xchg nop mov cmc xchg xor sub insl out movabs (bad) jno adc push rex.X mov (bad) xchg adc in callq mov add add pop xlat rcr pop add adc rex.WRX mov xchg jl xchg scas addr32 jmpq nop js pushq stc xor pushq in (bad) sbb cmpsb js pop icebp pop and lods callq cmp sub in pushq movabs adc (bad) cmp loope rex.RX mov (bad) jns sub stos scas xchg hlt mov pushq fild rex.W fsubr (bad) (bad) or (bad) scas push int3 in xor rcr (bad) (bad) packsswb movabs shr xchg cmp (bad) shr xorb insl insl subl jle (bad) adc jae (bad) out mov mov mov xor and jge xchg adc (bad) xchg in (bad) repnz adcl mov or movabs rex or push and pushq js mov push (bad) rcl jmpq or int3 jle mov jae cmp mov or ds jp pop rex.RB jb mov add retq (bad) and cmp int3 xor jb pop mov lods jno xorl loop push sub sbb sbb lea jg retq movabs enterq cmp mov (bad) in (bad) outsl mov sbb xorl adc mov (bad) mov sbb decb mov xchg scas xor pop stos add cmpsl xor pop incl or lods (bad) fisttp or or rex.R rex.WB (bad) mov (bad) fnstsw repz mov adc (bad) neg mov lret xlat out mov xlat adc adc (bad) jrcxz mov lods rcll or mov add xchg test mov cld or xchg std decl cmp movl rex.W (bad) mov in jne stos mov mov lret rolb mov es mov mov gs or add mov xor cmp add xchg mov (bad) mov fldcw popq xchg retq (bad) push jg sub loope xchg rcr outsb (bad) stos fistl jrcxz xor push jo xchg cmpsl (bad) stos lret sti xchg mov hlt cmp jne out mov js xor mov mov xor mov sbb mov jge loop cmp (bad) mul lods (bad) add mov mov mov xor sbbb mov (bad) jns rex.WX sbb jle (bad) imul sarl pushfq (bad) or cmpb rex.RXB add mov or xchg andb (bad) (bad) mov (bad) (bad) rex.WR fsubs rex.RXB (bad) imul sbb cmp notl js lea rex.RX es (bad) rcr fucomp xor add js fdivrl movabs add or rolb cmpsb adc mov fistpll xor add sahf outsb retq jp sub jo movabs xchg mov mov adc (bad) jns mov rex.XB scas pop pushq (bad) push cwtl rex.RB adc loopne xchg out adc stc mov (bad) xchg xlat mov pushfq test popfq adc loop,pt (bad) rex.RX pushq (bad) (bad) addr32 and xor loopne (bad) cmpsl (bad) mov clc rex.RXB adc (bad) xor lea roll clc adc lahf push insb cmp out mov adc movabs movsl stos mov (bad) mov add mov test sbb vucomisd (bad) not test rex.WRX std andl sbb (bad) jbe stc cld fdivs rex.R jnp (bad) xchg xchg callq subl (bad) sbb stc cli pop xchg movsl (bad) jg jb sarb push loope jg mov (bad) push (bad) or ds jle xor cs cmp xchg xchg js mov xchg movsl xchg sub mov outsl rex.WRXB std or fwait adc xchg nop jne mov ds mov std adc add push std (bad) or sbb and (bad) ss fwait xchg xchg jbe xchg (bad) rex.WXB cmc cmp mov movabs lret (bad) enterq addr32 mov xchg (bad) pop sbb pop pop pop add enterq roll add cli int3 or xor mov (bad) pop (bad) cmp xor jo push mov jno icebp or (bad) pushq retq movabs movabs add enterq int3 xchg in fildl pop ficom popfq movsl cmp in sbb or fistpll loop and test out fisubrl je sub or int push xchg mov insb movabs xchg cli (bad) jrcxz es (bad) icebp sub orb retq rex.XB pushfq (bad) (bad) rcrb hlt pop xchg cmpsb rex.RX fwait mull (bad) jge sub sbb mov lahf xlat and out mov pop vmovups (bad) (bad) (bad) pushq cwtl cmp xorl and cmp vpcmpgtd rcrl (bad) loopne cli cwtl sbb adc std cltd and int3 (bad) mov pop pop (bad) (bad) repz rex.WR (bad) cltd cltd xor cs jg ficomp (bad) mov adc fcompl out leaveq jrcxz adc sbb clc std movsb xor lods notl mov jne push jrcxz rex.XB rex.WB pop xlat push mov fildl std xor jae retq pop (bad) mov movslq lock mov xchg xchg rex.WRX xchg or lods clc nop rcrb (bad) gs decl fnstenv mov popfq (bad) fs pop (bad) mov adc scas rex.WR repz pop (bad) mov and jl rex.WRXB and jmp (bad) movabs adc rex.RB or cltd callq lahf lahf jb pushfq adc in mov sub mov mov mov in movabs rex.WXB mov add and xor test push and movabs adc sub test popfq adc callq jmp roll cmp in leaveq adc retq cmp scas cltd sbb hlt pop (bad) rex.RX sbb pop cmp (bad) out decl sbb imul out mov popq xchg add xchg push cmp cld xchg out andb or cld jp adc loopne (bad) (bad) rex.W add (bad) rex.RX sbb mov sbb movslq (bad) popfq fisubr ds (bad) or (bad) lret rcll rex.XB test jo sbb out fsubrp cmp (bad) pop mov out fstl pushq (bad) in cmp fwait (bad) jg mov cwtl push adc lea rorl or stos (bad) mov mov xchg xor (bad) retq fdivrl lcall fcomps cltd cmp (bad) fisttp icebp xchg and rex.WRX (bad) pop cmc ds pop xorl sbb or rex.WRX data16 mov cmp cmp (bad) xchg xor rex.X (bad) fldt rex.WRXB mov xchg rex.W xchg xchg rex.RXB jmp rex.WR rex.WXB roll out hlt js (bad) (bad) clc (bad) mov pushq clc adc (bad) sti adc jge cld or push sbb fdivr cmp (bad) jg add pop out mov mov (bad) addr32 sbb mov fwait (bad) mov outsb rex repnz loope (bad) xor rcll and add (bad) sarl std rex.RX std ficomp add sub out mov add (bad) jge jg mov movsb push and callq lea pop or shll ficompl jae mov test pop in jrcxz and xchg adc adc mov mov cwtl mov (bad) outsl sahf xor hlt jl out stos cwtl (bad) or adc mov rex.W scas pop fs cmp (bad) pop (bad) mov (bad) pop (bad) cmpsl rex.WR lods cmp pop outsl adc (bad) fwait mov sub cmp in (bad) (bad) mov loop xchg (bad) (bad) and xchg jle repz push imul sbb sbb pop mov in mov xor (bad) out inc popfq jrcxz movabs rex.WXB sbb loopne mov rex.WRB xchg (bad) bnd add xchg or sbb jge out in int int cld data16 (bad) nop push xlat mov mov cs or or repnz rex.W pop pop sbb sub fcomps mov sbb or pop cmp clc (bad) (bad) xchg movabs mov push mov (bad) mov lods sbb imul or test jle adc cmp sbb fidivrl movabs out sbb mov cmpsb xchg or stos xchg loop outsb jne mov mov or xchg xor jrcxz movabs (bad) lcall lods jg iret (bad) cwtl cmp adc fildl imul mov mov xchg sbb xchg sbb sar (bad) mov int3 retq cmp repz lock or sbb test (bad) (bad) add or mov rex.RXB ds fidivl popfq xor lock sbb (bad) pop sqrtps and mov (bad) add (bad) lret pop xchg pop insl ss fdiv jge or lea (bad) (bad) jg push xor and testl repz sub outsb jle sbb sbb stc mov mov push shr push mov frstor (bad) mov mov pushq shr (bad) (bad) rex.R pop in push sub jae xchg fcomps mov xchg fwait mov rex.WRX sbb xchg rex.WR (bad) test xchg sbb clc rex.WRX adc xor mov sbb sbb vmovups cmp int3 (bad) cld and out sbbl xchg loopne (bad) enterq in pop sbb ds movsb repz xor iret (bad) push or pop adc retq rex.WR rex.RB lretq enterq push mov mov movabs mov mov xor fstpl jle mov mov fnstsw add out movsb cwtl (bad) sub (bad) rex.RX adc xor xchg xor icebp movl pop cmp insb rex.WXB mov sarl sahf mov xchg outsl loop jle xchg rex.WX rex.X cmp popfq xchg sbb imul cmc cs stos lods (bad) movabs cmc push or (bad) cld popfq or (bad) sahf rex.WRX not callq or mov ss jl jl jbe movsl push or cld div fs test jmp in cmp int fistl (bad) xchg sub adc mov fwait sbb loope test mov popfq xchg sbb and and lea sbb shlb (bad) leaveq (bad) (bad) mov in fcompl add mov sarl out mov xchg xor jmpq out fs xlat mov fdivrl add stos (bad) pop movabs xchg pop mov xchg add fild or adc (bad) pop cmp pushq enterq lea xchg (bad) xor out xor not pop xchg pop std xor (bad) sbb iret fcoml and xchg (bad) mov clc push or xlat or push mov xchg out rex.R pcmpgtb sub (bad) imul sbb cmc nopl (bad) jae xchg and fst (bad) lods xchg (bad) sbb rex.WRXB push mov std (bad) out (bad) in movabs jo or out jp pop add xor lea imul pushfq sbb jne xchg rex.W movabs jg sbb mov sarb mov lock add icebp std pop jle shr (bad) jmp int (bad) movsl rex.WXB mov mov or or sbb dec insb xor rex.WRX movabs xchg cmp xorl pop xchg imul in (bad) mull leaveq pop (bad) sbb out stc xor sbb xor pushfq lea loopne xchg pop adc popfq jo nop cld mov (bad) xlat pop xchg (bad) outsl or cmpl pop (bad) test cmp idivl fiaddl gs lock in in and pop add (bad) mov fcomps pop loopne ficom (bad) cmp sahf jg callq sti xor cmpsb sub cmp or pop fildl inc push xor addl sbb (bad) mov movl push and sub int3 movsb xorb out (bad) cmp enterq movl loopne mov jle pushq xchg out movabs int cmp sbb frstor jrcxz out xchg cld lods lock movsl adc mov fist rex.W xor (bad) or (bad) sahf mull or clc rcl or pop xor (bad) sbb cmc xorl sbb or pop mov movsb fst cmp (bad) pop (bad) rex.WRX (bad) out rex.WX sbb fcmovu (bad) (bad) sbb out ficom (bad) insl imul fs pop int3 (bad) mov movslq or add (bad) movb lods (bad) (bad) mov pushq (bad) nop cwtl imul sbb sahf js adc adc pop mov sbb jb sbb cmp pushfq or (bad) add adc lret or xchg gs movabs xchg add cli rex.R lea jl jo rex.XB fwait pushq cmp ds (bad) jno sbb jmp cli or rex.WR xchg sub mov std clc iret add add lahf sbb xchg movslq mov jrcxz xlat (bad) sbb (bad) (bad) (bad) xchg (bad) in (bad) in mov popfq mov push mov mov (bad) (bad) (bad) rex.XB (bad) jrcxz add and rorb movabs pop xchg ja cs sbb out cltd push gs pushfq ds hlt mov rex.WRXB rex.XB mov rorb ds lret imul movslq (bad) and add cmpsb nop js,pn jle rex.WRXB mov or xor movslq mov sbb push xchg jp sbb adc xor rex.X pop je shlb and in add stos jb sahf roll pop sbb test gs (bad) lret xchg shrl movabs pop adc mov (bad) jmpq movabs sbb cli xchg jg sbb test (bad) lock cwtl (bad) add xchg sbbl rex.WRB loopne out mov clc test jb and or xchg rex.R retq (bad) ja xor xlat js (bad) ss fstps pop (bad) xor popfq ficompl loopne pushfq cwtl repz rex.RX nop pushq (bad) mov scas movabs adc int rex.WRX stc adc adc gs mov push rex.RB (bad) xlat test stos ficoml repz sbb test cltd fnsave leaveq loopne callq (bad) push push (bad) pop rex.WRX (bad) lea (bad) cmpsl (bad) in fistpl int adc popfq adc (bad) and fimul pop add lods push xor inc and (bad) jns xchg (bad) xchg xor sahf xor lahf in rex.XB hlt enterq adc in rex.R (bad) lret imul adc cmp push jno out loop mov (bad) ficompl and and (bad) (bad) rex.WRB movsl mov add fs fisub cmpsb fstl and pop out rex.WRXB (bad) loope test mov or jbe jbe icebp cmp stos out adc add rex.WXB rex.B stos cltd jl cmp xchg mov js add (bad) xchg sbb ds pop rcrb (bad) xchg xor (bad) (bad) gs cmp fcmove jl std sbb mov scas sahf callq mov xchg pop xor retq iret xchg hlt movsb cwtl (bad) cmp sbb sbb cmp xchg fs in mov mov xor jl sbb mov test movslq clc xchg repz adc cmp cmp insl mov addr32 movsl (bad) pop xchg out shrb xlat repz rex.XB loope mov orl (bad) mov out xchg push rcll push rex.RX outsb adc out in sbb cmpsl mov rex.X mov nop add pushq or and pop lahf sub cmp sbb xchg cmp clc callq lock push sahf jrcxz repz push (bad) (bad) movabs xchg mov decb (bad) subb jno cmc rex.WRB ss or mov sbb mov loope xchg sarl sarb sub rex.WRX mov out sbb (bad) cmp cmp jg rex.WX out jnp jmpq xchg xchg (bad) mov push push cmpsl lods xchg xorb push sbb rex.XB rex.XB and xchg xor xor cmovbe add (bad) rorb and mov (bad) fildl jg mov cmp rex movabs frstor test out (bad) sub jbe sti iret ja pop mov xchg in cltd xor adc (bad) add movabs mov sbb notl imul paddusw xor out pop mov sub sub cmp or xor icebp (bad) mov out (bad) jge (bad) andl fwait sbb or int3 xor jg in adc xlat xor jb cmp or jp cs xchg pop jle cltd sbb out int hlt (bad) mov imul in mov lea xor xchg add (bad) rex.WX xchg je (bad) iret mov in hlt bswap rclb sahf (bad) fldt out (bad) mov fistpll (bad) (bad) and movabs loope pop cwtl or jno movsl outsb insl outsl mov lea pop cmp out lock jge adc pop repnz cld xor addr32 (bad) xchg hlt or es sub rex.WR (bad) xor rex.WR push stos rex.WXB loop push sub test adc rex.WRXB cld (bad) leaveq adc add jge mov jne test int3 mov jp fdiv lretw mov and cltd sbb retq sahf lea cmp (bad) jns adc mov xchg test or clc pop shll ss lret xchg xlat fdivrs mov and xor jrcxz (bad) add in rclb (bad) loopne and rex.WXB mov pop adc fcomps andl loop (bad) pushq push movsb add imul fs and sbb mov push rex.XB pop popfq mov push (bad) sbb adc sub fnop pop mov out cmp sub mov (bad) jae loope (bad) push pop retq (bad) xchg movabs sbb (bad) or jo mov insb out in js (bad) jl cmp insl jge jge sub stc jnp mulb mov or rex.B loop sahf sbbl pop add mov movabs adc (bad) rex.WRX movabs and (bad) pop pop xchg imul (bad) xor (bad) (bad) test xlat test mov mov (bad) mov jmpq sbb popfq sub outsb fs iret outsl cmp adc out sti movabs xchg int (bad) push xchg int3 pop rex.WRX movabs lea (bad) sbb add movabs imul test xchg in out cmp jo cmp sbb (bad) xlat movabs xor jmp mov adc cmp in mov fcompl xchg rex.WRB pop pushq mov jbe mov pushq int3 stos movsl test jge mov repz rex std (bad) mov insb rex.XB rex.WXB lret xchg adc jmp hlt mov push adcl push jmp fisubl xchg cmp jge and pop adc and (bad) (bad) loope cmp xor adc popq rex.R repz and fidivr sbb jno (bad) xchg and sbb jae rex.R and pushfq ja (bad) sub or (bad) insb cltd popfq and rex.RX rex.WB in mov scas in retq scas sub (bad) mov icebp mov pushq pop adc mov (bad) pushfq mov pushq xchg sbb rex.B mov cmpsb lea test (bad) out rex.RX fidivr (bad) sub (bad) imul and test rex.WRB jp int3 or rex.WRXB fs cmpsb mov add hlt sbb jae out jge rex.WXB rorl bnd (bad) pop mov rex.X mov push push cmp xlat sub rex.WRXB rex.WX jl xchg cmp lods movabs xlat mov push movsl adc xor rex.WRX (bad) lahf pushq xchg leaveq (bad) cmp cld paddsb (bad) je fdivrs jrcxz push pushfq movsl adc mov pop sub add lcall lahf imul sbb out repz xchg andl mov cltd mov insb rex.R sbb (bad) mov movabs (bad) rex.WXB pushq icebp mov sbb sbb or rcrb mov repz cld callq pop data16 pop pop sbb testl pop sbb or faddp (bad) movabs or rex.WRB or xor movabs pushfq mov push jmpq push sbb jmpq icebp pop pop sti and adc repz (bad) movsl cwtl adc and xchg pop sub leaveq test clc cmpsl or and mov cmp out (bad) cmc hlt mov sub push xor pop mov sub jnp out cmp in (bad) fist cwtl adc ds xchg fcompl add in (bad) pop movslq sbb out push stos cmpl lret add test rex int3 push jae addr32 jle (bad) sub loope or jl (bad) cltd (bad) or sub rex.WR rex.X int3 rcll or mov roll (bad) or cmp (bad) sbb ja sbb sbb pop out add cld (bad) xor (bad) out or jb mov and lret je iret rex.WRXB and sti in lea and jo retq cmp add adc in fcmovnb (bad) out in jp mov xor addl lahf fstpl je pop jl or mov xchg jns cmp movsb sti (bad) callq cmp mov int3 fdivrl cltd clc movabs rex.WXB gs (bad) iret (bad) js xchg movslq rex.WX retq or or (bad) jmp fimull mov fimul rex.WR fmuls rcll fmull pop mov cld rex.WRXB adc repnz xchg rcl sub in push sarl or loop jno (bad) rex.W jns push xchg sub mov (bad) fsts jrcxz (bad) mov gs cmp push xor mov xchg cmp test pop (bad) addr32 sub pop sbb xchg sub cwtl adc pop enterw callq and (bad) sahf (bad) clc mov mov rex.WXB divl out in rcrb scas cmp rdpmc sbb or retq sbb xchg (bad) xchg cmp jmp xchg scas xchg cmp in xchg jrcxz pop push cwtl mov mov mov mov xor (bad) or mov jmpq out jle jae xor xchg imul adc cltd adc push jnp je je (bad) rex.WXB rcrl (bad) out vpackuswb rex.X mov mov xchg sahf movsl sbb movsl in cmc rex clc popfq mov testl xchg fadds (bad) out in (bad) cmp mov iret cmpsb pop callq (bad) sti sbb jl rex.WRB and sbb std lods mov movabs enterq test push adc movabs clc out push out lods (bad) mov std orl out or mov cmp rex.WRX retq subl rex.R jne pop (bad) sub or repz sub (bad) sub sbb cmp and push xor mov mov (bad) mov mov (bad) or mov or xchg insb jl xor adc test std sbb rex.WR lahf rorb (bad) (bad) add mov lods fwait add (bad) int3 pushq xchg rex.WXB fwait callq pop out add clc (bad) (bad) fisubl mov lahf pushfw mov (bad) leaveq or and pop rclb pop rex.WRXB cmp and sbb (bad) mov xchg or adc xchg jg mov stos rex.WX rex.X (bad) out sahf pop sti imul rex.WR fwait sub adc (bad) push out in xchg (bad) or mov (bad) std and fiaddl fwait jrcxz add insb push stos mov (bad) pop rex.WRX fidivrl push test sub adc stos std (bad) fs xor mov (bad) movabs cmp sbb rex.WRXB addl clc mov (bad) (bad) movabs in mov movsl add xchg int fwait push cmp rex.RX cs fwait (bad) push adc sbb scas lods (bad) sbbl xor xchg xlat (bad) xchg std mov mov cltd or rex.WB rex.XB addr32 mov (bad) jle sub cmp rex.R cmp (bad) fwait xor clc in popfq enterq cmpsb mov sbb fdivs pop or std sub mov and orl mov push fsubr int3 push lea hlt (bad) lods rex.RX fistpl add adc rex.RB mov rolb rex.WRX jae fsubrs and sbb mov pushq stos in icebp movsb fwait clc xor (bad) fwait add (bad) retq jbe fwait test sahf xchg scas cli stos rex.WR xchg adc mov rex.WXB cmp fwait movabs cltd (bad) (bad) js test rex.WRB pushq (bad) xor je sti clc lods (bad) imul mov test (bad) cmp jb rex.WX push mov shr insb or jmpq adc sarb callq in scas (bad) cmp cmc fwait movabs rcr sahf and loope push or scas shlb mov fmul add (bad) popq insb fwait (bad) and out xorl cmpsl ds (bad) or popfq mov xchg mov insb fwait (bad) and add cwtl shl divl jmp or add fwait ds and pushq mov lea (bad) fwait xchg or rex.RX fwait test fnstcw sbb push xchg cmc mov xchg (bad) push retq mov cmpsl movabs rcrb (bad) rex.WRXB mov jmp sbb push cmp mov test test fisttpll stc mov mov (bad) fdivrs fldl mov jrcxz mov fwait sbb fwait sbb (bad) xchg fwait (bad) (bad) adc fwait adc (bad) mov or addl test xchg add mov ds mov pushfq cmp notb fwait scas xor mov stos sub sub (bad) cmpsl sub stos sub es cmpsb (bad) lahf and movabs movsl sub jne outsl test (bad) (bad) mov cmp retq mov (bad) cmp cmpsl cmp xchg mov xchg rex.WR xchg cmp mov std test leaveq sub sub pop mov add (bad) (bad) andb outsl xchg mov push scas lods pushq data16 out int3 in callq mov incl mov lea icebp mov mov mov loopne rex.WB xchg addr32 (bad) enterq repz lret (bad) (bad) or clc cmp mov cltd clc sub jno out test pop fildll (bad) movabs in sub pop movabs push (bad) cs es rorl sub sub out (bad) (bad) lret cmp nop sub rcll insl lea scas sub enterq pushq popfq (bad) sub (bad) xchg or mov (bad) (bad) sub outsl push int xchg mov (bad) cmp iret mov rcrl pushfq push cmpsl cmp movabs imul int3 add pop loope cs mov mov cmpsb (bad) mov xchg (bad) cmp push test xchg lods lret test mov jne rex.WB pop pop fisub test rex.RXB (bad) callq add rex.RX xor xchg movabs mov cmpsl mov test stos (bad) xor or (bad) mov insl fisubrl js jle cmp imul mov incl (bad) lods mov xchg (bad) movabs sub xchg sub test subl sti (bad) incb cmp sbb sbb mov outsl jae callq (bad) or or (bad) test mov (bad) test (bad) outsb jns rex.X repz add test clc (bad) push stc xor cmp lahf outsl (bad) es stos (bad) mov pop scas rex.WRX movsl pop je (bad) cltd cmp (bad) movl cmp mov hlt scas jnp mov (bad) jg or xchg (bad) mov xchg cltd andl stc mov int3 (bad) out je add or mov divps mov sar popfq rex.RX ss pop jno mov fiadd jrcxz (bad) popfq xor sub ds jne pop retq and cli mov adc movsb add (bad) notl xchg adcl sbb sbb xchg and adc push pop push (bad) in (bad) pop sbb (bad) mov gs xchg add fldl mov pop pushfq lods sbb repz mov mov xor xchg (bad) sbb pushfq or movabs pushq in fwait pushfq loop xchg (bad) (bad) movabs pushfq pushfq and (bad) xchg loop sbb fstpl pop xlat pop fcomps fstps pop rcll fwait (bad) push (bad) push iret push rclb rcll push lret rex.WR rex.WRB fwait int (bad) rex.WRXB rex.W rex.WX rex.R rex.RB fwait vshufps rolb rex.X jl jge std jle jg js jns stc jp jnp je jne cmc jbe ja jo jno icebp jb jae insb in insl fwait in outsb out outsl out callq (bad) imul in fwait in out fbld (bad) mov insb movabs cmp mov mov movabs mov lods xchg sbb repz je (bad) lods mov xchg pushq xchg cmp sbb mov es mov xchg and mov xchg (bad) adc (bad) clc sub mov mov movsb mov test sub lods callq mov mov fs mov mov mov fdivl mov pop out lods (bad) mov mov test (bad) adc adc mov (bad) cmp sub cmp mov (bad) idivb movabs in and sbb and test (bad) xchg mulb mov hlt add mov rex.WXB es xchg fnstsw out out rex.RX loope out int fwait ss mov std cmp test test push hlt mov icebp movzbl jle sub cmp movabs adc mov rex.WRB repnz loope int xchg mov movabs mov add push mov repz in mov popfq mov xchg and (bad) pop sub stos xchg lods sarl mov sub scas jrcxz and (bad) mov add imul (bad) (bad) repz (bad) cmpsl (bad) mov shlb jne rex.WRX (bad) mov mov xorl cmc scas leaveq (bad) and mov add sbb adc and mov mov lods cmpsb scas mov mov lock xor xchg in cmp (bad) ds mov mov jp (bad) insl mov mov lret mov outsb add test xor enterq out subl mov jmp mov pop and pop clc mov mov sub rex.RB cmp adc cmp mov fbld (bad) int3 xchg scas (bad) incl adc scas (bad) loopne vprotq mov adc ficompl (bad) adc negl or mov icebp cmp movabs xchg push adc movsl pop (bad) push sbb (bad) or xlat cltd sahf popfq sbb adc scas mov adc cmc pop or jnp sbb cmp fldenv test (bad) xchg xor (bad) cli xchg lods xchg xchg pop movsb adc sub cwtl xchg scas movabs sbb scas xchg (bad) adc mov jne and in movabs adc (bad) pushq scas (bad) repz (bad) xchg (bad) mov not in lahf movsb movabs xchg mov xchg jmpq (bad) fnstcw (bad) or clc retq mov test adcl lea xchg in xchg movsb cltd add xchg loope orb in jmpq xchg jmp (bad) icebp or repz stc movsb testl (bad) rorl in leaveq movsb movl (bad) rorl lahf push cmpsl divl add or xlat in stos movsb mov mov retq (bad) lret in iret movsb roll jmpq xchg mov xchg xlat jrcxz std mull fidivrl xchg adc negl (bad) mov es (bad) add xchg sbb sahf sbb sbb popfq negl mov add (bad) sti scas (bad) xchg cli jrcxz or (bad) mov rex.WRB stos cmpsl jns sbb movslq sub push (bad) mov rex pop out jge xchg in loope jo jle rcrl xlat (bad) xor mov xchg and sub sub jnp pushfq jp (bad) repz rex.WRB stos in mov movabs (bad) repz sbb (bad) jo rex.WX adc and or mov or sub cmp mov insb movabs ja xor enterq rex.X rex.WB int adc (bad) add (bad) (bad) mov sub xchg mov (bad) mov mov mov rex.WR sbb mov add fsub push xchg mov (bad) ja and xchg je sti (bad) sbb movsl mov mov sahf push (bad) or pop mov (bad) fwait xor test adc stos clc add (bad) xor push (bad) xchg rex.W sbb adc push add fwait sbb rex.RB fwait loop cmovno mov or (bad) fwait jg ja rex.WXB sti rex mov push sbb loopne (bad) repz or cmc in add (bad) pop jrcxz sbb mov fwait rex.RX or fwait mov gs sbb (bad) cmp sbbl icebp fwait jge adc (bad) cmpsb nop sbb push mov test movslq test and movabs jae in cltd (bad) cmp cmp rex.X pushq mov div mov (bad) in movabs retq mov xchg sti (bad) sub and cmpl mov mov adc xorl js push add (bad) (bad) movsb and (bad) es data16 andl movabs cltd mov in rex.WRX sub cmpsb sarb imul mov sub (bad) rcll std movsl repnz add movabs scas push lods xor sbb (bad) adcb jmp enterq (bad) (bad) xcrypt-cbc cmpsl adc fstpl pop or cmpsb (bad) lret xchg xor (bad) add pop or cmpsl rex.R stc test rex.RX rex.WX negb add jge rex.XB test fwait pushq (bad) xor (bad) sbb mov mov fbstp (bad) (bad) lahf lods movabs rorb sbb mov mov add imul (bad) or retq sti lret sbb add lret or (bad) mov imul pushfq cmpsl sti jnp sti (bad) or rex.RX mov int3 retq cmpb sbb lods mov shrl js ror sub mov xchg stos imulb push cmpsl push (bad) or xchg cmp movsb cmp or mov and cmc fldl or incl lea push mov jrcxz rcl rex.R jrcxz add lahf cmp mov out (bad) stos (bad) xchg xor mov retq shrl adc lock retq cmpsb fwait insb out sti xor push ficompl lret mov fwait rex.WB (bad) (bad) (bad) outsb (bad) cli rex.WR out mov mov xchg pop cwtl fwait adc popfq movabs gs or (bad) cmp sub test or jno repnz (bad) decb callq add sbb jmpq rex.WRB and (bad) hlt cmpsb pop mov fwait scas repnz (bad) or mov cmp iret rex.RXB fidivr jne fwait movabs mov mov rex.R xchg and sub jmp cli repz mov mov sbb mov sub jmpq xor nop rorl jmp js test and cwtl cli test jrcxz xor xchg cmp xcrypt-cbc cmpsl push retq pushfq popfq mov sti jle repnz sub xlat jnp mov rex.RX rex.WXB rex.WRX fisttp xchg or or xor xchg mov mov pop test mov pop adc mov sbb mov jmp cmp lahf mov mov mov (bad) mov sbb fcomi jmp scas cmp jp (bad) nop fnop lahf xchg xor xchg rex.RX push retq or fs mov xchg pushq addl (bad) and push sub jrcxz movabs je lahf (bad) out repz movl mov callq sbb fbld mov cld popq push repz xchg icebp scas stos sub cmp lahf rex.WXB repz mov jmpq repz popfq fbld xchg ljmp mov adc mov int3 retq push fcmovnbe mov mov hlt sub xchg movabs popfq xchg loop sub movsl mov xchg xlat adcl cmp iret sti adc xchg sar cmp cli xchg mov lahf mov rex.WRXB repz out pop sbb sbb movabs movabs adc push test adc sbb sbb mov adc mov mov jmp repz sti mov test sbb sbb (bad) imul (bad) sbb std jbe sahf roll xchg mov rex.RX lret adc lea shrd std xchg test icebp retq sbb movabs iret xchg test xchg test xchg (bad) add jle xchg test fstps cltd repz sti jrcxz (bad) xchg stos sahf mov (bad) (bad) ds std std cmp (bad) fnstcw (bad) mov (bad) (bad) (bad) xchg mov sbb mov retq js sbb xchg adc cmp adc cmpsl cli lret test and lods mov rex.WRX adc (bad) test adc sbb pushfq adc rex.B fwait cmp xchg jmp sahf repz sti pushfq mov mov flds shrb lods hlt sbb shll mov lcall sbb fild loop rex.RX or cmc sbb jmp loope fwait rex.WR xor (bad) iret rex.WB mov scas mov test jmp adc (bad) mov stos int stos movabs jb lock rex.WXB out test lods xlat sbb test sbb int mov icebp sbb (bad) jmp repnz fwait loopne xlat cwtl pushfq int3 mov leaveq mov fldcw or sahf rcrl mov (bad) popfq rex.WRXB stos jp (bad) shll rex.WXB popfq xchg repz sti xchg jns xchg adc or sbb mov mov (bad) jrcxz jmp test sbb shll stos lods out callq test mov idivl mov mov mov cwtl mov adc sbb movsb push xor mov mov mov popfq xor sti movsb xchg jrcxz jmp xchg repz sti mov or out adc (bad) add cltd jmp xchg repz sti xchg rex.R int (bad) rcrl xchg push mov js (bad) xchg jmpq (bad) (bad) (bad) xchg add movabs mov sbb sbb sbb fucomi sbb (bad) sti (bad) popfq movabs lods popfq sub mov movsb adc repz fcompl push sbb stos add in stc and movsb xchg jmp repz cltd movabs icebp fdivr adc pop mov cmp mov jrcxz retq scas mov sbb xchg sarl or (bad) test fldenv mov out xchg adc and mov rex.WB int (bad) movsb (bad) sarl decl (bad) pushfq sbb insb rex.WRXB lock sbb (bad) xchg push mov (bad) lea cltd lahf leaveq mov cltd (bad) sbb rex.RXB cmp pop mov pop mov mov mov sbb xchg mov lods insl sbb fwait mov adc stos add fwait out add cltd or or mov cltd mov js mov xlat mov and cs (bad) push mov push xchg retq or sbb fs mov cmpsl mov lret xor pushfq mov adc test lret and cmpsl imul shrl iret insb mov ficoml cwtl stos xchg push (bad) cltd insl sbb leaveq xchg sbb xor mov xchg mov movsl leaveq rex.WRX out rcll rex.R lock or (bad) out test callq cmp (bad) mov xchg mov cltd test test scas xchg mov fldln2 mov cmp add push mov jrcxz sti pop sbb mov mov out (bad) cmp in sbb xchg cmc (bad) (bad) mov sub (bad) xchg stc xchg std mov xchg pop cltd (bad) lea icebp movsb cmp (bad) stos insb cmpl out mov loop lahf xchg je rex jp or vprotq movabs subl (bad) mov fidivl sub (bad) rex.WR stos cmp mov sbb cmpsl (bad) movsl mov rex (bad) cltd jno mov out mov xchg xchg iret cmp sbb (bad) scas xor xor mov (bad) xor jmp sbb mov andl xchg mulb xchg (bad) cmp xor cmp jo fnstsw cmp mov (bad) xchg mov mov push popfq (bad) mov rcrl lods mov out addr32 (bad) xchg xchg xor xchg (bad) cmp (bad) rorb mov rex.RX fist cmp sbb lea and fnstcw pushfq add add sbb fild vandps mov sbb or adc sbb rcl sbb and movabs (bad) xor repz rex.WR clc (bad) mov jno xchg lahf (bad) mov test cld and rex.WR sti sbb sbb xchg sti lods pushfq (bad) xchg lods icebp mov test pop cltd sub sbb or std popfq push mov in cmpsl ds (bad) xorb mov rex.WRX mov fildl test hlt lea mov xchg test and add loopne ds add decl lret xchg sub sbb (bad) in and mull in mov cmpsl add xor stos std retq movsl sub sbb push cld (bad) mov mov xchg hlt rcl lea (bad) push jmp rcr ficoml pushq lea sbb sbb popfq out adc jrcxz jmp cmc sbb negl push sbb (bad) sahf jrcxz xchg scas lahf jb adc lahf repz outsl (bad) (bad) sti out movsl (bad) adc (bad) xchg ja xor pushq int or (bad) enterq nop cmpsl add repnz test jge lock xchg xor std movabs sub negl int sbb xchg cmp fidivl xchg xchg stos mov in clc mov and xchg in lahf insl mov mov mov mov xchg and mov int movsl adc pop (bad) stos xor xchg je cli mov lods xor jnp adc pushfq (bad) loope xchg sahf cltd mov mov test int lcall pop std mov mov sbb out lret cli lods (bad) cmp cltd mov repz adc (bad) mov and and jrcxz jmp test sbb scas cli mov or (bad) xchg movabs (bad) movsb mov (bad) out xlat repz mov and sbb subb cmp sbb (bad) or (bad) frstor cwtl es add out pop mov rex.RB popq rex.R sbb hlt test (bad) movabs cs adc xchg int mov xchg movsb rcrl mov jns rorl ljmp movslq shrl xor sarl sti test icebp cmpl (bad) jne mov xchg cli cmp rex.XB test cld cmpsb sub sbb or mov (bad) fwait adc fcmovnbe xchg repz cmpsb sti popfq movabs mov mov pushfq xchg sbb lods movslq cmp add cmc sbb xchg adcl mov sbb rex.R adc or out idivl test xchg sbb movslq idivl pop sti xchg nop imul outsl add fcompl stc sarl mov int xchg push addl shl std cmp stc test cmp xchg (bad) xlat int addr32 fwait push sbb out cltd adc movsl cwtl rex.WRX mov or imul jb xchg sbb cmpsl iret mov cmp addr32 popq cltd mov (bad) mov lods (bad) (bad) xchg mov (bad) pop pushfq pop test add mov cmp xchg jrcxz jmp xchg repz rex.WXB std fistl add in lea sub sbb repz mov sbb hlt test leaveq mov roll mov (bad) subb jrcxz out pop sbb (bad) jp xlat mov lods xchg mov sbb fcmovne notl scas movabs and movsl nop (bad) mov idiv xchg std jg lcall (bad) sbb fucomi lods fildl mov test es add cld cmpsl orl repz and cltd xchg push rorb xchg (bad) fistp in rex.WRB sbb cld jl mov jrcxz (bad) or insl xchg rcr leaveq pop xchg adc lahf shlb (bad) sub pop stos xchg pop xor xchg xchg popfq (bad) mov xor pop repz movsl sbb sahf (bad) adc pop mov mov adc (bad) sarl cwtl mov (bad) sbb xchg cmpsb rcrl sbb roll int3 test stos stos mov popfq (bad) xchg movsb xor std stc std xchg jmp cmp int3 mov out mov sbb int cltd ds sbb out clc leaveq (bad) xchg cmc repz jrcxz lods sub mov (bad) sbb lods in out adc pop sbb sub sbb jle lods add mov adc xchg xchg sbb xchg adc mov mov jmpq sbb lods adcb int jle mov add (bad) jge jmp repz (bad) mov add sbb popfq movsb movsl fcomps xchg and rex sbb icebp (bad) in sbb adc sbb movabs rex.X push pop sbb cltd push sbb scas mov or in xchg xchg clc test xchg (bad) icebp xchg (bad) movsb (bad) movabs hlt pop (bad) in or sbb out add sbb sbb add lods (bad) lods cltd xchg ror shr add (bad) sbb adc clc sbb shlb xchg xchg xchg mov sti pop xchg (bad) adc in ds rex.WRXB test mov sarb ror cltd (bad) jle rcrl mov xchg (bad) int rep (bad) std sub popfq cld fwait test sub sbb popfq sti mov xchg push rcr and xchg cltd (bad) (bad) jmp movsl (bad) xchg rex.WRX lods xor popfq mov xor sbb mov cmpsl adc cltd test stos mov sub sbb xchg std (bad) push js xchg int lahf lods xchg add negl mov sbb mov cltd test sbb pop xchg mov fisttpl lods xchg xor mov mov mov movabs scas lahf (bad) movabs rex.WRB int3 or shl addps lods retq rex.WRX xchg xor xchg (bad) push in adc mov test lods jrcxz notl mov cwtl xchg std sarb shl mov xchg (bad) and lea std (bad) (bad) xor callq sbb (bad) sbb rex.R rorl sbb fscale iret or xchg je (bad) callq xchg callq lret xchg jrcxz jmp repz iret sub rclb mov cltd mov std cmc pop movsl xchg lods mov xchg adc lea shrb jrcxz sti (bad) test mov not mov add lea sbb (bad) movsb mov (bad) lods mov sub cwtl xlat rcrl cwtl movsb in xchg xchg mov stc xchg inc (bad) sbb stos testb jns scas xlat mov mov out xor mov push loope in in mov or (bad) sti fistpl (bad) sbb mov cltd cmp lret adc and xchg cwtl loope xchg je rex std xchg pop pop sbb fiaddl mov pop divl sbb sahf sub insl push cmc xchg pop imul hlt sbb mov outsl pushq jmp sti mov mov sbb mov cmp lea cmp (bad) fs lods retq stos sbb lea xchg fisttp xor sar xchg or popfq (bad) leaveq fwait in mov lea xchg scas xchg mov nop rex popfq fwait pop jl cmp movslq movabs add jns push cmp hlt sub out rex.RB sub movb lods callq xchg mov (bad) test (bad) retq in push xchg retq fidivrl out cmp retq loope (bad) xchg push gs outsb scas test or in push xchg out cltd mov test mov push retq clc rclb fcmovb loope (bad) xchg (bad) decb loop retq or xchg push mov movsb stos add rorl std in rep jmp jrcxz cltd mov (bad) divl fsts or jmp (bad) es jrcxz xchg (bad) mov andb (bad) rorl repnz jrcxz in (bad) lods xchg add mov neg in shlb fidivrl repnz stos add sti ficomp (bad) cmp retq icebp or cli xor xchg pop sarb callq cli mov (bad) out or sbb (bad) add mov (bad) mov and ds (bad) fistl outsb fwait mov (bad) mov (bad) adcb lods pop fwait sahf rex.RX and jae stc (bad) test (bad) pop (bad) loope test sbb (bad) (bad) js sub lret push rex.X (bad) cld (bad) rex.RXB movabs data16 pop fwait retq lods (bad) (bad) rex.WB sti cmp loopne mov cld fwait retq cmp int3 outsl insl in mov jp lret pop rex.W rex.WX fdivr repz add movabs mov (bad) jae (bad) sahf mov scas add (bad) insb fisubl out mov sub iret rex.X add (bad) ljmp (bad) cmpsl mov and mov xor jmp mov orb or xchg callq es fwait sbb adc rex.WRB fdivl out mov movabs pop pop cmp mov fs int xor mov fwait mov xor rex.XB mov adc xchg (bad) fwait xor jb ss out xor loop mov fcomp cmp sbbl cltd jae fwait movabs (bad) stos jge rex.RB jae jp pop in stc in or in sbbl (bad) pop rcr rex.WRB fwait (bad) push (bad) jno lahf sbb (bad) mov rcrb jne popfq (bad) rex.RX mov rex.WRB (bad) xchg sbb mov or or lret lods (bad) jns ja pcmpeqd scas adc sbb xchg mov xchg nop addr32 callq lahf add (bad) rex.B mov (bad) stc insb ja repnz jmp xchg fwait mov movabs jbe movabs lock cmp es stos fdivs repz lret test stos shl mov fwait test rex.W fwait push out int3 xchg stos movabs fisttpl sbb pop movabs xchg cmp lea cwtl mov out in fwait out test (bad) push rex.RB rex.XB rex.R icebp pushfq hlt fsubrp mov xchg loope lret adc add movsl out leaveq loop out sbb mov out shrl fmull sub imul test or fwait mov ja fs fwait callq data16 fwait clc xchg and mov out movsl (bad) fwait mov jg ja sbb rex.WRX cmpsb sti jp nop mov shr loope,pn cmp pop xor sbb nop test clc or and in fwait and sub add (bad) repz pop mov ds (bad) and imul pushq rex.WR sti ds mov mov fisubrl fistpl (bad) sbb lret rex.RXB rex.WX (bad) sbb mov mov adc fldt adc jo fwait movabs leaveq pop ffreep jno push xchg nop fwait rex.RX loope int rex.WB not ficoml cwtl fwait jle push out jrcxz lret clc add mov rex.WR movsb rex.RX jmp cmp fwait mov jae addb xchg mov std fwait push leaveq and loop jo insb mov fwait imul fistpl callq jne adc rcrb fwait sbb rex.X adc xchg mov sti (bad) xor rol fwait mov movsl insl pop retq mov orb add jae jp cmc mov lret sahf fwait mov xchg sbb fwait and adc leaveq (bad) rex.W fwait jle es shr xlat (bad) fidivr cs sti adcl scas and sbb xlat test fisttpl fmul imul loope (bad) (bad) fwait pop xorb fwait mov cmp rex.WR fwait popq fwait lods fisubr mov pushfq (bad) mov in in insb sbb es fcmovne (bad) repz (bad) cmp mov fistpl (bad) (bad) add mov lahf fwait cmpsb in jae rex.XB or sahf out and (bad) sbb lods cmp xchg stos adc out lret cmpsl gs out sbb retq insl fstpt lret (bad) stos stos fwait xchg imul mov stos out xchg rclb mov add push lods sbb or mov int retq fimul movabs ss cmc fwait std sbb addr32 xchg pop (bad) insl jbe data16 movabs insb xor lahf sti xor movsb (bad) je xchg flds and (bad) pop sti sub pop outsb adc push or (bad) lret sti sbb mov jrcxz mov outsb std sbb push lock test cmpsb fistpll xchg fwait add movabs lret cld je push loope out lret mov rex.W rex.X mov pop lret mov repnz (bad) shlb (bad) ja mov xor add fstpl rex.WXB jae pop xchg mov add xor mov mov mov sti push fistp xor (bad) loop mov out or fwait push rex.WX loope ror cltd (bad) pushfq loop xlat and pop stc rex.X lock insb xchg xchg pop add (bad) cmc sbb movsb lret imul sbb xchg xor fisub cmp out (bad) btr (bad) sub (bad) lahf adc rex.RX xlat fwait mov cmp rex.R rex.B (bad) (bad) insb jge,pt rex.WB mov jmpq mov pushq mov xchg and pop push xlat movabs in fwait jmpq add cmp mov fidivr mov (bad) fwait lret rex.RX and cmp fwait psrlw (bad) rex.B fs push fcomi loop xor fwait rex.WXB fadds enterq (bad) push cwtl clc mov gs jnp sarl hlt movabs sbb rex.WR (bad) jo push in imul mov add xchg (bad) insb movabs pop rolb fidivr or rex.WRXB popfq js (bad) fisttpl fwait lock pushq fwait adc fnstsw es xlat lret mov push sub and push setb mov fwait push fnstcw pop xchg int3 pop mov jae fwait or (bad) mov rex.WRB jmpq mov add (bad) loop lea ja ror addl fwait rex.WXB js jmp or or in jns (bad) es sbb (bad) fsubl int3 stos (bad) fwait xchg out rex.RB ds lret fwait mov leaveq and (bad) (bad) loop fwait pop (bad) push testw (bad) (bad) (bad) loopne sti (bad) lock sub adc (bad) insb icebp (bad) jrcxz test cs rex fwait (bad) addl fwait jb pop cld lock mov neg cmp fwait xor repz test xchg (bad) out pop in retq movabs rep pop fwait push mov or sbb test (bad) mov cli mov push repz jno or sbb retq xchg loopne fwait rcl jle outsb jnp movabs repz fwait adc rex.WX jmpq pop pop pop add mov js lret fisubr (bad) loopne fild sbb (bad) lods orb mov sub addr32 fwait nop xchg rex.WRB jp,pt rex.R fwait and jrcxz gs fstpt rex sub rex.RX fwait (bad) xchg mov es hlt movabs mov fcomi jmpq rex.WB rex.RB mov setle mov jge or movabs jl sub fs out fwait int negl loopne fwait loope lods sahf (bad) push js fwait pop rex.X or movaps nop sub mov xor fwait cmp (bad) (bad) pop mov mov popq pop cli push cmp sbb mov add mov (bad) jno rcrl cmc cli imul in fwait and movsb sbb xor push fwait cmp (bad) fild jp sub sti xchg rex.X push outsb fwait push jle lret jae mov xor repnz and mov int3 fwait cmp retq or fwait lods test add icebp loope fwait or mov pop pop cmpsb js or add (bad) in retq adc stos (bad) testl (bad) fwait cs push (bad) sub pop addr32 fwait (bad) cld mov xchg rex.WRB gs pushfq mov jnp pop cmp fdivrl fwait xor sbb stc (bad) lret or jnp xchg (bad) in lock nop insb in andl pop ss cs mov (bad) leaveq (bad) fwait out int push mov mov xlat sub stos (bad) jnp sbb (bad) fsubs cmpsb pop jne sbb in repz imul mov add retq mull (bad) mov fdivrs insb pop jo add cld jge rex.WXB movabs retq (bad) mov rex.B out or adc rcll mov jnp xchg sti sbbb rex.XB sahf mov loop fwait mov (bad) pop (bad) and fildl rex.WRX add or (bad) mov cmp adc jl lock iret sbb cltd stos pop cld sbb repz or xchg rex.WRX rex.WR jp xchg cmpsl (bad) (bad) outsb sti out movabs (bad) lods rex.WXB sbb sbb adc int xchg mov and jge scas (bad) mov cmp shl rex.R ds lret movabs sbb loope fisttpl cs leaveq fwait icebp lods pushfq gs push adc xchg jp (bad) fwait scas andl jg out jmp rex.B fwait sub adc fnstcw loope scas rex.WRXB pop hlt and sbbb push jae adc (bad) insl fwait pop cmc mov jp and loopne fwait (bad) test je add pop sahf pop cmpsb mov loope (bad) (bad) xchg sbb xchg rex idivl mov rex.WB rex.XB (bad) mov push (bad) movabs cmp rex.WX mov xchg mov lods mov insb mov leaveq sbb xchg xor test ja std rex.WX sub rex loop (bad) push popfq pushfq popfq xchg (bad) (bad) jmp stos add and or fmul jae mov push or loope mov (bad) sub rex.WRB lock jb pop loop mov xor in (bad) cmp nop pop outsb rex.RB xor lret (bad) mov cwtl xor (bad) sbb mov sti cmpsb xor jne repnz (bad) or sbbb mov fdivrs xlat rex.XB sti pop xlat mov add movsl or mov mov pop (bad) or out rex.WR xor xchg pushfq push popfq sbb (bad) xchg (bad) lea mov push sbb (bad) sbb cwtl xchg rcrl in rolb scas xchg push xchg adc xchg rcrb (bad) push xchg cmp cmp or (bad) stos xor xchg mov movsb leaveq clc sahf subl movsb (bad) xchg fdivrl fnsave ror xchg (bad) rex.WR int push rex.WRXB rex.RXB outsb cli test (bad) cltd push test sbb repnz cmp out or lock xchg cwtl fidivrl xchg lahf fimull test in adc adc add xchg jrcxz prefetchwt1 imul scas movsb xchg add xchg adc or (bad) iret in or lret (bad) (bad) mov insb xchg lahf fimull imul in movabs movslq je movabs mov or (bad) xchg movsb loope (bad) lret pop idivl rex.WB (bad) jp mov outsl xchg sbb mov (bad) sbb negl in mov in mov mov xchg (bad) fidivrl test xchg mov jmpq test (bad) in or repz stc movsb testl (bad) rorl in leaveq movsb movl (bad) fisttpll movabs scas fidivrl mov mov in lea add fst icebp fisttpl fiaddl movsl xor ficompl mov rex.B xchg cli push stos pop loopne sbb pushfq add sbb int3 frstor (bad) (bad) xchg scas jrcxz fnstcw jmp xor gs retq (bad) fdivs stos push mov pushq xchg or add mov mov rex.RX push push sbbl adc sbb mov (bad) xchg vpcmpeqw or loop xchg lods xchg (bad) sarl and cltd mov (bad) or sbb test xchg lods or xchg movsb and rex.WRXB mov pop and sub sub xchg out rex.RXB fwait repz jp add rex.XB sub cmp xlat retq mov jp ficom je mov mov sub (bad) hlt (bad) or (bad) push rex.W (bad) cmp mov cmp jl (bad) (bad) xchg cs mov mov xchg jp mov add cmpsl cmp retq sbb cwtl adc loop test rclb jae add (bad) adc (bad) xchg out (bad) stc stos sti adc sub add adc and rclb callq (bad) test test xchg cmpsl xchg (bad) xchg (bad) (bad) cltd repz or lret xchg xor xchg in xchg mov xor mov push sbb adc adc or adc rex.WRX orl imul mov rex.W lret fcoms pextrw adc (bad) int sub add xchg adc or mov lea sbb and callq in xchg out cmp xchg cltd or stos (bad) movabs rex.WRB adc (bad) mov sti int3 (bad) xchg scas xchg sbb adc fnstsw mov sti add adc test fldl gs repz xchg or mov (bad) mov adc mov (bad) xchg cwtl cmp in (bad) xchg lods sbb xchg add mov push popfq or fldenv cmpsl sti (bad) xchg pop sbb or in xchg push (bad) xchg stos int3 (bad) xchg rcrb mov jb xchg mov (bad) xlat xchg (bad) add movabs sbb mov sbb jrcxz mov mov jne mov (bad) imul fbld xchg loopne sbb adc in xchg fs test xchg (bad) adc popfq mov adc cmp (bad) sbb rorl je xchg adc adc mov or xchg sahf xchg jrcxz cmpsl lahf (bad) xchg pop movabs (bad) jrcxz mov popq stc mov cwtl (bad) mov xchg cltd sbb movabs cmp retq xchg sub sbb (bad) mov je xchg or (bad) movabs mov notl repz (bad) cmp retq hlt jbe iret mov (bad) pop xchg rex.RB repz mov adc xor (bad) fisttpl adc cltd push retq or movabs push mov mov mov test ss movabs mov scas add (bad) lahf lret xchg imul retq (bad) mov (bad) mov sti in xchg mov (bad) je xchg add (bad) cltd xchg jb fnstenv add (bad) sbb sti xchg iret jns jrcxz (bad) stos out rcll cmpsl rex.WR xchg add movabs lret xchg scas fs (bad) pop xchg loope sbb or test xchg scas insb sbb jrcxz xchg xchg xor xchg stc adc jmp xchg nop xor cmp (bad) add sbb sbb cmp mov sub (bad) insb (bad) mov out enterq xchg mov (bad) iret cmpsl (bad) xchg push movabs rcrl ss fistl je xchg add (bad) xchg jmp sbb push movslq popfq sbb decl xchg add popq rex.WRX rex.WB fstpt mov addr32 out adc sbb (bad) mov hlt jbe cltd rex.WX movabs xchg xor movsl (bad) adc stos (bad) mov je xchg add (bad) (bad) (bad) rex.WRX rex.WXB stc mov iret movabs xchg push rex.W rex.WB cmp roll (bad) lret adc movsl push scas rex.RB in mov adc es subl adc sti xlat jb push lods (bad) jmp es (bad) in js sarl xchg add movabs cmc (bad) adc xchg fcom xchg iret (bad) mov (bad) xchg fsubrs (bad) cmp xchg xchg xchg (bad) rcl lea add (bad) xchg or rex.RX mov adc (bad) cmpsl hlt pushfq xchg lods push sub fistpl cmpsl repz xchg flds xchg (bad) stc adc adc cmp (bad) rex.WB sbb scas push test rex.WB mov xchg xchg add (bad) xchg out (bad) popq test xchg cltd (bad) int3 xchg xlat je xchg add (bad) xchg in jp mov test out rcll mov (bad) xchg scas fstpl popfq (bad) pop xchg push pop sbb xchg (bad) shrb sbb in rex.W (bad) xlat xchg (bad) enterq (bad) xchg add adc cltd rex.RX (bad) pushq rex.WRB pop (bad) xor pop rex.WX (bad) adc cmp xchg notb fstpt jmp adc rex.WXB mov (bad) outsl fcoms rex.R sti adc fld mov adc cmp cltd pushfq xchg movabs lea flds adc (bad) sub push retq sbb or icebp out xor int mov test out lret xchg scas jae fisttpl (bad) repz adc (bad) cmp add jo adc add xchg adc (bad) xor adc pop adc rex.X movsl rex.RXB imul (bad) retq (bad) popfq cltd xchg xor xchg add (bad) sahf xchg pop rex.XB xchg xchg push rcrb mov mov adc mov sub stos pop adc jl or test xchg vaddsd (bad) or (bad) (bad) pop xchg push rcrb popfq (bad) mov (bad) test rex.XB out adc mov lock (bad) pop xchg insb rcrb (bad) sub fistl in xchg xchg add (bad) popfq xchg xchg ja (bad) mov adc (bad) xchg imul jrcxz (bad) lret movabs mov sbb (bad) adc mov mov fwait in xchg sbb sahf je cmpsl int3 (bad) xchg scas mov scas (bad) pop xchg lret xlat rex.X hlt int loope xchg add (bad) (bad) lods int xchg or push cltd (bad) mov (bad) pop xchg js sbb cmc or iret adc jbe mov xor rex.RXB sbb rex.RB out xchg xchg cltd mov xchg mov shrb sbb jo,pt test xchg xchg adc (bad) lock mov lea sbb rex.WXB movsl out pushfq xchg add rex.WX (bad) adc (bad) jo retq (bad) adc (bad) jo (bad) rex.X (bad) (bad) mov xchg mov out mov mov jbe mov incl imul xchg (bad) popfq xchg scas movabs lods jmp ficompl cwtl iret rex.WXB hlt data16 in lret xchg scas imul sub adcl adc mov data16 sbb sbb (bad) movabs rex.WRX (bad) rex.WRX xchg in movslq data16 lret xchg mov rex.X rex.WXB movabs mov movabs movabs (bad) xchg sbb adc (bad) adc xchg data16 mov xchg rex.R (bad) push decl out movabs mov notl lret xlat rex.WRXB fs mov adc rex.RB sub leaveq pop xchg sub mov xchg adc sbb or xchg movabs xchg (bad) adc icebp mov lea xchg mov xchg adc adc sbb in xchg cmpsl push sbb adc out (bad) (bad) loopne repz (bad) mov fisttpll sti (bad) mov stc mov add in rex.WRB sbb outsb lea xorb lret xlat adc test stos add adc (bad) sbb imul mov jo lods movabs or push adc or sbb jp rex.R fcoms mov (bad) xchg adc mov xchg test (bad) mov fnstsw (bad) or fmuls or outsb lea lods lods add (bad) mov jg js mov xchg adc in iret movsl stc std adc lcall adc add jrcxz pop loope loope xchg xchg and mov sbb (bad) leaveq stc fistl mov shrl stos sub mov mov cmp (bad) adc cmp rcll mov (bad) loope xorb push cltd sti adc mov mov xchg vpor mov mov (bad) sbb scas in retq clc adc cltd lods fbstp sarl adc cmp adc sbb fwait iret rcll pop mov rex.WR mov outsl in test xor mov or mov xchg (bad) (bad) cmp divl adc adc in rcrl adc and push adc or (bad) int (bad) scas adc clc cmpl scas mov rex.WX js repz adc mov out add (bad) adc cmp mov in popfq lret xchg ror retq adc sub lea push sbb (bad) test mov int cs adc test std lea subl add lret adc cltd lods in mov push fsts xlat adc movabs xorl (bad) pop adc movsl je (bad) adc mov mov mov cmpsb addr32 adc adc (bad) (bad) lahf clc adc cltd cmpsl xchg (bad) mov xchg movabs cmp mov mov sub lea (bad) in mov (bad) adc rex.WX sub scas cmp xchg adc rex.WRX mov push adc or jrcxz lahf fs or xchg pop sbb adc outsb push stc pushfq xchg (bad) sahf sbb cmp xchg std iret fstl pop jo adc fsts pop pop in xchg mov adc movsl sbb add (bad) test (bad) (bad) adc jns add lods stc adc rcrb adc push sahf rcll (bad) stos adc js xchg vunpcklps adc (bad) push add cmp (bad) (bad) mov mov vunpcklps mov xchg cltd mov adc test jae loop movl out add adc adc mov jl adc rex.WRB int mov stc adc sbb stc sub adc mov xchg adc (bad) mov test adc sbb outsl mov mov mov in sbb (bad) lods (bad) sahf xchg xchg rex.W lea (bad) cltd rex.WB std mov add iret xchg repz sbb adc lret sti iret stos adc retq pop mov push test sbb (bad) rex.R push adc or (bad) (bad) adc (bad) pop lods iret adc xlat push adc mov pop retq testb movabs mov fcomps fldt test lea lods mov stos cltd repz or (bad) cltd mov pop xchg cli fcomps mov test (bad) lea xchg add mov cs repz or push push or dec mov xchg jb cltd sbb mov pushq pop push mov mov andb rex.R fnstsw mov pop icebp pushq movabs pop xchg and xchg mov and cmpsb fwait adc jl and std gs in out repz cwtl jrcxz xchg mov callq xchg insl rolb rcll repz cltd stos rex.WR fwait cli mov (bad) xchg xor mov jle je idiv mov add cmc sti cltd test push and fwait (bad) movsb or (bad) insb jrcxz cmp fwait gs (bad) movabs sbb pop (bad) mov in sub xor fwait adc insl jae sub (bad) (bad) (bad) hlt sbb (bad) xchg out fwait (bad) jae (bad) mov jl xchg clc sbb pop rex.RB mov add push fwait add loope jmpq (bad) callq sbb cmpsl rex mov push cmp rex.WRXB (bad) loope test (bad) (bad) lahf mov lock or fwait stos xchg in add mov add adcl movsb (bad) stos jns cltd fwait mov sub xchg fwait mov sub fwait pushfq jbe sahf or (bad) in and mov and xorl (bad) rex.X (bad) callq xor jle repz retq scas in movslq mov mov shlb fwait insl sub mov (bad) leaveq jbe rex.WXB push fwait rex.XB push rcrl mov rcrb mov (bad) jl jg pop xchg and xor cwtl clc ljmp (bad) es add xlat jae cmc sbb jmp mov xor fwait xchg (bad) repz fidivrl cld in jns (bad) adc cltd rex.WR imul mov outsl (bad) cmp insb mov (bad) lea (bad) (bad) pushfq test rex.RXB (bad) sbb (bad) cli outsb mov (bad) fwait mov fisubl or xor jmpq mov mov mov jmp repnz push fwait xchg ja imul test mov mov sbb int3 jle (bad) (bad) or cmpsb (bad) fwait xor cmp xchg (bad) pop sub jns adc sub loope and scas cmp jb mov popfq rex.XB sub sbb jg xchg or (bad) ror sbb movslq bswap cmpsl xchg lods lea test cs mov (bad) mov movabs ds (bad) sub stc int3 in insl lea rex.WRX fwait or jg mov fimull jo and fwait jbe out jge imul orl loope add idivl enterq sbb xchg out lods (bad) out fwait jo imul outsb movabs (bad) pop in push mov cmpsl mov (bad) sbb xlat or add loopne sbbl js pushfq (bad) pop (bad) xchg sbb ffree outsb repz fwait sbb xchg fwait and jp cmp jle and sbb jb sbb jo callq xor (bad) rcr in or (bad) fistpll jns xor fwait (bad) sar stos loope fwait jp rex.WR xchg sbbl sbb jrcxz (bad) mov in fwait or (bad) push retq (bad) cmpsl movabs imul rcrb rex.WB fwait loop (bad) jns jne gs fwait jp lret sub add (bad) sbb leaveq nop fwait iret adc xchg stos cmp repz jl sbb rex.WX add fild fistl (bad) sbb mov fwait xlat xchg sub pop fwait sub leaveq icebp cmpsb out sti push or mov (bad) xor mov rex.B gs (bad) mov fwait lahf imull mov ljmp and scas adc mov insl fwait (bad) xor rex.B fwait in iret ss adc xchg sti (bad) adc fwait adc icebp jrcxz andl mov pushfq callq (bad) mov sbb push sbb (bad) add ljmp (bad) and mov test test adc jmpq add fwait movabs shll xchg data16 and xrstors cmp fwait add jo rex.RXB out cmp fwait or fsubl (bad) sahf lgs loope fcomps shrd js loopl sbb scas ss jle sub fwait (bad) imul mov (bad) sub lock mov (bad) int fwait pop adc stc sbb in leaveq cmp (bad) pop fwait xchg icebp popfq insl fisubr rex.RXB fwait sub sub (bad) cmpsl push je test or jp (bad) scas jrcxz (bad) (bad) mov pop rex.B lcall mov test (bad) mov xchg sahf orl stos ss pop scas fwait stc (bad) adc rex.RXB out fwait sbb push mov sahf adc lock rex.WRXB cwtl (bad) fsubrl jo push pushq sub jle repnz (bad) mov (bad) icebp cmpsb imul in jno sbb fwait xchg (bad) cwtl jnp xchg shrb pushq enterq sbb fwait (bad) (bad) xor sbb lea and mov jl sub sbb cmp and in cmp adc test scas sbb fwait xor mov icebp movabs mov fwait stos sub rex.WRX xchg fwait adc fisttpll (bad) cmp jl sbb jno jnp cmp cli mov sbb clc (bad) cmp (bad) decl sbb rex.RX rex.WRXB es rorl jrcxz cltd imul fwait (bad) (bad) adc rcrb jno test sbbb movsl xchg punpckhdq movabs jno int fwait roll pushfq xchg pop (bad) sbb (bad) scas (bad) (bad) (bad) adc fwait (bad) (bad) adc rcrl out xor (bad) addr32 test fmull bnd fwait jp,pn (bad) or in fwait out ds jo add sbb (bad) (bad) (bad) std xchg enterq test (bad) or jle adcl lods push mov cs xlat or ds fwait pop push jl ja adc test (bad) xchg rex.R fwait mov xchg (bad) (bad) jo fwait testl cmp adc fidivr and fstpt xlat jrcxz add ds xchg add and movsb rex.WXB and fisttpl jrcxz test (bad) jae (bad) and mov push sbb popfq fisub sbb (bad) and sbb jns stos mov fwait add insb cmp loopne sti cmp movabs and sub sti add div lahf fwait mov lret (bad) xor xor sbb mov cmpsl pop rcrb (bad) movabs fs (bad) cmp lretq fistpll push sahf decl mov lret rex.WR cmc mov fildll sbb rex.RX in sti (bad) (bad) pop (bad) push xor lods adc or (bad) fwait rex.X (bad) icebp (bad) push stc sbb push jmpq icebp rex.W mov sub jo mov (bad) (bad) hlt out testb rex.WRB rex.WRXB in xchg test xor or lret and out push cmp rex.RXB (bad) adc rex.WR or (bad) stc cltd jae xchg stos jg xor (bad) sbbl leaveq js cmpsl (bad) jmp xchg push fcomi adc push (bad) clc xor fwait add vpshaq mov xor sahf (bad) (bad) stos (bad) lods out jmp nop xchg adc adc mov adc sbb cmp and add (bad) mov fcomip fwait (bad) gs lahf cltd fcoms je push fwait iret (bad) scas hlt fwait (bad) cmc retq lret jne fwait sti xchg sub (bad) sub push pop cmpsl mov (bad) jnp stos jb outsb fwait push jge adc es sbb pop mov jge jrcxz (bad) jno jbe pushfq push in pop xor sub movsl fwait movabs insl int3 out test cmp push out pop sti sub je cmp lods mov jmpq sbb clc mov fwait cwtl sti addr32 sbb or cwtl (bad) sub (bad) icebp and sub jle cwtl rex.WX outsb sbb mov std add decl (bad) rcrl loope rep hlt fwait jrcxz cwtl xor xchg in movsl sub popfq push sub out in jmpq sub hlt scas sbb mov or sar incl fwait cwtl fndisi(8087 (bad) and or jle fiaddl and clc sahf (bad) lret in rex.W cmp xor sti retq ja mov sti mov jne (bad) test fwait push jno iret testl rex.WXB adc leaveq fwait xchg jp fwait cmp cmp in (bad) mov (bad) movabs adc cmpsl fwait out xlat (bad) push std pop xchg cwtl (bad) (bad) mov lock subl xchg rex.XB fwait outsl add insb in retq fwait lods or rex.B movabs cmp sub xchg and pop sbb xchg and rex.WR pushq adc lea and scas cli (bad) (bad) callq (bad) fildl popq xchg cmp pop mov cltd (bad) fwait add (bad) pop pushq pop in mov sbb cli (bad) scas rex.RXB sti mov pop outsb (bad) icebp fwait je sbb sub jge sbb xchg iret loopne xor mov lret (bad) stos sbb sbb xor fildll (bad) jne movabs movabs sbb (bad) mov repnz loope mov leaveq fwait cmpsl scas cli jae (bad) xchg sbbl fwait sahf rcl (bad) cmp adc push jle fildl and stos sub cmp pushq pop retq (bad) mov fwait (bad) jmp mov cmp (bad) callq int3 data16 rex.R imul fwait testb jno lock fwait adc pop pop mov (bad) rclb movabs cwtl pop insl rex cmp movabs cmpsl xor cwtl mov add jns sbb (bad) (bad) mov (bad) divl mov (bad) lea jb fwait in fbld loopne stos cmpsb fwait icebp (bad) test clc rex.XB fwait in sub popfq rex.RX movsb mov js cltd psrld mov sbb mov (bad) xor fwait mov and jmpq retq imul movabs (bad) xor mov leaveq mov adc (bad) push jns je shlb movslq or rex.WRB mov fwait cmp (bad) callq test fwait mov (bad) (bad) (bad) push faddl mov jmpq and or sub sbb pop jle (bad) sbb movsl (bad) add mov add (bad) imul movabs pop insl jbe add (bad) out cmp mov adc repnz frstor (bad) ja (bad) cltd xor jrcxz (bad) jne mov lret fwait mov mov sbb rex.WRXB fwait add xor test movabs (bad) cmp (bad) jae pop fs cwtl mov gs movabs (bad) stc stos or (bad) rex.RX or push (bad) mov push (bad) and mov popq rcrl push mov xchg and fwait (bad) xchg rolb mov rex.WRXB movabs fwait xchg mov cli (bad) cltd mov xchg push (bad) loopne (bad) pop pop retq or hlt pop xchg out jns loop (bad) test jno push je sbb (bad) insl (bad) sub nop (bad) and jrcxz mov enterq mov retq (bad) cmp loop xor outsb or sbb hlt rex.XB in fsub mov js mov lret jge adcl pop (bad) xor imul rcrl in addr32 jp loopne lret pop imul ror pop sbb (bad) fucomi or or es (bad) mov xchg out roll sbb sahf (bad) outsl rex.WRXB mov xchg shr callq (bad) mov xchg loopne outsl pop mov lods (bad) mov fwait (bad) stc cmc rcr icebp retq add (bad) sbb and jg stos and ja and retq mov scas xchg xchg rex.R fwait rorb in loopne fwait mov or fist js subb (bad) enterq mov movabs xchg test adc fwait rex.B or bts xchg mov sbb pop and in test fwait outsl xchg jno rex.WXB sub rcll cmp (bad) jp,pn fwait (bad) or movsb fwait sub cwtl xchg xor (bad) and mov (bad) cs (bad) pushq cmp mov retq jno in fnstenv push rcll js stos roll movsl fwait loop mov (bad) fwait or (bad) hlt test mov cltd stos (bad) test mov sbb enterq cmp pushq stos jbe mov in xlat sub cmp ficompl (bad) movabs loop rex.WXB cs cmp add adcb pop rcrl (bad) adc repnz sub js (bad) pushq (bad) jb nop fs test sbb adc cmp (bad) mov add mov sbb cmc adc hlt rex.WRB (bad) lcall retq enterq (bad) repz jnp jno rcrb push push loop fwait jne ficompl neg adc outsb mov and movabs jmpq repz fsts mov sbb xchg cs orb xchg xchg (bad) adc (bad) (bad) nop pop fcmovnu sbb xchg xor xor cmp sub jrcxz sti pop pop (bad) fwait setp adc repnz (bad) rex.X (bad) add shr rcrb jae retq lahf or or movabs mov fldt lahf (bad) rex.WRB (bad) popfq push rex.WB (bad) fwait imul and and sbb xchg and add add fdivrs fwait test (bad) add (bad) cwtl fwait iret stos popq (bad) jnp xchg jg fwait rex.WR rex.XB stos fwait (bad) mov push rex.X stos jbe cmp xchg imul adcb adc mov push test jl (bad) cmp mov or rex.WXB cmp rex.WRB pop mov adc rex.WB or push fwait rol push jmp ror (bad) fwait (bad) and xor hlt testb pushfq (bad) sub loope ds leaveq or jle adc fcompl cli add in stos clc div loope rex.RB and leaveq sub fcoml xor fwait sub mov mov sbb (bad) popfq xchg movabs out mov or movsb cmpsl xchg iret xchg cmp mov sbb movabs stos rex.XB ljmp mov sbb fwait xor (bad) jnp in xchg jp xor repnz cwtd scas sbb loopne mov xchg icebp and xor rex.RXB cwtl jl pop pop int or movabs (bad) mov repz add leaveq (bad) cli (bad) xchg rex.RX fistpl jmp and sbb movabs gs mov add (bad) int3 hlt movsl pop outsl cmp pop rex.R stc lods movslq sub mov adc sbb (bad) imul out cs fwait xchg scas iret (bad) movabs mov mov sbb push xchg adc fwait scas rcll jb sub sub repz sub movslq add faddl fist sbb mov sbb mul push fwait xchg (bad) popfq xchg jg sub jle lods cwtl cmp jns rex.R fwait (bad) ja add push (bad) (bad) add in push mov sub sbb stos negl mov (bad) fwait xlat rex.W lret sub pop jne mov push push mov xchg fwait pop test fild mov cli mov pushq cmc cmp enterq xor push stc movsb outsb fwait pushq out retq enterq (bad) fldl clc outsl (bad) fwait loop xchg rex.R adc fwait pop outsb jns clc out sarl (bad) jb fwait cvtdq2ps cmp lods (bad) sbb (bad) scas (bad) add (bad) shrl sti mov cwtl xchg cmp adc pop jmp rcr adc adc addr32 lods xchg leaveq mov pushq mov jns (bad) xor mov int test shrl mov jrcxz int3 or mov sbb movabs jg jge (bad) (bad) mov test rex.RX movabs test out add fildl push (bad) xchg (bad) xor xorb in fwait stos cld movabs (bad) sub leaveq out xchg fistp insb pop or js gs or push (bad) push xor pop fwait (bad) rolb callq mov repnz (bad) xorl xchg (bad) xchg mov ss in xchg xor jp (bad) (bad) add jb (bad) cmp or mov pop sbb (bad) adc rex.R sbbl sbb imul (bad) lods add sarl cmc fwait xor out rcrb rex.WRX rex.WXB in sbb out addr32 cltd sti (bad) rcrb xor (bad) lahf fwait sub cwtl sub sbb add xlat ficomp out jge lock adc iret cmp sbb pop or mov hlt out pop int3 fwait in jp sahf and adc iret nop fwait loope sar rex.XB addl jp sbb mov (bad) (bad) jg,pt jnp mov add xor (bad) jmp (bad) (bad) mov rex.WB push xchg push pop sti mov movsb stos lods or rex.WR sbb cmpsl pop test (bad) jne jbe int fadds mov cwtl movabs out jae xchg or scas mov xchg ja add rex.RX rex.B mov adc (bad) mov adc sbb jbe movl mov (bad) jge scas mov lock fwait add rex.WB mov sbb (bad) fistp and fwait mov (bad) sbb faddl in fildll fwait sahf mov mov mov and or (bad) add or add fwait mov insl xchg movabs clc in fwait outsb sub cwtl movabs lahf popq pushq adc sbb mov sbb rex.RB repz insb (bad) pavgw fimul sbb xchg std xor (bad) shrb adc pop cmp cs rex.RB rex.WX iret sbb (bad) mov fsts sbb sub (bad) cmpsb lods sahf movabs jmp sbb fdivs (bad) mov addr32 rex.WB mov rex.RX cmpsl xchg mov (bad) fwait (bad) mov (bad) test sub (bad) fistl popfq add or rex.WX mov adc mov (bad) sbb jmp movabs sbb fs fxch sbb xor mov (bad) leaveq hlt add scas stos out (bad) scas rex.WRXB and rex.XB shrl movabs iret jne mov repnz jmp cwtl sub faddl mov xchg xor rolb pushfq jle xchg mov mov jns fwait rex.RX mov gs rcr rex.WRB outsl and push mov jge sar repnz mov jg lock stc mov fwait push (bad) xlat cld adc mov fwait mov or sbb mov rex.WB fwait jno jnp adc andb rex.RXB cltd xchg outsl (bad) add sbb insb sbb adc add leaveq loop (bad) sbb (bad) push mov (bad) and add xor jns (bad) callq cmc (bad) rcl jo std (bad) pop xor stos movsl add jb rolb (bad) movabs cmp pop outsb lock adc mov int add rex.XB fsubs fwait cmp (bad) push sti jne mov (bad) fsub (bad) adc add lock xor pop mov (bad) jle add cmp pop gs mov xchg out xchg xchg stc add (bad) xchg addb sbb jb adcl add repz shrb fidiv push out shl sub iret retq jns mov mov repz (bad) jmp fwait adc rex.XB clc scas xor sbb mov lods icebp (bad) mov cmp or (bad) or rex.RB fwait rol cs rex.B loope cmc fwait lea (bad) mov out rex.WRXB rex.WXB out and push (bad) (bad) pop sbb fstl insl (bad) mov rorl cli enterq mov repz std rex.WRX rex.RXB fwait sub sub (bad) fwait and mov cltd clc nop and cmpsb sbb movslq sub fwait and add (bad) sti (bad) (bad) (bad) scas mov fwait (bad) movslq mov stos or mov and sbb xchg movabs xor movabs subl (bad) rex.B lods loopne je fisub xchg scas addr32 rex.R fwait insb icebp and or cmc (bad) pop xchg ja movabs retq rex.WB cs imul (bad) mov stos push ds push rex.RB outsl mov xor data16 mov test cmp mov retq sub (bad) iret xchg and retq movabs (bad) stc jo movslq (bad) test lods and lret and xor (bad) in pop jbe xor ficoml cld (bad) xor (bad) fiadd enterq mov mov push fwait loope rex.R outsw rex lock cmp fcoml or lods (bad) push fistpll (bad) cmpl movb mov fwait callq repz rcrb mov pop rcrb rex.WRXB insb fwait sarl lea and (bad) (bad) retq (bad) stos rex.WRB movsl nop addr32 cmpsb fwait (bad) stc ja idivb push (bad) sbb mov in xchg loopne rex.R fwait jns (bad) jb insb sbb hlt sti test sti sub mov push sbb push (bad) jp push callq fidiv cs fild cli push pop sbb out jrcxz loopne (bad) (bad) fistp mov mov sbb rex.B xchg xor fwait rcr cmpl pop mov repnz leaveq nop cmp and fcomip (bad) (bad) (bad) mov xchg (bad) stc push (bad) pop fistl lahf xchg fwait and or (bad) rex.WX out push incb cmp xor mov (bad) roll mov or (bad) (bad) xchg rex.WRXB sbb xchg sbb mov pop fwait pop xor xorl retq push lock cmpsb xor xchg test xorl mov add out fisubrl (bad) adc test out fsubl push or rex.WX movsb repnz insb push je rolb push in sub enterq (bad) pushq out add sbb xchg and fcmovnbe (bad) stos (bad) add (bad) fisttp stos cs imulb mov cmp fcmovnb (bad) (bad) (bad) sub ss add je test leaveq (bad) fwait addr32 rex.R test jae lret sbb mov out rex.WB rex.RB cmp clc (bad) (bad) mov jrcxz jb movslq sub sbb jno fwait sub (bad) or retq (bad) jo lcall (bad) jb fwait movsl clc cld (bad) (bad) adc sbb ja lret faddl adc add fistl out mov xchg jo lea out fildl gs xor (bad) mov addr32 rex.RX out jg jae xchg (bad) callq outsl cld rex.WRX loope orl fstpt rcrl insb sbb fsubs and pop xchg mov jo and (bad) gs add lea cmpsb mov sub rolb iret sbb fwait push mov pushq (bad) cwtl xor xchg ljmp rex.WRX out cmp jge jrcxz add (bad) rex fwait insl repz or adc cs cwtl rex.WXB movabs retq rcrb (bad) in mov (bad) (bad) fsub push pop repnz addr32 add rex.W fwait cmpsl sbb sub xchg loopne and mov cmp pushfq stos in push leaveq xor rcrl mov sbb cmp xchg fldl or cmc or sarb (bad) (bad) imul ds callq sub fcompl (bad) mov stos pushfq xchg movslq xlat (bad) nop sti or je mov fmull mov scas xchg iret ss fwait callq xchg lret xlat loope rex.RXB jp sub divq iret sbbl mov sbb sub fwait sub (bad) imul fwait mov je loop (bad) mov rex.XB rclb xchg add sahf out xchg fwait cltd rex.R adc je mov (bad) (bad) addr32 pop fwait rex.WX (bad) (bad) std xchg mov sbb (bad) xchg fwait xchg (bad) movslq or (bad) cmc cld mov (bad) gs and push out (bad) sbb out iret jbe in sub mov pop sub mov fwait sbb loope mov jp stc in out lcall in mov nop mov (bad) xchg jg (bad) (bad) rex.W rex.R fwait (bad) (bad) sub cs push test add mul movabs mov fwait movslq push mov and mov lods (bad) rex jo rex.W cmp (bad) popfq scas (bad) cmc lret or in js cltd repz fwait add scas rorb fstpl sbb jb and rex.WRXB sbb add ljmp adc sti mov cmpl and (bad) add xchg sub jae ss mov (bad) (bad) imul mov adc fwait xorl mov test js imul cs iret rex.X add (bad) cmp or out (bad) xlat negb cli shlb out outsl rex.WB fucomp leaveq (bad) fwait (bad) xchg iret jrcxz (bad) sbb test sahf outsb xchg (bad) (bad) fwait jmpq lret mov mov mov testb test (bad) sbb (bad) loope testl pop outsl ror sbb lea cld mov in mov add (bad) mov test (bad) jno xchg (bad) fwait stos ss jnp (bad) pop jbe (bad) jrcxz push cmp in int jb stos sbb and xchg mov mov popfq add adc push mov adc cmp sub push xor sbb adc jbe movslq (bad) mov sahf xchg jl or fwait (bad) sub rcrb (bad) or popfq adc lahf iret mov sbb xor out stos jo fwait mov (bad) rex.WR ss pushq popfq or adc repnz movabs fwait mov xchg sti (bad) and rex.WX rex.RXB roll xor stos scas pop (bad) adc lea addr32 xor ds fwait imull mov repnz orb or jbe xor (bad) fwait rcrl pop add mov fmul adc xchg rex.WRXB stos jb cmpsb ss stos (bad) and stos js add fwait lret lret mov mov jbe push jae push (bad) or in rorb (bad) rex.W fwait and fucom icebp adc loope cwtl (bad) fistpll fwait jle mov retq and mov icebp rorl sbb fdivrl jmp movabs xchg (bad) (bad) in (bad) fwait stos je push rex.RXB jnp or lods jl mov (bad) loopne mov insl fwait mov rex.XB fwait movabs mov sti and stos or in in (bad) fwait cmp repnz rclb rex.WXB cs (bad) rex.WRXB xchg (bad) out mov jo jl jmp or (bad) cmpsb fwait repz (bad) (bad) andl jno pushq jo lock fwait xlat rex.WRX insb pop rex.WRB mov cmpsl jmp push fcompl imul (bad) mov test fwait ljmp sub mov imul leaveq lahf rex.WRX repz imul (bad) int fwait (bad) lock and fwait (bad) mov imul xchg sbb mov sbb lret pop rex.WRX sub rex.WR fwait (bad) adc (bad) jno lea jmpq mov sub xor or flds hlt xor imul jrcxz jb rol fstps (bad) fcomps (bad) add in sbb jo fwait in pop xlat outsl rex.WRX pop rcrl fisttpll cmp add ss (bad) push fwait retq rex.W rex.WRB stos cmp xlat fwait scas (bad) or pop fldenv fwait movsl jno pop mov adc (bad) jl jo movsb (bad) (bad) mov insb sbb out add (bad) xchg mov mov leaveq sub fsubrl mov mov mov cmp mov stc (bad) sbb movabs fwait jns shll js adc (bad) in rex.WX adc sub fs cli es int pop loope js in jns (bad) imul out fwait test pushfq stos stos fwait xchg (bad) xor add and jl retq enterq sti (bad) in jle test sub push fwait sbb imul sbb (bad) callq mov and and fwait insb adc xorl idiv mov fwait out and rex pop cmpsb (bad) fsubs (bad) leaveq loope xchg (bad) xchg pop rex.RXB and jmpq mov rex.RX pop ss mov sbb fwait iret mov jae cmp adc fwait rex.WRX cmp add shrl xchg (bad) push mov (bad) jp fwait retq (bad) (bad) jno es jb fimull data16 fwait pop pop outsb ja imul sbb xchg xchg add sub xlat xor jnp fist fwait jle lods int rex.RB js test rex.WR retq cltd fwait pop movabs rex.WB jns xor add insl xlat pushq stos imul mov test mov and jo in loope jno pop sub fwait sbb add rex.WX sahf fnop in rex.WRX fwait jbe mov add xor (bad) jmp fcmovnbe loop cmc sbb (bad) rex.WRX fwait mov xchg rex.WB jle rcrl sub rex cmp add rex.X fwait mov pop movabs (bad) in fwait movsb hlt (bad) cmpsl rex.RB callq sbb mov out rex.WX fwait sub mov and add mov jmpq rcpps sub (bad) fwait in adc sbb lock outsl add xchg and mov fcomi fidivl (bad) (bad) (bad) jno xlat retq and imull sbb xor jbe jge and mov sbb (bad) push stos jns mov sbb movslq and mov jnp adc (bad) (bad) fwait outsl and or xchg imul pop pushfq xor rex.RB jno (bad) mov sub mov adc rex gs xchg xorl test mov addl rex.WXB lret xor (bad) (bad) sti fwait lock lret lods add sbb insb (bad) (bad) xor std in sbb adc fwait mov mov (bad) cmp add jne ja push jg stos (bad) cmc rex.WRX sbb xchg vmread pop outsl cmc mov jrcxz adc out andl jno rex.R xor fwait push cli push rex.WR adc (bad) movsb jle (bad) mov pop fwait cmc (bad) cltd pushfq (bad) mov pop (bad) mov adc push fldt (bad) rex.W mov adc addl jg movabs rex.WXB fwait xor adc sti lcall pushq mov fildll (bad) std movabs fwait or fisubl outsl cmp jle fwait rex.WX callq pop xor push add jo (bad) jb fwait movsl es mov fwait mov jnp imul xlat (bad) (bad) or push xor lretw stos mov sbb jmp (bad) ds mov sbb mov (bad) mov sub mov pop jo subl push mov cmpsb lods pushfq test retq mov pop (bad) gs retq movabs out xchg add fdivl pop push jno (bad) jmpq adc rcrl (bad) add add fistpl mov (bad) and movabs popq rex lods movabs cmp repnz add mov popfq movslq (bad) sti add cmp (bad) xorb scas shll callq cld movabs pop ror pop (bad) mov rex.WB outsl push and cmpsb in movsl sub test xchg adc fldt (bad) adc pop cmp mov loop add ds or xor xchg (bad) jg rolb sub (bad) xlat mov popfq (bad) nop sbb mov xchg out push adc sbb mov fwait mov sub rcr lret (bad) xchg cmpsb nop repz callq lock pushfq mov fwait mov jo mov (bad) rex.R cli neg xlat cmovno sbb fnstcw insb (bad) int std cmp pop out (bad) xchg (bad) pop sarl jo insb mov (bad) pop rex.WRB ss cwtl and pushfq jmp or xchg insl add hlt fwait cmpsb fcom retq sti jno xor test push (bad) rex.R rex.W cmpsb or adc fwait xor rex.XB and jno jb (bad) mov cltd sub outsb sub rex (bad) imul (bad) sbb xor adc loop and pushq jmp loop (bad) rex.X fwait enterq rex.RX sbb push (bad) push or cmp clc mov adc (bad) fwait (bad) cld mov retq movabs callq jae fldt out sbb or add sbb (bad) xor movabs rex.B (bad) fwait sub adc jnp mov jmpq mov cwtl nop (bad) sbb sub jnp movslq cs fwait jg js rex.WXB cmpsl sti cmp rex.WX fwait int cmpsb stc xor xchg cld stos add jmpq pushq jne rex.X adc sub scas in fdivrl (bad) jl in (bad) (bad) jrcxz adc fneni(8087 mov movabs or fwait lret cli xchg retq lret rex fimull jl rcll mov fsubrl cld rex.WRB rex.WX rex.W fwait and fs adc mov mov lods cmp jp callq (bad) fwait (bad) lods fsin mov repnz popq jns out (bad) mov sarl rex.RB gs jle ss fwait sbb clc scas jno or test fstpt fistpl mov adc stos mov roll (bad) adc add (bad) add add fwait mov (bad) sbb xchg scas out sbb fildl (bad) xlat add xor roll loopne movabs and lahf and leaveq xchg mov addr32 iret pop icebp (bad) cmpsb rex.R or xor lock out nop fucomi jrcxz in rcrl (bad) or repz (bad) jne repnz rcll sub sbb mov mov fwait adc cld push add rex.WRXB xor mov out mov sarl cmp (bad) adc rcrl insb out mov sub xchg (bad) sub fwait add loopne sti cmp rex.WXB cmp scas fwait movsb mov jp stc xchg (bad) orl fnstsw repnz (bad) push in (bad) cmp rex.WRXB mov jg sti rex.WX out leaveq fistl movsl jnp fcmovnbe rcrl sbb fwait fs jle fwait movslq insb or cmp push fwait popfq jo out decl mov test rex.RXB outsl fwait mov jns sarl rex.WXB fwait lods rex.WRXB sti or (bad) fwait (bad) sub sbb push (bad) mov mov (bad) (bad) negb cmp mov (bad) insb mov (bad) ds xor adc lods (bad) insb fwait push adc fs (bad) callq fistpl js fwait and stos cli cmp fcoml in xchg sbb hlt popfq sub rex.WR sti rex.WB (bad) movabs xchg (bad) (bad) push (bad) sbb xor fldcw repz imul sbbl (bad) sahf adc movsb or or fstps (bad) rex.WX fwait pop movabs jmpq loopne sbb rclb movabs pop jle jnp and mull cltd sub fwait cmp mov fwait or (bad) (bad) (bad) mov pushfq stos lock push sbb jbe rex.WRB nop (bad) xor adc pushq mov or xchg and ds or xchg movslq fwait sbb (bad) js lods fwait jg pushfq lret mov scas fwait callq sar fwait mov sub sbb imul mov mov add fwait callq rex.XB sbb xchg (bad) (bad) callq gs cltd in lods fwait repnz sbb lret movabs stos cmp push add (bad) leaveq movabs xor lret clc adc add jnp push fwait (bad) or lock xchg lea jne (bad) or add (bad) adc cmp xchg or pushfq mov data16 rex.WB mov adc sub hlt fistl fwait (bad) mov rex.WR fwait xlat mov (bad) cld (bad) (bad) (bad) negl (bad) (bad) (bad) lods movabs sbb and loope xor icebp add jb loop push ds (bad) xor (bad) cmp jge xor or mov rex.B sti add sti callq rcr xchg pop out pop fwait or (bad) add fdivs sub lods push mov sbb mov stos mov push retq xchg fwait lock pop pop fwait movsl sub callq scas (bad) adc adc cmp (bad) or rex.WRX cld enterq outsl add push decl xchg test mov pop rex.WR fwait imul test cmp fmul xor (bad) (bad) sbb rclb jmp rcrl xor cmc test (bad) test jbe (bad) (bad) push fwait pop mov adc movabs (bad) sub loop fistl sbb jne xchg jnp (bad) sbb cld (bad) fwait (bad) je (bad) rex.WR fwait jrcxz (bad) out and repnz rex.R (bad) xchg mov push sbb fwait addr32 jp add cltd (bad) (bad) sti cmp fwait adc icebp cmc int movabs push rex.R (bad) decl in js fwait adc movabs mov mov jle fwait rex.RXB sbb adc (bad) (bad) (bad) fwait repnz movsb lods add std sahf and sbb push mov (bad) jg in stos in sbb or popfq repnz or (bad) lret mov rex.RX mov (bad) cwtl (bad) (bad) movabs xchg retq ss loope (bad) je std movabs mov xor fwait insl and std sbb rex.WR roll and outsb jae add imul cmpsb movsb sbb and mov (bad) and repnz (bad) mov push (bad) (bad) (bad) enterq outsl movsl in jo and fwait sbb lahf xchg (bad) in sti cmp (bad) fwait enterq sub es sub fcmove xchg (bad) (bad) mov in lea std mov sub sahf (bad) fcmovnb add pop xchg or push adc rex.RB insb (bad) fisttpl es sti rcrl mov sbb fwait movslq sub loop lret cs pop sbb pop or fstps adc or mov pushfq lahf mov out addl ror mov sub scas in sub out or and xchg movsl mov scas (bad) fwait cmp movabs adc jo jrcxz fwait and adc (bad) sub data16 mov jnp iret pushq and in rex.WRB (bad) or out rcrb cs out movabs xor stos push (bad) jmpq insl (bad) movb loopne fs sti sbb xor loop lods (bad) (bad) pand (bad) jge mull movabs pop in fwait test (bad) sbb push mov adc cmp jne rex.B in cwtl push out jge add jmpq fwait (bad) pop pushfq pop adc movabs sub push xchg and movabs outsl std sarb in sbb (bad) sub xchg (bad) adc xor push fwait or cmpl andl jrcxz add mov je sub fcomp (bad) cltd fcomi in sub loopne jae add fstpl pop xchg or and or cmovno lahf fstsw xchg sbb cmp sbb pop (bad) fstps js push int3 fwait or mov (bad) pop hlt cmpl add fsubrl add cltd adc cmp (bad) std fwait in add rex.RXB mov callq push fwait imul push mov add in mov sub sub (bad) imul (bad) pop pcmpgtw sti jrcxz push (bad) (bad) adc lods (bad) add lcall jge fucomi cwtl cmp xchg cld movabs cmc shll adc fwait hlt outsb pop jb repz rex.RXB mov stos sbb je and fwait movabs sahf callq pushq xchg (bad) mov int add (bad) rex.X add in nop jge add (bad) repnz mov mov movabs movsl rol icebp fucom fucomip (bad) and (bad) sbb fidiv lea test sarl loopne fwait rex.X (bad) xlat mov (bad) fwait loope out or mov jge fnstenv test xor cli fwait (bad) mov jae fisttpl mov xchg xchg and int (bad) outsl rex.B ss popfq movabs cmp add ja (bad) pushfq mov sbb xchg add and (bad) pop pushq xorl xchg movabs sbb negb and movsb lcall pop mov ss popfq (bad) and lret test test rcrl add jb (bad) (bad) jno loope enterq (bad) cltd xchg movslq cmpsb mov (bad) (bad) pop mov (bad) addl adc sarb push fwait sbb fldcw rex.WRXB xor push mov mov jge cmp iret jl fistpl sub cmp rolb mov out (bad) insl and sbb mov (bad) lret (bad) cmp (bad) add rex.RB fwait subl (bad) movsl callq and fwait sub xor fwait xor cmp sbb test jg adc mov repz mov loope mov rex.WB stos mov (bad) je sbb adc cli loop fnstsw mov fwait xchg mov outsb gs xchg scas (bad) mov mov stos lea fwait enterq jge lock sbb cmc fadd adc sbb jnp stos jmp add mov xor outsl cs xchg jrcxz rex.WRXB push and pop cmp push (bad) repz add cmp rex.WRXB scas in ds lock add (bad) (bad) mov (bad) and add cmp xor jo,pn cmc rcrl rex mov or lods lret cltd insb pushq fwait (bad) or jnp (bad) jo repnz es (bad) cld (bad) (bad) (bad) fwait clc pushq and or jne (bad) fwait rcll (bad) gs sbb push retq je cwtl mov xchg sub pop mov int3 mov (bad) scas adc (bad) jae fwait retq (bad) rex (bad) mov cmp push fwait (bad) jge lret imull fs sbb (bad) (bad) fwait xchg jnp (bad) xchg jno and and fsubs mov rex.X (bad) sbb (bad) je int3 (bad) (bad) es fwait add imul add jrcxz mov xchg fwait cmp sub or (bad) fwait rex.R xor add pushfq adc movsl mov pushfq ss fdivs fwait addr32 push pop and movslq insl sbb rex.RXB iret jge rex.RB fsubrs fwait js je add ds fsubrl push pushq imul mov enterq sbb mov test and or cmp cmp gs add sarb add in mov fwait rex.WXB cld lret rex.RB fwait jno in fidivr (bad) in retq sti nop and stos cmc enterq fwait mov rex.R movabs xor (bad) es insb cmpsl fisttpl xchg mov cs (bad) mov jne sbb es shll insl rex.B jo adc sbb jmp scas repz adc stc sbb in (bad) add repnz cmp in out imul add (bad) negl or rex.WRB (bad) (bad) sbb adcl xlat lahf xchg lock fisttpl jo or lea fiadd rex.RX rex.WX sbb sbb (bad) lock mov addr32 xchg xchg repz (bad) xlat int fwait stos jl and lahf mov fwait (bad) sti lret fidivr js cmpsb and rcll notl fwait xor (bad) cmpsb add (bad) popfq fwait lret (bad) jrcxz push cs fwait callq jne lcall sub movabs es rex.WRX fwait xor xor in (bad) rex.B add je xor mov mov mov movabs shlb xchg (bad) retq mov rex.WRX stc enterq mov and loop xchg jns xchg or fwait pushq popfq adc rex.RX mov fwait or pop adc (bad) mov paddd lock rex.R sub sbb (bad) sarb fcomps adc and jns (bad) mov (bad) sar pop insb lea fwait loope fcomps (bad) psubsw negb pop add lret fnstsw rorb cmp es movsl fwait mov (bad) mov (bad) fadds pushq jo insb hlt sarb stc movabs shll mov (bad) sti rorb (bad) in jae pop sbb jrcxz (bad) icebp (bad) rex.XB fildl retq movabs (bad) jae loopne leaveq (bad) (bad) mov xor pop (bad) cs je rex.WB lods stc cmpb (bad) hlt xlat (bad) fistp (bad) cld jmpq rex.WB mov adc mov fwait mov sub sbb (bad) rex.XB outsl fwait xchg (bad) outsb xchg mov rex.WR cwtl mov and mov mov gs fwait pop xor cmp stc rcl adc leaveq pop test stos mov (bad) pushfq jle enterq mov rex.RXB wrmsr lock movsl fwait mov in (bad) or mov cwtl pop mov fwait retq rex.WRX rcrb loope mov mov adc rex.WX rex.R es jl icebp sbb outsl lret and and stos cmovnp or pop popfq (bad) xchg xor jmpq pushq out sbb ja in idiv jmp sbb xor popfq and stos adc (bad) xor jbe fwait loop mov xchg and (bad) fistpl out sub icebp or rclb pushfq hlt jo and fwait lret negb (bad) es adc pushfq pop sub rex.B fwait scas mov test movsb jno fwait jge add (bad) (bad) (bad) jae stos push sub push jmp scas in sub ss movabs adcl push scas or mov fwait rex int3 (bad) rex.RB mov (bad) rex.RX sbb and jb adc stc out in jbe xor (bad) push and hlt lods fwait retq callq fstps lret jno mov pushq ja xchg (bad) rex.WR fwait jle rex popfq push (bad) sti insl jp and pushfq test test rex.WRX jno mov fsubrs sub jle cmp pushfq xchg sti (bad) (bad) jns adc sbb es shll rex.WR xor xchg mov sti push callq sbb in rcll (bad) lretq (bad) mov decl ja mov xchg stos sbb jns fild sub mov movabs xor (bad) rex.WRXB xchg out enterq imul fwait lock rex.B rex.WRX fwait pop lods mov cmp add scas scas cmp sbb rex.WRXB repz sbb sub cmp cmp sbb fisttpl subl cwtl or xor jns fwait mov fdivs in and callq rex.RX mov rex fwait xlat (bad) in mov xchg adc cmp jo fwait or jp mov pushq es je adc (bad) outsb iret lods insb fwait push movsl jge sbb fwait pushfq jle and fwait cwtl loopne (bad) and and callq sub push (bad) out rcrb rex cltd rdtsc sbb rex.WXB pop (bad) hlt and fcoms (bad) rex.WB sub xchg fimull lods sti std addr32 orb (bad) mov and xchg jbe sbb (bad) test fwait add jrcxz push (bad) pushq (bad) (bad) (bad) adc rex.RX in sbb rclb negb insl loope xor (bad) fwait in cmp (bad) sub enterq and (bad) (bad) pop add (bad) stos (bad) mov pushfq or rex.X lods fwait (bad) jae outsl nop retq jle sti add rex.B mov sahf mov ror (bad) xchg (bad) movabs imull mov rex.WRX push notl xorl sub sarb or repnz (bad) gs sti push or jb adc pushq movabs pushq fwait cmc cli ficompl jno loopne rex.B rep movabs (bad) test enterq fisttpl cwtl adc movabs cmp mov imul jmp fwait roll iret je loop fwait pushq add sub out mov sbb insl cli cwtl fldt fwait sbb std int jmpq fwait xor push fcomp in adc pop callq (bad) and es lret (bad) jnp mov lahf cmp push cld and fwait (bad) in retq adc fwait sbb pushq mov xchg out fwait sbb fistpll sbb cwtl add jge repz mov fnsave rex.RB (bad) jge sbb cltd add add sbb pop sbb jno movabs subb (bad) cmp fwait mov out loope lret test adcl sahf jb nop add fwait sbb sbb clc lods out cld int (bad) sahf pushq add adc rex.WRXB rex.RXB rex.WXB (bad) fild (bad) in stos push or fwait add xor repnz fimull lea jns (bad) negl add sbb jmp mov fwait icebp jmpq nop (bad) add iret js add cmp sub fwait ror mov popfq rex.WX mov mov push callq sarl xchg fstpt jnp movabs rex.X cmpsl stos pop mov in or adc (bad) cmp add push or std mov sub fs or addl mov fwait in (bad) pop pop rex.WXB jrcxz mov nop fadd (bad) or (bad) xor movabs (bad) fwait in pop mov mov fs icebp cmp fwait imul out fwait jmpq popfq pop add movabs sti or or xchg nop fildll lods loopne fwait subb movabs xchg leaveq xchg adc and (bad) mov nop add addb fmull xchg repz add lret js dec mov rex.RX rex.WRB int fwait adc pop and stos jg push retq sbb test cmp add sar adc mov clc imul es movsl int rex.WRXB cmc (bad) out outsl mov (bad) adc add lea push pop movabs andl movl je sub (bad) push fwait rex.WX (bad) retq sbb (bad) mov push stos or sbb in (bad) (bad) cmp sub and test mov pushq test scas cmp jnp loop js lods rex shrb xchg fwait sub sub cld repz and cmp cmp cmc sbb int xchg xchg (bad) js lahf or retq xchg retq callq adc (bad) sub mov mov sbb jge ja fwait jb,pt out addr32 (bad) sbb lods push fcmove (bad) xor pop add js fiadd jrcxz out int3 imul and rex.X andq xchg mov decb sub std xor jle (bad) and sub add sbb (bad) jmpq rex.WX push pop fwait popq mov add movsl outsb mov pop rex.WR (bad) popfq sbb psubq cltd and jne rex.WRB jl popfq outsb sbb cld imul fwait (bad) mov hlt movslq and sbb (bad) stos mov add fwait mov in test mov mov (bad) out movabs (bad) mov imul xor enterq test cmp (bad) lock fwait adc scas add (bad) fwait sbb (bad) pushfq shll ja xchg retq (bad) sti movabs int3 mov pushq jno lret lret neg imul scas rex.RX insl fwait xchg rcrb adc and cli xor mov adc jmpq imul nop sbb ds gs mov jbe fwait out movsl callq sti add int xchg sar scas jmp fwait scas in cmc movsb or sbb sbb in mov and mov and add (bad) mov cwtl fdiv (bad) lret pop mov jns jb sbb (bad) clc cmpl jle push push (bad) fwait adc adc mov fwait (bad) or add pushfq loopne adc vhaddpd rex.WX xchg out sub (bad) (bad) fdivl (bad) enterq push mov sti (bad) cwtl fnstenv (bad) and adc xor mull rex.WRXB xchg sbbl lods imulb rex.XB adc and data16 xchg or sub in adc movslq (bad) (bad) cmp in fwait loopne push (bad) rex.B jrcxz in movzbl jo nop xorl jbe fmul sbb adc loop xor popfq mov out or mov fwait mov sub fstpl cmc scas test fwait (bad) test and loopne addr32 pop adc (bad) mov cmp (bad) or mov (bad) mov insb (bad) or add adc pxor std cwtl imul cmp enterq rex.WRX sbbb (bad) fwait (bad) mov data16 (bad) shrb in scas add and sub add (bad) rex.WRXB movabs movabs rex.WRXB repnz (bad) add cmp roll test add jns sti (bad) pop adc (bad) nop fwait xchg or rcrl out fwait sti fidivl mov cwtl (bad) int cmp add fs jns xor sbb mov jp int fwait jge andb push rex.B adc rcrb subb cmp xor (bad) sbb jle and (bad) popfq (bad) ljmp or jne mov out lret add push fwait gs and xchg es fwait sbb icebp je mul scas (bad) (bad) sbb rex.WX sbb data16 sub pop mov in mov insb sbb rex.W or adc (bad) repz or imul leaveq or stc fwait mov jrcxz stos and cs adcl pop (bad) push cmp fwait out or (bad) xchg fwait cli mov andb rex.WRX leaveq jp movabs push (bad) rex.WRX repz loopne vmovdqa cmp sub pushfq not xchg in (bad) push clc sahf loopne adc enterq cmovne sti jge adc scas sti cmpsb adc cmpl jno loope orl test (bad) jmpq rex.X cmpsb jmp pushfq add or lret (bad) jmp fwait jge sarb jle cmpsb sahf sbb sub repz jrcxz cltd add outsl rex.WB sbb movslq std rex.RB mov (bad) mov mov (bad) ja mov mov xor (bad) pop fwait push xor cmp fwait xlat imul pop sbb out rex and cmp sub (bad) (bad) je (bad) add sbb rcr lods stc rex.WX idivl jg rex.WRB and icebp (bad) xchg pushq and sbb push jrcxz rcr xor sbb jp lock movabs pop (bad) xchg adc (bad) xchg addr32 mov lret mov sbb repnz popfq stos or loopne test xchg rex.WXB or fninit (bad) out cld fwait (bad) xchg sarl fwait (bad) and xor cmp mov cmpsl cmp ficompl jae sbb (bad) xchg fcompl rex.WRXB sbb int3 cwtl orl sub addr32 test rex.WR mov jg xchg rex rex.WRX xchg sub adc pop out (bad) (bad) and sahf outsb cmp mov pushfq cs sahf xchg fwait icebp sbb out cmp add jnp fwait ds stos jno (bad) push mov int add sub (bad) mov in jl add idivb rex.XB and mov xor add sub lahf sbb (bad) adc mov and fwait rex std add rex.WXB add rcrb cli imul subb add xchg addl rolb fwait incb sub ja sbb xchg (bad) (bad) pushfq rorl lret xchg fwait xor test and iret or xor add stos stos sub xchg adc cmp mov adc mov push add rex.RXB (bad) (bad) rex xchg scas stos mov int push (bad) (bad) int3 pop mov ja rex.WR popfq fiaddl (bad) sub (bad) (bad) (bad) mov int3 lret cmp (bad) mov sbb adc cmpsl rex.RB (bad) xor (bad) in xchg adc cmp fwait int3 fnstcw (bad) (bad) sbb add or addr32 or lcall jbe out test lea adc rex.RXB test sbb (bad) scas in sarb loope (bad) repnz in rex.RXB xchg adc add (bad) (bad) sub (bad) cmp fistp pushq xchg cmp (bad) xchg fwait or cmp (bad) fwait fs jb (bad) (bad) adc jns popfq sub xorl (bad) (bad) (bad) fwait in rex.W movabs jns cwtl imul (bad) jmp mov rex.XB jne fwait stos adc jnp jl out mov cmp xor adc adc iret (bad) hlt (bad) fmul addr32 xchg (bad) pop or in rex.R (bad) int3 mov (bad) in fwait pop jbe sahf (bad) stos and adcl cmp std xchg rex.WRX mov mov or xor or sub mull jrcxz (bad) out adc pop mov mov mov fwait pop fs mov movsb (bad) add stc rorl mov xor (bad) (bad) xchg fwait sub movabs retq cmpsb scas adc fwait enterq pop lods clc (bad) cltd lret (bad) add fwait (bad) movabs callq adc lret cmp leaveq rex.X fwait (bad) iret loopne mov scas callq (bad) (bad) (bad) fnstenv sbb and (bad) fistl sbb (bad) cli callq jg (bad) movabs fwait jne retq stos rorl (bad) rex.X repnz hlt or fwait insb mov xchg mov test (bad) (bad) pushfq movabs sbb fmulp pop int jp fistl cmp xlat fwait add xchg xchg xchg adc push cmp es fwait rex.WR mov ficom sti (bad) sarl jmpq imul fwait sarb leaveq sbb add mov (bad) xchg insl loopne (bad) mov es (bad) adc mov (bad) sbb movabs rcrl jmpq hlt loopne xchg jmp jp xor (bad) add and jle rex.RB push pop movabs ds adc stc in rex.WRB add (bad) sbb jle and mov repz xor (bad) gs sahf in imul (bad) iret movabs cmpl callq adc (bad) insl (bad) fiaddl rex.W jl (bad) sub or sub xor push mov rex.X rcrb xchg mov lea popfq push mov leaveq (bad) addr32 adc imul fucom fidivrl fwait (bad) (bad) pop push xchg jne add addb add fwait rex.RB fidivl loop subl fwait je push pop jmpq push or mov mov lret xchg pushfq jbe rex.R fwait addl in fwait cmp gs repz mov imul jmp loope fstps rex.RXB jno sbb addr32 jl cmc loop fwait mov and adc jae ja mov jmp xchg loopne js js pop sub jl lods cmp xchg rcrb sbb push js rex.WRXB cmp xchg leaveq adcl fwait rex.RXB out push adc stos fistpl jnp (bad) lret pop test cmp retq (bad) rcrl mov movl out std fwait pop movabs and stc retq pushfq movb test rex.WR rex.B and fstpt mov ja in sbb (bad) lret jmp popfq or test (bad) or sahf (bad) cli cmp mov fcompl scas gs sbb cmp lret test push cmp outsl pushq (bad) jno movabs test rex sbb add cmp fwait add stos jns rex.WRB (bad) (bad) sbb adc (bad) cmp add jle insb loopne (bad) rcrb sbb out and sbb movabs fwait cmp mov pop or (bad) add and or clc push (bad) imul sti cmp repnz fwait mov gs cld mov or or xorl sbb jne movslq outsl (bad) adc movabs xchg loope fwait cmpsl xchg pushfq push xor (bad) (bad) idivl pop stos rex.X lock mov pop sbb rex.RX push mov js sbbl and or movsb sub (bad) sti (bad) test adc and sbb mov loopne es fwait lods add insb fwait sbb mov mov or sub jmpq nop xor rex.XB out or out xchg icebp rex.WXB mov jo out pop cmpl popfq adc mov push fmul in jmp fwait in (bad) jbe jb (bad) js adc rex.WX repz loop lahf rex.XB cmp mov mov mov lods mov fwait xor xchg mov mov ficomp jb sub retq lea lods cld (bad) (bad) sarb xlat cmp (bad) rex.RXB out fwait mov adc (bad) or jae push je stc fwait or jbe fldcw and movabs roll js add (bad) push fcmovnu (bad) xor sti fwait xchg (bad) sarb lods (bad) push lret or fcmovne sahf sub scas sbb retq insb jmpq push stos shlb sub (bad) ja (bad) (bad) xor mov pop and (bad) jns xchg loope in (bad) mov fsts stc adc mov sub xchg mov subb mov imul add adc adc pop btr (bad) (bad) push mov pop and (bad) sbb movabs xchg xchg sub (bad) (bad) fwait rex mov sbb negl mov mov (bad) xor adc (bad) mov or fwait imul cmc cmp js jle scas fwait cmpsb jb mov mov xchg cmp in jbe retq fsub (bad) jmpq rex.WRB fwait es xor cwtl xchg (bad) xchg sti jl roll popfq (bad) rex.WXB (bad) movsb cld cmp jmp jrcxz fwait insl (bad) jl mov cwtl (bad) fwait clc and sti (bad) rex fwait (bad) (bad) rex.W mov negb movabs cmp lea (bad) xchg xchg fwait lods jge xor and sub lea scas negb adc xchg sbb push or mov (bad) rorb (bad) pop enterq adc rex.RX (bad) js pop add sbb cmp test shl (bad) clc mov out adc shr fwait sub subl int3 and sti cmp cs mov mov iret xchg rex.X fwait stos jg lods (bad) or sbb (bad) rex.WX add (bad) scas ss sbb xchg jle fnstcw xor sahf rex.WXB rex.RXB outsl js jl mov repz clc out lret or jrcxz fwait pushq (bad) fs fwait out in mov mov jne cli (bad) push repnz sbb mov jbe fstps rex.WR or cwtl mov fdivs xchg sbbb insl lods sbbl pop fistl (bad) sub in negb jno outsl gs rex.RB rex.WXB fwait shrb cmp js (bad) leaveq sarl cmc ja pushq rcr clc mov leaveq cmp (bad) ja in in fwait pop (bad) (bad) pop in pop (bad) fwait ljmp rex.WXB sub xchg pop push xchg push movabs and movsl (bad) lret adc cld movl lods cmpb fsubr cmp (bad) divb cltd rex.WR adc cltd mov clc out callq or add cli mov or (bad) (bad) mov pushq callq cltd mov repz scas pop loop mov out xchg mov rex.WB sbb pop shll out xchg rex.WX jne add xchg mov lahf mov test ljmp scas cmp sub (bad) movsl lea rex.WRXB test out es gs pop orl xchg adcl xchg cwtl (bad) pushq movslq push sub rcrl xor lock mov sbb fwait (bad) (bad) scas lock scas mov cmpsl movabs cmp popfq sub sbb fstpl or (bad) cld xchg cmp rex.B (bad) je and pop rex.XB pop retq stos adc rorl movsb xchg xor fwait adc fbld pop mov jbe pop out stc rex.XB lea rex.RX pop push (bad) adc sbb leaveq rcrb pushq loop popq sahf mov jrcxz jo mov mov std ficom xorl push lock mov (bad) lret fcompl mov (bad) cmc xchg mov xchg lods out (bad) rex.WR rex.WB jl add xchg sub movslq pop or xor retq test andnps in fwait jbe (bad) hlt (bad) jg orb rex.WRXB lahf (bad) sub sbb neg jae jmp rex.WX adc add cmp adc clc (bad) cmpsl out stos (bad) jmp xchg (bad) int3 retq lahf jge sub in clc (bad) fwait loopne add cmp out mov negb loopne rex.WR fwait (bad) sub add adc fs sti sbb pop xor stos out or push push jbe xchg fimul cmp fsubrl and fwait loopne add sub pop fwait cs mov mov mov sbb jae test cld mov cltd (bad) pop rcr xchg retq pop adc in in mov (bad) lret pop (bad) cltd xor xchg push sbb add test pop jb sub xor fs int3 int push pop xchg (bad) in and in rex.WXB rex.WXB repnz movslq mov fwait insl loop add mov (bad) jne rex.X fdivr (bad) sbb adc and fwait jg lock (bad) (bad) cs (bad) (bad) sbbb and lret rex.RX or xchg sbb jmp in hlt fwait movabs cmp lret xchg add jae rex.RX fucom mov mov add fwait data16 rex.RXB rex.WR (bad) cmc out scas or jrcxz push fwait sar cmpsl repz jns (bad) retq mov mov (bad) jg cmp retq xchg push rex.R fwait jrcxz pushq sub stos cwtl sahf int movslq (bad) lock jmp pop mov lret loopne (bad) stc cmpsl es sti sbb (bad) rex.WR rex.R pop cmp fidiv (bad) or jrcxz rcrb cmpsl add fwait popfq sahf insb sbb ror (bad) nop (bad) test stc (bad) sti scas stos cmp (bad) fwait (bad) cmp (bad) out sbb mov fwait cmp mov out loopne fwait rex.WRXB (bad) jmpq pushfq hlt (bad) jp in movabs jmp fwait out (bad) pop mov rcll pop sahf rex.RXB (bad) mov (bad) jge rex.WB sbb sbb mov sub repz fiaddl sarb fwait test cltd (bad) in cmc ja ds stos ja fcmovne (bad) push out lods push (bad) movabs (bad) cmp push xchg hlt fisubr (bad) sbb add jno (bad) cs rex.WXB xchg sti or xor pop pushq (bad) retq jns movabs fwait mov mov xchg mov (bad) (bad) in movzwl (bad) cltd jg sbb jae jno repnz (bad) mov fiaddl movsb (bad) or loop popfq mov jl sbb fstpt insb cmp popq clc jrcxz (bad) push adc add movslq cli pop outsl xor add jg push sbb incb sbb sub sarl out and addl push pop rclb rol and (bad) push out pop fwait mov adc iret push (bad) or rex.RX ds lods (bad) mov shrl nop mov leaveq sub rex.R push adc push and (bad) pushfq stos sub lret fwait in jno out mov mov jge xor out mov and mov fildl (bad) jo pushq (bad) movabs pushfq and xchg js (bad) mov (bad) pop out std xor jrcxz (bad) stos adc xchg test iret loope movabs cs jg and es fwait add sub adc pop and xorb (bad) pushq (bad) push fwait int3 es (bad) test rex.WRB fwait repz mov xchg fwait jno mov or pushfq cmpb fcoms js fwait jno pop cmpsl cmp test (bad) rex.B adc ficompl outsl orl jmp sbb rcrl shll pop (bad) int3 je (bad) fstps (bad) std fwait cwtl pushq movabs sbb adc fidivrl and lret mov loop fwait cmp movsl sbb (bad) xchg mov or cmp (bad) (bad) pop shrl rex.WX lahf cli add sub leaveq fwait cltd add jrcxz or or lea rex.XB shrb sbb xor rex.WRX fidiv push fldenv (bad) scas (bad) or rex.RB in adc fwait (bad) mov out cld and (bad) retq mov jb rex.XB jnp and stc imul jrcxz out sub and rex.WRX imul push out pop cmp adc mov pushq add test xchg mov mov sbb fwait (bad) outsb sbb (bad) mov movabs add loop lahf mov add mov jb adc (bad) out and pop pop (bad) push push lock add negl shll pop adc mov std lahf (bad) sti cmp mov sar cmp scas xchg sbb lods sbb (bad) retq and pop loope pop xchg adc enterq clc fwait mov jl or rex.X (bad) rex.WX cmpsl mov pushq fstps shlb lret jmpq rex.W ja movabs mov mov mov (bad) movsb mov ficomp or sub in sar lods repnz jl out or in xor in (bad) fmuls (bad) rex movabs adc sbb ds xor ficompl loop lea sbb mov in loopne out cmp or cld sub enterq jle retq sbb addr32 add mov scas adc pushq loop xchg lea mov sar mov ss adc pushq pushfq sbb mov mov xor mov xchg mov jrcxz movabs test (bad) jrcxz movb (bad) outsb add fwait cmpsl movsb (bad) pop movabs (bad) mov mov mov fs mov fwait lret pushq nop jle jnp icebp sbb pop (bad) repz fwait in pop jb mov rex.WRX jae (bad) fcmovnbe mov cld fadds int3 hlt test cmp mov pop cwtl fwait push add movabs jmp enterq in rex cmp sub std jnp movslq jl rcrl cltd fwait adc out xchg test rex fwait xor nop rex.WRXB ss jno xor (bad) int3 add xchg in (bad) sti rolb sbb cmp incl icebp fwait movsl jno rex.WX retq out (bad) xchg jmp xchg pop jrcxz enterq xor add fwait es fcomp fcoml cltd ja repz pop jmpq in flds adc fcom add jmp orl sub xor add add (bad) stos xchg add jp (bad) (bad) or pop jmp rcrb lahf rex.RX ds jg fs (bad) in adc jb xor je sub addr32 pushfq sub sub jmpq mov add loop push rex.WR hlt xchg rclb pop movsb rex std (bad) faddp mov cmp (bad) fwait lahf (bad) sub mov ja sub imul add mull jmpq cmp add fwait adc mov pushfq push sti add iret movsb cmpsl and fwait rex.RX mov shrl sbb adc lret test sbb mov fbstp mov rex.WRXB fwait clc rex.R (bad) xor xchg leaveq sbb cmp and in jno sahf jge insb and test (bad) sar xchg outsl imul sbb xchg scas xchg mov rex.WXB pop push (bad) gs push or (bad) sti (bad) push sbb movslq xchg outsb fwait lods (bad) cld mov rex.R mov pop (bad) sbb (bad) getsec rex.X sbb cltd rorl rex.WR rex.WB stos cltd je cmpsl add rcrl sbb (bad) pushq (bad) jl adc mov (bad) sti xlat push fwait je mov (bad) lods lock rex.WB push movsl and fdivrs ds cli es jns (bad) sbb stos xchg add shrb mov add sub lods cmp rex.RXB or push lret cmp insl sti fwait (bad) jge rex.WRX (bad) lea push pop int3 (bad) (bad) addl cltd fwait or repnz fwait adc (bad) mov out fwait (bad) pop callq jo mov rex.R rex.WB cli xchg sahf out fwait (bad) rex.B rex.RX in rcrb xor (bad) or in (bad) fstpt icebp outsl (bad) sahf loope stos sub cli sbb out rex.WB fwait jno jmpq jge xchg repnz (bad) rcrb push stc xor push iret popfq pushfq and movabs sti rex.WX movabs push sbb negb fwait pushfq adc sub mov jns ficomp (bad) in jg sbb pop (bad) rex (bad) xor negb pushq shll mov mov mov jle adc in rex.WR (bad) lods cli stc rex.WXB rex.X mov scas and (bad) or ds jmp rorl (bad) sbb fnsave out xchg fstpt sub mov adcb jne add movsl and (bad) (bad) (bad) jbe movslq cmp xchg pop sub mov lods adcb xchg shl rex.WX mov mov or loop lock mov sahf mov int3 xor sbb fimul (bad) repz cwtl lret (bad) mov rex.WRX sub rorl jb sbb xlat or sbb fs mov out xor ja fmul jrcxz cli ror xchg mov (bad) insb ja xor and cmpsl rex.RX scas nop fcmovu mov pop sbb jb jrcxz (bad) gs adc out adc xchg in xor cltd rex.XB or rex.WRXB sbb test rex rex.XB (bad) gs mov pop cld pop retq jnp sbb xchg in rorl lods push inc movntq sti pushq or mov mov xor lock pushw rex.WXB movslq sbb rcll pop jbe (bad) mov (bad) fisttpl rex.X and rex.XB (bad) int adc cmp xchg insl pushq fidivrl (bad) sahf pop enterq pop push cmpl and sub sub rex.R rex.RX pop sbb add jle (bad) mov xchg xchg jbe sub pop add lods cwtl sbb push cs mov out adc sbb xchg mov retq mov (bad) pmuludq sbb stos je scas cmp sti sbb loope hlt jp jl stos (bad) cmp adc sbb fistp adc fild sbb pop pop mov add or lods repz xchg fisubr (bad) pop mov pop jl (bad) pushfq xchg test cmp rex.WR rex.X fwait repz rex.WX rex.B (bad) mov mov push sub (bad) nop imul jp sbb fs sub fadds cmp push or roll (bad) jg lret rex.RX sbb xchg pop jne and jno fadd (bad) (bad) fwait (bad) shr jb (bad) rcrb rcr movsl sbb mov data16 sbb iret xchg movabs fidiv jo orb fcmovnbe and (bad) or push xchg imul stc test cmp (bad) decl loop callq (bad) sub rex.WRB retq sbb fwait gs (bad) jrcxz ds xchg (bad) mov movslq cld retq repnz (bad) sbb rex.WRXB fwait xlat enterq (bad) pushfq adc leaveq and rex.RB xchg loop xchg xor mov mov mov int3 adc xor cs (bad) jg rex mov stos (bad) mov sbb mov (bad) xlat (bad) clc (bad) sti xor adcl cltd (bad) rorl xor (bad) cmp (bad) (bad) xchg repnz jb fwait rolb or movabs jb rex.WXB repz (bad) movabs (bad) (bad) fistp mov lahf mov (bad) xchg pop or adc int3 add rex.WR (bad) jl adc fbstp mov movabs xchg xchg push cltd (bad) rex.RXB lret rep xchg mov iret jl xor jns sbb or (bad) xchg xor (bad) out xlat negl es push pop sar popfq rex.XB stos insl (bad) jnp fmull (bad) jmp es (bad) (bad) vpaddb jge int3 sbb (bad) (bad) cmpsb cmp (bad) cmpsl (bad) imull or stos mov jge movabs iret or push fistl cltd callq popfq (bad) rex.WX fcoms cwtl (bad) lods push sbb xor addr32 popfq fs orb scas and in jge (bad) lods xchg movabs (bad) mov cltd or negb (bad) cmpsl xlat or xor rex.WRXB test hlt jrcxz sarb (bad) fwait rol (bad) in cwtl in hlt fwait xchg mov lods fsub int3 rcrl imul lods xchg insl je roll out cmp retq mov xchg loopne stc movslq rex.WR adc fwait movb repz rex.R fwait rex.W adc adc (bad) loop fwait (bad) scas and sbb mov fwait xor xor (bad) repz pop (bad) icebp jmp movb out fwait rol sub es or rex.B test (bad) test push add or in add xor std fistp cmp xor sbb fwait mov rex.X shll or movabs retq mov mov sti xchg fwait (bad) jns ror imul sbb rex.R addr32 pushq sar (bad) lods cmp or cltd and pop xchg outsl test mov (bad) clc push fwait (bad) pop movabs (bad) test out adc push push jno rex.RX stos data16 fucomi jbe xchg xor rex.X lock (bad) je stos (bad) int mov fdivr add jno push add (bad) fwait (bad) xchg outsb xchg xchg fcomi loope out sbb rex.WRX andb pop mov cs mov mov mov (bad) (bad) fwait subl fwait cld mov and (bad) or xor repnz (bad) cli icebp fisttpl test jl fisttpl mov cmpsl mov push lods (bad) or sahf sbb (bad) mov ja loope repnz andl out fstpt jrcxz mov in fwait adc movabs sbb rex.WRX lret stc xor sti lods mov or or sbb adc sti nop sbb or mov (bad) rex.R sbb orb (bad) (bad) lock cli rcrb (bad) (bad) (bad) fldl rex.RB sti or and fwait rex.WXB fwait mov mov push and cwtl xchg fildl jmpq fstpl xor (bad) pop xlat cmp xchg lret lret mov mov add pop loopne or mov jae repz mov repz shlb jmpq and (bad) jb mov jne cli pop sti (bad) cs (bad) (bad) and mov add movabs jmpq movsl cmp xor (bad) fistp jle xchg ffree or pop (bad) cmp rex.X ds rex.XB imull lret add rex.WRB test in scas jg sbb (bad) rex.WRX mov fucomp mov fistpl lret and sbb rorl cmp sbb and cmpsb fucomp imul movslq xchg mov pop (bad) or push sbb add outsl pop sbb rex.WRX (bad) out fwait stos cwtl cmp (bad) or jnp xorl lahf lea lret xor (bad) leaveq fwait je,pn sbb and cmp out (bad) nop fwait out (bad) retq or mov setnp insb mov pushq mov jmp mov test int3 sub test movabs cmpsl rex.WRB rolb cmp or pop sbb callq (bad) pushq pop sti jp mov retq pop jrcxz rex pop mov add (bad) and (bad) adc fdivrs stos sub int3 rex.WRX pushfq pop push mov shr ds scas or fistp cmpsl popfq xchg rcr fnstcw jp pushq adc mov lret xchg push or movabs rex.WRX xchg (bad) pop fwait and sbb push fnop pop imul sbb mov stc adc sbb retq xor mov shrl fistpl cwtl fildll pushq sbb divl jp insl (bad) test rcll js or mov xchg jnp loop cli adc xchg and out cmpsb je jne imul rex.B or or cmp add jbe popfq (bad) test movsl cmpsl test sti scas rex.X es adc cltd loopne (bad) or cmp mov push sahf movabs popfq jae sbb jl (bad) (bad) movabs (bad) rex.WRB fildl xchg test int xor push sti and mov ja int3 (bad) fild sub movabs jmp fstpt test test rol jl mov lea xchg cmp cwtl push (bad) cltd add mov xchg pop jg movsb pop cmp pop mov xor xchg mov mov jnp (bad) rex.WXB cmp and repz test fstpl rex.WRXB mov xlat mov cld lret xor std clc stos fldcw fs sub jbe pushfq mov jo cmpsl (bad) (bad) icebp data16 and jge mov xchg rex.X xor (bad) roll rex.WX rex.W xchg xor lret movabs add mov movabs push lea gs or loopne sbb imul push js ja lea sbb rex.RXB loope xlat mov fsts push js mov and sbb cld adcl rex.R stos cltd mov clc (bad) xchg pop movl xchg repz div add rex.R push (bad) pop iret stos add jmp xchg add scas (bad) movabs or and xchg push std or adc rex.WR (bad) lods rex.WRX repz loop push cmp fistpl (bad) lcall mov cmp movslq sti sti stos fstpt out mov or adc mov or (bad) xchg (bad) rex.X cs pop cli je sub pushfq pushfq fxch movsb sbb jl out std lea pop scas sar rex.WRB lods adc mov (bad) xlat (bad) sti push rex.XB or pop rex.R out shr popfq sbbl loop out jg pushq pop retq test sbb iret lods enterq or stos (bad) lret adc mov movsl sbb jnp ds fwait shrb jrcxz adc adc jmpq and fldcw jmpq popfq ss decb iret movabs addl popfq rex.RX rex.B rex.RXB (bad) mov rex.R add fucomip repz imul rcl std in (bad) fwait (bad) mov lods adc xchg stos and ss fcoms mov loop sbb int mov leaveq rorl jae jmpq rex.WR rex.RXB adc (bad) sahf xchg test mov (bad) push cltd mov add (bad) fisttpl xlat fdiv xor mov scas out lock add test xchg insl fwait retq orl ror mov push add es sti add pop jmpq rex.RX rex.RXB rorb cmp scas gs insl fidivl mov je (bad) int3 retq sbb rex.WB rex.RXB movabs push pushq push out rex.R insb iret pushq icebp rex.WR decl xchg addr32 add std pushq cmp push faddl rex.XB rex.RB sbb or (bad) lahf mov fdivl movabs loope fiaddl xor repz fcoms in pop xor fwait pushq (bad) stc mov sbb (bad) (bad) out fwait hlt and push pushfq or mov (bad) fnsave sub add fwait (bad) jne cli rex.WRB fwait rex.WB sti (bad) mov es rex.RX lret or (bad) or sub and (bad) lods (bad) cmc sahf popfq (bad) (bad) clc out add and scas out fwait imul (bad) cmp in out jb xchg (bad) js jmpq or (bad) test out (bad) mov (bad) or test cmpsb iret and mov stos loop (bad) sbb movl ds negb (bad) pop and mov stos jno xchg mov push sbb sti sarl or cli fwait jge movabs js cmp cmp (bad) (bad) (bad) testl rex.WRX jle adcq fwait (bad) cli sti jae pop faddl (bad) scas (bad) sbb mov adc pushfq in fwait (bad) (bad) mov add rex.WR (bad) fwait addr32 (bad) rorl or add (bad) adc mov cmp add insl adcl mov sub popfq scas js ss fwait int pop xchg lahf clc and sbb sti jl sahf jge mov mov mov hlt add rex.WXB in xchg (bad) retq cmpsb fwait sub gs jrcxz (bad) xor (bad) (bad) rex.WRXB callq rex.WRX fwait (bad) (bad) (bad) loopne lods fdiv fwait sahf add mov sub jrcxz fwait jb mov sub push xlat xor jne rcrl add jns fcmovne or mov fwait xor imul and mov (bad) idiv xchg (bad) jnp push mov rex.X jrcxz movabs jg pop in cmp xlat push je xchg cmp mov sub (bad) mov js gs out in pushq xchg sbb rex.XB lret push xor push loope test fwait jo fistpll mov sti mov retq fwait (bad) rex.WXB ds add mov adc outsl push jb imul sbb loope xlat pushq (bad) nop fucomi lahf movl movabs sub jmpq and (bad) (bad) add sbb (bad) popfq ja mov stos jno fwait (bad) jl insb rex or sbb push outsl mov pmaxsw loop fwait (bad) (bad) xchg andl (bad) mov rex.WB insl pop xchg sbb sti ja rex.B ss rex.RX sub add repnz ds pop (bad) rex.RXB (bad) sbb mov cs push cmc lods xchg lcall fildl jmp (bad) xor mov lea or (bad) ja rex.RX pop lret idivb push test xabort fwait xchg faddp outsb pushq xor in rex.WRXB xchg insl (bad) lea sub sbb data16 retq jmpq xlat pop xor jo pop sbb adc jmp xchg fs mov mov xchg xchg rex.WRXB cmp mov sbb scas (bad) cmp jrcxz clc js xchg adcb loope xor fwait out sbb or push xchg in fldl cmpsb xchg lahf mov test add fwait (bad) cmp data16 (bad) and fwait scas sbb js mov imul (bad) jmpq repnz cs xchg xor callq xor movabs (bad) movslq fwait repz sub jl out (bad) sub jrcxz (bad) fwait adc insb in stos add cmp (bad) add fwait or sbb (bad) mov callq scas enterq fwait sub fwait jo jmp xor cli (bad) incb and sub pushq (bad) and push fwait lret push cs loopne or (bad) pop addr32 sti cmp mov or jge lahf push sbb hlt fmul or mov out rex.WB fwait movabs (bad) (bad) adc fidivr mull cmp mov sbb rex.B repnz jbe ja sahf (bad) lahf popq (bad) gs fwait lret nop out leaveq (bad) fs pop fwait pop loopne xor in and sbb pushfq mov shll fwait rex.WRXB (bad) rorb sarl and loop scas add rcr js pop in pop fwait pop xchg (bad) iret add cmp clc rex.RB fwait (bad) ror adc rcrb stos int3 (bad) cld rolb cmp outsb jne sub rex.RB (bad) fwait iret pop imull test (bad) jp lret pushq add cltd cmpsl cmc rex.RB ds sbb or gs sbb fisttp fwait jp xchg mov pushq fidivrl fwait lods rex.RB rex rex.W mov rex.WB ss int cli push jmp fs adc or mov movd xchg fnstsw shl (bad) rex.XB lods add mov fwait adc sarl sbb fiadd cmp std sbb push (bad) rex.WRXB imul in (bad) jrcxz sub divl sbb lret in sti (bad) push mov pop rex.WRB sub stos (bad) fwait out cmp outsl fiadd sub callq es sub jp jl out sbb jmpq mov cmc lods loope adc popfq test ss mov fwait (bad) iret out pushq popfq scas rcrl in sbbl out sbbb sbb (bad) pop sti fisttpl loop rcrl mov shlb popfq callq xor movslq xchg jno add rcrl sbb (bad) insl cwtl (bad) and sbb pop push cmp jg addr32 push and adc lods sbb add repz (bad) fmull sbb (bad) sbb jne pop pushq fidivl repz movsb sub fisubrl pop pushq outsb rex.WRB imul (bad) rex.WRB jnp mov nop (bad) sahf (bad) in cli (bad) and sar mov adc int pop or retq (bad) mov xchg adcl xlat mov out adc xor data16 (bad) cwtl xchg fwait sti (bad) int3 (bad) mov (bad) adc sub mov mov and or rex.WRXB insb jne fisttpll mov fwait scas xchg (bad) (bad) cltd es add mov repz sbb sub stos stos neg mov adc fwait and fwait stos rex.R sub (bad) out sbb enterq (bad) shrl push fist sub sbb fwait rex.X adc (bad) scas or rex.WX cmpl xchg rex xor push add or push jrcxz popq movsb fwait cld lock leaveq je fwait xlat insb xchg xchg pop jmpq stos jg pop cmp adc sarb in mov jge fstpl jl jb nop enterq cmp (bad) pop mov fisttpl cmp out cmpsb insl mov sbb je movslq movabs (bad) push pushfq xor jl sbb imul sbb mov add movsl repnz mov movabs cwtl fwait (bad) (bad) dec xchg movslq mov leaveq or pushq fwait adc xor xchg (bad) sbbb (bad) sarl scas cltd push jae std add mov xchg test jmp popfq xchg adc rex.WRXB xchg sbb xlat movslq std sbb sbb mul cmp stos out (bad) jle out (bad) or movabs jno fwait xchg stos std ficoml xorb data16 test cltd (bad) xchg mov (bad) or adc xchg rex.XB fwait jo adc loopne pop push cmp fisttpl add sbb push mov andl and and or xchg rex loope int movsb adc xchg adc pop pushq enterq fcomps or (bad) xchg in (bad) mov addr32 out (bad) sbb or cwtl (bad) cmp insl cmp adc cld jo (bad) (bad) mov (bad) (bad) lret or sarb sbb out xor movabs jno fwait pushfq rex.WRX mov fistp push lods hlt out ja push adc or negb fmul or jmpq cmp ss add xchg rex.X rclb and ds cwtl jl mov adc or jmp sbb fwait jno (bad) stos sbb rcll retq iret xchg xlat jmp ds xchg mov (bad) (bad) (bad) adc mov or lods (bad) (bad) sti add (bad) push fwait enterq cmp cmp subl rex.WXB sahf sbb (bad) fs jmp adc fcomp mov sbb testl fcomps (bad) outsb sub (bad) rex.WRX mov mov mov mov fwait sahf sub sbb out sbb int out (bad) add mov adc (bad) sbb mov mov stos rcl sub retq std fwait adc pop sarb sbb sub enterq (bad) (bad) xchg loope sub (bad) mov icebp fwait sbb (bad) or movabs movabs (bad) sub and cmp pop adc scas (bad) iret (bad) fst rex rex.WRXB sub (bad) pop sahf repz icebp xor cmpsl clc pop rex.WX cmp sbb sub rex.RB xor mov pop mov xchg add add cmpsl cltd lret movabs cld fwait adc movabs sbb loopne adc mov and mov icebp mov popfq loop,pt rex.WX popfq fldt jg xchg jle (bad) repz nop sbbb loope movslq test cltd mov fiadd pop jle fild jg insb fwait pop (bad) (bad) fldt lret mov out mov sbb (bad) xor out cmp je leaveq mov pushq pushq and mov sbb and fmull sbb rex.B sbb (bad) fstps jo sub sub lret jae lock movslq enterq std rex.WX insb mov jae pushq (bad) push xchg popq jp xchg (bad) test (bad) push fstp add insl in mov fisttp rex.R sbb push pop and (bad) mov (bad) mov pop (bad) fcoml fldt test push or sbb (bad) in xor (bad) mov jl push callq xchg lea jbe sub out sbb pop sbb cmc retq push (bad) shlb icebp nop cld xor nop (bad) and enterq adc jnp jns add mov xchg cli fcoml jo rex.XB outsl int3 push fcompl lods (bad) jl (bad) jrcxz jmp (bad) mov (bad) mov jne pushq (bad) rex xchg mov adc clc cmpsl insb retq cmp rex.WX and mov test (bad) push push movabs mov nop mov jae xor out sbb jnp rex.WX out movabs mov je sub cwtl sbb sbb loope enterq jrcxz rex.WRB ror rex.WRX rcrl mov mov (bad) retq xchg pop out mov scas lods int3 and test push and or rcr repnz mov (bad) sub std (bad) sbb cld xchg ficomp mov sub jle ja push popfq rex.WX mov push or pop mov push push rex.RB int pop adc rex rex.RXB movabs scas mov jl (bad) cmp (bad) rex.WXB sbb outsl clc add add cwtl in add add sub sbb rex.WXB pushq pushq (bad) movslq fadds add ja xchg fisub adc stos rcrl add and xor mov repnz rex.RXB cmp mov (bad) xchg (bad) test or and (bad) jl in pushfq (bad) adc sti fwait setl sub cmc rcll xor in mov xor stos xchg out ja mov sbb scas adc jne cltd pop jg shl xchg pushq (bad) ficom (bad) cltd ja sub adc sbb pop fstps xor or out mov loopne adc pop or (bad) or push mov sub loopne sbb loope or mov lret (bad) rex.WR adc fnop paddsb jmpq (bad) (bad) adc imul sbb (bad) mov pop loopne add rcll in hlt jbe clc jno mov cmp out mov (bad) stc imul xor (bad) cmp (bad) add sub test rex.WB xor xchg or cmp stos xor jmpq scas mov push sbb sbb adc (bad) divl fdivrl cmpsl xlat sbb sbb xchg (bad) seta mov je je sbbl xchg sbb xor popfq add jo cmp mov (bad) bnd movl rex.WRXB cmpsl rex.RX int and data16 sub cmpsl mulb test (bad) data16 (bad) sub jae jge fisttpll popfq sbb fisttpll pop fbstp pop cltd (bad) or popfq and lods rex.X xor test cmp add adc xchg mov sbb (bad) mov (bad) cmp xchg out pop push (bad) xchg (bad) in push fucomi cmp sbb sbb sub mov pop and shlb mov sub xor rex.B adc rex.WXB add mov rex.WX (bad) xor (bad) mov sub (bad) jnp pushfq pop mov std rex.WXB push rex.WB or rex.WXB mov jl adc stos pop cld outsl mov adcl frstor mov movabs pop (bad) mov (bad) test mov addr32 popfq int3 (bad) fimul cmp and sbb je lret loope xchg std jo sti test test xor or xchg pop cld sbb mov movabs in retq fwait cmc popfq sub fwait scas fcmovne fldenv jnp (bad) mov shl and push ficoml subb (bad) rex.R je adc fmul fisubl (bad) and sbb xor rex.RXB (bad) fwait pushq jrcxz mov (bad) sahf scas jns mov imul xchg fwait sub adc adc add leaveq fidivrl cltd and lret loope jnp xchg lea sbb pop push iret out mov pop stc (bad) adcb fcoms orl cmp rex sbb (bad) jno int cmp loope js callq sub cmp jbe stos in add xlat mov fwait rex.WR xchg rex.WB add sbb (bad) sbb jmp fstpl add lret pop mov adc negl (bad) sub clc sbb popfq rex.RX rex.WRX (bad) movsb scas cmp test push jg sarl movabs iret cmp fwait xchg jns (bad) fdivrl jmp fwait (bad) (bad) push (bad) rex.RXB sbb (bad) retq push fwait stos xor rex.WR (bad) xchg lahf mov popq rex.WRX cwtl sbb jmpq addr32 jmp or js leaveq or (bad) (bad) pop mov mov popfq (bad) (bad) rcrl mov cmp retq lret fwait pop and (bad) push retq cmp jmpq mov ss insb cmp rex.RX movabs fistpl and cmpb cmp int pop cltd or cmpsb mov test addr32 rex.X mov cmp and pushq sub vmwrite sarl pop imul cwtl sub jl and ds imul insl add fimull or sbb cmp sti pushfq mov rorb sub adc std (bad) pop push data16 cs pop pop pop adc stos xchg (bad) xor push jl (bad) icebp andl sbb jbe fcmovne js fwait (bad) movabs push cld in sahf mov js lods scas es (bad) mov or push xchg fwait (bad) cs stc sub mov clc sub fwait leaveq repz cli jl movabs sub push rcrb hlt rex.WRX xchg (bad) mov mov (bad) (bad) jle imul fisttp sub (bad) int mov sbb sub sub pop gs rex.WRXB mov in or fcmovnu xor out add es and (bad) pop fcmovnb sub (bad) (bad) cmp jns imul xlat rex.W add add fwait or fnstenv mov std adc jmp (bad) (bad) cmp rex.WRX sbb and repz addl icebp (bad) ja addr32 in lahf (bad) enterq stos xchg cmp sbb mov (bad) (bad) sub fildl jb hlt xchg out fwait shr xor (bad) mov xlat (bad) shll (bad) addr32 retq sti add lahf pop hlt sbb and adc int callq or cmp sbb fwait rex.WXB test retq jnp (bad) (bad) (bad) sti (bad) jmp jns xor rex.R cmc imull fwait stc push rex.RX cli int xor jne fwait pop lods mov fst xrelease (bad) mov sbb jmp xchg adc jne (bad) cltd mov adc or sarl insb (bad) push pushfq popq jo mov std (bad) xor fmuls cmp rex.RXB (bad) rcrb adc fwait pop and xchg fwait xcrypt-cfb cmpsl movabs std lods adc (bad) fisttp sub repnz movsl leaveq sbb shr roll mov lods cmpsl (bad) outsb cli cs adc repz out jo cmp (bad) testb pop retq mov fsub sbb fs scas (bad) sub bnd ficomp insl mov (bad) stos adc rex.XB sbb popfq test add (bad) out rex.X fwait cmpsb rex.RXB cld (bad) fwait jbe mov rex.WR and jge movabs (bad) add fwait sti retq or sbb pop mov (bad) xchg outsl push (bad) pop add cmp lret cltd push (bad) stos jrcxz sub pop sbb rcll loop xchg icebp sub nop rex.WRX jrcxz fwait cmpsl (bad) mov insl or cwtl lret rex.R fwait test push je fsts jge (bad) stc sbb ja pop (bad) (bad) outsb ficomp jmp push rex mov lahf jbe loop jne fiadd pop mov insb fwait rex.WX mov xchg (bad) mov addl jnp jmpq rolb (bad) (bad) pushq push fcomi sbb adc fnstcw icebp xchg push push fbstp or pop (bad) pushfq add jmp ror cwtl mov (bad) sbb sbbb fwait rex.RX lods cld loope (bad) sub sbb mov mov and enterq insl popfq psrlq mov out mov sti test sbb or std rex.WXB pushfq imul (bad) mov hlt cld in scas cmpsb cwtl push cmovl cld lock out mov rex.XB jns movabs sbb pop pop adc mov rex.B and (bad) sti xchg repnz mov pop xor test (bad) in jbe (bad) mov xchg xchg rex insb jrcxz (bad) mov fnsave xchg sbb (bad) pop mov add testl retq cmpsb xchg jl sahf scas pop or sub cltd sub mov mov (bad) hlt in mov sub out rex loopne pop loop shrb movsb sub xor movabs iret mov imul fwait xor fisttpl (bad) rex.W shl (bad) imul (bad) mov int3 (bad) in rcrb pop (bad) (bad) add fwait iret mov xor fwait sub sarl fwait pop jno rex.WR gs add rex.XB rex.RX fwait pop insb loope icebp cltd loop,pt mov outsl rep mov (bad) rex.WXB add and fwait xchg or lea pushfq sbb cmc notl add cmp rex pushfq mov callq insb (bad) adc sub fwait cmpsb rex.RX loopne mov mov leaveq (bad) push xchg mov mov imul or xlat mov (bad) in fwait stos cmp mov cmp (bad) fwait cmp lods push out pop xor out mov ds sbb jg (bad) lret add insl (bad) push out (bad) movabs movabs js add add and testl mov loop jl fwait jb sahf popfq mov xor push sub sti cs out out fwait retq or fucomp pop rex.XB rex.XB lea rcll jbe or (bad) mov jne cmp add (bad) pop icebp (bad) mov mov add xchg fwait rex.B jno jae,pt fldcw xor mov (bad) fistl addl insl and add mov rex.RXB fwait adc es (bad) rex.WRXB pushfq mov out pop or cmp jne (bad) jrcxz mov xchg sub in fwait jmp movabs mov fwait insb (bad) sbb std fwait add jrcxz rex.WR fwait pop rex.WRX movabs imul or mov fwait lods mov adc mov sahf fcmovbe add (bad) mov fstpt adc sub ss jo mov (bad) sbb cmp cmp out pushq (bad) fsubr cmp pop or (bad) mov clc popfq data16 push (bad) ficompl jnp sbb adc lret (bad) sbb rorl test pushfq rex.WRX scas idivl mov (bad) (bad) fsts push fstl mov (bad) sbb mov xorl scas pushq add nop mov mov stos add sbb adc and je rorl xor pop cmpsb imul xor rcrb loope (bad) xchg icebp lock (bad) andl mov xor jo xchg lret mov fwait movabs imul movsl movsb xor cs xchg rex.X fstpl xchg loope movabs jmpq push fwait add sbb fwait adc in in (bad) mov sbb rex.W fwait (bad) mov push repnz add cwtl rex.B (bad) imul js stos in mov in sub jb rex.WRX fildl scas (bad) cmp cmp mov mov rex.WXB cmc jge pop jp int push incl cmp (bad) push outsl fwait in pop (bad) enterq incl sub (bad) stos mov in movslq and xor jo fwait mov (bad) or test repnz jmpq out fsts scas std jp fwait rex.B fstpl ja mov (bad) pushq pop pop fwait mov push sbb cmp mov add cmp int3 out mov and jl in popfq mov clc pushq rex.R pop out pop (bad) imul mov cmp rex mov movabs rorl sbb (bad) sub mov movslq int3 jbe adc or js fwait clc sti test jge rex add and cmpsb mov insl sti rclb lods jne jbe jo in (bad) mov rcr sbb (bad) (bad) push movabs cs xchg pop lods jrcxz,pn imulb fwait (bad) mov adc xor iret cld (bad) mov fwait jg fs cmp (bad) xchg outsl jbe jle fwait cmpsb xchg shlb retq sub fwait (bad) push fidivrl cltd (bad) callq add pushq mov test xchg jbe enterq sbb out repnz jb insb int hlt rex.WRX stc and scas mov fwait rex.WRXB or pop popfq pushfq push stos retq sahf pop loope push in rex.XB shlb and pushq adc mov mov sbb (bad) jae (bad) stos mov fstps rex.R adc stos fwait (bad) iret lahf hlt or xchg xor (bad) pop subl cmp shll callq mov imul lock hlt movsl lods xchg add mov mov or jg sahf adc fwait jne sub mov xchg jae cltd decb pop cld sahf mov (bad) rex.WRX mov fwait outsl (bad) or or pop fsubrl rcrl int xchg mov add insl negb leaveq movslq jns mov sbb sbb adc fwait sbb xchg mov (bad) push (bad) rex.WRB out (bad) ja movabs pushq rex.WX out push xchg out mov (bad) sbb rex.WX fwait (bad) (bad) std retq pop pushq enterq push data16 xchg xor rex.WB adc movsl int outsb xchg and sti mov callq xor shrb xchg jno test jmp add (bad) (bad) fst movb adc pushq cltd sub pushfq or sahf fwait jo (bad) sub (bad) pop (bad) sbb out imul (bad) cmp lea nop mov mov add stc (bad) (bad) mov movabs or pop xchg adc jbe xchg cltd (bad) (bad) sbb mov movabs (bad) (bad) add adc push faddl add test xorq jo rex.WRB out sbb xchg jbe add loopne fildl fwait retq mov sti add test (bad) add gs imul movsl (bad) pop jge sbb jle icebp (bad) xor jmpq fwait cltd (bad) leaveq ds rex.RX (bad) xchg jae retq jge xor mov in (bad) mov test loopne callq in hlt mov gs add jmp jbe fwait xor out je cwtl cs movabs (bad) and out adc add xchg mov mov leaveq adc sarl test movsl vaddss fbstp jmp scas mov fwait iret adc cmp pop xchg add sbb xchg jge (bad) gs mov (bad) xchg (bad) rex.R mov movslq mov pop pop (bad) (bad) sti (bad) cmc popfq (bad) jae scas pushfq rex.WRXB fwait sub out cmp mov sbb (bad) xor loopne or push and mov sub jno movsl (bad) ja movabs pushq xor jne (bad) (bad) cmp in fidiv cwtl scas sar (bad) outsb mov pop inc cmp add (bad) xchg ficomp xchg xchg add lock xchg (bad) sbb pop xchg adc cmc (bad) ficom push hlt xchg pop jmp or sbb xor (bad) (bad) repnz push sti rex.WXB xchg mov rex.WRX idivl mov or xor (bad) (bad) adc rex.RX mov or mov adc mov add (bad) pop rex.XB popfq cltd je sbb bswap ss ds pop rex.RXB (bad) mov mov movabs mov scas rex.XB fucom fsubrs movslq (bad) jb or (bad) popq stos ss (bad) retq sub movabs rex.WRB data16 popfq (bad) adc pushq js and add loopne sbb repz adc mov out rex.RX sub sub lret out cmpb (bad) stos pop out sbb pop rex.RXB pop push js or mov scas cmp sub (bad) fwait stos mov jp fwait cmp and pop imul jrcxz push (bad) jo mov add or jnp sbb lea in js jrcxz sbb scas or sbb adc (bad) movabs stc (bad) test retq fwait or gs mov jb mov adc fmull sbb out xor (bad) mov sub mov and and jno push outsl retq sbb pop ja cmp in sbb hlt imul subl fwait data16 push pop outsb (bad) jl add (bad) rex.X repz lock retq fadd rcrl bndstx or mov test notb xchg adc mov rex.RX xlat movabs cmp (bad) or adc push xchg xchg scas or add data16 adc sbb (bad) and sub pop xor fistp rex.WX pushq int3 int3 mov mov (bad) jb (bad) add xlat jmp mov sti scas pushq test in mov (bad) pushq sbb mov sbb repz fwait jne lods sub cvttps2pi movsl add rex.XB enterq cmpsb movslq mov mov repz pushq sub es lahf (bad) sarb int3 (bad) xchg (bad) rex.WRB fwait out rex.WRXB (bad) icebp sbb sbb rex.WRXB or pop jnp rex.WX mov mov test pop in cmpsb adc mov mov testl fwait cli (bad) sub lret nop scas (bad) sub imul mov push out notl (bad) mov callq or cmpsb es lahf jge mov (bad) out jo rex.RB jns iret cmp mov (bad) fwait xor push rex.RX mov add jrcxz lods sti (bad) jmpq jnp pop (bad) jb pop movslq movabs (bad) (bad) rex.WXB jbe push in out adc sub add and subl and cmpsl xchg movsl (bad) fsts cmp (bad) test fwait (bad) push fsubrs in sub fdivl scas std sbb ja lret sub insb (bad) fs sub pop rex.WRXB sbb or movabs xchg out and (bad) fildll (bad) movabs cmp xor jrcxz adcl rex.B cmp push (bad) pushfq movabs (bad) xor and fwait shrb mov jnp jbe stos mov psubsb loope fwait stc and jne jns lods (bad) or cltd data16 movabs movsb fwait rex.WR rclb add fwait rorb loopne lret xor jmp icebp sahf fildl cmpsl mov stos (bad) paddsb rex.RB sarb sti adc in cld shll stos sti jne movsb repz je xchg cmp fucomp fisttpl cmc rex.WRXB rex.WX adc jno fistpl xor mov or fwait jmpq jmp (bad) fwait rex jge adc sub mov rex.WX rex.RXB rex.R insl outsl retq xchg add lahf pop fwait cld out push cmp (bad) adc data16 movslq movslq out pop or jnp mov jns out xor (bad) sbb lret jle sbb mov and cmp (bad) rex.WRX rex.WXB pushfq mov test repz mov iret lea orl sbb (bad) out mov or lahf jmp jrcxz mov (bad) (bad) cmc pop push repz sti rolb push or cwtl cmc pop (bad) fwait clc xor xor movabs and fcomps stc push sbb mov or scas mov pop jmp rex.WRXB cwtl mov lret xchg cltd adc mov sti pop out fwait negl xchg (bad) fstpt rex.RX addr32 rex.WR fwait (bad) imul stos fwait xor jle mov ss add iret (bad) or or jbe rcrl lods pushfq cmc retq xchg cwtl fidivrl jge popfq jne,pt hlt mov rex.WRXB pop in clc rex.RB add fbld (bad) es fwait movsl (bad) (bad) mov imul in push js fstps push pop xor rolb fwait rex.RX (bad) and (bad) movabs imull (bad) negb fld1 fwait mov mov xchg fwait xchg js bnd rolb loopne pushq jb (bad) mov (bad) mov imul (bad) std data16 xchg xor mov cmpsb fwait enterq jmp (bad) mov push sbb iret movslq sbb in mov mov pushq imul (bad) in xchg fwait xchg mov sbb adc mov mov jmp imul xor clc mov movabs push push jmpq pop gs jns rex.WRXB (bad) insb sbb movsb mov insl mov jge rex.X (bad) xor mov imul rex.RX fmulp (bad) lahf adc pop pop mov repz movsl fbld fiadd mov xchg (bad) sbb sbb sbb outsl subb pop rex.R rex.RXB mov (bad) retq clc and bts (bad) rex.WRX rex.WRB (bad) (bad) xor or jbe sbb xchg or sbb xchg (bad) loop push out negl sbb mov cmp (bad) pop lret jmpq jmp rex.R cmp pop sahf movabs add fldt (bad) fist pop fisubrl in add lret sbb push mov rex.WRXB cwtl std addr32 fldl (bad) imul and int3 rolb sbb sbb and repz rex.WR decb sub mov xchg rex.XB popfq mov jbe (bad) in mov fucom sbb mov sbb jno jns add mov out mov out fdiv (bad) jno pop (bad) (bad) out mov jp mov jmpq cmp cwtl and mov (bad) loop movabs pop cmp mov (bad) leaveq stc (bad) or adc out rex.RB (bad) (bad) sahf (bad) jb cltd (bad) cmp pushfq sub lods rex lahf or xor mov adc sbb in sbb movb test push or stos (bad) mov nop mov js (bad) sahf xor mov (bad) movabs iret mov mov stos mov stos add jle scas xchg rex.WRB ss xor cmp pop (bad) (bad) pop lea cmp adc movabs js (bad) (bad) (bad) (bad) rcr adc adcl lret cmp mov (bad) lods (bad) js xor fs lock add pop sub rcrb clc xor mov mov out insl cmp (bad) rex.R or cltd (bad) shll sub (bad) jae cld loop push cmp jbe nop jo lahf frstor jmpq pop mov mov mov rcll pushq in xor sub xor xchg mov sbb loopne (bad) jne rex.WXB rex.WB or rorb rex.XB fisttp icebp and pushfq movabs mov retq std nop rcr cmp or mov sbb lea movabs es mov movabs movsb xchg faddl cmp data16 jmpq or test jns imul cld pop push rex.WB hlt callq shlb (bad) rex.W fwait jb (bad) imul pushq fstpt fucomip cmpsl (bad) mov mov cwtl movabs pop movabs jns lea (bad) cmp int3 cld or or (bad) std sbb push sbb addr32 callq cmp xor ror mov pop mov and cltd fsts and gs push lret loopne pushfq lret xlat jmpq data16 js jp (bad) push (bad) pop rex.XB or adc sbb sbb xchg sub or rcrl test cwtl in scas mov or iret adc movabs (bad) fcomps adc mov test outsl jp pop mov fcomps mov lret jns lea xor (bad) pop adc cmovno xchg rcrl out xchg push ror out sbb add rex.WRB push loop scas in js repz leaveq iret rex.W mov sbb hlt loope and je jbe mov jl sbb mov or xchg mov xchg xchg mov rex.W mov mov jmpq data16 rex.WR paddw addr32 orl sbb jge xor (bad) je lret stc (bad) sahf data16 mov cmc rorl and jl (bad) pushq add xchg imul (bad) jmpq (bad) out sub xchg sub or jg mov push fwait mov xchg jg (bad) rex.WXB rex.WXB cmp lahf and mov (bad) movb cmp (bad) (bad) lods jbe stos fwait rex.R shufps fwait (bad) int pop add rex.R sub and out callq (bad) out cwtl cli xchg xchg sbb or lahf mov loope fwait (bad) jo outsb (bad) push or rex.WRB xchg jns sbb fmul and ficompl in (bad) fwait rex.WXB leaveq cmp (bad) loopne fwait ja loope (bad) adc xchg sbb mov cmp sub rex.WX sub jb mov adcl push mov addr32 ja movabs add push in fwait rex.WX pushfq push xor fdivrs insl mov loopne fwait and pop push leaveq lock decl xchg push push rex.R jp or fwait push mov out xchg ss jbe (bad) mov mov popfq mov and push std fwait rol jne testl push (bad) je jno or fwait test nop (bad) movabs loope push mov leaveq fwait (bad) fsubrp lea xlat movabs add fcmovnb sub and roll xchg fwait es mov sbb (bad) jg (bad) mov fistpll jl mov mov rex.WRB fwait div std rex.XB loope and pop jg shrl scas imul adc adc (bad) rcrb jns sbb fwait (bad) jnp and movabs push je (bad) out and jnp scas mov lret mov sbb push mov int fimul rol fistp rex.WXB pop adcb shr or fwait addr32 sti (bad) fbstp cs push lahf (bad) pop (bad) scas flds imul lea mov js and fwait pop rex.RXB and cmp js sub cmp and add iret (bad) movsl sbb cmc roll pop cmp xor (bad) imul enterq or (bad) fcmovnb pushq adc (bad) mov (bad) jl jrcxz (bad) pop fwait mov (bad) (bad) sbb loop lret addr32 and es fbld test (bad) out (bad) stc jmp xorl in add rex fwait cmpsl jl cmc mov lods insl or jmp scas (bad) fwait stc pop cli insb sbb xchg (bad) fwait nop test lods pop mov fwait cmpsb cltd pop (bad) (bad) rcrl popfq (bad) jl xor callq fcmovu mov (bad) sbb mov (bad) repnz lea orb pop movabs or (bad) and add adc fwait adc retq fwait rex.RB adc std sub sbb cmp rex.R rex.R test sub xchg jnp in movabs sbb sti and cld lods (bad) fwait cmpsl sti (bad) (bad) jl (bad) sbb pushq iret xor sar mov iret jo adc or add stos mov (bad) fstl adc (bad) mov mov pop (bad) pop rcl fwait ja (bad) int3 sbb mov cmc icebp add or icebp xchg add es push enterq cs push repz and mov pop mov fwait (bad) retq add cmpsb mov (bad) xchg jp mov imul rcrb jae push adc insb xor push loop fbstp xchg movabs (bad) mov rex.XB xchg sbb push push jbe fwait (bad) mov cmc rex.R mov fcomps loopne (bad) and std movsl (bad) fwait cmpsb (bad) rex.WXB cmp xchg cli fwait pushq or xchg fwait (bad) cmp sarl push test xchg fwait jp jb ja fwait (bad) sub sarb xchg movsb sti xlat cmpsb xchg mov insb stc sub test jge jl es sub rclb out jno push callq adc rex.WRXB pushfq jns rex.WB cmpsb xchg pop mov (bad) fwait loopne clc push cltd shrl movsb jo (bad) (bad) push retq xchg xchg mov retq idivb fistl and fwait loopne jrcxz pushq movslq outsl (bad) fwait jg or stc shll sub cmp (bad) lock xchg sbb sbb (bad) mov addr32 incb adc movabs (bad) rcl or (bad) mov mov (bad) sub (bad) jl pop callq testb ficom xor repnz cmp fmull xchg addr32 js fisttpl movabs cld xchg mov (bad) rex.XB (bad) ficoml sti sti mov (bad) cmp rex.WR rcrl fadds sti js repz test jrcxz (bad) push push mov movsl mov rex.WXB add xor mov repnz mov lahf ss fnstsw (bad) xlat stos jbe push fisttpl xchg int3 repz sub out (bad) mov xchg retq stc cwtl pop out cld mov rex.WRB and mov gs stos sbb rex.WRXB (bad) mov int3 cmp push es rolb add stos sbb mov (bad) pop and xchg sbb add xchg pushq (bad) or fstpl mov xchg fildl std (bad) mov rex.WX (bad) or sbb test cmpb adc fwait or sarb enterq int xchg jmpq sbb loop jbe sbb cli fwait imul sub mov sarl xor pop xlat scas fwait jo in mov (bad) int3 or sbb jrcxz mov out (bad) insl (bad) xchg push sti repz mov fwait adc jge fucomip fwait insl sahf cmp adc jbe adc (bad) sbb xchg push xchg enterq icebp jrcxz xor leaveq rolb mov jl xor scas jns jb out fwait in in and addr32 imul hlt add sub lods jge pop mov out add loop (bad) sbb lods in pop pushq mov negl and add (bad) popfq (bad) add mov mov mov (bad) cmp adc (bad) movabs or xlat jbe iret rex.WX mov addr32 rol pop (bad) jrcxz (bad) rol fs std jmpq or xchg mov xchg sub rex.WXB push in xor add rex.RB lret outsl push cmp adcb mov clc push sbb xor (bad) out jne pop xchg adc ja push mov cmp cmp fstpt and mov adc js jrcxz je or (bad) test fwait lret xchg lahf mov retq fwait cmpl clc fwait sbb pop mov fwait push jae mov mov (bad) and (bad) movabs mov add (bad) (bad) mov pop jl pushq sarl mov cmp stc addr32 fwait mov xor sti movabs cli adc and and pop (bad) sub js (bad) jmp jo rex.RB fwait cmp sub or out fwait (bad) or pushq leaveq (bad) cmpsb add xor int rex.WXB mov (bad) psubq movabs (bad) fisttpl and jo pop xchg xor and add xchg fwait popfq es (bad) data16 fwait rcrl mov sbbl fwait push subb callq xorl and clc (bad) pop (bad) fisttpl xlat pushfq push mov stc jnp (bad) roll test (bad) cmp (bad) adc mov cmp (bad) fwait sub pushq (bad) xchg push stc or sub jns adc cld add test rex.WXB xor jp int3 mov cmc add fidivr rcr test std and jmpq add jmp in (bad) movsb rex.WRXB sbb rex out fwait mov in xchg in and (bad) mov adc add or ficomp data16 test mov sub (bad) lret loope xor mov sbb (bad) (bad) js loopne mov (bad) movsb out popfq sti cmc cmp (bad) sbb (bad) push pushq jle rex.R jo (bad) adc adc jg fwait (bad) (bad) ja xlat (bad) rex.WRX rcrb (bad) lods mov rex.X rol xchg insb js (bad) stos cmpsb push jg jl pushfq and xchg (bad) sub and fwait (bad) clc nop jle rex.WXB xchg xor and (bad) sub or cmp jns jp fwait shl push mov movabs repnz (bad) repz add fwait jbe pop sbb adc jnp mov movsl sub loopne (bad) ds cli (bad) jb shl mov sbb rex.R rex.XB xchg and push movabs lret add adc pause fildl fstpl mov fnstcw (bad) jg (bad) sbb rex.WRX push fcoml and fwait andl (bad) movsb fwait enterq out jg fwait sti in adc fwait lock repnz xor adcl fwait xchg and xchg shrl xlat fwait cmpsl mov pop pushq mov cltd movslq sbb cmp fwait (bad) adc jae and fcomps (bad) stos sbb rex.WB int pop jp sti es xchg mov and sbb xor or mov jl addl adc scas add setnp mov popfq lea (bad) (bad) sbb (bad) clc roll adc fsubrl (bad) cli (bad) in mov repz lahf test sbb and fwait jrcxz fldcw sbb xchg pop hlt sbb fdivrl repz fwait out fldenv imul mov cmp xchg clc cmpsl mov sbb (bad) test rex.W (bad) int3 rex.RB or jrcxz rex.B sbb cmp (bad) in rex.W rex.WRX fwait in (bad) (bad) sub loopne (bad) test add pop adc adc ss movslq out add pop cwtl mov callq mov orl (bad) (bad) sbb pop mov sub mov lea adc xor sbb (bad) out xchg js loope adc or pushq fwait push scas or push xchg cmpsb in jnp int3 mov mov mov hlt (bad) cmp movsl or xchg sub cltd (bad) mov fmul adc pushq sub fcomi (bad) or (bad) jae sbb sbb cwtl stc xlat rex.WB movsl int cmc out add xor movslq fwait adc mov sbb movabs ds (bad) in icebp hlt (bad) mov (bad) int and sub rex.WB rex.WB rex.WRX out adcl jrcxz add rex.WR stc loope fwait rex.RX rex.RB lret jg sbb je (bad) mov jmp mulb or mov cmp (bad) sbb je sbb hlt movabs (bad) pushq jne in sbb pushfq mov cli insl sbb mov (bad) add stc adc fwait cltd movabs movsl xchg mov (bad) cld mov cmp shrb fcomps nop retq (bad) pop jno mov iret rex.XB rolb lahf (bad) int cmp ss (bad) jo add scas in pop sbb out mov fbld fwait cmp int3 iret lock sub (bad) (bad) lahf adc loop xor sbb insl (bad) (bad) mov icebp fwait cli push mov rex.RB xor sbbl sets repnz xlat in mov sbb or fistl (bad) xchg movabs sbb cmpl lods push fwait out jnp add push (bad) sub xor movabs sub xchg and in (bad) ds data16 jno sub out mov movl fmul add fwait mov (bad) (bad) ss fwait movslq pop (bad) sbb mov fwait popfq (bad) callq movabs scas sub add sbb out pop (bad) lods stos (bad) rex.WRB fwait add (bad) je insb xlat fwait pop fisubrl xchg fwait sub rcrb pushq scas sbb adc add sbb mov add jle mov (bad) jp in adc subl (bad) fistp retq outsb (bad) (bad) mov lods mov pop fistl mov testl mov xor (bad) ja or pop sti mov pushfq rex.RXB mov mov fwait xchg cmpsb and mov (bad) pushq lret sbb and mov xchg rex.X (bad) cli xchg jge xchg retq xor jmpq mov (bad) cmp mov rex.WRXB sbb fisttpl cld in push jge jbe jne lods mov add or pop adc sar repnz pushfq xorb add (bad) (bad) mov (bad) jl lods adc pushq std mov pop roll (bad) movsl imul sarl fwait mov (bad) in je lock out (bad) mov pop rex.WB push sbb stos add xor jrcxz adc jl fsubrs mov callq test sub movsb pop fwait cli or add (bad) ja imul push mov lea (bad) jge mov adc jne push vucomiss (bad) in fdivp xchg xor mov cmpsb sbb sbb push fist movsb scas ljmp mov (bad) and retq je sbb ds sbb rex.WRXB stos mov fwait rex.WXB jne fs cmp (bad) push mov mov (bad) (bad) jae sub (bad) je pop sahf and fwait mov pop rex.WR movb out (bad) xchg (bad) sahf push fwait (bad) mov iret rex.R shr sub (bad) xchg sti or sbb pop fucom rex.RB sbb sub fildl cltd jae add insl (bad) (bad) mov lea (bad) (bad) scas mov (bad) mov sbb and cwtl add pushq or cmpsl int3 sahf mov div (bad) xor movslq ja push movabs add mov mov push (bad) sub fwait xchg (bad) movsl iret loopne lock jle retq pop pushq mov pushq js cmpl movabs fimull cltd (bad) rex icebp mov rex.XB push xor mov adc rex.RX rex.WRB fs or sbb jle sbb movslq jmpq loope es jrcxz xlat outsl je pop cmp (bad) repnz rex.WXB xchg cvttps2pi movabs xchg jae jns outsb fwait cltd mov scas popfq rex.RX mov sub rex.WRB jb mov movabs add ficoml sbb (bad) (bad) (bad) xchg test movabs (bad) leaveq fidiv mov push (bad) (bad) push xchg retq sahf rol push loope sbb test callq stos (bad) rcll lods fwait cli mov divb in insl jle fucomp mov rcl ss mov jl pop (bad) leaveq movslq jae inc lods repnz mov mov rcr and pop fsubrs xor mov (bad) idiv fwait rclb xlat or cmp (bad) pop adc xor orl xlat loopne mov add fldenv mov repz insl rex.RXB sbb pushfq mov sub xlat and retq pop sbb notl sub outsb adc adc lret rex.WRXB adc sbb sahf xchg ss out fwait movsl fisttpll lods imul fwait (bad) je out and movsl rex fwait or push loop sub bswap sbb sub icebp fwait and mov jo fwait out stc rex.WRB and cld xchg in add adc fwait sbb pop jge sbb and in xor or leaveq (bad) adc sarl loope rex.WRX imul sbb nop (bad) (bad) rex.WX fwait sub sahf rex.RXB add push loopne test rcrl test or stos jne lret add rex.RXB (bad) (bad) mov fisttp xchg pop div scas scas add stc callq (bad) adc add mov out out out pop stos addl sbb mov mov adc callq sbbl rex.WB (bad) (bad) out cmc mov and pop (bad) mov notb fildl rex.RX repnz mov sbb or mov fwait jrcxz out shl in es xor int3 and cltd xchg rex.WXB fwait mov test pop or pop rcrl mov fidivrl mov or (bad) cld out jns or int insb rex mov push fsubrs or rex.WRXB rex.R rex.RX fwait callq test xor cmp jg sar jmpq sti add mov cld rex.WR cmc push xchg and push test icebp movslq jmpq mov (bad) int jnp sub fstp sbb movabs (bad) fwait (bad) (bad) decl add xor sub rex.WB jle add fstpt adc jae retq sub outsb push (bad) cmp cmp sbb cmp (bad) xor hlt pop int3 fwait or rex.RXB sti or fsave fiadd loope cld fwait adc sbb jae clc sbb jp (bad) and movabs prefetchwt1 mov sbb rex.WX (bad) (bad) cli rex.WRB (bad) or jno movslq nop nop rorl jle stos xor cmp lods mov rex.RX loopne sub rex.WX out lods int3 in jg addr32 (bad) xchg repnz mov iret stos xchg mov outsl rex.R add (bad) and retq je retq fsubrs retq push mov (bad) sbb rex.WR add adc pop or (bad) in add cmp and or (bad) or (bad) in jo test fwait xor pop rex.RB nop lods fwait (bad) ds es movslq rex.RX sub cmovge mov leaveq lea int pop (bad) mov push enterq scas fs rex.WRB in (bad) xchg jno fwait dec (bad) repnz loop cmp mov (bad) test movslq rex.RXB push and jmp jnp fsubrl addr32 fsubr test stos cmpsl fcmovne in pop fwait lea push jne sbb add (bad) rex.WRB sarb and (bad) pop outsl xor sub push mov (bad) out mov faddl (bad) mov (bad) ds leaveq pop rex.RB retq xchg stos popfq (bad) pushq lret or or (bad) sub xlat adcl mov fdivl sbb xor add insl add cmp jnp rex.X ds sbb jbe retq pop xchg rorl mov rex.XB rex.WXB push mov fcomps sub push sub fiaddl cmp adc jp movabs sbb and or pop add xchg jb push or cmp pop rex.WXB int3 and and mov jg (bad) sbb rex.WB xchg lods cltd orb int3 rex.RXB mov or xchg (bad) cmp popfq jl fistpl (bad) in (bad) repz fdiv mov cmp mov movsl jrcxz sub cmp push (bad) sbb mov lret fisttpl je xchg (bad) sarl sub sub and fwait sahf pop lock xor fwait pop rex.WRB cmpsl (bad) cwtl rex insl movslq xor mov and movsb (bad) popfq push pop fs in xchg movabs xor es jne insl in (bad) fwait rex.RB or pop rex.WRB rex.WRB rex add sbb (bad) (bad) xor fwait adc fisubrl rex.WB movabs ss cmp xor or (bad) callq fwait (bad) je xchg and hlt cmp (bad) movsl sub and scas pop jb stos and (bad) jmp loopne std retq lret cmpsb sub fwait (bad) jl (bad) stos jg pushq cmc insb adc jrcxz rcrb callq ficompl movabs test mov movslq pop js cmovbe adc mov int3 sbbb in sti (bad) (bad) (bad) es rex.RX jo fidivrl leaveq fwait rcll stos mov rex.WRXB or jmp add fwait cltd loop xchg sub sbb fwait (bad) (bad) push icebp imul (bad) scas xchg xor (bad) out fwait (bad) int insl (bad) fwait pushq mov fldl cli fwait jge cmp rcrl cmp cmp jrcxz jo (bad) (bad) mov test jnp (bad) fwait and mov xor jg,pn fwait rex.WRXB pushq pop mov (bad) rex.WRX sbb (bad) mov pop cld ss (bad) movsl sub jp cmp add xlat push xor rorl loop imul sbb and add (bad) fdivrl mov jae stc fwait sarl xor rex.WRB movabs adc imul push (bad) xor cmp js rex.WR repz sub sub fwait clc imul fwait xor fwait pop push xor outsl rex.RX add movabs fildll (bad) adcb jge cmp jne mov fwait icebp add add (bad) or push fwait iret push rex.RXB fsubrs stc and in movabs retq fistp repnz outsl adcl jl xor jb fwait xchg jle je sbb rcrb (bad) movsl pop (bad) jb callq pop iret int3 hlt xor adcl lea jmpq rol scas scas lock jne sahf xor mov testl movabs mov int movabs rex.WB mov xor cmpsb cmp mov pop and callq xchg mov fwait add rex.RB sbb push movslq mov fs xchg and fwait or sbb (bad) fwait ja loopne lret enterq cs sti pop retq fwait mov bnd fwait mov insb cli push imul push jmpq js (bad) mov xchg repz repnz mov scas (bad) es sub rex.WR test scas adc jo mov sahf sbb repz pop leaveq (bad) or jmp push popfq (bad) jl adc mov (bad) jo rex.WRB jrcxz fwait outsl int3 pop mov shl mov xchg jmp leaveq dec xchg (bad) out cmp fwait xchg rex.B mov jmp jle mov rex.WR and xor mov xchg mov xor fwait sbbl sub enterq mov xor jb fwait mov sbb rex.B retq mov add pop adc and rex.XB mull sbb (bad) sub mov subb mov loope fwait add cmpsb jmpq test rex.RX (bad) and leaveq mov fwait (bad) (bad) xor in movsb je jne,pt cmpsb outsl leaveq pop sbb (bad) ljmp adc fwait test stc lea rex.WXB sti xchg (bad) int jb fwait test push stos jp (bad) rex.WB (bad) sub mov cli fwait cs sub fwait mov sub sbb mov rex.RXB stos add lahf (bad) lods xchg out mov rex.WXB fwait out retq jg pushq movsb ss (bad) sti pop or out jb fwait stos xchg xor (bad) mov mov xor mov cld fs add nop es (bad) mov incb rex.WXB neg fcmovnb (bad) scas fwait pushw add (bad) adc jns sarb add ja fcmovne fwait and (bad) rex.RXB (bad) (bad) jle and fwait (bad) jae sbb loope pushfq fisttpll pop rex jne pushq movslq or movabs add sbb rex.WRX fadd out cmpsb and or movslq (bad) ja fcmovnu movabs rex.R (bad) cmc in or jo (bad) negb xchg jrcxz je rcrb callq push adc cmp out sahf mov and outsl sbb jp repz or cmp sbb (bad) int push add fwait jbe (bad) repnz (bad) sub fcmovbe mov fist out pushfq push push rex.R cmc leaveq mov sbb cli int mov ja (bad) retq jmp xchg rex.WB pop xor sub in imul (bad) mov mov shlb retq insl and rcrb sub jrcxz retq (bad) fwait sbb rex.WRX rex.WXB adc pop loope jrcxz xchg jne loopne mov cmc fwait subb mov push xchg roll data16 pop fwait pushq movabs fsub (bad) mov rex.WRXB (bad) sbb es leaveq fstps push jrcxz mov stos sbb (bad) (bad) rex.WRB movabs jno fdivrl (bad) in fwait js rex.W rol (bad) sbb out cmp mov push roll adc jp or mov cmp jmp fildll fdivp loop in (bad) cmp (bad) mov mov mov sub leaveq xchg (bad) sti sub cwtl stos jl sbb and (bad) (bad) adc (bad) (bad) movabs pop mov sahf (bad) pushq fstp fldenv (bad) mov (bad) cmp cwtl (bad) (bad) (bad) std mov rolb imul out jnp scas sub mov pop outsb fstpl scas and mov mov rex.WRXB popfq in jle jae mov shrb movslq (bad) sbb (bad) sti adc repz iret es cmp sti mov jmpq popfq lods loopne or (bad) stos mov (bad) fwait rex.RB std loopne icebp or jle rex.WB addr32 fwait sbb sti jae movslq and rex.WRB jle add in leaveq (bad) sbb cli sub fwait popfq rex.XB pop (bad) lahf adc cwtl retq test loop xchg (bad) pop in movsl mov xchg jmpq pop sub movabs lahf and jmpq adc test push clc (bad) insl and mov ja (bad) sti (bad) insb out (bad) (bad) and gs in push pushq mov xchg pop jmpq fwait js sarb hlt (bad) pushq add pushq lret ficom stos iret lret add leaveq pushq (bad) test mov sub pop rex.WRX fwait mov rex.RX rex.W rex lock iret cmp fwait sub (bad) adc (bad) (bad) rex.RXB jno test mov sub add (bad) jbe jl outsl xchg rex.WR push mov fsubr stc int3 (bad) mov (bad) cmp xor (bad) cld add shll jbe movabs fcmovnu lret push (bad) ror nop cmpl (bad) repz xchg rorl insb nop cmpsl (bad) (bad) (bad) js stos out add faddl lods mulb jmpq (bad) jl mov cli (bad) jae movslq sti xor stos rex.WRXB mov push mov imul push (bad) sti out lret fwait sahf rex.WRB (bad) rex.WRB callq imul test lods xchg (bad) pop sbb pushq mov (bad) push jno xchg int (bad) sbb jbe add out mov insb fidivr cmpl loop mov (bad) fisttp mov retq sahf leaveq jne lods in sub fwait enterq sub mov in (bad) movabs es sarl sarl pushfq pushq cmp (bad) adc xchg fwait pushq sub sbb xchg pushfq (bad) fidivrl std add mov sti out mov loope rex.WB fwait sbb add test jmpq adc push out retq js shlb fwait test outsb (bad) pop fwait enterq sarl (bad) and add (bad) mov (bad) mov (bad) jo adc insl xor imul callq popq xchg sbb rex.X fwait rex.R xor stos andb lods jb sub cmc in (bad) in adc pushfq xchg mov fadd (bad) movabs (bad) sahf (bad) sbb clc sbb (bad) pop xchg push fninit (bad) add retq mov scas not mov fwait psrlq (bad) out cwtl rex.W mov sbb adc sahf fcomip mov fwait jo lock xlat jmpq pop or add mov lock fwait stc callq movabs nop mov adc rex.XB rcrb push sbb and rex.X (bad) fwait out icebp cli rex.WXB jmp xchg mov fidiv cltd fwait cmp movsb lods xchg mov or fwait sbb (bad) cmp adc test push pop scas std and nop push fcmovnbe xor mov xchg movabs fwait xchg jge lret stos push sbb xchg testb mov loopne cs push jrcxz (bad) mov (bad) mov add xorl rex.WB rex.RXB stos fistpl addr32 mov fwait imul insl cmpsb cmp (bad) cli clc (bad) in or fwait popfq pushq push (bad) xlat (bad) movabs (bad) adc fwait add cmpsb jbe fwait (bad) xor jp sarb sub or push fwait push mov or or cltd or sbb sub and js (bad) jp adc mov xor adc mov mov (bad) fwait (bad) (bad) movslq orb fwait sub lea adc xor int3 out xchg in push jrcxz adc (bad) fwait pushq cld (bad) xchg movabs cmp ja adc leaveq scas movsl fwait (bad) (bad) xor lahf (bad) fwait rcl or add lret out cli rex.WR fwait in jp mov test clc fwait js and or push mov in fwait sahf rex.RB rex.X rorb (bad) rex rex.XB (bad) xor je (bad) mov movl push rorb xchg (bad) loop xchg adc (bad) push adc sahf loop fistpll and std rex.WRX rex.RB mov sbb (bad) cli xchg (bad) rex.WR mov test jnp jrcxz adc cmp lret pop mov cmc fwait rorb fmuls std stos fwait popfq or movsl (bad) pop push out xchg cmp (bad) int jo rex.X rex.RXB out mov cmc fwait (bad) stos loope rex.XB (bad) pop (bad) jne rex.WXB mov add mov outsb pushfq cmpsb rex.WB pushq pop (bad) fstpt add in jl push (bad) (bad) in mov add mov rex.WXB in sbb out sbb cmc sahf mov mov mov push rex.WR enterq jo (bad) adc scas shl jl outsl in mov int3 sbb xchg mov popfq (bad) loopne enterq gs mov (bad) mov (bad) loopne xchg leaveq rex.X xor mov fwait (bad) jmpq add xor rex.RB jge add cmp fwait mov jno (bad) (bad) movsb fcompl js and cmc (bad) in (bad) fwait pop movsb pop rex.X loop (bad) (bad) lea and callq mov (bad) jge pushfq int sti lea pop fwait jg in fnstsw (bad) callq mov mov (bad) jl and fwait imulb (bad) mov sub or fwait adc lret testl leaveq mov cmp enterq cmp mov mov sbbl rex.WRB retq or mov jge and adcl fwait xchg enterq rex.R movabs cli sub mov add leaveq sbb xchg scas cli rex.W xchg (bad) xchg sub fwait (bad) (bad) mov sti push in adc in xchg xor (bad) and rex.RX rcrb xor test mov xchg out cld sub (bad) (bad) adc or pop cmpsl jg enterq loop xchg rex.RXB cwtl retq es fwait (bad) icebp xchg insb repnz mov fmull (bad) mov cmp in mov and pop in fwait cmp push in add or rcr mov sbb iret fsubl leaveq xchg lret sub fwait rex.WR (bad) or sub add in rex.WB sti xchg fwait js add callq mov fwait out xlat rex.WR hlt (bad) (bad) (bad) fwait (bad) (bad) bnd rex.WRX or xchg xor (bad) fcompl cmp mov addl jmpq jl (bad) out test rex.RXB fwait outsl movb (bad) cmp mov or sbb ja sbb (bad) xchg rex.WX fiadd negb push rex.B rex.XB jrcxz (bad) sahf in out scas xchg (bad) sub cwtl (bad) nop retq movabs (bad) not xchg addr32 and cmp (bad) mov movabs add repnz adc and rex.WX lods rex.RX (bad) leaveq sbb xchg rex.WXB xchg (bad) xchg xor fstl retq sahf cld scas (bad) mov cmpsl shlb sahf sbb (bad) xadd (bad) add pop sbb xchg popfq jge pushq retq cld pop out adc jo rex.WB mov movsb jns nop rex.RXB sub sub pop rex.R (bad) sub lods scas cmp mov in imul jp jrcxz callq cmp pushq fwait shrl lea and fwait push pop lahf (bad) imul repz (bad) scas or (bad) (bad) int3 sbb (bad) fildl nop and cltd xchg push (bad) (bad) (bad) mov sub push xor repz (bad) fwait sbb stos rex.WXB fwait lret xchg ds or popfq retq out sti sbb movsb (bad) fwait jo jnp mov rex.WR xchg pop jb sbb loop fwait cli push callq (bad) movabs (bad) rex.R push lods movabs pop push sahf sti fwait outsb outsl mov ror xchg callq lea ss mov rex.X data16 sti cli enterq out (bad) jnp cmc pop sub cmp frstpm(287 (bad) movabs test out fwait sbb rex.WRX (bad) insb fwait leaveq rex outsl xchg cmpsl pushfq (bad) mov rex.W add (bad) fiaddl or cmp retq or mov mov mov (bad) mov pop and sbb test movabs jmpq cltd data16 movabs jl rex.WR rex.WRB (bad) popfq (bad) pushq jns scas lods pushq out jnp (bad) add jle and mov sbb imul lods mov stos mov push lea imul fstpl (bad) ficomp mov sbb sub jns jmp cmp (bad) sub and jge psubw xor popfq jg (bad) xchg addr32 xlat xchg xor enterq sbb shll std xchg rex.X rex.RX out rex.WR ss jnp sub and stos cltd sbb rex.RX mov and mov or subb fsubr jae (bad) stos jne rex.X (bad) in sbb mov rex.RXB out and (bad) and mov pop (bad) jp xchg sub pop adc lods out cltd xor data16 push fcoml jo negl (bad) (bad) scas (bad) pop jmpq bnd pop xchg sti cmp sti rex.X xor in lods xchg (bad) test pushfq add mov retq adc add sbb sahf sbb pushfq stos (bad) or mov rex.WR xchg xor (bad) mov (bad) jne test push sub pop adc sub test pop adc (bad) jge mov scas pop lock push sbb in cmp (bad) nop rex.WRB sti pop hlt add out (bad) jle mov (bad) add pop enterq jmp mov addr32 push test xchg orl adc jmp xchg pushfq mov rorb (bad) (bad) sbb jnp fwait stos cmpsb mov fwait sbb cltd (bad) mov int jrcxz rex.WR (bad) pop outsl jg test xor xor es outsl movabs (bad) sbb movsb xchg (bad) pop (bad) adc imul mov cmc xor lahf adc add add rex.X es sti mov loop ja push in repnz xor adc cmp fsubrs cmp xchg mov or (bad) (bad) mov (bad) imul xor xchg rex (bad) xor repnz mov push leaveq sbb scas (bad) adc jnp xor insl andl fcompl out (bad) (bad) mulb add rolb sbb cwtl gs jl sbb repnz sbb cmp cmp (bad) jmp cwtl fwait stos jrcxz stc lock ja mov rex.RXB mov sbb lret enterq out xchg (bad) cmc data16 insb jmpq xor (bad) fwait and push (bad) fwait cmp sarl adc pop jno fnop mov test mov fwait rex.WRXB add push sbb sti rex.WRB mov cmpsl xchg (bad) rex.WXB mov fbld jl (bad) xchg movslq add fldl mov out cmp rorb pop int3 fsub callq xchg ds decl test jmp sub leaveq fwait mov pop jo adc out (bad) jl jnp je icebp enterq mov fs fwait in fiaddl movabs sub add pop cltd add callq jnp cld push rex.RX es pushfq or std rex.B (bad) movabs cmpsl fwait xor add (bad) rex.XB rex.WX loop bnd mov fwait jge sbb sarl retq ss push retq cmp (bad) sbb add push rex.WRX rex.WRXB adc add cwtl sbb int3 loop or loopne push xchg sbb adc or or xor fidivrl jae sbb sbb rex.W cmp (bad) lret rex.W es fcomi push loop xchg (bad) notb (bad) sbb in cld data16 sahf pushfq out jb,pt movabs movabs clc xchg adc loop out int3 and (bad) mov xchg mov lret roll and xor jmp popfq (bad) cmp pop mov insb movsb mov rex.RXB scas pop mov and popfq fdivs sbb (bad) nop cltd fwait lahf (bad) sbb and jge (bad) faddl rex.WX (bad) (bad) (bad) (bad) cwtl outsb and cmc stc loope pushfq mov cmp mov sub sbb add cmp rex.RB jbe push fwait jo pushq or pop (bad) fwait insl pop imul adc adc add out xadd fwait sbb mov add sbb (bad) and sbb rex.WXB (bad) ja fwait cmp loope push mov stos in mov iret rex.RB and sub fnop (bad) sbb fwait test (bad) movabs sub scas jne (bad) (bad) (bad) fstl push repz lock sbb movabs std rex.XB sbb mov sti sbb rex.WRXB add fimull (bad) (bad) xchg cmpsl jmp imul fwait popfq leaveq xlat rex.WRXB (bad) (bad) pop movsl movsb cmp repnz add mov fwait stc pop rex.W push xlat jle mov (bad) mov cwtl adc sbb xlat movsl and rex.W or xchg jmp (bad) test insb mov and (bad) sub (bad) jno add fwait rex.X imul (bad) mov pop rex.XB xchg xchg xor nop pop (bad) xchg jmp rcrl add pushfq rex.WXB jnp fwait pop js adc push stos (bad) orl sbb fwait nop xor (bad) mov (bad) jb rex.WB leaveq (bad) push cmp xchg pop or (bad) mov jrcxz hlt (bad) jns fwait mov rex.R fwait rex.WRXB rex.WR mov pushfq rex.WX ss neg jg mov mov rcrl sbb add (bad) pushfq fdivrs pushq test (bad) or add fcompl movsb rex.WXB stc ja jae (bad) mov (bad) imul xor or cld (bad) push js decb lods rex.WB (bad) rex.WRB mov pushq fcmovne xor mov popfq xchg mov mov mov nop sbb cmp adc xchg jl fildl cmp sbb int3 stos (bad) cli fwait shl test xchg test mov mov ficompl mov fs mov rcrl sahf cmp add (bad) rclb fwait (bad) sti xor lods xor rex.W push (bad) cli cs push ficompl add cmp adc rcrl jnp loope xor ss mov adc imul stos mov loopne sbb retq jg rex.R (bad) (bad) dec mov xchg (bad) (bad) push scas sarl xor imul sahf xor ficompl sbb or mov adc fld mov xchg sbb mov xor fwait movabs adc cs jrcxz jne fwait (bad) (bad) and (bad) mov repz jl pop fwait test and mov rex.X fwait or je adc jmp out hlt xchg mov sbbl fstpt fbld movsb fwait (bad) jrcxz pop lock sub sbb and cmp jrcxz fcoms (bad) incb addl push push fildl mov sbb mov mov mov outsl mov sbb sbb (bad) cli (bad) jmpq pop xor and sbb out mov retq (bad) cmp stos vcmppd clc and mov add adc nop loop scas mov pushfq fstpl pushfq xchg jnp mov sbb sbb adc pushq push (bad) cld xchg sarb mov rorl cmpsl pop or mov sti (bad) xchg push stos mov or adc sub enterq adc pushq sbb mov mov adc and (bad) and insb (bad) imul (bad) or add push sbb cmp sti cwtl rex.RXB sbb adc sub lret cmp jbe lret ss (bad) data16 jge (bad) or lods mov or sbb sbb (bad) es movsl (bad) sbb rex.WB xchg pop push lret cmp fwait test stos mov (bad) cbtw fwait sti rex.RB stos (bad) test test sti jmpq sub mov fwait xor push sbb adc shlb repz (bad) scas retq mov push add xchg (bad) (bad) push (bad) lock retq (bad) or jrcxz stos rex.WB fwait push out mov pop fwait es ficomp push (bad) or mov (bad) fwait js mov out rex.RB xchg fwait shll (bad) lods jge imul lret cmc sbbl cmp out scas sub push (bad) test rex.B mov (bad) and (bad) and or ss test stc ja lret (bad) cwtl rex.B (bad) sbb jle movabs scas rorb retq or adc scas fwait pushq or std movabs (bad) in cmp or int3 push jno fidivr fbld (bad) frstor scas (bad) fdivrl rex.RX repnz movslq mov enterq xchg xchg pop pushfq in mov xchg or adc pcmpeqd (bad) movsl xchg cwtl mov movsl rex.RB sbb movsb sbb popfq sub mov cs iret or mov fsubr (bad) rex.WRB (bad) cwtl rex.RXB ds cltd mov imul add jmpq movslq iret (bad) mov je movabs (bad) mov (bad) lar adc cld add (bad) hlt sbb pop sub lods loop out out pushq sbb adcl fidivrl divl std rex.XB nop sbb movsb cwtl (bad) movsl cmp sub sbb (bad) (bad) testb (bad) ds (bad) sub mov movabs enterq sar in xchg rex and test mov ficoml out or rex.WRB rex.RB cmp js rex.W fwait xchg (bad) (bad) in out vlddqu pop out (bad) shll (bad) cmpsb adc mov in js movabs in lock add ss stc xor or lretq out fsubrp rcrb outsb jmp rex.WB sub mov add fwait or clc imul cmp ja cs jae cmp (bad) fwait jnp je movslq rex.WRXB fwait mov sub js (bad) imul repz push in xor cwtl (bad) fsubrl sti pop jle jnp in fsubrs sub sbb sbb jo cmp mov sbb rex.WRXB xchg sbb fs xchg (bad) int cs xchg push (bad) adc fldcw (bad) push (bad) or cmp clc rex.W cld movabs rex.WRX mov sbb fbstp (bad) mov in divb (bad) rex.WRX mov lret or push repz rex.RX callq pop jb push mov (bad) fcomi movabs adc cmp scas in rcll cmp mov fstpt cmpsb or test push rex.XB lret cmc data16 (bad) test add (bad) js repz mov (bad) jne sbb xchg push movabs jne push pop sub add clc sahf pushfq jbe and movsl clc nop rex or sub lret (bad) in mulb xchg (bad) ror push pop gs rex.W sti mov shrl out in mulb (bad) scas mov clc fcoml (bad) and sti xor ds mov fildl imul enterq imul xchg xchg stos jae (bad) (bad) rex.WRX xchg xchg fistpll out xor or retq adc xchg movb xchg repz lahf rex.RXB push jl pop scas mov pop fdivr rcrl mov or fbstp or rex.WRB pushq sbb mov mul xorl xor mov negb lea rex.WRX movslq xchg movabs gs nop mov cmpsl out repnz (bad) out (bad) sti lret pop std stos mov push (bad) pop sub movslq scas iret xchg sbb in sbb callq jg js cwtl adc fistl push and mov cmc jge (bad) mov cwtl out jrcxz mov mov insl xlat pop jl ja mov cli push pop xor repnz pop (bad) jne xchg or fldl pushfq (bad) subl negl (bad) rex.W iret jmp mov sub rex.WX rex.RB cmp lahf fdiv (bad) ja (bad) cld scas lea fidivl popfq jg sbb mov sbb lret int jmpq xchg push pop add movabs adc outsl popfq (bad) test popfq pushq pop pop jl scas cmp jp sbb (bad) jne mov and xchg jne xchg (bad) mov std imul mov cmp iret (bad) (bad) stos popfq out xor retq sbb rex.WB xchg and xchg test xor rex.WR movabs (bad) pop data16 jle jge rex.WRB imul mov rol sbb imul movabs rex.RB push jo cmp (bad) cltd iret add sbb insb mov (bad) pop rex.WX lods adc rex.WRB sti cwtl popq divl fbld retq add mov xor lea cltd sbb or cmp stc (bad) (bad) push (bad) (bad) (bad) (bad) sbb pop or cmp jnp rex.W jp int (bad) xor (bad) negl rcll (bad) imul jbe cmpsl sbb xchg lea mov cld xchg jmp push (bad) or jne stos div xchg (bad) and addr32 mov sti push xor je cmpsb fdivrl sahf rcr notl (bad) lret xor sbb pop pop cmp int (bad) jbe (bad) sti push fwait popfq mov rex.WRXB cmc mov rex.W sbb jge pop data16 sub cmp mov pop and mov (bad) fyl2x (bad) insl cs xchg mov callq xchg rex.RB ds scas (bad) je cli adc fwait sub sti enterq std add (bad) jns xor imul movslq adcl negb mov and xchg (bad) mov in push fcomps jmpq mov mov adc int3 sti movsb iret scas test stos (bad) xchg (bad) js mov jmp cmpsl xchg lods cmp or mov (bad) jbe fstps sub push lahf rex.WXB faddl in je and fwait lahf test in retq (bad) insl callq icebp ss addr32 loopne es pushq sbb jge fcomi adc add lock sti xchg xor push mov sub sbb mov fwait adc pop mov (bad) cwtl rex.RX stc jl setbe rex.R setae std out (bad) loop sub jp fildl popfq rex.B rex.WX popfq or sahf (bad) mov and fcomip (bad) push fstps mov (bad) jmpq (bad) mov and cmpsb mov nop fstps lea pop rex.WXB add jle xchg popfq fstl test sahf (bad) stos sub movsb test jmpq mov jg (bad) xchg movsb mov rorb xor movabs js mov xchg (bad) iret cmp rex.RXB sbb add lea gs cmpsl test xor sbb loope sbb iret movsb ss mov xchg fimul sahf rex.WRB outsb sahf lods pushq or (bad) rex.WXB rex.R rex.WRX addr32 pushq push pushfq sahf and mov scas test adc push icebp cld mov out out cmpsl cltd rex.WRX lock js,pt fnstsw rex.R sarb repz pushq sbb jno fisubr mov test sub xor push rex.WB lods sbb sbb mov sub jne adcl rex.WX lret sbb pop jge sbb cmp rex.WB cmp jl shrb (bad) push push decb push pop outsl out sbbl test (bad) jbe (bad) (bad) cmp add pushq cmp pop vmovntps test sub (bad) (bad) cwtl sti leaveq je xor (bad) iret ja mov cmpsl out (bad) pushfw sbb mov xchg adc retq repnz rex cwtl mov pushq sarl or cmp adc rcll or xchg (bad) hlt rclb int3 sub pushq mov or std xor adc xchg jnp (bad) mov sbb (bad) jge pop in pushfq (bad) push je adcl pushq lods mov sbb insb rex.WXB ficompl xor mov movabs lock cmp out jle (bad) push rex fsubp rorl mov rex.WRX stos mov in xchg jne (bad) jbe mov jg ja lock cs (bad) (bad) test and mov xor stos pop add adc jns push push mov mov imul mov cwtl mov adc pop andl std cmp fstpt rex.XB cwtl addr32 mov xchg adc retq push (bad) in sub sbb rex.W ss (bad) (bad) mov (bad) pop rex.WX sbb fidiv mov add movsb or rex.RXB xor movabs mov scas jmpq sbb icebp jno fs jb cltd (bad) movslq pop add stos pushq xchg imul sub adc pop and insb pop test lea add (bad) sub rex.WX cltd (bad) cltd cwtl sbb out sbb lea mov pop and and repz lret imul adcb jp test rcl pop jp iret xchg (bad) stos sbb out (bad) rex.RX gs cmpsb rex.RXB cltd push movabs lret lret lret (bad) (bad) rex.WR rex sub push add jno cmp pop (bad) sbb xchg ss int3 xchg loop rorl cs (bad) (bad) rex.WXB jl iret add mov (bad) cwtl xlat imulb sbb push cld callq out fcoml stos add test lea insl jle pop clc push stos jnp lock mov flds push mov pop clc (bad) push (bad) mov cmp enterq fisttpll xchg (bad) mov mov out cmp add test mov sub or lods jne xchg cltd rex.RB (bad) (bad) fsts jmpq mov mov adc fcompl rex.WXB jmp fbld mov rex.WRB jge cld adc xchg (bad) lahf (bad) (bad) and imul movslq pushq pop (bad) repz in test xor insb test outsb sahf add pop (bad) (bad) xor adc rex.WX jnp xchg pop (bad) stos sbb adc rex.WRXB xor iret lock pop adc hlt cld (bad) jbe xor and sti test out jle push rcll jmpq pushfq cmp (bad) mov (bad) in lret (bad) push mov cltd fucomi in mov out xchg and std mov iret push mov leaveq cmp push fdivl in scas andl int (bad) cs (bad) ss popq in push movabs jo mov rex.R pop std rex.RX lods xchg fidivrl xchg adc cmp stos rolb mov rex.WRXB mov xchg adc in pushq push mov imul (bad) jrcxz retq rex mov imul (bad) or cmpsl (bad) mov or (bad) jle popfq rex.WX jb subl rex.WR rex.WB loope xchg pop outsl cmp (bad) mov (bad) pop adc rex.WXB pop mov sbb xchg cld movabs adc (bad) std xchg stos ja (bad) roll movabs scas (bad) rex.RX loope pop mov add cmp sbb and test xchg retq je or cmp repnz rex.B repz pop mov insb imull cmp testb (bad) jmpq xchg rex.WB out adc rclb mov sbb cld jbe rex.RX xor rex retq add sbb sbb cmc pushq sbb iret xchg rex.RX mov test xor add xlat imul cwtl stos or xor (bad) lret (bad) fwait insb movabs fwait jnp int3 xchg cli jmpq (bad) pushq mov icebp xlat mov sti in pushq rex.XB jp xor add insl cmp (bad) out fwait push rex.WR rorb xorb add mul outsb (bad) fcompl (bad) sarb jmpq mov movslq or mov fs mov adc retq push mov cmpsl adc cmpsb jb rex.WB repnz (bad) cmp fwait rex.RB pop push rclb mov fiadd adc insb or pushq pop fwait cli movabs (bad) std cmc sub mov shl ss xor or nop fwait cltd rex.WX add imul mov push enterq mov sahf mov movabs sub jns stos shr rex.WX fwait movsl mov stos mov hlt or add fwait xchg jo push jge stos xchg adc sub rex.B rex.WRX jnp sti fwait test push orb jbe addr32 movslq fwait mov mov lret fwait mov mov out (bad) xor lock rex.WX cs in fwait xchg (bad) or mulb leaveq cmp sbb jge xchg cmpsb out fwait cmp std pop pushfq mov push inc retq movabs rcrb or repnz (bad) js mov xchg (bad) neg pushfq mov rex.W xorl sbb (bad) loope add fwait rex.RXB mul fwait iret mov push shll (bad) add (bad) fwait stos sub rex.X jp loope fwait imul test xchg xchg sub pop or and insb hlt jl push fildl (bad) jbe mov jge rex.WRB sbb movabs (bad) pop or fcmove pop (bad) stos cs (bad) in jg lea (bad) xchg rcrl adc hlt imull (bad) adc (bad) push loope rcrb mov (bad) out test adc mov or movsb fs sub (bad) (bad) mov and rex.WRB rex.RX and push rex.WRX repz mov xchg clc (bad) and fbstp (bad) jrcxz int3 fcoml sbb mov roll fistp movsb stos xor scas insl jmp repnz rex.WRXB insb xchg add sbb sarl fs loopne xchg add (bad) mov (bad) es in stc (bad) pop int (bad) sub fildl (bad) movsb cltd push int3 adc add repnz and rex.WR fwait stc xchg pop pushq cli (bad) addb (bad) fcmovnbe add fwait cltd loop or cmp movabs mov (bad) fwait sbb and xchg (bad) or (bad) mov xlat (bad) sbb adc or sbb push orl rex.R adc fcmovnu rex.WRB mov xchg and cmp mov movabs test pop movabs cmpsb sbb or adc addr32 in sub fwait lods cltd movsl or or jl (bad) repnz xchg (bad) fwait jnp or fwait test addr32 xchg mov adc in (bad) loopne int (bad) adc fsubl and fadds (bad) fwait xchg sbb (bad) test (bad) mov cmp add push (bad) (bad) mov adc test add imul mov (bad) (bad) push rex.X out cltd sub retq jle jg movsl sub or loope ficomp pop insb movsb rex.R fwait cmp sub iret (bad) mov (bad) sahf movabs shrl sub rex.WB scas sti (bad) cmp push xchg sbb sbb pop sbb xor retq callq pop pop std or (bad) mov rex.WXB loopne stos and ja push mov fwait mov rex.WRXB fwait add orl adc mov or lods jns callq ss cwtl (bad) cld sbb push push and and fiadd sub (bad) addr32 push jb in fwait out stos rex.WB (bad) pushq clc sbb add repnz (bad) rex.XB fwait cld (bad) cmp sbb xchg cltd or mov and ja callq stos loopne es movsl ds or xchg fisttpll (bad) fwait and fidiv retq sbb xchg ss jl mov repnz pop adcb (bad) gs (bad) lods fwait jrcxz rex.R jp lock mov mov imul cmc xchg popfq jb frstpm(287 xchg movabs jnp xchg adc (bad) jl rcl pop add fnop jl add adc repnz repz pushq callq outsl pop mov andb (bad) fwait cmp es callq sub (bad) fcomip mov cli mov mov loope (bad) fwait (bad) xor jnp cltd add andl loopne mov pop loope (bad) fwait jle cmp fldenv in cltd rex.WRB rex jno rclb enterq add fwait repz rex.RXB adc or (bad) sbb cmp pushq jrcxz js mov (bad) sbb cmp push adc sar (bad) retq (bad) mov rex.WRXB fwait rex.RXB rorl xchg cld sub rex.WR rcl sbb mov cmpsl cltd fwait or movsb repz rex.WXB and (bad) jno sbb xchg divl rex.X fcompl push sbb imul fistl retq clc mov (bad) rex.WB rex.WR rex.WB rex.WRXB xchg test (bad) cwtl sbb sbb or popfq sbb jle cltd nop adc callq jnp lods fcmovnb es idiv xchg sub xchg (bad) rex.WB sbbl je out (bad) mov push (bad) or test rex.RB (bad) xchg and xor rex.X rex.WX (bad) decl rex.W or addl sub xor jns and xchg push std rcr gs sbb mov push out (bad) in cmp popfq movslq pushq sub (bad) iret xchg push out sbb ss jle (bad) adc xchg pxor push mov nop sbb rex.WR (bad) pop mov xchg rex.RB setbe enterq sbb (bad) fs pmullw subl shrl cmp out xchg jp (bad) popfq fstl mov mov (bad) sbb outsl push out (bad) pushq mov xchg mov int3 retq rex.WX loop cmp xchg sbbb xor fmul (bad) add add or loope fcompl push (bad) pushfq movsb xchg (bad) hlt pop rex.WXB leaveq xor sbb xor sbb (bad) lea shl or (bad) rex.R popfq or mov mov mov sbb scas or retq sub sahf push sahf fcompl int3 leaveq cmpsl or xor rex.W rex.RX pop xchg pop (bad) cmc fild (bad) mov fisttpl test xchg (bad) pop cmpl movabs (bad) lea push int adc scas rex.WRB adc jns (bad) (bad) movntps mov ja pushq es (bad) pop rex.WRXB mov adc in rex.WB sbb ja cmpsl cmp (bad) iret xchg (bad) push fidiv fstpl (bad) loop or (bad) jrcxz incb rcrl rex.WX push cmpb jo popfq subl pushfq test pop rex.WX cmp lods popfq cs add jmpq repz cwtl outsl sahf leaveq push out jp adc mov rex.WRB rol xchg ficoml (bad) adc xor test fst outsb (bad) movsb (bad) retq outsl repnz jne rex.W orb int or lods pop lret cmp cmp je (bad) flds fcoml jge rcrl retq xchg ss or (bad) sub std sbbb sub rex.XB int scas iret rex.RB loope cltd sbb fldcw xor or insl jle sti xchg fbstp pop (bad) sub cltd movabs mov pop fimul and sbb or pushfq cltd (bad) cmp (bad) roll push cmpsb cmpsl jmp mulb rex.WR (bad) out rex.RB xchg xor mov push (bad) (bad) (bad) (bad) test (bad) pmovmskb sbb jrcxz (bad) (bad) fldenv (bad) cmp adc movl jbe retq fildll lea jmp pop fisubrl test pop and pop jmpq repnz mov enterq xor mov fisubr pop lea jrcxz jb xchg pop cltd xor sbb (bad) cmp jmp cld xchg fmuls xchg popfq push pop movsl int3 jg rex.RX pop sbb add fndisi(8087 lods rcll fildll rex.WB testl xchg sbb cltd (bad) sbb jg in loopne mov (bad) adc xor push pop mov cmp flds fnop jno loopne pop (bad) adc pushq or mov mov rex.RXB cmpsl xorl xor rcrl lret (bad) add scas xchg xchg (bad) (bad) in pushfq xchg rex.RX sbb (bad) std jb mov cmp mov (bad) (bad) scas cs mov cwtl push and loop (bad) fist rcr (bad) and (bad) mov fsubs mov test shll leaveq shr push ja addr32 repz test (bad) (bad) out icebp repz (bad) mov mov cmp mov cmp rex.B in pushfq push enterq cs fnsave or rex.XB push mov fistpl fbld cld sub insl pop repz mov or (bad) jae (bad) pushq (bad) movslq je mov push cmp imul andl xchg std movabs neg jg mov lods sbb loop (bad) mov mov jae xor addr32 cmp add and sbb scas (bad) sbb jmpq (bad) data16 sbb movslq xchg xlat sub adc pushfq mov popfq in movabs outsl gs callq rex.RX jg sbb or sbb xchg out rex.R xchg jbe mov insl cmp rex.RX cmp xchg rex.WRX rex.WX int3 rex.WRX rex.R jge or fnstcw push cli fcomps push push rex.WRX xchg xor mov cltd mov sbb imul mov popfq (bad) fs and cmp (bad) mov movslq (bad) jnp lods je mov and hlt jg sbb out add rex.RB jmp pop mov push xchg pop fdivr (bad) cwtl pop popfq movabs (bad) add jnp sbb rex.WB rex.WRB scas rex.XB (bad) mov xchg rex.WR mov popfq fbstp jrcxz fcompl cmpsl lods cmc mov (bad) pushfq sbb mov (bad) add (bad) out (bad) out jg hlt in mov sahf pop (bad) (bad) int jmp rex addr32 test cmpl lods cmp cmp je xchg xor xor add int3 jae rex.X xchg (bad) lods data16 int movabs xlat or (bad) adc jbe je sti loop rex.WXB rex.X (bad) (bad) movsl movabs sarl lods or rex.WR push rex.RXB (bad) (bad) in jmpq rex.X sbb or fisttpl sub sbb incl xor pop rol (bad) (bad) mov ds pushfq popfq pushq fistl retq mov cmp cmc (bad) idiv cmp rex.WX push btr rex.WRX jbe push out lret movslq sub popfq xchg (bad) jns movabs fs jrcxz mov or fimul sbb popfq rex.WX push sbb (bad) lret in repz mov mov cltd xchg (bad) in nop fwait test insb int mov (bad) scas push pop rex.WB mov movabs lods (bad) mov (bad) adc xlat repnz push cmp data16 and (bad) out sbb pop sbb fmull (bad) mov sbb sub data16 mov fwait mov jne cmpsb xchg fildll rex.WX xor xlat mov push adc rex.WB insl and xor add jmp loope imul adc and mov add push cmpsb repz out fwait js xor rex fwait push (bad) add movabs (bad) mov push in rex.WB xchg mov fwait or movabs or fwait and cmpsl stc mov sbb ds (bad) (bad) xor push (bad) mov nop lcall (bad) fwait mov (bad) (bad) rex.RX out xchg (bad) std sub rex.WR rex ss es sbb mov cltd pushfq outsb insb sbb loop lods xor rex.RB insb cmovno movabs and bnd (bad) sbb shufps rex.WR jnp fisubl cld (bad) jle movabs sbb xchg pop xchg ja sbb (bad) mov fdivrl add xlat mov xor pushq xchg gs cltd push sbb xchg flds sbb cmp pop sbb mov rex.RX ja sbb mov lods out and xchg xchg (bad) pop and in mov mov rex.W rex.X in data16 insl (bad) jno (bad) xor sbb (bad) xchg (bad) mov movabs cld rex.WR (bad) lret sahf or fidivrl xchg and int cld adc sub lahf imul (bad) (bad) xor icebp sbb mov test pop push fsubs (bad) rex.WRXB rex.WRB sbb add pop cwtl (bad) in or (bad) (bad) callq mov leaveq push sbb xchg (bad) movabs loopne sub push (bad) mov push xchg lret (bad) sbb fistl rex.WR (bad) xchg sti rex mov stos (bad) out add jrcxz or (bad) cmp mov imul loope (bad) pushq (bad) fisttpll rex.WB jb test lods jmpq mov or mov sar adc lahf pop push (bad) jmpq xchg cwtl js jae scas (bad) pushq ds cmp movabs add (bad) mov out rex.W callq sbb sbb (bad) lret (bad) jl pop sbb jb adc stos pop mov add rex.XB pop (bad) (bad) cmp and and in cmpsl rex.WRX loop cmp lea rex.WRXB sbb fstpl frstor loop cmc stos fxch mov movsl popfq (bad) xlat rex.WR mov in or mov mov sbb mov adc jne movabs rex.WRB push stc jno add (bad) xchg adc rex.RB (bad) push xchg fstpt insl sbb iret ja retq sbb adc or and mov cmp and xchg xchg (bad) mov or insb in add js jp movabs out mov addr32 rex.XB (bad) fistl stos (bad) cmp in jb insb mov rex.RXB test cmp sahf pop (bad) add out mov sti sbb push cs push movabs xor (bad) sbb (bad) gs add sub (bad) xchg sbb add movabs mov mov pushq sbb rex.WR and xchg (bad) insl rex.X rex.WXB jne,pt xchg shrl movslq lods or or repz rex.XB sbb icebp lods xor (bad) mov (bad) sbb scas or pop mov (bad) (bad) bnd xlat (bad) add add insl xchg test stos insl sbb fadds repz pop fcompl rorb addr32 rex.WRX or clc pushq insl (bad) jge (bad) iret negl (bad) push popfq xor cmp imul xchg push test adc imul (bad) rex.WX andl fcmovnb imul push add scas fnstsw (bad) mov jae repnz mov addr32 (bad) cmp imul cltd cmp movabs (bad) (bad) (bad) (bad) sbb cmp fwait (bad) or cmp jns pop test stc pop (bad) xchg icebp sbb and or lret pushfq movabs sbb mov lea rex.WRB jae cli rex.RB push je mov jmpq jmp int3 mov (bad) cmpsl push retq rex.WRX ss insl in cli mov gs test sti mov jl (bad) mov mov movslq fwait rex.WR add jbe repz (bad) mov rex clc (bad) lods and (bad) (bad) sbb fcomps shrl lret sub (bad) ror pop fstpt js sbb rex.XB xchg movsb fwait xchg mov jmpq fwait (bad) rex.B jnp insb movabs and pop decb ds lret cmp pushq std add adc jnp (bad) and roll nopl hlt imul mov (bad) pushfq out rex.RX imulb fwait xchg or fcmovnu imul mov or pop fwait scas (bad) (bad) sub loope fwait in mov (bad) cmp add sub (bad) mov imul rcrb mov jbe pop jl (bad) rex fwait jb sub js imul adc lock lea jrcxz or stc push retq push (bad) (bad) xor scas jns push jge sbb sub xor pushfq imul and xchg mov (bad) js pop mov xchg cmp rex.WXB and rex.WRB loopne rorl pushfq sub adc mov (bad) icebp mov loop (bad) mov sbb mov sbb xchg ds pushfq es mov xchg mov fistl mov mov sbb (bad) cwtl roll (bad) mov movabs fistl je (bad) pushfq sub idiv loope fsubr add xchg mov pop fsubrs loop (bad) rex.RXB push add cmc jb jg leaveq movabs mov rol sbb js (bad) jg xlat pushfq fildll loope sub mov (bad) in fstp mov movabs test data16 in (bad) sbb movabs cwtl or lea pop (bad) adc and (bad) mov mov pushq movsl sbb cld loopne (bad) fwait loope cli (bad) int fwait repz fwait sub test (bad) cmp sti mov rex.WXB sbb rex lahf sbb cmp adc fnstcw xchg sarb iret pop sub callq xchg or mov ror jrcxz,pn cmp fwait insl xchg jne push test adc sti sub fwait loope fistp incb test cli (bad) out mov rex.WX je fwait rex.R adc lret lret and sub fwait xchg sti mov setae cmp rex.RXB movabs fyl2xp1 (bad) fwait repz sub mov cld push notl fwait (bad) (bad) mov sub movsl jmpq imul (bad) mov fwait hlt leaveq ficoml (bad) rex.RXB sbb (bad) callq add adc push and adc (bad) and es and adc mov xchg xchg (bad) (bad) rcrl push icebp lret pop (bad) xor xlat addr32 lret rex.RXB jbe adc rex.X mov pop ds mov addr32 add movabs and fwait rex.RB movsl lods jrcxz xchg (bad) in (bad) fwait and xchg sub fwait add out add (bad) ss pop sbb xor sbb sub fisubrl fwait (bad) out pop add rex.WB fwait sub std scas fwait pop loop cmc mov rex.WRXB (bad) cmpl fwait sbb (bad) lahf jmpq test stc stos retq sub fwait and cmp cmp stos add cmc adcl fwait (bad) xchg (bad) scas jge (bad) in adc (bad) (bad) fwait decl fwait add mov mov xor out rex.WRX adc out rex.W (bad) mov push cmp fwait int add rex.WRXB repnz or pop push mov rex.RXB (bad) sahf and cmp (bad) fwait xchg fisttp adc and or fwait lea insb js cltd stc fistpl adc (bad) rex.RX fwait movslq or rex.WB rex rex.RB jno mov insl movabs mov stos adc or fwait mov sub fwait push xchg mov pushq insl adc xchg loop jnp cmp outsl cmp imul pop lret cmp rex.RXB (bad) fwait jae lea and out sbb (bad) outsl sbb cmp lea movabs lret xor cmp loopne (bad) fwait movabs int3 (bad) in xchg pop out cmp andl rex.RXB mov (bad) roll sbb mov (bad) push push jae rex.WRXB (bad) movsb xchg add repz (bad) callq (bad) jmp sbb lret cmp fwait mov rex.WRX push in pushq and popfq mov fstpt jle sti xor movabs push mov adc movsl mov ficomp jmpq push and rex.WR xchg xchg rcl pop fstpt scas movabs jle xchg xor sbb (bad) pushq or mov repnz cmp rex.RXB roll mov fwait lahf push xor pop imul sbb mov add pushq jl fisub sub sbbl repnz push fwait cmp cmp (bad) and fwait pop (bad) (bad) in push cmp gs push int3 jp fwait (bad) js roll pop jns cmp (bad) fwait xor shl add rex.RX rcrb rex.WRX add sbb fadd rclb mov pushfq movsb (bad) (bad) subl xchg retq fwait cmpsb mov rex.WB sbb mov out repz (bad) xchg push sub jmpq insl push in adc cmp addr32 (bad) (bad) jb orl iret (bad) repnz adc rex.WXB add pop (bad) or (bad) stc mov lret stc sub sti (bad) hlt add fwait adc rex (bad) fnstsw pop (bad) pushq imul or xchg sbb (bad) and fwait sbb push jno movabs cmc lret popfq stos pop movsl je add pop sbb adc sbb pop repnz fwait unpcklps (bad) jrcxz in mov jp pop imul rex.XB cltd adc retq (bad) jae retq repnz (bad) callq jg repnz addr32 xchg xor test (bad) add rcll rex.RXB int xchg xchg adc mov cmc push fistl sti rolb and movabs (bad) repz mov cmp pop (bad) add repz fwait adc imul jge outsb movabs fs stc lods int (bad) decl (bad) sti add push cli mov fwait xchg rorb fwait (bad) jmpq hlt jg and (bad) stc rex.WXB ss (bad) out movabs pushq rex.WB or pushfq sahf rex.WX rex.XB (bad) or fwait cmp (bad) xchg push cmpsl adc hlt sub jmpq and pop outsl loope mov fwait in rorl stos out add add adc sti rex.WXB fsubs mov cwtl out loopne fwait mov fcoml cmpsl (bad) imul (bad) (bad) sbb mov pop adc (bad) xchg sbb std adc xchg mov mov pop jo rolb mov int sub jnp scas popfq fstpt in push frndint cmp and movabs gs (bad) addr32 fwait add test scas (bad) insb pop fisttpl data16 push and xchg callq ds xchg push jo add mov sti xchg xchg out insl pop jnp lret mov or repnz xor movsb jb (bad) fcomip fwait jmpq cmovnp (bad) fwait std vzeroupper movabs (bad) stc popfq rex.W fwait mov mov lock or (bad) cwtl (bad) loopne fs ds iret rex.WB pushq sbb lret sub (bad) (bad) lock mov or adc sbb insl jge cmpsl fist imul in (bad) (bad) int3 (bad) sbb outsb (bad) mov mov rex.WRXB rex.WRXB repz adc cltd test fsubrl rex.WR adc jns sbb ds sti jg mov fwait int3 and sahf xchg rex.RX fwait (bad) rex.X imul in fadds fisubr loopne xchg int sbb (bad) (bad) repnz sub mov (bad) rex.XB bswap movabs lret cmpsl imul retq jmpq fistp (bad) xor rex.B pop sbb mov jg loopne jmp cmpsl jmp gs jns pop mov mov sahf or pop sub mov repz rex.WR out push (bad) in cmp sti es xor jae pop sub adc and mov mov stc rex.X pop pushfq mov sti (bad) movslq sti out cmp pushq movsb add rex sbb cmc rex.WX mov cs mov cmpsb loopne jmpq rex.RX xchg mov sbb out sti mov xor mov in or pop (bad) (bad) movslq jne fs (bad) cmpsl jle fadds pop mov out jo pop sti (bad) or add (bad) xchg js stos (bad) or (bad) fstl loop mov imul mov mov mov rex.WXB fist cmp fwait push cs movslq sbb fwait push and (bad) fwait mov in sahf and outsl movabs stc test rcrl fldl pushfq out xchg and pushq clc cltd test cld push or fwait jns rex.RX rex.WXB mov (bad) (bad) stos rex.WRXB stc xchg xchg sbb adc ds (bad) xchg fistpl fsubl (bad) xchg clc leaveq cmpl imul repz mov rex.RX fwait cld xor rex.R addr32 add shrl sbb loop xor subl sti adc cld mov outsb stc rex.WRB fwait mov xor iret flds fwait mov xchg pop push addr32 pop (bad) cmp jmpq pop insl pop jae out jmpq test mov push push pushfq jb movabs xchg jo mov lret xchg fwait xlat rex.WB jg adc outsb sbb mov mov sti retq popfq sbb shrb jl mov popfq movsb je roll add fistpl push xchg andb (bad) xchg mov xor fisttpll jmpq xor jb data16 sbb xchg pop sbb xchg sarl orl sahf sbb (bad) add pushfq retq mov sub cld in (bad) rex.WR xchg cmp push (bad) nop xor jp xlat enterq (bad) (bad) sbb ds out lock jmpq or iret scas rex.XB shrl mov (bad) js mov mov scas xchg scas pushfq cmc stos adc sbb out and sbb in mov out mov stc fs pushq addb fdivrl rcrl gs sahf (bad) and sahf movslq push test mov out xor sahf pop fstpl loope xchg (bad) flds ds movslq mov je,pn jae (bad) hlt cmpl rex.WRXB rex fcmovnu (bad) fsubrl rex.WRX jmp mov data16 sbb sub movabs sub jnp scas (bad) rex.RXB mov movabs (bad) push mov fwait (bad) (bad) jbe rex.R add (bad) and lods (bad) insl pop or jno (bad) cmpl jnp pushq (bad) movabs fwait push stc xlat sbb rex.XB ds je out xchg fildl lea pop cmpsb and stos insl iret push mov data16 add rex.B rex.WX cmp lods sbb and fwait pop rex.WRB mov mov adcl fwait imul add rex.WRX retq sti scas loop push mov fwait mov rcr cmpsb repz (bad) mov mov callq mov cmp sub sbb movabs je push xlat pushq mov mov cmp movabs mov loop scas or data16 fwait sbb rex.RXB xlat mov fwait out es jb cmp out xchg (bad) sbb (bad) cwtl dec (bad) xor xor jl push sbb mov sbb (bad) insl fwait (bad) out flds sahf mov cmp cmp ss es xor mov (bad) sbb sbb cltd (bad) fild rex.WRX xchg mov movabs pop mov adc fwait (bad) cs insb pop push ds sti (bad) scas (bad) (bad) negl jrcxz mov inc jmp sub mov fwait (bad) sbb push fs lret and ss jbe add xor (bad) mov (bad) sar fwait test sbb add callq (bad) (bad) pop jge rex.W pop (bad) xchg outsb sbbb and sub cmp mov fwait adc (bad) dec mov fcompl xor sbb rcr leaveq xchg jbe (bad) and movabs pushq or cwtl cs pop cmp int3 (bad) add lods sbb rcll (bad) mov (bad) rex.WXB data16 sbb movsl mov mov leaveq jno scas add mov lret mov scas stos int pop fwait xchg sub (bad) or and gs cwtl fs std outsl xchg jne or sahf mov pop imul (bad) rex.RB rex.WRB mov mov nop adc (bad) lods (bad) popfq insl mov push orps cmp xchg test fwait mov outsl or jp fwait cmp and rex.WB sbb callq fwait notl sub popfq callq test (bad) movabs (bad) cmp xchg hlt jne fisttpl (bad) jle and test xchg mov and cqto xchg sbb fwait sub xchg retq adcb sbb movslq sahf movsl fwait (bad) clc (bad) adc xor (bad) sti jae jo (bad) (bad) (bad) jp lret rex.WB lods je mov rex.R fwait sbb lret mov sbb scas test fwait mov (bad) or lea adc je imul (bad) mov js xchg stc icebp mov push jns and fwait insb jp stc push (bad) sbb in pop movabs div fistl (bad) subl fneni(8087 or jmp movsl in (bad) and fistl (bad) js adc scas loop cmp and push (bad) (bad) (bad) mov shlb rex.RX ss rex.W movsl lock int3 sbb lret cwtl fsts out rex.RX and (bad) cmpl or sahf rex.WXB and outsb jno rex.WRXB popfq loopne sbb (bad) cmp rex.RXB xor sbb cmpsb mov test ss cld xchg (bad) jge mov xchg sarb cwtl lret sbb mov xchg hlt pushq xor sub add addl in cwtl adc rorb je jb mov adc movabs rex.X mov shl notl add (bad) cld push lcall retq fildl jp mov (bad) fisubr and rex.WRB rex.WX fwait insb pop loopne es roll fwait push pushq sub fcomps xor xchg rex.RX movsl add cltd sbb (bad) sbb mov fwait push hlt in jmpq mov mov pop int jb jns mov rex.WRXB repnz clc push loope fwait retq jp mov sti fwait mov mov fwait rex.RB out pushfq sub rcrb rex.WR (bad) sbb (bad) rex mov add jmp lret lret add (bad) mov pop pop fidivl (bad) movl mov adc jne out (bad) out leaveq fyl2x mov test xor ja cld (bad) sbb rclb xchg push sbb sbb fcoml rex.R fs pop xchg movabs xorl jns sub add rcr pushfq lret cltd and ja stos sub fisttpl movslq jae (bad) scas pop hlt or clc mov (bad) shl mov scas gs popfq adc xor mov je xor pop fsubrl rex.XB mov mov push lods rorb pop and xchg fwait or lock xchg jne sbb fstpt cs stc lret cltd cwtl orl pop rex jne pop jmp and mov xchg add setne sub sbb lock sti mov ja and out sbb (bad) xor mov pushfq and sbb rex.WRX (bad) mov rcll (bad) cwtl sbb (bad) lods rex.RB mov sbb (bad) lods ss (bad) (bad) xchg sub int3 mov rex (bad) sbb sbb add push cld lret (bad) (bad) add adc lods pop adc scas movabs cltd add scas rex.WX test xorb cmp (bad) imul (bad) fwait insb retq or movabs cmp rolb xchg callq es jae cmpsb iret je jb test (bad) hlt loopne nop fwait sub rex.WRB push callq outsb fadds callq add notb mov and test mov cmp add rex.WX popfq fwait pop mov fstpl repnz retq sub fildl (bad) fcmovnbe xchg mov or stos add sti add (bad) pop sub neg sbb mov cmp add loope (bad) jle retq sti mov (bad) sub xchg fwait popfq xor add jmpq sahf (bad) leaveq xchg loopne clc fwait xor rex.WB and fsubr (bad) add add jge (bad) lret rex.WB cmpsl rcrb cmp pop pop fwait rex.X movabs fcmovnbe movl mov xor stos xchg sbb adc sbbl shrl ficomp mov adc (bad) push jg sbb sti fucomip and insb sbb fstpl or xchg jb (bad) sti leaveq xlat rex.RXB (bad) sbbb loopne xor jrcxz rex.B repz mov mov fwait sub sbb (bad) fwait ror retq xchg es cmp imul sti jne lahf rex xor adc (bad) fnstsw pop (bad) shll pop adc loopne xor cld and add pushq (bad) int sbb nop ja movl ds rex.W sub pop pop sbb push push pop fs fildll movabs in movabs (bad) out lock fldenv in (bad) adc jrcxz fwait jg rcl (bad) adc push xchg jbe fwait mov (bad) fwait rex.WRXB or test adc (bad) mov fwait addr32 stc pop or and scas fimull movabs (bad) repz mov fist jbe mov (bad) or scas mov xlat jge xor (bad) out jns and loopne fwait rcrb (bad) scas fisttpll (bad) push repnz ror cmp mov (bad) sti test fwait pop rex.RXB rex (bad) or adc rex.WRX fwait sbb fisttpll xchg sub sbb rex jne sbb rex.RX rex.RXB pushfq jle push lret xchg mov add loope (bad) sti add fwait movslq pop (bad) mov sti rex.RXB add mov mov scas or mov sti fadds (bad) add adc stos cltd outsl or ds ficomp mov adc jge rex.WRB (bad) lcall rex.WRX cmp pop jge rex.R je rex.W rex.WB in outsl cmp xor fidiv rex.WXB movabs rex.WRB cmp mov mov movsb ja fwait rex.W rex.WRX sahf xchg lods adc mov rolb sbb (bad) and fistp xor cmp sti add fwait cwtl xor mov subl fwait (bad) cmpsl rex.WB rolb (bad) mov fwait outsl fnstenv add (bad) (bad) sbb xchg incl jns std testb out lret rex.RXB fwait add jl in adc (bad) mov je fcmovnu sbb jne sbb jo xchg jmp int rex.XB sbb lods (bad) retq in rex.RXB (bad) rcl xchg (bad) js (bad) cld cmp loope movslq jle sbb cmpsl test push (bad) pushq xchg adc sub or fisubl or jle mov (bad) retq std in fisubl ja fwait sbb int3 rex.WRB adc fidivr rex.B (bad) rex.B enterq lahf addr32 jne out fsubrs xor subl jo sbb rex.XB ds cltd stos in (bad) (bad) xchg sbb and xor outsb push mov fwait (bad) stos rorl fwait stos (bad) orl int std in rex.WRB pop es and and loope rex.XB fwait insb imul or add lret (bad) sarb test sti leaveq mov jg push sbb stos pop outsb pop and or (bad) and rex.XB rex.WRB fwait xchg in adc fcompl xchg xor rex.B (bad) mov movsb stos add fwait rex.R imul and (bad) jmpq in or sti int3 adc (bad) stc (bad) fildl (bad) add xor rex.RX sbb fisttp sahf lret ds (bad) icebp fwait add (bad) fwait (bad) mov rcrl and sarb (bad) or sti add pop outsl je push adc adc sbb pop (bad) jmp test push sub cmp movslq insb or data16 hlt mov (bad) rex.WRXB rcrl pop outsb xor mov mov add sahf xchg cmc cmpsb lidt fldcw stc push fwait add and fwait sbb shr xor movabs fwait push cmp sbbl xor or retq add lret jns jbe mov rex fwait stos mov movabs sbb add (bad) cmp fstpt enterq jmp add insl pop mov fwait sbb or cli repnz cmp sarl cltd (bad) repz jno adc xchg push pop jl in loop rcrl (bad) xchg (bad) fwait pushq (bad) incb jg sbb mov sbb ja jb fistpll movabs jno xchg nop retq pushq add shll adc jrcxz jmpq jp xchg stc iret jno and adc sti or and pop and rex (bad) mov retq xchg push (bad) mov rex.R mov cltd or xchg sti sbbl mov int rcll jne sub mov outsl movabs fwait (bad) fcoml sahf loopne fwait mov rex.WXB ss insb pop sbb mov xor cmp xchg cmpsl sbb (bad) ds rex.WRB rex.WX rex.RXB rex.WRX lock jo add callq cmp movsb rex.WRX rex.RXB cs (bad) fwait pop rex.WRB (bad) rcrl rex.WRX data16 rex.B rex.WX rex jmpq lods cwtl scas (bad) mov callq sbb shrl sbb add add xchg out cmp sti (bad) adc fwait cwtl jb add pop fcomip cmp sbb (bad) push jo cwtl lods add xchg jp (bad) imul movabs rex.WRX xor in and loopne push (bad) or xor ja add negb rex.WX pushfq xchg out mov loopne pop adc xchg mov (bad) (bad) (bad) rex.WRB fwait pop pop pushq or pushq adc xchg fwait orl cld rex.WRXB rolb (bad) sti sbb (bad) xlat xor (bad) nop (bad) fldl (bad) retq fwait fs (bad) test rex.WR sbb (bad) (bad) out retq xchg fwait xor cmpsb xchg (bad) and icebp rex.WB fs sar sbb sub sti (bad) loop and lods sbb (bad) stos ficomp in loop (bad) cmp adc je fistpl popfq sub fwait jns (bad) rex.WRB fwait jp rcrl lea mov sub sub fwait je adc mov (bad) fwait (bad) int pop jae fwait jmpq sub fimull (bad) (bad) jo rcrl rex.X rex.RX rex.W leaveq mov lret mov pop mov pop in mov (bad) (bad) push (bad) (bad) xchg test pop rex.WRX vpunpcklqdq and repz outsl sarb sti mov movabs shrl (bad) xor jrcxz lock (bad) sub (bad) push out ds adc test lret out pushfq sub (bad) in fwait jae mov imul lods movabs (bad) stc outsl out push (bad) xchg (bad) and mov jns adc add (bad) lock fisttpl imul cmp pop mulb pop shrl lahf clc fwait lods push (bad) mull mov adc or cwtl out enterq mov (bad) scas sbb pop sbb in fisttpl jmpq rex.XB pop orb mov lret imul fwait sbb cmp cmp roll (bad) movsb (bad) add sbb lret pop (bad) xchg sub sahf sti add (bad) xor fwait (bad) and pop rex.WX fstpl xchg xor xor cmp rcll mov sub rep (bad) insl cmc jl loopne mov pushq loop,pt (bad) sub (bad) jl (bad) push fildl (bad) adc fwait (bad) pushq xchg int hlt fwait rex.WR mov (bad) xor fwait add pushq sbb rex.WB sbb out jmp mov cmp sbb adc fwait xor (bad) loope jbe xorl fwait cwtl jg xor xchg (bad) mov add add sti leaveq fwait cmp jrcxz (bad) in cmpb rex.XB (bad) or cmp pop fistpl xlat push movabs (bad) add repz adc cltd fwait lock and mov sbb rex.WRB sbb cmp adc or insl (bad) xor data16 hlt mov pushfq repz (bad) rex.X sbb sti in mov rex.RXB leaveq (bad) stc xchg push rex.WX fwait xchg std sub push scas adc add fwait (bad) sarb pop rex fcompl vpsubsb (bad) xchg xor fisubrl (bad) rex.RXB fwait mov imulb and cld jne imul (bad) rex.WB fwait xorb lea movabs cmp (bad) adc push mov pop push mov repz (bad) sbb (bad) rex.W fwait ds jmp cmp jns push adc leaveq jo (bad) out push mov mov mov lock stos fiadd (bad) out icebp mov fwait cld xchg rex.WX (bad) fwait mul cmp mov (bad) pop mov test jl push div movabs add mov hlt (bad) rep (bad) or xchg lahf lock movabs or fsts sub jrcxz movabs jmp div rex es movabs sbb (bad) xchg pushq (bad) (bad) mov maxps loopne lahf movsl cld nop sbb xor scas pop jl sub jg imul sti loop xchg pushw sbb mov mov movslq cmp rex.WXB sti (bad) cmpsl rex.X rex.W rorb lahf test je pop xlat retq jge pop sbb je fisttpll sbb popfq mov sbb sahf rex.X (bad) lahf sub (bad) or cwtl test adc cltd lea cld in cmpsb lock and js mov jle mov mov or lods jrcxz mov sahf nop push rex.WRB (bad) (bad) cmp (bad) cmp xor xchg push jle faddl push cmp in mov imul cli (bad) (bad) (bad) popfq xor scas xchg stc out fisubr add pop movabs lods add jae sti pop sub mov adc movsb (bad) adc sub insb (bad) cmp cltd rex.WX jmpq sahf int3 (bad) sbb xor push mov and fiadd hlt mov flds xor sbb pop mov rex.WRB outsl (bad) and sub pop (bad) adc in pushq sahf mov push sbb (bad) mov push xchg (bad) lcall popfq push jmp pop bnd xchg sbb test xlat push push mov repz insb rex.XB xor cld pushq shr jo nop jo jnp insb mov adc sbb cld sub mov mov outsb push outsl xor hlt movabs (bad) mov or add fsubl add sub pop xor lret jns loopne out retq cltd mov push (bad) cld adc decb mov test faddl adc data16 mov fwait push cmp movsb fwait mov (bad) incl mov rex.RX outsb jrcxz adcl lods (bad) mov insl mov gs movabs js (bad) (bad) (bad) lea enterq (bad) rcrl addr32 xchg (bad) sbb jg test out sub pop (bad) jns mov xchg jo sub jg mov adc and roll movabs fwait imul rex.B xchg clc (bad) sub xor push mov push incb fwait and jmpq in sub (bad) pushq or out mov in fwait cs out rex.RX rex.RXB cmpsb xchg fwait mov callq scas fwait repz and add ds fwait xchg retq xor sti cmpsb cmc negb imul outsb fbld or fwait jge pop (bad) adc mov cmp (bad) pop add in mov fwait xor lret cmc xor nop ds adc pop outsl push repz fwait enterq (bad) movsl movabs adc pushfq mov out movabs sub rex pop int3 (bad) or (bad) (bad) imul xor mov repnz sbb int3 add (bad) rex.WRX mov jb out (bad) loope (bad) jp cmp mov mov imul hlt rex.RXB lea lods insb (bad) (bad) fucom sbbb fiaddl cmpsb pop outsl incl sbb jbe test xchg rex.WXB fimull adc fwait jne mov gs (bad) rex.R add (bad) sbb fsubl clc ja bnd fcmovnu sahf add (bad) (bad) jbe fwait retq test divb (bad) fwait (bad) imul rex.W movslq xchg cmp lea sbb (bad) sub movslq fwait cmc movabs lods sbb pop repnz mov pop fwait push test movslq cmp scas adcl jge mov (bad) jnp xchg mov pop loop sub xchg fwait (bad) outsb and (bad) (bad) xchg sti mov (bad) cmc cli lods fwait scas (bad) sahf or out cmp (bad) lock out or (bad) adc pop add pop mov sar mov xor xchg jp (bad) es (bad) sbb jmp mov rex.XB fildll loope repnz add rex jmp adc retq xchg and xor mov cltd rorb jbe (bad) (bad) push cltd mov (bad) xor stos clc es scas xchg (bad) fcoms sbb rex.WR callq adc lods fbstp outsl xor sbb push cmp clc jne loope mov sbb xor sub sti (bad) sbb xor sbb mov sahf sbb callq push std pop rex.W rex.WRXB pop sbb rex.WR loope int3 pushfq mov cmpsl ficom mov rex.WRX es xchg cmpq movslq out sbb xor idivb out add jns rex.WB rex.X xchg movabs (bad) jne jl xchg cmc add jle jl callq or ja (bad) imul or out pop rex.WRXB popfq add rex.B rex.WRXB shr in sbb pushq rex.WX repnz lret push sarl (bad) mov insb bnd (bad) sub (bad) mov cmp andl lahf rex.WX addr32 mov mov rorl adc sbb xor xor fistpl and pcmpeqb fwait callq (bad) xor icebp movabs (bad) pop adc add xchg rex.X fwait (bad) mov adc nop rcrl fidivrl (bad) adc ss push rex.WRB nop xchg xor fisubrl cmp rex.RX fwait mov and sbb add (bad) cmp ja sbb movsb sbb xor iret out mov fwait pushfq adc (bad) and out gs sbb iret xor jno outsl fwait out add callq fwait push mov mov lock (bad) scas fwait movsb out xor flds subl rorl (bad) xchg in pop js add sti jl rex.RB loope jg in nop jae movabs movabs jno (bad) fwait rex.WRX repnz pop repz sub test add cmp fwait shrb int (bad) pop retq out xchg jns jno mov icebp sbb test iret and gs rex.XB out fwait xor sti movabs mov fwait (bad) rex.WRB mov pop movabs jne (bad) lahf fisubrl rex.RX enterq fwait push cs (bad) movabs rex.WRB jl fwait (bad) pop rex.WRXB repz fimul jo mov fwait (bad) mov and add xchg adc pop xorb add fstps sahf xchg (bad) mov pushq addr32 adc pushq syscall fsincos mov or lock xor cmp sub push insb add xchg (bad) adc xchg (bad) sbb mov sbb es rex.RXB (bad) fnsave sbb push repnz sarl rex.WRXB (bad) fisttpll rcl pop add xchg sbb fneni(8087 imul xor rex.RXB mov xchg rex.RB pop xchg rex.X (bad) xchg movabs stc xchg fidivl push cwtl rex.RX (bad) in (bad) or mov mov xchg xor push (bad) movabs sbb (bad) (bad) fmuls shrl fiadd sbbl loopne (bad) cmp xchg add cld jmpq imul lea pop sbb shlb fstpt cmc mov pop jb jnp mov (bad) push rorb pushfq push movsl pushq rex.XB ja cld pop (bad) (bad) mov rex.B rex.WXB sbb pushfw xor andl (bad) sbb mov xlat in add xchg (bad) movabs or ds repnz fnstcw es cltd (bad) jmp loop cmp mov or leaveq sbb or pop rex.WB adcl rex.WX adc stos (bad) push fstpl sahf (bad) int3 adc (bad) jns enterq lret mov pop (bad) xchg xchg pushfq mov fiadd xor add fldt stos lcall iret (bad) xchg clc fsub out lret movabs or cs (bad) (bad) cmp out loop lret mov xor (bad) add ss xor xor sti imul lock xchg lea rex.WX rex.WXB rex.XB jmpq fcomps lret pop lret rex.RB cwtl (bad) add jo add mov pop rex.RXB cltd xchg adc andb mov xchg cmpsb xor cwtl addr32 pop (bad) cmp fwait jl adc xor jno xchg (bad) shlb mov xchg rcrl mov jrcxz repz jmpq mov stc jo out mov (bad) stos jle lock pop out (bad) xchg (bad) cwtl xchg rcl sbb (bad) adc nop stos push pop (bad) sbb jnp mov fsubr mov data16 cmpsb fsubs and rex.X or mov sbb adc jae outsb gs pop add mov xchg cmpsb scas fisttpll sbb retq xchg test (bad) or imul mov adc sbbb out ja fwait jo adc sbb ds jg out out jns fwait lret cmp lods addr32 jo mov rcr push loopne and and pop rex.WRB rex.X loope rex.RXB jge (bad) pushq jg pop mov fisttpll fs xchg fsubr mov adc cmp fbld sbb pop (bad) sbb mov ja callq fucomi push add movsb jle add (bad) sbbb mov or lcall outsb adc pop add (bad) adc sbb rex.WX movl (bad) jmp or fwait movslq adc out push mov (bad) insb and (bad) negb popfq ja add xor jb lea and mov sub decb add jmp mov callq jl add and sar push (bad) mov cmp push pop pop fwait xor and sbb addr32 push test pushq (bad) add fcomps (bad) fwait pop cmpsl (bad) jg iret insb (bad) fwait lret mov pop rex repnz test adc insl mov cmp loopne int3 sbb movsl (bad) repz mov xchg iret rex.XB hlt lods mov loop cltd push movslq sub pop out mov sbb rex.RXB mov (bad) mov push in out in cmp cli (bad) int push mov cltd (bad) adc xor sbb lea in cmp (bad) (bad) sub (bad) repnz out (bad) cmpl or rex.WRX fwait (bad) and cmp push pop popfq xchg (bad) (bad) stos fdiv out jl andl fwait std or xchg test movslq movabs out jl movsb sbb fwait or or fwait (bad) jne adc mov out (bad) fistl imul insl xor sub imul (bad) nop fldt lock (bad) push (bad) sub fwait cmp pop outsl push rex enterq cmp push adc jmpq or xor fwait pop (bad) jns push xchg rex.WR or cld cmp jl jrcxz fbld mov cmc rex.RXB fwait stos pop cmpsl mov (bad) movabs fstpt fcmove sbb and movl jmp rex.WX sub out fwait pop data16 jrcxz imul (bad) mov rex.WRB rex.R es jns sbb scas icebp (bad) jmp int pushq sbb movabs (bad) sbb repz (bad) cmc insb js loope rex.RB fwait rolb jnp rex.X sbb sub add stc and jrcxz rex.WX xchg add jp xchg repz mulb jmpq mov xlat imul cmpsb or (bad) ss retq mov (bad) sti adc fwait jb (bad) cltd mov in xchg (bad) lea or push rex.RX mov pushfq (bad) cmpsb cmpsl mov xchg xchg xor sarb movsl sbb cmp loope je clc xchg and adc jl add cmpsl xchg mov adc mov (bad) std movabs test retq clc fcmovnb (bad) fneni(8087 add fwait shll rex.XB jrcxz jge fildll loop and out lret loop jle sub callq int3 add sub xchg xor (bad) in cmp movslq cmp pop (bad) stos jmp xlat ds xchg jle xor jg sub mov stos test (bad) (bad) xchg mov mov xchg repz fcomi xchg js add jb cmp fwait icebp (bad) (bad) push mov sar (bad) mov fwait (bad) mov mov int3 out shr fwait add pop or fwait movabs enterq xchg cltd rex.RB (bad) mov xor in fwait pop lahf div je test outsl adc mov jrcxz or and (bad) xchg mov xchg (bad) ss imul adc loopne fwait and sbb (bad) sbb hlt imul xchg add mov xor (bad) mov sti jle cld and xor mov iret jmpq hlt adc in jg sbb lock sti or xchg sti leaveq repz rex.WR fwait xchg mov test mov add movabs shr or rex.WRX gs mov add jp pushq (bad) retq xor mov cmpsl or jns ss (bad) mov adc imul stos fldcw (bad) sbb gs stos cmp lahf (bad) rex.WX fwait push pop adc out xor (bad) (bad) and or fcmovne jge sbbl cld push and sub rcrl scas rex.W rex.WX movsb lods repz or cld add sub int movabs rex.R (bad) (bad) rcl rex.WXB in mov (bad) stos fwait xchg and scas cmp cmp (bad) stos pushfw rol sbb xchg nop fsubl rex fwait pop (bad) mov rex.RXB xchg sahf std mov cmp fwait movsb lock sahf sbb push pushfq mov retq jb imul andl stos push xchg fwait and leaveq sbb and adc mov test xchg xchg or stos add fwait rex.WX or repnz mov fstpt movabs iret push repz lahf mov loop in notb movabs (bad) pop callq sbbl cmp fstpt lods xchg jae sbb mov lock test sbb sbb jns je cld in ficompl xchg jge (bad) pop fcompl mov xchg sub movabs stos mov sub leaveq (bad) lret xorl add stos imul push fwait cmp xor rex mov cwtl push outsl adc stos (bad) imul test xor movabs fcomps (bad) adc imul fwait int3 adc (bad) (bad) fwait outsb mov nop (bad) cli out jl push jne mov fwait pop rex.B sbb fwait sahf stc ja (bad) movsl xor stos retq xor nop rex.X mov cld lret push mov pushq xchg mov insl xchg add enterq movsl cmp jg and jmp xor or or outsl (bad) rcrl pushq negb cwtl push fwait out or cmp sub sbb sbb xor add rcl (bad) or xchg mov scas fcompl xor scas (bad) (bad) sub fwait or add push (bad) retq adc mov jb rex.WRXB ja scas rex.XB mov add cli movsb in (bad) (bad) mov andl pop out mov sbb and xor or outsb jbe (bad) jp (bad) in mov sbb mov lods movabs test sti fwait in xor fsubr sahf adc ficoml retq jbe or and repnz (bad) in loope out and or scas push (bad) outsb es and and nop cld xor sbb rex.R fwait movabs rcrl sbb add in sbb rex.WRX rex.RX rex.RX rex.WR lods fucom add (bad) negb mov mov xor xchg and fwait sub (bad) or xor pop cmp pop sti cmp cmpsb rcrl pop sub pushq pop and pop add mov add push pop mov fs jnp lret stos jbe add cs rex.WRX fnclex lods std popfq mov (bad) xor pop imul jb pmaxsw fwait lret jmpq jmp fwait gs or es (bad) sbb test sbbl mov fwait test xchg pop add pop fwait out ljmp lret (bad) jmp mov mov ja mov hlt (bad) callq mov rex.WRX sarb mov lret or (bad) mov cltd lret jmpq pop push stos (bad) sbb rex.W sbb sbb in push shlb mov iret divl rex.RB xor adc mov (bad) sub jmpq fildl imul lret cmpsl insb sbb fidivrl (bad) outsb (bad) adc rex.RXB (bad) jae push gs (bad) fs lret jrcxz adc jmp and push xor out xchg (bad) in mov movsb mov fwait pushq popfq scas mov cmp dec xchg pushfq test (bad) mov add add int mov add or subl jrcxz loope fwait xchg retq insb cmp pop (bad) data16 xchg sbb sub fistl out movabs out lock cltd loop fist and leaveq data16 sarl sbb pop add sar int (bad) fwait fs cmpsb xor sub (bad) pop add in mov in fild (bad) jp and sarb (bad) mov rol (bad) callq sarl rex.WRXB xor mov sbb sbb notl pop xor orl ja adc fs fwait (bad) adc je jbe adc movsl outsb (bad) sti rex.XB (bad) pushq pushq jne (bad) stos or add xor or es (bad) (bad) push and in (bad) ds (bad) js popfq movslq addr32 sar in mov rex.WXB add (bad) jae shll ja mov fsubs xchg fnop rex.WRX out lock in imul xor push and cmp setne pushfq xor mov mov (bad) and movslq jrcxz push mov scas (bad) lods adc sti sbb mov (bad) out and fldt mov sub rex.WXB mov adcb pushfq int3 and (bad) jno rex.X fwait and sub mov jb rex.WRX sbb retq rex.RXB lock lods sbb int (bad) mov and rcrl sbb in mov fwait adc mov loopne roll xor out cmp and (bad) jne jp cltd xchg movabs cld cmpsl stos sbb movabs adc sti notl fidivrl rex.RXB out lret (bad) fs sahf pop mov adc lea sbb cmp sub cld (bad) mov sbb sbb movabs (bad) pushq xchg (bad) rex.WRX andl imul push xor pop rex.XB xchg fdivl sbb rex.X popfq pop or fwait cmpsl movabs pop rex.XB lods jge,pn cmp imul sbb mov adc jne xchg xchg jl (bad) or movsl rex or push (bad) pop cmp xlat lret add xor fnstcw test add or jge rex.WXB pop mov (bad) sahf push mov mov in pop cmp rorl test adc xchg xor mov mov fadds frstor push test (bad) stos add cmp shrl jbe je je addr32 pushfq fistpl cltd sbb roll sbb jle cltd (bad) stos sbb adc lret sbb out (bad) jns mov (bad) iret fcoms push mov lods (bad) (bad) (bad) outsb ja addl in ficom rex.XB xchg (bad) (bad) popfq fsubl jnp cwtl or notb sti fimul mov mov popfq and jp lods push cmpsb fisubl mov jb iret mov pop mov xor mov jb and insl stos rex.RXB out in (bad) movslq (bad) pop loope xchg mov jg jle (bad) (bad) rex.WX mov movslq mov fsubl scas (bad) (bad) lea rex.RX sub add xlat movsb cmp cltd xchg int xchg lret je mov (bad) js (bad) lret imul fmull scas pop push movabs (bad) loope mov rex.B ds fisttpll cld sahf and adc sbb div fucomi (bad) rex.WXB adc cmp pop (bad) testl adcl shl jb mov iret fildll cmp xchg sub orl or (bad) shlb jo jae (bad) out fsin cmp std (bad) rex movzwl movq idivl and fxch std push repnz cmpsl out sub mov cmc imul sti push popfq outsb int3 jae scas iret xor add mov out (bad) (bad) movabs or mov (bad) mov fild iret (bad) sbb add cmpsl ss (bad) pop xchg fimul xchg mov and stos callq fnop lods add subl and jns stc mul testb push (bad) cmpsb (bad) mov fisttp cmp mov test mov insl mov outsb mov sub sbb fistp in and hlt xor mov and rex.WB addr32 and (bad) enterq out loopne mov fistpl rex.RXB mov push and cmp js mov lahf retq out rex.RX xor (bad) gs xlat sbb pushq and mov test mov sbb mov rex push std jo sbb loop sub rcll adc rex rex.WRB adcl (bad) fwait cmp and sbbl xchg je pushq fwait adc xor int sbb rcl jl (bad) (bad) pop cld xchg js in xchg ds cmc push pushfq adc movabs stos cld loope sub in jae xor adc cmp fldt adc fwait xchg outsb sbb mov movabs xchg stos fwait mov lret pop mov (bad) cmc fwait mov pushq fstl enterq lea callq (bad) mov or rolb stos fwait addr32 push (bad) jle adc jnp out cmp fwait and (bad) (bad) xor rex.RB xorl clc lods cs in lret xchg es pop mov or xor sub in fwait icebp repnz lods fwait sahf test rorl fdivrs sbb int3 cmc fildl subb movabs push mov pop sbb fisttpl rex.B fwait nop or and movabs rcrl (bad) xor (bad) (bad) pushq (bad) fwait sub mov (bad) fwait pop movsb mov fwait mov cs imul loope movsb pop rex.WRX mov jge in ss pushq imul lret mov xchg test mov push leaveq and sub pop add (bad) cmp xchg sahf (bad) sbb mov adc push rex.B fistl sarb push nop loope cli fwait or (bad) fwait add mov push sbb or add and fbld push sbb fmuls mov lret sub cld xchg cmp and mov cmpsb mov or hlt fwait lret mov in jne (bad) xor faddl loopne fwait (bad) and sbb sbb adc leaveq jge negl mov mov cwtl rex.WXB test unpcklps jp rclb jmpq int3 not sub out stc lret sbb xor mov popfq (bad) xchg out mov lods imul pop test jbe xchg test cld sarb push mov pop sbb popfq (bad) (bad) mov xor repnz popfq es fnstcw sbb jmp (bad) mov (bad) adc jrcxz sbb pushq decb or sbb adc js and sbb imull fstpl mov add cwtl xor xor (bad) cli sbb (bad) pop (bad) rclb mov xchg lret cmppd punpckhbw push mov sete fcoms lret lods jp xlat xsaveopt (bad) xor or (bad) test rex.WRB jo sbb pop push (bad) rex.WXB pop movabs mov cmpsl out fs mov clc (bad) (bad) es movsl sub cmp mov leaveq mov or sbb push std push adc mov cmovae insb add mov adc rex.XB movabs mov (bad) out sub hlt add imul sahf cmc icebp movsl (bad) fimull sub mov retq or pop and add fild rex.X sbb cmpsl data16 leaveq xor (bad) adc cli rex.RX repz (bad) mov (bad) (bad) clc imul (bad) fcompl xchg add rex.RB data16 jbe popfq push (bad) mov cltd stos js cmpsl (bad) jmp and mov rex.WB sti rex.WRXB in rex.B (bad) rex fldenv rex.XB or adcl fisttpll loopne out rex.XB push (bad) rex.W rex rex.R (bad) out test in or or push sbb (bad) mov rex.X repz callq jb sub or test rex.X xchg fistp (bad) mov imul mov cmp leaveq ror sbb movabs rex.WRX cwtl cld std rcrb jns sub cmc mov push test (bad) (bad) (bad) xchg mov or (bad) sbb movabs cltd sbb rex.WX sbb pushfq jo sub pop movsb cmp data16 scas pop out rex.RXB pop jmpq rex.R (bad) mov pop adc ficomp sub (bad) jmp cmp addr32 xor (bad) (bad) nop rex.R rex.WRB sarb pop xor frstor sbb add mov stc fimull adc mov sbb out loop cwtl cmp ss outsl xchg or (bad) mov (bad) test mov movb insb retq (bad) xlat adc push (bad) jmp xor (bad) fstpl outsb xchg adc outsl cmp jge (bad) jmp ja (bad) jmp (bad) pushfq mov lods jmpq lock xchg (bad) sbb ficompl movsl (bad) mov popfq (bad) int3 je sub mov or scas sbb js rex.WRX (bad) jns repz popfq xchg pushw (bad) mov movabs xor push mov test cmp stos cwtl xor mov scas (bad) cld or idivl fsubr mov rex.WX mov addr32 rcr sub (bad) outsb rex.WRB fnstcw (bad) rex.XB rex.WRXB decl mov xchg cmp adc adc mov (bad) (bad) or pop sub add fcomps xor (bad) lahf cmp mov mov fild inc rex.WR sub lahf sbb (bad) pop lock sbb mov rclb lret (bad) push pop adc and jne cld cmp (bad) xor int std sub nop cmp imul movabs lcall ss rex.WRX mov sbb stos mov xor (bad) imul push fcmovnb leaveq adc movabs mov fnop rex.RX (bad) sbb sbb (bad) fucomp shrb jno and xor xlat (bad) sbb add mov (bad) popq xor sbb and add (bad) jo sbb sbb fwait (bad) add xchg fwait movabs mov movslq sti (bad) mov xchg fwait rex.WRX fwait orb jp rcrb xchg add mov ds cli pop (bad) push sbb (bad) retq lret gs sahf sarb imul in fs rex.WRXB adc rol repnz es fwait add cmp enterq adc loop in fstps sub sti (bad) addr32 mulb fwait (bad) lahf cmpsl sub (bad) cmp xchg or adcb sbb sar push cmp cmp fisttpl fwait sbb (bad) nop (bad) rex.WX (bad) mov mov jo jg (bad) enterq pushfq (bad) sahf mov or jle adc (bad) mov sub in (bad) imul (bad) and out in jno imul fwait (bad) cmp scas xor repnz jno pushfq out jno rex.RX push sbb adc or (bad) enterq loope (bad) xchg fwait (bad) push movabs sbb imul mov (bad) out out hlt jrcxz sbb xor (bad) decl bnd fs mov xchg cmp fwait imul (bad) (bad) rex.X in (bad) or cmp sar fwait je rex.WRB sbb stc int lea (bad) add jrcxz mov rex.WRXB fwait or mov es (bad) (bad) pop mov (bad) movslq ja and cwtl add cltd pushfq jbe out addr32 stc (bad) enterq fldl sbbb (bad) sti or rcll scas scas and fwait (bad) xorb (bad) sbb mov stc jge rex.WB rex.WX fwait (bad) (bad) roll add mov loope jns std jg mov fwait movsl xchg pop sub (bad) rex.WR fwait and xlat popfq sahf std and fwait (bad) stc hlt lock jo (bad) sbb xor repz add subb movslq test fidivrl negl xor xchg movabs fwait ja scas mov sbb (bad) stos or jle jmpq xor (bad) push fldt push mov (bad) jl in ds cli push jp popfq adc xor mov rex.X fwait mov scas or (bad) leaveq add mov (bad) jmp (bad) fwait movabs mov pop rex.RXB rorl loopne hlt test pop in enterq fwait rcrb (bad) movsl scas xor std lret sbb test in stos fildll xor stos or popfq sub fwait out lahf jmpq (bad) (bad) or movabs (bad) jmp push addr32 nop mov loop add (bad) pushfq scas cld rex.WXB fwait pop lods (bad) jge xorl shrl lret adc mov (bad) or fwait jae cmpsl hlt andl cltd sub sahf (bad) fwait pop lock cltd fsub add or rorl add xchg pop icebp sbb int3 fs rex.RX fs stos int3 or push xchg add sahf jmpq xchg loop cli sub adc sbb loop ror addr32 and ss (bad) adc and rex.X jne rcll push in xchg out jl (bad) xor lahf adc iret sti xlat divl rex.WB gs sahf stc scas jl xchg mov (bad) or movabs add or adc rex.WRX push cmc cwtl sbb add stc (bad) scas stos outsb retq (bad) xchg retq add xor insl adc xor int cmpsl cmpsl int fdivl iret pop pushq or add pop mov ficoml (bad) (bad) out adc out sub jne xor push mov xor sub test (bad) sbb cmp rex.B fwait int mov (bad) lods push pushq jnp jg rex.WRB adc pop ss mov (bad) push sbbb addr32 js cmc (bad) (bad) fwait add rex.WRX in mov mov cmpsb fwait xchg test pushq cld xor lods fwait stc enterq (bad) and (bad) icebp mov (bad) cmp jae lock jbe (bad) mov sub (bad) pop fwait (bad) cmc scas pop jnp fsubrp and pushfq idiv (bad) mov xchg mov imul sub andb repz fwait (bad) xor outsb stos push pop mov fmuls hlt rex.WX cmpsl shll mov lret ficomp pop push sbb pop rex.WR sub mov (bad) mov fdivrs lods cmp out fwait cltd scas repnz or mov (bad) pushq mov movl mov jrcxz fwait sbb add callq hlt mov (bad) cwtl push out sbb sbb rex.XB add test or xor jmpq sbb adc enterq int3 (bad) rex.WRXB repz mov (bad) sbb push rcll (bad) adc insl jns mov sahf (bad) int3 fist pushq leaveq repz fbld mov xor andl jae (bad) xchg shll xorl repz sti rex.RB rex.WRXB fwait push jb subl insb and sti and pushfq loop (bad) sbbl and pop fwait jmpq cmp out fwait rex.B rex.RB ss xorb cld xchg or cmp add (bad) mov mov adcl xchg fwait xor sbb hlt retq iret sti (bad) sahf scas xchg mov push out (bad) (bad) (bad) (bad) add sub mov jrcxz fwait rex.W xor rex.WX mov cmc cmp rcrl jnp fwait lods insb (bad) (bad) jo insl (bad) sbb mov repz rcrl lods pop xchg (bad) and ror adc out xchg (bad) clc (bad) pushfq fwait push (bad) (bad) pop roll in fwait in (bad) rex.X (bad) loope test stos shl fwait mov fs rex.WRX insl (bad) mov js sti (bad) mov (bad) jno xor (bad) sbb push mov mov fsubl xchg sub adc out push rex.WRXB xchg sarb push and (bad) or in lods fs movabs cmp jbe lods pslld pushfq mov mov int3 mov rcll jg (bad) in xchg push loope imul ds ss mov cmc retq sub jae,pn fmuls rcll iret insb (bad) rex.X (bad) xor notl out iret cld mov jns (bad) mov subb scas (bad) rex.WRX int fs mov pop (bad) fild or (bad) (bad) (bad) fmull cli xchg pushfq xchg mov int3 fldenv sahf ja iret and cmp (bad) jrcxz cwtl sub retq cmpsl mov pop adc jne lods xlat and (bad) rex.WRB sbb rcr mov cld stos (bad) sbb pop cmpl test (bad) sbb movabs cmpsb rex.X pop cli scas pop imul rcrb jnp int3 cmpsb mov retq cmc js std cmp mov lahf jmpq mov fwait mov (bad) cmp retq push scas mov fwait loope or pushq cs (bad) cmp movsb or movabs adc out jnp pop lret mov or (bad) incl and loopne xlat or fwait (bad) out and pop test mov (bad) (bad) cmpsb rorl out xchg mov xor fimul pop mov pop sub (bad) sbb (bad) mov mov adc add in mulb (bad) and rex.W and imul sbb xor sbb loope js or fildl and mov add popfq scas fwait xchg mov push cmp (bad) mov pop sbb movsl mov fwait movabs (bad) outsb out mov (bad) cmpsl jrcxz (bad) es fwait (bad) (bad) cmpsb and pop fwait push testb repz (bad) callq rex.WRB fistp mov rorl mov adc sub (bad) xchg (bad) and (bad) lret rex.WRXB outsb rex.WRB (bad) repz cmp fldcw fwait add xchg sahf mov and fwait adc (bad) add loope mov movabs xor std fwait pop rex.WRB stos mov and imul xor fwait cmp (bad) ficompl push jmp and stc (bad) or (bad) or pushq pop fwait movslq rex.WB xchg sbb out push mov pop and lret callq fwait movabs movsl fwait pop lahf (bad) (bad) xchg or retq (bad) (bad) lret jge adc mov faddp adc xchg jmp leaveq vcomisd imul stc push (bad) rex.RXB rex.RXB repnz cmpsl xchg jmpq test pop divb push setbe xchg sti xlat sub jle (bad) adc (bad) (bad) mov pop adc rex.RXB imul fnop (bad) jbe movabs push xchg cltd cmp popq sub sub sub cmpsl divl stc (bad) cmp lret add jno mov xchg test cld add shrb (bad) icebp (bad) xchg addl fisubrl rex.WX (bad) sub fwait retq xor scas mov ficompl sub (bad) movabs cmp stc fstps bswap (bad) pushq xlat lahf or loope scas mov xchg lea add loopne mov and fwait repnz repz out xchg fcoml mov jae cmp movabs sbb enterq hlt mov xchg rex.WX add retq fwait adc mov sbb in xor lret ja mov in outsb pop out adc gs fwait add rex.RB push xchg (bad) shl negl outsl rex.XB mov rorb rex.RX mov add movabs mov cmp retq mov pop pushq (bad) xchg (bad) test (bad) xchg and callq mov (bad) scas (bad) xchg add cld cwtl (bad) sbb pushq sbbl retq pushq sbb testb loopne out rex.X imul (bad) (bad) xchg insl retq xorl mov pushq ja mov push push mov ss push (bad) sbb insl push jno fcompl rex.RXB xchg add lret xlat hlt cli push xor fsts pushq je sbb fcoms insb int lock (bad) loope xor mov scas jmp mov (bad) insb fwait mov mov mov lods sub (bad) fwait ss outsl sbb push icebp fwait rex.B movabs (bad) mov fwait mov stos sbb sbb xor add sub rex.WRXB fwait lahf adc (bad) sub (bad) (bad) stos cmpsb shrl retq cld je xchg fwait cmp rex.XB repnz repz sub lods mov (bad) fwait sbb lods mov in sub cmp outsl fwait setle and mov jp sbb fs loope mov and fisttpll mov fwait (bad) movslq sbb cmp sbb cmpsb sahf xlat loope fidivrl push sbb rex.RXB callq pop movabs add adc fwait (bad) lock iret mov or movabs adc (bad) (bad) lahf mov scas fs insl sbb js cmp (bad) in rex.WB rcrb xor jmp mov (bad) (bad) jb rol imul sarb add fistl xor cmp rex.WRXB (bad) cmpsb maxps sti push (bad) imul pop jne enterq mov std lea cmc lods faddl (bad) mov insb fwait (bad) (bad) jne push pop (bad) sub (bad) out rex.W fwait popfq xchg repnz or jg and pop rex.WX xlat xor fwait stos xchg mov fiaddl adc rex.B fwait scas out adc ds rorb jp repnz (bad) fwait sub push xchg pop fwait push movabs push (bad) add add (bad) (bad) cmpsl movabs jge std (bad) jnp shrl (bad) rex (bad) repz loop mov push jmp imul mov adc test movsl repnz mov mov add rex.R add cli fxch sbb rex.WX rex.X rex.WRB mov fstpl sbb (bad) sbb push mov mov loop push mov lahf add sbb and (bad) rex.WRXB and ja fdivs push rex.RB pop fwait xchg mov rex.XB es outsb mov jmpq fwait cmp sbb pushq rex.B cmpsb insb cmp push (bad) sbb jrcxz movabs sub xor icebp mov repnz loopne ficom rorl sbb rex.RB xchg cwtl out mov fwait cli or and rex.WB scas lods test movsb jrcxz stc sbb out retq mov imul sub jmp (bad) rex.XB rcl out repz int fwait icebp sbb callq mov out mov (bad) movabs subb in rex.WX mov adc xor lock (bad) xlat fwait rex.B movabs pop sub and lret mov or fucomi repz add jge fwait shrb push stos jno (bad) test imul (bad) imull (bad) (bad) mov outsl adc xlat lret rcrl cltd cld sbb push cmpsb fsubrl fwait rcrl jne fwait add ja jle jbe clts (bad) repnz mov fwait (bad) es je mov xchg jo cmp sarl sti in sahf fwait mov ds cld mov fwait fs rex pop iret cmp sub (bad) addr32 and pop stos rex rex.WX (bad) add pushfq jmpq rex.W fwait pop pushq retq imul fs xor fwait add cmp retq out repnz out jle xchg test (bad) frstor jl xor shr add fwait cmpsb jbe pop and (bad) rex.X fs (bad) sub mov adc xchg or jmpq mov mov movabs sti test jb fwait (bad) mov frndint fwait mov push jne (bad) jle in mov rex.XB in cmc and fwait (bad) adc test mov lods scas out jge sti sarl xor rex.RX ss in mov stc fwait adc and xchg (bad) fs xchg and imul rex.WXB fwait adc push add jl or xchg movabs (bad) xchg sbb lret and add mov fstpl sbb nop retq movsl ja (bad) cld (bad) pushfq loope jmp push cltd (bad) lods xchg lods jge lock add push (bad) scas mov sbb cltd movabs adcb rex.X lahf jo xchg (bad) jmpq fbld cmp or push adc hlt cmpl (bad) movabs (bad) jp cltd jne add xchg and fwait rex pop (bad) sbb (bad) hlt popfq test ds movsb jge mov xlat jrcxz fwait jo fcompl or addr32 test (bad) (bad) jmpq stos (bad) xchg and (bad) sbb rex.WX repnz sub sbbl add sarl pmulhw sub sbb (bad) or mov fldt mov movsb test add lods in callq cld and or movsb frstor (bad) (bad) stos push loopne push xchg stc mov (bad) sbb mov out xchg fwait (bad) loopne xor insb (bad) adc mov fstpl fwait sti push mov int mov pop cmp mov sbb (bad) lods push jmpq pop sub js sub movabs push mov sbb sub mov cmp jmp (bad) rex.RX cmc out (bad) mov loope movslq jbe lret out mov (bad) in mov xor popfq adc out cmp lea loope (bad) mov (bad) rex.WB jae shlb push (bad) mov pushq stos rex.RX mov pushfq mov sub (bad) (bad) stc js xchg (bad) sti cli jmp xor sti or rcrb in sbb (bad) jo cmpsl push stc or ds in stos insl int3 pop js (bad) movabs mov jp outsb stos mov fs outsl (bad) push mov mov jl sbb (bad) outsb stos rcrl lret (bad) js movsl push fwait xor dec (bad) adc icebp sti adc sub cmpsb hlt jg (bad) push outsb rex.W sahf sbb xchg mov rex.WRB fwait cmpsl mov (bad) pop fwait adc cld loope sbb mov std (bad) mov fwait fwait xchg sub (bad) out movsb fwait xchg mov jle (bad) add sbb sar cmp (bad) movsl negl adc push fwait jle rex.WRB mov shl in add jae,pt sti mov cmp loope subl je mov int movabs cld data16 rex pop push sbbl (bad) or shr and cmp fwait xchg sbb jbe (bad) (bad) retq and mov fwait (bad) xor movabs in repz or out cmpsb sahf cmp and or bnd sbb out scas cltd (bad) (bad) jb lret rex.WRX (bad) (bad) insl rex.XB and addr32 fwait pop rex cld mov rex.WRX xor rex.WR movabs fisttpl ss (bad) popfq lock mov sbb lea imul pop (bad) callq enterq pop mov push jle fwait lods gs adc in rex.WR fwait push sub cmc (bad) shll (bad) (bad) outsl rex.WB cltd mov or popfq (bad) fwait and test in je mov and neg fwait or scas scas nop repz fwait ja sbb jnp sub xchg movabs test fwait mov (bad) rex.X jrcxz adc sbb fcmovnbe mov mov (bad) mov (bad) fwait rex.WR (bad) xchg push popfq jbe jrcxz fistp (bad) and movsb mov cmpsb movb (bad) sbbb adc movabs lods or add enterq rex.WRX rex.R je or sahf or ror xchg add (bad) (bad) scas out sbb adc cwtl shrb rex.WXB insb std sbb cld movabs mov (bad) (bad) (bad) sbbl js decb rclb mov shrl add (bad) push cmp pop fwait mov adc cmc sbb (bad) jmp clc rex.WRXB addr32 cs xchg xor pop sbb gs ja mov fsubl mov fwait jo in lret push sbb int3 adc pop movabs cmpsb andl mov fwait push push sbb cmpsl jl rex.RXB ds jrcxz fwait rex.B fnstsw (bad) movabs cmp shll fwait cs ds insl rex.RB fwait push vpaddw mov fdivs mov fwait in ds (bad) (bad) add cmpsb fwait testb lods popfq pushq fstpt (bad) mov testb retq sti jb (bad) push fwait gs and stc pushq sbb repz add (bad) movabs lret jbe int3 pushq mov jg fwait sbb and (bad) rex.WRXB fwait cmp mov ss stos xchg sub jg rolb push add pop lods rex.W lock stc xchg fistl jb adc jge je (bad) mov test fistp rex.XB pop (bad) cwtl sbb mov xchg fisttpl xchg (bad) jnp rex.W fwait mov xor subl add fwait out xor sbb mov movabs addr32 in outsl sti (bad) add (bad) push lods fwait pop rex.RB sbb callq out lret push (bad) fwait insl mov lea lahf cmp (bad) pushfq push mov movsb iret add pop adc xchg mov rex.X sbb mov (bad) (bad) out sbb and xlat mov pop test hlt push (bad) ss and adcl mov cmp rex.WRX sub test cmp add (bad) adc cli cmpsb (bad) add fldt movabs xor fwait lods cwtl (bad) sti lods lahf or sahf (bad) (bad) rex.WRXB out push fwait outsb ds cmp iret movabs add push fldt push mov rex.WRB rex.WB and mov sbb movsl or mov sub rex.WRB insl roll push fwait pop imul rcrl (bad) hlt mov movabs (bad) fwait xor lahf lods xor sbb shr fs rorl rex.WRXB fwait xchg retq movsb setnp pop jnp rcl cmp pushfq fwait mov loope add add sbb xchg sub xor and fwait (bad) jp fsubp xchg popfq add (bad) repnz out jb mov (bad) fildll jl cltd jns jmp (bad) movslq outsl cmp push sub cmc out jp pushfq (bad) fwait negb (bad) fwait int rex.WRB loopne jnp fwait out xchg insl xor rex.W retq or jb and adc loopne ja rex.WRXB out mov loopne sbb movabs mov jle sbb orb (bad) ficompl insl rex.WRX fwait or movslq jmpq imul jns loopne fwait push callq or popfq sbb lret mov js (bad) add mov stos xchg sbb (bad) hlt fwait xchg or rex.W (bad) and adc jp enterq sbb jb (bad) cmc add lods gs pushq fldl2t int3 pushfq jge (bad) loopne mov pushfq sbb and mov stc rex.WXB pop cmc sbb sub sti push mov sahf pop jb subl (bad) ficompl cwtl (bad) movabs mov mov stc int add (bad) fwait jmp (bad) fcmovne jae sbb (bad) cwtl jmpq add pop clc pushfq (bad) mov or jnp pop (bad) (bad) callq (bad) jns ja rcrl pop adc jge loop cltd add imul sbb je xchg or rex.WR pushq adc mov lock and xchg or in jo pop rex.WRXB fstps scas sbb adc outsb jbe cmp adc xor movabs (bad) in fwait andl testl and out jbe and jne sbb cli push lret addr32 cmc mov rclb pop sub sbbb (bad) fstpt (bad) insb sbb sahf (bad) callq fcmovnbe mov jo pop or sub ror out (bad) jns or and xor (bad) pop cmp xor or in (bad) mov fsubrs adc mov sub loop sub rex.RX cmp stos fwait (bad) loopne out lret out fstps cmpb fwait pushq sbb movsl and imul (bad) fwait add pop and sbb out rex ds rex.WB mov fwait (bad) fs rex.R rex.WRXB mov (bad) in rex.WRX rex.RB (bad) movsb cmc cmp loope mov adc cmpsb xchg repnz mov xchg (bad) sti ror xchg (bad) cmp fwait cmpsl test sbbl leaveq icebp fstpt fisttp xchg jbe push (bad) data16 push mov push sbb std or fwait lret sub jae rex.XB pop gs (bad) push out (bad) mov fwait leaveq jb mov xchg in mov scas hlt lea or xorl add in fwait pop scas rcr push jmpq mov rex.RXB push xchg loop mov pop xchg sti cld (bad) sub ds fwait lods in js test xlat cmp xor pop or movabs xchg outsl hlt sti int3 pop (bad) (bad) cli scas out push (bad) adc pushq fidivr sbb xor and jne (bad) fsubrs xor in and in (bad) loope push mov cmp lret (bad) scas mov retq movabs sbbl mov mov pop jrcxz gs scas scas cltd popfq fsin jrcxz fistl (bad) mov fmull rex.RXB imull sbb addr32 jl je negb adc jns (bad) jge fwait rex.RB jo jae xchg stos fwait sub popfq in jmpq jp cs sbb rex.WR mov jnp repnz stos push (bad) or shlb loop push ja imul xor add (bad) push jrcxz je jns sbb rex.X repz (bad) rex.WB lahf adc sbb add je fwait mov in rex.W fwait mov (bad) sti out mov sbb mov (bad) out add movabs lret mov push (bad) fwait sahf pop mov cmp mov mov (bad) fwait rex.XB mov es (bad) movsb jnp pop or and (bad) jp fwait push pushq add (bad) movslq insb pop out ror jl add lock int orl add sbb imul sarb in sbb push std pop pop rex.RXB loopne or xchg sbb ffreep or xchg rex.RX fstpl xor and rex.RX outsl movslq xchg (bad) js (bad) outsl mov jrcxz fist (bad) cltd jg jae (bad) add shll (bad) cmp in or (bad) movabs fwait push (bad) or push pop xor fwait xor movabs idivb jrcxz sbb mov (bad) mov mov mov sub xorl lret lods pop jns cmp mov pushq (bad) or sub xchg sub pop jno sahf stos rex.WRB mov mov (bad) xchg imul rex.WRB fwait (bad) ja fsubl int mov mov fcmovne and rex.B imul movsb rolb fwait pushfq mov test xchg mov out rex.RB (bad) pop jmp fwait (bad) and sub lahf scas cmp shll rex.WRB pushq sub roll fwait xor mov push out (bad) xchg iret rex.W sbb je jno and fwait loop sbb movsb fwait (bad) sub sbb (bad) (bad) nop add sbb xchg (bad) popfq ficom addr32 xchg movabs jge or subl (bad) imul (bad) in ja fwait adc cld mov test int3 fwait loopne retq (bad) addr32 lahf add jae jmp leaveq rex.WRXB js (bad) jrcxz imul mov sbb je jae and enterq adc rex.WX ficom (bad) sub (bad) xor or retq in xor sub rex.WXB mov pop and test jae callq sub (bad) (bad) fmulp push sub xor repnz (bad) rex.WX (bad) push out lods mov jp xchg scas xchg (bad) jmp cmpsl loop push cwtl and sbb (bad) ss imul fnstenv retq and and (bad) hlt jns pop pop cwtl fs int3 or movsl (bad) retq movslq adc add adcl mov xchg gs out addl jae popfq repnz fistp (bad) nopl xchg lahf loop mov rex.WRX add mov xchg callq fsubs (bad) fstpt rex.X nop movsb (bad) cmp cmp mov add xor cmp rex.WX sbb rex.XB scas add rex.RXB movabs jrcxz jmpq adcb mov sahf je movabs adc mov rex.W rex.WRB (bad) xchg fstps retq xchg (bad) or jae test ficom (bad) fldl2e (bad) fst mov sbb sub jrcxz (bad) jle xchg (bad) cmpsl imul (bad) mov pushfq jo int3 lret rcrb loopne adc rex.B repz cli (bad) sbb fcom push rex.RXB std (bad) (bad) imul sbb jne rex.WRX sbb rcrb (bad) data16 nop rolb stos cltd fisttp fwait xchg movabs or add xchg sbb sub fild adc enterq fwait add and (bad) cwtl xchg adc movslq mov (bad) fstpt fwait xchg rex.RB rex.X cmp xor (bad) movsl fwait rcll fimull repz and sti cmp cwtl rex.WRXB repz add jne (bad) rex cs mov push pop (bad) (bad) (bad) (bad) fwait loopne push adc jge add jns or mov or cs xor fwait adc mov rcrb out pushfq cli fwait in shr movabs add (bad) sbb mov pop lret movsb (bad) push push (bad) fwait or stos or scas rex.WXB loop rex.WR in (bad) fwait add outsl fs negb xlat rolb sbbl or cmpsb pop cmp sbb out sbb pmulhuw mov (bad) adcl (bad) int3 fwait rex.RB rex.WB (bad) (bad) fsubp movsb cmp mov (bad) jrcxz xor loope outsb (bad) in outsl or mov int3 (bad) fwait push (bad) test xor xor fwait pop jmpq mov movslq fwait pushq (bad) (bad) xor leaveq mov ss fwait ds mov (bad) sbb fwait xchg rex.RX mov jns pop lea sbb int3 mov out sbb xor fwait (bad) je pop leaveq jl out sbb mov jne rex.WRB rex.WXB loopne xchg lock xchg fwait cli sbb sub jne in xor icebp jrcxz callq and xor fwait xor xlat outsl outsb xchg rex.WR stos cmp adc loopne fwait and add mov cmp and jrcxz gs jno sti add jle je (bad) and sbb out add leaveq rex.RXB mov orl rol hlt (bad) (bad) rex.WRXB imul cs (bad) and or lahf mov adc add sub mov (bad) fcoml fwait (bad) mov add loop fwait mov rex.WR adc sub jmpq fucom fisttpl movabs (bad) pushq adc rex.WRB and sbb shr (bad) and jle movsl jo cs lods adc jno js xchg fistl fwait (bad) jae retw ja sbbl jns jrcxz push (bad) jbe jl rolb idivl (bad) fwait nop xor ficomp lahf or (bad) (bad) adc negb (bad) sti enterq mov sub rex.RX repz (bad) xchg in fwait rex.WXB xchg mov repnz out mov xchg sbb (bad) (bad) fistpl xchg (bad) sahf fwait sub pop rex.WR hlt add lret (bad) lret fisttpll (bad) (bad) stos mov jle fwait rex.WRX rex.WB or cli lods adc cltd movsb sti movsb imul retq push mov mov fbld pushq pop fiaddl in out push jmp (bad) je rex.RB lods or pushfq jp (bad) int jbe mov mov mov mov pushq jmp mov stc cltd divl mov sub rex rex.RX (bad) jp xor fmul sbb lret sbb (bad) or rex.B pushfq cltd fcoms fnop xchg sub cmp lahf rcrl xor popfq sbb scas (bad) fwait pop rex.WX mov (bad) in stc sahf add (bad) push outsb cmp pushq (bad) and addl (bad) jne (bad) ja stos (bad) addr32 (bad) push push (bad) fcmovnu lahf mov in sbb rex.WRB xchg fnsave pop xchg pushfq cwtl iret leaveq (bad) mov pop imul xchg ja cli sbb xchg xor popfq pop callq loop mov retq or xchg add movslq std out cmp cmpsl jge repz add lods clc (bad) data16 (bad) retq punpckldq lods jg enterq fstpt sbb sub je stos out xchg jl sbb std mov sub stos jle sub (bad) xlat out rex.RB rex.B sbb mov insb stos mov cld rcl int3 and push mov rex.W rex.WRXB lea sbb idivb fdivrl shrb clc scas rex.WB adc sbb loope stos pushfq int3 (bad) int3 cmpsb int3 sub sbb sbb push in insb test mov (bad) fwait (bad) outsl cltd stos shr fdivrs rex.WXB mov movabs mov cmp (bad) (bad) pop stos fwait pop xor incl pushfq sub mov rex.WX rex.RX ss mov (bad) xchg mov fwait mov (bad) mov cld pop jg repnz pop int3 stc jp,pn (bad) (bad) (bad) or sbb scas insb (bad) outsb in pop sbb jo pand add (bad) xchg cmpl (bad) xchg jns fdiv mov (bad) jmp and loopne out sbb int rex.WXB in roll fisubr and or rex.B jmpq fldenv cltd xor mov icebp fwait pop add rex.WB (bad) jae mov stc cmp push fdivs addl sti sbb fwait jbe sahf ss adc movslq cld loope,pt leaveq mov movabs fwait push imul and repz mov divl movabs mov xor sbb xlat (bad) rex.XB rex fneni(8087 fisubrl adc rex.WRXB (bad) sbb shlb in fnstsw (bad) test (bad) (bad) fwait (bad) callq (bad) push xchg mov jnp sbb js xchg fwait lret xlat callq cli fwait out pushfq stc int3 rex.WRB xchg and sbb sub sub rex.W (bad) sbb sub fwait sbb push (bad) jmp sbb rex.X movabs or fwait icebp lahf xor movabs lods (bad) cmp xor fwait add push sbb (bad) fmull xlat add jmpq cmpsl pop lods xor lods stc repz pop fwait cmp sbbl idivl or jrcxz xchg fwait mov ja out sub xlat mov rorb outsl push pushfq lahf mov cwtl es loopne mov imul jne jrcxz ja ficompl cmp (bad) or cmp fneni(8087 (bad) movsb xchg pop pushq jge jl fcomip add pushq sub scas sbb sub mov sbb (bad) loop (bad) pushq mov adc rorb lret (bad) cmp add xor push fwait sub sbb rex.WRB shl iret cmpsb mov int3 test mov mov std and in sub movabs or movabs jns fwait pop and or (bad) out xor mov movabs xchg fwait mov push xor loop,pt (bad) fwait jge cltd clc pushq rex.RB rex.X iret push (bad) (bad) jmp (bad) mov fwait pushq rex.WRXB sahf xchg (bad) out in cmp (bad) cwtl and mov clc popfq pushq fcmove (bad) jrcxz rex.WR pushfq movabs and shll xor and (bad) out loopne (bad) js mov fmuls mov loopne rcll or out fwait movsl jns sahf rex.WB mov sahf imul (bad) xchg rex.XB and rex.WRXB mov popfq jl imul add pushfq rex.XB (bad) mov stos fcomi push sbb (bad) mov adc jp pop fwait (bad) movslq and xor sbb mulb enterq xchg add pop xchg fwait push in bnd in (bad) (bad) sub movslq fwait lea pushq movslq rex.R es fwait divl mov mov insb cmp cmp cmpsl es sbb scas (bad) fwait cmp push in fwait cltd lahf fstpl sbb xchg fwait (bad) (bad) mov (bad) fisubrl ss xlat sub fwait movslq mov cld (bad) sub or cli (bad) adc fcomps sbb push and pop rex.RXB lock out add out xchg sti add cmpsl scas pop xchg mov add scas (bad) cmpsb mov or pop push test out or rex.WRX or js scas in test cmp mov rex.WRXB cli fwait icebp outsb rorb adc (bad) fsubp movabs rex.R lods movabs fwait test sarb movabs scas mov retq rex.WRB mov repnz idiv cmp (bad) lods clc or pop (bad) sahf mov enterq out iret es cwtl (bad) push pop fwait add and mov cli imul rex.XB fwait int3 pop scas movsl sub fistpl lahf mov fwait rex.WB fs jo repnz mov cltd pushq pop rex.XB (bad) fwait addb mov or pushfq xor push (bad) (bad) rex.W mov add (bad) (bad) rorl xor push es (bad) stc jae (bad) stos adc rex.RX rex.WRX (bad) sub sub add jrcxz rex (bad) or (bad) shll xor sub cmp xchg sahf sbb sbb cld pop (bad) movabs test data16 cs gs (bad) repnz jns out add sti cwtl mov faddp mov sbb adc sbb (bad) ss cmp (bad) ja push mov or rex.RXB (bad) rex.WRXB repz rex.R (bad) enterq stos rex.WB js cltd jmpq jg movslq or xchg adc jl mov sbbl pop push jge cmp idivl (bad) in loop jl test push add subb loop fstpl mov (bad) je jle in push test in push (bad) std sub sahf sbb sub add adc (bad) pushfq loope sub decl jb sar mov (bad) leaveq cmp (bad) mov ficompl pop add (bad) push jbe mov xor (bad) push (bad) xchg cmpsl pop (bad) xchg rex.WB test popfq mov stos lret cmpsl movabs loop jl add sbb xchg rex.WXB sbb (bad) (bad) and rex.WX pushfq retq lret movabs (bad) iret cwtl movslq pushfq roll sbbb sbb xlat mov imul jo retq loop outsb (bad) ds in (bad) fiadd jno sbb xor sbb push cmp out jg (bad) loope retq pushfq enterq (bad) pop and sub jnp cmp xor lret xlat callq sub and (bad) divl test (bad) leaveq jns outsl addr32 mov lahf fsubrs fwait rex ds repz rex.WXB psubq rex.WRX fwait cwtl rex.RXB sub sbb (bad) push sub mov retq rex.WX imul sbb xorb lret lret (bad) pushq push add push jl xor fwait xor or jne insl xchg fwait mov mov jle insb ja push xchg movabs add fwait (bad) (bad) fiaddl retq imul out lea (bad) sahf rex.WX pop jle cld push icebp rex.WR (bad) sbb fimull or rex.WX pushq stos jmp cld fistl jmp rex.RXB repnz jmpq jno scas sbb sahf mov pop movslq sahf (bad) test mov mov jg fwait pop mov and mov adc fistp out cmp fwait mov rex.WRX fwait (bad) jnp imul rex.B fwait rex.WRB jl out push add (bad) cmc std scas cmp movabs mov and jbe mull test jp cld movslq leaveq stc retq xor movabs fwait sbb movsl fisubr (bad) int pop mov (bad) (bad) fwait and mov jae adc lods push out mov fcmovu rolb sbb lahf xchg iret (bad) mov leaveq cld fwait cld mov jno loop in rex.WXB fwait (bad) xorl sbb (bad) fwait retq mov cmpsb push fwait out xchg out rex.RXB adc mov sbb jl pop iret in add sub lret movabs movabs xor test cwtl cmc mov gs jne cmpsb ffree sti retq jo shr shrl leaveq loope xchg out mov cmp jmp loopne cli sbb faddl fwait enterq fs movsl lcall jge adc cmp lret sub add pushq fwait stc jb add in movslq repnz push fwait nop cmpsb and insl out fwait mov jo addr32 stos jg adc (bad) lods callq pushq sbb and test cmp xor icebp test rex.WX movabs icebp scas push cmpb movabs cld sbb cmp xchg callq sahf sbb out mov add (bad) (bad) sbb sub in scas out fdivr pop test shlb retq xchg add mov loopne outsb and adc jns or push lret and mov add int jne push outsb push movsl adc (bad) mov lods push fidiv jnp shl xchg (bad) xor loope fnstcw in mov retq (bad) sub sbb movabs push movabs movzwl jmp sbb sbb outsb xor ror lock cmp outsl (bad) push (bad) jmpq je lea jns sub lods mov cwtl movabs xchg sbb sub pop cmp push cmpsb (bad) std (bad) (bad) movabs mov pushfq rex.WRB movsb (bad) sbb mov out (bad) adc or pop movabs adc cld jbe (bad) (bad) jae hlt sbb mov sub adc mov mov and xchg jns fsubr adc mov xor pop pop add jb sub add loop (bad) mov gs movabs sti rex.WR (bad) xlat adc xor mov out (bad) addr32 sbb cmp movsl rcr test jg (bad) rex.WRXB cmp (bad) mov loope popq mov popfq pushq adc out (bad) and fcmovnu out or fadd and and (bad) repz xchg push pushfq rclb mov scas add (bad) imul pushq (bad) push mov in cmp mov retq pop pop retq ds mov cwtl (bad) loope fadd outsb sbb rex rex.WXB (bad) pop sbb ja lea lods pop insl scas xchg mov lea cmp cmp mov mov out fucomp pop sbb (bad) cmpsb sarb and movzbl addr32 iret movabs pushfq pinsrw cwtl seto jp (bad) out loope outsl fiaddl rex.W fwait scas lods (bad) sbb rex.WRXB (bad) retq mov fwait add sub and and insl xchg xchg add jge cs xor in retq fwait mov pop (bad) sub fimul fwait movsb movsl (bad) mov jmpq lods (bad) lea or (bad) (bad) xchg add xchg and cli (bad) iret fistpl pop xchg adc cmc (bad) sbb push fwait or pop mov pop adc xchg mov dec pop out pushq pop imul mov sahf shl sbb xchg (bad) sbb jmpq test xor movslq mov add test or push pop sahf negl (bad) movsb sub (bad) or fsubrp cmp retq jae sub stos (bad) je fldt in mov (bad) scas (bad) xchg fwait push test test stc mov sbb add lea add adc pop loop xchg (bad) mov (bad) cmp (bad) mov jg cmpsl mov xor (bad) sti pushfq sbb pop rex.RXB fwait xchg shrl (bad) stos or test icebp sub stc data16 add and movabs sti out jns rex.RX ds leaveq insl (bad) and or (bad) mov sti cmpsb add and fcomps (bad) jg lret adc jrcxz mov (bad) loope in pop out (bad) mov movabs js sti or lods push fsin fwait insb enterq sbb (bad) sbb outsb gs movabs fildl fildl fwait in repnz lods (bad) lea leaveq or popfq add jb,pn and mov (bad) out cwtl jae xor fldcw es callq cmpsl in icebp adc cmp mov fistpl sub (bad) loop and cmp rex.W out fwait xchg sub in es sahf imul xchg sbb stos rex.RXB fwait (bad) movabs lret (bad) adc mov rex.W enterq xor fwait pushq setp sub sbb clc lret and pushq hlt fdivs fwait ds cmp insb cmp repz sub (bad) rex.WRB add sbb es stos loope fwait lods (bad) cmp pop ja imul rex.RB rex.WRB es mov pop out out cmp movabs sahf jnp repz test (bad) fildl or adc xchg adc js lea jl (bad) fwait push mov lods scas fwait jp rex.W and popfq jge mov sarl outsl cld jae je and fs lock add roll movabs jno sbb and (bad) fndisi(8087 cli mulb icebp adc pop je and push sub stos mov (bad) push movabs mov mov cmp adc adc test mov rex.W sbb cwtl leaveq mov cmp and fwait stc shrb pop fistpll cs jge rex.X fwait (bad) (bad) test xor (bad) rex mov (bad) jns (bad) cmc in hlt fwait cmp sub movb adc ja (bad) lea xor rex.WRXB push iret hlt fwait adc std rolb cmc xchg (bad) movabs fisttpl jb fwait callq push push push out (bad) pushq lods or (bad) push (bad) adc (bad) pushq cmp movabs (bad) xchg sub cwtl pop stos mov int retq rex.XB lock cltd cs cltd mov faddp mov and retq xor mov (bad) jno in test jae sarb rex.WX rex.WRX rex.WR sbb (bad) fwait mov fsub push (bad) xor fwait pushq jmpq adc mov lods adc fwait cmc movabs fsubl fwait sbb jl scas xor fwait mov movsb cmp icebp rex.RX jbe pop fwait mov pop (bad) jmp test mov jne fistpl bndstx outsb mov movabs fisubr adc retq (bad) jmpq pushfq roll lods loop (bad) int sub push scas fwait movsl sbb mov fsave add test xor out and fwait int3 add imul fld fwait mulb sahf push leaveq fidiv scas stos mov int3 (bad) rex.WX stos test fwait rex.WXB rex.WB or and (bad) out add mov (bad) insb sbb rex.WRB push xlat adc rex.WRX jmpw hlt icebp fwait mov xchg (bad) push (bad) lods rex.RB sbb rex.RXB add cmp cltd adc pop iret fwait outsl (bad) faddl in fistl cltd xor add sbbb sbb fcoml mov (bad) mov mov out mov test fwait add fwait rex.RXB rex.B jp fmuls (bad) (bad) rex.WB add (bad) (bad) push fwait negb add retq (bad) (bad) fwait je cmpsb callq sti or jle int3 sahf stos movabs jl fs pop std movq rex jmpq adc or pop popfq pop rorl adc (bad) scas loop cmp xchg std fidivrl fildll pushq pop fstpl (bad) fimul (bad) xchg int sub insb push sahf movabs pop sbb retq cmp in xchg test and fwait cld (bad) xor rex.RXB cmp rex.WRX jo rex.WRXB andb (bad) rex.RX (bad) cmpb out rorb test rex.RX (bad) fistpl cmp mov mov lods add iret xchg xlat cvtps2pd nop mov add adc int3 (bad) (bad) cmp mov rex.WXB rex.WB fistp adc mov mov movabs test cmc adc retq (bad) sub (bad) repz fwait sbb mov jne ljmp pushfq cmp (bad) in xchg xor adc mov mov and and retq rex.WXB add cmpsl rex.RB stos movslq (bad) cmp sbb (bad) fwait sbb mov (bad) sub (bad) add lret fistpl std xchg adc outsl pushq xor fwait (bad) pop (bad) rcrl movabs cmpsl (bad) in data16 mov scas or stos xchg fwait js sbb xor push loopne jmpq data16 icebp ss (bad) jbe push lock xchg enterq lcall int xchg sbbl and xchg xor push enterq sbb retq cld cli (bad) (bad) addr32 (bad) xchg and rex rex.W push sti adc adc sti mov jl rex.RX mov pushfq add add movslq or out in retq (bad) vshufps (bad) pop (bad) (bad) movsb in gs mov pushw sahf mov fldl push xchg fs popfq rorb (bad) cmc in push (bad) xchg (bad) jae pushfq addb rex.WR sbb sub pop rex.RX pop pop fbld pop pop rex.RXB and sub or fnstenv sub sbb cmpsl adc pop mov fsubl push sub jo push pop not sbb (bad) std scas loope cmpsl sti mov mov or or xchg (bad) fwait shrl pushfq xchg movabs rex.RB sbb icebp leaveq mov out movabs mov or rex.XB add add sbb mov data16 and fwait (bad) rex.WRX adcl xor (bad) sti rex.WXB rex.X fwait and add mov and sub out (bad) rex.X cmp mov fistpl mov push (bad) retq or and sti xchg (bad) xor add xor in add (bad) lods fwait std pop pushq and int or sti test mov fwait sbb testb rex.WRXB fwait (bad) jb loopne or adcb mov fwait ja ficom imul rex.WRXB stos mov pushfq lahf sbb pushq cld mov and retq cli (bad) (bad) (bad) sbbb sbb movabs rex.WRB add xchg pop cmpsl mov mov test mov std push and xchg push mov mov rex.W xchg sub cmp clc sbb fild imul pop insb jbe jns fdivrl xchg data16 adc je fnsave out xchg sbb loopne sbb xor int3 jns mov in cmp sub rex.RXB cs pop repz fwait mov mov fistpl mov fwait and xchg test repz pushq negl addr32 xchg and jne cmp addr32 cmp fistpl (bad) (bad) (bad) js fwait cli rex.W rex.RX ss or (bad) ficompl cqto mov fisttp decl fsubrl mov rex.WR (bad) rex.WB fwait push jge xlat (bad) xor rcrl jbe mov lea std xchg mov adc repz (bad) loopne sti mov loope fwait jb movabs xchg mov nop fsubr (bad) cmp movabs ss (bad) xchg mov ds or (bad) pop fisttp cmp in fistpl add mov sbb rcr mov movabs mov rex.W je push mov fwait lods pushfq rex.WR xor jne xor (bad) and jrcxz subl mov pushfq add sti pop lods (bad) jle negl sbb mov or (bad) cmp jno push or (bad) xchg jrcxz rclb lock (bad) test fwait outsl jp mov (bad) rex.WXB xorl insb cmp out out xchg rex.X (bad) adc (bad) (bad) fistpll outsl jmp js rex.WRB fwait cwtl jge mov scas test jl sbb cli fwait mov mov stos fbld cld cvtpi2ps rex.R (bad) xchg movslq xchg pop jg test adc sahf cltd or fdivrl (bad) (bad) (bad) (bad) xor (bad) adc (bad) (bad) je in scas jo cmp lods cmpsb xchg (bad) sub mov sbb xchg es jbe rex.WX lret sub rorl xor jg test je out jrcxz mov lret in fwait adc retq movabs mov iret mov cld pushq mov sbb callq int leaveq popfq (bad) movl pop movslq (bad) xchg popfq fldt push cltd fdivr adc fnsave movsl retq and pushfq fildl xor jmp pushq rex.WRB loop cmp rex.XB fyl2xp1 cmp adc mov loopne fisttpl sbb jl incb xchg xchg push and mov outsl sbb es sub or (bad) lss (bad) jne (bad) ror (bad) and lahf pushq cmc xor imull sbb fsubl mov (bad) hlt xchg movabs ss insl loop sbb mov push mov adc add es cmp fstps repnz mov sahf (bad) int3 jno clc xor jb mov rex.RXB lock movabs movabs rex.WRB rex.WX jrcxz xor pop jno pop out movabs (bad) (bad) (bad) incb push lret mov push cmp mov sbb (bad) and (bad) ja rex.R idivl (bad) cltd sarl repz jne fbld jnp lock jo shll add pushq mov (bad) cmp scas mov xor (bad) pop xchg fpatan sub fcomps jb add mov mov out enterq add mov rex.B insb (bad) cld sbb fldt fwait rex.R xor out or flds xchg adc rex.R imul mov (bad) jo mov pop lret sbb scas push hlt sbb movabs insl add mov ficomp stos xchg pushfq fwait imul pushq (bad) xor in rex.RXB xchg (bad) sbb cmpsb out fwait (bad) cli (bad) imul popfq outsb add mov int3 clc test xor push jns rex.WRXB (bad) out sbb and mov ds stos adc hlt sbb movabs (bad) adc push adc rex.RX xchg add cwtl fwait sub test fwait ror (bad) int sbb mov (bad) scas rex.W fwait mov (bad) pushfq gs cmp lods add push xchg and rex.WRB clc sbb mov fwait out (bad) (bad) cmp fwait outsl rex.R rex.WRXB ja fwait int out mov fwait mov pushq ds xchg fwait cmpsl movabs movsb fstpt push fadd sarl and jbe loopne je jg fstl enterq fbstp and gs mov sbb rorb fwait add push push mov orb xchg or (bad) (bad) clc adc fisubr jae movsb cmpsb loop push js rex.WXB jno mov addr32 (bad) jns mov fwait (bad) cmp js jae xchg stos out psubw rex.RXB add mov lahf or rex.WR or mov sbbb es rcll lret int (bad) fwait sub (bad) insl movabs jb sbb callq jnp jg (bad) movabs fwait cmp rex.WB rex.R fs (bad) stos outsl adc jge insl in rex.XB adc (bad) lods stos (bad) cmp (bad) pop fisttp xor scas (bad) mov (bad) stos add sub (bad) cld shlb insb int orl and sub (bad) lea insb xchg rex.RB fwait movabs jl int3 adc adc (bad) or outsl cmp fwait movabs fstl or mov lret xchg lods nop vandps cmp mov or orl jnp gs nop cmp enterq rex.WXB jns (bad) (bad) cmpsb pop fwait rex.WRX scas xchg leaveq addl (bad) int (bad) jmpq movabs xor add (bad) sti and fidivrl xchg rcrb (bad) (bad) imul rex.B movsb popq movabs adc pop push rex.RB jb clc xchg sbb stc push (bad) add (bad) sbb icebp cmpsb rex.RB ss (bad) loopne lret iret (bad) sub sbb jmpq adc je,pt stos (bad) sub mov add shll fwait jge add add (bad) sub push lock lods sti add fwait pushfq xor (bad) fidivl pushq adc cmpsl iret (bad) fwait and jl outsl fwait add mov cltd movabs adc cmp pop rolb movabs xor (bad) (bad) fwait stc outsl stos sahf jl jb and and fucomi fcmovnbe rex.RX jnp (bad) popfq scas jle movabs (bad) fisttpl cmpsl cmp mov pop xchg loope (bad) divl push pop push stos add push sub mov jno xchg pushq sbb test sbb sub push jo fisttpl or shll jp fwait (bad) nop or clc (bad) push movslq or fwait retq push fstl (bad) icebp out popfq rorl fisttpl (bad) jae fwait fs push sti cmp rsm out xchg (bad) pop sbb (bad) mov mov callq add fwait rex.WRXB icebp subl add or mov mov sbb stos in jle movsb cpuid mov push lods fwait ds (bad) push (bad) fwait not or (bad) mov (bad) and push insl pop xchg jle xor mov cmp sbb out fwait cmp std (bad) sahf sbb and mov (bad) mov or push mov lahf xchg xchg in outsl sub rex.WRXB out fwait cld (bad) lea fwait xor (bad) scas rcrb stos pop sbb (bad) xchg lods (bad) lea cwtl pop cmp push (bad) mov js push gs out fwait movabs rex.X addl divb mov pushfq out nop sbb hlt fwait or (bad) jge jmpq mov fwait cmp outsb xchg movslq (bad) (bad) in sbb rex.WR rex.RX (bad) and xor outsl (bad) retq cmp loope sbb rex.WB out mov rex.WX add stos jp (bad) and mov xchg fstpl (bad) test shll loope sub rex.RXB (bad) mov (bad) (bad) cmp test fcomps movsb add movsl pushfq jge popfq jo jno pop stos loopne cmc adc loopl imull shl xor (bad) pushq mov repnz (bad) mov mov cmp (bad) in popq (bad) loope rex.XB rex.WR pushfq add (bad) mov or ss pop rex.WX adc add addr32 rex.B cmp mov mov js pop mov sbb mov sbb hlt loop cs (bad) and fdivs nop pop mov jg mov push scas popfq jne sbb retq add retq jo loopne outsl loopne push adc retq rclb jno data16 mov imul outsl mov imulb fdivrl mov jl adc or (bad) rex.WRX mov sbb (bad) (bad) pop sbb (bad) std movb jge (bad) stos rex.WRXB sti je (bad) xor mov cli sahf scas cmp enterq (bad) sbb jle repz cltd xlat je rex cmpsb mov pushq rex.RB sbb sbb sar jle lods push sbbb in cmp xchg add pop icebp rex.WRXB mov mov jb test sbb in fwait (bad) (bad) (bad) retq (bad) movabs cld xor mov or pop adc int ss fwait push adcb sbb pop rex xor stc mov fcmovnb imul fwait mov jns repz xor rex.WRX xor xchg mov and cmpsl iret rex.WX sbb (bad) rex.RXB mov fwait sub push fistpl rex outsb sbbl scas sti pushq repz jrcxz rex.B movups (bad) mov ss jnp add cmpsl mov sub pushq mov pop lock fwait cltd sub mov (bad) fcoml mov lahf cmpq xchg in sti rex.WB fwait cli fs (bad) pop lret (bad) es cmpsl rex.RXB fwait lret clc outsl movslq or mov fwait icebp cli (bad) rex.WRXB ffreep (bad) cltd or (bad) rcr movabs push sbb (bad) xchg xchg test mov iret pushfq pop rex.WXB repz std sbb mov jno sti int rclb (bad) mov fwait sarl xchg pop callq fsubl pushq data16 test cld (bad) xchg stos push add xchg fwait (bad) sub retq movabs xchg data16 cmp sbb rex.WR shl rex.WRXB fs lea cli cmpsb mov hlt loope ror scas mov sbb cmp mov rex.R fwait sarl testb movsl add (bad) lret xchg jns sti pop fcomp adc fimul test jnp popfq rex.WXB int3 sahf sti movabs sub jne sub jl add (bad) cmp lret jb xchg popq cwtl test sbb (bad) (bad) fwait xor mov (bad) xchg hlt (bad) cmpl out xchg add movsl push js (bad) cmp cmp loope xchg add or hlt cmpsl sbb cmp retq adc jnp pushfq sbb push lods out add movabs sub pop insb jne sbb in lret int3 or xchg mov lock mov sti std (bad) fcomps (bad) jb sahf pop jbe cmc (bad) xor xchg push ja fldcw sub movabs (bad) ss jbe insl out (bad) pop jne cmp movsl xchg stos lock out icebp cmp xchg ds lock sub (bad) push (bad) sets pop push push xor (bad) push xor pop or or mov movabs retq mov (bad) in sbb repz sahf (bad) or test ds pop movsb nop repnz cli (bad) xchg or (bad) pop mov push xor std or scas (bad) std iret xchg pushq mov xchg jp loop cmp loope and ss lock sbb and out xor addb jno or sahf (bad) fisttpl jns mov mov push jg pop cmp out data16 mov (bad) insb xor xchg sbb rex.WR mov mov and lret lret push mov cs fcmovnbe mov sub mov sub movsl movabs mov xchg sbb out lret cmp leaveq and test xchg (bad) or mov push insb jns (bad) (bad) cwtl (bad) mov mov cmp bnd push sub rex.RB shll sbb and sbb pushfq (bad) adc sbb mov (bad) (bad) popq mov xor mov or test xchg (bad) mov insl xchg loope pushfq popfq cmpsb (bad) xchg ds pop mov pop cltd cmp sbb rex.X xchg popfq int3 pop pushfq loop or out rcll xchg mov lods rex.WXB popfq mov out jmp adc mov clc retq (bad) mov popfq push loope iret lods mov out movsl std fldl xor lahf jmp sbb (bad) and or out retq in xor mov (bad) adc push sbb xchg test packssdw xor jg pop repnz or pushq (bad) stos iret iret movsl add rcl (bad) pop out retq movabs es popfq divl cmp cld jmpq push mov pushfq out and push rolb insl adc mov adc mov repnz pop (bad) (bad) mov cmp fist rex xchg adc mov xor sbb std add or js mov xchg mull cld popfq xor fsin rex.X out (bad) clc vpmulhuw fistp fnsave data16 (bad) rep (bad) mov adc sbb xchg jo sti cld mov jmpq add jae or rex.WR (bad) sub (bad) jno scas out pop loope loop jge mov push pop or out out (bad) (bad) scas ficomp push in je (bad) xchg push rex.XB rcll jb push (bad) (bad) (bad) (bad) hlt (bad) test data16 movabs (bad) repz movslq and cmp sbb mov pushfq push retq cltd (bad) stos shrb pop or jno push outsl jle cld and add push cmp (bad) scas sbb sbb xchg test pop mov (bad) cwtl (bad) fstpt imul sub fmull test xorb out loopne test fwait and outsl icebp fwait adc sbb movabs repnz movslq jmp adc pop (bad) push flds (bad) sbb pushfq movabs fwait (bad) (bad) jno in (bad) es xor movabs sarb repnz fwait xor (bad) or (bad) pushfq out rex.WX (bad) fwait loop imull and insb rex jmp sub fst js in (bad) out (bad) or int jae add jnp pop jns xchg mov movabs imul ja xchg std adcl bnd mov imull inc add sti mov xchg (bad) (bad) xchg (bad) mov rol pop cld (bad) out adc repz add (bad) pop push movslq cmp insl mov in jo testb out jl mov push in movabs adc int3 cmpl fwait adc mov fwait mov xor mov rex.WRXB out (bad) add fwait mov fucomip (bad) scas jmpq retq (bad) mov fisttpl movsb outsb mov retq in mov add (bad) sbb adc mov push add fwait xchg callq xor mov jne and fwait cmc and rex.RB fwait jmp (bad) mov shrb shrl jrcxz (bad) frstpm(287 lea loope fwait mov mov ja test (bad) movabs add sbb adc orl fwait outsl and (bad) rex.RX jl callq lret incl xor lret fcmove cmp (bad) jo push sbb push mov insb and adc sbb or push jne jrcxz mov mov bsf clc fwait hlt mov (bad) pop test or xor (bad) es pushq cmpsb rex sbb mov subl cmpsl xchg loopne iret jmp sti add fwait movabs sbb mov (bad) cltd cmpsl (bad) (bad) ja setnp mov rex.WRXB fwait pop push mov mov pop callq rclb fstl add or mov mov in fwait movabs sbb jge jo sub jl callq cmp xor gs jbe movslq callq mov push out jae sahf sbb cld mov sbb jne and add pushfq and fcmovne rcrl jmp adc push ds lock adc pop mov jrcxz movabs cmpsl add andl rex.WR jb (bad) fwait mov jnp xchg (bad) mov sbb jl mov (bad) jno (bad) rex.WB ds data16 rolb mov (bad) std out add jo nop sub xchg xor (bad) mov fwait push fmul push lock mov pop addr32 enterq (bad) mov add (bad) loopne fwait mov iret jl (bad) lock lods decl fwait rolb in jmp imul xchg mov imul jmp (bad) out pop pop rsm pushq (bad) jle add jle imul jrcxz sub insb jo mov lock roll add jo int outsl rclb sub mov sbb adc out adc out cmp (bad) pop jne (bad) cmpsl retq xor sbb ficom cmp repz sahf std jne movabs popfq sub (bad) scas pop or retq (bad) rex.RB rex.XB sti mov jns es mov sub addr32 xor jmp movabs or (bad) repz mov outsb mul retq (bad) cmp pushfq cld imul (bad) add out repz xchg ds pushfq (bad) xchg fistpll sti (bad) mov out imul sbbl cmp testl rex.RB ja pushfq sbb cltd jle callq xor test lret outsl (bad) xor (bad) xchg nop pushq out mov and (bad) sbb ss fcmovnu (bad) cld callq fwait imul cmp (bad) lret xchg rorl cmp movslq xor xor add popfq cmpsl fs (bad) fwait pushq repnz stos cmp (bad) shlb loope adc xor cs or subl shl (bad) ja (bad) fwait cs xor add (bad) fwait xchg xchg mov pushq jl sti pop negb (bad) out outsl xlat (bad) imull test fwait rex.X andb (bad) (bad) mov adc adc in movabs push sbb or xchg pop adc sbb pop imulb jg subl xor pop mov stos test fwait paddusw cmp fwait sub (bad) mov push sbb mov pop (bad) and fwait (bad) int3 sbb sbb jp movabs xchg rex.XB rex jmp rex.WRXB or push repnz retq (bad) (bad) adc add mov imul fwait cmp rex.WXB rex.X sub std pop jne clc in add rex.WXB sub fbld fisttpl pop xor sbb (bad) (bad) (bad) insb and movabs sahf (bad) cmp mov lahf xchg mov (bad) mov and stos mov fbstp stos std negl (bad) xchg sbb or in xchg sub adc rex.XB pop fwait rcll pushq pushq enterq push mov ja sbb jno fildl in xchg rcrb fnstcw (bad) and rex.X push rex.W cltd mov or movabs (bad) or add sti xor mov (bad) fcmovnu fldcw add adc pop fwait pop xor adc sbb fisttpl lret cli lret mov rex.XB fwait sahf (bad) mov xor sub jo pop or mov jrcxz jge fwait xor gs pop out repnz mov (bad) sbb sbb jae (bad) fisub test fwait (bad) jle in sbb scas (bad) retq or clc pop push std movabs add imul mov fwait jrcxz int cmp rex.WRXB fwait repz stos lret cmc (bad) movabs and in imulb cmp xor rex cmpsl jne jle fistl gs and adc fwait outsb mov jns rorb movabs jae ffree subb pop jbe (bad) fwait cli jmpq mov adc fs (bad) retq cmpsl fwait push hlt pushfq ja and rex.WRB andb adc test mov add cltd lret pop add sbb mov rex.R mov (bad) (bad) push ja adc sti inc fwait rex.RXB and adc mov add lret gs xchg stos (bad) fnsave movabs rex.WXB in xchg xchg (bad) movabs cmpsb pushq fwait cmp pop (bad) mov lods add mov scas push or retq movabs cmp sub outsb adc cmpsb (bad) shlb jle lret std jo fwait push outsb (bad) mov fwait rex.RX add (bad) nop sub scas jg adcl sub sub rex.W (bad) sbb stc (bad) idiv fwait xor adc (bad) or jne fwait (bad) sbb xchg jae cmp add fwait pop push scas adc ficompl lods fwait add (bad) iret retq fwait rcrl outsb mov movabs mov sbb (bad) movsl retq movabs sbb jo sbb xchg popfq jbe sub pushfq mov imull sahf (bad) mov mov retq jne mov pop pop retq iret enterq xlat (bad) jmp ja pop rex.RB add xchg sbb push jp sub xor sbb push bt stos movsb cmpsb dec mov (bad) mov out lahf sbb rex.W xor fwait int3 (bad) jg sarb rex.RXB fwait jne push pop pushq cld xchg out add jae push adc mov xchg fwait jmp lock sbb imul fwait rex.WX (bad) fwait mov stos and sbb movabs movslq scas mov rcrb (bad) loope icebp gs xor mov jp adc (bad) hlt add mov xchg xchg fwait (bad) (bad) sahf rolb movsb or jae sti sub xchg xchg and fwait loop jbe add incl (bad) es (bad) adc cltd iret sbb cmp (bad) pushfq adc rex.WXB mov lcall or mov or cltd (bad) es jl sub mov fwait lret mov and or out mov xchg mov movsb fwait adc xor pushfq push (bad) or xor xchg movabs movsl ja rsqrtps jge int3 adc std jmpq rex.WRX or sbb and mov jg sbbl stos fdivr sbb addr32 (bad) xlat cli (bad) mov insl out (bad) and sti hlt and stos mov rex.X jl ror pop cmpsl cmpsl movabs sbb (bad) sub adc (bad) mov push sub sbb gs pushq out (bad) add jg (bad) (bad) cmc mov (bad) or and rex.W lret xlat int3 movabs std cmp std sarl (bad) jge movslq ffree rex.WRXB test (bad) (bad) iret and jmpq mov sarl lea movabs adc addr32 fs rex.XB out mov xchg xadd retq pushq loope mov sarl xlat lret (bad) out lret (bad) sbb push pop rex.W addr32 mov xchg clc add fbstp hlt rex.RXB mov mov jae and add pop rex.RB stc loop mov and ss (bad) sbb rex.WX sarl mov cwtl test jrcxz lods (bad) sahf push retq mov xchg ja and pop rex.WRX sbb repz imul (bad) notl mov cmp sbb mov fs rex.WRB xor shr sub xchg jnp sahf sub adcl add sbb fucom in (bad) fcompl (bad) adc (bad) sbb out push sub jge sbb rex.X fs jnp adc and push sbb (bad) insb rex.WR xchg add (bad) lret sbb psubd push rcrl rex.RX (bad) add rex.XB int cli push pop sub jno sub in push repz movabs rorl sbb insl (bad) setl xor (bad) test fidiv mov and xchg sbb xchg ds sbb jle (bad) cld sub pop sbb stos (bad) in add xor jnp sub in (bad) (bad) xchg fsts jns jne sbb rex.WXB or icebp xor cmpsb push lods pushq test mov out mov xor (bad) sub mov xchg and sbb cmp movslq (bad) fisttpll repnz (bad) adc push movabs stos xchg movsl mov je sbb insl lock jge imul (bad) icebp xor xchg (bad) rcrl jrcxz std mov adc loope (bad) fdivrl adc pop rex.WB xchg mov (bad) pop rex cmpsl rex.X test xchg mov nop push jmp xchg enterq add imul fmul and xor hlt clc movabs sarb jne clc rex.RX sbbb rex.RB fadd jg jl data16 mov push loope retq cs cld push idivl fisttpl mov add bswap cmp sub mov sub adc callq jo sbb outsb in (bad) imul mov loop (bad) pop rex.WB rex.R iret retq popfq rex.RX enterq sbb pop cmp (bad) incb sbb cltd lock mov xchg rex.RX jne notl xor adc rex.WR push mov decb cmp and xchg pop add jge addps xor (bad) out jl (bad) out fcomps adc (bad) fadd adc (bad) cwtl cmp or stc (bad) repz ror (bad) cmpsl sbbb xchg rex.RB (bad) movnti (bad) insb rex.WXB and jnp (bad) int3 movsl rolb or rex.WRB rex.WR callq out mov mov cs or je jne mov mov mov iret cltd test ficom leaveq rex.WB int push (bad) pushq (bad) lods jae lahf cmp jae stos (bad) jne loope cmp jbe xchg enterq cmp xor ja xor pushfq cmc (bad) xchg repnz out and fcompl out adc insl hlt cmp mov movslq shr pop adc lahf pop mov out sbb cmpsb xchg jne (bad) xchg xor iret add popfq rex.RXB repnz sahf add mov (bad) (bad) sahf (bad) xchg xchg adc jnp es xchg (bad) mov (bad) fistpll (bad) jp rex.WXB (bad) (bad) pop (bad) sbb popfq ja mov (bad) pop lahf sbb push xchg outsl mov mov callq imul sbb or xlat sbb stos xchg or fnsave (bad) ja retq jmpq sti nop cmp cmp lods mov cmp (bad) (bad) sbb cmpl out adc (bad) addr32 push sub rorl rex.WR push in sub scas pop cmp mov (bad) (bad) rex.XB mov test pop ja xchg jrcxz (bad) lret rex.R mov mov (bad) rex.WB sub pop push rolb pop (bad) out add icebp callq movabs xchg mov je cli callq sti mov mov cmpsb mov loopne rex.WX xor fcmovnu pushfq stos jae fwait enterq rex (bad) cmp rex.WRXB fwait rex.RX xchg jne rex.WRX adc adc (bad) rorl (bad) std movsb rex.XB pop rex.WRX rex.B jo add (bad) push mov mov push in cwtl rex.WR rex.RXB mov loop fwait or rex.WRX sub (bad) fwait cmp sub add rex.XB fwait cwtl add pop jno mov jo cmp subl or and (bad) data16 lock mov or subl (bad) add pop fwait movslq mov hlt adc cmpl mov ds adc sub rex.WRX (bad) notb rex.WX gs xchg test push roll fwait insl xchg add (bad) or (bad) fwait rex.RXB cmp ficompl pop gs je lock (bad) xor lods out mov add mov rex.WB fwait movabs sbb jmp in in xor retq add loop in push (bad) rex.W int3 pop nop jmpq cmc xchg (bad) fwait mov pop cltd sti mov fstpl std callq rex.WRX (bad) adc fwait or ficom stos (bad) (bad) imul adc rorl (bad) (bad) push or rex.RXB fwait (bad) mov lods imul sarl movabs adc test (bad) or xchg lret mov sbb xor add mov mov fwait sub ficompl mov fsubrs imul xchg repnz cmpsl (bad) jrcxz retq callq mov xchg adc movsb sahf lret ds stos fstpt sub fsubrs movabs ja jmp movabs mov sub lock sbb xchg (bad) mov movsb hlt popq cmc rex.WR gs (bad) xor (bad) fwait xlat xchg sbb (bad) mov retq mov pop std sub add movsl mov adc out movsb xchg movsl fwait in sub xlat js (bad) lahf rcrl rex.WRXB cmp cmp popfq mov sbb jrcxz es rex.RB (bad) (bad) (bad) (bad) mov jae adc fistpll add cmp jmp adc rex.WR fwait (bad) cmp (bad) cmp incl rex.B (bad) rex.RXB sbb lret rex.WX ficom fwait mov mov es iret loopne test sub callq xchg mov xchg or mov pushfq (bad) mov sub movabs gs jrcxz pop fwait out (bad) push sarl (bad) lret stc rex.WRB leaveq fwait repz (bad) fistpll cmpsl and imul (bad) adc push out sub fisttpl (bad) rex.WRB sub rex.WRX fwait add ss iret pop int retq add icebp movsl movabs lret rex.RX add jmp rex.WXB jrcxz cs (bad) outsl (bad) cmp mov addb rorl and sbb jb clc cld jmp jo stc xchg out mov scas imul in rex.WRXB sbb or test adc mov mov or loop sub rex.RXB insl or je (bad) rex.WXB movabs jrcxz (bad) pushfq (bad) rex.RX ss xorl retq (bad) xchg rex.X (bad) pop xorl icebp cwtl pushq movabs mov pop data16 retq fsubs fstpl in sbb lods (bad) fwait std pop or and test retq xchg fwait xchg jne xor fwait (bad) add out cld push rex.R div cmpsl jb rex.X sbb xchg enterq mov repz rex.RXB fwait movabs xchg or out mov mov mulb sti (bad) (bad) (bad) fistp in and add fsubrl mov ja (bad) cmp movsl xchg retq (bad) popfq scas add fstpl rex.W fwait sti jae subl lret hlt cmpsb rex.RB in and xor push push fwait movabs (bad) fwait lods leaveq cmc stos loop test sti add (bad) addr32 and (bad) setnp ds sbb repnz xor in sub scas fcomps cld sub sahf out (bad) sub (bad) xor (bad) repz jle shrl cli sbb push stos jg fbstp add popq or enterq mov xlat stos add pushq fwait xchg and mov adc rex.B rex.WXB push lock (bad) mov fwait push rex.R sti cmp push (bad) lret adc fwait mov test add rex.WB movslq hlt jbe sub pop and lods lret add outsl sbb out (bad) xchg mov sbb jae mov xorl sub jb xor rcrl jl (bad) mov adc fwait (bad) in or xchg or sub sub pushq (bad) (bad) add fsubs fwait and push xchg jmpq xchg cmpsl mov adc stos movabs xor (bad) rex.WX fwait xchg cli sub xchg or out icebp xor pushq rex.WRX (bad) out cmpsb push rol loope fwait out (bad) xchg or test ds rex.XB pop jp (bad) adc (bad) push rex.WX fwait or iret out adcb xor rex.WRB cmp shl stos fwait add (bad) xor adc stos int3 cmp mov test fstpl pop rex.RB sbb lahf add iret imul in (bad) mov loop test fwait push (bad) mov xor jb nop xchg (bad) imul pop test fwait rex.RX punpcklbw sbb push fwait (bad) xor rcrb lret repz ficoml (bad) (bad) (bad) sti jge pop lret (bad) fdivp mov jae adc jl,pn jp jnp cmc xor (bad) (bad) mov jle std sti loopne sbb fwait pushfq adc mov retq mov jle mov cmp (bad) mov sti rex.RX fidivr add test sbb std (bad) icebp jl or repz popfq add lret lods xor movabs sti rcll orl add sahf lock fwait and rex.RX rex.X jrcxz movslq out (bad) fwait (bad) movabs out in leaveq stos in mov rcrl cmp adc scas repnz jrcxz mov jae rex.WRX fs fwait lret neg out push shlb cmpsb repz push sbb (bad) pop pushq mov sub (bad) (bad) andl fwait pop mov lahf sbb fs sbb adc gs sar (bad) rex.WRX mov jae jle fwait pop sub cld jrcxz mov lock rex.W mov mov fucomi divb (bad) repz fwait lock test rex.RXB fwait (bad) (bad) rex.RX push rex.B xchg (bad) outsl (bad) int3 mov data16 cmp jp jmp cmp cmc js cs fwait rex.X rex.WRB (bad) (bad) fwait and (bad) and add pop fildl fadds xchg lret push jl imul stos loope scas adc add and rex.RX (bad) mov push sarb (bad) fcompl adc fwait iret mov cltd jl lock fwait and pop push fstps mov sbb (bad) jmpq cwtl fadds mov sub lock rex.RX mov rex.WRB jbe fwait movsb or rex.RXB rex.XB (bad) sbb xchg (bad) fwait adc (bad) or sahf test add (bad) rex.RB mov rcrb in fwait stc out adcl xchg push jnp rex.RB mov pop mov sub fisub fsts jg stos jne (bad) add movabs std stos jnp in pushq and stos (bad) (bad) rex.RX mov (bad) (bad) fwait hlt xchg andb push mov rex.R adc sbb loopne rex.B rex nop imul pushfq (bad) jno testl xor pushfq sbb pushq add (bad) stc mov (bad) xlat xchg pushfq mov sbb jbe lcall fcomps fisttpll lock cmp fcmovnb icebp mov rex.B jnp sar (bad) cltd pop adc cmp jmp pop jnp sbb cltd pop (bad) xor lods sub and sbb test add cwtl push or sahf out mov mov pop retq mov xlat jp add sbb (bad) fldt shl fsubl xchg repnz popfq sahf push (bad) xor adc (bad) insl and clc adc sbb xor mov imul movabs callq movslq or mov out ss stos leaveq mov hlt outsl cmp or (bad) rex.WB leaveq pushq sbb scas (bad) out enterq rex.XB lret in (bad) adc (bad) js pop sub insb cmpsb rex.B xchg (bad) add andl (bad) (bad) test sbb fdivrl jb sbb (bad) imull pushq mov shr xor push fwait or and and std fidivrl cmp jb sbb mov xchg sbb ja out out loopne in fwait rex.WXB (bad) and adc stos lods cmpsb xchg add mov stc rolb cmp js pop pop and cld loop and pop (bad) rcrb adc jrcxz sbb fcmovnu and sbbl adc sub jmpq nop std and jnp (bad) add pushfq rex.RX jb movsl rcrl sarl (bad) clc mov popfq mov sti xor (bad) cs sti mov fwait loopne (bad) rex.WX (bad) fwait sub xor (bad) fwait (bad) callq out stos jge fwait scas jnp pushq fwait pop hlt rex.RXB cmc sbbl rex.WRXB (bad) fwait jge stos adc out loope loop fwait cmp and stc jg jns xchg stos cld rex.R rex.XB mov icebp pushq xchg cli (bad) test lods fcompl or in push (bad) mov push add and pmaxub loopne mov insl rclb repz fsubl jns cld and mov shr int rcrb pop xor outsl idivb movabs rol rol (bad) pop fwait sub fnop mov int push and jb cwtl jp sbb scas rcrl sub (bad) sbb jbe movsl jge mov sbb pop outsl rex.WB fstpl loop mov and out (bad) jbe scas sbb lret (bad) outsb pop out je jle sar pop mov (bad) or repz addl xchg ffreep sub xchg rex.WRX or or or gs lock outsb insb stc stc lahf or insb and icebp xor (bad) fwait cmp callq and mov pop fstl stc sub sbb jle nop fs hlt (bad) lods push retq movsl lahf sti add cltd rex.WX rex.XB (bad) lahf mov (bad) sbb xor mov sbbb xchg (bad) add jns repz movabs stc (bad) fwait cltd (bad) push mov sbb push xchg shrb pop (bad) or orb iret jnp cmp and rex.RB or fwait add insl prefetch or pop fmul callq insb jmp mov movabs (bad) fwait sahf outsl repz or fisub fisub fwait rex.WRB cld ss adc fnop fwait cmp in adc loop cmova fwait icebp jp rex.R rex.WRXB shrl ss or push sub jne movabs pop xchg or and rex.WRX mov pop sbb fadds out mov jg nop ficomp sbb sbb in icebp pushfq cmpsb sub stos rex.R rex.RB xchg movsl lahf callq ficompl pushfq xor xchg fcmovu mov push enterq mov in fistl xrelease (bad) test xadd (bad) js (bad) movsl loopne (bad) lods cmp mov (bad) stos cltd xchg jrcxz (bad) pop mov jl pop idivb (bad) mov pop cwtl sahf rolb lret (bad) out loopne adcb xchg adc addr32 movsb fcomps mov repz push mov xchg pushfq push rcrb pop and sbb ror (bad) rex.B lock movabs xchg test mov sbb sbb data16 out lock (bad) pushfq fsts cwtl data16 sti pop mov es or xlat subl popfw (bad) xor push (bad) imul sbb imull std insl pop hlt stos scas xor (bad) xchg or rex.WXB xchg sub (bad) rex.WXB in cs rex.XB fmull cmp cmp pushq and callq add (bad) sbb (bad) mov jno jae sahf xchg xor out negb mov out (bad) rcl and sbb xlat jl (bad) sbb rex.WRXB jne (bad) lods (bad) jle jmpq mov (bad) cmp or sbb (bad) sbb lods movabs out cltd rex.WRB fwait outsb mov data16 fildll retw cmpl enterq mov (bad) or jne fstl in sbb clc xor (bad) rex.RXB in (bad) enterq jp xchg (bad) cmpsl fdivr addb (bad) jl js div rex sub mov (bad) jo rex.WRB cld (bad) xchg (bad) rex.WRX in or stc lea adc and mov cmp loope pushq test mov (bad) mov xchg jl in xchg stos cmp data16 jmpq sbb or push pushq retq cmp (bad) pop and xor (bad) rcll out add mov bnd cld fs sbb (bad) (bad) movabs in (bad) mov and (bad) (bad) je repz mov push and rex.RXB push push cld rex.WRX (bad) outsl pop nop cli push xor xchg xchg sahf fadds rex.WXB in cmp xchg cmc add rex.W rex.RX cmp data16 (bad) cltd push cwtl (bad) cltd xchg repnz movsb cmp (bad) mov (bad) and mov pushq (bad) insl (bad) imul xor shll (bad) int rex.R pushfq fistpl gs pushfq jae scas jb adc movsl xchg gs (bad) (bad) lea (bad) scas (bad) sbb cmp and mov repz in rex.X rex.B rex.WRB jrcxz rcr fwait ljmp or (bad) rex.XB mov retq add xchg add lea es lea xchg fldenv in jbe ja (bad) sbb mov pop jae adc (bad) lods (bad) (bad) pop sbb scas (bad) sub sbb fimul fs push sbb cmpsb (bad) out fwait pop xorl out scas (bad) xor test imul addr32 jle (bad) stos xchg mov repz mov ffree (bad) pop sti imul mov mov lea lahf xchg fwait (bad) jg lods cli sub insl push cmp add fwait int3 jge jl (bad) (bad) scas loop mov mov (bad) pushfq mov es mov fwait xchg lahf stos rex.RX pushq push (bad) scas outsb and fwait cmp xchg out out sub (bad) loopne sti xchg pop outsb (bad) gs or (bad) jg scas mov lods andl add (bad) insl sbbl in fwait mov movsl repnz fwait or movabs rcl ja cmpsl xor in test rol outsb sub movabs add push (bad) out callq ljmp fwait test jns imul mov rex.WB repz iret pop adc mov (bad) lahf xor (bad) rex.WRXB rex.WRXB rex.RB xchg lret and rex.RX fwait clc lods in (bad) std sub or fidivl or sbb fstpt test fwait sahf movl (bad) cmp popfq movabs (bad) mov fwait xor subl rex fwait addr32 (bad) xchg (bad) jae pop shrl sarb lods sbb rex.RX (bad) iret lret adc loope jp xchg movabs cmc adc out (bad) jrcxz pop mov lea sarb pop leaveq callq (bad) cmp pop shr xor std movsb mov ja cwtl addr32 (bad) movsl imul js pushq mov jrcxz (bad) cmp popfq pop stos mov sbb mov lea or jp fwait ds clc out retq rex.WRX ja push js sub loop adc out mov xor mov jge popfq cld mov retq jae mov lret add cmp push sbb and movslq rex.WB ja add test lods xchg (bad) test lods movabs sahf rex sbb (bad) shr xor shl (bad) loop stos cmp fwait cltd xchg (bad) repnz insb add cmc movb and cmp fildl or mov mov (bad) movabs xchg rex.WR add sbb stos sbb test xchg fs (bad) jmp push mov loope fwait out jb jno fnsave movabs test add in rex.B rex.WR push pop adc pop stc test or stos ss enterq mov jl push movslq mov test sub push sub repz fwait sarl shrb iret sahf mov (bad) movabs (bad) popfq adc rex.WXB jmpw sbb (bad) xor push (bad) xchg outsb (bad) jp (bad) rex.WRB rex.RB cs rorb cwtl add push (bad) and fwait es mov push rex.R jmp (bad) cmp xchg or add loope rex fwait sbb pop gs stos pop in sbb jp fwait (bad) (bad) cmp pushq movabs (bad) rex.WRB fs sbb fucomi leaveq ficompl hlt xlat mov xchg (bad) (bad) cmp rcrb mov test rex.X rep fwait xchg sub (bad) in movabs (bad) enterq fwait hlt push loopne add cmp (bad) mov movsl test repz mov push (bad) and sbb negb cmpl fwait pop mov pop xchg xchg sahf adc mov rex.WB or jbe (bad) int3 cld lahf iret (bad) add or iret jrcxz sahf mov (bad) fwait int or rex.RXB xchg xor (bad) jmpq (bad) insl sti add rex.WB (bad) fwait xor shrb notb lods (bad) cmp jge lock adc fstpt (bad) and jns rex.RX xchg mov neg (bad) (bad) rex.RX sbb lahf cmp rex.WB fwait cmc idivb mov rex.RX xor jae adc and xor mov fadds sbb or push (bad) js std enterq in lea insl std or fimul cmp sets movslq in mov ds mov adc xchg pop sub cltd nop retq fdivrs adc and rorl mov stos sub (bad) xchg out add fwait in ja rex.RXB (bad) mov addl ffreep cmp cmp rex.WRXB adc and cs fwait data16 xor push (bad) fwait stos mul (bad) out mov sbb movabs movsb (bad) andl mov jbe adc rex.WR mov add pop in in xor test cmc rcrb mov pushfq stc pop mov movslq lea (bad) fwait movabs jp movsb jmp or pushq cmpsb cmc and adc mov fwait pop in stos xchg mov outsb int3 fwait movsb rex.WRB or mov fwait pop lret mov mov (bad) adc pop insl movsb cmp xor (bad) jae push insb ds mov iret pushfq mov lods pushfq retq sti rex.R lods sub mov (bad) andl or (bad) sbb (bad) sti loopne jnp xchg out sbb (bad) mov (bad) sbbl xchg (bad) add (bad) cmp outsl in outsl in faddl fidivr adc (bad) jle movabs and test lahf loopne,pn lret jns cwtl rex.WRB xchg test mov xchg sahf cmp lods or jae in jp sbb ss in orl sbb js stos xlat and sbb xorl (bad) cmp sbb cmp or icebp gs fstps cmp test (bad) scas std xchg (bad) rex rex.WRB xchg or rex.WRXB mov fisttpl (bad) loop and es mov rex.WRB mov (bad) imul jmp (bad) mov sub mov lahf sub jrcxz (bad) rex.WXB leaveq ror push cmpsl movabs out (bad) stos pop mov es pop orb mov (bad) test and fwait (bad) leaveq (bad) fpatan jne data16 sti sbb pop xchg fwait scas (bad) sub xlat fwait outsl jmp std push loop negb mov sbb (bad) xchg (bad) fwait sub ds scas mov jae in movabs (bad) push fisttpl and (bad) fld imul (bad) rex.WXB (bad) out pop pop jae or cld enterq fstpl in jbe cmp sbb sti pop rex.WRB stc rex.R sti jbe adc jns fldcw movsb or mov push or fwait movb (bad) xchg pushq sbb push loope (bad) rol jno pop (bad) mov sbb jo rex.WB fist retq (bad) fwait lahf ja rcl add in data16 popfq imul mov mov lods mov mov sahf jmp cmp (bad) sbb jo mov jns cltd movabs (bad) pop (bad) sbb (bad) sbb movsl adc or fwait push sub xchg or add movabs es outsb fcomi pushfq enterq cmpsl sbb jns sbb sbb sbb xlat icebp (bad) or xchg loopne jmpq jg add out jle push pushfq mov and hlt add jb add mov loope jns rcrl mov jo sub (bad) in mov lock pop in fwait sub adcl scas (bad) rex.WXB mov jns mov pop imul cmp cmpb xchg movabs cld js rex.WRXB imul lea push addr32 pushq sbb (bad) rex.WRX xchg sbb (bad) popfq data16 rclb mov xlat rex.WRXB pushq cltd sbb test sbb pop lods or cmp int jg sbb (bad) test sub movabs (bad) (bad) iret mov rex.RB adc sub repnz jne fwait and addb out xchg push es cmpsb xchg cld pop jno pushq cld mov and cmp cli xlat jns pushq pop (bad) and shl xchg xchg lods loope fiaddl icebp sarl jnp sub cmp es repnz faddl movabs int xchg jrcxz and add mov add (bad) rex.RXB xchg xor xchg pushq mov addr32 xlat push movsl push movabs sbb scas (bad) push fsubr (bad) xchg pushfq (bad) sbb movabs adcb in out or (bad) (bad) fbstp mov sahf pop (bad) jmp (bad) pop outsl pushq (bad) xchg movsl rex.RXB pop and xchg sbb rex.WX mov rex.WX cmp push adc sbb movd rex.WRX cwtl push pop rex.WRXB xor jle (bad) movabs push outsb sub push (bad) mov adc jo or mov adc fbstp lea cmp adc sbb xchg fisub fnstsw cmp (bad) ss (bad) push test mulb sbb pop (bad) clc imul mov (bad) (bad) sbb sti mov xor or mov (bad) adc jb fcomps mov retq mov (bad) jp or lahf (bad) lret mov popfq int3 mov in out cmp hlt out ss sub imul (bad) lock pop (bad) not mov sub lods sbb cmp (bad) (bad) lods pop (bad) je xchg fimul xchg mov (bad) or popfq stc stc fstl (bad) mov add frstor cwtl cmp popfq cmp je pop movslq (bad) lcall rex.RXB pop fst (bad) push (bad) mov xor or add rex.WRB movslq sbb add (bad) sarl pop pop fcoms out (bad) jno repz movabs fimul (bad) mov (bad) (bad) pop (bad) data16 movslq push jo (bad) fisttp fs insb xchg (bad) pop (bad) sbb es (bad) ja in clc rex.RB (bad) rcll retq icebp mov (bad) idivl add in std loope fwait sbb test rex.RXB cmp mov pushfq fildl pushfq rex.RX cltd retq mov push int3 rex.WB std js (bad) (bad) cwtl mov mov xchg js mov and (bad) mov negb fldt lock mov shl lahf pop out adc fbld push pop and fwait (bad) (bad) rex.WXB and or lret in movabs cmpsb cmp (bad) mov (bad) insl in jae hlt insb stos hlt mov and xchg mov push (bad) add es or cmpsb add pop jmp icebp xchg fwait xchg (bad) sbb imul fwait or sub fwait cs (bad) jge and fmul (bad) pop mov addr32 rex.WXB add jp leaveq rorb sbb in mov fwait jno subb insb leaveq fwait cld es mov rex.XB rolb sbb cmp sub mov (bad) js push fwait push clc in mov fwait push cmc mov and rex.WXB fwait movabs iret rolb enterq test add fwait and rex.RX xchg mul (bad) rex.XB sub pop sbb pushq mov negl (bad) rex out test jns xchg (bad) mov mov mov (bad) jge cmp sub push add in in loop xchg or jnp cmp (bad) (bad) jecxz mov push xlat rex.WB push xchg ss sub xchg fsub sub cltd lea xor callq or rcrb (bad) loope cmp cmp fstps xchg int cmpl sahf (bad) sbb rex.XB adc or cmpsb rex.WRX pop rex.WRXB sbb loop (bad) jle pop in (bad) movslq fisttp rcr (bad) lods pushq (bad) (bad) pop cltd rex.WRX movslq rex out adc sbb lods loope ljmp pop data16 rex.WRB test clc pop adc rolb mov xchg sbbl mov lods (bad) icebp mov pushfq (bad) outsl sbb cmpsb cli cmp xchg fcmovnb movabs cwtl (bad) (bad) xchg retq and movabs sbb jle mov jbe rex.RXB ja and jg sbb gs std xlat rex.XB rex.RB add cwtl data16 pop test (bad) loope cmp sarb adc popfq test xor popq testb cld (bad) loopne (bad) movabs mov xchg jb xor xor cwtl lods add jnp out sbb in cmp mov sbb add movabs xor and xchg mov or test test cmp (bad) pop (bad) loop scas sub sbb rex.WB xor imul fidivl pushq repnz and in imul (bad) rex.WRB (bad) out (bad) std out push jo (bad) sbb in xlat add js movabs rex.WB xchg icebp xor mov jmpq jl jg mov ja jns and cmp jmp cld rcrl and jae mov (bad) sub push mov sbb movabs popfq and rex.RXB sbb iret sub or mov int3 in sbb xchg stos (bad) (bad) mov sar faddl mov (bad) mov jge jg adc cli sahf xor rex.WX xlat (bad) mov and push sbb scas pushq in negl pop or lcall jno xchg rex.WR popfq sbb in (bad) xchg (bad) (bad) adc out out mov jo test out mov es nop (bad) (bad) in push outsb insb test fs or xor mov sbb rex.WX xchg subl push lret (bad) mov jl mov je sub xchg shll rex.RX rex.WX (bad) or dec (bad) cmpsb movabs push sahf push cmp jmp test lret loopne or jb loop (bad) xor xchg xchg movabs rex.RX mov leaveq sub push pop rex.WRXB fwait shl lret mov (bad) pop cmp jge jmp retq fwait jle jp int jb sbb sub rex.X retq test jmpq sub imul sub movabs fcomi (bad) sahf mov sbb sbb movabs fwait cltd sub addb rex.RB rol pop outsl rex.RX mov lret in loopne xchg (bad) movabs (bad) clc mov xchg shll in rex.X xor and mov in lods je pop and rex.XB fisubl xchg ljmp nop mov (bad) sbb xchg sbb rex.WRX repz mov sahf movabs (bad) fwait in (bad) pop in mov frstor rex.RB fistpl (bad) cmp fwait jle mov insl je xchg fwait (bad) rex.W (bad) iret in (bad) fwait adc (bad) xor fcoms xchg or jae (bad) (bad) jno mov adc cwtl (bad) cmp or inc push (bad) (bad) in xor pushq sbb push adc (bad) cmp stc cld cmp (bad) fwait mov xchg sbbb xchg fwait test push (bad) and fwait cmc pop repnz rex.WRB push or jae pop or (bad) push (bad) rcr mov mov add rex.WX fwait pop retq xchg sbb push push push sbb ror jne fdecstp xor fwait adc lret (bad) pushfq mov add out (bad) stos out icebp movabs fsubrp sahf xlat jrcxz (bad) xchg (bad) add pop sub (bad) pop add fwait rex.WR stos (bad) dec fbld add xchg test mov rcrb pop clc enterq out or add (bad) push mov jl or lods fwait (bad) (bad) jmpq fwait fs std cmp rex.X rex.WRXB fwait mov pop sub fwait xchg jb loop rex.WRX jle sub (bad) jns (bad) pop sbb cmp (bad) pop (bad) jp mov retq jge xchg fadds push rcrb xchg fwait rex.RXB scas push stos insl outsl cld fwait pushq cmp cmp sti (bad) jne sbb cmp (bad) adc and (bad) jrcxz (bad) or shrd xchg cmp cld fistpl insl pop (bad) roll sub sti cmp mov add or test (bad) icebp ficomp incl fmuls and xchg jg push adc fisttpl fs or mov bnd push pop mov rex.RXB (bad) cmp loop add retq add (bad) mov (bad) cmp xchg cmp cmp decl lods mov mov cmp (bad) out sub sbb popfq mov pop add insb jb (bad) fisubl (bad) cmc lods fstps jmp sbb in stos retq lods xor rex.WRB data16 or loop (bad) setns sbb add sbb sti push rorl (bad) mov sbb (bad) sub shr add mov (bad) fwait lods movabs fwait jmp sub gs (bad) (bad) mov (bad) stos mov (bad) rclb rex.RX rex.WX push sbb (bad) stc rex.RB rex.WRX or repz adc jbe jl xchg add (bad) mov fwait adc cmp in incb rex.WXB fwait mov (bad) mov sub add xchg jae rex.W fwait popfq lock lea mov sub mov repnz xchg pushq or (bad) subb cmp (bad) pop (bad) mov adc fwait rex.XB mov sbb ds cmp mov icebp (bad) je adc push xor mov outsb adc hlt or (bad) mov (bad) cmp adc je jge fisubrl (bad) pop (bad) rex.WX mov in test mov rex.B fmull xchg jno (bad) fwait rex.RB test fwait ja imul jle mov rex.WX add fwait xor repnz insb fwait (bad) add mov rex.WRX rex.RB movsb jae scas fwait mov push stos or test (bad) fdiv jo sbb pop movsb jrcxz or jne mov mov cmp sub (bad) sbb jl rex.WR add lods (bad) fwait push fstpl sar enterq fwait in jns rex.RXB scas (bad) sahf rorl stc mov stos movsl (bad) fistl lock or fld or mov (bad) lods rex.RB fwait mov movabs adcl rex.WRB ss out fwait mov out (bad) (bad) mov push rex.W stos rex.X fs fwait scas lahf imul sbb sub fwait pop scas xchg rex.WR mov pop sbb cmc (bad) (bad) cmp sahf fnstenv adc in xor mov (bad) xchg fwait rex.W sub (bad) jne add pop add (bad) fwait retq (bad) insb jo stos movabs ljmp stos sbb fwait mov pandn (bad) xchg repz mov cwtl xor and (bad) outsb mov xor popfq sub incb (bad) loope enterq mov (bad) js (bad) out sti jmp stos popfq fwait test lock rex.WX sbb fwait enterq retq pushq subl (bad) rex.WX and (bad) cwtl outsb jle mov jl (bad) sbb jrcxz movsl and mov pop xor sbb (bad) (bad) or sti leaveq notl adc pushq jne sbb jp popfq xlat fisub adc mov js rex.WR sbb sbb mov out pop rex.B (bad) pop rex.RB and icebp scas sbb (bad) and jge retq sbb fsubl or stc (bad) rex.X (bad) cld int mov pushq fidiv jp movsb xchg or jmp lock out cmc scas rex.WR (bad) (bad) int3 sub cld fisubrl out add cmp sbb loop xchg scas xor (bad) (bad) xchg jmpq test push mov lods cld xor (bad) lods push mov cwtl pop push movsb out callq jne test (bad) or pushq rex.X insb ds xchg mov pop push sbb std (bad) cmpsb imul mov test ss mov and xlat (bad) orb mov push xor mov rex.XB insb loopne jne mov mov in data16 (bad) jrcxz xchg ds sbb cmp and xchg cmp adc movabs sbb je mov pop orl je adc and jns add jrcxz cltd rex.W jnp cmp int movabs (bad) fwait push xchg pushfq rex.RX mov and roll (bad) (bad) outsb mov jle xchg mov movslq or mov (bad) mov addr32 leaveq (bad) rex.RX mov cmpsb ficoml rex.RX mov xorl or stc cwtl jo rex.WRX (bad) icebp sbb (bad) cld pop cmc jbe xchg fnsave imul std jp je (bad) rex.RXB (bad) xor je push movsw icebp callq ss icebp loope lock adc mov jl mov int sbb in push push rex.RX adc mov fildl mov fwait movabs jno lock insl xlat imul fwait (bad) movsl fs jbe jae mov movsb or rorb sub mov push int3 stos mov cmp fwait adc pop (bad) mov push out (bad) adc rex.WRB and xchg fwait test hlt (bad) xchg add mov orl and pushq rex.WXB adc fnsave jno (bad) fwait (bad) mov or fwait pop out cwtl (bad) rex.WRX repz nop (bad) jle movabs sbb (bad) rex.WX rclw fwait cmpsb (bad) nop adc and xchg ficomp movabs or nop rex.WRB fwait or or cmp and fstps mov sbb fucomip ss sub jge mov movabs notq hlt fwait icebp (bad) (bad) stc jp (bad) fwait jno cmc movabs lahf rcll movabs rex.WX rex.W loope or sub xchg add cmpsl mov fwait mov xchg movslq jmp add movsb icebp rex.WXB and (bad) sbb push rex.XB add div imul sbb mov pop adc jge rex.WR pushw out pop in sbb popfq cmpsb lahf (bad) pushfq in (bad) or fwait or add rex.WXB test mov mov jmp sbb lock mov rex.X xchg or fwait jmpq test jb mov lahf add ja sbb fldt int3 retq in out lahf pushq ja cmpsb xor fwait rcrl int sbb rol rex.RX (bad) jo cmpsb (bad) movslq add (bad) rex.W fwait pop mov jo cmp movabs sbbl add sti jrcxz cltd fwait cmpsl movsb xor mov iret sahf rex.WXB insl sub sbb imul fwait add push add mov (bad) movabs stos fwait jge (bad) movslq in xlat fwait cmp jne or fwait pop outsb pop adc (bad) lret fwait iret add mov (bad) adc lret fistp rex.X push (bad) idivl rex mov jns movabs loopne or movabs fwait (bad) sbb vcvtsd2si cmp cld push ss jmp xchg push rorb jo adc jrcxz pushfq scas (bad) xor xchg adc rex lret mov xchg int3 outsl pop (bad) xchg fwait or cmp js imul sti sti mov mov or test xchg xchg mov add lock out lods adc adc xchg cmp xchg (bad) pop jrcxz int sbb sbb push clc movsb adc xor cmpsl mov imul fwait clc push or jle push mov cs outsl shrb test fwait loopne fisttpl clc sub fwait sahf callq xchg pop (bad) push xchg add sti notl retq sbb rex.W stos mov js imul xor (bad) mov sbb adc stos jno xor (bad) gs (bad) int3 popfq pop jge mov (bad) (bad) mov leaveq rcrl lret mov fwait (bad) rcl loop stos push sbb cwtl rex.WRXB movabs lret (bad) ds test add xor jo (bad) ja xor addr32 andl fwait sbbl jl fs clc movabs fwait add adc add sub js and pushq lods pop pop and (bad) fwait movabs pop fwait rex.WRXB cmp fwait loop,pn mov mov sub iret (bad) fnstsw sbb movabs jrcxz sbb pop int (bad) (bad) mov movsb sbb stos (bad) fisubrl (bad) int loop sarl adc add add cli (bad) sarl fwait xchg (bad) sub add imull cmc jg insb rex.RX (bad) movsb xchg rex shrl mov jrcxz out rex.X add cltd movslq fisttpll lret rex.WB xchg adc callq jmp jo es (bad) jrcxz mov (bad) mov fcoml movsb xlat callq mov and sbb mov stos (bad) (bad) cmpsl movabs add pop push xchg xlat (bad) rex ss rex.X fisttp pop out out mov (bad) sti sbb mov (bad) cld lock (bad) sahf (bad) rex.WRX mov sub in add (bad) xchg pop xchg or and rex.WRB lods mov xchg add pop icebp adc pop in sbb xor jae rex.WXB movabs (bad) subl mov mov cmp (bad) (bad) adc rex.WRB add pushq enterq xchg pushw mov int xlat movsl adc sahf jo lock (bad) pushfq rolb mov (bad) or insl fisttp rex.W ja (bad) mov xor imul xor rex.WX loop fwait (bad) xor insl add jrcxz lods mov outsl rex.WB sahf and push fsts rex.WR std (bad) out clc fwait cmp rex.X (bad) and cmp imul push out pop lret (bad) (bad) add fisub xchg sarl rex.WR fwait (bad) test adc (bad) mov lss out cmp fwait xchg add sbb push mov (bad) xchg movsb cld add and mov push sbb movabs rex.WXB xchg js mov fwait smsw cmp (bad) sub rex (bad) rorb pop adc and and fwait mov cmpxchg and sub shlb loope pushfq and stos stos insb lahf mov add cmp (bad) rex.B rex.W lock (bad) mov mov icebp pop (bad) mov xchg rex.XB cmpsb popfq xor faddl adc xchg jo sbb data16 mov mov fstpt xchg nop cmp cmp test xchg movsb (bad) mov jl ficompl pop jmpq and and ja pop fldl out outsb mov cmpsb mov or and sbb rex.WXB add pop pop rex.XB (bad) jge sub (bad) je or pushq scas insb sbbl sub mov fs adc add (bad) frstpm(287 addr32 jge and xchg in mov push mov (bad) scas mov cmp add insl ficomp (bad) psubb mov and rex.RXB jno fwait movsb (bad) rex.W xor sub incl stos jle push (bad) movsl pop fwait (bad) jrcxz lods xor ffree (bad) jrcxz (bad) rex.X fs cld or jb push stos jl out mov mov jmpq xchg sbb mov (bad) pop fwait lahf rex.RX xchg cmpsb jno fwait out push retq adc fsubs in fwait jl repnz cmpsl xchg and pop (bad) rex.RX rex.WRX loop (bad) divl cwtl mov (bad) xchg fnsave sbb retq fsubrs mov sahf pop sbb mov cmp (bad) jo fsubr xchg mull lods cmp mov js (bad) scas jne and sbb (bad) (bad) mov xchg in gs add mov in (bad) adc (bad) mov addr32 sub xor test rex.WR test rex.RB rex.WX push gs sbb xchg fdivs rex.X pop (bad) sbb (bad) pop rcl je popq nop push imul test fstpl mov stc mov xchg cs rex.WXB shrb sbb pop xchg add mov rex.B test or (bad) xchg shrb xchg imul fwait pop jg pushq (bad) cld fisttpll lret fmull movabs imul (bad) sbb sub (bad) rex.WXB rex.RB xchg and pop push sahf jmp jl lods add popfq jnp sbb lock (bad) (bad) adc rdmsr cmp in ds mov mov (bad) stos xor sbb pushfq ss xor lret push sbb and imul rorb fstpl jl rex.XB rex.WRB movabs sbb insl jl mov (bad) rex.WRB or rex.WXB flds cwtl jle (bad) (bad) jg cmpl push sbb icebp mov fildll mov iret mov or loop xlat or rex.WRXB jo pop adc and es xchg cld (bad) (bad) sti mov jns sbb popfq sbb push jge xchg cmc lods adc outsl scas (bad) pop mov loopne push fwait push (bad) sti xlat in ror and (bad) jnp (bad) mov (bad) mov (bad) stc test (bad) rex.WRXB mov xor loopne mov or callq rorb add cmp icebp cwtl mov pminsw fisttpl and cld insl pushfq clc push xchg jle ds pop push pop (bad) xor lsl (bad) push sbb rex.WB in callq repnz nop int3 pop mov std movabs (bad) cmc xchg sbb pavgw (bad) or movabs rex.XB mov fdiv add rcl cmp pop cmp test div ds fwait xchg test sbb add in addr32 cmc mov mov incb (bad) mov (bad) mov mov (bad) (bad) (bad) insb sbb rex.WXB fnop and fwait hlt test test fwait pop cld js push cmp or fildl xor xchg mov repz sbbl pop mov add (bad) notb xor cmpsl mov mov (bad) (bad) jrcxz negl cmp adc pop lcall fs test notl and sbb sbb add xchg out fwait jmpq lret sbb jne mov stos out jrcxz lret add mov movabs out fwait (bad) mov and lock fs jno adc imul rorb hlt adc cs cmpsl pushfq xor add (bad) and or jrcxz fwait mov test fwait jno adc jo shl movabs fwait in (bad) xor cld insb mov push loop fildll pop xchg and rex.RX fwait shrd callq in negb (bad) jl (bad) fwait pop mov (bad) xor rep adc mov add data16 cmc stos enterq sarl sbb push jns add xchg icebp (bad) pop popfq sbb mov (bad) fldenv fwait mov cmpb add sbb or mov mov insb cwtl (bad) adc lock shll sub loopne test cmpsb cmp leaveq popfq (bad) mov cwtl xlat xchg je sub or mov mov addr32 sti cmp (bad) sbb lea cs lods or int3 mov pop fimul sbb fwait and retq xchg add (bad) insl and (bad) movabs xor in mov xchg imul (bad) repnz movabs (bad) fwait movabs rex.WRX mov icebp jno cwtl xor sub mov fwait jns push (bad) push (bad) stos or and out cmpsl fwait or fisttpll pop fistp ja iret insl sbb hlt (bad) fild fldt jmp (bad) (bad) push nop mov sti mov jmpq jns lods (bad) push nop cmp (bad) cmp push adc pop (bad) rex mov ficompl clc rex.W cltd cld and lret cmp fwait ror xchg lret (bad) sbb loope sbb hlt insl mov jns cs es cmpsb add (bad) (bad) retq cmp (bad) jb (bad) repz sub movabs sti add rex.XB xor movabs xor rex.WRXB mov adc add add sbb movabs xor pop out in pushfq (bad) fmul and jrcxz jb jns (bad) negl sti sub rex.WX loope fwait test pop xor xchg retq rex.XB fwait cmp int mov (bad) fwait add cmp sbb testl push dec outsl jae repz scas cmp (bad) es rex.RX fwait jle rex.X mov test jmpq sbb rex.RX outsl cmp mov mov cmp (bad) retq sbb rex.WRB rex.RX jmp (bad) adc insl (bad) xchg sub out mov mov scas xchg adc pushq (bad) mov mov (bad) leaveq ss rcrl lcall mov addr32 fdecstp rex ja loope jmpq pushq cmp gs rex.XB lahf adc rex.RB cwtl rex.XB (bad) sti lahf (bad) cld sbb sbb fcompl mov movabs (bad) (bad) es pop adc adc or or scas nop mov jl (bad) xchg pushq add stc mov pushq pavgw xchg retq xor ja cltd gs sbb (bad) adc movsb pop sbb loop loope cwtl out (bad) jg movabs (bad) mov xor xor stos adc sbb pushfq mov pushq pushfq mov fs and in xchg lahf push addr32 adc or mov pop fs test add (bad) jge (bad) pop fistl loop adc jae sbb test adc xchg movabs imul mov cwtl test pop (bad) xor pushfq and adc retq xchg cltd data16 and in jae add movsl add std and retq cmp (bad) cmp sbb mov stos cmc xchg sbb xchg and jle mov (bad) jrcxz (bad) push pushq xchg rex.B or mov in or shrl xor jo (bad) mov test lea and mov mov leaveq (bad) mov out add rex.WRXB mov data16 jl imul movabs mov adc jrcxz xchg leaveq loop retq (bad) sbb popfq and jrcxz iret mov xchg jl movsl sahf (bad) push sbb rex mov jp stos add sbb loop rcrb cli (bad) jne ja (bad) jl sub negl popfq lock jge shrb mov add outsb pop outsl cmpsb lret and imul pop testb out jge and hlt outsl fsts movsb test or stos add adc jle rex.X push ds adc fiaddl movsl lea xor sti movabs rex.WXB or (bad) shl xchg sbb (bad) xchg rex.WX negb (bad) cmp out (bad) cmpl ficomp add testb (bad) pushfq xchg jrcxz adc (bad) jp rex.X (bad) xorl cld vpandnq pop rcrl xor cmp enterq (bad) andl iret rex.R mov rorb jmp sub pushfq pop lret mov int3 (bad) sub sub jae ja (bad) mov rex.RXB addr32 (bad) or jp jae test push xlat cld stc pushq rex.WXB repz or fisttpll repnz lret or ja ds rclb (bad) shrb xor add je pop cmc rex.WXB jmp sbb jns andl xor int3 cld xchg jae (bad) rex.WXB (bad) sbb or pop (bad) xchg fdivrs insb (bad) push xor fwait movsb repz (bad) stc fildl pushfq pop cli mov fidivr in in pop iret je movabs rex.X out cmp retq sbb pushq add sbb xor rex.WXB lret fiadd pushfq (bad) rex.X mov pop orl fbld and nop rex.W rex.WRX xchg (bad) scas (bad) xor mov pop mov leaveq fsubrl repnz repz jmp fcmovb rex.WX fisttpl rex.WRX fdivrs cmpsb jg fnop rex.WXB sbb sub test (bad) loope xchg fsub adc in rex.XB sbb (bad) rex.WRXB rolb (bad) sbb push and movsb or insl retq pop pop xchg add and mov mov cmpsb (bad) jge fs xchg push (bad) lcall je gs insl xor or (bad) and scas icebp sbb fcoml or (bad) cli sub data16 xor (bad) orl imul lea jns ss lock fwait cmpsl or xor icebp sub (bad) mov (bad) add (bad) movabs ja and imulb test cmp cmpl in popfq xor iret retq rex.X cmpsb jp callq rex.WRB fucomp in cwtl or jmp adc fcmovnu pop mov repz jnp stc xor (bad) sub in sar in stos scas fadds shrb (bad) callq repz push adcl pop or mov pushfq jle movabs adc enterq add rorl xor nop cmpsl add je mov jg ja int test rex.B test ja sarb int3 sub pushq xchg jb (bad) rex.WXB stos pop (bad) int in loopne cmp mov or cs subl outsl mov cmp orb xor pop push and (bad) fcomi movabs int3 sub std lods out insl pop (bad) pop je (bad) cmp fistpll (bad) (bad) pushq jl,pn rex.RB xchg or or and pushq rex.WX jmp leaveq sbb jno push jg sbbl mov and (bad) movabs frstor pop (bad) callq push mov mov jb xchg mov (bad) popfq xor icebp insb sahf retq std mov in icebp (bad) xor (bad) (bad) (bad) xor es adc (bad) cmp (bad) lods add xor (bad) ds test push lods mov (bad) xchg mov rex.RB (bad) imul jp rex.WRXB orb rex.RX sub retq sahf out (bad) movabs imulb fs push xor stos rex.RX in rex.X adc sub stc lret xchg repnz ss (bad) sub shr ds callq sbb shrb sbb fistp retq xchg mov rex.R rcll stc mov mov sbb push mov jnp callq pop jb test rex.WRB cwtl mov pushq adc shr sub lret and cld sub jge sbb mov push cmp adc movslq rex.WXB imul (bad) xchg add jo add xchg cli adc (bad) xor adc xchg jmp sbbl or jp mov cmp (bad) iret (bad) mov popfq cmp lret (bad) movabs rclb frstor lods xchg (bad) (bad) jae add cwtl add sub test adc movabs lods pop rex.WRX movabs or rex.R xchg std fsubr cmp rex.WR adc out sbb rclb or sub push fdivrp mov add test fadds (bad) vcvtss2sd ficompl mov pop (bad) (bad) xchg ss (bad) pop mov std out add (bad) push sahf cmp lea outsl cltd xchg leaveq (bad) rex.WXB push std int3 xchg movabs ja fsts test lea fstpl add in cmpb adc mov pushfq (bad) push out insl (bad) fs adc fdivr mov in fdivl cwtl mov movabs hlt cltd or sbb test (bad) rex.RB sub int3 mov mov test test movq in (bad) (bad) in (bad) pop fstp adc xor fs sbb sbbl jl (bad) scas or (bad) sbb lock add (bad) cmp rex.WRB sti in sbb loop jmpq and or fstpt ja clc int3 insb mov lods sar jb (bad) negb out cmp (bad) sbbb (bad) pop movabs rex.WB add cmp push rex.WX rex.WX rex.X or rclb (bad) or (bad) mov pop xor (bad) xchg rex.X xchg sti or popfq mov xchg rex.B gs jl jno cmpsl jae pop ja iret cmpsl jbe (bad) jnp test (bad) (bad) out (bad) (bad) jae xchg add sbb fmul adc and or (bad) (bad) movsl mov cltd loop scas movslq xlat rex.RXB xchg mov sbb mov fisttpl jle mov btr sbb rex.X xchg jnp in (bad) push mov mov add (bad) rex.RXB repz movsl shrb xchg (bad) imul mov test xchg (bad) je rex.B or mov imul repz pop or cmp cmpl cwtl push or sbb and sbb and or pushq mov (bad) fbstp (bad) lret (bad) fnstsw xchg add pushq fiaddl cltd xchg pop pushfq nop rclb xchg xchg mov cli adcl (bad) push out (bad) int rex pushfw cs loopne mov movabs repz jrcxz xchg cmp xchg nop or jne or movslq hlt sbb and clc xchg mov (bad) popfq xchg fmuls mov add add pushq mov lea sahf (bad) push push or push (bad) sbb (bad) or fimull add xchg jbe xchg lret xchg sbb sbb in pushfq sbb pop mov cmp shrb rex.WXB (bad) xchg test (bad) xchg (bad) imul je adc add (bad) xor cmpsb mov movabs xchg (bad) sbb adc mov (bad) vaddps sbb fcmovne in jno loope int popfq fstl (bad) fnstsw xor lret xor lods rex cld pushq (bad) iret push int3 (bad) (bad) test sahf sub pushfq retq rex.WRB or mov jbe mov loope mov xor popfq divb sbb jp rex.WRB (bad) (bad) pop and cs or xchg out jp incl out (bad) (bad) imul mov pop jmp pushq rex.WXB pushq (bad) stos js sbb out xchg movabs xor rex.WRB scas xor jnp xor in imul mov rorl cwtl rex.WXB leaveq or mov pop loopne mov je es jmpq push mull test lock fidiv jp sbb retq xor or out xchg xorl fwait int sbb out popq add movsb jns sbb loope (bad) fnstsw push sbb push sub enterq (bad) div pop icebp out int3 cltd mov sub xchg rcrl retq mov mov test push std xlat outsb mov rex.WR enterq mov (bad) mov xchg add (bad) in repz pushfq xchg adc add pushq xchg mov rex.XB in cmp xchg cmpsl mov loope int pop xchg xchg retq orb adc cmpsl jb imulb (bad) jbe sarl sahf push and out hlt sahf cmpsb jne pop gs (bad) jl in (bad) jnp rcl out cmp sti sub nop mov (bad) movabs hlt rorl int3 scas adc (bad) rex.X fistl retq shrl mov rex.XB pushq in xchg and jle rex.B ds (bad) std add orb (bad) cmp pop fstl push fidivr rex.W sub (bad) xchg adc fdivrs pushfq (bad) lods sub neg sub jmpq or and or rex.W out decb sub clc jle pop in or fcmovne add repz lret (bad) fldt rex.WRX (bad) adc rex.WRXB sub xchg (bad) fwait cmp sub out cwtl div adc js (bad) (bad) xchg fwait pop cmp and sbb stc fiadd mov xchg cmpsb xor and jrcxz (bad) nop lcall andl fstl out sbb fwait cmp push fs movabs and pop imul jns sbb (bad) fwait sbb mov jmp scas add rex.RX pop callq (bad) and jp fwait push pop rex.WRB rex.WX (bad) fwait ss sub cmp mov jp (bad) push cmpsb retq rex.WB adc mov xchg push insl mov adc cli sbb or (bad) pop rex.RX cmp and retq jrcxz mov mov iret (bad) jnp sbb adc xor (bad) pop fwait jmpq and (bad) mov rex.RX fwait popfq fbld rex.WXB sbb fwait mov cmpsb (bad) int3 loopne sbb push jb pop add sbb xchg (bad) adc out pop in (bad) xchg jrcxz xchg (bad) and pop adc popfq nop stos cltd mov cmpl insb xchg cmp mov pop mov out xchg sub std loope pop fnop add cltd (bad) sbb jp in or and ficomp mov or in cmp sub or (bad) fucomip (bad) add (bad) adc pand jb xchg clts mov pushfq xchg adc mov xor jg subl (bad) mov add pop test sti cmpsl or (bad) mov test pop adc popfq cmpsl je sub popfq cmp mov in cmpsl imul rex.WX cmp in cmp (bad) jb sub retq and push cld and (bad) xchg (bad) out addr32 mov sti cwtl cmpsl movabs rex.WRXB jns adc mov sarl popfq (bad) jle pop movl xchg pushq sub stos loope xor mov retq pop gs pop mov movabs fbld mov push pop adc jle xor roll (bad) (bad) clc cmp xchg sub mov retq xchg xchg loope rex.WRXB loope fstl rcrl cli adc xlat (bad) xchg adc adc adc push jnp sub add (bad) out lock out mov ficompl sbb (bad) fwait (bad) sub sub and fwait (bad) cmp sbb (bad) imul add xchg mov fwait add (bad) mov fwait push (bad) mov mov jo mov fwait (bad) add movsl scas fwait lret movabs movabs add out out pop adc mov sar test (bad) lea xchg mov push sbbb mov pop lock nop jg (bad) std fistpl sub and mov divb (bad) (bad) sbb add fwait fwait mov (bad) addr32 test movabs leaveq (bad) in xchg iret sub mov sbb scas cmp movabs mov pop (bad) mov (bad) in leaveq adc fcompl add sbb pop ds mov fwait mov sbb (bad) or imul scas xor xor sbb (bad) adc (bad) sub jmpq (bad) and pushq in push fwait cmp fisttp cmpsb fdiv sbb xchg cli jne and add fwait adc xchg sbb fwait icebp cltd push cmp xchg cmpsb (bad) rex.R (bad) insl (bad) add jno mov popfq out fwait mov xchg rex.W rex.W rex.WRB rex.WB fstl rolb rex.WX add retq and (bad) fwait jl jle add pop cmp mov or fiaddl lods push rex.X jp retq rex xorl fsubrp cmp (bad) fwait mov pushq (bad) insl fmull fwait mov rex.XB xchg in jbe xchg pop je pop pushq (bad) (bad) push out fnstenv xorb hlt fistl sti mov testb mov (bad) add push (bad) add push out sbb ss rex.RX out fsts jmp ficompl (bad) cmp jmpq cmpsb adc out jno or (bad) push ja rex.X rex.RX pop (bad) and mov retq (bad) sub or outsb fwait mov flds (bad) rex rex.WX jbe adc and xchg fisubr push popfq (bad) in xchg popfq (bad) sub lock jrcxz fnstcw cwtl sbb push movabs push or (bad) sbb rex.WRB xchg xchg xor sahf popfq rex.WRX rex.RB loop out cld mov pushfq pushfq ficom mov push mov rex.RXB jmpq mov rex.WXB pushq in idivb cmp roll or (bad) movabs movabs movsl stos jnp hlt pop callq (bad) scas imul rcll mov in (bad) xchg movsb mov jp (bad) xchg adc xchg mov sbb or mov rex loop gs jnp pushq adc fwait rex.WRB js fisttp (bad) rex.X addr32 fistpll push pushq movabs cmpsb sbb rex.WB adc (bad) (bad) and ss gs rex.RB (bad) jl in adc je test xor cmc xor sbb push rex.WB push jo pushfq fadds cwtl and xor add test mov ds xor int3 fmull xor sbb (bad) (bad) insb rex.X outsb mov sbb lret insl xor jne rex.B mov mov push imul lods jle (bad) sbb cmpsl mov push mov mov loopne jnp lods pushq (bad) (bad) (bad) in sahf fistl cmpsl sti mov xor mov pushq xchg fwait pop rex.RXB pop (bad) js jnp (bad) jmp or cmp roll (bad) sbbl jle adc fwait sarl jno out cwtl sbb (bad) wrmsr cli outsl add sti outsl and out mov rex.WR movabs (bad) sub mov sbb mov and xchg xor fadds xchg mov imul push fwait imul pop cmpsl jmpq fwait mov or xor ja sbb jne jle andb fwait leaveq sarb fwait (bad) ror repnz cmp adc fwait test sbbl rex.WR fsin (bad) push (bad) pop popfq test (bad) and adc pushq (bad) (bad) orb fwait sbb mov mov in lahf rcrb mov xchg xor lea jp pop xchg push stos jnp insb fwait mov cmp and mov neg int3 stos es sub out idivl movabs jo or xor xor mov loope cltd and sbb test scas sub fcoms in push negl int3 xor (bad) lahf (bad) adc rex.WX rex push rex.WR jmpq movabs (bad) sbb (bad) lock stos xchg loop rex.WB outsl jno out cld fwait pop movsl add mov cltd cmp gs (bad) mov cmp adc (bad) sbb rex.RX gs fisub outsb cltd pop lret rex.W ds test sub xchg fwait sbb add fwait rex.RX pop cld xchg xor fsub and imul fisttpl xor and sbb xchg (bad) pushfq cmpsl stos iret lss pop fistl add cltd add push add in add (bad) xchg sbbl rex.B rex rex.X xlat and fwait jo stos (bad) fs or sbb pop scas rex.WRB mov lods cmp (bad) lret mov movabs xor mov pop sbb cs imul rex.RXB int3 adc pop (bad) jle mov or adc cli (bad) mov jne nop movabs fwait (bad) mov mov rcll (bad) cltd notl rorb cmp sbb es or mov adc jrcxz (bad) jg inc (bad) or out rorl mov (bad) cld cli rex.WX rex.WX ss callq fwait xchg lahf fidivr test fs (bad) int3 (bad) add and (bad) fwait not movabs fnstenv psubb incb xor jns (bad) and xchg jl fwait retq ds (bad) fildl xchg fwait mov out adcb addl scas out int rorl adc or loopne data16 (bad) (bad) mov jbe jae fldcw mov adc sbb (bad) push stos jp cmp (bad) rolb ror xor adc sbb rex.WRB iret imul jne addl xor orl enterq xlat jmpq (bad) or add lret fstpl cmpsl cltd (bad) fisubl fcomi pushfq cmp (bad) add insb adc add and fisttpll rex rex.WX mov (bad) loop mov jnp stos test xchg fwait sbb rcll fwait out adc (bad) es fwait callq sub fwait jmpq lret js stos adc cltd incl stc sbb loop fwait sahf lods test movslq mov imul and roll adc loope push fwait shlb push sub loope nop sbb (bad) (bad) (bad) (bad) frstor pushfq mov xor pushq sbb fwait adc ja repz fwait sbb pushq sub and mov adc rex.RB lods xchg adc (bad) push sub and insb lods mov sbb push retq pop or (bad) (bad) (bad) adc stos jmp xor cmp js fucomip hlt outsl xchg push sub (bad) cmc nop (bad) jle andl xor jmpq xchg fldt out push xchg adc fldt in adc or pop cmpsb movsl lea and rex.WR sbb lret (bad) rex.WX jmp mov rolb (bad) callq mov jrcxz sbb xchg pushq js pop and test jb and cli mov fs sbb in (bad) in xchg adc and pushfq stos popfq shl rex.XB movabs out int xorl fdivs rex.R or jle fistpl pop cmp out jl (bad) stos and (bad) sbb rex.WRB addr32 cltd mov xchg cmc jnp xchg (bad) movsb fs jge sbb pop xor (bad) fstpt rex.WR pop xor pop jne cmp adc ds imul (bad) popfq in jae clc pop outsb retq adc andl rcr (bad) (bad) mov lret cmp or (bad) push imul (bad) jle add leaveq iret push jne out rex.WRXB stc pop add (bad) add xor cmp or rex.X loopne (bad) pushq retq pop in (bad) (bad) loopne (bad) and lock rex.W (bad) rex callq lahf test cmpl pushfq mov (bad) pushq lea out (bad) fwait cmp jb add sti (bad) and fwait cs fisub mov adc repz fbstp add scas fistpl rex rex.B mov sbb and and lret push (bad) xchg jrcxz callq addr32 pop fwait adc (bad) push fldenv (bad) fcomps out mov or fwait rex.WRX loopne movsb rex.WRX (bad) outsb std scas mov adc movb (bad) fistpll sbb gs cmp xor cmpsl pushq lods adc mov add mov sub fwait hlt pop and jl sbb fdiv rex.WXB (bad) fs rex.RXB fwait adc (bad) xor fbstp and fildl (bad) fdivl imul xor (bad) xor xor test scas jmpq push rcr sahf in movsb test lods and or mov add mov (bad) sbb sub jg,pt sub sti push sbb movabs retq mov repz rex.X (bad) cmp sbb rex.WX lret clc (bad) fwait iret sub sar xor fwait outsb fist pop imull sbb (bad) or mov (bad) (bad) rex.WXB imul fwait and or (bad) mov adc mov ds lock repz jge adc adc gs retq and popfq sbb mov and js rex.RB (bad) mov loope (bad) fwait sub cld loope std nop iret jmpq rex.X sub (bad) mov rex.RX pushfq xor in (bad) in or addl sub mov and pushq mov pushq fmulp (bad) xlat sbb data16 and cld fwait mov sbb (bad) mov fwait jb pop sub or sbb pop lret sbb pushfq (bad) adc or rex.RX and rex.X cmp addr32 (bad) (bad) cltd rex.RB fwait (bad) rex.X movabs (bad) mov retq pop lea (bad) jbe lock sub cmpsl enterq (bad) and fdivp nop xchg xchg retq sub rex.XB cmpsl (bad) (bad) xchg mov rex.RX fwait rcl rex.X movsb mov nop sbb loopne,pn stos retq xchg test or andl fwait ja hlt lahf fidiv cmp (bad) (bad) xchg (bad) adc sbb pushfq (bad) mul je ficoml rex.WXB leaveq cmc fdivrs jbe fwait pushq sbb or jbe cmova ds or pop outsl std pushfq cltd (bad) lret xchg (bad) lods jns mov xchg add sbb fild in (bad) outsb mov (bad) stos mul cmp cs (bad) sbb mov jrcxz fwait rex.W mov fwait rex.X (bad) fstps gs sbb rex.B sbb addr32 (bad) or rex.WRX rex.WXB fwait int sti ror mov fwait es cmp test adc (bad) sub stos scas mov sbb (bad) repz enterq xor imul sbb mov xchg pop push rex.RB out stc xchg mov xchg mov fwait (bad) retq outsl xchg or stos sub icebp (bad) jb push out outsb adc cmp (bad) sbb (bad) out mov pop mov popfq pop xor int3 std mov sbb xchg sub (bad) rex.B fwait outsl (bad) popfq pushfq pop jmpq mov (bad) mov mov insl sti lods cmpsl rex.WRX and in pop (bad) ja jo fcoms jo cwtl imul mov retq mov pushfq (bad) imul mov rex.R jo lret scas mov pushq jae or (bad) xor mov and xchg (bad) loop xor and (bad) sbb ffree int3 rex (bad) (bad) pushq fiadd decb sti loopne pop lock jno add shr and (bad) jne jb in sbb shlb (bad) stos sbb sbb add fsubrl int3 lret in stos adc (bad) std (bad) push in pushq sub in or pop out scas sarl sbb je rex.XB pop (bad) sti in shl fs addr32 (bad) (bad) xchg jmp sbb (bad) xchg (bad) adc (bad) (bad) jmpq in sbb or jmpq sbb or rex.RX repnz cmp push in or sub add in xchg (bad) rex.X or fcomip (bad) sti in sub (bad) jae (bad) or (bad) rex.WX (bad) rex.RB or or xor push data16 or xor cltd pop rex.RX retq xor je pushq adc roll mov (bad) fiadd stos xchg jl out (bad) mov (bad) sub sbb mov adc (bad) fidivr cmp in in lods xchg mov hlt mov test shrl fildl mov or jnp test cs or xor gs fwait cmpsl and (bad) fwait andl in ffree xor push js xlat in mov rex.RXB enterq ffreep mov rex.WRB xchg cmpsb (bad) (bad) leavew jp jae mov pop rex.X fdivp and xchg and and add clc cmp mov (bad) lret or iret sbb mov jmp push movsb (bad) xchg (bad) jns imul scas loopne rex.WXB fwait stos push fsub out and mov mov mov addr32 sbb ffreep retq retq int fwait and icebp xor lock xchg or rolb jns rex.WR pop sbb push cmp xchg sbb imul loop adc and sti mov pushq rex.R rex.WRB repz ficoml fwait callq mov rex.X fstpt fmul pop out rex.R (bad) xor imul xchg rex.WRXB fwait enterq fcmovb lahf sub leaveq fistp xchg lock (bad) sbb callq shll push fwait retq or fwait movabs (bad) sbb std xor cmc pop pushfq cmp fldt rcr sbb xchg add negb mov and lock movabs mov retq loop push rex.WRX pushfq add shr sar mov je mov test (bad) nop clc rex.XB sub jrcxz add rex adc outsb in sbb cmp fdivrl stos (bad) stc cmp jae and xor out fwait gs mov xorl fwait (bad) mov cld rcrl sbb xor enterq sti rex.WRB mov (bad) mov mov (bad) mov ds pop jge xchg (bad) mov fiadd loop lahf sbb sbb (bad) jg rol iret mov fwait xorl movabs jnp mov (bad) and cmp (bad) rex.WRX fwait sbb (bad) and mov mov out outsb (bad) rolb orl (bad) loopne mov je cmp jle fwait lret mov shr retq fwait sbbb mov mov idivb fiaddl repnz cmp cmpsl clc sti cs out cmp pop jmpq movabs sbb xchg neg or movslq pushq mov stc sbb push mov jmp (bad) jnp data16 sbb addb (bad) sar rex.RX xchg in (bad) (bad) stc mov sbb mov ror cld test or in pop jb (bad) movb and jnp add rex.RX fwait cmp jns adc xor fwait (bad) fstp in rex.X out (bad) gs fwait jb neg and (bad) cmc (bad) (bad) fwait movabs mov enterq popfq rcl (bad) insb adc movsl and ds push repnz lods sti sub rorl rex.WRX repz cwtl fwait pop adcb fcoml (bad) (bad) cs mov or popq lea insl cmp cmpsl out push (bad) cbtw mov movabs push pushq and scas loop or mov in repz xor pop and icebp popfq (bad) clc xor mov gs cmpsl pop push and sbb cmp or insl xchg cmc sbb je imul add (bad) mov jl (bad) repnz sti jl loope cmp test je (bad) popfq shlb scas sbb sub (bad) cmp jp popfq cwtl adc hlt imul pop in rex.RXB rex.WR mov mov movslq (bad) add adc ds fdiv xchg rex.XB shrl adc retq (bad) fisttpl pop cmp (bad) cwtl or mov mov neg jge and cmp jmp or divb (bad) rex.WXB ds pushfq mov movabs mov pop pop xorl add int3 loopne and (bad) sahf loop (bad) imul (bad) popq rex.RXB and fucomi loope fdiv (bad) mov cmp adc mov sub sub rex.RB rex.W (bad) mov (bad) pop ds pop push jmpq rorb ss push rex.R push mov cs jbe and rex.X jg (bad) or mov (bad) fiaddl fs pushq fsubrs rcr insb pop mov mov (bad) mov cwtl adc (bad) (bad) lods int jmpq popfq xchg (bad) sub popfq flds gs js pop cmp rex.RB add sahf (bad) xor rex.WRX cwtl or xor (bad) rex.WR rex.WR rex.XB push xor imul (bad) loope stos xor rex.R cmp mov push fwait cmp mov sbb jrcxz or rex.R (bad) jne cwtl (bad) out sti scas cmp sub loope adc rex.XB or icebp sbb mov cltd (bad) push loopne jmpq insb cmp retq add (bad) pop movslq (bad) movabs adc rex.WR fwait and popfq sub (bad) (bad) sbbl sahf (bad) push xchg mov jbe fwait shrl test fwait (bad) cmp (bad) xchg and sbb adc lret or sti add orl fwait lock sbb (bad) in pushq outsb fildl cld pop pop add notl shl (bad) cmp lock rex.WXB fwait je xchg in (bad) icebp loope out std jg sub jge pushq push fwait hlt test mov stos rex.RX (bad) ficomp mov jmp or testl je stos pushq lret adcb test and fwait rolb mov (bad) cmc fildl idivl fwait in mov and in sub rex.WRXB (bad) (bad) (bad) or js (bad) fs callq sbb movabs pop (bad) clc lock mov cmpsb xor loopne (bad) fisttp xor jnp mov mov rex.WB pushfq cs fwait mov ror jmp fwait mov hlt jae pcmpeqw jnp push js cmpsb push vsubss (bad) xor or fwait mulb (bad) stc push loope adc int sub sub fwait push pushfq test idiv add cmc pop (bad) xchg (bad) rex.WXB mov (bad) adc adc or (bad) pop xchg callq mov (bad) popq mov xchg test sub jle fwait and mov mov out (bad) (bad) decb fisubrl jne fwait callq cld sub pop insb cmp rex.WX and (bad) fwait stos out (bad) mov jle es ljmp iret (bad) cld sti add fwait (bad) (bad) xor (bad) retq fwait xchg pop in clc (bad) adc cld fwait sahf (bad) mov add (bad) fwait mov ffreep movslq cld sbb xchg fidivrl mov insl retq lahf add mov sbb rex.WXB fwait jae (bad) retq pop fwait push (bad) mov out cltd adc leaveq sarb add sbb (bad) pop fwait imul mov fwait xor cmp xor (bad) (bad) (bad) mov rex.WRXB mov (bad) fwait sub add idivb (bad) sti cmp jl cmp int3 adc lahf (bad) nop xchg adcb loop fwait pop shl (bad) sub cltd sbbl add (bad) fiaddl xor lret fwait (bad) lahf mov iret test (bad) and loop fwait mov jnp xchg (bad) pop (bad) jbe in nop addl popq test stc lret and movabs stos (bad) mov mov movslq sbb adc cmp (bad) (bad) fwait repz (bad) insl cmpsb push jnp rex.WXB clc rolb sahf mov adc repz pushq push test sbb mov pushfq fucomp in mov pop mov nop sti in and mov mov cmp (bad) cli fwait rcrl (bad) cmp adc (bad) std or or mov jnp imul jg mov adc xor rex.X icebp push fiadd (bad) adc sbb mov movabs addr32 cwtl cmpsl sbb xchg and or (bad) sbb lods mov data16 or xor (bad) jge jb pop add movl in movabs sbb pop iret fadd negl rex.X std cmp addr32 enterq cmpsb in xlat loopne jmpq (bad) mov (bad) xchg mov jl rex.WRX or (bad) mov rcll jns jns lock jmpq (bad) or jae rex.X rex.WRB rex.RXB sbb mov movsl mov pop (bad) xchg movabs mov jmpq mulb mov rex.XB ss insb xor pop popfq rcl (bad) jae insl cmpsl (bad) (bad) fcomps xor sti push jp jl or adc testw sub and or movabs mov pop or (bad) (bad) rex.WX gs cli sti in add jle fwait mov xchg and mov popfq movb add (bad) fwait mov mov fldt rex.RX add jo (bad) push mov pushq (bad) hlt fwait pushfq add add (bad) imul popfq sbb rex.WB and movsb (bad) mov adc clc nop jp ds lahf int lret fwait fs test std fwait mov iret rex.R movabs repnz rex.WXB jae sbb adc sub sub std andl and in popfq sti rex.WRB (bad) mov or mov test fwait (bad) ja adc fmulp fwait in movabs mov mov adc mov adc push mov (bad) adc vpsrad enterq fwait add adc sti adc (bad) mov mov or (bad) add cmp testb repz clc add js mov xchg sbb mov fwait jne (bad) in xor lretw mov fwait and (bad) (bad) rex.WXB fwait (bad) sub cs movabs sbb (bad) fwait rex.XB mov mov in (bad) xchg add (bad) adc lock movabs xchg popfq jg jrcxz fimul rcll (bad) mov mov cmc xor pop sbb mov ja loop (bad) and pop fldcw sar sarl xchg (bad) mull or fcmovnbe cmp xor and stos sbb rex.WXB fwait imul fimul and callq movabs out repnz fwait mov (bad) fwait and push mov rex.X fwait pushq or fwait rex enterq add in sbb pop adcb (bad) imul rex.R or int sbbl (bad) out pop fwait push xor (bad) (bad) rcr adc nop cmpsl rex.B (bad) movsl mov adc test xchg (bad) fcoml repz sbb enterq js retq fistpl and (bad) push leaveq mov sbb (bad) nop test adc cmp clc stos cmp cmpsl test (bad) cmc and (bad) or rex.RB rex.WRX (bad) xchg mov rorb push cmp mov rex.WRB js lock adc fwait (bad) out xchg rex.RXB add stos mov mov movsb adc xchg cmpl cmp (bad) jmpq rex.WX in pushfq pop imul negl or add fcoml xlat fucom scas adc (bad) (bad) (bad) jb push push js callq fwait std xor gs adc fwait rex.RB rex.WRXB fisttpll pushq adc (bad) (bad) fwait (bad) std in out outsl rorl pop fwait in sub adc sbb std sub xchg sub (bad) cli sti callq sbb pop sbb pop movabs callq mov jl pop lret sub gs sarl lea add pand int pop movabs sbb mov negl fwait enterq push adc mov movabs fildl lods clc sbbb fwait (bad) mov or repz fidivrl subb and push vcvtpd2dqy xchg mov cli sbb sbb sahf (bad) sbbl jmp cmp or or sbb rex.WRXB xor cld push outsb cmp fwait int callq movslq mov insb (bad) (bad) push mov and pop fs cwtl pop xchg jnp (bad) insl repz mov jl or mov mov rex.X push or push mov sbb rex.W pop rex.X rcrl xchg rex.WXB and mov sbb addr32 addr32 mov (bad) mov (bad) rcrb push jle mov xchg std sbbl out xchg adc (bad) (bad) xchg cmp and jmp loop imul sbb adc cmpsl in jno cmp mov jbe adc pop retq jg js sbb mov sub xchg js jmp enterq fildll adc or pushq adc mov sbb rcrb retq pop cmpl movsb lret xchg xchg pushq mov insl stos mov lret lahf mov jne sub mov out outsl cmp sbb xchg push mov shl loop (bad) and nop (bad) (bad) or (bad) (bad) in (bad) (bad) rex.WX rex.WX lock pop jne jo jmp out divb rdtsc xchg rcll lea mov mov xlat jns (bad) cmc sbb mov fistp jns sahf mov scas scas movabs (bad) jle xchg lods movabs movabs lret or sbb insl add jbe retq rex.WR mov sbb sbb (bad) outsb sub push (bad) push mov jo mov jmpq andl sbb cmp rex.WB mov rex.WRX rex.RX rex.WX repz (bad) scas xchg mov mov mov test sbb xor loopne pop repz jmp jb or add jl (bad) stc sbb rex.WXB jl sahf pop movabs (bad) xchg add cmpsl loope lret fisttpl scas push (bad) (bad) add fidivrl (bad) repz cmpsb jns popfq sub pushfq popfq jrcxz rex.B frstor adc mov adc pop loopne lods nop mov popfq xchg rex.WRXB pushfq out sbb mov mov xchg jge stc sbb sbbb pop rex.XB negb push pushq mov out xchg or (bad) sub callq iret jmpq rex.RB jne sbb cmp xor mov xchg push test rex pop nop mov (bad) out jae and pop jno cmp (bad) cmp adcb loope icebp movslq adc (bad) cmp add pushfq adc out sahf (bad) mov rex xlat (bad) push and pop cli sub xchg or pop mov push gs rex.RXB sbb cld pop rex.WXB movabs pop rex.WB jmpq push outsb ja xchg mull mov xor loope mov mov fmul notl (bad) adc (bad) (bad) (bad) mov push mov sbb fdivrl lret out in pushfq pop lahf push std movabs sbb adc hlt add rex.WRX mov sbb fidiv cmpb iret sti lea sub mov sti cmp mov mov pop data16 fimull (bad) add movabs jno jo mov roll xchg push rex.X and cmpsl in mov or enterq adc xor push rex.X lock js pop and cmp sarl imul lea shrb subl mov or orl ja sbb ss insl sbb mov movabs jno shlb sbb imul pushq or jg jmp mov mov lods mov pop mov movabs cltd leaveq cli jg mov mov adc mulb rex.WRXB add stc mov sbb rex.WB pop push push xchg (bad) subb data16 fdivr sbb ficom (bad) adc (bad) or mov popfq sbb (bad) add xor rex.XB mov (bad) jb or (bad) mov in adc stc (bad) clc rex.W test jge fwait mov insl rolb ficomp push nop leaveq xlat es mov mov stos jg lahf adc iret push sbb (bad) (bad) mov rolb pop sti fwait (bad) xchg rex.WRX (bad) iret fsubl lock cmp adc xchg (bad) or (bad) fwait repz stc (bad) jle retq out xchg sub (bad) cli rcr sbb push and sbb rcrl sbb adc jl fwait jne std scas sub (bad) sub fistpl movabs (bad) rex.W xlat pop rex.WRX jo mov bnd sbb sub rex.B shr (bad) pavgw or mov fwait xor xor shlb (bad) fwait popfq test (bad) and (bad) adcq xor mov fwait movabs (bad) mov fistp (bad) (bad) or imul jg rex.B (bad) mov sub hlt frstpm(287 js jle sub test (bad) fcomi loop mov insb xchg callq sbb lret pop mov cld outsl fisttp movsb stc xchg or jg mov (bad) xor adc mov fwait movabs rcll add mov js insb (bad) cmp stos rex.WRXB rex.R adc (bad) rcll xchg out shll sbb loope repz jne fwait (bad) repnz (bad) scas in fwait jb callq in adc cmc mov sbb jge (bad) loopne insl pushq mov adc rex.WRB pop rex.RXB rex.WR out jmp mov sbb push cmc mov out mov cmpsl loope pushfq xor and outsb fwait rex.WRX xchg push mov movslq rex.WRXB or insl fdivrs fwait xchg xor pop (bad) sub repz cmp outsl (bad) mov adc rex.X or (bad) sbb cmp sbb subl (bad) mov outsl repz (bad) fwait push sub (bad) rex.RXB or std in mov jmp std imul xor fwait test loop sub sbb adc sbb push mov fwait jle rex.WRB sbb (bad) (bad) (bad) data16 pop pushq fsts (bad) (bad) fwait addl cltd (bad) enterq pushq mov fwait (bad) loope fs pop shl sbb sar rex.RX lret xor je xor shrl ss sbb rex.WR (bad) pop fildl movsl out rex.R rex.WB rex.RX ds js out cmp jl mov xor movabs cmpsl jl rex.WRX lea test lods rex.RXB sbb rcll and jbe rex.RX or xchg jg xchg pushq or cmp jmp sbbb in leaveq lret (bad) pushq pop push rcl in popfq cmp and sti adc jge xchg sub bnd (bad) fldt fwait push movabs imul retq in jge movsb xchg pop push rcrb fldenv sti add xor xor pop xchg mov xchg test rex.W sbb icebp (bad) xchg (bad) and (bad) (bad) push (bad) (bad) in xor (bad) add int xchg je cmp stos fwait (bad) (bad) sbb (bad) lea int sbb jmp add pop rep or or rex.X (bad) and (bad) (bad) int3 (bad) or icebp add fwait rex.W (bad) addr32 (bad) loope (bad) rex rex.RB mov shll data16 sbb movabs mov popfq (bad) adc icebp (bad) shrb xchg cmc (bad) test jbe fstpt movsb stos int3 pop in push iret (bad) fwait adcl outsb sbb xchg std rex.WRXB cmpl (bad) (bad) sub (bad) fwait cmp xor mov push rex.WRX add fcmovnb fldl fwait push adc std (bad) sub rcrl sti xor loopne or sti jp rex.WX xor adc push sbb movsb adc int add fwait add retq xchg cld xchg mov pushq sbb mov jmpq js callq pop fwait adc popfq rex.B rex.B repz push insl (bad) pop pushfq rex.WXB jmpq pushq in fwait movabs lods pushfq rex.W jrcxz mov (bad) mov pop or insl and in (bad) fwait sbb mov rex.WR jle imul imul cs outsl je loopne loope add (bad) jrcxz add xor mov int mov std add rex.WRB lods add (bad) (bad) (bad) sub xchg roll and (bad) fs rex.WXB sbb fildll cs enterq mov rex.B push cmp jno adc out jrcxz fwait push (bad) rex.WX xchg cmp test xchg adc (bad) in mov hlt (bad) mov and rol out (bad) (bad) jg retq rex.WR (bad) pushq adc addr32 sti retq sbb xchg decl popfq outsl mov fcomip or fwait cmc imul (bad) (bad) cmpsl xor xchg movsb pushfq sub rex.XB fwait xchg and jns lods lret cmp add jg cmc repz mov xlat nop icebp int3 fwait (bad) cltd mov jrcxz retq add rex.RX rex.WB rex.WB mov cmp (bad) movslq mov pop sbb in push fwait (bad) push movsl xorb sub xor jp sbb mov rex.W jne mov loop (bad) mov xlat movabs (bad) sub ds fwait imul mov lahf mov jg lret out neg rex fwait int3 test rex.RX jmp rex.WX movl (bad) fs pop test outsb pop xlat fcompl lods or xchg sbb mov fcmovnu pop shrl sub cltd pop (bad) rex.WRB cmp mov push mov jmpq (bad) or movslq rex.WR and cmp rex.WR setnp add es (bad) int jrcxz cwtl mov gs (bad) (bad) jae rol rex.XB rex.RXB rex.WRXB (bad) jle (bad) and (bad) hlt rex.B pop adc popfq fisub sbb clc movsb popq push loop imul push rorl jnp sarb or (bad) clc rol mov lods rex.WB cltd jle xchg push jno (bad) mov mov xchg jb cltd sbb fisttp adc mov fildl cltd pop out push push fadds callq (bad) rex.RXB and stc rex.WRB out add outsb cmpb (bad) add cmp (bad) (bad) adc pushq sbb rex.WXB pushq rex.WRX and sahf cmpsl movsb sbb push loope scas je push rex.WR mov pop cltd sbb and movabs xchg insb (bad) mov cmc cli imul std push in (bad) cmp rex.W addr32 callq fs data16 movslq push rex.RX jge ss movabs jl loop xor pop cmp (bad) xchg (bad) mov rex.W cmp rex.WRX idivl test pop callq clc mov ss or adc mov mov jns mov movabs pop rex.WRX out shll (bad) add cli (bad) sub push xchg xchg (bad) adc rex.RXB mov cltd rex.X or (bad) iret lods int3 sarb movabs mov movslq fndisi(8087 xor (bad) pop in stos push and pushq sbb movabs callq jbe mov jrcxz xor pop out xor mov push repnz fildll retq imul cmp insl je ss mov adc xchg fdivrl mov cmp xlat mov fnop movabs (bad) rex.XB (bad) or push scas sahf xchg rex mov sbb sti rex.W ja sbb mov (bad) mov mov (bad) (bad) repnz push (bad) retq jrcxz xchg push mov cwtl fsubl cmp sbb (bad) mov jb addr32 rex.WX mov (bad) lret ja mov stos cmp fwait leaveq push in add insl add mov ss in xchg cmp subl fucom out add orb callq mov sub sti (bad) (bad) mov scas push xchg out fstpl stos sbb lret (bad) fucomip fistpl push jp retq fcomps rex.WR add (bad) cld outsb (bad) imul cmpb (bad) hlt test sti out (bad) outsl repnz out ds callq punpcklbw mov outsb mov (bad) rex.W fsubrl add (bad) sbb cwtl xor push jl add cmpsb sbb xchg rex.RXB iret imul and xchg and fistpl push cmp jmp mov push or xchg int3 (bad) sti add (bad) jae sahf xchg movabs rex.RB cmp (bad) push (bad) fwait subb or (bad) rclb mov test push fwait mov loope fidivrl (bad) movslq sbb mov (bad) fcmovnu add adc test sahf fsubl jl pop add cmp and lea push (bad) stos xor stos gs pop stos add cltd fwait mov sub mov stos sti add add add ja (bad) push fwait mov adc cld adc cltd rex.RX or push xorl dec fwait or xchg and je sbb loope movabs sub es mov fildl xchg (bad) negb jne fwait add iret jl xchg mov (bad) in fwait push icebp mov pop jnp (bad) push (bad) test cs sbbl jp nop fwait icebp (bad) movabs add js out fwait sub pop jg sahf (bad) mov andl loopne sarl adcb jne adc mov adc fs add cmp (bad) and fwait repz (bad) test sti (bad) fwait (bad) and mov lea push cmp jrcxz add add repz (bad) xor pop mov mov xor fwait cmp sbb (bad) int jle sti mov pop push (bad) xchg (bad) mov sahf and cmp xchg mov pop imul fwait sub or (bad) sub (bad) fwait (bad) shrb (bad) (bad) mov mov mov lahf and rex.WRB movabs ljmp sbb test rcrl mov or push mov sub mov pushfq (bad) scas retq (bad) test or add int (bad) shl add lahf enterq fimul fwait jne outsl movsw sahf and ss in add stc or mov ja rex.WRX (bad) lahf jb pop cmp add or jo popfq mov add (bad) fwait push fildl or fstps movabs in cmp addr32 outsb int mov rex.WX (bad) pop jmpq rex.W xchg popfq test cltd mov fwait pop rex retq pop int (bad) fwait (bad) idivb cmp imul fwait xchg rex.WRXB xor xchg xchg adc jne pop lods cli fwait cmp mov rex.XB fwait rex.WX mov pop fwait add js movabs push (bad) cltd or lret sbb hlt sbb iret add pop sbb repnz rex.RX push mov mov repnz (bad) rex.XB mov pop out or mov xchg ss cli push loopne pushq iret or rcll (bad) (bad) cli clc rex.WX and mov sub prefetcht0 es (bad) cld add and in xor mov adc out rex.XB fs jl jne std gs vmovq lods fldl (bad) adc (bad) and xor cmp jbe jo jle push repnz mov sbb and sbb xchg scas (bad) (bad) lret and cmovle rex.WB sti adc rex.WR leaveq repz out rorb stos outsl cltd sbb sub adc fwait xchg pop in fwait out xor sub rex.WX loopne (bad) sub retq and pcmpeqd mov mov push sbb stos fisttp add lahf adc sub pop stos outsl jo test fwait mov mov out fwait mov jb fwait sub mov data16 callq (bad) je add fwait in jnp sub xchg negl flds loop mov (bad) push fwait cmpsl cltd mov addr32 xchg rex.RB fwait movslq cld sahf (bad) xchg xor in jnp sbb add jg rex.RX xor rex.WRX nop fistpl cmpsb pushq (bad) sub jo (bad) int addr32 movslq xchg cmpsb lods fwait rex.B xchg jb jrcxz outsl mov es adc ss data16 insl sub xchg cld fmuls cmc add in mov test (bad) mov adc lret pop iret imulb sbb std mov cld leaveq jp xor fwait jns rorb sbb jo push rex.WXB jl push fistpl (bad) (bad) mov (bad) mov cmp adc xor movsl mov sti int rex.R rex adc xchg rex.WRX fwait jle mov sbb insl pushq ds div fwait out jbe mov cmpsl sub fstl rex.WX fwait jp and rex.W fwait (bad) xchg testl pop fdivs sbb mov push fwait mov rex.WR adc or jnp or and std (bad) movabs test sbb jo xor sub fisub jae (bad) pop jmpq lods sub nop (bad) fwait movabs xchg fwait int (bad) jbe sbb cmp or jrcxz push movabs xchg sub push jnp xchg enterq (bad) stos fwait xchg mov cmp fwait int3 out push stos sbb sub or shr ds xchg add rex.W repnz rex.XB jmp cmp mov push mov and (bad) fcomip and movsl mov xor jge and sbb mov fcmovu jrcxz mov insb rex mov push fwait sub test add add xor sti add movabs movabs in sub in (bad) mov rorb jnp push insl fs outsb in jmpq adc (bad) xor cmp adc sbb fucomip push cmp (bad) mul or out js out in cmpl cmp mov fwait cmpsl jns sahf (bad) pushq jl rex.W (bad) (bad) jge sbb repz sbb (bad) jg jmp mov jl xchg lahf sti rex.RB pop mov rex.WX ss rcll push popfq enterq cmpsl (bad) mov shr rex.RXB cmp movsl in (bad) sbb je mov int3 xlat fwait insl jbe std mov (bad) jmp add cwtl mov pop movabs (bad) (bad) rex.RXB mov adc (bad) lret rex.X (bad) pop rex.WRXB jg pop sti adc test mov xor xchg adc jp pushq sbb rex.B sbb loope scas xor rcl imul popfq (bad) pop rex.WX (bad) inc mov rex.X (bad) (bad) orl sahf jae out xor jg lods mov push sub (bad) pop loopne jg add roll rex.WB xor sub (bad) imul mov sub in pop (bad) rex.WB movabs jl mov ds mov (bad) pop adc fstpl xchg (bad) (bad) out in mov add xor xchg xorl out sub enterq nop (bad) (bad) sub sbb or (bad) outsb jge rex cmpsl movabs (bad) ss rex cmp out sti iret sbb xchg test sbb push jo cltd je rex.RB (bad) je mov (bad) (bad) xchg sar (bad) ficomp hlt mov and mov sar sbb cmp rex.WX cli in jno popfq fstpt (bad) stos lea sbb rex.RX pushfq xor cs movb cltd mov lret (bad) xchg leaveq rex.WRX or xchg mov sub mov loop or std xor (bad) (bad) (bad) xchg out retq adc pop mov (bad) (bad) pop mull mov out js (bad) fidivl (bad) mov retq rex.XB (bad) movslq mov mov out jbe fchs out lods (bad) pop xchg andl jns xchg or sbb rex.WB int3 sbb add leaveq (bad) jno fwait mov cmpsl xor pushq lahf lods cmpsl sbb xchg adc cmp jno jae ja in mov add rex.XB sbb xor sub xchg movb lea (bad) pop insl loop xchg ss (bad) mov sbb sbb (bad) jnp frstor repnz pushfq (bad) movabs mov fistpl or xor jns fdiv (bad) adc xchg xor (bad) fstpl mov jl pop (bad) sarl jae callq sbb scas sbb retq fstpt (bad) xchg stc rex.WRX movsl (bad) mov sub rex.X movsb rcrb xchg pushq out sbb jge xchg (bad) xchg mov rex.WXB (bad) jnp fildl repnz sbb movsl rex.R (bad) xor pop imul movsb fwait cltd movsl mov jl xor sar pushq pop fwait rex.RXB iret or (bad) mov add ds (bad) ss (bad) jmp rcll out rex.XB ds (bad) mov rex.WRB or push add fstpt repnz cmc gs xor fwait or sbb cmp fistpl js mov sub push test sbb js xchg jb fistpl mov cmp test movabs sub jrcxz jge insb rcrl (bad) lods sbb xchg es (bad) outsb imul rex.WRXB sti lret mov xor xchg and push (bad) sbb xchg iret (bad) xchg setnp xor xor push (bad) or test insb and es mov adc mov (bad) cmp rex.WRXB ss iret pop callq and add lock imul cmp or subb imul sti cmp test xchg xchg test jrcxz fwait or sbbl add (bad) cmpsb loopne movsb movabs callq insb xchg jbe pop push pop or (bad) mov je outsb in repnz movsb es jno sbb sti sbb sbb js or (bad) (bad) push movabs (bad) stos (bad) or cmp pushq movabs mov sbb (bad) mov cmp movslq add xchg fnop in fwait repz in fdivrs adc or adc fwait movabs rex.RB or fwait stos mov loope mov fwait xor vunpckhps popfq adc movslq mov lods mov rex.RB notb cs sbbl sub add pop test xchg movabs push sbb jle enterq stc (bad) fcompl add jmp in int xchg rex.WB fwait lret pushfq out (bad) or (bad) pop push xchg (bad) (bad) fwait rcrb mov fwait mov lock jo cmpsl stos add jg (bad) (bad) mov fbstp pop jns sbb (bad) rex.RB adc mov enterq adc mov cmp icebp rcrl rex.WX adc jle fwait out insl scas cwtl (bad) fsts rex.WXB fistpl rcr retq pushq (bad) in xor rex.B fildl sbb xor jmpq and mov adc push or xchg pop (bad) int data16 insb (bad) (bad) std in rex.R fwait (bad) loope xor sbb clc or cs movslq pushq retq pushfq jle lret (bad) (bad) fwait cmp lret rex.RX out stos mov lods loop fwait ss (bad) xchg sbb jmpq mov and out (bad) jp sbb or rex.XB (bad) out mov (bad) lret jp rex.W mov sbb sub movsb xchg rcr fwait (bad) (bad) pop rex.RX bnd sbb jrcxz lret pop jp jmp (bad) (bad) xchg mov sbb xchg icebp push sbb mull sub cld mov or rex.WRX data16 out fwait xor xor pop movabs (bad) jmpq cmp (bad) mov jmp mov (bad) xchg or add rex.RXB loopne fcompl xlat and fwait mov rex.WRX callq mov mov mov movabs (bad) gs xchg stos push mov cmovb xchg fwait xlat jrcxz rex.WRXB add adc (bad) hlt cld xor fwait jmpq (bad) out (bad) icebp mov js sbb (bad) pop rcll xor fsubs push rex.B test xchg andl xchg outsl sub mull rex.XB data16 cmc sbb add pop fcomi jge,pt cld mov (bad) xchg bnd stos lret nop movsl movsb jl scas sbb pop (bad) iret fwait pop sti xor (bad) sbb lods and fwait insb jmpq (bad) out sbb mov xchg es out adc add rex.R sbb cmp out pushq fcmove pop setge xor roll sti xchg (bad) xchg or jns mov callq sahf xchg sbb out pushfq sbb mov (bad) or push cli lret or sar scas (bad) in cmp fstp fwait lret rex add sbb or (bad) pop mov (bad) out fimul mov mov or mov mov decl mov rex.X int icebp sbbb es xchg rex.X cwtl jge enterq cmp js mov clc test test (bad) (bad) lock rex.X rex.WR (bad) xor fmull cmovns (bad) sbb jmpq (bad) or mov movabs push shll rex.WRX rex.WRXB rex.RX rex.WRB leaveq or or (bad) cmpb (bad) sub cmp js sbb xor enterq mov test outsl sbb lahf test add (bad) incb orb iret setnp sbb sti pop or js adc (bad) (bad) out repz fdivr rex.RXB fwait push (bad) popfq mov sti repnz js mov leaveq scas fstpt (bad) jge int fwait es xchg sti jne (bad) fwait or jnp movsl sub rex.RB (bad) fdivr lods bnd rex.WRB cs iret rex.WX iret fwait push add cld (bad) (bad) cltd fwait pop lret xchg insl xchg repz mov (bad) adc mov rex.W cmpl imul (bad) (bad) jmpq rex.RXB leaveq fwait cmp (bad) push iret fbld fwait xor (bad) add (bad) push movabs jno jge fwait mov test sahf sub xchg fwait rex.RX xor rex.WXB fildl (bad) adc mov and in insb mov rex.WRB addr32 rex.WR test fyl2x out jo fwait mov push pushq sbb push addr32 cmc fwait shl mov jge mov pop out imull fwait sub pop add sbb and sti mov lret rex.WRX rex.R (bad) movabs jmpq lahf loop (bad) leaveq js or notb jb rex.WXB xchg fwait (bad) popfq test stos in add (bad) or mov xchg (bad) sbb push loop clc mov fwait hlt xchg adc fwait and (bad) mov popfq lret (bad) fwait or std lods rex.X cmp (bad) movabs rcll lods fwait jge loopne (bad) (bad) xchg (bad) fwait or jbe add fstpt (bad) repz mov addb adc or cmp xlat sarl mov fwait jbe mov pop int lea rex.WRX sbb rex.WRB insl add and mov je mov and fwait movabs xor mov push scas pushfq add (bad) iret add js sbb mov or out or rex.RX rex sti sbb xchg cli mov rex.WRB adc pop data16 (bad) movslq sbb fwait sbb (bad) negb add (bad) (bad) retq mov sub rex.WX push sahf adc fwait rex (bad) loopne mov movsl sahf cmp movabs (bad) lea outsb (bad) cmp fwait cmp fstps fwait (bad) mov xchg or xchg fninit sbb lods movabs and fwait xchg (bad) (bad) (bad) push fldenv (bad) shll adc mulb repnz scas pushfq es sub mov sahf (bad) fwait lahf xchg (bad) loopne insl fwait mov rex.WR ds movsb (bad) ss in fwait hlt retq scas add push mov mov sbb mov lods mov movsl sbb or fwait (bad) jae mov sbb (bad) jl and (bad) ss (bad) (bad) adc out cli xchg jns (bad) jmp xor (bad) jrcxz sub in xchg rex.RX (bad) jle jmpq xchg add retq pop adcl sub jle xlat sbb repz (bad) (bad) movsb outsb jnp cmpl lods ja rex.WXB psubsw push sti data16 movsl subl jmpq add jg (bad) movabs out fstl rex.WRX cmp in fwait (bad) dec or pop push icebp fwait rex.X stos pop imul pop fwait (bad) es pushq vfmsub132ss mov push pushfq and pop mov fildl xor gs fwait xchg mov mov push sbb fwait (bad) rex.WRXB lods ss lret iret or xor cwtl (bad) ds cmp sub adc xor sahf mov or icebp (bad) pushfq retq jns insl pminsw rex.X sbb xor mov (bad) cmpb xchg lock pop (bad) in es fisubrl pop sbb test lahf fcompl xlat leaveq outsl enterq (bad) mov fwait mov sbb retq movabs mov data16 stos rex.RX rex.RB xlat insl ds lock xor fwait sub (bad) lods mov (bad) lock sub sbb popfq in lret divl lock in cmp (bad) movabs add cmpsl repz add imul mov imul fwait mov xchg rex.B sarb cmc ds pop in sbb orl fwait jbe and icebp cmp pop std (bad) mov stos rex.WB xor fldenv xlat stc (bad) fwait mov imul adc sub xchg repz cmp (bad) jle in outsl fwait lods pushq xchg pop add sub test cld mov jo out adc jl fwait rcrl xchg movabs callq movabs (bad) pop push pushq cltd fstpt test xchg stos stos stos add mov sbb xchg repz test ds je or mov ror shl sti (bad) pushq pop rex.RB fwait xor xchg pop lea adc pop rex.WX (bad) mov mov add (bad) xor and lret cmp sbb testb and fwait or xor rex.WXB rex.RXB fwait jle cli add cmp fs mov enterq adc sbb je fwait cmpsb sub sbb mov sbb cmp (bad) pop adc push or pop stc (bad) jno cmp (bad) fwait add movabs (bad) pop pop add pushfq cli fxch cmp push cltd mov leaveq scas (bad) rex.XB fstps outsl icebp sub loope xlat loopne sub mov subl (bad) outsb (bad) push mov rex.WRXB mov mov out and fwait rex.W (bad) loopne hlt jbe rex.RX enterq sub mov mov mov test adc fwait xchg retq rorl sub xor sbb iret test int3 test xchg cs sbb (bad) xor outsl jo or jno sahf xchg fldl rex.RXB jo adc test pop mov fwait cmp (bad) xor and (bad) (bad) xor rex.WRB (bad) test rex.B fwait mov insl in xor xlat mov sti (bad) sarb xchg mov outsb pop rex.RX out and cmc (bad) clc xor loope sub xchg cs adc scas mov fwait insl cmp sbb pop in hlt xlat outsl mov movslq fisttpll icebp or sub push sub mov (bad) rcrl stc mov xor mov xor xchg insl xchg popfq xchg xchg cwtl int popfq fnsave sahf mov pop in xor movabs (bad) lret hlt mov cmp (bad) mov outsl (bad) rorl movsb jns (bad) movslq and jmpq in (bad) je or rex.WX jmpq addr32 loop xor sbb jb movabs jns (bad) je (bad) pop imul es sbb lret scas pushq outsl cmpsb fldt cld lret sub xor iret mov sbb in insb insl outsl jbe adcl fwait mull xor and (bad) mov stos sub mov leaveq mov adc cmp js popfq fwait lret mov fwait add cltd lods icebp jb mov sti (bad) fwait rex.XB hlt mov icebp xchg test js add fwait punpckhwd jrcxz add mov xchg in leaveq rex.WRX gs add mov out add rex.WX je in jo and fistp sub (bad) movsl insl std (bad) loopne,pn sub (bad) (bad) cmc fwait callq sbb (bad) (bad) add lods (bad) fs mov push pop js incl movabs btr insb push fwait jb pop rex.WRXB rol pushfq es (bad) je pop retq mov mov mov or outsl iret fistpl cmc loopne adc jp out in mov callq icebp mov jae push movabs (bad) lret loopne imul lods stc rex.RB xchg mov xchg or movabs mov mov fwait retq xor pushq mov xchg jmpq cld (bad) rex.WRX rex.WRXB and push fcom xchg sbb jl jmp mov jbe xlat (bad) sbb and jle lods rex.R pop std imul (bad) cwtl jl (bad) cld jge or cmp test and jp mov mov decb sahf jne addr32 insl cmp xchg ja jrcxz (bad) jnp data16 rex.WRX (bad) ss sbb pushq rex.RX push jrcxz jge lret data16 xor cmp push movabs pop jl,pn and std stc retq rex.WRXB (bad) (bad) clc xor adc and xchg por mov and or add sahf push xchg loopne mov (bad) sub test hlt xchg pushfq and mov xchg pop jne (bad) addps (bad) (bad) push pop push cmp adc jl adc test mov test jo popfq sub (bad) sahf hlt push and (bad) stos push mov test pop (bad) je sti movsb (bad) xor jl cmpb icebp fldpi push mov (bad) loopne add mov fsubp je sub jno mov (bad) jrcxz (bad) (bad) (bad) fcmovne lock add fwait outsb (bad) std pop sarl adc fbstp cmpsl cs (bad) fwait xchg (bad) rex.X xchg cmp cltd xor imul mov jb cmp jmp hlt xchg imul xchg fwait push (bad) scas repz (bad) fwait roll in and fwait xor addr32 jmp fwait sub xchg stc outsl movsb rex.WXB fwait adc cmpsb sahf sub cmpsl stos stos adc rex.R jge adc jae in (bad) pushq mov sbb stos sub add scas xor fistp jle shr fwait stos (bad) (bad) jp sbb sti ja (bad) fwait (bad) push test fcomps xchg xor push sti add bnd rex.WXB fwait jnp in movabs jns (bad) cli push sbb (bad) movabs mov or or adc fwait out or in stos push add jb xor cmp rcll (bad) (bad) lods imul (bad) cmp roll cmc sbb lods xor (bad) xchg push (bad) fstl rcll cld rex.WXB hlt retq (bad) mov sbb (bad) pop (bad) je scas rex.W rex.WR (bad) fwait js vshufps (bad) cmc add fwait pushq in xchg (bad) es fildll cmpsb mull mov ss stos (bad) retq rex.R fwait (bad) rex.WB sbb xor (bad) frstpm(287 pop out xor (bad) jae sti movsl cmp scas fimull fistl mov (bad) sahf jno int lret jae rex.WX (bad) (bad) stc add fwait jmpq lock movsl icebp (bad) lods movabs mov mov (bad) movsl xor fucomip enterq (bad) sti adc cmpsb stos xor xchg movabs lret xchg (bad) (bad) cmp rex.WX jno jne rex fisttpll std rex.R data16 out (bad) rex.WXB pop callq setle fwait add rex.X repz sub or sbb xchg sahf sahf movsb mov jmpq xchg (bad) adc sbb in fcomi imulb enterq movsl xor (bad) std gs xchg rex.WRXB rex.RX push fwait mov movabs mov (bad) sub add pop popq adc mov xor mov (bad) (bad) (bad) xchg sti add or fwait outsl jae (bad) (bad) movsl xor sub (bad) rex.WX fwait repz pop (bad) int3 (bad) xchg cmp leaveq movsb (bad) push addr32 mov xchg fsubrl out xchg outsb sbb lret jne add xlat mov adc movsb sub xorl (bad) jo mov sub push rex.X insl fwait xor or shrb cmp mov repnz fwait sti shlb jg xchg sahf loopne mov (bad) fcmovne push (bad) scas adc psrlq (bad) cld rex.X sbb mov mov movabs (bad) mov scas fwait loop (bad) add (bad) mov cmp xor lret out retq rex.RXB mov mov js (bad) add sahf mov (bad) jns es rex.XB fistpll pop in push pop jl sub adc mov sbb movabs mov sbb pushq cmovs rex.B mov cmp jns xor adc out (bad) scas jbe lret jno rolb rolb (bad) xchg es (bad) adc mov sub mov mov insb retq retq in divb jrcxz sahf iret cwtl sbb xlat jp sbb sub pop stos pop (bad) cmpsb mov rcll lods xorl xor rex.B rex.WRXB addr32 jl popfq outsb and pushq rex.RXB mov pop retq in xchg and or repz fisttp mov pop xor pop add mov mov xchg (bad) xchg cmp sahf jno pop cs cltd je xchg cmpsl cwtl (bad) loopne std in mov shr scas in (bad) add rex.WR jae adc sub test xchg in popfq movsb fwait test (bad) and (bad) fwait xchg rex.WR cmp loope xchg sub movabs mov add jb mov movabs mov fwait and (bad) xor fwait retq rex.X push test fwait lods mov lret cli lods fsave outsl jne sub test (bad) xchg mov (bad) sti adc fwait mov and (bad) xchg mov vaeskeygenassist fwait mov push fildl gs (bad) sbb xchg (bad) jns rex fwait ss test fwait mov jne mov (bad) fwait sbb movabs xor fnop (bad) adc sti cmp pushfq rex.WRX (bad) pop ja or (bad) (bad) (bad) pop fwait gs test sbb mov pop (bad) cmpsl sbb xor sti popfq cmp fwait retq xchg repnz outsl push sbb mov cmpsb xlat add sub jle nop adc jrcxz lahf (bad) push pop stos mov xor or mov jp fwait cmc divb mov fwait repz (bad) push sub popfq int adc cmpb (bad) vmaxps (bad) rex.WXB rex.WR rex.RXB jno mov retq shrl out adc jrcxz mov cmp (bad) jns imul fwait xchg movabs pushfq mov fdivrs fcomip xor fwait test sbb adc gs sub (bad) movslq out (bad) fwait adc stos mov xchg push sub mov add mov jge rex.XB rex.XB rex.WXB outsb rex.RXB fwait testb mov nop pushq mov ja hlt fildl fdivl pop jae or lret (bad) cmc rex.W fwait push (bad) rex.WR enterq stc gs mov jl imul sub rex.WRX jg sbb xchg and outsl movsl movabs sbb rex.WXB fwait jp shrb (bad) lods mov mov fistpl jl in cmp mov js fwait (bad) int3 fbld or (bad) sub nop push loopne add sub movabs jns adc lods mov fcom (bad) mov popfq xor cmpl loope jae lahf xchg mov (bad) sbb rex.RXB add movabs fwait mov xor (bad) or mov jg rex.B pop xor mov sbb lods lock pushq pop mov repz fcomip sub outsb out iret adcw fdivrl jmpq cmpsb data16 loop mov xchg rcrl mov push mov fwait xchg movabs movsl movsb stos scas xor in hlt (bad) mov (bad) sub mov (bad) icebp movabs test fwait and (bad) insl rolb jle fwait and js stc ja out fwait clc jbe or (bad) test mov mov (bad) imul cmp (bad) add movsl jno push adc fnstcw sbb push fwait loopne je or (bad) in loope (bad) (bad) movslq (bad) hlt (bad) pop jne js sti add cmp nop (bad) mov in (bad) loop (bad) fwait scas (bad) add cs fwait mov jne movsb rcr or out cmp (bad) sar pop stos cld pop movslq sbb test (bad) sti rex.WXB sub jmpq and rex.W (bad) fwait (bad) (bad) movabs cmp mov rex.WRXB and outsb rex.B pop lahf callq retq mov cld fwait test pop cmpsb shl cmc ss push ud2 mov lock (bad) (bad) rex.WR mov push pushfq jmpq rex.WXB (bad) jp mov out shr fwait lock divb adcb pop stc sti cld or (bad) lret push pop ss (bad) scas mov and int3 rex.RX retq pushq sbb mov (bad) xor and add fwait jb sub jne fwait and rclb rex.WRB rex.WB rex.WRX add retq fwait sbb push jnp test sbb cmp rcr add mov (bad) xlat xorb (bad) sub lock mov xchg fcoml fildl rex.WRX mov sub fwait pop lock jp mov out sbb xchg sbb pushfq rex imul js rex.RX fwait lret xor (bad) rex.WRXB lock and (bad) jg (bad) fimull sub mov (bad) lret out rex.XB and adc pop push jg neg fucomi mov (bad) adc or mov in test repz mov fwait xlat fs pushq cmpsl mov xor (bad) add mov mov pop lret out xchg sbb push jge stos and sti adc jg or int or mov test lock pop xchg jo mov mov (bad) and movabs xor out fwait adc sahf jp loope xor fwait sub and sahf mov add mov pop fwait in imul (bad) fstpl movabs xor jmp adc rex.WR push fwait xchg pop push movabs sbb push pop adc (bad) stos imul iret loop add in test cs insb icebp sbb add out xor sti movsl stos fwait loopne sub pushq gs jb jrcxz or add xchg cmpsl faddl fldt push (bad) cwtl sahf (bad) ja movabs sbb fwait jrcxz loopne mov rex.XB je cmp lahf sti add adc pushfq js pop jrcxz xchg stos (bad) jns (bad) sti xor pop pop (bad) mov jg pop mov pop fwait add idiv xor cmpl int int3 mov imul (bad) sahf stos lods or imul rex.X fwait outsb jns cmp (bad) in mov out callq sub add mov orl sti push mov (bad) or std fwait rex.WRXB (bad) or rol sub popfq scas mov repnz imull sub cmp pop fmul xchg callq mov divb imul insb outsb pop add in or adc sti test xchg or (bad) movabs subl in lock rex.WRB cltd (bad) movsl mov sti or adc sbb frstor movabs (bad) xor cltd mov xchg and mov retq push jb xchg out sti cmp mov fwait (bad) xor sbb (bad) fnstcw xchg xor (bad) jnp adc pushq xchg cmpsb add (bad) pushfq add jmp mov adc (bad) sub fwait in or mov (bad) loopne incl (bad) loope sub push fwait jg cli fsubs rex rex.WX fwait repnz push (bad) xchg xchg hlt sbb xchg add push loope and lahf shl mov pushq add (bad) mov and test (bad) mov mov sbb loopne fmulp xchg out adc (bad) loope jno xor cmp or mov rex.X sbb jle jg rex.WR mov in cmp rex.WRXB or cmp mov sbb rex.RB jrcxz sbb adc xchg imul loopne xchg (bad) rorb mov lahf (bad) loopne pop (bad) jnp rex.RXB (bad) jo addps decl sub or fadds rorb or mov mov sbb movabs sbb insl xor subl jb pop retq rex.B data16 jno rcrl cmpsb imul jo in sar push and rex.XB scas jb in pushq (bad) imul (bad) (bad) rex.WRX rex.XB dec (bad) imul rex.WRXB add mov jo add jne pop out and lods sub (bad) shrb cltd repnz fsubr add int3 cmpsl movabs out mov or jo sub sbb pop mov ror adc pop mov test rex.WR cmp mov enterq pushq xchg fisttpl repnz fsub movslq mov sub loope cmp jrcxz xchg sbb repnz push or sbb mov push (bad) sbb adc cmp (bad) lea jl std fnstsw imul push xor and xchg insl adc jp (bad) and (bad) (bad) ja in cmp lea int3 pop movslq mov add (bad) sub pushfq rex.X insl mov je (bad) push pop xchg fsubl loop loop in fistp int3 xchg (bad) add and pop rex.RX (bad) jb int3 sbb addr32 jne fidiv scas mov roll sti jb or or sti xor test and retq movabs enterq cli (bad) pushfq push mov adc and in xor movsl clc jmpq mov mov (bad) jo and (bad) xor callq sahf loope rex.R js fmull mov cmp and (bad) jbe cmp fcoml rex.WB mov cwtl lods xor cmp xor pop pushfq sub jmpq cmc test cltd xor pop pop adc xor jo andl pushq sub movsl add fstpl mov outsb sbb adc sahf nop fldcw cmpsl cwtl (bad) sahf (bad) movsb push jge loopne outsb mov loop movabs rex.XB sbb (bad) jl pop data16 cmp lea (bad) push sahf and (bad) fwait jno jbe pushq movabs xchg cltd insl or js push clc mov add mov (bad) (bad) mov fistp jne repz retq scas pop loop (bad) adc or cld (bad) repz out rex.XB pop jmp loope sbb je cmp (bad) (bad) jrcxz jo add rex.X cmp (bad) int3 sbb rex.WR lsl stos insb movabs testl xor movsb decl rex.XB cmpsw test (bad) (bad) (bad) cmpsb or xchg xor adc jbe icebp cmp (bad) cmp jbe rex.X outsl test jbe mov int3 jmp xchg push mov retq cli je (bad) hlt jne pop xchg cli push popfw addr32 rex.WB pop mov fldl fsubs lret xchg movabs (bad) jne lods sub lret in sbb xor xchg popfq mov xchg in iret in push mov iret jb (bad) xchg rex.X xchg rex.WR xor (bad) xchg sbb sti (bad) push (bad) (bad) xchg (bad) stos (bad) and ss stos and (bad) lret sbb (bad) mov jb in (bad) (bad) mov push (bad) pop fdivrs sahf push (bad) add pop scas adc push mov clc push int3 jp cld int lret rex.WB (bad) test lret (bad) cmp mov rclb nop (bad) mov lods mov (bad) mov sbb pushfq (bad) incb jo rex.WR gs loope sarb xor cmp in (bad) (bad) (bad) rclb int sub or mov xchg jae pop repz adc fsub mov mull cmp pop pop or (bad) cmpsb imul jl rex.WRB and (bad) (bad) (bad) movabs ficomp sbb xchg push push and xchg std in adc or jrcxz xor lret and push in pop xor xor sub sbb mov retq mov mov pushq sti lret cltd test rex.WRXB sub push jo (bad) xor (bad) xchg mov rex.W (bad) fnsave in repnz jns (bad) jmpq pushq push callq popfq rex.WB and loopne add pop xlat cmp (bad) pushq fdivp adc cmp flds callq (bad) adc lahf rex.RXB cwtl or enterq xchg sbb jo push and (bad) xchg popfq and (bad) (bad) cmp (bad) sbb insl mov cmp mov rex.WR hlt sub movabs jo lret (bad) and add scas mov lods push and retq (bad) mov iret int3 leaveq sbbl popfq test pushq mov or jl cmc jmp jb (bad) (bad) sub stos and push lods mov iret js test mov jnp fwait mov xor (bad) cld sbb (bad) jns mov rex.WXB (bad) or in clc (bad) (bad) push jrcxz fwait (bad) jle addr32 mov push fs addl rex.WR rex.WRXB or pop (bad) pushq sub enterq fwait (bad) pushfq jbe mov je fwait mov pop push sbbl icebp mov (bad) rex.R xchg (bad) xchg xor mov (bad) mov fwait (bad) movabs pop add mov xor pop sahf cs rex.WRB sahf mov sbb fdivl fistpl push lea fwait test movsb mov jp retq xchg rex.R fwait movabs or icebp fldl xor fwait sub (bad) out or (bad) mov push fwait push rex.RXB (bad) xchg rex sarl mov lret (bad) movsb rcr adc xchg xchg cmpsl sub xchg add sbb jnp sub (bad) (bad) int3 (bad) in mov movabs add (bad) rex.WR sub imul std (bad) sbb push retq (bad) fst (bad) jne pop pop rex.X cmp (bad) movslq mov xchg pop sub lods xchg (bad) movabs (bad) mov and addr32 rex.R xor sbb (bad) xor movslq (bad) addr32 jrcxz mov cmp int out and ss rex.XB ds jp,pt pop retq (bad) xor enterq callq rex.W push xor mov jae roll leaveq push mov (bad) (bad) lahf cmpsb adcl push pop cltd push jg xchg sarl pushq test data16 mov push stos or mov ss clc rex.WR jmp cld int3 icebp mov fistpl push xchg (bad) out fdivl (bad) loop fisttpll or sbb mov es and fnstcw mov mov and lea ja push callq rex.XB mov cmp sub cmp fcompl xor xor jne xchg (bad) or hlt xlat stos jg xchg sub mov jo in callq (bad) (bad) sub mov iret pop outsl sub (bad) or mov jmp imul mov mov xor (bad) and mov rex cmp xchg cmpsl sub scas in sub sub ja movsb jae mov cltd (bad) rex.X jnp pushq lods push cmp xchg jge in rcrb leaveq xlat (bad) jnp xchg je and jbe adc sbb mov mov xor test rex.RB or mov rex.XB loope,pt (bad) mov (bad) in leaveq push fstpl rex.WXB rex.WB push xor cmp enterq jge out sbb (bad) int3 xlat repnz adc ficom (bad) (bad) and (bad) pushq retq adc cmp or data16 test rex.X fucomp out sar sbb cmp adc movabs sub test or scas (bad) xchg (bad) faddp out fucomp sbb rolb cmp movabs loope orb (bad) fucomip adc cltd popfq popfq (bad) adc jne pushfq popfq cmp (bad) mov ss leaveq (bad) jnp mov xchg xchg out outsl xor jb ds push rex.WRX (bad) ficomp mov push cs xor enterq adc fcmovnbe xor jrcxz (bad) pop jg out rex.WX repz mov mov cmp out fisubr sub repz pushq cmp rex.WR stc sbb loop pop cmpsb (bad) sti stc popfq cs xchg loopne imul andb (bad) repnz in callq xor add push jge insl test sbb or out scas push xchg (bad) rex.RX gs adc int retq (bad) cmp je rex.WX rex.R rex.RB (bad) sbb fistp addr32 fldlg2 lods rex.WRXB ja pushfq mov xchg and (bad) xchg xchg fcomps leaveq jmpq add mov push jle rex.WRX (bad) fstpl andb lahf jbe fs fistl (bad) gs popfq pop jmpq rex.RX sbb popfq (bad) rex.RXB or fisttpll jno int3 cmp popfq jb cmc sbb mov cld pop jle loope (bad) mov cmp repz rolb clc xor mov mov sbb rex.WX lea push js add (bad) jg xchg jae adc cwtl rorb and pushfq or (bad) adc (bad) icebp cmp mov movsb (bad) (bad) pushfq out shlb rex.X sbb lcall mov xor sub (bad) pop (bad) or and rex.W pop or push mov mov cmp mov clc and fs stos push cwtl in mov out shr sbb xor push push sbb es (bad) and fdivrl add in test mov add stos adc in mov pop rex.XB rex.RB nop rex.XB rex.RX es and or insb (bad) (bad) testb xor lods xchg in (bad) sub mov (bad) in (bad) ficomp and rex.R mov pop (bad) lods retq cltd fs jb scas (bad) std test jbe pop rex.RXB int iret pop mov rex.XB fistpl xchg push sub jno xchg rex.WRB scas add rex.WX test sub test mov movabs sbb jns push fwait out add adc xor (bad) clc (bad) fwait lea pop out and (bad) add (bad) mov mov mov jle nop mov xchg mov mov leaveq pop subb iret retq add loope fwait scas xchg mov pop fwait icebp rex add cli sbb (bad) fwait test cmp sbb mov sti test in rex.WRXB in cmc fcompl ficoml rex.RB fwait callq add fwait out sbb test add fbld fwait loopne rex.RX add repnz and jne test push leaveq jnp fwait (bad) rex.RX movslq lret mov cmp (bad) in callq fwait jbe mov fmulp fistpll fwait and es fwait mov mov add xchg imul rcrb sub iret rcpps xorl sub xor sti fwait xchg (bad) (bad) mull rcrl mov (bad) sbb fwait int3 xor scas cmpsl pop loop fwait movsb pop hlt mov popq mov in movabs pop lods adc xlat xor fwait xor movsl iret (bad) xchg movslq mov add stos jmpq movslq mov fwait loop retq (bad) mov (bad) sbbl (bad) pop retq and push and add cwtl (bad) fucomp jae out sti jnp lods (bad) or stos sub cmp test fwait jl imul stc (bad) pop loope popfq (bad) shrl mov or (bad) sbb loopne mov add jmpq push or rex.WRX push mov es or cmp add mov cmp xor std sbb mov or loop and loope fwait mov int3 shlb jns push scas test add (bad) xchg lea fwait cmc mov and add (bad) (bad) xchg sbb fwait mov or rex.WRB rex.WRB rex.RB fwait mov cmp jmp pushq and fwait test stos lea (bad) cmpsl (bad) (bad) mov repz (bad) mov jl callq pop sbb push sbb imul stos movsb mov addr32 rex.RXB rex.WRB and add jp cmp sub rex.WR mov jg cmc fs stos cmp fwait mov rex.WXB mov (bad) (bad) lret (bad) or (bad) pcmpeqd movabs pop xor fwait mov jrcxz out callq repnz popfq rex.B sub movabs jnp fucomp in fisttp fwait xchg test lods hlt jno fwait adc jle sbb or fdivrl sbb or (bad) es scas movsb mov (bad) fstps add and rex.WR (bad) (bad) dec out or idiv data16 or movl xchg movsb std fwait (bad) enterq cmp xor insl (bad) (bad) (bad) mov shr rex.X and pop mov rex.RXB add (bad) lret mov (bad) sub sbb leaveq (bad) cltd (bad) cmp enterq push sahf push retq sbb shrl sub jp adc test and lret or cmp sti or sbb repz (bad) push rex.WXB (bad) out sti jae pushfq fcomip out iret (bad) shrb cli loope xchg mov imul mov sub (bad) jb cmc fwait (bad) test push sub adc (bad) push paddd (bad) pop imul (bad) rex.WRXB push movabs shll pop pop (bad) mov cld pushfq andl xchg mov add pop xchg mov stos add lods adc fcos sbb and js icebp xchg push cld cs data16 (bad) rex add test cld xlat mov stos rex.WXB xlat test sub in push in cmp mov xchg rex.WRB pushq (bad) mov cmpsl (bad) popfq and movabs sbb jnp (bad) lea sub pushfq (bad) (bad) (bad) addr32 rex.WRB mov es stos cltd cmp lret pop mov imul (bad) rex.WRXB and (bad) xchg (bad) stc loopne gs (bad) jno insl lods out mulb (bad) push lods mov loop fwait rex.WRB rex.WB test (bad) mov ds cltd inc adc xchg outsl fwait mov shlb jae cld adcb icebp movsl int rex.RX fwait orb scas sub xchg sbb (bad) jg xlat sbb rex.X fwait (bad) or (bad) adc lret (bad) fisttpll nop (bad) popq rorb (bad) add rex.WR mov idivl (bad) lea sbb test std mov (bad) fisubrl add pushq neg popfq sbb addl movabs (bad) sti rex.R inc jge in fwait jmpq stos sbb roll (bad) movsl movabs fwait or lods rol (bad) je sbb adc mov sbb jl iret in ffreep fwait mov movzwl rex.WR (bad) xor fcomps mov mulb pop mov movsb sbb (bad) rex (bad) rex.R cmp (bad) mov (bad) (bad) and xor rex adc cmp cltd in hlt pop add (bad) rex.RX xchg mov loop cmp addl or xchg (bad) imul add xchg loope mov or (bad) add ja js push fwait sbb mov fimull xor jmp pop adcl pop rex.XB (bad) rex.RX fwait sbb sbb rex jae sbb out fdivrs je out movabs adc (bad) mov movsb jge add (bad) std fcompl cmc (bad) rex.WXB rex.WXB rex.R repnz (bad) add xchg sub push loop jmp push adc mov xchg pop in fwait or xchg sahf pop cltd outsl sti (bad) in shll mov cmpsb imul rcrb sub ds jne xchg outsl repnz fwait or jp (bad) xor cmp jmpq pushfq lock mov (bad) popfq adc rex.WB lret or sub insb cmp cld rex.WRB rex.X fsubrl scas sub sub popq push std mulb xchg fildl sub leaveq fwait rclb push mov movabs sti jbe repnz mov adc sbb rex.XB popfq mov jrcxz addr32 jrcxz (bad) out hlt rex.RXB cmp imul movl mov push js (bad) lret mov insb pop cmp fwait mov (bad) jnp (bad) notl cmpsl mov and bnd and rex.W lret loopne (bad) imul scas sti mov rex.WXB ds stc fwait pop hlt mov lea push rorb lods fs sub rex.WXB cmp in jns mov mov andb adc or (bad) xor es fstpt (bad) pop mov or push fwait rex.RB adc icebp (bad) rcrb and (bad) movabs fwait push jnp int3 ficompl push loopne cmc mov iret mov jb movabs stc fwait rex.WB mov ss roll (bad) (bad) sbb push jle fwait es orps mov fwait stos mov or icebp rex.RXB xor fstpt mov fcmove test retq es lahf jmpq add sbb rex.X add add rex.XB rex.WX jo (bad) sti jns mov cmp jge (bad) fcomi cwtl (bad) xor pushfq push xchg sub test (bad) xorl (bad) mov push cmpsb jno mov fwait jl rex movslq rex.WB (bad) retq push stos adc ljmp jmp xor xchg (bad) sahf pushfq and fwait insl leaveq mov lods adc (bad) loopne mov lret mov sar add (bad) jmp xchg or adc (bad) fwait ljmp cmp mov (bad) div sub push fist sbb (bad) or movsl rex.WB leaveq fwait incb loop jmpq add pop pushq retq iret or (bad) cmp push mov mov jmp mov (bad) xchg rex.WB jmp fwait cmp add sbb (bad) (bad) xor ja cmpsl mov adcl sub jmpq pop (bad) rex.WR ss cmp xchg pop pop push xchg or sbb and mov cmp pushq loope jb fidivr callq popq rex.WR rex.RXB fwait adc cmp mov rex.RX (bad) ss insb jb (bad) repnz andl fwait xor add lock out (bad) add repz leaveq sti (bad) push jg jmp add popfq fwait adc ficomp adc lods subb movsb repnz (bad) (bad) xor outsb rex.X mov (bad) pop stos mov movsl mov enterq adc jo callq movsb jnp and fwait add xor lea lods xor cld cmpsl gs mov sbb pop add fwait setp pushq fwait xchg out mov (bad) push sub or negl jrcxz add (bad) in jl fwait cmp push movsb fwait xchg jle adc adc mov lahf push sbb or add sbb (bad) fistp cmp or or loope movabs fildl rcrb cmp mov lea xchg jmpq or sub adc mov xchg xchg and pushfq scas in or xor sbb cmp (bad) enterq stos movabs sahf rex.XB ja or es nop and xchg test vmread pop sub (bad) mov xor iret out jno or pop add clc jmp mov lea adc scas sahf and xchg cmp (bad) sbb (bad) in adc rex.W leaveq mov fwait add enterq push and pop pushq jae cmpsb fwait cmp push mov shrl (bad) pop adcl fwait jns push sarl xchg add callq fildl adc sbb fwait xchg callq and fwait push fstl mov cmp fwait int xchg rol xor cmp fwait pop out (bad) rex.WXB (bad) xor sbb xchg lret sbbl addr32 callq popfq and mov rex.B pop jmpq pushq popfq mov jmp jge pushq mov xor sahf (bad) mov popfq clc pushq (bad) adcl xchg negb rex.WB cmpl (bad) adc pop push lahf (bad) add add xor mov sbb (bad) xlat rex.WR syscall (bad) sarb (bad) out mov sbb test sbb mov addl rex.X rex.WRX rex.WRB repnz movabs or push out push fidivr hlt (bad) (bad) ja out cwtl psubd sti loopne or (bad) insb mov adc out sbb xchg sarl mov std sbbb or neg movslq jne sbb add rex.X sti xlat andl xor int3 mov mov fidivl (bad) std cmpsl xor cli adc xor movsb or stos test push std sbb add xor pushq movabs rex (bad) rex.WR gs pushq cld pop movslq rex.RB (bad) or and stc pushfq adc sbbl mov (bad) imul mov out sub (bad) in sub add or sub sbb add hlt icebp xor pop push popfq jmp (bad) mov lea jb jp pushq mov rex.W (bad) (bad) (bad) xchg popfq sbb (bad) or shll push cltd (bad) lods (bad) sbb lea lret cmp cs xor mov in rcll (bad) fmull lods lret pop pop outsl push outsb repnz rex.WR addr32 sahf mov pushq setb xor test repz rcr andl mov adc push or mov rorl (bad) movabs out cmp retq pop add (bad) sub xor sbb adc test lods mov rclb adc rex.WRX jmpq lret cmpsb cmc add fnstsw jbe push push movabs lods fstps retq mov fwait enterq cli psubq fwait mov movabs (bad) rcrb jns iret xor movabs sub movabs mov (bad) jge push cmc jo and in (bad) cmp pop and fwait jmp movsb in jae and jp outsb rex.RX sbb mov out fadd fwait movabs sahf rex.WRX out (bad) mov pop xchg cmp add mov sti hlt negl cld jp sub outsb (bad) pushfq or adc jae rex.WXB rex.RXB cld (bad) test xor or xlat pushq fwait (bad) pop shl test cltd xchg lock cld fs sbb (bad) mov stos and or test sbb scas (bad) jmp (bad) jle xchg sub fwait (bad) pop jrcxz mov fwait pop jo sub js fwait (bad) rol rex.RB sub sbb insb ds hlt in (bad) popfq cltd mov xor xchg fsubrl cmp jle iret pop (bad) stc popfq and (bad) in add cmp mov out js xchg mov (bad) out rex.WRX cld (bad) jmpq sbb (bad) js sbb retq faddp cmp movabs rex.X cld mov sbbb add xchg out sub rex.RXB (bad) int mov insl sbb loop pushfq movabs (bad) sbb jmpq mov mov adc es icebp adc cmpsb rcrb rcrl jl jbe lods movabs push and jle (bad) test xchg mov add (bad) mov mov sbb xlat nop sbb or loop mov lret jo push xor cwtl sub cmp movabs ss fsubr gs xchg or add repz sbb pushfq xor xchg mov pop adc (bad) stc (bad) (bad) cmp retq (bad) or xor (bad) jrcxz (bad) (bad) callq xor popfq repnz outsb (bad) sbb mov imul sbb xchg xor rex.WXB add popfq jl (bad) xor jp push (bad) cmp sbb sub or repnz retq add es cmpsb rex.RX (bad) (bad) ficom out add (bad) push ds mov xchg incl pop xchg stos xor xlat lret mov sbb pop mov pushq cmp hlt stos (bad) or (bad) es (bad) addr32 adc cld fwait rex.WX mov int3 pushq xor int3 cwtl mov (bad) mov (bad) pop (bad) pop rex.B enterq (bad) push mov jl rex.WB adc rex.RX cmpsb and rex.X test cs (bad) mov (bad) fbld repz mov cld decb lods pextrw xchg xor cmp cmpsl rex xchg (bad) lea js test adc xchg cwtl sbb movsb and mulb xchg sbb in pushfq std adc in xor add movabs add xchg sti (bad) int3 jne fisttp (bad) sub push in mov callq sbb fsubs lods enterq (bad) ja movsl jne xchg xchg clc loope jge adc outsl sbb fisttpl ss mov push test push (bad) (bad) retq add xor sbb sbb (bad) lretw movslq rolb (bad) rcll (bad) out adc jp or mov xchg mov imul jrcxz andps sub mov rex.WRX rcrq repnz mov mov xchg loopne imul jns mov push lock sbb sahf pop and jb or rcll jle (bad) and decb rex.WXB xor xor pop cltd sub sbb rex.WRB ucomiss ss es adc (bad) push (bad) clc add mov fistl (bad) sahf out pushq test mov jg stc fwait sub xlat pop ds (bad) cmp add sti scas rex.W fwait lods xchg stc fiaddl in iret fwait mov repnz sbb out xor mov pop sub rcrl xchg xchg int3 jmpq fstpt add (bad) cmc movsl and fwait cmpb (bad) pop in rex.B rex.B fs rex.RX es (bad) mov movabs xor repz xlat ds xchg adc movabs movsl lret vpxor rex.RXB in insb test mov and cmpsb (bad) fwait mov jae cmc cltd movsb adc int rex.WXB rex.WXB ss xchg mov jne pop add pop fucomi xchg cmp retq add fwait cmc pop jno mov add movabs mov or mov outsb rex sub test push es (bad) and sti fsubr cs mov (bad) fdiv insb cmpsb rex.XB rex.B xor (bad) and outsb stc xor ficomp pushq ja jrcxz outsb rex.WB mov xor mov sub (bad) icebp je or loop mov fwait retq cmc (bad) cs sbb jbe mov (bad) (bad) in fcmovnbe jmp (bad) outsl notb jp jl pop mov mov mov (bad) mov cs add out adc cmp movabs movabs jne out xchg xor and pushq (bad) lock rex.WRX adc push fwait lods (bad) iret (bad) (bad) adc lcall mov movsb int lods adc push movslq cmp rex.X (bad) cs mov mov pushfq fwait mov out idivl (bad) pop jl lock mov in loopne mov cwtl sbbl push movsb lea or lods addr32 subb cmp ds in rex.WX fwait movabs pop std (bad) (bad) out push push xchg fildl and rex.RX lods rex.XB sub sar (bad) add fwait test pop cs outsb rcll stos lret mov mov (bad) xchg jns add lods lret repz fwait and (bad) jae mov mov (bad) movabs mov xchg add (bad) fwait mov mov adc (bad) and scas fwait in xor (bad) cmp (bad) movabs mov fwait sub es xor or sub add and rex.X push sahf (bad) data16 jge popfq subl fwait movabs lock nop mov mov sbb fistp adc movabs pop repnz or adc mov mov (bad) mov fwait cli mov sar sbb orl roll out xchg in sbb data16 pop push leaveq (bad) pop or sahf mov iret movabs ror pop xchg fwait cmpsl (bad) or (bad) pop (bad) cmp loop jnp rex.W fwait xor lods jle rex.WRX cmp in (bad) fwait popfq cmpsl mov jmpq sub test pxor fcmovbe out sbb int3 hlt sbb xchg cld and (bad) int3 gs xchg cwtl or rex.RXB fs js loop sub sahf and fwait test mov (bad) icebp add (bad) fildll rex.WRB fwait pushfq xchg xorb adc cmp icebp jl cltd mov flds cmp fwait negl rex.B push add (bad) jrcxz sbb sub fistpl mov mov (bad) (bad) fwait xchg scas test lods mov rex.WRB jbe,pt lock mov shll push scas out fldenv sti decl mov xor pop fwait es cmp adc cltd mov pop add (bad) lret and (bad) (bad) pop sbb out xchg cs fisttp (bad) stos jrcxz sahf push pushfq test jl lods imull xor outsl fwait xchg xchg cli sub fwait xchg jge or movabs lock push rex.B push movabs pop mov cs imul je xor sbb sub cmp loop sbb pop sbb loopne jae add loope nop sti fisttp stos out pop mov pop mov (bad) mov shll adc out psubq xchg nop test fwait lea cmp push fbld xchg sbb (bad) test xchg nop mov fistl retq (bad) movabs (bad) pushfq mov (bad) sbb rex.RX sbbl pop rex.RB out pushq mov pop rex.RX loopne out shl add movsb loopne in sbb sbb mov js (bad) lea rex.B fbstp std adc movabs addl movabs mov push sub std and mov rorl rex.WR pop shr loopne rol lock pop push add lcall mov cmp cltd fildl andb std sti or ds and sbb ss in mov and repz stc sahf jg adc pop xchg mov mov (bad) rcrl rex.X jae (bad) sbb xchg outsl pop imul mov test xor mov sbb rex.WRX cmp rex.WRB sbb cmp fwait and in loopne cld fwait push push rex.RB mov cmc retq and rex.RX sbb enterq sbb xchg mov mov sarb rex.WXB jrcxz lea rex.WRXB insl cmp cmp pop out fstenv roll cmpsb xor and out shrl scas (bad) ficompl retq cmp jp in fwait sti xchg or xchg hlt (bad) jmpq and in jo insl xlat neg pushq rex.RX rex repnz mov cltd fist fadds movslq movabs test mov fwait scas sbb mov jle mov xchg jl sbb lret sub cmp cmpsb (bad) pop mov push insl cmp jb rex.WR rex.WB fwait pop xchg imul or outsl push adc sbb adc fildl out (bad) loopne lea psraw mov (bad) add rex.X stc jae push and sarb sbb jge sti pop test or xchg adc cmc (bad) push shll fdivrl js popfq loope jmpq pop (bad) mov jrcxz jrcxz jge pop (bad) retq sbb (bad) or testl stc sbb mov fwait movslq rex.XB cmpb pop incl popfq sbb xchg (bad) div (bad) sub rex.WB cmp rex.WX in loop sub and push add fisttpl cmp add mov jno in test (bad) or int3 xor cli stos pop fwait js enterq test add lret cmpsl (bad) rex.B (bad) cmp rex.WR (bad) or (bad) iret test mov loopne ss fwait rex.W sarb xor fwait cmp (bad) rex.RXB cmp fs fbld lret or (bad) loope rex.RB cmp es lahf and (bad) insl sbb jo,pn mov xlat (bad) mov jbe and test pop sbb push loop push insb xchg movabs cld (bad) jno movsb mov and movabs movabs add in xor rcl mov fdivl jb movslq mov roll cltd rex.RX push fs rex.B rex.X push lock ss add jno xor cmp push (bad) loopne loopne (bad) sbbb lret rex.X pushfq (bad) insl popfq (bad) push adc rcll sti (bad) jg pop xchg sub pop jle pushfq gs xchg (bad) mov fwait jmpq pop or cltd sub ja rex.B idivb jrcxz movabs xchg (bad) adc xchg xchg adc in cmp jmp insb in rcrb mov or fwait xor mov sub (bad) mov jbe sbb lret mov jmpq jmp je ds shll push sbb nop (bad) mov sub fwait adc popfq outsb imul adc fistpl cli xor xchg fwait jl loope push loopne mov sbb mov push repz adc (bad) sub mov xchg and (bad) (bad) retq xchg lret jrcxz jge stos cmpl insl (bad) fcom push mov stc cmp loope cmp mov or mov jmp shlb sbb (bad) mov movsl (bad) mov mov scas fbld mov xchg sbb cmc lret push jmpq out lret or outsb cli movsb (bad) fwait cwtl sub (bad) fwait hlt xchg and xor in pop fwait xchg ffree andb jmpq xor jle cmpsl (bad) fwait mov push cmpsb pop fwait (bad) xor jrcxz frstor fwait jp cmp (bad) (bad) xor movabs mov mov fs scas jp jge or (bad) cmp rex.RB (bad) movabs cld rex.WRXB rex.X (bad) maxps xchg fcompl stos xchg mov (bad) sbb jl cltd scas (bad) (bad) add stc (bad) jae or nop jbe mov cmp fwait (bad) mov icebp (bad) pushq mov sbb jbe push jle in movslq cld iretw xor gs andnps rdpmc rex.WXB rex.W (bad) (bad) xor je lret mov sbb movabs pop loope mov (bad) or out rex.RXB cmpsb callq popfq jg retq popfq mov cmp mov andw fildl (bad) loop mov lods test mov loop data16 add xor xchg mov mov sub adc rclb in mov (bad) in movabs rcll rex.RX lods in ljmp test ss (bad) callq mov es (bad) (bad) outsb (bad) and and xor mov (bad) rex.WRB cmp xchg pop hlt rex.XB push roll fwait xchg pop out sub jrcxz xlat (bad) mov out (bad) or xchg xchg adc jno mov (bad) (bad) or movsl mov pop mov (bad) (bad) je repz jl data16 pop in adc adcl push enterq test (bad) movslq pop and cmc scas (bad) (bad) jno repz shlb xor mov out insb pop sbb rex.RXB gs clc pop fwait cmc loop cmpsl pushq pop (bad) push movslq mov lea negl (bad) jmpq mov jbe add rex movsl push (bad) xchg sbb jmp scas enterq mov in cmp (bad) in (bad) lret (bad) cmp mov lods push add (bad) rex.WR ja sbb (bad) adc cwtl pop mov in pop (bad) push lock sbb xchg pushq rex.XB (bad) (bad) stos push sbb in addr32 pop rex.WX push (bad) nop int3 mov or xcrypt-cfb cmpsl in imul out and xchg jns xchg xor popfq insb (bad) rex.WXB xchg or (bad) or mov pop shlb mov jno mov je push int3 mov nop (bad) movsl mov jl (bad) sbb xchg sbb (bad) addb stos xor xchg or test (bad) jrcxz fidivrl jrcxz jb (bad) pop mov (bad) pop fsubr and jmp stos (bad) rex xchg xchg add jle lods mov sub push retq push negb leaveq repz out cmpsb pop mov pop xchg shr mov sbb jb mov and (bad) retq outsb mov rex.R push mov out sti xchg xchg sbb popfq (bad) repz (bad) jno outsb (bad) cltd mov sbb pushfq (bad) sbb jle imul cmp ffree mov out (bad) pushfq pushq pop mov lahf int xor rex.RXB hlt in rex imul push cmpsb ja push jge (bad) insw (bad) out callq rex.XB jo std mov (bad) negl (bad) sbb mov in cmpsb rex.RX fsts mov jg cmp mov pop out cwtl rex.R lods (bad) addr32 jns sub orb add sub mov or jo add stos testl cmp cmp fxch movsb (bad) (bad) cmp js rex.WXB jge adc imul (bad) (bad) imul sbb mov push sbb test pop push cs (bad) insl push fs xchg jae fistp push loop (bad) pop rex.R test pushq add cwtl pop push test sbb or push xor rex.WXB rex.WRB rex.RX mov add mov jle lods (bad) mov (bad) idivl fild (bad) in cmp test (bad) add xchg movsl jg xchg cmp cmp (bad) sahf fwait js (bad) mov fsubr cltd fwait mov jmp sti (bad) mov add lock test lret decl fwait (bad) pop mov xchg in mov movsb std jle rex.R outsl out sbb sbb pop rex.WRB retq fwait jo push xor sbb (bad) test sub cwtl cmp jb jmp push pop sub adc cli mov (bad) xlat int (bad) mov cwtl jl (bad) rex.WRXB ds loopne movsb jnp sub stos stc rex.RB ss rex.WB rex.WB rex.RXB push (bad) xor lret rex.WRX rex.X push (bad) rex.XB sbb jnp jrcxz mov (bad) push psraw (bad) mov scas fwait (bad) cmp fstpl movsb rex.RB sbb sbb nop fcmovnbe mov mov js outsl repz push xchg retq cltd (bad) (bad) lea ror sbb out scas rex.WR std xchg scas (bad) int push xchg xchg imul jno testl mov adc rex.RB sbb pop repnz adc push add test movsl rex mov sbb loopne jmp fdivrs jbe sub and xchg gs add mov (bad) jns xchg or and push fstpt push int stos cld sub out rex.X xor fwait enterq je mov and iret rex.XB xchg cmp rcrb (bad) test add (bad) fildl vmovups add xlat or es cmp pop imul push fwait sbb mov fwait sub sub (bad) pop jmpq loopne fwait sarb leaveq callq fmul xor pushfq push xor rex.WR (bad) xchg sbb jb fildl (bad) pop loop mov push fwait (bad) fmuls xchg sbb fwait loop icebp rolb movabs (bad) add fwait repnz jg pop xor jmp cli (bad) movabs rex.WRX sbb pop fdivp xchg fwait or xor push divl iret popfq and leaveq mov ja mov sbb test rex.WXB sub fwait or subl push (bad) shr pop mov add xchg (bad) lods xchg (bad) mov (bad) fdivl xchg lock pop pop fwait mov adc lret fsubl push out pop sbb mov sti leaveq fiaddl xchg and rex.WB retq push jrcxz mov nopl (bad) rex.W (bad) pop mov cwtl icebp fwait retq pushq sbb fwait mov rex.RX xchg fwait cld (bad) xchg push rex.B fisubl sahf (bad) jp rex.RXB rex.WX fwait (bad) sbb sub adc sahf fwait add lods (bad) (bad) and mov jg (bad) (bad) insb jmp repz jge mov (bad) fwait int3 clc out rcll cmp xchg xchg xchg rcrl jp fwait mov (bad) (bad) repz mov out sbb movabs enterw fwait add cld mov mov imul sub pop cs (bad) xchg xor jmpq jno movslq pop mov lahf xor repnz loopne sub nopl push mov test lret (bad) push pop mov and faddl out fwait clc lods rex.B or fldlg2 (bad) sarl in adc sahf jo (bad) add repz jne fisttpll je fwait sub and or jp fs jmp popfq movsl cld add mov rex.R fwait rcll rex.WR rex.WB ds xlat jmpq xlat sbb xlat or rex.WX rex.RX add loope fwait rex.RB and xchg andl xchg leaveq (bad) mov jo mov add fstp callq fwait xor mov scas (bad) mov jno jb xor stos out cld xor pop sub fcmovnb mov lods sbb cli xor (bad) lret rex.WRXB outsb fwait mov jle fwait (bad) (bad) adc callq sarb test lods mull movabs mov (bad) (bad) rex.WXB xor mov lods rex.RX mov fwait and movsl jne pop add movabs mov out pushfq or (bad) xor imul jmp fwait cltd cs es test sbb in fwait (bad) push (bad) xchg rex.WB pop mov out jmpq lret pop pushq sbb push rcll (bad) and lret lea rex.WRXB repz in sub in mov fisttpl rex.WX sbb rex.WXB lods mov adc pop cmp xor add jb jno popfq xor hlt loop fistpl xchg out mov lods xchg fsts jle sbb cmc rex.WXB pushfq pop adc (bad) stos cltd sahf (bad) (bad) add cmp (bad) out (bad) (bad) sti cmp pushq xchg push (bad) rex.RXB cmp jge rorb mov movsl add mov xchg rex.RB pop or (bad) xchg (bad) or (bad) test scas sti jb xor orb callq jmp cmp xor in xor rorb es jnp outsl iret pop add (bad) fildl rex.RXB fwait push adc rex.WB data16 sti pminsw jp cmp fwait in mov (bad) ficom xchg sbb xor imul pop jae (bad) je test adc jmpq cmp sahf push paddusw xchg fcoms mov in cmc adc push cmp loop or popfq fwait jmpq mov in add jmpq add (bad) hlt lea push addr32 lahf mov jmpq sti gs jno pop (bad) fwait (bad) mov jae stos cmp mov cmp (bad) enterq fwait xor xchg movabs or and (bad) fwait jmpq shl mov add jg sub sbb ss pushq (bad) (bad) insb fwait (bad) or lret scas retq rex.X test imul cmc callq mov cltd (bad) (bad) mov sub xchg jnp es mov xor jne popfq or and jnp js (bad) (bad) faddl mov sub shll cmc fistl movabs (bad) xchg (bad) and shlb pop popfq mov push scas pushfq fwait push mov (bad) cld lret sub js (bad) lcall xchg rex.RB xor fwait int3 rex.B out (bad) push mov frstor xchg (bad) (bad) movabs fwait scas es push mov pushfq fwait sub (bad) lret rorl fwait out jg (bad) (bad) movabs shrb xchg add std out jns (bad) test ss push xor popfq jns sbb jns xor movabs adc (bad) pushq rex.WX and xchg (bad) (bad) (bad) xor ljmp sbbl adc out (bad) (bad) pushfq imul mov stc loopne sbb mov sbb rex.X xor cmpsb scas pop xor or (bad) mov sbb xlat add popfq rex.XB loope (bad) fstl sbb add sbb cltd lret xchg clc jle ds cmp xor fwait mov pop gs pop sbb mov retq loop out jmpq sbb and or (bad) rex.WB pop std (bad) sbb out rex.RX sub stos push (bad) fwait retq jmp or mov lret test fistl rex.RX (bad) push or jrcxz pushq or sub sahf fwait jmp rex.R stos fwait add insl hlt sti (bad) sbb jno add xchg movabs rclb mov sbb xchg pop xor rex.WB xchg xorl push sbb sar out retq scas fwait adc movsl (bad) rex rolb add (bad) xchg jrcxz movabs jle rex.WRXB fcmovnb rex.RX sarb movabs mov add fwait jrcxz (bad) xchg fcom add mov in jae mov (bad) imul add mov xchg (bad) out sbb and sbb (bad) (bad) or cmp rex.WR sbb adc ficompl xlat (bad) (bad) add leaveq sub (bad) lods fwait xchg sti (bad) movabs rex.WRX fwait retq imul adc and and and repz insb fwait xor xchg or push sahf movsl or addr32 (bad) sbb rex.XB fwait and push jnp js pop sbb xor repz or fwait (bad) (bad) and rex.R adc rex.XB rex.WR xchg and es (bad) mov (bad) pop addr32 sti mov roll shrl xchg fwait jg,pn gs sub jp (bad) (bad) std (bad) stos cmpsl cltd pop push (bad) fwait cmp xchg xor rol in sbb xor rex.WRX (bad) (bad) (bad) fwait insb (bad) rex.WR push pop mov fwait push mov pushfq xor and adc (bad) and xor sbb mov fwait jmpq jb lahf (bad) or rex.RXB callq movabs rex.WRXB movslq (bad) fild xchg int3 (bad) (bad) jns std ja sub loope in xchg rex.RB addr32 add addr32 pop adc push sbb (bad) sbb cmpsl mov pop (bad) push rex.WX sub movabs (bad) (bad) sti callq sbb mov jb mov movslq cld imul fsub jnp sbb lret jmp movslq rcrl hlt test rex.WX cld mov sbb fcomps divb fdivrl sti (bad) iret jb jle cmp std jnp jne loop rcll mov out sti std sbb jl (bad) rex.WXB cli rex.WRB jl std or cli xchg pop loop sbb sub fildl sti pop out insl fidivl adc fldenv sub shr sbb notl movslq fs rex.WB rex.RXB (bad) jns sbb outsl cltd data16 setbe sbb (bad) js jg stc test xchg pop movslq insl xor pop loopne iret data16 loope ds pop icebp (bad) add rex.RB xor add xchg fdivrl xchg cltd (bad) sbb shll or orb mov xor loope rex.WRXB cmc (bad) insb packssdw mov lcall (bad) hlt (bad) jnp push adcl (bad) popfq subl rex.W cmp callq imul rex.XB pop pop rcrb hlt (bad) std (bad) xchg hlt retq (bad) loope out or jo adc rex.X cmp jno fiadd pushq xchg rex rex.XB or rex.RXB and mov mov adc mov (bad) sbb (bad) (bad) sbb mov push (bad) retq (bad) push cmp pop adc jmp (bad) imul (bad) xor cmp (bad) (bad) and push sbb popfq (bad) lret sbb pop and nop cmp xchg jno movabs rex.W xor mov loopne jmp fwait xchg xchg xor roll sbb rorb fwait cmpsb lods xor in jnp movl xor jb mov stos mov in (bad) pop adc (bad) pushq pop (bad) xor adcl out xor jns out repz mov lret lock vminsd and fnsave fwait xchg mov (bad) jg jnp jmpq (bad) fwait jge in cmp mov ds mov rex.WRXB rex.WXB fwait shlb stos xchg mov pop jno push (bad) add rex.WXB mov (bad) rex.R fwait adcl lcall (bad) iret lret hlt pop (bad) enterq xchg mov ss sbb sub lods std stos pop push (bad) mov (bad) lock xchg and pop fsubrs and mov (bad) add (bad) imul cmp es push rex.R repnz mov (bad) mov xlat stc sbb sbb xchg or fcmovnbe or xchg pop (bad) add cmp rex.WRXB stos push sbb fcompl fisubl loop push or jl (bad) pop movabs push add sub lret (bad) insb lods fldt (bad) rex.WB rex.WXB rex.WRXB fwait jle mov add (bad) repz repnz movabs loopne movabs cmpsl (bad) out test pop lock sub fwait movsb (bad) cmc (bad) in stc out sbb pop roll and add (bad) (bad) rex.WXB jmpq (bad) jg sub pushfq jno js sbb fbld (bad) retq jp movslq in rex.RB rex ja pop xchg (bad) js out testl loopne out rex.WRXB fwait push js jmpq pushfq or and clc sbb xor sub es rcrb fs loop sub stos and (bad) and (bad) je push adc rex.WR (bad) movabs adc adc xchg fsubrs rex.WX (bad) add jrcxz fistp (bad) movabs not mov (bad) adc jo test in cltd push xchg pushq pop fwait sarl test nop hlt jmp xchg xor mov or (bad) repz xchg lods fwait movabs or std sbb cmp sahf rex.WRB rex.RB rcll push pop rex.X sbb sbb or sbb push sbb xchg scas fnop jnp fwait add mov fnstsw and (bad) pop int movslq movabs jae push movl and clc adc addl cwtl cwtl (bad) (bad) out fcompl cli lea mov stos (bad) adc sub imul iret addr32 in sbb rex.XB (bad) (bad) fldenv pop xor fwait gs or (bad) cmp pop fwait cmp (bad) in mov mov add sub rex.RB sbb mov pause mov test movabs sub adc pop fstl mov jl add xor enterq repnz rex.WRXB or xchg lret mov fwait xchg and push pop test mov sbb outsb mov jl add add leaveq shrl in sbb adc fild add pop mov push pop push add (bad) rex.RB jbe mov jb mov or pop xchg jl mov lret (bad) data16 (bad) jrcxz ja pop fwait xchg mov mov jg adc jl mov (bad) popfq test hlt test add jne pushfq pop rex.WRB mov (bad) pushfq xchg mov loope fwait add (bad) mov (bad) and or add jmp or mov icebp fwait pop push in pop callq mov pop insb sbb hlt sbb (bad) rex.W and xchg leaveq mov xor jle jmp jno cmp shll mov fisttpl mov sbb mov (bad) mov stc mov sbb rex.RX nop mov movsl jne divb (bad) (bad) (bad) int3 repz mov (bad) xchg out rcrl add or (bad) (bad) push rex.RXB fldt adc mov pop repnz (bad) rex.WR cld cmpsl (bad) jne sahf loop and mov pop or cmpsl cwtl (bad) (bad) (bad) lock sub pop (bad) xchg (bad) notb add mov and ds and fs (bad) mov or and rex.WB and data16 int3 loope mov lcall setg xor push (bad) add pop fcmovne mulb fwait (bad) cltd mov clc cmpsl lret mov or std xchg data16 fwait rex.WB sbb sti mov roll add add pushq jl icebp (bad) cmp int3 sti movabs cmp (bad) jbe (bad) hlt rclb (bad) (bad) movslq rex.W loopne (bad) leaveq pushq or xor pushfq movslq add xchg gs and sub addr32 xchg (bad) sbb icebp sbbl (bad) mov sbb push lret ficompl (bad) adc mov leaveq pushq in mov out (bad) mov (bad) sbb (bad) xor (bad) shrl (bad) and packuswb and outsl jmpq pop (bad) scas rex.RB jp xchg xchg movl sbb xor rex.WR sti xlat or xchg sbb rex.WRB xchg (bad) push sbb faddl mov (bad) (bad) and (bad) (bad) xchg mov rorl shl (bad) jns in or sbb stos xor sahf fmuls jo and jns lods cmp adc movabs rex.WRX (bad) jne loopne xchg add (bad) stos stos nop cwtl sbb jp (bad) cmpsb (bad) xchg sbb movslq cld pushq movabs xor or shrb (bad) jae test mov test rcr mov jne rex.XB cltd (bad) stos (bad) loopne cmp stos xchg xchg retq cmp cwtl (bad) mov xchg xor nop xchg repz (bad) stos (bad) rex.WXB mov pop fwait mov rex.R fwait sub add or rex.X mov outsb je adc adc fwait mov lods add test in lock mov out mov push fwait rex.WRX and fwait (bad) push pushq mov cmp test gs in shr jae push (bad) cmpsl (bad) mov movabs push insl fwait and jno (bad) rex.RX and mov imul imul mov fmulp add lret mov (bad) (bad) mov fwait stos (bad) mov mov rex.WXB ja xchg addb push mov rex.RB loop xchg adc (bad) pop rex.R fwait or jne outsb cmp fwait xchg je and (bad) pop xchg movsl pop and xchg (bad) rex.RX scas (bad) stc insb (bad) sub div mov cmpl pop mov cwtl adc sbb cmp out fwait insb sub mov and pop lods sbb mov (bad) in test add sbb fwait cmp xor (bad) fwait shrl negb and pushfq jge jle pop (bad) mov pop movslq or jrcxz mov mov xor (bad) rex.WRB fwait test (bad) enterq sbb je adc mov adc cmp clc cs fs add mov rex.X stc rex.WRXB cltd (bad) stos rex.W mull neg addr32 pop xor add jbe rorb jle shrb adc sbb rex.R imulb cmp lods cmp pop push add pop sbb ja retq and push mov (bad) rex.RB fwait push push cmp jb cmp out rex.WRXB cli stos pushfq or rcrb lods movabs add imul fwait adc nop push mov (bad) fistl orb jle add icebp lret stos movabs sub fwait and iret cmpsl xchg cld (bad) fwait retw idivl jnp popfq jge fisttpll mov xor rex.WRXB push imul (bad) loope (bad) lahf outsb mov push sti fwait adc push xor sub xchg sbb es iret jmp movslq cld (bad) hlt lret add (bad) adcl lahf cld retq fwait (bad) adc cwtl fwait stos addr32 (bad) mov and xor rex.WXB stos lods pushq mov lret mov mov mov outsb shlb xchg (bad) sbb bswap fwait lods jrcxz xor loopne sbb mov andl sti xchg (bad) and repz sbb enterq (bad) sub push jmpq add xor stos shrb loopne callq fsubl icebp xchg (bad) (bad) (bad) andb sbb fwait pushq jne sub rex.WRXB lock callq (bad) cmp rolb push test rex.RXB rex.RXB repz and jbe (bad) fwait (bad) (bad) or fwait add cmc in repz xchg add mov (bad) pushq scas jle fcmovne rex.B loop cmc rex.XB lahf mov movabs sub fwait repz jb cmp rex.XB fwait push ror stos cmpsb xchg sbb push fnstenv jno retq retq imulb mov loop mov fsubrl (bad) outsb loop pop retq in jg mov (bad) adc stos xlat xor or sbb (bad) push push sarl jle or (bad) pop xor rex.XB and test push out cmp scas retq xchg sbb in (bad) gs xchg fwait pop and fs sbb (bad) lret (bad) (bad) add fwait shl sarb xor cmpl out sub xor mov ds fmull fldt cmpsb (bad) cltd sbb loopne out adc mov add rex.WRB cmp pop mov imul fisubrl in rex.RX imul fldt add negb shr mov scas rex.B stos xchg (bad) cmc stos rex.R or movabs sbb cmpsl idivl shrl (bad) out sub xchg (bad) flds sub mov sti pop fwait addr32 xor test pop es and gs add out jp outsl sahf fcompl pushfq fild xlat fwait divb rex.WRX pushq add enterq (bad) mov test movslq mov stc xor mov loope mov fwait pushfq cwtl xor data16 sbb imul xchg sbb fwait pop add cmpsb or (bad) pop movslq stos callq cmc xchg stos and (bad) rex.XB rex.R movabs xor xor (bad) fwait cmpsb add int fwait xor rex.X repz cmp pop out lahf out shlb or jp (bad) (bad) xor add lahf fwait rex.WX cli cs add add (bad) (bad) int3 mov enterq imul sbb sbb out outsl jl sbb jrcxz repz movsb xor movsl out mov (bad) sti gs lret xchg movabs adc (bad) callq stos rex.WXB xor popfq rex.RB sbb jmp cmc (bad) (bad) imul fnsave cmp adcl shr loope ja sub xchg rex.RXB sbb rorb (bad) pushq or in sbb fwait pop lods (bad) in icebp xchg sbb fwait jno jne movabs mov mov (bad) movabs or jo std pop lret and jno fwait adcl out mov sub insl (bad) icebp mov sub cli push rex.WR rex.WX fs xlat mov rex.RXB retq loope imul jrcxz sbb push fcompl stc mov enterq (bad) movabs rex.RXB lock add out xchg cmp (bad) scas cmp add retq mov mov popfq repz rol pop out cmpsb lea add or fstps movsb xchg pop ss movabs mov pop out out mov mov rex.WR jmpq rex.WXB cmp (bad) imull stos enterq (bad) rex.X mov sbbl mov sub add imul hlt pop es lret jo or gs and xchg cmpl scas fwait test push pushq sbb jno clc push lret fwait add add mov sbb lret mov (bad) hlt movabs fwait rex.RB insb std sub test and clc sbb (bad) fs mov jnp (bad) cs fwait loopne js or cmp (bad) and and lahf (bad) mov adc stos (bad) popfq xchg mov and icebp (bad) sub rex.X in add xchg fwait rex.R (bad) notl sahf add xlat xchg sbb int3 js movabs iret int movslq sub iret test add lahf lret (bad) and fcomi jmp mov (bad) (bad) movabs movabs push mov rcrl jrcxz cmc jb rex.RB data16 (bad) lret (bad) xor notl fwait xchg sbb (bad) cmpsl adc xor mov add retq (bad) addr32 jns lods and push rex.RB imul or out rex.WR jns jae push scas cmp mov (bad) sbb push mov and (bad) push fwait jbe (bad) sbb xchg and jge sub push fwait xor rex.WRXB lock jp adc outsb mov retq jb xlat jbe xchg mov push repnz and (bad) rex.B adc scas movabs cmc in jmp (bad) sbb lcall ja rex.WXB sbb xor lods rex.WR fwait lea (bad) movslq lret stc fwait (bad) loopne rex.RXB jae fwait add outsl and in out fucomip (bad) retq fwait pop pop (bad) andl js jmpq push test and (bad) (bad) sbb fildll (bad) cltd and test adc rex.WRX insb rcrb iret (bad) movabs std repz mov test pop out fwait subl fwait imul sbb in or movabs rex.WRX cmp add movabs (bad) (bad) rex iret lahf adc jne sti and fwait rex.WB fsts and pushq (bad) rex.X adc rex.RX rex.WRXB or loop movabs outsl adc fisubrl fwait lock stc push out mov fistp sarb mov mov add je jno mov rclq xor pushfq (bad) (bad) jge int sti (bad) je fwait add xchg pushq cmp (bad) jle rex.WX incb jne fwait movabs jle,pn pushfq push fwait cmp sub sbb adc jp,pn (bad) movabs add (bad) clc jb (bad) stc sub repz sbb mov (bad) sbb xchg loopne cli mov int retq sbb cmpb (bad) mov int3 fwait movabs hlt rex.RXB add xchg mov test movabs sbb insl (bad) rex.WX add insb rex.WRX fwait stc xor rcrl (bad) ja (bad) es add cltd pop in movabs in pop sbbl rcl mov add es insl add ja (bad) fisttpl add fwait add leaveq xchg (bad) xlat (bad) (bad) push retq sti es (bad) and je enterq sbbl stos jb mov mov cwtl movabs rcrl int3 adc mov (bad) jo retq and jae xchg adc (bad) ficoml pushq sti ficomp jb adc (bad) cmp mov retq rex.RX ds push fnsave sti rex (bad) and cmp (bad) adc mov ja cmp movsb (bad) loopne subl movabs (bad) push jle mov test pushq mov mov mov fistpl cmpsl xchg mov out (bad) fnsave fwait adc sub jle mov push jo movslq mov in sbb sbb (bad) pop outsl push rex.R mov xchg add imul pop rcrb push push in (bad) fwait xchg mov shrl (bad) pop fwait rex.RXB mov stos pop out (bad) out rex.RX sti (bad) add xchg cld std push cltd mov fwait sahf mov outsl fwait cmp out or and (bad) xor hlt add fwait sub in out mov mov sub pushfq in lahf sti cmp popfq iret clc cmp sub imull andl mov mov addl sub push add adc (bad) rcrl stc pop and icebp (bad) sbb jmp jae fwait cmpsb mov adc vprorvd cld es out mov xchg clc push cmpsb lods xchg scas test stos cmp data16 push ror sub movsl (bad) pop add outsb mov insb adc rex.WRX pop cmp (bad) (bad) in es rex fwait movb fwait cmp out pop rex.WX repz fwait int3 sub (bad) in xchg cltd and fwait or pop movabs fwait jle jns scas xchg mov movsb and test fwait jmp hlt xlat popfq or movslq movabs loopne cmp fbstp movsb or lret movabs pushq outsl es fwait hlt mov pop cmpsl sbb frstor (bad) adc sub rex.RXB (bad) rex.W mov out mov and add imul movabs fwait cmp and mov push (bad) (bad) icebp push repz cmp pop rex.WR rex.WRB rex.X jbe ror mov imul outsb xchg pushfq fwait loopne pop (bad) outsl rex.WRXB fwait imul fs add adc in fwait and add or (bad) cs andb push sbb mov pushq jrcxz fwait ja adc (bad) (bad) push mov (bad) jns iret rcrb pop push mov jmpq rex.WXB imul cli cmp es out fcomps pushq add or jmp adc lret cmpl imul adc mov js,pn xchg (bad) jnp sub pop and fwait gs mov fwait test int3 sbb mov rex.RXB cmp test fwait add out rex.RX cmp cmp pop or add lret mov sahf or fwait out xor loopne add mov push cltd (bad) (bad) adc rex.WRB sub (bad) lea adc scas mov rex.WX sub loope sti add (bad) (bad) sbb xor (bad) fstps mov mov out movabs clc repz jb sbb cmp adc fwait adc pushq fwait pop adc xchg out rex.WRX add movb fwait (bad) push int3 test or sbb (bad) mov xchg or adc fwait adc mov stos mov xor imull (bad) pop (bad) adc test sbbl cmpl sbb fwait sbb pushq jno rex.RXB fwait jbe cmp (bad) push mov or fisttpl cli (bad) fadds lods cwtl data16 sti mov test retq fwait shrl leavew pushq in (bad) (bad) sbb mov out sbb cmpsl sbb test or (bad) jno shrl loope xor (bad) and adc (bad) sub (bad) lcall pushfq movsl loope fildll movsb jge xlat mov scas (bad) mov cmp add rex.WXB movabs (bad) test sbb jle fimull insb pop mov (bad) movabs (bad) sbb addr32 lret sub mov cs jmpq sbb sbb (bad) gs std test jns imul flds jne mov int3 (bad) imul enterq mov pushq stos addb (bad) jge xchg pop addr32 or add jmpq rex.X (bad) lods cwtl (bad) (bad) shl xchg je movabs pop mov std cld enterq lods scas cmp add or imul adc mov push cmpsb cmp cmp fidivrl jns or rcll (bad) mov (bad) pop (bad) add pop or (bad) andb and cwtl (bad) repz idiv (bad) ds jno mov sbb sub (bad) xchg jno repnz loop sub jge adc in mov xchg cmp or push stos sahf (bad) rex.XB (bad) pop cwtl (bad) xor stos or push and sbb fcomps mov mov (bad) fldt decb out mov pop jle fs pop mov cmpsl pop out mov (bad) outsl (bad) xchg sbb mov loopne fldt adc adc subl rex.XB orb add rex.W xchg iret stos mov retq and mov cmp xchg push cmpsl sbb xchg cltd add movabs shrb mov in in mov leaveq (bad) mov or ds mov pushq adc mov cmc mov xchg push sbb cwtl (bad) (bad) mov pop pop pushq sbb push jne andb mov (bad) mov (bad) rex.RB rex.XB psubusw ss mov mov fcmovbe or (bad) (bad) (bad) jns je gs (bad) in js orl popfq xor rex.X addr32 test pop push outsl rex.X pushfq lods jbe (bad) jns pop rex.W ss adc mov movslq pop out sbb cmpsl xchg add jno or or xchg mov clc sbb rorl stc rex.WXB xor rex.WX rex.WRX fcoms callq adc movsb xchg sub (bad) adc push sahf sub sbb xchg rex.WRX mov mov test pushq mov cmp repz xlat in push xchg rorl loop pop in mov cld ss mov xchg repnz (bad) rex sub add pop movsl push (bad) ss adc xor mov int3 (bad) int3 cmp (bad) andl retq cli imul add pushfq cmp (bad) (bad) lea sub jl sahf (bad) ds (bad) xor xor rex.B rex.WR pop jae xchg and rex.B pop fstl js stos retq out and xor out (bad) xchg xchg cltd adc out movabs iret jle xchg xchg (bad) movabs sub mov jg (bad) fcom (bad) outsb lock pushq jb ficom mov in jbe rex.XB cli (bad) pop lret pop xor rolb sbb push cmp stos sarl lret sbb movsl (bad) sbb sub mov mov clc icebp nop sbbl jo jo xor jge add xchg (bad) sbb cwtl pop out movsl neg mov push (bad) push jl fwait rex.WR xor (bad) adc cld repz jmpq in fwait imul outsl mov stos scas movabs mov mov cmp stc and hlt (bad) rex.W and sbbl mov (bad) addl movsb fcmovnb sbb pop (bad) fwait lret (bad) cmp fwait rex.B mov hlt loopne fst test mov add movabs and (bad) cwtl lahf jo loope fwait xchg sbb stc and mov fwait push rex adc fwait xchg (bad) rex.XB fldcw fwait cltd adc sti rex.R rex.WXB sbb (bad) mov ror (bad) js,pn rolb (bad) jmp mov add callq cmp push addr32 nop es insl or rex.WR cmc adc stos sbb add (bad) xlat (bad) cmc callq push xor (bad) adc out fistpl sbb mov cmp loop sbb rolb rex.XB rex.WXB mov mov fmuls xchg jnp mov mov stos movsb test stos loopne rex.WRXB sbb cmc rex.WR imul sbb or add rex.RX fwait lock jbe mov xor mov xlat xor xor adc rex (bad) sarl push pop pop or mov leaveq clc movabs repz in rex pop fwait xor pushfq cmp fsubl rex.RX rex.RX addr32 repz scas popfq (bad) sub mov (bad) xor jns adc cltd fwait int fidivl mov (bad) sbb mov adc push test outsb rex.WR mov sub fwait repz test stc (bad) retq out add xchg sbb fnstsw xchg ss fildll xchg fwait (bad) and ds (bad) add sbb adc (bad) fwait or (bad) jne (bad) repz iret cld fwait sti push push rex.RB mov lret addr32 xchg sub icebp add rex.WRX fwait mov jbe out (bad) fwait adc xchg push repz xchg (bad) std sti add (bad) sub negb (bad) cmp rex.X cmp (bad) add cmpsb lahf fwait icebp (bad) repz int in scas sarb sahf pop jno fadds fwait push andb (bad) retq rex.B or fisubr cltd add pop mov lret sahf adc pushq je rex.RXB push movabs lcallw (bad) cmp mov callq out sub or andl mov push and mov ficompl fnop sub (bad) hlt fadd fs movsb fildl movslq adc popfq rex.WRB retq or data16 fldcw adc mov xchg sbb setnp push or in xchg stos and or adc fwait cmp sub gs imul fwait cmp (bad) rex imulb sbb (bad) in shr sub leavew jl movabs je xchg pushq sub mov mov sbb mov fwait add icebp rex.B mov fwait jne je sbb sbb xor mov pushfq lahf or rex.WRXB rex.W mov fwait jne leaveq sbb mov sbb xchg mov movabs xorl sbb scas cmp pop stos mov mov (bad) pop adc adc fiadd xor sbb add std rex.WRX fwait cmp pop jl imul or fwait stos enterq cmp (bad) fwait adc mov fwait (bad) (bad) mov lods notl stos add cmp sub adcl rex.RXB sbb ja (bad) sbb (bad) sub cs rex.WRX fwait jb in adc add sub adc fwait or rorl fwait setg movslq (bad) ja jg rex.B mov sbb fwait leaveq (bad) mov rex.R pop rol pop xor repnz mov cli rol mov rex.W or sub add fwait (bad) repnz adc and mov xlat and shlb (bad) pop insb pop out pushq fwait or (bad) jo adc (bad) or pushq xchg pushq push push sbb xor iret (bad) (bad) mov jrcxz stc (bad) sbb fildl rex.RX stos push (bad) cmpl jo add rex.XB add mov iret stos xor movabs sbb mov mov adc imul fwait fs xor or xor add xchg test push mov xchg (bad) fwait mov pop (bad) rex.RX fwait retq out movb loopne adc push push mov jrcxz movabs cmp jl rcr add (bad) callq sahf int3 je pushfq jbe fwait movabs rex.RX repz popfq xchg lahf clc leaveq push fwait lods int and sahf jne or (bad) sbb (bad) mov pushfq adc mov int3 add std rex.WRXB rex repz je (bad) cmpsb jae in sbb (bad) ja add movabs lahf jb fwait mov rcl fwait push mov push jmpq (bad) sbb clc out rex.X rex.R push sarl popfq cwtl xor in push xchg iret and jge movabs and mov in outsb or and and ds fimul and sbb rex.WRX xchg sbb movabs or sub xlat mov mov (bad) out pushq mov pop sub sub sub paddb pop xchg add (bad) es and movabs bnd jp out rex rex.WR movslq faddl mov sti add push xchg rex.XB adc adc mov rex.WRXB rex.WRXB sub jno push lods push (bad) pop adc xchg pcmpeqd out or mov (bad) adc fs (bad) xchg rol xor rex.WRB mov out js insb mov pushfq (bad) mov pushfq sbb sub xor clc rex.W notl (bad) ficompl push and adc rex.XB xchg loope (bad) popfq fimull fnstsw rex.B shr mov xchg adcl sbb (bad) rex.RXB (bad) jo sahf pushq push je popfq mov cwtl (bad) stos push mov movntq repz jl (bad) scas lods xchg push pushfq push cmp (bad) in fistpl (bad) iret scas cltd push pushq stos (bad) in sbb mov jb (bad) (bad) sbb leaveq mov (bad) rex.RB and sbb rex.RXB nop callq jp pop xchg loop in (bad) (bad) jle pop in push rex.XB xlat lods (bad) mov outsb sbb je (bad) mov leaveq xor push ror and sbb imul cmpsl cmp hlt or mov mov mov lret int3 xchg add (bad) imul xchg (bad) or ja mov cmp fistl rex.W rex.WRXB fmul cwtl bndstx (bad) movabs (bad) notl (bad) adc pop rex.WRX hlt mov sub (bad) out hlt fcoml mul roll cmp (bad) sub (bad) pop clc (bad) movsb sub sbb (bad) outsl sbb fistpll lcall sub jmp scas sbb jno sbb addr32 mov pop jae jns test fiadd rex.RB fwait (bad) (bad) (bad) fdivr xchg stos (bad) adc add (bad) cmp sbb or pop sbb push fwait xchg mov push fwait (bad) (bad) add rex.RXB pop je adc stos stc and test sub xor jae xor pop sbb ficomp push xchg jp stos adc rex.WRB rex.WRB rex.RXB (bad) mov jne fwait add rex.WX rex.WRXB cmp fmulp jo lahf insl fwait xor push rex.RB flds ficomp int xchg xor and xchg (bad) mov test rorl pushfq lret xorl stos retq mov fwait jne rex.WB jno xchg fwait rex.WRX lahf out fstps icebp adc adc out rex fwait jo pop movsb xchg lods xchg sbb leaveq jge movabs (bad) xor andl (bad) mov fcomps je or fistpll movsb mov mov addr32 movabs (bad) sub (bad) icebp sti mov xor jbe (bad) (bad) (bad) pushq (bad) fwait mov rex.RXB and (bad) (bad) sbb loop lods (bad) add cld sbb pop sub int pop sarl sub pop add and (bad) test stos mov pop cmp add fwait movabs jo jp rex.WXB (bad) in cmpsl fwait lods mov outsl repz loopne sbb mov or (bad) mov (bad) xchg fmuls and fwait mov jp mov in rex.WR pop sbbl int3 jg push lahf cmpsb fwait mov xor lea jns (bad) mulb pop (bad) (bad) repz rex.WR rex.R hlt test (bad) add rex.WRX ficoml fwait sub cltd lods sbb std out pop mov test push nop movsl rorb (bad) loope or test xchg jl not mov lods repnz loop fwait sub movabs rex.WXB movslq lods fwait rex.R pop dec fdivrl fwait mov (bad) iret loopne mov xlat mov sbb icebp (bad) (bad) stos cmpsl std fwait push clc (bad) add je in sub (bad) pop shll adc sahf mov (bad) (bad) adc fwait jrcxz cmpsl (bad) test xacquire imul int fistpl rex.WR or movabs out (bad) in repnz fcomps retq xchg popfq repnz pop (bad) std retq push push ja (bad) mov sbb lods push (bad) push je sub in adc outsb es add fcmovu movsb fldenv nop jbe (bad) (bad) mov or out rex.R sti mov pop and fcomps repnz cmp ficompl cmpl outsb rcl mov mov jb pop out cmp sub mov (bad) (bad) fwait scas fild (bad) sahf rcrb out leaveq (bad) jbe xchg test imul js int or jae (bad) sahf fwait stos (bad) lock cmp sub loop sbb outsl test jmp clc mull rex.XB movsl shrl push mov rex.RB fwait add mov fwait rcr and fwait stos stos xchg je (bad) ss lods mov lock imul (bad) sahf push repz mov (bad) fwait push mov xchg subl fwait addr32 sbb out movabs sbb rex.WXB pushq push ss adc popfq jb je movabs (bad) out xchg ficomp movsb or es and mov xor cltd sbb xchg push movsl ss jnp cmp (bad) and sbb (bad) rex.XB and mov pop insb rex rex.WX (bad) popfq movsb jl leaveq repz rex.WB fwait rex (bad) pushq pop push ss sub (bad) xchg mov rex.WRX mov or in xchg movabs adc (bad) (bad) pushq add adc fdivr or es rex.RX push adc mov (bad) rex.R rex.XB xor popfq cmp movslq (bad) cmp popfq pushq push (bad) sti outsl pop ficompl out scas rex add fnsave (bad) cmp rex.X nop gs in loop (bad) pop xchg cltd (bad) insb jno sub pop sub out push mov add add cli (bad) sbb (bad) xchg xchg pushfq imul insl (bad) mov adc out (bad) jae lret fnstsw movslq rex.WX repz rex.WXB (bad) (bad) fnstsw sbb stc (bad) (bad) std (bad) rorb pushq pcmpeqb movabs mov and nop out jl fistl stc pop jg sbb (bad) test rcrb fisub jrcxz pop jp jo insb pushq hlt adc mov sbb mov idivb or pushfq lods xchg sbb (bad) ss (bad) push xor mov push jmpq fimull lock jno add (bad) mov xchg imul lret loopne rex.WRX movabs loopne outsl pop sub icebp ja (bad) xchg cmp push cwtl cmp sbb xchg rex.WRX vmovmskpd clc popfq adc sbb not xlat in loope lret xor fcmovu xor sbb notl add (bad) cmp xchg pop lods loop rex.W mov (bad) repz sbb mov jnp mov cltd gs (bad) xor sub (bad) pop lods (bad) and (bad) xor scas movabs xor (bad) sub addr32 ja sub (bad) add mov (bad) lea rex (bad) std rex.RXB add out lea and (bad) fstpt rex enterq cmpl retq fcompl ja mov movabs scas hlt in imul ficompl flds mov pushq sub push jmp mov cld divl es scas mov or mov js rcll xor jno pop test mov test mov lret movabs rex.X adcb je mov fsts retq add sbb jmpq pop sbb fs lret mov (bad) lret rex.XB (bad) or jb jrcxz rex.WXB and shrl and fwait cltd hlt repz (bad) and mov mov pop imul ficomp fidivrl decl pop out adc sahf jb jle and test (bad) (bad) mov movsl sub rex.XB rex.WX (bad) adc (bad) (bad) (bad) sbb pop (bad) test stc jl cmp cld (bad) fwait adc jmpq (bad) (bad) add lods adc push or cmc stos (bad) loopne int3 lea js (bad) (bad) ficomp cld sti iret adc mov (bad) testb pop jmp mov int3 fwait pop outsl push addr32 std or pop xor (bad) fwait and add sbb in mov pushq add push movabs mov sbb movslq cmp movabs lods movslq cmp xchg fildll push xchg pushfq (bad) cld jle pop cs sar rex.WX scas (bad) cli mov lock rex.B data16 pop mov adc xchg cmpsb test or pop in add int3 rex.WRB pop xchg rex.RXB jae adc (bad) cmp (bad) out repnz xchg push test jae xchg or xchg (bad) and cld loop jmpq cmp mov rcrl (bad) std imul fistp inc adc retq scas (bad) jle (bad) ds loop (bad) js loopne fwait cmp mov rex.R fwait (bad) (bad) jns (bad) stos xchg je or mov mov cltd data16 pop (bad) xchg jo jge and add mov rex.W push rex.RX (bad) in xlat loopne fwait sti mov subl nop faddl fwait adc rex.WX (bad) fwait jp mov fwait jmp adc sbb fnstenv rex.WXB rex.XB rex.WRB jge loopne cmpsl mov test sbb shlb lret stos xor (bad) (bad) rolb (bad) (bad) mov rex.WR fsubr pushq fwait xlat (bad) xchg adcb mov (bad) add jb lea add xor lods ss (bad) fwait insl (bad) mov jno add test sub mov cmp xchg ficom (bad) lods fwait mov rex.B fwait int ljmp jns jrcxz (bad) xor (bad) push (bad) mov jb jge add inc pop mov jns retq fcomps and xor int mov jrcxz lret jl pushq sbb stos rex.W add rex.X sbb sbb rcrl pop out fwait cli push rcrb pop mov jnp jmpq add adc rex.XB jb or fwait sub (bad) xor and or fs adc push mov mov bnd negb sbb cmp fwait pop mov (bad) out cmp (bad) xchg xchg mov (bad) cli rex.B adc fimul mulb clc sub callq cs adc (bad) lock push fwait rorb and movabs or (bad) xchg mov fwait je add outsb mov pop mov and (bad) mov movsl addr32 movabs adc pop negb xor jno movabs jmp repnz adc and (bad) mov mov cwtl pushq mov jl out add or jo fwait and adc fsubl mov mov in (bad) iret (bad) mov xchg xchg (bad) ja (bad) popfq push data16 callq (bad) jae rcll rex.XB rcr or (bad) fwait (bad) jmpq lock std scas xor adc sbb or mov pop jb fwait cli rex.R and mov mov add mov test jp movabs fistpl (bad) add mov je add mov jrcxz loop lret sbb jmpq mov add repz jno xor pop mov mov fildll mov fcos jae push fwait pop sahf pushq xlat loopne mov incb (bad) adc mov sbb sbb jbe (bad) mov test lods xchg repnz (bad) or rex.WXB rcrl push cmp add (bad) jl sti rex.X xchg adc (bad) sub mov xor rex.WXB (bad) jg pop int iret jo fwait adc adc cld fwait roll stos in or out rex.WXB (bad) xor insb pop cmp pop (bad) insl outsl retq (bad) mov fwait test or jrcxz imul shrl sub add fldt jns fild repz mov insb es pop and xchg (bad) stc out fwait sbb sub fwait (bad) je cmpsb cmovnp int3 fwait repnz sbb cmpsl in clc out mov add negl outsb sub fwait retq adc pushfq fwait (bad) ud2 fs mov or pop icebp xchg push fbstp jmp repnz sbb (bad) adc jns sbb jge fwait test std cmp fwait mov (bad) and sahf movsb mov or idivl sbb and out test stc sti ds and push in mul int (bad) (bad) sub add push add mov loopne pushfq rex.WXB jne fdivrs (bad) out xchg lahf sarl add test fwait (bad) jae xchg int3 (bad) (bad) sarb sub or xorb inc mov and int mov mov jmp (bad) (bad) sbb (bad) adc (bad) or jg or fwait movsb adc mov pop xor rex.R cmpsl cmpsb negl adc (bad) movabs push (bad) sbb adc jnp icebp sbb mov fwait lods push cmp andb fwait cmpsl pop nop jno rcrl push sub rex.XB fwait jg scas jo mov adc in rex.WXB movsl xchg and pop ja insl xchg xchg xorl rex.RX rclb adc out fistpl adc rex.RXB stos rex movsl (bad) sub add jo xor xchg or fwait or adc rex.RX fwait jnp sbb (bad) pushq (bad) mov mov imull (bad) cld mov fs fucompp int3 movabs rorl add jge mov fwait out (bad) pushq (bad) (bad) repz (bad) fwait xchg popq fwait lret (bad) mov cltd movabs sbb lods jge retq mov fdivs adc (bad) divl jle xchg rex.WRXB add xor cld rex.WRX rex.WRX rex.RXB ds xor pop test xor push lahf lcall jl sbb fwait lods rex.RXB gs mov sti fwait imul rex.WR out adc sub fwait push rex.R (bad) pop movabs insb loope jne in sub mov adc icebp cmp add sub xchg xchg and sti fisttpll sbb jns loopne cwtl cmp cmp xlat xor jno xchg mov sbb rex.WRB sub (bad) fldenv mov rex.RX in repz cltd mov jge retq cmp rex.X cmpsb movabs or fwait fs jb jnp movabs (bad) xor jne mov jrcxz sbb (bad) jrcxz (bad) ss and rex.WR fadds fadd retq fwait outsb stc and sahf mov sbb xlat fmuls fwait xchg (bad) or int3 cltd lea mov sbb (bad) (bad) adcl jmp sub ror jl,pt lea ja xchg cmp (bad) sbb xor loope (bad) (bad) xor fstpt adc rex.R cmp in sti jle fwait jo xchg je ss (bad) (bad) rcl fcomp or fwait cwtl mov test sbb fild xchg addl cli lods or and mov (bad) outsl jrcxz lock fwait (bad) mov movabs test and mov je (bad) fwait clc (bad) iret (bad) imul fwait rex.W loop (bad) rex.WRXB mov mov cmp lret fdivp sti jrcxz imul fist jnp in cmp in sbb (bad) (bad) fwait xchg jrcxz or xchg repnz (bad) xlat out rex.X ja mov fwait mov test outsl sbb cltd rex.RB repz (bad) pop fwait xor jnp fwait and (bad) sub rex.RX fwait rex.W test mov (bad) ds xchg sahf cmp iret mov xchg xchg idiv popfq cmpl rex.X xor sub (bad) mov jns xor fcoml jb (bad) fsincos push mov xor fs fild cmp movabs sbb lret mov adcb sbb insl add sub jg fwait add add jmp jmpq repz pushfq subl cmp xchg fs rex.WRXB (bad) and rex fildl add xchg fisubrl shl (bad) mov pop rex.WRB rol pushq and fwait sub or jmp fwait sub (bad) xchg pop adc cmpsb mov fwait cmp (bad) (bad) fwait jne cwtl movsl decb or (bad) cmp or (bad) movabs xor stos sar (bad) fwait insl mov mov jl imul rex.WRX fwait xchg mov leaveq push rex.WRXB adc fbstp sbb iret and (bad) cmp (bad) pushq and push fistpl mov (bad) xchg sti or sbb (bad) fwait cmp add xchg sbb (bad) xorb stc orl sahf sti ds xchg out gs (bad) (bad) loop xor and xchg rex.WRXB out mov gs repnz sbb cmp lret fwait add mov repz and cwtl imul rex.WRX addr32 and mov or gs fwait clc jb xchg in push or (bad) addr32 (bad) push loopne retq and mov xchg jrcxz cmp mov callq jae stos adc (bad) lods sub (bad) rex.WRXB xchg pushq fldl fwait or sbb (bad) movabs jl sbb push (bad) (bad) xchg insb imul sarl sbb movsb xchg pop adc lahf stos xor loope rex.X mov adc test and jne loop mov movabs (bad) ja cmp cmp fildl in jle mov jp mov xlat rex.W in mov loopne and repz stos (bad) fwait cmp es popq fwait rex.WRB (bad) mov mov negb (bad) xchg (bad) js rex.WX fistpll rex.RX jo push mov rex.XB xor shl cmpb sbb sti mov sub adc iret in pop push jbe (bad) xlat adcl int3 (bad) sbb add test popfq pop (bad) pop adc test xchg imul rex.XB repnz movslq cltd fwait and sahf jmp (bad) (bad) movabs in fildl xlat pushq sahf rex.RX pop xlat movabs jo sbb (bad) (bad) (bad) rex.RB loopne ss (bad) push (bad) rorl xchg rex.WRX rex.WX mov rex.W or (bad) movslq incl sbb and mov ud2 pushfq cmp jl mov rex.WXB icebp add rex.WR cltd pop add sub (bad) (bad) leaveq sbb pop test pushfq (bad) rolq sub pushq sbb adc cmp add or int3 add fstpl out test loopnel mov push mov and int3 nop push in ja jp sbb jb bnd pushfq and xor retq (bad) mov xchg rorl pop test jle repnz in xor lret rex.WR sbb or sub cmc sbb mov repnz scas loope (bad) fwait (bad) rcrl out outsl (bad) rorb fwait pop add fwait scas and adc in add clc (bad) sub fwait rex.RB pop xor orb jnp push jmp clc (bad) fwait mov xchg fwait (bad) push push pushfq cli lahf out xchg clc out sti cmpsl (bad) outsb add je jns rex.WXB ficom mov fwait pop rex.WR rex.WRXB cmc movsb jae (bad) (bad) js cli jg stos mov or lret xor push loop jrcxz push rex.WXB cs pop mov ds mov (bad) (bad) lods sbb (bad) stos xchg jmp rex.WRX (bad) jmp (bad) je mov stos jmp sub (bad) mov and int outsb (bad) xor mov rex.RB push sub and clc movabs jb cs rex.X fwait xor sub shll (bad) sub sbb cmpsl xchg and jnp and addl push sbb push cli jmp leaveq (bad) movsl fnsave (bad) std add cmp xchg fstpt mov or or pop rex.RB fmuls mov xor (bad) repz adc xor je scas jno out gs pushfq loop pushq andl (bad) sbb out int or test sbb cld xor loopne pop movslq loopne out xchg (bad) rcrb xchg sbb addb mov xor shlb (bad) test std movsl (bad) push sti xchg rex.RXB sub gs test sub test (bad) nop mov (bad) stc or (bad) mov jle (bad) (bad) std xchg mov mov pop rex.XB sub fs add xchg movsb scas xchg leaveq rex.RXB xor int3 out iret lods mov mov lock (bad) xchg mov rex.WXB sbb adc xchg in roll rex.WX pushq push ds test sbb (bad) xor (bad) test xchg xor xor enterq pushfq movabs push (bad) xchg push sti test movslq jg sbb (bad) xchg mov jle and or push push lods movabs lods and js fs and adc (bad) adc (bad) rex.WRXB (bad) jmpq mov jnp rex.WR rex.R adc outsb js movsl (bad) xchg hlt test out sub sbb int3 xor rex.W (bad) add in cwtl cmp rorl out scas jae xlat stc imul pop pushq pushfq (bad) jb es xor mov mov mov movslq mov cmpsb jmp pop movd cmp movsb loope (bad) popfq or movabs fldl popfq mov fwait (bad) (bad) (bad) cmp sbb pushfq fildl out xchg out (bad) mov mov fwait test (bad) jg sbb pop add (bad) callq cmp xor cmp (bad) fwait pop rorb adc mov mov (bad) or rep mov rorb movabs imul decl sbb fwait push out add jae lahf (bad) je rorb jmp cmp jmpq jns sbb fwait callq pushq decl jae adc cmpsl shll mov sti (bad) lahf nop sti cmpsb push xor mov xchg popfq and int3 loope and sbb (bad) jb insb (bad) movabs loope shll rex.WRXB xchg cld push (bad) (bad) mov sbb or sbb pop sbb (bad) roll stos sub mov mov clc data16 pop (bad) rex.WXB mov rex.WR es lods jp in outsb cmp add cltd xchg pop jb scas sbb int3 pop adc scas (bad) (bad) rex.XB jmpq mov mull je fnstsw (bad) je std rex.WR xchg push stos xchg xchg (bad) sti sbb fst popq data16 rex.WRB mov ficoml add (bad) jns cmp in jne mov mov jge mov xchg (bad) fildl xor movabs mov mov rex.WB rex.R jp rex.WRB jrcxz out out movsb fwait mov cmpsb push out roll negb cli data16 scas icebp cmp pop (bad) rcrl push mov faddl xchg jo pop leaveq mov movabs sbb rex.X fwait enterq add sbb scas (bad) mov mov retq push test orb fwait pushq cld rex.RX (bad) in (bad) add stos fcmovne add repnz (bad) pop fwait and rex.WX mov add fwait rex.WRXB popfq jp fwait movabs out (bad) push rex.WR rclb fwait sbb or mov test sub in lahf fwait rorl xchg ficompl std (bad) (bad) xchg (bad) mov stos pushq test mov sbb rex.WRXB rex.WR fwait cli sbb pop and add rex.WR scas jmpq sbb rex.RX xlat jrcxz movabs rex.B xchg rex.WB fwait xor lods jg rex.X loope in lock (bad) js fwait push sbb (bad) adc ljmp pushq jno pop fwait pop cli adc mov ds in adc fwait stos test mov lret or push jno mov rcr mov (bad) fwait rorl cld outsl pop mov adc test mov push (bad) fwait xorl xor popfq addr32 rex.X (bad) sbbl add mov add sbb and jb cmpsl mov sub ror movabs addr32 loopne in cmp (bad) sbb mov jo cmp push xchg xlat icebp (bad) mov jp sbb pop movsb add or loope cld mov (bad) (bad) stos enterq test mov mov scas gs leaveq (bad) cld stc pop gs jle mov pop fildl mov ficoml sbb push cltd (bad) (bad) in icebp xor test rex.WRB jb adc outsb jb xor test jnp loopne add fdivrp sti sub and xor mov retq mov mov cmp pushfq scas and rex.WRX mov fwait rex rex.XB mov fiadd xchg sti add or repz jmp fwait jmp out rex.WB repnz xlat fwait xchg (bad) pushfq rex.WRB rex.WXB sub mov (bad) pop sub (bad) (bad) iret movslq clc test cltd adc cmp pop mov pop lock mov xchg out fwait mov mov test mov fwait test mov lret (bad) rex.WRX in negl insl fmuls retq enterq cmpsl fwait stc xchg movabs push and ficompl add (bad) fildl cmp movabs xor (bad) push imul cmp mov pushfq mov es xlat pop rex.WRXB fwait cmp xchg sub or insl pushq mov out ficomp pop jbe jl (bad) rex.WRB mov xchg cmp sti test std mov in rex.B and faddl (bad) xchg scas jns lahf xor (bad) std outsb mov pop and iret movabs add icebp jg adc adc and or (bad) rex.RXB mov cmp (bad) test cmp fidiv xchg xchg popq ss (bad) cmp sbb push xchg fwait xchg jrcxz or fistpl ds push enterq mov mov fwait loope xor imul (bad) js (bad) fwait rex.WX jrcxz movabs (bad) (bad) sbb adc xchg (bad) (bad) cld xchg (bad) movabs adc fwait retq add xchg jg cli stc xchg cmp stos fwait xchg retq rex.WB jbe,pt (bad) and lret (bad) ss rex.WRXB outsb mov mov std test loope imul or mov cmp movabs mov (bad) stos (bad) repz scas test mov movabs rcll fidivl mov xorl (bad) rex.R movsb jmp in or mov (bad) pop add or rex.WRB rex.RXB cltd sbb movslq iret mov fucomi cli adc iret mov cmp push outsb jns callq fwait cld xchg xlat data16 rex.WRXB in in in mov cmp rcll rcrl out leaveq retq xor test fwait int3 outsb fisubr movabs jl fwait sbb test jle mov callq mov and cltd cltd jae popfq cmp ficomp xor movabs xchg push sbb sub fwait add int3 (bad) cmp add adc add rex.RXB xchg mov rcrb jmp xchg in jmpq out outsl or (bad) rex.R fwait pop popfq cmpsl div shrl int xchg mov (bad) mov mov int3 mov addr32 sub loopne rex.RX fwait out ljmp cwtl fwait rex.WR mov (bad) repz (bad) movsl stc fs ja cmpsb (bad) fdivrs scas addr32 retq in cmc data16 xchg (bad) mov sbb je cli mov scas in sbb jle popfq pushfq xlat not lock scas pushq mov lock cwtl adc jmp out push (bad) movslq (bad) sbb cmp jge jbe data16 mov in mov rex.WRB movslq (bad) (bad) xchg adcl xchg rol xchg out xor mov mov enterq xchg (bad) mov pop xlat (bad) adc or cmp sub xor roll jno lahf iret addl pop sub out cvttps2pi (bad) shld xchg mov scas xor xchg cld jae (bad) sbb repz push mov loop movabs sbb rcl sub (bad) xor mov or add or mov push retq insb lret je rex.WRB (bad) out sbb push (bad) std rcrl adc fsubrp idivb (bad) popfq rex.XB movslq rex.WB mov sbb xchg (bad) (bad) shlb mov (bad) cmpsl (bad) movabs je movabs (bad) test sbb xchg (bad) cmp sbb negb int3 mov mov subl sub jo (bad) sub (bad) (bad) rex.R cmp icebp rex.XB jrcxz pop scas mov retq jp xchg loope es cmp rex.WRXB mov sbb rex.WX sub repz pop mov jo (bad) or rex.XB movsl pop pushfq jge push shr cmpsl rol push pop mov or fldenv sub retq out pop leaveq xchg jb in push pop (bad) or sahf (bad) jbe sbb rex.WB xchg lods cmp cwtl xchg adc pop fwait invd xchg rcrl fwait jne sbb push sbb and sar xor cltd mov fldl mov (bad) sbb jrcxz pushfq retq movsb cmp push mov cmp jg icebp scas sbb fdivr push rex.RXB (bad) mull (bad) enterq cmpsb xchg mov (bad) push xchg xchg jg (bad) pop mov rex.RX int mov xor out sub jo popfq scas pop in pop ss mov sti xlat repz sub (bad) cmpl push sbb jle loope add retq int3 xchg sbb sub mov pop imul fbstp rex.RX gs lods and xor cs fidivrl xchg mov test xchg (bad) sti int3 sbb cltd adc sbb pop add (bad) test fucom xchg jl push fwait mov xorb lods mov sbb imul in rex.XB repz (bad) xchg jge pushq jrcxz fild imul fndisi(8087 mov ficomp (bad) xor mov xchg movslq sub mov (bad) repnz or outsl adc mov mul adc imul mov mov rex.XB jmp and fwait cs xchg jle push mov or xchg sub pop fwait cmp callq movsb fwait rex.WXB xor sti push rex.W (bad) pushq fwait add jle sub movabs mov movabs fstpt rclb xchg or testl sar rex.WX std (bad) xor pop jrcxz cmc insb and adc rex.XB rex.WRXB int3 jae fisttpl (bad) (bad) pushfq popfq (bad) (bad) fwait movabs andb (bad) fstpt mov imul cld out (bad) (bad) adc adc sbb sub sbb stos xchg movabs data16 and xor mov (bad) (bad) or pushq adc in xlat rex.XB in (bad) iret add and in sahf movabs rcrl add cwtl (bad) (bad) cmpsl (bad) jne cmpl fwait cmp push rex.WB fwait jbe sbb add movabs stc or (bad) rex.WX sub (bad) sbb mov cmp jrcxz cmp scas out and mov in repnz sbb cmp (bad) (bad) ds (bad) je sti imul pop sbb (bad) mov xchg fwait out sub movabs sbb retq or or loop fwait and int or mov cmp out imul fwait (bad) mov and test jrcxz,pt rex.XB sets or xchg rex push outsl add fwait loop adc mov jb mov (bad) push sbb leaveq pop mov push fildl movabs xchg mov jge faddl mov xchg rex.XB push loop (bad) mov sbb xor enterq sahf and push sbbl cmp stc sti jl (bad) rex.RX sbb test icebp es jmp lret sbb (bad) out push jle fistpll loop outsl add addr32 (bad) movabs flds xor sti sub pop loopne gs (bad) rex.RX jb mov ss sbb mov movsb fwait xor xchg and rclb cmp fwait sti movsl mov (bad) sbb xchg (bad) lods movabs jno negl scas mov and fwait mov mov (bad) lret sbb adc and repnz (bad) fwait sbb (bad) mov mov sub fwait and xchg cmp rex.X sbb andl rex.X push xchg cli fnstenv pop sbb xor shrb (bad) rolb (bad) (bad) hlt loop retq iret xor outsl test in push (bad) test mov jae (bad) roll sub jb mov cmp test add subl mov jo cmp mov (bad) push stc (bad) stos pushq (bad) (bad) and mov cltd add rex.WB cs pop jle out and cltd test xchg xlat mov rcr enterq pushq rex.WXB or sti mov xor ja movsl xlat add mov roll rex.RB pop cltd xchg jne jp mov stos xorl sub xchg mov (bad) (bad) (bad) fs (bad) shll pushfq jrcxz sub sbb and movsl sbb pop scas out xor sbb (bad) push xchg rex.R scas rex.WB cltd xchg jb (bad) xor push rorl movabs pop and pushfq xchg pop data16 sarl push add or sub xlat add (bad) sub movabs fistpl pop or cmp stos cmpsb retq out push ss (bad) (bad) mov repz (bad) push enterq lret js in pop ss jge mov cmp ffreep add rex.X sbb movslq push adc sub enterq and in clc mov xchg sbb and xchg std (bad) (bad) sbb cmp add minps (bad) fwait insb mov and fwait in lods mov movabs std pop xchg or (bad) scas mov jne (bad) cmc stc cmp rex.X fwait insb imul sub cmp mov jmp rex.R jno fwait int cmp movabs (bad) (bad) xor int3 xchg mov imul adc pop jrcxz rcrb mov movabs jb repz (bad) test (bad) fwait or in (bad) sbb movsb adc mov stos popfq (bad) sbb push pop and lcall movslq mov sti stos pop rex.B rex.WXB (bad) mov jg lods cmp (bad) clc lods (bad) (bad) lods adc jno paddw add and cmc mov mov cmpsl jo rex.RXB jrcxz clc std push hlt (bad) repz jge (bad) pop mov leaveq and mov mov cmp roll mov jle (bad) (bad) rex.RXB repz sub jne (bad) lea in lret xor and pop xchg in rex.WXB lods xchg (bad) push loop or mov pop jno int rex.X add jle push cmpsb sbb outsb pushq (bad) negq (bad) callq push or out mov pop insl and add or cmp (bad) pushq sub jmp xor jb cmp shrb jae out (bad) or (bad) (bad) (bad) xchg sub (bad) fstpt (bad) mov mov movabs or fisub mov sahf cmpsl movabs rex.RB scas movabs xor shl lahf ficomp scas or sbb retq push cmpsb loopne jl lcall jbe rex.RXB stc cli nop pop xor movslq out subl scas and jno mov jb popfq or sub (bad) fild fildl mov adc xor and sub jge (bad) fildl pop sbb pop and jbe (bad) movsl adc rex.RX add jns retq fistpl pop mov cmp xchg pushfq sbb loope or cmp add and ror fwait (bad) mov or rex.RB lret rex.R (bad) (bad) cltd insb fucomp push (bad) sti rex.WRXB rex.WXB out adc or enterq lret mull imul and cmpsl enterq in repz pop add xor scas rcrl sub jnp jbe shl sub cmp addr32 pushq movsb mov rex.RXB fisttpl imul sahf stc mov (bad) std test sub cmp ficomp (bad) bnd pop xor rex je lahf stos (bad) or nop lods mov cld rex.X test mov movabs mov fwait icebp loop cld repz cs (bad) (bad) fwait xlat movabs (bad) and (bad) test adc lret xor out mov callq fwait xchg xchg sub xchg vmulsd mov (bad) sbb xchg movabs (bad) repnz push jrcxz fwait add xchg imul (bad) (bad) or mov repz and push cli (bad) sbb fstpt adc movsl iret sbb retq jp outsl xchg pop fbstp rex.RXB fwait xchg jrcxz rex.X adc mov rex scas in movsl sbb movabs (bad) fxch movabs fldt movabs (bad) fwait je xlat adc rex.X and fstl (bad) mov stc (bad) fwait popfq jmp ja jno,pt fwait adc mov sbb cmpsl push and fwait jle mov lahf sbb outsb xor loopne scas pushq rol push (bad) rex.WRXB fwait jmpq sbb sbb mov push fistpl mov (bad) mov test jnp sbb push movsb in jmp sub rcrb mov rex.WR rex.WXB mov (bad) fstps in movabs xor mov (bad) sti cmc xchg cmp (bad) adc push jne sbb fwait adc (bad) out sbb rex.RX (bad) je pop rex jmpq stc scas sub cli out pop sub sti fcoml loope push rex.X fwait es rex.WR xchg int sbb sbb idivb (bad) fwait data16 addr32 and movabs sbb (bad) test mov fnop lret idivb cmc cmpsl (bad) (bad) movsb push addr32 rex.WB es add test shll mov sbb (bad) imul fild popfq mov pop sbb fwait mov lock cltd or mov sbb mov and mov or mov stos pop jbe adc fwait (bad) (bad) jrcxz (bad) (bad) xlat xchg xchg mov (bad) movsb movabs rex.WB pop sbb sub mov iret (bad) fwait paddd rex.XB jb (bad) and cmpsl cld (bad) rorl (bad) movabs pushq mov (bad) (bad) mov cltd adc (bad) pop sub fwait (bad) pop (bad) xchg mov (bad) popfq fistl or fwait cwtl movsb or (bad) movabs jle icebp cld fwait rex (bad) jno (bad) imul xchg xchg mov jo fwait and (bad) cmp rex.RX (bad) cmpsl iret fwait test adc pxor sbbl push xchg es xor imul jg or in (bad) push sbb and (bad) push rex.RB jmp jne frstor lea (bad) xchg cs add fistl pop cli fwait (bad) out mov rcrl fmull fnstcw mov jno movabs jb in mov and pop cmp mov fistp rex.B sahf push fwait sbb retq lods sti outsb (bad) cld imul (bad) xlat fwait mov movsb test mov xchg adc in addl fwait (bad) decb ss imul and shr sub incl (bad) out pushfq or (bad) cs xor adc fwait (bad) (bad) rex.WRXB rex.WX cmp callq fwait rolb (bad) cmpsl mov jl test adc mov and cwtl sbb jmp out jl repnz cmp mov mov xchg (bad) callq pop xchg lods sbb repz (bad) mov stos xchg push lret sbb (bad) cmp leaveq je jne cmp sbb shll enterq lods or xor std js pushq sbb rex.WRX mov rex.RXB rex.R jb pop push jns adc or cltd mov cmpsl (bad) (bad) mov pop sbb (bad) and and popfq xor mov rcrl in push test movsl jb (bad) (bad) cmp jrcxz pop adc rex.RXB jb sbb cs and pop xor iret or or addr32 add imul cmp iret negl in stos xor (bad) rcrl pop lahf adc (bad) pop enterq sbbl jno fwait lods roll adc in pop fwait out popfq sub fwait outsl movabs loopne mov (bad) mov shrb cmpsb mov jle (bad) sub (bad) out jrcxz scas sbb loopne sbb rex.RX mov xchg enterq test cmp push cltd gs jl vpavgb xchg jg adcl test or pushfq cmp mov flds sti or mov rex insl mov (bad) pop gs jno loop fwait push (bad) mov rcrb jmpq add cmc cmp sbb lea or adc pop (bad) fwait shrd cmpsb repnz add sbb data16 repnz mov stos cltd mov and sbb fwait add pop rex.WR (bad) iret mov rex.WRXB (bad) (bad) lret mov rcrb lods cmp sbb lods fadds rex.RB in in mov pushq in sbb add rex.R sub and or int pushfq in lods movabs fidivl addr32 push and mov add subb outsb fstpl jnp sti (bad) (bad) pop retq sbb mov (bad) xor jne xor stos hlt sbb lahf (bad) adc fsubrl out rex.WXB andl mov rex.RXB (bad) movslq hlt fwait rex.RX (bad) orl or rex.XB movabs mov jg mov jno and xchg fisttpl lods cmpsl popfq (bad) mov (bad) mov cmp (bad) jnp sahf scas sub (bad) sbb sbb xor jmp hlt test mov jg (bad) sub sbbl xchg lahf fisub add jp retq adc jmpq mov mov out add loopne or rex.WXB xchg jmpq or jbe in and rorl (bad) sub (bad) movabs jl cmp rex.RB outsl mov xchg push loope fs cmp sbb movabs loopne (bad) add fwait pushq out (bad) fwait cld mov pop xchg rex.X xchg mov mov cmp out fwait movabs mov add stos insl mov jb (bad) mov cld xor int3 add (bad) xchg xchg adc and test xchg movl fwait movabs or cltd loop sbb pop pop jns fwait add cmp and cmp (bad) rcr rex.RXB movabs es (bad) sar mov addl adc rex.WR (bad) mov in rex.WRXB movabs andl ss mov gs movsb andl callq fwait (bad) push ljmp sbb sbb cmc add js (bad) rex.R callq idiv loop rex.WRX or mov outsl fistpl and rex.WRXB fwait in loop cs incl sbb es (bad) or sbb xorl stc xchg pop cmpsl add pop movsb loopne cwtl jle nop mov movl sbb fwait in loop es mov or rex.X int3 xor lgs push mov sahf fidivr xchg push jl xor xchg (bad) jae sbb jnp cmpsl sahf fiaddl sub lahf int rcrl pushq rex.WR add or or sbb imul xchg adc sbb xchg sub and xchg (bad) test adcl rex.R fcmovnbe jg popq sarl xor cmp lret xchg xor movabs retq data16 jb xor add (bad) (bad) sahf (bad) sub sub outsl stc rex.WRX xchg xor vpsrad or rcrl pushq (bad) fs mov xchg rolb lods loopne movabs rex.XB xor cld push movsb (bad) movslq stos (bad) mov repz retq sbb movsl pop mov cmp insl cltd sbb in xor xor fldcw callq adc lret sbb pop rex.WRXB outsl movslq fdivrs add or jp mov jbe (bad) cmc adc mov adc movsl (bad) xchg sub loope retq sbb cld mov out xchg mov out fistpll rex.RXB movabs cld jp sbb (bad) jmpq or in (bad) rex.WRX movsl int xlat lods fwait loope mov and iret cmp rex.RB rex.XB movabs sub lahf repz retq fisttp mov jge fst (bad) test (bad) hlt xchg in out fwait (bad) jno adc pushfq jns fwait adc cmp sbb push icebp cld mov in fwait movabs lahf sub rorl fistp push push fnstcw sti jrcxz mov scas (bad) fwait movl (bad) add xchg movsb fwait icebp mov (bad) loope out rorl fwait xchg or retq sbb mov push fwait sbb pop push (bad) fildll mov sub cltd xor cmc (bad) (bad) (bad) jp movabs (bad) ja xor sub add es xor jne (bad) fcmovnu cmc retq fwait jno nop vpaddd out push cltd fwait or add fwait rex.X (bad) mul test (bad) xchg lret scas roll iret scas fwait outsl adc repz (bad) lret mov nop movabs (bad) push add out (bad) retq ror sbb push cmpsl shll lods jge mov push scas int3 sub cmpsb jmpq (bad) repz sbb sbb adc fwait rex.W adcb rcrl and jnp and or rex.RX pushq mov (bad) sub mov sti stc lods imul mov jmpq rex.WXB (bad) xchg retq mov (bad) add (bad) fwait scas imul je xlat mov es (bad) in rex.WRB add rex.WB lods stc sbb mov (bad) or rex.WRX fwait ds (bad) pushq jb sarl out cs loope int3 mov nop fisttp jmpq ds loopne rcrb add andl cmp fwait (bad) movabs xlat imul iret outsl sbb sarl fwait add jrcxz mov mov sbb (bad) cltd fwait add movabs enterq pop in jae xor (bad) sti xchg stos (bad) mov (bad) cmp or (bad) mov hlt fwait add subl mov (bad) adc xchg stos (bad) mul sub cmp xchg rex.RB fwait pushq mov adc mov movabs sbb add (bad) (bad) jp rex.RXB rex.XB pop add add adc cmp xchg mov jmpq rex.WX mov cmpsl cltd xor xchg je fwait movabs stc (bad) rex.WR fidivl sbb jno jne int sub rex.RB scas rex.X fwait add (bad) rex.RX xchg mov cmp fistp lods rol or cmp sarb xchg push and and mov lahf push fwait (bad) js mov fwait xor fcomi xchg mov xchg xorl or (bad) add mov clc jmp rex.WRXB retq cli mov fs fstps stos (bad) popfq or mov ror rex.RX cli (bad) movabs or out or cmpsb movabs (bad) fwait jge negb xchg scas jne jle or movslq pop int3 add xor lea movabs pop lea jne jl add repz rex.WRXB rex ss pop fild pop pop and (bad) scas pushq icebp es incb fdivrs jmpq (bad) xor add pop mov fadd xchg insl out sub lods sbb xor xchg sbb (bad) (bad) rex.X jmp ds lret rex.W movabs add (bad) mov nop pop in or mov movsb mov and sub (bad) xchg fsubl mov sti mov repz orps loope xor orb fs in cmp imul lods fcompl or jb adc (bad) out lea jle sbb sub sahf cmc (bad) sbb cmp rex.WRXB test rex.RX fistpl (bad) mov jge add int (bad) data16 (bad) xor sub jb push mov es in in cld add jae (bad) cmp mov sbb (bad) ss pop std negb cltd sub rex.RX movabs push jge xchg out sub sbb (bad) xor int3 rex gs sbbl push (bad) (bad) mov out push fist imul (bad) (bad) fs pop sarb or sub out (bad) sbb test push (bad) adc fisttpll rorb stc in or out (bad) (bad) int cltd pop insb outsl es (bad) (bad) out cmp shll (bad) cmpl movsl hlt jo fwait test (bad) jrcxz outsb sbb lods mov xorl std mov push rex.WRX sbb jmp orb rex.RXB xor rolb fistl sbbl fwait or cmc sbb fwait lods mov (bad) mov sbb out lret sub jae std mov xor out pop movabs pop pushfq stos fcoms scas (bad) mov out fiadd hlt js fcompl mov enterq sub (bad) pushfq mov loope in mov std pop out xchg rex.WR fwait (bad) lods lahf (bad) (bad) pushfq fwait shrb adc sub fwait rex.WR push loopne and or push add sbb (bad) and xchg mov and jb fwait movabs mov rex.RB rex.RXB xchg mov in push xor stos (bad) sbb rex.R and jl pxor or (bad) adc rolb repz rex.X enterq sti addr32 std callq repz scas cmpsb push sti cltd pop mov jle xchg js,pt mull xor fimull (bad) test pop mov push sti gs xchg test sbb mov xor and fistl (bad) xchg subl xorb push std fwait out cli (bad) (bad) (bad) in (bad) cmp sti mov jne test iret rex.WRXB imul icebp leaveq sbb add push je mov mov (bad) rcr stos leaveq mov ds gs rex.WRXB cmp insl cmpl cld push movabs xchg xchg sub rex.WR callq or xor fwait (bad) cmpsl sahf xchg jae jmpq mov sbb sbb xorl fwait adc cmp jrcxz fwait rex.WRB fs rex out rex.RXB fwait (bad) fucomip rex.WR add sub sbb jo fwait testb callq je cmp in mov mov or add sarl (bad) shl rcr rex.WX mov movslq nop (bad) xor cmpsl adc retq sub fcompl fwait jbe jl lods (bad) (bad) test adc fwait or xor mov test int3 es (bad) ds fwait movsl sub push mov sbbl (bad) stos (bad) fwait movsb pop (bad) lret (bad) push sbb mov lock ffreep fwait xchg pop jle or push (bad) in mov (bad) (bad) (bad) (bad) in mov nop rex.RB adc fwait test mov imull pushq movslq jrcxz cmc mov rex.X loopne cmpsl sub clc fcomps sub rex.XB pushq lods xor rex.XB push add movslq (bad) adc fwait rex.WRX mov sub cmpsl (bad) fwait (bad) rex.W rex.XB adc andl sti jo cltd (bad) (bad) js push mov adc loop clc (bad) add xor jnp add (bad) fldt cmp retq adc mov rex.WX es push in xchg mov (bad) rclb jrcxz sbb rex.RB je xlat fistl stc (bad) fwait sbb (bad) cmp out fwait xchg add movsb mov xchg outsb (bad) nop sti rex.XB rex.WX cmp lods fcmovu movsl test movsl xchg jns (bad) ss add retq retq xorb rex.WR sbb fisttp sbb rex.RXB rex fwait mov (bad) (bad) fsubrs cmp (bad) scas (bad) sbb pop lret je adc mov loope scas repnz js fs pop fs and or xlat outsl add jne mov xor sbb (bad) movabs sahf (bad) adc pushfq in (bad) jns ja xlat rex.X xor jmpq out push mov (bad) jge jle test sbb loope stos lahf mov pushq out adc out and rcrl mov cmc sbb jb mov test movabs fsubl add lret mov in fcoml (bad) jmp jmpq (bad) fwait orb xor fstps in xchg pop (bad) repz (bad) cld mov (bad) sbb mov fldcw repnz (bad) (bad) data16 lret jg (bad) lret fistp in xchg xchg lret mov nop adc loop fwait or mov (bad) rex.WRX (bad) lret movsb (bad) (bad) mov test fwait mov or mov in mov repz addb loopne (bad) xor imul cmpsb fdivrl rclb sub cltd ss fistpll xchg out mov pop mov sbb cwtl jb out pushq xlat fwait cmp ds rex.WRXB pop pushfq (bad) or rex.WX or pop mov mov std sbb in sbb fwait adc rex.XB rex.WRXB fwait pop cmp cltd retq rex.RB fwait rex.WR or adc sti (bad) sti jno mov push jmp callq gs fwait popfq leaveq or (bad) loopne fwait mov andb and ss stos jns fwait in shlb (bad) (bad) movslq (bad) movsb andl fwait xchg adc out outsb fwait xor nop test rex.WRB rolb test cmpsl fwait xchg and sub test jbe fwait jmpq icebp fwait rex.WX je (bad) or popfq adc pushq pop or sti fdivrl (bad) (bad) sbb pushq adc jrcxz fs sbb cltd sarl sbb pop pushq data16 add lret sbb rex.RXB shlb push add cmp retq movabs sbb test out cmp bswap mov jb mov in fwait mov fs (bad) mov jmp pop test add cmp imul fwait shrl xor int3 (bad) mov retq xchg push jnp in pushfq mov fwait and (bad) rex.WR rex.RB fwait (bad) cmp notl je fistl jl pop fwait retq test push mov xor js sub sbb fwait pop in push cmp (bad) mov rex.R or stos adc (bad) pop cmp iret sbb fmul imul or mov rex.WRX mov jno (bad) xchg fwait scas fcomps fmull roll pop cmpsl in adc gs xor jle insl stos fs (bad) add sbb add sti sub add clc lret cmpsl leaveq cltd cli icebp clc loopne push fwait mov rex.WX mov out (bad) sub (bad) sub rex.XB xor mov fidivl (bad) int3 movabs in jge retq add xchg (bad) data16 orb rex.X cmp loope fildl push cs vpaddd scas sub mov push in or sbbl xor (bad) jbe (bad) xor mov imul rex.WRB fwait (bad) fcoms (bad) (bad) repz sbb mov or in pushfq or cwtl adc push stos callq shll sub insl (bad) setno or cmp nop and fucomip mov fwait ja xchg sbb ss fwait orl sub jrcxz loopne push imul lfs and cltd xchg jl push fwait sub (bad) fild out jrcxz jae and cmp jbe cmp rcr sub repz in xor in fisub fwait or xor rex.RX (bad) adc loope sub or repz xchg fwait (bad) and rex.RXB rex.X cmc scas jl mov or and (bad) push je addr32 fwait adc add mov out (bad) and (bad) (bad) cs (bad) fwait push pop test (bad) in add (bad) and insl rex.W rex.WRB mov fwait add mov mov (bad) int insb sbb or xchg cmp push pushfq rex.RB test movsl mov insb cmp and (bad) xor (bad) cmp leaveq and icebp fwait xlat (bad) mov cmc xor pop pop pop push mov cmpsl fdivrs lock (bad) (bad) roll div mov xor sbb sub mov add adc jae add icebp rex.WRX rex.B (bad) movabs rex.R adc (bad) pop out mov cmp insb (bad) divb (bad) adc cmp jrcxz in shl data16 mov push adc fwait jle jns (bad) iret lea fwait in rex.RX repnz xchg xchg rex.WXB mov jno lahf cmp shrb add and mov loop fwait (bad) movabs scas in jle (bad) adc jmp pushq fs outsl movslq xor xchg repz xchg xchg fistpl jbe xchg jge adc por sbb (bad) imull adc add mov rex.WRXB (bad) fist rorb in (bad) mov or pushfq (bad) (bad) (bad) sbb movslq mov sbb divb stc fldl jo cmpsl rex.X loop pop sti mov iret adc ss fwait jmpq ror (bad) fwait sbb (bad) fwait lret imul or (bad) hlt fwait (bad) fsts sub rex.WRX lock decl push pop fwait adc rex.XB in lods and fwait (bad) std movslq imul fwait rclb rorb and rex.WRX fcmovne testb push test cmpsl cs rex.WR mov jmpq (bad) (bad) ficomp sub cltd xchg push and (bad) (bad) jbe out movabs and mov pop pushq (bad) mov insl add loope or (bad) lret repnz (bad) rex.WX loopne fwait je test cmc flds (bad) mov cli repz lret mov pushfq shrl ss and incl faddl mov movsb fisttpll and or jl rex.RXB sbb rex.WRB mov fs adc mov int sbb xor (bad) or stos add or scas rex.WXB xor fidivl fwait rex.WX and (bad) fwait rol (bad) add jmp xor loop (bad) cmp lods scas mov add xor xor pushq add fbld sbb lret and stos pushfq rex.WRX rex.B sbbb sbb or rex.WX int3 sti and or nop mov rex insb xchg rcll jbe xchg rex.X rex.WXB (bad) cmc shll mov jrcxz adc mov adc sbb rex or (bad) jge cmpsl lret movslq icebp (bad) lea sbb sbb pop cld rex.R rex.XB es callq sbb push jp sti retq icebp cli jb fwait xlat data16 jmpq callq (bad) out cmp cmp xor or cmp lret (bad) rex.WR rex.RX (bad) movsb rclb (bad) fwait mov mov jmpq orb (bad) fwait stos sti (bad) scas sahf adc push sbb pop callq in leaveq sti or sbb outsl sub sbb mov and mov adc (bad) scas xchg fwait mov mov fstpl sti retq (bad) jne movsb sbb (bad) cli pop stc repz test xchg xor cmp lock fwait (bad) cmp adc cmp fwait or or mov xchg movslq mov sbb insl movabs (bad) rcrb callq sub jne add add rex.WRX stos (bad) cli stos (bad) or rex.X fwait (bad) sub jns (bad) flds (bad) rorb sbb rex.WR movabs adc rex.XB repz or pop rolb adc data16 lock test (bad) mov in pop fwait add rex.RXB xchg fidivr movsl jp jb fwait cmp rex.WRXB sbb sahf mov mov adc (bad) mov add xorl int3 in jmpq rex.WXB and or mov clc leaveq add (bad) or (bad) sahf movsl in sbb or pop mov (bad) fwait add xlat jrcxz adc (bad) icebp cltd repnz push hlt in fwait lahf mov (bad) or sbb xchg pop (bad) push sbb fwait or lods movabs (bad) (bad) sub jrcxz mov xchg sub es (bad) push (bad) (bad) in imul stc int3 rex.RX (bad) clc xchg fwait cwtl rex.WX (bad) out xor sbb (bad) sahf sbb idivb xchg fistpl outsb adc in in cmpsb and cli rex.RB rex.RB lock movabs test retq cli (bad) xor mov mov add mov push outsl sbb or xchg in push fwait sarl out mov sti cmpsl stos jne jl sub je test xlat (bad) addr32 cmp ss jrcxz sub (bad) (bad) adc js push fwait cmp (bad) fs (bad) outsl sbb (bad) (bad) fisubl sahf lods mov push sbb jrcxz (bad) movabs scas xchg callq and in std cli rex.XB rex.B mov es pop rex.X mov add jl rcrl sbb xchg pop or fstps ds fwait in ja test adc (bad) pop lret subl movabs stos rex.XB push sti adc and subb loopl fwait movabs in mov xchg rex.WRXB callq sbb push jp rex.B sbb rcll sub (bad) in retq pop insb fnsave (bad) rex.RXB (bad) movabs jmpq rcll adc or loop sub lods mov mov adc sti xlat loopne lea (bad) jmp enterq int rcr or mov jo pop notb in add lret add cmp xchg fisubl mov in (bad) fwait lret and repnz mov lret fdivs mov push adc rex.RX js movabs jo (bad) xor cli fwait test xchg sbb pushfq mov lock ja or mov stc fwait sub pop (bad) (bad) imul (bad) xchg retq jo or ss cmp mov cwtl (bad) rex.RB fwait xor pop lret or (bad) add sub retq sarl jmpq repnz cmp lock pop and fldl mul sti (bad) xor mov pop xchg imul and repz or pop cmp mov sbb mov outsb (bad) ja mov pushfq (bad) jge adc mov (bad) fwait (bad) adc icebp (bad) rex.WRX jno out loop fucomi mov gs push (bad) pop add and in jne jno push (bad) bnd callq or (bad) movabs sbb push retq mov pushfq lods mov (bad) lea xchg stos fwait xchg out xchg (bad) jno and mov ja cmp xor lods mov int3 sbb lods std loopne addr32 mov (bad) mov xchg (bad) rex.RXB (bad) mov sub fbld imul or clc in (bad) cmp add xchg sbb imull rcr pop es push std jl (bad) fs movabs loopne add fdivrs sub testl pushfq cmp sub test mul ja rex.X lock sarb pushq ror rex.X movabs and lret (bad) cmp stos scas addr32 (bad) sub fcmovnb adc (bad) sub iret cmpsl sbb xchg outsl out pop (bad) je retq (bad) mov sbb (bad) movslq cld pop or xchg loope cmp imul mov mov jb fdivrl jb mov scas es movslq rex.RB adc std cmp push adc xchg xor or jo mov xchg in sub sbb cmpsb sbb (bad) sti stos gs cwtl mov adc mov sbb rex.RX incl subb cmp in mov in mov rex.B imul lret xor mov or jae loopne pushfq push imul add pushq rorb std (bad) pop (bad) imul rol pop adc (bad) fwait mov movabs fisttpl jle retq fwait mov add popfq mov and jmp data16 rex.XB (bad) rex.WXB fwait jg xchg mov mov sbb (bad) add andb out pop pop out sarb and add jg callq in (bad) jmpq loopne fwait test pop jbe jae rex.X cmovs lods out (bad) (bad) out movabs add fldt xchg out imul std mov repz mov xor and fwait insb pushfq rex retq (bad) rex.WXB out leaveq mov (bad) rex.WR rex.WX xchg sti movabs jmp xchg cmp (bad) jae je imul adc fwait jrcxz clc (bad) xchg sub loopne xor and (bad) (bad) loope sti bnd fcompl cmpsb sub fwait rex.WX mov jle movsb fwait mov sbb sbb in mov xchg insl hlt fwait retq adc mov cmpsb xor (bad) mov adc lahf imull xchg cmpsl out rex.WXB adc je cmpsl rol (bad) cmp xchg sub sbb sub fwait mov callq jnp std mov cmp or (bad) out mov sbb adc (bad) gs sbb retq bsf pop pop movsl negl pop addr32 in fisubr cltd pop movabs push (bad) jle (bad) mov adc cmp test mov mov rex.B push mov outsb pop push stos (bad) (bad) jmpq jbe or (bad) in push xor pushq (bad) pop cmp lret sbb xchg jg mov rex.XB retq (bad) divl scas addb cmp (bad) js (bad) scas mov cmpsb adc hlt (bad) test rex.W out out in (bad) or nop rex.WRB adc cltd rex.WRXB push nop and xchg pop (bad) lea sahf push jno retq jbe and cmpsb (bad) (bad) jg sbb ja movabs retq je js movabs add sbb jno pop mov (bad) push sbb pop je mov mov sub fadds (bad) outsb and xchg xchg (bad) (bad) or cmp rex.RXB rex.RXB divb mov je rex.RXB jne jl xor add sub or (bad) pop ds mov rex.WRB (bad) cld in adc (bad) int3 loope pop retq in jne mov sbb pushfq (bad) cmp jmpq mov movabs rex.RX rex.WR rex.X (bad) callq out adcl mov insb scas (bad) sahf cmc xchg pushq sbb stos (bad) xor movslq add sub xchg mull (bad) xchg jrcxz sbb xor fwait movabs fisubr rclb cld int3 in movsl push mov cmp rex.B movsb (bad) mov nop outsl int3 sbb xchg stos push push (bad) pop adc or pop rex.XB (bad) (bad) mov (bad) adc adc leaveq add repz sar pop lods cmp ss data16 fldcw mov sbb sub xchg sbb fwait imul stc (bad) and jg test pop (bad) sub and mov fnsave (bad) scas (bad) movabs xor fwait mov lods and add (bad) jb cmp mov and pop (bad) add fcmovbe pushq leaveq loope and cmp xchg adc out jp jo clc adc xchg (bad) callq rcrl test sbb in cmp iret jo imul xchg insl or sbb cmp mov movsb nop (bad) mov jg xchg jbe (bad) fwait (bad) (bad) subb push mov popfq xlat iret popfq sub rcr mov mov add push fwait push (bad) cmp fwait xchg or or rex fistpl stos cld rex.WXB fwait rex.WRB jmp mov jge sbb fistpl outsl xchg push xchg jbe fstps xchg (bad) and add cs (bad) jmpq paddw fs in popfq xchg ja sbb xor mov xchg mov push xchg and (bad) pop outsb pop retq (bad) mov xor mov pushq xchg (bad) xchg (bad) xor retq cmp mov decb rolb (bad) rex.X sub jg pushfq fldt cli cmpsl (bad) cmp mov mov xchg fwait loop add testb (bad) pop pushq (bad) push and jg (bad) jp addr32 cmp popq adcb push xchg fwait add (bad) jp lea rex.WR mov mov (bad) cmp add sub repz sti and (bad) rex.X fwait jne rex.WRXB fwait (bad) xor rex.RB adc fbstp nop clc fwait stc mov sub sbb rex.RXB rex.WRXB mov (bad) jae fwait xor xor sbb fiaddl sarb movabs rex.WRXB add movabs outsl fwait xchg sbbl popfq (bad) push (bad) and mov mov jmpq xor fwait cmp jge gs mov fwait push int fs xlat and xchg movsl lock mull (bad) test sub cmpsl (bad) sbb jbe outsl sbb std adc fwait rex mov fistp add jb loope addl push sbb jbe cmp xor cmpl outsb rex.WXB mov jae (bad) flds jb fistl imulb sbbl retq movsl (bad) fwait jae sub xor (bad) fwait sbb rex.WRXB mov int3 clc sarl movabs rcrl mov cmp rex.WRXB rex.WRXB rex.RX je mov out fwait nop push pop (bad) xchg adc mov sbb jg jp jmp rex.RB stos shl sbb or mov fist and fwait push (bad) cmp jns rex.RX rex.B fwait rex.W mov iret (bad) ficomp jne jmpq add movabs jmp (bad) (bad) sub sbb loope (bad) js xchg rex.W (bad) fldt rex.RB fwait (bad) cmp push in fwait cld lret (bad) xchg pop cmp xchg mov (bad) xlat (bad) mov rol stos pushq (bad) mov adc fidivr adc add push sbb es idiv (bad) rex.W fwait adc mov jmp movsb mov mov xchg xchg cmpsl (bad) iret add fcmovnu hlt std sarb repnz jp int3 lea pop rex.WRXB rex.X fwait sarl lea jo movabs enterq movabs and clc retq sti lods adc xor (bad) pushq jno cli ds sbb retq (bad) fwait in xor fwait sub int cmp cld adc stc sub fcomi fwait not and fwait lods scas cs out (bad) (bad) cmp mov xor xchg (bad) cmp (bad) int adc rex.B retq add scas in mov xchg stos (bad) movabs pop jp xor sbb pop add rex.X rex.R fldt cmpsb rcrl xor in cwtl adc sub loop jg push jmp movabs scas sbb mov fidivr (bad) jl or (bad) mov icebp rex.WXB fwait sarb (bad) or push (bad) je fwait stos fmuls xchg fwait jge callq stc fwait lods adc and ror loop jno repnz (bad) rex.RXB cltd fwait (bad) pop adc (bad) mov pop jno stos fwait pop js (bad) in (bad) in adc jbe (bad) icebp jae cltd fbld fwait mov jge xchg fcmovnu mov (bad) add adc xchg lock cmp (bad) push jmp fistp adc fwait in rex.WX cmp (bad) cltd in and jge (bad) cmp orl push add adc pop lahf jnp mov movabs cmp fwait pop push imul rex.XB xchg pop cmp and js icebp in ljmp (bad) (bad) lods pop (bad) fistpl cmp repnz sub ja out cmpsb (bad) movabs fldt lods out fwait mov adc cmpsl fwait repz repnz rex.WR imul repnz fistpll stos outsl fdivrs rcrl sbb sbb sbb sbb jae (bad) or (bad) fbstp scas (bad) cld push rex.WXB and (bad) (bad) fmuls data16 jle iret adc (bad) xchg rex.B fwait scas out mov mov imul (bad) pop xlat fwait or insl and rcll (bad) mov rcrl xchg mov mov in in sbb adc sub (bad) (bad) pop (bad) fsub push retq movabs ffreep fwait es rex.R (bad) (bad) clc loope adc adc sbb push fwait add je jne mov adc mov sti jno jge mov rex cld (bad) andl xor add fwait jbe retq mov fwait xchg js sahf out push movsb adc fdivrs mov add scas movabs sahf fwait retq movabs rex.WB mov pop fwait in xlat push loop pop cmp add (bad) fcmovnu push iret pushq outsl ficomp test fwait imul xchg fwait or mov xchg (bad) (bad) fwait xor lahf in fwait lods loope mov sti (bad) jrcxz (bad) lea mov subl mov jae cmp fildl in mov out cs xor mov (bad) sbb (bad) lret ss jmp (bad) in shll mov in (bad) push jo rex.RXB xchg fxch lock rex.WRX jnp andl fwait stc cmp sahf fs push jns data16 adc mov rex.RXB fildl addr32 sbb fwait xor insb jne stos push punpcklbw pushfq cmpb lods push (bad) xchg (bad) stos out loopne leaveq cmp adc mov add (bad) fwait add pop stc jmp sbb xchg push xor hlt xlat mov rex.RXB fimull mov adc and divb movabs callq loop,pt sbb ds xchg or cmpsb xchg mov rex.RXB adc jge sbb jge out (bad) xor (bad) and sub lahf xchg sub fisubr xchg and and hlt rex.X sub push fwait sbb (bad) push jp rex.WRX cwtl test rex.RB xchg xor adc cmp (bad) mov sti out cmp xor in sbb fisttpl out ffree (bad) popfw movabs and xor subl mov sub pop popfq jl sahf loopne icebp and jp or (bad) js pop jmpq jne pop xor lods (bad) rex.WXB movabs cld rex.R loop (bad) or (bad) cmp int3 cmc rex.XB push (bad) xor fnstsw or rcrb out mov in es or xlat adc (bad) repz rex.WXB sbb imulb subl sbb outsl popfq adc retq xchg (bad) (bad) in cld xchg sbb insl std gs mov cltd (bad) fwait test and ss sub mov xchg mov sub push cli rorb popfq sbb sbb fist or adc loop cwtl sti mov xlat jae icebp xchg cmpsb in loop jb repnz adc hlt add hlt adc sbb (bad) and (bad) mov lock (bad) rex.R ss jmp mov jrcxz mov pushq push cmp imul enterq add rex.R addb push stc (bad) rex.RXB cmpsb xor jno lahf push rex.W orb (bad) pop lahf (bad) fwait (bad) jp mov lret fwait out adc xchg xchg rex.WRXB repz xorl in fwait push (bad) rex.R rex.W sub negb push (bad) mov repnz fwait decl or mov xor pop sbb in leaveq icebp rex.WRXB (bad) (bad) mov and (bad) xchg in and repz (bad) (bad) sbb jrcxz (bad) push callq (bad) fwait adc pop std insb push rex.RB fwait jae mov (bad) fwait (bad) or cmp scas mov rex.RX mov (bad) adc xor and xchg add and out sub cmpl adc sbb (bad) sub ficomp rcrb (bad) insb int xchg (bad) repz imul test imul adc fwait pop stc (bad) (bad) xchg mov stos rex.B fbstp add outsl (bad) rex.WRX (bad) push fwait mov loopne imul (bad) mov xchg test (bad) lods xor out rex.WX (bad) adc xchg gs mov jge fwait sbb scas (bad) mov out add lods imul fwait lea retq rex.WX pop fwait mov adc repz pop and mov jmp lret fisttpl xchg movabs scas rex.RX data16 mov movsb (bad) xor int push out and repz (bad) fwait (bad) nop int3 mull rex.WRX sbb fisub lods pop or (bad) rex.RXB rcrl (bad) mov rcll sbb movabs and insl int3 fistpll rcrl jae (bad) fwait mov rex xor test mov (bad) (bad) movabs push fwait data16 push jge lock pop rex.RB (bad) rex.XB (bad) leaveq fwait rcll push adc jrcxz int3 lcall mov hlt cmp sbb idivl (bad) push callq adc rex.WB bnd sub fwait mov mov rex.RXB fdivrl and (bad) mov xchg (bad) mov shr and mov fwait sbb cli jo (bad) mov movsb cmp cmp push addr32 jb xor (bad) jmp fild add push (bad) leaveq imulb (bad) rex.WRB rex.RXB icebp add pop xchg mov sbb or fwait jrcxz rex.RX (bad) add mov movabs fwait je xchg orl push jbe add pushq and xlat jmp fs cmp cltd rcrb and and insb or rcrb (bad) or adc fwait jmp (bad) mov xchg fs test ja sub jae out mov mov add or rex.XB xor stos out sub fwait leaveq cmp sub loope fwait cmpsl hlt and xchg mov outsb xor lods cli sbb mov pushfq inc jmpq insl (bad) adc mov and pushfq sbb jmp insb mov xor movb add fwait jne or in sysret (bad) loop sbbl rex.RB rex.WB fwait movabs std fildll (bad) (bad) cmp sti lods add sbb rcrl jb and addr32 adc out cmpsb fcmovne or sbb icebp and stos js fwait mov jnp or in xchg (bad) setp sbb rex.WRB mov mov mov adc and and in and sub cmp or add repz leaveq xlat rex.B fwait fs push rex.RB and (bad) xchg test or jg outsl xchg retq iret jbe ficompl sub pushq rex.RXB mov (bad) sti xlat scas jns rcrb cltd (bad) mov xchg and push pop mov fldt push rex.RB rex.RXB pop xchg adc (bad) jmpq sbb push stos rex.B (bad) jmpq fwait imul sbb movabs in xor fwait (bad) es sub (bad) mov hlt pop cmp (bad) or stos add es adc (bad) sti jae mov (bad) scas and (bad) mulb enterq std mov scas (bad) jo stos push loop push (bad) rex.WRB sbb cld mov iret fwait enterq fcoml test adc idivb fucomip fwait int3 sbb or sbb frstor xor xchg cmp rex and sbb mov mov pushfq xchg cltd rex.WR fwait pop test cmp lahf fwait in mov lods (bad) icebp fwait sub movabs pushfq jno mov gs ss lahf popfq add (bad) (bad) (bad) cltd sti add jmpq enterq (bad) push (bad) push mov cmpl (bad) (bad) movabs test xor (bad) xor and imul adcl loope sbb loop (bad) xchg sbb rex.WXB pop (bad) imulb mov testl mov mov (bad) jmpq sbb sahf neg rex.R and fildl nop rclb sub xor (bad) fwait lods sub cli (bad) cmp cmpsb jl xchg (bad) adc (bad) rex.WR rex.R push sbb cmp jge out mov (bad) pushfq loope std test hlt adc push rex.X jae mov out rex.WXB rex.RXB test (bad) fwait cs jmpq fwait xor imul scas push repz out mov (bad) sub icebp cli push mov xor rex (bad) stc push (bad) rex.X movabs sbb push int mov add adc scas lret xor and (bad) rolb (bad) push jns jo add insl rex.B fwait sub mov or or mov (bad) outsb xor xchg test test subl fwait and rex.WRB out sub push fwait pop jnp std vpcomw cli movabs in lahf or jno outsl (bad) jmp (bad) adc rcrl cmp movabs fs outsl xchg out rcrb (bad) mov push es jno callq lret stos je xor jrcxz lret stos pushq sub or fwait insb pop (bad) cmp xchg adc cvttps2pi jmpq pop jl push sti loope subl stos mov mov popfq mov (bad) and imul xor ss cmp (bad) and fwait (bad) (bad) (bad) test (bad) adc (bad) (bad) out mov retq pop fwait out cmpl jg rex.WRB add (bad) xchg jne (bad) mov ds xor add loop andl test shr jne or xchg enterq imul cld (bad) xchg fwait jge jle and loopne,pn in cmovae (bad) ds test (bad) jne pop loop and iret or cmp xchg movabs lret rex.RXB gs or callw leaveq test rcrl in add cmp jmpq sahf sub fwait addr32 jae jmpq es xor fwait and or jp imul add negb int jb loop mov jle (bad) jmpq mov add lock fwait stc rex.WRB (bad) cmp lcall mov enterq jo adc pop std jmpq cmp mul jns rex.RX fwait rex.WXB fcmovnu (bad) adc add mov (bad) lea mov push mov cmp in mov movabs rex.RXB xor scas fwait lret insb xbeginq loope fwait add mov shr sbb cwtl (bad) mov and jl pushq jbe (bad) rex xchg jo gs adc imul and jg mov rcrl loop rex.RXB in or jle pushq sbb sbb add int3 add je rolb (bad) dec jb ds (bad) rex.XB leaveq sbb icebp loopne xchg mov pushq fldenv rex.RXB sar rex.XB sbb or xchg subl sbb fldl (bad) loop js stc popfq jne loope sarb mov out lods xor frstor jmpq jle jmp xor mov push xorl fwait rex.RB test sub je fwait jp xchg mov (bad) cmp mov shl in (bad) fnop (bad) mov callq add xor xchg js sub jbe repz loop (bad) jmp pop int3 pop lahf cld repz sub fstpt (bad) adc rex.XB rex.WR movsb stos fdivs xchg jmp insl adc retq rex.R rex.WRB fwait xor sbb jb fwait adc (bad) (bad) rex fwait add cmpl sbb mov fwait fs (bad) test adc mov add cmpsb lock rex.X popfq out mov pop pushq testl mov jne (bad) out adc mov adc movabs sahf xchg and and add ficoml sbb fldcw cld mov movabs test movabs sahf (bad) cmpsl (bad) outsb jo out pushfq fwait (bad) and xchg rex.RXB adc in cmp mov movsl (bad) jns pop and add (bad) test jg stos ds rclb mov xchg test (bad) sarl pop fs cld fildl mov and movabs popq icebp adc leaveq (bad) cmp incl sbb scas sbb in lahf jnp xchg fwait (bad) mov out mov in lock jns cmp lahf nop movabs sbb rex.B sbb jnp sub leaveq rex addr32 (bad) (bad) or negl test fsubrl mov (bad) ja std iret sbb sub cmc mov jb jmp xchg mov xchg pushq scas sbb fcomps jae std (bad) js jbe jge retq (bad) int3 cmpsb movsb iret fwait xchg sub add orl sub (bad) fwait (bad) in out mov add mov jo cltd out and sti fwait sahf insl pushfq out (bad) (bad) test rex.WR add iret sbb rex.WRB fwait push (bad) shr (bad) callq cmp lret stos mov jrcxz cs xchg fwait cli mov adc cmp pop cmp xchg addr32 lods add push sbbb (bad) xor stos push loope (bad) fwait mov mov adc and xor jl je negb gs sbb (bad) rcll mov xchg fwait (bad) (bad) sysret jrcxz add sahf adc sbb es (bad) std mov in fwait nop or add sbb ds mov movabs int3 scas rex.WB fwait rcrb xchg add ja jb jns pop xchg rex.RX iret xlat ljmp fwait cmp cmp out (bad) (bad) cmp xor mov pop (bad) cmc int fwait scas mov lods movabs and cmc test andl rex.WX or lea movabs (bad) xchg cs (bad) imul mov popfq je jno add (bad) nop int fwait decl cmp out push repnz fwait adc mov movsb (bad) (bad) retq mov push fwait (bad) lret pushq and xor push std out sti fisubl cmc fucomi add fwait movslq cmpsl mov (bad) fwait sub stos fs xchg mov and loopne mov (bad) push fwait stc lock test (bad) pop int in sti xor mov cli add data16 movabs rcr add stc addl lret insl jrcxz retq icebp movsl sub add mov mov jle (bad) pop fwait test rex.W rex.WRXB sbb imul loope adc add (bad) fiaddl (bad) mov fldt retq rex.RB rex.XB add (bad) pop cwtl mov cld pop jle lret add in test mov fwait (bad) cmp repnz jo pushq enterq mov fwait cmpsb and or mov jo sbb xor mov fwait mov mov (bad) sbb mov jnp rex.WRXB ss fwait xchg cwtl rex.X push (bad) test fwait xchg sbb lods add or mov jnp jmp movabs (bad) adc xchg (bad) (bad) fistl cmpsb sbb retq int ds cmp push (bad) ljmp adc or hlt (bad) idiv or loope fsubs or in lret pop int jp movabs fimull sbbl ds or mov add pushq mov outsb cmp add xor adc insl (bad) adc (bad) mov imul or pushq xchg fcompl (bad) adc sbb jno movslq pushq cmc (bad) std fwait xlat insb and fwait (bad) mov (bad) sub (bad) notl xadd out push adc and (bad) (bad) hlt stos jb out fwait pop fs mov scas cmpsb (bad) add fwait iret (bad) xchg add subl sbb add (bad) mov mov out scas fwait mov jrcxz enterq xor rex.X (bad) out rcll or in out sbb stc out (bad) (bad) nop int3 jmpq and movslq movabs jrcxz pop popfq fnop cmpsb fldcw xchg sub repz sbb sbb stc out lahf jmpq mov sti rex.X es jmp lods clc adc pushq (bad) rex.W jp (bad) movabs shl ficoml fdivl mov pushfq cld (bad) movsl movabs xor cmc and mov lret mov (bad) (bad) mov test andb or pop adc loop mov movzbl or adc (bad) mov mov jrcxz sub (bad) repz callq sbb int3 movabs fisttpl frstor out (bad) jl pushq jmpq sbb fiaddl (bad) rex.R gs mov push mov push jns (bad) rex.WXB (bad) fucom lea sub test rcrl mov sbb cmp jnp cmp movsb or std (bad) js fwait popfq pop jmpq (bad) rex.WRXB xlat addr32 (bad) (bad) movsb mov pop pop mov iret pushq push (bad) push movslq or mov sbb mov fstpt rex.RXB fdivrl rex.X pop cltd mov add mov mov (bad) or add add push or int3 cmp mov sub push sti rex.RB in fistpl movsl in fldl rex test or loope in and xchg cmp (bad) jns cwtl sbb add mov rex.XB shrl cmpsb mov sbb fcompl xlat push movabs mov push jg mov pop movsl pop jae loope icebp lea sbb jbe (bad) mov jne rorb mov rex.WRB out sbb xchg mov rex.B mov (bad) out fstpl popfq rex.WX sahf rclb mov cs stos pop cmp ffreep and xor lcall rorb retq sbb in imul adc in (bad) push sbb fistl jb sbb sbb insb lock jo icebp fs xchg adc xor add (bad) adc stos stos cmpb (bad) (bad) and fwait je sub addl jns jp retq mov fwait loopne (bad) xor ss fwait (bad) int3 add xchg rex.WXB rorl fstpl (bad) js mov (bad) pop cmc popfq mov add lret retq add push sbb mov (bad) icebp cltd pop add in cmpsl adc loope fwait cwtl cmp jne iret mull mov sbb sahf add (bad) test loope mov shlb xchg jmpq (bad) cli mov (bad) mov fwait sub ficoml (bad) fwait jnp iret pop fsub add notl rex.WRB (bad) (bad) (bad) in lods loope lods sti and stos and fwait in rorb adc test or repnz out sbb mov fildl hlt mov (bad) rcr fsubp and movslq (bad) jne enterq mov outsb fwait (bad) add data16 xchg es hlt (bad) fwait jbe js and fisubr fwait in cs rex.WB scas pop fwait movabs mov rorl jmpq movsb fwait pushfq xor decb mov (bad) xor (bad) sub retq (bad) cmp cwtl fwait push ja lea sbb mov fadds sbb pop psubq push cwtl js test mov lret lret or (bad) xchg push addb movsb jnp mov or fwait std rex.WB or cmp sub mov or and icebp and rex.WXB int addb addr32 int3 rex.WX xchg add mov xchg xor lret (bad) and pop add (bad) lret or xor push sbb xchg ja or gs mov rex.WRXB movsb out adc fwait (bad) xchg jns rolb jbe cs movsl cltd hlt rex.WRX mov rcrl clc sub out movabs sahf es lods jle rex.B out fwait retq rex.WR callq rex.WB jns mov mov movabs (bad) sbb mov push (bad) icebp (bad) sub pop test je rcr rcrl pop imulb sahf adc popfq lods loop (bad) rex.WRB xlat insb push mov sub out sub or sbb leaveq out xor cmp sbb rex.XB jae jno sub mov add add sub pop clc mov sbb cmp add and out rcrb jno or mov push movabs (bad) push loop scas mov fwait mov nopl lods xchg or std fwait retq add iret addl mov callq sub push outsb or sbb xchg and push repnz and pop jle rex.WRXB vmovsd adc xchg hlt sbb fwait sub int (bad) xchg adc xchg rex.RXB (bad) fisubl (bad) rex.RB adc add push scas lahf pop jmpq cmpsb (bad) movsb fwait repz jne jp sbb cltd pop insl hlt sti (bad) sbb pop stos mov lods int3 xchg loope sbb fldcw or xchg (bad) rex.X movabs cltd and lods or add (bad) mov sbb addb sbb leaveq (bad) clc fwait out mov (bad) cltd (bad) or push jg jno push sti rex.B rex.RX mov (bad) cs and enterq sub pushfq enterq cltd lock sbb add sub cmp or sub mov fistpl xor rex.RX out sub loop jb jnp rex.WB rex.WRXB nop xor (bad) ss sbb fs lea (bad) (bad) mov sbb (bad) jno fnstsw pop mov sbb or incl add mov (bad) callq or ds xchg lods int3 cld rorb xchg fdiv mov ds jle (bad) int3 cmc jg and cmp (bad) rex.R cmp (bad) (bad) out in push (bad) jmp pop out lret xor push lret retq and sub xchg xchg (bad) sahf push pop rex.XB rex.WB xor sbb rex.WXB loop sub (bad) jl (bad) (bad) xchg pushq fstpt jl movslq fistp shr int3 (bad) (bad) rex.WXB es (bad) jl jnp repz sub rex.WXB out (bad) add xchg sbb lods xor (bad) loop loop out rex.WR fcmovnbe (bad) sbb xor mulb je (bad) icebp add (bad) loope (bad) (bad) pop (bad) mov xchg adc faddl fisubl stos xchg clc fwait stos pushq sbb out sbbl fwait push xor (bad) rex.WRB xor fwait jl outsb cld sbb (bad) loopne mov jbe cmp es sub mov mov movsb adc pop (bad) (bad) rex.WRX pop (bad) jrcxz fistpl mov shlb push xor jmp (bad) adcl xchg fistpl jp rex.R lods jg or mov jne pop fistpl fwait cld (bad) rex.RXB push mov sbb (bad) mov loop out add fwait jo xor movsl sub (bad) stos fwait mov add xor movsl mov (bad) or mov or and or (bad) movslq fwait xchg jae cmpsb pop jb adc (bad) (bad) fistp sub in (bad) (bad) scas lahf adc lods adc ficomp xchg mov (bad) add stc shrb xor sbb sbb in mov nop negl fwait scas js fldenv (bad) clc rex.WRB fwait rex.RXB xlat xor sub out test xorl xor movabs adc sti btr (bad) (bad) pop imulb outsl mov xchg insb xor cmpxchg addr32 sbb sti mov (bad) movsb fnstsw rex.WRX ds bnd (bad) and icebp rex.XB jae or mov cmc jmp cmpsb add (bad) popfq retq rex.WRX leaveq xor adc xchg cli in pop jae rex.WRB mov jo rex.WX lods push xor cmpsb pushq jl sub push sub add push sbb popfq loopne sub jne (bad) (bad) pop push push movabs cld lret enterq jnp fistpl (bad) adc imul and xchg adc cwtl scas hlt (bad) jmpq mov xchg movabs lret xchg xchg je in movabs mov xchg adc outsb mov add push mov (bad) mov rorl (bad) cmpsl test fisubl ds and or cs js (bad) and rex.RX sti jg xlat cltd xchg lea push cmp add fcom rex.WR (bad) (bad) cmp (bad) mov out loopne rex.W (bad) (bad) sub sbb mov (bad) mov pop jns je mov (bad) fistpl callq rorb faddl cwtl scas pop sti pop (bad) lods mov insl sahf bndstx cmp mov ds xor lret lods pop mov stos rcll pushfq rex pushq cmpsb (bad) sub cld (bad) sbb jg mov lea pop popfq rex.B mov in or rex.WXB jg mov sbb push xchg int3 sub (bad) loop cmp mov leaveq out rolb add (bad) push movsl jp imul lret mov rex.RX sub push mov xchg jmp xor rex.B rex.RB test xchg lock mov (bad) out (bad) xor (bad) in mov xchg fcomps and test pushq mov loope flds lret or (bad) movslq push (bad) sti out sbb push or xor pushfq mov sub cwtl and cltd rex.WX (bad) mov cli clc lods leaveq push jno stos hlt fbld adc add ds (bad) sbb xchg out jge sbb sub rex.WR fwait rcl xor fwait add (bad) rex.WRX (bad) cld cwtl fwait (bad) (bad) out in sbb sub jmpq jno mov movabs js in insl out rex.RXB (bad) movsl or pop fwait callq adc lods sub loopne rex.RXB fwait cmp sub lods and fwait pushq sbb sub imul jbe out es (bad) push mov mov lret mov (bad) rorl xchg fwait sub mov sbb xchg fwait (bad) stos rex.R (bad) movsl xor ficomp jle in fwait xchg sub cmp stc sub lahf xor stos js cs jmp rex.WXB loop repz stc clc (bad) int3 pop lock fwait cs iret data16 rex.WRB fwait jge pop shl jmpq insb (bad) out adc pop (bad) adc sub test mov ss fwait mov movsl sbbl cmp sti sub adc sbb add sti test fwait stc pushq retq rex.WRXB rex.XB rex.RX sbb outsb jmpq fwait int mov xor (bad) enterq or es add jmp sbb add (bad) (bad) pushq pushfq mov rex.XB rcrb pop movsl pop sti (bad) jbe ds lahf loop cvtdq2ps movl notl mov rex.WRX (bad) mov fwait xchg js add out pop jrcxz sbb fwait jb add int3 cwtl xor ds stos or js movsb fs shrl fwait leaveq sbb movabs icebp retq divb addr32 or rex.X sti or lret fwait std sti (bad) sahf retq leaveq or and loop imul cmp fwait jne,pn (bad) je adc repnz adc (bad) rex.WRXB mov mov adc or cmp xchg sub cmp (bad) cmpsl jp mov sub cmpb cwtl (bad) or outsb mov mov cli and sbb insb stc sbb (bad) pushfq pushq mov lods (bad) cmp std push rex.XB fidivl sti push js xchg fwait movups (bad) and (bad) sti insl in insb neg jns xchg cli (bad) xchg mov jae sti fiadd sbb shrl or adc fwait enterq cld and and rex.RB add mov pop cmp jne fwait xchg test jno movslq sub and and add and add mov adc sbb ss and sbb test cmc fwait imul repnz (bad) enterq es cmp xchg cmp rex.WB fs jge imul in int add fistl add (bad) in or (bad) loope fwait mov push pushq xchg pop add rex.XB rex rorl mov sbb sub pop fwait push in sar sbb div add xchg cmp sub rcrb (bad) (bad) mov jl adc mov callq sub fwait or pop mov fcoml sbb rex.WRXB rorl xor loop rex.WXB sahf mov and or in stos cs pop add (bad) mov es add (bad) idivb adc push cli xchg jbe rex.WRX fwait add jge (bad) icebp ds jmpq or mov sub (bad) pop (bad) jae (bad) fmul and retq (bad) nop (bad) stos (bad) mov xorl mov stos rex.X out push jns out movabs (bad) push mov (bad) stos cmp mov cmpsb insb xchg xor sbb out push mov sbb repnz xor loope rex.WX sar (bad) flds stos sbb rex.WR fcmovnbe (bad) fwait (bad) rex.RX (bad) mov mov test mov pop in sbb data16 (bad) rex.WR and or in mov push lods mov add movabs cmp adc movslq sub rcrl fwait insb mov jg fwait or mov xlat rex.WRX js rex.WR fucom or ss cli imul rex.WX lret imul jbe (bad) xchg enterq fwait movsl or movslq rolb in out fs std xor sbbl jmpq fwait xor rex.WRB rex.WB and fwait (bad) pushfq rex jmp sub (bad) xor (bad) and cs (bad) jle or mov sbb mov mov std fwait imul test orl movabs test sub iret mov int3 je retq pushfq jno or cmpsb movabs test xor (bad) and rcrb (bad) lret fwait movslq stc sbb fwait addw clc hlt sti jl add push (bad) (bad) jp push pop xor jns retq (bad) cld pop jbe sbb xchg (bad) ror jnp pop sub mov mov mov movslq jno mov (bad) (bad) jg xchg (bad) mov mov (bad) (bad) mulb mov int3 cs or cmp movabs (bad) mull adc (bad) sub (bad) cmp loopne (bad) push lock stos mov mov (bad) int3 mov rex.WRX shrb pop out fwait stc fldln2 xchg rex.RXB out cld fwait (bad) out callq test cmp rex.WRXB sub fwait jnp popfq xchg fs xchg add mov and std insb fwait rex.WXB sbb mov adcb enterq (bad) mov hlt mov cld push cltd fstpt sbb sub jrcxz lods movsb fwait cmp rex.WRX mov mov mov push lods sti rcll mov movabs rex.R jmpq jg rcl mov xlat xor movabs sti enterq cmc fwait sarb rex.WRXB addr32 (bad) and retq out out retq (bad) push xchg adc movsb mov xor (bad) rorb imul cmp fwait divl pop ja js xchg (bad) lret xor lods xor pop fwait fs mov xlat movsl pop xchg sbb std mov mov xchg (bad) jmp clc cmp fwait movabs mov (bad) lods jmp fwait int cmp test mov outsl fwait mov pop outsb movabs cmpl adc push jp rex.RB data16 adc sub sbb gs out movabs mov rcrl xor stos adc repz mov cli jno mov mov sbbl je xchg mov sahf pushq mov mull in rex.RX rex.WXB rex.WXB repz popq xchg sbb add insb pushfq rex.W fwait jns (bad) and fwait push push fnsave ds jl and mov xor (bad) sti ja fwait (bad) jmpq lret (bad) xchg pop lahf sbb cmp pushfq cmp insb pop rex.RXB sti int fwait (bad) pushq (bad) fwait lahf ja rex.X adc (bad) in (bad) fwait pushq add jrcxz xchg fwait xor fmull sbb loope rex.WXB add add shr sub or imul xchg fwait js vmovlps negl addr32 mov sahf rex.WR jge pop leaveq test (bad) cmp push fwait (bad) xor outsb mov mov stos adcl (bad) rex.W rex.WRB cmp mov fwait pop loop pushq sbb sbb addr32 hlt rex.RXB add jo insl pop push mov add icebp outsl rex rex.XB fwait out (bad) add std rex.RXB sbb int3 scas imul retq push rex.RX fwait and xchg cmc mov hlt sub je loop or insb vmovddup loopne push out jmpq sbb rex.RB rclb jno clc out nop cli fwait rex.WB mov subl fwait hlt pop push mov xchg mov enterq sub andl (bad) loope xchg (bad) and (bad) add and roll cmpl pushfq xor lock cmp (bad) andl sub imul fwait stos rex.R ss (bad) mov cwtl fldt fwait (bad) rex.RXB movslq popfq push sub ds (bad) (bad) cmpsl jo add sbb insl fwait (bad) sub insb iret sarb mov fwait pop scas xchg in (bad) (bad) rex.RX push mov imul lret adc test jle icebp or fwait rcll xor fistpl in fnsave lock int3 rex.WXB fwait adc push rex.X rex.XB movabs (bad) sbb rol (bad) xchg fwait cwtl rex.R out sahf mov (bad) fwait pop (bad) (bad) jo pop (bad) leaveq fwait and fs and pushq fistpl mov movabs hlt movabs (bad) xchg xchg test fwait xor rex.WXB mov icebp (bad) popfq (bad) push and sub fwait adc jnp fldl enterq (bad) adc xchg sti retq repz push rcll ja outsb rex.W (bad) rex.B mov callq in mov in xchg push or fwait jnp xchg (bad) push jns iret and (bad) push loop jg movabs retq and fwait add rcrl jnp or cltd out mov (bad) sbb popfq mov (bad) mov rex.WR loope out and sbb out xchg rex.WRXB repz or adc fwait cwtl push lods xor loop xchg and loope movsb fwait adc movb out cmp add mov and mov movabs xchg xchg stos sbb fwait mov jrcxz insl rcrq xor (bad) shl rex.WRXB fwait jg test mov loope (bad) (bad) sbb fwait xor out jne jnp retq sahf (bad) hlt and (bad) (bad) stos jae outsb (bad) rex.RX mov rex.RXB (bad) mov sbb pushfq shrd jbe cmpb xor fwait insl lret jp loope rcrl jl rex.WRX xorl (bad) outsl in xor int3 cli push retq rex.RB mov mov cmpsb cmc cld (bad) (bad) rex or iret test rex.WB repz cld (bad) roll imul mov pushfq fs sbb scas stos cmc mov (bad) je fist insl adc data16 cmp addb xchg (bad) (bad) pop (bad) jnp mov out mov cld in sub loop fnstsw and fwait mov pop int (bad) sbb add rex.RX cltd outsl and cmpsb and insb rex.W fwait add pop or sub je movabs fwait fs (bad) (bad) pop mov rex.WX (bad) rex.WRXB divl rex.RB movslq je add fstps add stos mov rex.RX sbb stos mov cs jrcxz (bad) pushfq sub add je jmpq mov retq sbbl outsb and sbb (bad) lock (bad) cmp and retq fwait mov add cmp fstpt pushq out pushq fwait (bad) or cmp movabs lret mov mov loope jns push and (bad) rolb or or loopne xchg rex.WRB sub sbb adc pop fisttpl (bad) (bad) cmc add (bad) fwait leaveq je test fmull hlt iret xchg (bad) jo add xchg or mov mov xor xchg cmovl mov or jg adc cmpsb fwait sub sub xchg (bad) sub mov mov ficomp repz pop imul (bad) mov test push loop movabs repnz sbb mov fbld or sti (bad) fsubrp (bad) jrcxz mov insl (bad) mov push sbb (bad) clc rex.RX sub rex.WX xor or and mov jl in jmp jns (bad) jle loopne out (bad) mov sbb adc (bad) fcmovb adc adc jrcxz adc ss mov in mov rcr sbb or (bad) sbb (bad) outsb (bad) (bad) add mul stos sbb fsts pop iret repz mov xchg in xchg and (bad) test jnp push xor pop (bad) xor add in mov pushq test movabs mov rex.WXB (bad) fcomps lock rex.WR rex.RXB scas (bad) mov pop add xorl cmpsb and and addr32 xchg rex.W cmp adc roll and negl (bad) std pop xchg jmp paddb jmpq adc subl cmpsb xor pop enterq fwait mov or add pop in rex.WRX pop xlat mov sbb icebp (bad) and xchg and xchg jl fwait xor hlt mov pop pop lret push test rex.X int3 lods xchg cmp (bad) push negl mov adcl iret (bad) stc jp ss rex.WRX xchg movabs cmp cli sub shrb lahf jp jrcxz adc js cs pop jrcxz cmp popfq fwait outsl movsb rex.WR ja stos or adc scas stos movabs pop rex.RXB pushq fwait insb pop lea sbb (bad) cs sub rex.WR rex.XB xor shrl insb idivb sbb sbb mov int3 fildl lret sbb sub rex.X mov in fwait (bad) stos (bad) mov adc sbb (bad) push mov (bad) pop (bad) fbld sub test push (bad) (bad) (bad) rex.WRB sbb push pop (bad) and rex.XB mov push sbb repz push xchg push cmpsb retq rcrb and or int xor pop jno ja mov adc xchg rex.WRX fwait movabs sub (bad) stos adc adc rex.WR pop movabs adc icebp movl mov fwait mov mov roll andl jl mov rex.X stos (bad) in (bad) xor xchg (bad) fwait test cmpsl std jb movabs cmp (bad) (bad) or rex.WX sub (bad) popfq (bad) pop fninit in fsubrp add (bad) fwait mov rex.WR pushq movsl and repnz fs outsb and cmp adc add sbb push and imul (bad) (bad) in or (bad) (bad) (bad) movsb lret xchg add rex.W fwait movabs movabs lods sahf movsb lods negb cmpb (bad) and (bad) je stos add mov enterq (bad) and jns (bad) sbb out fwait rex.WRB movabs adc sbb movsl fcoml int cmp mov (bad) in in sbb or pop and xchg lahf loope test jns fwait cwtl rex.RX cmc (bad) sti cmp adc mov incb rex.WB int movsl sahf mov (bad) jbe fwait test push sub fwait icebp cli scas xchg popfq jp ja push js fwait (bad) (bad) jne movabs stos mov and mov (bad) fwait shlb (bad) movslq push fwait pushfq pushq cli mov test (bad) (bad) scas test ja in fwait (bad) jns or mov add add std rex.WRX pushfq imul int jb stos fxch fwait rex.RXB rcll movabs adc sub and sub xor sbb cmp (bad) fist cmp retq rex.WR fdivr (bad) (bad) lea (bad) pop shll cmpsb fcmovb pop (bad) jne (bad) cmpsb cld push xchg scas adc pop jrcxz nop fwait jb xlat push mov sbb fildl pop xchg pop pop (bad) rcrl sahf pop movabs and mov movsl adc add stos decl in loop test (bad) rex.WR jle jne xchg cmp lock xor rex.X (bad) push push pushfq (bad) mov xlat (bad) sbb loopne clc cmc loope ss mov lea fwait cmp fs in lods movsb (bad) pushfq and sub or push rex.WX xchg negl movabs add or pop sti rex.RB pop (bad) mov (bad) push sbb (bad) mov (bad) shrl jrcxz cld sub pushfq (bad) shll cltd add int3 repz (bad) movl imul rex.R sarl cmpsl sbb scas pop lret adc push stc mov idivb sti xchg sbb rex.WXB (bad) mov test fwait and xlat ror xchg stos rorb xor mov (bad) fwait or jno loopne sbb adc (bad) outsb fwait cmp xchg (bad) ds and (bad) or jnp movsb sub pop movabs cmp (bad) rex.WX (bad) push sub rex (bad) pop add fistp rex.RXB fwait sbb sub sub xor (bad) pop test pop mov (bad) mov ja fwait movsb push addr32 outsl pop add (bad) add loopne (bad) fcomi sbbb ja push xchg xchg (bad) rex.W fwait movabs xor stos callq or fstpt jmpq fistpl add fwait (bad) rex.WB insl cli adc adc jmp cmp rex.B shll rex.WR mov popfq retq pop rex.WXB movabs (bad) sbb jg adc nop (bad) sar cmp pushfq in (bad) subl rex.RXB cltd test cld fsubl jrcxz sbb pop xchg retq (bad) and flds leaveq jp pop addr32 mov pop stmxcsr stc rex sbb mov clc or roll rclb pushq (bad) add popfq push cmpsb ffree enterq jle es (bad) pop xchg stos pushfq ss xor insb or xor fstps sbb sub (bad) movslq rex.WRB push popfq (bad) stos xlat (bad) (bad) js or js idivl push or jne mov jns negb jnp sarl vpsrlq fwait mov pushq cmpl pushq jle popfq sbb sbb pushq int3 mov or mov rex.W out imul cvtps2pd jge cltd jae jl (bad) mov fdivs (bad) jmpq pop mov mov insb (bad) or (bad) (bad) sarl jg rex.WX xor jo add enterq (bad) cmp (bad) loop pushfq mov sar je pop (bad) (bad) jl adc mov outsb movslq pop (bad) imull sbbl (bad) fwait rex.RX adc imul rex.XB rclb xchg cmp mov xchg (bad) xchg mov jl fwait jge (bad) jo movabs imul (bad) (bad) lret fisubrl (bad) stos addr32 sbbl out jl sub jnp (bad) (bad) mov and xlat addr32 data16 xor mov enterq pop rex.WR fnop cmp callq (bad) (bad) xchg xchg js (bad) rex.RXB xor sub sbb adc xchg sahf sub xor rcr sub bnd sub out sbb fisttpll mov xor cmp callq fstps adc (bad) (bad) sbb pop xor (bad) outsb or clc rex.WRX out fwait (bad) sbb movabs rex.XB rex.W repz sbb callq (bad) (bad) mov rclb sbb mov jmp xor sub retq stos loopne sbb rex.R add in mov or jae jo and (bad) imul mov and lahf fwait (bad) sbb sbb mov sbb pop int and (bad) repnz adc mov fwait nop imul xor fwait mov rex.WRB sub rex.RX fwait or shll test add mov adc int3 (bad) leaveq lret jb nop pop rex.X jno (bad) stos sub fwait (bad) jnp push mov (bad) in in es adc (bad) pop fwait (bad) enterq sarb or pop pushq out rex.WB rex.RX stc push jrcxz fwait xor mov (bad) xor mov xchg orl rex.RXB xor ficomp rorb sbb pop (bad) (bad) rex.X fwait (bad) adc and mov movabs retq sub rex.XB mov popfq vhaddpd fisttpll ds sub xchg insb sahf xchg callq push test int3 cmp (bad) jmpq movabs (bad) fmull stos paddq add add (bad) (bad) imul jne cltd (bad) loopne xchg push loopne (bad) mov movsb rex.WX stos movsl (bad) (bad) div (bad) int3 (bad) testl std in ffree (bad) rex.W jl mov scas (bad) mov and jns ss sbb mov xchg xchg movabs (bad) jl push and mov in rex.X rex.XB flds leaveq (bad) out (bad) adc test (bad) fsub jl cli (bad) cmp adc push jg out stos test outsb cwtl retq iret std sub mov xchg push pushfq sbb xchg imul rex.RX data16 (bad) popfq pushfq lods (bad) pushfq xchg retq (bad) (bad) fs shrl hlt or sti sbb leaveq cmpsl (bad) je (bad) repz callq sub jrcxz lea cltd pop mov adc movslq loopne (bad) lods fwait rex.WX jp jb rex.R cli xlat ds push sbb xchg jnp (bad) rex.R imul int es mov pcmpeqb or xor out idiv (bad) sti movabs (bad) adc fwait cmp adc (bad) xor xchg push xlat fwait fs movabs gs rex.B in (bad) and scas (bad) callq ss lock shlb xchg mov ficom in cwtl mov (bad) loope imul movabs cltd addl mov (bad) and adc sbbl add pushq sbb rex.WRB dec rcrb lods mov sub cmp lret rex.X push gs rcrl fidiv rex.W cld (bad) push rex.WRXB add icebp sbb (bad) movsl pop xorl add shrb fwait add jmp adc mov adc sahf fsubr cltd cmpsl cmpsb add cmp rex.W lcall rex.WR sub hlt rex.WRX rex.WX fwait or rcrl (bad) add mov rex.XB lock stos xchg mov (bad) and sahf outsb (bad) adc (bad) sbb add out (bad) fwait insb (bad) cmpsb movsl stc (bad) divb imul jle cmp negb fucomi rex.WX push sbb (bad) add jrcxz retq fwait enterq data16 popq mov retq rex.WRX nop or or add repnz in in lods addr32 mov movslq subl rex.WX fwait movabs (bad) insb sub (bad) fwait lods (bad) add mov (bad) fwait (bad) (bad) movabs rcrb repnz mov movabs push xchg mov popfq fistpl push mov mov (bad) (bad) sbb jnp pop fs insl add pushfq sub push fwait adc test add xchg xor pop andl imul fdiv (bad) (bad) gs test sub movb scas fdivrs mov mov sti pop in sbb int frstor imul xlat mov sub push retq fwait lock and sbb movsl (bad) pop movabs iret js rex.WB rex.WXB (bad) retq stc pop fwait lret movsl movabs insl jbe adc stc xor pop xchg fisubl sub or rex.WR cmpb lret rex.RB data16 sbb pushq out in mov xchg xchg xor retq shrl jnp add or push rex.B mov movslq repz fwait (bad) test (bad) and (bad) mov (bad) mov es rex.XB cmp fwait rex.RXB jge and (bad) fwait add callq jp add movabs sbb fwait subb sbb lcall xor cmp fcompl callq popfq push adc lods jl rex.R fs jl add (bad) and rex.WX cwtl sbb retq sbb xchg lret add loopne pop mov cmp insb movabs in es add pushq and lods pop jnp mov movabs pop xchg rex.WX rex.RB lret icebp fsubl (bad) lret jg sahf mov movabs repnz cld (bad) sbb (bad) mov int3 mov clc xchg push movslq mov gs cmp callq test pop add xchg (bad) cmp test pop in adc add cmp adc jp push push in add movsb or sti push data16 or sbb (bad) adcb mov lock out pop sti push and sbb (bad) fistp (bad) xchg sub scas pop (bad) imull pop mov xor movsl adc sub loop hlt lret incb and icebp imul xor cmp repz rex.XB addr32 pop out sub pushq fnstenv (bad) jae sbb test in lods movabs xchg movabs xor sub iret sbb cmc mov scas (bad) mov jne rol cmp jb jmp je mov cltd outsb (bad) add mul adc cmpsl adc addb imul rex.WX xchg (bad) insl in jl notb movsl rex.B (bad) in cld mov add mov loope imul pop xchg outsl xchg data16 cli sbb (bad) std iret adc loopne xchg push (bad) (bad) cmpsl ficomp cs xchg jg xor jle xchg fcoml rex.WB jg and out xlat push movsl cli movabs movsb sbb cltd add xchg roll xchg adc pop (bad) add test rex.W rorl rex.WRB cs pop popfq (bad) (bad) ja pop callq movsb and test mov xchg (bad) or fisttpll cmc mov roll int in mov (bad) mov scas xchg cmp rex.XB jge mov mov rex.WB insb test fucomp and adc cmpsl cmp int3 test mov (bad) adc imul callq and jae and mov (bad) mov je (bad) (bad) mov xor cmp (bad) pop mov adc test xor xor xchg mov (bad) retq in add movabs (bad) test sbb fwait cmp rex.RX (bad) cmp rex.WRXB rex.R jrcxz jmp mov mov mov push cmp cmp retq ljmp rex.R stos loop push rex.WRXB cmp (bad) or (bad) push sbb cs xchg mov (bad) fwait xor lret (bad) rep (bad) mov or rcrl repz stos (bad) lock rex.WX sub scas out fwait callq cs incb frstor loope (bad) adc adc fistpl fwait adc (bad) rex.WXB fiadd (bad) and mov mov xorl (bad) jmp xchg jg sbb pop (bad) cmpsb cmp movsb in fwait mov adc addps and fistp or enterq fsubs ja xchg (bad) add sub test ficompl mov sbb pop roll jmp fwait push mov xor jmp lret pop rex.WRB mov sbb retq icebp (bad) nop fwait rex.WRX (bad) and cmp adc mov shlb (bad) jg add jnp iret callq out fwait mov shl mov add cmp add (bad) rex.RX lahf pop xchg mov pop (bad) (bad) (bad) xchg popfq mov callq and pushq xchg sti jnp movabs fildl mov js (bad) push and mov jg fwait out xchg js adc fs stos imul mov fwait ja (bad) loopne xchg jne fwait retq std vmovapd xchg lods adc movabs rorl rcrb in xchg fwait and outsb jae sbb sbb addr32 movabs and fildl jrcxz push and outsb pop push in adc jl pushfq cmc pushfq sub fucomp fbstp sbb subl jge mov repz out in cmp (bad) test jle pop sbb rex.XB xchg xchg cmpsb fnop (bad) (bad) adc sbb rcll rex.WRX outsl fwait (bad) rex.WR cmp movabs xchg sub clc int3 hlt adc cmpsl jmp xchg rex.XB lahf (bad) pushfq ss jmpq popfq (bad) movabs mov sub adc (bad) rcll test loope fwait in movabs outsb data16 jae lcall fcomps or fwait out neg jbe sub add mov pop rex.XB fwait rex.WX movabs movsl pushfq imul jrcxz (bad) cmp jno out pop (bad) (bad) popfq lea mov mov add cmp ja push ss xlat add add mov mov movabs (bad) xor push (bad) xchg mov (bad) ja adc xor sahf (bad) scas (bad) and rex.WR mov (bad) adcb xchg nop jno pop (bad) mov rex.WR (bad) cmp adc rex.WRB (bad) movslq cmc gs mov cmp rcrl shlb rex.XB sub and cmp lahf (bad) and adcl pushq pushfq add movslq jnp loopne cmc fwait roll fs fwait xchg rex.RB push loop fwait iret mov int fistp push mov and mov in (bad) fwait test in sub repnz (bad) jnp jmp fwait insb je rex.WRXB rex.X repz cltd popfq xor and nop pushq add cli (bad) push hlt or jp sbb (bad) sub rex.XB xchg fwait mov add sarl popfq retq (bad) (bad) fwait jmpq push andb sbb or test xor addr32 ss stos hlt mov rex.B xchg out sbb in mov fwait mov (bad) rex.RX rex.WR add sub jo mov imul mov fildl scas neg rex.W rex.WRXB fidivr cmp rex.R nop movabs mov std pushq fwait callq andl (bad) sbb fwait (bad) xor mov mov xchg callq mov xor imul cmp test imul setnp in gs add sub mov jno in icebp mov movsl (bad) fwait mov adc push mov and rex.XB mov mov and in sbb add scas sbb (bad) mov (bad) fs ja xor (bad) cmc std add mov and jle outsl jne sbb (bad) xchg imul (bad) sbb fild (bad) jae mov (bad) andl add outsb fwait cmp jnp mov cli repnz or (bad) mov rex.W xchg (bad) out sub jmp rex.RB mov stc adc movabs insb leaveq fwait pop frndint jbe sub sbb (bad) fstp stos jp fwait adc je mov cwtl pop sbb rex.XB fwait (bad) sbb imul xchg or in fcom fidivrl (bad) mov pop sbb fwait mov sub cmp rorl jg and mov add xchg fmuls fwait enterq leaveq lret fwait out push int3 (bad) test adc fwait je cwtl (bad) or insb in rex.WR pushq add mov ds sbb imul movabs incb mov sbb xchg lret mov fwait cmc mov (bad) fwait pop cs or jp push mov (bad) cmp fwait or jmpq (bad) sbb sbb add test pushfq adc mov roll xchg out adc (bad) stos rolw mov (bad) (bad) rex.WXB sbb (bad) out loope and mov sub mov callq fwait pop xchg sub pop fsubrl rex.RX fucomip jle stc cli fwait sub int3 mulb pop jne repz mov xor (bad) jb jge mov rex.X adc lret jne (bad) pop xchg test movabs rcrl fwait lahf add fstpl cmpsl sbb xchg fwait xlat mov mov fcoms or add sbb addl sbb in mov rex.RB sbb jg in fwait jge movsl jae loope sbb mov sbb mov (bad) cmp and leaveq xchg fwait push mov fcmovne xchg data16 adcl sbb add mov stc rex.WB (bad) mov (bad) add and adc sarl (bad) pushq sar mov nop xchg sbb or sub sub mov iret enterq jbe sbb rclb mov flds movsb sub movabs sbb fstpl rex.RX callq fwait rex.X rex.WB rex.WX rex.B xchg mul movabs insl stc or sar scas js popfq sub xchg rclb xchg rex.WX movabs sub hlt stos cwtl or cmp (bad) rex.WB es mov ja adc fwait mov cmp sbb adc jl xchg sbb fwait out (bad) or and lods sub fwait xchg rex.RB (bad) xor cmp xchg setno int3 lods retq push sbb sahf ja out insb in xor mov (bad) fucomip lahf fwait (bad) jno (bad) jrcxz in in lret xchg insb mov data16 xchg sbb rex.WB pushq (bad) popfq jne (bad) insl or rex.WX (bad) movslq (bad) adc (bad) pop lea xchg cs scas or rcl clc (bad) adc sbb (bad) cmpsl movabs (bad) in add in rex.W xor ja fs icebp loopne fisttpl int3 pushq retq adc sahf sbb cltd xchg xor jl lods sub rolb std push jge fnstsw cmp push (bad) popfq add rex.WRXB lods mov loop jae jae adc (bad) stc cmp rex.RB (bad) (bad) (bad) sbb fadds andb (bad) sbb loopne test stos repnz or (bad) xor cmpsl jnp outsl and xchg xchg lock movslq cmpsl or idiv lods (bad) movslq es fnop hlt xchg lret rex.XB sbb xchg fldt shll (bad) (bad) test add xchg (bad) sti mov xchg rclb cmp icebp (bad) out fstp mov xor and pushfq movabs mov (bad) mov xchg and fwait loop xchg subl cmp xlat sbb in sarl mov rex.X rex.B rex.B pop iret jmp (bad) rex.WRXB fwait or xchg mov imul retq push movabs mov movd fistpl adc rex.RB xor or movabs xchg int3 fwait repz (bad) (bad) cmp sbb rex.W mov ds adc (bad) (bad) sub push xchg pop insl mov fs push mov testb xchg out cmc cmp xor test movslq data16 lret fwait add fwait jnp (bad) mov movslq movabs outsb mov (bad) rex.WXB sub pop fwait mov pop out callq callq cltd fwait vmovntdq adc pop divl (bad) mov (bad) (bad) jbe clc movabs mov rex.WX fwait nop (bad) stos int xchg cmp sbb adc pop cmp rorb jrcxz cld (bad) (bad) pop rex.R xchg and fwait nopl or (bad) mov jmp stos pop rcrb xor movabs mov and push ja xlat out rex.WXB fwait insb cmc fnsave test rex.WRXB (bad) mov sbb add insb mov cmpsl mov movabs enterq mov push es add mov icebp xchg stc and sbb std repnz or (bad) xor movabs outsb mov popfq cmp mov (bad) out test lret shll xchg pushq add ss jrcxz outsb fstenv pop sarl jb adc out fwait add push (bad) xchg pushq out fwait pop movslq add fwait mov fidivl fwait clc rex.RXB (bad) sub mov jge mov rex.R pop and adc (bad) movsb (bad) fwait cld insb lea (bad) sahf xchg iret add fwait pushq cltd cltd (bad) xor push sub fcmovnb and and out (bad) retq adc xchg rcll scas xchg rcrb imul not mov pop adc cmp and mov adc (bad) fwait xor cmp enterq fbld in push fwait sbb mov rcr addr32 lret je jae sub test (bad) mov mov adc rorb jmpq mov sar adc fwait fs rex.WB adc sbb fwait xor (bad) orl or fwait xor (bad) xchg addr32 jae nop (bad) sub jg mov lock out rex.RX (bad) fwait xor cmp pop imul rex.RXB ds xchg add movabs (bad) xor xchg jo (bad) fwait in outsb (bad) sbbl ja push adc je rcrl (bad) xor divps mov test (bad) movabs or (bad) jbe xchg callq or xlat jrcxz jge sti sbb scas pop divl (bad) sbb andl sqrtps jae imul sbb test cmp popfq and mov callq movabs sahf pop push xor enterq addr32 js cmpl mov rex.X rex.WRXB movslq hlt mov (bad) in loopne rex.WR retq jmp scas mov pushq sbb outsl (bad) ss ss xchg imul (bad) xchg outsb sarl pop pop (bad) ja lods jge jrcxz mov xchg pushq movabs (bad) (bad) jns or mov mov lret mov lock addr32 (bad) (bad) jns xor sbb retq retq repz fwait fs (bad) mov rex.WRX fwait (bad) xchg fiadd in movabs cmp rex.R rex.RB (bad) cmp sub push push fwait jl jno loopne sub (bad) cmc popfq movabs rcll fwait (bad) jmpq movslq or insl cmp (bad) (bad) popfq add es and jge rex.WRB fildll out add popq rex.WB movsl rex.WX fwait or xchg pop (bad) sub xor fwait outsl pop pushq mov add xchg mov iret in popfq (bad) (bad) pop outsb rex.R js ja movabs sbb sub xchg retq cmp xor cmpsl lea cltd sahf nop push je out rex.WXB (bad) sub fwait rex.RX int3 cwtl lods cmp (bad) movabs stos mov sbb scas sbb std sti rex.B (bad) adc jmpq adc cmp fstl rex.R xor jbe cwtl ficompl xchg test (bad) sbb in (bad) pop add and cmc (bad) insb pop movslq pop mov xor jns (bad) (bad) retq sbbl cmp (bad) shrl movabs pop sbb push rex.RXB mov (bad) rex.B jge push callq (bad) (bad) (bad) pop out (bad) mov cs mov xchg addl (bad) sbb (bad) fistl movsl jae in imul add jp xor jne add or jo movabs andq test mov addr32 and scas js (bad) pop scas lea out (bad) xchg ficompl xchg jbe ds xchg adc callq fwait rorl imul pushfq mov iret fwait mov stos int iret test pushq mov sbb or adc cmc fisttpll fwait je pop mov sbb out mov add mov (bad) cmp sti jrcxz add adc add fwait adc mov fwait rex.RXB (bad) mov (bad) test or rex.B movslq fstpt xchg lret (bad) in push adc nop (bad) clc scas repz out xor cld xchg cmp mov pop cmp std sti cmp xor (bad) cli rex.WRB fwait push mov or imul xor fwait xchg xor pop push scas mov (bad) xchg decl sbb outsb in stos and ljmp push xchg add (bad) (bad) loopne cmp xor add push pushfq add roll mov sbb test mov fdivl sub fwait adc rex.XB test sub push (bad) jae rex.WB fsubr sub mov movabs out xchg repz scas sbb (bad) fisttpl (bad) lahf cmp ficompl fcmovnb sub in fidivr fwait rex.WXB adc jmp rex.XB adc popfq sub sub mov loopne fsubrl rex (bad) lret add int push (bad) (bad) sti jge xchg cpuid es (bad) adc and xchg and fisub rex.XB movabs (bad) rex.RX add in (bad) fldl sbb pop mov or sbb mov cmc adc jrcxz (bad) rex.WRXB xor (bad) (bad) xchg popq jb repnz subb jno xchg pop cmpsb lret (bad) pop xchg adc cmc (bad) sub popfq (bad) fimull movabs test xlat js movabs xchg pop cwtl sbb mov (bad) (bad) (bad) xor cmp push in sarb lcall jns fsubl pushq repz (bad) or (bad) movabs xor sbb test lret cltd (bad) cmp rex.WXB xchg hlt (bad) in imul xchg js push pop or push adc cmp mov push pop out sub ds stos sbb (bad) rex.WXB mov (bad) pushfq decl rex.B mov stos sub mov cld rex.R loop leaveq xor mov lret (bad) mov (bad) xor sbb jno (bad) mov ja rex.W rex.X (bad) cmpsl xchg or pop mov xlat rex.WXB jae ja jo jbe jo or (bad) movabs mov mov lods in mov push sbb (bad) push lods jmp rorb sub mov (bad) repnz lret sbb lret mov adc (bad) sahf rex retq fdiv callq pushfq jl ror cli xor iret (bad) or or loope (bad) jne icebp ror callq pop xchg mov (bad) iret out loopne (bad) mov stos (bad) sbb mov pop or es (bad) movabs push in xchg stc data16 add rex.B adc lahf (bad) movsl (bad) rex.WRX adcl add (bad) rex.X nop adc cmpsl cmp es jp pop pop sbb movsl mov xchg fnstcw jrcxz mov mov incl out fcmovnbe loope adc or push js (bad) (bad) jmp mov jno add jbe movslq add or xor mov fwait cmpsb sbb lret push fwait loope pop scas rex.W rex.RXB fstps in rex.WRB xchg test or (bad) fwait (bad) push insb mov fwait (bad) cmp enterq and cltd (bad) push repz loop (bad) mov cs (bad) add movsl (bad) or jns (bad) fwait (bad) push mov mull (bad) cmp pop adc fimul mov (bad) (bad) pop fwait cltd rex.WR (bad) fbld fcomps xor (bad) ja adc sub or sbb movabs (bad) shr sti (bad) jrcxz xchg xchg callq insl sti outsl hlt mov cld rex.XB fwait sbbb retq add cwtl sahf and (bad) cld add or retq xchg je std loop out fwait jnp xchg leaveq fisubrl rex.XB js push fistpl subb pop mov lods ja fstps jmpq stc movslq fisttpl lods (bad) (bad) fs push in jl imul sbb (bad) sbb pushq rex.R (bad) movabs mov mov jl xchg andl adc sbb adc std in test in lock fsqrt mov push sbb (bad) mov rex.X leaveq fwait and rex.WRX pop movsl iret xor (bad) (bad) (bad) rex.RX pop insb jnp mov xor (bad) mov lods in (bad) out (bad) negb or stos mov rex.X (bad) sbb or scas outsb rex.WXB repz mov (bad) mov icebp lret mov mov test mov jns rex.W rex.WRX (bad) (bad) (bad) (bad) in nop jmp sbb fwait repz fs (bad) xor mov lahf retq clc jb sbb outsb and hlt int3 in int (bad) xchg cmp rex.WRB rex.RXB fwait or xor pop outsl (bad) (bad) jnp xor out pushfq rex.WXB clc or jle jno fwait jmpq rex.WX sbb scas (bad) push repz js mov (bad) test mov cld (bad) ja mov sub sbb and sbb and fwait in pop rex.XB vmovaps jo sbb fcomps (bad) not rex.X rex.WRX pop rex.WRXB (bad) fstpt lea xchg add sbb rex.WR xor cltd movabs (bad) std addr32 subl out in icebp rex.WXB add mov jno sti int3 enterq rex.X cs fwait mov push rex.WRXB fwait sub xchg mov fwait cmp rex.RXB stos rex (bad) xor jmpq cwtl rex.WX jns pop push (bad) fsubrs enterq mov xchg jb sbb sbbl enterq fwait cmp rcr fisttpll sbb jp fldcw fsts mov (bad) outsl sbb mov sti popfq push pushfq xchg cltd lea fisttp insl sbb imul icebp add or fisubr mov fcomi rol sbb in popfq cltd mov (bad) (bad) sbb rex.WRX fbstp and fdivrl (bad) mov xchg rex.WRX rex.RXB (bad) rex.WRXB rex.WB rex.WB rex.RXB fisubl jb ficomp rex.R lret mov out (bad) add movabs stos (bad) fildl jno scas xchg in fwait pop adc movabs test callq fldenv xor mov jp cmp mov enterq (bad) lea fstpt out clc loope (bad) scas xchg rex.XB mov cmpsb sub jle adc jo in stos movabs fnstenv ja in and (bad) (bad) xchg test mov (bad) rex.XB rcll adc or (bad) xorb addr32 mov fwait (bad) je mov loop sbb add fwait or xchg adc rex.WRB sbb sbb insb cmp imul or push (bad) orb mov fwait sarl mov repnz es fwait and retq jnp in scas rcl rex.WXB xchg mov rcrl jge sahf insb push jl test sub movsb lret (bad) xor loope popfq lret rclb fistl (bad) fcmovbe fwait (bad) add fwait lret xchg push (bad) rex.WRX (bad) rex.RB mov (bad) fwait in add fwait rolb scas movslq (bad) mov cltd int adc fwait add fstpl sbb lret mov or sbb xor (bad) retq mov xor test outsb rorb jrcxz or lret rex.WR in fisubrl add jrcxz fwait add cltd pop jp mov (bad) fwait mov mov lret f2xm1 je (bad) xchg scas xchg add cmc sbb xchg sti vmovss adc repnz out pushq test test cltd (bad) es adc or or xchg (bad) fwait leaveq mov fwait test mov in mulb (bad) rex.W jge jp mov cmp lods adc rex.WR fwait pop cmp mov sbb (bad) rcll pop xchg loope or pushfq xchg mov sub sti and fstl sbb pop fwait add mov xchg mov cwtl (bad) jne popfq add fidiv popfq (bad) callq mov (bad) retq rex.XB cmpsl mov mov mov jle sti pop rex.XB fwait add mov fldt gs insb jne in fwait jp jns popfq sarb xchg fwait rex.B jb adc fwait pushfq test movabs sbb adc mov fwait (bad) mov fwait or mov sbb (bad) out mov xchg fcomi sbb popfq sub fcmovnbe loopne rsqrtps iret pushfq xchg sbb (bad) subl movabs cld (bad) out and pop or adc xorl xchg fwait sahf pop in xchg repnz xchg fisttpl mov std cmpsl add outsl push rex.RX (bad) sarb icebp cli push movabs mov or (bad) adc in test cmp xchg stos rex.W sbb (bad) (bad) mov mov sub andnps mov sahf loope and mov cmp clc scas rex.WXB mov shrd mov mov jl icebp fnsave outsb pop out xor lock adcl rex.RX (bad) (bad) cmp data16 or test sub sbb or (bad) adc mov decb rex.WRXB mov rex.WRXB (bad) in stos mov (bad) rex.B jrcxz mov fcomps enterq lret test rex.WRXB scas rex.XB repnz (bad) (bad) orl xor loopne mov rex.RB addr32 stos add in test icebp cld sbb leaveq fsubl adcl xchg (bad) pushfq (bad) push adc imul mov xchg cmp loopne insl cld mov in (bad) mov xor adc or pop es fcmovnbe scas pushq adc fnstsw pop cmc xor (bad) sahf sti and xor shrb cmp xlat in repnz jns insl cs jp pop imul mov push fcmovu (bad) outsl xor mov jno jp test (bad) pop (bad) xchg (bad) rcl jle in mov test pushq (bad) enterq lock xlat (bad) sub (bad) retq test cmp (bad) add jge (bad) out (bad) mov je xor cld (bad) or je xor cmpsb sub sbb clc stos (bad) jle (bad) mov pushfq and push popfq lret stc (bad) jne and test retq cmc add scas rex.WRB xchg pop mov (bad) sub (bad) mov leaveq xchg push ds rex.WRX data16 ja rex.WRXB or (bad) stos rcl sbb mov stos mov test lock mov insl jmp mov fwait mov movabs je (bad) in sti (bad) fwait movslq addl rcrl or mov (bad) fwait (bad) push rol pushq fucomip sarl cmp test shrb repz mov rex.WB icebp cmp movabs (bad) (bad) add fbstp loop (bad) rex.WR and insl repz rex.WRXB rex.RXB fwait in mov jp cmc cwtl add cmpsb sub xor hlt (bad) rcr lret jmp fwait in scas and fcompl add mov mov mov test fcomip sub xchg rex.RX rex.W loopne fildll (bad) add pop pop xchg jge adc (bad) (bad) pop (bad) rex.R jbe cmp dec pop pushfq pop rex.RB cli movsb jb in add (bad) insl mov add cmp (bad) jge (bad) fwait repnz hlt fwait test jo mov pop jp (bad) stc (bad) (bad) (bad) adc (bad) mul xchg fwait adc sti add scas (bad) (bad) sar fwait shl sub sbb and test sti fisttp sar sub out pop mov fwait test mov ja (bad) fwait (bad) mov lahf test xchg push movsl (bad) and sbb negb (bad) jg adc fisttpl and fwait jb (bad) xor fsubr xlat cltd jrcxz xchg mov push (bad) mov sti retq or insb test mov mov movsl jo adc scas cmpsl (bad) sti int cli lods (bad) movabs in mov xor callq xchg jns cli and jbe in andb mov sbb or jp lret (bad) (bad) mov lods mov loop (bad) movsb je pop icebp mov (bad) jp push add adc stos push (bad) out repnz iret (bad) xchg mov incl push stos scas fwait and cmp fwait xchg fsubrl lock (bad) lods fwait std (bad) lods rex.WXB rex.R add (bad) repz movsl push movslq je sbb rex.RXB fwait (bad) adc lock mov lods (bad) movslq mov out mov movslq sbb fwait adc rorb adc popfq sub sbb or fdivp rex mov push fwait push and jb pop rex.W fwait add (bad) mov fcomps and neg retq outsl fwait mov xor (bad) (bad) (bad) cmp xchg (bad) rex.RB in (bad) jmp popfq (bad) (bad) fwait out pop scas jg push cltd (bad) int3 sbb sbb add jle push rex.WRB fstps fwait adc (bad) xchg fstpt sbb add (bad) rex.RXB fwait in and rex.XB push cmp mov retq add (bad) sbb lret pop rex.WR rex.WXB cs fwait (bad) (bad) push fisubl xchg mov jrcxz cld fsubr jrcxz and callq rcrl rex.RX (bad) push (bad) js ds xchg xchg (bad) sbb add xor jmp (bad) pushfq js pushq movabs and leaveq pop (bad) (bad) (bad) (bad) (bad) push cmp jmpq cli rorl out pushq movabs rcrl (bad) repz repnz stos add jne js jge sbb xchg jg fwait iret cmp push pop add in clc (bad) push and jge (bad) fwait jmpq xchg stc iret or mov repnz rex.WB or (bad) sahf sbb test pushq mov rex.X and xchg jge pushq or stos iret fwait rorl repz pushfq (bad) xor sbb mov mov add loopne fwait movsl rex.WRB adc outsl push jg sub (bad) (bad) std fildl repnz cmp movabs mov callq gs (bad) or movabs mov rex.X fwait cmpl jle in sbb xchg (bad) (bad) mov insb outsb mov fwait push sbb (bad) ficomp clc andl mov (bad) add sbb adc movabs or in scas pop cmc lcall rex.R movabs jmp sub (bad) and xor outsb adc jo pushfq cmpsb jmpq sbbb cmp and cmp sbb out sub xor cmp (bad) xchg je sti cli cmc cmp stos push add pushq lods gs mov ficoml sbb (bad) pushq push mov fwait pop (bad) outsb cmpsl (bad) or rex.WX popfq test outsb loope fcompl cmp rex.WX ds mov pop add mov push (bad) cmp retq xor fldt fist sbb cmp (bad) (bad) lea test mov jle stos movabs sbb js out sbb xor rex.RXB mov cmp rex.X jo scas mov xchg (bad) jns and cld cmp sbb (bad) (bad) fwait pop mov rex.RXB sahf adc or push repz mul (bad) fwait mov cmc mov scas mov fwait pop cmp rex.WRB in fwait jrcxz ljmp callq add shrl sbb out cli add stc and (bad) sarb mov sti (bad) cmp fwait in and pop jno pushq and xor es loope stos sahf cmp sbb roll sti or jg (bad) sbb xor push cli fs add cmp retq adc add (bad) fwait and (bad) outsl sbb imul push fdivl mov sbb rex.WB xor test cmp std shrl (bad) xor (bad) lods xchg mov movsl sbb jmp cmp or sbb xchg jp adc addr32 sti movsl fwait adc cmp (bad) cmp rex.WB xchg mov fwait jge loop jns cld mov or scas or jmp int lock mov iret and fwait lods mov mov jp sbb fwait movabs outsl add fwait adc rex.X jae insb fwait mov pop pop imul cli out movabs test (bad) addr32 (bad) movabs mov (bad) jl jg push imul loop (bad) sbb cli cld (bad) push sub shr movsb fwait pop xchg nop xchg mulb jns adc mov enterq add pop cmp (bad) (bad) xchg sbb pop rcl imul push out es stos frstpm(287 scas sbb cs cmpsl cmp jmp rcrl jo in xchg mov rex.B rex.WRX (bad) (bad) insl pop sbb xor mov movabs jrcxz pop jmpq cs insl test xchg jo sbb rex.RB mov test fs mov out rex.RXB fs leaveq rex.WB push (bad) jne mov jmpq (bad) loope xor mov rex.W mov gs cs adc leaveq (bad) std rorb je in fldt mov (bad) data16 in push mov faddl (bad) nop (bad) jg cmp (bad) and (bad) cmp rex.B movsb std rex.RXB pop or pop xor jmp (bad) and xor mov pop out sbb mov repz out iret push std push (bad) pushq (bad) mov fisttpll fld and not callq (bad) lret rcl jle xor movslq leaveq scas add data16 or ja rex.WX xor mov stos out (bad) pop (bad) lea or add mov mov sti rex.XB rex.WRX fildll mov pop (bad) js pushfq lret movslq and xlat rex.WRB sbb jbe push sbb pushq (bad) mov mov (bad) mov sar repz sbb sarb mov xor mov and adc (bad) outsb enterq xor jl (bad) repz rcrl (bad) jb sbbl mov sti mov movabs lea cmp mov adc cwtl rex.WRXB callq push cmp pushq (bad) push sub rex.WR leaveq or mov sarb (bad) out (bad) xchg sbb popfq movslq rex.WX sbb cli rex lahf (bad) rex.WR jne loope and jbe iret xlat popfq shrb rex.WX popfq pop repnz popfq jg (bad) movsl gs mov (bad) rex.WB fnsave rex.WR lock jne sub rex.WX mov movabs in rex.WXB xchg (bad) (bad) in adc rcrl fiadd (bad) pushfq xor (bad) retq lret pop sub movabs gs rex.R sbb mov pushq cltd mov sbb or pop retq cmp (bad) push xchg (bad) orb jne jnp sbb add xchg notb (bad) in jg (bad) iret pop leaveq movslq repnz xor adc insl adc or gs rex.WRX callq fcoml out mov jb lods (bad) cmpsl fidivr fnsetpm(287 clc (bad) cmpl lretw (bad) jge jp cltd rcr cmc fisub xlat cmp clc xor popfq sbb lret jne lret pop (bad) sbb sti movabs (bad) repnz add (bad) pop nop or out pushfq fwait push sbb (bad) ss pop fwait test rex.XB rclb (bad) out fwait scas rex.RX rex.RB and push (bad) jg add jrcxz rcrl test (bad) sti test pop pushq std mov insb mov add mov xchg mov js sub mov fistpl sbb mov test cmp (bad) pop push pushfq movabs mov es add out cmp (bad) add pop fwait mov add jl pop jrcxz out (bad) fwait lret scas (bad) pop rex.WRXB adc callq stos push mov jae popfq mov mov jl jle pop rorb mov rex.WXB mov (bad) mov data16 or lahf movabs sub fwait in jns mov rorb mov movabs rex.RX mov mov add loopne add imul negb icebp xchg rcrb add es imul sbb jge loopne fwait and cmpl popfq test out xor mov sub movabs adc je xchg js rcrb push clc rorl fsubl (bad) retq outsb test sbb mov sub sbbl xchg (bad) mov lret xor repnz sti mov rex.XB pushfq ss fwait xchg xor pop imul pushfq mov gs jno (bad) sbb rex.WRXB je rex.WR fldt (bad) (bad) xor (bad) cltd faddl mov (bad) (bad) sub pop insl jbe and xlat imul mov movabs retq test fcomi xlat rex.WR (bad) jne add fwait add cmp push rcrl jnp (bad) in lea adcb add cs xchg popq (bad) or rorb (bad) cmp fs sbb je (bad) cmp sbb jnp adc stc fistpll fisttp (bad) pushq or (bad) push iret addr32 imul (bad) mov push adc iret mov rex.WRX lock sahf (bad) movabs enterq fwait add loop in jmpq fld insb imul jmp fbld fwait in cwtl cmpsl out (bad) rex.WXB shl fmulp and rex.RX adc fwait retq pop loope and in cmp mov rex.XB sbbl add in outsl (bad) sarl fcoms ds cmp rex.B rex.X and (bad) xchg xchg orb cmpsl test xor mov jmp callq rex.RX mov sahf cmpsl sbb movslq vmread iret pop movabs jle (bad) (bad) xor hlt (bad) insb fstpt rex.RX (bad) xor push (bad) mov out out (bad) (bad) pop sub rex.WXB shlb femms (bad) out insb retq and (bad) mov mov movabs outsb in rex.X mov ficomp sub movabs (bad) or jmp pushq (bad) xchg sbb (bad) xor hlt push xchg cltd fdivrl cmp (bad) repz (bad) in fs push lret cs fist mov pushq outsb jb mov popfq pushq xor (bad) xor (bad) jl jnp mov jbe out push nop lods (bad) testl xor cmp jo rex.WRB pop rex.XB sbb mov callq (bad) pop iret mov loope pop sbb rex.WXB add adc fs pop cwtl cmpsw cmc mov mov (bad) cmc je xor jle packssdw sbb sbb addl jne sarb fs adc push pushfq insl pavgb notb jmpq andl fistp rex.RXB repz mov movabs mov and and shr xchg mov jmp (bad) mov lea in mov or lock test xor jmp rcrb xor shlb rex.XB push xor jo mov outsl movabs (bad) and lea mov out cmp movslq mov adc leaveq jo cltd adc negb sbb addr32 std adc rex.B cltd pop out xchg addr32 lret (bad) pabsb add scas pop std data16 fild jle (bad) movabs cmp mov (bad) sbb lods (bad) sti fnstcw mov loope movabs xor (bad) mov (bad) std adc cwtl movabs imul cld or pushfw mov lahf clc iret stos mov rex.WB pushfq cmc pushq cmp in iret sti leaveq sbb mov push mov mov lret jbe imul test xor movsl adc jbe (bad) mov rex.WXB loope rcrb fcoml stos add (bad) pop (bad) rol sub ds or or jle retq js outsb (bad) stos cltd pop and cmp callq (bad) (bad) (bad) imull xchg rex.RX rex.XB pop loopne (bad) loop scas (bad) flds mov pushfq loop xchg lahf ss rorb mov xorl mov out rex.WR mov adc xchg out (bad) (bad) fidivr (bad) cmp je mov or rex.WRB shl add test (bad) mov out (bad) retq nop add rcrb in iret xor fistl test stc (bad) sbb sbb (bad) adc mov xor scas pop mov rex.XB rex.WRX pop movsl mov rex.X out or shlb fdivl stos test sahf ljmp imul jp push adc sbb repnz cmp push rex.WR pop sahf scas (bad) xor adc imul out lods mov (bad) rex.RB and mov jne xor or mov cmp lahf (bad) sbb mov stos lock xchg (bad) imul (bad) pop cwtl (bad) es xlat add rex pop xor mov xor mov xchg jne je and sbb adc test in (bad) in adc xor lods sbb (bad) and (bad) sbb xor cltd rex.B (bad) mov push fistl sahf fwait rcr (bad) cwtl rex.W rex.RX (bad) adc leaveq pop fmuls (bad) in js sbb movsb sti rcl add (bad) sbb test fdivs loopne leaveq lods movabs rcrl (bad) xchg data16 jb sti (bad) or andl (bad) sarb mov sbb xchg rex.WXB nop insb es mov fwait (bad) jne jo rex.RB movabs icebp mov (bad) cmp mov mov ss cli push mov hlt pop test insb rex.X mov cmpsb cmp jg stc iret (bad) out adc xchg cwtl pop jae mul cmp or (bad) mov pop xor insl outsl mov mov loopne pushfq or sti jmp movslq fs xchg sbb pop mov fcomps mov sahf (bad) ffree lret fwait add fmul (bad) pushq mov out cwtl jno mov (bad) movsb fstpt mov xchg (bad) sub out rex.WRXB pushq mov push jns rex.WB xor fimul movabs rex.WRX rex.WXB fwait mov ss push sbb es sub cmp adc rcrb (bad) fwait mov lret int rex.WRXB and (bad) movabs lock rex.WB rex or scas pushfq rex.B rex.XB nop testl mov xchg (bad) (bad) push mov (bad) cmpsl adc in (bad) cmpsb cld or std (bad) (bad) mov add rcrl (bad) popfq test lret jns sbb rolb rex.W stc xor (bad) (bad) (bad) xchg mov mov enterq movabs fwait (bad) lock movabs lret fwait xchg stos push add (bad) (bad) xor loope xor or (bad) cmp loope js mov fwait push mov iret mov xchg lods (bad) (bad) xor rex.B fwait rex.RB cmp mulb rex xchg (bad) rcrl imul mov mov ja insb rex.R fwait lahf loopne test fidivrl loop sub adc sti jae sbb cmp push fwait je or movsl xlat in pushfq (bad) jne adc mov mov lock sub xchg out insl fwait cmp mov hlt sbb rex.WB mov add in cmp insl fwait (bad) xor xor (bad) flds and (bad) stos mov cmp fwait add shrl int retq adc rcrl scas add shrd out mov xchg fwait pushq xor fwait nop (bad) or mov sarb jmpq (bad) mov and movabs mov sbb rex.X rex.WX fwait rex.WXB movabs jo mov pop (bad) test movsl jle fistpl out (bad) mov adc in fwait or xor fwait adc rex.WXB movslq fwait mov and rex.WRXB fwait loope lret rex.RXB xchg xchg outsl adc (bad) (bad) (bad) frstor rex.R xchg scas fisttpl mov rcr imul int3 loopne sbb imull nop and adcl add faddl leaveq movslq mov mov prefetcht0 (bad) (bad) cmp testb movabs push stc scas rex.RX rex.RX rex.WR gs cmp or add mov xchg mov lret sbb add lods xchg cld fwait jge shlb pop sbb pop push fwait add int hlt mov add ds sar (bad) cmp test mov sti sti sbb sub sbbl pop (bad) es add fdivs cmp (bad) (bad) int sbb mov cmp cmp fbld cli lahf rex.B cs rex.WRB fwait jge rorl sub add (bad) lea rcl (bad) (bad) xchg rex.WR (bad) adc mov fildl jmpq shl xor (bad) nop or (bad) lret sub int mov pushq stos (bad) mov pushfq lods (bad) (bad) push je stos rex.RB stc kxnorb fwait sub xchg iret xchg xchg outsb cmpsl movabs fwait mov js cmp xchg retq (bad) sbb (bad) xor add (bad) jns add cmp enterq fwait leaveq rex.WRXB movsl and fiaddl mov stc incl rex adc test mov jb fwait xchg (bad) fstl std iret sbbb (bad) jrcxz mov cmp push (bad) push icebp adc fwait leaveq test insl rex.RXB rex.RXB rex.WX (bad) cmpsl (bad) pop adc retq rex.WR repnz addb add pop cmp adc fwait (bad) rex.R push jb imul (bad) pushfq lret jmp ss out jns jae (bad) clc (bad) (bad) jp rex.X fwait sbb sar and (bad) ror stos (bad) cmpl cmp cmp test xchg jrcxz sbb add (bad) (bad) fmul mov sbb or lock (bad) movabs pop xchg (bad) mov xlat sub (bad) pop jb pushfq retq (bad) mov movslq (bad) fcomp and data16 (bad) jrcxz loopne fisttpl mov sbb rex.X stc es fistpl data16 stos stos addr32 mov (bad) rdtsc cmp xor loope fdivrl xor sbb addl cmp ja (bad) rex.WX rex.WRB or test or xchg (bad) lahf or pop (bad) (bad) xchg (bad) push rex.WX in ss mov notl pop mov or jae xchg xchg mov (bad) mov (bad) mov cs stc push cltd leaveq or rex.B cmpsl adc xchg sub retq xor mov fcomps leaveq cmpsl (bad) retq orb nop cmp mov adc rex.WR std retq pop cmp xor shrl mov vmread pushq fwait and or jp add enterq in xchg mov fildll push cmpsb or (bad) sti movsb (bad) (bad) jbe sub loop lea pop mov rex fwait (bad) (bad) repz fwait shrb pop (bad) andl stos add lar xlat xchg xchg (bad) cmp (bad) (bad) xor pop (bad) fwait and shrl movabs push fwait mov cmp xchg xor lods mov (bad) jmp mov and pop fwait pop mov stos in and idiv imul int3 scas and loopne es (bad) rcll jae mov rex.XB fwait rex.WRXB cmpl (bad) ficompl retq mov rex.WB fwait shl push pop xchg fbld adc jo (bad) xchg cmc jmp adcb jge movsl jle push fwait (bad) repz or (bad) (bad) xchg fcmovnbe fist (bad) cmp and sub hlt mov cmpsb (bad) movabs notb cwtl (bad) rex.RX rex.X repz loope rex.WRX xor mov test (bad) out and fst jle pushfq sub stos movabs mov outsl sub fisubl popfq adc (bad) test lods movabs sbbb imul hlt xchg pushfq clc mov jl loope rex.WRXB gs cmp (bad) std movslq jl jrcxz mov out rex.RX rex.WXB sbb (bad) rcrb retq bts pushq rex.WRXB cmc (bad) jmp jle sbb sti pop push or (bad) (bad) insb rex.WB rex.WRX in lea rex.WR or test mov enterq xchg sarl xchg sti pop xor jno adc sahf cmp cmp pop xchg insl rex.WB outsl jrcxz xchg (bad) mov add imul stos andl in adc xor mov addr32 hlt sbb sahf sti (bad) pop jno loope (bad) ljmp adc sub cli leaveq fwait rex.RB gs fwait lfs xor insb adc fwait rex.W test mov outsb fwait adc test (bad) outsl sub lret out xor stos fwait (bad) mov or gs lret (bad) rex lock imul clc cwtl add (bad) movsl in fwait mov cmpsb and and xor push lock jrcxz fwait (bad) (bad) rex.W stos cmp test sarb add rcr addr32 insb fs cmp fdivr xlat or xor adc callq fisubrl sbb xor (bad) or cld rex.X add or jb repz in (bad) fwait movabs mov int or lret leaveq rex.WR push (bad) and mov vinsertf64x2 in sbb pop rex fwait or scas mov rex.XB sbb xchg sub movabs mov rex.W adc adc (bad) (bad) mov add (bad) movabs xor sub xor cmpsb stos or ror in (bad) cltd and fwait xlat rex.B mov fwait lret int cmpsl sub fwait xchg (bad) or fwait rcrl movabs mov lret pop movabs rex.WB fwait jo pop pop sbb mov lods decb fwait add jae icebp es negl xor push rex.WXB fwait xchg test add (bad) mov stos jl movsl (bad) test fwait mov lret sbb std xchg popfq or sub hlt (bad) insb addr32 outsb sub movabs xchg rex.RX stos (bad) (bad) movsl adc mov (bad) push xchg add jns jl movabs outsl rex.X jae push ficompl (bad) cmp cmp (bad) rex.WRX add xorl (bad) imull in sahf rcrb and fwait mov push xchg std retq in or test int jg rex.W fucom cmc rex.WXB pop push xor sbb mov push and scas pushq fcompl xchg icebp mov pop rex.WB lret mov scas adc enterq cltd scas (bad) rex.RX (bad) cmp movabs rex.RX pop fisttpl mov popfq stos pushq jmp mov jns (bad) rex.XB xchg (bad) lods movabs pop (bad) movabs es rex.XB add push (bad) xchg sub fistpl adc scas rex.W xchg sbb add mov out or add push rex.RB xor pop (bad) mov jo or xor sbb ja jge adc movabs sub push (bad) outsl lock mov scas pushq rex.WRX in rex.B fnstsw rex.WR (bad) pandn xor and sahf xor (bad) fisttpll loope sbbb mov sbbl xchg (bad) mov and adc xor (bad) and jns mov lret push int3 movabs pop mov (bad) not pop mov sbb cmp loopne jp pushq fstps out rex.X push cltd rex.X rolb cmp xlat jno loope retq (bad) fnop xor push vpsubusb stos jle mov out popfq (bad) sbb fldl iret cmp jo xor (bad) pshufw fnstenv out xrelease add jl repnz cmp sti loopne pop cmp xlat hlt cmp fsqrt adc pop xorl add shr icebp callq (bad) xchg rex.WRX jo rex.WX fst xor sbb mov out in jg xchg test (bad) ror (bad) out lods rcrb fistl iret cltd fistpl xor (bad) xchg outsb imul mov jge or stos and cltd fucom jbe xor popfq xchg int pushq push js add push callq and push or fstl fnstenv outsl pushfq xchg (bad) incl jnp push (bad) jl fbld fnstenv mov (bad) sahf adc mov (bad) and (bad) leaveq sub rex.WR or mulb or (bad) mov loop mov jle fcompl sahf xlat loop sar mov push cmp addb fs rex.WRB xlat (bad) xor rex.W xor jno (bad) neg enterq sbbb testb pushq out xor (bad) rex.WB in outsl movsl pushfq or push jle sti loopne out jle repz test push pop pop iret and stos (bad) test push fwait (bad) sub in (bad) jne jge mov jnp cmp fwait cmp (bad) jg fwait pop loopne shrb adc (bad) enterq fidivl pushfq stos (bad) pop ja or movabs js fwait mov scas cmc (bad) xor xchg adc addr32 in movsl (bad) (bad) or sahf push and subb js lret (bad) xlat jl (bad) sbb push mov fwait lods jne in (bad) rex.WX cmpsb (bad) add jrcxz add and fistpl jbe retq cmp insl callq clc (bad) in fisttp (bad) xchg (bad) fwait movabs data16 and test cmp fwait shr (bad) (bad) data16 fwait add lods (bad) es xchg mov (bad) cltd xor (bad) mov ds ja add (bad) fwait xorl mov orb rex.W sbb rex.WRX mov fwait mov cmc rex.WRXB rex.RX cwtl retq rex.B jno movsb (bad) or xor adc loopne mov adc fisub sbb pushfq sub fnsave mov ljmp (bad) rex.WR insl sbb outsb adc (bad) mov cmp loope (bad) pop imul (bad) (bad) leaveq pop mov mov sar pop pop cld cmp cmpsb loopne (bad) add add mov movabs mov cmc loop movabs add sub jl out rex.WRXB rex.W mov mov (bad) add (bad) fcmovne sbb outsb ss pop sbbl sbb jae and sbb xchg sub mov movabs jl imul fisub mov sbb int3 mov (bad) out insb sub shrb nop mov ds fpatan (bad) mov (bad) ffree xor ds frstor xor jno adc or cltd cld repnz mov or outsb sbb jge out xchg xchg test mov xchg mov (bad) notl push lea sti lahf push xchg pop cld out cmp sbb cld rex.R rex.B jns,pt outsl loope icebp pushq pop (bad) pop (bad) xor jl xlat std sub add out jle cmpsb adcl xchg fildl addr32 cli rex.WXB in insl xchg mov cltd sbb xchg (bad) lods add int mov jp mov mov adc and sbb or push outsb cmp jnp adc jrcxz or lods out sub pop pop ss xchg mov rex.WRB xor out rex.WXB xor mov mov (bad) pop adc movabs in imul decb (bad) scas sbb fcoms xchg movabs loopne callq adc pushq cld int loopne lret in (bad) (bad) out (bad) outsb pop (bad) fcoms jge outsl in jg and data16 out and popfq push data16 add mov (bad) xlat out sarb fdiv add shll (bad) rcl in loopne adc retq cltd mov loop repz mov rex.XB and cmp insl cmpsb push orps pop jp loop rex mov jmpq push cmpsl rex.WRXB xor mov lret jp lock sti xor rex.WR xor sub (bad) (bad) add stos addl push xchg sbb rex.WRB imul cmp (bad) mov fwait lret outsb xchg add fild stos rex.WRB repnz test mov (bad) ja (bad) fwait pushq jno mov insl adc mov fwait xchg (bad) mov (bad) sbb (bad) loopne cmp jb cs sbb add stc (bad) repz es pop (bad) adc stos mov rex.RX out out movslq sbb mov lods and push gs mov sbb mov (bad) cmp cmpsb push je cmp (bad) cwtl hlt (bad) xchg mov lahf rex.R scas add add mov ds pushq sbb rex.RXB mov add fwait adc rex.B fwait pop (bad) (bad) scas add pop or cmp (bad) sbb stos push add add rex.WX mov jnp fwait pop or jmpq fwait callq mov (bad) cli add loope pop fwait (bad) lods xchg mov or (bad) repnz sbb xor mov mov retq movabs or sbb adc ds rex.RB adc adc fs retq insl in or fwait mov and adc sub rex.WRB mov mov rex.RX (bad) lock (bad) fwait mov cmp (bad) mov xchg sbb loope (bad) es movabs callq enterq fildl nop jge (bad) sbb add fwait (bad) pop adcl push adcl sbb mov xchg (bad) rorl sti (bad) rex.WRX (bad) (bad) or out sub xchg lret adc sbb cmp (bad) int3 adc movsbl mov xchg repz leaveq rex.R add std mov in jp jnp hlt sub add lock xor mov mov (bad) cmp (bad) lret sbb fadd fwait add (bad) imul jl fstenv icebp add jo fwait or rex.B cmp add cmp sbbl movslq in adc add pushq rex.RXB test fwait (bad) jo jge movabs adc insl rex.WRXB cltd popfq rex.RX (bad) out fwait sub sub fwait movsb rclb xor mov in (bad) fwait lahf cmp fistl pop jmp (bad) push ficom rex.WRXB fildl xor sarl sbb (bad) sub cmp (bad) xchg rex.R (bad) ss (bad) in loopne je jmp mov adc (bad) or movabs fistp jl sbb (bad) or rex.WR lahf cmp imul and jg jno fwait scas and int3 outsl jmp cmp hlt ja rcrl mov or (bad) push lret btr rex.RX jle movsb or pushq mov imul mov lret rex.WXB punpcklwd (bad) pushq ja lret test rex.XB adc or add add push or movabs (bad) addr32 rex rol rex.X int3 rex.W iret adc (bad) mov xchg out pop rex.R ficoml mov rex.WRX loope adc movslq ja add push (bad) and fwait stc insl in iret loop xor fwait sub sbb rex.WRX movabs (bad) sbb and enterq (bad) lea push sbbl (bad) (bad) mov cmc jnp repz int3 retq lock cmpsb xor addl (bad) (bad) mov sbb fldt (bad) push push outsb mov fwait rcrb push adc data16 stos mov sbb loope fwait shrl mov scas cli xchg xchg out rex.X stc mov rex.WRX cmp rcrb add lods setnp xlat rex.WXB jae rex.RX fnop cmc mov push xchg je (bad) movsb std (bad) (bad) pushfq mov hlt jmp mov fwait xchg xor xor jo in imul mov jp pop (bad) outsb (bad) sub adc icebp pushq cltd mov fstpl add rex.RXB retq mov fs imul jge sub mov cmc mov cli mov sub sub lea jge cmp xchg loope (bad) (bad) mov out stc ss cmp leaveq add stos je jne xchg pushq (bad) rex.WXB test pushq and in hlt (bad) repz or repz mov push testb mull rex.WXB rex mov sub jae std loopne retq mov (bad) sti push adc loope xor data16 fwait mov fucomi shrb cwtl mov scas loopne rex.WB (bad) (bad) fiaddl or test mov enterq (bad) rol adc movsl outsb sub mov mov (bad) fdivr (bad) not addr32 jns adc std roll adc imul stos jmp test mov insb jg pop (bad) mov (bad) mov rex.W xchg cwtl mov rex.RXB xchg xchg rex.WRXB out (bad) sbb add (bad) xchg retq sub (bad) push mov (bad) clc callq outsl (bad) fildll add (bad) mov xchg jns xor mov rclb ficomp rex.WR std mov mov test movslq mov scas mov loop sub adc jae callq std out ds int (bad) (bad) jg notb and vshufpd stos ds repnz movabs xchg adc imul jle jno sbb (bad) (bad) jbe rcrl jb fcompp xchg add scas jns rcl push jmpq mov sahf rex.WR xchg shll rex.WB or mov movslq xchg stos sub mov rex.WB es fisubr sub (bad) (bad) int fdivrl lcall (bad) sbb pushq mov lock in pop (bad) push lahf add loopne insl pop xchg sbb cltd ds xor or jge repz and callq rex.RXB insb sub lods rex.WX (bad) mov mov mov fldl xchg enterq mov (bad) int sub rolb sbb sub mov retq xchg mov insb mov (bad) xlat out xchg push stc sbbb mov adc iret fdivrs stc push jg pop fiadd (bad) pop push pop sub pushq pop orl xchg rex loop (bad) not jrcxz and xorl and rex.WRXB sub in scas stos ds rcrl jl push jle es scas js pop rex.X sub pop (bad) out and rex.X and sbb subb sarb pop (bad) lea xchg (bad) mov stos jo xchg retq (bad) jge xlat fild (bad) sub addr32 push push cmpsl cmp rex.WX lret (bad) (bad) (bad) (bad) int3 (bad) pop and lahf push mov xlat adc rex.RB (bad) ja ds sbb mov movabs jo or add xlat in (bad) out jmp out or (bad) retq (bad) rsm rex.RXB cmp (bad) jo leaveq and xor in rex.RXB cmp jge jg push xchg pop adc adc int3 (bad) ja cmpsl cli rex.X popfq mov mov mov fwait xchg int3 je jl imul out (bad) repz adc unpcklps sbb push vcomisd sub sahf or (bad) loope in sbb mov jg (bad) adc jge loope (bad) rex.WB mov scas mov stos jl fnsave rex.X and sahf fistl sti push ss jge loop push adc xchg mov add and or rex.WXB nop in movslq fcomp adc cmp stos (bad) sub mov adc repnz out (bad) je (bad) xchg mov sahf scas push (bad) sbb je mov stos in cmpsl and mov (bad) movslq add mov add cld xorb xchg or icebp mov lods cmp (bad) sbb lret pop rex.RX (bad) mov jo in pop movslq or fimull push int3 jrcxz rex.X rex.WRXB out mov pop push adc mov xchg stos data16 fscale jno jno xlat and outsb jle rcll xor push xor retq adc fisttpll (bad) callq mov fsub adcl movabs mov mov fstpl fs popfq jp adc xchg cld out fst jrcxz sahf pop pop mov es (bad) mov jns sbb roll popfq mov pop jbe jmp xchg rex.WX or movsb jmpq and mov shr add or jp xor repnz pop clc push rex.B je roll push mov mov or jrcxz lret add mov in jbe rex.RX pop cld scas rex.WXB rex.WX pop rex.W idivl (bad) rex.WXB and rex.X pop pop test movslq or scas push jmp data16 rclb xor fnsave mov callq xchg and (bad) pop fildll loope mov sarl rclb jo addr32 jge insl pop fistp mov clc repnz pop cmp stos push xor gs movsb sbb pop add outsl ds jnp mov cwtl test sub pop (bad) (bad) cmp imulb stos push mov add stos enterq fist cmp sbb xor mov in rex.W rex.WX push and scas cltd pop jrcxz (bad) (bad) outsl movabs xor (bad) test lea stos out mov and cs mov (bad) cli add pop push fist sbb (bad) rcrl lea sahf (bad) movsl add stos add pop rex.WX or int rex.R lret (bad) mov mov sbb (bad) rex.RB xorb sti fcompl mov mov rex rex.WR enterq ss shufps add sbbb (bad) and (bad) cmpsl adc (bad) and sub rolb jbe mov stos ficoml (bad) fldenv mov fwait mov lock rex.WRB in (bad) loop xchg imul push mov iret out xlat lods (bad) mov mov clc jle add adc lea sbbb push or lahf idiv (bad) jle cmc pop pop js mov frstor adc xchg sbb xor jae cld fwait lret (bad) and enterq mov or (bad) (bad) scas pushfq jl and iret (bad) jbe mov out xchg (bad) es in (bad) (bad) sbb sti add movabs in hlt (bad) stos jmp popfq fwait movabs xor enterq sti stos (bad) cmp (bad) cmp popfq jg adc imul jnp mov push sbb iret addr32 int (bad) cmp test cmpsl cmpsb in setge cmc movabs or sbb and fwait int xor iret pushfq fwait mov sahf lret insl add or cmp stos data16 jmpq jl (bad) out loope in movabs stos (bad) xchg cmpsb lret pop mov xor fwait sub push movslq push mov rex.WXB fsubrs mov in sbb fdivrl jl mov stc sti rex.RXB mov fwait loope cmp adc fistp cmp mov int push xchg fldpi mov or mov fwait (bad) imul ja mov sub jbe outsl icebp fwait adc xchg data16 in xchg cmp subb rex.WXB jne cmpsb xor clc push and test rex.WR adc mov je jg scas mov loope,pn in rex.WRXB sbb mov cmpsl rex.WB and mov mov (bad) xchg push pop pushfq sar xchg mov pushq xor sub rex.RB lock fcmovnb cmp outsl rex.WXB lea retq add mov int3 test rex.WB jge jae int pop mov or jrcxz loop xchg fildl mov in jp and xorl jp jge sbb in (bad) push cmpsb mov iret cmpsl nop (bad) xor es mov mov cmpsb jg scas mov pop (bad) (bad) outsl rol (bad) lret cmc pushq mov fistp cmp rex.WB pop xchg (bad) lret or push mov lods rex.XB rex.B push pop rex.RXB sti stos je rorb mov (bad) insl retq jmp lea mov pop movsl mov in movabs or sbb orl adc out (bad) mov sbb in lea ja (bad) (bad) rex.B xchg rex sbb mov je jle ds mov pop and cmp sbb rcrl iret fildl sbb sub loop (bad) xor std icebp (bad) xabort xchg mov xor mov pushfq outsb adc rcrl repz cmp sti jmpq outsb xchg mov xchg (bad) (bad) fwait (bad) callq fwait xor movsl lea fidivrl (bad) push rex.WRB xor xchg shll sti jb rex.RB xchg fwait and jbe fwait imul roll (bad) mov fwait insb mov xlat outsl (bad) fisttpl repz fs add mov in rex.WB pop lret add add out int3 fwait jp movsb or rex.WRX and cltd (bad) test sbb xor jrcxz fnstsw leaveq mov jno add and dec sti sbb sbb (bad) xchg sahf xor rex.WR rex.WXB mov out cld jp movabs cmp jge clc or outsl push fwait (bad) repz movsl fwait xchg mov mov sti (bad) pop mov add movsl cmp (bad) retq sbb lahf pop (bad) and pop fwait (bad) addr32 cli sbb lret sbb std sbb (bad) shrb jl fstl iret (bad) lea es ds push add leaveq jns in loopne sub (bad) cmp jmpq rex.RXB cltd mov cmc and mov hlt (bad) jge pop test jrcxz loopne in loop jge xor sti rex.WRB mov and pushq sahf adc push push mov and sub js rex.RXB (bad) mov rex.RB xchg mov fmull fwait (bad) pop mov jne fwait sbb addl xchg and mov adc (bad) rex.WX pop (bad) mov scas loopne xor (bad) (bad) fwait pop rex.WXB (bad) or fwait jl,pt add decl scas xor subl mov (bad) (bad) lock nop sahf mov rex.XB (bad) rcrb adc cmpsl shrl (bad) addr32 mov js,pt sub fdivp rcl test int or (bad) xchg fwait ucomiss adc sub cltd lret (bad) fcomi cmp std (bad) movabs pop out stos cltd jns ror jp jnp and sub test gs cld loopne loope fwait mov movabs xchg (bad) jnp mov adc mov lods jrcxz pushq std (bad) icebp cltd es cmp iret xchg cmp pushq rex.W (bad) je rex.RB fwait xchg mov shrl adc orl (bad) rorb rex.XB rex.WR pushq push pop xchg or stc (bad) xor jmpq rex.RXB lock pop adc rex.WRB fwait xor jbe movabs js fisttpl int imul fiadd stos xchg sti mov sbb rex.RX in iret sbb fiaddl cltd fwait nop push popfq lret pushq std xor add push (bad) (bad) pushfq (bad) nop fwait pop rex.WX mov sbb ror and cs and jmp (bad) in fwait cmp test std pushfq jb fisubr gs add outsb (bad) fisttpl sti out mov cmpsl test xchg adc sbb (bad) cli pop sbb push (bad) lret hlt lock rex.WXB adc out (bad) mov rex.WRXB push jge gs adc pop sub mov gs out xchg rex.RXB cmp fdivrp xor xchg and (bad) rex.WX mov jge pop cli push (bad) mov cld fucom or adcb push mov sbb outsl rex.RX fistpll out mov (bad) (bad) ss outsl jle mov jb stos rorl mov (bad) and mov push add rex.WX pop (bad) fs jmpq (bad) fdivrs int3 sbb retq scas xor mov je movsb (bad) (bad) pop lret xor (bad) xchg std cld pop out movabs (bad) (bad) fsubrl (bad) (bad) je sahf fcoms cmp pop sbb rex popfq pop enterq pop test (bad) fwait scas (bad) (bad) push jg adc clc adc ds add xchg leaveq push cltd sbb xor lret adc add ja jno in fistl popfq hlt mov rex.W pop scas enterq xor adc sbb mov pushfq cli pop xor xorl (bad) xor lret scas mov and pop pop (bad) push loopne sub rex.WRXB int xchg lea movslq sub (bad) or (bad) retq lods pop and pop push or movabs mov fld mov cmp sub rex.X movslq mov cmp xchg push rex.W rcrb insl pushfq mov (bad) scas sub or (bad) rcrb insb fwait push (bad) rex fs sub and (bad) fwait in (bad) int adc mov rex fwait movsl icebp xor (bad) loop leaveq or (bad) enterq test (bad) hlt sbb mov roll (bad) pop fwait rex.R (bad) fwait pop mov or rex.B fwait movslq in fwait mov adc cmp fwait cmpsl rex.WRX cmp rex.X xor jnp jl fwait cmp mov xchg rex.WX add fwait insb lret lock jg add rex.WRX es (bad) nop add cltd stc add adc mov add (bad) jb outsl jl (bad) jae xchg fwait rex.WRB js test ja sbb callq (bad) fstpt fisttpll (bad) mov mov adc push pop and xchg cmp flds add popfq rex.WXB test (bad) mov add add (bad) sbb xchg jg fisttpl xor pushq jle rcrl (bad) and push (bad) push jo imul mov lea (bad) mov (bad) fwait xor sbb add loope jmp lods add adc sbb out push rex.B fwait (bad) jle mov pop fs rex.RX pop xchg sahf rex.WXB fwait rcrb lret lods movabs movabs rex.WXB rex.WRB enterq jb rcrl and test jmp movabs xor mov movslq adc pop rex.WRB and or or rex.WR and cmp in fsub fwait (bad) push test xlat (bad) int3 cmc pop push stc sti out xor fwait iret pop or xor rex.WRXB (bad) add and sub pushfq mov xlat jmp add add mov ds mov enterq cmp mov loopne or xchg sahf sbb out (bad) testb mov sarb fistpll repnz subb (bad) xorl popq xor mov cmp xchg xlat add cmp sub adc stc or sbb adc (bad) fwait (bad) in (bad) (bad) rex.WRX js callq stos cmp fwait sti (bad) xor pushfq cmp pushq jg pop es cmp ds adc (bad) imul fcmovnu (bad) jb (bad) add movabs xchg sti retq and cmp mull xchg test pushq fidivrl mov pop cmp je lea (bad) lret roll fwait push mov (bad) (bad) fwait rex.WR cmc cwtl stos stos in (bad) mov js sti fs fwait jne in cmpsb cmp movabs idivb sar out (bad) out fwait mov mov jnp jno fwait lret icebp out in (bad) xchg add push mov and (bad) stc mov mov mov sbb adcl pop rex.WRX fs movabs roll cld movabs imul xlat loope jmp pop int (bad) sbb or fwait (bad) sahf sub (bad) fwait iret test adc sub scas adc sbb add or mov or sub (bad) xchg sub loopne callq retq (bad) push jb test (bad) sub cmpsb jbe cs jns fwait lahf (bad) retq callq sbb in repz jb iret mov gs xor sbb xchg add mov (bad) rolb test rex.WRX icebp loopne in push (bad) (bad) cmpsl clc in ficom test rex.RXB rex.WRX rex.WRX rex.RX jmp cmc cli xor xchg or mov jrcxz movabs adc repnz mov fwait retq add mov fwait sbb xchg and (bad) push ds fstps (bad) and cmpsl fwait fs sub cmp imul (bad) mov rcr pop (bad) (bad) push cmp xchg mov xchg rex.X sti adc outsb sub (bad) fwait sahf nop add (bad) (bad) lret test fwait xor xor add or shr cmp xor (bad) pop andb and fwait (bad) and jnp (bad) mov sbb icebp (bad) fwait cwtl out (bad) int3 retq lahf callq cli (bad) mov (bad) sbb subl add pushq ss (bad) test pushfq nop (bad) insb fwait xchg xchg and int3 (bad) sbb jno (bad) (bad) (bad) fwait lods clc rol xor push in pop adc rex.WB clc enterq sub cmp push movslq jbe xchg insl sti fwait (bad) stc sbb test iret or test mov cltd xchg (bad) mov lahf or (bad) repnz cmp fwait sahf jo out in push jrcxz sbb sbb fisttpl pop mov pop pop (bad) int fwait movabs rex.WX jge callw retq cs rex.XB out fwait or xlat (bad) jg rex.WRX push cld callq icebp rex.WR sbb fwait in fidivrl fwait add nop or or rex.RXB sub jrcxz jl jns rcrb mov lahf outsl movsb adc stos sbb movslq movd jmp adc (bad) jg fwait add test sbb negl jg insb in fwait loop rex.W or mov fwait pop pop or add repz xchg pushfq mov rcll push (bad) (bad) pop push outsl (bad) fiadd push push mov add jl jg int fisttpl sbb cmp xlat cwtl fwait push (bad) test popfq (bad) rex.R sbb (bad) andl push fistl rex.WRB repnz jne retq (bad) (bad) imul jo adc lea (bad) adcl push xchg test xor fwait out rex.WRX movsl mov movabs mov icebp and mov adc jns xor sbb stos add in add insl sbb xchg data16 or and and (bad) pushfq xchg je out es gs (bad) (bad) sbb and test xchg mov xchg or (bad) adc sahf outsl test je (bad) jge shll push fisttpll push sbb sbb and add imul (bad) iret sub cmp imul or mov enterq pushfq sbb movabs or fistl (bad) jbe orb callq rex.WXB rex.WX loop sub rex.RB mov adc leaveq notl adc rex.XB jle movslq (bad) rcrl stos jrcxz pop pop int cmpsl js xor mov lret xlat sbb repz (bad) and mov rex.WR jg add test (bad) jns (bad) cmpsl add adc in rex.RX popfq lods mov (bad) rex.XB xchg in popfq enterq rcr sbb std or ja fwait je (bad) (bad) (bad) xorl retq (bad) ficom mov fwait sub fbstp adc cli sbb jmpq int3 rex.WRXB (bad) outsb pop out mov mov xchg lods (bad) or or sbbb lahf stos fwait add fnsave sbb mov or cltd (bad) out fwait rex.WR rex.XB cs add xchg rex.X jae sahf (bad) cltd rex.WB fwait (bad) out jb jl jle outsb scas (bad) cld fisubl and movsl (bad) mov rex.XB retq adc outsb addr32 je xchg movslq (bad) xchg sub (bad) push sbb je mov fwait cmc movsb cli and callq addr32 or cmp adc and iret jl nop (bad) cmp fwait lea (bad) (bad) popfq add sub jge xor (bad) sub xchg jle loope sbb sub cwtl sbb xchg (bad) jbe push add mov jmpq sbb rol push lea lods insb cmp jns rex.XB in push sbb sbb cmc cmp cli push rex mov pop xchg loop testb pop or xchg insl icebp gs add and jne fincstp (bad) push adc lea in sti in sub clc icebp test or imul in cmp je int3 mov negl mov xchg (bad) lret adc movabs pop sbb adc mov (bad) int sbb mov xchg rex.XB in rex.WR addr32 xchg jp xor out rex.XB mov pop loopne xor xor mov jmpq fidivl mov jg mov fcoms push ja je callq add lock xchg in (bad) std push outsb and pushfq imul in testl rex.XB (bad) xor sbb xchg fwait retq or pop sub jbe (bad) sbb adc sar mov movsl std fs (bad) add out rex.WX xchg rclb scas popfq xor (bad) mov insl negb (bad) pop cli iret fidivl add (bad) sub lret sti jmp repz sub rex.WB gs sbb std (bad) and andl or jnp mov (bad) or mov pop fsubs xchg push rcll pop nop int in (bad) in pop (bad) mov jbe lods cmpsb sbb movabs mov adc outsb stc rex.RXB mov or cmpl repz (bad) mov and sti xchg sbb shl rcl add xor ficompl xchg (bad) xchg sub fnstcw test sub cmc lret cmp xor xchg lods cli movl pop fsubrs rex.WRB leaveq (bad) rex.RX (bad) icebp pop sbb fwait sbbb or rcrl loop pushq jg fldl test pop sbb (bad) pushfq stos xchg pop mov (bad) cld sbb pop and movabs in cmp mov sti mov lods push movabs xor (bad) mov ror outsb lods pushq pop hlt movabs fwait retq jmpq push mov sub rex.WR jmpq rex.B movabs gs adc movabs out sub sarl stos (bad) push callq int3 mov xchg lret jp push (bad) decl lahf add in imulb fstps add add mov out mov outsb pop xor cmc scas sbb sbb ss sbb mov (bad) pandn repz rex.WXB (bad) rex.WX cld cmc ss mov xor mov retq jno push sbb pop mov ss loop stc or std int3 xor adc cwtl sub jno push mov lock and mov jb mov pushfq rex.WXB mov repz sbb jno push sbb mov movabs rcrb or cmc mov fwait and test lahf scas (bad) sti lods jnp fsub and xchg movabs sahf addr32 and repz add addl int3 (bad) loop xor in xchg and push (bad) sub and movsb lea divl xchg sbb mov popfq (bad) adc (bad) add scas rex.WRXB fcomps movabs (bad) movsb (bad) fnstsw xor push callq xor loop mov movsl outsb (bad) fwait loopne pop xchg xor pop add repz or lret sub rex.WRX es jrcxz push scas jle pop jmp lahf pushfq retq sbb pop sti callq fildl mov cs mov out (bad) jl popfq (bad) rex.WR rex.WB mov mov push fcomps jb or movabs sahf (bad) sahf rex.WX rex.X lret and std addr32 adc push iret sub rorl andl nop sub and pop cmp xor (bad) rcr (bad) sbb loopne rex.WRX loope gs fwait (bad) xor cs lahf or (bad) fcomi rol movsb insb fwait addr32 adc cmp (bad) mov movabs xchg ds in mov (bad) shll in sbb rex.WRB or pop insl fwait xchg mov imul movsbl rex.B test cmp jmp lea add cs add or sbb test mov rex.WB jb rex.WX rex.WX rex.B mov andl fwait callq mov mov js (bad) jge cltd xchg popfq (bad) test fcompl cmp cmp subb mov (bad) or movsb cmp movabs rex.WB lock fidivr (bad) (bad) fwait sbb (bad) mov (bad) out movabs mov cltd imul pop (bad) pushfq xchg fmuls data16 sub je sti (bad) pop pushq fwait xor or fnstenv stos cmp jle fistpll add movabs mov mov fwait repnz sbb fwait adc (bad) mov sub (bad) sbbb retq mov and sub cmp rex pushq cmpsl rex.XB rex.W (bad) jmp sbb rex.X xchg jle xor (bad) or (bad) je ds retq jg pushfq jle fadds xchg cmc push xchg pop lea shl push pop add xor pop imul xchg push (bad) adc movabs cltd rex.WX xor push push (bad) jrcxz mov movabs adc repnz (bad) jge movabs jno (bad) hlt repnz fmul rcr rex.WRX sub fwait or callq shlb sbb mov js roll (bad) (bad) insb (bad) pushq shrl (bad) push movabs stos add (bad) repnz pushq xor leaveq (bad) sbb es je xor xchg adc and and sbb (bad) adc or pop lods xor (bad) movabs add xor vmovaps es cmp rex.XB outsb jg (bad) or in mov xchg (bad) push shll adc mov pushq fcmovnb push stos repz mov jno push cmp out mov jl sbb jg sbb nop fistp (bad) mov sbb rex.WX cmpsb out mov cmp cwtl pop mov rex.R cmc jae cs add mov int3 repz (bad) imul jb rex.W es push js loop clc xchg mov pop sbb ja cmpsb pushq pop (bad) rclb sbb (bad) sub rex.WRXB shrb movabs sbb sbb jb in cwtl or sti mov cli fwait sub sub add add mov addr32 rex.WX iret outsb mov xchg jmpq (bad) lret test jle (bad) cltd movabs adc add sbb fadds sahf or mov test (bad) movabs add (bad) push mov (bad) iret lock imul retq fwait mov std rex.WX loopne mov xchg fwait push (bad) (bad) insl jne movsl fwait (bad) mov rex.X cmpsl cmp fwait fs je xor fidivr movsl imul fwait adc push rorb (bad) add pop (bad) int cmp rex.R leaveq sbb and (bad) sbb xor mov lcall insl cmp loope jmp and icebp fwait out movabs std rex.WRXB sti rex.WR mov (bad) loopne (bad) sar roll (bad) fwait and (bad) xor fwait mov scas add in subb fwait and fwait sbb nop test not fwait mov scas lahf fidivr callq (bad) popfq mov (bad) mov scas mov fwait push out xchg mov rex.WR test cs sarb lods jae mov (bad) scas sbb (bad) mov mov sahf loopne cli (bad) pop fwait or out add mov mov (bad) sbb movabs stos fwait sbb pop (bad) pop out rex.X push icebp rex.RXB retq add and (bad) ds popfq pop pushq out jmp jae lahf (bad) mov scas cmp sti xchg addr32 push lahf std (bad) sar mov loope ljmp js cvtps2pi (bad) (bad) fsub cmpsl stos int3 test shr cmpsb cmp jl retq pop out clc pushq cmp in pop jl movabs xor jrcxz cmc xchg sbb pop rex.WX (bad) jp (bad) pop outsl sub fcompl shrl mov imul sbb (bad) test push jns mov jnp push outsl imul sahf xor sbb sub mov rorl xor out cmp jg cmpsb (bad) mov incl mov push cmp push outsb lods (bad) movsb (bad) and stos imul (bad) out mov push shll retq jns mov xchg addl movabs rex.RX hlt pop or sbb rex pushq sti jle add pushq fimul mov iret sbb sti or xor xor in rex.WB fucomp mov jbe sub (bad) mov rex.XB fwait in rex.RXB scas (bad) cmc (bad) mov js jnp sbb rex.WXB adc jmp and loope fwait shl lahf mov sbb out retq cmpsb or sbb lret mov enterq fistpl stc mov scas scas sti add movabs cmp pushq rex.RB rex.WB (bad) jmp ja mov mulb seto loopne pop fwait int3 jbe mov rex.WXB mov insb add (bad) (bad) gs xor sti adc sbb andb cltd mov in cmp fwait (bad) sbb lahf loope incb cs xchg movabs and (bad) xlat callq lcall rcr fwait mov leaveq mov (bad) negb rex.WX sahf sar sbb fwait pop mov mov test imul mov repnz (bad) out xchg fistl push (bad) mov push jno movsb fildll fwait sbb and rex.W rex.RXB rex.R fs (bad) rex.RX add rorb adc add sbb jl jge popfq push stos pop jg loope jbe iret lretw add (bad) jns sbbl (bad) shlb (bad) fwait enterq and movsl rex.RXB lock mov fwait cs rex.X (bad) int3 hlt jmp push in sbb in fwait xchg jp shll int loop or mov mov pop lea (bad) pop rex.WRXB and xchg adc push (bad) adc or and mov movl cmpsb sub movabs (bad) fwait cmp pushq or imul subl or jl fwait (bad) sbb or mov rex.B fwait (bad) xor xchg adc lock jrcxz or movabs jmp sarb (bad) cmc pop stc sub add sarb (bad) (bad) jl rex.RX test (bad) callq iret mov adc cmpsl sti (bad) movslq add jne rex.R fistpl xlat int int3 rex.X icebp adc stc fwait jl roll pop fwait mov jnp xor sti cmc fwait insb loopne push movabs sbb fisttpl insl xchg hlt sbb test (bad) jg fistl adc cmp rex mov add cmpsb and icebp rex.WRX rex.RXB fwait push jle lea int3 or sti add push pop loop (bad) adc cli insb and xor hlt fwait pushfq sub rex.WRX popfq int (bad) mov or mov sbb mov pushq je (bad) fwait mov andl repz mov mov fwait xchg sub rex.WRB andb in test outsl mov sbb jge sbb rex.WX fwait adc movslq imul shl mov out pop jp pushq cmp mov jne xchg jns fmul int3 (bad) stc or repnz sahf sbb popfq es and ss push fsubl test and sub movabs (bad) sbb (bad) pop jbe mov sub mov xor fimull sub xor xchg rex.WX sbb out push decl hlt jrcxz pop or (bad) sbb outsb xor test movabs scas callq (bad) rex.RB (bad) movsl jmpq rex.RX push rex.WR mov idivb es clc out xchg or test shrl cmp add xorl (bad) mov lods adc sbb sbb xchg mov fsubrl mov xlat mov adc pushq mov pop xchg stos rex (bad) jb xchg rex.WXB xlat (bad) xor sub rex.R sub in xlat rex.W pushfq jo jge jae (bad) in scas mov (bad) hlt ficomp je mov (bad) push xor jge jbe stc je (bad) and add xor std mov xchg clc (bad) (bad) sub jo rex.XB in adc push adc cwtl int3 add mov and pushq xchg fwait (bad) movl mov (bad) mov sub fwait jne repz (bad) jmp nop fwait imul cld lret movsl cs mov add pop or fbld (bad) cwtl adc xchg fdiv xchg fcmovnb fldt adc sti out movabs addr32 (bad) mov (bad) shrl fwait sti bswap (bad) jne add fwait insb (bad) pushq sbbl and rex.WRX fstpt fldcw mov fldt (bad) sub or cmp (bad) pushq cltd add fisttpll add fildl nop mov mov fwait icebp and sub outsb shll (bad) rex.RX fcoms sbb (bad) stos (bad) mov (bad) rex.RX pop clc sub fwait push movabs sbb testl sub jl lock (bad) (bad) (bad) fwait add xor rex.WXB sbb sub push or (bad) (bad) lret mov negl (bad) stc (bad) scas (bad) pop fwait mov callq cs in xchg and lret (bad) (bad) fdivr sub movslq xchg jrcxz shl sub (bad) pushq pushq jmp cs fs adc icebp push jnp fwait jge (bad) iret lret and ds jp sti (bad) push jbe test xor sbb je jo adc sbb std mov pushq outsb (bad) mov imul (bad) xchg adc (bad) cmp xchg push fsubrs sti or (bad) addr32 add retq xor ja fwait mov rex.RXB jne insl cld mov sub sbb sbb sbb jrcxz (bad) (bad) fidiv test rcll jg lods xchg pop (bad) sbb or fcompl cmpsb rex.WRXB (bad) rorb rcrl mov jne cwtl gs (bad) nop test push add outsl fnstcw and (bad) cmpsb sbb or sti pop loopne xor (bad) (bad) sub (bad) rex.WR ss push mov clc loope jne sbb mov push sti lret hlt pushq (bad) mov pushfq cmpsl jmp mov jno mov jmpq (bad) int mov jmp (bad) (bad) rex.WB enterq jne xchg out lods or imul mov mov hlt jrcxz sub rex.WX rex.WRXB (bad) jg xchg (bad) xchg mov rex.B fwait cwtl mov jnp adc (bad) add xor cli cmc xor (bad) incl outsl cmp add sti (bad) sbb cmpsl movabs xchg clc sub rex (bad) xlat adc test movslq and or mov (bad) or cmp mov xchg cmc iret out or mov rex.W or jrcxz (bad) cmpsl (bad) rex.RX in and rcr adc lods (bad) iret (bad) outsl sub lret (bad) jle and mov (bad) sbb pushq (bad) mov data16 jrcxz movsb push je pushfq (bad) movabs fmull rex.RX stos sub pop (bad) (bad) xlat pop cwtl cwtl fistpl sub mov xchg mov xlat imul leaveq xchg jno in fwait hlt (bad) (bad) movslq mov or pop lret fwait jmp out lea repnz shrl pushfq ficoml retq rcrb jo mov sub repz fstl rex.WX fwait sarl mov fwait sub jp int repz movslq (bad) movsl fwait pop mov mov (bad) mov add roll (bad) ds out lods scas xor fwait push (bad) in outsl xchg and sbb push add in cmp fildl xor sbb mov (bad) push movabs rol (bad) sub add loope imul (bad) (bad) (bad) (bad) fstpt movabs and fwait in pop fldenv test cmp andb cwtl movabs rex.WX lret xchg cmp pushfq or ja mov rex.RX rex.XB (bad) cmp mov in and stos sub or mov and and clc rex.WRXB (bad) movsl jno lea adc cmp fildl or fldl xchg addr32 rex.RX xor cmp (bad) add pop pushq (bad) (bad) push jrcxz xchg xchg adc cmp (bad) cwtl test fwait pushq push push ja fisubl (bad) pop adc cmpsl fwait clc push sarb addb jae or adc add mov movabs add ror fwait loopne enterq (bad) jns cli out add mov shrl add cmp (bad) fwait in mov sub xchg (bad) xchg imul fnstcw or pushq sbb movsb fsub mov and jmp push (bad) xchg (bad) jns push mov loop jae (bad) add cmp adc adcb fwait (bad) sbb hlt mov sti adc lret jp and sbb and rorl rex.WXB sbb lea stos rex.WB scas movabs fstpt movabs loop add std fidivr (bad) (bad) (bad) add xchg (bad) mov or rex.RX (bad) fwait repz xchg or in out fnstsw lcall test scas jbe or xchg pushfq rex.RX (bad) fwait movsb rex.RB cwtl (bad) adc and xchg jg add push ja loope jrcxz enterq rex.WXB sbb mov mov es rex.WR movslq cltd or icebp push setnp add js adc movabs rex.R or movabs mov mov and xchg sbb mov outsb mov add or xchg add jrcxz (bad) push (bad) fwait imul sti xchg cli jl fisttpl movabs jae lods mov xchg xchg mov mov cmp lret fcmove jae sbb add (bad) xchg rex.B sbb jp cwtl sub (bad) jmpq jle mov rex.XB push fwait xor nopl fwait lahf pushq rex.WX imul repz stos leaveq rex.X ja mov push rex.WRXB out mov in ss in push add test (bad) loope je mov push (bad) or (bad) addb fcmovu clc decb (bad) and mov movabs adc jrcxz jge sar xchg rex.RXB in mov in in adc pop add sub (bad) jae push int3 (bad) cmpsl movabs rex.WX adc mulb loopne mov or (bad) callq (bad) (bad) imulb (bad) imul jbe pushfq insb or iret js fisttpl shlb mov and (bad) repz je sbb adc fwait cmp rex.WR ds jg sbb out fwait jl pushfq sub imul fst (bad) repz pop pop pushq jl pop xor addr32 mov rex.XB fwait rorb sub push loop mov and stc loop je sub jnp cli (bad) cmp enterq test retq sti test (bad) sbb xchg (bad) dec adc rex.RB mov loopne in es cmpxchg jrcxz sti add sbb insb insl (bad) fild leaveq sub retq pushq gs movb je sbb addr32 and lods fwait (bad) mov mov movslq mov cmp sbb movabs sti lods rex.WR fistp (bad) pop stos retq or and mov pop (bad) mov mov stos pushfq jnp out fwait (bad) (bad) mov loopne cmp repz push mov sub sub cmp fwait jae stos addl clc cmp movabs rex.WRXB pop cltd (bad) fwait test and mov rex mov pop sub movsl sub adc fwait xor (bad) pushq es jmpq mov cmp xor (bad) pop movabs sub fwait (bad) out or jle add (bad) pop out (bad) mov (bad) (bad) xor stos mov adc test jne retq xor jmp sbb faddp sbb ss hlt (bad) movabs fistpl (bad) jne sbb mov (bad) jmp sbb rex.X jl out rex.RB repz push lock jnp and mov int3 rex.B (bad) callq mov incb cltd bnd out movabs icebp cmp scas fs (bad) pop and out add sbb (bad) xchg rex.R fwait sbb add (bad) pop sbb add adc pop int3 fwait test xor stos fwait lgs xchg cltd fsubp push pop (bad) and movsl fbld fwait (bad) jb cmp (bad) (bad) hlt fwait push or jrcxz adc iret idivl out callq sub fwait xchg movslq movl (bad) lock sub fcompl hlt adc xchg cmp lods (bad) sbb add (bad) pop xor mov fwait (bad) or (bad) movabs or jns in movabs add sbb popq sub jno negl (bad) in pop sbb mov sub lret fstpt callq (bad) fwait lahf adc imul ja pop sbb movslq shl rex.WR shr mov (bad) cld sti cmc fwait xchg add and jl ja jl hlt mov pushfq data16 cmp jnp sti in ds xchg xorps sbb add jle test mov sbb cmc fwait (bad) (bad) (bad) jne xchg cltd sub push loop (bad) sbb jne jmp mov push sahf and (bad) xor outsb mov (bad) fwait rex.WR and (bad) fisubl in (bad) mov loope fwait mov lock sahf mov insl cmp sbb scas (bad) mov sbb popfq lods cmpsb je mov (bad) fisttpll add cmpl stos movabs sbb ja (bad) xchg sti and out mov push sbb pop pop ss xchg push rex.WB in jp mov fwait (bad) mov int3 fs fstpl clc sbb add fwait and jmp fnstcw add sbb sub and cltd rex.B sbb fs clc (bad) test addr32 push fstpl fistl jns push and xchg xor fwait sbb cmpsb mov incb mov mov test mull xchg mov lahf or sbb mov and cmp orl adc test fwait test sub out (bad) mov add add mov loop fsubrs sub callq test (bad) stos sub rcr sbb sahf rex or xor mov adcl scas loopne (bad) loop in cmp sub (bad) movabs fisttpl fwait xlat xor int3 fcomps sub fmull xchg (bad) ja xchg sti jne fldt (bad) fwait cmc iret add fwait jnp mov fwait xchg (bad) outsl test xlat lret rex.B (bad) (bad) fwait mov retq callq or fdivr cmp scas cltd adc or sti (bad) or cs xchg (bad) xchg callq int3 sbb push jmpq mov sub jns fisttpl push pushfq mov movabs mov mov addl xchg imul sbb rex.WRB adc rex.WRXB push fwait stos (bad) retq test jg sarl scas xor and lret cwtl popfq jns sbb (bad) retq (bad) push lret sub (bad) rex.WRXB fwait pushfq and (bad) rex.WX rep in mov (bad) ror retq sbb jge cmp jmpq leaveq out mov movsl repz lock fwait lods mov (bad) out outsl loopne (bad) or mov mov pop rex.WR fwait mov fsub mov lock fwait push jae pop fxch jrcxz fwait sbb stos shrb (bad) (bad) adc xlat fwait mov in (bad) sub ds cltd movslq cmp xor popfq xchg jle jmpq fistl lret jae jo mov sbb add push jmpq fwait mov jmp jne (bad) (bad) fwait xor and fwait iret leaveq add rex.WXB pop fistpl xorl push (bad) mov sub fwait imul rex.WR fwait enterq rex.X sbbl callq jne adc pop (bad) mov adc stos mov mov test mov clc ja (bad) rcl cmp sbb xchg fwait (bad) add in pop addl scas movslq sbb pushq push rex.WXB sbb js in fwait and (bad) mov jo adc xor xor jmp jmpq stos fwait negb add or cmp insb (bad) and movabs (bad) lret pop imul fwait xchg (bad) jrcxz sub mov out mov pop mov cltd mov add rex.RXB rex.R xchg fwait mov xor xchg pop rcrb (bad) cmpsl adc addb add adc (bad) pop lea jmp in pushq (bad) sbb divl sarl outsl in mov imul (bad) test andb (bad) jmp mov (bad) outsl push je cli jmpq sbbl rol pushq sbb lods stc callq rex.RB repz shrb pushq cmp and outsb (bad) or rex.WRB rex.RX or cmp scas xor xchg xlat sbb in (bad) sbb push jp cmp (bad) add lret test push out (bad) int cltd jp adc mov (bad) repnz xlat xor mov rex.XB in add sbb sbb movabs stos (bad) movq ficompl mov (bad) movslq retq or (bad) rex.W (bad) movsl clc sub xor test cmpb cmc in pop cmp jge add cmp xchg sub stos movabs in scas rex.WB rex.WRX sahf out (bad) int3 fmull cs pushq imul (bad) loop rex.WX loope clc mov stos cltd out rex cmp fwait mov fdivrs out adc out fwait rex.WX in rex.WRX add cli add hlt fwait rex.RB out sub mov adc xchg icebp cmp sbb fistp (bad) mov enterq rex.WRX jno jge popfq and (bad) fwait add mov add lods and rex.WB mov (bad) in pop movabs fwait mov or (bad) test mov sbb fiadd stos pop mov lods xchg (bad) incl cmp popfq pop jbe push iret xor (bad) fwait mov imul fisubrl mov pop jae fucomp fistl mov addr32 out repnz out adc sahf (bad) mov rex.XB sbb sbb add pushq xor sbb dec (bad) mov jmpq push shl adc pop xchg std sub fwait and gs test sbb test sti sub (bad) repz fcomps rcrb fwait in loop sti mov mov jle pushq clc std mov adc roll nop (bad) mov rex.RX rex.B and rex fwait test adc in add (bad) icebp cld js fs retq rex.R test (bad) gs lahf or addr32 hlt ficoml vshufps xchg add rex.RXB addl adc jne jg sbb lea xlat and sub (bad) jle sbb cwtl out scas pop xor fist lea (bad) outsb jg fcoms (bad) xchg sahf xlat loop in add lahf iret xor fwait cltd jae (bad) push negl (bad) jge cmp adc jl pop adc add xor sub or jno jnp pushfq repz push sbb adc cmp or jo (bad) mov (bad) jbe add js or fstpl rex.WXB repz sbb (bad) gs cs movabs mov cmp addr32 mov sbb jne iret cli jl fwait imul sbb sub rclb fucomi decb fcom pop pushfq push lods and xor fwait add sahf jo fwait cli push rcrb in lahf ja rex.R mov movsb sbb (bad) mov cmc jmp fwait sbb rex.RX lock add in xchg mov fidivr rorl scas fdivrs stos sbb hlt jge fdivrl xchg cmp add sbb (bad) push add std stos xor js (bad) xor pushfq cmpl sub fwait mov pushq rex.XB fwait (bad) test imul jg pushq adcl mov mov ficomp rex.X shl callq cmp jmpq cld xchg lock xchg fwait cltd xchg movabs imul lret jne sbb out mov movabs sbb fwait and jnp cmp gs adc repz mov rex.WRX fstpl addr32 push inc pushfq pop mov sar jne mov imul mov jmpq out (bad) sub lahf adc movabs push movabs js add (bad) fwait movabs (bad) xchg insl fwait rol idivb adc sbb out (bad) orl (bad) popfq movsl jns stos movslq fisubl in xor mov mov mov cmp push xor iret mov (bad) sbb pop cltd icebp fimull and and notl sti mov out movabs (bad) imul pop rex.WX sub (bad) add sbb rex.WRX cmpl test jge pushq or insb mov (bad) sar push (bad) push (bad) mov sbb retq xor repz movabs rex.WRB (bad) pop sub adc mov gs in cmp mov (bad) (bad) stos (bad) xchg pushq (bad) (bad) or xchg rcr (bad) lret xchg addr32 jg cmp (bad) sub and (bad) fldl2t test movabs cmc rex.X rex.WRXB ds cmc enterq push and pop (bad) sub add loopne fsubrl pop (bad) fcmovne out mov out xchg scas test fcompl rex.W push sahf mov outsb addps mov xchg jo cmc movabs push (bad) int rex.W mov loop cmp cmpsb adc mov xlat rorb iret add (bad) scas popfq pop (bad) icebp push jae (bad) pop rex rex.WXB rex.WRX sbb xor gs retq add pop mov cmpsl vprotb xchg scas rex.RXB imul mov test bswap add mov (bad) ds cwtl rex.WB cmp xor pop jl (bad) xchg add push (bad) int cld sbb (bad) (bad) je sub push (bad) mov fcoms adc std cmpsl jrcxz mov sarb cmp cmp pop jl xor xchg sbb stos or addr32 (bad) xchg pop (bad) lods movsl (bad) rex.RXB push outsb movsb sbb (bad) push imul fsubrs push out (bad) xlat (bad) retq mov pop (bad) jl push sahf shrb mov (bad) xor test cmp test (bad) imul loope cld sub xchg jb rex.RB rex.R sub and cmp roll xor rep add imul fldt mov push lea rex.WRXB cmpsl insb xchg sahf add (bad) sbb (bad) psraw movsb fisttpll movabs sahf rex.R psrad xchg fstps or sar out and test pop (bad) pop test rex.W test jp fs vcomisd and out (bad) (bad) bsr imul cmp push push pop jmp mov (bad) test jrcxz xlat mov xchg pop pushq push out lods mov (bad) rclb in outsb (bad) jl fisubr scas pushq loop repz ja int xor in ss adcl (bad) xchg callq add push cmc (bad) mov pushq fcmove adc test imul stos or rex.RXB lods js (bad) (bad) rcrl fstpl test and iret adc mov (bad) xchg popfq (bad) leaveq popfq (bad) cmc adc mov je jbe push mov mov test (bad) cwtl adc and xor mov fs pushfq rex.WRB (bad) push cmp jno stc jmpq test fwait xchg cli fildl (bad) push movsb mov sbb cmp sub jrcxz rex.X rex.R fwait cmc int and stos (bad) fwait or cmp sbb leaveq and jnp xchg fwait test (bad) lret mov insl in (bad) mov (bad) rex.WRXB rex.B fwait cmp rex.R rex.WRB adc adc mov in fwait rcl xchg std pop jb (bad) movabs xor add js (bad) xchg sub fwait push cmp jl and (bad) mov (bad) xor add pop repz jbe fwait push gs xor rex.W adc test (bad) (bad) lret fild clc (bad) cmp cmp add fwait retq in movabs add js fwait insb push ja popfq or pushfq push addl loope adc fwait (bad) jp push adc test sub loopne in fwait mov enterq (bad) loop xlat add add fwait pop mov fdivrl mov fistpl out sbb jnp lret repz (bad) xor mov pushfq (bad) cmc fwait sbb cmpsl repz xchg stc xor cmp push insl mov and pop sbb push (bad) incl jne (bad) mov (bad) fwait pop icebp pushq mov (bad) cmpsl mov fnstsw test lret shlb roll out xor push mov callq iret nop mov pop rex.RB jbe rex.R fwait rex.WRB sbb repz mov fdivs out and adc imul in (bad) mov cmpsl rex.WX faddl jmp jge mov rex.RX fcmovu nop jns lock out fcomp xchg fstl in sbbb adc imul add (bad) fwait rex.RXB (bad) cmp mov movsl rex.WR jge xor rex.XB jmpq or adc pop fwait jg nop push fcompl lods jae lahf cmp (bad) loop (bad) cmp cltd or pop fwait scas loopne mov and lret xchg mov mov add not sbb or lahf pushq outsb leaveq sbb xchg (bad) sub cmp sbb jns fcmovne xchg (bad) stos sbb adc movabs sub stos cmp mov sub xorl lods cmpsl add ficompl rex.XB repz cmp add or iret pushfq out (bad) movabs rex.WRX sahf movabs test imul hlt fwait (bad) lahf pop adc pushq push movabs fwait cmp rex.R cmp sbb in out jnp rex.RXB fwait adc retq sub lahf adc fwait xor jmp ficompl (bad) lock retq movl sub cmpsb (bad) jbe adc cs shrb int3 callq sbb lods (bad) mulb rex.WB popfq adc jl adc sbb (bad) ss jge mov loopne or (bad) jp pop fs sbb xor popfq mov mov sbb sahf lret or (bad) jmp rex.WXB xchg (bad) shlb (bad) pminub mov cmp (bad) adc adc pushq pop popfq or sub fucomi pop or nop rex.WXB (bad) test jrcxz (bad) (bad) xchg (bad) mov fwait jmp orb mov stos add mov jno add (bad) push xchg or (bad) (bad) iret mov (bad) in sahf lret cwtl psraw fwait add (bad) lods xor rex.RB cs mov stos clc mov fwait jb out rex.R adc fwait jmp adc lods imul js clc fwait rex.WR or mov (bad) sbb rex.RX iret jns xchg jmpq sbb in push xchg loopne rex.W (bad) xor cmp rex.WRX movabs outsl cmp cmc sub sub mov xchg cmp pushq (bad) sbb movsb mov xor pmuludq repnz mov (bad) movslq imul movabs mov cmp in sub jns (bad) fadds push jge jnp shrl rex.WB add jle sbb (bad) sub jae (bad) popfq xor mov movsb (bad) mov (bad) outsb gs stc jge (bad) pushq add adc fldcw mov stc rex.R xor cmp in jg pop fdiv mov sarl loopne pushq iret (bad) test push sbb adc sbb rol xchg xchg pop mov out lock addr32 orl adc sti or icebp adc (bad) movslq lret cli or adc repnz sbb push mov jge xchg pushq jne mov int3 (bad) xchg jae rex.W es mov cwtl jl sub (bad) data16 fldenv add out popfq int3 pop sahf callq jl mov xchg fisubl (bad) shlb fimull (bad) pop pushq mov pushfq imul (bad) loope sub mov sar (bad) rex.RB add fsts xchg or xor (bad) and cmp fmuls popfq mov sbb mov mov sti sbb mov sub movsl gs (bad) ds pop int3 xchg xchg out cli xorl rex.R xor leaveq cmp scas adc xlat movabs add cmpsl retq (bad) std rex.R ds cmp mov testl sbb or mov xchg mov mov in rex.WRB lods retq repz movabs xchg fstps and cmp loope jrcxz clc popfq fcmovnb cltd imul rex.WRX add push sbb jnp (bad) icebp rex.WR xchg (bad) out mov adc mov xchg in (bad) jl fistpl sub cli ds xchg mov je (bad) jo mov movslq pop xchg insl jbe stos callq cltd rex push inc mov lods pop loope mov xor add lret xchg movb xchg sbb popfq sbb pop in pop jnp cmc xchg jrcxz xchg orl mov lods (bad) scas mov rex.WRB rex.WRXB cmc and test scas add push jo fst sub pushfq outsl test pop cmp rcr (bad) rex.RX pop rex.RB (bad) mov push fnop rex.WRXB fbld rorl rex.WB fdivl pushq fcompl or adc fwait jmpq mov negl lea jmp movabs scas and push xor add or (bad) mov (bad) mov jns add mov popfq roll (bad) loopne xchg (bad) out fwait roll (bad) or enterq cmpsb adc (bad) mov mov fsubs movsl (bad) fwait xchg shr imul in fwait jne ja or and fwait sbbl (bad) sbb xor movsb or or mov (bad) (bad) (bad) rex.RB push sar jp je mov repz or jns ds stos mov sbb rex.RX (bad) (bad) cmp es in ja loop fwait pop cli fmuls fwait shrb mov andl (bad) iret rex.RB xor (bad) cs in (bad) (bad) cmc iret jnp cmp jb jns decb out fwait outsb (bad) sbb jo xor add enterq fwait mov popfq add jmp sbb rex.RX repnz fwait jge jnp mov mov callw add fisttpll insb or stos jmp clc sbb mov mov stos cld (bad) mov and xlat jg pop mov mov in (bad) scas retq rcrl rex.WRXB cmp sti or rex and xor jl jno movabs fwait mov negb cmpsl sbb mov retq adc (bad) jae jmpq xor add fnop mov (bad) outsb cmpsb cmp enterq sub xchg fwait add (bad) xchg sub xlat sbb outsb mov int mov (bad) (bad) flds repz cli sbb jl out lea sti retq pushfq mov add mov and (bad) and ds in andl movsl xchg out fwait rex.WRX mov fwait movabs lret (bad) pop imul sarl movabs (bad) push fwait xor (bad) (bad) (bad) push insb jmp (bad) fwait and or outsb fwait std adc stos (bad) (bad) mov sarb jle jne (bad) mov (bad) sbb out and or test rcrb jmpq jae (bad) rex.X rex.RX js,pn retq sub cltd mov retq callq xchg jg imul xchg add movabs fistpll fwait and (bad) rcl psubb mov add fwait or (bad) adc int jne jmpq xchg cmp insb xchg sbb mov lock fistp adc std roll (bad) out (bad) fildll rex.WXB mov fldt cmp xor stos movabs movabs push data16 xchg rex.XB pop (bad) mov (bad) and jmpq jl subl iret (bad) pushfq and movsl nop fwait (bad) sbb sbb mov add mov add sub rex.B adc sub add (bad) push (bad) (bad) (bad) sbb sub mov ficompl adc fistp fwait adc add jg pop data16 (bad) push cmp int popfq mov scas ss jb (bad) fild stc rcrb rex.XB fisub fwait (bad) and jbe xchg (bad) cltd fwait lods cmp sub rex.X fwait xchg in (bad) out sarl and in add mov cwtl and pushfq gs jae clc sub fisttp (bad) sbb int (bad) or (bad) lahf rcll ds out (bad) xchg in lret add rex.WX fwait retq cmp (bad) pop pushq push (bad) or or hlt imull data16 xchg jb clc data16 mov in rorl rclb movabs je test or push adc adc (bad) cmp (bad) pushq xor loopne rex.WR rex.WXB addr32 pop add fsubl push jge cwtl (bad) jae clc roll xor fist shrb ss fwait pop add adc (bad) rex.WXB insb rex jns in lods add hlt mul xorl sub (bad) xor test sbb es (bad) (bad) repnz (bad) ficomp push addb rex.B fwait sbb add stos mov xor fwait xchg xor xchg pop rex.WR pushfq (bad) pop xchg pushfq or jo repz cmp movabs movabs (bad) jle pop out mov add xor divl imul test stos (bad) sub jns repz insl xchg sub pop or jno rex.X sbb rorb xchg rex.WB fwait jne mov (bad) xchg fwait xchg lcall rex.WR jmp jmp pushq mov pop xor loopne cltd push test jl repz cmp mov xchg frstpm(287 rex.RX repz pop out pushq outsl mov sub out clc (bad) (bad) lods sti out push (bad) jg jmp in sbb nop xchg pop sahf adc out std (bad) fs pushq pop xor xchg mov (bad) sti xor cmp rex.WXB pushq (bad) fcomps clc (bad) xchg and loopne (bad) je add xchg sbb rex.WX ds in sti rex.WXB lahf jae rex.RB cmp sub (bad) data16 (bad) test fwait mov xchg adc test jne cmp (bad) xor cmpsl loopne mov fisub and or (bad) lret popfq sbb jge popfq mov callq rex.RX (bad) cmpsb fwait jmpq iret retq rex.WX mov icebp pushfq mov (bad) sub fisttpll rex.X mov (bad) and push rex.RX xchg sub or outsb and stos test pop push xor xchg sub jl (bad) int push and fwait movabs xor jne sub out fwait sub scas lods xchg adcl movabs out rex.W fwait rolb rex.WRX movslq loop (bad) mov iret rex.RXB shrl lea lock cmpsb hlt fwait je cmc std test add fwait lock in cmp fwait (bad) xor xchg movabs test adc sub mov stc push jb mov test loop fwait (bad) (bad) rex.W outsb add loop lods fwait repnz cltd jmpq xchg mov cmp fs fwait je jns in cwtl rex.WRB fwait push (bad) std lods rex.WRXB hlt sub divb mov fwait jb test in rex.W (bad) sbb mov notl push sub and sti rex.B rex.W pushfq jno retq int3 (bad) jg test out or (bad) loope,pn fwait or (bad) test pop (bad) sub xchg lods mov rex.R lea sub pushq push fsubp adc pop mov add (bad) fwait sbb mov fs or jnp rex.XB adc sbb jns or xor sbb popfq (bad) movabs push lock movabs je callq (bad) add jle xlat out and (bad) cmpsl and imul rex.WX mov fidivr (bad) adc frstor shll and (bad) pop sub rex.WR cwtl shlb sti int3 addb icebp callq add pop sbbb add stos (bad) add vsqrtss shr lods mov (bad) rex.WRX repnz or movabs (bad) and mov out rex.R orl (bad) out shr xchg (bad) rex.WR notb fdivl in xchg rex.XB sub (bad) push xlat jae mov retq or xor repz rex.X fsubrs lret pop sub or lcall mov movabs int3 rex.WRXB pop xlat movabs div or cmp ficompl cmp gs shll mov mov xchg cli in push popfq shlb jmpq mov (bad) mov loop popq out int (bad) nop shl fwait and fwait sub or callq rex.WXB in stc mov ss testw xchg fwait testl and fwait sub xor fwait (bad) (bad) test retq mov fist and cmp (bad) cld test adc cmpsl jg (bad) retq and rex.RX fwait jb ds pop shlb addr32 (bad) data16 jl (bad) (bad) (bad) pushfq sub stos pop mov int and lret rcr mov fdivl cltd fnstsw sar xlat pop cmp rex.W rex fldl mov retq xor rex lock loope and test sub or lock flds out test hlt negl mov jae jmp or in sarl add cs out movl jns movabs sbb icebp ds out fisubl jns pop mov punpckhwd outsl (bad) xor mov mov ficompl (bad) xchg sbb (bad) push fwait bnd mov sar xor jne cmp movsl adc out jo mov (bad) repnz cwtl sub rex.WX sbb jle fwait lock out mov adc cmp js leaveq mov mov mov sbb xor push movsl cmp mov (bad) cmp addl lods scas js xlat mov xor rex.WRXB add rex.RX int3 (bad) addr32 (bad) scas retq sbb out (bad) in enterq mov or jg stos stos repnz cmp rex.R imul roll mov loop scas (bad) fwait and icebp mov (bad) xchg and adc nop xorb rex.WRXB rex.WX fwait or (bad) xchg pushq sub jbe sbb (bad) mov mov xor adc xor (bad) push fwait add xchg lret jmp mov mov scas (bad) iret (bad) sbb cwtl xchg movslq sbb xor mov adc (bad) test sbb (bad) (bad) stos sbb callq ja jle mov (bad) cmp outsb fwait (bad) xchg adc leaveq jp sub data16 adcl in add mov mov in movabs fcoml sbbl xchg scas lods cs push pop psrlq adc sbb (bad) (bad) retq xchg cmpsb cmpl pop xchg xor fwait and xchg (bad) (bad) or out fbstp xor add mov movslq out cwtl (bad) enterq (bad) movslq rex.WB pushq movslq sub orb and xchg mov loopne outsl movabs cld out sar pop (bad) pushfq sbb or and pop rex.WXB rex.WRX out mov retq in loop cmp lret fwait pop (bad) je test clc rex.WR rol sub xchg outsl mov xor (bad) sub pop retq clc mul in fsubrs push (bad) callq (bad) fstpt in and pushq outsb (bad) (bad) in sub loope icebp pop flds mov sbb fisttpl andl rex.WRXB ds ds out pop and pushq (bad) leaveq (bad) mov jp mov jae enterq cmp or mov cli jae (bad) (bad) idiv sub imul nop mov add rex.WXB movabs jae je fwait xor and fmul out sbb in sar (bad) rex.WR fwait js scas movabs fisttpl mov pop jae lock xchg movabs (bad) in xor (bad) jae std jb int3 and sbb xor lret pushfq bsf cmp clc sti jmp gs int3 test loop jb xor rex.WR sbb and retq (bad) std in in xchg xchg xchg rex.WRXB sbb mov (bad) fwait (bad) (bad) stos std xor callq cwtl sbbl js clc rex (bad) icebp sbb adc mov (bad) mull rex.RB imul rex.B fwait xchg sub stos mov (bad) iret mov (bad) hlt xorl out mov (bad) mov cmp (bad) repz sub pop pushq xor (bad) add xchg (bad) out out jmp rex.RX fwait subb xorl sbb mov xlat lahf fwait lret adc sub sub fst mov xor pop rex.WX imul rcrb xchg mov in pop in and pop fbstp sub std mov enterq (bad) movabs mov rex.B loope mov fwait sub repnz popfq insl jle sbb sti icebp orb fwait loop divl xlat push scas stos sti (bad) ficom mov jge (bad) scas loope (bad) (bad) testl iret (bad) (bad) sbb (bad) jrcxz cmpsl popfq retq enterq cwtl fwait int in jnp cmpsb nop mov xchg (bad) and sahf (bad) movabs callq (bad) icebp out jne (bad) mov cmp jmp (bad) sbb jb stos adc js fcom sbbl fwait lock xor fwait stos jrcxz rcrb (bad) movabs (bad) sub and outsl mov cmp mov retq loope sbb addr32 rol clc lods fwait xor mov mov movsl mov cwtl movsb sub sti cs push pop mov rex.W rcrl es and jb fstps jmp xchg push sbb add mov (bad) mov or cli xor mov sub cltd (bad) rex.R adc scas adc mov xlat fiadd mov icebp movabs ljmp sbb in clc sti (bad) in cld push scas sarb (bad) ss (bad) mov std add mov jp xor jbe rcrb xor mov (bad) out and rex.WRXB adc mov mov fdivr adc mov pop in mov fmull cmpsb roll mov (bad) mov pop cmpsb sti add (bad) (bad) pop jle imul out pop fnstcw ss xchg jnp pushfq sbb mov or jno out or add test or mov xor mov or jno sbb movslq clc (bad) jge sbb jrcxz jrcxz fsubrl out in lret mov and cmp cmp xchg clc je jmpq or addr32 lcall popfq mov retq sub imul scas mov and jmpq xor jbe adc jne and sbb cmpsb xchg jg lods and mov (bad) jl xchg or push out fwait (bad) xchg (bad) movsb and (bad) xchg rex.WB fwait clc jae xchg out xchg (bad) fwait push xchg icebp retq roll cli adc xchg (bad) fdivr lea movabs sbb int loope xchg mov and fwait rex.WR rex.B int3 (bad) movabs mov jae (bad) rex.WB (bad) cmc pop xchg pop lret retq (bad) iret (bad) fwait (bad) xor cmp sbb (bad) scas movsl or (bad) xchg std xorl cmp addr32 cmp push add jmp leaveq push sbb out mov mov cmp sbb mov cmpsb fldt cmpsl scas jnp add sbb pop or insb add cli in mov fwait rex.WX rex.X mov or fwait (bad) cmp fisubrl repnz fwait pop mov jp andl cmp movabs mov fwait jnp pop lods fisubr movabs and sbb mov (bad) push and mov cld cs pop (bad) fwait hlt xlat (bad) mov sbb rex.XB add retq xor fwait xchg add xor pop mov mov (bad) push movabs (bad) adc rclb sbb fwait jp jmpq rex.WR fwait jne rex.WRB addr32 sbb rex.RX test rorb stos mov lods stc lock fwait pop lea fisubl rex.X rcrl (bad) rex.WX (bad) jno (bad) sub sbb mov (bad) cmp sbb xlat fwait add (bad) fidivl (bad) mov xor (bad) addr32 out fwait hlt cs sahf (bad) rex.WRB cmp sbb (bad) repz mov fsubr movabs xchg mov outsb xchg (bad) adc sti sbb fsub or insb (bad) sbb sub (bad) sbb sub fwait jo int cmp fwait jg xor fwait pop push movabs lahf jnp fistpl scas add cmp out adc fistl jmpq out fwait (bad) (bad) cld insl jp in fwait xchg cltd cs lods mov out in sbb callq mov fistpll fistl (bad) xchg rex.WRB pop and fwait mov test cmpsl fbstp lret jae fadds cltd pushq mov adc stos movabs js jge (bad) mov push xchg sbb add in jmp addr32 cmc mov adc (bad) pop (bad) rex.RXB jo lahf mov jmp int movabs xchg gs data16 sbb sub mov cltd jb rex.WRX and icebp xchg stc jl pop xor fcoms je and fwait sub add subl movabs or pushfq fwait (bad) sub callq in enterq rex sahf pop mov rex.RX fwait mov add xchg fwait and ficom mov pop out (bad) sti retq setnp mov cmp (bad) ficomp (bad) (bad) adc and sub cmp jbe add movabs sbb fldcw sti (bad) sub xorb out add cmp jrcxz mov add fwait (bad) jl adc adcb mov rex.WRB rex.WXB cmp gs xchg jns jne stos out mov adcb fbld fwait and xchg (bad) sbb decb callq rex.R fwait jmp fisubr xlat movsb loopne rex.W loope adc jae enterq jns sahf xchg or mov lret ja movabs mov loopne and movslq rex.RX cmp fcoms lock int sbbl adc mov cmp sti int3 (bad) clc fwait in (bad) icebp mov mov mov rex.WRB (bad) fnstenv callq andl outsb push jg xchg xor sbb sbb retq lret push rex.WRX sar popq (bad) jrcxz sbb (bad) cmp mov rex.WR outsl cmpl test ja out mov fwait push and mov cli rex.WXB iret pop out (bad) fwait roll mov cs cmpsb (bad) (bad) loope movabs pop (bad) rex.RB repnz adc mov fstpt xor leaveq mov (bad) jno hlt sbb sub mov jmp mov or and mov jns push leaveq out (bad) adc fwait xor xor mov (bad) xor fwait (bad) out ss fild xor callq xlat push (bad) shrb mov xor movsb mov fsubl fcomi enterq xchg and sub rex.XB jo cmpl lea cmp jle jl retq in sbb stc and cld test and cmpsb rcrb (bad) or fnstcw stc (bad) pop push or cmp jle mov xor (bad) pop or pop jo (bad) (bad) mov nop jmpq lods out iret xchg jrcxz or (bad) movabs divl ficompl bts sbb add sahf repz sarl cmpsb jbe jmpq movslq (bad) jae mov pushq sbb shrl (bad) xchg js jno adc (bad) pop icebp rex.RXB in xor mov cltd movabs rex.WRXB int mov fwait adc retq mov outsb xor sbb add mov fwait jne cmpsl and mov fstps (bad) (bad) fwait movabs fucomi nop in jmpq cs sahf (bad) xor in (bad) fwait loop retq or (bad) and xchg xor mulb mov scas and (bad) rex.R rex.W callq rcl jp mov addr32 fsts sti andl fildl int3 mov jmpq pop outsl (bad) (bad) outsb movsb fwait sub (bad) sub clc push (bad) (bad) stos lock rex.RX rex.WB fwait (bad) mov mov fwait mov (bad) xchg (bad) xchg adc movabs (bad) lahf movabs mov (bad) jae mov mov paddsb rex.R sub add adc pushfq xchg loop or (bad) rdtsc xchg pop pop movb and rex.R cmpsb cmp std xchg xchg jg (bad) adc (bad) callq mov fwait popfq jge (bad) xor rex.WRXB rex add fwait (bad) adc insl (bad) test jp cli fwait callq out cmp or setnp (bad) adc stos pop pop and int iret xchg xchg (bad) fwait jnp orl movabs jbe ss cs lock sbbb (bad) imul mov paddsb sbb xor adc rex.WRB sbb scas popfq jae js (bad) xor rex.RB fwait movq sub xchg fwait sub fiaddl in rcrl xor and negl jmpq (bad) movabs mov cmpsl js (bad) or pop add jp fwait mov out cltd push fisubr rex.X push xchg xor (bad) fcmovnb xchg stos (bad) rex.WRB rex.RX movsl lods js push add fwait pop outsl pop adc pop xchg (bad) add fbld mov stos (bad) (bad) mov sbb mov xor (bad) sub cmpsb or packsswb fsubl (bad) lahf out adc test add fwait in cmp sbb jl sbb push stc rex.WRX fwait ss rolb movabs rex.WXB callq (bad) mov rex.RXB repnz mov stos movabs (bad) pop (bad) sub hlt (bad) sbb popfq jg loopne movabs sahf or lret outsl movabs out popfq add movabs sbb sbb out and (bad) (bad) fst mov loope sbb xor and mov and repnz enterq jle loope adc sbb mov (bad) cmc jno cli cs out in fidivr (bad) test cmpsb lret test js cmpsl icebp adc pop and mov (bad) mov loopne add push jg push repnz push mov addr32 or fwait retq (bad) rex.WX fs cmp lret movsl fimul mov incb jrcxz lods mov (bad) mov add (bad) in movabs nop test in fwait cli gs (bad) testl loope imul xchg mov mov mov fdiv xchg bnd adc xchg mov (bad) lock sbb xor jno (bad) jmpq jle icebp sbb cmc and xor add jg adc jnp out rex.WR rex.XB and fisttpl pushq fwait pop push (bad) outsb lock mov retq jrcxz cmp retq ror and (bad) mov (bad) mov cmp mov hlt fwait shrb incl fwait cld and (bad) xchg mov sbbl rex.WRXB insl and sbb xchg push retq (bad) lods cld adc sub fistpl nop xchg sbb (bad) jbe sti pop push mov rex.WRB xor test xchg jae pop enterq fwait sbb (bad) rclb sbb imul fiaddl out insb divl in enterq (bad) sbb fwait cmp data16 xchg (bad) movabs sbb retq stos imul jns lods jmpq rcr add out es rclb mov or (bad) cld (bad) (bad) fwait jle enterq mov adc (bad) out sbbl jns xchg (bad) shll adc sbb xor push (bad) fisubrl and push cmp xchg fwait xchg cwtl sub jbe push add adc (bad) (bad) and xchg movabs cmc mov cmpsb es in sub ja std (bad) or (bad) (bad) jno,pn frstor xchg movsb rex.WB sbb pop xor sti retq mov fstpl mov (bad) ss xchg and (bad) mov xor movabs push rex.RXB mov fdivrs out adc or pushq jne int gs movsb rol insb fwait pop mov out jnp fwait jbe nop pushq movsb and unpckhps push mov (bad) cld movabs (bad) fadd in push jnp xchg and (bad) add fs jne xchg es mov mov lock ja hlt out fcmovnbe fwait shrl add movabs adc xchg out (bad) xchg xchg mov add test sbb sub sbb movabs insb imul (bad) or push loop (bad) mov lea mov mov cwtl mov (bad) cmp fwait (bad) pushq movslq movabs mov (bad) stos cmp (bad) (bad) rex.WR sbb rex.RB out (bad) test rex.X fwait sbb in loop data16 in repz scas jno in ffreep pop (bad) (bad) test sti adc xchg (bad) push nop in rex.RB fwait push (bad) xor xor stos (bad) icebp rex.XB mov (bad) fwait push cld leaveq cli sbb test xor loopne test mov xor (bad) rex.WRB rex.RXB imul fwait retq rex.RB (bad) outsl fwait es xchg cmp rex.WB (bad) and seta or or rex.WRX mov imul xor mov icebp mov add mov rex.RXB cmp (bad) (bad) sbb pop pop xchg fisttpl pop pushfq sbb testb cmp test out xchg nopl scas repnz jnp lret or (bad) movsl (bad) push iret rex.RX repnz (bad) loop (bad) pushq callq jnp (bad) movsl leaveq test xchg push jg (bad) movabs cltd (bad) frstor gs fimul add in sbb adc out movabs or je packsswb sub nop rex.WRB fldl fisub xorb jnp add cmp in repz test jb mov sub mov movabs sub adc mov cmp (bad) jb or lea (bad) repz pop pop in lahf int mov or xchg movabs mov fnstsw out imul fcoml (bad) mov add (bad) lea jne sub pop stos outsl nop add test or mov xor pcmpeqd or retq (bad) pop (bad) cmp mov in cli out (bad) leaveq (bad) data16 (bad) cmp fnstenv or cmpsl adc pushfq push out jo callq retq loop push hlt (bad) mov fildl jb fwait (bad) (bad) pop enterq stc pushfq or and mov adc mov add adc sub mov (bad) js data16 notl (bad) cli or xchg (bad) cmc (bad) xchg (bad) movsl pop (bad) and and fwait jns movabs hlt (bad) adc xchg or loope adcl fldcw or fwait mov and movabs mov movabs add and cmp mov mov rex fiadd lea push (bad) fisttpl jrcxz rex pushfq pop loope test pop sub rex.XB (bad) fwait xor stos rex.X mov out mov fwait mov push popfq xor xor sbb sti lods pop rex.WRXB add repz push (bad) adc pop fwait mov jmpq mov fcomi pop lahf ds pop loope adc in cld fistp addr32 jo lods fwait outsb es rex.WRX cmp adc shrl andl fistl add push jmp fstpt pop (bad) mov fwait stos jrcxz (bad) fwait xchg ss mov (bad) jne sbb cmp push mov rex.WR push ds jg fwait sbb rex.XB loopne fwait push retq js jns sub sbb mov test (bad) or rex.WXB sbbl mov rex.RB fwait rex.RXB (bad) movsl lea cmpsb repz mov add rex.WRB add mull or pushq mov stos pop andb (bad) fwait jmp fnop sbb cld sub int3 fwait sti movsb test (bad) (bad) orb hlt fwait xchg pop (bad) mov insl int3 jmp sub (bad) in mov or lret and fadds scas sbb xor in lock movabs rex.WR fwait xchg sti xor xchg (bad) jge (bad) rex.WXB (bad) pop mov addr32 rex.W add in (bad) push mov clc and lods movsl sbb cmpsb bnd lret rclb pop sbb sub js adc shl sub fidivl and (bad) fwait mov add fwait movb je ds rcrl jno idivb rex.R fstpt jne stc rex.WRB outsl and in fisub fwait jbe enterq adc repz repnz sbb rex.RXB nop (bad) fimul jo and movl rex.WX cmp fcmovnb iret pop rex.X or mov pop insl pop data16 xlat cmpsl cltd rex.WXB mov sub cwtl (bad) mul fcmovb xchg push callq mov movabs push mov rex.RX loop (bad) (bad) adc sbb nop js sti (bad) sbb fwait icebp ss or movabs fistpl sub mov fwait push jp add fwait outsl rex.W (bad) add rex.WR fldt rex.RB pushq fwait ja (bad) lret sub testb and xor cs jle adc lods clc sbb sub jrcxz lods sbb rol adcb fstpt (bad) test enterq sub fbstp repz (bad) sbb xchg sub cld jb outsb xor add leaveq in loope and pop int add (bad) rex.WRB sahf out mov loope outsb (bad) (bad) (bad) mov scas sbb fist cmp pushq cli sub (bad) (bad) mov movabs pop fcmovnu mov xor add mov rcr mov (bad) rex.RXB lods sbb retq pop rclb push sub scas fisttpl (bad) add (bad) adc mov sub in (bad) data16 movslq outsb gs (bad) mov jrcxz enterq xchg rex.X mov pop mov (bad) pushq (bad) mov (bad) stc mov fwait rex cmp iret (bad) add push jl fcomi pop mov (bad) fnstsw (bad) js mov push insl mov sub (bad) (bad) cs add int fwait or ss test js setne add add in mov (bad) stc mov jp bnd fwait or fisub sub mov pop xchg rorb andl cmp cmp rex.RB cmp js (bad) xor idiv sbb sti scas mov lret ds xchg mov fbstp rex.B movabs xorb (bad) add sbb movabs gs (bad) push and (bad) (bad) pop fwait test lods sbb popfq (bad) insl fsubrl add xchg cmp fwait (bad) test (bad) mov (bad) add outsb out pop sbb js push repnz adc adc add nop rex.WXB fwait lret jne adc cmp ja mov mov add pop fwait sarb jmp fwait pop sbb xchg fwait mov cld dec (bad) rex.WRXB add popq popfq push fwait outsb fdivrl rex.RXB pop std mov (bad) jbe mov mov (bad) (bad) jrcxz mulb sahf (bad) fs ja (bad) sbb push or mov movabs test out adc movslq fbstp (bad) js lea adc fwait jo push and test xor jg repz or (bad) fstpt cmp and in mov rex.RB sbb in (bad) test xchg loopne cli mov rex.WB fwait xchg push rex.B jg addr32 rorl (bad) lret leaveq fwait or xor es adc jb idivb stos jrcxz pushq xchg push scas xchg cmp movabs push retq (bad) sbb movsl movslq or mov sbb lcall stos sub (bad) rcrl fst rex.W callq movabs test fwait mov insl mov jne js add in jmp repnz stc jae adc (bad) fstpt xor cmc fwait retq sbb add vphadddq movabs (bad) (bad) and out fnstsw movabs add movslq cmp jle mov (bad) sub (bad) rex.WXB rex.RB (bad) fnstsw (bad) stc (bad) icebp fwait mov retq adc sub mov fwait mov out jmpq xor or xor ds sbb movsl ja out ror sbb cmp rorb retq clc cmp xor sbb mov imul mov xchg mov rex.W js fwait rex.WX (bad) cwtl or negl out (bad) fs (bad) jmpq fcmovnbe insb (bad) cld adc movslq fsubrs sbb jp in fcmovne pop sbbl mov (bad) xor fwait rex.WR pop jae (bad) fwait adc (bad) pop lret and scas fwait jle rorl xor adc xchg (bad) sbb jrcxz imul loope cltd sub or (bad) jbe addps pop out xor mov (bad) pop rex fwait jb (bad) (bad) cmpsb jge sub adc lahf mov fwait subl mov push and lahf (bad) fwait mov (bad) pop pop mov orl xor cwtl rex.WXB fwait push sarb fwait sarb mov mov iret loop and loope lods (bad) push and mov push sbb adc addl (bad) lods mov fcomps xchg mov mov sub mov fwait adc xchg cmp ds addr32 mov popfq sbb cmpsb xchg rex.WX rcl pushfq sbb push xchg imul mov (bad) (bad) add jle or or shr jbe mov in sub pop cmp or mov rex.WR movabs or push mov pop and movabs gs mov fwait mov cmc fcos mov cmp push and (bad) sbb mov fistp mov imul pop (bad) add pop (bad) cmp jmpq sbb loopne xchg insb mov mov mov rex.WRB fwait jp repnz sub (bad) jo rolb loop fwait and jbe xchg cli outsb ja mov cmovae (bad) test sub sti rex negb fwait xchg test (bad) (bad) iret lea lret rex.WRB out imul rex.X or jle rex.B imull add imul cmp std hlt rolb iret imul (bad) lahf repz mov ds adc xchg fwait cli (bad) cmpsb fisttpll cmp (bad) inc pop (bad) and fidiv (bad) lea sub rex.RX jg fwait retq jl (bad) (bad) mov fcomi retq xor push pop test js adc rex.WXB cmp mov (bad) adc or pushq jrcxz sbb (bad) (bad) or jge callq mov mov and add mov scas in jne or jl pop adc es adc mov movsl int jle (bad) movabs mov fwait or fistp mov xchg or pop (bad) cli adc mov fidivl fsubl callq or (bad) mov sbb outsl mov fistpl (bad) mov jp rex.XB pop movabs rex.X and xchg lahf popfq or (bad) mov popfq sbb fdivs out jo xchg fwait mov mov xchg mov xor stc cs js pushq movabs int3 rorl (bad) hlt sbb adc insl mov fisttp add mov mov add sub add xchg retq out add mov out add mov (bad) xlat ffree out (bad) test movabs stos (bad) lods loopne (bad) jo and (bad) jo movslq in add (bad) (bad) mov shlb rex.W sbb ss mov push xchg rex.B sbb jae decb fcmovb mov fmulp pop movabs shll mov adc (bad) rex.WR (bad) add (bad) push movslq in in rcll ss insb (bad) sub shrl movslq sub fnsave sbb in cltd in sbb pop (bad) or out (bad) in imul jnp out mov cmp cmp sbb jns xchg xor add adc enterq popfq jl shrl jle mov callq mov sbb retq rex.XB (bad) movabs (bad) sub sbb movabs sub in jle (bad) (bad) mov leaveq jnp push scas pushfq pushq cmp std xchg sbb js stc sbb rex.XB pop cmc lea pushq (bad) je ss push rex.WRXB jnp adcb mov push stos rex.WRX mov cmc popfq insl mov xor mov (bad) (bad) fdivrl test lret jmp mov cli push lods xchg pop fldt out xchg addr32 jle sub sbb sbb jmp int3 mov (bad) fwait scas pop sub mov sbb rex.RB xchg sub mov jge stos (bad) fwait adc test sbb or (bad) sub lahf mov in scas mov (bad) enterq fwait popfq leaveq or pop outsb cmpsl sbb (bad) adc int3 pop adc adc or and (bad) iret (bad) cwtl xor callq jmpq xor iret data16 jnp xchg fwait mov mov cmp (bad) cmpsl cs cld lret fwait (bad) out xchg addr32 fwait jp (bad) (bad) xor (bad) scas imul mov add retq xchg testb callq jp es xchg nop iret mov movsl (bad) sub movsl test cmpsb (bad) add and xchg xor movsl fisttpl sub mov movsb (bad) push clc rex.R negl mov mov jnp pop (bad) mov imul adc adc js shll rex.WRXB cmp jno leaveq rolb (bad) mov loope (bad) sub jnp hlt mov xor xchg stc int3 scas cmp (bad) pushq rex.W out sbb lods xchg pop (bad) push mov xchg in xor mov adc data16 (bad) adc in std fs push jrcxz sahf add mov mov (bad) (bad) jp sbb test rex.X stos adc imul and add mov jrcxz (bad) xchg sbb data16 cmp add sahf (bad) js sbb mov subl rex.WX (bad) sbb stos add sub (bad) fwait adc cmp (bad) rex.WR sbb movsl repz or jae test fwait mov rorb or out callq mov fwait rex.WRB pop jne scas rcrb (bad) cs push outsb pop rex.RX fwait repnz cmp (bad) fstpl cli rorb jmp jmpq insb mov rex loop test push or push lret mov fwait cmpsb xorl (bad) je sbb out jmp pop rex.WRXB mov mov pushq stos xchg mov mov mov incb rclb xchg test sti fisttpl sahf fwait xchg movabs pushq rex.WRXB pushq pop rex.RX jp rex.X sub test loope add (bad) push je pop mov jb mov or pop (bad) scas add xchg mov rex out mov cs pop xor enterq sbb add (bad) rex.WRB fldenv cltd sbb loopne int3 addl sbb pop leaveq sahf fisttpll movabs cs test adc push pop out cmp scas jne loope push pushq push pop std mov (bad) iret mov jnp jge (bad) xor movabs (bad) (bad) xor xor js (bad) (bad) mov nop mov fs xor xchg fstps sahf xlat add sti mov movabs fiadd rex.WRB or jl pushq loopne adc in or pop (bad) (bad) cltd cli sbb enterq stc sahf push jmpq sbb sub (bad) fwait add rcll cmp fwait (bad) jae imul jl or mov sahf or jb retq (bad) loop sbb js mov loop stos lods rcrl or cmpsb mov outsb stos pop fadds (bad) test (bad) rcr push cmpsb adc loope pop mov (bad) and cmc rex.X adc fwait int cmp xor test in (bad) cmpsb nop (bad) (bad) addr32 test adc mov xlat fmul fbld jmpq movabs jmp xor (bad) sbb mov (bad) cmc popfq add mov cmp outsb (bad) cmpl (bad) pop pop jg movabs js in fisttpl movsl (bad) xchg mov movabs retq jae pop and xchg xchg idivl (bad) pop push mov es in mov shll pop adc loope sbb xchg loop push cmpsl push sbb scas mov outsb std cmp sbb pop pop push xchg repz mov rex.RB in icebp in (bad) (bad) or xor fwait rex adc mov rex.WX rex.RX fwait loopne sub int3 leaveq mov subl sbb lods (bad) out ds sub movabs fwait sti rex.RXB jrcxz add rex.R (bad) pop (bad) xchg shrb fwait cmp cwtl sub (bad) and fwait (bad) mov cmpsl fwait loopne outsb sbb xchg iret xchg jrcxz rex.WXB icebp sub movslq add fwait scas sbb data16 leaveq shlb (bad) (bad) retq xor xchg jmpq add sub scas lret outsb test (bad) fldcw nop lahf mov (bad) loope (bad) sbbl xlat and add jae hlt push sbb (bad) mov cli scas rex.XB shlb jns movabs cmp out incb rcrl ficompl or test mov add imul cwtl scas rex.RXB js lret (bad) jmp jrcxz lods fadds mov jno loopne sbb rex.RXB iret jg and xchg xchg xor (bad) iret xor cmpsb imul imul sbb jae jbe pop push and and mov sbb out sub psubb xchg lea adc xchg adc fwait rex.WB lock out iret pop fwait in rex.WRB cmp jnp fsubs (bad) sbb es xchg (bad) std stos and fwait rex.WR scas mov mov pop (bad) int3 sbb or rcr xchg pop movsl cmp (bad) cs clc mov imul cmp pushfq in out mov cwtl xor (bad) js adc std mov xchg mov mov (bad) stos push adc (bad) jge fwait xchg pop lahf add jg mov loope adcl fldt retq sbb push fwait jne stos stos jmpq movabs xchg insb (bad) rex.WRB popfq movabs (bad) fwait add lods (bad) (bad) xchg (bad) xchg rex.R rex.WXB jmpq (bad) fwait rcll rcrb (bad) movsl (bad) mov or pop rex.RX jmpq pop mov cmp rex.X xchg (bad) lahf xchg andl retq push adc mov (bad) xor fimul (bad) cli pushq movabs hlt stos (bad) sub cltd add mov or sbb mov add sub mov cmpl pop adc xor (bad) lods rex mov es xchg rcrb fwait (bad) jl xchg mov div adc pop mov and mov outsl push cmp jle rex scas scas mov repnz add (bad) out xchg data16 or rex.XB (bad) out cltd fcomi movabs int and push (bad) xor test fwait and in adc (bad) add rex.X rex.WR lret test lock lahf pushq xor rex.W (bad) cli lret or loope fwait (bad) fucomip rex.W jnp rcrl or adc add jge or jbe sbb mov (bad) retq sar rex.WXB insb sahf sub rex.WX rex.B fwait ss movabs jb (bad) test (bad) jmpq fnstsw xor push subl mov fistp stos xchg repnz enterq (bad) cmp jae nop xor out fwait (bad) int3 fnstsw jrcxz sbb outsl icebp mov xor rcrb cltd stos shll adc jl rex.W or push (bad) fstenv adcl rclb cmpsl (bad) jl out stos pushq sahf mov rex.RX sub fwait insl xor mul fwait add enterq (bad) xchg fwait movabs vsubps (bad) in and adc cmpsl mov pushfq movabs je (bad) (bad) fstpt jb iret mov mov iret (bad) xchg and outsl rex.XB pushq test fwait stos out cs xchg rclb add fbstp sti fwait neg je sahf loopne mov adc push movabs icebp mov fwait mov insb rex.RB es fwait jp and adc rex.X xor cmp xchg movsb or callq std rcl sbb (bad) mov sbb rex.WRXB repz ds cmp icebp sbb adc paddw pushfq loop mov (bad) imul sti add jmpq js gs mov out movabs repz jrcxz push jns stos cmp and (bad) movabs cmpsl (bad) mov jmpq in jbe (bad) (bad) repnz cmp imul pop xchg or fwait addr32 callq (bad) add int3 fldt xchg and (bad) out or lret jno push fwait mov enterq fldcw lahf cmp pop sub jae xchg (bad) xchg cmpsl (bad) nop icebp cltd (bad) mov scas std add sar (bad) add inc rcl (bad) subb (bad) fist xchg push adc sub outsl or cmp stos stos fadds stos pop js pushq or pop ja jmpq scas xor setle sbb mov sbb pushq mov push loope mov jge (bad) adc sbb rorb popfq rex.WR addr32 sbb fcmove and sahf (bad) jrcxz decb pop (bad) stos xchg adcl pushq push repnz in (bad) xchg callq jrcxz fisubl jmp fildl cmp pop movabs stos leaveq (bad) sbb (bad) sbb test sbbb fdivp addb or int ds rcr xchg outsb in pushq adc rex.XB stos mov and (bad) add iret rex.WRXB xor je fwait add xchg stc jl mov test (bad) xor vphaddbw (bad) sub rex.WRX imul (bad) adc popq xchg fwait sub scas pop (bad) rolb imul insb cmp mov fwait or out orb (bad) ficom (bad) enterq fwait cmp sarb repnz fwait out mov (bad) insb pop sbb (bad) xor retq add loopne je push mov (bad) sbb gs out icebp (bad) pushfq cmc shrb sub ja pushq int3 pop push (bad) cltd sti icebp movabs add fwait rex.WX mov pop jge sbbl movabs movsb add push or xchg in add add movabs (bad) (bad) cmp int3 sbb sub rex.WRX rex.WXB data16 fwait sub or ja mov xchg in adc shr rex.RB out sbbl (bad) (bad) repz sub (bad) in jbe outsb xor iret or sbb jmp adc cmc out negl fwait or imul test adc int rex.WR fisttpl negl jo xchg and movsb movabs test loopne int3 sti xchg mov mov jnp push (bad) add mov jg adc fwait rex.WR xchg enterq repz mov lea out adc (bad) ficomp add sbb mov loope rex.WRX xor not movslq and fwait sub adc pushq rex.RX (bad) out sbb rex.WXB rex.R and mov xor movabs cli sbb add sti fcomip rex.W mov adc mov fwait mov xchg test fmull movabs jb rcl fwait jle (bad) mov mov scas (bad) rex.WX xchg mov fwait leaveq je jae (bad) mov movsb pushfq xor stc out (bad) jo xlat (bad) loopne xchg xchg jrcxz mov (bad) movsl pop mov jbe fsts or movabs xlat mov fmull sbb cmp fwait mov jne add sti add (bad) imul jns fistp std rex.XB je xor movabs mov xchg (bad) out xor rex.XB xor mov mov or mov (bad) mov movabs lret cmp (bad) or sbb sbb pop pop movabs lods rex.XB ja movsl fwait sub rex.B lods test adc pop add callq xchg sbb cwtd popfq (bad) sub (bad) sbb data16 cld (bad) cli imul (bad) rex.WR (bad) loope repnz in rex.R stos movsb or or rex (bad) mov cltd (bad) sbb rorl cmp outsb retq rex.X xlat rex.RB fwait mov fcomps push xor cmp pop pop mov test shrb in fmuls (bad) cmp mov add mov xor loop add mov lret (bad) adc push mov xor mov pushfq in lods and rcrl mov fs rex.WXB xor jnp movslq repz sbb adc push leaveq mov mov gs loopne fwait cmp decl (bad) lods fdiv fwait (bad) imul insb fwait pop xchg repz cltd leaveq outsl movabs cwtl add fwait stos jl mov lods repz fwait retq in xchg fwait xchg mov cld in leaveq (bad) jns fwait lods ud1 movabs sbb in ss rex.XB (bad) movabs lret movabs pop sbb sub mov (bad) or fwait (bad) rex.WRXB or (bad) (bad) push movabs pop stos iret or fcomps sbb test fstpl (bad) rex.R rex.RXB rex.W out mov rex.WR jns add in xchg jno sahf fwait and fldcw fwait js xchg adc mov cmpsl cli (bad) (bad) fwait adc in lea pushq sti xlat cli (bad) lret fwait clc jmpq test jle adc sbb insb pushfq (bad) fwait jmp xchg lahf cmp pmuludq fisubrl cmc jbe and xor rex fs fwait mov jrcxz (bad) (bad) add (bad) push mov xchg mov xchg out in (bad) xor rex.WX add (bad) adc sarb repz loopne rex.WRX cmp clc (bad) (bad) add adc out rex.RXB movabs xchg (bad) jle push test fwait (bad) xchg cmp mov pop lock jmp fild imul rex.X rex.W int3 (bad) fwait loopne pop fmull mov shlb (bad) cli jmp insl (bad) push fwait lret and cmp (bad) pop or cmp (bad) lret sub xor (bad) mov pop mov sti in lea ja (bad) sbb and pop add mov pop movabs jrcxz fwait js int rol (bad) fwait cmp cld xchg mov jl pop leaveq cmp imul mov sti fisubrl fwait mov add (bad) (bad) cmp and loop (bad) fistp add fwait lret je clc pushfq loop mov or pushq rex.X popfq (bad) jae sti cmp (bad) fwait leaveq cmp mov (bad) std shrl adc hlt rex.WR rex.RB sarb add (bad) fwait rex.WB xchg subl rex.XB pushq ss (bad) rex.RX fwait xchg mov rex.WXB fwait sub cmp fwait and (bad) jmpq cmpsb mov cmp cmp cmp rex.B je leaveq jrcxz sbb popfq insb sbb int3 js fisttpl (bad) out repnz sbb (bad) movabs sub add sbb xchg cmp xchg fist fisttpl sbb fwait mov jl sbb scas xchg xchg xor add pushq jmp cmp ds (bad) (bad) rex.RB jge (bad) (bad) and fcoml fwait jnp rex.XB nop cltd and and fwait or sub jmpq pop cmp out jmp fwait cmp (bad) add loop sbb rex.WX fs out (bad) shlb test mov adc (bad) or cmp insb (bad) mov (bad) std xchg test and std sub fstpt pushq fwait push and repz insl sbb adc sub int es and sub (bad) iret sahf fildll leaveq or cltd lret in (bad) (bad) imul idiv rorb xor fwait mov jmp loope fwait lahf (bad) cli (bad) mov xor lret pop adc mov rex.WB rex.X rcrl repz xchg sub (bad) sub movabs fnstcw fwait or ja in adc push out mov movsb pop rex.WX stos out add mov push fwait adc sbb jle rex.WRX add insl pop jg lea stos sub adc cmpl test fwait adc and test cli jae mov (bad) clc fwait xchg mov fwait retq clts (bad) adc fwait rex.XB (bad) fwait cmpsl mov out mov push (bad) (bad) mov (bad) xchg (bad) cmpsl fwait out rex.X jo out pop mov fwait rex.WRB add push pop (bad) mov in cli fwait mov loope callq xlat in fwait or cmc mov mov pop (bad) adc jne sar icebp sbb jns ss leaveq push lea in jb fwait xchg clc cs andl or fwait xchg pop (bad) insl jge mov int3 fwait popfq movsb sahf xchg xor xchg pop popq (bad) (bad) outsb mov cmp (bad) cmp stos mov and add mov sub sti lods sbb test (bad) jb cld mov adc test pushfq (bad) int cmp cmp outsl gs pop mov fwait imul mov jnp mov mov add fwait add test retq and out fwait cmc fdivl push xchg cmp sub gs fistp in rex.XB fwait lret cld sbb out retq rex.W sti cli leaveq orl je lcall mov and es imul sbb pushq addr32 fadds mull jne (bad) (bad) out test insb outsb js fildl (bad) repz (bad) mov in adcl fwait or xor and (bad) cld mov (bad) movsb pop add cmp (bad) nop xor jae rex.WB in fs jb test shrl fildll mov in sbb sbb cltd cmp rex.WRXB fwait pop sahf rolb fnstsw lcall jmpq mov jrcxz rex.XB mov mov in loop mov pop rex.WB fwait or jmpq std fwait rex.WX scas lock retq mov (bad) out jns iret fstpt not sahf test gs fwait addr32 movabs jl fisttp mov lods icebp fwait (bad) xor xchg mov out repz sub stos lods mov popfq insl xor rex.X leaveq movabs jmp and and mov sbb fwait test (bad) adc (bad) cmp jrcxz icebp movsl (bad) (bad) scas fdivrl mov rex.WX mov and jl repz popfq xchg int movsl fs jrcxz jg movslq mov stos and movabs iret (bad) xchg rex.XB xchg mov mul imul (bad) pop jno rex.R rex.WXB lock (bad) addr32 loopne mov sbb (bad) sbb jg xchg mov or jmpq jae shlb pop pxor xor sub jmp push push or rex jb ds xlat xchg rex.X xor fldt adc add movabs gs add xor xor (bad) or iret fwait es push imul (bad) (bad) rex.WXB rclb fwait push pop (bad) jl lea fwait rex.B or rex.X mov (bad) icebp mov addr32 pop out insb sbb in (bad) cmp and (bad) ja test ja pop jg movabs and pop rcrb sbb stc sub jmpq mov rex.RX lret movabs repz xchg rex.W or mov cwtl rex.RX jnp jrcxz sub jge adc push sbb loope rex.WR out test sbb sbb and jrcxz mov jl (bad) adc fs test fimull xchg jo cwtd mov push cwtl cmpsl fiadd or flds xor sub (bad) in and stc fldenv cmp js and scas sub stos xchg std mov (bad) sarb frstor retq sbb leaveq fist lods rex.RX fisttpll mov iret xlat adc icebp ja jrcxz (bad) (bad) or test addl cmp clc xlat stos retq divl (bad) in movabs mov rex.XB rex.WXB loope push mov (bad) (bad) movb mov retq lret rclb sbb cmp mov mov jno and stos jb rcrl (bad) fsts cmp adc xchg jrcxz mov test push xchg rex.WRX adc popfq jb xor sarb gs out enterq sbb pushfq je int mov movabs scas shll idivl (bad) (bad) imul jg rcll fdivp push jmp xchg lods mov jl pushfq (bad) pop pushq mov cmp popfq sub xor jno orl cmp adc and xor jge add stc retq rex.XB sub lock ss sbb cmp mov xor fwait jl int outsb loope cmpb sbb mov fldl jnp cmp (bad) cwtl retq pop mov jrcxz jl mov loop (bad) sbb add mov (bad) std (bad) mov sbb mov (bad) xchg sbb pop xchg (bad) sub jne loope in xor rex.WB imul (bad) callq mov movabs push xor (bad) and jne rex.XB (bad) movabs cmp xchg (bad) cmp popfq jmpq rex.WX push loop pop fistpll (bad) add cmpl scas cmp (bad) push or mov cmc rex.WXB rex.R jge scas out jnp ss cli adc fimull sbb mov in pushq add js pop rex.B fwait xchg (bad) mov push movabs out out lea rex.WR mov mov mov (bad) rex.WB mov jg int3 jbe movsb popfq mov cld out int3 sti (bad) loope enterq ds sub scas xor test jmp rex.WRB jl adc leaveq xchg pop cltd lahf (bad) mov add and es and xsaveopt outsb pushfq (bad) xchg sti out fdivrl pop xchg and rex.XB fistpl imul sbb int cld sbb (bad) mov jmp sbb pushq out and mov mov push int3 sbb add add and cmp cltd fs enterq rex.RB fdivl jg pop and mov push subl xchg lret jge (bad) std fcomp (bad) mov mov stc test pop shlb (bad) jns test movslq fistp (bad) push (bad) cmp cwtl (bad) cmpsl or add cli sbb rex.R movabs (bad) fs mov mov cld mov test cmpsb pop add enterq popq (bad) mov (bad) std pop (bad) sarl and adc xchg or and mull out cwtl fwait mov rorb ss cmpsb lods fwait push test cwtl imul lretw insb imul fwait or mov rex.WB out rex.X (bad) rex out js (bad) cmc lods outsb add adc fwait stos mov cli (bad) scas xchg scas add cmp pop pop outsb or jno and mov movabs (bad) pop fwait push stc pop out mov mov xchg (bad) add jmp imul xor sti rex.R (bad) rex.RXB mov sub xlat movabs repz fisttpl sbb (bad) callq jle (bad) (bad) fdivr rex.W jo xchg and or xchg jno and clc in pushfq (bad) mov int3 (bad) sbb sti icebp movsb jo leaveq rex fwait out movslq cltd mov (bad) cltd sti mov popfq sub cmp rex.WR rex.R test fistl cmpsl hlt pop loopne fwait (bad) mov gs xchg (bad) jbe rex.RX shr fwait mov add data16 imul scas push shlb cmp callq pop or (bad) frstor int3 rex.X adc stos iret jns mov mov js (bad) rex.RB pop cmp rex.WRXB nop repz xor rex.WRX or add addr32 fwait or (bad) movsb xchg adc jnp rex.WRB clc (bad) rex.WX and xor std fwait (bad) rex.WRX add rex.WB fwait repnz (bad) nop fwait (bad) rcrb pop clc movabs scas popfq std fwait mov lahf add (bad) rex.WRB fwait mov xlat insl fwait or stc or lea mov in rcl popfq rcll mov push jg mov fstp lret cmp rex.B fwait scas xchg int3 xorb fldt icebp (bad) fwait mov rex.RB out out jnp rex.WB mov add mov or push loope mov orb (bad) in gs or xchg adc add rex.WRX (bad) jb (bad) mov movabs (bad) jl (bad) sbb shr sbb (bad) sbb fstl cwtl sub xchg mov out mov fwait nop and (bad) sub lret adc (bad) fwait je,pn and sub stc rex.WB jrcxz sti (bad) retq (bad) fwait xor fisub clc callq and (bad) (bad) jne and insb (bad) icebp rex.RXB rex repz in mov sbb movslq jl (bad) pop jns jo or addl xor sbb test ror movslq (bad) cmp movabs or in movsl or mov movsb rex.XB icebp repz data16 movabs ficomp xlat push (bad) xchg orl (bad) sahf rex.X adc callq pop and and jnp movabs roll (bad) xchg loopne sbb outsb fstp sbb jrcxz (bad) stos add rex.WX push pop loop insl lods mov jmp pop adc mov rex.WRB xchg jge rex.WXB cld scas pushq adc (bad) (bad) iret mov test fisubl retq pop (bad) lret cmp mov popfq fdivs mov bndldx adc pop jg cmp (bad) in and sub mov clc shlb sbb rex (bad) movslq jno movabs repnz rex.WX mov callq mov xlat (bad) pop mov jg (bad) push repz xor xchg loopne push iret addr32 xor jmp loopne movabs movabs (bad) (bad) movsl sbb clc shll mov mov mov sbb add pop es movslq (bad) or rcl fcmovnbe cmp lahf rex.WXB js pop jmpq push ds (bad) add (bad) imul xchg xchg scas rex.W fcmovu xchg movabs std cmp jmpq mov retq imul (bad) rex.W loopne sbb in cld xchg jno in jp xchg mov pushfq push xor mov loope cld (bad) stos ljmp test mov std fdivs sbb jge test sahf or rex.X adc cld xor ds mov mov es callq (bad) es sub stc cmpsl bswap (bad) xor pushfq retq jno xorl mov rex.WRXB rex.WRXB rex.RB cmpsl addr32 out jnp add (bad) mov callq mov int3 mov pop retq xlat popfq rex.WX rex.WRB pop mov (bad) movabs scas mov retq shr pop jge int cwtl jrcxz jle (bad) sbb loop sbb in jb sbb cmp jrcxz mov (bad) rex.XB jmp shr rex.WB cmp sub leaveq shrl (bad) pop mov mov pushq rex.RXB rex.XB push push jl pop mov (bad) jnp retq movabs mov lahf xchg push lcall mov add imul (bad) (bad) js es outsl pop cmp insb jne sahf out or movabs movsb pushq nopl (bad) (bad) in sbb loop repz xchg xchg sbb sub (bad) cli cli xor rcrl xor jbe sarb jl xchg add out rex.WX fsincos and sbb test xchg iret imul and pop rcrb sub popfq mov in cld nop and idiv jl (bad) pushq mov loop xchg bswap (bad) clc jrcxz xlat movslq retq out fcomps int3 pop mov xlat or int3 int3 mov fwait mov (bad) std push (bad) push sar (bad) cmp sbb cmc fisttpll pop xchg cmp shlb mov test xchg (bad) fistpl mov mov adc stc fs (bad) (bad) fwait (bad) mov mov sbb jp (bad) mov mov cld add add (bad) sbbb cli jrcxz lcall fwait (bad) movabs jmpq push fldcw popfq mov (bad) pushq add fidivl dec rex.X adc fstps sbb mov jb and lock mov xchg xor (bad) pop sbb pop (bad) jb add insl mov sub (bad) mov fidivr (bad) fdivrs sbb cmpsb (bad) fs jmpq retq nop cmp adc rex.WRXB add xor retq fwait je xor mov out (bad) mov sub shrl out or sub (bad) sbb cwtl loope (bad) adcl movabs mov (bad) sbb in and fwait iret sub sti rex.RB in pushfq xchg jno (bad) (bad) fwait loope mov rex.B ja add push sbb roll setnp cmpsl push fild xchg or fwait mov int3 sbb fs (bad) rcrb scas sahf (bad) lea (bad) (bad) fwait mov mov sahf stos lods mov (bad) rex.WXB sahf add fildll rex.WRXB fwait sbb movabs (bad) mulb sti in mov pushfq push add (bad) jge sti lods or inc insl (bad) pushfq rex.R lock es ficom pushq sub psubsb cmpsb jne fwait add test jp add (bad) sbb in movsb sti add cmp stos rcr ss and (bad) lret mov mov fadd or bnd (bad) (bad) and gs mov mov vfmsub132sd jnp sbb outsl sub mov (bad) sbb je xlat test jns (bad) sbb push pop rex.WR pop stos add mov cltd (bad) xchg fcoml xchg sbb pop (bad) cmp (bad) sbb rex.XB xor int3 stos retq fldenv push (bad) fistpl and add sub cmp jo jmp hlt shr loopne in movabs sbb rex.WB idiv xchg mov mov ficompl rex.WRX mov leaveq rex.RXB mov jns mov sub sub clc fwait pushq rex.XB rex.WRX out iret add jns fwait rex.WRB jo cltd add mov movabs xorl mov addl xor sbb (bad) rex.RB rex.X sbb rex.WXB (bad) idiv lret sub (bad) fwait push loopne jo jno movabs (bad) (bad) sbb lock movl rex.W out pushq xlat (bad) cli fcmovnbe mov leaveq jp (bad) test (bad) sbb iret sub outsl (bad) fwait (bad) shr mov roll add (bad) cmp (bad) (bad) fwait push jp mov xchg xchg cld hlt fwait rex.RB rex.WRB xchg add fwait mov loope xchg (bad) jb rex.RX (bad) (bad) pop cmpsl sbb (bad) xor pushq (bad) cmp adc stc int3 mov cmp scas (bad) sbb mov movsb pop loopne imul cmp (bad) or pushq rex.WRB add (bad) cmp adc fistpl pop ds outsl (bad) cltd pushq movabs adc or (bad) (bad) loop movslq xchg xchg adc cmp rex.WRXB push (bad) mov fcomps jae es jno pop rex.RX data16 (bad) rex.RXB or rex.WRB (bad) or jg lock test fs and jle jb mov roll push js sbb mov and pop rex.WR or sub adc xchg (bad) test movsl (bad) mov lahf push (bad) fnstsw loope insb (bad) jnp mov (bad) out retq jle mov (bad) ss rex.WB mov pop enterq (bad) retq rex.B enterq pop addr32 movnti sbb cld mov movabs (bad) (bad) or xorl pop sbb rex.W xchg int cli bswap sahf (bad) stos lea sti retq repz imul retq mov (bad) in mov movabs popfq ja enterq sarl int imul inc callq (bad) xor in and jrcxz movabs fdivr loop add sub and cmp sbb or test or cmpsl mov xorl sti sub addr32 sub loop cmp cwtl xlat rex.RX add jns scas mov sub mov (bad) cmpsb retq (bad) cmp sbb loop (bad) mov iret rex.WB jl jrcxz lret sub (bad) movabs and fisubrl in mov in cltd scas pushq cld lcall xchg xor loope insl sub loop repz (bad) pop loope ficoml fwait rex.WX pop sahf rcl cmp mov push pop add rex.XB pop rex.WR outsl fldl data16 (bad) popfq rex.W (bad) scas xchg in (bad) mov push cmp popfq ss mov movsb shll out stos mov hlt adc sub (bad) leaveq fs in (bad) mov xchg jo in loopne jne loop rex or mov and jbe sbb cmp cld adc rex.B fs mov (bad) cmp jns rex.B xchg fwait mov jrcxz add adc (bad) callq stc or jrcxz and rex.WB xchg movslq (bad) addr32 fwait cli mov (bad) (bad) out retq add jrcxz cwtd addr32 add cmpsb movsb fistpll add (bad) loopne fwait sbb jmpq negl lret shr jg lock (bad) fcomps pop lock (bad) in fistl rex std (bad) ja (bad) iret ja add (bad) xor andl out mov fbld cmc cmp in pushq nop xlat lods adc mov out xchg xchg mov rex.WRX (bad) jb (bad) fwait mov (bad) in iret jmpq sahf xchg pushfq cmp pop pop addr32 mov mov mov data16 fisubrl xchg push rex.B rex.WRXB or enterq int3 mov outsb jmp cs (bad) sahf pushfq (bad) orl (bad) (bad) jmpq cmpsb (bad) pop rex.WRB push jb in mov lea adc xor es lods cmp sarl adc rex.WRXB mov push sub lock xor (bad) movslq sub mov xor test mov ffree (bad) pop xchg enterq adc mov and or adc adc (bad) xchg sbb popfq push lret rex.XB out jno pop int sbb jge leaveq rorl cmp sub (bad) jns data16 (bad) gs lods or (bad) fldenv addr32 pop jno xchg movsl fwait (bad) jbe xchg js add (bad) fmull lahf fwait add rex.RB jp mov fistl sub (bad) int lods fwait notl xchg icebp pop cmp sti fistl (bad) jmp clc or rex.WB push rex.B fwait rex.WR lahf xchg fnsetpm(287 sti cld (bad) movabs sub jrcxz fwait data16 stos subb fwait cwtl lahf cmc adc loope jnp add (bad) js icebp repnz fsubrl mov push rex.R mov cmp mov fwait imul mov rex.WX hlt std movb (bad) push (bad) and pop mov add je or nop (bad) (bad) (bad) jrcxz (bad) jbe mov (bad) in ja cmpb (bad) out leaveq movslq or pop add movsb jmp mov mov (bad) fmul imul mov sbb xlat xor xor rolb ja and imul fwait lret subl pop (bad) fisttpl scas add fwait adc sub ja popfq sub rex.XB or and (bad) jno (bad) movsb mov rex.RB pushq push stos sbb icebp rex.WRB movsl sbb or movabs mov jp or mov lods adc pop rcrl xchg movabs pop pop imul pop stos mov mull add cltd adc sub jae (bad) xchg add insb (bad) fwait shll mov rex.WB lret data16 xchg out (bad) loope nop stos xchg mov sbb sbb add cld mov mov adc rex.RB pop sub rex.RX rex.WR sahf mov sbb scas mov fstpt adc rex.B xor or in pushq stos mov xchg pop jge (bad) mov lret adc enterq lock or mov sbb clc xor cmpsl movabs sarl mov sar or hlt jg (bad) sbb retq mov outsl (bad) (bad) cmp xchg fstpt insb rex.WB mov addr32 loop (bad) mov pop push stos rex.WR (bad) lea sbb cmp xor mov cwtl xchg rex.WRXB out xchg (bad) xchg mov (bad) mov add rex.WR (bad) and adc sti mov fwait rex.W adc cli sub add cmp cs ficomp lret and jns sub (bad) and sub rex.RXB or jns push (bad) xor lods fwait rclb cmpsl xchg mov out mov xchg fwait push mov (bad) cmp iret sbb fwait sub cmp repnz packssdw lea addr32 sub lods (bad) adc (bad) fstpt (bad) push xor shll sub (bad) cwtl sub (bad) mov sbb loop rorl fwait sbbl push retq pushfq pop (bad) cld sub jb or pop push add fs add test movabs rcl movslq or push fwait mov loop sub xor mov (bad) mov xchg loopne mov add xor sbb movabs subl add (bad) (bad) mov (bad) push xor xchg pop add jo icebp xchg (bad) in fiaddl mov je neg int push (bad) imul stc push and movabs (bad) imul mov loope fwait jl (bad) in sti jrcxz sbb movabs outsl lods cmpsl rex.B mov add mov hlt lea push fwait (bad) add retq out fadds fwait sbbb outsl cmp sub rex mov rex.WRB cmp rex.W fwait xor (bad) mov enterq icebp cmpsl sbb sti xor sub adc jo hlt rex.B rex.WRX cmp mov shrb fbld add (bad) and loope data16 jmp and sbb fnstenv (bad) test lret mov (bad) fdivrs and lock (bad) (bad) sub in cmp cmp sub mov (bad) mov xor pop orb or adc adc sbb xchg insb pushfq es (bad) out rex.B fwait or loopne rcrl xchg sti or fwait icebp rex.X fwait mov mov jne scas mov (bad) xor (bad) (bad) icebp rex.WR sbb mov adc mov xchg subl (bad) rcll icebp (bad) lret jp push pushq out fwait clc scas cmp ficomp popfq jle (bad) fwait mov rex.RX or mov rcrl sub adc (bad) and jrcxz sbb rex.RB jbe cwtl add sub xchg (bad) push clc sahf xchg movslq rex.WXB cmpsb or out mov gs (bad) xchg sub fnsave adc jmpq lret (bad) out fwait leaveq rex.RX xchg or (bad) fwait adcl addb jg (bad) sub iret (bad) (bad) jae mov add sub rex.W fwait (bad) rex.WR ss (bad) movsl out fsubrs stc xor rex.XB (bad) (bad) retq mov pop test push test or pop cld retq jmpq sbbb outsl pop sbb (bad) (bad) (bad) (bad) push retq jb data16 lock rex.W in rex.WRXB mov push mov pop mov push loope in stos sbb (bad) (bad) sbb jo sahf add (bad) (bad) stos rex.WXB jge lods movabs in fiadd push cli callq (bad) mov cmpsl mov mov fwait cltd rex.X mov pushq cmpsl roll jno (bad) movsb rex.WXB adc add jmp pop mov xchg (bad) (bad) mov (bad) xrelease (bad) loop and mov js xor (bad) push movabs rex.WB test popfq pop rcrl outsb and sahf sub push jg mov popfq push rex.X sub (bad) decl roll adc idivl or imul test pop xchg pushq sbb out fstl mov (bad) fiadd cmpsl sti lods rex.WRXB adc push js cmp pushfq xchg (bad) mov and in pop rex.WRX cld rex.WRXB sbb xchg mul rex.XB xchg mov mov sub push fisttp jno cmp fidivrl rex.XB pop or addl jne fs xchg adc int cmc cmpsb sti loope out adc xor jo jp xchg xchg sub ss rex.W sub (bad) pop cmp je mov rorl fwait xchg (bad) or addr32 push rex.WX mov adc mov sti xor jrcxz fsubr rex lahf div fwait push lret cmp rex.WRB rex.XB fwait (bad) (bad) callq rex.RX rex.RB cmpb outsl pop add enterq xchg adc movsl jnp fwait mov scas sbb (bad) ficom fsubrs in (bad) pushfq xchg andb cld sub (bad) jrcxz test stos add mov movabs cwtl fwait ss sub and xchg cmp insb sbb rex.WRX mov (bad) fwait ror (bad) (bad) rex.WRB nop add fcoms (bad) mov outsl rex.RB js (bad) insl xor add fwait fs mov sbb (bad) adc xchg (bad) mov jmpq jo rex.RX xchg (bad) loope jg mov hlt lods loopne or sbb enterq jmp iret sbb retq (bad) rex.R (bad) rex.X jno sti cmp in and fildll rex.RX (bad) xchg rex.W mov (bad) xchg fwait movsb out (bad) sub sbb ds retq rex in pushq (bad) leaveq insb (bad) add push mov cmp xor fstpt fiadd fwait pop cmpsl rex.WXB mov jle cltd xchg or movabs jle jno rex.B rex.WX ss int out and stos add mov fwait sbb mov callq sbb enterq and mov movsl rex.X enterq xor movslq sbb (bad) fwait push jae rex.RX mov adc loope jge imul adc fwait push jmp out sbb cmp ss or jle orl stos (bad) movlhps sti add callq jmp data16 and sub (bad) adc int nop cmp (bad) rex.WR roll push (bad) xor fsubs add sub int3 rex.WRB stos sbb fiaddl xor and outsb sbb sti js rex.RX sbb rex.WR adc ficom rorb fwait adc orb movsb lods cli rex.WR cmc hlt and sub out pop fwait and rex.RX adc pop sbbb loopne (bad) (bad) (bad) xchg movabs (bad) xchg xchg icebp fwait jg (bad) mov loopne fwait (bad) fisubl cs or cltd mov cltd popfq mov jge repnz or movslq fmull adc movabs shrl cltd in cmp rex.W push mov fwait (bad) mov bswap fsubrl pushfq clc sbb mov (bad) movslq sub add addr32 cmp xchg cmpsb pushq mov (bad) rex.WXB (bad) jns fcomps rex.RXB sbb test rolb ds (bad) sbb (bad) (bad) push sbb insl xchg pop clc rex.WXB rex.X pop scas addr32 (bad) pop stc (bad) in subl xor cmp rex.X callw pop rex.XB (bad) (bad) (bad) xor fwait push rex.RB rex.XB cld sar adc test (bad) (bad) fs movabs add jrcxz mov xchg xor xchg rex.RX pushfq lods pop es movabs int3 (bad) out and outsb cmp sahf fwait adc andb (bad) add sti loopne push adc rex.WR shl rex.W mov retq sub xchg mov rcrl in rex cwtl push rclb neg mov push sub and nop loopne xchg jbe adc iret mov xor pop divl cmp loop pop popfq xchg cmp repz pop and or xor gs pop pop (bad) loop test cs xlat rex.WXB (bad) popfq pop push and in fdecstp mov lahf (bad) mov push xchg or movsw rex.XB movabs xchg (bad) movabs cmpsb fnstenv mov popfq xlat mov roll (bad) pop sbb (bad) jrcxz orl cmp sbb imulb push jne (bad) cmpsl movabs (bad) xchg mov (bad) (bad) loop (bad) and or xor sbb push (bad) jg push (bad) cmp mov xchg test pop loope mov sbb mov xchg add (bad) lods cltd rex (bad) mov pushq fst xor es (bad) out je jns pushfq mov fwait shl push xchg pushq mov pop jns xchg pushfq (bad) pop movsb loope mov stc (bad) lods jns xor sbb jae xor rex.WX fisttpll fdivl xor callq xor jmpq jmp lea nop retq mov fdiv and cmp jrcxz and fstps jg cmp mov add jno xchg rex.RXB loop rex.WR movabs out cmp scas pop movslq (bad) sub retq jg pushfq rex.RXB mov out (bad) (bad) lock cmp rex.WXB subb mov xchg (bad) callq shrl test push jmp es pop (bad) sbb rex.WX out push jge js notl xchg negb and pop pushq pop xchg push loope jg (bad) negl xchg insb sbbb push mov (bad) rex.WR push loope pop rex.W sbb jo cmp cmp add lea sub xor fisttpll xor pop cli je cmp xlat mulb outsl push fisubr (bad) movabs xor int sbb int3 movabs jmp xchg test xchg (bad) pop jo rex.RXB fs push lods (bad) imul xchg or push cmp rex.X popfq ja retq and (bad) (bad) cwtl scas pushq pextrw es and jo pushfq mov sahf mov lret jrcxz xor rex.RX (bad) je in je adc mov push sub rcrb jns,pn mov rex.RB rex.XB es and cmp or mov xchg pushfq (bad) jrcxz mov adc and sbb movsl (bad) rcll mov mov jne jo rex.WXB jl pushq in (bad) test jb mov scas (bad) (bad) mov faddl mov rex.WXB in sub mov mov rex.RX (bad) (bad) (bad) cltd pop add cmpsl cmp movabs (bad) (bad) out push jbe cwtl sbb pop cmp (bad) (bad) pushfq and in (bad) xor mov (bad) lods mov mov lret rex.X fwait pop sub loope (bad) movabs callq or faddl retq fs mov jmp xlat nop rex.XB push out (bad) add mov sub sub rex.WRB std test pushfq imul add imul jmpq cmpsl sbb xor mov loopne mov fwait scas std xchg or es (bad) repnz faddl or fcmovu ja pop fstps cmp fwait pop and mov (bad) push xchg cwtl pavgb imul fstl (bad) rex.WX push (bad) fwait mov stos adc jl sbb push rex.RXB adcl mov mov repz fsubr in fwait mov (bad) xchg js sbb jl rcl jmpq jbe (bad) xchg cmp fsubs mov stc (bad) lods stos (bad) insb sub xchg pop cmpsl jle (bad) nop retq movabs fsubrs sbb retq fmull jae jrcxz shrb mov (bad) ds enterq mov mov sub callq rex.WB mov in rex.RB sbb mov lock adc movsb push shrl sub sbb rex.B addr32 mov mov mov and push enterq xchg loop mov or int cmp and leaveq sub (bad) add jle fdivs repnz ds push mov cmp sbb in retq mov xor es or cmp fucomp add mov hlt int3 sar movsb cmp mov xchg or js xchg sbb sbb fimul fwait mov out xchg (bad) lcall ja (bad) fbld adcb (bad) adc ds (bad) xor xlat or rex.RX jp xchg sbb rex.W rex.RXB je cltd push pushq and jmpq and xlat sbb jle out mov cmpsb movabs js sbb shll setl shrl fisubrl rex.WR (bad) jb enterq and iret cmp in repz or fcomps rex.WX shl test xchg xor data16 add movsb shll in popfq lea (bad) lods cmpsb pop addr32 loope cmp mov add ss and xlat (bad) jo cmpsl mov (bad) xor retq lea adc sahf (bad) ja pushq mov (bad) imul mov xchg mov add loopne push adc (bad) mov nop push insb movabs jb sbb (bad) xor repz or pop cli xchg cld mov icebp pushq push fistpl rolb testl rex.WR cli adc mov fldt mov xchg sub and sub mov jno sbb push test and pushq mov jbe movabs sarb sbb cwtl adc (bad) outsl jmp xchg xor mov sbb add (bad) fldln2 sbb lahf movsb lret lods fstpt fwait mov sahf stos sub rex.B ffreep sbb loope xor sbb rex.WXB out imul add (bad) rex.R test in fwait rex.RXB sbb or (bad) sbb or lods stos xor (bad) repz add and fwait xchg mov sbb and gs sbb and push movabs fwait (bad) and icebp or rex.WX adc outsl (bad) (bad) jmp rex.WB test fmulp je cmp add movabs pop xorl mov cmp rex.WXB fwait rex.WRXB orl fwait add (bad) push test rex.WX rex.R fwait outsl pop pushq (bad) sti (bad) rorb (bad) cltd mov (bad) mov rex.X add jmp (bad) rorl pushfq (bad) in (bad) add stos pop insl out rolb callq fwait int3 xlat mov jae hlt sbb or fwait or ds lock jge mov (bad) callq scas movsl cmp sahf ds out or rex.WR test movslq push (bad) adcb cs lea loopne sbb out (bad) out movsb iret xchg movabs fwait outsb mov xchg pop or fcmovnu lahf lock (bad) (bad) es mov jne (bad) (bad) movabs and jrcxz jnp (bad) sahf rex.RB movabs and mov repnz scas fwait add leaveq add sbb ss ficompl rex.XB and scas mov mov xor sbb ja pop jb adc iret orb (bad) or sub stc cmp fwait movslq or xor sbb sbb stos (bad) std sbb icebp (bad) or rex.XB fstpt cmpsb xor adc sbb and xchg test (bad) fwait sub jge rex.WXB rex.B ds (bad) add sti icebp lock in nop adc jmpq xor cs (bad) sbb (bad) add xor (bad) (bad) mov push imull mov sarl xchg cmp sbb sti sbb and int3 (bad) or adc cmc xor fwait xor sti mov xlat rex.WRX jo xor cltd jmpq cmp fdiv xlat (bad) lret sbb cs fildl (bad) fwait (bad) adc adc mov rex.B xchg movslq fwait xchg es pop (bad) sti xchg cmpsb rex.XB sub and xchg or (bad) gs popfq jl scas (bad) add sbb mov xchg fs in (bad) add (bad) fwait or (bad) loope mov pop xchg sub nop xor retq retq sbb rex.WRXB pop (bad) mov jns adc (bad) cs (bad) fwait callq cmpl jp in add cltd or push xchg or adc push shlb fwait and hlt movabs mov (bad) (bad) sbb rex.WRX repz cld repnz movabs loop pushq adc rorl mov xor lret jrcxz (bad) addr32 jno push fwait mov lods xchg fwait jge (bad) movsl pop cmp mov sbb imul and (bad) fldcw test imull out fwait fs sub xchg (bad) fwait sbb testb rex.WRXB (bad) jrcxz sub outsl (bad) fwait scas cmp int pop xchg stos icebp or add jmp retq rex.RX or subl lods jo mov mov jrcxz (bad) scas fwait xor cmp sub xchg sbb incl and stos and (bad) (bad) movabs mov adc fwait (bad) neg imul roll fwait fwait cltd retq (bad) rex.WRX rex.R mov (bad) movsl push mov sbb xor xor lods adc mov xchg mov ja fwait loopne test fwait movabs (bad) lret repz out fcmove pop add in cltd pop fwait test push addr32 xchg sti mov fildll sbb sbb jle sbb cmp fwait rcrl xchg fidiv movslq or sub rcrl add repnz andl fwait (bad) roll insl mov mov jl rex.RX cmpsb fisubr sub cwtl jg test stos divl sub lahf mov sbb pop fistpl rex fadd fwait mov movabs and add leaveq fwait mov outsl (bad) sarb add fisttp add fwait out adc lea sub mov rclb or (bad) fsub fwait pop (bad) cmp xor rex.WB mov cmp popfq or es rex.WB push out (bad) data16 mov enterq movsb lahf sbb sub mov lret cmp mov xchg xor stc lock rex.R mov mov (bad) rex.WX mov fnstcw sub mov sqrtps xor adc ficoml sbb sbb push imul mov lahf (bad) xor ficompl ja or pop stos mov movabs rcr (bad) (bad) retq out jne rex.WB iret pop lret fsubs test rex.WRX jnp (bad) xchg mov mov sbb rcl imul (bad) mov (bad) pmaddwd sbb (bad) rex.X or sbb pop add lret repz sahf xlat jl mov fnstenv loop (bad) sbb jl cmc mov movabs rex.XB ja push (bad) xor cs or sbbb sbb (bad) mov movabs (bad) movslq xchg ficomp lods pushfq jmpq xor sbb (bad) xor rex.B or and in add retq clc pop pop (bad) es out movsl jle (bad) in lret fcomp cmp cwtl callq (bad) add and rex.XB and (bad) loop xlat out mov cmpsb insb callq lret jmpq test test adc scas pushq jg rex.B mov (bad) pushfq outsb (bad) fistpl push rex.WRXB cmpsl add es (bad) lock rorb add (bad) or in rex.WRX outsb push imulb or notb lock outsb fstpl sbb cmp enterq hlt loopne xorl loop xor sarl add scas or or xchg mov (bad) xor or sbb rex.WXB (bad) add rex.B int3 pop xchg pop add mov pop in adc mov jno mov push adc xchg xchg (bad) rex.WRXB in fadds pop fwait xchg (bad) repz pop sbb fwait xchg out mov imul push (bad) rex.WR fwait pushq pop cmp jb (bad) out outsb xlat fwait movabs out fwait mov cli sub insb movsl fwait test in nop stos fwait js adc and xchg pop sbb repz fcomip and fstp outsl sbb pushq movabs mov rex.WRB movb stc fisttpl rolb fwait insl test loop callq data16 and in sbbl xlat xor push sahf cmpsl jb fistpl rol fmulp add and addb sti add jnp cmc or pop repnz (bad) push add add push jle jg es fildl fdivs jnp pop fwait stc lock movsl repnz sbb add (bad) fildl sti std and lret sub (bad) pushfq or fwait hlt sub movabs sbb popfq mov xchg mov lods loop pop out int3 mov hlt pushfq fwait add mov (bad) movslq fwait adc cwtl retq int and lret mov stos fwait push lea or xorl (bad) (bad) fwait push movslq cmp in mov pop fwait movabs fwait push (bad) (bad) rex.RB popfq mov loopne shl or (bad) and retq (bad) lret int3 (bad) fcomps scas movsl jb xor or fstpt push insb lods xchg rex.XB scas outsl (bad) (bad) ss mov rex.WXB clc (bad) divb pop out fcompl ja (bad) fprem1 cmc stos jrcxz sti or sbb rex.XB fwait callq ss fwait push mov int xchg mov hlt add fdivrl shrb rex.WRB fstpl pop and cmpsl add fwait pushfq clc mov fisttpl push cmp (bad) loope lcall divl rolb rcrb push in fwait int xchg repz jp rex cmc sbb jmpq jo pop (bad) (bad) rex.W hlt sub mov pop gs sahf movabs jmp sbb pop cs movabs movabs lea push pushfq fwait loopne gs mov jmp fwait lret pop rcr int sarb movsb add idivl fwait pop imulb pop fwait callq fnstsw add repnz in lods in pop fwait sub imul int3 fwait or push stos subl and fwait mov rex.B or and callq or (bad) fwait or test mulb test mov add movsb jb mov std mov sbb mov rex.W adc cmp pushfq (bad) iret mov std (bad) sbb sbb xchg rex.WRB pushq nop push jge mov cmpsb xlat push rol rex.WXB (bad) (bad) mov retq in mov clc imul xchg scas gs imull rex.RX mov (bad) and fimul lea cli mov lret out rex.RX and sub (bad) (bad) popfq clc movsl movabs mov or xchg mov adc outsb mov adc cmp and jb test test icebp out jae,pn js sub cltd or (bad) fimul sti and fstps notb clc (bad) mov insl out sbb mov cs mov or or js jl mov (bad) sarb outsb popfq add cs (bad) fwait sub or movabs jne mov mov sbb (bad) (bad) movabs andl (bad) (bad) xchg jg jle not int or fisubr or fwait and sarb push clc imul xchg (bad) or cltd (bad) sbb (bad) and sahf xchg or cmp rol fwait mov fist and (bad) xchg (bad) mov lea movabs movsl vpcmpgtd (bad) jrcxz out cltd cmp add jne sbb lock in hlt ficomp mov loopne scas icebp mov outsb repz (bad) out xchg xor test xor in fldl fwait (bad) test or sbb jl mov cmp retq mov pop retq rcrl test cmp orl fwait and lock test lret xor jg fucomp rcrb rex.WRXB push movsl adc and or push (bad) fcomps mov jmp clc lret (bad) lea movabs imul (bad) outsl rex.WXB push sarb rex.WRXB jmpq jp rex.X sub imul (bad) fidivr imul loopne loope add outsb out fptan imul push mov popfq movabs rex.WRB sti (bad) fisttpl pop fwait (bad) orb movabs push (bad) and (bad) cli add jge test sub jmpq jge rex adc loope mov push (bad) in cmc in cmpsb sbb rex.RB fwait adc (bad) je jmpq xchg fwait hlt and fwait sub fildll jae sahf xchg (bad) mov (bad) fs int3 xor or pop lock sbb sub fwait je and test mov pop rclb sbb sbb cmp test ja pushfq in fisttp rex.W callq xchg (bad) pushq xchg test cwtl adc lods fcompl mov repz cmpsb pushfq or xchg sbb mov pop push jge outsb pop movsl xchg bswap loop sbb pop callq lahf and cwtl mov rex.WRXB in movabs pushq retq rorb mov cmp sbb (bad) lahf callq lea shlb pop add stc sbb rex.WRB lock rex.WXB iret ss sti sub pop (bad) lock fwait jb iret cmc insb cmp mov xchg (bad) jrcxz cli adc rex.W rex.RB and sahf (bad) jmpq (bad) and (bad) (bad) je lock sbb (bad) cmpl (bad) (bad) (bad) movabs callq mov fwait xchg fisttpll pop retq (bad) adc or cmp sbb rcll fwait outsb mov adc fsubl (bad) mov rex.WX pop push mov sbb fwait test jb or movabs xchg and lods movabs (bad) and jl mov mov nop repz jnp es (bad) sbb mov jg fcoms rex.WRXB movabs fwait add push icebp paddq sub mov cli cs out mov sahf rex.RXB (bad) adc es rex.X out push in (bad) or push out cmp (bad) push push cmp icebp sub lret add callq adc adc lret (bad) callq add stos xchg mov xchg sub fwait movabs in xchg jnp iret xchg cmpsb lods (bad) dec (bad) xchg imul lock jmpq (bad) cmpsb mov pushq in data16 scas sbb jmp fistpll rex.WB (bad) movsl (bad) rex.WX push scas add fwait cmp imul (bad) sub cli rex.WRXB rex.RX fwait xor ja (bad) leaveq insl fwait sbb stos fistp (bad) lret mov pushfq cmp mov xchg cmpsb sub movabs lods scas push shlb insl sub mov sarb pop sbb cmp fwait and push lahf fsubr jmp mov sbb fwait adc gs sbb sub (bad) cmpsl loope mov sbb push and (bad) adc sahf insb popfq jns and pushfq lock js out pushq (bad) repnz and sbb pop rcrl sbb stos jl or sbb jnp sar rex.W rex.RXB fwait or add or stos xchg cmp rex.WX lods adc jne loop rcr jl cltd js outsb xor (bad) fwait mov sub jmpq or ror je int3 lahf jp mov mov xchg pop iret (bad) imul xor movslq pop out (bad) fwait shl cmp xchg (bad) orb mov imul notl out push mov cmpsl and loope sbb clc out jle fild rex.WB rex.RB decl adc (bad) mov rex.X mov shlb sti cwtl sbb fwait pop and mov je sub fwait add (bad) btr push gs sahf adc push (bad) mov mov rex fwait xor scas lret sbb pushq movabs (bad) mov jrcxz adc add test std fwait sarb setnp xchg and rex.WR loope rex.RB lret scas adc (bad) icebp cld in fwait mov retq xor in mov jmp (bad) pop adc adc fldt xchg imul (bad) fs (bad) jo inc sti add xchg mov callq pop add js (bad) test fwait rex.WXB out (bad) pop rex.RXB jmpq in mov (bad) xor push sti pop (bad) sbb fwait scas jg push cmp xor hlt movabs ficompl test mull movslq fnstenv clc stos xchg pushfq mov addl rex.WRXB data16 adc (bad) cmp ror cli xor rex.WX leaveq repnz adc mov fist adc (bad) rex.RX mov (bad) xchg lret xor cmp sub movabs shl push outsb or or mov out add fdiv mov cld (bad) clc add and test enterq adc xchg xchg push push and (bad) push test ja repnz (bad) pop rex.WRX rex.WRXB xchg (bad) and (bad) fs jo adc lea pop hlt mov rex.WB fisttpl jrcxz and outsb fadd test rorl rex.RXB (bad) mov cltd pop mov in out xchg jl (bad) adc lcall fsts fnsave pop pop pop jo jbe sbb (bad) stos popfq lock retq mov sub cltd or fild pop add movabs mov adc xor sub mov vcvttss2si sbb callq sub mov in sbb fwait mov rex.R rex.WR adc or stc jge sbb mov cmp fwait add jae jno lret lret push mov jrcxz rex.RXB mov lock mov or cmp mov int3 scas sub fwait shll (bad) or in out xchg outsb fwait xor mov jno sbb or and (bad) mov jo rex.WR fwait adc adc pop leaveq adc jmp mov retq push movabs in mov cmp rolb pushfq rorl (bad) or xor adc repz mov out push (bad) cmpl xchg stc cmp mov fsincos sbb repnz in rolb pop sahf rex.R (bad) lea clc xor (bad) push stos push mov (bad) add push pop fwait test pop ds fwait (bad) lods mov (bad) (bad) mov rex.B mov (bad) cmpsb mov rex.WB sub rolb lret jno rcrl mov and sbb icebp out fistl fwait iret fidivrl fwait popfq rex.XB bnd rex.RX rex.WR sbb (bad) imul in xlat adcl cltd imul fistpl adc mov repz xor cmp stos fwait cli repz add in adc fwait lea or add pushfq sbb xlat lret and lock sbb out and (bad) rclb fwait (bad) repnz fimul in mov fwait addl xchg jle adc pop mov (bad) fwait (bad) add je cltd callq (bad) (bad) rex.W xchg sub xor lahf or or callq sbb stc cwtl out fstpt jge xchg fiadd or movsl test movabs cli iret and out xor xchg or xor sub sbb rex.WRX pushq jmp movabs movslq orl cmpl push cli xchg (bad) fdivrl testb or movslq retq mov scas mov out icebp rex.WXB stos add pop sub sbb push (bad) loop pushq popfq sbb sbb (bad) mov paddw mov and sub lods rorb sub (bad) repz rex.W fwait cld pushfq movsb (bad) pushq sub subb push sub ds sub fwait (bad) xor jne out sbbb (bad) xchg add push loope jbe (bad) add or jbe (bad) mov out fwait mov sahf callq pushq mov fwait mov pushfq mull (bad) shrl ficompl out pop rex.WRX fwait (bad) faddl movabs js (bad) out ss xor fcompl rex.WRX (bad) paddq imul in movabs pop cltd js (bad) stos fwait jb and fstps (bad) out fwait mov sahf je popfq fucomip (bad) add add out icebp (bad) fisubl lods lret adc out (bad) add mov (bad) rex.WB add loopne divb push mov mov movabs fwait (bad) (bad) lret rex.XB or xor je outsb (bad) stos scas or mov movabs jnp fs std (bad) xor xlat jmpq callq (bad) or roll stos movabs pop fwait nop clc movabs pushfq add gs decb xchg add fwait out leaveq in mov jle mov fwait and mov sbb pop add push imul shr loop stos rcrl lahf (bad) push test loopne iret lea and hlt rex.WXB jnp jmpq orb pushfq insl (bad) cs and rex.X rex.X rex.RXB rex.WRB (bad) lods leaveq jnp (bad) pop cmp mov or shr (bad) adc movabs shrl sbb movabs sti adc fwait add es out fwait test push sbb outsb add rex.R loopne rex.WRB fwait push sub pop xchg rcrb xchg rex.RX fistpl mov movsl jp test sub mov mov jne mov mov (bad) cmp lret movabs data16 test sbb jae jmpq mov (bad) jnp (bad) scas xor es rex.XB fwait in jrcxz (bad) loope and hlt fwait xchg fcmove inc fs insb (bad) mov pop cltd fisttpl mov movabs roll cwtl lock cld data16 lea movsl mov mov xor rcrb cld jmp hlt mov fwait int cmc add (bad) nop fwait xchg rex.WRX adc fwait pushfq cltd clc cmp mov (bad) push std sub and xor sbb jo jae (bad) movabs sbb (bad) sbb insb (bad) (bad) callq mov pop jp mov add fldenv push pushfq (bad) sahf movabs pop roll loopne pop test (bad) pop rex.RB sbb rex.RXB jo cmp adc rolb mov (bad) sub nop lods loopne addr32 outsl jne repnz xchg stos in mov jl fucomp jae mov jrcxz popfq sbb push lret rex.WRB xchg mov sbb fildll loope scas xor mov out rex.WR movslq add setbe fxch rex.WB gs jge mov jmpq movabs movsl rcrb je xchg sbb pop and xchg pushfq mov jo (bad) jbe rex.XB repz movslq or (bad) adc (bad) and pop xchg neg sbb ss (bad) lea pop pop and xorl pop (bad) lret xor int (bad) loopne es in addl (bad) incb and sbb repz rolb xor mov sbb rex.RX rex.WRB (bad) mov mov or rcrl pop rex.WXB out sbb retq sub (bad) push scas mov rex mov cmpb (bad) rcr (bad) je data16 xchg adc jne (bad) test roll (bad) mov rex.WRX lods jg rex adc sbb (bad) rolb stc or int3 repz sub push ljmp push pop rex.W xor lret mov jge mov fsubs rcl add (bad) sti mov pop out xchg insb sub sbb in std scas sbb cs mov rex.WRXB rex.RXB test jp sbb imul xor iret sahf addr32 cwtl add loope jl andb jne sti outsl popfq std lods or imul jg hlt sub imul (bad) mov movslq jl sbb rex.RX or push jb xor mov cli rex.RXB mov rex.WB cli mov js sub (bad) (bad) xchg insl (bad) pushq orb leaveq sbb loopne mov insb pushq mov (bad) in cmp xchg push fldl mov in (bad) movsb sbbl (bad) mov sbb rolb mov add jns popfq sbb pop mov (bad) xchg in jnp (bad) mov mov movslq imul sub rex.W lock pop push add and repz mov gs rex.WXB (bad) mov rex.WRXB (bad) pop iret cmc fnstcw xor sub sub insb add fmuls xlat rex.W rex.X pop (bad) (bad) xchg (bad) or mov (bad) (bad) xor fiadd sbb leaveq int rex.WRX clc lret loope (bad) (bad) jl sbb (bad) cmp mov xchg neg mov adc out pushq cmp and xchg sbb cmp rex.WRX lods iret xchg lods jp adc (bad) cs rex.WRX cmp jge pop rex.B (bad) movsb xor xor sub retq movabs xor sahf (bad) xlat data16 shrb fs jmp sbb in pop mov popfq or cli mov cmc sbb callq adcl (bad) xchg mov iret cmpsl fcoml xchg add pushq cmp sbb (bad) rex.RB mov fwait rex.WRB rex.X jbe adc (bad) sbb cli xchg (bad) lock cld stos cs and std fwait jae and fnstenv orl fwait repz xchg sbb cmp and and ds sbb int rex.WR fwait (bad) lea and (bad) pop rex.W jmpq push fcom rex.RB (bad) (bad) in adc pop pushq out rcrl mov xor cli (bad) cs cwtl (bad) retq mov fwait mov and sahf fwait outsl sbb getsec fcomps stos movabs fwait rex.WX movabs repz rex.WRB rex.WRB rex.WRX or out callq adc gs (bad) xchg mov test callq lret in (bad) cmpsl sbb mov test (bad) (bad) adc (bad) rex.WX int3 clc pushq xlat fwait movabs rex cmpsl (bad) sbb jl jbe in idivb pop mov (bad) or or push jle adc sbb jno (bad) mov in repz push and push xchg scas jno xchg imul (bad) mov mov xchg or xor sub or (bad) repnz xor loope push mov mov (bad) pop movabs rex.WX fmul lret pushq addr32 sahf int3 loop lret sar or rex.WRB fs addl out addr32 pop (bad) imul jns cmp fstl add stos adc sbb or mov sbb mov rcrl push rex.RXB (bad) mov rex.X pop rex.WB push mov (bad) ficom or fsubr mov iret add insl fdivrp mov adc add pop cmpsl rex.WRXB rex.WB rex.WRX (bad) (bad) (bad) lods loope movslq cmpsl lret in rex.WR icebp adc pop xchg (bad) push test pop adc fistl cld lret int rex.WR rcll pop std jb or sbb cwtl out std (bad) or lret jb movsl mov rex.WR pop adcl jbe movnti rcrl adc sbb out idiv pop ds imul rclb pop sbb movabs cmp ss icebp mov push jl cmp (bad) sbb fnsave movabs rcrb rex.WRX jne int3 pushfq lods cld sub xchg jae scas add ss movslq pop idivl rex.XB pop (bad) mov sbb sub pop or adc (bad) shr xchg sbb popfq pushq lret (bad) (bad) pushq cmp adc rex.X shlb add lods in jge imul stos mov rex.WX (bad) and retq pop and (bad) cmp (bad) mov jrcxz lods mull (bad) cmp or int scas cmpsb in cld add sbb xor callq and jb sbb mov jle (bad) mov int cmp in pop fwait jmp pop (bad) sarb popfq (bad) push push repz push mov sbb (bad) and sbb adc loopne lret lret push ss jmpq pop int int3 (bad) rorb mov mov rcl or add jge lret fwait scas sbb xchg js or sub sub cmp in scas add cmc push out adc sbb lock (bad) mov sbb test fwait xchg xchg jno fisubl loop fwait callq loopne test rex.RXB xchg and adc callq or in fwait (bad) movabs imul xadd out fwait xchg and pop fwait addr32 mov nop (bad) incb xor (bad) jns sbb add push pushfq mul (bad) sbb mov add cmp jmp shr wrmsr cld pop loope mov in add std mov push setl jmp (bad) xchg or (bad) scas (bad) mov jae sbb xor loopne xchg rex.RXB rex.WB rex.RB stc mov frstor jl xor loop fwait mov scas mov mov xchg fwait (bad) rex.RX pushq movabs pushq out mov sbb adc mov (bad) (bad) cmc add jl sbb lods (bad) fcoml insb cld es outsl xor sahf sbb (bad) mov imul pop lret ficoml push rex.RXB repnz cld (bad) adc adc xchg (bad) xor mov loope scas sub cli loope push loope sbb cmp test lahf and movsl es ss por rex.WXB (bad) sbb not mov popfq jle mov retq mov pushq lret (bad) data16 leaveq sbb jmpq cmc pushfq (bad) mov cmpsl repnz rex.WB cmc and cltd lahf scas fwait (bad) fdivl mov faddp xchg leaveq outsl fldl jo rorb lea rex.RXB (bad) adc rcrb hlt fidiv popfq pop jo sub movslq out xchg fwait outsl xor fwait repnz adc test out addr32 rex cli lret push movabs pop sub cmc (bad) (bad) hlt fwait icebp xor (bad) (bad) mov and jne callq sbb jmpq (bad) out mov rex.WXB sbb or insb and jp imul pop pop fwait enterq pop cmp add repnz xor imul fwait (bad) mov rex.WXB mov xchg xchg lock nop mov fwait retq sub fwait (bad) pop and jg jrcxz fwait add sbb (bad) mov int fwait test (bad) cld sti dec fwait (bad) fdivl lods fwait add cmc add and mov mov push mov repnz out scas mov xorb mov push fwait or addr32 sbb lret mov mov cwtl (bad) fcmovnu (bad) or cmp pop gs addr32 loope or lret jle xor stc callq fldt outsl pop (bad) testb mov (bad) pop rex.RB fwait (bad) fucom mov adc jnp mov jns rex.WRXB rex.WX jo in mov scas cmp fistpl rol (bad) (bad) fcmovu cmpsb and sbb fucomip (bad) xor jne jnp fldt addl mov sbb icebp (bad) (bad) movsb movabs adc (bad) sti pop popfq xor sbb and (bad) stos mov loop rex.WB fwait sub cwtl js iret (bad) (bad) pop (bad) int or sahf fwait adc loopne xchg stc (bad) mov and (bad) add jmpq sub mov outsb cmp fwait xchg and jp cmpsl pop xlat sbb shrl (bad) fiaddl sti (bad) push (bad) add subb push lahf add add (bad) cmp (bad) outsb and out mov sti psrld adc rex.WXB fwait add lahf (bad) cmp xchg movabs jae stos sarl sbb rex.WB rex.X rex.RB out fldenv movabs jg in (bad) cmp enterq imul mov leaveq rex.WB mov out pop subl (bad) fistl or sbb movslq (bad) pop (bad) addr32 mov rex.B rex.XB fwait push xchg jns fsubrl fwait push loopne xor add stc add test imul pushq fcompl or rclb lea lret mov mov ja rex.B rex.B rex.RXB xchg cmpsb int sahf xchg cmc push add nop fcmovnbe mov or xlat gs (bad) mov add mov rex.R ja mov sub or movsb imul cmp (bad) subl mov (bad) xchg fs callq or jl adc movabs mov stc rex.WRXB mov outsb cmp fnstsw push and jne xchg (bad) push int hlt test imul in xchg pushfq leaveq fwait enterq rex.R add int3 xchg sbb and jrcxz addr32 and mov adc (bad) (bad) cltd xchg cmp fwait pushfq (bad) pushq stos (bad) adc je xor cltd sti or fadd lea cmp test mov cmp push sub (bad) mov pop add cltd mov mov mov sub lret vaddps hlt mov fdivr (bad) popfq mov andl jne cmp (bad) push ficom xchg fs xchg imul fwait jl push rex.R (bad) ffreep mov cli (bad) add xor out push sbb fwait mov add fcomps movabs rex.WRXB cmp jp stos mov shl sti cmp scas pop in rex.W rex.RXB out (bad) xlat rclb push mov jmp fs fwait (bad) movsb mov fwait jae or jrcxz xor cmp nop rex.W fwait movsb cmp jge (bad) and mov adc pushq out fwait icebp mov or notb out lods (bad) mov fwait rex.WR faddp leaveq pop stos sbb out rex.WB mov xor pop sub sbb mov jo mov (bad) cld push sbb cmpsl or stc cltd cwtl add sbbl fwait xor andl repnz cmp pushq fistpl fwait jnp xchg cmp add fwait xchg icebp and xlat (bad) out or fwait std rex.W lods cli movabs movsb fwait (bad) movsl nop add mov (bad) not data16 (bad) lret adc add movabs fwait mov fdivl cmp or cmp (bad) jmp mov nop movabs movslq adc mov rorl (bad) adcl sbb jp pop outsl movabs out (bad) mov loope rex.WRB sub rex.XB sbb cmp addl (bad) (bad) imul (bad) in cmc fwait pushq fwait adc jae test (bad) js notb cmp addr32 cwtl and fwait rex.WRX (bad) movabs addr32 int3 rex.WRX cs shl mov (bad) mov (bad) fwait cmpsb in mov retq mov callq (bad) (bad) rex.R pop shll (bad) sbb add fldt fwait (bad) jmp jmpq fwait (bad) rex.WB sub or fwait rex.WRXB lods mov adc std xor cwtl lock out jl (bad) loope icebp jns cmpsb mov loop rex.XB iret cli jns js sub or mov mov movabs jo clc push jp jle loope rex.XB (bad) pop (bad) fsub movabs or push incb jge cld (bad) jns lods push jb mov rex.W popfq es jmp ds and rex.XB pop adc mov cwtl rcrl pop rex.B and out adc mov pop sub insb (bad) pop jo (bad) ja sarl (bad) out or (bad) pushfq retq (bad) add popfq or jg xchg xor test cmc retq sub shlb rex.RXB (bad) pop insb jb leaveq mov outsl movabs adcl pop and stos cmp mov enterq mov (bad) push std rol (bad) loopne xchg sub lret adc lock es lea or retq fcompl test sbb xchg pushq mov or and ds sbb (bad) (bad) mov cmpsb insb sti mov (bad) sub lods fcmovnu cmpb fwait mov inc jp stos xchg mov scas sbb mov (bad) in mov fwait sbb retq pop sbb jne xchg sar fs adc cmpl outsl push lods push (bad) add fwait rex.RXB adc adc test adc retq fwait mov rex.WX loopne,pn fwait loope insb cld imul (bad) jne (bad) mov fistl (bad) mov popfq or jg fnop fwait jmp lods pop sahf in and sbb leaveq mov fildl (bad) insl (bad) xchg (bad) cmp fwait rcr lock subl sbb sbb fwait add and (bad) jg cwtl test out ja rex.WB fwait push (bad) (bad) leaveq pop mov (bad) sti cmp iret rex.R sbb sbb stos repz xchg popq fwait pop (bad) (bad) sbb movabs enterq add loopne or movslq lahf insb out fwait (bad) insl jle cmpsl sbb push out fcomps (bad) cmp retq fisubrl in fwait cltd mov test inc stc sub mov cmpl mov je and rex.WRX rex.WR hlt mov addb jo scas adc iret (bad) out (bad) (bad) enterq mov movsl and movslq mov cmc or std mov fwait rex.WX rex.RX mov sub scas push fwait (bad) mov push cmp or pop mov mov stos lods cld or xchg mov pushq xor pushfq in icebp fwait lret repz mov cmpb lock xchg push lock adc icebp adc scas adc (bad) (bad) pop xchg test jl leaveq sub popfq out in push jnp xchg fstpl loop cmp fwait mov sub fwait (bad) std mov xchg cmp (bad) (bad) jg loope (bad) addr32 fstps (bad) orl add mov rcrl mov xchg xor pop vcomisd sub pushfq test pop insb js cmp xor stos in (bad) xchg movabs loope loopne add or sub pop cltd (bad) popfq sbb cmp fcmovnb imul int3 addr32 add stos add (bad) (bad) cltd data16 xchg cld cmp mov jle push jae add cmp gs (bad) (bad) fwait rex.WXB js subl (bad) fwait and jge movsb cmp sbb or cmp (bad) mov lahf fsubrs mov (bad) cmp cmp (bad) lods popfq mov mov cmp pushfq pushfq xor ss add jge mov xchg mov push lret xchg mov callq xor sub add sbb imul std sub mov (bad) out push rex.WR pop rex mov rex.WRB rex.RX rex.WX and mov xor cmp xor adc in adc pop mov out fwait insl movsb repz mov and test cmpsl stos out fwait test (bad) xor rex.WR sbb in mov leaveq (bad) ds pop push test mov loop xchg sbb jge (bad) movabs adc cmpsb insb jne fwait (bad) or int3 lahf sahf rex.WXB test out or jmp push jns je jb xchg rex.RXB jbe add ss sbb mov push jo xchg mov jmpq (bad) rex.XB cvtps2pd mov sub cwtl movabs std push iret stc fwait sub fsts (bad) fistpl mov subl sub xor in and pop in jrcxz repnz add (bad) in jae rex.B mov rex.RX and lock add mov push neg push movabs cmp repz iret mov fwait jmpq (bad) lods sbb fistp add xorb xor rex.B fwait mov adcl xor and (bad) mov mov rex.RXB fisubl sbb sub adc cmp sub push clc in xchg callq xor test rex.X xchg loope mov jge mov rcll xchg fwait outsl pop (bad) pop xor (bad) jrcxz (bad) rex.X (bad) fwait mov loop (bad) xchg and out fwait gs scas imul cmp adc xchg in cmp sbb lods and (bad) (bad) sarb mov sbb orl movabs add mov (bad) (bad) xorl fwait (bad) (bad) rex.WR pop rex.WXB xchg mov xor fwait cmp rex.X retq sbb push pushq adc callq push movabs rex.B xor mov fimul (bad) fwait std add jrcxz fwait cmp sub mov fwait (bad) pop sbb cmpsl (bad) mov fwait xchg sbb adc pop xor ficomp sub rex.WRX push (bad) pushq jl stc js fwait pop (bad) jne xchg cmp (bad) xchg and fldt int adc (bad) lret sbb xchg xor jg stos shr sbb mov mull ds lea (bad) fwait rex.RX xchg push fistpl adc (bad) retq in retq fwait xchg sbb pop outsb mov jg cltd lods cmp fwait callq test loopne (bad) pop rex.RXB and mov outsl pop fwait cmpsb or mov test incb fldt mov fiadd mov (bad) (bad) pop js or rex.B icebp imul imul mov decl push rex.RXB retq rex.WRB jb (bad) stc scas pushq (bad) adc icebp push cmpsl cmp push rex.RXB pop add (bad) rclb clc pushfq pop mov int3 repz rex.RX std andl popfq rcll mov mov loope retq mov pushfq in (bad) jnp scas (bad) mov jg sahf push shrb je repnz push push rclb push rex.WR je sbb js movabs fwait (bad) add popfq xchg mov fldt pushq mov jle cmp lods jmp (bad) xchg (bad) cmp popfq jl mov push iret sbb cvtdq2ps cmc sbb fcomip fwait mov push cwtl sbb and jnp test scas jp int jb loopne enterq rex.X mov rex.W fwait movabs lods (bad) cmpsl (bad) pop (bad) cs out fwait jp jno stos pop add mov scas lea jge pushq jrcxz or xor iret popfq mov sub sbb retq (bad) sbb (bad) retq jo fwait (bad) mov and jl mov addr32 rex.WRB repnz fwait leaveq sbb imul jbe out ss mov rcr or mov cwtl sahf stc rex.WR rex adc or mov movabs (bad) cwtl mov (bad) lret ljmp adc insb fcompl push push mov add test push pop (bad) sub xor in rcrl lret mov (bad) sbb xchg fwait add xchg sbbl cmp jg mov rex.W fwait push xor sbb add mov jb push mov test (bad) fist fwait add mov jns hlt adc or lea pop cli sub (bad) je (bad) pop mov cmpsb fistpl xor pushq add cs sub repz mov rex.X lock jl mov xor (bad) dec fsubl jge (bad) fwait mov movslq mov (bad) mov lcall in in in (bad) movsl xchg es xchg cmp rex.R icebp push data16 add pop jmpq insl fwait repz sbb push add sbbl sbb stos or addr32 in (bad) xchg scas (bad) (bad) jmp popq negb xchg shll mov and inc (bad) loop mov data16 sahf test fidivl (bad) pop retq (bad) add (bad) jbe mov sbb xor fidivl pushq loop mov movabs sub xor mov pushfq adc iret sbb or cmc adc (bad) mov adc cltd icebp (bad) rex.W (bad) mov (bad) cli rcl je loope (bad) ss lret fstpt movabs mov cmp fbld rex.RB fs movabs icebp (bad) movabs rex.B pop nop rex.WR gs lods mov negl faddl enterq cmp rex.RX clc movabs cmp popfq sub rex.X (bad) mov fcmovnbe clc (bad) fs xchg rex.XB xor or out data16 jrcxz movaps in or movsb push mov (bad) xchg mov (bad) (bad) pop idiv mov and fildl mov adc fcompl (bad) rex.WRB sbb push in rex.WRB jb jbe js mov jmpq pop mov or sarb jle test loop rex.WB rex.WRXB pop stos js stos movabs loope mov sbb fmull add cmpsb repz add imul cltd jp mov or rex.X ss lahf sbb fildl retq pop js scas mov jno jl lods xchg out xor pop jne (bad) andl cmp jmpq retq (bad) out fs adc or lods push and (bad) rex.WRX addr32 xchg xchg fs or jne mov (bad) popfq scas (bad) sbb std adc repnz xchg fstpt sbb (bad) hlt add mov sbb rex.RXB sub cmp jne (bad) xchg adc adc insb pushfq cmp out add sbb negb or (bad) in mov (bad) cmpsl or mov in repz cltd pop test mov rex.RXB iret jg mov xchg in mov lock loope movabs (bad) pushq mov cld fisttpl or rex.X ds rex.RXB sbb (bad) in or fiadd add (bad) sub xchg sbb xchg (bad) repnz pushq sbb (bad) xor int ja (bad) cmpsl push lret and (bad) out popfq rex.RX test mov sbb retq popfq mov mov mov rex.WRX int (bad) mov js and popfq not (bad) xor cwtl jle stc (bad) pushq xchg push xor rorl out retq es fcomps loope imul xor xchg add xchg (bad) mov jns movabs jg pop jbe or jbe test sub mov (bad) fstp fcompl sahf orb movb or fstpl (bad) sbbl sahf rex.WB rex.WRB sbb (bad) in jo cmp fs scas jg mov pop int iret rex.WR rex.XB adc add rex.XB cltd (bad) mov sbb fstpl mov xor xchg rex.WXB rex.WRB hlt andl xor xor in (bad) and scas int3 mov (bad) push je ficomp in or mov (bad) xor cwtl xchg loop jns pushfq fsubl rorb (bad) sub lahf sahf repnz out stos rex.X mov jbe xor retq fcmovu mov or pop jmpq sbb lods loope push pop loop sbb imul mov sar (bad) xchg adc sbb push mov adcb bnd or (bad) enterq (bad) cmc and in sbb popfq decb jl push (bad) (bad) loope mov xor jg adc push mov fwait jp jbe adc jo sbb leaveq mov test pop lods mov xchg cld adc scas es or fnstenv pop lock or cmp sbb rex.WRXB rex.X pop cmpsb adc push (bad) mov rorb xor sub mov rex.WB loop adcb hlt (bad) out pushq mov push mov ffreep (bad) pushq (bad) mov int out js (bad) xchg fidiv std int movslq test mov (bad) leaveq loopne jge add (bad) xchg mov pop push and add sub mov fmull adc pushq push (bad) movabs adc sbb loop (bad) out cmp (bad) rex.RB movsl xor sahf andl (bad) iret and std int3 push icebp leaveq mov popfq (bad) (bad) cltd cwtl sahf xchg jmp push (bad) (bad) je jns mov mov lfs rex.X cmpsb imul (bad) cli rex.WR fsubl mov (bad) cld fadd xor (bad) mov movsb and rex.W loop ljmp jg stos mov (bad) imul je pushfq (bad) xchg movabs lea (bad) adc rcrb jb fstps pop add (bad) fildl (bad) sbb in xchg (bad) rex.XB iret jg rex.WRXB faddl cmp xor fstp sbb imul mov movslq sbb pushfw mov movabs iret imul jl sbb out or xor (bad) sbb or outsl movabs ficomp (bad) rex.WX (bad) rex.WB push repz sar xchg rex.XB rex.WR scas sub (bad) jae and mov imul sbb mov jnp mov mov (bad) out andb in (bad) movslq movsb movabs rex.RXB test and mov mov pop cmp gs bnd push enterq hlt rex.WX pop mov ss loop std sbbl ds (bad) push out cmp or in shl cmp xor lret cmp mov adc cmpsb mov push (bad) cmp btl pop (bad) (bad) rex.WRXB jg push adc adc lods add mov (bad) (bad) mov cmp fwait sub (bad) sub add mov adc rol rex.R (bad) push movabs sbb movabs (bad) negb pop adc fbstp cwtl lods push es sbb pushfq lea mov out xor rex.RB add (bad) je cmp mov add jmpq ljmp sbb mov cmc repz jle rex.WRB cmpsb movslq clc enterq (bad) pop mov outsb test pushfq lahf cltd in outsl mov (bad) jp push cmp seta mov rex.WRX push jno jl repz sub rex.WB (bad) and stc (bad) (bad) shlb mov mulb mov callq cwtl faddl stos xor popfq test addr32 cld sub xor or out (bad) or test xor imul int3 mov mov iret and lods rex.WXB out in sahf or or jmp leaveq rex.WRX pushq pop mov hlt test mov outsb imul sbb gs imul fstpl push std rex.X ss fstpt and nop mov lret jns in (bad) sahf stc jnp lret cmp (bad) fninit jns sarl jb (bad) es rex.WR (bad) icebp (bad) sbb adc callq sbb pushq rex callq push callq adc movabs (bad) jns rcrb fmul pop loop scas fiadd and pop push in hlt rex.WX rex.WR and sbb mov sbb stos mov stos cmp add lods jnp fadds sbb test cmp (bad) adc movsl rex.WXB hlt adc xchg xchg mov push rex.WRXB pop (bad) (bad) cs (bad) xor xchg jge (bad) mov and fstps rex.XB lret int3 addr32 push lret (bad) (bad) lea int xor and mov in xchg repz fs movabs stos xchg (bad) mov pop mov xchg jmp mov xchg std mov fnstsw jbe sahf scas rex.XB lret xorl lret fldenv push nop mov xchg (bad) movslq cmpsl and mov rol push (bad) adc pop (bad) xor repnz adc hlt loopne jle sti int3 out popfq (bad) imull es mov addr32 retq jrcxz sbb std mov (bad) (bad) fimull (bad) fs mov (bad) rclb mov (bad) pushq (bad) in in data16 jne and (bad) and sbb or (bad) pop pop ds enterq and int3 mov out cmpsb rex.RX movslq rex.RB sbb sub sti adcb jle callq scas (bad) movsl es jp cmp (bad) jmpq popfq (bad) fwait pop test lret xlat mov jbe add or adc jl (bad) push fwait test leaveq fnstenv in movabs sub fbld fwait gs rol (bad) pop jbe mov stc adc add (bad) sti (bad) add pop rex.WRXB pushfq lods stos mov cmc cs xor lods cwtl int cmpsb fwait adc mov sbbb rex.WR adc sbb test jno fildl cmp lret xchg (bad) cltd sbb mov movabs stos add rex.WXB sub (bad) shll xchg jmpq (bad) pushfq fadd movabs add and rex.RX out xor lock in (bad) fwait in cmp enterq or mov (bad) xchg rex.WRXB rex.RXB fwait loopne sbb stos jmpq rex.WXB imull or sbbl adc cmp xchg sub retq (bad) fwait sbb fstpl sbb rex.WRX sbb cmp cltd rex.RB pushfq rcl in repnz in sbb rex.WRX (bad) fildl mov (bad) pushfq outsl mov xchg out (bad) imul popfq (bad) mov (bad) rex.W sub addr32 jno pop movabs out scas (bad) callq xor mov popfq ja rcrl fwait xor add imul mov fcmovnbe xlat test jl jg js out pop loopne push jns xlat xchg imul (bad) data16 test test (bad) mov fwait sbb lock (bad) leaveq rex.RXB mov push (bad) cmpl cli mov fwait cmp movabs sub xchg pop and xchg push rex.RX repnz cmp pop jg (bad) rex.WX cmp (bad) fcomip xchg push repz add pop in (bad) je add sbb outsb (bad) lret repz xchg adc stos (bad) and cltd nop pushq clc add fwait (bad) (bad) sbb out pop or repnz sti adc int int3 (bad) addl cmc mov fistl test rorb out sbb mov adc hlt icebp stc adc cltd or fwait mov add jno push push fwait callq (bad) lret lods sahf retq jae adc sbb mov (bad) sti and (bad) rex.RXB fwait (bad) mov movslq popfq lock xor mov xor (bad) fwait outsb (bad) out clc (bad) mov cmp movabs out fwait and insb mov sbb mov add out setnp add test fsubrp fwait sub cmp je popfq mov and test push rex lods fwait add xor ss adc xchg fwait mov fcompl sub repz (bad) adc sbb pushfq outsb cmp sbb (bad) push lret mov fwait sar stos data16 sub adcl (bad) mov adc pop out sub xchg mov repnz retq callq pushfq xchg (bad) mov jmp in negl lret jl xchg lahf fisub or pop fwait xchg test push sbb mov sub (bad) insl sbb gs jbe rorb push movabs mov sahf and sbb adc mov std jmpq test cmp ficomp rex.WX rex.WR fwait cmp sub rex.WXB sub adc xchg sbb rex.B fwait rex.R (bad) retq insl iret xchg fldt add (bad) or add fwait sbb in std mov sbb pop outsl pop rex.WB rex.WRX fwait sub popfq jns mov sbb mov fwait stos loopne sbb loope rorl insb shrl (bad) fwait rex.RX fwait rex.WXB repz fcoml sbb (bad) (bad) mov xchg adc pushq mov push sbb xchg movabs and mov mov lahf outsb rcrl add jnp mov (bad) test movabs lahf add rex.WB fisubl (bad) sbb fs (bad) retq pop outsb xor (bad) cld fsubrp (bad) in outsb hlt imul and cmp (bad) (bad) repnz lods (bad) (bad) rex.X xor sub rex.RX xor fsubs jl jbe rex.WRB mov test push (bad) sarl clc mov mov pop sub es mov lock (bad) cmc mov nop rcrl mov cld test movslq rex.WRXB (bad) stos divl add (bad) jno add xchg adcb (bad) mov retq xchg xchg push mov fisubr rex.W out (bad) (bad) movsb test rex.RB (bad) out sub (bad) cmp and push ss (bad) jge sbb jbe cltd (bad) adc iret cs (bad) (bad) add rex.WRX mov sbb addr32 add xor (bad) out (bad) sbb icebp sub paddd jns cmp add cld and addl rex.RX pop pop pop add loopne insb cmp adc fldl movslq pushfq insb imul shlb test (bad) out and in cli addr32 (bad) rex.RB push loope icebp fisubr mov cmpsl mov sub (bad) in (bad) xchg xchg rex.RB (bad) or pop push and add sbb std xlat repz add mov scas pushq cmp fisub push cmpsb or xor lret pop (bad) retq pushq pop repz cmc (bad) cli sbb jb movabs ficoml pushfq flds (bad) jmpq adc pop and push (bad) and mov mov loope hlt (bad) or lahf (bad) pop cmp (bad) pushq xchg fistpll cmp loope jmpq cs sbb movslq (bad) xor cmc fwait and out lea nop movsl in fwait jae insl or push pushfq jle fldl rex.WRX callq insb out fcompl adc rex.WRXB and (bad) sbb pushq (bad) (bad) rex.WRXB out xor lea data16 (bad) fnstcw (bad) lock xor in or rex.WX clc fwait movabs add outsb (bad) jno movabs add scas fwait sbb (bad) fwait pop jo (bad) mov sub mov movsb jae retq fisub stc or cmpsb adc in sbb cmpsl (bad) shll stos add mov xchg cmp fwait cmp mov iret (bad) movsb (bad) sti mov in stos sbb jle (bad) mov fwait lods fstl xor test lock jle enterq mov rex.WRB fwait popfq movslq jl sbb adc pop add mov test addr32 xchg imull adc mov lods loop (bad) (bad) out add jmp and (bad) je sub xor and cwtl sub cmp jmp push sub xchg sbb and test cltd xchg xchg xlat or xchg jb rolb int3 out (bad) (bad) enterq xor test cmp pop and movabs cmp fwait (bad) mov jb test sub cltd rex.X fs jmp xchg ss mov movsb fistpl xor mov pop idivl sub lods (bad) xor clc mov loop sbb and mov fwait rex.WRXB jge sti jrcxz push (bad) pop adc add (bad) rex.WXB rex.WRX fwait (bad) shlb jle or add adc btr fs lret ds idivb mov xlat sub and hlt pop mov add lods mov sti in (bad) jae (bad) movabs (bad) cld mov jp push xchg mov fwait add lret std and jo jrcxz add addr32 xlat (bad) sar add mov rex.WXB fwait jne and cmpsl fcompl lret mov fiaddl pop retq pushfq add loope (bad) movslq sbb or sti movabs add fidivrl cmpsl mov hlt mov lret fwait xor pushq sub jg leaveq or (bad) movabs adc or fwait (bad) rex.WX movabs mov cmp jbe mov (bad) jge stc or loop icebp pop sbb (bad) (bad) and insb cmpsb xor mov (bad) sbb cmp adc pop fwait out cmpsl xor fwait pop lret sbb sbb adc add jae pushfq jno mov mov movabs jle adc movabs mov cmpsb push fwait mov lods lods and loopne rex.RXB fstpl scas (bad) (bad) repz push enterq adc sub sbb (bad) cmc mov mov insb sbb sub (bad) mov fwait pushq adc jg fucomi pop cmp jmpq movabs lret sti andb rex.WX pop rex.WB (bad) popfq out add xor movabs test mov (bad) xor xlat (bad) imul andl insb sahf in mov sbb sbb (bad) in rcrb lret mov jle add callq jmpq cld (bad) pop sbb fwait sub loope mov mov hlt mov jmp test (bad) (bad) push sub movsb (bad) (bad) pushfq gs fwait mov rex.WX fwait rex.WB mov rcrl cmpsl (bad) popfq mov movslq mov (bad) repz ds and fwait data16 (bad) (bad) int fwait cli mov cmp out sbb sahf sbb cmpsb xchg xchg sbb movslq lret out mov rex.RXB mov xchg xchg rex.WR fwait cli fcmovne pushq stos std iret mov or mov sbb pop cmp or movsb jrcxz fwait rex.RB (bad) sbb xchg outsb jnp push movabs sbb stos int div and rex.XB in popfq rex.WXB test sti cmp jns or (bad) rex.B xchg push (bad) stc ffreep add and loopne sbb enterq movabs rex.XB mov pop rex.WRB shll test xor xchg divl pushq or int3 movsl jnp in xor cmp (bad) pop mov (bad) xchg repnz adc shlb in mov pushq js (bad) pushq mov push rex.WB sbb scas icebp jrcxz push (bad) push rol fimull xchg sahf stos mov mov xchg movslq (bad) (bad) fdivrl pop pop movsl popfq pop ror loopne add mov in pop pop (bad) xchg ds test mov rex.WRX retq mov or xor (bad) nop xchg loop sub mov in add push (bad) xor mov imul sbb movabs pushq fisubrl lret (bad) pop jrcxz es loop (bad) push add sbb mov adc rex.B add retq clc int jge shl mov sbb (bad) cmp sahf icebp test in fwait stos xchg xor add pop movabs push xchg stos (bad) outsb jb xchg movabs movsl and sub sbb insl jae (bad) test test movabs scas outsb fwait and adc imul stos (bad) xor push mov hlt and cmp stc cwtl fwait lahf jrcxz or adc popfq sub test (bad) leaveq (bad) lcall cltd mov insl rex.RX pop callq in nop mov outsb xorl add pop cs or rex.RXB jns stc rex.WRB fwait je push (bad) movabs sahf ja rex.WRB loopne mov xchg lret sbb rex.WRX xchg mov imul outsb sbb add rex.XB (bad) mov fdivrs mov fwait outsl adc roll xchg and mov (bad) or movabs sti mov rex.R fwait jp retq mov pop in icebp fwait clc or stos ss xor sbb icebp cltd xor and fildl and fwait sub mov fwait mov or hlt sbb (bad) loope rex.RXB cmpl movsb data16 fwait cld subl mov fcoms movabs sbb roll lahf or movsl es pushfq pop repnz add mov jmp mov outsb (bad) rcrb rex.W pop out (bad) sbb (bad) movabs cmc (bad) out adc fwait shll (bad) (bad) (bad) mov sti int mov fwait mov adc push (bad) mov repnz fwait je in fcos adc pop retq stos cmp (bad) mov fwait lahf rex xor insl movabs iret or xor leaveq rex pop fwait (bad) mov (bad) mov cmpsb xchg jns jl or add (bad) std add es subl xor out jmp xor cld (bad) mov fwait (bad) or sub sbb sub shl mov repz sub out mov cmp fwait sub callq retq (bad) in sti out fs (bad) sub mov lcall xor scas xorl cmp mov js jrcxz jmp rex.WRB rex.WX flds (bad) sbb insb callq icebp rex.RX (bad) sahf (bad) or xlat rcl movabs xchg push notl fsubl mov (bad) jl fisttpl pinsrw (bad) mov insb xor (bad) (bad) jmp fldl cmp push fwait pmaxub pushfq notb (bad) int3 adc test (bad) (bad) mov (bad) mov decl mov fwait (bad) pushq es mov fwait jg rex.RX or hlt xchg mov repz jge movsb out js sbb sub mov sub jmpq ja cld pushfq in and rex.WRXB mov cmp mov push push cmpsb lods frstor mov jne pop or adc rex.WRX fwait sbb std push xor adc pop pushq mov subl fisttpl incl xchg (bad) (bad) rcrl cltd (bad) and mov xchg and jo sbb (bad) retq xchg popfq es (bad) (bad) jmp imul or iret (bad) mov enterq je movslq es cmc cmpsl rorl mov in fcoml (bad) (bad) je add (bad) xlat loopne enterq xor (bad) and jg cmp stos cmpsb xchg (bad) scas pop jp mov jne xor mov outsl jnp mov movabs fist mov (bad) mov xchg movabs (bad) cmpsl pushq outsl xchg callq jne lods sub lret retq imul loop mov xor out mov rex.XB sbb cmp popfq sbb or rex std rex.WXB (bad) rol sbb adcl pushfq fadds test pushq (bad) lcall movabs sbb rcr rex.RB jae jp int mov jle cltd test sbb addr32 mul mov rex.RX cltd or fsub pop mov fnstsw mov fmulp (bad) repnz std (bad) mov xor sbb (bad) jb jl mov loop pop sub cmp xchg and adc std pop int3 add xchg popfq leaveq cli cmp cltd add je (bad) mul icebp gs in fidivrl sbb mov cmp fcomip (bad) mov shrl and cmpsb imul lods (bad) mov push rex.RXB or rex.R loope xchg addr32 fwait int rcr add (bad) test (bad) sbb adc fwait mov (bad) or and cmp loopne rex (bad) js fsub sbb (bad) xor (bad) or addr32 (bad) mov in fwait xchg clc lock xchg sub and mov lret pushfq mov adc sahf outsl sti js stos sbb iret out callq fwait loope movsb pop shll xlat rex.WX rex.WXB cmp cmp rex.X or ja xchg pushq subl jno jmp fwait rex.WRX and je add lahf xchg (bad) sbb sar fst rex.X ss fwait or scas add lock or decl jbe sbb and out fwait adc rorl rex.RB rex.W fsubl test mov sar sbb sbb je mov test out sbb pushq repz mov mov cmc (bad) xchg push fwait lock movabs cmp jae or rex.WRX pop movabs xchg scas movabs fmul sbb mov push (bad) lret pushfq out cwtl (bad) icebp sti movsb stos movabs mov xchg xor rex.WRB rex.RB push outsb cmp mov sti mov mov or fwait jmp mov jmp (bad) and mov fsubs rcr push mov fiadd (bad) lret rclb sbb rorl cmp rex.WXB data16 fstp fistl icebp leaveq fwait pop outsb (bad) stc mov jle sbb (bad) fcmovne xor jns xchg lods adc adc mov ja cwtl pop pop rex.WX in (bad) fiadd shrl addr32 sbb xor fistl jns mov jbe (bad) push faddl sbb sbb js (bad) sub and cmp sbb andl stos sti loope mov sbb scas add mul (bad) sti fadd insb mov fild sbb pushq lea (bad) mov test (bad) cltd imul adc rex.WX stos (bad) xchg mov lods sbb rex.WB and (bad) sbb jmpq xchg push xor in pop sbb lock jne pushq in retq testl push mov sbb pop ss mov jle xchg fidivrl roll cmp add pushfq mov sbbb xchg cmp adc jg sbb mov rolb ss (bad) cmpsl pop adc rex.WB rex (bad) and lretq mov (bad) xchg hlt sbb movabs mov insb or cmpsb (bad) shrb jp iret xor cmp rex.RX cmc sbb std rex adc (bad) push outsl mov std push adc pop sbb (bad) lret test sahf mov pop rex.RXB jb xlat mov mov ds rex.X es mov (bad) popfq (bad) push xchg pushq loope rex.XB mov pop mul repnz sbb (bad) fisub int3 pop int add (bad) fiaddl push mov or sbb mov jns cmp (bad) jae callq andb (bad) xor jae sar addr32 cmp outsb (bad) fstl out sbb xchg xorb and jo sub mov callq sarb stos je jnp xchg (bad) repnz leaveq sbbb addr32 (bad) xchg out test adc (bad) jle mov sbb (bad) popfq insb mov or or int cmp es rex.WX ja (bad) (bad) lret sbb fbstp (bad) sbb pop in int3 rex.WB or xor xor or push js mov pop jge movabs es rep loope sub es mov frstor xor gs (bad) outsb xor or cwtl jmp jno sbb outsl pop add fwait jge cmpsb or fsave jmpq xchg sti movslq mov cmp fwait xchg insb imul enterq jle rolb rex.WRXB sub push mov (bad) fistpll insb or sahf jne rol pop mov lret ljmp loopne jne jns iret rex.WB out sbb in ds repz mov cltd (bad) and cmp xchg mov fwait (bad) (bad) mov mov (bad) lret cmp rex.RX (bad) adc psubq scas stos jge sbb cmpsl (bad) and imul leaveq mull add movabs icebp cmp repz pop rex.WRX out fwait sub (bad) sbb jrcxz sbb mov subl int3 mov pop jb adc in addl (bad) sbb push loopne xchg (bad) popfq sub jae rex.R mov sbb rex.WRX fucomi (bad) push movabs sub jp sbb out jo or and jno xchg pop sarb cmp (bad) (bad) and std sbb xlat in fistpl shrb pop rex.RB pop nop xchg movabs sbb stc loop cmp jmpq insl fsubrl jns stos rcr rex.RXB mov out in lret jne callq sti adc imulb adcl push fnstsw sbb jl add shl fldt rex.WX (bad) cli sub mov lret sbb (bad) ss ficom jb shlb (bad) faddl int3 test mov or sbb rex.WRX rex.RX rex.X scas in (bad) loopne jrcxz loop loop cltd in sbb mov xor mov xor pop pop add jl sti callq in or loop mov rex.X rex.WB pop (bad) cs retq (bad) (bad) movabs test scas xor and (bad) loop fiadd mov outsb and rex.WRB cvttps2pi loop add mov ss sbb and mov and and hlt (bad) hlt fbstp mov adc sbb (bad) fisttpl push rep adc push lock pop fst adc (bad) lods cmp int3 fs (bad) negw loop cld sbb xor xor sbb pop imul jbe jae jnp in add leaveq jno iret pop cwtl sbb jb sbb (bad) loop (bad) or sbb mov retq sbb cld (bad) pop push idivl push cmp jg mov mov push mov sahf (bad) add (bad) (bad) callq cmp scas pop jrcxz stc mov in (bad) jb lea cmpsb add cwtl sahf jrcxz (bad) mov jne cmc jl (bad) (bad) sbb pushq mov xchg add sbbl shlb movl (bad) sub xchg rex.RB repnz rex.X xor sahf jl xchg repnz mov (bad) movsl (bad) pushq vpackssdw (bad) add rex.RX sbb lea data16 xor (bad) out (bad) sbb jb pop and mov rex.WRXB in or rex.X (bad) mov jg rorl (bad) rex.WXB sbb sub out xor in sbb cwtl in (bad) fstpt popfq cmp push rex.W loope rcr pop sub sahf stos (bad) rex.WB and mov test (bad) lret (bad) pop mov rex.X sub test cmpsl loop xor (bad) xor sbb outsl pop loope add (bad) popfq (bad) rex.XB enterq cltd xchg lods pop adc jae sbb sbb sub movabs adc lret ficomp mov pushq rex.WX cmpxchg sahf or adcb (bad) (bad) jno (bad) retq (bad) int loopne (bad) std lea adc rex.RX pop out xor or xchg cltd (bad) (bad) (bad) rolb jmpq fldl xor in sub (bad) int3 (bad) fdivp data16 (bad) cmp mull (bad) mov test sub (bad) movabs jmpq (bad) cltd sbb or push shr loope rorl lret in push fs (bad) pop push std add pop sti (bad) jnp xor lods movsb cmp push popfq rol jmpq jmpq add mov rex.RB fwait out (bad) int3 icebp (bad) rex.RXB xchg mov rex.X retq fwait jmp sub mov fcomps out jo fwait (bad) (bad) outsl pop sub xchg loopne xchg rex.WXB fwait cmp push (bad) mov fwait pop and lahf pushq fcoml cwtl loope ja (bad) fwait (bad) and sbb insl callq mov fwait push sbb mov or and repz and jbe (bad) in mov cmpsl cli add stos add insl sub mov xor decb jl sahf (bad) push jns retq cmp (bad) (bad) sbb mov xchg mov insl add (bad) sahf mov add cmp mov sbb test add sbb push movslq out fildl test stos adc rex.R rex.RB cmp outsb xchg mov rex.W and pushfq (bad) lahf cmpsb push cmp je movsb mov and (bad) (bad) jae pop (bad) sarl and add fwait lods (bad) in jge xchg cmp sub sub adc add push (bad) pop (bad) test (bad) mov cmpl pop test mov lret callq loope add fmull and jg sbb xchg jl mov xchg xor movslq lcall jno or xchg (bad) dec mov lods xchg mov adc or (bad) lret fstpl xchg fwait ljmp sbb xchg push push adc sarb rex.WRX sub rorl int fldt sub fwait lret sbb jno movabs sub adc mov jb or and gs movl fs (bad) ja sar add push loope jne push (bad) movabs test rex.W or (bad) jmp popfq fimul mov int cmp mov callq retq (bad) fwait cltd or and movsb add rex.B pushfq (bad) cmc cmp (bad) insl xchg adc fcomi data16 pop jbe fwait (bad) test and fwait rex.WRB jno mov pop mov roll in (bad) xchg adc je mov jnp rcr fwait mov sti ss (bad) (bad) fwait mov sub mov out xchg in (bad) mov or adc loopne insb mov add (bad) rcrl icebp fwait (bad) jrcxz xlat (bad) jbe push and fwait sti xor rex stos sub jnp rex.WRB (bad) adc cwtl rcrb (bad) cltd sahf push fdivs (bad) pop cwtl (bad) mov int3 fwait xlat jle xor movabs loope xchg rex.RXB mov xchg cld outsl (bad) (bad) (bad) fwait mov out cmpsb cmp (bad) xchg mov jb jo mov rex.WRB push pop sub xchg fstpl or push hlt xchg xchg rex.R mov xchg iret and xchg ds sbb sti (bad) pop (bad) mov rex.WR (bad) fucomi pop rex.WB cmp jae rex.RX cmp add leaveq test sub sbb (bad) pushq rex.RB rex.WR sub sbb scas add shlb mov jne callq sbb clc loope lods rex.W fs setg pushq or sub negl (bad) mov (bad) hlt out xor mov rex.WRX js cld es ja fwait jae scas or repnz xlat fwait rex.RXB xor in rex.X sbb push pop pushq neg jbe loope sub movabs fcoms js jge (bad) rex.WRX (bad) scas movabs rex.W (bad) popfq rex.RXB mov cld lahf rol mov fwait out sub adc (bad) jno pop pushq mov fstl mov xor out rex.RB rcr mov xor mov and es pop sbb rex.R lret (bad) icebp fwait enterq xchg rex.X loop ds mov and rex.B rex fwait retq lret adc jrcxz xor (bad) (bad) add jns (bad) sti pop movabs fwait loop cltd (bad) adc sbb scas (bad) cmp fwait (bad) xchg movabs fwait out jmp setp (bad) rex.XB (bad) leaveq fwait cmpsb xchg sub (bad) or cmp jrcxz mov pop fldlg2 sti mov rex.X fwait cltd (bad) rorb (bad) and cmp (bad) mov rcrl callq fadd jo (bad) in sbb popfq xor (bad) rex.R mov shll mov sub mov rex.WXB xchg cmpsl movabs xor mov pop (bad) (bad) adc fdivs cmc loopne (bad) negl push or mov rex.WB xor std (bad) jrcxz push (bad) lahf sbb lcall pop fistl repnz pop cs shl mov pushq mov and sbb jbe ds jns cmp repz loop ja rolb rex.WR (bad) cltd (bad) (bad) test rex.WRB int jne or hlt cli or lret out (bad) add push fwait out nop xor out xchg fwait xchg mov adc (bad) imul (bad) jne mov mov fwait jns (bad) movsl scas sbb (bad) cmp add sbb test mov in xor and in (bad) scas movslq push pop insl adc (bad) movabs hlt fwait pop jns pop lret imul es movabs jrcxz (bad) in and xchg fwait movsb xchg callq fwait in rex.WR cmp cltd addr32 subl ss (bad) cmp insb (bad) pop ds leaveq jns movslq stos xor rex.X fwait mov mov rex.RXB sbb mov sbbb pop push push jbe lret jo mov cmp sub repnz divl (bad) int3 pop std out (bad) sbb retq mov cmc fildl xor es icebp in adc (bad) xchg xor fwait or adc rex.RXB pushfq retq pop fildl stos pushq mov in cmp callq in jle fwait xor movabs (bad) xchg mov outsl xor and sahf fsubrl stos pop cmp mov sbb fimull (bad) rex.XB rex.WR es nop add stos add xor movsl and (bad) fcom rex.WXB pushfq xchg sub cmp cltd out rex sbb icebp rex.WX imul and or rex.WXB callq jl out pushq iret lods (bad) cmp pop mov fwait xor jg jb sti or (bad) in or sti mov sbb test add data16 pop stos mov fwait or negb fwait movabs movsb shl mov jrcxz (bad) movabs (bad) rex.W repnz andl xchg sub rcrl pop fwait xchg insb fldpi scas cltd mov mov jo (bad) (bad) add rex.WX fwait loop test cmp add fwait xor fucomi and add pop js or lahf orl rex.RXB stos out add jo jns push je in callq (bad) rex.W and out and fildl (bad) xor js fs lahf or mov (bad) cmpsb pop add mov jrcxz or (bad) push sbb mov movslq fwait sub fiaddl fwait cmp add cmpl push xor fwait mov (bad) (bad) push fs xor mov icebp xchg and fldcw stos (bad) push (bad) fwait jnp xchg xchg and xlat ds imul (bad) test and mov movsl xlat xchg flds xchg rorl in push icebp idivl lret rex lock fwait jae rex.WB nop int3 xor push shrl mov push pop flds or icebp mov add adc sbb fwait mov (bad) or (bad) movabs cmpsb adc xlat stos lret addr32 jno andl jg jmpq cltd (bad) lret repz sbb xor lods (bad) addr32 movabs (bad) mov push add repz xor or fwait xor ja lods sbb sbb and push divb in pop sbb sub fwait (bad) (bad) cmp cltd rex sub jp mov test jae xchg leaveq mov rcll mov cmpsl adc xor rex.B fs or (bad) push stos nop (bad) cli push push sarl cmc xchg xor sti pop and sbb nop rex.WB xor cwtl in (bad) or xchg outsl (bad) pushq xchg add insb sti or movsl rex.RXB xchg jbe mov movabs jrcxz test mov je (bad) fisttpl sbb test (bad) rex.WXB sti adc jrcxz cltd lret mov scas fwait in pushq sahf adc and sub adc fwait xlat mov in sbb jo add and sub adc pushq or mov (bad) (bad) faddl sbb sub (bad) movsl mov fist in xor push mov fistp jne in rex.RXB rex.WR pop fcom sbb push adc mov (bad) jb pushq xchg push callq (bad) (bad) xor sahf scas hlt outsl sbb loopne scas rex.XB repnz (bad) rex.WR jb pushq pop pop incb sbb pop out jae (bad) negb cmp (bad) cmp in add (bad) fisttpl pop stos xchg xor sbb shrb sub mov pushfq andl and pop pop (bad) repz (bad) jno test xchg pushq and (bad) sbb fidiv pushq (bad) int xchg pop fwait xchg pop rex.RX xchg (bad) push sti jge push (bad) (bad) (bad) sti iret mov movabs scas xchg fwait push (bad) mov (bad) iret outsl fldt movabs movabs mov fwait (bad) int push std adc sbbl pop mov pop sub cmp fwait jp loopne cmc cmp sbb push cld scas or (bad) addr32 rcr js add sbb xchg fisttpl mov rol (bad) loope in fwait lea sbb std (bad) in add sub fwait sbb (bad) and shr (bad) push in push jge or and rex.WRX sar out jrcxz (bad) movsl jge push pop pushq popfq (bad) loopne adc (bad) imul (bad) loopne fwait xor mov mov iret stos cmc (bad) fiaddl and icebp cmova xor adc outsb push jle pop rex.WRB addr32 and fwait lahf fisubrl xor out xor fidivr add push (bad) rex.RXB push mov rex.W leaveq cmpsb rex.B fwait pushq add scas rcrl addr32 add adc mov fs movslq popq push rex.WXB fwait push movsl repz jmpq and sbbl pop rex.WX stos cwtl add scas fiaddl (bad) mov mov idiv cmpsl sbb rex rex.WX xchg rex.WRXB jle lods pop gs adc (bad) jnp lea fwait int3 sbb mov sub fistpl movsb pop and sbb rex.W fwait cmp (bad) mov xor iret rex.X sar and fwait cltd rex.WXB or loop rex.WRB sub or xchg mov pop pop xchg pop and cmp movabs test (bad) jno xor fwait add cmc sub mov and (bad) popq (bad) movsl icebp fwait sub add or (bad) mov mov movabs fsubp mov negb cld (bad) cltd movsl sahf rex.WB scas in add adc fwait mov (bad) xor fwait cmp or sahf (bad) (bad) popfq mov add inc sbb idivl and sub sbb xor (bad) cmp test leaveq cvtpi2ps or xchg mov insl ror xchg xchg subl mov (bad) (bad) xchg (bad) std fwait adc jns loope adc sbb jbe,pn mov sbb sbb orl in pop mov subb lods (bad) (bad) pushq or or test movabs (bad) fucomip mov loope push js rex.R outsl mov fwait in (bad) (bad) or rex.WXB pop and pushq callq xor (bad) (bad) jns sbb rex.WB int (bad) fwait insl fs adc (bad) addl (bad) movabs out mov imul jg jp mov outsl lock push pushfq in cmp (bad) cmc adc mov xor xor repz pop mov push loop jl jl orb (bad) push sbb int3 (bad) js (bad) dec addl (bad) add outsb jnp (bad) (bad) leaveq shrl movabs cs sbb cwtl jb (bad) movslq cmp hlt loop sub adc out addr32 sbb and and out (bad) (bad) data16 add sbb fnsave callq rex.WRXB sub mov sahf xor out push repz mulb callq push (bad) fdivl jne stc pop (bad) push imul repnz gs lret shll or (bad) fsubs repz rex.RX mov outsb sbbl cld out repnz cwtl jl nop pmullw (bad) mov movslq iret sti (bad) test xor cld adc rex.X ss sub insl pop in pop repz icebp pop test xchg frstors (bad) jge (bad) push pushfq pushfq pushq xchg scas or (bad) sbb mov and mov sbb ja xlat lods sbb mov pushfq xor cltd rex.WB outsl fwait imull (bad) jo xchg (bad) rcl mov outsb repz andl cmp mov rex.WRX sub (bad) test rex.XB and (bad) push mov cmp idivb mov push mov sbb lock mov test lret (bad) or cld cmp std fbld push rex.XB popfq pop sbb (bad) insl movabs int3 pop shll cmpsl adc jne sahf out jle rex.WRX and (bad) (bad) mov cwtl out fcmovu add (bad) repz xor push scas fst pop push retq cld insb retq (bad) xor jp xor (bad) xchg (bad) int xchg retq (bad) mov (bad) pop sbb rex.WB xor clc ds xchg (bad) jae mov rex.W pop enterq fsub rex.RB stc ja incb or jp scas (bad) decl (bad) sbb rex.WRXB sub pushq sbb enterq mov loope test fstpl mov cwtl pop insl scas movsb add retq xor icebp fwait ja push and fwait shrb add mov pop jge movabs fwait or sub repnz mov jmpq retq sub jbe imul mov movabs jrcxz outsb stc mov out adc (bad) xchg (bad) callq repz xor gs lock rex.RX mov adc (bad) mov shlb (bad) movabs cmp adc and adc lret sbb mov out negb mov fwait (bad) rorb sub (bad) (bad) (bad) pop lret cmp sbb in xor or and andb movabs rex.WRXB sbb xor out fwait push cmp movsb xchg ja (bad) cltd fwait (bad) sarl (bad) or adc jge or cmpsb xor push and movabs (bad) fwait shll jb adc jbe cltd cmp shr movslq jmp sub fistpl mov mov fwait and (bad) test (bad) lret fwait sbb int shlb xor fwait imul pop lret fwait (bad) fs push loopne imul imul fwait int rex.WRX rex.RB pushq (bad) jo (bad) mov pop imul fwait rex.RXB or rex.X repnz pushq repz out test fwait xchg rex.WRX fdivp in je je push sub push pushfq xchg fdivr pushfq sub loopne (bad) and mov test mov (bad) outsl (bad) int3 retq rex.B loop adcl pop (bad) out (bad) movabs std scas cmp jne addr32 mov pop (bad) loopne nop and (bad) mov xchg push repnz or mov sti push jbe cmp loop pushfq imul mov sbb mov (bad) (bad) nop rex.WRB push mov (bad) cli push repnz pop out (bad) pushq cmp scas (bad) cmp mov jl pushfq fimul pushq mov (bad) out xchg (bad) fnstcw jno mov add bnd ss pop sub cs fildl lahf cltd mov fisubr (bad) add fisttpll (bad) in and (bad) cmp ja or (bad) movabs pop rex.X jno fnstcw jl rex.WRX sub jns cmp push adc add fisttpl repz sar sbb and sbb insb pop adc (bad) sbb lock pop (bad) (bad) pop (bad) (bad) (bad) pop jae xchg xlat pop pop sar push fwait movabs xchg retq sahf mov jg rex.XB rex.RXB in add (bad) cmp rex.R mov jmpq pop mov and mov lods and subb idiv (bad) insl (bad) sbb out fldt xchg cmpsb (bad) and je or xchg (bad) or fwait ja imul callq sahf subl hlt cmc pop xor cmpl cmp cmp fistp mov movabs jge fwait or push scas cmpsb lahf pop mov divb test or sub jbe (bad) add (bad) (bad) cmp rorl int3 rex.WB repz sbb andl mov es sahf scas xor imul callq (bad) fwait cmp rex.RXB sbb sbb (bad) xchg rex.WR fwait mov (bad) rex.R jbe sbb (bad) adc pop retq (bad) sti sbbb sbb push loope rex.WXB cmpsq fwait mov xchg xchg sbb or sbb adc fwait pop sub (bad) lret int test in cli rex.RB fwait jns (bad) (bad) mov jmp movabs mov sahf cmc rex.WRXB repnz movsb repz rex.WB pop sbb rex.RX loopne cmc retq rcl pop (bad) xor rcll test (bad) adc (bad) adc fstps mov pop jp notb test push rex.WRXB and adc out mov lea sub push retq xchg xchg rorl movabs (bad) lea int3 (bad) (bad) mov pushfq retq cmc sbb vmulps movb rol imulb scas sbb popfq (bad) mov pushfq mov rex.XB sub int testl insb push out mov add movslq fdivl (bad) sbb xor xchg sub in (bad) pop pushfq es adc mov rex.WXB (bad) mov insl or mov lret cld cld sbb loop outsb xor mov xlat xchg pop (bad) imulb mov add rex.RX mov adc add jbe mov fstpl je (bad) popfq out fcmovne mov rex.WR in imul fimul (bad) loop pushq repz (bad) jae mov pushq (bad) jmpq decb pushfq pop jnp sbb (bad) mov adc mov fistp xor adc cltd jne mov std rol (bad) fidivr js hlt jno mov cs lret mov mov loopne icebp xor mov (bad) xor sbb (bad) sub cmp or rorl cltd (bad) pop ss add (bad) (bad) je fst sahf in fsubp (bad) movsl lret movabs cmp rex.RXB movslq fbstp fdivr add jl rclb rex.RB rorb mulb cld (bad) mov loop movabs mov add mov ss push xor addr32 pop rex.RXB cmp rex.WRXB clc and mov sbb fmuls jb sbb fnclex rex.WRB or rex.W fdivs adc jrcxz movabs push mov out mov xchg lock pop (bad) mov sub pop mov js jne rex.R lock add push (bad) jg rex.X pop mov xor imul data16 mov push push je out rcrl xor cmp jae scas test in xcrypt-cbc cmpsl push mov rex.WRX cmp push jae xchg in mov mov mov sub data16 mov movsl push and or ror add sbb sbb addr32 sbb xor lahf jl pushfq pop adc mov jmpq or std scas fcoml insl int sbb jb pop fcom retq push fisubl enterq (bad) loop movabs cltd data16 mov mov mov cltd (bad) xchg test stos jb scas adc sub mov retq test jmp (bad) cs xchg sbb jp fcompl (bad) jno (bad) sub mov push sbbb retq outsb (bad) pop jl lret movsb (bad) out xchg fimul out mov insb and jle retq mov roll mov pop pop rex.XB or sbb cld mov jle fistp jns shrl mov hlt movabs xor mov sarb mov (bad) xor cmp (bad) cmp xchg jg jp popfq xlat loopne cwtl repz out (bad) jl pop decb mov xchg jne sbb and retq jle lret clc jo jl movsb retq (bad) pop mov (bad) xchg std sub (bad) (bad) gs sbb fcmovnb mov test idiv out std xor mov pop sbb jo lods or (bad) mov or shlb adc and mov test mov mov mov jmpq mov lcall sub (bad) and fiaddl popfq fstl sbb mov outsb lods adc xchg jbe pop jnp xlat rex.WB mov mov cld push gs fildl (bad) rex.WXB or scas mov push std rex.WR rcll and pop clc in and ja mov fcomi mov es jne xchg mov rex.WR sarl fwait xor outsl leaveq sub xchg jne xor stos (bad) rcrl (bad) xor in or xchg lret xchg out rorb jne pop fwait cltd xor push push (bad) fwait dec out fstp (bad) cmp mov (bad) adc jl cmp test fldt in mov sbb fwait rex.X xchg (bad) cmpsl iret out pop outsb and (bad) fwait or mov fwait pop xor pop and fwait sarb adc jb (bad) movsl fcmovnb cmp or in xchg lret test cmc rex.WRB sub or cmp std shll mov adcl stos sbb fwait cmp (bad) icebp mov rex mov sub cli or nop std (bad) out fwait push jae xor jbe sbb fwait test rex.RXB fwait mov cmp xchg (bad) jrcxz retq rex.R fwait push cmpsb adcb rex.RX stos sbb nop rcl retq rex.X fwait leaveq adc enterq sbb rcrb loopne mov rex.WRX fwait push mov lods in jrcxz add fwait sbb cld (bad) out cmp fwait (bad) or xchg stos (bad) fwait pop pop pop test movabs mov repnz rex.WXB icebp std adc addl sti insl (bad) fwait xchg add callq sbb rex.WRX in jg (bad) repnz fwait or jmp (bad) cs callq imul xor mov int3 xlat pop xchg sahf cmpsb popfq fs fldt sti out push cmp fwait jno andl out xchg sub fwait add jno jns jae fwait repnz and fwait xchg and pop jrcxz out mov outsl imul add fimull mov sti movslq and fldt shlb sub shl (bad) cmp add cmpsb cmpsl cld adc jb xchg xor mov (bad) adc xchg mov jns mov fdivrs sbb test fbstp fwait mov rex.WR add fwait (bad) test (bad) rex.WXB pop or jge rex.RB fwait popfq ror pop scas mov movabs xchg mov or jae movsl mov jb fwait cmp movabs jmp shl cmp pop fwait add scas jno lods rex.X fwait adc or (bad) pushq or (bad) rex.WRB test (bad) mov cmp sbb rex.RX rex.WXB (bad) lods (bad) fwait mov mov jmpq sbb addl rex.X cmp fsubr (bad) (bad) cmc (bad) nop xor jbe out ds repz push (bad) iret js rex.X bnd jrcxz insl fwait and (bad) cwtl or callq rex.RXB movabs sbb pop jg mov (bad) sub sbb pushfq or sbb fdivrp xchg in test and in mov fwait rex.WRX mov or pop add mov andl retq in jl jno add sbb jb jmp (bad) ficompl pop imul lret (bad) cmc rex.XB cli lea push (bad) (bad) (bad) sbb rex.WRB mov adc rex.WXB (bad) rex.WRXB xor (bad) jmp (bad) and sub (bad) (bad) jg loopne ss movsb out mov fwait (bad) or sub retq push pop clc test (bad) cs xor adc retq lods pop pop fwait rex.XB rex.WXB ds andl xchg xchg std (bad) lret jg rcl fwait mov sbb rex.RX adc retq (bad) or push (bad) (bad) fimull pop pop insl or in xlat fwait (bad) cmp cmp pop jge (bad) mov cltd wbinvd add add fwait cld xchg mov in pop mov stos movsl mov jmpq nop cltd sbb jo push cmpsl mov mov movsl sti and lods rex.WRXB xor pop rex.WR pop sub movabs outsl (bad) fistp jl sti rex.WR (bad) xchg (bad) int mov xor rex.WRXB data16 data16 fwait pushq ds sbb xchg outsb rcrl imul pop sub rex.R negb sti retq jmpq clc push add mov enterq fwait imul mov loopne fwait sbb push sub mov adc xor pushq cmp fwait cmp jnp retq imul xchg mov cmp sbb mov pop mov mov test fwait fs js (bad) movabs rex roll mov (bad) mov cmp fnstenv (bad) rex.RX xchg sbb movsb mov (bad) rex.WXB fwait and add lock fwait lret test xchg jl (bad) mov rex.B stos xchg add (bad) mov fwait cmpl xchg popfq and pushq add out xchg fist (bad) gs fdivl cli xlat lea js fisttpl fucomip fstl mov jp (bad) std popfq sbb pop jrcxz stos jae (bad) loopne (bad) (bad) xchg sub pushfq sbb popfq mov (bad) es jmpq (bad) in shr add out sub popfq sbb jp sarl movabs fwait cmp rex.WXB test sub mov (bad) out callq sbb (bad) or movslq mov rex.RX fildl loope (bad) mov fwait pushq jp lock outsb imul out mov mov xchg fwait or fcomi sahf mov fwait pushq xchg add fwait out rex.RX (bad) pop mov jo (bad) mov mov (bad) (bad) xchg rex.WXB xor jle (bad) movabs or stos fwait rex.WRXB divl xchg movsl add (bad) sbb add rex.X fldt retq paddw xchg fwait and adc sbb adc or sub pushq pushq lea fwait sti adc scas mov xor pop (bad) fdivrl sar or data16 movabs xchg (bad) rex.RB mov (bad) retq (bad) jae and loopne push xchg popq (bad) notb jbe and rex.RB or stos imul rex.WRB (bad) div fwait retq loop sub shrb add xchg mov in (bad) test std adc xor xlat rex.B ds retq retq popfq cmp in (bad) or insb mov (bad) test cmp or mov rex.WB sub popfq fwait (bad) and push fwait cwtl rex.WX xchg pushfq test xor (bad) fwait gs adc xor adc adc jg fwait test mov pop sub adc movabs loopne jrcxz mov (bad) (bad) xor (bad) cmpsb xor stos fs rex.X (bad) or fmuls jns insl xor adc (bad) addr32 add fldt sbb repnz add or jnp mov es rex.X movabs popfq pushq std jle jrcxz scas cmp jp orl (bad) iret adc sbb popfq sub clc push mov xlat push (bad) cmpsb sub fistl xor xor popfq lods (bad) mov pop jp pop jae nop (bad) xor rcl mov or pop sbb or rex.RX mov xor stos (bad) mov loop mov (bad) adc sbb cmpsb lock adc outsl mov lret divl movslq (bad) mov (bad) (bad) rex.RXB rex.W cmpsb adc xor callq (bad) fistpl loop cmpsb cmp (bad) cmpsl fdivr adc sub nop mov retq mov jl (bad) pushfq mov (bad) cmp adc cltd popfq rex xchg (bad) cmc movabs and (bad) (bad) jg cwtl (bad) (bad) (bad) lret mov lret rex.XB in xchg jne sub sub mov sbb andl lret out push jmpq lea in push imul cmpsb (bad) movsl adc test lahf pop (bad) cmp (bad) jns add (bad) fldenv rex.WRX or jle lea sub add std nop rcl and sbb pop movabs xor xor or rex.B or fistp movslq loop outsl jno cmc or (bad) imul insb stos adc adc jmp rex.RXB mov pushq enterq or cmp rex.WX and (bad) rex.WX rex.B rcrb lret (bad) xor pushfq mov int lock xchg xor rex.RXB add cli (bad) (bad) mov xor and mov sbb int adc jo fs cs xor push iret (bad) (bad) icebp sysenter adc mov in (bad) jg xchg gs (bad) rex.W (bad) xchg retq icebp xchg xchg lods add adc sbb insl mov sbb popfq and rex.WX ficomp (bad) imul imul roll (bad) jns pop movabs mov fucom jae mov (bad) sbb xchg jl xchg test ds sub jae and mov int3 adc cmp rex.WRX (bad) jle fs rex.XB (bad) callq test rex.XB sub rex.WB sub popfq xlat adc subl pushfq ficoml mov rcll (bad) add lods gs mov jae (bad) jb (bad) mov mov in icebp pop (bad) fildll iret (bad) (bad) mov fwait lahf xchg flds jbe (bad) je jmpq sub xor addr32 (bad) (bad) rex.WRXB fwait adc shrl fwait scas mov out adc int3 sbb lret (bad) mov (bad) and fwait js pop sub loopne pop adc repz mov xor (bad) fwait mov stc movabs fwait shlb mov fwait push in add insl and xchg data16 pop clc xor rex.WB movsb xchg add rex.WRX rex.WRX addr32 mov sahf xchg (bad) xchg fcmovnu mov lret test sti out es add and in sbb (bad) adc test pop fwait and rex.WR xchg jrcxz (bad) mov imul lock (bad) or cmpsl cmp or cs or add in fwait adc (bad) fcmovne or xor movslq (bad) pop fwait retq pop lods stc sub add or mov add retq adc rex.WB add (bad) (bad) adc (bad) and xchg in movabs add mov sbb sub pop xor lods and add sub fwait rex.RXB fldenv (bad) (bad) jle pushq jmpq jnp outsb or fwait add ss sub lods rex.WR mov mov or pop movslq fwait std mulb icebp or sbb xor retq xor adc sbb xor fwait callq movabs sub pop sti xchg xor push add pop insl stos fs mov (bad) test xchg or (bad) sti rex.WRB jb jns (bad) rex.W rex.XB stos sahf mov ds push lahf mov mov mov or add adc and retq add rex.X mov cs int3 sbb addr32 push fsubp icebp jne fwait imul and mov fsub mov sti int (bad) loopne fcmove movabs (bad) (bad) cmp xor rex.WXB sub sbb (bad) xchg clc pop cmp movslq rex.X fwait jmp fiaddl (bad) jge enterq stc sti vpsubq (bad) rorb sbb cmp and fwait add (bad) mov adc fwait jp (bad) (bad) cltd test pop (bad) adc push and xor (bad) out out jge fwait insb cld mov mov sub (bad) (bad) insb lods sub jg mov cs fisttpl jrcxz adc xchg lock out sbb rex.R lret cmp adc sbb xchg test (bad) in jg in push adc jnp jno js add lods test jns sbb sbb repz rex.RB fwait cmp push icebp mov (bad) je rolb fwait idivl rex addl mov stos (bad) fwait or jns lods sbb (bad) nop stos data16 fwait mov adc and jnp adc mov stos pushq sbb xchg jmp or add prefetchnta fwait rex.WX sbb rex.WX rex.WRXB fwait leaveq pop nop (bad) fwait ss (bad) and sbbl imulb rex.RX pushq adc (bad) mov xchg je pop adc mov mov mov outsl mov in and out mov rex.RX pop iret rorb pop loop (bad) cmp lret push orl (bad) (bad) adc or rex.WRB sarq jl jle cli shl iret fimul sbb orl setno adcb sbb and jno (bad) iret rclb adcl pop push rex.WX rex rex.XB and push jle pop fstpl (bad) (bad) mov ja retq pop test mov or repz int3 (bad) and iret mov sar outsl jmp (bad) push fwait jl xchg cmc std popfq sahf mov sub add push movsl retq sbb pop es ss clc stos jno pushfq (bad) sti xchg cmpl sti js ds cld shr out push je movabs fs and add pop add out sub or jb (bad) in sbb fwait pop mov in test add fistl ja and or in (bad) jge outsb rep movsl add hlt mov rex.R and fwait cmpsl xor sbb nop add adcl adc (bad) and je add mov fwait (bad) mov imul mov (bad) cmp shr fstps add out int3 rorl (bad) bnd cld add (bad) and or rex.WRX stos flds sbb scas sbb (bad) (bad) jae sbb mov mov sbb (bad) (bad) sub pop imull ljmpw add (bad) mov xlat fwait jg xor test (bad) divl sub jns rcrb xchg add sub lods pop (bad) enterq movsb adcb mov adc cmp cmp pushq sbb (bad) imul rex.WRB (bad) sub fistl hlt jp sti mov rex.WRB test icebp loopne mov es cmp xchg jle notb in cmp leaveq push sub mov or callq pop adc fwait xchg add addr32 iret (bad) cmp in rex.WB rex.WR rex.XB fldt (bad) scas add movsbl mov push push out jb sbb cmp loope repnz lods icebp (bad) or mov cmp or movzwl (bad) (bad) js shrl stc lock pop cmp (bad) adc je cmp fisubrl jns jmpq mov adc mov (bad) rex.WXB fwait insl fucom fldcw fsubr pushq sub add sub add mov test (bad) xor mov fistp xor fcoms jp out cmpsb sahf pop adc fiaddl fwait xor adc (bad) ja fwait in rex.RXB xor callq sarb jrcxz (bad) jo movabs fwait nop test sahf (bad) int3 or fwait xchg jnp movabs (bad) (bad) and lea fwait cmp mov mov rex.WRX or fdivl or and rex.WRB js xor jo push sub add rex.R repnz shl retq rex gs mov fwait (bad) push push jrcxz xchg jo fwait xchg and rex.RX sbb rex.RB xchg add fmulp clc leaveq cltd sbb test mov xchg pop (bad) sbb xchg in rex rex.WRB rex.WB mov mov mov (bad) outsl sub int3 mov movabs (bad) pop sahf fs callq rorl (bad) (bad) (bad) sub dec lea sbb add push fildl add out or ss sbb xchg (bad) movabs rex.WX (bad) (bad) cld sahf fwait jns mov fwait sub jbe movsb adc enterq movslq mov mov lret add movsl jno mov lcall mov (bad) (bad) (bad) pop adc or and retq test out add xchg mov mov (bad) cli in mov (bad) sub out and out sbb in jbe xlat pop pop imull repnz insl setnp negb mov int3 js jb mov (bad) test adc mov cmpsl fwait movabs rol out mov or fwait jmpq push sbb mov (bad) cld adc mov popfq in (bad) cld pop lahf (bad) lock xchg push or in cmp rex.WRXB outsb movabs xchg or scas retq fwait cmp mov and add mov loope (bad) lret rex.WXB jo (bad) (bad) ror rex.RB xor je xchg sbb pop out (bad) cvttps2pi repnz and sbb pop sbb sub fstpt out sub out jno and add xor mov and pop (bad) mov sub rex.RXB stos add pop rex.X fwait cmp and ss sub push (bad) sub (bad) xor sarb in rex.RB subb rex.WB xchg or icebp mov or add (bad) xor pop fwait (bad) (bad) pop cmpsl pop mov movabs cs rex.WR fs rex fwait cltd nop add sti xchg jne test shlb movabs or xchg fwait sub sub retq mov pushq (bad) add iret test sub jl xorl xchg add add in movabs out sub stc mov adc (bad) push add out fwait rex.WRXB sub sbb fwait mov jmpq lock sbb (bad) bswap movabs loopne sbb fisttpl addb lahf fwait in jle adc insb adc xor cmc xor insl fwait add (bad) in (bad) (bad) std cmp movsb mov rex.B es in xchg movabs fildl rex.X mov xor mov (bad) scas insl xchg mov fwait cmp cmp jne sbb jno push mov mov in or fildl adc es mov callq (bad) fwait stc add loop mov insb (bad) xchg sti leaveq nop out js add test (bad) ds loopne rex.RB (bad) cmpsl mov (bad) jle sbb in jne adc add retq popfq outsl jl in sub mul (bad) mov rex.RXB jp adcl cmp jmpq cmp fwait sub cwtl fwait jnp (bad) out xor xor cmp and fwait push adc emms retq sub (bad) cmp lock icebp sti jo mov jl adc rex.WRXB repz mov jp rex.RXB rex.RXB out mov in sahf (bad) sub popfq xchg pop cmp (bad) test adc xor in stos movb mov fmuls mov add cmp repz mov jb sbb cmpsl (bad) fimull in (bad) fdivrl (bad) or xor (bad) fs rclb icebp jrcxz fwait ja pop in enterq sbb hlt add xor sbb cmp sbb and mov sbb data16 outsl jbe sbb rex.WRXB cmp and fwait sbb pushfq (bad) (bad) icebp rex.XB test imul repz pushq rex.WXB fwait andl stc (bad) loop add fwait (bad) flds cwtl xchg lods jb fwait sbb mov (bad) mov push sub in xlat jb sbb es cmpsl cmp push (bad) scas sbb adc fwait (bad) sbb pushfq fwait xor push stos and sarl loopne fwait lods pop jmpq push fwait (bad) sbb clc popfq fimull (bad) sbb pushfq test test cld movabs insl fnstcw sub push (bad) ds xchg sbb out fwait in mov in mov cmpsl mov je mov decl insl ficomp imul lods cld (bad) jle iret and push pushq adc xor sarl (bad) repz jl lret adc lods (bad) adc insb mov (bad) loope (bad) add imul xchg movb xor decb js sbb movsl cmp push jbe callq iret icebp xchg (bad) (bad) mov insl mov rex.X pop mov andl add ss outsl (bad) (bad) mov add (bad) (bad) rex.WX imulb movsl movslq sbbl xor push (bad) ja sub in mov movabs jmp mov lret adc pop pushfq test movsb sbb rex.WRXB sbb movsb sbb movabs mov andb mov sbb mov xchg and and jno lock or rex.RXB ja jmp sarl fsubrp mov lret mov movabs sti callq out xchg fwait (bad) jmp ds negl mov rex.WRB sbb enterq lea outsl fistpl callq push rex.B or (bad) repz test mov sbb rex.WRB adc jae movabs mov add pushq fwait cmp xor imul xor fild mov insb pushfq (bad) movabs push (bad) and pop imul adc jo jle (bad) add mov cmp jmpq or jns sbb (bad) add rex.WRB fwait (bad) sbb out fxch fwait scas adc movsb jmp mov (bad) mov loop stos fwait sub lret cmp add (bad) cli add add jmp data16 rclb sar scas (bad) jbe test rex.WB fisttpl stos loope fisubr fwait rex.WRB pop jmp mov and movabs rcll pop out lahf pushfq xchg rol xor hlt rex.WRX rex.X cli cltd mov fdivs add scas cmpsb enterq (bad) retq in rex.WRX rex.B (bad) out (bad) jns or xchg imull lods add add (bad) and xchg sbb not mov push sbb push ja sbb mov or or mov lods or push je add (bad) and lods add or cmp or or test cli or push jne cltd enterq shrb rex.RXB test lret popfq cmpsb jnp and fwait jl rorl sahf repz int3 cmp fwait rol jl test jge (bad) int (bad) movabs add rolb retq xor mov fwait or adc xchg mov (bad) loop fwait sbb in rex.WRB jg pop pop (bad) mov add mov es fstpt rex.R rex fwait je pushfq pop (bad) fbstp (bad) sbb mov rex.R fildl jge push rclb lahf push out xchg rex.WX fwait cmp inc sbb insb (bad) fwait add out (bad) (bad) jmp sbb mov (bad) movsl xchg movabs xchg neg jmpq (bad) cmpsb sti (bad) insl (bad) (bad) sbb lcall jns fwait lods pminub sbb sbb mov jno movabs (bad) mov imul cmpl fstpt push in out ds mov fstpl loopne rex.WXB addr32 fwait xor jmpq mov cmc fwait pushq lock fistpl xchg test mov xchg pop pop xor popfq fwait jne rex.WRX jno mov (bad) fwait es cltd mov pushq mov (bad) stc (bad) jb mov pop sti pop fwait (bad) pop push iret xor jle rex.WX and xchg movsl repz loope pop ja (bad) (bad) sti loope retq icebp pop std jge lret lret imul jns std (bad) (bad) fmull lret cltd (bad) insb cld xchg paddd pop sub es push icebp adcl rex.WB pop sahf (bad) xchg xor mov and add sti test and jmpq mov jb hlt rex.WB pop add sbb (bad) cmp fsub rex.WB movabs pushfq (bad) xchg negb (bad) rex.XB scas jrcxz out pop lods jae (bad) rex.B rex.WR pushq push xchg sbb enterq cld pop cmpsb xchg (bad) (bad) xchg loop insb subl stos sbb movabs popfq cmp int3 sbb out retq cmpsl movabs jge test xchg xchg (bad) (bad) es (bad) movabs popq cmp cmp pop adc xchg (bad) (bad) rex.RX mov (bad) cmc mov (bad) rex.WX subl out jl cmc xchg shll push mov rex.WB test insb pop mov cwtl mov lret lret int3 pushq xchg and mov sti (bad) rex.WB in mov loop sahf repnz pushfq xchg (bad) (bad) shrl pop fstpl mov (bad) (bad) repz in in rex.WR pop js (bad) (bad) mov gs rcll or rex.WRXB sbb callq sub fs jle add (bad) add ja mov push push outsb insl pop retq sbb adc cmc xchg or iret stos rex.X xchg mov or add sbb (bad) fsub lea sbb std mov jge rex.WRX adc (bad) stos cmp pop and (bad) mov loope (bad) xchg jrcxz jns rex.RX addr32 push stos fsubs xchg lret cmp fdivrl repz rex.X std or movslq pop pop jns in test mov cs jmp out scas (bad) or pushq movslq add sbb orb push out cmp jno and rex.WX iret iret jl movabs and cmp mov bnd cmc jno cmp sub (bad) lret repz xor mov adc pushq sub out out xor mov lahf ja divb cmpsb (bad) mov movabs rex.RXB pop push xorl cmp rex.WXB jne out and (bad) lret jne out outsb and xchg int fucom sub sahf push (bad) sub incl rex.RXB fs int3 popfq sub lods or add (bad) sbb movsb sahf and lods jbe rex.B fdivl and and mov rex.RXB xchg jae in popfq (bad) cli jns cmp mov (bad) (bad) mov rcrl adc fcompl cmpsl xor lahf jno fidivl shr mov mov mov or xchg int rex.X leaveq xchg adc rex enterq lods jns (bad) mov rex.W and sbb rex.B and pop xchg clc mov (bad) adc iret (bad) cmc add (bad) sbb rex.WRXB (bad) cmpsl mov xchg movabs mov (bad) movsl xor mov in jb insl in pop mov rex.WB rex.R (bad) and or movabs mov xchg pop sbb retq fdivrl (bad) andl add and retq (bad) out pushq xlat popfq cmp sbb sbb in sahf roll pop repz lret decl enterq sub (bad) loop or scas fdivl retq rex.WRX mov (bad) int rex.WX rex.XB adc rex.RB sbb rex.WR mov mov scas xor sub jmp mov in data16 or rex.WRX outsb rex.RXB imul fsubrs lret int3 mov pop jle lock loop mov repz cmpsb adc pop rex.B test or (bad) and (bad) enterq ds cmp rex.WRXB adc jp loope int fsts xlat retq divl insl mov cwtl xor sub (bad) pushq (bad) and xor sahf scas rex.X clc movslq xorps scas sbb xchg sti movabs and ss orb xchg and xlat (bad) adc in fwait (bad) (bad) lock (bad) movabs sub mov insl sbb adc jb es adc and popfq insl mov loopne sti icebp xor ja (bad) fcoml jl sbb icebp outsl rex.R sbb jrcxz add jmp lods fwait xlat scas fnop cmpsb fs xor (bad) or callq xchg pushq lods fwait (bad) jns rex.WRB sub mov cwtl lea sar mov (bad) fwait and out int3 mov xor sub ss movabs sbb push es rex.B (bad) sbb loopne cs jbe (bad) fistpll fwait shr xchg movabs loop cmp mov rorb imul cmpsl (bad) add add sbb in mov fisub (bad) out es adcl cmp fwait repnz and (bad) sbb subb sahf push enterq and adc (bad) sbb pushfq sti push pop cmp ds stc test callq push outsl fisttpll mov pop movabs xchg add rex.WR rex.B rex.WX fwait jle sti imul (bad) or test add repnz (bad) mov push jl add add test fwait ds jg lods (bad) movabs xchg out rex fwait js rcl rex.RX imul decl (bad) fwait shlb (bad) (bad) movabs insl add (bad) sub movabs (bad) nop rclb (bad) pushfq fwait xchg cli in scas (bad) fwait push movabs (bad) idivl in (bad) imul pop add mov rex.WR sbb sbb ja (bad) sti cmp xor popfq pop rex.RB rex.RX std rcrb loopne scas mov negl leaveq (bad) mov fwait test fwait lahf mov int3 mov cmp fwait popfq (bad) xor mov xchg mov sub xor cltd mov sub fwait repnz out xchg pop mov mov movabs add and add (bad) add movslq rex.WRXB add cltd sbb xor mov jnp rex.WB iret addr32 jbe sub jrcxz add (bad) cmc (bad) or rex.X add sub xor fstpl push mov mov xor pop out mov pop icebp sbb xor dec or sub cmp lahf es fwait xchg (bad) (bad) rex.WRX mov adc adc sti sub icebp out (bad) or add xchg data16 sub enterq mov push imul and mov xchg jmpq pop rex.WX mov rex push int3 (bad) decl fimul stos rex.RXB fwait cmp pushfq ffree movabs enterq js adc addr32 xlat xchg (bad) fwait pop mov cmp pop callq (bad) negb jbe add out xchg fwait xor cmp fwait jno jae sub pop loope fs int3 lods xlat and (bad) sbb jmpq scas xchg xor fwait or icebp and fwait in (bad) (bad) stc (bad) mov (bad) rex.RB std imul jb fwait mov out fwait jrcxz mov xchg jmpq and test adc pop adc movabs mov lods (bad) (bad) pop nop sub sub sbbb sti mov xchg and fwait movabs and jb fwait fs sbb jg add jbe (bad) insl sbb mov (bad) rex.WRX rex.WRB rex.WRB ds movsb rex.B xchg mov movabs sbbq out (bad) add pushq mov (bad) sbb movsl (bad) outsl mov callq (bad) rex.XB cmpl mov stos mov lock xchg sub out test sahf sbb iret add pop jnp insb fwait (bad) imul pushq xor int pop in cmpsl rex.B mov fwait test xchg add fwait mov out cmp (bad) cli adc fwait jne mov lock je pop cmp mov mov insb loop fwait jae iret retq xor int fwait mov cmp (bad) mov (bad) popfq (bad) incb in rex.WB fwait movslq (bad) scas cmp movsb int3 xchg movabs stos (bad) sbb mov xchg imul movsl fwait mov mov rcrb fwait pushq rex.R es fwait add (bad) rex.WB rex.WR pushfq test (bad) iret in movabs xchg fwait jnp pop or in (bad) adc and cs jmp movsb fwait mov mov fwait or pop je (bad) retq cmp cli lods scas (bad) (bad) pushfq outsb jge rex.WXB (bad) mov jbe sub rex.WB lea and add js jmpq (bad) clc retq pop mov xor in mov mov loope lock adc xlat mov insb and mov (bad) rclb or mov sub mov mov lahf fmuls or (bad) hlt jb imulb rex.WB retq lret insl mov in mov lods or xor outsb pop pop and orb stc rex.WXB pushq imul or sub xlat and rex.X pushq lods sbb mov sbb pop loope add rex.WB rex.WRXB imul jno sbb push jp (bad) ja fwait pop cli lret (bad) sbb xchg mov (bad) sbb jmpq or sbb in (bad) ficompl clc sahf xchg mov adc push retq xlat shlb (bad) sbb jno rex sub mov rcrl rol xchg (bad) (bad) and and test (bad) fwait mov (bad) cmc fwait movabs stc sub xchg (bad) popfq out add movabs je fdivrl fwait add (bad) sar cmpsl repz rex.WR fs out ja mov pop outsb or (bad) adc adc int3 (bad) pop or scas lahf loope in fwait (bad) mov sarl (bad) (bad) popq in (bad) int fwait and mov idivb rcrb popfq cmp (bad) pop jno add (bad) fwait adc in test xor mov or lahf or (bad) (bad) sub cmp jo push test movsb and cmp sbb rex.WRXB fwait add mov mov sub sub shll rex.WRXB (bad) rex.W lea sub js loopne,pn movabs mov movabs adc in pushq fistpl sbb out fwait rex.WR in (bad) xor mov or (bad) xor xchg mov push xchg rex.RX (bad) (bad) (bad) fwait movslq mov adc and (bad) sbb mov add (bad) or mov mov cli sub out mov subl xchg ja enterq mov rex.WR imul and out mov movabs repnz outsb sbb retq jle movabs xlat gs scas xor jae pop mov fistl cmp sahf scas scas sti in fs and (bad) test je (bad) lret jp mov in fadds leaveq sbb cmp xchg xchg sahf xchg add and (bad) in sahf and (bad) jl fwait in mov callq add mov rex.WR hlt rex.B movabs movabs cmp je jge mov (bad) loopne andl imul subps sahf jns imul add fwait and subl cltd sub adc cmp pop (bad) sbb rex.WRX sti xchg rex.WR adc push sbb adc xchg or cmc xor test (bad) ss fwait xchg in mov cltd out adc fsubrl fucomi pop push mov callq js sub or stc movabs mov loopne (bad) (bad) stos jge cltd mov mov movsl movsb rol fwait add (bad) fwait mov jnp rcll cmp sub fstps rex.WRB lock jmp fwait insl (bad) addr32 (bad) jbe stos xchg rcr in lods rcrl and fiadd cld and pushfq xor add loopne cld add (bad) iret (bad) icebp xchg popfq std fdivrs xlat sarb rex.R lea retq int3 (bad) fsubrp out mov movl (bad) fwait sub mov push pushq fcoms enterq movsb xchg rcrl (bad) jmp (bad) push test (bad) jl mov data16 xor rex.WRB (bad) stos cmp jmpq rex.W sbb rex.WRXB and (bad) rex.RX fwait add movswl push xlat sti addr32 jbe es ror std cmp fwait xor adc mov jl retq pushfq rex.RXB and jb pushfq jge (bad) repz in rex.R fwait push (bad) cmpsl lret out sbb xor cmc repz fwait xlat sub cli (bad) stc ljmp stos xchg movsl test and mov movabs ja add pop out cmp jmp rex.WX fwait mov cmp fstcw (bad) sbb mov out fstpl (bad) push sahf movslq rex.B add rex.R rex.WRXB adc rex.WX (bad) subb (bad) faddl and rex lock pop xor jmp cwtl pop je pushq imul mov jnp (bad) jb cwtl push ja out andb scas mov xchg push or adc (bad) sbb loope jmpq add mov mov or mov xlat shll jl xchg sub add test jb addr32 xor scas mov xor sbb lea fsubl (bad) lods outsl sti mov jrcxz cmpsl and in movsl cmc sbb rex.WRX cwtl cmp outsb cmpsb rex.WB pushq sbb lret (bad) mov and mov (bad) idivb imul and (bad) sahf pop add xchg xchg mov jae (bad) sbb negb in sbb sub mov jmpq rex.WRX mov int sbb xor (bad) fs pop (bad) cwtl push push sbb frndint out sbb (bad) jno cwtl fisttpll pushfq push test xchg pushfq jmp rex.WR and (bad) sbb or (bad) adc lcall out cmp loope push rex.RX jl jg or movabs push repz fidiv sbb (bad) add loopne adc lahf sar fstl sbb (bad) pop lock int cwtl xchg (bad) rex.X (bad) pop iret scas lret rex.WR xor sub xor (bad) cmp (bad) jl iret and sti xlat jnp retq mov pop (bad) cmpsb mov rex.XB add sub adc ss fwait enterq xor pop lods (bad) pminub add es xchg clc rex.WRB mov mov xchg scas movabs adc (bad) jg jns out jnp fwait add stc or rex.B (bad) enterq mov clc cmp subl push out sarb je (bad) (bad) jbe fwait js cwtl sub sub rolb adc retq jrcxz cmp (bad) sub andl negb xor fstpl mov mov jb rex.WX xchg or sbb mov adc add (bad) cmpsl adc (bad) (bad) sbb fwait xor lock fwait js xorl decl sub out (bad) cs cld xchg cwtl cmp shll in in mov (bad) in jne push fwait (bad) add pushq fwait mov mov jns int3 in test xorl callq imull test (bad) sbb fsub mov push mov xchg (bad) mov jrcxz imul rcrl pop subl mov imul fwait pop insb jb sbb lcall xchg and lock adc and fwait rcrl out fistp rex.RXB adc rolb push stos pop cmp (bad) mov rex.RX mov movsl mov add (bad) and push sbb rex.XB lea cmp cmp rex.RX repz rex.WRB scas cmp ja rex cmp stos out (bad) mov out fwait cwtl (bad) repnz out rex.X fimul rex.XB rorl (bad) movsl cmp mov (bad) push in xchg push test test rex.WRB xchg cld xchg (bad) int ja mov mov xchg callq xor in scas xchg rex.XB xchg pop xchg (bad) nop sahf or loopne rex.WRXB adc rex.WR (bad) imul sbb je ss adc xchg xlat retq jl movabs fsubrs jg mov sarl cmp jge add loope loopne movslq xchg mov mov (bad) push mov movslq jl xorl xchg mov imul jle ficompl fwait ss imul mov jae pop mov movslq xor and popfw mov stos scas out add pop pop stos xchg (bad) jbe jrcxz scas movslq pop pop jo neg jbe jrcxz xchg mov jmpq rex.WRB (bad) mov not (bad) rex.XB sbb pop xor xchg mov push mov sbb addr32 shrl out mov jge adc fisttpll fadd nop rex.RX fstpt std (bad) and enterq mov xor push jno fnop rex.WXB (bad) test pop std pop in sub (bad) or rex.XB sahf add (bad) scas fcmovnb sbb gs rex.W (bad) sub outsl test fsubp pushfq hlt rolb fs jl xor or xchg pop fidiv (bad) sbb out in lods stc rex.WXB fdiv fldt cli add clc sub xchg xchg cmpsb stos (bad) adc jg mov mov jle sub mov xchg test fbld (bad) in clc adc iret int3 rex.RXB sar sub lret (bad) fisubrl test movabs fwait mov pushfq xchg mov xor sahf fwait out imul (bad) cwtl rex.X (bad) clc leaveq sar (bad) scas int3 (bad) rex.WRXB mov cmc (bad) (bad) sbb cmp or rex.W in (bad) xchg xchg fs fsubrl sub or in sub and hlt jge,pt fstpl mov push (bad) mov ss fwait xchg jle rex.RXB in (bad) add movabs mov sub add pop retq push cli lret sahf or int3 sbbl sbb lret in insl mov (bad) sub (bad) rex.WR adc mov stc stc movslq out add and (bad) (bad) push lea push mov ss pushq fildll (bad) and fwait retq callq xchg js rcrb adc fiaddl fwait lret insb xlat pushq faddl cmp fwait sbb rex.RX repnz push movsb rex.W rol movabs loop xor sub mov sbb in fwait pop stos jg (bad) sbb fwait out lods jo (bad) sub sbbl sub fwait mov js mov sarb (bad) div ficoml fwait cld lea add in push fildll stos movabs frstor mov sbb jb nop mov xchg enterq jne out add (bad) fidiv flds sbb fwait mov pop or ds adc rex repnz xchg std or cli imul mov xor jne scas fisub and imul jg (bad) stos cmp test lods pop fs sub ss loop (bad) (bad) movabs shll (bad) (bad) (bad) nop movabs movslq (bad) xor sbb (bad) pop xchg pop out fwait and movb (bad) fwait lahf lods (bad) retq rclb mov rex.W cmp rex.B fcomi cmp sub adc test (bad) movslq xchg rex.R rex movabs cmpsl flds fwait mov jmpq or jmp std jl rex.RX sti jns lods fwait (bad) jmpq adc (bad) neg outsl data16 sti std sbb out fwait (bad) xchg sub (bad) or add leaveq loop cmc and xor mov xchg (bad) and mov imul callq jrcxz mov sbb out pushfq cmp xchg lahf fwait jne add rex.R sub rex.WX rex.RB and push pop (bad) cs fwait (bad) mov out shlb mov js flds cs cmpl ss lods adc movsb (bad) rex.W cmc in xchg iret test xchg scas (bad) jmp and test push rex fwait rex.WXB fwait insb jnp leaveq xor pop movabs cmpsb (bad) (bad) mov (bad) or rex rex gs (bad) out jmp fwait adc (bad) xchg sti sub (bad) out rex.WRB adc jno enterq rolb pop (bad) movabs in xlat fwait (bad) movl sub leaveq pop add and (bad) pop imul rex.R retq fwait mov outsb mov xchg rex push or loope fwait xor movsl movabs cli (bad) mov sahf mov cmp rex.RX (bad) (bad) adc pushq (bad) repnz cmp icebp in pop jmp fwait adc movsl ja rex.RB cwtl rex.WX fwait rex.RXB xchg (bad) sbb xchg (bad) pop rex.XB (bad) xor adc (bad) insb stos mov adc sbb imul (bad) rex.WRB xorb fwait (bad) sti imul (bad) add movabs jmp jnp out push repnz imul cwtl xor jp mov sub xor repnz movsl lods adc retq scas rex.X push fwait std xchg cltd fldenv js sahf (bad) mov mov movabs rex.WB (bad) int3 loopne mov rex.WRXB fwait adcl (bad) xchg fwait sbb (bad) (bad) mov rex.R fwait sbb rex.RX or rex.WRXB negl (bad) and lea (bad) add insb jp add add (bad) pushq sbb and xchg mov (bad) (bad) fdivp (bad) xchg (bad) mov and repz lods popfq rex.RXB rex.WX or pop fisubrl pushfq movabs mov (bad) xchg mov cmc and lods pushfq cwtl adc and xlat mov je (bad) rex.X pop or test or lea (bad) pop cmp sti int3 hlt xchg retq jbe cltd pop add movabs out cmp (bad) mov mov push imul je fwait mov pushq cmp popfq fldt and (bad) outsl (bad) (bad) add fstpt out push cli cli mov iret btc adc fwait cltd rex.RX cmp rex.WXB rcrl xchg out fcompl mov test push movslq and sbbl imul retq sbb (bad) lods stos (bad) lahf in rex.WRX (bad) sbb cmp js addr32 nop xlat mov emms cmp jl mov fidivrl (bad) loope push lea xchg sbb rex.RB xor xchg rex.WXB xor pushq and sub pop (bad) sahf push rclb jge rorb notl xchg rex.RX (bad) (bad) adc rex.WR rex movabs cwtl fcomip sahf (bad) (bad) sti (bad) sbb cmp (bad) mov pop adc int3 pop or jo xchg and and sub xchg rex pop and adc in sbb adc (bad) cltd out (bad) rclb in movsb mov mov rex.WXB pushfq leaveq (bad) pushfq ja and cmpsl cmp jo (bad) xor jne cmpsl movabs mov retq movabs fwait pop in rex.X fwait out cmp sub (bad) (bad) lea mov pop or xchg shrb iret stc retq push fwait mov mov sub incl gs mov xchg xchg jbe (bad) jmp mov and mov xchg out sub (bad) sbb (bad) sarl ds mov add test cwtl mov sub adc (bad) sbb (bad) fwait cs lret rex.RX jge,pt cmp adc fdivl fstl push rcrq sbb adc (bad) pop fs out cmp retq (bad) jb mov xchg adc (bad) or popfq jmpq andl out push fwait push sbb (bad) cmpsl test scas fwait in imul sbb mov rex.WB (bad) xchg pushfq xchg insb rex.WRB fildl jno push sub fwait xor rex.WR and (bad) mov and mov movsb mov jrcxz outsl pop and (bad) add cmp fistpl jb (bad) jge jb pop fwait scas lret xor (bad) imul movabs repnz rcr sbb rorl mov sbb cmpsl iret add (bad) (bad) jmp jmp mov push pop mov sub fwait (bad) rex.RX rex.WX xchg (bad) stc fwait push (bad) jge cltd (bad) jno in fwait or ds cmp fsub (bad) stos pop or (bad) xlat xor (bad) sbb std push (bad) out rex add sbb gs outsb rex.RXB pop es rex.WB rex.B fmuls rex.X fwait scas movsl push jmp (bad) cld (bad) xchg nop add js rex.XB adc (bad) fwait in push (bad) (bad) jrcxz (bad) lea lods sbb nop int3 sti (bad) jmp cld loope and sbb (bad) (bad) and (bad) push out rcrb xchg xor js mov sbb and data16 add sub rex.WRB clc or movabs and pushq test ljmp rex.WB callq (bad) addr32 (bad) cmc add fnstenv add add mov cmpsb fwait jmpq rclb cmpl mov fildll (bad) rex.WXB sub cmc popfq (bad) (bad) or xchg jrcxz and add (bad) fwait stos (bad) repnz adc (bad) (bad) cltd (bad) fisttp cmp (bad) std cmp push jrcxz xchg int3 pop movsl nop (bad) imul fwait cmp rex.XB sub rex.WRXB fwait hlt out sbb scas jmpq and (bad) rex jb mov outsl sti add xor sub iret mov cmpl (bad) jae movabs xor hlt (bad) popfq movabs mov mov sbb iret fdivrs stos jne divl push test mov (bad) adc movsl sbb (bad) mov js fisubr fwait lea rex.WX sub xchg mov adc (bad) leaveq fwait sbb xchg jg (bad) fwait mov (bad) jrcxz xchg cmp push cmp rex.WX es rex.RX jno fs shufps (bad) (bad) movabs sbbb xchg mull mov shll (bad) rcr mov rclb sub and fwait (bad) out fbld rex.WX data16 movabs cmc (bad) push fwait jmpq sbb jl iret fistpl rex.B (bad) rex.WRXB and lret rex.X xor movabs mov fcompl add sti jmpq pop fwait jns push (bad) cmc xchg mov movsb out push loop and mov shr xchg fdiv scas test addl rclb mov add mov sbb outsb ds xchg jno sbb jb pushq mov rcrb mov je sub popfq pop lods test jbe sbb fcompl mov add insl add fwait lods mov mov adc lods imul sub fwait out sahf or fnstcw mov adcl lea popfq rorl or cmp jle mov mov sbb rex.RXB lods lret xchg pushq adc (bad) or adc rex.WXB fwait (bad) nop or adcl mov mov sub fwait (bad) cmp mov (bad) ja (bad) popfq sub enterq push rcr (bad) pop rex.WR lods int fwait imul xchg movslq xchg callq (bad) (bad) loopne int popfq lret lret jno or (bad) sbb mov xor mov (bad) imul pop (bad) (bad) fldl add xor mov (bad) rex.WX xor (bad) (bad) mov xlat cmp or in adc push pop push out xor (bad) mov xor fmul (bad) sbb mov imul sti rex.RX add (bad) jbe adc rex.W cmp or jae loopne and pop jnp movabs sub jge sbb xor xchg vcomisd stos rex.RXB jns sahf jo cmp adc pushfq shll rex.X (bad) (bad) xchg adc pop fwait sbb sbb (bad) cmp rex.WX fnstenv mov sbb scas rex.X pushq xlat cld (bad) hlt (bad) push mov sahf pushq xor (bad) xchg xchg adc lods xor jrcxz jle xchg iret sbb (bad) addr32 rol mov rex.R pushq mov pop sub xor sbb shrd xchg mov (bad) sti nop sbb iret sbb repnz and sbb add (bad) loopne jae cmp xchg movabs out pop adc (bad) (bad) rclb jo data16 adc imul loopne rex.W fistp and mov xchg and (bad) xchg jle in movslq cltd lea lods test push push int3 out imul rolb hlt push or jno (bad) add cmp hlt or repz xchg sbb sbb sbb outsb popfq out cwtl sub cld sbb or and pop repnz popfq rex.WXB or icebp out xor and add mov imul (bad) sub xor callq outsb mov movabs sub mov (bad) scas rex.WB fwait mov or fwait xor nop repz mov pop rex.WB mov jmpq mov jbe sub (bad) js lea fwait (bad) jae cmp xor xchg movabs fsub flds fwait mov add fwait scas retq sarl sbb cmp xchg and jae cli xor rex.WX stos cmp pushq sbb (bad) int add jg pop es sub (bad) ffreep push rex fwait out repz (bad) pop callq jnp adc out jp pop pop retq rcrb mov icebp jo push fwait sti lret imul mov jp sbb stc xchg sbb add or cld add hlt mov (bad) xor mov mov popfq rol insl rex.WXB jae mov or cld movabs mov fistp xor insb fwait (bad) jge fiaddl movsb fildl push mov imull (bad) enterq jns outsl cltd sti mov cld xchg (bad) xor add fwait mov xor (bad) setne sbb jmpq mov (bad) mov jnp nop xlat lods and test jrcxz in fwait sub rex.WRXB sbb outsl jo cmp out xor stos cmp sub rex.WXB add incl sub (bad) cli add mov push mov jns mov loop (bad) movsl test jbe cmpsb (bad) mov pushq adc sbb stos lahf rex.B (bad) sbb ds out rex.WR insl jrcxz mov loope or jp shl rex.X (bad) fstpl fsubrl fwait mov out push sub (bad) icebp ja rolb fwait (bad) std pop pop loope sub sahf (bad) (bad) (bad) sub add and insl rex.RX stc enterq out fwait pushq mov fwait stos push add pop sarb (bad) jg (bad) cmp rcll jle sti cmp clc test sbb fcmovne pop rex.R shll sbb loop and sbb test pushfq cmp (bad) insb pushfq or rex.X shlb fwait jl pop add imul fwait (bad) push (bad) icebp movsl imul or (bad) (bad) sbb nopl fwait add cwtl sub sub adc out (bad) scas adc xor xor orl movsl (bad) shl fwait jo rex.WRXB push sbb int jns (bad) test xchg mov outsl fwait sub rex.WB (bad) imul fsubl xor jg fldenv lods adc jae fwait sbb mov test idiv (bad) xchg (bad) xchg mov mov sbbb js pop fwait pop out mov push sbb cli loop int3 rex.WB data16 out cmc sbb fwait adc (bad) jne movsb jno rex.RX rolb xchg rcrb jge xchg add addr32 clc pushfq jns (bad) nop (bad) icebp popfq sbb rex.WRXB sbb retq cmpsl hlt sti pop loopne (bad) pop (bad) fldt (bad) cmp int3 fwait jne adc mov jmp (bad) (bad) fwait lods (bad) nop pop ja movsb xchg and mov jo rex.RX sub jmp pushq (bad) xlat cmpsl loop cmpb sub movzbl in push (bad) jmp xchg and or lret fistpl addl movabs imul fwait add xor movabs push jge (bad) sub push fidiv xor stos pop rex.WR je cmpsb fwait in mov mov sbb rex.B push movabs pop (bad) clc mov out mov mov adc adc xchg add out xchg or test (bad) lret cmp fwait scas xor orl jle cmp pop (bad) cmc insl mov xchg movabs (bad) loope test pop cmpsb or jo cmc cmp rex.RXB xor clc loope xchg sub (bad) (bad) loope,pn (bad) pushfq sbb mov (bad) xchg adc (bad) sbb adc mov add pop (bad) movabs (bad) push sbb jle lret ds (bad) rex.B rex.W xor jb jmpq xor sub popfq pop xchg push cltd sbb mov std sbb pop (bad) jl mov retq test (bad) rex.WXB push add scas loope out push ficompl adc or xchg jge (bad) xchg (bad) cmp retq popfq xor xor subl lea (bad) cld jne,pt push sahf jbe stos leaveq (bad) rex.WR shll (bad) outsl (bad) (bad) fistl jne (bad) sbb mov callq xor pop (bad) xchg adc xor (bad) rex.WXB (bad) pop xchg add testb fcoml cmp fsubs cmc lahf cmp and shld (bad) scas sbb out rol sub mov mov sub xor cmp (bad) xor in outsb movabs (bad) rex.WRB rex.RXB adc xchg and enterq cmp cmpsb int3 data16 mov xchg (bad) rex.RB std std stc out jmp or mov loope push (bad) jle (bad) imul or mov and jb cmp loope pushq jb movabs lret xchg adc mov push repz add pop fnsave ja rex.WX jmpq out lcall rex.WXB rex.WRB (bad) (bad) xchg mov and lods in iret fidivl push in rex.WR and fsubr fcoms leaveq in (bad) hlt sbb fmull (bad) sub pop pushfq sahf fwait pop rex.WX leaveq jl add add movabs mov and movabs and pop int3 enterq pushq in repnz test (bad) mov push shr xchg (bad) jrcxz pop insb pop mov sarb iret add pop add nop cmp rex.WRXB add sbb or (bad) mov div rorl pop and mov (bad) sbb retq cmp sbb jbe faddp mov rex.WRX enterq mov out cmp loope,pn (bad) rex.B rex.RXB (bad) (bad) cld mov enterq (bad) pop shlb pop mov in or in sub pop pushq mov xchg (bad) jmpq sbb xchg and sbb mov cmp cmpsl jle (bad) push xor xchg sar (bad) xor mov add out cmp je pushq (bad) cmp jb or rex.RXB in insl xor es out xchg rex.WRXB (bad) xor push rex.WR out hlt addr32 push (bad) mov xchg sbb rex.XB jns xor popfq rex.XB (bad) jnp stos fcomps xchg jb fsubrl xchg fwait test rex.RXB fwait lods (bad) sti sahf xchg iret (bad) add fucomi retq adc mov stos xor (bad) cwtl subl mov add (bad) adc or out cmp push (bad) jae adc add cmp xchg xchg icebp sub add (bad) mov nop sbb or lods pop int and push rex.W adc jmpq fwait sub movslq sub rolb rex.WR (bad) jle sbb test cmpsb movabs push je (bad) cli rex.WX rex.B add sahf (bad) (bad) xchg (bad) push hlt fwait adc mov (bad) and (bad) (bad) sarb insb callq notl scas mov lods (bad) xchg push xor jle jb rex.WXB rex.RB xchg (bad) js (bad) xchg or (bad) fwait rex.WB in lahf hlt xchg cmc jg pand gs hlt icebp adc xor (bad) mov sbb cs cmp cltd or xor andb fwait rex.B lret (bad) add enterq fildl cli icebp (bad) mov xlat sbb out mov fwait push retq mov (bad) mov mov (bad) xchg cmpsb int out (bad) (bad) add rcrl mov (bad) cli sbb je (bad) jge and rex.RB cltd sub cmp test jo fildl or mov and rex sbb jl mov stos jge in (bad) hlt test add and lods lahf pop jrcxz xchg lock mov cmp rex.WXB (bad) mov mov fmulp pushq rex.XB fwait scas (bad) sbb sbbl scas (bad) (bad) sti or rcll and fstpt (bad) pop and fwait data16 cmp sahf sbb add fwait ds jnp add mov movabs mov in imull sbb rex.WRB rex.WR xchg lret (bad) sub mov fcmovnb add fsubp cmp shlb push sub sbb int pushq add fwait jle (bad) sub adc rex.XB rol rex.W fwait movabs lock insl cmp rcl fstpt imul xchg mov mov sbb rex.B ds insb jno nop or pushfq rex.RX jbe (bad) sar push sti push iret (bad) fwait std mov jmp xor sbb push jo adc data16 jno negb cmp test std lock ds scas pop jno mov push sbb rex.WB fcmovnbe sahf adc add sti ja rex.WRXB sbb jl pushfq fidivrl stos xor push pop fwait in (bad) rol loop int (bad) test fcomi movabs mov jmp fcoml rex.X fwait jnp mov icebp mov cmp retq scas add mov adcb pop (bad) cmpl push (bad) (bad) pushq xor or add loop (bad) xchg add rorl jp (bad) sub repnz add adc rorb jb movabs (bad) icebp cmpsb outsb mov rex.X adc rex.XB movabs pushq sub xor fwait iret push cs jne sbb mov adc or loope movsl (bad) cmpsl pop mov fwait es cmp push adc jo sub out sbb divb cmp jl (bad) retq jp mov cmp fstpt xchg (bad) mov add je sbb mov mov pop or imul add mov xor rex.RX xorl icebp sub out ja xor jne (bad) (bad) imul cmp stos mov xor lret and push and fwait fs sub fstpl pop add andl in (bad) jo gs cmp fwait mov std loope xchg sub adc cmp test outsl xor mov (bad) scas jl push xor fcompl xor sbb or icebp adc mov movabs pop add pop (bad) test out sbb xchg enterq rex.X loopne rex.RB repz (bad) cli mov cmp push jae xlat jrcxz lods jmp (bad) (bad) rex.WRX (bad) push divl mov jmp xchg pop adc and sbb adc sbb je fwait (bad) push push and enterq jp (bad) add (bad) rex.WRX (bad) fbld jnp add movsl mov mov sbb (bad) idivl callq jp (bad) rex.WR fwait insl es sub rex.WRX (bad) (bad) movabs (bad) fwait cmpsl hlt pop leaveq pop rex.X push mov rex.WRXB and test pop rol mov movsb (bad) xchg sbb mov shrl pop (bad) stos jg sbb rex.WRB xor mov xor rex.WB movabs sbb rcrl (bad) jbe decl mov add add push push jge pop test sbb (bad) enterq out pop faddl (bad) xchg pushfq pushq adc gs xor movsl xor iret adc sbb pop or je ds fwait cmpq rex.RXB cld xchg mov xchg clc xor mov in std addl scas sbb mov pushq (bad) (bad) add (bad) (bad) loope mov add xor out cmp testl cmpsb fcomp ss mov hlt and sub stos rep jmpq (bad) insl in sbb mov sti cmp popq cmp mov (bad) xor push cmp add pop push hlt lods cmpb retq pushq cwtl rex.WRB or mov (bad) sub push insb add and cltd mov mov es fstl in cmp pop jnp loopne imul xor fsubrs push popfq out ficomp (bad) (bad) cld xchg faddl adc pushfq (bad) (bad) rex.RX (bad) sti add (bad) fwait push ds jg (bad) jnp rex.WRXB cli add hlt ds jl adc jns mov callq push fisttp test sbb rex.RXB repz push (bad) mov pop push rcrb mov fwait ja and fidiv lret fwait cmp jge std popfq (bad) retq sbb (bad) subl repz (bad) imul push pop int (bad) stos data16 cwtl adc jmpq mov mov rex.RB pushq sub (bad) adc sbb adc rex.X and (bad) cmp sbb xlat rex.WRX (bad) pushfq (bad) jle sub xor cmc sahf and (bad) (bad) sbb pop clc mov andl fdivrs repnz sub loope std jg xchg imul fisttpll cmp sub jb push test xor sti xor mov sti and imul pop movabs stos xchg iret mov (bad) andb (bad) pop mov cmp hlt or scas sbb je add mov fsubp movlps add mov callq and cmp sbb pop rex and add mov fwait repz mov mov rcll lea mov pushq jge lahf xor mov ja fwait adc (bad) mov roll andl mov (bad) movslq jrcxz fwait sarb cmc sbb (bad) loope mov rex.WXB (bad) (bad) cli fisubrl rorb hlt jle sub xchg adc (bad) fwait sbb cmc add gs cltd xchg lahf xlat cmpsl fisubr mov scas and rex.WR mov decl stos rcl xchg xor fwait ja push rex.RXB clc (bad) rcl orl mov mov pop cmp in setl or (bad) movsb mov xchg cmpl js (bad) (bad) adc pop stos fistl (bad) imul sbb push push in shl sbbl rex.WRX fwait sub nop xor popfq clc repnz (bad) xor flds stos notl faddl sarl fisubr (bad) rex.RXB pop pushq (bad) sbb rex.RX mov divl nop mov clc movslq movsl and and fwait (bad) test rex.WRB pushq rcrb (bad) (bad) stc add lret and stc mov shll rex.B fstpt imul add jl rcrb (bad) es rex.WB fwait out (bad) cli xor jp mov out shr (bad) rex.WRX lock (bad) insb movsb sti jmpq adc (bad) movabs callq (bad) add and cmpsb pushfq movabs out add insl (bad) (bad) (bad) in fistpl rex.RX sbbb cmp out sbb mov (bad) push jge iret cmpsl (bad) and cmp jmp jrcxz or (bad) jbe sub and mov xor sub test or fsubs pop (bad) sbb (bad) out (bad) insl jle loope (bad) sti (bad) mov lret int3 ja pushq mov xor vcvtdq2pd idiv mov cmp repnz mov mov mov xor (bad) fwait pop jno xchg rex.WRB lods fwait mov hlt xchg mov (bad) push mov or cli rex.WX fwait (bad) xor add test mov fwait stos rol xor and in sub in fwait mov stc in pushfq and add adc pushq rex.XB fwait rcr stos mulb mov mov (bad) rcrb rex.WRB rex.RX std clc xor sub cwtl fistl fwait or je (bad) xorl (bad) fdivs (bad) (bad) fwait (bad) sbb mov leaveq cmc jno mov sti addr32 lods sahf xchg fwait add xor loop pushq sbb imul sbb sub icebp shl fwait (bad) ss negb rorb xchg adc cmp fwait rorl cmp loopne stc (bad) js fisttpl movabs cld adc and in cmp fildl push movabs mov sbb jl (bad) pop sub repz nop sbb (bad) push jg cmp orl cmp lahf shlb cmp sbb sbb es xchg mov jbe pushq push scas adc (bad) jns and xlat sbb pop sbb jbe rex.WB sbb retq mov sub (bad) (bad) stc iret jnp pushfq outsl push fwait jmpq sbb push rex.RX roll mov fwait (bad) outsl (bad) (bad) and stos js pushq sti stc jns xor mov ja outsl fwait or int3 lock ficompl mov sbb out jmp lea and sbb sahf cmp (bad) or fistl xchg adc je,pt sub sbb hlt test ficomp fildl imul jp mov mov push repz loopne out and jne add lods mov sahf mov (bad) movabs sbb rolb rex.XB cmp (bad) sub cmp stos pop cmp insb (bad) pushq mov or sbb (bad) gs sbb (bad) (bad) xlat in mov (bad) (bad) pushfq cmpsl fisttpl data16 nop or rex.XB fwait adc (bad) sbb movabs jb (bad) and repz hlt cmp jo in (bad) or mov pop cmp adc xchg cwtl jns (bad) sbb mov mov (bad) jp cmp and add adc jl scas lock movsl pushq orl (bad) fwait popfq mov fs fwait xchg (bad) mov movabs sbb rex.WRB rolb mov xor loop mov ds adc cld cmc je cli add mov in cltd retq in flds fwait mov push (bad) mov pushq mov rex rcrb (bad) sub std sbb mov mov idivb cmp js mov fisttpll movsl (bad) sbb push incl (bad) notl jmp push (bad) cwtl sbb xchg (bad) xchg jno or negl jmp cwtl push movabs (bad) mov mov (bad) out cmc mov out xor rex scas out (bad) rex.WB fdivr sbb xor xchg out rol pop sbb loopne (bad) (bad) mov jge ror fnstsw insb repz sbb xor push jl pop cmovae sub mov (bad) out movabs (bad) (bad) (bad) rex.WB rex.RX xchg cmp rcrl pop push adc fisub (bad) (bad) rex.RX lea sbb movabs popfq add sub jrcxz rex.RX insb (bad) pop sahf cld jb jp rep xor cmp imul xor (bad) rex.WR rex.WRXB xchg cmp and fldt pop (bad) hlt xorl ss pop stos sahf rex.RB gs rex.RB in retq out jne repnz xchg rex.XB (bad) loope cmp sbb xchg mov rex.WRB xor (bad) repnz loop (bad) or sub rcr lea xlat roll push sahf rex.WX rex.WX stos (bad) cli addr32 int pop add orl movabs shll xchg lret (bad) (bad) test je repnz es sbb test hlt add (bad) sbb addr32 (bad) out pushfq mov rex.R pop loope mov shlb in addb popfq sub (bad) jo (bad) (bad) pop pop push pushfq rex.R ss mov punpcklwd xor rex.W fwait adc (bad) retq and fwait test (bad) testl xor movb je test sbb sbb es (bad) fwait cld lods stc mov xor xchg std iret jrcxz cld sbb fcmovnb adcb loopne xor jae mov push sbb iret pop pushq fwait mov imul cs retq mov callq decb fwait pushfq stc adc sbb pop add movsb jbe mov jg adc cmp jmp push rex.RX imul fmuls add push ds cs (bad) rex.WRXB fwait adc xor xor pop (bad) rex.WXB cmp sub imul (bad) and movabs icebp (bad) sahf fwait (bad) rex.WRX sbb xor or ss cmp xor sub fwait xchg mov in movabs rex.RX mov jp or jrcxz insb jnp rex.WB mov sti sbb push rcrl lock (bad) outsl mov rex.WRB (bad) or fwait mov movslq mov in mov push fsubl sub sbb adc movsb sbb mov mov (bad) jnp and int3 xor loope ds (bad) and div and xchg and (bad) sti out and lahf movslq lods rex.B and (bad) and add (bad) rex.WRB sbb loope stos pop rex.RXB out stos fwait xchg pop clc jo imul add push (bad) popfq adc sbbb add andl xchg adc rex.WB fwait popfq scas and sub fwait es fisttp fwait push outsl repnz sub mov fwait (bad) rex.WR popfq cmc push (bad) adc (bad) push cld shrl int3 movsl pop fild push movabs fsubrs frstor (bad) lods imul xchg cmp movabs test loopne rex.WB loope icebp and imul jge add lret cli fwait in cmp fwait sti bnd pushfq sbb sbb (bad) addl movsl pop mov test push adc sbb pop popfq sbb and sahf popfq sti rex.WXB in and (bad) cmp test retq sarl or mov xchg xchg cmp sarb (bad) data16 add jmp push (bad) push icebp mov (bad) outsb mov xchg mov shll out (bad) out movabs mov sbb cwtl (bad) sub lahf mov jmpq sti stc out int sbb jrcxz adc popfq lock scas stos add out rolb pushfq stos leaveq pushfq addr32 mov pop popfq pop (bad) movabs adc repz mov int push (bad) outsb cmp mov sbbl xchg mov pop cmp mov xor (bad) loop add jrcxz xor and movabs in xchg xor out sub test in nop xor pop or ds popq xchg jg sbb xchg pushq loop rex.RX lahf adc (bad) clc cmp mov xor fsubr rex.WX (bad) sahf rex.B es mov cmc mov jmp imul mov or mov imul sbb (bad) pop mov xchg jno sahf jmp pushq mov mulb lret pop mov shrb test sbb (bad) push (bad) xchg in lret and lret cmp and and adcl mull (bad) lea mov mov pushq jg,pn out pushq test add in mov sub push popfq mov xchg cmpsl in sbb jbe scas (bad) fild cmc rcll hlt (bad) lret jrcxz lods jns pushfq xlat pop addr32 (bad) jo sbb jnp pushq fisttpll (bad) rex iret (bad) and fsubs data16 push xchg mov (bad) jne cltd push (bad) fistp cmp popfq xchg fwait (bad) cmp (bad) add mov (bad) (bad) (bad) and mov mov cld (bad) (bad) mov (bad) pushq sub cmp imul imul (bad) cmp (bad) xchg test rcll and lods out and xor xor mov movsl and std shr pop mov mov xchg cmp xchg mov scas fcomps callq out fnstcw int fucomi (bad) cmp mov mov test test fldt mov mov xchg addr32 insb adc cmp mov xchg rex.WRX mov adc cwtl add cmpl and shrb shrl fistpl sbb (bad) rex.WXB mov push retq or and cmp lret xor pop jrcxz push xchg rex.WRXB repz (bad) mov and jno mov ds (bad) sub outsb push loop ss rex.WXB rep clc fcomps rex.RX rex.WXB mov or fstpt push std or cmp (bad) (bad) sub adcb cmp loop mov int3 or sbb cmp jmp fnsave outsl sbb sbb fnstenv mov leaveq frstor outsb (bad) sahf testb xchg (bad) outsl jmpq cmovae sbb movsl and cli (bad) add lods lret fisttpll and or jbe pushq xor stc pop jle loope sbb loop mov (bad) int3 push jae (bad) (bad) (bad) insb mov mov in add and mov loop in stc sbb lret xchg loope mov iret jrcxz retq rex.R push loop rex.WB je push out sub fistpl stos and mov rex.RX rex.WXB int3 jg jg cmp in lods and (bad) lods (bad) loopne sub es mov es adc (bad) insl mov cltd rex.WXB sub or xor push repnz fiaddl jae rex.RXB fisubl push scas mov divl sub cmp jrcxz jb pushfq and insb or or (bad) rex.WR mov jbe movslq rex.WX sbb sub in (bad) and lea in xor int3 rex.WX (bad) sbb mov jo loope sub (bad) push out popfq sahf xor ja (bad) in rex.RXB ja cmp sbb (bad) lods ss rex.R cmp mov cmp pop sbb (bad) (bad) (bad) add movabs add negb fwait jbe out mov (bad) stos in cmpsb mov adc rex.RXB xchg mov (bad) push in add fwait mov fxch rex.WX rex.WRB fwait pushfq rolb cli rex.X lods fwait cs rex.WRXB movabs push push and (bad) fsubrp xchg xchg shll (bad) mov xchg and adc sbb cmc jge in fldpi and mov sbb adc rex.XB mov or pop movsl int and xlat cs rex.WRXB ss mov xchg js loopne pop xchg rcll xor stos stc imul mov scas lahf divb retq push sbb decl stos (bad) int rex.W fwait jb jp (bad) sub or (bad) loopne mov cs cli cmpsl mov fwait rex.XB adc loope rex.RX fldcw sbb pushq mov popfq jmpq xchg (bad) jmpq popfq pushq repnz (bad) gs in fsubs xchg stc imul (bad) cmp loope and loope (bad) in push cmp out stos (bad) (bad) pop mov mov pushfq fmull pop popfq mov in rex.RX fwait clc cmpsl movabs mov pop shll (bad) and lret rex.WRX fidivl (bad) rex.WRX rex cltd movabs out test rex.RX mov or xchg (bad) testl js ss (bad) movabs push int push (bad) sbb mov cs std imul (bad) fistl sbb sbb sti fidivr in (bad) fsubrs outsb (bad) lahf lea cmp mov iret fwait leaveq cmp add fwait cmp lods push (bad) cli rex.WX retq scas adcl (bad) mov repnz (bad) (bad) retq outsb and push cwtl (bad) repz test (bad) mov (bad) in xchg (bad) cld sub (bad) mov sbbl fwait (bad) (bad) or adc pop pop fwait (bad) psllq cmp and mov fisubrl insl jmp xchg loop fldt pop rex.XB (bad) mov scas sbb push scas and jmpq fwait pop std rex.WRX xchg and hlt rcrb (bad) mov rex.B rex.WB sti mov xchg rex rex.RXB insb mov rex.WRB fwait jmpq loop pop sub loop fwait (bad) negb jb cmc mov xor (bad) lods (bad) sbb movsb callq movsl xchg fwait out ss mov fwait (bad) (bad) mov jle rex.WXB rex.WR lods outsb iret adc rex.R mov sub (bad) xchg sbb insb sbb (bad) sbb add adc xor jns lock mov in fwait add mov mov jrcxz jmpq cmp cmp xor pushq (bad) fwait and mov in fwait jmp sub (bad) pushfq jl out cmpsl (bad) rex.RB lret pop or retq push sbb (bad) test test cmp in sbb loop fistl andb cmp insl popfq lods movabs xchg rex.WRX sub (bad) cmp cmp mov stos sti adc (bad) (bad) loop movabs sbb xlat mov mov adc pushfq outsl lret (bad) sahf loopne rcrl callq in cmp (bad) cs fistpl outsb fcomps lahf callq or test mov pushfq scas jbe xlat test rex.RX add (bad) ds jmp fwait stos cmpsl int3 sbb sbb rex cmc mov movabs in or popfq adc sbb pop lea xchg add and mov push incl rex.WR fwait js add and or pop mov mov (bad) test nop (bad) cltd sahf mov jne (bad) xchg pushq add rex.B fwait xor fwait sub std adc mov jrcxz out jge push mov mov (bad) sub or xlat movslq data16 movslq lock push adc cld fist add pop and sub (bad) fwait or insb fwait shl jbe js adc ss xchg popfq (bad) jmp sub fwait sub retq or cmp imul pop out movsb mov pushfq cltd rcl or and mov add push pushfq divb pushq and rex.WR and cld cld ficompl sahf jae or in out (bad) fidivr rex.W push jrcxz (bad) xor and (bad) pop sbb sar mov faddl addr32 xor sahf shr sub or or movslq cwtl test jg loope stos cwtl (bad) pushq mov rex.X (bad) mov sti mov imul xlat cmc mov mov ljmp jmpq loop mov xor rex.RXB mov lods jnp sbb leaveq stc cmc stos rex.W es rex.X (bad) rex.R nop lcall test jl lret sbb lock ds retq adc and (bad) rex.WR rex.W icebp cmp fwait push pushfq rorl stos movsb add sti pop fs vandpd test xchg or popfq and push mov or add fisttpl sub push xor jge icebp rex.RX push rex.WXB xchg push stos pop outsb sbbl gs subl push mov stc retq mov pop fwait rex.WX js subl std sbb rex.W fcmovnb test adc test pushfq sbb sbb icebp and cmp hlt fwait icebp (bad) (bad) pop rex.W pushq scas or jmp (bad) add (bad) sbb (bad) or (bad) adc mov fwait stos xchg mov div rolb jb (bad) rex.WX rex.WRX pushq jl out fwait or rolb sahf sub xchg xchg jl xchg mov pop jl xor cmp test rex.WRXB jno (bad) (bad) or rex.WRX stos callq mov lock movsl retq or cmc push addr32 cmp rex.X rex.RXB rex.WRB jl mov fwait rex.XB push (bad) movabs test jns adc enterq pop insb (bad) jmpq leaveq imul cltd or (bad) push (bad) fxch cmp (bad) cmp or (bad) lret jmpq mov cmp adc rex.WRXB add rclb fwait clc popfq (bad) pushq fwait push (bad) (bad) js mov fwait adc (bad) add jae sti outsb cld in pop mov leaveq or xor jl xor scas add add clc sbb sbb pushq sbb movabs callq pop (bad) outsb jne xchg stos retq (bad) rcrl in sbb push movsl lock rex.RB (bad) mov pop cmp cs and icebp push data16 scas cmp mov shlb jbe rex.WRX iret stos ficompl rcr jle (bad) cli (bad) or je stos fwait int decl (bad) cmp (bad) pushq rcrl shl xchg jmp sub rsm pushfq add sbb movabs jo xchg (bad) sbb test movabs movabs mov outsb mov cwtl fwait subb rex.WRXB fwait ja lods xchg mov mov sbb callq (bad) rex.WRB rex.WX sub (bad) insb (bad) orl (bad) add (bad) xor (bad) lahf rex.RXB sbb xchg cmp pop stos sbb fcompl movabs push or (bad) push fmuls lods xor (bad) mov and cs adc xor (bad) imul sbbl fwait out int3 mov pop rex.RXB fwait int lret mov scas fwait pop add fwait stos flds mov (bad) in stc sahf movabs cmp adc jp insl push xchg fwait loop mov test sti adc cmc retq idivb (bad) out pop mov rex mov fnstenv and xchg fwait rex.WRB jbe rex.RX fwait cmp (bad) jl push imul adc cmp stc cli pop retq test xchg orb sbb iret icebp rex.XB fwait pop lahf ficom rcrl (bad) pop sub (bad) mov (bad) vmread xor jnp adc (bad) movsl cld mov add (bad) or out stos rex.WRX enterq (bad) mov loop mov stos pop pushq (bad) (bad) adc rcrb cmpsb scas lahf rorb cwtl and sbb lret lods cmpsb rex.WX sbb rex.XB fwait add scas mov (bad) jmpq movabs jp adc lret fwait nop (bad) lret xchg cli jl loopne mov or repz mov jmp test movsb jbe and adc leaveq ja mov mov jge rcrl jecxz xchg jmpq or fcomps jnp (bad) stc fwait sub push fistp in pop hlt (bad) and notl pushq sti imul adcl and (bad) sbb ror fs test sub js adc sti fist (bad) gs retq jle and mov outsl insw ds sub cmp in (bad) scas retq xor lahf rex.WRX fwait (bad) (bad) cmp callq mov jmp js nop cmp adc fwait add stc jle movabs xorb out sbbl (bad) sbb mov adc mov cmpsb stos (bad) (bad) cmp lock repnz mov lods push (bad) pop sbb sbb xchg jl fwait cltd cmpsb or sbb lods add jo xor out movsb push iret pop sbb and add jnp sub fs mov and or lret jle push enterq (bad) shll rex.WRXB loopne jle rorb out mov and in pushq fwait std popfq lock rex.RX nop (bad) xor rex.RB mov ss js add movabs rex.WX fcmovb add cmpsl rex.WX data16 hlt rex.RB mov sbb lods fwait movsb test pop (bad) (bad) adc retq je jo in test sbb out cmp stos adc pop imul int jns pushq jle fucomp repnz mov stc fistp jge (bad) adc cmp je es mov sahf adc or repnz and xor and stos fmull (bad) gs fwait or outsb or cmpsb and scas pushq hlt fwait add adc fstl rcr xchg and negl fsubs imul and lods sbbl and sub xor pop adc fwait jl adc icebp out fwait mov lret fnstcw repnz je insb clc popfq and (bad) test mov lea fwait iret insb movsb mov std fcmovb and push cltd pushq mov in xor push sar loope rex.WR cli or (bad) xchg movabs jbe and cltd iret (bad) sub es in push loopne mov cmp (bad) repz sbb rex.XB mov pushfq add sub xchg pop xchg (bad) lret sti xchg scas xchg fwait rex.X jo cmpsl xchg mov xor leaveq iret cmp fwait cmp mov loopne fwait callq push fwait test sbb sbb cmp jmp out fwait and enterq (bad) (bad) repnz loop fwait rex.WRXB sahf (bad) lea xchg jle (bad) imul pop in rcrb (bad) idiv leaveq fwait rorb rex.WRX rex.WB (bad) mov fwait and (bad) fwait test fxch cli fldl fwait xor insb std and movabs in fwait int rex.XB addr32 rex.RXB adc and rex.RB je std push retq and out mov cli fwait rex.W mov repz jnp add sbb mov pop sbb lahf sub fwait shl sbb mov fs insl imul and push xchg add mov movslq (bad) fnop cltd rex.RX (bad) fwait xor pushq sub jmp fwait insb jo (bad) rcl out fwait or adc jb leaveq (bad) hlt rex.XB rex.WX fwait pop sti jne adc adc (bad) jbe movabs mov pop mov and cmp icebp mov rex.WRB xchg fs leaveq add out fbstp sbb test fwait (bad) (bad) (bad) cmp gs and jl (bad) sub rex.WRXB shrl (bad) leaveq and pop (bad) or movabs (bad) cmc fwait xlat pushq rex.WB rex fwait je mov jns or (bad) jne fwait insb cmp repnz callq rex fwait clc xor cmp xor rex.WRX sub rex.WR fwait stos mov (bad) sbb out fdivrl (bad) pushq movslq xchg (bad) rex.WX subl rex.WR addr32 fsubs jae (bad) adc iret sub or fstps (bad) mov movabs mov test iret lahf nop loopne (bad) rex.XB rex.WRX outsl fdivs data16 (bad) jns imul pushfq xor mov mov mov in repnz or sahf xor cmp mov (bad) cwtl or adc (bad) movabs movsb int popfq add (bad) insl jo stos (bad) sbb mov mov sti mov push xchg pop lahf add (bad) xchg cli pop rex.RXB clc jrcxz adc rex.WB mov repz push int3 jp sbb rex rex push jmp pop (bad) pop pop sbb subl imul mov icebp stos cmp lods popfq fdivrs mov (bad) movabs jl repnz (bad) (bad) xor sbb sbb pushfq shll mov fsubrs rex.X sbb add (bad) (bad) fsubl je popfq mov push mull in sbb or mov rex.WR jle mov stc jo (bad) test sub jle dec mov je jrcxz test (bad) mov (bad) imul (bad) vpmacssdd pushq mov mov lods xchg xchg out (bad) in xchg test (bad) ds mov xor addl rex.RX (bad) (bad) jmpq rex.RXB xchg sarl xor sti mov mov fmull (bad) mov xchg movabs rcr sub or test sti xchg fstl cmp (bad) out pop (bad) lar lods (bad) push clc in out adc or gs pop outsb scas frstor rex.RX pop (bad) test fdivrl jg lods jg jl (bad) sbb lret (bad) (bad) mov clc (bad) (bad) adc xor and cli pushq retq jo cmc or (bad) in (bad) (bad) jnp and cwtl adc or push add jnp (bad) rex.WR (bad) xchg xchg or popfq adc mov xor ja,pt (bad) lret outsb sbb pushq cs xchg sbb in cmp (bad) (bad) sahf jbe mov out (bad) retq enterq or xchg (bad) retq sbb sbb fisubrl jg (bad) xor addr32 cli popfq imul fmuls adc (bad) in fdivrl (bad) adc mov loop mov loop in (bad) mov test clc and mull add rcrl pop xchg rex.RX pop in int3 rex.WRX insb cmp (bad) mov mov pop (bad) mov (bad) cmp cmp mov rex int mov or pushfq lods hlt (bad) cmpsl cwtl pushq (bad) in nop sti mov cwtl (bad) outsb fwait mov sbb jmpq rex.WXB js xor and iret in gs shrb or or mov mov stc (bad) rex rex.WXB push (bad) (bad) mov je enterq jle mov rex.RB (bad) cld rex.RXB and cmpsb rex.WRB clc rex.RX rex.RXB (bad) fnstsw rcrb movabs test fwait lods fldt lods mov xor rex.W xor or (bad) negl jno lock sbb jae (bad) out data16 setno (bad) and ror (bad) in push out out fwait xorb sti sbb lock fidivr fistpl cmp (bad) fistl push adcl jl sahf imul mov (bad) sub (bad) lret mov (bad) (bad) orb mov cld fnsave sbb cmp loopne pop addr32 out or xchg rex.RX loopne (bad) mov add rcll lret in sub or movabs cmc jmpq je xor sub fwait mov rex.WRX rex.RX fwait rex.WRB xchg (bad) cmpsl mull fnstsw fimull lahf imul cmp mov add ss scas cmpsl cwtl (bad) cmc and adc jns fwait jg (bad) xor fwait jrcxz mov or mov pushfq (bad) ja jbe retq xchg cmp rex.XB rex.WR (bad) rex.WX push xor ds adc pushfq sahf pop sbb movslq pop cmpsl jrcxz sub (bad) (bad) add movb mov xchg stos mov out (bad) xchg sbb rorl xlat xchg (bad) shrb jg mull xchg leaveq jbe sbb (bad) fistl js rex.WR jne (bad) mov rclb movsb jo adcl pop mov (bad) jl hlt push sub and push test (bad) rex.XB scas mov adc lret sbb int3 sbb (bad) jrcxz movmskps and cs rex.W lods pop retq and xchg outsb adc sub lret adc adc movabs cmc orl pushq clc ja ffreep rex.RXB mov divb iret lea mov fs (bad) mov mov imul rex.WRX (bad) scas pop clc (bad) jae (bad) jns or (bad) cmp retq push (bad) jns or sub sub or test clc xchg (bad) cwtl callq sub adc xor sti push std sbb and jns faddl mov out xchg or (bad) loopne iret gs (bad) (bad) (bad) in and sahf ficom and mov fwait or add lea pop es pop push xchg (bad) mov psrlw idivb (bad) stos loopne repnz fwait cmpsb (bad) jb stos rolb stc (bad) int3 jmp rcrb cmp mov loope xor rex push fwait mov adc fwait out cmp or cld add mov sub sti (bad) adc xor rex.WRX or rex xchg repz in sbb or (bad) mov mov rex rex.WRB fwait xchg mov and sbb adc mov jle lret xchg sahf movsl repz clc (bad) add stos pushq fwait pop rex.X cwtl or sar fwait sbb int3 cmp callq lahf ss rex.WRB rex.RX mov add (bad) movsb pop adc adc (bad) hlt (bad) pushfq lock rex.WRX fwait push xchg sub rcr (bad) insl adc rex.WX fwait or lret cmp jp stos lods mov jmpq cmp jmpq jle (bad) (bad) mov rex.XB cld rex.RX mov out xor stc sarl callq enterq rex.W scas rcll jbe faddl mov xor lea rex.WB movsl (bad) int retq fwait sbb movabs (bad) fwait leaveq stos and roll cmp scas rex.WR push xor (bad) ss sub (bad) jmp (bad) or insb loope mov callq and outsb xchg xchg (bad) sti or fwait mov mov pushfq movsb mov rex.WXB mov cmp (bad) xchg or cld movabs jb xor (bad) movabs sub movabs adc in insb or xchg orl scas sub clc fstpl (bad) rcr mov and jge ficompl sub fucom pxor movabs pop loop adc subl sub adc add (bad) cmp add fwait mov rex.XB pop jns shrb data16 mov xlat adcl (bad) xchg xchg (bad) cmpsb lods sbb frstor rcr sbb fwait add rex.RX sbb pushq cltd or (bad) rex.WR adc js repz cmp (bad) lock mov cmp fwait retq rex.XB fsubs push lea xchg (bad) sti jo ja test fwait (bad) xchg or popfq sbb shrl xchg stos movabs lret icebp movslq int fwait sbb mov xchg fwait andl mov xor fcmovne sahf cltd cmpsl cmpsb (bad) fwait add jne test cmp mov out clc sub pop imul mull add (bad) fwait pop out jge lret rex fwait jo add repz out test jge cmc rex.WB andl xchg mov movabs jo sub test and lock mov sar mov movslq jrcxz mov addr32 out cltd (bad) movl sbb outsl icebp stos add ds out xor js stos push fwait xchg sub fstps outsl sbb push jg movabs mov jae int3 fs (bad) xor test and cli out fwait stos (bad) xlat clc (bad) movsb lods mov sbb lea fsubrp fistp sahf cli add push jmp fdivr in (bad) sti sbb mov sbb iret and sbb pop fwait rex.XB mov adc stos mov repz xlat int3 xor (bad) sarl xchg movabs xlat (bad) jne jmpq rcll sbb jno and xchg rex.WRX mov sbb rex.WR sbb sbb and mov fstl or jae (bad) add retq adc xchg rex.WRX data16 fwait (bad) ja clc std pop fwait lret mov movsl (bad) fwait cltd shlb xchg jmp cli rex.WB adc hlt fucomi std rex.W fdivrl in je rex.WX adc rex.WR rcr sbb test stc fwait lods (bad) movups (bad) add rex.WRXB movslq or adc sbb fwait xor jno cmp stos test sbb push sti in fwait push pushq xor fwait cmpsl adc rex.WB cmp mov jns addr32 mov add rex.WR ud2 (bad) (bad) mov mov fwait adc (bad) mov or sub sbb fmul rcl and sbb sbb mov jrcxz xchg (bad) fwait jo movabs je sahf mov xchg jae push sti in (bad) (bad) js sub or or fwait (bad) cmpsl (bad) enterq rex.WB loop addl lock rex.X leaveq xchg out mov jmp mov pop icebp jae fwait (bad) movabs mov test sbb rex.WR fsubrl rcrl mov cmp fwait mov push pop movabs lods cmp sbbb xlat mov (bad) movabs sahf lahf sti es jmp push mov (bad) rex.WXB shrl (bad) push mov mov fadd cwtl sbb and loop es pminub pop or and push (bad) xor mov (bad) mov movabs movabs or stc enterq stos (bad) (bad) (bad) insb retq mov and jg cli mov hlt popfq push mov pop imul cli pop jrcxz fwait (bad) data16 stc (bad) popfq cs pushq fwait or in movsl cwtl mov (bad) adc (bad) mov movsl jb mov cltd repnz xlat or lret callq add sbb outsb rex.WB (bad) adc fistpl jmp rex.B fwait js sub (bad) fwait test movsl fstl xor popfq (bad) pop push retq shrl push (bad) iret (bad) fwait mov adc and testl push fwait rol (bad) jnp jg fs cmpsl (bad) fwait movslq popfq sahf rex.WRB rex.WRB rex adc sbb pop (bad) ja (bad) and add (bad) rex.WX (bad) push fwait mov (bad) push or jp (bad) mov adc sub add scas loopne fwait mov int (bad) and xchg movabs rex.X lods outsb fwait popfq pushq (bad) pushq je js gs (bad) xlat repz mov sbb in rex.WX movsl retq in movsb (bad) imul rex.B push (bad) cmp pushfq xchg imul insb fwait mov scas sar roll (bad) (bad) cmc cmp cmp (bad) fisttpl movslq test insl and add adc (bad) (bad) fwait or add jmpq notb rex.B frstor jns sbb mov and (bad) (bad) mov movabs rex.WX adc jge clc (bad) fwait popfq leaveq (bad) out in jp sbb out retq (bad) icebp (bad) fcoml xchg mov jle loope rex.X hlt fwait (bad) sahf (bad) rex.RXB (bad) fwait jmpq jno (bad) pushfq pop mov adc xor xchg rex.WR jl xchg mov mov (bad) (bad) jno fbld out adc xlat pop sub jp sub movabs jle fwait xchg es rex.WXB xchg retq sbb jge popfq or or (bad) add mov (bad) imul fcmovnu iret (bad) lods jmp out in sub (bad) int3 xchg out movsb sub fs xchg (bad) movabs rex.R (bad) (bad) leaveq sbb rex.WX shl (bad) sbb cmp fucomi fisubl pop (bad) outsb fsave (bad) xchg (bad) rcr std cmpsl hlt pushfq cmp rex.WRX (bad) mov pop fstpt cmpsl (bad) shll insb subb and fistpl int3 (bad) movabs test sbbb sbb jnp cmp fwait jg add pushq sbb fistl mov jns scas negl lret adc pushfq xchg out cmp sti scas (bad) fildl sub movabs cs (bad) xchg add mov xchg mov jge sti iret sbb rex.WRX (bad) mov icebp (bad) cmp outsb pop mov (bad) (bad) movabs sbb (bad) pop lret outsb shlb fwait rex.W or cmp nop push lret mov fwait mov (bad) cmp push ficompl xor (bad) addr32 add movabs je sbb adc in (bad) stos rex.WR ds lahf or fwait push mov (bad) nop mov lret movsl jmp mov (bad) rex.WRXB mov jle movabs push mov pop jmpq sarb xor cwtl movabs fisubr pop loope sub jmp (bad) mov movabs movslq (bad) mov movabs popfq fildl (bad) rex.XB rex.RB xor loope data16 cmpsb cld mov pop (bad) (bad) mov sbb rcrb loope sbb mov (bad) xor mov cmpsb retq fidivrl fwait int3 jns mov mov ja insb pushfq (bad) stos (bad) mov lret adc sti mov cmc (bad) outsl jrcxz out leaveq xchg rorl (bad) int cltd add mov stos out (bad) sub rex.XB cmp adc (bad) cwtl lret xchg iret fwait mov xor (bad) fwait jns (bad) lahf sub es mov nop and mov push rex.WXB fwait pop sub jbe repz or cwtl jle rex.WRX mov sbb mov (bad) out (bad) (bad) xchg jge test push mov xchg mov fistpll stos sahf fild fwait pop mov push mov or cltd mov in sbb (bad) add scas jg ffreep imul loop mov movslq out stos sub jno mov (bad) stos add push movslq jmp add loope sbb mov push pop sbb sbb mov lea jle add jne sbb (bad) cld rex.WXB in pop stos mov xor (bad) loope je es (bad) out mov rex.X (bad) idiv add (bad) enterq cmpsl fwait pushq fldcw and insl movabs rex.W fwait jo and (bad) lods (bad) rolb jno (bad) imul in (bad) (bad) rex.WX mov rex.WB btr pushfq enterq insl (bad) sbb jae xchg and jmp mov sbb add fisttpl sbb or rex.WRXB rex.B add stos and stos sbb xchg sbb test movabs rex.W rex push (bad) pop (bad) cmp jle iret (bad) xlat (bad) cmp cmp add fwait scas xor fwait add and mov (bad) cmp or mov sbbl (bad) (bad) xchg rex.WRXB xor (bad) ja sbb stos je cmp push fwait and cmp outsb add ds jne lret loopne jmpq stos mov callq pop (bad) out sbb loopne (bad) outsb (bad) in (bad) or push loop cmp (bad) jge add roll (bad) xchg fwait and (bad) and fwait addl pop sti (bad) add rcll mov loop rex.B callq adc in test ds icebp nop jl sbb stos loopne mov rex.WRB jg or fwait adc ds test rex.RXB mov fcompl jb add stos add fistl cmp in (bad) adc sub jl movb rex.XB fstpt fwait popfq mov movsl rcrl sub add stos movsb leaveq rex.WX test (bad) jrcxz rex.WR sbb jp mov out mov add and jle add fstpl and rex.R hlt and jno sub cli nopl (bad) or stos sti imul (bad) fwait sahf jge (bad) iret loop pushq xchg int3 in fsincos lods (bad) xor cmp rex.RB fst fwait sub xchg ja jo xor (bad) insb ds movabs fwait add xchg (bad) mov imul pop retq rex.WR xlat popfq (bad) repnz movabs push notl cmc or xchg jg add scas shrl jp xor xor (bad) movsl mov or push fisttp fwait pushfq ja and (bad) out rex.B fwait (bad) sbb outsl hlt fwait retq in (bad) in fwait movsb (bad) adc fidivrl rex.XB ss mov (bad) mov rex.RB push cmp xchg rcr (bad) insb (bad) xor rcrl mov lret and (bad) ds rex.B add shrb sti rex.WRB fimul cmp lods adc adc sbb movabs fwait xchg cmp movsl adc sub and sbb mov sub xchg (bad) or movslq sahf enterq rex.W (bad) fwait xchg add hlt loop (bad) rex.RX fwait cltd (bad) adc pop clc jmpq out xchg in xor rclb mov and and cmp (bad) (bad) xchg outsl mov (bad) rex.RX int (bad) mov pushfq mov (bad) fistp pop movl mov push callq loopne sbb jae and push fsubs (bad) rex.B loopne mov sahf fwait mov push cld cld adcb sub (bad) mov adc fwait (bad) jge sbb mov xlat insl (bad) xor fldl cmpsb sbb xchg loope (bad) pop (bad) cltd movabs jmp cmc sub add orb rex.WRXB rex.WR (bad) (bad) std sbb mov fwait (bad) jo mov push rex.R pushq rex.X pop (bad) jg fwait or cmp adc rex.WRXB adc add cmc mov jb sti enterq retq xchg rex.WX pop pushq mov add jmp stos movabs pop sbb jo insb and movabs retq adc push sbb negb sbb retq jae out fs add (bad) xor fwait (bad) or test (bad) rex.RB scas scas fwait sub fwait (bad) push cs cmpsl fwait pushfq (bad) stos stc cld movabs add lret add rex.R push fwait subl imul callq cmp fistp mov fwait add lret fwait pop loopne pop cmp (bad) fcompl enterq lret test sub pop pop stos jo out callq (bad) fisttp (bad) xchg (bad) mov movabs pop (bad) (bad) (bad) fsts outsb sti in sub (bad) jo or rex.XB mov push fwait mov cmp (bad) fimul (bad) imul xor test add jle movsb repnz adc xchg adc outsb cmc lea sahf out enterq add outsb rex.RX (bad) (bad) xchg mov sub jne ds stc or sbb test sbb in xchg xchg or cli fsubrl movsb xor stc sub sub mov cmp mov insb nop movsl (bad) stos mov out lock std loope (bad) rex.WX push xor (bad) sbb mov (bad) mov (bad) fwait (bad) cwtl xchg or (bad) imul shr lret (bad) jbe xchg pop stc and xchg test lock cs jns incl retq cli movsb (bad) adc in test ds sarb mov pop scas fwait movabs (bad) mov push cmpsl sbb xchg adc cmpl add xor pushfq cmp (bad) sub lods mov rex.RB fwait vpunpckhqdq clc adc xchg (bad) sti mov or (bad) ficompl (bad) mov cmpsb mov (bad) add insl sub cld pop rex.RB mov int3 jb mov stos movabs fucomip add sbb clc jl push stc cwtl lock jne stc adc push fwait and test xchg out (bad) (bad) rex.RX and roll pop rolb fwait xorl shll mov xchg xchg sbb stos jg sbb int3 stos adc fstl shl xchg pushfq fwait imul mov cltd test or fwait and std pop outsb sub (bad) pop sub rex.WR sub fisttpl rex.X mov (bad) jns push pop (bad) sbb out push and int3 lea (bad) lock mov movabs xchg data16 pushfq fwait jo frstor push jmpq jno and (bad) sub xor cld fs in mov mov xor out movsl jmp (bad) repnz fistl cld (bad) xchg sbb pop int push js leaveq or (bad) int3 fcmovnbe add and jae pop lahf xchg fwait sbb add push test stos xchg mov mov popfq (bad) notl jl mul rcll movabs sbb pop gs add fldenv (bad) iret rex.RB mov add imul or sub sbb roll (bad) mov loop rex (bad) xchg andb sbbb mov sbb pop out add loope cwtl (bad) rex.XB movabs (bad) cld xchg rex.WRB (bad) sbb rorb add sbb out movabs leaveq movabs out xor jnp (bad) fs callq rex.X mov insl (bad) jle pop rex.XB jo (bad) sub mov and (bad) movabs rex.X rex.WXB fs adc rex.W repnz fild outsl cmp rex.RX cmp (bad) or loope sbb jns mov xlat out sbb rolb ja callq pushfq (bad) (bad) rex.WRX adc sub and pop pop sub (bad) xor imul rolb mov repz insb mov mov stos in sti xchg rex.RXB imul rclb or mov jbe (bad) (bad) jrcxz push (bad) std (bad) imul fadd test rex.XB fwait (bad) pushfq xor pop jb pushq rex.RXB or int iret mov jne add cmp mov lret (bad) pop lea xchg and test sbb (bad) scas scas (bad) fbstp (bad) rep cmp fimull jge xor fs add mov (bad) pushfq out (bad) rex.WX cmp sbb int3 loopne retq (bad) nop cltd or (bad) mov xchg adc int mov incb cmp test sbb movabs cmp mov add xchg je push sbb xor es sbb and (bad) (bad) int (bad) adc std mov add (bad) sbb movsl mov fstpl cmp xchg fsubrp jl push (bad) movl in mov movabs movsb stc pushq (bad) and shrl gs cmovle es jo sbb cmpsb (bad) (bad) (bad) rex.RXB in sahf pop adc push rex.XB cwtl sahf lock jl pop (bad) rex.RB shlb xchg ss pop jb sbb sub (bad) pop xlat pushfq rex.XB (bad) jno cld hlt retq scas xchg out rorl loopne and icebp sahf sbb mov imul add add sbb ds or xor rex.WXB adc mov rex.RB mov sbb rex.WR test in sub rex.WX movsb rex.WR (bad) retq rex.WR mov pop pop rex.WRB add xchg xchg add sbb sahf (bad) (bad) (bad) lret rex.XB scas cmp xor sbb xlat movslq (bad) jae cmp jmpq js mov scas jns,pt loop push rex.B or movsl rex xchg add (bad) (bad) cmp mov int xor cmp jo repnz sub and movl popfq mov insb lret mov push jbe (bad) popfq scas int (bad) test scas push nopl xor rex.WRB (bad) mov sbb (bad) callq rex.X jg lods cld mov movslq mov std (bad) rcr rex.WX cmp mov mov fs rorl or sbb push int3 (bad) and (bad) (bad) fwait sbb lret cltd add or mov push xchg add retq pushq mov in test jb pop (bad) icebp sub hlt fwait (bad) callq adc (bad) push (bad) (bad) sbb mov lret loop (bad) insl or mov sbb gs jae rex cmp and fwait xchg mov stos cmp movabs cmp (bad) pop rcll scas fsubrs sbb xor or rex.WXB test xchg rex.X rex.X rex.WB rex.WRX jge cltd jo mov fwait sub pop scas adc sbb movslq (bad) fwait (bad) jp push jg js fwait es or fdivl sbb pop and sbb clc xor loop cli sub gs add (bad) cmpsl callq cmp icebp jne sbb cltd retq (bad) xor (bad) in pop add loopne rex.RX and (bad) (bad) mov jrcxz lret lea sbb pop or iret lahf mov imul (bad) out sub testl retq push xchg pushq (bad) adc retq add add lods (bad) vhsubpd sbb (bad) cmp sti je rex.WR and jb (bad) pushq push (bad) rex.RX mov or nop rcll rclb in fldcw (bad) fwait sub out rex.XB int3 test sti gs lret scas adc out jmp test fwait jp xchg xor and mov rex.RXB rex.WRB fwait outsb clc lea in fwait mov out fnstenv (bad) xchg or clc movsl mov cmp sub (bad) fwait rex.W xchg rex.WRX xor push addl fwait test adc fwait jne loop pop in mov fwait push adc imul loope rex.RXB callq stc mov (bad) rex.RB fistpll js jl pushfq movsb adc mov (bad) fwait jp rex.WRX loop in fwait iret sub pop rex.WX fwait cmp lods mov cmp add rex.B jb cmpsb (bad) jrcxz movabs xchg rex.XB rex.WX lret adc jnp (bad) xchg push push (bad) mov (bad) fwait (bad) retq test rex.WRX (bad) sub adc int sub gs addb imul xor out fwait cmp add imul fwait and movsl retq sub (bad) sbb or add xor outsl cmpsb rex.X xchg and jmp sti insb mov out mov movabs mov clc lea sub (bad) rex.RB fwait rol movslq movabs sbb fwait popfq clc (bad) jne (bad) jmp fwait mov rex.WX movabs sbb std rex.W or (bad) (bad) cmp mov jb jnp popfq (bad) out rex mov mov or fwait pop pop push (bad) (bad) test (bad) sbb in (bad) sbb (bad) out loope adc nop add fwait rex.WXB (bad) mov fwait and cmpl cs fwait adc lods mov loope fwait adc add lret adc xor sbb cmp jbe or outsb fwait insb cmpsl add in cmc int3 std pushfq sub jl idiv test movabs loope jbe push mov fwait xor cmp rex.R pushfq ds jae (bad) in fwait add std nop sbb mov mov sahf rex.RXB rex lea xchg test jae mov scas fwait cli sub mov fwait (bad) int3 cmp fwait mov stos jl mov mov adc scas sbb add (bad) movsl mov cmp pop sbb xor callq pushq (bad) stos (bad) cmpsb lods xor jp sbb rex.WR (bad) fwait sahf rex.WXB (bad) sub mov nop rex.R sbb movabs jne (bad) cmp test repz sti enterq rex.WX mov jp mov xor (bad) mov sahf repnz (bad) add (bad) fwait lret (bad) sub scas int3 and pop (bad) push pop mov sbb xchg lock mov fwait pushq (bad) and sarw jle mov jne and fwait (bad) xchg adc fwait mov (bad) movabs mov (bad) (bad) xchg (bad) sbbl icebp (bad) sbb xor (bad) roll add in mov xor pop test and push fwait (bad) rex.XB cmp (bad) pop jns adc and mov rex.WRX (bad) (bad) xchg rex.XB fwait cmp in es adc enterq pop xor lods jmp sub jg loope (bad) fwait out (bad) jne rex.WRXB push fwait movsl (bad) or nop xchg push fwait xor xchg (bad) movabs imul mov rorl mov mov test cli (bad) insl rex.RX jmp leaveq (bad) fwait mov adc fmul pop (bad) (bad) and sbb rex.WB (bad) ficomp test nop cmp mov (bad) pop cmp sbb sub idivb (bad) (bad) jrcxz (bad) and hlt (bad) sbb pop (bad) sbb fdivp cltd jno movslq pushfq insb and outsl shrb add (bad) sbb (bad) (bad) mov xor cmp lods and (bad) (bad) xor stc loop mov sub stos adc in (bad) add sbb lock fildl movsl adcb jno (bad) cmp sbb fs fwait ss and (bad) test fcompl stos leaveq (bad) xchg je (bad) pop pushq scas movabs loope (bad) in add fldt adc in out fwait rex.X pop mov cs adcl sbb sbb movabs test (bad) xchg sarl pop or out not stos lret and (bad) xchg ds jmp adc sahf fwait lock (bad) scas adcl rex.WRXB rex.RX or in or (bad) andb xchg movabs (bad) je jmp jge add cmp movl fwait lahf adc sahf xchg add fcomi rex.WXB stos jrcxz movabs sbb pop lret mov js repnz pop fisttpl (bad) pushfq pop ficomp xchg sbb (bad) xor test (bad) (bad) pushq addl push rex.XB cmpsl fwait leaveq adc test nop cmp mov (bad) cmp mov ficoml sub xchg movsb xchg lahf (bad) jrcxz (bad) gs fwait pop fs push xchg sub sti sbb (bad) cmp xor in stos and jns cmp sahf fstl (bad) sbb retq (bad) fwait movabs push adc addr32 jns lret sbb xchg rex.W fwait addr32 pop (bad) mov fs sub sbb pushq (bad) and movabs (bad) popfq add out fistpl bts (bad) stc movabs mov stos (bad) xacquire push cmpsb add (bad) mov loope xchg add lahf mov (bad) cmpsl fild push xchg mov add stos div fdivrs (bad) rex.RB adc xchg and stos fwait mov jb lret rex.X fwait xor push xor rex.WB rex.WRX mov (bad) jne fwait js rex.WXB add or mov (bad) sti pushfq rex.W fwait mov push in cld outsl ds test push rex.RX incb popfq or pushq pop cmp popfq rex.WRX lods jrcxz sti mov rex.X std adc pushq sahf rex.XB (bad) xchg xchg fstps ss (bad) outsb jecxz lahf outsl mov loopne nop movsl xchg stc cwtl rex.WRX int3 xlat (bad) in push movsb int3 sbb sbb iret pop sbb push (bad) xchg fwait (bad) je orl pop mov cmpsl add jg rcrl pushq fstpt and (bad) adc add scas out es push rex.WRB lods mov outsb gs rex.WB in jl mov push fildll sahf mov data16 imul movabs mov add es fstpt push add popfq xchg (bad) pop scas push imul outsl (bad) out popfq loopne rex.WR repnz callq lret imul hlt fwait and fnsave mov or insl jrcxz (bad) push xlat jle fwait pop adc sbb cmp and fwait and stc lret adc iret rex sbb (bad) (bad) jmp callq push out in lret pop fwait add mov (bad) cmp and adc retq negb xchg test hlt sbb (bad) (bad) mov xor popfq ja clc or (bad) fwait int cltd cmp rex.RXB add ficomp lea jle jrcxz mov test (bad) adc rex movsl push cmp (bad) nop cmc xor rex.RB out (bad) adc add push ficom or sahf sub fwait or jne rex.X out fiadd in adc add retq cmpsl fwait adc mov mov or sbb adc xchg mov jmp pop fdivrp mov mov sub (bad) adc push rex.WRXB fwait (bad) (bad) and jbe (bad) mov fidiv mov or ss sub or fwait insl test mov xchg fisttp nop jbe (bad) lahf out cli xchg jmpq rex.WXB mov mov jmpq jo lods movabs cmp sti (bad) lret and iret adc cmc and jnp and jo mov cmp fwait jmpq xchg jle fwait (bad) xor js pop rclb sbb cld add test fwait push stos cmp sahf scas sbb add or outsb cmp movabs fwait push jmpq nop jo lea loopne pop rex.B rex.WB rclb out jno push test push loope (bad) xchg cmpb push (bad) ja outsl xor jmpq sbb mov iret fwait jmpq test addr32 fldt (bad) (bad) repz movabs and hlt pushfq rolb gs movslq push outsb rex.WR movsb or lret sbb jns (bad) in fwait (bad) jne cwtl cmp movabs (bad) fwait movslq mov rex fwait insl and (bad) je add stos sbb fwait in jg mov mov (bad) sahf and jne out jp fildl sbb out rcll (bad) pop (bad) fwait mov push or movsl adc pop retq (bad) adc (bad) rex.RXB int (bad) cs jge sti adc pop sti fwait cli push fidivr fwait and mov retq mov sub xor sbbb repz mov mov pop adc insl (bad) xor rcrb or and sbb pushq mov sbb mov pushfq jae mov mov (bad) (bad) pushq cmpl cltd (bad) std jnp (bad) rex.XB int3 sbb xchg adc in leaveq nop xor fwait pop sahf pop jb jne mov xlat in jmp xor push (bad) loope and sbb (bad) pop retq jl retq int fsubl jg sbb xor fldt adc fwait lahf (bad) rcl (bad) sub mov sti out fistpl xchg cmp adc mov loope fwait mov mov sbb adc xorl popq (bad) cltd mov xchg pushfq sub pop mov xor fwait sbb stos push retq xchg (bad) or jl in sti scas fisttpl push (bad) fwait (bad) fbld xchg movsb test (bad) xchg es (bad) gs (bad) adc in callq push adc leaveq cmpsb movslq mov fdivl sbb xor xchg out jp sbb shrb mov movabs (bad) jge xchg or clc sbb add xchg mulb and push insl rex.X pop (bad) xlat (bad) callq test adc push loop sarl xchg retq push mov (bad) push mul and rex.RX ds sbb xor xchg cld mov mov int3 lret mov (bad) jmp mov cs pop out jbe sbb (bad) movabs sahf sbb icebp addr32 (bad) cmpsl movabs (bad) jmpq in jo callq sub cmp pop stos lret (bad) mov lsl out sahf sbb sbb (bad) mov sar jge jo movsb or mov xor mov clc nop mov or lods mov out cld movabs pushq add lock in shlb jns pop (bad) jne enterq pop negl hlt cmp or fistp (bad) cmc gs xchg mov loope or rex.WR rex.WR mov lea callq adc leaveq ficom mov mov lock test outsl mov fwait sub fs fwait rex.XB imul rcrb mov cmp mov fsubr fwait jns push cmp and sti xchg xchg mov outsb add xchg mov ficoml mov es (bad) rex.W data16 mov int out pop fwait sub xchg (bad) fwait mov and fwait sub retq adc ja test clc pop jmp pushfq rex.XB rex.XB lock rex.WR repz and mov cmp sub mov (bad) fwait cmp rcrb out xchg js mov jmpq addr32 jrcxz fwait cli out movsb in push (bad) adc xor lock fwait hlt mov outsb lret fwait jnp xchg mov xchg (bad) lods fwait and mov movsb fwait loopne (bad) (bad) mov pushfq enterq js add int3 pop (bad) mov cmpb fwait xchg rex.RX sub xor and jae popfq xchg test mov (bad) icebp sbb and jrcxz (bad) fwait clc cmpsl xchg movabs rex.X retq lret out rex.WX repz mov (bad) fwait cli roll fisubrl cmp mov test fcomps or mov sub cmp or out imul jo pop fistp stc xor mov pushq loope lret pop mov mov mov jrcxz out stos rex.XB push cmp xchg xor test cmp idivb pop js (bad) xchg pop test pushq movabs pushq jl fstps adc fwait xor rex.X rex.B fwait (bad) mov pop (bad) (bad) fs sub sbbb and lret add rex.X fs pushq or fwait rex.WRX jnp (bad) mov iret cli add sub or imul rex.B fwait and lahf jne enterq xchg mov xchg rex.RB jnp,pt jmp (bad) mov in mov xor fwait add cmp xchg xchg es pushfq out pop fwait cmpsl mov rex.RB repnz sbb or mov leaveq jle mov (bad) (bad) clc sahf fwait pop scas mov cltd sbb jle mov cltd sarl push xchg movabs (bad) nop pushq in fwait mov mov cld movslq (bad) jrcxz add sbb pushq add mov pop (bad) fcomi sbbb rex.WR rex.B adc and (bad) jmpq mov mulb push ss enterq push mov sahf pop out psrlq fwait push jo js cmpsb or sti sahf xor xor loopne push sti faddp jo outsl movslq (bad) mov rex.WRB (bad) sbb sti jp and xor or jle cmp insb jrcxz imul push loopne andb insb mov fwait jl ror push test lcall outsb fistl adc sarb sahf or rcrb lea loope sbb (bad) mov fcmovne (bad) ds fwait sub scas (bad) cmpl or mov fisub xchg popfq iret pushq pop test in add push fnstcw push jnp add rex.WXB orb and movabs and (bad) jo xorl (bad) jnp adc mov and (bad) fstps sbb (bad) adc (bad) std (bad) and insb jne cmp xor add cmp popq xorb mov shrl (bad) rex.WRX sub sub pushq outsl rex.RXB add or movabs retq pushfq (bad) stos sti fwait movabs sub fwait mov mov jle callq and and out stos adc xor test (bad) sbb rex.WB xor (bad) fwait adc movslq (bad) sbb xor mov xchg rex.R pop fistpl xlat adc movabs or cltd mov sub callq fwait popfq iret test fwait stos xchg fcmovnb xchg cld sub fwait cli mov (bad) (bad) mov icebp pushq xchg sub iret or loopne,pn fwait hlt mov (bad) sbb mov jge cmp ja or movabs push fwait add xchg data16 shlb xchg std (bad) fwait cmpsl rex.WR sbb xchg movabs mov pop add pushfq mov cmc jrcxz je mov jl adc test fwait mov add movabs lea or mov insl je (bad) loopne sbb out xchg int3 sub or adcb xchg push or jge fwait add (bad) add movsb sbb out sahf and cmp stos rex.XB push sub sti xchg movabs fwait add sub nop in outsl rorl lea shrl retq jrcxz iret cmp rex.WB or sbb pop sub callq (bad) scas (bad) jne sbb rcll jmpq push fistpl mov (bad) (bad) insl sub flds (bad) repz rex.WRX shll mov (bad) out test jl cmp in movabs rcr js fbld cltd mov xchg mov rex xchg jne add in callq (bad) cmovno cli in pop retq add or jmp rcr outsl sub imul or sbb movsl (bad) movabs loope and fwait mov fidiv or stos outsb fwait jmpq fisubrl fwait loop (bad) callq add rex.WXB iret rex.RXB rex.RX rex.WX int3 jp (bad) in jno jns or rex.R adc sub movabs rorb pop and sbb or fwait (bad) jge mov sbb add sbb adc in (bad) pop add fwait icebp sbb rex.X xor rcr mov fwait mov xchg jae sbbl (bad) icebp fcmovu (bad) stos out or jmpq loope loop lods (bad) fisttpl sub movsb pop fnstenv lahf fwait bswap cltd xchg icebp lea rex.W mov fwait sub push fsubrp fwait xor lret (bad) scas fwait movabs pop lret xor sti stos mov pop (bad) sub xor out ror xchg retq and cmp xor xchg in xchg fwait and adcb rex.RX test xlat nop fwait sub out pop (bad) jmpq (bad) test sbb cltd rex.X (bad) scas rcrl jge and cmp push mov fldcw cmove push cmp (bad) cld iret (bad) pop hlt (bad) retq outsl sbb (bad) (bad) fwait rex.X sub lods jo fwait test xchg rex.WRXB cmovae jge icebp sbb (bad) rex.WX in repz rex.WXB cwtl adc lret cmpsl sbbl mov sbb (bad) or sub rex.WB repz cmc xchg jrcxz cmp add pushq leaveq (bad) stos std js andl fwait or (bad) rex.WB cmpsl sbb cs sbb lret and fildl sbb (bad) adc popfq push outsb push sti int3 rex.WX fwait retq fldl push (bad) pop and ds xchg adc ror push icebp mov out (bad) pop callq iret sbb js (bad) jle adc cli std pop jmp push xchg (bad) add fwait cmp add ss (bad) insb sbb jl rex.WRXB mov es (bad) and (bad) std rex.RB or hlt fwait xchg xchg out fcompl and xchg lea mov imul (bad) (bad) xor stos ror add test add adc jo add rcr movsb jrcxz adc scas jne mov fwait subl (bad) cltd push jge mov (bad) sbb xchg add mov jb rcrb (bad) ffreep fadds or adc mov cmp adc sti (bad) adc (bad) fwait gs in es fwait jns jrcxz rex.XB fwait test pop addr32 pop rex.RX sub rex.WRB repnz add (bad) fwait (bad) (bad) and and imul mov fstpt loopne fwait pop (bad) (bad) movsl hlt movabs or lock (bad) fidivr (bad) xchg lret lods rclb xchg lods xchg pushq (bad) add (bad) fwait xchg (bad) lea jns rex.R push or clc test (bad) sub fwait add pop fwait out cltd or (bad) xor jno cli xchg scas int3 rex.RX clc pop insb jnp scas or fwait cmp (bad) leaveq rex.WB retq mov mov neg push fwait (bad) or fcompl in idiv loop lcall lret fs xchg (bad) sbb xor clc or add mov jg rex mov fwait jmpq movabs rex.RB pop mov leaveq (bad) and fwait lock retq divl (bad) faddl jrcxz loop repnz xor loope hlt jg sti mov (bad) out and cmp repnz (bad) jle sahf fcmovnbe movabs sahf repz (bad) (bad) cld cmc (bad) rex.WRX (bad) mov pop mov sbb mov (bad) sub add repnz adc push (bad) rex.WXB xor jge fsubs rex.B mov fsts fstpl or testl rex.RXB (bad) (bad) rex.W or retq (bad) sti (bad) jg sub jmpq xor cwtl fwait cmp (bad) nop or mov mov add lcall xchg lret (bad) cmp rcrl sbb rex.X rex.WRX repz stos xor sbb or test insl rex.WXB fwait (bad) push jl fs popq stos stos add sbb jrcxz pop sbb jo movabs (bad) (bad) push (bad) xchg add sbb fstpt cli jno or repnz ja rcll lea insb rol repz mov movabs callq pop (bad) pop (bad) adc jle xor jmp mov in (bad) xor mov out out xchg mov (bad) or (bad) fwait imul mov adc jo cmc lods sbb movabs add lahf xchg jmp mov out pushfq and insb test icebp test loope xor jae test fwait callq outsb (bad) xor mov pinsrw jge rex.WR fwait cmp fsub imul lock fistpl mov mov (bad) xor (bad) ficomp jbe fndisi(8087 (bad) in sbb (bad) push adc sbb lahf (bad) fwait ud2 pop jmpq pushfq scas jl emms pop pop rorl mov (bad) rcl xor js stc mov fwait pop lret (bad) rex.WRB pop jb jne (bad) fcomps fldt js add je rcll test mov fwait xor and rex.WRX pop or rex.WX and (bad) jg (bad) insb and pop mov sbb (bad) or and ds cld repnz lret xchg (bad) pushfq pushfq retq stc (bad) cmp rex.X pushfq xor je loop lods or rex.W imul mov test jae xchg (bad) mov push sbb mov pushq pop adc xor (bad) imulb xor add (bad) mov mull add and fwait or ja fbld mov cmp adc out xor in lret xchg xor cmp fwait and sbb sub sar (bad) jno xor fwait jle xor rex.X xorl movabs fwait cmp cmp add mov sbb sbb cmpl ss jl (bad) mov out pop loopne (bad) (bad) mov in push (bad) pop fwait jno pushq lock rcrl xchg nop xor (bad) jbe rex.W movsl pushfq movabs (bad) retq in mov (bad) xor sub rcrb fwait adc mov test icebp xchg fwait sbb shll loope cmpl fcomps mov adc (bad) (bad) ds (bad) sbb (bad) rex.WXB sbb xchg pop enterq repz fisub shrl iret mov test (bad) negb fwait (bad) lock adc mov xchg decl ds mov adc js fildl sbb and icebp push xchg int3 mov test push add add mov jmp xor fwait stc hlt rep movabs (bad) sub mov pushq test pop nop fwait pop out xchg cli and test (bad) cmp (bad) stos out (bad) callq fwait cwtl movabs int and outsb jae (bad) cmp shr cmp sbb wrmsr ds stc xor (bad) pushfq mov adc fs ss mov rex.RXB int3 (bad) fwait js lods repz and movabs sub mov xchg push fwait cmpsb cmc xchg (bad) or fs test mov xchg or rex.WXB retq pushq out rex.RXB movabs sbb (bad) imul rex.RXB jrcxz pop fwait lods and in jmp (bad) fwait jo cmp sahf std lret shll rcrb movabs stos (bad) sbb fdivp out rex.WR fwait rex.X std jb shll fstpl adc movslq mov rex.B orl (bad) mov pop xchg movabs adc addr32 callq xlat callq movabs mov lods lods addl sub (bad) xchg movsl rcrl push mov movabs mov sub jmpq fwait and je (bad) in movsb (bad) (bad) sub (bad) add sahf mov in mov movabs sbb cmpsl retq mov rex.WXB rex fwait (bad) (bad) ja xchg xchg mov mov xchg js mov loope adc jnp fisttpl sbb push loop jmp fwait (bad) rex.RX rex.WB mov (bad) rex.RB ja retq cmp sbb mov in add movsl adc fldt cmpsb fstl or jl sub js or movsl sbb int cmp (bad) mov cltd xor fwait mov (bad) in mov pop xchg jg (bad) (bad) sub adc (bad) mov loop movabs in mov (bad) rex.WX fwait or cltd scas mov mov sahf scas xchg fwait xchg push and lods pushfq loop shll stc push leaveq fwait pop movabs outsb adc (bad) pop rex.W mov xor rex.XB adc mov out (bad) pushq jb fwait (bad) callq js fwait movabs lret negl mov lret xor sbb in loope push mov insb rex.WR je fwait sbb out mov fwait (bad) xor mov gs fwait and test add and jnp add fwait adc insb push mov rcrb rex.WXB cs sbb mov add cmc lret jrcxz (bad) cmp rex.WR (bad) jne mov (bad) (bad) pushfq rex.XB out rex.RB or (bad) je push xchg shll (bad) in (bad) hlt enterq fwait cmp add jae mov add mov lock ss (bad) cs movabs fcoml in adcl shl xchg (bad) sbb insl push lahf cld and sub fldt mov and adc sub mov fwait sbb (bad) ss pop add sub jl (bad) jne (bad) movabs mov (bad) shr mov and adc mov adc cs addr32 sahf jl (bad) sti (bad) fs (bad) jb sub gs add int3 and decl (bad) pushq xor jmp fwait loope xchg xor rex.WXB or mov ja fcomps insb mov and rex.WR lret push xchg loope fs iret mov fldenv jb stos rex.WRB loope fs xchg jo rex.WRX out fwait pop rex.RX scas cld xor insb (bad) jnp jbe (bad) fisttpl mov (bad) sbb pushfq callq xchg test xor jmp (bad) sbb rex.WR mulb and adc (bad) cmp sub add push movabs scas fwait (bad) repnz rex.W jo cld in addr32 nop int xor push add subps (bad) adc in cmc fwait xchg jno pop ss (bad) pop fwait negb push cmp addl xchg (bad) jmp xchg sbb (bad) mov (bad) popfq ja fldenv fistl js in gs iret or (bad) insl cltd movabs push jae mov fwait adc rex.R rex.WXB rex.WR data16 (bad) fwait xor (bad) lahf or scas (bad) (bad) and int3 pop gs rex.WX fwait and xchg repz (bad) mov sbb mov ss rex.RXB loop out fsincos outsl mov push movsl (bad) fdivs mov sbb retq pop or cltd add fwait popfq mov (bad) clc out lret mov jl sbb cmpsb xchg out rex.RX rex.WRXB psubusw scas jne imul fwait movsl sbb (bad) rex.WRB out movsb sub mov in fwait rex.WRX lods pop test fidivr (bad) xor outsl lret scas sti or sbb and sbb fadds or addl and in sbb stos scas jrcxz (bad) (bad) fwait rex.RX jmp cmp mov movslq movabs cmp cltd mov lahf decb loopne sbb imul jmpq jne out sti retq retq fwait out or sub lock rcrb mov mov js (bad) xchg in or add push push add enterq jle (bad) (bad) js rex.WR insb fwait jmpq rcrl sbb sti rex.WX movabs mov (bad) jne mov ja pop (bad) rex.B add mov mov add xor (bad) push in gs mov (bad) callq fwait (bad) out hlt sbb mov pushq (bad) rex.XB lock mov js addb rex.XB (bad) sarb stos mov fmull out rex.RXB (bad) in cmc adc test mov add (bad) and xor rex.WRB test fwait and add shl push pushfq (bad) mov xchg lret pop jmp push test jbe (bad) jns xchg pushq fwait sbb enterq inc popq xchg (bad) leaveq movabs or xchg rex.WB fwait ss push mov rex.W out add sbb or lea sbb fistl fdivr (bad) xchg scas cmp sub hlt fwait mov mov fwait lea cmpsb or (bad) add xlat mov movups fwait sbb mov test rex.WRB and fwait xlat adc (bad) (bad) sbb pop add rex.XB roll lods sar movabs insl (bad) imul (bad) xchg and fcomi sahf ss repnz jo callq and repz xor test cmp sti fsub retq push jp xchg enterq jb shll loope lea sahf cmpsl (bad) add ja or jae mov cld fwait adc nop out cmp jg mov sti cmp (bad) fwait (bad) mov fnstcw sub js out std movsl sbb (bad) rex.XB fildl outsb (bad) rex.RXB pushq mov adc xor loope fistl (bad) pop adc (bad) (bad) fldl sahf movslq fiadd movabs rex pop lock lret (bad) pop rex.WXB fwait adc (bad) jo jae mov (bad) (bad) out xchg fsubp jge push xor fwait cltd (bad) iret (bad) imul mov rex.R retq fwait repz pop (bad) sbb outsl (bad) jo (bad) psubsw fwait push rex.R lods (bad) in sbb xchg in (bad) sti push xor sbb (bad) pushq iret fildl (bad) and repnz outsl outsl fwait jnp jp jo and pop movabs scas xlat fwait cmp lret lea jge rorb movabs movaps sti jmp or add cmp rex stos fimull and adc test (bad) sahf out (bad) sub or mov add cmp imul sbb fcomi lahf push rex.WB (bad) outsb cltd xchg movsb (bad) jrcxz imul (bad) (bad) pop test xchg (bad) cmp ror sti cmp repnz ficomp out out incb fwait mov sbb (bad) fwait mov mov addr32 cmp or scas scas xchg nop jp (bad) movabs add test lods mov fwait push test add adc enterq add in in sbb stos (bad) jo push pop ljmp or mov mov lret insb adcb icebp xchg add xorw loop adc test or jrcxz mov lods jo pushfq pxor idivb add pop (bad) fdivp xor pop sbb sbb jae and shl fwait int3 fbstp fild roll sbb in adc mov rcrl sti (bad) repnz mov imul (bad) rex.X stc pushq (bad) (bad) imul and gs fucom rex.XB fstps (bad) fdivrl mov add jne nop jmpq cmp repz and (bad) mov movslq repz loopne cmp (bad) jmp loope sahf std scas xchg xlat pushfq xchg iret add jmpq in xchg or sahf or leaveq pop retq mov push popfq pushq sbb out (bad) loopne cmpsl rcll xlat (bad) test push loopne dec jl cli pushq std movsl roll lods rex.X adc rex.WX jrcxz (bad) fist addr32 and cmp cmp mov adc pushq push mov loop cmp add xchg js sahf rex.WB stc (bad) loop scas imul xlat mov and (bad) cmpsb mov (bad) jmp test mov mov test add (bad) sbb je sbb (bad) rex.WRXB xor xor (bad) sub lods xchg (bad) cmp pop retq in cmc cmc mov repnz fxch icebp (bad) push mov xorl (bad) fcompl ficompl stc xor hlt (bad) xchg xchg rex (bad) lret pushq sti data16 cmpsb xchg rex.XB rex.RXB ss loop (bad) mov (bad) mov out popfq and xchg retq fs rex.XB cmp fildll mov mov fisubr lret mov mov test xor push cli mov in add jg sbb and (bad) (bad) out stos imul pop rex.RX nop popfq rex.WR rex.WB mov in fstl cmpsl cmove int (bad) mov push (bad) sub fsubrl mov pop cs xchg (bad) mov ror ficoml xchg jl mov or fsubrl (bad) mov movabs rex.X adc and pop mov pushfq (bad) and pop xchg out (bad) popq or hlt cmpsl adc test cmpl mov jnp pop mov (bad) jmp rcll rclb fbstp lea push int3 xchg (bad) std fidivr outsb test xor and cld loop shl fndisi(8087 rep or mov sub movabs (bad) data16 es mov xchg jbe,pt add je xchg sahf sti sarb (bad) icebp mov add rex.XB sbb jns xlat sub repnz (bad) adc pop rex.WB xchg xlat sbb rex.WRXB addr32 fwait sub (bad) mov lock rex.WR fstpl fsubp sbb movslq add mov pushq fistpl cmp loop fwait ja std leaveq shlb fcompl mov adc (bad) xchg rex.WX lret xchg addl push jg mov (bad) sbb cmp jmp (bad) sbb imul cmp enterq outsb add rex.XB repz jae loop add lea xchg and mov (bad) shr mov adc mov (bad) (bad) adc jns gs movsl fistpl (bad) fsubrs mov xchg adc rex.RX sbb xchg cmc sti xor and rex fwait bnd mov fwait jns andl and xchg and adc fwait xor imul lock and (bad) or jnp jmp xor xor jbe push sub push repz jrcxz in (bad) (bad) nop jns mov xchg or jb adc movabs rex (bad) (bad) callq fwait sti rex.XB push outsl adcl xchg (bad) in ja adc sub fs mov (bad) jo cmpsb test jl test adc xbeginq (bad) movslq sbb jmpq pushq popfq mov out lret lret adc movabs (bad) or rex.RB cmp icebp in rorl (bad) mov (bad) sbb (bad) mov out jl mov and xchg pop rex.WB neg adc rex.WX int mov mov (bad) (bad) std add cmp mov (bad) fcmovb adc or rex.XB fisub (bad) (bad) jmpq mov pop in add sbb insl (bad) sahf xor rex.WRXB std cmp mov sub sub test mov pushfq add (bad) adc sbb test xchg cmpsl rex.R lods test jb movabs mov jb and cmp lret cwtl (bad) pop fisubr cwtl rex (bad) or and jnp xor (bad) test and jmpq int3 jb jno cwtl out cmp xchg callq in loop jnp cmp shrl imul add fisttpl bnd fs test rex.R movsl movabs sub pop push or cwtl pop (bad) stos push frstor sbb pop xor jbe outsb shrb outsb rex (bad) loop mov and movb xchg loopne (bad) (bad) xchg fnsave mov insb cmp out je cmpsl (bad) sahf (bad) mov cld adc xchg rex.WRXB or shll (bad) adc test in and icebp cwtl test xor xchg addl fidiv jle rex.WR in sub mov or fadd xchg movabs jae sbb enterq mov sarl int (bad) sti in mov rex.W (bad) sbb xchg rex.WRX loop add xor adcl sub and ja mov add int rcr rex.B lret (bad) jae in lret ds push movslq idivb (bad) rex.RXB adc (bad) fs jmp xor rex.B sub repz rex.WR pop or cltd pop (bad) std in (bad) or mov xor retq jmp rex.B callq jge jae or add repnz adc out (bad) jnp loope sti repz negb iret pop in fwait movabs push (bad) (bad) (bad) cmp sub or xlat lock loop and fwait pop iret rex.RX fwait clc cmc rex.RB fwait out add outsl rex.RXB (bad) insl mov fistpll rol insb cmp fwait pop test (bad) out std fwait loop repnz mov cmp iret movslq rex.XB fwait (bad) jmpq mov push adc adc pop (bad) rex.WRXB movsl mov cmp xchg test fwait pop mov (bad) (bad) xchg fwait enterq movabs loopne rex.WXB fwait sbb (bad) mov imul fs cmpsb fwait adc cld rex.WB sbb rep mov sahf rex.RX insl mov sbb cmp std rex.B xchg lahf loop rorb (bad) movabs rex.W imul lret xchg lret retq pushq (bad) in addr32 movsb out mov retq pmullw pushq (bad) mov rex.RB cmpsl and lock mov stc (bad) rex.WR xor xor rcll flds rex.XB test (bad) (bad) xchg (bad) and cltd and and pop jp cmc jrcxz or adc sub int cmpsb (bad) jns je rex.WRX test lret sub stc (bad) (bad) insl imul cmc idivb (bad) mov rorb out mov sbb movsl movabs sbb lahf cmp jl jge insb push and add add (bad) out loop (bad) fdivrl fwait imul sarb and fwait and or ja adc lret jns hlt and out fwait subl jg movsl or fucomp fs rex.WRX gs sti rex.WRXB mov jmp sbb mov (bad) int push and fwait in lods add fidiv xor xlat (bad) scas adc ss imul sbb frstor sbb cs movsl rex.WR adc pop fildl push (bad) xchg rex.X rex.RX rcll (bad) mov (bad) outsl sbb (bad) (bad) cltd imul fwait sbb sbbb lea xchg (bad) pinsrw mov add cltd xchg movslq sti retq fwait and test (bad) jns fwait rex.WRX push (bad) xor mov cwtl xchg sub add mov fwait movsb and pop fwait in rex.WB rex.XB repnz push lock (bad) (bad) (bad) xchg mov add adc pop fistl (bad) sbb (bad) rclb popfq cmp ficomp push sub jbe test fstps add add xorl push mov (bad) xchg rex.X rex.WB xlat mov cltd insl fmul add (bad) test fwait rex and movsl xor pop out mov repz in (bad) test sbb (bad) mov sti and sub or (bad) mov pop fwait mov sbb sbb mov add insb test loopne fwait push cmp mov push orl fdivrs and pop (bad) xchg loop mov jrcxz loopne imul xor mov fwait rex.WRX mov jne out lods mov rex.RXB xchg fwait (bad) (bad) (bad) (bad) fbstp mov jmp add rclb mov pushq and rolb (bad) outsl cmpsl (bad) adc xchg and (bad) out jp scas fwait add out pop retq push enterq xchg adc movslq mov sbb mov or (bad) leaveq fwait (bad) out rex.WRXB rex.RX negb (bad) mov mov xor adc sbb cld cmp pushfq xor cmp sti push (bad) mov pushfq sahf xchg jo jae adc data16 fstpt rex.WXB sbb jbe fwait movsb (bad) clc outsb and sbbl fwait ds cmpsl mov add rcll in mov (bad) sbb jne notl (bad) movabs sbb insl out (bad) outsl mov cmpsb movabs add fnstenv jmpw mov rex.RXB mov cmp adc xlat rex.X mov insb lret je lret (bad) gs fwait leaveq xor shlb stc (bad) test (bad) shrb pop rex.WR rorl movabs (bad) fstps or jns test push retq sti or mov (bad) (bad) (bad) xchg sti xor (bad) (bad) fwait pushq rex.W rex.RXB rex add scas imul fnstcw leaveq adc pop (bad) mov xor jl xchg (bad) pop jb fwait or insl shr mov xchg add (bad) (bad) and pushfq mov jne jmpq mov hlt icebp (bad) xchg and clc es fcompl fmul repz pop shl add out icebp (bad) mov pop jne xchg in rex.WB sub mov cmp sbb in rex.XB fwait mov and popfq cld bnd enterq frstor mov (bad) xor cmp imul (bad) add vmaxsd mov cmp (bad) in ror fisttpl sbb stos fwait xchg mov or mov sub jmp out movsb push add lods scas pushfq xchg jae int3 dec mov test xchg je add pop rex.RB movabs mov xchg fwait pop stc (bad) (bad) ss (bad) out and mov (bad) rex.WB cs xor hlt pop (bad) xor lea fwait sub callq cwtl rex.R lock fwait (bad) shrl int3 orl andb ja (bad) mov xor ficompl rex.RB fwait imul rex.XB add (bad) (bad) lret icebp mov mov rcrl (bad) int3 rorb jmp xor pushfq movsl hlt rex.WRX add mov mov mov fwait sti ja jrcxz and es loopne pmuludq sbb mov nop out rex.WRX xchg (bad) lret cmpl mov sub cmc sbb xor fwait or cmpsl sbb shrl rcrb (bad) incb pop push (bad) mull and and xchg mov (bad) jb movabs or int3 es mov cmp mov xor fwait mov xor push (bad) xchg fwait clc fdivrl in ja rex.WR pop mov cld lods loop fwait cmpsl rex.RX rex.X hlt jmp add xchg sbb icebp scas imul or jmp jno mov test mov fwait (bad) cmpsb clc loope xchg xlat stc sub push xchg adc fs (bad) js add popfq je sbb cmpsl mov insb in callq cltd mov lahf scas (bad) jp cmp (bad) sti (bad) rex.W xchg fwait decl mov test movsb and movsl xor push insl cmp mov sbb jae jmp adc outsl repnz in xchg push retq or imul rcrb pop sub xchg pop sbb addr32 sti cmpsl push es add out jbe xlat xchg mov (bad) jne pushfq repnz sbb rex.WB addr32 mov (bad) shrl rex.RB rcr mov xchg fnop fucomp adcl sub movabs mov shlb cwtl fwait jrcxz lret inc mov frstor cmp mov xchg stc (bad) test jle leaveq xchg jne fwait cmp retq mov leaveq sbb fwait cmp js sbb callq int in (bad) lods push stc repnz sbb lahf push add xchg mov nop mov repz xlat or fwait (bad) jno (bad) cmp xor sub mov sbbl sahf sahf rex.R fwait stos sub sub mov mov and sbb out pop (bad) or fwait leaveq mov adcl (bad) mov cmp (bad) imul xchg lods popfq rcrb imul retq (bad) xlat fs out xchg mov jp fisttp (bad) mov pop cmp (bad) in lods (bad) js xor (bad) leaveq xlat (bad) jb jo rex.W retq fadds jle mov lods mov sbb gs out add pop unpckhps (bad) rex.R rex.WB rex.RX loope mov pop (bad) fistpll pushq sub cs clc in (bad) rex.W rex.WB stc sbb fcmovnb in rex.B sbb mov pushq (bad) (bad) jge pop gs xor movsl (bad) outsl pop insb sub popfq retq out cmp mov jnp rex.RB popfq or out cld cmp and faddp adc (bad) clc loop rex.B rex.RX add xor push xor or (bad) xor test cmc pop xchg (bad) or loopne rex.RXB fs cmp movabs mov cwtl xchg ss in mov nop add ja insb dec (bad) (bad) pushq sub (bad) jl sar mov cmp sti (bad) popfq push out xchg mov ds (bad) movsb (bad) add icebp lods insl cs test jle (bad) (bad) out (bad) mov sarb sub add rex.WB repz push fmull test (bad) fisttpll jge (bad) out pushq xchg mov sub or (bad) fstpl decl (bad) out add loope ja outsb icebp out push pushq (bad) shr roll pop add xchg sub iret in pop addr32 push mov in outsl movabs xchg jg and rex.XB xchg loope (bad) cld out rcll push (bad) rcr in mov pushq pushfq fwait rex.W add adc or xchg fisub scas xor rcrl jrcxz (bad) movslq test fwait mov cmp (bad) mov sub push (bad) int jo (bad) xchg add jns mov mov jrcxz (bad) push test pop xchg adcb (bad) (bad) xchg rclb (bad) (bad) rex.RB mov loope xchg sti ds stc (bad) mov mov and mov sub sti ja (bad) fimul pop cmp (bad) (bad) retq push je sbb xor (bad) mul cmp rcrl (bad) rclb fwait adc adc pushfq in lcall pop jnp jno fsts movsl cmpsl fwait adc xchg push (bad) callq pop (bad) (bad) jg (bad) pop (bad) xor mov rex.RB jrcxz subl enterq push shll jl or iret sbb sub mov (bad) fbstp push cmp xor cwtl test rex.WRX add jne jo (bad) std mov mov adc mov (bad) add pop sbb and movabs (bad) xor mov sub ds mov sbb (bad) in push adc (bad) lods xchg cmp cli addr32 xchg fnstsw cmp idivl pushq jmpq in sbb fndisi(8087 push xchg add (bad) push fstpt cmpsb loop xchg push xchg cmpsb lods fildll xchg xor (bad) cld pop test scas fwait (bad) stos xchg std repnz or in test pop (bad) fbld adc xchg jns add pushq jge push mov fmull and lcall rex.R cmp and push fucom sbbb movabs retq xchg and xchg xchg mov cmc (bad) fildll adc xchg sbb loopne iret ficom mov retq xor fcmovnu mov enterq lods fwait cwtl pop push cmp rcrl pop mov fwait iret jnp adc ss rcll xor (bad) in rex.X (bad) (bad) repz mov insl jns loope sbb mov (bad) stos sbb cmp adcl cmp xor test add fwait (bad) callq jp fwait xlat mov (bad) mov add fwait cmpsb (bad) lret cmp imul push jl push cld rex.WRX repz cltd mov xor (bad) (bad) pushfq rex.WXB (bad) fwait jrcxz or movabs or cmc mov (bad) fwait stos sbb jo cmp (bad) (bad) (bad) je fistpl push lods (bad) cmp cmpsb mov push rol mov sub pop fwait (bad) (bad) fsubr repnz fwait xchg stos movabs cmp xchg (bad) sbb repz in (bad) xor adc (bad) out pushq test (bad) scas add push and xor shrl add fldt jno fwait rex pop data16 fwait sbb lret add rex cmpsl mov repnz jmp fwait cs lods add shr (bad) and (bad) mov sbb xor imul add lahf fistl push pop movl xchg in (bad) fwait loopne in (bad) out fisubrl movslq fisttpl fdivrp fwait (bad) insb push pop sub fwait jle rex.X movabs (bad) mov xchg pushfq xchg ror fsubs out fwait pushq lock cmpsl mov xor sbb xor pop fsubs movsb stos and rex.RX pushq (bad) rex.WRX cmpsl (bad) dec add (bad) pop jo fwait (bad) cwtl cmp sti rex.XB cmp push and adc movabs mov add pop and mov and outsl add jl rex.X (bad) push push xchg and pop cli not xchg and xor sahf or sbb or rex.WB loopne retq out (bad) lret rex.R and (bad) mov (bad) jmp sbb fdiv loopne in fistl rex.WRX pushq rcrb (bad) pop nop lahf mov add (bad) rex.XB rex.RXB imul sbb (bad) ss fistpl sahf fildl rex.XB cmp mov sub mov (bad) fildl lods ffreep rex.WRB loopne push pop adcw (bad) push jbe pushfq xor cs cli pop cltd (bad) insb add iret nopl movabs fcmove sbb jo (bad) callq callq cmpsl loopne lret rex.WR pop jns or xchg fistp repnz in jrcxz mov rcrl cmp rex.WR (bad) ja mov iret enterq add out pop (bad) mov lock scas insl xor pop xor (bad) addr32 pushq (bad) rex.WRB rcrl mov lahf repnz (bad) roll add pop jo xchg mov adc adc (bad) push sbb xchg stos rex.WRX rex.B ds xchg (bad) jl jl rex.RXB (bad) mov push ss in jns movabs test pushq cmp pop loope loop and and sbb rorb fisttp and rex int3 fwait pop mov (bad) outsb callq or fwait ss adc push (bad) mov sbb mov cld rex.WX adc (bad) fwait out xchg mov rex bnd movabs or adc (bad) cmc mov or fwait sbb insb in and fwait adc jg cld mov js cmp (bad) sahf cmp leaveq mov std sbb retq mov push fwait (bad) clc rex.X rex.B xor or (bad) mov cmpsb (bad) fwait xchg jno xchg lods callq lret rex.WRX jmpq callq nop fcos adc (bad) rex.RXB add jp jge callq pop ss push pop test pop movsb sarl ficom outsl jrcxz shlb sub sbb negl cmpb cmc push mov fistp sub adc in push xchg pop fwait pop lods callq (bad) adc popfq mov (bad) fadds (bad) test mov fistp je callq push mov mov (bad) movslq or rol (bad) sub cmp subl sbb jnp out xchg in and popfq jle jge fsubs or std adc data16 (bad) push (bad) out (bad) add (bad) icebp xor or loopne xchg sub hlt add xchg out add sbb fwait and (bad) (bad) xchg jrcxz repnz addl rex.WRXB out mov pop jns (bad) mov (bad) movsb (bad) ljmp movabs sbb (bad) int jmpq jae test push sbb mov enterq movsb fwait xlat mov fabs fs fwait jne push (bad) xor rex.R add icebp leaveq rep movabs sub xchg repz (bad) xorl popfq mov (bad) hlt jg xor fdivrs (bad) xlat xor (bad) push xor and fwait mov sbb (bad) pop or and fwait rex.RXB mov adc rex.WRXB mov mov fimull jrcxz pushfq mov lock and pushfq sub mov stos fildll mul scas (bad) pop mov xchg (bad) xchg stos loope sbb std pushfq test movabs cs (bad) jp adc (bad) (bad) lods sbb mov test retq (bad) mov fwait (bad) jbe cmp and sbb (bad) cld fwait cmpps jg rex.WR pop or stc cmpsl rex.WRX fwait rex.W sahf movsl fdivrl jp rex.RXB mov sbb fbld jrcxz movabs (bad) mov rex pop sbb test rep sti mov (bad) adc mov and sbb (bad) pop mov enterq popfq scas scas jo (bad) movsb fucomi in add add (bad) mov (bad) adc (bad) rex.X cmp add fwait mov rex.WRB rex.RB add rex.W testb fwait imul (bad) fwait pop (bad) cmp (bad) and test ror movabs adc (bad) lea pushfq (bad) mov movabs or fwait (bad) or cwtl js fwait rex.W jg (bad) jnp jl loop sbb mov rex.WX (bad) orb sub pop fistpll mov xor cmpsb cmc adc adc xchg mov jb or mov (bad) fwait and cmpsb push sub add jge (bad) add add (bad) jno repnz ud1 adc roll out rex.WRXB popfq (bad) jle test lods rex.RX fwait insl imul sbb ja sbb rex rcrl lods (bad) loope push (bad) sbbl mov js (bad) xchg add pop test fildl mov repz sub and jo sbb mov sbb or xchg divl (bad) adc rex.WRX fwait xchg (bad) pop rex.R std cmp fisttpl mov (bad) mov fwait xchg xchg rex.W jae pop stos sbb clc jle jo and (bad) rex.WRXB cmp rex.WR mov fwait out mov hlt sbb (bad) cli adc fwait pop pushq out sub jrcxz sbb outsl xchg jnp (bad) cli rcrb mov jmpq repnz test xlat fwait ja add int mov pop xchg lret xor cmc rex.X add xchg jae sbb shll movsb mov movabs out jbe fwait sbb mov sti lret addl fwait pop pushq jns (bad) cld hlt add loope fwait pop adc rex fwait mov cmp fwait rex.B sub subl xor stc callq test mov rex.R jne in cmp movabs jae rex.XB cmp out (bad) adc (bad) fwait xor or hlt xchg add (bad) adc fisttpl popfq cmp (bad) xorl roll gs push addr32 cmpsb mov mov ficompl xor xchg sti rex.XB and pushfq jmp cmp jmp (bad) push sbb xchg movabs cmp sbb push scas loopne enterq (bad) mov add mov fdivl (bad) jo rex.RXB je (bad) push fwait and cli mov rex.XB int (bad) imul adc adc imul mov (bad) js enterq jle xlat rex.W fwait sbb jl cmc sub retq (bad) xor movabs lret rex.WRX fwait adcb retq sbb mov push rex.RB (bad) (bad) jl push insb jnp sbb jno pushfq pop pop (bad) pop int retq rex.WRXB rex.WRXB es push mov xor (bad) adc add orb mov outsb mov rex.RXB sbb icebp test (bad) popfq fsubs (bad) sub sarl mov pop lock xchg mov xor mov (bad) xchg addr32 push sbb lret rex.WRXB popfq rex.XB (bad) push rex.XB cltd cmpsl fcomip (bad) xchg test (bad) jmpq sarl jae loopne jmpq xchg int test add rex.X repz cmp (bad) pop movsl sbb repz int movabs leaveq cmp imul and jrcxz movabs je divb jrcxz push lods fimull (bad) lahf and xchg pop fcomps movabs adcb int3 repz rex.B jne adc mov lock jge std mov mov addr32 shrb (bad) mov sub stc jl adc lods (bad) push (bad) pop fnop rex.WXB imul xchg xchg iret or sub fwait jns jb rex.WXB cmp cmpsb and scas and rex.WR (bad) repnz pushfq mov jnp pop or xchg xor mov (bad) (bad) sti cmc pushq stc (bad) fcmovnb rcrl xchg loope in (bad) jmpq pop and fisttpl lret out test lods repz cwtl loop shr rcr rex.WXB mov loope and iret (bad) icebp mov mov fwait in (bad) testl sub push push cmp idivb mov jb loope and xchg rex.B rex.WXB outsl push cwtl mov lods adc (bad) jb retq int add pop (bad) push sbb fdivrl out pop fwait cmp rex.X and fwait (bad) ja add rex.WRX jle mov decb (bad) mov adc fwait hlt jg ss cld retq ficompl movsl (bad) rex.W in fwait and enterq xchg mov add loopne add sti ss (bad) sub (bad) (bad) and out push roll jnp es pop (bad) xchg js in mov stc rex.X cs (bad) adc sub fwait push andb sbb xor fwait rex.X xor and pop imul (bad) (bad) jmpq sub mov (bad) or and sbb sbb jbe fwait mov cmp out negl xor rex.RXB (bad) cmp rex.WXB and (bad) (bad) rex.XB js (bad) jl (bad) adc (bad) sub xchg jb (bad) std fwait rex.WXB xlat (bad) mov mov adc testb outsb (bad) shr rex.X rex.RX rex.R and jbe shrl fnsave cmpsb repnz mov (bad) cs clc pop movabs imul xchg jrcxz stos nop or popfq icebp outsl pushq rex.WXB rex.WXB rex.X mov (bad) sbb pushfq (bad) (bad) movabs insl cs adc rcrb (bad) repnz xchg adc movabs insl rex.WB gs fimull (bad) in (bad) rex.X rorb insb mov rex.XB fwait jns (bad) push rex.W jp add mov std mov fwait cs fwait pop sbb mov fild repz (bad) mov (bad) out int3 (bad) lret adc ficomp xchg xor pop or (bad) pushq pop xlat retq stos xchg pop lret loope iret jno mov pushfq vpaddsb mov rcll mov int3 sbb (bad) push movswl rex.R fisttpll add movabs jbe lods insl jno push data16 jge (bad) pushq xchg push mov rex.WR adc cmp in (bad) iret adc rex.R adc retq lret cmpsb rex.WB sarl lret movsl (bad) hlt jle cmpsl xchg push mov adcb pushq cmp and jne fbld jmpq add pop gs outsb push push (bad) xor mov and sub mov mov jl xor cmp rolb jnp mov ss (bad) out push xor (bad) and sbb jl rex.W (bad) rex.WXB in std xlat sub out outsb mov cmp retq xchg fbld (bad) hlt (bad) imul push gs push (bad) sbb (bad) mov push (bad) (bad) or sahf mov and fist jne rex.B sbbb popfq pop mov mov xchg (bad) rcll xlat shl loop and (bad) mov lods rex.RB es lret mov outsl stos mov jrcxz xor push and mov popfq mov jl xor or pop sbb jg movabs (bad) (bad) jbe popfq adc jrcxz out (bad) lret lock xor mov pushq in jae mov ss fwait xor lret adc (bad) pop loop movabs data16 (bad) cmp mov mov js cltd pushq in nop ja xlat jle repz cmp in cs shlb mov data16 in pop pop lret cld (bad) mov rex.RXB adc movabs std sbb rex.WR fwait hlt sbb fldenv test pop add mov add add cmpb (bad) outsw sbb sub (bad) jle lret (bad) (bad) cwtl hlt rol iret rcll mov ds lods sahf xchg loop pop jnp icebp jrcxz adc rex.RB rex.RX fisttpl out push es pop jge add scas or and shrb imul rex.WXB jns sti insl test es outsl fwait cmp testl xor lea nopl insl fwait and stos idivl (bad) (bad) or test in add sti rex.WB (bad) rorb adc fstps enterq fwait jmpq sti and fst jrcxz xlat sub fwait in sbb add out xchg mov pop jmpq (bad) mov or std rex.WR jg add lahf clc xchg pop lods push sbb cltd lods lret sbb xchg cs jg add (bad) xchg iret ffree xchg sub rex.X cmpl rex.WXB add sti rcrb rex.RXB (bad) int3 loopne mov mov pop pop cmp push push rep rex.WRB sbb xor xchg xor movslq jnp xchg mov push pop fwait (bad) jmpq xor test imul pushq sbb (bad) jae movabs retq jno movabs mov rex.R rex.R rex.WXB in imul fwait and (bad) sub pushq (bad) stos idivb imul repz sub outsl fwait pop adc sub (bad) pushq mov int test sahf mov (bad) out cmpsl xchg mov cmp jmp out (bad) cltd jnp outsb rex.RXB mov mov idivl ss push cld sub stc jge jb icebp lock retq pop (bad) jno cmp iret adc rex.XB fwait leaveq js lods mov jg fwait rex.RXB in cwtl push adc fwait (bad) rex.WXB jle in in fwait pop xchg hlt lahf xor rex.WRXB fwait rex.WB xchg lods out movabs jne scas add std xor (bad) (bad) (bad) stos pop fwait (bad) fsubl jnp mov sbb jne cmc setle sti (bad) cmp movabs adc (bad) cmp add fcompl mov rorb pushfq push xchg hlt cli pop (bad) stos (bad) mov fwait ja sahf rex.XB push jp adc pop and lea (bad) loop mov mov imul (bad) (bad) fwait xor or fwait rorl ds leaveq shlb loop rex.WR loop scas shrb mov fidivrl repz rex.WX pop fwait in shll jl (bad) jg,pn mov mov (bad) rex.WX jne jl pop pop cmp pop test mov xchg leaveq add repz sbb in lods cwtl adc (bad) jno mov sub popfq pop xchg decl cmp cltd movabs jrcxz,pt fimul push (bad) hlt push (bad) jb mov cmp (bad) mov lret cmp pop (bad) sti xor fwait sub xchg sbb outsb and es rex.R ja icebp push (bad) adc mov repnz outsb or in mov pop cs xchg xor pushq cmpsl pop (bad) adcl iret lret rex.WRB mov (bad) mov movsb mov mov xchg shrb js (bad) push xchg xchg fsubr xchg (bad) scas (bad) mov (bad) cmp or (bad) test sbb and and cmovb cmp rex.WRB sbb mov hlt mov mov (bad) addr32 xorl and pop (bad) mov mov sbb test push adc (bad) xor cmpsb out xchg xlat movsl sti mov in loopne push movabs or adc in pop add mov movabs adc add (bad) sbb mov xchg (bad) mov cmp movabs icebp (bad) sarl cld in cmp loope sbb loopne push movsl cmp cmp and cmp add (bad) cmp or (bad) sarb cmp adc or xor (bad) xor rex.WX lock sbb add rex.WRX pop andl cltd cmp lods or rolb fwait pop imul rcrl fcoms jno lahf jmpq push pop (bad) xchg rex.WB rex.XB insb test lods leaveq pop or cmp sub mov and (bad) testb lret test mov xchg (bad) add cmp (bad) (bad) (bad) cmpsb xchg pushq sub jmp mov out nop pushfq out shrb (bad) or rex.RX rex.WB sub cwtl iret pop xlat sbbl pxor (bad) div mov jle pushq adc add out cmp rex.WXB fwait rex.WB jb (bad) adc or (bad) ss hlt movabs fwait rex.WB pop pushq xor int std callq sub (bad) pop sbb jp js jns push sbb popq (bad) (bad) mov sarb rcr vmovdqa out mov cmp pushfq xchg pushfq sti (bad) pop push out movabs repz and (bad) xor pushq jo sbb and (bad) (bad) (bad) imul nop cmp xor movabs (bad) std and cmpsl in push loopne rex xlat (bad) or cmpsl adc loope mov fnsave sbbl sbb xor cmp movsl rex.WB pop movb xlat scas (bad) (bad) (bad) rex.B adc and rdmsr or adc int3 (bad) jno mov jle jle scas rex.WX jmpq jb lahf punpckhwd add (bad) fwait cld lods cmp (bad) jo rex.WRB fsts (bad) ficoml int jne ss test xor (bad) lret xor lods mov jo sub leaveq sarb jae sub push (bad) mov es lret cmp loope jmp ss (bad) xlat fcoms cmp lods mov insl pcmpgtd pushq pushfq sbb (bad) mov imul callq ffreep mov int sbb jmpq jl sbb adc insb sbb out and add ficompl add sarb rex.WXB jl in (bad) decl leaveq imul rex.B pop test lock mov cs mov mov mov subl test adc lods std sbb (bad) sbb fwait xlat outsl addr32 stos xor mov and mov repnz rex.X fsubrl (bad) (bad) rex.WRXB adc jo (bad) out rex.R lcall movsl cltd (bad) pop mov sub sub mov rex.XB and adc divb sbb mov out fidivl in insl and xchg adc fnstsw andl pop and rex.R ds mov test clc or pushfq jo mov (bad) sub hlt mov rex.WRX pop ds (bad) add sti clc add adc (bad) mov and sbb mov xchg out push (bad) (bad) scas scas movsb test mov stc (bad) gs mov push fwait rex.WRX scas rorb adc ja stc orb fwait (bad) sarb jns retq sub (bad) (bad) mov ss ja xchg test jle rcrl repnz lret fwait es or ds xchg fwait mov mov jg js (bad) add and ja adc retq (bad) jne fstpt jle mov test test pushq sbb repnz and sbb (bad) (bad) rex.RX sbb xchg add imul push mov mov mov rex.WR cli lea (bad) stc leaveq (bad) lea adc xchg test cwtl sbb sti mov rex.X rex.WRX out jle fucomi (bad) pop adc out (bad) rex.WX in xchg (bad) notl loop push sub loopne (bad) movabs out (bad) jns rex.WRXB (bad) pop (bad) mov callq rorw (bad) jno sub fwait push jb xchg add jmp rex.X sbb rex.RX test (bad) sbb test xchg cwtl jb (bad) cmp bnd mov cmp mov pop data16 fwait retq and xor insl (bad) (bad) test lea sbb orl jne jne adc fwait mov movabs fistpl adc (bad) or stos xchg adc rex.RB callq lea (bad) add xor xlat (bad) stos lahf mov push mov (bad) pop xchg leaveq (bad) cmp jmp fwait movabs addb movabs (bad) (bad) rcr sbb stos mov adc icebp rex.RXB sahf clc cs jmpw (bad) fcmovnbe scas xor xchg roll imul cmc (bad) rex.WRXB data16 (bad) sub insl mov fwait sub rex.B pop (bad) ja fwait or (bad) sarb add insl cwtl cmc mov xchg or rex.R fwait and iret lock fcomi sub (bad) roll adc cld rex.RX or pop repnz add fistp cmp fwait (bad) ja scas rex.RXB push sbb in negb rex.WRXB jns loopne adc mov (bad) mov cmp add retq and rex.WRXB xorl rcrl fwait add mov je jne adcl or (bad) fsub outsl cmp xchg andl pop out out fwait rex.WRX retq repz and mov fwait pop and fwait mov lret mov (bad) adc (bad) int3 repz icebp js (bad) callq and movabs mov in (bad) pop pushq outsl sbb addr32 rex.WRB (bad) jne lret or mov loopne lock jne add fwait add fistpll sub adc (bad) add (bad) jl (bad) cmpsb cld rex.WRX sahf add cmp rcll adc jle (bad) jmpq or fbstp in fsubp imul rex.X mov retq and jns (bad) push fsubl (bad) out (bad) (bad) mov (bad) callq (bad) insl push pop rex.WR callq jno adc rex.WR pushq or fimul add rex.RB rex.B lahf mov or mov jno xorl movslq add outsb fcom sbb rex.B shll sbb int add cmc test movabs (bad) mov mov fs in push test (bad) lcall retq jae fldcw mov pop push sbb (bad) lods imul sbb adc xchg outsb cmpsb addl fwait (bad) in fisubl (bad) jne fwait (bad) std test add lods mov pop pushfq pushq mov jns (bad) sub cmp add clc fwait movabs (bad) or movabs push pop (bad) push (bad) rex.WRXB sbb xlat fwait int test or mov mov (bad) mov mov movabs pushq out in add mov (bad) ja notl mov xor scas mov add out mov xchg leaveq fiadd retq incl adc (bad) repz callq (bad) fdiv (bad) rex cs lea (bad) sbb rex.W addr32 out xor adc and sbb (bad) (bad) mov retq fistpl movabs (bad) mov (bad) loope mov (bad) hlt (bad) nop pop sbb insl cltd lea adcb and sbb rex.WB xor cltd (bad) xlat sbb lret or fisub scas or pop sub mov jmpq (bad) lock scas in incl rex.WR fwait push push in rex.WRB es and mov fwait adc (bad) movsb push sbb cmpsl xor fstpt mov and xchg ficompl jle (bad) (bad) lock push (bad) pop (bad) (bad) fistp jnp loope fwait test fs fwait sbb movabs fcmovnbe pop adc rex.RXB cli fstl ljmp rex.WX cmpsl iret pushfq push or fwait xchg add (bad) mov lahf sbb jb xor cwtl stc (bad) and cmovge xchg shlb jmpq in fwait xor cmpsb (bad) nop out (bad) push std rex.WX movabs add and xor hlt pop movb sbb cmp xlat or or (bad) (bad) (bad) mov mov sbb push and data16 mov sbb (bad) fwait in sbb stos loop jne in xor and and out xchg xlat test std and dec insb (bad) (bad) xchg fwait add idivb cmp push sbb outsl rex.WXB stos rorl xchg je rex.W fwait shrb fwait movabs subl fwait jae push addr32 (bad) and loope (bad) jmp fsts fwait cmp jg add (bad) xchg mov rex.WRX fwait push outsb ss xor imul pop pushq std sti and sti lea adc cltd test sti (bad) or scas in rex.WRXB mov retq rex.XB sub sbb mov (bad) and sbb rex.RXB insl decl imul lods fist (bad) retq pop iret rex.R rex.RX rcrb fildl insl sbb rorl rex.XB rex.WXB fcomps andl fstl hlt sub iretq insb xlat (bad) fwait pushq push lret scas or (bad) xchg adc (bad) (bad) cmp rex.R fwait jp mov fwait callq cmp cmpsl fwait lret (bad) mov ficompl loopne data16 rex.RXB sbb mov (bad) push pop fwait ss pop (bad) xor (bad) mov sub test rex.WRX sbb xor jrcxz fwait repnz rex.WXB adcl fwait movabs mov mov stc add scas fcmovnbe jrcxz and xchg ja (bad) xor std rex.RXB mov lcall sti add popfq cwtl (bad) add fistp push out mov (bad) mov movsl out loope std out cmp lods pop test pop ficom cltd (bad) pop (bad) (bad) fwait or (bad) adc jb and xchg push (bad) fwait rex.WXB ds nop rex fnstcw xchg (bad) adc mov (bad) cmpsl sbb or retq int test (bad) (bad) movabs cmp mov stos stos (bad) je (bad) cltd (bad) pop enterq movabs mov gs int3 fnstenv sti (bad) movslq sti (bad) (bad) push out jmpq or sbb pushq icebp or cmp sub jae pop fs fidiv fcomps jo add movabs (bad) (bad) rex.RX rex.WXB mov addl jmp sbb and jmpq ljmp rex.R int3 data16 pop mov mov and fwait (bad) rex.W rex.X (bad) fwait xor or and rex.WR or jae rcrl lods jmpq cmp rex.RB sub test cmp fwait or (bad) test sbb mov pop add add sub lea stc (bad) lock sub fwait add rex.X jo lods mov loope outsl mov sbb fwait (bad) xor mov and fcmovu mov rep push pop add sbb gs rex.X lock (bad) int shll retq sub sbb jnp test stos add cwtl test out push mov (bad) pushq and jnp xlat jb mov insb rcrl fisttp out fwait nop cmpsb or mov sbb xor fwait in pop mulb fisttpll xchg sub (bad) mov jbe jge jne jrcxz fild fwait imul fcmovne cmp rcrl incl mov andl (bad) rex.WRB sbb (bad) xorl popfq xchg stos mov pop and stc movabs movabs fcmovne push retq xchg jl jg pushfq xchg cli out stos gs fwait (bad) cmp add ja fwait mov sbb add rex.WRXB pop scas adc rex.WX fwait cld rex.RXB jmpq cmp mov fwait insb mov rcrb xchg xor cwtl adc sbb jrcxz std stc fwait (bad) pop rorl (bad) cwtl sbb hlt mov (bad) (bad) sbb rex.XB sub and (bad) jno xchg jl jne iret cmpsl test lahf sub (bad) push jns (bad) fistpl pushq jb cwtl (bad) jns add loopne xchg rcrl sarb adc (bad) je loope ds insl iret cmp (bad) xchg in movabs fstps retq fsubs (bad) jmpq punpckhbw push subw in lret jge pushq or fildl retq pushfq and (bad) mov fwait rex.RX xchg repnz loope jb mov push cmp loop in jno outsb repnz push test (bad) (bad) mov adc pop mov out (bad) jp ja mov rcr push mov out jmp jle movsb lods iret xchg fwait lea js xchg and adc jnp (bad) cmp (bad) push rex.WXB mov fwait shll movabs sub mov (bad) rex.R fwait test cmp fs lock fwait (bad) lods sub test (bad) jo xchg sti (bad) loope xchg and (bad) sbb adc mov popfq push rex.RXB rex cmpsl notl xor (bad) (bad) mov xchg movabs or (bad) movabs sbb and rex.R adc stos scas cmp movslq test stc mov rex.WXB stos fwait (bad) rex pushq lret push stc insb (bad) callq rex.RXB push lret fs xchg cmp pushq retq bndstx rex.RX rex mov out cltd test lods cmp pop fwait (bad) gs pop andl fwait out sbb (bad) clc lret and fwait lahf add pop mov sbb jae idiv (bad) adc cwtl xor fwait mov xor cmp fwait mov lods rex sbb pop pop (bad) (bad) jno out cmpsb xchg rex.WXB fwait jle rex.RB mov test jb or push (bad) and cmpsb (bad) (bad) add je shll mov (bad) sahf out cmpsb jnp fwait jo pushq lret (bad) or push push lahf sahf fwait xor cld addr32 in fwait cmp scas loop xor jmpq jmpq (bad) adc pop lret cmc xchg popfq xchg add out (bad) mov pop fisttpl and pop (bad) popfq xchg rex.WX rex.W add pushq fwait lods js addr32 cmp fisttp adc cs sub (bad) rex.RB test fwait cmpsb lea and fxch fwait and pop gs test xchg lahf mov pushfq imul scas (bad) movabs or rex.RXB je retq and stos out jle cmp or scas insl sbb sti mov sub movsb fwait cwtl shl mov rex.WX loopne jb sbb fldl (bad) (bad) jnp rex.WRB fwait hlt stc or fwait pushfq xor fnop sub sbbb push rex.WXB (bad) mov cmpsl lahf rcrb movsb sub add mov sbb mulb adc add std fwait (bad) stos lret (bad) pop lea test pop fwait sbb pop cld cmp (bad) sbb xlat push (bad) fwait test in (bad) movslq mov jp mov (bad) fcompl outsl rex.RB gs retq jno rex.R cmpsl je fwait push stos (bad) (bad) sti push incl jg outsb jbe cmp pop (bad) mov mov insl fmuls (bad) pop test (bad) xor loop or or (bad) (bad) out ss add adc lret (bad) or movsb sahf movabs fildl insl ss fwait sbb adc jno retq (bad) rex.X and callq (bad) jne scas cli sbb jg and xchg pop mov nop sahf imul mov stc fisubr xor (bad) xlat in mov or (bad) (bad) fwait or test mov rex.W (bad) fwait (bad) (bad) xchg (bad) lods sub rex.WR fwait jne (bad) fadd (bad) cmp cmp mov rex.R sbb lock imul sbb or fs (bad) cmp hlt adc clc xor lods sbb rex.W xchg retq lea add mov xchg movabs adc scas scas pop (bad) (bad) xchg xchg rex.RX sbb xorl rex.WB sahf movabs imul jns mov and vaddss shrl pop (bad) rex.WXB pop adc sbb loop popfq cmpsb lods sbb push cmp rex.WB (bad) jb pop xor test callq sub in (bad) pop push mov in (bad) xor sub adc xchg (bad) out xor cld rex.XB pop mov (bad) fstpt scas fwait mov rolb lret sbb and in rex.RXB jmpq jp lahf test mov (bad) rex.RX or notl lahf fs loope (bad) retq test stc push retq cmc sub fwait in testl sub (bad) clc jg (bad) testb add and fldt push in or (bad) xchg or pushq stos (bad) rex.WRXB fwait fs shlb sbb out loope addr32 pushq cli sbb (bad) movsb pushfq pushq mov repz adc mov rcrl (bad) rex.RB stc test fiaddl movsl and (bad) rcrl (bad) mov shll sbb rex.WRXB sar fildl es mov popfq (bad) mov xchg stos and pushfq insl (bad) mov fcmovne (bad) (bad) (bad) mov fwait imul addl decb jae xor lret jns (bad) lahf movhlps (bad) xor test fwait rex.W jnp rex.B retq out mov sub cmp sbb shl and lret pop mov ds xchg rcl rex.R fwait es jne xchg lock rex.WRXB rex.RXB and rex.WR pushfq and jmpq jmp jp sub mov adc adc rex.WRB fwait retq pop jmp (bad) repnz test pop (bad) (bad) or iret (bad) add adc (bad) and mov xor outsb add movb or lock (bad) cwtl mov fildll sti lret jo xlat (bad) jmp (bad) rex.R retq cmp mov rorl fcmovnb (bad) movabs pop (bad) ja fwait je xor lock sahf xchg (bad) std lods rex.WR fstpt pop mov sub push fwait (bad) add (bad) jne adc (bad) loop and or icebp adc adc add movabs rex.RXB stos sbb mov jg add loope xchg fwait out rex.X js (bad) fwait rex.W add stos (bad) out (bad) adc push sbb mov and cmp movabs out lea pushfq sbb fwait add loope push and adc addr32 or sbb sbb adc (bad) jmp rex.RX fwait rex pushq movslq data16 (bad) adc pop iret pushfq and mov jp cmp (bad) test rex.X sti fdivr mov loopne xor popq testl hlt je popfq mov xchg xchg sub rex.RXB rex.R fwait rex.XB (bad) mov rex.WRXB add mov cld cmp or stos and rex.WRXB fwait cmp imul repz xchg xor movslq add fstpt mov mov or jge sbb lods imul icebp rex.XB fwait jp pop and sub rorl in fidivl add rex.WRXB (bad) mov mov out leaveq pop mov or sbb imull (bad) mov int3 jmpq jb pop cwtl xor add cs sbb xchg xlat pop pop pop loopne mov cmpsb leaveq sbb rex.R rex.WB fwait loop xorl sbb (bad) push je lods cmp in xchg scas pop rex.R in (bad) (bad) rorl (bad) gs int and xor movabs adc fcoml jno std in xchg fcmovnb jg xchg test or push xchg xor fldcw xchg add rex.X callq rex.WX (bad) (bad) adc hlt test cwtl add (bad) je (bad) jae and (bad) or (bad) pop mov jge jb or imul sub cmpsl add ja sbb push (bad) adc cmp retq xor (bad) cmovge ficoml sbb mov mov popfq outsb rex.XB out mov xchg sarl push pushq callq lahf xchg (bad) sub or in enterq xor sti out pop retq sar (bad) repnz rex.XB rcrb (bad) and roll (bad) rcrb (bad) outsb (bad) xchg jl movslq loopne cmp jmpq lret jb sbb (bad) pushq cmp sub xor add mov lret sbb enterq je jrcxz push jmp xchg mov mulb mov movsl retq (bad) sahf mov out rex sti (bad) ja xlat js (bad) mov or (bad) callq imul icebp (bad) rex.WXB (bad) (bad) std fnsave (bad) (bad) pushq jne movb test and cmp popq xchg shr std std (bad) cmp std add lret adc movslq (bad) sbb xchg out stc fwait bnd xchg mov cld mov sahf outsb (bad) fnstsw in mov cwtl pushq or cli add adc sbb sbb sub and (bad) adcb sbb add add xchg add rolb (bad) jb sub sbb cmpsb sub (bad) xor sub psrlq cmp (bad) test fisub pop cltd rex.XB xor jbe test mov ss rex.WR mov mov xchg test and rex mov sbb mov ror cmp cmp std fbld jbe adc pop cmp retq and xchg (bad) xor rex.R rex.XB (bad) or (bad) pop loope sub pushfq jae push push rex.RB movsb out jo or icebp mov pop enterq and (bad) cli notb pop sti push cmp (bad) iret (bad) fbstp (bad) (bad) repnz popfq lock sahf loopne (bad) xlat loopne rex.XB mov sbb popfq (bad) add (bad) sar push shr in cmp mov xorl pop pop mov stos rorl movsb cmp add pop rex.WR sbb xchg cmc (bad) cmpsb (bad) sbb mov xchg nop adc xchg xor lods xchg adc rex.WXB rex.WB loop fnsave (bad) out int3 xchg icebp cmp pushq (bad) testl mov out xchg outsb fwait shrl sbb loopne movslq out lea push jbe ja xlat repnz in jnp fistpll sbb mov sbb fstpt xchg pushfq fwait movabs mov int3 rex.WX rex.RXB xchg (bad) (bad) jnp leaveq cmp fwait imul (bad) adc out (bad) (bad) cmp or cwtl or fcomi adc xchg mov stc sub pop lea test mov fwait rex.RXB fnstcw or clc rex.WRXB rex.WB mov (bad) add jns jo fwait push je movabs sahf xor stos (bad) lret xor (bad) rex.WRXB mov (bad) rex.WR jmp cmp insb adc (bad) gs out rex lahf imul mov (bad) sbb mov fwait push loope movabs xchg mov bswap and jrcxz repnz loope int movabs mov (bad) cmc adc fs lret movslq add stos pushfq jmp and (bad) mov (bad) pop mov repz mov out imul std repnz pop rex.RB mov sahf rex.B fwait jae mov jl adc jmpq test xlat add testb fwait movabs add jmpq rex.RXB loop test or movabs xchg sub push jbe jb mov sti rex.WXB sub rex.RX cmp (bad) callq sti and (bad) xlat xor or out fwait mov (bad) pop cmp callq xchg or fwait (bad) jp callq cmc sti cmpsb (bad) mov adc ds cmp fwait push (bad) jbe subl sub mov sbb jmp lret adc push jl cmp sbb imul mull (bad) movabs repz jo adc popfq mov int fwait mov mov js and adc rex.XB mov cmp and or fwait int mov xchg fwait cmpsb (bad) roll mulw xchg (bad) sbb fwait ljmp pop jg (bad) rex.XB xor adc faddl fildll and (bad) retq fimull pop xchg add out sub movabs in xchg movabs cmp adc mov mov xorb outsb cmpsb xor lahf gs (bad) rex.WRB and xchg icebp and cmpsl mov rcll and popfq rex.RX xor jne xor (bad) movabs xchg sbb ja stos add pop nop sarb out jle rex.WRX rex.B sub sub cltd xor fmull (bad) es sahf rex.XB (bad) jns pcmpeqb sbb rcr mov pop sbb test (bad) lods push jnp popfq (bad) xor sbb pushq or mov sbb loop cmp adc movabs jb loopne gs xchg es mov add xchg data16 fcmovne add or rex.WR cmc pop cmp psubd push adc (bad) ds (bad) out push mov and adc jne jmpq fwait stos sub mov fsubr or mov sbb pop imul xor xchg outsb push mov or stos (bad) mov in (bad) stos pop jne (bad) fwait lret loopne mov xor mov sbb (bad) lods and fwait (bad) jl rex.X pushfq stos sbb xchg rex.WB mov push (bad) (bad) xchg and rex.WRXB push (bad) sti adc js fwait rex.X mov fwait stos sbb or fwait shlb adc repnz sti xchg (bad) sbb mov xchg sbb fwait divl jnp mov pushq push cmp jne and mov rex.WRXB (bad) xor or jae outsb fwait pop cwtl mov cli jne pop xlat test xchg ds loope xor cmpb movslq push lock lods stos ficomp rex.RX (bad) add (bad) lahf xchg mov int3 xchg insl xchg (bad) je movabs push fwait pop adcl test cli adc (bad) cmc jl retq jle fwait (bad) popfq xchg and (bad) mov cwtl mov (bad) (bad) and (bad) mov (bad) pushfq (bad) rex.RXB fwait xchg jae sbb cmp adc sbb icebp xlat sbb fidiv (bad) addl nop push pushfq (bad) mov (bad) mov jl iret sti jrcxz mov fwait leaveq movabs mov mov pop pop cltd mov fsubrl sti xor loopne jo mov stos movabs scas cmpb fwait cli movabs stos out or int (bad) out xor (bad) pushfq jrcxz adc movhlps enterq jno or or rorl mov pop xor test adc and int3 rorl and jb jns (bad) pushq adc add lods adc push js cli loop mov pop loop jnp (bad) push (bad) (bad) addr32 push sub jbe jl scas sbb jp fisubl pmuludq sbb sbb xor xor sbb push jns pushq xchg sub roll in sbb (bad) and mov popfq stc lock mov cwtl rex.RXB fwait jae and adc sbb in jge iret sbb mov or (bad) rex.B outsb sub push xchg mov cmp add mov (bad) mov (bad) fdiv cmpsb sahf movabs fwait shl retq sub cmpsb in (bad) js shlb jge fcomps orl rcrb repz and rex.WX fwait adc (bad) sbb (bad) cs xlat (bad) mov scas xchg shll std lods (bad) sti push (bad) mov hlt insl cmp imul int jp lods rcll fwait insb rex rex.WB rex.RB mov (bad) div movsl sahf adc or cmpsl (bad) nop sub (bad) popfq and pop leaveq retq adc mov xchg sbb pop out ficomp test ss movabs mov nop fwait jp cmpsl adc cmp (bad) push addr32 callq int (bad) mov js sub (bad) sbb add (bad) in xor mov jmp xor mov nop cmp cmp lret or (bad) in icebp int3 xor fcompl (bad) negl in jl xlat pushq push sub (bad) popfq cmc sub push mov sbb cltd push xchg mov repnz movabs xor mov movabs loop sti adc fld mov or xchg cmp out mov rex.WRB pop xchg (bad) or (bad) (bad) mov sub mov test cltd sahf cmpl in (bad) insb cwtl pop outsl push cld and pushq add mov jg jbe (bad) pop mov mov add fcmovu sbb (bad) xor popfq fstl out icebp sub sbb rcrb repz iret cmpsb sub adc test jne push loop rex.RXB (bad) add xor adc retq icebp jrcxz in es ficomp addl fcmovnbe andb push mov rex.WRX int3 cs xchg mov ja lret (bad) mov add (bad) or lods sbb (bad) jl pop (bad) jp lea lret scas (bad) push or pop test mov cld (bad) iret (bad) (bad) pop mov imul mov mov mov psubb lahf (bad) or sbb cmp in (bad) push jo xchg mov (bad) (bad) (bad) jns xchg and idivl pushq stos fstps xor getsec sbb sarl enterq out pop (bad) or fistpl mov movabs scas decl sub fwait js imul fwait cmp movsl out pop pop insl sbb pop in lods mov rex.WB fwait jbe,pt js cltd sub fwait (bad) retq and fwait (bad) (bad) xor mov int sbb or sub in xchg pop fwait adc xor fwait mov xlat sarl insl es (bad) or orl (bad) mov xchg add or (bad) push jrcxz cmp and add stc rex.WX pop rex.WRX lods pushq retq fwait (bad) adc mov push out in popfq subl sub (bad) retq fwait xor out idivl rex fwait and movsb xchg rex.WRB sub add xor ja (bad) lods pushq pushfq (bad) add loope pop adc out mov movabs xchg mov out ja pop (bad) add mov rcr icebp cld sbb std loop xchg jp add xor jae fldt sarl nop (bad) (bad) (bad) sbb mov lret adc andl rex.WX cmc in push push (bad) (bad) ja retq pushfq (bad) fwait jnp rex.X pop mov addr32 stos xchg jl sbb jae movsb adc popfq fs in or (bad) mov clc fwait cs xchg add pop mov push lods mov hlt fisttpl (bad) lea sbb jno sub push rorl movslq add xor and pushq jmp (bad) xchg fs xchg sti stos xchg pop cwtl cwtl mov insl sub out rex.WXB retq (bad) enterq mov and jp mov pushq adc jb pop addr32 sbb rex.WXB rex.XB fwait xchg jmpq in jge fistpll mov (bad) loopne pushfq or jno adc ja push jp in fwait xlat mov mov push cmp fwait rex.WX cmc in rorb xchg loop xor (bad) in sbb rex.WRX fwait test mov cmp fsubp in rcrb mov add pushfq xchg fwait xor add (bad) movsl pop fwait rex.WRB enterq sbb mov fcomps rex.RX jrcxz sub fwait ja jle ss xchg pushq pop mov sti or or add callq sbb rex.WX jp pop jmp (bad) sti cmp rex.RXB fwait jl add mov gs imul mov rcr scas xchg fwait (bad) loope pop jle sbb sbb out (bad) (bad) cmp stos stos cli rex.XB rex.WB jmp in (bad) loope adc add mov (bad) pushfq (bad) test and (bad) xchg in add sub mov fiaddl sti pop push rolb add or cmp sbb jb xor out test xchg cmp enterq push cltd or (bad) (bad) (bad) xor scas and xor rex.WRXB fwait test rol pop shl add (bad) mov add orb (bad) xor or fwait jl pop adc mov (bad) scas mov rex.RX repz out jmpq jl add in (bad) rex.RX or fwait cmp jge adc movsl outsb fwait mov push sbb mov pop push xor (bad) sbb iret sti pop xchg add mov (bad) push mov lea retq sub fwait js xchg or callq enterq insl fwait iret or mov add (bad) and jmp (bad) push fwait rex.B (bad) mov test stos idivb cmp movabs clc int3 pop mov (bad) rex.RX lret mov xchg (bad) xor mov xchg push ficom mov add rex.WB rex.RX sbb mov jl mov (bad) pop rex.WRXB jmp pop retq xor cmpb cmp cmp rex.WB fwait jle test and sub fwait fs in adc jnp or mov sti jo mov pop insl adc or xchg sbb in sbb or xchg sbb or addr32 jne xorl cli rex.XB jnp fwait xchg movabs (bad) mov sbb rex.RB rex.WRX mov (bad) cmp sub lret jrcxz (bad) fwait lock or (bad) mov mov adc rex (bad) and sbb jrcxz mov movabs in push adc out jae adc out sbb jns xchg mov fwait (bad) and push jrcxz mov (bad) (bad) jo fucom cli fadds fstps or (bad) mov mov sub stos out mov xchg roll (bad) xchg jmp adcl or popq (bad) cmp (bad) adcb iret pop callq test bnd mov cmc add out or jne movabs mov cmp mov and mov in mov leaveq fwait cmc cli rex.WRXB scas ds (bad) fwait sbb jle (bad) (bad) rex addr32 int cmp repnz ror fldcw xchg mov movabs in xchg flds cmp pop sbb and loop add insb (bad) xchg adc lret rex cmp cwtl xor fwait (bad) (bad) pushq add fwait mov cmpsb and or js (bad) icebp rex.RXB add mov fwait pop sahf rex.WX adc mov test lret mov xchg jge or and scas pop rex.RB sbb pop and movabs jmpq add fisttpll cwtl or imul fdivrs in jge xor mov push stos rex.W jo sti sbb cmp iret loope movabs out fwait (bad) int in movsl (bad) add sub fwait fs and pop sbb fwait movabs pop add add scas imul imull jmp pop sti (bad) xor lea movabs popq add cmpl xor mov mov fwait mov outsb add (bad) movabs shlb in lea jae jp fwait (bad) or jge xor sub in mov leaveq or jmp mov repnz mov xchg stos sub add rex.WXB fwait sti callq jb and fsubrl (bad) (bad) cli je (bad) sub in loopne and push cmp (bad) xor pop retq pop sbb jo fwait rex.WRXB sbb cmp rex.RX out jo or or mov xor orl rex.WR in cmp fwait add retq or rex rex.X sti jb mov or (bad) scas xchg jns loope in fwait mov xor stc jrcxz (bad) insb xchg mov hlt sbb jrcxz negl fwait (bad) adc and or mov in movabs (bad) dec jae jle push fildl sbb cmpsl rex.XB (bad) int3 jle mov retq sub (bad) add movabs sti adc push popfq fistpl mov rex.RB (bad) out jrcxz outsl (bad) add jo (bad) xorl (bad) test insl stos (bad) mov out xorl sbb jle movl imul sbb stos fstpt pushq adc (bad) test iret mov xor mov (bad) lea rex.X addr32 rex.WRX rex.WB sub pop dec (bad) pushq movabs fadds es (bad) iret (bad) sti (bad) leaveq sub and (bad) in fs iret sbb mov rex.RXB xor jmpq out and scas out mov xchg xor loop (bad) icebp repnz (bad) (bad) mov (bad) movsl sub rex.WXB fwait int xchg repz rex.RB mov fbld sarb pushq sub iret lret outsb rcr ja adc mov shrl outsb (bad) ficoml (bad) fwait enterq push (bad) adc in iret pushq fdiv jle add jg (bad) (bad) rcrl cmp cmpxchg lods adc (bad) xchg lea rex.RX push cmpl repz push (bad) movslq sub (bad) rcrl (bad) lea lea (bad) movsb mov rex hlt jle or and and rex.XB lret add jmp hlt rex.WRXB (bad) retq jbe (bad) (bad) (bad) (bad) pop and repz push xchg scas xchg push xchg mov (bad) lret iret fwait add cmc and rcll icebp push loop stos sbb (bad) imull add rex.W push (bad) movabs (bad) sbb sub test sub test pop xorl pushq loopne in out mov and (bad) jo pop (bad) shlb cwtl iret movabs movabs roll mov (bad) fstpl jmp rex.WRX shrl xchg outsl and push mov scas loop insb and sahf (bad) sbb outsl mov (bad) jrcxz pushq cmpsb xchg and addr32 push mov (bad) and mov decb rex.WXB cwtl lahf jge imul mov jmpq mov jmpq jle shlb rex.WB movsl (bad) mov movsl (bad) int3 mov (bad) jnp cli (bad) push mov (bad) (bad) (bad) mov jl push adc mov test (bad) clc rex.X (bad) jbe fistp mov rex.WXB repz sbb xor push push testl pop in xchg rex.WX mov rex.RXB shrl (bad) jo xor mov jrcxz fwait bnd pop insl movabs cltd fwait add jne mov cmpsl (bad) scas (bad) sub jg addl adc fwait xchg cmp cltd mov fwait rex.XB pop and scas (bad) fwait in ficom lahf stos sbb int3 mov pop jo repz callq rex.WXB movsb xchg loope mov cmp lea cli fwait jl or movabs fldt callq ds lock insb jge std insl in movsl mov stos sub xchg (bad) (bad) adc fxch or fwait jge jrcxz mov xorl or sbb (bad) (bad) rex.XB jbe movabs rex.WB rex.RX cmp adcb movsl or push jrcxz lea popfq add fwait stos out rex.WRB (bad) cltd push fwait ss add adc sub rolb mov cld cs lret mov loopne rex.WR retq pop sbb scas rex.RX ficompl rex.WRXB callq fwait loopne cmp or outsb jmpq jp callq push vaddss mov mov fwait test rex.RXB insl sub jnp sti (bad) push xchg (bad) pop jl or (bad) rex.RXB sti cmc mov and rcll jae jb (bad) jg rex.X rex.WR xchg movabs add pop ja retq jle adcl sub mov xchg adc rex.RX cmp (bad) in xchg mov andnps sub mov lods sbb add lret sbb adc out sub xor cmp int3 mov movsl (bad) (bad) pop test cli cmpsb negl xchg push (bad) data16 jg sti and (bad) mov scas pop out pushq fwait jmpq roll xchg repnz js and sub es (bad) outsb sahf (bad) and sti or sbb lock fldt xor mov mov (bad) add mov cmp mov test fwait scas out fnstenv (bad) sbb or mov fs (bad) lret adc and cltd in pop in sbb mov or lret retq rex.WXB pushq push movabs cltd sahf lahf rex.RX or jns jrcxz xor idivl (bad) ficomp (bad) out rorl insl (bad) mov stos mov pop push and jns pop (bad) test fisubrl xchg pop out xor (bad) xor cmp mov sub rex.XB (bad) and or (bad) (bad) out cmp push rex.WRB retq and add in (bad) rcrb rex.WXB push mov cmc sti mov (bad) jl (bad) fmull and sub push sbb pop push adc cwtl jg rex.RB or es (bad) repnz rex.XB test add clc fisttpl jmp lahf (bad) (bad) (bad) rex.WX jl test nop (bad) xor sbb xchg movabs cmc xchg stos movabs (bad) (bad) rex.WXB rex.RB fisttp sahf fwait movabs (bad) or rex.R fwait (bad) sarl (bad) mov push sub sti je rex.WB je cmpsb adc (bad) and out jmpq mov scas nop xchg sub adc cmp addr32 fstpt or xor sbb and mov imul movabs xor jp or xchg stc stos sbb je in (bad) xchg jns cwtl xchg pop jle out scas fist rex.XB psrlq sbb fsub mov adc rex.B loope rex.WRB callq movsl mov fcompl jrcxz loop adc fbstp outsl scas and sub movabs andl jge cmp (bad) xor pop nop es popfq lea mov retq rex.XB test clc iret mov rex.X out jg sbbb (bad) movabs mov fcoml popfq ja xchg movabs insl incb add jle rex.WRX lods push and (bad) callq sub pop fildl adc add je (bad) mov decb movabs xchg jo loope rcll lret subl fs sub (bad) adc jg xchg (bad) test and mov (bad) test and sahf (bad) and roll (bad) mov pushfq jo jl jl sbb mov jle cmp rex.X rex.RXB imul int hlt pushfq fldt pop adc movabs rex.RX stc mov mov gs (bad) or imul lods mov add (bad) nop hlt sti data16 ja es repz rex.RX fwait jmpq xchg (bad) mov (bad) adc and add or jp fadds or pop clc (bad) sbb add lret test mov movslq mov out (bad) mov lahf fwait jb (bad) adc jle add iret loopne mov or rex.X adc jg cwtl sub fsts int add mov cli sub (bad) stos loop rclb cwtl loopne xchg mov hlt (bad) sub movabs in loope sbb decb movabs adc pop sbb xor movsl lret push jns (bad) or jmp sbb and loope sbb enterq (bad) test pushfq xor mov ss repz xchg xchg fsts cwtl out mov lret std movabs and shrl mov adc popfq lods sti (bad) mov xchg insl jrcxz mov rex.R rex.RXB jmpq mov and jg (bad) cmp loop mov fwait (bad) mov pushq xchg xor adc fwait ds adc (bad) rex.RX rex.WRB lock fwait jg sbb out rex cmpsl xchg add sub cmp ds jae adc (bad) xchg fadds and pop lods push rex.RXB fwait cmp fild or sbb (bad) mov fcmovnb adc fwait rex.W test fwait mov cwtl sbb popfq in cmp fcmovnb ds adc mov loope,pn fcmovne (bad) (bad) cmp mov int3 pushq jle push jmp xchg mov (bad) (bad) add xor loope (bad) fsub retq add sbb mov add stos in mov (bad) test cld and rex.X fdiv xchg (bad) stos xor rex.XB fwait rex.WX pushq out push sarb sbb cmp cmp cmp std (bad) insb (bad) out rex.RB loopne pushq hlt jns fs (bad) jmpq mov cmp and fwait (bad) jno rex.WXB and xchg (bad) shrl xchg (bad) xor roll sub loope pop data16 callq sbb (bad) cs and ja fwait jp (bad) push (bad) test sbb xchg adc fs sub mov sbb js popq push pop rex.XB adc rex.WRXB jg (bad) cli popfq addl rclb shlb sbb (bad) push (bad) (bad) xchg and movabs rex.RX mov icebp adc iret (bad) push and cwtl fdivrs pop stos pushq pop mov test cli xor cmc (bad) mov pop outsb xor out xchg je fcomps popfq imul jo loop test orl mov sbb jmp sbb or cmp cwtl sbb (bad) test sbb (bad) adc inc addr32 pop (bad) cld movsl jle sbb lods fucom (bad) (bad) fdivrl jno push adc mov (bad) xchg (bad) push ljmp out cmp (bad) scas loopne (bad) adc int3 mov cmc add movabs (bad) clc (bad) movsw rcrb test cli push fwait out add jge rex.X fidivrl movsl (bad) sbb mov out lods fwait cmpl out (bad) mov rex.WR repz mov (bad) fnstsw in in (bad) (bad) cs stos and pop lock jg mov or lret xchg loop sbb or fildl out add xchg xor pushq xchg rex.WR mov fwait or shr rex.WX repz loopne out (bad) fcmovu add rex.WR fwait jg sbb adc sub mov cmp cltd ja rex.WRXB cli mov (bad) scas fcomi push xchg mov mov popq adc add push movabs fildl (bad) and sbb mov adc jmp jp pop (bad) (bad) fdivrp (bad) addr32 xlat xchg fildl or mov (bad) jrcxz mov pop fwait insb add pop or nop and hlt pushfq add fwait rex.WB test cmp fwait cmc cwtl mov sub lret repz decl in jg or xchg xor movabs stos (bad) mov mov sarb rex.R add out (bad) int3 xor stos and (bad) test pushfq or retq rex.WRX xchg stc fwait xor add int sahf (bad) lret add mov sbb rex.WB add or (bad) rex.WRXB fwait (bad) cmpsl leaveq or lret cmp jns push callq sbb leaveq fwait xchg cmp negb cmp fwait xorb stos outsl mov mov jge mov mov (bad) add fwait xchg rex.RB or xor movabs repz pop xchg mov cltd cmp es push callq xor rex.WB rex.RX mov (bad) rex.RB or rex.WXB rex mov xor add jae (bad) repz pop subl in jb add sub mov int3 in cld movabs fildll mov shr rcrl cmp jnp mull sbb icebp xor std add cltd data16 insl add cmp loope pop push xlat push stos rex.WRX fwait (bad) movsb out push rex.B (bad) imul js rex.X rex.WRXB mov and fwait cmp (bad) mov jl (bad) pinsrw pop sti rex.WRB (bad) mov jge mov scas fwait pop iret sub push (bad) cmp fwait mov (bad) xor fild fwait outsb mov imul and pushfq xor mov add pop sahf (bad) out sub lock hlt cmp cltd movsl lret mov stc stos outsl xor or fwait mov adc push data16 (bad) loope test sbb iret rex.X xchg or js mov (bad) mov add clc movslq xor lods lret cmp jmpq sbb xor push jne and out outsb xor (bad) loopne (bad) add (bad) (bad) pushq sbb shrb in jo fwait (bad) movabs rex.RX pop scas adc fisttpl mov lcall test sti imul cmp or mov fistpl movabs xchg (bad) fldt mov (bad) xchg fwait push jge xchg add mov rex.WRX mov sti mov or (bad) fcmovnu (bad) push retq pop (bad) rex.WRXB sbb jns mov mov cs ja and pushfq movabs mov enterq (bad) fwait adc popfq (bad) out fwait sub adc movabs leaveq andl fwait movabs jno xchg mov mov push adc rex.WXB (bad) mov cwtl mov cltd out push sbb leaveq repnz rolb (bad) callq popfq cmp in sub pop cwtl sub mov mov or imull rex.WXB out movabs pushfq sub rol mov movabs (bad) jmpq (bad) loopne (bad) push fsubrp movsb out sti cmp movabs negb fist mov (bad) push sbb pop pop (bad) mov stc (bad) sub retq xchg in jp cmpsb cmp jns jl xor rex.W rex.XB insb in movsl mov fwait test mov (bad) sub sbb (bad) sub sbb jnp testb (bad) stos jp imul fwait and lods pop mov (bad) jb mov rex.WRXB shlb pop adc pop rex.XB (bad) fisttpl mov cmp in loopne (bad) subl movabs mov pop (bad) cmpsb rcr xchg sahf adc mov test enterq add pop fistpl nop (bad) (bad) sti push data16 cmp movabs orl iret or sbb (bad) clc (bad) not rex.WX (bad) movabs pop mov sbb rex.RB shrl (bad) scas fstpt fbld movabs sar sub in jmpq mov and fwait rex.WB clc lret and lods movabs (bad) fcmovb sti add fistp lahf sbb stc (bad) rex.X (bad) cwtl movabs rex.XB sti (bad) (bad) lahf (bad) fwait xchg icebp (bad) (bad) mov mov je in sbb push retq movsb test push std movslq sbb sbb sub rex.WRXB fwait sbbb adc sahf xchg out popq cmpsl ds add jmpq rex.XB jg fdivrp pushfq imul sbb mulb fwait nop mov add fnsave cwtl scas in test movabs mov (bad) lret xchg ds jmp out rex push stc adc sub (bad) (bad) pop jrcxz out (bad) push add sbb xchg lret (bad) (bad) (bad) add in mov insb faddp je or cld pop movsl mov in (bad) (bad) cmp mov or jmp mov lahf icebp add (bad) sbb insb je add adc insl fild pop fwait stc xlat in rex.XB lret sbb mov (bad) sub test rcrl jp pop mul data16 scas adc and shrd jbe sub (bad) add sbb xor lods lock xor (bad) or jae fwait xchg jle fisubrl add rex.WR (bad) cmpsb mov es sub pushq fwait repnz (bad) jb (bad) fwait stos sahf jmpq (bad) fwait nop cmpsb lods inc jp ficompl (bad) fmul repz jne or mov nop stos movabs out xchg mov (bad) mov and roll (bad) add (bad) repz mov iret (bad) cmpsb insb incl (bad) fisubl fistl cltd sahf imul fwait or scas (bad) xchg fwait (bad) repz (bad) lock fwait stos push (bad) in pop lret or and (bad) fnstsw pop gs pushfq cld fidivl mov rcrl add mov push popfq je pushq mov mov jle sbb (bad) rex.R lods (bad) sub and pop (bad) sbb out (bad) in lock fwait repz or iret fs fwait (bad) retq or sbb insl pop or insb and sti mov fwait sbb xchg adc rex.R rex.R repz fdivr shlb sbb pop rex.WRXB mov mov xchg mov cli fwait in mov (bad) mov add cmp decl xor xchg mov out fistl cmp fwait movabs (bad) xor (bad) std fwait push loop sbb ja xor jno movsb xchg in cmp (bad) sbb xor cmp jns (bad) retq icebp (bad) sub fldt or and mov mov fwait stos data16 (bad) addr32 movabs sub fwait in (bad) callq pop pushfq rex.WRX mov fistp sub cld fwait test cmc movsl (bad) (bad) fwait xchg pop lret pop mov negl mov out mov ficompl mov adc fsubrs add stos or xlat callq rcl loopne xchg xchg sahf cs (bad) callq pop xchg sbb lods mov pushfq pop (bad) xor or lret mov fwait cmp mov and xchg cli loop (bad) fwait sbb fs adc (bad) pop lahf (bad) sbb xchg jnp (bad) push jecxz outsb mov fwait jne int3 es fwait (bad) push and cmp mov (bad) sti iret movabs and shlb sub cwtl rex.WRB mov xchg jge cmc retq lods sbb out stos sti sbb jle test jmp ja pushfq loope lods jge (bad) (bad) retq shr push sar fwait in (bad) cmc stos mulb (bad) and (bad) add (bad) rclb (bad) movslq adc mov and (bad) jmpq (bad) (bad) and jl icebp loopne or (bad) (bad) ja repnz sarq (bad) or lahf hlt and xlat jmp cwtl icebp movabs ss add (bad) pop insb and (bad) pushfq loopne cld and fsubr add ss bnd fwait adc xchg pop mov xor retq stos jmp rex and (bad) fwait loop,pn rcll xor push gs rex.RX push jg jo xchg fstpt and sbb cmp divl (bad) rex.X cmc orl fwait jg and and (bad) jne fwait and or retq repnz repz xchg fwait retq cmp (bad) or sbb (bad) stos out movsl push rcrl pushq rclb lahf test retq movabs (bad) jmp fwait xchg jo imul cmp sti mov mov xchg cli fwait movsb push or sbb icebp fldl int3 fdivs fisttpl and fxch adc rex.WRX subl jbe (bad) sti or movabs cmp rex.XB (bad) rorb sbb cmpl fwait mov (bad) add fwait push rex.RB add incl std movabs (bad) retq (bad) test fwait or (bad) lea adc xlat pushq cmp add outsl sbbl hlt jg xor insb cmp test pushfq fisttpll sbb out xchg fwait jp jrcxz fs (bad) xchg loop neg pushq jge xchg (bad) lea cmp pushq pop fwait movabs (bad) sbb xor insl icebp cmpsb sub lret std xlat (bad) mov addr32 sbb stc fwait rex.RX adc or fwait sbb fwait mov imul xor or sub fmull sbb xchg je xchg add sub lcall clc or push jmpq xor shl fwait stos xchg xor (bad) pop ficom in sar out pop scas xchg stos lock mov (bad) ja cmp insl movslq fwait xor mov hlt and rex.W sbb push repnz mov (bad) rcrl mov movsb clc rex.WRB fwait rex.WRX (bad) xchg in movsl and push (bad) mov out sbb rex.RB fwait jge jae adc movabs jrcxz rex.XB adc shrl fildll add xlat rex.WRXB js mov imul push xor (bad) stc xchg cld in jrcxz hlt mov insb negb popfq sub (bad) mov rex.R in xchg incb rex.W rex (bad) movabs cmp retq xchg mov callq fdivrs (bad) loope xchg ds jrcxz fcoms ds xor (bad) add xchg addb cmp xlat or mov (bad) (bad) rex.WR sbb cmp push cmp iret (bad) int3 jae mov loope outsb (bad) mov cs js frstor mov (bad) ss sbb cmp (bad) jo xor pushq jb std and loopne sub sbb jno pop (bad) rex.X fcomp (bad) adc mov mov xor or (bad) (bad) lahf fwait std jae adc and int3 pop callq xchg movabs outsl lods cwtl addb rex.WRXB and (bad) sub retq and fidiv xchg jle out shlb sub sub (bad) (bad) roll fdivs (bad) fcomip cmp (bad) mov fwait add push fwait test nop add fwait and add jbe in stos xchg push push (bad) cld sub push (bad) (bad) repz sub (bad) lock xchg jg pop sbb fwait rex.R movabs (bad) lret pop pop add add (bad) fwait or imul push (bad) nop pop insb jne stos imul stos fisttpl jmpq xchg rex cltd (bad) fwait or div rep popfq (bad) bnd mov (bad) adc out (bad) mov movabs jns idivl jae fwait pop in iret xchg decl sbb sbb or fwait pop cmp add cmp stos loope loopne sbb xchg sub mov jmpq add sbb (bad) (bad) rex xchg out and and (bad) sbb (bad) (bad) mov fwait out mov push (bad) mov lods (bad) jle out faddl out rol mov mov (bad) clc outsl (bad) lea sbb icebp rex.WXB fwait sub divb fwait sbb (bad) cs pop sbb rex.WX or mov sub fnstcw movabs fwait (bad) es and fildll test lock rcrb or and addr32 test mov fwait movsl push (bad) cwtl movslq pop cltd push movsb jle or jb mov xchg in rex.WRXB retq rex.RB cltd mov rex.B fwait in (bad) (bad) jg icebp sti add sbb fisubr cs (bad) loopne pop rorb jb add (bad) xlat andl in js rex xchg data16 fcomps mov sbb jns jnp rex.WX stc (bad) rex.W rex.RXB je xchg outsb mov rex.B fwait jb or (bad) mov movabs (bad) rex.RXB rex.WB rex.WRX out sbb (bad) cmp mov sbb xchg (bad) mov (bad) fwait std and sbb test ds pushfq pop fwait es sub fwait cli movslq (bad) mov jge (bad) xor (bad) cmp xor pop mov jrcxz mov fistp loopne jne scas jmp sbb (bad) fwait (bad) std subl rex.RXB jae lret (bad) clc stc popfq jno xchg movsl fwait rex.WB sbbb mov outsb cmp (bad) jbe add (bad) and int3 js mov test cli int mov fstpt int3 pop sbb pushq cmpsb xor (bad) mov negl cmp test mov rex.R add xor cmp mov in (bad) sbb (bad) sarb out rex.WB imul (bad) (bad) mov sub test mov fwait (bad) and rex.WX cmp sbb fwait xchg cs pushfq cmpsl outsb in sbb pop lock jrcxz (bad) fwait lods leaveq clc (bad) xchg js stc fwait rcr in (bad) repnz mov add callq mov pushfq pop in nop rex.RB (bad) push sbb sbb pop shll stos xor in scas pushq loop mov (bad) test pushq movsl scas pushq (bad) retq lar push jnp stc (bad) jo push ss and lods cld int3 rex.RXB fadds push (bad) jg jge jns (bad) imul int3 fcmovu rex.WX pop pop rex (bad) adc cltd rex.RB and addr32 pushq adc mov andb loope (bad) insb (bad) mov (bad) add insb stos rex.WRX (bad) pop sbb and and and or adc sbb push (bad) imul (bad) xchg imul (bad) icebp shll mov (bad) rex.WRXB fwait in rex.B mov rex.W test test and xor rex.WXB cld (bad) or rex.RXB rex.W movabs pushfq mov rex.R insb and (bad) mov or push (bad) ja or faddl mov test imul xor adc sbb sub (bad) jmp cwtl fildll sti push fildl repz cli (bad) ds rex.WXB cmp pop movsl sbb xor fwait test mov imul cmp fwait rex.WRB rcll repnz mov cld rex.WRXB xor or test cli rex.W cmpsb sti lods xor cmp xchg shl (bad) jmpq add fstpt out (bad) xchg xchg jle (bad) jne in retq push iret pop sub mov or stos sbb movsl sub and mov (bad) and adc fwait or fsubrs (bad) sbb lret cltd (bad) (bad) (bad) push icebp push pop (bad) mov mov sti sbb xor scas rex.WR movabs jle jmpq in shl (bad) rex.WB sub mov rorb lods jp fwait xchg (bad) fcmovnb jb mov add pushfq fwait (bad) add cmpsl xlat cmp scas cltd decb cmp or fistpll add insb mov xlat (bad) mov rex.XB mov pop insl pop jo push pushfq pop in and repnz cs int3 fwait (bad) enterq gs sbb push mov icebp cltd movabs fldt out rex.XB rex.XB rex.R sbb mov jg pop outsl pop lret fwait pop shrl addr32 fidivl (bad) retq mov mov scas or test fwait cld pushq (bad) xor pop fwait push jnp callq sbb sub outsb sahf mov sbb in out sbbl fwait enterq pop mov pop popq ficomp sub imul sbb mov rex.WR (bad) fild jae loope pushq pop stc (bad) imul xchg outsb mov (bad) (bad) js mov (bad) xchg mov fs pop adc data16 mov test ss pop mov adc rex.XB jmp pushfq push mov mov push (bad) jmpq cmpsl retq (bad) rol stos jg push add mov scas fbstp mov (bad) sbb sub lods ds xchg push lret sbb (bad) in movslq fwait sub jle mov loope xor (bad) addr32 jne in xchg (bad) rex.RXB rex.WX (bad) fcoml and mov leaveq sbb rex.RX popfq in mov icebp jae mov lret jmp stos shrb fcompl sbb pushq loopne rclb push fldcw loop xor mov xor repnz fidivr lahf mov pop repz movabs sbb fwait pop cmpsl out hlt mov add push jno sub sbb cld repz pop rex.WR fs andl fwait lret loope fcmovnu clc mov pushfq test lret sahf jle pushq rorl fwait cs movsb add retq int hlt sbb jb psrlw outsb outsl fwait rex.WXB add xchg popfq jbe mov and mov rolb adc (bad) and cs xchg cmpsb (bad) or lods movabs (bad) mov sub or cltd test add lret lret rex.WRB push icebp cmp movabs (bad) insl (bad) xchg rex.WB idivl cmp fwait test cs mov pop jrcxz fadds (bad) fcmovbe adc add int sbbb push xor mov sahf fwait (bad) in fidiv out xchg fistl movabs jl fwait rex.X out sbb popfq and jbe fildl mov jno rex.WXB cmc fcom icebp (bad) sti nop sub sbb fwait (bad) lea pop and fwait retq sarl mov or sbb add mov cmp (bad) mov (bad) or push adc insb and rex.RB insl add xor leaveq mov and fwait pop rex.WB data16 add and (bad) add shrd (bad) sarb jle stc pushfq hlt mov sub stos adcl scas sti rex.RX (bad) fwait xchg std cmpsl stos sahf pop jo jle fwait rex.B scas lods adc push fcmovnb rex.WX (bad) sbb (bad) repz sti lret idiv sbb (bad) pop jmp insb movsl fwait mov lahf retq (bad) iret fwait or fldt imul stos or fsubrp pop movabs callq movabs rex.WX pop xchg pushq (bad) add mov retq or xchg adc pushfq insb jmpq and mov sarl movabs sub jne iret test fstpl cbtw (bad) sbb xor (bad) out cmp (bad) incl repz cmp sbb jns (bad) sbbl add test sub jno (bad) mov stos fidivrl sti (bad) sbb jmp (bad) add fstpt push out fwait movsl fcmovb in cld rex.RB out sbb sub add test (bad) mov cmc in fwait (bad) stos movabs fs fistl sub xor std rorl je rex.WRX xchg fwait add movabs scas or pop test roll cmpsl cmp rex.WRB lret or rex.WRXB int xchg stos fwait add push or rex.XB pop mov negl or cwtl mov cmpl rex.X fwait movsl mov jrcxz test outsb movabs or (bad) outsb retq in push movslq and or pushq jge or sbb enterq movabs jns (bad) mov lahf repnz sub negb jl sbb mov lret lret cli (bad) in rex.W (bad) adc (bad) ds cs add mov xor lahf sbb add pop adc ds cmpsl (bad) cmp imul fwait mov loope cs lods fwait (bad) lret sbb cmpsb mov (bad) (bad) mov (bad) cmp fwait jbe int3 xchg cs mov sar repnz xchg xchg (bad) sahf (bad) movabs adc and (bad) repnz movsb ds sbb sti fwait jrcxz pop orl cmpb in fwait push (bad) xor mov xchg mov sbb or (bad) (bad) fwait mov setg retq repz enterq pushfq pushfq (bad) (bad) data16 (bad) fbld sti es (bad) outsl out (bad) adc fwait stc iret pop xchg (bad) out adcl or mov xchg add movabs pop xchg sbbl mov xchg sub cmpsb movabs jl (bad) fwait and and cmpl xchg ss fcmovnbe int nop mov jle or xor in sbb adc fbstp rex.XB fwait add sub xor sahf (bad) cmp std push (bad) pushq rex.WRX fneni(8087 or rex.WRB push pushq push lods xchg leaveq cltd cmp fwait xor incb sub test xor cmovbe sub sti outsb lods mov js (bad) xchg xor sbb sub test fdiv jae pop cli add push cmp scas rex.WRXB sbb (bad) and (bad) jp rcrl sar (bad) fwait cmp fwait xor jrcxz stc (bad) in fldl (bad) pushq sub mov test loope sub or popfq jl sti outsl loopne (bad) shl (bad) mov loop cmpsl cltd sub xlat (bad) cltd mov rex.WRXB adc or mov mov fwait rex.X rcrb (bad) (bad) rex.WRXB mov jns cld lods sbb pushq xchg (bad) mov or in jmpq adc rex.RXB adc sahf mov rex.RB pushfq sahf loop sbb movslq sbb cli scas (bad) mov cltd fwait or sahf ror lock sbb (bad) cli fmuls mov (bad) lods and shrb (bad) test movabs or jle jbe movl loope sbb xchg out cmpsb movabs test sub adc xor int3 push (bad) (bad) retq sbb xchg xchg sbb es out (bad) lcall lahf jmpq adc out (bad) es sbb imul scas rex.WRXB (bad) movsb mov fidivl add retq lock xchg movabs test (bad) or test (bad) ffreep cltd repnz (bad) fwait mov decb add out pop xchg shl mov adc sub mov add int in or callq pop cmp mov fldenv rex.X fmul rex.WRXB es pushq test add jmpq jp shll retq cmc adc fwait xor jne js or cltd rex.RB fwait (bad) int (bad) decl sti out xor fwait pop pushq mov sbb jb out mov movabs in std sub and stos rex.WRB insl xlat out cmp out rorl xor add fwait jrcxz out add fcoms jl xchg int loope fwait (bad) jrcxz (bad) imul fwait mov (bad) (bad) or jmp outsb (bad) rex.XB fwait mov rex.RX fwait push (bad) fistl cmp cltd cmp mov outsl lahf xlat sbb cmc lods retq lret jno mov push fwait add pop sti rex.WRXB and (bad) jl cmpb or mov mov rex.WXB rex.WX fwait jno lea out mov rorb mov (bad) mov mov pop pushfq mov scas cmp in pop (bad) xchg std mov pushfq mov xor sbb jmp sub cmp es fdivs sbb xor lods mov (bad) jns (bad) xchg sti mov (bad) or fwait or (bad) fwait sbb test loope nop out rex.B fwait add rex.WRXB fwait or xor push cmp sub in (bad) ds jo (bad) lret pmullw adc push mov shr pop sbb leaveq or adc pop in jno pop mov (bad) loope mov rex.WX repz push js (bad) fwait (bad) jle xor jno (bad) fwait jrcxz push rex.RXB ds rex.WR mov in rex.WRX mov addr32 notl (bad) jb jae mov (bad) lods xor (bad) std xor jrcxz fldl retq mov adc and sbb pop adc rex.WRXB gs movabs ficomp mov jae ficomp out mov fwait lret je cmp add fwait sub mov rex.W enterq sbbl jbe cmpsl fwait sbb xchg leaveq loop movsb std fwait or adc ja mov and (bad) mov (bad) pop (bad) push cmpsb sti mov retq sbb (bad) lea cltd rex.WRXB in movsl (bad) sbb rex.RXB or (bad) scas (bad) sbb sbb push ja adc mov pop pop ds ss imul vpmaddwd fmuls lea jo,pt fs rex.WX push hlt cwtl mov stos int3 addl fwait or out lea cmp mov movabs cmp mov (bad) pop shr fsubs sbb mov rex.WX callq cmp stc neg add ss fcmovnbe xlat and mov fwait jmpq movslq xor add movabs and insl xor push fwait lods (bad) (bad) rex.WRB sbb test repz sti xchg pushq rex.WRB adc out xlat clc imul mov jrcxz pop mov fnstsw push lahf mov push ja sbb (bad) pushfq lret fidivl (bad) cmp mov movabs lahf sbb adc rex.WRXB lahf sub sbb mov (bad) xchg fidiv movsl and sub mov mov loop cltd (bad) jp xchg mov retq xchg insb sbb (bad) xchg and jns push movslq fs pop leaveq rex.WRXB mov mov pop rex.XB (bad) (bad) cltd pop add (bad) movslq movabs (bad) cwtl (bad) jle (bad) outsb sub movabs and cmc pushq or pushq cmpsl insb xor test add movabs rex int cmp push data16 pushq mov add in (bad) pop rex.WRB (bad) js xchg add xorw fistl rex.XB loop jge jge fldln2 out (bad) mov sbb shrl movsb cwtl sub pop adc fsts mov mov psllw jb fwait pop add sub cmp rex.WR lcall (bad) (bad) pop in fwait mov (bad) stc ficomp sbb add (bad) (bad) mov mov adc addr32 xchg push cmp fwait mov jb fcoms insl push fwait xor jae andl fwait and cmp (bad) fwait sbb pushq test in xlat rex.W fwait rclb rol jne test xor in movsl and repz loope movabs adc rex.X (bad) (bad) jns mov pop sbb je lahf add rex.WX cmp sub in (bad) loop fwait loop and (bad) std rex.WXB sbb xchg es movsb and cli int fs add jae push retq sub fistpl in lret mov ficomp add cltd push pop cmp add (bad) outsb jb jrcxz pop cmp sub (bad) ffree icebp fisttpl or add push or cmc rex cmpsb jo stc fwait jp mov jg fsubp adc jns pop (bad) pushq fwait sbb push jbe pop rex.RXB xlat cmpsb sub mov fwait (bad) data16 callq fsubrp sbb (bad) lahf loopne sbb push enterq add movabs negb test out cmp lret fisttpl cmc xlat sbb (bad) or or (bad) negb (bad) (bad) jb callq outsl (bad) sti std in jp sbb add jno movsl fsubs movabs es xor xchg jmpq lock (bad) jmp (bad) sar (bad) push xchg enterq push mov xchg mov iret outsb and lahf clc cmp int3 fist fwait xor insb push shrb or jae,pt cmc fwait out decb pop push int3 pop fwait xchg fcmove or sti or jge cmpsb push xchg and fwait adc (bad) mov xor rorl adc sahf (bad) jle (bad) adc fwait in cmp xor sbb lods rex.W jbe loop (bad) rcll (bad) insl jge callq je push fwait int3 lods or and sbb jle jg sbb mov fidivrl outsb (bad) cmp xchg movsb scas add xlat and in movabs insl out or sti cmp std xchg (bad) jg fistpl rex.RB (bad) and (bad) or (bad) and fwait sbb nop notb repz (bad) (bad) adc gs shl add sbb (bad) hlt pushfq add movabs (bad) out adc jl mov xchg and fwait jne rex.WRX fwait sbb movabs out rex.WB and cld in jge repz adcb hlt cwtl mov (bad) fwait rex.WRX mov (bad) cs retq fwait adc cwtl sbb vsubsd push push movsl add sbb sbb sbb movslq subb mov lret fistp test jnp fwait add sub outsb rex.WB mov pop xchg adc rex.R jrcxz (bad) add lahf movsb add mov rex.RX fisttp sti mov gs mov adc jo popfq sti movabs (bad) test mov xchg pop fwait and sbb jbe clc fadds cltd fcoml and sbb (bad) fisttpll mov (bad) (bad) mov sbb xchg jo jle cltd (bad) ds push movabs fwait pop add sbb pushq sti cmp or jbe ss (bad) add outsl mov adcl (bad) jnp fwait scas loopne (bad) mov std xor lods mov fstps add xchg rorb fwait popfq (bad) mov xchg (bad) add or push data16 loop pushfq stos sbb push divl rex.B jmp movsb rex.WRX rorb fsubl pop mov mov adc stos (bad) sbb rex.WRB scas pop xor (bad) (bad) imul or (bad) popfq imul fwait hlt scas sbb test rex (bad) fsubrl ja (bad) std movabs js xchg retq xor add xchg rcrl push push pop out and xchg jge cmp (bad) sbb lahf shll fildl cmp (bad) insl rex.WB rex.WXB xchg cmp movabs (bad) hlt jmp fdivrl (bad) cs or movabs (bad) js push pop fbstp sbb fwait rex.XB (bad) sbb test or (bad) (bad) icebp movabs mov jb adc adc out fild adc sar sub (bad) mov (bad) fwait jb rex.WRB jae cmp fwait push mov sbb add add jl cli fwait jo mov adc jle and sub sbb fisttp pushfq ds cmp mov (bad) rcrl pushq sbb loope push stos jg (bad) mov pushq fisub (bad) fwait xchg (bad) movslq movl nop lea jp rolb (bad) adc and mov sbb or jrcxz mov fsts sbb xchg cmpsb jrcxz adc push and xchg sub pop rcrb and add popfq xorb add sarl push pushq xchg (bad) sbb add fadds mov popfq rex.XB rex.B shrl xor jno and mov adc and in mov sub (bad) rex.X and scas rex.WRXB ja pop mov jb (bad) push (bad) jmpq loope (bad) (bad) adc mov pop in sub cmpb mov (bad) lar xchg pop mov shrb stos test add or repnz (bad) movabs xor rex.WXB cmp fsubrs addr32 fsts scas xchg rex.X rorq imul idivl rex.WRX xchg push (bad) sahf int3 sub mov or stos pushq cmp rcrl (bad) and rex.RB cltd push jg sub pushfq lret sbb sbb mov and jl xchg js cmp rex.WRB rex.R add (bad) icebp sbb in ss icebp mov or or mov out jrcxz fwait jle out loope test fsave sbb insl pop movsl mov push out roll mov mov (bad) out callq jp cmp (bad) xor (bad) pop in es retq scas jmp lahf insb fwait out sub data16 push xchg add fwait rex.WXB adc lock (bad) jrcxz mov fisttpl fdivs pop callq jrcxz sub pushfq sub add cmpsb lahf fwait rex.W (bad) sub xchg (bad) sub jge sbb or fwait (bad) sbb (bad) (bad) cmp stos rex.WRX insb pop jg mov mov push fwait add add (bad) mov sub or push in rex.RB adc add fildl decl test pop xor movslq negl jp fdivr div xchg (bad) xchg and test cmp adc (bad) fwait out (bad) push (bad) lods frstor fwait test retq addl sbb mov fwait rex.WRXB pop scas clc adc sahf (bad) test fwait jle rex.WRXB rex.RX xlat movabs mov callq (bad) jp fwait sub nop int (bad) cmp ss adc gs push jns xchg sti fs adc cld fwait jbe movabs xor (bad) jae outsb or lret loopne sahf fcomi rex.RB rex.WX push fwait rclb (bad) in xchg mov xchg int3 sbb rex.B fldt pop jmpq enterq stos jl and test and mov xchg (bad) hlt sbb mov (bad) fs in adc roll movabs mov cli imull add stc popfq sbb jbe movslq rcl xchg jbe pop in jmpq hlt push pop (bad) push (bad) push in xor adc gs es adc sbb mov pop rex.WRB callq callq in cmp fstpt and lret jae mov xor rex.B or int xchg icebp mulb adc sub adc add out retq (bad) rex.RX fmul (bad) (bad) add (bad) fwait (bad) rcrl fwait (bad) int imul hlt sbb xchg repnz movslq fwait xchg (bad) xchg cltd fcompl adc and xchg fimul mov jbe push xor xor adcl push mov push fbstp fwait rex.R test (bad) add (bad) xchg sti add jmpq add pushq pop hlt fwait xor add sbb fcompl movabs push mov xchg icebp cmp and scas ds (bad) jb mov mov fwait enterq push add fwait mov (bad) adc (bad) push iret xchg xor and mov mov (bad) rex.RXB pushq (bad) jnp movslq fdivs rex.WXB mov movslq fildl sub mov add pop scas xlat (bad) faddl sbb (bad) pop rex lock (bad) cmp (bad) pop fbstp xor stos sbb mov rcll in jbe stos add movabs pushfq sub movabs fsubl movabs fsubrp outsl or push je or std cmc rex.WXB rex.WX adc out rex.X mov je xor mov movabs mov or fucomp retq pop (bad) setl and pop sub mov in mov xchg adc jle rorl sbb (bad) imul mov xor adc addr32 jrcxz cmp ss mov xchg lods retq jge loopne test (bad) jne loop test sbb and enterq addr32 data16 or loope (bad) (bad) sbb pop scas jg in cmp add xchg insb mov (bad) (bad) hlt (bad) (bad) clc jle loop sub jae pop sub jb mov sub out xor cwtl lret jg pop je and xlat or or add xchg sub xchg (bad) push lea rex.X jge lret (bad) pop (bad) mov push cmp fdivrl imul iret rex.WX pop (bad) ss mov (bad) cmp and cmp ds popfq lods push mov (bad) rex.RB xchg pushq add cmpsl sbb jns rex.W out idivb stc gs or mov and fistpl movabs cli cmpl pop test cmp mov jns and (bad) xor mov and cmpsb or std fs jge jl adc lea jg fimul movabs xor sbb push test (bad) fdivr (bad) rex.B rex.WXB stos fcoml fadds imul fstpt rex.X push sub cmp sbb mov pop jp jo rex.X fidivrl sbb ja movabs sbbl pop push (bad) (bad) div mov (bad) (bad) adc (bad) rex.WR test rex.RXB orb nop xchg mov pop cmp xchg (bad) sub lods loopne jns xchg (bad) (bad) rex.RX rex.WX cmp fimul mov jmp in movsl push and pop cmp jbe rcrb sbb test mov ficom cmp mov xor sub shlb (bad) rex.WR mov cmp out pop rex.RX rex.WXB pop push jno pop fcompl rorb lods sahf xchg jnp stc mov movabs scas pop rex.R mov cmpsb stc pop shll fstpt insb cld (bad) xchg int3 shlb sub rex.WX pushfq pop sbb test xchg adc repnz mov lea movslq jo lea pop (bad) lret mov vmread mov (bad) (bad) int xchg xor sbb fcmovbe clc sbb cltd (bad) (bad) retq stc rex.WXB clc jp addb xchg movsb and adc (bad) jne out cmp mov js rcrb rex.RX rex.WXB push fs out (bad) jrcxz lahf xchg (bad) or xor fwait jnp (bad) pop lret enterq in mov shr pop push vpminuw in retq retq sbb rex.WX mov (bad) (bad) sub xchg je orl pop xchg in mov iret stc mov (bad) std hlt add cli mov (bad) lock (bad) rex.WRX and (bad) hlt fcomps sub (bad) mov mov rex.RX push xor xchg stos cmpsl lea xchg ds xchg movabs (bad) sbb sbb mov jb movsb lret adc rex.X (bad) xchg (bad) roll mov popfq cmpsl movabs sbb adc (bad) loop xchg rex.R jbe or jle xor (bad) shlb test rex.WR or stc scas or (bad) or cwtl nop mov push fadd mov lods jo adc jb (bad) insb pushfq push rcr mov cltd sbb (bad) int3 mov fild fildl cmpsl sti js roll leaveq xchg adc (bad) fcoms rex.RB xchg cwtl push mov pop rex je add outsl rcl adc add xlat jae (bad) mov popfq loopne and loop (bad) sub rex.RXB rcrb sbb movsl sub rex.XB sbb scas push movsl and add (bad) clc (bad) adc mov mov sahf in cmp std and retq nop or repz adcl (bad) (bad) movabs js int3 fistpl pop mov (bad) loope lret in icebp rex.WRX negl sbb push (bad) xor (bad) out rex hlt btc xchg mov and imul xchg rex.R and (bad) loope mov repnz retq mov rex.X xchg (bad) sbb mov enterq js sbb pushq outsb in xor adc rex.WX cmp out rex.B popfq pop loop pop rex.WB (bad) jle imul jno xchg fdivl fistl mov out hlt cmp insl push jmp add (bad) test mov test xor pop (bad) jle xor test (bad) adc jno mov pop fsts cld jl sbb mov (bad) imul pop sbb pop rex.X ds mov rorb fstpt add (bad) (bad) and (bad) pop lgs fs rex.WX in (bad) sub movabs movabs cltd rex.XB (bad) add or test xlat cmp push adc repz (bad) lret ja or pop pcmpgtd (bad) test imul and sbb in insl cmp jrcxz xor movabs sbbl ss rex rex.WB fwait xor cmp adc sub fwait imul mov xor test adc fwait jae icebp jge pop mov xchg movabs rex.RB rex.RX fstps callq ds rex.X sbbl rex.RB xchg adc rex.WXB rex.WRB lods imul in cmp cmpsb cltd rex.WRX mov mov int xchg shlb sbb lock fwait (bad) stos repnz addr32 rex.RX (bad) (bad) xlat jge repz push movabs lods outsl adc (bad) cmc fwait pushfq in int3 out (bad) mov out and pop sbb rex.W add sarl (bad) fdivrl xchg mov js and or gs sti add (bad) sbb jmpq xchg movabs cmp and add mov rex.B pushq xor fwait adc (bad) cmp loop mov (bad) xchg sti and rex.X fwait test rex.WXB cmpsb add loop fistl fdivrl adc rex.R rex.XB add xchg sbb fsubrl fwait (bad) sub stos (bad) scas (bad) add adc (bad) cld in outsl cmp fwait out stos jge cmp (bad) fwait adc xchg test sub jle stos adc js fisubrl xchg sbb imull xchg push movsb (bad) sbb jmp fwait or adc jg adc xchg imul (bad) (bad) cmp mov sub cmp (bad) cmpsl cmpb fwait xchg callq sub in movsl add test fldl (bad) cmp fwait adc xor ficompl add (bad) (bad) movabs jl stc movabs addr32 mov and fwait push mov nop xchg sbb add btc (bad) data16 test idiv fwait movsb add fistp repz fidivl rcl push mov sbb movabs jb rex fiadd fld loopne add xchg fwait decb lret scas rex (bad) fwait adc jrcxz cmc sub rex.WXB fwait mov loopne adc sbb (bad) or repnz and cs xchg (bad) mov xchg adc outsl fwait imul adc jrcxz fwait rex.RB xor fwait (bad) mov out lret cmc fadds sahf or movabs mov mov xchg loop movabs rex.X rex.R out int push fcoml and adc (bad) repz sbb rex.R fwait out (bad) xchg fwait xchg sbb xchg cmp add add (bad) shll out lret mov jmp pushq sub (bad) or je rex.B mov (bad) mov pop (bad) sbb jl rex.WB push fs scas sbb incl rex.WB xchg pop and fcmovne mov (bad) rcrl retq outsb mov rex.WRXB mov jmpq rex.RB fdivrs sbb xor sbbl ss sbb jp (bad) fistpl out leaveq xchg rcr (bad) and sub mov jmp sbb rcll push fwait xchg movabs ja mov mov fs sti push movabs rcr int3 rex.RX js jle fbld or rex.WRX lret in sub xchg cltd movabs adc add int fisttpll cmp ja or (bad) (bad) mov (bad) fwait jbe or out pushq lret mov (bad) pop pushq jae fwait (bad) (bad) retq mov data16 cmp je out and fucomip (bad) ja fwait add pushq mov lret mov int3 insb jb xor (bad) or lret je rex.RB div in int3 lret adc lcall adc (bad) lret jne pop mov adc mov push (bad) mov add (bad) or jp scas fild insl sub rex.B rex.WX es (bad) cmc lret mov push mov cmp jo js push xlat adc mov pushq pushq xchg callq sub and (bad) sbb sbb orl (bad) sbb or rex.WXB scas jbe sbb idivl clc cmp (bad) sbb mov jge ja jo sub lods and rcll (bad) mov sbb sbb loopl movslq mov pop xchg loopne rex.RXB in mov cmpsl retq rex.B rex.WXB push adc mov rex.WB push iret rex.WB mull ja pop mov jp sahf (bad) xchg hlt (bad) mov ds es adc repz jl imul or mov mov shlb movslq lods add loope movabs rex.W cmp in cmp xor (bad) cmpsl fstl (bad) in sbb int3 retq stos lock mov movslq rex.WB jbe xor mov clc xchg adc jnp pop and or addr32 rcrb xchg leaveq jmp fnsetpm(287 movabs rcl push packuswb std mov push jl sti mov mov cmpsb in mov cld adc loope rex.WRXB (bad) sarl mov adc sbb test xchg cmpsl mov cmp sbb (bad) and movabs (bad) adc mov pushq cmp jae (bad) fadds loop sbb nop push xor sarb in mov loopne and pop sbb xchg rex.WB rex mov mov fcoml rorb and ror shrb jbe add movslq mov lret addr32 mov xor fistpll out gs in rex.WX test lea (bad) push nop pop xchg (bad) imul imul (bad) out sahf test in (bad) (bad) pop sub roll and movslq test sbb jl (bad) icebp pushq outsl in sbb fs popfq sub mov repz push mov (bad) cmp stos add (bad) insl or jns imul (bad) adc sub stos in jo cltd adc (bad) (bad) test sbb push sbb fwait sub xor incb or mov xor addl xchg (bad) in fwait movabs (bad) stc lock pop pop fwait cmp mulb sub mov fwait rex.WR leaveq rex.WX xlat fwait xchg retq loop shl (bad) (bad) fwait (bad) sbb jl (bad) rex.RXB movabs xor xchg fcoml mov ss lods fwait add pop gs int3 or pushq mov cmp mov rex.B fiaddl add mov movsl rex.XB sbb (bad) es or sub mov jo (bad) add jno decl rex.WRX fwait add fiaddl (bad) and (bad) jno fildl add stos fisubr sahf adc sbb imul ficomp (bad) sbb lods push push sti repz imul and movslq sbb cltd mov outsl or add fsubs repz (bad) repz and (bad) fs rex.RB fwait add cmp fwait jg lea outsl clc mov scas mov rex.WXB mov iret rol movsl cmovge fwait (bad) out ja rex.B sbb rex.WRXB mov pop xchg add jrcxz or loope add loope sub cmp lret mov or adc (bad) mov rex.W fwait in mov stos clc retq mov (bad) fs cmpsb sub (bad) mov pop (bad) (bad) mov push (bad) fwait add mov in cwtl mov mov mov xchg xor out and xchg push cmp fcmovnu cltd mov or cmp pop fwait push ficom xchg je mov mov (bad) (bad) cmp retq (bad) loope cmp or and jb hlt cmp sbb add add rex.WX sbb mov repnz pop sbb add sbb jnp xchg mov mov (bad) fwait pop xchg jno fldenv jmp notl push je add cmp (bad) ss xchg fwait mov (bad) jle callq pop and (bad) and jb sarb movsb jmp cmp cltd lods mov xlat rex.WRX fwait rorb sbb cltd subl cmp fwait sub or cli mov sbb fmull mov (bad) sbb xchg stc adc sbb enterq fiadd fwait (bad) xor mov rex.XB stos callq xchg fwait cmp mov fwait sub ds scas pop add sti cmp push cmpsl fwait or (bad) callq es jp sbb push (bad) rex.WRB fwait nop in in stos add in loope fwait push callq jae adc push add stos sbb retq fadd gs xor (bad) outsl movslq mov mov or sbb add leaveq fiaddl repnz test loopne int3 push rex.WRB rex.R mov imul stos cwtl fildll mov (bad) pushq (bad) rex.RX clc xor xor jg rex.WB cltd cwtl insl jrcxz and mov cltd (bad) mov xchg rex.WB jb leaveq cmp stc jl (bad) sbb xchg out add enterq mov pop rex.R out push xchg cwtl push stos mov movsl sti mov jp mov insl out (bad) sbb test movabs in (bad) movabs or xchg rex.WRB (bad) mov add rex.R or movabs (bad) cltd jne rex.WB addr32 mov jmpq insb rcrb rex.RX (bad) jl add flds xchg add insb in pop and add sbb sub jo int mov mov (bad) mov cmp iret insl jne fstpt addr32 push mov retq and scas negl data16 cmp (bad) scas cwtl (bad) (bad) xchg mov mulb sahf (bad) movsb fcmovnbe imul jge pushq pop push neg fs (bad) (bad) xor (bad) insb mov adc mov js mov (bad) cmpsl movabs cs adc xchg or movabs movabs pushfq or (bad) xor mov popfq notl (bad) (bad) and rex.W rex.XB push (bad) (bad) stos (bad) fidivl xorl cs (bad) push stos (bad) (bad) repz (bad) movabs cmp push stos sub loope (bad) (bad) lret sbb adc (bad) in mov mov fwait retq mov xchg (bad) xchg cmp mov movabs pushq sbb mov addr32 jl and rex.X add addr32 fwait es rep imul rex.WRX fwait lea or push sbb mov loop in xor outsl mov xor fs rex.WXB jl ja pop add sbb repz stc fild xor mov fwait jnp push lret mov mov imul cmp fwait sahf sbb movsb sub lods mov xchg mov or push xor rex.RB rex.WRX rex.WX fwait scas xchg (bad) jno mov movabs cmp ficomp pushq add sub int3 cwtl (bad) fadd stos lret xor cwtl rex.WRXB rex.RB sbb sahf mov mov xchg add lods (bad) mov repz (bad) sti xorl fwait xor mov sbb (bad) (bad) (bad) xchg sbb or (bad) jbe jrcxz ja scas add (bad) xor or lret rex.RX rex.RXB fwait push cmp (bad) fwait std in (bad) ficom je sbb and rex.WR rex.XB adc (bad) cs out sbb (bad) xor orl sbb in jl fstp jmpq sbb pushq or and sahf sbb cli (bad) fwait je add (bad) ss sbb sbb adc cmp (bad) lock mov sbb sbb jb xchg mov (bad) (bad) xchg (bad) add (bad) scas jle fbld sahf rex.X in or or fcomps sti movabs cmp fcompl cmpsb lock jnp hlt pop and rex.XB (bad) (bad) fwait shlb xchg movabs cmpb sahf xchg out (bad) movabs jmp xchg (bad) adc movabs (bad) rex.RX jb (bad) pushq xor pop int3 (bad) or adc cli pop or sub push fldpi fwait hlt push mov xlat adc jns rcrl (bad) xchg mov mov flds and out adc popfq (bad) jae in or sub add pop fwait (bad) mov data16 xchg pop and (bad) pop jbe xor (bad) sbb (bad) mov out fsub clc (bad) fwait add adc sub (bad) popfw movabs callq xor jl sbb lahf add addl int3 (bad) mov jmpq imul ljmp add je xchg pop (bad) sbb cmp cmpb rex.WXB (bad) pop sbb jp pop jg cmc mov sbb sbb mov pushfq hlt shl and (bad) add cmp enterq xchg gs std or stc enterq mov mov sbb mov (bad) mov rex.R jae push gs (bad) pushq jno (bad) mov out add movsb add loopne out xchg (bad) scas rex.W rex.RXB or (bad) data16 mov cmp sub xchg (bad) fnsave xor (bad) es or jo pop (bad) cmp sub adc insb divb pop sti sbb xor rex.WRX fsubl pop jae jo cmp in mov in cmp xor lock or cmp incb sqrtps movsl add (bad) imul ds lods int mov rex.WX imul mov (bad) out rex.WRXB es (bad) movabs sbb stos sti (bad) lret jnp mov test xchg js cmp xor sbb sub rcl (bad) adc pop jle gs rex.XB mov (bad) (bad) or popfq loope (bad) jle cltd push (bad) xchg lahf gs nop (bad) lret pop lss sbb pushq rex.WRXB js push cmp (bad) mov jmp push xchg out fstl pop lret movabs (bad) sbb (bad) mov repz hlt cltd popfq add (bad) mov push fwait add scas shlb xchg je rex.XB mov mov lock push mov mov cwtl mov in xor popfq jo mov jns adc and cmpsb in and (bad) in (bad) jg out (bad) lahf xchg mov push (bad) sub lock add (bad) loope rex.WRXB rex.WB (bad) fildl popfq mov cltd (bad) rex.WXB rex.RX cltd js (bad) or add jmpq sbb (bad) loopne cltd push xor pop (bad) ds rorb adc adc rex.WR or adc sbb mov xchg pop (bad) fstpt jl sbb (bad) outsl enterq xlat (bad) pushq cmp out (bad) (bad) insl addr32 (bad) lods nop (bad) jmp and cmp (bad) movabs rex.RX rex.XB (bad) mov rex.WXB jnp add xor or pop (bad) (bad) or rex.X sub enterq sub mov rex.WXB popfq (bad) xor shlb fs fstl pop (bad) push sbb ja mov pop pop (bad) lret (bad) imul fisub xor ja (bad) xor jno push jle mov and lods (bad) ss imul pop cwtl mov shr sbb and cwtl jle addr32 (bad) int3 xchg sbb mov flds or and mov movabs (bad) pushq pushfq cs push xchg frstor xchg fcomi sahf js adc scas orl mov fucom sub in or out cmpsb rex.XB popq jmpq popfq enterq in mov mov adc mov (bad) outsl insb fstps cmpsl sbb add (bad) out sub mov jg add pop xor jge rex.WRB sbb or sub pop jae addr32 lret insl jb mov (bad) rex.R (bad) pushq popfq mov sbb adc push fs (bad) xor out mov fldt in sahf fwait xor (bad) xchg mov cmp rex.WXB fwait (bad) adc rex.WRXB rex.WRX adc popfq rcll cmpsb imul fptan fwait xchg std jg test int fwait test rcrl mov lods xor (bad) or pop fimull (bad) rex.WR rex.WR gs int pushfq popq in rex.RXB jrcxz (bad) pop xchg ss (bad) lods sbb push (bad) jrcxz mov xor jno ja (bad) fcoml (bad) (bad) mov stos movabs (bad) and sbb mov (bad) (bad) rex.WR negl add (bad) test jl fwait and (bad) add sbb and callq rex.RB in xchg sbb (bad) outsb (bad) out sti add sbb add movsb in cmp rex.XB (bad) jl (bad) sub jmp mov (bad) mov or test jmpq fwait jge js std (bad) adc fwait xorl nop sbb sbbb cmp retq rex.WX fistpl scas (bad) (bad) rcrb mov repnz mov in mov sbb pop lahf or mov adc xor repz jne out lahf (bad) loop fwait popfq add and xor fwait int mov fcompl bt or ss sub rex.WXB xchg enterq notb adc fwait xor mov rex (bad) cmpsb cmp int repz jb (bad) in imul jnp adc jrcxz (bad) lods (bad) pop fwait outsb rex.WRXB ss pop int3 es in sbbl in sti (bad) push rex.WRXB (bad) sub mov insl cmc sbb fmull rex.RXB add add pop adc sbb mov dec fisubl fwait and sbb jbe add fsubr movsl rex.XB fwait add sbb (bad) fwait test mov pop fwait (bad) jne and sbb push jb in sub cmp mov adc fcmovnb rex.RX (bad) xchg jg fwait (bad) out jns mov adc sub sbb (bad) push data16 outsb ror scas sbb fwait (bad) xchg js (bad) lods (bad) insl iret or mov fwait test push (bad) std (bad) fwait insb rcrl rex.WXB jns sbb movslq lret cmc insl fldenv hlt sub fwait jge or mov test movsl (bad) shlb (bad) sbb sbb adc push stos retq insl scas shrl fwait pop movabs rex.WB xchg cwtl int fwait and outsl cmp fwait mov out pushfq xchg xchg lahf xchg (bad) (bad) sti cmc (bad) cmpsb (bad) nop test (bad) adc ficomp cwtl scas and rex.WRX fwait cmp testl rex.W or jno nop cmp sbb movsb xor or sti (bad) sub rex.WRB scas (bad) xor jge cld mov (bad) (bad) mov xchg sub jnp xlat rex.WRX mov rex.WB rex.RX out push sti mov pushfq nop sbb (bad) mov xor jg xchg cmp (bad) push fs retq callq jg xor cs jo (bad) pop xor (bad) mov adc pop adc xchg out shrl jmpq mov sbb (bad) push mulb movsl (bad) lods xor insl ficompl (bad) (bad) sti or xchg push fist push out add (bad) mov fsts (bad) sbb jb or rex.WB (bad) sbb xchg mov loop rex.WRX jl test outsl mov callq jl mull mov add out or sbb xor es cmp shl adc (bad) insw sbb hlt gs rex.WB callq pop push sub jae (bad) (bad) callq in (bad) pop lock jae xchg rex.B ja insb add jge out xchg xchg (bad) (bad) mov (bad) (bad) cmpl xor fisttpl xchg cli out (bad) repz fadds pushfq (bad) (bad) sub loopne sti xor stos sbb xor (bad) or jg mov pop rex (bad) xlat ffreep out lea rcrl (bad) ja xor fwait or cld sbb test mov and xor xor jne stos mov xlat (bad) lret fwait rcl jne push xchg ds fwait gs or (bad) std cltd sbb sub sbb rorl sbb insb movsb jbe pop cwtl std (bad) iret movabs sti rex.W (bad) pop jrcxz rex.WXB fwait iret (bad) mov repz rex.RXB (bad) adc fwait or sarl leaveq sub movabs or push mov out sbb pop fisttpl mov or loope fwait enterq nop pushq add repnz bndldx rex.W rex.R lock mov mov sbb push pushfq and mov adc (bad) (bad) cmp out pop sbb (bad) movabs iret (bad) (bad) ficomp jl mov loop rex.R lret scas cltd rex.WR int enterq pop rex.WX cmc fsubrs out push mov (bad) sbb xchg or (bad) fcmovnb leaveq cli and fdivl movabs fsubs rex.WXB addl mov fwait test rex.WRXB sbb mov (bad) stos movslq jns,pt (bad) rex.XB push lret (bad) add sbb nop rex.RXB mull jmp or rex.WXB fwait cmp rex.WRXB fwait xor rex.WRX lret test fisub icebp sbb rex.WRB fucomp cmpsl movabs (bad) fwait rex.RB cmp idivb imul pushfq fstpt movabs adcb or loop lods lahf or popfq fcmovne movabs pop (bad) or (bad) mov xchg notb fistp pop push fistp jb jl (bad) pop test loopne or js jbe push movabs fdivl out fistpl jbe rex.WRX add rcl fistpl jne and or outsl cmpsb data16 jl mov (bad) push in jo leaveq mov (bad) adc pop pushq fsubr mov (bad) out push cmpsb test jmp out fwait add outsl xchg rex.RXB sub rex.WRXB fwait sub in jmpq mov pushq mov xchg cmp pushq in (bad) fwait mov popfq sub int3 fwait sarl in rex.WXB nop sub rex.WR addr32 fwait cmpsl push mov retq imul rex.WB cmp (bad) stos std or xor xor ss test (bad) sbb mulb cltd rcl adc or and xlat (bad) jmp sbb sti (bad) (bad) in retq rex.WB fwait repnz mov out pop iret lea sub retq out pause and loopne xchg mov jmp (bad) icebp stos mov push mov (bad) push fwait lret fiadd popfq rex.B add scas pushq icebp je stos fwait add (bad) (bad) sub mov sbb (bad) ss enterq mov add repnz popfq mov pop fwait mov jno (bad) (bad) rex.R cmp cwtl sub xchg nop lahf movabs fwait push pop stc scas (bad) fxch insl adc lret and jrcxz movslq lahf hlt pop (bad) fwait stos rorl adc jmpq (bad) push fst rex.RXB scas sbb and xchg movsl repnz push cmp pop mov std loopne adc jge mov rorl lods movslq pop fildll (bad) (bad) rex.WB movabs jbe je (bad) movsb subl movsl adc jrcxz push (bad) sub jle push rex.RX mov mov test movabs (bad) test fcompl push mov xor add out (bad) fwait (bad) fldt sub or insb fwait and jbe nop rclb mov stc stc retq fwait xchg xchg xlat jae lods lock out or fwait mov or xchg repnz xchg in pushfq fcomi int3 jbe shll divb (bad) (bad) pop lock std jno fwait incl mov movsb jmp out je adc rolb fcoms mov or fwait push cli insb xchg or rex.B es (bad) out mov fsts repnz xchg rex.WR (bad) pop sbb sti sub fistpl xor jl (bad) cltd cmpxchg outsb and pop fldt push add rex.R xchg xor sahf test test movabs jno adc movsl sti mov cli subl in (bad) popfq pushfq addr32 adc test sti xor cs (bad) (bad) or sub (bad) push fstpt movabs sub outsl jo fisttpl rcl mov xorl in or pushfq mov pop jmp movslq and rex pop mov cwtl sbbb sbb (bad) jnp sar cmp (bad) (bad) xchg mov roll test (bad) pop rex.W sbbl pop (bad) leaveq fwait stc cltd cmp xchg js pop fwait rex.WX xor scas pushfq loopne (bad) stos imull (bad) fldcw cmp fstl (bad) sbb rcl jbe (bad) (bad) mov xchg cmp pushq or mov nop mov (bad) pushfq mov imul (bad) andl movabs ja movabs sbb mov pushfq pushfq mov pop mov sbb sbb fisubrl js fist int3 rex.WB addr32 jne (bad) fs fwait cmp (bad) adc (bad) sbb sbb stos loop xchg sbb pop push xchg lret out xchg pop je addr32 rex.XB sbb (bad) mov rex.RX fidivrl cltd pop rex.WB fildll xchg retq lock clc fucomi and xchg add loop movslq loopne lods (bad) pop (bad) mov (bad) push xchg (bad) mov add stc pop outsl mov xchg sarl clc (bad) (bad) sub jno fcomp in rcr adc (bad) std rex.WRB (bad) loope cli sub push fwait adcb imul pop scas cmp int3 rex.WXB sbb pushfq rex.XB xchg adc lahf xchg xor pushfq (bad) sub (bad) hlt in callq fsubl or mov (bad) callq (bad) jmp cmpsl (bad) sbb (bad) jg mov jb addr32 in rex.X rex.WB (bad) mov fidivrl clc mov jmpq cmp out leaveq mov sbb sarl callq lret (bad) test mov (bad) and mov sbb jno loop xor sbb push xor lods xlat push and icebp sub fbld in cli pushq push repnz xor add lret je,pt lods mov rex.RX (bad) sub sbb or repz (bad) rex.WRB ja rex.WXB loopne mov sbb stos insb push pushfq in (bad) mov enterq ja adc imul xor mov rex.R xor rorl fwait rolb rex.XB fwait jmpq paddd fwait lock dec scas stc icebp rex.X fwait xor subl fildl mov fwait sub (bad) or adc xor sub movsb sbbl fwait rcl mov fcompl rex.WB (bad) ja mov retq sbb pushfq (bad) out clc mov fwait mov psadbw rex.RXB adc sbb iret mov jmp push enterq (bad) loopne popq sub add or push lock or adc mov or xchg pop imul and hlt xor push sbb iret lods cltd test or (bad) sbb lods sbb lret pop imul mov adc pop push cmp fwait loope icebp push data16 jbe sbb mov mov test push (bad) add mov out movabs mov rex.WX (bad) (bad) and retq sbb adc pop rex.R fwait jb (bad) fidivl out pop or mulb sub fwait movslq outsb fs fwait je jae (bad) scas xor (bad) fucomip adc int sub (bad) adc fwait jl sti leaveq hlt pushfq (bad) test xchg jge in push adc cmp fldt add sbb adc xchg sti (bad) loop pushfq es (bad) xchg mov movabs cld lea sbb (bad) rex.RX es rex.RB jbe pop movabs cmp xor fidiv outsl rex.XB mov test add push fwait sbb jno jo movsb sub pushq (bad) (bad) adc cltd rex.R sbb cs sub jo loopne fwait test pop xor sub lods cltd jl nop leaveq mov xor divw mov ds push pushq bsf jbe outsb jb cmp retq rex.X in loopne rex.B (bad) outsb lods mov ds jb push fwait insb xlat test (bad) imul fwait idivb (bad) mov stc (bad) (bad) js jg adc in fwait in movabs outsb jb rex.W or ds cmp movl std rex.WR rex.RB out lret fwait lea (bad) mov (bad) rex.WRXB imul imul add mov jnp fwait cmp (bad) xchg test xor insl rex.RX adc xor vcvtss2sd rex.WXB fwait int3 rex.R lret fwait insl pop or cltd ds fwait push jnp mov (bad) and xor retq mov sub stos (bad) add and fwait jb (bad) xor rex xor rex.RXB hlt (bad) jg mov pushq sbb mov (bad) cmp adc (bad) or or fildl imul (bad) ja rex.RX cli insl or fisttp (bad) jrcxz (bad) and sahf push push adc fwait (bad) cmpsl cld sbb outsb cmp sbb in (bad) repnz mov jmp (bad) adc fwait xchg mov cltd xor mov mov jbe movsl imul fwait cs movabs lret push sbb jmp cmpsl (bad) (bad) sub sbb jrcxz hlt jmp sahf jb jle pop (bad) movsl addr32 enterq fist loopne cld mov jmp stos rcrb or pop (bad) xchg stos rex.WXB or cmp stos push jge adc fwait or (bad) (bad) (bad) test cltd mov adc mov jb cmp pop gs stos xor cmpl (bad) fwait in enterq mov sbb mov cli adc cltd (bad) iret add fs pop sbb (bad) (bad) xchg rex.WX rex.XB fwait or mov (bad) jmp int icebp fwait lods xchg sahf push cmc (bad) xor in xchg callq adc pop (bad) cmp cli outsl cmp adc int3 jrcxz xchg mov jnp mov movslq (bad) jp lods mov lock cmp (bad) sahf frndint mov mov add int3 jns jl adc and jg rex.WRX add jge mov jmp xchg test pop cmp mov movabs test fldt idivl fwait mov and in mov pop jae sbb fildl (bad) loop movabs je (bad) or rex.WR mov cltd sbbl fwait push (bad) popfq adc (bad) mov jmpq fwait xchg std rex.X clc pushq add rex enterq fwait mov rex.WR (bad) cmp xor fildl lods xchg cmpsb mov pushfq (bad) jp test ffree mov stc (bad) ljmp sbb insb (bad) and sub adc and fwait enterq mov int (bad) jge pop lahf rex fwait xchg mov lret movabs movabs stc (bad) (bad) and adc imul push sbb jne (bad) mov mov sbb outsl test jg rex.RX (bad) cmpsl std sti rex.WXB fwait outsl fxch xor ss callq adc popfq in mov fwait idivl fwait cmp add rex.RXB jnp or jo (bad) and es sbb (bad) (bad) rex.WRB (bad) add int3 rex.XB fwait add xchg pop retq sti cli (bad) cmp adc pop outsl fwait icebp shl jle pop and je (bad) fs lods movabs mov sbb andb cs out je fucom sub rex.R pushq xchg xor sti movslq movabs sub xchg rex.WRB rex.WRXB cmp rex.W rex.W addr32 pop sbb (bad) jns mov imul lret fwait cltd or lods stc callq sbb xchg nop mov (bad) insb cwtl jrcxz nopl rex.RX popfq movabs lret and sarl jns fnstcw sbb clc and callq add (bad) mov imul rex.R cmp xlat adc sbb mov loop loop int mov jrcxz sbb insl push es xchg lock fldenv mov cmp pop mov movslq mov cmpsl rex.RXB (bad) in sbb adc in movabs movabs (bad) sbb sbb fild (bad) jle mov (bad) lahf xchg int (bad) or xchg (bad) push int3 int (bad) rex.WR loope cld movabs lahf ss or fucomip rex.WX rcrb stos outsb stos fucom repnz or add pushfq mov xor imul (bad) fwait jmp vprotb repnz test mov rex.RX (bad) fdivl mov mov push scas cwtl (bad) repz mov test insb mov stc mov and sbb mov stos xchg push callq outsl pushfq jns add retq sbb fwait adc lahf fs rcrb lret fwait sbb mov stc cltd mov stos data16 (bad) sahf rex.WXB fxch cmc fcompl cmp mov js mov movabs add xchg fimull xor or (bad) sti (bad) scas movabs pushw movabs push push or enterq subb icebp cltd test adc lock fisttpl adc add jns and and fwait insl mov rex.WRXB rex.XB es sahf push jns (bad) add fwait out movabs test add sahf mov scas add sti and loop fnsave in jle repnz rex.XB fidivrl mov xchg sti out or sti stos xor fwait insl retq jae xor add mov add (bad) (bad) lock xchg fcmovnb loop sbb stos sbb and fldl or pop movsb and fwait cmpsl shll cmp jae rex.B add (bad) data16 mov lods push fcomps (bad) mov or jbe test add (bad) cld fwait (bad) pop jrcxz fcoms sub rex.WRB mov add rex.R fwait loope rex.RXB fwait xor jae xor (bad) enterq rex.W sbb lret mov rex.WXB fwait mov outsl sbb (bad) movslq xchg retq movabs fstpl mov outsl sarb (bad) fwait adc jle in movslq pushfq sbb callq fwait orl (bad) fwait out cmp mov loope loop incq retq fildl (bad) int mov bnd push sbb (bad) mov sbb (bad) jbe (bad) gs or mov adc adc retq fwait cmp add popfq sbb data16 fsubrp imul xchg add (bad) rex.RX (bad) xchg pushq add sti sbb or (bad) rex.WRX rex.X fwait push mov mov fwait adc (bad) movl fwait (bad) or mov or jb (bad) adc out cmp addr32 roll and cmp pushfq add sbb mov push sbbl retq rex.WR fwait je pop sub shrl (bad) fwait lret fistpll rex.XB (bad) cmp cmp out stos popfq movsl sbbl adc (bad) rex.WRXB rex.XB rcrb add xchg (bad) in leaveq or mov mov loopne (bad) (bad) pushq (bad) mov jge pop cmpsl js mov add out fistl xlat cld xchg (bad) scas imull adc (bad) rex.X pop sarl (bad) sbb rex.RX movabs mov add js sbb mov cli (bad) jno pop (bad) push jmpq jnp adc jmpq cmp outsl pop test mov cmp add push loop adc mov rex.WR ds int3 rex.WX mov cltd push xchg jmpq fisttpll iret (bad) (bad) rorl and mov int in movlhps jo (bad) xor scas (bad) outsb xchg rex.WXB stos ss or (bad) mov mov jge push rex.RB pop fdiv (bad) rex.B (bad) pop jl js pop xchg mov rex.RX rex.XB sbb test jns mov xor rex.WRB movabs (bad) loop jl xchg ffreep scas pop in in adc sbb imul rex.X mov cmp push popfq (bad) sub mov jbe sbb add lock roll rex.WXB cmp mov rex.WXB cmpb sub pop or clc mov addl sbb mov fildl sahf fstpt rex.RXB cmpsl push test push push movabs repz adc jle test callq cli movabs sbb or out pop lret pop neg jae std pop (bad) cmp (bad) xchg cli (bad) loopne xor mov (bad) (bad) (bad) cmp adc and frstpm(287 rex.XB nop mov rex.WRB (bad) rex.WXB mov mov (bad) cmp rex.WRX mov (bad) pop xor (bad) mov xchg pushfq (bad) je (bad) xor movsl mov es int pop (bad) fs jrcxz jge retq (bad) sbb adc mov sbb int3 cltd mov and pop repz movabs xchg movabs pushq fldcw mov or ror in out xor sub rcrl (bad) and es fisubr (bad) jne lea pushq (bad) fistl pushq stos ficoml xchg mov rex.XB jl jae (bad) push movsl out fsts data16 sbb cwtl addl mov leaveq rex.XB fwait push adc fstps sbb in stos fcoml mulb mov sarl pop xchg imul leaveq (bad) (bad) movsb shrb stos (bad) xchg nop loop lret mov cmp jl (bad) xor int3 (bad) pushfq out pushq mul ds rex.RXB (bad) scas rex.B rex.RB in pop mov out pop fisub (bad) add rcl (bad) cltd scas sub lret (bad) lea out mov adc add (bad) pushq fildll in sbb jg cmp mov jne xor out imul ljmp lret pop add mov jl in mov pop (bad) (bad) in pop stos cmc (bad) mov cli or xor popfq callq jge mov push jg mov jns sbb fldcw or (bad) (bad) (bad) jmpq mov ds cmp cwtl adc jo fadd mov mov sbb (bad) adc or xor out mov push fnop stos movsb (bad) (bad) (bad) mov or scas mov lea insl retq (bad) pushq xchg sub (bad) loop std je rex.WX rex.B rex.RX mov mov (bad) cltd sbb divb scas popq mov push (bad) or clc jo pop (bad) movabs rex.WX gs (bad) mov pushfq popfq es jp mov sub sbb jrcxz movabs (bad) (bad) xchg ficomp sub ror in (bad) sbb (bad) pop rex.WR mov mov pushfq repnz jge jmpq fwait xor jle fwait (bad) mov pop push xor add rex.B gs fwait cmp mov (bad) add adc fcomi jns xor xor mov retq fwait adc setl (bad) fldl2e jmp add out xor mov loopne sbb (bad) (bad) and rex (bad) retq enterq sub jb mov movsl mov sti movabs cltd dec cmp adc cmp movsl add rex.W cmp and callq mov cmpsb (bad) hlt hlt cmp add fwait (bad) fildll fwait xor int3 in sbb out jmpq or js ja out fwait (bad) cmp std add xchg sbb adc mov adc sbb rolb fisubl jne (bad) add addl rex.WB fcomi rcrb fwait movsb imul scas cmp (bad) and es iret ficoml sbb int (bad) jo test push fwait mov lods cmp rcrl add sbb sub ss add fwait movsl (bad) sbb pop callq fwait (bad) icebp cli je idivl fwait adc (bad) (bad) cs movabs mov add jns lret pop flds rex.WR rcl repnz imul insl callq test loopne ss fild fwait jae mov in cwtl fwait mov mov outsl adc or mov fsubl cmp stos jle in cs jl sbb xchg fxch cltd add std (bad) pushfq popfq adc xlat rex.WXB jl sub fwait shrb callq sbb sub push mov data16 xchg add jg rex.WR cli loope (bad) out xlat and movabs rcrl popfq cmp (bad) movslq (bad) push fcompl imul (bad) vcvtsi2ss cld movabs (bad) or fistpll or (bad) data16 cli mov mov (bad) (bad) rex.RXB mov lods cld xchg xor insl pop fnstsw sahf jae xchg movabs div in rcrl mov or movsb mov repnz (bad) leaveq callq pop xchg (bad) rex.WRXB jae (bad) rex.WXB xchg in psllw mov lret (bad) mov lahf js lods mov rex.B mov fnstenv (bad) mov rex.RB rex.WR rex.X push gs cmp (bad) andl (bad) add mov (bad) (bad) jae in mov pop (bad) fnstcw lcall cltd popfq mov rex.X push (bad) lahf pop (bad) add scas adc stos gs fsts addr32 (bad) cwtl sbb or adc insb or or (bad) mov xor (bad) push rcl xchg js rex.WXB rex.RB lods rex.WB sbb push stos xchg mov push cmp mov xlat rex.R lods adc xor loop (bad) out imull or adc movsb xlat xchg lret add jg addl jp outsl fistl mov pop mov lock and sbb (bad) xor xchg adc cmp mov out adc mov ss inc retq (bad) mov movabs pop and sbb movabs mov sbb jb je mov xchg ljmp pop in jrcxz ds gs or jle cmpsb jo xor scas (bad) xlat sbb stos negb xchg test callq rex.RX rex.RB xor popfq sbb pop xchg gs push adc lahf rex.WRX rex.WXB lods mov movsb pop scas (bad) repz leaveq (bad) sbb (bad) std (bad) movabs enterq jne or jns rex.X rex.WB pop sub sbb lahf (bad) and fwait andl jns (bad) sti fwait (bad) mov stos rex.X cltd es stc mov in (bad) push pop lock jmpq sbb xchg lret xchg mov jrcxz mov cs and and add loop (bad) ja adc lret fstps or subl xor fildll mov sub mov fwait test xchg fwait jae pop rex.WB adc icebp cs mov push nop lret add test jmp jl imul fcmovnbe rex.X push (bad) (bad) cmp cmp stos rex.B fwait add js shrb jnp sbb repnz movslq fisttpl cmpsl jl or xlat pushfq xchg push movsb scas jle jmp or xchg shll scas (bad) rex.WR mov fwait cld mov movsl adc rex.WXB mov in fwait sub xlat push std callq icebp mov jno xchg out cwtl add gs stos rorl js (bad) fstps rex.WXB cmpl (bad) fwait (bad) enterq retq out fwait scas and push sbb rex.RB repnz cmpsb adc sti movsb jp retq xchg mov (bad) push fistp mov mov int3 jb outsb cmp retq mov push xor mov lret repz addl jrcxz hlt lahf and retq (bad) test jns xchg (bad) or or push jb sub (bad) xchg repz loopne fldt repnz pushq adc xor (bad) pop rex add hlt (bad) out loope ja adc push jmpq gs or fist loope push ss frstor stos rex.WXB repz faddl scas jae sbb scas cmpb mov add (bad) jno (bad) (bad) xor rex.RX adcl (bad) popfq mov callq mulb and or rex.R retq (bad) rex.WXB sub fistp mov xchg fwait and ja add pushq fwait mov jnp jo pop fwait mov xchg stc pop fwait (bad) cmp push or push int fwait scas movabs (bad) or cmp push movsb add add (bad) mov add fucomi mov out fwait movabs cwtl xchg imul add (bad) mov sbb xchg clc fneni(8087 sahf xchg rex.X mov mov rex.RB rex.WB xorb pop out movabs fwait leaveq xchg rex.X callq mov rex.RB fwait sbb add mov imul xchg pushq scas fwait insl adc jp out repz (bad) (bad) pop shr xlat (bad) (bad) int cmp push pushq insl sti lret mov fwait jle cwtl pushq sbb faddl (bad) add jae movsb rex.RB jle faddp or adc sahf cltd mov rex.X rex.WRB rex.W (bad) sbb movabs (bad) es mov mov jb,pn xchg or sub mov int3 mov movabs or (bad) mov jmpq sub cs pushfq jp xor push movsl sbb mov sbb jno pop add or (bad) xchg sahf jo outsl loop (bad) mov je xor rex.RX out pop stos sbb lods clc xchg fwait mov sbb xor (bad) pop ds leaveq and pushq or fwait sbb cmp sbb xor mov fwait std lods imul lahf repz (bad) sbb rex.B push xor rolb xchg loope xchg pop jg movabs or fcoml (bad) lods xchg (bad) pop mov add mov or adc pop lret or sbb or rex.WRX pushfq out push iret stos add (bad) sub add lahf nop jg decb pop fs lahf adc sbb (bad) xchg (bad) jge mov or or popfq cmp repz fsubl int xchg popfq cltd (bad) pushfq adc xchg subl test popfq (bad) pop rcrl pushfq mov (bad) clc adc rex loope mov jl cmp rex.B insl scas sbb (bad) adc insl lods retq imul cvtpi2ps (bad) in sub add mov xor sahf int sbb out sbb out jg adc jle js rex.WR insl rex.WRX cmpsb movabs mov sbb xchg mov fwait mov callq mov cli add (bad) mov out punpckhwd jmp int3 repz rex.X fwait (bad) cmp roll cmpsl cmp in xor sub (bad) lahf rcr shrl lea rex.WRXB jb imull and stos push mov mov add fwait (bad) adc cmp lret jmp mov cmp (bad) jno jbe mov push fisttpl xchg sub (bad) xchg push sbb fwait ja cmp or push and fcomps stc (bad) fnsave loop rex.WRX repz (bad) xor jrcxz mov in andb push (bad) xchg cmp jle imul jg iret movslq xchg xchg movsb jle xchg mov popfq sti pop stc xor (bad) mov imul ja sbb pop (bad) (bad) rex.RB test fnsave jno movabs movl sbb mov in mov fwait and fwait int3 sbb repz (bad) rex.WB fwait iret gs in mov lods rex.WR mov (bad) adc mov pushfq rex.RB (bad) addr32 fwait (bad) push mov mov clc movabs mov lret rex.WXB movabs pop jbe rex.X cs test fwait mov mov or movsb fwait es stc scas xchg cmp sahf sub fnstcw (bad) fwait mov (bad) cli (bad) fwait int fldt fwait sbb lods cmpsb pop jmpq in pop rex.WXB and nop in outsb movabs sub pushfq incl (bad) movsl shll sti movabs stos fwait (bad) stc cmovle rex.RXB sbb js out (bad) imul out in fwait sbb fisubrl (bad) sbb rex.RB xor jmpq mov cmc adc sbb pushq add movsl jmp outsb push fcmovnbe fidivr shl fwait leaveq mov shll movsl bt fbld addr32 mov xor rex.WRXB mov fwait mov mov fildll mov (bad) or fstps (bad) mov adc push iret sti and adc jp lret pop and sti imulb xchg out hlt (bad) loope out sub scas jno fildl pop or sbb fwait stos mov subb add rex.RXB rex.WXB or iret mov fwait cld mov jne sub ja jg jno xchg sbb lock add xchg or cmp in xchg cwtl loope fistpll movslq jrcxz retq imul lcall hlt es loopne push fistpll rex.XB rex.RX rex.WX mov jrcxz pop mov fwait out pop cld add or movabs mov xlat pop push mov iret sbb (bad) (bad) xor (bad) jne sub sbb nop jl (bad) loop movabs push jg mov notl xchg out fwait xor add roll rex.RB fwait xor push insb rex.WX iret cmp test movabs shr enterq (bad) mov cs pop add fisttpl rex.XB fwait xchg mov add sub add (bad) xor (bad) lret loopne xchg (bad) add (bad) rex.R (bad) cmpsl ficom out (bad) stos (bad) cmp (bad) mov (bad) cmp and pushfq out (bad) pop fwait sub cmp adcl roll jbe outsl pop sti (bad) rex.WB leaveq (bad) fwait or nop and and fcmovnb (bad) andl jge movl fcoms rcll sbb (bad) movabs (bad) pop test sub loop jge fwait sbb add jmp loopne sbb int3 xchg mov (bad) push idivb push (bad) (bad) int3 clc (bad) sti sbb faddl imull xor rex.WRXB in push adcl (bad) mov fstpl cmpsl cmpsb xlat mov pushq (bad) (bad) mov movsb jle mov pushq fcmovnbe rex.B xor cwtl loopne add or out movabs or pop pop cltd (bad) jmpq sbb xchg loop movabs stos lret fwait push fiaddl sbb lods jle jnp int3 negb (bad) sti jno rex adc (bad) sub xchg rex.X je mov adc xchg jne rex.WRX rex.XB adc mov int pushfq push jge scas rex.B fbld mov test xor sub sti fcoml xchg sbb pushfq sub jo lods push lret jo lock xor add (bad) xchg (bad) test (bad) and shrb (bad) add xchg (bad) outsb nop pop add (bad) (bad) (bad) out lods (bad) mov rcrb add jnp mov mov mov pop (bad) div loope and (bad) jle jbe sbb (bad) or out rex.WB bnd jae and jae roll rex.WRXB sahf cwtl and xlat cmp or add stos jmpq imul insb add rex.X jrcxz lods lret in jnp orl subl jl sbb ja hlt (bad) mov int3 adc xor fwait je xchg sub scas rex.WRB (bad) loop mov hlt fwait and and fistpl pop imul fwait mov or (bad) cmc (bad) out add push retq in xor cs (bad) xor gs (bad) (bad) movabs cs lret pop stos callq enterq xchg fwait add inc and out adc jrcxz iret icebp fidiv test sbb imul callq xlat loope fwait (bad) mov (bad) add sub fwait and or (bad) insl (bad) sbb shl cmp orl fwait pop out adc xchg dec je add sbb (bad) xchg (bad) int3 es or sbb pop fiaddl mov mov sbb fwait xlat mov out stos rex.RX xchg loop scas (bad) mov jne lret (bad) sub push (bad) xor retq mov xor fwait (bad) xchg (bad) ja xchg int fwait rex.W (bad) mov rex.R ss rex.WRX sti xlat rex.WRXB lods fwait mov cmp int3 or lea xchg lods sub fwait (bad) divl jge rorb fwait movabs mov movabs xchg pop out and xor movabs fsts (bad) rex.WRX out xchg rex.WRXB (bad) mov adc (bad) jmp addr32 cmp (bad) clc add sub addl in add sbb or fisttp rolb sbb mov or xchg callq flds sbb outsl rex.RB adc pop adc enterq sub adc out add mov jnp mov popfq cs test cs cwtl out rex.X jg pop repz rex.WXB jne subl (bad) pop xchg cmc jle retq test addr32 push pop cmpl pop mov jb xor callq (bad) xchg sbb (bad) xchg repz or jne push xchg fistp mov rex.RXB rex.WR adc adc jns iret xor test sbb jno add jnp (bad) rex.WXB xor lods sti xchg and jb andl xor test (bad) stos xchg lret in retq sti movabs (bad) mov (bad) xor rex.X pop fwait scas out push jno pushq rex.R in jo (bad) fwait (bad) sbbb sarl movslq pop (bad) adc sbb cltd in mov cli xor cmp pop add fldl movsl icebp cmp (bad) stc (bad) addl xchg (bad) pop and fwait sbb mov scas (bad) xlat (bad) fs sbb loope push mov scas add rex.RX vhaddpd pop pushq add xor loopne lods repnz fwait (bad) add jmp movabs imul push xchg rex.RX add int rex.XB mov mov jns (bad) fwait ja in vandnps fwait push es (bad) add je outsl add loope fwait in jno lahf (bad) jmpq push xor test test ss sub cmpsb cmp ficompl lock or adc (bad) cmpb jl (bad) (bad) sbb lret (bad) rex.R mov sbb repnz jno adc int (bad) lock rex.XB (bad) cmp rex.WX push packuswb stos out (bad) push rex.XB pop xor jle movabs rex.WRX ds sbb test mov mov mov add cli int jrcxz int3 add add cwtl mov (bad) stos xor sarl adc sarl test cwtl (bad) je retq lea xchg xchg (bad) pop jb ds (bad) mov sbb loope sar push imul (bad) outsb rex.WRB pop movsl insb and cli mov add loopne sub (bad) andl mov add sbb mov rolb add cli mov cwtl (bad) (bad) iret (bad) xor and jrcxz add js (bad) mov push ficompl jmpq xchg int push jb (bad) rex.RXB popfq hlt (bad) mov (bad) or jno addr32 cld cmpsl mov cmp sub or mov mov cmpsl xchg js mov movsl je mov rex.WRX popq (bad) mov (bad) adc popfq pop pop jno sarl scas enterq rex.RX rex.RB movabs lea subl in rex.RB mov out and pop (bad) xchg addr32 fiaddl (bad) xchg add rex.WXB pop xchg and pushfq popfq mov insb mov pushq lock movsb sub repnz xchg sahf ds (bad) cs jp and loopne out lret mov adc sub shl jg jne int loope in push mov movabs rex.RXB int3 push je pop cmp and insl adc ds (bad) sbb pop clc mov xchg and (bad) mov (bad) scas cmp pop (bad) cmp mull fistp repnz test repz (bad) mov in mov rex.WRXB ss xchg loopne (bad) out (bad) fnsave pop js pop jl cltd pushq (bad) xchg mov fcom adc int rex.RX rex.RB fwait vxorps add jrcxz fwait mov pop iret cmp movabs in loope adc xor imul adc mov movabs or (bad) fwait outsl rex.R rex.RXB (bad) out loop rex.RB fwait mov adc jne cmp rex.RX sti rol (bad) (bad) loop je (bad) cmp cmp and mov in (bad) imul sti add cld lea xchg mov adc out jmpq shlb ds (bad) push (bad) movabs addl fwait std stc jge lahf push shrl js test ficoml (bad) in fwait add iret in cld xor cmp icebp (bad) (bad) adc movabs pop out xlat nop fwait mov mov jp mov fwait pop outsb mov adc or mov rex.WRX pushfq movabs sbb jae js adc fs movslq sub test mov fwait cmp pop or mov (bad) scas andb fsubr callq fistpl xlat sbb movslq ficompl lret mov js fsubrs sub fwait lret sbb movabs adc repnz rcrl add jmpq push fwait pop out fcompl jne jno iret adc stos cmp xor or std mov lea imul fwait jbe or lock (bad) cltd and fwait jae,pt jnp rex.RX jge movabs and fsub fldt lahf sahf sub sub iret test sti (bad) (bad) xor adc cmp imul cltd int and mov mov cmp cmp mov (bad) jne imul sahf (bad) (bad) leaveq push out test fildl sub jle push and add mov sbb (bad) movslq fstpt out fwait mov mov gs shl hlt or jne xorb movsl add rex.W in lods fwait add rex.X fwait rex.WRX cltd or fs cmp sysret fistpl rorb addl jmp pop sti add rex.WRXB pushq (bad) fildl (bad) rex.WR rex.WXB mov lock jne and pop push scas (bad) mov mov insb fwait xor push lahf loopne fwait xor loopne and stc cmp enterq or sub cmp (bad) fwait outsb mov rex.WRX in pop (bad) loope jp test jno (bad) repz retq push stos mov (bad) fwait jge jb lret jno,pt fwait scas mov rex.RB fwait scas (bad) js popfq rex.RX jns cmp test fwait ja mov xor divl mov or mov adc xchg cltd lret xlat (bad) mov imul add (bad) (bad) fwait int3 or (bad) retq fwait jo mov or data16 (bad) xor rex test rol rex.WX rex.RX xchg js (bad) jp add iret adc (bad) xchg jle lahf sbb (bad) xor add scas push pushq fwait push (bad) loope insb mov and rex.XB fs rcrl jrcxz mov shrb pushfq xchg cmpsb lea rex.WRX cmp fwait int (bad) (bad) cld out iret mov (bad) mov push fisttp test sub (bad) rex.WXB add push repz lods (bad) (bad) fwait or pushq rex.WX add cmp adc add fwait mov (bad) xchg (bad) add adc cld (bad) jmp repz add icebp (bad) rex.WR imul stos jmp (bad) fwait (bad) mov rex data16 scas mov mov rex.WR adc fistp (bad) fwait lods insl add repz (bad) pop mov cwtl xor (bad) cli and mov movslq shlb adc push pop cltd movabs mov fistpl ficom pushfq lea shrl xchg scas mov cwtl movabs test (bad) add (bad) test (bad) out lods es mov or fcoml lock adc cmp in ficompl push (bad) pushq fstl mov out (bad) push (bad) je loopne outsl sbb rex.XB outsl xchg movabs loope mov in (bad) mov (bad) clc insl sbb rex.RX in jrcxz in enterq sbb adc mov pop pushq pop jmp xchg gs mov lret movabs rorl outsl (bad) insb xchg (bad) in sbb or mov mov repz sbbl (bad) xchg xchg rex.X rex.WB (bad) (bad) (bad) mov fwait ss (bad) rex.WRX xlat ds (bad) sub lods lea out rex.WXB repz lods movabs sub rol fwait mov rex.RX push fwait imul sbb mov movabs jne mov adc sbb out cmp and pop (bad) push and rex.WRX clc imul retq mov xchg movslq adc xlat insb clc gs in xchg sbb jp fwait push mov or add adc and cmc mov cmp rex.WRB or xchg stc in fwait cld xor movsl int3 pop stos fwait pop lahf xor es repz (bad) stos stc or movabs data16 fwait add add xchg stc out rex.R add in xchg adc cmpsb bnd faddp fwait pushq xor or mov imul repnz je stos andl jns hlt sti jmpq (bad) inc movabs xor fwait repnz jmpq cmpsb push cmc sbb jg (bad) jge and fistpll sub fwait (bad) cmp pop test sbb jp out xor rex.WRB (bad) xchg xlat enterq adc mov fwait lock jg scas xchg add sbb rex.RXB sub fstpt callq and jb movabs test rex.W rcl loope enterq pop out fcmovne loop mov or add loop xor imul fisttpll rex.WB mov and (bad) movabs (bad) sbb js rex.R rex vmread lock pushq out rex.WR mov pop fdivp in or fwait or mov mov xor (bad) adc gs pop imul or cmpsb sbb (bad) (bad) pop push pop out xchg (bad) fwait outsb mov (bad) rex.WX or callq pop decb sti xor sbb push movabs xor xlat sbb (bad) outsl js (bad) mov cmp push rex.WRXB rex.RB iret push mov enterq mov jae xchg out (bad) cltd mov pop mov mov in movabs cld int3 (bad) fsubrl (bad) (bad) cmp in sbb sub out (bad) cmp mov nop in fcompl ror retq (bad) and (bad) or and movslq xor or sbb roll rex.W sbb rex.RX je pushq pop rex.XB rex.RXB loopne xchg je test (bad) xchg fsub out rex.RX xor mov outsl add jo xor out stos jl cmp mov sbb enterq xchg mov faddl (bad) lods and xlat xchg jb scas mov (bad) fst mov (bad) and callq rol cmp pop adc mov movabs test mov mov xchg xlat jrcxz retq jbe fnstcw cmpsb incl add mov rex.WRXB cmc sbb xlat sbb jl sahf rex.RXB cltd andl pushfq rex.RXB stos mov and stos mov sbb push mov test (bad) movsb cltd stos mov es (bad) rex.WRB (bad) loopne loope,pn jns jo repz mov sti lret cwtl stos mov ja hlt sub jnp push jno rex.W lods fwait jne loope cmp (bad) hlt xchg stos mov lsl js sti and xchg (bad) jl fstps scas mov imul ficomp js sbb test fwait out adc cld rex.RXB cmp sub popfq xchg push (bad) cmp pop (bad) xchg xor pop pop sub (bad) js mov jb (bad) movabs hlt jmpq pushfq movabs mov sub (bad) xor retq sub movabs repz mov (bad) sub stos xchg js insl outsb (bad) or and add cld repnz pushq rex.X push fwait addr32 sbb lret (bad) fwait mov int cwtl movslq mov (bad) mov fwait jge mov pop add fcmovnb clc test jae cld fwait in es stos movabs loop pop sbb cmp jg cmpsl add mov sub (bad) jmp rex mov loopne or and stos cmp (bad) mov adc sbb movsl popfq fwait es in add (bad) mov (bad) mov jnp jmpq cmpsl rex.RX rex.X stos fwait lods in or fwait (bad) add cmp (bad) roll out popfq mov movsb and and stc retq cmp test add ss insb jnp mov pop scas fcmovnu (bad) push fwait rex.WX (bad) jne sahf and lods movabs rex.WB repz cmc fwait sti lock loop pushq mov (bad) lret jle pushq mov (bad) add pushfq (bad) sbb incl roll out sbb adc mov cmp mov ficom xchg retq pushq xchg cltd (bad) movsb pop mov mov mov in rex.XB stos (bad) xchg sub sti ror rcrb cmpsl cmp add icebp loope popfq or rcrl pop adc and punpcklwd stos lahf retq std cmpsb sahf jp int3 rex.RB xchg mov nop imul mov xchg (bad) mov loope rex.WRX fldenv fwait (bad) rex.WRB xor ss iret (bad) xchg or iret or (bad) decl xchg jne jg fwait (bad) test rorl icebp xchg sub (bad) out cmc sbb mov (bad) add sti and adc scas sub lret jnp xchg jne cmp fstp or movabs gs (bad) adc movslq pop pop xor (bad) or mov movabs (bad) out mov fwait sahf mov pop (bad) lock xchg push (bad) in (bad) repnz xor sahf cmpsb sahf fsub in (bad) fwait or rex.WB rex.RX rex.XB sub (bad) mov sbb cmp fxch outsl mov cltd pop rex.B add sbb (bad) (bad) pushfq fwait loopne rex.WXB mov add jns xchg in jmp pushq mov jnp fwait add movabs retq xchg clc mov jrcxz pop loope add sbb fwait (bad) push movsb xor xor ja jle cmp push mov add rex.X in xchg stc push pop js and lock fsts add cmpl or shrl sahf jno xchg and fwait xchg or mov push sti mov nop adc fwait stc pop out rolb jae sbb movslq pop xchg jns fist xlat cli popfq push fwait mov test push enterq mov lock xchg cmp rex.RX leaveq sub fstl cmpsl jl ror rex.RB fwait (bad) xchg pop in (bad) push add je imul or std fwait jge pushfq rex.WRXB adc xchg mov cld cmc out pop adc stos mov jle fwait cmpsl (bad) in rcl add mov jp adc add (bad) sub (bad) std movabs fsts mov and rex retq out xchg outsb pushfq sbb mov fcomip (bad) add sbb lahf mov xchg imul and xor cmp icebp setle add xchg lods jmp add fwait jae retq jg movabs sbb jbe mov (bad) (bad) xlat xor pop in lods fwait lods rex.WB scas mov add shr in insb (bad) rex.XB jb psubusb stos vaddpd fwait xchg test cli jae cmpsb or pop movsb or cltd outsb or sbb in (bad) (bad) rex.WRX stc nop (bad) fwait jnp rex.WB lock lretq sub or xchg jnp mov (bad) xchg leaveq (bad) or adc xor fisubr movabs (bad) mov fcmovnb pop mov fwait gs mov jge cmpsl cltd xchg sahf add add pushq sub push (bad) add or add sete mov (bad) scas jl jo and push int mov cmc adc add jno pushq (bad) movsb (bad) pushfq sub mov mov orl repz (bad) jnp mov in sbbb push sbb mov lods fbld pushfq jmp hlt lahf cmp sbb sbbl and in (bad) (bad) callq adc xchg pushq mov mov sbb mov (bad) gs sbb adc (bad) jmpq (bad) xor test jb addr32 leaveq (bad) out movsl and mov xor outsl (bad) out sbb push loope mov sahf imul imul out rex.RX lock jae fsubs lea xor movabs int rex.WRX rex.WR (bad) (bad) pop mov es xchg retq sub (bad) jmpq gs icebp pop (bad) and (bad) decl jg (bad) pop (bad) in rex.X mov mov jo test fwait lret and pushq cmp fs push scas insl adc repnz jrcxz mov sbb pop sub es loop repz add in mov callq or fwait jrcxz jle (bad) pop fwait and and sub cmp sbb scas fwait mov (bad) rolb cmp jne mov rex.RXB rex.WR jl (bad) retq negl imul (bad) mov movabs mov sbb (bad) (bad) scas xlat adc movslq loop outsb fwait stc xor mov mov lret and fmul cwtl add rorl add fistl xchg sar icebp adc rex.WRXB movlps clc add pushq (bad) (bad) xor and in fwait sub popfq cmp (bad) je xchg pop mov fdivr iret lods mov xchg data16 fwait sbb xor rex.WRB loopne stos lock fcomps int in mov (bad) xchg scas cwtl repz (bad) mov sti push movslq jmpq fwait (bad) movabs ja rex.R fiadd loope fwait (bad) xchg add adc sbb sbbl gs jns repnz sarb outsb (bad) xchg fwait cld popfq xchg jle sar in (bad) (bad) loope and xor enterq std mov xchg and sub (bad) mov (bad) add retq stc cwtl fxtract sbb pop rex.RB movsb mov (bad) callq testl movabs mov rex.RB fidivrl sti jmpq adc jle add and (bad) jnp cmp rex.WRXB rex.WXB fwait sarl callq data16 test out or and sbb fwait pop (bad) es stos rex.WRXB faddp in movsl sub test rex.WRB jmpq add rex.RXB idivl (bad) loop jmpq jge jo or add retq nopl icebp jl or (bad) ss mov xchg fwait cmp outsb shlb lret cli jae jp cwtl decb fwait xchg xlat mov mov in fist and mov fwait sub rcrl test or push fisttp mov idivl leaveq jae movsb lods movsl mov (bad) (bad) sub xchg (bad) movsl setnp movsb in fwait (bad) ds cmp pushfq sbb pop (bad) je fildl fwait and popfq test cmp xor cmpsl rex.X fstpt iret movslq out int xchg rclb (bad) xchg mov rex.X sbb xchg (bad) jae mov (bad) mov mov add cmp (bad) (bad) scas rorb jnp xor fist or push testl cmp cltd out jbe and out loopne push mov rex.WX rex.RB cmc mov retq js rolb sbb mov xchg jne popfq xor mulb idivl jge stos mul out and mov or rex.WRX jp imul cmpsl push repz cmp or or jmp sbb (bad) add lods jbe rex.WRB rex.XB add repz adc jnp add jae add mov xchg rex.WRXB mov adc (bad) mov cmp mov (bad) movabs mov cltd push mov cmc jl cmp mov mov scas movabs pushfq imul (bad) xor adc callq or xor rex.RXB adc adc rex.X sbb imul callq rex.WX int3 adc and mov leaveq (bad) cmp jbe movabs div sbb and stos rex.R fwait sbb add xchg (bad) push movabs xchg fwait and pop cli lret add sahf jae sub xchg fbstp cmp push jmp fwait out (bad) in gs cmp nop rex.XB cmp stos or rex.RXB fwait movabs jmpq xor mov test popfq mov (bad) movabs fisubl imul jb (bad) mov sbb movsl (bad) sti pushq rex.RX mov popfq ss icebp movabs pop (bad) (bad) (bad) jo (bad) xchg fmul jp out (bad) jne rex.WX mov mov (bad) (bad) add sbb or xchg test movabs stc jne out mov fwait pop lock movabs andl add sub pop cmpsb and sub sub hlt rex.WRB lret int3 (bad) (bad) rex.WX fcompl mov jae addl movabs mov icebp cld xchg fsub jns pushq push (bad) addr32 and out insl mov (bad) repz lcall add fucomi push (bad) xor jp sbb lret (bad) lock rcrb fwait out rex.WX xchg jg pushq push fist xchg sub fwait mov (bad) pushq (bad) adc xor ja (bad) movabs pop rex.RXB (bad) callq (bad) int sti mov std ss sub and (bad) cmpsb jle add test mov lret fwait repz xchg fmuls out push fwait rex ja fwait cs hlt leaveq jg stos enterq sbb cmp (bad) lret lods sbb (bad) scas ja (bad) mov sbb imul fisttpl (bad) iret popfq or rcll jbe fwait pop (bad) sahf xchg rex.WRB cmc rex.RXB mov int sbb xor sub sbb sbb fsubr je and mov rex.W frstor sbb push roll loope rex callq popfq (bad) jne sub add mov (bad) es jmpq (bad) pushfq int enterq jmp addr32 (bad) mov in (bad) outsl hlt subl data16 faddl mov fwait (bad) sbb in (bad) adc out xchg xor pop or imul cmpsb outsb rex.WXB std callq jge or cmp cmc out sbb callq rex.WR nop xchg xchg xor loop sub jne retq (bad) cmp neg callq mov out sbb fwait jg loop repnz (bad) fwait mov (bad) (bad) and cli cmp jg test or ja adc add mov mov mov cs cmp mov (bad) pushq outsl (bad) hlt push rex.RX shr jrcxz (bad) cmp repnz add iret add cmp fwait mov (bad) xchg rex.WB fwait jg (bad) cmpl stc es fwait (bad) or jmpq fwait mov cmpl sbb jl mov mov mov add and icebp sub mov andl add (bad) rex.RXB rex.XB fwait fwait jbe mov xchg (bad) callq rex.WRXB cmpsb fcmovnbe jnp ss (bad) in clc xor sbb rex.WR mov xor or (bad) lret pop fbstp fwait cmpsb retq rex.WR rex.X (bad) popfq fildl lahf xchg jns xchg out rol cltd xor rex.RX rcll jge (bad) jbe insb iret pop sbb pushq (bad) sbb (bad) adc out lods enterq add and rex.W (bad) je lea (bad) jae rex fnop fwait push (bad) (bad) fsubl lock stos mov jns cld mov fwait sub negb fwait outsb rex.WRXB leaveq xor pop xchg jns (bad) out jge repnz (bad) fwait mov xor outsb movsb adc repz rex.WRB and lret cmpsl fwait rcr xchg (bad) mov add fwait test int ss mov cli xor fldcw push pop vhsubps push stos mov movabs rcll sahf cmp pushq rcrl rex.RB (bad) (bad) (bad) fwait in retq gs js (bad) (bad) punpcklbw (bad) add out callq cmp mov (bad) movabs or (bad) fwait (bad) add add lock es xor jae fwait outsl pushq rex.W rex.WX add sbb bnd loope rex.WR and rex.RXB int (bad) jno mulb (bad) lea add cwtl lock jb sbb sbb imull (bad) fwait push add std and pop in fwait mov add addl mov pushq adc rex.WRX fwait (bad) in xchg mov fwait sbb push lret (bad) fsubrs rex.WR (bad) (bad) (bad) xor sti (bad) push pop sbb popfq jb rex.W repz cmp pushfq mov out (bad) in loop (bad) nop testl (bad) push ss fisubrl mov mov and (bad) xor xlat pop nop mov shll clc mov add (bad) popfq (bad) addr32 scas clc inc mov rex.WB (bad) sti popfq push xor stos sub pushfq (bad) ljmp and (bad) test loopne xchg scas jmp test outsl xor (bad) nop mov cmp mov cmp jo xchg rex.X callq sbb hlt (bad) in sbb (bad) sub mul cwtl add (bad) jns movabs (bad) xchg cmpsl jg (bad) popfq rex.W pop jb mov sbb fisttpl out (bad) rex fistp scas jg (bad) xchg jle test jge lods cli (bad) pop jge stos rex.WR rex.WRB (bad) sub and fsubrs add xor retq rorb rex.R (bad) jl rex.XB lea flds (bad) push (bad) stos out adc cs ficomp pop push xchg sti retq andb fildl jmp xchg pushq scas adc testl cmp repnz or (bad) int3 jbe subl add lahf mov rex.WXB movsb jo (bad) pop rex.R cmpsb (bad) sbb (bad) (bad) sti sub mov xor mulb fnclex (bad) popfq movslq std (bad) (bad) pop (bad) xchg sti fwait jle add loopne addr32 fwait push jne rex.WRB adc rex.XB (bad) sbb (bad) (bad) xchg (bad) cmpsl stc sbb hlt out (bad) nop xchg fildl (bad) loope retq je data16 sub fsub or xchg add scas fwait imul ficomp notl mov mov adc fwait rex.WX scas ja test mov iret mov in rex.WRXB rex.R movsl fsubrl scas mov (bad) mov push mov lods in mov push retq out mov (bad) lock fcoml clc fisttpl adc outsl fwait lahf callq jge (bad) ss (bad) sbb stos cmp sub ja (bad) (bad) rex.WR rex.WXB movabs mov add out shl (bad) cli xchg fwait in repnz fild rex.WRX repnz loop popfq movsb rex.RB test cmp outsl rcl xchg (bad) add fwait addl popfq mov add lahf lret pop rcrl sub int cld cmpsl sbb rex.RXB (bad) in (bad) rex.RB fwait std push loop push je rex.WR fwait push fadds (bad) es jg jl insb mov push sti mov loopne outsl fistl sbb int hlt pop fs mov cmc jp (bad) pop fwait rex.WR fsubl retq adc push push fldt add jg pop in push popfq (bad) insb cmp pushfq iret push add jl rex.WRX (bad) xchg rol fucomip (bad) sahf add rex.RXB (bad) sbbb out cld mov adc retq fwait lret jnp (bad) sti lcall sub loop,pt movabs fwait and in jo negb sbbl popfq cmc cmp fwait or sub or mov rex.WRX fcompl cmp xor mov popfq loope (bad) rex.WXB loopne fwait rex.RXB and pop lret (bad) adc jrcxz pop fwait sarb lods push fwait pushfq sub and (bad) stos cmp xchg mov (bad) std fwait pushfq mov fwait gs add or (bad) xchg lcall mov cmp (bad) fstpl xchg (bad) mov sbb (bad) sbb out sbb (bad) xor mov ficompl pop lock rorb addb mov jo (bad) (bad) negl (bad) or jp sbb pop (bad) add push in cmp (bad) cmp lahf ds jne in rex (bad) cmp test add scas movabs sub (bad) (bad) out rex.WX xor (bad) jo (bad) imulb (bad) (bad) scas and (bad) (bad) add cmp xor rex.RXB pop xchg xchg (bad) push (bad) mov jns xor stc mov (bad) movabs jp (bad) jb (bad) sti cwtl sbb enterq movabs sub and outsb jl (bad) movslq rex.RXB ja and in test mov je retq fbstp cmove outsb ficom (bad) cmpsb (bad) test sbb loopne xor push popfq fucomi and (bad) repnz rex.B rex.XB fcoms (bad) mov mov add sbbl rex.WRX test popq fstpt xchg stc cmp (bad) shll cmp fcmovu jmpq mov xchg add xor cmp mov iret (bad) (bad) test or mov (bad) pop jns or test loopne or or add sbb (bad) es push fdivrs pushfq (bad) mov xchg lret out xchg rex.WB cmp lret test or loopne rex insl (bad) cmp (bad) (bad) in (bad) lret sub in (bad) xorl repz outsb in mov pop fsubrs adc xchg fwait (bad) mov fucomip adc rex.R int3 pop sbb movsl cli fisub sbb push add insl (bad) stc cmp rex rex rex.WXB outsb sbb mov (bad) mov and fwait out icebp fucompp xor repnz sub sub or sbb loope (bad) data16 sub rex (bad) sbb adc (bad) add (bad) xor in rclb mov out fwait sbb rex.W pop cmp fwait mov (bad) insb add or test pop adc adcl or movabs rex.WX sbb stos mov (bad) test adc sbb jp fild xor xor shl adc xchg cmpsb movabs gs imul sbb add sahf (bad) movabs fildl and (bad) and cmp mov in mov fistpll push jrcxz (bad) add out xor jae (bad) adc rex.WRX rex.W xchg adc rex.WX pop and in cmp ja and movabs (bad) pop lods cltd rex.WRX cmpsb rex.WRXB (bad) jmp xchg pop pop (bad) movabs nop stos fsubr cltd mov jg adc push cmp mov stc cmp sub jo movsl cmp adc push xorl mov lea fwait rex.WRB fucomp scas (bad) rex.WXB and sbb jae std sbb add loopne (bad) pop sub xor mov nop mov add adc push (bad) vzeroall pushq shrb and gs movsb pop fwait sti enterq cmp lret pushq (bad) in sbb out cmc movabs adc jnp (bad) sti (bad) gs fwait out mov mov insb or (bad) (bad) insl and fwait je xor push fwait imul js lea rex.XB fwait push in adc cmp lahf add cmp push sbb (bad) stos rex.WRXB sub scas sbbl (bad) ffreep mov push pop movabs stos cs mov fwait (bad) data16 pop addr32 jmpq mov xchg lods je repnz rex.WRX fwait (bad) (bad) cltd sbb (bad) or (bad) xor mov lahf mov cmp stc movabs add xchg xor xchg mov adc xchg fstpl sub lret leaveq xlat add sti add movabs adcl sbb divl jrcxz add jne movslq push adc (bad) subl pushfq fstpt int3 mov adcl test es (bad) cld mov retq sbb (bad) push (bad) sub (bad) fildl xchg mov (bad) (bad) push cmp cmpsl enterq xchg retq (bad) (bad) fistp add movabs or sbb mov cmpsb repz (bad) loop sbb xor imul and jg (bad) xlat lods fwait pop push rcrb push cmp or fwait xchg (bad) mov push loop xor cmp cmp jp mov push out (bad) fwait loope push shlb xor (bad) movabs rex.WRXB jmp fwait cld (bad) xchg rex sbb rex.WB mov pushq icebp xchg out cmp iret pushfq jnp adc es push loop rex.R cs (bad) sbb jg jo or enterq push sbb (bad) js push xchg sbb or fstpt (bad) sbbl sahf lahf nop (bad) mov or es push data16 enterq (bad) cmpl rcrl test rex.WXB js jmpq adc int3 add (bad) insb scas xchg loope (bad) (bad) jrcxz fwait cmp stos add iret enterq and (bad) sahf jnp xchg sub ds std fwait xor mov in (bad) enterq sti jl in fwait xchg add xchg sbb leaveq jb cmp fnop sub movabs xchg rex.WB fwait sub (bad) icebp (bad) pushfq xor imull mov xchg (bad) rex.WX cmp (bad) add xchg rol xchg popfq sbb stc fucomi cld mov mov (bad) test jno int fwait and (bad) movsl (bad) adc fwait adc mov orl sbb rex.RXB movsb mov jmp leaveq or int cmpsl pop mov jae (bad) stos (bad) fst (bad) retq outsl mov rex.WRXB fwait lret and sbb (bad) pop adc pop movabs (bad) (bad) jrcxz sbb (bad) xchg cmp movsb push mov xlat fwait and xchg sbb xchg test rcrb rex.X jrcxz movsl rex.WRXB mov rorb test xor add xchg (bad) xor or mov std rex.R xchg movabs jrcxz cli adc fnstcw (bad) lret adc fwait jle stos (bad) pushfq xchg (bad) mov retq fwait pop or movsb mov mov xchg jmpq sub repz or loop (bad) xchg add pop lods fwait cmp mov repz mov sub rex.W mov mov fldl rex.RXB mov pop lea lods (bad) je lods sti lahf and jrcxz sarl jae rex.B ds ja cltd fwait jg xchg (bad) cmpsl rex.RX (bad) mov sti mov push stos mov (bad) fwait sub test fwait bnd pop pushq sbb lahf loopne add cltd rex.RB add sub (bad) icebp movabs cltd jmpq icebp fwait xor adc (bad) mov (bad) or cwtl mov shll movsb (bad) (bad) pop lea xlat mov push and xor add out mov stos leaveq mov rclb retq add mov jnp fadd jne js cmp fwait lods in jns out add sbb loopne sub xchg or sub mov or add imul nop imul or cmpsb sub and (bad) cmp test movabs jmpq (bad) ss sub mov (bad) mov pop sahf fwait rex.RXB rex.RX stos push cmp push fwait rex.R je sbb jbe push loop mov rex.XB fwait (bad) ds (bad) (bad) sub fwait enterq add (bad) clc sbb or add int fwait rex.R sti addr32 (bad) fwait (bad) pop out xchg iret and in mov sbb push jmp or bnd movabs rex.RXB data16 fwait addr32 js fwait std or cld (bad) rex.WRB adc es or pop imul sub pushq sbb pop imul jae stos in cmp sbb insb (bad) and mov fistpl mov rcrl sub movabs rex.RB or jno push cmpsl jo xchg mov or (bad) cmc rex.WRXB mov xlat (bad) xchg movslq xchg mov scas out xor xor and (bad) mov pop rex.WRB sahf (bad) (bad) rex.WRX retq xor rex.WX jg jno (bad) rex.WX or pop movabs add sbb pop repz out insb jl pop fisttpl sahf mov pushq push xor rex.R sub in rex.RX imul imul hlt or mov cmc test movslq js (bad) mov jmp sti lea stos stos adc clc sub cmp push rex.RX rex.X jb (bad) sub xor mov cmp xchg (bad) sbb (bad) rex.WXB sbb cld mov movsb rex.WRB rex.WRB xor cmp mov (bad) pop mov push pop lock lea and ficoml hlt rex.X sbbq movabs adc rex.XB mov or (bad) cmp pop retq mov (bad) push mov std jns mov flds fistpl cmpsl jbe cmp lock movslq lret scas pushq (bad) mov xchg adc popfq push pop mov addr32 xor neg (bad) mov gs (bad) jle (bad) pop data16 mov and add sub out (bad) (bad) cld (bad) neg and clc rex.W rex.WRB mov jge rcrl pop rex.B fidiv mov jns adc ds fcompl (bad) jrcxz mov sub add outsb push adc loopne mov gs in pop iret (bad) movabs loopne movabs (bad) cmp (bad) rex.RX rex.WX (bad) sbb jns (bad) iret mov mov mov jae mov fmuls pop rex.WXB cmp push fwait callq cmp icebp lahf xor mov and adc pop cltd rex.WXB xor in cmova mov imul sysexit mov cmp xor rex.WR ja movabs xor lods jae sub (bad) or adc addr32 out mov (bad) (bad) jnp lcall push jb rex.RX rex.RB push mov jle fdivrl es lock rcll hlt mov mov add or sbb adc mov (bad) jbe (bad) sar mov xor fildl fimull (bad) xchg push outsl adc cmp leaveq cmc iret sti sbb jo (bad) mov js je sarl cs stos data16 sub mov cmp add testl cmp or mov outsb cmc sub loop out jge lods jg mov (bad) mov cmpsb mov or in fsubs int3 (bad) sub (bad) je fmuls (bad) (bad) (bad) loopne notb in (bad) (bad) outsb (bad) sub pop add (bad) cmp (bad) cmp mov lahf lret mov (bad) add jae rex.XB push lea movsl fs scas jo push sbb push shl callq pop (bad) (bad) xor (bad) sti cwtl sbb mov jg (bad) bndstx rex.WRXB stos or adc xchg sarl rex.WRXB fwait lret mov add stc movabs mov mov (bad) insb leaveq xchg jne movsb scas xchg nop add xchg cli out (bad) imul adc rex.B mov push rex.WX rex.X repz (bad) jb hlt stc rex.WRX pop out addb jl outsb insl cmpsl out rex.R fwait (bad) cld pop mov loope (bad) fbstp cmp mov and rex.RX xchg movslq (bad) jne push fisttpl jb adc sti callq xor rex.W stos cmp stos pop gs rolb sti mov adc movslq iret push fwait mov orl iret rex.XB jne hlt mov out cld out pavgw (bad) cmpsb mov (bad) add fwait (bad) movslq mov out sub jbe fwait scas and rolb (bad) repz sti or (bad) mov jrcxz or add mov test (bad) adc pop lock xor adc add or or add (bad) fiaddl lret retq mov rcrl fcomps int3 jp nop (bad) (bad) cwtl cmp mov retq sub (bad) cmpsl je jne xchg stos rex.WRB or xor sti mov (bad) mov mov pop (bad) in cli loopne mov callq jae pop add fwait cmp mov fwait adc rex.RXB (bad) fwait and cli and add mov adc movsl mov scas mov rex.WX mov add popfq cli jae xchg in mov pop pop int3 xor mov sarb shr movslq rclb sub cs cmp adc adc insl lock int (bad) (bad) loope iret mov push loop mov (bad) je sub or icebp jge iret cmc sub add loope push insl pop test jae lahf mov fwait scas in mov sbb cli sbb xor fwait rclb push fwait movslq xor cltd int3 pushq adc cmp enterq (bad) movsl mov pop (bad) mov adc mov add adc in lahf addl or or jge mov nopl insb jb and (bad) imul sti add mov fwait sbb jnp rex.X fwait pushq lahf sbb ja movsb (bad) scas cmp fwait mov xchg fiadd lods xchg xor fwait loop out rex rex.WB add cmc clc sub and or subl and xchg (bad) (bad) mov rex mov add fistpl jl out fwait or rex.WB (bad) lods push cmpsb sti repz retq mov mov or (bad) mov and adc jno rex push ja scas imul mov movabs sbb fcomps cmp (bad) (bad) cmp (bad) jle lock (bad) jp rol xor (bad) or add pop cmpl (bad) push sub stc retq xchg sbb sbb mov je int3 fistl xchg jmpq rex.WRXB mov fidiv pop addb xchg hlt (bad) mov cwtl adc icebp pop repnz clc jmp pushq fwait es rex.WX pop (bad) sbb sub cmp in fwait pop gs out ficomp cmc fdiv ja notl enterq jmp and jo clts (bad) rex.RX adc (bad) rex.X outsl xchg mov data16 or sub (bad) sub ficoml xor sub mov sarl lahf sub sahf xor out out ficomp or (bad) lea xor pop (bad) rorl jnp and retq sbb xchg mov lods fwait xor sahf sub rex.RX lret shll or out (bad) rex.X sub sti fcmovnbe (bad) ja sti fwait rex.XB mov hlt fwait loop (bad) (bad) sub pop add js fwait iret sbb (bad) sbb xor (bad) jge or pushfq xchg repnz and pop cmc jb sbb jae ss fwait or out push xor gs loop fdivrs insl (bad) jp (bad) in pop adc pop fcoms hlt rex.B (bad) push fwait add cmp fwait ds jne rex.XB sbb mov push cmp xor add xchg mov clc (bad) add rex.RXB (bad) fimull lea scas movslq push cmp xchg and (bad) idivb repnz fwait nop loope int mov mov rex.RX rex.WXB lret outsb loopne sbb lods xchg jno fwait push lock mov (bad) (bad) fwait lahf xchg fndisi(8087 pushfq jl jp lret (bad) or fdivrs xor xchg sbb jb xchg imul jo nop (bad) jnp rcrb add movsb cltd rex.RX (bad) fwait jg out mov mov stc (bad) jrcxz pop (bad) ja adc rex.X add js adc jp retq fwait jge loop (bad) cmpsl sbb fldl adc int3 or jrcxz cmc or fildl pop push retq (bad) clc insl fwait adc sahf movsl cmp or movabs pushq sahf imul add nop fiaddl cmp es sub sbb je rclb cmp (bad) adcl fisttpl retq pop sub sbb subl xchg rex es movabs add lea adc fwait out rex.WB movsl add (bad) sbb out xchg cmp gs cmpl mov pop outsb rolb add fsubl (bad) mov je (bad) cmp sbb fildl jge rex.RXB clc fimul mov fstpt or sbb out sub outsl fwait adc (bad) fs shrl fwait sbb (bad) cmp sbb adc (bad) stos xchg add addl and out repz rex.WRX (bad) fwait adc or adc int cmp (bad) lea insb subl rex.R mov cmp xor jmpq (bad) jae ror (bad) xchg popfq sub outsb in mov xor fwait ss faddl add movabs pop (bad) sub xchg lahf fidivr (bad) fwait mov pop rex.WB lock fwait outsl out in (bad) mov lcall in nop mov pop sub orl scas lea jmpq mov xchg fadds fwait lock or movabs cmp int rorl iret movabs movslq sub lret xchg push loope mov movabs adc sti sub mov mov cmp fwait cmp rex.WX pop jns fs (bad) cmp (bad) movsl mov jg or out xchg add add rex.RB fwait add (bad) int3 cltd (bad) xchg adc icebp rcrl sub (bad) pop (bad) or cmc (bad) fildl adc loope fwait (bad) jrcxz lea sub test mov (bad) (bad) ds lahf int mov (bad) (bad) xor (bad) jge cs and fucom rex.WR loop push fwait mov sbbl pop shll fwait (bad) fneni(8087 pop rex.WRXB or scas (bad) lret cmc (bad) rex.WRX not sbb push jl clc or mov adc rcr lea mov rex.WRXB rex.WB fwait sbb add enterq (bad) push retq (bad) stc cmpl ja mov fwait pop test sbb add rex.B (bad) or callq fwait sbb imul sbb in or rex.XB fwait gs fs addr32 push fdivrs rex.RXB fwait callq cwtl out fwait in jne and or in sbb sti xor add fwait (bad) rex.WXB movabs (bad) hlt xlat or mov sar ja fucompp add pop insb cmp xor sti jge cld rex.RB and fstpt push pop or xchg (bad) loope mov cltd stos sbb xor (bad) rex.WRX (bad) nop (bad) loope mov out fldenv std add xchg mov ja rex.RB icebp ja jmp add xorb mov pop or insb fucomi jo xchg jg leaveq (bad) mov jl rorb jno stos xchg xchg mov mov and sbb push (bad) adc mov xchg push (bad) jb cmp or and or loop or fcmovne (bad) xchg xchg movb pop sbb jnp (bad) sbb xor outsb mov orl cmc xchg mov adc fwait movsl jno fcmove jae add (bad) xor xchg cmp mov mov jmp cs clc (bad) fwait lods loop xchg stos jbe stos cmp ja xor fsubrl mov leaveq mov mov lods imul (bad) cmp add mov jge fs fisttp lret xchg (bad) (bad) push movb test movabs push mov jae test fwait jno test fwait in loope mov adc add imul loop out cmpl jp fwait jmpq mov loope out cmp sub sahf add incb pop pop sbb addr32 je xor mov adc (bad) jmp lock pushfq (bad) in or push movslq pop jae (bad) movabs (bad) insb (bad) outsl push lahf (bad) jmp sbb in out sbb mov (bad) in std sbb shl cwtl loope pushq jo fwait repz in imull retq mov fwait (bad) pushq out cmp adc sbb xchg (bad) cmpsb or insb repz test shrb test mov pushfq fwait (bad) adc addr32 add adc cmpsb mov jae mov icebp lahf adc pushfq movslq fwait sbb add sbb movsl add addr32 xor stos (bad) mov pop je (bad) add jp lods (bad) movabs pop fwait (bad) movsl mov and rcll or sti add (bad) js (bad) fwait (bad) (bad) rex.W rex.WRXB movabs mov sub xchg add (bad) lods sahf rcrl (bad) adc sbb roll lods cli rex.WR nop (bad) out in and push sbb cmp cli loopne mov (bad) (bad) mov mov sti cmp (bad) fwait jmp subb jbe (bad) jmpq add test push xchg jmp rex.RXB adc adc out lods es int in cmp mov pushq (bad) cmp push movabs pop fcomi pop mov test xchg (bad) sbb rex.WRB or mov pop lock fstp in addr32 fcmovnb and std (bad) outsb sbb iret xlat or (bad) enterq callq sbb popfq push pushq xchg std and rex.RX sub (bad) fist pop push movabs jle lea retq add mov leaveq fwait rcr push pushq in test stos sbb es lret and (bad) cld cmp mov in rex.WXB sub sbb loope (bad) xor sub sbb add sub mov (bad) iret fistpl icebp adc movabs lret or movsl rex.WR rex.X pop cltd hlt jmp mov (bad) in (bad) popfq pop (bad) lea out cmp mull or movsl (bad) cwtl rex.WXB rex pop data16 rcrb scas adcl lock cwtl (bad) mov or (bad) xor subl (bad) mov sub jg shr sti adcl jno sbb repz push jle pushfq frstor mov jbe cld push (bad) mov or (bad) loope mov xchg xor (bad) iret (bad) movabs test (bad) je add mov cmp shll pop and mov iret or in pop add mov popfw ss (bad) rex.XB rex.WXB hlt in (bad) orq (bad) jns push sbb (bad) leaveq (bad) (bad) loope retq push mov sbb out jmp mov fwait icebp sbb rorb clc mov and (bad) fwait mov mov imul rex.R sub fsubl sahf rex.RXB sub (bad) (bad) pushfq fwait adc insb push fnstcw pushfq sbb imul cmp test fwait push scas pop rex.WRX sbb xor pushfq (bad) mov add leaveq negl scas xchg (bad) (bad) (bad) fwait or and fwait mov in sbb xchg sbbl push lock jne jo add (bad) or fwait (bad) xchg std xchg (bad) push pushq jg addr32 mov js rex.RB add (bad) retq in pushfq sbb cwtl setnp and leaveq (bad) push (bad) scas movabs out (bad) cmpsl sub mov fnclex sub lret (bad) mov cmp sub add sahf es mov fdivs mov rex.RX adc cmp test mov add jmp (bad) (bad) jmp out mov fwait add add fnstenv cwtl xchg jmpq vpsllw fwait stc (bad) rex.WB js rex.WRX add pop sub sbb lret not xor adc in test movabs rex.RXB fwait (bad) imul fwait cltd add cmp jne movslq mov sbb xchg hlt stos sub sahf in pop rex.RX fwait outsb movl (bad) fwait cld sbb (bad) ss mov mov sbb push cmp scas fisttpll roll or fldt (bad) add add (bad) mov jne sbb icebp fstpt mov lahf and adc pop fwait out mov mov fwait xor sbb push rex.WXB fwait xor or cld stos (bad) cmp fsubr cmc lahf jb in xor (bad) mov (bad) sub out mov mov sub xchg (bad) movsl fdivrl or lcall sbb mov (bad) xlat jmpq or je cld inc push stos fwait (bad) mov rcrl add add sbb out add rex.WRX (bad) (bad) pop sbb xlat loope or retq fwait jmp (bad) in movabs (bad) sbb jne rex.RX sbb out lea fildl mov xchg movabs movabs cld pop addr32 loopne out pop clc sbb or adc mov es cmp fwait sbb std or xchg jp jno fwait rex.WXB mov (bad) jb add cwtl adc cmp (bad) fwait mov cmp roll cwtl pushq test xor rex.B xchg fcmovbe setnp lret and test push mov (bad) sub fisttpll mov movslq fwait in popfq or out imul divl adc test jle cmp jns icebp xchg mov jrcxz int sar fwait in and fwait icebp (bad) loopne lret xchg rex.RB and pop cmp cmpsl idivl add fwait adc in adc or mov (bad) fwait retq rex.XB outsl rex.W fwait pushq jmpq loope fwait and pminsw scas adc movsb lock mov movsl lods es or rex.W sbb xchg (bad) mov cltd push add ficomp sbb push jle test xchg (bad) adc jno or stos addr32 add je xorb movabs mov sbb add xor sub (bad) rex.WRXB loop (bad) pushq enterq (bad) fwait imul (bad) movabs jmp mov sbb out fcoms (bad) rex.X out (bad) int3 sbb and sub stc jne imul cmp gs fwait out push movsb sub pop scas jbe jae mov adc jb stos leaveq xchg pop pushq fwait retq (bad) (bad) or jl in xchg (bad) fwait pushq scas cmpsl and (bad) push imul rex.WRX (bad) sub add movsl sbb (bad) or rex.WRX (bad) fwait mov sbb mov (bad) iret sbb (bad) jns fldt js fcomps rex.B rex.WB stc adc fwait jmpq or push jbe adc sub rex.R rex.WR xorl adc pushq (bad) jbe (bad) movabs mov mov mov enterq leaveq fwait sbb adc mov (bad) lret outsb mov adcb push data16 fimul addr32 add jno push jnp add lret mov mov (bad) sbb pop (bad) sarb in in cld (bad) xchg rex.WR (bad) stc (bad) (bad) pop ds (bad) rex.WRB pushfq sbb sbb xchg lods mov in xor fnstenv sub (bad) in jns out rex.R mov mov in sbbl (bad) jb rex.WR mov push sub cmp movslq int jrcxz sub sub and shrb cwtl jmpq loop cmp and pop clc stos rol (bad) mov push adc sbb jmp out pushfq addr32 xchg rex.WB cmpl adc pop test cmp xchg in mov sbb lahf std popfq rcrl xor add rex.X add (bad) adc lret (bad) mov jb sbb sbb out sbb sti mov int3 rex.W fistpl rex.WX mov pop clc mov add mov je fcomip nop xor iret stos sahf cmp and movabs add rex.XB rex.WRXB xor jrcxz mov callq cwtl sbb movb int3 cmp pushq loopne (bad) (bad) mov popfq xor rex.WB rex (bad) (bad) xorl in rex.WR lock fwait (bad) outsb jnp outsl (bad) mov mov mov push fwait cmp popq bndldx movslq pop (bad) orl pushfq lea adc enterq rex.WX or add decb fwait cwtl xchg (bad) insl rex.WX sub test push in stos xchg scas rex.WX rex.W rex.W xor mov rex.RXB gs rex.WRXB mov (bad) andb rex.R rex jnp rex.WX jp (bad) (bad) mov (bad) lods rcrb mov rcr cwtl rex.WRXB adc sub pop mov fstl js pushfq xchg (bad) rex.RX jl movabs sbb (bad) imul (bad) cmp cld and fildl mov sbb (bad) jae popfq sarl sbb btr (bad) sbb sbb in pop pop not sbb mov xor imul movslq mov insl rex.WXB rorb xchg pushfq (bad) xlat in push sti add es mov lock mov xchg insb out adc mov xor xor imul pushq jmp mov (bad) jno mov jle rolb rorb or (bad) retq lea sti fisttp fwait in mov outsb (bad) fwait neg out icebp pop mov xchg sbb (bad) rex.X popfq movsb mov lret fwait idivq fwait xchg pop (bad) push add (bad) mov mov rex.WRXB movsb adc (bad) (bad) fwait movabs adc jge fimul mov lock rex.WRB repz fwait or cwtl out (bad) mov movabs fiadd int pop sbb rex.RX cmc mov in pop rex.WR (bad) pop in enterq neg (bad) mov or xchg (bad) cli rex.WR rex.R jmpq sub (bad) test cmp fwait push pushq (bad) sbb iret sbb (bad) decl movabs push (bad) xchg sub imul xchg fnstcw fadd callq movabs jb (bad) scas rex.WB fsubr mov cmpsb mov movabs fucomi sub pushq pop test sbb jns outsb add mov mov loop stos or cmpb lods add jge sbb idivl (bad) sub mov outsb xchg jae pop jno (bad) loope negb rcl (bad) (bad) out (bad) add rex.RXB shrl adc rex.R fstl movsl fldl push lahf lea (bad) cmp sbb adc or int and movabs fimul adc imulb lods lods sub and fprem xchg xchg xor mov rex.RX test fbstp (bad) cmpsl pop rex.WX (bad) sub icebp and xor stc lret mov hlt (bad) mov insl (bad) and fmul cwtl mov std (bad) movsl popfq jne fldt (bad) data16 (bad) cmp push lret gs mov rex.WX sub shrd and add outsl sarb xor (bad) xchg cld fwait roll rex.WXB jnp js cmc adcl (bad) fldcw shr fwait mov (bad) cli fwait scas rex.W sbb jno rex.WB add in sahf or mov movsl gs pop adc mov fmuls sarl fwait cli and pushfq xchg (bad) and fwait lret sbbl clc jge repz fwait pop lods xlat rex.WRB pushfq (bad) sbb cmc out mov mov cmp repz nop or mov popfq (bad) xchg and push jg adc (bad) jmpq add orb stos out fwait rex.WXB jrcxz imul in sub fwait callq lret mov sbb mov jae lahf outsb movabs lods fwait and rex.RB xchg rex.WX je (bad) (bad) sti lahf mov iret lret xorl or (bad) sbb (bad) jb pushq (bad) or cmpsl lret cli pop (bad) mov mov sub cmp addr32 (bad) (bad) in ror adc jae add (bad) out (bad) in jge test (bad) fadds (bad) loopne (bad) cld and addr32 sbb (bad) stos cld movabs clc callq in rex.RX popfq fldenv and imul mov movabs js std cltd fwait cs fsubl adc xor rex.W rex.W mov sbb jnp lret rex.WRX addr32 push cmp popq callq fs push rex push jrcxz scas sbb (bad) and xor pop sbb rcl jmp int fwait callq fistl rex.XB lock fwait sub out (bad) jg rex.X fwait (bad) mov (bad) mov or xorl push loope leaveq jmp (bad) fwait pop jl (bad) pop cmp (bad) (bad) or (bad) fwait (bad) fmuls stos js in mov mov fwait rex.WRXB fwait callq xchg and fwait add popfq fstpt push adc sbb mov (bad) xor sub (bad) andl jge mov (bad) fistl rex.RB (bad) mov (bad) fwait (bad) fnop int xchg push or (bad) pop sbb (bad) fisubrl or jrcxz rex.W add out hlt leaveq xchg push in repz (bad) fwait (bad) adc (bad) sahf fwait rex.R push (bad) (bad) and (bad) sti enterq fiaddl (bad) add lret pop add (bad) imull sbb cld (bad) fmull (bad) jnp or sbb adc rol pop lea push (bad) stos lods mov jg cmc test fdivrp pop mov fdivl popfq pop fisttpl jmp sub mov (bad) jnp xchg rex.XB fstpt add xchg rex.X adc xchg test cltd jle (bad) scas push push add cmp mov add add movabs rex.XB (bad) rolb mov mov loopne mov and push (bad) xor insb jge movslq sti xlat fmulp sub jne xchg mov mov cld mov cmpsb sub rex.WR mov mov fwait cmc add rcl mov adc xchg (bad) mov nop fwait hlt (bad) out xchg fistpl movabs pushfq cmpl xlat (bad) mov sbb cld (bad) (bad) rex jne sbb push out js pop int3 (bad) (bad) sbb sbb rex.WRX (bad) int negl mov xor cmp fwait pop (bad) loope mov and icebp mov mov gs (bad) retq mov mov cmp and out jmpq cmc jno fwait cmp pop movabs pop (bad) es (bad) xchg pop (bad) adc sub fwait xchg movabs lods or xor cmpsb sbb push pushfq lea or (bad) sbbl retq (bad) and stos push rex.XB lea sbb and rex.WR add in (bad) (bad) cmc mov fwait movslq adc (bad) xchg (bad) mov cmp rex.RX xor jo fwait sbb mov cmp pop fistl iret fwait xor outsl int3 fcompl rex.X in out and (bad) mov jmp nop sbbl and mov ja cs outsl sbb push mov sti xadd (bad) scas fistl (bad) cld xor (bad) and sub (bad) movabs movsb jmp add jrcxz imul (bad) (bad) movabs lahf fwait movabs xchg mov fwait mov (bad) pop pop mov add and (bad) lea fcmovne in ftst rex.RB cmp lcall (bad) leaveq mov sbb subl repz (bad) lods movsb cmovge rclb push std rcrl cs (bad) rex.WB jge jmp and fwait push cltd in xor (bad) rex.WX sbb (bad) fmuls sub retq fwait or fucom push jge and xor or pop add fldt rolb (bad) fwait cltd pushfq leaveq (bad) fldt movabs jo iret jne movslq or and icebp rcrb mov jmpq jno (bad) rex.W add test cwtl mov sysexit xchg add and push ss sub cmp xchg fwait push (bad) (bad) addr32 (bad) loopne sbb cwtl js test (bad) lahf mov (bad) mov add fisttpl cmp (bad) (bad) xlat jns fwait (bad) (bad) outsl push pushfq jo scas fwait mov mov cmpsb fwait jb xor test jae (bad) xchg xchg icebp sti sbb loop sti sbb (bad) adc je in (bad) addl jg sbb out cltd rex.R pop rex.WR mov cmp (bad) pop mov mov (bad) movabs add cvtps2pi (bad) fwait sbb jge movabs (bad) lock mov sub movabs mov or js out mov cmp cmc xchg rex rex.W rex.RXB fmuls pop pushq add cmc scas mov mov sbb xchg sti scas es rex.WRXB pop sti (bad) stos jne fwait jns (bad) (bad) mov or sbb iret mov adc rex.WRX in movsb sub sbb hlt add (bad) adc mov xor and jmp out xor xchg fwait outsl (bad) mov jae (bad) imul add jl mov (bad) (bad) in fwait popfq imul xor rex.X lea rcrb rex.XB fwait xchg rex.R outsl mov cmpsb cmp fwait or or xchg rex.B jrcxz std mov gs pop movabs fwait rex.XB out sti vunpckhps mov (bad) fwait (bad) (bad) insl stos es movabs or push rex.WX jnp repnz adc xor in fwait and shrq (bad) or cmpsb sub loope xor mov (bad) add mov and mov xor imul pop pushfq pushq iret mov scas (bad) (bad) jns sbb cwtl and fwait (bad) (bad) xor imul (bad) jb in sub (bad) xchg addr32 (bad) sbb or js mov xlat imul out mov pop retq cld sub or xchg mov mov enterq (bad) sbb cltd rex.WRXB mov mov movsb in enterq (bad) fwait add (bad) test loope fwait stc cmpsb mov xchg adc (bad) fwait add add xchg mov xchg fwait clc pop (bad) and out fwait adc fistp (bad) xchg or (bad) push loopne mov rex.XB fnsave unpckhps loop and fbld fidivr jp ds popfq (bad) lret cld rex.WX cmp (bad) fcmovne pop orb sbb scas fwait mov (bad) (bad) (bad) fstl pop add xlat rcrl outsb or jmpq test cmp movabs mov sbb xor loopne ja mov imul mov lods clc push insb fwait out mov and rex.B fwait rex.R test jns rcrb pmaxub rex.X and add ficompl cwtl or jle sti rex.RXB rex.WRX fwait adc int pushfq xchg mov sbb out scas (bad) pushq xchg std pop rex.R fiadd movabs repz cltd lods (bad) rex.B pushfq in lret fwait xor or sbb loope sti or stc lock rex.X mov sbb jrcxz lahf outsl (bad) push mov adc sub or rcll stos (bad) loop or fstpt idiv (bad) ss (bad) sbb mov jmp push rex.RX (bad) rcrl cmc add lret repz push mov movsl rex.RXB sbb rex.WB (bad) orl push sbb movabs or sti jno mov mov push out sub or outsb in lea callq fwait (bad) pushfq sub jo (bad) fwait (bad) pop fsubr nop cmp jmp xchg repnz icebp (bad) pop gs fwait clc scas or cltd fwait lret push sbb cmp rex.W stc fisubr jle (bad) out rex.WR cmpsb (bad) lret lock sbb (bad) and cmp test ror push fisttpl cmp fwait and (bad) (bad) xchg rex.WXB rex.WXB jbe xchg loop mov es jrcxz add and xor pop jmp (bad) add and fwait neg out sbb loope fwait lods mov rex.WRXB (bad) fwait icebp ja pop lock fwait (bad) cmc (bad) divb scas and fwait jge stos movd fnstenv add fildl in shll xchg insb insl incl xchg mov (bad) iret (bad) stos mov sub fwait icebp outsl (bad) (bad) rex.WXB rorl jbe or xbeginq fwait xor fsts callq ficomp xchg add addr32 lods (bad) insl rex.WXB rex.WRB (bad) stos fwait rex.RXB rex.WRXB mov or sbb rex.WRB mov add (bad) sub (bad) fwait (bad) mov mov ss rex.XB rex.XB rex.WX jrcxz (bad) fwait rex.WB mov fwait imul cmp ja pop mov cltd lock negb imul sbb push hlt lret movabs sbb movabs rex pop mov mov (bad) rex.WRX push mov pushfq int jle leaveq adc retq xor loop cmpsl mov loope fwait mov cmp fwait adc pushfq jns cwtl mov sub icebp and mov cmc adc jb hlt mov imul cmp out sub fwait xchg movslq test and fwait (bad) rex.WRB xor (bad) nop rex.WB scas xchg fwait retq adc push retq pop (bad) xor add sti adc and push test (bad) js repnz adc bndstx notl rex.WXB enterq sbb xchg leaveq jae xchg mov and mov rex.R repnz fwait rex.RX mov fwait test sbb lret rex.WXB fwait mov insb pop jns sub fcomps (bad) (bad) cmp sbb add int cmp adc loopne xor (bad) (bad) jno fwait and rex.WRX mov test jle cld mov mov iret iret adcl rex.WXB icebp stc sbb pop pushq (bad) xchg je loope adc jmp xchg rex.WXB lea js mov cmc rex.W or (bad) rex.WR insl pop (bad) out fwait icebp jno rex.WRB ds push mov adc cmp rex.RXB ss hlt push repz add rex.WXB sti repz imul or jnp sti out cmp and fwait jp (bad) (bad) enterq push std lahf sbb sahf cmp divl stc rex.X sbb jmp loopne xor xchg adc sbbl fwait imul add (bad) (bad) mov movslq fwait pop pop (bad) iret test and test xchg cmpsb (bad) xchg mov xlat enterq (bad) (bad) out loope repnz cld (bad) out sub (bad) rex.WRB and push popfq sti adc fwait mulb lods sub rex.RX setnp movabs rex.WRXB fwait jne rex jp jbe pushfq fstp lret xor adc or (bad) insb (bad) leaveq and (bad) sbb loope (bad) push ja pop fwait xchg movabs mov pop movabs fwait adc jnp (bad) negl addr32 rcr outsl cltd fwait or cmp mov pop mov (bad) jae mulb rcrl push xchg fwait add je cmp negl sti pop movabs rex.WRXB jb outsb adcb sbb add cmp add fwait pop out sub (bad) pushfq mov cmpb adc sbb lret sti and lea pop (bad) or jae mov xchg rcrl ss sub mov movabs movabs (bad) out mov fwait xor (bad) xchg incl (bad) (bad) js sub sahf xchg fwait imul cmp testl pop out rex.W movabs (bad) sub rex.WRXB test retq rex.WX mov scas jae (bad) cmp add rex.RB cld rex.WR xchg pop insl repz add add pushq sbb adc jle jne sahf xchg fcoml neg cmp adc retq xchg or push rex.W adc fcmovb lods mov pushq cmpsb sti loope push je fwait jb (bad) rex.RB xchg mov cmp pop fwait lretw (bad) (bad) mov cmp (bad) jmp fwait jne cltd enterq stos fwait push pop in xchg or adc test fildl and loopne fwait pop jmp mov mov mov push or pop xlat rex.WR cmpsl add mov (bad) (bad) hlt mov mov sub (bad) stos rex.WRXB (bad) faddl scas retq stos rex.WRX rex.WX rex.X fwait stos push (bad) jp movabs (bad) mov cmp fwait scas add mov sbbl fwait lret sub (bad) (bad) out sbb pop push sarb cwtl fildll out negl lret mov fistp popfq push mov mov and push je (bad) and (bad) mov and xor mov xor imul sbb (bad) loope pushq roll fwait mov roll sbb (bad) mov mov addl jae add or cs iret cmp or push (bad) fidivrl xchg jae add (bad) mov adc mov and sbbb fwait xchg mov fwait (bad) jbe movabs sbb fnstenv sub loope xchg (bad) shlb (bad) fstpt decl sbb sbb fist xor pop jb adcb add adc rex.WR cmp sbb rorl fwait push rex.WX sub (bad) xchg cmpsl sub cmp sbb (bad) (bad) jmp (bad) fildll fistpl sbb adc (bad) (bad) push push mov (bad) insb rcrl lea xor jge (bad) mov (bad) xor nopl add and and sbb addr32 mov mov movl loope jns mov cld scas pushq jl (bad) rex.RXB je or loop cmp out push add mov fldl cld outsl (bad) pop outsb (bad) cmpsl adc jno movsb (bad) pop jmp mov or add sbb retq mov mov (bad) stos add in (bad) rcrb mov (bad) popfq push std pushq jnp (bad) flds cwtl pushq mov add in test rex.B rorl mov pushfq adc (bad) jne (bad) mov rex.RX rex.WXB (bad) sub in cmp lahf fwait scas or (bad) sbbl (bad) lahf (bad) sub xchg shr (bad) scas (bad) fwait rex.W scas pop clc lret adc rex.WB xor xchg fildll sbb stos (bad) and sbb loope adc fildl mov fwait movabs rex.WRXB fwait subl (bad) fwait jrcxz stos cltd cld (bad) mov or insl lahf cmp iret (bad) lock test out fwait mov cmp mov and push fwait lods (bad) lret sbb leaveq fwait adc scas push ja sti (bad) (bad) sbb adc (bad) fisubl out xor cmp (bad) or add fcompl (bad) push out fildl push sub js loope (bad) pushfq jl xor insl mov sahf rex.WX out insl lock ja cltd pop fwait scas jmp add adc sbb and (bad) add sarb or pop and nop adc mov adc push add rex.WR fwait add rex.XB rex.W sbb sbb lret jo jae fist or cltd out xchg mov and and movsl (bad) xchg and movabs int3 (bad) pop adc jmpq (bad) out push fwait xchg insl rex.RXB and add (bad) in mov mov negl xchg add lods movsb xor rex.WB rex.WRB iret sbbl adc xor fwait (bad) (bad) mov sti cs sbb movabs iret (bad) fldl jno mov push and rex.R fwait xchg pop shlb adc xchg or (bad) (bad) fdivrl rex.WB insb in (bad) (bad) jne imul (bad) or rorl insl and (bad) lods (bad) (bad) movsl add rex.WB fs cmp cmpsb push (bad) rex.XB stos sarb faddl fldt (bad) add (bad) mov mov xchg gs jrcxz rex in rex.XB sbb rex.RB mov push repnz outsl icebp (bad) fwait sub out mov fwait mov or add mov sbb cltd xchg (bad) add sub (bad) (bad) sbb rex.X pop mov lret and fwait mov pop mov orb pop cmp and rex.WX jb (bad) insb fcmovu ds (bad) gs data16 sbb mov mov (bad) jbe addr32 fldenv fwait test xor cmc and (bad) rex.RXB (bad) iret mov fwait enterq ja cwtl ss mov push pop add or sub out (bad) fwait mov sub sti or (bad) mov and insb (bad) loopne test jne (bad) jo movabs andl (bad) fwait pop mov lret pop (bad) js mov ds or (bad) pop imul out cmp xchg rex.RXB sub andl pop mov mov (bad) stc add (bad) rex.XB (bad) jl popq cmp xor mov or jne movabs push movabs mov cli pushq adc fistl adc mov mov (bad) jae cmp fisttpll retq pushq (bad) pop mov pop stos out sbb fpatan mov or jrcxz mov (bad) pushq xchg int3 (bad) pop xor and (bad) int3 popfq in and cwtl adc mov mov and xorl out leaveq repnz jl iret cld sahf xor fwait jb fbld pop mul (bad) xchg jo xchg (bad) cltd popfq cmp mov (bad) sub fsub movabs lods insl cwtl mov adc xlat xor mov add icebp (bad) xchg or (bad) imul (bad) or adc add in sti pushq add sub cmp fstpt leaveq mov xchg callq rex.RX test fwait xchg (bad) (bad) jne enterq movabs mov xor (bad) mov enterq or fildl cld fsubl sub (bad) sbb jge enterq out int3 cmp (bad) leaveq retq (bad) and (bad) pop sbb adc or (bad) pop rolb (bad) in mov lods rex.WB mov mov imul rex.WRXB xchg (bad) gs fs fistpl sub popfq fwait or mov callq lock sub mov xchg fwait or movabs or fisubr neg mov (bad) or leaveq or add pop insl jrcxz lods lret (bad) in outsb adc rex.RB sahf fildl mov and cmpsb mov rex.B rex.B data16 or pop cmpl sbb fisttpl fwait jrcxz mov movslq rex.W sbb cld and cmpl (bad) enterq cmp sub sub out (bad) rex.XB xchg rex.WRX cmpsb xor xchg cmp sub imul and movabs lea push adc movsl stc rex.WRB ds fdivl scas subl popfq add outsb adc movabs and shrb (bad) movsl fwait sbb sub sub jle sub lret (bad) ss pushfq insl jmpq in leaveq rex.XB fwait es pop adc push fldt (bad) jae cmp cltd imul and std (bad) (bad) xchg movabs loope icebp movabs and mov sub mov rex fwait (bad) retq icebp adcl xor clc (bad) stos add jl movabs loopne fwait data16 cmp rex.RXB test jb pushq fwait rex.RX (bad) scas imul fstp xlat jns jbe fcom jg nop data16 loope sbb pop retq jmp fstpt (bad) int fdivs (bad) out mov adc sbb add fildll cmp cmp mov xchg rex.W fwait (bad) cmp xorl pop add fist sahf cmp jrcxz jns sti cmp rex.RB nop fwait loop out fs (bad) push cmpsb adc in add rex.WRX jbe rex.X je fs rex.WR fwait mov hlt rex.RXB sbb (bad) fwait shr je fcoml mov es xchg jns enterq insl rex.RX mov ficom leaveq fwait stc adc repnz loope test (bad) leaveq int cmp sub sbb rex.WRB fwait mov fwait (bad) (bad) (bad) adc (bad) push (bad) sbb (bad) xlat mov iret (bad) int3 repz fsubl jp,pt jmp or and mov sub xchg lret fwait rex.WXB movabs (bad) add int3 jrcxz lea in lahf mov lret rcr xchg add (bad) js insb pop fwait jb (bad) icebp mov test mov hlt sub jnp fwait rex.XB pop loopne icebp addr32 jge rex.RB (bad) cmp and pushfq movabs or pop movabs and loop mov sbbl (bad) fisubr (bad) or fwait add push and insl sbb negb mov jrcxz jge repz mov xlat sub push jle jrcxz roll in data16 xor pop push rex.RB pop or rex fcomps (bad) cwtl xchg int out outsl sub xor fstpt (bad) sti or lods fwait mov adc cmp jo adc add sub movsl and mov cld fwait jbe insb out negb rex.RB pop rex.WB and fwait push addr32 fisttpll (bad) (bad) (bad) movsl in (bad) xor mov test xor addr32 fwait callq rex.WXB rex.WRXB movslq es (bad) test test fdivp sahf stc int3 sbb (bad) mov or or fldcw jg xchg outsb rol fwait jno push adc lods cltd es iret jne mov adc jmpq test movsl (bad) mov sub rex.X lock pop retq and sbb fs and xchg xor xlat movsb cmpsb (bad) stc sub sbb and fwait rorl repnz mov xchg cld sbb (bad) popq fnstsw fwait or push fwait rex.RX mov pushq sbb and (bad) cmp stos ficompl mov mov mov xor scas enterq mov fcmovnu push jb mov gs or retq sti pushfq add mov push mov orb sbb pop addl adc hlt mov (bad) (bad) (bad) outsb xchg mov pop cmpsl adc std in fwait mov (bad) fisttp xor (bad) test jp sub int3 adc (bad) imul fwait push data16 stos sahf lret loop loope (bad) fwait movslq out test pop stc jmp mov sub test or imul dec stc roll xchg rex.X jp out jnp mov add or rex.WRXB adc shrl and cld loop test sbb shl in adc ror incb int3 ficomp fstpt add jnp jmpq scas enterq mov fwait loop orb rex.RX jae push je in sub fwait enterq (bad) (bad) jp (bad) rex.RB push repz cmp jge xchg jbe cltd sbb retq sbb or mov xchg movsb rex jne pop sub add sbb jb jo pop int pushfq iret (bad) cmpsl callq pushq add mov iret xchg pushq data16 lods mov (bad) sbb (bad) fisubr je sub pop add lods (bad) insb out fbld fiaddl lret test cld push (bad) (bad) mov fnop jne (bad) rex.XB lods jae (bad) sub (bad) pop sarl imul mov xor mov rex.RXB cs and add pop fldt cmp fwait sbb push rex.WRXB (bad) xchg notl clc imul rcrb rex.RX ja lock notb pop jno je jge cltd rex.WX and rcrb insl hlt cmp lea jrcxz cmp pop int out in lret iret cwtl out (bad) (bad) (bad) fs pushfq lahf (bad) mov fwait (bad) xchg rex.WXB fwait and fucomip lahf test add fwait sarl insl cmp (bad) xchg cwtl jmpq pushfq rex in sti iret negl mov (bad) mov fs pop xchg test or (bad) gs rex.WRX rex.WB jbe sbb xor mov xchg xchg test jbe sub outsb rex.XB fwait sub es sub push (bad) xor (bad) mov (bad) add sub fadds (bad) rex.RB (bad) mov pop cmpl rex.WRB fwait pop ss pop mov loope leaveq es rolb fwait mov (bad) (bad) adc rcrl lahf mov or pop pop callq (bad) pop and fwait rex.WX rex.WR in callq out (bad) imul shr out (bad) sbb loope js cli in mov es data16 push (bad) popfq test push (bad) fimul sbb cmpsb (bad) mov fwait stos push adc rex.RXB (bad) rcrb lock and (bad) xchg fwait add rclb or icebp mov jae sub sub repnz fwait lret (bad) rcrl xor mov sahf xchg sbb movabs jge lock in retq test fcompl popfq jmpq test pushfq (bad) fs (bad) (bad) fwait pop xchg enterq (bad) sbb loop pop sub push es icebp (bad) out mov rex.WRB xor (bad) test jae sub shr test cltd rex.RXB xor xchg in pushfq addr32 ss es (bad) cmpsb sub (bad) mov mov retq out jl sub std in lahf lods fwait and (bad) in cmp pop (bad) (bad) enterq addr32 callq subl fcompl repz fwait cmpsb (bad) ljmp rex.WXB add mov fnstenv (bad) clc rex.WRB (bad) and push adc xchg in mov xor sti mov fwait out rorl add (bad) stos sbb mov jg rex.RX mov pop stos (bad) cmp (bad) mov (bad) fwait adc rex.R callq cli and cmp cltd pushfq pushq or (bad) or lods insl sbb addl es fwait lock jmpq cmpsb bnd sbb mov cli adc fwait (bad) lahf rcll mov (bad) cmp outsl mov xchg cwtl iret adc fsubs (bad) sbb or sub xchg sub sar decl adc sarl lods add insb and xlat (bad) fwait (bad) rex.WR xor (bad) (bad) sub movabs movabs cmpsb imul out andl mov xchg jmp cs xchg xchg add mov sbb add icebp mov sbb out (bad) cli out shrb int3 loop addr32 insb xchg mov xchg xchg shlb mov test (bad) push (bad) jmp fidiv cld (bad) mov mov (bad) jp (bad) mov pushfq sbb mov retq (bad) loopne test pop (bad) rex.WRX fstl jl sahf in xchg adc and (bad) pop (bad) cmp and movsl (bad) sbb roll mov rex.WX sub pop fwait icebp jmp add rex.RX repz (bad) decl or rex.XB (bad) or (bad) imul cwtl mov mov adc adc js rex.RX fwait jrcxz fisttp ja adc xchg mov movsl in xor push (bad) icebp (bad) out jp sbb (bad) addr32 lods (bad) adc xchg fildl cld fwait iret (bad) (bad) (bad) push cmp or add movslq loope jno rex.RXB rex.RXB ss es (bad) (bad) sbb out sbb push or adcl rex.RX mov (bad) (bad) cmc adc mov in and sbbl fwait std movabs cmp mov jmpq sub fidivl cltd fwait adc hlt pop add jb movabs int3 mov (bad) xor jg loope xlat adc pop rex.WRX mov rolb (bad) (bad) insb imul sbb mov (bad) out sarl stos rex.RX mov push jrcxz (bad) mov adc xchg fwait (bad) (bad) add jl fwait adc xchg (bad) or retq movsb mov add leaveq and mov cmpb sti movabs xchg addr32 fwait (bad) jmp (bad) int xchg rex.WXB fwait je adc mov sub repnz or and (bad) xchg fwait pushfq movsb rex.RB mov cltd sbb mov (bad) (bad) mov in fwait adc repz jg mov jne push add sub sbb scas movabs cld (bad) rex.WX repnz std jp (bad) pop imul shr fwait lods sub test fwait imul jge fwait add pop mov fwait pushfq adc adc cs sbb cmc out (bad) cld stos fwait add in xchg and and notb sbb sar mov rex.WXB leaveq or (bad) adc sbb (bad) lods movabs xor push out or sbb xchg (bad) popq out xchg in jge ficom rex fwait push rcrq mov movabs adcl cmp (bad) rex.X fwait sti cli mov iret imul fwait adcb movabs (bad) mov jrcxz or add imul xor (bad) mov jrcxz rex.B sti stos pop mov and insl cmp iretq cmc popfq lret retq fwait mov sub xor jp mov xor xchg pop lret adc cmp push repz lock movsb jge cs callq int3 retq rex.WRX cmp fwait repnz rex mov sbb sbb lods cs std in add fwait mov fstpl (bad) xor leaveq or mov push stos and (bad) addr32 pop (bad) je seta add rex.B addr32 sbb sbb (bad) pushq std jb mov push jg lret enterq (bad) add pop fucomp test scas rex.XB xor sti loope mov std jb test (bad) (bad) in lret rex.W jo outsb and push callq (bad) cmpsl xlat xchg xor scas mov or rex.RX sbb cmc stc push push rcll add mov xlat cmpsb movabs xor movabs pop adc (bad) (bad) (bad) sbb movslq out sbb or (bad) sbb loop lods sbb mov out pushq rcrl lret sub mov (bad) scas (bad) add push movslq xchg (bad) rex.WX movabs fucomi xlat loope pop cwtl fistp sar (bad) rclb fsubl in (bad) xchg push (bad) adc xchg fnop movabs in mov add xor add mov adc (bad) scas incb shlb sti (bad) (bad) pop pop and scas mov fcoml cld sbb jle xchg jmpq mov pop (bad) or sbb ss rex.XB jmpq and (bad) sbb cmp push rolb add and (bad) add (bad) or sbb in jbe cld sbb jns (bad) cmpsb loopne jge or sbb addr32 test (bad) (bad) insl add jl enterq (bad) repnz sbb (bad) ja sub ds out jb (bad) xor mov sub (bad) in xchg out mov (bad) (bad) (bad) add loop mov (bad) pop xor rex.WRB (bad) xchg mov jbe mov or mov outsl mov rex.RX cmc lret push sub out mov shrb outsl std sub pop data16 out addb (bad) fisub or out mov add sbb fwait (bad) mov mov jp and movabs retq cmp outsb mov (bad) es in or (bad) out mov (bad) (bad) rcrl mov (bad) and fadd scas test jmp in fwait movabs pop add xchg (bad) stos adcl (bad) or (bad) subb jne (bad) mov rex.XB sub mov icebp movsl adc pop pushq mov sbb adc cld js jrcxz or stos jb (bad) sbb xor (bad) sub pop fwait rex.WRXB rex.WXB retq out (bad) popq xchg sbb (bad) movsb ds (bad) mov rex.XB orl out (bad) fwait cmp (bad) out xchg push xor xlat sahf jle mov sub sbb and jrcxz rex.WRXB mov xchg adc fwait xor cs loopne sahf rex.W js (bad) fwait and cwtl test in loope fldt sbb rex.W rex.RXB fwait add out add scas xor fwait movslq int3 mov ss movsl outsb (bad) lock retq cltd (bad) jbe xchg add callq jno mov leaveq ss add jmpq movabs lahf shll fwait xchg (bad) movabs repz mov or rex.W fwait movabs lock loopne mov (bad) cmp jno rex.RXB fwait and loope fwait shrl stos out jrcxz fwait xor xchg add fisttpl fdivs (bad) xchg lret rex.XB fwait pop cmpsb and (bad) fs (bad) cmp repz movabs in xrelease sbb xchg (bad) jae movsb test pop rex.R fwait cmc stos lcall sbb or (bad) int (bad) callq rex pushq (bad) out outsl jmp sbb cmpsl jge fsts fwait test out (bad) rex.WR in stos retq fwait sbb adc xlat fldcw or (bad) and xor ds in mov xchg sahf cli mov jnp fildl lahf test sub rex.WRB rex.XB iret sbb push (bad) pushfq and jl rex.XB mov and sqrtps stos insl push sbb xchg insb rex.R rex.WR movabs sub sbb (bad) push out int out enterq jnp pushq sbb movabs lea cmp lret (bad) jns (bad) mov sti je mov fwait mov xor adc movabs jge shl xor mov (bad) fwait sub mov rex.B fnop outsb movabs add in popfq pushq push pushfq adc rcrl mov add cmp test fwait int (bad) mov (bad) movabs std jmpq jge rcl (bad) test push jns pop insb add pop pop push stos out mov mov retq fisubl repnz cmp rcrb or fidivr rex.WRXB imul or (bad) jmp pop cltd pop (bad) rex.WXB rex.W fwait outsl (bad) jns repz stc or cs fwait out fldl push scas insb (bad) fwait lret stc fidivr add and loope jge,pn (bad) js adc mov cli sbb rex.WRX push fwait lahf (bad) ds fwait std mov mov add pop jmpq pop repz outsb mov mov (bad) cmovns (bad) lods jg movabs (bad) pushfq mov sti rex.WB pop adc rex.WRB jge adc lret (bad) pushfq leaveq (bad) push stos rex.WR ror repz in fwait mov xchg data16 sbb sub roll stos cmp jle jnp frstor sti mov cmp out sub cmp (bad) imul outsb jle stc push sub (bad) xchg rex.WB adc cmp fwait pop adc (bad) loopne jle fwait mov mov gs stc rex.RX popfq (bad) rex.X or enterq pushq cmp push xor rex ss movsl mov in sub jae cltd pushq mov sti (bad) loop scas mov out popfq mov and movslq out sbb mov out jle sbb push sti scas and sbb pop popfq or addl or mov cmp loop jae pop sbb stc (bad) add pop jae lods cmp fsubr xor (bad) pushfq push mov jo cmp (bad) sub sbb stos pop iret insl movabs mov pushfq rex.B jle movslq je rex.WX rex.WB push loope jl,pt (bad) fsubr mov (bad) mov sub xchg and out shll mov xchg push (bad) cmp xchg int3 stos jl pop je (bad) xor jae mov xchg (bad) retq sti xchg pushq neg or loope in sti rclb mov sbb movabs (bad) popfq jmpq sbb (bad) (bad) rex movslq xchg cmpsl test adc rex.RXB leaveq addr32 int3 xor rex.WRB sub rolb adc (bad) sbb mov adc mov sbb imul addr32 addl shlb fdivl (bad) jbe movabs mov sbb xchg rex.RXB (bad) xlat mov xchg mov hlt add (bad) or ja xor loop mov fcomps fstps cs cmp (bad) mov mov (bad) cmovge xor shrb rex.WXB xchg fucom push in stos mov pop clc mov jnp stc loop out sub jge mov popq ja std je push (bad) addr32 mov sbb out lahf loope push loope (bad) (bad) rex.RX lods insb ficom sbbl sbb pop adc rex.X rex.RX fcompl rex.R repnz pushq sti jns je (bad) lret (bad) (bad) adc cltd retq outsl (bad) mov (bad) rex icebp sahf (bad) imul fwait xor mov clc fwait cmp cmc sbb rex.W fistp repnz sarl lret add xor imul sbb rex.R cmp movabs pop jl test adc shll add fwait xchg lret sti in (bad) rcr jmp fwait adc (bad) jrcxz jge pop fwait push sub decl (bad) rclb and out rex.X in fwait mov lock mov push out enterq std pop cmc (bad) xchg add pushq and test rcl adc fwait xor push xchg test sahf and pop cmpsb (bad) leaveq cmp jp (bad) shrl cmc loope fwait (bad) (bad) movabs xchg lods repnz or pushfq decb insb xchg std jmpq jmpq lods sub pushfq xor lock sub pop cmp pop adc pop addr32 mov cmp pop (bad) (bad) lret pop jae data16 addl hlt (bad) test cld (bad) mov fmulp iret je mov (bad) cmp adc clc pushfq pop or (bad) es jno jl (bad) jle rex.B loope,pt and mov (bad) mov pushq movabs rex.X data16 and mov fdivrl adc or (bad) nopl ror cmpsb rex.RX notl mov pushfq rex.XB rex.R sub insb xchg and add pop (bad) mov xchg (bad) jmp adc and fxch test mov cwtl jmpq sbb add rex.WRXB cmpsl xchg sti rex sbb adc fistl jg sbb cmp sbb movswl iret cmp xor cs jmp add fld out enterq xchg lods (bad) adc jmp (bad) mov fwait rex.WB xchg jbe adc xchg xchg (bad) rex.RX pop fwait pushq jle in fwait sarl lock push mov sub and rcr in mov jbe (bad) sbb cli mov imul jo fwait sbb jg xor mov push or push cltd mov shrb fwait jle push js addb rex.WRXB rex fistl fstps int outsb gs (bad) repnz xchg add fwait cmp (bad) lahf sub movsl fwait pushq test rex.W (bad) (bad) xchg xor scas mov scas (bad) sti (bad) rex.WRX loopne icebp (bad) callq imul movabs out insl sbbl lock outsb pushfq (bad) rex.WRXB fmuls rex.WRX push lea rex.WRB js in lret retq sbb jb xchg (bad) sbb pop add jbe or mov (bad) hlt jge sahf push repz rex (bad) push xor add xchg xlat pop pushq rcrl jb jl adc rex.WRX mov sti mov cwtl fwait rcrb add (bad) sub xchg xor push add rex.RXB xchg mov (bad) push loop in adc jbe push (bad) or imul cmc popfq fwait (bad) pushfq test lea scas (bad) rex.R loope fwait mov (bad) sbbl sub movslq adc sbb outsl fcoms es adc and cmpsb (bad) fwait ds test cmp (bad) repnz fwait mov shrl xchg addr32 sbb (bad) jns mov rcrl scas (bad) lret sbb jg outsl pop hlt fadds sbb jo movabs in (bad) (bad) out (bad) movslq jns sbb orl rex.WRX and jno xchg xor add mov test mov jl subb jge callq mov stc fwait mov sub mov and xchg js pop in ficomp rex.RB fdivr jp shll imul sub imul sbbl movb loopne (bad) cmp sub and sbb or jae loopne movsb out pop or out sbb sti scas pushq nop (bad) xor and test mov stos outsl cmpsb jnp sbb lock movslq mov mov (bad) callq rex.WRX ds repnz cmp cltd cld mov (bad) pop mov shrl lods movabs jl push xchg setne jrcxz cmpsl or add sbb hlt xor (bad) sbb jo movabs test rex.WR clc (bad) mov (bad) jrcxz cltd cmc out adc in shl js jmp pushq pop cmp jrcxz (bad) jne cwtl cltd (bad) test sbb mov or movabs movabs push xchg adc cmp sub movabs scas mov nop rex.WX ss pop in fstl mov and sub cmp out add clc cltd (bad) adc xchg (bad) hlt mov cmpsb rex.WB je int lea lock push fcmovne pop (bad) rex.WRXB movabs xchg mov rol sub int3 mov cbtw insb push (bad) out add xor (bad) push jle lea jns fnstcw mov retq and (bad) rex.WRXB cmp xchg (bad) jae fwait (bad) imul fs (bad) adc rex.X adc (bad) (bad) insb retq or jns xor cmpl adc rex fwait lea cltd mov rex.WRX fwait and test nop mov sub sbb movsb cmp fwait (bad) pop ror (bad) cmpsl int3 fwait pop mov mov (bad) out push lahf pushq xor jo lret cmpsb ja xchg retq sbb movabs adc pop rex.W loope test (bad) fwait mov xchg movabs test (bad) (bad) cld fwait mov jno retq lods sahf xchg or fwait rex.WX xchg mov mov (bad) mov (bad) cmpsl jmpq push fild stos rex.WRB jns rex.B (bad) mov jmpq out pop sub in (bad) (bad) sti fwait (bad) sbb pop add jno mov fsts fiadd fwait xlat xor push movsl add sub (bad) or fwait mov sbb fildll (bad) pushq rex xor (bad) add leaveq mov data16 adc fucomi sarb (bad) xchg (bad) sahf loop fwait icebp xchg rex.R std sbb rex.RXB push imul (bad) xor loope test cmp sbb pushq cli flds jns adc (bad) (bad) and xchg sbb and mov pushq jp rex.WRB rex.XB fwait imul icebp mov fisubr xor in rex.RXB nop and out jne fbld (bad) add xor jno pop and sub sub jge (bad) sti stc lea and xchg lahf (bad) or mov jo jmpq lods mov ss xor repz sub test fwait movabs jno cmp movsl or fwait add cmc movabs jb fistpll enterq mov (bad) fdivr lods (bad) rex.WB (bad) sti lods sahf push popfq lock mov lods sahf rex.WX movabs ja sbb xor out shll xchg jg jo (bad) lods adc shll (bad) icebp in (bad) fs test adc addr32 scas rclb adc xchg jrcxz scas jmpq or mov sbb sub push vpor cmpsb (bad) mov (bad) retq add mov leaveq mov fimull push mull add mov movslq (bad) (bad) jl out fistl (bad) (bad) sbbl cmp sub xor xchg pop cmp out add or fsubr insb fnstenv scas xchg movabs cmpsb adc shll sbb popfq (bad) jb faddl rolq mov movabs add xchg scas add clc (bad) sbb cmpsl loopne xchg pop adc mov (bad) insb (bad) stos mov rex.X jb movslq orb out clc loop xchg (bad) jo sbb ss in out jl mov orb jmp sub (bad) fdivs negl sub rex.R jnp rcll xchg fmuls shrl (bad) mov jbe jmpq pop jle fwait in (bad) and lret jno push and (bad) or fldenv rex.RB hlt lods ja or mov sbb lret roll (bad) jns and cmp fcomi lahf jmp xchg rex.WRX stos adc (bad) rcrl sbbb (bad) rex.WB fwait pop cmpsb xchg jae,pt (bad) rex.R imul push mov mov repnz fwait jnp rex gs adc rex.WR (bad) mov movabs add lret sbb leaveq mov in addr32 enterq (bad) cli cmp rcr or push fwait rex.WRXB mov cmpsb push (bad) push test sbb orl add pushfq retq fwait sbb xchg mov retq (bad) or (bad) loopne adc int3 push stos incl or in test sbb rex.RB (bad) add rex.XB sti in and lret mov (bad) loopne andl (bad) (bad) sti out lret pop (bad) ja,pn xchg in rex.WRB fwait int (bad) jno jg push sbb popfq ja out xchg pop rex fwait loop lret (bad) pushfq movsb jp gs sub sbb mov pinsrw adc movabs xchg add xor mov (bad) (bad) loop mov and add sar rex.RXB scas fwait sti gs stc adc adc push pop or (bad) (bad) adc (bad) sbb push cltd sub jl xchg fstl pop add sti rex.RX (bad) and callq pop (bad) ds push imul (bad) add rcrl jo out sti add mov mov mov xor fwait mov adc mov cmpsl fwait clc retq std fs jbe (bad) (bad) sbb (bad) xchg popfq callq rex.B mov jo jbe xchg (bad) push pop fisttpl hlt pop and fwait sbb insb rex.RXB addr32 je popfq pushfq sub jns sbb cmp pop (bad) divl fwait out xchg mov or mov (bad) fmull and cltd pop dec lock adc retq cld (bad) mov divl fwait lods sbb push (bad) out xchg fwait leaveq (bad) rex.WRX cs je sbb stc push fstps (bad) (bad) stos movabs sti gs jrcxz fwait rex.WRX adc sub lods mov jbe sub sub push sbb mov (bad) sahf sar mov fwait xlat mov movsb (bad) xor add mov es in mov or (bad) pop xor sbb movabs pop sub lahf cld scas xchg add or data16 (bad) pop repz mov pop xor out adc (bad) in mov mov fwait jo rex.RX sub (bad) xchg fwait xchg pushq or rex.WXB mov (bad) std jnp sti cmc push (bad) lea cmp adc xor fwait push (bad) xor scas lret (bad) sub lea rex.W repz out loope (bad) fwait mov int3 cmp fwait cmp cli mov fisubr fwait (bad) repz out (bad) std xlat cmp jbe xorb movabs sbb mov cmpsb xchg movabs lahf fistl cwtl lods sbb mov (bad) pushq scas mov cmp fwait (bad) movabs (bad) jae xor xchg out movabs xor (bad) mov (bad) adc imul (bad) pushfq mov sahf rex.RXB (bad) mov xchg lods (bad) (bad) sbb fwait rex.WRX xlat cmp std xchg rex or pop jmpq sbb lods sbb xchg mov (bad) ja clc retq stos xor ror callq sbb jno jrcxz lret sub (bad) fwait movabs rex.WRXB lahf xchg mov in sub jrcxz xor xor sbb pushq std retq xchg (bad) xchg test xor or (bad) cwtl mov test (bad) fistpl retq jp sub cld rex.RB add decl fwait scas (bad) rex.B shl fwait add (bad) sbb pop mov xor sti lsl sub (bad) jnp cmp stos adcl lods or mov ja std test (bad) (bad) movsb (bad) addr32 cli in out fwait cwtl sbb mov fwait (bad) push xchg mov movabs out jle fistpl xchg pop cli or sub jno (bad) ficompl sub jge (bad) out sahf sub sti jo rex.WRXB or fs adc lods lahf insl (bad) fwait lods push outsl rex.WRB rcrl pop push test outsb xchg movabs push sub jrcxz (bad) addl movabs int or (bad) jrcxz sbb or xor sarb xchg add loop mov int3 fisttpl repz stos jns rex.WXB in mov ficompl jnp mov loopne (bad) repnz pop mov lods sbb int3 cli repz cmp add xchg cmc rex.X pop pop sbb out adc fwait rex.RX rex.WXB rex.RXB rex.WB sti or fwait add xchg fwait or lea xor fwait and adc cmp jns fisub leaveq rex.RX sub andl adc in (bad) mov xchg (bad) (bad) jp mov mov mov fidivl rex.RX adc nop (bad) fimul mov mov (bad) mov mov mov or sbb enterq xchg (bad) fcompl (bad) fwait rex.WRXB xchg callq hlt sbb mov lret imul push test fwait (bad) sub int3 jne movsl xchg xor cltd jns rex.WXB lods jmp notb mov (bad) data16 jge out add jne rex.RXB mov popfq paddw or mov popfq adc fwait js xchg (bad) jle fwait mov rex.XB (bad) fbstp and rex.WXB js xchg (bad) jp (bad) (bad) jmp mov (bad) sbb or shl (bad) or cmpsl rex.XB sbb xor fsts xor push mov negl (bad) test xchg jge jle mov xchg and or rex.WRB repnz out lods xchg xchg testl negb and out retq jp sub mov xchg cld xchg jno mov out fwait fs (bad) mov sti mov movsb and (bad) pop ds test sbb clc fwait cmp push push pushq fwait rex.X (bad) lock push (bad) fwait (bad) rex.R movabs repnz rex.XB sbb scas add scas (bad) cmp jle or mov ds sbb lret sub mov sbb (bad) scas add fcoml in fwait mov mov (bad) mov cmp fcomp jrcxz mov in (bad) mov jno add xchg sbb leaveq xchg in movslq xchg gs mov ss cwtl cmpsl sbb (bad) cmc mov test (bad) and mov fcmovne loop (bad) leaveq popfq (bad) test mov loopne sbb pop pushq xchg sbb stos fcomip or pop loop (bad) hlt or scas jmpq jo clc retq (bad) adc rcll (bad) push scas mov pop xchg in push and sub mov cwtl pop movabs movslq movl xor movabs stos push xor add xorb callq sqrtps rcr fstpt xlat mov xor loope pop (bad) or scas sbb sub (bad) loop jg icebp sarb jle data16 rex.WRB rex.WRX xor lods xlat (bad) (bad) insl xor rex.WR rex.XB callq clc jnp rolb rex.W sbb add sbb mov mov xlat data16 xor jl fldt xchg movabs mov fmuls cs adc stc (bad) pop retq or mov pop cs rex.RB fbstp retq rex.WR rex.RXB sti loopne cld xor mov cld movslq ja xchg callq sbb rex.WX cmc (bad) (bad) lods cmpsb loope movabs cli imul ss popfq leaveq xor xchg jae in pop xchg xchg sbb xor fidiv rex.XB stc pop movslq (bad) sub xchg mov (bad) sbb and loop sub (bad) mov (bad) and fild pop mov (bad) rorl jbe mov cmp in rex.RB xchg (bad) cmpsb out mov out mov in sbb rcrb cltd out fisubr stos decl cld pushq sub push mov loope js sub addr32 mov rex.RB cmpsb movsl fwait push shl xchg pop es (bad) fwait xchg cmp gs push adc (bad) mov push mov cmc lret xchg (bad) xor add or cvttps2pi outsb jmpq test fdivl (bad) or sbb loopne xor (bad) out jmpq xchg jge jbe or xchg mov (bad) and xchg insb mov rorb movabs je and pushq push sti rex.W rex.WRXB (bad) (bad) xchg test mov or xlat jae add lods clc es int3 sbb in xchg cltd pop jge cltd movslq xchg xor lret xchg xlat sbb loop scas clc loopne mov xor jns out push or adc (bad) sbb imull fs xor (bad) out add (bad) lock rex.X retq fmull cmp xor out add jrcxz (bad) rex.RXB (bad) pop sbb sti xchg rcrb jns xchg notb adc xchg gs lods lea popq loope ss mov (bad) push xchg out rex.RX jrcxz lods (bad) adc jrcxz or or jrcxz xchg pushfq movsl add push and (bad) rorl (bad) lret scas mov adc rex.WXB jmpq (bad) (bad) (bad) cmp (bad) xor push sub enterq fstps movslq (bad) fcmove and lods std rex.WB (bad) fadd adc cmpsl rolb jae mov or push xchg in cwtl adc xor xor retq pop or in xor rcl pop (bad) mov (bad) push movsl scas scas cltd push sbb mov or and xchg lock jg movabs pop in mov mov jmpq pushfq jb xchg (bad) push frstor sbb pushfq push loope in rex.WRX and fildl (bad) gs fwait jbe mov xor js packsswb mov rcrb and adc rex.R scas rex.WX fwait xlat outsb pop in jb sbb sbb test js sbb (bad) (bad) jno jmpq cmp outsb sub fwait jg (bad) movabs or and stos fwait sbb xor insb fidiv fwait jge adcl rex.WB sbb (bad) ss (bad) repz (bad) popfq adc jmpq shrl pop enterq gs (bad) retq int in in fwait movsb xchg add (bad) (bad) cmc callq pushq repz jrcxz (bad) fwait cmp (bad) sbb pop mov (bad) sbb sar adc sub (bad) (bad) pushfq or sti repz (bad) movhlps sbb rcl jrcxz rex.RX (bad) movsl movl je mov cmp add cwtl in add (bad) pushq nop rorb rex.X addr32 (bad) xchg or outsb incb (bad) (bad) repz jl out out cmp pop jno (bad) mov scas (bad) jne mov mov addr32 push sbb xorl jae cmp (bad) fnop jmp (bad) mov (bad) stc cltd (bad) xchg xchg jmp rex.X icebp jl decb rex.WR cmp add mov sbb shll movslq out jno insb sbb pop sub (bad) (bad) (bad) xchg and jl push rex.WRB or leaveq fstl pop mov stos jns add xchg cltd rorb (bad) (bad) cltd (bad) imul cwtl cmp and faddl mov push data16 loop or jbe pop jge (bad) fdivs data16 comiss sbb pushq cli push rex.WXB xchg sbb repnz lods jle mov out imul mov shl out test or pop sbb shr xchg idivl (bad) adc rex.XB push mov sarb (bad) sbb (bad) out and stc cmpsl leaveq (bad) rex.WRX add cmp lock jae mov nop cld es (bad) movabs or lahf (bad) lock cmpsb lea iret mov in imul lcall test rex.W xchg (bad) out jno or or js pushq xchg (bad) adc pop out jp (bad) (bad) cmp scas (bad) xchg (bad) (bad) repnz adc (bad) fwait (bad) and imul ja shlb mov adc mov pop mov movsl je (bad) rex.WXB lods (bad) mov jno (bad) mov cmpsb xchg out out fwait add or test sbb ror data16 lea adc fwait lcall (bad) cli retq mov add (bad) data16 sahf sub cld mov mov fwait (bad) (bad) and lods in pop rex fwait clc repnz cmp adc fwait add jae add ds rex.WB movslq sti xchg adc pushfq push ja add (bad) mov rex.WR xchg (bad) fwait in jl bnd (bad) xchg fwait (bad) mov adc rex.WR xchg test clc fistp adc repz xchg repnz rorl cs sub jae jbe rex.RX test loope int3 jp (bad) enterq (bad) jno (bad) mov adc cmp repz movabs notb fwait rex callq gs pushfq adcl xor adc xor rex.RB rclb adc retq fwait xchg jmp adc fistp xchg fdivrl (bad) loopne (bad) rex.X (bad) xchg fwait mov out xor push mov repnz and sub xlat movsb (bad) fwait xor rex.RX mov cmp fmull cmc test js sub push xchg (bad) movslq jg add mov rorl std cld int3 cs (bad) imul (bad) sbb mov xor callq cli add xchg movslq (bad) cmpsb (bad) (bad) (bad) (bad) movabs xchg adc jl rex.WXB cs jns mov rex.WX xchg jle (bad) adc and je lret mov stos pop cwtl (bad) mov sub scas je (bad) or in js (bad) sahf imulb (bad) xor cmp (bad) sbb (bad) rex.WRB ljmp mov incl xor sbb (bad) (bad) rex.XB sub ds ja rex.RX fucom repz mov fnstcw (bad) or cmc mov retq rex.WX cmpsl rex.X mov pop (bad) push sbb mov cmp sbb (bad) imul xlat push cli std sub in xor jge jnp notl (bad) jg jno out cwtl and jrcxz fisub in or lods mov loop ja in cmp cmpsb cmp test (bad) rex mov clc xchg mov mov out rex.B sahf sbb xlat and nop mov or cwtl btr sub (bad) adc rex.WX sbb mov xchg (bad) jnp and (bad) or sub jnp retq mov icebp sbb xor jo (bad) out xor mov rex.RX adc jo sub pop sahf mov rex.WRX mov cmpsb mov xchg (bad) (bad) mov lahf iret xchg jg fwait imul jb pushq adcl add movabs movabs fwait iret repz (bad) rex.X (bad) cltd popfq rex.R sub (bad) cld (bad) ds fldenv jo rex.WR add mov gs mov xor loop,pt mov push out jns ja cs mov lahf (bad) xchg mov shrl (bad) (bad) sbb out xor leaveq ss cmp fwait insl jnp mov (bad) sub add ja fwait jl data16 loope ja xlat leaveq xchg movsb jbe (bad) stos (bad) test rex.RB std jnp jg xchg jmp (bad) jns mov (bad) (bad) enterq mov rex.RXB xchg jb,pt pop stc movabs imul lea and fprem (bad) ds mov push pop or jrcxz cwtl and rex.X add out int loop test (bad) ficomp repz push mov xor cmc out int3 mov cmpsl pop sub rolb rex.R (bad) or pop sub pop fwait pop add imul and xchg cmp (bad) stos xor (bad) shl adc rex.WRB sbb rex.X shll loop cmpsb callq popfq out sbb (bad) (bad) jle (bad) subl fwait (bad) in rex fwait clc push pop cs sub jmpq jp (bad) lahf ficompl loope iret pop sbb cmp ds int retq lock out std (bad) mov out popfq rex.X sbb rex.WRX add sbb mov shlb retq cmc (bad) clc fwait rex.XB mov shr xchg pop rex.WX (bad) cld fwait cltd lods mov rex.WRXB xor mov rex.R pop sub test repz cmp sbb (bad) cmc fnstsw stos mov add pop rex.WRXB (bad) cmc mov jp in mov out movabs mov loope fwait jle in (bad) mov jge int rex.XB rex.WRB (bad) rex xchg fwait sub pop push movsb pop sbb (bad) mov sbb mov fs rex.WRX out push pushfq sbb (bad) (bad) mov (bad) rcrb (bad) callq rex.WRXB sbb mov stos test imul movabs int3 (bad) rex.X fwait lcall lret fidivrl sbb movsl adc fwait mov jbe scas stos scas (bad) in lahf sbb or jae xchg mov sti mov push fwait addr32 or jmp and xor retq mov fwait cwtl xor movabs int sbb mov std sub retq jg mov (bad) (bad) retq int3 sbb rex.RB cltd std adc int fistl fstpt (bad) lods cmpsl in fwait pop pushq loopne fwait scas mov cmc (bad) insb sti (bad) movabs xchg rex.R jns fwait rclb mov pop mov (bad) xor rex.WX je xor xchg movsl or movsb mov mov and shrl push or pop (bad) fwait or (bad) fwait repnz pop callq (bad) xor js add or jmp enterq loopne rex.R imul (bad) sub mov sub xchg lahf xor adc mov loop test rolb and cmp (bad) push adc push rex.WR rex.RXB add sbb movabs add orl ds push sbb mov lods xchg in repz (bad) sbb rex.WB mov sti repz push (bad) mov and xchg xchg hlt cltd cltd lock lret (bad) jg rcr hlt in cli fistl rex.X stos mov retq (bad) cmp fwait sub pop rex.WB (bad) out gs and (bad) and cmp loope adc lea sbb (bad) (bad) (bad) (bad) mov (bad) jg mov (bad) out pop xchg mov cmc fidivl pop add pushfq (bad) (bad) std mov jmpq (bad) xor xchg xchg pushq and scas mov (bad) fadds (bad) sahf hlt (bad) rex.RB lret cmp cld mov fwait sarb loop jmp loopne sub cltd mov and (bad) fwait rex.WRX jl (bad) jb lea mov sub mov (bad) in cwtl push test lret add mov stc std xor not gs out imul outsb adc (bad) fwait in jmp imul ror push out rex.WRB xchg cltd rcr push mov (bad) popfq outsl icebp fwait jbe sahf xchg test mov or movsb out (bad) sbb fptan (bad) add adc xchg push jmpq sbb xlat test mov sbb (bad) out jl out out mov shrl repz or mov cmp cmpsb (bad) cmpl xchg ja rex.WXB xor xchg movslq xchg lret mov (bad) ficompl out rex (bad) pop (bad) clc (bad) scas push fwait (bad) adc sub cmc lods (bad) push pop sub mov cmp fwait (bad) pushfq xchg (bad) mov push rex.WRX fwait sub es rex.RB fistp jne ja xor sahf (bad) and iret repz rex.RX fmull mov mov fwait xchg ss fnstenv adc rorl cltd pushfq hlt (bad) and mov fistl mov (bad) ss jmp pop mov cld (bad) ficoml test xor out pushq (bad) (bad) (bad) mov movabs add mov xchg rex.R pop loopne pop mov (bad) outsb xchg cwtl rex.WXB sbb (bad) pop rex.RXB jbe insb stc mov xor (bad) mov sbb addl rex.WRB (bad) leaveq rex push sahf sbb rcr xor pop (bad) mov lret mov (bad) mov sbb loopne fwait pop (bad) rex.WR out mov pop (bad) test sbb leaveq decl mov (bad) cmp clc sub and fnstsw (bad) (bad) rol callq (bad) scas pop ja mov jmpq (bad) push jnp,pn jne mov fiaddl rex.RB (bad) sbb incl insb mov (bad) pop pop retq lock add sub cmpsb (bad) jrcxz push pop movabs movsb pushq fcomip ds mov xchg data16 repz cld mov outsb xlat push mov mov pushq jbe (bad) sub xchg push rex.RB (bad) add and add fwait movsb push sbb xchg mov rex.X sbb sub fldt in js or mov mov sti cwtl cmpsl cmp or lcall xor loopne jp jrcxz cmpsb icebp xor in xor scas xchg fwait (bad) ss jg (bad) rex.RX rex.WXB fwait icebp lahf cltd cmpsl mov fist clc rorl (bad) lcall sbb orb pushq (bad) mov pushfq push cmc (bad) scas sbb pop imul movslq xor ljmp xchg cs in rex.R (bad) leaveq (bad) sar stos outsl fbld cwtl sahf xchg and adc rex.WX rex.RX out movslq in pminub gs fstpt hlt xchg or lea xor mov sbb cld rclb (bad) or sbb sahf fstl addr32 sbb sbb mov pop (bad) cltd sbb rorb sbb jns push jg out jno rex.RX jmpq xchg sbb addr32 stc xor insl pop pop test mov out xchg pop jns xor (bad) push loopne (bad) cs in js cmp (bad) rex.WRX jno fdivrs fdivl add (bad) (bad) (bad) or test jp sti sbb mov pop lahf adc rex.X rex.WX sub out and (bad) xor cwtl push test xor insl (bad) jmpq cmp jge roll or stc lea mov xor rex.XB mov (bad) sbb iret mov rex.WRXB pop sub mov rol (bad) cli and sbb (bad) mov add popq or pop test in sbb fpatan xor xchg (bad) in add mov in int3 fstpl push loop cmp (bad) rex.WRX rex.WRX jmp mov pop xchg fstpl add mov (bad) xor sarl leaveq mov scas xchg cs test movabs sbb test push (bad) lods or sbb icebp cltd mov rex.X add (bad) or mov cltd sbb mov pop and pushfq (bad) popfq addr32 jns sbb iret cmpsl (bad) mov in idivl js in rex.X sub je fucomip add loope sti std jne cmp pop int3 xlat mov jle fild lock cmp pushq lods jmpq jne push lea (bad) stos mov (bad) (bad) outsb popfq movsb (bad) mov movsl and sub mov sbb loopne popfq adc sub int insl jb out fcomps negb movsl loopne push mov jl (bad) out xchg insb add push movabs stos movabs rex.WB mov push callq lea xchg js (bad) mov ja xor negb add (bad) adc jo cmc cltd pop fsub pop xor mov fnstsw gs sbb jb in jns leaveq push fucomp (bad) mov lods jp jno insb xchg scas cwtl sub scas jl movabs pop (bad) sub lods adc sahf (bad) out jp (bad) test pop fwait rcl loop sbb movabs (bad) pop fwait xchg test (bad) xchg mov adc pop je fimull mov push xor mov fbstp rex.WX sbb lahf mov mov fisttpl int or sub jo retq mov cmpsb movabs lahf int data16 mov fcomps icebp mov (bad) (bad) int3 (bad) add outsb stos xor movslq outsl (bad) mov mov fwait xchg idivb fwait sub rcrb or mov jmp mov movsb mov pop mov pop fwait push in pushq sbb and pop movabs (bad) sahf scas sub sbb ficom outsl lret jb cmpsb fwait (bad) push rorb xchg cli fwait neg cmp rex.XB rex.WRXB nop xchg jg js adc imul scas adc cmc retq (bad) or pop sbb and (bad) mov (bad) (bad) sub jl test cwtl lea xchg mov mov mov (bad) cmp jrcxz rex.RXB out sbb sahf int3 std pushq out (bad) in xor add xchg mov fwait pop (bad) addr32 ja loop lods leaveq rex.WRX fildl rex.XB notb mov mov lods fmuls xor (bad) sub fistpl xor movsl cli mov retq jge rex.B mov rorb loope lods gs or (bad) (bad) or (bad) icebp shrb sbb sub rorl popfq sub sbb lods icebp (bad) fwait repz push (bad) test in out test jns (bad) movsb leaveq xchg movl fwait sahf sti (bad) retq jle (bad) cld cmpb fwait not adc movslq es and out pushq or sbb fs mov jb cs cltd and pushq and sub rex.WRXB push fwait (bad) xchg xor movslq sbb (bad) rex.R mov rex.WXB rex.WX fwait mov gs fistpl ja sub adc ds (bad) loope stos cmpsb rex jb (bad) rex.WRB fwait (bad) cmp mov jrcxz insb out sbb mov or retq enterq test xor mov xchg sbb (bad) pop pushq cmc add xchg fdiv in fistpl pop (bad) (bad) rcrb cmpl mov subl fwait rex.B lret jmp nop (bad) fwait adc retq (bad) or jo iret fwait pop fsubrl rex.WRX fistpll rex.WRB bnd fwait andl xchg loopne (bad) sbb sahf pushq in lock movabs mov mov cltd sub ficomp add nop xorl (bad) out jns (bad) rex.WR bnd (bad) xor lret fsubl enterq in sbb mov out movabs adc push rex.WXB add cmp (bad) fwait mov and jmpq jo fwait rex.WX rex.RX lcall cmp stos mov rex.WRB or and iret (bad) nop/reserved sar pop hlt (bad) mov mov xor (bad) (bad) clc mov out jl or add mov mov enterq or je cmp push lret rex.WR sub xchg push clc xchg adc ja xor push stos lock xor pop rex.W xor movsl pop mov cmp fistpll test (bad) cmp cwtl mov mov ds mov fdivrs pushq and (bad) pop adc rex.WR rex.XB outsb sbb rex.WXB sub rex.R pop sbb loope sbb (bad) (bad) out sbb pop xchg cmp fstcw and loopne ss or xorl jrcxz retq imul (bad) fsubrl pop (bad) mov addr32 xorps rex.XB test (bad) and out or rex.RB push (bad) cld mov or pop (bad) cmc iret push sti in out (bad) jp or jmpq pushq lods add (bad) push xchg lock (bad) push xchg fsubr or (bad) cmp fildll (bad) or mov test fs mov push movsb rorl sbb imul mov rex.X xor (bad) rorb in rex.WRB out rex.X xor (bad) repz decb rorb pop jl push xlat jge xor (bad) or cmp sbb (bad) jge vaddss (bad) clc jg test xor mov scas lock sbb clc or push (bad) jae sbb (bad) imul clc xchg lock in add rcrb movabs mov and (bad) sub and mov out push or fistl rex.WR (bad) (bad) jno fwait pop retq mov xchg mov imul jmpq fistpll mov fwait sahf (bad) clc fs (bad) pop xchg hlt rex.WRXB fwait add pushq add push add and lret sbb rex.RXB sahf lock jno (bad) out add punpcklwd fwait cli and add cltd sbb sbb mov std sahf sarl shr cltd pop test sti jmp test outsl sti add stos fs sbb jns stc sbb mov xchg (bad) mov stos add cmp fisttp (bad) repz jno jmp xchg cmp lods sbb js out pop out add xchg (bad) mov (bad) lea (bad) or (bad) push (bad) repz cltd fwait stc imulb int3 outsb mov (bad) jrcxz stos mov xchg rex.WRB fwait (bad) mov xor xchg sbb mov in movabs or adc movsl mov pop add pop in subl adc or xchg mov sti movabs pop leaveq (bad) rex.WR cmp imul shlb fwait test fistp rcll (bad) mov mov lret jmp jnp (bad) (bad) movabs fwait sbb ficoml (bad) sahf xchg test rex.WXB cs stc (bad) addr32 (bad) xchg (bad) out (bad) out stos stos sbb rex.W fcmovne (bad) sub int3 sbb xchg (bad) rex.W std xchg cmp retq iret rolb xor sbb jo or fnop (bad) rcrl adc enterq in cli (bad) xchg frstor mov rex rex.B mov pushq mov jb xchg rex.RB or rex outsl insl fwait jae,pn (bad) (bad) out js ja push rex.WRB push sbb scas sbb add jl fucomp (bad) je (bad) jns outsl insl fcmovnu nop lods (bad) (bad) movslq mov fwait js lods popfq mov mov rex.RXB iret repnz scas cltd fldt rex.XB loop mov je mov mov mov xor fwait pop out fadd outsb pushq (bad) cmp cld (bad) ss fwait in rex.WRXB jle fstpl in (bad) je js repz (bad) xor subb cli (bad) rex.R fmul jae xchg sub fwait xchg or mov fwait adc imul sub (bad) dec jne sbb jmp insb test pushq int fcmovnb (bad) fcompl out outsl xchg fistpl jp test js sti test out (bad) mov pushfq rex rex.WB xchg fdivrp ss sub movabs fwait (bad) js,pn add fwait addr32 jge jnp rcl pop mov xchg fwait add or lock xchg xor (bad) or rex.RB (bad) pop je cwtl jnp (bad) stos add or mov add sbb lcall outsb xchg test jae fwait xor rcll (bad) shlb pop fwait jl push rex.WB fwait imul (bad) js (bad) fwait repz and cli ja (bad) xor jmp rex mov callq leaveq shlb pop pop mov cld pop (bad) jbe pop in fwait jg out cmp add or lret outsl (bad) jnp movabs add retq adc or and movsl icebp rex.WXB sub pop loop in jmp fildll sbb out mul jb (bad) fwait cltd (bad) fimul movabs cmp retq mov movsl (bad) sbb add rex.RXB fwait (bad) mov cmpsb repnz sbb in outsb sbbb hlt (bad) cmp pushq rex.R mov adc ja and add pop in movabs jl fwait rex.R rol xchg movabs (bad) loope callq popfq mov jg sti cld xchg out and pop int (bad) or sbb retq rcr sahf cli (bad) (bad) fwait lods pop mov fwait jmp cmp in sub fwait rex.RB rex.WRB xlat ds jno mov xchg rex.WR je mov add ss (bad) (bad) inc mov movabs lods rex.R push movsl popfq mov jge adc movsb jmpq lret rex.W rex.X fwait and xchg sub (bad) ds movabs fcomps (bad) rex.WRB (bad) jge rex.W (bad) ffreep fistl fwait stos xchg (bad) mov adc fwait sub lret pop int push add fwait xlat stos lock pop loopne out fistp pushfq movabs rcr enterq push rex.RB (bad) or push xlat rex.WRXB (bad) rex.WRB movsl cmc sti mov add rex.R (bad) sbb sub fcompl rex.WR cltd nop xchg stos sti push or sbb xor or (bad) or js mov xchg (bad) xchg movsb pop lret rex.WRB mov movabs xor jns rex.B push cmp imull xchg pop out fstpt icebp (bad) mov insl mov (bad) stos jmpq es rex.WRX push rex.WRXB repz ja rcrl testl cmpsl xor scas in xchg movabs push movabs sbb mov fwait fwait mov jmp xchg xor and clc sbb idivl xorl mov (bad) (bad) movabs es (bad) mov fwait (bad) (bad) pop (bad) (bad) je stc rex.WX sbbb orl fwait (bad) adc or mov (bad) fwait xor or data16 lock rex.WX repnz movsb sbb fwait orl sbb (bad) xchg shl pop rex.X fcompl repnz (bad) movsl and fwait push mov callq sbb cmp mov adc sbb add movsb cmp cmp rep test push addr32 pop in cmp movabs test int sbb mov fwait lret mov xchg scas invd pushq sub jl jle jne push out sbb leaveq sbb sub fiaddl mov sbb je jmp mov lock mov enterq pop xor or pop mov pop (bad) adc pushfq rex.WXB push (bad) xor hlt (bad) xor cmp xchg mov mov or retq adc divb sub xchg sbb push pop pushfq jl sbb pushq int ljmp pop sbb xchg mov outsb cltd popfq (bad) mov xchg popfq xchg rex.X pop cwtl mov cmpsl cmp sbb cmc pop sbb (bad) icebp (bad) (bad) jle sub (bad) xchg add xchg (bad) (bad) in pop (bad) (bad) adc xchg mov je cmp insb (bad) and or (bad) lret pop cwtl sbb (bad) rorb add ja jl jns xor loop scas sarb sti fld insb (bad) jrcxz (bad) and retq std cld cmp imul (bad) retq rex.XB movabs mov add (bad) xrelease rex.WB repnz cli xchg je mov mov fcompl (bad) nop lods (bad) mov xor (bad) and std xchg (bad) movabs mov xchg or in jae mov rex.XB (bad) rep (bad) jl adc rex.WRB xchg (bad) iret pop mov xchg (bad) out mulb rex.R (bad) (bad) popfq xchg push loop sub sub (bad) xor (bad) (bad) add (bad) or leaveq imul jns nop mov cmp rex.XB mov push insb clc add add mov or and mov mov xor sahf pop stos pushfq es fucomi ss pop xchg rex.RXB mov fwait push rex.W cltd rcr leaveq in insb or lea mov rcrb hlt addl ror sbb mov fdivr fsubl xchg sub (bad) sub (bad) sarl mov xchg callq insl (bad) xchg rex.X test rcll mov addr32 or adc pop rex.XB cmpsl (bad) sbb (bad) movsl jge (bad) (bad) (bad) hlt test xchg add jnp jp and pop fldcw cld add lods fcompl pushq mov cmp or pop (bad) mov test (bad) jno cmp ja rex.RX sub jp retq (bad) mov (bad) data16 addr32 fild cld or xchg sbb cmp mov sahf cmpsb pushw xor push xchg cld mov add or or rex.WR rex.WRXB adc (bad) sbb popfq pushq rex.RB or push jo jl lea mov (bad) mov jrcxz xchg (bad) lret sbb nop negl scas mov xlat (bad) rclb pushfq (bad) addr32 pushfq rex.B xor mov in fwait out lret add (bad) add rcrl xor sbb mov stos adc rex.R cmp sub test fwait adc (bad) or in (bad) imul out lret sbb fwait std mov mov movabs (bad) es rolb js rolb jb jae,pt or add (bad) xchg (bad) in test rclb mov cmp iret jne sub mov (bad) sbb stc (bad) (bad) mov xchg sahf repnz in int pushfq test cmpsb and fs test in push (bad) (bad) out movsb movabs es popfq in push rcrb rcll sub outsl adc adc mov sbb (bad) sahf xor movsl ds out sbb jb int clc (bad) fucomip add retq and push (bad) rex.WX pop fwait mov stc test mov hlt lahf (bad) (bad) out fwait cmp cmpsl in lea jp add cs scas cltd adc pushq xor fwait jp add rex.RX nop cmp and mov fwait xchg xor xchg icebp lahf adc jrcxz jbe in sti or adc push and in rex.RX hlt scas je callq jl sbb cmp (bad) sub jle pop rex.WR rex.WR add andl (bad) mov mul or mov pushq rex or iret test cmp (bad) loopne mov mov insb insl outsl pop callq mov loop imul test fldt stos pop imul rex.WRXB testb popfq sub retq iret cmp and (bad) hlt (bad) popfq (bad) cmc movabs (bad) pop xchg (bad) test jmp mov sbb rex.WB rex (bad) add cwtl jg fwait int3 sbb sbb (bad) scas xchg repnz cmp lret std imul adc mov or addr32 fwait movabs mov jle movsb or movsl negb xchg (bad) fndisi(8087 sahf (bad) rex.WB jg (bad) iret nop movabs hlt (bad) fwait cmpsb icebp rex.WXB lods faddl adc mov fnstenv loope lock fwait mov jp enterq sahf mov adc and xchg push fistp or push mov loope lock sbb jnp jbe lods (bad) fildl xchg fs push or lret add lahf adc lods scas cwtl xchg fcmovnb (bad) mov shrl push movabs data16 fwait xor cmp mov and (bad) (bad) adc adc out imul movslq fwait je cmp es cmp xlat in mov push (bad) cwtl loopne movsl and adc jns outsl xchg movabs rex.WXB rex.X cmp ss adc fwait push adc imul int3 xchg lahf mov (bad) rex.XB add fwait rolb mov rex.WRXB mov jle icebp cmp xchg fwait movabs rex.WB (bad) sbb mov scas pop mov (bad) fwait notb jp pushfq mov jmp and sbbl in fwait push xchg sbb es loope sbb movsb repnz lock movabs (bad) shrl (bad) rex.WR rex.X repz (bad) stos gs pushfq (bad) xor lret rex.WR mov cs pop adc test scas out sub popfq iret jrcxz fldcw push fwait sar gs mov lret mov cmpsb orl (bad) cmp jl sub scas xchg sahf (bad) fwait mov insb rex.W loopne (bad) (bad) nop (bad) test lock (bad) (bad) lods fwait or xor xchg rex.WRX (bad) btr gs in out icebp stos fwait mov add xchg xor adc (bad) rex.RB jge sub movsb ja xor rex.WB out fildl or scas rex.WR test (bad) (bad) fwait rex.RX jo clc jmp stos (bad) rorl rex.WRXB mov mov in movsb fwait adc push jnp std popfq xor imul lock stos int in add mov (bad) xor pop rcrb fwait jbe lret (bad) (bad) rex.X out fwait repz cmc fist pushfq jle sbb xor negl (bad) sti jno sbb retq jns movabs sbb ficom addr32 xor (bad) push adc imul mov movabs fdivr sbb lods fwait retq fistp lahf mov (bad) fwait (bad) sahf test adc stos sahf xchg (bad) frstor in mov and mov adc and std stos fsts fwait xchg jmp movabs data16 cmp xchg xchg mov cltd mov push rol pop xor (bad) mov jne adc rex.X jne fwait retq rex.WRB repz or lea negb or fistp xchg scas retq xor fwait add fsubrl (bad) mov sbb rex.X jmp rex.WRXB add pop mov (bad) fwait jbe out in (bad) out jb (bad) xor fwait shrl lret iret outsl sbb add callq adcl iret (bad) (bad) xorl movsb jnp jg sbb (bad) xor sub fnsave imul xor enterq jmpq mov rex.WXB xchg mov (bad) clc (bad) fwait retq rex.X cs imull ficompl enterq rex.WB rex.RX adc fwait clc fdivs lahf mov lods push in es sub jmpq xchg movabs rex.WX (bad) and pop mov adc or pop callq imul jge adc lea movsl xor lods mov fwait retq push adc sbb lret rex.RXB mov popfq ja pushq sbb stos jno rex.RXB mov ja cmp jbe sbb (bad) cmp (bad) pop std push cltd popfq movabs jl pop stos adc movabs scas or jb adc stos lods jrcxz movabs push and fsts fwait mov (bad) fwait insb callq rcrl xchg repnz test cmp pushfq cmp (bad) rex.RXB fs movabs mov (bad) cwtl andb out sub jrcxz rex.WR rex.W fwait retq add out fiadd fwait or or xchg (bad) int (bad) (bad) insl loop leaveq push pushq cltd mov clc lret mov lods fwait hlt stos adc shlb retq mov fwait or shrl sbb jmp push mov add pop cmp or pushq pop xor mov xchg lods js enterq gs cmp clc repnz adc adc mov data16 lcall fildl mov add scas fmuls out fwait add push (bad) mov cltd frstor xchg xchg (bad) cmp retq scas sbb ja sarl fwait divb jrcxz (bad) mov rex.WRXB rex.XB (bad) sbb sub iret rex.RX jbe movabs cmp rex.WB fwait cmpb movsl fwait (bad) fidiv xchg push sub (bad) loope (bad) in sbb rex.WXB icebp fwait std rex.WRXB mov int3 adc cmp sbb (bad) sub test jmp rex.RXB jp push add add sti cmp mov lahf xor pop pop movabs mov pop add lret (bad) movabs sub jo leaveq push or adc fwait callq pop movsl outsb (bad) fucomi in cmpl js xchg idiv cmp and jrcxz pop rex.WRXB stos fwait jp push fidivr negb rex.WRX fwait out pop (bad) xor fucomp and outsl or int3 decb cmp mov cmpsl mov (bad) and mov clts jnp rex.W ds addr32 mov callq fwait jle rex.R (bad) (bad) or add jno add data16 adc cltd nop rex.WRXB js in stc cltd sbb test and jl cmc sbb sub mov jb cmpl rex.WX ja imul cmp jge enterq sub fucomp sub jno xor jg in or cmp mov sbb cwtl jbe sbb retq scas adc xor mov out test negl mov xchg fmulp jbe fidivl or (bad) mov fwait mov cli enterq fisttp fwait (bad) sub add fwait (bad) retq jge sub jrcxz sti vminpd jo movsb (bad) mov cmp sbb xchg rex.WB push data16 xor insl pop jae out movslq mov cwtl add sahf cmp gs sbb jnp jae xlat out (bad) push xchg stc (bad) std fwait push (bad) mov lea rex.R (bad) lret push push fwait mov scas pop add or and mov in fwait or sbb or (bad) push fsubrl mov cmp sbb xor jp ds sub sti fildl jrcxz rex.WXB sub (bad) adc pushfq retq not mov sti imul mov iret in and bnd fistl out sti cmp (bad) mov stos mov adc mov jl jmpq outsb cmpsb fwait (bad) adcl (bad) pushfq xor pop int3 es rex.WRX fwait xchg movabs mov sbb out cmc jbe xchg (bad) movabs fnstenv push repnz fdivrs mov mov (bad) (bad) push mov icebp testb rex.WRB (bad) xchg (bad) imul rex.X insb adc cwtl (bad) sub mov mov (bad) (bad) jg add (bad) adc in (bad) getsec fwait cmp mov insl sti mov cs fildl cli out fwait jns sbb (bad) (bad) test adcl out sub rex.WX mov add (bad) adc outsb fwait push out (bad) enterq nop sbb rex.WX mov movsb (bad) (bad) (bad) fwait sbb ja cmp jmpq (bad) (bad) xor add loope add mov test mov scas sbb pushq xchg xchg pop cmp rex.WRXB mull jle jns push jb fsubs loop cmpsl rex.WRX rex.WRXB (bad) adc rex.WB ror mov loope test (bad) sub pushq or lea xlat fldl fcoms pushq xlat push xor std or ds mov (bad) repz (bad) out mov sbb movabs adc pop xchg rex.WX mov (bad) cmpsb sti test xchg rex.WRXB cmp rex.B retq adc or pop sbb or pop and retq fcomps push nop imul jl out retq movslq add ds sbb rex.X (bad) rex.WXB ss iret fwait adc xchg fwait (bad) rcrl jp icebp add cmp mov rex.WXB pop add sub insb and fild scas outsl (bad) (bad) out pop (bad) (bad) add (bad) adc fwait push or (bad) movsl (bad) lret cli sahf cmpsl ffreep in xchg (bad) movabs rex fwait jae movsl push loopne testb mov andb cmp fwait int3 adc adcl lea sbb (bad) mov add ja iret fstl xor (bad) roll out es rex.WRX rex.WX pop lea xchg sbb sub ficom or test add sub rex.WRX je (bad) rex.R frstor jrcxz movabs subl test mov fwait sbb lods jne mov mov cmpl sbb fmulp mov or jb test cmp lret scas jo in rcrl imul sub clc (bad) imul xchg fwait (bad) and (bad) push sbb mov (bad) movsl lea es (bad) rex.WX fwait push pushfq sub lods fwait jmpq lret xorl in xor cs pop add fbld jno in xor adc lret jmp lahf rex.WB addr32 addl and fistl fwait mov xchg adc xchg sub outsl (bad) mov std sbb jne rex.B or retq cmp add (bad) cli orq mov (bad) fimul rex.WXB loope (bad) movabs jmp movabs push in xlat xchg shrl lock fldt cmc hlt (bad) xor and (bad) (bad) addr32 retq (bad) (bad) mov movabs fwait cmpsl movabs fwait jle pop (bad) sub (bad) mov insl add loop fwait mov pop cmpsl lret loopne stc mov cmp sbb (bad) jae rex.R fnstsw sti fnstsw and fwait movsb movabs rex.X sbb lret test movabs in jmpq add imul mov in (bad) mov in ss callq retq or fwait (bad) in fwait adc rex scas (bad) out (bad) (bad) cmp mov rex.WRB insb cmp (bad) movsb (bad) stos iret imul sbb (bad) decb outsb rex.RX (bad) movabs (bad) mov xor mov insw pop fwait cli mov stos jo xchg (bad) sbb or push std sbb fcomp xchg rex.RXB add ja push (bad) xor jp rex.X fwait mov (bad) (bad) xor sti loope mov mov loopne jno push pushq out fcoms or stc scas loop xor add or sbb cwtl test movsl sub (bad) push (bad) enterq cmp mov mov rex.WB (bad) push (bad) std fdivl (bad) sub jle fwait (bad) and jae je add or fisub enterq repnz mov fnstcw iret in sbb nop rex.WR (bad) (bad) and xchg (bad) stc retq retq fistp jnp adc (bad) mov (bad) xchg push adc rex.RX sti rex.WXB rex.X in lea fist xchg push add fwait movsb sub (bad) test rex.WX (bad) sub fwait xchg test test movsb insl fwait pop lret (bad) movabs sub rex.RXB fwait xchg test (bad) fidivr ds rex.WB fwait jo out movsb cmp (bad) (bad) jge add fcmovnbe out in xchg lret scas test pop sub icebp fwait jbe lea (bad) mov or movslq sbb (bad) gs fstps jg scas cmpsb sub (bad) pushfq movabs lods xor cli sbb (bad) mov pushq movabs mov cmpsl movsb stc xchg out cli out (bad) in push cwtl ss rex.WRB movabs (bad) faddp jno int3 lods xlat mov mov xabort js jo ss iret rex.X vpmulhw sbb or sbb push and and fisubr adc scas mov pop jb (bad) jp iret push es (bad) cmpsl and add (bad) incb orw cs ficompl sbb (bad) jmp in jl jl movslq callq rex.WX add pop jle imul loop movabs sub add movsb add repz (bad) xor (bad) faddl in add xor fildll sbb jae cwtl in xor cwtl fcmovnbe in jle (bad) xlat mov (bad) and sbb jrcxz xchg jmpq cli pushq mov shll pop (bad) rex jne cltd mov pop lods mov pop (bad) add leaveq mov (bad) rcrl sbb and lret cwtl xchg push loop rex.WB lock (bad) test test rex.RB and (bad) push sub (bad) xchg (bad) sti int3 adc adc xlat mov rcrl cmp loope xadd adcl xor out jns sbbl sbb mov add rex.WRX movsl pop fwait test retq jmpq xchg lret out (bad) sub fwait and pop mov cmp movsb insb rex.WRX xor pop sbb test in repnz out (bad) cmp xchg retq es cs (bad) fwait xchg xchg (bad) jrcxz mov movabs xor (bad) cmp repz and (bad) in (bad) cs mov sti (bad) sbb (bad) retq mov cmp and mov out jg sbb sahf outsl fwait mov rex.WRXB sbb movslq sub xchg pop out (bad) (bad) lods sub test sub (bad) nop stos jl mov pushfq retq ja (bad) loope adc and mov rex.WRXB repz (bad) mov mov (bad) jle (bad) stos fwait adc sbb es rex.WRX fistp mov jmp xlat stos (bad) (bad) fwait (bad) in lret push adc (bad) fisubr sub sub repz (bad) push mov mov pop test xchg fildll add xor mov cltd lods and outsl xchg (bad) fwait shrb sub (bad) rex.RB jns or (bad) cmp fwait mov in mov sub je and adcb cli (bad) push out movabs movabs fiadd cli cmp fcompl cmp sbb (bad) (bad) sub lea cmp repnz imul nop rex.WRB add xlat adc adc xchg movsl imull rex.WX push (bad) adc rex.B (bad) mov and and lods mov outsl popfq retq movabs in sbb (bad) or cmp pop lret hlt sbb push jle or or pop out pushfq rex.RB (bad) sarl (bad) (bad) ja mov rex.WRX xchg pop jnp in fstp rex.WRB fs jo pop stos test rclb cmp cld rex.X push (bad) fild xor pushq movabs mov (bad) sub mov (bad) (bad) movsl insl xchg andb mov (bad) (bad) rex.WRB es push lea jb push sbb cmc out jnp test lods xchg stos fwait cmpb rex.RX rex.RX ss cmp or ja mov out (bad) push jmp fwait cmp out mul fiadd rex.WRX imul adc xor repz fidiv fadd sarb sti (bad) fwait xchg rex.WR add mov rex.RXB fwait pop mov (bad) out adc mov cmp loopne in pop jno gs (bad) jge rorb loop fwait cmpsb insb xchg push out mov sub jmpq jrcxz sbb hlt cmpsb sahf ds cmp callq push sbb pushq sub (bad) leaveq out jle rclb cmp stos jmpq and xchg cmp movabs in xchg (bad) lret pop sbb pop mov popfq add addr32 jge callq fwait mov jbe rex.WRXB movsl outsb add add jnp sbb (bad) mov and sbb lods stos push jp jge add or repz (bad) add loopne xchg movabs adc gs (bad) fisttpl cmp fwait xchg or mov xor lret or add fwait in or imul (bad) lea cmp out add jae pushq xchg leaveq popfq (bad) rep fwait lock push test insl movslq stos or and rex.WRX (bad) xor mov mov (bad) in (bad) mov xor mov movabs pop fbld fisttpl (bad) mov fwait stos rex.WB test rex.RXB (bad) adc fbstp nop or jmp stc add loope stos (bad) pushq xor (bad) sti js test (bad) (bad) es fwait gs sub fnstsw rex.RB cld movabs adc mov loopne add cltd mov (bad) fwait xor ljmp fwait jge (bad) lret stos sub nop fwait icebp (bad) movabs add and nop in lods imul cs jrcxz cmpb scas sti insb (bad) xchg and jo sbb mov push mov rex.X enterq mov je ficom xlat imul callq xor movabs mov mov retq sbb or ror cmp rcll xor sti sbbl xchg (bad) xor (bad) adc xchg mov cltd js push adc ficomp fs or rex.WX jbe fstps cmp jle sbb (bad) int3 mov stos lret xor out add or fs rex.W mov out retq push lahf leaveq sti (bad) stc sub xchg out push (bad) jno data16 rex.WRXB add (bad) je mov retq in fwait jne movsb rex.WRXB mov sub rorb sub (bad) lods retq (bad) xchg in subl in mov hlt fwait mov fwait jbe rex.WB out (bad) cmp loop rolb fwait (bad) jle insl xchg pop fmull and fsubrl (bad) stos jmp scas std (bad) stos jnp xchg jo sarb cmp or in sarl and (bad) rex.WX mov clc nop lahf lea or (bad) scas mov pop xchg std cmp adc sub pop mov (bad) fnsave cmp ror pop repz (bad) rcrl and movslq xor fwait push jle sbb add loope xor je mov sbb sub popfq jg pushq rex.XB sbb jmpq andb fwait out retq and (bad) (bad) mov jnp rex.WRXB cmp cmp xlat add push cmp int3 xchg loopne insl ror sbb in movsb xor push orb out pop cmp stc (bad) push xchg or (bad) sti movabs ds rorl mov cs mov out sti xor lret fcomps fcomi cmp out adc fisub rex.WR (bad) (bad) lods shrl fmul cli cmpsl lret and cltd (bad) xor cmp xor pop fwait addr32 in fnstenv cmpsb scas xchg fwait pop (bad) pop rex.XB xchg scas rex.WRB outsl in pop cmp pushq in nop fwait mov ficomp sbb jge cltd rex.WR sbb add lret add sti fidiv movslq xor add movabs mov push in (bad) out sbb shlb xor xor jae test retq fwait (bad) leaveq rex pop int3 (bad) jae sbb and mov or scas xchg xchg fucom outsl add mov jmpq (bad) xchg (bad) push mov negb (bad) out mov (bad) mov icebp movabs jnp orl rex.R addr32 (bad) xor sub pop (bad) sbb (bad) cwtl sbb add movabs jmp movabs rcrl jns xor xorl subb pop mov mov imul cmpsl adc jmp in cmp rex.XB lods es xor notb (bad) loop mov and lret movsl sbb sub movabs and fadds out fwait xlat pushq imul or movabs sub add fwait pop mov push adc and add pop xchg adc and stos mov imul pushq mov (bad) hlt outsl fwait movslq jmp test add sahf notb or xchg in faddp test mov mov (bad) (bad) pop adc mov (bad) jl xor (bad) sti movsl xor rex.WXB scas adc and pop es (bad) jmp jae and fwait movabs xor jg scas (bad) popq int3 mov cmp xchg lock rex.WX fwait scas (bad) mov (bad) (bad) jae fwait mov rcr (bad) xchg and fwait add (bad) or out stc rex.R pop in popfq jnp rex.WRX jns cli jb callq (bad) rex clc sbb pop jrcxz lsl pushq and fildl pop (bad) shlb sub jne sub xor iret fwait sar lods mov pop (bad) (bad) jb rorl (bad) fwait and or mov test (bad) push (bad) adc rex.WRXB lock fwait and in jrcxz add in fwait retq push (bad) adc mov stc rex.WRX idivl adc sub insb rex.RX or insb (bad) in (bad) sbb (bad) scas (bad) push jns cmpsb insb fwait (bad) jnp add movabs mov xor je push iret fwait mov sub push xor shrw xchg rex.RXB pop push and retq testl movsl jbe rex.RB out xchg mov (bad) lret jle adc loop cltd mov pushfq (bad) xor test ds mov pop and mov mov jne jle jmp int3 sbb lods mov mov fdivr rex.WRXB sarl jb (bad) fistl sbb stos (bad) jno rex.WXB fwait adc jne push cld test scas xchg pop js sbb pop jmpq xchg sub jo (bad) in out sub push or shll mov adc jno movabs and cmpsb fistl lea (bad) (bad) js out rex.B pop or jbe add (bad) cmc lods jne mov cmpsb xchg cmp ljmp lock fistl data16 mov in push jmp and lret fisubrl push mov rex.WX sbb imul insb scas rex.X shl mov rex.WXB rex std lret es xlat sbb mov movsl mov sbb xlat imul pop push sbb (bad) sbb (bad) (bad) fsubl movabs jns jb xchg mov rex.RB (bad) xchg xchg loope pushq pop (bad) xor fistp (bad) mov sbb sub push fsubrl jp fs mov push flds mov mov int (bad) jge gs cli movslq sbb jg loop (bad) cltd insl std (bad) (bad) cmp and xlat stos xchg (bad) sbb pop imul pop repnz (bad) rex.WRB sbb pushfq and sar rex.XB cmp movsb rex.WR rex.WRB and jrcxz loop imul mov lret (bad) stos (bad) rex.RXB mov and movabs icebp fistp cwtl addr32 mov xchg adc xchg shrb pop out cmp mov sbb jrcxz movabs std movsb out rex.WRX lea js jo (bad) clc (bad) mov addr32 and outsl mov xchg (bad) pop lock cmp sub cmpsl adc push int3 lea (bad) sarb lods outsb jne pop rex.XB in (bad) (bad) mov pop rorl (bad) xor (bad) push imul jmp jle jrcxz fwait es adc or jnp xchg (bad) mov fwait mov add mov mov mov fwait in retq (bad) push pushq rex.WB fwait pop stos (bad) je nop mov scas adc and xlat negb mov pushq sbb int fsubrp rex.R in add (bad) mov fwait fs xchg fstpl lods int3 xor icebp (bad) xchg jg (bad) (bad) lret cwtl (bad) mov imul adc cltd or lods (bad) jno mov fwait shrl (bad) lret in xchg add pop fwait cli sahf push in scas xchg sbb in fs movslq retq lods fwait stc jbe (bad) stos and enterq jg pop (bad) jle (bad) (bad) fwait mov cwtl xor fwait pushfq rex.B (bad) cmp in rex.WRB (bad) add nop sbb xor or fwait (bad) (bad) stc jnp retq jnp cli lea mov retq fwait and push jp (bad) jl sbb add fwait pop mov fs sbbl cli (bad) rex.WR jg jae retq int cmp cmp movl hlt rex.RXB rex.X pop je (bad) xchg in push (bad) adc lret (bad) fstpl jp pushfq cmp push sub popfq movsl fdivrl (bad) (bad) rex.WX lock callq fnstsw rex.RX xor sbb fwait mov rex.W mov js cmp mov rex.RX fwait movsb jp test xchg movabs fcomps loope rex.X pushfq fwait jmp cwtl jg out lcall sub movsl std (bad) popfq scas retq fwait int mov shrb jns in xor test rex.XB mov retq btc jnp jle or out cmp jnp fildll adc pop mov test xor stos loope mov out movsl pminsw and insb sub push outsb pushfq enterq xchg stc movabs mov movabs out xchg and loop rex.XB or enterq or xchg mov in addr32 (bad) sbb sarl js add cmpsl pushq rex.RXB (bad) rex.WXB movsb xor lock push in rex.R cmp pushq pushq cmp mov je (bad) add (bad) (bad) xchg stos callq (bad) (bad) xchg (bad) out cmpsl imul xchg push lods roll rcrl pop ja adc adc scas or (bad) jbe stc (bad) iret (bad) (bad) out cwtl add or jp shrb fcmovnu adc rex.XB add jb cmp stos mov adc (bad) sbbb mov movabs fildll rex.RX (bad) std jrcxz mov xchg mov (bad) sbb mov jmpq sub sbb test rex (bad) retq shl sbb rcrl retq scas mov ja rex.RXB jrcxz (bad) js sarl adc movslq ss sarl adc xlat mull jrcxz (bad) test (bad) int and movsl int rex.W xchg pop and mov xor xchg jne movabs xor pushq pop (bad) loope (bad) rex.WR cmpl pop mov nop sbb and rex.XB sbb fidivl xlat adc hlt and lcall movabs push add pop xor scas (bad) (bad) (bad) lock ror mov pop shrb insb jle (bad) (bad) jo fnstcw cmp cmp lods (bad) mov rex.XB gs xor mov rex.RXB or fidiv adc std and rex.WRB cltd (bad) sbb jo mov cli movabs lods mov lret fldl sbbb insb (bad) mov and (bad) fwait mov fxch stc popfq sub cltd jo (bad) cmpsb fwait pop cmp movl or (bad) loopne sbb (bad) (bad) pushfq and fwait xor xchg rex.R fwait (bad) cli and pop mov or fildll sub and pushq xor sbb rcr idivl push lahf sbb push scas sti xor gs mov push sbb xchg data16 jno sbb and sbb std rex.WRXB add xor mov push mov sti insl lods sbb lock xchg jbe pop sbb pop stos fcmovnu mov callq sub (bad) push lahf cltd popq out mov (bad) ja jnp pop jo retq callq (bad) xchg and (bad) fwait cmp mov (bad) mov rex.X fwait and and sub xor and sbb xor mov rex.XB faddl gs xor sbb pop jrcxz add add fwait test rex.WX xchg cwtl sbb jae (bad) (bad) jg pop stc rex.WRX lods rex.XB rex.WR pop fstpl cmp hlt sbb addr32 push jle callq (bad) mulb shll addr32 sub sbb retq xchg add mov (bad) out mov fwait outsb (bad) rex.XB ss (bad) movabs js (bad) adc stos rex.R setne mov xor fwait and jge loopne (bad) cmp sbb jmp fwait mov (bad) pushfq clc rex.R sub (bad) sarb fwait (bad) xor add adc (bad) (bad) cmp add cmpsb fwait jg xchg push rcr sbb add callq sti push hlt pushfq addl add divl cmp xlat sbb mov (bad) mov jrcxz (bad) incb and lahf push jmp add mov sub enterq test (bad) and add add in int mov jae in insb pop and cmp test stos sub fs fwait (bad) (bad) pushq push mov pop fisubl movsl clc test rex.B push adc mov xor sbbl fwait xor mov lcall stos lock fstpl jb lret (bad) stos mov je imul rex.W rex.XB rex.WRB loop (bad) jae add jl icebp fstl (bad) movsb (bad) xchg cmpsb cmpsl insb fisttp rex.WRXB mov (bad) (bad) sbb and cmp or jno repnz ja andl xor shld (bad) xchg xor std rex.R (bad) xchg faddl mov (bad) xor add insl je push (bad) sbb in rex.WRXB fwait clc js (bad) mov push mov and sbb cmc or lret retq (bad) pop movsl push add xchg (bad) mov pop sub in or and rex.WRB stc fs xchg pop frstor push ss pushq movsb fwait rex.RXB mov xchg fnsave jl fndisi(8087 in (bad) mov or pushq (bad) and mov xchg jb cltd ficomp (bad) (bad) jbe (bad) addr32 sbb pop add lret ss cmp movabs mov (bad) lret rex.WX cwtl fcmovne repz movabs fisub jmpq sub rex.RB mov (bad) push mov sbb jmp movabs (bad) mov push cmp sbb mov rex.WR in or rex.WR jno sbb sbb or pushfq (bad) pushfq retq mov jge cltd push neg adc rex.WRX cs mov outsb and xchg mov pop adc adc movabs jo xlat movabs pop cmpl lret mov jle sbb fwait data16 popfq pop imul (bad) push xchg (bad) fidivr cmp or fwait ja adc fdiv sbb xchg popfq mov xchg and sbb bswap mov (bad) test mov in jrcxz fwait movsl (bad) pop mov repnz sti add sub rex.RXB fwait pop movabs outsb je retq jl rex.B (bad) mov mov (bad) (bad) movabs ficomp jg xor jae mull movl push fwait mov lods sahf adc lahf stos stos nop (bad) out movsl fwait (bad) add and leaveq sbb std sbb (bad) jbe mov rex.X in fistp popfq (bad) fmull clc jle lods ds and push push addr32 hlt sbb xor rorb gs rex fwait adc mov int (bad) lea movsb cltd repz mov sbb lods fwait (bad) adc orb sbb iret idivl or pushfq lret movsl (bad) sbbl stos (bad) test in hlt clc addr32 sbb imul incb sbb pushq mov or leaveq mov jae push rex.RX xchg nop xchg sbb ffree ja movabs sbb cld (bad) fwait (bad) mov jo jg xchg cltd mov stos fwait pushfq xchg xor xchg (bad) (bad) sbb push int3 (bad) or rex.RB mov pop imul jae test (bad) sbbb movsl mov loope fwait pushq push (bad) push fwait sub rex.W xor mov (bad) or shlb (bad) movsl mov mov leaveq pop pushq jle (bad) retq (bad) (bad) (bad) movsl (bad) mov lret rex.RXB and adc test or or jmp hlt sysexit (bad) fwait push imul cmpsb mov mov sbb push fxch mov xor (bad) (bad) rex.WRXB xorl (bad) retq (bad) ss roll orl xor (bad) mov fwait movabs (bad) jmpq orb push pop pop (bad) sarl enterq sahf sbb push fimull jbe fwait ss jrcxz pop jo insl sbb push pop xor xchg pop or mov scas iret cmp movabs jp sub shrb mov xchg fistp test sbb in cmp gs (bad) (bad) xchg add sub lcall jnp lods addr32 (bad) add mov loopne (bad) jne adc ss pop pushq gs clc add push retq sub sarl push outsb fwait rex.XB repz (bad) roll sti (bad) rex.R hlt imul add push fdivl loopne fsubr hlt jrcxz jl out pop xor movabs mov or je sbb (bad) cmpsl enterq movabs in sbb xchg jno imul insl jnp cli in or jg sbb cs gs retq sub (bad) xor xor fcomi cltd icebp fmuls mov or rex.RXB (bad) fnop neg push (bad) (bad) fwait sub sbb out (bad) (bad) mov adc mov xchg (bad) ficomp lret movabs rex.WRB (bad) add fwait mov test pushfq int or (bad) xor (bad) lahf rex.WRXB stos (bad) fadds add push xchg cmp movabs std (bad) mov push mov rex.RXB out iret pop clc jrcxz xchg lahf test scas fisubr cmpsb adc pop fwait ds or frstor xchg pop sub pop in rex.B insb rex.RX out movabs movslq sub (bad) add jns push (bad) sub vandps add jnp adc test xchg jg sbb test lods mov (bad) jp sbb (bad) out pushq jbe add adc add sbb cwtl fistpl outsl sbb fnstenv out pushfq rex.R movsl movslq jp jl sbb negl lock or mov pop xchg scas iret (bad) add vmwrite xchg shrb xchg jl popfq mov sbb (bad) cltd mov test shl add mov enterq fist rex.RX fs flds rolb xor (bad) out pop retq pop pop int3 clc cwtl movabs pop xor enterq movabs fwait (bad) (bad) push (bad) sbb pushq mov rex.WR insb push stc stos push pop retq mov std xlat cmp (bad) lret mov (bad) cmc insl nop ficom (bad) pushq pop cmp cmp rcl lret sbb mov add lods rex.X addr32 (bad) xchg add fmuls cmpsb imul retq stc xchg movabs cmp (bad) sbb nop or mov adc mov int and xchg hlt (bad) (bad) loop (bad) rcrb jmpq sbb xchg (bad) (bad) add rex adc adc fcoms mov rex.WX rex.RX sub and xchg (bad) mov sub nop shrb imul sbb (bad) jns std pop verr testb jnp lret add and rex.XB cs mov repz pop stc mul add xchg retq or and lods rex.WR add sbb sub cmp testl (bad) cld in out cld pop outsb rex.WB jmpq jmp push in sbb (bad) (bad) rex.WRXB lret popfq jge fistl sbb mov mov cmp rex.X lret and pushq cmpsl sbb rex.WB pop std scas rex.XB (bad) mov test cmp xor jbe mov pop mov xchg out xor (bad) out fs (bad) jle lea jrcxz cld in adc loopne lret push js xlat or mov lret pop (bad) jnp in and pushfq (bad) mov mov sti (bad) out mov cltd enterq (bad) (bad) mov pushfq addr32 rex.WX (bad) push test (bad) sbb sarl (bad) rex.X (bad) push xor lods xlat sti data16 loop jae nop (bad) sub (bad) fiaddl rex.X add sub popfq leaveq (bad) xchg pop outsb imul jp scas pushq mov or stos (bad) popfq movslq pushq negl xchg cwtl insb mov lods (bad) fnstsw imul (bad) jg rex.WRB repnz rex.WXB (bad) add xchg mov xchg retq out cmpsl sub pushfq movabs jbe int rex.WXB and xchg stos cmp cmpsl sahf (bad) mov (bad) (bad) pop enterq or in insb xchg cmp (bad) xchg and or (bad) imul rex.WRXB mov fwait movb push pop add (bad) fwait test cmp and fwait sub nop cltd xchg jrcxz icebp fwait jne xchg jle hlt rex.W adc sti fildl fwait cs in xor sbb sbb and sub (bad) fwait lret xor rex.WB jae stos adc jo cmp (bad) mov mov mov jb fwait int3 sub fwait mov (bad) js stos (bad) (bad) add sbb cwtl fistl sub pop add fistpl adc xchg add xlat (bad) or ja or lss xor jmpq stos or cmp rex.WRB (bad) movabs adc (bad) pushq mov es hlt pop sahf clc jo divl int3 repz or fwait (bad) (bad) fcomps (bad) mov (bad) or enterq adc and lahf (bad) out imull rex.RB and push and stos ja rex.WXB lret (bad) stos pop cmp rex.RB fwait cmp cmpsl loopne fwait xchg mov mov xchg stos add movabs rex.X add push int3 (bad) (bad) xor sub jns lret addr32 fwait test mov and cmc rex.WRXB lock and mov lret mov xor sub cmp jo sbb cmp rex.WRXB fwait jrcxz scas sbb insb push sbb icebp rex.WXB cmp mov adc (bad) mov cmc and cmp or stc fwait adc iret test pop (bad) and rorl sti (bad) add rex.XB fwait push mov out addl mov callq out retq sub fwait (bad) mov cli movsl mov (bad) cmpsb int add scas rorl fwait (bad) adc fnsetpm(287 sub xor fstl fwait mov cld rex.RXB (bad) (bad) insb xorb xor loopne clc popfq in mov xchg (bad) mov mov cmp sub fisubl xor scas adc (bad) jl test loope jns add xchg add jo cmpsl mov cmp test lea rcrb (bad) movslq mov jl (bad) loop jle mov add int adc rcrb rex.R rex.RX xor jns mov scas pop fwait es xchg mov loopne sbb add out mov adc fdivp sarb (bad) push mov and fwait jnp mov jne sti cli (bad) push jle pushfq sti add (bad) lea fwait xor mov (bad) cli lahf jp lods or adc jae fs mov adc iret xchg xchg xchg adc jmpq mov rex.WR rex.WXB repnz cmp test in (bad) rex.WRXB mov or jle rex.WR xchg outsb rex rex.WB fwait cmp fnstsw mov cmp rex.B rex.WXB test sub xchg mov scas rex.WRB rex.WX (bad) pop rex.W (bad) test (bad) fwait sub (bad) pop es sbb jno jrcxz (bad) lret ds xor jnp jb mov jno orl add add push rex.WRXB mov std xchg add in (bad) rex.R adc cltd xlat mov fwait cmp (bad) popfq jg adc lahf jmp movabs loop jge imul sbb in ja sub jno fwait out lods push orb pop fsubp sbb cs lods lods sub cmp scas mov cmc rex.WR repz jg jns fild rex.WRB ss pop adc repz sub sti or fwait test jbe pop sarl sbb cmp add (bad) sbb neg in rex.RX pop mov fisttpll push mov lods cmpsl jl xchg mov (bad) mov mov xorl cmp je nop stos fcmovnu (bad) pushq rcll (bad) (bad) fdivr popfq insl rex.RXB and xchg cmp lahf scas mov int jmpq rex.R bnd mov (bad) stos sub repz in fwait (bad) retq enterq ficomp sahf cmp mov out mov rex.R fisttpl cld xor fwait loopne and lcall fistp adc pushfq (bad) movabs jbe xchg jns sbb mov (bad) lock pop cmovae popfq mov jne sub rex.W cwtl xchg testb xchg rex.WRX pushq iret (bad) std rex.WX cmp incl xorl mov (bad) sbb lock pushq fs and sti sbb add rex.WXB sti fimul retq lods pop sbb (bad) (bad) fisub sysexit xor sbb or (bad) shrb mov rex.WRXB (bad) sbb orl rorl movsl (bad) mov (bad) out (bad) (bad) (bad) sti pop push movsb mov add and (bad) cmpsb mov push in lret loop callq pop push lahf sbb imul mov imul (bad) outsb jae cmp addr32 ja movabs cmp (bad) insb pop pop rex.XB xchg and sbb retq (bad) lods movabs cwtl rex.RX sbb mov fidivrl mov data16 out (bad) or xchg mov out mov jb std sbb int js in iret fwait cmp (bad) pop outsl fwait (bad) mov push leaveq adc and (bad) push fwait cmp pushq jb shrl cmp (bad) and xor fwait cmp adc sbb insb jae addb fwait and insl (bad) xchg mov and sub rex.WRX imul (bad) in mov rex.WB (bad) movslq (bad) xchg mov lods (bad) (bad) cmpb fwait adc imul or test rex.WRX sub (bad) fwait (bad) jl out fadds (bad) fwait push rex.XB sbb jne and (bad) scas sbb jle mov or jae gs (bad) (bad) push sbb pop jmp mov jmp (bad) pushfq movabs mov mov clc cs xchg fwait pop test rex.WRX out fwait (bad) xchg push nop or and rex.WRB jns repz insl fwait or imull decl movabs out imul loop out push fiaddl pop mov loope mov in mov sbb imul jo test jmp std loope loop cmp frstor outsl out in fistpl sbb int3 cmp lods pop repnz rex.XB cmpsb (bad) sbb sbb test lret jmpq fcmovnu insl pop sub stc push pop ucomiss retq xchg (bad) (bad) sub fst fwait (bad) xor adcb imul (bad) lea (bad) pop notl mov lret (bad) jno mov imul fwait stc loope xor stos (bad) push fwait cmc xlat (bad) push nop in mov adc xchg sti fwait (bad) xor jmp (bad) gs push xchg and es push movabs xchg rex.WB jbe (bad) xchg sar data16 adc fdivr xchg sahf and mov in mov xchg adc or imull movabs xor (bad) fisttpll sti pop add and (bad) adc pop out mov test sarl stc in xchg sbb or xchg mov xchg repnz fwait lret fcmovne (bad) pushfq (bad) (bad) (bad) loop xor mov mov sbb xchg lahf (bad) sbb (bad) lret push sbb adc and pushq sbb rex.XB or in (bad) xchg fwait ror xor (bad) jno rex.X push fwait pop neg fisubr mov loope fwait jno rex.RXB (bad) mov (bad) fwait jg (bad) insl and xchg jrcxz rex.R fwait cli sti sub fwait mov jmpq (bad) pushfq jbe (bad) lea std fwait (bad) or sub xchg rex.W xchg mov test cs sti adc cld push sbb fwait repnz retq push jge and jg rcrl sub mov fst jg adcl rex.WRXB adc (bad) out fwait (bad) adc and rex.WXB mov testl clc and mov js rex.WB push (bad) (bad) insb push lods adc jl (bad) movabs pop insb fistpl and cmpl cmp sti jns rex.RXB jge cmpsb mov xchg cmpsl mull lods loope movsl or outsl in fbld je sbb nop adc pushfq rex rex.RX (bad) stc sbb outsl insb rex.WX sub (bad) fwait cmp jno push sbb jl test sbbl popfq lods clc adc adc (bad) pop mov movabs and jno clc es (bad) fwait retq xor js test xor loop fsts xchg rex.WRXB mov add jl fisttpll and sbb jg sbb add nop sub (bad) fwait enterq xchg cmpsb outsl movsb stos (bad) or xor hlt fwait mov sbb mov out xchg leaveq stc stos (bad) clc fwait xchg repnz and mov es (bad) cmp xor jnp sub rex.B rex.RX sbb fwait push movabs jno xchg push (bad) pushfq (bad) mull clc rex.WRX rex sbb add xlat pop divb fwait cmc or mov loopne pop adc mov mov movabs rex.X mov insl adc test scas cmp and (bad) jp jo js or adc jle fwait (bad) adc pop sub test fwait cmp xchg fmull adc leaveq loop lods sbb mov movabs (bad) out mov xchg (bad) rex.RB retq (bad) (bad) or ffreep jne sbb callq cmpsb stc add jns sub (bad) add (bad) jb cmp rex.RXB outsb jbe jmpq rex.X fwait (bad) rex.WR in movabs shrl test lahf mov fwait (bad) popfq fnstcw fwait lods cmp div mov (bad) xchg lret lea fisubr fwait stos (bad) (bad) xchg cmc movabs addr32 outsb pushfq out sbb fdiv sti add imul adc test (bad) mov (bad) fwait stc rex.W hlt rex.X sub jbe sbb sti rex.WB sti pop popq jb int callq cwtl rcrb mov rex.XB in (bad) fbld (bad) cmp (bad) outsb lret rex.WRB jrcxz icebp add cmp push (bad) callq loopne pushq retq sbb cld test int mov (bad) jg loopne test cs (bad) loope out (bad) divb (bad) fcmovnb movabs (bad) lods cli add mov and mov rex.W xor xor pop test (bad) retq (bad) mov lret (bad) or gs or fldt sbb pushq mov imul and push jle sahf sbb addr32 adc out out movabs (bad) (bad) mov adc scas pushq cmp shrb fmul push movslq push std cmp and sub in sbb rex.WX (bad) lock or movabs fucomi rex.XB xchg xchg mov lahf fmuls and sbb (bad) rex.B jb sub push sub add push jno fildll addr32 cmp popfq push mov fsubrl and fs mov lret movabs cmp xchg (bad) lods push pop out mov movabs cmp (bad) xchg rcrl imul (bad) movsb or (bad) (bad) (bad) out (bad) adc pop (bad) sbb sti (bad) (bad) add xlat repz and (bad) sub in pushq pop and (bad) movslq pop xchg rex.XB rex.WRXB roll addl (bad) (bad) jb rex.WX push mov test jp xchg fidiv (bad) pop pop (bad) rol xchg lock enterq sbb int3 in (bad) movabs andl mov xchg movabs int pop addr32 callq add mov sbb (bad) rex.WXB (bad) mov jg or sbb cmc movslq and cmpsl js out rex.WX fucom (bad) in push mov movabs mov mov scas movslq rex.RX fdivrl cmpsb fisttp movabs or pop rclb and (bad) mov xchg pop lahf rorb insb movsb or fiadd fnsave (bad) fbstp sbb ljmp add and (bad) pop xchg pop jmp sub adc outsb sti sti sbb sti (bad) push xchg xor sub (bad) pop pushq addr32 rex.X (bad) (bad) add xor sbb mov movabs mov (bad) mov jo (bad) mov pop lock mov mov fbstp mov xor xchg sbb sub (bad) callq fnstsw xlat idivb pop sub xchg add loopne mov movabs push (bad) sub (bad) jrcxz jo (bad) mov icebp pushq clc rex.WRB push xchg pop loop rex.WR and pop lea adc (bad) rex.WB retq mov out (bad) xor jb mull jle xorl (bad) cmc xor rex.RXB cmp in adc adc mov rex.XB in (bad) mov in repnz pop hlt (bad) mov mov jne mov (bad) mov mov rcll out fiaddl lods nop mov lods push sbb and fwait sbb and adc rex.WRX rex.R and cmp insb test xor rex.RXB mov fistp (bad) stos push jae jno add rex mov rex.WXB (bad) (bad) cmpsl xlat (bad) xor stos sarl movabs sub popfq adc cltd sahf (bad) mov xchg cmp sbb rorb hlt (bad) (bad) jne mov jo pop mov xchg xchg adc mov (bad) jmpq mov push jg retq (bad) popfq rex.WXB add jo xlat out shl xchg (bad) je mov sub pop mov and sub sub cwtl jbe push cltd fadd hlt iret fdivl mov xchg xchg lea sbb (bad) (bad) xor jb int out rex.WRX rex.R xchg or shlb xchg (bad) test insb (bad) jae xchg fildll pushfq sub fwait (bad) icebp iret rex.RX mov or adc push mov xchg push fwait mov (bad) adc lock mulb jns mov sarl lret fdivrl rex.RXB pop mov (bad) in and fwait sub rex.WR rex.WX jo fwait retq sbb mov lret mov sbb in cltd pshufw jmpq imul xor nop sub xchg lahf out and rex flds sbb mov pop out add dec negb xlat rex.WRB jne pop cmp fwait xorl sbb loopne add sahf fwait clc loope movabs test xchg clc jae mov mov mov jl mov imull adc clc push fwait jne adc rex.RB fwait outsb movsb addr32 mov mov shrb cmc jg movabs jmpq rex.X rex.RB and popq and mov push movslq (bad) movabs (bad) cmpsl rex in loop data16 fnstsw xchg std jl retq sbbl shl push and iret cmp movabs (bad) pushfq (bad) (bad) test rex.WR mov xor sbb and cli xor fstpl xchg sub push (bad) movabs (bad) lock adc out imul xchg imul scas xor (bad) (bad) jo (bad) leaveq rex.RXB fwait movslq in rex.WB jmpq sbb jl imul (bad) iret scas xor mov jb (bad) fidivr push (bad) stos cs sbb xorb add rex.RB rex.RB movabs or or jbe xchg cs int pop repz (bad) jno es sbb pushq xchg fwait and sti (bad) push cmp fwait mov rex.WB fwait movslq mov out jle or (bad) movabs add cld stos and xchg popfq pmuludq jg loopne sub scas pop pushq in movsl (bad) fwait cmp sub push rex.WRX rex.B pop pushq je fwait insl or rex.WRB sbb cmp jns (bad) and mov sbb fwait rcr retq loope out out enterq mov incl (bad) loopne add jge fwait jo and fwait jb (bad) iret (bad) (bad) xor imul int sbbl xor out jmp setno (bad) and xor (bad) rex.WX jnp cld jns pushq (bad) popfq outsl pop adc sbb push std ds pop (bad) pushq sbb rex.WRXB sbb sbb push rex.RB leaveq rcrl loop loop jns jo sub rex.WXB int fs icebp insl xchg (bad) out rcrl rex.W out fisttpl sbb movabs jge retq retq pushq pop (bad) jg mov jmpw jp loop (bad) and mov hlt hlt xor hlt (bad) or rex.X sti cmpsl cmc sbb out mov (bad) push scas pop insb add (bad) pushfq rex.RX cwtl fnsetpm(287 add rex.W int3 jnp loopne movsl cmp mov sti stc dec jbe out lret (bad) pushq (bad) adc out repz (bad) xchg xchg fdiv sbb adc loopne cwtl ss rorl retq repz cmp retq retq sbb addr32 out push test fisub ja mov push jbe pushfq rex.XB scas adc lahf rex.WRXB fnsave or sbb (bad) mov jne cltd leaveq pop (bad) add es cld sub movslq fsubrs sbb lea mov xlat pop test pushq fmul rex.XB cmc or add mov (bad) adc pop jmp pushq movabs mov rex.B in xchg (bad) adc pop rex.RX (bad) (bad) loope mov rex.WRXB lods fild loopne xchg addr32 mov (bad) retq add xor or pushfq pop rex.X mov or jbe retq mov rex.WRB xor or mov (bad) add or (bad) adc rex.WRX lret adcl fldpi xbeginq xchg push (bad) in rex.WX mov loope rex.WR andl add std xor cmp mov rex.WRXB loopne cmp add pop jg sti cltd pop (bad) imul es cwtl mov cld nopl cs lahf fistpl push neg xor push lret mov movabs imul (bad) push out lret pushfq cwtl (bad) jl sbb (bad) (bad) movabs pushq (bad) retq xlat lock lahf push xchg stos out fcoml rex.B cld rex.X (bad) sbb sbb (bad) xor pop jo pushfq lret (bad) push (bad) mov int3 cmp fs stos jg rcrl or pop pushfq popfq cmp movsl rex.R cld roll adcl adc or fstl hlt sarb and fcmovu stos in (bad) xchg jnp cmc rex.X rex.WXB sub (bad) rol mov popfq rex.RXB rex.WR rex.RB loop mov add fbld sahf pop rex.X xchg ds hlt push sbb bnd jg iret cmpsl mov outsb xor adc rex.WX mov pop mov (bad) rex.RXB (bad) cld cld imul movabs push cwtl mov jo xor cmpl imul (bad) or loope pop repz mov sbb ficoml fsubrl (bad) rex.WRX cmp and fstpl rex.RX xchg rex.WX jae nop adc jo gs fldl pushq loope xor pause test xchg push push mov xchg mov (bad) (bad) or in jrcxz sub or (bad) xchg fwait in (bad) loope rcr or out loop out andl fwait test mov jo setnp int imul (bad) (bad) xchg sbb rex.WX test pop (bad) pop (bad) xor xchg rex.WR fwait mov adc fwait (bad) shrb rex.RB fwait and pushq rex.WB (bad) cmc popfq fildl outsb sub (bad) stos and and fwait mov icebp or xchg rex.WRX fwait add sub jp cmp int cli push enterq out (bad) stos (bad) sbb shll rex.WRXB (bad) repnz setle nop adc and xor rolb sub rex.RB pop lret mov sub sarl sti (bad) (bad) test sbb (bad) xchg jl nop (bad) mov rex.XB rex.XB gs out ds imul cs (bad) scas rex.WB (bad) sbb xchg imul pushq add mov sbb (bad) xchg fwait (bad) mulb xchg in lret imul sub ds cmp mov adc test shrl mov sub mov fildl sub cli sbb mov xor cmpsl mov fwait rex.WRXB shrl jbe add cltd fndisi(8087 adc adc jrcxz in xor test (bad) pop xchg movabs retq movabs leaveq xchg jb rorl loop (bad) xchg (bad) (bad) loope sbb (bad) rex.WXB adc adc and mov push add jb sti rolb pop cmp fdivl rex.RX fwait mov movsl fs mov rex.WXB or fwait push lock and ss jmpq (bad) scas mov adc pushfq (bad) adc je pop and (bad) lods es xor rex.WR movabs andl loope (bad) clc or fwait mov movl sbb mov mov jle lret in cmc in rep adc xor std hlt fildl in cmpsb cmp rex.WR pop and rex.RX sbb mov jno (bad) int (bad) in movabs cmpsb push sbb add fistp (bad) rex.WX cmp cmc mov repz (bad) (bad) push fwait mov data16 pop (bad) or callq addr32 fwait cmpsb leaveq xor loope mov sbb stos and (bad) push js add movabs fwait (bad) (bad) rex.RXB sbb fwait sbb mov movslq cli ficomp cmp and hlt rcrb rex.XB (bad) jae insl sbb fidiv fwait add lahf pop cmpl add adc out jrcxz je outsb push xor pop jae or and repnz sub int3 insl mov js push cmpl (bad) add rcll fadds jrcxz rex or (bad) fldt pop sub sbb in mov out (bad) jl fs ja,pn test mov cli addr32 adc (bad) rex.X shll sar sbb fwait push (bad) pop (bad) testb sarl fwait xchg add xchg out bswap lods test mov in fwait and lret mov jmp cli (bad) fwait rex.WB es (bad) movabs xchg add jrcxz (bad) fwait pop (bad) adc or sub (bad) out sbb outsb gs adc (bad) in test mul adc fistp fist mov mov (bad) cmpsl movabs ja fwait scas (bad) adc or in xor je notl adc add and out std or fwait adc mov fsubp (bad) mov movsb outsb fadd adc pushfq fwait mov shl ss (bad) mov cmc retq rcr in popfq movabs jb movabs mov fwait mov fist orl lea jp push shrl pmaddwd out adc rex.RB out lea rex.XB (bad) (bad) mov fbstp xlat andb sbb in (bad) sbb rex.WRX jns rex.WRX rex.WXB pop icebp jg sbb loopne (bad) scas rex.B push and shrl stos test data16 loope jmp out ja fs fstp fwait jl rex.WR mov xor retq (bad) leaveq cmpsb scas mov (bad) rex.RX lcall cmp cmpsl pop xchg xor test xchg pop mov sarl (bad) fwait jl sarb (bad) sbb sbb loope fwait sub add and repz adc out mov (bad) shll rex.R rcrl popfq (bad) mov movabs xchg je retq mov push jmpq rex.RXB xchg mov (bad) jp retq sti add xchg sbb (bad) sbb jmp (bad) hlt je (bad) shl cltd (bad) xor (bad) fwait movsl stos outsb movabs jne fwait or jbe movabs fwait in (bad) sub movabs out rex.X add mov cltd cwtl (bad) mov (bad) jnp jae xchg imul (bad) fwait mov jne (bad) sub stos testb jrcxz imul rex.RX xchg (bad) fmul sbb mov sbb xchg (bad) in sub xchg popfq cltd lea pop (bad) outsb cmp adc callq lahf jle fwait or rex.WRB and sub fwait jp sbb add adc (bad) ja push add cmp mov push xchg in fldl sbb xor gs clc sbb orl sbb xchg stos push icebp adc movsl fwait out adc (bad) or xor out (bad) shlb add fwait movsb add push cmc popfq movb in leaveq jl mov idivl xchg subl nop rex.RB mov int3 sbb imul pop addr32 fwait jne ja jmp (bad) mov mov imul lahf in xor jmp xchg sbb int3 sbb mov sbb xchg mov outsl out pop (bad) sbb addr32 out (bad) jmp popfq cltd or (bad) add add rcrb jae push pop cmp rex.WRXB mov (bad) and (bad) icebp mov (bad) lahf jno fs push pushq out movsl (bad) loope stos (bad) (bad) faddl loop fwait cli pushq movslq (bad) jo movabs std rex.WRXB rex.RX pop rcrl push cmpsb stos rcll test or or xchg mov mov in sahf mov jrcxz jmp fwait adc rex.X mulb jo rex.WR (bad) sahf out (bad) (bad) in cmp fs jmp (bad) pushfq enterq es xchg sub mov sahf add fwait gs sbb rex.WXB int and movabs cltd movabs and mov fwait xchg (bad) data16 iret or xor adc jo test push lods ljmp (bad) add mov push enterq insb movabs test insb mov (bad) mov or movabs xchg push jmp cmp icebp out movabs incb (bad) cmp retq fs pop loope fucom mov adc or out add movsl mov sub (bad) cs iret cli mov (bad) (bad) mov sub push nop cmp addr32 cmp jmpq bswap roll xchg xlat (bad) fdivs loopne in scas (bad) cwtl (bad) xor sarb sti data16 (bad) adc incb jne mov jl mov xchg pop sub test mov lods in or stos stc jp fadd movabs (bad) (bad) mov fcoml or leaveq xchg pop or jle jrcxz (bad) (bad) pop insl sub mov scas xor rex.WX jle fildl add shrb mov rex.RX mov or fsubrs xchg cmpsl (bad) pop ja fs movabs xor test test adc lea pop movsl cs imul fsubl sub sbb insb (bad) mov (bad) out cs jg or gs mov sbb leaveq xchg int3 push negb fdivrs and (bad) xchg out cmpsb in push movsl fild jmp popfq xchg loopne pop rex.WR or xchg cmp gs (bad) mov fiadd jmpq out lea (bad) cmpl rex.XB rex.WRB divq rex.X in sarl rex.WRXB xchg xor xor (bad) add adc cld adc fs fimull (bad) js cli mov std ja and rex.RX mov (bad) sarl jle lahf outsl xchg ja loope xor (bad) pop testb loope jns rex.WXB and mov xchg btr mov fs pop hlt std loopne in rex.WXB idivb fdivrl mov imul sub (bad) fisubrl mov (bad) adc shr js fstl cmp addl sbb movslq (bad) (bad) (bad) (bad) jle sub fdivrl (bad) mov test mov pop rex.W fwait retq pop rex.WB callq or (bad) orl mov pushq sbb pop xchg int out std pushfq movabs mov jns sbb and loope cld sbb test sub out nop movsl rcrl (bad) (bad) mov (bad) or mov cmp pop lods xor sub xchg sbb out cmp lret fwait push fadds mov xchg rclb xor scas outsl mov (bad) data16 mov cltd out iret out (bad) add (bad) sbbb (bad) pop xchg movabs (bad) movabs callq int or fwait and fiaddl fwait ds adc rcl and movabs outsb sub sarb loopne sbb jb xor xchg rex.WR fwait (bad) push lret mov ss jrcxz sub mov (bad) repnz cmp stos fwait in jno (bad) sbb ss fwait sahf fcmovbe add sub fwait jae movabs adc fsubrl loop sbb rex.R adc pushfq jl callq mov hlt sbb pop outsb rex.WRB cwtl xchg xor rcrb (bad) in sub leaveq pop fwait xor rex.RX popfq jle sbb mov sti (bad) adc mov nop (bad) jns add sbb mov sub fcomps mov lods insl idivl test test mov fsubl (bad) popfq pop cs popfq (bad) popq push retq jno mov shrb push rex.RX pop xor and jae mov sti xlat in mov retq enterq mov out (bad) xchg pop ss repz stos sbb pop retq pop test movabs pop fs in mov movabs jae pop test push cmp or and outsl fcomps leaveq rex.WB cmp adc (bad) lods (bad) xor repz (bad) cmp (bad) xchg outsl (bad) adc in push sti xchg sahf jo (bad) jrcxz rex.X add pushq mov mov (bad) jbe (bad) lods (bad) fwait mov pop rex.W (bad) fwait lret addr32 cltd out fwait jge mov cld rex.WRXB xchg add sub movabs mov fmull data16 xor imul mov cmp xchg xchg mov (bad) fwait xchg (bad) pop xchg sbb (bad) and je (bad) test jae xchg clc cmp (bad) in scas adc sti fldenv (bad) xchg or xor push jrcxz lret fwait movsl or mov test rex.RB (bad) cli jg lods and xlat cmp pushq rex.WRB mov sbb mov popq fs outsb insb adc push sbb (bad) cs sbb stc add rex.X xchg in sub mov icebp mov jae jmp lret movabs cmp mov fwait rex.WXB ljmp add test add (bad) (bad) xor xchg (bad) xor rex.WRXB add movabs js pop mov mov cmpl cltd lods add loope cmp mov enterq xchg pushfq cli rex.WB fsubl mov (bad) xchg lea out mov sti adc repnz sbbl rex.WRX (bad) jo sbb retq hlt repnz xchg and cmp lret (bad) jle rex.WRX scas sub jns in pop stos (bad) repz (bad) mov in (bad) mov fwait callq cwtl mov sbb enterq out or adc repnz gs push fwait cmpsb rcrl loope test (bad) (bad) fnsave (bad) cmp imul (bad) sbb or push adc push movslq jnp lret pushq jp ljmp movslq movsl xorl push hlt sbb gs cmp movb (bad) add rex.R iret add pop push xchg and add cmp out xchg cmpsl fwait rex.RX (bad) cld sub rex.WX fwait jg negl movsl pop cmp (bad) cmp (bad) adc jnp mov xchg cltd enterq rex.RXB outsl (bad) rcrb (bad) or add sti faddl cmp (bad) cmc clc (bad) std add mov mov rex.R sbb scas scas xor adc mov (bad) lret xchg cmp cs (bad) jmpq (bad) jae mov retq xchg xlat pushfq mov sbb subl movabs mov (bad) (bad) fnstsw fsubrl and mov sti xor int jb sbb add fiadd jno adc in prefetchw orl lret fwait xchg jno pause mov fwait rex.X movabs add loop scas fwait imul and sub repnz mov adc push mov popfq pop int rex.WX js ds push movsl lock sbb retq jae rex.RX cmpxchg (bad) callq sbb jg movslq (bad) (bad) jns rex.WX and out (bad) (bad) mov movsl adc movabs loop stos (bad) repz (bad) (bad) fbld stos and or rex.WRXB jb lret jg (bad) xor cmp rex.WX xorb stc rex xchg cltd rorb (bad) xchg imul jns sbb sbb push fscale cli adc adc fsub loop adc (bad) pop pop cld mov add sub loope pop enterq pop lret roll data16 lods or pop mov cli sbb xchg out scas (bad) insb fs mov xchg cmpsb clc jl jb rex.WRX hlt popfq pushq (bad) jmpq enterq and push loop and (bad) rex.RXB adc sbb or xchg or xor repnz (bad) nop mov fildl pop out sbb test mov jnp (bad) fistp cmp pop pushq (bad) and xor sbb lods fwait (bad) rcr jl (bad) hlt pop sbb (bad) pop mov rex.RB rex.R rex.WRB mov cmpsb mov clc ds or pop sbb cwtl (bad) and xchg shrl sti fwait sar (bad) pushfq movabs jmpq (bad) fwait sbb loopne jne cmp or xor (bad) clc adc and fwait out push sub jrcxz outsb adc repz loop out xlat xchg xlat fwait add sub rcrb (bad) sbb movabs sarl iret (bad) rex.RX repz (bad) add test lret cmp fwait cmpsl rex.WRB cmp data16 lret leaveq cltd xchg sbb callq mov movabs cmp or jrcxz rcrb sub or sbb sub mov in jae psllq cmp (bad) mov rex.WR repz (bad) mov fwait pushfq adc (bad) rex.RXB sub (bad) outsb rex.R xchg or cld pushq outsb (bad) or jg pop pop out clc xor mov stos lahf xor (bad) xchg fistpl jmp (bad) sbb rcrl movabs xor mov xchg in scas jg xchg rex.RXB mov jno cltd rex.X mov and or loopne cmc fidivl (bad) cltd (bad) lret retq in scas sbb and pushq movsl sub sub adcl cmp (bad) test sbb jae adc (bad) add adc rex.WRX cli jmp (bad) rex.RXB loopne add shrb add (bad) sbb rcrb hlt movabs in fwait jnp (bad) pop xchg fwait push cmp pop rcrl popfq stos xor rcrl and cmpl and cmp add movabs rolb (bad) or stos cmpsl out hlt sbb mov mov jmpq notb js rex.WX test (bad) mov outsb rex.R fwait loope cmp mov lret outsl fwait popfq or js push jg xchg movslq imul mov cmp stc sub (bad) xchg out jrcxz fwait (bad) cmp pop movabs xor fs test out jmpq add rex.WRXB (bad) rex.RX (bad) pop rex.WRB in sti lret out sbb and adc lock add or shrl in pop push push cltd (bad) rex.WXB out ja (bad) sbb retq rex.XB mov pushfq mov roll test decl stc pop (bad) cwtd enterq in xor (bad) jge jg jl pop push js cmpsb je test jo mov (bad) mov pop stc sti rex.WX out movabs outsb imul ficomp es addl fwait xor addr32 mov rex.WR (bad) sbb retq (bad) sarl push mov xchg jmpq mov movabs orl (bad) (bad) cwtl (bad) adc rcl (bad) rex.RB fwait cmp sbb mov and insb outsb and sahf movsl sbb jmpq pushfq movsb xor rex rex.W clc push fild fbstp (bad) mov cli enterq rex.B rcl adc out insl pop sbb movabs pop rex.XB add (bad) popfq pop leaveq rex.X rex.WXB sbb pushq ss (bad) rex.B rex.WRB loope mov pushq cwtl ja mov (bad) cmpsl jmp and fwait mov scas mov (bad) push pop test (bad) (bad) cwtl or or scas add rex.WRX stos mov vmwrite js lock pop or lret (bad) push xchg ljmp mov xor rex.X (bad) (bad) lea xor fsubrl pushq std leaveq fwait popfq outsb shlb shll sbb jns scas (bad) mov xor push div lods lea pop int3 push lretw (bad) ss jl (bad) add cltd rcll sarb add add repnz xchg std (bad) add push mov mov imul (bad) out (bad) push enterq idiv leaveq (bad) sbb insb jbe adc jmpq cmpsb ss (bad) pushq in mov in in xchg adc sbb mov mov fwait (bad) xor rex pop and stos fwait add (bad) push or (bad) rex.WR data16 xor xor movabs xchg (bad) fcmovnu (bad) fwait imul mov in xchg mov rex.WX lods andl loopne (bad) (bad) rex.WRB fwait out movsb adc add fwait pushq insl rex.RX xor xchg mov jle lea adc mov (bad) (bad) adc pushfq xor loope adc popfq sub pop jne (bad) mov (bad) or int3 movsb (bad) jmp cmp and pop or not mov mov lods push sbb add pop cli push rcrb rex.WXB movabs or ss and (bad) (bad) (bad) sbb jmpq sbb cwtl pushq rex.WB in mov rex.WRB fstps or mov add sbb (bad) xchg cmc mov pushq rorl (bad) movslq stos fldt data16 jp movabs pop imul cmpsl in scas cmp outsb sbb rex.B sbb add jbe xchg or cmp (bad) mov sbb rex.RXB retq or cli loop int callq cmp es cmp pop jns loopne pop mov int (bad) fcompl (bad) (bad) adc icebp push notb cld xor mov fldl test in and xor movabs cmp mov nop shl scas (bad) adc pushfq movsb fldcw test pop pop out (bad) cli add insb stos (bad) xor icebp test std mov stos scas rex.RXB mov mov and je pop or pop mov sbb or jmpq mov or sbb sbb jns cmp rex.WXB pop and add sub xchg and (bad) callq xor (bad) rex.RX jrcxz fs xor cld out mov add xor and xchg mov ss push rex.WB mov xor movabs test push add mov (bad) insl fnsave (bad) outsb test (bad) cmp cmp data16 xchg and popfq rex.WRB (bad) (bad) mov movsl rex.X lods xor (bad) (bad) xor popq sti cmc je sbb and (bad) cmc cmp xchg (bad) lods jle push rex.XB push (bad) stos testb (bad) xchg xor out movl (bad) xchg xor fcoml movabs jo and (bad) fnstenvs and pop jae cmp jp (bad) in add push loope gs in lea sbb add outsb mov mov cmp adc rcr fst add subl jo jle mov xlat mov (bad) mov (bad) add jns add icebp movsl jae add (bad) xchg pushq xchg fcoms ja and fistpll rex imul pop incl outsl pushw (bad) rcl mov nop in or mov gs xchg mov int3 scas mov (bad) mov pop std mov movsl mov (bad) cld cli mov test fnsave jle shlb rex.WRX retq lock mov out (bad) xor js xor add jns rex.WXB in or in insb insl jno fwait or push and retq addb stos xor movabs loope push fwait mov js rex.WRXB fwait jle push fdivs sti rex.RX fwait ds lret stos imul pop jmpq rol push fwait (bad) mov int3 pop jno mov jmp popfq shll fistpl cmpsl adc fiaddl sbb xchg (bad) (bad) fcomps repz insl fwait lret (bad) add or ljmp std adc fwait xor rcrl test rex.RX rex.WRXB rex.RXB push add adc out rex.W movabs idivb lock jrcxz fwait imul hlt jg test pop cmp sub mov sarl sti cmp fsubr mov rex gs sbb (bad) xchg xor rcrb scas mov cmpsb lock rex.R lret mov shlb fwait mov out cmp out sbb rex.RXB jmp rex.W movabs xchg and sub push popq mov (bad) loop cltd adc jmp or (bad) (bad) gs finit in adc cmpl (bad) clc sti xchg fist adc (bad) jmpq mov pop movabs lock rex.RB and test jmpq fwait jle mov movabs movsl fwait mov cwtl or ss rex.WX sar sbb imull jmp jnp repz push fwait (bad) xor fwait or retq int3 add and or (bad) fwait clc or fwait pushq cmp rex.R rex.R rex.RX es xor sub sbb stos idivl rcrb xchg fisttpll in sub fwait sbb sub xor xchg xor mov test jnp add (bad) cmpsb (bad) fld scas mov adc rex.XB sti (bad) pop mov adc fs sti mov mov (bad) mov fwait nop repz adc shlb addr32 retq (bad) adc and (bad) fstpl callq jno push push addr32 pop mov adc in push test mov out jp mov fwait (bad) (bad) sti xor mov lret stc cmp pop mov jb adc movabs rcrb pop (bad) (bad) in pop pop sub out cmp (bad) cmp subl mov (bad) adc xlat cli (bad) jne lret (bad) fmulp hlt (bad) cmp and jle movslq sbb (bad) push and hlt and jb es rex.RX add addr32 (bad) outsb in in jge mov loop xchg mov sbb or loop cmp xor out mov stos (bad) sbb sbb rex.WR mov cmp mov sbb out xchg and out rex.RXB or lahf out mov ficom clc popfq icebp callq (bad) jge (bad) repz mov (bad) pushq rex.WXB cli mov (bad) fstl fnstsw out sbbl mov mov sub jge loopne adc xchg jne mov in lods (bad) ss inc (bad) popfq (bad) sbb push sar sarl je sbb (bad) (bad) test jle fwait mov pushfq sarl xchg jb andl sbb pop lock mov loopne pop (bad) (bad) cmp xchg adc out mov loope pop jg stos (bad) (bad) rex.WRB js pushq mov loopne test mov icebp jg xchg cltd rcll jmpq stos test rex.WXB rex.WR repnz or repnz xchg outsb loop rex.WXB adc mov or jg add test ja adc fstl xlat add (bad) push fs jge andb mov rcrl fstpt retq mov fsts imul cmp popfq fmull xchg fistl (bad) roll popfq movb cmp (bad) leaveq push sti test test or imul jmp fwait mov xchg mov push rcrb pop sub sbb outsb popfq (bad) fisttpl movsl mov fstpl loope cli (bad) sbb push mov mov adc sbb out movsb (bad) or xchg sbb lods xchg add sbb mov mov test loop je (bad) adc lret (bad) jo lods fwait or jp jmpq movabs jb or fimul lock mov cmpsb mov adc rorb fldt sub pop test fldl adc subl jo (bad) add add (bad) test repz adc (bad) and fwait push cmp rex.WX in fwait mov or xchg loopne outsb sbb push rex.WB sti fdivl xchg cmp movsl icebp fwait adc add retq sbb mov xlat xor mov add cmp or mov std ds or sub adc mov rex.WRX and lea (bad) xor (bad) push imul sti add fwait rex.XB add fwait mov iret (bad) (bad) rex.R lret xchg add fwait test rex.WR (bad) sbb (bad) (bad) lock mov cwtl nop test (bad) mov retq out enterq iret rex.WRB fwait (bad) hlt (bad) jb push cmp add mov (bad) stc sub add fs rex.WRB ficom jne jle lahf pushq xor hlt (bad) xchg add ficompl (bad) cmp pop movabs mov (bad) (bad) ss stos cmp xchg jb add and (bad) in mov (bad) es push cmp fwait loop pushq (bad) (bad) cltd (bad) lahf stos jl scas outsb mov xchg subl rex.WB movabs adcb hlt movabs xchg xchg xor outsl or repnz fsubp lret int add pop scas xchg mov sbb sub fwait add cmpsl (bad) ds rex.RB cmp fildl adc jae loope jl pop out int3 pushq add retq xor (bad) test out jns (bad) pop pushq xlat (bad) movabs jge data16 fsubr pop fwait push rex.WB xor (bad) sarb ss xor rex.RX rex.WX enterq (bad) fwait (bad) fisttp and (bad) pop sbb (bad) mov cmp mov int3 xchg rex.RB fwait js,pn movsb mov jns fwait rex.R iret lret cmpl add sbbb rclb js push (bad) test xchg add rex.WRXB fwait in mov add rcrl adc add sbb int3 negl loopne retq jrcxz mov fwait mov xor loopne scas fistpl mov xor or jo mov test (bad) ss rex.X fwait or rex.RB rex (bad) adc sbb push (bad) repz xchg pop sub fistl mov lea or mov std rcll jp repnz movslq insl (bad) xor rex.WRXB frstpm(287 pop pushq rex.RX xchg (bad) push (bad) sub and test callq movabs clc adc sbb mov mov pushfq rex.RB scas rex.B mov rex.WRX cli (bad) imul mov es mov pop outsb xchg (bad) (bad) xchg sbb data16 (bad) rolb mov callq (bad) pop mov jge ss adc and and jg insl mov sub rex.WRB xor rex.RX xchg retq rex.B rex.RB (bad) mov (bad) or xor cmp (bad) (bad) cmpsb js pop (bad) cmp cltd or insl cmp sti pushq rex.WR fcos fwait jno sahf int mov fiadd fwait rex.WB (bad) xor out sbbl adc mov add fwait lret stos (bad) pop fs sbb (bad) sub jnp sbb rex.WRB jns scas iret sub or jg (bad) (bad) cmpsb xchg fwait mov mov push fdivrs test xchg jae pop and (bad) stos or push (bad) adc and fldt rex.WRX xchg cmp sub fwait pop mov outsb (bad) scas mov in sub mov imul fild mov mov sahf jnp clc (bad) test insl in jo and xchg jp sbb (bad) rex.WX stos (bad) sub rcrl rex.RX (bad) or cli pop (bad) mov xchg loopne gs adc sbb je in pop fisttpl es (bad) rex.X fwait sti movabs nop loope adc (bad) cmp out shll fwait lods ja (bad) shr (bad) and sbb outsl pop xchg sbb movabs adc add sub cmc sub xor rex.WRX mov jb pop stc hlt test je icebp jge mov cmc fld imul test (bad) sti fs rex.WXB pushq xchg rex.WRB fcmovnu (bad) popq (bad) mov sbb movabs mov xor xor fwait mov mov cmc mov sarl movabs retq movsl push mov or sbb rex.RX jno negl or cltd mov lods int3 retq stos add loop and mov or movabs add shll adc jb (bad) nop fwait mov mov nop fwait add pop (bad) push pop js addr32 or data16 mov (bad) (bad) rex jl fwait sbb movabs es rex.X lret ds rex.WRXB rex test xor stos sub jmpq mov pop sub sti rex.RB (bad) sbb data16 outsl add sbb lahf out fldt mov mov mov sti jmpq fwait pop mov and (bad) stos sbb and enterq (bad) movsl rex.RB fcmovnu popfq or scas rex.WX jns sti (bad) (bad) cmp lret mov adc cwtl xchg data16 jo rex.WRX ds std fldcw sub add mov outsb cwtl (bad) sbb or mov (bad) jbe pushq fcomp jg stc rex.WRX (bad) mov test gs fdivp retq repz jrcxz rolb cmpsl movabs mov pushq xchg add pushfq cmpsb nop retq xchg (bad) popfq pushq mov xlat or sub out fwait (bad) adc fwait rex.WRXB mov sarb or es cmp (bad) xchg add imul (bad) and sub lahf (bad) roll fwait test mov fwait popfq jb sbb xchg (bad) mov rclb pop (bad) mov jmpq icebp or fwait repz cmp sub lret jg retq fwait es imul fdivp (bad) mov push cli stos mov (bad) icebp pop mov retq xor add pushfq mov in pushfq push mov lret jmpq fiadd js out (bad) push jmpq cmpsl sbb fs pop sbb rex.WRX (bad) fwait rex.RXB pop int or xlat mov sahf mov cmp xor mov (bad) repz in clc rex.WXB (bad) rcr stos xchg or sti fwait and ja push jns fwait adc outsb cmpsb (bad) sbb movabs pop jle sti lret in sbb nop mov mov in rex.WRX (bad) mov mov fwait (bad) rex.W mov mov rex.WRXB stos jl cs (bad) xor xlat mov test (bad) in xchg movabs in adc in imul fwait xchg (bad) jne sbb lret pushq mov mov and sbb jg repz (bad) sub rex sbb mov addr32 cmp or fwait addr32 xor and rex.WRXB rex.RX je push sahf scas jl pop mov mov rcrl xchg push mov fwait sarl and (bad) fwait push sub push (bad) xchg jb fwait sbb sub rex.WX cmp lods rex.WR rex.X push rex.RXB repz or (bad) xchg fistpl retq movabs add (bad) pop out pushq rclb rex.RB mov jl sub mov (bad) rex.B add callq add int mov cmp mov and cmp rex.XB add jmp or std movabs xchg loopne xchg xchg movabs fistl movsb cmp xchg mov or jae fwait test sarl popfq push adc (bad) mov stos jrcxz jg (bad) jae mov imul fwait push lock xrelease imul fcoml jl callq (bad) gs sub mov sbb sub sarb push mov fistpl jmp mov lods out add jmp pop xchg cmp fwait in pop rex rex.R mov repz adc rex.WB push xlat (bad) rex rex.WRXB fwait xchg pop imul jp je sbbl rex.B rex.WRXB xchg imul sbb in xorb movabs (bad) push std nop (bad) sbb scas inc outsb sub fwait and and xor pushfq xchg lods jp xchg ss sbb es movabs xor mov sar push sti lods xchg mov or pop jno pop jne lock popfq fdivrl or xchg push test (bad) rex.RX push jle cld (bad) sbb loope jge jl mov rcll pop mov scas rex.XB (bad) pushq andl pop sbb mov orb clc add out (bad) adc sbb mov sub movabs rsm jnp movabs enterq (bad) sub outsl movabs loope pop add mov add xor in add mov cmc mov cmp stos rex.X (bad) jae iret imul shrl hlt movabs (bad) mov (bad) test imul pop rorb loop xchg (bad) rex.WRXB imul mov pop jbe sbbb adc mov rex.R (bad) xchg or jmp mov fdivrp ss sbb pop insl pop mov scas (bad) cltd (bad) sbb (bad) (bad) (bad) adc xlat push out cwtl (bad) adc (bad) lret adc mov (bad) xor sahf jnp push icebp jrcxz icebp pushq cmp popfq mov (bad) (bad) sub push jmp cwtl (bad) and xchg cmp out retq cltd add pushfq rex.WX push and sbb rex.WRXB (bad) pop mov outsb in mov mov and cmp cmp (bad) adc and xor jl xchg lahf adc fwait (bad) rex.WX xchg movabs sub movslq jns jo sti test fwait pop test cs xor movabs add cmpsb add movsb ss jrcxz enterq add xchg (bad) xlat rex.WR xchg or mov movabs fwait or fsubrl (bad) rex.WXB insb xchg lret movabs push mov (bad) movsl jno (bad) rex.WRX rex.WRXB (bad) xchg xor rex rex.RXB sbb rex.W decl jne and (bad) add add (bad) pushq testl rex.WR sti (bad) jbe out sahf mov (bad) pop pop jrcxz mov fwait repnz in rex.RB jle (bad) iret (bad) pop and (bad) repz (bad) adc sub (bad) (bad) jnp sbb scas out shlb (bad) add sbb jne iret mov sar (bad) cmp (bad) std rex.WRX std nop push (bad) cmpl movsl adc mov imul rex.B and add lods fwait hlt fisttpl add (bad) rex.WRB rex.X pop lret and (bad) push lcall pop mov fistpl loopne fwait jnp mov jne mov push cltd jge repnz sbb test rcrb jno ds ss rorb sbb hlt (bad) jge movabs es retq out lret adc pushq rex.RB pop sub mov mov jg sub popfq rcr xchg and sbb (bad) jnp stos rex.RX fisttpll loopne fwait adc add jp (bad) cmp or sahf shrb pop es ficompl cmp jb (bad) xchg add shrl sub icebp rol fwait pop xchg (bad) (bad) mov fwait repnz cmp sub mov rcrl xor push popfq shrb sbb or (bad) sbb (bad) fiadd mov add (bad) xor adc add cmp out pop mov (bad) or fwait movsb (bad) popfq js jno (bad) add jo sbb test fcmovnb (bad) lret sahf lret (bad) loope sbb fucomp pop xor (bad) (bad) rex.XB es push cmpsb fwait jbe sub cmp cmp mov rex.WR cmp fldcw pop mov push (bad) repz sub push jle icebp cmpl or mov sub pop es sbb push repnz movslq fdivs (bad) sbbl xchg or imul sbb ja pop jmp jp fldt stos (bad) (bad) rex.WX fwait sbb loop in add jnp,pt mov mov lcall (bad) gs jno jbe pop (bad) lods mov popfq pop divl push out out jno fwait (bad) adc (bad) and fistpl mov imul push pop sub sbb loop andl pop pop sahf (bad) (bad) rclb add jge mov rolb sbb (bad) adc mov movabs pushq jp adc add or fdivrl jb mov or xor es (bad) (bad) sbb mov (bad) jp fild outsb cwtl mov fnstsw leaveq jle rex.XB cmp xchg fwait jae add loop fbld ficompl movabs rex.RB and sub push mov rex.WR sub jl adc lock lret pop jmpq (bad) fwait subl stc out fldenv outsb add mov fucomip fwait out fidiv pushq fwait imul (bad) jp xorb fldenv pop (bad) pop nop sti xchg cmp fwait sbb adc adc movslq xor xchg cmpsl mov pushq movabs (bad) jmp pushfq or rex.WX mov (bad) sub mov (bad) rex.R callq outsl sbb sbb int popfq outsb mov sarl movabs cld mov sbb fildl jb rex.WR pop test add xor lods test std xor mov mov mov rcrl sbb (bad) fwait out xor test (bad) cmp decl adc insl sarb rex.RXB sub pushfq rex.XB imul (bad) pushq or xlat insb sub jle lods and pop jno adc mov retq test in andb in out jns sub rex.WRX xor data16 gs mov and cltd sub (bad) xor sub push xor mov fwait jl rex scas (bad) fcomps imul lret fistp sbb xchg mov sbb push mov (bad) fwait cmp out (bad) (bad) pop cmpsb jnp cli xchg fs and sbb movabs jmp in (bad) fwait xchg es lret fnsave pop cmp jl idivl fwait cmp and out fildl sbb add mov jrcxz (bad) sbb cmc mov stc loopne (bad) mov push rex.WRB fwait ja add rex.WB fwait and and xchg add enterq ja icebp stos fiadd jae rex fcmovne (bad) rex.B repz out cmp repnz xchg adc js (bad) hlt (bad) rex.WRX (bad) xlat test mov sbb repz in cmp mov setnp mov push outsb (bad) cltd mov mov movslq jmp fmull push outsl jbe in (bad) jle nop out rex.WRXB pop mov (bad) test mov (bad) (bad) rex.WR jle stos (bad) mov imul or nop (bad) sbb (bad) xchg xor rcrb rex.WRX stos or push (bad) imul jmpq ss movabs pop rex.XB lock test jno (bad) imul sbb mov xlat rex cmp sbb pushfq loope (bad) push rex.R mov (bad) popfq (bad) gs pop clc (bad) loopne push (bad) scas outsl sbbb xor (bad) shld (bad) (bad) mov jmp sbb and iret jg sti out sti or (bad) (bad) sub (bad) (bad) rex.WXB jp mov test xor and mov cmpsl (bad) and xchg add imul push mov push stos push out sbb sub (bad) xchg jae divb icebp xchg xor cwtl mov adc mov mov and or sti out scas sbb add xor jns cmp (bad) mov and movsl pop sbb rex.WRB out and jl stos push pop mov (bad) loop or out popq ds rex.WX cltd popq or sub and fldl sbb iret (bad) cmp (bad) cwtl rex.RX rex.WRXB and cltd (bad) sti xchg (bad) jmpq repz enterq fildl jge add pop test stc out mul callq mov fwait test mov cwtl (bad) hlt mov fisttpl rex.WRXB rex.XB rex.RX fwait (bad) (bad) mov repz or (bad) fwait (bad) jmp jno stc fnop subl (bad) sub rex.WRXB icebp fistp jne retq es sub imul (bad) mov cld mov jrcxz cmp sbb out sahf fwait movabs scas xlat rex.B fwait and xor in shlb pop jge stos cmp (bad) mov fmull rex.XB mov jb push rclq rex.RB in int int3 sbbb (bad) cmp add (bad) (bad) movabs retq mov mov rex.RXB pushq xor (bad) addb add rex.WR fwait cmpsl movabs cwtl lret mov lahf add test movabs int rex.WRX fdivp loop pop mov push fwait mov cmp insl or fwait movabs rex.WR (bad) gs outsb (bad) fwait mov jp xlat mov xor mov orl adc and jbe and popfq sbb cli jl jmp imul cmpsb fwait js jp push (bad) jnp (bad) rex rex.RX jle mov rex.W sbb add fwait (bad) andb sbb test sahf out cmp add add lods in pop fwait jo mov and sub cmc (bad) mov pop jae (bad) lret rex.W jl mov (bad) mov rex.WRX fwait loop ds fbld rex.WB or fsubs retq xchg leavew movslq fwait cmp add mov push xchg stos lods add mov fwait pop movsl fnstenv cltd mov rex scas pop or lahf and and xlat mov fwait xor (bad) rex.WRX fwait callq dec scas fwait rex.R sbb mov and mov push (bad) decl std in or (bad) xchg jg pop add rex.WB xchg sbb (bad) (bad) adc cwtl retq (bad) mov js fcmovnu sub clc rex.W data16 sub in cs jmpq hlt out loop lret cmp int3 fwait push out shrb sbb xchg lods (bad) rex.R rex.R rex.RX jne cmpsb (bad) or es jmp rex.W xchg mov (bad) or rex.WRXB sbb in and mov rex.B (bad) xor xchg push stos mov mov sahf std ja shll in and out scas (bad) (bad) adc fidivrl (bad) addr32 (bad) mov jle add lret lcall or xchg and rex.W stos mov sbbb (bad) fwait jmpq or xchg vmovaps jno fwait (bad) pop retq cmc add test fwait push sbb leaveq xchg xlat adc rorl (bad) cmp movabs (bad) jge cmp lods mov mov decl roll (bad) mov rex.B sbb add loope test callq xchg icebp icebp popq jae cwtl (bad) fcoml pop orl and rex adc jmp rex.RB andl in adc ds pop mov push stos xchg fwait adc rex.WX sbb fwait xchg xor fwait jrcxz push (bad) mov sbb jae mov clc jne pop movabs xor in cmp add outsl xor test rex.WB jne retq mov stc adc rex.R sbb in out lret add movabs (bad) mov jl sbb sbb scas fwait test fwait imul pop push (bad) xor int3 fwait notl xchg movabs jnp mov outsb mov sbb lret (bad) scas retq sbb add imull mov fwait hlt pop or fwait sarl shr and xchg add or lahf (bad) cmp mov mov jmpq fldt movsb rex.WXB rex.XB xlat fwait (bad) sti addr32 callq add sarb retq rex.WR fwait xchg xchg and adc imul fldt repnz push rex.RB push lahf adc test xchg in rex or cld out mov xor popfq (bad) (bad) (bad) mov rex.B fwait rorl adc fwait jle adc movsb cmp xchg pushq jnp (bad) out sahf push (bad) sbb xchg rex.RX movslq in add loope fcmovbe cmp popfq rex.RX push std xchg (bad) or adc subl movabs jmp (bad) rol sbb (bad) loop pop adc cmpsb sbb gs sub (bad) adcl add in out (bad) sbb and cwtl lock rex.R gs mov and mov (bad) adc push out stos (bad) scas push adc (bad) decb jg rex sbb rcll lods rex.RB ss fxch and out data16 pop hlt adcb sub (bad) (bad) pop mov stc (bad) rorb mov sbb add (bad) adc mov es push test movsb jo in (bad) mov mov jge xlat sbb mov lret (bad) cmpsl movabs (bad) xor rex.B repnz insb ds add sbb pop xchg mov (bad) cmp scas cltd (bad) xchg (bad) and mov mov mov jp lods mov (bad) int3 ss cwtl mov outsb sbb push loopne jge (bad) or mov pop fnop jnp int rex.X pop in out rex.WRX orl (bad) mov shll cwtl sbb leaveq fnsave int cmp pop adc mov cmp popfq xor jo sbb movsl sub insl xor jbe rex.B es sbb rex.RX xchg fldt ficompl scas pop jo roll nop rex.WXB mov pushq cpuid mov movabs sub pushfq sub adc callq (bad) sbb xchg add fmull cmp xor loopne sub cs pop rex.WB rex.WX stc mov and mov or mov fwait roll fwait xchg (bad) stos imull popfw fwait jl sub callq stos retq jmpq cmp sub cld xchg and adc sub cmpsb or xchg sahf test cmc sub movabs rex.WR mov es mov in out or (bad) (bad) (bad) (bad) loope sub xchg xchg adc callq (bad) outsb fmul rex.RB (bad) jns idiv or rex.R fs mull cmpsb rclb loop (bad) in (bad) hlt push cmp ss (bad) add rex.X (bad) mov rex.WX add xor pop xor push leaveq jmpq adc xchg jg fmull mov psubusw (bad) and push add fnstcw loope lcall jnp jne sbb mov rex.WB (bad) ja cmpsb lods mov rex.WX (bad) jo add push lods sub movq mov or shlb rex.XB xchg mov cld jp sub rex.XB and xor mov loope fwait cmp sub (bad) lock outsb sbb xchg (bad) fwait xchg mov out notb jg imul push add scas xor test (bad) int fstps fist mov mov movabs std sub sub rolb xor add rex jae sbb fstpl mov lahf ja fistpl mov test shll jmp (bad) cmp outsb pop add xor rorl ss fwait leaveq sarb sub rex.WRXB rex.WX fwait icebp test repnz rex.RB (bad) mov (bad) movabs mov (bad) fwait outsb jmpq hlt xchg sbbl or and fwait es iret pushq jb sbb lret jb test rcrl xchg fldl lea retq rex.RB test push xchg fbstp in push es jns xchg push clc loopne and jrcxz fwait pop and (bad) fwait int3 repz lret cmp fwait leaveq xlat xor in fild fwait (bad) (bad) movabs (bad) jmp or (bad) ja out movslq test stos pop jnp sbb add out repz out (bad) repz cmp jno fwait mov int mov cmpb cmp fwait pop pushq ss xor (bad) and fwait lret nop lahf (bad) (bad) stc fwait rorl ja rex.WRB xor rcll mov negb mov and xor jnp pop leaveq packsswb retq (bad) sar ss xlat in cmp xor mov in and or gs mov retq (bad) (bad) (bad) mov and fldz rex.RB fwait add and lret xor xor or cmc shr fwait cltd ljmp add (bad) out (bad) (bad) jno cltd cmp push mov retq sbb jmp mov lea in (bad) in push add (bad) sbb movabs mov rex.B rex.X sbb (bad) adc push mov fdivl cmpl out rex.R sbb fwait rex jle add xlat repz repz mov jrcxz outsb fwait cmp adc stc int jo (bad) fwait and and jbe rex.R mov movslq fwait push test adc stc sarl adc xchg and xor shrl fcmovu or fistp nop xor add and (bad) leaveq repz pop (bad) cmc movb xor jmp (bad) pushq mov movabs push sbb int3 xchg fwait mov cmp xor sbb mov out mov orb or rclb jge mov sbb sbb in xchg sbb scas movsb mov adc cli repnz (bad) fistp out loop add push insl xchg jge je (bad) (bad) (bad) cmp (bad) push in (bad) movabs repnz insb and xor rex.RX and mov rex.WX movabs (bad) loopne movabs push pcmpgtb insb or mov push shll js mov stos and (bad) mov insb and sub add rex.WR std (bad) rex.R jl cld stc sbb outsl adc sub add adc (bad) xchg loopne rex.XB cli cmpsb mov sub ds fildl mov (bad) fwait rex.X adc sbb adc or (bad) (bad) and stos mov xchg movabs (bad) (bad) (bad) add fwait or rex.WXB cmp in fwait bnd repz mov retq fst (bad) (bad) rex.RX addr32 adc sti flds (bad) enterq pop xchg leaveq stos stos cmp pop sbb rex.B ss (bad) xlat (bad) clc fwait mov sub add rex.RB (bad) int adc rex.WRB imul jle (bad) (bad) pop add leaveq jbe or (bad) and add sbb xor (bad) adc movsl scas sti add fwait push mov cld leaveq fwait lahf rex.XB repnz cwtl movsl stc (bad) lret add fwait xchg in jns lea out (bad) mov fwait mov push (bad) mov fsts (bad) lods (bad) (bad) mov rex jp orl and (bad) ja xchg mov rex.WB clc js sahf or fwait mov (bad) (bad) rex.R test xchg decl pop add sbb movslq sahf iret sbb mov or hlt (bad) xor sahf and fwait mov movabs rex.RXB (bad) adc sti add lods rex.RX rex.RXB adc outsl pop adc mov sub add fwait xor or movsb jmp or push addl (bad) mov ficomp jnp (bad) cltd ss sbb xor rex.WRX push fwait mov sbb jo and (bad) jb mov pop (bad) pop stos test mov lods sbb fidivl fisttpl sub rex.WRX stos (bad) fwait in sub or fisubl loope sbb jbe pop mov adc cmp cmp and cld rex.WX or shrb and (bad) mov lret or fwait add xchg repnz (bad) mov xchg in rex.RX rex.WRB (bad) (bad) push (bad) or jns rex.B sbb xchg mov lods icebp cmpsl mov adc sub iret jg push xor or fwait (bad) mov movslq jl movsb orb fwait jns or sbb or rex.RB mov fwait lods xchg loope xor fwait jp cmp xchg enterq fisttpl rex.WX fnsave repnz mov pop or mov xor sar add add push test jne out push (bad) leaveq xlat sub mov mov rex.WXB fwait xchg cmpsl faddp rex.WX rex.B fwait clc sub nop sbb gs sahf repnz xor scas cmpsb adc enterq cltd mov sti jmp cmpsl xchg mov fwait add jmpq int3 fwait pop stc xlat add xchg xor out in mov test movabs (bad) add mov push rex fwait punpckhdq je or push sbb add mov movabs jrcxz push lret jg (bad) not xrelease pop sti mov (bad) (bad) sbb mov xor in sti lods sub push loop xor rex.WR gs xor cmpsl lods (bad) (bad) scas and fsubrl add and out sbb rex.WRX mov outsl fcompp outsb xorl (bad) mov jg pop rex.WXB adc xchg cmp mov and shl xor (bad) (bad) and out xor jrcxz pop add rex.XB fs mov (bad) (bad) (bad) and add or (bad) sbb (bad) in insl sbb sbb mov testl out movabs pop loopne cmp mov cmpsl data16 jl cltd scas pop cli lret add adc fcomps mov cmp mov cmp test out out sbb leaveq jmp (bad) fsubs pop or rex.XB (bad) cwtl (bad) negl rex.B cltd jne fsubr (bad) mov cwtl (bad) (bad) nop addr32 (bad) jae add xchg (bad) jrcxz cltd pop jns jnp movslq ja pop adc xchg sbb pop pop cmp sbb loopne mov fcomi fsubs out and xor pushq mov loope rex.X mov (bad) adc rex.WRXB pushfq push sbb cmp mov add cmpsb pushq (bad) pop cwtl (bad) push (bad) movabs movabs adc loopne mov (bad) add (bad) (bad) cmp lahf insb popfq fsubrl rex.X (bad) and add pushq and rorb (bad) (bad) sbb mov jmpq imul (bad) movl xchg es cld xlat jnp idivl movabs cmp repnz mov cs and add cltd push scas mov (bad) xor lea jne cmc jo in (bad) (bad) mov clc xlat insb sbb pushq pop mov jg test jns cmc in loop repz (bad) fdivrl and hlt mov xor or xchg xchg loop or mov (bad) movabs loop mov or orl (bad) mov add push jl mov and cmp xor stos lea in (bad) fsubs (bad) movsl xchg push lret (bad) pop xchg mov roll rolb xor out cmp rex.RX sub or out (bad) lret mov xchg adc sbb movslq clts (bad) rex.WR (bad) adc push movabs jns xchg rex.WXB rex fwait add or mov xlat (bad) and sti pushfq retq roll push mull adc rex.X xchg std sbb pop (bad) cmp fwait xor xchg leaveq and xchg (bad) test scas test loope pushfq rolb fwait (bad) push jp adc mov (bad) mov mov stos add sahf (bad) rex.WR notl insb data16 fwait lret rex.RB out add (bad) (bad) (bad) fwait (bad) outsb jmpq jle (bad) sbb (bad) fwait retq shl mov icebp int fwait add sub sbb sbb (bad) pushq (bad) lret (bad) out rex.RXB mov jnp repz push add fwait mov sbb fwait xchg fidiv mov (bad) icebp xchg adc rex.WRB and (bad) xchg add popfq cld and in mov sahf ja mov xchg adc insl sub mov fwait and ss or and sbb (bad) rex.RX rex.WRX xlat xor repz (bad) (bad) fisttpl adc movabs push push add mov fwait out (bad) push leaveq mul ss xchg mov (bad) xchg cmc or and mov or cli setg and jns fnsave imul ficompl jb test mov pop push rex.WB push rex.RX jge mov adc shrd xlat cmp sbb adc rex.WRX repnz mov divl (bad) sbb fwait idivb jle fwait mov js clc vmovaps add sub std (bad) jl mov sti push outsl jae sbb sbb pushfq mov mov add cmp adc rex.WX out cs gs (bad) (bad) (bad) cmp sbb xor adc mov lret (bad) mov push movslq (bad) js push xor mov xor fcomps mov insl icebp fwait pushq jae test jrcxz sbb xlat fwait push adc xor fwait sahf mov (bad) data16 mov fwait std stos cmp mov add rex.WXB push pop fwait sub sarb pushw nopl mov movsl pop mov std cwtl sahf pop (bad) movslq cmpl fwait cmp rex.W js rex.RX fwait push mov (bad) fwait (bad) fidiv mov in fwait retq sbb adc fstps fsub enterq pop mov fwait push jle mov lret (bad) sbb rex.WR lods and loopne and push jl (bad) xlat mov mov cmpsl xchg loope (bad) nop rex.WRX sti addr32 push sbb data16 (bad) mov mov pop mov insl scas fwait push (bad) jl (bad) (bad) cmp movb and xor loope stc rex.WB subl mov lea callq (bad) es xorl cmp (bad) jge and lods jne out jle sbb loop fs xor in insb mov in adc sbb jrcxz rex.XB jle sahf addr32 test cmp shrl jnp xchg mov fldt nop subl rex.X sbb (bad) in (bad) rcrl pushq add and lahf fwait and stc (bad) out fwait sarl mov movabs out vpmovzxdq enterq sti loopne lret (bad) pushfq cmp stos scas sti rex.WR fwait addr32 (bad) mov and (bad) imul mov repz std push (bad) cmp pop sbbb rex.WR (bad) sub xchg retq mov outsl mov movsl xchg and roll fwait sub fnsave sbb test fbstp out mov test jmp fwait xchg setle push mov (bad) jmpq (bad) test fwait sbb rex.X repz fwait rex.WX ljmp notl leaveq (bad) fcmovnu cmovae mov (bad) fstl imul in fwait nop je push (bad) jge out add stos flds jg js (bad) imul mov (bad) fwait cltd mov (bad) mov pushq loop and (bad) rex.WXB iret out (bad) mov (bad) cmpsb sbb outsl leaveq jo sbb pushq sti xor pushq rex.WB and mov lock rcrb fwait cltd leaveq lret icebp and fxam (bad) sbb adc js outsl (bad) sub mov fwait cld jge enterq addr32 mov rex.WX insb (bad) lret jo push and sti mov imul fwait and cmp and movabs repnz (bad) fcoml (bad) imul ficoml addl scas fnsave je rex.RX pushfq adc mov mov (bad) stos rex.WR xchg (bad) push push (bad) ds movsb movhlps and jl movabs adc rex.WRXB xchg add add loope push mov rex.WRXB cmp push mov je (bad) stos sub add out push rex.RB data16 out adc pop (bad) sub mov subl fwait adc adc ds test clc sub stos and fwait test pop gs cmp flds rcrl pushq iret adc fdivl sbb jmp imul rex.WR xor adc mov or jae (bad) movabs movabs rex.RB (bad) lret fwait ds mov (bad) fistpll (bad) mov pop rex.WRB sbb sub sahf push (bad) jmp rex.X rex.WRXB cwtl sti icebp mov rex.W mov (bad) leaveq (bad) xchg push ds testl stos pushq sub adc fwait jmp xchg (bad) pushq (bad) (bad) pop movabs insl add divl push fldt shrl rex.WX push (bad) lret (bad) sbb or mov adc lea rex.RX repnz adc push add pop or mov sbb clc lods stc (bad) loopne movsl (bad) outsl jrcxz adc fwait xor rex.X jge imul fild mov in pushq callq fwait outsl cmpb and add fisttpl pop (bad) add fistp jae adc clc test sbb ror mov (bad) rex.R fwait pop (bad) cmpsl pushfq (bad) in cmpsb psubq jmpq fwait movabs pop xorl (bad) sbb jne retq (bad) xchg jp outsb (bad) (bad) out jo fwait cltd (bad) or iret cli andl fwait rcrb leaveq setae sbb lock (bad) nop sbb faddl sti adc cld sbb mov or jle add (bad) cmp sahf xlat fwait leaveq mov xorl fs repz (bad) push jnp fwait push sbb pushfq test mov sbb scas (bad) idivb xor std addl fstl addr32 xchg movabs lahf add popfq cmc popq in addr32 (bad) adc rorb rex.R (bad) add jmp in jb jl jge cmp in fwait clc imul and mov or mov cmpsb add lahf add mov in jl jns rex.X sti ficompl orb mov (bad) (bad) (bad) add mov and sub mov sbb (bad) int3 rex.RX in popfq fildl (bad) xchg (bad) cmc fwait push sbbl outsl data16 fwait mov sub sti jns (bad) (bad) push cmp mov pop mov cltd je cs pop mov mov ja fwait xchg out out mov movabs out (bad) movsb out lea xor out pop or cmp out sbbl sbb mov fwait sbb (bad) (bad) xchg sbb movabs (bad) (bad) fwait sub push rex.RX orq pop std push fistpll ja outsl or (bad) leaveq sbb rex.X imul sub loope stc (bad) mov adc (bad) fstpl adc pop pop lret (bad) and addr32 cmpsb jb nop mov sub fdivrl (bad) fwait sub push (bad) data16 and retq movabs mov fildll movabs addr32 pop in mov cmp (bad) (bad) in in sub sbb pop out xchg adc xor jg std cltd pop pop cmp sub rex.X loop pop stc mov shr add cwtl (bad) (bad) xchg jmpq rex.WR rex.R and jrcxz out or fsubr xlat jmp rorl cmc mov test (bad) jno (bad) loopne pop movsb fadd rex.WX sbb (bad) mov push xchg nop (bad) js mov mov sub cmpsl sbb adc rex.WX rex.WX and or movabs lea (bad) movsb push movsl lahf fisttpll mov shrl pop addr32 ja rex.WRB sub xor or rex.RXB xor xor retq std and mov shr pushq int3 js (bad) xchg xchg movslq pop lea sub xchg push pmaxsw callq in ja xor retq cmp pushfq pop mov xchg or in jl out movabs je cmp add movabs rex.WX je jbe rex.WRX mov mov (bad) adc adc lods jle xchg sahf sbb out jl stos fimul (bad) mov rex.X rex.RXB (bad) ja add stc (bad) stos imul mov andq (bad) sub (bad) in repz cmp mov mov sub sahf cli xor xor sub outsb and sbb jp callq (bad) sbb mov or testb rclb mov loopne xor (bad) (bad) mov jmpq (bad) (bad) mov xor test and xchg sbb adc (bad) (bad) xchg pop sbb sub loopne mov (bad) cmc hlt insb mov jb mov rex.RX lret insl mov (bad) int3 adc jns add pop movabs imul imul rex.XB rex.RXB pushq out adc jae jle js callq jb mov sarl mov add sub and fwait mov (bad) addb jns fwait movabs (bad) rex.WRXB retq pop (bad) adc pop data16 rcl xchg rex.R and mov cmp je mov gs pop ss int lods mov mov in xor movabs outsl (bad) sub in push cmp cltd in xor (bad) mov sbb rex.R fwait ja xchg or push rex fwait cmp xchg scas shrl sbb cmp (bad) push fildll xor cmp jns rex.W fwait mov roll (bad) test leaveq add loope add mov add retq iret (bad) jmp add fs jb popq lods push mov lahf rex.WRB add push mov push rex.WX rex.WX fs (bad) adc or xor movabs rex.B fwait stc jo rex.WX movabs push sahf push sbb sub sub (bad) mov fwait rex.WR sbb sbb jl addr32 xor movabs lret add rex.WXB enterq loope (bad) iret fwait (bad) fildl imul sti jrcxz test lahf adcl sub xchg jbe (bad) mov mov fwait lock fsubs and movabs loope mov callq (bad) (bad) (bad) movabs xlat outsl cld in movabs sbb pop adc lea (bad) loop jge fneni(8087 rex.R nop (bad) fwait cmp sub sub (bad) fwait rex.X imul or iret std rex.RXB mov and rex.WX push leaveq jb xchg sahf fsubrs fildl push or push cltd sarb imul mov mov jmpq sti or cmpsb push subl add (bad) gs out (bad) jge xor (bad) mov sbb mov mov cmp adc sti jmpq std sahf leaveq add add xchg cmpsb mov pop jmp rcrb xor sbb sbb sbb sbb cmp sti xor push pop sub adc fwait jnp retq decb insl shlb sbb test (bad) cmp cmpsb cmc add (bad) adc icebp or fwait out leaveq jo (bad) test sbb lods (bad) or fwait xlat in movslq sub rex.RB fs sbb (bad) sbb ds fwait adc orl (bad) movabs pushq push push push sti mov je add fwait jae mov popfq (bad) mov cld sti cltd sti (bad) pop push fwait data16 iret hlt std sub jp sbb cmpsb sbb mov fmuls movsl (bad) sbb (bad) (bad) iret add negb js pop (bad) pop fwait jo (bad) cld sbb (bad) movsl add or sti rex.WXB loop outsl jb data16 pop and add jmp cmp sbb push scas in jb adc rorb mov cmp fwait (bad) pushq movsl retq cs xchg test out jne addb rex.WR xchg (bad) (bad) int3 (bad) mov movabs jae pop repz jge test xchg rex.WR fs rex.RX fwait (bad) cmpsb (bad) fdivrp fwait sub fcom out jne and fwait and jbe jmpq (bad) push mov std jo sahf pop int movsl pushq ds stos loope enterq cmpsl push pop mov rcrl mov (bad) sbb (bad) movsl rex.WR add (bad) (bad) (bad) cmp enterq out popfq or xchg sti rex.WR mov push mov xchg rex.B in push mov add pushq movabs fwait jb addr32 lcall scas sub fwait adc and sbb push retq cs mov sbb repnz or pop cmp mov rex.RXB shrl loop (bad) cmpsl stos pop push (bad) cmp fcomi mov and (bad) cmp (bad) jno add rex.RXB fwait push cmc mov repnz lods cld sbb retq mov pop mov push mov and (bad) push ja (bad) (bad) rex.R fwait leaveq cmpsb jge rex.WB xor rex.WX loope fwait (bad) es pushq sahf or jg adc (bad) fwait (bad) sbb bnd sub insb (bad) loope lods int sbb (bad) out retq fstpt xchg stos mov fstpl out mov insb fs pop loope xor adc mov scas subl (bad) retq je (bad) mov outsb adc adc (bad) decb rex shrb add fwait mov push jl (bad) loopne,pt and xor ror ss stos jmp (bad) (bad) fwait js xchg retq test (bad) fs add mov cld movabs imul test cmp add adc callq jne add xor fmul data16 retq mov mov js pushfq sbb test (bad) or rex.R rex.WRXB sbb xor (bad) sub mov repz (bad) popfq mov adc (bad) sti xchg and xchg movabs mov jne (bad) push adc movabs xchg add and decl xchg add cmp adc and fwait mov sbb hlt add cmp jmpw fwait lods jg cs stc jbe (bad) (bad) adc movabs adc sahf (bad) mov fldt jbe rex.R repnz (bad) retq test cmp xor mov add rex.WRX fwait retq mov (bad) int mov sbb xchg pop mov pop sahf (bad) fimul add xchg (bad) test shrl fcmove (bad) jg mov sub adc cmp (bad) sti push (bad) hlt mov and mov jge (bad) ja rex.RXB fwait mov (bad) sbb ds fwait pop (bad) (bad) pop mov jp jmp out add rex.RX push fwait push addr32 mov pop scas rex.WR jns pop (bad) iret repz fwait mov fsubs sbb mov out adc addr32 rex.XB jle test insl cmpsl fwait add or xor lahf fwait (bad) (bad) je cwtl adc mov loop mov xchg iret rex.B movabs mov jl jp iret adc sub sbb or xor jmp movabs xchg fldl lods repnz push popfq leaveq xchg pushq jmp fidivl (bad) xchg retq jne scas lods jl and sbb xor retq fidivl mov adc mov fwait mov sar out hlt (bad) pop fisttpll add (bad) jmp int adc rex.B (bad) je in or rex.RB (bad) sbb mov (bad) fsubl cmpsb mov cmc mov test lods cmp jrcxz out in rex.RX jno fwait negl (bad) jmpq jg or xor xor fs iret sahf loop (bad) push mov (bad) fs retq cmp sbb movslq mov addl int3 or rex.XB callq fsts (bad) movslq sbb (bad) jmp cmpsb xor jge jbe repnz int rex.X pop mov xor fsubl (bad) push bnd hlt xchg pushfq xchg mov (bad) leaveq and rex.WRXB sbb xor adc xchg and (bad) imul fwait movslq cmp cmp mov xchg fwait jne (bad) retq rex.RB lock cld jmp int3 push loopne pushq mov fsub mov movabs fild (bad) jge or fimul xchg rex.X sbb sbb (bad) add stos sarl mov addr32 or jrcxz imul mov faddp out nop push sbb std pushfq xchg pop insl icebp movsb sti add sbb cmc (bad) callq add push jle (bad) jl jg rcr fildl pushfq rex.R repnz jbe outsb rex rex.WB (bad) fwait rcrb xchg vpavgw (bad) sbb (bad) cld fdiv rex.RX jmp mov fwait rex.X rex.WR jno fldt rex.WRX hlt adc (bad) xchg cmpsb mov ficompl cmp (bad) (bad) and rep sbb movabs rex.RXB hlt sbb fdivrl mov in push pop xor xchg jmpq sbb (bad) je xchg (bad) xchg fcomi std mov sbb sahf test sub out es (bad) mov rex.X movsl pushfq sub sub (bad) stos imul rol rex sti je jno jns mov loope rex.WR es movslq pop jno sub push in add test callq rex.WXB (bad) jbe (bad) xor fcmovnbe pop in and jp pop movslq xchg mov jrcxz xor mov mov rex.X cs addr32 neg xchg and es adc fdivrl cmp (bad) int3 sub and loope adc mov fdivrl mov push push (bad) rex.WRX pop fwait mov push lcall and sub stos cmp rex or ds jle lods fimul loop lret int3 clc leaveq sbb add sbb pop fwait sahf movabs sbb xor (bad) lea insl (bad) or or imul adc lea cmp mov movabs loopne pushq pop mov ss xchg (bad) repz xchg mov hlt adc and fwait imul repnz out rex.XB rex.R fwait (bad) (bad) cmpsl add sbb xchg (bad) enterq (bad) rex.WRX movabs imul or add (bad) fmuls jne (bad) (bad) movslq in cmp pop popq rcrl outsb jp pop xchg mov jrcxz rex.XB sbb fdiv sub xor pop sub (bad) mov jae xlat push (bad) lret or fcomps push hlt mov mov cltd (bad) xchg pop lock data16 hlt (bad) int out add loop movabs fnstsw (bad) cmp iret mov pushq or cmpsl sahf rcrb fcomi mov xor adcl sbb (bad) jne callq retq and rex.RB mov (bad) (bad) adc addl sub xor sbb mov movabs mov xor movsb (bad) (bad) lods mov xchg (bad) frstor xchg xchg lret (bad) out or jbe xchg sub jg jne (bad) pop fwait rex.WRX xlat and test add xchg (bad) (bad) mov xor jmp outsb or adc shrl mov mov outsl fwait (bad) xchg retq or popfq std (bad) sbb in add pop mov (bad) rex.WRB rex.WRXB movabs insl outsl mov jmpq (bad) jmp repz callq (bad) (bad) rex.XB push cmpsb out fwait add in icebp push rex.RX xlat adc mov idiv pop mov int3 rex.RX fcompp rep jns clc xchg fwait jp or sbb loop mov roll lret mov add rex.B orl cmp xchg fcompl and mov mov loope int stc fsub adc lret rex.WRXB rex.WRX ja fwait mov and rex.XB mov push (bad) repz pop pushq insb rex.WRXB pop sbb (bad) and jne cmp jnp fsubrl pushq fwait jb stos jg mov xchg fwait add movsb sub loop outsl mov rex.WRB adc cld xor mov (bad) repz mov jbe fwait js (bad) jae out test fs (bad) jbe sbb or rex.WB (bad) sbb (bad) fwait (bad) mov cmpsb (bad) jge xor sbb xlat push int jle cmp fwait mov jmp loopne adc fwait shlb nop add outsb iret xor loope rex.RXB (bad) cltd stos (bad) scas imul fwait loop movslq (bad) sbb rex.RX xchg (bad) add pushq jg rex.WRB mov fwait xchg (bad) insb or jns fwait mov fimul out mov rcrb jrcxz sbb mov stc xor loope fldl je (bad) int3 or sbb bswap jae xchg movslq pop test data16 jmp in sti xchg add cmp sti add pushq sbb stos in mov sbb mov (bad) in mov pushfq mov scas jmp (bad) in cmpsb cwtl fwait xchg or cmp in negl xor pop (bad) push cmp xchg adc (bad) mov mov push (bad) fidivrl mov (bad) fwait mov push (bad) loopne cmpb jle pop rex.WRX out sub mov add js sti adc rex.B rex.B repnz push fwait mov jrcxz scas addr32 mov int push sti xor andl cltd pop rcrb stc out rcrl jge fwait mov cmp cwtl (bad) rex.WX fwait div pop addl insb loope (bad) in fisubr fwait mov rex.RXB outsb rcll (bad) popfq jno in rex.R or xchg lods xor fwait imul sahf mov and rex.WX mov sbb mov sbb push repz pushfq (bad) mov fwait cmpsl mov movabs mov int xchg loop jmp mov rex.WR sbb and rorb fwait mov mov xchg adc push mov rolb cmp mov iret fwait sub sub movsb fcomps add jp pop (bad) fwait callq mov pop fwait ds fstpl or push enterq xchg shrb imul je imul sbb movsl jnp mov sbb mov imul fwait cld adc pop xchg sbb lock cmp fwait mov push push subps mov or xchg fwait movslq (bad) nop sbb frstor jg sti mov mov sbb outsl fwait mov add pushq xorl shl in pop rex.X cmc movabs mov jle loopne movsb adc rex es in repz push (bad) retq callq sti pushq rex.XB in mov fwait mov xor fwait jmpq mov (bad) mov pop cmpsb (bad) xorl push (bad) fsubp rcrl cli mov xor sub orl fwait lods (bad) mov lea sub cmp add jg add add sbb cmp mov fwait jo sti xor lret xlat scas clc fwait and and jrcxz imul sub gs jns sub adc adc sbb (bad) jae push int3 loope jb cmp xor fwait rex.WRXB cwtl stos fxch and adc pop loopne int cmp retq popfq movsl outsl xor movabs rex.RX jnp rex.XB xchg xor or movsb (bad) rex.RX fstpt mov shrb insb (bad) callq or movslq pushq sbb movsb fbld clc and in xchg (bad) or xor test add pushq out xchg sbb xchg lret (bad) cli lahf xchg pop (bad) rorb jp iret jg (bad) or jns or xchg (bad) xchg pop (bad) cmp mov cmp fsubrs jg sbb out sarl jns (bad) shrl (bad) jge sub sarl (bad) (bad) (bad) movsb add push stos rex.W repnz rex.WRX rex.RB xor adc sbb cmp pushq jg leaveq rex es ja rex.WXB fwait (bad) clc out in pop callq pop std gs push xorl mov add rex.WRXB add fwait (bad) (bad) (bad) or cwtl mov xorb fwait (bad) lea (bad) fwait enterq add stos lret mov (bad) mov (bad) fistp (bad) adc xchg cli pop addb sahf sub adc rex.B rex.RX (bad) fldt jge (bad) jmpq add fwait movsl jo icebp rex.WX gs ja js cmc (bad) (bad) lahf cmp cs imull mov stos movabs add outsb adc (bad) adc sub (bad) mov (bad) sbb (bad) repnz mov and adc popfq repz jmp xchg je lahf leaveq insb sti rex.RX fwait addr32 out out pushq in xchg fwait iret (bad) rex.WR fs fistpl movsb sub out out cwtl mov (bad) int xchg mov pop test icebp mov fwait xchg cmp push pop shll mov sbb rex.XB adc and insl cmp cmp sarb ficom enterq pushfq and sbb je fwait cmpsl adc adc movabs jle adc xor fwait in mov (bad) movabs mov fwait (bad) sbb (bad) and mov idivb mov ja mov (bad) iret pushfq (bad) sub mov mov pop add mov movabs leaveq jo rolb adc rex.WRXB insb fwait adc mov and xor or mov fwait test pushq fcomps or icebp jne fwait mov (bad) xor rex.WX scas cld rex.RXB (bad) lods add (bad) iret addr32 lret imul fcoml (bad) cmpsl jp adc mov (bad) mov movb sbb sbb (bad) popfq fcomip sbb or fwait leaveq in out jmp fwait iret rex.XB mov (bad) (bad) stos adc retq and xchg and push sub fwait sub cmpsb mov sbb jl (bad) sub fwait movabs jmp idiv fwait rex.RB pop rex.WB push fwait (bad) xchg (bad) subb (bad) movabs rex.RX ja mov movabs mov sahf jl cli sar movabs sti (bad) xchg cltd cmp push lea (bad) ds push and imul sahf rorb roll adc sub mov pushfq sti loop ja in mov xchg movabs cwtl movabs and jmp (bad) mov pop adc (bad) (bad) (bad) fwait mov sarb (bad) sahf fcomi cmpsb out popfq cmp pop mov or rex.WRX mov sbb ja sbb and clc xor (bad) stos scas cmp sbb (bad) test movslq sbb mov loope loope sub lea fwait mov mov mov jrcxz callq sti stos addr32 leaveq pushfq cltd int jg fistpl retq (bad) and test (bad) mov fwait clc js mov out and (bad) mov nop scas pop jg and out fwait rex.WRX pushq xor rex.RX rex.WRXB push stos std sbb push sahf or (bad) (bad) fisttpl ss out out vpsubq lods pop int3 or and mov rep imul push sbb fwait rex.X mov insb add loope imul fwait sub mov pop rex.B popfq sbb outsl or rex.W xchg add lods mov (bad) rex.WRXB (bad) or sbb decl fidivrl mov jge in jle lcall or add cltd rex.W out fiaddl callq xlat fmull movabs adc (bad) add xchg fwait (bad) (bad) jg xchg xor cltd (bad) xchg movabs stos std sahf rcrl and (bad) pop jmp pop lock mov repnz sbbl add rex.WRX dec xchg (bad) (bad) cltd fwait divl sub icebp pop jnp mov xchg sbb mov fnsave je cmp in (bad) push leaveq mov (bad) fcompl repnz (bad) popfq add (bad) movabs or addr32 lret push adc retq sbb jno fisub movabs addr32 stos int add pushfq mov and (bad) xchg cld fwait cmp xchg (bad) adc rex.RXB sbb rcrb mov (bad) (bad) rex.XB cltd (bad) rex.RXB rex.XB pop mov add mov stos fwait lock sti imull sbb adcl add movslq (bad) jl push sbb adc mov fwait out and fwait movabs add (bad) cs sahf add sbb or cmp fucomip (bad) (bad) lea or sbb ja xor movabs test (bad) sarl in sbb push fwait (bad) jnp (bad) xor in mov rex.WRXB (bad) sub xlat rex.XB cli mov stos mov (bad) jrcxz rex.WXB jle mov icebp (bad) in lahf imul and sub xor pop xorb movsl js fistpl movabs sub xchg cmp rex.WR loopne xchg cmp and xchg lret sti (bad) xchg es xlat rex.WRXB loop clc sbb xor mov sub (bad) add (bad) gs faddl mov jo sub pop jb lods or mov rex.WRB pushq out and (bad) pop pop rex.WRX data16 xlat jrcxz pushfq pop lods (bad) ss sub (bad) (bad) sbb adc leaveq pop fisttpll xlat mov xorl sbb ljmp pushq rex.WX sub fstpt movabs addr32 xor fsubs add adc rex.WXB rex.XB popfq rex.WRX xchg (bad) cmc (bad) mov es pushq retq pop pop jae roll add jg in (bad) cmpsl or push mov and (bad) rorb jmp xor (bad) (bad) (bad) (bad) xor (bad) rex.WRB xchg sbb adc or mov add (bad) imul movslq int retq in mov mov xor (bad) mov out push and popfq int3 mov callq movabs std cmp pushfq (bad) and mov jrcxz mov push out rorl out lods (bad) rex.WB fcmovnu (bad) mov xor rclb xchg push mov lea rcrl mov rex.WXB pop andb movabs cmpsb rex.XB rex.WXB push and xchg es mov rex.RXB xor xchg rcr sbb adc jl in in (bad) and retq xchg cmp and and (bad) or lahf enterq sbb xchg scas fisttp pop test fildll xchg lret mov lock cmpsb cmp mov (bad) or fistpll sbb ss sti cmpsl test mov movabs rex.RB imulb sub outsb jo hlt adc mov or mov andnps out rex.W cmp outsl adc repnz mov adc idiv mov cmp rex.WRX outsl xchg sbb out (bad) (bad) (bad) (bad) es mov pushq pushq or es rex.XB push or movsl (bad) sbb fs add rex.WX cmc sbb sbb rex.RB mov mov (bad) leaveq cmpsl data16 xor out je cs rex.WRB out xchg mov mov pop (bad) (bad) movsl push mov pop lcall fistpl jns movabs jne callq stos sub xor lahf loop fsts movsb (bad) adc lods fisubl xchg (bad) movabs loope insb mov imul and sbb iret xor loope cld mov mov xor popfq mov (bad) (bad) repz xor (bad) outsb (bad) (bad) xor fwait rex.RX or fdivs inc test in fistpl cmc mov sbb pushfq (bad) jne callq sbb (bad) jg gs mov push (bad) loope xchg int mov mov cmp test pop push jge insl mov jg shll scas movslq (bad) fild (bad) rex.RX movabs push mov and pushq pushfq xchg mov cmpsl fwait mov mov sbb fdivs mov stos loopne sbb (bad) movslq leaveq loopne (bad) fsub (bad) sbb lea cmp pop (bad) int or pushq rex.XB xchg stos (bad) mov imull push mov or std push xchg fwait movabs jnp sub and cmpsb push out (bad) (bad) lret rolb fwait rex.RXB push (bad) adcl fwait pop mov add push jg fwait cmpsb lea sbb rorl cltd xchg xchg rorb fwait and movabs pushq addr32 mov enterq xchg std sti rex.XB lret sti (bad) xchg mov movsb mov add repnz sub (bad) (bad) jmp (bad) fbstp jmpq sub (bad) cmp pop xor sar shrb sbb jmp (bad) add adc xor jb cmpsl mov (bad) out mov cmp cmp (bad) push sbb mov insb mov (bad) mov (bad) rclb fwait sub or cmpsl sub cmpsb sbb pop movabs cltd movsl stos mov (bad) shrb fldl (bad) (bad) mov outsl fwait sbb pushq pop lret lahf and fwait stos jrcxz (bad) adc and fwait add testb rex.XB fwait xchg fs push insl fwait xor pop (bad) fdivrl in in (bad) jge gs (bad) sbb sbb push hlt (bad) ss push out fwait push mov jrcxz and mov fild rex.WRB fld xchg (bad) and push mov mov cmp cwtl push (bad) cld rex.R mov lods add (bad) std add insl xchg mov (bad) rex.W jae (bad) adc fdiv jl push (bad) out (bad) fwait jmpq (bad) cmp sbb hlt std mov in add mov push popfq fwait in pop mov in fwait adc xchg jae movsl push (bad) es out pop mov rex.WX mov lods cmpsb (bad) pop jns jbe out xor sarb test mov scas in (bad) adc addl lock retq add pop sbbl fucomip pop push jns mov (bad) (bad) xor push rex.WXB or sub (bad) adc add ficoml mov mov pop jp sahf sbbl fwait repnz gs add hlt pop (bad) and clc cmp fwait mov rex.WX rclb test (bad) rex repz sbb andb clc and add fwait imul (bad) lcall or jmpq cmp sbb (bad) jle sub mov sahf mov (bad) and fwait sbb or fs (bad) clc mov fistp xor jo or (bad) pop stos es lods xor mov (bad) (bad) fcomps test xorb mov (bad) es out rex.WB popq xchg mov sub out cli loopne (bad) std movsl je fwait imul (bad) callq jb mov rex.WXB repnz fldcw stc fwait scas icebp and fwait negl push cmp pop xor (bad) fisttpl and imul out nop jp (bad) or xchg retq mov push (bad) movslq xchg popfq (bad) mov (bad) nop repz cwtl (bad) jl sbb rex.R rex.WRB rex.RB fimul jo (bad) test fwait (bad) cli divl sbb (bad) fcomps xor xchg rex.WRX rex.WRXB retq negb adc cmc sbb mov fwait (bad) lret movsb xchg in js sti (bad) or ss nop mov jge movabs and add std (bad) (bad) out fwait mov in xchg sub icebp repnz fwait leaveq fnstenv rex.WRX (bad) or rcr mov fistp in xchg add outsl movabs rex.WRX cmp (bad) fwait mov xor add (bad) mov mov loopne fwait iret negb sbb nop popfq add mov out fisttpl jbe cmp mov sbb jle fldt mov insb cld xor movslq (bad) add outsb rex.RX fstl or es imul in xchg std mov xchg cwtl loopl and jge shlb scas adc loop xor push jmpq sbbl pop es or xlat cmp (bad) callq xchg and adcl (bad) cmp mov (bad) (bad) sbb xchg (bad) rex.RB adc rex.RX mov out ds in rex.WXB rex.R (bad) (bad) (bad) rex jae jrcxz js fstps icebp or jmp push sti xor (bad) add data16 fwait insb pop sbb rex.RX rex.WR and (bad) fwait int adc insb mov out add add repnz add (bad) in (bad) outsb (bad) pop js (bad) jge fistp mov rex.RB retq (bad) out add clc loopne sbb (bad) rex.WR retq sbb xchg or add fwait je fidivr mov and rol mov popfq jmpq rcrb addr32 and test xchg pop rex.XB lahf sub imul rex.B out not jle (bad) sbbb (bad) xchg stc loope leaveq adc lods fstpt rclb pop jge jo lret sub cmpsb push fcomps fwait (bad) enterq fwait push repnz sub (bad) rex.WR loopne add push (bad) (bad) fistl mov sub test push jnp jge sbb test (bad) xchg xor sbb fwait out jae mov loopne shrl sahf cmp sbb xor (bad) movabs adc fldln2 rex sub mov fwait xor lods pop push adc cmp jmpq adc (bad) mov cmc repz movabs mov (bad) or movabs jg (bad) ja and and out shl mov retq push xor pop stc add (bad) fwait add (bad) pop mov cmp fwait testb jle (bad) pushfq leaveq xchg insb imul insl sti jmpq adc xchg xlat jno (bad) repz push pushfq xchg sbb and xorl and js sbb sub xor mov mov jno jns sti stos jl rcl insb movabs or jp jae fwait or adc fwait rex.XB sbb jnp fisubr fwait xlat fistl jrcxz cmp imul xor (bad) mov (bad) addr32 xchg je sbb jrcxz sbb imul (bad) (bad) or repz rex.RXB add jl fcomi add iret sbb rcrb xchg mov pop loopne xchg or outsl (bad) and cmc adc mov test rex.R cmp jge sbb out xchg (bad) cmp popfq xor movslq rcll loopne sbb loopne ficom pop mov jbe popfq or and xchg (bad) jns add rex.X addr32 out pop mov rex.WXB lods movabs rex.XB (bad) (bad) cli (bad) stos rex.WRXB rex.WX cmp insb rex (bad) jno (bad) fwait out (bad) (bad) fldl mov popfq imul rex.WB int3 in (bad) (bad) rex.WRB cmp test or fwait xchg lahf cmp lods sbb cmp iret fs mov negb (bad) cmp fwait test movslq cmp (bad) lods sbb pop imul std addr32 (bad) mov imulb fcmovnbe sbbl decl cmpsb (bad) shll es out (bad) sbb cmp or sub ss cmp bnd (bad) callq adc rex.XB fwait pushq (bad) adc mov sub cmpsb (bad) xchg xor push (bad) mov (bad) (bad) in lret in nop (bad) rex.XB fldenv imul rcll mov (bad) jmp fwait adc retq (bad) jns rex.WRB (bad) jae sbb cmp fwait xchg mov (bad) movsb cltd (bad) loop rex.WRB jl movabs and (bad) sbb (bad) mov xchg rex.WX mov fcompl add jmp (bad) (bad) loope xor jne mov rex.WX jge dec adc lea fisttpl (bad) fsub cld jmp mov test gs js rex.B jo and loope sbb fdivrs push add xor sbb add std fwait pushq mov push jp ss (bad) mov fisttp cmpsl movabs (bad) callq pop out sbb pop adc loope fwait stos cmpsl xchg in mov mov add addl xchg movabs icebp cltd xorl (bad) mov (bad) mov lea (bad) ljmp mov pop add jle iret mov (bad) addb cmc (bad) (bad) out lret mov ror and sbb add rex.WRB in pushq movabs (bad) mov enterq pushfq int cmp rol addr32 push stos jb add (bad) mov cmp jmp jns push and fwait lea sub movsl xchg (bad) (bad) xor (bad) jmp (bad) adc mov or ja cmpsb movabs sub or divb je imul xchg rex.WRXB loopne repnz sbb or jmpq movabs push and (bad) xchg sbb mul fwait add imulb rex.RXB cli fwait push cld icebp xchg jrcxz rex rex.XB fwait callq dec popfq (bad) outsl scas pop (bad) je mov push adc cs (bad) sti sbb mov pop pop movabs movabs jne mov fwait rex.WRX notb jp in (bad) insl rex.B iret cmp rex.WXB pop adc (bad) xor mull cli sub cld cwtl fwait xchg (bad) sbb jb retq or xor roll je (bad) jbe pop (bad) rex.R in xchg or adc sti repz movabs retq outsb loop cmpsl movabs cld pushq negl xor jmpq mov data16 cli rex.WR adc adc (bad) (bad) xchg mulb fwait rex.WRX (bad) pop out jo xchg sbb adc cwtl jmp (bad) icebp mov lahf enterq adcb pop imul pop (bad) sbb in sbb (bad) pop stos cltd subb rex.WX es xchg cwtl movsl movsb mov mov cmpsb je (bad) jle retq xchg fwait push ficomp loope cltd fwait rex.WR imul out mov pushfq fwait outsb cmpsb (bad) adc add sarl adc (bad) xchg lret rex.XB movsb rex.WXB sub sbb push outsb fwait in movabs add (bad) rcrb rex fistpl (bad) mov retq outsb imul jl fwait rex.XB cltd std (bad) (bad) cmpsl add pushfq (bad) mov rex.WRX popfq mov out (bad) jrcxz fmuls xchg pop pop shlb rex.RB outsl data16 outsb movabs add rex.X fwait lret or mov mov lret outsb gs (bad) fcomip xchg stos cltd mov rex.WX (bad) test fwait xchg xchg add rex.WRXB add rex.RB and (bad) lret jb jrcxz sbb push adc (bad) jno (bad) (bad) rex.R (bad) fwait imul (bad) hlt sub (bad) jae mov rex.WB fwait sahf rex.W mov pop jmp and jg mov in fsubrs xchg sti xchg pop adc sub xchg or loop and xchg rex.R decb xor rex.XB rex.RXB jbe and in cmp iret cld and ficompl pop push sbb in cmp cmp roll (bad) cld xor (bad) lahf fs pop (bad) xchg rex.XB rex.WXB mov jne cltd jl rex.WRB adc rex.WRB push insb pop xor data16 (bad) (bad) add scas adc in iret stos (bad) (bad) cmpsl xchg adc nop repnz pop loopne (bad) or rclb (bad) xchg fwait retq imul (bad) negb fistpll lea lods retq fwait (bad) std jrcxz mov cwtl (bad) nop xchg fucomi jno mov lea cs push mov fwait pop fild jl (bad) loope shr mov andl cmp icebp mov and xchg (bad) mov lods leaveq add (bad) mov fwait (bad) push jl (bad) sbb outsl jmpq int3 out cmc pop movabs jge mov out rex.WRX fwait stc sub (bad) fwait rex.XB in test out fwait or imulq jne cmp imul (bad) lret pop fwait xor and (bad) adc rol callq fistpll jo scas jmpq jge cmc (bad) mov ss imul (bad) xor adc sub insb sbb adc pop jo adc add jrcxz pushfq andl mov mov scas xchg enterq shrb sub cmp jp retq xchg addr32 (bad) stos rex.WRXB icebp or mov jbe lahf mov pop sbb ss movabs (bad) pop sbb fsubs push jns xchg sarb jmp or adc rex.WXB lods sub xchg fwait add (bad) jge sahf push mov sbb stos mov (bad) push fwait xchg jg sub shll rex.WRX adc fwait mov or jmpq adc outsb movsb cmpl iret pushq add adc rex.W xchg mov xor (bad) movabs or cmc (bad) fwait movabs jo and fwait mov sub popfq or xchg fwait and leaveq (bad) out callq push (bad) cltd cmp fwait (bad) cmpsb xor sbb mov (bad) fwait mov add movabs outsl movabs scas mov clc xor or (bad) out add (bad) fiadd or adc cmpsl mov movabs push cmp fwait cld add repnz fs int enterq and fsubrl icebp pushfq cmp stos mov test push cmp (bad) rex fwait mov (bad) out jae sahf xchg pop lods mov add (bad) mov fwait cmp movslq cltd mov movabs cmpsl std sbb insb pop retq (bad) (bad) mov pop scas rex.WR cmp add movsl (bad) rex.WRXB jrcxz jo (bad) in adc rex.WR add lret jge retq or add shlb mov sbb fwait adc (bad) retq (bad) adc (bad) fwait imul (bad) jmp sub xlat popfq mov addr32 push xor or rex.R lock (bad) sub retq push rex.X fwait rex.WB cmp fwait and movabs clc test sub mov ds (bad) (bad) data16 addr32 rex.RX out cmp cmp mov (bad) sbb lret and mov pushq cmp retq je xchg mov xchg mov stos movl stos outsb cmpsl xchg fwait (bad) movabs and rex.RXB pop callq rex.WX (bad) shl adc sbb out jno (bad) add xchg jg rex.WR lods mov fistpl sbb imul xchg jae loop sbb xchg repz pop pop sub fistpl jle cmp sahf sbb xchg pushq xchg mov cwtl ds rex.WRX fiaddl or test mov (bad) imul push (bad) sub sbb cmpsb xor jne (bad) (bad) jl mov hlt fldenv push xor (bad) stc rex.RX xchg (bad) mov (bad) (bad) mov stos adc cld mov stos rex.X leaveq cmpl scas rex.XB lock in xchg int3 seta fdivl rex.RB gs test rex.WX xchg popfq int3 sahf rex.WXB fistl cmp rex.WRB jle fstpl popfq pop mov or mul sahf callq sub rex.RX stos and fstpt add incl (bad) xchg std rex.RX es (bad) and fwait lods ss data16 (bad) (bad) stos (bad) sti test xor fwait stos and adc sbb or cltd (bad) in icebp fwait iret mov std xchg fwait mov (bad) or fwait fs (bad) orl mov loope sbb rex.W insb fcmovb rex.WR rex.WX push fwait ja (bad) and mov (bad) sbb pop jns pushq cmp fcomps mov loope fwait adc repnz cltd ds sbbl sbb mov scas pushfq push jg (bad) imul test jge fwait (bad) (bad) mov add mov test (bad) movabs fwait adc jo jae icebp fwait pop lods jb xchg sub fistp or in pushq and add (bad) in mov fwait or rex.R lret lret (bad) mov sub sbb fwait fs sub sbb cmpsl in ja movabs sub jmpq mov xor in rex.WRX out and (bad) sti pushfq xchg cmp adc mov fisttp pop or and mov jmpq mov insb add (bad) pop push and or out fldt mov mov fwait cmp jbe add (bad) out pop movabs sub jns add loope retq scas cmpsb (bad) cmp je sbb imul (bad) (bad) sbb retq jne rex.RX data16 pop mov out mov adc (bad) out subb fsin rex.WR push (bad) pop xor xorl or pop rex.X fwait sbb ja lods xchg int out fwait push rolb movabs stos adc movslq (bad) (bad) cmpsb jb fwait pushfq stos stos or mov or mov movslq loop fwait nop jns mov adc or ja repnz pop (bad) mov jbe imul out adc jle rclb xor fwait (bad) neg movsbl stos fwait pop jns xlat jrcxz leaveq ds insb cmp mov hlt std jno adc stos (bad) movslq fldenv (bad) xor outsl xor xchg mov fistpl xchg in fwait mov (bad) push lret (bad) mov fld gs xchg test push lcall mov (bad) xchg cmp rex.X pushq repz (bad) es movabs fnstsw bnd sti rex.WB adc jg and cmpb fwait (bad) mov stos and ds (bad) mov testb lahf xchg fcomi xor ja (bad) mov mov adc out sbb adc cld fcmovnb out pop cmpsl std sbb (bad) cmp sbb movabs popfq mov movsb sarb shlb rex.W fildl pushfq repnz (bad) fstps fsubl rex.WRX fwait xor out pop (bad) out xor pop rex.WR and mov mov jne or mov (bad) out imul adc fwait outsb jno in pop jo pushq add js cmp sbb (bad) stos jrcxz in push (bad) insb sbb (bad) (bad) jrcxz out in fwait rclb (bad) movabs in mov sbb (bad) in rex.X sbb xor mov fwait cli sub sbb int pop sahf cmova xor add in sub (bad) rex.WXB and or and mov (bad) or jo mov rex.RB mov mov jg pop push movsb (bad) xor pop fwait (bad) mov rex.WR xor add outsb (bad) (bad) xlat sbb jae mov add rex.WRB data16 ds mov fcmovnbe mov leaveq nop shrb mov mov sub in rex.W ds loopne sbb movabs jbe fwait (bad) mov or scas in or xlat cmp imul xchg addl (bad) xchg pop cmp (bad) push rex.RB sti cmp rex.X fwait push test mov (bad) mov hlt (bad) sbb jns fwait cmp (bad) decb testl test scas rex.X stos add fbld int and and xchg in pop sub jbe jne fwait lods test nop scas (bad) fsubs mov mov lret push lock cmp fwait mov fidivrl (bad) xor jno mov fnstenv fildl in lea jbe (bad) mov fwait je and pop int cmp mov rex.WR rex.WXB (bad) sub jl out sbb cmp test fwait lret adc fwait sub (bad) (bad) mov (bad) stos ds sbb test sti or xchg fwait xor loope stc adc (bad) fwait cld (bad) jnp mov mov loopne (bad) (bad) sbb rex.WRXB or pushfq xor mov (bad) loope or fcomps (bad) cmovp fwait rex.WXB (bad) insl pop push mov jo xchg fwait rex.WXB mov ss add push fistl (bad) adc pop sbbl imul lods fwait and (bad) fwait jmp movabs and in rex.B push retq pop (bad) and pushq (bad) stos repz fs iret movabs rex.WXB push mov sbb push test sbb pop push movabs (bad) movslq push (bad) pushfq mov sub sahf cmp scas addr32 xchg rex.WB fs jl out fmull loopne rex.RX sbb push jg lods scas and rclb sub sbb xchg and adc and xchg int sti pushfq sbb mov loope outsl rorl scas test rex fidivr add (bad) ds vhsubps jle mov xchg fs mov cmp leaveq xchg rex.R (bad) mov lret mov pushq pop sub jrcxz xchg cmp rex.WB rex.B sub jmp mov scas (bad) fs push sti push jb stos sub xchg rex.WB (bad) sbb or xchg rex.WXB loop mov sahf jg (bad) xchg sub sti xchg pushq cmpsb fisttpll xor rex.WXB shl hlt pop rcl fistp jl (bad) scas repnz sub shll xor repnz mov mov jge imul (bad) cmpsb fidivr imul xor ja pop imul push mov lea clc rex.XB lret lea (bad) loop scas (bad) or insl and xchg jmpq add xchg ds (bad) movslq jle (bad) lret callq jle pop or cmc xchg cld or callq xchg ror retq sub xchg fdivs jl push rex fs rolb repnz fchs fistl adc jne mov js xor (bad) (bad) retq (bad) ds je test xor jl push xor rex.WX ds xchg mov cmp cwtl (bad) (bad) (bad) sub clc movslq fnsetpm(287 mov sahf insb pushfq xor cltd (bad) rex.WX (bad) or in imul cltd xor and movabs mov loopne in (bad) (bad) stos and mov (bad) movslq (bad) jmp addr32 push outsb adc (bad) (bad) out cmp cld cmp rex.WXB (bad) out lock sarl imul js fdiv pushfq (bad) (bad) jge data16 pushfq je push jb or and push test mov cmc push and sbb fldcw or (bad) retq jb sbb movslq enterq (bad) int adc or add cmp sbb lods mov and xor cmp stos gs lret pop pop cld jns out rex.RXB push fcoml imul adc pop scas add push rex.WXB movsl jmp add ds (bad) adc js jbe jg jl xlat sub loopne movabs idivl rcrl retq (bad) and xchg fwait xor jo mov (bad) cmc mov or fwait out rex.RXB sub out cwtl rex.X je xchg (bad) iret xchg cmpl (bad) sub lock sbb (bad) cli adc rex.RX fisttp fwait pushq cmp (bad) in ds fwait cld sub cltd push fstps xchg pushfq mov or sbbl rex.WB loop fwait mov cltd rex.WXB rep mov add rex.RX jmp shll xor (bad) cmpsb (bad) mov icebp add xchg sbb xchg je add rorb fwait mov mov sbb lods mov leaveq rcl fwait rex.WRXB (bad) (bad) out (bad) fwait mov loopne xor sbb cmp mov mov rex.XB (bad) loopne mov adc sbb (bad) mov pushq fsubr stc shlb mov adc rex.X or sub jb loope xor push xor xchg push pop rex.XB sbb insb sbb subl rex.WR sbb fnstenv fwait push nop cmp add xor test scas icebp retq (bad) loop sbb jnp cltd shlb stos jl or xchg xchg (bad) lods rex.R and int3 jge lahf (bad) (bad) fwait and or fwait std shr mov cmp fwait jns cmpsl rex.WRX (bad) jle fwait mov push loop xchg mov fwait jmp pop hlt rex.B push mov (bad) test xchg mov adc insl sub xor incb (bad) lods fstpt cmp add xchg movabs movslq lret lahf push mov jmp sti fwait shr rex.WB fwait subl pop or adc pop adc movsb fwait movabs mov es xchg push jrcxz xlat add vcvttsd2si xchg adc sbb xor rex.WX fwait stos xchg or fstp jle mov sbbl add (bad) rex.WR gs and popfq fwait movabs movsb fwait (bad) xor adcl fwait movslq cmp fisttp pushfq pushq xchg cmp fs addr32 fwait shrb fwait std adcb fwait rex.WB fmulp ja (bad) sbb mov mov pop sbb cmp fwait cmc mov lods scas sbb xchg test lods xor (bad) add add fstpt adc or or outsb fwait repz shll scas lock scas mov mov xchg add iret (bad) (bad) or mov orb adc popfq fwait movabs (bad) adc lea int3 hlt insl add (bad) rex.WR pop and rex.W mov rex.WRB fwait loope loopne js mov out (bad) and in sbb sub or lods fwait divl enterq ds fwait out push (bad) push add pop pushfq jbe xchg (bad) adc (bad) je cmc sbb rex.WRX std rex.W jrcxz fcompl faddp mov fwait mov sub fwait add and fisub loope fwait adc int (bad) (bad) or lock cmpb sbb (bad) movsl mov scas lock (bad) and test adc (bad) iret in rex.XB (bad) jrcxz xchg jg lods pop adc pushq movabs seto fwait jb push in lahf cmp jnp sub jg fwait jno cmp mov xchg xchg mov mov in std jnp mov rex.B (bad) sbb mov xor sbb fsubs rex.X (bad) fnstcw mov fstps jae adc jmpq fwait negl jnp fwait pushq jb (bad) shl je ss xchg movabs rcrl mov (bad) data16 xor rex.WRXB xchg fisttp lea outsl (bad) sub xchg test jb (bad) rex.X fsubr mov movsb push mov sub fildl and mov (bad) pushq (bad) outsl add cmp outsl rex.WXB fwait push std pushq pushfq imul (bad) xchg (bad) (bad) adc fnsave xchg jmp es cmp pop (bad) cld (bad) repnz pop jl pushq (bad) int xlat int3 mov decb mov movabs (bad) sub mov (bad) and xlat cli (bad) adc add push xchg xor callq xchg mov mov pop shlb outsl sbbl jnp sbb cmp mov fwait pop rex.WRB cs mov pop fwait lret jp nop stc fwait adc mov sub gs int mov fwait shrl adc shr mov outsb (bad) hlt rex.WRX fwait scas ja mov cmp jge orl (bad) mov adc sarl imul cmp sub es xchg (bad) (bad) lods fucom pushfq test outsl (bad) push imul jl pop add fisttpll movslq (bad) (bad) scas (bad) (bad) push setnp repz cmp xor pop or fwait xchg (bad) stos add (bad) stos mov sbbl push test add (bad) jo fwait sbb rex.WRXB ss stos (bad) stc xlat sbbb or out fwait jb xor (bad) add (bad) fwait xchg xor repz jnp fwait add (bad) sub fwait pushq in push add outsb xchg (bad) movsl sahf loopne loopne lahf int out callq outsb rex.B sbb (bad) mov gs out data16 test iret fdivs mov (bad) repnz roll (bad) fstpl cmc push stos adc mov adc fstpl fist icebp cmpsl fcomps out xor fwait insb mov xchg pop (bad) add out sbb pop (bad) lret jmpq ja jge and rex.WRXB fwait jg negb fwait xchg xor xchg and pop mov fwait insl or jae fwait (bad) std lcall adc loop lods add rex pushq movabs jnp jmp nop mov clc add xorl add xchg adc push (bad) mov fwait movabs icebp sbb jg shr mov mov lods cs lea (bad) mov imul popfq xor xlat cld repz fwait mov sub xchg jnp fwait pop in (bad) adc movsl (bad) fwait (bad) sbb rex.WR repz outsl rcrl mov cmpsl mov mov js jp add pop fwait sti (bad) jb jle add sub (bad) addr32 std leaveq sbb out and xor cmpsb enterq (bad) (bad) out mov mov jrcxz add sub pop sbb xchg (bad) mov mov jrcxz xchg add loope gs ja fwait out sbb xchg fwait jb in (bad) (bad) (bad) fstpl (bad) retq rex.WRX sub movabs pushfq cmpsb (bad) fdivrs ss movabs rex.WRXB data16 jne adc pop mov callq or rex.WRX sbb (bad) add push jnp mov flds fwait rex.R fisttpll (bad) nop sbb mov or movabs sbb jae adc (bad) sbb sarl cmpsl pushq (bad) fwait xchg sub pop (bad) out repnz cmp mov lahf adc sti loopne stc out cltd push xchg loop xchg adc outsb mov and push int3 fwait add jl (bad) (bad) mov mov outsl xchg outsb ds jmp mov sbb fwait (bad) divl rex mov pop retq test (bad) frndint mov in or push movabs (bad) or xchg (bad) popfq (bad) imul loopne sti rex.WXB fldln2 push (bad) (bad) popq in nop add sbb in cwtl sub and mov (bad) mov mov (bad) mov xlat add sbb (bad) rex.XB adc xchg outsb or (bad) mov int3 and fcomi xchg callq out movsl (bad) data16 rex.WRXB or mov mov xchg retq mov lret movabs stc and rex.XB (bad) mov xchg movabs jo pop xor cmp (bad) icebp sbb in (bad) rex.WRX (bad) rex.WRXB iret add (bad) mov mov mov repz (bad) xor stc loopne adc and iret cmp (bad) sub rex.WXB rex.RB sbb add shrl cli or or bnd in (bad) push add push add (bad) sbb stos fildll push loop sub xchg (bad) cmpsl (bad) add sub sahf (bad) xchg jbe jp add callq (bad) fstps (bad) (bad) sbb (bad) xchg out rclb pushfq mov jne lret movsb movsl callq (bad) rex.R (bad) add loopne (bad) ficompl stos mov and lods (bad) jl sbb or in rol subl data16 mov cs icebp rex.RXB stos out rex.WRX sbb (bad) out jne fldenv mov add cwtl sbb sbb lret mov pushfq icebp fldl sbb movsb leaveq retq jbe decb rex.RXB rex.RX in imul shlb xchg (bad) sbb mul (bad) (bad) sti xchg movsl (bad) sbb (bad) mov or sub cmp mov sarl test mov in (bad) pop (bad) rorb in push std mov add or pushq xchg (bad) sub adc mov sarb sbb mov ss (bad) mov (bad) mov adc add rex.RXB rex.RXB cs popfq add popfq cltd pushfq rex.WXB (bad) mov in (bad) (bad) (bad) (bad) fsubl xor icebp fcoms movabs adcl sbb sub (bad) xchg jg mov mov xchg mov rcl mov mov cmpsl sbb je and (bad) jae (bad) cld lret fwait mov mov movabs adc jle outsl (bad) jnp callq lret mov pop or imul push xor xchg movabs ss clc xor adc jmp xchg fwait test (bad) jne sub hlt rex.RX data16 xor mov ja loopne fyl2xp1 cmpsb mov (bad) push (bad) test fwait rex.WX ds or fnsave rolb (bad) adc add mov jmp sub add iret (bad) fildll sahf movsb (bad) (bad) fisttpll add xor fwait push push jb testl pop mov insb mov and rorb sub ja xchg loope (bad) mov cmp fwait jmpq cmpsb (bad) gs rex.WRB insl (bad) lret data16 pop sub xchg (bad) faddl pop sbb sti mov out sub adc decl xor mov mov sbb shr out outsb xchg out (bad) mov pop lcall sbb xchg jnp xchg fcomps sub stc mov sti xchg (bad) mov cwtl pop jrcxz xchg (bad) rcrl mov jp scas sub fldenv mov add add rex.WRXB pop mov rex.X rex.W mov rex.RXB sbb jge cmp hlt sub jmpq fwait and retq xchg retq fs in in xor imul xchg jnp mov lock stc retq notb pop sub insb xor (bad) xchg and or jl jmpq fcompl pushq and (bad) pop adc js movsb push mov (bad) femms enterq mov in sar push fist mov adc fmul in mul (bad) mov sub rex.R sub xchg adc fistpl ss repnz cld cmp mov insl out rcrl in lret lods push xchg (bad) xchg rex.RXB jns (bad) mov pop (bad) ss (bad) test push cmpsb imul fwait maskmovq notl incl pushfq shll out sbb jo (bad) mov fwait xchg (bad) and movabs add jle data16 lret mov fdiv pop mov sub xchg out mov add push out mov std movsb or mov adc vmovdqa jmp pushq mov jl sbb mov std or test sbb outsb add repnz jb cmp jrcxz movsl fwait je movabs adc (bad) loope fistl and fwait cmpsb (bad) sbb mov loop ja pop (bad) ss (bad) push cwtl cld add movabs enterq (bad) fwait jns lods sub fwait popfq and or xchg rex.RX xor ds rex.WR add cltd fwait es (bad) movsl scas mov (bad) ror (bad) add repz mov and imul xor xchg (bad) popfq (bad) imul mov pop repz sbb pushq cwtl xor jle rex.WX sti sub movabs rex.W mov idivb xchg iret adc xchg mov jg (bad) xor rex.WRB rex.RB stos stc icebp mov fwait cmc jl (bad) (bad) push popfq pushfq cmpsl jrcxz,pn sti pop sarl rex.WRB fwait push rclb and movabs cs push rex.RXB out jo xchg fwait mov add out fimull test or fwait pop push rex.WXB rex.RX data16 mov add ja (bad) js mov ficompl repz lock xchg (bad) fwait mov or enterq xor fwait add pop xorb mov cmp lea fwait cli cltd mov stc rex.WXB pop fwait decb in jg lahf (bad) fwait rex.RB pop add push rcrl (bad) cmp and popfq int adc callq (bad) shll (bad) rex.WR add cltd (bad) (bad) lret in xchg iret adc sbb insl rex.WR and push (bad) fwait in (bad) lock sub js adc mov and fwait cwtl rex.WX push and sahf fwait cmpsl cmp cli sbb rex.RXB (bad) or (bad) data16 xchg fisttpl jns fwait (bad) adc (bad) fsubrl add fdivl fistp callq enterq imul imul (bad) xchg mov jne xchg outsl mov popfq xor ja cmpsb scas subl fimul cmpsl sahf cltd (bad) in xchg rex.RXB sbb imul sbb xchg mov pop (bad) jae cmpsb cmp cmpsl fcmovbe jne jnp add sbb sti fisttpl jg movabs (bad) (bad) fnsave repz movabs imul mov popfq scas jne xchg rex.RB mov fistpll stos xchg fwait mov (bad) (bad) sbb sti repz pushq fcoms sbb jp test fiaddl xchg cmpsb (bad) jae out rex.R rex.WR data16 pop or (bad) rex.WRXB ss mov (bad) movabs (bad) rex.WR shr rex.WR sbb and fcom (bad) cmp mov movabs or mov rex.WXB (bad) (bad) cmovge (bad) js jge pop (bad) loopne push fdivs lahf fwait loopne or mov jb movabs (bad) enterq cmp jrcxz cmc mov out push rex.WXB adc sbb imul (bad) (bad) popq rex.W fwait sub add fisttpl xchg sbb jge (bad) test sbb gs (bad) gs rex.XB sbbb test sti adc push test adc (bad) iret push adc xor (bad) cli add jge (bad) adc test rex.X in ss rex.RB test and mov rex.WRX movsb fwait nop int (bad) xor cli leaveq (bad) (bad) (bad) add sbb mov jrcxz mov mov fistl cmc (bad) stos add adc pushfq hlt sub jrcxz rex.WB fwait xchg rex (bad) or pushq loop,pn lret out sub fwait nop xchg (bad) imul sub mov js int3 fsubrl jbe jo scas (bad) and add (bad) (bad) sbb and fwait (bad) hlt movabs pop movsb jae stos mov mov adc pushfq scas pushq cld callq (bad) test fistpll rep sub sahf negl mov xchg xchg movabs pushfq or mov out mov sbb adc flds jo cwtl (bad) leaveq lret mov sbb (bad) jg xor lret pop xor rcll sbb rex.WXB mov fwait outsb jnp rex.X cmp and js push ds (bad) rcl fimul cltd pop fwait and add sbb xlat in repz xor fild movabs jbe sbb pop fwait enterq retq and (bad) sarb loope (bad) mov movabs (bad) fcmovnb outsb or xor sub rex.WRB fs je mov push loopne sub rex.WRX and out mov negb js and mov movabs cmp pop push mov fidivl sti push xchg fmull lea mov pop jb idiv sbb outsl mov xchg pop (bad) sar sahf (bad) (bad) push mov pop jmpq (bad) cmc stos or insb movabs movabs scas scas (bad) rcrl lahf fxch (bad) fwait push xchg mov rex.XB or roll (bad) jb (bad) (bad) cmpsb xchg mov xor sbb not xchg out shl rex.RXB fwait (bad) jge mov sbb rex.RX pop fucom fwait loop outsl add pushfq nop xchg rex sti mov sbb addr32 out adc sti rex.WRX sub xchg cwtl fwait push jnp fs xor repnz xchg mov push in sbb xchg adc outsb icebp movslq hlt adc jp jmp addl cmp sub fwait xadd push mov (bad) callq sbb test push mov xchg mov mov xchg mov (bad) jrcxz stc mov sti sub (bad) test adc pushq xor mov adc mov fwait nop in callq test hlt mov fwait movabs int3 icebp rex.RXB mov js add xor and movabs rex.WRX popfq neg sahf or cltd pushq pop rex.WB xor mov out jnp fwait xor or nop jns cmp pop fwait out out enterq ja cmc add xchg sub movsb xor or cld adc js movabs cs push xchg and jmpq lock imul xchg adc push sti (bad) rex xor in mov jmpq cwtl mov cmc (bad) fwait pop stc fldl add and fwait pop movabs lahf mov retq test cmp ja lods (bad) (bad) imul enterq rex.XB rex.W fwait cmp xchg and rex.WB test fwait out rex.RB rex.WRX (bad) rolb pop mov jmp rol movsb jns (bad) xor (bad) cmc (bad) repz movslq std shr mov fwait sbb add outsl or (bad) add mov sti nop sub jl imul cmpsl sti es cmpsb loopne callq insl cmp rex.WX leaveq mov fistpl mov pop lret rex.WRXB rex.RB sbb jrcxz fwait cmpsb es mov movsl sar rex.R flds rex.RX scas mov (bad) adcl sbb rex.X rex.WX add fmuls rex.XB mov cmp fwait mov pop cmp fwait xor (bad) test jp lret pushfq nop jg rex.WR fwait (bad) lahf fmul fs xor push movsl or je fninit sbb xchg (bad) (bad) int mov lock xchg stos (bad) rex.W rex.RB movabs cmp sbb pop mov std (bad) sbb ror (bad) lods cltd mov push (bad) adcl movabs lret rex.RB repnz pop in roll sub sti and retq idivb ja std fwait rex.WXB (bad) pushq fwait (bad) (bad) stos and ja rcrl cli push mulb add orb mov (bad) pop (bad) rcll push jmp sbb cmpsl or sbb add pop loopne push pushq mov xchg adc pop adc addb (bad) movabs (bad) mov mov pop retq stos (bad) movslq lret pop retq jbe pop and mov cmp jp insb mov fucomip sbb out in mov stc retq in fwait jb imul fwait clc fiaddl or or fistl add pop mov xchg leaveq sub sbb cmp sub rex.X in cwtl (bad) jmpq rex.WRB push mov fwait (bad) mov lret sbb (bad) (bad) or adc sbb xchg xlat sti fcmovnu jo xor (bad) rex.WXB fwait (bad) jrcxz movslq jno pushfq adc or pop cmp jmpq shrl jge lea or mov xor sahf stos movabs mov xchg je mov lret cmp mov xchg cli cmc mov int xor jns insb adc stos (bad) (bad) (bad) pop sahf ficompl hlt cld je stos es xchg (bad) mov mov and cmp fwait jno imul andq rex.RB rex.RX mov sbb (bad) add loope mov xor rex.WRXB mov cmc (bad) andb orl out pushfq jmp and std jmp cmpsb rex.R fwait adc add fwait int3 mulb cltd (bad) sbb (bad) jl callq (bad) shrb imull (bad) sahf out or fwait (bad) (bad) adc pushfq (bad) rex.B sub int sbb (bad) (bad) fimull loopne or fwait xor movsb fstpl outsl rex scas cli insb callq test mov (bad) leaveq retq jmp jmpq pop jne jrcxz cmp mov adc (bad) fwait rex.RX (bad) repnz adc stc or fwait je and fwait rex.XB repnz xor movabs (bad) sbb adc mov hlt fwait sbb jno movabs mov jrcxz and movslq int3 cmp sahf xchg fwait xchg xor mov pop fistp cltd mov cmovbe (bad) bnd stos xchg (bad) gs (bad) pushq xor pop sub pushq sbb fbstp pushfq mov rex.WXB xor (bad) out callq sbb lods jno test or rex.WB popfq (bad) xor (bad) (bad) xchg or (bad) push je sbb sbb adc xchg and imul (bad) sub adcl insl sub movabs cmp imul (bad) sub xchg jne xchg sahf xchg movabs pop xchg sbb sub and insl xchg (bad) mov sub push js mov jl jne test rex.XB rex.WRB jle popq callq lea xor retq mov or imul or cmpsl jg rex.XB xchg lret adc addr32 (bad) pop or xchg andl (bad) sub and adc jrcxz pushfq (bad) fwait mov push rorb or xor (bad) sti mov sub in loop lea sbb cmpsb (bad) sub (bad) cmc mov fwait or mov retq mov (bad) cmp pushq or lret (bad) (bad) mov imul out mov push jns in sbb xchg xchg mov out mov lods xor mov rex.W rex.WX sbb (bad) push or (bad) mov cmp push pop (bad) fmuls (bad) and sahf or (bad) adc (bad) (bad) (bad) movabs or xor lock cwtl rex.WX fstp (bad) xor sbb or mov rcll rex.XB addr32 sbb sti adc fwait xchg xchg pop cmp cwtl rol jmp jle dec mov out pushq cli cmc xor sar push fisttp mov (bad) or and outsb sbb pop rclb add jmp pop (bad) mov and pushq pop pop sbb xlat mov cmp in pushfq or xor sbb icebp mov pushfq pop mov stos stos shrb pop or jae sbb insb test ficomp rex.WRB fcmovbe mov add rex.WRXB movslq add adc xchg (bad) scas push popfq loop sbb fucomi shll sbbl rex.XB xchg sbb fldenv sbb (bad) out out xor cwtl mov sbbl gs fwait sbb rex.X add (bad) fwait xor xlat retq mov adc (bad) xchg and callq push (bad) js rex.WRB (bad) lret add xchg xor add jl jrcxz (bad) jns fwait and rex.RXB (bad) (bad) sti movb (bad) pop rex.R test (bad) (bad) mov (bad) (bad) push out enterq adc rex.WB jns sbb cli addr32 add push std cli imul mov (bad) xchg movsb lea in pop notl sbb jl xor push jle fcmovu ja adc (bad) sbb js mov iret movabs mov jns (bad) xor in push add add test push sbb out mov cmpsb (bad) jmpq in (bad) std or retq sbb adc push movabs adc frstor ss jbe fnstenv (bad) add leaveq sbb xchg (bad) stos nop and add xor fwait add (bad) add lock xchg in (bad) (bad) mov data16 sbb fcoml fwait pop pop rolb movabs in insl fwait movslq rex.WB rex.X fistpl or jbe (bad) out jp (bad) fstpt mov (bad) fwait andb and xor jge fwait mov leaveq jle sbb (bad) jne jmp rex.WR or cwtl imul fwait test movsb xchg mov (bad) stos sub icebp fldl push mov fwait rorb movsl adc fwait (bad) mov (bad) (bad) jg (bad) shr push add (bad) pushfq stos jmp xor adc (bad) movslq loope jl jrcxz mov icebp xchg scas lret out rex.WRX outsl (bad) sti add add (bad) (bad) iret xor fstpt outsb sub rex.R sbb gs push jg jmpq (bad) test (bad) fwait or pop (bad) in rex.WB mov movb jrcxz xchg xchg orl in fwait mov popfq and pop pushq add push insl fcomi enterq mov push jns stos clc sbb push callq add imul (bad) insb mov rex.X push loopne fwait add mov xchg (bad) and rex.XB jrcxz enterq movsb sbb test clc jrcxz es imul lods sub test (bad) or jmpq fidivrl movsl pushfq (bad) loopne popfq mov fldt retq (bad) cmp cwtl scas (bad) fstpt leaveq repz jrcxz icebp clc (bad) fwait mov cmpsb std sub insl scas fwait js or fwait rcrb mov xchg mov adcb adc mov or sti callq movabs add adc mov push fwait pop outsl mov rex.RB or orb xor fwait or push rex.X loop fwait mov lret lret lods cmp sbb or xlat (bad) fistp stos add or lods (bad) (bad) fwait (bad) bt rex.X rex.X rex.R (bad) movslq ss rex.WR fwait (bad) loopne (bad) cmp pop in jg rex.RXB stos js out fwait rex.RX rex.WRX add or orb jp sti sbb rcl iret scas cli stc sbb jrcxz push stos adc insb loopne andl jbe push sbbb cmpsl add loope clc mov jmpq pushfq popfq cmp jb rcr cmp fwait (bad) rex.WB rex.WRB fwait push jae cmp mov (bad) (bad) xor xchg fcmovnu mov add push (bad) (bad) rex fwait mov add adc repnz (bad) fbstp cmp rclb add jae callq jo cmpsl jp fwait (bad) add pop fwait (bad) cs jmpq mov data16 pushq rex.X sti cmp fsubs (bad) lcall in fs mov movabs (bad) pushq mov (bad) sar (bad) pop jns cwtl test sbb sub and cmp xchg movslq push ficoml cltd retq hlt fdivl out addr32 mov xor sbb cmp in fwait jno jnp fldl (bad) rex.RX fwait loopne sbb out sbb movsb cmp movabs cmpl xchg shr cli push mov pushfq add sub int3 fistp (bad) push sti rex.WRXB mov or addl mov sti and cmp push rex.WB (bad) fsubr add (bad) movabs fsubrp loope sti fs jo lret lods sbb loop pop mov fwait adc cmpb movabs std scas sbb stos fnop imul lret sbb (bad) retq cmc pushq push sbb movsb xchg icebp cmp jns (bad) test (bad) cmp lcall or and cld imull fimul (bad) fwait mov xchg cltd rex.X ja and (bad) pop out std mov add pop rex.XB fild (bad) fwait movabs pop scas iret sti rex.RXB adc mov rex.WR stc pushq mov in (bad) int test (bad) (bad) push (bad) test mov int3 fwait stc cltd pop mov sbb jmpq addr32 (bad) sbb lret test (bad) sbb or (bad) in leaveq sbb sti sub push js and pop (bad) or idivb (bad) repz and mov divl push rex.B rex.WX rex.RXB fwait scas (bad) es xor (bad) jns xchg sbb xchg push pop stos rex.WRB stc fwait movsl sub (bad) stos jl rex.RX fwait pushq movabs test xchg mov fwait and mov (bad) mov fwait adc xor pop cmp mov adc iret xchg (bad) movhps xor mov fsubs loope in push retq fwait (bad) imul fwait cmp xchg sub jnp idiv vstmxcsr cmp (bad) jl fildll loopne (bad) cmc movslq scas pop (bad) faddl (bad) shlb retq pushq push add xchg fwait (bad) (bad) and repz mov loopne jnp rex.X xlat push mov lods (bad) mov cli insb in in mov xchg add mov popfq adc rex.W (bad) pop stos jge mov std fwait jrcxz (bad) stos stos sub xchg fwait mov rex add fldt mov cmp (bad) (bad) jnp fwait (bad) mov rex (bad) cmp sub sti rex.RX fwait rex.WRXB sub (bad) fwait clc add xor insl (bad) adc mov and xchg xor (bad) scas (bad) repnz (bad) sbb jle rex.RX jmpq fwait mov rex.B adc rex.WB rex.RX fwait (bad) (bad) and (bad) retq loope lret lods fidivrl mov loope fwait push sarb cmp mov (bad) stos xchg sbbb jno lea (bad) mov (bad) xchg push adc inc adc jb orb mov rex.WXB add mov shrb (bad) movabs xchg sbb rex.WRXB fistpl sub add xchg jp sti xor sbbl fwait push rex rex.WR adc sbb cld pushq addr32 xor or movabs addr32 movsb insl (bad) add sub imull rex.X cltd xchg sbb add (bad) (bad) rex.WR out and add mov cmp or movabs pop rex.WRB movabs rcll xor cld sbb push test mov loopne cltd mov mov (bad) rex.RXB xor add jb sbb gs pop insb add (bad) jne sub rex.WRXB cmpsl sti ss imul jrcxz fwait jg jge movabs imull pushq pop imul callq (bad) in imul mov cli mov pop pushq leaveq cmp fiaddl pop (bad) fstpt (bad) pop sbb adc hlt stos mov or fcom fiadd sbb fcoml mov movabs (bad) or lret sarl or pop mov sbb (bad) xchg fstpl mov imul rex.B rex.RX lods movabs out xchg (bad) std sub fwait (bad) adc sti movslq push add fistl (bad) movabs push adc sub sub sahf loope push loopne fbld out mov ficomp out mov stos sbb sar fwait mov (bad) xchg cltd loope sti cmp out or cmp repz push (bad) retq add movabs lods push add rex.WXB stos jno (bad) jg mov int or mov scas (bad) sbb sub (bad) test (bad) mov movsb out repnz rex.WRB rex.X or adc loop xchg xchg sbb fwait xor adc (bad) fimull cmp sbb (bad) cmpsb lods sbb out shr xchg xor mov mov fwait jg jmp out rex.WR adc xchg pushfq repz fwait push retq lods sub fwait pushq xchg sbb pop enterq jge (bad) rex.RXB (bad) popfq scas pushq or sti js mov loope (bad) stos sbb (bad) xchg jne rex.WX (bad) rex.RX addr32 rex.XB xchg imul (bad) sub adc push xchg loop es test cmp mov or in xchg movsb out cltd xchg (bad) mov sbb mov cwtl cmpsb xor rex.RXB retq fnstenv jg adc jrcxz sti (bad) (bad) push gs test callq fildl callq rcr pushq in nop popfq cmp movabs and jl lods (bad) (bad) adc sbb (bad) outsl (bad) add (bad) rex.WRB rex.WR repz fnsave loopne xchg fistpl and rex.WX fist push push mov jae in rorl test cwtl or jb cmpsb shl loopne rex.WR jns jb (bad) sbb rex.WXB movslq mov sub cli retq jge xchg sbb (bad) loop mov fucomp cli (bad) (bad) std (bad) xchg mov retq fcomps movslq (bad) mov fwait cmpsl (bad) (bad) (bad) (bad) (bad) cli icebp fwait clc (bad) in (bad) (bad) stos shr pushfq adc rorb movabs (bad) push rcll mov adc popq (bad) pushfq xchg movabs fwait mov (bad) or cmp xchg mov leaveq adc nop adc sbb (bad) xor push sbb mov mov or cltd mov (bad) je fs insl sub bnd shlb fstps stc scas out mov rolb jne (bad) (bad) jmp (bad) and unpckhps in mov sbb jno (bad) cmp mov pop imul or mov sbb xchg mov adc callq xchg sahf or (bad) fwait out negl movslq scas fild jno mov clc (bad) sub fistl lock cmpsb movabs jmp fisttp in lret movslq in imul js mov and outsb cmp pop sbb xchg movabs (bad) jb mov mov jae out xchg in scas sti mov xor repnz xor out xchg adcl fwait jl xor leaveq adc jl sub sti loopne or (bad) sub jae cmpsb pop lahf leaveq (bad) mov test sbb or cli insb add (bad) (bad) popfq clc fildll test stos ja ss rex.R fwait lock js sbb fwait gs mov (bad) mov imull cld mov jbe cltd sub sbb lods in jno mov ja pushfq cld or (bad) (bad) sti or fwait loope ss and lahf fwait adc scas js movabs pop (bad) (bad) xor and rex.B cltd rex.RXB rex.WRB or clc addr32 fwait xchg nop push retq (bad) xchg lea (bad) lret icebp rex.WRB std (bad) cmpsb cmp rex.WX cmp rex.WB lock mov or iret xor enterq rcll and (bad) sbb sbb pop sti cmp sbb mov (bad) std test xchg pushfq movsl hlt and imul movl (bad) stos adc add std push mov shlb test (bad) jrcxz sbb fstpt (bad) fwait int3 add (bad) jrcxz rorl sbbl or cmp or mov stc in mov rcrl repz and fsubl lock xor push adc retq rcrb (bad) out fsub out sub lret fistpl iret stc pop or movabs or out cwtl sbb xchg lcall mov rex.WX rex.B pop jmpq bts xlat mull fwait pushfq xor decb fwait xor outsl add shrl fwait (bad) rex.R insl rex.W sbb mov mov roll outsl or lock xor icebp movslq mov (bad) rex.WRX loopne adcl andb jp adc lret jmp (bad) xlat xor pop loopne hlt movslq and enterq pop mov xchg adc sbb mov or ror fwait movabs lods mov setg jg cmpsl mov fwait rex.RX rex.WR fimul (bad) movabs insl mov in or and rep icebp push in and xor movabs outsl pop adc in leaveq loop cltd movsl jns movslq retq fwait stos pop pop rex.WRX movabs hlt andl shlb (bad) sub sub add and sbb roll and mov sbb int sbb out jne cwtl sbb and cmp mov mov mov xchg mov xlat lret jle sbb mov test cltd pop sub rcrl (bad) xchg fmull sbb imul stc hlt mov push sbb (bad) or (bad) sub pushq rex.RXB (bad) (bad) repz ficom std sub adc mov (bad) xor lret and rex.X fstps mov nop rex.WXB jmp push mov int3 notb cmp mov mov mov mov cltd (bad) rex.XB or retq adc stc push gs sub retq jge out fwait pushq adcb sbb sub (bad) (bad) repz and movsl addr32 outsb sahf mov xchg xor movslq sub xor jae rcr in sub test mov (bad) mov out pushq sbb xchg cmp and cmp loope cltd rex.XB cmp fcoml jge scas out loop (bad) and retq std (bad) sbb popfq jp (bad) mov ficom cmpsb xchg idiv jb or mov imul cmp std cmp mov fistp add loope stc lret outsb cmp cltd add orl in sbb lods stc (bad) retq rex.WB cwtl cmpsl lods xor fisttpl sti xchg (bad) scas scas jno adc int in je lods sbb xchg rolb mov rex.WXB (bad) sar fwait sarb mov fwait push rex.WXB stos jmp fild fwait leaveq lock jge jnp cld loope fwait jo callq scas xchg mov add fwait xchg mov sub int fbstp xor icebp test (bad) rex.WRXB sti xchg andb jae jg in fcoms sbbl loop fsubl test movabs fwait add push xor addl (bad) rcrb (bad) sbb loop fildl add fwait pushw pop in rex.R sbb rex.WRB addr32 (bad) mov add mov mov add pushfq cmpsb rex.RB sub push mov mov add fcomi sub rex.X mov mov (bad) out (bad) fwait retq callq rex.WXB adc (bad) (bad) cwtl sbb int fwait cmp (bad) (bad) icebp sbb testb or addl add mov stos add (bad) xor or repz rex.WRB rex.WRX rex.WX stos lea es leaveq rol std (bad) fwait mov insl mov push clc out rex.RX in pushfq rex.XB int negb or jmp rex.WRXB fwait mov addl sbb fiaddl rex.WX rex.RXB (bad) cmp pop mov out sbb sbbb cld repz sbb rcrl cmpsb and iret add xorl cmp xor rclb mov jge cli test rex.RXB negb lods (bad) insl int sbb stos xor sbbl rex.W lods mov movabs (bad) pop out movabs cmp fwait scas (bad) rcrb int3 in jb jae movslq test loopne outsl add out fistpl or js (bad) mov pop mov rex.R rex.RX (bad) sbb movslq push rex.W maxps lret sbb pop xchg rex (bad) mov negl loopne (bad) stos or out rcll shrb sti cli out (bad) jge xchg (bad) (bad) push stos fwait imul scas push xlat (bad) push jp adc sbb rex.WB (bad) jmp cmp iret retq push stos sbb (bad) out rex.WX lret mov mov (bad) pop and (bad) fwait (bad) rex.WRB leaveq jmp popfq fwait sub ffree insl fs rex.WRXB rex.WRXB rex.WXB popfq out lahf stc and fneni(8087 movabs (bad) mov (bad) adc (bad) cmp fwait and iret out cmp rex.WRX popfq (bad) jmp cld cltd jb cmp xor jae fwait (bad) (bad) hlt (bad) pop and bswap (bad) push rex.XB fwait jno pop sub imul test and jae adc movsb fcmovnu int3 xor in stc sar cmp callq lcall xor sub testb iret xchg or xchg mov addl (bad) fwait mov sub (bad) xchg sti cmp loopne pop or lea (bad) add fistp rex.RXB mov add ds rex.RX (bad) xchg or shll adc adc cltd fstpl mov (bad) (bad) sti (bad) pop xor pushq xchg in sbb pushfq fstpt rex.RXB (bad) push and movabs (bad) (bad) xor rex.W sub jmpq std repnz fwait mov and sbb mov cmp xor mov rex.WRB fwait test std in jge js (bad) loope fwait sub fwait sub movsl (bad) in ficompl and pop (bad) sbb mov xor (bad) (bad) cmpsl fwait jrcxz add loop enterq sahf (bad) or fistl (bad) rex.WR and cmp adc (bad) ficompl test add rex.WXB fwait cs je fildll add iret sbb pushq jmp imul push (bad) sbb or fsubr out retq cmp icebp adc lods rep (bad) fwait test out jnp sub sahf insl push and add loope xchg mov xor retq hlt and (bad) pop sub (bad) out pushfq mov outsl addr32 stos test jns stos add lods movabs mov pop jno test mov or add (bad) (bad) mov or adc loope (bad) xchg sbb icebp retq jo movabs ja fwait out stc rex.WR push pushq jbe mov mov add jne jae cmp sbb mov and pop push lock rex.XB hlt (bad) xchg rex.WRX fwait sbb jbe or (bad) add and jle cmpsb nop cld ficompl mov (bad) (bad) pushfq mov lret enterq (bad) sahf mov gs hlt (bad) cmpsb sbb insb xchg lret and sub sbb push (bad) fwait add (bad) (bad) add jb (bad) lahf jmp rex.WB fwait in jp push ds fwait adc adc subl (bad) fist or (bad) xor (bad) cltd (bad) jl stos int addl popfq sub lret test lret push (bad) mov loope je loop fwait adc xchg rex.WX (bad) jl sarl mov add (bad) fwait out add (bad) movslq in retq mov mov add lock fistpl je cmp jbe adcb imul and (bad) out mov out fwait iret js rex.WRX sbb int3 rex.WR rex.WB fwait (bad) rex.B andl (bad) pushfq outsl imul imul pop pop in (bad) cmpsl xchg sbb sbb sbb mov adc fwait out mov sbb repnz fisubrl (bad) cmpsl rex.RB idivl (bad) (bad) pop fwait (bad) rex.B rex.XB imul (bad) and jno sbb mov pushq and cmp and (bad) (bad) mov fstl in pushq imull (bad) movabs outsb (bad) stos movsb int xorl frstor add adc cmpsb push fsubr fwait mov cmp adc stos sahf shl (bad) sti sbb fwait (bad) jne movsb decl (bad) fs or faddp mov adc pop mov fwait rex.WRB fsubl fwait push cmp pop sbb imul fwait rex.XB in rex.W fwait jl jle out mov (bad) pop (bad) stos mov fisubrl (bad) int3 pop (bad) and repnz fcmovnu adc (bad) adc (bad) fadd adc xlat es (bad) enterq frstor or sbb push jmp or and cmp leaveq int3 jle and add mov add adc out int3 lea mov js (bad) loope movsl cmpsl icebp xchg or xchg push mov jne fs mov cmp sbb out or fwait push (bad) stc sbb (bad) mov int3 pop fsubrl shl lahf mov (bad) pop jle ds imul (bad) fwait rex.X xchg leaveq fwait pop xchg addb pop mov sub mov movabs fwait or (bad) out xchg cmp mov data16 fwait in pop pushq jmpq xchg movabs scas mov (bad) (bad) xchg lea (bad) sub fwait (bad) sub jno mov scas out movsl (bad) (bad) mov fs mov mov sub loope je (bad) pop (bad) mov rex.R fisubrl sbb sub sbb (bad) movsl push fmull cmpsb (bad) (bad) mov fwait or rex.X jmp fwait (bad) xlat outsl fsubp mov add and cmp test fwait rex repnz rex.B mov fwait (bad) or sbb jnp loope mov rex.XB fwait (bad) (bad) iret loop xchg or xchg rex.WRX xor (bad) and fmul adc jb adc loopne (bad) jp lahf movsl sbb (bad) imul xchg leaveq or loope gs adc (bad) adc jmp xorl shll xor push nop mov cmp adc cmpsl jl mov pushq rex.WRB cli popfq test iret xchg add imul jb mov (bad) roll fldl lods fist popq rcrb mov std addr32 fnstsw cs adc jae adc jmp cwtl addl loopne popfq je movabs sub jg repnz insb xor xchg cmpsb jl rcll sti fwait mov xor jmp lahf test std fwait out mov jrcxz (bad) adc xor cmp pop fimull (bad) (bad) push (bad) jle scas (bad) or add enterq jne jnp fistl (bad) and (bad) cli leaveq sub mov fwait push adc pop mov sar setge fwait stos rex.XB cmpsb or xor mov adc sub pushfq rex.WRB sbb insb in movabs add rex.WB mov pop fwait test rex.WRB (bad) (bad) jns fwait mov xor sbb push xchg fldlg2 push add ss rex.XB rex.WRB data16 repnz jge mov pushq mov (bad) push mov and fstpt (bad) icebp mov xchg notl cmp lret stos pop pushfq mov and fnstsw mov fidivrl (bad) fwait (bad) or (bad) ror xchg fwait jmp out notb lods mov scas sbb push fwait movabs xchg setns fimul lahf (bad) sbb dec (bad) inc fwait rex.X mov mov sub (bad) lret sahf in adc pushfq xor jb popfq mov xchg (bad) push add gs mov rex.XB jmp (bad) and sbb cld (bad) callq push shrl mov (bad) cmp or fwait cmp (bad) in int3 jo fwait (bad) xor cmpsb sbb (bad) mov (bad) jbe xchg enterq scas (bad) (bad) fwait sti sub sub (bad) add repz rcll fwait (bad) xchg and mov xchg sahf jmpq (bad) fwait jbe xor lods adc or insl fwait cmp rex (bad) stos (bad) pop mov pop retq rex.WX push (bad) fwait sub push (bad) cltd jg adc (bad) jmp (bad) xor adc rex.RXB add xor fwait retq push (bad) xor mov mov sahf xchg or insb movabs or cmp (bad) rex.X (bad) add or in cmp fwait (bad) cltd (bad) scas insl pop es (bad) add fwait in rex.WXB xchg xchg imull jmp test sahf (bad) pop push lret adc fwait out or movabs rex.R (bad) jo fwait cmc out lods rex.XB cltd cmp sahf add rex.WXB test mov adc fwait mov lahf hlt sbb es add adc je stos cmp fxch (bad) (bad) fmuls or rex.WX rex.WX sbb test (bad) fwait jae sarb mov sub (bad) lock (bad) repnz fwait rex.WXB push xchg push callq shlb imulb xchg popfq pop cmp xchg adc push mov scas mov adc retq mov add (bad) sahf es push fwait (bad) add (bad) adc outsb mov rex.WXB rex.X adc lret incl in fwait mov fbld sub sbb (bad) cld cmp fidivrl lret repz jle out fsub (bad) jne (bad) popfq sbb out adc (bad) mov (bad) sbb mov int3 sub sbb and (bad) mov pop cmp xchg (bad) movabs icebp pop fwait (bad) leaveq pop adc cmp rex.RX push fwait rcr xchg (bad) in (bad) lret mov fwait mov loop insb and and add adc int rex.RXB ds adc (bad) xor or fisubr sti push rol mov movabs rex.X stos (bad) xor rex cmp in in sbb sbb repz iret negl mov jmp (bad) fwait sbb lods xchg pushfq lahf out in (bad) cmp (bad) fwait adc cmp fwait (bad) jmp mov pop sbb ds (bad) mov std cli (bad) sbb mov xor (bad) fwait jmp cmp rex.X rcr sbb cmp (bad) mov movabs jle pop jnp rex.RX (bad) (bad) jno pushq rex.WB je (bad) lahf cwtl rex.RX rex adc icebp (bad) add pop jle je jo xchg xlat (bad) scas xchg adc movabs push (bad) insl jmp (bad) mov sti fistl rex.RB and (bad) pop (bad) ficoml (bad) rcrb rex.WXB in sbb jb pushq cltd rex.B cmp and cmpsb lods sbb sti mov fisubl retq fbld pop fwait pop test jg (bad) repz clc movsb (bad) mov addr32 (bad) retq (bad) sub ds mov je or cmpsl fwait or (bad) or popq jnp sub movabs fs fisttp cmp leaveq mov (bad) add movsl ja xchg icebp (bad) (bad) movabs cmp xlat fcomi mov xchg std push jns (bad) jnp movsl (bad) cmp scas adc cmpl (bad) hlt (bad) fwait orl icebp mov pop cmp fucomp mov movsl sti popq sub sahf (bad) cwtl frstor add leaveq push lahf movabs mov rex.RX sub rex.WX rcrb push xor and xchg fistpll scas rex.WRX test cli cmp sahf out jnp rex.RX pop rex.WX pushq mov in xchg cwtl (bad) repz rclb rex.WR movabs out pop callq out rex.RXB sbb pop pushq cmp adc (bad) (bad) jg push cltd (bad) outsl jae lock xchg (bad) sub xor (bad) out xor mov or stos hlt xor stos mov addr32 sbb sub jmp sbb cmp or fwait scas sub leaveq or sub mov rex.WRXB (bad) (bad) rex pop (bad) stos add rex.RXB sbb test mov (bad) or rex.RX cs and mov sub (bad) int scas fwait mov jmp stc xlat in movabs fwait mov sahf (bad) in add (bad) test jrcxz mov jg (bad) or insl lods out rex.W cltd pop rex.WRXB repnz fprem sbb rol sbb movabs scas addr32 (bad) mov mov jne fisttp outsl mov psllq rex.X cmpsl mov sbb and int3 rex.WR incb pushfq movabs imul rcr sub sub rex.WB movsl fisubr divl jl mov je cmpsl jbe sub out hlt jmp int3 jno int adc fdivl cmpsl jne sarb sbb loopne or adc jbe xlat rex.R pop pop push cmc fsubrs std mov loope (bad) fdivrs rcl out jbe fwait cmpsb cltd rex.RX add adc (bad) rex.W add pop pushq mov mov rex.R add rcrl or sbb loop (bad) pcmpeqb ss xchg sbb sbb in int or add mov ja fwait pop and sub sbb mov fwait lret repnz cmp movsb cltd (bad) negb outsl mov repnz sub or push gs sbb out outsb (bad) jmp xchg (bad) cmp fwait pushq (bad) xchg stc sbb addl jrcxz xchg fwait and out cmp mov jl cld sar sbb mov sbb jmp out (bad) leaveq sahf fwait mov pushfq mov rcrq (bad) or rex.X cmp insl cmpsl sub sub (bad) imul fwait (bad) (bad) jge (bad) xchg jo andb adc rex.B xor (bad) stos sahf jns data16 xor notb cmp mov lret insl (bad) fwait lock (bad) imul add adc test jno xchg std fwait and loope rcrl rex fwait sub repnz jle stos adc (bad) cbtw (bad) test add sub mov int3 hlt (bad) jae fwait shrb stos fisub (bad) xor mov add in adc es fwait rex.RX mov enterq cmp je or mov loope push cmp fwait xchg jp mov fwait stos pushq jg fwait adc (bad) test jle and test in mov push jmp or fstpl sbbb scas fwait rex.WB movslq enterq xlat fwait xchg test int3 fwait (bad) pop mov movsb fwait pop or out rex.WRB fwait mov cmc or retq or cmp cmp (bad) adc insl mov (bad) cmp rex.RXB rex.W (bad) adc movslq (bad) es shrl xchg fwait mov rex.XB pop lahf gs xor in lea roll cld fwait data16 rex.RXB rex.WRB sahf fwait mov movsl out enterq fwait cmpsl cltd cmpl fwait mov loop fwait adc push mov loope add ror add fwait test (bad) mov fwait pop int sub xrelease stc fwait jrcxz mov lock xchg fistp mov testl cmp outsb mov movsb xor rex.RXB fs rex.RX pop cmp sbb (bad) mov mov and sbb jp sbb lret rex.WRB (bad) (bad) (bad) callq jp pop fwait subb pop js add xlat hlt (bad) nop test loope ja enterq xor (bad) loope sti pushq rex.WRX adc jno jrcxz mov add movslq rex.RB jo (bad) pop mov lret std fsts sbb popfq fsubrl push (bad) jg adcl pop pushfq rolb jg data16 retq sbb (bad) pop jb ss xchg out sub cmc sub or rex.WR lea movabs cmp xchg adc or fwait jg mov sub in and jrcxz test mov ficompl cmp (bad) sbb je jne pop jno rolb jo stos sub pushfq sub iret popfq (bad) mov rex.WB rex.WRX xor jrcxz movslq loope cs add pushq jle stc ja scas (bad) (bad) ja callq (bad) je andb cli jle cmc or sbb adc jno and cltd stos or std add icebp hlt sahf ja mov repz test popfq movsb cmp cmp pop fwait test scas rex.WRB adc scas fcomi test icebp and (bad) (bad) fwait pushq jns and sbb retq fadd pop xchg scas lahf je add mov xor (bad) adc mov push mov push fmul adc fimull fisttpl test fwait (bad) clc (bad) mov (bad) jmp fwait and pop (bad) sbb cmp push mov rex.WRB sbb (bad) paddq nop (bad) rex movslq sahf sbb (bad) jo adc mov loop sbb sub or sbb push (bad) out mov repnz fstps pop ja sti add xchg or (bad) fistl sub imul and jle pushq (bad) xor rcl xor or (bad) lahf in insb fistp sahf cld mov or ficompl sub sbbl jmp fwait xor pop cmpsb xchg movsl icebp and (bad) cwtl (bad) iret fwait (bad) subb sbb mov and cmc mov mov sbb (bad) shlb push jp xor rex.XB iret xor (bad) sub mov pop fwait retq rex.WR sahf rex.RXB add ror mov fwait stc xchg (bad) rex.X test repnz mov cld out mov cmp push fwait sub bnd cmpb pop rex.WRX (bad) mov sbb jmp lret fwait sbb (bad) (bad) scas es fwait jae (bad) and sub scas (bad) pop push test in icebp std rcrl xor (bad) lods cmp sti (bad) nop repz mov mov mov fwait rex.WXB je ja (bad) jmpq (bad) or test cmp pushq fwait popfq (bad) fiaddl sub sahf fwait sub and push int pushq sbbl fwait add rcr jo (bad) (bad) enterq push sbb push jns cmp lret stos xorb rcr out mov fwait mov out and mov (bad) mov lret or movabs movsl sub and mov (bad) clc out mov xor fwait push scas mov rex.WXB sbb mov and jp (bad) sbb fldenv sahf xchg movabs mov adc adc sbbb or cmp (bad) mov pop or rex.WB (bad) js mov push movabs (bad) add sbb jo jbe sub (bad) mov mov scas movslq sbb mov imul out (bad) sbb add cmpsb mov cwtl adc (bad) lea fild clc fistpl (bad) ja or cmpsb jo cmp repz jmp mov (bad) add mov out out jmpq sub fwait xchg callq cmp cmp loop pop mov cs cmp fcompl scas in insl shlb mov movsb cmpsl mov (bad) xor stos addr32 ja xor jmp callq mov push sti (bad) xchg (bad) xchg addr32 sub jrcxz leaveq retq icebp loop (bad) jge add repz lods (bad) or mov or cmp jge imul fwait movabs sub cltd rex.XB rex.X out (bad) (bad) (bad) (bad) mov push pop mov xchg testl test imul push in movslq loop movabs nop lahf mov negb xchg ror stc fdivrl xchg mov cmpsb movsl lret in (bad) push adc movabs (bad) mov (bad) (bad) rcrb xor push (bad) (bad) es pushq fwait jge movabs xchg pop jne fwait (bad) sbb (bad) imul addr32 mov xchg pop or sbb sub jnp cmp jrcxz cli sbb sub rex.WR (bad) mov cmp (bad) push (bad) (bad) mov imul in sbb leaveq add iret pop mov sbb cmpsb (bad) rex.WRXB xchg movabs js fistp loop push sahf cmp xchg sti adc mov jmp (bad) jge (bad) fwait test sub mov sti xor cmpsl sbb scas in (bad) mov decb ss fistp (bad) add rex rex.WRB out and movabs scas pushq sbb fisub retq fdiv xchg mov sti rex.WXB pop pop jg sub pop pushq fstpt pushq cmp (bad) iret cmp or push rclb lods jg push (bad) add fistpl push repz rorl cmp xchg pop sub test cmp xchg in add mov cmp repz lea jo lret fidiv gs mov pop (bad) mov (bad) pop and mov in leaveq sarb xor jnp pop xchg cmpsb out rcr xchg out sbb and fwait out insb movabs pushq outsl push mov rex.X fwait cmp test xchg mov es hlt cmpsl (bad) push lret jnp sbb cltd adc and (bad) rex.WRX repz rex.WB jne add loopne jmp (bad) cmp jp (bad) pop mov lcall xlat fildl (bad) jmp push imul (bad) rex.X stos (bad) lods pushq mov mov callq and lret fs (bad) fwait mov movsl (bad) cmpsb mov imul fwait jnp es repz fistp out or rol jbe stc push sbbb push jrcxz sub pop jp out sbb sbb or mov rex.R fwait rex.RB sbb (bad) cld rex.WB addr32 rex.XB sub stos add outsl (bad) loope mov mov lods data16 insl (bad) jge shrl rex.WB pop nop jbe push cmp ds (bad) cmp rex.B mov movslq gs js out sti adc (bad) stos sub movslq and (bad) lea (bad) (bad) adc retq add jl (bad) std loope cld lret movsl imul fcomip ficom xor jge and pushq lods xor mov (bad) push movabs movsl jg scas xchg callq loopne cmpsb mov rex.XB mov std rex.W callq sbb or sub adc (bad) mov cltd rex.R iret rex.WX movabs (bad) pushq (bad) jmp subl xor cmpsb (bad) jb roll sbb fs fwait cmp (bad) iret (bad) sbb fistl jne push sub mov jrcxz icebp and fistl mov lods outsb clc push or outsb pop sbb add mov (bad) (bad) stc xchg xchg (bad) sub movabs int fdivs adc ss jb test adc stos mov rex.WB push mov js fcmove or (bad) fild xor (bad) out sbb insl repnz pop test add push adc es mov xor jno mov int lock movl in (bad) or rex.W and add (bad) and jp fwait (bad) sahf in cmp pushfq xchg mov pushfq movabs (bad) pop mov (bad) (bad) pushfq rex.RXB fwait loope lret sub sub lods stos and rex.RX adc lret in xor fwait mov rex.RXB xor and rex.RB (bad) lret fwait jbe mov xchg mov xchg fwait mov cmp fucomi sub add adc or (bad) sti sbb xchg fwait mov sbb mov jbe cmp stos adc xchg jg outsl shlb fwait int3 rex.WRB rex.W pop adc xor iret mov in outsb and add testl in sub and imul (bad) mov fwait mov (bad) xlat scas fstpl jnp sbb xor in add (bad) mov rex.WXB or callq psrld (bad) push pop sti sub fmuls movabs push lea sarb pop add rex.WB fwait sub rex.WRXB fwait cmp mov xor mov jle rex.WRX rex.WRB rex.RX xchg mov mov callq xor mov cmpsb jg xorl (bad) lea cmp (bad) jno (bad) lahf sbb add repz outsb (bad) (bad) (bad) lock fnsetpm(287 movabs adc mov es xchg mov mov repz mov fwait jg (bad) rex.RX jnp (bad) loope rolb rex.W rex.WXB rex.WB (bad) jno sarb adc add lahf imul (bad) rex.WXB rcrb cmp mov stos mov add jo jrcxz xchg out pop mov cmp sbb add sbb fs movsl cltd (bad) fwait (bad) retq data16 leaveq loop fwait lret xchg icebp mov mov jns xchg add movabs imul (bad) or jmpq rex.RB loop and lea test insb cmc (bad) movabs rex.R lea xor je rex.WR sub sub movsb xchg mov push sbb (bad) insb xchg retq xor jbe (bad) jg int3 pop adc jmp jae cmp add pop and int add rex.RB sbbl (bad) fwait mov sti sub (bad) or ss adc out cmpsb cmp cmpsl rex.WB adc rex.WR add mov ds mov cmpsb popfq addr32 (bad) push cmp cmp mov in rex.R pushq fwait (bad) adc mov popfq pop rex.RX retq push sti ds popq sbb mov fsubp jmp fwait retq out retq pushq add mov pop leaveq and std rex.WXB stos rorl (bad) scas rex fwait adc push xlat xchg sbb mov movabs (bad) (bad) clc mov in test cmp pop in xchg fwait (bad) cmpsl cmp fs out loope xchg mov mov fwait test mov lods movslq cwtl (bad) xchg lret mov push xchg sahf jb mov data16 insl test subb movabs pushq ja stc xchg (bad) rex.B xchg or and and mov lcall mov sbbl push xor (bad) jmpq (bad) imul sub std test stos (bad) xlat or loopne sbb rcr hlt movsb (bad) push rex.RB (bad) mov std cmp std sbb movabs loop xchg lods callq imul out (bad) test mov push mov lods adc movsb int add and popfq (bad) sub jns jl cmp pop pushq pop sbb or callq pushq cmp (bad) adc rex.RB pop cwtl cltd popfq xor jg addr32 (bad) pushfq repz ss sbb imul retq or mov (bad) fs cmc insb retq xchg (bad) (bad) lret pop (bad) data16 pop lods (bad) andb mov xchg mov (bad) out add jb fwait push mov (bad) adc popfq pop fistpll rex.W cmp popfq cmpsl sbb pop rex.WB adc notb rex.XB ss xchg pop push repnz (bad) faddp (bad) xor popfq loope cld fdivs fwait sbb retq imull xchg and xor mov insb out repz je fstps rcl sbb cmpsb jge in add mov pop (bad) (bad) lahf cmp mov mov shr xor jne mov clc jp and sub sarl (bad) rex.W test (bad) cmp push pop (bad) (bad) rex.WRXB jrcxz mov pop pop xchg jg pop rex.WRB cmpb push callq cmpsl scas jne xor lea and lret stc xchg push and mov rex.WR push sbb ficomp lock lock adc push (bad) sbb rex.WRXB int loope (bad) or in ficoml mov addr32 fsubrl cmpsl cmpsl mov and pushq push fdivl and rex.RXB jge jo rex.W xchg icebp lods mov xchg mov pop xlat rcrb movslq push pushfq push lret push (bad) sbb fst add adc hlt addr32 cmp stos loopne (bad) je fidivl pop mov std and setbe xchg or xor lea adc adc mov in sbb (bad) xor pop vpinsrw push shlb (bad) int3 leaveq movslq adc mov fcomp cmp stos int rex mov pushfq ss rorb mov mov xor rex.B rorl (bad) out cmp mov rex.X repz out xor jb mov (bad) cmp outsb xchg mov scas rex.XB (bad) pushq (bad) mov lods xchg push es pop or mov xor and imul (bad) cmp (bad) sub xor outsb std cmp sbb add fwait (bad) movabs and js push xlat or ss jle sub sbb fild (bad) xchg (bad) jno fwait sub (bad) mov adc (bad) push (bad) and pop rorb fistl (bad) mov lret leaveq pop (bad) rex cmp rex.WR gs movabs mov fimull cmc sbbl fwait icebp xor cmp (bad) fwait in (bad) and jb (bad) jae rolb adc (bad) movslq loop xchg mov push pop fwait test and fwait (bad) mov cltd fwait hlt mov xlat jmpq mov sub (bad) add movslq sbbl rex.W in (bad) mov adc fwait mov xchg fwait add push rex.WXB xlat mov repz jbe add xor (bad) xchg (bad) movabs jg js sbb mov xchg add mov (bad) mov xor rex.WX mov jg or loopne imul cmp rex.W mov outsl fwait adc pop jrcxz (bad) (bad) test lret jo sbb sbbl and stos add jb fwait rex.RX ficom (bad) or icebp rex (bad) and (bad) mov iret rex.WXB rex.WR (bad) pushq mov cmp loope push (bad) fs rex.W nop jo cmpsl (bad) pop ja rex imul add outsb sub not movsl (bad) scas (bad) mov xor test sahf push pushfq idivl insl cmp cmp in rolb (bad) mov out icebp or or xchg ficompl (bad) jg (bad) jns (bad) in and retq jmp std xor (bad) fstpl rex.WRB rex.R rex repz xor pop add or imul add mov lahf fcoms xchg sbb xor fwait lret (bad) (bad) (bad) add (bad) mov push rex.W cmp jrcxz ds addb jrcxz (bad) out (bad) sbb (bad) mov mov (bad) movabs cmc cmp insl mov (bad) pop (bad) fdivs (bad) xchg or (bad) fwait and rolb cwtl mov es jbe cmpsl out stc sub in fs (bad) fwait (bad) decl cmp adc rex.WRXB rex.RXB lock cmc (bad) and sbb cmp (bad) mov (bad) repz (bad) (bad) pushfq jno or xchg mov negl mov jrcxz (bad) rcr jo cs xor add jp sub push fcmovnb movabs adcb adc mov je test incl pop sub jnp imul fwait or rex.R (bad) mov (bad) jl jge loope test mov rex.WX rex.WXB rex.WXB rex.WRB sub in rex.WX icebp push add adc movsb rcl xor in fwait cmp lret lods xchg jrcxz push vpunpckhwd adc movslq in movabs loopne repz addr32 mov push rex.WB mov pop add iret popfq (bad) mov adcl adc jns mov (bad) out sbb movb add mov leaveq fcmovnu cltd insl (bad) cs xor lods (bad) (bad) shl loope xchg fcmovb fsubl (bad) mov fist cmc sbb (bad) jl pop (bad) rex.WRXB int fwait popfq (bad) add or gs push rex.RXB rex.WRB lret test mov bnd xchg mov out rcll jge test (bad) ljmp rex.WB fwait scas mov mul retq sbb (bad) push jp adc outsl sti jmpq int3 rex.WRXB cmp leaveq fwait xchg and xchg mov rex.B cmp mov or (bad) xchg jmp mov movabs mov pop jno (bad) fwait mov (bad) xor (bad) push sbb mov adc mov enterq rolb (bad) int fwait cld icebp movabs outsl cmp (bad) ficoml (bad) (bad) cwtl mov cmp loope orl rcrl loopne jb sbb popfq movabs and imul sti or sti fmuls je jmp div cmpsb (bad) fwait lea hlt (bad) out sbb sbb test pop pushq fwait jnp mov fisttpl negl imul xchg je or cmp sti mov es jnp rex.RB mov pop pushq fwait sub (bad) and lea jmp xor shr (bad) (bad) jbe pop push mov fmull rex.RX stos rcrb lods or sbbl sar add jns jrcxz cmpsl je outsb (bad) clc rex.R push (bad) mov testb cmp mov rex.WRX lods sti sbb fwait (bad) hlt stos jp popfq je fwait rclb sbb mov cmc icebp loop movabs rex.X rex.WRX add loope sub xor pop fwait in xchg data16 adc add pushfq fistl retq (bad) pushfq push mov out cmpsb lods or (bad) rex.RX sbb pop sub (bad) imul rex.WB and imul lahf (bad) flds mov scas mov in iret jo and and data16 std sub xchg (bad) int3 rex.WB std and pop rep loopne fistl jne adc (bad) retq sbb cmp sub (bad) jbe (bad) adc xchg adc (bad) and fisttp fcmovbe (bad) xlat fstl (bad) or rcr gs test (bad) cmpsl testb sbb sbb or pop sbb sub imul outsb sbb fildl pop jrcxz mov and icebp (bad) imul push cwtl in je fmuls add fdivr in fwait movsl (bad) jrcxz pop pushq leaveq fwait mov mov (bad) cmpsl cmp pop (bad) sub fwait jge cmp rex.WRX and jno and lock push (bad) js pop pushq fwait cmp icebp push lahf cmp stos (bad) mov es iret (bad) and lea in test rex.WRXB pop fwait pop stos adc enterq mov add lea stc in movabs xor xchg (bad) idiv pop push pushq push push add fwait iret hlt rex.RXB rex.WRB (bad) fwait push (bad) sar sbb fwait addr32 cmp sub rex.R test mov fld sarl fdivp xchg test (bad) outsl or sbb pop jo push stos int and hlt (bad) cmpsl iret and addl cld sbb mov icebp or movabs in pop sbb clc jae std sbb retq mov and mov xchg xor (bad) pop mov ja (bad) or add jmp scas (bad) out sbbb fildl cmpsl mov and cs sub fildll (bad) (bad) or rex.RXB fwait (bad) cmpsb lret (bad) cmp in (bad) sub lahf hlt xlat (bad) pop (bad) add (bad) fndisi(8087 (bad) pop and rex.WXB (bad) sbb xlat xchg pop rex.WRX jge adc mov mov cli (bad) mov (bad) hlt leaveq (bad) (bad) rex.RX xchg pop sbb fwait rorl rex.WRXB mov loop je movb rex.WX cmp jge sbb pop xchg popfq cmp imul jrcxz (bad) in sbb callq retq cmp retq movsl enterq repnz mov or int pushfq mov (bad) add pop es fildl mov push callq push jnp ds cmpsl sti push and callq in or adc popq es sub fwait mov rolb xchg rex.WXB sti fwait adcl scas adc rex loope fcomps ds sub cmp jmp in sbb mov (bad) clc sahf lods in (bad) and xor movabs fstl adc adc (bad) ss sbb fistpl out cli or in cmpsb rex.R popfq test fwait jo scas xchg (bad) xor (bad) fwait push mov cmc movabs (bad) sbb fwait movabs movups (bad) callq cmp faddp lret sub mov rex.XB pop fwait (bad) outsl and stos fwait cmp xor (bad) in xchg xchg jo movslq lea or fistl sahf jle (bad) jo push add out ja cld (bad) mov movabs ds jo pop pop retq rex.WR fwait imul movabs push stos rex.RXB cmp fwait (bad) sahf mov pop (bad) cltd xlat adc jo test icebp rex.WXB xor and hlt pop add fwait xor (bad) stos movsl or fwait add mov mov cmp push movslq rex.XB (bad) cmp fwait movsb out rex.WRB cmp xchg push cli fwait (bad) icebp xor sbbl (bad) fucomip cmp xor (bad) add push (bad) fwait cmp rex.WXB fwait pop rex.WB sti (bad) testb cmp xchg in sbb out rex.WXB shrl mov or movabs cmp xor rex.B cltd adc int mov adc js pop mov sub sbb jmp mov fwait imul sub fwait mov sbb rex.RX pop jmp jg (bad) fldt int3 jp cmp mov (bad) jmpq lea out push fwait add insl mov mov sub push jg or jbe and jne mov movabs xchg not (bad) rex.RXB sbb (bad) out rex.RX fwait and mov mov loope xchg fwait sbb (bad) add sahf or sub fwait insb movabs (bad) xchg rex.X addr32 movsl callq in pop mov push movabs rorl in scas adc hlt xchg (bad) push pop retq jb xchg fistpl fs pop out adc xchg lret push icebp lret pushq (bad) mov fwait (bad) or setnp rex.WR mov sbb sbb addr32 mov jmp pushq xor (bad) (bad) fdivr (bad) (bad) fwait mov jmpq pop fwait imul pushq mov sbb fistpl fwait (bad) cmc hlt (bad) mov cmpsb in (bad) pop (bad) cmp fimull push lret (bad) rex.WB lret (bad) and (bad) jp (bad) (bad) addr32 in adc xchg sarl adc or pop loop enterq fist clc loope (bad) (bad) std cmp rex.WXB retq cmpsb fwait stc fildl (bad) (bad) (bad) fwait add callq lret jle (bad) sub cld fwait mov sbb stc fwait test push mov fwait pop pushq dec sahf stos lods scas or negb mov xor jge (bad) rex.WRXB fwait sarl jae sbb jnp (bad) (bad) rex.WR (bad) jge rex.RX popfq (bad) (bad) (bad) push add sti sub adc jne out hlt lods (bad) out fwait test mov sbb repnz in xchg flds sbb outsb mov in cld rex.X rex.W adc pushq pushfq mov rex ja rex.X (bad) cmc (bad) xor je pop je sbb in cmp jrcxz jl enterq andb xchg and mov (bad) fwait (bad) ficoml std rex.R push ror sbb loop cli movabs fwait in mov clc (bad) sbb pop int (bad) mov neg (bad) ficomp je cmc mov imul popfq sbb and jmp (bad) push mov fwait jrcxz pop lods (bad) sbb adc fucomi jbe outsb syscall retq mov (bad) rclb fwait (bad) and mov cld lods rex.WB test xchg lods (bad) cmpl jne shrl test sbb movabs and sub sbb retq ja adc or xlat pop insb or fistpl rex.WRX jg rex.RX lret movabs mov mov rcrl ficoml or lret cmpsq sbb (bad) stc and sub sarl push rorl pop (bad) jle cltd xchg mov shl idivb out xor stc pushfq xchg and mov mov adc in add rex.R mov movsl or xchg mov sbb clc sbb (bad) sub xor std pop stos rex.W movabs rex.RX xor jl add int data16 cld mov mov xchg out icebp js pushfw jge imul (bad) jnp rex.WRX rex.B cmpsl movslq out rex.RX mov hlt data16 movabs cmp std jrcxz neg xchg or out mov push mov sub sbb fdivl (bad) (bad) rex.B or xchg and mov mov or outsl (bad) (bad) xchg hlt fwait rex.R out mov fnstcw callq fwait jrcxz addr32 (bad) (bad) js push test retq rex.WRX jno (bad) mov (bad) mov imul pop jne (bad) sbb fwait and and (bad) rex.WB fwait (bad) sbb test xor in movabs xchg loope cmp fwait jne cmp fwait scas movabs lods (bad) sbb repnz mov mov jrcxz (bad) sbb add pushq (bad) mov in fwait rex.R in add fwait pop cmp (bad) jge sbb pop and sahf fstpt rex.RXB fs fwait retq add sbb jnp mov cmp rex.RXB rex.WRB rex.WRB fs push or movslq jmp mov add fwait (bad) retq stc sub (bad) out out and (bad) or loopne sbb loope sti sti lret rex.X fwait xor (bad) pslld sub mov cmp fwait cmp (bad) es cs imul movabs loop in lods push iret mov xchg jno jge divl xchg (bad) and jmpq nop cld (bad) add (bad) pushfq (bad) mov roll out (bad) in sahf (bad) (bad) push jg xorl (bad) (bad) and xchg fstpt sbb lret adc stc (bad) (bad) scas std and xchg leaveq sti (bad) jnp or sbb mov scas (bad) push sub mov fwait lret (bad) roll add es (bad) (bad) hlt jns stos jnp test insl outsl je sbb fistpll jle (bad) in repnz adc pop ds (bad) cmc and ss jrcxz or imul xor test orb jo push mov popfq rcrl test rex.WRB out popq mov repz je lods mov rex.RB test xor cmp pop clc (bad) rex.WRX or sarb push retq sub (bad) fwait (bad) cmp pop fs addl fwait outsl (bad) movabs fwait adc lods push pop jrcxz repnz jnp callq iret scas sub fcmovnbe add pushfq fwait orb jmp rorl jb stc cmp pop sub push loop fwait mov loope fwait out mov cltd sahf rex.WR (bad) div cmp sbb xchg lahf insl fwait movabs fs roll sbbb rex.R and mov jge xchg fistp addr32 cs outsb fstp (bad) nop xchg test (bad) mov adc stos lea or hlt mov xchg cmp je sbb (bad) stc movslq (bad) in fildl lea scas adc push ss rex.R (bad) (bad) lret rex.X flds fwait retq jno imul fwait lods push (bad) (bad) xchg fimul callq in iret je (bad) mov fdivp (bad) mov adc (bad) in (bad) fwait xor jae rex.WRXB xchg cmp jg cmp mov movsb test insb fwait retq push test sbb fs movabs retq adc adcl lods imul fcmovnu loopne adc mov xchg sbb mov push jrcxz in rcrb fcmovbe xchg movslq (bad) pop imul outsb fadd nop add int adc (bad) fwait je push pop (bad) rex.WB cmp add popfq or test xlat push retq fwait or xchg xchg (bad) jg push adc push fwait (bad) lea or (bad) negl pop sti rorb (bad) sbb scas movabs out fwait mov xor or adc (bad) in jne sbb add pop rex.W rex.WB test adc cmp fdivr rex.RXB enterq test retw rex.WRB rcrl movsb sbb loope (bad) or icebp add mov sbb movabs sbb ds insl adc (bad) (bad) jbe (bad) sbb sub rol mov fstpl rex.RXB (bad) mov push add rex movabs (bad) jmp repz sbb pushq rex fcomi lea fwait rclb ja pop xchg movabs leaveq xchg mov (bad) (bad) iret jne push stos pop sbb xchg in cmp (bad) bt in jae mov retq xor xor (bad) mov mov cmpsl (bad) fwait xlat leaveq xor lret rcrl loop xchg loope mov jo rex.B rex.WRX mov jle mov rorb pop xor stos fbld iret rex.WRB test (bad) (bad) (bad) jns xchg rex.WRB (bad) cltd test mov popfq mov (bad) jge lret jae sbb clc loopne (bad) (bad) add pop xchg pop adc (bad) scas idivl cld (bad) add jae shll push add pop loopne movabs (bad) mov es stc cwtl (bad) sbb std rex.X xchg in and imul mov lods add adc std sbb add cmp rex.W rex.WXB es and mov gs cmpsl (bad) sbb js cmp in popfq xor and lods test xchg xlat (bad) (bad) insb mov xchg mov xor sar xchg movaps ss imul rex.RB (bad) (bad) (bad) jg pop (bad) ja loope cmpsb mov loop movsl ja cmc pop rex.RX insb mov outsb pop add (bad) sub cltd sub pop fwait andl xchg add cmp (bad) mov js cltd (bad) xor lods movslq rex.RX (bad) loope movsl jne imul sbb or xor sti repz fildll scas push mov cltd xchg add in sbb push jge pop int3 sarb movabs cmp cmpsb (bad) xchg sbb hlt popfq repz rex.X sbbb fwait rex.RX pop xorb movslq fstpt add xstore-rng cmpsl (bad) in xchg callq jb xor sbb jno,pt cld xchg mov out mov xor push mov add lock pop jbe cwtl jns fwait ja stos jmpq fwait (bad) (bad) sbb rex.WX mov rex.RXB cmpsb (bad) jle xchg xor add (bad) pop lret and xchg rex icebp negl out in adc fildll (bad) addr32 sbb rex jns (bad) sbb jae movabs js jne pop lret rex.X (bad) fstps and out mov mov in mov (bad) jge (bad) lahf pop jmpq add rex.WRX cmovbe xlat add xor (bad) sbb mov rex.XB or leaveq (bad) icebp sbb nop gs cwtl (bad) sbbb lret add lahf (bad) sbb addr32 add rex.RX stos add or jge xchg cmp (bad) movabs icebp adc sbb cmp jb,pt stos mov mov mov cwtl cltd insl insb (bad) rcrb (bad) cmp xchg sbb jbe sarl (bad) pushq xchg (bad) adcl (bad) and in xlat (bad) pop or iret and jo lock movabs in retq insb or loop jmp and jae mov (bad) fldenv (bad) pushfq jl add xchg rex.RX fwait (bad) add movsb fwait (bad) xchg sub fwait pushq xchg or xlat cwtl rolb mov subb (bad) cmc movabs callq jp cld cltd mov cld adc (bad) movabs push scas (bad) ror fsub rep (bad) xor in (bad) fstpl push sub push ds sahf enterq xchg pop pushq (bad) cli retq or mov stos stos scas mov mov fwait rex.WR and loop test int3 (bad) pop adc callq cmp test and jnp or (bad) fistpl sbb cmpsl movsl push jbe scas cs rex.WXB sbb sbb lock rex.X (bad) mov sbb int3 adcb jrcxz pop jb xchg lea fwait fwait mov cmpsb and in pushfq scas mov rex.R fldt movabs push out rcr sub pushq rex.WRB mov adc or movabs (bad) jmp xchg out fwait jno and fwait cmpsl jge scas (bad) rorl cmp or fwait je xchg addr32 jbe (bad) cmc adc data16 fwait (bad) fs sub in mov jp xchg mov and add test js rex.WXB fistp and imul mov adc (bad) add (bad) and in (bad) movabs std (bad) add mov sti adc pop callq push (bad) rex.RB cmp negb and cmp or mov (bad) movabs pushq hlt xchg and movabs add test fldl movabs fwait enterq xor add (bad) rex.B cltd fsubl sar rex.WXB mov out fprem roll lahf retq fwait hlt add je sbb sahf or (bad) jb out out pop add fmulp rex movslq in (bad) fwait adcb imul xor (bad) out sub mov rex.WRXB rex.RX je cwtl jmp mov jno pop or mov push in cmp ds sti jbe (bad) sbb xchg sub jrcxz sbb sti cmp callq sub jg xchg mov mov xor mov (bad) decl (bad) mov sub or movabs (bad) iret or mov mov mov mov fwait push (bad) and cwtl (bad) cmp adc pop in sti (bad) and sbb data16 je out cltd fwait cmc and jb jge in (bad) loopne push add mov jbe outsl and repz sbb icebp (bad) xchg mov jge scas (bad) (bad) (bad) cmpsb hlt fwait icebp (bad) pushfq cmp rex.R retq (bad) sbb movsl fmuls sti ljmp outsb mov mov retq mov gs cmp xchg fwait jb (bad) hlt sub std shll fsubs jp cmp hlt gs (bad) adc mov mov in (bad) mov rex.WB decl jp jl xor lods (bad) fwait je xor mov rex.RB fucomi pop rex.WRXB mov fstpt mov mov rex.WB movabs mov jle or je in movsl fist add hlt mov cld fsts mov cld sahf cwtl or mov rcr pop and cmp (bad) fcmovne pop (bad) (bad) gs mov pushq sti fwait iret not rex.WXB pop leaveq xor rex.RX or fwait movabs push (bad) push (bad) and insl fwait repnz (bad) sbb pop and add jno xlat (bad) adc jl iret sahf js sti cmp fwait outsb (bad) (bad) mov mov jo cld fwait mov rex and (bad) cmovs adc scas push lock mov fwait xchg gs add (bad) cmp loop in fwait rex.RX or mov fwait cmp hlt ja stos pop test fwait lahf and xlat pop mov js sbb stos cmpsl mov fwait icebp mov mov fwait jns rex.X xchg rolb xchg mov jg cmp adcb push cmc (bad) std (bad) (bad) movabs xor rex.WR movsl in scas jle popfq mov sub ficompl je fist imul rex.X xlat sub mov mov (bad) mov pop repz pop (bad) insb loop divl sub fwait xchg sahf lret pop std fistpl (bad) ds fwait rex.X jrcxz imul rex.W mov xor hlt (bad) adc or sbb (bad) push jrcxz lret adc and adc add (bad) nop ja out lods (bad) repz add mov fucomi out sbb sub rcrb mov movabs int mov rex.WRB fwait jae rex.WX subb sub add lea (bad) fiadd fwait (bad) push es (bad) lock setnp add (bad) cld fwait jno rex.X (bad) cmpl callq jnp lret (bad) test mov repz add (bad) (bad) in test fwait sbb enterq retq iret and mov loop icebp movsb pushq mov jno fwait pop xchg icebp (bad) push adc cli sbb loope jnp or icebp (bad) xchg fwait add pushfq mov movabs jne add cmp add xor js stos clc rex.WR xor sub hlt callq sbbb repz mov sbb outsl imul stos enterq std neg fwait mov xor mov push out jnp add (bad) (bad) out adc (bad) loope xchg outsl jo adc je fstcw sub cli xor rex.RB fs mov xchg (bad) xchg icebp xor gs (bad) (bad) (bad) or pop int3 vmulps cmp rcrl movabs and or or jae adc sbb sub js (bad) rex.WRXB or add (bad) add jge pop cmp rex.WRX int3 int adc outsl stc lret or sarb jrcxz (bad) retq test push jne or (bad) jae mov xchg sti sbb (bad) xchg pushfq addr32 ss sbb cmp rex.WXB cmp xchg pminsw xchg jo (bad) in adc flds fwait (bad) jle fnstsw cmpsl cwtl xor adc lock sahf lods (bad) mov add fcmovne shrb repnz mov fwait sbb mov (bad) sub xchg std xchg cmp xor or adc outsb notb fistl pop sbb out movsb (bad) pop push fmuls jp jle xchg (bad) (bad) sbb jno repz callq sub cwtl xor sbb adc add iret rex.RX rex.RX gs cmp rex.X loopne rcll cwtl add sbb std loopne je fldt fisubl rex.WRXB fwait pop rex.WXB lahf fwait movabs je fistl sti xor mov cmc xor and mov (bad) or fstl mov out hlt fwait xchg callq fwait and int push outsb xor adc push xchg (bad) push jno gs fbld or jae icebp loop (bad) lea lahf cs out sbb push (bad) movslq fwait stc cmc in hlt sbb cmp push insl sub jrcxz push cmp loop roll (bad) or and jo rex.X rex.X rex.WXB push (bad) push (bad) setle fs add imul pop rex.XB cmpsb pop in fwait pop in push cmp shll jb sbb push leaveq nop fstpt int3 add xor jns mov mov xor out xor (bad) hlt (bad) lret jrcxz (bad) sbb addr32 sub sahf repz sbb movabs (bad) (bad) xor (bad) rex.RB mov sbb fwait add rex rex.W lock mov fisttpl xchg divl loop sbbl out cltd movslq adc fwait mov callq fwait in (bad) xchg mov retq or fwait (bad) dec movslq ss in (bad) pushfq in mov or rolb sbbb xlat scas (bad) xchg (bad) (bad) and (bad) sub rex.RX mov mov icebp sbb xchg cmp or fwait psubsb outsl adc add xchg xor cs sbbb mov xor add pop xchg cmp xor pop sbb pop sti (bad) adc xchg insb stos (bad) fwait pop or rex.XB sarl mov jns iret fwait xor cmp jge jno push rex.RX xor out sahf rex.X xor (bad) mov cmp scas push cltd mov gs sbb vcmpsd (bad) int3 pushfq pop adc fldenv imul test cltd mov mov sti sbb (bad) sbb (bad) popfq retq ficompl cmp repnz (bad) xor cld fistpl imul jno (bad) and fwait (bad) adc (bad) (bad) (bad) test cli cmp jge mov pushq cmp mov push pop iret mov (bad) fwait sbb lods pushq cmp in loop fwait insb movsl (bad) mov fwait xchg cmc mov cmp pop jno lods (bad) (bad) lock pop adc roll adc cli sti out fistl or lret outsl cmp out cmpsb retq (bad) push gs cmp repz andl xlat xchg xchg iret test rex.WX sbb mov rex.W adc jns jbe pushfq jge xor rex.XB add (bad) std rex.WRXB cmp jne int lods rex.WRB sub xchg out xchg lea xchg mov mov movabs retq out sub rex.RX fwait push fisttp (bad) cmc mov sbb or std imul adc add jmp or xchg je (bad) (bad) mov (bad) (bad) movabs or rex.WR or jmp pop (bad) in pop jb mov cli in in sbb sub pop in cmp cmp (bad) repz xor rex.WXB fmuls sahf scas shrb setno stos (bad) pushfq jae rex.WX fwait retq and rex.WRXB rex.B fwait xchg sbb or pushq fwait push rex.RB mov insb stos shr (bad) shr stos sub xchg mov fwait jl push add (bad) xchg (bad) mov pop cmpsb (bad) lea rex.X cmp cltd xor (bad) adc fwait rex.WRX mov ficomp and mov sti (bad) and (bad) (bad) (bad) scas (bad) mov fwait xorb test jrcxz (bad) rex.XB fsub in out cmp adc frstor fwait cld sahf or (bad) pop jrcxz in (bad) (bad) sbb jmp js mov xchg (bad) enterq jne insb fwait test (bad) (bad) in sbb movabs cmpsl cwtl mov push xchg fimull scas rcrb pop (bad) sbb jge (bad) fldcw hlt add fwait mov pop xchg rex.X pushq pop mov retq (bad) xor rex.RX pop pop shr leaveq clc mov retq xor xchg inc test mul mov outsl xchg pushq jae push fwait jns cmc hlt or data16 in mov xchg cmp lret fwait rex.WRX or out mov xchg fdivs mov fwait enterq pushfq pop push je mov callq loop xchg xchg orl fstpt add fwait (bad) cwtl retq push sbb sub cmc rex.WRB and (bad) (bad) repnz mov adcl cwtl (bad) iret stc (bad) xor (bad) (bad) (bad) lret rex.X sahf (bad) fs fwait rolb frstor cli or jle in out jl insl (bad) test cmc ja rex.WRB fwait sahf mov and (bad) retq add pop xchg lea (bad) fisttp jmp fcmovu push sar rex.WX repz push push fwait pop push rcll movsb (bad) fwait jne cmpsl popfq outsl cmp pushfq sbb xchg (bad) pushq rex.WRXB fwait xor push sub mov icebp fwait add in out push mov rex.WXB (bad) clc cmp je movsl cs mov mov insl outsl push xor (bad) xor popfq insl movslq imul or jmpq mov rex.XB rorl (bad) fwait push adc adc (bad) fwait rex.RXB callq std or sbb (bad) gs lret out (bad) xor add push (bad) fwait (bad) (bad) out pop jae adc fwait adc jl int3 pop mov fwait vmovsldup icebp sbb mov sti (bad) pop imul (bad) fwait and je lods pop push xor rex.WRX add fnsetpm(287 rex.WRB loopne jmp adc mov mov adc xor add stc fild rcrb scas je add repnz lret jl xor (bad) sub (bad) or sbb (bad) cmovl adc pop sbb rex.R imul cmp insb lock fwait rex.WXB popfq std xor mov pop fwait sub adc sub push fwait mov push in mov movabs (bad) fwait (bad) (bad) cmp mov int or adc sbb nop clc rex.RB clts (bad) (bad) cli rcl push lret fcompl (bad) retq (bad) fwait sbb sub hlt cld rol mov out sbb lahf sbb (bad) addr32 sbb callq mov fwait xor mov lea pop (bad) adc rex.WRB addr32 add int sub mov repz mov sbb sbb rcrb mov gs outsl test pop lcall cmpsl movabs sbb mov mul cli xor movslq add fs sbb rex.RX (bad) (bad) hlt lock lods loop movabs shl in xchg xchg (bad) jl (bad) repz cltd sub jge (bad) fldt jo add testl jmp leaveq rex.RX lods mov mov (bad) lock mov pop out adc ficom (bad) stos (bad) mov xchg sbb in mov repz (bad) sbb mull mov cli (bad) movabs js add movsb pushfq (bad) lea jae sbb mov rex.WX fnstenv subl (bad) adc es xchg mov rex.XB mov mov test movslq js or shrl add retq (bad) xor imul (bad) nop jp and mov fildl fildl jae (bad) nop cmp xchg jge addr32 add xor fwait (bad) mov xchg xor xchg fwait sbb jae loopne std fwait ss add scas pop (bad) (bad) xchg lret repz sbb popfq mov mov mov retq (bad) mov (bad) (bad) fs rex.RX sti jmpq movabs jno movsl jmp in mov fwait leaveq xchg pminub movabs cld orl sbb outsb in jmp fcmovbe mov mov xor jle and andl mov mov mov jmp movsb out sub xchg cmp (bad) jb lods movabs (bad) xchg fwait (bad) fnsave fsubp retq (bad) mov sti lret sbb outsb fwait jl enterq xchg fiaddl loopne cmp ds jmpq test (bad) (bad) pop test movabs pop jle movabs (bad) test (bad) cmpsl add stos loop mov sub and insl xor enterq (bad) movsl rex.RXB fwait (bad) fisubr xchg (bad) lret and (bad) loop mov or sub idiv jae rex.XB push jl adc test jmp out clc lods fwait (bad) add jmp mov sarb adc xlat adc sub jo fwait or sbb rcrb xchg cmp (bad) sbb push mov fbstp pushq or std (bad) sbb adc out pop ss xchg ljmp gs xor rcrl mov and (bad) mov (bad) rex.WR sahf fwait ss xchg sbb fwait xor and cmp sbb jne xlat mov adc lcall mov (bad) jrcxz cmp and callq (bad) lea sbb mov jbe mov sbb (bad) movabs add outsb sti loop xor lret xor ds sbbb sub lret add (bad) (bad) fwait push rex.X add push mov or rex.XB pushq rex.WB lahf sbb (bad) leaveq fistp or (bad) jl sub cmp rex.WR sub mov test fwait test (bad) mov stos sbb movabs fwait lahf mov mov fwait (bad) rex.RXB xchg xchg mov (bad) js cld sub push jo jmp cmp loopne sti fmul and push int3 sbb in mov enterq xor fwait pop or and push xor (bad) add rex.XB test pop cmpsb jmpq jle data16 loopne ljmp xlat sti sbb rex (bad) stos xchg pushq xor cli xor add (bad) je movabs ds sbb jbe rol xchg clc sbb mov mov (bad) pop (bad) fbld std shr or jle in or sahf fnstcw sahf mov xor adc mov pop push xchg shll sarl (bad) jge mov out sbb hlt sbb repz mov xor clc loopne enterq mov retw fwait mov fnsave xor (bad) sbb mov movabs test and fwait add fsts in movslq sbb cwtl loope mov adc rcr rex.WRB lods mov jno fwait out outsb movabs push fstpt (bad) in rex.R fcoms test mov xchg mov rclb rex.WRX pop cmp (bad) decl rex.XB fwait (bad) out mov pushfq lods in xchg (bad) icebp mov sub push fldl imul (bad) fistp stos sbb jge imul fmul fwait movsl hlt clc rex.X jo popfq xor incb xchg cmpsb mov adc mov pop sbb rex jns sbb lret loopne gs in pop std pushfq ja,pn mov and adcl xchg lret (bad) mov pushq and (bad) int xchg pop sub ja jp es push movslq push jne xchg (bad) loope retq mov jmpq sbb (bad) repnz cli xchg xor insb loopel es rex.RB xchg xchg fcoml icebp sub rcll cmp sbb push loop (bad) rex.WRX cmpsw in retq jp or jrcxz push xorl fdivl (bad) jns cwtl out xchg (bad) xchg popfq lea mov (bad) clc loope (bad) mov ja rex mov fucomi fmull scas (bad) repz cld movabs rex.RB (bad) sbb rex.RXB std (bad) jrcxz cwtl xchg pushq rex.WB je jmpq movsb push ja or (bad) movslq adc and (bad) rex.WRXB jl sbb out cmp (bad) or add addr32 sahf (bad) cmc sub xchg mov popfq cmp je rex.RX sbb pushq mov (bad) insb rex.W fwait mov jns movabs (bad) movsb rex.WRXB je xlat (bad) (bad) ss xchg (bad) xchg or xor rex.B icebp rex.XB or mov xchg jmpq enterq nop cmp ja rex.R stc mov movl (bad) insb or jle jg cltd mov xor (bad) retq sbb idivl xor rex.R xchg (bad) pop fistl pop xchg movabs xchg pop adc xor fild rex.X (bad) pop movabs xchg enterq jns movsb retq imull and js (bad) test or (bad) and jrcxz sub in iret sti scas (bad) adcl mov addr32 pop imul movslq xchg fstps xchg (bad) outsb movabs jae jbe stos adc adc (bad) mov rex.RX jge sub movabs xor push data16 or mull (bad) xor cld (bad) shlb mov mov jle rex.RX add repnz pushq rex.WRX xchg (bad) xor pop (bad) stos jb or mov mov movsb and rex.WB rex.R adcb test (bad) adc xor push in cltd fs mov fwait mov rex (bad) in xlat rex.WB mov pushfq idivb rcll jmp loopne adc mov pop in hlt and cld mov mov cmp (bad) nop sbb insl retq or fwait mov movabs jo rcrb xchg out mov imul rex.W loop std add xchg (bad) pop jnp fwait jo jg (bad) pop fisttpll add rex.RB sub fwait ja jrcxz fwait int3 add add jae adc mov push jrcxz add imul sub rex.RXB cmp mov rex.WRB rex.WXB jnp jae (bad) adc xchg movabs sub adc cltd rex.WRX rex.RB jl jmp (bad) fwait jne (bad) test sbb jo jns xor (bad) adc pushfq lret in fsubp (bad) push xor add out sub hlt mov jge mov sbb and lret jmp fisttpl (bad) fstps mov fucomi rcrb movabs mov retq insl rcrb xor imul mov iret popfq fwait mov int xchg (bad) pushq jrcxz push fs (bad) (bad) (bad) (bad) fild or jo sarl (bad) loopne sub rex.WB rex.RB push repnz jp scas adc fwait cs push jb test addr32 xchg sub (bad) data16 or mov push iret retq (bad) imull fwait ja stc insl jmpq mov stos add (bad) add (bad) rcrl mov enterq clc (bad) and nop shl sti add popfq sti ds jb mov push rex.WXB (bad) adc add leaveq sbb (bad) rex.WRB mov loope (bad) and gs cmp in (bad) fsubrs pop in pop adc ss cmp mov fwait (bad) gs push stos push (bad) lea rex.WRX (bad) mov pop imul add (bad) pop xchg int scas cli pop gs push fwait imul (bad) andl retq leavew icebp and fwait cmp lea mov stos je jl jnp sti cmp int movslq or ficomp repnz rex.WRXB fwait rex.WXB or mov (bad) fwait jrcxz ja pop (bad) fwait mov repnz (bad) (bad) or sub scas lods fwait imul mov (bad) (bad) cld lret cltd xor and outsl mov setnp jle pop and cmpsl (bad) fwait xchg std enterq jbe (bad) iret test mov push fmuls sti (bad) add (bad) cwtl outsb (bad) sbb mov xlat (bad) sub add in xchg fwait movabs xchg sarb xor jmpq loope retq jrcxz fbld fiaddl sbb paddsw push (bad) clc rex.RB sahf iret in add insb mov mov test lahf out xlat (bad) rcrl mov jrcxz (bad) fistp insl (bad) jl mull lret loopne pushfq jge sbb mov sub (bad) cmp rex.WX (bad) movsl insb lea stos out mov data16 sbb mov pop mov fwait (bad) xor or (bad) cmp mov and sbb retq jns enterq rex.B (bad) movabs (bad) adc out (bad) and fwait sub fwait lock xor and jp cmc (bad) rclb xchg fstpt xor mulb xchg cmpsl ds out push add (bad) fdivrs ficom ficoml lods jge xor out xchg (bad) pop cmp (bad) sub jl fsubs imulb jnp mov xor (bad) notl ud2 rex.WX repz cmp xor fisttpll cs subb imul xchg jno and pop sub scas fs mov rex.XB add and pop insb mov je cmp loope add loope mov popq test (bad) out iret (bad) lret sub xlat add xchg cmp sbbl (bad) (bad) push mov hlt sbb jmp scas vpmulhw mov fs xor push cwtl cmp idivb sbb xchg stos add test rex.XB rex.WRB repnz pop sbb out (bad) jrcxz xlat cld mov fwait addr32 push (bad) leaveq pushq push adc movabs rex.RB pop jl or rcrb jno jrcxz mov sahf (bad) (bad) (bad) sub test insb cmp outsb cmp xchg sub sub cmp movabs test fistl test cmpsb fwait mov or repz jne pushq sbb int3 adc xor (bad) cmp fs jbe lea iret rex.RX mov (bad) imul stc or loop pop fwait addr32 enterq sbb adc ficompl scas lcall or cmp adc rex.WXB movsl jno or push rcll (bad) adc xchg (bad) sbb je (bad) jge ds jg es bndstx sar add negb (bad) push sbb rex.R rex.R data16 rex.RX mov callq movabs xchg sub add or pop rex.WX (bad) (bad) faddp fwait add movabs pop retq fwait jno add or pop cld sbb rex.B jge and jno adc clc fwait xor rex.X test mov pushq cmpsl out mov cmp mov (bad) shr iret rex.B fwait outsl mov pushq adc mov in (bad) (bad) jmpq mov or loope and neg or sub fwait addr32 in fiaddl (bad) (bad) rex.WRX or cmp cmc jno fwait insl cmp rex.RXB fwait jl (bad) in mov mov jo cmp fwait (bad) in and es rex.X adcl ficom pop jae fcmovnbe rex.RX mov mov rex.WRXB (bad) fcomps movsl (bad) mov xorl loop mov jge loopne pushfq pop int3 rex.XB xor je and fbld popfq rex.WX xchg xchg xor movsb rclb clc rex.R sbb adc xor test rex.WB outsb sub xchg addr32 jnp adc sbb add rex.W repz stos add sbb rex rex pushfq (bad) movabs mov sbb mov insb cmpsl ja mov movabs xor (bad) pop (bad) (bad) test adc retq fwait adc and rex.XB fwait imul rolb xchg (bad) loopne fwait xor push cmp mov xchg jl sub in div (bad) xchg movabs pop xor fwait sub mov adc adc (bad) pop mov mov or rorb xlat push and fiadd std rex.RB rex.WRX movabs lret sub out sti imul pushfq add or jmp pushfq mov add (bad) in mov rex.RB fwait (bad) xchg movsb jne fdivrs jrcxz negw or rex.WR je sbb xor imul mov (bad) cmpsl iret push (bad) xor outsb jle mov sub ss jg retq movslq in cld sbb fist add lock mov add push push jne pop mov mov mov adc fwait or retq xlat andb rex.WR fwait (bad) mov (bad) (bad) popfq (bad) (bad) (bad) jmp jnp cmp fwait and rex.W nop cltd jae adc retq js xchg cmp push std fwait xchg movabs mov (bad) cmp jne push cld jle sbb stos adcl pushfw gs movsb sti fwait (bad) lods cmp jle jl (bad) insl mov stc pushq push sbb cmp (bad) in icebp (bad) xchg or out pop popfq mov and (bad) cmc fcoml stc mov xchg test sbb insb movabs sub xchg fsubrp pushq mov jmpq scas cwtl andb rex.X in rex.RX js int fwait data16 rex.WR mov int movsl xchg fwait (bad) int3 (bad) adc sbb xlat (bad) xchg add (bad) andl fwait pop test (bad) icebp and fucomip and xchg or cmpsl (bad) out movabs xor push fdivl movslq sti add rex.R test fwait cs stos (bad) mov rex.XB js xor add (bad) enterq rex.RB fwait rex.RXB test sbb es in mov sti add lock push xorb cwtl es fwait pop xchg pushfq add rex.WRXB roll stos push add (bad) adc and add fildl sub sub cmp jmpq lret fistl cwtl jnp rex.W jns,pn (bad) pop (bad) xor shr sbb cmc fucomi jo fwait sub (bad) or (bad) xor sbb jmpq loopne add xchg (bad) xor adc sti mov sarb (bad) fwait or jb xchg adc in (bad) repz loopne and or mov rex.RX or and adc rex.WB mov mov loope fildl jmp xchg movabs addr32 mov pop and jae push xchg (bad) sbb pushq mov fwait mov sbb gs callq rcrb (bad) and fstps je fimul or (bad) jmpq sbbb xlat jmp sbb loop outsb (bad) (bad) rex.WXB (bad) jae mov add retq test stos or mov sbbl stos mov fwait push xchg xchg sarl pop mov out cmp xchg pop (bad) (bad) pop fwait out (bad) (bad) nop xchg pushq add mov rex.WR out add fwait cwtl in mov cmp mov test mov leaveq mov mov cmp scas rex.RX ds fwait adc (bad) xchg jns rcrl xchg sti jnp fwait (bad) rex.WRX cmp js sti lock pop xor sub fstps cmpsl mov pop fwait rex.W rex.WRB sahf popfq mov (bad) rolb mov or hlt (bad) retq (bad) movabs (bad) sbb outsw rex lret ds scas subl or (bad) in fwait rex.X xchg push popfq out nop pushq xor add loope cmp xchg (bad) out add add test jnp push sbb (bad) xchg test outsl fwait mov int loope je fwait cmpl lods repz fwait add xchg add movsb fldt (bad) movabs (bad) lods lea ds shrl mov sbb movabs pop jns fwait adc (bad) mov cli xor (bad) cmp mov adc pushq mov mov add pop rex.RB jmpq add fistpl sbb fwait mov shl outsl fwait or (bad) ss shr mov cmp sbb xchg rex.WRXB jb loope jrcxz mov mov fcmovne or or fwait pop (bad) fstps sbb shlb and enterq rex.W subl je sub int3 sbb push pop mov and jo rex.RXB jle imull in sub xchg or (bad) and (bad) (bad) stos pop scas pop shlb rex.WX pop mov (bad) es jb and scas jb add mov test (bad) sbb add rex.W pop iret xor pop pop (bad) mov cmp adc mov imul push or fsubs mov mov mov xor stos in cmp sbb jle negb pushfq (bad) or fs xor pushfq pop (bad) in and clc (bad) xchg jbe cmp lock sbb lahf push std (bad) rex.WRX xor movabs jl sbb jrcxz sti movabs add cltd adc add adc rex.WX sbb scas fimull jrcxz (bad) rex.XB sbb retq cmp xlat (bad) fwait lret nop cmp sbb jo (bad) lods movslq adc fwait mov sub fcompl rex.RXB (bad) cmp sbb add addr32 es retq (bad) gs idiv stos jg sub xchg add stc mov nop int3 imul jp rex.WRX mov (bad) mov xchg (bad) mov fwait pushq mov (bad) add or ja imul fdivs fwait xor rex.RXB pop cltd lret and fwait (bad) cli stc rex.WRB movsl fwait cmp xlat push (bad) lahf (bad) (bad) icebp (bad) in rex.RX sbb outsl mov retq pop sbb sub fwait mov jbe movslq lret rex.RB cmp xchg frstor jp fwait fs rex.W stos rcrl jg mov sbb shrl cmp mov popfq stos cmpsb (bad) mov xor xor retq cmpsl (bad) jne fwait je callq xchg jrcxz rex.B es rcl jns (bad) out jno rex.X (bad) jge sub cli fwait xchg popfq mov leaveq fwait push jle jge xor popfq in jne rex.B retq (bad) adc fwait jae rex.RB lods (bad) in sahf mov (bad) or outsl movabs sahf movsb (bad) jae fwait mov push (bad) (bad) (bad) or decb mov xor js jmpq lods mov fcomps jmp out mov (bad) mov cmp xor repz sub rcll sbb xor repz outsl jns xor rex.RX pop xorb (bad) test and shl in sbbb mov lock add (bad) cmp (bad) (bad) (bad) in popfq and je and (bad) sbb lret (bad) fwait (bad) pop es lods mov or mov (bad) add rex.WXB adcl add jne cmp fwait in fisttp and addr32 (bad) scas loopne jge and add ds mov push (bad) repz je fwait mov movsl icebp (bad) cwtl add ss jo notl add sbb mov or mov (bad) push pop add je out pushfq insb fwait popfq repz (bad) enterq enterq rex.WRB std push fwait stos pushq lahf jno movabs (bad) rex.WRB rex.RXB and (bad) lahf add mov fwait add xchg lahf nop std mov xorb or cmp pop mov (bad) sbb mov rex.WR or stc negb (bad) pushq jl rex.RX frstor test retq callq retq in jo test test imul movabs divb pop movabs fnstsw movabs adc (bad) add sahf cmp test gs fildl and fnstcw (bad) hlt movsl jnp movabs mov pop popfq shr rex.WR mov fidivrl rex.WX jmp (bad) sbb pop and sbb jle mov mov movabs insb mov es (bad) pushq sub rex.WX (bad) insb adc pop xchg jb (bad) xchg mov and sub fsubl cmpsb in cmp add adc or stos out fisttpl mov jno (bad) outsb in push or (bad) fstpt (bad) pushq stos sub sti mov mul stc mov (bad) rcrl (bad) rex.WXB (bad) jmpq rex xlat (bad) sbb movslq rex.XB rex.W sub rex.WRXB loope test pop rcrl fwait (bad) jle (bad) (bad) mov cmp (bad) pop rcll jnp xlat and mov test xor jnp (bad) imul cli xor add add shrl rex.WRX std test mov retq mov mov xor adcl cmc rex.WRXB sbb mov (bad) fwait rex.WRB rex.WXB rex.X stc (bad) push fiaddl sub mov pushq out mov sbb out push xor fistpll and push adc cli (bad) jl,pt cld (bad) and popfq cwtl (bad) add cmp and mov (bad) pop movabs popfq rex.WX (bad) or (bad) in mov mov jo stos iret enterq adc xchg mov (bad) mov (bad) test mov stc (bad) and cltd mov (bad) xchg popfq (bad) (bad) (bad) retq mov sahf insl cmp (bad) sub fs push add xor or scas idivl rex.WRXB jle cmp xchg mov push (bad) adc in mov adc repz movsl jae (bad) or fbld mov cwtl fnstsw sub or sbb scas mov (bad) shlb mov and std fwait ja mov jne mov mov (bad) pop add test mov lret (bad) js rex.WRX ffreep popfq xchg xchg rex.XB rex.XB fwait fs push (bad) test callq (bad) cmp in sbb push fistl add cld movabs ror rex.WRB and int3 mov out mov (bad) out cltd lahf fwait movsb cwtl (bad) out rex.RB retq sbb (bad) rex.R rex.XB fwait rex.RX jl cmp fwait pop insb adc mov jle or in fwait rex.X rcr rex fwait iret test add imul fwait in (bad) out out rex.WRXB fcmovnu repz mov pop fst movslq in popq xchg and sbb imul jbe (bad) jnp rex.RB movabs hlt or fwait lods mov pop adc xor add (bad) (bad) movabs rex.B (bad) mov roll rex.WR sti add lret adc adc rex.WRXB fwait fs fiaddl add rex.WXB imul add mov jp int3 xor cmc adc fildl imul jne jbe (bad) out icebp jg (bad) callq sub (bad) pushq pop fwait cmpsl movabs repnz xchg sbb jbe or sahf jnp add (bad) mov (bad) rol (bad) mov stos cltd rcl repnz out loopne mov fildl and rex pop scas rol push jrcxz movabs mov mov movabs sub mov cld vmulpd cltd (bad) in retq fwait mov xor xchg and rex.RXB mov push fwait cmp sbb lea imul lock or sbb (bad) sahf (bad) sbbl int3 loop test pop xchg (bad) sti adc xlat ds cmp cmpsb fwait add cld push in xchg pop sbb and out xor out unpckhps sub sbb mov sbb pop callq fcmovne js fimull mov pop leaveq jp mov movsb mov sahf loop clc pushfq es (bad) movabs fwait fs pop push xchg std lods stos (bad) or loope mov xor sub ja (bad) std fwait (bad) icebp callq out xor add movabs jnp movabs (bad) (bad) insl int3 sbb pop (bad) outsl fbld jge mov mov insb add or movsb rex.XB movslq pop lret fwait xor fs sbb add adc xlat add (bad) fwait test (bad) mov mov fwait loope jrcxz es cwtl pop sub cmpsl std (bad) mov mov fildl popfq xor mov rex.WXB repnz rcrl lret sbb xchg rex.WX std ds callq test mov jrcxz (bad) mov push lock mov (bad) xchg xchg movabs pop pop jp ss cmp loopne ss rex.XB xchg imul jns rex.WRXB addr32 pop (bad) cltd rex.RX add (bad) fwait scas movslq movq sub (bad) loop gs (bad) (bad) xor pop lods sbb push cmp imul sbb (bad) fwait js (bad) add xchg enterq mov xor leaveq repz sti xchg lock xchg out adc stos sbb rex.X repz (bad) ss push rex.WXB sbb xor (bad) add out jg and push rex.RX int3 (bad) pushfq rorl cmp jmpq jb (bad) movsb cmpsb fcoms addr32 add in stos mov pop add sbb insl sahf cmp sub popfq pop sub pop jno add loop (bad) jge mov add (bad) mov scas fcomps pop fwait stos mov cmp cs std fwait xor (bad) (bad) (bad) pop lret or mov sbbb xchg hlt fadd jmp andl mov pop fdivrl xchg movabs jne (bad) imul jo sti push fcompl (bad) sbb (bad) sbb xchg mov lods cli addr32 (bad) rex.WRX adc out rex.RX lret cmp (bad) rex.XB rex.RXB (bad) sbb sbb push mov hlt xor adc (bad) fdivl imul xchg jle jl sub out fcompl xlat in rex.WXB movslq addr32 imul and or cmpsl and rex.WX lret (bad) enterq jb leaveq movslq sbb loop sub fwait cld jrcxz in push mov (bad) je fcomi xchg mov rex.R push cmp (bad) mov or sbb imul popfq (bad) fisubr rex.B icebp fwait or cmpsl test (bad) fwait (bad) push xchg pop (bad) xor retq add fwait jl cmp and rex.RB sbb loope jnp jb push cmp pop (bad) or stos (bad) mov movabs jge pop mov test (bad) test js mov jl sbb movsl (bad) in in mov (bad) fstpt and rorb movsb sti push (bad) pop sub cltd mov rex.WX fnop fwait xchg loope (bad) int add pop in add fwait mov cmp jp int3 or (bad) xor fwait or xchg enterq rex.WRB lods pop jmpq sti js (bad) add (bad) outsb mov stos cltd fwait (bad) int mov sbb lods mov sahf jge int stos add adc sbb add out fwait (bad) and decb callq push jge lahf shlb cs jrcxz sbb add (bad) mov movslq fwait stos mov testl insb fld mov sub cld and push jg insb fs mov cmpb (bad) lret mov sbb cmpsb (bad) add (bad) retq mov (bad) and sbb test test mov mov xchg (bad) fwait movabs (bad) movabs sbb cmpsl iret (bad) cmp insb scas cwtl retq fistl jb fwait add xchg jns xor (bad) (bad) sbb jg nop fwait es cmpsl pushq sahf xor cmp movabs shll add xchg movabs pushq add fstpt es idiv in fwait (bad) adc and mov hlt mov data16 mov xor mov fs fsave cld add mov pop pop and cs fadd movsb rex.RXB cmp sbb add data16 jl sbb or in mov mov idivl (bad) adc repz es cmp imul in fwait xchg lahf ss sti shr es add (bad) cmp rex.WRXB test push std loopne mov or in rex.WXB xchg out pop and xchg sarl je vunpcklps xchg fwait push jnp lahf cwtl mov push hlt (bad) sbb (bad) movsl mov cmp mov retq sub rex.RXB hlt sbb std retq adc mov outsb xor xchg clc (bad) rex.RXB rex.WXB icebp out xchg and mov addr32 and push jb fcmovnu (bad) clc xor (bad) sti mov fsubr fwait cs adc rex.WRB test xchg xor cmpsl (bad) cmp leaveq sbb pop ss cmc mov fwait shrl (bad) (bad) std xchg stos repz mov iret lahf loopne fwait sbb adc adc iret fwait data16 rex.RB repz rex.RXB fist cmp jrcxz (bad) fsubr xchg adc int3 (bad) (bad) mov mov icebp sbb and mov cld rclb cltd (bad) repz rex.WXB fs sar shll lods (bad) (bad) jnp (bad) lock nop fimul or fdivrs sbb push stos ja (bad) popfq pop lods repnz xchg pop add pushfq cmpsb (bad) scas mov xlat xor lret mov (bad) (bad) mov jrcxz jnp cmp pop (bad) pop fidivl add push clc retq (bad) mov mov movsl cmc shrb bndstx mov jo (bad) sub jbe mov rex.RX ja cld neg (bad) scas xchg (bad) rex.RX (bad) pop mov jo pop fcmovnb andb rex.XB retq outsb rex.X adc adc cmc loopne rex.X pop loopne (bad) popfq jnp jmpq pop xor movabs adc mov mov (bad) jl push loope xor xchg fildll jrcxz push movabs push ss cltd js (bad) xor sbb jbe xor mov add mov pop add sbb rcll out (bad) cmp jge mov sbb xor rcll push pushfq push in sbb sbb orb pop push (bad) jge adc lret jle push sbb rex.W sbb push imul mov (bad) sbb fisttpl jae xor movabs loopne (bad) hlt je lahf xor loope xor xchg (bad) jae scas fcmovbe (bad) stos iret sub rclb (bad) imul (bad) (bad) sbb xor fs mov sub jp or out rorl or jg rex.R (bad) mov xchg sbb mov xchg fwait rex.RX out rex.RB shrd (bad) (bad) fwait sub stos sti jb mov cltd mov push push fwait and (bad) movsl (bad) lods sbb jmp cmpsl sbb jnp in and (bad) adc sbb scas or mov test fidivr es in std sub (bad) in (bad) lea (bad) loopne loope rex.WXB sub pop mov pushq rex.WRX sahf (bad) mov loope lods sbb mov callq sub mov repz push mov sbb push iret mov callq (bad) divl rex.WB lea (bad) stc fsts pop pop movsl in fwait mov fwait adc mov rex.WRX and fistp fwait cmpsb xor or adc mov jge pushfq pushfq lret imul in stos repz (bad) hlt sbb xor (bad) jmpq jp (bad) nop push fwait mov test mov addr32 pop decl and (bad) movsl movabs sub enterq (bad) fwait rex imul scas adc in add mov fwait jrcxz clc rex.R rex.WRB fwait rcl sbb and cltd (bad) jrcxz xor movabs mov cs loopne rcll and mov fisub scas sub setnp loop sahf or sbb test pop cmp fimull bnd rex.RX in fwait (bad) sub adcl (bad) jne rex.RXB mov sbb cld jrcxz subl hlt lock rex.WXB mov jnp adc pop (bad) jp ficoml xchg callq (bad) sub sbbb imul (bad) imul jge pop xor enterq (bad) lret sub adc and pop (bad) icebp sbbl scas rex.WRB sbb enterq repnz imul mov sub test cmp lret (bad) and rex.WX je fstpl push int3 addb jae rorl jo fwait addr32 mov (bad) push rex.R fwait (bad) int xlat adc xchg sti (bad) cmp cmp jne and pushq retq fwait jno pop popfq sub sti xchg adc cmp mov jnp jrcxz (bad) popfq sbb outsl fcmovnbe insw jae add sti rex mov in fstps fwait jns (bad) mov fwait (bad) sahf in rex.B (bad) cmp xor push xor (bad) enterq push pop mov fwait shl addr32 vmovups sbb es imul in fwait pop and outsl push jrcxz (bad) fwait cmp rex.WRX sbb (bad) lods sahf jbe jmp jns addr32 sub fwait push xchg popfq add test add insb mov in sbb pop lods imul sti in sbb stos sub mov fcmovne mov xlat (bad) int3 sbb enterq roll and add movabs in mov popfq (bad) imul sarb mov mov sub lods (bad) add xchg (bad) sti callq pop lea sub pop pushq lret (bad) xor rex.WXB lock push mov retq add pushfq sub in adc xchg and add ljmp repz js jnp push push fwait rex.WRXB imul sbb lea out (bad) fwait in sub add sbb xchg jp ds sub xor or rex.WX and sar or cmp pop ds cmp (bad) mov je xchg sub jmpq add mov fisubl jmp out sbb test or rex.WR xchg (bad) mov and push cmp cmp sbb push mov push or xchg mov nop mov (bad) fldcw cmc sbb mov outsb ja jmp fistp sahf adc mov movsb xchg (bad) sub repnz fwait xchg (bad) rex.W (bad) fwait (bad) adc adc fwait add rcrl js (bad) pushq ja jb jmp pop (bad) fwait and mov sub jns mov sbb andl insb shrb rex.RXB rex.WRX and sbb push jle addr32 xor fwait jb or subl lock xlat fwait mov jne sub std outsb fwait push cmpsb (bad) (bad) (bad) (bad) out mov fstps adc insb mov insb sbb mov (bad) or (bad) or (bad) cld sbb jo loop add movabs jmp xor fwait addr32 jbe sbb fwait adc (bad) pushq jae js loop in fst mov movsb (bad) jno and or movslq xchg mov imul lahf movabs xchg jno test and sub movabs mov insb or adc (bad) lret rex.R or sub movabs andl (bad) hlt in sbb fwait sbb (bad) setns mov cmp fwait rorl adc mov fwait rex.WB mov sahf repnz fwait (bad) xchg add jle jno lcall sbb iret imull mov movabs rex.RXB mov (bad) sbb (bad) rcr xchg (bad) and mov jne pushq sbb and (bad) mov cltd lret idivl (bad) fwait mov mov int3 cmp (bad) lret mov gs fs shl jle sbb rex.R pop mov retq mov jge popfq rex.WRB rex.WR (bad) (bad) mov pop sub jae mov leaveq mov (bad) fwait sti sub in retq mov mov and int test scas or (bad) mov es shl rcrb lods mov test shrl (bad) jne rex.RX push lret sbb pushq jrcxz jae xchg mov jns lods lods mov rex.XB and sub adc push movabs jg,pt insl mov xchg movsl stc fwait cltd push (bad) fistpll test in xor mov pop xchg scas (bad) test lods (bad) addb movabs outsb rex.WX xchg negb (bad) sbb fwait (bad) cld (bad) enterq adc and rex pushq mov mov sub sub gs cmp fwait pop (bad) (bad) mov iret push sbb jbe cmpsl mov jmp movslq lahf (bad) jl nop cmp mov rex.RX rex.WXB insb sbb test idiv retq push jrcxz repnz sbb or shr clc movabs rorl fidivr rex.W lea repnz outsl mov mov (bad) and push xor (bad) cmp repz (bad) pop movabs (bad) sbb add popfq sub retq negb push sbb rex.WR jns (bad) cltd xor add add rcr push movsl jl rorb fwait rex.WR (bad) push notl sbb stos gs (bad) xlat (bad) in rcrb rex.RXB (bad) stos retq out pushfq or std movsb jne gs (bad) (bad) mov movabs rex.WRX sub enterq (bad) insb rex.WRXB fildl in (bad) jl test mov and fisttpl xor jo mov (bad) (bad) movsb (bad) mov cwtl (bad) rex.WXB pand hlt lock (bad) mov iret ja ss outsb imul mov mov sub fwait icebp fidivl rex.XB (bad) or add iret fwait and sub fwait mov push (bad) cli cltd cmp test sub jno xchg mov lret mov or mov sbb cmp retq mov jo add popfq xor cmp ds clc mov cmc (bad) (bad) loopne fldl fwait mov mov movabs rolb movabs jno sub xor (bad) test rex.X rex.WX fwait scas jrcxz add sahf (bad) in pmaxsw stos xor pushfq mov mov ds sbb xor popq pop jnp out out (bad) mov and rex.WX (bad) push lods negb cmp jl mov shrb scas or push push pop fs (bad) sbb shr fnstcw jne sbb xor insb test int adc gs sbb decl notl and xchg jmp in loop test jge xor mov in (bad) (bad) (bad) fadd (bad) scas cwtl xor scas pop int lock (bad) xchg rex.RX rex.WB cmp (bad) cs scas stos and cmp fwait data16 pop je mov fwait (bad) loop add mov (bad) fwait js and and cmp insb sbb (bad) scas rex.X (bad) cld (bad) or gs jrcxz and (bad) (bad) pop and pop rex.WX in rex.X rex.XB sarb jne sbb pop (bad) mov scas mov xchg or (bad) cltd xchg (bad) and iret retq pop pop (bad) shlb fstpl imul pop or in xchg fcmovne or xor add pop (bad) jle ja (bad) hlt cli mov movabs test mov or andl sbb lretq clc (bad) fwait js (bad) push stos sbb xor sti rex.WRX mov (bad) (bad) outsl imulb sbb (bad) cmc test adc (bad) (bad) imul fstpt and loop xor mov xor xor xor fildll rex.R fs add jg (bad) xchg (bad) fnstcw push and mov es sbb push xor test xchg mov nop rex.WX (bad) (bad) imul mov xchg add jmp mov std xchg stos add rcrb movabs js add movhps test mov push (bad) in add xor (bad) and rex.RX insl pop (bad) (bad) leaveq sbb cmc sti rcrb sub xchg mov cmp rex.X fild xchg retq test (bad) iret movabs leaveq cmp stc rex.RX scas (bad) jmpq cmpsb es mov fisub sar (bad) cmpsb sahf scas mov xchg nop sbb lods fcompl mov fucomp mov cltd jl retq movsb mov mov mov mov sub test cmc sbb xorb sub jrcxz sbb pop clc ds stos fstpt jns (bad) fbld jle icebp (bad) ds cmp rex.WXB (bad) out push mov sbb push jle sub and sub jrcxz sbbl fbstp adc jbe sbb xchg push and jp stc adc repnz (bad) rcrl (bad) (bad) sub lret rex.WR cmp (bad) sbb xorb test cmp sbb (bad) imul push popfq cmp rex.WRXB or mov ja stos test fwait rex.XB fs mov mov xchg pushfq scas jmp (bad) int icebp rcrb mov fstpt (bad) rex.WB stos (bad) sahf mov movabs jo fwait scas cltq hlt (bad) orl (bad) iret jne xchg sbb mov jbe movsl cmp clc (bad) pushq add xor stc iret lock mov adc xor (bad) mov stos push xchg bswap cld fwait rex.X sbb (bad) (bad) add fwait xor icebp movslq pop mov fwait rex.RX sbb add cltd fbstp xchg movabs xchg xorb shr add cs sbb mov (bad) insb and fildl and fistp rex.WRXB sysexit cltd cmp pop (bad) rex fstpt or add fwait sbb rcl in mov sbbl movsb fistpl rex.W rex.RXB ss roll cmp (bad) (bad) (bad) (bad) sbb jmpq pop mov xchg (bad) push ss fwait rolb (bad) pushq and xchg (bad) push rex.WRB js xchg insb (bad) fildll jbe adc (bad) clc (bad) (bad) pop lret jp jae cmp (bad) fdivl test (bad) pop (bad) xor push push sbb fcmovnb and out jg leaveq push add jmpq lea retq (bad) xchg mov sbb insb mov and mov fsubs mov mov (bad) xor (bad) pop jmpq subl add rex.W fwait test add mov pop xor pop add fwait cmp mov hlt fwait push pushq (bad) sbb (bad) sbb (bad) (bad) in fstpt or (bad) icebp pushfq and ja (bad) lods movabs retq xchg jo fwait enterq sbb mov rex.WRB xor (bad) jp (bad) rcr rex.X mov jo scas mov fs jmp mov and cmc or stos and out cmpsb (bad) in jno cmp jo xor scas in js mov pushq xor in sarb adc rex.WRB (bad) mov pop sub cmpsb rex.R gs add cmc xchg push lods jne rex test fnstenv (bad) xchg andb cli fwait mov int3 or adc rex.XB pushfq jmp test hlt int (bad) xchg push repz pushq xchg rcrl push iret scas rex sbb jmp jmp cmc sbb xchg xchg rex.WB (bad) rcr mov lea fwait popfq lods pop insb (bad) cmp mov rex.WXB nop (bad) loopne outsl pop stc imul rex.WB fwait pop clc sub mov xchg fwait mov xchg cmp movsl sbbl lcall movsb (bad) popfq push sbb stc (bad) lret rex.WR xor lods repnz jnp js cmpsl pop (bad) xchg out rex.RX cmp insb xlat cmpb (bad) xchg (bad) pop sbb outsb cmp lock (bad) mov xor movabs movabs sbb rex.X mov (bad) pop mov or (bad) std (bad) xchg or pop jns add gs jne mov pop hlt push lret pop stos js add pushfq enterq sbb loop and mov push (bad) movslq jge push rex.WRB (bad) xchg xchg test jle pop shr fistp add stos rex.WRX (bad) sbb jrcxz sbb (bad) scas cmp add rex.WRX adc (bad) mov ja cli retq imul (bad) test movabs out xchg (bad) pop (bad) add movsl roll pushq imul pushq jbe rcrl sbb mov (bad) retq (bad) mov pushfq sbb clc mov add rex.WX stos mov (bad) mov data16 (bad) mov retq (bad) or stos mov (bad) xchg jmp mov mov cld xchg jg popfq push adc push adc push add fwait or sbb es cmp and add mov (bad) fwait or rex.WR (bad) out insl fwait xor mov loope fwait vcvtdq2ps sub fildl lods xchg idivb xor or rex.WRB adc (bad) sbb outsb fwait sahf xor in pop insb fmuls mov lods (bad) cltd fwait rex.RX add xor fwait lret jle (bad) movabs pop mov cmp jle xchg lods (bad) leaveq and mov fwait sbb lret mov fsub pushq or (bad) mov imul or jo sti cmp xlat movabs rex.WXB cmpsb xchg sti xlat loopne rcrl jl negl rorl out push rex mov and (bad) jns rcl push fwait ja (bad) test pushfq clc mov mov add rex.WB fwait or std shll in in (bad) or loop movsb and out fwait andl out movabs (bad) or (bad) mov fwait fwait mov push pop lock jrcxz jge adc (bad) cmp jmp push xor sahf sbb nop pushq mov loopne imul xor jns es xorl fwait std xor callq jp adc add fildl stos rcl (bad) cmp jb mov out insl jmpq (bad) movabs (bad) mov lea addr32 test and out mov fcoms adc xchg mov retq (bad) fwait mov push (bad) push mov mov in fld1 (bad) movsl fwait rorb rex.X rex.WRXB adc sti jae sub mov fidivl popfq sub or out (bad) rex nop push out sbb neg mov je cmpsb callq (bad) (bad) jns jmp xorl stos xchg lods cltd (bad) fwait pop rex.X pop pop or push enterq (bad) xorb sbb mov push jl mov addl mov mov testl mov jae rex.WB out rex.RX add clc shll subl mov xor ds out sbb (bad) ja (bad) mov div addl mov rex.WX cld adc rex.X rex.W icebp adc je mov xor sub out fdivs adc lret jae (bad) cli adc (bad) stos sub (bad) cmp jne fisttpl mov movabs (bad) rex.RX fwait xor lret decb (bad) or outsb shr movabs movsb test loopne sbb mov sbb rex.WX (bad) repz fwait xor mov pushfq cs xchg decl sbb pop sbb pop movslq add movsl imul (bad) jb cmp xor lretw sub ja (bad) (bad) xchg mov xor adc mov rex.RX stos retq mov callq xor test mov jl test (bad) (bad) (bad) out jle xor (bad) xlat cmp and pop adc fstpt lret push (bad) xor stos movabs stc (bad) repz test sbb cld test sub fwait cmc mov leaveq jrcxz push iret fwait jle clc adcl sub rex.WRB addr32 mov push and pushq flds cwtl add clc push fldt mov retq pop test movsl (bad) fwait nop xchg retq (bad) lret repnz (bad) (bad) cmp mov and stos add pop movabs in jmp movslq mov movsb xor loop xchg fistpll xchg xor fwait mov jrcxz movabs callq cmpsl fstpt adc cwtl (bad) mov (bad) (bad) mov mov (bad) sub mov lods fldt callq stos cmp enterq ja (bad) xor or xor pop fs rex.W in sbb pop pop (bad) in fwait ss push vcmpsd iret andl adc mov iret sbb out jg data16 repz (bad) (bad) sbb movabs sbb adc lock pop mov in xchg add xlat out movslq or xchg cmp fwait pushfq or sub cmovg (bad) (bad) sahf xor fadd jbe (bad) fwait lods fcmove andl int3 fwait rex.WRXB (bad) jnp pop (bad) adc adc mov xor rex.RXB (bad) xchg and fs (bad) sbb movsb not je mov adc in (bad) fstpt out outsl mov push scas or rex.XB ds (bad) ja je (bad) andl mov divl mov (bad) fisttp jl rex.B pop pop xchg (bad) or cltd adcl pushq (bad) jns sub mov sub xor jo rex.RX rex.XB sbb mov cmp rex.B cmc jmp push (bad) or cli mov fnsave movabs pushq cs xchg insb (bad) cmp and cltd and xchg cli add rcr or rex.WRB rex.RXB mov rex.R scas repnz push sahf rex.WRX fnstsw popfq out jbe cltd stos (bad) rex.WRX rex.X mov mov je mov data16 (bad) movabs rex.WB loopne fsubrs sbb callq cld fwait and adc movabs or mov (bad) pop mov icebp fcmove mov (bad) or jrcxz xor (bad) scas pop jrcxz cmpsb sub cwtl (bad) outsb rex.WRX fstps cli cmp (bad) (bad) fsubrl fldt adc jle fbld movsb rex.W sbb pop stos in scas data16 or rex.WRB and sbb cmc jnp stos int3 mov cmpsl fmull adc sahf lret xchg mov jrcxz xorb add xchg fisttp pushq (bad) sub notb xor sbb ss insl icebp hlt retq (bad) sbb xchg rex.WB (bad) loopne jg sbb push and (bad) jae sub sub scas outsl xchg sbb shrb out stc and fwait or adc adc (bad) add mov cmp mov pop enterq fiadd jmpq rex.RX adc and int adc out rex.WRB pop cmp ljmp sbb js cmp jle rex.WRXB loopne outsl and pushfq (bad) cs es (bad) mov (bad) or xchg xchg push jle,pn push (bad) stc push sbb cmp add mov cmpsl xor fwait or sub retq (bad) fwait jp pushq sbb (bad) mov xor rex push pop rex.WB sbb (bad) insb sahf xchg ja (bad) xchg pop addr32 fiaddl jrcxz sub xchg sahf (bad) mov (bad) or mov mov rcrq mov and sbb fiadd (bad) jrcxz jrcxz pop fwait mov (bad) mov stc in and fwait mov movsl or out jb mov mov sbb cmpsb fwait push rcrb movslq fbstp (bad) xchg jp or sub and movsb fwait (bad) test add rex.X outsl fs (bad) (bad) (bad) subl fwait and pop addl xchg and jge rex.RB jrcxz xor xchg add (bad) (bad) push lahf retq or cwtl cmp rex.WR ja cmp rex.WRXB sbb or sahf add fsubr sub push pop add insb (bad) or (bad) xor fsubrs cmp test jns jle rex.X adc sahf lret add cld (bad) or (bad) add (bad) mov and mov shrl std mov (bad) in callq test rex.RB out imul xor mov cmp pop lret leaveq testb fwait jg fldcw jb rex.WR repz jle push xlat push add cmp mov (bad) scas adc jmp int outsl jo sbb sbb (bad) push mov jg pop sub or loop mov mov xchg andb sub in or mov rex.WRX sbbl jmp jg hlt adc cmp xchg lods test mov push pop lret (bad) (bad) sbb rex.WRX shl mov clc negb cmp (bad) rex.X (bad) add (bad) rolb xor retq (bad) (bad) fwait adc cmp rex.WRX mov sbb (bad) pop (bad) mov jmp scas fwait (bad) (bad) rex.B std add xchg xor (bad) imul lahf sub or rex.WRB fcmovnu sub cltd and rex.WX out loope test fwait (bad) int es jbe sbb push insb divl (bad) cmp mov add rex.RX popfq mov mov lret movabs in jg (bad) xor retq data16 pop (bad) (bad) jp cld movabs xchg mov loopne (bad) adcl loop mov (bad) add imul std jb xchg sub gs stos xor (bad) sbb fwait outsb cmp or sub fisttpll je rorl pop sub sahf (bad) rex.WRXB in clc cmp mov pop out pushfq xor sti pop andl fsubrl (bad) decq out fdivrl add movabs rex.RXB fmulp mov cmp sub jmpq lea pop (bad) movsl (bad) sbb fisttp loop (bad) movabs push rex.WXB jmpq mov movslq lret lret ja or (bad) imul sti pop pushq xor cli mov loope int3 fwait movabs cmpsl jg (bad) jl (bad) or xchg lock pushq sarl movabs movsl sbb (bad) movabs or push cmp sbb jmp testl stos mov pop lods lahf orl outsl jrcxz (bad) fwait mov jb and cmp xchg (bad) mov fwait movabs sti (bad) in adc (bad) or fwait ucomiss xor adc jnp (bad) and sbb in mov cld negl add movabs push (bad) (bad) rex.WRXB mov cmpsb mov push pop stos or movabs stos fcmovu adc repz sbb fwait mov and movabs jnp (bad) fidivrl xchg fwait es rex fwait push (bad) rex.R stos (bad) pop fwait push or inc pushq ficomp pop hlt and sti or (bad) push pop (bad) gs xor jae mov (bad) (bad) fsubrs mov pushq cmp rex.WB (bad) cli movabs rex.WRB and (bad) (bad) cmp add adc and jb rex.WRX movsl js rorl ds cmp pop push jb test mov sub (bad) frstors (bad) fwait push or pop or lret jrcxz sahf sbb callq fwait adc lods cwtl in (bad) (bad) test add rex.WB sbb push pop mov xchg rcrb pop rex.XB out fwait cmpsb jbe xchg rorb jrcxz (bad) or fwait pop stos and jmpq or imul fwait jno lods push (bad) rex.XB fwait xlat adc rex.RX ss iret jae sti jl pushq (bad) mov add data16 fstpl and sahf sub (bad) cwtl mov fwait int adc mov mov cli jnp sub add add push adc sub mov rex.W fs sbb nop jp mov flds (bad) xor ja (bad) addr32 loopne (bad) mov (bad) mov rex.W fwait div adc adc push (bad) imul sar (bad) (bad) fcmovnu (bad) sbb cs movabs lock rex.W es (bad) push scas add fwait sbb xor sbbb fmull cmp movsl int3 mov and jae rex.RX jne push (bad) (bad) insb sbb nop sbb jrcxz mov (bad) rex.WRX sahf xchg push callq rex.X add test int3 rex.WRX rex xchg (bad) mov adc (bad) mov fwait enterq fs ss jrcxz imul sub (bad) rex.R fwait push sbb test insb int3 sbbl and sbb adc lods (bad) or (bad) test push (bad) lahf fwait and mov sahf insb cmp cmc and mov hlt mov or test fwait rclb mov jmp push xchg or mov (bad) rex.RX jg mov xchg fwait add mov pushfq sbb xor jge (bad) cltd lahf test icebp mov rex.R outsl incl cmp sub lods fucom callq or (bad) sahf (bad) add fwait rex.XB clc out iret ficompl (bad) and sub in lret lods sbb rcrl xlat imul pop (bad) rex.WRX (bad) mov fwait sahf faddl sbb rex pop rex.X fxch and fwait rex.WRB push test pop setnp xor jno adc pop mul int scas fwait cli sub adc cmp int3 push xchg cs pop nop and push xor xlat fwait shrl (bad) xchg loopne fwait test (bad) sbb sub (bad) and sbb mov sti rol repz jl fwait sub (bad) imull jns or pushfq xchg popfq outsl (bad) fdivl (bad) (bad) xchg push adc sti loop test mov jle (bad) stos movabs cwtl pop fmuls mov rex.RXB pushq in rex.WR stc mov or ds pushq movslq fsubs mov cld xchg add sti fwait sub nop cltd (bad) jno fwait jrcxz (bad) repz lea mov pop lock jo jnp fist imul pop pushfq push callq xchg cltd popfq rex.WX lods xchg imul push add fcoml cmp (bad) mov jno loope in (bad) xchg rex.B rex.WRX cld movslq (bad) lods mov xor sub cld ficom in cli jrcxz mov ffreep sbb cmpl movslq push (bad) (bad) or sub movabs (bad) cmp rex.R iret gs rex.XB sbb push cwtl pushfq (bad) outsb cmp data16 (bad) cmp (bad) fcmovbe sbb outsw out mov (bad) (bad) mov cld (bad) (bad) jae fs jns sbb (bad) lret fild fwait test idiv add mov int pop fwait (bad) sbb push orb fidivr rex.WRB (bad) sti out push sub mov and sbb mov pop (bad) push or rex.RB rex.WRXB mov fwait nop callq faddl xor fwait cmp loopne insb xchg jno rex.WB test out mov sahf test movabs (bad) mull or test cltd mov rex.WX (bad) fwait mov mov fwait rex.RB add rex.WX fsubrs mov jns rex.WX rex.R repz xchg (bad) add cmpsl add cmp add mov movabs js jmp imul push mov jrcxz loop pushfq or jns jo jb and jg (bad) lock mov movabs mov cltd fildl shrl sbb test iret sbb test out pop or repz xlat mov imul and fisubrl (bad) jle rex.WRX sbb xor popfq pop pop jb lret lret (bad) pushq (bad) xchg mov fisttp (bad) jne xchg (bad) out fwait sbb (bad) or (bad) fwait (bad) or jg sub mov out and sbb movabs or mov in fwait out pop adc (bad) (bad) rex.XB xor repz pushfq pop (bad) roll rex.WRB cltd ds (bad) jnp (bad) xchg test push sbb jno and orl (bad) (bad) mov outsb cmc xchg mov (bad) sbb push adc (bad) cmp push callq loope mov xchg rex.WX fwait in lock (bad) and scas fwait out loope mov (bad) and fwait cmp (bad) cli shrb sbb adc stc iret cmc shll scas add movabs sbb hlt sti retq fwait retq (bad) or cmc int3 (bad) clc cli fisttpl sbb test mov fldt jge ja (bad) (bad) ss mov (bad) fwait testb xor push jle mov fistpl mov add cmp fbld push (bad) data16 sub sti mov push fldl add jmpq xchg movslq js sub sbb jl fwait (bad) mov mov (bad) jp imul sbb (bad) (bad) jns xchg idiv lock sti push sub add mov pushfq add mov rex.WR fdivrs and xchg (bad) popfq push test (bad) test pushfq add sbb movabs pop (bad) fs sbb push or xchg (bad) add ror mov rex.WXB icebp xorb xchg jno (bad) (bad) and mov retq (bad) iret xchg rcll mov sahf test fpatan xor adc mov (bad) jle sbb cmp xor sub sbb adc mov rcrb clc cmp mov sbb mov adc rex.WX es mov fwait lods jo retq mov int3 cmp xchg insb cmp cmpsb nop add and jbe xchg (bad) jrcxz sbb rex.WRXB loop cltd mov jl popfq rex.B shll flds ror (bad) faddl sbb ficom (bad) repnz sub mov cmpsl sahf and mov or jnp pop mov sbb xor cmp push push jle xchg data16 movsw jrcxz mov sbb adcl mov sbb mov leaveq or js jae movabs add (bad) ds rex.WRX cmp jg in push sbb jb pop pop int3 rex.RX and (bad) push rex.R add mov out orl loope fist scas jae out (bad) adc insl sbb rex.RB pop xchg xchg rex.WX pop xchg outsl int lret (bad) loopne pop pop subl adc stos sbb rex.B adc xor mov sbb es pushq sbb and rex.X cmp fwait pushq xlat fistpll mov mov sbb lret pop (bad) fbstp jge movslq hlt callq (bad) (bad) ss rorb mov jbe js mov xchg es outsl (bad) adc adc cmp (bad) jle xchg pop or and rex.XB push cmpsb mov int3 xchg push (bad) rex.RXB cld mov pop sbb xchg or fsubs (bad) or sbb (bad) or cmp addr32 (bad) xor jmpq imul sub (bad) (bad) and es and or (bad) jae movabs (bad) callq xor push (bad) (bad) cld sbb fisub mov test mov mov loop ror sub mov (bad) andl (bad) icebp push cmp jnp ss pushq fstpt and and and fdivs loop mov (bad) andl movabs sbb sti and es add or mov (bad) loop (bad) xor (bad) fwait icebp rcrb adc retq shrl push jae lock retq fistpl iret test (bad) ud1 (bad) add jo jg rex.RB (bad) (bad) pop xor xlat (bad) fistp (bad) int xchg (bad) (bad) movabs es mov jne sub in sbb lahf pop jrcxz nop scas movabs ds fwait (bad) (bad) test or test mov jl or xor (bad) mov repz jo (bad) jmp xchg in fnstcw rex.XB cltd fildl mov cmp xor mov jmpq rex.RXB sbb jo xchg movabs jae test push lahf mov (bad) push mov mov imul lods movabs pushq in stos (bad) out xchg cmpsb push repz sub movabs fwait lahf (bad) hlt (bad) jo (bad) sub (bad) cld fwait mov rex.XB cmp popq xchg add fwait sbb pop adc fwait xor add mov mov pop jnp adc add lods fsubp out jp cmpb in data16 xor ja rex.WX pop jl push jbe pushfq and in (bad) xchg pushq imul fisttpl ja cwtl sbb out fisttpl or fwait (bad) mov rorb xor mov fistl push in rcl fwait loop rex.WRXB pop imul icebp jae fwait mov jrcxz insb fwait add lods rex.RB (bad) push jrcxz (bad) xor (bad) in rex.X (bad) adc sub movabs in add in sahf (bad) (bad) pop sbb ds in (bad) sarb (bad) or rex.XB test and rex.WR (bad) data16 pushfq mov rex.RXB and clc sub cmp outsl (bad) rex.W out ficomp rex.B adc adc ja (bad) pushfq in movabs mov cltd rex.WB sub retq (bad) (bad) mov out scas (bad) mov jb adc rex.B (bad) pop pushq and sub sti cmp jl stc fwait rcrl push insl or lock loopne retq out movslq rex.WRX sarl shl mov and rex.WRB and (bad) int andl jnp imul loope rex.R je jl js jp add rex.X fwait xor or sub js fwait adc rex.XB popfq out adc (bad) mov rex.WRXB pushfq pop sub rex.X bnd imull mov and adcl fldcw fwait rex.R jg jrcxz (bad) push vmovd in jne jmp and fcmovnu (bad) add mov fwait (bad) sbb sub sbb mov andl fwait push xchg or xchg (bad) cmp rex.RX sub ficompl int jrcxz out mov stc fistp mov pushfq sbb fstps cmp repz jb (bad) idivl sbb ja (bad) sbb fistp jmp add sbb addr32 rex.WX std std (bad) leaveq ds rclb cmp movabs mov sbb leaveq pop sbb cmc jno ffreep cli (bad) (bad) sub scas lods cmp mov pop xchg fistp mov rex.WX pop scas (bad) movabs mov fwait xlat hlt in rex.R insb add (bad) rex.WB rex.RXB (bad) and fwait clc and loopne and in mov sbb insb push loop mov xor sub add flds rex.X sub (bad) cmp adc loop clc jbe cwtl fistpll pop fsubp (bad) and and subl in ss rex mov loop rex.RX sbb pop push rorb jb fxch retq imul movslq (bad) jbe jo fnstcw rex.WXB or and mov loopne xchg in mov int3 xchg or scas mov lock div fistpl rex.WX adc movabs out jmp jrcxz movslq xlat loope pop shr lods mov cmc jmpq fmul lods fmull (bad) fs push or push xor cmp (bad) lret jb std gs push callq pop rcrb or stos sbb xchg adc cmp (bad) fisub sbb in out pop cmpsb jle movslq test loope (bad) mov jnp (bad) cld pop or or mov (bad) mov fdivrp rex.WXB jns (bad) mov movabs (bad) imul stc sbb mov xchg fdivrs ja pushq sub nop (bad) mov mov loop movabs callq (bad) or cltd movabs adc jle out and shl (bad) (bad) loop callq jge mov mov addr32 fstpl ficoml xchg lret push fiadd fwait sbb jnp adc gs addb or rex.XB cmp faddl lret and fwait sub rex.WXB mov (bad) mov mov (bad) jmp sbb (bad) xlat lods fildl fwait cmp lret icebp or pop lret mov pushfq nop cmp sub (bad) (bad) fwait lahf sbb xor callq (bad) in movabs or mov pop (bad) rcl (bad) add adc (bad) retq pop xchg (bad) and pop scas mov adc sbb ljmp xor retq in rex.RXB rex and (bad) fdivrs sbb pop push lret sbbl in rex.WR test and stos push cmp adcb fwait cmpsb xor mov stos (bad) xchg cmpsl cmp pop pushq jg pushfq mov mov pop test xchg cmp pop sub sbb pop fwait outsb loope pop cld or iret cltd repz mov rcrl lods movslq sub sub mov lahf js ds sbb add xchg test (bad) sub xor fwait xor (bad) add (bad) lock jne sahf and mov xor cwtl jmpq sahf sub mov (bad) push push mov (bad) (bad) rex.WX fwait test pop (bad) in mov jo add (bad) cmp fwait in or insl (bad) (bad) iret lods fwait or and xchg jrcxz fwait stc (bad) lods in nop (bad) callq insl sub test mov fldt push sbb ja mov outsl shrb xchg (bad) rex.WRXB adc jnp cltd mov push xor cmp punpckhdq popfq push out xor (bad) or mov stos jrcxz fdivrl pop lret xchg mov mov pop fwait cmpsb cli pop push sbb (bad) in sbb imul pop ds js gs or jo xor pop negl rolb cmp cld sbb icebp fwait xchg adc movsl je out xor xor pushfq in rex.RXB repnz movabs push fcompl mov sahf fwait (bad) mov jl iret cld fwait in cwtl add sbb (bad) jrcxz retq jno push push mov movabs cmp in fwait add mov xchg fadds and jg fwait loopne mov repz (bad) negb lret clc rex.XB fs mov fnsave mov lea fisttp cmp sbb fwait (bad) mul in and insl mov fistp cmpsb cmpsl sbb lods fwait (bad) fidivrl movabs or sbb pop (bad) (bad) adc xor cs stos fwait jle mov addr32 shl fdivr es fimul pop mov rex.RX rex.XB jne jbe outsl fwait (bad) leaveq imull fwait (bad) sub ja movsb adc stos or xchg addl fwait clc lods data16 (bad) pop pushq mov adc push and loopne sbb add jmpq push sbb pushq ficom xchg jl pop rex.WX add rcll nop fild xor adc (bad) or jo sbb pop movsl mov cmova mov xor (bad) sbb sbb cmp movsb pushq shlb cli outsb (bad) out sbb addb cmp int jne pop sti (bad) xor sti mov negl fwait (bad) push ss movsb rex.WRB lahf lods xchg rcrl adc (bad) rex.W stc out rex.WB (bad) mov and imul and ja retq push xor mov mov sti xor add sbb out test incl fstpt mov sbb rex.X and xchg (bad) push adc mov fs add rex.RXB outsl push jl stos (bad) incl sbb retq (bad) (bad) mov mov leaveq imul mov and lea pushfq jb in xchg pop fwait push stos outsl rex.WRB lock (bad) (bad) (bad) ja rex.WRX repz out out add fcompl push jrcxz mov sbb lret or (bad) (bad) ficompl (bad) (bad) jmp sbb data16 repz and pushq (bad) xor leaveq push insl mov movslq (bad) ss rex.RXB (bad) repz add cmp data16 fwait (bad) repnz rex.WXB js (bad) pushq (bad) add add xor xchg sub (bad) and fwait test cmp and sbb mov fwait loope mov in (bad) sub lods mov retq rex.WRB rex.RX mov rex xchg sbb icebp xor lods fsts xor scas jmp retq sub sub add leaveq push (bad) movabs adc test mov xor pop lea and (bad) stos subl xchg ror mov rex.RX imull (bad) cmp xchg xchg cmpxchg fwait xor popfq or imul (bad) es fwait (bad) std in iret mov out sti cmpsb jmpq fwait mov rex.WRX push lahf ja lods push push (bad) (bad) cmp fistpl fsubl and (bad) xchg popfq push (bad) cmp xchg rex.RB xchg orl stos jns retq xlat sbb movabs (bad) xchg movabs stos sbb push loop add mov in adc and (bad) sti in pop mov fildl or lock jns xor fwait sbb mov rex bnd xchg (bad) hlt mov jne,pt callq cmp xchg (bad) fistp movnti add and pop icebp rex.WR clc fldl lods (bad) xchg add and rcr xor sbb mov xor and (bad) (bad) cltd nop or (bad) rex.RX sub mov sub rolb and cmp mov cmpsb jp fwait adc cltd adc xchg (bad) cmc mov fwait scas xor push fwait sub pop lret cmp add roll (bad) mov test fild retq sbb pop divb pushfq mov mov cmpsl sahf sub rex.W movabs fnsave cmp mov fild jns nop cmpsb fcoml nop adc repz mov fistpl rex.RX (bad) cmpb js xor sbb xor push push out cmpsb in sub leaveq imul fcmovnbe push (bad) pop icebp idiv (bad) and xchg xchg (bad) rex.WX adc xor cmp loope jne add pushq (bad) imul retq test movslq movabs jp cmpsb xchg rex.RX sbb pushq outsl xchg add lods (bad) test adc std (bad) adcl sbb mov xor retq xchg (bad) fwait leaveq mov pushq jge insb retq std xchg neg lret (bad) sbb (bad) loop imul fs int3 xor and (bad) movabs in lods mov (bad) push xchg out jge mov rex.WRX orb sbb (bad) fistl jge (bad) (bad) sbb in repz mov xor popfq lret inc xlat sub sti gs jp in (bad) and adc sbb mov mov (bad) test repz xor negb jrcxz retq mov pop jmp push (bad) adc sub sbb push xlat icebp sarl sahf lret sub and rex.WX cmp (bad) scas pushq fcoms jns ss ficomp enterq rex.WXB rex.X je pushfq pop (bad) pop mov or cmpsl rex.WR outsb push cld and jp and adc rex.B rex.WRB mov mov pushq add hlt jno mov repnz mov (bad) (bad) mov xor enterq mov movb (bad) movsl pushq sbb (bad) js cmp mov movabs mov test cmp xor mov add sbb jo movabs cmp imul add cmp sbb lea (bad) sbb mov clc mov rcrl or push sub pop fildl movsl push adcl out iret xor push push mov or fwait callq pop pop or jmpq addr32 sbb rex.X mov rex.WRXB (bad) pushfq (bad) pop cmpsl jrcxz jnp pop addr32 sub scas pop cmp xor rex.WRB pushq (bad) rex.R cmpsb (bad) pushfq (bad) pushq adc sbb fbstp rex.X incl or enterq pop cmc mov loopne sub (bad) in lret sub jmpq (bad) xchg pop (bad) mov ror push add adc mov lret cmp ds pushq jno out (bad) (bad) sbb retq rex.WRB fistpll cli pop in repnz pop movabs mov jnp cs (bad) cmp negl rex.WX jge jmp xchg data16 out callq jae in xchg insl in sub in int imul sti sbb sti push loopne (bad) (bad) push mov xor pop fistl xchg cltd fwait out (bad) push and rcrl cmp xor (bad) comiss retq jbe (bad) sub sbb or in hlt (bad) cld rex.WR (bad) push add xchg out (bad) mov (bad) pop xor xchg (bad) addr32 ficompl (bad) mov sbbl rex.WXB shlb sub stos rex.X jne std fwait sub pushq cmpl cwtl rex.RX fwait test adc (bad) lea (bad) xorl loop stos mov lret push and mov rex.XB sarl sbb mov mov test cwtl lods popfq adcl xchg xchg (bad) cs (bad) je (bad) (bad) (bad) xor ss mov rex.RB mov pop adc jmp push cli jg (bad) xchg (bad) rex.WRB xchg push add imul xchg ds xchg sub sub decb loope (bad) push (bad) cltd jns lret sub (bad) xchg sarq je jmpq rex.WB fs jle mov mov and std sbb sbb imul fwait (bad) pop cltd pop scas rolw cmpsl or pop xor (bad) (bad) jne adc adc fxch push sbb pushfq out pop int movsb stc fildl sub (bad) jno movsb push nop pop add sbb and mov xor (bad) push mov rex.RXB xor and retq pop jp jrcxz repz (bad) (bad) adc xor retq fbstp (bad) in mov mov fldt sbb retq add icebp scas rex.R sbb shrd rex.RXB pushfq jno lret rcrl fmuls (bad) pushq out xchg fninit xor insb loop xlat (bad) movsl (bad) (bad) retq rex.RXB fs cwtl rex.WRX scas popfq fsts add add movslq iret fnstcw rex.RB addr32 and (bad) pop (bad) adc pop repz jmpq jne loope jmp fdivs push or sub sbb mov and mov xor mov sub and xor idiv cld sbb mov fs rex.WXB lods pushfq mov push movabs pushq or imul retq jns pushq cltd retq mov mov scas fs in (bad) xchg sbbl push rex.W popfq incb popfq mov retq add (bad) sbb in mov imul out fcmovbe mov (bad) xchg sub (bad) pop clc add (bad) stos pushq fsubs test pop movabs test adc (bad) xor xor movsb femms cmpsb fwait cmpsl jae fdiv mov mov popfq adc enterq out sbb cmp jle icebp hlt imul data16 or sub jmp jbe push pushfq rolb sti imul sbb movsl sbb jbe jmp rcrl (bad) xchg cmp mov repz (bad) push loopne xchg xor retq cli outsb add (bad) mov xlat lahf jle (bad) hlt incb mov loop fildl fwait in adc icebp cli and lret in ss fwait cmp es movabs stc (bad) sbb (bad) cs pop mov lods sbb sbb (bad) mov cld sub subl and pop in fwait ds out sbb or and (bad) push stos (bad) stc fildll retq fwait ja cmpsb mov adc (bad) fwait pushfq stc in mov jg je cltd fldl insl inc push scas cmp sti jno mov (bad) fsubs add adc jp cwtl jnp out imul add mov rorb pop leaveq fwait (bad) mov mov lahf rex.RX rex.WR sub clc cmc std jae xchg addr32 adc mov pop ja xchg sahf out rex.WX mov (bad) xchg je iret fwait movslq rex.XB shr jb jns rex.WRXB data16 or sbb movabs shl sbb loopne pop scas imul sbb fsubp ror loop callq add fwait (bad) (bad) cmp xchg pop fild ja hlt lock push pop pop push cmpsb jae jns (bad) or mov (bad) sbb (bad) repnz (bad) outsb lods (bad) iret stc xor movsl mov sbb outsb push insl (bad) int sbb addl (bad) test sbb (bad) out pushq in pop lock int3 fwait sbb cmpl movabs hlt xor add pushq (bad) dec jbe rex.RXB jbe add cltd rex.RX fldt pcmpgtb cmpl loopl scas sbb (bad) data16 imul mov test in mov rex.WR sub pop insl cmpsl in repz pushq clc (bad) mov scas mov sti out (bad) ja (bad) rex.WX xor cwtl pop adc andl push outsl popfq out js jno out fxch xchg movsl push xlat fwait xor fsubrl fwait lret cwtl mov cli sbb add sbb lock mov jmp in fwait mov movabs (bad) outsl in (bad) fstl fdivs lahf mov rex.WRX pop jbe adc or (bad) add cmp and mov lret mov pop rex.XB hlt fwait movsb int3 testb jno movabs mov sbb xchg mov mov xchg rex.WR std mov mov (bad) cmp out or fcoml fwait pushfq sub outsb add test rex.W iret jbe insb fwait adc js xchg push rol pop mov cs xchg imul pop and xchg rex.WRX rex.RB add movsb (bad) (bad) cmc mov enterq adc jnp cld rex.RXB or enterq movabs scas xor sub cmp fwait (bad) movsb or pop int (bad) callq push (bad) (bad) push rex.WR rex.WX cld mov fmul (bad) mov retq or cltd sub sbb (bad) xlat sbb jrcxz and sbb repz cmp test shrb out mov and sub (bad) (bad) mov and rex.WB cmpsb test (bad) rex.WX movabs rex.WR orl pop (bad) or mov mov (bad) mov mov sbb mov mov xchg fldt adc (bad) rcrl jbe xchg cld retq add scas xchg or loopne rex.WRB hlt movabs fs pushq (bad) cmp push mov adc sbb andl rex.XB es (bad) xchg mov jae stos addr32 adc int3 rex.RB mov jp out mov push loop std (bad) sub lret add add mov rcrb xchg jp mov (bad) movabs out int pop fmuls xor jmp (bad) mov in movslq adc xchg jo cmp cli mov xchg sbb and mov mov cmp cmc sub jmp pushq xchg or adc mov je hlt retq pushq clc ja mov (bad) outsl callq sbb xor mov adc callq fisttp retq sbb lret rex.WXB repnz js rex.WRX xchg sbb loop xor (bad) in mov (bad) pushq movslq (bad) fwait rex.RB cmp mov xor div enterq (bad) add cmp xchg (bad) rex.WX frstor icebp stos pop jge adc mov rex.X fwait mov (bad) iret out hlt movsb leaveq fwait (bad) or push sub push fwait in std rex.R jno adc push add cwtl and sbb scas movabs (bad) sub adc popfq sbb gs push ja mov cmp retq lea pop fwait cli pushfq jle sbb rex.RB scas fwait pop subl fwait jle jp rex.WB (bad) stc popfq (bad) (bad) movsb jg sub retq out clc rcrl mov sub sbb or sbb lret gs lret shr mov (bad) cli sbb mov (bad) out rex.WRB push addl (bad) jnp in fisttpl jle out rcrl ror mov movabs or (bad) mov fwait pop push xor in mov sub sub shr jb stos in jb (bad) xchg insb cmp mov jne addr32 sbb mov jge rex.RXB ficoml mov rex.WRXB cmp imul fwait adc sahf or cmp cmp rex pushq mov test popq sbb fstps sub and in rex.W lock fwait xchg roll lret mov rex.RX stos mov jae mov enterq mov (bad) sub rex.WRX fwait add adc gs fwait loop jns rex.XB adc sbb mov sbb fcmovb rex.WR add divl (bad) and mov out mov xor xor (bad) addr32 jo lahf nop (bad) (bad) mov xchg fcompl mov loop (bad) nop (bad) rex.W retq repz push add (bad) fwait push cmc ds repz add sbb mov movsb data16 lahf imul out lret pop cltd clc or fwait mov and mov fistpll mov sbb (bad) xor fsubrs and add fisttp fwait ss xchg jno jl adc pushq mov stc loop fwait ja (bad) icebp mov repz movabs (bad) imull test movsb or and setnp add rex.R icebp insb xchg add (bad) pushq ss imul xor mov (bad) xor ss adc stos (bad) jp (bad) (bad) (bad) pop sbb fwait add sub rex.WR (bad) nop cmp push ficomp mov pushq ja scas retq xor jae xor fwait lods enterq pop mov pushq and mov and mov push push jge or rex.WR clc (bad) and pop cmp rex.RB fistpl rex.WX cmp data16 mov add sbb rex.WRB push mov fldt fistl (bad) pushfq js pop pop xlat callq add xchg pushq add rex.WXB rex.WR cmc rcrb (bad) out add movsl pop adc sub clc rcrb adc fildl (bad) js mov adc ss pushfq (bad) out (bad) loope adc jle jne cmp fbld xchg rex.W cli (bad) movslq push imul retq pop adc insb fdivs xchg rex.WRX jmpq xchg es imul (bad) mov (bad) xor adc out push cmp mov setg movl rex cmpsb (bad) (bad) (bad) adc jle shll jnp cld rex.XB fs sahf (bad) fstps push sti fucom jb mov mov xchg mov rcrb idivl rex.WRB adc jmpq rex.W (bad) rex.W jge cld (bad) out (bad) fucomi xlat je iret xchg jl jbe add mov cmc lret scas jle loope rex.RX (bad) scas pop divl out movabs pushq sub mov loope sub mov fcompl mov xchg xchg xlat pop lods adc fidivl jrcxz callq iret xchg mov sarl push int3 stos pushfq movl jb cmp in rex cmp rex.XB mov adc (bad) test movabs clc hlt movsb cmp movabs lret mov in in cmp sahf (bad) (bad) shll push push fs (bad) loopne mov repz decl (bad) loop fbld js sti sbb or popfq (bad) (bad) leaveq test mov sbb pop cmp out add fiadd insb pushq in or adc push mov cmp movabs retq ja adc cld push xor xlat retq test (bad) (bad) push popfq jmpq mov (bad) fsubrl (bad) cli add in (bad) stos mov movsb mov xchg cmp push mov pop mov movabs cld cmp out leaveq addr32 sahf xor out cmp or (bad) callq movabs (bad) add cltd (bad) insl loopne fisttpl mov (bad) rex.WRX add (bad) insl pop cli (bad) add test mov ficoml fsubrl adc jb stos jmpq rex.WX cld movabs rex.RB pop fdivr in loope hlt jnp out movslq int lock rex.WRB js sti popfq sbb (bad) pushq divl adc out mov sbb rex.WRB xchg push cmpsl (bad) xor xlat int imul (bad) xchg fwait push xchg jl pushq adc (bad) sbb lods sbb or rex.XB push movsb jb in sar imull scas cmpsl lret mov iret test or out (bad) or cmpsl adc adc out movsb fwait jmp rex.X sbb movsb cltd push fs xor rex.XB mov (bad) mov rex.WX addr32 shr (bad) and rex.WR jg shr lods xchg xchg rex.XB cmp (bad) pop pop gs (bad) (bad) jmp sbb jb out imull cmpsl outsb (bad) xor rex.WB mov std xchg pop sbb loope adc pushq and (bad) jae fcmovnb mov rex.WRX (bad) fist imul test mov out stos in (bad) (bad) (bad) mov std repnz (bad) mov (bad) or in jb ss insl movabs cmp stc add xchg (bad) insb shlb rex.X xchg xchg add mov rex.RXB or stos movabs cmp (bad) jne imul xor imul xchg pop lock xlat ja mov gs sub and rolb fidivr push rex.WB je ror mov jb (bad) sbb rex.WRB mov sbb mov sub retq (bad) fdivrs (bad) rcll fcomi cmp (bad) cmp repz xor (bad) loopne (bad) (bad) div xchg fucomp ss test add mov or out fcmovb and ffree rex.X push mov cmp cwtl pushq rcll (bad) xchg leaveq mov sahf fistl sub xor (bad) jl movsl mov jb (bad) sbb icebp adc repz stos rex.RX (bad) cmpsl in shrl rex.WR sbb (bad) jmpq rex.X scas (bad) xchg insl xorl iret xchg rex.XB or (bad) cmp jrcxz (bad) xchg cmc add sub fcomps mov xor sbb or rcll negl rex.XB rex.WRB xchg xor leaveq rclb retq xchg mov sub maskmovq negl xor mov mov std mov mov movslq out fcompl sub sbb leaveq (bad) lock xor pop or mov mov rcll stos scas add (bad) insb rex.R mov mov movabs jle jg sbb pop adc mov pop fldt sbb sub out es (bad) (bad) mov (bad) jns jnp loopne ficom lock mov adc mov imul jmpq cld xchg cmp cmp movabs cmc loop scas (bad) lret mov sub xor (bad) stc gs xchg push es mov jb rex.RXB (bad) adc fwait (bad) and iret jo xchg or pop fwait xor cwtl lret jnp lret mov mov rex.RXB lret sub rex.WR icebp pop cli sbb adc pop scas mov shl ficomp mov jmp fcomi jno out cmpsb push sbb jge adc mov std rex.WRXB fwait cmp retq (bad) jbe fwait pushfq rex.WX imul pushq cmp sbb lea lret (bad) sahf push xchg rex.X rex.WRX mov adc jb retq sbb rex.RX es icebp xchg sub jmp repnz loopne stos fild out lock push sbb rex.R fstl popfq mov add rex.RX fwait ds xchg es (bad) add adc (bad) (bad) lahf mov scas or (bad) mov lret rex.W sbb and loop fwait cmp int movabs sti fwait jo rex.XB (bad) mov repz sti add fistp sti add (bad) fwait and (bad) lret retq callq data16 mov mov (bad) fwait std fimul mov mov fldl in movabs sbb add rex.RXB jmpq xchg rex.X movabs pushfq push (bad) or jne insl xchg iret lods fwait nop (bad) cs imul xor push adcl jns fwait in cmp rex.B lock mov jl (bad) (bad) pushfq ja rex.WX fnstsw repnz adc xor pop lods xchg fmull cli jge pop mov movsb jb outsl sub mov rcrb shl mov fwait gs repz nop sbbl mov mov enterq mov (bad) fwait push add rex.RX rex.WRB fwait mov shrb fsubs push mov mov adc (bad) jb loopne (bad) rex.WR out push pop mov mov gs fwait sub lods xor mov sub fwait or mov test mov (bad) (bad) cmp in (bad) pop push mov jb mov orl sbb add mov repz ds mov (bad) lahf pop fwait sbb xor and add jnp jbe mov sti xchg add fisubrl mov push xchg jmp fildl pushfq jbe or cmp or mov mov mov or sbb movabs in repz fstpl loope push lret (bad) xchg xor insl movsl cmpl or (bad) jb stc lahf cli sti or scas and mov (bad) fwait push xor rex.WRX rex.RX fwait xchg icebp pop ja insb add fwait adc bnd push fwait jae push cli mov (bad) mov popfq or push sti addl sub xchg (bad) movsb test or lea xor icebp in sbb movabs int3 and xlat subl adc push es jbe rcrl mov xchg xchg fdivs (bad) rorb pop movabs sti push and fwait jno push imul fwait xchg add and je rex.RXB fwait xor xchg stos sbb insb imul rex.WXB scas ja fisttpl xor xchg adc or xchg jb sbb scas pop (bad) xor cmp or push retq iret (bad) and in mov (bad) lea repnz fwait sti (bad) sub lret fs fwait lock and xchg pushfq xchg add mov sub jmp (bad) iret add jle outsb pop (bad) mov push fldl rex.WRB xlat xor sti cli fistl (bad) adc xor cmp out fwait mull mov fnop pushq (bad) mov sub std out fwait popfq loop sti mov (bad) xor xchg fwait test cs fdiv pushq sbb imul push fistp adcl repnz and rcrl (bad) test (bad) int3 int out xchg cmp sbb sti fsub fs fwait (bad) xchg push add xor sbb loope movabs orl (bad) sti rex mov sahf and sbb enterq insl rcrb mov (bad) ds mov fs icebp xchg rcrb shll out movsb or in sbb mov push (bad) imull jmp idiv repz fwait push out data16 ss movabs jmp xchg add (bad) jno push or fsubrp insb leaveq movd movabs fwait lods (bad) out sbb fs in add pushq test or (bad) jo fwait push xor mov mov imul xor iret sub mov sbb loopne lea addr32 cltd (bad) mov fwait (bad) es sti cvtdq2ps lea or push mov je (bad) fisttpl xchg mov in rex.X mov nop lea fwait andnps pop jno sbb ss jmpq rex.WRB test lods popfq outsb pop fwait sub iret sahf xchg sbb push (bad) pushq adc adc (bad) faddl rex.B xchg rcrb ss xor (bad) stos rcr cmp cmp mov sbbl loope push sti and rex.RB cmp jb rolb jmpq sbb rex.WB loope push callq rex.B (bad) shl (bad) lea rex.WX xchg pushq sbb cs repz (bad) sbb (bad) adc sbb mov cwtl or stc rex.WB push mov rex.RXB fild rex.WB (bad) xchg rex.B movabs sub jbe rex.XB loope in rex.RB (bad) or cmp and or movabs (bad) xor fmull jge (bad) imull sar or movabs cmp mov pushfq jl jnp fnstenv shll jne rex.WRB push push (bad) mov notl cmp fldcw test pop jo cltd sbb rorb (bad) rex.WRXB push mov retq rorl in (bad) imul test (bad) leaveq or clc lea fwait rex.WXB lods adc pop fcompl push sahf xlat int3 (bad) (bad) adcb xchg rorb (bad) xchg test xchg fistpl gs xlat mov mov test or callq sbbl sbb sbb test movsb fwait or shufps rex.B (bad) jrcxz and popfq rcrb enterq rex sbb jmp xor xchg sub (bad) xor rex.WXB jb nop out (bad) std fwait cmc mov mov (bad) adc retq mov rex.X xor cs fwait jno adc rex.RXB retq iret xchg jge lock outsl add addr32 test test (bad) (bad) push scas push (bad) gs add in sbb stos mov fwait mov (bad) xlat xchg rex.WRB pop movsb stos movabs adc sbb xor lret stos (bad) (bad) cld xchg fwait (bad) xor loope pop push fwait or stos mov add (bad) fwait (bad) jno cmp loop fcomi cs lahf fmulp loop repnz xchg fldenv xor cmp adc adc or gs rex.X movsl fstpl or movslq imul add or mov lret jmp rex.R or (bad) out and fwait pop or rclb in movabs fsubrp or (bad) movabs sti push (bad) nop (bad) in fwait std mov (bad) add adc push loope fwait ss scas gs lock mov incl orb rex.X mulb adc leaveq cmpl mov rex.RX lock cmp xor add and rex.XB lock xchg mov sub mov lret rex.R adc add fisttpl outsb (bad) or sbb jge mov adc rex.RXB movabs rex.XB xchg (bad) mov enterq sbb (bad) mov cmp negb popfq (bad) imul fwait int pushq push mov jo jmpq sub repnz out xchg (bad) jns pushq test jbe movsb push mov sbbb hlt mov (bad) stc mov in fwait leaveq adc fisttpll outsb and rex.WX fwait (bad) add (bad) hlt cmp imul jrcxz fwait jo or adc in (bad) fwait lock fcomps (bad) retq insl xchg jmp rex.X fwait sbb rex.W (bad) lea ss (bad) mov adc flds push rex.RXB data16 (bad) enterq (bad) sbb stos pop scas pushfq rex.WRXB mov popfq pop sub fcomi jrcxz leaveq xchg pushq xor popfq jbe jmpq jne rex.WR pushq add flds xor mov scas xchg mov std sub in rex.RXB jb rex.X sbb pop (bad) jns out pop and out (bad) and pop andl mov sub mul loop or frstor rex.XB rex.WRX jle fs loopne xchg in imul stc loopne pop xchg sbb xchg fcmovnb mov scas stos out fidiv rex.RB pushfq lret rex.WRB ds pushq out push enterq (bad) or lahf (bad) rex.WR push scas divl mov clc add push pop jmpq jbe movlps add jmp (bad) pushw movabs imul sbb (bad) rex.X mov and testl jnp je pop sbb (bad) xor (bad) xchg (bad) rex.WR rex in pop xlat fwait jrcxz stc (bad) add (bad) int3 (bad) (bad) fwait push rex.RX int cli jmp fwait lea add sbb rex.RB fucomi jrcxz loop lods fwait (bad) fsubrl (bad) xchg xor fwait shr and adc xchg jae movsb mov xchg cmpsb (bad) (bad) xchg shrl cmpb rol (bad) je rex.R xor pushq pushfq fwait outsb test movabs sub mov xchg adc mov pop sbb mov xchg fldenv cmp add (bad) (bad) adc (bad) fldt jbe sbb std cs or sub shr cli fwait xor data16 mov sub (bad) rex.WRX jle icebp (bad) xchg mov rcrb adc pushfq mov stos in (bad) stos lock rolb jae fstl add cs rex.RX (bad) push icebp and decb stos and xchg xchg push rex.WXB or movabs ss mov mov imul pop adc adc xchg adc retq (bad) jae (bad) adc add and sub add mov jrcxz cmp mov rol sahf mov (bad) push popfq jmpq test nop mov scas fwait push out mov fwait cmp rex.WR loopne fwait callq adc out pushfw (bad) nop mov pop cltd callq fwait mov jmp fsubrp rcrl (bad) xchg (bad) lret mov enterq (bad) xchg ror out pop and movabs rex.WRB imul in shrl rex rex.WX movabs ficomp fcmovnu xchg (bad) (bad) jmp pop jno (bad) mov jmpq fwait (bad) shrl lret or (bad) (bad) lret (bad) xchg rcrb nop rex.RB cld pop jae sbb data16 adc jmp lods (bad) jo fwait (bad) rex.XB adc add fwait movsl pop cmc xlat ror (bad) mov jno mov callq add xchg sbbl fwait rex.X mov fwait lods push retq pop (bad) rex.B adc psrad xor (bad) sbb scas jbe mov lret jnp movabs loope and cmp movabs (bad) lock out jmpq icebp fbld loope rcrb rex.WRXB or int in faddl sarb ja (bad) pop outsl pushfq xchg mov (bad) lods hlt add (bad) fstps pushq out sub stos or mov xchg movsl fdivrl pop (bad) test lea mov hlt cmpsl shl fisubr mov pop (bad) add in in or xor (bad) xchg adc (bad) rex je movabs jp sub cmp addl movsb mov sub cmp sbb bnd callq icebp std faddp (bad) in (bad) loope sub movsb stos mov sub (bad) or or xchg mov scas xchg adc or add mov pop fildll cld push sbb (bad) (bad) (bad) imul rex.WR lock pushq lret movsb rex.RX lea sahf retq data16 sti (bad) fwait adc cmpsl fwait mov (bad) test mov loope es imul fwait rex.WB xor cmpsb out fwait pushq mov fwait adc sahf (bad) mov stos in sbb callq cmc sbb (bad) cmpsl out fneni(8087 or sbb mov cmp push mov (bad) adc sbb fwait mov (bad) (bad) ficompl (bad) roll cmc pop fwait or retq hlt loop add rex.WRXB fidivr movabs pop cmp fcmovnu xorb (bad) rex.WX rcll adc (bad) insb ds cmp lods pushq fwait test movabs jae jns stos fwait sbb (bad) rex.WRXB or xor mov rcrl (bad) je rex.WR fwait sbb cmp repnz adcb mov lret fildll cli and mov rex.WB (bad) stos mov xor fwait outsl icebp xchg repz fbstp callq xchg sbb sbb and rex.WX add pushfq insb sub fdivrl in xchg fxch xlat shrb rcll cmp sbb (bad) sub xor mov (bad) (bad) movsl cli mov mov (bad) adc xor pushfq pop cmpsb imul pop ja jb or mov (bad) fidivl (bad) jmp mov mov pop je (bad) ror icebp scas (bad) rex.WR xor imul fwait push data16 add sub scas pushq mov test adc retq push enterq stc jg add ja and (bad) push lods fwait mov stos add jmpq and loop mov rex.WX (bad) cmc in (bad) lret fwait (bad) lods callq mov in movabs sahf (bad) lods jl jmp jb xchg insb imul sub mov (bad) rex test mov nopl stos cli mov cmp push (bad) fisttpl rex.R pop sbb xchg movabs rex.W cmpsb popfq mov add sbb fwait mov (bad) rex.WR ds callq mov rex.RB sub shlb xor (bad) push push adc cld (bad) (bad) add ja jmp movabs cmc fwait (bad) push (bad) je iret clc enterq pop stos testb fstps (bad) movsb (bad) and xchg lea in fwait gs or lret rex.X mov sub mov mov add fwait and gs mov retq cs sti callq or add pop (bad) stos cmp cmc mov fwait cmp pop cmp fcompl out (bad) xor add fcomi pop retq xchg insb (bad) rex.RB xchg lahf fidivr popfq rex.WXB lods cltd (bad) movabs (bad) movsl mov int loop (bad) (bad) (bad) jne cltd rex.WB xchg cli (bad) adc out (bad) movabs (bad) or setnp (bad) outsl push (bad) push fwait jge adc sbbb jg movabs ss (bad) jnp (bad) insb (bad) cmpsb rex.WRXB ds fwait out sbb retq jno insb fwait adc jb lret sbb jrcxz out idivl mov adc stos test pop loope xchg (bad) hlt mov (bad) out add xchg movslq mov outsl or ficom fwait xor mov idiv (bad) jae in push fwait outsl loope sarb (bad) sbb mov cmp movsb rex.RX mov (bad) stos or push xchg rex.WX adc fwait mov push (bad) mov rex.RXB sbb insb out (bad) mov adc mov cmp sbb (bad) adc sbb jle out (bad) je jrcxz or xchg and pop rex.WRX insb (bad) cltd push rex.WRXB cmp outsb fwait rex.RXB mov jle (bad) cmp lods lock sbb imul hlt rex.X xlat sbb retq fimul fwait iret rclb fwait add loope pop clc cltd pop in fcmovb add (bad) (bad) jle stos cwtl fisttpl xchg pushfq mov mov cmp outsl (bad) adc (bad) jnp mov in cltd mov (bad) mov xchg rex.WRXB jnp rex.R addr32 test xor lahf popfq mov je sbbb push hlt xchg mov in mov mov fs push scas jp rcll xor sbb fistpl pop (bad) sbb (bad) hlt (bad) movslq (bad) jb rex.WX (bad) mov (bad) (bad) pop push popfq add stos mov repnz rex.XB pop mov mov xchg cmp sbb jp retq popfq fs (bad) lret data16 jbe retq cmovle rex.RB hlt xchg jbe lods rex.RX sbb jo xor loope xchg pushfq and fstps (bad) jne push push xor xor rex.RX jle leaveq retq adc lock rex sbb es add adc rex.WX sbb movslq jns xchg cltd rex.RB fistpl add or andb fldt cwtl (bad) jae movsb sbb (bad) add and sbb fwait iret rex.RX ficoml callq retq push mov push repz out rex.B mov outsl jne (bad) (bad) xchg neg clc sbb in jmp add insl add icebp fildl xchg sub jb repz or adc pop xchg adcl (bad) xchg (bad) rex.W fidiv repnz pop pop mov scas fwait xor (bad) or jg add sbb adc mov (bad) cmp jp (bad) fwait (bad) push or fwait jl (bad) jo jp (bad) fwait xor adc ss (bad) lahf fucomi cmp mov stos rcrl (bad) retq pushfq jae jrcxz pop out es push enterq insb cmp retq callq xor jbe and jge rex.XB mov sub fwait push retq imul push sbb pushq xlat movabs shrb sbb sbb sti movslq pop xchg cs jge mov leaveq leaveq (bad) mov push and cmp pop adc xchg (bad) fnstcw cmp xorb in iret xchg andl sbb loope xchg pushq rex.RXB (bad) ss cld xor rcl mov (bad) loopne xchg (bad) rex.X rex.WX rex.WX retq xorb in (bad) adc movabs and gs jp sbb mov callq mov mov fwait pop add (bad) int mov mov jbe (bad) test cmp or sbb cltd imul adc adc lahf xchg movabs sti ss xchg cmp movsl test mov pop sarl add pop pushq cmp out lret or push mov pop stos adc cmp ficompl (bad) (bad) movslq sub and or (bad) sbb movabs nop sbbl fwait cmp xchg xchg rex.B pop ja stos mov sahf (bad) sbb ds mov add jle xor cmc jb sti (bad) mov fwait (bad) pop rcl lods push rex.B cmp rcrl enterq mov rex.WRX add xchg sbb mov fstps and (bad) cltd mov test (bad) test stc mov mov jmpq or (bad) xchg movslq add adc out fwait sbb rex.RX (bad) cmp iret adc xchg popq cmp test rex.WRX xchg addr32 xor (bad) mov retq rex.WRB fwait or rorl push pop fwait pushfq lods and rex.WR pop sbb (bad) jmpq scas push and adc sbb rex.RB rex.WRB repnz pop cld (bad) (bad) fwait (bad) (bad) or ds sbb (bad) adc test fisttpl mov movabs cmp retq fidivrl outsw sbb mov add push cwtl fwait not idivb (bad) sub fwait icebp loop adcl hlt rcrb pop push lock and mov gs jmpq or fldlg2 lret jo and movabs out add push mov lahf cli and fwait sbb (bad) loop hlt pop js pop icebp mov mov cltd or (bad) push fwait ja push movsl pop lock mov imull bnd rex.R add rcrl add xlat mov sar (bad) fisttpl movabs jge add ja adc fimull fwait push movhps mov fwait pop sbb mov movabs scas scas cmp push mov mov (bad) mov pop ja sub in shl fstpt lret xchg xchg lock cmp ds push ja lods or (bad) push and xor (bad) (bad) or or push fwait rex fwait lret mov addr32 rcrl test or mov jns push xchg movabs mov cltd (bad) or (bad) mov rex.XB (bad) mov addps mov fwait (bad) mov idiv mov sahf movabs scas icebp (bad) rorl sbb xchg xlat clc lods in cli lret jo sbb repnz fistpl movabs add outsl sbb in addr32 in fcmovnu push shr rex.RXB pcmpgtb mov fwait push stos (bad) stos mov sub mov mov cmp mov jge and jmpq (bad) xor negb movabs push rex.WB fwait mov (bad) mov add sbb cmpsl (bad) fwait (bad) and test cmc rex.X repz rex movabs sbb fstps shll jmpq lret cwtl lods cmp mov ja (bad) push fwait add jle and (bad) ja movabs rex.RB push jmp rex.WXB mov mov cmpsb rcrb xor lret jl iret adc (bad) retq cmp rex.RB lods xchg mov add fisub sbb cmp cmc pop pushq sub repz and cmpb sbb adc cmp xor (bad) rcrl xlat rex.RXB cld rex.RX rex.WRB xchg cmp mov sbb mov pop andl (bad) mov fistpl or xor mov mov repz pop mov sub mov mov fwait (bad) cmp mov callq sub sub in movabs sbb rex.WXB mov rcl fwait sahf rol jno and adc cmpsb xor push and in pushfq test add ja cmc adc loope (bad) rex.R (bad) cld add (bad) (bad) icebp stos (bad) addr32 sbb mov jne mov insb lret sbb jrcxz (bad) jbe mov adc scas (bad) add push rex.RXB test add jrcxz xlat cmpsl sbb rex.WRXB xchg fbstp rex imul lock rorl callq test sub fwait or sbb cmpsb (bad) icebp add insb out rex.X pushq sti movabs and sub sub jb adc leaveq pop movb sbb out (bad) retq adc cmp mov retq or (bad) pop cmp popfq lret jnp rex.WXB xor (bad) xor xchg mov (bad) mov mov and shrl rex.RXB in sbb (bad) movabs add ficom rex out (bad) xlat cmp ja mov mov adcl out add cmp pushq mov add jo neg (bad) int sbbl fnstenv fsub or jg xchg (bad) cmc clc stc out sar cld scas out add lock rex lahf hlt jbe xlat loop retq repz lock rex.XB stos sub cld xor movabs jp adc xchg mov (bad) jmp jl fs test movabs xchg jne fwait jg cmpsl mov test fwait retq rorb xchg ficompl lret cmp fwait mov lret sbb in (bad) nop adc cmpsb repnz out out out fwait adc int fwait in outsl es (bad) lods fsubp insb fwait or xchg rex.WB (bad) pushfq retq cmc jno and icebp sbb push mov xchg fwait (bad) sbbb mov pushq loopne movabs and or jl sub cwtl test int add xchg rex.R sbb rex.WB rex.RX jrcxz pop sti cmp (bad) add and rex.WRX xor sbb sbb jno mov orl insb cli sbb add rex.X fwait pop pop adc std fwait pop sbb rex.WX fwait (bad) loope or jg js stc test (bad) add fcoms adc rcr jmpq pushq xchg imul pop rex.WR fildl fscale jg sar scas and xchg mov clc (bad) mov outsl pushq jnp in cwtl (bad) adc rolb cmc sbb and jo pop and fwait jns fnstenv adc xor js,pn mov add adc repz sahf rex.RX add pop (bad) sbb outsl ror add (bad) (bad) ss xchg cmp jg rex.RB push sti es jae fwait shll loopne mov adc lret push push add add rex.RXB mov (bad) and fwait rex.WRXB test jl adc fwait out (bad) mov popfq cmpsl cmpsb rex.RXB lret data16 subb je rex.RB movabs fwait es (bad) lods adc cli retq fwait lods (bad) (bad) push sub or mov fwait pop mov sub stos icebp cmp pushq push insl add fdivrl adcb jle mov (bad) fiadd add data16 sbb repz jrcxz mov rex.XB add or retq pop fwait mov test (bad) fbstp adc data16 (bad) add fsubp sbb mov sbb xchg cltd (bad) xor add shl mov movslq pushq fwait (bad) cmp push rol sub sbb jae xchg add sbb fwait sbb rex.WXB rcrl and stc (bad) cwtl jbe mov test cmp (bad) fwait adc mov or cli add (bad) rex.WRB mov stos jl jle or cwtl or movabs cmpsb pop movabs jmp mov cltd (bad) sub rex.R rex.RB gs sbb rex or sub (bad) movabs fstpt test jl pop and rex.W sbb sub fildl rol sahf (bad) (bad) push fwait add lahf cltd jae add pop (bad) adc rex.W lret jrcxz fist test fwait push jnp cmc cmp (bad) insl fwait lods scas andl scas add (bad) imul jle mov (bad) fwait add fnstsw (bad) mov pushfq mov xchg iret fwait or repz rex.RX repnz sbb or movabs jp adc sti rex.RX shrl loopne mov out push or (bad) (bad) pushq lahf test sbb subl movabs jl (bad) add xor lods adc scas test cmpsb int3 add xchg retq rex.B ja or sbb rex.WRXB and ficom and pop cmovbe or jle add jmp pop (bad) stc mov lret rex.WB insb sbb cmp mov repnz cmp cmp mov in rol movsl gs mov adc jo or or add mov fnsave rorl push (bad) (bad) scas jb xchg mov cld (bad) (bad) pushq (bad) mov xchg (bad) xor mov mov and mov xchg (bad) out mov mov subl mov xchg adc (bad) divl add xlat jb roll (bad) (bad) popfq rex.X sbb cmc cmc and fs clc lret hlt sbb fsts pushfq insl es sub stos scas xchg lret imul pop (bad) add pushfq ds mov rorl xchg (bad) xor mov (bad) mov ror fstpl (bad) fistp (bad) in rcll data16 or cmp scas movabs cltd (bad) sbb decl (bad) pop rex.XB cmpsb pushfq out lock (bad) or test (bad) int es cltd rex.RX push push jrcxz cmpsl sbb add adc subl outsb add cld mov sti scas or loopne (bad) mov hlt mov cmc pop cmp decl jg loop xchg and push jmp mov mov rex.WXB and (bad) sbb (bad) cmpsb loopne icebp pop xor cld (bad) cli jne rex rex.R jne loopne movabs xchg or (bad) (bad) imul mov fildl punpckhdq (bad) push mov sub retq fiadd loope int3 mov std mov sbb push xchg add rex.WX mov or cs xlat addr32 out jo fstpl add (bad) xchg (bad) loope,pt pop (bad) cmp xor (bad) mov loop xchg mov mov fsubs in xor jb xor rex.RB cmp xlat (bad) push idivl xor pop (bad) cmp mov xor and gs sbb (bad) rex.WX (bad) scas rex.XB movslq ss rex.XB (bad) pop jno fbld pop pop push mov xchg adc (bad) sbb push pop lea jae pop sbb xor or mov (bad) jmp rex.RXB sbb movsb cmp cli xchg shll cwtl outsb (bad) (bad) insb adc xchg (bad) (bad) xchg push lret sbb cmp insb sti loopne push lods sbbl rex.WXB pushq pushfq sub jrcxz sti stos xchg push movsb xor pop xor xchg mov jno ja (bad) sub rex.RX fwait imul int3 add insb fwait sbb (bad) fwait jmp rex.WX rex.WRXB and (bad) pushfq rex.WR in rex.WB mov and icebp cmp retq sahf jnp out cmp adcl xchg pop lret push (bad) cwtl fwait rex.XB (bad) sbb push sub and rclb retq xor icebp and fildl scas pop and pushq (bad) adc orl pop xchg fwait rex.RXB (bad) in test (bad) stos add rex.WRXB cs xor fwait push retq mov callq or stos add jno or jne xchg mov sub data16 jns test mov mov sbbl (bad) loope loop (bad) and movabs sub orl and fcoms rex.WR (bad) (bad) jge sbb pop callq rex.WRX xor add rex.WR out mov (bad) (bad) cmp sbb (bad) cmp insb in je rex.WB cmp rex.XB shlb (bad) (bad) cmp data16 fildl (bad) (bad) std fsts fwait insb mov cmpsl sbbl stos rex.B adc push fdivrs mov fwait (bad) rex.X retq adc xchg nop xlat and repnz es out (bad) cld fwait xor (bad) xor (bad) (bad) inc in pop imul cs popfq mov fwait (bad) pop adc rex.RX adc outsb and fwait pushq rex.XB fwait movabs mov (bad) push repz mov (bad) rcrl xor adc cltd jns (bad) imul mov jrcxz (bad) pop pop sbb jo ss imul sbb movsb or icebp rex.WX rex.RX fwait mov jrcxz lods pop (bad) pop fwait jb (bad) pop lret lahf sbb (bad) xlat fwait ds mov adc push sbb stos movsl jmp cmovge (bad) orl fwait (bad) jmp cmp out mov ja (bad) jmp mov lahf (bad) or jp (bad) in (bad) rorb imul fsubr sahf mov (bad) jmpq in fwait rcll mov fwait lahf fmulp movabs (bad) xor movsb scas jns cmp (bad) or test (bad) jl push adc adc add rex.W outsl movsl sbb (bad) fwait enterq rex.RXB pop xchg (bad) (bad) pop sti mov repz jb mov mov roll gs iret lods fwait clc pop addl fwait mov rex.WX jnp cld movsb in fadd notb add adc jae mov (bad) movslq int3 cmp pushfq enterq xor fcom mov (bad) rex.RB pushfq cmc (bad) (bad) icebp mov fwait pop lret push leaveq fwait adcl add and xchg fcmovnbe xchg (bad) jb rex.RX rex.X negl sbb push (bad) xchg mov sbb jmp mov add pushfq scas mov fstps rex.B sti fwait sarl xor ds (bad) (bad) callq sti add fwait test mov jrcxz fsubrs fistpl pop in jns out fwait or hlt sub cmp loop scas mov fmuls pushq and add (bad) mov sti or lret (bad) (bad) fmull pop shl iret mov (bad) rex.XB fwait stos movslq jnp rcrb cmp in adc (bad) (bad) (bad) jge orb mov xchg jno mov fwait rex cmpsb (bad) stos mov add cmp pop divl fwait add (bad) lods movsb xchg adc sbb shrl mov (bad) cmp popfq outsl sub jg movabs imul gs add fcmovnu (bad) loopne and push mov xchg retq jne push cltd (bad) test leaveq add fwait lcall sbb or fwait jge add xor fwait xchg retq jbe orl add xchg rex.RXB cmp mov pushq push movabs rex.WX in sub add ja sti (bad) std stos (bad) adc sbb cmp mov and ja jns (bad) (bad) mov rolb push sbb icebp cwtl xor (bad) (bad) push fwait iret (bad) cmp out pop fwait mov mov fildl mov fcmovnb lret jbe ja sub mov movabs jno imul xor (bad) test jae hlt jrcxz std rex.R rex.B add or and loopne fwait test jbe sbb sbb movslq sbb movabs cmp retq xchg or mov fwait insb callq fwait xor movslq retq ds (bad) mov push lods or sbb xchg push in rcr fisttpl int scas lods adc fwait cmp xlat fcomps xor (bad) jne (bad) xor loope icebp sbb cmp and jae in fwait movsl (bad) adc jns test mov lret jle pop push mov retq mov rcr adc (bad) (bad) pop movabs and lock rex.WB hlt (bad) xor (bad) in sti (bad) in xor addr32 cmp sbb (bad) cmp fwait movslq and retq jle int3 xor (bad) fwait jl jbe enterq sbb addr32 sub or xlat rex.W push addl and mov fisttp rex.WR push cmp loopne jno jmpq insb fs loop (bad) ss xchg (bad) mov fwait jnp mov fdivrl cwtl int cs movabs and (bad) (bad) mov fbstp jbe jle rex.XB (bad) fwait (bad) movabs cmp std (bad) mov stos xor outsl loop (bad) xchg in fstps cmp movsl push callq fwait (bad) movabs fwait push fimull and (bad) push fwait movsl lock pop movabs jb fwait adcl (bad) (bad) repz fistl add mov push mull pushq (bad) sbb popfq stos jl jne add out out rex.WX je (bad) (bad) pushq imul cmp mov (bad) mov (bad) mov insb xlat (bad) pop cmp rex.WX popfq cmp lret in jp (bad) repz push jo cmp or jo popfq cld or movsl (bad) sbb and mov xchg pop xchg jmp ffreep mov cmp mov sub gs mov cmpsl or movslq insb movabs sub adc sahf (bad) rex.WRXB mov push mov cmp pop jg (bad) sbb rcrl mov out adc xor sbb pop (bad) stc addr32 lods stos (bad) in jae (bad) mov outsl out (bad) xor (bad) (bad) cmp idivl (bad) int lret (bad) and sti jp ds cli pop fwait cmpsl callq xchg cmp repz repnz flds int3 xor and std fwait fs cmp sbb xor int iret push fwait retq rex.WRX test or jg (bad) rex.RX gs pop lret mov lret (bad) jmp movabs rex.WB jge xor rex.WXB cld in xor sub (bad) mov fwait sub rolb movabs rex.R mov ja fldt fwait pop hlt and lret push (bad) stos in mov mov (bad) jne sub mov (bad) mov enterq sahf fwait jo (bad) mov (bad) lock fwait ror adc (bad) rex.WXB mov pop jrcxz pop mov push mov pop pushfq sub adc rex.WRXB xchg fwait or fnop out xchg (bad) fwait retq mov cli push loope movabs fidivrl xchg xchg cmpsb adc lret fwait scas loop scas rex mov (bad) fwait xlat je lods mov (bad) (bad) sbb pop (bad) jle (bad) callq mov mov lods jp mov adc js mov jo (bad) callq lahf mov mov scas test mov sub xor pushq mov sub add sbb xor in sbb and sbb push mov negl (bad) push movsl rex.WXB sub sub xchg movabs callq adc jno sub mov mov mov nop pushfq sbb (bad) lods cltd fs mov fwait imul sub hlt cld (bad) fcompl (bad) popfq imul rex xchg lock out std jns rcrb jne push std movslq cmp movabs (bad) (bad) (bad) sub xlat mov mov imul rex.WRX jbe push jne sti adc enterq xor subl xor retq movsl lret scas pop mov or and (bad) xchg pushq xchg clc (bad) pop jmp (bad) add fnsave addl sbb loopne or mov xchg in jmp cmpsl rex.XB gs jmp xor pop cld (bad) out sub mul adc fsubp push add adc sbb std mov rex.XB xor cld adc imul hlt (bad) or pop repz mov xchg mov ljmp xchg (bad) push or xchg int (bad) sbb jno or (bad) insl (bad) (bad) adc (bad) xlat movabs cmp jbe movabs sbb xor rcll pop scas out sahf jae pushfq (bad) or (bad) pop lods outsb cmp adc jae pop in in pushq mov cmp rcrl sbb cmpl (bad) in adc xor sbb gs add out jo rex.WB rex.WXB jno sbb scas out mov (bad) sbb ja xchg pushfq movabs je repz pop (bad) flds cwtl imul fdivr (bad) xor jmpq movslq xor int xchg xchg mov cwtl std adc popfq cmpsl fadd jg in (bad) fcmovnu stc movabs adc fcomi xchg popfq out pushfq (bad) fldenv sub movsb movabs fxch xchg (bad) out (bad) movabs add int (bad) es (bad) sbb scas and gs (bad) or mov add cmpsl rex iret fild (bad) jrcxz cmpl xchg imul push adc pop cltd jl add sbb test cmp pop fwait movabs rex.XB jp (bad) rex.WRB adc (bad) rex.WXB clc imul push js mul retq xchg sahf or mov adc xchg rex.WRX (bad) xchg or fcmovne and mov fcompl fwait mov jg stos cwtl (bad) (bad) adc push rex.WXB xor in mov (bad) vmovaps jmpq push (bad) repz data16 fdivrl movsl cmp rex.WXB xor sti mov add cmp and add sbb (bad) jge mov cmp jmpq sbb fwait sbb (bad) fildll (bad) fwait cmc jge popq mov jle jbe int3 (bad) sbb sbb cwtl std cmp (bad) (bad) xchg and mov fwait push add movabs loope add sbb mov in (bad) movabs and lods adc sbb fwait sub adc xlat (bad) sahf popfq fwait retq movabs (bad) or adc enterq mov nop adcb xchg (bad) cmp xor insb xchg mov es leaveq insl xor rorl popfq rex.X jrcxz lea lods lock lea jmpq pop pop sub iret pushfq sbb cmp fist repz sahf sbb push hlt lea sbb adc sbb mov (bad) fwait js xor jmpq xchg sbb imul jge pop mov insb cld movsb in in sbb cmp icebp in retq scas fdivr rex.WRX xchg adc mov pushfq insb leaveq and rex.WRXB jbe add cwtl cmp jrcxz and jns sbb xor (bad) out vorps xor pop int3 and add pop cmp ss (bad) loope (bad) cltd int3 mov cwtl incl int3 fcomi push pop test cmpsb mulb fwait push mov addr32 fwait cmp movabs mov imul rex sbbl int3 loopne pushfq sbb adc xchg rex.B fwait push rex.R (bad) (bad) cltd movabs sbb add rclb xchg fstpt and in fild movsl int sbb lahf (bad) fiadd repz jbe or imul jl ds fwait in clc (bad) jg mull fwait xchg movsl fs gs in loop or retq jmp es pop pushq rorb repz sub rcll fwait pushq adc adc mov movabs (bad) cld movsb sub and (bad) or scas cmp (bad) insb adc adcl fwait (bad) rex.RXB scas sahf fild fwait adc nop rex.RX (bad) (bad) mov fs sbb fwait repz pushq jb sub rorl (bad) adc sbb test insb and adc sub shr mov pop in js lret xchg add or pop (bad) sub mov mov sub leaveq sub xchg (bad) int3 fwait rex.RB add jo fwait lret lea sbb sahf mov add mov insl (bad) sub mov jns adc insb movsl (bad) jrcxz sub jae xchg scas xchg rcrb xchg mov rex.WRB jl xchg fucomp mov movabs out fwait rex.W mov pop mov (bad) sub sarl cwtl fistp int (bad) push cltd (bad) (bad) (bad) or fwait xchg icebp data16 jne cmpsb fistpl or sbb jrcxz retq (bad) rex.WRX fs (bad) in fwait cmpsl and cmp add jmp sbb movabs stc jg (bad) adc fisttpl pop in stos fwait pshufw movsl mov cwtl or pushq add idivl jp add mov xor in lods adc and outsl sbb cmp mov loope scas ds popfq fildll cmp add jl retq adc cmp lret xchg sahf and jl std or rex.RB (bad) rex.WXB sbb (bad) leaveq nop fildl cwtl test pop in cmp mov (bad) or (bad) pop sarl lahf add jne sub enterq iret pop mov sti sbb je add (bad) mov (bad) sbb jmpq jo shrl imul divl test fwait clc pop xor callq lods sahf iret cli rex.WXB adc fwait repnz (bad) out fwait xchg orl cwtl fwait rex.RX out movsl or xor cmp sbb fldt or sbb (bad) sub mov sti fwait jne xchg fwait adc pop out mov rex.B fwait loope xchg and or (bad) std sub ficomp in cmp test sti pop shl ror fwait movb lea sub (bad) and and rcrb loopne pushfq int (bad) loop (bad) fistl and rex.WRX fwait test cwtl mov xlat mov jbe pop (bad) (bad) jle (bad) xor sti adc data16 out xchg hlt fwait and push jp movslq (bad) jrcxz cltd popfq rex.WRX movsl xor xor in test add jle sub sub loop mov mov jae xchg or xor xor rolb mov or (bad) sbb pushq push outsb (bad) xor (bad) mov add cmp push iret sbb negb test mov rex.XB data16 cmp std retq sbb rex.WX rex xchg (bad) sar xchg (bad) add fcmovnb and loop fs stc xchg scas xchg jle hlt sbb (bad) rex.B clc or (bad) mov mov lods addr32 push mov sub int3 add (bad) enterq movsl imul loop movslq rex.WXB xor (bad) xor pushq pop (bad) rex.WX jbe callq sub push cmpsb (bad) mov (bad) (bad) fstpt rex.RXB stos insb mov xor xor iret and mov mov sub (bad) (bad) sbb push sbb test (bad) hlt add push rex.RXB stc stos jb,pt loop jmpq sbb icebp (bad) lret cmp cmp rex.XB (bad) jb jmpq stos sub jb adc sbb (bad) or xchg jmp movsb xlat ficoml es rex.WX mov cmp (bad) sahf sbb xor outsb push movabs pop xchg pop xchg cmp xchg enterq xchg (bad) xchg (bad) xchg cwtl xchg pushfq adc or (bad) xor pushfq mov out cmp rex cmpsl adc sahf mov fildl cwtd (bad) out (bad) jne sti (bad) insl rex.B sub (bad) cmp cmp cmp adc pop mov (bad) iret movsl (bad) (bad) xchg pop ja xchg shl rex.RXB xchg out xor jnp lret movsb shr pop cwtl rex.WRB xchg mov adc stc loopne xor js sbb sub add xchg fstpt or leaveq jnp mov stos ss adc (bad) (bad) fistpl jnp add lods sbb rex.WR sti mov fwait fs sub retq jnp out pop jo and xchg push rex.WRB add leaveq (bad) (bad) scas or lret ficom adc clc fwait movsb shr movabs mov xchg mov and fistl xor or (bad) movsl out fwait data16 and fwait (bad) loopne outsl jo push fmull mov cli push test fcmovnb adc fwait jns mov mov in sahf lret rex.WRB pop and fwait (bad) mov rex.W ficomp xchg cmpb fwait and lock push fldenv (bad) lret sbb or rex.X lods mov xor movabs fwait pushq lock and lods mov stos fwait cmp adc pop test adc roll rcr cmp or sbb (bad) sbb and pop rex.RB mov rex.WRXB jrcxz xchg add and sbb sahf insb cmc sti fsubrs sub pushfq fs or or fwait jbe (bad) (bad) (bad) xor and (bad) out movabs and (bad) sbb mov jne mov mov jrcxz add test ror fcomps sbb xchg divl cwtl mov xorl jge mov in cmpsb adc xchg int cld out jb mov repz popfq movabs pop int jle rex.XB (bad) (bad) movsl stos (bad) test rex.RX or sbb (bad) out sti pushfq mov and cmp sbb mov imul callq cmp pop (bad) (bad) mov push andl mov push cmc rex.B hlt fnsave (bad) lods sub sub rex.XB jle adc mov data16 movslq mov hlt pushq mov (bad) rex rex.WRX addr32 push iret in movslq cld pop or sti in out xor xchg rex.RX popq (bad) pop iret mov (bad) push cmc int repz mov sbb loopne sbb popq movabs scas jl cltd push and sbb (bad) jmp out mov int sub jg rex.WB sbb scas pop pop int sub add fstpl (bad) push mov (bad) lahf sbb (bad) (bad) jl movabs repnz sbb fldl rex.WB pop jae (bad) rex.WB in in rex.RX repnz mov scas sbbl lahf int (bad) cld (bad) incb mull (bad) retq pop lods jmpq cmpsb insb mov (bad) (bad) sbb out (bad) rcrl int push (bad) outsb (bad) xor popfq (bad) sbb data16 jle lahf xchg fstl cmpsb jp add cli mov rex.WRB mov adc mov insl rex.WXB cmp mov icebp cmp cmc loop cmpsl xchg pushq (bad) push jmp lock jns jp (bad) fsubr pushfq pop pushfq (bad) or shl add jmp ficompl or insb push data16 and rex shl jne mov push (bad) mov xchg rex.RB cmpl xlat adc test mov push callq push rclb mov xchg out sar (bad) clc cltd out (bad) movabs movsb cmp jg in push jae pop out sbb std lahf repnz (bad) (bad) mulb rex.WXB scas pop gs jge xchg rex.B outsl cs mov adc pushq movabs mov icebp jmpq negb jno sbb rex.W (bad) add rex.R lea mov mov fsubrl iret (bad) jp or (bad) mov cmovnp rorl add adc mov lea adc and stos sub sbb (bad) mov in rex.WRB sbb leaveq mov push loopne in pushfq (bad) cmpsl nop pop (bad) xlat stos cmpsl cmp rex.W sbb mov lock mov (bad) mov xchg cmp mov (bad) mov mov (bad) and insb rex.XB jl sbb pop pop jg jb enterq rex.WR fistpl cmp sbb fs pop in roll clc xchg sub xor imul or fist (bad) fsubrs callq rex.WB jrcxz (bad) in sbb (bad) movslq pop movsb cmp xchg and jrcxz (bad) adc repz fisttpl sahf mov sbb (bad) repz rex.X std (bad) rex.X adc or rex.W xlat sub stos cmp or pop mov std js out movsl sub stos cltd jle movabs sbb or push mov pop push sub repz or ss sub or jmp push jg sarl loop jo loope xchg or stos cmpl cmp loopne insb out mov sbb movslq rex.WRXB iret in fptan in fimull js cmp pop (bad) jbe rex.RX loope fwait jle mov lret sbbb ss rex.WRXB and rex.B (bad) out fwait sbb xor mov fcomip cltd hlt jge pop cmpsb fwait sti lods insl jmp retq outsl stc fwait (bad) (bad) mov (bad) (bad) fwait (bad) cmp and (bad) rex.XB retq (bad) jno lea or test div loopne and in movslq enterq fwait rex.X mov mov push enterq idivl and (bad) rex.WX fwait xchg leaveq cli (bad) or cmp (bad) xor pop pop stos cmpsb fst xlat rex.W fwait (bad) nop enterq fcoml mov push mov jge rex.WX rex.WX rex.WRX mov jae adc mov sbb push rex.WR xor lods jrcxz iret xchg push jb fwait and (bad) fwait pushq sbb loopne mov jae cmp (bad) xor (bad) and or cltd mov rex adc and cmc scas mov (bad) xchg mov in mov rex.R gs popq xor cmc cmp fbstp fistpl adc cld out (bad) adc or fwait pop js add or xchg sub clc stos int loop lods fwait out mov mov loopne fwait mov data16 jae fwait xor movabs test (bad) in sbb orps (bad) fwait or (bad) (bad) std int add out (bad) (bad) sarb movabs rcrb xor sti add jge (bad) in xchg mov movslq mov pop sahf cld rep popfq sbb rex.WRXB fidiv or jmp outsb movsl xchg fwait jge push mulb cmp lret (bad) mov movsl imul mov loope mov fwait xchg cs sub xor add callq hlt cmpsb sbb out sti fwait jne es adc adc fwait out mov movsb fwait ja enterq and mov fwait psrlw add jb fwait add xor sbb or cmp (bad) pop sti jmp mov icebp cld xchg pushfq lods addl mov xor scas fwait jne adc test (bad) cmp pop mov or js (bad) lea movsb jnp xchg or rex.B xchg mov out mov mov and test xchg iret or stos and pop (bad) add (bad) (bad) (bad) int3 jns jge push popfq adc insl out movslq (bad) rsqrtps fwait adcb cmpsl fwait mov add (bad) movsl (bad) or mov rex.WRX fwait pop add test rex.WRB xchg sub (bad) rex.WXB cmp lods lock stos jge je jle (bad) pop xchg int3 mov sub cmp xchg sub fwait subl xchg xchg xchg jmpq lods (bad) (bad) (bad) imul rex.WRXB movabs pop mov out pop fwait push sti xor repnz cmpsl stos je in insb lcall sub (bad) push hlt ds push rex.RXB negl (bad) mov xlat cmp in icebp mov rex.WRB fbld iret mov (bad) xor lea out out scas fwait or xchg repnz mov fcomi (bad) imul jl push insl fwait mov lea rex.WRX mov sbb (bad) scas fwait or cmp fwait cld pushq rex.B sahf movsl jne (bad) push add sub xchg test addr32 cmpsb movabs push mov and jno (bad) cltd cmp jb xorl xchg in fwait add mov rdmsr lret cmc pop popfq (bad) mov rex.XB rex.WX rex.W fwait (bad) (bad) or imul cmp out add fwait gs (bad) fdiv roll cmp jnp pop std (bad) rex.WB cmpsl (bad) adc rex.XB rex.W xor stos and (bad) (bad) pop sbb sbb (bad) repz fwait jrcxz jmpq (bad) fwait out mov (bad) cwtl (bad) xor rex.XB fwait fs and (bad) stc lods (bad) fcoml xor cmp xlat xchg mov cmc lahf (bad) or rex.R jnp fldcw movabs iret sbbl fsts sbb test rex.WRXB sub or (bad) mov fwait cmp xor out rex.X repnz push sbb jns cli cmp mov fwait retq mov xor rex.RX test fwait add orl rex.RB fwait rex.WR mov adc js mov out mov (bad) mov jb (bad) mov rex.WRX sbb out cmp mov sbb imul loopne jae out mov pop sahf sti movabs imul or fiaddl sub rex.XB (bad) adcl rex.WRX rex.WRXB cmp cltd jmp ja sarb adc int3 rex.R stos (bad) xor jmp jb retq rex.B add xchg (bad) nop cmpl (bad) pushfq xor rex.RX (bad) in jge push movslq pop (bad) or pop lret pop fwait outsl (bad) out rcrb cmc mov pop fwait in lahf movabs cmpsl js leaveq (bad) rex.RX fwait ja sbb or xor rex.WRX repz jg (bad) stc mov rex.WB fwait lret sbb pop fwait or jbe iret sbb (bad) push lods sti loop xor mul rex.RX cmp push (bad) rex.X (bad) jne (bad) cmp insb out in xor scas shrl (bad) sbb xor icebp in mov (bad) insb sahf cld cmp icebp rex.X jle or js sub pushfq xor mov add shrb jmp push rex.W movabs pop movslq push pushq rex.R je sti xor mov add cmp movsl (bad) fwait rex.XB pop rex.RB ficomp out pop add outsl fwait callq (bad) (bad) (bad) out pushq fwait xor lret stc xchg mov fwait outsb jb cmp adc lret pushq and (bad) popq callq fwait rex.RXB (bad) pop sub lret adc push fwait cmp (bad) shlb pushq (bad) cmp fwait icebp add es pop std subl or push movabs in lods mov rex.B fwait bnd lock ffree (bad) rex.WR (bad) fcoms retq mov stos add adc pop int3 jae (bad) xchg add add add mov std (bad) mov push movsl (bad) xchg xchg movabs adcl cmp (bad) lret (bad) (bad) sub scas es pmulhuw iret repz sub sub xchg repz and mul lahf mov mov in pop mov mov mov shr lods std test rorl (bad) mov (bad) sar negl (bad) (bad) out mov ds addl (bad) fwait cmpsb (bad) adc fwait idivb ss (bad) mov (bad) fnop imul rex.X cltd and adc fwait out cmc movsb adc popfq xchg fwait repnz cwtl int (bad) (bad) js loope lahf (bad) pop (bad) fdivp jo fidivr adc repnz imul leaveq xorl (bad) (bad) and fwait insl in (bad) (bad) lea fwait sub xlat rex.WRB sbb or adc (bad) sub add sub adc mov xlat fwait test fwait (bad) outsl mov push (bad) repz fwait adc add mov (bad) retq (bad) rex repnz xchg movabs decl fistl cs cmpl mov mul out cmp jne divl pop loopne add loop gs jne scas xchg retq popfq pop jmpq (bad) rex.WB hlt popfq cmp (bad) pop pop mov cli mov pushq std insb callq addr32 xor rex.RB sbb mov (bad) (bad) sub sub pop (bad) mov (bad) (bad) pop add pop jae movsb pop (bad) cmp pushq andb sbb rex.XB rex.X pushq pushfq sub xchg cmp adc mov ss loope subl sbb sti rex.WRB out ror sub (bad) push subl sub pushq stc jg enterq cmp (bad) jns cltd out imul fwait cmp out mov (bad) fsubrp (bad) test (bad) or pop pop lretq cmc jl leaveq rex.WRX rex.WRB (bad) repnz (bad) outsl rcrb shl sbb insl adc (bad) sub out iret pop push sbb push fildll jne in out (bad) sahf adcl mov xchg sub (bad) rex.WRXB pop je fistpl pop adc rex.WXB sbb jo pop jmp in adc (bad) jp push cmp in mov jbe mov out ja pushfq cmp (bad) (bad) sahf clc lahf test jg xchg (bad) rex.W (bad) nop movabs or faddp out fiadd sbb fucom addr32 mov rex.XB out pop retq jge loop movslq push fs (bad) add mov fldt jge (bad) (bad) out jle addr32 xchg outsb fwait iret rex.WX jbe pop ja or xchg (bad) xchg fwait cmp (bad) std loopne rex.WRXB (bad) sbb cwtl fwait xlat leaveq adc lea rex.RXB (bad) rex.WB fwait cmp popfq or rex.WRB or sbb imul xchg pushq movsl jmp fucomip cmp cmp sbb add mov and (bad) jg sub movabs (bad) jl mov in cmp jg jmp push fldenv sti and push jp retq movsb or negl cmpl adc (bad) popfq fwait rex.RXB repnz rex.W fwait (bad) (bad) rex.RB outsb (bad) loope sub jne and pop test out xchg cwtl sbb fstpt out and es std push clc fwait rex.X ja add fwait jae (bad) outsb out (bad) and sbb mov jge cmp cld xchg shr retq adc stos subl xchg mov imul lea test (bad) ja je int sbb adc jmp xor sub jg xor (bad) or ror pushfq push (bad) or lret fwait insl cli adc add lock (bad) mov add and sahf mov fwait pop rex.WB incb sbb in (bad) fwait es or pop test sbb jo rex.WXB mov fstps ss test sti rex.WRX hlt in push sbb sbb scas rex.WRXB sbb xchg (bad) (bad) mov jno test push (bad) out fwait mov xchg ds mov cltd movabs mov js pushq movabs cli jg insb sti (bad) fist fwait imul add callq jp rex.XB jle cmc mov add movslq incl xchg fidivrl sti int3 (bad) int sbb add or movabs lret fnop jb xchg xor rex.WRXB es fwait xchg (bad) ds fwait movsb leaveq mov imul in xchg and fsubrl rex.WRB sbb pushfq sub mov hlt push out mov insl cmp (bad) clc jmpq testq push repnz jrcxz add sbb loope adc fisub (bad) push xor xchg loope lret retq fwait leaveq xor (bad) sbb sub push mov add add lret movabs mov add sub xchg xor xchg test adc xor xchg adc ds ffree jae fwait (bad) add xor fwait ja clc jo add and cmpsl subb sbb and sbb mull rex.WRX (bad) xchg test je,pn mov mov scas xchg callq pop int negb rex.WR fwait jnp in pop rex.WB test rcll imul test (bad) (bad) jp mov sahf outsb mov add (bad) mov fwait mov jmpq sbbb sbb xlat es fwait pop fcmove (bad) adc rex.R and adcl fwait rex.WXB rex.RX xchg fwait out xchg mov movabs out mov jrcxz (bad) xchg int adc rex.WXB and cmp jge lods movsl sbbl enterq cmpl in (bad) (bad) test fwait (bad) jg adc (bad) cmp stc jno fwait pop sub (bad) stos repnz or out and fwait xchg rex.WR hlt (bad) fwait movsb outsb sub jrcxz mov (bad) fisubrl push jl in movups (bad) leaveq retq xor and rex.WR jge cwtl (bad) fwait sub and (bad) jno xor std nop mov fwait iret rex.WXB mov test cmp mov pop sbb rex.RX jle fstl push (bad) (bad) sti xchg movabs (bad) fdivl mov fnop fwait mov adc adc jle pop (bad) add sbb (bad) cmpsl rex.WB out pushq xorl sbb sub push (bad) insb jp pushfq (bad) outsb (bad) rex.R shl push negl lahf out int3 fwait (bad) adc cmpsl sti (bad) addr32 rex.RB (bad) sti jle mov cld cmp fidiv (bad) repnz adc leaveq (bad) stos adc (bad) mov stc sbb sbb repz (bad) pop (bad) pushfq fs leaveq rex.WRXB mov xor mov (bad) hlt sbb or je rex stos push (bad) fmul or out xlat movabs out popfq and in cmp fildl je ficomp movabs rex.WXB repnz stos (bad) ds fistp ficomp out movabs (bad) (bad) je (bad) nop (bad) lock xchg fcmovnu mov mov cli iret mov retq out shrl clc (bad) mov fwait pushfq movslq mov fxch adc fcomi cmp sub jge fwait stos scas xchg cld in rex.RXB sbb rolb push sti mov movabs jl mov mov fwait mov pop (bad) fwait test add (bad) or sub sahf fnop jge adcb rex.WXB movabs sahf lahf fprem loopne add callq (bad) (bad) outsl mov std (bad) fimul cmp movabs (bad) mov sbb mov pop pop je hlt rex.B and xchg mov sbb lret mov fwait rolb jns jrcxz add rex.RX andb (bad) (bad) sti jg rex.WRX in mov mov rorb mov (bad) push movlps repnz sub sub or jbe cmp and rolb rex.WRX movabs (bad) loope outsb movabs mov fwait adc movabs cmpsb sahf (bad) clc retq int3 cmp xchg or sti imul jbe int out fwait rex.WR push movsb xchg or mov sbb jb xchg ss sbb and fsub notl pushq fwait rex.XB (bad) adc fcomps movabs (bad) gs rex.WB cmp push sbb fwait and add test cmp mov fdivrs imul int3 mov retq sub in add fisttp (bad) xchg (bad) cmp sti (bad) sti cmp rex.RB adc test es pushq rex.RX cmc push xchg js (bad) in and in adc (bad) int (bad) movabs xor jo cmpsb add iret adc (bad) (bad) packssdw sahf rex sub push (bad) cmpsl jge rorl fs fstpl lock pop jmp mov fcomi enterq mov out fistp and sub jg xor fstpt roll (bad) adc lods rex.R ss rex.RXB incl xchg sbb cwtl mov (bad) fisubr rex.RB pop lea add cmc mov rcr sub imull fwait xlat ljmp (bad) sti (bad) fildll add (bad) xchg jge (bad) adc pushfq movabs test stos (bad) mov imul jb jne (bad) in xchg add fidiv add decl gs outsb imul mov je xchg (bad) retq callq mov rex.WRX xchg insl or rex.WRXB cs mov mov or or shll xchg (bad) rex.X fwait push jrcxz push jno cmp pushfq test clc pushfq or sti insb ja movsb push fwait mov (bad) scas (bad) fwait lea movabs xchg (bad) stos clc xor xchg lock js pushfq xchg imul out enterq fnsave imul (bad) lret (bad) xor adc sbb add cmc rcr lea movabs insl xor jl xchg pop rex.WRX out jno fisttpll mov or lods mov and (bad) (bad) ss push rex.WXB cvttps2pi or stos sbb pop (bad) cli (bad) rex.WX mov sbb pop jl (bad) push rex.RX fwait test jle add jg sbb fist sti mov rcrb mov gs lret in sahf shrb push loopne xchg add jnp xlat jmp int xchg fwait je (bad) mov adc xchg cmp mov stos ja retq adc adc add xor mov scas rol cmp sub pushq add and (bad) cmpl rex.WR stc fwait in mov rolb (bad) negb int cld mov mov (bad) out in sbb or or repz mov vmovsd (bad) adc or mov cmp rex.RXB (bad) rorb lods jl fnstsw fwait or fisubrl cmp repnz (bad) fwait sbb sub mov (bad) xor outsb fwait in out push jmpq sbb xchg iret movabs mov testb rex.WB mov fistl pushfq xlat rex.WRX xor in xchg sbb cli mov pushfq (bad) lea lods in lea stos pop rcr rorl pop lahf rex.WRB sub mov (bad) loope rex.X xchg rex.RB rex.XB mov (bad) fsubs rex.RB rcll or mov (bad) jle (bad) stos jne sahf addr32 (bad) in idivb in sub rex.WX fldcw and mov and out loope loope sarb retq jmpq pushfq push adc enterq rex.RB rex.WX cmp mov xchg and incl pop cmc movabs jle cmp mov rcrl rex.X rex.W push mov rex.RX fsubs add cli rex.WR loop push and scas pop mov (bad) rex.R pop xchg fistp mov mov hlt in cltd add jns cwtl pushfq ss pop je sarb je pop fs movabs loopne (bad) je rolb je cmp rex.WX addr32 sub shrb mov mov (bad) in push xchg movabs mov fcomip sbb scas add loope (bad) cmpsl mov and fiaddl movsl sarl or gs rex.WRXB push movabs lods mov cmpsl sbb rex callq (bad) push int xor mov cmpsl mov and fwait sbb fild fwait std repnz lret push mov testb adc stos or sahf rcrl nop (bad) retq fwait push pushfq pop rex.WRB xchg fldt jbe rex.X jns scas sti jnp xor fwait cltd leaveq or jo nop and push rex.B movabs movsb jb jmp xchg mov mov (bad) (bad) idivl jb rex.W rex pop sbb rcrb out adc add sub out insb (bad) fwait cmp xor mov imul sahf fildl pushfq mov jns rex.RX rex.WRB popfq (bad) mov cmp fdivl outsb adcl cmp fldcw and and mov addl mov movslq mov stos jle adc frstor xor mov lret mull sbb mov jmpq add mov jge rex.XB jrcxz movabs ja in movabs mov pop (bad) movabs test rex.WR (bad) adc sahf (bad) sub loopne xchg adc cltd jmpq jl retq decb add sbb add rex.WR pushq jge jle sbb mov (bad) xlat outsb out jg data16 add jo cmp xor outsb sti stos sbb push mul rex.R pushq (bad) sti push (bad) rorl cmp (bad) mov xor (bad) (bad) jne retq jp imul jnp rex.WR movabs mov in xor pop cs data16 sub sbb loope jl sbb int3 orl stos imul in (bad) jrcxz rex.RX negl (bad) xor (bad) rex.X stos add rex.X (bad) mov in (bad) rex.RXB roll xchg adc mov jmpq iret mov gs lods fistl rex.WXB pushfq add data16 or push jbe (bad) test imul or scas xchg mov jmpq rex.XB clc loop mov xor test mov and fnstcw cmp mov push orb (bad) imul pushq movslq rex.RX mov ss xchg fucom popfq js push adc fdivl data16 pop data16 imul or adc pop jbe (bad) rex.W or cmp leaveq mov fldenv mov mov sub rex.RX enterq fstps sbb jrcxz (bad) or pop iret repz fwait mov in add cmp add pop outsb xchg adc jl (bad) rolb stc (bad) push mov jge jl out pushq callq int sbb movabs jbe lea jmp jns cld rex.B ss sarb jp stos loope retq xchg sub xchg jge out mov sbb loope int3 fldcw faddl mov gs retq pushfq insb movabs or repnz insb lods jbe and lahf (bad) test out pop (bad) scas sub rex.RB in (bad) add push (bad) std pop xchg scas fnsetpm(287 xor jle callq cmp adc xor cmpsb (bad) xlat sub push scas sti rex.WB cwtl lea (bad) mov and ss iret xchg mov rex.WXB rex.XB emms es (bad) stc lret push push cmpsb lock and mov jge ds loop ja (bad) loopne rex.XB xchg data16 (bad) out rex.WB (bad) jle subl lea (bad) imul (bad) icebp rex.WRXB xchg pop rex.XB sub (bad) jle cld ja (bad) movabs roll (bad) hlt xchg lods pop std sbb adc mov (bad) faddl (bad) loopne jmp pop in repz movsb mov (bad) mov (bad) test leaveq mov movsl stos mov (bad) std leaveq rex.RX rex.XB movabs or out jle nop sahf cmp rex.WXB (bad) std loopne rex.WXB or sbb pushq adc mov push xor or hlt bnd popfq (bad) (bad) xchg pushfq cmp sub sbb mov mov or (bad) popfq rex.RXB or (bad) (bad) jge sti jl fistpl push cli testb adc (bad) fwait stos mov pop pushq fxch fstpt sarb loop callq xor movabs (bad) sub mov mov jne pushw rex.WRXB rep out jno sbb lret (bad) (bad) xor or sub mov push sti mov rex.R rex.WRB rex.WRB es (bad) mov sub cmp cmpsb adc pop fbld xchg mov cmpsl fist popfq xchg lock sub (bad) movabs rex.RX retq or jmp sbb es pop rex.B rep xor fwait mov cmp (bad) out (bad) loope jp orb addl adc icebp nop jmp cmp push sbb sbb sub scas jrcxz xchg sbb (bad) test loope push jmpq repnz (bad) lods sahf in rex.XB fwait test fwait rex.WX cli movabs sbb (bad) mov int sub loopne jrcxz rex.RXB out (bad) loopne fwait adc sub ss mov sbb sub (bad) (bad) sbb rex.X push jns (bad) and rex.WRB xchg jne mov in push (bad) hlt std popfq sarl neg mov pushq (bad) (bad) pop mov (bad) push loope lret repnz jle fwait (bad) rex.WR loope movsb lret rex.WXB sbb js push jge rex.WXB push std ja sbb (bad) cmp int (bad) sti (bad) mov xlat xor rex.WX mov ja mov (bad) movabs pop cltd cli or es (bad) or stos rex.R pop jp (bad) or test jo or sbb xor cltd (bad) sbb cmp sbb mov (bad) iret cmp stos out (bad) (bad) insl (bad) rex.WRXB sub (bad) push es frndint xchg mov mov pop sbb pop mov lock push mov sarl mov in add testl enterq lods int3 popq sub rex.B (bad) movabs jno movslq mov popfq xor jae cmc cmpsb jl int3 (bad) xlat cltd rcrb sbb (bad) movsb jmp pop loopne cwtl sbb (bad) cmpsb fildll pop rorb repz and mov gs xchg (bad) (bad) mov rex.XB test fistpl imul mov rcl out jne int sub (bad) pop xchg lock or (bad) cmp sub mov pushfq pop (bad) and (bad) pop repz and (bad) loope outsl enterq mov push shrb (bad) ja mov loop ljmp (bad) fadds mov or fcomi int3 rclq mov rex.X mov addr32 xor stc jle enterq (bad) (bad) fisub movsl rex.XB stc cltd lahf add adc mov and jmpq sub cmp scas fistp shlb xchg pop retq mov pop cld or jnp push xchg rex.WRX imul out push xchg es rex.R lods mov and jns pop or jo or sbb (bad) jo (bad) rex.RB and push outsl lea push out (bad) fisttp sbb sbb and (bad) (bad) rex.WR loopne (bad) push ror (bad) mov mov xchg (bad) lret (bad) add cltd mov (bad) xchg xchg fistpll scas adc test clc pop pop in ds xchg xor fimul movsl mov xchg fnop lret sbb push sub out callq retq add addr32 mov scas movabs xor mov jle fsubl mov cmp pop xchg in int3 test (bad) sbb push jmp mov cld xchg push jno fsubrp rex.WRB rex.RX and popfq push fpatan mov push fs (bad) (bad) xor leaveq xchg (bad) push es es and (bad) jmp (bad) and xor add (bad) lea movsl fldenv int jl es sbb (bad) fldcw fwait in push enterq and (bad) stos sbb adc jmp mov fwait rex out rcll sub add cmp movabs mov cmp cmp add (bad) fwait in pop mov (bad) fbld mov cli lods fwait (bad) ds rex.XB data16 sti fwait test ficompl imul rex.WXB callq (bad) cmp jmp adc movabs rcrl adc rep fwait sahf (bad) and sbb rex.WXB add or sub xchg jmp fwait add (bad) jl cmp (bad) pop cli (bad) rex pop jae add pop enterq sub movsb adc sti (bad) sbb fmull scas cwtl mov insl xchg cmpsb (bad) sti (bad) pushfq rex.WR adc fwait imul (bad) imul lock fwait movsl rep cmp fwait insb mov or fwait (bad) ja (bad) sub loope add (bad) fisubl xchg (bad) jnp loope nop cwtl leaveq (bad) lret (bad) repnz push (bad) rex.RB jns xchg mov cmp pushfq xchg (bad) and rcr xchg pushfq fdivrl (bad) cmp orb nop mov icebp retq adc movabs retq lods mov (bad) (bad) sub fwait movabs xor cmc pop sbb nop rex.XB test sbb xor (bad) stc jmp cmp mov pop hlt out fwait mov push lods jbe jl pushq movabs add xchg neg je rex.WR addr32 mov push add rex.B mov test xlat (bad) test mov sub sbbb out and or sbb (bad) lea (bad) rex.RB outsb (bad) lret repnz jle pop clc xor (bad) cmc (bad) jmpq (bad) mov test add (bad) rex.WRXB cs in outsl lock jns lods sarl jl (bad) pushq push rex.XB rex.R mov (bad) pop push jmp jge flds pushfq cli out int shr sbb xchg fucom cmpsl adc (bad) xor fwait (bad) rex.R sbb out and cmp adc sbb fwait (bad) lret out mov outsb rex.RXB rex.WRB cli movabs out push fwait loop test and leaveq out push or fstpl lret cltd push fisub or jrcxz movslq test (bad) popfq mov jle fwait xor cmp jge mov fwait punpcklbw mov int3 lock push fwait cmp roll movsl jo movb adc (bad) js rex.W fcomps jmp mov fcmovne adc stos fwait push addr32 std (bad) sub xor pop lock es rorl fwait rex sub iret or (bad) jge adc mov rex.X xor fwait jnp loopne jne add (bad) (bad) js in in xchg (bad) leaveq cli and mov fwait cld std retq outsb mov mov fwait xchg add repz ja sub jnp xchg (bad) jge scas out cmp (bad) (bad) xchg mov movabs loope adc rex.WRX movslq mov frstor or push (bad) repz push (bad) retq mov movabs xchg xor cmp or pop icebp pushq or xchg imul or jle iret sbb fldenv test adc mov cltd mov cmpl ds push incb (bad) movabs sti sbb xor decb mov jmp scas rex.XB jae js push pop in push loope stc sbb nop rex.RB test cmp (bad) (bad) rex.XB loop (bad) pop rcrl add mov rex.X callq or add mov (bad) or jl addr32 psrlq cltd mov in (bad) sti mov xor ror push loope movabs rex.RXB xchg js subl jno jrcxz fdivp jb jle sbb imul jl cltd push cld test (bad) pushq push fbld fnstsw and xchg jmpw jl js or movabs imul icebp movsb jl mov sbb mov out mov rex.WRX mov rex.XB loope cmpsq gs clc sbb xchg sbb mov lret mov sbb lret loop fdivs scas (bad) rex.X lahf fistpll rex.W push callq jmpq fstp push rex.XB imull push lret rex.WX rex.WRX rex clc (bad) sub jp mov scas jo mov pop fwait int3 rex.RB fwait pop mov pop rex.R adc add mov mov jo (bad) sub vmovq (bad) or rex.WR xor add sub sub rex.WRXB fwait (bad) sbb in sarb lret jne xor stc add add mov pop sub mov push rex movsl ja lret (bad) insl repz and jno mov fwait (bad) cmpsl xlat enterq (bad) jne pop jrcxz and add xor (bad) xor rex.X rex.WB (bad) jne xchg (bad) xbeginq jl fcomps cmc fcoms loopne cmp insl imul fsubl jmp sbb retq add movabs jne push retq fwait (bad) std cmpsl pop and cmp mov adc cmp outsl mov xor jl jbe fisttpl xchg movabs lea cmp loopne pop xchg movabs repnz xchg sbbl sti shlb sbb push and rex fwait rex.B or fwait pop (bad) ficom add (bad) repz add adc mov adc mov sub mov rex.WX fwait add mov jp add sbb movabs repnz pop clc rex.WX (bad) (bad) out popfq iret fwait or cmpsl xor (bad) out cmpsb pushq cmpsl in push scas jl or psrlw movabs (bad) rcl (bad) xor cmp in fbld pushfq pop pop movabs (bad) and fnstsw lret adc xlat cld xchg (bad) pushq fimul cmpsb jo jae push fs add xchg (bad) movsl mov movabs sbb nop test (bad) jl je jle (bad) insl jns shll mov xchg and clc or rex.X loope xchg rex.B idiv (bad) js fscale in add push and sbb rorb (bad) mov pop (bad) mov mov pushfq fnstsw je pop mov (bad) mul (bad) push lahf pop (bad) sbb adc mov sbb out mov xchg callq pushq int3 std gs (bad) mov or rorb (bad) adc add ficoml rex.W sbb leaveq jrcxz movslq repz mov imul rex.X setno movsl movabs or (bad) popfq leaveq (bad) popfq cmp or rex.R rex.WXB fisubr (bad) rex.XB mov mov pop or jbe repz pop (bad) je mov rex.RXB and pushfq sub fwait (bad) xor add (bad) and pop gs (bad) pop xor sbb in nop mov rex.R insl (bad) rex.RX rex.RX rex.XB xchg sub cmc fistl stos in mov fwait jrcxz jp test pushq fwait rex.WRXB jo xchg stc rex.W fwait (bad) mov (bad) addr32 and cmp jl cltd (bad) jmpq jmpq fmul cmp fwait xchg pop es pop sbb mov rex.WRX movabs stos add xchg add (bad) sbb gs jmp fwait (bad) pop sti int fwait callq (bad) (bad) fwait cwtl adc (bad) or pushfq mov movabs repz xchg movabs (bad) and sub icebp retq jrcxz cs fwait adc jmpq ficompl insl int3 mov sbbl movabs or std mov adc cmpsl rex.WRXB xchg and (bad) push (bad) iret adc (bad) sub insl out sbb cmpsl hlt rex.WR movsb out rex.WXB xor lods or push movsb mov pop (bad) sbbb in rex.RXB add mov xor sub xor push vmread xchg test fwait (bad) out (bad) fildll rex.WRXB sahf mov pop cltd or repz out sbb (bad) pop ror push add xchg sti loop cmpsb (bad) lahf (bad) mov data16 in faddp jle (bad) repz cmp rex.WRX loop js or movsl ffree jmpq (bad) push fs stos fiadd loope (bad) rex.XB xchg (bad) insb mov add scas (bad) (bad) jns push addr32 sbb (bad) and (bad) or stos cmpsl addr32 (bad) repz gs rex.WRXB adc fs subb jo mov pop data16 je mov xorl adc (bad) jrcxz (bad) or cmp insb push and (bad) rex.WR movabs mov (bad) imul xor (bad) mov rex.RB movabs fildl in xchg cmp (bad) iret xchg lock incl loop jno fcompl cwtl adc rex.RX insl and popfq data16 movsl jae (bad) sti push add out adc rex.WRB sbb sub clc push repz xchg (bad) sbb mov cwtl hlt fbstp mov (bad) cld imul cld or cmpsl (bad) shrl data16 rex.WRX data16 mov mov xchg rex.RXB and enterq repnz (bad) and fwait stos rex.WRX cli movslq fisttpl (bad) jmpq rex.XB mov movsb ljmp cmc rex.WB (bad) mov test test jle mov adc movabs mov test mov lea sub mov cmp callq or (bad) adc jo retq and xor jp cmpsl ror rcrl icebp rclb (bad) stos or push sarl jle mov outsb mov in repz jle pushfq xor ja fabs cmp scas jae cltd mov cmp mov xor cmp jrcxz xor jbe loope std and cmp xchg jmpq or (bad) jmpq rex.R retq pop lea test adc int subl xchg iret (bad) xchg jle imul jnp mov mov data16 test iret mov es rex.WX sbb cmp mov jge (bad) sbb jp adc sbb fs (bad) popfq loopne (bad) sti rex.WB rex.WB and (bad) out fistp (bad) rex.WXB (bad) sahf or callq test movsb cli stos mov jle,pn push rex.WRB pop sti lock rex.WB lahf test loope cmc sti (bad) xlat jb or mov retq sbb jnp (bad) in insb insl fwait in addr32 pop movabs mov (bad) (bad) repz add jno adc rex.WR (bad) in movabs fisttpll lods cld jae xor sub fwait insb push imulb fwait rolb movabs ficomp stos movabs sub (bad) fwait and std xor sub cmp jmpq ljmp push out subl leaveq add fwait or (bad) icebp jl rex.WRX fwait mov sarl (bad) movsb in int3 sbb fcomps scas lods mov loope (bad) icebp or rex.WRX cmp fwait in push (bad) data16 jae orl out mov std scas jbe fild sub in mov pop add rex jmp push scas (bad) add or imul callq fwait add insb (bad) sbb jle (bad) loop (bad) xlat mov (bad) (bad) loope callq adc sub leaveq (bad) negl add popq pop stc pop cli fwait lods (bad) add mov out or mov rex.RX sti or roll sbb sahf movb cltd rex.WX jrcxz out pop (bad) sbb jp rex.WRX repz in stos jmpq insl adcl sbb jmpq mov int3 jge push add fwait cmpsl jnp lods (bad) subl addl insl cmpl fwait cltd jo or fwait cld (bad) in (bad) push movabs or pushfq add xchg movsl xchg in mov mov and popfq rex.WXB rex.WR fildl jne and sub sbb cs rex.RX mov mov adc out add out pop lock fwait movsl fs sbb cmp mov pop sbb out adcl rcr xor adc sub (bad) (bad) fwait loope cli cmpsb idivl jae mov out mov (bad) push adc mov nop or decb mov out pop adc sti cmp rex.WX data16 outsb (bad) mov movsb in cmpsb cmp icebp push (bad) (bad) sti retq roll mov data16 (bad) jg rorb iret sbb divl add pushq jl mov pop cmp rex.WR repz sub fwait (bad) xlat rex.RXB pop cmp jle pop (bad) pushq rex stc lret jnp test cmpsl cmp je (bad) sahf (bad) (bad) sbb movabs lods xor imul (bad) rex.WR out movslq jno iret ds jo adc fwait mov test push fwait jp push adc rex.WRB sbb rorb (bad) ficoml cli (bad) and sbb pushq xchg cmc (bad) and cmp fchs cmp push rex.WR test hlt rex.RX setge movabs jmpq pop and neg movabs in idivb fwait mov xor sub pop insb jg hlt adc sub int3 (bad) imul sti rex.WXB pop ds xchg or mov jns xchg fwait mov (bad) mov fwait (bad) (bad) fnop push rex cmp ds fwait popfq sbb (bad) (bad) movabs push mov mov push pop stos fwait leaveq xor mov cmp jl mov je sahf jb xchg mov push sahf adc movabs stc fwait cmp mov sub fildl lret stc loopne mov mov mov sub mov or movsl out push (bad) sub fwait insb and xorl adc jb mov (bad) clc fwait (bad) mov jrcxz push (bad) sub fwait push or callq (bad) jmpq pop or mov mov sub mov ja or or leaveq rex movabs imul movsl lock mov rex.WXB std stos lea push movabs mov adc movaps fwait ss rex.WR xor stos stc jne lea fisubl lock sbb rorl (bad) hlt (bad) movsb (bad) jp jrcxz shr movabs xchg pop (bad) outsb pcmpgtb clc sub movl pop lods retq rcrl xor xor fwait jne xchg or and xchg xor fwait (bad) out enterq sub (bad) sbb retq mov rex.X fwait adc sahf test cmp push cmp (bad) jo loope rol movsb add fwait (bad) rex.WRB outsl pop roll fcmovne mov (bad) cmpb and pushfq mov rex.B pop jno (bad) push rex fwait outsb fsubs sbb pop lret fwait shll and sbb cmpsb out es (bad) movabs mov push mov pushfq rex std rcr fcomi adc movsb pushq pop fbld jne push (bad) (bad) jmp xchg rex.WRXB icebp rex.RX rex.WX (bad) (bad) adc pop add pop xchg mov cmpb cmpsb mov roll rex.WB or rex.WRXB cmp fwait mov gs rex.X (bad) outsl sbb adc sti rex.W rex.B iret iret and cwtl pushfq (bad) std pushfq sub mov data16 or fs lea jae jp sti sbb (bad) xchg popfq or push sbbl movslq mov imul mov sbb out repz jnp push movsb rex.WXB (bad) sbbb cmp fwait shll xor push repz and (bad) pop movabs mov outsb negb and mov lahf stos loop sub add pop mov rex.WRXB imul test rex.W push fwait adc pop jl loope test (bad) (bad) fwait xor jl adc lahf rcrl mov imul loop add jnp mov retq (bad) mov jg ficomp add fwait callq jnp mov out movsl xchg stos jrcxz ss imul jno (bad) sbb mov movsl movb sti lock fwait mov rex.W outsl rex.RB mov adc loopne sub or push cmp lret movabs (bad) add rex.WX mov and adc fnstenv movabs rex.WXB andl (bad) jle add sbb stc push sbb and add sbb mov bnd je repz rex.WR (bad) adc clc lret (bad) pop add loop fidivl adc movabs rex.X sahf lods cltd (bad) add cmp lea mov jno add rex.X (bad) cmp stc std rex.B (bad) mov jnp xchg (bad) and mov jl fisttpl xchg xchg addl mov add mov cmp mov fdiv mov movslq sub xor in repnz popq pushfq stc rex.WXB addl mov pushq push add outsl pop mov and ss iret (bad) cmp cmp (bad) mov shll push rex.WB rolb sub sti add xor (bad) cltd scas fwait (bad) iret loopne mov pop jns shll pop pop xchg add adc mov lret (bad) mov rex.RXB retq (bad) pop rorl xor fwait sub pop rex.WRXB add or (bad) fadd add xchg fwait clc loop (bad) xchg adc fwait mov or cltd (bad) or lret xor xchg fwait ja pop xor cmc cld rcrb (bad) lret xchg xchg add (bad) fwait sub xor test fwait mov sahf (bad) fwait or out mov loopne pushq pop adc (bad) rex.R repnz (bad) ds mov sbb and jmp (bad) or out pop xchg cmp (bad) mov in xor jl movabs xchg shrb jp xchg cmp leaveq popfq movsb cmc fwait jno push sbb sbb or sub rex.WR fwait adc cmc (bad) fwait shrb std fwait rex.R jge and fwait xor (bad) sub fwait rorb mov jno and xchg jp addr32 jrcxz bswap jg jp fucomi (bad) sub rex.WR pushq (bad) rex.X add jle push fstpt (bad) and pushq test mov rex.W ss (bad) loopne (bad) (bad) mov xchg movabs add es insl cmp je add rolb mov cs ss rex.R mov pop (bad) sarb je cwtl lea icebp in adc data16 fabs xor (bad) roll (bad) and ds and cwtl sbb cmc sbb sahf test push cltd mov (bad) pushq xchg jrcxz sbb push loop,pt fistpl rex.WR adc (bad) insl insb test in loopne add leaveq movabs (bad) nop xor (bad) pushq push testl movabs (bad) (bad) rex.WX jnp xor and pushq int cmp out (bad) mov xor fldl jl (bad) clc or je insb js pop and mov cmp cmp mov sbb rex.XB (bad) scas xchg andl cltd pushq add mov xor in mov popfq rex push add test (bad) (bad) and rex.WR and rex.WR fwait cmpsl movabs jmpq pop sub mov int3 scas (bad) jnp mov fbstp out jg stos mov popfq or callq (bad) sahf jo (bad) and lret and rcll notb pushfq push icebp movabs cmp rex.WB jp (bad) cltq sbb mov movsl mov pushq jmpq mov decb or mov pop jmpq (bad) (bad) outsb rex.XB mov (bad) sbb movsb out (bad) push (bad) out (bad) cmp iret fwait push mov cmpsl xlat xchg mov (bad) cmp flds cmp sbb pop fucomp mov (bad) fwait insl test lret rex.WRX fwait dec (bad) jbe sbb fwait rex.W jnp (bad) jns pop rex.WB fdivrp movabs xor lret (bad) fs adc es sbb (bad) add mov pop sub jrcxz cld stos rex mov mov fwait mov jg insl and mov scas fwait movb rex.RB fwait jmpq fisubrl fwait mov rex.WRB lea js and or xchg cld (bad) mov and mov sbb sahf lret fisubr retq or loopne or cld (bad) (bad) movslq xor and sub test sbb pop cmp fnop add mov adc std fistl cli (bad) jge rex.RB int3 fwait test fwait icebp vpsubq sub rex.R sub fwait callq (bad) xchg fwait mov stos cli rex.WRB (bad) sbb out leaveq add negl or jae loop cmc popfq mov sahf test sub (bad) outsl in in imul jmp xchg sbb rex.RB lods test jl fdiv fwait std jrcxz andb int (bad) mov jno fwait sub (bad) cmp fwait lea or sbb std lods in mov sti stos gs add or fwait xor push js loop sub (bad) (bad) int3 adc movabs jbe scas out hlt stos cltd push xchg fwait mov adc xchg (bad) outsl ds icebp fwait decb jrcxz fwait shll mov loopne out (bad) cmc jnp movabs movabs pop mov and jmp push lahf mov imul (bad) fildl mov jrcxz add mov js xchg ficom rex.RX fwait int add sbb out (bad) popfq test sub xchg xchg mov out popfq add sti cmp (bad) sbb (bad) (bad) scas push (bad) stos jbe fwait loopne movabs adc or fwait xlat repnz add sahf rex rex.XB pop mov fstps mov xchg pushfq fwait pop jmpq fs (bad) retq out xor fwait (bad) mov test jp cltd jmp rex.WRB (bad) adc mov cmp xor rex.RB addr32 fsubr iret int pop rolb pavgb xchg fwait (bad) rex.WRX sbbl and add movsb test mov fwait pop mov sbb or mov rex.X fildl (bad) test and (bad) test xor int ficomp rex.RB jmp and or movabs out sbb std fwait cmp or push (bad) cwtl (bad) xchg movsl xchg cmp (bad) fwait or cmpsb (bad) fsubs (bad) jle pop xorl leaveq faddl pop pushq jle outsb rex.WB xor push cmc popfq sti fistpl fwait mov fs nop sbb test fwait jg cli (bad) or jae sahf xchg rcrb xor scas jrcxz mov sub (bad) (bad) retq loope lods (bad) std stos rex.WR fwait lret pushq fwait jno sbb pop in mov rex.W insb cltd xor mov pop jb mov movabs push imul dec mov (bad) cltd rorb sbbl iret (bad) rex.WXB (bad) sub jmpq stos movabs cld add xor scas jns cmp cmp mov or (bad) cmp cmpb sahf movabs (bad) cld push insb pop imul fwait adc rex.WX cmp pop mov jmp fstpt mov (bad) (bad) fisubrl fwait cltd (bad) pushq rex.WRXB sbb mov add in (bad) (bad) movabs sbb nop movslq rex.RB fwait or mov sbb add incb lea pop lahf rex.RX mov movslq sub fwait movabs ds jmp jp (bad) in (bad) mov rex.WX (bad) loope sti cld outsl or cmp fs rcrb mov sbb push adc lret insl (bad) movabs xchg gs lret add fxch cmp add rex.WB fwait mov mov cmc fwait xchg pushq fdivrs insl (bad) fwait or decb (bad) sbb mov stos gs rex.WB push (bad) adc fwait loope out jne sarl rex.WRX stc enterq test lret fwait sahf xor fdivp andl out (bad) fwait mov add movabs fldt stos in pushfq pushfq mov (bad) ds cmp lea cltd fwait cli fstps jnp fwait (bad) cmpsb imul sbb sbb push mov and (bad) stos add outsb rex.X push (bad) mov rex.R or pop sahf sub add mov (bad) adc rex.WB and fs iret lahf cld fwait retq repz sbb mov stos (bad) jl pop stos (bad) jrcxz movabs xchg (bad) xchg xor fmul jp rex.WXB jae xchg ffree outsl lods cwtl loope fwait jnp movabs imul sub add hlt adc sysret mov movabs adc mov jnp imul in lods fiaddl mov mov (bad) xor jno mov mov (bad) fcompl mov pop jae lea mov fwait rex.WX ss repz jae jge lahf rex.WRB mov add xchg fsubl outsl fwait pop (bad) out sub mov (bad) and (bad) mov add (bad) jnp lods nop cmpsl or (bad) pop xor outsb cmp fwait pop imul sub pushq enterq fwait pushq and jmp (bad) loope add (bad) xchg ss cmpsb (bad) (bad) retq jmp and (bad) idivb mov pop pushq jge rex.RB mov xchg (bad) lods xor mov movsb repnz fwait cmp in retq lret (bad) sbb adc in cld xchg addl out out fwait push (bad) rex.WB (bad) sub or out ss mov xchg pxor addr32 pushq jo or fwait push cwtl rex.WX adc rex.WRB adc rorl in mov stos mov mov sub mov xchg mov retq cmp int3 add xchg fwait sub sbb scas xchg fwait sub mov ss mov std xchg mov mov test sub xor fwait sbb cmpsl sti imul xchg adc jmp fwait mov or rex.R fwait pop adc (bad) (bad) roll nop loope or (bad) in fwait (bad) or in enterq sbb in fstpt (bad) sub (bad) outsl (bad) pop cmpl sub rex.B or cmp out movabs (bad) sbb (bad) cltd or mov icebp hlt out sbb movabs pop jmpq xor mov (bad) sbb adc sbb push jns retq outsl imul movabs fcomps jle (bad) addr32 cmp mov ja jnp jae (bad) (bad) xchg and incl in lret jns jg popfq test lret rex.XB fwait (bad) enterq and mov pushfq fwait xchg test repnz fild imul (bad) jg add movabs movabs lock sub and rex.WR push rex.X imul movabs (bad) rex.WXB (bad) add jnp (bad) mov or add fcmovnbe xor icebp stos fwait xor rex.R in mov adcl rex.WB add (bad) xor rcrl jno cmp cmp or fdivrl cwtl rcll fwait test mov cld out fwait andl in mov and cmp jrcxz in jp es fcompl fisttpl loopne sub outsl fwait lret sub mov or mov enterq mov adc in fadds pushq divb xor sarl fs adc gs and out xor ds cmp sbb imul fwait adc sahf cs (bad) pushq or rex.WXB cwtl movabs imul (bad) (bad) repnz mov fwait rex.X xchg fwait pop and retq rex.WRX std shr jg xor in sub mov or loopne fwait pop leaveq cmp in sbb jb lret jbe callq int3 sbb outsl adc (bad) pushq cltd test xchg pop ja rex.WXB fs loope adc mov sbb insl popfq insl cli out mov outsb xlat jb fadds ds or out faddl and lret adc or (bad) clc sahf fwait rex.X movslq rex.WRB jne rex.WX sti jl subl jo sbb addl lret sbb fwait or hlt xchg (bad) stos rol sbb sub movabs sti mov xor rex.RX rex.RXB lock (bad) scas repnz and outsl retq stos adc xbeginq jge rcrb sbb enterq mov cwtl rex.RXB adc xchg cmp scas lea int gs je jmpq rex.WXB rex.X push rex.WRB fwait test jge mov (bad) sbb mov std stos data16 iret data16 movabs mov sahf sbb outsb pop rex.RX movabs rex.R rex.X sub adc movabs mov movabs rex.WRX sbb loope js pushq pop add fstpt xchg rex.WR int3 adc leaveq fwait mov jp pop sbb push (bad) rex.R movabs loop mov test mov stos mov (bad) add in add add add add scas xchg rex.B repnz add movsl sbb sbb or (bad) (bad) and mov enterq mov out cmc (bad) movabs icebp mov repnz std xor fwait addl and outsb sahf repnz fwait shlb and fwait sub mov (bad) rex.WX mov sbb xchg pop (bad) fwait mov mull out loopne xchg sub orb sti (bad) xchg push sbbb sbb test jrcxz std rex.WR stos je repz sub mov rclb adc rex.WX sbb (bad) add push add jrcxz xor push fdivrs ficoml fmuls lods (bad) pushfq add rex.RXB cmp jl hlt enterq and lock scas sarl (bad) sbb jp (bad) mov stc add pushfq (bad) retq add (bad) xchg (bad) cmpsl ss cmp fwait repz fdiv (bad) movabs rolb rex.X fwait movslq jb mov lock scas jg hlt xchg fwait and xor je fwait jp cmc retq jg movabs fwait out outsl or add fwait cmc (bad) out jrcxz add sbb loopne fwait rex.W (bad) (bad) mov sbb xor loope xchg xor int3 pop shl add data16 pushq fcomps bnd xchg mov lock xor scas (bad) sbb and jne mov fwait rorb cmp and movabs rex.X jrcxz xchg jp mov adc callq add xor je out rex.WX xchg in (bad) mov subb je popfq jl (bad) adc mov adc mov int3 jo sbb rex.WRX (bad) enterq xor xchg xchg sahf rex.WB (bad) mov (bad) pop xlat in imul xor enterq mov adc loope test (bad) or rcl (bad) adc stos jge (bad) mov sbb insb mov repz in mov gs (bad) retq jbe (bad) (bad) fnop fistpl pushq and sub jno clc pop mov rex.XB lret mov stc (bad) (bad) xor jmp fiaddl mov cmc and mov (bad) (bad) sbb push ss rex.B cmp and cmp add or sbb push (bad) enterq xor xchg in nop xchg xchg in lea xchg mov mov sub xor (bad) mov (bad) jle sbb imul add callq mov nop xchg (bad) jle lock push and or add lea movsl (bad) push sbb rex.WR mov fwait pop jnp cli in sti mov sbb insb in (bad) fistpll loop repnz mov movabs adc (bad) ja xor (bad) mov xlat xchg (bad) je or push mov adc fwait rex.RB jge (bad) rcrl (bad) (bad) fwait jnp jb cmc jo (bad) fwait (bad) sbb loope cmp and fucom sub sbbl fwait mov mov loope sbb sbb retq add xchg scas xor in add idiv fcoml (bad) cmp push (bad) sbb mov xchg xchg sbb movabs mov jbe jg xor rex.WRB cs fwait stc (bad) pop rex.RXB xchg test mov movabs (bad) xor (bad) and stos mov jge fwait mov insb cli cmpsl rcll add (bad) sbb add out stos fwait callq (bad) cmp mov fcom sbb cmc icebp movabs ja movslq xchg adc (bad) and fsubs (bad) imulb jmp jg mov and sti jrcxz rex.WR rolb cmpsb fidivl stos adc fwait ja imulb (bad) scas insb mov and icebp outsb pop jg out pushq fwait xor popfq rcrl out icebp add mov insb adc movabs in (bad) sti push or or pop (bad) pop rex.RXB adcl clc (bad) xor pop fsincos (bad) mov int decb (bad) (bad) ss jl xchg sbb sbb (bad) xchg movabs lods (bad) loopne (bad) jrcxz mov notl loop test jrcxz std jno rorq jle push mov in pop fwait outsl jg xchg rorb ficompl (bad) shrb loope rex.RX fwait jb mov rex.WX fwait (bad) (bad) clc rex.WRX add jrcxz (bad) in pop outsb cld fwait in loop xchg jge nop pushfq notb jl lret jmp movabs or mov lods out test jmp adc outsl sarb sti lea jns movabs repz lahf movsb fwait cltd fsubl cmc and in or lods adc sub adc or (bad) adc fwait loope stc scas out movabs jae and mov popfq xchg movabs sti add and mov jrcxz push mov (bad) or (bad) and shrb xchg movabs pushq jne sub fwait add add out rol fstpt (bad) rcrb sub push sbb xchg out cltd mov fwait jl (bad) or (bad) movabs cmp pop lret (bad) and rex.RXB fmuls jnp jmp (bad) lock negl fwait sub push je iret (bad) (bad) xor movabs roll fisttpl jbe cmpb (bad) cmpsb add imul rcrl sbb xor or cmp cmp fwait mov or sbb (bad) push rcr nop adc add repz fwait or add int3 (bad) rcrb movsb hlt sbb divl jrcxz mov mov pop sbb jno xchg pushq adc sarl (bad) mov fisttpll cmp mov sbb (bad) lahf movsl loop lret lods xchg shrl iret add mov or adc and fwait rex.RX sbb adc cs jmp sti xor jg cwtl scas iret retq (bad) ja push retq fistl mov push sahf adc test jle test sbb and fwait mov leaveq jo sbb xorb mov rex.WX rex.R xchg (bad) xchg stos movslq mov push and xchg roll outsb (bad) sbb std scas pushq movslq add cltd outsb xor jns loope rex.WRXB repz jno fist mov add add cwtl mov sbb sti sahf pushq rex.RX cmpsl faddl fs cmp sar mov subl mov xchg retq int mov adc out xchg (bad) mov cmp (bad) xor (bad) outsl ror rex.RXB rex.WRXB out (bad) test and jrcxz sbb pushq mov stos xor xchg xchg push mov sbbl pop or (bad) (bad) xchg mov addr32 cmpsl notl test gs lock je loop push (bad) int jbe xor cmp clc adcl cmpsl popfq sahf add callq rex.X repnz rex.R (bad) sub pop (bad) mov out imul sbb rex.WR sbb xor cwtl lea not rex.R clc (bad) jae clc lods jge imul sbb js movslq mov sub lods (bad) pushq jl (bad) loop fstpl sbb imul fistpl mov pop out jne rex.WX rex.RXB sti push mov fsubs loope add iret add jg insb stc rex.RB rex.WRX insl sbb mov mov testl jae mov jmpq fwait xchg jns cli mov mov scas pop mov in cmc (bad) (bad) adc out insl jg imul fwait jle mov adc rex.WR xchg iret stos (bad) cmpsl fwait je pop addr32 xor mov xor or mov sbb clc cld loopne je lahf rex.WRB rex.RB fwait ljmp jl rex.RX mov sahf in or fwait xor rex.B repz (bad) rcrl mov xchg mov and movslq jb cmp sub xlat push outsl lret sbb sbb out mov add xchg sahf shl fwait sti sbb (bad) mov push or add cmpsb xchg pushq (bad) mov mov icebp pop (bad) jno (bad) iret xorl rex.WX add movabs sub cmp flds (bad) xchg mov sbb out adcl sbb rex.WRX cmpsl leaveq and jmp mov (bad) loop jl push lret adc mov (bad) test (bad) xchg (bad) retq and cmpsb (bad) mov (bad) fimul movabs rex.X fwait loop rex (bad) cmp (bad) sbb rex.RB or (bad) jle insb pop sbb or out (bad) sub popfq test adc icebp and rex.B fsubrl xchg jrcxz rex fnstsw lods push push (bad) fwait xchg jnp sub adc fwait imul imul (bad) retq xchg rex.R cltd int push subb push sti (bad) mov jbe xor loop cmp movabs iret lods (bad) clc fwait lret xor adc icebp sti add (bad) callq fwait out adc fmulp fwait jno lahf cmp push mov sahf (bad) data16 add sbb and pop test mov sbb movabs jge (bad) loopne or movabs xor cli rorl xchg cmc std cmp (bad) es (bad) jle sbb (bad) jbe mov or sahf and (bad) sub fwait (bad) cwtl icebp xchg (bad) rex.WRXB jl (bad) loopne pop stos jrcxz mov (bad) rex.RXB cmpsb ja fwait and (bad) sbb rorb mov fmull fwait fwait in jae cmp (bad) (bad) jo jmp es xchg (bad) cmc nop hlt and add or retq sbb cmp jge sub vcvtss2si iret fwait scas movabs rex.WRXB cmp sub xchg pushq je je cmp (bad) mov imul cli (bad) adc (bad) fadd (bad) (bad) ficompl sti sbb xor cwtl iret adc rex.WXB test out js (bad) xlat fwait out repz cltd mov test cmpl jg push (bad) enterq movabs (bad) mov sbb mov sbb sbb mov repz in pushfq shrl retq mov movabs ficomp sbb movabs xchg add cltd cmp sub retq rex.WXB push movabs sbb or mov (bad) (bad) mov (bad) (bad) mov jb add (bad) sbb sarl (bad) loopne cltd stos cmp xchg xor sbb fdivl fwait or incl fwait (bad) mov stc mov ljmp xor (bad) movsl jae xchg fwait push fildl sub fwait sahf add add movslq fwait (bad) callq sahf test test ss (bad) loopne fisubrl (bad) clc lods add fwait stos sub repnz sub scas leaveq add sbb hlt (bad) pop mov (bad) sti (bad) mov test rex.RXB pop and pushfq and add mov (bad) or fs or mov mov retq int3 fnstcw sbb rex.B mov je insl rolb or fwait (bad) rex.WXB or vcmpsd sbb jle sbb in ds pop sahf pop rex.XB leaveq mov fildll mov rex.RX xchg lods nop fwait movabs mov cmp iret fwait (bad) test cmp in xor rex.RB rex.WRX mov scas fwait mov flds pop in (bad) mov (bad) (bad) callq rex.WX stos (bad) (bad) popq (bad) push xchg xchg jno mov scas xchg in cmp popfq fstpl (bad) pop jmp xor (bad) jle insl popfq test and ss in jl xor pop jle stos and (bad) (bad) rex.WRX (bad) (bad) xor stos or push (bad) test (bad) push cmpl fcoml idivl clc add movsl xchg (bad) pop xlat (bad) iret (bad) pop js out push ss (bad) (bad) sub push mov pushfq fdivl rex.XB leaveq xchg pushfq (bad) mov lahf jle fxch jb sbb outsl popfq (bad) (bad) push int and mov mov rex.X (bad) mov repz pop (bad) cmp fs lahf xchg jo int xchg sbb add out addb pushq addr32 xchg mov (bad) rex.WR stc movabs jrcxz xchg loope pop nop lahf mov jge out movabs test loop movslq rex.RXB sbb (bad) or lret (bad) cli sub xchg add loopne cmp mov rex.WB xchg add push (bad) xchg xchg rex.WRX rex.WX cmpsl (bad) and cmp retq movabs and repz (bad) negb cwtl std vdivps callq outsb fstpl cmp cld rclb lods (bad) sub lods or add movabs adc (bad) cwtl jae cs jl sbb jb pop (bad) or neg jrcxz mull out mov pushq je (bad) stc mov rex.WXB or jl in sbb add or push adc (bad) xor (bad) fldt cmp mov out pop jmp popfq sbb mov loope (bad) (bad) rex.R sbb add and (bad) mov movsl jbe fnstcw cwtl (bad) sahf pushfq jmp push adc hlt vpcmov pushq int xor movabs mov test push repnz (bad) cmc rex.XB jno shlb push pushfq negb mov test repz addr32 rex.RXB jae xor (bad) (bad) clc rex.RX mov repnz xor rex.WRB mov int3 mov rex.WRB rex.WX jbe fsubrs enterq add sub (bad) adc jp mov loopne push sbb jge sub out enterq (bad) repz (bad) rcrb out mov rex.RB (bad) loopne lret hlt pop (bad) mov jp iret (bad) and mov mov (bad) cltd add rex.W and add js sbb pop leaveq imul jmp rex.WB jo shl cmc and sbb notb push rex.WRXB (bad) xchg pushfq rcl imul push (bad) mov mov (bad) (bad) or push mov pop fcompl int sbb mov hlt (bad) imul lret pushq out (bad) out retq push xchg loope rcrb retq jge jl pop cld cmp mov xchg cmp mov (bad) cmpsl movabs (bad) mov fdivrl cwtl insb cmp leaveq cmovl sub rex.R sub jae adc (bad) or ficom out cmc (bad) (bad) imul nop popfq (bad) lret xor and loopne stos rex.XB fistpl (bad) fild xor out lea (bad) xlat pop cs jns jl repz mov jae lret (bad) insl mov sbb adcl xlat pushfq (bad) sti repz mov rex.WRX xchg repnz fcmove rex.X push mov adc xchg rex.WRXB xor (bad) sti loop rolb (bad) jnp cli movslq imul sbb mov (bad) and (bad) je pop (bad) out pushq xchg out mov sbb cmpsl sbbl sbb rex.X fstl adc repnz loope insl jp and cmp xchg sbb fmull (bad) (bad) rex (bad) mov and sub rex.WRB addr32 jnp cwtl xchg enterq fisub loopne add test fisttpll rex.WR xor decl nop adc fstpl rorb cmp jns fwait or pop adc data16 in pushq fwait jbe (bad) movabs cmp jne jge repz and ss sbb mov fwait pop cmp add fwait pop repz cmp jnp (bad) (bad) (bad) adc movabs mov jno (bad) xor lret sbb add sub mov loopne xchg add (bad) pop fisttpl (bad) insl sbb or clc jne and mov (bad) (bad) mov sbb mov mov out rex.WX sbb sahf mov mov and mov in jae imul add or add loop sbb add rcll add retq fwait (bad) and (bad) stos rex.WR add (bad) fwait repnz int rex.XB in fwait mov mov cmp movabs rex.WRB rex.R push (bad) mov cmp fnsetpm(287 decl test and mov jrcxz (bad) or jns fwait adc rex.WB repz (bad) jp (bad) sub and fwait jg (bad) (bad) xor mov jle mov mov (bad) or nop rex.WXB ja test fwait pushq je rep rol popq rorl jae rex.X fsubr in jb adc std hlt movsl (bad) icebp (bad) and jae adc jg mov insl fwait adc sbb cmpsb (bad) sbb sti retq pop imul mov in insl ds jg fwait pushq rex.RX notq mov fstps sub rorb repz notb jg (bad) sahf ja and jrcxz rex.RX fwait adc lods rex.RB lcall sbb int iret mov outsb (bad) push mov jle outsl andl pop (bad) add (bad) adc out (bad) (bad) fwait rep mov (bad) fwait mov out loope fwait rex.RB mov lret mov fcmovne mov xor and sbb stos stos (bad) jl in and (bad) (bad) xchg rex.XB adc add rex.R stos cmp cmc popfq pop cmp (bad) and lods fisubrl loope rex.RB (bad) jb lods rclq stc adc lret (bad) ficompl mov fwait subl xor std mov retq adc (bad) jmp (bad) in retq rclb add cwtl xor mov sbb mov mov jmp adc jo jmp fmul ds and lret retq pushq movsb (bad) paddq cmp adc cmp in ficoml (bad) (bad) or mov jbe sbbl fistpll cli (bad) mov mov (bad) rex.WX loope xchg pushq fnsave imul add sahf pop (bad) lods rex.RXB jno (bad) (bad) (bad) mov in jp mov repz out sbb add lahf xchg sbb popfq mov fmuls sbb mov sbb cld sti (bad) sub rclb (bad) stos enterq sub (bad) stc and and pushfq hlt (bad) out in adcl xor andl mov rex.RXB (bad) adc fisttpll (bad) push pop (bad) fs mov ffreep jne adc pop test insl fwait and pushfq xchg cmc fwait rex.RXB lods rex.WRX mov and (bad) (bad) mov (bad) rex.B xchg (bad) (bad) (bad) movabs (bad) xor in fwait push callq imul fwait rex.WRXB (bad) rex.RB mov jns in in test (bad) mov add pushfq fstpt or sbb xchg xchg xchg fnstenv rex.B sahf sub shr fistl movsb pushq mov addr32 outsb rex.XB (bad) add mov movabs cmp sti callq retq (bad) xchg pop (bad) cld adc (bad) test fwait or iret xchg push (bad) lretw fwait mov hlt xchg repz jmpq xor sti gs movabs (bad) fstsw insb pop in sbb and rex fwait js test loope and imul (bad) jo cli add or fwait in mov cwtl fwait jns out rex.XB rex.R fimull xchg mov cmp jge lods fildl jnp test (bad) rolb mov push mov push and (bad) (bad) out cmp test popfq and (bad) jp fildll adc mov outsl cmp nop and sbb movslq sti (bad) mov or mov cli popfq mov pushq sti adc xchg rex.WRX fwait adc rex.RX cwtl fnstenv xor lret sub fdivs xchg and fistpll xchg xchg pop mov or push jg fbstp cmp pop xor rex.WRB xchg ja loop fwait or icebp and (bad) pop testl and hlt and jns (bad) movabs push mov sbb (bad) data16 clc or test shr mov loopne movabs (bad) pop idivb lock mov out fwait rex.RX rex.WRXB jbe sahf pop xor fcmovnu add add (bad) (bad) and pop (bad) nop in rex.B jge (bad) pop scas (bad) rex.R (bad) (bad) mov (bad) movabs addr32 xchg (bad) lods xchg std (bad) cmpsb (bad) add cmp scas sbb int3 or jmp repz rex.RX and or sbb (bad) fwait jge fnstenv sti ss mov xchg leaveq rex.B retq fwait (bad) pop (bad) mov mov mov jnp sbb sbb sbb test add xlat push rex.RXB rex out sbb add fwait stos shlb xchg pop rex.W fwait lahf push rex.WRXB sbb rcrb sub push rex xlat cmp fistpl jns (bad) and sub cld insb fcoml rex.R add ss and mov int3 (bad) and sti fsubrs xchg pushq adc (bad) lahf adc jnp out outsl mov (bad) fwait sub test js jb rex.WR loop in pop xchg ja rex.XB cmp (bad) fwait and (bad) test lods repnz rex.RB fwait xor and imul (bad) pushfq (bad) sbb or adc hlt movabs (bad) pushq mov pushq sbb cmp push adc and sub imul sbb sti jno sbb fs xchg fwait insl vcvtsd2si adc (bad) retq jmpq gs icebp mov int3 rex.WRX sbb retq pushq cmpsb jp scas adc fwait push test (bad) stc cmpsb (bad) fwait (bad) sub pop and ficomp rcr cmpsb pop fwait (bad) std (bad) (bad) subb push (bad) je mov xchg cmp jno (bad) xchg fnop jge shl movsb (bad) sbb xchg sbb cmp mov pop fwait out gs mov cmp mov loop (bad) stos push add mov rex.WRXB movsb xchg mov movabs (bad) movabs lods sbb (bad) cmpsb jmp rex.RB add scas xchg mov movsb test fwait loopne add sti mov movslq (bad) xchg add cs pushfq mov mov sbb pop lret (bad) cwtl je rex.WR rex.WR addr32 cmp xchg gs mov pushfq rex.RXB sbb adc dec xchg push test add rex.WB lahf sbb lret std and fwait add testb out add jae clc fwait imul clc cmp lods pop mov out pop rex.RX xchg loopne fwait (bad) movabs shl outsb or sbb (bad) mov mov (bad) fwait scas (bad) xchg rex.RX add rex.XB movsb lock mov ja adc adc adc xchg jge rex.R cwtl (bad) or add (bad) rolb fiaddl pop stos int3 pushfq jae fwait scas xchg es rex.X or or cmp fwait xchg adc ja imulb std (bad) sbb sub or mov xor repz ror adc sub mov jp fildl ficomp mov mov outsl fildll int lret in push cmp (bad) (bad) (bad) es lahf rex.WRXB xchg mov mov lock (bad) jno hlt adc (bad) sbb (bad) rex.X (bad) repnz jmpq xchg movslq pushfq fwait mov movabs (bad) xor movabs cmc sbbl push cmpsl pop imul mov jae lret rex.R adc sbb sbb jrcxz out jg mov sbb retq stc test imul rex.RX movabs outsl pop (bad) jne fisttpl add mov rex.XB jmpq rex.WRXB jg js (bad) push (bad) mov stos mov decl xchg sti movabs mov ja lret (bad) pop rex.WRB fwait mov mov and loope fwait sub rex.WR rex.WRB (bad) fwait cli jp mov fwait jge or (bad) pop pushfq push adcl xlat sbb pushq stc sahf jp mov sub out sbb int or pop in mov adcl jmpq mov out callq lret ds xor and cmp mov cmp cmpsl fwait movabs (bad) sbb sarb and sub adc rol rcrb gs rcrb int lods rex.WXB (bad) (bad) fwait and (bad) sub stos mov fwait xchg adc (bad) rorl fwait sbb lahf cmp fwait xchg rex jmpq fwait pushfq outsb (bad) rol (bad) (bad) xchg fwait xor (bad) rex.WR movsl fwait loopne movabs insb (bad) loop pop mov insl andl add fwait jg out in jno add rex.X xchg mov fwait xor out lock adc add insl or fwait cmp lods push (bad) test rex.WX adc fild adc push data16 (bad) add gs rex.WX pop movabs mov jae fwait sbb jle xchg fwait cmp (bad) rcrl orl fst mov fwait jb (bad) out mov sub xorl and outsb out mov and xchg hlt sbb adc loop cwtl mov rex.XB sbb (bad) sbb (bad) add cld pushq sbb xlat sbb iret hlt jge sub (bad) ja repz pop (bad) sbb pop popfq mov xlat shrb mov mov lahf (bad) adcl (bad) fild push (bad) (bad) mov imul mov (bad) add mov movabs pop jnp cmpsl int test sti mov out xchg or cmpsl mov push movabs movabs loop pop and sbb (bad) jbe xlat xchg and xchg shr cld xchg pushq (bad) and retq xchg or (bad) cs popfq (bad) jmpq imul fbld pushfq (bad) callq rex.WRXB cmp lods xor (bad) mov sbb xchg (bad) (bad) test lret adc xor jle xchg (bad) sahf mov add jmpq mov (bad) push (bad) lea add rex.R xor xchg mov je sbb ja rex.WB adc rex.RXB mov movabs xchg jne retq lret packuswb pop jrcxz pop shlb rol leaveq mov sbb or jb sti cmpsl xor cmpsl lret mov (bad) pop stos (bad) mov movslq xor (bad) jmpq pushfq retq add cmpsb pop sbb (bad) push jnp,pn orb sti test hlt sbb pushq (bad) xchg (bad) enterq mov pop cld rex.RXB movsb out js out mov fnstenv cmp xlat (bad) sbb jbe sub pop lret sbb push out jo rorb icebp (bad) xor loope cmp rex.WR xchg push ds data16 cmp (bad) fwait repz sbb adc fwait out je cmpsb adc lock xchg mov adcb fstps (bad) mov mov imul fwait add lahf xchg fwait stc mov rex.WRXB rex.RX mov xchg (bad) std (bad) andl fwait jb cld (bad) rex.WRX rcrl jle adc and cmpsb loop or (bad) push std or repz orl lret mov loope xor xchg cmc retq in jrcxz sbb adc fwait add jns pop leaveq add popfq sarb (bad) fwait (bad) movabs (bad) cs rex.WX (bad) cmc or rex.WXB (bad) xor rclb out lret rex.XB gs sahf cmp sub repnz pop in adc rex.W rex.RXB and or mov js idiv pushfq xchg sti or jge pop rex.WRX fwait mov sub rex.WXB jnp jp stc loope (bad) (bad) fwait pop jrcxz mov (bad) shlb jno mov negl and insl rex.WX pop cmp (bad) sub rex.WRXB xchg cmp xchg cmpsb (bad) cmp mov ljmp movabs movabs cmp jb jmp lock ss sahf incb xor add rex sbb push stos mov mov sahf lret add int movsl (bad) add sbb push out pop ja fstpl rorl stos cmpl xchg sub rex.X (bad) lret xchg adc in push sbb xor fwait movabs fistpll xor xor and movslq (bad) and pop (bad) jae (bad) sub nop cmp mov pushq (bad) jg add sbb (bad) xchg sbb xchg loope test (bad) sbb mov ds cwtl xchg sub push fwait (bad) movsb leaveq mov rorl mull ficompl and or push pop pop in mov insl adc mov mov cltd scas (bad) (bad) (bad) stos stos xchg and rex.RXB jnp add lods int and pop xlat sbb (bad) neg lea rex.WR pop lahf sub rex.XB cmc xchg (bad) sbb movabs fwait rex.R sub fwait xchg cmp mov sub fisttpl mov sbb hlt sbb mov fwait push sub fistpl cmp sbb loopne mov mov fisttp adc (bad) sbb sahf (bad) sbb stos out std (bad) loopne fwait or (bad) lret pop cltd fwait rex.RX sbb lock rex.B jg fwait push ss jmp xor xchg push and fisttpl xorb pop sbb in (bad) sbb xchg loopne xchg jge fbstp add mov fwait (bad) mov (bad) (bad) cmp movsl adc out es out mov (bad) sbb pop pushq in sbb out (bad) push (bad) scas clc rex.WX sti fwait lret fidiv xchg lahf roll add loope iret (bad) adc adc or adc scas (bad) fistl pop out push and sahf mov mov out xchg push (bad) rex.WR je (bad) nop mov cld push mov jmpq cmp (bad) repz (bad) out adc fwait cmp xchg repnz mov xor sub push jnp (bad) loop fwait mov jmp fucom pushq fwait roll lods mov sub sub and pop add jae repz xchg (bad) sbb sbb lret cmp jo xlat jmp repz mov and loope sbb retq rorl fwait icebp fstpl test and (bad) cmp or sub pushfq sarl xor rex.WRX xor add jg subl stc movsl fidivl xchg vpshuflw and xor stos cmpsl mov scas movabs repz insl (bad) push jge pop movabs pop scas int jrcxz push out rex.RX mov xchg imul lock (bad) icebp movslq xlat mov ljmp fwait leaveq sarl pop fwait jno push add scas mov js jl xchg out fwait in scas xchg (bad) movabs (bad) (bad) stos jb negb mov (bad) cmp fwait pushfq lret repz iret mov fcompl and jb cli (bad) ficompl stos fwait cwtl xor sub popfq lahf adc std (bad) fwait loop pushq jle rex.RXB callq sub push (bad) scas sub add iret bswap in sbb xchg rolb rex sbbl push (bad) or mov rex.WRX movabs sub xchg (bad) fwait lret popfq out (bad) fdivr jle addr32 sti jno in test retq (bad) xor addr32 (bad) movabs stos adcl xchg or int3 adc je and pushq xchg jbe mov iret xor mov fwait jl jrcxz mov stc push sub gs fwait jne mov sbb mov fwait cltd and or mov fwait cmp cmc out mov lods test out test mov loope retq fwait cld sbb push fcoml pushq (bad) mov movabs nop xchg fsubr add xchg jne imul adc rex.XB fdivp lret mov movslq jle mov pop mov (bad) rex.B rex.WRB fwait adc fdiv add movabs adc adc (bad) outsl imul fwait cs retq mov jle in retq lods mov or (bad) ss movsl xlat and repz fisubr push adc pushfq jns lret (bad) notb imulb in mov stos xchg xor fwait pop insl pop push sbb jae sbb (bad) idiv xchg out icebp push ss mov fnstenv ja cltd fwait add or jnp imul and in fwait adc (bad) sbb stos movsl jmp push jg xor pop add int rex.WRXB rex.WX iret mov (bad) in cmp hlt movabs jae jnp push clc int3 push jrcxz movswl pop negb (bad) in and pushfq xchg mov imul xlat test imul push adcl (bad) xor sbb (bad) sbb (bad) rex.WRXB popfq outsb fcmovnu mov (bad) mov (bad) mov cmc popfq fwait stos out rex.RX iret lock cld lret add sub or sbb cs mov pop xor (bad) in flds (bad) mov sbbb and (bad) fwait (bad) mov and mov fwait rex.XB jp,pn fldcw sbb add xchg jmp movabs std or xchg in or sti ss movsl and cmp xchg rex.R xlat jmpq sahf fstpt jnp sub xor pop add xor rcrb mov (bad) std pushq sbb mov adc xchg jg cmp movsl sub test cmpsb popfq in jno popfq sti cs ja retq (bad) sbb xor adc cmpsb movabs xor lret (bad) pushfq addr32 movslq cmp or mov xor (bad) loop sbb std xor adc fwait xchg and push jns sti fwait mov sbb cmp fisub mov rex.WRX rex.RX fmuls sub fwait test fistp fcmovnu andl pop rex.XB (bad) fprem sub (bad) movsl movslq cli sbb retq sub ja and out mov push cmpsb in rcrl or jge sahf mov add xor fwait mov mov add jbe rex.XB adc mov pop (bad) pushfq fwait jge (bad) fstpt movsl rex.WX ficom push in fsubr push movabs fidivrl pushq fwait mov addr32 (bad) rex.WRXB pop (bad) imul jns and (bad) test fwait (bad) rex.RX lea loop mov lock mov (bad) cmp movabs rex.RX loop push outsb mov fwait scas (bad) (bad) in (bad) mov sub sub xlat (bad) sub sub mov cmc in fwait rex.RX (bad) push sbb fwait test cmpsb in and mov pop sti clc mov cmp out xchg pushq hlt or or push js rex.WRXB mov retq retq loopne cmp adc ds sbb mov shll (bad) mov es divb lods mov and adc and popq pop repnz jae xchg sbb (bad) cmp (bad) and pop sub enterq xchg pushq rex.WB fbstp xlat (bad) gs pushfq ja movslq mov loope xchg out and sarl jge rex.RX fcmovnbe jnp xchg cli sub xor mov mov and xor add sub (bad) out rex.WX mov lods jmpq dec fildll xlat cltd rex.WXB (bad) rex.WX sbb push xchg cmpsb mov or pushq in jne mov fs push xlat loop or xchg sbb or pop rex.B add rex.WR int3 cmp movslq iret (bad) mov adc or cmp out (bad) jmpq pop rex.WR sub lods xor data16 mov jle or mov add lock pop mov pop ja test shr add adc addr32 jae mov imul (bad) movabs fwait push (bad) xor or (bad) pop ja mov loop adc outsb in fwait sbb imul mov (bad) fwait test mov sbb int3 es mov mov cwtl add mov (bad) sub lea jns adc cmp insb adc movsb jno addr32 (bad) lock movsl cmpsl fwait jle shrb sub callq fwait xchg js add fistl fwait (bad) (bad) xchg jb mov sbb cmpsb xchg (bad) xor (bad) out mov rex.XB mov cli sbb test jns (bad) xorl mov js rolb xchg (bad) add sbb rex.XB (bad) loopne (bad) hlt sbb pop jrcxz mov mov fldt retq test mov jl lret jb (bad) rex.XB cltd push stos sarb in xchg insl sub sbb (bad) fisttpl and (bad) add (bad) or movslq addr32 movabs (bad) push sub rex.WXB rex.X ds test rex.R cmp and popfq (bad) sahf or jo lret mov cmpsb fwait adc adc (bad) jmp sahf fcoms fwait paddb push xchg cmpsl (bad) (bad) bnd js mov and scas push mov sahf rex.WRB adc test std movabs iret or (bad) std and fwait jrcxz movslq (bad) push sbb cmp (bad) add in xor mov push and fwait jo jns jg shrl stos mov add pushfq mov ss fwait push mov lods (bad) lock jo push out icebp (bad) in cmp cwtl (bad) jae or ficomp pop xchg cmovp stc fwait sbb (bad) fwait movslq rorw mov lret test rex.WX rex.WRXB jp shl cltd outsb (bad) cmp mov ja push mov insb (bad) add or pushq add pop addr32 insl mov cltd xchg sahf rex.W stos jl (bad) add xchg jg mov cmp fbld (bad) je ja push int3 fdivl and js sbbb rex.R rex.WRXB adc jl rex.RXB clc cmp rex adc jmp adcl pushq or and rex.RB jrcxz rcll jmpq add add outsl movabs (bad) pushq sbb and sar lods xorl jb lret (bad) (bad) jb fwait or pop jnp (bad) fwait jb cmp xchg (bad) sbb orb push rex.WX push out (bad) ds pop scas insl in xor in mov (bad) shl xchg xorb retq mov xor rex.RB hlt notl lret jo mov xor mov rex.RX pop cld (bad) jbe and (bad) jo mov add outsl xchg int3 and or rcrb sbb mov rex.WXB rex.WR xor rex.WRX fstp cwtl jl (bad) shrl pop cmpsb xor mov xchg shlb insl fwait repz mov pop int lea pop movabs movabs cltd mov pushfq stc fildl jl fwait (bad) lret in (bad) rex.WRXB push scas jmp xchg pop push (bad) fwait jbe in and jae (bad) repz rex.WRX adc fwait mov sbb and xchg test lahf icebp and gs bnd fwait (bad) xor out loop (bad) test out sbb test sub sti xchg in fdivl stos pushq js adc xlat jae fwait pop pop add push jp mov in movsl in jmpq or popfq sti jle sub push fwait adc ds jno push fwait test xchg nop jns addr32 fwait xchg rex.RX xchg shrl (bad) add push movabs push fwait imul jmp and mov scas pop cmp fmuls jl pushq fisttp lret adc or movabs out push loop fwait (bad) jmpq fwait mov icebp testb sub push xchg mov (bad) fwait leaveq shlb cmpsb sbb fsubp (bad) mov add jns (bad) cmp push ds rorl retq mov (bad) fcomi iret ja imul mov xchg mov jge cmp andl fwait jo xlat push xchg (bad) pushq fwait mov mov mov int (bad) push sbb jge (bad) xor repz mov xor cwtl mov sbb outsb xlat (bad) cmp sub sbb mov (bad) retq push mov pop push mov xchg and or mov cmp jnp loop fwait (bad) xor rex.WRXB sub enterq retq (bad) (bad) mov cli and mov fsubs cmpsb fwait add add repnz scas (bad) mov fwait jb lods lea push mov js jo jmpq fwait in retq jns sahf add rex.RB jmp (bad) add mov xchg cmc movsb mov pop add mov and sbb mov fwait jp fmull hlt jb insl fwait xor (bad) stc xchg adc ss pop outsl jo rex.WXB cmp fwait adc imul out movabs ja sub cmp lea repz and fwait sub xor negb pop pop lea fwait sub cmp fwait mov and std stos rex fwait insl pop or xchg pushq push pop add loopne (bad) loop js rcl xchg data16 iret cmp lret mov xchg sub out xchg xchg cmp ds add sbb (bad) jmpq xor (bad) movslq (bad) repz rex.WXB rex.WR fwait scas jno sbb jle and fwait retq orl ja sbb addr32 js xchg sahf jo retq add fcomip in cmp rex.WX pop movsb or (bad) jne adc int add cli mov rex.XB push movabs out mov pop jl (bad) cmpsb (bad) adc mov pop sbb fistp (bad) mov mov xchg mov mov stos fwait jbe mov jno sbb test (bad) enterq (bad) mov jle out sbb xchg movabs (bad) and jrcxz mov fwait (bad) (bad) mov mov outsl fwait shl pop sbb fistpll cmp rcrl adc repz iret fstps (bad) mov callq fcmovne stc xchg xchg stos (bad) retq xor (bad) sbb pushfq loopne xor repnz xchg sub (bad) movabs fwait scas sahf xchg int cmp sbb shll insb or sub cmp test fildl or rex.W xor adc es and lret xchg cmc (bad) (bad) sahf je (bad) xchg fwait in mov (bad) mov xchg jns lods cli rex.XB mov nop lcall enterq lea jmp cmpl pushq (bad) leaveq xchg decb mov test rex.WRX jle (bad) cmp test icebp rolb or loop ljmp add scas out leaveq xor add xor in jmp xchg fidivr and jge (bad) adc sar cltd lret cmc retq pushq movabs repnz mov jb or (bad) pop jne rex.R jg jle ja in cld push sbb shr pushfq test (bad) mov sti cmp mov cli stc (bad) subb fwait movl callq mov imul fwait jmpq ss mov adc lret pop stos (bad) (bad) add scas cmp lret (bad) jmp push out push adc in xchg fs (bad) (bad) mov outsb sub xchg nop fadd fildl imul cmp add sahf (bad) jbe sbb push rex.RB loopne icebp rex.RX fwait lret pop rex.WRB rex.B and loope fwait jge testb adc hlt sti adc cltd xchg outsb fwait jae xchg (bad) jo jmp mov jae mov negl xlat jrcxz sbb add cmp sbb loop sti mov adc and fstps icebp (bad) pop fstpt (bad) clc fs cqto je (bad) (bad) or xor (bad) (bad) (bad) cwtl xchg enterq pushfq std mov retq out mov lods sbb nop stos retq fist cmpl mov rex.WR js jbe (bad) cmp scas jno add loope mov mov jb rex.R enterq rex.WRX rex.WXB mov data16 xchg fwait mov callq flds xchg fwait iret xchg mov sbb insb fistpl cs (bad) jl loop adc (bad) test rex.WXB adc fwait movabs push pushfq xor sbb sahf or stos sbb (bad) je cli fwait mov (bad) mov rex.RX fwait adc enterq pushq sbb sbb fs push cmp pop repz (bad) (bad) out (bad) rex.RXB or cwtl jg adc addr32 mov (bad) test mov jle (bad) sub cmpsb repz es adc (bad) and lret add (bad) fwait rex.WX adc js rex.RB adc rex.X rcll mov rex.WB sbb sub stc xor fwait in in mov mov cltd (bad) nop xchg sbb cmp callq rcrb jmp add rex.WR adc (bad) sbb jns (bad) insb xor iret (bad) add fwait mov rex.X int (bad) or ss (bad) test sub xchg push fwait rex.RB retq xchg (bad) jae mov std enterq xor sbb stc mov loop push jb movabs (bad) adc add outsl (bad) (bad) (bad) cli mov mov adcl and cmp lea (bad) sub mov mov (bad) cmp (bad) (bad) movabs and leaveq pop mov sti sbb pop negb movslq sahf or push xchg pop mov add adc pop stos pop jmp outsb out iret (bad) (bad) je sbb xor rcrl push ja rcll add sbb cmpsb (bad) sub jb mov out pushq or adc (bad) (bad) xchg fnstenv mov (bad) (bad) cwtl xor insb push xlat add pop loope sti mov jne jne (bad) (bad) and sub (bad) cmpb mov pop xor mov rex.WB pushq pop test ja mov mov xor xor rex.WR mov and jl (bad) rex.B jne cli lret push es (bad) in rex.WX jmpq pop jge popq add fadd pushq (bad) rex.WR cwtl pushq jmpq lea xchg rex.X jge pop out mov sbb js addr32 movslq lods pushfq cli add pushq and pop hlt push jae (bad) (bad) (bad) cmc popfq pop rex.XB pop xchg (bad) sbb add scas (bad) pop movsb test jmpq pop loop mov mov sbb mov push jg out loope fcompl (bad) jmp test out test test es fildll movabs mov add movsb lret sbb or xor iret push (bad) callq mov push jb cmpsl shld stos pop (bad) (bad) cwtl movabs xor rex.XB jb in pop and sbb loope std or loope add stos je jb stos mov sarb xchg (bad) (bad) (bad) subl out fwait jo jae and (bad) cmp pop mov subb sub ja (bad) (bad) mov cli sti repnz and pop loop stos test mov stc cmc stos mov add loop rex.WRB rex.WB sbb repz in fs callq xlat add fwait push (bad) (bad) or (bad) mov (bad) mov cmp data16 adc (bad) mov xchg sti insl repz fwait (bad) pop cltd jl rex.RX (bad) (bad) addr32 rorl mov sbb fcmovne movabs stc adc jns scas xchg fwait leaveq mov sbb cmpl xor (bad) adc jl mov sahf or add mov (bad) jno (bad) (bad) test (bad) sti sbb movabs lock sbb push icebp in add std jrcxz cltd jo cwtl add sbb leaveq (bad) repz rex.WRB (bad) mov (bad) (bad) movslq or cmp (bad) callq (bad) rex.WRXB fistp sbb flds rex.WR (bad) or std (bad) in or sti fisubl pop test fwait rex xor xchg mov mov repz sbb or add lods jne movabs fwait cmpsl sub movabs imul fwait and fisttpll xchg fcoml ror mov (bad) (bad) mov (bad) xor and icebp test jmp std movslq (bad) repnz pop pop (bad) fimull out fs (bad) xchg sbb (bad) icebp rex.X out or xchg (bad) mov insb and rex.R sub fwait (bad) pop lods xor (bad) test jae mov movsb rex.X (bad) in mov sbb stos sbb mov mov jmp in add rex rex.XB fwait or (bad) cwtl fwait mov sub adc xchg lods adc xchg sub (bad) (bad) callq pop rex.RB test movabs clc (bad) xor cmpsb fdivl in mov fwait adc stos pushq push or sahf (bad) push jg sti add mov iret stc mov sbbl xchg out rex.X loop iret (bad) mov sbb push fidivl callq clc fwait loope (bad) jge roll mov cld jg xor cmp sti enterq xor (bad) (bad) repz (bad) fwait sub sbb push fwait lahf movabs pop cmp rex.X fwait (bad) movsl cmc push (bad) rex.WB sbb sbb outsl bnd fwait (bad) data16 pop adc pushq sbb mul outsb fwait out cld test mov cmp loopne adc outsl mov push fwait or fwait lret or retq (bad) lock adc xchg cmp (bad) xorl xor fstpt ss cmp push pushfq rex.R add pop fwait imulb lods cmp pop and callq fwait mov outsl rex cmp iret sbb mov fwait jae repnz icebp sub cwtl out insb je rex.WR gs xchg cmc xchg xor jp or retq test pop mov fsubr loope stc jl jle xor cs fwait and (bad) je scas (bad) fwait stos (bad) xor fwait in in out cli adc (bad) fwait push rex.X or mov jb sbb repz (bad) jmp sub adc fs (bad) jo out fwait in push lods mov retq xchg xchg cld cwtl pushq jrcxz pop fwait sub (bad) or stc lods sbbl sti addr32 rex.WR add cmpsl test sbb jns (bad) jg push fwait mov sub rclb (bad) fwait out clc jrcxz out enterq xorl xor sahf sbb repz sbb xor fadds movsl incb xor jne xchg (bad) (bad) movabs imul or rex.WRXB jge xor stos jl fildl (bad) test clc out icebp xchg sbb (bad) cs mov sbb movabs xchg mov pop rex.WRB movabs pop rex.X fwait in test cmp data16 lea movsb loope negl shrl hlt fbstp xlat (bad) int3 add xor xchg adc and fwait movabs and adc pop rex.WRX (bad) sbb rex.WX xorl rex.B rex.WXB mov xchg and add incl sbb rex.B mov sbb sahf (bad) sbb (bad) xrelease jmp cltd sbb mov push (bad) imul lea clc gs loope mov movabs jb sbb xor out sbb movabs pop jle jmpq sbb cmpsb pop (bad) (bad) (bad) add (bad) pop pop pop xchg sbbb sti shlb sub out xor rex.WRX lock mov and sarb test scas rex.RX or movabs andl callq (bad) cwtl (bad) (bad) sbb (bad) divb fisubl (bad) je pop rex.WRXB sbb fnstsw adc rex.X (bad) movabs stos (bad) jnp mov lea movabs imul sti (bad) (bad) or retq and sbb jge data16 jno jrcxz adc and xchg (bad) xchg sub xchg retq sub fmull cmc movsb cld cmpl mov insl scas bnd movsl mov nop pop jrcxz cmp adc cmpsb fwait xchg (bad) shlb sbb fnsave cmpsb hlt rcrb popfq addr32 fwait (bad) xor (bad) out pop (bad) (bad) fwait int3 sbb rsm mov push and outsb pop andl icebp mov adc rcr cmpl shlb fwait mov fwait xchg shll rex.RX sarl ficom mov pop outsb gs adc rex.W insl lret outsl jns lahf jmpq fwait addr32 sub (bad) mov lods mov rex iret fldt subb fwait xchg sti (bad) (bad) (bad) (bad) mov (bad) (bad) mov (bad) (bad) cmp gs rex.WRB rex.W fwait loope adc (bad) cmp fwait jp rex.RX sub imul movsb (bad) sub in fwait (bad) jno and sub sbb jb mov lret pop xor (bad) jl imul scas xchg (bad) rex.R andl (bad) and (bad) adc (bad) movabs xor test scas or (bad) retq mov scas adc mov jp xor push jg sub (bad) sbb (bad) (bad) (bad) fwait rex.WXB sbb imul xor (bad) or fimul rex.XB ja rex.RX scas and add (bad) mov fldt test mov pop mov sti lods clc movsb or (bad) rex.WB (bad) gs xlat subl in (bad) sub adc test stos jp iret jle cmp jnp or callq fldt xchg fwait mov insl lahf std push out lock (bad) rcl lods rex.B data16 fwait loope xchg (bad) out fidivr std callq sbb sub jmp add fwait rex loopne iret push retq sub lods cmpsb xchg outsl out mov mov (bad) rex.X xchg rorb (bad) adc fcmovnb fsubr pushq sbb xor imul mov fldt (bad) adc xchg rex.WB xor jb jle jrcxz sbb (bad) (bad) (bad) ds push scas outsb movabs (bad) (bad) mov fs xor callq (bad) (bad) sbb lock outsl pop mov movabs or (bad) and fcomps rex.RX rex.RB movabs gs cld (bad) shrb or mov sbb fildl (bad) (bad) callq sbb test pop rolb mov xor (bad) loop out (bad) rex.RB adc jo scas fistpll leavew lods ficomp callq adc (bad) jge (bad) mov (bad) jns outsl mov jle gs cwtl cmp in add mov sbb cmp sub (bad) sti jmp jg hlt jmp or lret (bad) std data16 mov rex.B xlat xchg pop push ss cmp movslq push adc jne mov mov fwait adc (bad) retq int3 (bad) mov cld sar movabs sub rex enterq push fist or loope rex.XB outsl rcl fwait (bad) jmp ds jp sub scas jl add cmp pop jns fwait lret (bad) sub xorl xchg xchg (bad) je retq rex.RXB notl fisttpll insl cwtl (bad) mov lea jnp sub or out ja fwait mov (bad) (bad) jmpq pop adc sti (bad) adc cmpsb sub add (bad) in (bad) pushq adc std iret push fwait lock xor rex.WR jb gs fwait js hlt sub cmp jno stos (bad) lock jl and rex.R cmp xor (bad) cmp (bad) iret cld sbb sub adc mov mov rex.W (bad) and (bad) (bad) scas leaveq fidivr sub mov (bad) int3 xor pop lret addr32 lock (bad) mov (bad) and sub fwait mov lods imul xchg test jrcxz scas sbb rex.WXB jmpq add fwait mov rex.RX mov shlb add rex.WXB mov rex.WB testl (bad) sahf and (bad) mov stos (bad) sbb mov sbb sbb movabs rex.W subb rex.WXB sar xchg (bad) xchg (bad) rorl cmpsb fwait pushq (bad) es xchg int3 movabs lea sbb mov rex.R addl loop lods (bad) rex.WB mov xor adc imul es cmp rex.WRXB cmpsl pop cmp fwait test sub (bad) sbb cmp lea xchg popfq mov fcmovne cli out stos or test xchg in xchg cmp (bad) orl test cmc std leaveq jno test ds out icebp (bad) adc add retq mov mov out stos xor adc mov cmpsb jmp rex.R fwait add add (bad) movsb mov jp (bad) insb add and fldl and fdivs mov scas fwait (bad) xchg cmpsl (bad) or iret and cmc mov jl loop idiv mov scas sahf cli xchg jg cmp mov negb fwait pop pop in loop fldenv (bad) fcmovbe push (bad) rex.RB rex sahf lods push out fdivrs fwait adc popq fwait xlat test add fbstp fwait cmp (bad) adc fwait (bad) cld jno pushq pop popfq rex.WB fimull movabs sub hlt (bad) jb rex.WR fwait rex.RB (bad) es stc sub (bad) stos callq std jno outsb add sbb or cwtl mov scas and inc xor loopne stos and (bad) pop jb fwait add andl adc mov imul rex.WXB fwait cmpsl jge rex.RX sbb lret pushq enterq xchg sub movsb xchg rex.X xor pop xchg repz out loope retq xlat and jl mov adcl mov imul jb add sbb lock sub mull pop ja push jl in sahf out iret rex.X pop movsl mov sub xor sub scas rex.X xchg callq sbb add pop (bad) xor cmc rex.WXB (bad) xor (bad) mov lea jne enterq pushfq sbb and pop (bad) callq rex.WRX sub iret jbe cmc negb sub sub add cmp and xchg rex.RXB sti rex.B addr32 or fwait (bad) (bad) xor cmpsb cmc (bad) jp outsl fwait in (bad) (bad) rcr insb fistpl imul (bad) adc nop rex.W (bad) cmp mov pushfq lcall (bad) fwait test movslq jno stos (bad) int scas sbb (bad) jae fidivl cmp lret movsb gs outsl in mov ficomp (bad) (bad) pushq movabs outsl sbb (bad) loope push fwait int imul pushq out add pop mov lret rorb sbb mov andl cmp pop out movsb jne xor rex.WB rex.RXB test rex.WB repnz fldt stos fwait adc add fucomip sub (bad) xlat pop in test fistpl movsl jp adc sub lock xor (bad) int3 pop popfq movabs add or leaveq rex.RB xchg mov fistl and (bad) (bad) stos adc mov xchg fistpll hlt movabs jne rex.WRXB fwait jbe jns push mov (bad) fstpl stos (bad) in js lret cwtl (bad) add sbb sbb callq xchg mov fbld xor bswap (bad) jns pushq (bad) (bad) push (bad) (bad) or sbb and (bad) and jbe xor gs mov (bad) add mov js add mov push and jbe xchg sbb jae (bad) bndldx (bad) rex.WXB fistpl ficompl sbb enterq imul mov adc mov test or std iret cmpsb fdivrl xchg (bad) xor sbb cld lea rex.RX cwtl mov in incb fbld in push sbb stos jb popfq mov out add imul sbb rex.RX ds (bad) addb imul mov movabs add adc mov (bad) sahf sbb (bad) test xorl (bad) push cmp cmp jg negl mov xlat (bad) jae pop clc divb rex.WRX rex.RX mov stos mov xor (bad) mov (bad) (bad) imul pop jp stc lods rex.WX rex cmc or jns loope and or pop lret xchg pushfq rex addr32 movslq lock rorb add ss callq lret jae fldz rex.RXB retq cmp ja fsub (bad) gs (bad) loope adc fwait in leaveq pop or sbb xor sub fwait jg fsubr push (bad) (bad) mov cmpsl sahf (bad) jbe push push mov addr32 rolb mov cwtl mov sbb loope mov cli mov xor (bad) mov xchg rex.RXB adcl adcl loopne mov popfq outsb fwait jp (bad) cmp pushfq add fwait sub jrcxz fsubr jle popfq pushq pop and fwait mov scas xlat rcrl loop and mov (bad) jno outsl (bad) sbb sarb icebp xchg (bad) lea xchg insl xor mov std (bad) fwait int jp cmp sub add rcrb stos xchg lock (bad) rex.WB rex.WXB repnz movabs add cltd iret lods sarl loopne sahf pushq rex.WR rex.WRB in (bad) or fwait (bad) movabs add jne and iret mov pop fwait and lea cmc rex.WRXB lock (bad) fwait and fstpt add mov fwait cmpsb (bad) (bad) and fcomip fisubl fwait mov lock mov pop out mov xor stc sbb std ds fwait mov cs jb rex.RB (bad) enterq mov push sarl data16 mov rorl (bad) cmp rex.WR (bad) (bad) nop fstpt (bad) int cmpsl (bad) loopne std sub add in (bad) rex.RX sub xchg in mov subl imul int sti (bad) mov pushq sbb jmp (bad) pop add jl (bad) and loope shrl mov fldt movabs fisttpl and sbb xchg int fs pushq leaveq sub mov rex.WRXB fisttpl xchg and adc int3 je (bad) cmp (bad) fwait (bad) jg (bad) or shr cmp movabs (bad) icebp pushfq mov (bad) or ja andl (bad) lock sbb imull loopne sar cmpsb lahf insb lret (bad) int3 adc scas sub pop (bad) js icebp cld rex.RXB fwait xchg cs repnz cwtl pushq int cltd fwait cmp sbbl fsub add push sbb icebp rex.RX sub rcrb pop cld mov cwtl mov and (bad) mov jno (bad) movabs fndisi(8087 cmp cwtl sub sub retq rex xchg sbb fwait mov std (bad) sahf sbb lods pop (bad) (bad) sbb xlat sub pushq adc movslq pop and push xor sti (bad) pushq add rex.W out and (bad) out pop sti roll cmpsb adcb fldenv pushfq negl (bad) mov sbb mov jp pop movabs adc mov movslq mov sub vdppd test loop stos retq gs sbb (bad) mov imul (bad) rcrl jmpq (bad) rex.XB out pop repnz (bad) ja xor and (bad) pop xchg jg (bad) (bad) outsl mov in lods mov fcomps callq jne rex.WRX ss stc mov fildl xchg pop add sbb retq rex.WB jmpq rcrl imul or sahf sbb mov fldlg2 loop jb (bad) movabs rex.WX sub rex.WXB fcompl pop movabs xchg stos cmp fwait xor repnz (bad) (bad) callq decb movabs or and cmp mov rex.X fnstenv and rex and (bad) mov imul sbb fwait (bad) (bad) cld jl add rcrb mov sub pop and add stos add stc pop je fwait adc notl (bad) movsl jnp sbb mulb mov rorl (bad) rcrl sub insb (bad) sti xchg es pop add (bad) (bad) mov incb movsb mov cmp mov and in test sbb fwait xor sbb (bad) mov sbb rex.WX es std rex rex.WB movslq lret xlat mov mov (bad) in mov fiaddl sbb rex.RX (bad) test popfq xor test lods loope movabs sbb jns (bad) jp hlt fs scas cmp (bad) pop jae std rorl mov fwait rex.WRB or fwait (bad) imul fldl sub cmp mov rex.WRX fwait mov pop or in out or fwait (bad) or mov or sbb and sub fadds (bad) rolb fwait xchg adc xchg movslq std enterq and stc imul mov (bad) fistpll lret mov fwait sub jl lea (bad) xor popq stos rex.WRX sub xchg xchg sbb and rex.RB icebp fwait cltd jmpq mov (bad) (bad) (bad) pop and mov and jno pop popfq xchg mov (bad) xchg push jmpq (bad) jp mov (bad) or xor and jmpq (bad) add out fwait cwtl add rex.RXB xor mov sbb cmp pop out xchg ds and and mov fwait mov jns rex jb sbb xor pop (bad) negb sub int3 sbb fwait movsl adc out sbb test fwait add rcr fwait (bad) hlt cmpsb mov jmpq mov mov (bad) out add mov rex.WB or shr mov fstps push movsb jmp es (bad) in mov add sbb add fisttpl (bad) movabs sti (bad) movsb xorl sbb rex.W ds mov jrcxz (bad) xchg xor mov mov and jne push cmpsl je fwait pop mov ss or andl (bad) (bad) stc negb sub imul loope fwait callq sbb fwait (bad) pushq xchg rcrl mov or mov rex.WX fwait (bad) idiv rex.W adc xchg movabs fwait cmpsl orl add (bad) imull rol addr32 lock (bad) xor adc rex.WX fwait repnz rol fwait movabs je,pt mov (bad) repz jl fwait out rex.RX loop adc sbb cmpb fildl jrcxz (bad) (bad) mov pop cwtl pop loopne hlt scas (bad) xor mov fistpl out mov outsb rclb (bad) (bad) add lret xchg (bad) xlat fistp xchg mov xor fsubs xor add xor adc int3 cmp jmp out (bad) rex.WRB and mov xor (bad) loope in iret sbb (bad) or sbb (bad) (bad) data16 cmp (bad) enterq jg (bad) sub movabs add rex.R xchg xchg imul xorb pop (bad) sub rex.WB sbb xor (bad) xlat or jbe (bad) (bad) cli jae rex.R repnz ja (bad) test xchg pop lea xor jnp fwait (bad) (bad) rex.RB xor pop cmp adc movsb xchg fdiv (bad) fwait (bad) insl mov pop iret addr32 push mov cltd xor lret popfq (bad) rex.WXB fs fnclex cmpsb jae mov (bad) jge xchg loopne xchg or jmpq mov testb or add and sbbb rex.RXB loopne hlt (bad) insl (bad) stc xchg nop jmp mov out fisubr or and iret jne xchg sbb (bad) (bad) mov xor data16 mov pop icebp or fild jl xlat or std xchg fwait imul sub cs sbb pop sbb mov cmp mov in add fwait (bad) jl (bad) push fstpl callq je add test sar push and out pop (bad) add sahf lret (bad) fmull repz adc and (bad) add sbb rex.RX roll xchg fildl xchg fwait mull or (bad) loopne icebp xor xor cmc popfq pop (bad) or rex.WRB cmc sbb in scas stc sbb imul sbb jmp mov mov add lret fs shl mov xor jb rex.X adc fwait lods pushq imul cmc retq fndisi(8087 (bad) fwait pushq adc pop (bad) adc xor mov jno fwait loopne and xchg (bad) cmp fwait add mov test jb or cwtl ja repz push xchg movabs rex.WRXB fwait or sbb shrl cmpsl sbb int3 test (bad) insb cmp sti jge xchg mov (bad) (bad) jg movsb fsubp je test hlt (bad) rcrb icebp jl (bad) mov (bad) xchg (bad) mov xchg (bad) fs xor or mov jbe flds rex fwait es (bad) fwait rex.RB insb cmp sbb hlt cltd sbbb rex.WR out fwait cmp add movb adc fildl orb retq scas and (bad) data16 jns sarb rex.W jle jrcxz (bad) icebp add (bad) fwait pop adc cmpsl fwait xchg mov jb cld xor movb fwait add div test stos leaveq lods rex.RX lahf (bad) fstpt sahf rex.WRB imul cmp jae ja (bad) rex.RB (bad) fistl mov pop sbb push test add cmpb or xchg cs mov rex.W adc or int xchg jae sub lea mov ja cld loop fwait imul cmpl sbb sbb loopne outsl (bad) test mov loop add sbb jmp or cmpsl (bad) xchg xchg and fmul rex.R fwait in rex.RX hlt jl rex.XB fwait clc lret sbb out or xchg cmpsb lods sbbl insl sti movsl pop fsts or cmp sbb retq add xor cld mov cmp (bad) sbb xchg rex.XB test mov mov (bad) hlt xchg rex.WX in xchg popfq pushfq scas (bad) popfq push stos retq (bad) (bad) cmp loopne pop fmull push out (bad) loop cmpsl movsl sub sbb scas fbld roll sbb mov jg sbb cmpsl add adc rex.WX push push xor xchg xor roll jb in rex sub (bad) (bad) (bad) sbb movabs pop and adc retq jmpq stos adc fs int3 sbb ffree mov push xchg mov ja rex.WR lock pushq test pop (bad) ror push iret sbb pushfq cwtl (bad) adc fsts xlat pop mov fiadd sahf scas mov pop push jrcxz (bad) mov insb pop cltd (bad) rex.WRB (bad) sbb pop movslq sub data16 add or (bad) mov (bad) jne outsb or rex.X cs rorl orb lods pop push fcomi mov sbb (bad) stos ds (bad) (bad) (bad) in fdivrl loopne xor (bad) jge stos or mov mov (bad) jbe fstpl push insl (bad) sbb xlat out add (bad) sti mov test mov stos adc sbb pushq sbb and cmp movsb xchg rcrb loop (bad) (bad) stc clc in mov (bad) fild xchg lret (bad) jns (bad) rex.WB test fnsave scas add pushq in cmpsl mov push (bad) (bad) clc pop movabs rex.WR cmp sbb sti xchg test xchg fdivrl (bad) in and (bad) cld cmp in data16 (bad) mov (bad) jl mov (bad) fbld loope cli push andl mov rex.WR jge mov fimul test jle (bad) fldpi test in sbb rex.RXB rex.X xor mov (bad) stos cmp xor loopne fcomp popq rclb xor movslq retq (bad) jb push js int mov rex.WX sbb ds js fs movabs (bad) pop xor (bad) sbb addb (bad) (bad) je sbb sub jle iret sbb pop push (bad) (bad) fwait (bad) jp push jbe enterq (bad) rex.X imul mov xor jmp sbb out lock jmpw std push pop push in movabs jo and (bad) orl or (bad) fwait cmp or in mov loopne lret cmpsb ja outsl movabs (bad) add loopne rex.RB mov xorl mov pop and xor pushfq xchg and data16 and fwait lock push jmp mul es scas sub xchg (bad) mov addr32 negb add movsl fwait mov add push sbb scas sbb int3 jae and add adc jge (bad) loop incl xchg rex.RB xor mov jo pop cmp rex.WX pop (bad) pop mov fwait (bad) and mov (bad) xchg xchg lock fwait pop sub retq rex.WXB and adc retq callq mov addl xchg (bad) pop push movslq xchg mov callq jne mov jb (bad) (bad) rex.WRB or (bad) (bad) mov mov in (bad) out fwait jo or rex.WR add test and cmpsb (bad) xlat gs fsts icebp test imul sub cmp (bad) lret xchg pushq fwait sbb pop jo sbb pushq fwait sbb push fs mov (bad) fwait (bad) jg and (bad) je subl in xor rex.WX (bad) jge movabs xchg fwait xor rex.WRB out rex.XB rex.R push test ja (bad) lret test rex.WRXB push sbb add (bad) or fwait repnz js cmp (bad) lret in scas mov lret (bad) popfq sub leaveq adc insl sarl pop cmp loope mov fwait xor (bad) std movq fwait sub fdivrs (bad) scas or cmp push sti callq sbb es (bad) or push push mov (bad) xchg negb sbb test sti cmp and (bad) fwait and xor sbb (bad) (bad) cmp sbb jl (bad) cmpsb loop cmc xor pop ja mov outsb and cli ds add sahf in sbb and pushfq or or adc add popfq (bad) cmp sti (bad) mull jb sbb fmuls rex.WB pop test sbb mov rex.WRXB rex.RX (bad) fstpt movabs sbb (bad) loope fwait mov (bad) lods andl ds mov nop stos xor push or rcr outsb pop mov out sbb test mov cltd (bad) rex.W fwait ja adc nopl clc fwait (bad) (bad) sbb imul sbb xor (bad) cmp fildl cmpsl fprem movsl (bad) movabs (bad) mov mov add mov test mov fwait (bad) cli rex.WRX sahf pop xchg sub and fwait push xlat (bad) xor pop fisttp pop test jae fidivrl (bad) movabs test clc (bad) mov (bad) adc test outsb mov adc (bad) mov ja out or pop rex.WRXB rex.RB add (bad) rex.X (bad) cwtl fwait test rex.WRB sbb jb jge fistl je callq (bad) icebp mov pop rex.WXB fwait mov jge adc jno test pop sbb xchg jb rex.B rex.RX fwait fwait retq test xor (bad) rex.R (bad) icebp adc and iret ficomp jo (bad) scas adc out xchg pushq insb data16 pop adc (bad) adc fdivl sbb lahf add jne xchg add (bad) sti push (bad) xchg rex.R fbstp pop fistpll xchg addr32 xchg add or rex.WRB (bad) mov mov adc imul lea push sub (bad) jb jne sbb pop mov jg fwait lret push jo cld out mov add pop fldenvs rex.WXB fsubrl pop pop jmp jnp sti rex.WXB adc jo xlat jne imul mov (bad) faddl (bad) (bad) je pop (bad) add addr32 movsb xor scas jmp imul (bad) popfq sbb loope adc insb (bad) mov rex.WRX xchg or mov mov (bad) mov addr32 push jbe (bad) lea stos pop xlat (bad) outsl cmp adc cli xor movabs rex.W je or (bad) sub xchg test push push sub (bad) sbb out out (bad) adc int adc mov insl in (bad) mov iret mov (bad) pop cmp sbb lods xchg pop lods jmpq loop cli adc imull fdivrs sub (bad) imul jns adc test popfq add (bad) lret (bad) mov (bad) xchg xchg gs jge xor xchg lods fdivrl xchg push (bad) cld rex.WXB xchg pushq cmp (bad) mov repnz (bad) pushq mov fisubrl incl or (bad) sub out jl push loop pop stos rex.WX sub sbb (bad) movabs rex.W mov jle lret adc sar lret xchg test stos data16 xor cld rex.WR cmc lea mov pop out mov outsl int loopne pushfq in xor (bad) rex.WX and and fdivs mul (bad) mov out (bad) leaveq gs or pop jmp data16 mov xor (bad) push sbb and mov lahf fcomi out fs (bad) retq sahf jo (bad) retq (bad) lods cmp outsl fs fwait repz cli in jns (bad) sarl xchg fldl mov rex.RB imul fwait mov xchg int mov cmp lods mov ja insl fs pop imul retq xchg pop enterq cltd rex.X out lods clc mov pop (bad) scas jnp test fisttp addl mov fwait imul ficompl fidivr pop rex.R xchg mov pop xlat je sub enterq push push nop repz lea and rex.WXB stos stos sar popfq sbb cli adc rex.RB data16 fwait cmp mov lea rex insl sbb sti sub test (bad) lods fwait mov (bad) hlt adc (bad) (bad) xchg (bad) or mov jae cld sub std popfq xchg (bad) cs fistl mov or (bad) in xor int3 retq movsl (bad) fs hlt fcmovnu mov cmpsb (bad) fwait sarb push rex.RB out mov (bad) fldenv (bad) fildl (bad) fstp negl setnp in jmpq int3 sbb xor rex.WXB cmp rex.W xchg stc mov (bad) and add cmpsl fwait push (bad) sub sbb sbb add stos jns rex.WRB adc pop fwait lea insl mov xchg sub fwait mov (bad) enterq sbb sbb xor std xchg push rorb sbb callq imulb imul lret rcrl mov mov in cs fcomps xchg clc jmpq mov repz (bad) or and sbb sub xlat out cmp pop stos in not adc and mov pop push fwait rex.WB push xchg int clc ja adc (bad) mov rex.WX adc sbb cmpsb rex.W sbb loop (bad) out fwait repnz mov fwait mov adc movabs adc (bad) fwait movabs (bad) addr32 mov rex.WB and movsl fcoms (bad) fwait add std push and in (bad) mov jl jne sub jbe je (bad) fldt stos add sbb push pop xchg (bad) jo rex.WB xchg and ss rol movabs scas movabs adc cmpsb jb mov mov imul push ss fwait rcl (bad) lahf jno mov pop sarb (bad) fisttpll xor fwait pop pop cmpl fnstsw rex.WX add jmp pop movabs jns int (bad) out and ficompl push pop ja fwait outsb rex.RB nop mov frstor rex.B rex.WRX out imul popfq mov or movsb sub pop callq in retq sahf adc mov adc jno sbb addr32 movslq or (bad) lock test gs sbb (bad) rex.R xchg xor addr32 add mov sub pop test push data16 xor rex.W pushq jmp pop rex.WRB shr pop rex.XB rex.WR mov rcll sbb xchg sbb test rex.WXB rex.RX lahf xlat loop or rcl xor fmuls (bad) pushfq sti out sub subl out rep shll add pushq sahf sti scas (bad) fist adc mov sti (bad) xchg out icebp rex.WRX fwait mov (bad) callq bswap sub gs pushfq repnz es mov (bad) add stc xchg mov icebp (bad) orb clc mov rol callq std and pop ja ds (bad) fs adc rex.R jo fwait in mov insb fcmovnu sbb fwait mov xlat push out add data16 movsl or (bad) jmpq sub callq (bad) adc rex.WRXB sbb stos stc (bad) ss (bad) add adc jbe (bad) jle xor outsb lret pop sbb xchg cmpsb (bad) enterq (bad) jo xor pop mov jbe xor xchg (bad) jmpq movabs rex.RB (bad) pop enterq loop in pop push rex.WXB (bad) cmc pop lods repnz lods out push jb stos pushq pushfq in movslq jp xor rex.W (bad) rex.WXB fild mov lret lret jmp mov rex.RXB push stos push lea mov pushq pop (bad) and popfq mov jo cmp lret (bad) clc mov rex.WRB repz mov add (bad) push (bad) add xchg pop loop rex.XB add stos subl (bad) (bad) sahf adc cmp pop jno out cmpsl frstor (bad) mov (bad) jl jrcxz and rex.WRXB and xor sub or (bad) rex.WX or or (bad) sub pop xorl mov fild movsl movsb (bad) rex.WR data16 sar add ss in jb and rorl mov (bad) jae xchg cmp xchg inc sahf mul adc rex.W adc out (bad) fcoml and imul (bad) pushq sbb jno cli xor popfw add sahf popfq sbb mov out fwait sbb lahf xchg loopne mov outsb movsl mov lret (bad) out (bad) jmp hlt sbb ror add (bad) and push negb sahf fwait jge rex.WRXB pop push cmp and stos (bad) sbb (bad) imul pop movabs lods (bad) (bad) leaveq mov clc fwait xchg scas xchg xchg rcrl xor fstps adc mov sti out xchg rex.RXB fwait xor mov fwait outsl sub loop int3 (bad) (bad) cmc xlat test test (bad) and in retq mov and jle sbb cwtl xchg rex rex.WB sahf rex.W or imul or fwait (bad) adc lret mov add lret imul adc pop push (bad) xchg jnp (bad) add in pop jns (bad) pushfq push cmpsb scas fbld jo retq hlt fstpt sub lock (bad) retq mov push adcl ja mov fwait xchg rex.WRB callq cltd mov lret add movsl ja xchg pop movabs fwait (bad) adcl adc rex.WX retq cmp mov pop mov mov in test je jno outsl fwait sub sub stc fwait in test add hlt and mov (bad) ss outsl fwait mov xchg xchg rex.R ja movabs fwait mov (bad) mov (bad) sbb rex.B rex.WRB movabs jns rex.W stos pop or jl jb rex.WRX and lahf stos sbb out in jbe js fisttpl enterq icebp mov int3 clc repz ds fucomp push or xor sbb and std (bad) (bad) scas in xchg rex.WRXB (bad) and callq fwait rex.RXB rex.WRX adc callq loope mov mov ja stos sbb (bad) push rex.WR (bad) mov xor (bad) cmp adc stos sbb imul xor sbb sahf cltd in cmp cmpsl push clc (bad) fdivrl loope es sti jge xchg mov (bad) xchg rex.WX fdivl adc rex.RX fwait mov sub rorl or adc pushfq and xor xchg (bad) rex.WRX pushfq mov add xorl (bad) pushq (bad) mov movabs or rex.WRB fwait ds mov push push leaveq movabs cmpsb mov (bad) or sti xchg cmp (bad) pop gs sub fwait jno push loope push add (bad) mov pop add fistl and pop rex.WX cli imul in (bad) xchg (bad) out (bad) (bad) or add (bad) sbb fiaddl pop ss and imul mov test lods cltd cmp scas iret xor pop cmp sbb pop adc mov rorb (bad) out fwait pop jnp (bad) push pushq roll lock je repz fwait addr32 sub out add mov xchg (bad) mov sub fwait add test (bad) add xchg xchg out hlt fwait push (bad) fimul add lods sbb or sub movsl xchg mov xor add mov insb rex.WXB (bad) fsubr cltd test sub add scas (bad) fimul rex.RXB callq cmpsl in sarl fstl movsb jo outsl fisttp sbb xor loopne icebp xor sbb (bad) (bad) clc sbb lods mov fistl js out cmp or sbb ficomp or rex.WB nop xchg cmp jge adc (bad) push (bad) sti (bad) movslq jno movsl adc fwait cmp jp adc push stos (bad) leaveq pop sbb divl adc xchg fwait (bad) cmp adc in pop jrcxz fwait jle sbb rex.WRB jae fwait outsl pop mov xchg sbb adc add pushq loopne pushfq pushfq jo sbb jb (bad) cmpsl (bad) xor (bad) sahf (bad) (bad) pop (bad) jno jrcxz jg (bad) pop cmp (bad) xchg push (bad) movabs movsl (bad) rdmsr push or jae icebp cld or mov mov jbe push (bad) adc rex.WXB cs and fwait push mov rcl test mov mov or lcall es rex.R rex.WB rex.X pushq jmp cwtl jmpq mov push cmp sbb jbe rex.RB adc sbb rex.B rex.X nop mov cmc fcmovnb pop cs rex.WRX sub fwait ja rex.R pushfq scas (bad) int (bad) (bad) xor sbbb lods sahf or fwait pop int3 pop (bad) lret mov cmpsb je sbbb (bad) out mov (bad) fxch (bad) fwait jg (bad) movabs rex.X mov movabs stc or lret rex.X nop add push imul mov pop sbb sbb fcmovne int3 sahf mov mov or imul cwtl (bad) rex.R push cs sub push sbb jrcxz pushq lods cltd jle leaveq repnz xchg sbb cmp icebp movabs out fsubl jae mov adc pop ds jbe cltd xchg and jle rex.RB push xchg rex.WRXB es out cmc or mov add mov cmp cmp cmc mov clc cmpsl je sub int lea imul int insb mov fs mulb test and mov sbb cwtl mov mov loop cmp sub adc push xor mov fidivr xor fucomip or mov sbb (bad) in out jl orl test pop pop adc mov xchg xchg lea lock js mov (bad) fsubs hlt mov jo ficompl jl xchg scas and movabs out mov in mov (bad) js adc mov frstor iret cltd (bad) sbb xor out jp xchg sbb rex.RX ds int3 (bad) hlt in rorb (bad) (bad) rex.RXB sbb test mov (bad) (bad) std scas or out (bad) (bad) ja out ja rex.RXB shlb rex.RB sbb mov or xchg xchg adc jg mov repnz mov icebp rex.WRX (bad) test outsl mov je mov xor cmpsl add mov jmpq pushq add or cs cmc js ds (bad) (bad) push pop fwait adc scas hlt sbb add jge out fistpll and rex.WRX mov xchg fistpl jl jl repz xchg jle pop (bad) and adc pop fwait mov add lret and fwait out jl adc lahf xlat mov mov add rex.WX add mov (bad) fwait subb cmp jo (bad) or (bad) and cli sahf xor sbb fstpt fimul fwait sbb xor rex.R rex.WR fwait or jnp (bad) test inc cmp (bad) pop js retq insl fwait mov lahf icebp (bad) pop jo sbb xor (bad) jp pop pop lahf repz jg jb mov and roll add lret loope xor sbb fsubrl addr32 sbb mov rex.WR push xor (bad) js out adc retq pushq (bad) sbb pop or lea movabs adc divl and xchg and out xchg out mov sti imul mov pop mov and xchg je mov fnstenv shl cmc cmp fist fdivrl stos cmp cmp ficompl fistl jmpq out sahf fcompl pop push jl mov rex mov or cmp mov icebp loop retq orl push mov push icebp (bad) xorb divl sbb sbb addr32 (bad) cltd mov rex.RX ss mov neg data16 syscall (bad) je shl jno rex.WX (bad) stos sti test mov fldenv (bad) (bad) lods fnstsw mov adc mov ja mov mov imul jrcxz int loope push (bad) add xor rex.WRX fwait clc rex.WX rcl jno fwait adc (bad) or stc rex.WRXB (bad) xchg fwait jle jb cmpsl iret and and mov mov adc movabs fwait cmp test pushq rex.W jns (bad) jnp add sub sub jbe sbb push sbb in fwait rex.WRB rex.WRXB ss xchg test or mov (bad) rex.B push mov rcrb xor sub enterq stos int xchg (bad) (bad) insb fwait sub in xchg vmulss sahf and scas sub (bad) (bad) es pop int adc rsqrtps (bad) mov sub out faddl es jle rex.WRB fwait insl sarl add xlat insb or (bad) je rcrl fcmovb out (bad) (bad) fwait sbb enterq sub fwait sbb sbb sbb jne mov cmpl fwait rex.RXB jl lea addr32 in popfq loope xchg xor mov rcl mov out popfq mov cmp and rex.W test or ficomp jae sbb xchg adc mov adc (bad) loop fwait mov and (bad) xchg jbe rex.WB outsl adc movabs (bad) fwait enterq sbb out fwait and and rex.RXB (bad) (bad) std (bad) fidiv test xchg sbb outsl (bad) sbb (bad) mov (bad) sbb add mov add (bad) mov mov add fstpt fstpl mov in fwait and repz mov loop ljmp xor jl mov iret rex.WRXB fwait movabs std rex.RXB ja (bad) and xchg movslq xchg clc pop lret lahf ds mov sbb push movsb rcrb pop fadds cmp (bad) jmpq sbb add cli fs or mov xchg jns movsl sbb hlt pop jle test or stos (bad) shr fwait mov out retq sub pop rex.WRB jbe xor push (bad) push repz or rex.X rex.X repnz fwait rex.W or mov mov movabs fwait stos jge and (bad) (bad) fldenv (bad) fwait out stc (bad) jb (bad) pop cmp xor scas icebp in imul push sbb retq fs or repnz mov fwait pop push (bad) and (bad) (bad) add pushfq in orb mov imul cmp lret jmpq test ss lods in jo mov (bad) sbb cltd and add xchg mov pushfq xchg jp stos movabs sub xor insb fs (bad) (bad) jnp or adc rex.WRX sub and and std (bad) mov pop and leaveq fildl sbb pop jbe adc repnz add mov pushq push sbb jrcxz cwtl rclb rex.R jge mov jbe sarl addr32 mov rex.RB stos (bad) or fwait add rcl rex.WRX fwait pop out scas (bad) xchg (bad) out fwait enterq push stos (bad) and rcr fwait sbb je rex.XB rex.W fwait clc sub fiadd push (bad) fstpt jrcxz and gs and repnz cmp insl add adc or adc negl xchg (bad) fsubrl stos pop loope cmpsb in mov add rex.WX ficompl sbb shll rex.B iret cltd (bad) (bad) or in rex.XB fwait jne cmp fwait (bad) add push (bad) or add (bad) lahf xchg lods (bad) int3 mov cmc and fwait xchg jbe rex.RX push fwait lret movabs add jbe xchg jmpq lret or push (bad) sbb xchg pop movsl stos lret rex.W cmp or fwait (bad) mov (bad) adc int3 (bad) ja es mov retq cmp (bad) (bad) sub fwait add jg (bad) test mov adc add (bad) fwait movabs jge push movabs jae jmp (bad) fwait pushfq rex.RXB (bad) in js rex.XB fwait or rex.WRX sti xor movabs (bad) fstpt insb and rorl add sbb jge (bad) fwait movslq add cwtl sub push mov iret cmpsb or sar insb mov and int fwait xor andl cwtl fwait sti roll mov enterq xor add adc callq js pushq mov add jbe push rex.WRX push retq outsb xor push rcr add jmp rex xchg (bad) faddl xchg lea movsl cmc adc outsl mov fwait imul lea add mov push stos jns or cmpsl add test (bad) cmp stos rex.WX fwait ss (bad) lret pop retq (bad) lods mov pop mov fwait rex.WRB sbb mov rex.WRXB jne cwtl jrcxz imull gs test pushq fisttpll stc outsl mov in fwait repz rex.WR rex.RB rex.XB stos (bad) mov cmp xchg rex.WX sbb sub fwait adcl mov pop add adc sub shll xchg (bad) xchg fwait and decl mov sbb mov xchg fwait adc insb cmp jmpq (bad) fwait std mov jns pushfq rex.WRX and cld pop std xchg mov mov pop in stos enterq sbb (bad) xor xchg or sahf mov adc shll mov mov pop and (bad) fimull or (bad) addr32 xchg (bad) fwait rex (bad) pushq (bad) xchg lea (bad) popfq (bad) jo movslq (bad) fwait mov push es std (bad) push add sub sbb rex.WR add repnz (bad) adc (bad) mov fdiv (bad) cmp (bad) jbe (bad) (bad) or fwait shlb sti (bad) movsb jnp (bad) pop or int mov and jrcxz repz fwait popfq pop sbb xlat (bad) mov jno cli fimul sbb (bad) jnp shlb out repnz out gs in mov sbb mov pop fwait sti jle js out rex.RB loopne add (bad) mov cwtl stos or int fcmovb rex.W retq (bad) std leaveq cld test sub fidivl scas rex.RX sbb (bad) mov in (bad) iret pop insb imul fidiv sub fucom cld (bad) lahf pushfq adc rcrl int3 cmp movsl imul rex.RX add (bad) (bad) (bad) adc (bad) pop jl mov jb out ss push mov cmpsb adc addr32 or ds or notl xchg jp fcomps mov pushq movabs jnp pushq std ds rex.XB rex.RX jnp jb or decb int3 rex.WX (bad) jnp pop addr32 xlat xor mov imul pop loop fstpt in gs or movsb sbb lods (bad) jne mov (bad) push addr32 (bad) (bad) jrcxz jmp rolb sbb int addl iret sub shlw sar rex.W (bad) pushq jb pushfq (bad) fdiv sub test and (bad) lock icebp cwtl jp (bad) rol xchg stc rex.WXB adc out mov jl fwait movsb test stos rex.R imul and jmpq repz xchg leaveq outsl or sub imul rex.WRXB fwait roll rex.WX mov (bad) jo jne mov adc in int3 movabs sbb imull lea ss sbb jmp cmp (bad) lods cmp (bad) xor sbb (bad) movabs es insl int3 cltd pop mov mov rex.RXB fwait cli push rolb jnp or stos stc and rex.WRXB xor cmp sti rex.X fwait rex add sbb sbb sbb js sbb retq mov repnz push add fstpt (bad) mov jnp (bad) pop (bad) clc lods retq (bad) sbb rex.XB (bad) rex.B fs fbstp fwait rex.XB (bad) and (bad) div add jb (bad) rex.RX jae cli adc xor (bad) xlat addr32 movslq ss out sti cmp je lock mov cld push push (bad) sub or cmpsb cltd rex.WRX mov mov (bad) xor (bad) movabs xorl mov loopne mov jb xchg and sahf and or add jge data16 ss (bad) es imul fwait out and rex.B data16 sar (bad) or adc (bad) cwtl mov add cmp mov pushfq push fmul rex.RX fwait scas imul jnp add (bad) mov and rex.WRX gs rex popfq out retq add mov (bad) scas (bad) rex.WB psrlq stos pop (bad) lods or sbb sbb pop movabs es (bad) fidivrl jl mov cmp pushfq mov retq lea jbe fwait rex.R mov clc (bad) xchg jrcxz xchg sti idivb xchg (bad) xchg sti (bad) rex.XB iret add (bad) cmp or add (bad) (bad) loop (bad) in xor jl sbb movabs outsl jmp push or (bad) repnz hlt sbb lea movsb fild (bad) ja,pn popfq pop fistpl scas repz or cmp (bad) xor (bad) fwait stc mov mov hlt (bad) (bad) insl rex.RB rex.WRB adc retq lahf cmpsl andl jle (bad) fwait in outsl mov sbb gs out (bad) int js retq test sbb mov pop insl mov sbb (bad) add movabs add in (bad) xor repz pop clc test sahf subl mov sbb (bad) notb fwait clc xor mov rex.WRXB mov outsl cld fwait in cli loope scas xlat jb xor shll xor and fwait ljmp mov in nop sbb sub (bad) rex.WRX test mov rex.X cmp xor loope and mov es fwait cmc (bad) cmp int lods jge fmul rex movabs es outsb rex.WXB cmc rex.RX and mov rcrb popfq rex.B rex.RXB rex.X add (bad) sbb loopne (bad) rex.WRB push in insl or (bad) sbb (bad) xor mul pop setns (bad) pop mov callq outsb rolb lret fimul (bad) imul (bad) imul fdivrl add cld (bad) or xor adc sbb (bad) (bad) xchg ds jno stc retq repnz in std in (bad) imul retq imulb jle movabs fwait sbb or pop test rex.RB fwait sub clc in cld (bad) (bad) fwait jg xchg shrb adc fwait jmpq and or out std (bad) scas xor movabs sub fild mov rex.RB fwait insl pushq mov mov (bad) (bad) rex.WRXB rex.RXB mov lret xlat sbb sbb movsb movabs in mov cmc sbb mov cli fistpl mov add xchg rex.B sbbl push cli xchg test mov lock jg (bad) (bad) movsl (bad) (bad) rex.XB fidivrl sti fwait scas rex.WRB sub adc outsb data16 mov cli (bad) sbb out (bad) adc sbb add stc (bad) fwait mov and adc cmp imul add mov popfq fwait jae sahf cmp fwait xor pushfq test jge movabs mov leaveq fwait add or or or and xchg callq movabs in fmul adc add mov or mov fwait and mov (bad) fwait movsl movabs fwait sti rex.WXB sbb je fwait (bad) es mov sub and fwait out test enterq pop sbb push (bad) insb (bad) fwait je rex.WX pop (bad) mov and fwait pop push sub popq (bad) rex.WXB rex.X (bad) fwait mov addb hlt ror (bad) cltd xor sahf push scas xchg popfq out (bad) rex.RXB cmp scas jrcxz (bad) sub in cmp rorl es pushfq (bad) add popfq cmp (bad) fxch or xchg mov rex.X stos xor add (bad) pop rcrb rex.X ds and pop sbb pop xchg xchg (bad) rcrl add in fstl mov std addr32 fwait (bad) pop (bad) xchg and cli rex.WR add enterq mov insl out in stos rex.WXB fwait lods popq (bad) and (bad) lods (bad) mov cmp or sub mov cmp or xchg cmc jbe sti rcl mov jns xchg mov rcrl rex.W mov jne (bad) sbb rcrb jns std out mov sbb rex.W fwait cmp cmp in movabs mov mov rex.RXB (bad) pushfq ror pop (bad) rex.RX jmp mov add (bad) and mov add sbb xor roll fnstenv rex.XB rex.WX loop jns rcl cltd rex.RX (bad) sub not repnz adc fwait jno ds pushq sbb mov fwait push cmp fwait mov sub js jmp rex.WR sbb fidivr fwait sub in stos lret addb pop cli add mov sub fwait (bad) rex.WB rex.WRB rex.WX lea (bad) rex.RB sbb movsl movabs add (bad) xlat (bad) loopne (bad) fidivl ss jle sahf (bad) int stos mov adc fisubl mov popfq adc mov rcrl sti adc rex.WB fwait je js fisttp pop scas jbe (bad) sbb mov or mov fcmovnbe rex.RXB fwait rex.WR rex.WB shl push fwait imulb out cmp push je adc rex fisttpl imul and jne sub fwait (bad) rex.RXB rex.RB xchg (bad) or (bad) cmp fcompl cmp rex.R movabs popfq ficom fbstp fwait cmp rex.RXB cs push mov shl cltd fwait (bad) adc movabs jns push rex.WXB (bad) or pushq iret fadds rex.RB jb adc cmpb test test xchg and js mov movabs pop stos push jns (bad) mov xorl rex.X pop rex.WXB loop cmpsl rex.R cmp mov fs loope callq lock push lret lods (bad) adc xchg loope movabs ss adc rex.WX push cwtl sbb out sahf sbb addr32 jl xchg ja and add popfq sbb imul addl loop jb lahf (bad) jne cs shl sbb in jle sti callq push repnz xchg jbe (bad) xchg xchg (bad) movabs loopne (bad) cmp (bad) in pop icebp pushfq out sub test pop (bad) xor fisttpl pop fs pushq sahf sbb mov cmpsl mov movabs pop sbb xchg jge loopne and fnstenv mov (bad) cmp add mov cld in mov mov mov mov jmp (bad) (bad) out (bad) int3 xor loope cmp pop rex.RX xchg ss mov jge imul (bad) fwait cmp lret fwait enterq adc jbe sarl mov stos pop cmpsb sbb and sub sbb rex.WRXB jrcxz fidivrl lods jp (bad) pop xchg mov and rex.B pushq outsl dec sbb fcmovnb (bad) scas movsl stos movabs sbb (bad) push mov adc jge (bad) test xchg rex.RX (bad) and ds jmpq mov push fwait (bad) incb mov movsb jo pop adc callq xchg fwait add (bad) rex.WRB jne repz push outsb lret cmp sbbl pushq sti fwait sub xchg sti add xchg rex.WXB pushq enterq cmp xor rex.X (bad) stos (bad) add xchg sbb sbb (bad) rex.WRX (bad) lock sbb cmp xchg je fwait push or rex.WXB add jle and out (bad) subl sbb lahf lock fistpl sbb stos idivl add (bad) jb xchg fwait test andb test xchg int imul (bad) sbb (bad) movsl movabs cs xor jo js mov xor out (bad) jge lods fwait cltd andl or adc add (bad) test and jg ds (bad) fucomi pop rex.R (bad) js gs or (bad) jo xorl stos pop cmpsb rex.WRX fs rex.WRB fisttpl jmpq fbstp movabs and fwait stc out add (bad) fwait rex.WRB mov pop pop gs or icebp fwait in lods and flds rex.WRX sbb (bad) out lods test xchg mov sub jae sub fwait push cmp lret cmp mov rex.RXB es mov (bad) or jae mov (bad) out insb push lret cmc xchg clc (bad) je in and adc sbb ja (bad) xchg add mov xlat and (bad) (bad) sti je push rex.RX jge outsl rex rex.WB sbb insl leaveq pop jrcxz iret sbb sub shll jno cmp (bad) stc leaveq cltd fadds insl jo outsb stos mov fwait (bad) ja in xchg fwait fs lods adc sub outsb hlt mov leaveq mov movabs fbstp sub insl pop in fwait (bad) jbe test callq data16 mov cmp add loope add mov mov shl mov (bad) ds test sbb sbb (bad) cld add rex.RB (bad) fwait mov mov cmp sub pop in sbb nop adc add (bad) rex.WR mov fwait rex.WRXB sbb addr32 cltd mov cmp xchg test cmpsl loopne xchg mov mov out sub and repz fwait mov sub (bad) fstl (bad) std icebp (bad) fwait lea lahf cmp push xor test mov xchg (bad) ds jmp jne leaveq (bad) popfq cli loope (bad) lock movsl rex.RXB shlb pushfq sbb and (bad) pop mov jg adc and rex.RXB cmp int3 enterq out addr32 not out insb lret popfq retq xchg cld sbb or in in retq stos and rex movabs out sbb in cmp imul cmpsl rcrl sbb sahf js and je insl (bad) and jrcxz rex.WB loop push pop movabs mov nop xchg add or xorl pushq (bad) icebp (bad) (bad) notb or jne loopne outsl mov rex.XB cmpsl out loopne (bad) loopne bnd sbb std out rex.WXB cld rcrl in stos js pop (bad) xchg (bad) stos cli (bad) jo rex.WRX rex.WB (bad) and push xchg shlb xchg rex.XB jle add nop sti sarb cli mov fs in xchg (bad) mov or fwait and rex.WRB gs sbb retq xor pop fwait adcl and subb add sub push fwait js mov rex.R add (bad) fdivr cmpsb out jae add fwait sub adc rex.W pop loopne fwait mov std xchg popfq sbb data16 gs orl xchg mov sbb adc add cmpsb sbb xchg lret push stc xchg sbbl fsubrl leaveq hlt lock ds or rex.WRB xor and xor cli and or pop cmpl rex.RX mov mov fwait jnp (bad) and fwait jne adc sti (bad) pop cmp (bad) mov callq mov push rex (bad) fwait movb nop movsl jns loop jge cli scas or mov (bad) (bad) cmp loope or cmpsb sti cmp xchg (bad) cmp sbb or or xchg jb test fwait jno rex.R stc xor popq fwait xchg mov loop jo rex.WX push sub testl (bad) cltd (bad) (bad) sbb sti pop sub (bad) add adc (bad) fstpl add or xchg xor data16 movsb rex.WXB (bad) sbb (bad) leaveq orl (bad) cmp jl sbb xor fsub mov (bad) fildl sbb cmpsl push pushq jnp push loopne fstpt sti rex.WB repnz sbb add sbb add cwtl pop lock rex.WXB fwait lods addr32 fisttpll (bad) cld sbb jmp adc js fwait (bad) adc mov sbb rex.RX movabs fwait cmp or xor (bad) and sahf (bad) test fwait xchg js (bad) (bad) int mov hlt fwait (bad) and lock push rex.WRB rex.X and ljmp loope jns mov callq (bad) pop lret sub jmp adcb adc adc mov jmp sbb cltd loop (bad) (bad) or cmp (bad) lret sti xchg (bad) jbe fwait jb and sti xor rcrb mov (bad) jb adc fwait xor fild jle (bad) adc rolb sub (bad) sbb adc sub mov movabs fwait rex.X cmp mov sbb movabs (bad) std addr32 mov jge andl movabs add (bad) fwait in movsb (bad) sbb out ss xor cmc sub sbb fstpl rex.XB mov sub sub xchg (bad) cmp or (bad) js lahf sbb idiv cmpb movsl rcl fwait push (bad) xor (bad) sahf xchg ds iret in add mov fdivl rex.WX pop xchg (bad) rcll sbb rex.WRXB out pop jmpq mov push adc jae icebp loop addr32 adc fwait cmc ficompl sbb adc (bad) test ds xchg add pop sbb fisttpll push loopl ror data16 (bad) mov add sbb jne mov sbb stos shl adc jo mov mov mov fwait (bad) (bad) mov ss incl xchg rex.WRXB scas or mov mov in icebp fwait mov push rex.WB sbb fsubl gs fwait retq cmc lahf push adc rex.WRX push fwait mov movsb cmp cmp (bad) leaveq iret movabs and pop (bad) jg adc fwait (bad) nop add and fdivrs sbb cmp stos sub fistpll pushfq mov push andb cmp mov (bad) repz rex.X fwait hlt rex.XB rex.RXB adc (bad) callq mov in rex.R lock fwait int stc fsub (bad) cltd fstpl (bad) (bad) mov fwait mov mov lods sti ss fcompl pop lods fistp loopne retq mov pushq movabs pop sbb fild (bad) mov (bad) js sub (bad) sbb data16 xor cmp (bad) (bad) sbb test test stos mull out xchg sbbw xor cli and cltd sarl mov (bad) pop xor out fbld xor stos adc cmp xlat cs mov fidivrl callq mov fdiv xchg xorl and push pop rex.XB (bad) rex.WRB loop lods fildl rex.RX xchg shr push (bad) lret sub jmpq (bad) cld out sbb (bad) lock loope sub or rolb cmpsl mov xchg pushq popfq repz (bad) addr32 sbb rex.RX in sti retq pushq out (bad) sub cltd adc cmpsl rex.X repnz movabs xchg es stos loope adc rex in cmp sub mov retq mov (bad) out and loop add in sbb and cld sbb fldt push (bad) jmp lock fwait lahf or add fstps mov div sti jne or fwait xlat jg jno cmp test or fwait (bad) lret outsb ja (bad) (bad) (bad) sahf rex.WR (bad) insb fwait pop lock mov loope repnz nop fcoms push adc test ds idiv mov fwait enterq (bad) in or (bad) (bad) jae pop mov rex.X rex.WRB cmp cmpsb fwait ja movabs jbe (bad) (bad) sbb in pushq mov es rex.WRXB stos repnz subl add in mov sub rex.B jge sahf add cmp movabs out scas out bnd rcrl rex.WRXB add and fistp push or rex.WX addr32 test scas stos xlat (bad) and lcall rex.W mov (bad) movsl imul (bad) rcr fwait add xchg cmp negb adc mov leaveq mov lret fmull mov enterq in out rex.RB fisubrl pop (bad) pop (bad) (bad) and sti jmp (bad) stos mov rcll xor (bad) mov (bad) sbb push stos cmpl sbb rex.WRXB jb shll data16 xor xchg fcom cmp (bad) movabs addr32 (bad) in adc sti or rclb cmp mov stos or lret je imul cwtl jns pushq (bad) push rex.X (bad) fisttp add fwait in sub (bad) adc add adc pop cmp (bad) mov mov sub cld movslq fwait or jnp loop in fwait mov sahf ficomp jg push xchg sbb mull stos add fisttpll push fwait test xor mov jne addl insl and add stc outsl movabs mov lods (bad) mov add pushfq imul test mov xlat fwait int in push rex.B rex.WRX mov notb mov retq stos jmpq (bad) outsl (bad) movabs (bad) (bad) adc pop pop xor retq xchg sbb es push fistpl (bad) cs lret jne fildl pop rex.WRX callq add cmpsl and fwait or and in mov shl (bad) adc cld rcrb fs jle jmp decl jns ficompl rex.R jge pop mov jrcxz int adc and insl (bad) (bad) testb (bad) fwait add fcmove and fwait or cld clc rex.RB mov mov sti adc sbb cmp and pop jp fstpt jg stos cmp fwait jl loop andl xchg lahf fisubr add cmp sahf int3 jp (bad) icebp lret (bad) shr fwait xchg mov sbb jle sarl imul xchg adc int cmp fwait cmpsb jne rcrl stos rex.RX lahf sbb (bad) push (bad) xor add (bad) and lahf cli pop in mov push fimul and popfq xchg retq addr32 (bad) scas (bad) mov jmp mov mov repz (bad) cltd sbb in push imul sbb pop rex.RB pushfq (bad) pushq sbb pop sti rex.WRB fcmovnbe add and jno rex.W rex.WRX mov and xchg xchg insb rex.WB or enterq rex.RX xor negb pop adc (bad) leaveq rex pavgb mov adc xor pushfq loop fwait and scas ffree std add int3 paddsw sbb push xchg rex.WRXB adc rcrl jmp sahf fwait cmp mov fwait es in mov test pushq icebp test scas add adc mov xchg xchg (bad) sbb (bad) sbb (bad) or fwait add xchg fwait pop loopne jb retq out adc (bad) cmp push fwait xor sarb add je jno adc xor jle or movabs outsb mov (bad) orl push or pop cld rol sbb (bad) xor mov jne jb mov sub mov (bad) iret and and mov xlat rex.W cwtl rex.RB scas fmul pop fwait (bad) mov rex.RXB xchg repnz cmp push (bad) mov rex.WX add addl and push sbb mov fildll int add iret cld mov out pop mov fwait jle rex pop push cmpsb or comiss movabs mov mov rex.B (bad) shr mov xchg or or xlat (bad) mov cmp hlt rex.RXB popfq callq faddl sub (bad) outsb mov rex.R movb jge (bad) push rex.WX pop sbb shl mov (bad) retq movabs xchg jp hlt rex.RX fwait and xchg fistl or orb rex.WB sbb lods cltd loop (bad) mov fistpll mov mov adc icebp retq rex.R push pop mov (bad) jb pushq sbb pop add mull jle xchg fcoms rex.WR fwait clc (bad) (bad) icebp (bad) (bad) lods rex.RB mov xor int (bad) fsubrp xchg rex.RB mov (bad) (bad) test sbb pop insb sbb mov (bad) or adc movslq (bad) cmc push icebp fwait test movabs rorl rex.RX mov (bad) sti push mov fild cmp (bad) imul shrl in jno xor out mov pop adc add sbb (bad) cmp sbb sbb (bad) add (bad) icebp pushfq adc pop imul push and sbbl cwtl (bad) movsl int fwait (bad) mov or (bad) mov lods and jg (bad) js sbb sub fcmovnb push sub stos movsl scas fwait (bad) (bad) leaveq xchg mov (bad) fwait (bad) push mov mov add fwait and jae (bad) rex.WRB hlt push mov lock ror loopne sbb cmpsb mov pop rex.B rex.R fwait sbb rex.WRB stos clc fwait xor or jo repnz andb sbb data16 xor add mov orb fwait retq sahf rolb add pushfq xor add jae stos mov in mov mov jge pushfq fild mov fcompl pushfq retq stc mov jmp in fwait lods mov sbb jge jnp add add adcl (bad) lret adc bswap xor pushq mov or out mov (bad) stos xchg (bad) cld rex.WRX lock jb mov nopl adc adc mov cmp push and adc pop add pushfq test andl negl mov rex.WRX fisttpll (bad) (bad) pushfq (bad) cmc sarl push movabs out fwait in mov rex.WRXB fisub mov mov fstpt rex.X add adc (bad) sbb cmp repz pop fnsetpm(287 jge and movabs pop pop fwait outsb (bad) jge push or mov cwtl cmp (bad) jns xchg fwait scas adc mov or mov loop pop nop sbb (bad) push iret test int lret cmp (bad) imul enterq pushq or out sbb mov fdivr rex.WRX ja sbb out xchg cltd scas movsl sti stos lahf jo mov (bad) push cmp xchg (bad) (bad) lea push fwait jo lahf pop jns cmpsl callq pop sti cmp cmp xchg fwait nop pushq mov roll mov fwait shll or out fwait pushq cwtl or sub jmp rex.WRB rex.RB add (bad) ja rex.WRXB stos retq push jmp push lcall rcr add fwait pop mov movabs int jle mov out fstpt mov insl ja rex.XB rex.WRX fstpt add movabs (bad) popfq cli out pop or push adc (bad) mov movsb clc fwait jge cwtl movb fwait movslq push jmpq rex.WRB sbb scas xor mov jno je mov mov gs push sub jbe and jge (bad) lret movabs jp add pushq fwait movabs rcrb ffree xchg (bad) cmp (bad) fwait outsb mov (bad) fs cmc cmp or mov xchg (bad) push sbb lods cmpsl imul sbb lret fs not out (bad) es mov xchg mov mov rcrl fnstcw pop negl rex.W rex.W data16 jae jg (bad) pop rex.X xor pop xchg and scas (bad) lret (bad) push (bad) sub sbb notl hlt fwait (bad) fimull iret movabs fwait sti jne rex.WRXB rex.RB (bad) push push icebp movabs pushq pop outsl add (bad) mov push rex.R cmpsb pushfq in pop jp rorb fildll rex.X push mov movabs leaveq and add or xchg rex.WRXB (bad) fcmovne out or lock push or repz and push add fwait or xchg es fwait (bad) (bad) popfq jge sbb mov nop out in lahf cltd data16 xchg mov jrcxz (bad) ror loope sti repz (bad) sbb rex.B rex.RX cld fistp xchg es (bad) movsl jb and loope (bad) mov sti cli mov jmpq (bad) sub callq mov icebp loope insl js (bad) nop (bad) sub leaveq leaveq fwait sub (bad) xor test rex.WRXB adc sti pop or and cltd rex.R in fwait rex.WRXB in cltd data16 xor rex.XB or cs fwait xor (bad) iret fsubs jno and movabs xor rex.X add movslq xchg movsl xchg fwait mov lock jle sub xchg hlt repnz (bad) pop pushfq fcoms (bad) sub mov and mov push sub push outsw rex.WB fwait pop scas pushq rex.XB rex fs mov mov (bad) xchg test mov rex.WR rex.RX popfq pop or cmp (bad) (bad) (bad) lret pop lret jbe pop mov adc je loopne iret rex.RXB fwait xor mov xchg mov sbb stos lahf push mov (bad) repz or mov nop pushq cmp push fistpl xor sbb cmp pushq mov (bad) cmc add out mov (bad) mov and jge mov sbb xchg ja callq sbb movslq fwait rex.RB movabs rex.WB mov sbb (bad) out rex.WRXB movsl jrcxz fdivrl lret fwait (bad) movabs mov or sbb sub sbb pop rex.B jo,pt and mov adc negb fistpl (bad) jno es xchg jmpq bnd cli pop (bad) (bad) xchg push rex.RXB test lea sbb rcr (bad) push sub movabs (bad) outsl callq xchg or jrcxz lods push (bad) add in outsb movslq (bad) jl cld out push (bad) fwait mov cmp nop sub shlb (bad) cmp rex.RXB loope enterq cmp sub imul jbe or loopne retq (bad) sbb (bad) sub out loop fistl jnp (bad) rex.RXB fwait shl xchg fadd hlt std ficompl ja xorb and fwait sarl cmp ds jb mov rcrb ja icebp in pop cmp xor repnz sbb jns xlat fwait and and fwait rolb and xor rex.WXB popfq movabs jns push mov movsb repnz icebp fwait xor gs mov (bad) cltd lea add ds mov retq add jmp xchg pop popfq jne jl retq insl mov fptan mov test fcoml sti pop mov sub (bad) mov (bad) rex.X and fwait rex.WRXB xchg iret (bad) mov test (bad) mov jmpq cmp mov add and lss nop xchg sbb fiaddl stos mov jb (bad) (bad) or int xlat add repz mov (bad) addl sub cmc gs cli rex.WXB rex popq out xchg clc jne xchg lods imul ds rex.R jo movsb mov sbb add mov sti callq std jl outsb decb push fwait (bad) mov cmp fwait lret and (bad) cld fwait pop (bad) insl jge rex.X xchg push mov pop rex.WX (bad) and lea scas pop lret rex.WR fsubr in and idivb mov fwait mov sbb in mov es jns sbb (bad) jae jnp rcrl mov insl (bad) repz ficom mov sub (bad) cmp rol xorl lods fnstenv fs popfq jno fmuls sti (bad) test fwait adc (bad) (bad) (bad) mov push (bad) (bad) mov mov int3 fwait xchg cmp sub movsb test sub in rex.WB in sub mov (bad) movabs or xchg rex.WRX js adc (bad) popfq mov adc sub test jmpq sbb sahf (bad) xor mov imul cmp sbb (bad) stos xchg xchg fstpt sahf pushq fwait xor rex.WXB mov mov jns (bad) roll fwait jno loop add and pop movabs xchg movslq retq add fwait pop ds mov jne fwait adc out sahf subl fldcw stos fistpll xchg mov add rex.RXB xor (bad) adc (bad) jbe (bad) rex.WB addr32 stos loop cmp (bad) sbb xchg adc roll pop retq sub out scas int3 mov (bad) rol lret sub in out int rolb push fwait rex.RB scas std es fwait mov repz std fwait push lock loop jae mov lahf fucomp jno rex.WX rex.X mov cmp out sbb mov fwait or in adc imul sbb sub mov (bad) or add rcll fidivl int add mov mov mov mov fwait mov cmc out (bad) sbb nop (bad) pop fcmovnb shrb (bad) ds movabs insl sub cltd mov xchg mov add movabs xchg xor imul (bad) callq (bad) movabs pop add add js adc fs mov add mov rex.RB and and mov lock push xor mov scas syscall (bad) addr32 xchg mov cli rex.WX fwait or (bad) incl adc add and xchg push sbb (bad) pop jae jo or sub and sub xchg movsl data16 pushq nop fwait mov ss adc fwait insb (bad) and push adc js (bad) ficompl loope popfq pop (bad) rex.RXB rcrb adc adc imul popq sub cmp adc jp js jo xchg mov xor mov mov fwait xor int3 adc adc (bad) out cwtl cmp test pushq add clc mov adcb fwait cli pushfq (bad) jb sbbb mov cmp (bad) fistpl movsb scas insb (bad) push subl mov or fwait pop adc (bad) or mov sub outsb pop adc cmc cld jge test mov xchg xchg and fwait (bad) stos clc movslq sbb (bad) fcomp rorb or xchg add (bad) fwait sub retq jo shll xchg jae mov addr32 stos (bad) idivb pop movabs lcall pop mov cmp adc fistp xor push (bad) xor lret and test adc fabs adc mov or shlb rex.X lahf std fwait cs mov fwait scas addb in in loope add pop gs push icebp data16 shrd clc rex.W rex.RXB (bad) rex.XB js sub fcmovnu sub jo movsl mov sub xchg adc rex.WXB fwait test (bad) mov or mov lret stc retq pop and add movsl xor xchg cmc fwait and movslq (bad) loope push (bad) lea mov mov jne pop xor lret jb data16 rex.WRX rex.RB fildl jbe (bad) cli sti and sbbl mov fist cmp imul and push addr32 loope xor sbbl xorl add idiv fwait rex.WRXB (bad) pop or pushfq (bad) loopne mov and add mov scas xchg fwait bnd cld movsl rex.WB movabs (bad) mov test xchg shl std pop jo cmpsl data16 fwait scas repnz adc sahf mov (bad) cwtl es pushq sbb cmp mov jns cmpsl rex.WR cmp testb add mov (bad) fsubrl sub fistl push sahf (bad) jg jne (bad) sbb mov and mov or int (bad) insb fwait movsb je cmpsb xchg rex.RXB lock fwait add adc in mov rex.RX (bad) fwait adc stos adc cmp out cltd repz fwait (bad) out rex.WXB jg out fwait rex.W push jnp mov fwait add mov xor int stos mov popfq (bad) sub add mov xchg or add stos and mov push add or mov xchg add (bad) sbb xlat mov (bad) pop (bad) fwait cld cmp jge fbstp sti cli outsl fdivrs mov jno sbb enterq (bad) jns mov sbb xor mov fwait (bad) or and add cwtl sbb cli out add cmp sbb mov fstpt test add sbb jne,pn sub stos incl leaveq or or xchg rex.W ss rcrl jle mov cmp jl insl fildl jns sti pushq jmp fwait mov out insl mov retq sar adc fistpl sub xchg (bad) hlt xchg popfq scas stos sbb rex.XB test mov pushq iret fistl push sbb fisttpl in add repnz add andl loope jae decb jg clc fwait mov jns stc mov fwait push mov and test sub std adc sti cltd pop (bad) cmp loope incb nop fwait jge rex.W rex.WXB jno push push mov movabs or (bad) mov sub mov jrcxz lea out fwait sub and pushq sbb shr rex.WRXB jge fwait gs and xchg fwait mov adc add js sbb rex fwait cmp ss rex.WRB xchg add movsl push adc callq mov enterq and rex.B rex.WR rex.XB cmp pop pop mov fwait sub fwait push in rex.X (bad) (bad) (bad) rex.X mov (bad) js mov lods xchg cmp in cs xchg mov loop fsub or and (bad) hlt pushfq orl (bad) cli add out movsl rex.RB jrcxz setp push sub nop fwait mov xchg push sbb ja rex.W (bad) cmpsl mov cmpsl stc int3 fwait (bad) push in jne cbtw add insb and mov push jle jnp and (bad) mov js cmp fninit rcrl sbb xchg scas fwait repnz and rcll sar vpmullw mov mov imull mov jns out (bad) loope (bad) sbb movabs out rex fwait js sbb fwait mov jnp fimul movabs cs imull jmpq shll mov sbb movabs adc in cmp out rclb rex.WXB movabs (bad) xchg ja cwtl loope mov in mov sti add fsubp pushq and rex.WB lock popfq cwtl int fwait jno loope gs jle adc (bad) (bad) (bad) pop mov pop mov addb sbb movabs or (bad) movabs xchg (bad) je (bad) je mov jl cmp (bad) mulb sahf xlat fisttpll xchg (bad) cld mov jb mov push gs pushq pushfq out or or jmpq (bad) and cmpsq cmp movabs retq add mov stos rex.R (bad) loop mov std test mov stos mov stos (bad) mov sahf mov out xor pushq movabs (bad) fidivr (bad) test pushq xchg scas cmp add (bad) and jle jmp (bad) (bad) pop jle sahf int cmpsl loop or pop pop (bad) in jg int3 lret notb adc add push jo retq cmp cld (bad) (bad) pushq test test fwait mov rex.X and sbb xchg jg movslq fwait (bad) cmp retq sbb psadbw fst xchg addr32 pop mov movups pop lahf (bad) or rex.RXB cs xlat gs and movabs jl andb mov (bad) fstl rex rex rex.WR and mov callq jns jb cmp jae sbb stc rex.W jne fwait repz loopne fs (bad) test pop scas push sbb jrcxz jbe rex.RX rex.WRX rex.R rex.X repnz (bad) add jno movsl add insb rex.XB fwait icebp imul cmp adc rex.WRXB adc (bad) xchg xor std out sbb sub mov mov fistl rex.WXB add scas fwait rex.WX cwtl jns (bad) add rol jp or rex sbb rex.WB sub jae lret test fwait leaveq xor rex.WR repz fistpll movl stos movsl mov pushq (bad) xchg mov out cltd es and rex.R fwait stc imull gs (bad) retq mov xchg jle lods loop mov in mov faddl push (bad) (bad) push fwait xor add xchg shr pop mov mov (bad) clc stos adc pushq pop std rex.RB jge xlat sbb mov out fwait cltd rex.WR int3 stc (bad) imul pushq movabs fmull adc lods sub (bad) xchg push xchg jle pop adc stc or jl repz jbe cmp out mov movabs lods (bad) cmp (bad) iret adc add movabs (bad) mov add stc lods (bad) fwait (bad) xor pushq cmc add rex.WX rex.WXB fnsetpm(287 mov add jge pop fildl (bad) divb rcrl mov push movslq mov push lret negb subl sub pushq rex.WX sbbb outsb push (bad) sbb movabs cltd (bad) out cmp in push mov (bad) ficom adc adc or (bad) fwait repz sbb add fcmovnb lods adc fimull mov mov movabs push test std in push sti movabs (bad) ficoml lahf sbbb fwait loop xchg fdivrp (bad) and ficompl cli mov cmp insb fldt popfq adc mov fldt (bad) sub jns rex.RXB fwait rex.RX mov sbb outsl test test imul (bad) (bad) cmp mov pop xor adc imul mov stc in lods sbb jp jo insb fwait cmp (bad) test (bad) (bad) cmp js callq enterq (bad) mov fwait div rex.RX and (bad) sub pop fiadd out rex.XB js gs fstpt pushfq xor loop sti (bad) (bad) xchg cli adcl cmp (bad) sbb (bad) addr32 iret stos (bad) rex.RXB loop in rex.R repnz add js imul icebp mov addl cld scas pushq sarl (bad) (bad) adc mov and repnz (bad) rex.WRX lods mov or xor int3 movabs (bad) sub orl fninit insl shrb xchg jrcxz movslq push xchg (bad) rorb mov ja xchg (bad) (bad) mov movabs faddl (bad) fst (bad) pushq adc jg rex.WR mov loope jnp sarl pop sbb (bad) jbe pushq data16 jge pushfq mov mov cmc xchg scas sbb sbb scas loop (bad) mov loopne rex.XB addr32 je sub cmp xor push mov adc pushq cmp or lods xchg frstor testl mov enterq insl pushq push (bad) mov or cltd xlat mov or xor push repnz adc (bad) notb lock mov cmp std rex.WRXB pushq loope out (bad) retq clc (bad) fwait jo in xchg pushq flds and cmc (bad) mov sahf fdivrl xchg sti rex.RXB leaveq push jo (bad) jp retq push jl sbbl callq (bad) rex.RX repnz nop pushfq popfq sti adc sbb (bad) (bad) mov push divb cmp jmp xchg mov mov xchg mov pop pop jns jb jo (bad) xchg retq pop sbb jo jmpq xor push and sbb (bad) or outsl pop rex.WRB loopne rex.X loop pop movabs iret (bad) xchg pop (bad) jrcxz sti sbb mov rorl xchg rex.RXB cld mov mov (bad) (bad) jl fabs pop add mov push (bad) mov fs callq jnp ja push loope faddl mov mov jl rex.WRB mov sbb xchg (bad) xchg mov shrl mov adc rex.WX push rep repz loopne (bad) (bad) mov sar mov fstpt rex.X or enterq mov fiadd jae insl pop sub lret sub jl mov rex.RXB mov mov cmpsb lret cmc test jnp (bad) xor rex.RXB test rex.B retq mov push js (bad) (bad) shll jae (bad) lahf (bad) cld (bad) ljmp hlt mov pushq cltd rex.B push (bad) mov sbb js es rex.RX repz sbb or movabs mov movabs xchg repnz xchg jle (bad) fwait add adc mov stc retq sbb retq mov scas and test hlt jae pop rex.WRXB repz rex.RB retq loopne enterq and cmpsl imul lret mov jrcxz xlat adc (bad) (bad) jmp mov imul (bad) outsl data16 (bad) mov (bad) jle jbe cmpsl (bad) (bad) mov rex.WRB xor incb rex.RX addr32 mov mov or jbe stos mov (bad) and loopne cmp fisub sbb sub out add in mov (bad) (bad) adc rex.WRXB lods in in mov in xchg rex.WRX and (bad) ss sub rex.RXB repnz mov and js,pt sub xor (bad) mov (bad) (bad) sbb jbe retq jns push sbb (bad) retq xchg movabs jge (bad) rex.W rex adc (bad) rex.WRXB fwait jbe xor jo (bad) test push sahf mov rex.XB fwait or scas addl fwait leaveq fdivrp mov fistp push pop imul popfq movsl mov out push jg (bad) int3 repnz rex.XB mov lea movsl xor mov stos test mov jp adc pop mov jne jns lret pop add or lods adc lret sbb fcom lods fwait sar sti (bad) fistpl (bad) (bad) xchg lods fwait push imul (bad) mov lods rex.WB cs ror jp sahf (bad) sub callq jo (bad) fwait repz cmovae loopne or addl in xchg fwait xor leaveq sub push and jno (bad) fs out cmpsb movabs mov jbe (bad) fwait push cmp jl rex.R (bad) jp or (bad) jns sti rex.RXB (bad) sub add fsubl mov push fwait pushfq cmp push sbb rex.WB jg pop cs sar imul fwait jbe lods (bad) sbb xchg in test (bad) movsl (bad) fwait nop/reserved mov fwait lret jmp movabs pop (bad) rolb test adc ficoml popfq sbb pushq adc rex.XB mov fcmovne rex.W xchg ja data16 out pop xor in pop inc sahf ss (bad) sub (bad) icebp cli popfq addr32 xor mov mov jg rex.RX sbb retq and mov rex.WRXB popfq rcrb jge (bad) push adc rex.WXB mov mov jge out sbb rex.RXB add pop sbb addr32 and cmp pop fcomip cmp cmp rex.XB rex.WRB xor in and mov and movslq rex.WRB sbb or pop movabs add sub orl xchg rex.R fwait addr32 mov mov sbb sbb cmp adc xor in fninit (bad) pop (bad) xchg sti jp mov (bad) rex.WR adc (bad) callq sar rorl adc xchg cmc sahf (bad) lods and fwait xchg (bad) jne movsl notb mov sahf jo sbb adc out xchg xchg sbb div mov (bad) fwait (bad) sbb stos loope sahf fidivl mov push mov (bad) stc add (bad) fstl popfq xchg rex.XB and jp int (bad) stc insb (bad) lods (bad) jmp out cmp out loopne (bad) je xor in fwait rorb pushfq lods fwait out lret lods cld movslq adc jmpq fild adc icebp mov sahf out movabs pop cmpsb xchg fwait shr fisttpl shll fildll movslq (bad) cmp scas xchg rex.XB test enterq sbb sub sub fistl clc out push adc or cltd rex.WR movabs xchg push in (bad) movsl lahf movabs pop cmp in add int3 xor pop out fwait js cld fcmovbe scas in mov add cmpsb fwait rorb rex.WB adc mov add (bad) (bad) fwait (bad) or pop or fwait cmp rex.WR lret imulb es adc mov rex.WB movabs xor and mov xchg xchg movabs push pop mov jns stos jp push jle rex.XB stos (bad) mov cmpsl or xchg push (bad) push sbb scas cwtl shll rex.RXB add notl rex.WXB fwait jb int3 (bad) jmpq cltd iret add loope cld fwait mov rex.RXB push clc je std and cmp cmp imul rex.W add scas popfq mov mov or ds (bad) (bad) (bad) xor jle fwait retq test mov lret leaveq sti fbld push sti adc mov (bad) sti in mov pushq fcompl fnstcw xorb xor (bad) iretq or cmp mov sub movabs (bad) xor (bad) lahf and (bad) insl xchg lret iret xchg sbb cli fwait (bad) testl sbb imul lret jno cmp movzwl mov movsb rcrl push xchg xor jnp rex.WRB rex.RB outsb loope cmp addr32 sar mov and cmp data16 mov jl push fwait (bad) iret mov insb addr32 cmpsb fwait test fcomip cmp (bad) rex.WR mov (bad) ror out fwait pushfq mov outsb jne sbb (bad) push add pop fwait (bad) (bad) rex rex.WRXB push je stos cmc (bad) xchg cltd xor subl cmpsb mov fsubrl fwait xchg loopne rex.RXB int3 xor pop rex.X push fisubr jl xchg rex.WR fwait (bad) rex.WRB out (bad) retq fwait sub lret je rex.WRX es data16 sti popfq cmp idivb rex.WRB (bad) (bad) cmp fwait mov xchg push jrcxz loop fld sbb xchg add icebp and imul cmp jle rex.WRX mov xchg (bad) repnz (bad) loop mov sbb adc retq movabs movsb pushq mov icebp rex.WXB and jg sbb sbb sub lret int3 (bad) (bad) rex.RX sub loop cld ss (bad) jl sbb mov add (bad) (bad) movslq and hlt jae (bad) xchg jl out pop cmp jne (bad) lock (bad) mov hlt jp lock xchg mov fnstsw mov adc in rex.W fwait push leaveq adc jns add sub sbb test imul stc imul mov fwait gs hlt and and sbb sti movsl jp outsl adc adc push outsb or stc jno fwait stos ss gs (bad) (bad) mov rex.RX andl mov iret rex.WXB lock movsb pushfq jno repnz jrcxz fwait cmp xchg retq (bad) movabs adc sbb pushq fwait insb js lods jl sbb rex.WR rex.WR fs stc pop push mov cmp pushq push pop retq (bad) int jg pushfq mov push cli icebp sti (bad) je jge cmp rex.R negl roll rex.RXB fs fwait jns and sbb push jg pushq fs (bad) sbb imul pop je mov and sahf fwait loopne add movsl (bad) mov fwait je out rex.RX or (bad) cmc iret scas jp lods xor push sbb mov xor sub mov mov (bad) or fistp movabs jb ds adc sub add sarl push imul std push jg sub mov jmp xchg add movabs or sbb movabs (bad) mov adc gs push sbb and mov xor sbb ficoml callq cmp (bad) jl imul stos xchg (bad) cwtl cld movslq btc (bad) cmp xchg sbb sarb subl data16 xor sub mov pop mov fwait jrcxz movsl retq pop outsl sbb gs lret jae popfq rex.R rex.W rex.W rex.RX sub push mov clc jle notb jbe rex.WX nop cmp je xchg add fwait lea xor mov int3 (bad) rex.RX test xor stos cli clc test adc (bad) movl rex.RX sub fwait addr32 xor push shl sbb fsub scas popfq (bad) jno fldl fwait rex rex.WRXB rex.XB jbe push add push adc shr add add xor popfq pop xor sbb jle mov push (bad) rex.WRXB mov sub (bad) mov ss mov sbb add rex.WR rex.B fwait pop incl (bad) cmp and or sti leaveq or jl fstpt (bad) cmc fwait cli pop out cmp mov xor sbb jl pop push xor in (bad) lea lahf cs mov fstps sub jb add pop (bad) negb jl xor mov xchg mov std pop push mov pushq (bad) adc jae rex.WR rex.WR es push mov cld negb jp (bad) je fld loopne pop and shl (bad) (bad) fwait push bndldx add icebp (bad) popfq loope retq (bad) xchg faddp cmp rcl xchg out fcmovnbe add add stos cltd mov sub xchg iret fstpt rex.RX cmpl adcl outsl cmp mov pop push pop addr32 (bad) jmpq xchg shrl (bad) (bad) movslq cmc (bad) icebp imul clc rex.WRX cltd fwait rex.WXB movabs or pop push add cld (bad) cmp fwait pop adc mov fwait cmp pop (bad) or movsl insb (bad) add (bad) xchg (bad) sbb mov mov and cmp sbb jmp xchg cmpb jg fs (bad) sbb pop mov out add push xchg fwait lret gs (bad) mov and fwait (bad) addb shrl sub mov sbb (bad) (bad) pop rex.WXB or addl hlt fwait movabs fldt fidivl jbe cmp sbb rolb (bad) jo in xor (bad) xchg xor cmp push xor outsb imul or jno callq push sub cmp mov data16 fwait out pushfq movabs push jmpq push rex.B decl (bad) jrcxz (bad) (bad) js or adc xchg and jp (bad) sbb mov sbb add push loope lock sub outsb pushfq imul sahf pop rex.WR fsubrl and jbe (bad) (bad) idiv lahf or adc mov (bad) retq sub incl rcr cwtl imul sar (bad) (bad) out (bad) fisttpl xchg cmp sahf rex.WR pop mov and sub mov rex.RXB sahf cld (bad) clc rex.WR fwait ss outsb pop gs imul cmpsb fwait mov mov (bad) (bad) lock fisttp (bad) cwtl add jrcxz cmp mov pop fidivr in movsb sbb jge out repz jrcxz fwait (bad) xor fbstp cs rex scas cmpsl pop push (bad) iret jrcxz loopne pop shrb lret rex.X stos adc movabs fs movabs retq xor fisub test int3 rex fs lods jg xchg xor lea jmp mov (bad) stos (bad) fwait (bad) jno mov (bad) sti push cmp test std lret rex.WRXB xchg stc (bad) leaveq fwait in cmp orb notl and and fwait push mov movabs dec rex.RX lock push rex.RB loop add pushq (bad) rex.WRX jg cmp jbe push mov (bad) cmc pop in xlat rex.X mov movabs (bad) in movabs (bad) stos rex.WXB push xor rex.RX gs (bad) push or push fildll xchg (bad) int3 (bad) fildll rex.RB rex.WRX gs fist fwait (bad) lret faddl cs sahf mov sti loopne rcrl mov movabs xchg repnz insl lods mov jo cmp push lock add jmp add mov ss (bad) xor stos subb push cmp rex.RX stos (bad) popfq sub rex.B pushq add sbb xor jb (bad) mov rex mov and (bad) push movabs sbb stos retq push cmp mov (bad) sbb xchg faddl fwait and (bad) mov add js xor fcmovu pop adc and (bad) cmp ss xchg cmp rex.B push test outsl add xchg sbb inc fs mov fucom (bad) mov pop loopne sar mov jb fwait pop out loop rex.WRXB rcll idiv (bad) mov rex.R lret icebp loop and retq jnp lret pop sbb sbb (bad) pushq add out sub movabs mov mov sbb fwait add and add mov xor shl jmp mov push fwait cmp cs adc callq out push pop sub icebp (bad) sti rex.WX mov (bad) scas (bad) xorb jge rex.WRB in roll nop fwait sbb (bad) xchg (bad) mov loopne add sbb push cmp test (bad) iret (bad) (bad) lods fs (bad) fisttpl std in fwait mov pushfq cmp pop or mov fwait sub adc jrcxz or iret adc ficom (bad) cmp vpsubsb fcomip or sbbb adc xchg push hlt movsb retq (bad) lods rex.WXB mov fldcw mov jge scas movabs je pop movabs add loope rex.WB mov adc fwait mov movsl pushfq (bad) xchg (bad) jl es add rex.WXB (bad) (bad) push fldt jmp (bad) clc cmpsl (bad) adc (bad) test fwait xchg xchg mov gs fwait xchg (bad) and out sbb jle cmp sbb fistp sti add xchg sbb (bad) (bad) cmp adc (bad) sti xchg cmp (bad) xchg pop int sbb jmp (bad) idiv cmp loope imul gs mov jo (bad) jg cmpl (bad) jbe (bad) notl adc cld in repz (bad) pop or cmp push and xor ja jg test comiss xchg fwait clc adc and (bad) rex.RB lahf xor cld (bad) (bad) (bad) (bad) sbb add cmpsl or int fwait idiv sbb add outsl sbb (bad) rep adc out pop in cmp shl scas scas in fwait sar out cmpsb sbb icebp sbb mov rex.WRX sub fwait rolb push sbb movb xchg add sbb pop imul rex.WRXB loopne rex.RB out (bad) stos fwait fs movslq lods adcl (bad) out lods pop in xchg pushfq and sti add mov or movabs (bad) push jrcxz mov cmpsb xchg fbstp sbb xchg movabs pushq (bad) movabs and loop shrd movsl sub adc xor sbb cmp pushfq (bad) add sti fwait loope lahf mov callq (bad) rex.RXB add int adc cmpsl xor and movslq (bad) in push fwait pop (bad) mov (bad) mov jbe (bad) addl sarb rex.WXB addr32 fwait test (bad) sub mov mov loop rcrb xchg adc outsl out xor fwait (bad) xchg rex.WRB fcompl add pushq mov sarb movsb lcall lahf outsl rcr mov mov cmp cmp pop movabs fwait out rex fcompl (bad) imul rex.WRXB outsl add sbb (bad) pushq jno loop add fwait pop mov outsb sbb jne shrb insl std fwait add fdiv pushq callq xor ss sub jl bndldx mov mov (bad) rex.RX (bad) (bad) and fdivp rex.B loopne insb cmpsb mov lea cmp mov (bad) sbb or fwait (bad) gs (bad) cli test loop je fwait jnp lods cmp (bad) jns xchg movabs popfq movsb in fwait cmp (bad) fcoml movabs in add fwait mov pushq xchg (bad) jnp fwait sbbl (bad) sbb sub cmp cmp repz fadds std jb (bad) fwait stos xchg je test xchg iret jno repz sbb mov (bad) loope in lret fdivr shlb rex.WRXB cmc (bad) in sbb rex.W fwait rex.B rex.XB (bad) xchg xorl cmp incl jae add outsb fldt adc sbb mov jmpq callq xchg adc out cmp in addb fwait (bad) cmp jne sbb (bad) popfq mov int3 fldt mov xor repnz cmp pushfq mov rex.WRX mov cmp fwait jns mov fwait addl (bad) sti cmp mov (bad) (bad) xchg mov adc mov fsts rex.R (bad) (bad) cwtl sahf push rex.WRXB push cmp adc jge mov out rex.WRB imul add movabs or rex.WRB repnz pop cmc sub fwait out cmp cmp mov adc mov in rex.WRXB lock fild rex sti push (bad) idiv add sbb or mov adc fwait (bad) movabs fwait push mov adc or adcl movswl jno xor in jbe idivb sub jrcxz movabs fwait rex.XB pop xchg (bad) out or (bad) jrcxz scas mulps xchg xor (bad) xor and gs pushfq pop je repnz mov rex.B shlb rcrl push jl fidivr js jl hlt sub cld cmp movabs (bad) pushfq xor and in xchg movabs xor jge stos negq (bad) or stc out or sbb stos (bad) pop scas sub (bad) adc jo sbb test rex.WXB xchg retq cmp (bad) pop andl xor sbb test add rex.R pop pushq test out (bad) (bad) int loope mov sbb clc xor jl (bad) pushq cld sbb jbe cmp rex.WXB jne adc loope (bad) and sub int pop rex.WB sbb mov scas out repnz pop mov add (bad) jns sbb cltd outsb in rex.WX movabs (bad) out sti out push cmpsb fcomps rex.WRX fwait cli sbb cmp sbb jnp insb pop (bad) sti sbb (bad) mov rex.WRX cwtl sub jg faddl out sbb mov rex.WRX (bad) out lahf out pushfq mov cwtl sti lret mov fwait mov imul scas adc pop push (bad) pushq movabs cmovo (bad) fwait xor insb pushfq adc mov rex.W (bad) mov out (bad) push mov fwait xchg (bad) loope sbb mov add pop or (bad) add movabs leaveq movabs loop fwait jp and test add sbb sbb icebp (bad) jle mov mov jmp shr iret cmp fwait add test fwait mov mov es xchg and mov and fwait xor cwtl add (bad) leaveq enterq in lret sbb out cli cmpl xchg fwait xlat outsl repz mov (bad) leaveq mov or jo std mov jb sbb fwait (bad) mov stos stos mov or callq loope xor in (bad) sub mov sarb cltd mov (bad) mov add (bad) xchg outsb rcrb jno in scas mov int subl rorb mov xchg push fwait test fsubl cmp (bad) fwait push and jae cltd repnz or loop add rex.R in (bad) fwait (bad) mov (bad) fwait repnz pop sbb (bad) or rex.RXB addr32 out shr cmp fwait (bad) pop and push fwait insb (bad) xor mov ja fwait mov mov fwait (bad) (bad) repnz push (bad) retq insb xor (bad) jns rex (bad) stc loope scas cld xchg or fwait sbb pushq add xlat mov loope or repz rex.RXB mov movslq js addb xchg ficoml jmpq mov sbb (bad) xchg sbb (bad) jp xor mov jle mov rex.X in fcmovnbe xor test jg sbb lret (bad) loopne in hlt (bad) (bad) jb (bad) sbb and pop jrcxz adc and fwait jnp mov jae xchg push sbb cmp imull add mov mov in ficomp (bad) add rex.WX push pushq mov xchg in in test jp iretq xchg icebp int3 loope pushfq mov rex.W jge mov (bad) jge xlat pushq scas lock rex.R add cmp xchg or or pushq lea hlt sahf jne (bad) js (bad) iret xor xchg rex.WXB or outsb (bad) fcoml testl sub xor pop sti fdivp and fldenv loop xchg push adc pop (bad) rex (bad) lods sti sub cmp out and (bad) cmp and (bad) xchg sbb int mov mov (bad) enterq lret sbb out (bad) sub (bad) xor js mov cmp xor push sub scas movabs jge (bad) jrcxz pop lahf insb cmp mov cmp lock push sub xchg pop (bad) (bad) jb (bad) mov push xchg out cmp and sub xor movsb xchg rex.XB fistpl add rcrl (bad) jp adc mov callq movabs sub cvtpi2ps (bad) (bad) jmpq in xchg insl rcr lock enterq (bad) insl mov fmul test mov (bad) mov mov and and cmp (bad) rex.WB pop pop loope (bad) push xchg sbb pop (bad) adc scas and stos lret pushq retq cmpsb or loope xchg mov and mov cmp pop loop out std rex.WX outsl test xchg (bad) in retq fnsave (bad) pop push movabs jne testb (bad) xor shrl xchg mov (bad) push (bad) jae or insl sbb imul int3 adc xor rex.RXB xor and pop retq faddl insb sbbl adc (bad) fwait or movabs cwtl (bad) cmp sti sbb rex.X cmpsl rcll push cwtl iret lahf fbld (bad) movabs movabs (bad) mov sub insl xchg mov add cmpsb pushfq jne outsl es xchg jo sub xor and retq (bad) xor rex.B sub rcrl xchg add lea insl (bad) sbb fwait ss or clc cmc fwait sub xchg js rex.WX rex.WXB movabs sbb jg (bad) rex.RX movabs stos (bad) push mov lret (bad) movabs mov fwait jmpq ds add mov add rex.WR adc xchg fdivl or int3 rex.RX jmp xchg callq (bad) shrl xor jmpq cmpsb sbb movabs jle js (bad) rex.WRX mov mov fwait sarb fisubr (bad) add xlat or out roll cmp xor mov cmp int (bad) sbb mov leaveq loop out or test sbbb in cli leaveq cld loope ja mov stos cld or rex.WB int out fwait jge add (bad) hlt mov (bad) rex.WB jrcxz insl add xchg stos (bad) imul (bad) lahf pushq or (bad) loope nop (bad) sarb je xchg adc jmpq cmp pop test mov fwait adc cmpsl sbb (bad) xchg and movabs jne mov adc nop (bad) adc sub sbb (bad) rex sbb lods shl adc fwait jle nop fimul xchg mov push sub xchg cmpl jno gs adc ja or or pop or and fwait stc loopne sbb rcrl mov (bad) out sub fwait out loopne mov (bad) mov mov sbb lcall rex.R rex.WRXB (bad) in fucomi in xchg mov push pop outsb (bad) and lahf xor pop add mov cwtl (bad) test adc xchg xor scas iret and rex.WRX add std std (bad) ja push sti sub xchg fistpll inc (bad) fistl stos rex.X out fwait lret sti (bad) (bad) jmp sbb cmp mov and push rex.XB rex.X adc mov fwait jmp hlt fdivrl sub xchg xor fwait adc pop movabs sbb mov cmp repz out lods jl mov fisub rex.WRB (bad) adc xor ss rcrl sahf fildl or loopne movabs sbb (bad) loope repnz rex.XB and (bad) pop cmp fldl cmp push mov xchg xchg loope ds mov pop (bad) cli retq and xchg and sbb fisttpl or push (bad) out (bad) (bad) int pop (bad) (bad) enterq rex.WRXB iret int3 add in fildl rex.R (bad) insl (bad) rex.WB rex.WRX or mov stos fldt imul pop out nop (bad) jg mov sbb pop rex.W int pop xchg fnstcw mov rex.W movsl sbb sbb mov jrcxz (bad) pop popfq subb stc in repz xor test rex.X invd xor nop xor ffreep mov loope cmc (bad) rex.WRB leaveq fidiv decl xchg out jp movabs rex.WX mov pop or (bad) scas gs (bad) xchg cmc and and rex.WR jae (bad) jle data16 in and mov xor cwtl push retw (bad) jb adc (bad) retq loopne (bad) in adc mov sbb nopl and fstp mov loop push jl (bad) push pop sbb (bad) sub test rex and movsl imul mov loope cmp (bad) (bad) xchg sbb mov (bad) xchg shrb xlat mov rex.RXB cmpsb jb shrw loopne sarb add push (bad) or cld (bad) adc jb outsb xorl cmp (bad) pushq out (bad) cwtl jno jbe rex.W rex.WRXB xor movabs xlat int rcrb enterq add lcall leaveq lods in (bad) sub (bad) (bad) add adc xor rex.RX sbb lods mov fnstcw and paddb sti push fnsave (bad) adc mov jbe add rex.RXB push push imul (bad) lea stos mov rex.RXB rex.WRXB fwait out rex.WR lret mov rex.WRX lods fistl rcrb mov cmc fwait mov fcompl cltd (bad) sti (bad) fcomps mov fwait mov andl sar xor retq cmpsb jmp fwait enterq mov lods popfq push rex.WB (bad) sarl test push fsubrs sbb repnz cwtl fwait pushq (bad) fucom rex rex repnz (bad) shrl lahf xchg cmpsl or fwait test (bad) sbb fistl xor rex.XB sahf retq fdecstp rorl pushfq xlat repz fbld (bad) movsl js sti std pop (bad) lea mov rex.WB rcll popq pop (bad) rex xchg movabs cmp mov ja cmp in repz fwait cmp test sti jmp mov xlat cmp stos jns movabs cmpsl push (bad) in in jrcxz loopne (bad) pop in fwait movsl mov rex.WB fwait or gs adc rex.WXB fwait xor (bad) or loop add cmp rex fcmovnb sbbl sbb jae roll repz (bad) or (bad) (bad) fbld add movabs add (bad) xlat retq rex.WXB fwait mov rex.B (bad) sub fwait pop int3 jae (bad) je popq sub (bad) adc movsl fcompl callq rex rex.W sbb xchg incl fwait psubusw xor add fwait sti sub jae ja sbb (bad) insl and (bad) or cmpsb out jrcxz xchg pushfq push cwtl (bad) lods jo es fldenv fild sbb movabs sub repz enterq (bad) jne out rex.RX rex.WRXB stos or mov or add movabs sub add (bad) fwait and mov movabs movabs outsl pop push rex.W loop sbb test rcrl xchg and fiaddl addl (bad) sub mov or rex.WRXB shr xor loope ja sbb std lret fadds fidivl mov xchg jg sbb add jns stos negl mov push fst out imul push es mov (bad) leaveq mov mov and jns in mov cwtl add lahf rorl addl sbb pop xchg add mov mov sub add ja xchg pop (bad) rol push mov pop retq stos rex.XB rex.RX (bad) loope jae jge fist int cld subl fwait jo rex.RX rex.W add sbb and xor lret scas rex.WRB cmp xchg add xor int gs sbb mov lock sbb jno fwait rclb stos pop (bad) mov cmp and adc (bad) (bad) add cli xchg ds out rex.RXB rex.XB rex.X (bad) (bad) vpsadbw stos std (bad) (bad) rorb (bad) rex.WRB sti ds fadds rex.RXB rex.WR cld ficoml cmp mov jnp xchg cmpb cli (bad) pop in xlat rex.RX fwait mov (bad) retq nop (bad) add hlt xchg mov mov (bad) es sti and stc retq (bad) in insl (bad) xor out jae sbb xor (bad) or mov stos cmp xlat sbb iret mov (bad) test loopne imul sbb push adc sahf sarb repnz fwait or xchg adc pop fcomi jl mov test add (bad) rcrb setnp mov adc rex.B sahf rex.WRX fwait lods ss mov or (bad) and fwait sub pop jbe add (bad) in rex.WRXB or mov fnstcw fwait in ss or xor and rcll fwait cmp test lea or fwait rex.RX cwtl (bad) rex.RB rex.RXB (bad) sbb xchg mov jnp (bad) xchg rclb rex.XB loop fwait iret rex.WX mov adc jo (bad) stos fwait sbb cld (bad) (bad) jns mov cmpb fwait (bad) xor movabs rex.W fwait or jg cmc sti (bad) rcrl leaveq hlt jl or movabs roll lods movslq sbb movabs or push addr32 rex.WX jge mov mov jrcxz push cltd xchg mov movslq stc cmc sbb mov (bad) test negl loopne (bad) cltd repz xchg sbb xlat push xor sahf jae roll cmp in or rex.RX mov rex.X mov xchg mov insb mov rex.WRXB fildll popfq pushq jle (bad) xor (bad) mov movsl pushq (bad) xor xchg cmp xor xchg sbb pop test out fcoms (bad) insl xor add retq cmp mov fwait jae adc pushq sub sbbb rex.R and adc retq sahf (bad) sbb mov cmp insb callq and in icebp stc fistp fdiv pushfq sbb rex.RB test js adcl rex.X out es add jle cs lret and cmpxchg fistpl sbb mov icebp (bad) movabs ffreep adcl rex.WRX fwait and mov fcmovne nop and out (bad) jae xor add fldt jrcxz add (bad) rcrl movl popfq in sbb (bad) in fwait adc retq pop test fwait lret push mov lret cltd retq mov (bad) addr32 sbb mov cwtl sub in movsl fwait sar or xchg cmp pop add jno mov mov movb leaveq jp (bad) insb xchg mov sbb mov (bad) ss and stos cmpsl push (bad) cmpsb popfq mov mov lods fistl rolb in movabs sub rex.WX insl cwtl sarl fstps rex.B mov movabs and enterq (bad) mov xchg cltd movsb (bad) add mov fwait and out fwait callq jge sub stos add mov xchg lods xchg jae pop (bad) (bad) rex.WRX punpckhdq mov add push imul jae fwait rex.WRB rex.WRXB (bad) mov mov mov cmpl push rex.RX (bad) movabs and jns add adc cmc popfq imul pop xchg adc test jne jno out or xor fwait add pushfq push mov push cltd sub add in es add mov (bad) (bad) xchg decb adc xor (bad) outsb hlt int add movslq xchg shl enterq or movups fwait cmp rex.WXB (bad) cli rorl (bad) cltd movsl (bad) mov pop fisubl loopne jle cmp or fidiv fxtract (bad) movabs fwait movsl in rex.WRXB idivl fdivrp push (bad) fiaddl lods jl sbb sti (bad) rol sbb out mov (bad) pop (bad) mov jae jmp movsl cmpsb fwait adc std mov and mulb rex.WRX lock cmp addr32 es fwait rex.RB movsl out fisubl mov (bad) (bad) jnp leaveq stos rex.XB fwait sbb shr enterq rolq (bad) movabs rex.WRX fild int3 movabs mov (bad) shll and fwait js (bad) jb rex.WXB cld and mov lret jle push loopne (bad) mov rex.X rex.X addr32 jp lea leaveq fwait xchg cmp sbbb adc (bad) sub jge pop fstpt rex.XB fs mov sub jle adc mov mov (bad) sbb pop xchg jmp mov sarb cwtl (bad) pushq cmp xor xchg rex pop iret cli rex.RB mov fdivrl mov mov adc divb hlt (bad) sbb adc xor pop out lea movabs jno push (bad) (bad) cmp pop add sti cwtl lret fwait scas sub movabs jle push rex.WRB fcmovb push fwait sbb jrcxz xor andl cs xor xor xchg fwait (bad) and push fwait imul sbb (bad) push (bad) cmp cli and int3 fwait mov mov or lods movabs jl fwait inc jae add nop add (bad) mov pop fwait stos rex.W mov cmpsl sub and sbb sti and stos rex.WXB imul sub (bad) es cli and adc jg test push sti fwait pushfq xchg lods mov xor std fwait and cmc hlt and xchg fcoml sbb xchg (bad) scas (bad) (bad) in rex.R (bad) mov sbb scas xchg rex.X mov jne and imul rex.B rex.WB fwait (bad) sbb rex mov jrcxz rex.WX lods test rex.B push fwait repz add xchg xchg fwait out (bad) (bad) leaveq pop mov loope (bad) movabs stos cltd icebp xchg rex.WRXB rex.WRXB rex.R (bad) cli add orl lahf (bad) fwait (bad) jg (bad) js xchg (bad) xchg sub (bad) in movabs (bad) and imulb add fwait cmp (bad) std (bad) fwait mull jge sbb cmp or jno (bad) loop scas imulb pcmpgtw int (bad) fist (bad) sbb (bad) cwtl pop jrcxz rex.XB in xchg cs negl scas (bad) fcmovnb (bad) (bad) fwait push pop xchg ja fistpl fwait pop (bad) imull es rcrl (bad) pushq rex.WRX scas pop fwait out mov pcmpgtw add movsl cmc mov xorl or rcrl add fld jmp and popfq incl pop rex.WR iret sar fwait loopne mov rex.B rex.W fwait sbb pop jg jrcxz sbb loope sbb rex.WRB fwait push pop imul adc movabs enterq movsl push fwait in stos mov js mov movabs stc rex.RX fsubr pop push sbb push xor rex.WRXB fwait mov jbe js fmull (bad) rex.WB rex.X in fwait jnp rex.W lea cmpsb movabs (bad) pop jae sarb xchg rex.WRX mov jnp xor jp xlat mov popfq je test push sti fldcw mov decl mov outsb rex.W hlt sbb lock mov jge js in in movsl enterq ja jle add and mov lods fwait imul jmp rex.WB fmull rex.RX jmpq fwait (bad) xchg (bad) mov fwait cli or std mov (bad) js ffree xor rex.RXB fwait cmpsb mov je fwait (bad) fdivp or mov push adc add (bad) and je or (bad) out movabs out fwait sbb test xor lahf pop movb mov fwait loop cmp loope or jrcxz adc or add pushq (bad) (bad) xchg jrcxz jne std (bad) (bad) pop gs pop mov adc (bad) subb (bad) repnz movslq sbb iret jge pop xor fisubl mov popq loopne (bad) adc shr rex.RXB incl mov mov callq cmp mov sub mov loope adc (bad) sub int3 in xor fbstp and sti out pushq xchg cmp fistp xor pop pop adc test mov add cltd rex.WRX fstpt cs in pushq xor rcrl pop fdivl lea jnp pushfq scas pushq sub xchg retq xchg pop sbb mov or sub loop int3 sbb (bad) xchg rex.R popfq mov int cmpsb (bad) (bad) (bad) mov fxch callq fs mov xor rex.XB pop rex.X fs mov adc mov retq outsb ficompl fimull fcoms pop cmp cmp movabs lock cmpsl (bad) lret pop jbe jl fdivl fildll insb fild pop insl xor fistl push (bad) mov sbb lea or jns fs cwtl js xchg je out cmp jl hlt popfq sub (bad) jne je leaveq callq (bad) push rex.WRXB jl cmpsb (bad) faddl loope adc adc mov fmull je repz (bad) jmpq jmp movslq cwtl shrl cmp mov movsb cmpsb pop xor out (bad) test callq outsb mov (bad) int (bad) out out rex.X fnstenv clc mov lea stc or xchg movsl xor pop jg ds incl enterq movabs (bad) xor lret rex rex.WRXB clc shlb fnstenv xor xor movsb sbb insb rex.WB rex.W fistp adc xchg or insl fwait (bad) sahf addr32 xor test fwait xchg insl sub data16 mov mov int3 int jo fwait cltd (bad) in repnz scas iret fwait rex.XB jrcxz je xchg in repz pop and fs jmpq sbb xchg (bad) mov pushfq (bad) fwait rex.WR cmp jbe testb (bad) rex fmull orl add stos fscale mov (bad) pushfq cltd cmp mov sarb xor loop add data16 rex.XB push (bad) insb imul sbb sbb mov lods cmp push cmp sbb mov fwait sbb pushfq lock cmp mov movabs insl vmovaps mov fwait (bad) nop mul cmp outsl xchg ljmp fwait sbb mov repz outsl (bad) repz int out retq in (bad) lea stos or (bad) fsubr lahf fwait mov in out adc jle (bad) rex.RXB sbb pushq xchg xor movsb fildll popfq mov (bad) rorb rex.RX andl rex.WRX jg (bad) rex.WX outsl pop cmp mov and mov push fwait xchg js cmp fwait sub jmpq repnz iret pop pushq sub or fstcw (bad) xor out sub or (bad) mov adc sti loope outsb mov jmp fistpl or xchg add push rex.WRX mov pop add rex.B jns jae cld mov jmpq stc and jg rex.WB (bad) add fnop mov movabs repnz fiadd icebp sti clc jge sbb rex.WRX rex.RB repz xchg jnp xor cld xchg (bad) imul rex.WRX fwait sub sti (bad) sbb jnp fstl xchg (bad) cltd nop sbb add xchg lret sti xchg cmc xchg add movabs loop cltd push ds in fwait (bad) adc xchg stos rex.W rex.X fwait jo (bad) rex.WXB (bad) mov ss mov add gs jg sahf test leaveq sbb pop rex.RB jle rex lock jrcxz (bad) sub stos data16 fwait mov or rcrl retq (bad) rex.WR fwait xor adc jnp in (bad) cld xor pop neg mov mov or mov retq lahf popfq mov ffreep lock adc (bad) scas jno movabs fistpll pushq and add mov (bad) fwait push sub fwait clc or cli xchg mov sbbb cmp mov (bad) add jmp sbb jae setnp or xor fwait pop (bad) out rex.W rex.RB cli xchg jrcxz xor movsl and jns add leaveq fistpll movsl add push (bad) decl pushq (bad) xor fwait addr32 popfq sahf movabs (bad) (bad) fwait rex.WXB add sbb or insl cmp cld add insb jne sbb fwait mov xlat mov pop cmpl (bad) (bad) push and rex.XB addr32 pushfq sti adcl push adc jb xor cmc mov fcompl fsubrs stos movsl adc sti cmp xor jle xchg jg imul movsb data16 fwait mov popfq xor mov out repz cmp fwait sub mov popfq cmc add mov faddl mov fwait mov cmp add xor rex.RX es fwait rex.WXB cmpsb adc (bad) fwait rex.RXB mov scas or mov mov insb cmp (bad) rclb jno repz fwait js rex.X rolb cs retq mov jbe cwtl fwait sbb rolb fwait add xchg sbb adc and xchg mov repz in hlt stos movsb (bad) rex.WR pop rolb fldcw mov rex.RX (bad) ds out mov jrcxz (bad) fnop (bad) add (bad) ficoml fwait movslq test xchg (bad) push (bad) jns hlt cltd fwait scas xchg xor out flds adc fwait ds rex.WXB icebp add fwait loope fcoms sbb insb pushfq mov mov add scas nop stos rcrl fldt cltd fmulp push sub (bad) fwait pop rorl mov push jmpq rex.R lahf (bad) jo add ficoml jrcxz (bad) sbb std stc (bad) rcrb cmp int3 hlt data16 and xor sub mov mov mov jge adc fisttpll mov or sub fadd push sti divps loopne adc fwait cmpsb and pop adc pushq (bad) (bad) stc mov push fdivrl cmpsl mov mov jnp rcl sbb rex.WRB xor jo in add (bad) or loopne rex.WB jg (bad) stos rex.WRB fiaddl loop (bad) in movabs shll mov out fdivp icebp xlat (bad) sbb xchg out add sbb sbb cltd mov (bad) jo neg retq pop retq fildl jns lret sbbl rex.R rex.RX fildll or add pop pop in fwait jrcxz xor sti jl fwait test (bad) and jmp movabs (bad) and (bad) pop (bad) or rex fldcw sbb int outsb jbe (bad) lret and fwait repz cld in mov (bad) cs mov (bad) movabs clc fwait movsb xor sbb cs repnz push mov stos (bad) xor sbb jmp fwait outsl pushfq (bad) xchg xchg cmp push mov and (bad) mov movabs movsl fcompl adc fdivrp movslq int3 fimull popfq cmp movabs pop jb mov adc mov mov xor imul fwait (bad) stc push rex.XB sbb lahf rex.WRB pop outsl mov push add sbb fwait (bad) outsb out rex.WX cmc sahf pop fwait jne mov fs (bad) fwait (bad) jnp mov vshufps outsl xor (bad) and fwait pop imul xchg fdiv je (bad) rolb (bad) adc and movsb repz ds xor mov add pushq mov ljmp fdivr fildll lahf imul sbb stc sbb jl pop cmp push (bad) sti push or rex.X rex.X ss std mov push mov imul stos cld mov fwait retq (bad) (bad) xchg mov fmuls insl (bad) mov and pop (bad) repnz cmpsb cmpsl mov imul movsl rex.W or faddl xor fwait mov shlb rex.B out sbb jg mov cltd lods cmpsl (bad) (bad) cmp retq sbbb jae jg cld (bad) out clc (bad) (bad) movabs imul cli test xor cmc stos jp cltd mov imul lock rcrl rex.WX fwait cli movsb or jbe mov fwait mov jnp subl lods pushfq push add jge fwait or nop mov incl data16 shrl (bad) movabs add xor adc fwait mov add (bad) popfq mov mov add add push rex.WR sbb (bad) or cld (bad) cwtl iret jae rex.WRXB cmp xchg rex.B in clc (bad) mov stos cmpsb imul fadd (bad) fstpt pop out jrcxz mov mov test sti cmp fcmovne push sub rex.RX mov jmp sti fistl xchg fwait mov out jbe (bad) rex.WRXB cmp or rep rex.B fwait jle fldcw adc mov and cmpsb icebp addr32 mov fwait shrl (bad) outsb es rex.WRB rex.RX adc je pushq add sahf pop js (bad) (bad) or xor test (bad) ds rex.WXB (bad) adc jb sbbl (bad) callq cmpsl shl jb jb mov (bad) repnz rex.R lods (bad) (bad) stc mov jae jp std shrl and xchg xchg pop xorl sub cmp mov sti cmpsl movabs xor gs or xchg xchg xchg add pop test rex.WRB xchg pop (bad) adc int3 mov push fimull jns xor xchg xor rex.XB sub jl in fnstsw addr32 sahf mov (bad) hlt cmp or sbb movabs stos mov adc sub mov int3 es vpand ss imul outsb std rex.WRB xchg (bad) pop mov and rex.WB out lock ds jrcxz mov sbb xchg mov test insl jmp mov mov (bad) (bad) jrcxz fwait scas (bad) sub (bad) fwait xor cmp or pushfq shlb sbb mov scas push stc add rex.WRB rex.WRB data16 insb push rex.WXB (bad) (bad) testb negl lret js lods fwait and mov in xchg icebp js out fwait retq and rex.WRXB (bad) cmpsl or int cltd sbb (bad) sbb sti cmp sbb fwait jns jo es cld fwait mov sbb movabs lods clc (bad) rex.R rex.R rex.WRB xchg sub or jp addr32 paddb repnz fwait (bad) sub sub (bad) add (bad) adc lods pop sbb data16 (bad) fwait mov xor cmp int mov xor (bad) fwait xorb cmp scas jbe (bad) rex addr32 xchg movabs fildll clc fwait cld scas adc callq movsl sub rex.R ror sbb movsb fistl cmp gs stos testl mov mov scas fwait (bad) xchg jno pushfq (bad) sbb pop loope add and scas rex.X rex.W push retq xor xchg retq fwait (bad) rex.RX xchg (bad) pushfq sbb mov xchg popfq fwait add (bad) out fwait outsl movabs (bad) push rcr add and jrcxz,pt rcl jmp cmpsl xchg iret jnp mov xchg push mov sub (bad) mov cltd (bad) xor sahf mov rex.R (bad) ds (bad) (bad) imul adc out test (bad) (bad) int3 (bad) rex.WR divl lret push cld push sti or cltd movabs rex.WRX (bad) sbb sbb cmpsb sbb fwait jl xor jp fwait and xchg (bad) mov and (bad) (bad) jb stos imul movabs or fdivrp psubsw or repnz (bad) xor adc rcrl (bad) mov add roll jmp mov test (bad) add stos add or rex.WRXB fstps jb sbb gs sub loopne jp jrcxz lods sar (bad) cmp xor jne addr32 mov sbb rcrb (bad) in (bad) mov xchg js jmpq popfq (bad) sar (bad) xor pop (bad) fnstsw fwait stos icebp or repnz fwait xor add (bad) xor adc clc xchg or (bad) retq xchg sub (bad) fwait (bad) cmp push je insl sbb cmp xor mov scas sbb (bad) rex.WRX fisubr (bad) movslq pop std adc (bad) (bad) lret rex.X (bad) (bad) push fwait nop or jo xchg (bad) jge movabs or (bad) ds sbb rex.X test (bad) mov mov jle adc cmpsl add and (bad) insl cmp xchg rex.WR (bad) loopne fwait callq jbe ficomp pop repnz negl stos movabs sbb sub xor callq hlt adc mov push sub imul in adc (bad) jae (bad) mov fwait je push mov (bad) gs fwait in xchg jrcxz repnz iret sub xor jle jge (bad) imul push rex.R loope jl jno (bad) cmp movslq sbb adc mov stos iret sbb (bad) pop mov sbb sbb push sbb add xchg rex.WXB adc (bad) ja rcl es or xchg add push sub mov shll neg (bad) mov adc out (bad) and lea cmp add rex.WR rex.W adc (bad) cmc cs pushq xor sbb jl rex scas add or or xor fsubr pushfq loope pop (bad) (bad) in out (bad) push jle (bad) mov pushq (bad) pushfq scas mov mov fldl jrcxz cli jns cmp outsb (bad) je rex.RXB test mov cld xlat repz and sbb push sbb rcrl (bad) mov (bad) xchg mov (bad) scas xchg mov stos rex.WB fldt std (bad) cmc or test (bad) mov sub mov adc in xchg test stc gs sbb mov rex.RXB or mov xor mov push cmp sub mov out rex.WR sub loopne test rex.R jge mov data16 imul cmpsb mov divl out sub push (bad) xchg mov (bad) imul ds mov cmp out (bad) push and xchg cmp (bad) and xchg icebp pop outsl jrcxz and mov pushfq jl add loopne (bad) (bad) in rex.XB pop negb pop (bad) mov clc xor xchg xchg push pop sbb movsl rex.WXB sbb insl loopne (bad) sbb outsl retq sub (bad) push retq lea (bad) movabs (bad) retq nop hlt stos gs adc sbb push out cltd and rex.WX (bad) adc fstpt (bad) mov in loopne sbbl rex.XB cmp movabs xchg fwait (bad) jne sbb rex.RB mov mov (bad) fcom mov xchg fildl out rex.B rex.WRXB sub jp pushfq pushq jrcxz es cltd mull gs or sbb out jle mov cmpsl rex.WXB shll mov xor mov rex.RX rex.WX repnz mov mov (bad) fstl clc (bad) (bad) test sub sbb (bad) cmp mov js fisttp sbb movabs push cmp push outsb fwait jae test mov (bad) fistl rex.WRXB scas pop fcompl cmp push sbb (bad) and enterq add xchg mov sub jmpq mov loop fwait rex.WR lahf lret fwait xor adc retq data16 (bad) jno mov fwait (bad) cwtl jb jae lods sub mov and data16 rex in (bad) imul jno fwait test (bad) hlt sbb fistpl (bad) ficompl add fwait icebp xor leaveq fwait adc (bad) nop fwait loope (bad) adc outsb mov add std (bad) cs movabs mov sbb cwtl sbb es fsubrs xchg add rex.W fwait test (bad) rex.WB rex.R mov adcl (bad) insb cmp fwait cli movsb pop xor xor pop jo rex.WXB sub (bad) pop in mov adc rcl and in pop in ficompl mov retq mov pop mov sub or sbb fwait pop jnp (bad) rex.WRX adc adc stc jrcxz loope cmp ss jmp movabs push (bad) (bad) jl xchg pop adc je sahf add clc (bad) fist add in add mov mov lods (bad) mov mov test sub in fildll (bad) adc (bad) callq rex.RXB addl loopne jl rex.WB loope out or add (bad) loope xchg jmp sti jmp sbb (bad) (bad) fwait add shll mov sbb je cmpsl (bad) test je ja fist movabs rex.WRB movabs leaveq negb rex.B fwait (bad) scas (bad) hlt mov mov sahf adc fs (bad) push and outsb rex.RXB fwait in sub rex or scas sbb je sti rex.WB fwait (bad) test rex.WRXB (bad) (bad) mov and fwait rex.WX jrcxz xor xchg test (bad) fwait test cs test out pop rex.WB add and fwait (bad) jmp (bad) xchg xor sti jl cmp addr32 add mov shrl enterq fwait lea loope sbb rcrl cmp or rol sbb xchg sub mov in loopne sbb jno xchg (bad) cwtl adcb icebp rex.WX loop stc fwait movabs sub (bad) or pop xorl retq sub out xor in (bad) jmpq or (bad) (bad) lods (bad) fist fwait out (bad) fs sbb cld sbb scas hlt mov fist (bad) lret (bad) sub cltd fwait outsl pop (bad) xor insl push cmpsb (bad) rex.RB sbb negl jnp enterq push movabs rex.RXB (bad) sbb retq cmpsb iret ss fwait and outsl xchg cbtw mov fwait cmc lgs rcr pop sbb jrcxz xor rex.WXB push jo fbld or insb mov xor jns ljmp loopne mov rex.WR rex.X rex.X rex.WB lock adcb and outsb (bad) fldt add mov rex.RX rex.B ss hlt rcrl je push repz stos jg in or fwait jbe adc hlt cwtl mov push fidivr (bad) test fwait add (bad) addr32 int test jge (bad) iret nop xchg sbb fwait sarl push rex.WRXB fwait (bad) pop gs pop (bad) (bad) callq ds mov cmpsb out (bad) mov jrcxz (bad) (bad) (bad) pushq lods cmpsb fstpl (bad) pop sbb rex.W int movslq mov rorb push shl test pop (bad) mov fwait out xor out (bad) paddsw in xchg sub es xchg xor sbb and jl insb sbb cmp fdivrs in lret iret pop test cmp fwait es push or sbb cld cmpsl mov cld fwait mov adc mov fwait sti je sbb fwait or pop nop (bad) rex.X (bad) mov je retq stos pushq pushq xchg in cwtl hlt jo (bad) gs jns push jb rcll xchg jl rex.W cs jae rex.WXB stc add jp clc in sub test sbb xadd mov cmp fstpt or test cmp loope pushq jbe lea mov cmp jp jne loop movslq lea add jne lea xchg adc fistpl (bad) movabs movslq sub (bad) cmpsb (bad) xchg mov out pop out jl rorl fmull cli scas cmc (bad) mov out sahf (bad) push out mov sbb sbb cmc sbb mov (bad) pushq pushfq pop (bad) pop cmpsl mov pop js scas sarl (bad) jle jmpq pushq loopne and (bad) scas pop movabs rex.X or data16 mov pop fcmovb or (bad) in xor lret retq pop and es xor out xchg stos loop pop and in scas xor movsl ja add pop out rex.WR fucomi xchg jle sub (bad) roll sbb jg xor mov leaveq pop mov test sbb ja (bad) repnz (bad) rex.RB loope lret loop cmp (bad) xor addr32 sarl mov sbb xchg (bad) jno adc sub rex.XB (bad) (bad) stos (bad) mov add sub sarl mov (bad) sbb push jne sarl sahf mov cmc popfq mov (bad) int3 xchg cld pushq fs mov xor movsb sti pop andl jbe popfq mov (bad) rex fsubrp rorl movabs or xchg adc jge mov cmp mov loop or nop callq and fwait js divl jb callq and jge repz repnz cmp (bad) fcmovb xchg rex.RXB fwait xchg loopne insl lock in (bad) and cmp add mov (bad) sbb rorl rex.WR fist push or fs cmp cmpsb sub gs fwait repnz xor mov test (bad) and cmp fwait lods data16 rolb loope mov sbb mov (bad) add fildll nop fsubl (bad) pushq sti pop xor cmp outsl mov fwait addr32 adc incb fucomip or rex.RB int3 (bad) mov xor jge rex.WRX cmpl (bad) callq add jno in (bad) jl and retq (bad) adc ja (bad) fildl rex.WX (bad) and cmc icebp xchg mov rcrl leaveq (bad) fwait lret mov and rex jne enterq jl or retq adc int (bad) jnp add (bad) nop sti (bad) test (bad) out pop (bad) ja lods sbb and in pop or stos out xchg fwait cmovo pop sahf and es rex.XB fwait hlt jg cmpsl lods adc push sbb fs int3 add std jg fwait or insl retq rex.WX fwait and adc xor imul sbb cli pushfq add mov (bad) fdiv fwait int3 std rex.XB (bad) push nop ja adc test and mov cli jmp (bad) adc movabs or rex.WXB rex.R popfq frstor xchg (bad) jne int3 pop scas cmp test rex.WXB stos jge add sahf sbb sub push mov sarl or rorb sbb and lods popq xchg xor leaveq (bad) sbb fstps (bad) and fwait xchg gs jmp mov and mov stos xchg xor loope movabs (bad) mov lret (bad) mov (bad) loope add rex.WRB add adc (bad) and rex.RX stc sahf mov add in rex.WRX rex.RB pop cld cs sbb popfq movslq (bad) fildl sbbl fwait and push sub (bad) sbb sbb cmp outsb stc loope jmpq cmp cmc rex.RX fs (bad) mov xchg jno (bad) stos cltd in fwait out mov fwait mov pop adcl pop lods pop mov (bad) rex.WX fwait sbb mov mov int lods rex.WRB fs mov jmp jmpq orl jne sbb fwait cltd xchg rex.RXB stos js or cmpsl movslq xlat jno insb movabs or cmpsl pop sti mov sbb nop xor (bad) in fcmovnbe fwait imul lods adc xor mov and (bad) incb rex.WX (bad) pop (bad) cmp pop movabs push rex.B sbb cmc movsl mov (bad) lret js fwait or pop int3 or imul jmp movslq mov xor jrcxz repz mov fidivl fwait (bad) fsubrs cs pushq fistpl ss pushfq pop rex.XB callq test (bad) or mov pushfq lods movabs movsb fstl loope pop fistpll sbb cmpl rex.WRXB and lods push gs push sarb negl or (bad) adc sub jge (bad) push out jno push mov add push jg test cmp sti sarl adc rex.WX test fildll sbb outsl pop in (bad) jge cwtl rex.WB sti (bad) adc xchg push jbe xor sbb roll (bad) cld out xor ds enterq xchg movslq sets rex.WX sbb faddl (bad) out sub nop push jle sbb push movsb jno sub jp jnp rex.RB xor hlt (bad) sahf mov (bad) jrcxz test rex.RX sbb (bad) xor xorl out fbstp jge retq cmp scas push mov xor es fiadd push pop lret adc cmp add fcmovne cmp pop or leaveq mov rex.WX fwait js fcoml add mov sbb jmp in rex icebp cli int3 hlt lret gs mov cmp mov jp sub (bad) mov mov add fwait stc cltd test rex.XB sub enterq movsb cmovle scas jmp add sarb mov (bad) sbb (bad) out fldcw rex cmp fwait lods mov (bad) pushfq rcrb xor fwait iret (bad) hlt (bad) (bad) pop cltd push insl xchg fnsave rex.R jo cmpsl (bad) xor popq cltd sbb pop mov push rep fisttp fwait stc mov clc test fwait jrcxz sbb push scas outsl mov insl fwait data16 cld sbb (bad) adc rex.XB fidivl js cmp jbe cld loop (bad) rex.RX rex (bad) gs xor push retq ljmp fbstp je loop sti test push (bad) movslq fwait ja nop movsl int rex.WRB ds xchg sbb adc fildl mov (bad) sbb sahf rex.WB and (bad) jmpq rcrl mov fistpll fwait out mov sahf fwait rex mov iret (bad) fwait cmpb mov sbb cmp test xchg rorl jmp adc insl mov cmpsb cmpsl out in (bad) pushfq (bad) jbe or out mov fwait movsl xchg mov test xor mov push mov (bad) cmp jb fwait je cld iret adc cltd es jmp cmc popfq mov mov add pop out sub ds jge cwtl mov int callq xor jl xor (bad) (bad) shr insb fwait cli or mov mov adc xchg mov sub pop out rex.XB (bad) repz add mov enterq xchg jno decl (bad) rex.WXB sbb rex.WX sbb jbe retq mov and adc movsl jmpq pop push fwait (bad) cmp rex.RXB je and xchg leaveq cmp mov rex.RX (bad) (bad) mov cld loopne fwait rex.WRXB mov xor sete and (bad) (bad) jne sub rex.RB movslq cmc rex.WRXB fwait es movabs movsl adc fild rex.RX sarl or fwait add (bad) sub icebp lock cs push fwait shrb rex.B clc and jp out sbb retq retq (bad) rex.WRB rex.W push movabs callq insl sbb cmovnp negb in rex.WRB sbb sub (bad) mov lret (bad) xchg outsl (bad) in mov fwait movabs or xor jns xor mov rex.WX cltd sar pop or xchg negl iret retq adc ds movabs fnop (bad) and mov and out pop or pop stos insb jp rex.WRX ds int3 mov subl (bad) fwait es and add sahf jbe divl addl rex.WRB mov xor (bad) sbb adc xor xchg (bad) mov mov fbstp fwait cmc rex.RX rex.RXB xor fwait xchg cltd cmp addl add out test pop xchg cmp sbb lret mov sahf mov rex.WRX imul pop pushq loop add clc fistpl ds fwait popfq xchg fs shrl pushfq fwait lea or mov out push cld sbb jne (bad) (bad) clc add adc cvttps2pi pop idivl fwait sbb cmpsl (bad) lock xchg retq (bad) push fwait pushq mov sub lret fldl rex.WRXB rex.WRXB rex.RXB (bad) lods mov fwait xlat mov pop fwait mov pushq rex.R sub out jmp jge fwait jmpq lods sti (bad) fwait add adc (bad) jmp sub add xor lods subl xor rex.RX adc (bad) rex.XB fwait jle rex.WX cli andl stos xor jnp flds or push movsl sbb and adc scas (bad) cmp sbb xchg sti sbbl sub rcrl mov lea mov mov adc mov sti cs pop (bad) (bad) add cld (bad) mov leaveq xchg addb jmp movabs jg (bad) rex.WXB rex.XB in rex.WX imull cld sbb pop and fwait rex.WR lods fisubl push out cmp mov fnstcw sbb rex.RX fwait or rex.WR and fwait jnp movsl ss mov popfq fwait lods pushq fs loop fwait (bad) push xchg jp jge jrcxz (bad) fwait rex.XB loopne sbb cld (bad) rex.WRXB mov rex.RXB sti sbb rex.WX in rex.WR (bad) stos add jae retq push rex.RX push scas push mov std add cwtl or rolb sti or loop test xor pushfq fs (bad) (bad) jg in sub (bad) adc sbb or test adc (bad) (bad) (bad) (bad) movslq pop cmp (bad) loop xchg shr mov in xchg mov lret mov xchg or stos loope test ss sbb movabs cmp scas xchg rex.R loopne (bad) rcll fisub jns jmpq mov data16 in and pop pop in rex.XB or (bad) int3 stos (bad) sbb ss insb xor pop movb cwtl and cmp jmpq scas outsb fisttp push out (bad) rex.WRB xchg std ds fwait cmpsl stos sbb adc jge movabs roll pop push jbe adc and rex.WB pop (bad) mov insb lahf out adc in add jle mov xchg sbb outsl adc fcmovnbe mov (bad) je sarl (bad) lea cmpsl (bad) add lock lock fmuls sbb vmwrite and or sbb rex.W (bad) mov hlt je fcoml cmp adc mov sbb or (bad) push loop movslq std push loopne add fbstp push jp (bad) icebp iret mov imul int pop clc loop or (bad) xchg rex.WR rex.WRB (bad) in lret in in (bad) pushq sbb rex.WR (bad) stc rex.RXB mov in fwait xchg and mov mov pop add (bad) cwtl jg rex.W fs imul xchg jge push in xor test jp pushfq sub mov sub push scas (bad) sbb in sub mov add fs lret mov jge push adc fistpll scas mov repz xadd fwait pop xchg cmpsl (bad) jo sub xor lock add sbb hlt sbb movsl je test lock push xor roll mulb ja mov or or fwait push jmpq (bad) xchg (bad) or sub test sbb jle out xchg stos jnp in fwait sbb outsb push (bad) (bad) push xor lods (bad) out (bad) fwait xchg add and and fwait adc mov mov rex.WRX add (bad) cmpsl (bad) jmp add adc push test (bad) lret fwait mov (bad) leaveq (bad) ds repz add pop sub mov (bad) mov rex.WXB fwait cmp cmp mov fwait movsb xchg insb sbb sub out imul fwait imul add push and (bad) clc out rex.XB out fwait sar jg pushq sub (bad) (bad) add (bad) add outsl jmpq rex.WRX cmpsb xor pop xor and sbb mov sub adc scas (bad) jno mov mov popfq (bad) (bad) sub add xor mov mov mov je lret sti xorl fwait rex.WR in rex.WRB lea (bad) ja push lahf jle cmpb movabs or fwait insl sbb push sbb (bad) (bad) mov loopne outsb shrl (bad) movabs cmp lods and xor movsb cmpb ds sbb cmpsl mov cmc out rex.WRB xchg jmpq fstpt jnp mov sub push fimul movabs xlat (bad) (bad) pop rex.WRX cmc (bad) add outsl mov sbb and or cmp loop mov lods add mov xchg rex.WX (bad) cld pop rex.XB sbb adc xchg xchg sbb retq pushfq mov xchg sti out cmpb pop push fwait (bad) xor push movabs fstps (bad) xor mov (bad) sub mov jne mov mov rex.RX lods jnp gs pop rex.XB rex.WRXB cmp (bad) pop cli (bad) sbb jl in (bad) (bad) (bad) fsubr pop loope in xor hlt popfq add fisttp xchg pop sbb andl sbb jb jrcxz addr32 stos add adc xchg rex.X fist mov pop rex.WX (bad) adc movabs data16 rex.B addr32 loop rex.RXB (bad) shll mov enterq xchg and insl push movslq xchg rorb xchg add (bad) cs out mov insl jbe loopne lods mov test cld pop insb add je shr sar rex.WRX and fdivp js xor sti (bad) std mov jl stc fs fs xchg pushq xchg cmp mov rex.XB cmp fdivl cmpsb lock xor cld movabs (bad) (bad) fstl jrcxz es mov out imul movabs leaveq popfq (bad) and fwait sahf outsb pop (bad) clc xchg ja xchg mov xor xchg movabs xchg pushfq (bad) lock ja and test test clc rex.RB fwait shlb imul (bad) rex.WRX jmpq (bad) fwait pop sub xor movabs out rex.RX jmpq mov xorl mov (bad) in mov fwait (bad) and rex.R rex.WRB rex.WR rex.WR data16 loop cs (bad) or lea jmp leaveq fs iret loope cmc stos loop mov (bad) (bad) movabs movsl fwait rex.WRX movabs addr32 out rex mov and xlat push outsl sub (bad) incb (bad) stc cmp movslq fcmovnu add cmp movsb in fstpl movsl icebp mov test pushq and push (bad) lret enterq jmpq retq outsl (bad) in pop add mov fwait sub jno fwait and rex.B or jp sbb ds mov cmpsl sti add fwait int jl ss nop mov fninit mov cwtd lcall (bad) add (bad) cmp mov stc jb rex.WX add (bad) push (bad) and retq push ja pop imul rex.W fcmovnu out out enterq and add pop fwait callw xlat mov adc fsub (bad) jnp sub pop jl iret mov xchg insb mov push sbb mov popq rex.WX rex.R fwait mov fcomps insb rex.RB sbb (bad) enterq (bad) adc and sub in jne out rex.WXB fwait mov lods test mov xor nop iret jle push fistpl and pushfq insl sbb pop rex.WRB test adc cmp rcrb fadds mov test sbb push fwait icebp pop loop imul mov movabs stc add lea clc fwait cltd xor jo outsl rex.RXB (bad) mov movabs cltd add test pop add sub (bad) pushfq cmp lahf sbb sahf in (bad) (bad) fwait jp sub adc movsl push xchg cmp loopne fwait (bad) pminsw add int (bad) cli flds pushq rex.WR movabs pop adc (bad) jge mov enterq (bad) mov (bad) or sub xchg rex.WRX scas xchg movsl (bad) retq (bad) stos add push sub and rex.RX (bad) cmp repz cmp adc test sahf add xchg popfq xchg sahf hlt fmul rclb pop (bad) pop rcll rex.WRX adc sbb idivl (bad) pop add push sbb movabs fcoms fwait mov loopne (bad) rorl add retq or sahf adc sbb pxor fwait (bad) cmp adc or jns cltd fldt fwait rex.WRXB ss xchg fwait xchg cmp rcrl cmp loope rex.RB or xchg loop pop ficompl mov add mov rex.RX ds fildll (bad) rcrb sbb loop xchg sub (bad) repz xor (bad) mov nop out sub jne imul cmpsl retq mov add ja pop jns (bad) icebp xor scas jle xchg repz lock add or cmp mov xchg mov stos adc lock sbb movsb lods (bad) sub jb (bad) cmpsb sbb and mov pop pop or mov iret (bad) pop rex.RB mov mov retq mov clc lea cs icebp adcl fistpl pop test shrb mov add sahf std leaveq pop imul ficom sbb jne movaps mov cmp (bad) rex.WRXB ds xchg icebp lret xlat jae mov jbe rex.WXB pop mov out xor insl jnp cmpsl rex.WRB push hlt (bad) mov repnz popfq out movabs (bad) sbbl pop (bad) and movabs popfq sbb or adc fwait sub (bad) or (bad) test xorb jns rex.WX fnstenv mov and rcrb add ja sbb lret (bad) xchg mov xorl mov xchg (bad) mov adc or pop jnp (bad) sbb rcrq movsb movabs mov clc shr test rex.W pop pop (bad) stos cwtl sahf (bad) pop movabs rex.WRB imul (bad) mov loopne jb addr32 movabs loop mov (bad) ss xchg add enterq xor push fstpt sub jge rolb (bad) cmp rex.W data16 xor adc ficom push callq ljmp (bad) scas sbb ja mov pop pop mov (bad) xor adc cmpb (bad) fsub fildl mov roll sub pushq lret shrl (bad) outsb loop movabs push (bad) rex.RX (bad) mov rex.WB imul rex.W rex mov scas (bad) retq mov fiadd (bad) movabs rex.RX or mov out xor leaveq (bad) (bad) lea andb repz xchg mov sbb negb or repz rex.WRB rex.R rex.RXB fwait push out xchg rex.WRXB mov lahf std rex.RB (bad) rex.WX push (bad) xchg or and fwait jmpq mov movsb (bad) mov mov rex.RXB je or (bad) lods fwait xchg jmp lods clc or add cli out rex.WR fwait enterq cld ss pop add repz je movsb out xchg add lock fistpl retq subl push insb adc stc gs xchg cld pop fwait sarl sbbl add jmp out fwait add rex.X cmp push xchg add test adc fwait insl (bad) cmp fwait movsl mov movabs jmp sbb std xchg jb retq lods push xchg rex.RX sbb jrcxz mov sbb cmp cmpl push xor (bad) fildl mov cmp (bad) (bad) clc data16 movabs adc (bad) test sbb mov (bad) mov rex.W (bad) stos xor xor lret push (bad) and sti mov (bad) in mov test in out mov cmpsl (bad) or subl sbb pop mov (bad) push xchg mov jp jrcxz xchg icebp data16 xor pushfq movslq hlt out jae fbld adc icebp enterq (bad) cwtl in repnz (bad) jl rcrl int3 (bad) xchg sbb cmp pop sub sbb shl pop xchg xchg es rex.RB cwtl movabs xchg (bad) pop pop clc pushq sub pop rex.WX mov data16 jb push lods adc movslq mov xchg subl imul callq outsb fld1 sti lods jbe ja ja nop rex.WRXB data16 sahf (bad) ds or pushq movabs push notb sbb cs rex.WRXB negb mov mov xlat (bad) and es shrb callq data16 sub xchg fistp retq mov mov retq jb loope lret pop int mov push sbb (bad) out movabs (bad) (bad) pop sub std sbb or (bad) outsb xchg xor push rcrl (bad) jmpq fist xchg movabs mov (bad) jl outsb xor (bad) movsb fistpl fsubs out scas mov movabs or sbb cmp mov (bad) (bad) repnz enterq loopne mov cld lods rcrl mov xchg (bad) rex.RX adc and cmp push sbbb fidiv test mov mov sarl xor pop out stc xchg (bad) sbb (bad) (bad) not (bad) (bad) sbb movsb sti add cmp xchg mov or sti jrcxz mov fnsave outsl lret adc cs mov imul in lods lret cmp lea (bad) pushq sbb sahf lret jmp sub adc mov loopne js notl lret lret cmpsl rex.W xchg xchg sub jp xchg (bad) mov (bad) or (bad) (bad) sti addr32 (bad) add (bad) or or and rex.WRB lret jmpq imul fs jo xlat pushq xor sub sbbb outsb rol (bad) in test or add (bad) pushq push iret test sub imul jne sbb jo mov (bad) (bad) (bad) sti push and xchg sti loopne roll stc pop rex.RB mov pop rex.WX (bad) mov and icebp sbb rex.WX xchg mull rex.WX rex.RXB mov jrcxz es out (bad) (bad) jns mov ja cmpsb cmp (bad) pop rex.B (bad) rex.XB roll pushq popfq fcomi cmp pushq cmpsl (bad) mov es mov test popq repnz mov and in movabs pop ja (bad) sahf pushq lea (bad) mov sbb rex.XB pushfq xor enterq pop mov rex.WB (bad) (bad) add cmp int3 retq notl add stos sbb icebp and pop rex.W out mov pushq adcl xchg loope imul pushfq pushq out (bad) out jmp push std sarl (bad) xchg rex.XB xchg push cmp scas lods (bad) xor mov rex.WRXB (bad) clc insb loopne (bad) mov (bad) scas xor movb pop mov pushq sbb xchg decl or incl movabs fsubs cwtl leaveq adc sar (bad) mov xor sub mov rex.WRX mov faddl fs pop adc fwait add cmp lods sub (bad) adc mov xchg sti (bad) jmpq xchg sbb (bad) rex.WXB fisttpl (bad) in mov adc js mov mov std movabs mov fwait push (bad) and sbb sub lret addr32 movabs rex.RX (bad) sbb pop (bad) stos (bad) leaveq mov stos cltd fwait shrb jg rex.R fwait jle leaveq shll adc int in mov mov lahf jrcxz rex.RB xor stos cltd (bad) xorl sub cmpb in xchg and notb leaveq (bad) sub leaveq cmp xchg fmul (bad) add add lods nop jle push jg fwait sahf sti lods test mov pop rex.WRB add mov xchg mov (bad) rex.W pushfq or test movabs jmpq fs sub add push rex.WXB insb (bad) fwait xchg mov ffreep adc adc loop mov jp add add leaveq mov xor sti outsl sbb fwait mulb mov and (bad) test add stos cli stos test push xor xor push sbb js (bad) sti add and fwait push in outsl (bad) lock jns retq sbb fildl movslq xor popfw adc rcrl (bad) push sahf repnz (bad) (bad) jl push rex.WR adc pop fs mov xchg retq xchg (bad) (bad) add mov (bad) sarl mov mov and lods movslq jnp (bad) fwait cmp cld test pop hlt fwait xor xchg rcll (bad) mov data16 test cmp lods (bad) shl fwait cmp (bad) add fdivrs sti rex.X int (bad) xor rex.WRX rcrl rex.XB mov loop pop jmpq xchg mov repnz pushq add movsb xor int fwait lods add or clc lret mov in mov sti add movabs adc jrcxz (bad) rex.WRXB jmp lods xchg rex.RX pop mov rex.WRX pop mov (bad) jl clc fildl jle sub lahf cwtl sub (bad) pop roll xor adc mov cmp (bad) xor fistpll lahf cli loope popfq jns outsl xchg loopne pushq (bad) movabs sahf in push lea (bad) (bad) mov out fwait mov (bad) mov in mov sbb fildl (bad) add sti (bad) loope sbb (bad) cmc lods jmpq fwait adc or sbb lea icebp fistl repnz in rex.WRXB adc lods rex.WXB rex.X fwait lea (bad) pop xchg ss ficomp sti mov lock xchg outsb stos rclb adcb pop xor out sub mov sbb clc adc insl lock ffreep rex.WX fwait rex.WXB (bad) rorb fcoml (bad) (bad) (bad) and rex.WRB fwait hlt std imul xchg mov add rex.RXB sarb icebp movsl add scas callq sub in xorl xchg mov fisubr rex.XB rex.WRXB lock rex.RX pop mov xchg cwtl and rex.WXB cli sub (bad) rex.WB sub jge (bad) loopne (bad) (bad) sub (bad) cmp movsb test mov (bad) (bad) fwait loope rex.WXB fwait movabs rex.RB andl add sbb jns callw xchg xchg (bad) lods int3 or xchg sti mov rex.B fwait add (bad) pop rol out and add xor rex.XB (bad) sub pop fwait rex.XB (bad) lock ja sbb in cli fwait psrld xchg xchg fs mulb clc add js adc xchg ja jp rex.RXB and neg (bad) fsubr (bad) fwait outsb pop test add and lret add (bad) sub fwait in push cmp sbb ss jg lock (bad) loop rex.RX popfq mov rex movsl (bad) (bad) sbb fcmovne xchg push cmp (bad) fwait or xor jns jne sbb lret rex fwait scas xorl xchg rex.R xchg fwait or fwait clc cltd jmp hlt data16 xchg in cwtl movabs (bad) (bad) mov jmp (bad) test push (bad) int mov icebp adc cmpsb sti js loopne sbb mov jns imulb incl (bad) and fadd (bad) rcll fwait mov xor jb (bad) or int cmpsb rcrl cmp rex.RB jbe sbb movabs jmp test jg imul rex.RXB icebp hlt (bad) rex.WRX xor sbb add insb xlat mov or xchg jp fwait cmp retq (bad) js sbb stos (bad) (bad) (bad) popq movabs mov (bad) jno (bad) jge jrcxz fmulp rex.WRB fwait xchg or (bad) mov cmp jns add addr32 add push (bad) sbbl sbb lretw loopne (bad) fwait sbb subb roll jno (bad) xchg in mov (bad) mov int fwait or (bad) jg rex rex.RX mov rex.WRB rex.WRX in fwait int jl out rex.RXB rex.R xor orl sbb jmpq repnz in sub adc sbb pushfq and (bad) divb jmp (bad) scas fwait lods cmp jbe (bad) rex.WRB pushfq imul pop out jmp xchg xchg insl pushq sbb (bad) xor testb jb rex.RB mov jmpq (bad) (bad) outsb (bad) lret (bad) sbb (bad) xchg cwtl or jle mov (bad) rex.RXB mov movslq xor fwait xor lods sbb pushq cli fwait jae pop push mov ud2 rex.WX or fwait push jnp cs push jne fwait jl (bad) sbb lea xor js (bad) movabs stos (bad) ficom and movabs mov or cmp xchg fldt cmp sbb hlt mov in (bad) (bad) (bad) mov cmp insl (bad) xchg cmp jae and push cmp out push shlb decb rex.WX rcrb (bad) xlat xchg loope cmpsb xchg leaveq (bad) sbb mov push xor or rex.WRXB mov out or xchg pop pop cld mov cltd (bad) repnz (bad) (bad) shufps iret rex.X push mov (bad) rex.WR xor sub rex.RB rex.WX adc movabs mov iret xor pop hlt sbb adc mov addr32 out movslq or add (bad) fistp push (bad) sub jge cmovne repz cmp fistp pop rex sbb smsw psubq sub movabs add addl xlat sub adc pop in out rex.XB xchg and sti mov fsubr sbb cld add imul push (bad) sbb je (bad) mov cmp and xor lahf jns push push cmc jbe icebp xor rex.W mov jbe (bad) xchg or data16 loopne jb test rex outsb xchg (bad) addr32 xchg lret cmp sti int pop mov in (bad) cmp in fcompl (bad) mov repz roll sahf sub fs mov and and xchg jp (bad) pop rex.WX ds xchg sarl rex.X fs (bad) callq pushq enterq jg iret movsl pushfq mov fwait insl push (bad) (bad) (bad) lock xchg add adc or stos pushq out xor mov jmp lahf (bad) (bad) rex.RXB insb rex.X stos rex.W lock lods out sbb ja test sub out xor cmp jmp push mov out mov rex.WX push icebp jne pushq and mov fwait push stos adc mov xchg jg out fwait xorl (bad) mov fwait and roll (bad) jb shrl jnp fwait xchg mov and cmp (bad) fwait xlat add rex.WXB mov icebp adc and and fwait add rex.WRXB mov rex.WXB (bad) roll rex.R pop rex.WRX mov fwait (bad) (bad) rex.RB and or ja shr gs fwait mull movabs add (bad) std out (bad) in sbb jne jmp jae loope fwait cmpl clc (bad) out mov sbb xchg lret mov (bad) movsl movsl sbb js cs or (bad) fwait int3 movl fwait add and or rex.WR fwait jle rex.X jmp cwtl rex (bad) or jbe add addr32 cmpl jmp fwait (bad) fist pushq shr movzwl (bad) push ja rex.WRB andl add fwait cmc repnz (bad) or (bad) xchg jle rex.WRXB jb jp rex.WXB mov fidiv sbb push (bad) jbe outsl rex.W sub loope sbb fwait jae (bad) (bad) cmc fwait jmp fucomp mov sbb sub rex.WRX (bad) cltd test jmp sbb sbb add cmpsb (bad) xor xor xchg push and jmp in and xchg stos cmp repnz (bad) push repz xchg or pushq add pop mov (bad) fwait mov sbb mov movsb xor xchg movabs std pop jmp in mov mov fwait mov cmp mov retq xchg and adc push sub rex.WXB loope cmp sbb sbb (bad) lods int add addr32 mov stos imul test shlb jb int xchg sbb out xor rex.XB cmp jg iret mov xchg jl rex mov sbb push add out jne pop xchg rex.WX xor jno adc jge mov in rcl rex mov pushq mov shrb ss scas (bad) clc push xlat fwait rex.WRXB cmc mov in (bad) xchg (bad) pushq ja cmp mov rex jbe add xchg sti fnstcw sub rex.WXB icebp jge sbb adc (bad) mov (bad) and adc loope (bad) mov adc add sub loop sbb fistp sbb jg adc sbb pop xor cmp fnstsw decl (bad) rex.WRB cs push xchg or push xchg addr32 mov adc (bad) add test add xchg je xor fwait loope std mov rex or movslq sti cmp stos mov icebp sub xchg iret mov rex or rex.RXB xor test clc sub cmpsl (bad) fmull fwait in mov jne addb mov mov mov cmc mov fs jge (bad) fxch insb mov rex.WRB (bad) fildl xchg pushq movabs mov fwait loop mov stc (bad) cmp rex.WRB lods (bad) pop xor lods cli rorb adc outsb rex.RXB (bad) or orl movsl xchg cmp xchg sbb mov mov test cmp leaveq fnstenv fwait jge sub push std (bad) jg mov push pop fcomi pop negl add and (bad) rex.B mov rex.RX lea and xor cmp (bad) (bad) (bad) pop mov mov mov pop mov int3 jmpq (bad) rcl movabs add xor xchg fdivs rex.WB lods mov mov rex.WR fwait xchg fs sbb add sub fmul or callq jle sbb cmpsl ficom lea int3 xchg jrcxz push and (bad) sbb sbbb stos xor out pop jb lahf sbb xchg (bad) mov xchg push or fwait ja jbe sahf (bad) jnp fwait lahf add rex.X (bad) mov (bad) fild xor mov lods (bad) leaveq sbb in (bad) or and pop rex.RXB test outsb (bad) mov (bad) or (bad) and sub adc test fbstp jrcxz (bad) (bad) loope mov sbb iret or sub pop (bad) andl movabs hlt mov sbb (bad) jb or popfq movabs xor cmp (bad) movsb (bad) pushq sbb (bad) jo std mov movzbl insb cmpsl out mov pop (bad) std (bad) fwait jne out pop rex.RXB hlt rex.R jl mov cmp incl sbb pop sub or (bad) rex.XB jb fst mov cmp sbb jne xchg jge cmp fistpl insl cwtl jmp adc rex.WXB cmp sub ja stos xchg (bad) fsubp and cs (bad) repz or fldl (bad) (bad) xchg (bad) sub mov mov mov shrl xor cltd xchg pop (bad) mov loope mov movabs mov jae addr32 jl shll adc mov xlat orl jb add adc add mov in fstpt outsb push movabs out retq scas cmp std jmp jmpq jl test loopne rcll (bad) xchg addr32 sbb sub fisttp stos iret fdivrl (bad) mov rclb out jl rex.WRX adc sbb jns add rex popfq jle rex.WXB rex.X rex.RX cmp pop int mov cmp xchg jbe (bad) cli mov add shll pop (bad) fstpt cmp (bad) pop rex.XB hlt mov (bad) movabs rex.X xchg (bad) mov test repnz (bad) (bad) pop xor (bad) push std retq (bad) (bad) (bad) (bad) shrl insl scas loopne or mov rex.WRX rex.WX rex.XB pop adc (bad) (bad) sahf (bad) adc sahf (bad) pushq lahf pop (bad) rol xchg rex.XB repz adc fadd (bad) cltd movsb loop (bad) push movabs (bad) jrcxz ror rex.B push sbb cmc jmpq fstpl (bad) test imul jle mov rcll pop fiadd and addr32 popq lahf fbstp scas cld jl out lret sbb adc stc (bad) in push cmp mov loope fwait rex pop rex.B fwait (bad) in xor push movslq ja mov rcrb mov pop fcomps add sbb cmp mov jns adcb clc fwait rex.X je cmp (bad) mov (bad) sbb mov jrcxz mov sbb movslq rex.RXB mov out jl (bad) sbb cmpsl mov pop punpckldq (bad) push or mov mov movsl jp cmp or and push js mov movsb fildl cs (bad) xor (bad) jns or sub (bad) subl (bad) and rcr push push fwait xchg mov push rex.R mov fwait cmp jbe fbstp fwait out movabs movabs (bad) pop pop push js or rex.RX and test push stos jge cli out (bad) (bad) cs rex.WRX retq mov repnz adc test subl add or jmp cli adc test mov data16 in (bad) fcmovnb xchg roll sub test mov mov stos and lea cmove sahf jne mov lods xchg rex.RX rex.XB fwait jmpq in jrcxz xchg movabs movabs or gs push std (bad) (bad) rex.B mov (bad) movsb mov jge jo push cmp cmpsl icebp (bad) (bad) cmp adc mov (bad) pushfq lods movabs rex.WR rex.B sub push fdivs and rex.R cmp xchg pop and int mov mov (bad) mov rex.WB sti (bad) rex.WRXB xchg sbb loope fbstp xchg and xor sub jp rex.R cmp rex.XB sti jrcxz movslq sbb xor rorl pushq pushfq fwait retq mov pop or (bad) fwait (bad) xorl (bad) sbb vpandn xor retq in add std ficompl sbb out mov (bad) mov cmpsb mov add ror xor callq fwait orl cmpl callq mov (bad) rex.WX jno cmpsl xor addr32 sbb jns cwtl pushfq hlt out lock stos mov add push (bad) rorl in (bad) rex.RX lock jrcxz or and mov (bad) mov pushfq xchg mov stos js (bad) add insl jmp rex.B rex.XB idivb xchg (bad) rex rex add mov xor retq std test (bad) fwait sti lret out mov mov in cmp shr add add movsl push lock rex.WB xchg or fdivr fwait mov cmp xor (bad) cmp xchg xchg callq cmpsb fcmovnbe or sbbl mov pushq rex.W andl retq cli rex.RB (bad) jae in push roll (bad) je rex.RXB fwait lock fwait movabs sbb mov sbb rex.X and rcrl (bad) mov repnz xor (bad) fwait adc mov cmp sub pushq retq stos (bad) push pop sbb rex.WRXB sahf cmpsb (bad) imull adc movabs sub pop lcall movslq or leaveq stos (bad) scas std (bad) ss (bad) add lret scas scas (bad) xchg leaveq (bad) cld rcll pushfq sub mov decb mov in (bad) adc cli outsb mov fwait popfq outsb insb rex.WRXB callq loope pop push cmpsl (bad) adc sbb mov (bad) rex.WXB cli sahf sbb cmp xchg stos mov pop mov fbstp jb sbb (bad) rex.XB repnz ficomp sbb sub cmpsb enterq mov xor out cltd pop add imull xor mull xor cmpsl (bad) rex.W cmp or subl imul (bad) nop shrb mov and movabs lahf jg rex.X insb jne pop in in rex.RXB lea (bad) sub and (bad) pop xchg and cmpl out addr32 (bad) push stos pop pop repnz adc add jmpq cmp ja sub (bad) or jne (bad) insb lods (bad) jnp and pop shrl scas sbb and enterq add cmp mov insw or sti sbb mov cli mov lret xor movabs mov jb movsl sbb xor add mov (bad) xlat mov movsl mov fsubrp cmp (bad) cld pushq xchg sbb mov rcll mov cmp rex.WB shlb (bad) mov addr32 jrcxz icebp sbb repz (bad) pop add add xchg mov add xor mov sbb callq xor outsb adc xchg loopne jnp mov cwtl mov adc mov cli or mov rex.B hlt lahf mov add xor mov cmpsl test mov sbb rex.WXB fmull (bad) mov pop addr32 xor adc out fwait lahf xor mov movsb movabs (bad) sub fs fwait lea cmpsb fimul negl push lret fwait xor in fdivrs mov fcompl xor (bad) imul (bad) push lods in fildl jp fist lea rex.WR movabs add xchg sub ds jmp pop imul fwait test popfq (bad) add test xchg rex.XB lock mov (bad) or (bad) push in adc ja (bad) mov (bad) int pop cltd sarl jnp data16 retq adc rcrl scas in in push rex.B fwait xorl sbb int xchg imul scas js jnp pushfq jmpq adc (bad) scas rcrl and jae je (bad) testb outsl pmaxub xchg pop push mov xchg (bad) pushfq ss out rolb fwait rex.R xor (bad) stc lret mov sbb (bad) cmpsb (bad) (bad) and out or in imul retq mov repz fucomi adc add pop iret sub fwait movabs ss lret sbb fwait es cli (bad) xchg sub movsb cmc sbbb (bad) mov sub (bad) jne pop (bad) test xchg fwait movslq pushfq (bad) fwait (bad) pushq fcoms adc and cld (bad) mov test in fisttpll (bad) xlat rclb (bad) shrq in add faddp sbb sbb (bad) test stos xor cwtl rex.WX fwait movabs mov mov xor sub xchg pushfq mov scas push loope rex.RB fwait (bad) xor sahf mov (bad) cmp rex.RX cltd test and mov jle lods xor fcmovnbe add retq fwait idiv (bad) enterq xor int3 rex.R cmp outsl sub rex.WRXB jg and retq jmp (bad) repz nop retq fwait push cmpsl mov movl rex.RB jno mov jb (bad) adc mov lret in sbb and adc mov mov add xchg in fwait packsswb jmp cwtl or xor rorl fwait pop data16 fdivs cmpsl xchg callq retq (bad) retq movslq (bad) xchg (bad) std sbb addr32 iret and repnz clc xor movabs mov data16 mov cmpsl rex.WR push push insb sar pop ficompl mov sahf jae (bad) fldt pop lock rex.XB mov int3 sar xor lock and jae cmpsl jo xchg (bad) cmp lret mov std (bad) cmp add out es (bad) xor sbb insb (bad) js sub (bad) in or clc sub xchg pushq sbb movslq (bad) pop (bad) in xchg (bad) jnp jo xchg fsubrl hlt cld sbb push jmpq gs (bad) (bad) adc icebp sbb pop es mov shrb cmp fisttpll rex.WRB rex.RB mov cltd or add shr ds jns rex.WX sub divb mov fildll insb xchg leaveq mov sbb xlat (bad) jbe (bad) (bad) (bad) adc cmp stos mov pop sbb jmp and pop fisub sbb cld xchg sub rex.WRX push retq fwait mov or jae rcrl insb lea xchg repnz popfq mov lahf mov rcll adc add (bad) pop test shlb adcl and stos rex.RX or rex.WXB mov or movabs (bad) or ficompl shll sbb or jrcxz sbb lcall int3 (bad) scas jne rex adc jmpq fwait stos (bad) adc xchg sti push lods sbb rex.WB xchg cmp (bad) fwait scas (bad) sub (bad) data16 retq or sub retq rex.B fwait cmpl fwait or rex.RB adc sti pop mov and popfq (bad) mov (bad) subb adc and movslq cmp fwait jo out movsb outsl rex.B rex.W xor sub out rcrb data16 fwait sub mov jnp fcmove (bad) std xor adc sub (bad) adc or movabs fcompl cmpsb popfq rex.XB bnd mov stos (bad) mov pushq cld (bad) sub lock (bad) in rex.WRXB std jge loopne rex.XB cmpsl lea adc mov adc or sbb push adc xor (bad) (bad) sbb stos (bad) rex.XB adc or cmp (bad) sbb sub pushfq sub fldt sbb movsl xchg and pop out cmp sbb jrcxz pop lea xchg xchg movabs rex.X cltd sbb rorl rcrl lods rcrl add push loop mov mov leaveq jle cld sarl sbb mov cmp ja (bad) stc movabs rex.WX fstpl cmc ds (bad) cmpsl xchg jae loop xor sahf add jo movabs jle or loop cmp out jge cmp rex.B lret adc outsb (bad) mov negl in popfq (bad) adc test mov push pop lea push mov and rex.WR xor rex.B es in rex.WRXB mov loopne cmc sbb jmp rcll or (bad) rex.XB mov fcmovnb push nop rcrl test popfq and sbb jb fcompl idivb clc loope mov movslq movabs adc cmp jmpq mov or movsb (bad) jle shrb fnstenv (bad) cmpl push and fstl shl imul jb cmp rex.WRB test fist (bad) rex.XB mov push mov rorl and rex.B fdivs int (bad) fwait mov nop (bad) in outsb testb fwait iret stos fsubl sbb movabs sbb rclb ds jae vmaxsd (bad) mov fs fwait adc fisubr fldln2 jo mov nop (bad) stos rex.WX add cmp outsb mov cmp leaveq fistl imul xchg rex.WX lock adc loop in lahf movabs xchg sbb mov adc rex jge addl sub test repz (bad) fwait xor lods (bad) fistp (bad) adc and jrcxz mov stos cwtl negl xchg rex.W icebp loopne jne lock fwait (bad) adc (bad) movslq rex.W fwait jrcxz xchg rex.XB movsl (bad) xchg sub mov (bad) (bad) mov in mov rex.WR rex.RX enterq adc test jrcxz fwait icebp data16 shrb testl xchg outsb out jge retq xor rex.RX rex.WXB sbb jrcxz mov lahf adc (bad) out sbb outsb movabs jno rex.WRXB cmp js (bad) sbb adc (bad) (bad) or xchg out rex.WB stc sahf sub mov adc pop (bad) pushq rex.WRB stos in mov fwait ss sbb cmp in (bad) (bad) loope mov rcl (bad) jns jp,pt outsb adc cmpsb jnp sbb movabs sub sbb cmp rex.WB fwait jmp cmpsb data16 callq pop cwtl mov not rex.WB fsubrl fwait and nopl (bad) fcmovbe fbstp repnz adc add xchg cmp sbb rex.WRX mov sahf movabs mov (bad) (bad) pushfq xchg adc rex.WX rorb fwait xchg ljmp adc in (bad) fwait (bad) stc rex.WXB hlt std fwait sub and cs (bad) fincstp (bad) cmp (bad) fwait xchg (bad) pushfq in imul add repnz (bad) add (bad) movabs imul (bad) fwait mov (bad) rex.RX fwait xchg movsl retq (bad) rex.WB sbb leaveq xor test or test mov sahf fnstsw pop in adc push mov xchg cld xchg pop callq xchg jge xor jae push lods in jle (bad) lret xchg fwait (bad) incl rex.WXB xor (bad) pop (bad) loope (bad) decb and adc sbb mov mov jmp jp jno cmp scas jrcxz fcomps sub mov por sbb (bad) push push pushfq rex.RB loope int3 cli sti mov sub (bad) popfq cld mov gs sbb fistpl fistpll sarl mov jae stos (bad) adc movabs lock (bad) mov mov jg or jmp icebp in (bad) test push pop callq sbb mov and insb cltd or cmp retq sahf jns sbb xor (bad) in js mov rex.RB add cmp xchg sbb mov sbb mov jge rex fdivrs sub cmpsb out or (bad) sbb jmp jbe rex.X negl stc mov rex.WR loope test mov lcall (bad) xchg (bad) cwtl mov (bad) sbb jmp xchg (bad) push (bad) (bad) sti rex.XB sahf (bad) int3 std pushq loopne out mov (bad) negl cltd jb jg xchg (bad) mov sbb jle rex.WRX lar sbb fs loope mov cmp sbb in test (bad) mov in (bad) pop pushq jns lahf (bad) fs or (bad) or adc notb fistp je sub (bad) stc negl sbb mov lret sti out sbb cwtl sahf rorb add fsubrs adcl pushfq addr32 pushq or xchg xchg pop xchg (bad) test pushfq pushfq rex.RXB adc (bad) pushfq rex.XB rex.R jrcxz adc cmp cwtl (bad) (bad) jg xchg sarl jae (bad) xchg (bad) (bad) push sbb ds popfq rex.WX xchg (bad) movsb mov (bad) mov xchg xchg rex xchg mov std (bad) (bad) je ja test out (bad) cwtl cmp in sbb popq movsb (bad) sbb jg fdivrp add xor lock out adc (bad) callq and mov xchg sbb cs mov outsb xchg xchg sub rex.RXB xor stos lret rex.WXB bnd movabs jbe push test and jl jne fwait hlt repz push mov (bad) retq scas mov fwait movsl icebp rex.WXB (bad) (bad) or rcll add jo mov loopne (bad) cmc fwait mov mov jle ja sbb sbb (bad) xchg mov fwait sbb pop jp pop adc test rex.RXB cltd push mov mov fwait (bad) jbe pop add fwait pop mov cmpl mov rex.RXB outsb push ss add jge loope sbb mov (bad) (bad) lea (bad) fwait (bad) in rex.WRB nop cld cmp adc jne adc xor fwait minps nop (bad) or movabs fnclex sti fcmove fwait cwtl sub sbb cmp sub hlt xchg fwait cmp (bad) (bad) jg test subl pop add in int and fwait (bad) orl mov mov add jrcxz sti lods pushfq movabs add rex.WXB rex.B subl notb lods pop jbe int3 cltd lahf sbb sahf ffree jns (bad) fwait ja sbb iret out jmpq imul sbb and cmp sti mov xchg fwait rex.R (bad) (bad) movslq cmpl retq push (bad) xchg fwait xchg and rex.XB rex.WB mov mov (bad) fwait (bad) jle (bad) test in fadd shlb mov (bad) jae mov es sub pop fidivl pushq (bad) int jg or movabs (bad) movabs sti (bad) mov xchg lret push iret fwait in xchg cmpsb adc loope std sbb xlat sarl mov or cmp enterq int and sbb lock adc ss mov push sbb hlt xchg or addr32 cmpsb fwait jrcxz sub cmc pop lret jne pop in add pop add enterq hlt (bad) imul and fmul jnp mov std test mov (bad) sbb pop repnz insb fscale int sbb clc adc (bad) sti jg sbb in rex.RXB fwait cmp push movsl mov cmpsl sbb adc sbb movabs (bad) pop (bad) lods mov jne cltd lret enterq mov sub or cwtl fwait (bad) insl cmp fwait sbb mov fbstp lret or fdivl (bad) scas or loop (bad) xor xchg (bad) add pop int3 mov clc sub and jp sarl (bad) fwait xchg xchg or adc mov xchg retq xor stos xchg pop xor rex.WX rex.RX in (bad) jmpq cmpl xchg je,pn fcmovne mov rorb xchg hlt adc loopne rex.WX fild jnp sbb xchg adc movabs fisttp pop sub fs mov jmpq sahf cmp gs mov rex.WXB pop outsb (bad) mov fwait sub movabs pop stos cli sbb repz movabs xor rex.WR rex.WX movabs xchg mov jle sbb pop push movsb (bad) (bad) pushfq mov jbe or cmp rex.WXB movslq lea jmp pop notb jne fistp sub (bad) sbb std or mov or xchg cltd clc in jle imul sbb nop rex pushq sbbl cmc jb xchg jnp ror retq mov sbb rex jrcxz iret and addr32 fs fistp retq sub pop fmuls (bad) fdivrs jns lock rex.WRX ffreep xchg (bad) rex.XB retq addl pop cld jbe lock (bad) and or cmpl callq lods out (bad) mov mov pushq rex in adc sbb icebp movabs pop mov mov mov cmpsl mov fistpl rorl fwait jp sarl fwait callq (bad) (bad) js (bad) rex.WRXB add (bad) pushfq sub and fwait insb rex.WRB push lret sti xchg xchg (bad) es iret rex.WR mov sub or movabs mov mov (bad) fwait xor jne mov mov data16 mov movabs xchg sbb or xchg mov shrl jmpq flds sti or xchg (bad) mov rex.B fwait ja popfq and and (bad) loope fwait jg mov rex.WRX (bad) pop fistpl xor pop cltd mov sbb mov test (bad) icebp (bad) pushfq movsb repnz stos int3 ss (bad) (bad) out ror loope (bad) ds add out fwait cmp (bad) insb jno imull add push fstpt jle fwait loope lea xor leaveq (bad) int sbb fs fldt outsb add add and lods (bad) in out fisubrl pop pop pushq rex.B (bad) jmp (bad) lea mov rex.WRX sbb jnp sti in push test loop sbb lahf js mov (bad) iret fistl jrcxz shlb add or sub in out sbb movabs fwait scas jo test (bad) mov pop sti hlt shll (bad) mov mov outsl stos fstl pushq xchg sbb xor movaps push sbb lock add fwait out imul fiadd test (bad) sub or sbb cs push mov (bad) adc mov stos movabs out fwait push (bad) retq fwait push and or jg in std nop jbe or fwait in xchg sbb pop sahf xchg mov (bad) (bad) (bad) sub in out rex.RXB mov fwait (bad) jno cmp (bad) cmpsb (bad) (bad) push pop xchg jne and (bad) (bad) pushq (bad) insl jl jrcxz in cltd cmp out fwait (bad) jp sub pushq (bad) cmp es and xor ja stc stos (bad) (bad) mov (bad) cmp mov push rex.RXB and (bad) retq rex.RXB fwait or (bad) fwait pop xchg xchg rcll lahf adc callq pop jae gs pushq hlt xor mov shl adc pushq sub pushq movslq es and or and scas jl in and cs mov outsl sbb jrcxz out addps xchg (bad) fstpt and mov in jg xor jae or (bad) (bad) jo xlat xchg (bad) sahf mov out (bad) pop push repz xchg (bad) add loop mov (bad) push mov hlt mov mov push (bad) mov sub popq (bad) mov pop jmp jns loop (bad) lahf loop pop iret insl xchg (bad) cwtl mov (bad) jmp fcmovu jge sahf (bad) gs mull fs fstl imul jo cmp imul adc outsl pushq xor (bad) je jns movsl ds xor or add retq adc (bad) stos rcrl movabs fisttp loopne xchg rex.X loope outsb jle sbb frstor stos fwait retq mov push mov cmp add int3 push jns rex.XB mov movabs add imulb jl xchg rex.WB rex.WR mov (bad) adcb fwait cmc rex.RXB rex.WX and fwait xor fwait rex.R (bad) mov cmpsb cwtl adc in sbb sti jle cmp jns popfq cltd test hlt fwait addr32 rex.XB add rex.W rex.WXB jge rex.RB stos out sbb adc movabs rex.XB cmpsl and (bad) cmp imul addl es pop xchg pushq mov jp pushfq out rex.WXB cmp ds (bad) cmc notb jmp rex.WRXB movabs mov sbb test fwait add (bad) (bad) movabs stc sub (bad) fistl (bad) cmp rex.B in mov sub (bad) or shll rex.WRXB pushq mov out movslq idivl mov es (bad) (bad) mov and rcr (bad) rex.RX fwait (bad) mov lock sub int test (bad) adcb fwait or pushfq test xchg fstps (bad) (bad) jmpq adc push stc fwait enterq je shll test jae (bad) (bad) fbld pop (bad) fwait cli stos sub (bad) movabs push cmp mov movabs add imul adc shrb mov sbb jno mov es out stc in and rex.WRXB or cwtl lods (bad) mov xor fwait rex.WR push (bad) xor fwait mov sub sub pop rex.W enterq sub fwait rex.WRX (bad) add sbb fwait mov (bad) (bad) cmpsb in mov fcompl sti leaveq cld (bad) out sbb repnz add mov fwait imul in fcomps movsl js divb (bad) or push add mov lods js jl jge retq mov xor negl adc mov (bad) jg pushq jge out pushfq sub pop imul (bad) cmpsb (bad) movabs sbb push fbld xor mov (bad) xchg jne,pt push movabs pop loopne cwtl xchg pushfq mov fisubrl (bad) je cmpl ss xchg pushfq pushq pop jo mov mov ds out xchg rex.RXB (bad) xor (bad) (bad) mov sahf (bad) xor lods lock rex.WRB xchg jge shl gs push jae (bad) add pop int3 cli mov mov adc mov fnop addr32 push hlt psllw xor movsb sub add xchg push andl rex.WB mov sbb sbb pop data16 jne jp fwait (bad) mov cmp sbbl jrcxz fidivl (bad) mov (bad) pop cmp ss sub xchg (bad) sbb repz mov (bad) std je frstor sub stos rex.XB mov lea fsubs xchg mov xor out sbb pop and jns xor adc rex.RX enterq cmp out (bad) mov loopne leaveq int3 sahf (bad) out fildl repnz fwait sarl fwait (bad) fdivs cmp push or outsb fwait out ja addr32 loope xor sbb jrcxz rex.X imul sub jle ja mov enterq out jo fstl pop xchg clc cld (bad) repz mov (bad) addr32 loop cmpb loope outsl sti stos mov cmp jno (bad) in jrcxz jo rex.RX jg sti adc sbb jmp out (bad) testb rex.WX jns mov mov (bad) fwait nop cmpsl adc or sub jp loopne mov xchg add jl adc jo add sbb rolb movabs and add sbb movabs jge mov es mov fwait (bad) xchg pop mov rex.XB sbb out mov fs pop stc xchg mov loop retq (bad) je stos add rex fwait and and sarl fwait mov hlt (bad) mov mov cltd (bad) lret and cmp std sbb enterq data16 add xchg mov js (bad) ja (bad) cltd loop or mov mov jmpq rex.W fwait nop (bad) push hlt lods insb callq std retq rex.WXB xchg push fwait in sub fwait rex.WRXB (bad) jns rex.WR sti sub (bad) icebp pop out in (bad) add mov in xchg sbb rex.X lock icebp fwait (bad) std cltd cmp mov sub es rex.WX fwait mov sahf cs (bad) (bad) repnz (bad) (bad) and rcl ja fwait or pop (bad) mov fistp xchg (bad) rex.W or stc and std xchg shlb xchg mov rex.WX rex adc fwait pop out and callq jno retq (bad) (bad) stc fwait sub (bad) or mov pushfq sbb adc jnp (bad) cltd or repnz fstpl push xor imul scas std mov rex.W mov xchg jns (bad) fwait popfq xchg movabs stos add xchg xchg add or (bad) rex.WB loopne (bad) (bad) cmp mov adc xchg jne ds addl mov lret movabs sub test lea xor jb jp add hlt rex.WRXB (bad) (bad) jb (bad) pop (bad) mov adc and rol pop push mov (bad) movabs cmp cmp out fsubp lods int mov sub mov rcr (bad) rex.W xchg pushq sti testb notl shll rex.WRB cld rcrb jbe or pushq pop sbb data16 int3 hlt (bad) and add mov fwait rolb sub rolb mov loope jbe and (bad) lock fsubr jp movabs stos movsl xchg push stos mov adc mov cld (bad) (bad) (bad) data16 scas movabs pop divl mov sbb sub pop push int3 pushq in (bad) (bad) jg pushfq pop pop jae adc rex.WRX rex.XB repnz ds jns mov cmp mov or loop push pop cwtl (bad) jae sbb loopne cld xlat out loope popfq scas pushq xchg lock rol movsb callq rex.B leaveq sbb (bad) test cltd callq xor rex.WRX es (bad) sbb lret mov int3 xor fwait js out lods pop lea fwait scas (bad) movabs nop (bad) callq (bad) fist lahf fwait xor leaveq xchg or fadds loopne stc enterq jle (bad) push and xchg add lods cld jmp repnz fstps in xchg pop rex.WB jrcxz fwait and lods testl cmp fwait mov pushq add fimull jmpq (bad) (bad) imul sbb sarb mov lret stc mov add cmp (bad) repnz sti mov out mov add push fwait test lods test push rex.WRB (bad) mov loopne rex.WX fwait (bad) cmpsl cld and fwait mov push retq adc jge pushq lods mov rex.WR stos fwait add (bad) adc outsb fwait xlat subb imul scas cmpsl fwait int3 sbb (bad) fwait not callq jne xchg push jg sbb rex.W lods adc fwait mov adc rex.RX fwait (bad) and pop pushq callq in sbb mov mov and or push sbb sbb insl mov loope sub mov movslq cli fwait cld pop mov mov jb fwait mov fstpl sub mov pop test sbb es out loope js lea negb and jle loope fs add rex.WRXB insb or xchg and lea (bad) add (bad) js (bad) sub mov sbb jl and fwait (bad) movabs xor pushq jnp test sbb mov int3 cmp cli (bad) or rol out rex.RXB movabs repz fwait jg xchg fwait and rex.WXB fwait lods sbb or adc jl popfq lret stos loope jb jnp push cmp push sub hlt movslq push (bad) fwait pop and cmpsl fwait xor js lea fistl fildl (bad) pushq and mov mov (bad) stc add fwait adcb (bad) xchg (bad) es mov sbb loope sbb mov gs (bad) xchg mov rex.B fwait push movabs mov in (bad) (bad) mov subb outsl cmc pop fildll (bad) ja pushfq (bad) sbb lahf (bad) pushfq sbb fmull xchg (bad) jl push jge add mul sbb es add outsb jg fwait movslq mov mov out ficompl (bad) movsl sub fstpt jnp out hlt mov pop sub in pop rex.W fwait xchg mov (bad) rex.WXB cs fwait jns sub (bad) xor xchg imul fwait pop (bad) mov cmpsl fwait or (bad) movsl (bad) cltd push add sbb push test fwait cmp sbb fwait cmp jnp fwait insl (bad) jo fldl mov rex.WRX jge (bad) adc xor pop sub fwait mov sub notl lret fldenv pop movslq or fdivs fwait rcl fcmove mov js sbb (bad) fwait (bad) rex.WX fwait xchg jg sbb rex.WXB add and sbb loop loopne mov iret fisttpl (bad) mov add pop push jnp rex.RB (bad) lock (bad) cmp (bad) sti fstpt sbb (bad) jl push (bad) mov (bad) fwait mov scas push out xchg pushfq jns push (bad) xor add pop pop xchg xor xchg (bad) jns stc lret (bad) out fwait jnp insb sub mov pop add mov (bad) lock xor fwait cmp mov mov pushq fwait (bad) sbb subb (bad) fistl data16 (bad) outsb ss jmp or xlat fsqrt adc mov incl repnz imul fsub (bad) retq adc movabs pop insl mov rex.X rex.WXB fwait xchg pushq pop (bad) std (bad) push loop cmp sti (bad) lods (bad) (bad) cwtl (bad) callq (bad) repnz sbb rex.RX fwait xor pushq mov (bad) add jl lret loop sbb (bad) in fisub iret fwait jns adc mov jp (bad) fmuls stos movsb push sbb sti loop jbe sbb retq mov in rex.WB sbb cmp rex.WRB rex fisub fs sbb fwait out je (bad) fwait mov (bad) jle jo int and sti pop add popfq (bad) fistpll mov sbb out add and cmp test jge push in movsl adc cmp mov (bad) add (bad) in rex.X (bad) (bad) rex.WXB fwait pop lahf in push (bad) sbb xchg (bad) stc lock cmp es adc jle icebp rcrl out (bad) imul rex.RXB sahf out mov fwait in cli js icebp sub mov jbe and (bad) cli (bad) fwait in pop test cmp je mov fwait rex.X jmp fwait xchg (bad) or lock rex.RX mov fwait xor fdivr iret fwait lods jle ja xor cmpsl fwait xor and (bad) rex.WRB cwtl mov mov sbb (bad) testl scas repz rex.RXB rex.WRX fwait jne jbe jge and mov and sub mov rex.RXB lock subb add (bad) repz test (bad) adc or add rex.RX fwait sbb addr32 fcompl fnstsw adc xor kmovw retq sti es sbb xchg enterq mov lods sbb mov (bad) pop add and scas cmp mov test enterq (bad) push push or (bad) fmul add mov icebp (bad) popfq sub ds rex.B and insb xchg ficomp (bad) cmp add or or loope in fwait add rex.WX xchg test adc fsts (bad) out xchg rex.RX clc (bad) outsb mov and sub pushq lea (bad) rcl cmpsl ss (bad) fildll jns push fsub (bad) popfq mov incl mov stc or lea sbb (bad) retq add sti lret cmpsl fwait out negl push cmp mov rcr sarl xchg outsl jg js es idiv pop jo push and sbb lahf and cmp push (bad) test fcoml cwtl mov lret pushq xor fwait test js xchg and mov jge cmpsl mov mov add xchg rorl andl xchg sub fldt xlat xor rex.WR fwait std stos (bad) and fwait pop push rex rex.WX js jne ds mov (bad) rex.XB fwait (bad) sub clc rex.RB rex.RX xchg xchg popfq push jae (bad) imul cmc sbb pushq popfq movabs (bad) (bad) pushq mov (bad) mov fadds (bad) (bad) xor retq rex.RB sbb xlat xor shl mov pop xorl pop lret sbb fsts (bad) pop scas mov adc cld fwait adc and test rex.WRB data16 (bad) cltd std fild insb (bad) mov fst js jmp mov hlt or xchg stos fwait (bad) je push cli xchg movabs jp sahf rex fwait (bad) push (bad) loop mov pop sbb pushq fisttpl sti (bad) mov loope fwait mov movabs cmp pop (bad) jo jg loop (bad) nop and sar enterq mov fldenv movabs retq cmp jo test add rex.RXB adc mov in or cs iret rex.XB pop int mov fidivr adc andb ror fisttpl sub fwait loopne lods std sbb add lods (bad) add sbb in sub cwtl cmpsl out js or sub rex.WB rex.RX mov (bad) cltd sub enterq (bad) xor cwtl movabs sti (bad) std mov (bad) stos fwait (bad) (bad) adc rorb sbb mov int add pop sbb rex.WXB (bad) fwait mov mov jns std fwait cmp imul es fwait cmp rex.W and or rex.WB fwait cmp mov movslq cmp cwtl out pushq or mov jg cmp or sbb jp mov enterq jno insb fwait movabs mov cwtl pushq sbb pop (bad) rex.RX or or callq in fwait out mov pop (bad) fwait fs popfq fsubrs (bad) jae adc repnz mov (bad) imul xchg jno fstpt sbb xor pop add sub bnd (bad) (bad) out sbb fmul out mov cmpsl sbb lock fwait add (bad) xor adc mov adc callq lea mov rcll fwait add jle outsb add cli jrcxz insb xchg lahf (bad) stos in cmp mov (bad) ja sbb (bad) rex.RB lea mov mov cli and (bad) out sub stc adc cmp pop out popfq negb sub jg lret rex.RX fwait ss sbb adc (bad) (bad) fmul (bad) sti out nop lods (bad) sbb cmpsb pushq (bad) leaveq pushfq sbb and (bad) pushq stos cvtdq2ps test lock or sub or out fwait sti adc or jb mov lcall cmp movabs in fwait xor xchg (bad) lahf popfq sbb mov enterq mov lock xchg subq or fisubrl (bad) fildl mov jrcxz nop ja sub or xchg movsl std fbstp imul fwait gs mov fwait pushq retq push xor xor (bad) (bad) out movslq fcmovne scas sbb push (bad) rex.XB in out adc or rex.WX movabs xchg mov fwait add icebp rex.R push clc movabs push sbb rex.RXB xor nop mov (bad) in rex.X int xchg jle movslq cmc out xchg sahf stos xor xor fisttpl loop jle pop sbb movabs jo sbb (bad) rex.WRXB stos sub (bad) je xchg or (bad) enterq mov (bad) rex.WRXB rex.WR or (bad) shr es rex.R fsts lods rorl xlat mov fiadd push sub mov icebp movabs mov (bad) push movslq je test rex.WXB or movabs and rex.XB pop push mov pop imul in sbb mov (bad) rex.RX notb (bad) pushfq adcl (bad) icebp adc in jnp rex.RXB adc or rex.X ds fisttpl cbtw pop mov rex.RX add cmp fadd rcrb or (bad) rcr (bad) mov mov imul shrb jo xor loope xor int adc fsubrl rex.WRXB outsl and mov in (bad) loopne push add popfq fcompl sahf movabs xchg lods rex.WB stc (bad) cmc imul data16 jo and rex.XB lods or rex.WRXB (bad) scas mov sub mov jge sub rex.B movsb sub iret xor stos and addb fildll sbb cwtl mov sub jne fwait xor mov leaveq movabs fsts sbb (bad) (bad) lods (bad) pop xchg push (bad) and xor hlt roll jp (bad) xchg ss xlat xchg mov mov insl shufps cmp in addr32 imul (bad) sbb pop cmpl sbb xchg (bad) xlat iret and rex.WRB mov mov (bad) push outsb cmp rex.WR retq je (bad) in sahf (bad) sub mov (bad) lods je sbb pop push (bad) movabs push imul and or (bad) add in pop push pop cwtl sbb bnd fdiv out (bad) out (bad) fisubl (bad) test cltd mov pop rex.RXB (bad) imul jne sahf in sbb jle outsb ds popfq rex.WX sub cmp sbb iret test xor popfq cmp outsb mov (bad) (bad) xchg cmpsl mov fs add or mov sarl test adc cmp xchg fdivl movabs mov fdivrs mov stc sar jmpq js adc add test lcall fdivrs in fisub (bad) notl mov jmp mov popfq pop callq (bad) out (bad) pushfq (bad) sbb cld (bad) (bad) stos shr (bad) mov cltd (bad) rex.RXB pop xchg clc movsb cmpsl sbb and cmpsb cmpsb mov xchg cs imul pop (bad) fsubs rex.X pop clc pop mov add ja (bad) loopne mov pop lahf and (bad) mov mov hlt or mov pushfq sbb loop jbe cmp pushq pushfq fldt add cmpsl or mov lea pop orl test sti (bad) (bad) fist xchg or cld out cmpsb rex.WRXB cmp out sbb test jae rex.W movabs popfq add loope (bad) mov (bad) sbb mov addr32 in (bad) jo add and xchg xor rex.WRB mov bswap clc add xchg xchg js loope minps mov fldt cmp loop addr32 andl std sbb fmul add mov movabs sbb cli scas and (bad) jl (bad) sar cmpsl movabs int3 lret xor rex.WR or xchg data16 (bad) (bad) mov (bad) (bad) hlt jg gs ss or out sbb rex.B test mov xchg mov cmc stc add fist rex.X push in jno sbb xchg flds hlt popfq rex.WB (bad) rex.WRB mov jnp jp pop fmuls cmpl xchg jmpq punpcklbw mov (bad) cmc loope mov adc rex.WXB mov jrcxz (bad) lret push int sbbl sub (bad) push mov js imul or mov sbb sar pushq xchg pop adc je fadds mov jrcxz shlb rcl sti jl sbb shr insb push movabs loopne rex.WR lods cmp adc (bad) cmpsb mov (bad) cld (bad) (bad) jge pop popfq cwtl popfq movabs (bad) mov out push xor iret lods sub or or fwait loop std imul (bad) hlt cltd pushq mov push jl retq rex.WRX jnp fwait rex cwtl lods fwait jle and cmpsl js rex cmp xor lahf repz divb mov rclb retq lock shlb pop outsl pop jge fwait sbb ss fwait jne rex.B cwtl sub rex.XB pushq xlat mov (bad) fwait mov (bad) pop shll adc fwait jle xchg cld rex.X fwait sub (bad) (bad) int loop mov test es fildll lahf sub jbe cmc mov test pop (bad) mov adc rex.WXB pushfq mov addr32 cmpsb (bad) xor (bad) push (bad) rex xor xchg leaveq cmc push retq ds imul (bad) add (bad) lret mov retq or (bad) movabs or xchg outsb jle sahf and movabs (bad) (bad) rex.W xchg add cmp or fwait pop add lea pop jrcxz (bad) jae mov loope adc lret sub xor movslq iret retq addr32 add (bad) lret fwait xlat xor out enterq outsl cwtl jle sbb sbbb rex.RX rex.XB imul and setl fistl stos movabs mov sbb or btc int pushq mov loopne xchg sbb (bad) add xchg sbb cmpsl ss and lods adc and or lods add pushfq sub sub cmp imul fisttp add pop add mov sti lods negb fwait rex.RX jae (bad) sub loopne jmp fwait jne insb mov mov ficoml test mov mov jge cltd out in xlat xchg jns int3 clc fisttpl xchg jnp sbb mov mov repz imull lock subl xor fs loope callq fist cmc fwait bnd mov fwait add add lret sub movabs mov out mov in movabs cmpsl repz movabs pop jrcxz add (bad) or fwait add jae (bad) sbb fwait sbb mov push rex imul movabs jb insb lret ja cmp retq push adc pushfq xor test sub adc insl iret jrcxz fwait test (bad) cltd loop subl pushfq fwait int push adc and jmpq int fwait popfq xor xchg rex.R (bad) gs lret or pop popfq pushq nop jrcxz cwtl data16 cmc (bad) scas (bad) pop (bad) shlb xchg test jg std je hlt jrcxz retq rex.RB adc out and rex.WXB (bad) jrcxz jns adc loope shll pushfq pushq jle popfq fnstenv lret cmp fnsave callq rex.RXB ficompl rex.WR mov pushq xor int3 mov movsb jmpq jmp popfq mov rex.B rex.X cmp (bad) movswl jb push jge pushfq rex.WRB jmpq fwait and addr32 xchg cmpsb lods mov rex fcmovbe pushfq in xchg mov (bad) add and mov (bad) push jno sub movabs enterq adc fwait mov rex fwait ss data16 rex.WRB and cs jno (bad) scas adc jg rex.WR test (bad) out outsb pop sub sbb (bad) out callq icebp sbb adc scas outsl cli push add in (bad) fwait mov jno (bad) xor push pop cmp (bad) fwait (bad) (bad) testb push fistp cmpsl pop mov pop jle adc rorl cltd pop fbld jo (bad) or movslq sbb jno pop jle and outsb fwait xchg ficomp xor lods jg xor fs xchg movslq retq rex.XB movabs mov add jb adc mov cmpsl clc adc jle out movslq push xchg rcl pushfq rex.RXB sub addr32 rex.R mov std (bad) pushfq fidivr addr32 rcr cld pushq xchg xor xor push adc rex.WR test mov jrcxz out retq adc pop insb ja adc add and rex.WB sbb out cli (bad) mov or iret rex.X sub fadd cmpl mov and (bad) sti jmp imul rex.WX fstpl lret lret loopne push rex.WRB or sbb cmpsb jo and icebp in ds mov (bad) rex.RX out imulb insb adc fbld fwait push jo movabs test sti jbe adc sbb adc jmpq rex.WR add mov (bad) retq add xor xor xor mov (bad) jle (bad) cltd callq or pop incb push adc in (bad) or fild mov mov mov rcrb or (bad) (bad) xchg sub xor jns test jb xor mul sarb clc add (bad) cld pushq loop adc jb (bad) mov out (bad) fistl (bad) add in or (bad) mov mov js mov jp mov jg (bad) lret pop rex.RXB jns xor js movabs cltd out std add xchg pushq pop mov movabs pop (bad) loope sub cmpsl (bad) add out (bad) (bad) xlat jno add mov mov mov pop sarl add js sbb in jno (bad) sbb je mov stos sub xchg mov cs fcmovnb xchg xlat rex.WX sub pop jl je rcl push sbb callq rol rex.WX adc jmpq cmpsl sbb xchg pop frstor iret leaveq add jrcxz rex pop xor rex.WRX (bad) (bad) xor sub rex.WX adc rex.WRXB xchg repnz jnp fwait cli int3 nop js jns rex.WB fwait mov (bad) push (bad) jb lock cwtl (bad) push xchg lock add jrcxz cmp (bad) xor add rcrb movabs rex lods stc icebp test pop jl sbb sbb std adc sahf fwait movzbl (bad) stos (bad) lods (bad) and mov mov es int3 cmp test mov pop push pushfq (bad) scas jns fbld (bad) mov adc add push mov lea mov (bad) stc mov setnp and fwait sbb sub (bad) adc xchg add jo (bad) (bad) sbb cmp out (bad) es jmp pushfq gs (bad) fwait pushq jmpq and mov sbb fs rex.WRXB rex.RX (bad) xor xchg cmp (bad) cmp xor (bad) sbb pushq lock push test rex.WR jge fldt rex.WXB jno mov cmp (bad) or or insl xchg rex.WX addr32 cltd mov (bad) subl adc stos pop scas addb fwait roll or (bad) cmp jnp lret and rex.WX fwait rex.XB or mov pushfq rex.RB xor sbb mov rex sub jl (bad) movsb clc sbb xor sbb push retq pop movabs sub push mov fldpi sti add or pushq add faddl and and pop jmp or shl (bad) fwait out sbb adc cltd sbb (bad) and adcl fwait cmp rex.X (bad) fwait movups pushq jno out (bad) add rex.RXB jb lcall mov stc fwait test fsubs pop jbe (bad) (bad) fisttp (bad) xchg retq lret scas movabs enterq pop (bad) leaveq popfq rex.RXB sarl movsl mov movabs std ds pop out addr32 add xchg fwait lods mov and (bad) xor fwait shrl js (bad) loop jmpq push rex.WB (bad) pop sbb xchg add (bad) rex.WRXB (bad) out jae jno (bad) maskmovq (bad) rex.WRX pop fsubrl (bad) cmpsl pop insb push rex.R in paddb insb sbb cltd jb xor loopne cmp mov cwtl mov pushfq pop pop lods fnsave adc add sbb rex.WX fs sbb out mov pop retq jl cltd out cwtl cld pushfq rorb push jmpq sbb pop fildll sti fisttpll push pop add (bad) mov test fwait mov add pushq fsts rex.WR mov mov fnstsw cmp jne (bad) scas mov fcmovu (bad) rex.WRXB test mov (bad) movabs cmp fwait xor imul (bad) jns mov mov (bad) mov jnp sbb shr push movabs cmp int3 outsb fwait cli setg fwait es rex.R fwait jo jg xorl in sarl add movabs push mov sbb jbe or out pushfq pop (bad) ds (bad) mov push pop test cmp icebp leaveq sbb mov movabs sub mov mov mov sbb movabs (bad) or (bad) rcrl add jmpq std scas scas or repnz (bad) fwait mov rcll (bad) xchg add xchg add mov fcompl (bad) mov mov (bad) xchg mov fwait rex.WRXB xor xchg sahf and pop mov adc shl add cmp rex.W insl rex.XB or rcl cltd pushq xchg xor popfq jmp add test mov int cmpsl rex.RB repz int gs adc cmpsl (bad) jge pop iret cmc lock retq retq sti jge fbstp sbb lea bswap mov gs (bad) pushq pop sahf rex.RXB (bad) sub pop jns push test sar xchg xchg sub in (bad) (bad) fwait mov popfq retq cmp xchg (bad) mov fwait cmp mov xchg jbe cmp sbb (bad) rex.X iret xchg xchg sti fwait or xor fwait jl cli scas data16 push jns jp,pn sub fwait in lahf rex.WB xchg mov imul mov fwait in (bad) mov cmp insl add outsb adc movabs movabs (bad) cwtl retq cmpsb stos int mov fwait jbe sub fwait mov rex.WX int rex.WRB jg out xor xor rex.B (bad) (bad) lea mov adc (bad) add repz mov movabs jrcxz (bad) (bad) jl add sbb test jp movabs jb mov cmp int3 sti (bad) mul push rex.RB scas fwait push rex.WB (bad) pop movabs cmpsb mov add fildl shrl xor popfq push movsb (bad) imul lea jo stos sbb xchg insb cld mov pushq rex.WRB jns (bad) notl jge mov mov cltd loop clc fdivrl add xlat rex.RX out adc pop retq mov pop or adc (bad) rex.WX sbbb (bad) movabs (bad) mov mov retq mov xor xchg popfq rex.RX (bad) cmp in jg jo (bad) cltd sub xlat rclb (bad) rex.WRX outsl inc es loop in rex.RXB (bad) mov jl fnstcw cmp movabs movabs sbb test jne lods rex.WRB jg mov pushq (bad) cmp rex.WRB (bad) jae xorl (bad) and sbb repz fdivrs js pop imul (bad) shrb lea movabs sti jl adc or pop push (bad) (bad) fild in addl jae mov xor cmc add cmp pop rex.WX (bad) movabs push pushfq sbb sarb (bad) pop rex.RB pop int3 int3 pop mov mov jmpq (bad) shl cmp (bad) fcoml pop sub popfq adc in ja cmp (bad) rex.WX add mov out in shrb sti sar (bad) (bad) (bad) hlt mov pushq adc fistpll (bad) cs jle fstpt pushq cli cmp and mov cmpsb mov (bad) cwtl rex.WX jl jle add pop jge (bad) jns imul xor (bad) icebp std and in rex.WRB jg cld (bad) sbb (bad) fimul mov rex.W cwtl sar (bad) jle xor sub push adc xor (bad) int3 hlt add cmc jbe fwait (bad) shrl movabs or pop push cmp sub jnp or xor pop pushq mov data16 adc fwait (bad) popfq imul rex.WRX xchg (bad) rex.X cmp loope xchg mov movabs iret test movsb stos (bad) movabs sbb (bad) (bad) and loopne fwait jae add (bad) (bad) (bad) pop sbb xchg (bad) rex.WRXB xchg rex.WX cmp mov lods adc ja sbb (bad) (bad) or push fdivs sti rex.B mov (bad) fwait xor and jrcxz (bad) callq adc fwait add xchg repz pop rex.WR sti sub mov fnclex (bad) mov jl test xor fwait and rex.WB popq (bad) (bad) adc (bad) push (bad) xor mov lret sub or or fwait outsb xor rex.RX fwait lock cmp (bad) sbbb mov lcall push test fsubrs out adc adc stos fwait (bad) or decl fwait xchg jrcxz or push sbb lods ja xor push mov fs data16 mov (bad) lahf retq (bad) jp (bad) pop fstpl or mov fwait iret rex.X fs (bad) test sub mov rex.B fsubr xor add out fistl xchg and sbb iret rex.WR fsubrp sbb jbe cli (bad) fwait mov pushfq btr lret iret cmp rex.WXB push pushq jp or (bad) lock fildl and mov gs (bad) lock jl jg add jnp int3 imul (bad) (bad) loopne or out js pushq pushq (bad) (bad) imul cmp add gs loop cltd fmuls sub (bad) jbe mov callq (bad) mov lock mov rcrl push xchg pop push xchg pushq mov iret pop and push jle sbb movabs and mov cmp or int adc lret cmc cmp xchg rex.WR (bad) nop retq rex.RXB js gs jle sti (bad) adc sar pop movabs sbb cmp movabs mov adc jne cmp sbb data16 scas pop mov rex.B clc rcll (bad) push std imul (bad) pushfq cmp mov (bad) cltd xor cmp pcmpeqd xor nop out jrcxz rex.B jbe sub nop sbb xchg movabs cmp or sbb in cmp (bad) data16 je jg or adc xchg rex.WRB rex.X xchg sbb mov imul (bad) out rex.WR mov rex.B and fistpl pop (bad) mov (bad) xchg shl (bad) movabs add lods addr32 retq callq (bad) fcmovnbe test sahf in lret rcrl (bad) mov adc xchg and add out pop rclb mov cli push pop xchg jbe jb (bad) rex.RX sbb stc out loope scas mul (bad) out cwtl sbb cli push and sbb loopne or rex.X repz fwait push jge mov sub js retq cltd (bad) fistp std lret (bad) sub sahf movsb and ss and in xchg movabs fwait jmp jb (bad) mov mov retq ffreep jns stos rcrb loopne push xor jno leaveq decb sub jp ja (bad) cs sbb cmp gs rcrl mov mov out xor fwait cs ror scas fwait rex.RXB adc retq in mov rex.WRB iret cli (bad) push scas rex.WXB fwait or (bad) (bad) rex.WRXB push pop add fidivrl jmpq fwait mov out test (bad) cmpsl xor (bad) stos jrcxz rex.B sbb sub fild mov fwait sti mov (bad) xchg mov fdivrl (bad) hlt out cmovno sarb out loop (bad) fnstenv insl fwait or jns cmp (bad) sub pop enterq je test fildl xchg add jne out and fwait (bad) or mov retq cmpsl jge repnz and movsl mov lods mov fwait lret data16 (bad) out mov jrcxz lea test nop fwait (bad) (bad) xchg and sub sbb pushq lret jb lret fwait es and rcrl enterq sbb mov jle mov flds pushfq xor out jrcxz sbb mov cwtl fwait jae rex.WRB ss data16 loop rex.RX xor rex.RX mov jp fcmovnu mov cli movabs pop retq add sub jrcxz movabs mov (bad) int jmp xor push sbb rex cli lods xor pushfq addr32 test fwait mov int in stos push or pop fidivr out rex.WX push insl (bad) (bad) cmp movabs mov setg mov fildll push (bad) scas xchg mull mov rex.WX fwait pop mov loop gs push addr32 in xchg push fwait (bad) (bad) (bad) (bad) (bad) adc addl sub in clc sub jrcxz xchg lock psubusb test movslq mov (bad) mov rex.RXB lods movslq cmovns add lods and (bad) push jp push xor jb push callq mov jg mov (bad) (bad) rex.XB movabs dec testb callq sarl leaveq push pop callq fs rex.WRX add sbb (bad) jl ss (bad) pushq icebp lock je pop jrcxz cmp pushq (bad) xchg (bad) lods sbb pop and js (bad) test sahf clc ds repnz jbe rex.WRXB sbb or js mov or out sub in pop fwait xchg repz rolb gs (bad) sti lret jnp (bad) fwait rex.WRXB mov movsl pop fwait add and or push or (bad) loop mul add insb pop repz (bad) cwtl fwait clc or and jns mov lcall (bad) (bad) mov in push and movabs rex.W insl int3 out push addr32 (bad) pushq mov movabs fldl jmp sub pushfq (bad) retq cmp rcrl incl fwait and (bad) rex.X (bad) fwait cmp shr enterq adc fbld in pushq cwtl fwait xchg cmpsb mov rex.R fwait outsb push xor adc fdivl repz cmp lods orb fwait xor (bad) sbb rex.RX movslq add ja push je jrcxz (bad) (bad) fwait (bad) rex.WRXB scas (bad) push fwait decl popfq push notb jmp cmp lods cwtl sti lret nop std std rcrl loop add adc iret add imul cs pop mov xor and movabs stos jg xchg (bad) movabs sbb (bad) insb rex.R jmp (bad) add (bad) ds jrcxz movslq (bad) xchg callq mov sbb (bad) (bad) mov orl or sbb rex.RXB cmp es stos cltd (bad) (bad) sub or fwait test sti sbb pushq mov fwait (bad) pop xor jmpq sbb es loope xor (bad) clc pop xlat jmpq movslq movsl (bad) sbb jbe mov in (bad) jmp ss jg jno in mov (bad) adc clc in sbb retq jae (bad) add movabs rex.RB jb push fwait sbb sbb or je rex.B mov jg hlt jl sti sbb adc sub (bad) jno sbb cmc xchg loope or (bad) rex.RXB sbb fucomi mov mov lss insb (bad) test (bad) (bad) push adc rex.B xchg jne lock adc es jb cmp sub (bad) xorl and in scas xor xor rorb jge je and mov lods loope retq jmpq in mov jrcxz (bad) (bad) (bad) test cmpsl sbb in (bad) movabs je imul retq pop rex.WB rex.RB (bad) sbb xchg pushfq in xchg nop (bad) push stos or cwtl add ficompl (bad) ss sar mov icebp (bad) pop pop rex.WRB rex.B or rex.WX pushq mov (bad) xlat nop cmp rex.WRXB lock sub out sarl cs xor sbb pop push cmp rcl cs (bad) iret outsb mov xor pop (bad) scas pop and fcmovnb js or out sub insb out andb xlat cmpb in rcrl adc mov (bad) fist (bad) or sub pop outsb lahf or add (bad) pushq or add lret outsb and cld xchg fsubrl out js mov xchg cs (bad) mull outsb callq (bad) (bad) rex.XB rex.WRB rex (bad) rex.WRB fist cmp adc adcl mov sbb add cmp mov roll mov rex.WRX sarb loope (bad) (bad) mov movabs jno not xchg add or or xchg sbb mov icebp in stc jrcxz mov pop (bad) cs scas xor (bad) or in pushfq (bad) or and cltd xchg out (bad) xchg fwait repnz cmp movsl (bad) ss es out xchg callq push rdtsc sbb rex.XB (bad) cltd js rex.RB fsubrl mov mov mov outsb mov retq jbe mov out (bad) fwait mov callq xor cltd and push pop and (bad) jnp scas mov je (bad) and cli adc sahf (bad) rex rex.RXB pushfq imul in stos cmp repz fwait repnz sbb adc lods add (bad) movabs (bad) jnp adc rcl lock enterq push (bad) (bad) (bad) jmpq cmpsb push insl sbb rcll out test rcrl rex.RB test push rex.B mov jrcxz cmc int decb cmp imul sti xlat out leaveq (bad) mov (bad) js es (bad) (bad) sti jrcxz lods in mov push retq rex.WB (bad) or int std rex.X popfq pop pop insb lods retq jmpq lahf in outsb leaveq sbb je cmpl insl (bad) xor pop fwait adc mov lret movabs mov mov sub fcompl pop fs retq push add xchg out jns sbb imul push fild cli outsb fwait ds cmpsl iret (bad) add ja loop rex.WRB jl movabs xchg sub (bad) mov mov mov cwtl sub sbb subb (bad) int3 add mov cmp fwait incl jb mov rex.WX adcl sbb add fildl (bad) adc fwait (bad) (bad) loopne mov mov (bad) xchg add mov es or ss jne (bad) (bad) (bad) cmpsb pushfq and (bad) adc mov pushfq int fmul xchg (bad) clc (bad) jno es out cmp test fildl jl rex.XB shlb rex.WR rex.R movabs rex.RB movabs insb fsubrp fwait rolb cmp je sbb (bad) jmpq sbb pop mov xor cmp fidivr sbb sbb (bad) add fwait in (bad) sahf (bad) jns test add and rex.R (bad) js test fwait lahf (bad) gs or pop lock jrcxz test jmp mov jnp stos adc clc repnz fstps fdivrl fs rex.WXB stos lret (bad) adcl fwait mov cmp test (bad) cltd cmp or outsb sbb (bad) (bad) adc push push scas pop mov jmpq rex.R pushq decb add cmp rex rex.WX rex.X repz movabs xlat jge lods xor leaveq push (bad) fwait (bad) sub pop out fwait rorl cmp retq jns sbb sub rex.RXB orb jbe test nop (bad) (bad) sbb int3 adc cld mov or cmp rex.W fwait pop orb ds sub or xlat subl (bad) mov ficomp sub pushq lret (bad) cld fimul add or adc lcall mov ss rex.RB pushq xlat mov rex.RB jno (bad) rex.WRB mov andl rex.WX sbb xchg (bad) icebp fwait mov test mov and fwait outsb xchg add stos rex.RX fwait int3 es xchg (bad) mov std cmp xlat sti or rcrb and movslq cs repz (bad) adc sub xchg xchg mov (bad) adc push (bad) and rex.WXB (bad) clc (bad) in and pop (bad) mov (bad) insl sahf rex.WR rex.R adc jnp lock fwait cmp fmuls iret adcl cltd rex.RB (bad) cmp fwait push rex.WR sbb sahf sbb fs cmp adc (bad) rex.WRB rex.WX fwait (bad) xchg rex.WXB and cltd shlb (bad) fistpl int3 jp andl xor jmpq lret in stc push imul mov add (bad) fwait movslq jb fwait xchg mov mov jmp lret (bad) mov sbb and movsb mov (bad) out jns xchg (bad) stc or sbb and add add icebp fcomp (bad) add adc test fwait (bad) pop insb adc mov jnp xchg out cmp add lret rex.WX cmp movsb in (bad) lock (bad) std sbb iret fwait test or jne jns sbb jp mov sarb movabs retq cmp xchg vmovd fwait push and stos (bad) ss mov pop push push or movslq outsl xchg retq jge movabs mov push or xchg xchg push fwait pop fld (bad) or fwait xor test add iret jrcxz and push sbb cvtps2pi rex.W ja adc push fildl (bad) cwtl (bad) fwait jmp test cmp fnop jge stos mov (bad) cmc retq (bad) insb pushq fwait push divl rex.RXB pushfq add rex.RX sti push insl sbb movslq sbb lock mov cmpsb fwait adc mov sbb push (bad) push sub icebp xchg loopne sbb pushq xor rex.X mov pop mov out sub pop xchg xchg (bad) loop test (bad) sbb cmp stc sarb retq (bad) fcomps rex.RXB fwait or jbe adc mov clc push (bad) lock xor pop sub mov fcoms addl iret pop xchg imull lea (bad) int adc movsb xchg (bad) mov imul fwait cmp jp popfq xchg movabs mov pushq mov sbb xchg movabs jmp outsl js or and add or ss std fcmovnbe in rex.RXB (bad) xchg popfq and xchg cwtl rex.W pop cmpsl movabs pshufw test pushfq and mov add xlat icebp sti mov insb (bad) rex.WRX jbe sub lret addr32 lock sub rex.RXB rorl pushq sub mov xor (bad) test fisubl rex.RXB pushfq sbb (bad) in (bad) cmpsl in xchg (bad) push sub shrl stos mov adc movabs incb rex.WRXB nop pop jle (bad) sbb rex.W cmp insl cld stos movslq mov cmpl sbb add mov fmull pop (bad) push cmpsb push popfq mov in pop cmc cmpsb (bad) xor imul sbb mov imul retq (bad) mov lret cmp add movl jo in jne mov divl (bad) (bad) jne loope jge cmpsb popq pop or cmp rex (bad) movabs fwait jp test (bad) gs rex.RB (bad) (bad) callq pop mov (bad) sub callq mov (bad) xor jae xor mov (bad) int loop sahf adc mov xor out fnstcw addl push movsl fcoml fs mov xchg or in mov pushq mov sahf outsb xchg lret xchg fcmovb cwtl (bad) mov sar sub (bad) scas jb jbe out (bad) lret fiadd and (bad) mov movabs push outsb or pop rex.XB rex.RX push mov cmp lods adc mov adc ffree vmaxss cmpsl mov test add outsl pop xlat loope,pt jns cmp pushq movabs push in sarl add in ds loopne jae (bad) sbb mov mull mov (bad) pop jp pop jae sub loope mov jle xor cmc jle loop pop mov rex.WR pop and add (bad) std in mov stc jge stos not int clc push lods scas movabs int (bad) rex.WRXB (bad) (bad) or (bad) shll or xchg test (bad) mov ja addr32 xchg rex.RB fwait pop repnz xorl or (bad) push (bad) out cltd jne movsb (bad) fwait (bad) jle jnp jl sbb movsb mov rex.RB sub (bad) int3 stos shr (bad) stos sahf (bad) rex.XB sub je sbb lods fwait (bad) scas (bad) rex adc mov (bad) enterq sbb cs fwait cmpsb fisubr iret fcomps rorb mov inc rex.WB rex.WRXB push cmp xchg es movsb fwait rcrb or fwait cld (bad) jno add pop fwait ja mov fwait rex.R rex.WR cmp xchg cmp testl (bad) (bad) (bad) mov (bad) sub lret cmp es add cli (bad) (bad) fwait incb movslq insb (bad) xlat fs loope (bad) pushfq stos (bad) out add fcmovnbe adc or sbb rex.WR lret cmp sbb mov iret cmp movabs pop cmpsb insl push retq fs jbe (bad) mov sbb mov jmp pop ss rex.X mulb movabs cmc sbb gs andl cli lret scas and (bad) xor fwait sbb push retq movabs xchg incb ja sarb mov sub (bad) imul mov jmpq (bad) rex.RX andb mov add pop sub mov cltd out test jmp mov scas repz rex.WRX adcl sbb cmp xchg pop jge push pop add stos movsb mov push repnz int add lods ja fdivrs xchg movswl xor cmp fstp outsb xor andl push mov scas sbb sti jle loop sbb pop loope out pop cwtl jb (bad) fisub std (bad) (bad) xchg test cltd xchg jg (bad) and (bad) cmpsb popfq cmp rex.B (bad) rex.RB test pop pushfq lock bnd jge test in loop sarl sbb mov sbb popfq ja pop sbbb mov xlat pop shl xchg hlt stos adc loop sbb jnp movabs lea rex.RB insb mov add (bad) in mov xor and lea js rex.XB stos rex.WRX adc and cmp xchg sti and jle mov jne movabs sbb or adc cmpsl jbe in out jmpq std jmp cmpsl int3 movabs mov sbb (bad) (bad) (bad) test rex.XB stc xor loope lret pushfq jp fcmovnb cltd fdivr pop sar lret pushq es js out rolb outsb cli adc movsl sbb (bad) icebp cltd mov rex.WR xorl jp in callq and push sbb pushq movabs lods pop rcll in push mov (bad) sub sub fsubs (bad) mov fwait imul rex.WRXB sbb jno hlt ja add cwtl or lock stos and leaveq xlat fcomi movabs stos (bad) in (bad) jp rex.WRB loope scas pop outsl loope jne cmp (bad) movabs repz and (bad) mov fdivrs test fildl imul pop jmpq fwait popfq lock jg sub ja jae mov push scas faddl fwait or test rcrl (bad) stos rcr sbb push fsubr sbb ja xlat rex.RB pop fnstsw imul rcrb xor xchg fwait and adc (bad) and pop insb testl jge enterq mov lock add sti (bad) jns pushfq sub pushq mov push pop push loop out iret shrl (bad) xlat rcll xchg rcll js movabs fstpl std movabs rex.XB jb (bad) jns or hlt out (bad) xchg rclb fwait xchg enterq rex.WRXB fwait insb jb rex.X imul (bad) mov negb imul lea fldl rex.WRXB fwait divl (bad) (bad) fwait out rcrl fwait insl adc fs or repz xchg in in sbb (bad) (bad) callq (bad) xlat jmp int jnp ja test adc imul jne jp clc or mov insb and (bad) out add (bad) stos or sbbl mov sbb sub lock fwait pop fsubrl cmpsl xor jmpq test (bad) fneni(8087 push fnstcw sahf movslq xor cmp xorl (bad) pop cmpsb push fwait sub in (bad) in or enterq (bad) add jl (bad) (bad) rex.WR rex.WXB out rorb jp imul (bad) jae js xchg xchg push pushq sbbb std fwait (bad) jmp cmp rex.WB cmp movabs (bad) add xchg add insb jae fmul xor sahf mov mov sub sub shlb sbb add and sbb cmp sub ficomp jge cwtl add hlt pop pop fwait js retq popfq fwait rcrl xchg mov rex.RB std (bad) and fildl out mov and decl mov rex.WB iret (bad) sbb adc sbb (bad) sti lea and xchg and int pushfq jg or sub loope leaveq adc (bad) cmc mov fwait pop rex.WRX mov sbb sahf fbld add or in xchg xor fwait test (bad) jrcxz sbb xlat mov (bad) hlt pushfq sti retq scas outsl (bad) xchg mov movabs imul mov or out rcll sub and cwtl add push pop xchg jge sub and (bad) cmp mov adc sbb (bad) test rex.RXB fwait cmpb ss xor cld fmul cmp cltd xchg and cmp test sbb mov rex.B ja (bad) or xorl sub jo rex.WXB rcrb add out xor (bad) rex.WX movabs sub fwait push stos rex mov add jmpq sbb faddl or div rcrb jbe fwait movabs (bad) fwait (bad) fisttp lock clc fwait std int3 (bad) mov stc (bad) jl (bad) xchg fwait (bad) retq shrb and (bad) fsub out fwait clc scas movabs xor fstpt xchg (bad) (bad) (bad) xchg ja xor jl in (bad) xlat or popfq fwait adc sub pushq imul xor fwait sbb pop movabs icebp xchg (bad) or pop fstpt mov xlat push add and out (bad) shlb adc xlat sbb rcrb out fwait mov (bad) mov sbb (bad) (bad) jbe in add sbb test push (bad) test mov and xlat cwtl andb loope loopne fwait lea mov shrl sbb loope vpaddsb mov loop rex.WRX je rex.WRX pop rex.R rex.RB add push (bad) sahf push rex.WR sbb jbe stos rex cmp xlat (bad) (bad) xor out fistpl (bad) pushfq pop rex.WR sbb (bad) xchg outsl cmpsl rex.WRB xor bsr jmp (bad) cmpxchg test rex.WR lock test out sub jbe imul sbb (bad) int3 in jae sub pop push rorb rex.WRB pop std mov rex.W (bad) mov mov xchg rex.XB cltd cwtl cltd ja cmp movslq sbb es sbb (bad) out pushq xchg jnp loop mov mov adc push rex.WX rex.X pop mov xchg testl jmp orb xchg je loopne es fisttpl mov loopne cmp and adc pop xchg (bad) sbb rex.WXB (bad) xor frstor rex.B in data16 jl xlat jle or out or adc jl adc hlt ja (bad) shl sbb std fdivrl rex.WX mov test rex.WXB push shrl sub rex.WR xchg data16 fs sahf pushq (bad) jbe movabs movabs add sbb pop jg xchg jo int3 xor cmp pushfq movabs jbe,pt sbb mov mov xorl popfq (bad) cmp cmp (bad) pushfq add xchg sbb loop imul or pop sub (bad) mov fadd sbb cmpsl data16 cwtl pop insl cltd sbb repnz std (bad) adc rcl loop mov psllw retq callq (bad) push outsl scas jmpq in jnp insl fstpl jno fnstenv (bad) or (bad) test xor push stos mov rex.RXB pushfq cld add cs (bad) sbb xor scas mov rex.RXB lock adc mov or ficompl pushfq fucom sbb jrcxz (bad) subl xor sbb mov retq (bad) stos insb (bad) shll sbb (bad) insl jl (bad) (bad) out movabs xchg hlt repz mov out add (bad) rex.B sub cmpsb sub rex.WX movabs repnz or cmp int3 and callq pushq xchg cmp out (bad) retq lods push sbb addr32 stos (bad) and rex.WRB (bad) fisttpll mov (bad) pushfq adc push sti cwtl ss rex.X push xchg fistpl mov sbb pop (bad) mov rex.WB scas sbb xchg rex.WRXB fwait add movabs pop fwait xor test add add fwait xlat pushq mov out sarl (bad) inc mov (bad) mov fwait mov lret sti mov out sbb sub mov sub fwait rex.RX lahf and sbb mov xor fwait (bad) test loop fwait insb (bad) or rex.WB fwait and mov jae cmp movabs jbe loope mov test rcrl mov xchg sub (bad) push (bad) (bad) out (bad) notb cmp pushq iret (bad) in xchg enterq fsubl xchg out xor jmp mov adc movabs jge (bad) (bad) sbb movabs cwtl jns test (bad) icebp leaveq add or retq jle (bad) and sbb (bad) mov sub movabs in and fwait out rex.RX rex.WXB pop pop jb mov add push (bad) faddl rex cwtl add (bad) in insl pop stos fcomi cmc mov add addr32 sub out xchg retq (bad) in cmp pushfq jo (bad) out pop insl mov lods loope (bad) (bad) fildl js enterq sti sub or pushq negb stos add sub mov cmp jle (bad) cli mov mov push stos js outsb in repz (bad) jne xchg (bad) sub add mov push (bad) rex.RXB (bad) orl bnd int jrcxz stos out (bad) jle mov cmp rolb fwait pop orl movabs ds icebp sub mov sbb fwait cmp mov adc fwait mov je mov (bad) cli (bad) jb retq add test pushfq movsb add cmp movabs rex.RXB fwait and insb sahf sbb mov and xchg or cwtl sbb movabs faddl fwait popfw or sti rcrb in bnd lahf push cmp rex.WRXB rex.RB shlb pop sbb mov (bad) rex.XB or (bad) cmp movslq and outsl rcrl ja movsl sti rcrb mov (bad) mov xor jnp outsb nop stos sbb lahf add (bad) (bad) (bad) jns rorl cmp mov fisttpl add repz or callq xor in xchg add sub mov jbe fdiv (bad) loopne rex.X rex.X rex (bad) test mov hlt xlat rcr (bad) ficompl cmp or pop (bad) hlt rex.X sbb and sub and imul mov adc or or mov movabs adc ds (bad) sbb in xchg lods sbb mov rex.RB addr32 mov insb lahf popq in mov jge (bad) push in in sub or fistpll decb in rcrb lods push cmc (bad) cmp cwtl repnz rex.R or in movsb and imul rcll push (bad) fwait sar (bad) cmp int (bad) fwait (bad) cmp jae test cltd jle push sbb cmp scas lock push adc pushq and imulb pushq int add (bad) movabs sub loop lahf mov pop imul mov movabs xchg (bad) mov fwait (bad) (bad) sbb adc fwait push and loope (bad) mov fwait mov rex.X (bad) (bad) fwait retq imul sub jne rex enterq stc ss or fwait lret pushq cwtl (bad) cmp fldt rol or sub mov rex.WR (bad) (bad) cli fldt pop or mov hlt rex.WRX fwait add adc sbb int fwait (bad) push stc movabs xchg mov xchg xorl movabs rex.XB callq movabs (bad) retq mov sbb (bad) xchg (bad) sti sbb cld mov int3 jae adc bnd mov out addl test xchg test sbb jrcxz cmpsb sub push test (bad) out andl jno repz add lahf xchg jle stos lock (bad) nop popfq add insl rcrb mov outsb clc retq adc fidivr adcb xor mov adc (bad) pop in insl in pop cmova sub rex fwait and or loopne sbb sarb jrcxz adc fbstp jns rcr in addr32 mov fwait xor rex.RXB and cmpsb fwait (bad) out leaveq loop pushfq mov mov in xchg sahf jo sbb adc dec and movsl stos and callq jg imul rcr movabs jo fucomp rex.R fwait (bad) (bad) sti xchg pushfq adcl mov cs add out fwait (bad) rex.R rex.B addl mov or mov fwait adc (bad) mov rex fwait movsb pushq mov sbb movsl xorl cmp rex.R (bad) mov adc pushq jo (bad) repz add je ja fwait (bad) or rex.RX mov rex.R (bad) sbb decb add pop sti shrb pushq (bad) movabs rex.WB xor rex.WRB push fistp rex ds cmp (bad) add lret cmp cmpl ss rex.WX cmp sbb clc jnp insl (bad) xor pop mov sti icebp (bad) callq lret cmp mov sbb rex.WRX fwait in (bad) js cmp movslq push stos (bad) lret jp push std sbb (bad) jns shl rex.WB mov jle loop fstpt (bad) lock sbb mov xor imul fldenv and jmp nop cmpsb cmpsl sub mov fwait xchg movabs movslq fstpt add data16 fsubl ljmp movabs in mov cld rex.RXB rex.WRX mov shrl or fwait push pop test jbe (bad) jb mov rex.WRX sub sub sbb pop retq lock xchg stc fwait (bad) xor (bad) decb fwait clc and roll sbb rex.WR iret (bad) mov imul sbb (bad) jmpq lods (bad) sbb add out xor xlat sbb jp (bad) movabs mov (bad) fwait adc xor xchg lahf insl es or (bad) (bad) (bad) adc sub xor pop (bad) mov (bad) mov mov jo or mov cmp out pop sbb xor (bad) pop pushq in (bad) push add (bad) sbb mov lea movsl sub mov loope sub callq rol rcll cmp and fsubrs fwait mov mov out rex fwait mov jg pop out int add jnp fstpt mov (bad) rcl add in cmp fwait sbb leaveq cmpsl (bad) ss enterq pop cmp cmp adc test add retq mov xor pushfq xchg (bad) or add outsl xchg repnz lret jmp add leaveq sbb and out xchg jno (bad) js orl (bad) sbb or mov (bad) add xor popfq jb xchg mov pop (bad) sbb jmp cmp fwait lret incb orl (bad) adc loope cmp add jb and fs shrl mov cs callq rex.X rex.RX fwait push (bad) mov sbb int or pushfq fistp cmp or addr32 stos pop fwait cli or out mull decl adcl fsts fwait jo shll mov jb cwtl rex.WRB fwait add in or or fwait mov pushfq (bad) lea sub movslq sbb (bad) or sub sub jge out fbstp xchg (bad) or and (bad) mov sti or xchg xor pop adc fwait cwtl (bad) rex.WXB cltd rex.WR sti cmp mov xchg adc movabs fildl add fwait popfq jmp ds outsl insl sbb mov or leaveq jg je mov push fwait popfq loop cmp fwait xor mov fwait insb (bad) xor cld mov pop rex.WB ficompl cmp xor subl in in fwait popfq movabs pop sbb cs mov mov pop mov fwait mov rex.WRX sbb (bad) xchg (bad) loop cltd xor jb (bad) fldl fwait loop stc fwait lahf xchg movabs int sub jl sbb jb (bad) loope or rex.XB sbb xchg (bad) lods mov (bad) xchg lods sub addb add (bad) or sbb adc shlb data16 pop pop out sbb and jmp mov (bad) and pushq (bad) xchg sbb xchg adc xchg stc and (bad) pushfq popq xchg rex.WR fwait retq icebp mov (bad) frstor cmp enterq (bad) ja movabs pushfq xor popfq xorb mov hlt (bad) sbb rex.WX (bad) sbb out (bad) js data16 (bad) add fild sbbb pushq rex.WXB rex.W repnz mov movabs mov fnstsw jrcxz (bad) jb mov xor sbb (bad) push jmp pop rdpmc mov icebp faddl loope (bad) sbb mov movabs (bad) (bad) rex.RXB jae movabs lret (bad) sbb xchg leaveq (bad) lret pop sahf pushq xor mov popfq rex.RB adc pop std cmp cmpsl mov rex.WB lock or jrcxz mov lods cmp rex.WX cmc fistp jns (bad) (bad) mov or pop data16 rex.WRB fistpl add scas lods jg movabs cmpsb sub mov rex.WRX pushfq sub in imul fwait sbb xor cmp adc ja mov xorl and (bad) add mov sarl fwait jae (bad) addr32 rcll jmp xchg stc retq es scas and movabs fs ss stos pushfq (bad) mov stos rex.WR clc fwait sub (bad) gs fwait sub pop push mov cltd fwait sti (bad) xchg imul adc (bad) jmp std retq fwait fs (bad) and (bad) int3 sbb sub jnp or in jrcxz cmp jle adc rex.WX jae mov rcrl out jns (bad) std sub (bad) jo pop (bad) sbb cmpsb push mov fucom fsubrs or mov mov cmovno adc cmp xchg and and mov icebp loop pop rex.WX movabs rorb (bad) fwait (bad) sbb fstl retq int3 mov loopne (bad) insb rex.RXB (bad) xchg add or mov mov jbe cmc add data16 fs cmpsb es add (bad) (bad) jmpq out rolb repz adc fmulp pushfq lahf xor rorb loopne mov jg add fwait or sbbl mov (bad) (bad) test cmp rex fnstcw fwait pop pop out mov fwait (bad) pushfq add cwtl rex.B fwait mov rex.RB xchg stos add test adc cld fwait jl (bad) lods std or (bad) xor or (bad) and lea push rex.B fwait add movsl iret (bad) lods (bad) jle rex.W rex.XB mov sahf jo jrcxz sbb mov pushfq pushq pop out insl sub (bad) jmp jle fwait jmp movabs sub (bad) insl (bad) in jno xor and or rex rcr (bad) pop stos jp (bad) jmp rex.RX rex.XB mull fwait sahf popfq lock jne (bad) (bad) fwait xchg out std rex.WR lea repz push test movabs jnp (bad) fwait or jo sti stos jno fcmove int insb sahf or jge fwait adc cmp sub push cs cmp push add xor clc cmc fwait rex.W mov add in fmulp fsubs cmp and jnp xor iret rex.RX cltd movsl fdivrl fwait test lcall push mov jbe adcl sti fwait cmp adc shll ficomp jp lock mov fstps fucomi xchg rex.RB fwait sbb (bad) lea or rex.WX (bad) fwait btrl xchg (bad) (bad) out (bad) fwait jmpq loope movslq mov adc jrcxz (bad) jns in mov rex.B gs mov add push icebp mov movabs rex.WXB fwait jae js loopne fs or retq sbb outsl sbb pop cld mov data16 test stos (bad) rex.XB addl pop and add je insb cmp std pushq adc shrl int mov (bad) data16 flds js movslq movabs pushq retq jle jo mov xchg (bad) lock movabs imul mov sub sbb cs rex.WR divl movabs sahf adc add in pop movabs rolb or xlat js lock or (bad) and (bad) test pop sbb je jmpq xchg sbb dec rclb pushq pop xor ja xchg rcl clc mov (bad) add rcll rex.WX outsl (bad) and cmpsb movabs movabs pop fwait (bad) pushq scas xor rex.WB (bad) jp in cmc fcmovnb out (bad) fwait iret test add fwait (bad) mov and rex.W mov fwait xor mov in fwait pop cmp (bad) push mov and adc xchg or sub jmpq xor add fistpl fwait mov cmp je fwait imul (bad) retq sub repz pop cltd test cmp and sub xchg fwait movabs (bad) pushfq movabs outsb sti rex.X lret push xor fwait xor mov cmpsl sbb out rex.RXB (bad) pushq fstpl rex.XB push (bad) callq sahf fildl xchg mov fwait jne pushq icebp scas outsl mov xchg jae scas sbb xlat outsb fsubp mov sub adc cmp mov jnp movsb or rex.XB (bad) or addr32 retq ficom fwait mov out sub cmp fwait and lock pop fwait enterq movsb icebp ficompl push in mov fwait push rex.WRXB insl mov pushq lahf sub retq add pop movabs fiaddl sub push jg xor imul jmp jmpq nop fwait add cli jl sbb cld pushq (bad) subl rex.XB rex.WRXB xor cmp cmc (bad) rex.WR addr32 (bad) jg (bad) (bad) rex.RB sbbl sarl adc xor xchg pop xchg fnstenv cld rex.RB push push scas out mov jmpq cmpsl mov sub xor out cmp outsb loopne (bad) lret fistp loop mov insb cmpsl rex rex.XB je js retq cld jl mov adc sbb xchg in rex.WRX mov movsb lods in pop in mov sbb sbb (bad) sbb fmuls rex.XB (bad) or sub (bad) (bad) rex.XB or mov adc (bad) jns mov out shlb pop adc push rex.W clc mov outsb cmp fstpt (bad) or lret rex.XB xor mul loopne (bad) mov rex.WXB (bad) (bad) push mov loop (bad) or retq fcoml push int3 sti pop insl cmp in fimull in cmp out (bad) xor jno jp sbb and cmp movabs addl xchg push pop push xchg (bad) rex.RX mov (bad) cmc retq (bad) and fild (bad) jmp lea and (bad) xor or fwait sbb stos (bad) outsb out (bad) mov movsl or jmp rex.RX xchg jns sbb fwait andl xor movsl (bad) xchg in (bad) mov sahf callq fwait movabs xchg pop cmpsl callq sbb jmpq (bad) cmc lock sbb (bad) pop icebp pop lret and in jp ss xor callq add cld movsl xor stos add mov icebp push (bad) jne sbb mov xchg mov or xchg jbe push fistpl loope adc cmp jmp out (bad) rex.WRXB xchg jo jle xor adc fadds or rex.WX rex.RXB fistpl (bad) and not (bad) xchg xchg and mov fwait clc rex.WRXB sub movabs (bad) lret pop mov (bad) fwait sbb and push sub je adc push or cmp mov rex.WRX out mov cmp scas es cmp cmp mov jae xlat movsl jae (bad) loop jl int xchg mov test or (bad) sahf pop in movabs mov sti lret adcl and sbb fwait test sub cmp mov cli out stos ss out rex.WXB rex.R fwait pop fnstsw fwait jmpq movl (bad) (bad) mov jne sub popq fwait xchg and idivb add jb rex.RXB subl in fwait sbb (bad) rex.RXB movabs addr32 sbb (bad) fwait jmp cmp (bad) std mov movabs mov xchg std rcr rex.R test (bad) xor fwait mov sub sbb outsb mov (bad) mov sahf out push pop fs repnz xchg pop xchg xchg icebp in mov iret add movabs sti loope hlt fwait cwtl jg mov cmp (bad) fwait movabs out jge test stc fwait cmp rclb fildll mov cltd sbb add mov out adc rcll insl fwait lods (bad) movsb pushfq (bad) or sub pop imul add fwait rex.WB (bad) adc fwait clc (bad) std lods xor pushq sbb js jmp or in pushq cmp (bad) mov out rex.WXB xchg xchg cmp (bad) push cmp rex.WR rex.X fwait mov movslq fwait (bad) mov pushq imul (bad) sbb push xchg cli (bad) vpcmpeqb (bad) mov cmp jmpq xchg stc rex.WB mov add add pop fdivs and fcmovu adc pop mov shrb lods out and (bad) fwait data16 (bad) jae rex.RXB sbb cmp sti test pushq mov sarb (bad) sub sub fsubrl fistp fidivr rex rex.WXB mov data16 orl pop pop cmpl fs (bad) push xor pop pushq rex.WRX (bad) rex.R addr32 cmpsl sahf (bad) cmp pop data16 imul (bad) jrcxz (bad) pop addr32 pop mov int repz jge xlat loop callq rex.R mov pop rex.WX data16 fs xchg or callq mov gs cmp jno (bad) out fistl repz fistp shrb (bad) shll adc out add loop cld mov loope xor jno fistp mov jnp fs jns je fcompl fcomp pop sti (bad) jl out pop cli fildl test test pushq fcmovb jrcxz or in rex.W out xchg (bad) add rex.WXB lock popq (bad) testb adc (bad) (bad) pop and cmp jrcxz xchg mov outsl jmpq pop imul (bad) out (bad) loopne push fistp push movabs mov xchg xor add repz lret rex.WR rcll (bad) (bad) es add push and cmp mov movabs imull mov xchg lock cltd pop adc (bad) stos xchg test fwait push cmpsl movabs rex.RXB (bad) xchg push movabs fistl xchg (bad) and shll push (bad) (bad) cmpsb repz outsl sbb jb mov xchg mov retq mov lss fwait (bad) cmc pop jno sub movsl negl nop cmp (bad) fwait mov and imul or cli jge,pn movsl add outsb fisttpl callq sbb insl movabs mov or jno rex.XB fwait icebp cmpl fwait vmovaps xchg scas rex.R push and fwait pushq loop adc pushq (bad) jl rex.X add rorl in adc and rex.WB mov movabs add (bad) imul and and push (bad) xchg out xchg loop or mov int cmpsb mov xor (bad) cld out fwait jns decl jg sbb out fwait pop mov insb int or lret and cmp push cmpsl (bad) fwait rex.WRXB pushfq fwait lret xchg jg mov (bad) mov iret cmp (bad) and nop cmp mov add mov mov jmpq (bad) rorl imul mov iret movslq rex.WRX sbb sahf std cltd (bad) rex.WX fwait movabs xchg cmp mov (bad) movabs jmp (bad) lret (bad) cs (bad) pop mov jae cld mov fwait (bad) lret mov fwait jg xor sub cs jae mov orl popfq (bad) rex.WX rex.B push fldt lock (bad) mov movabs idiv adc fwait test data16 fwait rex.RB xor jns lret cmc jnp pop sbb retq jae xor imulb (bad) mov shll mov fwait test sbb jns callq cmpl fwait jne xor movabs push int xchg (bad) or (bad) mov and (bad) adc nop (bad) jl rex.WX out rcrb (bad) add pop (bad) int xchg cmpsb (bad) add fwait or mull movabs cwtl adcb xor add testl xchg fwait cli addr32 mov jbe fstpl imul (bad) movabs (bad) (bad) push loope rol stos stc cmp rorb push xchg mov cmp fwait es xor rex.XB push rex.RX jmp leaveq (bad) movabs xchg xor push xchg jge cs sbb (bad) int3 in fistl mov lahf cmpl fwait cmp callq fwait pop out (bad) nop (bad) clc fs fwait xlat cmp icebp rex.WXB xchg pop xchg lret bswap and lea lret fildl (bad) insl (bad) std sahf sbb mov or je fwait rex.W icebp xlat mov divl fwait or adc je add mov adc or mov fwait lea jae xor sbb push or and test push movabs mov pushfq pop fldt or sahf jae mov hlt mov sbb adc mulb or cmpsl or or ficomp decb adc (bad) mov jo pop pop adc je callq in and jae pop sbb xchg retq icebp rex.WX mov movslq fnstcw loopne (bad) adcl xchg and (bad) or shlb (bad) loop jmpq rex mov cs data16 (bad) cmc xchg (bad) cmp sbb cmp lret mov jno cmpsl add sbb sub sti xchg loop xor sahf xor std jge lods push sub sub popq xchg imul fldl xlat xchg push std (bad) xchg or shrl ficomp mov xchg rex.WX mov (bad) fs xor rex.WR js loope xchg push cmp jmp add fbld insl sbb rex.XB xchg mov (bad) fwait xchg cli rex.WB xor (bad) fdivrp add (bad) stc loop add (bad) gs pop jno in (bad) rcl mov fwait pop xchg int3 xor fdiv rex.WR mov sub fwait or (bad) leaveq es fwait sbb or xchg xchg rex.WX clc mov movabs loop sbb cwtl test scas out cmp out shrl cmove fwait (bad) testb xchg callq fiaddl xchg fwait rex.WRB outsb (bad) xor rcrb shll enterq fwait int3 (bad) rex.WR imul icebp enterq iret pop sbb js add mov sub leaveq jno fbld fwait iretw (bad) jae sub fdivs rex.W xor retq outsl or test and hlt jmp (bad) xor fwait adc cld pop clc insb repz add adc loope in repnz fwait insb test pop (bad) rex.WXB jrcxz adc js mov (bad) sbb (bad) outsb movsl fwait lcall and (bad) jno jb sbb adc cmp data16 cli fwait sbb loope out icebp rol stos jmp (bad) out test xor fwait (bad) jrcxz cltd rex.WB test pop (bad) adc cli (bad) stos push icebp es out fdivr or sbb jmpq in jp in int out leaveq push loopne sti fucomip xchg xchg imul (bad) (bad) js js cmp adc or xor out (bad) test fwait sub loop loopne add cmp adc fwait outsl xlat jb mov hlt adc adc sbb and mov xor fs fwait repnz gs (bad) popfq cmp rex.RX add add add ds (bad) xor pop xchg fwait and add and outsl push push mov test pop pushfq or fwait mov adc mov (bad) popfq xor test fwait sbb insl cmp test (bad) xchg and adc rex.RB fwait in mov lret jmp xor mov movabs xchg (bad) and sbb mov rex.B rex.RX nop hlt insl mov lret fwait or ds pushfq xor sub rex.RB mov int xor sbb addr32 xchg mov lret jp xchg in (bad) js xor cmp in lret xchg xor stos or add pop jmpq adc fcomps sti cmp fwait mov rex.XB rex.R fwait stos sarl fwait (bad) push cmp mov cmpsl fwait sbb lods shll movsl sbb (bad) adc out rclb lods rex.XB (bad) jl pop mov loope (bad) xor nop mov andl and cmp xchg fwait rex.WRXB pop xor ss fcoms rex xor (bad) mov movd (bad) cltd mov repnz jnp retq pop mov or jmpq rcrb add imul fidivl (bad) and (bad) adc test sti sub (bad) jnp (bad) cltd sbb flds xchg rcrb cmp fistpl (bad) jbe push xor pop and rcrl xor and movabs lods cwtl mov in ja xor add pop adc rex.RX fwait sbb xchg (bad) xlat cltd scas sbb rex.WRB rex.R xchg sti (bad) out xor xchg lahf (bad) cs push add sbb fcmovnu int test xchg subb jno mov sbb jo xlat rex.RB pushfq adc out popfq cld repnz fwait mov mov fwait or scas adc and rex.WRX (bad) movabs rex.R rex.X xchg out in fwait (bad) pop mov xor jb mov mov insb push fwait clc and or sbb xor mov and test sahf fisttpl fwait repnz lahf add adcb mov cs fwait cwtl (bad) jle jg sbb fwait movabs lret mov (bad) mov sti sub sbb add rex.W jrcxz rex.X fwait mov (bad) imulb xchg callq add (bad) (bad) (bad) pop scas popfw movabs mov xchg (bad) mov callq test fcmovne rex.W gs addr32 xchg in test scas fwait test popfq movsb idivb (bad) fwait stos add mov cmp scas gs sbb add mov (bad) enterq divb jne and fildl rex.WXB data16 cmp pop loope (bad) fildl jnp mov fist jg enterq popfq sbb shr xchg (bad) rcl jp in sub push repnz pop or (bad) movabs pushfq fs scas in mov cmp (bad) in scas imul mov cmp fwait sbbb sar xchg fsubrl xchg cmp pushq icebp clc lret scas rex.X pushfq push mov (bad) mov and cli pushq (bad) ja and in shl jns data16 pop rex.WXB mov ds push insl or sbb sub nop rcl in sub (bad) xor pushq callq and push sbb iret jnp sahf xchg test pop (bad) xchg loope jb wrmsr sbb cltd push out (bad) mov rcll jo jg fnsave xchg push jb (bad) rex.WRXB xlat outsb push jl xchg mov scas xor cwtl (bad) test (bad) not retq or mov pop (bad) and sub sbb pushq add xchg rorl imull cmpsb fcoml retq adc sarl sbb scas out lret xchg xchg movsb mov xlat cwtl in sbb sti pop (bad) cmpsb pop sub stos jmpq sbb or jg add stos cmp and (bad) adc imul mov imul test rex.B repnz sbb fildl adc push mov cmp movabs jge pushq rex.WXB fistl rex.X loopne adc int fwait (bad) movslq rex.WX add mov lea sub adc sbbl xor jle mov fwait rex.X xlat std or (bad) je retq fwait test sbb out sbb clc xchg hlt std mov sub scas sbb (bad) adc pop mov jo xchg idivl fwait and (bad) loop cltd rcr cmp jne sub test cltd xor push sbb sbb ss sub (bad) xchg jno mov or push (bad) jg movabs clc mov (bad) stos (bad) add (bad) imul orb (bad) fisubrl je or (bad) rex.WR cmpsb mov xchg push test mov cmp cmp movabs (bad) mov (bad) sbb pop repnz outsl lret pushq stos fwait sbb cmp xchg rex.WR stc in jns rex.WRX (bad) imul or cmp (bad) push cmp sbb stc pop hlt add or fildl xchg lret in or mov xor insb jge rex.RX jno push mov int3 xchg rclb test rex.XB insl jbe fwait pop scas adc sbbl fwait or out sbb and rex adc xor xchg sbb xchg sti jmpq in mov xchg jo rcrb lock mov mov fwait sbb jb fdivrs rclb scas or sti lret jnp xchg sbb pop retq cs mov or fwait (bad) pop adc rex sti fwait rex.RX data16 mov stos sub fwait cmp (bad) jnp (bad) fwait (bad) fldcw (bad) add faddp lea mov rex.WRX fwait sbb cmp out (bad) sbb (bad) rex sbb test mov cmp jge adc lret jg add (bad) je mov popfq rex.WXB retq sub sub fwait or (bad) int3 sbb sbb int mull mov (bad) (bad) xor rolb (bad) sbb mov pushq fsubs sbb fwait (bad) xchg out sbb fs fwait jns push (bad) rex.R fisubl outsl fwait xor je sti cmp fwait mov std fstpl (bad) imul cmp fwait sbb (bad) cmpsb fstpl lret adc popfq (bad) cld fwait clc jrcxz not je in rorb out imul fs ds popfq nop sbb lock sub fwait push rex.WR callq and cmpl jrcxz fwait iret mov lret mov or lret je lock adc sbb mov icebp sbb fnstenv pop pushfq je imul jb xchg movabs test fwait sarb or fs mov popfq rcrl sbb mov fnstenv sti cmpsb sub or mov insb callq rex.WRXB stos sub sarb sbb jno rex.XB movabs cmp int xchg ficom or xor and sub test fadds fwait repnz pop fldcw jl in (bad) scas (bad) int3 mov pop lahf xchg fld fwait cltd mov (bad) scas (bad) popfq jne gs (bad) icebp movabs test or pop fisttp movabs movabs stc mov outsl loop rex.W icebp rex.RX (bad) pop mov cltd subb mov movabs jmpq fildl int3 jg loop test pop adc sub out (bad) mov fild testl out add mov (bad) sti adc sti fstps out mov pop fwait sub cmp sbb mov fbld jge (bad) mov (bad) lods jl mov xor push in in shlb retq (bad) sub or fnstcw in rex.RXB rex.RXB cs mov pop (bad) icebp jne rolb (bad) rorl or (bad) xchg popq movslq sbb mov fnstenv (bad) (bad) pop and add iret lret rex.WX mov mov xchg jle jge pop sbb cmpsl sbb movsl or cmpsl hlt fwait (bad) (bad) (bad) cmp mov pop data16 jmp or fwait cmp mov jns (bad) fwait pop or in shr ficomp xchg cmc (bad) in pop pushq mov cld leaveq rolb loope jmp negb mov scas add (bad) mov cli sbb (bad) pop rex.WRB (bad) cmp mov (bad) fsub sbb insb cmc out or cmp xlat (bad) mov cltd jmpq je sub rex imul xor (bad) sbb (bad) pop and roll test (bad) enterq mov or sarb out sub fwait movabs cmp imul int3 nop (bad) (bad) test adcl xlat fsubl mov sbb xchg cli int (bad) xchg cmp in std (bad) push fwait cltd rex.B rex.WR outsb add add and mov pushq imul (bad) xor mov cmp cmp in xchg fwait (bad) (bad) or (bad) sti cld xchg movsl (bad) (bad) retq in stos ficomp cmpl adc push (bad) (bad) cmp fwait (bad) stc sub pop (bad) jmp sti add in callq and fcoml and fnop sti rex.WXB repz cmc fwait jge cmpsl (bad) movabs xor sub or fdivrl add add adc fs or (bad) (bad) xlat jrcxz (bad) (bad) mov xchg retq sub lret mov jp (bad) scas fwait icebp cwtl imulb (bad) xor lock cld xor mov rex.WR clc rex.X ja sbb push pop (bad) jge fwait jb (bad) (bad) push fwait jns loopne pushq mov rex.R or jno scas push xchg mov jle,pt add push fnstsw cmp mov sbb jg mov (bad) rex.WRX mov fwait sbb sbb xchg jmpq add hlt cmp sti shl sti adc mov sub iret (bad) (bad) clc fwait mov add shlb gs repnz fcomi mov insl add sbb pop jns hlt (bad) retq (bad) rorl mov fwait stc or cld rex.R rex.WR pushfq loope in and lahf mov jp and or cwtl cmp fwait lret loopne int and jrcxz enterq mov div sti test (bad) cwtl setnp add pop jbe jns cli (bad) rex.XB rex.W sbb scas cmp pop (bad) fisttpl lret (bad) jle (bad) fwait sarb and adc sbb (bad) mov pop int push add fstpt jrcxz xlat ja (bad) shrl paddw rex push xor js push fsubrl xchg mov rolb test test mov clc int3 sbb mov xchg (bad) retq movsl jbe mov fwait adc or mov xor loopne cmp pushq movslq rex.WRXB add pushfq imul (bad) in fwait and pop mov fs pushq imul sti push xlat in add mov out fcmovnu jne rex.RB fwait xchg sbb ss rex.R sbb leaveq or rex.WRXB mov mov adc cmp pop insl callq or mov (bad) fcompl movabs loope imul xchg (bad) xor movsb lods cltd sub fldt stos add add push movabs mov mov mov (bad) push adc sub dec fnstenv andl fwait out (bad) mov jge cmc cltd xchg rcl cmp add rex test stc outsb (bad) add je sti cmpsb sarb cmp (bad) cmpsl subl iret cli mov (bad) jno xor (bad) xchg test ficomp jo mov repnz repz popfq fistpl ds cmp test (bad) popfq (bad) rex.RX rex.WR sbb add cltd insb jne add test jl xor cwtl mov mov loop pop push movabs (bad) xor push xchg popfq test stos fbld rex.WX xchg and fwait sub (bad) (bad) shr addr32 fwait outsl mov push xchg (bad) adc mov retq and fimull fwait jmp mov or callq pop pushfq fidiv rclb rex.RX (bad) fwait (bad) hlt (bad) sahf (bad) xor pop fs xchg sbb outsl xchg sbb xchg rex.RX enterq rex.XB jmpq repz sbb rex.RXB repz cli fwait mov adc jl scas or adc (bad) rex.B fwait (bad) imul insl sub lahf test jrcxz mov (bad) push fwait lods out sub or jl push jg sarl fs jrcxz (bad) sub or fwait xchg xchg pop mov out out sub add fwait movabs adc sbb fildll outsl pop stos rex jrcxz push xchg push jmpq nop sub testl (bad) mov (bad) out in je fistp lock (bad) rcrl out mov jl vpand jecxz (bad) (bad) and fwait adc in retq in popfq fwait js (bad) (bad) and mov xchg (bad) and fwait iret (bad) callq jmpq subl cwtl movsb xor fwait (bad) or sbb (bad) movabs xor fwait rex.WRXB fcmovnbe jp mov sahf jl movsl sbb sub (bad) fwait mov negl cmp (bad) imul cs gs cmp fistpll bswap (bad) (bad) fwait cmc jo movslq movsl insb pop fwait rex.RXB out outsl push mov fwait mov adc roll sbbl jne pop fwait jae mov rex.RB fwait jbe ja push jle (bad) (bad) fwait jp lret ss or sbb and sahf cmp pop (bad) outsb (bad) fwait cmp lods xor add add fwait (bad) (bad) sbb cmp xchg (bad) lea es rex.X fwait addr32 xchg adc rex.R pop fbstp xor (bad) (bad) fmull jnp,pn xor mov jns (bad) insb xor (bad) push stos xchg (bad) sbb add cmpsb (bad) out jrcxz cwtl fwait xchg out (bad) jno xchg loope lods fistpl sti xchg fcmovb es (bad) add fcomp or sahf clc outsl pop rex.X lret out rclb fwait rex.B cmp mov pop jl stos xchg test rex.XB sub xchg retq cmp (bad) rex.WXB fildl rex.RXB xor mov and test negl mov in cmp cmp sbb pop jmpq repz sub or jrcxz cmpsb rorl xor in jl mov rex.X adc mov callq mov jmpq je (bad) callq in adc mov es rex.RXB rex.XB pushq sti push std imul adc mov push jl cmp sbbl sbb mov out lret scas out jo or rex.WRXB jl rex.X xchg mov push pop (bad) sbb in xchg (bad) cli pushq fnstenv add es scas mov insl test popfq test or and mov (bad) xor adcb xchg push enterq pushq popfq push icebp fistp cwtl jle pop rex.RB fistpl pushfq enterq and (bad) (bad) pop sbbl rex.XB and or stc sbb test xlat (bad) rol rex.B retq xchg out mov xlat jb movsl ss rex.RX rex.WRB xchg cmp fcoms sbbl ss lret imul jrcxz xchg and xor lods out rex.W pop sub and (bad) fisubr and (bad) sbb and insl test xor (bad) cmp cmp push jno rex.WRXB xchg push push rex.WRX cld xor mov cwtl and mov (bad) (bad) xor gs rex.W ds mov cld cmc or xlat loope or pop (bad) (bad) cld xchg cmp insb adc mov (bad) jne imul retq push xchg or mov rcll faddl (bad) fcmovnu jg or adc fbstp adc mov (bad) (bad) stos out xor lods sti (bad) callq popfq cmp xor sbb outsl cmp (bad) sub (bad) (bad) clc iret adc imul xchg add jns fwait add nop sbb fwait stc enterq (bad) jnp popfq rex.X mov cmp and mov adcb (bad) or sbb sbb mov mov sub push sub fwait (bad) pop mov (bad) and scas (bad) (bad) jae (bad) retq (bad) xchg rcrl (bad) (bad) mov xor cltd sub outsb sbb jae cmp lret push sbb xor lods loope in int3 mov in fwait push xlat cltd rex.R rex.WRB pop mov in (bad) cmc loope (bad) movabs sub (bad) in or push lahf jo shl mov fisttp (bad) cmp mov lock rex.RXB fstps pushq mov (bad) scas pop cmovg stos out push or rex.WX (bad) fwait sbb clc (bad) sub xchg mov int adc cmp (bad) jo not add flds out fwait pop (bad) jp stc out mov adc sbb lret cli mov xchg nop (bad) sbb (bad) fstpl je or insl rex.XB rex.B rex.RXB xchg rex.X jmpq jmpq fdiv (bad) repz cmc sub add js mov or movabs and pushfq fsubr mov rex.RB mov cld rex.WX cmpl adc pushfq and xchg jge or (bad) fstps mov push pushq (bad) rex.WRX (bad) loopne cmc fwait popfq fs repz adc (bad) and rex.WRXB cli sti and cmc (bad) sbb add add push (bad) sub lcall xchg cmp cltd mov jle jne subl mov notb adc stos mov sub leaveq movsb test add sbb cltd (bad) js fcmovu movabs callq (bad) cmp xorl xchg stos test fwait or jno in popfq lahf sub leaveq flds fwait cs jb pop mov xor sbb xchg test sbb imul rex.RX shlb sbb nop (bad) fidiv scas rex.WRX mov (bad) sub out xor rex.WRXB sub xor je test and or stos lods (bad) mov xor and (bad) (bad) rex.X adc jg lret adc sbb out cmpsb mov mov stos sar fwait cs lock jp cmp out sub outsl cmp add jge insb (bad) push sbb loopne pop movabs cmp xchg or popfq adc (bad) cli nop (bad) adc shrl sbb mov (bad) hlt (bad) out and jmpq sbb adc (bad) scas fistpl fwait sub callq out notl add iret rex.WRXB jne cmp retq addr32 fwait and loopne (bad) fwait jno pop loop (bad) outsl mov (bad) mov xchg push int3 adc pushfq xchg lea sbb out pop (bad) jno add and or rex.WB rex.RXB sub rolb xchg out clc rex.WRX lea pop add insl (bad) int movabs xchg fldl (bad) cmpl add lret divl jl jb repnz push movslq ss mov jmpq out xor int3 xchg std insb fwait mov (bad) retq mov xlat mov js rex.WXB jmp fildl int jno (bad) push mov or cmp cmc in (bad) fwait xchg test pop pushq fwait orl (bad) shrl (bad) (bad) icebp movabs stc (bad) popfq push pushq (bad) test mov (bad) xchg movabs notl mov rex.X (bad) push fldt or rolb lret rex.R mov insl (bad) push (bad) xchg rex.WX xor int3 cmp (bad) fs movslq (bad) mov rex.XB test or xor out (bad) repnz pop xlat (bad) mov std rex.B fwait adc lock jb retq add addl adc mov out (bad) add (bad) rex.WX in rex.RX repz addl fwait cmp movabs add fwait add or fwait icebp (bad) ficomp sbb rex.RB mov (bad) rex.W rex.WX scas imul (bad) mov fwait shlb add pop xchg and (bad) icebp sub rex.WB sbb pop pushq (bad) (bad) fwait xor jle or (bad) pushfq mov rex.B js xor leaveq rex.WX fwait sub faddp popfq jle rcrb lcall scas (bad) sbb jne outsb in pop movabs div pushq mov rex.X loop fwait push (bad) adc ds jae callq lods mov cmp movabs out adc cld rex.WXB sbb add sti push xchg mov (bad) jnp mov sti or push pushfq xchg xchg sbb rex.RX in cmp add jp fwait add callq fdivrl sbbl (bad) jbe cld (bad) jg (bad) and in in lret (bad) cmp test and sbb (bad) pop rex.WX and sbb rex.WR xchg xor jmpq mov in adc rex.WRB (bad) pop (bad) xchg jmp test fwait xlat out rorl fwait leaveq jmpq cmp movabs (bad) jp fwait mov (bad) sub fwait adc sub stos xchg jle pop or (bad) cmp out andb (bad) push and pop xlat sub sbb sarb or stos jmpq (bad) clc jge in mov movsb xor xchg sti sub out jp (bad) xor std mov mov add fwait mov icebp cmp (bad) adc push leaveq fwait sbb push repnz test rex.RB lods sbb adc fwait pushq (bad) lret fiadd xor jle (bad) hlt data16 push sbb insl test int3 sub add loop mov fwait xchg lods cmp rcrl rex.X out add icebp jo cmpsl sub xchg mov vpmacsswd pushq push cmp pushq fistpll jb out fsubrl (bad) adc cwtl mov jmp rex.WRB out jae (bad) xchg mov data16 jb mov cmp loop (bad) xchg out rex.WRXB popfq fnsave sub decl retq mov ja (bad) cmp (bad) loopne je movabs sub int3 (bad) rex.WR jb testb (bad) (bad) rex.WR rex.XB mov jb sub jns jl sti cmc lea fstps in push xchg movabs mov rex.WXB es adcl fmul ss add add cmpsl cmp and callq movsl (bad) imul (bad) (bad) fwait femms clc insb (bad) lea push loop mov cmp ficom fwait movabs pop test xchg and rcr pop fcmovnu mov mov adc pop mov rex.WXB fwait test (bad) jp shrl imul sbb xchg test sub push gs jge xchg fwait movabs lods pop rex.RB sbb mov out rclb mov mov jnp outsl pushfq lahf ja pushq rorl rex.WRX mov out jnp callq scas adc cmp scas fs jnp lods (bad) in xlat push pop lahf imul sbb int (bad) cmc movabs lods xchg test ss adc cmp addr32 jmpq mov mov xchg movabs fnsave clc (bad) sbb ljmp push rorb (bad) in jb xor cmp jmp add fcomp fs (bad) lods jbe cltd cli rorl sbb loop jnp retq ja sub sub (bad) out mov cli pop rex.XB gs retq (bad) sbb repz gs popfq addr32 sbb jo mov rex.RB pushfq xchg sub mov mov or pop add loop jmpq pushq pushq xor pop movsl out sub rex.WRX fucomi stc imul ss pop mov (bad) mov insb callq loop test (bad) (bad) cwtl xlat (bad) push jo cmp stos out loopne add adc stc int repnz jno int rex.WR in scas push (bad) ds (bad) jl mov movabs (bad) xchg repnz (bad) mov pop fmull push jo xor or mov sbb retq (bad) roll xchg loop loop insb xchg (bad) (bad) lock mov sbb pop sbb mov enterq xor adc (bad) (bad) mov test out cmc in (bad) popfq mov rex.B (bad) ffree or clc or movabs sub rex.RXB (bad) insb fwait outsl lea jae sbb pop fildl cmpsl (bad) ss leaveq js stc xchg cmc retq int3 add pop fildll adc sbb fsubrs fwait mov xchg ss adc rex.WX or mov jp mov and sbb (bad) xor test fwait rex.RX movsb movsl (bad) rex lods fwait mov rex.W jns movabs cmp (bad) (bad) (bad) pop lret fwait imul mov (bad) jnp fimull fwait add int scas test data16 pop (bad) (bad) mov mov jge add fwait add mov pmuludq int mov sbb adc int lahf jl xchg sti add mov push fwait jae cltd jo sub add fwait int lods stc jbe in je add lock or (bad) cmp push fwait or push icebp test pop sti (bad) sti rcll leaveq jns scas pop (bad) adc adc loopne (bad) cs loop movabs (bad) adc add xchg or movabs jmp mov adc sub cltd orl mov rex.XB rex.W movsb cli fwait push jmp sub rex.WB repnz jg pop movabs es iret xchg callq ficompl rex.WXB or pop imul cmpl es ja fsub and fwait or sbb (bad) (bad) xchg movabs pop (bad) clc xchg cltd jno mov xchg (bad) fwait and hlt sub test (bad) popfq test loopne pop xchg fist (bad) rex.WXB (bad) cs mov xchg jb or fwait jge xor jae and xchg sub sarb es fwait and ds jne pushfq test mov (bad) or out mov push mov adc popfq xchg mov mov push sbb fwait add cmpsb (bad) (bad) (bad) (bad) cmp pop mov xor (bad) jbe xchg push adc jrcxz mov sbb popfq rex.B (bad) jl xor xor add test xchg jae loope (bad) mov test and sahf fwait movabs or add out iret (bad) callq movabs mov test out fidivr or icebp rex.W lahf negb pop scas fstps fwait cmp add roll fwait jmpq adc xchg fwait pop lret fdivl xchg test lods push lahf movsl sahf rex.XB xor out lret lods repz scas push xchg sbb cmpb (bad) cli loop push loope (bad) pop movslq callq mov (bad) negb push pop sti adc (bad) stc rex xor pop cmpsb push scas (bad) pop fwait je mov xor shrb jb jmp (bad) loopne fwait movabs (bad) lahf mov (bad) fwait xchg nop sub movslq sbb fstps fidiv ja (bad) out (bad) vpshaq cmp (bad) push fwait sub xor fcom (bad) (bad) sbb sbbb fwait decb adc jae retq (bad) cmp cli jp repnz add (bad) jno push sub fistl xor xchg rex.RX mov sub mov (bad) jne rex.WRB fcoml xlat outsb rex.RXB in movsb fwait stos sub push mov fisttpl retq fwait enterq and js cli test jns cmp push (bad) or add in callq stos (bad) mov pop sbb pop xorl rex.WXB rex.X retq sbb rex.XB (bad) xchg jmpq xchg cwtl clc jge (bad) fidivr or std sbb mov rex.W add nopl xor sub and cli jmpq sti xchg fwait pushfq sub iret fwait mov icebp (bad) mov mov jo xorb mov outsb fwait sub mov (bad) fwait int3 xchg mov cmp cli adc sti add add imul and stos jbe mov scas mov loop rex.WRX fadds mov mov out and push cld mov lar sbb cmp retq (bad) xchg std mov (bad) insb (bad) cld (bad) xor lods movabs pop jl rex.X out fidivrl cmp and (bad) lods (bad) jae cmp movabs jle (bad) mov scas xchg and imul rex.RXB ss rex.X cmp (bad) mov movabs subl (bad) push (bad) (bad) sub rex.WXB jo rex.RX jmpq (bad) movsl add es (bad) (bad) repz js add cmpsb shrb adcl push (bad) mov fisttpll (bad) test add mull (bad) fwait sbb idivb sbb rex.WR rorb fucom xor movslq and (bad) in fwait lret rex.WX sbb rorl (bad) ds rex.RB or icebp pop fwait test sub fwait jns add callq (bad) rex.XB or (bad) lret pop lods push enterq mov mov jno fwait imul in fwait (bad) outsb push rex.R (bad) rex.WXB cmp test rex.XB fwait (bad) mov pushfq lret (bad) scas fbstp add (bad) or fstpt jns jne (bad) out imul rex.WXB fwait nop cltd in (bad) sub mov fwait test imul mov pop fiaddl icebp loope cs (bad) or mov pop add in fwait lods mov callq mov xor lret idivl pop jrcxz xchg xor sbb add loope cld rex.WXB (bad) and stos xchg (bad) (bad) (bad) fwait cmp (bad) rex.RXB push callq lods mov mov shl js in fwait pop clc jmpq add leaveq (bad) out xchg mov test xor xlat movabs adc std mov rex.WX fwait (bad) scas loop pushq mov mov insb jmp mov rex.RB fwait jle rol jge or in and jne (bad) movabs mov xchg xchg fstpl movsl adc adc test rex.XB adc movsl retq sub rex.W rex.XB xchg sub mov mov jnp insl xchg cmp jg out sub adc mov (bad) jge stc shl add callq loope rex.WX mov adc mov xor mov fwait xchg jns (bad) mov sub rex out mov test (bad) cwtl mov cs movsl icebp (bad) fwait sub push in xchg (bad) jrcxz popfq cs fcomi lods (bad) or (bad) scas adc or retq and xchg mov faddl fwait in add lret popfq xchg rex.RX (bad) cmp (bad) ds jmp xor mov jg in fimul xchg sbb (bad) loop std mov rex.WR mov rex.WRXB rex.WX retq icebp mov xor xchg and out (bad) mov jrcxz xor ja es or push addr32 movabs rex.WRXB rex.WX loop add movabs test xchg rex fs (bad) mov sub nop mov cmp or sbb xchg mov (bad) pushq (bad) popfq mov sahf fstl mov (bad) (bad) jg push push icebp cld retq push int3 and xchg cmp loop rex.RXB jg add sahf cmpl (bad) sbb or xchg pop rex.XB lret in sbb pop lock movabs mov adc xor (bad) pop hlt jl sub push jrcxz (bad) xlat int in mov push cmp add fs loopne retq pop pushq ss std rex.RX rex.WX rex.RXB (bad) or mov cld mov mov movslq std rex.RB es mov out int or rex.RXB mov and lret adc (bad) push imul out int (bad) imul mov test (bad) or mov add rex.RXB xchg xor jrcxz or pop mov sbb mov and cmp (bad) iret retq mov jle jne fwait rclb xor es (bad) rex.WX (bad) fsubp xchg rcrb test repnz scas and (bad) movabs fwait jl (bad) and stos fwait jns (bad) cmpsl cmp pop hlt fwait and test int xor xchg cmp shlb out sub movabs (bad) sub scas cmp jns movabs (bad) (bad) rcll mov imul mov icebp sbb pop mov fildl test push (bad) mov in fs jne mov jrcxz test (bad) fmuls callq cmp out cwtl mov lods (bad) rex.R xchg sbb sbb repz hlt setno rex.WB jmp cwtl cli vpsadbw cmp fwait rex.RX lret jno sti (bad) fwait loop mov lea sub sbb mov stc loop fwait (bad) pop xchg or xchg (bad) ja sarb rex.WR sub imul (bad) mov pop add ss test cmp mov lahf cmpsb int3 mull (bad) (bad) lea stos xchg add (bad) sbb sbb fldt fwait (bad) and test cmpsb test cld (bad) imul (bad) mov je jbe and jrcxz push addr32 (bad) (bad) callq cmp pop int in rex.WX and add xor fistpl mov pop rex rorl cmp mov jo mov or sbb push mov fisttp fwait out scas stos rex.XB sahf jle rcrb add fs (bad) and pop in mov add (bad) gs add push (bad) mov sub negb pop lret adc pop fwait cmc cltd cmp sub cmp (bad) or rex.B gs sub (bad) out jno jne fwait stos movsl mov (bad) adc jnp (bad) sbb jb add pop insl pop psubusw lcall xchg andl xchg sahf fwait pushq push rex.R (bad) sbb rex.WRB rex.X pop (bad) es sub movsl (bad) xlat lods retq cmpsl push fwait rex loope fwait repnz mov jmpq or loope (bad) push push (bad) sahf sti cmp movabs data16 mov mov stos mov iret sti add loope std adc xlat jle (bad) (bad) movabs lret sbb cmp jge scas pushq xlat (bad) in outsb movabs xor jge fwait movabs pop (bad) fwait rex.WB ja iret fistl fwait pop mov pop (bad) cltd mov test or fwait je jmp (bad) adc sub (bad) test pop fldl in pop gs (bad) xchg callq (bad) fwait sahf scas rex.X pushfq sub add and mov nop (bad) mulw xchg xchg pushfq imul sahf (bad) ja popfq movsl cmp mov mov out fwait add fbstp movabs pushq rorl xchg cmp push xchg test int rol movabs fwait xor rex.RXB fwait repnz movabs test stos sbb jns loop cmp in xchg mov or (bad) cmpsl adc or xor shlb pushq (bad) data16 cld add out push adc sti xchg (bad) loope,pt add (bad) out (bad) movabs mov add lret int3 fsubp in movabs cmc testb rex.WRB ja and xor callq pop fs movabs sti test stos or and cmp mov push int3 adc (bad) xor xchg and (bad) xor movsb mov (bad) addr32 pop mov xlat out pop rex.RB push pushfq sub xor pop addl sbb (bad) in (bad) (bad) loop cli repnz adc loopne (bad) in mov in xchg jl out fs mov (bad) je sub mov pop sbb (bad) (bad) jo retq (bad) retq pushq jo clc (bad) movl lret (bad) (bad) xchg xor sbb pop rex.WXB xor push hlt xor jg and mov add loop (bad) sbb orb (bad) loope cli sub ds (bad) data16 subb mov fcmovnb lods rex.W sbb cmp movabs enterq hlt cmpsl push mov sbb shrl and xchg (bad) jrcxz fiadd lahf xchg or pop fwait pushfq jno out jns (bad) add rex.X retq (bad) push fwait leaveq adc (bad) mov fcompl pop adc sbb sub callq cwtl lea rex.RB xchg jbe pop (bad) adc lods stc mov jns xchg or in mov pop mov xchg xchg (bad) imul int push jmp rex.RB pushfq cmc sub jmpq mov (bad) (bad) jo rcrl fwait jae hlt lret pushq fwait add rex.RXB addr32 mov xor cltd cld (bad) mov orb mov ja pushq fwait sub (bad) jb lods (bad) sbb in sub in jp fwait pop rex.WR movabs es fwait iret push cmpsl rcll or movsl xchg mov int pushfq xchg lods nop xchg in mov mov test mov sbb lret (bad) mov (bad) shr jne js (bad) cwtl cmpsl stos fwait xchg or callq popfq and sbbl or mov pushq rex.RXB xchg xorl pop (bad) int3 adc sbb (bad) jge mov mov (bad) in sbb out lahf add (bad) rex.WRXB adc outsb cmp cmp or fwait (bad) add mov add pop pop rclb sub mov retq fwait lods jp (bad) out rcrl and mov int (bad) movb pushq adc or lret cli rex.WR stos (bad) out sbb fwait in (bad) (bad) xchg rex.RB sti out xchg in ss ds in cmc mov cld xor sbb (bad) add movsb mov pushq out mov loop push cmp stos fwait pop add rex.W (bad) push fwait or mov repz (bad) mov fwait jge mov and mov fstpl iret pop (bad) jmpq test cmp adc sbb adc mov callq fwait xorl pop cwtl and mov outsl jmpq (bad) test mov and hlt fwait adc shrl or out sub or or fwait xchg jns mov jb fs push rex.R rex.WR lods cwtl retq test insb jg mov fildll pop mov scas in add rex.WRXB and (bad) mov lods pop jmp movslq movabs push adc cltd stos popfq test test fwait scas rex.WRXB fs rex.RX hlt jge fwait mov sub lahf xchg and pop or (bad) fwait xchg js push insl jp es cmpsb idivb pop jae (bad) repz xor (bad) mov rol mov in lahf sub xor push out sub sbb in repz jb rolb xchg (bad) or stos stos test and out mov negb (bad) fldenv repz and in xor rex.WXB hlt fmul (bad) movabs mov lahf cmp sub hlt rex.B mov sub iret popfq or addb mov add jge sbb in jns pop add (bad) sbb xchg pop mov loop rex.WRX or xchg rex.B in xchg callq scas pushfq mov xor and jnp fdivs lret or sub mov pop rex.XB adc (bad) mov mov out sbb or sbb (bad) cwtl movabs leaveq xchg loop fildll in lea out jns and push add push (bad) adc fistp lret push adc sub jnp rex.WXB pop mov mov fwait jno sti and shll repnz lahf in or jbe out xor mov jle add fwait (bad) add pop lods sbb out repz rex.XB rex.W fwait movabs adc out cmc loopne sbb fmuls movabs movsb fwait (bad) in lods mov shll add out or sub push xlat jrcxz add in xchg push adc sub fwait loop and xor data16 (bad) in mov xlat xor fwait stc sbb or adc jmp stos fisubl rex.WX jno movsl (bad) movabs ja cmp pop rex.WRB sub xor rex.XB sbb pop shlb xor pushq mov sti add (bad) adcb (bad) cmp sahf outsb (bad) (bad) pop cmp test cltd movabs sbb and fsub test sbb outsl movabs cmc add or addr32 pop and stos pushfq add mov icebp not cwtl cmp fwait (bad) (bad) jae add mov mov fwait cmpb rex.RX scas xchg stos mov adc jrcxz movsl movabs outsl lahf mov mov addr32 decb (bad) cwtl mov out ja push and or fwait or mov (bad) fwait xchg add cmp fmulp (bad) hlt rcrb push rex.WRX fsubr imul movabs stos jmp push and jb fwait out cld add sub imul (bad) jo int3 adcl fwait and in lock and je sub pop mov and mov add faddl test ficom outsl xchg and add xor clc fwait (bad) movl sbb cmp (bad) jmp rex imul sti (bad) sub fwait jo imul mov jmpq sbb cmp mov jne fnsave push hlt rex.RB vpavgw cmp pop add scas loopne (bad) cs fsubr es leaveq scas lods sbb cmp outsl movsb out and nop std sbb jb fwait add (bad) loopne int3 mov mov pop add pop sub out (bad) push adc cs nop (bad) in mov mov fwait (bad) xchg mov clc jrcxz cmc cwtl mov stc rex.WRXB data16 fwait icebp mov push and xchg mov (bad) cmp jl negl jb callq stos add rex.XB (bad) in and fwait (bad) cmp and cmp fwait add lods retq xchg jmpq rex.WRB fwait retq (bad) push jnp sub mov loopne std xor xchg hlt rex.X fwait callq rex.W and pushfq or outsl cmp (bad) (bad) mov mov jmp jl fs xor (bad) xchg adc jle (bad) js rex.XB rex.WX xorl rol adc xchg loope adc out (bad) fwait mov adc cmp rex.WXB xlat loop rcrl in sbbl add sbb xchg add cld (bad) fwait js popfq (bad) cli rolb lret (bad) (bad) cmpsb fwait add cmp rex.WR mov and mov and adc es adcl (bad) pop insb adc jne popfq (bad) enterq sti mov clc (bad) (bad) (bad) cmpsb rex.XB es callq sbb (bad) pop outsb imul jo movabs jmpq (bad) (bad) adc push mov and (bad) rcr or and sbb (bad) rex.RXB pushfq test cmp and fdivr mov rex.XB (bad) jbe (bad) fwait repnz (bad) mov lea rcrl movsl sub push fwait xchg insb hlt lods (bad) test (bad) fcoml mov adc int3 rex.RB fwait or pop and sarl rorb sbb cmpl jae fistl fwait rol je fadds enterq rex fwait pop mov in std loope mov in not icebp jrcxz sbb loopne mov clc sbbl fwait pop or loope int3 xchg jae repnz (bad) imull mov push cmp out pop pop scas rex or fs (bad) rorl (bad) xchg rex.WRX sbb jle sbb xlat sbb rex.WXB pop cld and fwait cld xor shrb pop mov rex.WXB popfq and adc fwait pop add fdivrs xchg ficom add cltd jmpq stc xchg pushq outsl jbe and sbb loopne xchg fisubl fwait add faddl xchg movsb jbe movl or subl mov push stos fwait cmp outsl jl cmp (bad) mov std cwtl cmpsb sbb je pop scas (bad) jbe retq or rcll out rex.B fwait divb sbb adc addr32 hlt fwait ss cli jbe vunpckhps rex.RXB data16 fwait and sbb mov gs test add jno jo cmp jrcxz in insl mov addl and fsubr xchg lret shrb rex.RX rex.WRB out xor xchg out fwait mov int mov sub cmp mov fwait test ja out (bad) jae shrb sbb out add pavgb (bad) (bad) cmp adc (bad) sub loop lock fwait and repnz fcompl adc jae (bad) (bad) pop icebp decl mov repnz pushq fildll data16 (bad) faddp cmpl rex.WRB pushfq lahf cld popfq or stos lods (bad) icebp rex.RX mov push mov xchg movabs rex.WRX (bad) fwait xchg rex.WRB or mov ja rex.WXB fwait movabs lret jge or fwait jnp adc sbb stos out fwait cmp (bad) push rcrl sti sbb rex.X mov adc int3 fwait rex.XB out es fwait sub test cmp cmpsb jbe iret fwait leaveq or sub and sub outsl pop xor rex.RXB lock rex sbb xchg rex.WX push shl rcrb xchg mov push rex.RXB add fsubrl mov fwait mov (bad) push mov stos (bad) fcoml sti mov mov (bad) fwait std mov xor mov cmp sbb rex.WRXB push insl movslq (bad) (bad) cmp xchg sarl int3 mov fwait js pop sbb (bad) ror xor sbb jmpq (bad) xlat push lock lea iret outsl (bad) fwait (bad) rex.RX jrcxz fst jae lret sbb jne sub in mov mov sub out cld je mov (bad) movabs stos (bad) insl rcrb jae add fwait and pop movabs mov fwait add jrcxz sub fwait out sbb sbb adc sbb popfq mov cld mov jae (bad) jle stos cmpsl jg adc adc sahf movabs (bad) xor fwait stos or xchg xor rex.WXB or lahf add (bad) imul xor cmp fwait jp test lahf jo (bad) sahf pop out xchg (bad) cmp rorl xchg fwait (bad) (bad) xchg imulb pminsw rcll rex.WR or icebp lcall enterq fwait rex.B xor mov lret jrcxz sbb sbb mov scas cmp stos hlt pop pop fnsave rex.WB or test fnstcw (bad) xchg (bad) lods pushq jg adc rex.X cmp (bad) (bad) (bad) jmpq test adc out repz fwait jl (bad) add or rorb rex.WRX jge fwait (bad) in cld std pushq jmpq movabs fst (bad) (bad) data16 cmpsb sti jb xor sbb or (bad) (bad) lods rex.WRX lret push sbb mov adc push outsb fwait (bad) (bad) or (bad) fwait movabs rex.RB rex.W sbb mov movabs cmp adc pushfq jle add cmp mov fs (bad) (bad) enterq and cld fistp stos loopne outsb andl rex.W rex.W rex.R rex.WRX subl (bad) clc lods (bad) mov loope xor out fisubr or cltd pop stos push add loop fdivrs xor mov sbb (bad) and mov sbb imul rex.WRXB pop fwait or adc retq je movsb repz (bad) in sbb test fmull in sbb bnd fwait lret movsl push jp sub rex.WRXB push rex.RX notl (bad) sbb sub cmp insb sub or xchg (bad) mov jmpq loope js (bad) cwtl lcall xchg pop mov jae div sbb jmpq mov fucomi rex.XB in in sbb movabs subl (bad) cmp add loop loop fwait xchg or ds sbb je jle jo fwait pop pop ja and jrcxz fsubr (bad) fwait (bad) mov xchg fwait (bad) pop out (bad) (bad) rex.WRXB sbb pop jb pop (bad) gs xchg fs lock rol fwait mov rex.WRXB (bad) sbb int cmpsb scas adc int3 loopne test mov outsb mov (bad) sbb imul movabs pand (bad) cmp fdivl fnstcw nop in mov sbb je rex.WRB add lret cli fwait rex.RB xchg cmpl (bad) push loope lea xor sti mov or pop int3 add sbb cmc mov cmc rcl mov jp push push push jb adc rex.RX adcb or push rex.RXB (bad) rorl out adc mov jge repz sub mov scas (bad) rex.RX in mov movabs retq adc xchg (bad) rorl adc outsb fdivl and std (bad) andl xchg popfq ss jg xor shlb xor jne push out cmp fwait jns retq or pop sub and pop popfq ja cmp (bad) (bad) fildl in scas (bad) callq push loop mov subl sahf xor fstpl fwait (bad) faddl adc (bad) fwait (bad) add fwait lods xchg push (bad) rex.WRX jmp js addr32 loope fnstsw (bad) (bad) xor or mov rex fwait (bad) mov (bad) hlt mov xchg xchg (bad) (bad) callq fwait rex.WRXB lea xor and xor prefetch or lret movabs leaveq ds rex.XB rex clc fwait setbe imul push rex mov fwait push int3 (bad) sbb out test add xorl (bad) (bad) push sbb cmp fwait (bad) rex cmp pushq (bad) xor fistl int3 jnp (bad) je (bad) add ss rex.B movsl cmpsb ficom sub rex.WXB fwait repnz add (bad) add push mov loope fwait cs or fwait adc pop xchg xor rex.RXB rex.XB fwait push (bad) fidivrl sbb mov and jnp pop add adc test pushfq lret rcrb stos jmpq pop scas in add fwait add push mov xor (bad) (bad) (bad) (bad) fwait retq (bad) rex.W rex.WXB and addr32 xor and adc or int fwait add pop jo sbb (bad) rorl (bad) (bad) jmpq (bad) (bad) in int3 sbb rex jge loope push fwait stos jb (bad) mov xor fnop add js icebp mov cmp jne (bad) fwait adc sar (bad) mov sbb fucom xchg jrcxz stos jmp mov mov add sbb callq and rcll mov (bad) rcrb out or add pop mov mov lret shlb jp (bad) (bad) xchg movabs sub xchg (bad) fwait (bad) adc cld rex.RB lods add jg jmp or popfq sbb (bad) mov and jb (bad) js sahf xchg xchg test or sub ljmp addr32 out xor lea icebp mov rex.WXB movabs and fwait sbb add (bad) fwait retq cmp loop sbb (bad) fldt cwtl jmpq jbe or cmpl mov fwait cmp add pop fstps rex.RX (bad) cli ds push out (bad) mov fwait xchg out push loope hlt (bad) (bad) jno (bad) (bad) add (bad) (bad) push fisubr sbb or (bad) mov roll ds (bad) mov or mov cs cmc xchg mov sbb movl (bad) fsubrp out rcrl (bad) in fcoms lret fistpll lock adc fwait cmp sbb divl mov popfq sbb jns adc pop rex.WRX xchg sub sbbb mov out rex.RX rex.WXB test movabs xor loop pop incb sbb repz stos xchg insb in and loop sbb (bad) mov int rex.XB (bad) push loop mov sbb jae movabs sti pop out pushq mov movabs pop sub (bad) fmull js (bad) xor pop bnd pop mov out (bad) push repz jle lods sti pop add and movl fwait mov repnz lret (bad) shrl fsts mov jnp fwait retq fcmove movabs ror jge jmpq (bad) loopne mov imul divl mov xor jns xor (bad) pop and (bad) cmc (bad) or addr32 ror outsb push (bad) int3 cltd jae xor lock je cmp jno sbb imul sbb add (bad) jrcxz pushq xor sub (bad) stos scas xchg fwait idivb fcmovnbe pushfq mov in (bad) or repnz mov xlat fsubrl pushq sbb scas mov fwait xor (bad) clc in movsl xchg or jbe pushfq sbb rex.XB jmpq push icebp sub lea cmpsb (bad) cmpsl (bad) notl jnp add mov (bad) xchg lock lret (bad) add out fwait xchg push imul xchg mov movabs shrl jp cwtl popfq jmp jmpq shll out or sbb fdivrl mov push movsb out sti roll stos jmp sbb sub fisttpll mov in pushq push fisubr cmp adc fwait cmp frstor adc outsl mov xchg fwait lret sub (bad) sub std xchg int and rex.RX rex.WX add sbbl cmp retq push mov cmp pushq add scas rex (bad) sti sti (bad) push out mov mov repnz pop fwait rex.WR in decl adc (bad) pop (bad) sbb out rex sbb cwtl adcl (bad) mov addr32 subl sbb imul jmp (bad) (bad) fwait or lods stc (bad) add fmulp xlat movabs movabs sub rex.XB hlt movabs jno sbb repnz test (bad) jne pushfq adc or jge sbb (bad) jb pushq and addl sbb (bad) (bad) (bad) movabs (bad) jae lahf push shufps mov push (bad) adc shl test insl movabs andb std pop rex.R bnd (bad) cmp fucom mov pushq iret mov cmpsl cmp and lret xchg xor mov rex.RXB scas jo xchg mov (bad) mov mov pushfq and data16 xor cld pushfq out and lret movsb (bad) movslq xchg pop mov and addl (bad) rcrl xchg add jo and mov test vpavgb cmp out stos jne (bad) fisttpl out sub cmpsl pushw retq mov cmpsl jbe push movabs push (bad) xchg test or rex.WB rex.RXB mov es retq adc test popfq push fisubl rex.RB push sbb std cwtl setne sbb mov (bad) fwait (bad) ss loope mov mov mov adc mov jae xor fbld incl jp sbb scas mov cltd fmul add cltd rolb cmp fstp sbb mov pop pop repnz fdivrl leaveq out ficompl (bad) pop (bad) rex.WB jg js sarl pushq mov fistpll int3 pushfq test incl addr32 (bad) shrl cmpsb xor cltd mov rex.RB pushq int sahf imul fimul nop (bad) pushq jbe rex.XB (bad) jbe cmp mov sbb (bad) fsts (bad) xchg loope mov rex.WRB pop adc xchg xchg lret or adc (bad) test sbb callq add cmc int repnz std sbb cltd or lods xchg rex.W cmp add mov (bad) xchg mov cmp rex.WX cmp pop jge out cmpsl mov data16 addr32 movabs loope ficompl imul (bad) (bad) lods fwait loop addr32 jle jle rex.X (bad) sub jl lcall test mov mov notb mov mov (bad) push retq in addr32 outsl sbb pushq (bad) js (bad) test stos sub outsb fwait int3 sbb rex.RB out fwait stos sbb add and xor (bad) fwait imul rex.WRX je (bad) rex fwait negl cmp and addb xor and mov rex.WX rex.WRXB cli fwait fs sahf rex.WR outsb (bad) enterq jmp xchg mov add shll pushq and mov out (bad) int3 lret adc jb fisubr outsl pop fwait cmpsb es pop xchg jmp (bad) mov movslq fwait (bad) bnd push add sbbl rorl out rex.B ss sahf sbb pop push mov (bad) jmp lret fcomi rex.B fwait jge mov out int jp xchg xchg imul xchg pushfq push lods xor cmp (bad) mov rcrl mov and fsubrp jp loope xchg cmp rex.WR rex.X in rex.WRX fwait push xor (bad) cmp (bad) icebp jmp sti mov int3 retq xor pop mov jb mov and jl or (bad) cltd rex.WRX movslq fwait mov fcomp sbb jl lret mov je mov xchg add and xorl cld fsubrs jne or scas sbb (bad) out (bad) mov and sub fwait xchg xor cmp mov add stos jb (bad) (bad) int3 test (bad) lret movl cmp jrcxz pushq fwait jbe rex.XB mov fwait test movsb mov mov jrcxz loop loope jb fwait sbb icebp sbb fwait retq sti (bad) rex.WR in movsl xchg jno adc cmp fwait out rex (bad) sub insb fwait ss xor push scas rex.WX fwait rex.RXB rcl sub fwait add mov xchg lret fwait (bad) (bad) jg (bad) (bad) jno in (bad) imul and out xchg pop (bad) jl sbb data16 (bad) loope xor push movabs fwait pop mov jg out fcompl (bad) fwait pop mov orl test add adc repz pushq mov jne xchg push jrcxz cli int (bad) (bad) push xchg pushfq (bad) insl (bad) (bad) adc mov pushfq rex.WR rex.RXB rex nop sub movabs add pushq imul rex.WB (bad) test fwait mov ja or xchg (bad) pushq xchg push cmp lods lea sti js jl fwait rorl (bad) cs mulb clc jrcxz pop sbb je (bad) out and jle std loopne fwait subl idivb (bad) adc xor sti lret push fisttpl jl int3 setnp pushfq xchg jg and pushq fiaddl jp test test jbe out add retq cmpb ja repz ds jmpq (bad) rex.XB rex.WXB sub fwait icebp div in (bad) xchg lahf negl hlt fistl fs mov icebp (bad) fiaddl mov fistpl pop add fwait (bad) adc and mov (bad) testb mov (bad) push pop push testl rex.RX rex.WX (bad) sub in (bad) (bad) divl icebp rorl rex.WXB adc mov mov fwait mov (bad) and add rex.RX fwait adc xchg pushq adc pop cmp shl mov pushfq rex sub jmpq (bad) (bad) and leaveq (bad) mov mov pop rex.XB cmpsl cmp shll in xchg jae pop cwtl cmpsl (bad) cmpsb cmp fdivrl ja retq je sahf (bad) (bad) shr in rex.RXB mov loop (bad) movsb loop callq fcmovnbe fsubrl pushfq xor fwait movabs and (bad) xchg and add iret (bad) callq (bad) mov sar xlat (bad) mov ja scas retq in jo add ficomp cmp mov rex.X adc adc jmpq fwait retq movsl xor rex.RX and outsl nop and (bad) jne idivl sub and mov xlat pop and sbb (bad) in mov imul fwait (bad) data16 add enterq adc xor mov (bad) clc mov rex.WRX mov ja cmc jg out jrcxz rex.XB outsl (bad) jl sbb rex.RXB mov adc out jmpq adc fwait (bad) xchg js lods data16 neg push fist movsl (bad) xor xor jmp add fsubs std out xchg imulb cmp movabs add and mov leaveq cmc hlt retq test outsl add fwait (bad) or (bad) cmovb lods stos (bad) cli fwait (bad) sbb push sbb nop (bad) cmpsl push lahf adc shrb add sub lret fisubrl incb lods (bad) (bad) enterq jrcxz outsl fsubs fwait (bad) push loope movslq mov (bad) xor fistl cmp lock sub mov in decb jb je and (bad) scas (bad) sbb (bad) sbb xchg stos and mov jae (bad) mov sub (bad) repnz adc rex.WRX insb cld retq hlt je push nop jbe addr32 mov roll xchg and sub out mov insb xor gs loop xchg xchg sarb lahf movsl test mov roll fwait fs repz es fwait jno (bad) push adc sub frstpm(287 (bad) enterq notl rex.XB (bad) in cmp cmp sub in fwait (bad) push scas clc xor fwait rex.X adc jae retq fwait xor adc (bad) cmc add fwait sub out cld rcrl lods mov mov (bad) add shll jno mov or lea movabs fwait pushq mov fwait adc (bad) or out pushfq mov sub stc data16 sahf or xchg sbb gs sti rex.WRX cmp rcr lret add push adc mov pushq (bad) push and (bad) add (bad) fwait pop mov (bad) cmp outsb sbb rex.X fwait (bad) push push (bad) sahf sbb data16 rcrl mov (bad) sbb pop (bad) fidiv fildl sub in fwait (bad) push jp xor popfq jns add cltd add xchg movabs (bad) rex.X rcrb rex.WX mov std mov idivl fwait mov and (bad) rex.RXB xchg and cmp popfq gs in xor push sbb cmp push loope (bad) (bad) sub and pop je fiaddl (bad) mov fstl xor lea enterq movabs (bad) mov sahf or sbb push (bad) xor fcmovnbe std mov lahf sub jmpq shrb sbb (bad) jb lods xchg jb,pt cmp (bad) sahf cmp jae movsb xchg mov (bad) je out icebp xchg mov (bad) loop jnp (bad) cli fs (bad) fidivr xor (bad) adc adc rex.RX rclb xor pop clc rex.WXB push test mov xor data16 fwait clc push repnz push push rex.X je outsb (bad) xor xorl push pushq jp add rex.WRXB rex.WRB nop movabs (bad) xchg rex (bad) (bad) fimull sbb pop retq stos cmpsb (bad) pushq (bad) (bad) xchg (bad) stos movabs popfw jmpq fcmovu or (bad) (bad) adc xor xor fs rex.XB lods xchg sahf rex.RXB cwtl xor (bad) (bad) mov and lea jp fdecstp jmpq rex.WX popfq cmp mov (bad) (bad) es shrl (bad) rex.X pushq xlat (bad) int3 rex.WB shlb rex.WRB add jge rex.WX xchg int3 rex.RB adc mov popq sbb data16 (bad) xchg cmp or mov fwait pushfq push mov faddl (bad) add adc rex.RX fwait in in (bad) lret xchg gs rex.WXB rex.RX adc ss movabs scas mov fwait jae fcmovne mov (bad) in pushq xor add fstpt outsb (bad) fwait movabs cmp lcall rol fsubrp sti fs cwtl mov adc mov movabs imul movabs fs sbb movabs (bad) rex.WRXB xchg stos rex.WXB (bad) movabs mov or pop notb jb (bad) push push imul lahf rex.RB cmp cltd jmpq (bad) push jmp (bad) rex.WRX cmc add (bad) lea pop pushfq or int3 or xchg imul stos rex.WRXB pop out jle (bad) mov insl ss (bad) pop out mov out and stos mov insb leaveq add xor loop ror in cmp or (bad) notl push movsb fistp xor pushq (bad) mov mov fmul and xchg or (bad) jbe rex.W xor es fcoms mov fs shl imul cmpsl icebp push out mov jo popfq jns addr32 callq and hlt cmpsl cmp addr32 movslq pop rex.WRXB cmpl adc (bad) test stos (bad) rex.WXB pop mov mov lret lret lods sahf fistpl add int3 (bad) repnz in pop loopne xchg push xchg cmp (bad) leaveq push negb xchg ss jae scas sti (bad) (bad) divb pushq popfq (bad) and rex.R je movabs sahf out push xchg mov orb pop sahf enterq (bad) test fistpl (bad) mov sub outsb adc shll jge xchg (bad) jle (bad) iret pushfq rcrl pop insb rex mov push and fiaddl xchg cmp sub mov sub rex.R cmp dec rcll cmc movabs xor pushq sbb (bad) sahf rex (bad) jmp mov and rcrl pushq (bad) out fwait cmp (bad) jle or mov adc jp (bad) icebp cltd (bad) js fmull sti test (bad) xchg in push pop pop sbb xchg std sti jg imul sub retq enterq (bad) (bad) (bad) xchg jns mov sub sti pop sub xchg xchg jnp push mov mov sub (bad) fstpl xchg notb movabs pushfq mov pop push mov sub out or adc xor jo adc mov mov insb cmpsl mov adc (bad) adc retq stos mov pop and (bad) mov rex.RB fwait callq fisttpl nop rex.WXB jbe jae cmp rex.WXB jmp fwait push sub pop or lahf cmp rex.RB xchg jmp and (bad) jge popfq loope rcll test fwait lods xor fwait jp cmp rex.XB sub outsb roll jo xchg xchg fwait in loope addb test int3 jns push (bad) (bad) rorl fwait cmpsl pop shrb (bad) mov fwait int movsb repz sbb leaveq (bad) mov sbb test add scas lea xor jno and (bad) fwait stos stc rex.RB mov fwait xchg push jmp rex.RX rex.WRXB sub jg test fidivl mov add stc loopne xchg sti push rex.WRXB lods fwait (bad) lock (bad) js fwait callq rex.RB fucomi add rex.XB retq jrcxz mov (bad) (bad) cmp rolb rorl test jne in and sahf or rex.XB cmp adc lods mov sbb jbe sbb ds fwait int3 movsb loopne pushfq xchg jl fwait lss lock in sbb add (bad) (bad) (bad) pushfq sub mov retq out jns sbb lods (bad) fdiv mov push fwait es rex.R fwait push repz fwait lods (bad) insb jbe push pop (bad) xor fistpl rclb mov scas and adc (bad) mov and cwtl popfq cmp (bad) rcrl mov fwait (bad) mov sub outsb jns jmpq movabs enterq (bad) in push sbb jae sub lret adc (bad) mov sar (bad) mov rex.WRB movabs xchg fwait adc jp retq ficomp jo cld push fwait cmp int3 insb fwait (bad) mov rex.WR imul (bad) jnp fbld movsb jb cmp cmpsb fwait (bad) rex.WRX fwait stos add imul jmpq leaveq cmpsl fisttp scas xchg (bad) mov out or (bad) (bad) xor lea lret (bad) lahf and adc movsl mov out adc rex.X and fwait stc ja xlat jle test rex.RXB (bad) hlt jo sbb sti adc shlb mov cltd fwait pushq jo fstps ficomp in fwait stos rex.WRB insl push (bad) in movsl (bad) cltd rcr xor mov rex.RX fwait outsl jbe clc loope adc fwait pop fs and clc in frstor int3 in out xchg (bad) cs push imull jbe rex.XB sbb cmpsb mov fwait rex.W rolb imul add fidivr and movslq iret mov (bad) rex.RX fwait sub movsl nop mov (bad) jb mov retq sub xchg mov (bad) and sti in (bad) adc imul mov loopel movsb (bad) sbb lret adc fildl push (bad) outsl fwait and (bad) sub fwait es xor (bad) and test (bad) cld cltd or lret rex.RXB xor xchg imul rex.WB rex.WR rex.WRB addr32 (bad) (bad) fs insl retq jbe mov rex.WRB mov sbb (bad) jmp pop (bad) rex.WRXB fwait rex.WR or fwait movsb rex.WRB mov xor rcl (bad) sbb imul mov imul lea sbb fs mov in sbb imul fwait jno cli (bad) mov loopne add mov fidivr pop mov (bad) in stos insl (bad) mov scas out rex.WRXB mov cmp mov fsubrs loope (bad) (bad) sub and js sbb add (bad) mov stc fcmovne pushfq test xor (bad) out push xchg movabs stc mov xchg rclb ficompl (bad) mov sbb (bad) fwait mov xchg adc jge fwait xor (bad) fisttpll rex.WRB sbb jmpq loop mov (bad) repz xchg lods iret sti push or mov pop cmp out add fwait jae test jns sub outsb (bad) cmpsb insb (bad) add xchg subl cs sbb fwait sbb ja and push stos jle imul pushq or (bad) mov fwait icebp stc mov fwait shll mov sub cmp fwait (bad) repz jmpq mov cmpb sahf je rex.XB and (bad) xchg sbb or sti lock mov fwait data16 loope insb pop or (bad) mov (bad) xchg pop cltd or insb (bad) cs sbb test (bad) push pushq jl fildll pop mov fadds lods je (bad) mov shlb loopne or ss (bad) (bad) pushfq pushfq sbb (bad) movabs (bad) (bad) and fwait sahf gs (bad) (bad) sbb stc enterq andb xchg add pop jrcxz jl fucomp lods add pop add jl fwait loop callq xchg (bad) push ss cmp pushq (bad) mov jns cli fwait insb rex.WXB sarb ds rcrl int3 fwait mov in (bad) cmpsl xor insb stos add (bad) sbb pushq mov adc fwait stos out imul rex.RX mov imul jg lahf repz (bad) pushq fcompp shl adc (bad) xchg xchg (bad) xor (bad) mov (bad) jnp jnp clc mov sub rex.WRB and movabs or scas xlat and sbb or adc push fstpt cmp cli insl lock (bad) iret rex.WRX mov fbld xchg and (bad) and sti cmp rex.WX xchg pushq sbb cmpsl fucom or pop imulb xchg rex.B mov cwtl (bad) (bad) (bad) (bad) in push push sub rex.W div fs (bad) fmull sbb adc adc jg or std sbb shlb in jae fs repz ds subl loope rorl add (bad) rex.X mov (bad) sarl sbb sbb and xor pushq jp (bad) (bad) fwait repnz lret sbb movsl jae rex.W rex cltd mov std pushfq jmp movsb sbb push mov (bad) xchg rex rex.W fwait jg imul (bad) xchg add cmpsl xor fwait xchg addb jmpq js loop outsb jae imul jns out or push fwait mov mov jbe movabs (bad) movabs (bad) rex.XB jle (bad) add xchg xchg cmp negl addr32 icebp sub cli jge fwait pop je,pt int (bad) mov mov (bad) test pop lret mov jo negb push and mov pop lock subl mov mov mov or (bad) popfq ss xchg ud2 stc movsl pushfq adc (bad) pushq mov sub mov (bad) stos movabs cld push jns sbb (bad) retq xlat negl and add (bad) pop xchg jbe std xchg mov (bad) popfq pop lods fistp jge nop mull int vpsrld mov int3 div push xor or divl repnz leaveq je clc loop popfq (bad) mov movabs shrl push retq data16 mov fidivr loope (bad) or cld pushfq ss rcrb mov sub (bad) adc or push ss adc mov or sbb sbb and cmpsl movabs (bad) fild stc sub sub (bad) loope (bad) mov nop rex.WRXB cmpsw test mov add push adc pop or mull (bad) add sub mov fs jns mov ror push jo adc (bad) outsb (bad) rcrl adc fist jl clc shl sbb jbe out pop (bad) pop test (bad) (bad) sbb xchg cmp mov jns pop loope es (bad) retq addr32 sbb pop jp std jmpq or test jmpq (bad) fadd jmp shlb (bad) fdivrl punpcklbw jle rorl fcmovb (bad) (bad) test sub xchg adc pop add int3 jnp movabs sbbl sahf xor add addr32 jrcxz push addr32 mov and test jo retq (bad) sub scas or sub scas (bad) (bad) (bad) lods stos add fsubl sbb loope cmp ficompl xor mov rcrb rex.RXB and movabs rex.WXB fwait (bad) xchg (bad) mov sti (bad) and imul sbb jbe mov cmpsb (bad) jae add pop xchg xor or mov (bad) cmpsl jns xchg fwait sub and lahf jmpq mov leaveq hlt adc add (bad) adc cmpl add (bad) jae sub xchg cmp imul cmp (bad) jg,pn fwait mov pushq pushq popfq or adc rex.RB (bad) loopne rex.RX fisttp sbb movslq cli loopne imul (bad) xchg push add jae clc lea xchg mov sub xor rorl (bad) and cmp mov adc stc pushfq out in out mov xchg jl (bad) test rex.RXB push loope xchg sbb jg mov adc pop iret sbb pushq jnp (bad) ss xor fsubl fidiv jmp fldcw rex.WX rex.WXB ds add xchg jg lods adc jnp mov xlat or adc and out sbbl repz iret rex scas cmp mov mov (bad) (bad) lods rex.WR (bad) (bad) pop (bad) in xchg fwait xchg add fwait and fstpl xor sahf or fwait (bad) std lahf rex.RB sti (bad) in test jle jb add cmc pop sbb lock sbb fldt cmp (bad) sti outsb sbb mov test movabs leaveq fwait (bad) jb rex.X mov rep fildl test mov mov mov mov xor int3 fisubrl push test mov addr32 fwait movslq mov cmpsb cwtl or insb add (bad) xor (bad) sub (bad) divb int rex.XB push jrcxz xchg (bad) add add repnz scas nop xchg rclb (bad) adc cmc (bad) fwait mov xor rex.RB stc fwait retq lock pop or add sbb test and xor outsb fistpll fwait mov and cmp mov sbb (bad) pop (bad) pushfq sbbb gs in rex.RB sub in fmull fildll or movsb mov popq retq (bad) sbb cmp fidivr (bad) hlt sub fwait pop pop cmp stos xchg rex.WRXB push sti fiadd mov mov xchg fbstp mov add (bad) int mov in mov (bad) (bad) mov or rex.WB rex.WB rex jmpq fwait mov jb mov in fwait sbb (bad) mov in mov es insl pushq cmpsb cmc jmp xchg fwait sub movabs outsl int3 pop mov fcom fwait cld rex.RX or pop mov adc clc fistl rex.RX imul fwait movsl retq ss xor mov fistl fwait cld retq rex.WRXB rex.RB fwait movsb adc xlat fwait in hlt mov sub (bad) jp retq stos ss sbb (bad) ss pop sbb mov cmp fwait (bad) stos cltd subl xchg je mov push movsl xchg fwait jbe mov scas (bad) fwait andb or or (bad) decl rcrl sbb mov fldt cmpsb push popfq cltd pop mov repnz mov lret xor sbb (bad) lock and in outsl fwait jno cs fwait cwtl or fxch (bad) sarb rex.WR fwait rex.B fwait lock icebp xchg (bad) rex.RB repnz (bad) sub ds (bad) sti pop movabs xchg rex.XB mov sub cmp rex.WB shl popfq imul mov mov fwait lret out fnstenv rcl jne sub mov rex.R add mov repz mov test negl ja (bad) fwait data16 or mov xchg fistl mov or pushfq pushq enterq cltd sub in (bad) push sbb or rex.XB xorps retq rcrb fcoms clc xchg sub lret xchg (bad) mov jb loop cmp push rex.W (bad) cmpsb pushq or scas fild movsb sub mov jns retq jmp adc in jo sbb push rcr sbb andl insl (bad) pop flds xor out movsb pushfq rol cmp add cmp push rex.WB (bad) sbb adc mov sbb and ja outsb fwait (bad) adc pminub rorb int loopne xor (bad) cltd imul insl popfq fwait mov rex.RXB jp movabs add sbb or xor add (bad) pushfq sbb stos adc jbe nop test stos mov loopne mov and (bad) jo or push mov outsl popfq sarb (bad) in sti retq rex.WXB enterq (bad) fwait popfq orb sti add xlat cmp xchg xchg pop (bad) mov loopne (bad) rex.WRXB mov rcll cld test fwait shr xchg int3 (bad) imul sbb loop jns (bad) cld add (bad) (bad) jmp mov add xor rex.WRXB fcmovbe jno je sub fistpl (bad) fstpt pop fwait push lahf and callq imul out stos cwtl and xor fildll (bad) adc and add stc (bad) or rex.WRX retq fwait (bad) xlat (bad) sbb fwait testl in pop stos out adc gs pop cmpsb fwait cmp rex.WXB lods setl mov popfq jns (bad) vpsubd retq push addr32 or (bad) stos (bad) or hlt jp movabs ja adc (bad) (bad) rex.WRXB fwait popfq movabs pop mov in xchg sub out sub jge cltd (bad) pop callq xorb push xchg rex.B fwait xor adc fwait lock (bad) lea push push cmpsb cwtl orl sbb fcmovnbe pop fidivl mov sub in cltd js cmc sbb fwait mov adc mov cmp or xchg jno psubw pop (bad) (bad) add int3 cmp (bad) xchg xor adc cmpsl mov in (bad) push add (bad) movabs add sub rex.XB mov scas xor push and mov mov hlt pushfq fwait add (bad) jbe fwait or mov and fwait cmpsb loope insl xlat sti cmp enterq pop or jbe loope callq add pop jb and insl out (bad) xchg stos xchg (bad) (bad) xorl mov iret pushq lcall (bad) sbb or fwait loope (bad) mov xchg pop (bad) (bad) sbb (bad) fstps xchg rex.XB add loopne callq push sub iret (bad) ss rex.WXB addb lret lea sbb (bad) jmp popfq add and fwait repz insb std and fwait mov adc xchg rex.WXB fsub outsl sub fwait data16 xor out sbb and sbb out int jns ficoml fwait movabs (bad) fwait mov xor pushq (bad) jl jnp (bad) fisubr fwait jp rex.WRXB sbb adc xor or rex.B (bad) mov out xchg test push rex.WRB add (bad) xor push mov cld sub es jl jle mov sbb out cmp fwait fs (bad) (bad) push rex.RB fwait ss mov popfq mov setnp xchg jg fwait insl and add push pop mov movabs out rex.WRB xchg (bad) mov nop (bad) icebp repz (bad) out fwait sbb jns jmp sub cmc (bad) mov xchg fwait (bad) jl xor fwait jb es xor pop (bad) sbb xchg std rcr mov rex.X repz in pop fwait add (bad) or rcrl xchg cli (bad) rex.WB cs xor mov fstps retq jne mov push and fwait xchg fcomi sahf (bad) rcrl (bad) outsl scas test rex (bad) retq (bad) xor out in es push sbb (bad) fdivl rcrl rex.X enterq divl and xor ss cmp add (bad) (bad) clc (bad) loope rcr cmp mov sbb and (bad) callq cmp (bad) movb xor rex.RXB sbb jrcxz repz fdivl pop mov loopne (bad) push xlat jbe cmp out fisttpll rex.WX pushq subl adc mov incl (bad) psubusw pop fdiv and xchg sbb pop rex.WB fist (bad) push popfq rex.WR rex.WX cmp loope insl pop jo sti mov fadd mov cli push mov movb and xchg and cmpsb adc pop outsl (bad) jmp and in jp or pushq rex.WX fwait pop jl cld repnz fimull fwait push (bad) sub fwait rex.WX pop mov repz fwait mov xchg or stos pop and jg mov mov repnz mov cwtl sbb rex.XB fnsave (bad) ficompl fcmovbe (bad) mov imul movsb and sbb push jo cmc movabs mov fwait popfq mov cmp lret (bad) in not sbb jmpq rex.WRX rex.RX cs rex.WRXB popfq or imul mov cld (bad) andb jo or scas cmp in xor push jo xorl sub mov rex.R es and cmp andl add ja mov icebp leaveq jle insl add (bad) fdivr divb shrl xchg (bad) push (bad) mov cmc (bad) lahf sbb sahf mov (bad) cmp jp shrl hlt pop cld cmp sti (bad) loope rex.R rex.RX jae out mov rex cmpsb mov stos bsr (bad) rex.WRXB rex sub xchg in rex.B push add (bad) popfq cmp rex.WX (bad) hlt lret mov jmpq rorl pushq movabs adc sub ds je cld rex.W xchg in and and frstor in or imul addr32 sbb (bad) idivb sub xlat mov jne (bad) or cmp jno mov cmp int js (bad) jno or adc mov pop adcb pop fmul rorb mov pop jle jno mov cltd rex.R (bad) fistl (bad) jbe popfq addr32 movabs rex.B mov (bad) pop (bad) sbb rex.WX ss int3 out xchg rex.R mov andl xchg sbb in pushq pop add or test (bad) add test add pushq (bad) fsin xchg shlq sub ds push cmpl rex.XB rex.WX xor mov retq out pushq movabs sbb (bad) (bad) cmp cmp out (bad) mov jo repnz (bad) rex.R mov clc xchg and jmp add movsl imul callq jb loop stc retq out jle popfq mov cli out pop jmpq cmp cltd sub jmpq jno sbb jb ja sub lret xchg std test jge jo callq (bad) movslq sub sbb rex pop (bad) push mov sbb popfq fistl pop int3 jmpq lods xor movabs xor (bad) pop sub xchg ds mov cmp (bad) mov (bad) cmpsl sbb rex.XB leaveq pop sbb (bad) (bad) cmp cmp (bad) push lret cwtl (bad) cmp pop sub sub sahf rex.WX sbb nop (bad) rex.WRB jae jne (bad) neg scas pop jnp jo sbb sbb cmpl add imull clc rex.RX popfq lock rex.WR and and (bad) data16 sub mov in (bad) sbb xor in int fildl retq (bad) xor xor or jo jmpq enterq jl stos (bad) icebp rex.R xchg (bad) (bad) movabs stos in movsb or data16 jle loopne,pn rex.WXB outsl xchg adcb or cmp fs sahf rex.WRXB and sti subb add xchg pop lea (bad) imul out (bad) imul jge rcr mov mov sahf rex.XB addr32 movabs ficomp jp xchg out (bad) (bad) (bad) pop pop nop mov add retq mov cld adc je sbb lret mov ds mov sub (bad) retq xchg (bad) xchg rex.WB jbe jl retq fwait jl push in (bad) add gs out out (bad) jnp fwait mov xchg test xchg movabs fwait cmc jg sbb imul sahf sbb lods fdivr (bad) jno jl in jle scas mov movsl in imul and (bad) (bad) fwait add sub (bad) imul sbb jmp test pop sti popfq xchg movsb add lods sbb jno xchg or mov sbb (bad) pop and sbb nop je and mov retq pushq fwait sahf (bad) rcl (bad) pop retq (bad) xchg in pop int fwait xor callq (bad) (bad) movabs or lea fimull (bad) out and movabs (bad) xchg movslq lcall lods xchg sti cmpsl sub retq mull pop test jnp (bad) (bad) cwtl add iret push retq push xchg add mov (bad) xchg std xor sti xor (bad) or js movabs pop pushq jg cmp leaveq sbb (bad) sub fwait xchg and fwait lea lods test (bad) enterq fsubr mov jo (bad) mov mov push rex.RB rex.RB rex.WX sarb pushq lods loope rex.RB out fwait lock pop fwait movslq test (bad) sbb or (bad) lock insb shlb mov mov ss add pop insl fwait pop rex.XB pushq ss scas (bad) push fwait je (bad) jle leaveq jo cs rex.RB lret loope cltd mov enterq mov addb lock (bad) sub mov (bad) clc cld or (bad) sti test stos fwait mov jne mov in and fwait insl sub pop xchg es fs add callq mov (bad) push (bad) movsb (bad) in jno (bad) rex.R rex.RB fwait mov in (bad) xchg sahf ja push mov cs jbe out fnstsw fwait mov and sub out lea jg (bad) retq sar imul imul cmp (bad) cltd cmc nop jp add adc xchg jmpq sbb jae jg test roll sahf sahf push and popfq (bad) jne sahf in and xchg xchg push (bad) in mov pop jg fldt callq rex.WRX outsb fnstenvs jle xchg xor sbb cmp mov cmp cltd (bad) rex.R (bad) js (bad) pop data16 popfq sbb jl mov in adc rex.XB shl jge iret pop adc mov movslq imul leaveq outsb rol xchg sti mov fdivl in (bad) (bad) in xchg xor lret jg pop fbld mov or mov mov and addr32 stos adc (bad) shll repz (bad) jnp clc mov push addr32 in and xchg (bad) sahf repz xor mov jb push (bad) callq enterq mov cmp xchg rex.WXB flds (bad) lret stos xor add jl jmpq mov xchg (bad) sti cmp rex.WX callq cmp (bad) insl in hlt in (bad) fist (bad) and out (bad) rorl sub roll push loopne jae iret outsb (bad) movabs jmp fcoml rorb lret mov jns (bad) fwait xchg vshufps sahf mov xchg adcb fwait retq pop and pop (bad) fwait cmp or fwait movabs xchg pop (bad) rex.WB shrl test hlt fwait pop js (bad) es push fwait rex.RB (bad) push movslq rex.X adc pushq sbb fldt out sbb sub scas push insl movabs mov clc out fildl jp xchg mov imul jo push lret (bad) (bad) rex.WRX push insl data16 fwait lret imul retq gs pushq fwait mov (bad) std sbbl fwait mov (bad) sbb push gs sub jns ja rex.WR mov cmp rex.RX xchg cltd xor mov repnz (bad) add adc sub lret ja sbbb mov and vmovddup and popfq (bad) (bad) pushq lret rcrb imul add test pushq (bad) or pushfq popfq pushq fsin push (bad) jge gs jle mov loopne (bad) jge loope xor stos andl sbb and rcrb test popfq jp xchg (bad) or or mov mov mul nop fwait jl push jmpq fwait movabs repnz rex.R rex.WR fistpl mov roll (bad) fwait outsb lods (bad) (bad) sub push fwait and add rorb cmp fwait (bad) cmpsl rex.WX and (bad) pop lock mov rcrl rex.RX mov fisubl callq or or nop stos xchg mov adc adc cwtl ja mov mulb xchg movabs leaveq sahf mov push out xor in add fwait scas divl js popfq add jrcxz xor mov rex.WR int3 outsl shr sub (bad) (bad) and stos fwait mov mov cltd imul fwait pop (bad) test mov jnp (bad) xor cltd mov in xchg add fwait sbb xchg mov adc cmp (bad) sbb adc addl jrcxz sbb loopne insb jne and rex.WR gs or sub (bad) add or movabs sar nop movslq (bad) fdivl xchg fsubrs pop (bad) rol pop fildl cmp sbb cmc sbb mov sub bswap (bad) jl add rex.WRB test jo jns cmpsb sbb mov gs sub sbb mov cmpsl repnz out nop (bad) out cmpsb data16 movabs add repnz movslq js mov (bad) int (bad) rex.WXB fwait mov push sbb stos (bad) (bad) (bad) enterq cmp sub repz dec fwait ss (bad) lret js sbb xchg fildl pop rex.RXB lret or xlat imul push shrb cs jle add and xchg fwait jl pop and jns insl fwait lea in push sti (bad) out cltd out pop fwait test xor (bad) xchg cld or (bad) lret fstps xchg test fistl sub mov sarl lret rex.RXB (bad) jmp mov sbb loopne jrcxz je sahf stc (bad) rex.RXB (bad) add xchg retq lret ja push mov push (bad) (bad) movsb or fwait imul sti add idivl es sub jle rex.X cmpb fwait adc jb mov leaveq incb rex.XB shrl add jrcxz fwait cmp jae fidiv cltd add cmc rex pop rex.X jmp fcomps insl fstpt sti scas stos cltd (bad) mov lahf (bad) fwait rex.WRXB rolb xor mov (bad) sbb sub mov rex.X cltd fwait adc pop or retq (bad) (bad) in nop test rex.WRB (bad) jo in stos pop (bad) roll adc retq rex.X sti add and fistpl mov push sbb push cld xchg repz int sti sbb (bad) pushq andl in pushfq xchg mov sbb cmpl and fwait (bad) jmpq loopne and rex.WRXB pushq cmp (bad) fistp and add xchg xchg sbb in mov mov mov outsb fwait (bad) push shl jae jp sub por add mov or rex.W pushfq sub sbb xchg cmpsb xlat adc cmp jmp (bad) nop in popfq add fcompl fisttpll mov pop enterq es in fwait xchg in stos je sbb notb popfq sbb adc rex.RXB test or add (bad) adc xchg lret movsl in (bad) pop in callq (bad) cltd stos test xorb clc es mov xor mov rex.WXB test out push (bad) sbb rcrb (bad) jp rex.WRXB es lret (bad) sub insb out (bad) out fwait xchg pop rclb cmp movabs mov cmp adc and (bad) rcrb and sub movsb add sub fcomip (bad) fucomp (bad) mov or leaveq sti add (bad) or cmpsb test shlb cmpl push (bad) movabs xor sub sbb lret (bad) fimul pop add cmc lods (bad) rex.WX rex.WRX movabs in (bad) cld rex.RB clc xchg retq sbb add cltd (bad) movabs add jne xor rex.WRXB fsubl (bad) xor sbb sbb imulb rex lods cmp jl (bad) mov or and test movabs cmp (bad) fwait jl insb mov jno or loope xchg mov add stos fimull (bad) imul lahf ja fs cmpsl pop test (bad) sbb mov fwait sub jg leaveq or jge sbb movabs in fwait jnp jns jmp push fwait mov ss ja adc adc scas push pushq fdiv mov fistpl add mov adc js cmp mov mov sbb mov mov xor out fwait and rex.R mov xchg xchg scas add nop add (bad) rex.X rex.B fwait add sbb (bad) sbb sarl rcr (bad) and data16 adc sbb hlt mov sub loopne orb mov sub loope xchg and movabs mov adc add int3 rex.WRX in iret rex.RXB rex.X repnz push mov jg imul pop enterq fwait callq (bad) mov fwait mull pushfq jmp cmpb outsl jbe or xchg xor cmp xor sbb or mov mov fwait xchg rex.WRXB vfrczsd cmp loopne cmp scas adc orl fisttp (bad) setnp scas pushq imul and data16 fwait jo sti xor pop lahf cmp push (bad) js add (bad) fwait mov (bad) loope and pop lcall rex.WRX jmpq movslq fwait jno pop testl adc cmc xor lods in sub or mulb push mov lret rcrb leaveq cmpsl xchg fwait cmp in scas scas jb sti cmp movabs in pop cmp shll cmc fptan xchg sahf rcl nop movabs mov ja jmpq add xor rex.WX rex.X rex.XB and nop cltd enterq add push mov (bad) mov fwait mov xlat or cmp or ds (bad) fwait rex.WX clc fwait pop (bad) rex.WRXB cwtl adc (bad) fwait (bad) (bad) mov xchg xor fwait cmc orl rex.XB in jne sbb rex.WR (bad) xor pop rex.WB es sub movslq adc fwait adc lret push pop add sbb fdivrp pushq ds jne add xlat jrcxz out mov pop cltd sub sbb and and and or mov jae (bad) xor or (bad) addr32 out adc pop cmc xor (bad) mov addr32 shll cltd cmp pop rex.XB es lahf jrcxz pop rcll cmp jo in xrelease rex.X movslq or data16 leaveq push loop mov insl jo test cmpsl loope (bad) sbb mov hlt or mov fwait sbb fsubl outsb (bad) lret rex.XB movabs push fwait rex.WX scas and jg xchg fwait sbb movslq pop sbb rex.WXB repnz add scas adc in jae sti subl mov rex.RXB rex.RXB lock (bad) (bad) shrl outsb fwait imul repz rex.WXB movabs adc (bad) xchg or mov sbb (bad) (bad) mov and sbb mov stos (bad) (bad) xchg rex.WB cwtl adc fwait (bad) jmp rex.W jp jrcxz rex.RXB rex.WR repnz (bad) (bad) incl je xchg fwait add stc negb adc movsl jne mov (bad) add mov sub (bad) jbe jb fildl (bad) sbb fcompl mov enterq retq sub rex.XB fwait (bad) ja callq add xchg (bad) retq sbb mov (bad) nop lret sbb out sbb rex.WX rex.WRX cmc insb add (bad) mov jrcxz (bad) ss repz (bad) cmp pop subb movsb rcr (bad) cld loope or (bad) fwait ror jo and mov out rcrl adc ficomp fwait jge (bad) xor sbb (bad) mov mov stc rcl sti (bad) or push sub fwait mov and adc es and mov fwait movsl fisttpll (bad) push pushq rex.WRX fidiv or cwtl cmp xchg pop int popq out (bad) movsb cmp or fwait mov leaveq cltd int3 adc rex.RXB rex.RX rex.WRX retq int movabs or (bad) rex.XB add rex.WX popfq xchg sub (bad) ror (bad) mov lods xor rex.WRXB fisttpl gs jae iret (bad) push movslq pop (bad) push cmp (bad) sub mov or out (bad) sbb cmp sahf sub mov (bad) cmp mov cltd movups retq je adc xchg subb mov fild lods sbb mov pushfq and (bad) xor jp xchg sahf sbb roll nop jno cmp sbb test loopne rex.WR or sbb stos mov pop push es cmp push retq mov fdivrl sbb (bad) jbe cli stos and fwait repnz or and mov xor cmpsb jb xlat lret sbb es mov sub jrcxz movsl sti cmp and (bad) out clc xchg adc push movabs sbb (bad) sub or clc hlt data16 ja sbb movabs fwait cmpl lods insb push sbb or fwait sbb divl (bad) jae and iret adc test fisttpll (bad) and xor fs xor sub jae rcrl addr32 rex.RXB mov repnz cmp cmc mov adc (bad) (bad) pop pop pushq (bad) (bad) cltd (bad) movabs jbe callw rex.RXB stos mov pop in out jmp (bad) loop and sbb (bad) or xchg outsb in frstpm(287 (bad) ffreep fwait popfq scas xchg xchg (bad) ja addr32 xchg orb stc rolb idivl (bad) lock (bad) (bad) fs out loopne jmp int (bad) test (bad) cltd (bad) std add popfq (bad) mov comiss mov in loop mov mov addr32 mov (bad) (bad) mov in mov fldl mov (bad) pushfq (bad) adc movabs sub jne mov repnz pop popfq loope cmc fistpl rex.WB lock fnstsw (bad) mov (bad) notl pop shll or push ja int3 rex.WXB (bad) rex.WR rex.WRX sub fmuls (bad) jle imul jns fs (bad) (bad) outsb rex.WR (bad) xor rorl push xor jmpq cmp out push jl pop add push xor mov fisttpll xchg lret in (bad) xchg (bad) (bad) retq pop rex.WXB (bad) callq test fidivrl je rex.RX clc mov xchg or stc (bad) or scas ds sbb and pushfq in clc rex.WRXB jns ja fistp fsubrl pushq rex.RX icebp mov mov loope callq sbb jb rex.W enterq cmc or jbe std sub or mov mov addr32 cmpsl movabs (bad) or je or and loopne sbb push and test in outsb fcomps (bad) icebp add movabs sub lea mov retq jbe (bad) std (bad) mov rex.WRB int (bad) xchg jbe loope retq sbb out mov notb mov movsl (bad) imul xchg stos test pop fsub int3 retq test addr32 sub int mov (bad) adcb fwait jg rex.XB fistpl hlt repz fwait (bad) mov nop loopne (bad) cmp outsb fwait int and xchg sbb retq movabs jmpq pop rex.WX xchg sbb jp fwait jbe push loope icebp (bad) (bad) fwait js sbbl fwait sbb cmp lret xchg mov sub (bad) pushq fmuls push xor test cmp xchg mov clc add fildl add xchg jb add fcom cmp xchg ja jmpq out jns addb and lods rcrl movabs retq loope stos and int (bad) gs xor xor rex.RX cld push cmc lods movsb popfq fstpt jb popfq cmp (bad) pop sbb jns clc (bad) cmp sbb rex.RB in xchg stos callq sub pushq ds rex.X mov xor rex.WXB loopne rex.WXB xchg in xchg sarb jno rex.XB loope sbb and sbb repz fnstsw andl push push clc jnp sar rex.WRXB push and rcrl cmp rex.RX (bad) std int scas pop jmpq or mov sbb xor sub xlat shrb pushq pushq (bad) push or sub (bad) xor std test test xor gs xchg cli mov addr32 rorl or jge push (bad) xchg lahf (bad) (bad) xchg sub mov out (bad) sbb jle fsts (bad) je xchg lock ja jmpq mov cmp (bad) rex.W rex.WXB ss rex.WRX (bad) lock (bad) fcompl (bad) sub sbb test jbe and add xor pop xlat jbe xlat pushq push jle int rol (bad) xchg cmp jb add (bad) std mov retq sahf in outsb xor (bad) fs hlt xor (bad) enterq jne sbb mov cltd cmc loop in mov pushq jle stos jmpq (bad) mov mov rex.WRX mov out loop test jbe movabs loop out rex.WB (bad) xchg (bad) jge sub imul out (bad) (bad) insl test cld sbb in pop sub jnp jmp sub pop pop mov mov cmp fucom mov push jge pop test rorb xor jb imulb xchg cmp (bad) pop and sbb scas rex.RX rex.XB callq or fs movabs (bad) fs (bad) iret or rex.WRX (bad) rex.WX lea or cmpsl (bad) sbb cwtl add loopne sti mov je mov push xor push mov pushfq out xchg test movabs mov adc ds mov (bad) jge and pushq int3 mov pop push (bad) (bad) (bad) mov (bad) mov shlb addr32 push mov mov or popfq jae (bad) pop lods loope xchg cwtl movabs mov (bad) rorl (bad) cmp pop in cmp outsb popfq pop movabs pop pop (bad) (bad) sbb lret rep jb pushfq push iret out cwtl (bad) clc mov pop mov add (bad) cmp and or mov xchg mov fmull sti jae je insl shrb pop movsl rex.WXB rex.B sbb fucomip jnp jg rex.WRXB stos addl std adc push adc push fwait xchg out sbb xor add or sub xorl (bad) or (bad) out fsub scas and lea xchg fwait rex.WRXB pop adc callq movabs sbb sub fwait (bad) push (bad) push movslq mov out fwait shr fs xorl jmp fwait cld (bad) int movslq in enterq and test (bad) jnp jg rex.WRXB add xor push ja jno xlat jrcxz pop (bad) out cltd add (bad) movabs (bad) fdivrl std jnp fsubr rcrl rex.RXB jg (bad) cmp pop stc test in jbe add add or jle lock adc sbb int mov rex.R cli fwait in xchg xor (bad) mov movsb push (bad) pop fs add fwait leaveq push and out test (bad) int movabs or cmpl sbb xchg leaveq mov xor sub fwait pop rex.WRB outsb (bad) jnp fwait add jno rex.WRXB repnz repz add sub sbb or jg (bad) (bad) mov xchg repz (bad) cmpsl lea fwait iret ss fsubrs cmp push mov rol retq xor stos vmload xchg pop sbb mov adc push data16 xlat movabs rex.WRX rex.WRB sti or mov mov fwait scas rex.WRX cmp push rex.WX rex.XB cltd (bad) jp jne popfq loope fwait movsl pop loop rex.RB cmc add (bad) (bad) negb xchg fistp (bad) rex.WB js (bad) adc jmp orl xchg or xor sub add cmp movslq callq (bad) callq sub jge push (bad) xlat rex.WRB xorl jrcxz movsb pushq add sub mov mov rex.WB cs outsb xchg pop push jb loope iret lea xchg sti scas outsb sub loopne fwait out enterq xor movslq movabs jnp (bad) adc sub fistpl fmuls mov pop cmp movabs xor movsb mov adc add fidivl (bad) mov sbb movabs xchg outsb mov mov fnstenv notl adc sub sub fwait (bad) (bad) retq (bad) (bad) fstpl test ss sbb pop and mov std cmpsl fmull mov fabs rex.RB or jg pop loop cmpl icebp xchg sahf rex rex rex.WRB sbb lods out fwait (bad) jmpq out fwait xor sbb (bad) ficoml fwait mov lret cltd enterq fwait insb sub pop fwait nop (bad) test pushfq sub adc sbb fwait mov adc (bad) pop out sub mov (bad) mov jp pop sahf sub fwait out or rex.X rex.RXB repz pop push movabs (bad) jrcxz adc retq adc sub lret rorl push mov (bad) adc jns push push jns jae lock lods mov ja jne outsl xor mov stos cmc js fwait adc cmp repz (bad) (bad) mov pop gs sub cmp push (bad) fwait (bad) movabs adc mov xchg je sub mov jmp stos sbb xchg (bad) (bad) push test movabs movabs in rex.WB mov (bad) mov rex.XB divl rol cmpsl iret (bad) adc fstpt pop rex.RB fwait stc (bad) imul mov mov or add mov cmp enterq std test rex cmp inc xchg add int3 and test fwait rex.WB xchg xor sub testb repz sub (bad) (bad) (bad) stc mulb (bad) sub add int sbb adc out sub xor movslq mov stos rolb add rex.WB out callq icebp insb movsb rex.RXB faddp mulb js sti cmp rcrl sti movabs out sub add pop sub (bad) movabs (bad) (bad) out mov jno add (bad) sub cmp xor or fidivrl repz cld rolb sub xor roll rcrb pop (bad) and jl cmp and (bad) jrcxz icebp fwait movsl mov cmp cltd lahf xor mov shll mov push (bad) lods mov sbb xor and pop add cmp vmovdqu or retq stos cmpl cmp ss pop hlt fwait pop push retq pop rorl pushq adc add add jp cld sub scas mov (bad) push (bad) rex.WX jle mov fstpt push (bad) imul rex.XB ficoml (bad) movabs (bad) jle rex.WRXB lret movsl imul mov cmp cwtl (bad) mov imul fwait (bad) jg pop test and fsub (bad) rex.XB insl adc rex.RXB pop push (bad) sahf add repz jge xchg (bad) fwait mov leaveq jno enterq sti (bad) js retq sbb mov repz mov out mov jmp rex.WX (bad) xchg imul fwait cmp jo jle and incb mov fistpl sti (bad) shll hlt sbb imul cmpsl (bad) scas cmp (bad) mov sbb jmp mov jnp mov mov xor push (bad) add fmuls xor rex.RX (bad) push (bad) (bad) movabs sbb movslq es popfq rex.WX lods sti add jg and std adc lret in mov xchg fwait xchg fdivrs or mov int (bad) test (bad) in cmpxchg fwait jge mov xor (bad) mov xchg fwait scas xor push pop add in xchg rex.WR hlt sbb add mov sti addr32 push xchg (bad) sbb mov scas clc rex.XB rex.RB fwait imul popfq jg mov (bad) xchg and rex.WB mov sbb (bad) sub (bad) test rex.X sar rex.WRXB addr32 sbb fisubrl enterq mov xchg (bad) (bad) xor rex.WR fwait xchg mov sbb nop mov (bad) (bad) popfq outsl adc lcall push rex.XB rex.WRB ja scas mov add lret rex.X rex.WR sbb or jg jmpq fwait xor insb (bad) mov lret sub je xchg mov sbb (bad) (bad) mov (bad) fldt or mov sbb pushq repnz pop imul ds pop int movabs xchg xchg mov fwait push repnz adc fwait leaveq rclb jp adc rex.WXB sub sti je negl insb adc rcr in insl rex.RXB xor rex.WRXB rex.RX (bad) popfq popfq xchg sbb add jge retq callq sbb or fwait (bad) (bad) out cmp rex.XB mov sbb add jp rex.WB fs mov subl scas jae (bad) movslq cmp callq rex.WRB push pushfq xor jrcxz mov stos mull xchg icebp sub sbb xchg jge sub idivb ss fldl cwtl iret add rex.WXB ficompl (bad) (bad) (bad) jbe jg jp cmp (bad) sbb test fwait xchg je push popfq mov fstpt in cmc rex fwait iret jne orl pop or sub pop hlt pushq xorl cltd insl retq adc mov cld pop fcmovb mov xor (bad) imul pop push hlt cmp cli or xchg sbb loop pop xlat (bad) and scas int push ljmp mov (bad) push pop fistpl rex.WB add sub fwait (bad) test push cmp movslq pause (bad) fldt lock cwtl movabs jo (bad) mov (bad) repz mov (bad) callq rex.XB es loopne loopne popfq stos or loop fistl adcb sbb sti mov rex.WX sub cs popfq add sbb test repnz in in (bad) sub add rex.X out roll sti callq cltd and mov fild test movsb rex.WXB jle lea test (bad) fwait adc outsb mov jrcxz fwait insb pop and xchg imul cmp or pushfq add sbb subb rcrb pushfq mov jrcxz mov jmp mov (bad) xor rex.WRX (bad) fwait xchg clc cmpsl movabs cmp fwait data16 lahf xchg fwait jmp rex.WX push pop orl and adc rcl cwtl sub jo cmp jrcxz xor sarl rex.WR in mov fwait (bad) cs fs shlb mov mov iret mov (bad) ror add rex.RX out (bad) stc fdiv fwait (bad) stos xor rex.X movabs (bad) pop xchg and mov (bad) shr fwait movsb and and add fwait pop (bad) jmpq stos (bad) stc rex.RXB mov or out sahf enterq sbb mov mov in sbb jmpq lods jne cmc fs fwait loope cs cmpsb scas sbbb sbb out (bad) sub pop test fs movabs std (bad) xchg insl xchg (bad) and sbb in (bad) and fwait bsr sbbb je mov callq fwait sahf xchg sbb (bad) lret sti rex.WRXB push fwait add mov fwait and sti lods fwait push pop add imul fwait ja insb cli int3 mov retq out sbb cld sbb fwait pop jno in and fldt lret cmp fwait cmc (bad) cmp pop pop xor fildl fisttpll and fcoms movabs fwait in rex.R leaveq out sub jrcxz xchg ja rex.X pop out push jp repz fs fwait addr32 push fmulp (bad) adc push sbb (bad) sub lock (bad) cmp rex.X repz int3 add clc movabs add (bad) rex.WRX sub jae (bad) cmpb mov fwait lret (bad) int3 enterq xchg lods xor fstpt mov add jmp adc hlt sbb retq retq cli sub (bad) stos out adc adc imul jmpq (bad) mov rorb rorb movabs mov mov xchg test sti sub fbld test adc rcrb subl in and jne out fcomps sbb cltd rex.B mov (bad) pushfq or repz sbb callq and fwait mov jmp jo (bad) jle insl pop sub sarb popfq (bad) sarl pop callq mov insl in stos fwait pop mov shr lahf or push mov lret sbb sahf ds xor xchg imul fdiv pop scas in enterq and add or sbb mov (bad) xor enterq testl jmp (bad) es movabs imul rex fwait retq test jl cmpsl (bad) out xor rex.B and callq jg nop and loope cmpps sbb lea pop adc (bad) popfq (bad) (bad) int (bad) cld mov fwait (bad) lock xchg cli xor js cmp out add fwait and retq fwait movsl sub mov cmpsb add mov out fwait sub xor sbb mov push (bad) ja and shrb clc rex.RXB ds rex.W test push sarl xchg cmpsl sahf (bad) mov xchg pushq adc callq sbb rcrl fildll lahf je callq xchg in in (bad) (bad) (bad) or mov or rex.R testb fild sbb mov jbe hlt addr32 jo sub (bad) movabs (bad) loopne mov mov (bad) (bad) jle (bad) jae push loope pop (bad) cmp fwait mov push sbb scas (bad) rex.WR fwait sub orl pop jb add (bad) retq rex.WB fwait xchg hlt rex.WRB sti (bad) mov fwait cmp mov rex.RX (bad) iret jb cmp (bad) cmc (bad) icebp fwait out in (bad) pushq sub int3 lods push rex.WR movabs (bad) push push fwait (bad) sub imul subb (bad) rex.XB rex.WRX pushq fwait jno std xchg cmp insb mov (bad) sti push rex.RB repz mov fwait (bad) mov adc (bad) mov (bad) lods jrcxz push fwait adc leaveq adcl xchg retq jg xor jae insb add adc jle rex.B cwtl xchg (bad) adc jo mov cmp rex.B rex.R rex.X sub cmc rex.RXB nop hlt mov fldl fwait (bad) sti in rcll pushq pop repz cs (bad) cmp movabs fwait ds xchg (bad) ljmpw add (bad) (bad) jne jrcxz (bad) (bad) repz fwait xor (bad) rex.XB (bad) fwait rex.WXB jbe pop shl sbb cld outsb sahf fwait jge (bad) xchg xchg mov mov or stc test jbe pop mov addr32 movabs insl and sbb (bad) xlat jrcxz cmp (bad) push jmp xchg cli in cmp lods (bad) (bad) pop jrcxz fwait sbb fisttpl scas fwait add sarl (bad) mov icebp fwait pop sub (bad) js shlb loopne (bad) (bad) jae fwait rcrl fwait in or xchg gs push shll fwait ja (bad) pushq adc fwait sbb rex.WRX adc clc cld out rex.X pop mov adc (bad) (bad) rex.RX sub rcr cwtl stos movabs mov push sbb cmp or xchg xor (bad) lock (bad) fist fwait jp js sub subl add mov cmp in mov loopne insl fwait in (bad) outsb (bad) lods in xchg rex.WX cmp and jg rex.WXB retq sbb (bad) popfq mov (bad) pushfq (bad) enterq and xchg repnz iret pop sarb movabs (bad) test mov and (bad) jg rex.W rex.WRB cltd mov sbb notb cmp mov mov xor movabs mov (bad) js or stos sbb scas rex.WRXB fwait rcll mov mov or pop (bad) std xor leaveq mov mov insb ds add pushfq outsb rex.WRXB pushq jbe xchg lret add rex.RXB int3 repz mov xchg and sbb fwait xchg movslq out fwait (bad) enterq (bad) push icebp xchg movslq fistpl mov jae gs mov mov cld push adc (bad) cltd or lret std (bad) ja retq sbb data16 push movabs rol popq jrcxz pop movabs mov jo pop std sti loop mov ror jl mov mov and popfq out rex.XB push cmc add (bad) andl xchg rex.XB ja (bad) fsts maxps and sti or or add jmpq pop (bad) jmpq mov rcrb xchg fild icebp imull mov int3 pop faddl fs rex pushq xlat out add test (bad) in cmpsl popfq retq int and pop (bad) (bad) test (bad) lret cmc fidivrl jae (bad) xchg js data16 rex.WX rex.R rex.WRX gs pop (bad) callq out mov pushq sbb xchg stos xlat or jge push xchg push rex.RX pop add mov popfq hlt out mov (bad) rcrl xor repz scas jmpq mov (bad) (bad) xchg jle pop movabs cmpsl int3 cld negb mov loope sti cmp rex.WX rex.X fwait rcrl xchg xorl lods lea retq loopne mov fwait jle pushfq test insl fcomps sti rex.XB and xlat or and callq xchg (bad) scas rex.RXB fwait add fwait rex.W jnp adc fwait cmp cld fwait and lret fwait rex.X (bad) in sbb test mov fwait or xchg idivb loop sahf push icebp fwait out retq jo (bad) in iret (bad) fdiv rex.WXB rex.W fwait rorb (bad) mov movabs lcall test mov adc or sbb in cmp (bad) ficoml xor fistl mov fwait icebp movslq mov and adc rex.RB rex.RB rex.WRX lret (bad) cmp fwait movabs xor xchg or (bad) outsl xchg psubq (bad) jae fwait xlat andl fwait iret sub movabs mov xchg rex.R and cmc outsb add mov cs (bad) push and sbb fwait mov pop fcompl mov rex.WR rex.WR rex.WX (bad) leaveq fwait in add mov rex.W mov lret xchg lea gs test fwait push cmp xchg (bad) adc cmpsb jno mov xor mov prefetcht1 xchg sahf jmp (bad) adc or fwait lods cwtl (bad) in cmpsb jns and out mov sub xor in movabs xchg rex fwait rex.RB sub cmp jno mov retq mov mov out mov sbbl callq pop (bad) orl fwait nop out cmpsl movsb jmp jbe lret (bad) fwait pop xchg xchg (bad) mov or rex.W xor jb sbb out (bad) fdivs mov popfq (bad) sarl xchg (bad) cmp xor push xchg pushq mulb pop add (bad) test mov (bad) (bad) xor jbe mov fwait es imul sbb or xlat lret (bad) add fwait pop (bad) insl jp adc div fistp jae iret or (bad) sbb add rex.WX lea punpckhbw push add mov adc movsl test sti lahf jno sbb (bad) idivb sti out mov xor lods rex.R fwait (bad) out mov add cmp lea ss stc cmc (bad) mov movsl and loopne movabs rex.XB retq scas push (bad) sbb pop sbb rex.WRB xor fstl (bad) xor fstpt mov in cmp cwtl rex jb jae fwait xor movabs or add or cmp xchg jrcxz jns xchg scas sbb mov sbb mov loopne mov mov mov (bad) fwait push (bad) cmp add fist mul (bad) or rex.X cwtl retq cmc sub (bad) fldl (bad) out and cmc leaveq test retq xor (bad) movabs callq xlat jrcxz xor pop (bad) sti mov adc push shr testl push mov fild stos rex.B mov popfq shl sbb and (bad) out lods test or shrl mov sti test (bad) fwait (bad) jg setno ror outsl cmp movabs std ja sbb loopne in jmpq in std fdivp out add popfq mov fildll add fs imul push xor sub fucom sbb and add sbb iret out cmpsl movabs stc jno (bad) movabs sub repz adc test (bad) xchg (bad) test rcll xchg add rcr fwait in jp rorb movabs jo (bad) rex.WR orw loop mov pushq clc jb rex.RB rex.RX rex.WXB add (bad) jl pop xchg or xchg mov push sub (bad) mov retq xchg mov xor (bad) mov pop and mov fdivl cmp movsl cli (bad) negb and mov fnop pop adc pop xchg js gs adc int rex.RB sbb pop push xor fsin scas and mov push es adc or retq rex.WRXB stc (bad) jno sbb (bad) clc callq push rex.WX fwait js push sbb sarb movsb enterq add rex.RXB mov in mov loope pushfq (bad) movl hlt js mov (bad) out rex.WRB pushq mov mov mov int3 pop inc rex.WR movabs leaveq mov (bad) (bad) es mov lahf push out mov (bad) xor pop xor out movb rcl iret (bad) (bad) or shll (bad) xor (bad) fidivl push (bad) push pushq xchg adc and xchg sbb repnz mov pushfq test fimull push add (bad) fwait pushfq jg enterq mov std pop mov neg insl add (bad) movabs out xchg cmp fwait decl pop (bad) adc mov xchg fwait xor jle sbb xlat movabs xchg addr32 cwtl cld (bad) sti add push cltd adc and fwait mov mov (bad) cmp rex.W mov jns stos or jle xchg push pop cltd stc icebp inc sub iret fucomip retq rcrl add add jae sbb adc xor jmpq and or fwait sar stos movsl mov test in in pop enterq sti fldt outsl mov sbb mov (bad) mov vpextrw (bad) (bad) adc (bad) test xchg push fs (bad) std xchg ss sbb jne or js sub fnstsw (bad) push mov nop popfq jmp jnp fstpt js (bad) (bad) incl sbb lret (bad) pop lahf sbb addr32 xchg (bad) pop (bad) cli sbb pop (bad) js and rex.WRX mov (bad) sti enterq (bad) test xchg (bad) push popfq pop addr32 popfq sub movsl cmp cmp lock rex.XB ds and sub fisttp addr32 rex.WRXB ss nop mov mov and sbb movabs mov shll jnp insb and addr32 pop adc cmc rex.WR mov int3 xlat mov fdivr int3 push jle (bad) (bad) in mov rex.RB mov rex.WRXB sahf js mov (bad) movsl (bad) (bad) push ds add mov xorl outsb sbb ss fwait cmc jp jle mov negb mov mov rcrl movslq test sub ficompl mov push push cmpsl pop adc out lock rex cmp sbb jo repz pop repz (bad) (bad) mov jmp lods adc retq jg,pt data16 cltd mov sbbl cltd jge test fwait sub rex.R in rex.RXB cltd mov fistl adcl or fwait sbb leaveq jns sbb mov int in lret outsl lahf add rex.RXB shr sbb or fninit jp mov and (bad) lahf xchg push pushfq jp or sbb callq cmp (bad) ss (bad) push (bad) data16 retq fist rex.WRXB sbb push fdivr add pushfq (bad) xchg out sarl push scas (bad) jp (bad) cld rorb sub rex.WR (bad) sbb int xor in fcmove lock adc mov in xlat cmpb xorl out pop lahf (bad) nop mov cmp xchg scas mov rex.RX push scas rorb jo jb rex.WX sub cmpl mov add cmp pop xchg xor mov fs ficompl out adc rex.B xchg (bad) pushq (bad) fistpl stc scas add sbbl out rex.X retq negb pop mov stos jmpq sti mov test xlat xchg jmp xor test int3 ds (bad) and fistpll (bad) and insl rex.WRXB sub shll (bad) (bad) pushq out sub es fninit lock movabs rex.XB (bad) sbb or or cwtl xor fisttpll mov insb sub or out in cmp jns lahf out je mov jo lods (bad) rex.RXB lods sbb mov repz pushq es mov adc mov data16 jb (bad) adc pop sub cmp iret cwtl adc ljmp fwait lods je rex.W sbb clc fwait and jae and fwait lret add fstps (bad) adc pop fsubrp lahf es add pop sub sti out fadd sti mov movabs sbb (bad) shll cmp xchg mov rex.XB fwait cmp movabs iret fldcw movabs (bad) sbb enterq push test rex.X cmp std xchg mov retq fsts out cmp sbb sub je adc and (bad) xor fildl rex.X retq (bad) sub sbb jmp jmp jp fwait push cwtl roll or in xor mov add adc cmp mov mov pop sbb or iret jne sbb out mov xchg fwait movabs (bad) rcrb nop fwait stc or cmp (bad) out pushq add push (bad) fwait (bad) and xchg rex.W fwait icebp fnop int out movsb xchg sbb (bad) lock add xchg sahf mov ffree cmp or xchg and jmp adc (bad) (bad) fwait (bad) es jmpq lahf icebp fwait sbb pop movabs push rorb repnz stos in ja ror (bad) xor adc mov mov mov fs pop fsubl in xchg es jrcxz fwait jno (bad) or stos sbb cltd mov fwait add and outsb (bad) (bad) pushfq fidivl sbb rex.WRXB imul jb sarb and push jp (bad) jo fwait xchg incl leaveq lret pop xchg outsl lock sti xor fcomps mov nop cld fwait sub rcl rex.W hlt adc add jl pushq stc lods (bad) and decb fwait xor psrld sbb fwait push jge mov (bad) adc movabs jae xchg xchg cld sub rex.X fistl in in fwait cmp lock mov lods sbb and rcrl mov adc cmp leaveq lea sahf jp fs mov (bad) and add sbb pop outsb cmpsb xor addl or rex.WX hlt fdiv mov std cmp imul (bad) xchg scas cmp mov test leaveq out or cld mov sbb mov fwait retq xchg and cmc pushfq sbb fwait add pop lret (bad) gs sbb jge (bad) sahf (bad) and outsl rex.WX mov (bad) fwait mov cmp loop fwait icebp cld rex.WXB repz (bad) (bad) add (bad) or xchg mov sbb jp (bad) (bad) (bad) in and or jbe sbb fwait rex.WX jp sbb jle pushq pop jo mov (bad) sub xchg adc jno mov fild clc pushq imul mov icebp pop lret seta xchg sbb adc mov sub xchg adc or mov mov xchg out repz and lret jo (bad) mov fwait mov sub rex.WRXB fwait jle xchg jge cs pushq (bad) addr32 clc out (bad) xor stos rorl xor (bad) pushq mov pop sti ficomp rex.WRB gs (bad) mov adc in sahf pop imull movabs mov mov test cmp mov xor std movabs (bad) sahf add loopne push jmp outsb lods adc or pop xor push jle xchg xor mov mov jo fstpl fcmovb rex.WB (bad) (bad) and pushq adc cmp fs and xlat mov cmp adc adc (bad) xor sub iret addr32 js movabs fcoms jae fadds fcoml cmp rex.RB (bad) fwait mov mov loope repz pop sub mov test rorb icebp or loop add out xchg rex.WRX cltd fcompl sar mov mov movabs jl rex.X cld rex.WB rex.RXB (bad) imul mov (bad) or push pushq cmpsb repnz outsb or mov rex.WR fwait addr32 cmpsb jl rex.WXB fstps shl jg cltd (bad) (bad) fnop ss andl movabs or and in test rex.RX mov push cld push add rsqrtps mov xchg out cmpsb sbb pop out xchg fwait rex.XB sbb jne pushfq scas (bad) (bad) movabs pop loopne push mov xlat push fwait mov cs (bad) cmp jl jb fwait adc rex.WX rex.WRXB fwait add xor and push jnp xor fwait (bad) (bad) or stos cmp mov fcomip sbb retq or gs xor ja cwtl (bad) es and sti pop (bad) pop fwait jne,pn lods rex.XB sub pushfq sahf xchg mov movabs imul mov mov mov or sbb gs or rex.XB es xchg fistp movabs rex.XB fwait outsb xor js jns xorb cmp test push (bad) jg fisttpl mov sbb (bad) xor retq xor xchg fwait imul in sbb jmpq (bad) push fwait pushfq int lret (bad) sub add xchg cltd mov adc xchg mov stos xchg leaveq in rex.RX (bad) sbb ficoml add fwait xchg fadd xchg (bad) test je stos and sarb (bad) mov sbb (bad) xor adcl rcrb outsb (bad) movabs fimul scas mov sbb callq pop (bad) in movsl (bad) fwait data16 ds out fwait cmc add (bad) or loopne rex.WRXB xor (bad) xor loope or mov test fwait lods out sbb xchg sbb mov fstps pushq rex.WRB or mov js fisttp sub fimul (bad) sbb insl xlat lock xorl rex.WRX pushfq sbb (bad) rcll mov lret rex.WR sbb or push or rex.R pop mov lock rcl jl xor adc mov mov push scas (bad) shrl js xor ja mov jns jl xor sbb mov jns (bad) cmp (bad) adc fistl mov push push stos add xor pop repz jb or cwtl pushfq pop repz (bad) pushq cmp loopne movabs sti shr outsl rex.WR fwait in pop push cmpsb stos pop mov sbb add lock pop jrcxz,pt movabs fs rcll xchg xchg cmp scas out cmpsl fildl gs retq adc (bad) retq leaveq add loopne movabs and add jnp push fwait mov push mov (bad) or add rcrb movslq test jp or sti mov lahf xor scas fwait es (bad) pop (bad) movsl pop mov vhaddps (bad) fwait jnp nop xor subb or (bad) hlt sub rex.X mov (bad) cltd xchg sbb scas add adc rex.WRX add jg cmpsl addr32 push xchg sbb xor sbb insl sub or fist xchg sbb movabs out retq cld or push add test cmp jne sub outsl xchg sub xor sbbl mov data16 fstl pushfq cmp mov movabs adc mov sub mov sbb adc and fistpll fstpl (bad) or mov out and (bad) (bad) shlb ja cmpsl ss push rex.WX mov icebp in scas andb add pop sbb push sbb mov fwait stos jnp and mov mov int roll or lret and and loope mov iret (bad) fwait pop sbb movabs (bad) lea fwait sub mov cmc shrl retq push sbb rex.XB rex.B rex.WX movabs add fildl movabs xchg or add or pushq out xchg and and test stc mov adc lods jne callq imul enterq (bad) out fwait orb (bad) add iret fwait or lock fwait movabs (bad) out or sbbb mov sbb xor mov fwait pop jnp cmc movslq sahf fwait callq mov sti jb rex.XB (bad) (bad) xchg insb pushfq js nop mov popfq (bad) (bad) callq rex.WRB xchg or xchg jp cmp (bad) imul sbb iret stos rex.X fisub (bad) callq rcl pushq jmp addl push sbb xor ficompl test jle lret loopne mov jnp hlt jmp sbb sbb stc (bad) jg jrcxz xchg pop cmp (bad) pushq push (bad) (bad) cs push xchg movabs movsl callq pop pop and in (bad) enterq mov mov cmp jne pop (bad) xchg jl cmp stc mov (bad) leaveq std mov nop mov icebp je jg push stos pop mov data16 jbe (bad) lods rex.WRXB pextrw addr32 outsb loopne (bad) push scas (bad) (bad) mov lret repz scas cmpsb lods shll and xlat pop popq scas enterq and (bad) mov mov pop or movslq inc outsb iret fisttpll gs rex.XB jl sub pop push addl std adc loop (bad) mov xchg (bad) xor (bad) insb and pushfq adc int sbb stos sub pop xchg ja pushfq xor cmp rex.W fs pushfq jg pop xor rex.R in sti out test jl iret clc testb sahf addr32 lock ja pop cwtl xchg and cmp cmc scas movabs test retq retq test rex.RX sti (bad) test addr32 (bad) push mov mov xor fdivrp mov cwtl outsb int3 lret out mov (bad) mov jae addr32 pop rex.WR je jmp int (bad) xor mov fsts xor (bad) jo push rcrl fsqrt sbb je or xchg mov out cld cwtl jno insl cmc cwtl xor jge repnz (bad) add jae sahf add mov sbb (bad) roll addb (bad) lret scas mov pop sbb nop outsl (bad) fimull imul jo fcmovnu ds andb pop (bad) pop cmp xor (bad) jb in insl loop movsl push mov or and mov pop pushfq cltd cmp iret fistpl (bad) and xchg (bad) movslq (bad) pushq jb retq lahf fmull sbb (bad) pop jl (bad) or in xchg adc sti jne (bad) xchg addr32 scas sub fsubl adc push shrl (bad) repz pop rex.WX iret stos leaveq ds shrw fisttpl stc mov (bad) xor xchg (bad) scas rex.W xchg push (bad) sbb push ss or cltd (bad) (bad) jle xor adc xor sbb rex.WRXB cwtl xorl fnop and mov fldl mov sbb add lock or mov fsubrs push or out (bad) (bad) (bad) push rex.XB mov add jb (bad) (bad) cwtl repz insl out repz cwtl push push xor (bad) push stos int3 insb std add (bad) iret add (bad) jbe (bad) (bad) rclb cli fbld cld mov mov mov and sbb (bad) fsub callq movabs (bad) in or (bad) cmpsb adc enterq fnsave (bad) or rcrl or pop rex.RXB jnp adc repz cwtl retq stc vpbroadcastw and rex rex.WRB movabs fbld (bad) sbb cmc add mov xor pop callq int pushq rex.RXB movl test insl stos xor rex.XB jg (bad) lods push add rex.XB mov (bad) (bad) cli (bad) add jl loope rex.X adc int addr32 movabs or in and movsb (bad) pop xchg cmp popfq mov (bad) (bad) ss gs fistp (bad) mov rex.WX pop adc enterq add ja sub (bad) mov jmpq (bad) (bad) movsl movabs add cs out stos cmp rex.WRB mov add movsl xchg outsl test pop or cli push (bad) or popfq xor loop and xor (bad) push push je push rex.RX lock rex.WRB sahf out ja add rex.RB rex.WRXB cli and fdiv cs fadds pop rex.W cmp (bad) cmp pushq sbb je lea imul movsb imul sarb fildll callq jb,pt repz rex.WRXB rep sub stos jmpq (bad) xor sbb or (bad) lods push rcrq hlt stc push cld rex.X sub rex.WRXB pushq xchg sbb retq cld xchg jrcxz mov cltd jle adc xchg ror xchg rex repnz xchg xlat jl xor test mov xchg pop cmp pushfq pop mov mov mov mov pushq movsl pop rex.XB xchg xchg lods (bad) mov fldt retq or out jle fcompl loope push and or in movabs testb fisttp or (bad) and loope retq mov jmpq cmp mov (bad) push mov lea xchg enterq xor scas mov xor cmpl out cld mov cwtl and (bad) and outsw movabs (bad) push and test mov (bad) (bad) hlt (bad) rcrl out pop adc (bad) add pop rex.WXB mov push es (bad) xor or rex.X imul sbb fisttpl rex.WRX adc adc imul jae or rex.WRX (bad) cs xchg sub imul mov rex.WX jmpq jge loope (bad) mov xchg xchg retq xchg jp pop clc rex.RB sti mov fwait xchg adc and sub add mov (bad) mov imul push mov jmp sbb push pop cs lahf jo (bad) push iret ds lods loope sahf gs rolb lahf rex.WRXB fwait test lahf loope sub (bad) and nop xchg and (bad) popfq add xchg out rex.WRB (bad) pop (bad) cs push add (bad) stos rex.WRXB and sbb fmuls xor rex rex rex.X jns data16 testb rex.WB fwait xchg insb mov enterq pop adc (bad) je sbb lahf repz stos retq push and shl jge and or add fcomp mov (bad) jl sbb fs scas sbb xor cli mov mov fwait movslq (bad) movabs paddd and fwait rex.WX cmc fs in mulb (bad) mul iret pop add jns vpunpckldq adc xor adc retq int3 pushq movabs jb mov idivl xor icebp in sbb add (bad) pop mov out lret repz add xchg subb cmp adc pushq movabs fstps push mov test sbb add fwait (bad) test add jbe sbb int add movb fisubr cltd js callq sbbl test sub imul sti (bad) (bad) rcll callq cmpsb (bad) sbb loopne jne stos push sub add rolb and rex.XB fbstp (bad) fwait mov pop loopne andl (bad) mov movabs loopne callq fwait rex.WX xor pop (bad) scas (bad) (bad) (bad) cmp in fwait nop push ds test flds fwait jle pushq loop rex.WRX repnz and add loope stos mov ss scas mov (bad) xchg mov mov sbb fbld mov push xchg cmpsb mov fwait add (bad) jo test xchg or ja mov cmp mov mov imul cltd loop js or (bad) (bad) rex.WR out (bad) (bad) leaveq iret (bad) fwait movabs mov mov repz fmuls addr32 mov fwait cmp jns imul in (bad) and add adc (bad) sub cld push sbb fbstp or fwait int rcl imul pop rex.X mov cmp jmpq mov (bad) jne (bad) sbb xchg iret mov mov (bad) movabs rex.B fwait lea rex.RX ja icebp mov cmp and fucomi addr32 push (bad) stos movabs mov sbb push movabs fs pushq (bad) mov or loopne (bad) (bad) mov scas pop jrcxz xchg loopne (bad) pop cli and ds (bad) movabs orb jmpq rex.XB fnstcw sub pop xor jmpq scas xlat sub addb repnz and not jle in fdivl cmp mov pop jl sbb xchg fstl in (bad) enterq xor mov test (bad) mov scas in ficom (bad) jo in adc xor mov insl in repnz mov jns out or gs fild cmp int3 sub (bad) repnz xchg rcrl sbb sahf rorl out xchg out add lock (bad) mov cmpsb or (bad) (bad) mov push (bad) mov add enterq imul or incb mov or and rol movslq push loop mov outsb pop pop or mov fcomp xchg sub xchg sub sar mov jl (bad) (bad) ud2 jno push push sar mov xor rex.WXB icebp movabs es rex.WRXB lods (bad) cwtl out loope (bad) fdivrp cmc xadd out cwtl jl lahf (bad) pushq rex (bad) jo hlt ss (bad) (bad) cmp jae and pop sbb push mul mov add out stos xchg or jl js lea pushq sbb (bad) rex.WXB fidiv cmp rex.RX movsb rex testb xchg addl mov mov sbb adc sub xchg pop jns negl sbb jge jg sbb rex.RX sub (bad) callq pop xchg (bad) (bad) jo loope sub sub (bad) stos adc cmp int add (bad) lret pop shr sahf pop and (bad) mov mov adc pop add stc in lret jb (bad) outsl (bad) leaveq adc xor sbb cmp push roll (bad) rcll adc rex xor lret cli movabs (bad) push ss shrl (bad) push push (bad) sub pushfq cmp lea sbb (bad) jle pop add pop fcmovnbe mov mov sahf (bad) push (bad) leaveq (bad) in shll repz (bad) bswap rex.W mov mov fild mov js stc sbb mov lret mov cmp sbb cmpsl enterq rex.RXB or movabs hlt xchg xchg (bad) testl cltd rex.RB fwait sub clc (bad) and ss jle lea stos movabs xchg (bad) (bad) out (bad) iret jrcxz pushfq fwait test fadds fwait xchg or push fwait sbb cltd (bad) adc repnz jp out fdivl fwait jno push movabs (bad) rex.RB (bad) movsb int fwait sub add (bad) leaveq fdivrp sarl or (bad) hlt mov std (bad) stc fwait (bad) push retq xlat push movabs adc rex.RB rex.R rex.R rex.RX rex.WRX movb sbb pushq in fs add (bad) adc ss rex.WRB repz mov (bad) mov jge mov mov shll xor iret push lahf mov in xor loope divl mov sbb pop xlat jmpq (bad) mov pop fildll adc loope (bad) and xchg jp clc pushq rex.WR mov (bad) (bad) push (bad) sbb lods (bad) jae rorb mov adc (bad) xor xchg lea rex.RXB cmp ss out xlat (bad) pushq in stos xchg jmp jno xchg cmp adc jnp (bad) fwait rex.WRB jp pop js in in clc test rcr xor movabs (bad) insb and in mov fsubs cwtl fwait push cli (bad) adc loopne fwait test (bad) je test rex.B rex.WRB ss icebp (bad) (bad) fwait push hlt xor (bad) fnsave xchg fsubs or adc (bad) movb xchg fs retq mov rex.WRX rex.RX in mov rex.RXB test rex.WR fwait rex.WRB mov xor mov jae add sbb sub (bad) mov stc jl rex.WRB movabs pop (bad) pop add xchg in sti xchg gs rex.W pop (bad) (bad) mov out xor mov mov (bad) cmp loope lods cld test mov (bad) xor mov rex.WXB sub mov lret retq pushq and fwait add add rex.WB fwait rex.W mov fbld and repnz cmp mov ficoml cltd lods mov add sbb add sbb add stos jnp xor (bad) pop (bad) (bad) jno retq fadds rcrb rex.WX test clc es mov mul jp cmc movabs std sub rex.RX xchg fwait js rex.WXB lahf mov clc sbb rclb es add pop pop push repnz fistl cmp mov or adc fwait mov jrcxz (bad) mov mov add pushq mov movabs mov cmp sbb or pushq fwait sub push add movabs int3 xchg rex.WRB sbb (bad) not callq mov scas movsl int fdivr scas mov (bad) (bad) sti add push (bad) fcom adc sub mov lahf adc in fwait add adc (bad) fwait push movsl jg and callq in movabs add callq (bad) sbb push mov sti cmp (bad) xchg mov (bad) rex.WRXB xchg xor rex.RX (bad) xor pop rex.WX and xchg movabs cmp (bad) pushfq pop (bad) movabs in popfq rol pop xchg cmp (bad) or mov adc jne sbb shr add loopne (bad) (bad) rclb sbb getsec pop lcall lea es mov mov sbb sbb xchg add sub loope add xor (bad) jae mov cltd push push leaveq xor rex.WX fwait xchg fildll pop callq sbb adc and add mov fwait mov mov xchg sbb xor rex.WXB testb in jmp jnp add cltd pushq sbbl (bad) mov (bad) mov cmp movabs cmp stc sbb fwait (bad) stos lods pop cmp cmc popq sbb xor repz fwait jno xchg xorb fwait mov scas xlat rex.B es mov ficomp add out or xchg repz (bad) push cmp (bad) enterq sbb push rex.RB lods leaveq lret hlt movabs rex.W cmp test cwtl fwait (bad) sbb push movabs rex.WR push movb mov mov retq xor (bad) sub fwait mov fwait insb jp (bad) insl jmp jmpq retq (bad) rex.WR (bad) cltd hlt lea cmpsb ss rex.WRB add (bad) fwait sub sub fisttpll setnp leaveq jns fwait es mov rex.RX imul cmpsb scas fwait mov xor fwait jne lea loope sub or rex.W lret movabs mov (bad) lock in ja pushq (bad) lret stc xchg imul pop rex.WR ds sbb cmpsb movabs push (bad) xor movsl ja cs mov mov cli sbb iret loop int3 jle mov sti out rex.RB cmp add rex.WRX popfq scas loop scas fstps mov pushq sti hlt ficomp fwait or cmp out or movslq xchg mov test xchg (bad) std jrcxz rcrl fs push retw sahf mov push pushfq ja xorb pop xor (bad) data16 retq pop and fwait test std and hlt (bad) xchg mov popfq xchg (bad) outsb pop outsl fwait jnp cltd mov sbb (bad) js std in ja sti clc sbb popfq sbb icebp retq cld rex.XB out repnz and mov pop repz js add xchg sub test jge cmp cmpsb (bad) sub (bad) fwait add adc xor jbe repnz (bad) or adc in jns adc fimul (bad) cmp movabs xor mov xchg xorb mov data16 ds mov fnstsw div lret rex.WX mov repnz scas mov adc andb ds (bad) sub mov fwait rex.R add mov hlt fwait movsb scas (bad) pop bswap mov (bad) rex.X sahf rex.X out nop cltd sbb jae jb fwait sahf jge imul mov mov test sub (bad) in sar jrcxz xor fwait lock js fwait push pop add sub (bad) data16 mov fs rcrl rex.WRXB xor cltd repnz out mov push or (bad) xchg in out mov addr32 sbb mov repz mov movswl sbb psubusb mov loope adc rex.WRXB es int3 and rex.WRB rex.RB data16 (bad) xor mov cs rex.RB fldt adc (bad) fild sbb cwtl pushq adc jge (bad) in lret push es rex.XB rex.WR adc push xchg int (bad) (bad) ja ss rex.RXB std fnstenv (bad) (bad) outsb pop sbb (bad) test mov fcomps (bad) je ds (bad) addl lret adc mov jnp stc or adc (bad) lea mov mov xchg lahf mov lods cmp (bad) loop push push add stc addl rex.RX sbb or xlat mov mov jno push mov xchg movabs (bad) fwait (bad) outsb mov lahf (bad) rex.WB cmpsb (bad) mov (bad) fwait hlt shrb fcoms jbe fwait (bad) cmp loopne pop mov outsb cmp repz cli jb mov or (bad) jns add pop add fwait xor sub rex.X mov fucomp ss mov push fwait stos sub mov js (bad) mov jge data16 sub movabs (bad) (bad) cmc or sarl and fwait sahf int3 pushfq (bad) xchg adc cmp je rex.X mov out jge rol pop lods and and sahf fwait xlat faddl test xor in imul (bad) fwait (bad) xchg and cmpsb rcrl clc push movslq xchg add clc xchg pushq fwait rex.WRX push cmp fstps (bad) imull fwait iret stos hlt rex rex.RX lret insl loope fwait jae jnp,pt push std fild cmp in xchg fwait or push pop (bad) repnz adc pop in movsb fwait (bad) jbe mov fwait sbb rex.WB fwait adc jne pop jae sbbl and test sbb pushq xchg jmpq cmp outsb shrl cmpsl loopne (bad) out adc fwait mov movabs add movabs jg sbb fwait (bad) mov sbb movabs or xor fwait lock add pop lahf fmull cltd rex.WX in icebp fisttpl (bad) scas rex.B jno (bad) cmp data16 jle gs sbb (bad) fwait push popfq in push (bad) push sbbb cld (bad) (bad) and cli clc (bad) fimul adc rex.X mov fwait insb andb add jge rex.WR adc cmp pop fwait (bad) (bad) xchg std cld sbb lahf repnz stos jb (bad) jno sahf leaveq fwait and sti (bad) fwait scas loop hlt fs (bad) (bad) xchg jle mov notl fisubrl xor and (bad) sbb (bad) and hlt lahf jg lret cli adc lods pop iret or fwait (bad) mov pushfq add adc lret adc cmpl cmp in stos hlt (bad) (bad) fdivrl cltd decl fistp pop (bad) mov fwait mov and pop sub fwait or loopne sbb fdiv lods movslq adc sti jmpq mov loopne fwait mov jnp lcall rex.RX sbb adc and out faddl cmp jnp and sbb and fimull rex.WX fisttpl (bad) mov sarl imul pop cmp (bad) jrcxz retq mov or adc add (bad) ss fldl and add and pop rcrb sub and cmp adc adc shl (bad) mov callq sbb push ja mov fnsave fsubrl or pop (bad) mov pop or cltd (bad) adc xor push rex.RX rex.WRXB cmp mov jle (bad) movslq adc xor jae int fwait (bad) movb mov imul mov out (bad) jbe fwait pop fadds sub leaveq (bad) insb sbb jl fwait stc (bad) jnp std sti rex.WRB fwait pop (bad) test fs cmp loope lahf jno es pop (bad) xlat repnz mov mov cmpsl movsb jns mov rex.WRX and rex.WB fwait (bad) mov jp fwait bnd xchg (bad) rex.X mov and (bad) cmpsl fildll fwait adc add or cmp or hlt mov jbe mov sbb outsb rex.WX movsl push jmp cwtl (bad) (bad) xchg xchg rcrl xchg popfq jne sub xchg out adc hlt (bad) cmpsl adc pushq mov cmovl (bad) jno cs jp and (bad) mov fisttpll or xchg cmp (bad) jl (bad) popfq add or mov cmpsl xchg (bad) or (bad) scas out (bad) cmpsb int push outsb pushq rex.B mov cmc jle cltd test fimull (bad) pop retq rex.WR cmp movabs cwtl (bad) fisttpll (bad) out pushq out xor je (bad) mov (bad) fstps xchg cmp cltd (bad) mov (bad) xor rcrl fdivrs (bad) jno imul jle ficoml test add fstps add jbe or rex.RXB mov (bad) push pushq xchg xchg or adc jb mov scas in data16 ja and sti mov (bad) adc xchg out pushq cmpl js in lahf rex.WRXB lock jne cltd fstl mov fneni(8087 jae rex.WR rex.WRX (bad) (bad) callq fdivrs xchg rex.WR cli data16 ja loop cmpsl mov pop rex.XB mov cmpl mov (bad) es xor fsub fildl repnz push pushfq adc sti cwtl sbb (bad) in movabs jl pop out xchg fwait lea fldt cmc push in sarl (bad) movabs jp (bad) mov cmp mov xor rex.WRB fsubrs cmp xlat test rex.WRB orb loopne xchg (bad) fnop movabs jo mov xlat clc sbb cld jp fmull xor lea clc sub jnp rex.WB orb rex.WR (bad) cmp (bad) movabs xchg xor mov mov insl or negb scas cmc mov out push (bad) movabs and rex.WXB sti insb pop addr32 cmp rex.WX in or xchg pop pushq int sbb pushq mov pop mov mov (bad) cmp cvttps2pi in (bad) pop mov jne clc idivl pushq int3 rex.WRB mov lods add push mov imul int in mov (bad) add mov outsl and fwait data16 sbb rex.WRB xor in cmp adc xchg and lea push gs jl rex.R jnp cmp push pop movslq nop loop or pop es and std negb xor (bad) and rex.WR fwait movb addr32 mov (bad) rcr xlat (bad) rcrb mov sbb loope out fsubr sbb mov roll xchg or (bad) xor xchg sbb pushq (bad) retq repz out sbb nop ja or je hlt int3 xor fwait cli mov fstl add negb rex.B sbb adc pushfq jp lahf sub mov xchg sbb (bad) mov jmpq stos rcrl rex.WRB adc test mov test (bad) sbb (bad) cmp fstpt mov pop (bad) pop jge mov or pop out mov or clc pop popfq mov pop (bad) in (bad) fistpl mov jmpq ror sbb pop addl push mov mov and mov xor mov add (bad) sbbb movabs xorl fwait movabs sub in (bad) movabs rex.WX cmp mov mov xchg adcb mov jbe out cltd mov fwait loope enterq pushq fistl add fwait xchg push jge push sarb rcr out (bad) mov stos std shlb fwait (bad) fnsave es sub test fcomip sbb xchg retq jnp xor xor fstps bnd sbb sbb mov sbb adc pop xchg scas rclb (bad) int3 xchg mov jae adc mov fildl fwait (bad) adc lret (bad) cmp sarb and pop mov push shr xor mov jne movabs test movabs sbb test iret addb pop fwait jmp loopne stc int mov decl sub mov sub jns cmpb push test movabs jb sbb repnz adc rex.WX or mov (bad) ss mov mov fucomi jne fs (bad) add mov imul mov int jb (bad) sub nop jle pop sti pushfq rex.X rex.RB fwait jmp xorl xchg jbe (bad) movsl mov orl xor cmp and fstpt fsubs scas jne xchg add adc sbb fdiv mov movslq adc (bad) cmp rcrl rex.WR rclb add retq mov cwtl (bad) and mov mov add lea xchg jge sub xchg (bad) (bad) mov xor sbb std adc sbb pop jrcxz hlt cltd xchg (bad) out cmc cmpsb fwait mov outsb jnp adc cli jb and mov mov xlat (bad) int mov rcrl mov mov out cmp mov cmp (bad) xor add sbb pop stos (bad) cwtl test int3 (bad) loop jo add add xor fdivrl jg sbb mov (bad) cli xchg jl rex.WRB (bad) sbb in rex.R fwait lret push (bad) fbstp in (bad) sbb mov mov fs gs push js cmc sti cmp mov mov (bad) (bad) mov sti (bad) pop stc push (bad) jnp lea out cmp (bad) mov (bad) jbe enterq or iret loope leaveq fwait cltd mov xchg push (bad) mov cmp pushq pushq push repz xchg enterq (bad) sbb loopne loope mov mov outsl dec repnz add insb xchg out rex.RXB lock rex.W ja (bad) sbb sub rex.WR add cmp (bad) add xchg callq (bad) fwait jge rex.RX mov sub pushq jrcxz callq std in imul mov mov cmp (bad) mov jno addps sbb mov pop rex.X add popq imul cmp imul mov cmp pop (bad) jae rex add pop adc (bad) (bad) or mov sub lret or mov stc (bad) pop (bad) fwait ds xchg push xor rex sub xor fwait and rex.WXB rorb stos (bad) or pop (bad) (bad) or (bad) xor pushfq out cmp jmp fidiv add int3 xlat iret addr32 std sarb sti (bad) sti add retq fwait rorl sbb jbe add lock jge rex.WB or retq xor jp (bad) (bad) xchg rcrb movabs enterq rex.WB rex.WB push mov cmp pop fwait mov sbb (bad) test sub (bad) fwait add jge sbb mov rex.WRB bnd rex.RB addb or mov ss (bad) mov adc cmp xchg fnsave out mov and jnp sub loopne rex.WRX add adc pop jrcxz sti sbbl xchg xchg es mov mov pushfq (bad) (bad) rex.R rex.WRX out cmp out cwtl fdivrl (bad) outsl (bad) callq pop movabs xor adc sbb test ja scas pop int3 (bad) scas sbb out sahf fwait (bad) fisubl adc fwait (bad) mov jno (bad) xor xchg and (bad) pop test popfq (bad) pop xlat lret lahf out sbbb adcb mov jmp mov rex.X rex.X rex.RXB sbb cld lods repz adc ror push (bad) jb mov (bad) test pop movslq sbb fbld xchg jp movabs fisttpl mov pop xor (bad) mov xchg pop xor sbb xor adc jge incl cli in jrcxz xchg xor callq and (bad) mov (bad) lods scas movabs fcompl add movsb jmp es (bad) loopne mov push cmp sti shr rex.WX mov mov es out xchg rex cltd (bad) retq pushq rex.WXB fwait mov or add retq xchg imul in (bad) fsubs clc fisubrl rex.RXB leaveq cmp xchg adc sbb mov loopne imul pushfq movsl jae or adc mov (bad) mov imul (bad) negl adc mov rex.WRXB fistpll out ror vcvtdq2ps xchg (bad) adc or repz mov in xchg pop fwait pushq push mov adcb mov jbe jo movabs cmc mov rex.RXB hlt shl adc add mov fldcw test pushq add cmp (bad) fstl sbb sub test cltd rex.X imul sub xchg and xor (bad) mov sub ficomp movsb or push cmp adc rex.RXB andl xor popfq or jo push or repnz cli andl outsb xor out (bad) bnd cmpsb data16 rex.WR repnz mov mov movabs jg loopne loope enterq fist pushfq fnstenv mov loopne mov movsb xchg cmp and mov jrcxz or rex.RXB push jbe jmp jo or xchg mov adc outsl (bad) jg mov mov shrd outsl insl add pop push and push test and xchg out imulb sbb pop mov push (bad) lock loope (bad) rorl mov data16 jb pop (bad) cmpsl movabs xor and stos sbb in xor retq fstl mov mov cmp xchg xchg sar xchg push rex.WX in jnp int addr32 (bad) sub (bad) std stos sbb pushq loope lret rcr (bad) int3 cltd jbe adc fdivl pop out mov (bad) callq sub imul cld xchg rex.WRXB jle xlat jmp in jp (bad) js (bad) or mov out sub gs pop in retq mov repz shlb (bad) rex.R (bad) and test jle fwait repz (bad) jnp mov sub (bad) (bad) jl cmp in fistpl retq sti out jnp ja sbb out push fildll sub (bad) rex.WB stos popfq loop mov stos adc sub retq pushfq rex.W ss pop add je cwtl clc (bad) lret sbb add lret rex.WRXB bnd (bad) outsb jbe jns sbb icebp movabs cmpsl (bad) cmp fwait jbe in je cmc (bad) or xchg out rex.WXB (bad) mov or push rex.WB (bad) hlt xor leaveq (bad) in cltd add push pop stc popfq sub fistpl (bad) xchg rex.WR jns test cmp sbb pushq scas sub push clc shll fwait or and (bad) pop or xlat sbb jnp jb rex.WRXB sti fninit insb cmp fwait subb fstpl rex.RB sbb fwait mov movb (bad) pop rex.RX rex.WX (bad) fwait retq fisttp data16 (bad) sbb push stos movabs adc fwait jb add jne fwait or pop (bad) xchg (bad) rorb in (bad) and retq (bad) rex.X cmp fs fwait rcll xor fwait cmp jne test (bad) hlt sti or ds icebp push (bad) shrl jno in push out lods incb xor (bad) rex rcr lret cmp push (bad) scas fwait cmp jmpq cmpsl (bad) pop (bad) (bad) negb jns mov or test cmpsl xchg (bad) mov (bad) pushfq jrcxz fcoml in or sti sbb mov outsb repz and popfq (bad) fucomi sbb imulb scas in int3 pushfq mov fadd (bad) or sbb rex.X repz je pushfq insl fndisi(8087 xchg out pop rex.XB vprotb rex.XB addr32 lea std outsl xor or pushq sbb std scas sbb mov mov xchg (bad) lods callq rex.WXB out adc xchg and mov pop callq icebp xchg in rcrb ss push xor callq (bad) rclb sbb mov out jl sub mov sbb mov (bad) mov mov hlt sbb jmpq pop (bad) movabs (bad) (bad) sbb ja (bad) mov pushfq imul xor out and push add (bad) (bad) (bad) jg rex.XB and hlt out or (bad) mov mov vcvtdq2pd loop xchg fisttp jnp stos jno scas js push jp sahf test rcl or (bad) repnz (bad) lea movsb fstps (bad) (bad) mov xlat outsl or sbb xor rex.WRXB xor sbb rex.X scas lods (bad) loope outsb in cwtl rex.W testl sbb add (bad) sti neg fwait movabs rex.XB or cmp add fmuls pushq fidivrl addr32 (bad) (bad) pop loop cld mov xchg (bad) xlat (bad) cltd sbb pushfq jb (bad) sbb clc adc fwait xchg jle sbb adc pop data16 cmpsb fmuls fistpll (bad) in sbb rex.W xchg mov mov rex.WR movabs movabs movabs scas imul movabs mov std roll mov mov sbb insl sub mov sub scas cmp lahf push pop jno lea (bad) jmp repz (bad) loope out mov negl in rex.WX rex.RXB xchg fisubl lock and add sub enterq fstpt sub fwait cwtl or nop (bad) (bad) (bad) sti loope notb insb hlt fwait xchg (bad) cs cmc push adc sbb fwait movslq in cmpsl cmp xchg rcrl mov cmp fadds (bad) adc pop retq fwait add (bad) cltd jp fwait mov mov repz lret rex.WRB lahf fisub fstps (bad) add mov fcmovne (bad) test movabs in (bad) pop xor (bad) or mov fwait out retq and es rcr cmp pushfq bnd shrl out int add out mov (bad) xchg lret pop fisubr pop sbb (bad) stos xchg pop xchg mov sti (bad) pop xor stc sbb (bad) icebp sbb (bad) lret cmc push (bad) sbb rex.X pop test movsb adc movabs out movabs in rex.RB fwait test rex.WR out (bad) pop push (bad) mov mov xor adc rex.RB fwait in xchg pushfq test (bad) pop movabs mov (bad) (bad) imul int3 xchg push fwait rex.RX callq addr32 mull add (bad) fsubrs rex.W jmpq (bad) stos push or push movabs xchg xchg jle xor notl rex.RXB cs (bad) iret fnstsw icebp mov xchg repz rex.R scas cld mov movabs xchg mov movabs sbb push jl (bad) or in rex.WRX (bad) (bad) orl xchg mov cmp xor xchg sub cmpb (bad) (bad) xor xchg out fwait lret movabs iret (bad) out jo addr32 (bad) pop loop xor stc insb pop (bad) adc out lahf rex.WR fwait (bad) adc retq cmp pop std (bad) fwait (bad) adc rex.WR cld and (bad) stos sbb loopne sub jns mov add (bad) adc outsb xor mov xchg (bad) movsb sahf (bad) jnp int (bad) loope mov adcb fildll repz (bad) movslq cmp (bad) or rex.WR loop fwait jno mov loope adc add xchg rex.WRXB rex.RXB add (bad) (bad) callq fwait pop in movabs sub mov scas jp xchg lahf (bad) sbb repnz fwait js ds pop enterq fwait sti repz add out insl (bad) (bad) fwait cs add jnp btc movabs in movabs (bad) popfq sub flds xor (bad) out faddl add or sbb jne jrcxz cs rex.X xchg cltd or fwait cvtps2pd sbb and push fwait repnz fidivr movslq and jnp xchg sbb (bad) (bad) in (bad) or sti or fwait fs fucomi and movsb and fwait loope (bad) cli (bad) lahf je fwait rex.XB adc iret rex.B fwait sahf add (bad) fwait imulb mov fwait nop cmp imul fwait in jae cmp repz adc mov mov push pop xchg (bad) fwait icebp jns outsb mov out xchg and add sbb (bad) nop fwait xor ficoml jmpq xchg movsl imul in sbb lods retq push test fwait pop mov sub pop insb add scas movabs sti cmc (bad) cld (bad) sbb jge fcmovne ds imul fwait mov rex.WR add add lahf push sbb add sub fstp sbb roll mov fwait gs je sahf rcl rex.WXB rex mov and and cmp fwait cmp rex.B (bad) sub fwait jle je icebp mov fwait hlt cwtl xchg insb (bad) mov out cs roll add outsl rex jo (bad) sub cmp xchg fwait add xor jns movsb ds xchg test hlt cld (bad) cmpb movslq add in cld xor (bad) add nop sbb lret or xchg rex.WX jbe fildll int3 (bad) or jle rex.RX mov (bad) sub or push jl mov repz xchg lea sub jp movabs sbb adc lods or clc movsb sbb icebp (bad) or rorb rex.WRB cmp stos sbb jae mov rex.R std jne (bad) pop popfq scas sbb mov sub (bad) cmp cmc and movabs repnz pop sbb jmp mov (bad) or and pop scas test in xchg pushq and mov lods xchg repnz (bad) retq or lret data16 clc and pushfq fisttpll retq mov (bad) mov sbb (bad) cltd xor rex.WR and or rex.RX (bad) and inc retq fdivrp (bad) push sbb out sar lahf ss sub fwait cli loop test jne jno sbb int3 (bad) rex insb lods fistpl outsb fnsave adc (bad) in in adc xor fcompl xchg loop (bad) (bad) movsl in push mov stos fwait xchg stc retq rex.WRXB lock sbb outsb cmpsb jle mov sbb fisttpl xor iret push loopne sti movl movsl xor fwait movslq (bad) pop adc jg incl loop cmp add fwait nop sbb sbb ja fwait or in rex.RB add xchg (bad) lock fwait movabs sub jo cld loopne lahf (bad) sahf xchg rex.WRXB (bad) fwait int fcmovu jae or and (bad) (bad) mov imul jns callq xchg imull (bad) sbb ficompl movabs shlb retq (bad) in and or jmp mov push fwait (bad) jns push fimul pushfq sbb je sub fwait mov jmp in rex.B repnz (bad) rex.W repz (bad) sub nop lahf pushq sbb (bad) sub fisubr rex.WRX (bad) shll xlat cmp rex.R rex.XB or (bad) xchg movabs sbb iret pop adc mov pushfq sub and ds sbb movsb test mov sarb out cltd scas jmp cwtl and add (bad) cmp mov leaveq and (bad) movabs ja popq lret fidivr mov jmp mov pop (bad) mov orb data16 mov addb shl fisttpll andb pop fbld (bad) loopne pop (bad) and ja xchg cmp rex.XB lret rex.WB adc cmp push and push xchg popfq out sbb loope (bad) or mov (bad) sbb sub cltd xor pop and rex.WXB rex.RX int3 insb lahf mov lods rex.WR rex.WB mov loope outsb adc (bad) xor pop mov mov adc imul mov out retq jo imul iret cmp cs adc cmp and js movabs (bad) movabs and cwtl callq stos loope (bad) rex.XB ja (bad) data16 in (bad) fwait jle jl test xchg rdmsr and jmpq sbb outsl data16 jbe mov push pop mov addr32 push or (bad) shlb rex.RB cmpsb push lret rex.WXB stc movsl addl add mov rex.X jrcxz,pn mov fadds hlt cmp fisttp out xlat fcomi outsb mov mov repnz stos mov test test mov pushfq (bad) (bad) sti sub (bad) jg sarl jno movabs hlt cwtl loop in retq ds xchg fdivs (bad) popfq lods pushq xor in xlat imul mov jno xchg adc (bad) es xchg mov cld sbb rex.X xchg subl jb movabs pop outsb sbb (bad) cmpsl mov out rex.X sbb (bad) or (bad) adcl mov movabs and jp pushq xor rex.WRB cwtl fsubrs pop fcmovbe or sbb out rex.W std cmp (bad) add or (bad) mov out and cmp xchg (bad) fiadd jmp (bad) movabs cli mov (bad) jmp mov fs insl (bad) pop cmpsb shlb scas pushq pop retq hlt test (bad) fcmovnb jo xchg (bad) cmp subl rex.WR pushfq and jle mov cwtl jl adc (bad) and mov addr32 rex.RX (bad) out jl sub sti negl shrb fstps (bad) leaveq mov xchg sbb sbb or and (bad) repnz sbb adc pushq (bad) jl lods jns mov in rex.RB loope (bad) push insb lret push fsubl fildl outsl (bad) addr32 cwtl jrcxz push sub in push movabs mov mov or (bad) or out rex.XB fiadd outsl imul push jl (bad) pushq (bad) hlt idiv pushq jbe stc jp mov (bad) setae pushq insb rex pop rex.WRX lods sarb (bad) loop (bad) out cmp adc rex.WX (bad) int jmp xlat imul nop cmp xor movsb (bad) jl jb sbb rex.X (bad) fwait ds cmpsl fdivr je rcr test rex.X rex jp mov and mov fbstp jrcxz mov jae sbb andl sarb rex.X out fisttp (bad) xchg mov sbb sahf jb int (bad) mov cld jp stc (bad) sbb push jmp leaveq repz mov cmpsl xchg repz stos (bad) (bad) test (bad) jne cwtl sti and push cmp xlat pop dec (bad) (bad) pop adc or or sub xchg mov mov pushq cmpsl iret out sub mov retq rex.WX pop push fldt sbb and fwait retq callq sti scas (bad) loop lret (bad) mov retq xchg scas (bad) (bad) (bad) fcomi loopne jmp (bad) jne jmpq (bad) rex.WRX sbb add sarl cs addr32 sbb adc adc fwait jae sbb (bad) and jbe add sub rex.B and movabs movsl sbb mov mov fwait cmp rex.WB pop in je push mov stc fs loopne js jle sub movsb clc fild jo (bad) movabs lock vmread gs mov rcrl pushq roll adc iret and mov lret cwtl mov xchg pushq and push roll mov xor xchg adc cld pop loopne adc jmpq sahf add xchg jb out sbb xchg rex.WB xor push imul adc or cld (bad) sbb clc xchg retq mov loop (bad) (bad) mov shll xor (bad) (bad) jle (bad) adc cmp andb or rex.WXB and (bad) pop out stos sub lahf adc nop fwait adc retq xor sbb mov push (bad) xchg xor xchg pop push mov movslq sti or nop test jbe (bad) fistl sti mov or adc push out fwait jmpq callq pop out movabs rorl (bad) rex.RB div jmp callq movslq fistpl jnp mov rex.WB insl mov jne loopne cmp stc (bad) in (bad) xchg pop data16 jle imul lods shll rcrb clc cltd mov fwait jno addr32 fwait add cmp fwait (bad) (bad) (bad) xchg test faddp xchg testl (bad) mov push subb (bad) lock push xchg mov fwait (bad) sub sbb icebp rex.X je (bad) (bad) retq mov xor lret (bad) mov (bad) fwait shrl lods (bad) jl callq (bad) sar pushfq adc lahf retq jp fwait adc (bad) fdiv je (bad) (bad) mov fwait (bad) adc clc (bad) nop fisubr pop (bad) mov rex.W loopne xchg fldt negb sub mov lahf jmpq sub mov sbb (bad) ds rex.X data16 rex.WRX cld popfq adc mov cli sbb (bad) mov rex.WX cmp movabs add retq stos push mov jl mov add sbb xchg callq push pushq loop and enterq sahf push rex.WX iret (bad) popfq sarl (bad) imul push fistpl or sub popfq lods (bad) gs xchg xchg stos xchg sarb cmp jmpq clc rex.WB fistp cmove xchg jnp shl fwait rex.RXB add rex fwait or rex.WRB cs test xorb mov test pushfq (bad) cld (bad) std insl (bad) fucomi pop xchg (bad) clc lea rol pop add mov cld movabs adc (bad) fwait lret cmp fwait data16 fwait test (bad) jns test rcrb (bad) mov stos or jmp or imul notl adc (bad) cmp mov jg fwait imul sbbl mov stos and jae (bad) push pop adc xor leaveq and adc sub shrl test jbe outsb mov addl repz adc sbb pushq test lods adc sbb cld stos push (bad) cmp add retq adc sub hlt ja mov mov or jge xchg cmpsb jae mov jmp (bad) cmp cld insb pop pushq mov or sbb stos mov add out es mov fstpt stc sahf pop rex.WRB jrcxz fwait (bad) adc cmpsl in cld insl (bad) (bad) adc loopne orl add push movabs loope movsl fwait movsb rex.WRXB loope insl (bad) pushq test push (bad) fild fwait xchg add add fdivr fcoml push add sbb pop rclb fwait outsb sub mov mov shl pop add or callq fwait (bad) movsb pop jno movsl rex.RXB lock push fstpl pushfq add xor sti mov test mov (bad) pop fwait leaveq sbb (bad) cmp mov xchg out xor jp jrcxz stos cltd rex.R nop xchg and jmp sub and loope orl mov xchg fwait or sbb sub imul (bad) stos pop rex.WB sub or (bad) sbb and mov cmp movsl (bad) rex.X addl ffreep xchg mov sbb xor sbbb rex.WRX or or push cmp (bad) (bad) mov negb je in retq (bad) adcl push sbb je out cltd callq lret rex.WRB cltd rex.WRXB retq pop cmp (bad) sub (bad) mov test scas (bad) pop int sbb jge lret or (bad) (bad) add pop (bad) (bad) cmp fwait rex scas sbb fmull and (bad) mov popfq stos jns loopne sti (bad) add pushq jbe jae mov retq xchg out xor add rex.X cmp and fwait and (bad) adc sarl lahf cmp and pop fs (bad) movslq fwait setg and xor push (bad) push (bad) sub cmp callq mov (bad) rex.WRXB fwait adc cltd fwait push movslq add test stos (bad) je xchg shr notl cli sbb lock cs pop xor rex.RXB repz xchg push xchg jmpq fimull rex.XB fcmovnbe fwait lret xchg (bad) xchg cltd adc fwait roll mov fwait xor (bad) add pop out jo xor hlt iret mov loopne lods xchg es data16 insl pushq insb pop pop cwtl ss adc (bad) (bad) mov xor loop jns jrcxz rorl xchg push imul rex.B (bad) lret (bad) (bad) imul pushfq mov sahf (bad) out out (bad) xchg cmp (bad) adc rex.WXB rex.WB popfq scas (bad) in rex.WRX fsub leaveq pop movabs pop add in and loopne xchg pushfq xchg xlat xor data16 adc loop movabs pop (bad) sbb scas clc (bad) sahf andl jg (bad) lea sbb xchg (bad) std and pop stos loop loope and jo adc (bad) mov cmc xor jmpq push (bad) (bad) fstpl pop insb mov sbbb jmpq std outsb sub xlat jnp (bad) lods fwait xor imull xchg jbe (bad) stos pop (bad) sbb sub (bad) rol (bad) fwait mov idivl rex.WX mov (bad) mov movabs mov lods cmc mov sti fucomi jno or paddusw and cmp (bad) rep rex.WRB rex.WB (bad) retq repz xchg jnp jns callq icebp loope icebp mov fwait pop rex.WRXB sub sar fwait callq (bad) jnp cwtl sub lea (bad) hlt mov fwait xorl out mov cmc xor mov xchg (bad) rcl jg adc insl sub adc mov or xlat (bad) lret fwait test sub xchg xchg xlat hlt retq fdivr adc (bad) pop push (bad) (bad) (bad) pop (bad) out movsl mov mov mov push (bad) cmp sbb push rex.WXB sbb rex.WR negl jo (bad) fwait xchg rex.WRXB sub mov adc push gs (bad) lret loop test sub and fucomi adc cmp fldcw (bad) cmpsl sub adc cld mov (bad) negl je xchg popfq pop (bad) sub xor cmp mov jrcxz xor mov (bad) scas fwait push (bad) outsl (bad) rex.R push sbb mov sahf lret pop (bad) or mov jmp leaveq (bad) jbe sbbl fwait cs (bad) cld mov movabs xchg rex.R popfq fwait (bad) (bad) (bad) fstpl (bad) mov (bad) popfq mov popfq ss callq sar mov (bad) rex.WR (bad) push xchg sbb pop jge sti lret push (bad) stos (bad) cmp scas sub xchg pushfq fsts mov cmpsl fwait loopne in cld addr32 movsb mov clc rex.XB rex.X cmp mov (bad) and (bad) outsb sub fisttpl xchg mov jns imul mov out (bad) movabs sbb mov lods rex.WRX cmp enterq jmp icebp mov (bad) (bad) test retq std movsl mov jl xor mov ss and fwait movabs lea xchg xor popfq (bad) hlt psubq fstpl pop cmp rex.R mov imulb fwait (bad) enterq roll repnz jns push xchg outsb mov mov jb mov rex.WB rex.XB repz and lock fwait jne outsb retq out (bad) xchg xor mov fisubl pushfq push cli hlt and out (bad) (bad) (bad) cmp sbb xchg or cmpsl fwait ds and lea callq (bad) push add in fwait pop (bad) rorl pushfq cld jb sbb iret sub pushq fwait cmp jno callq mov sbb cwtl cmp movabs jae fwait nop sbb repnz fwait mov xor retq adc jae xchg in movabs lret and (bad) out fidivrl je insb (bad) rex.X fwait loope test (bad) xchg add push mov loop (bad) outsb rorl sbbb (bad) jbe fwait int3 hlt movl fwait in scas cltd lods and fwait sub mov rcrb cmp (bad) repz rex.RXB test jge negb mov js jmpq movsb rcrl (bad) cmp (bad) pop rex.RB lahf stc test (bad) (bad) sti loopne fwait iret mov pop lods callq or cli (bad) nop pop push mov cmp (bad) adc xchg mov movabs (bad) fwait repnz add mov rex.B lods rex.W mov pop fwait hlt scas mov adc sbb es mov pop push mov xchg repnz fwait rex or or rex.XB add mov sbb (bad) (bad) jb (bad) lret rex.RB in mov pop sbbb mov (bad) cmp push xor mov (bad) sbb retq add lea (bad) mov xor xchg rclb and popfq movabs (bad) mov cmp fwait cmpsb loopne lods outsl (bad) movabs fldl or jae out shr rex.RXB mov adc cmp lods (bad) mov xchg jl stos test outsb sbb (bad) or mov push mov stos mov outsl add xlat pop in (bad) lret xchg adc fwait xchg sbb and mov out rcr outsl js and mov pop fwait shll movslq callq (bad) (bad) jb pop je rex.RB mov mov fcompl rex.RB cld pop out cmp outsl fs rex.X repz xor (bad) cli xchg mov mov movabs push fwait lahf xchg and mov cmp sti repnz sub and lret callq xchg movabs rex.W lods (bad) (bad) fsubrs xchg jl sbb mov xchg cmp outsb lea rex.RX out mov fwait add (bad) mov rex.XB rex.WB lret outsl sahf sbb mov mov (bad) mov rex.WX xchg mov lret xchg sti adc iret rex.RX mov xchg xchg cwtl lods nop mov jl (bad) mov (bad) or rex.RB rex.RB repz rol rorl mov fs mov test cmp ficoml (bad) (bad) mov (bad) push jmp es scas repnz gs pop std callq add rcrb adc loop fwait (bad) xchg faddl sub fwait xor movsb in add cwtl xchg prefetch mov rcrb outsl fcompl adc push mov xor fwait popfq sbb or adc sbb (bad) int cli fwait ss adc fwait cmc push (bad) sub mov rcl sbb (bad) pushq rex.RX rex.WRXB rcrw add mov sti push mov cs rep mov mov (bad) rorb cwtl hlt outsl xchg cli (bad) loop mov loope cmpl test push xchg (bad) rcrb cmp (bad) sti pop (bad) rorb adc fcoml testl outsl xor mov mov rex.W fwait (bad) xchg cmp xchg adc xor sbb stos rex.RXB pushfq and adc pushfq out popfq pop sbb and orl sbb (bad) out xor xchg rex.B fwait loope add (bad) outsl and mov jne sbb rex.RX xlat fs fwait (bad) in add out pushq movabs sbb jbe outsl fwait jl repz and jno mov lock (bad) mov sbbb icebp fidivl mov mov ds and and sbb movslq sub retq sbb test add rex.RXB xchg insb xchg cli mov retq rex.R lods cmpsl outsl xor (bad) sbb or fisttpl mov xchg or xchg mov test xor lods and mov outsl cwtl pushfq sbb push or rex fucomp mov movabs movabs pop sbbl (bad) (bad) fwait outsl jmpq popfq cmp mov jp push xchg (bad) shlb (bad) cltd adc rcrl rex.RB lock ja insb jae mov sbb cmp pop lods mov cmp cmp cmp pushfq sbb jno (bad) in pop sti mov rex.WB dec fildl callq or sbbb mov movabs lods sub (bad) xchg jmp or ds mov (bad) sub loop shrl mov sub leaveq sbb sbbl cli xchg retq clc rex.R callq (bad) (bad) add (bad) (bad) callq int mov xlat in add cmpsb jae mov (bad) rex.WX cmp out jns jbe jg sbb and rcrb pop (bad) scas jbe rex.WRB rex.WR (bad) mulb and cmpsl (bad) repz iret out cs (bad) outsb shr popfq rex.WRB addr32 cmp (bad) xlat rcll adc rep mov sub movabs cmp sbb add cmp pop jrcxz (bad) movsb fldl or mov sbb rex.RXB pop xchg movabs (bad) or mov xchg insl mov jns test xchg loope (bad) (bad) (bad) sti pop cmp and (bad) (bad) (bad) cmp pop (bad) leaveq hlt repnz test (bad) (bad) (bad) mov hlt lock (bad) push adc pop jno or fs pop adc fstps stos jg push pop lock jns (bad) int sbb rex.WXB xchg lods fwait add sbb rex.RX rex.B push sub callq fwait iret sarl movsl in mov pop cs std (bad) or jo xchg pop pop jle andb (bad) mov cmp (bad) gs (bad) (bad) (bad) jns test push test notb imul (bad) (bad) setnp cli andb repz cmc (bad) (bad) adc xor mov lret out (bad) lret pop cmp rex.WX outsb scas pop cs add or pop cmp mov pop (bad) or sbb fdivrp rex.WR data16 (bad) (bad) rex.WRXB (bad) (bad) (bad) repz cmpsl mov sub (bad) (bad) (bad) decb (bad) (bad) (bad) callq (bad) movabs lock jg mov movsl clc rex.W cs sub movabs xor ss mov ss sbb mov retq outsl (bad) cmc mov outsw in enterq mov movslq hlt movabs add rorl je std jrcxz cmc lods int xor (bad) xchg rex.RX jae mov (bad) pop mov xorl pop std repnz xchg lods (bad) mov (bad) iret (bad) jns sub xor test (bad) (bad) (bad) (bad) test or retq jge psubb sub push xlat rex.X rex.RB rex.RXB es mov jnp jae ss fcmovu retq or add cmpsb adc mov mov xchg mov mov stos xor (bad) mov push cmp (bad) outsb pop add test jae rex.WXB imul mov cmpsb xchg (bad) add sub rcr fsubrl std xchg fisubr fidivrl pop push test and and adc (bad) cld rex.RX (bad) (bad) jmpq test movsb lahf test cs out push outsb fldcw js sbb pop jb retq lock mov and xchg fsub add add add repz shlb js cmp fnstenv jae add rex.RXB xchg push addr32 add mov adcl xor push and or shll repz lahf mov mov cmpsl add out jnp xchg in jmpq movabs cmp jmpq add rex.WR (bad) imul add imul hlt out xchg mulb mov (bad) xlat mov popfq repz push cmp rcll pushq jl mov xlat xor sbb notl cmp js rex lret cmpsl test rdmsr cwtl jmp ja adc sar sub and xor xor out retq addl fs rex.RB (bad) sti adc (bad) (bad) (bad) std bnd and sub (bad) (bad) sub movabs jmpq push sub cmpsb adc negl fistl stos add rex.WRB mov shr test (bad) (bad) (bad) fneni(8087 test popfq sbb insb fimul adc loopne sahf hlt movsb fidivl cmpsb rcrl xor add insb mov insl add cli pop pop stc xor mov cmpsl jg mov je gs imul and and out mov or rex.WB xor adc xor lods fstps scas add xor (bad) rsm pushfq rex.R (bad) out add xor add rolb (bad) mov xor mov jae movsb (bad) (bad) (bad) cld cmp scas rex.XB (bad) (bad) lcall pushq mov rex.WRXB gs rex out lret nop cmp jae cmp (bad) or mov (bad) mov fild mov add add lods rex.WXB push push pop adc sbb loope pop lods pop or int jo lea in fidivr or xchg cmp andl sub lret (bad) scas xchg cld rex.WR rex.WR mov mov test mov (bad) data16 (bad) cmp sbb pushq (bad) lock (bad) mov rcl add nop rex.WB and (bad) push mov sbb jns xor and (bad) jno push xor mov (bad) mov cli stos sub in (bad) cmp or (bad) push mov int jnp cltd rex.WXB or (bad) (bad) (bad) sti xor (bad) (bad) decb test outsb add cmpb and cld mov xor (bad) cli movsb cmp fcoms (bad) inc test hlt adc jne lea sbb rex.RXB (bad) mov rex.WRXB leaveq movabs mov xor sub lods rol lret jo mov adc jle jne add sub dec ror mov cmp stc clc cmc add jmpq jb stc test jmpq (bad) (bad) rolb rex.RX rcll pop out and (bad) mov push xchg retq rcl shrl pop adc push xchg mov in lcall movabs in mov gs rex.WRB xchg pushfq (bad) push (bad) mov sbb cmp out jno lret mov sbb test test mov jae pop ds jo adc (bad) icebp enterq jne push repz cmp sub cmp rex.WX cwtl jnp callq shrb and lock (bad) mov (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) xchg loope retq subb rex.X sbb and cmc cltd movabs xchg rex.RXB mov roll (bad) movabs rex.WR (bad) push mov lea pop push test and and push sbb jp (bad) lods addb jle jge pop or xchg pushq sarl mov fdivr sbb and sbb int3 add (bad) pop fwait int vcvttss2si xlat mov xlat sub movsb pop (bad) movsl mov sub (bad) repnz or and (bad) sbb (bad) (bad) (bad) decb lahf rex.WX cli push (bad) pop cmp pop push repnz jrcxz rex.WRB rcrl adc add mov mov flds int cli jrcxz xchg xor push rex.RXB (bad) cwtl loopne fidivr sbb clc (bad) adc xorl mov out rcrl vmovmskpd mov stos rex.RXB (bad) in loop adc leaveq stc mov lods adc xchg int3 not (bad) icebp in out movlps xchg push mov add and ficoml cmp (bad) mov (bad) int xor (bad) pop stos (bad) (bad) adc xchg lods ficom (bad) js sub or lret (bad) sti sub mov lret jmpq xor lock (bad) fisub pushfq jne mov (bad) (bad) xor movabs mov imul sub outsl scas enterq add in (bad) (bad) (bad) (bad) in pop roll movabs jne rex.X mov mov cmp stos (bad) (bad) imul cmpb jle stc (bad) sbb movntps mov loope rex.WRXB lods repnz leaveq movabs cmp push xchg cwtl (bad) mov gs mov callq or adc (bad) je icebp test jbe jg iret or or pop push adc ss xchg out fisubrl lods nop rex.RX xlat adc movabs cmp mov xlat mov pop (bad) rex.WRXB xor (bad) (bad) (bad) sti nop push movslq (bad) (bad) (bad) (bad) insl lods or sub xchg es not fcoml (bad) (bad) in test ja ds cmp hlt loope sbb fmuls xor hlt pop fimull (bad) adc fistl pop (bad) sarl xorl xchg ljmp mov scas xor out js repnz add rclb (bad) lret cltd rex rex (bad) push xorl pop test mov pop jle push xchg cmp rex.W (bad) rex.R cmpsb pop retq pop sti lock push pushq jnp cmc cs rex.XB cld jg shrb xchg (bad) (bad) (bad) lcall xor pop (bad) sbb jl imul (bad) gs in jge (bad) sahf fs and movabs rex.R iret or add add out mov in xchg push jae jb stos mov rex.WRX lods mov cmp test mov mov jge movabs negl mov scas mov je test add jmpq (bad) loopne rcll callq pop xchg jno rex.B movsl rex.XB (bad) xchg rex.X test ja (bad) xor loopne and (bad) mov (bad) clc subl outsl rex.X movl add sahf jbe loope adc xchg outsl pop (bad) xlat xchg cmp (bad) mov and stos jo (bad) sbbl movabs cmpsb (bad) idiv (bad) (bad) sti and pushq sbb add in add (bad) movabs push js ss add rex.WX pop sub jae push sbb jnp pop (bad) int3 mulb xchg cmp and (bad) stos (bad) pop cmp je psllq xor rex.B mov mov (bad) adc scas mov sbb xchg jmpq jae movzbl mov jmpq mov lea not mov movsbq lea jmpq ja jmpq not jmpq jmpq cmp jmpq not mov jmpq jmpq cmp jmpq ja not rcr cmp sub adc or dec bsf add shld mov ror neg mov cmp jmpq push jb mov jp xor jns fnstenv push rex.B in mov jge leaveq xor (bad) pop pop cmp rex.WRX data16 neg std push adc mov insb out incb cld mulb add mov ds ss rcrl sbb (bad) cmp rex.WB test xchg movabs cld test ja (bad) fwait imul and sti std rex.X (bad) (bad) std fnstenv xorb (bad) xchg fstpl nop repnz mov (bad) fstps rex.B adcl sbb (bad) (bad) callq ror adc cmp lret or rex.B vreducess rex.WRB (bad) test mov mov vcvtps2dq push sub jmp adc (bad) test sti sub lret (bad) incb add lods adc or jle (bad) xor movabs nop roll add (bad) (bad) (bad) (bad) std out xor fwait add movabs or mov in mov mov and ds enterq push retq test (bad) cmp mov sub sti push (bad) mov sarb mov test push push rex.WRB (bad) jno sub insb mov mov mov pushfq fs sahf (bad) fimul adc rcrb pop in outsl mov mov pop andl sub rex.W xchg rex.WB pop push jge repnz sub movsb retq cmp jle (bad) mov fbld setne (bad) movsl ficomp repz (bad) stos sub (bad) (bad) cld pop xchg (bad) (bad) (bad) (bad) cmp pop rex.WXB rclb (bad) lret rex xor imul or std (bad) adc mov add jrcxz movabs test (bad) xor movslq sub mov add add push mov cwtl cmp movabs movsb ss mov adc and rex.RB adc lar mov cwtl and rex.WRXB out mov mov (bad) mov jne mov mov cmp outsb es (bad) loop jge scas push adc sahf rex.RB jrcxz loope jmp jp xchg movabs repz push (bad) sub (bad) add jge pop sbb (bad) sbb es or jmpq lea jb jae movsl fisttpl pop pop adc lods std rex.RXB (bad) (bad) (bad) cld xchg add (bad) (bad) (bad) pushq in (bad) sub cmp clc add pop cmp orl negb add add push xchg loopne in sbb fs (bad) (bad) (bad) push or cmpsl (bad) movsb movsb (bad) mov mov hlt push sbb repz rex.R adc jae repnz or sti push adc and xorb mov jrcxz sub rcrb es movsl mov cmp jmpq jmpq lods std in movsb add iret out (bad) and sbb sub rsm stos lret rex.RB cwtl sbb mov sub adc (bad) in jp div (bad) (bad) (bad) (bad) jns (bad) (bad) mov movsb and jmp fst (bad) adc cmp movslq xchg or and cld insl jae mov or movabs std rcrb add add add jp (bad) (bad) cmp scas xchg loopne (bad) pop rex.XB enterq rex.RB mov (bad) pop cld movsb xchg mov cmp pop adc jno movabs cwtl rorb sbb mov mov xchg hlt pop (bad) push add rex.WR cmp sub test pushq xor push repnz div stos xor out lret andl imul and rex.WX xchg cmpsb (bad) jnp mov rex.WR scas mov or lods (bad) sar insb adc sbb mov mov rorb icebp repz xchg (bad) push cmpb mov loopne (bad) cli test sub pushq (bad) sub (bad) (bad) (bad) sti (bad) (bad) xchg outsl push (bad) (bad) (bad) (bad) cmp mov add test fdivr callq retq (bad) (bad) (bad) (bad) mov stc sti out mov xchg add and mov jnp pop icebp mov xor shl mov push cld jmpq xor retq outsl or xchg cld (bad) or pushq mov mov notl push push movabs jns and movslq in (bad) (bad) shrl pop xchg cmp retq (bad) adc cmp (bad) (bad) sbb mov cmp loopne mov cmpsb sub (bad) rex.RXB cmpb (bad) (bad) (bad) std xchg jno add add or std scas mov iret movabs insl jnp (bad) faddl lock mull fidivl sbb rex.WRX jae mov or and jle (bad) movabs (bad) mov imull js popfq xor stos jno ss pushq xor mov movslq sub test cmpsb mov pushfq add test mov js sub sub jo cwtl cmpsl xchg xchg fsts mov fild jg test repz pop stos xlat or mov jmp or jge movsb sbb jge mov repnz or popfq mov mov in fldl repnz sbb mov push imul jne movsl int xchg mov nop test xchg jle repz pushfq icebp or mov cs loopne push cmp xchg rex.RXB pop int xor out rex.WXB pop xorl xchg mov int3 add xchg and xor add loopne (bad) jg jb es or sti jmpq int3 callq imul scas cli and pop push (bad) mov jmpq cld in pop ds (bad) (bad) (bad) sti sbb (bad) fsubr (bad) (bad) (bad) std cli addr32 (bad) push lea or xor movabs test leaveq xchg retq or (bad) adc sti pop sub out test jno (bad) sub jb pop sub fwait rex.WRXB sbb imull sbb sub add shrb mov movsb (bad) add cmpsb pop (bad) fwait push (bad) (bad) je clc sbb (bad) (bad) out in out (bad) mov leaveq in mov retq (bad) cs test mov rex.WXB (bad) sti lahf loopne cmp fcmovbe callq addr32 sub rex.XB ds lret (bad) xchg rex.RX xchg addl adc insl adc push xor pop out push in sub push rex.X scas push rcll (bad) (bad) (bad) (bad) xor lea push ss jo xchg (bad) out iret rex.RXB cmp (bad) pop js and jbe adc rex.WX (bad) xlat insl int xor (bad) mov mov add stos enterq add imul insb psubusw (bad) push (bad) mov lods sbb push out fimul movabs js add mov movabs (bad) cmp hlt jl cmp cmpsl sub add add sub rex.WB fcmovnb cmc movabs sbb nop movslq scas int (bad) push (bad) (bad) and mov xlat mov xchg sbb cmp push mov inc cmp imul xor adc in mov (bad) jne nop test addr32 outsl or sbb mov pop or (bad) rex.XB fs (bad) int3 adc icebp cli lods cmpsl xchg and sbb movslq addr32 jp and es retq jmpq mov loope testl mov ss or fisttpll fs int3 adc and xchg mov pop xor xlat (bad) fucom sbb int3 sti or lods sbb rex.RB cld (bad) rex.WRX stc (bad) (bad) (bad) clc xchg jmpq insb rex rex.WRB mov ja (bad) (bad) (bad) (bad) decb repnz add add or or movabs lahf mov fcmovnbe mov sub jle adc pop je enterq pushq or sahf (bad) pop jg,pn (bad) int3 adc cmp test lods cld fsts loop shlb jle es pop roll sub rex.B (bad) movslq shrd outsb pop sbbb pop xchg (bad) mov pop sub mov movabs js in (bad) cmp callq (bad) push incb cmp std insl adc jae ja pop in (bad) mov xchg (bad) (bad) jge scas cmpb pop test xchg jge enterq loope ffreep nop loop (bad) pop cmp mov (bad) (bad) std sub cmp add add or movabs leaveq pop sub retq jnp adc xlat pop adc mov ds std jns mov (bad) rex.RXB mov push lahf cmp (bad) movabs adc cmc cltd leaveq std ficom xchg add ss rex.WX (bad) retq (bad) retq imul sbb cmp rex.WRXB rex.RX mov rex.WR adc cli (bad) in (bad) rcl sub fnstcw and xor xor cmp retq mov xchg and (bad) (bad) (bad) sti sti or (bad) cmp (bad) (bad) (bad) fadds or std jp jns mov (bad) fimull add pop jp movabs (bad) and mov loopne mov rex.WRXB rex.WRB (bad) addr32 retq cwtl mov cmpsl movabs (bad) mov mov inc cmc test not bt clc jmpq lahf enterq (bad) mov xchg push sub jmpq xchg or (bad) scas jo xor mov add outsb insb cmc adc icebp mov callq jrcxz idiv in add cmp mov xor leaveq lods gs rex mov jl (bad) rex or add lods (bad) (bad) (bad) (bad) cld jae test (bad) (bad) (bad) callq mov movabs pop sarb rex.RB jmp adc mov add add imul mov pop in and or push and mov push cmp rex.XB pushq fs iret cmp mov add sub test cmc pushq bt clc jmpq jne setl jmpq jb cmp bt cmpb jmpq adc cmp std addr32 imul rex.B xchg (bad) mov xor or pop jl mov (bad) (bad) (bad) lods pushq adc mov leaveq (bad) rclb ja vunpckhps (bad) rex.WRB div xchg not test (bad) sbb out and xor jmp or push (bad) jmpq (bad) (bad) sti mov (bad) (bad) (bad) (bad) popfq add fdivs movsl and (bad) jp lea nop mov (bad) rex.R add add rex.X pushfq scas fild push cmp clc fwait lea stos movabs pop test stc insl rex.X es (bad) fnstsw (bad) or sbb rex.RX test (bad) mov mov add sar sub setno movsbl pop seto movzbw jmpq jne cmp stc bt movb stc cmp test jmpq mov (bad) rex.WRX loope cltd cmp (bad) outsb or imul js and lahf jmpq fdivp sahf mov pushq sarb cmc icebp test rex.XB xchg sbb jne rex.WRXB jns std lahf rex.XB jle retq (bad) lods in cmp (bad) mov sti movabs jg xchg adc cmp rex.WRXB xchg and pop xor movslq (bad) (bad) fnstcw rex.WRB outsb loop rex.RX xlat std sbb jo js xor rex.R mov jle pushq add (bad) sarl imul js lret (bad) (bad) mov ja lock xchg scas rex.R mov xor test jrcxz mov fwait imul clc pushq sub (bad) (bad) fisttp lods mov scas add (bad) mov mov jmpq jge jae clc test cmp sub jmpq jb clc cmp cmc test cmpb jmpq icebp fsts sbb (bad) rex.WR out adc and and fmuls jl cmp jbe scas sbb adc leaveq pushfq sbb (bad) in (bad) mulb rolb (bad) pushfq in jmp out lret jp cmc add and ja mov test sbb xchg push rex.XB fwait vmovhpd cmp outsb data16 jl rex.B in out pop rex jge (bad) (bad) rex.WX (bad) (bad) decb push and pop adc stc callq mov movslq pop mov cmp rex.RXB mov outsl test jle pop repz rex.WR (bad) (bad) (bad) cmp fisubr (bad) (bad) mov push out push pop lock (bad) rclb out mov lahf xor cmp adc loopne stc jmp mov icebp mov out pop push mov xor pop lcall add cmp nop add cmpsb mov (bad) lock (bad) rcrl mov or mov sbb cmc fwait in or rex.WRXB rex.R rex.WR rex.B xchg xor pop add rex.WRXB rex.X test push jo,pt cld pop sub sbb movabs sarb rex.RB repnz mov fimull cmp mov movabs (bad) jno jo jae ds insl stos jnp mov xor push mov mov cwtl jae mov jae (bad) mov rex (bad) (bad) decb int3 (bad) pop add fwait mov xor test xor (bad) add pushq addr32 mov (bad) jns in mov sti outsb lret and rex.WRXB retq cmp (bad) xor movsl lahf scas mov mov sbb rex mov lock sub xchg and mov retq out jp add (bad) insb rex.B insb outsl movslq jne not mov movzbw mov jmpq sbb xor pop movabs mov (bad) (bad) negb push jle xchg (bad) sbb xorl out jrcxz xor mov (bad) js xchg je rex.W xor cmp mov callq mov mov and mov out sub xor cld jno lods sub rex.WRX jp stc mov sahf lret sub adc callq out add andl std sbb add lods or adc xchg subl xchg add add push rex.X mov mov cmp (bad) rex.WR test sub push (bad) xchg sub cmp mov mov jnp xor cmp sti pop xor nop imull or lret mov retq cmpsb mov enterq mov outsb lret mov leaveq (bad) movabs movslq mov and cwtl mov rex.WRXB hlt xchg mov jo mov push xor pop clc in mov movabs mov rex.X lock sub pop mov (bad) mov (bad) fdivrl cs rex rex.WRXB cmc callq stc rex.RXB loope cmc rex.X icebp adc fldt or mov rex.WXB rex.WX (bad) rex add xor add in jl lret sub (bad) (bad) (bad) cld sbb (bad) (bad) clc (bad) loop scas in sbb (bad) xchg adc pop stc fldl add add push (bad) mov negb sub (bad) lret (bad) (bad) in jg sbb cmp mov xor nop retq rex.XB mov mov add hlt and es cmp sub mov scas jmpq lods clc stc cmc clc ror jmpq xchg clc jmp lret adc fwait push jb out or cmp (bad) movabs adc jmpq (bad) (bad) adc pushfq js sub (bad) hlt out rex.XB mov cwtl je ja (bad) (bad) iret addb xchg fnsave test fcomp rex.RXB rex.RB rex.RX cmp test pop retq pop movabs enterq cmpsb (bad) cltd cmpsl cli push cmp and mov pop cmp es lock scas and jp cmp outsl movzwl movslq in repnz int3 cmpsl cmp test cmp rex.WRXB xorb pushfq mov (bad) rex.B mov test sarl icebp xchg stc nop sbb adc rorb sbb in repnz mov rex.WRXB add cmp push or pushq in out loopne rolb push jbe jle sar lock lret popfq cs (bad) (bad) sti divl (bad) (bad) (bad) (bad) sub gs jbe add add push sbb jge rex sti in retq (bad) loope jbe or sahf std jo mov push (bad) gs fistpll rex repz cwtl notl (bad) in pop rex.XB xor pop lea mov sbb outsl mov mov rolb rol idiv xchg mov and jg add sbb cltd movsl rex.WR mov mov xchg scas movsb out push lret cs cmp or sbb xchg test or cmp je sub rex.RXB decb add ror cmp jbe mov xchg push or cwtl rex.WRX rex test jp loope cwtl (bad) cmpsb (bad) mov jnp cmpsl add jno (bad) (bad) (bad) inc mov xchg push gs (bad) mov pop and or rex.R jb pop xchg add (bad) je in fisttpll outsb lods xchg rex.WB test xor push (bad) fwait jg jne push cmpsb mov (bad) jmpq mov jrcxz and push movsb cmc jmpq callq jmpq jmpq jne shrd bt mov and rol neg sub bsf and movzbw mov clc stc stc clc sub bt cmp pushq test stc cmp jmpq sub jb movzbq lea jmpq rex.WX mov int adc sbb repnz xchg mov outsb or repnz scas test shrl (bad) mov retq xchg pop cmp or sub enterq mov or cld cmpsb cli jmpq retq sbb or (bad) (bad) (bad) std push mov add (bad) fild sbb jb xor or (bad) mov cwtl imul jmp adc (bad) mov test pop jmp xchg add adc push cmp adc cmc (bad) retq add xchg cld cmp lock (bad) jno insl (bad) fnsave cmpsl test imul fnstcw fbstp mov es int mov jmpq test icebp fdivr sbb loop xor outsb jge mov pushfq rex sbb rex.RXB cmp sub jrcxz adc rex.RB mov fiaddl insl lcall rex.XB mov pop insl sub mov xor xor xor retq movsl xchg mov cmp or int cmp popq sbb pop mov rex.XB rex (bad) cltd and xor (bad) mov ja adc enterq xor (bad) (bad) sti xchg adc (bad) (bad) (bad) jo (bad) xor callq lret or cmp shr faddl (bad) (bad) (bad) push jne test imul jbe mov (bad) xchg mov (bad) mov adc movsl mov rex.B sbb gs rolb (bad) pushq fdivl vexp2pd shr push add add test in cwtl push movabs (bad) callq xor fisttpl or repz rex.WX xor sti imul iret lods mov psraw xor (bad) rex.WRB mov mov pushfq xchg pushq stos adc imul xchg in sbb mov enterq mov gs shrb jmpq sub pop xchg fs (bad) pushq test xchg lock sahf lock mov add movabs cwtl in fcompl repz (bad) loope (bad) (bad) decb (bad) mulb test rex xchg movabs rex.XB rex.WXB loop cmp rex.WRXB (bad) (bad) movabs add (bad) sub add mov xor sti jnp mov rex.WB (bad) mov rex.WRB rex.X lea ss xchg pop incb sbb (bad) cmp push push cmp sub (bad) xchg (bad) sahf ja test (bad) and adc push repnz mov ss pushq (bad) outsb xor mov sbb test (bad) outsb (bad) out es mov xchg mov xchg pop push xor adc (bad) push repz mov (bad) adc rex.RXB adc and fnstcw (bad) xchg pop jnp (bad) clc mov (bad) sti (bad) ds pushq (bad) (bad) (bad) decb xchg (bad) jb iret decl (bad) (bad) lock in shll cs add pop mov test (bad) mov decl adc add sub fnsave sahf add test (bad) std jo mov mov rex xor (bad) (bad) (bad) pop rex.XB mov pushq (bad) pop (bad) or fnop jb jnp ror outsb or (bad) adc sahf rex.WRXB lret sti nop lahf in lea pop lock mov xor stos (bad) sbb add movsl pop gs int xchg lods leaveq or mov std in mov pop ss (bad) mov sub (bad) or shrb jns pop rex.WX int3 add pushq mov pop xchg xchg pop cmc sbb popfq xor mov xchg enterq cmc pop adc decl pop (bad) add fcomps push (bad) mov rex.WRB orb push and fcmovbe jne rex.RX fdivrl callq outsb in fcompl lea and je push rol push fidivr cmp out andb es mov mov cmp cmc test jmpq push mov jmpq clc cmc sub jmpq jne setnp rcr sar sbb xor setl movsbw ror cmp mov dec test bt add (bad) lock jmpq rex.RX xor push sub (bad) cmp (bad) mov add (bad) jle lea fiadd rex.RB push xchg sbb sub bts add or orl push insb fcmovnbe sub xchg (bad) adc cmp nop js shrb (bad) cmp (bad) add pop (bad) cltd push lods fstpt (bad) std or xor out cmp cmpsl or push or cmp (bad) std mov (bad) lock xorl lahf sti add add or pop insb (bad) pop fstpl sahf sbb rex.RX (bad) xchg mov movslq cltd mov enterq sub (bad) xor (bad) push fisttp fcoms add xlat mul loopne (bad) pop mov test ds or rex and adc outsl movabs add test cmp jmpq je bswap jmpq jmpq or push xchg jae xchg sbb jmp mov (bad) (bad) and or insl (bad) pop nop rex.X cmp and out cmpsl lahf mov cmp rex.WRB rex.RB mov sbb mov lods rex.W xchg push push jmpq and in clc clc add mov out (bad) je or mov mov pushq mov xchg push cmp gs cld enterq rex.WRX repnz cld cmp (bad) sti mov and test (bad) (bad) (bad) pushq adc jmpq mov (bad) (bad) callq add sub xorl jnp push jnp callq iret or scas ror (bad) out shr cmpsl xchg fwait xchg in jne pop bnd or test (bad) push cmp int xor sbb in movsl push (bad) shrl (bad) (bad) orb jns mov rex.WB pop and sbb add pop insl pushq pop stos add xor test (bad) lret xchg rex.RX jae mov outsb push test pop sbbl jne adc push lret imul (bad) mov (bad) cmp addr32 (bad) (bad) (bad) sti out (bad) rex.WX (bad) (bad) inc fcoml jmp (bad) hlt add add sub add jns outsl add mov lods or cmpsb (bad) out lcall xor push (bad) xchg icebp cltd popfq mov mov push (bad) popfq int mov rclb movsb pop xor jge push cld mov rcl add dec movl (bad) icebp add bsf shr mov clc cmp jmpq jmpq je shld shrd push btr adc neg mov bt cmc cmp sub jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add (bad) jmpq jae bsf (bad) testl not rcr seta mov shl mov mov mov bt stc bt xor test repnz jmpq je jmpq and sbb icebp nop scas (bad) ljmp sahf mov adc imul mov (bad) iret jbe xor jne (bad) cwtl test pushq test fstl divb sub test push add jrcxz (bad) and pop (bad) fidivr (bad) cli cmp or jns push fidivl out in (bad) (bad) jbe mov test cmp gs add (bad) js (bad) (bad) rex.WRB scas mov cmc or sbb jrcxz movslq xor outsb cld jg mov mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) or xor leaveq mov rex.B cmp addr32 add add pushq movabs rclb outsl mov movsb mov (bad) rex.X (bad) jo mov movslq push (bad) (bad) push cmpsl mov (bad) mov mov (bad) push lock mov rol repz (bad) popfq mov sarl rex.WRB jp es (bad) xchg roll movabs push push fwait (bad) jmp movabs outsl push outsl push mov rex.XB (bad) addr32 sub retq sub rex.B mov (bad) (bad) (bad) incb roll mov lretq rex.R or out out adc mov add add (bad) jp shlb rex.R rex.B push cld (bad) ja and (bad) popfq ss fnstcw sub mov std pop fisttpl xchg mov rcll test loope jmpq mov sub xor cmc mov ror add sbb rol adc mov cmp cmc cmp cmp test jmpq gs callq lret (bad) sub int mov out sbb rex.RB cmpsl or jl and leaveq hlt mov jge or (bad) or out rex.WRX cmp test mov mov loop push shll jg loop ficomp movslq cmpsb (bad) rex.XB push repz mov jae lods cwtl fisub pop es jg in (bad) and in lods (bad) out (bad) (bad) (bad) sti lret lods adc (bad) (bad) (bad) cmpsl iret sbb (bad) jg lock out add add (bad) mov sahf hlt pop xor addr32 out (bad) int iret (bad) adc (bad) pushq neg mov jne (bad) mov sti rorb jb xchg lret clc push and xlat fdivrs int mov xchg stos lret out jmp roll xchg mov jmpq jmpq jmpq je jmpq je sbb push sar movsbw data16 icebp mov clc test sub jmpq loopne shrb lret xchg sub push adc add idiv mov jmp fwait pop (bad) pushq rex.WB rsm pushfq rex.R cmp (bad) movabs fcomps pop rex.R ss (bad) (bad) incb push pop rex.RX (bad) hlt in sbb or jnp (bad) xlat fwait imul add sbb (bad) fldl mov sbb ud1 movabs rex.WRXB jne or movabs fmull ds imul xchg pop cmp pop rex.W push add adcl cmp add mov jb jrcxz rex pop (bad) jl repz lea test push mov loopne movabs rex.X xchg push cli loope shrl movsl sbb sarl (bad) int3 (bad) fstl loope (bad) (bad) sub jp stos cld sarb (bad) (bad) je roll out cmpsb scas movsb xchg jp (bad) rex.WRX (bad) (bad) cld adc (bad) (bad) lcall (bad) jle frstor std sub (bad) pop push rex.B rex.B lods test out or add add cmp testb (bad) nop clc (bad) (bad) sti cmp cwtl sbb (bad) jp nop rex.R rcll jbe test jl retq sub mov or (bad) rex.WR es jo cltd xchg lret mov movsl movl cmp es xchg mov cmpsb enterq adc xorl iret and pop sub movabs xchg mov (bad) fs in lcall test jne adc rex (bad) (bad) cld rex.R movabs repnz sub movabs adc xor imul rex.WRX movsl int3 mull pop dec (bad) push loopne mov fbld addw or rex rex.WX xchg movslq add add imul pop int3 mov xchg enterq cltd leaveq mov pop ja mov mov cs movabs js retq push or mov loopne mov (bad) mov xchg in (bad) jmpq jns stos mov (bad) (bad) cltd pushfq js (bad) repnz xchg and pushfq cld loop ds fildl push fiadd pushfq mov (bad) xchg rex.XB push lret lods insl or sub mov vmovss adc pop stc xchg sub pop xchg kaddw rex.XB pop sahf js jle sbb shr (bad) (bad) (bad) (bad) cld js movabs rex.WXB adc fidiv sahf std fnop mov rex.X xor icebp movabs stc mov test fs movabs jg mov callq add push pop adc cwtl fcoms add (bad) jnp js mov sahf mov and mov or insb cmp (bad) data16 pop lahf scas ja iret insl pop outsb mov (bad) xchg sub rex.X imul out (bad) mov jp cltd rex.WB mov addr32 je (bad) push rex.WRB movslq adc or adc in scas and (bad) jle sub test repnz je icebp std (bad) xchg (bad) add sbb lea (bad) (bad) cli mov (bad) (bad) (bad) std xchg (bad) pop adc pushq lods mov adc sbb sbb (bad) adc repz jbe adc jrcxz (bad) in (bad) rex.WRB mov enterq fwait (bad) mov imul pop lret in fmuls fdivl sahf rex.W (bad) (bad) inc mov movsb pop cmp sub (bad) (bad) rex.B movsb outsb add cmp lods (bad) (bad) stos sbb negl mov mov and fsubl jmp jg fdivs (bad) rex.WXB push fdiv lcall add mov jb test js decl and mov xor out hlt cmc or scas jno imul xor mov sub pop rcll cltd sbb xor xchg negl mov (bad) jo (bad) rex.WRXB rex.WB in (bad) mov adc (bad) (bad) (bad) out cltd jg insb jno rex.RX iret lahf fildll sbb ss mov add fcom jae test (bad) in sbb rorl xor jl rex.WRB xchg jg push fldcw add push (bad) push out (bad) cmp andb movsl sub int mov (bad) xor add neg cld rolb xchg lods (bad) int rex.RXB rex.B add shrb (bad) out int3 repnz in (bad) adc or jae mov outsl adc cmpsb mov retq cli test movsl mov xor (bad) (bad) jp sub repz or loopne xlat movabs test sti adc or in (bad) (bad) xor pop or imull push jns xchg (bad) cmp and ja mov (bad) xchg or mov mov mov movslq jo test sub in adc (bad) adc in (bad) (bad) callq pop (bad) loopne add xorl add mov jrcxz (bad) (bad) pushq (bad) xchg rex.WXB sbb pushfq std cmp cli xchg or movsl add xchg (bad) insb or mov rex.XB fldlg2 jge push callq jmpq sbb push add insl rex.WRB sub retq repz and int adc (bad) cmpsl and (bad) push rex.R sahf std xor shll (bad) test pop jnp mov jmpq rex.WR rolb mov cli addr32 mov es ja or imul or xchg scas rex.WR mov nop xchg (bad) pop idivb (bad) enterq jrcxz loop (bad) movabs int (bad) rorb fdivrs ja mov fnstcw sub adc mov fldcw fadds pop mov mov nop (bad) loop (bad) lods ror (bad) enterq sarb push (bad) xor cmp movslq test xor (bad) (bad) (bad) decb (bad) (bad) pop mov imul pushq retq loopne ja out (bad) cld push shrl rclb pushq jge rol adc jp cwtl xchg in jno or (bad) enterq pop imul (bad) push or rex.XB (bad) (bad) rcl mov sbb (bad) movabs rex.R or mov sbb (bad) hlt (bad) sahf (bad) mov movabs (bad) (bad) lret or stos rclb rex.RX xor repnz xchg add movsb rex.WR rex.XB enterq mov mov (bad) mov sbb add (bad) (bad) test (bad) mov (bad) addr32 jb and mov sub (bad) pushq and pop add mov mov xchg subb sahf mov and nopl fidivl or mov fcomi or cmp in jmpq rol incl clc cmp clc cmc test jmpq cmp xchg (bad) outsl add fcompl (bad) (bad) or push rex.R adc fcompl loopne lret repnz mov pop stos (bad) rex.RB jmpq rex.W out push xchg rex.B mov mov addr32 mov xlat icebp lahf fcoms cmp repnz lods mov cwtl enterq (bad) pop (bad) popfq movabs pushq (bad) (bad) (bad) cli in sbb jge (bad) (bad) std leaveq (bad) xor movabs scas cmp jo xor add or (bad) icebp sbb add pushq (bad) jle cmp (bad) (bad) cltd mov (bad) jo out out (bad) (bad) push add xchg test sbb imul mov adc addr32 rex.R rex.RX (bad) jle mov fmul std out cmp add jmpq xlat (bad) fdivs pushq fcmovne test addb sub lret pushq (bad) rclb mull andl rolb fstpt mov fs in mov movsl fadds pop (bad) and test or pop lods repz fwait jg sbb add cmp (bad) out (bad) (bad) (bad) cld test stos adc (bad) (bad) jmpq or sbb cmp jne iret add sbb rclb add std fwait cli and or add (bad) add hlt pushfq int3 loopne adc add add jno jno mov xchg add shr es pop callq mov roll mov jmpq cld insl xor (bad) movsl int add clc push xor mov (bad) xchg fmuls test lock jmpq jmpq test (bad) shll jbe xchg fucomip mov and repnz callq mov nop nop rex.WX mov (bad) movabs test rolb (bad) jle sub test rex fiaddl (bad) cld cmp scas xchg (bad) push sub out or jge (bad) (bad) sub cmp (bad) (bad) and xlat cltd (bad) (bad) (bad) incl adc ror mov mov out jge fadds adc enterq (bad) jle (bad) loopne add add sub pushq jo sbb leaveq movabs (bad) lods pop psraw sbb push sarb pop stc mov rex pop out (bad) movsb (bad) (bad) repnz (bad) sub sbb in rex.WXB insb pushfq popfq mov mov mov rex.WRB jg (bad) and lods sbb mov pop addr32 scas rex push mov (bad) clc push rex.RX rex.WX mov cmp mov jl pushq out adc out jp out out xchg push (bad) jb adc loope (bad) addr32 push std fistpl movb sub rex.RXB push rex.WB ds sub xchg mov jge xor pop cmp xor outsl lea sahf pop (bad) out (bad) (bad) decb (bad) (bad) (bad) callq movabs in adc scas sahf cltd fsts rex.RXB cmp (bad) xchg (bad) imul (bad) imul xor (bad) sub adc push out stc (bad) sbb lods fidivrl lcall movslq cwtl mov fbstp (bad) retq out (bad) jmpq mov incl jmpq jb jmpq je cmp bt cmc or jmpq jmpq cmpsl or (bad) data16 mov or lock (bad) loope jmp (bad) cmpsl mov (bad) jge lods fldcw jrcxz xchg (bad) (bad) movsl adc out hlt (bad) stos icebp rex.WXB sbb mov xchg ds stos jb rex.X mov (bad) std (bad) xchg and cmpsl imul adc push pop subb rex.WB jl packuswb rex.XB cmp (bad) (bad) retq push push insl imul sub rex.WX sub (bad) (bad) (bad) (bad) sti cmpsb and (bad) incb jae fidivrl xor sbb xor scas incb add add lea pushfq lret pop pop xchg test jp sub jge in out clc mov mov mov or repnz rex.WRX sbb jge jmp sbb rex.WRX xchg int3 movsl mov test push imul test add shrb bt ror jmpq jmpq adc mov sbb rex.WR cs lret cld or jrcxz sub movabs mov pop mov add mov test rex.WRX and jns orb push (bad) repz jmp and xchg retq (bad) rex.XB scas mov callq xor pop jb rex.WR push mov jle fcmovb cwtl rol push xchg and sub (bad) (bad) (bad) cli fcmove push inc (bad) (bad) (bad) std mov int3 in mov or movslq mov pop rex.WR rex.R add (bad) fnsave and mov ds and and and or xchg in add (bad) (bad) (bad) callq lods push pop jp sub sbb or sti cli xchg (bad) xor cmp jl movabs or loopne or (bad) adc test cltd sub jge fwait test jrcxz pop rex.WRXB rorb xlat rex.RB fdivs mov (bad) mov (bad) sbb pop rex.RB (bad) (bad) rex.WRXB cs out or mov ja cwtl sbb (bad) push retq xchg cmpl cmp movl sbb rex (bad) mov cmp test and mov (bad) (bad) (bad) sti lret and (bad) (bad) test hlt shll sbb pop rex.X cmp and test adc repz jmp (bad) cmp sbb adc xchg sbb (bad) add add jnp test (bad) or mov out (bad) sbb xor sub scas insb or sub test in xchg rex.WRX mov jae data16 cmp or push out pop sbb scas jg push adc mov mov rex.WRX cs cmpsl lods sbb xchg pushq rex.W mov jae push mov pushq (bad) test add pop mov rcr cmp add rcrb or xchg lock sbb mov lods loope rex.WX pop push (bad) int3 jrcxz mov cmp mov cmp jns jb rex.WRX or insl (bad) pop movabs cli (bad) pop push addl std ds insb push and repnz sub (bad) (bad) (bad) (bad) mov mov rex.X lretw mov push cmp rex.WRB cmp fwait in and xor add sti loope cmp and movsl test (bad) mov (bad) std cmp jg xchg add sbb xor retq jp xchg lret sub sarl scas shr or add add (bad) mov jne xchg movabs mov movabs sbb jg retq xchg mov in push insl or loope pop (bad) and xor es rex.W xor jmpq not jmpq iret rolb sbb cmp (bad) fbstp and iret cli scas (bad) retq test mov test (bad) rex.RX leaveq movsl xor sbb jae mov or jne retq (bad) (bad) mov mov sar xchg (bad) or cmp (bad) push cmp lods sti rclb test movabs mov jrcxz (bad) (bad) (bad) cld imul jge (bad) (bad) (bad) decl pop jmp rex.WX xchg fwait add rex.WRXB add add imul cs rex jg sbb pushq xor add movsl or mov sbb pop cs rex.R cmp and xor xchg es cmp sub jmpq jmpq retq mov in mov sbb push add and fstpl xchg mov adc adc loop xchg rex (bad) jp (bad) nop mov mov lock (bad) bnd neg jns mov je test (bad) out cld insb (bad) sbb or cmp sbb movabs and cld movabs jge (bad) cltd sbb push mov (bad) (bad) decb (bad) (bad) (bad) (bad) xchg icebp sub je sbb jo (bad) rorb lods nop cwtl scas xchg jbe out adc push mov fnstenv sub mov xor cmc xor add imul in adc mov rex.WRB add addr32 rex.X (bad) and mov xor jrcxz rorl xor and xchg mov (bad) rex.XB test (bad) (bad) movsb sahf out test shrb out rex.XB cs int3 push mov mov cltd mov out rex.X sub rex adc in mov out jmpq mov xor or cmp mov fbstp rex.XB stos adc adc push movabs lfs add or fisttpl push (bad) (bad) (bad) decb add movabs sbb test (bad) rex.WRB rcl rcrl scas shlb mov xchg mov pop (bad) xchg rex.XB test jo movslq sbb jae vunpckhps and rex.W adc pop lods rex.W inc btr mov clc add test cmp test mov cmp cmc test jmpq (bad) cs xchg mov clc pushfq test shrb outsb push test push xor mov pop adc fwait (bad) es fwait insb pop sub lahf mov add sbb outsl outsl (bad) xchg mov movsb rex.RX push mov cmp repnz fwait int pushq scas movsl mov mov jmp (bad) fwait xchg add in int3 pop push sub cmp sti mov (bad) je (bad) (bad) (bad) decb add and jnp sahf push subb test and push sub test cs loop (bad) jmpq cmp test push or rex.WB add js (bad) mov mov or xchg movb xchg repnz sti scas adc and mov jp in xchg fnstsw (bad) mov xchg mov hlt callq ss mov adc fdivrl in (bad) jmpq not sets jmpq je ror movsbw mov ror cmp add shld not rcl mov mov bt test jl bt test jmpq callq mov add shr ror mov bt clc test cmpb jmpq jne shrd btr bt mov jmpq bt add clc or jmpq bswap not movzbw pop jmpq test neg jmpq jae bt cmp jmpq neg jmpq push repz xor jg cwtl (bad) (bad) out or cmc in mov jne rex.WR fisttpll ror sbb stc repnz repnz ja pop (bad) movsl rex.RB xchg jmpq out nop push lock enterq ja rex.WB rex.XB rex.WR (bad) rex.B and mov rex.WR add popfq (bad) loopne (bad) pop (bad) fdiv or hlt jl rex.WRX (bad) scas cld mov ja std sbb es (bad) (bad) sti iret adc rex.WRB (bad) (bad) (bad) lods movslq (bad) push rex.RB jno mov (bad) popfq (bad) and add add sub xchg push add sbb retq add leaveq movsb rol and pushfq in rorl cmpsb sarl jno jmpq cmp (bad) lahf mov je (bad) pop addr32 rex.WRXB es es fisttp xchg movabs fdivr shrd add lea sar sub movsbw mov not mov cmc test repnz jmpq or cmp (bad) lods cltd or fcmovnu and popfq pushq (bad) mov (bad) outsl imul xchg (bad) rex.WXB pushq jle fs imul ficoml rex.WB sbb scas add ja movabs and push xor xchg mov retq cmc xor cmpsb int3 add stos (bad) (bad) (bad) cld sbbb ds (bad) (bad) lcall adc cmc enterq adc and cmp sub (bad) jg add add sub (bad) add (bad) insb jp in out jp (bad) pushq loop adc pop stos xchg cs imul jns lock sbb or sub push mov shlb adc in mov (bad) pushfq (bad) cs (bad) jmpq jne rcl mov cmp stc cmc or jmpq inc jmpq jne cmp movb bt js cmc test jmpq jmpq je stc lea movzbl add inc rcr sbb mov clc add stc jmpq out xchg rex.W ss in out js (bad) rex mov out xlat (bad) cltd lods leaveq mov js gs xchg (bad) sahf cli push and movabs (bad) mov (bad) es (bad) mov sbb xlat int mov pop push rex.XB fbstp pushq jge push loope addr32 mov ds cmp (bad) hlt test scas mov (bad) (bad) std sub gs (bad) (bad) (bad) mov push (bad) jbe insb xchg clc jrcxz (bad) mov adc cmpsb orl int3 pushfq mov loope adc jg add (bad) pop sti (bad) push rex.RX in std retq test jmpq stc stc test jmpq jne rcl neg mov sar inc movzbl add sub jmpq callq neg (bad) hlt btr bsr mov test cmc bt shl jmpq cmp test not test jmpq jae test add jmpq mov enterq movslq adc gs stc adc rex.W retq xchg (bad) stos movabs adc mov rex.WXB and fisttpl add or jle out scas insb mov mov je add sti rex.WR rex.W xchg mov (bad) rex.WR cmc rcrb (bad) xor cld rex.RX (bad) (bad) (bad) cli stos movsb cmp rex.R (bad) (bad) std mov cmovno ja (bad) iret pop sub xchg imul and mov rex.R rex.WRXB mov adc iret add (bad) sbb scas sub callq rex.XB idiv (bad) (bad) pushq cmpsb sbb mov sbb movabs fsts retq jnp cmp stos test (bad) fdivrs mov (bad) mov xor (bad) cmp push xor lods lahf mov in push insl sub cmp xor lret pop xchg callq sub fs mov jo or imul mov sub mov jle (bad) imul mov (bad) (bad) (bad) (bad) jns movslq fidivl in adc rex.WRX ficoml retq jb xchg (bad) (bad) std (bad) xor mov add jbe cmpsl sbb add sub std xchg rex.WX xchg popfq lret cltd mov rex.R xor gs (bad) xor ffreep mov out test gs add and cmp je xor pop rex.WRB insl cld jnp xor movabs cmc (bad) rex.RXB add outsb (bad) add lods (bad) cmp and pushfq rex.XB jbe in xlat out xchg inc in mov xor pop stos mov xchg iret adc (bad) pop (bad) (bad) callq rex.WXB sub (bad) (bad) (bad) sti nop rclb (bad) (bad) (bad) (bad) (bad) outsb (bad) rex.XB (bad) cmpsl testb leaveq pushfq in xchg (bad) (bad) (bad) (bad) out xor add ror fcmovu sbb sbb lret stos sbb callq movabs div lahf cmp (bad) jp or (bad) mov fidivrl mov out pushq ja add sub cmp bt cmp test cmp jmpq je xor mov test push jg stc rex.XB cmp adc pop push sub flds push fdivrl rex.RB xor test rcl mov adc fsubs adc cmpsl mov cmpsl sub stos (bad) (bad) imul imul sahf cltd rex.WR mov jb sbb outsb jbe push ds mov mov push jg,pt adc jbe cmpsl mov rol cmpsl sub xor (bad) (bad) (bad) cli (bad) xor adc (bad) (bad) std lods movsl popfq or imul lods add add adc mov clc (bad) rex.WXB mov incl mov rex.R rex.WR rclb (bad) (bad) decl mov scas (bad) cmp cmp (bad) jmp fstpt movabs pushfq (bad) adc outsl jbe shll in rex.WXB and (bad) cmpsl (bad) xchg test es (bad) jns lret in cmpsl (bad) mov mov adc (bad) or mov (bad) div add outsb cmp or test cld and insl pop fs out mov (bad) xchg cli pop cli fnstsw mov mov callq cmpsl sbb (bad) popq ss rcll mov mov rex.XB and test (bad) mov xchg mov (bad) (bad) (bad) sti pop callq (bad) (bad) (bad) adc je outsl sub jo lret mov (bad) (bad) callq and lea cmpsb mov in sub push sub jno jns xchg pop xor cmp fbstp loope cli push cmp sub add sbb xor mov repnz int3 (bad) incl callq callq xchg rex.WRXB (bad) pop std xchg (bad) pop jo adc mov mov in adc mov mov scas sbb and adc imul pop int imul sbb int adc and sub (bad) (bad) repnz (bad) mov in rex.WRX add fs outsl push rorl (bad) mov mov movsb pop imul rex.WB add sbb pop or (bad) (bad) sti mov lea (bad) (bad) (bad) decb js rex.WRB int3 xchg xor int popfq add add add cmp (bad) fwait movsl lret jo movslq movabs (bad) xor xor mov fs jge stos test rex.XB notb rex.WB es ss test mov (bad) or mov repz lret xor add add nop movslq outsl push (bad) mov in or add rex.WXB add sbb xchg rex.X es push mov stos cld push jae cmpl cltd insb (bad) roll mov xchg addr32 mov test fidivrl xor (bad) mov notb rex.WRXB lahf fldenv rex.RB (bad) (bad) (bad) and sarb rex.RXB gs (bad) lods incb (bad) lock (bad) (bad) cld xor movsl stos sbb adc out mov add fnstsw mov scas lods fs in mov out xchg xchg add (bad) xor icebp pop cmp (bad) mov add mov fsubl stos rex.RX jb imul add mov jmp mov in rex (bad) mov test retq add jno pop jae addr32 imulb movabs repz (bad) jmpq test stc clc test jmpq jne stc movb cmp clc test jmpq ja sar neg not not sub or shl neg bswap add shr inc cmc test mov stc rol clc mov stc stc repnz jmpq clc jmpq icebp (bad) rcrl rclb xchg rex.WRX (bad) cs test (bad) mov mov rex.WRXB push (bad) and movabs adc test fstp lret (bad) rex.RX cld icebp rex.WR rex.WX pop adc adc mov cmp rex.WRXB or (bad) (bad) (bad) ljmp sahf add cmpsl and mov cld roll and mov (bad) loopne (bad) mov cmpsl sub retq in mov cwtl sti std mov outsb jmpq add mov (bad) add pop rcrb icebp xor repnz outsl shrl movsl rex.WXB movabs stc shlb es es jae divl (bad) jmpq leaveq sbb out int3 (bad) icebp nop (bad) fldcw (bad) (bad) push mov movslq mov sahf repz rcr (bad) cmp (bad) xchg adc rex.WRB repnz sahf mov xlat int3 outsb (bad) mov in xchg jrcxz movabs (bad) mov stos (bad) (bad) (bad) sti addb out rol jnp or lods jbe sub xor sub mov sarl in pop pop mov rex.XB rex.RX sti mov mov in fistpll (bad) pushq (bad) (bad) (bad) sbb xchg pushq sub es mov add lcall mov or callq (bad) mov xchg pslld movsb cmp adc (bad) push cmp js pop rex.R rex.R cmp (bad) cmc (bad) js mov test (bad) cmp mov jl callq jmpq (bad) (bad) gs (bad) mov adc (bad) sbb add (bad) cmpsl cltd (bad) mov sbb fldt pushq out and (bad) pop xchg push in add popfq jnp xor cli jnp movslq fcmovbe jmpq cs cs rex.RB scas pop gs add stos sbb stos shlb xor sar sbb or adc (bad) loope push mov (bad) mov gs fs rex.WXB ror xor cmp lahf rex.RXB (bad) (bad) cld mov sub (bad) (bad) (bad) ljmp movabs pop test mov mov pushq jl pushq mov xchg add adc pop rex stos bnd cmpsl add add adc add pop scas lret mov sbb cld cmp sbb and add sti (bad) or mov xchg jb je fwait scas mov jg test and fbstp rcll or push test mov loop jg (bad) mov jb test (bad) js and mov in imul loope jno mov jb fisub (bad) xchg (bad) cmp popfq sbb pop jrcxz pop scas enterq jle sbb mov mov movsb (bad) stc sub rex.WRB sbb ss (bad) idivl adc (bad) (bad) decb (bad) (bad) (bad) inc rex.WRB divps cmp repz mov cld std mov loop repnz mov push vmaxps movabs (bad) sbb cmp jge and retq mov lods insb cmp je jmp lods xchg add imul adcl sub nopl repnz xor adc test sbb movabs (bad) movl es (bad) rex.RX jmpq stc or jmpq xchg mov mov movabs gs (bad) sub adc loopne,pn test (bad) insb in mov xor cwtl stos std test xor cmc xchg (bad) mov sub (bad) cli xlat or retq (bad) imul jge (bad) movsl cmc rex.RXB add rex.RX jge sbb add rex rex.WB rex.WRB sti idivl (bad) in (bad) (bad) (bad) (bad) (bad) int3 mov repnz scas pop or rex.WXB add lret xchg xchg std fisttpl mov movsl rcrb sbb cld mov adc (bad) insl jns xchg mov in fnsave and pushfq mov clc je rex.B or add movsbw bswap lea jmpq dec add in mov push out vandps (bad) (bad) test (bad) (bad) adc clc movabs lea jb add cmp addr32 or jno int3 cmpl mov or cmp rex.B repz pop push out je add (bad) (bad) (bad) sti (bad) pushfq fnsave (bad) (bad) (bad) (bad) mov or (bad) imulb cld or cwtl xchg mov add add (bad) movabs out cmpsb test push cmp rex adc (bad) add adc fs mov xchg mov jg mov (bad) mov repnz roll rorb cmp add movabs (bad) callq cmc test cmp jmpq jmpq je jmpq push stos rcrb mov lcall cmp (bad) rex.RX (bad) rclb je imul lock sahf (bad) push xchg mov and jne jge lret xchg fnop js jmp pushq retq cmc jmpq lods xor adc rex.WXB sbb sub nop mov sbb jae mov jo xchg movabs gs (bad) (bad) sti lods ss clc (bad) (bad) (bad) decb out sub out mov rex.WX rex.WXB retq (bad) add add (bad) stos or mov pop addr32 mov (bad) lahf negb (bad) (bad) rex.WR push loop mov out pop int mov icebp pop rex.WR (bad) out lcall jne nop mov cli (bad) add or sbb (bad) incl (bad) in sti ja jbe imul cmp or xor pop cmp idivb add scas push pop xor repnz nop mov sbb pushq xchg (bad) insl add movslq imul cmpsl and mov mov imul cmp (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq (bad) gs rex.WB jg lea (bad) outsl stc lcall pop rex.W mov mov xchg std (bad) imul popfq gs xor (bad) jg jbe or (bad) jbe pop (bad) jbe jrcxz rex.WRX xor pop mov fwait (bad) adc cli pop cmc jmp push (bad) es outsl (bad) jns jle mov cmp in pop or shrb mov (bad) xchg test (bad) adc divb in ljmp scas mov xor (bad) add sbb ss in lock add sahf cmpl test jmp cltd rex.WX pop lods cld pushfq rex.XB mov in mov xor out fadd or mov cmp (bad) mov mov adc rex.WRB repnz pop adc or rex.WRXB mov jbe and fcomps (bad) (bad) (bad) std or fs xchg cmp jmp sar (bad) (bad) std vpavgb movsb jmp and mov add add ja and sbb xchg out movsl iret lret movsl sarb cmp mov and jae adc sub rex.R mov stos mov mov fdivrp cmp test fidivl xchg adc pushq mov fisttpl js sti movabs fidivr mov cld (bad) gs mov jmpq stc mov stc movabs add (bad) stos (bad) hlt lock jb jle rex.X pushq sarb (bad) jl jle xor jp (bad) fnop mov ja rex xchg cmc out (bad) bnd fcoml fldl or (bad) icebp and sub movslq in jmpq or mov (bad) xor mov xor rolb lretq (bad) (bad) (bad) sti fldl2e movabs rolb jns jne add add imul jne mov fwait sub jmpq xor rex.WRB enterq in js rex.WXB adc cld cmp mov jge mov rex.XB clc jle mov outsb mov std xchg push std jmpq jmpq movzbl pop jmpq test cmp jmpq divl cmpsl (bad) pop lock jnp callq fcmove hlt out (bad) pop mov push orb mov lret and rex.WRX fistp xlat sub cltd push sub out movabs in lret loop fsubr xchg add cli hlt cli movsb cld rcr test cmp scas movabs (bad) (bad) (bad) cli (bad) (bad) mov (bad) (bad) (bad) (bad) std lods pop orb jl sub rex xor mov cltd (bad) mov rex.RB fmuls repnz xchg (bad) (bad) (bad) jmpq roll ja xor (bad) (bad) insl rex.R jae pop cmp or stos mov (bad) and (bad) (bad) out and xchg mov (bad) (bad) (bad) adc fdivp lods and xor (bad) mov (bad) loopne fnstcw add cmp cmp fcomi jmpq callq jmpq addl sub cld pop (bad) lea cmpsl pop test lahf scas push and mov (bad) mov xchg sbb ds mov push mov (bad) cld rex.WRXB movabs lea sbb (bad) sbb shll lods in and rcrl (bad) (bad) ja add mov cltd mov shrl (bad) xchg stc ja xchg jge cmp (bad) (bad) xor (bad) (bad) (bad) sti fyl2xp1 xrelease (bad) (bad) decb (bad) test fcmovnb cmpsl and (bad) xchg rex.W rex.WB add add or adc adc mov (bad) rex.XB mov cmpsb (bad) jae jns pop cmp jg sub fidiv mov jae decl add rcr rol rcr mov stc test jmpq movsbl lea jmpq rep movzbq jmpq jmpq jg xchg movsl sti or push std in retq callq push xchg (bad) cmp incb outsb in adc fimull adc scas push (bad) mov mov pushq (bad) sbb js jo and test and movabs xor mov rex.WRXB movabs mov mov movsl sbb movslq or in mov sbb xchg (bad) jo add test and mov and (bad) (bad) sti data16 js (bad) (bad) (bad) incb mov cmp gs rex (bad) rex.WXB (bad) (bad) inc add rex.X mov and es xchg and test lods lea movabs test and adc mov cmp xchg rex.XB rex.WX add mov jmpq shr mov sub xor jmpq xchg sahf (bad) mov imul lahf sbb and lock cmp or fs (bad) cmpsb cmp mov xor shll scas icebp cltd jns cwtl mov xchg test mov cmp pop (bad) adc sbb pushfq loope (bad) cwtl or cli mov out cwtl xchg out rex.WXB (bad) setl pushq (bad) ja fist cmp sti mov xorl (bad) decb (bad) jg xchg (bad) xchg (bad) scas mov and mov add add sbb movups add loopne jb and rcl jns mov pop out rex.WRB test imul std cli xchg int (bad) lahf mov sub test mov add jo icebp jmpq jno sarb sbb mov ds movl fadds repnz (bad) pop or (bad) (bad) xor mov xchg (bad) (bad) jno xchg or xchg imul jge jno out xchg (bad) rex.WRB lock jae movabs cmp loop test (bad) push pop add xchg mov test rex.WRX (bad) movabs (bad) callq add or (bad) notl rex.WRX (bad) movabs test test add loop cmovp cmp (bad) in outsb int out movabs (bad) cmp pop nop lahf mov cmp movsb mov sub cmpsb mov xor (bad) push jg out movabs xchg xor out stos imul movabs in xchg cmc in callq (bad) mov movsl (bad) out add mov mov movabs adc mov xchg mov (bad) fild mov add add and insl xchg ja (bad) repz lret js iret repz mov (bad) sub adc cwtl adc jae jo jrcxz stos cmp cmpl (bad) lock (bad) (bad) cld imul (bad) (bad) incl movabs (bad) enterq fdivrl sti xchg sbb adc incb add add xchg fstps and mov (bad) add mov sub (bad) cmp (bad) xor push js pop cmp loope sub repz (bad) add scas cs jmpq mov and icebp decl test cmc cmp sub test clc cmp cmp jmpq add push (bad) je rex.WRB je pushq add movabs lock movabs adc fidivr (bad) fist cmovns addr32 ffreep mov xlat rorl icebp pushfq notl mov clc (bad) xor insb imul fisttp jg adc fdivrs fldenv scas sub push (bad) rex.WRX enterq sbb xchg push (bad) (bad) (bad) (bad) xchg xchg test pushq adc push movsb fdiv pop fldcw xor xchg mov sub pop test stos lock movabs adc rex.WRXB cmpsb enterq (bad) sbb rex.WX cmpsb (bad) cmp je imul cmp (bad) (bad) rex.RX cmp or cwtl icebp insl mov movsb (bad) xchg mov or leaveq mov cli and retq rex.WR cltd and (bad) sub hlt out (bad) in and mov scas sarl sub jl mov repz rex.W movabs pushq (bad) mov mov (bad) xchg xchg push cmp out sbb (bad) cmp jl jmp repz adc mov add jmpq jb clc clc stc cmp cmpb jmpq jmpq add add (bad) movabs stos mov nop push jle add insl push add ja mov insb or sbb loop add fcom jae mov rorb (bad) mov mov pushq data16 lret roll fisubrl sub insl leaveq insl shr sbb mov out lahf (bad) icebp mov lret (bad) jnp lret lahf icebp popfq std (bad) jp loope mov std or cmp std mov test jne cmp (bad) (bad) push pop add add or movabs (bad) test rex.W (bad) sub retq movsb mov movabs xchg (bad) je in adc (bad) (bad) cmp xor or out repnz test push rex.WX mov imul lock cltd xchg add pop mov sbb out jae sbb mov xor adc pop and hlt mov add (bad) (bad) rex.WRX test add sti cmp (bad) mulb add rex.WX xchg add callq mov (bad) pop fildl fwait int sub (bad) cmc xor leaveq push xor mov div pop adc cli mov xchg (bad) or lods cmp sti mov cltd fsubrp (bad) (bad) (bad) (bad) imul xor ffree scas jmp ja xchg xchg (bad) (bad) (bad) jmpq xor push retq sub addr32 or jp pop movsl shrl add xor or jmp jnp cmp mov insb lret movslq (bad) outsl jrcxz (bad) rex.WRB mov (bad) mov pop cmc mov stos ffree xor out pushq sbb xchg and test test cmp mov mov stos and js loope rex.WR addl mov cmp movslq add jmpq retq fdivr (bad) mov or pushfq rex.W adc mov lcall mov cli mov out rex.WX (bad) cld cmp (bad) (bad) (bad) lcall rex.W std xor (bad) insb (bad) imul vmwrite scas cs rex.W rex.WXB enterq sub in cmp add sbb sub (bad) rex.RB mov push (bad) jp notl mov hlt movabs mov (bad) (bad) jrcxz jb test sub adc rex.WR rex.RXB cmp push lock movsl leaveq (bad) movabs cwtl xor jnp int3 lods stos rex.WXB lods (bad) (bad) lods shlb rex.WR xchg cmc cltd rex.RX jle rex.X lods and ss mov add je pop xchg sti sub cmp or and xchg movabs scas gs retq mov or retq jo xchg out mov pop mov test lret pushq test rex mov cli mov mov and (bad) (bad) std xchg rex.WRXB mov fsts cmpsb inc xchg push sub rex.WR sub xor (bad) (bad) decl (bad) mov movabs add test or push (bad) pushq push add scas pushfq iret mov pop std or out mov sub mov or (bad) jl stos pushfq mov or and icebp (bad) jmpq rex.WRX std push orb imul cmp enterq push test cli pushfq push mov or (bad) and sub (bad) ljmp (bad) jmp xor xchg outsb xchg rex.WXB stos (bad) jae xor push test xchg pushq jnp xor stos xor fwait lret (bad) rex.RX ss xchg add cvtdq2ps (bad) (bad) cld sub lods push jne (bad) (bad) decl enterq jbe (bad) es sbb sbb push out or jb sub or imul jae sahf faddl jo cmpsb sbb adc js add cltd mov pop mov (bad) retq sbb mov add add popfq mov sti lods rex.W jle pushq add push (bad) pop jb lret sbb rex.WRB imul imul add push test mov sarl xor mov or (bad) sub (bad) sahf cmp movabs xchg test pushq mov jmp mov out (bad) xor rex.W sbb lea or add in xor pushq (bad) mov jl rex.WB decb mov cli data16 ficoml mov push and mov and pushfq divb popfq (bad) std xchg icebp mull pop cmp rorl (bad) adc pop repz or (bad) mov pushfq (bad) (bad) (bad) (bad) sti mov stc (bad) (bad) (bad) incb fldenv (bad) (bad) jmpq rcr or jmp mov jp outsl (bad) (bad) (bad) rorl callq adc adc jp scas mov rex.WX lock cmpsb leaveq mov pop hlt sbb test mov jge js push (bad) (bad) pop jmpq xor (bad) loope (bad) or adc adc add rex.WB imul add jg not not bswap not pop jmpq (bad) rex.X test vandps (bad) rex.RXB (bad) jns sbb xchg repz push lods nop rex.RX mov (bad) rex.RB jg mov (bad) movsb jp fisttpll and (bad) rex.B ss mov mov sahf mov jae or movsb movabs (bad) sti (bad) adc (bad) xchg rex.WB add add cmc mov (bad) hlt lock cmp rex.WR repz rcr gs lret outsb rex.XB rex.B rex.WRXB adc fadds xchg js (bad) idivl cmc in mov fcoms push movabs es (bad) rex.WXB lods mov pushq mov sub cmp movsl push adc mov clc test in (bad) sbb js rex fcmovnb loope sti outsl jo xchg leaveq (bad) mov incb jns js rex.R (bad) jns and xlat (bad) outsl jno rex.RB movslq fsubl jp rex.RB ja fsub fsubs (bad) in fcmovbe sub (bad) lods mov xchg (bad) cmp rcrl rex.RX movabs (bad) jnp cmp hlt adc jno clc out xchg retq sahf adc loopne outsb es sub mov jae rex.R mov icebp add pinsrw jge rex.RXB cmp mov rex.W mov rex.RX int mov mov mov and lea (bad) and sarl sub jo nop jne rex.RXB pop or icebp int3 (bad) pop push sarb icebp stos rex.WR stos clc iret fwait rcl xor es orl jl orl (bad) fcmove mov xchg rex.WXB jg (bad) (bad) roll movabs addr32 cmp orl in and push push iret pop in (bad) or cmp (bad) (bad) (bad) sahf mov xchg rex.WB outsl (bad) int fsubrl (bad) pop pushq sbb lock std roll add cld clc sub rex.X add test adc test roll pop mov rex.WB jno ss push cmp shlb movsb rex.RB sbb movabs fs xchg subl (bad) repnz mov fidivrl in rex.X rex.R rex.B xchg rex.WRX rex.WX jle nop mov xchg std push cmc mov jrcxz sbb (bad) sbb mov (bad) fildll rex.XB in decl xchg (bad) mov jmpq jmpq mov lea bswap jmpq jae sete xchg rcl mov shrd movsbw bswap mov neg or mov stc cmc xor stc repnz jmpq rex.RXB fnstcw xor scas sbb jo rex.XB fsts jl mov mov (bad) lret ss ficoml jg xchg and pop imul sub retq fmull repnz fwait (bad) es adc leaveq mov test jmp rcrb (bad) jae retq mov loop movsl cmp mov outsb jns rex.R fs rex.WX ficomp rex.WB callq retq sbb (bad) (bad) std movabs (bad) or insb sbb cmp rex.WR (bad) jge clc repz movabs lea roll rex mov (bad) (bad) lcall sar xchg rex.WX add imul jns rex.RXB rex.W (bad) movabs (bad) pushfq scas rex.W retq xchg stc outsl leaveq rex.WR xchg (bad) divb mov jmpq imull or (bad) notl cld mul fisttpl xor fist mov mov xchg cmp pop shrl sub xor in retq shlb xchg cs sub sub xchg shrb addr32 rex.WRX movslq lret jne adc test pushq lea int3 out movabs rex.WR rclb rex.WRX (bad) adc xchg sub rex.R rex.WX rex.RXB (bad) std sub add add mov cmpsb int3 xchg fmuls rex.RB jns mov sbb add rex.RX in scas jg and sub lea adc sbb movsl sbb roll js jle movabs mov mov rex.WB and (bad) fs sbb ds sub sti rex.WRB rex.WXB rex.WRXB jl movabs sub sarb push scas add stos movabs mov pushfq sbb adcl lahf and (bad) (bad) std mov (bad) xchg nop addr32 sbb push shlb xchg rex.WRXB or cmpsb push jns je addr32 xor xor mov push out xchg and out pop adc mov sub cmpsl (bad) (bad) (bad) callq fisttp or iret mov pop xrelease mov lahf movabs mov callq or xor (bad) (bad) add jge push pushq fisttp mov adc lea lea bswap movzwl not lea mov lea jmpq add lods mov cmp (bad) sbb pop test mov push mov loopne add mov adcl mov rex.WRX and scas add fdivrl cmp inc lahf lea mov ds (bad) mov loope sub xor (bad) in mov and xor or retq adc (bad) faddl (bad) (bad) sti rex.RX retq (bad) (bad) (bad) (bad) and repz xchg sub fwait jns rex.WR sbb movsb xor rex.WRB (bad) jrcxz jne mov (bad) jno stos (bad) sbb loopne cs (bad) xchg mov cmp xlat push or or push loop (bad) mov jo fsubrs add cmc push cmc fbstp mov adc pop test (bad) icebp decl test test (bad) jmpq jmpq mov retq lods lahf mov rex.WRXB sub movsb (bad) out ss xor addr32 add movabs rorl mov rex.X adc rex.RX mov xor lock pushq int3 (bad) (bad) es gs or scas test rex.R repnz (bad) mov and adcb loopne callq or cwtl insb jg fnsave test movabs (bad) popfq outsl movabs mov (bad) (bad) scas rex.WRX (bad) (bad) sti mov rex.RXB (bad) (bad) (bad) (bad) (bad) scas pop add rex.R stos (bad) (bad) (bad) jmpq (bad) (bad) mov and movl retq je (bad) out pop add cmp xor retq jns (bad) cmp (bad) retq rex.XB stc cs rex.XB add (bad) adc ds cmpsb adc xchg cwtl cmpsb pushq mov jle mov repz (bad) mov mov repnz cld or fwait add (bad) xor leaveq sbb sbb (bad) rex.WXB (bad) (bad) xchg mov cmp repz (bad) rex.XB adc adc cltd xchg and jl lahf sbb cld pushq stc mov (bad) (bad) (bad) incl and test insb and (bad) (bad) (bad) sarl (bad) sub imul rex.WRB add add pop mov mov xor (bad) movsb rorl insb scas test or rcr jnp ds mov jno shll sub ja sub ffree movabs pop xchg mov test jmpq jne stc movb test bt test clc test jmpq jmpq pushfq scas sti jl jg,pn (bad) mov push je adc pushq or adc (bad) (bad) fdivr mov stos out (bad) lret in push (bad) int3 test iret adc xchg fistpl movslq push or mov andb popfq xor and sub mov sbb adc jae jle jrcxz cmp (bad) (bad) (bad) sti cmp (bad) (bad) (bad) (bad) sbb imul pop (bad) pop outsb lret sbb pop adc (bad) (bad) lcall (bad) xor fisttpll outsb test rex.XB cmp in callq xchg enterq movsb enterq mov jae movsl mov mov (bad) or sar fisttpl jl in (bad) and xchg (bad) insb pop rex.X movabs rex.RB mov (bad) sti in (bad) pushfq imul fcompl rex.W out jb (bad) pushq icebp pop adc in in xchg rex.WR jns cltd out (bad) and mov addb movabs jo std hlt cmp jg mov outsb mov lahf and pop mov (bad) (bad) (bad) sti (bad) lahf mov mov (bad) (bad) (bad) sbb cmp out (bad) (bad) (bad) lcall mov fadds je js addr32 rex.WRX add xor movsl cld rorl (bad) lret pop adc sbb mov (bad) sub scas lea lods sar xchg (bad) jge popfq sub (bad) (bad) mov pushq or insl push (bad) sub sahf sub movslq (bad) or add fdivrl enterq pop (bad) sub ds adcl mov jae xchg rex.B sti loop (bad) (bad) (bad) std or rex.WX std rex.WRX jne pop out movabs ljmp (bad) decb xorl or and sub jge jo cmpsb mov xchg popfq (bad) (bad) lods pop out fstpt mov (bad) jae push loope pushfq jg repnz rex.B scas lods mov mov sbb imul lods jle jmpq not movsbl lea mov movzbw not mov mov mov lea lea jmpq lea rorb jo and (bad) cmp repz adc ficom adc mov fiaddl rex.RXB (bad) and or sti cwtl and (bad) int3 mov cmp negb sahf add sbb mov mov cld (bad) out not icebp (bad) (bad) (bad) (bad) (bad) rex.RX jne rex.WX pop ds hlt sbb add and movabs cmp (bad) gs jb (bad) lahf icebp (bad) jmp add add xchg test (bad) loope (bad) in scas roll lahf add or rex.X mov cmp sub cltd mov loope or sbb lea bswap push rcr shrd dec push mov mov or shld sbb setnp mov cmp mov cmc bt jmpq jmpq scas (bad) rol lods movabs mov (bad) mov out int3 icebp callq leaveq hlt (bad) rex.R mov or lods or xor (bad) jns out in cmp js mov rex.WXB lock or in jo (bad) (bad) sti (bad) pop (bad) ja (bad) (bad) (bad) (bad) mov in imull sub (bad) rex.WRX insb sbb (bad) xor add imul xor or push rex.WR ss sbb imul outsl rex.WRB add jl or push mov test adc sub sub insl jo mov adc js mov movabs rex.WB ss mov loopne pop jnp push mov sbb popfq mov test hlt add lods fdivl callq or or rcl sarb sbb movabs icebp in xor cmp (bad) or movabs sub cmp out rex.WRX jb mov addl xchg bswap cmp rex.X jp test mov lahf mov psubb sub fcoml mov fldl (bad) (bad) (bad) inc rex.WR pop rex.X notl jge sub push (bad) rex.WXB test add pop in test lods mov test cltd (bad) adc sub loope mov repz lahf icebp or mov mov movsb mov nop lret out loope cmc jmpq in cmp xchg (bad) sub pop rex.B mov jb fcompl andl push add insb jrcxz (bad) add fwait loop pushq lahf xchg rex.XB pop pushq cmpsl (bad) (bad) (bad) cld rex.R rex pop add rex.WX (bad) pop xchg cli rex.WRX sbb (bad) mov mov repnz (bad) cwtl cmpsl sbb repz cmpsb (bad) push test rex.WRB rex.R repnz (bad) pop stos gs movabs and movsl push mov push jl lods int3 cld rcr enterq add jae mov adcb (bad) adc sub (bad) mov mov iret jmpq cmp rex.RX sahf add xlat jo push lock xchg test stos jnp cwtl mull mov sbb mov cmc bt cmc stc sub jmpq jmpq jne shr clc shrd mov jmpq jae jmpq shll cmp adc mov fldl or mov and loopne mov mov rex.WXB cmp (bad) cmpsl jo (bad) cwtl sbb and jnp push std or adc xchg (bad) jp movabs jo (bad) mov (bad) pop cli stos and shrb mov (bad) scas mov and repnz movabs loop push sti ficom push push pop cmp jno pushfq stc rex.WRB out popfq adc movabs rex.RX gs repnz decb (bad) (bad) (bad) (bad) out fsts jo loop push hlt mov and rex.WRX cmp jo clc (bad) adc mov mov xor and rex.RXB lock lret (bad) (bad) xor subb (bad) out jbe mov or sub movsl xchg mov sbb test add clc test mov bt clc test jmpq callq jno jae add adc mov bt add and add mov not not mov jmpq jmpq jmpq leaveq (bad) (bad) mov jbe xor xlat sbb scas xchg xchg adc jp or (bad) rex.RX and (bad) stos pushfq (bad) mov movl pop push xchg cmc test mov imul lahf cmp sbb repz fnstsw jnp jg movabs cmc add andb cld sub iret jno jg pop jnp (bad) (bad) (bad) cld rex.B mulb lcall and lahf jns mov clc mov adc lods sbb and add pop sub movabs adc xor pushfq rex.WRB lret test retq int clc (bad) hlt rex.XB xchg movabs mov sbb rex.R out movsl mov xor xchg cld fcoms outsb (bad) jne sahf mov add rex.WRB adc sbb and adc repnz sti loopne (bad) icebp (bad) retq sti xchg fistl push xor mov movabs xor (bad) mov and jns (bad) mov xor or sbb andb sarb shlb mov pop (bad) lods add rex.WRXB cs sti and (bad) (bad) std lcall repnz and cli jns (bad) mov rex.R fwait movsl xchg lret test pushq test (bad) add (bad) jno and jmpq and movsl adc mov jl (bad) mov repnz and ja add rex.RB adc setbe (bad) adc movslq mov (bad) repz mov (bad) (bad) sti fdiv pop (bad) mov and stos loop fdivl mov test sbb cs lahf (bad) xchg movsb and icebp out fsts rex.RB ficoml mov fwait movabs adc cmp cmp out movabs int3 cld rex.WRB clc rex.WRXB push pshufw mov (bad) (bad) (bad) (bad) cli (bad) xor clc xor add in pop or movb rex repz push cmp mov (bad) (bad) std (bad) (bad) leaveq imul lahf sbb push xor mov movabs icebp lock add rex.RXB mov pop (bad) callq lods cmp jns fild pop push loopne (bad) (bad) stc leaveq mov std (bad) outsl or sahf pop adc fbstp rex.RXB mov nop lea rcrl mov mov sbb sub addr32 lods sub imul in rorl pop push push adc sbbl xor add outsb (bad) xor movsb mov enterq cmp or sbb fidivl test (bad) rcrl add pop and (bad) in mov loope fist push jb mov pop xor rex.WR stos (bad) mov xchg adc mov pop cs xchg (bad) lods fwait jmp xor test add add fldl2t jl in rorl test fnsave pop xchg pop jns or add shrb test add xchg cs out add cld movabs mov lock jno xchg js imul test and in (bad) test cmp clc rex.WR out fistpl mov cs mov add loope mov mov (bad) mov jb leaveq imul mov and test test cmc repnz jmpq ja jmpq test clc cmc pushq cmp bt cmp jmpq test movzwl cmp sbb sub mov cmp cmc test add cmp clc mov cmp bt test cmc test jmpq iret xchg sub sbb mov sub push (bad) pop adc lahf repz mov lret test insb pushfq xchg ja jae hlt (bad) pop (bad) scas icebp sub jbe (bad) xor int3 xchg xchg scas xor mov testb enterq mov cmp jl mov sub movabs in callq ds mov insl jo or mov mov push cld cltd cmc fstl (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) xchg mov xchg stc sub add add (bad) (bad) sub jno pop (bad) scas jbe outsb jmpq xchg retq mov fwait mov xchg or (bad) rex.WRXB leaveq pop addr32 or sarl sub (bad) cmp sbb stos (bad) cmp mov mov and xchg stc test jmpq jb test stc jmpq jmpq (bad) sub push rex.WRXB xor hlt and jg (bad) stos inc repnz rolb add (bad) repz xor (bad) mov out retq adc pop clc fdivl hlt (bad) mov (bad) xor (bad) xchg rex mov rex.WRB jp add mov sbb jp mov in jnp scas gs retq sbb repz movslq and add (bad) (bad) sti imul xchg (bad) (bad) (bad) (bad) (bad) in (bad) adc popfq hlt xchg test xlat (bad) rcll lcall popfq rex.XB loopne mov xchg mov xor xor movabs sti push jl (bad) mov sub mov pushq mov mov and cmpsb mov adc xor (bad) outsl in fsub imul xchg clc (bad) mov (bad) cs adc in and (bad) cld mov (bad) mov add (bad) or jl je shrl sub and sub enterq movsl negb ficoml sub rex.XB (bad) (bad) (bad) cld cs (bad) cmp (bad) decl out xchg sub pop adc cmp rex.WXB rorb sbb (bad) mov (bad) rex.RX popfq rex.WX fstps sub (bad) xchg xchg xor pop (bad) jmp adc or rex.RB add add adc jne (bad) add repnz movb xor sbb ss test lret in stos lret jg cmp jge mov pushq pop (bad) (bad) mov and jb retq xor mov stc xor mov bsf shr movsbl mov cmc push neg mov shr mov rcr sub neg and sub movzbw xchg setae movzbl lea jmpq sbb (bad) (bad) and addr32 pushfq mov test (bad) xor rolb jge mov sub insb mov sub movl fsubs cmp (bad) jmp add scas push es rex.RX ja and rex.WRX (bad) mov fwait (bad) (bad) (bad) cli vshufps (bad) (bad) (bad) std movabs adc clc pushq repnz loopne adc scas (bad) mov (bad) push repz (bad) adc (bad) mov insb callq xchg jne xchg rex.RX sahf mov imul addr32 (bad) (bad) (bad) jmpq add int out ficomp sub cli movabs fdivrl pushfq testl sahf out mov fs insl pop clc sub cmp add jne lea mov clc add jmpq nop std hlt xor pushq or popfq or pop movabs clc mov pop mov mov rex.WRX mov cli test xlat (bad) loope fistl callq hlt movabs (bad) (bad) (bad) pop flds xor push movabs cwtl cmpsb mov xor mov (bad) (bad) std mov fadds add add rex.RXB (bad) movabs mov or rex.WX mov mov int3 mov test xlat jle pop push mov cmp in rex.RX mov mov (bad) (bad) cwtl scas imul cmp rex.RXB popfq add and (bad) rex.RXB mov cmp push (bad) adc rex.WXB iret pop sub push imul adc es data16 (bad) cmpsb mov xchg (bad) rol jl cwtl es in (bad) in sub or je adc xor add push fs hlt rex.B jg adc sbb jmpq pop pop loope adc (bad) (bad) (bad) rcrl out xor jmp rex.RX iret (bad) (bad) (bad) pushq stos sbb adc je out stc rex.WRXB and nop rex.RXB xor (bad) fistp (bad) (bad) adc sti hlt pop repz ss ja rex.WRX sub sbb adc (bad) fs mov (bad) rex.RXB fsubrp xchg (bad) xchg idivb pop movsb movsl int3 or movabs jge insl pop imul push and std int repz pushq (bad) retq cli es (bad) xchg lea jo cmp pop (bad) lods (bad) cmp popq xor pop cmp jbe cmc out (bad) rclb jg imul rex.XB ss cmpsl fildl jge mov xchg sarl (bad) pop xchg je,pt sub mov (bad) std sub add add mov add movabs xchg cmc (bad) movslq mov movsl or shrl cwtl xor fs (bad) sub lods or rex.X rex.RX insb sub push ja and mov scas rex.R mov stos test lock mov (bad) push scas (bad) insl pop pushq scas rex.WXB cmpsb xlat (bad) mov fsubrs adc outsl int3 out rex.WRB rex.W mov pushq adc mov (bad) (bad) mov add add sub sbb rex in fiaddl jbe jb cmpsb hlt mov icebp mov pop cli callq enterq sti (bad) in cmc (bad) idiv (bad) (bad) (bad) fsubl sub outsl mov add add jns rex.B xor or adc jle (bad) push ficoml sbb jg int add gs and push callq cmpl or cltd leaveq mov sub clc add (bad) (bad) mov add data16 (bad) (bad) cmp bswap lea lea setp lea lea setae pop jmpq ja xor sub sub add shld mov adc bt mov jmpq jmpq stos sar mov mov retq ja and mov pushq and add cwtl rex.RB sub jbe and (bad) lret notl xchg pushq pop sbb sbb div pop or add (bad) fcompl jmp or sbb add stos add (bad) (bad) (bad) (bad) (bad) sti rex push imul (bad) (bad) sbb insl and lret sub (bad) cmpsb (bad) jns cmp out and rcl int cwtl add insb and sub mov rcl mov imul ljmp (bad) fdivrp cwtl add stos adc mov scas scas rex.WR cwtl (bad) pushq mov sti mov rcrl mov mov mov pop (bad) pushfq int lret fdivrl push mov sub lahf adc pop in jmpq testl cmc xchg mov and xor xchg callq pop pop push cwtl mov pushq mov vunpcklps test cmp mov or mov rex.WB lea nop insb sbb iret mov (bad) (bad) mov jb push repz xchg mov pushq movsb stc mov jmpq and jbe ja xor out (bad) pushq (bad) push add leaveq sbb jge jnp pop sti adc jmpq shll vminpd sarb xlat scas push sub (bad) (bad) std sub add add mov xchg mov test in (bad) pop mov rex.XB mov (bad) adc mov (bad) pop faddl xor mov push cli (bad) mov sub rex.WRB pop (bad) mov (bad) rex.RXB rex.W sbb add xchg vaddpd (bad) fs outsb jae mov lods insb push jns adc and push sbb lock in fistpll cli xor xor int3 insb (bad) mov rcrl rex.XB xchg mov pushfq pushq (bad) (bad) (bad) mov movabs out jb (bad) pop mov test or psrld sub push retq fimull sbb (bad) outsb jp rex.WRXB rex.WR movslq and lods adc pushq sti mov sub push mov cmc repz jg (bad) test retq cmp cmpsl push pop jge cmp or stos lods (bad) rcl out mov jo pop (bad) (bad) icebp loope sub retq adc loope movsl addl sub mov lods sbb data16 loop movslq movl fnsave push lret mov xchg mov sbb jmp enterq ds (bad) pop mov (bad) (bad) cld add push out (bad) (bad) (bad) (bad) loop fwait lret cmp sbb mov or add add int out jg mov mov retq rex.R xchg gs xor adc jnp fcmovnbe mov mov adc clc push (bad) test (bad) (bad) out (bad) or data16 movabs cmp jmpq cmc cmp jmpq jmpq sbb outsb in out scas out mov ja mov rcl sar mov jo out (bad) test xlat xor pop push mov rex.R ja (bad) ds adc sub rcl or pushq rex sbb stos (bad) mov sbb repz xchg and loope rex adc retq rex.RX fnstenv cltd adc out mov in test (bad) (bad) sti fstpt (bad) (bad) (bad) mov shr retq sbb movabs fiadd add add sbb fwait lods (bad) xor push movabs rex.WB cltd jnp jns mov fist rex.B negl sub mov sarb mov (bad) sti adc xchg (bad) or pushfw (bad) or cld pushq mov mov out mov xchg xor adc lret subb fisttpll popq cmp lret cld cmc out xor rex.WXB rex.WR (bad) callq push je andb (bad) sahf mov pop ds shlb cmp (bad) jmp (bad) xchg lahf rex.RB movsb bnd jnp (bad) (bad) cld add (bad) (bad) (bad) (bad) loop test shlb add (bad) hlt movsb movslq sti (bad) xor movabs xchg (bad) cmp push lock mov xlat mov push or rex.B mov ds mov ja popq mov xor mov rex.RB lock jmpq rex.WRB (bad) divb jbe (bad) xchg adc mov mov mov add push rex ss push xchg movsl movslq and movsl js or (bad) movabs jl sbb push movabs mov stos fwait push add fsub jb out (bad) stos data16 (bad) xchg int add xor cmpsl lret subl fwait cmc rex.RXB vmovsldup cld cs mov fcmovnb xchg test rcrb iret callq (bad) (bad) std sub add add mov rex.RX rex.WR test sti insb xor cwtl add pushq mov out cmp movabs jrcxz movslq mov xor adcb dec add bswap mov stc test cmpb jmpq jb jmpq jmpq sub bt clc bt clc xor bt test cmp cmp neg bt not test jmpq stc cmc cmpb jmpq je not xchg movzbl lea mov xchg movzbw mov not mov mov jmpq jmpq jmpq retq callq in repz sti jmpq jmpq ja jmpq not jns pop movzbw pop jmpq push ds sbb scas adc (bad) retq in movabs adc jle jae xchg (bad) xchg (bad) icebp int xchg notl jrcxz mov push jbe jmp jnp xchg sarl movabs fisttpl xchg rex.WR mov rex.WRX mov cmp lahf mul (bad) popfq std popfq (bad) rex.WX rex.WRB pop push js lahf xchg (bad) cli jle mov in cmp rcl jno (bad) (bad) (bad) sti (bad) cmp movabs sub xchg lods add add and (bad) xchg rex.WX jle mulb and fistpll mov mov add stos rcll lahf es pop rex.WRXB (bad) xor jnp imul mov sub fldenv imul lret scas pop jle pushq push (bad) xor mov sbb cmp shll mov mov xchg jae in movsl push or pop (bad) gs (bad) fisttp push jge (bad) xor (bad) rorl and std rex.RXB movslq xor rex.WRB rex.WRXB fwait sub (bad) (bad) sti mov (bad) (bad) (bad) (bad) (bad) callq mov rex.WRXB jge jl lods rex.WR add sbb pushfq cmp pushq (bad) or mov cs jl cmpsl sbb pop mov xor rex.W pop testb movsl test pushq std int3 cmpsb (bad) mov xor jg jmp movabs xchg adc jle fst (bad) ja xchg ds adcb std repnz rex.R clc clc icebp (bad) iret repnz cli xchg (bad) mov push add rex.RB sub rex.WRB (bad) rex.WRX mov cltd mov ds (bad) adc xor in (bad) (bad) (bad) (bad) std movsb push addr32 (bad) add add cmp rolb (bad) rex.WB insb push cmp in jnp xchg xor jmpq (bad) sub callq fistp (bad) xchg jbe (bad) fdivs fidiv out push out rex.WXB xor (bad) movsl pushq jmpq jmpq add stc mov bt stc stc test jmpq popfq (bad) (bad) faddl ja rex.WX add add pop movslq (bad) sub pop add cmp fcoms and sub leaveq rorb adc negb adc mov rex.RXB rex.RB rex.WRXB (bad) cmc sahf rolb out hlt movabs sub (bad) (bad) (bad) decl ficomp (bad) andl iret out cmp sbb add sub rex.B cld add add movabs ds shl and (bad) rex.RXB imul jrcxz rex.RX (bad) jns (bad) and (bad) push lock outsb (bad) adc mov sarb mov ss add cmp stc mov rol (bad) icebp mov cmc stc cmc cmp jmpq stc cmc or jmpq mov jmpq jmpq add push rex.W imul je outsl outsb add shlb mov shr add sbb jmpq jmpq jle neg add nop lods sub outsl (bad) cltd std sub je push subl xchg test (bad) jg sbb mov pop lock ss mov (bad) lcall mov (bad) mov sbb cmp mov jns pop outsb pop mov and rex.RX mov sub (bad) (bad) mov lahf xchg or rex.WXB and rex.RB (bad) (bad) (bad) sti callq (bad) (bad) (bad) inc retq iret ja jg out loopne cmp callq (bad) xchg add add rex.RB imul pop mov out movabs jrcxz push loopne in add fdivrs or mov sub rex.RXB add push cmp (bad) (bad) loope nop decb test in push mov movb stc cmp test test jmpq test clc test shl seta lods clc clc ror jmpq jne movsbw and movsbw mov stc jp add cmc bt clc cmp movzwl rex.W negl bswap neg mov cmc clc add bt jmpq jnp je test jmpq jmpq jmpq jmpq jmpq add push and (bad) jp subb xchg out add xor xor nop sbb lods out mov int3 xor pushq jle sahf jrcxz icebp in in mov mov fstpl fcomip xor push scas xchg sub rcrl rex.XB (bad) and je cmp rex.XB cmp (bad) (bad) (bad) sti mov cmp add sub out rol insl mov mov iret mov sbb sbb sbb add jb loopne lods out js cmp rex.RX repnz (bad) (bad) xchg push and pop jmp cmp cmp (bad) push mov xchg cli fist (bad) movabs cmpsl mov (bad) push cmc add jrcxz (bad) (bad) (bad) insb rex.W (bad) cmc out (bad) (bad) (bad) (bad) in ja sub (bad) (bad) (bad) (bad) movsb (bad) pushq pushq (bad) mov xchg rex.WB and pushq rex adc xchg jl jo mov mov mov scas outsl (bad) mov xor cmp mov push sti callq or fisttpll and (bad) mov cmp jp (bad) pop pushfq int lods fdivrl and fsubl movsl mov movabs jmpq scas enterq xor mov adc (bad) (bad) (bad) (bad) (bad) mov (bad) jge adc in notl je jb iret mov lret and sti xor hlt jmpq lahf and (bad) (bad) cld outsl (bad) xor add (bad) (bad) decl retq xor rex.B (bad) (bad) rex.XB rex.WXB (bad) sub (bad) in fsubs test lret xor imul insl pop rex.WX add add (bad) pushq mov cmpsl test adc shl add adc rorb (bad) pop xor xchg mov rex.X add addr32 pop rex.WRXB (bad) cmp jnp push sub (bad) pushq cmp adc add xchg rex.WB xadd xchg fidivr add jg nop lret (bad) sbbl pop adc (bad) rex.WRX fnsave (bad) nop (bad) movabs xchg add (bad) xor push push rex.W nop sbb sbb hlt and (bad) (bad) std out sub add mov sub (bad) ja sub cli rex.WB rex.WX ja adc jp and mov xchg xchg (bad) insl jge mov xor loop sbb and sub sub jmpq pop rex.WRB mov or (bad) lods mov (bad) gs addr32 jae cld loope cmp (bad) (bad) test out (bad) mov xlat hlt add push jo mov and mov or or adc (bad) xor adcb movslq and (bad) xor (bad) or mov and adc movsl repz jno jbe in pop movsb jno (bad) cmp adc xor and loop mov push in adc (bad) mov rex.X (bad) imul add (bad) sub sbb (bad) (bad) sti sub push lret cld (bad) (bad) (bad) decb mov jne (bad) fiadd pop xor rorl xor pop mov pop mov (bad) (bad) (bad) lcall adc rex.WRXB insb outsb scas je (bad) pop mov rex.WR insl pop adc lret outsb or push pop cli and adc jno retq fnsave pop xor sub mov mov jo sbb mov cmp fldenv stc or mov btc or setnp mov bsf (bad) cmc sar or add adc adc movl shrd sar cmc mov test cmc cmp jmpq bt add jmpq add add push add add subb test mov mov test loopne callq test and rex.W push stos subb stos mov mov stos callq stos or add add pop add add movabs xor rex.W jo js andb stos sbb rex.W pop stos pushq stos cwtl stos test mov stos callq stos sbb stos add add add int3 add add stos mov stos shrb callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs add add jo andb shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb stos shrb stos loopne callq stos add sbb xor push stos pop stos (bad) stos pushq stos subb stos mov mov stos fsubrs lock clc stos add lods pushq and add rex.W push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb jo js nop stos add xor add test pop test jo js subb test mov mov test loopne callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos nop stos cwtl stos movabs stos enterq fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs add add pushq scas cwtl scas test mov scas callq add add nop lods cwtl lods add add add pop movabs jo cwtl movabs shlb movabs or and push movabs mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add (bad) add add add movabs loopne adc and fsubs pop movsb andb add add hlt movsl add or add mov (bad) add add push stos add add or sub add nop movabs fsubs or movsb movabs xor add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb and rcr push shl push shr mov push jmpq mov test sub jmpq xchg jp rex.XB sbb pop add sbb jne movabs and add cmp cltd in push push mov pushq sub jmpq stos mov jb roll jo pushq (bad) xchg push cmp jae rex.WRXB scas mov (bad) fldt jmpq cmp rex.RXB or rex.B fs add xor jmp xchg (bad) nop mov jge callq sarb jle int clc push and (bad) (bad) cld sarb mov (bad) (bad) lcall (bad) pop std adc bswap xor mov out (bad) test cmp outsb enterq rex.WRX adc ja addr32 imul rex.W lods mov (bad) je (bad) mov lods mov add imul mov rex.RX mov pop add hlt imul jmp callq out loopne xchg xor stos and mov icebp and jno jno sub (bad) and pushfq rex.XB jnp jb (bad) pushq ja xor mov cmp (bad) outsb ror (bad) pop retq (bad) cmp and (bad) pushfq mov sbb pop adc jae rex.WR sub imul cwtl and (bad) (bad) sti callq (bad) (bad) (bad) inc mov mov in rex.WB mov sub rex.B add add lea jo xchg int3 cld callq push mov jge divb fs (bad) mov in cwtl mov loope (bad) jb sbb mov mov rex.RXB pop cmp rorb cwtl shr mov decl test pushq jmpq fcoms xor adc mov not bsf mov ror stc add stc mov mov jmpq je or mov sub test add bts mov stc bt test jmpq jmpq push outsb push adc out (bad) rcrl notl jle or xchg std sub xchg push (bad) cli mov fisubr mov loope jmpq cli jo sar movabs (bad) adc cltd add stos sub movsl rex.WXB out loop in int3 idivl cmpsb addr32 ja pop cmp xor in fstpl (bad) and (bad) sbb out mov push (bad) (bad) (bad) sti int rex.WXB xor stos add (bad) mov adc lods (bad) leaveq ja sbb add add sub lret and adc xchg or movsl lret (bad) stos (bad) jl add (bad) adc repz rex.WB repnz fwait mov pushq xchg push or cltd jrcxz mov sahf shr xchg rex.WB jmpq movabs sbb mov loope addps and insb outsb (bad) xchg push rex.WRX stos std gs (bad) sbb repnz test movsb mov je xchg (bad) test sub xchg fisub mov movabs mov or or mov sbb jae movabs rcrb add rex.XB (bad) (bad) (bad) std or (bad) xchg jbe mov callq (bad) jle movabs jns xchg int jns sti add mov cmpsl (bad) push repnz vmovd (bad) lret add (bad) (bad) (bad) (bad) or jg lods enterq jle mov rex.W adc sbb jns (bad) imul leaveq cmpsl xchg cmc jrcxz cmpsl div cmp rex.WRB xchg lock cmc shr add test inc mov jmpq mov bt sub cmp pushq clc cmp jmpq rep not movsbw not pop jmpq jmpq adc jmpq adc loop mov adc jbe or popfq lock lret cmpsl or adc insb push test rex.RX pushfq rex.RB mov (bad) es (bad) rex.WRB rex.R stos sub mov lods sbb and cmp push (bad) out pop push rex.B or rclb shlb mov pop pushq mov (bad) xor xchg add loopne (bad) hlt testb (bad) movsb cltd rex.WR rex.RXB int stc rex.WXB rex.WRX (bad) lea cmp jb rorb jb ja callq (bad) (bad) (bad) sti out xor data16 (bad) (bad) (bad) dec cmpsl hlt (bad) cltd add rex.XB cmp or pop rcr int jae add add nop mov adc (bad) imul push cmp pushfq mov stc pushq movslq (bad) hlt pop add out (bad) sti rex.WX pop push lock sub cmc mov rex.R rex.WXB in fmuls adc (bad) bswap jmpq jmpq jmpq mov (bad) jp (bad) int sub jrcxz stc adc mov stos cltd xchg push jle mov rex.WRB sub adc ss mov (bad) pushq adc idivl (bad) or jbe xchg addb cmp stmxcsr sub and mov adc cld rex.RXB adcl or jae mov repz rex.B adc xor or fildl mov jmp jne (bad) in hlt jle fdivs (bad) (bad) imul sub (bad) movabs lock push pop jg sti lret and iret jmpq (bad) or mov or rex.W adc movabs (bad) rex.WR loop jmpq jmpq je xchg movzbl xchg mov mov xchg jmpq test add neg clc add rol stc neg ror xchg xchg shr mov test mov stc cmc cmc cmc push sub shl not mov clc clc jmpq je cmc mov btc add jns lea mov stc cmc jmpq jmpq jmpq pop bswap pop jmpq cmp jmpq fwait movabs sahf jl fsts xchg xchg fyl2xp1 adc xchg xchg fcoml adc sbb je xchg adc xchg test (bad) xchg xchg mov adc xchg stc mov (bad) std adc repz sub sub xchg adc mov adc seta int3 lahf xchg add mov sbb adc movslq (bad) xchg cmp mov (bad) or xchg jrcxz sti rex.R mov xchg add fsts or jmp mov sbb nop (bad) xchg cmpsb test push test xchg push adc or xchg scas add adc rolb mov out (bad) xchg add adc mov (bad) adc (bad) xchg scas adcl add adc (bad) sbb adc sub or pop sbb xchg adc adcl (bad) pop xchg (bad) push sbb adc adc add lock adc xchg xchg add (bad) popfq popfq xchg movabs sbb (bad) mov adc (bad) mov sahf mov rex.WX add retq adc mov adc sbb ds stc sbb movabs adc cmp roll mov sbb xchg mov sbb rex.W (bad) stos je xchg popq cmp xchg cmp xchg test stc notl movabs out push xchg mov add adc (bad) push xchg mov fnstenv push xchg mov add sbb adc xor stos and pop adc mov iret movabs xchg ja sbb test xchg (bad) mov movabs je xchg add (bad) xchg lahf stc sbb adc pop out adc sbb rcll xchg add (bad) xchg ss lods xchg movsl (bad) xlat xchg retq jae,pn in mov notl repz pop test rcll in int sti adc sub (bad) xlat pop adc stos int mov (bad) subl xchg adc rex.WX je mov jrcxz adc movabs stos xchg mov sbb push (bad) rcll and fs stc adc cmp adc (bad) (bad) fisttpll fildll (bad) cltd mov xchg sbb sbb pop lea jrcxz (bad) xor jmp sti mov es xchg adc xchg mov rcrb lea lods xchg adc mov adc jmpq rex.WRX int3 (bad) xchg scas rex.XB adc test xchg adc clc sbb in mov retq xchg or movabs sbb mov push adc or mov movabs lea out adc and idivl mov (bad) xchg fstps movabs fnstcw sbb (bad) mov je xchg add (bad) xchg clc stc sbb and fistpll pop fistl loopne scas mov nop (bad) mov sbb lea fstp rex.RB adc out sub adc pop xchg xchg stc add adc mov (bad) mov mov add adc push (bad) xchg lods adc (bad) jns add mov xor stos add out movabs sarl jmp adc sti (bad) pop xchg (bad) rcrb int mov adc mov xlat (bad) cmp nop (bad) mov mov sbb je xchg add (bad) xchg and (bad) fistl clc sti jmpq mov rex.W (bad) mov mov push adc (bad) cmc jmpq mov vmulsd mov mov sbb sbb adc jae,pt test rclb sahf xchg (bad) rcrb cmc (bad) mov adc mov push (bad) fidiv push cmpsl movabs repz lret mov cld sahf (bad) retq sbb mov in sbb adc scas push sbb lods int3 imul jp lods (bad) adc (bad) int push cmp xchg mov sbb adc xchg (bad) mov lea xchg ds sti (bad) mov stos mov rex.WRXB es fsts add rex.R mov sti adc test add (bad) adc cltd (bad) lret pop or mov es jrcxz xchg (bad) negb jrcxz (bad) xor jmp jrcxz stos rex.WB stc mov add (bad) xchg sti jp (bad) (bad) adc xlat pushfq mov add fistl mov xchg adc rex.WXB mov ficompl lahf or xchg roll xchg negb scas je xchg add (bad) xchg movslq callq (bad) (bad) or scas stos push mov mov vpsrlq add adc rex.RX mov fadd cltd test cltd lahf pop mov rolb xor jb test orb ljmp mov scas (bad) sbb pop sti js test jl fistl movabs sbb add xchg push lock int3 (bad) xchg scas icebp sbb adc add (bad) cli push add mov xchg loope add adc mov notl movabs jne cltd xchg clc adc cltd lods stos mov int sub cmc es mov or mov xchg adc sbb mov sbb je xchg xchg adc cltd (bad) add stc sbb gs je xchg adc mov push sbb lock adc xor out adc jno jl xlat icebp adc mov jb mov mov jae mull adc insb int cmp insl xchg movsl sub mov sub rcll rex.WRXB (bad) ss mov jnp or fsts pushq adc mov add adc imul adc pushq int icebp adc (bad) lods stc (bad) fcompl xchg (bad) xchg iret enterq (bad) xor in mov xchg mov stc (bad) popfq sahf xchg xor adc retq out adc cltd gs mov clc (bad) sbb mov popfq cltd xchg retq sbb sub pop xchg and sbb (bad) mov adc mov stos (bad) adc addr32 adc cmp retq add sbb (bad) fsts sbb adc xchg fucomip fcompp adc add adc (bad) xchg mov (bad) xchg scas loope (bad) (bad) xlat xchg mov (bad) mov test jp icebp (bad) adc push sbb xchg (bad) (bad) (bad) xchg mov xchg cmc sbb loopne xchg callq sub stc xchg xlat add (bad) adc sbb rex.R xchg rclb loopne cmpsl mov xchg fsts adc mov xchg scas xchg xchg fldt xchg scas xchg xor add fsts (bad) xchg xchg add adc ss leaveq lods iret (bad) adc (bad) sbb or fsts adc adc sub sub scas adc adc (bad) xchg xchg mov adc adc or xchg subl adc lea adc scas (bad) xchg stc jl jmp ss fs adc sbb or xchg jl in xchg sub add xchg adc mov fisttpll add (bad) adc mov xchg xchg xchg (bad) fnsave (bad) cmp xchg js sbb mov adc test adc test leaveq xchg xchg adc xchg adc (bad) (bad) fcmovnu (bad) xchg adc lods cmp add mov and push adc sbb mov cmp xchg push push sbb int3 (bad) xchg scas push sbb (bad) pop xchg rex.R sbb adc adc mov sahf xchg icebp mov cmpsl stos (bad) xchg push (bad) sbb rex.WR popfq iret and adc mov jrcxz adc cmp xlat mov mov rclb add mov cmp (bad) rcll xor andl push sbb pop mov (bad) mov (bad) pop xchg lret sbbl (bad) xchg push data16 popfq xor xchg scas sbb jmpq mov rcrl xchg mov cmc adcl cmpsl (bad) sbb adc scas (bad) mov xchg adc mov repz rex.WRXB retq retq fcoms mov sarl sti adc xor rcrb mov sbb test mov mov je xchg adc adc mov repz stos (bad) iret stc jl adc hlt sbb stc mov je xchg add adc mov mov jo scas add jmp movabs rex.WR adc movsb cs adc (bad) adc scas (bad) mov sub scas sub adc cmpsl (bad) mov mov (bad) sub adc sub leaveq sub pop adc test adc stos xchg imul jrcxz mov lea repz (bad) movsl fstpt adc sbb or xchg (bad) stc sbb adc xlat jbe pop notl fildl sbb pop xor sbb leaveq cmpsl adc (bad) loope jmp pop xor sbb sti mov cmpsl movabs mov (bad) rcll sbb fcom mov add (bad) xchg mov sbb (bad) xlat (bad) pop mov adc sbb sub pop frstor adc jo adc (bad) (bad) fistpll sbb repz int cmp xchg (bad) (bad) (bad) fstl xchg adc in cmc sub in shr rcll stc sbb (bad) push (bad) ljmp scas adc sbb in mov lret fstpl cs sbb (bad) jae jno jl adc cmp fpatan adc mov cltd add xchg xchg mov lret cmpsl rex.R int3 (bad) xchg scas add orl xchg rorl sbb in adc jmp sbbl rorl sbb xchg int cmpsl (bad) xchg push sbbl int3 (bad) xchg scas fcomps callq mov mov enterq (bad) rex.WB sub rex.WRB retq leaveq xchg xchg adc out adc lret lods fistl rex.WXB cltd addl sbb cmp neg xchg movabs rex.RB mov sbb xchg int vcvttpd2dq cwtl sti stc mov sbb add jmp mov add adc cmp push rex.XB mov sti cltd (bad) mov xchg sar adcl sbb (bad) mov xchg xchg (bad) std (bad) mov jp rorl jo sbb rorl fincstp adc leaveq fistpl (bad) clc xchg (bad) push xchg adc push sbb outsb jo or rclb flds cli iret mov div (bad) (bad) cltd repz jne push retq jnp jmp cmpsb leaveq adc je mov jbe stc (bad) jl adc notb gs adc jo cmc cmp sub mov cli icebp scas mov repz jb xchg iret adc bnd lods jo jae in jmp sbb subl xchg xlat sbb rex.W adc insl lret push mov clc mov xchg nop cmpsb xchg mov test sbb in (bad) ror adc sbb (bad) (bad) xor sub (bad) mov xchg xchg adc xchg (bad) imul int3 or (bad) (bad) (bad) stc adc in cmp rex.B gs int3 jrcxz mov repz mov subl out scas adc rex.W (bad) (bad) incb stc scas stos adc sbb (bad) loopne (bad) xchg lea xchg je xchg add sbb adc fs (bad) (bad) (bad) xchg (bad) xor sti adc mov xchg xchg adc xchg scas and rcll (bad) xlat jmpq xchg (bad) cmp es notl fistpl loop lea testl xchg retq test roll lahf je xchg jmpq mov xchg xchg mov and (bad) sbb sti xchg test pop xchg mov mov adc mov dec adcl mov adc sahf xchg movslq cmpsl orl jg out xchg js jrcxz adc sbb mov xchg (bad) test (bad) mov xchg rex.WXB mov xchg (bad) out iret rex.R sbb xchg lods xor mov adc adc fstl adc (bad) paddw nop test xchg rolb cs xchg cltd mov (bad) mov sti jle or adc or adc or xchg xchg cmpl sahf xchg and (bad) fist mov rex.WRXB sbb adc pop faddl out (bad) xchg (bad) test (bad) mov adc mov mov and mov or popfq (bad) pop xchg std rcrb mov (bad) adc rcl mov xchg fisttpl jp cmpsl (bad) adc scas (bad) mov je xchg add adc mov add adc subl xchg push cmp adc rcrb popfq (bad) mov sbb cmc mov sbb (bad) adc movabs xchg int adc stos sub in rex.WRB fstps mov xchg add adc mov (bad) cwtl cmp (bad) movabs sbb rcrb orl xchg add (bad) xchg lahf cmp adc ss mov rcll fldenv lahf lret std adc (bad) hlt movabs (bad) xchg scas (bad) sbb scas jp (bad) (bad) adc iret adc push repz sub mov sbb add xchg (bad) stc sbb xchg xchg or sarl in (bad) int lea mov adc xor icebp add fcoms xor adc movabs mov add xchg adc lods mov subl add adc in push xchg pop adc cs xchg push adc mov (bad) xchg cmp rcll jg movsl (bad) clc xchg pop mov mov test stos mov test adcl sub popfq (bad) mov je xchg adc xchg (bad) stc sbb adc xlat in fdivl scas cmp movabs sti stos clc adc cltd mov xlat xchg shld andl test sbb jmpq (bad) (bad) mov (bad) decl fistl scas mov sub mov shll mov (bad) mov (bad) xchg push jbe rorl jp sti add xchg adc movabs rex.WX (bad) adc in retq xchg adc movabs xchg xchg lods imul jrcxz xchg xchg mov repz (bad) int3 mov test adc push cltd out in sbb adc fdivrl adcl (bad) iret adc clc cmpl mov lea adc stos sbb rex.W in jo (bad) mov mov adc sbb scas (bad) adc repnz shrl addl adc or fmul cltd scas lea sbb adc pop (bad) cltd jl stc adc fsts pop adc fcmove cmpsl add std adc rcl rcll test sbb adc xchg mov in movsl mov sti add xchg push mov callq mov adc clc test xchg xchg (bad) jrcxz cmpl rcrl push mov rex.WB stos fxch adc ss rolb (bad) push rex.R lea retq adc in test scas adc (bad) (bad) mov psrld subl out cmp adc mov mov push add outsb or in cmp pop int out adc stc adc sbb sub mov (bad) movabs stc adc rex.R rex.WB add in push xchg fcoms add sbb scas rex.RB lahf sub adcl adc lahf (bad) adc xor rcll mov clc push sbb adc adc mov je (bad) jo cmc jle (bad) adc (bad) clc sar cltd retq rex.XB rex.R push adc (bad) (bad) (bad) jmp lea sti retq shl add or cmp loope add adc in negl in sbbl mov cmpsb movsl adc insb cltd mov mov (bad) scas leaveq cmp xchg mov add out (bad) js (bad) (bad) xchg push jns mov adc cmc (bad) mov mov clc mov adc stc sbb and jle mov jrcxz (bad) (bad) adc cltd test adcl push rorl lods in or mov (bad) adc cltd imull push ja cltd gs lea xchg (bad) xchg adc jge mov mov movabs hlt xchg sub jne (bad) mov negl cmpsl int3 adcl or cltd push mov cmp adc movabs notb stc adc sbb notl jrcxz ss repz adc jo xchg jmp mov vunpcklps movabs xchg jle mov in notl in shrb adc in push mov adc outsb xchg xorl fnstcw vpaddd outsl xchg scas fnstcw cmc adc shr adc add (bad) adc cmp (bad) cltd mov lret fldcw mov cli adc add (bad) testl xlat (bad) adc mov add sbb jno pop (bad) icebp fcoms sbb mov cltd mov mov popfq scas lea retq sub adcl sbb mov pop mov xor movsl mov push sub lahf mov movabs adc add cmp adc outsb sub rcrl mov cltd xchg retq rex.WRB (bad) adc mov add adc sbb rcll xchg fldcw (bad) xchg loope test xchg xchg stc sbb xor test xchg lods add outsb lea or sbb add xchg adc mov (bad) adc orl and sub sub add (bad) adc psrlw clc xorl in sar xchg mov in add adc or add mov xchg subb gs mov or mov mov or out lcall in cmpl (bad) adc add adc loopne retq adc sti pop test leaveq adc fneni(8087 mov adc lods mov sbb mov xchg xchg idivb sbb adc cmp xchg jg (bad) adc retq ss (bad) cld stos mov movsl adc lret fld add mov adc fcoms xor movabs xor inc sub add test xchg stc loope jnp loopne vpsraw mov (bad) (bad) (bad) xchg mov mov test mov (bad) icebp mov lea mov rex.RB out popfq jrcxz adc scas xchg scas callq out adc cmpsl (bad) xchg mov (bad) xchg (bad) test jle scas sub in sbb sub cmp add adc movabs movsb out jmp mov (bad) adc xchg fnstcw movsb or (bad) cltd push (bad) and adc es repz and xchg out adc (bad) xchg adc lahf cltd fld adc mov cltd add push xchg sbb xchg movabs pop xchg scas mov rcll roll fscale adc test jle xchg fimul js cltd fyl2xp1 adc cmp fstps test rcrl fmul (bad) xchg adc movsl loope mov test adc fnstenv xchg mov in rex.RB outsb or imul add or (bad) movsl (bad) adc clc sti (bad) scas adc mov adc in (bad) lods pop adc (bad) int (bad) xchg xchg adc push (bad) lods mov clc mov loope (bad) (bad) (bad) mov adc outsb or pop cmp (bad) lea mov add (bad) repz adc js cmc movabs jnp cmp repz (bad) incl clc cmp mov movsl ss pushq repz xchg mov adc (bad) mov sarl sbb mov cmp jo pop in (bad) rcll jge lahf adc adc cmp xchg mov pop xchg jle (bad) xchg std adc push iret mov jnp rex.W lahf fxch adc test jle (bad) push divb xor cmpl std stc adc (bad) cmp or (bad) rorb (bad) cltd mov test cltd sahf xchg fistpl rex.X test (bad) xlat xorl lret std (bad) adc xor (bad) cmpl callq test fldl lods (bad) mov lret sbb mov xchg jnp cmpsl push sub (bad) mov add adc (bad) in lods mov rex.WRXB adcl leaveq loope lret adc leaveq push (bad) out adc retq xchg or lret or lret jl pop xchg cmp fsts mov jae mov jmp mov sti adc in and leaveq fldt jnp sub (bad) fldenv rex.X jmp adc rex.RB adc (bad) cltd mov stc rcl adc cltd div xlat cs (bad) mov mov sbb (bad) leaveq loope mov sbb (bad) (bad) (bad) xchg add (bad) xchg pushfq xor scas sub adc pop sbb rcrb mov mov mov add adc mov fstpt xchg (bad) hlt mov xchg xchg cltd mov xchg movabs adc int clc adc cltd lods jmp sti rex.X in lret xchg imul repz or add mov lea xchg loop mov testl fistl in xchg xchg add adc lea adc (bad) cld xchg lods add outsb shrl push lea mull fistl (bad) popfq cltd xchg sbb repnz pop xchg insl rcrb in (bad) mov sarl sti (bad) adc retq fldl (bad) (bad) je rex.R jg shll xchg sarl (bad) (bad) adc xchg adc mov imull js cltd stos (bad) adc mov add adc clc xor pop adc jns out adc sbb mov sbb test mov mov je xchg cmpsb cmp mov adc mov jmp scas jp lahf (bad) adc cli (bad) (bad) retq idivl ds int3 adcl pop xchg imul repz push hlt je lret xchg (bad) push sbb out sbb je xchg add (bad) xchg out sbb adc jne stc sub adc xor iret scas adc xlat (bad) xlat xchg std out (bad) fbstp test mov adcl jo add sbb cmpl (bad) pop xchg and sbb sbb or xchg iret stc adc mov adc adc cld push movsl (bad) repz repnz xchg adc adc in mov adc lret xchg sbb rex.R insb mov mov adc sbb jmp mov (bad) mov adc mov mov jns mov rcrq (bad) test movabs mov mov pushq xchg jno out je xchg test sbb (bad) xlat (bad) pushfq mov fdivs imul rex.W adc scas mov movabs push cld cmpsl or xchg mov mov notl fistl test adc (bad) (bad) out stc adc hlt sbb fwait mov movsl (bad) adc lods adc mov imul sahf xchg push sbb sbb je xchg xchg enterq (bad) mov (bad) xchg push loop ror adc jmpq clc xchg push push sbb fucom (bad) (bad) xchg jno popfq je xchg test sbb fldl xchg sbb stos (bad) adc xor sbb orl (bad) xchg push rex.WR sub xchg mov (bad) xchg add adc ds xchg loopne in xchg xchg adc jmp xchg (bad) push sbb adc adc loop mov popfq cwtl xchg mov xchg sbbb mov mov sbb xchg movabs repz push xchg (bad) push decl adc cltd push jrcxz cwtl sbb xor divl add adc (bad) sbb mov mov xchg syscall sbb cmp stos mov sbb add test mov mov adc xchg fcmovne (bad) xchg scas rcrb adc cmc fcomps rorl push adc mov fcompl (bad) (bad) xchg fcoms xchg rol cmp xchg or sbb stos mov notl adcl jl xchg rex.WX mov mov notl sti pop xor int3 mov add mov sbb xchg in mov adc push adc sbb int3 mov mov xchg sti (bad) popfq cltd xchg stos sbb notl movabs scas xchg xchg in xlat xchg sbb stc xchg in adc mov pop (bad) jrcxz fcompl mov lret mov push retq mov add rclb stos sbb fcompl scas push adc adc stos add mov xchg xchg stc (bad) pop xchg pop (bad) sbb subl xchg mov or adc in xchg adc loope cmp cmpsl orl mov test jmp sub (bad) or mov cltd lods xchg adc mov pop adc lea fcmovnbe adc cltd mov ror (bad) popfq sahf xchg (bad) seta jge retq int3 (bad) xchg lea xchg retq xchg fiadd xchg std (bad) lods repz retq mov rex.WRX adc or lea sbb sbb adc (bad) adc mov push (bad) cmpsb test mov adc test adc add cltd jle fnstcw int xchg cmp (bad) sbb test sbb mov cltd testl cltd lods cmpsl mov mov adc test jmp rorl adc scas jrcxz (bad) adc rex.X or sbb adc push cltd callq adc xor sahf xchg adc (bad) adc mov add adc ss mov outsb leaveq (bad) adc (bad) sub add test test mov add adc scas mov (bad) sahf stc adc repnz cmp xchg adc mov stos adc pop adc xor adc mov mov adc movabs mov and in stc fstpl rex.W mov jb mov add adc sub add (bad) adc cmp fldpi adc mov roll sub and add adc lods movsl adc test adc sbb rex addr32 adc (bad) and xchg sbb es in mov adcl mov cltd sbb in (bad) xchg test rex.WX sbb cmpl out mov cmp rex.WRX xchg movabs movabs int3 and (bad) scas (bad) adc movabs pop retq cmpsl (bad) xchg pop or push in incl adc pop (bad) scas iret add adc faddp shll sahf xchg push fsts adc sub adc rcl mov adc adc mov stc sbb adc (bad) push (bad) std add adc (bad) push xchg mov adc mov cltd idiv push notb repnz (bad) cltd (bad) xchg lea cltd cmpsl xchg xchg and (bad) repz or cltd lret xchg xor data16 cltd fistl pop xchg or adc xchg fadds cltd lods enterq clc mov out decl leaveq cltd mov xchg (bad) (bad) cltd pop xchg mov cltd pushfq xchg stos push cltd movabs cltd adc lret xchg or cltd adc es xchg leaveq cld stc (bad) xchg je (bad) jno clc lret xchg xchg xchg cltd repz xchg xchg rex.WXB jo rex.WB sbb adc xchg or (bad) int mov jp decl (bad) adc mov add adc rex.R roll insb (bad) cs (bad) mov cltd mov mov mov rex.RB (bad) test (bad) mov xchg mov int rex.RX scas and sbb jne orl xchg subb (bad) adc sbb stc pushq or (bad) in (bad) adc sbb retq jp out adc lods cmp xchg xor cltd rex mov test lret lea test shlb jmp test and retq mov rex.R sbb mov test adc push cltd faddl mov cmp (bad) adc cltd icebp xchg rex.XB mov (bad) rex.R xchg sti addb cltd mov xchg rcrl cmc mov xchg (bad) jle (bad) (bad) adc retq (bad) mov notl jmp nop jl mov ror stc adc (bad) (bad) mov mov xchg (bad) cmp test mov sahf xchg sbb mov cmpsl int3 (bad) xchg scas xor scas adc xchg push mov xchg mov jae test cmp jmpq cmp sub cmp cmp pushq cmp stc cmp jmpq add rex.RXB gs outsl fs imul add sarb sti rcl add inc sbb adc mov jmpq jmpq callq jmpq add jl callq jmpq jmpq stos jmpq fnstsw cmp mov jae lret sub xchg cld pop addr32 orl (bad) loope fs mov test icebp test in vaddpd in movabs imull (bad) adc (bad) sub xor test out push stc mov or mov jmpq pop fistp (bad) (bad) sti mov sub (bad) (bad) (bad) (bad) sti xchg repz sub mov rex.WRX lods ss or (bad) (bad) (bad) decb (bad) fiaddl loop rex.W rex.X stos mov sbb popfq scas lea js jne imul mov lock leaveq mov lock push add add or movabs addr32 jp (bad) mov je rex.WRXB (bad) cli in lcall cmp sar andl mov or stc in (bad) rex.WRX cmp repz (bad) or fldl pushq mov sbb (bad) push rex.RXB jae fisubr (bad) movsl pop mov lret lods mov iret sbb mov adc mov stos push insl cmp test (bad) xchg movsl (bad) (bad) (bad) (bad) mov cmp addr32 (bad) (bad) (bad) out cmpl push sub cmp mov imul pushq shrl push (bad) lods vpmovsxbd pop sti push cs jrcxz add cmp rex.RXB movsb xchg cli callq pop mov mov (bad) gs adc (bad) jo xchg mov or jno test sbb test divb push pushfq (bad) (bad) cmpsl xchg sbb ja outsl add (bad) je shrb cmp rex.R gs jne addr32 jb jae outsb je jne jmpq jmpq je movzbl mov mov movsbq bswap xchg mov lea not lea movsbw lea jmpq je dec cmp shld mov push shr adc shld mov cmp bt sub jmpq bt stc add stc bt or jmpq jb bt clc cmc cmc cmp jmpq cli or (bad) nop xor xchg jle (bad) mov mov xchg adcl and out cld pushq jmpq mov or out mov fcmove add (bad) add retq (bad) scas add jae mov jne iret xlat adc jle pop fmuls lods (bad) (bad) (bad) (bad) sti sbb (bad) (bad) std (bad) or pop lods movabs rex rex.W fwait rex.WX popfq fcompl (bad) sbb sub (bad) cli outsl xchg (bad) dec rex.B cld xchg test mov (bad) pop in cmp insl mov mov rex.W rex.WXB rex.WXB insw leaveq (bad) lods rex.WXB sbb popfq iret std rex.WRXB callq jne ficoml jmp mov jbe lock pop mov xchg imul mov add pop mov lret (bad) mov in (bad) sbbl and mov xchg or push cmp add repnz (bad) and jmp rex.B jno (bad) (bad) std outsl push xor (bad) rex.WR add add jbe xchg mov (bad) xor pop rex.XB (bad) ds rorl roll fdivrl cmpsb lret or xor mov rex.X stos jle adc or popfq jle in rex.WR (bad) mov adc in mov and (bad) xchg (bad) xchg mov divb add fisttpl cmp mov enterq sarl jge (bad) jo cmp xlat pushfq rex.WR loopne,pt (bad) ss push fs (bad) (bad) or mov jbe pushq jae clc jmpq xor fwait pushfq rex.W cmp xchg push ss in (bad) xchg cmp add clc (bad) shlb (bad) repnz out pushfq rex.WX (bad) and data16 or add cmp push repz (bad) rex.RX push callq adc test fiaddl mov ss mov jae hlt push jp pop lea jl (bad) push ds loope test sbb add or (bad) (bad) cld clts fwait jno (bad) (bad) (bad) (bad) in pop sbb out cmp sbb loopne mov add add xor sarl push mov xor lret (bad) icebp out fisttpl and movabs rex.WRB (bad) test xor rex.WRX add retq ja (bad) imul (bad) push clc add clc test cmp jmpq add shrd btc add sbb shld shld movsbw mov cmp shr stc clc bt bt cmp jmpq sbb (bad) loop es test rex mov xchg rorb (bad) icebp repnz out shrb nop jb cld loope movabs cli (bad) movabs push push test sti lods int sarb (bad) sub adc (bad) mov shl pop cmp (bad) or leaveq add jb add and sbb (bad) (bad) (bad) clc adc sub (bad) adc lahf sti or add cmp movsl mov cltd repnz sbbl cld (bad) sub mov rex.WRXB hlt lahf lret add add sub (bad) imul (bad) add iret and mov cmp sbb cmc jrcxz sub (bad) xlat mov movabs (bad) scas mov int3 (bad) and mov js rex.RXB (bad) or jle pop sub adc adc mov sahf mov insl (bad) gs (bad) (bad) stos xchg rex.RX cwtl push or push or sbb adc (bad) mov xor jrcxz jmp sub rex.X repz mov (bad) mov sub push jo iret js pop js add add xor (bad) (bad) sti mov (bad) (bad) (bad) (bad) xchg adc mov push leaveq hlt pop or jmpq loopne mov add cmp adc dec hlt cmc pop sub mov rex.X rex.X outsb lret and psubd fwait lods roll adc sub (bad) sarl sbb enterq jle xor hlt movabs sti xchg pushq jmpq add (bad) stos scas jg rcll fwait push mov enterq data16 pop push add jns mov (bad) fmuls (bad) (bad) jbe xor jae std ficom sbb pop rex.WRX es push in gs push iret icebp xor iret lahf sub rcr or mov xor jle jae (bad) retq sbb xor (bad) mov cmp xor (bad) (bad) sti scas iret jmpq (bad) decb rex.B andl add add or lcall xor pop adc fmull and mov hlt or cmpsl movabs (bad) shrb jle notl sub in loop adc (bad) rex.RX (bad) jbe cmc cwtl sti push cmp jp xor jle (bad) leaveq cmp cmc pop xor push adc movabs int mov fwait rex lret stos rex.WX movabs movsb cmpl mov (bad) mov (bad) retq mov add push test es rex.WXB rex.WXB stos jne xchg or cmp in adc fbld cmp jl sub rex.XB (bad) test dec add popfq lea or (bad) std insl push (bad) mov repz jrcxz sbb (bad) lock test (bad) mov xchg jl xor enterq test rex.WRB cmp jl sub and fstpt mov jbe rorb cld sti addr32 pushq scas mov or leaveq sti in rex.B js scas (bad) pop (bad) fiaddl insb pop jg ja xor or (bad) sub retq ja test cmpl sbb sbb xor data16 cwtl rex.WRX movabs sub (bad) mov xchg int3 adc mov or jp mov in mov rex.X (bad) (bad) or insl enterq rex.W push mov cli add stc rex.W mov (bad) xor mov rex.WRB addr32 gs and (bad) (bad) (bad) sti mov rex.XB (bad) (bad) std (bad) (bad) (bad) retq pop int3 callq xchg (bad) (bad) scas subl add (bad) sbb jno (bad) (bad) (bad) (bad) fcomip shrb (bad) add add pop lock (bad) and mov jnp rex.RXB out imull imul rex.XB data16 (bad) (bad) mov adcb scas pop (bad) adc (bad) in (bad) mov movabs rex.W test (bad) xlat mov fstl add jnp (bad) push (bad) mov jl add rex.WRXB (bad) sbb (bad) cmpsb mov pop cmp jrcxz in xchg out push xchg xchg adc xor movsb rex.RX cmp mov mov sbb pop xor mov mov je xchg clc icebp mov out fwait sub pop (bad) add cld xchg jmp xchg sub (bad) (bad) pushq enterq rex.WRXB jmpq jb scas add shrl pop and mov in jrcxz (bad) stos cmpsl push or xchg mov (bad) cmp fnstsw movabs or fstl adc jns test mov jp jle clc (bad) jmpq jbe (bad) repz cmpsl setns mov pop test mov and mov (bad) and pop (bad) add lods cmp jbe movsb jnp mov adc push jge cmp add adc movabs and rex.WRX enterq lock sub lahf mov repnz in pop cmp cld xor and retq (bad) (bad) (bad) sti xor (bad) (bad) decb in sub push add fwait rex.B rcrb jns (bad) mov (bad) (bad) (bad) jmpq rex.WB scas sub andl rcrl adc rex.RXB movabs fdivrs (bad) mov mov push ss sub and fnstenv (bad) mov push stc (bad) sbb in out mov rex.RXB jg mov jle sti adc jg add nop callq adc add add jb jne jb push (bad) insb jne add test add sub mov bt jmpq je rcr clc shrd not push rol mov test adc bsf sub movsbl movsbq mov lea jmpq jb cmp cmp bt cmp jmpq xchg xchg and mov insl jns jo (bad) rorl fndisi(8087 adc jmpq adc (bad) xor repnz push movabs xor sahf (bad) xchg xorl es shll nop (bad) rex.RB mov nop clc lods mov add (bad) (bad) xor icebp (bad) sarl rex.RXB rex.B std repnz loopne sub adc (bad) (bad) (bad) sti shrb (bad) (bad) sahf add enterq sahf movslq and add push rex.R ja lods add add ss lret mov outsl adc cwtl (bad) negb mov movabs (bad) icebp (bad) ja adc mov out in out (bad) jbe (bad) rex and fsts (bad) addb mov neg sar sbb cmc mov bt bt bt bt cmp jmpq shlb pushq out rex.B rex.X push out retq lock xchg lods (bad) pop rex movabs (bad) movsl adc ss pop mov rex.WX cld jmp icebp mov popfq mov pushq mov pop std rex.X (bad) fildll xor jp (bad) (bad) (bad) cld jae sub jmpq or jp fstl hlt jo mov repnz repz jg add add movabs outsl (bad) int3 xor roll sub cmp sub (bad) lret (bad) sbb fsubp sbb idivl pop xor test movabs or loopne lcall pushq imul rex.W addr32 push mov or or lods push xchg rex.WRXB xchg es and push pushq mov jge xor lock jns (bad) and add mov not push (bad) sti mov repnz pop sub (bad) loopne (bad) (bad) cld test (bad) (bad) pushq (bad) jno sbb mov and cmpsl addr32 out sbb sub sbb mov lods (bad) fistl push cld iret mov add add or xchg xchg lahf xor gs mov fstpt xchg andb (bad) je adc scas addl imul (bad) scas mov (bad) xor movabs rex.WRB jmpq lea jmpq jno out xlat or cltd cmp rex.WRX jo mov orl rex.RXB fs xor mov fldt jp push icebp jo rex.WRXB add jp adc cmp add or addl (bad) int or sub cmp adc mov data16 adc iret and (bad) (bad) rex.RB imul lea mov std mov (bad) (bad) (bad) sti ss (bad) jmpq adc cmp in cmp or mov add (bad) (bad) callq push xchg or cmpsb rex.WRB mov sub (bad) cmp cltd mov out xchg pop (bad) cwtl mov xor pushq loopne lock mov retw (bad) subl jp fisttpll movsl js insl popfq jle pop outsl lret test cmp (bad) or cs mov rex.RXB decl rex.X mov or rex.WRB es int rex.WXB jb fmul lock cwtl enterq rex.RX (bad) iret lahf pushq fidivr add adc stos pop adc (bad) sub pop gs sub mov xchg jb jmpq in mov push (bad) (bad) (bad) sti sahf pop mov (bad) (bad) (bad) (bad) jnp and out adc jmpq sti mov and pushfq retq sub add icebp cli pushfq add push cmp lret pop rex.RB xlat cmpsb shl mov sahf mul outsl rex stos out in (bad) (bad) fnstsw pop rex.WRXB mov (bad) icebp callq (bad) not neg sub sub xor rol add jmpq sbb xor fsubrl popfq push push or or pop rorb cmpsl mov cmp gs and pop push out push cmp jbe and push out pop (bad) jmpq xor fs add (bad) icebp adc push (bad) (bad) rex.XB jno clc xchg xor cmp scas lea push cmp xor add (bad) (bad) (bad) sti cmp fsub (bad) (bad) (bad) (bad) (bad) jmpq and dec (bad) idivl jmpq callq (bad) xorl outsb and popfq push and mov imul (bad) mov or rex.WXB mov fs (bad) adc jns loope pop icebp pop loopne (bad) mov test mov or out cmc and jmpq ja and dec sub rol rol movsbw rcl add btr mov (bad) lock jmpq in data16 cmp mov lock sbb and (bad) (bad) jmp (bad) adc (bad) decb xchg (bad) (bad) fidivr jo push pop sbb sbb pushq scas shlb jle push or test and xchg and rex.XB rex.XB fisubl (bad) jns addr32 jo mov lock es imul mov push shrl (bad) xor xchg mov (bad) (bad) sti sbb hlt (bad) (bad) (bad) std (bad) lret xchg lods jb (bad) mul sbb sub iret (bad) mov pushq jl pop (bad) xchg test roll in mov push adc test cltd add cltd iret scas int or fidivrl rex.RX xchg orb xchg icebp push fdiv sar sub movsbw shl shl rcl add bswap sbb mov inc cmp rcl mov test repnz jmpq jmpq retq insl pop pop bnd lret (bad) retq jmp cltd sbb xchg add sub insb bnd add fwait sti add rcll mov sahf jae insb push pop adc rex.WXB loopne lock (bad) movabs pop xchg adc rex.WRXB jne xchg jp xchg rex.W rex.WRX xor adc add jmp fmulp in pop mov pushq (bad) (bad) (bad) std push lods jmp testb add (bad) mov fist imul movabs xchg insb push retq sbb insb (bad) fild pop adc jge (bad) (bad) icebp jmpq adc rcrb jle cmp push rex.RX (bad) lods rex xchg outsl xchg lock enterq sbb lock (bad) (bad) (bad) lahf mov add add cmp in and mov add mov rex.W rex.X (bad) repnz addb lods loop mov fwait imul imull mov (bad) xor jno pushq rex.R mov mov lods xchg loopne addb adc jrcxz lods mov jrcxz lea or mov outsl fcoml rclb rex.B es push xchg mov jg xchg jl jb push movsl xchg lods (bad) mov jmp jae rex.WRX jge and std pop popfq out adc add out fwait (bad) rex.WXB and (bad) push cmp (bad) jp and rex.WRXB ja jne (bad) jno movabs fdivl out and enterq xor jne es (bad) lods (bad) adc jg adc enterq iret mov add fild jae test (bad) test jmpq pop xor rex.XB lock subl movabs rcrl adc mov pop and (bad) std jmp addr32 sbb jne lea jrcxz stos (bad) rex.WX push or (bad) xor mov callq retq and (bad) out ss adc ds adc mov sbb addl in (bad) (bad) (bad) (bad) sti xor and adc (bad) cmc int cmc movslq jbe je sub test (bad) (bad) callq and lret (bad) rex.XB xchg lods pop adc or adc fmull jae movslq (bad) (bad) in out fmull push push (bad) or xor xchg mov ds xchg pop or test xor jmpq nop fwait cmp add bt cmc clc cmp jmpq jmpq jmpq jmpq jmpq jmpq jmpq fidivl rex.R cmc and cmp mov (bad) mov fdecstp fimull xchg and xorl movabs rex.B rex.RB cmpsb jrcxz mov jge xor (bad) mov mov mov retq rex.B rex.XB int3 inc pop sub sti xchg push lret in jno shll repz xchg rex.RXB (bad) (bad) (bad) cld pop push push rex.WRXB (bad) (bad) (bad) cmp mov gs pop (bad) sbb (bad) cwtl rex.WX pop rex.R gs mov stc out mov sarb je test add add add and mov negl int3 (bad) movsl cmp sbb setbe clc pushq out mov fsubrl xor iret mov mov (bad) jo rex.WRB es fnstenv sti xchg cmp mov and adc xchg push cmp (bad) pop adc lock pop pop rcrb add jns icebp sti hlt leaveq lock out jle mov test ds out add mul adc cmp jb (bad) cltd (bad) sub xor frstor add test (bad) (bad) cli dec js (bad) (bad) (bad) (bad) std fdivrl (bad) cmp popfq pop cli (bad) jle mov jmpq fist (bad) cld rex.WRB fmul jns roll (bad) sbb cmp je (bad) (bad) retq test xchg xchg (bad) scas (bad) (bad) (bad) dec out test mov stc int3 cmpsb je out jne sub callq jno hlt es (bad) (bad) imul movabs adc and (bad) sbbl outsb ja jp and out xchg sub cs sbb negb movabs push cs rex.RX in xlat loope ss sbb cld (bad) sub and insb xchg (bad) cmp mov out enterq nop sub jbe and (bad) and rex sti outsl (bad) jg insl repnz lea lea insb fldenv rex.WX enterq fmull loop mov fdivl rex.WB rex.RXB test push clc xchg cld pop cmp xor je nop cwtl (bad) test sti (bad) (bad) (bad) sti hlt rex.WR (bad) (bad) (bad) (bad) (bad) shll or rorl es add add push stos (bad) leaveq icebp cs mov gs (bad) adc cmc in push cmp movsb mov stc rex.X adc enterq shrl mov (bad) and cmp sbb out mov test jbe mov or (bad) mov cmp inc clc add loopne cmc mov cmc stc test stc cmp jg jb cmc clc jmpq pushq jmpq jmpq jmpq push lock std std xorl retq jl jmp lret retq (bad) lods sub pushfq mov (bad) mov xor jno or jge sub xor jne pop pop (bad) add in frstor adc test or roll add push xor xchg out in xchg (bad) xchg movsl and stc rex.R sbb mov adc rex.R shld mov jmpq jmpq jmpq add rex.RXB gs outsl fs gs outsb fs gs shlb pop lea mov and (bad) es mov pop cmp out retq scas int3 cmp jns xchg rex.X push mov lahf cmp xor stos lahf xchg jbe rex.B in stos (bad) jle out push xor mov test nop mov xchg push fimull cmpsb (bad) or jo xorb rex.WXB xor movsb sbb imul lods (bad) (bad) (bad) decb (bad) (bad) (bad) inc rex.WR sub lods je test loop (bad) push add (bad) sbb jne data16 cmp insl jo retq (bad) push repz (bad) or callq rex.WXB jp repnz push push xchg (bad) rex.WRXB rex.WB (bad) cmp mov mov (bad) mov pop mov addr32 cmc mov adc frstor (bad) cmc jmp or fisttpll jmp and popfq rex.WB push movabs sahf lret (bad) insb adc lahf repz (bad) out retq out jnp push (bad) test rclb (bad) jns sbb cwtl movsb int3 (bad) rorl xchg imul loope xor (bad) mov (bad) (bad) sti pushq andb rex.RXB cwtl movslq stc fidivr (bad) add loopne xchg lahf pop adc scas (bad) (bad) (bad) (bad) fidivr pushq xlat add (bad) jae test retq xchg add test ja (bad) nop add jmpq (bad) movabs add mov (bad) pop pop rex.WRX add add (bad) addb add sub (bad) addb add xor (bad) addb add js sub (bad) (bad) sub jmpq jmpq jmpq jmpq bt cmp jmpq lret scas rex.WR or mov in lsl mov xor xlat jo (bad) (bad) fstpt pushq rex.WXB rex.B cwtl cmp rex.W jle adc lock (bad) cmpsl push sub cmpsb movslq pop cmpsl mov loope movabs adc movsl (bad) cld incb insb mov loope rol je movsb in rex.XB (bad) (bad) sti je shr fdivr (bad) (bad) (bad) push movslq lods xchg jmp movabs or (bad) xor jp data16 pop (bad) mov rex.WRXB cmc jns pushq and (bad) mov pop lock or adc fwait mov cmp mov mov jg retq int3 (bad) mov mov nop pop in add test (bad) retq (bad) sahf xchg lret jg (bad) (bad) sbbl ficom sbb std incl icebp lret push xchg jb (bad) (bad) (bad) (bad) cmp push (bad) (bad) mov fnsave (bad) and fidivrl je xor lret mov lret add pushq sbb (bad) rex.WB add and mov sub jl lods jnp xchg sbb (bad) int3 scas ds pop adc (bad) mov (bad) (bad) rex.W lods lret fs xchg mov rex.WRX (bad) mov (bad) stos mov xchg (bad) jns sub lret dec mov not inc inc ror cmp (bad) repz xor setle jmpq jmpq lret cmp mov cltd cmpsl or lea xor roll (bad) shlb push xchg xchg push xor loop and cmp loop orl cld movsb fs mov cwtl nop cltd (bad) (bad) pop lea pop jmp (bad) (bad) (bad) sti rex xchg sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) push xor (bad) (bad) (bad) jns rcr adc (bad) rex.WR jmpq pop jb sub fsubs add fdivrs fimul in (bad) (bad) callq (bad) stos sbb stos sbb adc add add (bad) jmpq mov (bad) and push push std mov sub movsb outsb mov pop ss cmp push (bad) sbb mov xchg (bad) pop movsb lea pushfq shrb movabs in (bad) stc stc cmp jmpq sub cmc xor stc jmpq stc test jne jne bt mov rcl mov mov bt test sub jmpq callq jmpq pushq jmpq movabs cs rex.WX repnz mov gs or in adc sahf (bad) (bad) lods fnstsw (bad) jmpq jge movsb or mov fidivl leaveq (bad) mov or and cmp lea rex mov (bad) repz retq cmpsb rex.WRX rex.B rcrb adc adc pop stos xor enterq (bad) jmpq mov dec movsb movhps push (bad) imulb test je (bad) jmp repz (bad) (bad) (bad) sti cmpsl push xor insl (bad) (bad) (bad) incb pop sbbl cmp adc or nop shlb or iret testl mov (bad) enterq rex.W cs (bad) rex.WX test movsb mov gs adc callq shrb mov scas mov in adc es add (bad) rex.WX mov xchg add add (bad) cmc cmp test repnz jmpq xchg movabs enterq test jns cltd sbb sub lgs (bad) mov mov in retq ss pop pop nop sub int3 jg js in mov js mov xor xchg xor subl lock movsb cmpsb xor (bad) cld rex.W jmpq jl jae clc mov or (bad) movsb xchg (bad) enterq lahf jbe rex.RB neg stos jne ds outsl stos (bad) jge xor and add test or cmp mov xchg mull retq movabs cmp xor mov rex.RB sub lock scas std cmp jae mov xchg mov (bad) rex.WXB xchg add mov insl sub add sbbl mov cmpsb mov mov int3 (bad) xlat mov add pushq sub and xor (bad) rex.WX mov add xchg pushq (bad) rex.XB rex.WB xor je mov mov pushfq repnz enterq and (bad) (bad) sti leaveq or (bad) (bad) cmpsb pop (bad) xor push (bad) pop jmp xor in mov or (bad) cmp add mov lods shlb in push jnp xchg movsb (bad) (bad) xchg lock lock (bad) sub cmp add push es (bad) rex.WRX xor cmp mov (bad) xchg enterq cmc mulb scas adc rex.RB rex.WX movsb rex.X sbb outsl pop add mov or (bad) mov (bad) decb mov lea sub incl cmp (bad) mov fwait cmp cmp or or or mov rex.RX or mov sub mulb mov xchg or imul (bad) (bad) (bad) bnd or lret (bad) jp cmp add fisubl cmc movabs pop pop lock jae test push cltd mov roll push je mov test add xchg movabs jle xchg jg (bad) cmp or (bad) xchg (bad) xchg cmp add (bad) insb rex.RX add (bad) mov lods jmpq callq jmpq inc cmc test cmc neg jmpq callq bswap dec shr add clc shr shrd cmp mov stc clc clc cmpb jmpq movb cmc clc cmp test jmpq ss cmp jmp xadd pushq pop andl in repz add test pop mov add xlat cmpsl adc xchg sbb in negl mov adcb (bad) mov rex.W rex.R in and (bad) sub mov (bad) fildl test lods xchg es pop jge xor (bad) (bad) and (bad) rex.WXB xor add cwtl rex.WB (bad) cmp cwtl movsl lahf test mov sbb cwtl mov or in gs shrl cmp test vunpckhps (bad) (bad) std sub push sbb or cmp loopne rcl jns cmp rex.RB test pop out icebp push adc push (bad) adc cld or std int3 cmpsb add scas mov xchg fwait (bad) stos leaveq lretw repz test movabs and rex.RXB jnp mov jbe mov leaveq sbb mulq pop idivl push cmp xchg adc js jnp sti (bad) or test and (bad) std nop gs fist fucom jrcxz in fxch in sub (bad) or rex.W cmpl addr32 or cmp jle (bad) (bad) sti cmp movabs movabs lods cmpsl test cmp in add rcll fistpll rex.WX lret movabs pop cmp cwtl (bad) icebp pop sbb sarl sub rex.R add stc and callq sahf mov cwtl push out adc mov in dec rclb loop test out pop and in fcmovbe or (bad) (bad) clc movabs mov (bad) out flds scas xchg (bad) push sub jmp (bad) adc out cmpsl fisttpll sbb test mov rex.B icebp popfq xor xchg lret in and test sub sahf rclb (bad) (bad) (bad) sti rex.RXB movabs ss outsb push rex.RX pushfq (bad) ficoml mov (bad) (bad) jmp add je (bad) sub or (bad) rex.WRX rex.WR js in xor jae je retq xchg test or (bad) jae pushq stos (bad) rolb jae cmp mov cltd test rex.WXB jmpq rex sbb mov pop adc orl mov sub adc cmp or retq sti std cmc mul (bad) scas adc movabs (bad) test pop loopne or mov lods pop rex.WRX push (bad) jns push gs sti scas add xchg jg mov (bad) (bad) sti (bad) rex.WX (bad) (bad) (bad) (bad) (bad) movsl retq xor sbb fisttpl push es add adc (bad) movsl xchg icebp out pop (bad) in jnp add movabs in (bad) xor loopne cmp (bad) (bad) push hlt add xchg or add add pushq pop (bad) movabs and cli jmp in rex.B in cmc ja movsb mov sub xchg jmp and std xor (bad) lock leaveq movabs je stc cmc cmp jmpq (bad) ficoml fnsave add clc sbb xchg divb sub rex.WRX (bad) pop adc and push adc rex.RX fs ss mov xor cmc mov cmp xchg pop rex.RX push icebp fnstenv rex.X pushq jno out pop (bad) in and (bad) out (bad) insl jg (bad) cmp pop repz (bad) (bad) sti andl and (bad) fwait int3 xchg (bad) xchg data16 imul (bad) (bad) jmpq mov cmp fist push (bad) rex.WR rex.WRX sub add mulb jl fidivr movslq xor mov ja cmpsl pushfq rcl mov (bad) fwait loopne out lea shr rol mov jmpq cltd push xor xchg xor movabs mov (bad) andb fist (bad) out or outsb loop fisttpll lea mov rex.WRXB gs rex.XB mov lods mov (bad) je ja int3 mov rolb movslq mov (bad) mov mov (bad) sti adcl (bad) (bad) (bad) pop mov cli xor movabs (bad) (bad) (bad) (bad) fimul rex.WRX sbb repnz or xorl int and rclb imul fisubrl add (bad) retq mov (bad) (bad) psubd (bad) mov pushfq mov (bad) leaveq ja sub setne mov sub and add shl btr clc mov shr (bad) lock enterq mov clc bt jmpq (bad) cmp (bad) stc xor leaveq retq fstpl xchg (bad) rex.RB mov in or sub in es cld idivb mov (bad) mov push push sbb add (bad) (bad) int3 (bad) adc and cmp jge sbb xchg cmp outsb rex.WRB cli int mov lahf cld sub jno sub xchg (bad) pop mov pushq mov cltd rex.RB out xchg outsl sbb (bad) addr32 cmp lcall cmp (bad) mov adc sti movsb adc js (bad) (bad) (bad) incb (bad) pushfq stc sub pop (bad) mov movabs mov and cmp xchg cmc rex.WX insl scas scas xor cmp sbb imul pushq jns xor popfq out and and adc ds popfq cmc xchg jmpq jne jmpq jmpq ja jmpq xchg mov mov xchg pop not jmpq jae or dec add dec mov jmpq jbe ror sub stc sar clc movsbw mov xchg btc stc bswap mov adc add shr rcl movzbw shr inc stc bswap mov btc add add movsbq mov jmpq adc (bad) cmc xchg mov (bad) mov xlat (bad) test loope fstps outsl (bad) std icebp nop repz (bad) jae (bad) rex.WRXB sbb or in mov (bad) clc (bad) clc rex.WX clc cli icebp sahf lock cld neg (bad) rex.WRXB and jg mov push insl rex.WB add (bad) (bad) sti push scas rex.WRB xor pop and (bad) xor jle lret mov mov (bad) cld cmp (bad) rcll (bad) pop cwtl js fs (bad) (bad) (bad) (bad) (bad) pushq (bad) movabs js iret fdivr mov (bad) mov pop cld (bad) jne xchg mov packuswb out (bad) imul xchg jne mov movslq movsb mov lahf rex.WRB xchg out cmpsl cmp cmpsb cs pop (bad) fimull callq mov movabs in lods adc xchg rex.B addr32 leaveq stos (bad) (bad) push jne pushq (bad) rex.W push add or sub mov rex insl popfq fmull orl (bad) pushq rex.X insb fnop or add movslq push jmp mov (bad) movabs movsb cmpsl out sarl movsl idiv (bad) (bad) sti fyl2xp1 cmp mov (bad) (bad) decb movabs jl int3 rex.WRXB test add add pushq movsl cld lahf xchg cmc push cmc test mov sbb adc movabs cmc (bad) retq cs mov movabs shll or cli (bad) (bad) jmpq or pop pop insl or (bad) rex.RXB cli cltd rex.RX mov (bad) rex.WRX mov (bad) int3 dec repz push (bad) rex.RX cmp pop adc fdiv fs sbb jle xchg (bad) (bad) data16 or (bad) out addr32 adc jp add movabs jno sub scas pop cmp (bad) (bad) (bad) (bad) (bad) mov push add test pop rex.WX stos repz jge (bad) (bad) callq jnp mov and sbb jge movabs adc cli rex.WB fwait (bad) mov and and add mov mov pop or gs push imull mov pushq (bad) xor mov out (bad) rex.RXB cmp repz clc mov rex sbb cmp cmp (bad) jmp mov jg jbe or test fldl xor add mov movl push icebp jns icebp (bad) push mov rex.WRXB pop xchg jrcxz (bad) mov movabs popfq rex.RX pushq pushfq (bad) cmc cs jl sub hlt test add (bad) (bad) sti lock sub (bad) (bad) dec jg push sbb loopne jnp (bad) inc stos cmp mov imul jne rex.WR cmp xchg repnz (bad) test jae je xchg (bad) mov ss (bad) sub sahf mov (bad) rex.WR test movsl rex.WXB es iret sti pop jo pushq (bad) movabs add jmpq lahf pop sub mov and jmpq pop nop (bad) xor (bad) (bad) in iret or imul int int3 (bad) mov sub subl cmpsb sbb popfq jo cmp mov (bad) pushq outsb rorl addl imul (bad) jb or movabs (bad) fld sub xchg clc loope fsubrs cmp lock sub stos movslq rex.WX push (bad) scas mov xchg mov (bad) mov pop push movabs (bad) sbb jo (bad) (bad) (bad) (bad) insb nop lods jrcxz pop js lahf cld or mov cmpsl mov (bad) (bad) (bad) (bad) in mov je repnz xchg (bad) jg,pn mov iret sarb (bad) and es pop cmp (bad) repz pop rcrl fwait mov pushq (bad) mov movabs dec mov and sti mov add (bad) push xchg enterq xlat xchg rex.B iret and and je jae rorl (bad) cmpsb rex.W (bad) retq movabs sub mov pop mov mov nop pushq ficoml outsl in add or pop cltd (bad) rex.WRXB xchg and adc (bad) (bad) (bad) sti or (bad) std out sbb mov mov (bad) fistpll movsb in imul test outsl or jae (bad) (bad) pushq (bad) xor sti cltd mov (bad) repnz or mov xor rex.WRX (bad) jns or xchg push (bad) pushfq cmc (bad) mov xchg mov repz xorl jbe icebp repz fnstsw sub add sarl sub mov clc (bad) cli xchg xor mov es ss xchg rex.WXB rex.X repnz es std sub fdivl sub mov (bad) sub rex.WR mov (bad) mov repz (bad) mov add (bad) jo jns je pop scas (bad) push xchg negl roll in add xor fs (bad) (bad) (bad) cld sub movabs jp push or push (bad) pop pop or cmpsb add add pop bnd xor (bad) xchg (bad) (bad) retq sbb fsubr fidivrl and sub mov (bad) cmp movslq (bad) adc test (bad) add or scas iret or hlt movabs cli mov (bad) not jne inc cmp cmp jmpq pushq jmpq rex.WR rex.XB (bad) outsb int3 (bad) jrcxz (bad) callq movabs fwait stc (bad) nop leaveq xlat loop (bad) (bad) movslq clc pushq mov xchg (bad) xchg add pushfq pushq pushfq rex (bad) (bad) cmp cli rcll incb out js adc rex.RXB movabs lods mov add outsl pop (bad) jnp movabs xor add add (bad) imulb or test jmp movsl sar out (bad) (bad) pushq cmp and sub stc (bad) adc jge rex.W push jbe rex.XB mov cmpsl mov fs (bad) outsl fs mov cs mov (bad) cmpsb (bad) and test jmpq (bad) rex.X movslq insl (bad) jg std mov pushfq js xadd lock outsl sub (bad) cmp rex.RXB jmpq out sub or (bad) (bad) icebp cmp mov (bad) fldl (bad) loop retq lret rex.RX (bad) enterq xor xchg stc pop push repz mov mov (bad) pushq (bad) mov cwtl cmp xor (bad) (bad) (bad) cld and cmp (bad) lcall cs cmp cmp mov iret push insl rex.WRXB add jg repnz movsb movabs xor cli icebp sub xchg shr rex.WRX ja (bad) stos loopne lods mov lret imulb xchg test jbe add (bad) mov or out out rex.WRX je (bad) test cmp push pop outsb push add sub sahf icebp mov pushq pushq cmp (bad) cmp es cld int3 mov sbb nop lods mov mov out xlat jae push adc or movabs adc sti (bad) and sbb (bad) (bad) std or adc (bad) (bad) (bad) (bad) std or push (bad) movsl adc clc (bad) lret cmpsl in (bad) setns scas test push cmp mov (bad) xchg ds in xchg xchg mov xchg sahf mov add add ja retq add (bad) rex.RB frstor adc fwait xor cld push xor enterq jrcxz in int3 movabs nop and rex.WR out push cmp (bad) test addr32 rex.WB mov or pop ja sub rex.RB rex.WRXB rex.RB loope ss adcl xor je iret and movsl push mov lods pushfq (bad) (bad) sub cli lods decl xor orl add push or repnz sub sti out xchg mov (bad) dec loopne xchg test (bad) scas clc (bad) (bad) not adc add add pop (bad) fistpl rex.B sub (bad) or insb (bad) xor mov cltd scas add nop mov (bad) je adc outsl xchg std rex.RX push xchg sub (bad) mov retq movslq sub (bad) enterq mov xchg lock test adc (bad) jmpq fcompl push loop sbb sar rex.XB adc in rex.R lods adc xchg rex.R (bad) add mov push cmp sti xor mov sti imul rex.RX (bad) jo sbb repnz xor movabs (bad) (bad) (bad) sti int int sbb shrl xchg rex.X icebp stc loopne notl (bad) data16 (bad) jo (bad) cmp xchg (bad) xchg int (bad) lea iret sahf push sbb (bad) (bad) decb xor mov xor mull (bad) imul ja movsl jge add and (bad) orl mov repz cmc repnz sarb addr32 mov retq and jl sarl jl adc sub mov stos (bad) sub rex.RXB lock out mov jmpq jne and and bsr mov cmc sub sar rcl stc not mov jmpq sub leaveq imul sbb add mov add push mov rclb add (bad) rcll rex.RX push rex.WB gs push popfq (bad) (bad) mov ss mov rex.XB push lods xor (bad) pop xchg rex.RX pop enterq je movsl xor jl or and enterq (bad) (bad) sti movabs jg outsl adc add xchg stc pop sub or cmpb (bad) (bad) (bad) callq xor rcll orl fsub mov mov rex.RXB xchg push (bad) movabs pop jne (bad) hlt xor movsl add in xor out retq stos fimull add stc movzwl jmpq cmp cmp or jmpq push adc in (bad) adc lret and add in (bad) (bad) push je and imul mov (bad) ja and popfq cmp or adc (bad) or xchg insl retq pop mov callq push (bad) popfq icebp cld movsb (bad) scas repz (bad) lcall pop add sti or jb jae and rex (bad) (bad) (bad) (bad) sti movabs jge pop fldcw (bad) mov std (bad) ss jns (bad) (bad) hlt and jno out and pop fs sub rex.WR add xchg cld pushq cmpsw (bad) and cmp sbb out movsb mov mov (bad) lods adcl jmpq jmpq (bad) rex.B cmp xchg adc retq jmpq and xchg rex.WRXB xchg rex.WXB (bad) pushq (bad) nop gs and fmul out rolb or in lret repnz (bad) je lret sub retq (bad) xor xor add mov pop rex.WRXB pushq gs cld (bad) (bad) (bad) cld cmpb (bad) ljmp xor shll pushfq mov js or rex.RB and sub rex.RX cmpsb test sbb add add pushq fwait xchg pop icebp movsl rol jmpq loop cmp clc pop enterq movabs (bad) stc push rex.WXB (bad) sahf mov jmp mov lods (bad) rex.WRX and loopne jmpq movsbw jmpq jmpq jbe xadd and shl rex.W divl jmpq bsr cmp movsbl mov mov test neg sbb mov rcr dec movzbw shld add not shld data16 testl xlat (bad) callq int mov test lea out retq fstpl xchg cltd idivl (bad) jb xor fcoms sbb fbstp sbb loop out xchg mov (bad) loope cmpsl rex.R mov xor add gs scas cmpsl loopne loopne mov rex and cld xor xor loope rex.WB sbb rcl (bad) test xor lods jp push pop outsb fsubl (bad) fldcw pushq sbb (bad) (bad) stc idivb adc cld (bad) mov movabs int push or jmpq rex.W rex.R mov loop je xlat sub movabs (bad) (bad) (bad) and mov retq sbb xchg lods mov xor roll pushq sub (bad) fs movsb sbb jnp add adc or (bad) rex.WR cld callq ja retq pushfq sbb adc out lock cld or rex.WXB (bad) sti or (bad) movq jnp rex.WXB movabs fst mov rex.WRB rcll xchg idiv (bad) (bad) lcall in (bad) add rcrl adc repz in xchg add xchg iret mov (bad) ficompl mov sbbl (bad) mov cli xchg sti xor cld xor (bad) int pop or out add insb pushfq movsb (bad) add xchg (bad) or lret jb lods or adc cs imull fs scas test movabs retq pushq sub (bad) rex.B (bad) mov rex.XB jg pushq jmpq inc stc not cmp jmpq ja cmc imul test add jmpq mov adc push (bad) (bad) mov ds mov sbb imul jge lods mov rex.RB clc mov enterq rex.W cmp cmp in lret movsb cs sarl xchg adc (bad) (bad) mov loop push test sbb sbb or push (bad) nop mov (bad) out cli (bad) mov (bad) (bad) sti (bad) and (bad) movabs loop stos add hlt repnz rex iret cwtl mov mov and xor pop add add pop mov retq fstpt lret (bad) jae xchg add pushfq add loope loop (bad) fs mov jae leaveq fidivl add cmp fdivs jnp mov or jbe nop mov mov push xchg (bad) rorb out xchg fimul std fcmovbe or mov sub fldl sbb loop movsb rex.RX mov or test (bad) (bad) in xor mov leaveq mov mov mov push test frstor scas (bad) xchg fiaddl xchg repnz rex cmpsb (bad) scas iret repnz out push in (bad) js repnz (bad) (bad) sti retq test (bad) (bad) (bad) (bad) movabs idiv xchg (bad) jmp xchg stc insb pop mov add add (bad) mov int or lods sub xchg loope and cmp pushq test mov scas ljmp xor mov sti rex.R xor push and cmp repz jae jmpq jmpq push rex.W rex.WR push rex.WB cs insb add fsubs movabs bt cmp jbe lea not jae pop jmpq xchg mov (bad) mov movabs (bad) mov and outsl (bad) mov lods (bad) test rex.RXB cmp mov fwait sarl movabs adc add imul cld (bad) (bad) mov pop push rex.WR es sti cli test lahf rex.WR rex.XB mov lret lods xchg and (bad) adc add mov jnp and add sbb (bad) mov (bad) sti lret mov sbb test adc outsl gs test rex.RX pop repnz add sub test int3 scas cmp mulb outsl cmpsb sbb jge (bad) (bad) popfq int fisttpl push (bad) jg push retq cmp sahf add insb or mov push add mov (bad) sbbb lods loopne or lret icebp push or rex (bad) pop sub rex.WRX int add imul roll adc (bad) mov idiv and mov rex.RB pushfq rex.RB (bad) (bad) lea and (bad) callq addr32 pop xor rex.RXB adc jnp lret out mov (bad) jmp retq xchg rex.WRXB or callq cltd xchg rol sub addr32 pop retq movabs jrcxz (bad) sub mov (bad) (bad) cld sbb sub clc scas rex.XB in (bad) mov fcmovne stc (bad) ja (bad) add js jrcxz movabs pushq jne fdivs adc (bad) push fisttpll xor xchg fimull movabs fs (bad) cmp xorb mov mov incb add rex.X ss js fs sbb and enterq add mov addr32 (bad) push sbbl and scas mov icebp movabs sbb (bad) rex.WXB mov mov (bad) (bad) (bad) sti cmp rex.WRB cs (bad) (bad) std out mov jl (bad) mov test hlt stos fistpl neg push test (bad) sbb sub adc mov xchg sub (bad) (bad) dec repz push cwtl adc cmpsb iret fstp jne sub xlat or rex rex.W out xchg mov pop std test fdivl (bad) cmc jrcxz or (bad) mov lods adc (bad) push gs xor mov add rex.WRXB cmp cmp clc xchg cmc bt clc sub jmpq jmpq je cmp stc bt bt sub jmpq ja stc imul bt clc clc clc add jmpq mov nop in lahf neg movabs mov xchg (bad) rex.XB xor movabs push fwait adc fistl (bad) mov rex.X sub pop xchg sahf rex.WX xchg imul loop cmp xor in xchg xchg sbb imul xor adc add (bad) (bad) (bad) std rex.XB fnstenv fmuls jge push add notb or rex.WR lret iret cmpsb cltd add cld xchg scas adc sahf mov addr32 rex.WR shlb orl (bad) adc mov test cmc repnz jmpq jmpq mov jmpq rex.XB ds flds (bad) adc jl and (bad) fstpt rex.WRB sbb movsb out jmpq mov jp (bad) jae cmpsl mov fdivrl mov pop retq sbb (bad) rex.RB leaveq movsb xchg rex.XB lret mov in or jge (bad) adcl xor (bad) cwtl loop xchg pop push imul out lock repz addl sbb gs out pushq (bad) (bad) (bad) (bad) (bad) sti (bad) enterq (bad) (bad) (bad) (bad) (bad) (bad) repnz movsl shl rex.WX mov js and movabs (bad) stc icebp cmp or lret (bad) mul mov jmp (bad) in cmc or xlat jnp test rex.RXB std sub movabs js sbb xlat (bad) cmp mov or pop cmp or jne (bad) gs lods and jrcxz mov retq loop movabs push mov and loopne jo int3 add xor cs sub cmc (bad) (bad) adc add xor lret (bad) nop loope (bad) lret (bad) sbb (bad) sti adc add (bad) (bad) (bad) std out push insl push std clc cmp fdivl xchg push nop push outsb jmp loope mov fadd imul gs sub (bad) (bad) (bad) (bad) inc jns (bad) sahf mov rex.WRB rex.RB rcrb xor xchg mov test leaveq fwait mov mov and xchg rex.WB shll movsl jg mov mov (bad) mov movabs icebp and and or rex.RXB (bad) push or in add lods shr movabs lods rex.WR sbb out rex.RXB rex.RB adc iret mov cld xlat rclb mov cmp icebp imul mov rex.RX (bad) (bad) (bad) std mov add divl lahf sahf (bad) fdiv loop rex.X retq mov pop (bad) xor pop mov mov negb ja pop jge push mov (bad) (bad) jmpq movsl (bad) movsl sahf mov (bad) mov or jmpq mov (bad) pop rex.X push add add (bad) mov (bad) push (bad) push sbb (bad) pushfq int mov stos mov cmp jb jb test cmc stc cmp jmpq pop mov sbb mov imul sarl gs stos xor jno and movabs jge test (bad) fs jrcxz rex.WR and in jmpq sbb cmp cmp test rex.WXB movsl rex.X lods push sub xchg mov add test jae es fwait shlb cmp xor jmp gs jge imul (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) loop int sbb add add (bad) pushfq lea cmpsl fdivl mov add mov cmp cld out test cmp loop rex ss rex.WR stc mov pop cltd mov (bad) sub xchg clc shll xchg cli addr32 mov mov jmpq jmpq (bad) adc in std xchg (bad) negl out std push and (bad) rex.WRXB rex.RXB nop iret sub (bad) leaveq vsqrtpd rex.W rex.RXB (bad) scas fist (bad) sahf hlt cwtl pushq add xchg in mov (bad) gs mov (bad) xor in mov (bad) jno sub scas out callq lret mov jle mov lret (bad) sti fyl2xp1 imul mov movabs add add pushq and (bad) cmp (bad) adc xchg clc movabs (bad) rex.WXB add xor fs loop sub mov mov jmpq adc jmpq jne cmc lea xor stc mov sar rol neg rcr sub dec bsf mov jmpq jmpq out cmp loopne add mov test adc fldcw or xchg (bad) sub ss (bad) movabs rex mov cmp mov sub jrcxz mov mov pop mov jl jae pop jge rex pop pop (bad) (bad) rex.X rex.B (bad) (bad) (bad) sti rcll pop and mov jle sbb sub lahf mov repnz and iret or (bad) (bad) rex.RB rex.WX add pushq mov jmpq rolb rex.WRX pop cmp push (bad) test mov lret movslq sbb push rex.WX lods xor loopne (bad) add fbstp pop xor mov (bad) test cmpl pop mov mov cli movabs pushfq rex.RX sbb fdivl add movabs movabs (bad) (bad) rex.WX cs popfq cs addr32 scas faddp jnp (bad) insb or popfq js popfq xchg (bad) (bad) sti (bad) pop lock (bad) (bad) (bad) (bad) insb rclb sbb int shl fmuls xor xchg rex.RXB adc (bad) cmpsb sbb mov jrcxz xchg jge xor stos jp cmp movabs push (bad) jno sub jmpq (bad) (bad) jmpq (bad) xor (bad) cli cmp test (bad) push pop push vmovq (bad) (bad) mov (bad) and ja fidivl (bad) ss pushq rex.XB (bad) imul mov mov inc rcl sub neg jmpq (bad) (bad) cmpb mov loope xlat in (bad) fndisi(8087 mov jrcxz rex.XB or push addl test (bad) (bad) mov rex.RB rex.RXB jbe pushq mov pop data16 (bad) (bad) (bad) std repz (bad) (bad) je andl gs lahf roll loopnel andb iret insl (bad) (bad) (bad) (bad) std rex.WB or jne (bad) (bad) (bad) faddp ds cmc fisttpl lock xlat xor stc loop movsb xchg or adc mov or xor xor sbb mov sbb cli rex.XB mov mov xorl (bad) push or test stos rex.WXB (bad) mov sbb je (bad) out loope popfq sar and mov out cmp pop push rex.R movabs mov ficom adc movslq sub (bad) or out pushq test out out cmp mov sub movabs add lods mov mov movsb cld sub rol lods lea and sarl cmpsb jns imul test (bad) mov mov mov mov mov xchg stc nop mov (bad) insb sbb jbe (bad) (bad) es insb sarl fmulp add int cmp (bad) stc xchg (bad) movabs (bad) rsm push push movslq mov adc outsl pop test rex.WRX addr32 mov (bad) (bad) clc jbe cmpsl adc jl movabs sbb push sbb pushfq xor retq jnp add outsb sahf add (bad) (bad) (bad) (bad) (bad) jg rcrl or rclb (bad) (bad) (bad) (bad) (bad) in notb jae jmp jle cltd jb pop out add data16 out mov divl (bad) fwait sarl test test pop push xor mov rex addr32 xlat (bad) test and test cmp jl int add push or mov mov add add add add add add mov add xor add lods (bad) add sub add xor add lods (bad) add sbb xor (bad) add lods (bad) add sbb xor add lods (bad) add xor add lods (bad) add xor add lods (bad) add cmp add (bad) add lods (bad) add sub xorb add lods (bad) add (bad) add (bad) add cmpsb sbb movabs add add add add xor add (bad) add sbb (bad) xor add (bad) add pop (bad) add xor add add add add add rcrl loopne (bad) add add add add add sub lock add add add add add mov add xor add add add add add mov add xor add jae add jae jmpq callq jmpq movsbw ror mov clc stc bt cmpb jmpq bt xor jmpq jbe bts bts dec sub dec or mov and ror mov shld btr add not shr test not shr btc mov xor sar not add movsbq movzbl mov jmpq jmpq and cmp shl xchg jmpq cmpsb (bad) movabs (bad) rex.WRB fisubrl (bad) out (bad) out add add add add adc sbb std mov xor fmuls cmp (bad) mov (bad) pop adc loopne scas (bad) movsb pop rex.WXB lret icebp stos rex.R sbb (bad) (bad) sti cltd (bad) rex.WXB (bad) jbe lret ljmp outsb add and push (bad) (bad) (bad) push insl push mov xchg test (bad) and movslq pop adc rex.X rex.XB xor cmp mov cmp je rex.WR rex.WXB rex.W fmull (bad) (bad) or or jbe xchg fidivl sub (bad) jle sarl insb mov jge cmpsb clc mov mov pushq sub retq (bad) retq cli cmp loopne fstpl test (bad) addb mov push mov cli xchg xor pushq insl cltd or xchg cmp cmp orl pop (bad) (bad) (bad) (bad) jmpq movabs add mov pop mov and movabs mov pop adc add add sbb movslq movabs fsubrl rex.W in rex.B fs iret or jmp jg cli pop xor (bad) jp stos add add sub sbb (bad) data16 pushfq int3 mov retq insl sti rex.RX rex.RX pop hlt movsl callq cmpl xchg fs jb movsb (bad) adc scas (bad) sbb lods sbb fwait mov movl callq iret icebp cmp xchg mov fdivrl adc hlt add int3 outsl xor rdpmc movsl mov cltd (bad) retq cmp mov jne jbe add push in (bad) (bad) (bad) cld rcrb scas sub (bad) (bad) (bad) jle mov mov rex.WX movabs xchg jbe outsb movsl sbb add add loope stos add cmpsl fidivr (bad) movabs rex.WX rex.XB fistp (bad) rex repz pop jp es lods sbb mov retq (bad) mov (bad) pop test sbb and in rex.WX mov (bad) leaveq sbb in loopne in subb add xchg rex.RB rex.XB (bad) mov cli cld fsubp fdivr cwtl mov cmc pop pop and (bad) fistp jle repnz pushq jrcxz sbb (bad) (bad) cld movabs subb je mov push add xchg movabs jb lahf in and lahf jo fisub mov jmp rex.RXB (bad) or add add pop xchg adc movsb sub and loope imul mov xlat and add (bad) cmp xchg lret (bad) movslq cmp rex.WRXB rex.RB xor mov cmp movabs jg add jmpq inc cmc xor std stc bt popfw jmpq sub jmpq ja bt imul cmp bt jmpq add rex.XB (bad) je push (bad) insb gs gs repnz lock jmpq repnz jmpq mov jmpq js stos add lock out or loopne or (bad) mov test cli and (bad) jb fmuls xor data16 sbb ss rolb (bad) loopne (bad) rclb cwtl and (bad) mov fs xchg movabs (bad) or sub int3 pop out mov push xchg fldt rex.WB (bad) sti sqrtps (bad) std retq cs addr32 shl out in mov movabs fwait rex.WX push jmpq pushq xor hlt (bad) sbb cmp sbb and mov out push xor cmp cld push loopne xor sub fwait mov rex.WX fs cmpsb or (bad) or cli mov callq shrb mov push clc stc add jmpq popfq rorl ror movabs repz cmp (bad) lods rex.RX mov xchg (bad) (bad) retq push push mov (bad) add test sbb (bad) movslq sbb mov mull (bad) mov enterq pushfq (bad) (bad) (bad) cli stc sub (bad) (bad) (bad) std (bad) xchg xlat int3 rex.RX callq rex.WXB (bad) mov cli out notl je fcmovb lret (bad) ficomp mov xchg adc rolb outsb xchg (bad) mov lods (bad) repnz xchg rex.WR jnp (bad) movsb retq retq (bad) jmpq cld push xchg pop rex.B in in mov rex.R jnp (bad) cmp movabs sub cmp or pop hlt xor cltd mov js or sub xorl xor lret out in rex.X xchg out mov movsb cmp rex.WRXB xchg nop rex.WX test or gs in cltd rex.WX xor mov mov (bad) test adc add lods and stos adc mov xor adc push jrcxz xchg add (bad) cmp ja out (bad) lods push push sahf (bad) mov in adc jo jo jp rex.WB (bad) lahf cli add add or rex.WRX or (bad) (bad) (bad) sti popfq cltd out jmp (bad) (bad) (bad) jp orl sbb rex (bad) (bad) (bad) (bad) cli hlt mov retq mov loope rcll (bad) mov (bad) in pushfq jrcxz adc (bad) pop xchg pushq rex.WX sarb rex.WR lret stos mov or test cs mov (bad) jbe lods int3 jmpq test test cmpb jmpq jne cmc movb bt stc test cmc test jmpq jmpq jae xor mov mov add seta jmpq rex.WRX pop cmp add pop fsubs (bad) (bad) cltd decl sub jo adc pushq and (bad) (bad) shrb out int (bad) jae jbe cmp xor movslq movsl pop cld xor or sub (bad) (bad) (bad) cli mov (bad) (bad) (bad) std xchg jbe out cmpsl fwait (bad) mov xor mov sahf push (bad) xchg (bad) (bad) mov stc lahf cld xorl xor xor xchg (bad) movsb adc (bad) js scas adc add (bad) (bad) (bad) jmpq retq gs jo fdivrs callq adc or callq shrl jb and int rex.WRB nop mov stos mov rex.X adc in (bad) mov add sbb rex.WRB (bad) leaveq xchg lods fidivl bt cmp cmp jmpq jmpq cmp add xchg mov (bad) lret (bad) jb sbb shlb stos pop pushq (bad) fst (bad) lea fstps iret xor fdivrl add lahf sahf rex.B rex.WX push in cmpsb adc xor jmp mov test rex.RX cwtl lret fsubrl cli mov (bad) (bad) sti pop (bad) push or (bad) pop in adc jl scas xlat sbbl sub (bad) (bad) rex.RX movabs outsl lock sub lahf lret (bad) (bad) (bad) sti mov mov sub iret rolb jmpq lods leaveq enterq sub es mov (bad) xchg mov sbb sti movabs ja mov cmpsl mov mov lret jns (bad) (bad) out (bad) cmp cmp test rex and rex.XB (bad) (bad) mov xor jo pop (bad) adc rcrb cmp sbb and sti jb mov rex.W push rex.WX mov outsl xor mov (bad) cmp (bad) cmp cmp cltd fisubr jp sbb pushq sbb frstor (bad) (bad) (bad) sti pop cmp (bad) (bad) (bad) ss je xchg or pop repz movsb jne jne (bad) outsl jge and (bad) (bad) (bad) (bad) (bad) cld leaveq movabs rex.WR mov lock sub cmpsb jg sub add xorl rex.W (bad) mov (bad) sbb mov (bad) leaveq mov lret loope lret add jmpq je jmpq rex.WRXB sbb jbe fimull sbb adc test adc sbb cmc mov ficoml imul mov lret movabs movabs jge sub mov movsb in pop lret idivb or sub rex.WB enterq xchg imul rex.R add or sti jne test jl (bad) (bad) (bad) push (bad) push icebp imull xchg pop hlt xbeginq and (bad) (bad) callq rorl sub cmp fisub pop lock movabs xchg notb or sti (bad) and or xor fs push jg sub int3 (bad) mov pop sbb lret rex.RX rex xchg rex sbb mov lea push mov outsb xchg add js iret nop push mov jl adc fs stos jge xor movabs loopne mulb rex or (bad) cmc sahf repz or (bad) pop (bad) mov cmp scas (bad) mov cld js and push in (bad) sub (bad) movabs jl (bad) adc add xor (bad) cmpsl and (bad) xchg mov sti scas adc mov add add jae sahf test xchg rex.RB add or (bad) jl sub adc lock decl jg pop repnz pop rex.XB jmpq loopne xor xchg or loopne rorb out sbb xchg rex.WB add ficoml xchg (bad) add insl cmp movabs (bad) stos pop adc cmp movabs lock add mov cmp rex.B ss insl (bad) and lods mov push jbe lods xchg pop mov add (bad) (bad) (bad) sti (bad) ror mov (bad) (bad) (bad) adc rorb jae gs loop fldcw mov mov (bad) xchg rex.R xchg mov std pop add rex.RXB movabs mov (bad) mov (bad) (bad) (bad) (bad) movabs rex.RXB loop pop mov push lock adc ja lahf sbb jge jo (bad) in (bad) (bad) jp sbb mov sub roll (bad) (bad) mov test (bad) test xor in mov insb sti mov xchg ja stos (bad) ss pop (bad) pushq rex.R pop add fsubs cmp jmp cmp cmp callq fldenv xchg (bad) imul cmpsl jnp mov add pushq in nop (bad) shrb movsb sub (bad) (bad) cmp divl pop pushfq add pop jne rex.WRX addl (bad) (bad) std adc out stc fimul jo push or movabs cmp mov mov pop cmp sbb mov rex.WB adc jp add (bad) push outsl adc mov add jmpq sbb (bad) (bad) (bad) icebp xor mov imul sub mov cld xchg std mov sub movabs in movabs mov jle pushq xchg mov sbb movabs iret lret movsl lret stos (bad) add insb mov jg and sbb sub mov add add or xchg int3 jno push stos int3 and icebp jg scas mov rex.X (bad) out rex.WX sbb mov test cltd rcl rex.WRXB cs or sbb scas callq pop fcoms loop cmc pop (bad) stos sbb adc rex.WXB mov movabs jno rex.WXB mov ja rex.X cmp mov (bad) sub mov outsl fs sbb out and xor stos mov cwtl cmpl (bad) or cmp icebp adc sbb and stos mov (bad) (bad) (bad) decb lods lret adc jns pop (bad) rclb jnp (bad) mov retq rclb and sub lret lods and cmp (bad) xchg test sbb jae rex.WRX in je int or movabs movsb xlat lret (bad) jnp (bad) out xchg adc (bad) mov cmp (bad) jb sub data16 rcrl xchg retq cmp (bad) xchg mov test outsl js and (bad) rex.WB jrcxz int3 clc fsubs (bad) add movabs (bad) or adc or mov (bad) mov imul adcb in out (bad) in rclb std xor rex.WB (bad) jrcxz std xchg out movsl xor cmpsb loope (bad) (bad) sti out gs mov dec mov pop orl pushq rex.WR rex.RX rex.WXB xorl rex.W mov cmp mov mov (bad) loope jne rex.WRXB sarl lods adcl clc (bad) mov jne fidiv rex.WRB (bad) (bad) cmp (bad) sbb scas rex.WRX enterq pushfq js jle imul movabs addr32 mov (bad) pop rex.XB (bad) (bad) xchg rex.WXB pushfq retq mov sbb mov push jnp divl lahf insb mov mov movabs pop movabs cmpsb mov or rex.WR or jae mov (bad) mov xchg out (bad) ss (bad) (bad) (bad) sti fldl2t clc icebp out (bad) (bad) decb (bad) (bad) and popfq sti or cmpsl mov add pushq mov add xor (bad) fbstp cmp rex.RXB add stc movsb movsb lret (bad) mov rex.WB mov or push add (bad) shrb fld sahf int in rorb rex.WRXB sbb lret test rex.WRX add pushq sub or test (bad) mov lods mov lret mov cli rex.WR rcrl rex.X (bad) rex.WX out adc data16 cmc lock (bad) sahf push jo jp xor jmpq (bad) leaveq test rex.RB rolb rex.WR pushq mov rex.XB stos add outsb adc cmc xchg xchg (bad) sbb jbe stos sub (bad) (bad) (bad) sti pop adc xchg cs (bad) (bad) (bad) cmp or imul (bad) (bad) mov mov jl fwait (bad) (bad) sbb (bad) cs rep orl pop mov faddl int3 movabs xor lret mov or mov cltd clc push sbb loopne xchg rex.RX cmpsl xlat mov shr (bad) mulb imul add (bad) movabs push mov enterq adc rex.WX sti clc (bad) cld pop xchg xchg in movsl (bad) ljmp xor jge lock movsb ja (bad) (bad) (bad) sbb or sub pushfq (bad) jl fsub xchg pushq adc jns imulb cmc rex.RXB fadd mov std pop xchg je mov bnd sub enterq fwait rex cltd (bad) xor jb rex.RX adc and cld xchg push ror xlat (bad) mov outsl retq out rex.WRX (bad) jo scas jg add punpcklwd rex.X mov sub decl add jmpq jmpq (bad) popfq and test sbb add subl fdivr or rex.WB push mov out xchg or (bad) jp leaveq retq movsl mov (bad) js test nop lcall sbb jmpq jo mov loop out (bad) sbb jae rex mov movabs mov or (bad) (bad) std (bad) rex.WB out mov js or sbb jp out (bad) rex.WB add add or rex.RXB enterq ss xchg mov movabs push xor std mov sub (bad) rex.X mov pop stc sub ffree int3 stos mov repnz add mov pop cmp out xchg stos sbb lret incb jb cli test lock or jnp jns sar loope xor (bad) (bad) callq stos mov (bad) rex.WRB mov retq cmp andl (bad) (bad) cli xchg lock (bad) std jb adc movabs cmp cs int3 mov (bad) rex rex.W es in sbb mov (bad) mov test sub cmc (bad) pop lods sbb test lods data16 (bad) fdivs addr32 sti out (bad) (bad) (bad) xchg (bad) or movswl mov (bad) mov mov push cmp pop and jrcxz sbb or add add xchg loopne cmpsb mov adc (bad) adc jno pop push lahf adcl test mov mov (bad) lods mov test (bad) repnz mov out add sub mov add add repz xchg cltd sbb xorl sti mov movabs and outsl and pop xor cmpsl (bad) (bad) (bad) xorb push stc outsb (bad) push loopne pushq test fsubs adc push (bad) (bad) sub mov cltd rex.B fwait loope mov xchg (bad) lret (bad) stos pop (bad) pop pushq rex.W sub retq cmpsb and mov cmp push (bad) add mov sbb or nop mov loop (bad) push es pop or out rex.B test fs test lods lods (bad) sub test (bad) pop lret rex.R in outsl in movsb (bad) (bad) (bad) sti stos repz (bad) and pop adc shrb jne jmpq (bad) jmpq rex.R mov lret add (bad) pop pop adc push sub (bad) (bad) cs callq rex.RX jno or adc imul mov es (bad) xlat (bad) adc adc cwtl xor movsl int3 icebp int3 test jnp movslq cmp rex.RX pushq test (bad) (bad) (bad) bnd repnz std ficom mov cmp rex.B vcvtss2si lret pop mov or push or jns mov or (bad) insl lea repnz and jbe stos sub (bad) (bad) (bad) sti rolb imul sbb movabs cmpsl xlat loope cld imul adc add add cli jmpq adc jae (bad) xchg clc movsl rex.WB retq cmp jmp xchg test adc mov outsl (bad) je imul mov movabs push xorl rex push movaps cmp xor ss rex.XB addr32 mov cmp in xor outsb push xchg or (bad) fidiv (bad) jmp or xchg xlat xor in sahf callq movabs rex es in or (bad) xchg mov (bad) fldenv xchg shlb (bad) (bad) (bad) sti pop jmp xchg xor (bad) (bad) (bad) (bad) rex.X jl lods mov fisttpl (bad) (bad) (bad) pushq mov out repnz test lret rolb stos mov push mov (bad) iret (bad) xlat jl idivl cmp mov (bad) jbe fmull sbb add test cmp mov movzbl rex.W icebp and std bt mov stc clc cmp jmpq clc add jmpq jmpq cmpl (bad) outsl xchg clc fnstsw cltd enterq callq int3 and rex.RB add push rex.X mov cmpsb jnp lock cltd push xchg lods jle loope xor cwtl movslq int3 popfq xchg (bad) cmp sti ds (bad) (bad) or (bad) scas test nop xchg mov xchg rex.RXB int3 repnz (bad) (bad) cld rex.X xchg mov lcall lods sub jge hlt movsb (bad) (bad) fs movsl mov pushfq int3 and xchg notb loopne add nopl cmc lock cmp lods rex.RXB rex.WXB pushq cmpsl fild shr mov gs lret (bad) or mov pop addb add (bad) ss xor lret js (bad) sub rex fs mov jge push and mov push iret popfq fdivs notb stos iret cmpsl jg lock and mov fidivrl jno jmpq jb cmc cmp cmp jo jae rcl mov xor mov rcl setl movsbw mov xor jmpq lods jmpq jmpq jae bsf rcl xchg cmp mov xchg or rex.W (bad) or shrd mov sub mov stc xor cmc test stc repnz jmpq not clc jmpq bt repnz jmpq rex.WX retq sti mov adc out sarb sti clc not or (bad) xor (bad) imul pop jle scas test rex.XB jbe insl add pop cmp (bad) (bad) (bad) std fsubrl or rex.B rex.WXB (bad) fidivl rex.R mov (bad) mov jns or lods es (bad) repz and mov xor fmul and (bad) (bad) dec (bad) out in orb add jle out (bad) repnz mov xchg fs xor stos mov imul rex.B lock int3 test xchg je data16 movabs lret je xchg ror cmp add shrd btc btc sub data16 (bad) rcr bsr shr rol and neg movzbw mov or (bad) repz adc jmpq jmpq jg rclb xchg adc xchg (bad) mov mov cmp rex.RX fwait insl push lods nop push jl and lret (bad) jle mov xlat xchg cmp js sub cmp nop adc movsl hlt rex.WB push mul xchg or or rorb imul xor data16 (bad) movabs xchg fisubrl and mov (bad) sti pushq (bad) (bad) (bad) incb pop sti fwait out out retq mov pushfq push push or (bad) (bad) inc push (bad) jp fistl add leaveq (bad) xor fisttp cmp rol (bad) mov pop (bad) in add cmp xchg xchg subb cli popfq add jns rex.R (bad) gs divb sub stc test sahf out xchg retq (bad) test cmp nop rex.WRX ss mov js push mov pushfq mov cmp cltd push rex.WRB (bad) gs and (bad) neg mov (bad) push or loopne sahf iret and incb (bad) movslq sub push mov push push pushq rex.RB rex.WX (bad) callq (bad) fidiv sub xchg insl xchg callq sti scas or (bad) ja mov (bad) (bad) sti scas fmull rex.RB movslq add shl pop int adc iret movsb std (bad) (bad) (bad) (bad) jmpq test and lea mov icebp mov (bad) push cmp movsb jg rex.W mov adc (bad) cmp out add or sub adc rex.WXB js (bad) jne add mov fnstsw cmp mov fs adc sub fdivr rex.RX jp icebp callq scas iret (bad) cmp (bad) (bad) push sbb adc xlat cs stos sbb cld (bad) stc (bad) push test (bad) sub (bad) cs pop push rex.X xchg test jl and movsl adc loope jb movabs rex.XB mov fisttp xor jle xlat or xchg je pushq cwtl repnz push (bad) (bad) (bad) cld sbb (bad) (bad) (bad) clc mov or add stos fiaddl push movsb adc (bad) test add add (bad) faddl popfq mov mov retq mov popfq add mov and jmpq mov rex.WR and jb retq mov cmpsb (bad) sbb insb rex.XB (bad) fistpll int3 jns push rex.W rex.RB rex.WR xor cs insb add and mov sub add out (bad) jb shlb lahf xor jge adc outsb xchg fdivl outsb adc movslq sbb (bad) jns xchg cmp xor push scas rex.W movabs jns js cmp or retq callq outsb sti lret out xor sub verr lret and xchg and (bad) sti (bad) cwtl (bad) addr32 (bad) (bad) (bad) (bad) stos out ja cmp (bad) cmp jb add mulb pop or add stc test sbb mov push loopne ljmp xchg jno rex.WRB and rex.W std xchg in pop rex.XB add rex.RXB jg mov imul and adc mov loopne push (bad) (bad) pop mov cwtl enterq jmpq xchg retq cmp faddl (bad) sbb hlt movabs and in imul add mov mov or adc fimull out cmp test stos cmpl movabs mov adc lock fs add (bad) sti popfq sbb (bad) cmp (bad) (bad) (bad) jp lret mov stc sub (bad) rex.R pushq rex.WRB adc sti xchg (bad) and jo rex.WRXB or movabs out (bad) push or (bad) (bad) (bad) lcall adc (bad) cmpsl cs jmp pop pop rex.WB mov mov cmp callq sahf or iret sahf clc insb enterq out rex.RXB (bad) (bad) sarl mov loopne xchg lahf mov loopne fnstenv and bt stc cmc bt add jmpq rex.R rex.WRX push rex.WB cs insb add cmp decl cmp in (bad) clc xor jmpq callq bt or jmpq add add push add add in fsubrl add add add add add add add shrb add sub xor sub nop sub add add loopne add lock push push add push (bad) add (bad) cmc add add add add add add add add add add sub pushq shrb add shrb add shrb add shrb add jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul js jb js pop insb insb add cmp sbb retq adc (bad) and xlat (bad) lock mov rolb push (bad) lret ficompl int fdiv rex.WB cmpsb pop add and (bad) cmp mov rex xor rex.B rex.WR rex.XB (bad) rex.WX callq rex.WRX xchg movsb mov xchg in xor cs hlt pushfq addr32 rcrl gs rex.WB cmpsb (bad) data16 sub shlb sbb push mov pop je push cmp cmpsl (bad) sbb pushq xchg and (bad) lea rex.WRXB jb (bad) rex.W sbb adc (bad) movsl in (bad) or (bad) retq loope sub callq rex.WB rex.X es test (bad) lods repz lahf mov sbb (bad) popq sbb adc cli (bad) mov ror pushq movabs rex.WXB rex.WRB sub sar and popfq sub and retq rex.R ja js fldl sub mov mov loop sub fs insb jne in test jne jl callq enterq int3 sub (bad) pop sub scas mov test rex.WR push (bad) cmp or negb loopne mov mov sub or push mov cmpsb repnz mov or out cwtl out fs rex.WRB repnz cmpsb (bad) and iret cmp cmp pop rcrb (bad) jbe sub ja (bad) add mov jne push (bad) mov js clc or mov movsl mov pop xchg mov lea xor out outsl adc mov insb callq sbb int in int3 out xor xor fnop mov push mov mov fcmovnu (bad) test sbb adc (bad) in rex.RXB cltd mov gs mov or cmp mov jp pop sbb mov in xorl add mov (bad) fimull movabs xor rex jmp xchg mov (bad) in repz (bad) jl je stc or mov outsl ss movsb xchg stos cmc cmp (bad) scas cmp jno pop jle pushq lret addr32 sbb adc xchg lea jnp rex.XB jbe adc in ds fs mov and jle mov stos insl lods xor icebp add cld adc xchg sar pop add fnstsw sub rex.WRX (bad) jmpq fxam (bad) retq and outsl sbb adc cmpsl fcoms not retq sbb (bad) stos lock sbb imul cmp (bad) jg (bad) cld sub not rex.WRB pop (bad) movabs sahf mov sbb imul push mov fistl pop rex.RB ror push mov rex.W enterq cs shrb retq out jb roll add sub xor movl adc cmp sbb (bad) (bad) fnsaves retq es add sbb enterq mov mov pop (bad) lock or xor retq add divl sub xchg xchg sarl rex.WRX sub je jno pop or (bad) rex.WRXB xor notb bsf (bad) cmp int3 fldenv addl mov pushq scas mov jbe adc and divl (bad) or sub xor mov outsl popq mov sbb adc jns imul sub (bad) adc std rex.W rex.XB jl (bad) (bad) retq add cltd jne cmc rex.WB int3 mov stos pop xlat push pop out and rex.WRXB or (bad) mov sarl adc mov mov movabs xchg cli jmp retq (bad) mov in jno rolb (bad) orw imull (bad) (bad) loop push std (bad) (bad) out xchg callq ja pushq movabs push push add and sub sbb xlat rex.W loopne int3 (bad) push jge movabs pushq sub adc retq sub add sti retq jl cs pushfq push xchg add ljmp sbb (bad) pushq lea andb sbb cmp addr32 fisttp out push jge movsl add xor (bad) data16 iret sahf sbb clc xchg add insl and (bad) decb cmp pushq fadd mov data16 gs test xchg xorl (bad) jnp not cmp ss (bad) jle xchg insb mov (bad) jno push and movabs movabs xor rcll cli rex.WB or adc push out and fs cmp int (bad) xor adc jns sub imul rex leaveq jge sti xor gs gs callq stos sbb out push faddl hlt cmp ror stc mov shll pushq (bad) pop and sub xchg pushfq enterq imul jmp or sub xchg rex.R jge jbe cmp rex.RXB ja int3 jmpq sub icebp mov callq mov (bad) cmc sbb in repz cs rex.WX add jns add rex.W in xchg rex.W cli sub and mov stos out rex cwtl (bad) fscale cli and mov sbb rex.RXB int std push movsl add rex.R fldenv mov and sbb sub ds (bad) xor mov rex.RB rex.B pop xor jle lea pop mov fs mov ficom cmp (bad) cs push (bad) or (bad) and rcl test ficomp stc cmp (bad) jmpq sbb xor lahf xlat rex.WX add cmp int cmpsl cltd xchg sbb outsl mov mov (bad) and and adc xchg rdtsc or fimull cltd mov cmp cmp sbb or pop rex.WB lock rex.X iret incb push loop cmp xor jo insl push and sub push jno jp xchg outsb loop and mov sub fstpt fisttp (bad) push cmc fcmovnb xchg lock enterq popfq pop cmp mov movabs movabs (bad) mov ss mov cmpsl fnstenv mov sbb (bad) int (bad) loope rex.WRX fs cwtl mov xor mov adc rex.WXB mov loop loopne xchg and jmpq int3 imul andl loopne (bad) rex.R xlat rex.R push jmp mov sub cmp nop out mov in out xor lods xchg in (bad) (bad) rex.R (bad) adc in ds or pop (bad) movabs (bad) clc rex.RB xchg jb (bad) jmpq sti xchg retq std retq jne in pop sahf std (bad) sahf lahf fdiv pop icebp lret fs cltd js pop stc int3 mov retq jle negb int3 rcrb lea cmp stc pop add sub add es cltd punpckldq out jns lods rex.RB (bad) in adcb push sub rex.WRXB in sbb jno sar xlat pop or rex.R stc cmp mov rex.B jmpq push mov in pushfq (bad) fucomi rex.WXB mov and (bad) lret jl jp and mov sub jmpq sub (bad) fistp cmp rex.R addr32 mov and movsb adc (bad) (bad) ds mov test pop lea (bad) or test pushq movslq add stos es fadd xchg data16 jrcxz ss xchg add jo scas fcmovbe movsb sub test js sbb movabs addr32 pop cmpsb retq out or xchg rex.RXB std cmp pop test (bad) addr32 imull sarl ja int and imul mov mov mov rex.WRXB mov xchg (bad) idivb movabs fstpt xor rex.WB (bad) fs fucom cmp idivq xchg or movabs leaveq test mov (bad) cmc lret xor or insl add xchg movabs lea cmc mov push fcomi stos adc jrcxz jmpq and rex.WRX repz push mov fsubrl mov sbb (bad) rex.WRXB mov jrcxz out lea push fs rex.WRXB (bad) mov xchg stos outsb sahf cmp sub mov xchg (bad) (bad) leaveq test sub cli nop push (bad) cmp in and (bad) jl mov rex.WR adcl imul pop add fwait (bad) sub mov fldl cmp adc mov xlat leaveq mov push cmc imul adc stc shll adc mov movabs lahf cld (bad) xor stos (bad) lods cmpsl cmp loop out sbb mov pop in stos jmp movabs sbb cmpsl xchg sub hlt rcrl divl test cmp mov popfq (bad) mov adcl sub or add mov jno xor (bad) push jrcxz cmpl and (bad) or adcl xor cmp in icebp sub rex.RX (bad) stc (bad) and rcrb loope lret movabs and (bad) movsl pushq and or rex jnp (bad) pop (bad) or jmpq mov movslq int add outsl pop ja sbb std and lods imul xchg imul cmp rex.WXB std push (bad) lock push outsb imul cs insb add test cmc movb jmpq (bad) (bad) lods out (bad) sbb pushq or rclq push xchg (bad) cmp mov rcll loope fidivrl sub push cwtl roll pushq test movabs (bad) rorl cmp movsb rcrb pop rex out cli (bad) (bad) (bad) (bad) mov loop pop (bad) movslq outsb ja scas lret mov rex.WB adc and in rex.WRX rex.XB cmp retq xlat jle cmp mov rex.XB mov jl mov pop clc enterq pop cmp in nop jne (bad) lock bsr xor rcl shl mov seta bt jmpq adc lret out sbb (bad) (bad) (bad) stos int3 rex.WRXB pushq xor fdivl xchg jl jns movsb rex.XB or std out stc cltd pop mov in (bad) fbld callq outsb rex.WB cmp movabs sub rex.WRXB repnz (bad) gs adc lods mov push pushfq sti rex.WRB outsb (bad) jo (bad) push xor (bad) (bad) (bad) cld adc sbb in mov (bad) push callq insl mov mov xchg test lea lret fs mov xor ja (bad) jbe (bad) cmc push xlat mov fcmovb mov rex.R sahf mov movabs in js and mov out lret xchg jmpq jmpq loopne jmpq rex.WRX rolb mov (bad) idivb push pop mov (bad) cmpsl imul test fidivl mov push xor (bad) (bad) fisubr rex.WRXB and roll popfq std popfq or xchg mov xchg fildll xchg out rex.XB jae cmpsb sbb xchg mov xchg fbld (bad) cld mov add js (bad) (bad) ljmp jl rex.RX or sahf stc xor push (bad) xor (bad) jb fmull cmp int3 iret jrcxz add (bad) movabs mov add add fs mov rex.XB loope jl ror and cmpsl cmc loopne cli adc (bad) push ja push cmp mov movabs xchg sub jnp mov (bad) rex.WRX retq adc mov lock inc (bad) pop jb pop jmpq xor xchg xorl sbb cmpl (bad) lret sub (bad) lods test imul loop callq jle cmpsl jp in in (bad) cmpsl (bad) xchg stc jo test (bad) (bad) sub jl imul js mov sbb movabs repnz imul out lahf and xchg xchg (bad) (bad) (bad) sti fdivrs (bad) (bad) (bad) mov (bad) out (bad) xor shlb scas rcrb add add xor sbb int xor adc cs mov fisttp rex sub xor fs (bad) sbb fwait idivb mov cmp cmp fisubrl mov icebp sti mov mov hlt jmpq bt not test cmc stc jnp sub clc xor stc cmp stc cmp neg cmp cmc test not jmpq or mov fld insl add jne cs rex ds sbb out stos (bad) jnp xchg repz pushq push icebp test movabs retq or mov (bad) in (bad) pop movabs (bad) (bad) add sub lods (bad) in test pop lock retq jp (bad) push mov orb js stos (bad) out fcmovne pushq (bad) (bad) decb (bad) (bad) (bad) (bad) xchg cmp push xor and sub lods nop rex.RXB xchg ja loopne imul shrb xchg mov stos mov (bad) adc and movabs mov pop pop (bad) retq movsl sub (bad) pop or in jl jno xchg stos mov repnz in movabs cwtl in jmpq mov rcrl repnz test pop data16 pop jl (bad) (bad) xor mov (bad) stos sbb (bad) (bad) xchg orb pop xchg hlt loope (bad) adc (bad) icebp test mov rex.X sbb cmp mov lock icebp fnsave sbb movabs add loop,pn and add sbb xor (bad) (bad) cli mov cmp xchg (bad) (bad) std mov jrcxz lahf xchg add loope rex.RX xchg test loop imulb (bad) sub sub out test fistl jge jb xor push movslq out movsl rolb (bad) add (bad) jmpq (bad) add fcom jae popfq (bad) pushfq cmp or and add (bad) (bad) callq (bad) jbe sub insb (bad) rex.RB std or cmp xor (bad) mov xrelease sub jmpq adc movsl pop jae fcoms adc lock xor fcoml out (bad) sarb mov rex.WB stos rex.RB pop movabs mov add rex cmpl xchg rex.R enterq cld cmp shr (bad) (bad) (bad) callq in mov pop mov mov movabs xchg (bad) in sti scas adc xor and sbb ja sbb loopne jp movb stos add add add xor mov cmp pop mov mov fidivl lock mov push out pop adc pop (bad) push (bad) adc add rex.WRXB movsl lret popfq mov pushfq mov hlt push movabs jno xlat iret sub jmpq pushq jne ja rex.WRXB xchg leaveq fs mov fnstsw fisubl or cmp cltd andl mov mov mov jrcxz jo sar (bad) (bad) cli jne repnz xor retq mov xchg adc and (bad) movabs cli enterq (bad) fistpll fstpt cmp xlat cltd movabs mov jnp cmp movsb movabs pop (bad) loop loopne pop (bad) sbb xor sub int rex.WR data16 pop or (bad) mov test lret rex.WX rex.XB xchg add push fstp mov mov cmp fnsave add mov jb movsb cmp (bad) cmc shrl (bad) movabs jmp lret icebp leaveq data16 xor mov or add sbb enterq xor lret push icebp movabs xlat (bad) out sbb pop xchg add or add movsl sub callq mov sbb je loop test cwtl imul (bad) not pop not xchg not xchg pop xchg jmpq xchg adc or mov popfq xlat sub stos int mov xchg rex.RXB ss pop jl rex.WR jg cmp jmp mov cmp mov test push sbb xor sub mov imul or (bad) callq push or mov in vpminsb fild jb sub add rex.WX adc int js mov test decb (bad) (bad) (bad) (bad) rcrb (bad) imul test cmp xor movabs or int (bad) or cld movabs out rex mov shll stos add or fnstsw movsl mov mov stos pop jmp in mov notl test mov (bad) bt sub clc cmp jmpq jne (bad) xor leaveq push sub mov (bad) or pushq (bad) mov (bad) mov sbb (bad) cmc in rcll pop xchg bnd out popfq rex.WB rex.X stos std popfq rex.R repnz iret stos cld ds pushq (bad) and (bad) lret sbb (bad) jo test xchg mov cmp xor (bad) out mov movsl cmp outsb rex.WRXB ja callq and (bad) (bad) xchg sub leaveq sbb sbb in (bad) (bad) sti stos lea (bad) (bad) (bad) decb jge add fisttpll mov fiaddl test or add add imul movsl out (bad) sbb sahf adc (bad) mulb gs or xor mov sub sub enterq (bad) sub sahf test clc test jg add jmpq clc clc neg jmpq imul test jmp or xchg cmp cmc cmp xorl cmp jmp (bad) movabs (bad) fcmovu mov rex.WXB (bad) (bad) mov test mov lret and jp popfq (bad) xchg stos (bad) or lods mov test rex.WRX rex.WXB add jmpq lea (bad) cmpsb cltq cs mov loop pushq mov rex.B test (bad) (bad) cld pop js repnz (bad) (bad) (bad) pushq mov cmp fisttpl nop rorb pop mov outsl mov (bad) sub adcl sti cwtl lahf jno (bad) cmp (bad) jno (bad) rex.WRXB repnz pop xchg add add imul cmp rex.WRB loope add xor (bad) add sub push shr in xchg mov out jrcxz pop (bad) (bad) (bad) add sub rex.X stc pop jno pushq fwait rex.WXB (bad) (bad) lret stos and flds jne xchg xchg jbe (bad) push rex.WRB dec callq sbb adc jae mov fldl mov nop sbb icebp ds adc (bad) (bad) (bad) (bad) sti (bad) mov jae int3 pop int (bad) retq repz es xchg cld (bad) nop out xchg cmp (bad) sbb pop sub out fisttpl fmull rorl mov pop cmpsb xchg rex.XB movsl fcomip loope xor sbb cmpsl rclb and pop sahf mov sahf outsb rex.RXB (bad) (bad) decb insb xor pop repz push cmp cmp (bad) decl push xchg cltd mov iret fs or outsb pushq iret test pop cltd cld pushq sarb ja testl fist cmc push ss scas int3 xchg mov xchg xchg rex.RXB rex.WRX ss mov pushq or mov xchg pop (bad) rex.W and and stc xchg cmp pushfq adc rex jl mov loopne add adc movsl rex.WB (bad) test movabs lock (bad) (bad) (bad) std popq mov fnsave cmpsb adc add add jne imul mov decb (bad) mov mov lods enterq adc movabs (bad) xchg clc rex.RXB fdivrs std retq outsb rex.B (bad) rex.RXB pop sbb rex.WRXB push sahf push outsl mov gs push jle cmpsl idivl pop rex.XB (bad) sarb pop pushq jl push mov jb pop rex sbb and outsb sahf or (bad) (bad) lods loop cs cmp (bad) fisubrl popfq lods jg rex.X mov push push notl ds mov sub out sub int3 rex.RX shrl mov rex.X ss mov lret jp (bad) rex.X cmp icebp movabs std xchg (bad) sbb loope frstor lods rex.WRXB and idivl je pop cmp out cltd jge pop movabs push jrcxz and pop (bad) adc out rex.WRXB pop rex.WXB and jg pop ja,pn jae scas jne pop or sbb rolb adcb cld xchg test pop int (bad) jg push in movabs callq out or adc (bad) cmpsl (bad) sbb scas sti not add (bad) jns movslq out fiaddl jns (bad) fs and (bad) testl subl pushfq movslq jae fildl mov iret shrb rex.WRXB rex.WRX je cld out leaveq std jrcxz pop xor test sub pop mov retq bnd cmc (bad) mov lock rex.WB ds mov imul sbb xor push insl sarl lods mov es rex.WRX sbb cltd cld sub (bad) incb gs sub mov int3 adc rex.WR and fildl int (bad) movabs mov js rorb rex.WRX rex.WXB rex.WRX jb mov rex.X or es add sub je ja cmp jmp test mov add mov (bad) (bad) cld jns push and (bad) (bad) (bad) ljmp cmp lret mov pop repnz (bad) rex.W loop rex.B cli sbb (bad) jno add add or mov movabs sbb cld push hlt test jbe outsb pop (bad) cwtl in and (bad) stc (bad) (bad) and xchg es add mov (bad) mov decl pushfq test add jmpq cmp jmpq out rex.R lods es jg jge mov fsubp fdivs mov rex.X repnz stos sbb lahf mov loope xchg sub mov movabs mov imul xor roll scas iret and adc test outsb adc insl (bad) sbb or xchg (bad) push or movabs test xor push ss adc mov mov notb jno test cmp jl ror stos sbb movabs cwtl xor mov sbb imul (bad) (bad) cmp mov repnz cli push ds add add lods xchg stos out push (bad) rex.WXB adc outsb (bad) mov jbe rex.R (bad) mov rex.X pop out rex.B repz rex.WX push scas rex.XB xchg je mov shlb pushq incl repnz retq ja rex.X sbb loop xor scas int imul mov ficompl (bad) rex.X pop loopne rex.WX rex.RB (bad) fcmovu adc (bad) (bad) movb data16 icebp fidivr (bad) (bad) (bad) decb cmp rcrl and push (bad) fnstsw xchg add rex.X bnd and xor push jns jl pushfq xchg (bad) fwait push add jno incl test fnsave fisttpll shll cs mov push xchg adc cmp lock jmpq je shl jmpq sub jmpq cli xchg add in jo rcl xchg rex.W hlt callq jo xchg or cltd cli in in fmuls xchg add (bad) mov sbb je pop sti andb rex loope rex.RX or mov (bad) adc stos jne test retq test stos and or and sub jne outsl mov jg mov jl sbb sub mov (bad) stc and loop (bad) (bad) (bad) movsb outsb cmp enterq cmp pop sub (bad) retq imul pop xorb and cmp rex.RX stos movsb out sbb rex (bad) int adc mov push jl mov xchg xchg mov xchg int3 mov (bad) add or retq (bad) pop cmp in mov xor lods and pop lock cmp (bad) (bad) jg rex.B ds pushfq or mov push mov (bad) mov mov frndint imulb pop push (bad) stos movslq in (bad) mov and rex.R mov (bad) jg rex.RX xor add cltd (bad) movabs push sbb jmp int lfs cwtl push pop hlt cmp xchg or mov xchg lret mov mov repz adc (bad) add add mov cmpsb adc (bad) (bad) mov jle (bad) mov mov test (bad) fmull (bad) add jl mov xor add mov sti mov rex.WR ss (bad) fsubrs (bad) in xchg js (bad) mov cmp or mov ja (bad) (bad) enterq mov (bad) test (bad) push loopne or rex.RXB testb cld pop and and pop jp (bad) enterq lods (bad) xor mov stc mov (bad) (bad) sti fldenv (bad) (bad) (bad) mov or push cmpsl jns or (bad) mov ja (bad) rex.RX (bad) xor push rex.WXB mov xor adc fnstcw scas (bad) mov sub test movabs out rex.R cmp in movabs js out rex.WXB rex.W in (bad) (bad) mov rex.WXB rex.B xchg pop repnz fstpt lods adc cmpsb jrcxz xchg jns sbb cmc stos (bad) xor rex.RXB pushq mov (bad) mov or movsl (bad) jg or orq jnp out ds xchg cmp (bad) hlt xchg rex.RX out lea pop xor (bad) (bad) cli cld adc mov (bad) (bad) (bad) std fldenv sbb jrcxz rex.B mov add cld jb jb sbbb fwait jns add out test fwait rex.X adc rex.RXB mov rex.X cmpl fsubrp (bad) mov xchg enterq (bad) mov add in rex.XB andb insb (bad) stc xchg clc cmp cmp sub test cmp jo shl mov not jmpq jmpq jb stc cmp cmpb jns jne add mov cmp or mov test stc cmc add jmpq rex enterq fimull add in rex.RB lock mov callq and adc mov xchg push cmp (bad) xchg jo jns (bad) sarl sbb and outsl sub in pop push out jrcxz and rex.WRXB (bad) (bad) sti xor fs icebp movabs leaveq pop (bad) sbb mov imul xchg mov lea out lret pushq cmp data16 (bad) (bad) (bad) std rex.XB or sahf andl (bad) outsl retq stos jmp rorb fs rex.WRXB rclb pop cmp outsl mov jmp (bad) (bad) (bad) inc xchg (bad) stc push in rex.WRX icebp (bad) xchg lahf jns rex xrelease mov sub jmp mov jrcxz retq test (bad) loopne push or js data16 sbb mov hlt xor mov jmpq scas iret (bad) in (bad) jp mov (bad) add cmp lods mov in movabs push fcmovbe fisttpll out ss adc add rex.XB (bad) push (bad) test fwait xor cmp mov sub (bad) xchg jg and scas xchg out rex.RX jno pop (bad) movabs iret xchg cmc (bad) jge shlb add jb bt cmp cmp jmpq pop pushq mov andl scas adc jmpq mov (bad) or or (bad) loop push xorl (bad) pop jnp test (bad) or or pop stos data16 sbb xor (bad) outsl rex.WX jne adc rcrb and pop pop adc lret movabs loopne out (bad) pop push (bad) fiadd mov rcr rex.WRB sbb jmpq (bad) mov shrb cs (bad) fs mov (bad) (bad) and insb (bad) (bad) (bad) sti mov push sub (bad) imul push (bad) sbb lods shlb (bad) jmpq stos rex.WXB cmc (bad) sbb (bad) cli int3 lods out negl jp repz cld add rex.X rex.R cmp cmpsl negb ss (bad) mov or mov (bad) push insl sbb sarb shr fildll (bad) (bad) jmpq sbb sub dec add bswap or add mov bt bt mov stc test test repnz jmpq inc stc clc not cmc cmc cmp clc add cmc cmc cmp cmp add cmc test bt bt xor test cwtl test cltq bt jmpq jmpq jmpq mov jmpq jmpq push jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq pushfq jge popq jmpq jmpq jmpq mov jmpq push jmpq push jmpq mov jmpq mov jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq jmpq jmpq mov jmpq jmpq push jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq jmpq jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq push jmpq je test bt cmc bt cmp jmpq mov jmpq lea jmpq cmc mov test mov shld mov stc cmp jmpq push jmpq jmpq addl bt push bt test stc clc sub jmpq jmpq pushfq jmpq shrd bts or rcr mov mov add jmpq movzbw pop jmpq push jmpq jmpq ja jmpq mov stc cmp bt sub cmp movl clc or jmpq sub jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq push jmpq pushfq jmpq jmpq push jmpq jmpq push jmpq mov jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq mov jmpq pushfq jmpq lea jmpq push jmpq mov jmpq cld cld jmpq test sub test shl jmpq jmpq shrd bts jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq bt add jmpq jmpq jmpq push jne push jmpq mov jmpq jmpq pushfq jmpq jmpq test jmpq push jmpq jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq jmpq not jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jle pushfq jmpq push jmpq jmpq jmpq jmpq mov jmpq jle mov jmpq jmpq cmp jmpq jmpq bt test stc sub bt imul jmpq jmpq push jmpq xadd ror mov jno bts neg mov jmpq jmpq jmpq push jmpq pushfq jmpq mov jmpq cmp sub jmpq jmpq push jmpq jmpq sub bt clc shr jmpq popq jmpq pushfq jmpq push jmpq push jmpq jns push jmpq mov jmpq push jmpq pushfq jmpq push jmpq jne lea xorb jmpq sub jmpq jle not jmpq dec cmc clc bt xor jmpq jmpq rol btr bt mov stc clc xchg stc xor jmpq pushfq jmpq mov jmpq jmpq mov jmpq jmpq jmpq lea push jmpq push jmpq jmpq mov jmpq push jmpq popq jmpq movsbw push jmpq jae popq jmpq decl jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq jmpq test jbe bt add jmpq cmc cmp jmpq push jmpq cmc test cmp jmpq mov jmpq push jmpq jmpq jmpq es mov jmpq add jmpq mov jmpq jmpq jmpq jmpq clc addl cmp clc cmc jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq je test cmc cmp jmpq divl jmpq popq jmpq jmpq mov jmpq jmpq mov jmpq mov jmpq pushfq jmpq mov jmpq sub jmpq jp sub bt imul jmpq push jmpq jne pushfq jmpq sub jmpq jmpq bswap movzbw mov jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq jmpq push jmpq jmpq movzbw bswap mov movsbw push mov bswap not movsbw mov jmpq jmpq jmpq jmpq push jmpq push jmpq cpuid cmp test stc sub cmc jmpq jmpq jmpq lea dec movsbw bt jmpq jmpq jmpq jmpq popq jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq ja jne je jmpq jmpq movsbq not setae seta mov jmpq jmpq jmpq mov not not mov jmpq push jmpq push jmpq push jmpq jmpq jmpq push jmpq popq jmpq push jmpq mov jmpq je stc cmp jmpq pushfq jmpq mov jmpq push jmpq push jmpq mov jmpq jmpq test bt and jmpq popq jmpq push jmpq jmpq jmpq push jmpq push jmpq mov jmpq push jmpq jmpq jmpq inc cmc lea bt clc bt not jmpq popq jmpq mov std jmpq push jmpq mov clc mov stc bt sub jmpq jmpq mov jmpq jmpq seto pop movsbw movsbw pop not jmpq sub jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq jmpq stc bswap stc bt test test sub bt ror jmpq jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq add add add add cs add cmp add and add movabs jrcxz add loopne gs loopne (bad) add rol add add add add add addb add add add rolb xor add add add add add loopne gs and add loopne gs cmp add rex addr32 rolb xor add loopne add add loopne movslq and add add add add add loopne movslq rcrb xor add movabs add xor add add add rex pop add loopne movslq add add (bad) clc (bad) add add add add and add and add add movabs pop fs sbbb xor add loopne movslq rex pop add add add add add add movslq movabs (bad) (bad) add (bad) jne add (bad) (bad) movslq (bad) jne add and movslq cmpb xor add rex add movabs or xor add rex xor add and add and pop add sarb add (bad) add and add movabs insl add add cmp add movabs scas gs (bad) mov add loopne gs movabs (bad) movslq add add add (bad) fisub xor add (bad) (bad) add add (bad) clc (bad) add (bad) jne add movabs retq pop add rex add add rex xor add rolb add and add add movabs cs add loopne fs add add add add and add add loopne (bad) add rol add and add (bad) fisub xor add and movslq movabs addr32 rex rex gs loopne fs add (bad) add rorb add loopne pop add rorb add and add loopne movslq rex pop add and add adcb add rorb add rex add (bad) mov add and movslq and movslq ror add (bad) clc (bad) add movabs scas gs and movslq add (bad) add loopne add add rex rex.WB addr32 loopne movslq add xor add add add add rolb add and add rcr add rex addr32 and movslq and add rex add add rex pop add rex add add add add add rex pop add add add rcrb xor add cmpb xor add (bad) jne add rcrb add adc xor add rolb add add add add add movabs (bad) xor add and add add add add add add add rolb xor add add add add fs add xor add loopne add add sbbb xor add and movslq loopne pop add movabs (bad) xor add rcr add (bad) jne add (bad) fisub xor add and movslq and movslq loopne (bad) add loopne gs rcr add cmpb xor add add fs loopne fs add add sarb add rex.B add add and add add add xor add rcrb add xor add add pop add and add cmp add and add rcr add rex rex.WB addr32 movabs lock add add add and add add rex pop add add add sub add movabs scas gs add add rex pop add and add add add rex addr32 sub add and movslq and pop add sub add rcrb add or xor add rex rex.WB addr32 rex xor add and add add (bad) add rex rex gs cmp add and add addb add add add movabs fisub xor add and add ror add add fs rex rex.WB addr32 xorb add (bad) add loopne movslq addb add add fs rolb add and add (bad) mov add (bad) jne add loopne (bad) add orb add add add ja add rcrb add insl add add rex rex.WB addr32 rolb xor add add (bad) add loopne fs add fs loopne gs addb add loopne fs ror add and add sub add add add add add and movslq and add sbbb xor add (bad) (bad) movslq add (bad) add add pop add and add (bad) (bad) add add and pop add add push jmpq push jmpq jns sub jmpq popq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq mov jmpq test add jmpq cwtl bt test bt cltq test cmc stc test sub jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq neg movzbl test xor test cmc stc test add jmpq popq jmpq push jmpq push jmpq push jmpq cmc cmp sub jle mov jle lea jmpq not seta mov jmpq popq jmpq je stc stc clc bt addl cmc cmc sub clc jmpq clc add jmpq mov jmpq push jmpq mov jmpq dec jmpq jmpq cmc shl jmpq jmpq push jmpq jmpq pop cmp cltq cmp jmpq push jmpq push jmpq push jmpq jmpq jmpq push jmpq test clc stc test ja je test test test cmc addl stc bt bt clc sub cmp cmc sub clc xchg test bt bt cmp cmp jmpq push jmpq jmpq je cmp bt clc clc cmp jmpq mov jmpq jmpq cmc add jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq popq jmpq inc stc clc clc cmc ror cmc clc bt jmpq mov jmpq mov jmpq jmpq jmpq push jmpq pushfq jmpq jmpq je setp lea not lea mov jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq jmpq push jmpq mov jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq cwtd mov sbb dec test movzbw mov jmpq jmpq jmpq push jmpq mov jmpq push jmpq push jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq jmpq stc cmp xor cmc cmc cmc stc sub jmpq jmpq jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq jmpq add btr mov shr setns mov clc sub jle divl jmpq mov jmpq push jmpq push jmpq jae push jmpq mov jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq jmpq jge push jmpq push je push jmpq jmpq push jmpq push jmpq jne bsf cmp or neg xorb mov bswap setle pop jmpq push jmpq jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq push jmpq jmpq jmpq popq jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq jmpq jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq jmpq jmpq jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq jmpq push jmpq jmpq push jmpq clc jae add jmpq push jg push jmpq shl movzbw neg mov bt cmp shrd add jmpq push jmpq jmpq push jmpq push jmpq rcl movsbw clc mov add jmpq mov jmpq jmpq jmpq push jmpq mov jne pushfq jmpq push jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq push je push jmpq jmpq push jmpq jmpq jmpq jmpq inc xor shl btc xor cmp movzbl jmpq pop jmpq jmpq push jmpq mov jmpq push jmpq push jmpq jmpq push jae push jmpq jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq popq jmpq jmpq jmpq pushfq jmpq push jmpq push jmpq mov jmpq jmpq push jmpq jmpq popq jmpq jmpq jmpq jmpq jmpq popq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq clc shr jmpq push jmpq bsr and rol lea cmp bt jmpq jmpq jmpq movsbw lea shr stc mov jmpq push jmpq jmpq jmpq jmpq push jmpq pushfq jmpq push jmpq jmpq add ror mov cmc sub jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq jbe sbb lea cmc stc lea stc test jmpq push jmpq jmpq jmpq jmpq jmpq inc stc bt ror jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq push jmpq pushfq jmpq jmpq bsf xor bt mov jmpq jmpq jmpq jmpq cmc test jmpq jmpq push jmpq jmpq pushfq jmpq mov jmpq jmpq jmpq jmpq not lea push setns not mov push not lea push dec jmpq push jmpq push jmpq jmpq jmpq mov jmpq jmpq clc sub jmpq jmpq jmpq push jmpq jmpq mov jmpq pushfq jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq je bswap movzbw mov jmpq jmpq mov jmpq bswap cmc shld sar mov test sub jmpq jns mov jmpq popq jmpq jmpq bt clc stc stc xor jmpq callq bswap seta not mov jmpq mov bt test bt add ja callq jmpq jmpq jmpq je cmc bt jmpq push jmpq push jmpq inc test neg clc sub stc cmc add bt stc cmc test sub jmpq setne pop lea mov not movabs pop retq push jmpq push jmpq popq jmpq setno mov jmpq jmpq sub cmc jne bt imul jmpq jmpq push jmpq jmpq jmpq sub clc test cmc jmpq jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq bsf mov bt stc jmpq movsbq btr and sbb jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq popq jmpq jmpq jmpq jmpq mov jmpq jmpq push jmpq push jmpq mov jmpq push jmpq jmpq push jmpq cmp jmpq jmpq jmpq add test cmc jmpq jne shl mov xor movzbl mov cmp cmp jmpq push jmpq or neg bts mov shr jmpq push jmpq cld cld jmpq push jmpq push jmpq jb mov jmpq jmpq push jmpq jmpq xadd cmc mov sbb mov shr and mov clc jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq pushfq jmpq mov jmpq mov jmpq push jmpq ror cmc add jmpq add jmpq push jmpq mov jmpq jmpq push jp push jmpq push jmpq stc jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq je stc cmp jmpq push jmpq jmpq bt mov stc cmc cmp sub test add jmpq not jmpq cmp jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq bswap mov cmp mov jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq push jmpq jmpq popq jmpq mov xor test btr shr lea jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq movzbw not sar mov movzbw dec mov clc stc cmc jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq sub jmpq not cmc add test bt cmc add clc cmc bt cmp xor test bt jmpq jmpq jmpq push jmpq push jmpq push jmpq xor cmp test xchg cmp jmpq popq jmpq push jmpq jmpq jmpq jmpq pushfq jmpq push jmpq jmpq push jmpq jmpq jne push jmpq push jmpq pushfq jmpq push jmpq push jmpq push jmpq mov jmpq push jmpq push jmpq jmpq push jmpq push jmpq dec test jmpq push jmpq jmpq div jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq jmpq jmpq jp popq jmpq jmpq push jmpq mov jmpq jmpq mov jmpq jmpq push jae push jmpq jmpq push jmpq sub jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq add jmpq push jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq clc sub jmpq sub inc mov cmp test add jmpq popq jmpq pushfq jmpq jmpq jmpq push jmpq mov jmpq jmpq lea jmpq push jmpq je stc addl test sub cmc clc xor bt cmc cmc bt xchg stc stc cmp test cmp jmpq push jmpq push jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq movzbl jmpq mov jmpq push jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq mov jmpq jmpq not jmpq jl popq jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq mov jmpq push jmpq lea movzbw movsbw mov jmpq jmpq push jmpq not mov setle mov jmpq push jmpq mov bt jmpq jmpq cmpl jmpq push jmpq pushfq jmpq cmc cmc stc and jmpq jmpq pushfq jmpq pushfq jo popq jmpq sub bt clc stc bt imul jmpq push jb push jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq push js push jmpq je setne jmpq push jmpq rep shld pop shld clc btc cld pop std std popfq jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq mov jmpq jmpq jmpq shld mov cmc cmp bt cmc sub jmpq cmc cmc cmc clc add jle mov jmpq clc mul jmpq push jmpq dec cmc bt lea cmc stc clc test xor test cmp cmc cmp sub jmpq push jmpq push jmpq jmpq push jmpq movzbq movsbw push movzbw movabs jmpq jmpq shr movzbl dec clc add bswap jmpq add jmpq jmpq jmpq callq jmpq jmpq jle mov jmpq lea inc rcl jmpq push jmpq jmpq test movl clc or jmpq jmpq push jmpq jmpq push jmpq popq jmpq mov lea std std push movsbw jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq mov jmpq stc sub jmpq mov jmpq popq jmpq popq jmpq push jmpq jmpq push jmpq je test jmpq mov jmpq cmp cmc cmp sub cmc jmpq clc sub jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq sub jmpq jmpq jmpq jmpq push jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq jmpq cmc xor cmp cmp jmpq jmpq pushfq jmpq popq jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq mov jmpq jmpq shr sub movsbq jmpq jmpq jmpq lea jmpq jmpq mov jmpq ja jmpq jmpq jmpq jmpq push jmpq jmpq mov jo mov jmpq je jmpq mov jmpq jmpq push jmpq popq jmpq jmpq mov test rol movzbl cmc jmpq push jmpq add jmpq shrd cmp ror clc mov cmp add jmpq jmpq jmpq cmc ror cmp bt cmc stc add jmpq popq jmpq jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq je jmpq jmpq pushfq jmpq push jmpq push jmpq jne adc shrd btr xorb movsbw movzbl pop jmpq jmpq push jmpq mov mov jb mov jg mov jmpq jmpq push jmpq jmpq cmp jmpq push jmpq jbe push jmpq mov jmpq push jmpq add jg mov jmpq jmpq jmpq jmpq pushfq jno popq jmpq jmpq jmpq jmpq jmpq push jmpq push jb push jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq ja jmpq jns popq jmpq jmpq push jmpq mov jmpq push jmpq clc and jmpq jne jne mov jmpq jmpq jmpq push jmpq mov jmpq push jmpq pushfq jmpq rcl add and sub mov jmpq jmpq mov jmpq jnp mov jno mov jmpq jmpq jmpq jge popq jmpq jmpq push jmpq push jmpq bt test add jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq push jmpq jmpq push jmpq test clc add jno not jmpq mov jmpq push jmpq rcl mov add (bad) lock jmpq je mov jmpq jns popq jmpq push jmpq je setae not movsbw mov jmpq push jge push jmpq jmpq push jmpq divq jmpq bt cmc btc mov cmc jmpq inc test clc neg jmpq xchg mov movzbw lea shrd mov jmpq mov jmpq push jmpq jne sar mov bt and stc cmp jle jne rcl movsbl shld xorb movsbw pop jmpq pushq setnp movsbw jmpq clc cmp add jmpq popq jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq jmpq jmpq or mov cmc inc rcr mov test jmpq jmpq jmpq push jmpq mov jmpq jmpq jle pushfq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq mov jmpq push jmpq jmpq push jmpq jmpq popq jmpq jmpq push jmpq pushfq jmpq push jmpq jmpq jmpq jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq add jmpq jmpq jmpq jmpq jmpq jmpq push jmpq cmc mov jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq je cmp cmp jmpq bswap bt test test sub cmc bt clc ror jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq jmpq xadd mov lea mov clc add jmpq push jmpq jmpq test add jmpq jmpq push jmpq clc stc clc stc cwtl clc clc cltq cmp cmc sub jmpq jmpq cmc bt clc mov jmpq jmpq push jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq push jmpq jmpq push jge push jmpq ja push jmpq push je push jmpq push jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq push jmpq pushfq jmpq mov jmpq jmpq mov jmpq push jmpq jmpq mov jmpq jmpq jmpq mov jmpq jmpq push jmpq push js push jmpq pushfq jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq pushfq jb popq jmpq jmpq mov jmpq jmpq jmpq push jmpq push jmpq push jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq push jmpq jmpq jmpq jmpq push jbe push jmpq mov jmpq push movzbw cmp or sub and jmpq jmpq lea jmpq mov jmpq jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq lea lea dec mov not jmpq jmpq jmpq jmpq jmpq rol jmpq jmpq lea jmpq sar mov cmp cmp stc add jmpq clc test sub clc bt cmc stc shr jmpq jmpq pushfq jmpq push jmpq jmpq pushfq jmpq jmpq jmpq jmpq jmpq push jmpq pushfq jmpq rcl stc btr mov cmp test add jmpq jmpq push jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq mov jmpq jmpq push jmpq push jmpq jmpq pop bswap mov mov pop bswap mov jmpq jmpq jmpq jmpq push jmpq mov jmpq jne mov inc sbb mov cmc and test cmp clc cmp jmpq cmp jmpq push jmpq push jmpq or pop shrd shl popfq lea pop bswap pop jmpq lea stc stc stc jmpq movzbq movzbw rcl cmc rcr mov jmpq cmp bt add jmpq xadd adc jmpq push jmpq push jmpq je stc cmp cmp jmpq push jmpq mov lea mov jmpq push jmpq jmpq jmpq jmpq rol mov jo xor jmpq push jmpq stc sub jb mov jmpq push jmpq jmpq push jmpq mov jmpq push jmpq jmpq push jmpq push jmpq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq popq jmpq push jmpq cmp jmpq jmpq push jmpq jmpq sub jmpq push jmpq push jmpq lea jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq jmpq rol not sbb mov mov cmp cmp sub jmpq je movsbl movzbq lea mov jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq dec jmpq jmpq mov jmpq jmpq mov jmpq seto pop lea lea lea pop retq jmpq mov jmpq push jmpq jmpq jmpq pushfq jmpq jmpq cmp sub test test xchg test stc stc cmp jmpq jmpq jmpq jmpq jmpq jmpq movzbw mov not mov jmpq bsf inc mov shl mov cmc test sub bt jmpq mov jmpq push jmpq cmp not mov test jp test bt sub jmpq jmpq popq jmpq jmpq jmpq jmpq popq jmpq mov jmpq popq jmpq lea bt cmc rdtsc test bt jmpq add cmp movzbl mov jmpq je cmc clc cmp jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq jmpq jmpq push jmpq jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq push jmpq jbe shl lea stc lea cmc clc clc jmpq js push jmpq mov jmpq push jmpq push jmpq mov jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq push jmpq jmpq jmpq push jmpq clc bt add cmc cmc cmp mov jmpq push jmpq jmpq jmpq lea jmpq push jmpq mov jmpq mov jmpq jmpq jmpq mov cmp cmc xchg cmp stc xor jmpq push jmpq jmpq sete lea not pop movzbw pop mov movzbl pop bswap mov pop mov mov mov mov pop movsbw jmpq push jmpq push jmpq jmpq xor cmp stc bt sub jmpq mov jmpq jmpq cmc clc cmp jmpq jmpq lea jmpq jmpq popq jmpq mov jmpq mov jmpq popq jmpq jmpq dec jmpq push jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq push jmpq jmpq push jmpq mov jmpq push jmpq jmpq jmpq lea jmpq jmpq callq movzbw movsbw jmpq popq jmpq jmpq push jmpq jmpq test sub stc stc cmp cmp shl jmpq jmpq push jmpq bsr and xchg mov bsf shl btr mov cmp sub jmpq jmpq jmpq popq jmpq push jmpq not jmpq push jmpq mov jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq jmpq popq jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq jno pushfq jmpq popq jmpq mov jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq rol jmpq mov jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq jmpq jmpq jne je clc cmc cmc jmpq jmpq mov jmpq popq jmpq push jmpq push jmpq jmpq jmpq jmpq add jmpq jns mov jmpq jmpq popq jmpq rol rcl clc mov cmc clc jmpq mov jmpq jmpq popq jmpq jmpq not jmpq push jmpq jmpq jmpq jmpq dec or movzbl bt not xor cmc rcr sub jmpq pushfq jmpq push jmpq popq jmpq mov jmpq clc add jmpq jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq jmpq push jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq push jmpq popq jmpq jmpq push jmpq clc sub jns bt sub jmpq jmpq jmpq jmpq pushfq jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq mov pushfq mov push cld mov jmpq mov jmpq jmpq mov jmpq jmpq jmpq jmpq clc jmpq jmpq push jmpq cmp jmpq mov jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq bt sub clc cmp shr jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq push jne push jg push jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq mov jmpq push jmpq sub clc test jmpq clc mul jmpq mov jmpq jmpq jmpq push jmpq mov movsbq mov jmpq jmpq mov jmpq jmpq not jmpq jmpq push jmpq jmpq push jmpq jmpq shld jmpq lea shl shr mov clc add mov cmp cmp bt jmpq push jmpq jmpq push jmpq jnp push jmpq push jmpq popq jmpq jmpq jmpq je cmp xor stc clc cmp jns jbe or lea clc lea jmpq mov jmpq push jmpq jo pushfq jmpq jmpq jmpq jmpq stc imul jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq bt jmpq push jmpq jmpq jmpq cmc add clc jmpq dec bt lea cmc clc clc xor test sub jmpq push jmpq jmpq jmpq mov jmpq push jmpq jmpq sbb dec mov rcr mov cmp stc sub jmpq jmpq 