call add mov jmp add or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call xorb push or packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret insl fstpt push lea push mov (bad) or add adc (bad) jne push sysenter xlat jge mov push push pusha jge push imulb push call push ret dec sub je decl call clc or push push cmp add call mov lock push adc cmp adc push pop mov xchg int mov int3 inc add (bad) mov pusha or imul lods daa out jmp xor rol add mov push mov lcall (bad) fdivs jnp sbb sarb je push push fildl fsts fcom jbe je xchg sbb sub or je cmp jae and and mov adc insl pushl cmp jbe or add (bad) jg popf pop xchg faddl sbb inc mov jecxz dec or cmp ja xchg and out push rolb or add shrb inc fldt mov ret movw cs pop mov mov xor pop scas mov out fdivs orl ss call mov cltd in or mov mov lea mov pop jo sti (bad) or jp test add jae jae outsl pop xchg hlt push push jmp gs push (bad) (bad) fmull mov jle pop jl lock inc push cmp test mov inc push push sahf or mov cli or sub mov mov mov add or mov sub ret adc cmpl dec mov fisttp rorl adc sub mov aas push pushl mov push pop add std and xor push sbb or push mov fninit mov add lret jl enter inc rorl fisttpl xchg aad cmp fcoms push fadds nop test sbbb shrb divl jmp cmpsl cmpl xor sbb mov mov je mov ret mov (bad) adc lea push push push repnz pop aas cli or cwtl test pop pop repnz push mov mov aas xchg inc addl mov lock fimull mov add leave adc push or mov test or adc push jb push hlt mov enter rorb inc adc sbb add mov xor lea mov add xor mov mov mov add lea jmp std fisubr je (bad) xor movsl lds mov mov dec sub ds cmp adc cmp insl lock mov adc add and jbe movb adc inc out pop imul add xchg test sub add and std pop fsub push cmp push test mov jae enter or ficompl imul loopne or mov jge ja jbe jp mov lock jae inc sub rcr in adc pop (bad) or stos sti jb pop and push lea aam rolb jne push adc (bad) imul add test pop sub xchg or popa fwait sub fisttpll in sti dec andl icebp xchg (bad) icebp adc (bad) rclb cmp divb mov cmp jle cmp pop mov inc add ja mov inc jl leave js xchg leave and nop adc lret jnp xor cmp or pop (bad) pop aaa mov fild inc adc lock mov pop pop fadds jmp in mov in pop fninit inc outsb xor sub fcomps mov imul decl mov add leave adc sub sbb xchg jmp sbb mov sarl fsubrs mov comiss movsl leave cmp push mov xchg movb mov cmpsl add (bad) fidivrl test mov mov or out cmp je movsb and and jns and and and mov je mov dec mov adc push inc mov xchg xor inc mov and cli push mov add incl jmp push inc add ret cli cmp nop mov movl push and xor or (bad) imul mov cmp dec inc or sbbl in jae push (bad) (bad) negb add call push jle (bad) mov pop cmp xlat mov je dec mov ret enter outsb inc lea sbb int fisttpl cs in into push frstor add mov aam cmp jae cmp scas (bad) int je popa inc inc cmp jl sub ret add sub mov jmp mov outsb insl pop icebp or add adc lock sbb xor sub push push (bad) popa out movsb xorl mov jo fs push in int xlat pop fisubl jo es cld push jmp and clc adc mov cli outsl mov xor push (bad) out or and nop mov add test add rorl or ja inc cmp lea jecxz push mov or stc inc xor (bad) pop decl cmpb js ror jle xor or push add dec std mull sub pop adc sbb jl mov aas or mov lea lea cmp sub fldl adc lea push orb mov add adc pop imul pop push sti insl lods rolb sbb xchg (bad) (bad) push mov or out add lods pushw pop adcl xor push pop jb sub enter arpl icebp adc xor int jne pop add sbb and cwtl xchg popa or lock imul popf (bad) or outsb sub mov sbb sbb push sub or jmp and mov sub add or outsb pop push mov inc leave pop insb adc ja push push bound dec inc add popf push inc push pop shl mov xor daa decl loopne rclb (bad) mov sbb mov xchg push or inc pop mov repz dec dec jl pop (bad) out mov (bad) sar adc add enter testb sbb pop mov and add rcl push rclb xor lea testl xor jle sbb mov add sarb sbb enter mov test mov test and push lock pop or push adc push je (bad) std test lea mov mov pop rcll fdivrs pop push and and adc xchg dec push mov out movb pop repnz fisttpl dec push lock pop mov ret jle mov (bad) cmp sbb lret clc insl cmc jne push rcll (bad) mov out push stos pushl adc por adc pop lods and out mov xor mov push and orl or add aam add mov push add lock mov push fidivrl pop in add (bad) movsb push shlb je rolb push jmp leave pop sbb push or mov lods mov inc or ja andl or xor add sbb add adc pop (bad) xchg add pop push or pop jecxz adc (bad) fstpl mov pop pop pop pop neg jmp lsl push or sub push jno jae pop fiaddl push cmp push push mov (bad) xchg mov add test sbb or or fwait and bound mov or add push mul fwait sbb adc sbb xor aas and xor push ljmp sub cld push pop push jmp adc push sar rcrl ljmp or sbb lcall or ds cmp je (bad) adc fisttpl lret sbb mov fs jmp mov add fldenv mov out nop and inc pop repnz sub adc nop push clc and js adc pop mov mov lea jmp sbb or mov lea jns add mov fwait inc or inc das sbb insb mov adc cmp insl insl std subb and inc pop mov inc jae,pn sbb fstl roll in jbe mov into sbbl inc sbb (bad) pop orl pop mov xchg cltd outsb (bad) xor pop or clc sub sbb xor push dec xor inc cmpl xchg rcr xchg mov dec xor add cli mov jbe pop movsb cmpsl push adc add dec jns sbb mov rolb adc mov mov xchg sahf adc push repz sti mov push jb fs dec xchg and adcl sub jmp test adc cltd or arpl sbb jge cmp mov nop pop fadds adcl cmp pusha fmuls or dec int or xor stc sti jp lods push or and jnp cmpsb loopne in cmp out and fucomp adc or xlat xchg jbe popa mov cmpxchg dec mov int pop aas adc mov pop push notb das pop push push xorb push push repz push lods imul or cmpl lods lock cld rorl lret insb sbb aam data16 movsl in adc mov add aaa pop xchg aaa or adc repz or fstpl pop outsb roll add sti push or aas pusha add jmp arpl bound inc sub cld das clc dec insl sub and push imul jb cld mov add (bad) div mov lea loopne cmp or dec out pop mov adc dec inc lea (bad) mov sub jmp (bad) loope fnstsw pop pop movl roll mov subl pandn hlt movb add mov push je add jbe fnstenv add add adc push outsb call test sti in inc xor repnz je pop in mov lds in adc mov es insl mov add (bad) js or aaa ret fldenv call aad hlt pop push (bad) add daa dec and es insl xchg int add imul sbb cmp movsl insb test lea and sub xchg jecxz ds xchg cmpsl dec xor fs push sbb push fadd add ret push mov push pop ret or inc bound jb add adc jbe xchg or jno push adc sbb jnp add mov xor xor insb js push and push push push (bad) push mov test lock je fnsave (bad) shr pop xor pusha sarl and jne cs or lock xor cmp push call or xor adc aaa ljmp cmp inc (bad) movsl movsl js cmp enter mov clc mov or jae (bad) int movsl sub jae push into js test psrlq dec sti in ret bound (bad) push or xlat andl lock rcll cld test xor fdivr xchg hlt sbb clc stos fneni(8087 jne jae and mov xchg xchg outsb push rorl jnp pop xor xor fisubr add mov decb xor xor push pop xor imul pop rep cmp sub ret mov and mov or pop pusha ret dec movsb inc dec imul pop (bad) fcmovnb (bad) pop adc jle jmp pop push sub insl mov movsb push insb std or and jmp lods or mov inc push std jmp (bad) pop mov es repz push jl cltd sub notb sub pop mov loopne fidiv pop cmp fdivs pop sarl lods sti inc in cmp or push loop imul adc wbinvd popf mov pop dec ret push push cmpsl xchg pusha popa add call shll mov push push lret push jbe mov xchg test sub loop fdivr mov lea inc add arpl pop in sbb jno or sbb push sub cmp mov (bad) pop addb mov sub das dec fs or pusha pop nop pop sti jno or add in repz fs aas fisttpl add je and ss mov je add cld pop loopne stos sarb lods pop movzbl inc jmp mov inc adc inc cmp int3 rcr dec dec adc unpckhps inc mov jge xor das insb (bad) mov mov inc lea mov add cld fildl stos addl sti cmp sub pop dec pusha call lods add inc mov lods fcomp mov je inc add cmp mov add add maxps push push lock add push push mov (bad) or clc push cmp nop dec std jecxz cmp push push cld xor or push lea xchg test lea mov pcmpeqb stc aas je add jne std je pop inc rol or inc clc adc int or aad jle adc sub adc and in lret jmp inc mov push jp mov jl inc add sub sbb xor add lea cmpb je inc sbbl jl (bad) mov push cli ret imul stc mov std insl push ss mov add jg js ret sbb ret push lahf push or (bad) (bad) and test jne dec cmp jl or std aas mov or inc dec mov mov mov (bad) (bad) fild mov cmp jne cmp jne cmp jb cmp jbe cmp pop sahf jbe pop ja int lods (bad) jbe cmp clc jbe (bad) inc push cwtl inc jge or cmc pop je mov mov ret test sbb push test test adc cmpb mov and sub push push inc push cmp (bad) mov push cmp sub inc xchg jp and pop sbb fmuls cmp dec push rol jle jmp je add adc jne jmp mov outsl fistpl adc cld mov adc or sbb xor mov fwait loopne pop lds mov fildll push pop lea (bad) or add mov push in inc loopne adc shrb sbb sbb insb xchg fs adc adc or adc testb mov enter lahf and ret xchg adc add add idivl cmpsb in inc adc adc push fdivrs inc fs sbb and loopne movsb push pop push xchg pop orb ficoml push es fadds sbb cmp adc or xchg inc mov movsb cmp cmp insb outsb pushf sub or cmove icebp sbb xchg mov fistpl lods in pop scas push pop test push test adc push xor je adcl cltd jle mov jo mov sub xor scas notl rcr and xor mov imul aaa dec jno xlat insb mov mov bound jge lds mov (bad) jmp cmp jge std ret jl jbe cmc mov adc adc (bad) push sahf (bad) cmp jge sbb insl div push or adc daa xor sub push push xor jmp insl inc das or int3 stos lods mov or jle (bad) (bad) out rcr (bad) jge xor rclb lea mov adc gs test or stos negl cwtl xchg dec mov aas mov mov add cmp push adc pop idiv movsb clc fwait lcall and jle lea xchg andl and mov pop adc cmp outsl pop loopne jl sbb cmp nop sahf jo jae ret jl or xor sub imul inc jo pop das lea add xchg adc jo rcll mov mov add push mov and sbb lock xchg xchg inc pop jb sub xor out loope xchg xchg and xor lea push xchg mov xchg mov or jg and xchg cmc mov sbb add mov mov jmp popf mov mov cwtl das es and rorb push movsl mov lret lods je mov sbb sub add or jne or and or adc test pop inc mov push pushl call stos popf inc test xor enter xor or mov jns jbe lea js xchg push fnop mov push xchg add or addb sub dec (bad) int3 add cmp popa or addb xchg add cmp push enter xor (bad) mov inc sbb (bad) xchg cmp mov mov xorl sub mov or xchg adc mov jecxz (bad) pop int enter mov jle and leave adc or jns dec out inc and shlb dec int int3 adc sbb push push xchg mov inc xor insb push int3 mov iret sbb jmp aad xbegin rcl (bad) mov adc or add cltd and sti inc icebp sub sarb cwtl and mov xlat push movl rclb lock sbb push jnp insl adc push or or push push jne jmp adc add lods test mov xor pop mov pop jg (bad) test (bad) je dec je fldl mov add rclb rcrl inc cltd jmp or ss jmp dec or push push jge mov mov sub add jbe push fnstenv push push outsl mov in cmp push out pop stc inc js xchg cmc adc push pop neg fsubrs pushf dec lods cs sbb and fwait and xorl or fsubl xchg or xchg inc ret je pop or pop xor sar je cmp jb mov sbb orl out imul (bad) (bad) (bad) jmp cmp pushf pop xor test mov cwtl mov mov test xor insl dec push sti sbb clc in mov push mov pop pop dec and pop xchg add mov dec je add lea fistpl fisubl mov pop les sbb adc or dec mov adc mov xor (bad) dec add pop jl and jno sub xor pop cmp mov or adc or inc stos mov jne xor (bad) outsb sub add test in jmp push (bad) bound rolb inc mov adc mov add ja test or (bad) mov mov in je push fisubl push xor and jmp mov or fs add ljmp js mov xor xchg mov or mov or inc inc sbb jmp push mov fs aam push pop jmp sbb test gs jne dec mov jo hlt mov pop xlat add add mov add in sbb mov cmp or adc push fwait xchg (bad) (bad) (bad) mov cmp push push cmp in inc or pop pop mulb mov dec push ds xor out sub (bad) in jmp and mov pop ss fcoml mov add lea outsl push mov xchg push sbb outsl add or mov test sar sub jmp rol in lock pop mov (bad) mov divb pop push mov or and add or sub cli mov popf jne (bad) jmp or and xor or and mov mov iretw cmpsb je and in fcmovb xor jle in sbb pusha in sub add enter jbe rolb and aam push je std or pop push dec mov out xor fcom pop mov and add inc xor je js add gs int3 mov rcl rcl movb inc fnstenv fcompl jecxz test pop push cmpl movl mov inc add cmp xchg add mov mov int3 dec or in lea adc pop dec xor pop or add pusha lahf sbb int sbb dec add mov pop mov mov icebp divb pop cmp in imulb dec add cld cmp dec xor les ret je je subb push push adc arpl sub push das ret js mov xchg inc loopne dec in mov xchg cwtl jge sbb add (bad) lea mov pushf (bad) ljmp and mov punpckhdq pushf add add mov push xchg push mov xchg mov fldcw mov rclb mov fcmovu push push jecxz lods cltd sub xchg and scas cmp sbb and fdivrs popa adc out loope movl jae out les les mov daa iret (bad) ret inc enter lret sahf xchg or sbb push int push clc and adc pop jno fdiv insl xchg mov lods add mov rol mov lock jo xlat xchg sub add addl sbb push or fwait push xchg pop adc cmp out movsl mov inc fildl cmp scas daa inc add sbb rcrb popa clc push xor dec or cld nop sub adc xor push cmp stos mov sbb dec fincstp mov dec adcb (bad) movsb push sbb add (bad) jne or pop mov fmuls stos es adc cltd and mov ret sar inc shl xlat or popf std xchg ljmp dec cmp jne pop (bad) pop pusha test dec jne sahf bound add jmp sbb mov es addb push dec xchg add pop pop pusha addl out outsb mov je cmp jl cmp add (bad) jbe add xor cmp dec dec (bad) add jge push push dec add (bad) cmp add adc adc inc sbb jnp or outsb inc or shlb adc lods pop sub mov ljmp xor jo insb jl daa push push push mov fnsave or repnz aam add adc cmp inc ss (bad) leave mov or add rolb lods loop aaa xchg frstor jne,pn push push mov call mov clc push sbb mov add es push push push xor sub adc add lret jne mov inc add sbb aam add pop in inc jb mov or dec or inc push push enter cwtl pop dec adc or gs aaa lret or mov mov adc dec xor mov or jo xor (bad) pusha adc or adc push push push xor xacquire adc mov inc insb mov es ret mov scas xor test mov add and sub xor inc mov aam setne mov out xchg stc inc imul aas fstps cltd adc aad or fidivl xchg aad xor mov shr mov lods enter cld add add cmp ja sub adc fidivl sub xor add pushf movsb inc ret and test push les pop les (bad) cltd sub push sar push ljmp xor add shl mov or popa add hlt call sub xor cmp je cmpsl sbb jbe clc lea adc mov incl mov cmp jbe dec std inc rcr dec jmp jne push lahf cmp jbe fisubr leave adc adc mov mov mov add cmp mov mov add cmp jl cmp (bad) decl add mov inc jae jae mov (bad) adc mov (bad) jmp xchg jne (bad) fstp arpl cmpl subl adc add fidivl cmp push pop jl hlt fnsave iret (bad) mov and test sub fdivs add pop pushf pop imulb aas mov insl (bad) mov jge push xor into inc sbb lea movsl jo adc movsb mov jecxz pop mov fsubr clc pop ja movzbl inc ja and test (bad) pop xor (bad) push hlt (bad) cmp mov jmp push jmp xlat jo mov addr16 lret pop add out pop mov push add or add scas insl leave lar add add out nop movsl in add add add jmp or inc cmpb je lcall decl rcl dec push pusha push cmpsl in mov jo inc pop je jp add or push cwtl xlat movswl sbb mov jl lock push loope inc or push xchg (bad) jb jle pusha pop outsl pop adcb adc cmp push lret incl fsubs inc outsl ja aam les cmp cmp aas push jge or mov adc or jmp cmp dec cs cmp dec fstl insl sbb sub or mov ja ljmp pop mov fadds ja mov lea and mov xchg enter andl pop mull pop push sar sub fstl outsb pop inc push inc call insb and test sbb pop mov fimul xor mov stos push push divb jl aas add cltd mov mov sub adc je cld inc mov into test inc jnp clc movb adc jl mov jge ss mov sub sbbl inc cmpb sbb lods stc fldcw sub jo clc mov test jne into jmp jge js adc cmp popf js cs cmp repz adc jbe mov cmp je test decb xor test ljmp lock sub jmp jne add pop (bad) aas push fild and or orb add sub movb adcl cmp push fldl faddl lods mov or aam mov (bad) jae or cmp xchg cltd mov fincstp mov push scas cld cmc pushf ret add jmp mov in dec mov movl mov push and outsb aad mov or ret mov mov pop and push mov push or jp inc xor popf (bad) or and insl into push pop push xchg les mov sub pop sti lret pop and cmpsb jae (bad) push push and or sbb add adc pop and jbe and mov add add pop xor adc xor cmp or jbe and js fisttpl mov or jae mov inc adc and pop call repz nop dec push push sub or dec lods or mov mov push out cmpsb or sbb ja (bad) imulb bound push (bad) mov xlat movsl sbb (bad) sub insl in imull push and xchg inc jbe and fwait outsb push pop adc jne adc fnstenv jl fs sbb stos ss cmp sub mov sbb cmp sbb sub pop scas mov and and lods push jl rcrb sbb add adc pop in mov jne and jo or pop mov aad les add or loope mov loope fcom add mov jp or or jmp mov sub movl (bad) mov jae mov addl sbb shrd psubsw jmp adc push xchg push mov mov adc hlt call scas dec movlps inc dec sub lods adc in push inc pop pop in call pop cmp adc jbe sub xlat jmp sbb or mov cmp cmp push pop addl jnp mov pop pusha or push test jge or jmp add fstpt cmp je es adc sub mov fistpl loope xor lcall add dec test dec inc das fnstenv negb adc jp ret sbb fs cmp sbb cmp fild je jmp xor mov or int mov xchg sbb test inc cwtl aaa imul xchg adc call mov push xor add repnz sbb shrl inc pop out test cmp lods push add add lock jne aas mov adc jge jge sub mov sub in cs subl js jae data16 js adcl pop and (bad) cmp xchg lret lods or push sbb cmp imull push and jmp add outsb pop (bad) xor mov insl or pop in or cmp insl mov int3 mov ficoml inc loope (bad) add add dec xchg iret clc push jmp jae clc xor outsl push adc push rclb and pusha mov jae lods sti sub lea push lock add inc inc scas push das loope and mov or and jae xor xor or cmp stos leave jbe cld pop push push cmpsl cmp insb ret stos ret add (bad) jge or inc or push mov mov (bad) pushl mov pop xchg xchg call mulb or dec push popf adc mov push xchg push push push lds hlt cmp jl (bad) lret sub out sbb adc icebp aaa mov aad adc jg push pop xlat push jmp cmp clc cmp test movsl sbb cmp adc pop pop pop popa jmp xchg dec jo scas dec and jo cld xchg fmulp (bad) dec out inc pop xor mov inc xor sub xor fistpl test inc insl xor out and cli outsb mov out sbb aad (bad) je adc xchg dec add cmp pop cmp pop idivl rorb int3 sub mov out pop sub enter in and push inc or xor orl or aas jae add loop lds mov outsb daa fmuls (bad) sub adc arpl dec dec and mov dec mov pop pop and aaa adc ss dec lds xor add add jne out pop idiv lret xor add add scas incb loope and pop xor mov jmp ss mov mov or mov jg push pop adc and in inc pusha inc mov xor push pop aas enter push inc shlb lcall and cmp sbb push push lea pop pop ret fsts adc loope,pn cmp out fcmovnu or mov and add push dec jae mov cltd xor sbb pop or cmp test sub test fsubs xchg inc into inc push push jmp ja inc add and cmc in push jg jmp inc mov cmp xor je stos iret jmp and (bad) mov (bad) sbb daa sub rcl nop (bad) push xor call call mov fistpl jge popa push add add dec pop popa ja and aad dec js pop adc inc sbb loope push push and mov jmp in (bad) lea sbb inc cs add mov sti je sbb mov jle pop pop das icebp ja lods mov cmp pop xchg fdiv mov adc or arpl jl imul pop add pop mov inc fstpt push inc add sub bound mov test adc pop fdivl decl mov insl movl cs pop xchg pop inc fucomp or je movb or (bad) (bad) inc das push inc add mov not pusha pop (bad) les mov xor xor insl (bad) mov dec (bad) mov mov inc adc mov repz or pop fisubrl sbb lret inc add or sbb adc push inc dec hlt dec xor imul fs fmuls mov adc push sub mov mov add inc or dec mov jmp adc push add pop sub push arpl hlt rorl sub inc add sbb xchg ffreep mov leave or or add pusha adc bound jg cli or pushf and outsb inc jmp mov invlpg mov adc pusha mov mov mov sbb xor lods sbb in arpl push and sub mov dec call adc mov push push add adc add jbe push mov (bad) mov fsubl pop lret xor cltd test mov fwait jnp (bad) mov add sub fild iret daa fmuls dec rcr int3 push and jecxz cs mov fwait add inc test scas test inc mov lds xchg cli add cmpl pusha adc rolb fwait andb movl mov cmp add push jl cmp cs xchg movsb adc or adc add add xchg lock or xor insb add call sub fstl pop xchg and push push scas inc mov push sub fs test push movsl imul push jmp add es sbb loopne dec and fistpl add sub (bad) out xchg cmp jge xor push cmp xor push popa xlat fisubr fcomps (bad) xor dec in sbb jp sub push adc push push sub sbb and cmp outsl in imul mov or cltd jne sbb or int3 jecxz cmp jno cmp ds fnsave push xor mov adc and rolb outsb ljmp cmp cmp or outsb mov sub mov icebp orl lahf dec sbb inc push xor jno xor cmp daa imul mov outsb push enter int3 xor push (bad) dec sbb or and pop dec push ss and mov cmp adc xchg outsb fs ss and repz lods xchg in daa fsub repz sbb cmp pop inc mov cmp adc je aad mov lods inc rcrl and call insb test inc insl cmpsb push or dec sub sbb adc (bad) push aas cld push jae mov ss add (bad) sub shrl xchg xlat dec dec dec push push dec or mov mov dec jns pop and fwait mov rolb push je (bad) adc jmp test fldenv inc sub dec dec test dec jg sub mov ss mov sbb lea cmp stos push push addl clc test mov jg rorl or xchg mov mov xchg andl jae cmp test jmp jb push mov sub inc dec cmpsl inc fmulp pop hlt add nop add mov enter dec push movsb push inc add dec jb sbb dec add enter push add cmp nop dec mov out loope sbb mov and dec (bad) into mov call xchg jge sahf xor jne or lea pop mov movsb out js nop pop (bad) jns popa adcl xchg sbb pop cmp orl scas lret ljmp popl and sub sub (bad) xchg push js pop ret sub dec fisubl (bad) fisttpl call les add mov sbb xlat sub fwait inc fucomip (bad) insl adc xlat sub js push jns loopne nop push ja das stos jg out dec xor xor cmp out push rorl aaa push sbb add sub pushf inc sbb aam fldcw mov mov jmp and or cmp in adc adc dec sbb and cmp sbb popa dec push xor xor lret sbb inc add bound fsts cwtl mov mov in dec dec dec lret les pop test or out xor mov rclb dec sar (bad) std orb (bad) (bad) or xchg sub mov add adcl adc pop sarl or sbb push pop sub addb mov or in test mov inc cmp nop inc or mov and push and push adc push pop add pop xchg cmovo push xchg mov std push loope insl mov push xorb scas dec jp mov inc mov cmp adc jne cmp pop int3 jmp cmp mov jmp pop xor mov inc pushf sub mov push cmp push push in mov pop mov out or push xor add push hlt sbb test cmpl adc les sbb mov push xor adc ds pop pop ss pop outsl xor (bad) or inc shlb inc fdivr rcll lds xor (bad) mov sbb adc stos pop cld jbe xor lods push jl or xor add cmovg lods (bad) movsb cmp push lcall out xchg (bad) (bad) ja mov aas cmp pushf add mov int adc dec bnd mov or push or inc jae lret adc mov imul mov loopne jp jmp cmp add (bad) jne lods dec adc adc sub pop xor mov lods rcl inc and rorb or or mov cwtl pop add pop mov mov push mov faddl loopne add lock (bad) and daa fwait inc fdivrs push mov mov xor scas fs xchg or xchg ds scas fildl dec adc push pop inc jnp and or (bad) fwait and outsl insl add fwait add inc add mov adc js or std and or adc push push jle push out rorl xor inc xlat push es jno and (bad) adc fldt clc xchg jg cmp xor sbb shlb mov lds aam xor jb jo dec push test fiadd sub xor pop insb (bad) (bad) incl cltd idiv mov imul cmp jg mov (bad) (bad) dec push les cmp xor mov mov or push cmp jne adc sbb sbb pop cmp push out (bad) dec mov cmpsb xor cmp cmp into outsb addr16 call (bad) mov xor fimull mov and icebp adc xchg icebp mov sub lock rclb test mov inc daa outsl mov mov add lock lea in les cmp test jl adcl rcl nop rol sub mov fsub or in dec in cmp and mov (bad) (bad) push sub push jp adc popa cmp and add dec or jnp pusha mov jo outsl or sub outsb cmp add add mov or data16 inc sbb gs mov bound jo cmp and add je push mov adc (bad) gs xchg and sub add inc loope shlb orl sbb add sbb gs sahf adc adc or xor (bad) jmp cld ret mov pop push jmp pop push add adc pop test jbe adc or mov fwait add dec lret add aaa sbb fs test sti sbb dec add push sbb (bad) dec xor outsl mov cwtl push pop push adc and inc dec data16 cmp aas dec fbld call inc or loopne pop push push jp inc add mov (bad) and movsb inc (bad) xor add inc scas in or dec cmpl xchg fadds xchg inc add dec jl inc xchg dec adc sbb xor (bad) add sbb inc cmp mov mov mov hlt mov xor and (bad) enter outsb cmp add or cmp sub je ret and rolb sub scas shrl in inc outsb jbe sub imul cmpsl sub xor jns inc cmpsb inc xchg dec adc cmp pop adc lea or repnz (bad) (bad) std sub inc cmp sbb jnp mov popl or popf add mov mov pop dec pop xorl movzbl mov pop sbb mov and push adc out stos test daa and push popf or pop or sbb or add mov ret adc mov mov xadd pop mov es jmp lock xor sahf cmp add je cmp jecxz inc sbb adc xchg mov and add inc pushf mov xor outsl inc les aad jle in and inc mov insb xlat popf insl add add icebp xlat add out fsts add mov adc out xlat or mov or pop xchg jo aaa aaa jnp mov or push push or fiadd outsb and add push xor adc dec add push lcall pop inc mov pop rorl jmp mov sub fisttp icebp ss add jp and cmpsl ret (bad) dec xchg sbb jmp rclb lret leave (bad) mov or add (bad) pop sub cmp das jo je sti cmp add dec sbb jp sub jbe inc jmp adc sbb enter pop leave inc cmp (bad) sub imul dec lret add loopne add jns jp add inc test fsubrs mov cmpb xor inc or leave sub add jge repnz pop or out cmp das mov push lock add add fwait aad inc lret ret ljmp xor insl mov cmpsl push addb or loopne jle shlb add pop cmpsb mov in push rolb fcoms jbe inc (bad) jne push sbb faddl sbb add or cld jl lods into fsts xor mov and mov pusha inc loop aam loop dec push pop mov daa and int3 (bad) or mov mov faddl add pop (bad) aaa jb iret jne outsl push pop cmp out jne adc mov sbbl cs add jne ss mov mov nopl aad mov mov push push sub sbb adc or lcall mov push dec pop pop inc in and cmp aam addr16 mov mov mov mov adc scas outsb das xor mov adc jnp sub jnp cmp jae lea loopne popa push lret lea xorl pop (bad) test outsl (bad) out and call mov inc shrl lret xchg mov or nop pop pushf pop add mov adc repnz push test hlt cli inc mov hlt sbb push (bad) insl mov mov jne (bad) adc out adc std mov cli pusha cmc imul out or dec push mov adc mov insl or cmp in or sub aas les dec add add loopne mov or lea fimul xorb in mov les add add dec sbb fsubrs inc jns jl cmpsb xchg into bound push pop push and test xchg bound mov push ljmp outsl push sbb shlb jno sub in dec adc adc in pop xor ja mov lods jb arpl fcoms jecxz sbbb cmp inc add jle pop iret add fisubrl mov jo push leave push adc xor rolb rcll add add or or fs jno lods das cli add mov jo or fisttpll jmp lea in xor pop inc add add sbb push dec pushf sbb push sbb mov inc inc in inc sbb testl pop pop shrb mov mov movsb ljmp inc xor smsw xor push add pop mov in push add or push idivb sbb mov xchg jns add rorl ficompl pop jle or jmp dec cmp imul clc lret and loopne pop test jmp bound call or shrb loopne sbb pop leave js mov popf mov cs rcll push popa push jl into add cwtl call pop je pop fstl fistpll xor popf into add xchg dec (bad) jge cmp push and lock dec rcll bound ficompl adc out jae cmp in lds add xor add jb test pop mov dec inc pushf and cmp sbb sbb movsb cmp adc jno sub add mov lcall lea push fild add inc imul adc add out mov cmp cmp xor and sbb ret pop rclb cld add loop pop pushf (bad) ss jmp mov cmp cmp push shrl add push pop insl addr16 pushf cmp nop or sbb add je arpl call lods add or inc or xor outsb sbb push add call adcb negb ret ret xchg push and cmp mov sbb xor jbe mov or popf inc push adc popf and adc adc nop or sub xchg adc cmp mov xor adc inc or mov adc sbb and loop xor (bad) mov adc sub addb pop bound pop scas pop jmp inc push sub add sub outsl add ret cmp adc mov and mov rorb in dec pop (bad) push pop fsubrl icebp fistpll dec jae cmp je int3 cmp jge mov sbb jne icebp push iret unpcklps fwait inc shll testb adc inc imul or push inc addr16 pop push mov jg mov ja push jbe pushf and cwtl sub jbe jl pop mov repz push jne cmpsl sbb add sbbb or lret dec inc mov (bad) pop sbb cmp out pop or add clc sbbb add mov push loopne xor xchg je xor fs popa xchg pushf adc dec sub jmp sub dec dec sub pop sbb add test adc push fnop fwait dec inc inc shll fbld or and and fidiv aas pop (bad) dec sub addl sub mov test mov sbb cmp pop push pushf and cmp jmp mov scas inc mov add test mov add inc push ss mov pop xor adc sbb roll push les jne aam push and std jo dec push dec sbb (bad) nop cmp xchg adc adc les (bad) les inc out pop (bad) add mov ljmp add (bad) jo pop mov je lods fiaddl andl (bad) jo pop adc addb xchg dec or pop push or sbb fnsave xor mov pushf call test cmp adc mov incl call cld add and (bad) xor jo mov mov push cld add sbb jb dec sarl sbb stos outsb add push adcl mov inc pop shlb (bad) adc mov jne push test mov fcomps aam xlat inc je push or jb,pt add mov decb push xor add sti push jns mov add loope adc mov mov jle adc add push test dec ficompl and jmp mov mov push shl mov sbb (bad) jle jl lea mov mov sub mov xchg inc sub call pop push xchg std jle lods xor in jbe in xor fistpll out add (bad) mov and mov cmp fildl sub cmp mov sbb add push cmp mov (bad) xor mov push (bad) sbb mov rorl aas xor mov mul xor data16 in and cli pop in or cmpw je inc inc sbb test mov and inc mov lahf std push cmp dec pushl add fdivl mov mov lret pop pop cltd aam sub je inc cmp ja push fcomps or xor fdivrl cmp push inc cmp and dec or (bad) rcrb jb hlt adc sbb js inc inc pop in cmp jb mov mov pop xchg push xchg imul xchg jne mov inc dec pusha sbb jb (bad) mov pusha faddl scas fcmovnb mov dec fcoms inc inc data16 mov mov outsl or jge pop cmp mov les les fst mov add test and repz adc push and ret jbe xor sbb and add sub push test lds jge inc (bad) jno into ficoml push sbb les popa fistp add mov jbe pop enter movsb xchg jo bound inc cs add and fsubl push mov jo mov ret sub mov sbb pusha lods add lods mov stos test lods movl or fwait sti rcrl add push sub (bad) je xchg mov mov lods mov add lock xchg mov lods mov sahf imul cmpsb mov adc enter mov cs dec push push mov mov mov cmp mov test loop shlb push cmpl xor pusha dec xchg (bad) adc fnstcw or sbb sbb in fsubr add adc cmp mov pop inc adc sbb xor ljmp ficoml aad imul js int js aaa push adc pop lcall add mov xchg stc sar jno inc or inc shr cmp das in fdivrp jne jbe pop sbb inc inc xchg rcl ljmp in jmp add xor add push mov xor and pop xor add cwtl aad call sbbl or sbb xor ret jmp js mov add sbb mov sub inc test gs test (bad) jp test lock ret loopne push loope (bad) xor sahf adc sbb sub xor std cmp xchg add int push add (bad) cmp jg addr16 test inc mov inc add iret ds push sbb xor jno inc xor push pop jb pop inc inc inc js mulb in jle or xchg pushl inc pop (bad) and xor (bad) xchg int3 sub or or test adc jl mov push and or push test call stos test jo or gs arpl inc (bad) dec add push sbb movsb xor cwtl rcrb sbb mov sub (bad) lods popf ja pop sqrtps dec enter push test and fdivr rcr sub jle jo dec rcr pushl jne inc in in faddl add add clc add aaa add popa pusha shlb jae push (bad) jno push cwtl dec call fs xchg xchg inc push pop (bad) pop push inc dec pop xor adc data16 xchg sbb add leave add mov mov out sub sbb hlt shr cmp fdivrs mov inc and cmp je push mov add or jbe pushf outsb xor out xor fdivrs cltd mov adc les cmpsb jbe stos adc and ljmp ret in mov loope or or dec add xchg stos mov add sarb sahf mov sti push je pop add xor clc jl mov repnz inc push stc push adc xor mov or inc mov mov stos xor jne and inc inc scas pusha mov jne xchg addr16 dec cmp sub add cmpsb in push inc adc sbb xor inc mov add adc cmp add jge push lock sbb dec mov imul into je (bad) push push adc sbb out inc stos ds in cli shl adc dec mov (bad) adc xor xor jne inc pop testb ljmp mov push xor push mov mov test scas les push push addl xchg cmp lret pop jle dec jo dec pop (bad) add cmp movsl je push addb adc and mov (bad) pusha add mov dec cmpw test push adc push fsubl fsubs ret rcrb adc push jmp xchg dec nop inc clc xchg mov or inc sbb stos outsl inc adc idivl jmp pop rolb xor push sub cmp xchg jae mov loop jl test movsl enter cmp jae ja adc jmp push xchg test shr adc or push rcr cmp fsubs leave fcoms inc push mov (bad) jne movsl ret push dec outsl cwtl fimull mov movsb inc rorl loope pop shlb jne adc lret mov dec add pusha xchg pusha (bad) and cmpl jmp (bad) daa je jmp sbb lods nop sub mov roll inc int3 sbb mov cmp jle jmp pop je xchg adc cmpsb push cmp aaa xor add jns push fwait test mov add mov jp (bad) jno push pop inc xchg sbb lcall jns popa fistl dec add dec jmp mov ja jmp mov pushf sbb arpl mov addr16 adc ret jbe call add bound xor push test push inc or push ret gs lret xchg add lds mov xchg sbb mov mov in cmp mov fsubp ret scas leave xor pushl mov mov xor frstor xchg outsb adc insb push inc jg xor jecxz push fidivr ret mov jp ss mov xchg imul test xchg dec push or (bad) adc cmp push dec js and add push sbb clc xchg push xchg dec and sub cwtl outsb test icebp mov sbb inc pop add testb js notl in cmp fwait adc add sub mov test pop or out adc sbb divb icebp pop mov cmpl je jno cmp jl jmp adc push mov jl roll sarl push dec jb add mov (bad) pop fnop testl jbe (bad) xlat mov addr16 mov mov mov mov push push or lret push add ss mov and pop jmp fldt add outsb and xchg imul (bad) cmpsl jmp into incb or jmp xor sbb add sub mov rorl add adc mov lahf jbe orl mov arpl mov lret bound pop fs in pusha push xchg push dec clc push push and loopne add fwait push sub xchg mov mov fcmovnb sbb sbb cwtl fisttpll push sbb daa jl insb or sub mov cmp loop test in mov push repz aaa bound mov pusha pop aam mov push mov mov imul mov and and std or adc outsb lcall and inc add ss adc push fcomps (bad) sbb xchg mov loopne or cmp push mov xchg jmp sbb iret out jne pop pop mov xor data16 add rorb adc jae inc add or les mov jl jne adc dec or fsubr (bad) addr16 adc push test pop add adc mov jl pop leave inc pop mov arpl cmp arpl sbb adcl inc mov pusha and cmpb cmpb jmp es push sahf inc inc pop fbstp pusha pop xor int3 fsts mov adc mov mov mov leave jo lods cmp pop lods add faddl or sti (bad) push ja push add fild jne lea push int3 inc lock or sub in push push data16 out popf or loopne inc lods and testb pushf add ljmp fucomi call pusha ror add adc or insb dec movsl sub clc push lock ret mov daa jl cld outsb mov sub push out aam (bad) aaa mov inc mov mov mov pop inc jo adc (bad) push mov xchg sbb jne push aam add je sub xchg jne fsubs mov jp mov xor add jnp sbb je cwtl lds inc clc js push outsb ds or lret dec xor popf fimull (bad) push popf sub pop push lea (bad) insl icebp xchg xor int3 mov xor roll mov sbb and shrb int3 sub int3 mov adc jge ja add mov adc sbbb xor (bad) rorb test inc add enter iret sbb xchg pop sbb test les and test xor add mov jp movsb (bad) (bad) aaa hlt pop hlt dec sub jbe outsb mov xor js test dec cmp mov clc je push inc push mov cmp add pop mov cltd dec mov dec add jge mov and cmpb inc shl or mulb push in lcall mov mov (bad) and and adc mov repnz mov mov xchg pop fmuls icebp fisubl pop mov add call pop icebp movsl cmp in call jmp push sbb push add iret mov push or (bad) push pop xchg leave jl xor fwait xor test lret and scas xchg jo xor movsb loop dec loopne clc jge dec in sti add push mov add mov sub sbb xor inc ljmp lock aad daa and aam in add js dec push adc call (bad) test sub mov push or scas stos cmp movsl test push or mov lock push adc in push mov cs mov mov in push das insl shrl or inc mov out pop enter into sub ja jne test ret rolb add mov or adc sbb or pop loopne or lock jg lds mov push in push push call movsl sbb in enter dec fstpl ss sarl push and jmp xor test je mov mov lock push (bad) rcrb ljmp fistl add mov jb test add lea mov in inc adc (bad) adc push push les pop adc ret xor dec in ret mov insb xchg add pop push jg adc cmp xor push jne int3 adc mov je mov (bad) cmp (bad) or cmp aaa or pop cmp jne insl std ds push mov xlat xor mov faddl sarb mov pusha call adc lret or add cltd adc mull daa rcrb mov mov mov insb inc cmp mov push dec mov out mov outsb les fldcw setbe and leave jbe ret push or std add sahf add fsubr aas dec sub jmp mov les sbb imul inc out or cmp sub push mov mov sub arpl out pop imul test (bad) fcomi push adc ja or in adc xchg jl add sti fbstp adc (bad) jg insb fcomps aaa push mov and nop add icebp mov push insl inc pop je mov sbb bound cmp add jmp and pushf pop cmp mov (bad) lods cltd sub lods mov sti popf inc cwtl fsubrl test adc push cmp divb into mov and nop add inc xor xor sti sbb lret lods push mov jle (bad) jg or neg sbb push and mov mov and lods insb jne,pt sbb add ret or inc popf repnz inc push mov je dec pusha jae xlat call mov sub push and (bad) in push pop scas and fs mov sbb lret inc sarb add test (bad) jno inc jne pusha pop mov sub push pop inc pop push das push jge jle rorl pop and hlt pop aad int3 mov sub jle pushf call and push jg sbb in (bad) cmp mov adc mov mov iret mov jge add fld inc or jecxz pop testl shl mov push (bad) or rclb rolb push xlat adc in sbb inc dec imul push cmp jne pop outsb pop outsl cmovl inc out out push sbb fwait xchg cli adc add or (bad) push mov push push roll adcl roll xchg mov mov add insl or outsl dec cli add sub mov clc xchg adc pop stc or les sub push xlat push (bad) cmp (bad) outsb add mov add mov mov sub xor cmp push mov push movl mov pop mov mov outsl mov mov shr rcll and out pusha jb cmp mov lods pmaxub mov inc data16 mov inc jbe pop sbb push push inc jnp mov fdivr mov loopne add div test je movl pop int3 rcr pop xor shll jnp sbb pop sub adc mov push push ljmp push (bad) std jne mov push addb dec add add fcoml call sub adc or lret mov pop or or or jecxz pop int3 popf or in loope pop jecxz dec fadd loope pop or jp inc mov aad orl sub lods add pop push nop orl mov xchg mov xchg or sbb je xor jae xor xor or out imul sbb add mov insl pop pop ret mov mov push pop sahf adc push adc pop insb movl inc add mov xchg dec adc mov cmp add or adc fmuls mov insl dec xor test or negl repz ret pop and lds xor add subl in ljmp push sti or sbb push movsl movsb into add cmpsl insb lcall mov cmpsb xlat jne mov out sbb jecxz js mov sahf aad push cmp lahf dec subl add inc rolb lock jb cmpsl arpl xor push sar push arpl repnz insb pop cltd cmp lret add sub cli add inc xchg push ret xchg cmp inc enter mov aas inc sbb ret add std cmp jge mov fisubr xor or pop mov jne cmp jl add xchg daa mov inc sbb loop jl popf jg push sbb mov push add inc out cld (bad) (bad) pop cmp mov shl mov jp dec je and ds dec add sbb pusha popa push mov push loop imul fcomps rorl xor stos fisttp test mul shr stc dec dec sub push in fldt inc xor sub push push cmovle mov cmp push push dec xlat in mov xchg fwait push das sbb xor or cmp cmpsl pop lcall push cmp fistpll cmp inc sbb dec add mov mov das jle adc fiaddl mov or mov inc leave sbb xchg pop popa cli incb mov out push je mov outsb jmp cmp je add je pop push add inc sub mov dec lret pop dec adc push lahf call jge or or and mov testb sub add xor xchg and add cs or xor test mov xchg mov sub mov insb cmp add jnp pop xor jae inc add lock dec addl jp cmpsl cmp xor or les leave jne mov inc sbb mov sarb scas push imul outsb and dec cld push mov or enter dec shll outsl lock mov add or dec or insb sbb leave enter inc movsl pop cmpsl flds mov iret push add into std ljmp sub xor add and sti rclb ss inc sub push call loopne xorl loope mov ret in sbb cmp adc adc or cmp test pop cltd pop mov fs or jmp sbb or jbe xor mov call pusha inc nop iret xor fwait pop jmp xchg push push (bad) into mov sti std arpl add cmp jne fdivrs in push sub pop adc mov loopne insl aas es aad fstpt or sub clc outsl add mov repnz mov and rep lock stc pop addl cmp or sub shr pop or (bad) jo xor or mov mov cmp push cwtl pop adc sahf jb hlt cmp xor call scas test add sbb add sbb stc push adc sub pop mov adc ja ret cs fwait (bad) das push pop mov adc add loop mov lret inc mov or movsl sahf push rep aaa call add mov jno repnz (bad) mov js adc mov mov xor pop sbb (bad) dec insl nop push mov push mov pop cli into cmp ljmp je add js push add ss inc push xchg mov daa sub add insb imul cmp mov pop dec sub cmp repz mov jbe inc xor aaa push push adc insl sbb dec pop and pop ret pop push pop sbb and dec inc roll jbe jbe xor cmp mov adc add fnstenv cmp and mov jp mov ljmp mov xchg jb mov (bad) flds push insb mov mov ret dec je jo pop pop scas push xchg or jmp aaa dec sar ret xchg mov lods mov daa mov ja mov cmpsl xor adc add push into ret fs aad insl popa imul push and jl xlat fbstp rorb jl sbb sbb lods adc sub decb sub arpl push fs and aam mulb (bad) sar adc and ficom push jle jb xchg scas leave dec inc shl jmp mov lea dec inc pop lea push inc rcrb cmp mov rcrb ret mov push push xchg cli ret sbb das ljmp cmpsb push lds call and xchg shll loope mov mov sbb push std dec insb adc mov dec pop mov mov out push pop mov mov mov cli or jb mov jp and xor pop enter dec jae es inc push sub sub mov neg ja mov lds sub sbb or jb adc dec jne sub xor cmc pop push add les push or xor dec stc mull mov cmp testl add and xchg mov in aaa pop insb jg sub mov xor adc dec and adc mov inc test mov out inc fisttp lret jmp push jge or cmc push cwtl fdivrs fldenv je (bad) jo add adc rorb xor and les dec xor (bad) mov adc xchg (bad) mov js xor in lret mov shrb jnp mov jle push punpcklbw mov call loop daa push addl jg (bad) (bad) in push push jb and fidiv ret add pop sarb dec cmp (bad) loope pop test mov dec cmp ret push xor mov or rcr daa lock ja clc outsb jo mov mov xchg adc pop rolb fiaddl cwtl inc scas cs gs push mov dec inc sub sub mov rcll jmp and pop insb adc stos xchg sbbl dec sbb pusha scas fcos test loop push mov cmp adc inc neg mov xlat jmp adc mov stos pop xor ret xor addb out or leave mov js insl loop mov jmp mov insb ja stc cmp shrl js clc ret inc pop or jo pop cmp cmp out xchg add rolb dec inc ja (bad) pop (bad) jo inc mov add (bad) mov dec jne pop cmpsb (bad) mov je push ja inc add sahf jae mov lods mov mov dec jle (bad) dec adc outsb test mov mov (bad) xchg out sub test cmp add icebp push and loope push (bad) std mov out fldenv cmp add fstpl dec mov sti lcall dec aaa xchg and stos aad push aaa repnz dec xchg sub out cmpsb fisubrl lods inc and stos push xlat push fwait cmc loopne jne jne ficoml out add pop pop adc pop loope mov (bad) (bad) inc daa insb outsl ja inc test mov jb cmp ret mov aas clc xchg xchg js scas add dec jbe sub add lods outsb sbb mov (bad) out pop mov lea dec mov push loopne aas fcoms jb rcll push insb xor jbe add cltd test adc (bad) cmp testb push cmp or xchg in lea inc add (bad) adc add or adc jne or xor cmp sub push or lret jb add fisttpll fcmovnb cmp jle cmp mov ljmp or adc fcoms inc mov mov cmp jbe mov or cld mov push xchg fldt lds cmpsb (bad) jne or mov mov pop (bad) movsl mov add rclb sbb dec add jp mov xor fisttpl ret movsl test mov or push out xchg mov pop je je jne enter dec mov aam jge mov add pop (bad) hlt xchg adc adc pop sub pop rcrl or xchg (bad) mov dec jo sahf pushf lea lcall mov ljmp sahf addl sbb test clc sti fistpl sbb mov enter adc sar xor add pop cwtl xor sub cwtl cmp jo bound jne nopl or mov pusha pop test dec bound add (bad) mov or ret push sbb pop lods loope pop push cltd sbb and rolb movsb push test add mov aaa pusha lss add sub xchg rolb sub adc and sub xchg jne adc pop sarb mov push push cmp sbb out mov aas cmp sbb fs leave mov pop dec shld mov or jbe dec inc mov or inc fmuls pusha arpl push jg addl sti sahf jle push or xor das push cmp push rcrl fwait sub push add lahf xor mov inc cmp pop add mov sbb and inc fisttpl add sub and cmpl fimull add push sbb stos adc jae,pn cld outsb push add je sysexit xor cmp inc adc es xor lcall inc push aaa aad aaa push mov aas dec sub js out pop push push sbb cmp push in (bad) xor sub xchg stc inc push push push sub pop ja test les loope fcoms xor fnsave ja jmp xor mov and xor cmpsb cmp fistl mov sub imul inc xorb xor xor push fsubr into push sbb inc jae mov fsubrs dec inc sub mov sub in cmp mov inc push outsb aad jae jle cmpsb popa adc addl movsl dec scas orl dec xchg aad mov add out or inc xor adc mov aaa mov fsubr enter add sbb negl mov add sbb call out add out sub aas lret lods into (bad) sub lea enter push inc xor (bad) fnsave pop pop and sahf cmp mov push or dec push inc xlat sahf sub test push enter inc pop adc fcmovne inc outsl cmc dec in and sub cli popf push cmp cmp mov dec repz (bad) popa jb mov mov not jecxz sub roll fidivrl in inc mov stos negl mov int3 dec sub adc aam jb insb hlt popa push scas jo ds test (bad) dec sub inc cmp jne cwtl jae (bad) imul inc sbb xchg pop sub dec push jg add imul cmpsl rolb xor out scas mov xor aas dec ret (bad) data16 lret (bad) or cmp movsb jne push loope outsb mov lock (bad) repnz mov xor ficoml dec sbb sub and stos scas aad cmp loope in add push inc aad pop lods mov rclb mov (bad) rorb and outsl sub or sub dec push or sbb mov rolb inc sbb and mov xor cltd ds dec pushf xchg inc sbb and shrb sub pop insl mov push mov cmc jg (bad) mov ja dec push cmp imul pop loop je push sbb cmp jns add pop mov hlt push pop out (bad) in push (bad) jge pop rolb add out test test sub jp ret jae push cmp mov out loope dec cmpsl push sub dec insb pop jae sahf mov or popa fs sub (bad) or sub cmp sub or rcrl shrl add addr16 sub xor loop shll cmp (bad) xor adc mov in (bad) or push lea inc adc or cmp dec dec push movl sub mov fadds add push push popa shrb loope aam inc enter cmp jns lea jae divb mov in or sub incb sub test clc and adc inc stos mov scas push rcl inc inc mov clc les or sub inc ret (bad) fstpt mov cmp insl mov and mov dec bnd loopne cmc js pop shlb or popa mov rol or jae sahf adc pop mov (bad) out (bad) std (bad) lret mov rcrl jnp adc lret cltd push ret pop in and mov dec sub and aaa (bad) into add xor jne ret outsb push mov mov cld mov sbb xchg mov jmp and (bad) js sbb lcall and (bad) jne push jbe jg and push push push inc lea mov sub clc jl sub sbb add roll fstl cmp test inc or push sbb dec inc loopne mov insl mov jl push xchg sub pop inc shl mov sahf loopne xor add dec and jnp lret mov (bad) out mov xor sub mov dec pop push adc or sbb inc shll sarl push das push loop mov adc dec mov sbb inc xor jl jns jp sbb pusha jae fsubrs push mov pop adc jae iret mov fistl dec push push and fmul pop mov mov mov or xor fsubrl nop dec faddl mov flds push push cmp inc sub xchg sbb repnz dec add xlat push xchg mov add dec dec dec leave (bad) fidiv and cmp sub mov mov push mov pop cmp xor fnstenv mov (bad) inc push lea jns jo and inc inc sbb and cmp rcrl jnp xor or mov outsb add in add lods inc inc das pop mov mov push test enter mov xor adc fcomps xor add mov pop pushf mov mov scas push mov mov dec and mov mov dec (bad) shll push xchg pusha xchg push aam mov cmpsb scas std xor cmc sbb push push pop cmpsl ja and sub cld insl adc dec pop sbb frstor and mov aaa dec movl add inc int (bad) jl xchg sbb sub ljmp mov xchg sbb (bad) jbe and in nop mov push adc push and mov push sub pop enter cmp jmp aas int3 mov dec xor jl push int js pushf (bad) je mov bndldx sub sub mov inc outsb out push push data16 push or or lds mov ds test push or pushf mov push inc dec push sbb mov fadds dec add mov jb faddl dec mov push ret xchg lret pop les leave xchg aad and add jle pop dec adc sbb in jae sub push lahf rcll jle xor rol add aas test out addr16 scas sbb lods pop ret imul cmc push push cmp mov insl ret jb mov jl pop sub neg shl aam push cwtl aaa or cmp icebp add repnz cmp nop hlt cmc div cmp nop inc clc stc cli in inc push sti cld std aam push cmp incl dec sub lret setl add adc dec jne dec mov in div icebp cmp div jmp pop mov pop and or jne or fstl inc inc das std add out es adcb ljmp add test lea out mov or mov add faddp faddp sbbb mov fwait jmp mov sbb (bad) add fucomip (bad) xor data16 push xor dec je or mov sub iret push mov and jle inc mov add jne push mov jge mov adc mov sti jae mov and out dec lcall ret (bad) call sahf bnd push lock inc cmpsl repnz push out (bad) (bad) sti push or mov or scas sub push mov jnp hlt mov adc inc outsl or adc mov jg into pop shr push xrelease pop pop popf nop pop imul inc jmp popa mov cwtl lock sbb mov std sbbb rclb xchg mov cmpsl jecxz adc or sub xchg pop xlat mov movsb mov add jnp lods xchg mov sbb adc push add das sahf mov hlt mov sbb sub enter jle test mov (bad) mov shl xchg mov push jbe cmp mov mov push xchg xor or cmp enter jmp xchg leave adc lret (bad) push mov mov (bad) outsl nop add cmp jge or sbb mov pop xchg xchg js add or aaa sbb push push xchg push sub repz jle add cmp jl xchg push cmpps ret mov push or (bad) in orl cmpsl fsubs or ja aad faddl cmpsb add cmp ja cld xchg cli pop jmp lea rorl ja sahf popa add loopne adc push cmc (bad) test cs sti les mov enter jle dec inc inc mov xchg push test fsub adc aas xchg enter jo or ret lahf repz adc call inc aas shll popf (bad) push add fstps insl (bad) shl cmp (bad) sbb inc mov lret cs mov sahf (bad) sbb sahf lret in ret push ret (bad) sahf push loop adc fisttp and inc push jge inc (bad) leave dec lea push stos add and pop sbb adc dec pushl lods jmp dec or adc in lock or mov mov sbb test adc sbb leave mov dec add lods std inc arpl cmpw xor sbb inc inc inc mov mov test orb adcb push push add out (bad) adc inc in sarl rcr cmp std add inc mov inc je sub add mov mov pop or ja lea orl cmp add pop jnp add jl mov fldt mov cltd jns fcom sti cmp jl push sbb les adc les rcrb dec xor shrb mov sarl adc ja inc mov adc mov sti mov mov adc dec mov or scas add out out or sbb adc mov push (bad) test hlt cmp jb mov or mov push mov rolb fldz int aaa dec scas add add enter sub movsl imul int3 push loope das dec cmpsl ljmp push cmp cmp xchg sub push dec sbb scas sub aam insb (bad) das add test cmp nop insl sub xchg or mov popf mov fisub and mov add cmp jb jne mov ret add ja inc adc imul adc jb jmp mov shl mov and mov jmp cwtl push seto mov pop addr16 xchg loop add arpl sub adc push mov jbe shlb xor adc inc sub addr16 cld into sbb inc fimull mov push dec jg inc cmp adc mov mov adc mov xchg pop mov les xchg cmp add cld movl lds xor jl pop cmp jg xchg and mov inc sbb xor jl jo mov adc and pop cld mov movl or sbb jp sti mov scas inc lea pop add adc daa adc lods inc or mov inc add add stos mov lods push imul xorl mov jne insw imul (bad) mulb (bad) or adc out add mov mov std xor and lods pop popf fwait sarb xor inc adc je sbb dec cld dec or aas mov inc xchg repz cmp outsl xor cmp fsubr sub or out fsubrs testl test mov fstl pop out pop pop hlt test nop jge xor jmp scas add insl in and mov push sub push mov cs data16 add shr (bad) dec arpl jne aaa push mov sub js mov scas add dec (bad) leave je pop push dec or mov push sub add xor jne pop pop lea push mov divl js loop cltd or add cs adc sub dec mov and loopne mov jbe jne dec jl rorb inc adc shrl cmp mov mov pushw add dec les mov out mov mov xchg mov rorb inc es mov jl mov ja pop pop lea jl dec mov sbb (bad) je cmp jge cmp loopne add pop pop mov aad (bad) frstor pop xorl or jnp or mov mov cmp clts mov stos stos lds add psubw outsl ds pop loope xor fcompl push mov jg push fs je ljmp sub or jle lea xchg cmp sbb (bad) mov mov xchg pop pop pusha xor adc test jle aad sbbb movaps xor dec cld jle xchg rcrb enter pop and cmp add add jge arpl or mov mov mov mov xor or xchg aad lds xchg dec sbb (bad) nop lret mov insb mov adc push sub inc lahf xor inc pop push xorb arpl leave mov add mov push inc cmp gs push js sbb dec mov jp cmp ja jge cmp inc push push and arpl push lock aaa sbb mov addr16 push lahf jle xchg test mov mov sbb mov cmpl pusha pop (bad) js pop adc aad or adc dec iret icebp or aaa lock mov fs into ret rcrb or dec mov pop add mov xchg fcmovnbe roll push adc out je fmul mov inc pusha out push popa sahf sbb popf sbb dec cli push jle ret int3 (bad) std div stc (bad) add cmc repnz mov cmc add aad cli or add cmp mov dec and nop mov xor mov xchg mov loopne jle ds and pop adc jp sub addb inc ret jecxz pavgw mov mov imul out aaa and lods es pop cli jmp add pop test add loope mov sbb fwait or pushf xor push fimul addl or push xor sarl mov jo cmpsb test mov mov or leave je inc (bad) rcll das nop push subl mov inc sbb nop mov mov cmp sub dec mov mov xchg add pop icebp in fadds iret adc lcall testb popf push sbb fwait out mov int jno mov out adc add cwtl fidivr popf push mov loopne inc aam scas inc sub mov cmpsb pop fs cwtl lret pop daa add fsubrl lret sub outsb lods sub test ds insb jo imul push push idivb lret or pusha scas push mov mov cmp mov stos xor adc jmp push xchg dec cmp sahf jae fistp lods jmp mov shr push cltd test sbb clc mov jp lahf push (bad) lahf mov mov dec pop test mov sbb les adc nop pop flds dec mov mov enter loopne push insl mov push xchg push lock int mov pusha shlb add rclb (bad) nop in adc mov inc inc or out add push add jmp pop cmp insl add mov int3 lods inc (bad) mov sbb mov cmpl rcrb (bad) dec jne push sbb in cmc (bad) int sub cmp mov lahf mov xor pop dec and xlat pop setbe mov lret or fwait movb icebp and or shr shl dec xor cmc or jg shr pop pop push xchg popa andl (bad) dec leave pusha dec push xorl test inc mov add fisttp xor mov rolb mov or je clc cmp push fist mov mov or dec (bad) and lea add mov pop xchg sub sbb sub mov xchg fldenv stos arpl je sub add mov inc not xchg mov adc not push inc mov dec or xlat rolb movsb mov dec int3 pop lea in mov sbb dec mov shl add pop ret (bad) adc sbb mov push push and push inc mov mov push push push ficompl or dec cltd imul or popf inc jae jmp mov and dec add (bad) shrl dec xor cmp mov add orl les or pop in test sub nop out inc sub insb (bad) or (bad) pushf subb or dec and sub aaa sub jo lds das mov enter cs andb leave sti adc mov test dec cltd rcrb cmp sub mov sbbl sub inc sub pop cld fmuls decb ja jl mov aaa mov or rcll mov mov dec pop idivl mov mov sub mov inc stos dec loopne loope sub (bad) jae mov inc aaa adc or add and push and add xor push mov and addl lahf jae shrl lds mov test mov sti push cld pop lods test je fucom shld push jo pusha insl mov and sbb mov dec pop lea dec repz mov and test jns pop pop lahf xrelease jge inc and or (bad) jmp je jl in jb je pop add lea and jb fsts inc pop add pop enter mov loopne test or sti mov mov inc sub jnp or jae loope iret outsl pop (bad) sbb dec pop (bad) jb inc loope fmuls ret (bad) add lahf std push jl sub aaa sbb and iret adc xor adc mov ret or dec pop pop dec outsl arpl addr16 add xor and dec pop mov pop adc xor fdivp xchg sbb mov mov adc mov dec pop or pop jne pop rcl pop mov fist add push andl sti in mov ljmp (bad) ffreep inc lock mov adc stos call inc sbb add int mov lods movsb and das mov mov cmp ret inc dec int3 push stos dec mov int add push push dec inc add outsl push dec das push mov dec jbe and push push cmp pop jbe cmp mov cmp lret mov in lahf xor int lret mov or fstps sub push mov loope mov mov sbb aaa dec outsl and arpl xchg int pop and add ljmp mov out pop add out inc add sub xor mov inc push (bad) lock push push (bad) xor add and sbb add neg inc sub adc push xor adc and add or and push dec adc push mov mov mov (bad) std in push sub inc sub cmp mov pop dec adc xchg cmpl dec mov or or pop jbe push sub adc mov aad push xor mov mov pop pusha (bad) xor shll jo or push dec js inc jb mov mov pusha xor jo pop add ljmp add mov jne cmp pop je icebp jne sub mov fadd cmp add ss popf test icebp mov push mov cmp mov repz lahf out push push (bad) icebp and aas mov mov cmp jne dec sub xchg jne cmp mov sub push add pushf sub fstp decl lea sub js push ret add adc mov mov mov (bad) pop or dec add (bad) jns fadds cli mov jecxz sub idiv fstp jg adc fildl dec sbb dec in sbb jne fstl push (bad) sbbl fndisi(8087 mov iret mov je adc cmp jge push dec or data16 and fnstenv inc (bad) outsb mov inc xchg or mov xchg jmp mov nop cmp fucomi sbb push aam sbb cmp (bad) rcrb and cltd add rorl mov add dec push stos push jmp mov pop inc rolb xor add and cs or sub adc sbb add inc mov add inc add call popa push dec dec cmp add aad xor lret nop out sub enter sub scas andl addr16 pop popa loope mov lds pop sub adc lea in mov popa int hlt mov add push out xor push add outsl (bad) fcmovnb lea icebp inc dec mov je sbb mov je,pt mov lret (bad) fildl push xchg dec push and xchg push dec adc sub mov cmp lock je jmp or movnti or adc (bad) cmc test pop rcrb rorl ss sub movb rorb stos jne sbb icebp jae xlat out (bad) arpl and add xor jmp jbe mov push shl mov fiadd inc xor and sbb push enter rorb mov lret mov outsb jmp xchg and push cmp das fmull ret jno pushf and cmpps out mov clc shr pop mov cmp bound mov mov lea dec dec and (bad) je repnz sub sub sub sbb rorb push rorb mov or and add jo mov mov and mov and clc loop in insb and sti xchg and add shrb lods mov push sub cmp add push scas (bad) and or xor jecxz rcrb push xor mov push push fisttpl pop jl add push or xchg and roll outsl (bad) testb dec sub inc test mov jge xlat fisttpll inc je fisttpll push push sub and mov sar fstpl pop ret lea and pop hlt pop aad cmp fisttpl pop movl movb psubq mov and push inc notb and push pop push sub notb and jl sub sbb mov add (bad) mov je movl or inc add sbb xor mov dec cmp inc test in jbe jbe adc out sub dec stos cmp dec jl je andl fisubrl shll aad and adc or inc cmp dec cmp shll inc (bad) and adc ja mov xchg pop in cmc aam lret lds mov dec sub std mov in xchg mov pushf xor sti cltd mov add mov jl adc sub fimull push inc push push bound pop inc xor mov lret mov es addr16 mov xor push or xor pop mov jg and or in ret jge and xor xor push fist jl sbb (bad) and sub dec inc push aaa shr or sbb adc xchg push and loopne or sub das xor mov inc push jb mov add add pusha sbb lea cmpsl mov in xor shr sub out pop sub sti test jne add dec jnp add pop add add cmp call movl xor mov xchg pop movsl mov mov movsl popf xor xor inc xchg iret lcall jmp jp arpl ret jg fimull ficomp or jmp push mov sub xor pop jns jae mov (bad) mov jmp cmc push jb mov out cmp jbe sub mov mov fnop pop inc inc dec jne je jbe cmovns imul jmp push mov adc fstps aaa xor pop mov out add nopl jp loop jb andl jb and xchg test push xchg lods je inc inc test (bad) pushf or sub test (bad) fcoml rorb mov fcmovnu jae inc stos push or rolb adc dec mov sbb or sbb push fwait inc or mov rorl das cwtl add and pop add inc (bad) pop xchg in fnsetpm(287 jb push xchg xchg mov data16 cmc stc mov insl mov add inc pop inc mov push sub mov inc (bad) add push shll dec jae jecxz inc sub jbe cmp or pusha ja movsb xchg cmp inc fstl sub aaa mov out (bad) pop pop xchg pop ds das inc out adc imull adc pusha cmp push mov jmp mov or sbb and enter add cld inc aas movsb pop out mov mov or rorl mov add mov or (bad) pop int3 mov sub and gs add fldl mov push js dec (bad) je jo pusha pop push jnp add outsl inc (bad) in cmpsb imul imul ss push lea sarl mov hlt lods add (bad) or or mov xchg sub cmp mov and std jecxz ja call sbb neg imul enter sub sub inc adc push ds test out mov mov dec and ss test arpl cs fldcw mov push movsb pop in lcall cld add or ret sub cmpsb adc fldcw cld (bad) xor mov sbb sbb adc xor adc or add popa and fwait and or fwait scas dec add lcall pop mov inc add cs ret mov lret add adc imul push or pop gs mov adc jb and test mov adc aaa mov mov divb xor mov out out pushf jne dec je rep pop or ljmp out ret leave push pushl or pop adc dec inc mov jo sbb call cmp sub lea cmp clc or sbb pop jae mov outsl cmp jmp push add jb push mov pop mov test (bad) pop stos pop dec xlat aaa push inc je sar (bad) add sbbl pushl sub out orl pop jo fisttpll jmp xchg push fsubl or jge adc sub rolb add negl sub and call shr pop push sub jo jp push dec in sbb add std fimull sub pop hlt mov cmp add dec ret jo push mov das aam mov add add push pop fisubl test ret sub pop cwtl out mov mov out jecxz es cmp jl inc dec and les je pushl push sbb xchg loop add mov add cmpb mov les dec pop movl roll mov dec push movsb sub pop daa clc inc push inc xchg mov inc sbb jae pop or lahf sbb jmp es add add push (bad) jno out aam and jo sbb add das inc test shlb aas (bad) mov sbb dec insb mov test push mov inc arpl mov movsb sub dec jo pop daa sub adc test sbb mov pop arpl or adc mov inc jo jne adcl mov pop add xchg push adc push push dec lahf pop rol in lahf fisubr pop or push mov cmpl add add push lock or or add add dec movups mov or jge popf fisttp ficom and inc cmpl xor sbb test or jecxz jae sbb adc add (bad) (bad) test adc mov aad cmp push std add push sbb dec add push clc push fmull push (bad) jo inc in bound add cmp sub add or rcr gs or cmpsb dec popa sbb cmp sbb dec mov sbb test imul inc and dec xchg inc enter inc add mov add add enter add addl js jo (bad) xor push fist add dec push lods add je mov dec and jns inc push inc push inc pop push ret decl push xchg xor pop inc addr16 pop inc pop in dec (bad) jne in add cld add or and add pop inc ljmp outsb test inc add pop inc fdivrl jo mov and sbb testl scas or xor pop inc ficomp in mov mov push or mov dec dec dec cwtl dec mov (bad) dec or push cmp cld jbe aad (bad) xor xor xor sbb insl les cmp pop lahf leave pop sbb mov push xor imul int add pop add dec add rcrl lock mov mov cmp sub daa mov add dec flds add and adc xchg pop pop xchg in test cmp or or lcall or or loop or or in (bad) sub dec mov dec es or out add jg push adc pop adc jne adc dec sub and dec jae andl lcall (bad) movsl rclb lret and pop adc adc adc xor xor push and jae pop (bad) xor add lea sbb dec dec and leave or and call inc sbb (bad) cmp mov sbb (bad) mov sarl sbb add or sbb pusha push push inc cld xchg jne add add sub inc mov inc mov testb iret cmp xchg sbb sbb mov in push in jno repnz sub push rcrb sub adc dec aad in in rcrl mov xor fwait out loopne aam sub ja push data16 call adc or nop outsb jae dec jmp add ljmp jmp mov (bad) in cmp dec mov sbb and sahf cmp jge xchg xchg sub dec es lock xor fbld and cmovno imul and std repz jae leave std hlt hlt push add cmc jae xorl xor pop div ret test ja sbbl dec stc lock cli cli lods cmp mov das iret sub outsl cld mov ss mov sbb sbb or (bad) (bad) adc ret in stos jnp inc test sub or lahf rcll add push insl push xlat xorb test in adc shrl or enter hlt and clc and cld adc insb iret xchg sti out out dec dec popa popf dec outsb call test sub mov pop inc cs jmp jmp lea add popf cli mov das mov js out out jne sbbl add cli push cli repnz stc repz jbe repz sar inc dec push call cs sbb mov (bad) pop inc div outsb (bad) jne xor add jb cmp stc out clc ret rorb jne sbbl add addl and mov cmp add pop push mov inc and (bad) mov and mov loop icebp mul xchg imull and enter out dec in (bad) leave (bad) out inc testl (bad) mov imul ljmp mulb in (bad) in sub divb jb and shlb cmp mov pusha or sub (bad) mov fs (bad) repnz inc pop pusha cmp lcall cs mov cmpl and xor adc jmp xor jecxz jns popa scas stc xor pop or cli push cmp hlt and and mov and (bad) (bad) xchg xor xchg mov hlt decb inc xor (bad) cmc dec fldl insb inc out fwait add push aaa ret loope loope loope loope adc fadds dec enter repz lds and in enter push jns repz dec push inc das mov sbb repnz repnz mov jmp push das mov jp repnz rclb sub mov sbb lods pop pusha jns bnd in (bad) add inc loope mov jns mov adc imul dec xchg push and icebp push icebp and pop inc (bad) sub add jp push gs add jp lock pop pop and outsb pop sahf pop fmuls stos pop pop or jne jp xchg jne push lock xor mov pusha or push mov adc test sbb int ret jne (bad) fidiv push sub jae push push bound inc mov in pop inc jae sub int3 add adc stos add dec add test ret jnp mov inc fwait mov sbb dec sbbb jmp inc and out mov jne mov sub pop or push movsl and inc add add fistl sub (bad) adc fmuls sub pop (bad) dec push mov add sbb xor nopl dec scas or lret (bad) adc verr sub jae lea cltd popf das sub pop sbb leave (bad) scas add add std or inc or or je sub cld pop fldt mov pop add clc adc dec push inc sbb cmpl xor push push inc sti (bad) fnsave sbb inc pop cmpl mov mov or jle test xchg shll dec aaa add out ljmp add movsb mov add jle mov push lock jne rcrl loop and push ss push adc xchg ds adc arpl les (bad) cmp push mov pop jle and sub pop call or or sub test push fdivrs xor add or push shll cmp fstp (bad) fildl or sub or pushf add sbb adc test addb (bad) lock dec jge outsb mov fcoml adc sahf pop cmp or out sbb jae gs push and push xchg call or and push and push or jl loopne push flds jmp and adc pusha sub fisttpl push aam ljmp mov xor jnp mov adc inc cltd aas (bad) orb mov jo push (bad) cmp jbe push pop out add sbb pop arpl repnz dec out pop ljmp loopne scas push icebp mov or fwait test xchg (bad) sub jecxz ja stos clc ficoml mov add lock lock pop mov aaa push inc mov add inc mov addl mov add adc out and (bad) pop fs fcoms adc dec cmp push sbb and adc mov add push (bad) push mov dec (bad) les mov ds sub andl jne (bad) add (bad) mov add shrl sbb cld fsubs ret adc ljmp xor stos pop nop xchg mov cmp jne inc fldl or adc xor loope int pop inc loope pop in adc in jbe and jg or stc push stos adc cmp int3 push jle incb inc or pop sbb add int3 jne loopne pop adc popf mov dec and data16 pop lods add outsl push add add and in mov pop add jg jg frstor mov outsb push jbe jle sbb fildll jg jg jg jo mov out fild ret dec jne mov stos loop and sbb insl push gs and adc pop sub clc ret cltd mov sbb lret clts and clc xor cli push jmp call or jne data16 pop inc aad push xchg push push push sbb push or add add cmp add sub out add sub adc and push adc fnop and movsb sub push adc mov sarl or fsubrl test pop or adc add push sub dec ret popa jmp ss xchg jge jmp hlt andl bound or (bad) testb pusha ja out add lea adc inc inc jge or jns push inc inc inc push rcr xorl add mov and xchg adc push push xor xor mov insl pop rcr inc add dec inc cmp push std testl stos jmp neg add lock mov push inc xor adc enter push sbb jge adc and add mov jecxz movsl mov and adc insl or (bad) jmp mov cmp add aaa lock inc adc jl sbb push push daa aad repnz sbb inc mov dec inc jl cmp jb pop inc mov (bad) mov test and mov pushf inc cmp mov add sbb rcl mov clc sub es fnsave dec (bad) and pop and push rcrb mov dec (bad) repz adc mov mov add sbb sti loope pop jbe inc add jae mov jbe adc sbb adc lock cwtl xchg and xchg out xchg lods cltd push pushf sub or in jmp nop imul push lahf or mov mov mov inc mov inc pop enter bound mov outsl cmp popa into es pushl sbb adc mov rcr movups inc rcr insl outsb push dec add push xor and push sub (bad) add jbe push sub pop pop sbb cmp push fucomp and in xor push pop add loope call aaa dec push xor data16 mov or add push inc mov popf push loopne xchg out push push pop and add jmp adc loopne imul adc lahf gs cmc pop scas xor or in lds push dec fs or pushf nop or or adc dec jle aad inc out je lock mov jp inc js xchg push push sbb test cmp ds sub pop cmp sub push add sbb les addl adc or push and xor mov add dec push inc add nop cmpsb inc dec inc cmp xchg les and mov jecxz std push adc mov cwtl add and push inc ret icebp sti xor add add or xor push cmp add and jge call pop in insb xor andl vmwrite jns cwtl xchg pushf cwtl inc lods push or fist push add add aas pop movsb mov les sbb and push pop push push int3 daa (bad) stos (bad) push idivb jne cmp in dec jbe mov pop inc inc cmp adc adc scas adc push mov leave mov inc js xchg and mov fsubs inc or sub lds dec sbb jo ja ds dec add jl sbb or jb mov cmp push movsl (bad) jae sub aam sbb sbb mov test loopne lcall in mov ret add jl inc mov (bad) icebp inc ret push rcll or ss inc mov xchg mov ret inc sbb pop movsb in insb inc add push mov mov mov mov movb jb pop fldl jmp (bad) pop rorl jb lods add dec js mov into cmp aas push jo and push pop jbe outsb mov push lods fimull xchg lret add je mov adc adc and pop cs mov or test cmc adc ljmp jmp sbb xor push push lods dec sti les push push aam adc testb divl push cmp sub push or inc test dec lock adc add mov xchg push fs out inc fnstsw in mov loopne bound rcrb or xor push fs and xor pop stos sub fisttp cmp jb xchg ds scas aad cli cmp je push int3 jmp push ret and fdivrs push sub mov (bad) in bound inc or out aad sbb mov je sbb add adc idivl mov pusha adc and add mov push mov inc mov mov dec call add stc jl inc sub in out cs pop mov mov sub sub das mov add add add ss fnsave loopne loopne fsubrs es xor pusha int sbb call outsb add jo mov pop pop pusha inc and push aas adc clc ss (bad) jae xor aaa add (bad) push pop add cmpb out fwait mov iret xor test mov ficoml or or and sbb dec sarl add or sbb int3 and pop mov or (bad) cld je lea sbb inc sbb adc aam sub inc jbe sbb inc jg adc mov jne jge or je xchg xchg imul aam mov cmpl ss inc out push and and mov xchg je cmp call sbb cmpl xchg jbe or push sub sti aad enter adc inc cwtl addl mov cmovnp out cmp jnp (bad) push mov mov inc mov cmp jp or das popa rcl pop fdivl es (bad) cmpsl fsubrl loope sbb in dec and dec in (bad) push pop xchg sbb inc loopne mov xchg pop mov pop push mov mov or sti ja (bad) push ret jp ret pop mov push add call xor add mov jmp mov sub dec jne jl sbb push mov (bad) repnz adc lcall mov daa cmp mov inc xor inc jl sub js mov loopne xchg or sbb loopne lock mov les push dec mov add push cmp mov cli addl and lock out push outsl pop xlat lahf jmp add dec add and xor rcll roll imul xchg aam sbb in test rolb in inc adc pop ret and push aad jno ret int3 add test shlb add ds int3 (bad) adc add push add mov add lock ret (bad) ss call xor in test in out aas adc add int inc jmp rol pop cltd fs (bad) std cld sub mov je add mov or das dec fsubl mov outsb leave add add adc cs jle lock inc pop sbb sub data16 adc xor mov stos add dec sub mov mov inc and mov jp mov mov inc (bad) jg mov adc push lea and add adc inc roll inc arpl jl mov cmp ds shll add jb in (bad) mov movb pop mov mov add cmp ja out xchg or clc push push xchg inc data16 or cwtl insb push dec pop xorl push sub add jae adc ljmp and push add fiadd in mov mov arpl jns std pop ljmp adc adc add pop add and push daa lea mov jmp movb dec add jp sub (bad) divl orb pop and fildl pop roll cli adc adc and aam sbb iret mov cli pop xor pop aad lds (bad) cwtl mov mov mov clc je cmpl mov andb stc sbb lods dec mov movsb and shrb sbb or scas (bad) push mov and inc push inc jmp pop push adc mov mov push adc inc and les xchg push addl insl push sbb lock add xchg cmp pop add adc pop lods inc mov push jmp popa adc inc (bad) or fildl mov add aaa test mov les jp mov movb cmp lahf adc scas lods push and mov mov jne jge ss sub ret fisttpll enter mov mov xchg ja (bad) xor addl inc cmc arpl (bad) and je mov mov adc add mov add mov mov jae jbe scas outsb jge push iret dec pop mov test jle push or ljmp push test mov dec inc imul dec mov mov xchg jmp mov ret inc adc sub push jmp pop fidivrl lods sbb inc cmp jbe pop ret ret incl cmpb (bad) mov and add inc cli loope divl mov xchg movl push mov lods lea roll mov mov dec pop mov and out movsl aaa ret add negb aaa push jo sub mov (bad) loopne or jne mov push push xchg push mov (bad) push or jmp sub adc push pop (bad) xor push pop pop cld testb mov cli jle add pop dec xor or in (bad) push sti mov addr16 push jl add sbb pop adc (bad) sbb mov sti rep loopne fimull rclb xor pop adc jbe cld pop and test jbe adc rcll push mov test push ss call repz cmpsl fldl testb push fidivl mov dec xchg daa outsl or xor pop or or or sbb adc test adc jg mov inc jmp sbb dec xlat cmp (bad) sbb mov add sbb daa out mov mov mov push sti adc mov mov jmp push and and push pop leave lcall pop push aad xorw sub pop (bad) mov add sub mov and (bad) sti push aam cmp xchg inc int mov stos cmp jne or mov mov xchg pop cmp mov add or pop mov movsb jae cmp inc inc or insl sub pop sbb imul insb add rorb js lea cs (bad) adc xchg xor pop xchg pushl (bad) and arpl cmpl mov and test test sahf inc add inc adc or clc mov js push push call jl adc push or xchg sbb xorl cmpl inc mov pop cld push or call adc cmp add jmp cmovb test pop roll out pop or outsb aaa and jmp jl ss fisubr negb sbb sub or roll pop lds push xor mov ds xor bound sbb or push jo inc mov add push push cmc mov adc ja and das mov jo or adc cwtl push cmpxchg das adc sbb test mov add hlt or cmpsl push (bad) shrb lret jmp test mov inc push and loopne ficompl arpl sbb lret jne stos inc add sti inc lods mov mov fwait insl ja mov stos mov ret pop mov dec mov cmpsb and sbb add inc and pop add pop and adc subb add xor stos clc jne adc ja lock push out pop div pop jb lea mov mov adc pop pushf mov lods outsl sbb int3 jge xchg stos cmp ret or and mov and hlt cmp push cmp mov add jbe jp loop xor mov inc and push pusha mov or je dec sbb inc insl (bad) sub ds pusha mov lods cmp or xor repnz push hlt fwait js push inc push push mov movsl sbb add add xor push arpl ja add and test xor ficom (bad) inc clc pop mov clc mov or roll sbbb xor adcl push repz adc addr16 subl sbbl mov stc push fisttpl xchg and sbb icebp sbb ret and and fist sbb sbb inc negb mov pop loopne cmp ret xchg ffree pop adc adc ljmp mov sbb (bad) push jmp fmuls mov push cs push jae test lea lods and ret lods in mov lock or fsubl aam inc aad sub in sub das sub push adc mov inc sbb (bad) (bad) fistpl push jp inc int3 sub pop or push mov or xchg mov and mov push mov ror mov push pop aad (bad) decl loopne roll stc sub stos in lea pop adc jns and pushf ret add add enter rolb cmpsb pop lahf ret nop ret sahf pop pop sub adc rcrb mov mov inc and xorl adc scas dec call inc add dec ja add pusha aaa iret mov (bad) repnz andb pop stc movb dec add sbb or sbb push push mov xchg add add push sbbb xor imul and adc sub adc and xor out clc or add jo fmulp je mov add sbb sbb jo push adc ret aam jbe pop data16 add lods mov imul shr lds (bad) pop inc mov push add add xor ret or repnz push jne or add popa or jbe adc cmp jne adc adc cmc mov test mov ljmp ret scas testb add inc mov mov add dec xor pop add jle mov pop into adc mov jmp jnp insb jne jne push js addr16 mov and cmp and or test leave inc cltd mov bound xchg jp add inc add aaa or inc test jle std adc push mov call jb add xorl stos sbb add popa test pop daa xor (bad) out jae push scas clc call fldl and or addr16 inc and inc mov fcompl mov inc scas test daa (bad) sbb popf repnz inc fisttp fdivrl add push mov int3 scas es ja push ret pop mov inc sti mov jg and cmp jbe or out cmp (bad) stos loopne mov mov and sub push das pop mov bsf xchg pop sbb push stos enter pop jmp xor adc inc and sarl push mov sub xor insb aam scas insb insl call pop adc adc sub mov pushl mov push or adc xor sbb jp adc mov xor mov movsb inc or sbb xor sbb add mov mov mov push aad pop lret cmp fsubrs or add fimull sub (bad) jae add adc pop or xor (bad) cmp jne pusha or inc adc fiadd loop cmpsl pusha (bad) rclb jae or push out ja push test cli (bad) mov add cmp jge imul mov andl push popf sbb push inc add nop cmp jl pop cmp sbbl das push cld stos push push insb pop cmp pushf rorb dec cmp and ds (bad) jmp push cmp daa lcall jbe js adc call pop in loopne xchg adc mov test (bad) push inc dec add lods in sub jle push cmp add cmp ja shr push and and or mov push rolb in mov shrl pop inc xor dec int in pop gs andl xchg sti mov sbb cmp jmp pop lea mov aas fwait push aaa rclb cmp (bad) sbb inc push jmp xor pusha sub das adcb ret push or je push push push cmpsb pop das adc or flds cmc cmp and push jne decl sbb sub cmc xchg insb pop mov sti add dec adc fsubrl inc inc jae push jno repnz movl lcall add push lcall push lock xchg inc adc cmp pop mov fimull aaa or mov mov mov ret push inc dec adc mov ds or into mov insb aaa mov pop jo incl cmp je add jne pop stos adc or inc incl pop adc das insb pop test mov cmp push xchg repz jmp ret jecxz test fldenv addr16 rcrl aam out in inc inc and lods es xchg pusha lea cmp inc in or sbb (bad) sahf adc mov out out add leave jne lret std je mov or cmp dec mov or sub fdivrl lods and sbb xchg outsb inc stos xchg daa cmp fdiv sbb push leave sub pop add add sub or lcall adc sbb mov in mov push and jb ja dec icebp mov cmp ss cmp in loop adc jae mov out and out ss lea jge sbb das in cmpl (bad) push push inc dec mov mov xor add (bad) orl cmp pop xor add sub add pop add mov lds pop jmp inc fistp movsl push xor cmp or sub (bad) lods and mov cmp push sar inc push and or in dec mov jmp push (bad) push mov rcrb rcl stos lret pop adc sbbl and jmp add xor sub xchg mov inc jge fild jne add js mov shrb out lods xor or or push add sbb push push add vmovlps addr16 push pop push sbb add mov inc cmp mov or mov push mov add add or es cmp or jmp mov into dec sub rol mov or lea or sbbl clc jl xchg pop rcr adcb mov sti jnp lea (bad) and sti add lods andb test or add inc mov jl jmp mov xchg xor xor or push add je mov test subl or adc fadds clc add idivb add mov pop xor add push mov mov push jg loope dec inc pushf inc loopne sub fildl sub jl push in mov xor and addb aaa mov dec xorl or cmc push inc clc xchg cmc fs das inc push aas push fwait xor ds inc inc jmp fsubrl jmp sub or fndisi(8087 xlat pop daa movl jl mov (bad) fsubrl stos ds inc jmp fwait loopne movsb dec jae pop mov (bad) fidivr or xlat dec mov repnz mov adc push add out fldenv sbb add cmpl fisubrl push add mov lahf insb js fs ds push cmp inc adc int mov ficoml push pop adcl adc cmp jp inc push cmp pushf das adc in xchg inc sbb sbb jmp inc inc fucomp shlb fnop ljmp fiaddl sub add test lock add test sbb sub inc adc mov ja jmp test lock in not pop pusha pop pop pop mov mov jg cmp xchg sub nop or sbb mov add xor fnstsw add (bad) and adc sub and js add lock cmpsb fdivrs push push adc or dec (bad) shrl (bad) pop fimul jl push js mov pop fisttpl sub es mov out push inc test cs rorb sub pop rcl xor test adc adc jl pop adc push and lods call pop (bad) jmp push inc adc cwtl leave push movlps push push inc popa mov inc loop sub xor dec sbb jne push (bad) sub shrb pop dec jmp inc xorl xor mov (bad) fcoms (bad) (bad) inc or arpl or xlat pop test jl pop repnz andb or (bad) jecxz inc dec or popf add inc dec add cmp add xchg (bad) je loopne mov jb add xor inc mov negl mov and addb sub sbb jb rclb adc subb pop inc mov mov das mov sub lret cld shr iret imul xchg mov inc add push xchg mov push dec icebp pop inc lods stos mov or hlt jbe mov arpl push add test cs hlt lcall jne sar dec cmp leave aas pop mov or push inc (bad) rcrl mov test mov add shll pop mov andb sarl lea sbb ficom mov mov push fdivrs push mov out fsubrs mov xchg mov jne push add jecxz hlt loopne mov cmp sar sbb fdivp insb pop stos xchg fiadd xor test cmp je jp in add loop cmp imul dec adc jge add dec sti jl mov pop mov sbb jno inc sub scas cmp inc push into or dec jmp mul js mov test jmp mov and add sub adc mov fidiv inc inc mov jae cmpb test xor je sbb pop inc cmpsl or rorb stos and push and arpl mov or or mov mov (bad) xor pushf mov dec insb rcrl push loopne lret hlt dec push dec das inc loope mov punpckldq or mov pop xor in rcrl or ja jle pop sbb movsb mov add decb (bad) xchg or cmpb add out lds xorl gs or adc lds or (bad) cld cmp in je adc add insb cmp pop call mov mov inc sub add or aas and sahf push loopne call xor mov jne xor imul push xchg push stos cmpl xchg and or dec pop push addl mov lcall sub (bad) mov dec inc adc jbe push in jmp addl ds sar incl push int mov push bound push ret jno fnop or sarb mov imul sbb std cltd pop mov inc pop rclb clc or hlt push sti sub test stc push xor jns and adc cli fbstp stos adc sub push lock or icebp inc adc dec fildl push jp fwait cld push mov pop out iret std testl push push add sub or xchg test jne icebp loope xchg and scas lea push mov xchg or xchg (bad) jecxz hlt fs inc out mov inc mov mov test test dec inc push js test andb not and mov sub mov push push mov inc mov cmc xlat sub pop shr adc mov dec cld sub icebp out push mov jl pop adc xor push inc rcl test inc scas fldenv (bad) cmp mov sub ret inc xor lods mov jne pop sahf pop inc adc sbb arpl test fcoml es add pushf nop mov sbb dec mov add outsb mov or sub add je sbb xchg movsl test insl mov add adc inc adcl mov mov bound insl sti mov add lds dec dec or cmp jne inc pop adc ficompl incl sbb adc in (bad) pop add mov jmp sbb (bad) inc lret test dec aas cmp (bad) mov fidivl xor or rorb cld mov cmp std push dec add dec and inc js mov dec and pop xor imul add pushf push sbb dec or lahf rcrb inc cld js (bad) sbb dec lret pop dec dec out pop push xchg outsl push dec dec push dec and ja add push mov rorb inc xchg adc jae comiss mov dec add xor add push push cwtl clc cmp sub bswap mov and cmp push into cmovns mov cltd sbb push pop pop sbb inc sbb aam or or (bad) imul xor add cwtl clc pop and lcall push sbb jge into mov addl cmp imul lret pop dec mov mov insl test in cmp adc (bad) lcall fcom call call pop rorb mov (bad) jne jmp cs mov shrb xor inc popa into xchg sbb lock jl fs or ds jecxz adc in add add in sbb cli ljmp sbb xorl and ret (bad) iret jne cld ss pop adc pop cmp xor roll aad movsb (bad) dec inc pusha and jne inc add pop push push pop xor rcrb sub xor push insl sbb dec mov sub icebp pushf and sbb (bad) jle push js js dec decl pop cmp jge push pushf xchg out es cmp pop and add pop mov jge inc hlt decb jne mov sub mov mov scas and jne mov out mov and clc addr16 push icebp jp mov or jg ret mov lea xchg and push add inc mov and jnp mov cmp fist and stos mov push mov pushf movsl or repnz or rcl adc aam mov lea jne,pt cmp popa outsb dec cmp adc leave add add add jno mov sub pop je pop std sub movsb adc sti push aam sub mov stos inc pop jl js je mov fmuls mov add lock lret inc insb gs test ss lea push scas repnz mov mov push pop or adc inc andb (bad) aam or fadd or fildl ffreep jb or int mov adc pop pop clc add adc add add cmpsb movsl das pop push xchg xchg mov dec (bad) int fsubrs aad clc les add loopne add dec pop mov adc movapd (bad) stos loopne add out and pop add ret sbb dec add out push and adc push insb and stc fistl hlt pop and pop mov or lods popf call pop sub je push popf sbb stos es in jb negl notb push xor pop testl inc adc push jae cwtl repz (bad) jbe rcrb popf sbb js dec pop or or and mov adc mov or adc and aaa add in mov nop mov mov or mov dec mov add add imul arpl jo dec mov dec push fwait sbb sbb dec mov loopne cmp jns stos inc xor daa testl subb sub sbb jbe mov adc and cmp pop xor jge and push push push imul or xor or mov mov arpl (bad) mov sar pop xor or stos clc push jmp cmp insb and push adc jno addb push gs push inc lea push push jle inc (bad) es dec test adc stos aaa aam bound loopne mov pusha sub jbe mov inc adc cmp rcrb add cmpb add js or jno fistp andb aaa dec and shrb push and nop or jbe (bad) cli push xchg les stc jb out das jne inc jmp jb ret sub (bad) dec fmuls jb and add (bad) push mov mov dec jno push jns lock push or mov sub fstps cmp dec inc cld add call mov push add dec test add out add and xor xor enter add aam dec inc pop insl addl loopne fisubrl aad mov add push (bad) or jmp add hlt fisub add mov int3 shlb inc ss add mov les adc mov and or push sbb sub adc inc push jge dec mov pusha pushl mov add add or aaa shr pop dec orl call push je dec je mov inc leave sbb jmp mov idiv add push mov or test add xor loopne push rolb std add jnp ljmp pop jg inc mov push fcompl call jne cmp aam insb adc mov pop push dec jbe rol adc inc adc add adc or adc pop mov mov insl adc ljmp lret cli adc push adc pop or cmp jmp mov movsb je push push sbb rolb jl fs sbb mov fdivr or xor mov or sub and push in rcll dec sti movsl push push andl mov loop push push cwtl stos data16 test push and push hlt (bad) or fs add pop shll (bad) jge add pusha mov pushf jmp aad and sub movsl out pop repnz pusha mov fmull sub push loope aas mov dec loopne ja jne repz inc int3 addr16 outsl push int lea or cli push push push add adc les xchg lret add mov pop movsl xor test into movsl or bnd lea (bad) mov push push add pop lods ljmp nop or mov mov (bad) xor lahf loop (bad) inc add adc rolb xor cmp enter sbb adc push sub push lret (bad) mov in pop adc sub jno add leave xchg sbb sub jne or mov cltd xor (bad) sbb pop cwtl pop in lods mov add fmul pop sbb subl jge imul in push jns fstl xchg or dec mov mov or jbe mov pop and sub xchg mov out push sbb in mov sbb sbb pushf test adc mov jo mov cs daa push mov pop mov cmp (bad) (bad) mov push mov sbb push mov add add add mov imul mov adc xchg xchg adc push mov fistl push test sub adc int fsubr or imul idivb dec mov frstor pop sbb adc clc xor pushl stos and inc cmp push mov mov repz mov pop and adc adcl inc repz mov adc lret loop and push lcall push push cmpl pushl xor and pusha sbbl pop orl and sub or enter cmp inc cmpl or enter inc pop dec dec enter push push pop and orl push ss (bad) mov in dec (bad) je or mov in pushf mov movsb test sub push add add push hlt add inc or cmpsl mov sbb mov das fdivrs jle imul dec fldl pop (bad) mov les lret test enter pop enter mov in mov inc cmc cmp ds hlt mov sbb cmp test rcrl mov jne je mov mov call lret sbb xchg cmp xchg sub sbb dec cltd ljmp add jmp fmull call call mov sbb mov jp les pop dec pop jnp push or imul cmp adc and or aad and mov leave push jmp push add or mov jne nop jmp mov inc inc into push add insl sbb or dec aaa out mov add jmp mov pop pusha or mov pop icebp pop mov mov (bad) iret (bad) aas fs add lea shlb pop adc cmpsb and sti adc test or gs (bad) jnp nop xor push dec pusha fsubrs and push pop mov inc mov (bad) mov or or add or imul add mov inc faddl lea dec adc test sbb (bad) cmp or (bad) mov pop inc mov cmp gs ss push xor and mov cmp or mov pop cmpl inc (bad) push mov inc or inc and ss push adc pop ret in lods jg mov xchg sbb lcall xlat mov xchg je push pop dec aam adc jne (bad) int fsubrs sub jmp mov and and inc sub mov jmp and add add dec inc inc shlb pusha test mov push lsl std rcrl or pop (bad) cli adc addl jecxz inc sub inc and andb dec lret stos dec sub mov jns cltd inc lret std loop arpl mov and pop mov xchg leave adc cmp ret or je dec rolb jge add add xor mov or lods or leave pop adc mov push adc jns or push and or shrl fwait push mov xor loopne pop adc push (bad) jno testb and pop adc jb (bad) mov pop and jmp sbb mov pop pop xor es subl sbb js in add xor xor dec and sub pop (bad) pop leave xchg jl jecxz push adc cmp pop ret push mov xor dec ror mov insl jg aas hlt mov test pop push and sub adc and cwtl push mov xchg or fs adc pop inc inc or pop roll sbb fs dec pop mov jl lahf fisttp dec sbb cmp mov inc adc sbb and sub fucomi push push pusha push mov push pop add mov mov test out sub sbb add sbb je imul adc or mov dec sbb mov fdivs mov adc dec pop mov push mov ljmp push inc and lods dec and add jne push push mov jae scas add rcrb nop add jg or jle dec cld jg push mov push add adc stos and adc subb push stc mov push push enter cld mov pop or mov mov push mov and inc mov add loopne inc jl inc pop inc mov jnp jmp mov xor out idivb jno mov (bad) inc push popa push or push or fisubl aaa fsubrs jbe or mov adcl or inc pop pop pop pop pop and gs or addr16 xchg flds add (bad) pop insb inc iret or pop xchg lods add sub js sub cld mov insl or out mov in mov cmp in push ret mull pop adc sub addr16 and jg in fcmovnbe ljmp div das and je inc mul sub ja jb cmp je sub dec sub sbb (bad) enter or roll mov mov adc addr16 ret fbld lcall jne pop div loope push add addb pop imul push push (bad) in inc pop xor xor and fstps lods or push add cli mov mov ja and sbb cmp pop add jl add push push aam loop mov movsb jle add pop inc or mov push push in mov push ja test adc add mov inc jmp cmp jne addl add adc mov dec mov test and (bad) aaa int testb mov add inc add cmp adcb adc and cs js adc sub cs and mov inc bound mov lret ret test jo push jo movsbl pop pop or add popa cmp mov ja sbb leave cmp jae mov cmp or jbe push add loop mov lahf pop cmp andl push loope push scas pop mov push (bad) mov jne test insb inc mov ds je mov push push xor cmp push adc (bad) jbe popf insl sbb pushf or daa outsl dec mov and idivb add xchg pop xor add xchg (bad) test popa mov inc ret xor aam adc dec pusha add rclb jne push clc sarb enter pop ret pop push add mov je jns mov mov mov xchg xor in je mov je pop test cmp jb cmp ja add cmp or mov loopne jmp adcl jb divl rcrl adcb jne inc mov lods ret adc (bad) mov xor pusha inc pop notb adc jo outsl iret test push or fsubr in js ret shl push or inc mov lret xchg stc xor cmc (bad) push and add xor or loope lds or push mov mov pop les into lret inc cld push ss out shl fwait sbbl adc faddl aam xchg sub faddl aaa push std cld jmp add test jne pop sbb call stos add mov jmp jmp or shr inc mov mov nop lcall pop jo push or add mov test inc push jmp rclb push mov xor add fcomp fdivs shr insl outsl arpl (bad) ljmp dec or inc dec rol ljmp ret rclb mov sbb shl xchg push insb imul das cmp rcrb pop insb sub or cld xchg mov js out dec lahf jo push mov clc js fistl push push lcall inc push push xchg push dec jbe xor add push test adc sbb push cmp cmp adc adc mov pusha jnp or add je cmp test fimul or xor lahf inc notb sub push jne sbb add push mov hlt jnp or and and fwait inc dec enter ss jl inc rolb adc addb ret xor push aam dec and or mov pop popl in xor mov inc push push imul mov mov imul ja je xchg mov inc and inc jmp jmp insb adcl inc fs jne or imul jl or or pop pop imul je push scas inc pop push cmpsb mov pop das arpl and insl insl test pusha or icebp (bad) ja mov jmp adc mov mov add inc adc mov pop cmp jge cmp jle and decl push (bad) scas push mov dec aas mov lds adc rorb mov adc mov nop adcb scas or and pop cmp cmpsb clc rolb dec mov cmp mov pop ret sbb fadd sub je xor (bad) icebp notl dec push mov mov xor adc add cmovb mov xchg push jl sbb pop or cltd sub jns pop adc out sbb push hlt fiaddl push xchg push or mov sbb add mov cmpl mov outsl cmp or or sbb lea push ja lock pop mov fstpt movsl cld or pop jo or testb sub mov push test adc setns insl insb js cmpsl cmp ret xor pop inc xor mov negb (bad) (bad) testl pop adc adc and cs jnp xor (bad) (bad) nop in hlt ja imul push push lea out mov pop pop pop sbb pop xchg push sub mov or inc cmp aaa movsb outsb xor add (bad) adc (bad) xchg add rol fild jnp push mov mov cmpsb push inc mov fbstp pop lods or call xchg push cltd rcrl adc xchg jb sbb adc leave and add loopne push jmp cmp adc and mov push or cld inc xchg mov adc adc push push rcrl and mov lods repnz add test add inc movsb sub dec popf test dec dec inc jae cmp jecxz mov mov fwait sahf and mov and add adc call xchg mov push jnp and jae mov jne xor or jne and cmp pop mov mov pusha adc rcl enter jecxz cmpb mov stos in add shr sbb mov xchg push xchg xchg sub jnp jo jne dec or int3 push imul cmp push mov stc mov sub and and and sub insb adc fldl add and test and imul adc pop into mov mov mov hlt mov pop lods inc cmp xchg (bad) mov mov in pusha add push addb sub add inc adc inc sub pop or cmp inc cmpsl jle push push or sbb sbb icebp or lea jle cmp pop clc jne insb jno push push jg inc add or inc mov and fstpt jmp adc mov add jecxz jl decb (bad) jo xchg icebp orb mov (bad) mov mov mov cmp or insl stos mov fnstenv sub push add in int3 add mov cwtl cs fdivs cmp add jecxz (bad) dec mov adc nop adc orb inc push test (bad) divb outsl and iret mov movl adc cmpl ret pop adc inc or pusha push fildl and inc movsl pop add enter dec rol mov out push push insb outsl out les in data16 scas dec add xchg add xor mov jmp adc add cmp insb loope fcmovnbe jmp rolb jle cmp inc iret enter push pop jne mov and pop xlat pop arpl adc add scas mov (bad) clc or or mov or add pop lcall or dec add adc insl rcll and ret cmp or addl add and test fisubrl push cmc mov add adc es push adc sub adc push jno push inc (bad) decb and test je sahf mov stos inc cltd fbstp addb sub add inc icebp adc add rcrb jl movsl mov cmp (bad) cmp mov jae je inc and popf insb push push jmp sub aaa loopne dec jbe out sbb movsl sub mov es and and and push push sub push clc sbb es pop push pop je xchg add adc cwtl call dec pop mov jae dec je dec jne push inc or ja lods xchg push jge sbb xchg test sub sbb adc push mov sarb push add out mov add sub aaa mov test popa pop sbb cmp add inc or imul sbb cmp fs cmc les iret sub jne add add push fs in aas or jg cmp je cs and add add xor mov sbb mov push or mov mov adc js push cld jne and and cmp push cmp jl rolb ror jg inc test in or dec hlt out push cmpb inc adc (bad) sub inc hlt inc sar jnp and subl repz loopne (bad) pop jb xchg adc mov add add xlat pop (bad) lea add cmp jl enter mov icebp push lret add add repnz sub je std mov adc daa adc add jmp shrb push and or mov bound push (bad) sub pop mov ss outsb and pusha adc pop or sub pop mov ret or aas pop mov mov (bad) test pusha arpl (bad) jle inc dec add fadds clc or add stos cmpsl or scas ret adc add nop mov movl xor push sbb enter andl add jle rcll jbe bts push xor ss je sub cmp fsub jae xchg xchg pushf jg and lds test es pop jg je call insb mov into pop scas adc jle jbe mov hlt mov xchg notb or pusha ret add and mov in jg or inc jl out (bad) mov jg jmp je hlt cmp mov add jne or or ja jns loopne mov pushf je push hlt inc sub lock inc adc incb mov incl adc xchg add popf and das push arpl and insl xchg and sbb movsl or or adc jno negb xor add mov rcrb clc push inc add aam pop lods xor fwait add mov and mov add sbb push push dec loope jl insb mov or paddb rclb cmp je cmp adc (bad) xor outsl push sub testb lea inc sub inc add stc mov mov push push mov fwait (bad) mov stos popf jmp and dec push rorb je loopne jg (bad) xor je sub pop adc daa in mov inc (bad) je add xor push and cmp jmp adc rcrb ja sbb popf xor jp push ljmp push add out in sub call xor fstpl test insb cs scas sub xchg and mov sbb sbb mov push mov stos inc push pop ret scas pop inc test lret mov push repz dec lea ret adc sub and push std icebp push xchg push jl cli rcll jb push push mov push mov testl fist outsl dec gs sub and push out sub int or push jmp push stc int3 nop and sbbb xor imul stc mov sbb (bad) aaa ficompl cmp jb cmp push cmp fcmovnb inc or adc xor cmp inc mov xchg repz .byte call add mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call xorb push or packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb pop insl jnp sti mov movsbl adc adc adc sarb rcl or adc in in inc pop daa push or std scas pop or mov inc jmp jnp ret insl fstpt push lea push mov (bad) or add adc (bad) jne push sysenter xlat jge mov push push pusha jge push imulb push call push ret dec sub je decl call clc or push push cmp add call mov lock push adc cmp adc push pop mov xchg int mov int3 inc add (bad) mov pusha or imul lods daa out jmp xor rol add mov push mov lcall (bad) fdivs jnp sbb sarb je push push fildl fsts fcom jbe je xchg sbb sub or je cmp jae and and mov adc insl pushl cmp jbe or add (bad) jg popf pop xchg faddl sbb inc mov jecxz dec or cmp ja xchg and out push rolb or add shrb inc fldt mov ret movw cs pop mov mov xor pop scas mov out fdivs orl ss call mov cltd in or mov mov lea mov pop jo sti (bad) or jp test add jae jae outsl pop xchg hlt push push jmp gs push (bad) (bad) fmull mov jle pop jl lock inc push cmp test mov inc push push sahf or mov cli or sub mov mov mov add or mov sub ret adc cmpl dec mov fisttp rorl adc sub mov aas push pushl mov push pop add std and xor push sbb or push mov fninit mov add lret jl enter inc rorl fisttpl xchg aad cmp fcoms push fadds nop test sbbb shrb divl jmp cmpsl cmpl xor sbb mov mov je mov ret mov (bad) adc lea push push push repnz pop aas cli or cwtl test pop pop repnz push mov mov aas xchg inc addl mov lock fimull mov add leave adc push or mov test or adc push jb push hlt mov enter rorb inc adc sbb add mov xor lea mov add xor mov mov mov add lea jmp std fisubr je (bad) xor movsl lds mov mov dec sub ds cmp adc cmp insl lock mov adc add and jbe movb adc inc out pop imul add xchg test sub add and std pop fsub push cmp push test mov jae enter or ficompl imul loopne or mov jge ja jbe jp mov lock jae inc sub rcr in adc pop (bad) or stos sti jb pop and push lea aam rolb jne push adc (bad) imul add test pop sub xchg or popa fwait sub fisttpll in sti dec andl icebp xchg (bad) icebp adc (bad) rclb cmp divb mov cmp jle cmp pop mov inc add ja mov inc jl leave js xchg leave and nop adc lret jnp xor cmp or pop (bad) pop aaa mov fild inc adc lock mov pop pop fadds jmp in mov in pop fninit inc outsb xor sub fcomps mov imul decl mov add leave adc sub sbb xchg jmp sbb mov sarl fsubrs mov comiss movsl leave cmp push mov xchg movb mov cmpsl add (bad) fidivrl test mov mov or out cmp je movsb and and jns and and and mov je mov dec mov adc push inc mov xchg xor inc mov and cli push mov add incl jmp push inc add ret cli cmp nop mov movl push and xor or (bad) imul mov cmp dec inc or sbbl in jae push (bad) (bad) negb add call push jle (bad) mov pop cmp xlat mov je dec mov ret enter outsb inc lea sbb int fisttpl cs in into push frstor add mov aam cmp jae cmp scas (bad) int je popa inc inc cmp jl sub ret add sub mov jmp mov outsb insl pop icebp or add adc lock sbb xor sub push push (bad) popa out movsb xorl mov jo fs push in int xlat pop fisubl jo es cld push jmp and clc adc mov cli outsl mov xor push (bad) out or and nop mov add test add rorl or ja inc cmp lea jecxz push mov or stc inc xor (bad) pop decl cmpb js ror jle xor or push add dec std mull sub pop adc sbb jl mov aas or mov lea lea cmp sub fldl adc lea push orb mov add adc pop imul pop push sti insl lods rolb sbb xchg (bad) (bad) push mov or out add lods pushw pop adcl xor push pop jb sub enter arpl icebp adc xor int jne pop add sbb and cwtl xchg popa or lock imul popf (bad) or outsb sub mov sbb sbb push sub or jmp and mov sub add or outsb pop push mov inc leave pop insb adc ja push push bound dec inc add popf push inc push pop shl mov xor daa decl loopne rclb (bad) mov sbb mov xchg push or inc pop mov repz dec dec jl pop (bad) out mov (bad) sar adc add enter testb sbb pop mov and add rcl push rclb xor lea testl xor jle sbb mov add sarb sbb enter mov test mov test and push lock pop or push adc push je (bad) std test lea mov mov pop rcll fdivrs pop push and and adc xchg dec push mov out movb pop repnz fisttpl dec push lock pop mov ret jle mov (bad) cmp sbb lret clc insl cmc jne push rcll (bad) mov out push stos pushl adc por adc pop lods and out mov xor mov push and orl or add aam add mov push add lock mov push fidivrl pop in add (bad) movsb push shlb je rolb push jmp leave pop sbb push or mov lods mov inc or ja andl or xor add sbb add adc pop (bad) xchg add pop push or pop jecxz adc (bad) fstpl mov pop pop pop pop neg jmp lsl push or sub push jno jae pop fiaddl push cmp push push mov (bad) xchg mov add test sbb or or fwait and bound mov or add push mul fwait sbb adc sbb xor aas and xor push ljmp sub cld push pop push jmp adc push sar rcrl ljmp or sbb lcall or ds cmp je (bad) adc fisttpl lret sbb mov fs jmp mov add fldenv mov out nop and inc pop repnz sub adc nop push clc and js adc pop mov mov lea jmp sbb or mov lea jns add mov fwait inc or inc das sbb insb mov adc cmp insl insl std subb and inc pop mov inc jae,pn sbb fstl roll in jbe mov into sbbl inc sbb (bad) pop orl pop mov xchg cltd outsb (bad) xor pop or clc sub sbb xor push dec xor inc cmpl xchg rcr xchg mov dec xor add cli mov jbe pop movsb cmpsl push adc add dec jns sbb mov rolb adc mov mov xchg sahf adc push repz sti mov push jb fs dec xchg and adcl sub jmp test adc cltd or arpl sbb jge cmp mov nop pop fadds adcl cmp pusha fmuls or dec int or xor stc sti jp lods push or and jnp cmpsb loopne in cmp out and fucomp adc or xlat xchg jbe popa mov cmpxchg dec mov int pop aas adc mov pop push notb das pop push push xorb push push repz push lods imul or cmpl lods lock cld rorl lret insb sbb aam data16 movsl in adc mov add aaa pop xchg aaa or adc repz or fstpl pop outsb roll add sti push or aas pusha add jmp arpl bound inc sub cld das clc dec insl sub and push imul jb cld mov add (bad) div mov lea loopne cmp or dec out pop mov adc dec inc lea (bad) mov sub jmp (bad) loope fnstsw pop pop movl roll mov subl pandn hlt movb add mov push je add jbe fnstenv add add adc push outsb call test sti in inc xor repnz je pop in mov lds in adc mov es insl mov add (bad) js or aaa ret fldenv call aad hlt pop push (bad) add daa dec and es insl xchg int add imul sbb cmp movsl insb test lea and sub xchg jecxz ds xchg cmpsl dec xor fs push sbb push fadd add ret push mov push pop ret or inc bound jb add adc jbe xchg or jno push adc sbb jnp add mov xor xor insb js push and push push push (bad) push mov test lock je fnsave (bad) shr pop xor pusha sarl and jne cs or lock xor cmp push call or xor adc aaa ljmp cmp inc (bad) movsl movsl js cmp enter mov clc mov or jae (bad) int movsl sub jae push into js test psrlq dec sti in ret bound (bad) push or xlat andl lock rcll cld test xor fdivr xchg hlt sbb clc stos fneni(8087 jne jae and mov xchg xchg outsb push rorl jnp pop xor xor fisubr add mov decb xor xor push pop xor imul pop rep cmp sub ret mov and mov or pop pusha ret dec movsb inc dec imul pop (bad) fcmovnb (bad) pop adc jle jmp pop push sub insl mov movsb push insb std or and jmp lods or mov inc push std jmp (bad) pop mov es repz push jl cltd sub notb sub pop mov loopne fidiv pop cmp fdivs pop sarl lods sti inc in cmp or push loop imul adc wbinvd popf mov pop dec ret push push cmpsl xchg pusha popa add call shll mov push push lret push jbe mov xchg test sub loop fdivr mov lea inc add arpl pop in sbb jno or sbb push sub cmp mov (bad) pop addb mov sub das dec fs or pusha pop nop pop sti jno or add in repz fs aas fisttpl add je and ss mov je add cld pop loopne stos sarb lods pop movzbl inc jmp mov inc adc inc cmp int3 rcr dec dec adc unpckhps inc mov jge xor das insb (bad) mov mov inc lea mov add cld fildl stos addl sti cmp sub pop dec pusha call lods add inc mov lods fcomp mov je inc add cmp mov add add maxps push push lock add push push mov (bad) or clc push cmp nop dec std jecxz cmp push push cld xor or push lea xchg test lea mov pcmpeqb stc aas je add jne std je pop inc rol or inc clc adc int or aad jle adc sub adc and in lret jmp inc mov push jp mov jl inc add sub sbb xor add lea cmpb je inc sbbl jl (bad) mov push cli ret imul stc mov std insl push ss mov add jg js ret sbb ret push lahf push or (bad) (bad) and test jne dec cmp jl or std aas mov or inc dec mov mov mov (bad) (bad) fild mov cmp jne cmp jne cmp jb cmp jbe cmp pop sahf jbe pop ja int lods (bad) jbe cmp clc jbe (bad) inc push cwtl inc jge or cmc pop je mov mov ret test sbb push test test adc cmpb mov and sub push push inc push cmp (bad) mov push cmp sub inc xchg jp and pop sbb fmuls cmp dec push rol jle jmp je add adc jne jmp mov outsl fistpl adc cld mov adc or sbb xor mov fwait loopne pop lds mov fildll push pop lea (bad) or add mov push in inc loopne adc shrb sbb sbb insb xchg fs adc adc or adc testb mov enter lahf and ret xchg adc add add idivl cmpsb in inc adc adc push fdivrs inc fs sbb and loopne movsb push pop push xchg pop orb ficoml push es fadds sbb cmp adc or xchg inc mov movsb cmp cmp insb outsb pushf sub or cmove icebp sbb xchg mov fistpl lods in pop scas push pop test push test adc push xor je adcl cltd jle mov jo mov sub xor scas notl rcr and xor mov imul aaa dec jno xlat insb mov mov bound jge lds mov (bad) jmp cmp jge std ret jl jbe cmc mov adc adc (bad) push sahf (bad) cmp jge sbb insl div push or adc daa xor sub push push xor jmp insl inc das or int3 stos lods mov or jle (bad) (bad) out rcr (bad) jge xor rclb lea mov adc gs test or stos negl cwtl xchg dec mov aas mov mov add cmp push adc pop idiv movsb clc fwait lcall and jle lea xchg andl and mov pop adc cmp outsl pop loopne jl sbb cmp nop sahf jo jae ret jl or xor sub imul inc jo pop das lea add xchg adc jo rcll mov mov add push mov and sbb lock xchg xchg inc pop jb sub xor out loope xchg xchg and xor lea push xchg mov xchg mov or jg and xchg cmc mov sbb add mov mov jmp popf mov mov cwtl das es and rorb push movsl mov lret lods je mov sbb sub add or jne or and or adc test pop inc mov push pushl call stos popf inc test xor enter xor or mov jns jbe lea js xchg push fnop mov push xchg add or addb sub dec (bad) int3 add cmp popa or addb xchg add cmp push enter xor (bad) mov inc sbb (bad) xchg cmp mov mov xorl sub mov or xchg adc mov jecxz (bad) pop int enter mov jle and leave adc or jns dec out inc and shlb dec int int3 adc sbb push push xchg mov inc xor insb push int3 mov iret sbb jmp aad xbegin rcl (bad) mov adc or add cltd and sti inc icebp sub sarb cwtl and mov xlat push movl rclb lock sbb push jnp insl adc push or or push push jne jmp adc add lods test mov xor pop mov pop jg (bad) test (bad) je dec je fldl mov add rclb rcrl inc cltd jmp or ss jmp dec or push push jge mov mov sub add jbe push fnstenv push push outsl mov in cmp push out pop stc inc js xchg cmc adc push pop neg fsubrs pushf dec lods cs sbb and fwait and xorl or fsubl xchg or xchg inc ret je pop or pop xor sar je cmp jb mov sbb orl out imul (bad) (bad) (bad) jmp cmp pushf pop xor test mov cwtl mov mov test xor insl dec push sti sbb clc in mov push mov pop pop dec and pop xchg add mov dec je add lea fistpl fisubl mov pop les sbb adc or dec mov adc mov xor (bad) dec add pop jl and jno sub xor pop cmp mov or adc or inc stos mov jne xor (bad) outsb sub add test in jmp push (bad) bound rolb inc mov adc mov add ja test or (bad) mov mov in je push fisubl push xor and jmp mov or fs add ljmp js mov xor xchg mov or mov or inc inc sbb jmp push mov fs aam push pop jmp sbb test gs jne dec mov jo hlt mov pop xlat add add mov add in sbb mov cmp or adc push fwait xchg (bad) (bad) (bad) mov cmp push push cmp in inc or pop pop mulb mov dec push ds xor out sub (bad) in jmp and mov pop ss fcoml mov add lea outsl push mov xchg push sbb outsl add or mov test sar sub jmp rol in lock pop mov (bad) mov divb pop push mov or and add or sub cli mov popf jne (bad) jmp or and xor or and mov mov iretw cmpsb je and in fcmovb xor jle in sbb pusha in sub add enter jbe rolb and aam push je std or pop push dec mov out xor fcom pop mov and add inc xor je js add gs int3 mov rcl rcl movb inc fnstenv fcompl jecxz test pop push cmpl movl mov inc add cmp xchg add mov mov int3 dec or in lea adc pop dec xor pop or add pusha lahf sbb int sbb dec add mov pop mov mov icebp divb pop cmp in imulb dec add cld cmp dec xor les ret je je subb push push adc arpl sub push das ret js mov xchg inc loopne dec in mov xchg cwtl jge sbb add (bad) lea mov pushf (bad) ljmp and mov punpckhdq pushf add add mov push xchg push mov xchg mov fldcw mov rclb mov fcmovu push push jecxz lods cltd sub xchg and scas cmp sbb and fdivrs popa adc out loope movl jae out les les mov daa iret (bad) ret inc enter lret sahf xchg or sbb push int push clc and adc pop jno fdiv insl xchg mov lods add mov rol mov lock jo xlat xchg sub add addl sbb push or fwait push xchg pop adc cmp out movsl mov inc fildl cmp scas daa inc add sbb rcrb popa clc push xor dec or cld nop sub adc xor push cmp stos mov sbb dec fincstp mov dec adcb (bad) movsb push sbb add (bad) jne or pop mov fmuls stos es adc cltd and mov ret sar inc shl xlat or popf std xchg ljmp dec cmp jne pop (bad) pop pusha test dec jne sahf bound add jmp sbb mov es addb push dec xchg add pop pop pusha addl out outsb mov je cmp jl cmp add (bad) jbe add xor cmp dec dec (bad) add jge push push dec add (bad) cmp add adc adc inc sbb jnp or outsb inc or shlb adc lods pop sub mov ljmp xor jo insb jl daa push push push mov fnsave or repnz aam add adc cmp inc ss (bad) leave mov or add rolb lods loop aaa xchg frstor jne,pn push push mov call mov clc push sbb mov add es push push push xor sub adc add lret jne mov inc add sbb aam add pop in inc jb mov or dec or inc push push enter cwtl pop dec adc or gs aaa lret or mov mov adc dec xor mov or jo xor (bad) pusha adc or adc push push push xor xacquire adc mov inc insb mov es ret mov scas xor test mov add and sub xor inc mov aam setne mov out xchg stc inc imul aas fstps cltd adc aad or fidivl xchg aad xor mov shr mov lods enter cld add add cmp ja sub adc fidivl sub xor add pushf movsb inc ret and test push les pop les (bad) cltd sub push sar push ljmp xor add shl mov or popa add hlt call sub xor cmp je cmpsl sbb jbe clc lea adc mov incl mov cmp jbe dec std inc rcr dec jmp jne push lahf cmp jbe fisubr leave adc adc mov mov mov add cmp mov mov add cmp jl cmp (bad) decl add mov inc jae jae mov (bad) adc mov (bad) jmp xchg jne (bad) fstp arpl cmpl subl adc add fidivl cmp push pop jl hlt fnsave iret (bad) mov and test sub fdivs add pop pushf pop imulb aas mov insl (bad) mov jge push xor into inc sbb lea movsl jo adc movsb mov jecxz pop mov fsubr clc pop ja movzbl inc ja and test (bad) pop xor (bad) push hlt (bad) cmp mov jmp push jmp xlat jo mov addr16 lret pop add out pop mov push add or add scas insl leave lar add add out nop movsl in add add add jmp or inc cmpb je lcall decl rcl dec push pusha push cmpsl in mov jo inc pop je jp add or push cwtl xlat movswl sbb mov jl lock push loope inc or push xchg (bad) jb jle pusha pop outsl pop adcb adc cmp push lret incl fsubs inc outsl ja aam les cmp cmp aas push jge or mov adc or jmp cmp dec cs cmp dec fstl insl sbb sub or mov ja ljmp pop mov fadds ja mov lea and mov xchg enter andl pop mull pop push sar sub fstl outsb pop inc push inc call insb and test sbb pop mov fimul xor mov stos push push divb jl aas add cltd mov mov sub adc je cld inc mov into test inc jnp clc movb adc jl mov jge ss mov sub sbbl inc cmpb sbb lods stc fldcw sub jo clc mov test jne into jmp jge js adc cmp popf js cs cmp repz adc jbe mov cmp je test decb xor test ljmp lock sub jmp jne add pop (bad) aas push fild and or orb add sub movb adcl cmp push fldl faddl lods mov or aam mov (bad) jae or cmp xchg cltd mov fincstp mov push scas cld cmc pushf ret add jmp mov in dec mov movl mov push and outsb aad mov or ret mov mov pop and push mov push or jp inc xor popf (bad) or and insl into push pop push xchg les mov sub pop sti lret pop and cmpsb jae (bad) push push and or sbb add adc pop and jbe and mov add add pop xor adc xor cmp or jbe and js fisttpl mov or jae mov inc adc and pop call repz nop dec push push sub or dec lods or mov mov push out cmpsb or sbb ja (bad) imulb bound push (bad) mov xlat movsl sbb (bad) sub insl in imull push and xchg inc jbe and fwait outsb push pop adc jne adc fnstenv jl fs sbb stos ss cmp sub mov sbb cmp sbb sub pop scas mov and and lods push jl rcrb sbb add adc pop in mov jne and jo or pop mov aad les add or loope mov loope fcom add mov jp or or jmp mov sub movl (bad) mov jae mov addl sbb shrd psubsw jmp adc push xchg push mov mov adc hlt call scas dec movlps inc dec sub lods adc in push inc pop pop in call pop cmp adc jbe sub xlat jmp sbb or mov cmp cmp push pop addl jnp mov pop pusha or push test jge or jmp add fstpt cmp je es adc sub mov fistpl loope xor lcall add dec test dec inc das fnstenv negb adc jp ret sbb fs cmp sbb cmp fild je jmp xor mov or int mov xchg sbb test inc cwtl aaa imul xchg adc call mov push xor add repnz sbb shrl inc pop out test cmp lods push add add lock jne aas mov adc jge jge sub mov sub in cs subl js jae data16 js adcl pop and (bad) cmp xchg lret lods or push sbb cmp imull push and jmp add outsb pop (bad) xor mov insl or pop in or cmp insl mov int3 mov ficoml inc loope (bad) add add dec xchg iret clc push jmp jae clc xor outsl push adc push rclb and pusha mov jae lods sti sub lea push lock add inc inc scas push das loope and mov or and jae xor xor or cmp stos leave jbe cld pop push push cmpsl cmp insb ret stos ret add (bad) jge or inc or push mov mov (bad) pushl mov pop xchg xchg call mulb or dec push popf adc mov push xchg push push push lds hlt cmp jl (bad) lret sub out sbb adc icebp aaa mov aad adc jg push pop xlat push jmp cmp clc cmp test movsl sbb cmp adc pop pop pop popa jmp xchg dec jo scas dec and jo cld xchg fmulp (bad) dec out inc pop xor mov inc xor sub xor fistpl test inc insl xor out and cli outsb mov out sbb aad (bad) je adc xchg dec add cmp pop cmp pop idivl rorb int3 sub mov out pop sub enter in and push inc or xor orl or aas jae add loop lds mov outsb daa fmuls (bad) sub adc arpl dec dec and mov dec mov pop pop and aaa adc ss dec lds xor add add jne out pop idiv lret xor add add scas incb loope and pop xor mov jmp ss mov mov or mov jg push pop adc and in inc pusha inc mov xor push pop aas enter push inc shlb lcall and cmp sbb push push lea pop pop ret fsts adc loope,pn cmp out fcmovnu or mov and add push dec jae mov cltd xor sbb pop or cmp test sub test fsubs xchg inc into inc push push jmp ja inc add and cmc in push jg jmp inc mov cmp xor je stos iret jmp and (bad) mov (bad) sbb daa sub rcl nop (bad) push xor call call mov fistpl jge popa push add add dec pop popa ja and aad dec js pop adc inc sbb loope push push and mov jmp in (bad) lea sbb inc cs add mov sti je sbb mov jle pop pop das icebp ja lods mov cmp pop xchg fdiv mov adc or arpl jl imul pop add pop mov inc fstpt push inc add sub bound mov test adc pop fdivl decl mov insl movl cs pop xchg pop inc fucomp or je movb or (bad) (bad) inc das push inc add mov not pusha pop (bad) les mov xor xor insl (bad) mov dec (bad) mov mov inc adc mov repz or pop fisubrl sbb lret inc add or sbb adc push inc dec hlt dec xor imul fs fmuls mov adc push sub mov mov add inc or dec mov jmp adc push add pop sub push arpl hlt rorl sub inc add sbb xchg ffreep mov leave or or add pusha adc bound jg cli or pushf and outsb inc jmp mov invlpg mov adc pusha mov mov mov sbb xor lods sbb in arpl push and sub mov dec call adc mov push push add adc add jbe push mov (bad) mov fsubl pop lret xor cltd test mov fwait jnp (bad) mov add sub fild iret daa fmuls dec rcr int3 push and jecxz cs mov fwait add inc test scas test inc mov lds xchg cli add cmpl pusha adc rolb fwait andb movl mov cmp add push jl cmp cs xchg movsb adc or adc add add xchg lock or xor insb add call sub fstl pop xchg and push push scas inc mov push sub fs test push movsl imul push jmp add es sbb loopne dec and fistpl add sub (bad) out xchg cmp jge xor push cmp xor push popa xlat fisubr fcomps (bad) xor dec in sbb jp sub push adc push push sub sbb and cmp outsl in imul mov or cltd jne sbb or int3 jecxz cmp jno cmp ds fnsave push xor mov adc and rolb outsb ljmp cmp cmp or outsb mov sub mov icebp orl lahf dec sbb inc push xor jno xor cmp daa imul mov outsb push enter int3 xor push (bad) dec sbb or and pop dec push ss and mov cmp adc xchg outsb fs ss and repz lods xchg in daa fsub repz sbb cmp pop inc mov cmp adc je aad mov lods inc rcrl and call insb test inc insl cmpsb push or dec sub sbb adc (bad) push aas cld push jae mov ss add (bad) sub shrl xchg xlat dec dec dec push push dec or mov mov dec jns pop and fwait mov rolb push je (bad) adc jmp test fldenv inc sub dec dec test dec jg sub mov ss mov sbb lea cmp stos push push addl clc test mov jg rorl or xchg mov mov xchg andl jae cmp test jmp jb push mov sub inc dec cmpsl inc fmulp pop hlt add nop add mov enter dec push movsb push inc add dec jb sbb dec add enter push add cmp nop dec mov out loope sbb mov and dec (bad) into mov call xchg jge sahf xor jne or lea pop mov movsb out js nop pop (bad) jns popa adcl xchg sbb pop cmp orl scas lret ljmp popl and sub sub (bad) xchg push js pop ret sub dec fisubl (bad) fisttpl call les add mov sbb xlat sub fwait inc fucomip (bad) insl adc xlat sub js push jns loopne nop push ja das stos jg out dec xor xor cmp out push rorl aaa push sbb add sub pushf inc sbb aam fldcw mov mov jmp and or cmp in adc adc dec sbb and cmp sbb popa dec push xor xor lret sbb inc add bound fsts cwtl mov mov in dec dec dec lret les pop test or out xor mov rclb dec sar (bad) std orb (bad) (bad) or xchg sub mov add adcl adc pop sarl or sbb push pop sub addb mov or in test mov inc cmp nop inc or mov and push and push adc push pop add pop xchg cmovo push xchg mov std push loope insl mov push xorb scas dec jp mov inc mov cmp adc jne cmp pop int3 jmp cmp mov jmp pop xor mov inc pushf sub mov push cmp push push in mov pop mov out or push xor add push hlt sbb test cmpl adc les sbb mov push xor adc ds pop pop ss pop outsl xor (bad) or inc shlb inc fdivr rcll lds xor (bad) mov sbb adc stos pop cld jbe xor lods push jl or xor add cmovg lods (bad) movsb cmp push lcall out xchg (bad) (bad) ja mov aas cmp pushf add mov int adc dec bnd mov or push or inc jae lret adc mov imul mov loopne jp jmp cmp add (bad) jne lods dec adc adc sub pop xor mov lods rcl inc and rorb or or mov cwtl pop add pop mov mov push mov faddl loopne add lock (bad) and daa fwait inc fdivrs push mov mov xor scas fs xchg or xchg ds scas fildl dec adc push pop inc jnp and or (bad) fwait and outsl insl add fwait add inc add mov adc js or std and or adc push push jle push out rorl xor inc xlat push es jno and (bad) adc fldt clc xchg jg cmp xor sbb shlb mov lds aam xor jb jo dec push test fiadd sub xor pop insb (bad) (bad) incl cltd idiv mov imul cmp jg mov (bad) (bad) dec push les cmp xor mov mov or push cmp jne adc sbb sbb pop cmp push out (bad) dec mov cmpsb xor cmp cmp into outsb addr16 call (bad) mov xor fimull mov and icebp adc xchg icebp mov sub lock rclb test mov inc daa outsl mov mov add lock lea in les cmp test jl adcl rcl nop rol sub mov fsub or in dec in cmp and mov (bad) (bad) push sub push jp adc popa cmp and add dec or jnp pusha mov jo outsl or sub outsb cmp add add mov or data16 inc sbb gs mov bound jo cmp and add je push mov adc (bad) gs xchg and sub add inc loope shlb orl sbb add sbb gs sahf adc adc or xor (bad) jmp cld ret mov pop push jmp pop push add adc pop test jbe adc or mov fwait add dec lret add aaa sbb fs test sti sbb dec add push sbb (bad) dec xor outsl mov cwtl push pop push adc and inc dec data16 cmp aas dec fbld call inc or loopne pop push push jp inc add mov (bad) and movsb inc (bad) xor add inc scas in or dec cmpl xchg fadds xchg inc add dec jl inc xchg dec adc sbb xor (bad) add sbb inc cmp mov mov mov hlt mov xor and (bad) enter outsb cmp add or cmp sub je ret and rolb sub scas shrl in inc outsb jbe sub imul cmpsl sub xor jns inc cmpsb inc xchg dec adc cmp pop adc lea or repnz (bad) (bad) std sub inc cmp sbb jnp mov popl or popf add mov mov pop dec pop xorl movzbl mov pop sbb mov and push adc out stos test daa and push popf or pop or sbb or add mov ret adc mov mov xadd pop mov es jmp lock xor sahf cmp add je cmp jecxz inc sbb adc xchg mov and add inc pushf mov xor outsl inc les aad jle in and inc mov insb xlat popf insl add add icebp xlat add out fsts add mov adc out xlat or mov or pop xchg jo aaa aaa jnp mov or push push or fiadd outsb and add push xor adc dec add push lcall pop inc mov pop rorl jmp mov sub fisttp icebp ss add jp and cmpsl ret (bad) dec xchg sbb jmp rclb lret leave (bad) mov or add (bad) pop sub cmp das jo je sti cmp add dec sbb jp sub jbe inc jmp adc sbb enter pop leave inc cmp (bad) sub imul dec lret add loopne add jns jp add inc test fsubrs mov cmpb xor inc or leave sub add jge repnz pop or out cmp das mov push lock add add fwait aad inc lret ret ljmp xor insl mov cmpsl push addb or loopne jle shlb add pop cmpsb mov in push rolb fcoms jbe inc (bad) jne push sbb faddl sbb add or cld jl lods into fsts xor mov and mov pusha inc loop aam loop dec push pop mov daa and int3 (bad) or mov mov faddl add pop (bad) aaa jb iret jne outsl push pop cmp out jne adc mov sbbl cs add jne ss mov mov nopl aad mov mov push push sub sbb adc or lcall mov push dec pop pop inc in and cmp aam addr16 mov mov mov mov adc scas outsb das xor mov adc jnp sub jnp cmp jae lea loopne popa push lret lea xorl pop (bad) test outsl (bad) out and call mov inc shrl lret xchg mov or nop pop pushf pop add mov adc repnz push test hlt cli inc mov hlt sbb push (bad) insl mov mov jne (bad) adc out adc std mov cli pusha cmc imul out or dec push mov adc mov insl or cmp in or sub aas les dec add add loopne mov or lea fimul xorb in mov les add add dec sbb fsubrs inc jns jl cmpsb xchg into bound push pop push and test xchg bound mov push ljmp outsl push sbb shlb jno sub in dec adc adc in pop xor ja mov lods jb arpl fcoms jecxz sbbb cmp inc add jle pop iret add fisubrl mov jo push leave push adc xor rolb rcll add add or or fs jno lods das cli add mov jo or fisttpll jmp lea in xor pop inc add add sbb push dec pushf sbb push sbb mov inc inc in inc sbb testl pop pop shrb mov mov movsb ljmp inc xor smsw xor push add pop mov in push add or push idivb sbb mov xchg jns add rorl ficompl pop jle or jmp dec cmp imul clc lret and loopne pop test jmp bound call or shrb loopne sbb pop leave js mov popf mov cs rcll push popa push jl into add cwtl call pop je pop fstl fistpll xor popf into add xchg dec (bad) jge cmp push and lock dec rcll bound ficompl adc out jae cmp in lds add xor add jb test pop mov dec inc pushf and cmp sbb sbb movsb cmp adc jno sub add mov lcall lea push fild add inc imul adc add out mov cmp cmp xor and sbb ret pop rclb cld add loop pop pushf (bad) ss jmp mov cmp cmp push shrl add push pop insl addr16 pushf cmp nop or sbb add je arpl call lods add or inc or xor outsb sbb push add call adcb negb ret ret xchg push and cmp mov sbb xor jbe mov or popf inc push adc popf and adc adc nop or sub xchg adc cmp mov xor adc inc or mov adc sbb and loop xor (bad) mov adc sub addb pop bound pop scas pop jmp inc push sub add sub outsl add ret cmp adc mov and mov rorb in dec pop (bad) push pop fsubrl icebp fistpll dec jae cmp je int3 cmp jge mov sbb jne icebp push iret unpcklps fwait inc shll testb adc inc imul or push inc addr16 pop push mov jg mov ja push jbe pushf and cwtl sub jbe jl pop mov repz push jne cmpsl sbb add sbbb or lret dec inc mov (bad) pop sbb cmp out pop or add clc sbbb add mov push loopne xor xchg je xor fs popa xchg pushf adc dec sub jmp sub dec dec sub pop sbb add test adc push fnop fwait dec inc inc shll fbld or and and fidiv aas pop (bad) dec sub addl sub mov test mov sbb cmp pop push pushf and cmp jmp mov scas inc mov add test mov add inc push ss mov pop xor adc sbb roll push les jne aam push and std jo dec push dec sbb (bad) nop cmp xchg adc adc les (bad) les inc out pop (bad) add mov ljmp add (bad) jo pop mov je lods fiaddl andl (bad) jo pop adc addb xchg dec or pop push or sbb fnsave xor mov pushf call test cmp adc mov incl call cld add and (bad) xor jo mov mov push cld add sbb jb dec sarl sbb stos outsb add push adcl mov inc pop shlb (bad) adc mov jne push test mov fcomps aam xlat inc je push or jb,pt add mov decb push xor add sti push jns mov add loope adc mov mov jle adc add push test dec ficompl and jmp mov mov push shl mov sbb (bad) jle jl lea mov mov sub mov xchg inc sub call pop push xchg std jle lods xor in jbe in xor fistpll out add (bad) mov and mov cmp fildl sub cmp mov sbb add push cmp mov (bad) xor mov push (bad) sbb mov rorl aas xor mov mul xor data16 in and cli pop in or cmpw je inc inc sbb test mov and inc mov lahf std push cmp dec pushl add fdivl mov mov lret pop pop cltd aam sub je inc cmp ja push fcomps or xor fdivrl cmp push inc cmp and dec or (bad) rcrb jb hlt adc sbb js inc inc pop in cmp jb mov mov pop xchg push xchg imul xchg jne mov inc dec pusha sbb jb (bad) mov pusha faddl scas fcmovnb mov dec fcoms inc inc data16 mov mov outsl or jge pop cmp mov les les fst mov add test and repz adc push and ret jbe xor sbb and add sub push test lds jge inc (bad) jno into ficoml push sbb les popa fistp add mov jbe pop enter movsb xchg jo bound inc cs add and fsubl push mov jo mov ret sub mov sbb pusha lods add lods mov stos test lods movl or fwait sti rcrl add push sub (bad) je xchg mov mov lods mov add lock xchg mov lods mov sahf imul cmpsb mov adc enter mov cs dec push push mov mov mov cmp mov test loop shlb push cmpl xor pusha dec xchg (bad) adc fnstcw or sbb sbb in fsubr add adc cmp mov pop inc adc sbb xor ljmp ficoml aad imul js int js aaa push adc pop lcall add mov xchg stc sar jno inc or inc shr cmp das in fdivrp jne jbe pop sbb inc inc xchg rcl ljmp in jmp add xor add push mov xor and pop xor add cwtl aad call sbbl or sbb xor ret jmp js mov add sbb mov sub inc test gs test (bad) jp test lock ret loopne push loope (bad) xor sahf adc sbb sub xor std cmp xchg add int push add (bad) cmp jg addr16 test inc mov inc add iret ds push sbb xor jno inc xor push pop jb pop inc inc inc js mulb in jle or xchg pushl inc pop (bad) and xor (bad) xchg int3 sub or or test adc jl mov push and or push test call stos test jo or gs arpl inc (bad) dec add push sbb movsb xor cwtl rcrb sbb mov sub (bad) lods popf ja pop sqrtps dec enter push test and fdivr rcr sub jle jo dec rcr pushl jne inc in in faddl add add clc add aaa add popa pusha shlb jae push (bad) jno push cwtl dec call fs xchg xchg inc push pop (bad) pop push inc dec pop xor adc data16 xchg sbb add leave add mov mov out sub sbb hlt shr cmp fdivrs mov inc and cmp je push mov add or jbe pushf outsb xor out xor fdivrs cltd mov adc les cmpsb jbe stos adc and ljmp ret in mov loope or or dec add xchg stos mov add sarb sahf mov sti push je pop add xor clc jl mov repnz inc push stc push adc xor mov or inc mov mov stos xor jne and inc inc scas pusha mov jne xchg addr16 dec cmp sub add cmpsb in push inc adc sbb xor inc mov add adc cmp add jge push lock sbb dec mov imul into je (bad) push push adc sbb out inc stos ds in cli shl adc dec mov (bad) adc xor xor jne inc pop testb ljmp mov push xor push mov mov test scas les push push addl xchg cmp lret pop jle dec jo dec pop (bad) add cmp movsl je push addb adc and mov (bad) pusha add mov dec cmpw test push adc push fsubl fsubs ret rcrb adc push jmp xchg dec nop inc clc xchg mov or inc sbb stos outsl inc adc idivl jmp pop rolb xor push sub cmp xchg jae mov loop jl test movsl enter cmp jae ja adc jmp push xchg test shr adc or push rcr cmp fsubs leave fcoms inc push mov (bad) jne movsl ret push dec outsl cwtl fimull mov movsb inc rorl loope pop shlb jne adc lret mov dec add pusha xchg pusha (bad) and cmpl jmp (bad) daa je jmp sbb lods nop sub mov roll inc int3 sbb mov cmp jle jmp pop je xchg adc cmpsb push cmp aaa xor add jns push fwait test mov add mov jp (bad) jno push pop inc xchg sbb lcall jns popa fistl dec add dec jmp mov ja jmp mov pushf sbb arpl mov addr16 adc ret jbe call add bound xor push test push inc or push ret gs lret xchg add lds mov xchg sbb mov mov in cmp mov fsubp ret scas leave xor pushl mov mov xor frstor xchg outsb adc insb push inc jg xor jecxz push fidivr ret mov jp ss mov xchg imul test xchg dec push or (bad) adc cmp push dec js and add push sbb clc xchg push xchg dec and sub cwtl outsb test icebp mov sbb inc pop add testb js notl in cmp fwait adc add sub mov test pop or out adc sbb divb icebp pop mov cmpl je jno cmp jl jmp adc push mov jl roll sarl push dec jb add mov (bad) pop fnop testl jbe (bad) xlat mov addr16 mov mov mov mov push push or lret push add ss mov and pop jmp fldt add outsb and xchg imul (bad) cmpsl jmp into incb or jmp xor sbb add sub mov rorl add adc mov lahf jbe orl mov arpl mov lret bound pop fs in pusha push xchg push dec clc push push and loopne add fwait push sub xchg mov mov fcmovnb sbb sbb cwtl fisttpll push sbb daa jl insb or sub mov cmp loop test in mov push repz aaa bound mov pusha pop aam mov push mov mov imul mov and and std or adc outsb lcall and inc add ss adc push fcomps (bad) sbb xchg mov loopne or cmp push mov xchg jmp sbb iret out jne pop pop mov xor data16 add rorb adc jae inc add or les mov jl jne adc dec or fsubr (bad) addr16 adc push test pop add adc mov jl pop leave inc pop mov arpl cmp arpl sbb adcl inc mov pusha and cmpb cmpb jmp es push sahf inc inc pop fbstp pusha pop xor int3 fsts mov adc mov mov mov leave jo lods cmp pop lods add faddl or sti (bad) push ja push add fild jne lea push int3 inc lock or sub in push push data16 out popf or loopne inc lods and testb pushf add ljmp fucomi call pusha ror add adc or insb dec movsl sub clc push lock ret mov daa jl cld outsb mov sub push out aam (bad) aaa mov inc mov mov mov pop inc jo adc (bad) push mov xchg sbb jne push aam add je sub xchg jne fsubs mov jp mov xor add jnp sbb je cwtl lds inc clc js push outsb ds or lret dec xor popf fimull (bad) push popf sub pop push lea (bad) insl icebp xchg xor int3 mov xor roll mov sbb and shrb int3 sub int3 mov adc jge ja add mov adc sbbb xor (bad) rorb test inc add enter iret sbb xchg pop sbb test les and test xor add mov jp movsb (bad) (bad) aaa hlt pop hlt dec sub jbe outsb mov xor js test dec cmp mov clc je push inc push mov cmp add pop mov cltd dec mov dec add jge mov and cmpb inc shl or mulb push in lcall mov mov (bad) and and adc mov repnz mov mov xchg pop fmuls icebp fisubl pop mov add call pop icebp movsl cmp in call jmp push sbb push add iret mov push or (bad) push pop xchg leave jl xor fwait xor test lret and scas xchg jo xor movsb loop dec loopne clc jge dec in sti add push mov add mov sub sbb xor inc ljmp lock aad daa and aam in add js dec push adc call (bad) test sub mov push or scas stos cmp movsl test push or mov lock push adc in push mov cs mov mov in push das insl shrl or inc mov out pop enter into sub ja jne test ret rolb add mov or adc sbb or pop loopne or lock jg lds mov push in push push call movsl sbb in enter dec fstpl ss sarl push and jmp xor test je mov mov lock push (bad) rcrb ljmp fistl add mov jb test add lea mov in inc adc (bad) adc push push les pop adc ret xor dec in ret mov insb xchg add pop push jg adc cmp xor push jne int3 adc mov je mov (bad) cmp (bad) or cmp aaa or pop cmp jne insl std ds push mov xlat xor mov faddl sarb mov pusha call adc lret or add cltd adc mull daa rcrb mov mov mov insb inc cmp mov push dec mov out mov outsb les fldcw setbe and leave jbe ret push or std add sahf add fsubr aas dec sub jmp mov les sbb imul inc out or cmp sub push mov mov sub arpl out pop imul test (bad) fcomi push adc ja or in adc xchg jl add sti fbstp adc (bad) jg insb fcomps aaa push mov and nop add icebp mov push insl inc pop je mov sbb bound cmp add jmp and pushf pop cmp mov (bad) lods cltd sub lods mov sti popf inc cwtl fsubrl test adc push cmp divb into mov and nop add inc xor xor sti sbb lret lods push mov jle (bad) jg or neg sbb push and mov mov and lods insb jne,pt sbb add ret or inc popf repnz inc push mov je dec pusha jae xlat call mov sub push and (bad) in push pop scas and fs mov sbb lret inc sarb add test (bad) jno inc jne pusha pop mov sub push pop inc pop push das push jge jle rorl pop and hlt pop aad int3 mov sub jle pushf call and push jg sbb in (bad) cmp mov adc mov mov iret mov jge add fld inc or jecxz pop testl shl mov push (bad) or rclb rolb push xlat adc in sbb inc dec imul push cmp jne pop outsb pop outsl cmovl inc out out push sbb fwait xchg cli adc add or (bad) push mov push push roll adcl roll xchg mov mov add insl or outsl dec cli add sub mov clc xchg adc pop stc or les sub push xlat push (bad) cmp (bad) outsb add mov add mov mov sub xor cmp push mov push movl mov pop mov mov outsl mov mov shr rcll and out pusha jb cmp mov lods pmaxub mov inc data16 mov inc jbe pop sbb push push inc jnp mov fdivr mov loopne add div test je movl pop int3 rcr pop xor shll jnp sbb pop sub adc mov push push ljmp push (bad) std jne mov push addb dec add add fcoml call sub adc or lret mov pop or or or jecxz pop int3 popf or in loope pop jecxz dec fadd loope pop or jp inc mov aad orl sub lods add pop push nop orl mov xchg mov xchg or sbb je xor jae xor xor or out imul sbb add mov insl pop pop ret mov mov push pop sahf adc push adc pop insb movl inc add mov xchg dec adc mov cmp add or adc fmuls mov insl dec xor test or negl repz ret pop and lds xor add subl in ljmp push sti or sbb push movsl movsb into add cmpsl insb lcall mov cmpsb xlat jne mov out sbb jecxz js mov sahf aad push cmp lahf dec subl add inc rolb lock jb cmpsl arpl xor push sar push arpl repnz insb pop cltd cmp lret add sub cli add inc xchg push ret xchg cmp inc enter mov aas inc sbb ret add std cmp jge mov fisubr xor or pop mov jne cmp jl add xchg daa mov inc sbb loop jl popf jg push sbb mov push add inc out cld (bad) (bad) pop cmp mov shl mov jp dec je and ds dec add sbb pusha popa push mov push loop imul fcomps rorl xor stos fisttp test mul shr stc dec dec sub push in fldt inc xor sub push push cmovle mov cmp push push dec xlat in mov xchg fwait push das sbb xor or cmp cmpsl pop lcall push cmp fistpll cmp inc sbb dec add mov mov das jle adc fiaddl mov or mov inc leave sbb xchg pop popa cli incb mov out push je mov outsb jmp cmp je add je pop push add inc sub mov dec lret pop dec adc push lahf call jge or or and mov testb sub add xor xchg and add cs or xor test mov xchg mov sub mov insb cmp add jnp pop xor jae inc add lock dec addl jp cmpsl cmp xor or les leave jne mov inc sbb mov sarb scas push imul outsb and dec cld push mov or enter dec shll outsl lock mov add or dec or insb sbb leave enter inc movsl pop cmpsl flds mov iret push add into std ljmp sub xor add and sti rclb ss inc sub push call loopne xorl loope mov ret in sbb cmp adc adc or cmp test pop cltd pop mov fs or jmp sbb or jbe xor mov call pusha inc nop iret xor fwait pop jmp xchg push push (bad) into mov sti std arpl add cmp jne fdivrs in push sub pop adc mov loopne insl aas es aad fstpt or sub clc outsl add mov repnz mov and rep lock stc pop addl cmp or sub shr pop or (bad) jo xor or mov mov cmp push cwtl pop adc sahf jb hlt cmp xor call scas test add sbb add sbb stc push adc sub pop mov adc ja ret cs fwait (bad) das push pop mov adc add loop mov lret inc mov or movsl sahf push rep aaa call add mov jno repnz (bad) mov js adc mov mov xor pop sbb (bad) dec insl nop push mov push mov pop cli into cmp ljmp je add js push add ss inc push xchg mov daa sub add insb imul cmp mov pop dec sub cmp repz mov jbe inc xor aaa push push adc insl sbb dec pop and pop ret pop push pop sbb and dec inc roll jbe jbe xor cmp mov adc add fnstenv cmp and mov jp mov ljmp mov xchg jb mov (bad) flds push insb mov mov ret dec je jo pop pop scas push xchg or jmp aaa dec sar ret xchg mov lods mov daa mov ja mov cmpsl xor adc add push into ret fs aad insl popa imul push and jl xlat fbstp rorb jl sbb sbb lods adc sub decb sub arpl push fs and aam mulb (bad) sar adc and ficom push jle jb xchg scas leave dec inc shl jmp mov lea dec inc pop lea push inc rcrb cmp mov rcrb ret mov push push xchg cli ret sbb das ljmp cmpsb push lds call and xchg shll loope mov mov sbb push std dec insb adc mov dec pop mov mov out push pop mov mov mov cli or jb mov jp and xor pop enter dec jae es inc push sub sub mov neg ja mov lds sub sbb or jb adc dec jne sub xor cmc pop push add les push or xor dec stc mull mov cmp testl add and xchg mov in aaa pop insb jg sub mov xor adc dec and adc mov inc test mov out inc fisttp lret jmp push jge or cmc push cwtl fdivrs fldenv je (bad) jo add adc rorb xor and les dec xor (bad) mov adc xchg (bad) mov js xor in lret mov shrb jnp mov jle push punpcklbw mov call loop daa push addl jg (bad) (bad) in push push jb and fidiv ret add pop sarb dec cmp (bad) loope pop test mov dec cmp ret push xor mov or rcr daa lock ja clc outsb jo mov mov xchg adc pop rolb fiaddl cwtl inc scas cs gs push mov dec inc sub sub mov rcll jmp and pop insb adc stos xchg sbbl dec sbb pusha scas fcos test loop push mov cmp adc inc neg mov xlat jmp adc mov stos pop xor ret xor addb out or leave mov js insl loop mov jmp mov insb ja stc cmp shrl js clc ret inc pop or jo pop cmp cmp out xchg add rolb dec inc ja (bad) pop (bad) jo inc mov add (bad) mov dec jne pop cmpsb (bad) mov je push ja inc add sahf jae mov lods mov mov dec jle (bad) dec adc outsb test mov mov (bad) xchg out sub test cmp add icebp push and loope push (bad) std mov out fldenv cmp add fstpl dec mov sti lcall dec aaa xchg and stos aad push aaa repnz dec xchg sub out cmpsb fisubrl lods inc and stos push xlat push fwait cmc loopne jne jne ficoml out add pop pop adc pop loope mov (bad) (bad) inc daa insb outsl ja inc test mov jb cmp ret mov aas clc xchg xchg js scas add dec jbe sub add lods outsb sbb mov (bad) out pop mov lea dec mov push loopne aas fcoms jb rcll push insb xor jbe add cltd test adc (bad) cmp testb push cmp or xchg in lea inc add (bad) adc add or adc jne or xor cmp sub push or lret jb add fisttpll fcmovnb cmp jle cmp mov ljmp or adc fcoms inc mov mov cmp jbe mov or cld mov push xchg fldt lds cmpsb (bad) jne or mov mov pop (bad) movsl mov add rclb sbb dec add jp mov xor fisttpl ret movsl test mov or push out xchg mov pop je je jne enter dec mov aam jge mov add pop (bad) hlt xchg adc adc pop sub pop rcrl or xchg (bad) mov dec jo sahf pushf lea lcall mov ljmp sahf addl sbb test clc sti fistpl sbb mov enter adc sar xor add pop cwtl xor sub cwtl cmp jo bound jne nopl or mov pusha pop test dec bound add (bad) mov or ret push sbb pop lods loope pop push cltd sbb and rolb movsb push test add mov aaa pusha lss add sub xchg rolb sub adc and sub xchg jne adc pop sarb mov push push cmp sbb out mov aas cmp sbb fs leave mov pop dec shld mov or jbe dec inc mov or inc fmuls pusha arpl push jg addl sti sahf jle push or xor das push cmp push rcrl fwait sub push add lahf xor mov inc cmp pop add mov sbb and inc fisttpl add sub and cmpl fimull add push sbb stos adc jae,pn cld outsb push add je sysexit xor cmp inc adc es xor lcall inc push aaa aad aaa push mov aas dec sub js out pop push push sbb cmp push in (bad) xor sub xchg stc inc push push push sub pop ja test les loope fcoms xor fnsave ja jmp xor mov and xor cmpsb cmp fistl mov sub imul inc xorb xor xor push fsubr into push sbb inc jae mov fsubrs dec inc sub mov sub in cmp mov inc push outsb aad jae jle cmpsb popa adc addl movsl dec scas orl dec xchg aad mov add out or inc xor adc mov aaa mov fsubr enter add sbb negl mov add sbb call out add out sub aas lret lods into (bad) sub lea enter push inc xor (bad) fnsave pop pop and sahf cmp mov push or dec push inc xlat sahf sub test push enter inc pop adc fcmovne inc outsl cmc dec in and sub cli popf push cmp cmp mov dec repz (bad) popa jb mov mov not jecxz sub roll fidivrl in inc mov stos negl mov int3 dec sub adc aam jb insb hlt popa push scas jo ds test (bad) dec sub inc cmp jne cwtl jae (bad) imul inc sbb xchg pop sub dec push jg add imul cmpsl rolb xor out scas mov xor aas dec ret (bad) data16 lret (bad) or cmp movsb jne push loope outsb mov lock (bad) repnz mov xor ficoml dec sbb sub and stos scas aad cmp loope in add push inc aad pop lods mov rclb mov (bad) rorb and outsl sub or sub dec push or sbb mov rolb inc sbb and mov xor cltd ds dec pushf xchg inc sbb and shrb sub pop insl mov push mov cmc jg (bad) mov ja dec push cmp imul pop loop je push sbb cmp jns add pop mov hlt push pop out (bad) in push (bad) jge pop rolb add out test test sub jp ret jae push cmp mov out loope dec cmpsl push sub dec insb pop jae sahf mov or popa fs sub (bad) or sub cmp sub or rcrl shrl add addr16 sub xor loop shll cmp (bad) xor adc mov in (bad) or push lea inc adc or cmp dec dec push movl sub mov fadds add push push popa shrb loope aam inc enter cmp jns lea jae divb mov in or sub incb sub test clc and adc inc stos mov scas push rcl inc inc mov clc les or sub inc ret (bad) fstpt mov cmp insl mov and mov dec bnd loopne cmc js pop shlb or popa mov rol or jae sahf adc pop mov (bad) out (bad) std (bad) lret mov rcrl jnp adc lret cltd push ret pop in and mov dec sub and aaa (bad) into add xor jne ret outsb push mov mov cld mov sbb xchg mov jmp and (bad) js sbb lcall and (bad) jne push jbe jg and push push push inc lea mov sub clc jl sub sbb add roll fstl cmp test inc or push sbb dec inc loopne mov insl mov jl push xchg sub pop inc shl mov sahf loopne xor add dec and jnp lret mov (bad) out mov xor sub mov dec pop push adc or sbb inc shll sarl push das push loop mov adc dec mov sbb inc xor jl jns jp sbb pusha jae fsubrs push mov pop adc jae iret mov fistl dec push push and fmul pop mov mov mov or xor fsubrl nop dec faddl mov flds push push cmp inc sub xchg sbb repnz dec add xlat push xchg mov add dec dec dec leave (bad) fidiv and cmp sub mov mov push mov pop cmp xor fnstenv mov (bad) inc push lea jns jo and inc inc sbb and cmp rcrl jnp xor or mov outsb add in add lods inc inc das pop mov mov push test enter mov xor adc fcomps xor add mov pop pushf mov mov scas push mov mov dec and mov mov dec (bad) shll push xchg pusha xchg push aam mov cmpsb scas std xor cmc sbb push push pop cmpsl ja and sub cld insl adc dec pop sbb frstor and mov aaa dec movl add inc int (bad) jl xchg sbb sub ljmp mov xchg sbb (bad) jbe and in nop mov push adc push and mov push sub pop enter cmp jmp aas int3 mov dec xor jl push int js pushf (bad) je mov bndldx sub sub mov inc outsb out push push data16 push or or lds mov ds test push or pushf mov push inc dec push sbb mov fadds dec add mov jb faddl dec mov push ret xchg lret pop les leave xchg aad and add jle pop dec adc sbb in jae sub push lahf rcll jle xor rol add aas test out addr16 scas sbb lods pop ret imul cmc push push cmp mov insl ret jb mov jl pop sub neg shl aam push cwtl aaa or cmp icebp add repnz cmp nop hlt cmc div cmp nop inc clc stc cli in inc push sti cld std aam push cmp incl dec sub lret setl add adc dec jne dec mov in div icebp cmp div jmp pop mov pop and or jne or fstl inc inc das std add out es adcb ljmp add test lea out mov or mov add faddp faddp sbbb mov fwait jmp mov sbb (bad) add fucomip (bad) xor data16 push xor dec je or mov sub iret push mov and jle inc mov add jne push mov jge mov adc mov sti jae mov and out dec lcall ret (bad) call sahf bnd push lock inc cmpsl repnz push out (bad) (bad) sti push or mov or scas sub push mov jnp hlt mov adc inc outsl or adc mov jg into pop shr push xrelease pop pop popf nop pop imul inc jmp popa mov cwtl lock sbb mov std sbbb rclb xchg mov cmpsl jecxz adc or sub xchg pop xlat mov movsb mov add jnp lods xchg mov sbb adc push add das sahf mov hlt mov sbb sub enter jle test mov (bad) mov shl xchg mov push jbe cmp mov mov push xchg xor or cmp enter jmp xchg leave adc lret (bad) push mov mov (bad) outsl nop add cmp jge or sbb mov pop xchg xchg js add or aaa sbb push push xchg push sub repz jle add cmp jl xchg push cmpps ret mov push or (bad) in orl cmpsl fsubs or ja aad faddl cmpsb add cmp ja cld xchg cli pop jmp lea rorl ja sahf popa add loopne adc push cmc (bad) test cs sti les mov enter jle dec inc inc mov xchg push test fsub adc aas xchg enter jo or ret lahf repz adc call inc aas shll popf (bad) push add fstps insl (bad) shl cmp (bad) sbb inc mov lret cs mov sahf (bad) sbb sahf lret in ret push ret (bad) sahf push loop adc fisttp and inc push jge inc (bad) leave dec lea push stos add and pop sbb adc dec pushl lods jmp dec or adc in lock or mov mov sbb test adc sbb leave mov dec add lods std inc arpl cmpw xor sbb inc inc inc mov mov test orb adcb push push add out (bad) adc inc in sarl rcr cmp std add inc mov inc je sub add mov mov pop or ja lea orl cmp add pop jnp add jl mov fldt mov cltd jns fcom sti cmp jl push sbb les adc les rcrb dec xor shrb mov sarl adc ja inc mov adc mov sti mov mov adc dec mov or scas add out out or sbb adc mov push (bad) test hlt cmp jb mov or mov push mov rolb fldz int aaa dec scas add add enter sub movsl imul int3 push loope das dec cmpsl ljmp push cmp cmp xchg sub push dec sbb scas sub aam insb (bad) das add test cmp nop insl sub xchg or mov popf mov fisub and mov add cmp jb jne mov ret add ja inc adc imul adc jb jmp mov shl mov and mov jmp cwtl push seto mov pop addr16 xchg loop add arpl sub adc push mov jbe shlb xor adc inc sub addr16 cld into sbb inc fimull mov push dec jg inc cmp adc mov mov adc mov xchg pop mov les xchg cmp add cld movl lds xor jl pop cmp jg xchg and mov inc sbb xor jl jo mov adc and pop cld mov movl or sbb jp sti mov scas inc lea pop add adc daa adc lods inc or mov inc add add stos mov lods push imul xorl mov jne insw imul (bad) mulb (bad) or adc out add mov mov std xor and lods pop popf fwait sarb xor inc adc je sbb dec cld dec or aas mov inc xchg repz cmp outsl xor cmp fsubr sub or out fsubrs testl test mov fstl pop out pop pop hlt test nop jge xor jmp scas add insl in and mov push sub push mov cs data16 add shr (bad) dec arpl jne aaa push mov sub js mov scas add dec (bad) leave je pop push dec or mov push sub add xor jne pop pop lea push mov divl js loop cltd or add cs adc sub dec mov and loopne mov jbe jne dec jl rorb inc adc shrl cmp mov mov pushw add dec les mov out mov mov xchg mov rorb inc es mov jl mov ja pop pop lea jl dec mov sbb (bad) je cmp jge cmp loopne add pop pop mov aad (bad) frstor pop xorl or jnp or mov mov cmp clts mov stos stos lds add psubw outsl ds pop loope xor fcompl push mov jg push fs je ljmp sub or jle lea xchg cmp sbb (bad) mov mov xchg pop pop pusha xor adc test jle aad sbbb movaps xor dec cld jle xchg rcrb enter pop and cmp add add jge arpl or mov mov mov mov xor or xchg aad lds xchg dec sbb (bad) nop lret mov insb mov adc push sub inc lahf xor inc pop push xorb arpl leave mov add mov push inc cmp gs push js sbb dec mov jp cmp ja jge cmp inc push push and arpl push lock aaa sbb mov addr16 push lahf jle xchg test mov mov sbb mov cmpl pusha pop (bad) js pop adc aad or adc dec iret icebp or aaa lock mov fs into ret rcrb or dec mov pop add mov xchg fcmovnbe roll push adc out je fmul mov inc pusha out push popa sahf sbb popf sbb dec cli push jle ret int3 (bad) std div stc (bad) add cmc repnz mov cmc add aad cli or add cmp mov dec and nop mov xor mov xchg mov loopne jle ds and pop adc jp sub addb inc ret jecxz pavgw mov mov imul out aaa and lods es pop cli jmp add pop test add loope mov sbb fwait or pushf xor push fimul addl or push xor sarl mov jo cmpsb test mov mov or leave je inc (bad) rcll das nop push subl mov inc sbb nop mov mov cmp sub dec mov mov xchg add pop icebp in fadds iret adc lcall testb popf push sbb fwait out mov int jno mov out adc add cwtl fidivr popf push mov loopne inc aam scas inc sub mov cmpsb pop fs cwtl lret pop daa add fsubrl lret sub outsb lods sub test ds insb jo imul push push idivb lret or pusha scas push mov mov cmp mov stos xor adc jmp push xchg dec cmp sahf jae fistp lods jmp mov shr push cltd test sbb clc mov jp lahf push (bad) lahf mov mov dec pop test mov sbb les adc nop pop flds dec mov mov enter loopne push insl mov push xchg push lock int mov pusha shlb add rclb (bad) nop in adc mov inc inc or out add push add jmp pop cmp insl add mov int3 lods inc (bad) mov sbb mov cmpl rcrb (bad) dec jne push sbb in cmc (bad) int sub cmp mov lahf mov xor pop dec and xlat pop setbe mov lret or fwait movb icebp and or shr shl dec xor cmc or jg shr pop pop push xchg popa andl (bad) dec leave pusha dec push xorl test inc mov add fisttp xor mov rolb mov or je clc cmp push fist mov mov or dec (bad) and lea add mov pop xchg sub sbb sub mov xchg fldenv stos arpl je sub add mov inc not xchg mov adc not push inc mov dec or xlat rolb movsb mov dec int3 pop lea in mov sbb dec mov shl add pop ret (bad) adc sbb mov push push and push inc mov mov push push push ficompl or dec cltd imul or popf inc jae jmp mov and dec add (bad) shrl dec xor cmp mov add orl les or pop in test sub nop out inc sub insb (bad) or (bad) pushf subb or dec and sub aaa sub jo lds das mov enter cs andb leave sti adc mov test dec cltd rcrb cmp sub mov sbbl sub inc sub pop cld fmuls decb ja jl mov aaa mov or rcll mov mov dec pop idivl mov mov sub mov inc stos dec loopne loope sub (bad) jae mov inc aaa adc or add and push and add xor push mov and addl lahf jae shrl lds mov test mov sti push cld pop lods test je fucom shld push jo pusha insl mov and sbb mov dec pop lea dec repz mov and test jns pop pop lahf xrelease jge inc and or (bad) jmp je jl in jb je pop add lea and jb fsts inc pop add pop enter mov loopne test or sti mov mov inc sub jnp or jae loope iret outsl pop (bad) sbb dec pop (bad) jb inc loope fmuls ret (bad) add lahf std push jl sub aaa sbb and iret adc xor adc mov ret or dec pop pop dec outsl arpl addr16 add xor and dec pop mov pop adc xor fdivp xchg sbb mov mov adc mov dec pop or pop jne pop rcl pop mov fist add push andl sti in mov ljmp (bad) ffreep inc lock mov adc stos call inc sbb add int mov lods movsb and das mov mov cmp ret inc dec int3 push stos dec mov int add push push dec inc add outsl push dec das push mov dec jbe and push push cmp pop jbe cmp mov cmp lret mov in lahf xor int lret mov or fstps sub push mov loope mov mov sbb aaa dec outsl and arpl xchg int pop and add ljmp mov out pop add out inc add sub xor mov inc push (bad) lock push push (bad) xor add and sbb add neg inc sub adc push xor adc and add or and push dec adc push mov mov mov (bad) std in push sub inc sub cmp mov pop dec adc xchg cmpl dec mov or or pop jbe push sub adc mov aad push xor mov mov pop pusha (bad) xor shll jo or push dec js inc jb mov mov pusha xor jo pop add ljmp add mov jne cmp pop je icebp jne sub mov fadd cmp add ss popf test icebp mov push mov cmp mov repz lahf out push push (bad) icebp and aas mov mov cmp jne dec sub xchg jne cmp mov sub push add pushf sub fstp decl lea sub js push ret add adc mov mov mov (bad) pop or dec add (bad) jns fadds cli mov jecxz sub idiv fstp jg adc fildl dec sbb dec in sbb jne fstl push (bad) sbbl fndisi(8087 mov iret mov je adc cmp jge push dec or data16 and fnstenv inc (bad) outsb mov inc xchg or mov xchg jmp mov nop cmp fucomi sbb push aam sbb cmp (bad) rcrb and cltd add rorl mov add dec push stos push jmp mov pop inc rolb xor add and cs or sub adc sbb add inc mov add inc add call popa push dec dec cmp add aad xor lret nop out sub enter sub scas andl addr16 pop popa loope mov lds pop sub adc lea in mov popa int hlt mov add push out xor push add outsl (bad) fcmovnb lea icebp inc dec mov je sbb mov je,pt mov lret (bad) fildl push xchg dec push and xchg push dec adc sub mov cmp lock je jmp or movnti or adc (bad) cmc test pop rcrb rorl ss sub movb rorb stos jne sbb icebp jae xlat out (bad) arpl and add xor jmp jbe mov push shl mov fiadd inc xor and sbb push enter rorb mov lret mov outsb jmp xchg and push cmp das fmull ret jno pushf and cmpps out mov clc shr pop mov cmp bound mov mov lea dec dec and (bad) je repnz sub sub sub sbb rorb push rorb mov or and add jo mov mov and mov and clc loop in insb and sti xchg and add shrb lods mov push sub cmp add push scas (bad) and or xor jecxz rcrb push xor mov push push fisttpl pop jl add push or xchg and roll outsl (bad) testb dec sub inc test mov jge xlat fisttpll inc je fisttpll push push sub and mov sar fstpl pop ret lea and pop hlt pop aad cmp fisttpl pop movl movb psubq mov and push inc notb and push pop push sub notb and jl sub sbb mov add (bad) mov je movl or inc add sbb xor mov dec cmp inc test in jbe jbe adc out sub dec stos cmp dec jl je andl fisubrl shll aad and adc or inc cmp dec cmp shll inc (bad) and adc ja mov xchg pop in cmc aam lret lds mov dec sub std mov in xchg mov pushf xor sti cltd mov add mov jl adc sub fimull push inc push push bound pop inc xor mov lret mov es addr16 mov xor push or xor pop mov jg and or in ret jge and xor xor push fist jl sbb (bad) and sub dec inc push aaa shr or sbb adc xchg push and loopne or sub das xor mov inc push jb mov add add pusha sbb lea cmpsl mov in xor shr sub out pop sub sti test jne add dec jnp add pop add add cmp call movl xor mov xchg pop movsl mov mov movsl popf xor xor inc xchg iret lcall jmp jp arpl ret jg fimull ficomp or jmp push mov sub xor pop jns jae mov (bad) mov jmp cmc push jb mov out cmp jbe sub mov mov fnop pop inc inc dec jne je jbe cmovns imul jmp push mov adc fstps aaa xor pop mov out add nopl jp loop jb andl jb and xchg test push xchg lods je inc inc test (bad) pushf or sub test (bad) fcoml rorb mov fcmovnu jae inc stos push or rolb adc dec mov sbb or sbb push fwait inc or mov rorl das cwtl add and pop add inc (bad) pop xchg in fnsetpm(287 jb push xchg xchg mov data16 cmc stc mov insl mov add inc pop inc mov push sub mov inc (bad) add push shll dec jae jecxz inc sub jbe cmp or pusha ja movsb xchg cmp inc fstl sub aaa mov out (bad) pop pop xchg pop ds das inc out adc imull adc pusha cmp push mov jmp mov or sbb and enter add cld inc aas movsb pop out mov mov or rorl mov add mov or (bad) pop int3 mov sub and gs add fldl mov push js dec (bad) je jo pusha pop push jnp add outsl inc (bad) in cmpsb imul imul ss push lea sarl mov hlt lods add (bad) or or mov xchg sub cmp mov and std jecxz ja call sbb neg imul enter sub sub inc adc push ds test out mov mov dec and ss test arpl cs fldcw mov push movsb pop in lcall cld add or ret sub cmpsb adc fldcw cld (bad) xor mov sbb sbb adc xor adc or add popa and fwait and or fwait scas dec add lcall pop mov inc add cs ret mov lret add adc imul push or pop gs mov adc jb and test mov adc aaa mov mov divb xor mov out out pushf jne dec je rep pop or ljmp out ret leave push pushl or pop adc dec inc mov jo sbb call cmp sub lea cmp clc or sbb pop jae mov outsl cmp jmp push add jb push mov pop mov test (bad) pop stos pop dec xlat aaa push inc je sar (bad) add sbbl pushl sub out orl pop jo fisttpll jmp xchg push fsubl or jge adc sub rolb add negl sub and call shr pop push sub jo jp push dec in sbb add std fimull sub pop hlt mov cmp add dec ret jo push mov das aam mov add add push pop fisubl test ret sub pop cwtl out mov mov out jecxz es cmp jl inc dec and les je pushl push sbb xchg loop add mov add cmpb mov les dec pop movl roll mov dec push movsb sub pop daa clc inc push inc xchg mov inc sbb jae pop or lahf sbb jmp es add add push (bad) jno out aam and jo sbb add das inc test shlb aas (bad) mov sbb dec insb mov test push mov inc arpl mov movsb sub dec jo pop daa sub adc test sbb mov pop arpl or adc mov inc jo jne adcl mov pop add xchg push adc push push dec lahf pop rol in lahf fisubr pop or push mov cmpl add add push lock or or add add dec movups mov or jge popf fisttp ficom and inc cmpl xor sbb test or jecxz jae sbb adc add (bad) (bad) test adc mov aad cmp push std add push sbb dec add push clc push fmull push (bad) jo inc in bound add cmp sub add or rcr gs or cmpsb dec popa sbb cmp sbb dec mov sbb test imul inc and dec xchg inc enter inc add mov add add enter add addl js jo (bad) xor push fist add dec push lods add je mov dec and jns inc push inc push inc pop push ret decl push xchg xor pop inc addr16 pop inc pop in dec (bad) jne in add cld add or and add pop inc ljmp outsb test inc add pop inc fdivrl jo mov and sbb testl scas or xor pop inc ficomp in mov mov push or mov dec dec dec cwtl dec mov (bad) dec or push cmp cld jbe aad (bad) xor xor xor sbb insl les cmp pop lahf leave pop sbb mov push xor imul int add pop add dec add rcrl lock mov mov cmp sub daa mov add dec flds add and adc xchg pop pop xchg in test cmp or or lcall or or loop or or in (bad) sub dec mov dec es or out add jg push adc pop adc jne adc dec sub and dec jae andl lcall (bad) movsl rclb lret and pop adc adc adc xor xor push and jae pop (bad) xor add lea sbb dec dec and leave or and call inc sbb (bad) cmp mov sbb (bad) mov sarl sbb add or sbb pusha push push inc cld xchg jne add add sub inc mov inc mov testb iret cmp xchg sbb sbb mov in push in jno repnz sub push rcrb sub adc dec aad in in rcrl mov xor fwait out loopne aam sub ja push data16 call adc or nop outsb jae dec jmp add ljmp jmp mov (bad) in cmp dec mov sbb and sahf cmp jge xchg xchg sub dec es lock xor fbld and cmovno imul and std repz jae leave std hlt hlt push add cmc jae xorl xor pop div ret test ja sbbl dec stc lock cli cli lods cmp mov das iret sub outsl cld mov ss mov sbb sbb or (bad) (bad) adc ret in stos jnp inc test sub or lahf rcll add push insl push xlat xorb test in adc shrl or enter hlt and clc and cld adc insb iret xchg sti out out dec dec popa popf dec outsb call test sub mov pop inc cs jmp jmp lea add popf cli mov das mov js out out jne sbbl add cli push cli repnz stc repz jbe repz sar inc dec push call cs sbb mov (bad) pop inc div outsb (bad) jne xor add jb cmp stc out clc ret rorb jne sbbl add addl and mov cmp add pop push mov inc and (bad) mov and mov loop icebp mul xchg imull and enter out dec in (bad) leave (bad) out inc testl (bad) mov imul ljmp mulb in (bad) in sub divb jb and shlb cmp mov pusha or sub (bad) mov fs (bad) repnz inc pop pusha cmp lcall cs mov cmpl and xor adc jmp xor jecxz jns popa scas stc xor pop or cli push cmp hlt and and mov and (bad) (bad) xchg xor xchg mov hlt decb inc xor (bad) cmc dec fldl insb inc out fwait add push aaa ret loope loope loope loope adc fadds dec enter repz lds and in enter push jns repz dec push inc das mov sbb repnz repnz mov jmp push das mov jp repnz rclb sub mov sbb lods pop pusha jns bnd in (bad) add inc loope mov jns mov adc imul dec xchg push and icebp push icebp and pop inc (bad) sub add jp push gs add jp lock pop pop and outsb pop sahf pop fmuls stos pop pop or jne jp xchg jne push lock xor mov pusha or push mov adc test sbb int ret jne (bad) fidiv push sub jae push push bound inc mov in pop inc jae sub int3 add adc stos add dec add test ret jnp mov inc fwait mov sbb dec sbbb jmp inc and out mov jne mov sub pop or push movsl and inc add add fistl sub (bad) adc fmuls sub pop (bad) dec push mov add sbb xor nopl dec scas or lret (bad) adc verr sub jae lea cltd popf das sub pop sbb leave (bad) scas add add std or inc or or je sub cld pop fldt mov pop add clc adc dec push inc sbb cmpl xor push push inc sti (bad) fnsave sbb inc pop cmpl mov mov or jle test xchg shll dec aaa add out ljmp add movsb mov add jle mov push lock jne rcrl loop and push ss push adc xchg ds adc arpl les (bad) cmp push mov pop jle and sub pop call or or sub test push fdivrs xor add or push shll cmp fstp (bad) fildl or sub or pushf add sbb adc test addb (bad) lock dec jge outsb mov fcoml adc sahf pop cmp or out sbb jae gs push and push xchg call or and push and push or jl loopne push flds jmp and adc pusha sub fisttpl push aam ljmp mov xor jnp mov adc inc cltd aas (bad) orb mov jo push (bad) cmp jbe push pop out add sbb pop arpl repnz dec out pop ljmp loopne scas push icebp mov or fwait test xchg (bad) sub jecxz ja stos clc ficoml mov add lock lock pop mov aaa push inc mov add inc mov addl mov add adc out and (bad) pop fs fcoms adc dec cmp push sbb and adc mov add push (bad) push mov dec (bad) les mov ds sub andl jne (bad) add (bad) mov add shrl sbb cld fsubs ret adc ljmp xor stos pop nop xchg mov cmp jne inc fldl or adc xor loope int pop inc loope pop in adc in jbe and jg or stc push stos adc cmp int3 push jle incb inc or pop sbb add int3 jne loopne pop adc popf mov dec and data16 pop lods add outsl push add add and in mov pop add jg jg frstor mov outsb push jbe jle sbb fildll jg jg jg jo mov out fild ret dec jne mov stos loop and sbb insl push gs and adc pop sub clc ret cltd mov sbb lret clts and clc xor cli push jmp call or jne data16 pop inc aad push xchg push push push sbb push or add add cmp add sub out add sub adc and push adc fnop and movsb sub push adc mov sarl or fsubrl test pop or adc add push sub dec ret popa jmp ss xchg jge jmp hlt andl bound or (bad) testb pusha ja out add lea adc inc inc jge or jns push inc inc inc push rcr xorl add mov and xchg adc push push xor xor mov insl pop rcr inc add dec inc cmp push std testl stos jmp neg add lock mov push inc xor adc enter push sbb jge adc and add mov jecxz movsl mov and adc insl or (bad) jmp mov cmp add aaa lock inc adc jl sbb push push daa aad repnz sbb inc mov dec inc jl cmp jb pop inc mov (bad) mov test and mov pushf inc cmp mov add sbb rcl mov clc sub es fnsave dec (bad) and pop and push rcrb mov dec (bad) repz adc mov mov add sbb sti loope pop jbe inc add jae mov jbe adc sbb adc lock cwtl xchg and xchg out xchg lods cltd push pushf sub or in jmp nop imul push lahf or mov mov mov inc mov inc pop enter bound mov outsl cmp popa into es pushl sbb adc mov rcr movups inc rcr insl outsb push dec add push xor and push sub (bad) add jbe push sub pop pop sbb cmp push fucomp and in xor push pop add loope call aaa dec push xor data16 mov or add push inc mov popf push loopne xchg out push push pop and add jmp adc loopne imul adc lahf gs cmc pop scas xor or in lds push dec fs or pushf nop or or adc dec jle aad inc out je lock mov jp inc js xchg push push sbb test cmp ds sub pop cmp sub push add sbb les addl adc or push and xor mov add dec push inc add nop cmpsb inc dec inc cmp xchg les and mov jecxz std push adc mov cwtl add and push inc ret icebp sti xor add add or xor push cmp add and jge call pop in insb xor andl vmwrite jns cwtl xchg pushf cwtl inc lods push or fist push add add aas pop movsb mov les sbb and push pop push push int3 daa (bad) stos (bad) push idivb jne cmp in dec jbe mov pop inc inc cmp adc adc scas adc push mov leave mov inc js xchg and mov fsubs inc or sub lds dec sbb jo ja ds dec add jl sbb or jb mov cmp push movsl (bad) jae sub aam sbb sbb mov test loopne lcall in mov ret add jl inc mov (bad) icebp inc ret push rcll or ss inc mov xchg mov ret inc sbb pop movsb in insb inc add push mov mov mov mov movb jb pop fldl jmp (bad) pop rorl jb lods add dec js mov into cmp aas push jo and push pop jbe outsb mov push lods fimull xchg lret add je mov adc adc and pop cs mov or test cmc adc ljmp jmp sbb xor push push lods dec sti les push push aam adc testb divl push cmp sub push or inc test dec lock adc add mov xchg push fs out inc fnstsw in mov loopne bound rcrb or xor push fs and xor pop stos sub fisttp cmp jb xchg ds scas aad cli cmp je push int3 jmp push ret and fdivrs push sub mov (bad) in bound inc or out aad sbb mov je sbb add adc idivl mov pusha adc and add mov push mov inc mov mov dec call add stc jl inc sub in out cs pop mov mov sub sub das mov add add add ss fnsave loopne loopne fsubrs es xor pusha int sbb call outsb add jo mov pop pop pusha inc and push aas adc clc ss (bad) jae xor aaa add (bad) push pop add cmpb out fwait mov iret xor test mov ficoml or or and sbb dec sarl add or sbb int3 and pop mov or (bad) cld je lea sbb inc sbb adc aam sub inc jbe sbb inc jg adc mov jne jge or je xchg xchg imul aam mov cmpl ss inc out push and and mov xchg je cmp call sbb cmpl xchg jbe or push sub sti aad enter adc inc cwtl addl mov cmovnp out cmp jnp (bad) push mov mov inc mov cmp jp or das popa rcl pop fdivl es (bad) cmpsl fsubrl loope sbb in dec and dec in (bad) push pop xchg sbb inc loopne mov xchg pop mov pop push mov mov or sti ja (bad) push ret jp ret pop mov push add call xor add mov jmp mov sub dec jne jl sbb push mov (bad) repnz adc lcall mov daa cmp mov inc xor inc jl sub js mov loopne xchg or sbb loopne lock mov les push dec mov add push cmp mov cli addl and lock out push outsl pop xlat lahf jmp add dec add and xor rcll roll imul xchg aam sbb in test rolb in inc adc pop ret and push aad jno ret int3 add test shlb add ds int3 (bad) adc add push add mov add lock ret (bad) ss call xor in test in out aas adc add int inc jmp rol pop cltd fs (bad) std cld sub mov je add mov or das dec fsubl mov outsb leave add add adc cs jle lock inc pop sbb sub data16 adc xor mov stos add dec sub mov mov inc and mov jp mov mov inc (bad) jg mov adc push lea and add adc inc roll inc arpl jl mov cmp ds shll add jb in (bad) mov movb pop mov mov add cmp ja out xchg or clc push push xchg inc data16 or cwtl insb push dec pop xorl push sub add jae adc ljmp and push add fiadd in mov mov arpl jns std pop ljmp adc adc add pop add and push daa lea mov jmp movb dec add jp sub (bad) divl orb pop and fildl pop roll cli adc adc and aam sbb iret mov cli pop xor pop aad lds (bad) cwtl mov mov mov clc je cmpl mov andb stc sbb lods dec mov movsb and shrb sbb or scas (bad) push mov and inc push inc jmp pop push adc mov mov push adc inc and les xchg push addl insl push sbb lock add xchg cmp pop add adc pop lods inc mov push jmp popa adc inc (bad) or fildl mov add aaa test mov les jp mov movb cmp lahf adc scas lods push and mov mov jne jge ss sub ret fisttpll enter mov mov xchg ja (bad) xor addl inc cmc arpl (bad) and je mov mov adc add mov add mov mov jae jbe scas outsb jge push iret dec pop mov test jle push or ljmp push test mov dec inc imul dec mov mov xchg jmp mov ret inc adc sub push jmp pop fidivrl lods sbb inc cmp jbe pop ret ret incl cmpb (bad) mov and add inc cli loope divl mov xchg movl push mov lods lea roll mov mov dec pop mov and out movsl aaa ret add negb aaa push jo sub mov (bad) loopne or jne mov push push xchg push mov (bad) push or jmp sub adc push pop (bad) xor push pop pop cld testb mov cli jle add pop dec xor or in (bad) push sti mov addr16 push jl add sbb pop adc (bad) sbb mov sti rep loopne fimull rclb xor pop adc jbe cld pop and test jbe adc rcll push mov test push ss call repz cmpsl fldl testb push fidivl mov dec xchg daa outsl or xor pop or or or sbb adc test adc jg mov inc jmp sbb dec xlat cmp (bad) sbb mov add sbb daa out mov mov mov push sti adc mov mov jmp push and and push pop leave lcall pop push aad xorw sub pop (bad) mov add sub mov and (bad) sti push aam cmp xchg inc int mov stos cmp jne or mov mov xchg pop cmp mov add or pop mov movsb jae cmp inc inc or insl sub pop sbb imul insb add rorb js lea cs (bad) adc xchg xor pop xchg pushl (bad) and arpl cmpl mov and test test sahf inc add inc adc or clc mov js push push call jl adc push or xchg sbb xorl cmpl inc mov pop cld push or call adc cmp add jmp cmovb test pop roll out pop or outsb aaa and jmp jl ss fisubr negb sbb sub or roll pop lds push xor mov ds xor bound sbb or push jo inc mov add push push cmc mov adc ja and das mov jo or adc cwtl push cmpxchg das adc sbb test mov add hlt or cmpsl push (bad) shrb lret jmp test mov inc push and loopne ficompl arpl sbb lret jne stos inc add sti inc lods mov mov fwait insl ja mov stos mov ret pop mov dec mov cmpsb and sbb add inc and pop add pop and adc subb add xor stos clc jne adc ja lock push out pop div pop jb lea mov mov adc pop pushf mov lods outsl sbb int3 jge xchg stos cmp ret or and mov and hlt cmp push cmp mov add jbe jp loop xor mov inc and push pusha mov or je dec sbb inc insl (bad) sub ds pusha mov lods cmp or xor repnz push hlt fwait js push inc push push mov movsl sbb add add xor push arpl ja add and test xor ficom (bad) inc clc pop mov clc mov or roll sbbb xor adcl push repz adc addr16 subl sbbl mov stc push fisttpl xchg and sbb icebp sbb ret and and fist sbb sbb inc negb mov pop loopne cmp ret xchg ffree pop adc adc ljmp mov sbb (bad) push jmp fmuls mov push cs push jae test lea lods and ret lods in mov lock or fsubl aam inc aad sub in sub das sub push adc mov inc sbb (bad) (bad) fistpl push jp inc int3 sub pop or push mov or xchg mov and mov push mov ror mov push pop aad (bad) decl loopne roll stc sub stos in lea pop adc jns and pushf ret add add enter rolb cmpsb pop lahf ret nop ret sahf pop pop sub adc rcrb mov mov inc and xorl adc scas dec call inc add dec ja add pusha aaa iret mov (bad) repnz andb pop stc movb dec add sbb or sbb push push mov xchg add add push sbbb xor imul and adc sub adc and xor out clc or add jo fmulp je mov add sbb sbb jo push adc ret aam jbe pop data16 add lods mov imul shr lds (bad) pop inc mov push add add xor ret or repnz push jne or add popa or jbe adc cmp jne adc adc cmc mov test mov ljmp ret scas testb add inc mov mov add dec xor pop add jle mov pop into adc mov jmp jnp insb jne jne push js addr16 mov and cmp and or test leave inc cltd mov bound xchg jp add inc add aaa or inc test jle std adc push mov call jb add xorl stos sbb add popa test pop daa xor (bad) out jae push scas clc call fldl and or addr16 inc and inc mov fcompl mov inc scas test daa (bad) sbb popf repnz inc fisttp fdivrl add push mov int3 scas es ja push ret pop mov inc sti mov jg and cmp jbe or out cmp (bad) stos loopne mov mov and sub push das pop mov bsf xchg pop sbb push stos enter pop jmp xor adc inc and sarl push mov sub xor insb aam scas insb insl call pop adc adc sub mov pushl mov push or adc xor sbb jp adc mov xor mov movsb inc or sbb xor sbb add mov mov mov push aad pop lret cmp fsubrs or add fimull sub (bad) jae add adc pop or xor (bad) cmp jne pusha or inc adc fiadd loop cmpsl pusha (bad) rclb jae or push out ja push test cli (bad) mov add cmp jge imul mov andl push popf sbb push inc add nop cmp jl pop cmp sbbl das push cld stos push push insb pop cmp pushf rorb dec cmp and ds (bad) jmp push cmp daa lcall jbe js adc call pop in loopne xchg adc mov test (bad) push inc dec add lods in sub jle push cmp add cmp ja shr push and and or mov push rolb in mov shrl pop inc xor dec int in pop gs andl xchg sti mov sbb cmp jmp pop lea mov aas fwait push aaa rclb cmp (bad) sbb inc push jmp xor pusha sub das adcb ret push or je push push push cmpsb pop das adc or flds cmc cmp and push jne decl sbb sub cmc xchg insb pop mov sti add dec adc fsubrl inc inc jae push jno repnz movl lcall add push lcall push lock xchg inc adc cmp pop mov fimull aaa or mov mov mov ret push inc dec adc mov ds or into mov insb aaa mov pop jo incl cmp je add jne pop stos adc or inc incl pop adc das insb pop test mov cmp push xchg repz jmp ret jecxz test fldenv addr16 rcrl aam out in inc inc and lods es xchg pusha lea cmp inc in or sbb (bad) sahf adc mov out out add leave jne lret std je mov or cmp dec mov or sub fdivrl lods and sbb xchg outsb inc stos xchg daa cmp fdiv sbb push leave sub pop add add sub or lcall adc sbb mov in mov push and jb ja dec icebp mov cmp ss cmp in loop adc jae mov out and out ss lea jge sbb das in cmpl (bad) push push inc dec mov mov xor add (bad) orl cmp pop xor add sub add pop add mov lds pop jmp inc fistp movsl push xor cmp or sub (bad) lods and mov cmp push sar inc push and or in dec mov jmp push (bad) push mov rcrb rcl stos lret pop adc sbbl and jmp add xor sub xchg mov inc jge fild jne add js mov shrb out lods xor or or push add sbb push push add vmovlps addr16 push pop push sbb add mov inc cmp mov or mov push mov add add or es cmp or jmp mov into dec sub rol mov or lea or sbbl clc jl xchg pop rcr adcb mov sti jnp lea (bad) and sti add lods andb test or add inc mov jl jmp mov xchg xor xor or push add je mov test subl or adc fadds clc add idivb add mov pop xor add push mov mov push jg loope dec inc pushf inc loopne sub fildl sub jl push in mov xor and addb aaa mov dec xorl or cmc push inc clc xchg cmc fs das inc push aas push fwait xor ds inc inc jmp fsubrl jmp sub or fndisi(8087 xlat pop daa movl jl mov (bad) fsubrl stos ds inc jmp fwait loopne movsb dec jae pop mov (bad) fidivr or xlat dec mov repnz mov adc push add out fldenv sbb add cmpl fisubrl push add mov lahf insb js fs ds push cmp inc adc int mov ficoml push pop adcl adc cmp jp inc push cmp pushf das adc in xchg inc sbb sbb jmp inc inc fucomp shlb fnop ljmp fiaddl sub add test lock add test sbb sub inc adc mov ja jmp test lock in not pop pusha pop pop pop mov mov jg cmp xchg sub nop or sbb mov add xor fnstsw add (bad) and adc sub and js add lock cmpsb fdivrs push push adc or dec (bad) shrl (bad) pop fimul jl push js mov pop fisttpl sub es mov out push inc test cs rorb sub pop rcl xor test adc adc jl pop adc push and lods call pop (bad) jmp push inc adc cwtl leave push movlps push push inc popa mov inc loop sub xor dec sbb jne push (bad) sub shrb pop dec jmp inc xorl xor mov (bad) fcoms (bad) (bad) inc or arpl or xlat pop test jl pop repnz andb or (bad) jecxz inc dec or popf add inc dec add cmp add xchg (bad) je loopne mov jb add xor inc mov negl mov and addb sub sbb jb rclb adc subb pop inc mov mov das mov sub lret cld shr iret imul xchg mov inc add push xchg mov push dec icebp pop inc lods stos mov or hlt jbe mov arpl push add test cs hlt lcall jne sar dec cmp leave aas pop mov or push inc (bad) rcrl mov test mov add shll pop mov andb sarl lea sbb ficom mov mov push fdivrs push mov out fsubrs mov xchg mov jne push add jecxz hlt loopne mov cmp sar sbb fdivp insb pop stos xchg fiadd xor test cmp je jp in add loop cmp imul dec adc jge add dec sti jl mov pop mov sbb jno inc sub scas cmp inc push into or dec jmp mul js mov test jmp mov and add sub adc mov fidiv inc inc mov jae cmpb test xor je sbb pop inc cmpsl or rorb stos and push and arpl mov or or mov mov (bad) xor pushf mov dec insb rcrl push loopne lret hlt dec push dec das inc loope mov punpckldq or mov pop xor in rcrl or ja jle pop sbb movsb mov add decb (bad) xchg or cmpb add out lds xorl gs or adc lds or (bad) cld cmp in je adc add insb cmp pop call mov mov inc sub add or aas and sahf push loopne call xor mov jne xor imul push xchg push stos cmpl xchg and or dec pop push addl mov lcall sub (bad) mov dec inc adc jbe push in jmp addl ds sar incl push int mov push bound push ret jno fnop or sarb mov imul sbb std cltd pop mov inc pop rclb clc or hlt push sti sub test stc push xor jns and adc cli fbstp stos adc sub push lock or icebp inc adc dec fildl push jp fwait cld push mov pop out iret std testl push push add sub or xchg test jne icebp loope xchg and scas lea push mov xchg or xchg (bad) jecxz hlt fs inc out mov inc mov mov test test dec inc push js test andb not and mov sub mov push push mov inc mov cmc xlat sub pop shr adc mov dec cld sub icebp out push mov jl pop adc xor push inc rcl test inc scas fldenv (bad) cmp mov sub ret inc xor lods mov jne pop sahf pop inc adc sbb arpl test fcoml es add pushf nop mov sbb dec mov add outsb mov or sub add je sbb xchg movsl test insl mov add adc inc adcl mov mov bound insl sti mov add lds dec dec or cmp jne inc pop adc ficompl incl sbb adc in (bad) pop add mov jmp sbb (bad) inc lret test dec aas cmp (bad) mov fidivl xor or rorb cld mov cmp std push dec add dec and inc js mov dec and pop xor imul add pushf push sbb dec or lahf rcrb inc cld js (bad) sbb dec lret pop dec dec out pop push xchg outsl push dec dec push dec and ja add push mov rorb inc xchg adc jae comiss mov dec add xor add push push cwtl clc cmp sub bswap mov and cmp push into cmovns mov cltd sbb push pop pop sbb inc sbb aam or or (bad) imul xor add cwtl clc pop and lcall push sbb jge into mov addl cmp imul lret pop dec mov mov insl test in cmp adc (bad) lcall fcom call call pop rorb mov (bad) jne jmp cs mov shrb xor inc popa into xchg sbb lock jl fs or ds jecxz adc in add add in sbb cli ljmp sbb xorl and ret (bad) iret jne cld ss pop adc pop cmp xor roll aad movsb (bad) dec inc pusha and jne inc add pop push push pop xor rcrb sub xor push insl sbb dec mov sub icebp pushf and sbb (bad) jle push js js dec decl pop cmp jge push pushf xchg out es cmp pop and add pop mov jge inc hlt decb jne mov sub mov mov scas and jne mov out mov and clc addr16 push icebp jp mov or jg ret mov lea xchg and push add inc mov and jnp mov cmp fist and stos mov push mov pushf movsl or repnz or rcl adc aam mov lea jne,pt cmp popa outsb dec cmp adc leave add add add jno mov sub pop je pop std sub movsb adc sti push aam sub mov stos inc pop jl js je mov fmuls mov add lock lret inc insb gs test ss lea push scas repnz mov mov push pop or adc inc andb (bad) aam or fadd or fildl ffreep jb or int mov adc pop pop clc add adc add add cmpsb movsl das pop push xchg xchg mov dec (bad) int fsubrs aad clc les add loopne add dec pop mov adc movapd (bad) stos loopne add out and pop add ret sbb dec add out push and adc push insb and stc fistl hlt pop and pop mov or lods popf call pop sub je push popf sbb stos es in jb negl notb push xor pop testl inc adc push jae cwtl repz (bad) jbe rcrb popf sbb js dec pop or or and mov adc mov or adc and aaa add in mov nop mov mov or mov dec mov add add imul arpl jo dec mov dec push fwait sbb sbb dec mov loopne cmp jns stos inc xor daa testl subb sub sbb jbe mov adc and cmp pop xor jge and push push push imul or xor or mov mov arpl (bad) mov sar pop xor or stos clc push jmp cmp insb and push adc jno addb push gs push inc lea push push jle inc (bad) es dec test adc stos aaa aam bound loopne mov pusha sub jbe mov inc adc cmp rcrb add cmpb add js or jno fistp andb aaa dec and shrb push and nop or jbe (bad) cli push xchg les stc jb out das jne inc jmp jb ret sub (bad) dec fmuls jb and add (bad) push mov mov dec jno push jns lock push or mov sub fstps cmp dec inc cld add call mov push add dec test add out add and xor xor enter add aam dec inc pop insl addl loopne fisubrl aad mov add push (bad) or jmp add hlt fisub add mov int3 shlb inc ss add mov les adc mov and or push sbb sub adc inc push jge dec mov pusha pushl mov add add or aaa shr pop dec orl call push je dec je mov inc leave sbb jmp mov idiv add push mov or test add xor loopne push rolb std add jnp ljmp pop jg inc mov push fcompl call jne cmp aam insb adc mov pop push dec jbe rol adc inc adc add adc or adc pop mov mov insl adc ljmp lret cli adc push adc pop or cmp jmp mov movsb je push push sbb rolb jl fs sbb mov fdivr or xor mov or sub and push in rcll dec sti movsl push push andl mov loop push push cwtl stos data16 test push and push hlt (bad) or fs add pop shll (bad) jge add pusha mov pushf jmp aad and sub movsl out pop repnz pusha mov fmull sub push loope aas mov dec loopne ja jne repz inc int3 addr16 outsl push int lea or cli push push push add adc les xchg lret add mov pop movsl xor test into movsl or bnd lea (bad) mov push push add pop lods ljmp nop or mov mov (bad) xor lahf loop (bad) inc add adc rolb xor cmp enter sbb adc push sub push lret (bad) mov in pop adc sub jno add leave xchg sbb sub jne or mov cltd xor (bad) sbb pop cwtl pop in lods mov add fmul pop sbb subl jge imul in push jns fstl xchg or dec mov mov or jbe mov pop and sub xchg mov out push sbb in mov sbb sbb pushf test adc mov jo mov cs daa push mov pop mov cmp (bad) (bad) mov push mov sbb push mov add add add mov imul mov adc xchg xchg adc push mov fistl push test sub adc int fsubr or imul idivb dec mov frstor pop sbb adc clc xor pushl stos and inc cmp push mov mov repz mov pop and adc adcl inc repz mov adc lret loop and push lcall push push cmpl pushl xor and pusha sbbl pop orl and sub or enter cmp inc cmpl or enter inc pop dec dec enter push push pop and orl push ss (bad) mov in dec (bad) je or mov in pushf mov movsb test sub push add add push hlt add inc or cmpsl mov sbb mov das fdivrs jle imul dec fldl pop (bad) mov les lret test enter pop enter mov in mov inc cmc cmp ds hlt mov sbb cmp test rcrl mov jne je mov mov call lret sbb xchg cmp xchg sub sbb dec cltd ljmp add jmp fmull call call mov sbb mov jp les pop dec pop jnp push or imul cmp adc and or aad and mov leave push jmp push add or mov jne nop jmp mov inc inc into push add insl sbb or dec aaa out mov add jmp mov pop pusha or mov pop icebp pop mov mov (bad) iret (bad) aas fs add lea shlb pop adc cmpsb and sti adc test or gs (bad) jnp nop xor push dec pusha fsubrs and push pop mov inc mov (bad) mov or or add or imul add mov inc faddl lea dec adc test sbb (bad) cmp or (bad) mov pop inc mov cmp gs ss push xor and mov cmp or mov pop cmpl inc (bad) push mov inc or inc and ss push adc pop ret in lods jg mov xchg sbb lcall xlat mov xchg je push pop dec aam adc jne (bad) int fsubrs sub jmp mov and and inc sub mov jmp and add add dec inc inc shlb pusha test mov push lsl std rcrl or pop (bad) cli adc addl jecxz inc sub inc and andb dec lret stos dec sub mov jns cltd inc lret std loop arpl mov and pop mov xchg leave adc cmp ret or je dec rolb jge add add xor mov or lods or leave pop adc mov push adc jns or push and or shrl fwait push mov xor loopne pop adc push (bad) jno testb and pop adc jb (bad) mov pop and jmp sbb mov pop pop xor es subl sbb js in add xor xor dec and sub pop (bad) pop leave xchg jl jecxz push adc cmp pop ret push mov xor dec ror mov insl jg aas hlt mov test pop push and sub adc and cwtl push mov xchg or fs adc pop inc inc or pop roll sbb fs dec pop mov jl lahf fisttp dec sbb cmp mov inc adc sbb and sub fucomi push push pusha push mov push pop add mov mov test out sub sbb add sbb je imul adc or mov dec sbb mov fdivs mov adc dec pop mov push mov ljmp push inc and lods dec and add jne push push mov jae scas add rcrb nop add jg or jle dec cld jg push mov push add adc stos and adc subb push stc mov push push enter cld mov pop or mov mov push mov and inc mov add loopne inc jl inc pop inc mov jnp jmp mov xor out idivb jno mov (bad) inc push popa push or push or fisubl aaa fsubrs jbe or mov adcl or inc pop pop pop pop pop and gs or addr16 xchg flds add (bad) pop insb inc iret or pop xchg lods add sub js sub cld mov insl or out mov in mov cmp in push ret mull pop adc sub addr16 and jg in fcmovnbe ljmp div das and je inc mul sub ja jb cmp je sub dec sub sbb (bad) enter or roll mov mov adc addr16 ret fbld lcall jne pop div loope push add addb pop imul push push (bad) in inc pop xor xor and fstps lods or push add cli mov mov ja and sbb cmp pop add jl add push push aam loop mov movsb jle add pop inc or mov push push in mov push ja test adc add mov inc jmp cmp jne addl add adc mov dec mov test and (bad) aaa int testb mov add inc add cmp adcb adc and cs js adc sub cs and mov inc bound mov lret ret test jo push jo movsbl pop pop or add popa cmp mov ja sbb leave cmp jae mov cmp or jbe push add loop mov lahf pop cmp andl push loope push scas pop mov push (bad) mov jne test insb inc mov ds je mov push push xor cmp push adc (bad) jbe popf insl sbb pushf or daa outsl dec mov and idivb add xchg pop xor add xchg (bad) test popa mov inc ret xor aam adc dec pusha add rclb jne push clc sarb enter pop ret pop push add mov je jns mov mov mov xchg xor in je mov je pop test cmp jb cmp ja add cmp or mov loopne jmp adcl jb divl rcrl adcb jne inc mov lods ret adc (bad) mov xor pusha inc pop notb adc jo outsl iret test push or fsubr in js ret shl push or inc mov lret xchg stc xor cmc (bad) push and add xor or loope lds or push mov mov pop les into lret inc cld push ss out shl fwait sbbl adc faddl aam xchg sub faddl aaa push std cld jmp add test jne pop sbb call stos add mov jmp jmp or shr inc mov mov nop lcall pop jo push or add mov test inc push jmp rclb push mov xor add fcomp fdivs shr insl outsl arpl (bad) ljmp dec or inc dec rol ljmp ret rclb mov sbb shl xchg push insb imul das cmp rcrb pop insb sub or cld xchg mov js out dec lahf jo push mov clc js fistl push push lcall inc push push xchg push dec jbe xor add push test adc sbb push cmp cmp adc adc mov pusha jnp or add je cmp test fimul or xor lahf inc notb sub push jne sbb add push mov hlt jnp or and and fwait inc dec enter ss jl inc rolb adc addb ret xor push aam dec and or mov pop popl in xor mov inc push push imul mov mov imul ja je xchg mov inc and inc jmp jmp insb adcl inc fs jne or imul jl or or pop pop imul je push scas inc pop push cmpsb mov pop das arpl and insl insl test pusha or icebp (bad) ja mov jmp adc mov mov add inc adc mov pop cmp jge cmp jle and decl push (bad) scas push mov dec aas mov lds adc rorb mov adc mov nop adcb scas or and pop cmp cmpsb clc rolb dec mov cmp mov pop ret sbb fadd sub je xor (bad) icebp notl dec push mov mov xor adc add cmovb mov xchg push jl sbb pop or cltd sub jns pop adc out sbb push hlt fiaddl push xchg push or mov sbb add mov cmpl mov outsl cmp or or sbb lea push ja lock pop mov fstpt movsl cld or pop jo or testb sub mov push test adc setns insl insb js cmpsl cmp ret xor pop inc xor mov negb (bad) (bad) testl pop adc adc and cs jnp xor (bad) (bad) nop in hlt ja imul push push lea out mov pop pop pop sbb pop xchg push sub mov or inc cmp aaa movsb outsb xor add (bad) adc (bad) xchg add rol fild jnp push mov mov cmpsb push inc mov fbstp pop lods or call xchg push cltd rcrl adc xchg jb sbb adc leave and add loopne push jmp cmp adc and mov push or cld inc xchg mov adc adc push push rcrl and mov lods repnz add test add inc movsb sub dec popf test dec dec inc jae cmp jecxz mov mov fwait sahf and mov and add adc call xchg mov push jnp and jae mov jne xor or jne and cmp pop mov mov pusha adc rcl enter jecxz cmpb mov stos in add shr sbb mov xchg push xchg xchg sub jnp jo jne dec or int3 push imul cmp push mov stc mov sub and and and sub insb adc fldl add and test and imul adc pop into mov mov mov hlt mov pop lods inc cmp xchg (bad) mov mov in pusha add push addb sub add inc adc inc sub pop or cmp inc cmpsl jle push push or sbb sbb icebp or lea jle cmp pop clc jne insb jno push push jg inc add or inc mov and fstpt jmp adc mov add jecxz jl decb (bad) jo xchg icebp orb mov (bad) mov mov mov cmp or insl stos mov fnstenv sub push add in int3 add mov cwtl cs fdivs cmp add jecxz (bad) dec mov adc nop adc orb inc push test (bad) divb outsl and iret mov movl adc cmpl ret pop adc inc or pusha push fildl and inc movsl pop add enter dec rol mov out push push insb outsl out les in data16 scas dec add xchg add xor mov jmp adc add cmp insb loope fcmovnbe jmp rolb jle cmp inc iret enter push pop jne mov and pop xlat pop arpl adc add scas mov (bad) clc or or mov or add pop lcall or dec add adc insl rcll and ret cmp or addl add and test fisubrl push cmc mov add adc es push adc sub adc push jno push inc (bad) decb and test je sahf mov stos inc cltd fbstp addb sub add inc icebp adc add rcrb jl movsl mov cmp (bad) cmp mov jae je inc and popf insb push push jmp sub aaa loopne dec jbe out sbb movsl sub mov es and and and push push sub push clc sbb es pop push pop je xchg add adc cwtl call dec pop mov jae dec je dec jne push inc or ja lods xchg push jge sbb xchg test sub sbb adc push mov sarb push add out mov add sub aaa mov test popa pop sbb cmp add inc or imul sbb cmp fs cmc les iret sub jne add add push fs in aas or jg cmp je cs and add add xor mov sbb mov push or mov mov adc js push cld jne and and cmp push cmp jl rolb ror jg inc test in or dec hlt out push cmpb inc adc (bad) sub inc hlt inc sar jnp and subl repz loopne (bad) pop jb xchg adc mov add add xlat pop (bad) lea add cmp jl enter mov icebp push lret add add repnz sub je std mov adc daa adc add jmp shrb push and or mov bound push (bad) sub pop mov ss outsb and pusha adc pop or sub pop mov ret or aas pop mov mov (bad) test pusha arpl (bad) jle inc dec add fadds clc or add stos cmpsl or scas ret adc add nop mov movl xor push sbb enter andl add jle rcll jbe bts push xor ss je sub cmp fsub jae xchg xchg pushf jg and lds test es pop jg je call insb mov into pop scas adc jle jbe mov hlt mov xchg notb or pusha ret add and mov in jg or inc jl out (bad) mov jg jmp je hlt cmp mov add jne or or ja jns loopne mov pushf je push hlt inc sub lock inc adc incb mov incl adc xchg add popf and das push arpl and insl xchg and sbb movsl or or adc jno negb xor add mov rcrb clc push inc add aam pop lods xor fwait add mov and mov add sbb push push dec loope jl insb mov or paddb rclb cmp je cmp adc (bad) xor outsl push sub testb lea inc sub inc add stc mov mov push push mov fwait (bad) mov stos popf jmp and dec push rorb je loopne jg (bad) xor je sub pop adc daa in mov inc (bad) je add xor push and cmp jmp adc rcrb ja sbb popf xor jp push ljmp push add out in sub call xor fstpl test insb cs scas sub xchg and mov sbb sbb mov push mov stos inc push pop ret scas pop inc test lret mov push repz dec lea ret adc sub and push std icebp push xchg push jl cli rcll jb push push mov push mov testl fist outsl dec gs sub and push out sub int or push jmp push stc int3 nop and sbbb xor imul stc mov sbb (bad) aaa ficompl cmp jb cmp push cmp fcmovnb inc or adc xor cmp inc mov xchg repz or rolb add mov (bad) jbe add push fsubrl cmc arpl test mov add cmc mulb jge rcl cmpsb mov adc loop bound push or or adc xor mov pop mov call push pop adc or fisubrl mov fcoms lahf mov inc fisubrl add add push js insl add inc mov pushf lea jl or sub mov mov jns sbb add adc mov loopne or mov cmp cld test test or sbb std pop or aas adc mov or dec lcall fsts subb test and add add xchg sub (bad) je les orb outsb out scas push fs loop dec sbb mov ljmp or (bad) xlat sbb or and jbe cli imul jl mov cmp jb je or push enter andb test inc sbb fcomi iret int3 sbb daa test test mov fmuls int inc test mov js pusha push and add xor sbb loope roll (bad) je sub or dec adc mov call and jg jne bndstx mov jle mov fistp mov inc rcrb adc pop add inc push into mov jl orl sub ljmp xor dec les mov stos sub inc dec adc push add aad sub dec inc rorb sbb fmuls pusha inc push and push add popa sub cld adc mov mov jb jle mov mov adc in es (bad) push popf and mov in sub mov ret dec cmp fwait or pushf fs inc in pushf inc push jnp hlt mov out cmp iret and cmp dec into pop adc jb fnstenv adc stos or push mov or xor mov pop inc icebp mov jne pop mov test xchg shrl loop sub xchg mov sbb movsb fnstenv sub lds lock loopne pop adc mov loop or push jb and pop jb lret xor aam sbb jns xor les fsubs addb jb push xchg add loope adc icebp leave pop add xchg xor in adc inc xchg dec in sbb repnz xchg mov ss cmp and cwtl dec inc adc and mov sub push rorb push add sbb xchg mov rdtsc sbb insl insl mov mov lods jp movsl push inc add mov add add mov fwait mov mov sub cmp sarb cmp leave add (bad) or jl jl repz cmp enter mov test and push cmp fdivrs cmp mov mov push and push mov adc adc push push addr16 inc shl jle or js sarb mull mov cmp (bad) andl pop add cmp inc add push and pop in xchg fs aaa jno lods push and cmp and jns test mov push add aas das cmp and or add idiv xor pop out or (bad) dec mov and cmp or add out jbe cmp das orb call lret xchg movl dec or fldcw imul push or mov ss add xor adc cmpsb lods imul (bad) push fdivl push adc jbe sbbl mov xchg or scas xchg or sub iret xchg xor jge cmp daa add adc push jne dec or cmp or xchg mov lcall mov adc movb mov sub cmp and in dec sarb cmp add sub or jae lahf out add xchg inc xor jg and cmp push and nop add pop or pop xor add pop inc nop mov and inc sbb int je push sub pop jmp outsb add jl adc or packsswb add leave cmp inc jb cmp das stos stos lods dec or add add stos xchg push add sbb add xor (bad) je inc dec jg mov ret sub cmpsb data16 lods fimul sub call pop jb dec (bad) xor scas mov fstl cltd pusha add sbb or and stos cmp pop call outsl add inc jecxz dec aaa cmp mov sbb mov dec add out add add rcrb popa push or std (bad) shrl adc loop and lfs flds sbb fsubl sbb scas cmp add aas decl fs popa je and (bad) (bad) add inc outsl jo jb addr16 xor xor cmp (bad) decl popa outsb sub and imul mov sbb or mov push mov add (bad) mov add inc sbb ds addb adc add or scas add pop divl or adc add (bad) xor pusha jg add or dec (bad) xor or xor (bad) xor add add xor jg add inc xor add arpl rorl inc push sbb or or cld or jnp adc mov (bad) mov add or imul dec dec int3 sub insb in xor (bad) xor pushf pop fdivrl xor sarl (bad) xor inc ret (bad) xor xchg push (bad) xor xor (bad) mov repnz dec lret push xor (bad) xor lcall sarl dec (bad) xor inc (bad) cmpsb data16 dec (bad) xor xchg push (bad) ss xor (bad) mov (bad) push mov xor dec into cs outsb out xor (bad) xor sahf pop fidivr (bad) xor sarl dec (bad) xor inc shll popa loope dec (bad) xor xchg push (bad) xor xor (bad) mov icebp or dec leave sub (bad) xor cltd pop fnstcw (bad) xor sarl dec (bad) xor inc lds dec (bad) xor xchg push aad (bad) xor (bad) mov cmc or dec dec int lods insl in xor (bad) xor popf pop fnstsw mov adc (bad) je add (bad) xor push rcl xor mov dec (bad) xor jae repz xor rorl or xor dec lret lret sub stos xor (bad) xor imul (bad) xor rcrl sbb xor pop fcmovnu cmp mov mov (bad) xor roll pop xchg dec inc mov dec (bad) xor addr16 (bad) xor rcll pop xchg xchg push dec (bad) xor push xlat xlat aaa aaa mov dec (bad) xor ja div (bad) xor rorl jg xor dec iret iret das das scas xor (bad) xor outsl outsl out out (bad) xor rcrl pop lahf lahf pop dec (bad) xor pop (bad) aas aas mov mov imul cmpsb imul imul cmpsb imul imul inc addl cmpsb imul inc add ja add addl add cmpsb imul cmpsb imul negl or dec rcll or pop pop sti add add add fs cmpsb pop or or sbb xchg mov push mov adc adc sbb sbb fs sbb test sub sbb inc test sbb ret popa pop icebp fnsave pop adc adc xor or adc inc xor push pop sbb xchg or sbb pop sbb sbb mov pop mov cmpsl or jnp adc pop cmp dec sub xor repz jo shrl aaa or push imul pusha andl xor dec add sarb and jg aam outsb sub jb and insb gs or or sbb lcall sub cmp cmpsb imul mov stos mov add fldt adc jo setp inc mov and sti lcall aas add cmpsb imul cmpsb imul xor add pusha pop aaa fisttpl add sub outsb imul ljmp ja and arpl je outsl outsb pop mov pop add jg in cs imul push outsl dec (bad) mov dec inc push dec inc dec xor cs dec dec mov (bad) out mov insb jae jb gs push gs popa insb jne jl (bad) or insb insb outsl push mov neg and inc js je jb gs insl jae pop adc mov adc lods stos movsb bsf fs or (bad) ljmp lret sbb and and es sub sub sub cs xor xor xor ss push (bad) (bad) (bad) cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec jg loop sub pop pop pop pop pop clc movsl push cld pop pop pusha popa bound adc push insb insl and lcall jo jb je jbe js jp jl jle add in jb fsubrl dec loopne sub int loope pusha push dec dec push push adc jmp or jnp dec inc push pop dec dec inc adc lret mov or jno jo insb imul mov mov jae insl popa mov je insl mov adc outsl and adc push dec mov jg bound jns lods hlt das sbb sub insb jns or inc mov pop imul and je pop int jbe daa pop jae push sbb fistpl out insl and insl fs push insl and lahf xor xchg xchg dec fmull data16 lods fcmovne insl bound jae insl bound fs dec and jbe and paddq imul fcomip das adc cmp bound mov mov cmp sub mov jmp gs into lods jle mov outsl pop push insb insb popa outsb pop fcmovbe (bad) xchg sub daa sub pop test sub imul push inc sbb mov jbe outsl jb inc dec ljmp imul divl add add adc popa push cs dec or lods jbe das or gs push push outsl or cmp fmuls test setnp arpl mov pusha fs xor test inc cmp into insb gs and lods orl pop dec js imul test fs xor jo std jbe xorb mov jbe leave sub xor addr16 and sub imul leave imull dec or outsb jmp setae fistpl xchg sub push test inc and gs and insl jbe xchg mov inc sbb xor and mov popa cs or adc sub sbb in dec jge jno cmp adc dec mov popa repnz cs xor adc pop imul sub mov push or push in aam push dec les mov xchg inc ficom pop (bad) add push (bad) fstl sub cmovl daa or jo addr16 inc push jo and jne add addr16 popa xor and dec rolb dec adc jb fisttpl (bad) fdivrs mov inc js lret mov jb insb xor add pop xor add and add test sub addl or (bad) add mov enter add sbb add mov add (bad) lret add sbbl cmp mov popa inc add adc adc incl cmp lods addb xchg lea call xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas (bad) (bad) (bad) pushl mov mov mov mov ret (bad) (bad) enter int3 int iret (bad) (bad) (bad) call rcl rcl aad xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out push push (bad) push icebp repnz cmc div clc stc cli sti cld std (bad) call pusha mov sub adc mov mov add popa pop jg add dec dec cmp test pop xor or je pop mov or das or dec adcb push sub pop lcall dec outsl jbe dec ret dec lock adc mov in dec scas inc mov pop or bound mov test push push adc sbb addr16 jne mov inc inc aaa jns fidivrl inc aas cmp and cwtl fs inc inc pop or insl lea pushf mov or jne dec sub adc pop inc cmp das daa and repz out test add push addb movl daa dec inc insb and jbe mov cmc sarl mov push in fldenv and jb adc fdivrs adc xor faddp and inc pusha test mov fcompl push sub pusha insl add pop lret ja cwtl inc dec jo sbb pop push and je jb pusha and insb push pop jbe jb inc daa mov sub jns pop sub xchg shrb xor dec inc and sub leave sbb xchg adc inc sub pcmpgtb aaa push or dec clc test jb cmovp pop pop sub jae daa add mov pusha ss (bad) popa xchg push jae testl xchg ja pop (bad) jne dec and fistpll dec jnp dec add jns dec call outsb fs sbb (bad) outsl xlat inc and add adc test and adc or out mov mov xor mov add jb dec pusha mov mov aas rorl mov pop movsb xchg adc lods pop out adc fildll inc sbb xor pop test adc pop jbe je mov add cmp add add je and sub and iret xor jle pop mov pop sub sub xor ds cmp or cmpsb jmp and sub es (bad) jne sub sub add outsl ret dec cmpsl cmpsl and cmp add dec dec ds lret sub pop pop shl sti mov mov or sti je jo mov or xor fptan sub or leave or int3 xchg xchg int int3 xchg jo pop into js,pt jge pop ja sub pop enter mov sub xor shll adc add (bad) imul or ret in sbb xor mov add add aam xor sarb mov lods test mov pushf cwtl xchg dec add test dec (bad) xor insb push dec rcrl push dec dec (bad) xor dec inc cmp sbb (bad) scas add mov andb add je fadd mov xchg js fs (bad) xor dec sub adc lcall mov cmpsb push and in rolb pusha lcall gs sbb push push outsl ja lock (bad) outsb pop push cmpsl jb dec je dec inc lods jae dec jbe sub cld inc arpl push imul sub inc jnp mov inc outsl js push inc push jo adc movsl (bad) mov cwtl xchg sahf movsl lods jno test mov rorl bound sbb test xor pop cs mov or or cli adc outsl arpl or add mov incl add push adc or push add incl pop jge out fisubr dec add jmp push sbb push insl aam mov inc dec adc sub mov insl imul adc cmp adc add sub mov add pop test push mov jbe or adc jmp push add hlt fwait mov insb jmp (bad) data16 mov and je fmuls push jns insl fnsave shrb insb add jne sub sbb frstor or jb aad jmp or jo mov sub or fstpl cltd das or cmpsb mov cmp jbe flds mov (bad) xor (bad) outsl jp out and lret or stos or pop mov daa popa fwait dec add mov pop ja lods add dec and jae xlat jne mov push outsb imul fadd jae pop pop jne xor inc test jae outsl add scas jo enter outsl and ja ja sub out lock (bad) je cmc cmp mov pop sub popa fwait psubb jae inc insl or pop add lcall push sbb out mov fwait arpl and ja iret mov inc and lea test jne dec dec add adc push loope dec xor inc mov xchg push cmp mov xchg mov or fdivl or stos or xor inc and sub fcoml mov outsl popf add mov xor ss xor add movsl mov mov cmp insb mov pop or xlat lea js imul jo push inc imul and mov outsl test and leave inc outsl xchg mov mov dec daa ja pop retw iret jge aaa insl or outsb sub mov or add jae mov adc add or outsl xor jmp fucomi mov sbb push je imul nop push movsb ja add in popf inc sub pop rcr or push lret add (bad) mov jbe insl int dec outsb insb pop cmpsl jne or add pop add subps lea sti jo fwait and mov fstps and outsl push or jbe pop dec fwait pop xor inc pop inc icebp jae xchg mov xchg dec add arpl xchg jecxz in enter outsl aas pop inc sbb pusha gs jg push xchg in daa add mov imul push pop outsl jae imul jno pop lahf and pop lods mov mov cmp xor iret or push scas popa stos mov outsl movsb fcoms dec test xchg sub dec xchg movl movl dec aas insl mov addl das ret insb cmc arpl insl pop dec arpl adc mov and and das jns push ret insl xor xchg insb std pop lods add jecxz cmp jmp sbb push mov icebp imul das dec adc xor cs or sub xor cmpsl imul adc arpl or or pop bound add add add ja xchg or das push adc and jne popa addr16 and aas je mov (bad) xor scas inc sbb repz dec loope xchg xchg jecxz dec add xchg mov xchg and inc and adc fcompl add add bound inc cmpsl lret shrl jb int idivl jb xchg xor mov outsb push add mov inc sbb gs mov dec stos jns outsl add or add push push adc popa mov (bad) (bad) jg pop popa bound cmp cmp cmp aaa sub sub (bad) pushl xor xor bound data16 outsl cmp inc inc xor and outsl in idivb inc inc inc daa aaa xor ss xor or (bad) xor inc xor jb fs outsb ss dec ror lds outsl fs push jl loope imul cmp mov insl dec jge adc add cmp adc cmp inc pop push push lea cltd inc adc mov ss lret push cmp insl inc add (bad) mov cmpl mov lock outsb arpl lret or inc mov rorl fbstp and mov inc xor adc inc add (bad) mov pop xor dec and cmp mov aas les lods push add aaa roll sub ja fs inc in mov fbld sub mov stc in test add xor sub adc fdivs test jmp pop out test std pop jae jge pusha negl les ret popa cmp jno popa push pop or xor out and xor add sbb add mull jl add mov xor pusha loope outsl inc (bad) (bad) (bad) (bad) jmp fadds cmp aam mov inc mov adc repnz sub xchg insl dec jge test sub or and add or les outsl lds dec xor and jne les or add sub pop adc dec jnp xlat jne out add add xor stos aaa sbb adc std or mov jmp jb or xlat xchg sti ret fsts in fild bound push mov ja cltd add jge inc push stc push sbb fisttpll add popf imul mov arpl or mov and inc test ja testl fwait adcl ret xlat fnstenv jg add xchg and push cmpsl aas outsl inc (bad) mov add mov into adc add jl sub push ficom bound add je inc (bad) (bad) pop insl insl das xchg mov hlt mov sub fs ja sub mov lods fisttpll imul add cmp adc push ss dec ss sbb adc das ss adc arpl cmp and mov xor or adc mov xor outsl sbb daa data16 mov inc or es stos das adc fcoms test jae sbb push flds inc pop jge insb mov jb inc and in and loope loope xor xor icebp imul loopne bound xor cmp push and add add push stos push out movups outsb fldt jg scas lcall nop and push push inc push cmp lahf inc cmc pop push dec jg push add push in jns pop lods xor inc push pop inc outsl fs bound xor and imulb pop inc or jo add daa in or out adc mov add (bad) out push aam faddl push mov add shlb xor fdivl inc mov pop or sbb sub das pop roll lods js daa add outsb enter cld daa pop adc or pop xor fwait pusha ffreep push jecxz movsb xor push mov push add pop jg sbb jg psubb pop and inc outsb faddl (bad) and pop rorb xchg sub inc add push push lods add nop push fcomp outsl pop andl inc ret and xchg inc mov jg lcall cmp jnp enter or daa cmp inc adc lds or xchg xor mov fldz (bad) sbb xor movsl xor inc jb das mov int3 jno fs mov aas ret outsl inc outsb pop in mov sbb jnp mov pop xor inc js jo pop pop adc popa pop add bound sub fs xchg je orb and dec mov add test pusha sbb add cmpsb out mov or mov in mov pop adc aaa add insb mov xor aas dec paddsw sbb dec aad pop add pop inc movsl xchg test add push dec (bad) out inc xchg jns mov push dec push in xor mov int3 sbb mov in push aas pusha or test adc adc enter pop leave mov repnz leave adc xor leave xor xor push js mov orb add loopne xchg add fdivrs inc or and mov sub sub nop xchg jl xchg sbb test pop cmp int cmpsl aam or xchg cmp xor inc cs fucomi xor addr16 jp push xchg push push xchg add xchg inc add xchg xchg pop xor ja xor push sbb push pop pop ret mov add xchg add sbb cwtl iret pop xor sbb mov shrb nop inc lret mov lret loopne shrb cmc and or sub sbb and (bad) jae popf cmp xchg xor ds lret (bad) add in inc push pop push push push ss inc push mov in xor test jl test in xchg nop mov xor addb mov pop add xchg inc mov mov repnz add cmp (bad) mov imul fldt (bad) addr16 test mov xorl jmp out pop sbb dec loop mov repz inc add pop jbe stos mov push xchg jge fmull add mov push push and stos mov mov imul fcomi pop lds push fisubr pop int sub jb pop jbe or insb inc ja and xchg sub add cmpsb xor insb negl push inc xor insl fildll xchg insb outsb sbb es aaa or and je outsl test mov loop xchg in outsl mov pop jns bound jae push xchg jb bound das jae shrl xchg sbb pusha (bad) adc andb pop pusha add jnp lcall push negl inc in jbe mov sti bound data16 xchg arpl adc aaa imul mov and push push sub das sbb sbb addb inc cmp mov add nop pop dec dec inc aas add add jmp pop adc pop out sub cwtl add sbb add insb das push jp xlat lea pusha inc add lds pop pop adc push pop jae or pop pop jo xor mov push push pop or add pop and mov lcall pusha orl pop or or push push pop orl pop cmp rolb push pop adc push fsubs mov or mov fsubs dec pop lock pop (bad) jne or push pop jecxz fsubs or xor pusha orl fs push or fsubs test pop test insb mov pop inc pop call sbbl xchg mov pop cmp insb mov sbb lahf pop pop insb pop mov push sbb mov push sbb pop clc jg sbb pop push pop adc mov and jb xor insb mov push (bad) decl pop bound mov push sbb pop movsb lar roll fs inc pop in push sbb pop pop pop sbb xchg sbb incl jp cmp insb mov push aam adc push sbb push sbb pop mov lahf pusha orl hlt jg or push pop push push rol sti (bad) mov xor jbe push sbb aas int3 decl pop adc pop es lods (bad) fsubs fild jg pusha orl pop pusha orl jle orl lcall pop outsb or cs mov and cld xorl nop call adc andl dec pushl xor fsubs rol jmp and and add sbb pop loop pop pop ss sbb xchg (bad) jns or pop sar imul sub mov pop imul pop outsl mov push pop adc sbbl jne xor ror jmp and ss maxps insb inc pop ljmp sbb pop xchg ljmp insb mov pop sub shlb sbb cli lcall test inc addr16 ret push sbb jae xor (bad) pusha xchg xchg jmp sub cmpsb maxps movsb rcrl lcall mov imul sbb (bad) ljmp popa roll sub mov lahf and fmuls decl pop pop pushl shlb pop aaa aas into jmp fsubs daa pop scas pandn rorl pop inc pop out lcall insb mov pop pop pop pop sahf push sbb jg aas pop faddp push sbb pop or setg adc and loope xor inc leave mov leave xor inc leave push cltd fsts or stc inc leave push xor movsl in xchg or xchg aad inc leave push mov xchg or inc int inc leave push xor popf fnsave xchg or mov push ret mov jecxz inc leave push xor mov or inc and xor inc fstpt sti (bad) or inc leave cmpsl out leave push xor inc (bad) iret push xor inc leave lahf fistpll (bad) jg lahf push pop mov add fild pop pop movaps mov pop cmovo fistp cmp lcall sarb or fistp arpl pop rorb aas add enter sbb pop push sbb push popa aas add nop xchg ret jg xor add cmp or mov out sbb and and bound pop jne push fmuls repnz daa insb and jb push add pop inc and leave adc xor push pop je fbstp sub add push add cmp (bad) pusha mov outsl push in dec repz incl add and invd rorl add aas jg add jle or mov mov mov mov jne sub inc adc add out cs sub or add lds mov push dec jmp xorb and out jp push add movsb (bad) pusha (bad) jns and aas aas jns cmpsb fild mov cld inc jle and mov ss pop inc mov lods fimul das iret mov (bad) or in call mov inc push ficompl pop pop fisubrl xor rcr fisub nop xor pushf mov lret inc mov ss pop test inc (bad) stos add cwtl mov mov divb sub pop jmp test rolb fwait data16 mov pop jecxz add iret push ret push fwait mov or sbb cmp mov adc pusha addl adc orl and fsubs push xor push fsubs pop push pop pop jnp pop or or mov push sbb push das xorb pop (bad) pop andl mov inc xchg add sahf jae (bad) movsb outsl cmpsl pop mov xor pusha lahf into pop xlat sbb inc bound stos cmpsl or sti fnop pop and mov jnp pop ds ret fdivs push jl dec mul pop daa pop pop adc imul jmp pop pop repz push aaa ret adc repz adc mov mov cmp mov negl pop jns jp pop loope loop fsubrl pop frstor add or or or into sbb or add nop xchg aas js inc push mov movsl push dec and cmp insb test test jmp add pusha pop nop add jb add cli mov inc add outsb jnp lcall add mov mov cmpsb imul imul cmpsb imul imul fwait cmpsb sbb add add rcrl loopne ror or mov lock and sti inc hlt je pop (bad) dec add jae (bad) and (bad) mov push jo lock jbe test push push push lahf push inc aas add push adc scas push xor sbb shrb cmp pop ja mov xor lret adc xor inc loopne dec dec insl add cmp ja pop roll bnd mov mov insb add imul in add cmpsb mov adc imul add imul push pop push (bad) lcall call movsb cs insl or xor push insl int test fisubl lcall (bad) (bad) call xor xchg ficomp out mov test (bad) and and ds loop enter push inc mov loop add test jo (bad) (bad) (bad) incl jne cmp pop jge fsubrs jl sti popf out cld into ja repz out adcl incl and jne les jnp cmp lret (bad) or out sub mov sbb push and adc mov arpl and popf or (bad) incl jmp (bad) mov xor imul mov scas std aam cwtl sub (bad) jmp mov out ss jecxz insl aaa insb cmp push hlt add push js cli mov jle idivl cmp push roll adc mov ljmp mov cwtl (bad) add adcb (bad) (bad) call cmc dec mov inc pop xor pop adc int push mov dec xchg push (bad) incl jns test jae cmp les out push test (bad) (bad) call pop xchg out cmp nop jge (bad) nop test jg fistl xchg sbb (bad) incl stc inc stos repz fdivp and push insb push insl mov pusha sarl popf xchg (bad) aaa and mov mov fsubrl (bad) incl repnz lods pusha sub subb cmc push mov xchg pop ss sub addl or ja push out mov rep cmp ljmp std push lock adc int ds dec pop loope mov push (bad) js (bad) (bad) (bad) pushl adc cli mov js mov lock mov (bad) clc or push adc dec test (bad) (bad) dec hlt pop loope jmp das das aad or jecxz divl rcl gs push inc int sbb xchg (bad) (bad) (bad) out lcall repz fistl fldcw cmp mov and leave cmp out (bad) (bad) (bad) (bad) in jl movntps orl dec repnz scas xchg loopne,pt pop sbb aaa lock outsb (bad) (bad) (bad) call lret sbb sub push insl jo iret lahf shrl les adc out stc (bad) (bad) (bad) decl ja jg (bad) aam adc add fild imul jne xchg mov (bad) call push ret ja insl fwait cmpsl ret push jle mull or rolb push push or inc mov xchg xchg add cs xor push or (bad) ja jns enter test dec inc sbb or fsts test hlt dec nop sub icebp push lahf (bad) mull mov in (bad) jnp enter push xchg sub dec jae into cmpsl adc insl add sub std (bad) (bad) (bad) cmp fdiv icebp fsubrl rcl stos xor inc inc mov push sbb push xor (bad) (bad) (bad) mov pop sahf ljmp outsl jecxz test sub cmc movsl sub pop gs (bad) (bad) (bad) std insb push ss xor xchg (bad) or jle mov popa add cli and (bad) ljmp daa out add mov daa inc icebp xchg in jbe popa dec dec and (bad) (bad) (bad) incl xchg es icebp push insb mov test inc loopne jle dec ljmp pushf xchg movsl sarl movsl in add sub cmp add xchg repnz dec mov loope dec dec enter call xchg mov scas xor test sub addb (bad) (bad) jg inc cli or ret shrl icebp sti jg,pn mov (bad) (bad) decl or dec inc inc aad sub (bad) fs or push call (bad) decl add pop stc mov xchg (bad) enter repnz pushf jl (bad) (bad) (bad) (bad) mov leave scas in jb fsubrs jge jp adc cmp ds jnp imul (bad) (bad) lcall insl cli cs mov xchg mov fdivrl mov (bad) stc sbb mov in (bad) push pop dec (bad) (bad) (bad) lcall lods pop pop lea lds and (bad) mov aaa es (bad) (bad) (bad) xchg adc push (bad) dec mov dec adc adc rol orl pushl (bad) (bad) stc xor xor enter inc lahf xor int loop,pn and psubsb ja in (bad) (bad) dec lahf fs jnp xor daa fucomip sti jnp jle in jae nopl dec and (bad) lcall push and cmp shl into xchg sarl mov jnp,pn adc xchg leave cmpsb (bad) (bad) (bad) incl mov mov movsl push imul jp xchg dec jns in adc jo cs lret lret (bad) (bad) lcall bsf mov in test jb popa jmp ljmp scas out popf (bad) aaa (bad) call pop jnp jg mov gs sub call bound fs jle mov neg insl jae push out sub sbb and (bad) (bad) lcall lret je mov es pop xor lds push push lret insb daa ljmp ss outsl (bad) lcall fimul inc call mov cmp xchg pop mov loop aas sbb xor call jmp fs mov lcall outsl (bad) lahf xchg xchg je call movsl xchg xchg imull insl shrb push (bad) push test jg push jb jl xchg mov (bad) (bad) (bad) (bad) cmp inc ds stos cmp mov push dec pop js push jecxz into data16 cmp mov cld xor out jmp adc popf rolb out sbb cld (bad) (bad) call xor dec fstpl xchg jno fist jnp arpl inc or or stos stc pop push jno outsb inc mov pop mov cld hlt jae in nop cmpsl jnp and outsl std decl lock mov cltd jbe in cltd xor push pushf loop dec xlat or (bad) (bad) cmp or sbb fisttp clc adc shrl lods (bad) (bad) ljmp lock lahf ret lods hlt rclb mov push loopne mov cld (bad) jmp or mov out dec loop adc dec roll (bad) incl inc mov loopne pop or push pop lds or pop sahf (bad) jg decl cmp arpl sub popl adc (bad) (bad) (bad) decl push sub rcll (bad) fildll ret fcmovnb xchg add cwtl test inc popf test mov xlat ret fstpt or ret ja mov pop sub mov (bad) call call mov and daa sub xor jno jbe xor stc (bad) xor xchg mov sbb xchg loopne pusha lods call cmpsl dec ljmp pop push jp adc xchg or rorb (bad) dec (bad) jnp (bad) (bad) jmp add push push xchg adcl xor adc mov mov or push arpl and adc stos or inc sar (bad) (bad) lcall inc fdiv aad sub xor andb add inc mov stos mov out xor lcall lcall add cli mov stos loop inc dec pop leave sub mov sbb (bad) (bad) (bad) cmp or std ss nop push movsl jle out dec fs dec mulb in lcall ljmp movsb sub jp xchg lds stos push rcrl push pop ljmpw push imul jge lods (bad) mov mov dec jecxz mov (bad) pusha mov test test push xchg pop cmp sbb pusha (bad) xor (bad) (bad) dec test jno pop dec stos xor inc fwait les lret sbb leave mov (bad) (bad) call sbb adc pop out xchg mov push (bad) hlt int3 xchg pop cmp cmp push jmp enter loope subl ret dec fwait adc fsubrs mov sbb (bad) (bad) dec pop clc fist adc test test ret cmpps fmuls lret (bad) (bad) (bad) jmp push fcoms (bad) mov fcomps mov mov in dec ss mov std (bad) ljmp pop data16 mov mov fsubrl hlt aas add rcll xchg cld rorb mov add loope aaa rol stos rorl fildl daa adc aam jmp add call into jmp pop lock add cmp xor xlat out add fcom shlb inc loopne push insb lcall aam pusha lcall aaa dec and roll push in mov jge push inc idivb jl movsb sbb xchg call jbe out or sub sub call mov inc inc xchg add or mov fwait mov (bad) mov enter mov pop insb or sub mov aam push data16 fstp ds stc jecxz ret jle decl mov cltd jae int3 pushf cmp int3 cltd xchg mov dec xchg or (bad) (bad) (bad) lcall and repnz (bad) sti jae mov jg jbe outsb hlt aas jg into outsl (bad) (bad) jge in lods cltd mov clc jmp aas fstl incl fimul dec lret lcall aas jmp sti mov fbld mov outsb mov (bad) inc arpl aaa push jmp pop popf decb (bad) mov sahf in (bad) jmp leave add (bad) push xor dec iret mov mov stos call (bad) (bad) jmp iret pop fmull leave xchg xor cmpsl cmp mul in pop pop xchg movsb (bad) call test rcrb push daa dec or fnstcw lock adcl mov sub xchg ret dec popf outsb or (bad) (bad) mov pop hlt mov xchg call mov ds push out mov pop js sar (bad) lcall ficoml dec xchg movsb sub int3 lcall loopne (bad) jbe (bad) ljmp inc mov jo incl push es inc cmpsb addr16 push lret iret das aas mov or scas jle dec pop xchg add mov repz cld xchg mov pop xlat jp clc outsl test scas mov ljmp pop jmp add dec xchg mov iret in pop and test mov xchg ret dec or mov ljmp xchg repnz daa stc adc inc (bad) fcoml lret fwait inc push shll mov (bad) pop in cmpsb xchg mov (bad) (bad) ljmp cli dec movsb mov shlb cmp inc xchg jbe test sub test (bad) jg push leave out xchg arpl idivl push push loop pop sbb mov outsl add jbe and (bad) (bad) in mov dec arpl push (bad) fadd movsb inc lret nop jns hlt sub add and test hlt rorb sub out jo das cmp push push dec stos dec std add mov and mov lea jbe xchg and mov adc push (bad) (bad) (bad) dec sbb push sbb sub xchg cli ficompl adc clc cmp cmp lds inc push lcall std ljmp and imul xchg mov int3 rcrl xchg pop cmpsb (bad) (bad) (bad) (bad) cli mov dec mov add xor jnp sbb clc xor mov ret test inc (bad) push int3 mov mov nop shlb mov sbb (bad) fdiv inc xor pop cwtl add jae xor (bad) (bad) (bad) jg mov push daa int3 shlb sub pop sub pop aad shl cwtl jecxz popa ficomp xchg pushf or into (bad) pop stc jecxz xchg sti insb xor pushl incb nop jns xor out je push leave stc xchg mov jmp es fisubr dec dec dec fimul (bad) mov and (bad) or ret xorl xchg bound shr ss pop cli (bad) std jne sahf popa or push clc aas sbb mull aad mov mov ljmp leave std stos pop ja or int addr16 pop cld decl mov push sahf and pop rorl mov pop inc jp (bad) (bad) incl jp sub mov fwait add sahf mov mov mov (bad) enter push push jbe orl fstp ret mov add ficomp push ficom pop or (bad) jg in div xor jbe clc sub jne jge imul or vorps add mov mov mov ret pop insl clc stos adc push xchg daa in lcall adc lret jg test in cmp (bad) (bad) (bad) inc cmp mov xorl mov and sub enter inc sub fldlg2 add outsl and xor or inc xchg (bad) insl xor add and mov add (bad) (bad) jmp and dec pop test enter mov mov push xchg adc std adc and and leave mov cmp or (bad) call lret mov out cmp or cli mov mov add jmp push mov inc inc test in (bad) icebp cmp pushl mov xchg add sbb cli or cltd ret sub add push loop stos ljmp mov pop add rcrb js mov loopne xchg adc ljmp dec ret (bad) incl add jecxz adc sbb (bad) inc data16 repnz aaa subl dec in movl xchg outsl push push (bad) (bad) jmp ss adc xchg sbb mov aad sub call out cli cmp fistp mov mov mov jne jecxz add pop loopne std or adc imulb mov shlb lods xor and test pop dec dec sbb pop dec inc mov insb hlt xor cmp push cmp lret and (bad) mov scas and mov xchg or xchg add mov (bad) in pop cli out xchg aad and xchg jns sub xchg fdivr cmpsl mov nop es xor imul mov and and test push fiaddl lock imul jle fwait sbbl call popf xlat js mov inc lcall mov ret xchg (bad) ljmp inc xchg fsubrl rcrb (bad) repnz roll dec push in out mov add pop sbb mov xchg or cmp (bad) (bad) inc into jle mov test cmp xchg pop add outsb inc jae xchg fs or jg sti sarb push mov lods xchg mov cmp push dec (bad) (bad) mov cmpsl mov in and push out (bad) xor lret cltd add push pop in incl incl movsl cmpsl in lods scas xchg ja (bad) in mov pop call lret outsb sbb jne add pop dec out pop mov adc incl xchg rcl test in imul or inc cmp (bad) mov orl mov mov and bound xchg adcb rcrl ljmp fisttpll decl lea pusha test inc mov lret add lahf and shlb mov fisttpll inc xor inc nop add insl mov lahf jno insl daa test mov or popf mov mov xchg orl cmp jl std out xor fdivr das hlt decl jbe sbb out inc push loop,pt test adc cmp sbb call fild xchg decl cmp xchg sub xlat fcompl (bad) (bad) (bad) pushl push or push (bad) fcmovbe enter lods clc sbb and fstpt adc sbb insl je aad scas loop xor (bad) pushl cmp xchg cmp out scas mov (bad) mov mov (bad) (bad) mov jp fstpl mov stos fstl je cmpsb pop pop scas xorb jg (bad) incl fisubl push mov fidivr mov aam (bad) mov mov loope mov fisubr xor cmp inc or push aad aad inc sub xchg push arpl cli or stos movsb sahf cli ljmp lret add add outsb ja or les (bad) pop inc stos fbld xchg fnstenv fld jae sbb fs lcall cld arpl sbb stos mov cwtl jns adc (bad) cmp (bad) (bad) (bad) cli jge xchg mov push jne xchg (bad) hlt (bad) jae aam (bad) pop outsb ret std cmp cwtl add aaa cli das mov dec enter mov rcl (bad) cmpsl jmp or pop fistp and push mov cmp (bad) (bad) pushl (bad) fs (bad) mov pop jb daa push lea pop addl xor (bad) repnz stos (bad) pop clc pop ljmp mov imul jne dec into push sbb sahf pushl adc xchg xor repz fmuls cli xlat fcom inc xor loop or dec aaa (bad) decl (bad) mov pop (bad) mov nop jl dec ds and or test push cmp in dec cld adc (bad) in stc cmp clc sbb (bad) imul (bad) (bad) call xor test jp nop pop inc movsb (bad) clc inc lods pop and pop add or decl mov outsb mov fwait jnp icebp fdivrp cmc sub std or push ss xor (bad) mov sti pop mov fsts clc (bad) fisttp pop xorl arpl pop sub cltd mov loopne (bad) (bad) lcall (bad) mov add ss mov call fild or fnop decl rcrl push inc scas repnz in xor cmpsl sbbl rorb push add inc es xlat jns push dec ss adc in fidivl xor mov xor mov stos jp mov rcrl or xor sarb stc cmc cmp xchg push mov decl or icebp inc insb in lds in and mov (bad) mov mov daa xor cmp jmp nop or cs pusha into xor outsl inc jge repz jnp fyl2x aam pusha pusha popf mov xchg (bad) (bad) (bad) (bad) js enter lods das lods loope scas fcomps adc (bad) ja xor (bad) pushl jl int inc xchg xchg sub mov xor gs mov addr16 into lock pop rep int negl (bad) pushl daa cld lret cmp jge inc pop xchg test jnp das std dec push andl cmpsb negb add (bad) mov sub push cwtl adc lahf inc and cmpsl ljmp jg nop loop popa xlat ljmp mov call cmc (bad) dec sbb outsl dec mov xor jne cmp (bad) mov lret pushl add fidivrl pop push cmpsl cmp es jmp mov jp mov pop stc jp sub (bad) outsl icebp pop les sub sub shll shrb jg add repz das jl nop repnz cld movsl cwtl inc jle jge add lock pushf adc addl popf add add dec (bad) sahf sub or ss (bad) (bad) (bad) fdivrl ss or aad jp cld ret lods jno dec sbb jb add ret lock int mov inc aad xor daa xor inc mov lea xchg dec mov in pop cmp sub (bad) (bad) decl scas test pop cs push jl (bad) mov ja call dec daa push sbb movsl mov pop cmpsl jp dec inc fsubrs pop lods addr16 (bad) (bad) push mov std je adcl dec or repz xor test (bad) incl jmp mov mov cmpsl xchg adc nop mov dec mov cld (bad) cmc mov decl jg push ret aad push push inc mov das std ljmp push loope xchg mov cmp jl loopne (bad) mov outsl cwtl data16 or (bad) (bad) ja mov mov cli decl mov (bad) lock aaa xchg iret xor cmpsb out jl adc sbb (bad) lcall mov popa cltd push xchg mov hlt jbe xor push (bad) stc cmp mov adc rolb lock adc addl test decl pop fucom mov xchg ds clc icebp mov jg call stos jge scas roll dec fldenv jecxz mov call lcall sti hlt xor test cmpsb das add xchg leave sub mov add ficoml sti lds sub or (bad) (bad) (bad) mov xchg aaa xor xchg sbb mov or (bad) imul (bad) jmp add (bad) mov scas stos es call (bad) js pop jp (bad) cmp adc push mov adc jp sahf xchg ds ljmp in xor daa cmpsl pop sub xor sbb xchg cmc mov call roll lea mov (bad) mull (bad) ljmp xchg cld nopl xor pop aaa mov sbb icebp (bad) (bad) (bad) incl outsl fwait mov jno adc xor lods and int xor pushl cli fild je add popf cmp data16 or add inc scas (bad) (bad) (bad) (bad) ljmp push cmc sub arpl test xlat (bad) mov jmp pop mov push xchg push or loopne aad call mov push aaa cmpsl out iret sbb xchg cmp repnz cmp and cwtl ljmp jmp push pop lahf cvtps2pi cmp add pusha cmp xor and add ja jo jb ja cmp icebp jmp inc lcall jae (bad) outsl lock (bad) add push adc xor loop xor (bad) mov int add adc lods pusha scas out clc leave ret pop cld push fwait mov dec mov jb (bad) push pushf mov call call jl loope and in xchg movsl cli cld lcall ret add cld push xchg fs lea aad lahf sbb (bad) (bad) decl int3 pusha inc pop addr16 insl cmp cs rorl in xchg push inc (bad) adc dec clc mov pop mov fistl pusha jo mov (bad) aaa clc adc mov push rclb ljmp mov (bad) (bad) mov (bad) mov pusha hlt dec inc or mov aas xorl dec hlt pop dec xchg in mov cmc (bad) pushl divl push fstpl pop jnp je (bad) rcrl xlat fldt (bad) (bad) (bad) mov fnsave imul je or mov adc jg lcall mov leave add sub add mov sub lahf pop and outsl sbb cmp adc loopne gs sahf (bad) (bad) (bad) mov pop ret mov mov jbe pushl or call (bad) (bad) in inc jo and cmpsl dec outsl adc pop pop pop xchg fucomi push cwtl rorl inc cmpsl adc (bad) (bad) lcall or mov aaa fimul sub or repz sub mov pusha jecxz (bad) (bad) mov (bad) fidivr or (bad) lcall loopne cwtl push leave loop push push test and mov ljmp and fs sbb (bad) (bad) incl and or pop lcall ret mov cmp inc push pop std (bad) call insb inc pop push sub xchg and cmp test movsl mov int (bad) (bad) (bad) jg xchg push imul sub mov loop in push add jo push (bad) (bad) (bad) decl xchg or sbb aad popf inc fld fidivr xchg iret ja mov push out (bad) (bad) (bad) cmp or mov xchg out pushf mov outsl (bad) aaa fsubl or cmp pop test daa jno out and ret sub jp xchg sub adc lahf push xchg stos fwait cs dec inc push stos mov fsubrl sbb sti xor mov pop jp add or (bad) icebp pop sahf les lcall lcall jge (bad) mov mov adc lahf xlat clc fsubs out mov (bad) (bad) call inc (bad) mov andb xchg xchg mov xor ja xor rol sbb pushl clc inc ja call loope (bad) jle sbb addr16 dec xor fdivs mov or (bad) out loop punpckldq (bad) (bad) (bad) incl jbe dec mov push sub int pop sub mov mov add outsl mov sar cwtl mov fisttp mov icebp (bad) pushl movsl add es (bad) sbb in aam jg nop push in pop (bad) lcall pop mov sub pop jns aas dec call push (bad) decl jp inc daa or jbe sbb dec jle cmp stc or mov (bad) incl in out je xorl ret mov (bad) (bad) (bad) ds adc jge out in psrlw mov jae negl movsl gs mov xor lea (bad) call xchg in adc das push outsb insl xchg loope mov mov cld inc (bad) (bad) (bad) jmp xchg mov inc shl mov outsl mov hlt into je mov or pop xchg jg lcall mov mov ljmp sbb call std dec jo pushf pusha dec add cmp fwait loop add jmp ljmp ljmp into cld test push mov sub jbe in jae ja (bad) (bad) (bad) out test push jge sahf mov adc cmp stc adc (bad) xchg xchg daa pop mov hlt rcrl nop xor fsubrl mov sbbl jl stos addr16 (bad) jmp fstl xchg aaa add add adc push ret rcl (bad) add cmpsl decl std (bad) push ficompl xchg xchg mov mov xlat jno loope hlt (bad) (bad) lcall scas shrl xchg daa nop pop outsl rcrl ds into jp in fldcw clc ljmp leave adc jmp (bad) jg lods adc clc arpl inc ja mov outsb jg (bad) (bad) mov ret mov jg jge ss push jecxz push mov (bad) (bad) lret and std scas loop jns (bad) rorl lret jne out add inc push add movsb mov popf xchg setg jecxz xchg mov dec add mov mov fcmovne or (bad) (bad) mov mov rol ret mov fild ret jg cltd (bad) pop xor mov adcl push jnp das xor hlt jg popa nop jmp (bad) call je (bad) jbe sbb out mov (bad) (bad) incl or std pop xor lret mov dec cwtl mov (bad) incl pop add fiaddl ficomp inc out xor pushl and sub push or adc or add fldenv jne xchg fdivr mov (bad) decl aas loopne push or je jp mov jmp pop jbe or jne mov int3 jl aaa (bad) jmp mov fwait rcl fdivl insl dec not dec jmp cmp lret ja decl and push sub outsl inc mov ljmp jns and adc mov imul pushl adc in jns xor adc jl jmp inc mov mov lahf addr16 stos rcll les push mov push (bad) lcall scas ja pop scas sti cmc or sbb (bad) int3 cmp shrl js sti icebp gs pop cli push mov add jb jae (bad) sti inc xor (bad) incl (bad) (bad) hlt adcl jecxz std leave mov popa jmp (bad) (bad) pushl mov mov mov xor mov mov mov insl cmp (bad) (bad) (bad) (bad) std stos ljmp xlat add addr16 jl adc loop mov sub fisub aam decl cld push dec out mov out iret pop dec aaa cmc pop (bad) jbe stc ja,pt sti mov cld inc push enter sbbl pop mov lock (bad) (bad) (bad) mov insb mov jo and jb fdivr stc mov (bad) adc (bad) (bad) ljmp mov out and (bad) call and xchg or push imul cmp sbb clc call add xor inc clc sbb add push (bad) lcall aad jmp xor addr16 jnp lcall pop or cld decl or addl (bad) jnp clc jmp cmc or aas fsubrl push fwait daa sub daa outsl icebp ret aam push sti cltd jge cmp add ja (bad) (bad) jmp sbb into fwait push rclb dec aas add mov cmc xchg mov jle push hlt jmp and cmp (bad) mov jne pop pop xchg (bad) popa mov loop nop xor insb divb jae inc cli mov and cmp cmp (bad) (bad) lcall inc mov (bad) add xchg sub mov xchg xchg mov jmp push (bad) (bad) lcall fcmovb sbb sbb adc out and ss adc and mov stos (bad) (bad) mov fwait cmp cwtl call lods inc aam cmc lea sbb (bad) (bad) (bad) pushl xchg sbb and sbb mov test push cs rorl mov add out push shll push mov cmp cmpsl (bad) ljmp or fbld mov loop fiadd sbb je mov mov sti add mov ss lret rorb add dec mov (bad) ljmp fcoml ds xor sub jo (bad) cmc aas mov sub jg (bad) dec xlat lea or and aaa add in das mov int mov or aad (bad) jg negb sub dec mov xchg push clc lods mov jo xchg fistpll adc xor inc daa mov in adc mov (bad) outsl dec push inc out test insl push scas mov lcall ficom push lret push sub or or iret mov ret pop jns mov add or cmp push sub sbb sti xchg mov sbb jg insl out dec xor push in std imul shl test sbb sub test xchg out cmp pop push stc jb add (bad) jl push add (bad) (bad) call leave jl xchg lds add icebp ret xor xor (bad) (bad) incl jno mov sub adc mov push ds das fisub stos pop fst test test cmpb rcl call scas sub les leave cmp jmp (bad) (bad) (bad) push add clc xchg sub xor add and jae,pt imul pop pushf std push cmpsb add (bad) mov sti xchg cmp and lds xor mov (bad) (bad) (bad) ljmp in insb adc push push push adc roll jne movsb outsb inc xor nop rcrb (bad) (bad) (bad) js fistpl push aad shrb mov inc outsl adc xchg xchg jl cld mov (bad) (bad) mov jle sbb (bad) hlt and sbb push ret add (bad) (bad) out data16 push test int pop es xchg (bad) adc (bad) (bad) (bad) inc or lahf xchg rcl cmp dec xchg inc notl inc repnz dec adc jns xor sbb push adc das arpl cmp insb testl inc in cmp ret jmp push (bad) (bad) jg or bound daa (bad) sbb sbb mov outsl cltd push pop and sti imul daa inc pop xor jecxz sbb dec into xchg mov push inc sbb mov jnp and std ret (bad) call call ljmp pop mov push or jg mov je jmp push lret (bad) call (bad) stos jnp (bad) in push test lahf cmpsl sbb sub in mov outsb xchg fdivr (bad) call mov mov aad stos add (bad) (bad) call sbb dec inc xor inc movsb push jmp loope jnp outsl hlt push dec test fs or mov (bad) (bad) jg cmp dec repnz int lret cli loope mov fsts or incl push aam leave sbb call (bad) (bad) call fisttpll pop or lds jo dec cmp or (bad) (bad) (bad) ljmp jb mov or sbb ja xchg insb (bad) out xor lock pop fs out jmp das enter sub sbb mov fildll arpl fmul fdivrs loop dec fwait inc adc dec sub push mov sub xor and stos add xchg dec push jg pushl inc test or xchg shl mov sub pop cld jns (bad) (bad) jg lods bound loope adc (bad) hlt lods xchg mov ljmp dec in xchg std mov shrb sub lcall (bad) fldl pop icebp rcll out jmp cmpl aad lods (bad) (bad) push movsl inc mov out push rorl ljmp jp cmc mulb (bad) (bad) (bad) mov and movsb pop push mov mov xor adc and push and gs xor ljmp out in adc ror sbb (bad) mov push jmp pop ja (bad) (bad) (bad) lcall cld sbb stos dec clc fwait or mov xlat popf cmc lcall dec xchg mov or or out jns pop mov (bad) dec mov inc pop push push adc mov cli ss sbb cmp and dec mov and xchg mov aaa sbb pusha mov out divb inc inc lods jns xchg sbb mov inc imul stos mov pop pop xchg push mov adc test dec hlt push jbe (bad) (bad) lcall (bad) push mov pop mov test or or dec (bad) (bad) call pop xor inc mov popa insl jae mov test cmp dec loopne ret decl sbb inc xor aad push iret xor xor jo inc daa dec or jl push mov cwtl jl stc push das stos pop into aaa ljmp cmc mov pop cmp test daa mov xor popf mov push call adc mov inc (bad) (bad) (bad) pushl movsb lds out movsb fwait pop sbb (bad) repz and rcrl sbbl mov sti into sar or bound negb lcall mov (bad) pushl clc cmpsb push fiadd and adc lock push add pushf int mov push (bad) decl cmc in jge and xchg in (bad) (bad) (bad) jg movsb add cmpsl aad mov loopne push outsb jne daa xor (bad) decl pushl in jecxz mov adc in stc cmpsl mov mov mov (bad) cltd (bad) sub repnz sub cmp dec imul mov cmp test arpl rclb and pop or jae (bad) (bad) (bad) incl mov or xchg push dec (bad) call push rcrl insl xchg dec or (bad) (bad) pushl jge lock cmpsl and gs nop cmpsl in imul mov mov movsb mov add (bad) jns cmc lods xchg cmp clc packssdw push inc fwait cmc cltd mov sti sarl idiv (bad) (bad) decl fdiv jns inc pop lods mov xchg fs dec fwait dec sub adc mov (bad) cld das cmc inc mov fwait cwtl jle add (bad) ljmp push jbe fldenv pop div pushf sub jl in jge pop loopne add int mov mov das cmc ljmp lods in mov sbb jbe mov insb test add popf pop push cmpsb (bad) pop xor std (bad) (bad) (bad) in cmpsl inc jne xchg in fadds test aad cmpsl mov jp imul adc mov push clc or xchg xchg jge xchg les push xlat out sub fs jns decl sub inc dec add (bad) xchg cmp outsl ljmp out mov mov adc jg mov ss dec or mov jno push repnz mov sbb mov push xor jp pop dec cmp jae imul call lods aaa jne imul inc xor enter ret sbb add cmp movsb movsb adc jne dec push sub aam lcall fsts repz loop loope add arpl pop repz inc lods incb dec sub in pop test lcall pop out rclb mov movsl mov xor mov (bad) (bad) decl adc adc mov fcoml adc aad push fs (bad) (bad) ljmp lahf or daa loopne sub iret (bad) jo pop xchg (bad) test mov (bad) (bad) (bad) incl jecxz pop je aam push aam test sub icebp mov out lea ss iret (bad) (bad) (bad) sub or xor dec adc (bad) mov mov pop ljmp jns test xor out push pop (bad) (bad) (bad) jmp lea adc leave outsb fwait adc in icebp inc dec aam inc mov rcrl push sub adc test ja mov push in cli mov (bad) jg sub adc add gs addr16 mov pusha hlt jmp sbbl push fadd aaa in fwait lahf mov incl mov aas pushl mov jmp repnz dec jo ds scas cwtl test cli pop js fist jle insb inc enter cwtl jo stos je xor dec (bad) mov (bad) mov add add lea jmp mov and push (bad) (bad) mov out movsl cmp cmp nop scas push cmp jb inc jle mov and enter dec pusha mov and pushl or inc cmp hlt inc mov in pop or cld sarb test pop nop jl hlt int lods push inc (bad) ret cmp jge cltd xor cmp push jecxz call jg fcomps rolb cmp inc movsl jb jmp mov repz call mov jns jb mov je call add in pusha dec adc (bad) (bad) ljmp add cmp test jmp in pop bts xor xchg mov jns xchg sub add out sub idiv (bad) (bad) mov add js pop add pop fsubl jecxz int3 pusha xorl pop (bad) lret mov jns cmp decl xchg insb cmpsl sub jmp nop iret cmpl and xchg daa cwtl (bad) lcall lcall jg xchg and inc out daa cmp sub ljmp (bad) incl ljmp fs or xlat in jle mov inc leave lock fwait push test push in iret lock or lods xor jae leave lods mov test mov in jae adc (bad) (bad) jg (bad) (bad) mov or rcr push dec push rcl xchg popf data16 mov (bad) arpl mov lods add jne cmp mov xchg call movsb cli push or cmp (bad) pushl clc scas jne xchg loope lods fisttpl cmp stos jb or mov aas je pop loopne pushl or jl movsb dec jne lods lret aam (bad) jne cli add mov (bad) jmp push and (bad) out iret aam fist lcall stos movsl mov push push mov xorb scas ret pop jno mov rcll repnz (bad) (bad) (bad) pushl mov mov adc xchg xchg repz xchg (bad) (bad) (bad) jmp loopne adc and fsubr and mov data16 push pushf clc and popf repnz (bad) jp rorb les mov ljmp pop outsl stos dec inc and mov (bad) (bad) (bad) decl push sub sub pop adc jae push fist push xchg and add jo inc pop push lcall or mov sbbl jmp cmp dec (bad) into add jo ret fwait int sbbl fstpt fistpll pop mov jns push pop cs and ss xchg sub lea flds stos mov pop mov dec (bad) (bad) (bad) sti movsl adc test or pop fucom adc nop cld insb jmp (bad) dec xor (bad) xor sbb mov mov (bad) (bad) jg dec sub stos (bad) adc jmp cmp jae (bad) rolb negb cs mov sub (bad) (bad) incl xchg shrl mov jmp jb mov ja and pop cmpb ljmp jns mov sbb sarl sbb loop dec or and xor sbb (bad) (bad) push pop ljmp cmpsb cmp in andl cltd and aad add or (bad) (bad) ljmp sub aaa cltd push mov sbb je adc pop repz in (bad) (bad) (bad) fisttp loope insl push shll ja mov popf test in lret adc (bad) fsubl jmp (bad) decl cmpsl jo pop push cmpsl shll shlb mov sub leave mov in into dec fcoml arpl push popf mov mov popf mov es test aas cmp mov test ljmp sbb pop xchg dec xchg stos popf jae and mov inc (bad) (bad) (bad) call and subl pop pop mov pop leave add stos mov icebp cld jg rorl jno add sbb out fiadd mov inc mov xchg in lods (bad) ljmp mov es dec adc lods push mov loopne lret in lea outsl popf les (bad) (bad) mov push mov dec sbb jae ljmp pop mov popf rcl cmp push sbb xchg push lea adc movsb jl jnp in xchg (bad) int3 adc loop scas ljmp loope adc jmp or les pop dec fild ljmp or and cmp leave push dec inc shll (bad) ja sbb xchg test andl fisttpll push fsubrl mov pushl sbb dec ss cmpsb inc sarb xlat inc push data16 cmp lods jo sahf cmp rorl (bad) jo sub inc insl sub sar push dec std (bad) cmp (bad) daa lcall ljmp (bad) jg xor sti xor cmp iret daa rep cmp arpl hlt movsb pushl js dec push mov adc adc sbb daa decl mov cmovbe stos dec insb jbe jns scas adc cld xchg loopne sbb adc fwait jno out or mov cwtl mov fisttp sub stos or lret xchg mov movsb mov stos movsl incb push jp xchg mov mov fdivrp jg int (bad) out movsl push in addr16 mov and dec jecxz sbb adc adc mov mov imul push ret jo in ret push mov cs decl (bad) xor push rcrl mov imul js iret out inc lcall shlb jg ljmp pop pop loop sub or mov cld fiadd and dec push (bad) dec pushf dec test push sbb fist sbb mov ror in push xor addl mull nop xor and pop inc cli in in decl jmp jns sbb outsl and loope (bad) lock fsubrp jb mov jae jle call and mov jge pop jg ljmp call jg sub xchg mov mov iret (bad) (bad) (bad) jmp mov cmp lret cmp leave and push add or push mov call and sub jb neg adc decb pop pop loop jmp pop push lea inc cld mov movsl (bad) xor and and (bad) (bad) (bad) decl les sub push aad or dec cmc xlat stos int mov mov es cmp jnp add incl incl (bad) mov xchg out ret nop add fwait (bad) (bad) incl mov das rolb (bad) lock push inc mov aaa (bad) (bad) pushl dec xchg scas loop fiaddl and dec xor cmc (bad) call mov dec fisttpl call add mov pushl and pop mov sbb stos js lahf jbe sub lret jmp aaa (bad) call xor adc xor cmp xchg cmpsl push enter sub lcall (bad) call cmpb into daa je sub scas inc jle daa and sub jne,pn cmc jmp mov aad es test loop jbe mov adc decl fild lds je mov dec push inc push jae cmp lcall jbe lcall jbe lahf leave test sub mov cli call push jg mov in inc cwtl shll push (bad) ja jmp outsb stos push pop or fdivrs and xor (bad) call shl hlt int3 mov repz push sahf mov jl sbb imulb (bad) decl addr16 push ret jle imul or (bad) pop mov (bad) call imulb rcrb popf inc and mov pop insb icebp call push loopne pop in inc ds nop mov stc mov inc xor sub inc dec andl and aaa ja stc cmp bnd lcall decl xchg (bad) insl dec nop pop stos and or mov fs cmpsb xchg clc pop mov negb ret imul sbb add pop and cmp push or lcall cld jbe test cmp pop add xor lret (bad) (bad) (bad) (bad) (bad) jns pop dec outsl jp hlt cmpsb mov mov negl (bad) pusha pop shr jno outsl inc sar (bad) (bad) jmp fldenv or mov sbb and pop mov push loope sbb or icebp call sbb fsubr movsl cld and jbe adc (bad) (bad) call xchg pusha enter iret adc inc mov push xchg mov (bad) notb stos in sbb (bad) (bad) cmp clc (bad) popa and or or int3 add xor (bad) jmp shlb xlat adc lds sub rolb cli lahf bound cmp pushl lods shrl sahf je incb lcall push das mov dec shrb lods (bad) (bad) (bad) lcall inc (bad) imul mov lahf jmp sub jg jg sub pop xchg clc inc mov (bad) insl jo das cld dec inc inc dec outsl loop cld adc push js mov mov cmp xor aaa dec mov add ret push jl cmc es into xchg aaa mov (bad) (bad) jg sbb clc fwait cwtl jecxz jle pop jmp clc add push jo cld (bad) call (bad) sbb jae pushl ja push add call push push mov js lahf sub jns (bad) (bad) (bad) (bad) fstp lds hlt icebp or xchg jecxz nop mov (bad) mov sahf cltd mov sti outsl fsubr xchg xchg sbb and or jno pop push dec std (bad) jg pop aaa je add aas mov inc lret or sti lcall decl cmpsl xor ret adc mov xor adc incl aas jns std dec xchg mov fnstcw lahf (bad) (bad) (bad) call loope js rcll loope or pop fimull mov mov or ret js xchg ljmp ljmp das ret lods mov sbb or inc mov or (bad) lcall (bad) pop cmpsl cmpsl lock push popf and aam sub inc das (bad) negb lods (bad) hlt sti outsl hlt pushl lock mov sub outsl mov or mov jg push outsl mov dec add iret out mov (bad) (bad) (bad) mov pop push pushf mov xlat mov insb std cmp mov lods jg push out fwait mov test xchg (bad) gs pop fs icebp fs xchg cld push idivl inc or cmc out mov (bad) (bad) fbld mov or cs pop cmp add outsb dec mov dec dec adc xchg (bad) sarb mov aas cltd in add stos push pop movsb push lahf adc (bad) es sbb push (bad) enter xlat (bad) (bad) call jne inc stos je and inc out adc mov lahf mov pop test mov fcomp outsl xor aaa loop or sti (bad) repz jmp adc test dec inc mov jns outsb addr16 and sahf pop push loop add mov test add sbb popa push jb in (bad) (bad) (bad) fild imul sub cmp stc mov adc aad mov (bad) mov inc mov push test cmc mov lret (bad) jg mov call ljmp ljmp xchg jp repz (bad) in in push int3 pop mov (bad) ljmp imulb shrl lea dec mov push mov inc imul (bad) (bad) (bad) mov imul mov faddl fadds js dec adc mov rolb icebp mov out adc imul ja (bad) (bad) ljmp xor jae and (bad) and ljmp flds ja mov jbe (bad) (bad) (bad) jmp and and mov push mov sti xlat mov sti or loopne adc (bad) mov icebp mov stos dec dec cld dec fcomps xchg das je (bad) jbe hlt gs mov clc pop sbb pushf cld jbe sub fdivrl (bad) fstl loopne pushl and jle lret mov jns xor sahf mov pop cli insb frstor mov xor pop lret outsl mov lods ljmp dec adc test push sbb push push mov in js cld jns (bad) (bad) (bad) mov fs test dec icebp call dec push mull call lods movsl (bad) xlat mov sub cmp mov clc ljmp rcl sub fcompl (bad) lret xor sbb addr16 xor jmp or jbe sub sbb add dec cmp xchg cld decl jge repz xchg pop jle cmpsl pop stos (bad) cmp or repz (bad) ljmp repnz pop movntq out cmp lods ljmp mov inc cld inc cmc mov lcall bound outsb arpl movsl push mov mov sub outsl mov iret leave dec scas shrb notb lea and (bad) decl jno lock mov testl (bad) (bad) jg cmc xor add sub std sbb pop add out push cmc (bad) ljmp xchg lock cmp xchg sbb fdiv adc sar (bad) ljmp incb dec mov cwtl adc cmp ret mov test dec popf lea out push int jecxz stos xor lock fwait cmp and jns movzbl cmp in push xchg clc (bad) jg (bad) sub sub les add in xlat movsl repz je insl aaa pop insl xor jb mov pushl adc jbe adc xchg cmc or push mov inc aam add in repz (bad) (bad) call mov jno aad and jnp sbb push fwait jp daa sbbb sar (bad) (bad) call jmp icebp rorb add cli inc icebp add out add (bad) (bad) decl adc xor fcmovnb in cs repnz incl sub gs pop cmpl jo push daa mov int clc lcall aaa xchg push xlat mov aam imul dec shrb adc lock (bad) (bad) cld pusha lcall jb mov jb mov mov lahf xor (bad) jg mov adc xor (bad) int fyl2x xor pop loop xor lods ja add xor (bad) pushl clc push inc sbb fidiv cmp icebp divb xchg clc (bad) (bad) jnp cmp xchg in dec adc out dec daa hlt pop jo addl jge aad (bad) xchg dec and cltd loop fsub (bad) incl ss aas sarl (bad) incl dec or clc cs xchg mov pop bound mov clc mov and mov mov pop roll push xchg dec dec xor rorb call inc int3 call in xchg arpl cld jb pop addr16 cmp xor outsl hlt add cwtl push arpl andl (bad) aaa clc (bad) (bad) jl jno jo sub push jno add (bad) lret push stos cmpsb jp (bad) inc lret arpl xlat xchg outsb nop out dec mov inc add push push lock (bad) (bad) fildll (bad) push xchg pop es cmp adc in aad sub (bad) (bad) (bad) decl sub addr16 jmp clc ffreep scas mov pop daa pop sbb sub repz cli mov arpl mov into jne insl popf mov fcoms mov sbbl test dec dec fucom dec leave jecxz cltd sub sub in les fucomip (bad) jbe pandn pop ljmp push out xchg mov mov out shlb (bad) ljmp cmc mov mov pop jno xor loopne mov into lods aam test xchg and mov inc mov jmp dec push pusha inc cmp call cmp dec fwait aas push (bad) xchg mov (bad) mov pushl clc pop push imulb cltd pop inc xor xchg ljmp cli call sbb out lret jp sbb sub mov (bad) incl mov or dec add add ljmp iret imul jg dec inc dec cmpsl lods add mov ficoml (bad) (bad) (bad) (bad) pushl jmp aaa enter or popa xor or js cltd jmp lods ret mov cmpsb add lret jge inc std ret daa aas nop enter fnop (bad) (bad) call jle push add sbb (bad) in add sub sahf test lcall fstp aas je dec pop scas cmc mov int insl xor (bad) clc jge mov out lret inc insb jg mov stos xor mov pop call ss adc mov ret add jge insl push decl adc xchg inc repz xchg icebp inc (bad) (bad) jg (bad) lods sbb mov lods in xchg aad aad xor iret pop add cmp incl outsb push scas pop in ds int xchg je adc jmp fild xchg loop,pn in xchg jp jno sub and in lods cwtl idivl jle inc dec push mov fdivs shlb (bad) dec mov push mov gs push loopne pop push fcomip sub pushf nop mov (bad) ljmp fs aad jnp ds lods inc pop (bad) loope fwait rcl es dec (bad) mov push jl jecxz lea dec (bad) int dec insb cmp iret call cli pushl dec sub mov mov pop push mov jg sbb sti jo outsb mov scas ds pop cltd movb cld incl cltd pop fmul add cltd mov mov jmp xchg adc push (bad) maskmovq divl js or xorl decl fwait sub add imul stc cwtl sbb cltd fwait sub jmp test inc sbb jl pop stc mov call (bad) jne fstps mov ret xchg mov mov or mov jg push cli aad clc push pop leave addr16 dec out jns adc sub jnp xchg outsb mov mov das rorb jb jo (bad) aaa std (bad) (bad) decl scas rolb test pop data16 adc nop xlat jl in (bad) decl mov adc inc pop test scas ja xchg mov es sbb mulb cmpsb ret and mov jmp cmp xchg add es int3 xchg push and mov or (bad) lcall cltd sbbl imul faddl jecxz xchg lods test xchg cvtps2pi (bad) or jns das mov mov rcll jg cmpsb (bad) lods push or xchg push adc push cmpsl insb cld (bad) ljmp movsl mov fimull shll repz adc push decl jno add movsb mov cmp cmp out cmc (bad) decl pop xchg pushf xchg dec pop out shl stc aas lods mov pop (bad) loope add inc add xor push xor leave mov fdivr pop cli decl cltd fdivs call inc insb push cmpl loop lcall lods faddp push fs mov adc insl in (bad) (bad) (bad) in xchg add scas lret or aas lea xor outsl mov pop xchg or (bad) lcall dec sbb pusha or xchg cmp or pop mov sti sbb mov pop call mov jle movsb rcrb mov into jecxz or (bad) pushl pop push cli mov cmp mov sub mov xor mov cmp (bad) (bad) incl push mov inc inc jl fcomps mov sbb (bad) decl jnp imul jmp sbb call pop loopne inc pop mov jmp jbe push bound jge mov jnp repnz mov mov fistp dec pop xor pop mov dec and inc cmpsl adc std inc dec mov (bad) mov fldl add cmp out adc jl mov pushl push mov and cmp repnz sahf (bad) (bad) (bad) lcall (bad) fbld sbb mov lods jecxz into push mov push mov push xor lea (bad) (bad) fdivl outsb pop inc push push mov ss aad and outsb jo decl inc roll pop movsb sbb (bad) decl mov adc cmp imul push cld ja hlt fstpt nop popf int or or decl (bad) push outsl adc dec jbe cmpsl sbb push hlt inc aam sar (bad) mov xchg jb aas inc mov add bound sub mov mov mov pushl outsb cmp push int3 js (bad) (bad) mov (bad) (bad) std (bad) jg mov sub in lea pop rol sbb push and and xor xor pop repz xchg je cmp aad rorl sbb xor cmp xchg lods cli orps in (bad) (bad) (bad) jmp pop sub xchg aad stos mov dec int pop mov dec (bad) jle mov jbe jns (bad) pop mov mov int3 dec (bad) (bad) (bad) ljmp call mov rcrl add lret pop out lea ja out add incl mov xor sarl lcall test and test lcall in call stc fmulp add pushf ljmp mov lea sub mov test mov call repz fadds clc push push lds push xor test ret jmp cs xchg incl jmp and int out fdivrl mov movsb jno (bad) (bad) (bad) js xchg imul add lcall frndint out (bad) hlt out cmp jb shrl jmp (bad) and push and pop xor and (bad) (bad) mov (bad) scas dec cmc add bound dec cmp shrl in ss jmp lock test cmp pop fwait loope fcmovnu outsl imul psubusw (bad) (bad) xchg jg sbb shrb mov or test xchg lds jnp adc fs (bad) xor jg fnstsw push popf icebp lahf jg jg cmpl fadds (bad) repnz movsb pop dec jle mov add ja in jmp (bad) dec add pop inc popf ja out adc inc cli mov xchg inc ret jmp mov (bad) decl pop xlat ret ss les adc shl (bad) ds lock icebp (bad) pop or mov sahf push lcall lods ljmp cli mov adc ljmp push lods mov mov mov stc out adc rcll movsl sub decl iret roll push mov icebp test and iret adc fcom inc (bad) mov stc bound push in lret aaa jg bound popf ljmp cli ljmp mov addr16 test sub sub loope stos jne (bad) (bad) call pop push push pusha dec xorb bound movsl mov adc ret hlt (bad) ljmp ja and mov jge dec lds in (bad) or (bad) jmp xor dec sub addr16 lea ja inc imul or pop (bad) mov mov notb pop cld cltd das rcrb (bad) pushl iret arpl sub icebp pop xchg xor lds out cltd pushf jg loopne cmp adcl or test xor fwait lret loop adcl and (bad) (bad) mov out xchg jns es fcompl bound pop cld add dec push neg mov es xor lcall mov fcmovnbe lods sub outsl aad sbb mov repz fisttp lock decl sub mov lahf add lcall (bad) jg jnp pop dec add push icebp andb xchg (bad) scas mov sbb js test fcmovnu xor or inc push std pushf sti xor adc push sub push mov jmp je xchg les (bad) pop insl jbe mov movsb mov fstpl enter cmp (bad) call or out mov sub mov xchg fs popf jno xchg push (bad) call push cmpsb pop pop outsl mov pop iret cld psllw sub test jbe gs loopne add sub arpl call lret out dec jg orl dec mov idiv fucomip call cmp adc (bad) std stos mov push int3 pusha sahf (bad) jecxz outsl icebp imul mov arpl lods mov inc mov aam lea xor call sub or aam (bad) mov in cmp push adc les jo das mov mov mov and inc sub push mov outsl (bad) (bad) pushl sbb aaa jmp dec lcall inc fnstsw (bad) scas xchg inc fstp and mov neg sahf cmp (bad) (bad) (bad) mov pushf fs sti stc and daa pop mov lods jle cli or jmp or or daa (bad) (bad) (bad) (bad) out mov push leave or test (bad) imulb divl cmp add dec outsb or xor inc icebp repnz inc cmpsl adc flds jle imull (bad) dec shr and int (bad) (bad) (bad) (bad) out inc lcall pop mov (bad) cmp rol out test imull sarb (bad) (bad) lcall idivb insl pop mov xlat fidivl mov push xor inc pop pushf fsubrp outsl hlt out xor or pop push dec les and cmc neg sub mov sbb shll (bad) ljmp sbb test lret test repz mov ret lea xor cmpsl insb fsubrs or mov mov or outsl mov (bad) repz xlat or stc inc les das sub add je ss adc div push cmpsl sbb sbb (bad) (bad) call adc loop mov sbb or xor std loop xchg add (bad) incl pushl cmp insb sarl pop mov div sbb (bad) pushl ret enter pop adc rorb loopne aaa fs mov incl imulb sarl sbb mov sub mov into inc xchg (bad) add into add call (bad) (bad) (bad) jg scas mov push (bad) lock insb mov repz popa mov call xchg xchg clc ret mov insb mov push sbb mov mov pop jmp jns in (bad) pop inc loope aam add (bad) (bad) (bad) pushl frstor fildl dec adc mov fcompl je stos aaa clc push incl xlat stc cmp sti rcrl dec mov decl cmp in dec pop sbb push (bad) dec mov (bad) (bad) lcall jg mov fbstp xor push jp xchg gs call (bad) mov in jnp stos xor cmpsl addr16 jne lret push incl (bad) in cld fistp inc push std push hlt jne test fwait loope idiv inc fsubp aas xchg repz xchg fwait pop std loopne push in icebp or push cwtl cmpsl and xchg outsl add add sbb fs imul ljmp mov mov fs icebp sbb test mov xchg add sub dec mov and mov add hlt (bad) jge pop mov cmpsl cld mov stc inc mov test dec (bad) (bad) call cld sar pop aas push xor (bad) mov sub ljmp (bad) fldt adc xchg lcall mov xor (bad) mov pop cltd dec pop mov data16 jne stc test movsb or (bad) (bad) mov mov pop test stos sahf mov in xchg xor cmpsb movsb xor cmp outsb (bad) (bad) mov push jae xor enter pop dec cld test mov jmp push xor cmp fucomip ljmp sub inc mov cs sub in jg (bad) fcomip jb xchg dec stc mov aam (bad) fnsave sub popf repnz (bad) pushl into lock inc xor inc stc aaa cmp push lcall dec cld movl scas in test cli pop mov stos aam leave (bad) xchg push pusha test lock mov (bad) sub sub scas add cmpl sbb iret adc sti push pop clc xchg test adc leave sti push jmp push clc faddl mov push sbb aam inc lods lods xor xor jg (bad) (bad) jnp xchg call jmp xor cmc mov (bad) ljmp movsl data16 mov jp pop nop xchg mov (bad) std fist ljmp mov fidivrl das andb incl inc mov sbb in int3 ret (bad) (bad) (bad) pushl test pop sti xlat ret shrb mov push ljmp enter icebp (bad) pushl and fs cmpl pop sbb mov pop pop (bad) pop clc in push jmp test add (bad) mov inc imulb fstp loopne (bad) fdivs lods push jne leave mov and mov popa (bad) aam pushl sbb cmp daa shl jno movsl cmpsb nop sub out or push push xor (bad) mov xchg out push push jmp xor fwait cmp jbe pop jp subl mov incl pop jae arpl lock dec lret mov ds jge imulb stos (bad) (bad) (bad) pushl jmp fisubrl arpl jge lds cwtl aaa (bad) mov pop inc or imull lahf mov xor scas or (bad) negl xor aad inc ss iret jg push mov pop int setns incl in (bad) ds xchg lcall (bad) cwtl inc sub jbe (bad) (bad) pushl das sbb jmp push adc (bad) lcall ds loope mov addr16 in jg int3 jg xor ljmp push repnz dec setae mov (bad) (bad) (bad) pushl cmpsb fcom sbb and outsl add frstor js (bad) scas cld aad push cmpsl inc cli fnstsw incl push mov call arpl ljmp sarl outsb jo or icebp std (bad) jne (bad) inc loope cmpsl add (bad) (bad) jo mov jg or jmp xor jno jae adc stos movsb add scas (bad) stos jg jg add mov cmpsb push in xchg bound inc jg (bad) ljmp add xchg inc addr16 push sub lea cli dec pop pop dec scas adc inc lcall cmpsb lods pop dec scas fidiv pop xchg push jge inc test nopl (bad) decl pop jo imul dec fsub push lret (bad) cli movsb adc incl pop int pop orl adc push cmc push xchg push lahf aam (bad) incl sbb add cmp pop cli inc popl mov ret (bad) mov (bad) iret lret (bad) popa mov (bad) into mov daa cmpsb out xor mov addl push aam mov add stos int3 (bad) mov lods cmp fsubs lds push out jecxz ret fistl dec mov sub add (bad) ljmp cld (bad) popa (bad) xchg lret cmc cmp imull lcall sbb dec cmpl loopne imul lret adcl pop out (bad) movsl test incb aam push das repnz rolb xchg xor scas sbb (bad) pop iret cltd scas mov sbb mov icebp hlt push xor lahf (bad) (bad) (bad) push rcll (bad) or jb inc out jecxz std and inc negb xchg outsb test out mov sbb stos andl (bad) adc jno mov (bad) neg enter popa testl add (bad) push adc popa (bad) (bad) (bad) jg inc call or leave cld aam cwtl pop dec pop enter aam sar outsb jb (bad) fucomip das cmc mov movsl mov pop rcll clc and (bad) (bad) (bad) out ret in inc sub ja js push add outsl addr16 jnp push xchg loopne jge (bad) (bad) decl or pop add dec sbb imul inc add scas out sbb inc mov rcrb popa loopne test out pop mov push add mov sar mov in (bad) pop push inc xchg lds push fiaddl (bad) pop rclb (bad) (bad) mov cmp fucom jmp jno lahf notl and (bad) (bad) incl ds cmp (bad) neg leave pop popf mov dec adc fisubrl fcmovbe sahf inc call outsl mov xchg adc popf inc adc or ret pop daa mov cmc xchg sub inc inc (bad) (bad) (bad) jmp into mov xchg xchg rcrl or fcomp push dec rcrb jecxz shr dec push pop mov (bad) ljmp mov cmp iret test cwtl sbb repz (bad) (bad) pushl sub js xchg jns fbld cmc sub mov sub rorb aam stos add jo out lret call test (bad) in jecxz out stc dec mov mov call (bad) jg push neg or sub roll jbe dec mov clc fldenv xor mov (bad) fdivl and (bad) (bad) lcall jae cli jle daa sbb mov push imul push (bad) (bad) lcall sbb mov cmp mov mov jbe insl orb fwait mov out shrb icebp decl pop decl jle lret xchg mov fnstsw sub mov adcl fldl2e push xor (bad) (bad) (bad) aas mov lcall add mov sub hlt loop pop push out std cmp mov (bad) lcall lea shlb xor cltd (bad) xchg inc mov adc cmp negl aas add imul mov (bad) (bad) (bad) incl int3 cmp imul ljmp mov fistp adc (bad) ljmp pop inc sbb mov push mov push mov jmp test or jp push jmp inc jge jne and cmp aaa clc ljmp adc aad xor movaps adc (bad) (bad) (bad) (bad) out push adc pop sbb mov xchg cmp cltd pop mov pop add fidivr jg (bad) decl push pop mov add sahf in pop jge inc push lods (bad) (bad) (bad) pushl dec cli mov xchg out push dec and mov js push pop jno inc sbb and mov mov push pop icebp sti xor icebp (bad) mov push mov mov fcomps (bad) lret in mov jg test imul dec or and cltd mov mov in js std (bad) (bad) jns push push dec out fcmove xchg adc jl insl repz outsl jmp (bad) outsl jl push rcrl int3 xchg pushf xor jmp jg mov enter popl imul aaa loopne clc out stc rclb push mov loop popa sub jecxz add sbb jg outsl xchg cmp or and insb stc aam lcall cmp rcr jnp lods aaa pop and jmp (bad) push in aad test cld jg push pop fnop mov sbb push push cmp mov jo leave pop mov mov push or dec inc (bad) incl fbld rolb cli popf (bad) (bad) (bad) mov cmp and gs xor out pusha mov push test (bad) (bad) decl icebp sbb int sub cmp mov push xor aad cli jns nop mov incl xlat cli mov add inc inc lods inc cmc enter or or fisubr or or adc mov outsb inc mov test sub jmp sbb push (bad) stc adc das stos pop add sub decl mov icebp pop xchg lock pop mov cld (bad) mov push fwait stos lods lahf push xlat push iret push bound incl out and inc jp daa lods and push out in fild cmp int3 test (bad) adc popf (bad) (bad) (bad) decl rclb push inc or ret aaa mov adc mov inc dec cld into cmpsb jbe iret icebp lea mov paddsw push inc mov xor sti inc mov pop push stos inc daa inc scas and ss (bad) (bad) decl mov push add inc xchg add add adc push cltd inc sub fistp bound orl pop push or push testb and adc icebp (bad) pushl (bad) inc lds mov pop stos std pop (bad) fistp push adc jmp mov popa xchg cmpl pop loopne mov addr16 mov mov or pop adc movsl (bad) call rcll enter imul fiaddl outsl cmc (bad) ljmp fadd cmp rcrb sarl push jecxz (bad) jmp xor mov mov and arpl or add (bad) in jg test sbb sbb ret ss xor inc (bad) (bad) (bad) jmp leave dec lret mov es dec pusha arpl in cmp lret and cmp stc roll dec lahf lret add and cmp mov (bad) repz ret lcall mov mov mov add fistpll xchg dec ror (bad) (bad) jmp inc in (bad) mov es xchg xchg xor xchg mov mov movsl mov adc (bad) (bad) (bad) incl add cs xor ja mov inc outsl ret ss mov xor mov or aad adc inc jnp das jp (bad) or ljmp decl ljmp loop pop sub in rclb pop repnz mov pop push jg (bad) decl aam sbb and mov sub cmp les mov rol std jg mov dec inc das mov mov sub (bad) jg incl clc pop lock addb push pushf push and jg dec sub inc nop mov daa mov inc dec mov xchg insl sub (bad) (bad) xor rol xor (bad) loopne or or jb inc mov sub outsl cmc jg js into icebp mov test pop lret mov repnz enter (bad) shr pop mov clc popa outsl xor ljmp sar mov jecxz fsubs mov jp push enter inc jno cmc ret jns js pop mov inc mov xchg add pop loopne jmp sbbl pop (bad) jbe ret or leave cs fistp ds mov add or into push scas mov (bad) jno add (bad) call sbb divl enter inc pop xor orb fucom in adcb (bad) jmp cwtl inc push xor sti jno test enter cli (bad) (bad) pushl mov dec rcll add sbb arpl jle (bad) (bad) pushl cmp and jo push cmp pop inc xchg jb lcall loopne pushf pop (bad) call (bad) shrb das pop push les cmp push (bad) incl daa push push dec sahf pusha fwait lahf inc int mov outsl sub icebp ljmp andl pop adc mov fs adc fucomip lret (bad) xchg fldt cmpsl or cmp cmp sti (bad) lcall test jnp mov mov xor in inc out lahf dec lcall (bad) jg jp inc aad adc pop test add and insb mov (bad) movsb aam (bad) incb pop pop add cmpsl icebp icebp shrl xchg or pop xchg loop add mov idiv je sahf sbbl cmp les xchg mov cli (bad) decl shlb sbb push add jb in fs push (bad) (bad) (bad) sbb nop stc and dec sbb and (bad) (bad) (bad) ljmp and aam test subb fsubl or (bad) dec (bad) dec fmuls pop mov (bad) inc mov mov mov inc mov sti movsl ljmp outsb add inc and and mov dec iret cs (bad) (bad) lcall out pusha xchg clc dec inc inc mov xchg dec insl jne aad inc movsl (bad) and dec stc mov jae mov test out jg ljmp hlt add lock jmp xchg es mov repnz jge (bad) (bad) mov enter dec jae cmc mov in and not mov sub (bad) push pop sub sub in mov xchg ds divl or mov lods push inc fs lret push mov (bad) (bad) call (bad) in mov inc sahf cld leave jge outsl sub sbb sbb cld (bad) fucomip (bad) mov mov adc xor xor aam sar (bad) inc mov dec not in jb mov mov fwait push lods sub jge (bad) addr16 lcall lcall leave mov sub xor popa (bad) pop imul das cmc fild jo mov dec (bad) lcall ljmp aas push sbb jp (bad) pop js add and xor in inc mov ljmp or add fwait movsb push out sbb sub dec pop mov pop adc icebp (bad) dec (bad) or imul ljmp (bad) (bad) mov rclb scas jnp xchg cmp dec pop jnp pop mov sbb xchg pop subl mov je jp dec add (bad) pushl fnstcw lods js jo dec lock mov ljmp in mov popf (bad) xor inc cltd dec jmp in adc test in jb jbe mov fucomp mov scas pop jno add push cmp sub xchg adc cmp decl std adc mov pop das shl sub cmp cmc inc leave xor (bad) out xchg or lahf in mov incl call ss cld adc (bad) mov ljmp addr16 (bad) (bad) (bad) (bad) sbb mov sbb sbb jmp mov jbe popf out (bad) fnop xchg clc in pop adc push shr mov int (bad) cmp push mov inc cs (bad) pushl vmread cld testl pop out sbb in (bad) (bad) sahf ljmp push push xchg pop cmpsl int data16 add (bad) (bad) pop (bad) push sbb lds jbe movsl inc and xchg clc test mov stc inc fstpt outsl cli push daa lret mov (bad) (bad) dec inc mov jno popf cli push jle mov lahf push sub adc adc jg (bad) lcall out rcrb fs cwtl push stc (bad) inc and (bad) (bad) (bad) call sbb sub loop ret fstpl iret cli push dec mov jle (bad) (bad) (bad) lcall pop adc adc sbb movsb push xchg cltd inc jno fwait push jae cmp lock sub (bad) in (bad) fdivs ja (bad) in mov and jle fistl int3 adc mov fbstp jmp cmp xor decb adc pop adc mov movsl fbld ror adc jmp (bad) (bad) (bad) cmp and daa in out pop mov pusha jle and (bad) or loop (bad) (bad) (bad) ljmp sarl mov sub cmp nop jl outsb arpl add imul (bad) (bad) stc mov and push out xor pop js mov ret jg jno xor lea (bad) (bad) call out das nop inc mov or xor xor pop xor mov inc call xchg adc test sub clc cmpsl pop movsb sbb cmp xchg mov jg sub xchg (bad) ljmp ret or push add addl (bad) decl (bad) data16 add mov sub aaa cld das cld pop fsqrt mov int insb dec inc push xchg das std outsl (bad) shrb jae (bad) jp sub pop xchg and (bad) call mov movsl cs mov in loope adc fmuls movsl fnop (bad) xor outsl icebp pop clc daa test je out xchg xor mov call lret push (bad) ret icebp cmp popa lcall lret (bad) negb lods or xor gs and cmp enter pop cli sbb push mov mov xor (bad) ljmp xchg stc cmp repz lods (bad) cmc sub sar mov add jg sbb inc mov push arpl mov mov cli push loope ja mov sti sub sub jle (bad) pop (bad) clc aas mov std jg pushl pushf xor fwait xchg inc push insb mov inc cmpsl adc sub inc dec pop (bad) jg outsl fildl shrb inc mov mov dec xor movsl test cmp out lret (bad) cmp call jg sbb loope push dec stos push sti lcall test sti and mov repz jnp clc push jg into fstps imul xor ret xor gs icebp aam add outsb data16 add or cld das add xor add push jg inc jae fldt adc insl jns je lret jg ss cmp pop test leave rolb or jmp and (bad) ljmp pop cmpsb loopne mov jnp xor mov sub mov mov das cmc jecxz mov dec adc negl mov xchg cmc pop std lcall pop clc int dec stos jno inc push popf jae add andb jg mov bound sti insl insl sbbl std mov xchg out mov loopne sub adc xchg jne mov cmp aad (bad) (bad) inc ret mov adc adc gs loope inc mov jp jno into mov shrb (bad) (bad) (bad) mov int fs and out cmp popa sbb and cmc sbb and insl sub hlt sub sub je lds repz mov sbb add rorb xchg xor inc sub (bad) js mov xchg fcoms lock mov insb sbb jne lea push incl mov sbb js repnz jg incl inc sub jecxz mov fwait out xor (bad) (bad) mov popa pop mov movb jae aam push pop and shll xor in dec mov mov adc sbb hlt (bad) test inc jo in and aas mov shlb movzwl xchg test nop cmovge (bad) (bad) mov call pop imul je pop (bad) (bad) (bad) (bad) fcomps sbb fist in xchg dec xor xor daa dec mov mov sub inc sbb sbb (bad) (bad) cmp mov ret push sar cmp sbb fdivr (bad) js insl mov xor clc divl push mov into and (bad) sub fiadd (bad) incl ds andl cmp xchg ja cmpsb inc in jno xor dec sbbb decl pushl adc mov push and arpl fsts daa jg (bad) pushl add add pop cli xlat pop or xchg subl cmpsl lods xor xor pop pop xchg jae cmp jg dec inc adc enter lahf jb arpl int or (bad) (bad) (bad) lret hlt fs or mov mov add cmpsl mov enter incl cmp pop jbe adc jl cmp lods mov jb mov add arpl test mov fwait mov jne mov stos mov decl (bad) jmp inc std mov jns pop (bad) xchg imul (bad) cmc pop ljmp (bad) out scas lret sahf vmovups je add adc aam (bad) mov ret pop dec (bad) mov jp loopne mov or jb mov jb mov xchg push scas jae cmpl push out adc cmc cmp mov stos pop cmpsl outsl mov (bad) (bad) repnz or lods mov push (bad) int xor xchg cld ds and xor cli sbb inc adc inc xor ljmp xor ljmp in int (bad) pop call sbb (bad) mov (bad) (bad) mov inc imul xchg push inc stc mov mov lcall (bad) (bad) (bad) incl jp xchg and int3 jae and or cmpsb lahf pop adc sbb repnz inc push mov dec std push inc mul in (bad) jmp xor sub subl mov fsubs xchg lea fs (bad) mov rcll sti jge,pn shll call inc iret lcall js or (bad) aas fidiv mov out inc fnstenv inc outsb pop stc (bad) or (bad) call cmp out jp jle mov lret mov mov inc les mov and xor andb daa enter jae lret mov push lea pop xchg lods mov mov jp or mov xor jg,pn (bad) lcall hlt (bad) clc sub cmp das les adc sti pop aas pop sbb cmp incb jae call (bad) sub xor les incb jg rcr mov xchg jnp leave adc hlt movsl decl sbb rclb lods pop xchg or (bad) (bad) (bad) call push fcmovnu pusha (bad) mov mov test fstl daa loope pop xor push cmp lcall jp aas xorb mov jge lea mov mov addr16 jmp mov xor dec dec in or ljmp sbb pop push adc call daa sbbl jl jl (bad) icebp jmp aam sub mov fildll sub (bad) fucomip (bad) mov popa adc gs mov int push outsl push call hlt sub test ret or inc mov jp stos add es sar iret popa scas pop ret sar jle pop bound sbb inc mov pop pop and dec xchg mov sar adc icebp xchg mov jbe (bad) (bad) jmp jge push pop cmp xchg mov sti dec xor mov or lahf fisubl test jle pop cmc std subb cmp push push xor clc das icebp icebp and stos mov dec imul add (bad) (bad) (bad) (bad) incl push outsl (bad) sbb mov cmp hlt and outsb push out out ljmp (bad) (bad) incl push jne dec mov and (bad) mov push test (bad) decl pushf mov xchg pop mov sbb out rol aas sub incl and mov (bad) mov hlt (bad) inc inc mov xchg cld jne lret leave add mov (bad) (bad) cmp icebp dec jg jbe or aad jmp jno lds outsl jne sbb lret xor mov aad enter ljmp in mov decb rolb data16 push jae push sbb mov cmpsl sbb neg dec or pusha (bad) pushl popf cmp or cmp dec push mov fsts jae (bad) mov (bad) hlt sub add sub loopne (bad) (bad) call aaa push mov insb cli sub xor movsl mov addr16 lock add (bad) (bad) (bad) cmp xor pop imul cmp push push adc mov dec jg cwtl or push jo mov lock cli or or (bad) jno test mov (bad) (bad) (bad) jmp add in inc xchg and pop rorl in and cmpsb sub push mov inc and das hlt decl push add mov sub in mov test ja adc inc lods (bad) cli enter (bad) (bad) pushl dec or rorb leave xchg jne add das out das adc lock andl sub cmp xchg pop mov or (bad) (bad) mov xchg mov push test sub push or dec lods std xchg mov ffreep lea pop jmp (bad) jg pop sbb inc in sbb pop out (bad) or sbb enter sbb mov (bad) loop hlt adcl stos mov mov daa mov test or ljmp mov icebp jmp bound (bad) (bad) call mov aam sahf sbb lods xchg mov mov pusha sub fwait inc enter (bad) mov sub mov mov ds push mov (bad) lock push mov sbb push jmp jbe gs push shrb loopne pop scas (bad) mov jae pop or aam aas cmp decl and lods leave mov mov jecxz (bad) out sub js clc pushl push jbe jmpw cmp aad stos mov (bad) mov pop pop lods mov outsl sahf push push sbb inc inc cld cli (bad) or cmc dec shrl call js icebp xchg sbb inc push int (bad) and std sti or adc mov mov inc dec push mov int3 cmp jne imul aam mov cmp pusha aad add mov shrb push mov (bad) out lcall das fmuls xor out gs movsl (bad) (bad) (bad) fucomip aam add inc inc in mov stos xchg sub int push mov cld push cmp sbb jns lods xlat adc (bad) lcall push mov xor icebp lret aad movsb in dec ds sbb dec fimul mov neg mov mov (bad) call stos sbb das lods push pop aam mov inc loope or mov jae add outsl jl sbb (bad) (bad) dec and fucomi cwtl dec xchg mov stos adc inc pop push jae adc bound and (bad) (bad) call lret scas bound cs push pop int push fldenv stc mov pusha sbb dec std or fisub sar xor cli ljmp imul jmp int3 inc and jge (bad) ljmp cli repz lock jb xlat xchg pop out mov es jmp repz and (bad) jo sub movsl mov pushl imul jb xchg daa jo pop loopne ja ljmp sbb cs js adc xor or ljmp (bad) ljmp dec xchg mov mov pop imul (bad) decl and lds out mov pop cli pop cmp pop in pop xchg jnp cli repnz in clc fucomip sbb outsl adc shlb pusha jo mov hlt inc (bad) (bad) aaa jnp stc popl jns lds popl pop (bad) (bad) inc lcall sbb mov dec int mov int fistp and test idiv (bad) incl jne (bad) lcall mull stos adc (bad) jno or mov cmpsl pushf js movsl insb cld (bad) incl pop sub aaa xchg test mov jmp inc nop (bad) sti mov cmc cld mov sub mov std (bad) (bad) jg aam std sub add daa dec cmp cli je orl sub pop or fildll lret int aaa ret xor pop pop out cmpsl or fstpt or mov sbb ja in loope (bad) (bad) mov jae add scas scas test jecxz pusha ficoml out in std movsl pop inc jg and (bad) lcall faddl mov (bad) mov jno dec (bad) leave and mov test fstps rorl inc jecxz mov jg sar xor cmp inc adc out fistl or add popa xlat push inc fnop (bad) (bad) cmp arpl adc mov les test repnz (bad) (bad) lcall push push in and dec push movsb push (bad) into scas cmpsb xchg push push lea push ret mov mov icebp pop ror sub add lods add rorl enter (bad) (bad) (bad) jmp push ja nop and and inc push lds lret insb cs clc in cmp cld movsl adc enter bound scas int3 push inc sarl ret (bad) (bad) (bad) pushl cmpsb xor xor mov push in cmp pop stos mov ds mov adc call xor into add mov dec jecxz fcompl dec aaa push adc (bad) jg fistpll std in jmp xchg pop adc cmpsb xchg fucomi sub (bad) lahf jp rcll clc pop cli lret popf jbe sar mov cmp jl pop jno inc hlt push (bad) push loopne repnz lock loope sbbl ljmp int xlat or into fisttpl pop fnstsw mov stc loop sar loopne cmp dec (bad) xor pop insb dec xor xor adc jo das xor or (bad) dec es popa (bad) repz (bad) (bad) incl sub push arpl out int shl sbb (bad) adc insb jecxz (bad) call icebp xchg mov popa icebp imul int3 ds jmp xchg mov roll lds ljmp or mov mov push leave mov adc sub pop sbb mov (bad) sahf mov dec dec mov sbb andl out shrl adc enter imul xchg (bad) (bad) (bad) cmp inc jp int ja adc push pop bound in pop mov inc rcll (bad) call outsb std xor mov sub ds lcall push fxch mov (bad) (bad) dec rcrl sbb pop mov jne fldenv data16 into test push jge outsl insl xor mov cmp mov jne test (bad) jg fstps imul xchg adc adc cmp ja (bad) call cli dec lock xchg nop roll mov ja mov xchg jecxz (bad) jg iret push mov scas dec mov xchg das jne jae adc daa add mov popf xchg xchg sbbb mov push mov fbld in add xchg add mov lcall (bad) adc adc imul (bad) sub aaa decb mull mov lock mov mov insl jg mov adc xor jnp and jo cmp aad jo lcall decl lods (bad) xor or pop lods jmp dec mov mov js movsl jle push mov dec les out ret add or outsb jge movsl call lods out test dec push (bad) enter or test mov (bad) fist or sub je shrl mov dec (bad) fildll cmp mov mov push (bad) pop inc aad mov (bad) pushl sahf sbbl pop test sub push shll test and (bad) (bad) decl mov ret lcall gs inc stos xchg lret cmp fsubp lahf lret (bad) test (bad) out xor cmpsb movsb xchg cld or mov mov adc push (bad) jg jl xchg cmp mov add arpl pop cmp jne cmp pushl (bad) pushl mov sbb fidivrl dec jp jecxz mov inc or shrl je lret (bad) idiv ljmp std (bad) (bad) decl and jb pop mov fdivl xchg mov addr16 mov xchg jns rorb (bad) jg jb sti xchg or aas cltd dec shl repz scas add jae imul das dec inc fdivr push (bad) (bad) fdivrl sysret fidivr pop push into mov xor inc push mov rorb cmc pusha mov (bad) (bad) lcall outsl fwait and add fsubs imul mov mov dec (bad) inc call addl loope add (bad) pop cmp or ljmp cmova movsb inc jecxz push out into cli push (bad) (bad) mov in dec sub insl cmp jmp repz push leave shrb (bad) jp mov xor push pop jne (bad) and mov or (bad) xor push loope (bad) test call mov dec lds faddp addl xchg jbe push sub pop out das lock (bad) ljmp xchg (bad) ficompl test push iret scas push movsb clc dec std outsl jo incl mov sbb sub pop cs mov in movsl add add clc rorb fildl mov ljmp scas or or stos rol mov xchg stc in push jb jno xor or jmp movsl mov adc cmp dec xlat (bad) fwait mov dec rcll sub xor ss pop (bad) js pop out out mov (bad) lcall rorl ss lock fidivrl scas icebp lahf adc mov (bad) (bad) ljmp mov orb sti rcr cmpsb pop mov mov repnz mov in cli pop std addr16 (bad) mov adcb stos or pop cmpsb sbb sbb cmp lods call (bad) call xchg and sub xchg adc aaa (bad) mov mov sahf nop dec rcr sahf sub jae mov add popf ror push and pop xchg hlt mov or ljmp std fstps call jecxz shlb fwait pop imul ret lcall std push (bad) cs in push js pushl test push cmp fwait js lds and sti incl xchg sbb mov sbb gs inc or (bad) xchg mov (bad) (bad) lcall je lock and jae xchg shlb movsl fcoms mov fcos pop (bad) rcr in fidivl or out sub inc sti sete push lcall push dec lods push mov ss or lods add pop (bad) incl imul jl fsubrs movsl outsb sti push dec test pusha sbb jg into fsubr loope or fwait mov iret mov cmpsl sbbl (bad) mov mov lahf adc jno inc lahf push xchg rol xlat pusha pop (bad) fucomip std out mov jo lods (bad) out leave ret ror jg (bad) call insl sbb or loop adc pop jp movsb push repz (bad) cmp push mov dec fistpll subl pop xchg jp fidivl popf xlat mov jecxz xor dec xor add push jecxz or sbb aad imul je mov add aas imul les stos inc jno mov sar in (bad) ljmp push jno sub mov push movsl ja mov mov mov adc sbb and sbb jg outsl mov pop xchg pop or mov rolb push jne test push pop cld shr test adc sbb in push scas cmp daa mov xor and (bad) ljmp cltd insl (bad) pop mov pop popa call hlt (bad) aam push jmp sub (bad) (bad) (bad) (bad) js int3 cs xlat ficom gs fistl push in mov adc imul mov (bad) (bad) (bad) lcall xchg sbb mov in jbe aas sbb leave xor cmp pushf (bad) icebp jle insb mov (bad) jge fs inc enter mov in test aad in (bad) (bad) (bad) jg jp inc cld int3 (bad) sub jnp xor xor enter shlb xchg sbb xchg clc fist add xchg xchg jne mov and lret ja popa sub pop imull mov or ljmp (bad) sti and clc sbb movsb std mov push addr16 call (bad) jecxz add cmpsl test cmpsl ds ret outsb mov lret jge adc mov decl cmp daa pop jge shll pop sub xlat cmpb testl lea dec xchg mov (bad) loop scas hlt pusha in (bad) (bad) call into fbstp pop adc mov jno add mov js,pn lods das cld aaa mov cmp xchg jno cltd enter std aaa jbe (bad) mov test sub cmpsl sarl or mov and and enter mov push stc and fldcw cmp dec pushl pop ljmp lock sub rcll loope xchg cli add imul pop pop jns push jecxz jmp psubsw faddl test int lret jae push js shrl outsl cmp push paddsw pop or mov (bad) (bad) (bad) inc add dec mov xchg loop xor lds or sti adc xchg pop mov mov (bad) (bad) (bad) call (bad) rcrl sti inc pminsw cmpsb mov sub push or movsl iret shrb hlt mov push mov arpl fnstsw std (bad) call fild imul movsl lret fistl mov jg decl jp fidivr repnz push dec sub push mov xchg pavgb dec push test cmpsb jge lcall mov frstor sub push mov jb add aam add sarl mov xchg out aas imul sub imul push mov pop pop nop bound sbb shlb push movsl lcall mov (bad) ljmp sbb sbb push into and movsl dec inc dec pop jns push push mov aaa test enter mov (bad) (bad) (bad) decl mov lea push push cmc and push fisubr mov out adc (bad) (bad) (bad) ljmp xadd shlb les scas xchg (bad) shrl push arpl mov (bad) incl shll mov (bad) add dec stc xchg mov gs outsl cmc (bad) (bad) ds cmpsl iret push push mov cwtl xor push rcl sub mov xor imulb pop push pop xor or and cs sbb mov inc mov xchg fwait xchg ret loope fcomi repz idivb and (bad) (bad) jmp arpl sbb stos xor mov decl or scas test push mov (bad) (bad) pushl repnz outsl dec inc mov cld mov sti imul lret cwtl jns fimul cli (bad) lea andl sub in int push in (bad) (bad) (bad) ljmp std push rorb ffree jns dec adc loope and add das mov (bad) incl incl inc int3 push sub popf pop mov mov or pusha mov jecxz ljmp push pop sub fisttpl mov mov addr16 xor fiaddl shll outsb rclb sub das std decl mov lods in dec call add pop jp and movsl cld add cmp stc (bad) dec jae add incl mov mov data16 add (bad) xor rorl loopne xor lcall std fisttpll mov mov xchg cmp hlt out cwtl movsl (bad) (bad) jmp xor repnz sub lock mov fwait lcall jp adc push pop (bad) (bad) (bad) (bad) fidivr and cs or cld ficomp rcl jb je int jb dec xchg incl lcall pop mov mov adc pop loop mov or xor mov fist push jle jle scas jg std dec xor daa lock xor pop xchg stos jae inc decl mov loopne xchg repz xlat and fimull sbbl jle pop (bad) lock ss mov xchg cmp (bad) call xor fimull addl xor xchg jl ret xchg (bad) mov jnp push je in xor adc popa (bad) cmp arpl sub paddw (bad) jmp (bad) xor add lcall movsl popa pop pop loopne lahf sbb mov in lock add dec push and lret adc and mov add pop idivb fdivp mov push dec enter dec aaa decb cld addr16 mov dec hlt add jp mov stos sti dec fsub jmp sub push jp adc (bad) (bad) (bad) (bad) cmpsb push pop mov xchg cmpsb push xchg xor xor sub outsl jl and mov or pushl xchg js mov mov adc fyl2x test jo ror stos lcall jg lret or cmc sub ds jbe scas mov (bad) decl ja sub test sarb push addr16 cmp decl gs xchg inc xor push lods repz dec mov and add les lcall dec popa popf xchg or xchg mov insl (bad) incl outsl ljmp lcall adc (bad) sub (bad) jmp adc dec push jbe push (bad) fmull adc pop sub insl cs (bad) ljmp pop pusha pop dec loope fs dec loope mov popf ret ja cmp ljmp or cmp cmpsb (bad) out mov xchg xor into jne push pop clc push xor lods pop pop sarl gs scas mov (bad) (bad) jmp loop fiadd repnz loopne pop dec sbb pop insl (bad) stos push mov call sbb or and push adc lods add sbb fnstenv test push mov sub cwtl sti xchg test mov loope jmp hlt add pop cs mov sub test jmp (bad) in in insl add cmp aaa mov pusha je mov xchg (bad) sbb push sti xchg xor (bad) cld adc hlt (bad) (bad) jnp sahf outsb idiv or jne mov aas scas inc and decl in mov dec and sub or jg test hlt stos je ds fnstsw (bad) dec in mov fisttp inc ret in inc jge (bad) int3 add jmp in mov pushf push enter out or dec hlt out lret xor xchg jbe pop push xchg call xlat cmp xchg iret aas (bad) (bad) (bad) lcall lock repnz push sub mov repz mov jnp icebp icebp inc add lods (bad) (bad) mov imul push (bad) cmp int3 push push push cmp pop xor aad (bad) inc ja mov mov push incl (bad) mov (bad) pushl clc hlt xchg scas loope cmp mov xchg clc (bad) pop dec outsl negl (bad) lcall repz lahf inc cmp add test cmp movsb movsb and pushl clc pop inc sbb mov jbe sbb mov test movsl jle imul jl inc or ds popf pusha or stos sbb pop mov ja addb mov dec cwtl test sbb mov insb shll in cli (bad) dec cld cli scas leave dec or aaa mov (bad) ljmp loope push loope stos inc aad dec fidivl xor xor mov xor imul or ror in jge jl adc in sbb int3 stos (bad) fucomip (bad) mov pop fisub repz adc cli pushl xlat dec pop or inc (bad) (bad) pop mov dec mov jl stc sbb dec out jo aas adc sub push lret in enter mov dec loop jge movsl and daa or out mov scas sbb sar call fisubl pop pop jle fsubs push test dec test std mov xchg jmp push (bad) mov xor (bad) mov xchg (bad) bound lahf fwait inc ret rcr pop (bad) pop mov push (bad) test xchg shll push mov (bad) (bad) lcall xchg gs cld loop dec int3 pop mov js test (bad) stc fcoms pop clc das pop add decl adc mov mov push sub ljmp sbb jb xchg jecxz iret cmp cmp repz adc iret hlt les arpl (bad) outsb mov or push nop add int3 and (bad) (bad) (bad) call pop cmp popf fsubs lea inc cli push dec scas or (bad) (bad) jle arpl sbb sub jo sarb imul pop xchg mov lcall cld scas mov in lret pop cmp int3 ret (bad) (bad) mov nop xor in push pop cwtl sbb jb xchg aaa mov mov insl cmc fs mov xchg aad mov push push adc add aaa in adc ljmp dec add loope imul cmc cmpsb cmp loope sub clc jg fistpll xchg push aaa bound xchg jb call inc dec jmp inc pusha dec es ja (bad) mov mov cmp insl es stos in addr16 (bad) mov sbb std xchg sbb push fmull mov ljmp and push adc mov jge aaa pop mov mov cmp mov sar call test fstl movsl sbb push mov leave adc movl pop imul (bad) jb jnp mov cli mov jmp mov aaa dec mov ret mov int inc rorb add outsl fisttpl das mov (bad) ds inc mov popa push aas xchg fnop cs std mov mov stos xchg imul in (bad) dec mov (bad) (bad) (bad) call push dec in fbstp pop dec sti add mov (bad) iret (bad) mov sub nop and rcll (bad) jg shrl mov aaa jg mov sbb xor scas in xchg pop mov ja jecxz std xorl ljmp aam mov sar mov or or and aaa xchg (bad) pop fistpl (bad) jmp out sbb dec cli xchg loop rcrl icebp push (bad) push mov sub mov (bad) jmp out dec lcall pop mov jl out roll mov (bad) jg (bad) out nop cmc mov dec jecxz fmuls insl xor pop cld jg push dec out dec fist pop js mov ljmp imul or (bad) and adc mov push or (bad) mov lods std pop cld lcall mov fdivr test mulb add (bad) (bad) sbb int mov (bad) (bad) fildll and add push xchg lods dec and fiadd dec stos fildl ljmp loopne push ret aam xchg jmp std pop popa mov imull in pop push mov out mov (bad) (bad) repnz inc inc mov rorl dec mov (bad) inc mov test inc jle aaa inc xchg lods aad xchg popf push push mov gs sub mov push pop loop das mov pop mov (bad) jg push add pusha xchg adc dec mov xlat pop cmc pop sub (bad) lcall out cmpsl jp jne xor add mov dec sti fstpl and jg jecxz mov push fisttpll ja,pn sti sarb push xlat (bad) clc incl jmp push jge cmpl sahf aad jg inc pop cmpsb (bad) iret (bad) (bad) (bad) sbb fisttpl adc nop/reserved sub inc xor gs (bad) call push push inc cmp sbbb pushf inc push sbb (bad) cld repz scas (bad) (bad) (bad) (bad) (bad) jl xchg std or (bad) outsl push or push jbe andl int3 xchg adc cmp inc idiv add clc cmp inc ja out loopne adc pop and out add das lock fldcw fsubl xchg xor inc (bad) (bad) ljmp push sub test icebp push jmp outsl lock loop popa shrl adc mov push ret enter data16 ljmp movsl or aad adc mov xchg mov and fucomip call sbb push adc push jno hlt jo mov cmpsw out jo aam movsl in movsb ret insl cli int3 enter sub popaw or (bad) mov jecxz dec and loop inc mov jae fistl in adc and stos pop cli sbb scas lock xchg and mov clc outsl lock jg pop test rorl xchg mov mov sub (bad) popf mov in movsb ljmp jle pop add aaa out pop outsl lods sbb insl rcrb fbstp (bad) incl and lcall pop pop clc sbb pop jo aas pop cmp in jl push dec (bad) mov dec mov js test cmpsl pop xchg (bad) (bad) ljmp fs mov arpl mov cwtl mov call pushf (bad) icebp mov (bad) (bad) decl loopne bnd pusha xchg adc push dec push mov (bad) or jb or or push xchg (bad) (bad) (bad) dec test mov xchg jp stos dec mov pushf mov mov (bad) (bad) (bad) (bad) incl repz jle mov outsl sub add mov (bad) movb sahf sbb (bad) or dec lahf xchg loop stos mov sti push fsubr sbb jg sbb xor dec scas je imulb popf jae push aaa cwtl leave dec (bad) (bad) jg call jp jecxz aaa dec sbb push jnp sub inc jnp (bad) call dec stc das mov adc bound fcmovbe scas enter add test (bad) ljmp ja cmp loopne mov imul and pop pop mov rcll adc (bad) (bad) ljmp mov cmp incl add inc push cli push pop (bad) (bad) ljmp dec stc and jo xlat nop gs cmp inc xchg mov sub jg (bad) jmp mov mov (bad) push out (bad) lods popf jnp mov xchg jne (bad) decl idivb or ficompl test subl (bad) ss or sub jmp popf fsubl ljmp jbe cmp mov sbb pop sub cmp cld and mov rcr sub xor cwtl pop out shrb pusha mov xlat pop into (bad) jae sahf lahf add ret jae sahf or popa js xchg ss hlt (bad) lcall xor inc xchg sbbl sub stc call adc stos (bad) (bad) mov push je pop push mov xor flds push rcrl jmp inc out int mov sahf xchg (bad) pop sar (bad) test popf jmp fldenv js push (bad) jmp jns fldt hlt iretw and sbb movsl dec or (bad) (bad) in mov cld scas js enter clc xor dec pop sbb cwtl (bad) (bad) (bad) (bad) out (bad) daa fwait inc adc pop movsb fsqrt adc xor jle mov into lahf dec icebp ds js fistpl loopew xchg addb into mov inc push mov dec std fist xor sub push mov mov sub mov push pop cmp int3 ror jmp jb decl std cld cs clc or mov das je repz mov fildll jle (bad) pop incb cli in mov sti test jecxz lods sbb add bound and cmc mov lcall lock dec cld (bad) decl movsl xchg lret cmp or lahf mov mov add gs decl mov outsb sbb je dec xchg push (bad) sti pushl fwait out cltd fidivrl inc xchg jnp subl stc or add in jl cmp mov ljmp push gs adc ljmp mov lds inc xor (bad) pushl test repnz fprem fs loope movsl (bad) mov jl aaa cmpsb arpl test mov (bad) (bad) dec dec sub incl jge scas cmp jg jle hlt addl daa or leave std ljmp and jae pushf stos es sbb mull (bad) (bad) (bad) ljmp roll mulb push add push jae push pop cvtdq2ps sar mov lds cmp imul pushf pop pop cli (bad) (bad) cmp mov test or and (bad) decl mov je in orl mov cmp aaa jl jns outsl std (bad) mov jecxz bound scas push aas (bad) icebp inc andb movsl sub xor (bad) (bad) push cmp adcb lock mov adc inc or push cs (bad) ffreep jg (bad) dec xchg stos add imulb js lret push xlat sub lcall es mov in loopne jle push xor fucomip jg mov sbb movb imul sbb mov fist scas xor push fistl fucom xchg das loop pop mov push lcall push cmc js mov imul xchg (bad) (bad) (bad) (bad) cmp sahf imul jno sbb mov push inc ret cs sbb je test (bad) jns notl lods cmpsl push pop sbb jne stos mov pop or wrmsr iret (bad) call pop adc es dec ljmp rcll sbb scas xchg cli (bad) mov and cmp push lret cmp mov dec (bad) (bad) (bad) inc mov mov lods pop xor test mov sbb ret call (bad) call or in rcll cmp jb imul ljmp hlt decl adc or icebp lea dec dec test or pop push add cmp (bad) (bad) mov jmp add leave xchg sub jecxz outsb cmp jae adc dec aad ljmp lock mov push loopne sti jle imul cmp and daa fsts das lock or aam rolb push xchg jnp arpl js or rcl jmp xlat cmc iret pop rcll (bad) mov loopne pop repnz nop mov xchg cmp fist (bad) mov pop fisubr xchg sti pop or (bad) (bad) jg xorl aam rorl pop rcrl out stos pushf dec pop cli (bad) call mov fmull sub jne sub sub pop jno mov add xor mov pushl imul mov push pop lahf aad call adc int3 dec mov incl stos aaa ds cmp xchg fs shrb fild or pop cli call enter hlt shl mov inc (bad) cmp inc sub pushl ss (bad) or fnstsw xlat lods test jg inc (bad) (bad) (bad) (bad) fldcw cmp or mov jmp dec xchg push leave inc in leave pop clc (bad) pushl or push ja xchg xlat hlt xchg dec or or jl lock outsb aaa push in ret mov push loopne sub sub mov loope cmp cmp mov cmp addr16 xor add and ljmp push cltd sub mov loop cmpl push add hlt clc (bad) (bad) decl and sub ficoml or cmp stos xor jo jae sbb mov imul mov outsl std pop cli lcall ljmp popf subl icebp or pop add mov mov or xor xor jecxz pushl loopne lds sahf inc roll imul pop xchg jae mov or aaa repz (bad) (bad) (bad) decl sub pop idivl xchg cld xor jns sbb add sub mov mov adc sbb bound icebp and stos or (bad) call push and mov adc push cltd pop mov and addr16 and and push (bad) (bad) (bad) (bad) fstps add sub or popf lcall fisubl pop inc jns or pop addr16 (bad) jnp pop divb ja mov mov fcmovnu movsb xlat dec ja dec hlt sub leave loopne enter add repz out dec jg pushl int3 push and test push test or clc (bad) (bad) cmp cmp push sbb push gs (bad) jmp or and fidivrl adc mov lea sub in push mov mov cmp (bad) (bad) mov mov cmp mov out ret inc push lods pop outsl (bad) (bad) fucomip (bad) into (bad) sub rolb sbb iret jecxz adc (bad) (bad) (bad) pushl daa test dec adc ror dec inc cmpsb and out loope lds das std rclb mov jbe pop xchg mov stc sub call leave les mov outsl addr16 arpl call jp pop outsb lcall movsl inc adc pop push sbb or mov ljmp add jp hlt lcall pop clc ljmp jb xchg fidiv and mov psubsw inc (bad) lcall sub dec mov xchg clc xchg push data16 xchg fsubrl stos stos lret pop (bad) (bad) ljmp (bad) jb ret mov bound push mov outsl (bad) (bad) call inc loop cs and (bad) xchg sub repnz call lods pushl cli call sbb das add ds lea pop popa inc jg jmp xchg push push jmp fbstp pop xor push (bad) incl lahf mov jne dec in push xchg roll stos nop pop (bad) (bad) (bad) push xchg shl in adc or sarb mov mov dec dec imul xchg (bad) stos mov aad xchg mov repnz jbe dec xchg mov mov (bad) (bad) (bad) (bad) push inc mov inc out inc loope xor dec movsl jae add pop cmp lcall (bad) (bad) jmp mov jmp mov mov cltd outsl nop (bad) popa push cli hlt (bad) (bad) lcall (bad) scas pop sbbl ss mov ret cmp jle cwtl mov or js mov sub pushl xchg repz sbb fnstcw mov lock decl js xchg loope cmp ret in push jns push stos xorl (bad) lcall sub outsl push insl lret xchg (bad) xchg push imul dec mov (bad) (bad) (bad) decl push test or or jo adc je inc mov (bad) (bad) incl inc dec mov push cmp call xchg sub adc sahf lret cmpsl iret xchg sarb mov pop mov stos into jnp loop mov mov outsl mov jnp mov dec (bad) mov scas push push sub xchg mov aam cli (bad) cmpsb daa stc popf (bad) lcall cmp cmp stos sbb inc jecxz mov sub movsl (bad) mov push aaa push cs xor jae mov inc sar (bad) (bad) lcall mov outsl std jns jbe mov jg jae dec xor sbb adc ljmp xchg scas mov jmp push cmp mov (bad) jg jmp aaa aas dec and popf ljmp pop lret scas stc outsl outsl (bad) test in pop loop test (bad) das cli mov inc dec insl in (bad) xchg xor pushl jno mov or add sbb loopne mov lock jg incl mov dec (bad) in pop xor pop repnz (bad) ljmp in xchg adc push dec mov loope jb dec add (bad) (bad) (bad) pushl dec lahf cmc lret ja out lds mov (bad) (bad) cmpsl lea shr aas aad or inc fmull int3 push add (bad) ljmp jne (bad) mov ja pop and sbb (bad) lcall push aaa or inc fcmovnu push out lods xor dec (bad) cld imul pushl repnz push mov ja sbb fwait fwait and (bad) (bad) jg pop dec stos push mov or (bad) lret lea ljmp push pushf fsubl arpl aad mov cmp cmp mov popa inc or (bad) insl pushf mov mov adc mov push movsl test fstl cmp adc mov test rcrb mov mov sbb lcall xchg mov aas mov push test mov (bad) lcall push dec jae xor and test cmp pop imul jl mov das lock add sub inc fs outsl fsts and push lcall pop es test mov push mov mov dec pop mov xchg mov fdiv adc jno inc pushf dec adc mov jmp ja xchg test stos xor je test sar mov lcall andb sbb sbb sub or hlt sub in dec mov enter popf cmp sub add jbe stc sti ljmp push cltd je mov push lds (bad) fnop (bad) ljmp dec cmc sahf sbb icebp mov sub inc lods outsl mov dec cld (bad) (bad) incl mov outsb xchg lcall dec enter push xchg pop mov test or ds (bad) lret mov andb jno sbb andl (bad) in pop call adc sbb lret or pop decb ret ficom incl dec outsb xor mov sub incl std xor cld xor (bad) lcall lahf jne pop push sti repnz leave inc (bad) lcall lea add mov push xor loopne jg jle stc jg (bad) ljmp arpl rorb bnd sbb rolb repz mov mov xor (bad) push loope sub mov call (bad) (bad) call xchg pop xchg mov scas cld in andl lds mov inc std pop (bad) decl nop dec repz pushf ss adc jp and and fisubr sub cs sbb rol roll add jge inc sub (bad) pushl push orb cmp xchg lea sub adc hlt jg jno loop shr jbe clc shll push movsl cmp fsubrs mov pop (bad) cmp call outsl cmp in or mov push popf lcall pushl pop gs or idivb pop push sub push sub cld test and addr16 dec mov sbb scas sbb xchg xor stos (bad) (bad) ljmp inc sub insb das and sahf adc mov and test popa inc pop js sahf pop jns inc scas inc pop loopne inc or pop add push ljmp dec lret out pop pop repz push dec and clc lods xchg js ror je inc imul push in jb mov cmc lods push push push scas (bad) fsubs call and (bad) pusha test and insl in (bad) and or lock add pop sub cmp lods fidivl inc sbb cmp pop cmpsb fwait xor (bad) mov adc sbb popf xor sbb mov mov inc (bad) (bad) ds dec mov test mov jbe cwtl pop dec adc jl jle (bad) (bad) decl xchg dec out push mov sub nop pop push mov gs push fbstp dec outsb das hlt mov loop pop inc mov mov test aaa jecxz fwait mov pop bound cli mov inc (bad) mov addr16 (bad) mov scas movsl scas sarl inc (bad) testl sti pop ss in adc inc push sti cmp divl adc cmp (bad) (bad) (bad) (bad) jnp in jmp test dec cs add jle or adc xchg clc (bad) decl in fisubr std cmp mov nop fild aas fs (bad) (bad) inc adc mov movsb je aaa cmp insb neg nop xchg mov lret inc cmp sbb (bad) (bad) call adc fadd add push repnz mov sub mov mov std xchg aaa xchg xlat jns daa pusha popa sti out sub test ret call in orb pusha lea cmp in jle stos out (bad) (bad) (bad) decl frstor ret in test mov jnp jbe rcl fs inc pop std jg adc inc cs cmp call xor pop xor (bad) ljmp imulb int add xchg dec (bad) adc dec (bad) call clc mov shrl and aaa mov ja fisttpll jge mov fnop and and mov pop dec aaa movsb jp jb lock (bad) (bad) pushl in xorl (bad) gs mov test push outsl outsl call add orl ret fsubrl dec call push ret out or in inc lock (bad) lcall cmp push repz stos aad dec mov test movsl cs stos xor js imul cmc cli call clc cmp cmpsb mull xchg xorl xchg aad (bad) (bad) fildll (bad) test xchg seta or xor movsb std or xor sbb jno sahf inc cmp xchg (bad) dec mov add clc shll push bound decl decl out (bad) adc dec jns sbb mov pushf pusha addr16 sbb fnop (bad) cmp and push sbb jnp push aad hlt cmp xchg xor (bad) (bad) fdivl test push nop in out cmpsl test jle mov mov jns mov call xchg adc pop pusha mov lock push or fistp pop sub mov insl and clc rcll mov fidiv sbb sbb ja xor push jmp pop xor and or pop mov pop xchg call jle xchg add lret leave pop data16 sbb adc jg decl xchg jbe shr outsb les jae cmove fwait pop (bad) jmp out shrb mov repnz and mov add rclb mov jbe andl incl int3 bound in in out sbb jnp xor test (bad) (bad) call (bad) xor dec adc ret ret pop push subb stos dec int mov pop jne lcall dec (bad) mov sub (bad) (bad) jg je sub cmp loope shll aaa pop das add int imul incb (bad) push sub fistpll repz xor push cli call dec push cwtl xchg movsl pop (bad) mov inc dec mov xchg mov (bad) (bad) call mov adc lods (bad) pop iret push ljmp sub jp call cmp pop pop push sub aam add movlps mov sub dec mov mov push ret lds cmp xor adc test stc clc test fcomi xor das std (bad) jg and and popf push mov xor inc mov dec pop push pop push mov pop add (bad) (bad) enter cmp (bad) (bad) (bad) lcall nop add and movsl mov movsl xor jbe dec addr16 pop adc lret push lods (bad) (bad) faddl faddl ss sub mov pop pop adc lods add cs inc lods iret outsl and aam es repnz cs fcom das lock call sbb pop mov nop push jl loopne mov adc sti daa mov fisttpl or mov cld mov mov ds push fildl pop (bad) mov pop out es or mov lods push roll ja adc cs jmp xor inc and iret cmp add sbb sahf mov iret (bad) jmp push lock in cmp (bad) pushl fdivrl mov jl mov jo lcall fdivl (bad) (bad) jmp fwait cmc add pop hlt in retw mov cmp push sar push pop push mov jmp dec and push int3 ret imul jnp mov (bad) (bad) incl inc sub xchg stos dec push mov xchg mov cmp je fnstcw incl movsl not sarl (bad) ja (bad) push call push call ja mov sti dec enter sbb icebp mov pop ljmp loopne hlt mov cmp xchg mov dec and rorb clc (bad) decl xor mov es xchg inc fwait pushf sbb mov sar imul std xor es call sti rep pop into insl hlt (bad) (bad) pushl or shrl loope lea rcll jno outsl mov das sbb (bad) out sbb lock fistpll mov int lcall int xor sub sbb jno inc dec jnp fldenv inc sbb cld mov sarb idivb sbb shr loopne jae fwait and or mov push in lret push push pop mov fnstsw jge cmp push pushl push dec cmc (bad) or mov add mov inc ret xchg and repnz (bad) loope xchg (bad) xchg sub dec cmpsb pop mov decl mov jl jb pop out xchg mov outsl sbb bound (bad) fsubrl std sbb xchg pop (bad) mov out (bad) inc add stos sahf outsb test mov repnz mov fild int aam mov pop dec adc jnp call ljmp test imull xchg scas enter out ret (bad) sub lret sbb into mov ret jl jg (bad) push (bad) ljmp sub fcmovu imul add xchg cmp mov mov xchg stos xchg add sub (bad) (bad) out sub mov mov push or ljmp xor stc test xchg and fwait test xchg sbb movsl or cli sbb das roll sub dec inc xchg push push inc xor push stos lds cmp ret or push leave sbb (bad) push or push and std shrb lret mov mov mov lcall mov in imul sub dec jp fucomip pop int fldcw xor mov subl inc jb mov and aas jmp and xorl stc movsb or repz inc icebp cmp (bad) je jns (bad) (bad) inc pop out in and js mov cmp pop dec inc je lcall pop es pop sbb pop add fimul pop sub lods adc mov jo sbb repz in test jmp movsl lcall mov lds insl rclb cs dec call (bad) jnp aam sub cmp jnp and test icebp (bad) decl lret pop sub out mov cmp pop fidivrl loopne dec push movsl hlt jp roll mov mov push out pop adc mov inc mov inc pop std pushl ja test ljmp rcl je,pn push mov (bad) call dec sbb pop mov pop add movsb sub jno movsb mov in xor mov push or mov decl into mov pop inc xchg adc cmpsl loope add gs sbb mov adc xlat pop fwait test adc decl adc ja xor orl daa xlat fist sub lahf insl std ljmp xchg push adc jne mov fist adc fdivp xchg mov mov loop loope out xor push sub hlt pop dec inc ror jnp es jl aaa lods mov and in jmp scas dec xchg cmpsb in aaa push rorb push shll shlb popf orb (bad) (bad) jmp cld std outsl jne xchg movsb sbb push fidivr cli into adc pop mov xchg ljmp into ja imul cmp pop (bad) jns (bad) push sbb (bad) mov or andb push dec ja pop push mov lcall movsl rorb and jge inc mov cli mov pop xchg xchg pop jg stos imul lahf jle add and (bad) (bad) inc sti ss push cwtl rorl dec mov adc dec pop lock (bad) (bad) lcall sbb jno fcomps lea adc fwait test pop push adc mov ja cli daa lods loopne lea push mov mov repnz (bad) aam ss out outsb push pop clc xchg (bad) (bad) (bad) in jg pushf in (bad) call pop sarl movsl push sti jmp in dec fstpl mov out jmp inc out add imul mov inc fmul in jle sbb jg or je,pt and push jo out jg (bad) jmp imul push mov add call xchg jl pushf jmp je lods mov add xchg leave test cli xchg mov lds aam fcomi xlat cmc rcr loop mov out movsb ss hlt add cmp popf pop mov mov int3 ret loop lcall pop outsb mov or push jl stos aad je mov sbb (bad) (bad) fist mov add ret dec mov cmpsb rolb in mov mov push (bad) jbe inc daa jae inc add jns mov loopne insl movsb and (bad) (bad) (bad) call stos popa loopne inc add insb fwait rcr in stc cmp inc add fs loop push inc (bad) (bad) fnstsw jg dec cmp out insb dec mov pop lea dec adc inc fs int3 cmp lret stos sub cli es cmp jg lcall mov jmp mov dec mov adc (bad) (bad) (bad) fdivrl pop dec ffreep and cmc adc imul dec xchg (bad) (bad) mov call clc add scas xchg xchg addr16 inc sub mov (bad) call xchg ja (bad) xchg push in into int3 fxch ret sbb in xlat inc cld (bad) mov frndint jnp jg sarb xchg out lods in ja mov sar mov lret push aam (bad) loopne pop xchg cmp adc inc loop (bad) (bad) fnstsw adc fwait dec repnz add call ret fs push and and inc ljmp aam push inc (bad) cwtl jmp mov ret ljmp pop fs lock jne cmp loop (bad) (bad) loope js outsl cld cs out scas les mov lods and ljmp int3 mov clc (bad) rolb jg imul fsts mov fmulp push push mov dec das test cli ret lcall lods call cs or pop jp (bad) (bad) inc mov mov jg fimul or aad push jl mov sbb jg push jmp mov and xchg push inc fstl (bad) (bad) fist cmpsb jge rclb ss dec mov std aas xchg push mov mov (bad) (bad) lcall cmp dec sbb in xorl jp mov insb cwtl out mov cs (bad) call adc push xchg mov sub add mov test int sbb insl jmp adc (bad) jg fidivrl out pop (bad) xchg mov loop dec jno (bad) cmp xor ret adc repz inc fisubr (bad) cmp mov pop (bad) repz inc jo add adc orb cmp (bad) fucomip decl xor or ds xor arpl sub mov movsl scas dec sti loop sti xchg jb stc xor js dec xchg cli pop dec jo sub sbb pop int test xchg push (bad) (bad) jg jmp lods ret sub xor pop bound mov incl pushl clc incl incb pop mov jecxz pushf stmxcsr add mov cmc decl test shlb mov jne pop movsb outsl fs (bad) mov inc mov fldt (bad) ljmp sbb out inc stos leave and add xchg arpl dec jle ljmp add subb cli (bad) pushl mov jmp mov lcall (bad) mov int3 or jle out jbe xor int3 cmp sub (bad) (bad) (bad) pushl pop mov cmp dec out das lock sbb cs jecxz scas or jbe (bad) (bad) (bad) ljmp daa test movb pop pusha fisubrl jns jp (bad) xchg out ja or (bad) call fisub dec mov frstor popf ds pushw add jmp int3 loope mov jg pop ja or mov icebp (bad) mov (bad) ljmp shrl out xchg ss sub stos hlt hlt shll mov (bad) jno or sub ret scas jnp mov das lock or and inc out pop xor dec cmp or ret call inc int rcrb and fs jg loop daa outsb inc adc and push push sub iret imul pop jecxz xchg dec fistp cs test mov std pop sbb or mov (bad) mov and out int (bad) leave dec sbbb cwtl jg fildll sbb pop movsl je (bad) fwait xor cmp and ljmp mov xchg gs call decb pusha jb jmp rolb movsb lock es xor xchg mov or mov sub jg jbe fdivrs dec hlt sbb in mov push (bad) incl lret jns movsl (bad) mov adc push push adc mov mov jnp and (bad) sbbl (bad) out sbb lock push aam mov push call incl vpunpckldq cs clc outsl das inc div aam jg push (bad) (bad) lcall insl out imul shl mov lods push xchg cld and (bad) (bad) (bad) ljmp test sbb push jp fcmovu jnp mov loopne cmp aad push popf std decl aaa cwtl sbb imul jmp je push dec lret nop pop xchg hlt (bad) sub push popf mov call std call repz and loope pop push mov (bad) mov adc call lcall xchg cmp jg mov xchg popa ds push pop (bad) lcall add stos adc negb ljmp movsb cmp imul push xlat lock sbb (bad) pushl adc stc mov inc mov mov adc je out mov mov pop (bad) jne jno and mov cmp lahf (bad) (bad) aaa xchg xor push jle into jp sbb push bound repnz imul push sahf push repnz inc dec loope mov sar inc icebp xor mov scas into stos xchg (bad) popa fidivr sub lods andl in mov ljmp sbb ret and inc lds push aam xchg fnop xlat mov sar xlat stc push das push in jnp jne inc ds mov in jns (bad) push pushf idiv shr push pop insb (bad) mov pop xchg dec test into fwait cmpsl pop decl (bad) mov imul pop (bad) aam sbb mov mov dec dec icebp mov (bad) (bad) (bad) mov mov mov mov add mov or outsb bound (bad) pushl mov sbb xor ficoml or ljmp xchg jbe aam xor ljmp les movsl sarl pushl cli adc lods inc cmp add test ljmp xor and je push dec push outsb or fnstenv pop icebp push dec das outsl push lods or jecxz inc outsl rep das or stc (bad) (bad) (bad) decl jnp adc cmp rcll add int3 ss es adc push arpl inc xchg ss sbb jg loopne add jns jcxz pop cld add sub pop add mov pushf jne sbb jg popa loope sar lcall ja cmp xchg jbe int3 dec cmp loopne add mov jg pop push cmp xchg pushf add aas stos lahf ja insl stos dec adc xor data16 pusha sbb sbb aas xor add (bad) (bad) jmp jns,pt stc pop outsl call sbb rorb (bad) jl add imul mov mov mov inc xchg mov inc and mov and out push out jl jp clc or jl addr16 xchg sub mov (bad) incl popf scas or cmpsl loopne cmpl pop (bad) ljmp hlt mov or into cltd enter es mov lods idiv pushl inc jb xor push jbe pop leave push push adc adc (bad) (bad) push lret inc sub inc adc pop sub mov je loopne push in fistpll cmp (bad) (bad) (bad) cmp insb addr16 dec push lcall in mov popa dec inc xchg sub ficoml mov jbe loopne (bad) (bad) decl (bad) into aam lock or inc (bad) mov sti imul push mov push les std mov add out movsl xchg sarl (bad) incl lret ljmp dec inc data16 mov sbb loope adc cmp in insl sub mov outsl icebp jg push dec mov fimul shrl icebp in mov dec mov call push or arpl push add (bad) decl push add imul fcompl push fbld sbb lcall iret inc popa aas inc push jge insl or cld or stc xchg cmp pop addr16 cmp push and or adc ds (bad) (bad) fisttp xlat and (bad) cmc xlat xor movsb or aas add xor loope (bad) (bad) in mov cmp imull push scas mov (bad) jg sbb push xchg pop rol xor stos sub cmp dec push das aad aaa sti dec hlt ds dec or (bad) (bad) (bad) (bad) cmp push jns int insb mov xor loope dec mov sbb sti out (bad) (bad) incl xor mov jle inc mov aam dec pop ret sbb ds je xchg mov mov ss xor sbb sub (bad) or cmp push hlt decl mov gs pop gs push outsl icebp movsl mov call and out adc fstpt push or loop pop adc and xor lock cltd inc test add cli scas or ljmp cwtl adc daa push into or popf push mov loope cld outsl (bad) (bad) adc lods inc xchg push xchg mov dec sub mov (bad) pop insb push fbld gs lock push inc cmp mov (bad) (bad) mov xor dec sub sub andl incl pop cwtl sbb popf lock mov loop in cmpsb mov fucomp ja pop pop push fnstsw aam (bad) (bad) incl push inc in jbe mov mov lea es (bad) dec stos (bad) (bad) jns decl cmc pop inc cwtl dec (bad) xlat jecxz ja stos pop push (bad) mulb clc adc ljmp sub add sbb leave out movsb pop mov lcall fmull loopne lcall icebp test pop (bad) fcoms xor cmc stc pushf push fucomi jnp (bad) ljmp lock add aaa nop js aad ja fadd std mov test (bad) (bad) (bad) out out sahf out (bad) cmp hlt lret push jae dec or mov jecxz cmp (bad) (bad) (bad) (bad) jmp leave mov nop xor inc out sti mov ss (bad) mov push xchg (bad) ljmp dec faddl movsb sub inc (bad) call call insb mov jle in mov sub sti add negb es dec mul fs shr in push mov outsl cmc (bad) lcall or sub lea es fldcw (bad) (bad) ljmp addr16 push (bad) leave outsb and push test (bad) push mov in pop xchg std xor iret nop std sub nop mov mov inc jbe cmpsl fwait fwait jge in outsl mov dec jge jnp imul sahf test data16 fimul add andl es push xor std in jg flds int cmpsl xchg popf addl and and dec sbb (bad) or iret and clc fs nop pop inc jbe fldenv subl lock out popf dec mov and xor dec and movsl mov and insb lahf repnz sbb loopne pop mov push inc jbe (bad) xchg popf dec (bad) mov mov fs out dec add inc fs xchg pop inc mov insb xchg scas ljmp imulb xlat repnz in push mov nop jge popa mov pushl fidivl loopne sbb xchg mov fwait mov dec xchg fdivrp (bad) (bad) dec leave and mov iret call sbb mov std mov jbe out js xor rcll (bad) (bad) ljmp les mov push or leave or int shll repnz push fcoml or (bad) (bad) incl xlat push jg push (bad) aaa adc jg xor push lea (bad) jmp xor fcoms ja outsl daa pop int push decl decl sti xlat xor int3 dec shlb add xor ret pop mov scas shlb (bad) (bad) pushl int3 xor into mov lods out xor or ss cli incl (bad) cld in mov inc xor cmc mov xor (bad) (bad) pushl sub jecxz push pop cmpsb push int3 mov or jg jl out xor and inc mov int3 and adc cwtl push xor idivb int3 outsb xor and or in (bad) mov add (bad) cmc int3 xchg pusha (bad) adc pop rcrb pop xor call xor dec scas inc sbb xchg pusha ljmp ja mov int3 cld daa cwtl push sub sarb adc rorb mov fildl cmpsb mov sbb or xchg push jo pusha testb sbb sub push pop xor ror (bad) (bad) (bad) jg cwtl or push repnz fxch lret push mov or push xor pusha sarb xchg std fs outsb mov pop loop pop cltd ljmp ljmp ds pop sbb or adc adc ja mov lock add mull push aas push popa cmc add mov into mov or ds inc adc inc or ds test test mov out lods fbstp leave and (bad) ljmp pop aaa mov aaa aad test lock mov mov add (bad) lcall sti mov sahf aad mov lahf adc lds mov sar (bad) inc aas mov fdiv jecxz fwait ss es shrl xchg inc mov test jl incl rcll fwait xor clc (bad) (bad) call cmp cltd (bad) aad jo xor pop push cmp push push out sub addr16 sub fucomip xchg rcrl outsb movsl mov add lods cli scas test ljmp std idiv pop sarb add push jo sub add in (bad) (bad) pushl loopew xor cs push and or pop mov adc (bad) (bad) cmp xchg xchg das jae (bad) mov and jno add mov mov pop jno jp mov mov inc aaa daa mov das icebp lcall push adc fcoml xchg (bad) mov mov mov rorb (bad) sbb (bad) std mov or xor fidiv cmp jmp cli dec fcmovnb (bad) (bad) pushl mov bound loope jae jp sub loopne or pusha pop mul mov mov push (bad) (bad) (bad) call mov dec cmc (bad) mov inc sbb fstpt outsb cli sarl jbe (bad) jmp out out xchg mov pop das mulb push mov inc lods jae add (bad) (bad) decl pop adcb outsl loope pop mov sub cli (bad) (bad) decl inc addl pop push aas jnp jge je std movd (bad) (bad) mov fcomps repnz pop mov mov add fucomip cmp test out mov fdivl sti xchg inc lds lods cs add mov decl mov movsb lods inc lods addl imul int3 into popf xchg fwait imul (bad) (bad) lcall outsl mov push cmp outsl mov fwait xlat xlat cmpl shrl push psadbw lea adc sti (bad) fstp inc mov jne push movsb inc xchg or jbe movsl inc and lcall call nop or adc stos push ja test out and (bad) (bad) incl mov pushl dec outsb cmp (bad) lahf jge test jae inc dec push adc aad dec cmpsl jb fisubrl cmpsl imul inc movsl cmpsl stos in push push xor (bad) mov in and es in or pop xchg push nop pop mov add stos xchg cld inc pop es cmp dec xor mov adc cmp aam icebp jmp int3 (bad) (bad) (bad) jg jg pop loopne push imul mov dec test aam int3 popa jge cwtl gs push js jg mov inc or lret mov jmp loop mov cmp aad mov (bad) (bad) pushl ds pop sub outsl jp xchg outsb mov jno (bad) call ret pop imul xchg sbb test call not cmpsb jmp or cs orb hlt incl cmp clc dec jns add fimul mov ret and bound cmp std or cld pushl or imul inc arpl xchg in in or sub test lret dec lea (bad) (bad) jmp cbtw pop lcall mov (bad) leave je popa test roll mov push ljmp mov rcll rcrl mov xor mov lret sbb test hlt xchg pop push fnstcw and inc and inc lret ljmp insl cld push push addl cwtd popf sbb push test fdivrs (bad) (bad) jmp cmpsb ds xor mov stos or sarl sahf dec test add ljmp (bad) mov mov pop out mov sahf mov inc sbb sbb adc pop push xor mov ret (bad) (bad) mov lahf pop dec and lds xor pop lret hlt (bad) (bad) jmp and arpl adc mov jg or leave aad adc mov sbbl mov mov (bad) jg movsl scas cld sub mov (bad) daa xor pusha mov idiv mov cmc into sbb xchg cwtl loope jp lret and (bad) (bad) cmp icebp cmp test pop fwait movsl aad push add xchg cwtl inc scas sar (bad) pushl jns mov fwait xor push and cmc js mov sub adc (bad) lcall or xorl xor decl pop xchg test fcmove and scas mov imul jb sbb insb popf xchg and sbb adc dec mov dec (bad) (bad) (bad) lcall (bad) fucom sahf in push mov lds insb inc faddl dec sub push push (bad) mov icebp aaa mov loop push nop push gs mov mov (bad) (bad) (bad) push mov mov divb sbb and jmp add and (bad) incl jne dec xchg pushf ret pop test xchg in vpaddd ljmp iret cmc repnz aas in sbb pop bound jno dec arpl xchg add call shl mov loope das test mov xchg loop jp sub mov cltd jo movsl dec lods jecxz insl icebp xchg mov stos jo movsl mov pop mov mov and xor or dec dec mov cmp (bad) (bad) call pop xchg imul loop and shl data16 mov jns adc lds test movsb xchg add (bad) movsb or push (bad) mov das out (bad) cmp xchg andl adc ds dec dec or push cmp adc (bad) (bad) (bad) call leave xor push jecxz and pop xchg xor stos (bad) jb int3 mov or fiadd sbb xor je dec jl in xor cmpsb icebp push (bad) (bad) ljmp lods add lret call pop xchg xor inc adc sbb jg call (bad) mov cltd fbld xor pop mov (bad) call dec xlat in lods or orl (bad) (bad) call sbb nop cmp mov test push mov decl sbb pop ljmp cld fistp and (bad) fnop das inc testl (bad) in cltd lea pop cli dec sub (bad) (bad) inc adc inc (bad) pop sub loop mov call in pop push test xchg orl xchg stos (bad) xor sub sbb das inc lock iret ss xor adc mov es test inc test mov sbb cli (bad) (bad) cmp push push addr16 out xor adcl pop jmp dec mov dec sbb xchg fcmovnbe xchg cmp inc jl adc xor fucomip mulb iret xchg and and outsb (bad) dec cmpsb ss mov mov shlb icebp outsl jno sub mov aam test mov enter sbb or lds push (bad) xor lock (bad) (bad) fdivrs and xor cmp mov sub inc (bad) (bad) (bad) mov dec out pushf fdivrl scas lahf jg add fs adc sub (bad) decl sbb jl and movsl xchg xor pop push push ss pop and insb shlb mov incl sub out sub push inc mov lcall lock loope xchg mov mov loopne sbb js or xor mov pop das lock call mov push jmp push imul xchg mov shl test stos call call sti mov icebp mov popa inc bnd sti (bad) out cmpsb adc pop lahf (bad) out (bad) (bad) pushl es into enter inc pusha (bad) sbb pop sub sbb test jp test push jmp enter nop push jg sbb sbb icebp mov inc flds in jns enter call stc jecxz pop mov out mov popa lods (bad) cmp scas push cmp mov adc call mov sub bound mov mov pop cs jle fbld and fcmovne shll dec lret mov jns mov leave call popf mov (bad) (bad) mov and mov add add les lock push (bad) fistp and cmp adc mov das sbb cwtl mov (bad) (bad) (bad) sti push mov data16 cmc sarb out sbb jae cmp divl sub (bad) (bad) (bad) jmp js je xor xchg lock data16 xor fsubrs lock add jl push stos hlt aaa xchg mov jecxz lahf pop clc add xor scas jne clc hlt mov cmp jle rolb jns xchg push repz das lock mov ds xchg jecxz xor cmp ljmp cmp ret mov and pop and add data16 ror ss ljmp in push push lcall cmp pushl cli outsl jge call xorl roll or mov ljmp push xchg test shrb inc outsl aas (bad) pushl dec inc mov fldcw fwait dec es xchg jecxz gs (bad) ljmp std out jecxz dec mov mov (bad) repnz mov dec mov push (bad) incl aas jle,pt (bad) jle loop inc dec maxps clc (bad) out jl mov aas jns in int3 (bad) decl addr16 cli adc mov dec mov orb clc pop popf loop xchg and push push lret (bad) fnstsw or lds inc push adc cs (bad) (bad) call push sbb orl push mov (bad) arpl cmp lret mov pushl pop and xchg les pop xor sub mov push lcall pushl sub dec in pushf xor push mov repnz xor xor shr push aaa test (bad) mov clc (bad) decl mov cmpsb cmp cmp imul or cmp movsb add imul (bad) clc ret (bad) rcr sub cmp fwait test stos aad pop clc (bad) call cmp bound xlat pop xchg int3 lahf movsb push xchg test xchg (bad) int3 sahf sahf sbb adc mov pop pop cli (bad) out add pop adc lret adc (bad) ljmp enter out test push add clc cmp add sbb (bad) (bad) ljmp repnz out clc add (bad) cmpsl fbstp push mov out or mov (bad) (bad) inc pop jle jnp mov cld adc pop or adc outsl add cmpb pushf jge out pop jl fist cmpsl bound xlat pop cmp inc pop mov jecxz movsl jl sbb shlb xorb decl cld je pop add (bad) mov or fild js mov add xor dec fdivr pop add push cld movsl data16 sarb xorb mov ljmp add lcall add pop cmp sti (bad) (bad) push repnz into xor jnp jle loope (bad) xor mov icebp xor stc bound (bad) (bad) mov out inc sub cmp out arpl ficoml ja mov (bad) das inc hlt andl (bad) ja mov fist add cmc mov sbb popf mov push cmp jbe jno or arpl ss in inc ret clc icebp pushl decb call (bad) popf add inc cmp in or pop lock add pushl add push pop pshufw lock pop sbb adc mov xor enter daa cld lcall (bad) stc mov stos add rcrb mov adc aaa add cmp mulb (bad) mov incb xor sar (bad) (bad) cli add add sbb sahf jmp jg loopne add jne jno jle call or or push pop add dec sbb ja mov add pop nop lods inc stc and jg mov or neg add add mov cmpb pushl mov pop ror outsl (bad) testl mov js test test push call test add add aaa popa lock xor add jbe repnz (bad) dec sar shl test roll jnp cmp mov push pop inc pop incl cmp jnp jle mov fistp loopne add push enter fdivrp sbbb inc push xor (bad) (bad) (bad) jmp cmp add mov push mov or imul jae out incl cli lods jecxz xchg pop xor xlat push lods movsb jae mov mov xor repnz mov jge adc roll lea inc cmc mov and loope outsl mov stos xchg lret fidivl add ja call pop cld pop (bad) jg mov or dec mov push lock (bad) js or lcall or in mov pop dec mov lcall incl fwait push loop rep dec std push add xchg mov fcompl jecxz (bad) decl sub jnp cmp rcr outsl add or (bad) (bad) (bad) jg mov inc fiaddl cmp and push loope ret stc in std mov mov jecxz mov xor cmp outsl icebp pop arpl ja pop add lock pop xchg and lea xor ficom lock in add jle cwtl movnti andl clc decb dec and pop add (bad) or notb rorb mov or icebp imul add mov fisttp decl (bad) sarb dec sarb shrb pop sarl pushf stos mov jo movsl (bad) cld adcb add inc faddl push xchg jg test mov add cli mov loope decl inc lret clc (bad) adc arpl (bad) (bad) jle cld or cmpxchg je and mov jg call test or enter mov loopne jg sar sbb and notl lock cmp js push lret mov pop jns and push enter out add or mov pop or call fisttpl gs push or cmp decb mov push js add inc sbbb cmp ret stos or mov fwait sub (bad) mov dec xor add mov add or sahf add call mov or pop add fwait or mov adc imul fidiv pop clc jnp mov or (bad) inc fstpt cmp test in orl fldt add xchg cs loope test and sub pop fs (bad) lahf cmpb lea cmp xchg decb add sti cmp or ss sbb movsl das sar (bad) xor imul (bad) mov notb inc jge add jge sbb lret rolb or mov adc cmp daa and sar pushl jp add ja cmp mov std cmp test jmp shl sbb jecxz std add push in lock or decl rolb (bad) (bad) mov xor aas or mov mov cld lock repz outsl mov insb (bad) imulb cs cmp add pop imulb insb mov mov mov loopne iret add ss pusha pop clc idivl mov lock dec outsl pop lods in sbb adc and outsl or sbb push (bad) aaa mov roll outsb test outsl inc icebp dec (bad) jg (bad) (bad) mov dec (bad) ds fimul clc inc inc pop or jle cld cmpsl or xlat add ljmp pushf or ja lea in add mov lock mov (bad) lcall or add movsb divl sbb popf mov jno sub cld das hlt mov dec pop lret loopne sbb sbb in dec add loope mov sahf mov (bad) decl mov (bad) std in (bad) mov adcl push shrl pop cli pushl push inc ljmp jg outsl sub cmpsl cmp (bad) (bad) jg imul (bad) in outsl mov xchg xchg (bad) lahf aaa cmp (bad) imulb subb mov js mov (bad) rolb jecxz adc js test push mov lahf out into xor lods (bad) jmp sbb int divb xchg ja mov or push cmp (bad) or out out ljmp (bad) movl and int jnp push add dec add insb outsb (bad) dec jg sar shr arpl stos or pop in or mov jmp dec divl inc xchg scas test fcomip xchg test (bad) jmp test inc lods cmp stos jb in jmp xor jg jmp add jge fldt dec mulb cli (bad) (bad) call xlat push int xchg rclb (bad) pushf cmpsb xchg ss das lds lret ret insl aam sub lods or fisub jecxz mov fildll sbb inc or mov pop outsb push sbb (bad) (bad) pushl cmpsb fldenv out gs xor cs mov or mov jb lret popa pop jnp sti pop mov jg xchg rcll (bad) (bad) pushl jmp or cmp cli xchg push and lcall pop movsb fwait insb mov adc xchg (bad) jae mov (bad) lcall test daa adc mov in (bad) (bad) ljmp sahf pop lods xchg mov mov sub sbb sub (bad) incl push (bad) sub xchg dec lods xchg leave mov cwtl mov repz xchg dec jo cs and (bad) aaa cli xor (bad) ret movsl sarb and gs pop addr16 inc (bad) pushl js dec insl xor aam push xchg jle out (bad) and (bad) (bad) incl mov mov push push fldl lcall scas sar (bad) lcall outsb negb ret jbe and cmp and lcall or mov cmp pop cmp (bad) (bad) (bad) (bad) out jecxz (bad) lret and icebp imul leave push cmpsb xor mov jmp or aad inc sub (bad) jecxz sbb ljmp jo and pop fiaddl push out mov rcll mov jnp outsl cmc push stc mov sbb cmp test incl (bad) adc cmp ret inc dec test mov xchg cmpsl pushl popf jecxz outsl call bound enter dec adc (bad) (bad) lcall mov (bad) scas inc lods or mov xor iret inc xchg lods fidivr imul call pop ds sbb enter xor icebp push dec sar (bad) lcall faddl push pop mov lods movsl xlat shlb mov hlt or add xchg sbb pop popf test jae rcrb mov pop cld lcall xchg xchg xchg (bad) sbb fistl aad les cmpsl push (bad) lcall loope xor les adc xor jbe inc scas push mov rcrb pop mov jno aad lea aad scas (bad) (bad) (bad) (bad) (bad) adc mov xor mov cmp sub cwtl xchg xlat test hlt (bad) dec and xchg adc mov cltd ror pop (bad) (bad) lcall push leave rorb inc lret imul and inc adc (bad) out stc mov add (bad) (bad) (bad) mov repnz cld jbe pop dec or adc data16 push and call clc pop dec testl sbb jne int3 pop push ljmp adc mov jae stos pop rcr enter push mov js push jmp sub mov jl lods dec jnp cmp xchg mov cmp jo dec mov inc (bad) (bad) (bad) jg sbb jmp mov test pop mov addl jmp ret jmp push push cmp jnp mov gs mov inc roll push lods and mov pop ljmp lods sbb repz dec arpl fdivrl push dec out lcall jmp mov lds (bad) fistpl push xchg push mov sti add (bad) pushl popa inc call mov sbb lock ret and shlb cmp cli (bad) mov xchg cwtl inc sub mov dec daa jmp xchg jecxz pop ljmp xchg cwtl ficompl stc das sub sbb mov xchg add mov outsl (bad) ficoml imul aad add aad imul lcall js clc dec mov jno inc add das mov jne and pop add icebp mov (bad) decl (bad) out and loope sub in sub sbb push sub ljmp xor aaa sbb or adc xor movsl (bad) call adc int3 xchg cmc popa sub fsubl xor leave jnp icebp mov (bad) (bad) dec cmpsb dec test inc idivb data16 in shll (bad) sbb xchg pop and pop xchg cltd mov mov cld (bad) jmp mov nop mov cld adc loope,pt push test mov adcl enter rorb adcb or (bad) mov jle dec out jno movsl mov mov test xor test std adc rorl pop and mov scas out add ljmp jmp jno cmpsl cmpsb sub and outsl jmp (bad) dec js scas cmp fsub sub loop cwtl and daa xchg into (bad) std fwait add call icebp (bad) sbb jns dec mov cltd test cltd pop (bad) lock incl fdivrs aad and inc adc xlat in aad xchg xchg call cli (bad) decl (bad) ja cld cmp sbb mov (bad) lahf jecxz icebp outsl inc mov icebp ljmp shlb adc das popf shr dec cmp stos ss fistp imul pop outsb lcall pop jo cmpsl ret cltd pop dec xchg fsqrt mov icebp movsb or push and dec mov (bad) mov bound (bad) repnz xchg xor shll inc test dec push add mov repz xor mov iret pop (bad) (bad) cli mov shrb jecxz cmpsl pop jbe (bad) (bad) (bad) in pop outsb push lea insl leave sti push cwtl ss es jp out (bad) (bad) (bad) jg in dec fisub sub loopne dec pusha cmp push sub lock lcall aam icebp mov (bad) out mov (bad) mov push outsl in stc sub sti pop jle mov stos insl jecxz (bad) lock fbstp or xor in daa ret mov xor sbb mov fcmovnu ficompl xor jns test (bad) (bad) cmp (bad) jae mov ja (bad) outsb ret mov (bad) outsl jnp pop lods repz mov lahf fildl test sbb sub pushf sub aas scas outsl hlt rcrb mov xor imul stc lds (bad) (bad) jmp bound xchg int3 pushf cmpsl jmp lea xchg in call sub es daa aas iret fs (bad) (bad) dec ss js stc jp icebp loop lock mov mov add loope into adc xor pop std (bad) ds dec dec lcall xchg test popf mov sar idiv lcall push and mov insb jmp lret jo fimull mov cmpsb cli (bad) (bad) (bad) mov ss fst mov test xor xchg pushf nop sub jmp ljmp push bound mov mov insb add mov sbb push mov (bad) (bad) (bad) pushl bound je pop stos fidivr fnstenv or fidivr (bad) (bad) (bad) lcall sarl sub imul popf outsb std clc ret xchg pop sbb mov lcall sbb adc mov repz das pop dec adc jbe mov aaa jle push sbb jnp jecxz mov aad scas jne movsb movsb cmp adc (bad) (bad) (bad) (bad) jle fucomi xlat xchg jns push aas fistpll inc inc ljmp ds ss icebp mov cmp sbb data16 fcmovnbe aad jmp cmp jle or (bad) pushl jg jge,pn jbe jge hlt leave jbe test pop imul (bad) (bad) fistp lret fwait aaa adc jno xchg sub xor das mov popf cmp cltd mov hlt test lods pop xor roll push jbe xchg stos (bad) pushl mov inc or fbstp mov pushl mov dec push ret sbb xor push test popa jecxz add and mov clc aaa insb call mov dec xchg (bad) (bad) (bad) call mov and cwtl (bad) dec mov sbb sahf adc mov (bad) pushl push icebp xchg addr16 xchg incl test mov jno mov mull (bad) mov mov cltd jnp lahf cmp (bad) (bad) (bad) fistl pusha pusha hlt movsb test pop shll lods dec dec jle mov push push (bad) (bad) inc (bad) loope fsub push lods js loop aaa cmpsl and test sbb movsl (bad) incl setle and jl in or sti cmc jmp das ds jne (bad) (bad) ljmp idivb jae inc das pop jbe inc out out mov mov (bad) mov lock test into mov out rolb add mov (bad) in (bad) (bad) lcall ds imulb loop sub push loopne clc cmc stos rorl incl sar hlt jmp aam push stos xchg ffreep std cmp icebp fwait cmp insl stos (bad) jne mov mov pop incl cli cli idivb mov sub jbe jmp mov pop dec mov (bad) movb hlt cwtl push mov ljmp lock cs lds mov mov sbb jo pop fdivr (bad) inc mov mov jl fidivl sub imul ja sub and cli cli cmc in jmp vunpcklpd fimul fimull push dec es inc (bad) jg ljmp inc repz out std mov jge mov (bad) (bad) (bad) call rcl xchg add pop mov inc out fildll ss outsl in inc (bad) mov stos pop cli (bad) ljmp ss inc mov data16 call push int3 mov lea mov mov rcr les push jl dec (bad) ljmp sti ds jg clc lcall mov mov arpl jne push (bad) adc test rep and insl cmp cmc enter (bad) jg mov outsb ss fimul lcall push fucomip (bad) pushl and test bound outsl jp fidivr (bad) (bad) call jno adc fcmovnu xchg sti hlt icebp mov push nop leave push data16 stc movsl scas dec mov cli mov out nop and cmpsl (bad) lahf sbb xor xchg jae insb std pop loopne mov mov lahf imul mov out lock ljmp insb cmc adc xor push (bad) cltd xor movsl into shlb outsl adc jae jb inc ret push lods jb scas popf outsl aaa push adc pop icebp fcoms fdivl jne leave scas pop jle shrb dec lret and jb add out pusha jmp rcl jne lock mov cs dec (bad) decl in in aam std sar mov out mov addl dec imul mov addr16 xchg loop dec pop popf lods stc cmp aaa sub aad div cld jno call aas in jbe or shl test lods out adc (bad) (bad) (bad) (bad) mov imul insb fstpt out int popa push pop popfw pushl outsb insb (bad) mov cmp dec fisubr jb ret push leave es xchg (bad) jle stos (bad) arpl jecxz (bad) iret cmp das push std (bad) mov xchg fstpt fdivl outsb lret jmp stos jmp cmpsl push ljmp mov jle stos fiadd mov daa pop scas enter ljmp ficomp (bad) repz fsubs ds cltd cmp lock mov scas (bad) pushl cld xor outsl data16 hlt test stos loopne decl mov mov jno mov mov imulb fisub xchg mov jecxz roll jmp xchg out lcall mov dec xchg sar (bad) ljmp mov loop fbstp loope adc pop lock pop mov sar ljmp lock cmp pusha cmpsl push scas push je cmp into sbb jg (bad) pushl jl int in or out push sbb sbb in lret pop sar ljmp cld cmc mov int in jle jne cmpsl rclb push out lods jnp mov (bad) (bad) (bad) inc lock ret push aad sbb stc mov push jg jns xchg jecxz jnp or cli hlt outsb repz mov testb fildll pop jae mov inc pusha dec xchg push adc cltd pop and (bad) stos cmp cwtl push clc (bad) (bad) jg cmpsb xchg push into xor sarl (bad) cs stos inc xor (bad) pushl mov popa fistpll pop in pop mov lods fstpt fisttp lret clc (bad) (bad) pushl aas xchg hlt cmpsb (bad) loopne out xor cmpsl (bad) mov lahf insb pop int3 xchg fildl loop jle pop test mov cmp mov lret fnop das jnp cmp and pop mov das cld test lcall das fimul imul jge lcall mov aad mov mov scas fistpll fnsave (bad) xlat pushl xchg (bad) lock or divl push pop jl mov lcall sbb push fscale mov in inc jmp into mov xor sbb fidivr sti fmull push xor int mov (bad) (bad) decl cmp mov out jle loopne,pt fimull jae adc in lods mov cld pushl stos cmpsb mov push scas iret rol mov (bad) in pop cmp and (bad) (bad) pushl sti out mov or fwait mov loope sub mov mov aaa cli ljmp xor cmp pop jmp das jns mov pop clc (bad) fldt daa jno push movsb out xor out push jge and jmp mov stc sub push out std mov fdivp imul cld inc iret insb loope (bad) (bad) jmp or adc dec mov cmp xor (bad) jg outsl cli mov fsubrl mull mov jle int3 jecxz (bad) lcall xchg push jae daa xor ret mov std jg mov mov cmp aad cltd in pop outsb xchg sbb sar orl cmc lret popf xchg lock fdivs (bad) mov popf mov popf jle cli arpl fcmovnb in cld jmp dec lods jge (bad) jg xlat mov out out pop push jbe jne jl mov scas imul pop repz stos cmp lds sbb fnstenv and mov outsl hlt dec jp,pn roll movsl cmpsb mov cmp jae xor jno (bad) (bad) cld mov and mov jge rol or mov cwtl fadd mov pop mov mov shll (bad) incl jmp sub mov iret jb (bad) call (bad) (bad) pushl dec sbb repz mov (bad) ja cmp daa xor es xchg clc (bad) call inc lahf roll pop (bad) jns cmpsl mov cld lcall mov adc pop out into popf scas push jmp ljmp ljmp sti push sub pop ja lds mov xchg fldt ljmp mov nop inc fs out daa push movsl lea (bad) call mov lcall fistpll movsl repz push fcoml add (bad) lcall (bad) aaa dec iret ja sbb out mov cmp cltd pop (bad) mulb sti sbb mov repz mov xor mov push (bad) xor leave fwait out push jge scas test out scas inc (bad) (bad) (bad) jg mov (bad) out repnz testl xor call lods daa daa and mov ror gs in and (bad) push in dec outsl jne stc xchg scas or (bad) (bad) mov mov push dec jae mov jp sbb adc jecxz jg lods inc imul jnp mov adc dec cs mov jl jnp aad push pushf mov pop jg ljmp sbb dec jge js cmc rol std call dec cs push sti or jecxz out lock (bad) (bad) pushl or js outsb imul cmc divb sahf fsubs cli enter (bad) cmc jge jae ja (bad) (bad) (bad) jns hlt out lahf popa adc pop and push popf sti sub stos movl iret jp scas mov jne sahf in insb aas push cmp (bad) (bad) decl sbb aad daa cmp adcl (bad) decl mov and mov scas out mov adc lds out jecxz inc mov sub cwtl jno fnop (bad) call in cmp int mov js int3 xchg mov sti pop popf cltd dec (bad) jg push dec jp dec inc addl notl cmc out adc jg test imul sbb mov push sub xlat rol ljmp cmp in aam jp mov or dec pop fwait mov dec cmpsb (bad) (bad) inc mov mov jae xor cmpsb scas fwait mov repz ret fcompl mov mov (bad) mov in rolb call jmp pop (bad) cmc inc fimull sahf cmp movsl mov mov mov addl (bad) mov idiv dec mov sub lock mov jle jno aam pop xchg (bad) lcall (bad) stos sub push mov xchg mov ljmp jmp clc pop dec out scas in jp and dec repnz jno stos jg movsb scas js sub cmp sbb push ds adc xor pop (bad) aaa (bad) jmp mov fimull sub pop jl insl ja cmc pop in movsl ss (bad) lcall bnd (bad) rorl (bad) mov cmc jg popa and fcomi sbb popa inc iret sahf adc cmp (bad) (bad) jmp adc jnp mov add test mov fdivr outsb jo sub sar dec sti mov fidivrl ja inc cmpsb sbb aaa push leave jge fidiv jg lock cltd jne std (bad) incl inc scas jge stos pop jg hlt mov jnp addr16 loop adc (bad) jg ljmp aam mov mov out jg aaa push adc inc fnstcw or mov test cli ljmp mov setp dec inc inc les mov insb fsub inc nop sbb pop fildl (bad) fnstsw inc std mov jns lea insb inc sub std repz clc jae test jbe bswap xchg mov mov outsl insb xchg lcall mov mov mov adc (bad) push aam add leave fwait add ljmp mov push add adc or push add call inc leave mov adc mov (bad) fucomip ljmp rolb test repz arpl adc mov pop pop mov pop and dec add adc int3 clc rorl imul insl lods dec shrl jg dec or inc lods (bad) (bad) (bad) decl sub jb rolb add mov xor mov or cmc into std cmp fisub cwtl mov (bad) (bad) (bad) jg mov mov ret (bad) push adc cmp test adc lahf decl in int3 repz (bad) call outsl dec ds jl repnz jno mov cmpsl pusha mov arpl aaa cli fild in adc int3 lds xchg dec (bad) (bad) call bnd push push xchg icebp pop sbb out scas mov cmp loop inc adc cmp mov decb fistp mov and int3 decb cmc add xchg push pop cld push (bad) (bad) lcall fstpl adcb xchg fnstcw sbb xor cs popa dec and and popa add sbb (bad) (bad) (bad) jmp push lods dec push sbb jg mov data16 push test call (bad) pushl push cld pusha fcomps add das fcmovb cmpl pop inc test adc (bad) (bad) (bad) inc iret int3 xor data16 or add sbb ss fimull test shl loopne (bad) mov push cmc xchg (bad) xor outsl fs sti or (bad) (bad) push sub inc adc jg das pop out adc xlat cmp mov aaa clc call mov push pop pop addr16 mov imul pushl ljmp ret clc lahf add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc mov cli outsl lock jg mov pop loop xchg (bad) leave ljmp and insb popf dec testb mov fwait outsb jmp inc fs mov (bad) (bad) (bad) jmp mov enter popa popf add stos scas nop dec mov enter mov (bad) (bad) pushl in outsb hlt sbb es mov enter and dec jb sub call nop xlat jle mov mov outsb inc dec imul xchg in or fimul (bad) jmp (bad) pop inc ret dec xchg call fsin push xchg pushf std les test adc call adcl cmp cvtpi2ps xchg repz cli xchg add xor mov xchg cmp fistp mov (bad) mov pop movsl aas daa (bad) cld mov mov lds add push rcll jmp pop cli in cmpsl jge lret rclb jns insb (bad) lret fstps or cmc pop insl push loope sub cmpl (bad) cli mov (bad) (bad) lcall xchg dec out jbe addr16 xchg cmpsb lods mov inc dec mov (bad) (bad) ljmp cld mov xor mov push add dec std xchg add mov insl xchg mov insb xorl xchg mov mov outsl (bad) mov popa loop in notb pop lahf (bad) and fsubs imul sub sbb or lret mov ror fs ljmp icebp hlt dec insb push cmp inc gs mov addr16 or sti in inc (bad) inc (bad) aas add and sbb ret ds fs (bad) je aam jge repz (bad) (bad) lcall or dec insl out adc sbb std push lods jecxz inc jno (bad) xor inc cmc or pop pop andb push mov sti and or sub cmpsb je (bad) (bad) (bad) ljmp in push stos ret jge cmp sbb imul jge aaa inc fsubl (bad) mov add push xchg daa inc imul dec (bad) (bad) (bad) decl inc push mov add sbb pop add xchg ficoml adc bound mov inc lock sub daa sar dec mov inc sbb cld (bad) (bad) incl inc test xor dec cld and push jmp inc inc stos cmp pop adc (bad) popf inc cs outsb mov dec aam jge hlt inc (bad) (bad) (bad) (bad) fcmovnu mov add jg cmp and pop and test adc insb aam xor pop (bad) jmp pop imul push mov jnp bound xor add pop (bad) (bad) pushl push xlat inc pop popa in sbb sbb sub push mov rcrb cwtl mov lret (bad) jg mov (bad) mov cli adc repz xchg xchg shlb pushl clc sub lock pop cmp das mov (bad) mov add push dec imul stos mov aaa mov push cmp lock jg jg jecxz dec hlt dec mov data16 fcmovbe or sub ljmp or lds xchg jb jne sub jae aam adc enter ret and (bad) (bad) add mov push adc test loop adc and mov add dec push (bad) adc outsl insl dec jnp aaa pushf push cmp pushl mov rcrb icebp (bad) outsb xchg and jmp pop (bad) (bad) jg push cmp aaa mov and lea fistpl std (bad) pushl xchg (bad) rol scas jmp lea push imul (bad) xchg std into cwtl push jo (bad) call call or test jmp and or push repnz inc cmp ret inc (bad) (bad) incl dec dec inc mov sub and pop movsb int3 inc int sub ss (bad) (bad) (bad) jmp mov xor mov mov shll sub in adc call cmpl insb sbb jnp push pop ret xchg add outsb test fs loope (bad) and repz mov cmp js out push popf out lahf sub mov pushl dec dec inc jno into mov or pop fwait dec cmp cltd or lret es andl nop nop add adc pop aas imul or lods test cs ss pop mov lahf into das adc negb test pop notl jp movb cmc lds lock sbb clc xlat adc (bad) (bad) jl (bad) xor leave adc rclb sub cltd (bad) (bad) ljmp clc pop sbb fadds ss or inc daa sub mov lds jg scas call call mov mov (bad) (bad) (bad) ljmp aas push (bad) mov lds mov js push scas sbb dec jae imul (bad) jmp cmp xor lret push pusha push pop stc add cwtl xor jmp sub (bad) (bad) (bad) jl in mov cli shld jbe ds out jp adc (bad) (bad) call bound into jp pop and call sub mov pop or ljmp push push nop lret mov xor dec outsl (bad) leave enter xchg xor add mul stc xchg dec popf mov pop ljmp (bad) mov gs dec addl mov dec or xor fst shlb popf cmpl hlt shr sarl test mov dec mov inc add and pushl cmpsl add xchg lods jge das mov aam lds or push mov inc mov imul cmc icebp mov in insb or (bad) incl xor inc pop mov je (bad) jl mov (bad) aaa mov icebp push jge (bad) incl out dec test push test adc mov jg sub sbb and lcall leave repnz rorl ljmp cmp cli push cmpsb or out adc fcompl pushl (bad) pop xchg rolb push push mov mov (bad) mov ret inc xchg cmpsb xor inc decl outsl jne repnz daa sub (bad) cld mov dec ds xchg (bad) (bad) (bad) (bad) (bad) pushl das push cmp mov push cmp and ret dec outsb lcall arpl ljmp mov push xchg popa cmp mov xor sub (bad) ja push mov cmp xchg mov sarb out and cwtl mov xor xchg mov inc cs incb xor mov sbb lret negb imul pop mov ljmp sbb and sbb pop in lock fcomps jo add out xor stos dec popa mov push (bad) (bad) (bad) (bad) mov cmpsl pop ret adc and ds dec and mov xchg jmp jg repz add mov xor rcrb (bad) incl mov jae mov or sub xorl or les lods popa adc dec sbb and or andl (bad) push sub or and add push sbb sub cli mov nop jle fidivrl mov rorl cmpsl lcall cltd xchg and (bad) incl mov and movsl sub stos or mov lcall imul pop pop inc cmp sub or mov mov decl lock jl mov inc xor sbb lahf sub iret push sub rcll shlb (bad) notb lds clc mov jecxz jb mov xchg jbe rorb fnop (bad) jmp daa cmpsb adc lahf jl movsl or push mov mov jge cli or ljmp call mov fimull mov inc add xchg out into call lods and inc enter dec mov (bad) xor int mov es sahf bound adc icebp insl icebp je xchg add das adc imul cwtl cmp jl call cmp adc ja jb cwtl push xchg shlb mov jmp inc or dec lods cmc inc (bad) lcall push mov je xor fimull jmp and pop (bad) (bad) (bad) decl cmp aad jo dec roll cld roll xor sub aas scas inc mov ss cmpsb cmpsl push (bad) (bad) pushl decb pusha stos test stos cmc (bad) ljmp mov push fnstsw decl pop xlat pop inc add cmc nop iret movsl push test test xchg cmp inc scas cmpsl popa stc (bad) (bad) (bad) incl jp inc bound mov jno push inc jne dec push mov sub mov pushl clc jmp cwtl and dec jae leave cmpsl pop adc iret popa mov (bad) pop ficomp fistpll jbe ds cmovno add cmp add popf fdivl sub or scas stos pop sub subl std (bad) (bad) jmp push or sub dec and pop cs dec inc mov jae (bad) and mov xor fstpl mov out inc and lcall call push or jecxz push jecxz (bad) sbb sti popa sbb add mov (bad) (bad) (bad) lcall jnp shll xchg sub pop inc xor mov add (bad) les (bad) jmp outsl (bad) (bad) incl icebp popf push sti std ret shlb mov cmp inc xor mov cli pop loopne mov orl sbb aam mov push pushf sbb (bad) pushl xchg add jo or sbb aas lar add (bad) (bad) sti or idivb and add fisttpll or jmp lods (bad) cmp fstpt mov or (bad) call adc lret inc inc sahf inc ret bound mov je sub xchg vpsraw rcrb pop jmp mov stos (bad) (bad) (bad) jg cli xchg xor test jb jecxz dec xor jnp push jae roll fcomi ds movsl sbb roll decl cld rorl xor loopne xchg mov push aas or pop lcall aaa cs in fcmovne pop lds test xor lods dec insb out stos (bad) (bad) mov je sub xchg mov rcll outsl stos leave mov cmp dec sahf mov xchg xchg mov and jl jl and jg stos xor adc adc jecxz push test cmpsl ret out sarl push jb lret loop xor mov push add push jb lret aad test (bad) ljmp jl and sbb loopne jb inc sbb inc and call ss (bad) (bad) jmp es adc jg or adcl mov add outsl std mov jo int3 and fs mov es lcall test push mov icebp fsubl adc or fwait sub fcmovu cli (bad) mov xchg test lret addb mov clc (bad) (bad) (bad) jl push dec inc test scas or (bad) jle lds push xor fidivrl jecxz arpl (bad) pushl lods pop adc scas inc push mov fcomp (bad) or fs (bad) (bad) (bad) jg or push dec fwait and in sbb clc or dec inc push test stos iret mov (bad) (bad) (bad) or rclb bound aam cmp scas push mov leave fsubrp jmp adc addl mov aaa adc lcall (bad) jns inc mov xchg in les (bad) (bad) jmp gs aam orl sbb sbb cmp in xor lods or ret adc je push test mov sub pop mov fcomip sub popf mov dec inc in stc sahf (bad) (bad) (bad) jmp xchg bound stos mov adc popa in sub and jg fbstp cld adc shlb pop cmp cwtl ficomp movsl push insb jge mov inc rcll and mov mov add cmp (bad) cld sbb dec outsl jno das dec cmp mov loope call pop add ljmp in lock fild (bad) es ljmp inc imul jp cmp mov notl jo aas dec push stos (bad) (bad) incl adc add xor rcll sub pop xchg jge fld in cwtl sub cwtl adc mov dec or out cmc and pop push scas pushl mov jp inc push push inc sahf jle xor inc mov dec sub imul jle popl or outsl std sub push add ret inc je lea xor pushl jg (bad) mov xlat lret repz pop aad (bad) jb mov (bad) (bad) jns adc bound xchg pop xor xchg clc test jge sub xlat cmpsb (bad) in incl xchg shr xor push add scas lea (bad) cli push pushl cwtl pop push stos dec mov lock jns (bad) (bad) (bad) cmp js jp pushf mov jnp lods push mov add mov test scas adc mulb pop dec pop sbbb ret in push xorb sbb mov mov jmp xor cli decl xchg repz faddl enter xor cmpsl ja in fbld (bad) pushl jb (bad) lret iret imul ljmp imul ljmp mov lods les (bad) fucomip fild cmp loopne mov push add adc cmp adcb pop adc cs (bad) xor outsl hlt pop mov push mov dec xor (bad) (bad) (bad) (bad) incl or or cli mov sub popf rcl cmpl repnz sub jb mov xor jno mov mov dec insl mov rcr test inc mov lcall (bad) (bad) (bad) ljmp sbb inc add stos pusha icebp outsb nop rorb pop outsb pop jb test inc lods stos (bad) (bad) call sahf inc inc je hlt mov mov insl test shlb add push jmp das shl xchg ret or sbb jae adc cld ljmp and and clc or repz mov pop lfs jmp jo popa mov or es add (bad) cld cmpsb adc pop xchg cmp (bad) pop adcl pushf push jmp pushf cwtl (bad) arpl cli or ljmp std call movsl (bad) out xor mov push lea (bad) rcl fcomps add pop push push arpl xchg jno fmuls inc pushl xor xor out je mov daa enter dec das xchg sbb jns cmp es sub popf lahf imul into inc out push test push mov pop push sub add sub leave sub xchg xchg ret sub cmp cmp lcall inc ret stos cmp out jb mov ds xchg push lock dec (bad) (bad) (bad) push shll addb adc sub xchg lret (bad) xchg jl test repz mov (bad) aad outsb push std (bad) (bad) mov mov jnp inc or movsb xchg inc dec xor and lds sti lea fs lret add fsubrs pop lds xchg (bad) (bad) (bad) (bad) ficoml sbb sub pop pop mov ret xor mov lock adc xchg or psrld lods (bad) cltd pop sbb stos sub inc mov xor mov mov xchg lcall (bad) (bad) jg bts nop movsl cmp jmp sbb sti or mov movsb clc ret mov addr16 call scas popf nop sbbl jne loop push cmpsb push cmp sbbb movsb cmp mov mov stos inc insl lcall (bad) (bad) (bad) js mov mov aad popf outsl mov pusha jb xchg xchg mov mov jg push ja inc cmpsl push inc sub fs jge pushl decb das cmpsb cmp icebp stos mov out mov out adc mov fcmovnu loop sub cmpsl push aaa out sbb mov add sti arpl (bad) jns outsb and outsl and xor xchg dec outsl sub movsb lret pop jmp pop dec xchg inc incl shrl add xor mov (bad) (bad) (bad) ljmp or pop insb (bad) dec loope test clc cld jecxz js mov jns test div and stos jge jp xor (bad) div std mov xchg jo xchg fcmovu push ficoml (bad) ljmp aad fimull out repz fdivp dec js orl cltd xchg mov mov das lock add jb jb adc adc xor hlt lock adc into imul test (bad) movsl (bad) (bad) xchg cmp lods mov push (bad) call push push push jl push iret jmp push les inc pop lret push sub negb aam push sub jg call fwait js aam xchg dec imul (bad) (bad) std scas pop ljmp pop ficomp jns call (bad) repz sub pusha fist mov lahf sub cmp push jno fst fcoms mov push (bad) (bad) (bad) decl movsl in fldenv sub movb push lock movl fnstcw ljmp inc dec jg push stos xor or jle inc scas push adc loopne fmuls icebp roll push jbe cmc dec jle hlt aaa mov movsb adc xlat sarl nop mov imul inc cmp fwait imul imul (bad) lcall mov xchg stos mov ret jp imul cltd jle push or inc jbe mov push int3 stc dec jecxz jae test das outsb xor insb mov shrl (bad) call inc adc ret xor xchg leave adc ret or (bad) jg inc pop inc cltd rorl mov pusha push scas xor shl (bad) (bad) (bad) incl xchg insb fldl repnz inc mov ret mov aas rorl cmp mov lret in pop hlt mov jp dec (bad) pop jp int and cmp movl andl ds mov sbb out cmp loop cmp (bad) lcall sahf fwait out lea pop aam ljmp adc (bad) jg (bad) clc (bad) sarb leave decw sti adc testl mov test push pop jb popw data16 lahf icebp sub xor mov jecxz hlt (bad) fildll and imul scas je nop sub (bad) test in and jae pop xor add adc sbb incl ja jo mov iret inc imul rcrl dec jp mov (bad) (bad) incl fldl xor ret and rorb mov or cli pushl push ret (bad) jmp pop dec lcall (bad) jg mov mov stos sbb ja jle lret and loopne mov pushl sub insl mov xor pusha dec pop es movsl (bad) pop mov cmc mov jmp popa xchg xchg lahf outsl mov mov sbb add (bad) decl sti fucomp push push xchg push ja cmpsb pop inc push xchg int jg ficompl subl pushl jb mov test ja sbb lcall push arpl scas xlat sub or insb cltd mov das repz lods jge adc lea hlt (bad) mov sbb ja sbb arpl out adcl push test inc test (bad) gs ljmp hlt incl lds xchg and ja inc enter add aad (bad) push sub push es (bad) ljmp mov cmp stc add push jp xor lea xchg addr16 (bad) (bad) (bad) fidivl es xlat mov cmp fimul fs cltd clc (bad) (bad) pushl cmpsb or out pop (bad) insb inc dec xchg mov (bad) mov mov fistpl dec mov dec cmp ja (bad) pushl push call push or pop or cmpsl fisubr cmc inc jmp push add jge pushf pop add ret (bad) (bad) fbstp aam push mov imul dec shl fucomip outsl (bad) in xchg shlb jle xor mov lcall mov sbb out mov jno sbb mov pop mov aad jnp sub scas dec xor (bad) sub lea mov mov mov fiaddl cmp call call push push outsb xor jecxz mov inc movsl adc or lcall lcall jg pop loopne dec dec push mov mov xor xor and dec (bad) (bad) mov mov out cmp les out cs (bad) xchg push mov (bad) (bad) (bad) lcall dec sbb inc lahf (bad) daa loopne or dec sbb imul adc rcll aas xor (bad) ljmp sub push mov add lock fcomi xor in mov test mov (bad) mov scas inc jae xlat fisubl inc ret jge stos test addr16 xchg (bad) mov dec jae push dec mov push cmpsb inc cmpsl pop or jns jae mov jg (bad) (bad) mov (bad) jae push push aad (bad) lcall xchg sub inc (bad) jns ja jmp lods mov sbb (bad) decl or pop repnz inc jns insb outsl repz or (bad) jnp inc aaa add and loopne ljmp or mov jnp push insb insl (bad) (bad) (bad) decl pop jle iret jge xor mov xor daa sahf push js out call lcall mov xor sbb out add or mov dec aas cmpsl push push ret adc scas scas dec (bad) decl aaa cmp jb and (bad) (bad) je fisub stos fidivl sti pop xchg (bad) (bad) (bad) call sbb and cmc repz aad fsubrs cmpsl cmp push movsb fcoml (bad) (bad) (bad) cld add lods add clc push adc int push push jmp iret inc mov adc add (bad) decl cld data16 in mov mov inc mov inc push dec adc and mov movsl ljmp or fbld cli push (bad) mov adc cltd in ds clc inc pop sbb inc jp sbb xlat sbb pop ret sbb cmp xchg jbe xchg sub ljmp fstpl adc add xchg shl sahf xor pop lcall (bad) adc ss xchg out jne xor popl (bad) js xor pop dec xor mov and int xlat andb test push adc or lods test stc pop and decl dec aaa lret ret orl sbb je sbb (bad) (bad) (bad) (bad) (bad) jg push sti mov cmp les push sbb cmp cmpsl cmp das cmc ljmp (bad) mov jnp push in (bad) jbe (bad) (bad) ljmp pop push mov rolb (bad) jecxz pusha jge fidivrl push mov (bad) (bad) (bad) incl and (bad) mov shlb leave mov or mov stos bts pop and ljmp insb cmp jecxz xchg jo movsl aaa clc ljmp insb pop (bad) cmc popa mov push cmpsl dec xchg mov jl iret (bad) (bad) (bad) or inc stos das inc or xor (bad) (bad) decl ror or test mov stos loopne cmp rcr mov sbb or pop dec cli loop jmp push (bad) (bad) clc repz mov lea popa adc ret sbb int3 incl inc std addr16 xchg push lret imul es add lret push inc xchg xor add call loopne (bad) sahf out lea test cmp push pop push fstl cmpsl test not pop inc fdivrp (bad) jg (bad) inc hlt adc xchg push pop pop movsl out icebp loope and or cwtl cmp cmp lods cli cwtl lret pop mov fnstsw incl cmpsl in sub imul pop xor mov mov jb mov test (bad) push xor mov and fcmovb fucomip (bad) incl or lock fnstcw cmpl inc stos push sbb (bad) (bad) incl shr mov add xlat clc inc mov jmp pop jle jg mov jecxz mov sti jae dec rorl call orl subb into cli cld rorb clc add or vpackssdw mov adc hlt pushl mov in push mov test xchg nop xor das icebp pop stos (bad) shlb xchg outsl test lcall dec lret pop loope ljmp inc std lcall into jmp sub mov add inc jle seto and les cmp mov ret mov cld sbb repz cli test (bad) jle (bad) mull add lds xor addr16 js mov add andb xor cmp add test roll pusha sbb mov fcoml (bad) call and adc imul xlat shl das mov lock insl scas xor loope jmp dec jmp decl cld ljmp inc mov cmp ret add mov (bad) ljmp icebp dec cmp femms sti rcr iret imul std cmp outsb dec adc xor push (bad) (bad) fnstenv pusha cld or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push (bad) lcall push add repnz lds shll (bad) jle outsb insl stos cmpsl mov (bad) fnstsw (bad) in popf dec mov mov icebp dec (bad) call mov out cmp or ret (bad) and and enter mov cmp jg movsl or shrb icebp and ds into pop mov mov cmp cmp lock jae pop add cmp or rsm loop cmp test hlt nop ja adc cmp cmpsb fsts repz lock das adcb dec pop mov pop in adc rolb ficom mov (bad) cli push mov (bad) (bad) call pusha jl repnz pop mov dec testb ja jl repnz cmp mov cltd adc mov jo pushl imul pushf add int3 xchg (bad) aaa sbbb aaa cmp mov jae lock test hlt js int3 int xor aaa cli (bad) shl dec push imul mov jle sbb (bad) (bad) decl test js xchg into mov loopne pop push loope sub and mov out pop inc xchg dec cld (bad) (bad) lcall ss inc scas or lods xor imul (bad) jg jnp or mov jns stos jg bound mov cmp inc (bad) clc mov dec popa aaa xor and and std repnz andl mov mov arpl push mov insb pop pop pop push jns ret inc mov mov loop lock push popa clc cmp (bad) mov test int3 daa adc or push lcall pushl jbe and (bad) push jno arpl dec test aaa pshufw (bad) ljmp icebp mov add fmull mov arpl inc mov decl mov adc or jmp (bad) (bad) call loopne ja push repnz and rcrl add outsl xchg lahf inc push inc pushf mov pushl popf cmp popf cmp xchg push lock sub or push fcmovnb inc hlt push aaa cli (bad) (bad) fisttp cs sti dec int3 shrl call stos dec clc lcall std frstor decl ljmp jmp fdivrs and call aaa mov cmpsb imul mov dec mov test pop mov mov loope iret sti pop call sbb (bad) imul scas jb cmpsb shr sub cs sbb insb sar adc incl dec cmpsl inc pop lcall sbb and pop adc inc adc shr rclb mov dec cwtl aaa mov add dec lret (bad) repnz mov sub xor sar decl mov push jmp mov mov outsb (bad) (bad) (bad) jmp mov arpl xchg xlat xchg xchg addr16 cmp or push fcmovne pusha fcoml xor das push out (bad) jg xchg cltd orl mov popf ret testl or jnp jp inc cmc fidiv mov mov ret lret or xlat ret lods ss scas (bad) sarb push push imul push pop ja jg fild mov mov push pushf pop fnstsw cmp icebp push cmp stos pop add loopne icebp sbb adc shrl pusha mov dec jns adc cmc inc sbb rcrb mov mov jg das jbe mov repz imul jns and (bad) adc (bad) lcall xor fmuls and fmul stc scas jbe lods or and (bad) (bad) xchg push add (bad) add (bad) rorl sbb lods shr or inc inc daa jbe xchg clc sar (bad) jp fisub in imul ror fs rorl mov scas movsl fwait pop popf mov (bad) pushl fstps sbb fstpl adc (bad) lea pushl sbb jo dec jl adc in or dec dec movl in imul (bad) (bad) (bad) decl cmp mov sub jge fcoml dec test mov lret test pop push push add jns (bad) jmp jnp cs mov push aaa adc call cmp jno and dec ret daa daa xor (bad) (bad) (bad) (bad) mov pop pop inc sti scas push nop xor data16 repz push xchg clc or (bad) lcall mov add call dec xchg lcall sbb mov std jg incl rcrb pop and cmp cmp and icebp adc and (bad) mov sbb jo scas fcmovbe orb call mov jle mov movsl daa fldl sbb loopne cmpb std (bad) (bad) mov and mov lcall pusha mov icebp (bad) push imul xor lret inc jle les pop mov jbe pop pop out cli ljmp mov lret out sbb lea sub mov mov inc (bad) mov push movsl adc sub mov jg jecxz mov hlt (bad) lret rcl ret pop (bad) mov jmp (bad) call and cmp dec add pusha sahf das mov sub cmpsb ss sahf (bad) (bad) fbld jge and and mov ja (bad) (bad) (bad) jmp sbb test pusha clc ret fdivrp xchg pop decl push jg sbb or inc mov (bad) in jno cmc mov jo push cld mov xor movsb jns fistpll dec adc leave add push nop cs out js fidivr adc sub jns mov loop adc fidiv add dec cld pushl sub stos jecxz jb xchg push mov (bad) (bad) mov or xor cmp dec inc out push dec push out sahf mov cmc fstpt mov jp pop jo decl clc (bad) aad mov dec or jge aam pop lea xor out (bad) xchg pop pop mov mov xchg repnz fsub sub mov pop pop fstpl leave outsl (bad) stos sub hlt subl and insl sub sub jb fstp loopne jmp jb shll sbb sub hlt test nop cmp mov sbb pop fs mov (bad) pushl xor shrb xchg mov xchg mov xor xchg inc add mov dec jl dec in add adc nop jge (bad) (bad) incl and inc std pop and mov (bad) adc cmc cmpsl lcall call mov aas sbb cmc jecxz sub push jg mov incl cltd incl and ror jne es test dec (bad) push fild aam jg lcall ret xchg lahf mov add lcall cmc jg leave pop test dec mov cmp mov cmc ja pop cli outsl incl lahf stos sub cli and mov leave (bad) (bad) mov pop jb and mov (bad) rolb psrlw xor xor xlat std sbb outsl adc xor sub dec test (bad) mov or adc (bad) lcall push mov rorb aas inc (bad) ret xor pop loopne test push add in stos cmpsl pushf outsb mov scas (bad) lret (bad) decl rcrb leave sbb push mov xchg fildll lcall or dec pushf xor push push int3 (bad) push mov mov cmpsb insb mov std aaa (bad) fsubrs push pop xchg icebp loopne xchg pop fcompl call sub dec std lcall xchg das and lahf sarb push dec (bad) jae pop pop jl lcall ds ds push pop mov shr scas ljmp (bad) ljmp scas pop sub xchg adc out pop mov dec add jg jmp movsl insl mov rcrb ds aad popa popf icebp dec ss hlt (bad) rolb push xor clc aaa cli ljmp cwtl in cwtl in jmp jp adc xor cmp (bad) (bad) pushl pop imul xor in dec pop xchg lods fwait call (bad) (bad) (bad) decl loopne mov pop xchg fwait add xchg mov mov sbb adc push repnz mov (bad) clc or xchg lds gs sbb push loop shll push (bad) (bad) (bad) fistp int3 cli fs sbb stos mov imul icebp fcmovnu push shrb inc sti jno lods add dec add lahf incl mov pop sbb (bad) lds lods aaa js inc fwait lods std shrb fistpl es (bad) jg rcrl cld fsubrl iret pop das jo jmp cmp (bad) in insl mov (bad) inc xor test out mov cld orl xchg xchg xor pusha cmp cmc dec scas aas mov add cmp aas paddw lods cs push and loope xchg mov mov mov imul pop ljmp movsl push cmp inc test pop jno popa push adc push sbb outsl cld (bad) push xor ljmp add ror divl pushl (bad) ja fisttp jle clc pop or clc jge sti sar adc das sbb cli lods xor dec mov ljmp add push insl fiaddl sub pop outsl cld (bad) inc adc jb pusha mov inc xchg pop sbb je aas mov loop (bad) call or (bad) in cmp jno rcrb push pop cld adc push outsl add dec cli je xchg adc cmc loop xchg jp push ljmp push xor aad add mov adc sar das (bad) imul out xlat push cwtl sbb cmp loope push push pop femms pop cmp fwait mov fadd add (bad) mov push orl pushl inc movsl in icebp mov sbb call push xor je (bad) roll (bad) cltd icebp insb outsl hlt sahf (bad) (bad) call stos imul xlat hlt and xchg jne sub std cmp (bad) (bad) (bad) inc lds lds insb fs call das testb xor ret or stos jle sub (bad) divl dec inc lcall fdivr repnz pop or inc (bad) or xchg mov (bad) xor mov or fisttp rcr pop shrb sub in dec jno sbb mov daa or das push lock mul insb inc mov in outsb mov loop sti add in mov lea (bad) (bad) (bad) lcall out mov xor in jmp jecxz inc stc fucom mov pop mov cs add mov jbe jmp (bad) (bad) lcall gs cs ret mov (bad) jae daa lock fcomps (bad) decb push (bad) das pop lret cmp pop ret and cwtl sub stos sahf hlt jns inc fcomp xchg xchg xlat inc pushl adc stc loop mov or loop data16 mov sahf inc (bad) jg aam jb or mov mov and inc xor incl push lcall mov push jg lcall test inc mov adc adc jg (bad) (bad) ljmp mov (bad) adc popf lods cmc dec dec mov mov mov (bad) call out sti xchg jns aaa push iret or stos mov (bad) (bad) (bad) ljmp mov inc icebp mov repnz (bad) cmpsb xor add icebp pusha stos stos fwait (bad) ljmp hlt adc jmp jle mov adc inc jae sub hlt or jg and lock loopne or mov mov decl test sbb mov lea mov subl (bad) call mov jmp nop or sbb sbb rcrb mov leave hlt dec popa cs call (bad) pop xchg int3 or cmp out (bad) (bad) pop rcl lods in cmp dec les aas xor xor and cmp imul repz lods cmp int3 jb inc adc ljmp push inc stos push (bad) mov push shll jno fisttpl les jl mov (bad) fucomip xor jns sub xor (bad) cmp jae push stc jge (bad) call sbb test sub inc je sbb push xchg or cmp push imul outsb popa (bad) test int add hlt mov xorl (bad) enter clc and xor (bad) (bad) jmp ljmp addb mov fimull (bad) decl fisttp pushf (bad) lret sbb or push mov (bad) mov sbb cmpsb xchg out add mov enter out loopw dec adc sub xchg push dec cmp push (bad) sbb fs jmp out dec mov jge push inc aad mov jno (bad) mov xor mov xchg push pop pop (bad) fbld je dec inc jp sar (bad) jg pop mov xor jo test sti arpl fistpll popa imul or cmpsb lds lahf cld pop loop and jne adc mov call sub mov fadd (bad) lcall test add mov cld push dec pop sub xchg imull sub lods mov repz dec pop int3 mov xor pop ljmp (bad) hlt aaa (bad) xor push aad dec adc bound ljmp fbstp ror cmp cmpsl inc aad push inc (bad) (bad) fnop (bad) pusha jp push in xchg outsb jns pop cld mov dec stc (bad) (bad) (bad) push and outsb (bad) jne icebp ds and adc stc mov sub mov mov repz fmuls sub (bad) jg rol xor pop jmp dec dec push cmc fstpt in sub fimul pop ljmp sub jg mov out jnp jmp stos xchg ja (bad) jbe (bad) icebp xor cmp cmp (bad) dec cltd or out lret das sub xchg arpl (bad) (bad) (bad) call sub lahf addr16 jb imul pop dec imul in xchg or (bad) (bad) ljmp out mov mov jnp in jge lcall push sar pop clc or cmp sti and inc mov gs mov add mov jge mov (bad) decl mull movsb arpl test pop mov outsl icebp pop loop movsb sbb (bad) fmuls dec arpl ret pop std in incl push in clc xor nop add mov cwtl push cli jno jns (bad) (bad) pushl enter add xchg fdivs mov gs cmc (bad) (bad) (bad) fisttp es push sbb in dec dec jl adc xchg cmpsl int (bad) ljmp jnp mov jb arpl mov repz and (bad) (bad) fistpl pop lods push daa scas cltd lret and and xchg push (bad) (bad) (bad) (bad) jmp mov mov pop sub dec getsec sbb mov fsubr pop push cmp (bad) (bad) (bad) call mov mov sub dec (bad) repnz pushf cmpsb mov das push adc add sub fs dec jmp sub inc dec jns mov inc lods lods ret cli ljmp jns push jl cwtl smsw inc popa lods icebp faddp xor mov jecxz (bad) jmp mov and lods nop mov sbb jecxz and (bad) (bad) (bad) jg ror test call inc xchg dec xor loop test xchg ja or pop loopne fwait (bad) int adc test lret dec push add mov stc add inc sbb testl out lcall sbb sub push lea push shrb dec popa (bad) incl dec pop mov pop cmp js inc mov or inc xchg sub push pop sub mov ljmp mov in pop icebp dec push loope add mov xchg mov testb pop and (bad) decl dec push inc pop mov leave lret sub sub adc int add outsb lock add cmpsl cmpsl scas jb incb xchg cld loopne fs stos sub cmp stos sar testl xchg xchg adc add pop push push lcall xchg sbb mov pop mov mov pop pop sub mov pop inc shrb push movsb ja push pop jnp mov pop lock add add test (bad) ljmp insl dec sahf in push mov mov int sub mov jp mov add (bad) lcall dec or jbe cmpsl test jp repnz pop addr16 fildl mov mov out out ret jae sbb stc adc pusha dec iret icebp (bad) (bad) mov sub call je call pxor xlat cmp (bad) (bad) fucomip (bad) div popf in roll js imul mov (bad) movsl (bad) (bad) ljmp pop insb xchg xlat loopne loope jo pop cwtl pop (bad) enter jp xor fwait (bad) (bad) (bad) pusha ret push mov (bad) adc cmc (bad) lret dec imul repnz jg (bad) jmp or jo xor and aas inc mov fnop (bad) (bad) pushl mov insl (bad) in fidiv inc mov mov cmp jle xchg lcall mov pop scas pop incb xchg pop or fisubrl call sar pop cld or cmp imul je pop pusha and insb imul je sbb xchg pop fmuls loope pop scas inc ret (bad) out pop incl xchg jl popl lods jg or push mov adc sub shrb (bad) ljmp push ret push and les int3 (bad) dec fsubl sub inc loope mov inc outsb arpl sbb xchg jnp add pop pop (bad) std dec fsubrl sbb call inc pushf in dec cmp lea icebp (bad) pushl aaa fldt xchg aam cltd les popf in rorl mov (bad) (bad) jmp jbe shlb pop xchg loope mov not mov mov je xlat add jne dec cld dec std stos aas ret (bad) or pushf (bad) fwait jecxz fsubrp and or xchg push pop cmp int rcrb call cld rcrl xchg xor push xlat std lods sbb call fcmove dec pop pop je pop test mov in (bad) incl mov clc inc jecxz push push pop popf ds add pop outsl pop loopne lds repnz (bad) aad pop dec jecxz jp stos daa (bad) lods sub sar call inc jmp mov jecxz mov nop (bad) (bad) (bad) mov sbb xchg lret adc es in mov xor mov in and aaa jecxz outsl cmovp leave clc sbb (bad) push mov enter ljmp xor out jp pop int3 xchg pop jl imul (bad) xor sahf scas xor loopne incl pop or push sbb stc or inc jno push mov mov cmp sbb popa cmc push (bad) jmp mov into mov pop push sbb jecxz lahf (bad) cmp pop mov adc xchg pop push stc (bad) (bad) (bad) lcall cs adc pop je aam outsl adc popa lea xor inc mov add or pop jmp cmpl inc lock icebp mov (bad) (bad) (bad) jg pop jns push jbe loopne pusha lret cmp jmp mov fwait dec hlt das mov (bad) (bad) incl ja add lret push (bad) loop cmp stos rclb jae (bad) (bad) incl adc pushf aaa idivb dec andl mov (bad) (bad) (bad) lcall add mov stc xchg je aaa push lods pop repz loop test jae out (bad) pop cli pop ret mov push out xchg cwtl ss inc sub xor jb movsb sarb inc ja lds dec dec scas out xlat fisub and inc inc cmp rcll ss pop mov adc mov (bad) jg incb pop mov jp out loop clc pop add jae jge sbb (bad) (bad) (bad) call dec mov and mov cmp push fst out push stos pop push push push (bad) (bad) jle jecxz adc faddl fldenv (bad) (bad) lcall mov pop or mov add out fmuls popa fist movsl inc or cmp (bad) (bad) call nop cltd rclb loop cmp rclb xchg push shrl clc xchg inc push cmc cmp cmc lock add jg test (bad) sti addr16 jmp jmp (bad) fisttpl adc out notl pop adc orl or mov mov jl or sahf xor sbb xchg mov incl movsl jmp (bad) lock push dec (bad) jg mov int3 mov faddp repnz fbld in inc in pop and add cmpl js mov jecxz mov xchg popa mov testl hlt inc adc cmpsb pop xor outsl cld negl (bad) (bad) mov and addr16 dec outsb lock in push insl das mov mov (bad) pushl add les insb shr dec jae (bad) (bad) jg cmc in enter icebp lea jno dec pop js outsl into cwtl jp decl out xchg into repnz jge mov enter das push mov adc (bad) (bad) jg ljmp xchg out pop clc shr loope sub sub insb (bad) (bad) (bad) call sti in fs xchg test sub push jo add es mov adc ljmp mov pop addr16 call push rclb push sbb in sbb inc xor jle push dec les enter cmpsb adc arpl ss inc in (bad) arpl jmp enter loopne jo rcrl test pop and das std outsl inc movsl out pushf or mov push faddl jmp decl mov xchg mov pushf sbb mov (bad) xchg pop fidivl jle push pop inc repnz push jmp cmc pop push sub sbb outsl pop jl,pt jg jmp popa lahf mul ret pop jns jnp pop fcmovu jl xor xor sbb jg lods ds mov and dec or mov cmp jnp sti aaa (bad) push or pop cld xchg sarb ds pop or in sbb pop loopne sti sub push dec pop push in test js rol jnp xchg dec dec cwtl test inc sbb addr16 jp xor mov stos (bad) leave divb js jg incl xor xchg mov mov leave dec push mov pop mov movsb insb sub mov push dec (bad) lea or or decb ret and fcmovnbe test mov rcl inc cwtl sbb call enter pop pusha pushl in (bad) jmp out fisttp call push insl push fisttp nop inc inc lret sar pop loop xchg xchg mov fstl mov jmp ret sar (bad) (bad) fimul adc pop push adc inc jle inc cmc int and sub push pushl jle popf cmp pop (bad) xchg into mov cmp (bad) xor pushl test inc mov cmpsl fmuls pop mov mov pop push xchg inc fcomps mov scas pop enter jb jl pushf sbb fwait mov push mov xor push mov adc ljmp hlt (bad) xchg pop popa adc sti inc dec lods mov (bad) decl jmp mov hlt into (bad) pop negl xor fwait cmc (bad) (bad) mov add out cli lods add roll mov xlat jecxz call aaa cmp pop int3 loop call aas push push (bad) lcall jo and adc cmp mov sub xor test ficompl mov lcall push enter imul xlat sub sub sub and sbb popa xchg leave (bad) call clc jbe cmp das das add jnp adc daa (bad) rclb mov and cld repnz adc enter repnz test loope mov ljmp sahf pop xchg movsl lock pop jns movsl stos ret pop cld (bad) (bad) jmp (bad) and aaa imul dec int3 jno ljmp fbld cld call subl movsl (bad) pushl push xchg insb lods mov fisubrl (bad) loope loop inc popa push and movsb stos ss mov lock (bad) mov ret dec cmp mov subl mov hlt pop movsl in pop or insb cmpsl nop ljmp loopne test (bad) jg in jg ja mov int scas dec fldl hlt lret aas (bad) (bad) jmp dec mov pushf andl subl (bad) mov push frstor add xchg in in (bad) (bad) ljmp push jb lock and aad mov in arpl lds adc pop xchg movsl xchg or jnp (bad) mov pop sub push sbb addl adc jle or stc stos clc push (bad) mov add rorl xor fs (bad) (bad) (bad) fisttp jns jne push push lea stos into sub aas cs hlt mov mov jg ljmp repz loope outsl cli jle aaa std mov mov lcall sbb mov fmull push and push mov lret (bad) ljmp icebp push rolb aam adc or decb or or (bad) (bad) call cmp data16 daa push pop (bad) jae inc hlt cmc nop push mov push js flds (bad) jg das lock adc pop mov cmpsl outsl xchg (bad) ja js gs inc call gs test out push sbb aaa (bad) jg enter sti aaa cmpsl mov pop jmp mov pop or (bad) (bad) jle cld fs jecxz mov push ror loop lock movsb imulb mov (bad) inc fstl leave jmp jge hlt shld mov clc cmp jmp call or dec jnp adc nop addr16 nop add fcmovnu sbb arpl inc or lahf push (bad) (bad) push cwtl or ljmp fmuls adc push and std push jnp repnz je loope call mov mov or lret cmp ficomp call call xsaveopt fcmovu sti (bad) (bad) jg mov adc lods add mov dec add pop pop icebp scas ds fnop jg (bad) leave or pop mov push fcompl cmp notl sahf mov (bad) outsl add and sahf push into jg jg xchg outsb aaa loope fisttpl out out incb ret stos loopne (bad) (bad) inc pop ja sub (bad) mov jmp repz jne inc movsl xchg or pop loopne (bad) (bad) (bad) stc pop fstpl jae and mov (bad) bound hlt in add stc aad shrl (bad) jecxz cmc jne or jns sub sti and cld jmp adc sub aas std test test mov dec or (bad) mov pop mov in sbb fdivl ret (bad) jbe in lahf push call mov pop sahf in fbstp (bad) es (bad) jnp lods decl sti jo mov pop pop push mov mov jg mov decl (bad) sarl pushf lock (bad) mull lret bound adc clc jg lcall mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave imul (bad) icebp dec sbb fbstp mov mov ret iret ljmp cmc sbb clc imul sbb inc pop loop (bad) stc add (bad) or mov xchg imul dec lock out stos test xor xor (bad) jg outsl daa adc xor add add sub pop xor add (bad) aad das mov add movl pop das inc (bad) lcall out imul shrl js js push call not xchg push inc (bad) in add orl sbb (bad) mov xor pop mov mov faddl jmp lret add sbb fsub push inc inc push outsl rorb (bad) jbe inc pusha mov outsl lock in cmpsb pop cmp enter xchg sbb push loope cli ljmp add add fcompl mov out pusha jle test push mov ret adc test xchg and pop (bad) js sar cwtl push lock ljmp push ja outsb add in push lock insl out fnstenv call sti jecxz aam ss mov cmp adc jne xor cld call imul mov jle loopne pop jne add and or pop fcoml aas inc (bad) lods jl mov (bad) (bad) mov ss gs sbb mov cmp mov push imul add outsl cmc fnsave shrl movsl mov fistpl add xchg sub mov or fild jb mov sbb cmp movsl (bad) (bad) (bad) pushl sub lcall push mov std inc daa pop pop and push gs jmp pop pop xor (bad) mov ds mov add das lock stos repz inc dec enter aam std lods (bad) jmp or inc sti or jl dec clc dec test sti testl pop jae adc adc ljmp pop xor pop xchg mov dec outsb ljmp outsl psubd adc sbb cmp loop (bad) pushl hlt mov dec mov cmp je sahf xchg mov (bad) (bad) (bad) aas xlat lahf lock add shll arpl ljmp ljmp jno xor jle fldt jle enter in mov cld ret scas js sar (bad) decl xchg push sbb sub inc loopne in aas add insb daa sbb aaa clc pop or push lret rclb out push mov pop loop insl insb int decb pop push pop mov loop add lcall jl pop jae (bad) iret dec scas adc lcall je or pop xor js in pop dec mov cwtl (bad) or (bad) (bad) (bad) pushl loop ror outsb daa rcl or out iret icebp sbb cmp pushf rclb (bad) cld es (bad) (bad) pushl iret clc jmp (bad) das lock popa xor xor and xchg out inc mov jmp pushf xchg push xchg lods lea out (bad) lahf (bad) (bad) and mov or movsl das inc adc add icebp dec add idivb fbstp push or add push jo cmpl jg (bad) decl mov pop pop in inc or pop fsubrl insl add pop ss mov or cmpsl dec dec in (bad) jmp out jae lret pop push or jnp imulb adc lret loopne subl add sbb push fmull repnz add pop pop cli jg jo idivl mov out lret lahf pop jl jg pop fsubrl or ljmp (bad) lcall pop adc ret shrb xor xor (bad) pop cmp dec out xlat dec mov jg lcall scas mov ficom loop fwait out int (bad) (bad) pushl sub xchg aam pop cli rorb scas pop jmp popf in lret (bad) jg clc jnp fidivl sbb sahf mov mov shr out loop cmp xchg xchg adc incl mov sub ficomp stos jbe (bad) (bad) mov or jl pop lock into fcomps pop stos call xor vmovapd (bad) (bad) (bad) gs adc sub adc js sub imul iret xor hlt pushl mov ja lret push scas int3 ljmpw movsl addr16 xchg xor add dec test mov test (bad) jmp cld xchg pop loopne iret std sub mov jae clc mov loope (bad) decl mov aas or xor cld mov sbb outsl fcmovb aas repz stos lock call xchg call jl mov (bad) jmp xor std or mov add lret add xor rorb sub arpl decl outsl jo (bad) fistpll jmp decb cmp js sbb xchg cli (bad) jmp fnop iret les mov ja sub std cmp xlat (bad) inc inc scas std sub rorl ds mov lahf (bad) in loope (bad) lcall inc loop (bad) in sti aad inc pop jnp xlat dec cld out dec ds mov call sahf jge mov mov xchg mov mov cli sbb sub (bad) mov fistpll jge (bad) (bad) jg dec sahf cli sar pop mov clc shr xor clc das insl lahf jl pop sti pop aas incl (bad) in (bad) jmp fistl ja std sti mov popf mov pop stc cmovg clc add (bad) mov jmp sub lcall mov dec add xor loope lds jbe jbe dec test in or fcoms js mov mov (bad) mov jmp mov inc addr16 pushf dec pop sub cs repnz rorl movsl and pop test js rorl mov js loop jp shrl mov xchg shll (bad) lcall mov cmc arpl pusha sbb and pushf add jmp sub jne jnp imul imul pop fs or in xor sub add and hlt jecxz or (bad) dec clc loop inc out (bad) cmpsl faddl push push mov (bad) call pop sbb das pop xor xlat (bad) incl call xor inc inc aam add cs outsl sub loop mov pop inc cmp les int mov ror mov lcall call divl out mov cmp imulb (bad) lcall (bad) lret (bad) repnz add jle mov sbb test testl inc jle mov sub or push lds iret adc and aam ja lret xor (bad) (bad) fisttp insb fsubp sub or adc lcall mov or out test (bad) jg decl or push int3 pop pop test push pop dec call jne pop and decl or pop js,pn jno imul (bad) jg mov mov data16 leave mov sbb stos (bad) (bad) decl dec aaa outsb sub pop push pop pop push push push iret cmc out inc flds (bad) jmp and mov cwtl loope int sub cmpl jge jle (bad) jle loopne xchg pop outsb ja sub or push adcl xor das push pop outsl aad (bad) fucomip call cs fistpl repz sbbb xorl (bad) push mov popa mov cmp mov jge pop xchg push insb faddl lret int bound fisttpl mov or movsl fadd std movsl (bad) (bad) call test dec add outsb into adc push add stos fwait adcb jns mov inc std mov xchg mov mov notb or aad dec rclb ljmp adc or xor int lds pop jo jo sub inc sub or cs mov inc enter and aad pop cmp lock push and mov or or cld or cli nop hlt lds adc shrl (bad) (bad) call and out adc adcb add mov lods sar (bad) pushl add add popa push sub call fwait pop lds (bad) jmp push jp pop or xor fs push scas outsl sbb sub add mov inc push pop stos test popa lcall jecxz cmp (bad) (bad) call sbbl cwtl inc pusha orl pop pusha xchg or jp das adc pusha push ret lock (bad) cmc cmp mov loopne (bad) jmp push jns ficom cmp insb nop ret xor lea pop push inc add mov push mov (bad) (bad) stc mov dec mov mov xor pop cmpsb mov cmc xchg or dec cli popa jg jle or je cs fucomip ljmp sarb movsl stc hlt stos pop sbb dec mov jp pop std fwait daa (bad) (bad) (bad) decl aas je mov pop scas std idiv add sbb fcompl outsb sbb sarl jo jge outsl bound fbld inc xchg ljmp jno (bad) mov loopne stc pause insl repz cmp (bad) pushl data16 sar jecxz repnz jl stc mov xchg pop (bad) jno es mov mov rep and cmc outsl jne sbb (bad) ljmp (bad) (bad) xor clc fcomi inc ret cwtl idivb cmp xchg cmp mov std (bad) mov push dec out xchg rorb push fwait popa mov call sub push (bad) (bad) jg xchg push andl cmc out sub adc and cwtl stc or pop xchg or inc movsl (bad) std ljmp call dec xor lcall ret jge inc aad lock xor or insl hlt adc cmp (bad) mov (bad) inc cli sub cmp (bad) xor minps sbb sbb (bad) call add outsb int xchg fs pxor ret int3 popa push pop in lret into (bad) cwtl mov fwait mov xor pop or cmc outsb cmpsl fisubr xor out movsl inc loop clc (bad) mov lock ss mov fisttpl and icebp lea movsl je cmp jge jp or call incl or jbe pop dec push fcomps adc jo sbb les pop (bad) (bad) call adc pushf jl lcall (bad) (bad) (bad) call ljmp pop add push add or dec movsl inc jl stos pop lods xor (bad) (bad) call in mov push rcr mov or daa (bad) idivb out popa pop mov pushl lret scas push and pop pop xchg ljmp in mov cmp xor jg (bad) jg xor movsb push dec add adc dec addr16 leave popa (bad) (bad) (bad) lcall int mov mov mov (bad) add test or mov sbb jle cmp add (bad) (bad) out pusha and hlt adcl dec or (bad) dec data16 mov call aad sub mov aad xchg cmpsb add xlat and jg pop sbb inc movb pop rol xchg nop int3 iret sub pop sbb mov push inc push lret icebp ljmp mov je cltd mov pusha pop imul pop pusha inc xor jp into mov xchg je shrb (bad) dec mov pop ret imul xchg pop addr16 or popa imul mov or rolb pop movsb cli (bad) (bad) pushl jbe cmpsb xor rorb std dec jns lds rcll jne (bad) (bad) (bad) call out adc mov and repnz adc aaa (bad) mov pop clc inc mov xor (bad) lods xchg jmp in jge ljmp ljmp fild sbb pop mov lret jle mov dec ret push dec inc hlt or (bad) jg push cmp rcll stos xor arpl ds jg outsl add out gs out mov lcall cmpsl popf adc icebp idivl sbbl push repz inc leave loop fildll (bad) xor call mov test out xchg and pop dec jg das stos mov lret ss (bad) decb push lret ljmp jg shll sub out or clc ja mov mov (bad) mov xchg jmp mov pop xchg call leave inc mov xchg test cli jno jns mov sub jecxz push out pop cld pop movsl (bad) in jg dec out mov lcall xor ljmp mov in (bad) mov jecxz sub psrlq out mov jbe lcall push (bad) ja (bad) aad push dec xchg outsl jecxz loope nop test dec repz push lret sbb xchg aaa inc sub movsb movsl lea aaa jecxz mov lds loop js push ja gs stos (bad) (bad) mov jmp aad cs aaa rcll push aas mov (bad) xlat jo mov lods (bad) shl stos xor pop mov cmc loopne cld (bad) (bad) decl das mov ds jle movsl pop (bad) lock lret incl (bad) or cli call mov shld jg add xor cmpsb cmc sbbl aaa inc stc jecxz cmpsb pop sub or jg pmulhw dec nop stc ds xor fwait cli incl jecxz cwtl mov mov mov cmc call popa jo sbb mov popf jne push pushl mov push pop add loopne enter sbb (bad) (bad) incl push mov loop cld int3 adc or adcb xor mov jp (bad) call mov xchg gs or ficoml mov (bad) decl js scas dec jnp xor outsl cli pop pop mov sarl cli mov loopne outsl lahf mov push adc fsubrl add jne push movl xor push notb (bad) (bad) jg jg xchg pop pop call cltd or push das arpl outsl mov cmp in add pushl fimull into sahf or pop jle rcll ja aad push mov into stos sti bound out call sti sar arpl stos lahf cmc or dec test sbb cltd cmp jle int3 inc das icebp incl rcr leave sti (bad) jno lds lea push das icebp (bad) fcmovnbe leave jmp or (bad) lods ljmp (bad) ljmp jg mov lret hlt mov lock test lahf subl push dec cmp lock cmc jg daa or test data16 jnp sahf and aad (bad) ljmp push sub push mov bound imul out cltd repz pushf mov mov mov and outsl hlt mov cmp jno loop and adc (bad) (bad) out adc sahf pop aas notl jb mov xchg and rcrb repz cmp lcall jg push arpl inc pop arpl cs lods pop pop (bad) mov mov in sub pop pop enter cli jg jg mov adc inc cvttps2pi rcll aaa sub cltd mov inc ret icebp (bad) (bad) (bad) mov cmp (bad) fdecstp fldz fsts jg adc (bad) das push in xchg mov int3 (bad) fs in test test (bad) fild inc fnstcw out jae int3 pop push pop mulb mov hlt lcall (bad) sti decl out aam adc sub (bad) (bad) call ds mov mov ret add xchg adc mov int3 addr16 xchg push adc jecxz or les sbb ljmp mov fstpl dec xor add (bad) incl fbstp imul pop icebp mov pop jl mov test (bad) (bad) incl mov adc xchg add pushf sub mov xchg xor aaa lret pop in (bad) jg test psubusw adc dec dec xor (bad) (bad) (bad) call inc jne mov loop inc cmp mov rcll popf mov shl jp fisub jmp inc cli mov (bad) movnti push hlt xchg popa add lcall cld loope or (bad) jns add push push cmp xchg pusha aas pushf test es (bad) decl push (bad) decb pop adc ret clc fcos (bad) call xchg or mov add adc mov in inc mov mov push pop inc jg es mov (bad) (bad) (bad) pushl out mov es add jle xchg loopne js (bad) sbb hlt decl out add dec cmp cli xor inc daa hlt (bad) (bad) call jl cmpl sub push fstpl pop aas xchg roll lret ds cli das xlat jp adc jbe sub cmp sahf sbb mov mov les push aaa clc (bad) incl mov dec data16 push sub aam inc inc mov mov dec fisub mov jnp,pt (bad) (bad) (bad) lcall icebp xor or rolb xor (bad) into testb (bad) push mov add mov sarl ljmp inc adc mov out or pusha jae das cmp clc fistpl jge stos inc push (bad) (bad) (bad) call daa loope js fimul subl movsb cmp arpl jmp or (bad) ljmp pop xchg sbb sbb mov inc les xor adc (bad) (bad) (bad) pushl xchg in movsl test lods (bad) test cmc xchg pop scas lret mov push sbb decl outsl scas mull int3 xchg mov push ret push icebp out ror or into gs (bad) inc xchg shll fcomp arpl lds dec pop popa pop (bad) mov ss (bad) aam test (bad) pushl push cmp lret shlb hlt mov dec ljmp hlt jmp cmp (bad) sub jge flds or cld (bad) incl loope stc push sahf int lock xchg cwtl (bad) (bad) (bad) (bad) div mov testb jecxz xchg adc mov (bad) push sahf pop sub inc test jmp inc movsb sti ret cld insb jg aas lret aas loop repnz clc and pushl and or xlat push jo xchg (bad) ss adc and pop call shrb in sub pop cmp pop sbb or test dec xchg mov outsl sbb mov (bad) push (bad) jg cmp testl sub lods mov jle lods je pop sar (bad) (bad) decl push and mov lcall xchg sub push cs lret push inc xchg push (bad) das icebp call jne,pt std cmpsb lcall jnp jmp and addl sub cmp je imul test jl (bad) jg out sub lea pop jl test mov xchg cmp push (bad) mov (bad) cmpsl mov jno mov jecxz js and decl lods adc sbb cmp inc ret (bad) (bad) fbld dec sub jbe faddl imul sbb jmp popf dec aas mov jbe xchg (bad) (bad) (bad) pushl fs insb aaa mov mov test movl idivb dec clc fcomip mov cmp fmull and mov xor push cmp outsl lock mov mov sarl xchg les inc pop mov (bad) ljmp xchg jns dec in cmp int3 cmc adc mov fcos (bad) (bad) decl dec and jmp jae int3 xchg add add addr16 pop lods push (bad) (bad) call push pop mov shr arpl pop jge xlat dec (bad) fistpll (bad) scas aad mov stos outsb aam or inc mov jmp ljmp inc ja dec inc push and inc push mov dec dec dec aad (bad) pusha xor xchg jo mov aam adc mov es push aad cltd or (bad) sti (bad) (bad) fsubs xor in pop xor test mov mov lods add scas (bad) sqrtps pusha adc or push add and mov xchg jbe (bad) (bad) xchg add add lcall pop cmp das cltd xor xor cs aad xor das push outsl insl insb popa das js jne gs js outsb je imul add sub and test mov dec push push xchg and push add sub dec sub sub fdivrl adc push call js adc outsb or mov sbb or ja jge sub outsb aas dec outsl jp insb xchg xor outsl jmp sub xor and dec imul ss in lods or jb cmp and inc inc mov outsl das adc xor (bad) (bad) xor bound jne push xor ja mov push or and das xor push jo dec popa outsb (bad) mov add jne sub add jno pop xor adcb sbb sub pop inc adc bsr fisttpl pop adc adc popf lea pshufw push cmp insl dec fdivs sub das sub inc push popa jb jae push dec sub sub fnstenv daa aaa sub aaa inc and mov lods push cmp mov shrl cli int3 jb and les fs dec pop inc js and xor add sbb push or bound and daa je sub or popa leave lsl pop fadds inc push and and push inc mov push fs add out jns mov lret dec dec push sub test xor imul inc jae jae test cmp scas sub lea xor std lea shll outsb and xor popa mov add add mov imul xchg outsl je insb add adc popa aaa dec (bad) out or adc cmp jo xchg ds insb jecxz adc mov mov jb notb fild jo jo rcrl sub push xor push inc ja add adc add pusha dec jne pop arpl insl inc fs insb push add insb pop es daa push jbe lret mov mov scas ja adc or popw insl fwait insb jnp movsl and pop jae dec add popa arpl sarb outsl add fs addr16 out mov jbe adc jmp outsb cmp inc add adc add fiaddl scas scas scas scas or and fs cltd dec in or inc jb push hlt or push adc or fistpll ja push out mov les (bad) hlt (bad) (bad) (bad) ljmp xor xchg fs xor fdivrl jmp rclb mov std mov pop sub nop adc push jno repz aam (bad) incl in insl push mov hlt movl imul (bad) mov mov add insb push mov psubd or (bad) (bad) pushl dec in pusha aad jno mov inc aam dec std test (bad) (bad) decl movsl cli test xor (bad) leave mov lods jecxz fdivs jne fild or lods (bad) (bad) call stos lods xor cmp ficom push xlat enter mov and loopne (bad) call xchg mov mov or or and or cli pop jmp dec push sarl jbe jno add std cwtl sub aad mov push movsl in lahf xor mov js mov add mov push loope cs (bad) insl or hlt out push imul insb sbb xor dec (bad) fucomip mov push insb jnp add pmaddwd fnstenv mov ljmp fistp ficoml gs pushl push (bad) aam pop popa mov into sub pop mov aam movsl fisttp mov fsubs rorl jmp outsb xor mov (bad) (bad) jmp sarb add in add pop dec or cmp add daa adc ljmp and and test or mov popa into (bad) (bad) fbld fldcw and xlat (bad) pop cmp mov (bad) (bad) ljmp cmp lods insb mov in mov mov add inc aad scas ja (bad) (bad) (bad) lcall adcl jae or test fs ds or or push in decl (bad) lcall xchg daa scas (bad) mov pop jge xchg (bad) shlb add inc push imul push (bad) (bad) lret mov sbb push imul aam loopne rorl std jp adc dec fnop fistpll fistpll (bad) (bad) decl (bad) (bad) jle shll push repnz addr16 cmpsb fldl mov dec jg jg ss sub fimull ss jp (bad) (bad) (bad) incl out pusha fist addr16 mov jns imul andl shrb ss mov (bad) call ja int3 add mov das es cmp lds or sub mov cmpsl call ret (bad) mov sahf fldcw ret call arpl pushf mov add ss jmp addr16 jb push ljmp incl add adc mov cmp mov fwait mov xchg or (bad) jmp mov fdivrl fisttpl aam roll clc mov push int mov sub mul ja outsl ja mov out jge push cld (bad) decl dec cmp pop or adc sahf gs scas (bad) clc sar imul push js (bad) (bad) jmp or push addl mov cmp cmpsl notl pusha rorb imul xor shrl or inc lock aaa push (bad) (bad) (bad) ljmp mov inc jmp repnz lret mov cmpsb mov (bad) (bad) pushl sarb sub push mov jp mov dec popa les sbb xchg sub aaa out mov (bad) mov or sbb add sub adcb and rclb inc pop pop je xchg inc or mov pop add sub adc loop inc out inc fcoms add pop sub stos xchg push push push push leave test stos stos sub push push push xchg mov xchg push push and stos stos fs sbb xor dec inc push outsl mov cmp add mov push std popa jo gs insb sub add xor add je fimull imul sub or push lds dec and inc (bad) cmp je adc gs mov negb push outsl insb jne sbb adc fwait adc push xorl push pop dec gs and (bad) jae cmpsl (bad) or and jae jbe outsb in inc jne and push push jo ljmp gs fisttpl sbbb dec push inc lea or add push outsl xor popa fbstp inc mov mov inc dec inc push or imul pop dec mov sbb push jb movsl add bound inc mov jae inc outsl push or bound ja fildl push outsb jbe mov insl enter bound frstor push dec loopne pop lds stos ret dec sahf sbb andl mov sub mov data16 xchg push inc pop inc xor adc pop jae frstor fwait dec roll or outsl jne outsl inc arpl jno and jl aam push test cmp aaa sub push mov cmp push mov xchg in push sub jge rolb gs sub outsb sub int3 sbb insl xor mov popa mov sbb aas push ja (bad) in add in jns addl sbb mov add dec popa xor dec dec test ret cwtl nop jbe insb rsqrtps je push outsb ja mov or addr16 push pop imul dec fs outsl test (bad) incl or push mov sbb xor jb push adc inc pop pop sub inc push push mov out lods outsb cmp outsl cltd insl adc cmp adc nop pop xchg dec cmp or inc inc push mov (bad) sbb push mov popa rclb dec push imul popf add movsb outsl daa jne popl jae insb gs dec inc clc and push (bad) and dec inc fs add jecxz nop/reserved inc pusha in push sbb arpl and xchg add mov inc cmp shll popa dec sbb sbb test test pop xor push arpl mov adc adc xchg adc adc test push jne jns add add outsb inc sbb test jbe jns xor les rclb xchg rcr sbb add inc xchg imul and dec lods xor or push or mov add int (bad) loope in push mov mov mov outsb je leave pop ret sub sub mov aaa or jb or lods jne decl inc push loope nop xchg or jle and jo fbld cwtl push shrb movsl inc mov adc jge cmpl je insb inc sarb jo mov or movhps test fmul mov xchg xchg stos inc sub hlt mov rorb sbb xchg push std jo insl jnp sti jb arpl dec mov add les addr16 jl lcall mov outsb mov or test cmove icebp (bad) rorb out pop or (bad) xchg pop adc xlat or jge sti cmp aad jb push and insb fcomps inc arpl imul fwait jmp cli (bad) ja movsb sub push insb pcmpeqw push push es cwtl arpl pop pop mov dec gs pop pop dec gs cmp adc inc insb sub push aaa jnp jo sub lds or and jmp pop fldenv adc push movsl pop adc sbb mov pop sub ret mov and xchg push add gs jecxz cmp imul arpl adcl outsb fs xchg pop inc push jne adc (bad) inc push cmp adc (bad) sbb fcmovnbe imulb jb inc popf divb lret add jecxz inc and je rorb shll insb inc push sbb mov mov pop clc push inc pop push jo aaa sub lret sahf fisttpll es push mov outsl (bad) push fwait xor cwtl outsl jle mov bound mov insb jl and push fwait imul fdivs sub or inc lds in mov xchg add push inc or add adc cwtl outsb in in mov sarl add push in push pop repnz add addl cli pop xchg add mov push adc jmp push cld inc push dec daa stos fs fmull sbb cmp jae inc ret mov lcall call pop popa addr16 lret jp fld1 jo ret sub mov or popa jns (bad) in lds add jo je pop dec xor js inc inc shrl mov xor fs jmp orl pop jbe push jnp pop mov pushf insl pop sbb (bad) imul lods push sbb jmp pop dec movsb sub add adc jae push scas xor dec sbb sbb movsb sbb sti adc xchg or call mov lret mov outsl adc or adc xchg jo push xor add rcrb addr16 movsb push stos pop xorl cmc jo mov add dec adc dec xor pop add loopne add or or jmp insl and adc and adc mov in inc or add pop test mov jbe sysret sti mov inc xlat insb repz sbb aaa mov dec jo add sbb pop or les adc sub mov nop add add pusha cs add add (bad) cs cs testl or fmuls out add jmp sub jle cmp dec sbb addr16 out add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 